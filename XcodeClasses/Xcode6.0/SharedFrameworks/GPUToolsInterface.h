//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct DYRangeValue {
    double value;
    double range;
};

#pragma mark Typedef'd Structures

typedef struct {
    int _field1;
    int _field2;
    struct CGRect _field3;
} CDStruct_0c50b91d;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/SharedFrameworks/GPUToolsInterface.framework/Versions/A/GPUToolsInterface
// UUID: 103DDFAD-C716-31A4-9BF3-AA9C4FB7E7A9
//
//                           Arch: x86_64
//                Current version: 16097.0.0
//          Compatibility version: 1.0.0
//                 Source version: 16097.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface DYRangeSlider : NSControl
{
    DYRangeSliderCell *_sliderCell;
    id _textCell;
    id _rangeEntryMin;
    id _rangeEntryMax;
    BOOL _showMinMax;
    int _infoType;
}

+ (Class)cellClass;
+ (void)initialize;
- (void).cxx_destruct;
- (double)maxExtent;
- (void)setMaxExtent:(double)arg1;
- (double)minExtent;
- (void)setMinExtent:(double)arg1;
- (BOOL)showsRangeAsMinMax;
- (void)setShowRangeAsMinMax:(BOOL)arg1;
- (struct DYRangeValue)rangeValue;
- (void)setRangeValue:(struct DYRangeValue)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)sizeToFit;
- (void)_onUpdate;
- (id)formatDouble:(double)arg1;
- (struct CGRect)_sliderBounds;
- (void)setHUDLook:(BOOL)arg1;
- (BOOL)isFlipped;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)postInitWithOpts:(const CDStruct_0c50b91d *)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DYRangeSliderCell : NSSliderCell
{
    NSImage *_maxKnobImage;
    NSImage *_minKnobImage;
    struct CGRect _drawInFrame;
    struct DYRangeValue _origValue;
    double _trackOffset;
    float _cancelLimit;
    int _activeKnobPart;
    int _trackCount;
    BOOL _tracking;
    NSGradient *_gradient1;
    NSGradient *_gradient2;
    struct DYRangeValue _rangeValue;
}

+ (BOOL)prefersTrackingUntilMouseUp;
@property(nonatomic) struct DYRangeValue rangeValue; // @synthesize rangeValue=_rangeValue;
- (void).cxx_destruct;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawSelfWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawKnob;
- (struct CGRect)_knobRectForPart:(int)arg1 inFrame:(struct CGRect)arg2 flipped:(BOOL)arg3;
- (struct CGRect)knobRectFlipped:(BOOL)arg1;
- (long long)isVertical;
- (struct CGSize)cellSizeForBounds:(struct CGRect)arg1;
- (struct CGRect)getBarBounds:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (id)objectValue;
- (id)stringValue;
- (id)description;
@property(nonatomic) double maxExtent; // @dynamic maxExtent;
@property(nonatomic) double minExtent; // @dynamic minExtent;
- (void)postInitWithOpts:(const CDStruct_0c50b91d *)arg1;
- (id)init;

@end

@interface NSImage (DYNSImageAdditions)
+ (void)dy_writeRGBADataToTiffFile:(const char *)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 name:(id)arg4;
+ (void)dy_writetoTiffFile:(id)arg1 name:(id)arg2;
+ (id)dy_imageWithData:(const char *)arg1 width:(unsigned long long)arg2 height:(unsigned long long)arg3 hasAlpha:(BOOL)arg4;
+ (id)dy_imageNamed:(id)arg1 inBundleForClass:(Class)arg2;
+ (id)dy_imageNamed:(id)arg1 inBundle:(id)arg2;
- (id)dy_encodeAsPNG:(id *)arg1;
@end

