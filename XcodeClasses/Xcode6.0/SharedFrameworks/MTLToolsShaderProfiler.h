//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned short _field5;
    unsigned short _field6;
};

struct CoreFunction {
    unsigned int _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    union {
        unsigned long long _field1;
        unsigned long long _field2;
    } _field5;
    struct Argument _field6;
    struct Argument _field7[16];
    unsigned int _field8;
    unsigned int _field9;
    void *_field10;
    void *_field11;
};

struct Function {
    struct CoreFunction _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long *_field4;
    unsigned short _field5;
    unsigned short _field6;
    int _field7;
    void *_field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned long long _field11;
    unsigned long long _field12;
    struct Function *_field13;
    void *_field14;
};

struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> _objectMap;
};

struct PassthroughBase {
    struct function<void *(const char *, unsigned long *)> LoadURLData;
};

struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _deviceMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _layerMap;
    struct PassthroughBase _passthrough;
    int _lastFunctionIndex;
};

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>;

struct __hash_node<unsigned long long, void *>;

struct function<void *(const char *, unsigned long *)> {
    struct type __buf_;
    struct __base<void *(const char *, unsigned long *)> *__f_;
};

struct type {
    unsigned char __lx[24];
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<unsigned long long, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> {
        struct __hash_node<unsigned long long, void *> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unordered_map<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::shared_ptr<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float _field1;
        } _field4;
    } _field1;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct StateMirrorManager<GPUTools::SM::MTL::DefaultBaseObjectTypes> {
    struct unordered_map<unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::unique_ptr<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>, std::__1::default_delete<GPUTools::SM::MTL::Device<GPUTools::SM::MTL::DefaultBaseObjectTypes>>>>>> _deviceMap;
    struct ObjectTrackingMap<GPUTools::SM::MTL::Layer<GPUTools::SM::MTL::DefaultBaseObjectTypes>, unsigned long long> _layerMap;
    struct PassthroughBase _passthrough;
    int _lastFunctionIndex;
} StateMirrorManager_e0060c49;

typedef struct unordered_set<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __hash_table<unsigned long long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct unique_ptr<std::__1::__hash_node<unsigned long long, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<unsigned long long, void *>*>, std::__1::allocator<std::__1::__hash_node<unsigned long long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<unsigned long long, void *>*> {
                struct __hash_node<unsigned long long, void *> *_field1;
            } _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<unsigned long long>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_set_febeaddf;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/SharedFrameworks/MTLToolsShaderProfiler.framework/Versions/A/MTLToolsShaderProfiler
// UUID: 02AD6D96-E826-3A95-87B7-4FCC5ED8C3F9
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 16046.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface DYMTLShaderProfiler : DYShaderProfiler
{
}

+ (BOOL)isDisassemblerAvailable;
+ (id)newShaderProfilerWithDelegate:(id)arg1;
- (void)_preProcessUSCSampleData:(id)arg1 result:(id)arg2;
- (id)_gatherStaticInformation;
- (id)_constructPayload;
- (id)profileShader:(id)arg1;
- (void)initializeShaderAnalyzer;

// Remaining properties
@property(readonly, nonatomic) __weak id <DYShaderProfilerDelegate> delegate;

@end

@interface DYMTLShaderProfilerResult : DYShaderProfilerResult
{
}

- (id)perLineInfoForDocumentURL:(id)arg1 withLibraryIdSet:(unordered_set_febeaddf *)arg2 atFunctionIndex:(unsigned int)arg3;
- (void)_dividePerLineCost:(id)arg1 by:(double)arg2;
- (void)_addPerLineCost:(id)arg1 to:(id)arg2;

@end

@interface DYMTLShaderProfilerShaderInfo : DYShaderProfilerShaderInfo
{
    unsigned long long _libraryId;
}

@property(nonatomic) unsigned long long libraryId; // @synthesize libraryId=_libraryId;
- (id)initWithLibraryId:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface FunctionVisitor : DYInOrderInstructionFilesVisitor
{
    BOOL _processingCaptureFile;
    CDUnknownBlockType _block;
    unsigned int _archiveFunctionIndex;
    unsigned int _fileFunctionIndex;
    DYCaptureArchive *_archive;
    DYCaptureFile *_file;
    const struct Function *_function;
    StateMirrorManager_e0060c49 _stateMirrorManager;
}

@property(readonly, nonatomic) unsigned int fileFunctionIndex; // @synthesize fileFunctionIndex=_fileFunctionIndex;
@property(readonly, nonatomic) unsigned int archiveFunctionIndex; // @synthesize archiveFunctionIndex=_archiveFunctionIndex;
@property(readonly, nonatomic) const struct Function *function; // @synthesize function=_function;
@property(readonly, nonatomic) DYCaptureFile *file; // @synthesize file=_file;
@property(readonly, nonatomic) DYCaptureArchive *archive; // @synthesize archive=_archive;
@property(readonly, nonatomic) StateMirrorManager_e0060c49 *stateMirrorManager; // @synthesize stateMirrorManager=_stateMirrorManager;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)visitFunctionStreamFile:(id)arg1;
- (void)visitCaptureArchive:(id)arg1;
- (void)setFunctionProcessor:(CDUnknownBlockType)arg1;

@end

