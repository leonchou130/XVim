//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/SharedFrameworks/DVTSourceControl.framework/Versions/A/DVTSourceControl
// UUID: BD037792-7A4F-3351-9B17-601DACB701EF
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6064.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTSourceControlCancellable <NSObject>
- (void)cancel;
@end

@protocol DVTSourceControlDisplayable <NSObject>
+ (NSImage *)defaultImage;
@property(readonly) NSString *displayName;
@end

@protocol DVTSourceControlIdentifiable <NSObject>
@property(copy) NSString *_id;
@end

@protocol DVTSourceControlPlugInCallbackProtocol <NSObject>
- (void)progressStatus:(int)arg1 withDictionary:(NSDictionary *)arg2;
@end

@protocol DVTSourceControlPlugInProtocol <NSObject>
- (void)createWorkingCopyFromRepository:(DVTSourceControlRemoteRepository *)arg1 location:(DVTSourceControlRevisionLocation *)arg2 branchAndTagLocations:(DVTSourceControlBranchAndTagLocations *)arg3 localAddress:(NSURL *)arg4 completionBlock:(void (^)(DVTSourceControlWorkingCopy *, NSError *))arg5;
- (void)validateAuthenticationOfRemoteRepository:(DVTSourceControlRemoteRepository *)arg1 location:(DVTSourceControlRevisionLocation *)arg2 branchAndTagLocations:(DVTSourceControlBranchAndTagLocations *)arg3 completionBlock:(void (^)(NSError *))arg4;
- (void)addRemoteRepository:(DVTSourceControlRemoteRepository *)arg1 withName:(NSString *)arg2 toRepository:(DVTSourceControlRepository *)arg3 completionBlock:(void (^)(NSError *))arg4;
- (void)remoteBranchFromRepository:(DVTSourceControlRepository *)arg1 forBranch:(DVTSourceControlBranch *)arg2 completionBlock:(void (^)(DVTSourceControlBranch *, NSString *, NSError *))arg3;
- (void)listRemoteRepositoriesForRepository:(DVTSourceControlRepository *)arg1 completionBlock:(void (^)(DVTSourceControlRemoteRepository *, NSDictionary *, NSError *))arg2;
- (void)listBranchesOfRepository:(DVTSourceControlRepository *)arg1 branchAndTagLocations:(DVTSourceControlBranchAndTagLocations *)arg2 completionBlock:(void (^)(NSArray *, NSError *))arg3;
- (void)revisionOfLocation:(DVTSourceControlRevisionLocation *)arg1 inRepository:(DVTSourceControlRepository *)arg2 branchAndTagLocations:(DVTSourceControlBranchAndTagLocations *)arg3 completionBlock:(void (^)(DVTSourceControlRevision *, NSError *))arg4;
- (void)headRevisionOfRepository:(DVTSourceControlRepository *)arg1 completionBlock:(void (^)(DVTSourceControlRevision *, NSError *))arg2;
- (void)identifierOfRepositoryForWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 completionBlock:(void (^)(NSString *, NSError *))arg2;
- (void)upgradeWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 completionBlock:(void (^)(NSError *))arg2;
- (void)baseRevisionOfWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 completionBlock:(void (^)(DVTSourceControlRevision *, NSError *))arg2;
- (void)currentLocationOfWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 completionBlock:(void (^)(DVTSourceControlRevisionLocation *, NSError *))arg2;
- (void)historyOfWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 fromRevision:(DVTSourceControlRevision *)arg2 toRevision:(DVTSourceControlRevision *)arg3 maximumLogItems:(long long)arg4 completionBlock:(void (^)(NSArray *, NSError *))arg5;
- (void)forceUpdateWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 fromRepository:(DVTSourceControlRemoteRepository *)arg2 completionBlock:(void (^)(NSError *))arg3;
- (void)filesAndStatusOfWorkingCopy:(DVTSourceControlWorkingCopy *)arg1 withRemoteStatus:(BOOL)arg2 completionBlock:(void (^)(NSDictionary *, NSDictionary *, NSError *))arg3;
- (void)scanForWorkingCopiesInPotentialWorkingCopies:(NSArray *)arg1 completionBlock:(void (^)(NSArray *))arg2;
- (void)scanForWorkingCopiesInFolderPaths:(NSArray *)arg1 traversingUp:(BOOL)arg2 completionBlock:(void (^)(NSArray *))arg3;
- (void)sourceControlSystemWithCompletionBlock:(void (^)(DVTSourceControlSystem *))arg1;
@end

@protocol DVTSourceControlSSHKeyGeneratorProtocol <NSObject>
- (void)uploadPublicSSHKeyFromFolder:(NSURL *)arg1 toServer:(NSURL *)arg2 forUsername:(NSString *)arg3 completionBlock:(void (^)(NSError *))arg4;
- (void)generateSSHKeysWithPassphrase:(NSString *)arg1 inFolder:(NSURL *)arg2 completionBlock:(void (^)(DVTSourceControlSSHKeysAuthenticationStrategy *, NSError *))arg3;
@end

@protocol DVTSourceControlSerializable <NSObject>
- (NSDictionary *)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(NSDictionary *)arg1;
@end

@protocol DVTSourceControlWorkingCopyScannerProtocol
- (void)scanFolderPaths:(NSArray *)arg1 traversingUp:(BOOL)arg2 workingCopyIdentifiers:(NSSet *)arg3 completionBlock:(void (^)(NSArray *))arg4;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@interface DVTSourceControlAuthenticationStrategy : NSObject <NSSecureCoding, NSCopying>
{
}

+ (id)sharedAnonymousStrategy;
+ (BOOL)supportsSecureCoding;
+ (Class)viewControllerClass;
+ (BOOL)strategyIsValidForURL:(id)arg1;
+ (id)name;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_init;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlAuthor : NSObject <NSSecureCoding>
{
    NSString *_pairedUUID;
    ABPerson *_cachedPairedPerson;
    NSNotification *_lastSeenNotification;
    NSString *_name;
    NSString *_displayName;
    NSArray *_emails;
    NSURL *_imageURL;
}

+ (BOOL)supportsSecureCoding;
@property(retain) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain) NSArray *emails; // @synthesize emails=_emails;
@property(retain) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(retain) ABPerson *pairedPerson;
@property(retain) NSString *pairedUUID;
- (void)abDatabaseChangedNotification:(id)arg1;
- (id)_emailsFromPerson:(id)arg1;
- (id)_arrayFromABMultiValue:(id)arg1;
- (id)_displayNameFromPerson:(id)arg1;
- (id)_imageFromPerson:(id)arg1;
- (id)description;
- (id)initWithPairedAddressBookPerson:(id)arg1;
- (id)initWithUsername:(id)arg1 email:(id)arg2;
- (id)initWithUsername:(id)arg1 displayName:(id)arg2 emails:(id)arg3 imageURL:(id)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlBasicAuthenticationStrategy : DVTSourceControlAuthenticationStrategy
{
    BOOL _usernameDefinedFromURL;
    BOOL _passwordDefinedFromURL;
    NSString *_username;
    NSString *_password;
}

+ (BOOL)supportsSecureCoding;
+ (BOOL)strategyIsValidForURL:(id)arg1;
+ (id)name;
@property(copy) NSString *password; // @synthesize password=_password;
@property BOOL passwordDefinedFromURL; // @synthesize passwordDefinedFromURL=_passwordDefinedFromURL;
@property(copy) NSString *username; // @synthesize username=_username;
@property BOOL usernameDefinedFromURL; // @synthesize usernameDefinedFromURL=_usernameDefinedFromURL;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURLDefinedUsername:(id)arg1 URLDefinedPassword:(id)arg2;
- (id)initWithURLDefinedUsername:(id)arg1 password:(id)arg2;
- (id)initWithUsername:(id)arg1 password:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlRevisionLocation : NSObject <DVTSourceControlDisplayable, DVTSourceControlSerializable, NSSecureCoding, NSCopying>
{
    DVTSourceControlRevision *_revision;
}

+ (BOOL)supportsSecureCoding;
+ (id)defaultImage;
@property(copy) DVTSourceControlRevision *revision; // @synthesize revision=_revision;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly) NSString *displayName;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRevision:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlBranch : DVTSourceControlRevisionLocation
{
    unsigned long long _options;
    NSString *_identifier;
}

+ (BOOL)supportsSecureCoding;
+ (id)defaultImage;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property unsigned long long options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)description;
@property(readonly, getter=isRemoteBranch) BOOL remoteBranch;
@property(readonly, getter=isNewBranch) BOOL newBranch;
@property(readonly, getter=isPrimaryBranch) BOOL primaryBranch;
- (id)pathLocationForBranchAndTagLocations:(id)arg1;
@property(readonly) NSString *name;
- (id)displayName;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNewBranchName:(id)arg1 remoteBranch:(BOOL)arg2;
- (id)initWithBranchPathLocation:(id)arg1 branchAndTagLocations:(id)arg2 remoteBranch:(BOOL)arg3;
- (id)initWithBranchName:(id)arg1 primaryBranch:(BOOL)arg2 remoteBranch:(BOOL)arg3;
- (id)_init;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlBranchAndTagLocations : NSObject <DVTSourceControlSerializable, NSSecureCoding, NSCopying>
{
    DVTSourceControlPathLocation *_relativePrimaryBranchLocation;
    DVTSourceControlPathLocation *_relativeBranchesLocation;
    DVTSourceControlPathLocation *_relativeTagsLocation;
}

+ (BOOL)supportsSecureCoding;
+ (id)locationsWithPrimaryBranchPath:(id)arg1 branchesPath:(id)arg2 tagsPath:(id)arg3;
+ (id)locationsWithStandardLayout;
@property(copy) DVTSourceControlPathLocation *relativeTagsLocation; // @synthesize relativeTagsLocation=_relativeTagsLocation;
@property(copy) DVTSourceControlPathLocation *relativeBranchesLocation; // @synthesize relativeBranchesLocation=_relativeBranchesLocation;
@property(copy) DVTSourceControlPathLocation *relativePrimaryBranchLocation; // @synthesize relativePrimaryBranchLocation=_relativePrimaryBranchLocation;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlLockedRevisionLocation : DVTSourceControlRevisionLocation
{
}

+ (BOOL)supportsSecureCoding;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;

@end

@interface DVTSourceControlLogItem : NSObject <NSSecureCoding>
{
    DVTSourceControlAuthor *_author;
    DVTSourceControlRevision *_revision;
    NSDate *_date;
    NSString *_message;
    NSDictionary *_pathsWithStatus;
    DVTSourceControlWorkingCopy *_workingCopy;
}

+ (id)sharedUnversionedLogItem;
+ (BOOL)supportsSecureCoding;
@property(retain) DVTSourceControlWorkingCopy *workingCopy; // @synthesize workingCopy=_workingCopy;
@property(retain) NSDictionary *pathsWithStatus; // @synthesize pathsWithStatus=_pathsWithStatus;
@property(retain) NSString *message; // @synthesize message=_message;
@property(retain) NSDate *date; // @synthesize date=_date;
@property(retain) DVTSourceControlRevision *revision; // @synthesize revision=_revision;
@property(retain) DVTSourceControlAuthor *author; // @synthesize author=_author;
- (void).cxx_destruct;
@property(readonly) NSString *identifier;
- (id)description;
@property(readonly, getter=isUnversionedLogItem) BOOL unversionedLogItem;
- (id)initWithAuthor:(id)arg1 revision:(id)arg2 date:(id)arg3 message:(id)arg4 pathsWithStatus:(id)arg5 workingCopy:(id)arg6;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlManager : NSObject <DVTSourceControlPlugInCallbackProtocol>
{
    NSXPCConnection *_sshKeyGeneratorConnection;
    NSXPCConnection *_workingCopyScannerConnection;
    NSOperationQueue *_sourceControlOperationQueue;
    DVTSourceControlOperation *_currentOperation;
    NSMutableDictionary *_plugInConntections;
    NSSet *_cachedSourceControlSystems;
}

+ (id)sharedInstance;
@property(retain) NSSet *cachedSourceControlSystems; // @synthesize cachedSourceControlSystems=_cachedSourceControlSystems;
- (void).cxx_destruct;
- (id)createWorkingCopyFromRepository:(id)arg1 atURL:(id)arg2 location:(id)arg3 branchAndTagLocations:(id)arg4 progressBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (id)validateAuthenticationOfRepository:(id)arg1 location:(id)arg2 branchAndTagLocations:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)addRemoteRepository:(id)arg1 withName:(id)arg2 toRepository:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)remoteBranchFromRepository:(id)arg1 forBranch:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)listRemoteRepositoriesForRepository:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)listBranchesOfRepository:(id)arg1 branchAndTagLocations:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)revisionOfLocation:(id)arg1 inRepository:(id)arg2 branchAndTagLocations:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)headRevisionOfRepository:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)updateIdentifierOfRepositoryForWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)upgradeWorkingCopy:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)baseRevisionOfWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)currentLocationOfWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)historyOfWorkingCopy:(id)arg1 fromRevision:(id)arg2 toRevision:(id)arg3 maximumLogItems:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)forceUpdateWorkingCopy:(id)arg1 fromRepository:(id)arg2 progressBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)filesAndStatusOfWorkingCopy:(id)arg1 withRemoteStatus:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)progressStatus:(int)arg1 withDictionary:(id)arg2;
- (id)_plugInConntectionForPlugInIdentifier:(id)arg1;
- (id)remoteProxyObjectForPlugInIdentifier:(id)arg1;
- (id)remoteProxyObjectForSourceControlSystem:(id)arg1;
- (id)remoteProxyObjectForWorkingCopyScanning;
- (id)remoteProxyObjectForSSHKeyGeneration;
- (id)uploadPublicSSHKeyFromFolder:(id)arg1 toServer:(id)arg2 forUsername:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)generateSSHKeysWithPassphrase:(id)arg1 inFolder:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)scanForWorkingCopiesInFolderPaths:(id)arg1 traversingUp:(BOOL)arg2 usingSourceControlSystems:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)systemWithIdentifer:(id)arg1;
- (id)sourceControlSystemsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)_allPlugInIdentifiers;
- (void)operationDidFinish;
- (void)setCurrentOperation:(id)arg1;
- (void)cancelAllOperations;
- (void)addOperation:(id)arg1;
- (id)_init;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlMultiCancellable : NSBlockOperation <DVTSourceControlCancellable>
{
    id <DVTSourceControlCancellable> _currentCancelable;
}

@property(retain) id <DVTSourceControlCancellable> currentCancelable; // @synthesize currentCancelable=_currentCancelable;
- (void).cxx_destruct;
- (void)cancel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlOperation : NSOperation <DVTSourceControlCancellable>
{
    BOOL _isExecuting;
    BOOL _isFinished;
    CDUnknownBlockType _operationBlock;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _terminationBlock;
    DVTSourceControlManager *_sourceControlManager;
}

@property(retain, nonatomic) DVTSourceControlManager *sourceControlManager; // @synthesize sourceControlManager=_sourceControlManager;
@property(copy) CDUnknownBlockType terminationBlock; // @synthesize terminationBlock=_terminationBlock;
@property(copy) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(copy) CDUnknownBlockType operationBlock; // @synthesize operationBlock=_operationBlock;
- (void).cxx_destruct;
- (void)finish;
- (void)start;
- (BOOL)isFinished;
- (BOOL)isExecuting;
- (id)initWithSourceControlManager:(id)arg1 operationBlock:(CDUnknownBlockType)arg2 terminationBlock:(CDUnknownBlockType)arg3;
- (id)initWithSourceControlManager:(id)arg1 operationBlock:(CDUnknownBlockType)arg2 progressBlock:(CDUnknownBlockType)arg3 terminationBlock:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlPathLocation : DVTSourceControlRevisionLocation
{
    NSString *_relativePath;
}

+ (BOOL)supportsSecureCoding;
+ (id)defaultImage;
@property(retain) NSString *relativePath; // @synthesize relativePath=_relativePath;
- (void).cxx_destruct;
- (id)description;
- (id)displayName;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)pathLocationByAppendingPath:(id)arg1;
- (id)initWithRelativePath:(id)arg1;
- (id)_init;
- (id)initWithRevision:(id)arg1;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlPlugInPrimary : NSObject <DVTSourceControlPlugInProtocol>
{
    double _lastProgressValueSent;
}

- (void)createWorkingCopyFromRepository:(id)arg1 location:(id)arg2 branchAndTagLocations:(id)arg3 localAddress:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)validateAuthenticationOfRemoteRepository:(id)arg1 location:(id)arg2 branchAndTagLocations:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)addRemoteRepository:(id)arg1 withName:(id)arg2 toRepository:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)remoteBranchFromRepository:(id)arg1 forBranch:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)listRemoteRepositoriesForRepository:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)listBranchesOfRepository:(id)arg1 branchAndTagLocations:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)revisionOfLocation:(id)arg1 inRepository:(id)arg2 branchAndTagLocations:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)headRevisionOfRepository:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)identifierOfRepositoryForWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)upgradeWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)baseRevisionOfWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)currentLocationOfWorkingCopy:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)historyOfWorkingCopy:(id)arg1 fromRevision:(id)arg2 toRevision:(id)arg3 maximumLogItems:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)forceUpdateWorkingCopy:(id)arg1 fromRepository:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)filesAndStatusOfWorkingCopy:(id)arg1 withRemoteStatus:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)scanForWorkingCopiesInPotentialWorkingCopies:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)scanForWorkingCopiesInFolderPaths:(id)arg1 traversingUp:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)sourceControlSystemWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)setProgressStatus:(int)arg1 progressValue:(double)arg2 userReadableString:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlRepository : NSObject <DVTSourceControlIdentifiable, NSSecureCoding, NSCopying>
{
    NSString *__id;
    NSURL *_URL;
    NSString *_identifier;
    DVTSourceControlSystem *_sourceControlSystem;
    NSDictionary *_cachedRemoteRepositories;
    DVTSourceControlRemoteRepository *_primaryRemoteRepository;
    DVTSourceControlRevision *_cachedHeadRevision;
    NSArray *_cahcedBranches;
    NSArray *_cachedTags;
}

+ (BOOL)supportsSecureCoding;
@property(readonly) NSArray *cachedTags; // @synthesize cachedTags=_cachedTags;
@property(readonly) NSArray *cahcedBranches; // @synthesize cahcedBranches=_cahcedBranches;
@property(readonly) DVTSourceControlRevision *cachedHeadRevision; // @synthesize cachedHeadRevision=_cachedHeadRevision;
@property(readonly) DVTSourceControlRemoteRepository *primaryRemoteRepository; // @synthesize primaryRemoteRepository=_primaryRemoteRepository;
@property(readonly) NSDictionary *cachedRemoteRepositories; // @synthesize cachedRemoteRepositories=_cachedRemoteRepositories;
@property(retain) DVTSourceControlSystem *sourceControlSystem; // @synthesize sourceControlSystem=_sourceControlSystem;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain) NSURL *URL; // @synthesize URL=_URL;
@property(copy) NSString *_id; // @synthesize _id=__id;
- (void).cxx_destruct;
- (id)addRemoteRepository:(id)arg1 withName:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)remoteBranchForBranch:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)listRemoteRepositoriesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)listBranchesForBranchAndTagLocations:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)listBranchesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)revisionOfLocation:(id)arg1 branchAndTagLocations:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)headRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURL:(id)arg1 identifier:(id)arg2 sourceControlSystem:(id)arg3;
- (id)initWithURL:(id)arg1 sourceControlSystem:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)__id;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlRemoteRepository : DVTSourceControlRepository
{
    BOOL _trustSelfSignedCert;
    DVTSourceControlAuthenticationStrategy *_authenticationStrategy;
    unsigned long long _state;
}

+ (BOOL)supportsSecureCoding;
@property BOOL trustSelfSignedCert; // @synthesize trustSelfSignedCert=_trustSelfSignedCert;
@property unsigned long long state; // @synthesize state=_state;
- (void).cxx_destruct;
@property(retain) DVTSourceControlAuthenticationStrategy *authenticationStrategy; // @synthesize authenticationStrategy=_authenticationStrategy;
- (id)createWorkingCopyAtURL:(id)arg1 location:(id)arg2 branchAndTagLocations:(id)arg3 progressBlock:(CDUnknownBlockType)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)validateAuthenticationForLocation:(id)arg1 branchAndTagLocations:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly) NSURL *anonymousURL;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURL:(id)arg1 identifier:(id)arg2 sourceControlSystem:(id)arg3 authenticationStrategy:(id)arg4;
- (id)initWithURL:(id)arg1 sourceControlSystem:(id)arg2 authenticationStrategy:(id)arg3;
- (id)initWithURL:(id)arg1 sourceControlSystem:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlRevision : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_identifier;
}

+ (id)sharedInitialRevision;
+ (id)sharedBaseRevision;
+ (id)sharedHeadRevision;
+ (id)sharedUnversionedRevision;
+ (BOOL)supportsSecureCoding;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, getter=isUnversionedRevision) BOOL unversionedRevision;
- (id)description;
- (id)initWithIdentifier:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlSSHKeysAuthenticationStrategy : DVTSourceControlAuthenticationStrategy
{
    BOOL _usernameDefinedFromURL;
    NSString *_username;
    NSURL *_privateKeyFile;
    NSString *_privateKeyPassword;
}

+ (BOOL)supportsSecureCoding;
+ (id)defaultSSHKeyAuthenticationStrategy;
+ (id)generateNewKeysInFolder:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (id)generateNewKeysWithPassword:(id)arg1 inFolder:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (BOOL)strategyIsValidForURL:(id)arg1;
+ (id)name;
@property(copy) NSString *privateKeyPassword; // @synthesize privateKeyPassword=_privateKeyPassword;
@property(retain) NSURL *privateKeyFile; // @synthesize privateKeyFile=_privateKeyFile;
@property(copy) NSString *username; // @synthesize username=_username;
@property BOOL usernameDefinedFromURL; // @synthesize usernameDefinedFromURL=_usernameDefinedFromURL;
- (void).cxx_destruct;
@property(readonly) NSURL *keyDirectory;
@property(readonly) NSURL *publicKeyFile;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURLDefinedUsername:(id)arg1 privateKey:(id)arg2 password:(id)arg3;
- (id)initWithUsername:(id)arg1 publicKeyData:(id)arg2 privateKeyData:(id)arg3 password:(id)arg4 sshKeyDirectory:(id)arg5;
- (id)initWithUsername:(id)arg1 privateKey:(id)arg2 password:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlSystem : NSObject <NSSecureCoding>
{
    BOOL _supportsMultipleRemoteRepositories;
    BOOL _hasLocalRepository;
    BOOL _repositoriesAreBrowsable;
    BOOL _supportsPartialWorkingCopies;
    BOOL _requiresLocationsForBranchesAndTags;
    BOOL _isLegacyPlugIn;
    NSString *_name;
    NSString *_version;
    NSString *_workingCopyFolderIdentifier;
    NSString *_plugInIdentifier;
    NSString *_nonLegacyIdentifier;
}

+ (BOOL)supportsSecureCoding;
+ (id)sourceControlSystemsWithCompletionBlock:(CDUnknownBlockType)arg1;
+ (id)cachedSourceControlSystems;
+ (id)systemWithIdentifier:(id)arg1;
@property(copy) NSString *nonLegacyIdentifier; // @synthesize nonLegacyIdentifier=_nonLegacyIdentifier;
@property(readonly) BOOL isLegacyPlugIn; // @synthesize isLegacyPlugIn=_isLegacyPlugIn;
@property(copy) NSString *plugInIdentifier; // @synthesize plugInIdentifier=_plugInIdentifier;
@property BOOL requiresLocationsForBranchesAndTags; // @synthesize requiresLocationsForBranchesAndTags=_requiresLocationsForBranchesAndTags;
@property BOOL supportsPartialWorkingCopies; // @synthesize supportsPartialWorkingCopies=_supportsPartialWorkingCopies;
@property BOOL repositoriesAreBrowsable; // @synthesize repositoriesAreBrowsable=_repositoriesAreBrowsable;
@property BOOL hasLocalRepository; // @synthesize hasLocalRepository=_hasLocalRepository;
@property BOOL supportsMultipleRemoteRepositories; // @synthesize supportsMultipleRemoteRepositories=_supportsMultipleRemoteRepositories;
@property(retain) NSString *workingCopyFolderIdentifier; // @synthesize workingCopyFolderIdentifier=_workingCopyFolderIdentifier;
@property(retain) NSString *version; // @synthesize version=_version;
@property(retain) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
@property(readonly, getter=isUsable) BOOL usable;
- (BOOL)isIsLegacyPlugIn;
- (id)initWithName:(id)arg1 plugInIdentifier:(id)arg2 version:(id)arg3 legacyPlugInForIdentifier:(id)arg4 workingCopyFolderIdentifier:(id)arg5 supportsMultipleRemoteRepositories:(BOOL)arg6 hasLocalRepository:(BOOL)arg7 repositoriesAreBrowsable:(BOOL)arg8 supportsPartialWorkingCopies:(BOOL)arg9 requiresLocationsForBranchesAndTags:(BOOL)arg10;
- (id)initWithName:(id)arg1 plugInIdentifier:(id)arg2 version:(id)arg3 workingCopyFolderIdentifier:(id)arg4 supportsMultipleRemoteRepositories:(BOOL)arg5 hasLocalRepository:(BOOL)arg6 repositoriesAreBrowsable:(BOOL)arg7 supportsPartialWorkingCopies:(BOOL)arg8 requiresLocationsForBranchesAndTags:(BOOL)arg9;
- (id)_init;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly) NSString *pluginIdentifier;

@end

@interface DVTSourceControlSystemPlaceholder : DVTSourceControlSystem
{
}

+ (BOOL)supportsSecureCoding;
- (id)description;
- (BOOL)isUsable;
- (id)initWithPlugInIdentifier:(id)arg1;

@end

@interface DVTSourceControlTag : DVTSourceControlRevisionLocation
{
    unsigned long long _options;
    NSString *_identifier;
}

+ (BOOL)supportsSecureCoding;
+ (id)defaultImage;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property unsigned long long options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)description;
@property(readonly, getter=isNewTag) BOOL newTag;
- (id)pathLocationForBranchAndTagLocations:(id)arg1;
@property(readonly) NSString *name;
- (id)displayName;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNewTagName:(id)arg1;
- (id)initWithTagPathLocation:(id)arg1 branchAndTagLocations:(id)arg2;
- (id)initWithTagName:(id)arg1;
- (id)_init;
- (id)init;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DVTSourceControlWorkingCopy : NSObject <DVTSourceControlIdentifiable, NSSecureCoding>
{
    NSMutableSet *_cachedRemoteRepositories;
    BOOL _needsUpgrade;
    NSString *__id;
    NSURL *_fileURL;
    DVTSourceControlRepository *_repository;
    DVTSourceControlBranchAndTagLocations *_branchAndTagLocations;
    unsigned long long _state;
    DVTSourceControlRevision *_cachedBaseRevision;
    DVTSourceControlRevisionLocation *_cachedCurrentLocation;
    DVTSourceControlRemoteRepository *_primaryRemoteRepository;
}

+ (BOOL)supportsSecureCoding;
+ (id)scanForWorkingCopiesInFolderPaths:(id)arg1 traversingUp:(BOOL)arg2 usingSourceControlSystems:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
@property(readonly) DVTSourceControlRemoteRepository *primaryRemoteRepository; // @synthesize primaryRemoteRepository=_primaryRemoteRepository;
@property(retain) DVTSourceControlRevisionLocation *cachedCurrentLocation; // @synthesize cachedCurrentLocation=_cachedCurrentLocation;
@property(retain) DVTSourceControlRevision *cachedBaseRevision; // @synthesize cachedBaseRevision=_cachedBaseRevision;
@property BOOL needsUpgrade; // @synthesize needsUpgrade=_needsUpgrade;
@property unsigned long long state; // @synthesize state=_state;
@property(retain) DVTSourceControlBranchAndTagLocations *branchAndTagLocations; // @synthesize branchAndTagLocations=_branchAndTagLocations;
@property(retain) DVTSourceControlRepository *repository; // @synthesize repository=_repository;
@property(retain) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(copy) NSString *_id; // @synthesize _id=__id;
- (void).cxx_destruct;
- (id)upgradeWithProgressBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)baseRevisionWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)currentLocationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)historyFromRevision:(id)arg1 toRevision:(id)arg2 maximumLogItems:(long long)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)forceUpdateWorkingCopyFromRepository:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)filesAndStatusWithRemoteStatus:(BOOL)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)updateRepositoryIdentifierWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (id)initWithUpgradableFileURL:(id)arg1 repository:(id)arg2;
- (id)initWithFileURL:(id)arg1 repository:(id)arg2 locationInRepository:(id)arg3 branchAndTagLocations:(id)arg4;
- (id)initWithFileURL:(id)arg1 repository:(id)arg2 locationInRepository:(id)arg3;
- (id)initWithFileURL:(id)arg1 unidentifiableRepository:(id)arg2;
- (id)initWithFileURL:(id)arg1 repository:(id)arg2;
- (id)_initWithFileURL:(id)arg1 repository:(id)arg2 enforceRepositoryIdentifier:(BOOL)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)__id;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlWorkspace : NSObject <DVTSourceControlIdentifiable>
{
    NSMutableOrderedSet *_workingCopies;
    NSOperationQueue *_workspaceOperationQueue;
    NSString *__id;
    DVTSourceControlWorkingCopy *_primaryWorkingCopy;
    NSString *_relativePathToProject;
}

@property(copy) NSString *relativePathToProject; // @synthesize relativePathToProject=_relativePathToProject;
@property(retain) DVTSourceControlWorkingCopy *primaryWorkingCopy; // @synthesize primaryWorkingCopy=_primaryWorkingCopy;
@property(copy) NSString *_id; // @synthesize _id=__id;
- (void).cxx_destruct;
- (id)blueprintWithRemoteRepositories:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)workingCopiesMissingFromBlueprint:(id)arg1;
- (unsigned long long)compareToBlueprint:(id)arg1;
- (id)blueprintWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)filesAndStatusWithRemoteStatus:(BOOL)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)historySinceRevisionedBlueprint:(id)arg1 maximumLogItems:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)workingCopyForRemoteRepository:(id)arg1 inBlueprint:(id)arg2;
- (id)historyFromRevisions:(id)arg1 toRevisions:(id)arg2 maximumLogItems:(long long)arg3 completionBlock:(CDUnknownBlockType)arg4;
@property(readonly) NSMapTable *initialRevisionsMapTable;
@property(readonly) NSMapTable *baseRevisionsMapTable;
- (id)_revisionTableWithRevison:(id)arg1;
- (id)forceUpdateWorkingCopiesFromBlueprint:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)forceUpdateWorkingCopiesFromRepositories:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)workingCopyForRepositoryID:(id)arg1;
- (id)workingCopyForURL:(id)arg1;
- (id)initWithPrimaryWorkingCopy:(id)arg1 relativePathToProject:(id)arg2 workingCopies:(id)arg3;
- (id)initWithWorkingCopies:(id)arg1;
- (id)init;
- (void)sortWorkingCopies;
@property(readonly) NSOrderedSet *workingCopies;
- (BOOL)_isValid;
- (id)__id;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTSourceControlWorkspaceBlueprint : NSObject <DVTSourceControlIdentifiable, DVTSourceControlSerializable, NSCopying>
{
    NSOperationQueue *_blueprintOperationQueue;
    BOOL _favorite;
    NSString *__id;
    DVTSourceControlRemoteRepository *_primaryRemoteRepository;
    NSString *_relativePathToProject;
    NSOrderedSet *_remoteRepositories;
    NSMapTable *_workingCopyStates;
    NSMapTable *_workingCopyPaths;
    NSMapTable *_workingCopyRepositoryLocations;
    NSMapTable *_locations;
    NSString *_name;
}

+ (BOOL)validateDictionary:(id)arg1;
@property(getter=isFavorite) BOOL favorite; // @synthesize favorite=_favorite;
@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSMapTable *locations; // @synthesize locations=_locations;
@property(retain) NSMapTable *workingCopyRepositoryLocations; // @synthesize workingCopyRepositoryLocations=_workingCopyRepositoryLocations;
@property(retain) NSMapTable *workingCopyPaths; // @synthesize workingCopyPaths=_workingCopyPaths;
@property(retain) NSMapTable *workingCopyStates; // @synthesize workingCopyStates=_workingCopyStates;
@property(retain) NSOrderedSet *remoteRepositories; // @synthesize remoteRepositories=_remoteRepositories;
@property(retain) NSString *relativePathToProject; // @synthesize relativePathToProject=_relativePathToProject;
@property(retain) DVTSourceControlRemoteRepository *primaryRemoteRepository; // @synthesize primaryRemoteRepository=_primaryRemoteRepository;
@property(copy) NSString *_id; // @synthesize _id=__id;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (id)dictionaryRepresentationWithOptions:(unsigned long long)arg1;
- (id)initWithDictionary:(id)arg1 sshKeyDirectory:(id)arg2;
- (id)_dataFromString:(id)arg1;
- (id)_stringFromData:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithPrimaryRemoteRepository:(id)arg1 relativePathToProject:(id)arg2 remoteRepositories:(id)arg3 workingCopyStates:(id)arg4 workingCopyPaths:(id)arg5 workingCopyRepositoryLocations:(id)arg6 locations:(id)arg7 name:(id)arg8 favorite:(BOOL)arg9;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)remoteRepositoriesMissingFromWorkspace:(id)arg1;
- (void)mergeWithBlueprint:(id)arg1;
- (id)_repositoryLikeRepository:(id)arg1 inBlueprint:(id)arg2;
- (id)repositoryLikeRepository:(id)arg1;
- (id)repositoryForOrigin:(id)arg1;
- (id)_sortedRepositoriesFromSet:(id)arg1;
- (id)init;
- (id)checkForUpdatesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)validateAuthenticationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)workspaceForWorkingCopiesCreatedAtURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)createWorkingCopiesAtURL:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly) NSMapTable *revisions;
- (id)_sortedRemoteRepositoriesWithExpandedPaths:(id)arg1;
- (id)_expandedWorkingCopyPathsFromURL:(id)arg1;
@property(readonly) NSString *projectPath;
- (BOOL)_isValid;
- (id)__id;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSString (DVTSourceControlDisplayable_Private)
- (id)dvtscm_displayString;
@end

@interface NSString (DVTSourceControlNSStringAdditions)
- (id)dvtscm_urlStringByAppendingPathComponent:(id)arg1;
- (id)dvtscm_stringByDeletingTrailingSlash;
- (id)dvtscm_stringByStandardizingRelativePath;
@end

@interface NSURL (DVTSourceControlNSURLAdditions)
- (id)dvtscm_scpURL;
- (id)dvtscm_anonymousURL;
- (id)dvtscm_path;
- (id)dvtscm_host;
- (id)dvtscm_scheme;
- (id)dvtscm_password;
- (id)dvtscm_user;
@end

@interface NSURL (DVTSourceControlWorkspaceURLAdditions)
- (id)relativePathStringFromURL:(id)arg1;
@end

@interface _DVTSourceControlConceptualRevision : DVTSourceControlRevision
{
}

- (id)_initWithIdentifier:(id)arg1;
- (id)init;

@end

@interface _DVTSourceControlUnversionedLogItem : DVTSourceControlLogItem
{
}

- (BOOL)isUnversionedLogItem;
- (id)_init;
- (id)init;

@end

@interface _DVTSourceControlUnversionedRevision : DVTSourceControlRevision
{
}

- (id)description;
- (BOOL)isUnversionedRevision;
- (id)_init;
- (id)init;

@end

