//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/SharedFrameworks/DVTServiceKit.framework/Versions/A/DVTServiceKit
// UUID: 58C26CA6-72CB-3DCB-91C8-4F95707130E5
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6271.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface DVTMessage : NSObject
{
    NSMutableData *_content;
    NSDictionary *_userInfo;
}

@property(copy) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
- (void).cxx_destruct;
- (id)contentAsPropertyList:(unsigned long long)arg1 error:(id *)arg2;
- (BOOL)setContentToPropertyList:(id)arg1 format:(unsigned long long)arg2 error:(id *)arg3;
- (void)appendContentData:(id)arg1;
@property(copy) NSData *content;
- (id)init;

@end

@interface DVTServiceAdaptor : NSObject
{
}

- (void)unregisterForEvents;
- (void)registerForEvents:(id)arg1;

@end

@interface DVTPlistMessageAdaptor : DVTServiceAdaptor
{
    NSMutableArray *_listenSockets;
    NSMutableArray *_communicationSockets;
}

- (void).cxx_destruct;
- (void)closeCommunicationSockets;
- (void)closeListenSockets;
- (void)unregisterForEvents;
- (BOOL)writeResponse:(id)arg1 toCommunicationSocket:(id)arg2 error:(id *)arg3;
- (id)readRequestFromCommunicationSocket:(id)arg1 error:(id *)arg2;
- (void)connectionHasDataAvailable:(id)arg1;
- (void)connectionAccepted:(id)arg1;
- (void)registerForEvents:(id)arg1;
- (id)init;

@end

@interface DVTRequest : DVTMessage
{
    NSString *_requestHandlerKey;
}

@property(copy) NSString *requestHandlerKey; // @synthesize requestHandlerKey=_requestHandlerKey;
- (void).cxx_destruct;

@end

@interface DVTRequestHandler : NSObject
{
}

+ (id)requestHandlerWithBlock:(CDUnknownBlockType)arg1;
- (id)handleRequest:(id)arg1;

@end

@interface DVTResponse : DVTMessage
{
}

@end

@interface DVTService : NSObject
{
    NSRunLoop *_runLoop;
    struct __CFRunLoopSource *_terminationRunLoopSource;
    NSMutableArray *_adaptors;
    NSMutableDictionary *_requestHandlers;
    BOOL _running;
    int _exitStatus;
    DVTRequestHandler *_defaultRequestHandler;
}

+ (id)service;
@property(getter=isRunning) BOOL running; // @synthesize running=_running;
@property int exitStatus; // @synthesize exitStatus=_exitStatus;
@property(retain) DVTRequestHandler *defaultRequestHandler; // @synthesize defaultRequestHandler=_defaultRequestHandler;
- (void).cxx_destruct;
- (void)_tearDownTermination;
- (void)_setUpTermination;
- (void)exitWithStatus:(int)arg1;
- (void)_mainRunLoop;
- (id)dispatchRequest:(id)arg1;
- (void)run;
- (id)handlerForRequest:(id)arg1;
- (void)removeRequestHandlerForKey:(id)arg1;
- (id)requestHandlerForKey:(id)arg1;
- (void)registerRequestHandler:(id)arg1 forKey:(id)arg2;
- (void)registerAdaptor:(id)arg1;
@property(readonly, copy) NSArray *adaptors;
- (id)init;

@end

@interface _DVTBlockBasedRequestHandler : DVTRequestHandler
{
    CDUnknownBlockType _requestHandlerBlock;
}

@property(readonly, copy) CDUnknownBlockType requestHandlerBlock; // @synthesize requestHandlerBlock=_requestHandlerBlock;
- (void).cxx_destruct;
- (id)handleRequest:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

