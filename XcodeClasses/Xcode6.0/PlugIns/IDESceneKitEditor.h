//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct SCNVector3 {
    double _field1;
    double _field2;
    double _field3;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/PlugIns/IDESceneKitEditor.ideplugin/Contents/MacOS/IDESceneKitEditor
// UUID: 47872CF1-CC77-3082-8E0F-85D5A288E1C9
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6085.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTDiffTextFilter <NSObject>
+ (DVTFileDataType *)textFileDataTypeForInputFilePath:(DVTFilePath *)arg1;
+ (BOOL)pathRequiresFilter:(DVTFilePath *)arg1;

@optional
+ (DVTFilePath *)pathToKeyConflictResolutionFromInputFilePath:(DVTFilePath *)arg1 error:(id *)arg2;
+ (DVTFilePath *)pathToTextFileFromInputFilePath:(DVTFilePath *)arg1 error:(id *)arg2;
+ (BOOL)filterInputFilePath:(DVTFilePath *)arg1 toOutputFilePath:(DVTFilePath *)arg2 error:(id *)arg3;
@end

@protocol DVTIconOverrideProvider <NSObject>
+ (NSImage *)overridingIconForFileType:(NSString *)arg1;
@end

@protocol DVTOutlineViewDelegate <NSOutlineViewDelegate>

@optional
- (Class)outlineView:(DVTOutlineView *)arg1 groupRowCellClassForDataCell:(NSCell *)arg2;
- (NSFont *)outlineViewGroupRowFont:(DVTOutlineView *)arg1;
- (BOOL)outlineView:(DVTOutlineView *)arg1 shouldMouseHoverForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)outlineView:(DVTOutlineView *)arg1 concludeDragOperation:(id <NSDraggingInfo>)arg2;
- (unsigned long long)outlineView:(DVTOutlineView *)arg1 draggingSourceOperationMaskForLocal:(BOOL)arg2;
- (void)outlineView:(DVTOutlineView *)arg1 draggingDidEnd:(id <NSDraggingInfo>)arg2;
- (void)outlineView:(DVTOutlineView *)arg1 draggingDidUpdate:(id <NSDraggingInfo>)arg2;
- (void)outlineView:(DVTOutlineView *)arg1 draggingDidEnter:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(DVTOutlineView *)arg1 insertText:(NSString *)arg2;
- (BOOL)outlineView:(DVTOutlineView *)arg1 doCommandBySelector:(SEL)arg2;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTWindowActivationStateObserver <NSObject>
- (void)window:(NSWindow *)arg1 didChangeActivationState:(long long)arg2;
@end

@protocol IDECapsuleListViewDataSource <NSObject>
- (IDEViewController<IDECapsuleViewController> *)capsuleListView:(IDECapsuleListView *)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(IDECapsuleListView *)arg1;

@optional
- (void)capsuleListViewDidCompleteLayout:(IDECapsuleListView *)arg1;
- (void)capsuleListView:(IDECapsuleListView *)arg1 didExpandRow:(long long)arg2;
- (void)capsuleListView:(IDECapsuleListView *)arg1 didCollapseRow:(long long)arg2;
- (NSArray *)capsuleListView:(IDECapsuleListView *)arg1 pastboardTypesForRowWithIndex:(unsigned long long)arg2;
- (unsigned long long)capsuleListView:(IDECapsuleListView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3;
- (BOOL)capsuleListView:(IDECapsuleListView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3;
@end

@protocol IDECapsuleViewController <NSObject>
@property(readonly, copy) NSString *titleForDisplay;

@optional
@property(readonly) BOOL disclosedByDefault;
@property(readonly, copy) NSString *footerLabel;
@property(readonly) BOOL canDrag;
@property(readonly) BOOL canUndisclose;
@property BOOL canRemoveItems;
@property BOOL canAddItems;
@property(readonly) BOOL canRename;
@property(readonly) BOOL canRemove;
@property(readonly) BOOL canSelect;
@property(readonly) NSImage *icon;
- (void)removeItems:(id)arg1;
- (void)addItems:(id)arg1;
- (void)setTitle:(NSString *)arg1;
- (void)remove:(id)arg1;
@end

@protocol IDECapsuleViewDelegate <NSObject>

@optional
- (void)capsuleView:(IDECapsuleView *)arg1 wasDisclosed:(BOOL)arg2;
- (double)contentOriginXOffsetForCapsuleView:(IDECapsuleView *)arg1;
- (double)capsuleView:(IDECapsuleView *)arg1 preferredContentViewWidthForCapsuleWidth:(double)arg2;
- (NSView *)headerContentViewForCapsuleView:(IDECapsuleView *)arg1;
- (void)capsuleViewDidClickRemoveButton:(IDECapsuleView *)arg1;
- (BOOL)capsuleViewCanBeRemoved:(IDECapsuleView *)arg1;
- (BOOL)allowCustomContentHeaderViewToDriveHeaderHeight:(IDECapsuleView *)arg1;
- (double)capsuleViewSidePadding:(IDECapsuleView *)arg1;
- (NSColor *)capsuleViewBorderColor:(IDECapsuleView *)arg1;
- (NSColor *)capsuleViewBackgroundColor:(IDECapsuleView *)arg1;
- (void)capsuleView:(IDECapsuleView *)arg1 setTitle:(NSString *)arg2;
- (NSString *)capsuleViewTitleForEditing:(IDECapsuleView *)arg1;
- (BOOL)capsuleViewCanBeRenamed:(IDECapsuleView *)arg1;
- (BOOL)suppressBottomSeparator:(IDECapsuleView *)arg1;
- (BOOL)shouldDrawBorderBelowHeaderForCapsuleView:(IDECapsuleView *)arg1;
- (BOOL)capsuleView:(IDECapsuleView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2;
- (unsigned long long)capsuleView:(IDECapsuleView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2;
- (NSArray *)supportedDragTypes;
@end

@protocol IDEDocumentStructureProviding <NSObject>
@property(readonly) NSArray *ideTopLevelStructureObjects;
@end

@protocol IDEInspectorMatching <NSObject>
- (NSSet *)applicableInspectorsForCategory:(DVTExtension *)arg1 suggestion:(NSSet *)arg2;
@end

@protocol IDEInspectorPropertyEnablable <NSObject>
- (void)setEnabled:(BOOL)arg1;
- (BOOL)isEnabled;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol IDENavigableItemFileReferenceProxy <NSObject>
@property(readonly) IDENavigableItem *primaryChildItem;

@optional
- (BOOL)showSubitems;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSDraggingSource <NSObject>
- (unsigned long long)draggingSession:(NSDraggingSession *)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;

@optional
- (BOOL)ignoreModifierKeysForDraggingSession:(NSDraggingSession *)arg1;
- (void)draggingSession:(NSDraggingSession *)arg1 endedAtPoint:(struct CGPoint)arg2 operation:(unsigned long long)arg3;
- (void)draggingSession:(NSDraggingSession *)arg1 movedToPoint:(struct CGPoint)arg2;
- (void)draggingSession:(NSDraggingSession *)arg1 willBeginAtPoint:(struct CGPoint)arg2;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol SCNSceneRendererDelegate <NSObject>

@optional
- (void)renderer:(id <SCNSceneRenderer>)arg1 didRenderScene:(SCNScene *)arg2 atTime:(double)arg3;
- (void)renderer:(id <SCNSceneRenderer>)arg1 willRenderScene:(SCNScene *)arg2 atTime:(double)arg3;
- (void)renderer:(id <SCNSceneRenderer>)arg1 didSimulatePhysicsAtTime:(double)arg2;
- (void)renderer:(id <SCNSceneRenderer>)arg1 didApplyAnimationsAtTime:(double)arg2;
- (void)renderer:(id <SCNSceneRenderer>)arg1 updateAtTime:(double)arg2;
@end

@protocol SKEAnimationEditorViewDelegate <NSObject>
- (void)animationEditorViewAnimationDidChange:(SKEAnimationEditorView *)arg1;
@end

@protocol SKEContentsPickerPopUpButtonDataSource <NSObject>
- (NSArray *)suggestedImagesForContentsPicker:(SKEContentsPickerPopUpButton *)arg1;
@end

@protocol SKEDocumentMemberMutationDelegate <NSObject>
- (void)document:(id <SKEDocumentProtocol>)arg1 didReplaceChildMember:(id)arg2 ofMember:(id)arg3 byChildMember:(id)arg4;
- (void)document:(id <SKEDocumentProtocol>)arg1 willReplaceChildMember:(id)arg2 ofMember:(id)arg3 byChildMember:(id)arg4;
- (void)document:(id <SKEDocumentProtocol>)arg1 didRemoveChildMember:(id)arg2 fromMember:(id)arg3;
- (void)document:(id <SKEDocumentProtocol>)arg1 didAddChildMember:(id)arg2 toMember:(id)arg3;
- (void)document:(id <SKEDocumentProtocol>)arg1 willRemoveChildMember:(id)arg2 fromMember:(id)arg3;
- (void)document:(id <SKEDocumentProtocol>)arg1 willAddChildMember:(id)arg2 toMember:(id)arg3;
@end

@protocol SKEDocumentProtocol <NSObject>
- (SKEDocumentObjectMemberWrapper *)memberWrapperForMember:(id)arg1;
- (NSArray *)memberWrappersForMembersOfClass:(Class)arg1;
- (void)didReplaceChildMember:(id)arg1 ofMember:(id)arg2 byChildMember:(id)arg3;
- (void)willReplaceChildMember:(id)arg1 ofMember:(id)arg2 byChildMember:(id)arg3;
- (void)didRemoveChildMember:(id)arg1 fromMember:(id)arg2;
- (void)willRemoveChildMember:(id)arg1 fromMember:(id)arg2;
- (void)didAddChildMember:(id)arg1 toMember:(id)arg2;
- (void)willAddChildMember:(id)arg1 toMember:(id)arg2;
@end

@protocol SKEOutlineViewDelegate <DVTOutlineViewDelegate>
- (BOOL)outlineView:(NSOutlineView *)arg1 isHeaderItem:(id)arg2;
@end

@protocol SKEParticlePropertyControllerViewControllerDelegate <NSObject>
- (void)particlePropertyControllerViewControllerParticlePropertyControllerDidChange:(SKEParticlePropertyControllerViewController *)arg1;
@end

@protocol SKESceneViewDelegate
- (SCNNode *)selectedNodeForSceneView:(SKESceneView *)arg1;
- (void)sceneViewBeganFreeBrowsing:(SKESceneView *)arg1;
- (void)sceneView:(SKESceneView *)arg1 droppedContent:(id)arg2 onNode:(SCNNode *)arg3 geometryIndex:(long long)arg4;
- (void)sceneView:(SKESceneView *)arg1 didSelectNode:(SCNNode *)arg2 geometryIndex:(long long)arg3;
@end

@protocol SKETimeSliderDataSource <NSObject>
@property(readonly) double endTime;
@property(readonly) double startTime;
@property double currentTime;
@property BOOL playing;
@end

@interface CAAnimation (SceneKit_SKEAdditions)
- (id)ide_displayName;
@property(readonly) NSImage *ide_icon;
@end

@interface DVTUndoManager (SKEAdditions)
- (void)ske_disableUndoRegistrationInBlock:(CDUnknownBlockType)arg1;
@end

@interface NSEvent (SKEAdditions)
- (BOOL)ske_isSingleRightMouseDown;
- (BOOL)ske_isSingleLeftMouseDown;
- (BOOL)ske_isIntentionalRightDragWithRespectTo:(id)arg1;
- (BOOL)ske_isIntentionalLeftDragWithRespectTo:(id)arg1;
@end

@interface NSObject (SceneKit_SKEAdditions)
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
- (id)ske_undoKVOKeypaths;
@end

@interface NSView (SKEAdditions)
- (struct CGPoint)ske_convertPointFromWindow:(struct CGPoint)arg1;
- (struct CGPoint)ske_convertPointToWindow:(struct CGPoint)arg1;
@end

@interface SCNCamera (SceneKit_SKEAdditions)
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
+ (id)keyPathsForValuesAffectingIde_displayName;
@property(readonly) NSImage *ide_icon;
- (id)ske_undoKVOKeypaths;
@property(readonly) NSString *ide_displayName;
@end

@interface SCNGeometry (SceneKit_SKEAdditions)
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
+ (id)keyPathsForValuesAffectingIde_displayName;
- (id)ide_sources;
- (id)ide_elements;
- (id)ide_polygon_count;
- (id)ide_vertex_count;
@property(readonly) NSImage *ide_icon;
- (id)ske_undoKVOKeypaths;
@property(readonly) NSString *ide_displayName;
@end

@interface SCNLight (SceneKit_SKEAdditions)
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
+ (id)keyPathsForValuesAffectingIde_displayName;
@property float ide_shadowFarClipping;
@property float ide_shadowNearClipping;
- (BOOL)ide_cannotCastShadow;
- (BOOL)ide_canCastShadow;
@property float ide_spotOuterAngle;
@property float ide_spotInnerAngle;
@property float ide_attenuationFalloffExponent;
@property float ide_attenuationEnd;
@property float ide_attenuationStart;
- (BOOL)ide_supportsOrthographicScale;
- (BOOL)ide_supportsIlluminationCone;
- (BOOL)ide_supportsAttenuation;
@property(readonly) NSImage *ide_icon;
- (void)setIde_typeNumber:(long long)arg1;
- (long long)ide_typeNumber;
- (id)ske_undoKVOKeypaths;
@property(readonly) NSString *ide_displayName;
@end

@interface SCNMaterial (SceneKit_SKEAdditions)
+ (id)keyPathsForValuesAffectingIde_displayName;
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
+ (id)ide_slotNames;
@property double ide_fresnelExponent;
@property BOOL ide_readsFromDepthBuffer;
@property long long ide_lightingModel;
@property(readonly) NSString *ide_displayName;
@property(readonly) NSImage *ide_icon;
- (id)ske_undoKVOKeypaths;
- (BOOL)ide_isShininessInvolvedInLightingModel;
- (id)ide_namesOfSlotsInvolvedInLightingModel;
- (id)ide_slots;
@end

@interface SCNMaterialProperty (SceneKit_SKEAdditions)
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
@property double ide_intensity;
- (id)ide_displayImage;
- (BOOL)ide_isColor;
- (BOOL)ide_isImage;
@property(retain) id ide_contents;
- (id)ide_slotName;
- (id)ske_undoKVOKeypaths;
@end

@interface SCNNode (SceneKit_SKEAdditions)
+ (id)keyPathsForValuesAffectingIde_displayName;
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
- (BOOL)ide_canBenefitFromFlattening;
- (BOOL)ide_hasNodeAttributes;
- (BOOL)hasPotentialPointOfView;
- (BOOL)isPotentialPointOfView;
- (id)statusInfo;
- (unsigned long long)ide_attributesInfo;
@property(readonly) BOOL ide_shouldAppearInSceneGraph;
@property(readonly) BOOL ide_shouldBeRemovedFromSceneGraphUponSave;
@property double ide_rotationAngle;
@property struct SCNVector3 ide_rotationAxis;
@property(readonly) NSImage *ide_icon;
@property(retain) NSString *ide_visualizedParticleSystemFileName;
@property(retain) SCNParticleSystem *ide_visualizedParticleSystem;
@property(retain) SCNParticleSystem *ide_firstParticleSystem;
- (long long)polygonCount;
@property(readonly) NSString *ide_displayName;
- (id)ske_undoKVOKeypaths;
- (long long)ide_renderingOrder;
- (void)setIde_renderingOrder:(long long)arg1;
@end

@interface SCNParticleSystem (SceneKit_SKEAdditions)
+ (id)keyPathsForValuesAffectingIde_hasNullStretchFactor;
+ (id)keyPathsForValuesAffectingIde_spreadingAngleHasAnEffect;
+ (id)keyPathsForValuesAffectingIde_emittingDirectionHasAnEffect;
+ (id)ske_displayNameForUndoKVOKeypath:(id)arg1;
- (void)setIde_particleAngleVariation:(double)arg1;
- (double)ide_particleAngleVariation;
- (void)setIde_particleAngle:(double)arg1;
- (double)ide_particleAngle;
@property(retain) SCNParticlePropertyController *ide_particleSizeController;
@property(retain) NSGradient *ide_particleColorController;
@property(retain) SCNParticlePropertyController *ide_latestNonNilParticleColorController;
@property BOOL ide_hasParticleColorController;
@property(readonly) BOOL ide_doesNotHaveParticleColorController;
@property(retain) id ide_particleImage;
@property(readonly) BOOL ide_hasNullStretchFactor;
- (void)setIde_emitterShapeSphereRadius:(float)arg1;
@property(readonly) float ide_emitterShapeSphereRadius;
- (void)setIde_emitterShapePlaneHeight:(float)arg1;
@property(readonly) float ide_emitterShapePlaneHeight;
- (void)setIde_emitterShapePlaneWidth:(float)arg1;
@property(readonly) float ide_emitterShapePlaneWidth;
- (void)setIde_emitterShapeCylinderRadius:(float)arg1;
@property(readonly) float ide_emitterShapeCylinderRadius;
- (void)setIde_emitterShapeCylinderHeight:(float)arg1;
@property(readonly) float ide_emitterShapeCylinderHeight;
- (void)setIde_emitterShapeBoxLength:(float)arg1;
@property(readonly) float ide_emitterShapeBoxLength;
- (void)setIde_emitterShapeBoxHeight:(float)arg1;
@property(readonly) float ide_emitterShapeBoxHeight;
- (void)setIde_emitterShapeBoxWidth:(float)arg1;
@property(readonly) float ide_emitterShapeBoxWidth;
@property(readonly) BOOL ide_emitterShapeTypeIsSphere;
@property(readonly) BOOL ide_emitterShapeTypeIsPlane;
@property(readonly) BOOL ide_emitterShapeTypeIsCylinder;
@property(readonly) BOOL ide_emitterShapeTypeIsBox;
@property unsigned long long ide_emitterShapeType;
@property(readonly) BOOL ide_spreadingAngleHasAnEffect;
@property(readonly) BOOL ide_emittingDirectionHasAnEffect;
@property(readonly) NSString *ide_displayName;
@property(readonly) NSImage *ide_icon;
- (id)ske_undoKVOKeypaths;

// Remaining properties
@property double particleAngle; // @dynamic particleAngle;
@property double particleAngleVariation; // @dynamic particleAngleVariation;
@property double particleInitialAngle; // @dynamic particleInitialAngle;
@property double particleInitialAngleVariation; // @dynamic particleInitialAngleVariation;
@end

@interface SCNTransaction (SceneKit_SKEAdditions)
+ (void)ide_immediateTransaction:(CDUnknownBlockType)arg1;
@end

@interface SKEAdjustSceneWindowController : NSWindowController
{
    NSButton *_commitButton;
    NSButton *_cancelButton;
    NSImageView *_firstChoiceView;
    NSImageView *_secondChoiceView;
    NSImageView *_commitCountImageView;
    NSTextField *_commitCountTextField;
    NSTextField *_firstChoiceTitle;
    NSTextField *_secondChoiceTitle;
}

- (void).cxx_destruct;
- (void)selectSecondChoice:(id)arg1;
- (void)selectFirstChoice:(id)arg1;
@property(copy) NSImage *secondChoiceIllustration;
@property(copy) NSImage *firstChoiceIllustration;
- (void)windowDidLoad;

@end

@interface SKEAnimationEditor : NSObject
{
}

+ (id)animationWithPresetName:(unsigned long long)arg1;
+ (struct CGPath *)createPiecewiseLinearCurveWithAnimation:(id)arg1;
+ (struct CGPath *)createCubicBezierCurveFromCatmullRomCurve:(id)arg1;
+ (id)catmullRomCurveFromCubicBezierCurveWithPoint0:(struct CGPoint)arg1 controlPoint0:(struct CGPoint)arg2 controlPoint1Pre:(struct CGPoint)arg3 point1:(struct CGPoint)arg4 controlPoint1Post:(struct CGPoint)arg5 controlPoint2:(struct CGPoint)arg6 point2:(struct CGPoint)arg7;
+ (id)catmullRomCurveFromCubicBezierCurveWithPoint0:(struct CGPoint)arg1 controlPoint0:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 point1:(struct CGPoint)arg4;

@end

@interface SKEAnimationEditorView : NSView
{
    CAKeyframeAnimation *_animation;
    struct CGColor *_fillColor;
    struct CGColor *_strokeColor;
    struct CGPath *_cachedPath;
    double _scale;
    struct CGPoint _origin;
    struct CGSize _canvasSize;
    long long _selectedPointIndex;
    id <SKEAnimationEditorViewDelegate> _delegate;
}

@property __weak id <SKEAnimationEditorViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (void)clearDrawInfo;
- (void)computeDrawInfoIfNeeded;
- (unsigned long long)calculationMode;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)setFrame:(struct CGRect)arg1;
@property(copy) CAKeyframeAnimation *animation;
- (void)awakeFromNib;

@end

@interface SKEAssetCatalog : NSObject
{
    NSMutableDictionary *_settings;
}

- (void).cxx_destruct;
@property BOOL usePVRTCIfAvailable;
@property BOOL interleaveGeometrySources;
@property BOOL forceYUp;
- (BOOL)writeToFile:(id)arg1 atomically:(BOOL)arg2;
- (id)initWithContentsOfFile:(id)arg1 error:(id *)arg2;

@end

@interface SKEAssetCatalogCapsuleViewController : IDEViewController <IDECapsuleViewController, IDECapsuleViewDelegate>
{
}

@property(readonly) BOOL canDrag;
@property(readonly) BOOL canSelect;
- (id)capsuleViewBackgroundColor:(id)arg1;
@property(readonly) BOOL disclosedByDefault;
@property(readonly, copy) NSString *titleForDisplay;

// Remaining properties
@property BOOL canAddItems;
@property(readonly) BOOL canRemove;
@property BOOL canRemoveItems;
@property(readonly) BOOL canRename;
@property(readonly) BOOL canUndisclose;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, copy) NSString *footerLabel;
@property(readonly) unsigned long long hash;
@property(readonly) NSImage *icon;
@property(readonly) Class superclass;

@end

@interface SKEAssetCatalogDocument : IDEEditorDocument
{
    SKEAssetCatalog *_assetCatalog;
}

- (void).cxx_destruct;
@property BOOL usePVRTCIfAvailable;
@property BOOL interleaveGeometrySources;
@property BOOL forceYUp;
- (BOOL)writeSettings;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface SKEAssetCatalogDocumentIconProvider : NSObject <DVTIconOverrideProvider>
{
}

+ (id)overridingIconForFileType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEAssetCatalogDocumentViewController : IDEEditor <DVTReplacementViewDelegate, IDECapsuleListViewDataSource>
{
    IDECapsuleListView *_capsuleListView;
    DVTControllerContentView *_commonOptionsView;
    DVTControllerContentView *_iosOptionsView;
    NSButton *_forceYUpButton;
    NSButton *_interleaveButton;
    NSButton *_usePVRTCIfAvailableButton;
    SKEAssetCatalogCapsuleViewController *_commonOptionsViewController;
    SKEAssetCatalogCapsuleViewController *_iosOptionsViewController;
    NSArray *_currentSelectedItems;
}

- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)selectDocumentLocations:(id)arg1;
- (void)setCurrentSelectedItems:(id)arg1;
- (id)currentSelectedItems;
- (id)capsuleListView:(id)arg1 viewControllerForRow:(long long)arg2;
- (long long)numberOfObjectsInCapsuleListView:(id)arg1;
- (BOOL)canBecomeMainViewController;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) SKEAssetCatalogDocument *document;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKECanvasBackgroundView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)awakeFromNib;

@end

@interface SKECanvasViewController : IDEViewController <SKETimeSliderDataSource>
{
    SKESceneView *_sceneView;
    SKESceneViewNestView *_nestView;
    SKETimeSlider *timeSlider;
    NSSegmentedControl *_segmentedControl;
    NSPopUpButton *_povPopUpButton;
    NSArrayController *_povArrayController;
    BOOL _showAuthoringEnvironment;
    BOOL _enableMultisampling;
    BOOL _enableJittering;
    BOOL _enableAutomaticDefaultLighting;
    unsigned char _cameraDisplayMode;
    unsigned char _lightDisplayMode;
    SKEDocumentViewController *_documentEditorViewController;
}

@property(retain, nonatomic) SKEDocumentViewController *documentEditorViewController; // @synthesize documentEditorViewController=_documentEditorViewController;
- (void).cxx_destruct;
@property double currentTime;
@property(readonly) double endTime;
@property(readonly) double startTime;
@property BOOL playing;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)doShowNodeAttributesCameraNone:(id)arg1;
- (void)doShowNodeAttributesCameraAll:(id)arg1;
- (void)doShowNodeAttributesCameraEditedOnly:(id)arg1;
- (void)doShowNodeAttributesLightNone:(id)arg1;
- (void)doShowNodeAttributesLightAll:(id)arg1;
- (void)doShowNodeAttributesLightEditedOnly:(id)arg1;
- (void)toggleShowAuthoringEnvironment:(id)arg1;
- (void)toggleDefaultLighting:(id)arg1;
- (void)toggleMutlisampling:(id)arg1;
- (void)toggleJittering:(id)arg1;
- (void)_updateLightDisplay;
- (void)setLightDisplayMode:(unsigned char)arg1;
- (void)_updateCameraDisplay;
- (void)setCameraDisplayMode:(unsigned char)arg1;
- (void)_updateManipulation;
- (void)setShowAuthoringEnvironment:(BOOL)arg1;
- (void)setEnableAutomaticDefaultLighting:(BOOL)arg1;
- (void)setEnableMultisampling:(BOOL)arg1;
- (void)setEnableJittering:(BOOL)arg1;
- (void)configureControlBar;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)primitiveInvalidate;
- (void)takeFocus;
- (void)viewWillUninstall;
- (void)viewDidInstall;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEColorRampProperty : IDEInspectorProperty
{
    SKEColorRampView *_colorRamp;
    IDEInspectorKeyPath *_valueKeyPath;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)userDidChangeValue:(id)arg1;
- (void)refresh;
- (double)baseline;

@end

@interface SKEColorRampView : NSView
{
    NSGradient *_gradient;
    long long _selectedMarkerIndex;
    unsigned long long _selectionState;
    unsigned long long _moveOutsideAction;
    id _target;
    SEL _action;
}

@property SEL action; // @synthesize action=_action;
@property(retain) id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (double)locationWithPoint:(struct CGPoint)arg1;
- (struct CGRect)borderRect;
- (struct CGRect)interiorRect;
- (BOOL)hitTestColorWellPathWithMarkerTipAtPoint:(struct CGPoint)arg1 hitPoint:(struct CGPoint)arg2;
- (BOOL)hitTestMarkerPathWithTipAtPoint:(struct CGPoint)arg1 hitPoint:(struct CGPoint)arg2;
- (id)colorWellPathWithMarkerTipAtPoint:(struct CGPoint)arg1;
- (id)markerPathWithTipAtPoint:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (void)changeColor:(id)arg1;
- (id)gradientByReplacingLocation:(double)arg1 atIndex:(unsigned long long)arg2;
- (id)gradientByReplacingColor:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)gradientByRemovingColorAtIndex:(unsigned long long)arg1;
- (id)gradientByAddingColor:(id)arg1 atLocation:(double)arg2 index:(unsigned long long *)arg3;
@property(retain) NSGradient *gradient;

@end

@interface SKEContentsPickerPopUpButton : NSView <DVTWindowActivationStateObserver, NSMenuDelegate, IDEInspectorPropertyEnablable, NSDraggingSource>
{
    NSMenu *_contentsMenu;
    struct CGRect _popUpButtonArrowsRect;
    struct CGRect _contentsPreviewRect;
    struct CGRect _contentsLabelRect;
    struct CGRect _wellRect;
    struct CGRect _contentsLabelTitleRect;
    BOOL _acceptsImages;
    BOOL _acceptsColors;
    NSDictionary *_imageStateDictionary;
    id <DVTCancellable> _windowActivationObservation;
    id _contentsValueBindingController;
    NSString *_contentsValueBindingKeyPath;
    DVTObservingToken *_contentsValueBindingObservation;
    BOOL _acceptsNil;
    BOOL _acceptsNonFilePathImages;
    BOOL _enabled;
    BOOL _active;
    BOOL _highlighted;
    id _contents;
    id _target;
    SEL _action;
    id <SKEContentsPickerPopUpButtonDataSource> _delegate;
    unsigned long long _controlSize;
}

+ (id)imageStateDictionaryForControlSize:(unsigned long long)arg1;
@property(nonatomic, getter=isHighlighted) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic, getter=isActive) BOOL active; // @synthesize active=_active;
@property(nonatomic, getter=isEnabled) BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) unsigned long long controlSize; // @synthesize controlSize=_controlSize;
@property __weak id <SKEContentsPickerPopUpButtonDataSource> delegate; // @synthesize delegate=_delegate;
@property SEL action; // @synthesize action=_action;
@property(retain) id target; // @synthesize target=_target;
@property(retain, nonatomic) id contents; // @synthesize contents=_contents;
@property BOOL acceptsNonFilePathImages; // @synthesize acceptsNonFilePathImages=_acceptsNonFilePathImages;
@property BOOL acceptsNil; // @synthesize acceptsNil=_acceptsNil;
- (void).cxx_destruct;
@property(retain) id objectValue;
- (void)mouseDown:(id)arg1;
- (BOOL)isMouseEventInColorWellRect:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawContentsLabel;
- (void)drawContents;
- (void)drawPopUpButtonArrows;
- (void)drawFocusRing;
- (id)effectiveAttributedTitle;
- (id)attributedTitleForTitle:(id)arg1;
- (id)titleAttributes;
- (double)wellHeight;
- (id)effectiveImageForControlPart:(unsigned long long)arg1;
- (id)effectivePopUpButtonArrowsRightCapImage;
- (double)horizontalMenuOffset;
- (double)verticalMenuOffset;
- (void)sizeRectsForDrawing;
- (double)verticalTitleOffset;
- (double)baseline;
- (double)heightThatFits;
- (double)widthForPopUpButton;
- (CDStruct_d2b197d1)shadowInset;
- (struct CGRect)insetRectForWellRect:(struct CGRect)arg1;
- (struct CGRect)wellRectForContentsPreviewRect:(struct CGRect)arg1;
- (id)imageStateDictionary;
- (void)invalidateImageStateDictionary;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)observedContentsValueDidChangeToValue:(id)arg1;
- (void)displayColorPanel:(id)arg1;
- (void)takeColorFromColorChooser:(id)arg1;
- (void)takeColorFromColorPanel:(id)arg1;
- (void)takeContentsFromPopUpMenu:(id)arg1;
- (void)setNilContents:(id)arg1;
- (void)sendAction;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)beginImageDragForEvent:(id)arg1;
- (void)beginColorDragForEvent:(id)arg1;
- (id)imageForDraggedColor:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)colorPanelColorChanged:(id)arg1;
- (void)colorPanelWillClose:(id)arg1;
- (void)window:(id)arg1 didChangeActivationState:(long long)arg2;
- (void)contentsPickerDidBecomeActive:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)performClick:(id)arg1;
- (void)displayColorPanel;
- (BOOL)canBecomeKeyView;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (BOOL)acceptsFirstResponder;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)showContentsMenu;
- (double)minimumPopUpMenuWidth;
- (struct CGPoint)popUpMenuLocation;
- (void)populateContentsMenu;
- (id)swatchImageForColor:(id)arg1 withSize:(struct CGSize)arg2;
- (BOOL)isShowingTitle;
- (id)titleFont;
- (id)effectiveSwatchBorderColor;
- (id)effectiveTextColor;
- (BOOL)contentsIsAllowedNil;
- (BOOL)contentsIsImage;
- (BOOL)contentsIsColor;
@property BOOL acceptsColors;
@property BOOL acceptsImages;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEDocument : IDEEditorDocument <SKEDocumentProtocol, IDEDocumentStructureProviding>
{
    SCNScene *_scene;
    SCNSceneSource *_sceneSource;
    NSURL *_cachedDestinationURL;
    SKEMediaHelper *_mediaHelper;
    NSMapTable *_entryClassToEntries;
    NSMapTable *_groupTypeToGroupMemberWrapper;
    SKEAdjustSceneWindowController *_adjustSceneWindowController;
    BOOL _userIsAwareOfPossibleDataLossUponExport;
    BOOL _userAcceptsDataLossUponExport;
    id _inspectionDocumentController;
    CDUnknownBlockType _cameraPropertyEditionHandler;
    SCNMaterial *_inspectorMaterialBindingSlot;
    IDEContainer *_resourceProvidingContainer;
}

+ (long long)groupTypeForMember:(id)arg1;
+ (id)defaultSceneOptions;
@property(retain) IDEContainer *resourceProvidingContainer; // @synthesize resourceProvidingContainer=_resourceProvidingContainer;
@property(retain, nonatomic) SCNMaterial *inspectorMaterialBindingSlot; // @synthesize inspectorMaterialBindingSlot=_inspectorMaterialBindingSlot;
@property(copy) CDUnknownBlockType cameraPropertyEditionHandler; // @synthesize cameraPropertyEditionHandler=_cameraPropertyEditionHandler;
@property(retain) id inspectionDocumentController; // @synthesize inspectionDocumentController=_inspectionDocumentController;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (void)removeParticleSystemFromNode:(id)arg1;
- (void)addParticleSystemToNode:(id)arg1;
- (void)removeCameraFromNode:(id)arg1;
- (void)addCameraToNode:(id)arg1;
- (void)removeLightFromNoNode:(id)arg1;
- (void)addLightToNode:(id)arg1;
- (void)makeNode:(id)arg1 childNodeOf:(id)arg2 index:(unsigned long long)arg3;
- (void)flattenNode:(id)arg1;
- (void)duplicateNode:(id)arg1;
- (void)deleteNode:(id)arg1;
- (void)addNewChildToNode:(id)arg1;
- (void)didReplaceChildMember:(id)arg1 ofMember:(id)arg2 byChildMember:(id)arg3;
- (void)willReplaceChildMember:(id)arg1 ofMember:(id)arg2 byChildMember:(id)arg3;
- (void)didRemoveChildMember:(id)arg1 fromMember:(id)arg2;
- (void)willRemoveChildMember:(id)arg1 fromMember:(id)arg2;
- (void)didAddChildMember:(id)arg1 toMember:(id)arg2;
- (void)willAddChildMember:(id)arg1 toMember:(id)arg2;
- (void)makeMemberWrapper:(id)arg1 acceptContentsOfPasteboard:(id)arg2 atIndex:(unsigned long long)arg3;
- (BOOL)canMemberWrapper:(id)arg1 acceptContentsOfPasteboard:(id)arg2;
- (id)contentsOfPasteboard:(id)arg1;
- (void)putMemberWrappers:(id)arg1 onPasteboard:(id)arg2;
- (BOOL)isMember:(id)arg1 aDescendantOfMember:(id)arg2 resultIfEqual:(BOOL)arg3;
- (BOOL)isMemberRootNode:(id)arg1;
- (id)memberWrapperForGroupType:(long long)arg1;
- (BOOL)isMemberTrackedByDocument:(id)arg1;
- (id)memberWrapperForMember:(id)arg1 libraryIdentifier:(id)arg2;
- (id)buildObjectMemberWrapperForMember:(id)arg1 libraryIdentifier:(id)arg2;
- (void)unloadAllObjectMemberWrappers;
- (void)loadAllObjectMemberWrappers;
- (void)stopListeningToMembersRequests;
- (void)startListeningToMembersRequests;
- (void)_memberDidRequestAction:(id)arg1;
- (id)memberWrapperForMember:(id)arg1;
- (id)memberWrappersForMembersOfClass:(Class)arg1;
- (void)stopUndoObservationsOf:(id)arg1;
- (void)startUndoObservationsOf:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_undoEdition:(id)arg1;
@property(readonly) SCNNode *defaultPointOfView;
@property(readonly) NSArray *availablePointsOfView;
- (void)updateChangeCount:(unsigned long long)arg1;
- (void)editorDocumentWillClose;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (id)mediaHelper;
- (BOOL)canSave;
- (void)adjustSceneAfterLoading;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)invertDocumentTransparency;
- (id)authoringToolName;
- (void)restoreSceneGraphAfterExport:(id)arg1;
- (void)cleanSceneGraphForExport:(id *)arg1;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (id)uistring_polygonCount;
- (id)uistring_geometryMemory;
@property(readonly) SCNSceneSource *sceneSource;
@property(readonly) SCNScene *scene;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEDocumentEdition : NSObject
{
    IDEEditorDocument<SKEDocumentProtocol> *_document;
}

- (void).cxx_destruct;
- (BOOL)revert;
- (BOOL)apply;
- (id)initWithDocument:(id)arg1;

@end

@interface SKEDocumentAddChildAtIndexEdition : SKEDocumentEdition
{
    SCNNode *_parentNode;
    SCNNode *_childNode;
    unsigned long long _index;
}

- (void).cxx_destruct;
- (BOOL)revert;
- (BOOL)apply;
- (id)initWithDocument:(id)arg1 parentNode:(id)arg2 childNode:(id)arg3 index:(unsigned long long)arg4;

@end

@interface SKEDocumentAddNodeAttributeEdition : SKEDocumentEdition
{
    SCNNode *_node;
    Class _nodeAttributeClass;
}

- (void).cxx_destruct;
- (BOOL)revert;
- (BOOL)apply;
- (BOOL)_edit:(BOOL)arg1;
- (id)initWithDocument:(id)arg1 node:(id)arg2 nodeAttributeClass:(Class)arg3;

@end

@interface SKEDocumentMemberWrapper : NSObject <IDEInspectorMatching, SKEDocumentMemberMutationDelegate, IDEKeyDrivenNavigableItemRepresentedObject>
{
    id _member;
    id <SKEDocumentProtocol> _document;
}

- (void).cxx_destruct;
- (void)document:(id)arg1 didReplaceChildMember:(id)arg2 ofMember:(id)arg3 byChildMember:(id)arg4;
- (void)document:(id)arg1 willReplaceChildMember:(id)arg2 ofMember:(id)arg3 byChildMember:(id)arg4;
- (void)document:(id)arg1 didRemoveChildMember:(id)arg2 fromMember:(id)arg3;
- (void)document:(id)arg1 willRemoveChildMember:(id)arg2 fromMember:(id)arg3;
- (void)document:(id)arg1 didAddChildMember:(id)arg2 toMember:(id)arg3;
- (void)document:(id)arg1 willAddChildMember:(id)arg2 toMember:(id)arg3;
@property(readonly) NSString *navigableItem_name;
- (id)applicableInspectorsForCategory:(id)arg1 suggestion:(id)arg2;
@property(readonly) SKEDocumentLocation *navigableDocumentLocation;
@property(readonly) NSArray *childWrappers;
@property(readonly) NSImage *image;
@property(readonly) NSString *name;
@property(readonly) id identifier;
@property(readonly) IDEEditorDocument<SKEDocumentProtocol> *document;
@property(readonly) id member;
- (id)initWithMember:(id)arg1 document:(id)arg2;
- (BOOL)isGroup;
@property(readonly) BOOL isParticleSystemMemberWrapper;
@property(readonly) BOOL isMaterialMemberWrapper;
@property(readonly) BOOL isNodeMemberWrapper;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;

@end

@interface SKEDocumentGroupMemberWrapper : SKEDocumentMemberWrapper
{
}

- (id)ideModelObjectTypeIdentifier;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;
- (id)childWrappers;
- (id)applicableInspectorsForCategory:(id)arg1 suggestion:(id)arg2;
- (id)navigableDocumentLocation;
- (id)image;
- (id)name;
- (long long)type;
- (id)identifier;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SKEDocumentInspector : IDEInspectorViewController
{
}

+ (id)keyPathsForValuesAffectingUistring_authoringToolName;
+ (id)keyPathsForValuesAffectingUistring_polygonCount;
+ (id)keyPathsForValuesAffectingUistring_geometryMemory;
@property(readonly) NSString *uistring_authoringToolName;
@property(readonly) NSString *uistring_polygonCount;
@property(readonly) NSString *uistring_geometryMemory;
- (void)setContent:(id)arg1;

@end

@interface SKEDocumentKVCEdition : SKEDocumentEdition
{
    NSString *_keyPath;
    id _object;
    id _value;
}

- (void).cxx_destruct;
- (BOOL)revert;
- (BOOL)apply;
- (id)initWithDocument:(id)arg1 object:(id)arg2 value:(id)arg3 keyPath:(id)arg4;

@end

@interface SKEDocumentLocation : DVTDocumentLocation <NSCoding>
{
    NSString *_identifier;
}

@property(readonly) id identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithDocumentURL:(id)arg1 identifier:(id)arg2;
- (BOOL)isGroupLocation;
@property(readonly) SKEDocumentObjectMemberWrapper *locatedMemberWrapper;

@end

@interface SKEDocumentMemberWrapperProxy : DVTObservableObjectProxy
{
}

- (void)setRepresentedObject:(id)arg1;

@end

@interface SKEDocumentNavigableItem : IDEKeyDrivenNavigableItem
{
    DVTObservingToken *_childWrappersToken;
}

+ (id)keyPathsForValuesAffectingImage;
+ (id)keyPathsForValuesAffectingName;
+ (id)keyPathsForValuesAffectingRepresentedDocument;
+ (id)keyPathsForValuesAffectingRepresentedWrapper;
- (void).cxx_destruct;
- (id)contentDocumentLocation;
- (id)childRepresentedObjects;
- (BOOL)isLeaf;
- (unsigned long long)indexOfChildItemForIdentifier:(id)arg1;
- (id)identifierForChildItem:(id)arg1;
- (id)image;
- (id)name;
@property(readonly) __weak id <SKEDocumentProtocol> representedDocument;
@property(readonly) __weak SKEDocumentMemberWrapper *representedWrapper;
- (void)primitiveInvalidate;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface SKEDocumentObjectMemberWrapper : SKEDocumentMemberWrapper
{
    NSString *_identifierInLibrary;
    NSArray *_childWrappers;
}

+ (id)keyPathsForValuesAffectingImage;
+ (id)keyPathsForValuesAffectingExtendedName;
+ (id)keyPathsForValuesAffectingName;
+ (Class)validClassForMember:(id)arg1;
+ (id)validMemberClasses;
@property(readonly) NSString *identifierInLibrary; // @synthesize identifierInLibrary=_identifierInLibrary;
- (void).cxx_destruct;
- (id)applicableInspectorsForCategory:(id)arg1 suggestion:(id)arg2;
- (id)ideModelObjectTypeIdentifier;
- (id)humanReadableNameForInspectorKeyPath:(id)arg1;
- (void)document:(id)arg1 didReplaceChildMember:(id)arg2 ofMember:(id)arg3 byChildMember:(id)arg4;
- (void)document:(id)arg1 willReplaceChildMember:(id)arg2 ofMember:(id)arg3 byChildMember:(id)arg4;
- (void)document:(id)arg1 didRemoveChildMember:(id)arg2 fromMember:(id)arg3;
- (void)document:(id)arg1 willRemoveChildMember:(id)arg2 fromMember:(id)arg3;
- (void)document:(id)arg1 didAddChildMember:(id)arg2 toMember:(id)arg3;
- (void)document:(id)arg1 willAddChildMember:(id)arg2 toMember:(id)arg3;
- (id)childWrappers;
- (void)setChildWrappers:(id)arg1;
- (void)rebuildChildWrappers;
- (id)attributesWrappers;
@property(readonly) SKEDocumentObjectMemberWrapper *particleSystemMemberWrapper;
@property(readonly) SKEDocumentObjectMemberWrapper *materialMemberWrapper;
@property(readonly) SKEDocumentObjectMemberWrapper *lightMemberWrapper;
@property(readonly) SKEDocumentObjectMemberWrapper *geometryMemberWrapper;
@property(readonly) SKEDocumentObjectMemberWrapper *cameraMemberWrapper;
@property(readonly) SKEDocumentObjectMemberWrapper *animationMemberWrapper;
@property(readonly) SKEDocumentObjectMemberWrapper *nodeMemberWrapper;
@property(readonly) NSString *ide_entityIdentifier;
- (id)navigableDocumentLocation;
- (id)image;
@property(readonly) NSString *extendedName;
- (id)name;
- (id)identifier;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithMember:(id)arg1 document:(id)arg2;
- (id)initWithMember:(id)arg1 document:(id)arg2 libraryIdentifier:(id)arg3;

@end

@interface SKEDocumentReparentNodeEdition : SKEDocumentEdition
{
    SCNNode *_node;
    SCNNode *_oldParent;
    SCNNode *_newParent;
    unsigned long long _oldIndex;
    unsigned long long _newIndex;
}

- (void).cxx_destruct;
- (BOOL)revert;
- (BOOL)apply;
- (BOOL)_reparentWithOldParent:(id)arg1 newParent:(id)arg2 oldIndex:(unsigned long long)arg3 newIndex:(unsigned long long)arg4;
- (id)initWithDocument:(id)arg1 node:(id)arg2 newParentNode:(id)arg3 index:(unsigned long long)arg4;

@end

@interface SKEDocumentReplaceNodeWithNodeEdition : SKEDocumentEdition
{
    SCNNode *_parentNode;
    SCNNode *_insertedNode;
    SCNNode *_replacedNode;
}

- (void).cxx_destruct;
- (BOOL)revert;
- (BOOL)apply;
- (void)_replaceNode:(id)arg1 withNode:(id)arg2;
- (id)initWithDocument:(id)arg1 parentNode:(id)arg2 insertedNode:(id)arg3 replacedNode:(id)arg4;

@end

@interface SKEDocumentStructureViewController : IDEViewController <SKEOutlineViewDelegate, NSOutlineViewDataSource>
{
    SKEDocumentNavigableItem *_entitiesTopLevelItem;
    SKEDocumentNavigableItem *_sceneGraphTopLevelItem;
    NSString *_filterString;
    DVTNotificationToken *_selectionToken;
    IDENavigableItemCoordinator *_navigableItemCoordinator;
    DVTGradientImagePopUpButton *_actionPopUpButton;
    DVTGradientImageButton *_addButton;
    DVTGradientImageButton *_deleteButton;
    SKEOutlineView *_outlineView;
    DVTBorderedView *_borderedView;
    DVTSearchField *_searchField;
    IDEControlGroup *_controlGroup;
    BOOL _isObservingDocument;
    SKEDocumentViewController *_documentEditorViewController;
}

@property(copy, nonatomic) NSString *filterString; // @synthesize filterString=_filterString;
@property(retain, nonatomic) SKEDocumentViewController *documentEditorViewController; // @synthesize documentEditorViewController=_documentEditorViewController;
- (void).cxx_destruct;
- (void)removeNodePropertyParticleSystem:(id)arg1;
- (void)addNodePropertyParticleSystem:(id)arg1;
- (void)removeNodePropertyCamera:(id)arg1;
- (void)addNodePropertyCamera:(id)arg1;
- (void)removeNodePropertyLight:(id)arg1;
- (void)addNodePropertyLight:(id)arg1;
- (void)flattenNode:(id)arg1;
- (void)duplicateNode:(id)arg1;
- (void)deleteNode:(id)arg1;
- (void)addNewChildNode:(id)arg1;
- (void)showNodeContextualMenuForInitialEvent:(id)arg1;
- (id)contextualMenuForMemberWrapper:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)targetNodeForActionSender:(id)arg1 withFallbackIfNoSelection:(id)arg2;
- (BOOL)outlineView:(id)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isHeaderItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (BOOL)control:(id)arg1 textShouldBeginEditing:(id)arg2;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (id)outlineView:(id)arg1 dataCellForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)filteredChildrenOfItem:(id)arg1;
- (BOOL)itemShouldAppearInFilteredOutline:(id)arg1;
- (BOOL)outlineView:(id)arg1 acceptDrop:(id)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(id)arg1 validateDrop:(id)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (BOOL)outlineView:(id)arg1 writeItems:(id)arg2 toPasteboard:(id)arg3;
- (void)groupWasInvalidated:(id)arg1;
- (void)unregisterForForSceneGraphInvalidationNotifications;
- (void)registerForSceneGraphInvalidationNotifications;
- (id)groupInvalidationNotificationNames;
- (void)outlineViewSelectionDidChange;
- (void)selectLocations:(id)arg1;
- (id)libraryNavigableItemForLocation:(id)arg1;
- (id)sceneGraphNavigableItemForLocation:(id)arg1;
- (id)navigableItemForLocation:(id)arg1 inNavigables:(id)arg2;
- (id)document;
- (void)primitiveInvalidate;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)configureSearchField;
- (void)configureBorderedView;
- (void)configureActionMenu;
- (void)configureControlGroup;
- (void)configureOutlineView;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEDocumentViewController : IDEEditor <DVTReplacementViewDelegate, SKESceneViewDelegate>
{
    DVTSplitView *splitView;
    DVTReplacementView *structureAreaContainer;
    DVTReplacementView *canvasContainer;
    SKEDocumentStructureViewController *_structureViewController;
    SKECanvasViewController *_canvasViewController;
    NSArray *_currentSelectedItems;
    SCNNode *_selectedNode;
    SCNNode *_currentPointOfView;
}

+ (id)keyPathsForValuesAffectingIsFreeBrowsingWithNodeSelected;
+ (id)keyPathsForValuesAffectingIsFreeBrowsing;
@property(retain, nonatomic) SCNNode *currentPointOfView; // @synthesize currentPointOfView=_currentPointOfView;
@property(retain) SKECanvasViewController *canvasViewController; // @synthesize canvasViewController=_canvasViewController;
@property(retain) SKEDocumentStructureViewController *structureViewController; // @synthesize structureViewController=_structureViewController;
@property(retain) SCNNode *selectedNode; // @synthesize selectedNode=_selectedNode;
- (void).cxx_destruct;
- (id)selectedNodeForSceneView:(id)arg1;
- (void)sceneViewBeganFreeBrowsing:(id)arg1;
- (void)sceneView:(id)arg1 droppedContent:(id)arg2 onNode:(id)arg3 geometryIndex:(long long)arg4;
- (void)sceneView:(id)arg1 didSelectNode:(id)arg2 geometryIndex:(long long)arg3;
- (void)primitiveInvalidate;
- (BOOL)splitView:(id)arg1 canCollapseSubview:(id)arg2;
- (double)splitView:(id)arg1 constrainSplitPosition:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (void)resizeSplitViewToFitStructureAreaView;
- (void)replacementView:(id)arg1 willCloseViewController:(id)arg2;
- (void)replacementView:(id)arg1 didInstallViewController:(id)arg2;
- (void)selectDocumentLocations:(id)arg1;
- (void)takeFreeCameraParametersFor:(id)arg1;
- (void)selectDefaultPointOfView;
- (BOOL)isFreeBrowsingWithNodeSelected;
@property(readonly) BOOL isFreeBrowsing;
@property(readonly) NSArray *availablePointsOfView;
@property(copy) NSArray *currentSelectedItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)documentDidReplaceMember:(id)arg1;
- (void)documentDidRemoveMember:(id)arg1;
- (void)takeFocus;
- (BOOL)canBecomeMainViewController;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) SKEDocument *document;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEGeometryElementsInspector : IDEInspectorViewController
{
    NSArrayController *arrayController;
    SKEStaticTableViewInspectorContainerView *containerView;
    DVTTableView *tableView;
}

- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)loadView;
- (void)viewDidInstall;
- (void)setContent:(id)arg1;

@end

@interface SKEStaticTableViewInspector : IDEInspectorViewController
{
    SKEStaticTableViewInspectorContainerView *containerView;
    DVTTableView *tableView;
    NSArrayController *arrayController;
    NSString *emptyContentString;
}

@property(copy, nonatomic) NSString *emptyContentString; // @synthesize emptyContentString;
@property(readonly) NSArrayController *arrayController; // @synthesize arrayController;
@property(readonly) DVTTableView *tableView; // @synthesize tableView;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)loadView;
- (void)setContent:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SKEGeometrySourcesInspector : SKEStaticTableViewInspector
{
}

- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface SKEImageButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface SKEInspectorButtonActionProperty : IDEInspectorProperty
{
    NSButton *_button;
    IDEInspectorKeyPath *_targetKeyPath;
    IDEInspectorKeyPath *_argumentKeyPath;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)action:(id)arg1;

@end

@interface SKEInspectorColumnsLayoutView : DVTLayoutView_ML
{
}

- (void)layoutBottomUp;
- (void)layoutTopDown;

@end

@interface SKEInspectorMaterialContentProperty : IDEInspectorProperty
{
    SKEContentsPickerPopUpButton *_picker;
    IDEInspectorKeyPath *_valueKeyPath;
    IDEInspectorKeyPath *_delegateKeyPath;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKEInspectorMessageProperty : IDEInspectorProperty
{
}

- (void)setupRefreshTriggersAndConfigure;

@end

@interface SKEInspectorVector3Property : IDEInspectorProperty
{
    DVTStepperTextField *_xLabel;
    DVTStepperTextField *_yLabel;
    DVTStepperTextField *_zLabel;
    IDEInspectorKeyPath *_valueKeyPath;
    NSString *_nilPlaceholder;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (CDUnknownBlockType)vectorComponentSetter:(long long)arg1 componentValue:(double)arg2;
- (CDUnknownBlockType)vectorComponentExtractor:(long long)arg1;
- (double)baseline;

@end

@interface SKEInspectorVector4Property : IDEInspectorProperty
{
    DVTStepperTextField *_xScrubber;
    DVTStepperTextField *_yScrubber;
    DVTStepperTextField *_zScrubber;
    DVTStepperTextField *_wScrubber;
    NSTextField *_xLabel;
    NSTextField *_yLabel;
    NSTextField *_zLabel;
    NSTextField *_wLabel;
    IDEInspectorKeyPath *_valueKeyPath;
    NSString *_nilPlaceholder;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (CDUnknownBlockType)vectorComponentSetter:(long long)arg1 componentValue:(double)arg2;
- (CDUnknownBlockType)vectorComponentExtractor:(long long)arg1;
- (double)baseline;

@end

@interface SKEIssueProvider : IDEIssueProvider
{
    DVTDelayedInvocation *_batchedUpdateInvocation;
    DVTObservingToken *_openDocumentsChangedToken;
    DVTNotificationToken *_documentChangedToken;
    BOOL _openDocumentsChanged;
    NSSet *_observedDocumentFilePaths;
    NSMutableSet *_changedDocumentFilePaths;
}

- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)performConsistencyCheckForChangedFilePaths:(id)arg1;
- (void)processBatchedChanges:(id)arg1;
- (void)noticeOpenDocumentChanges;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (void)primitiveInvalidate;

@end

@interface SKEMaterialMaterialsInspector : SKEStaticTableViewInspector <NSTableViewDataSource>
{
    NSIndexSet *selectedIndexes;
}

@property(retain, nonatomic) NSIndexSet *selectedIndexes; // @synthesize selectedIndexes;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setContent:(id)arg1;
- (void)viewDidInstall;
- (void)loadView;
- (void)updateSelectedIndexFromBindingSlot;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEMaterialPreviewInspector : IDEInspectorViewController
{
    SCNView *_previewView;
    SCNGeometry *_previewObject;
    SCNLight *_ambientLight;
}

- (void).cxx_destruct;
- (void)loadView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setContent:(id)arg1;
- (void)viewDidInstall;
- (void)configurePreviewScene;
- (void)configureAmbientLightFromMainScene;
- (void)configureMaterialByDefaultingIfNeeded;

@end

@interface SKEMaterialPropertiesInspector : IDEInspectorViewController <NSOutlineViewDataSource, NSOutlineViewDelegate, SKEContentsPickerPopUpButtonDataSource>
{
    NSOutlineView *_outlineView;
}

- (void).cxx_destruct;
- (void)DVTFilePathFieldCell:(id)arg1 chooserSelectedPath:(id)arg2;
- (id)suggestedImagesForContentsPicker:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)outlineViewItemWillCollapse:(id)arg1;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (void)relayoutDetailsView:(id)arg1;
- (void)contentsChanged:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (double)preferredContentViewHeight;
- (id)material;
- (void)loadView;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setContent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEMaterialPropertiesInspectorContentView : DVTControllerContentView
{
    NSScrollView *_scrollView;
    SKEMaterialPropertiesInspector *_controller;
}

- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)layoutBottomUp;
- (void)layoutTopDown;

@end

@interface SKEMaterialPropertiesInspectorScrollView : NSScrollView
{
}

- (void)scrollWheel:(id)arg1;

@end

@interface SKEMaterialPropertiesOutlineView : NSOutlineView
{
}

- (BOOL)validateProposedFirstResponder:(id)arg1 forEvent:(id)arg2;

@end

@interface SKEMaterialPropertiesScrubber : DVTStepperTextField
{
}

- (void)setFloatValue:(float)arg1;

@end

@interface SKEMaterialPropertyDetailsCellView : NSTableCellView
{
    DVTFilePathField *_fullPath;
    DVTFilePathField *_relativePath;
    DVTStepperTextField *_scrubber;
}

@property __weak DVTStepperTextField *scrubber; // @synthesize scrubber=_scrubber;
@property __weak DVTFilePathField *relativePath; // @synthesize relativePath=_relativePath;
@property __weak DVTFilePathField *fullPath; // @synthesize fullPath=_fullPath;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SKEMaterialPropertyMasterCellView : NSTableCellView
{
    SKEContentsPickerPopUpButton *_picker;
}

@property __weak SKEContentsPickerPopUpButton *picker; // @synthesize picker=_picker;
- (void).cxx_destruct;

@end

@interface SKEMediaHelper : NSObject
{
    SKEDocument *_document;
}

+ (id)missingMediaImage;
+ (void)endObservationOfFilePathForAssociatedObject:(id)arg1;
+ (void)beginObservationOfFilePath:(id)arg1 forAssociatedObject:(id)arg2 block:(CDUnknownBlockType)arg3;
+ (void)observeContentsOfMaterialProperty:(id)arg1;
+ (id)contentsOfMaterialProperty:(id)arg1;
+ (void)setContents:(id)arg1 ofMaterialProperty:(id)arg2;
+ (void)refreshImageContentsOfMaterialProperty:(id)arg1;
- (void).cxx_destruct;
- (void)sanitizeAllMaterialsInDocument;
- (void)performBlockBySettingAllMissingContentsToTheirWantedContents:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithDocument:(id)arg1;

@end

@interface SKENodeAnimationsInspector : SKEStaticTableViewInspector
{
}

- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface SKENodeAttributeInfoCell : NSButtonCell
{
    NSArray *_imageNames;
    BOOL _hidden;
}

+ (void)initialize;
@property BOOL hidden; // @synthesize hidden=_hidden;
- (void).cxx_destruct;
- (void)setControlViewWorkaround13788386:(id)arg1;
- (void)setControlView:(id)arg1;
@property(copy) NSArray *nodeAttributeInfo;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGSize)cellSize;

@end

@interface SKENodeAttributesInspector : SKEStaticTableViewInspector
{
}

- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (void)viewDidInstall;
- (void)loadView;

@end

@interface SKEOutlineCell : DVTImageAndTextCell
{
}

+ (id)cell;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unbind:(id)arg1;
- (void)bind:(id)arg1 toObject:(id)arg2 withKeyPath:(id)arg3 options:(id)arg4;
- (void)configureWithMemberWrapper:(id)arg1;
- (void)initStyle;

@end

@interface SKEOutlineHeaderCell : DVTImageAndTextCell
{
}

+ (id)cell;

@end

@interface SKEOutlineImageAndTextCell : SKEOutlineCell
{
}

+ (id)cell;

@end

@interface SKEOutlineTextAndImagesCell : SKEOutlineCell
{
}

+ (id)cell;
- (void)setControlView:(id)arg1;

@end

@interface SKEOutlineTextCell : SKEOutlineCell
{
}

+ (id)cell;

@end

@interface SKEOutlineView : DVTOutlineView
{
    CDUnknownBlockType _rightOrCtrlLeftClickHandler;
    CDUnknownBlockType _rightOrCtrlLeftDragHandler;
    CDUnknownBlockType _mouseDownHandler;
}

@property(copy) CDUnknownBlockType mouseDownHandler; // @synthesize mouseDownHandler=_mouseDownHandler;
@property(copy) CDUnknownBlockType rightOrCtrlLeftDragHandler; // @synthesize rightOrCtrlLeftDragHandler=_rightOrCtrlLeftDragHandler;
@property(copy) CDUnknownBlockType rightOrCtrlLeftClickHandler; // @synthesize rightOrCtrlLeftClickHandler=_rightOrCtrlLeftClickHandler;
- (void).cxx_destruct;
- (void)drawRow:(long long)arg1 clipRect:(struct CGRect)arg2;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (double)indentationAdjustmentForRow:(unsigned long long)arg1;
- (struct CGRect)rectOfRow:(long long)arg1;
- (double)proposedRowHeightForItemAtRow:(long long)arg1 isHeader:(BOOL)arg2;
- (double)proposedRowHeightForItem:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)trackingLoopWithInitialEvent:(id)arg1;
@property __weak id <SKEOutlineViewDelegate> delegate;

@end

@interface SKEParticlePropertyControllerProperty : IDEInspectorProperty <SKEParticlePropertyControllerViewControllerDelegate>
{
    NSButton *_button;
    NSTextField *_label;
    SCNParticlePropertyController *_particlePropertyController;
    IDEInspectorKeyPath *_valueKeyPath;
    NSPopover *_popover;
    SKEParticlePropertyControllerViewController *_editorViewController;
}

- (void).cxx_destruct;
- (void)showEditor:(id)arg1;
- (void)particlePropertyControllerViewControllerParticlePropertyControllerDidChange:(id)arg1;
- (void)updateLabel;
- (void)primitiveInvalidate;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEParticlePropertyControllerViewController : DVTPopoverContentViewController <SKEAnimationEditorViewDelegate>
{
    SKEAnimationEditorView *_animationEditorView;
    NSPopUpButton *_curveTypePopUpButton;
    NSPopUpButton *_timingFunctionPopUpButton;
    NSPopUpButton *_presetPopUpButton;
    NSMutableDictionary *_presetAnimations;
    NSMenuItem *_customAnimationMenuItem;
    SCNParticlePropertyController *_particlePropertyController;
    id <SKEParticlePropertyControllerViewControllerDelegate> _delegate;
}

@property __weak id <SKEParticlePropertyControllerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didSelectPreset:(id)arg1;
- (void)curveTypeDidChange:(id)arg1;
- (void)timingFunctionDidChange:(id)arg1;
@property(readonly) NSString *animationDisplayName;
- (id)displayNameForPresetName:(unsigned long long)arg1 inMenu:(BOOL)arg2;
@property(retain) SCNParticlePropertyController *particlePropertyController;
- (BOOL)isAnimation:(id)arg1 equalToAnimation:(id)arg2;
- (id)animationWithPresetName:(unsigned long long)arg1;
- (unsigned long long)currentAnimationName;
- (void)refresh;
- (void)animationEditorViewAnimationDidChange:(id)arg1;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEPlaceholderView : DVTLayoutView_ML
{
    NSTextField *_placeholderTextField;
}

- (void).cxx_destruct;
- (void)layoutBottomUp;
@property(copy) NSString *placeholderString;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKEResourceProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    IDEInspectorKeyPath *_valueKeyPath;
    NSString *_extension;
    NSString *_placeholder;
    NSMutableDictionary *_resources;
}

- (void).cxx_destruct;
- (id)findIndicatorContentViewWithContext:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (id)suggestedSceneNames;
- (double)baseline;

@end

@interface SKESceneView : SCNView <SCNSceneRendererDelegate>
{
    BOOL _mouseDragged;
    long long _mouseClickCount;
    struct CGPoint _mouseClickLocation;
    struct CGSize size;
    SCNRenderer *offscreenRenderer;
    NSEvent *_cachedMouseDownEvent;
    unsigned int _texture;
    BOOL _multisamplingEnabled;
    id <SKESceneViewDelegate> _selectionDelegate;
}

@property __weak id <SKESceneViewDelegate> selectionDelegate; // @synthesize selectionDelegate=_selectionDelegate;
@property(nonatomic) BOOL multisamplingEnabled; // @synthesize multisamplingEnabled=_multisamplingEnabled;
- (void).cxx_destruct;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
@property __weak SCNNode *cameraNode;
- (id)makeBackingLayer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKESceneViewNestView : NSView
{
    NSView *sceneView;
    struct CGSize _aspectRatio;
}

- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

@end

@interface SKEShadowBox : NSView
{
    NSShadow *_boxShadow;
    unsigned long long _shadowedEdges;
}

- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1;
@property(nonatomic) unsigned long long shadowedEdges;
@property(copy, nonatomic) NSShadow *boxShadow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKESliderCell : NSSliderCell
{
    NSImage *knobImageHighlighted;
    NSImage *knobImage;
    NSImage *leftBar;
    NSImage *centerBar;
    NSImage *rightBar;
}

- (void).cxx_destruct;
- (BOOL)_usesCustomTrackImage;
- (void)drawBarInside:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (void)drawKnob:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SKEStaticTableViewInspectorContainerView : DVTLayoutView_ML
{
    NSTableView *tableView;
}

- (void).cxx_destruct;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (id)scrollView;

@end

@interface SKETextConversionProvider : NSObject <DVTDiffTextFilter>
{
}

+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
+ (id)pathToTextFileFromInputFilePath:(id)arg1 error:(id *)arg2;
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;
+ (unsigned long long)dataTypeForFileAtPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKETimeSlider : NSView
{
    NSObject<SKETimeSliderDataSource> *_dataSource;
    NSSlider *_scrubber;
    NSButton *_playPauseButton;
    NSTimer *_refreshTimer;
    NSTextField *_timeLabel;
}

@property(readonly) __weak NSObject<SKETimeSliderDataSource> *dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)userScrubbed:(id)arg1;
- (void)playPauseButtonClicked:(id)arg1;
- (void)_updatePlayPauseButton;
- (void)setNeedsUpdate:(BOOL)arg1;
- (void)_updateTimeDependentUI;
- (void)_updateRefreshTimer;
- (void)stopControl;
- (void)startControlWithDataSource:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)timeStringFromTimeInterval:(double)arg1 longForm:(BOOL)arg2;

@end

@interface SKETimeSliderInternal : SKETimeSlider
{
}

@end

@interface SKPSEDocument : IDEEditorDocument <SKEDocumentProtocol, IDEDocumentStructureProviding>
{
    NSURL *_documentURL;
    SCNParticleSystem *_particleSystem;
    SKEDocumentObjectMemberWrapper *_particleSystemWrapper;
    id _inspectionDocumentController;
}

@property(retain) id inspectionDocumentController; // @synthesize inspectionDocumentController=_inspectionDocumentController;
- (void).cxx_destruct;
- (void)didReplaceChildMember:(id)arg1 ofMember:(id)arg2 byChildMember:(id)arg3;
- (void)willReplaceChildMember:(id)arg1 ofMember:(id)arg2 byChildMember:(id)arg3;
- (void)didRemoveChildMember:(id)arg1 fromMember:(id)arg2;
- (void)willRemoveChildMember:(id)arg1 fromMember:(id)arg2;
- (void)didAddChildMember:(id)arg1 toMember:(id)arg2;
- (void)willAddChildMember:(id)arg1 toMember:(id)arg2;
- (id)memberWrapperForMember:(id)arg1;
- (id)memberWrappersForMembersOfClass:(Class)arg1;
- (void)stopUndoObservationsOf:(id)arg1;
- (void)startUndoObservationsOf:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_undoEdition:(id)arg1;
@property(readonly) SKEDocumentObjectMemberWrapper *particleSystemWrapper;
- (void)updateChangeCount:(unsigned long long)arg1;
- (void)editorDocumentWillClose;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)canSave;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKPSEDocumentViewController : IDEEditor <DVTReplacementViewDelegate, SKEContentsPickerPopUpButtonDataSource, SCNSceneRendererDelegate>
{
    SCNView *_sceneView;
    NSSegmentedControl *_playingActionsSegmentedControl;
    NSSegmentedControl *_editingActionsSegmentedControl;
    DVTBorderedView *_backgroundView;
    NSArray *_currentSelectedItems;
    SCNScene *_scene;
    SCNNode *_cameraNode;
    SCNNode *_particleSystemNode;
    DVTDelayedInvocation *_restartInvocation;
    double _watchDogTime;
}

- (void).cxx_destruct;
- (id)suggestedImagesForContentsPicker:(id)arg1;
- (void)selectDocumentLocations:(id)arg1;
- (void)setCurrentSelectedItems:(id)arg1;
- (id)currentSelectedItems;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)scheduleRestartInvocationIfNeeded;
- (void)rightSegmentedControlAction:(id)arg1;
- (void)leftSegmentedControlAction:(id)arg1;
- (void)restartParticleSystem;
- (void)setPaused:(BOOL)arg1;
- (void)changeBackgroundColor:(id)arg1;
- (void)backgroundColorDidChange:(id)arg1;
- (void)renderer:(id)arg1 didRenderScene:(id)arg2 atTime:(double)arg3;
- (void)renderer:(id)arg1 willRenderScene:(id)arg2 atTime:(double)arg3;
- (void)resetPOVUsingSystemParticleProperties;
- (void)buildScene;
- (id)particleSystem;
- (BOOL)canBecomeMainViewController;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)primitiveInvalidate;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) SKPSEDocument *document;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _SKEPrivateClassForFindingBundle : NSObject
{
}

@end

