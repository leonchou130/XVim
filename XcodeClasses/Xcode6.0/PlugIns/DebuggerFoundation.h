//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/PlugIns/DebuggerFoundation.ideplugin/Contents/MacOS/DebuggerFoundation
// UUID: 07CDF469-55E8-3103-826C-DD5B3DD150CE
//
//                           Arch: x86_64
//                Current version: 6244.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6244.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DBGKitDebuggingAddition <IDEDebuggingAddition>

@optional
@property(nonatomic) BOOL showsResponsiveScrollingStatusOfAllViews;
@property(nonatomic) BOOL flashesDrawingOfAllViews;
@property(nonatomic) BOOL showsAlignmentRectanglesOfAllViews;
@property(nonatomic) BOOL showsFramesOfAllViews;
@end

@protocol DBGLazyObservableDictionaryDelegate <NSObject>
- (id)valueForKey:(NSString *)arg1 forLazyDictionary:(DBGLazyObservableDictionary *)arg2;
@end

@protocol DBGViewDescriber <DVTInvalidation>
+ (BOOL)shouldInstantiateInLaunchSession:(IDELaunchSession *)arg1;
+ (NSString *)viewDebuggingDylibPathForLaunchSession:(IDELaunchSession *)arg1;
@property(readonly) NSURL *url;
@property(readonly) NSString *classNameForDefaultViewIcon;
- (NSArray *)structuresForInspectableExpressions;
- (NSArray *)propertyEntriesForViewObject:(DBGViewObject *)arg1;
- (NSMutableArray *)collectLayerViewsFromPlistArray:(NSArray *)arg1;
- (void)fetchViewInfo:(void (^)(unsigned long long, unsigned long long, double))arg1 resultHandler:(void (^)(NSArray *, DBGViewWindow *))arg2;
- (IDELaunchSession *)launchSession;
- (NSString *)associatedProcessUUID;
- (void)getDataValueForExpression:(NSString *)arg1 handler:(void (^)(DBGDataValue *))arg2;
- (DBGLayoutConstraintSet *)constraintsReferencingViewObject:(DBGViewObject *)arg1;
- (DBGLayoutConstraintSet *)constraintsAffectingViewObject:(DBGViewObject *)arg1;
- (BOOL)isViewObjectInteresting:(DBGViewObject *)arg1;
- (NSArray *)classHierarchyForClass:(NSString *)arg1;
- (NSString *)targetPlatformFamilyIdentifier;
- (void)populatePropertyList:(DBGViewChildMemberList *)arg1 forObject:(DBGViewObject *)arg2 notify:(void (^)(DBGViewChildMemberList *))arg3;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol IDEDataValue <NSObject>
@property(readonly) BOOL childValuesCountValid;
@property(readonly) NSArray *childValues;
@property(readonly) BOOL hasChildValues;
@property(readonly) BOOL inScope;
@property(readonly) BOOL itemDescriptionHasChanged;
@property(readonly, copy) NSString *itemDescription;
@property(readonly) BOOL typeHasChanged;
@property(readonly, copy) NSString *type;
@property(readonly, copy) NSString *primitiveLogicalValue;
@property(readonly) BOOL logicalValueHasChanged;
@property(readonly, copy) NSString *logicalValue;
@property(readonly) BOOL valueHasChanged;
@property(readonly) BOOL isValueEditable;
@property(copy) NSString *value;
@property(readonly, copy) NSString *name;
@end

@protocol IDEDebugCompressionStrategy <NSObject>
+ (DVTFilePath *)genericMaskFilePathWithColorsInRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
+ (DVTFilePath *)maskFilePathForUserCodeWithColorsInRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
+ (DVTFilePath *)maskFilePathForModulePathString:(NSString *)arg1 withColorsInRed:(double *)arg2 green:(double *)arg3 blue:(double *)arg4 alpha:(double *)arg5;
- (NSIndexSet *)compressStackFrames:(NSArray *)arg1 level:(unsigned long long)arg2;
@end

@protocol IDEDebugNavigableModel <NSObject>
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@end

@protocol IDEDebugProcess <IDEDebugNavigableModel>
@property(copy, nonatomic) NSString *name;
- (NSString *)contentDelegateUIExtensionIdentifier;

@optional
@property(readonly, nonatomic) NSArray *loadedCodeModules;
@end

@protocol IDEDebugSession <NSObject>
@property BOOL isDetached;
@property(getter=isProfilingSupported) BOOL profilingSupported;
@property(readonly, copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocation;
@property BOOL hasCrashed;
@property long long exitCode;
@property BOOL hasExitCode;
@property(readonly) id <IDEDebugProcess> process;
@property(readonly) int coalescedState;
@property int state;
- (void)requestLoadDylibAtPath:(NSString *)arg1 completionBlock:(void (^)(NSError *))arg2;
- (struct _NSRange)rangeOfExpressionForFullTextAtPrompt:(NSString *)arg1;
- (BOOL)canContinueToLocation:(DVTTextDocumentLocation *)arg1 withinBlockAtRange:(struct _NSRange)arg2;
- (BOOL)consoleShouldTrackInputHistory;
- (BOOL)shouldAcceptFromDebugSession:(id <IDEDebugSession>)arg1 error:(id *)arg2;
- (BOOL)shouldRelinquishToDebugSession:(id <IDEDebugSession>)arg1 error:(id *)arg2;
- (void)evaluateExpression:(NSString *)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(NSObject<OS_dispatch_queue> *)arg4 completionHandler:(void (^)(NSString *, NSString *))arg5;
- (void)evaluateExpression:(NSString *)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(NSObject<OS_dispatch_queue> *)arg4 resultHandler:(void (^)(NSString *))arg5;
- (void)executeDebuggerCommand:(NSString *)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3;
- (void)requestFetchEvent;
- (void)requestDetach;
- (void)requestStop;
- (void)requestContinueToLocation:(DVTTextDocumentLocation *)arg1;
- (void)requestContinue;
- (void)requestPause;
- (void)requestStepOverSuspendOtherThreads;
- (void)requestStepInSuspendOtherThreads;
- (void)requestStepOverInstruction;
- (void)requestStepIntoInstruction;
- (void)requestStepOut;
- (void)requestStepOverLine;
- (void)requestStepIn;
@end

@protocol IDEDebuggingAddition <NSObject, DVTInvalidation>
@property(readonly) NSString *identifier;
@property(readonly, nonatomic) IDELaunchSession *launchSession;
- (id)initInLaunchSession:(IDELaunchSession *)arg1 withAppDisplayName:(NSString *)arg2 runDestination:(IDERunDestination *)arg3 fromExtension:(DVTExtension *)arg4;

@optional
+ (BOOL)shouldInstantiateInLaunchSession:(IDELaunchSession *)arg1;
- (void)processFinalLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
- (IDELaunchParametersSnapshot *)adjustedLaunchParametersForLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface DBGAbstractViewDescriber : NSObject <DBGViewDescriber>
{
    NSMutableDictionary *_classNameToPropertyEntryArrayMap;
    DBGDebugSession *_debugSession;
    NSDictionary *_inferiorClassMap;
    NSURL *_url;
}

+ (void)initialize;
+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
+ (id)viewDebuggingDylibPathForLaunchSession:(id)arg1;
@property(retain) NSURL *url; // @synthesize url=_url;
@property(retain) NSDictionary *inferiorClassMap; // @synthesize inferiorClassMap=_inferiorClassMap;
@property(retain) DBGDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)primitiveInvalidate;
- (id)_createPropertyEntriesForClassName:(id)arg1;
- (id)_propertyEntriesForClassName:(id)arg1;
- (id)structuresForInspectableExpressions;
- (id)propertyEntriesForViewObject:(id)arg1;
- (id)launchSession;
- (id)associatedProcessUUID;
- (void)getDataValueForExpression:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_asyncAttributedStringFromDataValueSummary:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)asyncStringFromDataValueSummary:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)stringFromSummary:(id)arg1;
- (void)_asyncAskForInspectableArrayFromDataValue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (BOOL)inspectableValueForDataValue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)classHierarchyForClass:(id)arg1;
- (id)targetPlatformFamilyIdentifier;
- (id)targetPlatform;
- (void)_runExpressionToGetChildForKey:(id)arg1 inferiorPointerExpression:(id)arg2 list:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_fetchPropertyValueForPropertyEntry:(id)arg1 onDataValue:(id)arg2 object:(id)arg3 list:(id)arg4 lastIteration:(BOOL)arg5 handler:(CDUnknownBlockType)arg6;
- (void)populatePropertyList:(id)arg1 forObject:(id)arg2 notify:(CDUnknownBlockType)arg3;
- (id)_parentWindowForViewObject:(id)arg1;
- (id)constraintsReferencingViewObject:(id)arg1;
- (id)constraintsAffectingViewObject:(id)arg1;
- (BOOL)isViewObjectInteresting:(id)arg1;
@property(readonly) NSString *classNameForDefaultViewIcon;
- (id)_platformFamilyIdentifier;
- (id)collectLayerViewsFromPlistArray:(id)arg1;
- (void)fetchViewInfo:(CDUnknownBlockType)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (id)viewWindowObjectsFromDictionary:(id)arg1;
- (id)initWithDebugSession:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGAppKitDebuggingAddition : NSObject <DBGKitDebuggingAddition>
{
    BOOL _showsFramesOfAllViews;
    BOOL _showsAlignmentRectanglesOfAllViews;
    BOOL _flashesDrawingOfAllViews;
    BOOL _showsResponsiveScrollingStatusOfAllViews;
    IDELaunchSession *_launchSession;
    NSString *_identifier;
}

+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
+ (void)initialize;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(nonatomic) BOOL showsResponsiveScrollingStatusOfAllViews; // @synthesize showsResponsiveScrollingStatusOfAllViews=_showsResponsiveScrollingStatusOfAllViews;
@property(nonatomic) BOOL flashesDrawingOfAllViews; // @synthesize flashesDrawingOfAllViews=_flashesDrawingOfAllViews;
@property(nonatomic) BOOL showsAlignmentRectanglesOfAllViews; // @synthesize showsAlignmentRectanglesOfAllViews=_showsAlignmentRectanglesOfAllViews;
@property(nonatomic) BOOL showsFramesOfAllViews; // @synthesize showsFramesOfAllViews=_showsFramesOfAllViews;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)initInLaunchSession:(id)arg1 withAppDisplayName:(id)arg2 runDestination:(id)arg3 fromExtension:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGCodeModule : IDECodeModule
{
    NSString *_frameworkNameIncludingExtension;
    NSNumber *_timestamp;
}

+ (id)keyPathsForValuesAffectingPath;
+ (id)logAspect;
+ (id)keyPathsForValuesAffectingTimestamp;
+ (id)keyPathsForValuesAffectingName;
@property(retain, nonatomic) NSNumber *timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (id)path;
- (id)displayAddress;
- (id)frameworkNameIncludingExtension;
- (id)name;

@end

@interface DBGCompressedStackFrame : NSObject <IDEDebugNavigableModel>
{
    NSArray *_representedStackFrames;
}

@property(readonly, copy) NSArray *representedStackFrames; // @synthesize representedStackFrames=_representedStackFrames;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@property(readonly) BOOL hasSymbols;
@property(readonly, copy) NSString *displayName;
@property(readonly, copy) NSNumber *frameNumber;
@property(readonly, copy) NSString *name;
- (id)initWithStackFrames:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface DBGCompressionInfoProvider : NSObject
{
    CDUnknownBlockType _debugInfoForIndexQueryBlock;
    CDUnknownBlockType _libraryNameForIndexQueryBlock;
}

@property(readonly) CDUnknownBlockType libraryNameForIndexQueryBlock; // @synthesize libraryNameForIndexQueryBlock=_libraryNameForIndexQueryBlock;
@property(readonly) CDUnknownBlockType debugInfoForIndexQueryBlock; // @synthesize debugInfoForIndexQueryBlock=_debugInfoForIndexQueryBlock;
- (void).cxx_destruct;
- (id)initWithDebugInfoQueryBlock:(CDUnknownBlockType)arg1 libraryNameQueryBlock:(CDUnknownBlockType)arg2;

@end

@interface DBGDataType : NSObject
{
    NSString *_typeName;
    NSString *_typeNameWithoutQualifiers;
    NSString *_displayTypeName;
    NSString *_pointeeTypeName;
}

+ (BOOL)isZombie:(id)arg1;
@property(readonly) NSString *pointeeTypeName; // @synthesize pointeeTypeName=_pointeeTypeName;
@property(readonly) NSString *displayTypeName; // @synthesize displayTypeName=_displayTypeName;
@property(readonly) NSString *typeName; // @synthesize typeName=_typeName;
- (void).cxx_destruct;
- (id)description;
@property(readonly) NSString *typeNameWithoutQualifiers;
@property(readonly) BOOL isBOOLOrBoolean;
@property(readonly) BOOL isUnknownType;
@property(readonly) BOOL isPointer;
- (id)initWithTypename:(id)arg1;

@end

@interface DBGDataValue : NSObject <DBGLazyObservableDictionaryDelegate, IDEDataValue, DVTInvalidation>
{
    DBGStackFrame *_stackFrame;
    DBGDataType *_dynamicType;
    DBGDataType *_previousDynamicType;
    int _valueValidity;
    BOOL _containsFunctionExpressions;
    DBGDataValueSummaryFormatter *_summaryFormatter;
    NSMutableSet *_requestedChildrenByName;
    DBGLazyObservableDictionary *_lazyChildValuesByName;
    BOOL _needToUpdateSummaryFormatter;
    BOOL _formattedSummaryHasAnyChanges;
    NSString *_logicalValue;
    NSAttributedString *_unescapedAttributedFormattedSummary;
    NSAttributedString *_escapedAttributedFormattedSummary;
    DVTObservingToken *_valueObserver;
    DVTObservingToken *_inScopeObserver;
    DVTObservingToken *_childValuesObservationToken;
}

+ (void)initialize;
+ (id)summaryUnavailableAttributedString;
+ (id)summaryUnavailableString;
+ (id)keyPathsForValuesAffectingFormattedSummary;
+ (id)keyPathsForValuesAffectingTypeHasChanged;
+ (id)keyPathsForValuesAffectingType;
+ (id)keyPathsForValuesAffectingLogicalValueHasChanged;
+ (id)keyPathsForValuesAffectingLogicalValue;
+ (id)kvoChildPathForValuePath:(id)arg1;
@property(retain, nonatomic) DBGLazyObservableDictionary *lazyChildValuesByName; // @synthesize lazyChildValuesByName=_lazyChildValuesByName;
@property BOOL containsFunctionExpressions; // @synthesize containsFunctionExpressions=_containsFunctionExpressions;
@property int valueValidity; // @synthesize valueValidity=_valueValidity;
@property(readonly) DBGDataType *dynamicType; // @synthesize dynamicType=_dynamicType;
@property(readonly) DBGStackFrame *stackFrame; // @synthesize stackFrame=_stackFrame;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)_contentDescription;
- (id)_contentDescriptionWithChildValuesAtLevel:(unsigned long long)arg1;
@property(readonly, copy) NSString *description;
- (id)_paddingForLevel:(unsigned long long)arg1;
- (id)primitiveChildValues;
- (void)_handleChildValuesChanged;
- (id)valueForKey:(id)arg1 forLazyDictionary:(id)arg2;
- (id)_childWithName:(id)arg1;
- (void)classNameHierarchy:(CDUnknownBlockType)arg1;
- (void)ensureAllDisplayablePropertiesAreLoaded:(CDUnknownBlockType)arg1;
@property(readonly) BOOL representsNullObjectPointer;
@property(readonly) BOOL representsNilObjectiveCObject;
- (void)watch;
@property(readonly) NSString *realName;
- (void)childWithName:(id)arg1 foundChild:(CDUnknownBlockType)arg2;
@property(readonly) BOOL childValuesCountValid;
- (void)loadedChildValues:(CDUnknownBlockType)arg1;
@property(readonly) NSArray *childValues;
@property(readonly) BOOL hasChildValues;
@property(readonly) BOOL inScope;
@property(retain) DBGDataValueSummaryFormatter *summaryFormatter; // @synthesize summaryFormatter=_summaryFormatter;
- (void)_updateSummaryFormatterIfNecessary;
- (void)_updateSummaryFormatter;
- (BOOL)wantsToProvideSummary;
- (id)_attributedStringByEscapeNewlines:(id)arg1;
@property(readonly) BOOL itemDescriptionHasChanged;
@property(readonly, copy) NSString *itemDescription;
- (id)primitiveFormattedSummary;
@property(readonly) NSAttributedString *formattedSummary;
- (void)_summaryFormatterInvalidated:(id)arg1;
@property(readonly) BOOL typeHasChanged;
@property(readonly, copy) NSString *type;
@property(readonly) BOOL valueHasChanged;
@property(readonly) BOOL isValueEditable;
@property(copy) NSString *value;
@property(readonly, copy) NSString *primitiveLogicalValue;
@property(readonly) BOOL logicalValueHasChanged;
- (BOOL)hasSummaryFormatter;
- (BOOL)isNilPointer;
- (BOOL)isPointer;
@property(readonly, copy) NSString *logicalValue;
@property(readonly, copy) NSString *name;
@property(readonly) DBGDataValue *parent;
@property(readonly) BOOL dynamicTypeHasChanged;
@property(readonly) BOOL summaryHasChanged;
@property(retain) DBGDataValueFormat *format;
@property(readonly) NSString *blockStartAddress;
@property(readonly) NSString *summary;
- (void)primitiveSetDynamicType:(id)arg1;
- (id)simpleTypeName;
- (void)setDynamicType:(id)arg1;
@property(readonly) DBGDataType *staticType;
@property(readonly) NSString *expressionPath;
@property(readonly) NSMutableSet *requestedChildrenByName; // @synthesize requestedChildrenByName=_requestedChildrenByName;
- (id)initWithStackFrame:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGDataValueFormat : NSObject
{
    NSString *_displayName;
    unsigned long long _tag;
}

+ (id)binaryFormatUsingTag:(unsigned long long)arg1;
+ (id)osTypeFormatUsingTag:(unsigned long long)arg1;
+ (id)octalFormatUsingTag:(unsigned long long)arg1;
+ (id)unsignedDecimalFormatUsingTag:(unsigned long long)arg1;
+ (id)decimalFormatUsingTag:(unsigned long long)arg1;
+ (id)hexFormatUsingTag:(unsigned long long)arg1;
+ (id)naturalFormatUsingTag:(unsigned long long)arg1;
@property(readonly) unsigned long long tag; // @synthesize tag=_tag;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (id)initWithDisplayName:(id)arg1 tag:(unsigned long long)arg2;

@end

@interface DBGDataValueSummaryFormat : NSObject
{
    NSString *_formatString;
    NSString *_type;
    DBGSummaryPart *_formatRoot;
    DVTFilePath *_dylibPath;
    BOOL _userDefined;
}

+ (id)zombieFormatForType:(id)arg1;
+ (BOOL)writeSummaryFormats:(id)arg1 toPath:(id)arg2;
+ (id)legacySummaryFormatsAtPath:(id)arg1;
@property BOOL userDefined; // @synthesize userDefined=_userDefined;
@property(readonly) DVTFilePath *dylibPath; // @synthesize dylibPath=_dylibPath;
@property(readonly) NSString *type; // @synthesize type=_type;
@property(readonly) NSString *formatString; // @synthesize formatString=_formatString;
- (void).cxx_destruct;
@property(readonly) DBGSummaryPart *formatRoot; // @synthesize formatRoot=_formatRoot;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setType:(id)arg1;
- (void)setFormatString:(id)arg1;
- (id)init;
- (id)initFromXMLUnarchiver:(id)arg1 archiveVersion:(float)arg2;
- (id)initWithString:(id)arg1 forType:(id)arg2 usingDylibPath:(id)arg3;

@end

@interface DBGDataValueSummaryFormatManager : NSObject
{
    DVTMapTable *_sessionSpecificData;
    NSMutableDictionary *_summaryFormatsByType;
    NSMutableDictionary *_userDefinedFormatters;
    BOOL _hasUnhandledArchiveData;
}

+ (id)summaryFormatterDirectories;
+ (id)legacyCustomDataFormattersPath;
+ (id)sharedManager;
- (void).cxx_destruct;
- (void)_writeUserDefinedFormatters;
- (void)_loadUserDefinedFormatters;
- (void)addSummaryFormatters:(id)arg1 fromXMLUnarchiver:(id)arg2;
- (void)dvt_encodeRelationshipsWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)dvt_encodeAttributesWithXMLArchiver:(id)arg1 version:(id)arg2;
- (void)setSummaryFormat:(id)arg1 forType:(id)arg2;
- (id)_defaultSummaryFormatForType:(id)arg1;
- (id)summaryFormatForType:(id)arg1;
- (id)summaryFormatForDataValue:(id)arg1;
- (id)_sessionSpecficInfo:(id)arg1;
- (id)summaryFormatsByType;
- (id)loadDataFormattersFromDirectory:(id)arg1;
- (id)init;

@end

@interface DBGDataValueSummaryFormatter : NSObject <DVTInvalidation>
{
    DBGDataValue *_dataValue;
    DBGDataValueSummaryFormat *_format;
    NSAttributedString *_attributedSummaryValue;
    BOOL _containsFunctionExpressions;
    unsigned long long _numDependentValues;
    unsigned long long _numDependentExpressions;
    BOOL _summaryContainsChangeAttribute;
    NSMutableDictionary *_cachedPathValues;
    NSMutableDictionary *_cachedExpressionValues;
}

+ (void)initialize;
@property BOOL summaryContainsChangeAttribute; // @synthesize summaryContainsChangeAttribute=_summaryContainsChangeAttribute;
@property(retain) NSAttributedString *attributedSummaryValue; // @synthesize attributedSummaryValue=_attributedSummaryValue;
@property(readonly) DBGDataValueSummaryFormat *format; // @synthesize format=_format;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly) NSString *formatString;
- (BOOL)_attributedStringContainsChangeAttribute:(id)arg1;
- (void)_updateAttributedSummaryValueIfPossible;
- (void)_updateAttributedSummaryValueToNotAvailable;
- (void)_doObserveExpressionParts;
- (void)_observeExpressionParts;
- (void)_observeValuePathParts;
- (id)initFormatterForDataValue:(id)arg1 withFormat:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGDebugSession : NSObject <IDEDebugSession, DVTInvalidation>
{
    IDELaunchSession *_launchSession;
    int _state;
    int _coalescedState;
    long long _exitCode;
    BOOL _hasExitCode;
    BOOL _hasCrashed;
    BOOL _profilingSupported;
    BOOL _isDetached;
    NSMapTable *_breakpointsToTokenSets;
    NSMapTable *_locationsToTokenSets;
    NSMapTable *_watchpointsToTokenSets;
    DVTTextDocumentLocation *_instructionPointerLocation;
    BOOL _debuggerShouldAttachToTarget;
    NSMutableSet *_dataValuesObservers;
    DVTMapTable *_breakpointsToIdentifiers;
    DVTMapTable *_locationsToIdentifiers;
    DVTMapTable *_watchpointsToIdentifiers;
    DVTDispatchLock *_breakpointsAndWatchpointsToIdentifiersLock;
    NSMutableSet *_profileDataObservers;
    NSMutableArray *_CPUFirstIndicators;
    NSDictionary *_CPUDistribution;
    DVTMutableOrderedDictionary *_CPUUsagesForThreadDictionary;
    NSMutableArray *_prunedThreadIDsForCPUUsages;
    NSMutableDictionary *_threadNameForThreadIDDictionary;
    NSMutableDictionary *_qosValueForThreadIDDictionary;
    NSMutableArray *_memoryFirstIndicators;
    NSDictionary *_memoryDistribution;
    NSMutableArray *_memoryMeasurements;
    NSMutableArray *_energyMeasurements;
    int _logFD;
    DVTObservingToken *_targetOutputStateObservingToken;
    DVTObservingToken *_targetControlStateObservingToken;
    DVTObservingToken *_breakpontsActivationObservingToken;
    DVTObservingToken *_breakpointListObserverToken;
    DVTObservingToken *_hasExitCodeObserverToken;
    IDERunOperationWorker *_debugLauncher;
    DBGProcess *_targetProcess;
    id <DBGDebugSessionBreakpointLifeCycleDelegate> _breakpointLifeCycleDelegate;
    DVTTextDocumentLocation *_instructionPointerLocationForDisassembly;
    IDEConsoleAdaptor *_debuggerConsoleAdaptor;
    IDEConsoleAdaptor *_targetConsoleAdaptor;
    unsigned long long _CPUFirstIndicatorHigh;
    unsigned long long _CPUFirstIndicatorLow;
    unsigned long long _totalRunningTimeMicroSeconds;
    NSString *_sampleText;
    NSString *_heapText;
    NSError *_alertError;
    NSDate *_loggingInitializedDate;
    unsigned long long _memoryRPRVTHigh;
    unsigned long long _memoryRPRVTLow;
    unsigned long long _memoryAnonymousHigh;
    unsigned long long _memoryAnonymousLow;
    unsigned long long _memoryDirtyPageSizeHigh;
    unsigned long long _memoryDirtyPageSizeLow;
    NSMutableSet *_stackFramesForDisassembly;
}

+ (id)keyPathsForValuesAffectingTotalRunningTime;
+ (id)createErrorForFailureToLaunchExecutable:(id)arg1 launchSession:(id)arg2;
+ (id)keyPathsForValuesAffectingProcess;
+ (void)initialize;
@property(retain) NSMutableSet *stackFramesForDisassembly; // @synthesize stackFramesForDisassembly=_stackFramesForDisassembly;
@property unsigned long long memoryDirtyPageSizeLow; // @synthesize memoryDirtyPageSizeLow=_memoryDirtyPageSizeLow;
@property unsigned long long memoryDirtyPageSizeHigh; // @synthesize memoryDirtyPageSizeHigh=_memoryDirtyPageSizeHigh;
@property unsigned long long memoryAnonymousLow; // @synthesize memoryAnonymousLow=_memoryAnonymousLow;
@property unsigned long long memoryAnonymousHigh; // @synthesize memoryAnonymousHigh=_memoryAnonymousHigh;
@property unsigned long long memoryRPRVTLow; // @synthesize memoryRPRVTLow=_memoryRPRVTLow;
@property unsigned long long memoryRPRVTHigh; // @synthesize memoryRPRVTHigh=_memoryRPRVTHigh;
@property(readonly) NSDate *loggingInitializedDate; // @synthesize loggingInitializedDate=_loggingInitializedDate;
@property(copy) NSError *alertError; // @synthesize alertError=_alertError;
@property(copy) NSString *heapText; // @synthesize heapText=_heapText;
@property(copy) NSString *sampleText; // @synthesize sampleText=_sampleText;
@property unsigned long long totalRunningTimeMicroSeconds; // @synthesize totalRunningTimeMicroSeconds=_totalRunningTimeMicroSeconds;
@property(copy) NSDictionary *memoryDistribution; // @synthesize memoryDistribution=_memoryDistribution;
@property(readonly) NSArray *prunedThreadIDsForCPUUsages; // @synthesize prunedThreadIDsForCPUUsages=_prunedThreadIDsForCPUUsages;
@property(readonly) DVTMutableOrderedDictionary *CPUUsagesForThreadDictionary; // @synthesize CPUUsagesForThreadDictionary=_CPUUsagesForThreadDictionary;
@property(copy) NSDictionary *CPUDistribution; // @synthesize CPUDistribution=_CPUDistribution;
@property unsigned long long CPUFirstIndicatorLow; // @synthesize CPUFirstIndicatorLow=_CPUFirstIndicatorLow;
@property unsigned long long CPUFirstIndicatorHigh; // @synthesize CPUFirstIndicatorHigh=_CPUFirstIndicatorHigh;
@property(retain) IDEConsoleAdaptor *targetConsoleAdaptor; // @synthesize targetConsoleAdaptor=_targetConsoleAdaptor;
@property(retain) IDEConsoleAdaptor *debuggerConsoleAdaptor; // @synthesize debuggerConsoleAdaptor=_debuggerConsoleAdaptor;
@property(copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocationForDisassembly; // @synthesize instructionPointerLocationForDisassembly=_instructionPointerLocationForDisassembly;
@property(retain, nonatomic) id <DBGDebugSessionBreakpointLifeCycleDelegate> breakpointLifeCycleDelegate; // @synthesize breakpointLifeCycleDelegate=_breakpointLifeCycleDelegate;
@property(retain) DBGProcess *targetProcess; // @synthesize targetProcess=_targetProcess;
@property(retain) IDERunOperationWorker *debugLauncher; // @synthesize debugLauncher=_debugLauncher;
@property(readonly) BOOL debuggerShouldAttachToTarget; // @synthesize debuggerShouldAttachToTarget=_debuggerShouldAttachToTarget;
@property(copy, nonatomic) DVTTextDocumentLocation *instructionPointerLocation; // @synthesize instructionPointerLocation=_instructionPointerLocation;
@property(readonly) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property BOOL isDetached; // @synthesize isDetached=_isDetached;
@property(getter=isProfilingSupported) BOOL profilingSupported; // @synthesize profilingSupported=_profilingSupported;
@property BOOL hasCrashed; // @synthesize hasCrashed=_hasCrashed;
@property long long exitCode; // @synthesize exitCode=_exitCode;
@property BOOL hasExitCode; // @synthesize hasExitCode=_hasExitCode;
@property int coalescedState; // @synthesize coalescedState=_coalescedState;
@property int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (BOOL)_shouldIgnoreOutputExitString;
@property(readonly) NSString *totalRunningTime;
- (void)setCurrentEnergyMeasurement:(id)arg1;
- (void)setCurrentMemoryMeasurement:(id)arg1;
- (void)_updateMemoryMeasureDictionary:(id)arg1 firstEntry:(BOOL)arg2 key:(id)arg3 highValue:(unsigned long long *)arg4 highValueKey:(id)arg5 lowValue:(unsigned long long *)arg6 lowValueKey:(id)arg7;
- (void)setCurrentMemoryFirstIndicator:(id)arg1;
- (void)setCurrentThreadsCPUUsage:(id)arg1;
- (id)qualityOfServiceValueForThreadID:(id)arg1;
- (id)CPUUsageThreadNameForThreadID:(id)arg1;
- (void)setCPUUsageThreadName:(id)arg1 forThreadID:(id)arg2;
- (void)setCurrentCPUFirstIndicator:(id)arg1;
- (void)deregisterProfileDataObserver:(id)arg1;
- (void)registerProfileDataObserver:(id)arg1;
@property(readonly) BOOL hasProfileDataObservers;
- (BOOL)isWatchpointValid:(id)arg1;
- (BOOL)isBreakpointValid:(id)arg1;
- (void)setIdentifier:(unsigned long long)arg1 forWatchpoint:(id)arg2;
- (unsigned long long)identifierForWatchpoint:(id)arg1;
- (id)watchpointForIdentifier:(unsigned long long)arg1;
- (void)setIdentifier:(unsigned long long)arg1 forBreakpointLocation:(id)arg2;
- (unsigned long long)identifierForBreakpointLocation:(id)arg1;
- (void)setIdentifier:(unsigned long long)arg1 forBreakpoint:(id)arg2;
- (unsigned long long)identifierForBreakpoint:(id)arg1;
- (id)breakpointForIdentifier:(unsigned long long)arg1;
- (void)logDebugStringWithTimestampUsingFormat:(id)arg1;
- (void)logDebugStringWithFormat:(id)arg1;
- (void)logDebugStringWithTimestamp:(id)arg1;
- (void)logDebugString:(id)arg1;
@property(readonly) BOOL isLoggingEnabled;
- (void)_initializeLogging;
- (id)logFilename;
- (struct _NSRange)rangeOfExpressionForFullTextAtPrompt:(id)arg1;
- (id)commandsExpectingExpressions;
- (unsigned long long)availableCompletionTypes:(unsigned long long)arg1 fullTextAfterPrompt:(id)arg2;
- (BOOL)canContinueToLocation:(id)arg1 withinBlockAtRange:(struct _NSRange)arg2;
- (void)forceRefreshPausedStates;
- (id)localizedStringForState:(int)arg1;
- (void)completeString:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)deregisterDataValuesObserver:(id)arg1;
- (void)registerDataValuesObserver:(id)arg1;
@property(readonly) BOOL hasDataValuesObservers;
- (id)supportedDataValueFormatsForDataValue:(id)arg1;
- (BOOL)consoleShouldTrackInputHistory;
- (void)evaluateExpression:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)evaluateExpression:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3 queue:(id)arg4 resultHandler:(CDUnknownBlockType)arg5;
- (void)executeDebuggerCommand:(id)arg1 threadID:(unsigned long long)arg2 stackFrameID:(unsigned long long)arg3;
- (id)verifyStackFrameForDisassembly:(id)arg1;
- (BOOL)addStackFrameForDisassembly:(id)arg1;
- (void)requestLoadDylibAtPath:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)requestMovePCInStackFrame:(id)arg1 toLineNumber:(unsigned long long)arg2;
@property(readonly) BOOL supportsPCAnnotationDragging;
@property(readonly) BOOL supportsMultiplePCAnnotation;
- (void)requestContinueToLocation:(id)arg1;
- (void)requestStepIntoCallSymbol:(id)arg1 atLocation:(id)arg2;
- (void)printDescriptionOfDataValueToConsole:(id)arg1 runAllThreads:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (BOOL)shouldAcceptFromDebugSession:(id)arg1 error:(id *)arg2;
- (BOOL)shouldRelinquishToDebugSession:(id)arg1 error:(id *)arg2;
- (void)requestFetchEvent;
- (void)requestStepOverSuspendOtherThreads;
- (void)requestStepInSuspendOtherThreads;
- (void)requestStepOverInstruction;
- (void)requestStepIntoInstruction;
- (void)requestDetach;
- (void)requestStop;
- (void)requestContinue;
- (void)requestPause;
- (void)requestStepOut;
- (void)requestStepOverLine;
- (void)requestStepIn;
- (void)_delayedSetState;
- (void)_recreateBreakpointIfNeccessary:(id)arg1;
- (void)_createBreakpointIfNeccessary:(id)arg1;
- (void)_handleTargetProcessStateChanged;
- (void)_handleLaunchSessionTargetOutputStateChanged;
- (void)_outputExitString;
- (void)_invalidateAfterOutputExitString;
- (void)_handleExceptionBreakpointExceptionNameChanged:(id)arg1;
- (void)_handleExceptionBreakpointStopOnStyleChanged:(id)arg1;
- (void)_handleExceptionBreakpointScopeChanged:(id)arg1;
- (void)_handleSymbolicBreakpointModuleNameChanged:(id)arg1;
- (void)_handleSymbolicBreakpointSymbolNameChanged:(id)arg1;
- (void)_handleFileBreakpointLocationChanged:(id)arg1;
- (void)_handleBreakpointIgnoreCountChanged:(id)arg1;
- (void)_handleBreakpointConditionChanged:(id)arg1;
- (void)_handleBreakpointEnablementChanged:(id)arg1;
- (void)_handleBreakpointActivationChanged;
- (void)_handleBreakpointLocationsRemoved:(id)arg1;
- (void)_handleBreakpointLocationsAdded:(id)arg1;
- (void)_handleBreakpointLocationChanges:(id)arg1;
- (void)_handleBreakpointsDeleted:(id)arg1;
- (void)_handleBreakpointsCreated:(id)arg1;
- (void)_handleBreakpointsListChanged:(id)arg1;
- (void)_removeWatchpointObservers:(id)arg1;
- (void)_addWatchpointObservers:(id)arg1;
- (void)_removeBreakpointLocationObservers:(id)arg1;
- (void)_addLocationObservers:(id)arg1;
- (void)_removeBreakpointObservers:(id)arg1;
- (void)_addBreakpointObservers:(id)arg1;
@property(readonly) IDEBreakpointManager *breakpointManager;
@property(readonly) id <IDEDebugProcess> process;
- (id)initWithDebugLauncher:(id)arg1;

// Remaining properties
@property(readonly) NSArray *CPUFirstIndicators; // @dynamic CPUFirstIndicators;
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSArray *energyMeasurements; // @dynamic energyMeasurements;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) NSArray *memoryFirstIndicators; // @dynamic memoryFirstIndicators;
@property(readonly) NSArray *memoryMeasurements; // @dynamic memoryMeasurements;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGDisassemblyInstructionList : NSObject
{
    NSString *_disassemblyAsString;
}

@property(readonly) NSString *disassemblyAsString; // @synthesize disassemblyAsString=_disassemblyAsString;
- (void).cxx_destruct;
- (id)initWithDisassembly:(id)arg1;

@end

@interface DBGExpressionOptions : NSObject
{
    BOOL _autoHandleExceptions;
    BOOL _forceLanguageToObjectiveCPlusPlus;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    unsigned long long _timeoutInMicroSeconds;
}

@property BOOL forceLanguageToObjectiveCPlusPlus; // @synthesize forceLanguageToObjectiveCPlusPlus=_forceLanguageToObjectiveCPlusPlus;
@property BOOL autoHandleExceptions; // @synthesize autoHandleExceptions=_autoHandleExceptions;
@property unsigned long long timeoutInMicroSeconds; // @synthesize timeoutInMicroSeconds=_timeoutInMicroSeconds;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
- (void).cxx_destruct;
- (id)initWithTimeout:(unsigned long long)arg1;
- (id)initWithCallbackQueue:(id)arg1;
- (id)init;

@end

@interface DBGViewObject : NSObject
{
    DBGViewChildMemberList *_memberList;
    NSArray *_childViewObjects;
    BOOL _shouldConsiderInteresting;
    BOOL _hidden;
    id <DBGViewDescriber> _viewDescriber;
    NSString *_inferiorPointer;
    NSString *_displayName;
    NSString *_representedObjectClassName;
    NSString *_representedObjectClassNameForDisplay;
    DBGViewObject *_parentViewObject;
    NSSet *_constraintAddressesAffectingViewObject;
    struct CGRect _frame;
}

+ (struct CATransform3D)transformFromArray:(id)arg1;
+ (struct CGPoint)pointFromArray:(id)arg1;
+ (struct CGRect)rectFromArray:(id)arg1;
@property(readonly) NSSet *constraintAddressesAffectingViewObject; // @synthesize constraintAddressesAffectingViewObject=_constraintAddressesAffectingViewObject;
@property BOOL hidden; // @synthesize hidden=_hidden;
@property __weak DBGViewObject *parentViewObject; // @synthesize parentViewObject=_parentViewObject;
@property(readonly) BOOL shouldConsiderInteresting; // @synthesize shouldConsiderInteresting=_shouldConsiderInteresting;
@property(readonly) NSString *representedObjectClassNameForDisplay; // @synthesize representedObjectClassNameForDisplay=_representedObjectClassNameForDisplay;
@property(retain) NSString *representedObjectClassName; // @synthesize representedObjectClassName=_representedObjectClassName;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) NSString *inferiorPointer; // @synthesize inferiorPointer=_inferiorPointer;
@property struct CGRect frame; // @synthesize frame=_frame;
@property(retain) id <DBGViewDescriber> viewDescriber; // @synthesize viewDescriber=_viewDescriber;
- (void).cxx_destruct;
- (id)ideModelObjectTypeIdentifier;
- (void)willInflateChildMemberList:(id)arg1;
- (void)_inflateObjectIfNecessary;
- (BOOL)_isInflated;
- (id)recursiveDescription;
- (id)_collectSubViewDescriptions:(id)arg1 level:(long long)arg2;
- (id)description;
@property(readonly, nonatomic) id object;
@property NSArray *childViewObjects;
@property(readonly) NSString *identifier;
- (id)initWithViewDescriber:(id)arg1 dictionary:(id)arg2;

@end

@interface DBGLayoutConstraint : DBGViewObject
{
    BOOL _hasCalculatedContentType;
    long long _contentType;
    double _constant;
    double _multiplier;
    double _priority;
    long long _firstAttribute;
    long long _secondAttribute;
    long long _relation;
    NSString *_constraintIdentifier;
    DBGViewSurface *_firstItem;
    DBGViewSurface *_secondItem;
}

@property(retain) DBGViewSurface *secondItem; // @synthesize secondItem=_secondItem;
@property(retain) DBGViewSurface *firstItem; // @synthesize firstItem=_firstItem;
@property(copy, nonatomic) NSString *constraintIdentifier; // @synthesize constraintIdentifier=_constraintIdentifier;
@property long long relation; // @synthesize relation=_relation;
@property long long secondAttribute; // @synthesize secondAttribute=_secondAttribute;
@property long long firstAttribute; // @synthesize firstAttribute=_firstAttribute;
@property double priority; // @synthesize priority=_priority;
@property double multiplier; // @synthesize multiplier=_multiplier;
@property double constant; // @synthesize constant=_constant;
- (void).cxx_destruct;
@property(readonly) long long contentType;
- (id)displayName;
@property(readonly) BOOL isVertical;
@property(readonly) BOOL isHorizontal;
@property(readonly) NSString *categoryString;
- (id)formulaStringRelativeToItem:(id)arg1;
- (id)initWithViewDescriber:(id)arg1 dictionary:(id)arg2;

@end

@interface DBGLayoutConstraintSet : NSObject <NSFastEnumeration, NSCopying>
{
    DBGViewWindow *_parentWindow;
    NSArray *_constraints;
}

+ (id)_createConstraintsFromPlistArray:(id)arg1 parentWindow:(id)arg2;
@property(readonly) NSArray *constraints; // @synthesize constraints=_constraints;
@property(readonly) __weak DBGViewWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
- (void).cxx_destruct;
- (id)description;
- (BOOL)containsConstraint:(id)arg1;
- (id)constraintSetWithContraintSet:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)constraintModelWithAddress:(id)arg1;
- (id)subsetContainingConstraintsPassingTest:(CDUnknownBlockType)arg1;
- (id)constraintsOrderedByComparator:(CDUnknownBlockType)arg1;
- (id)constraintsPassingTest:(CDUnknownBlockType)arg1;
- (id)initWithPlistArray:(id)arg1 parentWindow:(id)arg2;
- (id)_initWithConstraintModels:(id)arg1 parentWindow:(id)arg2;

@end

@interface DBGLazyObservableDictionary : NSMutableDictionary
{
    NSMutableDictionary *_backingDictionary;
    id <DBGLazyObservableDictionaryDelegate> _delegate;
}

@property(readonly) id <DBGLazyObservableDictionaryDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)keyEnumerator;
- (id)objectForKey:(id)arg1;
- (id)valueForKeyPath:(id)arg1;
- (unsigned long long)count;
- (BOOL)hasObjectForKey:(id)arg1;
- (id)initWithDelegate:(id)arg1;

@end

@interface DBGMemoryData : NSObject <IDEDebugNavigableModel>
{
    NSString *_expression;
    unsigned long long _startingAddress;
    unsigned long long _numberOfBytes;
    NSData *_rawMemoryData;
    BOOL _shouldAutoUpdate;
    DBGProcess *_parentProcess;
    NSString *_uuid;
    NSURL *_url;
}

@property(readonly) NSURL *url; // @synthesize url=_url;
@property(readonly) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain) DBGProcess *parentProcess; // @synthesize parentProcess=_parentProcess;
@property BOOL shouldAutoUpdate; // @synthesize shouldAutoUpdate=_shouldAutoUpdate;
@property(copy) NSData *rawMemoryData; // @synthesize rawMemoryData=_rawMemoryData;
@property unsigned long long numberOfBytes; // @synthesize numberOfBytes=_numberOfBytes;
@property unsigned long long startingAddress; // @synthesize startingAddress=_startingAddress;
@property(copy) NSString *expression; // @synthesize expression=_expression;
- (void).cxx_destruct;
- (void)_updateUsingExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2;
- (void)updateNumberOfBytes:(unsigned long long)arg1;
- (void)updateUsingExpression:(id)arg1;
- (void)update;
- (void)autoUpdate;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
- (id)initWithExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 process:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DBGMemoryDataURLParts : NSObject
{
    int _processID;
    NSString *_memoryDataUUID;
}

+ (id)urlParts:(id)arg1;
+ (BOOL)isMemoryDataURL:(id)arg1;
@property(readonly) NSString *memoryDataUUID; // @synthesize memoryDataUUID=_memoryDataUUID;
@property(readonly) int processID; // @synthesize processID=_processID;
- (void).cxx_destruct;
- (id)_initWithProcessID:(int)arg1 memoryDataUUID:(id)arg2;

@end

@interface DBGNSDataForDataValueProvider : NSObject
{
    DBGStackFrame *_stackFrame;
    NSString *_expressionResultingInNSData;
    BOOL _hasDataBeenRetrieved;
    NSData *_data;
    BOOL _wasCancelled;
    BOOL _retrievalStarted;
    id <DVTCancellable> _cancellableMemoryReadToken;
    BOOL _autoHandleExceptions;
    DBGNSDataForDataValueProviderOptions *_options;
    DBGDataValue *_dataDataValue;
}

@property(readonly) BOOL autoHandleExceptions; // @synthesize autoHandleExceptions=_autoHandleExceptions;
@property(retain) DBGDataValue *dataDataValue; // @synthesize dataDataValue=_dataDataValue;
@property(retain) DBGNSDataForDataValueProviderOptions *options; // @synthesize options=_options;
@property(readonly) NSData *data; // @synthesize data=_data;
@property(readonly) BOOL hasDataBeenRetrieved; // @synthesize hasDataBeenRetrieved=_hasDataBeenRetrieved;
- (void).cxx_destruct;
- (id)safelyUnarchiveRootObjectFromData;
- (void)_dataWasFetched:(id)arg1;
- (void)_failedToGetData;
- (void)_readArchivedData:(id)arg1;
- (void)_startRetrieval;
- (void)cancel;
- (id)_initWithStackFrame:(id)arg1 expressionResultingInNSData:(id)arg2 options:(id)arg3;
- (id)initWithStackFrame:(id)arg1 expressionResultingInNSData:(id)arg2 options:(id)arg3;
- (id)initWithStackFrame:(id)arg1 expressionResultingInNSData:(id)arg2;
- (id)initWithKeyedArchivableDataValue:(id)arg1;

@end

@interface DBGNSDataForDataValueProviderOptions : NSObject
{
    BOOL _autoHandleExceptions;
    unsigned long long _timeout;
    CDUnknownBlockType _progressHandler;
}

@property(copy) CDUnknownBlockType progressHandler; // @synthesize progressHandler=_progressHandler;
@property unsigned long long timeout; // @synthesize timeout=_timeout;
@property BOOL autoHandleExceptions; // @synthesize autoHandleExceptions=_autoHandleExceptions;
- (void).cxx_destruct;
- (id)init;

@end

@interface DBGPerformanceMetrics : NSObject
{
    DVTPerformanceMetric *_perceivedStepMetric;
    DVTPerformanceMetric *_variablesViewUpdateMetric;
    DVTPerformanceMetric *_nonPrimaryPCUpdateMetric;
    DVTPerformanceMetric *_viewDebuggingSnapshotMetric;
}

+ (id)defaultMetrics;
- (void).cxx_destruct;
- (void)viewDebuggerSnapshotCompleted:(id)arg1;
- (void)viewDebuggerSnapshotStarted:(id)arg1;
- (void)viewDebuggerHierarchyFetchCompleted:(id)arg1;
- (void)viewDebuggerHierarchyFetchStarted:(id)arg1;
- (id)_snapshotIdentifierForViewDebugger:(id)arg1;
- (void)disassemblyFetchCompleted:(id)arg1;
- (void)disassemblyFetchStarted:(id)arg1;
- (void)formattedSummaryFetchCompleted:(id)arg1;
- (void)formattedSummaryFetchStarted:(id)arg1;
- (void)nonPrimaryPCUpdateCompleted;
- (void)nonPrimaryPCUpdateStarted;
- (void)stackFrameFetchCheckpoint:(id)arg1 withLabel:(id)arg2;
- (void)stackFrameFetchCompleted:(id)arg1;
- (void)stackFrameFetchStarted:(id)arg1;
- (void)variablesViewUpdateCompleted;
- (void)variablesViewUpdateStarted;
- (void)perceivedStepCompleted;
- (void)perceivedStepStarted;
- (void)debugSessionCompleted:(id)arg1;
- (void)debugSessionStarted:(id)arg1;

@end

@interface DBGProcess : NSObject <IDEDebugProcess, DVTInvalidation>
{
    NSString *_associatedProcessUUID;
    NSMutableSet *_threadsAutoRefreshStackFrames;
    DBGThread *_currentThread;
    DBGStackFrame *_currentStackFrame;
    NSMutableArray *_memoryDatas;
    DVTObservingToken *_currentStackFrameValidityObserver;
    DVTStackBacktrace *_currentStackFrameBacktraceWhenSet;
    BOOL _threadsAutoRefreshStackFramesDone;
    int _controlState;
    int _PID;
    DBGDebugSession *_parentDebugSession;
    NSArray *_threads;
    NSArray *_queues;
    NSString *_name;
}

+ (id)keyPathsForValuesAffectingName;
+ (id)keyPathsForValuesAffectingThreads;
+ (void)initialize;
@property(nonatomic) BOOL threadsAutoRefreshStackFramesDone; // @synthesize threadsAutoRefreshStackFramesDone=_threadsAutoRefreshStackFramesDone;
@property(nonatomic) int PID; // @synthesize PID=_PID;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSArray *queues; // @synthesize queues=_queues;
@property(copy, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(nonatomic) int controlState; // @synthesize controlState=_controlState;
@property(readonly) DBGDebugSession *parentDebugSession; // @synthesize parentDebugSession=_parentDebugSession;
@property(readonly, copy) NSString *associatedProcessUUID; // @synthesize associatedProcessUUID=_associatedProcessUUID;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) unsigned long long addressByteSize;
- (void)removeMemoryData:(id)arg1;
- (void)autoUpdateAllMemoryDatas;
- (id)readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 progressHandler:(CDUnknownBlockType)arg3 resultHandler:(CDUnknownBlockType)arg4;
- (id)readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (void)rawMemoryDataForAddressExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (id)memoryDataForUUID:(id)arg1;
- (id)memoryDataForAddressOfExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2;
@property(retain, nonatomic) DBGStackFrame *currentStackFrame; // @synthesize currentStackFrame=_currentStackFrame;
@property(retain, nonatomic) DBGThread *currentThread; // @synthesize currentThread=_currentThread;
- (void)deregisterThreadAutoRefreshesStackFrames:(id)arg1;
- (void)registerThreadAutoRefreshesStackFrames:(id)arg1;
- (BOOL)_shouldSelectFirstSymbolFrame;
- (BOOL)_shouldLookForStackFrameWithDebugSymbols;
- (void)setInitialCurrentStackFrame;
- (BOOL)isPaused;
@property(readonly) NSString *displayStatus;
@property(readonly) IDELaunchSession *launchSession;
- (id)initWithDebugSession:(id)arg1;
- (id)contentDelegateUIExtensionIdentifier;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic) NSArray *loadedCodeModules;
@property(readonly, nonatomic) NSArray *memoryDatas; // @dynamic memoryDatas;
@property(retain) NSMutableArray *mutableMemoryDatas; // @dynamic mutableMemoryDatas;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGQueue : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    NSString *_type;
    BOOL _displayNameComputed;
    NSString *_displayName;
    DBGProcess *_parentProcess;
    NSString *_name;
    NSArray *_threads;
    NSArray *_pendingBlocksThreads;
    DBGThread *_recordedThread;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)keyPathsForValuesAffectingRecorded;
+ (BOOL)_queueNameBelongsToConcurrentQueues:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) DBGThread *recordedThread; // @synthesize recordedThread=_recordedThread;
@property(copy, nonatomic) NSArray *pendingBlocksThreads; // @synthesize pendingBlocksThreads=_pendingBlocksThreads;
@property(copy, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) DBGProcess *parentProcess; // @synthesize parentProcess=_parentProcess;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (unsigned long long)numberOfPendingBlocks;
- (void)setPrimitiveThreads:(id)arg1;
@property(readonly, nonatomic, getter=isRecorded) BOOL recorded;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@property(readonly, copy) NSString *debugDescription;
- (id)initWithParentProcess:(id)arg1 name:(id)arg2 type:(id)arg3 recordedThread:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGSignal : NSObject
{
}

+ (BOOL)isSignalNumberFatal:(unsigned long long)arg1;

@end

@interface DBGStackFrame : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    DVTObservingToken *_debugSessionStateObserver;
    BOOL _hasSymbols;
    BOOL _returnValueIsValid;
    BOOL _recorded;
    BOOL _settingDisassembly;
    NSString *_displayName;
    NSString *_filePath;
    DBGDataValue *_returnValue;
    DBGThread *_parentThread;
    NSString *_name;
    NSURL *_fileURL;
    NSNumber *_lineNumber;
    NSString *_instructionPointerAddressString;
    NSNumber *_frameNumber;
    NSNumber *_framePointer;
    DBGCodeModule *_module;
    NSArray *_locals;
    NSArray *_arguments;
    NSArray *_fileStatics;
    NSArray *_registers;
    DBGDisassemblyInstructionList *_disassembly;
}

+ (id)keyPathsForValuesAffectingDisplayName;
+ (id)stackFrameForDisassemblyURL:(id)arg1;
+ (id)disassemblyURLForStackFrame:(id)arg1 inDebugSession:(id)arg2;
+ (id)compressedStackFrames:(id)arg1 usingCompressionValue:(long long)arg2;
+ (void)initialize;
@property(nonatomic) BOOL settingDisassembly; // @synthesize settingDisassembly=_settingDisassembly;
@property(retain, nonatomic) DBGDisassemblyInstructionList *disassembly; // @synthesize disassembly=_disassembly;
@property(nonatomic, getter=isRecorded) BOOL recorded; // @synthesize recorded=_recorded;
@property(nonatomic) BOOL returnValueIsValid; // @synthesize returnValueIsValid=_returnValueIsValid;
@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) NSArray *fileStatics; // @synthesize fileStatics=_fileStatics;
@property(readonly, nonatomic) NSArray *arguments; // @synthesize arguments=_arguments;
@property(readonly, nonatomic) NSArray *locals; // @synthesize locals=_locals;
@property(retain, nonatomic) DBGCodeModule *module; // @synthesize module=_module;
@property(copy, nonatomic) NSNumber *framePointer; // @synthesize framePointer=_framePointer;
@property(copy, nonatomic) NSNumber *frameNumber; // @synthesize frameNumber=_frameNumber;
@property(copy, nonatomic) NSString *instructionPointerAddressString; // @synthesize instructionPointerAddressString=_instructionPointerAddressString;
@property(copy, nonatomic) NSNumber *lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(nonatomic) BOOL hasSymbols; // @synthesize hasSymbols=_hasSymbols;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) DBGThread *parentThread; // @synthesize parentThread=_parentThread;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)evaluateExpression:(id)arg1 options:(id)arg2 withResultBlock:(CDUnknownBlockType)arg3;
- (void)evaluateExpression:(id)arg1 withResultBlock:(CDUnknownBlockType)arg2;
- (void)requestDataValueForSymbol:(id)arg1 symbolKind:(id)arg2 atLocation:(id)arg3 onQueue:(id)arg4 withResultBlock:(CDUnknownBlockType)arg5;
- (id)dataValuesToInvalidate;
- (void)primitiveSetReturnValueIsValid:(BOOL)arg1;
- (void)primitiveSetReturnValue:(id)arg1;
@property(retain, nonatomic) DBGDataValue *returnValue; // @synthesize returnValue=_returnValue;
- (void)primitiveSetInstructionPointerAddressString:(id)arg1;
@property(readonly, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
- (id)initWithParentThread:(id)arg1 frameNumber:(id)arg2 framePointer:(id)arg3 name:(id)arg4;
- (BOOL)hasSameDisassemblyURL:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGStackFramesDefaultCompressionStrategy : NSObject <IDEDebugCompressionStrategy>
{
}

+ (id)genericMaskFilePathWithColorsInRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
+ (id)maskFilePathForUserCodeWithColorsInRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
+ (id)maskFilePathForModulePathString:(id)arg1 withColorsInRed:(double *)arg2 green:(double *)arg3 blue:(double *)arg4 alpha:(double *)arg5;
+ (id)_filePathForBlock:(CDUnknownBlockType)arg1 withColorsInRed:(double *)arg2 green:(double *)arg3 blue:(double *)arg4 alpha:(double *)arg5;
+ (id)sharedInstance;
- (id)compressStackFrames:(id)arg1 level:(unsigned long long)arg2;
- (unsigned long long)defaultCompressionLevel;
- (unsigned long long)maxCompressionLevel;
- (id)_initInternal;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DBGSummaryPart : NSObject
{
    NSString *_wholeString;
    struct _NSRange _partRange;
    struct _NSRange _contentRange;
    NSArray *_children;
    NSArray *_valuePathParts;
    NSArray *_expressionParts;
}

+ (BOOL)_containsKnownInvalidStrings:(id)arg1;
+ (id)formatterForString:(id)arg1;
+ (id)changedPropertyPathForField:(int)arg1;
+ (id)propertyPathForField:(int)arg1;
+ (int)dataFieldForString:(id)arg1;
@property(readonly) NSArray *children; // @synthesize children=_children;
@property(readonly) NSString *wholeString; // @synthesize wholeString=_wholeString;
@property(readonly) struct _NSRange contentRange; // @synthesize contentRange=_contentRange;
@property(readonly) struct _NSRange partRange; // @synthesize partRange=_partRange;
- (void).cxx_destruct;
@property(readonly) BOOL requiresExpressionPath;
@property(readonly) NSArray *expressionParts;
@property(readonly) NSArray *valuePathParts;
- (id)stringForValuePaths:(id)arg1 expressionValues:(id)arg2 andDataValue:(id)arg3;
@property(readonly) NSString *contentString;
@property(readonly) NSString *partString;
- (BOOL)_parse;
- (id)description;
- (id)_initWithString:(id)arg1 partRange:(struct _NSRange)arg2 andContentRange:(struct _NSRange)arg3;

@end

@interface DBGSummaryExpressionPart : DBGSummaryPart
{
    int _field;
}

@property(readonly) NSString *valueWasChangedKeyPath;
@property(readonly) NSString *valueKeyPath;
- (id)expressionParts;
- (id)valuePathParts;
- (id)stringForValuePaths:(id)arg1 expressionValues:(id)arg2 andDataValue:(id)arg3;
- (id)expressionStringWithDataValue:(id)arg1;
- (id)_initWithString:(id)arg1 withStartAt:(unsigned long long)arg2 length:(unsigned long long)arg3;

@end

@interface DBGSummaryPlaceholderPart : DBGSummaryPart
{
    int _type;
}

- (BOOL)requiresExpressionPath;
- (id)stringForValuePaths:(id)arg1 expressionValues:(id)arg2 andDataValue:(id)arg3;
- (id)_initWithString:(id)arg1 withStartAt:(unsigned long long)arg2 length:(unsigned long long)arg3;

@end

@interface DBGSummaryValuePathPart : DBGSummaryPart
{
    int _field;
}

@property(readonly) NSString *valueWasChangedKeyPath;
@property(readonly) NSString *valueKeyPath;
- (id)expressionParts;
- (id)valuePathParts;
- (id)stringForValuePaths:(id)arg1 expressionValues:(id)arg2 andDataValue:(id)arg3;
- (BOOL)_parse;
- (id)_initWithString:(id)arg1 withStartAt:(unsigned long long)arg2 length:(unsigned long long)arg3;

@end

@interface DBGThread : NSObject <IDEDebugNavigableModel, DVTInvalidation>
{
    DBGThread *_leadingThread;
    BOOL _staleThreadDisplayName;
    long long _lastCompressionValue;
    long long _secondLastCompressionValue;
    NSCache *_compressedStackFramesCache;
    NSMutableArray *_stackFrames;
    BOOL _autoRefreshStackFramesWhenPaused;
    BOOL _hasLatestStackFrames;
    BOOL _recorded;
    BOOL _userSuspended;
    BOOL _recordedFramesUpdated;
    BOOL _hasInitializedStackFrames;
    int _state;
    int _stopReason;
    int _breakpointStackSelectionBehavior;
    NSString *_threadDisplayName;
    DBGProcess *_parentProcess;
    NSNumber *_uniqueID;
    NSString *_threadName;
    DBGQueue *_queue;
    DBGThread *_recordedThread;
    unsigned long long _recordedThreadDepth;
    NSString *_lastReasonStopped;
    NSString *_qualityOfServiceValue;
}

+ (id)keyPathsForValuesAffectingStopped;
+ (id)displayNameForThreadName:(id)arg1 threadID:(id)arg2;
+ (void)initialize;
@property BOOL hasInitializedStackFrames; // @synthesize hasInitializedStackFrames=_hasInitializedStackFrames;
@property BOOL recordedFramesUpdated; // @synthesize recordedFramesUpdated=_recordedFramesUpdated;
@property(readonly, copy, nonatomic) NSString *qualityOfServiceValue; // @synthesize qualityOfServiceValue=_qualityOfServiceValue;
@property(nonatomic) BOOL userSuspended; // @synthesize userSuspended=_userSuspended;
@property(nonatomic) int breakpointStackSelectionBehavior; // @synthesize breakpointStackSelectionBehavior=_breakpointStackSelectionBehavior;
@property(copy, nonatomic) NSString *lastReasonStopped; // @synthesize lastReasonStopped=_lastReasonStopped;
@property(nonatomic) unsigned long long recordedThreadDepth; // @synthesize recordedThreadDepth=_recordedThreadDepth;
@property(nonatomic, getter=isRecorded) BOOL recorded; // @synthesize recorded=_recorded;
@property(retain, nonatomic) DBGThread *recordedThread; // @synthesize recordedThread=_recordedThread;
@property(nonatomic) BOOL hasLatestStackFrames; // @synthesize hasLatestStackFrames=_hasLatestStackFrames;
@property(nonatomic) BOOL autoRefreshStackFramesWhenPaused; // @synthesize autoRefreshStackFramesWhenPaused=_autoRefreshStackFramesWhenPaused;
@property(nonatomic) int stopReason; // @synthesize stopReason=_stopReason;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) DBGQueue *queue; // @synthesize queue=_queue;
@property(readonly, copy, nonatomic) NSString *threadName; // @synthesize threadName=_threadName;
@property(readonly, nonatomic) NSNumber *uniqueID; // @synthesize uniqueID=_uniqueID;
@property(readonly, nonatomic) DBGProcess *parentProcess; // @synthesize parentProcess=_parentProcess;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)requestUnsuspend;
- (void)requestSuspend;
- (void)setLeadingThread:(id)arg1 depth:(unsigned long long)arg2;
- (id)leadingThread;
- (void)setPrimitiveQueue:(id)arg1;
- (id)compressedStackFramesIncludingRecorded:(long long)arg1;
- (id)compressedStackFrames:(long long)arg1;
- (BOOL)_shouldSkipRecordedFrames;
- (void)requestStackFrames:(unsigned long long)arg1 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg2;
- (void)refreshStackFrames;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (void)_inferStateFromStackFrames:(id)arg1;
- (void)_inferState;
- (void)_primitiveSetQualityOfServiceValue:(id)arg1;
- (void)_primitiveSetThreadName:(id)arg1;
- (void)invalidateUnusedStackFramesAfterCallToSetStackFrames:(id)arg1;
- (id)primitiveStackFrames;
@property(copy, nonatomic) NSArray *stackFrames; // @dynamic stackFrames;
- (void)_invalidateStackFrames:(id)arg1;
- (void)willReuse;
- (void)_resetQueueStackFramesAndRecordedStates:(BOOL)arg1;
@property(readonly, getter=isStopped) BOOL stopped;
@property(readonly, nonatomic) NSString *threadDisplayName; // @synthesize threadDisplayName=_threadDisplayName;
- (void)setThreadName:(id)arg1;
- (void)_resetCurrentStackFrameIfNecessary:(id)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
- (id)initWithParentProcess:(id)arg1 uniqueID:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, copy) NSMutableArray *mutableStackFrames; // @dynamic mutableStackFrames;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGThreadStateInterpreter : NSObject
{
}

+ (BOOL)_doesStackFrameAtIndex:(unsigned long long)arg1 inStackFrames:(id)arg2 matchName:(id)arg3;
+ (BOOL)_doAnyOfTheFirst:(unsigned long long)arg1 stackFrames:(id)arg2 matchName:(id)arg3;
+ (BOOL)_isThreadInConditionalWait:(id)arg1;
+ (BOOL)_isThreadWaitingForLock:(id)arg1;
+ (BOOL)_isThreadWaitingForSpinLock:(id)arg1;
+ (void)updateStateOfThread:(id)arg1 usingStackFrames:(id)arg2;
+ (BOOL)useThreadStateInterpreter;

@end

@interface DBGViewChildMemberList : NSObject
{
    NSMutableDictionary *_propertyValues;
    NSArray *_propertyEntriesToBeFetched;
}

@property(readonly) NSArray *propertyEntriesToBeFetched; // @synthesize propertyEntriesToBeFetched=_propertyEntriesToBeFetched;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)dbgInspectedCell;
- (void)_setPropertyValueFromMainThread:(id)arg1 forKey:(id)arg2;
- (void)setPropertyValue:(id)arg1 forKey:(id)arg2;
- (id)propertyValueForKey:(id)arg1;
- (id)initWithPropertyEntriesToBeFetched:(id)arg1;

@end

@interface DBGViewDebugger : NSObject <DVTInvalidation>
{
    DBGDebugSession *_debugSession;
    NSArray *_windows;
    int _loadedState;
    id <DBGViewDescriber> _viewDescriber;
    DBGViewWindow *_primaryWindow;
    double _percentLoaded;
}

+ (Class)viewDescriberClassForPlatform:(id)arg1;
+ (void)initialize;
@property int loadedState; // @synthesize loadedState=_loadedState;
@property double percentLoaded; // @synthesize percentLoaded=_percentLoaded;
@property(readonly) DBGViewWindow *primaryWindow; // @synthesize primaryWindow=_primaryWindow;
@property(readonly, nonatomic) NSArray *windows; // @synthesize windows=_windows;
@property(readonly) id <DBGViewDescriber> viewDescriber; // @synthesize viewDescriber=_viewDescriber;
@property(retain) DBGDebugSession *debugSession; // @synthesize debugSession=_debugSession;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)_viewDescriberForPlatform:(id)arg1 debugSession:(id)arg2;
- (void)_initializeStructuresIfNecessary;
- (void)willFetchViewInfo;
- (void)fetchWindowsIfNecessary;
- (void)_updateViewDebuggingHierarchy:(id)arg1 primaryWindow:(id)arg2 andLoadedState:(int)arg3;
- (id)initWithPlatform:(id)arg1 debugSession:(id)arg2 viewDescriber:(id)arg3;
- (id)initWithPlatform:(id)arg1 debugSession:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGViewDebuggerAddition : NSObject <IDEDebuggingAddition>
{
    DBGViewDebugger *_viewDebugger;
    BOOL _didInsertDylib;
    BOOL _insertDylibPending;
    NSString *_viewDebuggingDyldPath;
    IDELaunchSession *_launchSession;
    NSString *_identifier;
}

+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
+ (void)initialize;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
@property(retain) DBGViewDebugger *viewDebugger; // @synthesize viewDebugger=_viewDebugger;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)adjustedLaunchParametersForLaunchParameters:(id)arg1;
- (id)_viewDebuggingDylibPath:(id)arg1;
- (void)_loadViewDebuggingDylibIfNecessary;
- (void)initiateViewDebugging;
- (id)initInLaunchSession:(id)arg1 withAppDisplayName:(id)arg2 runDestination:(id)arg3 fromExtension:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface DBGViewSurface : DBGViewObject
{
    DBGViewWindow *_window;
    BOOL _shouldConsiderInteresting;
    BOOL _hasCalculatedShouldConsiderInteresting;
    NSSet *_constraintAddressesAffectingViewObject;
    DBGLayoutConstraintSet *_constraintsAffectingViewObject;
    DBGLayoutConstraintSet *_constraintsReferencingViewObject;
    BOOL _flipped;
    BOOL _masksToBounds;
    DBGViewLayer *_layer;
    NSImage *_snapshot;
    double _contentsScale;
    struct CGPoint _contentOffset;
    struct CGPoint _anchorPoint;
    struct CGPoint _position;
    struct CGRect _alignmentFrame;
    struct CGRect _bounds;
    struct CATransform3D _transform;
    struct CATransform3D _sublayerTransform;
}

+ (id)_childViewSurfacesFromPlist:(id)arg1 forViewDescriber:(id)arg2;
@property double contentsScale; // @synthesize contentsScale=_contentsScale;
@property struct CGRect bounds; // @synthesize bounds=_bounds;
@property struct CGRect alignmentFrame; // @synthesize alignmentFrame=_alignmentFrame;
- (id)constraintAddressesAffectingViewObject;
@property(readonly) BOOL masksToBounds; // @synthesize masksToBounds=_masksToBounds;
@property struct CGPoint position; // @synthesize position=_position;
@property struct CGPoint anchorPoint; // @synthesize anchorPoint=_anchorPoint;
@property struct CATransform3D sublayerTransform; // @synthesize sublayerTransform=_sublayerTransform;
@property struct CATransform3D transform; // @synthesize transform=_transform;
@property struct CGPoint contentOffset; // @synthesize contentOffset=_contentOffset;
@property BOOL flipped; // @synthesize flipped=_flipped;
@property(retain) NSImage *snapshot; // @synthesize snapshot=_snapshot;
@property(retain) DBGViewLayer *layer; // @synthesize layer=_layer;
- (void).cxx_destruct;
- (id)_affectingConstraintAddresses:(id)arg1;
- (id)description;
@property(readonly) DBGLayoutConstraintSet *constraintsReferencingViewObject;
@property(readonly) DBGLayoutConstraintSet *constraintsAffectingViewObject;
- (BOOL)shouldConsiderInteresting;
- (void)_recursiveViewAddressesToViewSurfaces:(id)arg1;
- (id)recursiveViewAddressesToViewSurfaces;
- (id)parentViewSurface;
@property(readonly) DBGViewWindow *window;
- (id)initWithViewDescriber:(id)arg1 dictionary:(id)arg2;

@end

@interface DBGViewLayer : DBGViewSurface
{
    CALayer *_representedLayer;
}

@property(retain) CALayer *representedLayer; // @synthesize representedLayer=_representedLayer;
- (void).cxx_destruct;
- (id)representedObjectClassName;
- (id)identifier;
- (struct CATransform3D)transform;
- (struct CGRect)bounds;
- (struct CGRect)frame;
- (id)_addPropertiesFromLayer:(id)arg1 toDictionary:(id)arg2;
- (id)_initWithViewDescriber:(id)arg1 layer:(id)arg2 dictionary:(id)arg3;
- (id)initWithViewDescriber:(id)arg1 dictionary:(id)arg2;

@end

@interface DBGViewPropertyEntry : NSObject
{
    NSString *_rawExpressionToGenerateValue;
    NSString *_propertyName;
}

@property(readonly) NSString *propertyName; // @synthesize propertyName=_propertyName;
- (void).cxx_destruct;
- (id)expandedExpressionWithViewObject:(id)arg1;
- (id)initWithPropertyName:(id)arg1 rawExpressionToGenerateValue:(id)arg2;

@end

@interface DBGViewWindow : DBGViewSurface
{
    DVTMapTable *_viewAddressesToViewSurfaces;
    DBGLayoutConstraintSet *_layoutConstraintSet;
    unsigned long long _orientation;
}

@property unsigned long long orientation; // @synthesize orientation=_orientation;
@property(retain) DBGLayoutConstraintSet *layoutConstraintSet; // @synthesize layoutConstraintSet=_layoutConstraintSet;
- (void).cxx_destruct;
- (id)viewObjectForAddress:(id)arg1;
- (id)constraintForAddress:(id)arg1;
- (id)childViewSurfaceForAddress:(id)arg1;
- (id)window;
- (id)initWithViewDescriber:(id)arg1 dictionary:(id)arg2;
@property(readonly) DBGViewSurface *contentView;

// Remaining properties
@property(retain) NSImage *snapshot;

@end

@interface _DBGDebuggerFoundationPrivateClassForFindingBundle : NSObject
{
}

@end

