//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/PlugIns/IDEiOSSupportCore.ideplugin/Contents/MacOS/IDEiOSSupportCore
// UUID: 8FB537BB-57FC-379C-8340-4F4FDF861A9C
//
//                           Arch: x86_64
//                Current version: 0.0.0
//          Compatibility version: 0.0.0
//                 Source version: 6254.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode.app/Contents/PlugIns
//                       Run path: @loader_path/../../../../Frameworks
//                               = /Applications/Xcode.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../SharedFrameworks
//                               = /Applications/Xcode.app/Contents/SharedFrameworks
//                       Run path: @loader_path/../../../../Developer/Library/PrivateFrameworks
//                               = /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks
//                       Run path: @loader_path/../../../../Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks
//                               = /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/Library/PrivateFrameworks
//

@protocol DTMISProcessControlServiceAuthorizedAPI <DTXAllowedRPC>
- (void)pidDiedCallback:(NSNumber *)arg1;
@end

@protocol DTXAllowedRPC <NSObject>
@end

@protocol DTiPhoneSimulatorSessionDelegate
- (void)session:(DTiPhoneSimulatorSession *)arg1 didEndWithError:(NSError *)arg2;
- (void)session:(DTiPhoneSimulatorSession *)arg1 didStart:(BOOL)arg2 withError:(NSError *)arg3;
@end

@protocol DVTDeviceApplicationInstaller <DVTDeviceApplicationProvider>
- (BOOL)uploadApplicationDataWithPath:(NSString *)arg1 forInstalledApplicationWithBundleIdentifier:(NSString *)arg2 error:(id *)arg3;
- (BOOL)downloadApplicationDataToPath:(NSString *)arg1 forInstalledApplicationWithBundleIdentifier:(NSString *)arg2 error:(id *)arg3;
- (NSError *)uninstallApplicationWithBundleIdentifierSync:(NSString *)arg1;
@end

@protocol DVTDeviceApplicationProvider <NSObject>
@property(readonly) NSSet *applications;

@optional
@property(readonly) NSSet *systemApplications;
@end

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol IDEArchivePackagerIdentityToken <NSObject>
- (id <IDEArchivePackagerIdentityToken>)relatedTokenForKey:(NSString *)arg1;
- (int)status;
- (NSString *)displayName;
@end

@protocol IDEBuildSettingsProvider <NSObject>
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString<DVTMacroExpansion> *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString<DVTMacroExpansion> *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;
@end

@protocol IDEBuildable <IDEBuildSettingsProvider, DVTInvalidation, NSObject>
@property(readonly, copy) NSString *legacyIdentifier;
@property(readonly) NSSet *pathsOfFilesInCopyFilesBuildPhases;
@property(readonly) NSSet *pathsOfFilesInLinkedBinariesPhase;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) BOOL hasRecursiveDependencyCycle;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly, copy) IDEEntityIdentifier *entityIdentifier;
@property(readonly, copy) NSString *buildableIdentifier;
- (IDEBuilder *)createBuilderForBuildCommand:(int)arg1 withBuildTaskQueueSet:(IDEBuildOperationQueueSet *)arg2 parameters:(IDEBuildParameters *)arg3 buildOnlyTheseFiles:(NSArray *)arg4 restorePersistedBuildResults:(BOOL)arg5 withManager:(id <IDEBuildableOperationManager>)arg6;
- (NSArray *)implicitDependenciesForBuildParameters:(IDEBuildParameters *)arg1 executionEnvironment:(IDEExecutionEnvironment *)arg2 returningMessages:(id *)arg3;
- (NSArray *)directDependencies;
- (NSArray *)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(NSMutableSet *)arg2;
- (NSArray *)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (DVTSearchPath *)toolSearchPathWithBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;

@optional
- (Class)buildOperationManagerClass;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) NSDictionary *copiedFilePathsMap;
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *iconPath;
@property(readonly, copy) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (DVTFilePath *)filePathForBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)productTypeIdentifier;
@end

@protocol IDEPortalEntitlementsCoordinatorPlatform <NSObject>
- (NSDictionary *)willRequestProfileWithFeatures:(NSDictionary *)arg1 usingWildcardAppID:(BOOL)arg2;
- (NSDictionary *)didReadProfileFeatures:(NSDictionary *)arg1;
- (id)initWithCapabilitiesContext:(id <IDECapabilitiesContextProviding>)arg1;
@end

@protocol IDERunDestinationFallbackSelectorDeviceInfo <NSObject>
@property(readonly, nonatomic) BOOL ide_fallbackSelectorDeviceIsResizable;
@property(readonly, nonatomic) NSString *ide_fallbackSelectorDeviceGroupingFamily;
@end

@protocol IDERunOperationWorkerChaining
@end

@protocol NSFileManagerDelegate <NSObject>

@optional
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 removingItemAtURL:(NSURL *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 removingItemAtPath:(NSString *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldRemoveItemAtURL:(NSURL *)arg2;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldRemoveItemAtPath:(NSString *)arg2;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 linkingItemAtURL:(NSURL *)arg3 toURL:(NSURL *)arg4;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 linkingItemAtPath:(NSString *)arg3 toPath:(NSString *)arg4;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldLinkItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldLinkItemAtPath:(NSString *)arg2 toPath:(NSString *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 movingItemAtURL:(NSURL *)arg3 toURL:(NSURL *)arg4;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 movingItemAtPath:(NSString *)arg3 toPath:(NSString *)arg4;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldMoveItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldMoveItemAtPath:(NSString *)arg2 toPath:(NSString *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 copyingItemAtURL:(NSURL *)arg3 toURL:(NSURL *)arg4;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldProceedAfterError:(NSError *)arg2 copyingItemAtPath:(NSString *)arg3 toPath:(NSString *)arg4;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldCopyItemAtURL:(NSURL *)arg2 toURL:(NSURL *)arg3;
- (BOOL)fileManager:(NSFileManager *)arg1 shouldCopyItemAtPath:(NSString *)arg2 toPath:(NSString *)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol XCDTMobileIS_XPCDebuggingProcotol <DTXAllowedRPC>
- (void)outputReceived:(NSString *)arg1 fromProcess:(int)arg2 atTime:(unsigned long long)arg3;
- (void)xpcServiceObserved:(NSString *)arg1 withProcessIdentifier:(int)arg2 requestedByProcess:(int)arg3 options:(NSDictionary *)arg4;
@end

@interface DTDKApplication (IDEiPhoneOrganizerApplications)
- (id)DVT_nameAndVersion;
@end

@interface DVTAbstractiOSDevice : DVTDevice
{
    NSMapTable *_workspaceInstallsInProgress;
}

+ (id)nameForDeviceFamilyObject:(id)arg1;
+ (id)setFromDeviceFamilyObject:(id)arg1;
+ (id)numberFromObject:(id)arg1;
- (void).cxx_destruct;
- (id)recordedFramesMinimumVersionString;
- (id)iconImage;
- (id)deviceClassForDisplay;
- (void)uninstallProvisioningProfile:(id)arg1;
- (void)installProvisioningProfiles:(id)arg1;
- (BOOL)canInstallProfile:(id)arg1;
- (id)provisioningProfiles;
- (BOOL)deviceIsBusy;
- (id)taskForDeviceCommand:(id)arg1 withArguments:(id)arg2 error:(id *)arg3;
- (void)installActivityDidEndInWorkspace:(id)arg1 withError:(id)arg2;
- (void)installActivityInWorkspace:(id)arg1 operationInProgress:(id)arg2 details:(id)arg3;
- (void)installActivityWillBeginInWorkspace:(id)arg1 withProductName:(id)arg2;
- (void)setInstallProgress:(long long)arg1 path:(id)arg2;
- (void)setInstallProgress:(long long)arg1 text:(id)arg2;
- (long long)updateInstalledApplicationsWithResult:(id *)arg1;
- (long long)copyLocalPath:(id)arg1 toLocalPath:(id)arg2 sync:(BOOL)arg3 errorStringPtr:(id *)arg4;
- (long long)copyDevicePath:(id)arg1 toLocalPath:(id)arg2 sync:(BOOL)arg3 errorStringPtr:(id *)arg4;
- (long long)copyLocalPath:(id)arg1 toDevicePath:(id)arg2 sync:(BOOL)arg3 errorStringPtr:(id *)arg4;
- (long long)copyDevicePath:(id)arg1 toDevicePath:(id)arg2 sync:(BOOL)arg3 errorStringPtr:(id *)arg4;
- (id)copyDevicePath:(id)arg1 toLocalPath:(id)arg2 sync:(_Bool)arg3;
- (id)copyLocalPath:(id)arg1 toDevicePath:(id)arg2 sync:(_Bool)arg3;
- (id)copyLocalPath:(id)arg1 toLocalPath:(id)arg2 sync:(_Bool)arg3;
- (id)copyDevicePath:(id)arg1 toDevicePath:(id)arg2 sync:(_Bool)arg3;
- (id)_copyPath:(id)arg1 toPath:(id)arg2 sync:(_Bool)arg3 onDevice:(_Bool)arg4;
- (id)_transformPathForDevice:(id)arg1;
- (id)_additionalRsyncParameters;
- (id)_rsyncEnvironment;
- (id)copyLocalPath:(id)arg1 toLocalPath:(id)arg2 sync:(BOOL)arg3 withHardLinkDirs:(id)arg4;
- (id)systemBasePath;
- (id)softwareVersion;
- (void)createInstallWithName:(id)arg1 path:(id)arg2 buildables:(id)arg3 buildParameters:(id)arg4 killProcesses:(id)arg5 workspace:(id)arg6;
- (id)installSubstitutionPathsForDebugger;
- (_Bool)addUUIDToActiveInstalls:(id)arg1 errorString:(id *)arg2;
- (_Bool)copyBackActiveInstallsWithErrorString:(id *)arg1;
- (id)activeInstallsPath;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (id)actualRunnablePathForRunnableLocation:(id)arg1;
- (BOOL)shouldPresentDeviceForBuildable:(id)arg1 buildParameters:(id)arg2 workspaceArena:(id)arg3 error:(id *)arg4;
- (long long)hostAuthenticatedOneLineCommand:(id)arg1 withArg:(id)arg2 result:(id *)arg3;
- (id)taskForHostCommand:(id)arg1 withArguments:(id)arg2 error:(id *)arg3;
- (long long)multiLineCommand:(id)arg1 onDevice:(_Bool)arg2 result:(id *)arg3;
- (long long)oneLineCommand:(id)arg1 onDevice:(_Bool)arg2 withArguments:(id)arg3 environment:(id)arg4 result:(id *)arg5;
- (id)multiLineCommand:(id)arg1 onDevice:(_Bool)arg2;
- (id)oneLineCommand:(id)arg1 onDevice:(_Bool)arg2 withArguments:(id)arg3 andEnvironment:(id)arg4;
- (id)_runTask:(id)arg1;
- (id)_runTask:(id)arg1 withOutputHandler:(CDUnknownBlockType)arg2;
- (void)renameDevice:(id)arg1;
- (void)setName:(id)arg1;
- (_Bool)canRenameDevice;
- (_Bool)isWireless;
@property(readonly) _Bool isPasscodeLocked;
- (BOOL)isConcreteDevice;
- (BOOL)isGenericDevice;
- (id)initWithDeviceLocation:(id)arg1 extension:(id)arg2;

@end

@interface DVTiOSDevice : DVTAbstractiOSDevice <DVTDeviceApplicationInstaller, IDERunDestinationFallbackSelectorDeviceInfo, XCDTMobileIS_XPCDebuggingProcotol>
{
    NSObject<OS_dispatch_queue> *_deviceInstallQueue;
    DVTObservingToken *_developmentStateToken1;
    DVTObservingToken *_developmentStateToken2;
    DVTObservingToken *_developmentStateToken3;
    DVTNotificationToken *_deviceProgressToken;
    DVTFuture *_wakeupInFlight;
    BOOL _supportsXPCControlV2;
    NSMutableDictionary *_xpcStdoutFDForPid;
    BOOL _deviceIsBusy;
    BOOL _ignored;
    _Bool _deviceReady;
    _Bool _inHasConnected;
    BOOL _deviceInstallIsCancelled;
    BOOL _deviceIsTransient;
    DTDKRemoteDeviceToken *_token;
    long long _activityProgress;
    NSString *_activityTitle;
    NSError *_developerPrepError;
    IDELaunchParametersSnapshot *_scriptLaunchParameters;
    DTXChannel *_xpcAttachServiceChannel;
}

+ (id)keyPathsForValuesAffectingIsPasscodeLocked;
+ (id)keyPathsForValuesAffectingProcessorDescription;
+ (id)keyPathsForValuesAffectingIsUsedForDevelopment;
+ (id)keyPathsForValuesAffectingIgnored;
+ (id)keyPathsForValuesAffectingIsPaired;
+ (id)keyPathsForValuesAffectingIsWirelessEnabled;
+ (id)keyPathsForValuesAffectingAddresses;
+ (id)keyPathsForValuesAffectingHostname;
+ (id)keyPathsForValuesAffectingHasWiredConnection;
+ (id)keyPathsForValuesAffectingHasWirelessConnection;
+ (id)keyPathsForValuesAffectingIsWireless;
+ (void)presentError:(id)arg1;
+ (id)keyPathsForValuesAffectingStatusIsIndeterminate;
+ (id)keyPathsForValuesAffectingActivityProgress;
+ (id)keyPathsForValuesAffectingActivityVisible;
+ (id)keyPathsForValuesAffectingSystemApplications;
+ (id)keyPathsForValuesAffectingApplications;
+ (id)keyPathsForValuesAffectingDeviceIsPaired;
+ (id)keyPathsForValuesAffectingAvailable;
+ (id)keyPathsForValuesAffectingCanRename;
+ (id)keyPathsForValuesAffectingDeviceAttached;
+ (id)itemWithPlistRepresentation:(id)arg1;
+ (id)keyPathsForValuesAffectingNativeArchitecture;
+ (id)keyPathsForValuesAffectingUnavailabilityError;
+ (id)keyPathsForValuesAffectingMountPort;
+ (id)keyPathsForValuesAffectingNfsPort;
+ (id)keyPathsForValuesAffectingRsyncPort;
+ (id)keyPathsForValuesAffectingTelnetPort;
+ (id)keyPathsForValuesAffectingSshPort;
+ (id)keyPathsForValuesAffectingIsRunningSupportedOS;
+ (id)keyPathsForValuesAffectingIsSupportedHardware;
+ (id)keyPathsForValuesAffectingProvisioningProfiles;
+ (id)keyPathsForValuesAffectingName;
+ (id)iPhoneDeviceWithDeviceToken:(id)arg1;
+ (Class)deviceClassForToken:(id)arg1;
+ (Class)deviceClassForClass:(id)arg1;
+ (Class)deviceClassForDeviceType:(id)arg1;
+ (Class)deviceClassForCodename:(id)arg1;
+ (id)alliOSDevices;
+ (id)keyPathsForValuesAffectingCanExecute;
+ (id)allDeveloperDiskImagePathsForPlatform:(id)arg1;
+ (id)pathForInternalExecutable:(id)arg1 searchInPlatform:(id)arg2;
@property(retain) DTXChannel *xpcAttachServiceChannel; // @synthesize xpcAttachServiceChannel=_xpcAttachServiceChannel;
@property BOOL deviceIsTransient; // @synthesize deviceIsTransient=_deviceIsTransient;
@property(retain) IDELaunchParametersSnapshot *scriptLaunchParameters; // @synthesize scriptLaunchParameters=_scriptLaunchParameters;
@property BOOL deviceInstallIsCancelled; // @synthesize deviceInstallIsCancelled=_deviceInstallIsCancelled;
@property(retain) NSObject<OS_dispatch_queue> *deviceInstallQueue; // @synthesize deviceInstallQueue=_deviceInstallQueue;
@property(copy) NSError *developerPrepError; // @synthesize developerPrepError=_developerPrepError;
@property _Bool inHasConnected; // @synthesize inHasConnected=_inHasConnected;
@property _Bool deviceReady; // @synthesize deviceReady=_deviceReady;
@property(copy) NSString *activityTitle; // @synthesize activityTitle=_activityTitle;
- (void)setIgnored:(BOOL)arg1;
- (void).cxx_destruct;
- (void)_syncDeviceCrashLogsDirectoryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)monitorWirelessConnection;
- (id)primaryInstrumentsServer;
- (id)platform;
- (id)makeTransportForTestManagerService:(id *)arg1;
- (BOOL)requiresTestDaemonMediationForTestHostConnection;
- (BOOL)supportsTestManagerDaemon;
- (id)testingFrameworkPathsForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)testHostPathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
- (void)modifyTestingEnvironmentVariables:(id)arg1 host:(id)arg2 testBundlePath:(id)arg3;
- (id)deviceForRunningUnitTestsWithHost:(id)arg1 error:(id *)arg2;
- (BOOL)supportsFileSpecifyingTestScopes;
- (BOOL)supportsInverseTestScopes;
- (_Bool)isPasscodeLocked;
- (id)processorDescription;
- (void)setUsedForDevelopment:(BOOL)arg1;
- (BOOL)isUsedForDevelopment;
- (BOOL)isIgnored;
- (_Bool)isPaired;
- (void)unpair;
- (_Bool)usesPairingRecord;
- (_Bool)canEnableWireless;
- (void)disableWireless;
- (id)enableWireless;
- (_Bool)isWirelessEnabled;
- (id)addresses;
- (id)hostname;
- (_Bool)hasWiredConnection;
- (_Bool)hasWirelessConnection;
- (_Bool)isWireless;
- (void)didBecomeActiveDeviceForRunContext:(id)arg1;
- (BOOL)deviceHasUI;
@property BOOL deviceIsBusy; // @synthesize deviceIsBusy=_deviceIsBusy;
@property(readonly, copy) NSString *description;
- (void)updateExpansionProgress:(double)arg1 withMessage:(id)arg2;
- (void)setDeviceIsBusyOnMainThread:(BOOL)arg1;
- (void)setStatusOnMainThread:(id)arg1 progress:(long long)arg2;
@property(readonly) BOOL statusIsIndeterminate;
@property long long activityProgress; // @synthesize activityProgress=_activityProgress;
@property(readonly, getter=isActivityVisible) BOOL activityVisible;
@property(readonly) NSSet *systemApplications;
@property(readonly) NSSet *applications;
- (BOOL)canChangeDeviceSoftwareVersion;
@property(readonly) _Bool deviceIsPaired;
- (BOOL)isAvailable;
- (void)renameDevice:(id)arg1;
- (void)setName:(id)arg1;
- (BOOL)canRename;
@property(readonly) _Bool deviceHasWakeupToken;
@property(readonly) _Bool deviceAttached;
- (void)dealloc;
- (void)setCrashLogDirectory:(id)arg1;
- (id)plistRepresentation;
- (void)downloadOptimizationProfilesFromBundleIdentifier:(id)arg1 orPath:(id)arg2 toFilePath:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)optimizationProfilesPathFromBundleIdentifier:(id)arg1;
- (id)scriptingEnvironment;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (id)executionDisplayName;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)displayNameAdditionsWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;
- (id)preferredSDKForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)preferredArchitectureForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)supportedArchitectures;
- (id)nativeArchitecture;
- (BOOL)shouldPresentDeviceForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)errorMessageForBuildable:(id)arg1 buildParameters:(id)arg2;
- (BOOL)deviceSupportsBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)unavailabilityError;
- (id)_deviceIsUnpairedError;
@property(readonly, copy) NSString *mountOptions;
@property(readonly) long long mountPort;
@property(readonly) long long nfsPort;
@property(readonly) long long rsyncPort;
@property(readonly) long long telnetPort;
@property(readonly) long long sshPort;
- (_Bool)_askForAlternateApplicationIfNeeded:(id *)arg1;
- (BOOL)isRunningSupportedOS;
- (BOOL)isSupportedHardware;
- (BOOL)supportsProvisioning;
@property(readonly, nonatomic) BOOL ide_fallbackSelectorDeviceIsResizable;
@property(readonly, nonatomic) NSString *ide_fallbackSelectorDeviceGroupingFamily;
- (id)deviceClassForDisplay;
- (void)uninstallProvisioningProfile:(id)arg1;
- (void)installProvisioningProfiles:(id)arg1;
- (void)installProvisioningProfileAtURL:(id)arg1;
- (void)installProvisioningProfile:(id)arg1;
- (id)provisioningProfiles;
- (id)certificateUtilities;
- (BOOL)runsRemoteFromHostLauncher;
- (id)softwareVersion;
- (id)recordedFramesBacktraceRecordingDylibPath;
- (id)recordedFramesLibdispatchIntrospectionDylibPath;
- (BOOL)supportsAttachByPIDOrName;
- (id)operatingSystemVersionWithBuildNumber;
- (id)operatingSystemBuild;
- (id)operatingSystemVersion;
- (id)modelCode;
- (id)modelUTI;
- (id)modelName;
- (id)name;
- (id)displayOrder;
- (BOOL)canIgnore;
- (unsigned long long)supportsFetchEvents;
- (BOOL)supportsRoutingCoverageFile;
- (BOOL)supportsLocationSimulation;
- (BOOL)supportsApplicationDataUploading;
- (void)cancelDeviceInstall;
- (id)initWithDeviceLocation:(id)arg1 extension:(id)arg2;
- (void)_respondToDeviceProgressNotification:(id)arg1;
@property(retain) DTDKRemoteDeviceToken *token; // @synthesize token=_token;
- (void)stopDebuggingXPCServicesForPID:(int)arg1;
- (void)xpcServiceObserved:(id)arg1 withProcessIdentifier:(int)arg2 requestedByProcess:(int)arg3 options:(id)arg4;
- (void)outputReceived:(id)arg1 fromProcess:(int)arg2 atTime:(unsigned long long)arg3;
- (void)debugXPCServices:(id)arg1;
- (BOOL)supportsUnhostedXPCServiceDebugging;
- (BOOL)supportsXPCServiceDebugging;
- (void)didFinishRunning;
- (id)additionalApplicationsForDebuggingAppExtensions;
- (id)startDebugServerService;
- (id)deviceArbitrationForcedCheckIn;
- (id)deviceArbitrationCheckIn;
- (BOOL)installApplicationWithLaunchSession:(id)arg1 error:(id *)arg2;
- (void)presentAlertForNoRoutingCoverageFileAtPath:(id)arg1;
- (BOOL)downloadApplicationDataToPath:(id)arg1 forInstalledApplicationWithBundleIdentifier:(id)arg2 error:(id *)arg3;
- (BOOL)uploadApplicationDataWithPath:(id)arg1 forInstalledApplicationWithBundleIdentifier:(id)arg2 error:(id *)arg3;
- (void)_storeAppDataSyncRecords:(id)arg1 forApplication:(id)arg2;
- (id)_appDataSyncRecordsForApplication:(id)arg1;
- (id)_customDataSpecifierForApplication:(id)arg1;
- (BOOL)rsyncInstallAppWithSession:(id)arg1 error:(id *)arg2;
- (BOOL)installForRsyncDeveloperModeWithSession:(id)arg1 error:(id *)arg2;
- (BOOL)installForNFSDeveloperModeWithSession:(id)arg1 error:(id *)arg2;
- (id)deviceInstallPathForLaunchSession:(id)arg1 andBuildProductsPath:(id)arg2;
- (BOOL)installForMobileInstallWithSession:(id)arg1 error:(id *)arg2;
- (BOOL)installForTestBundleWithSession:(id)arg1 error:(id *)arg2;
- (id)applicationForSession:(id)arg1;
- (id)deviceBuiltProductsDir;
- (id)deviceMountedProductsDir;
- (id)localBuiltProductsPathWithSession:(id)arg1 error:(id *)arg2;
- (id)buildParametersForLaunchSession:(id)arg1;
- (_Bool)_copyBackAlternateApplication:(id)arg1 atPath:(id *)arg2 error:(id *)arg3;
- (void)prepareLaunchParametersForUnitTesting:(id)arg1 appExecutablePath:(id)arg2 testBundlePath:(id)arg3;
- (id)checkForUnitTests:(id)arg1;
- (void)setInstallProgress:(long long)arg1 text:(id)arg2;
- (void)setInstallProgress:(long long)arg1 path:(id)arg2;
- (long long)updateInstalledApplicationsWithResult:(id *)arg1;
- (id)taskForDeviceCommand:(id)arg1 withArguments:(id)arg2 error:(id *)arg3;
- (void)installActivityDidEndInWorkspace:(id)arg1 withError:(id)arg2;
- (void)installActivityInWorkspace:(id)arg1 operationInProgress:(id)arg2 details:(id)arg3;
- (void)installActivityWillBeginInWorkspace:(id)arg1 withProductName:(id)arg2;
- (id)invokeUserScript:(id)arg1;
- (BOOL)canExecute;
- (void)hasDisconnected;
- (void)hasConnected;
- (id)_remoteDeviceProperties;
- (id)locateDeveloperRoot;
- (id)developerDiskImageSearchPaths;
- (id)_mountNFSBuildDir;
- (id)_openTCPRelayConnection;
- (BOOL)_hasSpringBoard;
- (BOOL)_bothHaveInternalSupport;
- (id)_transformPathForDevice:(id)arg1;
- (id)_deviceHostname;
- (id)_rsyncEnvironment;
- (id)enableKeyBasedSSH;
- (id)_additionalRsyncParameters;
- (id)_copyPath:(id)arg1 toPath:(id)arg2 sync:(_Bool)arg3 onDevice:(_Bool)arg4;
- (void)_closeConnection;
- (id)analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 workingDirectory:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
- (CDUnknownBlockType)_analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 workingDirectory:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
- (id)installApplicationSync:(id)arg1 options:(id)arg2;
- (id)installApplicationsSync:(id)arg1 options:(id)arg2;
- (void)uninstallApplications:(id)arg1;
- (id)uninstallApplicationWithBundleIdentifierSync:(id)arg1;
- (void)installApplications:(id)arg1 allowReplacing:(BOOL)arg2;
- (void)_installApplicationsImpl:(id)arg1 allowReplacing:(BOOL)arg2 options:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)processAppInstallSet:(id)arg1 appUninstallSet:(id)arg2 installOptions:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)processAppInstallSetLegacy:(id)arg1 appUninstallSet:(id)arg2 installOptions:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)validateApplicationAtPath:(id)arg1;
- (BOOL)_checkForARM64SliceAtPath:(id)arg1 executableName:(id)arg2 zipFile:(id)arg3 subpath:(id)arg4;
- (id)installedApplicationWithBundleIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTiOSDeviceLocator : DVTDeviceLocator
{
    DVTNotificationToken *_deviceAttachedToken;
    DVTNotificationToken *_deviceDetachedToken;
    DVTMapTable *_deviceObservingTokens;
    NSMutableSet *_savedDevices;
    NSSet *_placeholderDevices;
    NSSet *_platforms;
}

+ (id)deviceLocator;
- (void).cxx_destruct;
- (BOOL)matchDevice:(id)arg1 againstOptions:(id)arg2 genericOnly:(BOOL)arg3 allowAliases:(BOOL)arg4;
- (BOOL)validateDeviceSpecifierOptions:(id)arg1 genericOnly:(BOOL)arg2 allowMultipleMatches:(BOOL)arg3 error:(id *)arg4;
- (id)deviceType;
- (void)presentError:(id)arg1;
- (void)deviceDetached:(id)arg1;
- (void)deviceAttached:(id)arg1;
- (id)iOSDeviceWithIdentifier:(id)arg1;
- (id)knownDeviceAtDeviceLocation:(id)arg1;
- (id)platforms;
- (id)deviceLocationScheme;
- (void)stopLocating;
- (void)startLocating;
- (void)forgetDevice:(id)arg1;
- (void)beginWatchingDevice:(id)arg1;
- (void)updateDefaultsForDevice:(id)arg1;
- (id)init;

@end

@interface DVTiOSDevicePlaceholder : DVTDevice
{
}

- (id)init;
- (BOOL)isAvailable;
- (id)deviceType;
- (id)platform;
- (unsigned long long)supportsFetchEvents;
- (id)deviceForRunningUnitTestsError:(id *)arg1;
- (id)recordedFramesMinimumVersionString;
- (BOOL)supportsPGOReturningError:(id *)arg1;
- (BOOL)supportsAttachByPIDOrName;
- (BOOL)supportsArchiving;
- (void)requestProcessInformations:(CDUnknownBlockType)arg1;
- (BOOL)supportsRunningExecutableAtPath:(id)arg1 usingArchitecture:(id)arg2 error:(id *)arg3;
- (BOOL)supportsExecutionForArchitecture:(id)arg1 launchSession:(id)arg2 error:(id *)arg3;
- (BOOL)canInstallBuildablesError:(id *)arg1;
- (id)analysisOperationWithAnalysisToolService:(id)arg1 location:(id)arg2 workingDirectory:(id)arg3 workspaceFilePath:(id)arg4 projectFilePath:(id)arg5 outError:(id *)arg6;
- (id)generalRunErrorWithLaunchSession:(id)arg1;
- (id)generalErrorWithVerb:(id)arg1 launchSession:(id)arg2;
- (id)errorMessageForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (id)preferredSDKForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)preferredArchitectureForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitectures;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (BOOL)isConcreteDevice;
- (BOOL)isGenericDevice;
- (id)displayOrder;
- (id)displayNameAdditionsWhenUsingArchitecture:(id)arg1 withSDK:(id)arg2;

@end

@interface DVTiPhone : DVTiOSDevice
{
}

@end

@interface DVTiPhonePlaceholder : DVTiOSDevicePlaceholder
{
}

- (id)name;
- (id)nativeArchitecture;
- (id)platform;

@end

@interface DVTiPhoneProvisioningProfileProvider : DVTProvisioningProfileProvider
{
}

+ (id)keyPathsForValuesAffectingAllProfiles;
+ (id)keyPathsForValuesAffectingAreProfilesLoaded;
- (BOOL)installHostProfiles:(id)arg1 error:(id *)arg2;
- (id)profileWithData:(id)arg1 error:(id *)arg2;
- (id)profileWithURL:(id)arg1 error:(id *)arg2;
- (BOOL)isProfileExpiringWithCodeSigningIdentity:(id)arg1 profileName:(id *)arg2;
- (id)expiringProfilesInExpansionContext:(id)arg1;
- (id)expiringProfiles;
- (id)allProfiles;
- (BOOL)areProfilesLoaded;
- (void)forceProfileLoading;
- (id)controller;
- (id)certificateUtilities;

@end

@interface DVTiPhoneSimulator : DVTAbstractiOSDevice <NSFileManagerDelegate, IDERunDestinationFallbackSelectorDeviceInfo, DTiPhoneSimulatorSessionDelegate, DVTDeviceApplicationProvider, XCDTMobileIS_XPCDebuggingProcotol>
{
    id <DVTCancellable> _notificationToken;
    _Bool _launchSucceeded;
    NSError *_launchFailureError;
    _Bool _didExitRecursionGuard;
    IDEPseudoTerminal *_pty;
    NSMutableDictionary *_xpcStdoutFDForPid;
    NSString *_displayOrder;
    NSString *_recordedFramesBacktraceRecordingDylibPath;
    NSMutableDictionary *_waiters;
    _Bool _correspondingDeviceSDKExists;
    IDELaunchiPhoneSimulatorLauncher *_launchService;
    SimDevice *_device;
    DTiPhoneSimulatorSession *_currentSimulatorSession;
    DTXChannel *_xpcAttachServiceChannel;
}

+ (BOOL)_hasExistingSession:(id)arg1;
+ (id)keyPathsForValuesAffectingState;
+ (id)simulatorWithDevice:(id)arg1;
+ (void)initialize;
@property(retain) DTXChannel *xpcAttachServiceChannel; // @synthesize xpcAttachServiceChannel=_xpcAttachServiceChannel;
@property(readonly) DTiPhoneSimulatorSession *currentSimulatorSession; // @synthesize currentSimulatorSession=_currentSimulatorSession;
@property(retain) SimDevice *device; // @synthesize device=_device;
@property _Bool correspondingDeviceSDKExists; // @synthesize correspondingDeviceSDKExists=_correspondingDeviceSDKExists;
@property(retain) IDELaunchiPhoneSimulatorLauncher *launchService; // @synthesize launchService=_launchService;
- (void).cxx_destruct;
- (id)launchApplicationWithBundleIdentifier:(id)arg1 withArguments:(id)arg2 environment:(id)arg3 options:(id)arg4;
- (BOOL)canInstallApplication;
- (id)runExecutableAtPath:(id)arg1 withArguments:(id)arg2 environment:(id)arg3 options:(id)arg4 terminationHandler:(CDUnknownBlockType)arg5;
- (BOOL)canRunExecutables;
- (void)stopDebuggingXPCServicesForPID:(int)arg1;
- (void)xpcServiceObserved:(id)arg1 withProcessIdentifier:(int)arg2 requestedByProcess:(int)arg3 options:(id)arg4;
- (void)outputReceived:(id)arg1 fromProcess:(int)arg2 atTime:(unsigned long long)arg3;
- (void)debugXPCServices:(id)arg1;
- (BOOL)supportsUnhostedXPCServiceDebugging;
- (BOOL)supportsXPCServiceDebugging;
- (id)primaryInstrumentsServer;
- (BOOL)installApplicationWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)_installedPathForBundleIdentifier:(id)arg1;
- (id)makeTransportForTestManagerService:(id *)arg1;
- (id)_waitForSimLaunchdToLoadENVAndReturnTestConnectionSocketPath:(id *)arg1;
- (BOOL)requiresTestDaemonMediationForTestHostConnection;
- (BOOL)supportsTestManagerDaemon;
- (id)testArchitectureForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)_availableArchitecturesForArchitecture:(id)arg1;
- (id)deviceForRunningUnitTestsWithHost:(id)arg1 error:(id *)arg2;
- (BOOL)testingShouldAttachDebuggerWithHost:(id)arg1;
- (void)modifyTestingEnvironmentVariables:(id)arg1 host:(id)arg2 testBundlePath:(id)arg3;
- (id)testingFrameworkPathsForBuildableProduct:(id)arg1 withBuildParameters:(id)arg2;
- (id)testHostPathForBuildableProduct:(id)arg1 buildParameters:(id)arg2 outError:(id *)arg3;
- (BOOL)supportsFileSpecifyingTestScopes;
- (BOOL)supportsInverseTestScopes;
- (BOOL)supportsMultipleTestScopes;
- (id)taskForDeviceCommand:(id)arg1 withArguments:(id)arg2 error:(id *)arg3;
- (id)systemBasePath;
- (void)stopLocationSimulation;
- (void)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)_cleanupSession;
- (void)session:(id)arg1 didEndWithError:(id)arg2;
- (void)session:(id)arg1 didStart:(BOOL)arg2 withError:(id)arg3;
- (void)_waitForReplyWithKey:(id)arg1;
- (BOOL)attachedToTarget:(id)arg1 error:(id *)arg2;
- (BOOL)launchTool:(id)arg1 environment:(id)arg2 pty:(id)arg3 pid:(int *)arg4 error:(id *)arg5;
- (BOOL)launchSimulatedExecutable:(id)arg1 error:(id *)arg2;
- (_Bool)_createAndStartSessionWithConfig:(id)arg1 error:(id *)arg2;
- (id)_createNewSessionConfig:(id)arg1 validBundledAppPath:(id *)arg2 error:(id *)arg3;
- (void)transferDirectionsFileToBundlePath:(id)arg1;
- (void)uploadApplicationDataToBundlePath:(id)arg1;
- (void)presentErrorWithMessageText:(id)arg1 informativeText:(id)arg2;
- (id)simulatorDirectoriesForAppName:(id)arg1;
- (id)effectiveSDKVersion;
- (BOOL)fileManager:(id)arg1 shouldCopyItemAtPath:(id)arg2 toPath:(id)arg3;
- (BOOL)shouldProcessPath:(id)arg1;
- (BOOL)prepareToLaunchWithService:(id)arg1 error:(id *)arg2;
- (unsigned long long)_sessionStartTimeout;
- (id)_newSessionConfig;
- (id)additionalApplicationsForDebuggingAppExtensions;
@property(readonly) NSSet *systemApplications;
@property(readonly) NSSet *applications;
- (id)preferredSDKForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)preferredArchitectureForDeviceOptions:(id)arg1 error:(id *)arg2;
- (id)deviceSpecificOverridingPropertiesForBuildable:(id)arg1 withBaselineParameters:(id)arg2;
- (id)executionDisplayName;
- (id)supportedSDKsForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)shouldPresentDeviceForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (id)supportedArchitecturesForBuildable:(id)arg1 buildParameters:(id)arg2 error:(id *)arg3;
- (BOOL)canBeDefaultDeviceForBuildable:(id)arg1 buildParameters:(id)arg2;
- (id)softwareVersion;
- (void)setDisplayOrder:(id)arg1;
- (id)displayOrder;
- (void)hasBeenDetached;
- (void)terminate;
- (void)willTerminate;
@property(readonly, copy) NSArray *supportedDeviceFamilies;
- (id)deviceType;
- (id)platform;
- (BOOL)isAvailable;
- (id)supportedArchitectures;
- (id)nativeArchitecture;
- (id)operatingSystemVersionWithBuildNumber;
- (id)operatingSystemBuild;
- (id)operatingSystemVersion;
- (void)renameDevice:(id)arg1;
- (void)setName:(id)arg1;
- (id)name;
- (BOOL)canIgnore;
- (BOOL)canRename;
- (id)modelCode;
@property(readonly, nonatomic) BOOL ide_fallbackSelectorDeviceIsResizable;
@property(readonly, nonatomic) NSString *ide_fallbackSelectorDeviceGroupingFamily;
- (id)modelUTI;
- (id)modelName;
- (BOOL)supportsPGOReturningError:(id *)arg1;
- (BOOL)supportsDisplayScaleOption;
- (BOOL)supportsRoutingCoverageFile;
- (void)performUbiquityFetchEvent;
- (BOOL)canPerformUbiquityFetchEvent;
- (void)performFetchEventForPID:(int)arg1;
- (id)recordedFramesBacktraceRecordingDylibPath;
- (id)recordedFramesLibdispatchIntrospectionDylibPath;
- (unsigned long long)supportsFetchEvents;
- (BOOL)supportsLocationSimulation;
- (BOOL)supportsApplicationDataUploading;
@property(readonly) DTiPhoneSimulatorSystemRoot *simulatedSystemRoot;
- (id)launchApplicationWithBundleIdentifier:(id)arg1 andOptions:(id)arg2;
- (id)launchApplicationWithBundleIdentifier:(id)arg1;
- (id)spawnExecutableAtPath:(id)arg1 withOptions:(id)arg2 andTerminationHandler:(CDUnknownBlockType)arg3;
- (id)spawnExecutableAtPath:(id)arg1 withOptions:(id)arg2;
- (id)applicationIsInstalledWithBundleIdentifier:(id)arg1;
- (id)uninstallApplicationWithBundleIdentifier:(id)arg1 andOptions:(id)arg2;
- (id)uninstallApplicationWithBundleIdentifier:(id)arg1;
- (id)installApplicationAtPath:(id)arg1 withOptions:(id)arg2;
- (id)installApplicationAtPath:(id)arg1;
- (id)restoreContentsAndSettingsFrom:(id)arg1;
- (id)eraseContentsAndSettings;
- (id)shutdown;
- (id)bootWithOptions:(id)arg1;
- (id)boot;
@property(readonly) unsigned long long state;
@property(readonly) SimDeviceType *deviceInfo;
- (id)shutDownDevice;
- (id)startUpDevice;
- (unsigned long long)startupState;
- (BOOL)canStartUpAndShutDown;
- (void)dealloc;
@property(readonly) NSNumber *simulatedDeviceFamily;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DVTiPhoneSimulatorLocator : DVTDeviceLocator
{
    _Bool _locating;
    SimDeviceSet *_deviceSet;
    id <DVTCancellable> _notificationToken;
}

- (void).cxx_destruct;
- (void)deleteDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (BOOL)matchDevice:(id)arg1 againstOptions:(id)arg2 genericOnly:(BOOL)arg3 allowAliases:(BOOL)arg4;
- (BOOL)validateDeviceSpecifierOptions:(id)arg1 genericOnly:(BOOL)arg2 allowMultipleMatches:(BOOL)arg3 error:(id *)arg4;
- (id)deviceType;
- (id)knownDeviceAtDeviceLocation:(id)arg1;
- (id)platforms;
- (id)deviceLocationScheme;
- (void)stopLocating;
- (void)startLocating;

@end

@interface DVTiPhoneTask : DVTTask
{
    NSArray *_originalArguments;
    NSString *_originalLaunchPath;
    DVTiOSDevice *_device;
}

@property(retain) DVTiOSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (BOOL)launchRunningTerminationHandlerOnQueue:(id)arg1 error:(id *)arg2 terminationHandler:(CDUnknownBlockType)arg3;
- (id)description;

@end

@interface IDEAppStoreIdentityFilter : IDEArchiveIdentityFilter
{
    NSSet *_types;
    CDUnknownBlockType identityComparator;
    CDUnknownBlockType filterBlock;
}

@property(copy) CDUnknownBlockType filterBlock; // @synthesize filterBlock;
@property(copy) CDUnknownBlockType identityComparator; // @synthesize identityComparator;
- (void).cxx_destruct;
- (_Bool)shouldIncludeIdentity:(id)arg1;
- (id)allowedCertificateTypes;
- (id)initWithExtension:(id)arg1;

@end

@interface IDEAppStorePackager : IDEArchivePackager
{
}

- (id)symbolsFolderNameForArchive:(id)arg1;
- (id)createTempPathWithError:(id *)arg1;
- (id)packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 extraEntitlements:(id)arg4 includeSymbolCache:(BOOL)arg5 error:(id *)arg6;
- (id)signingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 extraEntitlements:(id)arg3 andError:(id *)arg4;
- (id)_packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 includeSymbolCache:(BOOL)arg4 temporaryDir:(id)arg5 operationGroup:(id)arg6 andError:(id *)arg7;
- (id)_symbolsOperationForArchive:(id)arg1 includeSymbolCache:(BOOL)arg2 temporaryDir:(id)arg3 operationGroup:(id)arg4 error:(id *)arg5;
- (id)_signingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 extraEntitlements:(id)arg3 temporaryDir:(id)arg4 operationGroup:(id)arg5 andError:(id *)arg6;
- (id)_preSigningOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 temporaryDir:(id)arg3 operationGroup:(id)arg4 andError:(id *)arg5;
- (id)packageFilenameForArchive:(id)arg1;
- (id)identitiesForBundleIdentifier:(id)arg1 andIdentityFilter:(id)arg2;
- (id)symbolsPath;
- (id)codesignAllocatePath;
- (id)commandLineToolSearchPath;
- (id)tokenForProvisioningProfileNamed:(id)arg1;
- (id)tokenForSigningIdentityNamed:(id)arg1;
- (id)refreshIdentity;
- (id)dontSignIdentity;
- (id)sdk;

@end

@interface IDERuniPhoneService : IDERunDeviceService
{
}

+ (id)capability;
+ (id)serviceIdentifierKey;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDEDebugiPhoneService : IDERuniPhoneService
{
}

+ (id)serviceIdentifierKey;

@end

@interface IDERuniPhoneSimulatorService : IDERunDeviceService
{
}

+ (id)capability;
+ (id)serviceIdentifierKey;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDEDebugiPhoneSimulatorService : IDERuniPhoneSimulatorService
{
}

+ (id)serviceIdentifierKey;
- (id)capabilitySequenceForLaunchSession:(id)arg1;

@end

@interface IDEDistributionMethodAdHoc : IDEDistributionMethodExport
{
}

- (id)exportStepName;
- (unsigned long long)provisioningProfileType;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodEnterprise : IDEDistributionMethodExport
{
}

- (id)requiredTeamTypes;
- (id)exportStepName;
- (unsigned long long)provisioningProfileType;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)orderedDistributionStepClassNames;
- (id)subtitle;
- (id)shortTitle;
- (id)title;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodiOSAppStore : IDEDistributionMethodAppStore
{
}

- (id)requiredProfileEntitlements;
- (BOOL)wantsProvisioningProfiles;
- (id)installerCertificateKind;
- (id)certificateKind;
- (id)shortTitle;
- (_Bool)supportsDistributionOfArchive:(id)arg1;

@end

@interface IDEDistributionMethodiOSAppStoreDistribution : IDEDistributionMethodiOSAppStore
{
}

- (id)subtitle;
- (id)title;
- (int)supportedTask;

@end

@interface IDEDistributionMethodiOSAppStoreExport : IDEDistributionMethodiOSAppStore
{
}

- (id)exportStepName;
- (id)subtitle;
- (id)title;
- (int)supportedTask;

@end

@interface IDEDistributionMethodiOSAppStoreValidation : IDEDistributionMethodiOSAppStore
{
}

- (id)subtitle;
- (id)title;
- (int)supportedTask;

@end

@interface IDEEntitlementsMerger : IDEArchivePackagerEntitlementsMerger
{
}

+ (id)genericallyDefinedProfileKeysToSkipWhenCopyingFromProfile;
+ (id)extraEntitlementsToSkipWhenCopying;

@end

@interface IDEGaugeDataProviderService_iOSDevice : IDEGaugeDataProviderService
{
    DTXChannel *_channel;
}

+ (id)remoteServerChannelIdentifier;
+ (id)observableAttributes;
@property(retain) DTXChannel *channel; // @synthesize channel=_channel;
- (void).cxx_destruct;
- (id)sampleAttributes:(id)arg1 forPIDs:(id)arg2;
- (void)didStopSampling;
- (void)willStartSamplingAtTime:(double)arg1 withInterval:(double)arg2;

@end

@interface IDEGaugeDataProviderService_iOSDevice_NetworkStatistics : IDEGaugeDataProviderService_iOSDevice
{
}

+ (id)remoteServerChannelIdentifier;
+ (id)observableAttributes;

@end

@interface IDEGaugeDataProviderService_iOSDevice_procinfo : IDEGaugeDataProviderService_iOSDevice
{
}

+ (id)remoteServerChannelIdentifier;
+ (id)observableAttributes;

@end

@interface IDEGaugeDataProviderService_iOSSimulator : IDEGaugeDataProviderService
{
}

@end

@interface IDEGaugeDataProviderService_iOSSimulator_NetworkStatistics : IDEGaugeDataProviderService_iOSSimulator
{
}

+ (id)observableAttributes;
- (id)sampleAttributes:(id)arg1 forPIDs:(id)arg2;

@end

@interface IDEGaugeDataProviderService_iOSSimulator_procinfo : IDEGaugeDataProviderService_iOSSimulator
{
}

+ (id)observableAttributes;
- (id)sampleAttributes:(id)arg1 forPIDs:(id)arg2;

@end

@interface IDEIdentityToken : NSObject <IDEArchivePackagerIdentityToken>
{
    int _status;
    NSString *_commonName;
    DTDKProvisioningProfile *_provisioningProfile;
    NSString *_certificateType;
    struct OpaqueSecCertificateRef *_certificate;
}

+ (id)tokenForSigningIdentityNamed:(id)arg1;
+ (id)tokenForProvisioningProfileNamed:(id)arg1;
+ (id)allTokensForBundleIdentifier:(id)arg1;
+ (id)allTokens;
+ (id)refreshToken;
+ (id)dontSignToken;
+ (id)tokenWithProfile:(id)arg1;
+ (id)tokenWithCertificate:(struct OpaqueSecCertificateRef *)arg1;
+ (id)tokenWithCertificate:(struct OpaqueSecCertificateRef *)arg1 andProfile:(id)arg2;
@property(readonly) int status; // @synthesize status=_status;
@property(readonly, copy) DTDKProvisioningProfile *provisioningProfile; // @synthesize provisioningProfile=_provisioningProfile;
- (void).cxx_destruct;
- (long long)compare:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)displayName;
- (id)unadornedDisplayName;
- (id)relatedTokenForKey:(id)arg1;
@property(readonly, copy) NSString *teamID;
@property(readonly, copy) NSString *certificateType; // @synthesize certificateType=_certificateType;
@property(readonly) struct OpaqueSecCertificateRef *certificate; // @synthesize certificate=_certificate;
@property(readonly, copy) NSString *commonName; // @synthesize commonName=_commonName;
- (id)certificateUtilities;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface IDEMacAppStoreArchivePackager : IDEAppStorePackager
{
}

- (id)packageFilenameForArchive:(id)arg1;
- (id)_packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 includeSymbolCache:(BOOL)arg4 temporaryDir:(id)arg5 operationGroup:(id)arg6 andError:(id *)arg7;
- (id)sdk;
- (_Bool)supportsSymbolUploads;
- (_Bool)supportsInstallerSigning;
- (_Bool)supportsCodeSigning;

@end

@interface IDEInAppPurchaseArchivePackager : IDEMacAppStoreArchivePackager
{
}

- (id)_packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 includeSymbolCache:(BOOL)arg4 temporaryDir:(id)arg5 operationGroup:(id)arg6 andError:(id *)arg7;
- (_Bool)supportsSymbolUploads;
- (_Bool)supportsInstallerSigning;
- (_Bool)supportsCodeSigning;

@end

@interface IDEInstalliPhoneLauncher : IDERunOperationWorker
{
    DVTiOSDevice *_device;
}

@property(retain) DVTiOSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (void)delayLaunchIfNeededFor15147964;
- (void)_setFinishedRunningWithError:(id)arg1;

@end

@interface IDEInstalliPhoneService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDEInstalliPhoneSimulatorService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDELaunchiPhoneLauncher : IDERunOperationWorker
{
    DVTiOSDevice *_device;
}

@property(retain) DVTiOSDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (BOOL)setupOptimizationProfileGeneration;
- (void)terminate;
- (void)_deviceWoke;
- (void)start;
- (BOOL)postCheckinActionShouldFinishOperationWorker;
- (BOOL)shouldSetupDebugServer;
- (void)_setFinishedRunningWithError:(id)arg1;

@end

@interface IDELaunchWithoutDebuggeriPhoneLauncher : IDELaunchiPhoneLauncher <DTMISProcessControlServiceAuthorizedAPI>
{
    BOOL _shouldSkipAppTermination;
    DTXChannel *_launchServiceChannel;
}

@property(retain) DTXChannel *launchServiceChannel; // @synthesize launchServiceChannel=_launchServiceChannel;
- (void).cxx_destruct;
- (void)_terminatePid:(int)arg1;
- (void)pidDiedCallback:(id)arg1;
- (void)launchWithoutDebugger:(id)arg1 dispatchTarget:(id)arg2 finishedHandler:(CDUnknownBlockType)arg3;
- (void)_cancelProcessControlChannel;
- (id)_instrumentsProcessControlChannel;
- (void)terminate;
- (BOOL)postCheckinActionShouldFinishOperationWorker;
- (BOOL)shouldSetupDebugServer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELaunchWithoutDebuggeriPhoneService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDELaunchiPhoneService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDELaunchiPhoneSimulatorLauncher : IDERunOperationWorker <IDERunOperationWorkerChaining, DTMISProcessControlServiceAuthorizedAPI>
{
    DVTiPhoneSimulator *_device;
    BOOL _debugSessionStarted;
    BOOL _responsibleForTermination;
    BOOL _setUpSimulatorSessionForAttaching;
    BOOL _terminateCalled;
    BOOL _notifiedTracker;
    DVTDispatchLock *_lifeCycleLock;
    DVTObservingToken *_debugSessionStateObservingToken;
    BOOL _launchingToDebug;
    DTXChannel *_launchServiceChannel;
}

@property(retain) DTXChannel *launchServiceChannel; // @synthesize launchServiceChannel=_launchServiceChannel;
@property(retain) DVTiPhoneSimulator *device; // @synthesize device=_device;
@property(getter=isLaunchingToDebug) BOOL launchingToDebug; // @synthesize launchingToDebug=_launchingToDebug;
- (void).cxx_destruct;
- (void)_showTodayView;
- (BOOL)_willUseExistingProcess:(id)arg1;
- (void)pidDiedCallback:(id)arg1;
- (void)_cancelProcessControlChannel;
- (id)_instrumentsProcessControlChannel;
- (void)launchCompleteWithAppPID:(int)arg1 simulatorPID:(int)arg2;
- (void)executionDidEnd;
- (void)terminate;
- (void)start;
- (void)_setUpSimulatorSessionForAttaching;
- (void)_finishCurrentWorkAndNotifyTracker:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithExtensionIdentifier:(id)arg1 launchSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IDELaunchiPhoneSimulatorService : IDERunDeviceService
{
}

+ (id)capability;
+ (void)initialize;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDERuniPhonePlaceholderService : IDERunDeviceService
{
}

+ (id)capability;
- (id)operationWorkerWithLaunchSession:(id)arg1 error:(id *)arg2;

@end

@interface IDESimulateLocationiPhoneService : IDESimulateLocationService
{
}

- (BOOL)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2 error:(id *)arg3;
- (BOOL)stopLocationSimulationWithError:(id *)arg1;
- (id)_iPhone;

@end

@interface IDESimulateLocationiPhoneSimulatorService : IDESimulateLocationService
{
}

- (BOOL)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2 error:(id *)arg3;
- (BOOL)stopLocationSimulationWithError:(id *)arg1;
- (id)_simulator;

@end

@interface IDEiPhonePackager : IDEAppStorePackager
{
}

- (id)packageFilenameForArchive:(id)arg1;
- (id)_packagingOperationForArchive:(id)arg1 withCodesignIdentity:(id)arg2 installerIdentity:(id)arg3 includeSymbolCache:(BOOL)arg4 temporaryDir:(id)arg5 operationGroup:(id)arg6 andError:(id *)arg7;
- (id)sdk;
- (_Bool)supportsSymbolUploads;
- (_Bool)supportsInstallerSigning;
- (_Bool)supportsCodeSigning;

@end

@interface IDEiPhoneRunOperationWorkerGroup : IDERunOperationWorkerGroup
{
    DVTiOSDevice *device;
}

@property(retain) DVTiOSDevice *device; // @synthesize device;
- (void).cxx_destruct;
- (void)allSubworkersDidFinishWithError:(id)arg1;

@end

@interface XCiPhoneOSPlatformPlugin : NSObject
{
}

+ (void)validate:(id)arg1 withMacroExpansionScope:(id)arg2;

@end

@interface Xcode3PortalEntitlementsCoordinatorIOSPlatform : NSObject <IDEPortalEntitlementsCoordinatorPlatform>
{
    id <IDECapabilitiesContextProviding> _capabilitiesContext;
}

@property(retain, nonatomic) id <IDECapabilitiesContextProviding> capabilitiesContext; // @synthesize capabilitiesContext=_capabilitiesContext;
- (void).cxx_destruct;
- (id)willRequestProfileWithFeatures:(id)arg1 usingWildcardAppID:(BOOL)arg2;
- (id)didReadProfileFeatures:(id)arg1;
- (id)initWithCapabilitiesContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _DVTSimulatorRunLoopWaiter : NSObject
{
    _Bool _done;
    DVTiPhoneSimulator *_device;
    NSString *_key;
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopSource *_runLoopSource;
}

@property _Bool done; // @synthesize done=_done;
@property(nonatomic) struct __CFRunLoopSource *runLoopSource; // @synthesize runLoopSource=_runLoopSource;
@property(nonatomic) struct __CFRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(copy) NSString *key; // @synthesize key=_key;
@property(retain) DVTiPhoneSimulator *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)stopWaiting;
- (void)wait;
- (void)dealloc;

@end

@interface _IDEInstalliPhoneSimulatorWorker : IDERunOperationWorker
{
    DVTiPhoneSimulator *_device;
}

@property(retain) DVTiPhoneSimulator *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)terminate;
- (void)start;
- (void)_setFinishedRunningWithError:(id)arg1;

@end

