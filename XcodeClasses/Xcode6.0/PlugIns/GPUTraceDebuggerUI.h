//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct GPUValueRange {
    float min;
    float max;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/PlugIns/GPUTraceDebuggerUI.ideplugin/Contents/MacOS/GPUTraceDebuggerUI
// UUID: 100B3826-983C-39B0-BF22-67A814562E50
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 16097.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTSimpleSerialization
- (void)dvt_writeToSerializer:(DVTSimpleSerializer *)arg1;
- (id)dvt_initFromDeserializer:(DVTSimpleDeserializer *)arg1;
@end

@protocol GPUReportOutlineViewDelegate <NSOutlineViewDelegate>
- (void)tableColumnDidResizeWidth:(NSTableColumn *)arg1;
@end

@protocol IDECommandHandler <NSObject, NSUserInterfaceValidations>
@end

@protocol IDEDataValue <NSObject>
@property(readonly) BOOL childValuesCountValid;
@property(readonly) NSArray *childValues;
@property(readonly) BOOL hasChildValues;
@property(readonly) BOOL inScope;
@property(readonly) BOOL itemDescriptionHasChanged;
@property(readonly, copy) NSString *itemDescription;
@property(readonly) BOOL typeHasChanged;
@property(readonly, copy) NSString *type;
@property(readonly, copy) NSString *primitiveLogicalValue;
@property(readonly) BOOL logicalValueHasChanged;
@property(readonly, copy) NSString *logicalValue;
@property(readonly) BOOL valueHasChanged;
@property(readonly) BOOL isValueEditable;
@property(copy) NSString *value;
@property(readonly, copy) NSString *name;
@end

@protocol IDEDebugGaugeReportContentDelegate <NSObject>
- (BOOL)hasDefaultTopSection;

@optional
- (void)addSectionsToView:(DVTStackView_AppKitAutolayout *)arg1;
@end

@protocol IDEDebugGaugeReportTopSectionContentDelegate <NSObject>
- (NSString *)topSectionTitle;

@optional
- (NSArray *)topSectionComponentEntries;
- (NSArray *)topSectionSubDescriptionViews;
- (NSView *)topSectionAccessoryView;
- (NSView *)topSectionDescription;
- (NSArray *)topSectionDescriptionEntries;
- (NSView *)topSectionShortDescription;
- (NSView *)topSectionCenterTitleAccessoryView;
- (NSView *)topSectionTitleAccessoryView;
- (NSString *)topSectionShortDescriptionTitle;
- (NSImage *)topSectionImage;
@end

@protocol IDEDebugNavigableContentDelegate <NSObject>
@property(readonly) NSString *associatedProcessUUID;
- (NSArray *)representedObjectsToReveal;
- (NSString *)pasteboardStringForRepresentedObject:(id)arg1;
- (BOOL)shouldHandleUserDirectMoveUpOrDown:(BOOL)arg1 forRepresentedObject:(id)arg2 newRow:(long long *)arg3;
- (NSArray *)expandableItemsForProcessItem:(IDENavigableItem *)arg1;
- (NSString *)tokenForExpandedRepresentedObject:(id)arg1;
- (IDELaunchSession *)launchSessionForSelectedRepresentedObject:(id)arg1;
- (void)openSelectedRepresentedObject:(id)arg1 withEventType:(unsigned long long)arg2;
- (BOOL)shouldSelectItemForRepresentedObject:(id)arg1 withPrevious:(id)arg2 next:(id)arg3;
- (NSCell *)dataCellForRepresentedObject:(id)arg1;
- (void)willDisplayCell:(id)arg1 forRepresentedObject:(id)arg2 item:(id)arg3;
- (void)updateForNewFilterString:(NSString *)arg1;
- (NSView *)filterView;
- (void)debugNavigatorViewWillUninstall;
- (void)debugNavigatorViewDidInstall;
- (id)initWithProcess:(id <IDEDebugProcess>)arg1 debugNavigator:(IDEDebugNavigator *)arg2;

@optional
- (IDENavigableItem *)outputSelectionNavItemForSelectedNavItem:(IDENavigableItem *)arg1;
- (void)commitStateToDictionary:(NSMutableDictionary *)arg1;
- (void)revertStateWithDictionary:(NSDictionary *)arg1;
- (void)contextualMenuNeedsUpdate:(NSMenu *)arg1;
- (BOOL)validateUserInterfaceAction:(SEL)arg1 forRepresentedObject:(id)arg2;
- (BOOL)validateUserInterfaceAction:(SEL)arg1;
- (void)didCollapseForItem:(id)arg1;
- (void)didExpandForItem:(id)arg1;
- (void)willExpandForItem:(id)arg1;
- (void)handleUserDirectDeleteRepresentedObject:(id)arg1;
- (BOOL)shouldExpandItemAsResultOfOptionClick:(id)arg1 clickedItem:(id)arg2;
- (BOOL)isGroupHeaderForRepresentedObject:(id)arg1 item:(id)arg2;
- (double)heightOfRowForRepresentedObject:(id)arg1;
- (NSString *)persistentNameForRepresentedObject:(id)arg1;
- (NSArray *)trayCellsForProcessHeader;
- (BOOL)wantsTrayAreaForNavigationProcessHeader;
- (void)configureMenuForProcessHeaderActionPopUpCell:(IDEProcessActionPopUpCell *)arg1;
- (id)controllerForQueryingDescendantItem;
@end

@protocol IDEDebugNavigableModel <NSObject>
@property(readonly) IDELaunchSession *launchSession;
@property(readonly, copy) NSString *associatedProcessUUID;
@end

@protocol IDEDebuggingAdditionUIController <NSObject, DVTInvalidation>
- (DVTExtension *)extension;
- (id)initWithWorkspaceTabController:(IDEWorkspaceTabController *)arg1 withDebuggingAddition:(id <IDEDebuggingAddition>)arg2 forExtension:(DVTExtension *)arg3;

@optional
- (void)openSelectedNavigableItem:(id)arg1 withEventType:(unsigned long long)arg2;
- (IDELaunchSession *)launchSessionForSelectedRepresentedObject:(id)arg1;
- (NSCell *)trayCellForNavigationProcessHeader;
- (BOOL)wantsTrayAreaForNavigationProcessHeader;
- (NSMenu *)debugSubmenu;
- (BOOL)shouldReplaceDebugSubmenu;
@end

@protocol IDEVariablesViewContentProvider <NSObject, DVTInvalidation>
@property(readonly) BOOL supportsShowingRawValues;
@property(readonly) CDUnknownBlockType nodeSortComparator;
@property(readonly) id <IDEVariablesViewContextMenuDelegate> contextMenuDelegate;
- (NSString *)contextNameForNode:(IDEVariablesViewNode *)arg1;
- (NSImage *)imageForNode:(IDEVariablesViewNode *)arg1;
- (BOOL)deleteNode:(IDEVariablesViewNode *)arg1;
- (void)provideScopeChoices:(id <IDEScopeableView>)arg1;
- (void)providerWasInstalledForVariablesView:(IDEVariablesView *)arg1;

@optional
@property(readonly) BOOL loadingNewVariablesInBackground;
- (int)formatterSizeStyle;
- (BOOL)showCellExpansion;
- (int)compoundNodeFormatterModeForItem:(IDEVariablesViewNode *)arg1 atRow:(long long)arg2;
- (NSDictionary *)statusCellsDictionary;
- (NSImage *)imageToUseInDefaultQuickLookForNode:(IDEVariablesViewNode *)arg1;
- (void)quickLookProviderForDataValue:(id <IDEDataValue>)arg1 quickLookProviderHandler:(void (^)(id <IDEVariablesViewQuickLookProvider>, NSError *))arg2;
- (void)newRootFromChildrenWasInstalled;
- (void)nodeWasDoubleClicked:(IDEVariablesViewNode *)arg1 row:(long long)arg2 column:(long long)arg3;
- (NSString *)scopePopUpTitleForScopeItem:(long long)arg1;
@end

@protocol IDEVariablesViewContextMenuDelegate <NSObject>
- (void)provideHelpMenuItem:(NSMenu *)arg1;
- (void)providePrimaryMenuItems:(NSMenu *)arg1;
@end

@protocol IDEVariablesViewQuickLookProvider <NSObject>
@property(readonly) NSView *quickLookView;
@property(readonly) int loadedState;
- (void)cancelLoading;
- (id)initWithDataValue:(id <IDEDataValue>)arg1 options:(NSDictionary *)arg2;

@optional
@property(readonly) NSString *extensionForTemporaryFile;
@property(readonly) NSURL *existingURLToOpen;
- (void)writeAtomicallyToTemporaryFile:(NSURL *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSTextDelegate <NSObject>

@optional
- (void)textDidChange:(NSNotification *)arg1;
- (void)textDidEndEditing:(NSNotification *)arg1;
- (void)textDidBeginEditing:(NSNotification *)arg1;
- (BOOL)textShouldEndEditing:(NSText *)arg1;
- (BOOL)textShouldBeginEditing:(NSText *)arg1;
@end

@protocol NSTextViewDelegate <NSTextDelegate>

@optional
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2;
- (NSUndoManager *)undoManagerForTextView:(NSTextView *)arg1;
- (NSSharingServicePicker *)textView:(NSTextView *)arg1 willShowSharingServicePicker:(NSSharingServicePicker *)arg2 forItems:(NSArray *)arg3;
- (NSURL *)textView:(NSTextView *)arg1 URLForContentsOfTextAttachment:(NSTextAttachment *)arg2 atIndex:(unsigned long long)arg3;
- (NSArray *)textView:(NSTextView *)arg1 didCheckTextInRange:(struct _NSRange)arg2 types:(unsigned long long)arg3 options:(NSDictionary *)arg4 results:(NSArray *)arg5 orthography:(NSOrthography *)arg6 wordCount:(long long)arg7;
- (NSDictionary *)textView:(NSTextView *)arg1 willCheckTextInRange:(struct _NSRange)arg2 options:(NSDictionary *)arg3 types:(unsigned long long *)arg4;
- (NSMenu *)textView:(NSTextView *)arg1 menu:(NSMenu *)arg2 forEvent:(NSEvent *)arg3 atIndex:(unsigned long long)arg4;
- (long long)textView:(NSTextView *)arg1 shouldSetSpellingState:(long long)arg2 range:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 doCommandBySelector:(SEL)arg2;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 completions:(NSArray *)arg2 forPartialWordRange:(struct _NSRange)arg3 indexOfSelectedItem:(long long *)arg4;
- (NSString *)textView:(NSTextView *)arg1 willDisplayToolTip:(NSString *)arg2 forCharacterAtIndex:(unsigned long long)arg3;
- (void)textViewDidChangeTypingAttributes:(NSNotification *)arg1;
- (void)textViewDidChangeSelection:(NSNotification *)arg1;
- (NSDictionary *)textView:(NSTextView *)arg1 shouldChangeTypingAttributes:(NSDictionary *)arg2 toAttributes:(NSDictionary *)arg3;
- (BOOL)textView:(NSTextView *)arg1 shouldChangeTextInRanges:(NSArray *)arg2 replacementStrings:(NSArray *)arg3;
- (NSArray *)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRanges:(NSArray *)arg2 toCharacterRanges:(NSArray *)arg3;
- (struct _NSRange)textView:(NSTextView *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (BOOL)textView:(NSTextView *)arg1 writeCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3 toPasteboard:(NSPasteboard *)arg4 type:(NSString *)arg5;
- (NSArray *)textView:(NSTextView *)arg1 writablePasteboardTypesForCell:(id <NSTextAttachmentCell>)arg2 atIndex:(unsigned long long)arg3;
- (void)textView:(NSTextView *)arg1 draggedCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 event:(NSEvent *)arg4 atIndex:(unsigned long long)arg5;
- (void)textView:(NSTextView *)arg1 doubleClickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (void)textView:(NSTextView *)arg1 clickedOnCell:(id <NSTextAttachmentCell>)arg2 inRect:(struct CGRect)arg3 atIndex:(unsigned long long)arg4;
- (BOOL)textView:(NSTextView *)arg1 clickedOnLink:(id)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

__attribute__((visibility("hidden")))
@interface GPUActionItem : NSObject
{
    NSString *_text;
    NSImage *_image;
    CDUnknownBlockType _action;
    CDUnknownBlockType _gotoAction;
    id _representedObject;
}

+ (id)actionItemWithText:(id)arg1 image:(id)arg2 action:(CDUnknownBlockType)arg3 representedObject:(id)arg4;
+ (id)actionItemWithText:(id)arg1 image:(id)arg2 action:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) id representedObject; // @synthesize representedObject=_representedObject;
@property(copy, nonatomic) CDUnknownBlockType gotoAction; // @synthesize gotoAction=_gotoAction;
@property(copy, nonatomic) CDUnknownBlockType action; // @synthesize action=_action;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUAnalyzerFindingIssueProvider : IDEIssueProvider
{
    NSObject<OS_dispatch_queue> *_queue;
    GPUSharedWorkspaceUIState *_workspaceUIState;
    GPUDebuggerController *_controller;
    id _gpudebuggingObserverToken;
}

+ (int)providerType;
- (void).cxx_destruct;
- (id)displayNameForIssueTypeIdentifier:(id)arg1;
- (void)_clearIssues;
- (id)_createIssueFromAnalyzerFinding:(id)arg1;
- (void)_recordNumIssues:(unsigned int)arg1;
- (unsigned int)_createAnalyzerIssues;
- (id)initWithIssueManager:(id)arg1 extension:(id)arg2;
- (void)setupController;
- (void)primitiveInvalidate;

@end

@interface GPUBadgedText : NSObject
{
    int _badge;
    NSString *_text;
}

@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) int badge; // @synthesize badge=_badge;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSColor *backgroundColor;
@property(readonly, nonatomic) NSImage *image;
- (id)initWithText:(id)arg1 badgeType:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUBadgedTextView : NSView
{
    NSColor *_backGroundColor;
}

@property(retain, nonatomic) NSColor *backGroundColor; // @synthesize backGroundColor=_backGroundColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUBadgedTextViewController : NSViewController
{
    GPUBadgedText *_badgedText;
    NSTextField *_textfield;
    NSImageView *_badgeView;
}

@property(nonatomic) __weak NSImageView *badgeView; // @synthesize badgeView=_badgeView;
@property(nonatomic) __weak NSTextField *textfield; // @synthesize textfield=_textfield;
@property(nonatomic) __weak GPUBadgedText *badgedText; // @synthesize badgedText=_badgedText;
- (void).cxx_destruct;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 badgedText:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface GPUBorderedTableRowView : NSTableRowView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUBulletedViewBulletPainter : NSObject
{
    NSColor *_color;
}

+ (id)bulletImageWithPainter:(id)arg1;
+ (id)bulletImage;
- (void).cxx_destruct;
- (void)drawBullet:(id)arg1;
- (id)initWithColor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUCaptureActivityReporter : IDEActivityReporter
{
    NSMapTable *_reportForTraceInferiorSessionTable;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)_handleTraceInferiorSessionStateChange:(id)arg1;
- (void)_cancelActivityForTraceInferiorSession:(id)arg1;
- (id)initWithWorkspace:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUDebugBarContentProvider : IDEDebugBarContentProvider
{
    GPUDebuggingAddition *_currentDebuggingAddition;
    DVTObservingToken *_debuggingAdditionsObservation;
}

@property(retain) GPUDebuggingAddition *currentDebuggingAddition; // @synthesize currentDebuggingAddition=_currentDebuggingAddition;
- (void).cxx_destruct;
- (void)willBeDetachedFromDebugBar:(id)arg1;
- (void)wasAttachedToDebugBar:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUCaptureButtonDebugBarContentProvider : GPUDebugBarContentProvider
{
    DVTGradientImageButton *_captureFrameButton;
    NSMenuItem *_captureFrameMenuItem;
    DVTObservingToken *_originalAppDiedObservation;
    DVTObservingToken *_debuggingAdditionObservation;
    DVTObservingToken *_debuggingControllerStateObserver;
    DVTObservingToken *_gpuCaptureUnavailReasonObservation;
    id _windowDidBecomeMainObserver;
    id _activeTabControllerChangedObserver;
    id _debugMenuChangedObserver;
}

+ (BOOL)_getRightClickableButton;
+ (id)iconImage_stopInferior;
+ (id)iconImage_resumeInferior;
+ (id)iconImage_captureFrame;
+ (id)assetBundle;
- (void).cxx_destruct;
- (void)stopDebugSession:(id)arg1;
- (void)_startHiggins:(id)arg1;
- (void)_displayHigginsReportInMainEditor:(id)arg1;
- (void)captureOpenGLFrame:(id)arg1;
- (void)_debugMenuChanged:(id)arg1;
- (void)_activeTabControllerChanged:(id)arg1;
- (void)_rebindMenuItems;
- (void)_windowDidBecomeMain:(id)arg1;
- (void)willBeDetachedFromDebugBar:(id)arg1;
- (id)_findMenuItemWithRepresentedObject:(id)arg1 inMenu:(id)arg2;
- (void)_setUpCaptureOpenGLESFrameMenuItem:(id)arg1;
- (void)wasAttachedToDebugBar:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)updateMenus;
- (void)updateCaptureButtonState;
- (void)setCaptureButtonToCapture;
- (void)setCaptureButtonToStop;
- (void)setCaptureButtonToResume;
- (void)currentDebugSessionStateDidChange;
- (void)currentDebugSessionDidChange;
- (void)workspaceDidFinishLoading;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUDebugArea : IDESplitViewDebugArea <DVTReplacementViewDelegate>
{
    NSSegmentedControl *_comparisonSelector;
    GPUVariablesViewContentProvider *_leftContentProvider;
    GPUVariablesViewContentProvider *_rightContentProvider;
    BOOL _haveRequestedUIController;
    id <DVTCancellable> _uiControllerObserver;
}

- (void).cxx_destruct;
- (void)_comparisonSelectorClicked:(id)arg1;
- (void)_createComparisonSelector;
- (id)toolTipForShowRightViewButton;
- (id)toolTipForShowLeftViewButton;
- (id)stateSavingIdentifier;
- (void)primitiveInvalidate;
- (void)_handleDebuggingAdditionUIControllerCreated:(id)arg1;
- (void)viewDidInstall;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUDebugMenuActionHandler : NSObject <IDECommandHandler, NSMenuDelegate>
{
    GPUDebuggingAddition *_debuggingAddition;
    DVTObservingToken *_debuggingAdditionsObservation;
}

+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (id)currentWorkspaceTabController;
- (void).cxx_destruct;
- (void)displayGPUPerformance:(id)arg1;
- (void)_openLocation:(id)arg1 withEventType:(unsigned long long)arg2;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUDebuggerLog : IDEActivityLogSection <DVTSimpleSerialization>
{
    NSString *text;
}

+ (id)defaultLogSectionDomainType;
+ (id)assetBundle;
@property(retain) NSString *text; // @synthesize text;
- (void).cxx_destruct;
- (void)dvt_writeToSerializer:(id)arg1;
- (id)dvt_initFromDeserializer:(id)arg1;
- (id)navigableItem_documentType;
- (void)addLogItem:(id)arg1;
- (void)_generateProgramLogContent:(id)arg1;
- (void)_generateLibraryLogContent:(id)arg1;
- (id)_libraryLogText;
- (id)_timestampFromInfoLog:(id)arg1;
- (id)initLogWithTitle:(id)arg1 serializationPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUDebuggerLogDocument : IDEEditorDocument
{
    GPUDebuggerLog *_debuggerLog;
}

@property(readonly) GPUDebuggerLog *debuggerLog; // @synthesize debuggerLog=_debuggerLog;
- (void).cxx_destruct;
- (id)displayName;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

__attribute__((visibility("hidden")))
@interface GPUDebuggerLogEditor : IDEEditor <NSTextViewDelegate>
{
    DVTSourceTextView *_textView;
    DVTObservingToken *_logItemsObserver;
}

@property(readonly) DVTSourceTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)primitiveInvalidate;
- (BOOL)canBecomeMainViewController;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUDebuggerLogProvider : IDELogProvider
{
    IDEWorkspace *_workspace;
    GPUSharedTabUIState *_sharedUIStateObj;
    DVTObservingToken *_launchSessionStateObserverToken;
    DVTMapTable *_observerKeyForLaunchSessionTable;
    IDELogStore *_logStore;
    NSDictionary *_programInfoDict;
    GPUDebuggerLog *_debuggerLog;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (id)_logStorePrefix;
- (void).cxx_destruct;
- (void)_handleProgramInfoLogCreated:(id)arg1 withLaunchSession:(id)arg2;
- (void)_handleLaunchSessionsChanged:(id)arg1;
- (void)_handleSyntheticLaunchSessionChange:(id)arg1;
- (void)_setupDebugAdditionObserversForLaunchSession:(id)arg1;
- (void)_removeDebugAdditionObserversForLaunchSession:(id)arg1;
- (id)logRecords;
- (void)primitiveInvalidate;
- (id)initWithDomainItem:(id)arg1;

@end

@interface GPUDebuggingAdditionUIController : NSObject <IDEDebuggingAdditionUIController>
{
    DVTExtension *_extension;
    id _documentOpenRequestToken;
    IDEBreakpointManager *_breakpointsManager;
    IDEEditorArea *_editorArea;
    NSCell *_trayFPSCell;
    IDEWorkspaceTabController *_workspaceTabController;
    GPUDebuggingAddition *_debuggingAddition;
    GPUTraceSession *_currentTraceSession;
}

+ (void)initialize;
@property __weak GPUTraceSession *currentTraceSession; // @synthesize currentTraceSession=_currentTraceSession;
@property(retain) GPUDebuggingAddition *debuggingAddition; // @synthesize debuggingAddition=_debuggingAddition;
@property(readonly) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
- (void).cxx_destruct;
- (void)_onEditorDocumentChanged:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)stepToNextMarker:(id)arg1;
- (void)stepToPreviousMarker:(id)arg1;
- (void)_stepToMarker:(BOOL)arg1;
- (void)stepToNextCall:(id)arg1;
- (void)stepToPreviousCall:(id)arg1;
- (void)stepToNextDisplayableCall:(id)arg1;
- (void)stepToPreviousDisplayableCall:(id)arg1;
- (unsigned long long)_currentMarkerIndex;
- (unsigned long long)_currentCallIndex;
- (unsigned long long)_currentDisplayableItemIndex;
- (id)_currentMainTraceItem;
- (void)updateShaders:(id)arg1;
- (void)runInvestigatorWithExistingCapture:(id)arg1;
- (void)ReleaseGPUFrame:(id)arg1;
- (void)openLocation:(id)arg1 withEventType:(unsigned long long)arg2;
- (void)openTraceItem:(id)arg1 withEventType:(unsigned long long)arg2;
- (void)openSelectedNavigableItem:(id)arg1 withEventType:(unsigned long long)arg2;
- (void)_setTargetFPS:(unsigned int)arg1;
- (id)trayCellForNavigationProcessHeader;
- (id)_trayFPSCell;
- (BOOL)wantsTrayAreaForNavigationProcessHeader;
- (id)debugSubmenu;
- (BOOL)shouldReplaceDebugSubmenu;
- (void)primitiveInvalidate;
- (id)extension;
- (id)launchSessionForSelectedRepresentedObject:(id)arg1;
- (id)initWithWorkspaceTabController:(id)arg1 withDebuggingAddition:(id)arg2 forExtension:(id)arg3;
- (void)_activateGPUDebuggerUI;
- (void)_reopenStandaloneTraceDocument;
- (void)_closeAllDocuments;
- (void)_openEditorDocumentWithURL:(id)arg1;
@property(readonly) IDEWorkspaceDocument *workspaceDocument;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPUFrameScrubberDebugBarContentProvider : GPUDebugBarContentProvider
{
    GPUTraceFramePlayheadSlider *_frameScrubber;
    GPUTraceFrameStepperButton *_stepBackwardButton;
    GPUTraceFrameStepperButton *_stepForwardButton;
    DVTGradientImageButton *_updateShadersButton;
    DVTObservingToken *_debuggingAdditionObservation;
    DVTObservingToken *_uiModeObservation;
    DVTObservingToken *_debugStateObservation;
    DVTObservingToken *_shaderUpdateObservation;
    GPUSharedTabUIState *_sharedUIStateObj;
    BOOL _newUpdateCycle;
    BOOL _stepperDidUpdate;
    BOOL _scrubberDidPostUpdate;
    BOOL _haveRequestedUIController;
    id <DVTCancellable> _uiControllerObserver;
}

+ (id)iconImage_updateShaders;
+ (id)iconImage_stepForward;
+ (id)iconImage_stepBack;
+ (id)assetBundle;
- (void).cxx_destruct;
- (void)updateShaderControls;
- (void)updateControls;
- (void)disableControls;
- (void)_handleDebuggingAdditionUIControllerCreated:(id)arg1;
- (void)willBeDetachedFromDebugBar:(id)arg1;
- (void)wasAttachedToDebugBar:(id)arg1;
- (void)takeScrubberInfoFromNotification:(id)arg1;
- (void)updateShaders:(id)arg1;
- (void)stepBackwardDidMouseUp:(id)arg1;
- (void)stepBackward:(id)arg1;
- (void)stepForwardDidMouseUp:(id)arg1;
- (void)stepForward:(id)arg1;
- (void)stepDidMouseDown:(id)arg1;
- (void)scrubberDidMouseUp:(id)arg1;
- (void)scrubberDidMove:(id)arg1;
- (void)_notifyMove:(int)arg1;
- (void)_sendScrubberNotificationType:(id)arg1 withInfo:(id)arg2;
- (void)scrubberDidMouseDown:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUGradientPainter : NSObject
{
}

+ (void)gradientSeperatorLineWithRect:(struct CGRect)arg1;
+ (void)gradientFillFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUGraphTableCellView : NSTableCellView
{
    BOOL _showBaseline;
    GPUInvestigatorReportResource *_reportResource;
}

@property(nonatomic) BOOL showBaseline; // @synthesize showBaseline=_showBaseline;
@property(nonatomic) __weak GPUInvestigatorReportResource *reportResource; // @synthesize reportResource=_reportResource;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUGraphTableHeaderCell : NSTableHeaderCell
{
}

- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUGraphTheme : NSObject
{
}

+ (void)RenderGraphSegmentsWithFrame:(struct CGRect)arg1 scale:(double)arg2 renderNumerals:(BOOL)arg3 solidSeperatorLines:(BOOL)arg4;
+ (id)headerCellTextAttributes;
+ (id)currentFrameColor;
+ (id)currentGradient;
+ (id)baselineFrameColor;
+ (id)baselineGradient;

@end

__attribute__((visibility("hidden")))
@interface GPUInvestigatorReportGeniusResultsFinder : IDEGeniusResultsFinder
{
    DVTObservingToken *_reportSelectionObserver;
    GPUTraceSession *_traceSession;
}

+ (Class)editorDocumentClass;
- (void).cxx_destruct;
- (void)_updateGeniusResults;
- (void)primitiveInvalidate;

@end

@interface GPUInvestigatorReportResource : NSObject
{
    unsigned int _type;
    unsigned long long _drawFunctionIndex;
    unsigned long long _functionIndex;
    unsigned long long _objectID;
    double _totalFramePercent;
    double _currentTotalFrameTime;
    double _baselineTotalFrameTime;
    NSString *_label;
    DYInvestigatorFinding *_investigatorFinding;
    GPUTraceOutlineItem *_outlineItem;
}

+ (double)maximumFrameTime;
+ (void)setMaximumFrameTime:(double)arg1;
@property(nonatomic) __weak GPUTraceOutlineItem *outlineItem; // @synthesize outlineItem=_outlineItem;
@property(nonatomic) __weak DYInvestigatorFinding *investigatorFinding; // @synthesize investigatorFinding=_investigatorFinding;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) unsigned int type; // @synthesize type=_type;
@property(nonatomic) double baselineTotalFrameTime; // @synthesize baselineTotalFrameTime=_baselineTotalFrameTime;
@property(nonatomic) double currentTotalFrameTime; // @synthesize currentTotalFrameTime=_currentTotalFrameTime;
@property(nonatomic) double totalFramePercent; // @synthesize totalFramePercent=_totalFramePercent;
@property(nonatomic) unsigned long long objectID; // @synthesize objectID=_objectID;
@property(nonatomic) unsigned long long functionIndex; // @synthesize functionIndex=_functionIndex;
@property(nonatomic) unsigned long long drawFunctionIndex; // @synthesize drawFunctionIndex=_drawFunctionIndex;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)displayableString;

@end

__attribute__((visibility("hidden")))
@interface GPUIssueQuickLookProvider : NSViewController <IDEVariablesViewQuickLookProvider>
{
    int _loadedState;
    GPUStateValue *_dataValue;
    NSTextView *_textView;
    NSLayoutConstraint *_heightConstraint;
}

@property(retain) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain) NSTextView *textView; // @synthesize textView=_textView;
@property int loadedState; // @synthesize loadedState=_loadedState;
- (void).cxx_destruct;
- (void)cancelLoading;
@property(readonly) NSView *quickLookView;
- (void)_updateTextViewFromData;
- (void)loadView;
- (id)initWithDataValue:(id)arg1 options:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSURL *existingURLToOpen;
@property(readonly) NSString *extensionForTemporaryFile;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUMainEditor : IDEEditor
{
    NSObject<OS_dispatch_queue> *_queue;
    GPUSharedTabUIState *_sharedUIStateObj;
    BOOL _navIdle;
    BOOL _ignoreDebugBarModelItemSelected;
    unsigned int _nextSliderIndex;
    BOOL _drawIdle;
    id <IDEOpenRequest> _sliderOpenRequestToken;
    int _currentRequestStepperDirection;
    BOOL _alreadyDrawn;
    GPUTraceOutlineItem *_nextNavItem;
    DVTObservingToken *_debugBarSelectedModelItemToken;
    DVTObservingToken *_gpuTraceCurrentLocationObserverToken;
    GPUTraceDisplayableItem *_currentDisplayableItem;
}

@property(retain, nonatomic) GPUTraceDisplayableItem *currentDisplayableItem; // @synthesize currentDisplayableItem=_currentDisplayableItem;
- (void).cxx_destruct;
- (void)onDeviceCacheInvalidated:(id)arg1;
- (void)updateMasterLocation:(id)arg1;
- (void)_openSubEditorLocation:(id)arg1;
- (void)handleOpenScrubberTriggeredNewLocation:(id)arg1;
- (void)updateDisplayablePosition:(id)arg1;
- (void)scrubToDisplayableIndex:(unsigned int)arg1;
- (void)_updateScrubberForDisplayableItem:(id)arg1 isAssociatedDisplayable:(BOOL)arg2;
- (void)handleNewDocumentLocations:(id)arg1;
- (void)updateCurrentTraceItem:(id)arg1;
- (BOOL)_updateCurrentMainTraceItem:(id)arg1;
- (void)_handleUpdatedDrawResponse:(id)arg1 navItem:(id)arg2 updateCompletionBlock:(CDUnknownBlockType)arg3;
- (void)handleUpdatedMainTraceItem:(id)arg1;
- (id)updateViewsWithDisplayableItem:(id)arg1;
- (id)_updateToStateItem:(id)arg1;
- (id)updateToDisplayableItem:(id)arg1;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_setupDebugBar;
- (void)handleDebugBarNavigationWithDocumentLocation:(id)arg1;
- (void)_setupScrubber;
- (void)primitiveInvalidate;
- (void)loadView;

@end

__attribute__((visibility("hidden")))
@interface GPUMatrixQuickLookProvider : NSViewController <IDEVariablesViewQuickLookProvider>
{
    int _loadedState;
    GPUUniformStateValue *_dataValue;
    int _columns;
    int _rows;
    NSArray *_data;
    NSMutableArray *_rowMajorMatrixData;
    NSScrollView *_matrixScrollView;
    NSCollectionView *_matrixCollectionView;
}

@property(nonatomic) __weak NSCollectionView *matrixCollectionView; // @synthesize matrixCollectionView=_matrixCollectionView;
@property(nonatomic) __weak NSScrollView *matrixScrollView; // @synthesize matrixScrollView=_matrixScrollView;
@property(retain, nonatomic) NSMutableArray *rowMajorMatrixData; // @synthesize rowMajorMatrixData=_rowMajorMatrixData;
@property int loadedState; // @synthesize loadedState=_loadedState;
- (void).cxx_destruct;
- (void)cancelLoading;
@property(readonly) NSView *quickLookView;
- (void)_setupCollectionView;
- (void)_setupData;
- (void)_parseData;
- (void)loadView;
- (id)initWithDataValue:(id)arg1 options:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) NSURL *existingURLToOpen;
@property(readonly) NSString *extensionForTemporaryFile;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUNavigatorStatusCell : IDENavigatorStatusCell
{
}

- (void)drawTextStatusWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)_drawStatusStringInPathRect:(struct CGRect)arg1 view:(id)arg2;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUNonScrollingScrollView : NSScrollView
{
}

- (void)scrollWheel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUNumericBubbleView : NSView
{
    double _value;
    NSColor *_defaultColor;
    DVTMeterThreshold *_midRangeThreshold;
    DVTMeterThreshold *_highRangeThreshold;
}

+ (id)textAttributes;
@property(retain, nonatomic) DVTMeterThreshold *highRangeThreshold; // @synthesize highRangeThreshold=_highRangeThreshold;
@property(retain, nonatomic) DVTMeterThreshold *midRangeThreshold; // @synthesize midRangeThreshold=_midRangeThreshold;
@property(retain, nonatomic) NSColor *defaultColor; // @synthesize defaultColor=_defaultColor;
@property(nonatomic) double value; // @synthesize value=_value;
- (void).cxx_destruct;
- (void)drawGraphInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUOpenGLErrorBreakpointEditorView : NSViewController
{
    GPUOpenGLErrorBreakpoint *_breakpoint;
}

@property(retain) GPUOpenGLErrorBreakpoint *breakpoint; // @synthesize breakpoint=_breakpoint;
- (void).cxx_destruct;
- (void)loadView;
- (id)initWithBreakpoint:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUReportBarChartView : NSView
{
    unsigned long long _maxValueAdjustmentTimestamp;
    float _minValue;
    float _maxValue;
    BOOL _showsData;
    BOOL _showSubColumnTitles;
    NSColor *_currentColor;
    NSColor *_baselineColor;
    struct GPUValueRange _maxRange;
    GPUReportChartData *_chartData;
    NSString *_dataLabel;
}

+ (id)dataTextAttributes;
+ (id)titleTextAttributes;
@property(nonatomic) BOOL showSubColumnTitles; // @synthesize showSubColumnTitles=_showSubColumnTitles;
@property(nonatomic) BOOL showsData; // @synthesize showsData=_showsData;
@property(retain, nonatomic) NSString *dataLabel; // @synthesize dataLabel=_dataLabel;
@property(retain, nonatomic) GPUReportChartData *chartData; // @synthesize chartData=_chartData;
@property(nonatomic) struct GPUValueRange maxRange; // @synthesize maxRange=_maxRange;
@property(nonatomic) NSColor *baselineColor; // @synthesize baselineColor=_baselineColor;
@property(nonatomic) NSColor *currentColor; // @synthesize currentColor=_currentColor;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)drawGraphInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateChartBaselineData:(id)arg1;
- (void)updateChartCurrentData:(id)arg1;
- (void)updateMinMaxValues;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUReportBuilder : NSObject
{
    NSMapTable *_reportSectionMapTable;
    GPUSharedTabUIState *_sharedTabState;
}

- (void).cxx_destruct;
- (id)reportSectionOfType:(int)arg1 reportComponentsArray:(id)arg2 containsUpdatedResults:(BOOL)arg3;
- (void)removeSectionOfType:(int)arg1 removeFromSuperView:(BOOL)arg2;
- (void)updateReportSectionOfType:(int)arg1 withTreeNode:(id)arg2 parentNode:(id)arg3 asFirstChild:(BOOL)arg4;
- (void)updateReportSectionOfType:(int)arg1 withCompletionStatus:(BOOL)arg2;
- (void)dealloc;
- (id)initWithSharedTabState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUReportChartData : NSObject
{
    NSArray *_currentData;
    NSArray *_baselineData;
    NSArray *_columnTitles;
}

@property(retain, nonatomic) NSArray *columnTitles; // @synthesize columnTitles=_columnTitles;
@property(retain, nonatomic) NSArray *baselineData; // @synthesize baselineData=_baselineData;
@property(retain, nonatomic) NSArray *currentData; // @synthesize currentData=_currentData;
- (void).cxx_destruct;
- (id)initWithCurrentData:(id)arg1 columnTitles:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUReportDocument : IDEDebugGaugeReportDocument
{
    GPUSharedTabUIState *_sharedTabUIState;
    GPUReportResults *_reportResults;
}

+ (BOOL)autosavesInPlace;
@property(retain, nonatomic) GPUReportResults *reportResults; // @synthesize reportResults=_reportResults;
@property(nonatomic) __weak GPUSharedTabUIState *sharedTabUIState; // @synthesize sharedTabUIState=_sharedTabUIState;
- (void).cxx_destruct;
- (id)automaticLocations;
- (id)displayName;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (id)printOperationWithSettings:(id)arg1 error:(id *)arg2;
- (id)writableTypesForSaveOperation:(unsigned long long)arg1;
- (BOOL)canExportDocument;
- (BOOL)prepareSavePanel:(id)arg1;
- (BOOL)writeSafelyToURL:(id)arg1 ofType:(id)arg2 forSaveOperation:(unsigned long long)arg3 error:(id *)arg4;
- (void)editorDocumentWillClose;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)_teardown;
- (void)_setup;

@end

@interface GPUReportEditor : IDEDebugGaugeReportEditor <IDEDebugGaugeReportContentDelegate, IDEDebugGaugeReportTopSectionContentDelegate>
{
    GPUDebuggerController *_debuggerController;
    GPUSharedTabUIState *_sharedTabState;
    id <GPUInvestigatorReportProvider> _investigatorReportProvider;
    id <GPUProgramPerformanceReportProvider> _programPerformanceReportProvider;
    DVTMeterValue *_fpsMeterData;
    DVTObservingToken *_investigatorCaseObservingToken;
    DVTObservingToken *_investigatorReadyObservingToken;
    DVTObservingToken *_debuggerControllerStateObservingToken;
    DVTObservingToken *_overviewSamplesObservingToken;
    DVTObservingToken *_investigatorCaseConfigDataObservingToken;
    DVTObservingToken *_currentTraceSessionUpdatedCompactTextModeObservingToken;
    DVTObservingToken *_shaderProfilerResultsObserver;
    id _investigatorCaseEventObservingToken;
    NSArray *_topLevelNibButtonObjects;
    NSView *_loadedButtonView;
    DVTStackView_AppKitAutolayout *_mainStackView;
    GPUReportBuilder *_reportBuilder;
    IDEDebugGaugeReportSection *_programPerformanceCapsule;
    IDEDebugGaugeReportSection *_noticeMessageCapsule;
    IDEDebugGaugeReportSection *_reportCapsule;
    NSMutableArray *_reportRootNodeArray;
    GPUReportResults *_reportResults;
    NSView *_topSectionButtonsView;
    NSView *_topSectionShortDescription;
    NSView *_topSectionprogressBarView;
    NSView *_meterContainerView;
    DVTMeterView *_fpsMeterView;
    GPUNumericBubbleView *_fpsTitleAccessoryView;
    GPUReportBarChartView *_utilizationGraphView;
    GPUReportBarChartView *_cpuGPUActiveTimeGraphView;
    NSButton *_analyzePerformanceButton;
    DVTGauge *_analysisProgressGauge;
    NSButton *_stopAnalyzePerformanceButton;
}

+ (id)currentTime;
@property(retain, nonatomic) NSButton *stopAnalyzePerformanceButton; // @synthesize stopAnalyzePerformanceButton=_stopAnalyzePerformanceButton;
@property(retain, nonatomic) DVTGauge *analysisProgressGauge; // @synthesize analysisProgressGauge=_analysisProgressGauge;
@property(retain, nonatomic) NSButton *analyzePerformanceButton; // @synthesize analyzePerformanceButton=_analyzePerformanceButton;
@property(retain, nonatomic) GPUReportBarChartView *cpuGPUActiveTimeGraphView; // @synthesize cpuGPUActiveTimeGraphView=_cpuGPUActiveTimeGraphView;
@property(retain, nonatomic) GPUReportBarChartView *utilizationGraphView; // @synthesize utilizationGraphView=_utilizationGraphView;
@property(retain, nonatomic) GPUNumericBubbleView *fpsTitleAccessoryView; // @synthesize fpsTitleAccessoryView=_fpsTitleAccessoryView;
@property(retain, nonatomic) DVTMeterView *fpsMeterView; // @synthesize fpsMeterView=_fpsMeterView;
@property(retain, nonatomic) NSView *meterContainerView; // @synthesize meterContainerView=_meterContainerView;
@property(retain, nonatomic) NSView *topSectionprogressBarView; // @synthesize topSectionprogressBarView=_topSectionprogressBarView;
@property(retain, nonatomic) NSView *topSectionShortDescription; // @synthesize topSectionShortDescription=_topSectionShortDescription;
@property(retain, nonatomic) NSView *topSectionButtonsView; // @synthesize topSectionButtonsView=_topSectionButtonsView;
@property(retain, nonatomic) GPUReportResults *reportResults; // @synthesize reportResults=_reportResults;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <GPUProgramPerformanceReportProvider> programPerformanceReportProvider; // @dynamic programPerformanceReportProvider;
@property(readonly, nonatomic) id <GPUInvestigatorReportProvider> investigatorReportProvider; // @dynamic investigatorReportProvider;
- (void)_enumerateFindingStatisticsAndResourceTypesUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned int)resourceTypeForFindingStatisticsKey:(id)arg1;
- (id)_findingStatisticsKeyToResourceTypeMap;
- (void)updateReportWithCaseData:(int)arg1;
- (id)localizedStringWithKey:(id)arg1 andComment:(id)arg2;
- (void)showTraceItemInFrameDebugger:(id)arg1;
- (void)showSourceLocationForTraceItem:(id)arg1;
- (void)showSourceLocationForResource:(id)arg1;
- (void)showResource:(id)arg1;
- (id)investigatorReportResourceWithResourceType:(unsigned int)arg1 objectID:(unsigned int)arg2 analyzerFinding:(id)arg3 investigatorFinding:(id)arg4;
- (id)generateProgramPerformanceTree;
- (id)_programPerformanceTotalItem;
- (void)updateDisplayedFindingsWithMCSInfo:(id)arg1;
- (void)updateReportWithAdditionalInfo;
- (void)addAnalyzerFindings:(id)arg1 toSection:(id)arg2 forFinding:(id)arg3 areRedFlags:(BOOL)arg4;
- (id)_createProgramCentricTreeForGroupedFindings:(id)arg1 investigatorFinding:(id)arg2;
- (id)_createResourceCentricTreeForGroupedFindings:(id)arg1 investigatorFinding:(id)arg2;
- (id)actionItemForReportResource:(id)arg1;
- (id)actionItemForTraceItem:(id)arg1;
- (void)addDetailsToSection:(id)arg1 fromDetailDictionary:(id)arg2 forFinding:(id)arg3;
- (void)addDetailsToSection:(id)arg1 forRecommendationSection:(id)arg2 fromFinding:(id)arg3;
- (void)addFindingToReport:(id)arg1;
- (void)updateReportWithResultMessage;
- (void)updateReportWithResultAndFindingsInfo;
- (void)updateInvalidView;
- (void)constructProgramPerformanceSection;
- (void)updateOverview;
- (void)updateReportWithCPUAndGPUActiveTimes;
- (void)updateReportWithTargetFrameRate;
- (id)_setupCPUGPUActiveTimeGraphView;
- (id)cpuGPUActiveTimeGraphData;
- (id)_setupUtilizationGraphView;
- (id)utilizationGraphData;
- (void)_setupFPSMeterView;
- (id)topSectionComponentEntries;
- (id)topSectionShortDescriptionTitle;
- (id)topSectionImage;
- (id)progressBarView;
- (id)topSectionTitleAccessoryView;
- (BOOL)_loadButtonsNib;
- (id)topSectionTitle;
- (id)addTopSectionTreeNodeForObject:(id)arg1 first:(BOOL)arg2;
- (id)addTreeNodeForObject:(id)arg1 withChildren:(id)arg2 toParent:(id)arg3;
- (id)addTreeNodeForObject:(id)arg1 withChildren:(id)arg2 toParent:(id)arg3 asFirstChild:(BOOL)arg4;
- (void)addSectionsToView:(id)arg1;
- (BOOL)hasDefaultTopSection;
- (void)stopAnalyzePerformance:(id)arg1;
- (void)analyzePerformance:(id)arg1;
- (void)updateProgress;
- (void)_hideProgressControls;
- (void)_loadButtonView:(id)arg1;
- (void)updateAnalyzePerformanceActionAvailability;
- (void)resetReportEditorStateThatDependsOnTheInvestigatorCase;
- (void)cancelObservers;
- (void)observeInvestigatorCaseEvents;
- (void)redisplayReport;
- (void)setupReportSection;
- (void)setupObservers;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)_teardown;
- (void)_setup;
- (void)primitiveInvalidate;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUReportFindingsNodeTuple : NSObject
{
    NSMutableArray *_findings;
    GPUTreeNode *_node;
}

@property(retain, nonatomic) GPUTreeNode *node; // @synthesize node=_node;
@property(readonly, nonatomic) NSMutableArray *findings; // @synthesize findings=_findings;
- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface GPUReportOutlineView : NSOutlineView
{
    NSMutableDictionary *_cachedAutolayoutHeightDrivenWidthConstraintsByIdentifier;
    NSMutableDictionary *_cachedAutolayoutHeightDrivenCellViewsByIdentifier;
    NSMutableIndexSet *_temporaryRowIndexesForDynamicHeightItems;
    NSMutableSet *_itemsGettingHeightComputed;
    NSMutableSet *_itemsWithDynamicHeight;
}

- (void).cxx_destruct;
- (double)heightForItem:(id)arg1 givenContentHeight:(double)arg2;
- (double)heightForItem:(id)arg1 givenContentHeight:(double)arg2 dynamicHeightViewIdentifier:(id)arg3 willSetupDynamicHeightBlock:(CDUnknownBlockType)arg4;
- (void)syncRowHeights;
- (void)setFrameSize:(struct CGSize)arg1;
- (id)prototypeTableCellViewForIdentifier:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface GPUReportRecomendation : NSObject
{
    NSString *_text;
}

@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, retain, nonatomic) NSImage *image;
- (id)initWithRecomendationText:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUReportRecomendationsViewController : NSViewController
{
    GPUReportSubSection *_reportSubSection;
    NSTableView *_recomendationTable;
}

@property(nonatomic) __weak NSTableView *recomendationTable; // @synthesize recomendationTable=_recomendationTable;
@property(nonatomic) __weak GPUReportSubSection *reportSubSection; // @synthesize reportSubSection=_reportSubSection;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSFont *recomendationFont; // @dynamic recomendationFont;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 subSection:(id)arg3;

@end

@interface GPUReportResults : GPUInvestigatorReportItem
{
    DYInvestigatorCaseConfigData *_investigatorCaseConfigData;
    DYInvestigatorCase *_investigatorCase;
}

@property(retain, nonatomic) DYInvestigatorCase *investigatorCase; // @synthesize investigatorCase=_investigatorCase;
@property(retain, nonatomic) DYInvestigatorCaseConfigData *investigatorCaseConfigData; // @synthesize investigatorCaseConfigData=_investigatorCaseConfigData;
- (void).cxx_destruct;
- (id)cpuGPUActiveTimeTimes:(BOOL)arg1;
- (id)utilizationPercentages;
- (id)archive;
- (id)initWithInvestigatorCaseConfigData:(id)arg1 controller:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUReportSectionViewController : NSViewController <GPUReportOutlineViewDelegate, NSTableViewDelegate>
{
    BOOL _containsUpdatedResults;
    NSLayoutConstraint *_scrollviewHeightConstraint;
    DVTObservingToken *_reportComponentsArrayObservingToken;
    GPUSharedTabUIState *_sharedTabState;
    GPUBulletedViewBulletPainter *_bluePainter;
    GPUBulletedViewBulletPainter *_greenPainter;
    NSScrollView *_editorScrollView;
    unsigned long long _previousContentViewHeight;
    BOOL _completedBuildingTree;
    NSMutableArray *_reportComponentsArray;
    NSView *_programPerformanceGraphKeyView;
    NSArray *_programPerformanceTotalItemArray;
    GPUReportOutlineView *_findingTable;
    GPUReportOutlineView *_programPerformanceTable;
    NSTableView *_programPerformanceTotalTable;
    NSImageView *_currentMSImage;
    NSImageView *_baselineMSImage;
    NSTextField *_baselineTextField;
    NSTextField *_currentMSTextField;
    NSTreeController *_treeController;
    NSLayoutConstraint *_prototypeWidthConstraint;
}

+ (id)listTextAttributes;
@property(retain, nonatomic) NSLayoutConstraint *prototypeWidthConstraint; // @synthesize prototypeWidthConstraint=_prototypeWidthConstraint;
@property(retain) NSTreeController *treeController; // @synthesize treeController=_treeController;
@property(retain) NSTextField *currentMSTextField; // @synthesize currentMSTextField=_currentMSTextField;
@property(retain) NSTextField *baselineTextField; // @synthesize baselineTextField=_baselineTextField;
@property(retain) NSImageView *baselineMSImage; // @synthesize baselineMSImage=_baselineMSImage;
@property(retain) NSImageView *currentMSImage; // @synthesize currentMSImage=_currentMSImage;
@property __weak NSTableView *programPerformanceTotalTable; // @synthesize programPerformanceTotalTable=_programPerformanceTotalTable;
@property(nonatomic) __weak GPUReportOutlineView *programPerformanceTable; // @synthesize programPerformanceTable=_programPerformanceTable;
@property(nonatomic) __weak GPUReportOutlineView *findingTable; // @synthesize findingTable=_findingTable;
@property(retain, nonatomic) NSArray *programPerformanceTotalItemArray; // @synthesize programPerformanceTotalItemArray=_programPerformanceTotalItemArray;
@property(retain, nonatomic) NSView *programPerformanceGraphKeyView; // @synthesize programPerformanceGraphKeyView=_programPerformanceGraphKeyView;
@property(nonatomic) BOOL completedBuildingTree; // @synthesize completedBuildingTree=_completedBuildingTree;
@property(retain, nonatomic) NSMutableArray *reportComponentsArray; // @synthesize reportComponentsArray=_reportComponentsArray;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableColumnDidResizeWidth:(id)arg1;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (id)stringValueForItem:(id)arg1;
- (id)prototypeNibForViewItem:(id)arg1;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewItemWillExpand:(id)arg1;
- (void)_updateConstraints:(BOOL)arg1;
- (void)_loadedOutlineViewClipBoundsChanged:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldEditTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 rowViewForItem:(id)arg2;
- (void)performRowAction:(id)arg1;
- (void)traverseExpandedTreeNodes:(id)arg1 withActionBlock:(CDUnknownBlockType)arg2;
- (void)loadView;
- (id)_findEditorScrollView;
- (void)dealloc;
- (id)loadedOutlineView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 sharedTabState:(id)arg3 reportComponentsArray:(id)arg4 containsUpdatedResults:(BOOL)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GPUReportTotalItem : NSObject
{
    NSString *_label;
    double _currentTotalFrameTime;
    double _baselineTotalFrameTime;
    double _difference;
}

@property(nonatomic) double difference; // @synthesize difference=_difference;
@property(nonatomic) double baselineTotalFrameTime; // @synthesize baselineTotalFrameTime=_baselineTotalFrameTime;
@property(nonatomic) double currentTotalFrameTime; // @synthesize currentTotalFrameTime=_currentTotalFrameTime;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSColor *differenceColor;

@end

@interface GPUResourceBackgroundView : NSView
{
}

+ (id)standardResourceBackgroundGradient;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface GPUSharedUIState : NSObject <DVTInvalidation>
{
    NSObject<OS_dispatch_queue> *_queue;
    DVTMapTable *_stateTable;
    NSString *_identifier;
}

+ (void)initialize;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)setState:(id)arg1 ForKey:(id)arg2;
- (id)stateForKey:(id)arg1;
- (void)primitiveInvalidate;
- (id)initWithIdentifer:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface GPUSharedInferiorSessionUIState : GPUSharedUIState
{
    GPUInferiorSession *_inferiorSession;
    NSMutableDictionary *_textStorageDict;
    NSMutableDictionary *_resourceAttributesDict;
    DVTObservingToken *_traceSessionObservation;
    BOOL _displayedOnceInNavigator;
}

@property(nonatomic) BOOL displayedOnceInNavigator; // @synthesize displayedOnceInNavigator=_displayedOnceInNavigator;
- (void).cxx_destruct;
- (id)attributesForResourceWithID:(unsigned int)arg1 type:(unsigned int)arg2 containerID:(unsigned long long)arg3;
- (BOOL)programHasBeenEdited:(id)arg1;
- (id)textStorageForProgram:(unsigned int)arg1 shaderType:(unsigned int)arg2 sharegroup:(unsigned long long)arg3;
- (id)createTextStorageForProgram:(unsigned int)arg1 shaderType:(unsigned int)arg2 source:(id)arg3 sharegroup:(unsigned long long)arg4;
- (id)rootItem;
- (void)primitiveInvalidate;
- (id)initWithInferiorSession:(id)arg1;
- (void)_createObservers;

@end

@interface GPUSharedTabUIState : GPUSharedUIState
{
    IDEWorkspaceTabController *_workspaceTabController;
    NSMutableDictionary *_displayedResourceForEditorIdentifierDict;
    id <DVTCancellable> _uiControllerToken;
    BOOL _loadingNewResources;
    BOOL _displayWireframe;
    int _tabUIMode;
    GPUTraceSession *_currentTraceSession;
    GPUInvestigatorReportItem *_currentReport;
    GPUTraceDocumentLocation *_currentMainEditorLocation;
    GPUTraceDocumentLocation *_currentMainEditorProgramLocation;
    GPUDebuggingAdditionUIController *_debuggingAdditionUIController;
    NSMutableSet *_expandedReportItems;
    NSMutableSet *_expandedProgramPerformanceItems;
    NSMutableSet *_collapsedReportItems;
}

@property(retain, nonatomic) NSMutableSet *collapsedReportItems; // @synthesize collapsedReportItems=_collapsedReportItems;
@property(retain, nonatomic) NSMutableSet *expandedProgramPerformanceItems; // @synthesize expandedProgramPerformanceItems=_expandedProgramPerformanceItems;
@property(retain, nonatomic) NSMutableSet *expandedReportItems; // @synthesize expandedReportItems=_expandedReportItems;
@property(retain, nonatomic) GPUDebuggingAdditionUIController *debuggingAdditionUIController; // @synthesize debuggingAdditionUIController=_debuggingAdditionUIController;
@property(nonatomic) int tabUIMode; // @synthesize tabUIMode=_tabUIMode;
@property(nonatomic) BOOL displayWireframe; // @synthesize displayWireframe=_displayWireframe;
@property(readonly, nonatomic) BOOL loadingNewResources; // @synthesize loadingNewResources=_loadingNewResources;
@property(retain, nonatomic) GPUTraceDocumentLocation *currentMainEditorProgramLocation; // @synthesize currentMainEditorProgramLocation=_currentMainEditorProgramLocation;
@property(retain, nonatomic) GPUTraceDocumentLocation *currentMainEditorLocation; // @synthesize currentMainEditorLocation=_currentMainEditorLocation;
@property(nonatomic) __weak GPUInvestigatorReportItem *currentReport; // @synthesize currentReport=_currentReport;
@property(readonly, nonatomic) __weak GPUTraceSession *currentTraceSession; // @synthesize currentTraceSession=_currentTraceSession;
- (void).cxx_destruct;
- (BOOL)tabUIModeIsADebuggerMode;
- (void)_unarchiveState;
- (void)_archiveState;
- (void)setNewTraceSession:(id)arg1;
@property(readonly, nonatomic) GPUInferiorSession *inferiorSession;
@property(readonly, nonatomic) BOOL currentLocationIsDisplayableItem; // @dynamic currentLocationIsDisplayableItem;
- (void)redrawDebugBar;
- (void)setNewMainEditorLocation:(id)arg1;
- (void)_setNewMainEditorLocation:(id)arg1;
- (void)setNewMainEditorProgramLocation:(id)arg1;
- (void)_setNewMainEditorProgramLocation:(id)arg1;
- (id)currentMainEditorProgramItem;
- (id)currentMainEditorItem;
- (void)removeResourceItemForIdentifier:(id)arg1;
- (void)addCurrentResourceItem:(id)arg1 forIdentifier:(id)arg2;
- (BOOL)_existingItemEquals:(id)arg1 forIdentifier:(id)arg2;
@property(readonly, nonatomic) NSSet *currentlyDisplayedResourceItems; // @dynamic currentlyDisplayedResourceItems;
- (BOOL)canExportDocument;
- (void)primitiveInvalidate;
- (void)updateDebuggingAdditionUIController;
- (id)initWithWorkspaceTabController:(id)arg1;

@end

@interface GPUSharedUIStateManager : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    DVTMapTable *_sharedStateMapTable;
}

+ (id)sharedUIStateManager;
- (void).cxx_destruct;
- (void)invalidateSharedStateForObject:(id)arg1;
- (id)sharedStateForWorkspace:(id)arg1;
- (id)sharedStateForWorkspaceTabController:(id)arg1;
- (id)sharedStateForInferiorSession:(id)arg1;
- (id)sharedStateForObject:(id)arg1;
- (id)transferSharedStateForObject:(id)arg1 toObj:(id)arg2;
- (id)_init;
- (id)init;

@end

@interface GPUSharedWorkspaceUIState : GPUSharedUIState
{
    IDEWorkspace *_workspace;
    DVTObservingToken *_debuggingAdditionsObservation;
    DVTMapTable *_debuggingAdditionsObserversMap;
    GPUTraceGroupItem *_rootResourceGroup;
    GPUTraceProgramGroup *_rootProgramGroup;
    IDELaunchSession *_syntheticLaunchSession;
}

@property(retain, nonatomic) IDELaunchSession *syntheticLaunchSession; // @synthesize syntheticLaunchSession=_syntheticLaunchSession;
@property(retain, nonatomic) GPUTraceProgramGroup *rootProgramGroup; // @synthesize rootProgramGroup=_rootProgramGroup;
@property(retain, nonatomic) GPUTraceGroupItem *rootResourceGroup; // @synthesize rootResourceGroup=_rootResourceGroup;
- (void).cxx_destruct;
- (void)removeObserver:(id)arg1;
- (id)notifyOnQueue:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_handleNewDebugAddition:(id)arg1;
- (void)_observeCurrentLaunchSessionForDebuggingAdditions;
- (void)tearDownSyntheticLaunchSession;
- (id)activateSyntheticSessionWithDevice:(id)arg1 captureArchive:(id)arg2 appName:(id)arg3;
- (void)primitiveInvalidate;
- (id)initWithWorkspace:(id)arg1;

@end

@interface GPUSimpleGLSLSourceView : DVTSourceTextView
{
    DVTTextSidebarView *_sidebarView;
}

- (void).cxx_destruct;
- (void)installSidebarViewIfNeeded;
@property(readonly) DVTTextSidebarView *sidebarView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (void)_commonInit;

// Remaining properties
@property(retain) NSString *identifier;

@end

__attribute__((visibility("hidden")))
@interface GPUStackView_Autolayout : DVTStackView_AppKitAutolayout
{
    BOOL _drawsSeperatorLines;
    NSGradient *_seperatorLineGradient;
}

@property(retain, nonatomic) NSGradient *seperatorLineGradient; // @synthesize seperatorLineGradient=_seperatorLineGradient;
@property(nonatomic) BOOL drawsSeperatorLines; // @synthesize drawsSeperatorLines=_drawsSeperatorLines;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GPUStateValue : NSObject <IDEDataValue>
{
    NSString *_name;
    NSString *_value;
    BOOL _valueHasChanged;
    NSString *_logicalValue;
    BOOL _logicalValueHasChanged;
    NSString *_type;
    BOOL _typeHasChanged;
    NSString *_itemDescription;
    BOOL itemDescriptionHasChanged;
    NSMutableArray *_childValues;
    BOOL _itemDescriptionHasChanged;
    NSString *_itemSummary;
}

@property(copy) NSString *itemSummary; // @synthesize itemSummary=_itemSummary;
@property(retain) NSArray *childValues; // @synthesize childValues=_childValues;
@property BOOL itemDescriptionHasChanged; // @synthesize itemDescriptionHasChanged=_itemDescriptionHasChanged;
@property(copy) NSString *itemDescription; // @synthesize itemDescription=_itemDescription;
@property BOOL typeHasChanged; // @synthesize typeHasChanged=_typeHasChanged;
@property(copy) NSString *type; // @synthesize type=_type;
@property(readonly) BOOL logicalValueHasChanged; // @synthesize logicalValueHasChanged=_logicalValueHasChanged;
@property(copy) NSString *logicalValue; // @synthesize logicalValue=_logicalValue;
@property BOOL valueHasChanged; // @synthesize valueHasChanged=_valueHasChanged;
@property(copy) NSString *value; // @synthesize value=_value;
@property(copy) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)formattedSummary;
- (long long)compareName:(id)arg1;
- (id)_contentDescription;
- (id)_contentDescriptionWithChildValuesAtLevel:(unsigned long long)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) BOOL childValuesCountValid;
@property(readonly) BOOL hasChildValues;
@property(readonly) BOOL inScope;
@property(readonly) BOOL isValueEditable;
@property(readonly, copy) NSString *primitiveLogicalValue;
- (void)replaceChildValueAtIndex:(unsigned long long)arg1 withValue:(id)arg2;
- (void)addChildValues:(id)arg1;
- (void)addChildValue:(id)arg1;
- (void)setStateValue:(id)arg1 withName:(id)arg2 withType:(id)arg3 withItemDescription:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface GPUTableCellView : NSTableCellView
{
    NSButton *_gotoButton;
    CDUnknownBlockType _gotoAction;
}

+ (id)gotoPressedImage;
+ (id)gotoSelectedImage;
+ (id)gotoImage;
@property(copy, nonatomic) CDUnknownBlockType gotoAction; // @synthesize gotoAction=_gotoAction;
@property(nonatomic) NSButton *gotoButton; // @synthesize gotoButton=_gotoButton;
- (void).cxx_destruct;
- (void)performGotoAction:(id)arg1;
- (void)viewDidMoveToSuperview;

@end

__attribute__((visibility("hidden")))
@interface GPUTableColumn : NSTableColumn
{
}

- (void)setWidth:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUTableRowView : NSTableRowView
{
    NSTrackingArea *_trackingArea;
}

- (void).cxx_destruct;
- (void)_windowChangedKeyState;
- (void)updateTrackingAreas;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)updateCellViews;
- (BOOL)isMouseOver;
- (void)setSelected:(BOOL)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceBreakpointActionEditor : NSViewController
{
}

- (id)initWithAction:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceContentDelegate : NSObject <IDEDebugNavigableContentDelegate, DVTInvalidation>
{
    IDEDebugNavigator *_debugNavigator;
    int _navigatorMode;
    int _navigatorProgramSortMode;
    GPUDebuggingAdditionUIController *_debuggingAdditionUIController;
    GPUSharedTabUIState *_sharedUIStateObj;
    IDENavigatorOutlineView *_outlineView;
    IDENavigatorDataCell *_markerGroupCell;
    IDENavigatorStatusCell *_markerGroupStatusCell;
    IDENavigatorDataCell *_displayableHeaderCell;
    IDENavigatorStatusCell *_displayableStatusCell;
    IDENavigatorDataCell *_subtitleCell;
    GPUNavigatorStatusCell *_subtitleStatusCell;
    IDENavigatorDataCell *_contextHeaderCell;
    IDENavigatorDataCell *_commandBufferHeaderCell;
    IDENavigatorDataCell *_commandEncoderHeaderCell;
    IDENavigatorStatusCell *_commandEncoderStatusCell;
    IDENavigatorDataCell *_relatedDisplayablesCell;
    NSMenuItem *_traceItemMenuItem;
    GPUNavigatorCompressedDataCell *_compressedCell;
    unsigned long long _compressionValue;
    unsigned long long _maxCompressionValue;
    BOOL _ignoreStateForDebugNavigator;
    BOOL _haveRequestedUIController;
    id <DVTCancellable> _uiControllerObserver;
    BOOL _showOnlyInterestingContent;
    NSView *_localFilterView;
    DVTGradientImageButton *_showOnlyInterestingContentButton;
    DVTGradientImageButton *_autoCompressMaxButton;
    NSSlider *_autoCompressSlider;
    DVTGradientImageButton *_autoCompressMinButton;
}

+ (void)initialize;
@property(nonatomic) BOOL showOnlyInterestingContent; // @synthesize showOnlyInterestingContent=_showOnlyInterestingContent;
@property(readonly) IDEDebugNavigator *debugNavigator; // @synthesize debugNavigator=_debugNavigator;
@property __weak DVTGradientImageButton *autoCompressMinButton; // @synthesize autoCompressMinButton=_autoCompressMinButton;
@property __weak NSSlider *autoCompressSlider; // @synthesize autoCompressSlider=_autoCompressSlider;
@property __weak DVTGradientImageButton *autoCompressMaxButton; // @synthesize autoCompressMaxButton=_autoCompressMaxButton;
@property __weak DVTGradientImageButton *showOnlyInterestingContentButton; // @synthesize showOnlyInterestingContentButton=_showOnlyInterestingContentButton;
@property(retain) NSView *localFilterView; // @synthesize localFilterView=_localFilterView;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)setStoredCompressionValue:(id)arg1;
- (id)storedCompressionValue;
- (void)setProgramSortMode:(id)arg1;
- (id)storedProgramSortMode;
- (void)setDisplayableCallOrProgramMode:(id)arg1;
- (id)storedDisplayableCallOrProgramMode;
- (void)commitStateToDictionary:(id)arg1;
- (void)revertStateWithDictionary:(id)arg1;
- (void)_updateForNewCompressionValue;
- (void)_updateForNewProgramSortMode:(int)arg1;
- (void)_recordPersistenceStateChangesIfNecesasry;
- (void)_updateForNewNavigatorMode:(id)arg1;
- (void)configureMenuForProcessHeaderActionPopUpCell:(id)arg1;
- (void)_threadContextuallyClicked;
- (void)contextualMenuNeedsUpdate:(id)arg1;
- (void)_showRedundantStateIssues:(id)arg1;
- (void)_hideRedundantStateIssues:(id)arg1;
- (void)_setProgramSortByCost:(id)arg1;
- (void)_setProgramSortByProgram:(id)arg1;
- (void)_setProgramMetricsAsPercentage:(id)arg1;
- (void)_setProgramMetricsAsTime:(id)arg1;
- (void)_setShowGroupMarkerCalls:(id)arg1;
- (void)_setHideGroupMarkerCalls:(id)arg1;
- (void)_setShowEmptyMarkerGroups:(id)arg1;
- (void)_setHideEmptyMarkerGroups:(id)arg1;
- (void)_setTextModeCompact:(id)arg1;
- (void)_setTextModeVerbose:(id)arg1;
- (void)_refreshNavigator;
- (BOOL)shouldExpandItemAsResultOfOptionClick:(id)arg1 clickedItem:(id)arg2;
- (BOOL)validateUserInterfaceAction:(SEL)arg1 forRepresentedObject:(id)arg2;
- (BOOL)validateUserInterfaceAction:(SEL)arg1;
- (id)representedObjectsToReveal;
- (id)pasteboardStringForRepresentedObject:(id)arg1;
- (void)_appendDisplayStringForCopiedOrDraggedGroupItem:(id)arg1 toString:(id)arg2 level:(unsigned int)arg3;
- (BOOL)shouldHandleUserDirectMoveUpOrDown:(BOOL)arg1 forRepresentedObject:(id)arg2 newRow:(long long *)arg3;
- (void)_updateForNewShowOnlyInterestingContent;
- (void)didCollapseForItem:(id)arg1;
- (void)didExpandForItem:(id)arg1;
- (void)willExpandForItem:(id)arg1;
- (id)expandableItemsForProcessItem:(id)arg1;
- (id)tokenForExpandedRepresentedObject:(id)arg1;
- (id)launchSessionForSelectedRepresentedObject:(id)arg1;
- (void)openSelectedRepresentedObject:(id)arg1 withEventType:(unsigned long long)arg2;
- (BOOL)shouldSelectItemForRepresentedObject:(id)arg1 withPrevious:(id)arg2 next:(id)arg3;
- (double)heightOfRowForRepresentedObject:(id)arg1;
- (id)filterView;
- (id)dataCellForRepresentedObject:(id)arg1;
- (id)_compressedCell;
- (id)relatedDisplayablesCell;
- (id)commandEncoderHeaderCell;
- (id)commandBufferHeaderCell;
- (id)contextHeaderCell;
- (id)displayableProgramOrShaderCell;
- (id)displayableItemCell;
- (id)markerGroupCell;
- (void)willDisplayCell:(id)arg1 forRepresentedObject:(id)arg2 item:(id)arg3;
- (void)updateForNewFilterString:(id)arg1;
- (void)_navigatorFirstShownWithNoSelectedItems:(id)arg1;
- (void)debugNavigatorViewWillUninstall;
- (void)_handleDebuggingAdditionUIControllerCreated:(id)arg1;
- (void)debugNavigatorViewDidInstall;
@property(readonly) NSString *associatedProcessUUID;
- (id)processNavigableItem;
- (void)autoCompressStackFrames:(id)arg1;
- (id)workspaceTabController;
@property(readonly) IDENavigableItem *rootNavigableItem;
- (id)initWithProcess:(id)arg1 debugNavigator:(id)arg2;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceFPSTrayCell : IDEDebugGaugeTrayCell
{
}

- (id)initWithLabel:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_gpu_commonInit;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceFramePlayheadSlider : NSSlider
{
}

+ (Class)cellClass;
@property SEL mouseUpAction;
@property SEL mouseDownAction;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceFramePlayheadSliderCell : NSSliderCell
{
    SEL _mouseDownAction;
    SEL _mouseUpAction;
}

@property SEL mouseDownAction; // @synthesize mouseDownAction=_mouseDownAction;
@property SEL mouseUpAction; // @synthesize mouseUpAction=_mouseUpAction;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;
- (void)drawBarInside:(struct CGRect)arg1 flipped:(BOOL)arg2;
- (void)drawKnob:(struct CGRect)arg1;
- (BOOL)_usesCustomTrackImage;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceFrameStepperButton : DVTGradientImageButton
{
}

+ (Class)cellClass;
@property SEL mouseUpAction;
@property SEL mouseDownAction;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceFrameStepperButtonCell : DVTGradientImageButtonCell
{
    SEL _mouseDownAction;
    SEL _mouseUpAction;
}

@property SEL mouseDownAction; // @synthesize mouseDownAction=_mouseDownAction;
@property SEL mouseUpAction; // @synthesize mouseUpAction=_mouseUpAction;
- (void)stopTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3 mouseIsUp:(BOOL)arg4;
- (BOOL)continueTracking:(struct CGPoint)arg1 at:(struct CGPoint)arg2 inView:(id)arg3;
- (BOOL)startTrackingAt:(struct CGPoint)arg1 inView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface GPUTraceProgramGroupDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface GPUTraceResourcesDomainProvider : IDENavigableItemDomainProvider
{
}

+ (id)navigableItemImageForDocumentURL:(id)arg1;
+ (id)navigableItemNameForDocumentURL:(id)arg1;
+ (id)domainObjectForWorkspace:(id)arg1;

@end

@interface GPUTreeNode : NSTreeNode
{
    BOOL _expand;
}

@property(nonatomic) BOOL expand; // @synthesize expand=_expand;
- (id)initWithRepresentedObject:(id)arg1;

@end

@interface GPUUniformBlockStateValue : GPUStateValue
{
    unsigned int _blockBinding;
}

@property(readonly) unsigned int blockBinding; // @synthesize blockBinding=_blockBinding;
- (id)initWithBlockBinding:(unsigned int)arg1;

@end

@interface GPUUniformStateValue : GPUStateValue
{
    BOOL _isRowMajor;
    unsigned int _offset;
    unsigned int _uniformType;
    unsigned int _matrixStride;
    NSArray *_quickLookData;
}

@property(retain) NSArray *quickLookData; // @synthesize quickLookData=_quickLookData;
@property(readonly) BOOL isRowMajor; // @synthesize isRowMajor=_isRowMajor;
@property(readonly) unsigned int matrixStride; // @synthesize matrixStride=_matrixStride;
@property(readonly) unsigned int uniformType; // @synthesize uniformType=_uniformType;
@property(readonly) unsigned int offset; // @synthesize offset=_offset;
- (void).cxx_destruct;
- (id)initWithUniformType:(unsigned int)arg1 offset:(unsigned int)arg2 matrixStride:(unsigned int)arg3 isRowMajor:(BOOL)arg4;

@end

@interface GPUVariablesViewContentProvider : NSObject <IDEVariablesViewContextMenuDelegate, IDEVariablesViewContentProvider, DVTInvalidation>
{
    _Bool _isDrawCall;
    int _functionIndex;
    int _displayIndex;
    NSString *_comparisonModeKey;
    DVTObservingToken *_gpuTraceCurrentLocationObserverToken;
    DVTObservingToken *_gpuTraceCurrentResourcesObserverToken;
    DVTObservingToken *_uiModeObservation;
    DVTObservingToken *_shaderProfilerResultsObserverToken;
    int _comparisonMode;
    int _objectFilterMode;
    int _textMode;
    GPUDebuggerController *_debuggerController;
    GPUSharedTabUIState *_sharedUIStateObj;
    IDEVariablesView *_variablesView;
}

+ (void)initialize;
@property(nonatomic) int textMode; // @synthesize textMode=_textMode;
@property(nonatomic) int objectFilterMode; // @synthesize objectFilterMode=_objectFilterMode;
@property(nonatomic) int comparisonMode; // @synthesize comparisonMode=_comparisonMode;
@property(readonly, nonatomic) __weak IDEVariablesView *variablesView; // @synthesize variablesView=_variablesView;
@property(nonatomic) __weak GPUSharedTabUIState *sharedUIStateObj; // @synthesize sharedUIStateObj=_sharedUIStateObj;
@property(retain, nonatomic) GPUDebuggerController *debuggerController; // @synthesize debuggerController=_debuggerController;
- (void).cxx_destruct;
- (id)_createOptionsDictionaryFromOptionsElement:(id)arg1;
- (void)quickLookProviderForDataValue:(id)arg1 quickLookProviderHandler:(CDUnknownBlockType)arg2;
- (void)provideHelpMenuItem:(id)arg1;
- (void)providePrimaryMenuItems:(id)arg1;
- (void)_addVariableNodeFromDataValue:(id)arg1 type:(unsigned long long)arg2 recipientArray:(id)arg3;
- (void)_addVariableNodeFromDataValue:(id)arg1 type:(unsigned long long)arg2 recipientArray:(id)arg3 compareDetails:(BOOL)arg4;
- (void)bubbleUpChangeStatusHighlighting:(id)arg1;
- (id)contextNameForNode:(id)arg1;
- (id)imageToUseInDefaultQuickLookForNode:(id)arg1;
- (id)imageForNode:(id)arg1;
- (id)imageForIssueType:(int)arg1;
- (BOOL)deleteNode:(id)arg1;
- (void)provideScopeChoices:(id)arg1;
- (void)providerWasInstalledForVariablesView:(id)arg1;
@property(readonly) BOOL supportsShowingRawValues;
@property(readonly) CDUnknownBlockType nodeSortComparator;
@property(readonly) id <IDEVariablesViewContextMenuDelegate> contextMenuDelegate;
- (id)_createVariableNodesFromDataValues:(id)arg1 type:(unsigned long long)arg2;
- (void)_setTextModeCompact:(id)arg1;
- (void)_setTextModeVerbose:(id)arg1;
- (void)_setCompareStateWithLastDraw:(id)arg1;
- (void)_setCompareStateWithDefault:(id)arg1;
- (void)updateCurrentLocation:(id)arg1;
- (void)updateFilteredList;
- (void)primitiveInvalidate;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) BOOL loadingNewVariablesInBackground;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

__attribute__((visibility("hidden")))
@interface RightClickableButton : DVTGradientImageButton
{
    SEL _leftButtonAction;
    SEL _rightButtonAction;
    id _target;
}

- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)setRightAction:(SEL)arg1;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (id)target;

@end

__attribute__((visibility("hidden")))
@interface _GPUDebuggerUIPrivateClassForFindingBundle : NSObject
{
}

@end

