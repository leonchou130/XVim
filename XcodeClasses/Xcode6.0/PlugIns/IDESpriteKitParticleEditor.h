//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPath;

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct FSEventStreamContext {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
};

struct NodeMovePair;

struct PolyEditor {
    struct CGPath *_path;
    _Bool _dirty;
    struct CGPoint _continuityButtonPos;
    struct CGPoint _lockButtonPos;
    unsigned long long _editIndex;
    int _editPart;
    _Bool _filled;
    _Bool _closed;
    _Bool _smoothPath;
    struct vector<PolyEditor::Vertex, std::__1::allocator<PolyEditor::Vertex>> _verts;
    SKNode *_offsetNode;
    struct CGPoint _lastOffsetPosition;
    struct Vertex _firstVert;
};

struct SnapResult {
    _Bool _field1;
    _Bool _field2;
    float _field3;
    float _field4;
};

struct Vertex {
    struct CGPoint point;
    struct CGPoint tangentIn;
    struct CGPoint tangentOut;
    int tangency;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct vector<NodeMovePair, std::__1::allocator<NodeMovePair>> {
    struct NodeMovePair *__begin_;
    struct NodeMovePair *__end_;
    struct __compressed_pair<NodeMovePair *, std::__1::allocator<NodeMovePair>> {
        struct NodeMovePair *__first_;
    } __end_cap_;
};

struct vector<PolyEditor::Vertex, std::__1::allocator<PolyEditor::Vertex>> {
    struct Vertex *__begin_;
    struct Vertex *__end_;
    struct __compressed_pair<PolyEditor::Vertex *, std::__1::allocator<PolyEditor::Vertex>> {
        struct Vertex *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct CGPoint _field6;
    struct CGPoint _field7;
    struct CGPoint _field8;
    struct CGPoint _field9;
    struct CGPoint _field10;
    struct CGPoint _field11;
    double _field12;
    struct CGPoint _field13;
    struct CGSize _field14;
    struct CGPoint _field15;
    struct CGPoint _field16;
    struct CGPoint _field17;
    struct CGPoint _field18;
} CDStruct_76845b71;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/PlugIns/IDESpriteKitParticleEditor.ideplugin/Contents/MacOS/IDESpriteKitParticleEditor
// UUID: 937FEB42-DD9F-3001-83C5-5E5E47A1655D
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6131.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTDiffTextFilter <NSObject>
+ (DVTFileDataType *)textFileDataTypeForInputFilePath:(DVTFilePath *)arg1;
+ (BOOL)pathRequiresFilter:(DVTFilePath *)arg1;

@optional
+ (DVTFilePath *)pathToKeyConflictResolutionFromInputFilePath:(DVTFilePath *)arg1 error:(id *)arg2;
+ (DVTFilePath *)pathToTextFileFromInputFilePath:(DVTFilePath *)arg1 error:(id *)arg2;
+ (BOOL)filterInputFilePath:(DVTFilePath *)arg1 toOutputFilePath:(DVTFilePath *)arg2 error:(id *)arg3;
@end

@protocol DVTFindBarFindable

@optional
- (struct _NSRange)selectedRangeForFindBar:(DVTFindBar *)arg1;
- (DVTDocumentLocation *)startingLocationForFindBar:(DVTFindBar *)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateCurrentResult:(DVTFindResult *)arg2;
- (void)dvtFindBar:(DVTFindBar *)arg1 didUpdateResults:(NSArray *)arg2;
@end

@protocol DVTReplacementViewDelegate <NSObject>

@optional
- (void)replacementView:(DVTReplacementView *)arg1 willDisplayInRect:(struct CGRect)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willCloseViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 didInstallViewController:(NSViewController *)arg2;
- (void)replacementView:(DVTReplacementView *)arg1 willInstallViewController:(NSViewController *)arg2;
@end

@protocol DVTTextAnnotationDelegate <NSObject>

@optional
- (void)annotation:(DVTTextAnnotation *)arg1 willDrawInTextSidebarView:(DVTTextSidebarView *)arg2 withAnnotationsInSameLine:(NSSet *)arg3;
- (BOOL)annotation:(DVTTextAnnotation *)arg1 shouldDrawInTextSidebarView:(DVTTextSidebarView *)arg2 withAnnotationsInSameLine:(NSSet *)arg3;
- (double)sidebarMarkerOpacityForAnnotation:(DVTTextAnnotation *)arg1;
- (BOOL)shouldMoveCursorForAnnotation:(DVTTextAnnotation *)arg1;
- (NSArray *)contextMenuItemsForAnnotation:(DVTTextAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2;
- (void)didDeleteOrReplaceParagraphForAnnotation:(DVTTextAnnotation *)arg1;
- (void)didRemoveAnnotation:(DVTAnnotation *)arg1;
- (void)didMoveAnnotation:(DVTAnnotation *)arg1;
- (unsigned long long)annotation:(DVTTextAnnotation *)arg1 willMoveToParagraphNumber:(unsigned long long)arg2;
- (void)didDragAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didEndRolloverOnAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didBeginRolloverOnAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
- (void)didClickAnnotation:(DVTAnnotation *)arg1 inTextSidebarView:(DVTTextSidebarView *)arg2 event:(NSEvent *)arg3;
@end

@protocol DVTTextFindable <NSObject>
- (DVTFindResult *)findStringMatchingDescriptor:(DVTFindDescriptor *)arg1 backwards:(BOOL)arg2 from:(DVTDocumentLocation *)arg3 to:(DVTDocumentLocation *)arg4;

@optional
@property unsigned long long supportedMatchingOptions;
- (long long)compareFindableLocation:(DVTDocumentLocation *)arg1 withLocation:(DVTDocumentLocation *)arg2;
@end

@protocol IDEDocumentStructureProviding <NSObject>
@property(readonly) NSArray *ideTopLevelStructureObjects;
@end

@protocol IDEKeyDrivenNavigableItemRepresentedObject <NSObject>
@property(readonly) NSString *navigableItem_name;

@optional
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) NSImage *navigableItem_image;
- (DVTDocumentLocation *)navigableItem_contentDocumentLocationInDocumentURL:(NSURL *)arg1;
@end

@protocol IDENavigableItemFileReferenceProxy <NSObject>
@property(readonly) IDENavigableItem *primaryChildItem;

@optional
- (BOOL)showSubitems;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSKeyedUnarchiverDelegate <NSObject>

@optional
- (void)unarchiverDidFinish:(NSKeyedUnarchiver *)arg1;
- (void)unarchiverWillFinish:(NSKeyedUnarchiver *)arg1;
- (void)unarchiver:(NSKeyedUnarchiver *)arg1 willReplaceObject:(id)arg2 withObject:(id)arg3;
- (id)unarchiver:(NSKeyedUnarchiver *)arg1 didDecodeObject:(id)arg2;
- (Class)unarchiver:(NSKeyedUnarchiver *)arg1 cannotDecodeObjectOfClassName:(NSString *)arg2 originalClasses:(NSArray *)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol SKFileSystemEventStreamDelegate <NSObject>
- (void)fileSystemEventStream:(SKFileSystemEventStream *)arg1 notedChangeAtPath:(NSString *)arg2 scanRecursively:(BOOL)arg3;

@optional
- (void)historyWrappedForFileSystemEventStream:(SKFileSystemEventStream *)arg1;
- (void)historyCompleteForFileSystemEventStream:(SKFileSystemEventStream *)arg1;
- (void)fileSystemEventStream:(SKFileSystemEventStream *)arg1 notedVolumeUnmount:(NSString *)arg2;
- (void)fileSystemEventStream:(SKFileSystemEventStream *)arg1 notedVolumeMount:(NSString *)arg2;
- (void)fileSystemEventStream:(SKFileSystemEventStream *)arg1 notedChangeOfRootPath:(NSString *)arg2;
@end

@protocol SKNodeWithShader <NSObject>
@property(retain, nonatomic) SKShader *shader;
@property(retain, nonatomic) NSURL *customSpriteShader;
@end

@interface CIFilter (Foo)
- (id)skDisplayName;
@end

@interface EditOverlayView : NSView
{
    BOOL _isMidCommand;
    SKScene *_pausePlaySceneCopy;
    SKNode *_selectedNode;
    NSMutableArray *_selectedNodes;
    NSMutableArray *_copiedNodes;
    BOOL _isTrackingTouch;
    BOOL _isPBDragging;
    BOOL _isObjectMoved;
    unsigned long long _mainTouchID;
    struct CGPoint _touchBeganPoint;
    struct CGPoint _touchPrevPoint;
    struct CGPoint _touchCurrentPoint;
    struct CGPoint _prevTouchInView;
    struct CGPoint _currTouchInView;
    struct CGColor *_grayColor;
    struct CGColor *_blueColor;
    struct CGColor *_blackColor;
    struct CGColor *_whiteColor;
    struct CGColor *_goldColor;
    struct CGColor *_snappingColor;
    struct CGColor *_selectionColor;
    struct CGColor *_selectionFillColor;
    struct CGContext *_ctx;
    struct CGPoint ll;
    struct CGPoint lm;
    struct CGPoint lr;
    struct CGPoint ml;
    struct CGPoint mm;
    struct CGPoint mr;
    struct CGPoint ul;
    struct CGPoint um;
    struct CGPoint ur;
    struct CGPoint rh;
    struct CGPoint ap;
    BOOL _drawingSelection;
    int _handleBeingManipulated;
    BOOL _snappingInX;
    BOOL _snappingInY;
    float _snapXValue;
    float _snapYValue;
    BOOL _isTrackingTwoFingerGesture;
    id _twoFingerGestureTouch1ID;
    struct CGPoint _prevTwoFingerGestureLocation;
    double _startRotation;
    struct CGPoint _startScale;
    struct CGSize _startSize;
    struct CGPoint _startPosition;
    struct CGPoint _startAnchorPoint;
    struct CGPoint _startYVec;
    struct CGPoint _startXVec;
    int _editorMode;
    struct PolyEditor _polyEditor;
    struct vector<NodeMovePair, std::__1::allocator<NodeMovePair>> _nodeMoveQueue;
    NSMenu *_rightClickContextMenu;
    int _touchMoveCount;
    NSMutableArray *_observedNodes;
    BOOL _firstCenter;
    BOOL _enabled;
    SKScene *_scene;
    SKEditView *_skEditView;
    SKDocumentViewController *_documentViewController;
}

+ (id)getEditOverlayViewModeDisplayName:(int)arg1;
@property int editorMode; // @synthesize editorMode=_editorMode;
@property(nonatomic) __weak SKDocumentViewController *documentViewController; // @synthesize documentViewController=_documentViewController;
@property(retain, nonatomic) NSArray *selectedNodes; // @synthesize selectedNodes=_selectedNodes;
@property(retain, nonatomic) SKNode *selectedNode; // @synthesize selectedNode=_selectedNode;
@property BOOL enabled; // @synthesize enabled=_enabled;
@property(nonatomic) __weak SKEditView *skEditView; // @synthesize skEditView=_skEditView;
@property(nonatomic) __weak SKScene *scene; // @synthesize scene=_scene;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)selectNodeAtTouchCurrentPoint;
- (void)unlockNodeAtTouchCurrentPoint;
- (void)lockSelectedNodes;
- (void)duplicate:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)delete:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)thunkPhysicsRecursive:(id)arg1;
- (void)didPerformActions;
- (void)resetPolygonEditor;
- (void)bringSelectedNodesToFront;
- (void)pushSelectedNodesToBack;
- (void)undoEvent:(id)arg1;
- (void)contextMenuAddNodePressed;
- (id)info:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)unobserveAllNodesAndChildren;
- (void)unobserveNode:(id)arg1;
- (void)observeNode:(id)arg1;
- (float)getGlobalZForNode:(id)arg1;
- (id)getNodeToSelectAtPoint:(struct CGPoint)arg1;
- (void)toggleSelectNode:(id)arg1;
- (void)deselectAllNodes;
- (void)deselectNode:(id)arg1;
- (void)selectNode:(id)arg1;
- (void)drawBoundsBox;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawSceneBounds;
- (void)drawNodeOverlayImageRecursive:(id)arg1;
- (void)drawParentChildLines;
- (void)drawSelectionRect;
- (void)drawSnapping;
- (void)drawHandleAt:(struct CGPoint)arg1 forNode:(id)arg2;
- (void)generateHandlePoints;
- (void)displayScene:(id)arg1;
- (void)drawAnchorPointHandle;
- (void)drawRotationHandle;
- (BOOL)point:(struct CGPoint)arg1 isWithinRadius:(double)arg2 ofPoint:(struct CGPoint)arg3;
- (void)togglePlayPause:(id)arg1;
- (BOOL)isClickingOnHandle:(struct CGPoint)arg1;
- (BOOL)isOpaque;
- (void)pan:(float)arg1 deltaY:(float)arg2;
- (void)restoreZoomToNative;
- (void)zoom:(float)arg1 towardScenePosition:(struct CGPoint)arg2;
- (void)zoom:(float)arg1;
- (void)doSnappingForNodeMovement:(id)arg1 lastPosition:(struct CGPoint)arg2;
- (void)doNodeSnappingToPoint:(id)arg1 sceneRect:(struct CGRect)arg2 targetValue:(float)arg3 axis:(int)arg4 side:(int)arg5 resultOut:(struct SnapResult *)arg6;
- (BOOL)wantsScrollEventsForSwipeTrackingOnAxis:(long long)arg1;
- (void)touchesCancelledWithEvent:(id)arg1;
- (void)touchesEndedWithEvent:(id)arg1;
- (void)touchesMovedWithEvent:(id)arg1;
- (void)touchesBeganWithEvent:(id)arg1;
- (void)rotateWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (void)stopAllActionsOnSelectedNodes;
- (void)rotateSelectedNodesCounterClockwise;
- (void)rotateSelectedNodesClockwise;
- (void)rightMouseDown:(id)arg1;
- (void)touchCancelled:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEndedPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEndedManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEnded:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedIKManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMovedManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMoved:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganIKManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganPolygon:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBeganManipulate:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBegan:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)keyDownPolygon:(id)arg1;
- (void)keyDownManipulate:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)keyUp:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)addNode:(id)arg1;
- (void)pasteCopiedNode:(id)arg1;
- (void)copySelectedNode:(id)arg1;
- (void)cutSelectedNode:(id)arg1;
- (void)duplicateSelectedNode:(id)arg1;
- (void)deleteSelectedNode:(id)arg1;
- (void)syncDocumentViewController:(id)arg1;
- (id)getSelectedOverlayImageForNode:(id)arg1;
- (id)getOverlayImageForNode:(id)arg1;
- (id)getOverlayTextColorForNodeName:(id)arg1;
- (void)endCommand;
- (void)beginCommand;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NSTableView (ShaderAttributeEditor)
- (void)scrollRowsToVisible:(id)arg1;
@end

@interface NodeInfo : NSObject
{
    CDStruct_76845b71 *_info;
}

@property CDStruct_76845b71 *info; // @synthesize info=_info;
- (void)dealloc;
- (id)init;

@end

@interface SKBitFlagGroupProperty : IDEInspectorProperty <NSTableViewDelegate>
{
}

- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKBitMask32Control : NSControl
{
    unsigned int _bitMask;
    id __target;
    SEL __action;
}

@property(nonatomic) SEL _action; // @synthesize _action=__action;
@property(nonatomic) id _target; // @synthesize _target=__target;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (int)calculateBitMaskIndex:(struct CGPoint)arg1;
- (void)mouseDragged:(id)arg1;
@property(nonatomic) unsigned int bitMask;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKColorRampControl : NSControl
{
    SKColorRampStop *_selectedStop;
    SKColorWell *_fakeColorWell;
    NSMutableArray *_stops;
    struct CGColor *_stopColor;
    struct CGColor *_selectedStopColor;
    struct CGColor *_bgColor;
    BOOL _didDragSelected;
    BOOL _shouldDeleteSelected;
    id _target;
    SEL _action;
    SKColorRampStop *_selectedColorStop;
}

@property(retain) SKColorRampStop *selectedColorStop; // @synthesize selectedColorStop=_selectedColorStop;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)displayKeyframeSequence:(id)arg1;
- (id)createKeyframeSequence;
- (id)colorStopAtLocation:(double)arg1;
- (void)removeColorStop:(id)arg1;
- (void)removeAllColorStops;
- (void)addColorStop:(id)arg1;
- (void)_sortColorStops;
- (id)colorStops;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)changeColor:(id)arg1;
- (double)_rampLocationOfPoint:(struct CGPoint)arg1;
- (struct CGRect)_colorRampRect;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)ensurePanelExclusive;
- (SEL)action;
- (id)target;
- (void)setAction:(SEL)arg1;
- (void)setTarget:(id)arg1;
- (void)deactivate;

@end

@interface SKColorRampStop : NSObject <NSCopying>
{
    double _location;
    NSColor *_color;
}

+ (id)stopWithColor:(id)arg1 location:(double)arg2;
@property(copy) NSColor *color; // @synthesize color=_color;
@property double location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copy;
- (id)init;

@end

@interface SKColorWell : NSColorWell
{
    id _delegate;
}

@property(retain) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)deactivate;

@end

@interface SKDocument : IDEEditorDocument <IDEDocumentStructureProviding, DVTTextFindable, NSKeyedUnarchiverDelegate>
{
    SKEditorRoot *_pseudoRoot;
    BOOL _pauseAttrObserver;
    NSObject<OS_dispatch_queue> *_syncQueue;
    SKEditorScene *_scene;
    id _editingTarget;
    SKDocumentViewController *_inspectionDocumentController;
}

+ (id)documentForNode:(id)arg1;
+ (void)removeDocumentInstance:(id)arg1;
+ (void)addDocumentInstance:(id)arg1;
+ (id)documents;
@property(nonatomic) __weak SKDocumentViewController *inspectionDocumentController; // @synthesize inspectionDocumentController=_inspectionDocumentController;
@property(readonly) id editingTarget; // @synthesize editingTarget=_editingTarget;
@property(readonly) SKEditorScene *scene; // @synthesize scene=_scene;
- (void).cxx_destruct;
- (void)setNewScene:(id)arg1;
- (void)setSceneSize:(struct CGSize)arg1;
- (BOOL)canSave;
@property(readonly) NSArray *ideTopLevelStructureObjects;
- (BOOL)writeToURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (void)refreshTexturesForScene:(id)arg1;
- (id)recreateTextureForName:(id)arg1;
- (id)reloadTextureFromFile:(id)arg1;
- (Class)unarchiver:(id)arg1 cannotDecodeObjectOfClassName:(id)arg2 originalClasses:(id)arg3;
- (void)stopUndoObservationsOf:(id)arg1;
- (void)startUndoObservationsOf:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)shouldPauseAttributeObserver;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (void)toggleAttributeObserverPause:(BOOL)arg1;
- (void)undoWithKVCUndoRecord:(id)arg1;
- (void)setupUndoManager:(id)arg1;
- (void)teardownUndoManager:(id)arg1;
- (void)editorDocumentWillClose;
- (void)prepareForDocumentClose;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property unsigned long long supportedMatchingOptions;

@end

@interface SKDocumentInspector : IDEInspectorViewController
{
}

- (id)uistring_sampleSection;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setContent:(id)arg1;

@end

@interface SKDocumentLocation : DVTDocumentLocation
{
    SKNode *_node;
}

@property(readonly) __weak SKNode *node; // @synthesize node=_node;
- (void).cxx_destruct;
- (id)description;
- (id)initWithDocumentURL:(id)arg1 withNode:(id)arg2;

@end

@interface SKDocumentNavigableItem : IDEKeyDrivenNavigableItem
{
}

+ (id)rootNavigableItemForNode:(id)arg1;
+ (void)removeRootNavigableItem:(id)arg1;
- (id)contentDocumentLocation;
- (BOOL)isLeaf;
- (id)documentType;
- (id)representedDocument;
- (id)representedNode;
- (id)initWithRepresentedObject:(id)arg1;
- (void)_setRepresentedObject:(id)arg1;

@end

@interface SKDocumentViewController : IDEEditor <DVTReplacementViewDelegate, DVTFindBarFindable, SKFileSystemEventStreamDelegate>
{
    NSButton *_pausePlayButton;
    NSTextField *_pausePlayTextField;
    NSButton *_zoomInButton;
    NSButton *_zoomRestoreButton;
    NSButton *_zoomOutButton;
    NSPopUpButton *_addPopupButton;
    SKToolbarBackgroundView *_toolbarBackgroundView;
    SKFileSystemEventStream *_eventStream;
    SKEditView *_mainView;
    EditOverlayView *_overlayView;
    NSArray *_currentSelectedItems;
}

+ (BOOL)canProvideCurrentSelectedItems;
@property(copy) NSArray *currentSelectedItems; // @synthesize currentSelectedItems=_currentSelectedItems;
@property(nonatomic) __weak EditOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) __weak SKEditView *mainView; // @synthesize mainView=_mainView;
- (void).cxx_destruct;
- (void)setToolbarBackgroundViewActive:(BOOL)arg1;
- (void)didEvaluateActionsOverride;
- (void)replaceDidEvaluateActions:(id)arg1;
- (void)buttonPressed:(id)arg1;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (void)takeFocus;
- (void)selectDocumentLocations:(id)arg1;
@property(readonly) SKDocument *document;
- (void)viewWillUninstall;
- (void)viewDidInstall;
- (void)receivedShaderSourceEditorStartedNotification:(id)arg1;
- (void)editorMenuSendToBack:(id)arg1;
- (void)editorMenuBringToFront:(id)arg1;
- (void)editorMenuTogglePlayPause:(id)arg1;
- (void)rebuildShaderForPath:(id)arg1 skipIfNoChange:(BOOL)arg2;
- (void)fileSystemEventStream:(id)arg1 notedChangeAtPath:(id)arg2 scanRecursively:(BOOL)arg3;
- (void)registerFSEvents;
- (id)currentSelectedDocumentLocations;
- (void)invalidateFSEvents;
- (id)_activeWorkspace;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKEditView : SKView
{
    unsigned long long _lastMouseEventModFlags;
    unsigned long long _lastEventFlag;
    unsigned long long _lastDragEventFlag;
    id _eventMonitor;
    struct CGPoint _lastTouchPoint;
    unsigned long long _lastTouchId;
    EditOverlayView *_overlayView;
    NSEvent *_lastMouseDownEvent;
    NSEvent *_lastMouseDragEvent;
}

@property(readonly) NSEvent *lastMouseDragEvent; // @synthesize lastMouseDragEvent=_lastMouseDragEvent;
@property(readonly) NSEvent *lastMouseDownEvent; // @synthesize lastMouseDownEvent=_lastMouseDownEvent;
@property unsigned long long lastMouseEventModFlags; // @synthesize lastMouseEventModFlags=_lastMouseEventModFlags;
@property(nonatomic) __weak EditOverlayView *overlayView; // @synthesize overlayView=_overlayView;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)draggingEnded:(id)arg1;
- (void)draggingExited:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (void)sendSelectedNodeToPasteboard:(struct CGPoint)arg1;
- (void)touchCancelled:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchEnded:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchMoved:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)touchBegan:(unsigned long long)arg1 location:(struct CGPoint)arg2 clickCount:(int)arg3;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKEditorRoot : NSObject <IDEKeyDrivenNavigableItemRepresentedObject>
{
    NSArray *_children;
}

@property(retain, nonatomic) NSArray *children; // @synthesize children=_children;
- (void).cxx_destruct;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;

@end

@interface SKEditorScene : SKScene
{
    float _oldXScale;
    float _oldYScale;
}

- (void)didChangeSize:(struct CGSize)arg1;

@end

@interface SKEffectNode (SKEffectNodeIntegration)
- (id)skInspectedAvailableFilters;
@end

@interface SKEmitterNode (InspectorAdditions) <SKNodeWithShader>
@property(retain, nonatomic) NSURL *customSpriteShader;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;
@property BOOL shouldShowParentInInspector;
@property(nonatomic) struct CGPoint previewParticlePosition;
@property(nonatomic) unsigned long long numParticlesToEmitWithAction;
@property(nonatomic) double particleRotationSpeedDeg;
@property(nonatomic) double particleRotationRangeDeg;
@property(nonatomic) double particleRotationDeg;
@property(nonatomic) double emissionAngleRangeDeg;
@property(nonatomic) double emissionAngleDeg;
@property(retain, nonatomic) NSColor *backgroundColor;
@property(retain, nonatomic) NSImage *particleTextureImage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) SKShader *shader;
@property(readonly) Class superclass;
@end

@interface SKFieldNode (InspectorAdditions)
@property(nonatomic) struct CGPoint skEditorDirection;
@end

@interface SKFileSystemEventStream : NSObject
{
    struct __FSEventStream *_eventStream;
    struct FSEventStreamContext _context;
    id <SKFileSystemEventStreamDelegate> _delegate;
    unsigned long long _lastEventProcessed;
    struct {
        unsigned int _notedChangeAtPath:1;
        unsigned int _notedChangeOfRootPath:1;
        unsigned int _notedVolumeMount:1;
        unsigned int _notedVolumeUnmount:1;
        unsigned int _historyComplete:1;
        unsigned int _historyWrapped:1;
        unsigned int _reserved:26;
    } _delegateFlags;
}

- (void).cxx_destruct;
- (unsigned long long)lastEventProcessed;
@property(retain) id <SKFileSystemEventStreamDelegate> delegate; // @synthesize delegate=_delegate;
- (void)flushSync;
- (void)flush;
- (void)stop;
- (void)start;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)invalidate;
- (id)initWithPaths:(id)arg1 watchRoot:(BOOL)arg2;
- (id)initWithPaths:(id)arg1 startingWithEvent:(unsigned long long)arg2 latency:(double)arg3 defer:(BOOL)arg4 watchRoot:(BOOL)arg5;
- (void)_processEvent:(unsigned long long)arg1 withFlags:(unsigned int)arg2 forPath:(id)arg3;
- (void)_processEvents:(const unsigned long long *)arg1 count:(unsigned long long)arg2 withFlags:(const unsigned int *)arg3 forPaths:(id)arg4;
- (struct __CFString *)_createCFRunLoopModeFromNSRunLoopMode:(id)arg1;
- (struct __CFRunLoop *)_getCFRunLoopFromNSRunLoop:(id)arg1;

@end

@interface SKGeniusResultsFinder : IDEIndexGeniusResultsFinder
{
}

+ (Class)editorDocumentClass;
- (id)_packagedGeniusResultsFromLocations:(id)arg1;
- (id)_geniusLocationsForViewObject:(id)arg1 inIndex:(id)arg2;
- (BOOL)_getUpdateGeniusResultsPhaseOneBlock:(CDUnknownBlockType *)arg1 phaseTwoBlock:(CDUnknownBlockType *)arg2 phaseThreeBlock:(CDUnknownBlockType *)arg3;
- (BOOL)doesNodeHaveShader:(id)arg1;
- (id)geniusCategoryIdentifier;

@end

@interface SKInspectorBitMask32Property : IDEInspectorProperty
{
    SKBitMask32Control *_bitMask32Control;
    IDEInspectorKeyPath *_valueKeyPath;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKInspectorColorProperty : IDEInspectorProperty
{
    NSColorWell *bgColorWell;
    IDEInspectorKeyPath *_valueKeyPath;
    NSColor *_defaultColor;
}

- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)refresh;
- (void)setupRefreshTriggersAndConfigure;
- (double)baseline;

@end

@interface SKInspectorColorRampProperty : IDEInspectorProperty
{
    SKColorRampControl *colorRampControl;
    IDEInspectorKeyPath *_valueKeyPath;
    NSArray *_representedObjs;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKInspectorNodeProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    IDEInspectorKeyPath *_valueKeyPath;
    IDEInspectorKeyPath *_sceneKeyPath;
    IDEInspectorKeyPath *_selectionKeyPath;
    NSArray *_sortedResults;
}

- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)comboBox;

@end

@interface SKInspectorResourceProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    NSArray *_availableTextureFiles;
    IDEInspectorKeyPath *_valueKeyPath;
}

+ (id)scannedTextureNames;
+ (id)parseAssetCatalogAtPath:(id)arg1;
+ (id)supportedFileTypes;
- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)comboBox;

@end

@interface SKInspectorShaderProperty : IDEInspectorProperty
{
    NSComboBox *_comboBox;
    NSArray *_availableShaderFiles;
    IDEInspectorKeyPath *_valueKeyPath;
}

+ (id)scannedShaderNames;
+ (id)supportedFileTypes;
- (void).cxx_destruct;
- (void)userDidChangeValue:(id)arg1;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (double)baseline;
- (id)comboBox;

@end

@interface SKInspectorThreeColumnsLayoutView : DVTLayoutView_ML
{
}

- (void)layoutBottomUp;
- (void)layoutTopDown;

@end

@interface SKInspectorVector2Property : IDEInspectorProperty
{
    DVTStepperTextField *xLabel;
    DVTStepperTextField *yLabel;
    NSTextField *xTextField;
    NSTextField *yTextField;
    IDEInspectorKeyPath *_valueKeyPath;
    IDEInspectorKeyPath *_xValueKeyPath;
    IDEInspectorKeyPath *_yValueKeyPath;
    NSString *_nilPlaceholder;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (void)applyUserSizeFromSender:(id)arg1 byMappingValues:(CDUnknownBlockType)arg2;
- (double)baseline;

@end

@interface SKInspectorVector3Property : IDEInspectorProperty
{
    DVTStepperTextField *xLabel;
    DVTStepperTextField *yLabel;
    DVTStepperTextField *zLabel;
    NSTextField *xTextField;
    NSTextField *yTextField;
    NSTextField *zTextField;
    IDEInspectorKeyPath *_xValueKeyPath;
    IDEInspectorKeyPath *_yValueKeyPath;
    IDEInspectorKeyPath *_zValueKeyPath;
    NSString *_nilPlaceholder;
}

- (void).cxx_destruct;
- (void)setupRefreshTriggersAndConfigure;
- (void)refresh;
- (void)userDidChangeValue:(id)arg1;
- (double)baseline;

@end

@interface SKKVCUndoRecord : NSObject
{
    NSString *_keyPath;
    id _object;
    id _value;
}

@property(readonly) id value; // @synthesize value=_value;
@property(readonly) id object; // @synthesize object=_object;
@property(readonly) NSString *keyPath; // @synthesize keyPath=_keyPath;
- (void).cxx_destruct;
- (id)initWithObject:(id)arg1 andValue:(id)arg2 forKeyPath:(id)arg3;

@end

@interface SKLabelNode (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject>
+ (id)keyPathsForValuesAffectingNavigableItem_name;
@property(retain, nonatomic) NSFont *ideFont;
@property(readonly) NSString *navigableItem_name;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface SKNode (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject>
+ (id)keyPathsForValuesAffectingNavigableItem_name;
- (id)ideModelObjectTypeIdentifier;
@property(readonly) NSString *navigableItem_name;
@property BOOL isLocked;
@property(nonatomic) double zRotationDeg;
@property(retain, nonatomic) SKNode *parentRef;
@property(readonly, nonatomic) __weak SKNode *selfRef;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface SKNode (SKNodeIntegration)
+ (id)keyPathsForValuesAffectingSkInspectedParticipatesInPhysics;
- (void)setSkInspectedParticipatesInPhysics:(BOOL)arg1;
- (BOOL)skInspectedParticipatesInPhysics;
- (id)skAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 insertionContext:(id)arg3;
- (BOOL)skToManyRelationSupportsInsertion:(id)arg1;
- (BOOL)skToManyRelationSupportsReplacement:(id)arg1;
- (BOOL)skCanAcceptContentsOfPasteboard:(id)arg1 inDocument:(id)arg2 targetChildRelation:(id *)arg3;
- (id)skDisplayNameForKeyPath:(id)arg1;
- (id)skChildRelationOrder;
- (id)skAllToOneRelationshipsKeyPaths;
- (id)skIntegratedKeyPaths;
- (id)skPasteboardTypes;
@end

@interface SKObjectLibraryAsset : NSObject <NSCoding>
{
    SKNode *_node;
    NSImage *_image;
    NSString *_title;
    NSString *_subtitle;
    NSString *_summary;
}

@property(copy) NSString *summary; // @synthesize summary=_summary;
@property(copy) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy) NSString *title; // @synthesize title=_title;
@property(retain) NSImage *image; // @synthesize image=_image;
@property(retain, nonatomic) SKNode *node; // @synthesize node=_node;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface SKObjectLibraryController : IDELibraryController
{
    NSMutableArray *_objectsForSKLibrary;
    NSMutableArray *_userObjectsForSKLibrary;
    BOOL _allowObjectLibrary;
}

- (void).cxx_destruct;
- (id)editorViewControllerForAsset:(id)arg1;
- (BOOL)canRemoveAsset:(id)arg1;
- (BOOL)canEditAsset:(id)arg1;
- (void)userDidEditAsset:(id)arg1;
- (BOOL)removeAssets:(id)arg1 error:(id *)arg2;
- (BOOL)createAsset:(id *)arg1 forLibrarySourceWithIdentifier:(id *)arg2 fromPasteboard:(id)arg3;
- (void)populatePasteboard:(id)arg1 withAssets:(id)arg2;
- (BOOL)canCreateAssetsFromPasteboard:(id)arg1 targetingLibrarySourceIdentifier:(id *)arg2;
- (id)readableAssetPasteboardTypes;
- (void)libraryDidLoad;
- (id)createLibraryAssetForNode:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5 withUDID:(id)arg6;
- (id)createLibraryAssetForNode:(id)arg1 title:(id)arg2 subTitle:(id)arg3 summary:(id)arg4 image:(id)arg5;
- (void)activeEditorDocumentDidChange:(id)arg1;
- (void)populateObjectLibrary;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SKObjectLibraryDetailViewController : DVTLibraryDetailEditorController
{
}

- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SKScene (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject, SKNodeWithShader>
@property(retain, nonatomic) NSURL *customSpriteShader;
@property(nonatomic) struct CGPoint spriteKitEditorGravity;
@property(nonatomic) BOOL nodeNameDrawEnabled;
@property(nonatomic) BOOL physicsDrawEnabled;
@property(nonatomic) struct CGSize skEditorSize;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_name;
@property(readonly) NSString *navigableItem_toolTip;
@property(retain, nonatomic) SKShader *shader;
@property(readonly) Class superclass;
@end

@interface SKScene (InvisibleNode)
- (id)nodeAtPointInEditor:(struct CGPoint)arg1;
@end

@interface SKShaderAnnotationProvider : DVTAnnotationProvider <DVTTextAnnotationDelegate>
{
    IDEAnnotationContext *_context;
    IDEWorkspaceWindowController *_workspaceWindowController;
}

+ (id)annotationProviderForContext:(id)arg1 error:(id *)arg2;
@property(readonly) IDEAnnotationContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)providerWillUninstall;
- (id)_documentURL;
- (void)_removeAnnotation:(id)arg1;
- (id)generateShaderCompilationAnnotation:(int)arg1 String:(id)arg2 AtLine:(struct _NSRange)arg3;
- (void)receivedShaderBuildLogNotification:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKShaderAttributeTypeDescription : NSObject
{
    id _defaultValue;
    NSString *_name;
    long long _uniformType;
}

+ (id)customAttributeType:(long long)arg1 name:(id)arg2 defaultValue:(id)arg3;
@property(readonly) long long uniformType; // @synthesize uniformType=_uniformType;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) id defaultValue; // @synthesize defaultValue=_defaultValue;
- (void).cxx_destruct;
- (id)initWithType:(long long)arg1 name:(id)arg2 defaultValue:(id)arg3;

@end

@interface SKShaderAttributesInspector : IDEInspectorViewController <NSTableViewDelegate>
{
    NSDictionary *_customAttributeTypes;
    NSButton *_removeButton;
    BOOL _editSelectedRowAfterRefresh;
    DVTObservingToken *_selectionObserver;
    BOOL _reloadingData;
    NSIndexSet *_rowIndexesToSelectAfterRefresh;
    NSSet *_draggedAttributes;
    NSArray *_userDefinedRuntimeAttributes;
    NSString *_currentPasteboardDragMarker;
    IDEControlGroup *_controlGroup;
    DVTBorderedView *_controlBar;
    NSTableView *_attributesTableView;
    NSMenu *_typeMenu;
    SKNode<SKNodeWithShader> *_editingSprite;
}

+ (BOOL)supportsMultipleObjectInspection;
+ (void)rebuildShaderForSprite:(id)arg1 skipIfNoChange:(BOOL)arg2;
+ (void)postShaderCompilationLog:(id)arg1 path:(id)arg2;
@property(nonatomic) __weak SKNode<SKNodeWithShader> *editingSprite; // @synthesize editingSprite=_editingSprite;
@property(retain, nonatomic) NSMenu *typeMenu; // @synthesize typeMenu=_typeMenu;
@property(retain, nonatomic) NSTableView *attributesTableView; // @synthesize attributesTableView=_attributesTableView;
@property(retain, nonatomic) DVTBorderedView *controlBar; // @synthesize controlBar=_controlBar;
@property(retain, nonatomic) IDEControlGroup *controlGroup; // @synthesize controlGroup=_controlGroup;
@property(nonatomic, getter=isReloadingData) BOOL reloadingData; // @synthesize reloadingData=_reloadingData;
@property(copy, nonatomic) NSString *currentPasteboardDragMarker; // @synthesize currentPasteboardDragMarker=_currentPasteboardDragMarker;
@property(copy, nonatomic) NSArray *userDefinedRuntimeAttributes; // @synthesize userDefinedRuntimeAttributes=_userDefinedRuntimeAttributes;
@property(copy, nonatomic) NSSet *draggedAttributes; // @synthesize draggedAttributes=_draggedAttributes;
@property(retain, nonatomic) NSIndexSet *rowIndexesToSelectAfterRefresh; // @synthesize rowIndexesToSelectAfterRefresh=_rowIndexesToSelectAfterRefresh;
- (void).cxx_destruct;
- (void)tableViewSelectionDidChange:(id)arg1;
- (BOOL)tableView:(id)arg1 removeRowsWithIndexes:(id)arg2;
- (BOOL)tableView:(id)arg1 canRemoveRowsWithIndexes:(id)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)editTexture:(id)arg1;
- (void)editValue:(id)arg1;
- (void)editType:(id)arg1;
- (void)editUniformName:(id)arg1;
- (void)editAttributeForSender:(id)arg1 editBlock:(CDUnknownBlockType)arg2;
- (void)doubleClickedTableView:(id)arg1;
- (void)removeUserDefinedRuntimeAttribute:(id)arg1;
- (void)insertUserDefinedRuntimeAttribute:(id)arg1;
- (id)newShaderUniformFromType:(long long)arg1 Value:(id)arg2 Name:(id)arg3;
- (void)refreshRemoveButtonEnabledState;
- (id)selectedAttributes;
- (id)defaultType;
- (id)userDefinedRuntimeAttributeTypeForTypeIdentifier:(long long)arg1;
- (id)customAttributeTypes;
- (void)reloadTableViewDataIgnoringEditingActions;
- (id)contentLayoutView;
- (void)setContent:(id)arg1;
- (void)didSetInspectedObjects:(id)arg1;
- (void)loadView;
- (void)setupControlBarAfterLoading;
- (void)primitiveInvalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKShaderAttributesInspectorLayoutView : DVTLayoutView_ML
{
    NSTableView *_tableView;
    DVTBorderedView *_bottomBar;
    SKShaderAttributesInspector *_inspector;
}

@property(retain, nonatomic) SKShaderAttributesInspector *inspector; // @synthesize inspector=_inspector;
@property(retain, nonatomic) DVTBorderedView *bottomBar; // @synthesize bottomBar=_bottomBar;
@property(retain, nonatomic) NSTableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)awakeFromNib;
- (void)layoutBottomUp;
- (void)layoutTopDown;
- (struct CGSize)preferredTableViewSize;

@end

@interface SKShaderAttributesInspectorTypeCellView : NSTableCellView
{
    NSPopUpButton *_popUpButton;
}

@property(retain, nonatomic) NSPopUpButton *popUpButton; // @synthesize popUpButton=_popUpButton;
- (void).cxx_destruct;

@end

@interface SKShapeNode (InspectorAdditions) <IDEKeyDrivenNavigableItemRepresentedObject>
+ (id)keyPathsForValuesAffectingZRotationDeg;
@property(retain, nonatomic) NSImage *fillTextureImage;
@property(retain, nonatomic) NSImage *strokeTextureImage;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTDocumentLocation *navigableItem_contentDocumentLocation;
@property(readonly) DVTFileDataType *navigableItem_documentType;
@property(readonly) IDEFileReference *navigableItem_fileReference;
@property(readonly) NSString *navigableItem_groupIdentifier;
@property(readonly) NSImage *navigableItem_image;
@property(readonly) BOOL navigableItem_isLeaf;
@property(readonly) BOOL navigableItem_isMajorGroup;
@property(readonly) NSString *navigableItem_name; // @dynamic navigableItem_name;
@property(readonly) NSString *navigableItem_toolTip;
@property(readonly) Class superclass;
@end

@interface SKSpriteNode (InspectorAdditions) <SKNodeWithShader>
+ (id)keyPathsForValuesAffectingZRotationDeg;
+ (id)keyPathsForValuesAffectingHasPhysicsBody;
- (id)ide_undoKVOKeypaths;
- (void)setNilValueForKey:(id)arg1;
- (id)inspectorAttributes;
@property(nonatomic) double IKConstraintMaxAngle;
@property(nonatomic) double IKConstraintMinAngle;
@property(nonatomic) double normalMapContrast;
@property(nonatomic) double normalMapSmoothness;
- (void)refreshNormalMap;
- (void)setNormalMapImage:(id)arg1;
- (id)normalMapImage;
@property(retain, nonatomic) NSURL *customSpriteShader;
@property(nonatomic) float spriteKitEditorMass;
@property(nonatomic) double physicsBodyAngularDamping;
@property(nonatomic) double physicsBodyLinearDamping;
@property(nonatomic) double physicsBodyRestitution;
@property(nonatomic) double physicsBodyFriction;
@property(nonatomic) BOOL physicsBodyAffectedByGravity;
@property(nonatomic) BOOL physicsBodyPinned;
@property(nonatomic) BOOL physicsBodyAllowsRotation;
@property(nonatomic) BOOL physicsBodyDynamicType;
@property(retain, nonatomic) NSNumber *skEditorShadowedBitMask;
@property(retain, nonatomic) NSNumber *skEditorShadowCastBitMask;
@property(retain, nonatomic) NSNumber *skEditorLightingBitMask;
@property(retain, nonatomic) NSNumber *skEditorFieldMask;
@property(retain, nonatomic) NSNumber *skEditorCollisionMask;
@property(retain, nonatomic) NSNumber *skEditorCategoryMask;
@property(nonatomic) int physicsBodyType;
@property(retain, nonatomic) NSImage *textureImage;
- (BOOL)hasPhysicsBody;
@property(retain, nonatomic) SKNode *parentRef;
@property(readonly, nonatomic) __weak SKNode *selfRef;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) SKShader *shader;
@property(readonly) Class superclass;
@end

@interface SKSpriteNode (SKSpriteNodeIntegration)
@end

@interface SKTextConversionProvider : NSObject <DVTDiffTextFilter>
{
}

+ (id)convertNode:(id)arg1;
+ (BOOL)filterInputFilePath:(id)arg1 toOutputFilePath:(id)arg2 error:(id *)arg3;
+ (id)pathToTextFileFromInputFilePath:(id)arg1 error:(id *)arg2;
+ (id)textFileDataTypeForInputFilePath:(id)arg1;
+ (BOOL)pathRequiresFilter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKTextureComboBox : NSComboBox
{
}

- (BOOL)usesDataSource;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKToolbarBackgroundView : NSView
{
    struct CGContext *_ctx;
    struct CGColor *_greyColor;
    struct CGColor *_blueColor;
    BOOL _isActive;
}

- (void)setActive:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUniform (ShaderAttributeEditor)
- (id)toStringRepresentation;
@end

@interface SKVelocityFieldNode (InspectorAdditions)
@property(nonatomic) struct CGPoint skEditorVelocity;
@end

