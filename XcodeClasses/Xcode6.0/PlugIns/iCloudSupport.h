//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/PlugIns/iCloudSupport.ideplugin/Contents/MacOS/iCloudSupport
// UUID: 946F0F12-7E4D-32C4-9F54-4BC787B5681E
//
//                           Arch: x86_64
//                Current version: 6244.0.0
//          Compatibility version: 1.0.0
//                 Source version: 6244.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DVTInvalidation <NSObject>
- (void)primitiveInvalidate;

@optional
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly, nonatomic, getter=isValid) BOOL valid;
- (void)invalidate;
@end

@protocol IDEBuildSettingsProvider <NSObject>
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString<DVTMacroExpansion> *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString<DVTMacroExpansion> *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;
@end

@protocol IDEBuildable <IDEBuildSettingsProvider, DVTInvalidation, NSObject>
@property(readonly, copy) NSString *legacyIdentifier;
@property(readonly) NSSet *pathsOfFilesInCopyFilesBuildPhases;
@property(readonly) NSSet *pathsOfFilesInLinkedBinariesPhase;
@property(readonly) NSSet *namesOfLinkedBinaries;
@property(readonly) BOOL hasRecursiveDependencyCycle;
@property(readonly) NSString *toolTip;
@property(readonly) NSString *displayName;
@property(readonly) id <IDEBlueprint> blueprint;
@property(readonly, copy) IDEEntityIdentifier *entityIdentifier;
@property(readonly, copy) NSString *buildableIdentifier;
- (IDEBuilder *)createBuilderForBuildCommand:(int)arg1 withBuildTaskQueueSet:(IDEBuildOperationQueueSet *)arg2 parameters:(IDEBuildParameters *)arg3 buildOnlyTheseFiles:(NSArray *)arg4 restorePersistedBuildResults:(BOOL)arg5 withManager:(id <IDEBuildableOperationManager>)arg6;
- (NSArray *)implicitDependenciesForBuildParameters:(IDEBuildParameters *)arg1 executionEnvironment:(IDEExecutionEnvironment *)arg2 returningMessages:(id *)arg3;
- (NSArray *)directDependencies;
- (NSArray *)uncachedOrderedRecursiveDependenciesIncludingSelf:(BOOL)arg1 visitedBuildables:(NSMutableSet *)arg2;
- (NSArray *)orderedRecursiveDependenciesIncludingSelf:(BOOL)arg1;
- (DVTSearchPath *)toolSearchPathWithBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)absolutePathByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)stringByEvaluatingBuildSettingExpressionString:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)evaluatedStringListValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSString *)evaluatedStringValueForBuildSetting:(NSString *)arg1 withBuildParameters:(IDEBuildParameters *)arg2;
- (NSArray *)allBuildSettingNamesWithBuildParameters:(IDEBuildParameters *)arg1;

@optional
- (Class)buildOperationManagerClass;
@end

@protocol IDEBuildableProduct <IDEBuildable>
@property(readonly) NSDictionary *copiedFilePathsMap;
@property(readonly) BOOL productIsExecutable;
@property(readonly) NSDictionary *productSettings;
@property(readonly) NSString *iconPath;
@property(readonly, copy) DVTFileDataType *fileDataType;
@property(readonly) DVTFilePath *filePath;
- (DVTFilePath *)filePathForBuildParameters:(IDEBuildParameters *)arg1;
- (NSString *)productTypeIdentifier;
@end

@protocol IDECommandHandler <NSObject, NSUserInterfaceValidations>
@end

@protocol IDECommandHandlerVendor <NSObject>
+ (id <IDECommandHandler>)handlerForAction:(SEL)arg1 withSelectionSource:(id <IDESelectionSource>)arg2;
@end

@protocol IDEDebugGaugeReportContentDelegate <NSObject>
- (BOOL)hasDefaultTopSection;

@optional
- (void)addSectionsToView:(DVTStackView_AppKitAutolayout *)arg1;
@end

@protocol IDEDebugGaugeReportTopSectionContentDelegate <NSObject>
- (NSString *)topSectionTitle;

@optional
- (NSArray *)topSectionComponentEntries;
- (NSArray *)topSectionSubDescriptionViews;
- (NSView *)topSectionAccessoryView;
- (NSView *)topSectionDescription;
- (NSArray *)topSectionDescriptionEntries;
- (NSView *)topSectionShortDescription;
- (NSView *)topSectionCenterTitleAccessoryView;
- (NSView *)topSectionTitleAccessoryView;
- (NSString *)topSectionShortDescriptionTitle;
- (NSImage *)topSectionImage;
@end

@protocol IDEDebuggingAddition <NSObject, DVTInvalidation>
@property(readonly) NSString *identifier;
@property(readonly, nonatomic) IDELaunchSession *launchSession;
- (id)initInLaunchSession:(IDELaunchSession *)arg1 withAppDisplayName:(NSString *)arg2 runDestination:(IDERunDestination *)arg3 fromExtension:(DVTExtension *)arg4;

@optional
+ (BOOL)shouldInstantiateInLaunchSession:(IDELaunchSession *)arg1;
- (void)processFinalLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
- (IDELaunchParametersSnapshot *)adjustedLaunchParametersForLaunchParameters:(IDELaunchParametersSnapshot *)arg1;
@end

@protocol IDEDebuggingAdditionUIController <NSObject, DVTInvalidation>
- (DVTExtension *)extension;
- (id)initWithWorkspaceTabController:(IDEWorkspaceTabController *)arg1 withDebuggingAddition:(id <IDEDebuggingAddition>)arg2 forExtension:(DVTExtension *)arg3;

@optional
- (void)openSelectedNavigableItem:(id)arg1 withEventType:(unsigned long long)arg2;
- (IDELaunchSession *)launchSessionForSelectedRepresentedObject:(id)arg1;
- (NSCell *)trayCellForNavigationProcessHeader;
- (BOOL)wantsTrayAreaForNavigationProcessHeader;
- (NSMenu *)debugSubmenu;
- (BOOL)shouldReplaceDebugSubmenu;
@end

@protocol IDEGraphDelegate <NSObject>
- (NSColor *)colorForChartNamed:(NSString *)arg1;

@optional
- (void)userMouseExitedGraph:(id)arg1 event:(NSEvent *)arg2;
- (void)userMousedOverOnGraphEntry:(id)arg1 event:(NSEvent *)arg2;
- (void)userClickedOnGraphEntry:(id)arg1;
- (NSColor *)borderColorForBorder:(NSColor *)arg1;
- (NSGradient *)gradientForColor:(NSColor *)arg1;
- (NSString *)translateValue:(NSNumber *)arg1 keypath:(NSString *)arg2;
- (NSColor *)colorForEntryValue:(NSNumber *)arg1;
@end

@protocol IDEInitialization
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
@end

@protocol NSNetServiceBrowserDelegate <NSObject>

@optional
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didRemoveDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindService:(NSNetService *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didFindDomain:(NSString *)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(NSNetServiceBrowser *)arg1 didNotSearch:(NSDictionary *)arg2;
- (void)netServiceBrowserDidStopSearch:(NSNetServiceBrowser *)arg1;
- (void)netServiceBrowserWillSearch:(NSNetServiceBrowser *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSUserInterfaceValidations
- (BOOL)validateUserInterfaceItem:(id <NSValidatedUserInterfaceItem>)arg1;
@end

@protocol iCloudClientConnectionDelegate <NSObject>

@optional
- (void)connection:(iCloudClientConnection *)arg1 processInput:(const char *)arg2 length:(unsigned long long)arg3;
- (void)connection:(iCloudClientConnection *)arg1 didCloseWithError:(NSError *)arg2;
- (void)connection:(iCloudClientConnection *)arg1 willCloseWithError:(NSError *)arg2;
@end

@protocol iCloudItem <NSObject>
@property(readonly, nonatomic) double uploadProgress;
@property(readonly, nonatomic) double downloadProgress;
@property(readonly, nonatomic, getter=isUploading) BOOL uploading;
@property(readonly, nonatomic, getter=isDownloading) BOOL downloading;
@property(nonatomic) BOOL wasUploading;
@property(nonatomic) BOOL wasDownloading;
@property(nonatomic) unsigned long long lastSizeDuringUploading;
@property(nonatomic) unsigned long long lastSizeDuringDownloading;
@property(readonly, nonatomic) NSString *localType;
@property(readonly, nonatomic) NSImage *icon;
@property(readonly, nonatomic) unsigned long long status;
@property(readonly, nonatomic) NSDate *modified;
@property(readonly, nonatomic) NSArray *losers;
@property(readonly, nonatomic) NSNumber *conflictToken;
@property(readonly, nonatomic) BOOL conflicted;
@property(readonly, nonatomic) NSString *peerName;
@property(readonly, nonatomic) NSNumber *peerID;
@property(readonly, nonatomic) NSString *signature;
@property(readonly, nonatomic) NSNumber *size;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) BOOL onlyEmbedded;
@property(readonly, nonatomic) BOOL pending;
@property(readonly, nonatomic) BOOL deleted;
@property(readonly, nonatomic) BOOL inCloud;
@property(readonly, nonatomic) NSNumber *changeID;
@property(readonly, nonatomic) NSString *type;
@property(readonly, nonatomic) NSNumber *parentItemID;
@property(readonly, nonatomic) NSNumber *itemID;
@property(readonly, nonatomic) NSURL *iCloudURL;
@property(readonly, nonatomic) NSURL *localURL;
@property(readonly, nonatomic) __weak id <iCloudItemProvider> itemProvider;
- (NSString *)ubiquityRootPath;
- (iCloudItem *)ubiquityRoot;
- (NSString *)ubiquityRelativePath;
- (NSString *)ubiquityContainer;
- (iCloudItem *)parentItem;
- (BOOL)isRootItem;
- (BOOL)isContainer;
- (BOOL)isPackage;
- (BOOL)isFile;
- (BOOL)isFolder;
- (NSArray *)children;
- (void)childrenWithCompletionBlock:(void (^)(NSArray *, BOOL, NSError *))arg1;
- (void)faultWithCompletionBlock:(void (^)(NSError *))arg1;
@end

@protocol iCloudItemProvider <NSObject>
- (void)childrenOfParent:(id <iCloudItem>)arg1 includeDeleted:(BOOL)arg2 completionBlock:(void (^)(NSArray *, NSError *))arg3;
- (void)removeItemFromCache:(id <iCloudItem>)arg1;
- (id <iCloudItem>)addItemToCache:(id <iCloudItem>)arg1;
- (id <iCloudItem>)cachedItemForLocalURL:(NSURL *)arg1 createIfNeeded:(BOOL)arg2;
- (id <iCloudItem>)rootItem;
- (BOOL)hasCachedItemForLocalURL:(NSURL *)arg1;
@end

@protocol iCloudMonitorLineProcessor
- (void)monitor:(iCloudMonitor *)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(NSString *)arg3 forToken:(NSString *)arg4 responseContinues:(BOOL)arg5;
@end

@protocol iCloudServiceObserver
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 didDisconnectDevice:(DVTDevice *)arg2;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 didConnectDevice:(DVTDevice *)arg2;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 serviceAccountChanged:(NSDictionary *)arg2 onDevice:(DVTDevice *)arg3;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 serviceStatusChanged:(int)arg2 onDevice:(DVTDevice *)arg3;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 item:(id <iCloudItem>)arg2 didDownloadBytes:(long long)arg3 of:(long long)arg4 forDevice:(DVTDevice *)arg5;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 item:(id <iCloudItem>)arg2 didUploadBytes:(long long)arg3 of:(long long)arg4 forDevice:(DVTDevice *)arg5;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 movedItem:(id <iCloudItem>)arg2 from:(NSURL *)arg3 to:(NSURL *)arg4 onDevice:(DVTDevice *)arg5;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 removedItem:(id <iCloudItem>)arg2 fromDevice:(DVTDevice *)arg3;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 addedItem:(id <iCloudItem>)arg2 toDevice:(DVTDevice *)arg3;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 item:(id <iCloudItem>)arg2 sizeChanged:(long long)arg3 onDevice:(DVTDevice *)arg4;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 item:(id <iCloudItem>)arg2 statusChanged:(unsigned long long)arg3 onDevice:(DVTDevice *)arg4;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 fetchedInitialItems:(NSArray *)arg2 fromDevice:(DVTDevice *)arg3;
- (void)iCloudServiceCenter:(iCloudServiceCenter *)arg1 didReceiveAccountInformation:(NSDictionary *)arg2 fromDevice:(DVTDevice *)arg3;
@end

@protocol iCloudUIDelegate <NSObject>
- (void)iCloud:(iCloud *)arg1 needsAppleIDAndPasswordWithCompletionBlock:(void (^)(unsigned char, NSString *, NSString *, void (^)(NSError *)))arg2;
@end

@interface IDESimulateLocationMacService : IDESimulateLocationService <iCloudMonitorLineProcessor>
{
}

- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;
- (BOOL)simulateLocationWithLatitude:(id)arg1 longitude:(id)arg2 error:(id *)arg3;
- (BOOL)stopLocationSimulationWithError:(id *)arg1;
- (id)initForDevice:(id)arg1 extension:(id)arg2 capability:(id)arg3;

@end

@interface NSData (ASBase64)
+ (id)iCloud_dataWithEncodedString:(id)arg1 error:(id *)arg2;
- (id)iCloud_initWithCompressedData:(id)arg1;
- (id)iCloud_compressedData;
- (id)iCloud_initWithEncodedString:(id)arg1 error:(id *)arg2;
- (id)iCloud_encodedStringWithLineBreakAtPosition:(long long)arg1;
- (id)iCloud_encodedString;
@end

@interface NSDictionary (iCloudExtensions)
- (id)icloud_queryString;
- (id)icloud_jsonDataWithError:(id *)arg1;
@end

@interface NSNetService (Key)
- (id)key;
@end

@interface NSRecursiveLock (iCloudExtensions)
- (BOOL)iCloud_tryBeforeDate:(id)arg1 lockedBlock:(CDUnknownBlockType)arg2;
- (BOOL)iCloud_tryLockedBlock:(CDUnknownBlockType)arg1;
- (void)iCloud_performLockedBlock:(CDUnknownBlockType)arg1;
@end

@interface NSString (iCloudExtensions)
- (id)iCloud_stringByStandardizingPath;
@end

@interface NSURL (iCloudExtensions)
- (id)iCloud_URLByStandardizingPath;
@end

@interface iCloud : NSObject
{
    NSString *_userAgent;
    NSString *_host;
    NSString *_originHost;
    id <iCloudUIDelegate> _delegate;
    NSString *_appleID;
    NSDictionary *_information;
    NSString *_loginSalt;
    NSString *_appleIDHash;
    NSArray *_cookies;
    NSMutableArray *_loginCompletionBlocks;
    NSRecursiveLock *_loginCompletionBlocksLock;
    iCloudUbiquityService *_ubiquityService;
}

+ (id)keyPathsForValuesAffectingAuthenticated;
@property(retain, nonatomic) iCloudUbiquityService *ubiquityService; // @synthesize ubiquityService=_ubiquityService;
@property(retain, nonatomic) NSRecursiveLock *loginCompletionBlocksLock; // @synthesize loginCompletionBlocksLock=_loginCompletionBlocksLock;
@property(retain, nonatomic) NSMutableArray *loginCompletionBlocks; // @synthesize loginCompletionBlocks=_loginCompletionBlocks;
@property(retain, nonatomic) NSArray *cookies; // @synthesize cookies=_cookies;
@property(retain, nonatomic) NSString *appleIDHash; // @synthesize appleIDHash=_appleIDHash;
@property(retain, nonatomic) NSString *loginSalt; // @synthesize loginSalt=_loginSalt;
@property(retain, nonatomic) NSDictionary *information; // @synthesize information=_information;
@property(readonly, nonatomic) NSString *appleID; // @synthesize appleID=_appleID;
@property(nonatomic) __weak id <iCloudUIDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *originHost; // @synthesize originHost=_originHost;
@property(readonly, nonatomic) NSString *host; // @synthesize host=_host;
@property(retain, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
- (void).cxx_destruct;
- (void)logoutUserWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)loginUserWithAppleID:(id)arg1 password:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)validateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)ubiquityURL;
- (id)streamsURL;
- (id)remindersURL;
- (id)pushURL;
- (id)notesURL;
- (id)mailURL;
- (id)keyValueURL;
- (id)findMeURL;
- (id)contactsURL;
- (id)calendarURL;
- (id)accountURL;
- (id)errorFromResponse:(id)arg1;
- (void)_checkLoginAndPossiblyRunLoginUI:(BOOL)arg1 andThenRunBlock:(CDUnknownBlockType)arg2;
- (void)_reportNoUserError:(id)arg1;
- (void)_callErrorBlocks:(id)arg1 withError:(id)arg2;
- (void)_checkLoginSaltAndThenRunBlock:(CDUnknownBlockType)arg1;
- (void)performRequestWithURLGenerator:(CDUnknownBlockType)arg1 bodyGenerator:(CDUnknownBlockType)arg2 method:(id)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;
- (void)performRequestWithURLGenerator:(CDUnknownBlockType)arg1 bodyGenerator:(CDUnknownBlockType)arg2 method:(id)arg3 withDataHandler:(CDUnknownBlockType)arg4;
- (id)requestWithURLGenerator:(CDUnknownBlockType)arg1 bodyGenerator:(CDUnknownBlockType)arg2 method:(id)arg3 error:(id *)arg4;
- (id)basicURLForCommand:(id)arg1 parameters:(id)arg2;
- (void)_computeAppleIDHash;
- (id)_computeAppleIDHashForAppleID:(id)arg1;
- (id)directoryServicesID;
@property(readonly, nonatomic, getter=isAuthenticated) BOOL authenticated;
- (id)init;
- (BOOL)setAppleID:(id)arg1 andPassword:(id)arg2 error:(id *)arg3;
- (BOOL)getAppleID:(id *)arg1 andPassword:(id *)arg2 error:(id *)arg3;
- (BOOL)getAppleID:(id *)arg1 andPassword:(id *)arg2 securityItem:(struct OpaqueSecKeychainItemRef **)arg3 error:(id *)arg4;
- (id)appleIDPreferencesKey;

@end

@interface iCloudActivityDocument : IDEDebugGaugeReportDocument
{
    unsigned char _type;
    iCloudController *_controller;
}

@property(nonatomic) unsigned char type; // @synthesize type=_type;
@property(nonatomic) __weak iCloudController *controller; // @synthesize controller=_controller;
- (void).cxx_destruct;
- (id)displayName;
- (void)editorDocumentDidClose;
- (BOOL)readFromURL:(id)arg1 ofType:(id)arg2 error:(id *)arg3;

@end

@interface iCloudActivityEditor : IDEDebugGaugeReportEditor <IDEDebugGaugeReportContentDelegate, IDEDebugGaugeReportTopSectionContentDelegate, DVTInvalidation>
{
    iCloudHeaderViewController *_headerViewController;
    iCloudPerformanceViewController *_transferActivityViewController;
    iCloudDocumentsViewController *_documentsViewController;
    IDEDebugGaugeReportSection *_transferActivitySection;
    IDEDebugGaugeReportSection *_documentsSection;
    NSMutableSet *_observationTokens;
    long long _availableStorage;
    DVTDevice *_currentDevice;
    double _lastUpdated;
    double _updateInterval;
}

@property(nonatomic) double updateInterval; // @synthesize updateInterval=_updateInterval;
@property(nonatomic) double lastUpdated; // @synthesize lastUpdated=_lastUpdated;
@property(retain, nonatomic) DVTDevice *currentDevice; // @synthesize currentDevice=_currentDevice;
@property long long availableStorage; // @synthesize availableStorage=_availableStorage;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)topSectionTitleAccessoryView;
- (id)topSectionComponentEntries;
- (id)topSectionTitle;
- (void)addSectionsToView:(id)arg1;
- (BOOL)hasDefaultTopSection;
- (void)updateLoggedInAccount;
- (id)subtitleString;
- (id)controller;
- (id)activityDocument;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 document:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface iCloudActivityLogProvider : IDELogProvider <DVTInvalidation>
{
    IDEWorkspace *_workspace;
    IDELogStore *_logStore;
}

+ (id)keyPathsForValuesAffectingLogRecords;
+ (id)logSectionForUUID:(id)arg1;
+ (id)logSectionForURL:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) IDELogStore *logStore; // @synthesize logStore=_logStore;
@property(readonly, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)domainIdentifier;
- (id)ideModelObjectTypeIdentifier;
- (id)logRecords;
- (id)initWithDomainItem:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface iCloudActivityLogRecord : IDEActivityLogRecord
{
    double _startTime;
    double _stopTime;
    iCloudActivityLogSection *_logSection;
}

@property(retain, nonatomic) iCloudActivityLogSection *logSection; // @synthesize logSection=_logSection;
@property(nonatomic) double stopTime; // @synthesize stopTime=_stopTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
- (void).cxx_destruct;
- (id)fullLogIfInMemory;
- (id)fullLogWithError:(id *)arg1;
- (void)removeSelfWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)isRemoved;
- (BOOL)isRecording;
- (id)highLevelStatus;
- (id)signature;
- (id)documentType;
- (double)timeStoppedRecording;
- (double)timeStartedRecording;
- (id)title;
- (id)domainType;
- (id)uniqueIdentifier;
- (id)init;

@end

@interface iCloudActivityLogSection : IDEActivityLogSection
{
    iCloudActivityLogProvider *_logProvider;
}

+ (id)defaultLogSectionDomainType;
@property(nonatomic) __weak iCloudActivityLogProvider *logProvider; // @synthesize logProvider=_logProvider;
- (void).cxx_destruct;
- (BOOL)isRecording;
- (id)navigableItem_documentType;
- (id)initLogWithTitle:(id)arg1;

@end

@interface iCloudBrowser : NSObject <NSNetServiceBrowserDelegate>
{
    NSString *_domain;
    NSString *_type;
    id <iCloudBrowserDelegate> _delegate;
    NSMutableSet *_servicesMutable;
    NSMutableSet *_runLoopModesMutable;
    NSNetServiceBrowser *_netBrowser;
    NSMutableSet *_pendingServicesToAdd;
    NSMutableSet *_pendingServicesToRemove;
}

+ (id)keyPathsForValuesAffectingIsStarted;
@property(readonly, nonatomic) NSMutableSet *pendingServicesToRemove; // @synthesize pendingServicesToRemove=_pendingServicesToRemove;
@property(readonly, nonatomic) NSMutableSet *pendingServicesToAdd; // @synthesize pendingServicesToAdd=_pendingServicesToAdd;
@property(retain, nonatomic) NSNetServiceBrowser *netBrowser; // @synthesize netBrowser=_netBrowser;
@property(readonly, nonatomic) NSMutableSet *runLoopModesMutable; // @synthesize runLoopModesMutable=_runLoopModesMutable;
@property(readonly, nonatomic) NSMutableSet *servicesMutable; // @synthesize servicesMutable=_servicesMutable;
@property(nonatomic) id <iCloudBrowserDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(readonly, copy, nonatomic) NSString *domain; // @synthesize domain=_domain;
- (void).cxx_destruct;
- (void)netServiceBrowser:(id)arg1 didNotSearch:(id)arg2;
- (void)netServiceBrowserDidStopSearch:(id)arg1;
- (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
- (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
- (void)stopWithError:(id)arg1;
- (void)stop;
- (void)start;
@property(readonly, copy, nonatomic) NSSet *runLoopModes;
- (void)removeRunLoopMode:(id)arg1;
- (void)addRunLoopMode:(id)arg1;
@property(readonly, copy, nonatomic) NSSet *services;
@property(readonly, nonatomic) BOOL isStarted;
- (void)dealloc;
- (id)initWithDomain:(id)arg1 type:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudClientConnection : NSObject <NSStreamDelegate>
{
    BOOL _isOpen;
    BOOL _hasSpaceAvailable;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    unsigned long long _outputBufferCapacity;
    id <iCloudClientConnectionDelegate> _delegate;
    NSString *_name;
    NSError *_error;
    NSMutableSet *_runLoopModesMutable;
    NSMutableData *_outputBuffer;
}

+ (id)errorWithCode:(long long)arg1;
@property(nonatomic) BOOL hasSpaceAvailable; // @synthesize hasSpaceAvailable=_hasSpaceAvailable;
@property(retain, nonatomic) NSMutableData *outputBuffer; // @synthesize outputBuffer=_outputBuffer;
@property(readonly, nonatomic) NSMutableSet *runLoopModesMutable; // @synthesize runLoopModesMutable=_runLoopModesMutable;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) BOOL isOpen; // @synthesize isOpen=_isOpen;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) id <iCloudClientConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long outputBufferCapacity; // @synthesize outputBufferCapacity=_outputBufferCapacity;
@property(readonly, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(readonly, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)sendCommand:(id)arg1;
- (void)processOutput;
- (void)processInput;
- (void)close;
- (void)closeWithError:(id)arg1;
- (void)didCloseWithError:(id)arg1;
- (void)willCloseWithError:(id)arg1;
- (void)open;
@property(readonly, copy, nonatomic) NSSet *runLoopModes;
- (void)removeRunLoopMode:(id)arg1;
- (void)addRunLoopMode:(id)arg1;
- (id)initWithInputStream:(id)arg1 outputStream:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudConnectPanel : NSObject
{
    NSPanel *_passwordWindow;
    NSButton *_okButton;
    NSButton *_cancelButton;
    NSButton *_rememberCheck;
    NSTextField *_usernameField;
    NSSecureTextField *_passwordField;
}

@property(retain, nonatomic) NSSecureTextField *passwordField; // @synthesize passwordField=_passwordField;
@property(retain, nonatomic) NSTextField *usernameField; // @synthesize usernameField=_usernameField;
@property(retain, nonatomic) NSButton *rememberCheck; // @synthesize rememberCheck=_rememberCheck;
@property(retain, nonatomic) NSButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSButton *okButton; // @synthesize okButton=_okButton;
@property(retain, nonatomic) NSPanel *passwordWindow; // @synthesize passwordWindow=_passwordWindow;
- (void).cxx_destruct;
- (BOOL)rememberUsernameAndPassword;
- (id)password;
- (id)username;
- (void)cancel:(id)arg1;
- (void)ok:(id)arg1;
- (void)beginModalForWindow:(id)arg1 username:(id)arg2 password:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;

@end

@interface iCloudController : NSObject <IDEInitialization, DVTInvalidation, iCloudServiceObserver, iCloudUIDelegate, IDECommandHandlerVendor, IDECommandHandler>
{
    NSMutableArray *_transferMeasurements;
    double _transferMeasurementsinitialTimeInterval;
    double _transferMeasurementsLastTimeInterval;
    NSTimer *_transferMeasurementsTimer;
    long long _childFetchesInProgress;
    id <iCloudItem> _temporaryRoot;
    NSSet *_devices;
    NSRecursiveLock *_devicesLock;
    BOOL _firstLoginAttempt;
    IDEWorkspace *_workspace;
    NSString *_UUID;
    iCloud *_iCloud;
    NSString *_primaryContainerName;
    double _lastUpdated;
    NSArray *_logEntries;
    NSMutableDictionary *_progressForItemID;
    NSRecursiveLock *_itemsLock;
    NSMutableDictionary *_items;
    NSRecursiveLock *_statusesLock;
    NSMutableDictionary *_statuses;
    NSRecursiveLock *_accountInformationLock;
    NSMutableDictionary *_accountInformation;
    NSMutableDictionary *_pathNameForContainerName;
    NSMutableDictionary *_pathForContainerName;
    NSMutableSet *_containerNamesToWipe;
    NSWindow *_wipeAppContainerSheet;
    NSImageView *_wipeWarningImageWell;
    NSTextField *_wipeTitleTextField;
    NSTextField *_wipeWarningTextField;
    NSView *_wipeMultipleContainersView;
    NSTextField *_wipeDetailsTextField;
    NSView *_wipeMultipleScrollView;
    NSButton *_wipeSheetDoneButton;
    NSLayoutConstraint *_wipeImageBottomSpacingConstraint;
    NSLayoutConstraint *_wipeDetailsTextFieldBottomSpacingConstraint;
    NSLayoutConstraint *_wipeDetailsTextFieldVerticalSpacingConstraint;
    NSLayoutConstraint *_wipeMultipleScrollViewConstraint1;
    NSLayoutConstraint *_wipeMultipleScrollViewConstraint2;
    NSLayoutConstraint *_wipeMultipleScrollViewSuperviewConstraint1;
    NSLayoutConstraint *_wipeMultipleScrollViewSuperviewConstraint2;
}

+ (BOOL)launchSessionHasAssociatediCloudContainers:(id)arg1;
+ (void)_getContainersFromEntitlements:(id)arg1 into:(id)arg2 foriCloudController:(id)arg3;
+ (void)_getContainersFromEntitlementsDict:(id)arg1 inPath:(id)arg2 into:(id)arg3 forKey:(id)arg4 foriCloudController:(id)arg5;
+ (id)_resolveContainerNameAndUpdateProperties:(id)arg1 prefix:(id)arg2 foriCloudController:(id)arg3;
+ (id)handlerForAction:(SEL)arg1 withSelectionSource:(id)arg2;
+ (BOOL)_isValidSelector:(SEL)arg1;
+ (id)controllerForDocumentLocation:(id)arg1;
+ (id)controllerForURL:(id)arg1;
+ (id)controllerForUUID:(id)arg1;
+ (id)controllerForWorkspace:(id)arg1;
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
+ (void)initialize;
@property(retain) NSLayoutConstraint *wipeMultipleScrollViewSuperviewConstraint2; // @synthesize wipeMultipleScrollViewSuperviewConstraint2=_wipeMultipleScrollViewSuperviewConstraint2;
@property(retain) NSLayoutConstraint *wipeMultipleScrollViewSuperviewConstraint1; // @synthesize wipeMultipleScrollViewSuperviewConstraint1=_wipeMultipleScrollViewSuperviewConstraint1;
@property(retain) NSLayoutConstraint *wipeMultipleScrollViewConstraint2; // @synthesize wipeMultipleScrollViewConstraint2=_wipeMultipleScrollViewConstraint2;
@property(retain) NSLayoutConstraint *wipeMultipleScrollViewConstraint1; // @synthesize wipeMultipleScrollViewConstraint1=_wipeMultipleScrollViewConstraint1;
@property(retain) NSLayoutConstraint *wipeDetailsTextFieldVerticalSpacingConstraint; // @synthesize wipeDetailsTextFieldVerticalSpacingConstraint=_wipeDetailsTextFieldVerticalSpacingConstraint;
@property(retain) NSLayoutConstraint *wipeDetailsTextFieldBottomSpacingConstraint; // @synthesize wipeDetailsTextFieldBottomSpacingConstraint=_wipeDetailsTextFieldBottomSpacingConstraint;
@property __weak NSLayoutConstraint *wipeImageBottomSpacingConstraint; // @synthesize wipeImageBottomSpacingConstraint=_wipeImageBottomSpacingConstraint;
@property __weak NSButton *wipeSheetDoneButton; // @synthesize wipeSheetDoneButton=_wipeSheetDoneButton;
@property(retain) NSView *wipeMultipleScrollView; // @synthesize wipeMultipleScrollView=_wipeMultipleScrollView;
@property __weak NSTextField *wipeDetailsTextField; // @synthesize wipeDetailsTextField=_wipeDetailsTextField;
@property __weak NSView *wipeMultipleContainersView; // @synthesize wipeMultipleContainersView=_wipeMultipleContainersView;
@property __weak NSTextField *wipeWarningTextField; // @synthesize wipeWarningTextField=_wipeWarningTextField;
@property __weak NSTextField *wipeTitleTextField; // @synthesize wipeTitleTextField=_wipeTitleTextField;
@property __weak NSImageView *wipeWarningImageWell; // @synthesize wipeWarningImageWell=_wipeWarningImageWell;
@property(retain) NSWindow *wipeAppContainerSheet; // @synthesize wipeAppContainerSheet=_wipeAppContainerSheet;
@property(readonly, nonatomic) NSMutableSet *containerNamesToWipe; // @synthesize containerNamesToWipe=_containerNamesToWipe;
@property(retain, nonatomic) NSMutableDictionary *pathForContainerName; // @synthesize pathForContainerName=_pathForContainerName;
@property(retain, nonatomic) NSMutableDictionary *pathNameForContainerName; // @synthesize pathNameForContainerName=_pathNameForContainerName;
@property(retain, nonatomic) NSMutableDictionary *accountInformation; // @synthesize accountInformation=_accountInformation;
@property(retain, nonatomic) NSRecursiveLock *accountInformationLock; // @synthesize accountInformationLock=_accountInformationLock;
@property(retain, nonatomic) NSMutableDictionary *statuses; // @synthesize statuses=_statuses;
@property(retain, nonatomic) NSRecursiveLock *statusesLock; // @synthesize statusesLock=_statusesLock;
@property(retain, nonatomic) NSMutableDictionary *items; // @synthesize items=_items;
@property(retain, nonatomic) NSRecursiveLock *itemsLock; // @synthesize itemsLock=_itemsLock;
@property(retain) NSMutableDictionary *progressForItemID; // @synthesize progressForItemID=_progressForItemID;
@property(nonatomic) BOOL firstLoginAttempt; // @synthesize firstLoginAttempt=_firstLoginAttempt;
@property(copy, nonatomic) NSArray *logEntries; // @synthesize logEntries=_logEntries;
@property(nonatomic) double lastUpdated; // @synthesize lastUpdated=_lastUpdated;
@property(copy, nonatomic) NSString *primaryContainerName; // @synthesize primaryContainerName=_primaryContainerName;
@property(readonly, nonatomic) iCloud *iCloud; // @synthesize iCloud=_iCloud;
@property(copy, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(retain, nonatomic) IDEWorkspace *workspace; // @synthesize workspace=_workspace;
@property(readonly) NSArray *transferMeasurements; // @synthesize transferMeasurements=_transferMeasurements;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)iCloudServiceCenter:(id)arg1 didDisconnectDevice:(id)arg2;
- (void)iCloudServiceCenter:(id)arg1 didConnectDevice:(id)arg2;
- (void)iCloudServiceCenter:(id)arg1 serviceAccountChanged:(id)arg2 onDevice:(id)arg3;
- (void)iCloudServiceCenter:(id)arg1 serviceStatusChanged:(int)arg2 onDevice:(id)arg3;
- (void)iCloudServiceCenter:(id)arg1 item:(id)arg2 didDownloadBytes:(long long)arg3 of:(long long)arg4 forDevice:(id)arg5;
- (void)iCloudServiceCenter:(id)arg1 item:(id)arg2 didUploadBytes:(long long)arg3 of:(long long)arg4 forDevice:(id)arg5;
- (void)iCloudServiceCenter:(id)arg1 movedItem:(id)arg2 from:(id)arg3 to:(id)arg4 onDevice:(id)arg5;
- (void)iCloudServiceCenter:(id)arg1 removedItem:(id)arg2 fromDevice:(id)arg3;
- (void)iCloudServiceCenter:(id)arg1 addedItem:(id)arg2 toDevice:(id)arg3;
- (void)iCloudServiceCenter:(id)arg1 item:(id)arg2 sizeChanged:(long long)arg3 onDevice:(id)arg4;
- (void)iCloudServiceCenter:(id)arg1 item:(id)arg2 statusChanged:(unsigned long long)arg3 onDevice:(id)arg4;
- (void)iCloudServiceCenter:(id)arg1 fetchedInitialItems:(id)arg2 fromDevice:(id)arg3;
- (void)iCloudServiceCenter:(id)arg1 didReceiveAccountInformation:(id)arg2 fromDevice:(id)arg3;
- (void)iCloud:(id)arg1 needsAppleIDAndPasswordWithCompletionBlock:(CDUnknownBlockType)arg2;
- (void)addLogEntry:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *sortedDevices;
- (id)accountInformationForDevice:(id)arg1;
- (void)setAccountInformation:(id)arg1 forDevice:(id)arg2;
- (int)serverStatusForDevice:(id)arg1;
- (void)setServerStatus:(int)arg1 forDevice:(id)arg2;
- (id)rootItemForDevice:(id)arg1;
- (void)setRootItemInArray:(id)arg1 forDevice:(id)arg2;
- (void)_findContainerNamesToWipe;
- (void)startWatchingFirstContainerInLaunchSession:(id)arg1;
- (void)_getTransferMeasurementFromItem:(id)arg1 type:(BOOL)arg2;
- (double)_progressDeltaForItem:(id)arg1 currentProgress:(double)arg2;
- (void)_transferMeasurementsTimerFired:(id)arg1;
- (void)setCurrentTransferMeasurement:(id)arg1;
- (void)_orderOutWipeAppContainerSheet;
- (BOOL)_deleteFilesFrom:(id)arg1 pathToSkip:(id)arg2;
- (void)endWipeAppContainerSheet:(id)arg1;
- (void)discloseWipeMultipleScrollView:(id)arg1;
- (void)_reenableScreenUpdates;
- (void)wipeAppContainer:(id)arg1;
- (id)_pathForContainerName:(id)arg1;
- (id)_localiCloudDirectoryPath;
- (void)fetchEvent:(id)arg1;
- (BOOL)validateUserInterfaceItem:(id)arg1;
@property(copy, nonatomic) NSSet *devices;
- (id)children;
- (id)initWithWorkspace:(id)arg1;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface iCloudDebuggingAddition : NSObject <IDEDebuggingAddition>
{
    IDELaunchSession *_launchSession;
    NSString *_identifier;
}

+ (void)initialize;
+ (BOOL)shouldInstantiateInLaunchSession:(id)arg1;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) IDELaunchSession *launchSession; // @synthesize launchSession=_launchSession;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (id)initInLaunchSession:(id)arg1 withAppDisplayName:(id)arg2 runDestination:(id)arg3 fromExtension:(id)arg4;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface iCloudDebuggingAdditionUIController : NSObject <IDEDebuggingAdditionUIController>
{
    id <IDEDebuggingAddition> _debuggingAddition;
    DVTExtension *_extension;
    IDEWorkspaceTabController *_workspaceTabController;
    iCloudDebuggingTrayCell *_trayCell;
}

+ (void)initialize;
@property(retain, nonatomic) iCloudDebuggingTrayCell *trayCell; // @synthesize trayCell=_trayCell;
@property(retain, nonatomic) IDEWorkspaceTabController *workspaceTabController; // @synthesize workspaceTabController=_workspaceTabController;
@property(retain, nonatomic) DVTExtension *extension; // @synthesize extension=_extension;
@property(retain, nonatomic) id <IDEDebuggingAddition> debuggingAddition; // @synthesize debuggingAddition=_debuggingAddition;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)openLocation:(id)arg1 withEventType:(unsigned long long)arg2;
- (void)openController:(id)arg1 withEventType:(unsigned long long)arg2;
- (void)openSelectedNavigableItem:(id)arg1 withEventType:(unsigned long long)arg2;
- (id)launchSessionForSelectedRepresentedObject:(id)arg1;
- (id)trayCellForNavigationProcessHeader;
- (BOOL)wantsTrayAreaForNavigationProcessHeader;
- (id)controller;
- (id)initWithWorkspaceTabController:(id)arg1 withDebuggingAddition:(id)arg2 forExtension:(id)arg3;

// Remaining properties
@property(retain) DVTStackBacktrace *creationBacktrace;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) DVTStackBacktrace *invalidationBacktrace;
@property(readonly) Class superclass;
@property(readonly, nonatomic, getter=isValid) BOOL valid;

@end

@interface iCloudDebuggingTrayCell : IDEDebugGaugeTrayCell
{
    DVTNotificationToken *_iCloudNotificationToken;
    NSMutableArray *_currentDisplayedItemStack;
}

@property(retain) NSMutableArray *currentDisplayedItemStack; // @synthesize currentDisplayedItemStack=_currentDisplayedItemStack;
@property(retain) DVTNotificationToken *iCloudNotificationToken; // @synthesize iCloudNotificationToken=_iCloudNotificationToken;
- (void).cxx_destruct;
- (void)_observeController:(id)arg1;
- (void)_updateProgressBarWithItem:(id)arg1 itemChangeType:(BOOL)arg2;
- (void)_insertItemIntoDisplayedItemStack:(id)arg1;
@property(readonly, nonatomic) iCloudController *controller;
- (void)dealloc;
- (id)initWithController:(id)arg1;

@end

@interface iCloudDocumentLocation : DVTDocumentLocation
{
    NSString *_UUID;
}

@property(readonly, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
- (id)navigableItem_image;
- (id)navigableItem_name;
@property(readonly, nonatomic) iCloudController *controller;
- (id)initWithControllerUUID:(id)arg1 documentURL:(id)arg2;

@end

@interface iCloudViewController : IDEViewController
{
    iCloudActivityEditor *_editor;
    NSView *_headerAccessory;
}

@property(retain, nonatomic) NSView *headerAccessory; // @synthesize headerAccessory=_headerAccessory;
@property(readonly, nonatomic) __weak iCloudActivityEditor *editor; // @synthesize editor=_editor;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
@property(readonly, nonatomic) __weak iCloudController *controller;
- (id)initWithEditor:(id)arg1;

@end

@interface iCloudDocumentsViewController : iCloudViewController
{
    id _itemNotificationToken;
    NSMutableSet *_observationTokens;
    NSMutableDictionary *_displayItemIndex;
    NSOutlineView *_outlineView;
    id _frameDidChangeNotificationToken;
    NSDateFormatter *_dateFormatter;
    NSByteCountFormatter *_sizeFormatter;
}

+ (id)descendingImage;
+ (id)ascendingImage;
@property(retain, nonatomic) NSByteCountFormatter *sizeFormatter; // @synthesize sizeFormatter=_sizeFormatter;
@property(retain, nonatomic) NSDateFormatter *dateFormatter; // @synthesize dateFormatter=_dateFormatter;
@property(retain, nonatomic) id frameDidChangeNotificationToken; // @synthesize frameDidChangeNotificationToken=_frameDidChangeNotificationToken;
@property(retain, nonatomic) NSOutlineView *outlineView; // @synthesize outlineView=_outlineView;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)loadView;
- (void)reloadDocuments;
- (void)resizeColumnsInTable:(id)arg1;
- (void)sizeColumnWidthToFit:(id)arg1;
- (void)outlineView:(id)arg1 sortDescriptorsDidChange:(id)arg2;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (id)outlineView:(id)arg1 getValueAndFormatter:(out id *)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (id)rootItem;
- (id)indicatorImageForSortDescriptor:(id)arg1;
- (id)sortDescriptorForTableColumn:(id)arg1 ascending:(BOOL)arg2;
- (void)checkGaugeInView:(id)arg1 forItem:(id)arg2;
- (id)initWithEditor:(id)arg1;

@end

@interface iCloudHeaderViewController : iCloudViewController
{
    DVTHorizontalCapacityViewController *_capacityViewController;
    NSMutableSet *_observationTokens;
    NSView *_accessoryHeaderView;
    NSView *_topSectionStatusView;
    NSView *_topSectionCapacityView;
    NSImageView *_imageView;
    NSTextField *_containerNameField;
    NSTextField *_utilizedField;
    NSBox *_availableFieldBox;
    NSTextField *_availableField;
    NSTextField *_statusLabelField;
    NSTextField *_statusField;
    NSTextField *_updateLabelField;
    NSTextField *_updateField;
    NSView *_capacityContainer;
    NSPopUpButton *_devicesPopupButton;
    double _lastUpdated;
    double _updateInterval;
}

@property(nonatomic) double updateInterval; // @synthesize updateInterval=_updateInterval;
@property(nonatomic) double lastUpdated; // @synthesize lastUpdated=_lastUpdated;
@property __weak NSPopUpButton *devicesPopupButton; // @synthesize devicesPopupButton=_devicesPopupButton;
@property __weak NSView *capacityContainer; // @synthesize capacityContainer=_capacityContainer;
@property __weak NSTextField *updateField; // @synthesize updateField=_updateField;
@property __weak NSTextField *updateLabelField; // @synthesize updateLabelField=_updateLabelField;
@property __weak NSTextField *statusField; // @synthesize statusField=_statusField;
@property __weak NSTextField *statusLabelField; // @synthesize statusLabelField=_statusLabelField;
@property __weak NSTextField *availableField; // @synthesize availableField=_availableField;
@property __weak NSBox *availableFieldBox; // @synthesize availableFieldBox=_availableFieldBox;
@property __weak NSTextField *utilizedField; // @synthesize utilizedField=_utilizedField;
@property __weak NSTextField *containerNameField; // @synthesize containerNameField=_containerNameField;
@property __weak NSImageView *imageView; // @synthesize imageView=_imageView;
@property __weak NSView *topSectionCapacityView; // @synthesize topSectionCapacityView=_topSectionCapacityView;
@property __weak NSView *topSectionStatusView; // @synthesize topSectionStatusView=_topSectionStatusView;
@property __weak NSView *accessoryHeaderView; // @synthesize accessoryHeaderView=_accessoryHeaderView;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)selectDevice:(id)arg1;
- (void)awakeFromNib;
- (void)update;
- (id)_containerName;
- (void)updateContainerName;
- (void)updateAccountInformation;
- (void)updateServerStatus;
- (void)updateDevicesPopUp;
- (void)updateLastUpdated;
- (void)_updateLastUpdated;
- (id)initWithEditor:(id)arg1;

@end

@interface iCloudItem : NSObject <iCloudItem>
{
    BOOL _fetchingChildren;
    NSString *_ubiquityContainer;
    BOOL _inCloud;
    BOOL _deleted;
    BOOL _pending;
    BOOL _onlyEmbedded;
    BOOL _conflicted;
    BOOL _wasDownloading;
    BOOL _wasUploading;
    BOOL _uploading;
    BOOL _downloading;
    id <iCloudItemProvider> _itemProvider;
    NSURL *_localURL;
    NSURL *_iCloudURL;
    NSNumber *_itemID;
    NSNumber *_parentItemID;
    NSString *_type;
    NSNumber *_changeID;
    NSString *_name;
    NSNumber *_size;
    NSString *_signature;
    NSNumber *_peerID;
    NSString *_peerName;
    NSNumber *_conflictToken;
    NSArray *_losers;
    NSDate *_modified;
    NSImage *_icon;
    unsigned long long _lastSizeDuringDownloading;
    unsigned long long _lastSizeDuringUploading;
    double _downloadProgress;
    double _uploadProgress;
    NSString *_localType;
    unsigned long long _status;
    NSMutableArray *_children;
}

@property(readonly, nonatomic) NSMutableArray *children; // @synthesize children=_children;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(nonatomic, getter=isDownloading) BOOL downloading; // @synthesize downloading=_downloading;
@property(nonatomic, getter=isUploading) BOOL uploading; // @synthesize uploading=_uploading;
@property(nonatomic) double uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(nonatomic) double downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) BOOL wasUploading; // @synthesize wasUploading=_wasUploading;
@property(nonatomic) BOOL wasDownloading; // @synthesize wasDownloading=_wasDownloading;
@property(nonatomic) unsigned long long lastSizeDuringUploading; // @synthesize lastSizeDuringUploading=_lastSizeDuringUploading;
@property(nonatomic) unsigned long long lastSizeDuringDownloading; // @synthesize lastSizeDuringDownloading=_lastSizeDuringDownloading;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(retain, nonatomic) NSDate *modified; // @synthesize modified=_modified;
@property(retain, nonatomic) NSArray *losers; // @synthesize losers=_losers;
@property(retain, nonatomic) NSNumber *conflictToken; // @synthesize conflictToken=_conflictToken;
@property(nonatomic) BOOL conflicted; // @synthesize conflicted=_conflicted;
@property(retain, nonatomic) NSString *peerName; // @synthesize peerName=_peerName;
@property(retain, nonatomic) NSNumber *peerID; // @synthesize peerID=_peerID;
@property(retain, nonatomic) NSString *signature; // @synthesize signature=_signature;
@property(retain, nonatomic) NSNumber *size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) BOOL onlyEmbedded; // @synthesize onlyEmbedded=_onlyEmbedded;
@property(nonatomic) BOOL pending; // @synthesize pending=_pending;
@property(nonatomic) BOOL deleted; // @synthesize deleted=_deleted;
@property(nonatomic) BOOL inCloud; // @synthesize inCloud=_inCloud;
@property(retain, nonatomic) NSNumber *changeID; // @synthesize changeID=_changeID;
@property(retain, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSNumber *parentItemID; // @synthesize parentItemID=_parentItemID;
@property(retain, nonatomic) NSNumber *itemID; // @synthesize itemID=_itemID;
@property(retain, nonatomic) NSURL *localURL; // @synthesize localURL=_localURL;
@property(readonly, nonatomic) __weak id <iCloudItemProvider> itemProvider; // @synthesize itemProvider=_itemProvider;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSURL *iCloudURL; // @synthesize iCloudURL=_iCloudURL;
- (id)ubiquityRootPath;
- (id)ubiquityRoot;
- (id)ubiquityRelativePath;
- (id)_ubiquityRelativePath:(id)arg1;
- (id)ubiquityContainer;
- (BOOL)isContainer;
- (BOOL)isPackage;
- (BOOL)isFile;
- (BOOL)isFolder;
- (void)removeChildIfPresent:(id)arg1;
- (void)addChildIfAbsent:(id)arg1;
- (void)childrenWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_childrenWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)faultWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)parentItem;
- (BOOL)isRootItem;
- (void)_setUploadProgress:(double)arg1;
- (void)_setDownloadProgress:(double)arg1;
- (id)initWithLocalURL:(id)arg1 type:(id)arg2 status:(unsigned long long)arg3 size:(long long)arg4 modified:(id)arg5 itemProvider:(id)arg6;
- (id)initWithLocalURL:(id)arg1 itemProvider:(id)arg2;
- (long long)_computedLocalSize;
- (long long)_childrenSize;
- (id)initWithJSON:(id)arg1 localURL:(id)arg2 itemProvider:(id)arg3;
- (void)_takeDataFromJSON:(id)arg1;
@property(readonly, nonatomic) NSString *localType; // @synthesize localType=_localType;
- (id)inputDateFormatter;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudLogEntry : NSObject
{
    NSURL *_itemURL;
    double _timestamp;
    unsigned long long _status;
    NSDictionary *_info;
}

@property(readonly, nonatomic) NSDictionary *info; // @synthesize info=_info;
@property(nonatomic) unsigned long long status; // @synthesize status=_status;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(retain, nonatomic) NSURL *itemURL; // @synthesize itemURL=_itemURL;
- (void).cxx_destruct;
- (id)initWithItem:(id)arg1 timestamp:(double)arg2 status:(unsigned long long)arg3 info:(id)arg4;

@end

@interface iCloudLogViewController : iCloudViewController
{
    NSTextView *_logView;
    DVTBorderedView *_borderView;
    id <DVTCancellable> _logEntriesToken;
}

@property(retain, nonatomic) id <DVTCancellable> logEntriesToken; // @synthesize logEntriesToken=_logEntriesToken;
@property(retain, nonatomic) DVTBorderedView *borderView; // @synthesize borderView=_borderView;
@property(retain, nonatomic) NSTextView *logView; // @synthesize logView=_logView;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)awakeFromNib;
- (id)title;
- (void)addLogEntries:(id)arg1;
- (id)basicAttributes;
- (id)dateFormatter;

@end

@interface iCloudMonitor : NSObject <iCloudItemProvider>
{
    NSMutableData *_buffer;
    NSRecursiveLock *_processorsLock;
    NSMutableDictionary *_processors;
    NSMutableSet *_globalProcessors;
    NSRecursiveLock *_itemsCacheLock;
    NSMutableDictionary *_itemsByURL;
    id <iCloudItem> _rootItem;
    NSRecursiveLock *_watchersLock;
    NSMutableDictionary *_watchers;
    BOOL _authorized;
    BOOL _hasFinishedInitialFetch;
    DVTDevice *_device;
    NSString *_deviceIdentifier;
}

+ (void)terminateMonitorServerForServiceCenter:(id)arg1;
+ (void)initiateMonitorServerForServiceCenter:(id)arg1;
@property(nonatomic) BOOL hasFinishedInitialFetch; // @synthesize hasFinishedInitialFetch=_hasFinishedInitialFetch;
@property(nonatomic, getter=isAuthorized) BOOL authorized; // @synthesize authorized=_authorized;
@property(readonly, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly, nonatomic) DVTDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;
- (void)childrenOfParent:(id)arg1 includeDeleted:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)removeItemFromCache:(id)arg1;
- (id)addItemToCache:(id)arg1;
- (id)cachedItemForLocalURL:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)rootItem;
- (id)cachedItemForLocalURL:(id)arg1 type:(id)arg2 status:(unsigned long long)arg3 size:(long long)arg4 modified:(id)arg5;
- (BOOL)hasCachedItemForLocalURL:(id)arg1;
- (void)processLine:(id)arg1;
- (void)processBytes:(const char *)arg1 length:(unsigned long long)arg2;
- (id)sendCommandUsingProcessor:(id)arg1 format:(id)arg2;
- (id)sendCommandUsingProcessor:(id)arg1 format:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (id)sendCommand:(id)arg1 usingProcessor:(id)arg2;
- (void)removeWatcherForContainerNamed:(id)arg1;
- (void)setWatcher:(id)arg1 forContainerNamed:(id)arg2;
- (id)watcherForContainerNamed:(id)arg1;
- (id)createWatcherIfAuthorizedByServiceCenter:(id)arg1 forContainerNamed:(id)arg2;
- (void)unregisterGlobalProcessor:(id)arg1;
- (void)registerGlobalProcessor:(id)arg1;
- (void)unregisterProcessorForToken:(id)arg1;
- (id)processorForToken:(id)arg1;
- (id)registerProcessor:(id)arg1;
- (id)nextToken;
- (void)stopConnection;
- (void)startConnection;
- (void)_primitiveSetDevice:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudMacMonitor : iCloudMonitor <iCloudClientConnectionDelegate>
{
    NSNetService *_service;
    iCloudClientConnection *_connection;
}

+ (void)netServiceBrowser:(id)arg1 didNotSearch:(id)arg2;
+ (void)netServiceBrowserDidStopSearch:(id)arg1;
+ (void)netServiceBrowser:(id)arg1 didRemoveService:(id)arg2 moreComing:(BOOL)arg3;
+ (void)netServiceBrowser:(id)arg1 didFindService:(id)arg2 moreComing:(BOOL)arg3;
+ (BOOL)startMonitorServiceOnHost:(id)arg1 error:(id *)arg2;
+ (void)attemptMonitorServiceRestart;
+ (void)stopMonitorForNetService:(id)arg1;
+ (void)startMonitorForNetService:(id)arg1;
+ (void)initiateMonitorServerForServiceCenter:(id)arg1;
- (void).cxx_destruct;
- (id)sendCommand:(id)arg1 usingProcessor:(id)arg2;
- (void)connection:(id)arg1 processInput:(const char *)arg2 length:(unsigned long long)arg3;
- (void)connection:(id)arg1 willCloseWithError:(id)arg2;
- (void)stopConnection;
- (void)startConnection;
- (id)initWithNetService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudPerformanceViewController : iCloudViewController <IDEGraphDelegate>
{
    NSByteCountFormatter *_byteFormatter;
    DVTNotificationToken *_iCloudNotificationToken;
    NSMutableDictionary *_progressForItemID;
    IDEBarGraph *_barGraph;
}

@property(retain) IDEBarGraph *barGraph; // @synthesize barGraph=_barGraph;
@property(retain) NSMutableDictionary *progressForItemID; // @synthesize progressForItemID=_progressForItemID;
@property(retain) DVTNotificationToken *iCloudNotificationToken; // @synthesize iCloudNotificationToken=_iCloudNotificationToken;
- (void).cxx_destruct;
- (void)primitiveInvalidate;
- (void)_observeController;
- (double)_progressDeltaForItem:(id)arg1 currentProgress:(double)arg2;
- (id)translateValue:(id)arg1 keypath:(id)arg2;
- (id)colorForChartNamed:(id)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudScrollView : NSScrollView
{
    struct CGSize _fittingSize;
    struct CGSize _intrinsicSize;
    BOOL _intrinsicSizeIsInvalid;
}

- (void)scrollWheel:(id)arg1;
- (void)tile;
- (void)updateConstraints;
- (struct CGSize)fittingSize;
- (struct CGSize)intrinsicContentSize;
- (void)invalidateIntrinsicContentSize;

@end

@interface iCloudService : NSObject
{
    iCloud *_iCloud;
}

@property(readonly, nonatomic) __weak iCloud *iCloud; // @synthesize iCloud=_iCloud;
- (void).cxx_destruct;
- (id)initWithOwner:(id)arg1;

@end

@interface iCloudServiceCenter : NSObject <IDEInitialization, NSNetServiceBrowserDelegate>
{
    BOOL _initiatedMonitors;
    NSRecursiveLock *_monitorsLock;
    NSMutableSet *_monitorClasses;
    NSMutableSet *_monitors;
    NSMutableDictionary *_monitorsByUUID;
    NSRecursiveLock *_observersLock;
    NSMutableSet *_observers;
    NSMutableDictionary *_observersByContainer;
    NSRecursiveLock *_requestQueueLock;
    NSMutableDictionary *_requestQueues;
    NSMapTable *_authorizationHelperByMonitor;
}

+ (id)sharedInstance;
+ (BOOL)ide_initializeWithOptions:(int)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (void)_fetchAccountInformationForObservers:(id)arg1 onMonitor:(id)arg2;
- (void)_fetchServerStatusForObservers:(id)arg1 onMonitor:(id)arg2;
- (void)_fetchFilesForObservers:(id)arg1 container:(id)arg2 onMonitor:(id)arg3;
- (id)_monitors;
- (void)notifyObserversOfDeviceRemoved:(id)arg1;
- (void)notifyObserversOfDeviceAdded:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)_removeObserver:(id)arg1 forDevice:(id)arg2 forContainer:(id)arg3;
- (void)fetchDataForObserver:(id)arg1 forDevice:(id)arg2 forContainer:(id)arg3;
- (void)registerObserver:(id)arg1 forContainer:(id)arg2;
- (void)_fetchDataForObserver:(id)arg1 forDevice:(id)arg2 forContainer:(id)arg3 initial:(BOOL)arg4;
- (void)registerGlobalObserver:(id)arg1;
- (void)sendCommand:(id)arg1 toMonitorWithID:(id)arg2 usingProcessor:(id)arg3;
- (id)monitorForID:(id)arg1;
- (void)stopSimulatingLocationOnDevice:(id)arg1 usingProcessor:(id)arg2;
- (void)startSimulatingLocationWithLatitude:(id)arg1 longitude:(id)arg2 onDevice:(id)arg3 usingProcessor:(id)arg4;
- (void)fetchHeapForPID:(int)arg1 fromDevice:(id)arg2 usingProcessor:(id)arg3;
- (void)fetchSampleForPID:(int)arg1 fromDevice:(id)arg2 usingProcessor:(id)arg3;
- (id)knownDevices;
- (void)stopMonitor:(id)arg1;
- (void)processQueueForMonitor:(id)arg1;
- (void)startMonitor:(id)arg1;
- (void)_cleanUpOldMonitorForNewMonitor:(id)arg1;
- (id)getSharedSecretFromKeychain;
- (void)authorizeCommunicationOnMonitor:(id)arg1;
- (id)_authorizationHelperForMonitor:(id)arg1;
- (void)initiateMonitors;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudServiceCenterHelper : NSObject <iCloudMonitorLineProcessor>
{
    NSMutableSet *_observers;
    NSRecursiveLock *_observersLock;
    iCloudServiceCenter *_serviceCenter;
    iCloudMonitor *_monitor;
    NSString *_token;
}

@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property(retain, nonatomic) iCloudMonitor *monitor; // @synthesize monitor=_monitor;
@property(retain, nonatomic) iCloudServiceCenter *serviceCenter; // @synthesize serviceCenter=_serviceCenter;
- (void).cxx_destruct;
- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;
- (id)sendCommandWithFormat:(id)arg1;
- (id)sendCommandWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
- (id)sendCommand:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObservers:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)observers;
- (id)initWithServiceCenter:(id)arg1 monitor:(id)arg2;

@end

@interface iCloudServiceCenterAccountInfoHelper : iCloudServiceCenterHelper
{
}

- (void)getAccountInformation;
- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;

@end

@interface iCloudServiceCenterAuthorizationHelper : iCloudServiceCenterHelper
{
}

- (void)sendSharedSecret:(id)arg1;
- (void)notifyGreeting:(id)arg1 device:(id)arg2;
- (void)notifyAuthorizationAcknowledged:(id)arg1 device:(id)arg2;
- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;
- (id)initWithServiceCenter:(id)arg1 monitor:(id)arg2;

@end

@interface iCloudServiceCenterListHelper : iCloudServiceCenterHelper
{
    NSMutableArray *_items;
    NSDateFormatter *_dateFormatter;
}

- (void).cxx_destruct;
- (void)listContainer:(id)arg1;
- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;
- (id)initWithServiceCenter:(id)arg1 monitor:(id)arg2;

@end

@interface iCloudServiceCenterStatusHelper : iCloudServiceCenterHelper
{
}

- (void)getStatus;
- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;

@end

@interface iCloudServiceCenterWatchHelper : iCloudServiceCenterHelper
{
    NSString *_containerName;
    NSString *_watchToken;
    NSDateFormatter *_dateFormatter;
    BOOL _fileScanCompleted;
}

- (void).cxx_destruct;
- (void)ignoreContainer:(id)arg1;
- (void)watchContainer:(id)arg1;
- (BOOL)monitorShouldSendGlobalLines:(id)arg1;
- (void)monitor:(id)arg1 didReceiveResponseCode:(unsigned long long)arg2 response:(id)arg3 forToken:(id)arg4 responseContinues:(BOOL)arg5;
- (void)_notifyLocalFilesScanComplete:(id)arg1 device:(id)arg2;
- (void)_listWatchedContainer;
- (void)notifyServerAccountChanged:(id)arg1 device:(id)arg2;
- (void)notifyServerStatusChanged:(id)arg1 device:(id)arg2;
- (void)_resetWatchStates;
- (void)notifyItemSizeChanged:(id)arg1 device:(id)arg2;
- (void)notifyItemStatusChanged:(id)arg1 device:(id)arg2;
- (void)notifyItemDownloading:(id)arg1 device:(id)arg2;
- (void)notifyItemUploading:(id)arg1 device:(id)arg2;
- (void)notifyItemMoved:(id)arg1 device:(id)arg2;
- (void)notifyItemRemoved:(id)arg1 device:(id)arg2;
- (void)notifyItemAdded:(id)arg1 device:(id)arg2;
- (BOOL)_isWatching;
- (id)initWithServiceCenter:(id)arg1 monitor:(id)arg2;

@end

@interface iCloudTableCellStatusView : NSTableCellView
{
    DVTGauge *_gauge;
}

@property(retain, nonatomic) DVTGauge *gauge; // @synthesize gauge=_gauge;
- (void).cxx_destruct;
- (void)layout;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;

@end

@interface iCloudURLConnectionDelegate : NSObject <NSURLConnectionDelegate>
{
    iCloud *_owner;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _dataHandler;
    NSURLConnection *_connection;
    NSMutableData *_data;
}

+ (void)initialize;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) CDUnknownBlockType dataHandler; // @synthesize dataHandler=_dataHandler;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) iCloud *owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)initWithOwner:(id)arg1 dataHandler:(CDUnknownBlockType)arg2;
- (id)initWithOwner:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface iCloudUbiquityService : iCloudService <iCloudItemProvider>
{
    NSMutableDictionary *_itemCacheByItemID;
    NSMutableDictionary *_itemCacheByLocalURL;
    NSRecursiveLock *_cacheLock;
}

@property(retain, nonatomic) NSRecursiveLock *cacheLock; // @synthesize cacheLock=_cacheLock;
@property(retain, nonatomic) NSMutableDictionary *itemCacheByLocalURL; // @synthesize itemCacheByLocalURL=_itemCacheByLocalURL;
@property(retain, nonatomic) NSMutableDictionary *itemCacheByItemID; // @synthesize itemCacheByItemID=_itemCacheByItemID;
- (void).cxx_destruct;
- (void)downloadItem:(id)arg1 destinationPath:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)accountInfoWithCompletionBlock:(CDUnknownBlockType)arg1;
- (BOOL)moveFile:(id)arg1 to:(id)arg2 using:(id)arg3 error:(id *)arg4;
- (void)childrenOfParent:(id)arg1 includeDeleted:(BOOL)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)itemForID:(long long)arg1 localURL:(id)arg2 includeLosers:(BOOL)arg3 ignoreCache:(BOOL)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)rootItemWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)ubiquityItemForJSON:(id)arg1 localURL:(id)arg2;
- (id)ubiquityItemForLocalURL:(id)arg1 fromCache:(char *)arg2;
- (void)removeItemFromCache:(id)arg1;
- (id)addItemToCache:(id)arg1;
- (id)cachedItemForLocalURL:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)rootItem;
- (BOOL)hasCachedItemForLocalURL:(id)arg1;
- (id)ubiquityURLForCommand:(id)arg1 id:(id)arg2 parameters:(id)arg3;
- (id)initWithOwner:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

