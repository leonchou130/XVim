//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGFunctionCallbacks {
    unsigned int _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct DataRepresentationSubstitutions {
    struct __CFDictionary *_field1;
    unsigned int _field2;
    unsigned int _field3;
    void **_field4;
    void **_field5;
    unsigned int _field6;
    char *_field7;
    Class _field8;
    int _field9;
    void *_field10[1024];
    unsigned int _field11[1024];
};

struct FormulaEntry {
    unsigned long long _field1;
    union {
        double _field1;
        unsigned long long _field2;
        unsigned long long _field3;
    } _field2;
};

struct NSObject {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct PFTEvent {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct TFPPidWatcher {
    unsigned int clientPort;
};

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRLineNumData {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRSQLSchemaColumn {
    int _field1;
    char *_field2;
};

struct XRSQLTableDefinition {
    struct __CFString *_field1;
    unsigned char _field2;
    struct XRSQLSchemaColumn _field3[0];
};

struct XRStrata {
    unsigned long long _field1;
    float _field2;
};

struct XRStrataBufferChunk {
    struct XRStrata *_field1;
    struct XRStrataBufferChunk *_field2;
};

struct XRStrataGroup {
    struct XRStrata *_field1;
    void *_field2;
    unsigned int _field3;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _CSArchitecture {
    int cpu_type;
    int cpu_subtype;
};

struct _CSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _CSTypeRef {
    unsigned long long _opaque_1;
    unsigned long long _opaque_2;
};

struct _ExtraColumnInfo {
    int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _XRDSYMObserverID {
    unsigned int _field1;
    unsigned int _field2;
    CDUnknownBlockType _field3;
};

struct _XRDeviceTimeInfo {
    unsigned long long bootEpoch;
    unsigned long long mach_absolute_start;
    struct mach_timebase_info mach_time_base;
};

struct _XRLocalExpiredPidCacheState {
    struct TFPPidWatcher watcher;
    XRSymbolicatorsByPid *symbolicatorsByPid;
    NSMutableArray *pidsNotFound;
    unsigned short trackingRefCount;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct vector<_XRDSYMObserverID *, std::__1::allocator<_XRDSYMObserverID *>> {
    struct _XRDSYMObserverID **_field1;
    struct _XRDSYMObserverID **_field2;
    struct __compressed_pair<_XRDSYMObserverID **, std::__1::allocator<_XRDSYMObserverID *>> {
        struct _XRDSYMObserverID **_field1;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned char byte0;
    unsigned char byte1;
    unsigned char byte2;
    unsigned char byte3;
    unsigned char byte4;
    unsigned char byte5;
    unsigned char byte6;
    unsigned char byte7;
    unsigned char byte8;
    unsigned char byte9;
    unsigned char byte10;
    unsigned char byte11;
    unsigned char byte12;
    unsigned char byte13;
    unsigned char byte14;
    unsigned char byte15;
} CDStruct_e6eac3cb;

typedef struct {
    unsigned long long _field1;
    id _field2[1];
} CDStruct_1b81fc1c;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    int _field1;
    int _field2;
    void *_field3[3];
} CDStruct_a94d320b;

#pragma mark Named Unions

union _flagTableFilter_u {
    unsigned int value;
    struct _flagTableFilter {
        unsigned int user:1;
        unsigned int dtrace:1;
        unsigned int signal:1;
        unsigned int zombie:1;
        unsigned int warning:1;
        unsigned int error:1;
        unsigned int alloc:1;
        unsigned int objgraph:1;
        unsigned int symsrc:1;
        unsigned int generation:1;
        unsigned int time:1;
        unsigned int :21;
    } filter;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsPlugIn.framework/Versions/A/InstrumentsPlugIn
// UUID: B5A2294F-2CC5-3420-814D-E5F73248AC12
//
//                           Arch: x86_64
//                Current version: 56156.0.0
//          Compatibility version: 1.0.0
//                 Source version: 56156.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/Contents/SharedFrameworks
//                       Run path: @loader_path/../../../../../../../OtherFrameworks
//                               = /Applications/Xcode.app/Contents/OtherFrameworks
//                       Run path: @loader_path/../../../../../../../Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//                               = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib
//

@protocol CommonRawStack <NSCoding, NSObject>
- (long long)kernelFrameCount;
- (int)pid;
- (long long)count;
- (unsigned long long *)frames;
@end

@protocol CommonSymbol <NSCoding, NSObject>
- (NSString *)libraryPath;
- (NSString *)libraryName;
- (NSString *)symbolName;
- (int)pid;
- (unsigned long long)lineNumber;
- (NSString *)sourcePath;
- (unsigned long long)address;

@optional
- (PFTSymbolData *)resolvedSymbol;
@end

@protocol CommonTimeSample <NSCoding, NSObject>
- (id)extendedData;
- (id <CommonRawStack>)backtrace;
- (double)weight;
- (int)quantity;
- (unsigned long long)thread;
- (unsigned int)eventType;
- (unsigned long long)timestamp;

@optional
- (double)weightAtIndex:(unsigned int)arg1;
- (unsigned int)cpuIndex;
@end

@protocol DTApplicationObserver <DTXAllowedRPC>
- (void)applicationUninstalled:(NSDictionary *)arg1;
- (void)applicationInstalled:(NSDictionary *)arg1;
@end

@protocol DTApplicationWorkspaceClient <NSObject>
- (void)applicationUninstalled:(NSDictionary *)arg1;
- (void)applicationInstalled:(NSDictionary *)arg1;
@end

@protocol DTProcessControlObserver <DTXAllowedRPC>
- (void)outputReceived:(NSString *)arg1 fromProcess:(int)arg2 atTime:(unsigned long long)arg3;
- (void)pidDiedCallback:(NSNumber *)arg1;
@end

@protocol DTXAllowedRPC <NSObject>
@end

@protocol DataRepresentation <NSObject>
- (id)initWithDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 version:(long long)arg4 substitutions:(struct DataRepresentationSubstitutions *)arg5;
- (void)addToDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 substitutions:(struct DataRepresentationSubstitutions *)arg4;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMenuDelegate <NSObject>

@optional
- (struct CGRect)confinementRectForMenu:(NSMenu *)arg1 onScreen:(NSScreen *)arg2;
- (void)menu:(NSMenu *)arg1 willHighlightItem:(NSMenuItem *)arg2;
- (void)menuDidClose:(NSMenu *)arg1;
- (void)menuWillOpen:(NSMenu *)arg1;
- (BOOL)menuHasKeyEquivalent:(NSMenu *)arg1 forEvent:(NSEvent *)arg2 target:(id *)arg3 action:(SEL *)arg4;
- (BOOL)menu:(NSMenu *)arg1 updateItem:(NSMenuItem *)arg2 atIndex:(long long)arg3 shouldCancel:(BOOL)arg4;
- (long long)numberOfItemsInMenu:(NSMenu *)arg1;
- (void)menuNeedsUpdate:(NSMenu *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSOutlineViewDataSource <NSObject>

@optional
- (NSArray *)outlineView:(NSOutlineView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedItems:(NSArray *)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 item:(id)arg3 childIndex:(long long)arg4;
- (unsigned long long)outlineView:(NSOutlineView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedItem:(id)arg3 proposedChildIndex:(long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 writeItems:(NSArray *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)outlineView:(NSOutlineView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forItems:(NSArray *)arg4;
- (id <NSPasteboardWriting>)outlineView:(NSOutlineView *)arg1 pasteboardWriterForItem:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (id)outlineView:(NSOutlineView *)arg1 persistentObjectForItem:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 itemForPersistentObject:(id)arg2;
- (void)outlineView:(NSOutlineView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 byItem:(id)arg4;
- (id)outlineView:(NSOutlineView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(NSOutlineView *)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(NSOutlineView *)arg1 numberOfChildrenOfItem:(id)arg2;
@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)outlineViewItemDidCollapse:(NSNotification *)arg1;
- (void)outlineViewItemWillCollapse:(NSNotification *)arg1;
- (void)outlineViewItemDidExpand:(NSNotification *)arg1;
- (void)outlineViewItemWillExpand:(NSNotification *)arg1;
- (void)outlineViewSelectionIsChanging:(NSNotification *)arg1;
- (void)outlineViewColumnDidResize:(NSNotification *)arg1;
- (void)outlineViewColumnDidMove:(NSNotification *)arg1;
- (void)outlineViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)outlineView:(NSOutlineView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayOutlineCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldCollapseItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldExpandItem:(id)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 isGroupItem:(id)arg2;
- (NSCell *)outlineView:(NSOutlineView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (id)outlineView:(NSOutlineView *)arg1 nextTypeSelectMatchFromItem:(id)arg2 toItem:(id)arg3 forString:(NSString *)arg4;
- (NSString *)outlineView:(NSOutlineView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (double)outlineView:(NSOutlineView *)arg1 heightOfRowByItem:(id)arg2;
- (NSString *)outlineView:(NSOutlineView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(NSOutlineView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)outlineView:(NSOutlineView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)outlineView:(NSOutlineView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldSelectItem:(id)arg2;
- (BOOL)selectionShouldChangeInOutlineView:(NSOutlineView *)arg1;
- (BOOL)outlineView:(NSOutlineView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
- (void)outlineView:(NSOutlineView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 item:(id)arg4;
- (void)outlineView:(NSOutlineView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)outlineView:(NSOutlineView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)outlineView:(NSOutlineView *)arg1 rowViewForItem:(id)arg2;
- (NSView *)outlineView:(NSOutlineView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 item:(id)arg3;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol NSWindowDelegate <NSObject>

@optional
- (void)windowDidChangeOcclusionState:(NSNotification *)arg1;
- (void)windowDidExitVersionBrowser:(NSNotification *)arg1;
- (void)windowWillExitVersionBrowser:(NSNotification *)arg1;
- (void)windowDidEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowWillEnterVersionBrowser:(NSNotification *)arg1;
- (void)windowDidExitFullScreen:(NSNotification *)arg1;
- (void)windowWillExitFullScreen:(NSNotification *)arg1;
- (void)windowDidEnterFullScreen:(NSNotification *)arg1;
- (void)windowWillEnterFullScreen:(NSNotification *)arg1;
- (void)windowDidEndLiveResize:(NSNotification *)arg1;
- (void)windowWillStartLiveResize:(NSNotification *)arg1;
- (void)windowDidEndSheet:(NSNotification *)arg1;
- (void)windowWillBeginSheet:(NSNotification *)arg1;
- (void)windowDidChangeBackingProperties:(NSNotification *)arg1;
- (void)windowDidChangeScreenProfile:(NSNotification *)arg1;
- (void)windowDidChangeScreen:(NSNotification *)arg1;
- (void)windowDidUpdate:(NSNotification *)arg1;
- (void)windowDidDeminiaturize:(NSNotification *)arg1;
- (void)windowDidMiniaturize:(NSNotification *)arg1;
- (void)windowWillMiniaturize:(NSNotification *)arg1;
- (void)windowWillClose:(NSNotification *)arg1;
- (void)windowDidResignMain:(NSNotification *)arg1;
- (void)windowDidBecomeMain:(NSNotification *)arg1;
- (void)windowDidResignKey:(NSNotification *)arg1;
- (void)windowDidBecomeKey:(NSNotification *)arg1;
- (void)windowDidMove:(NSNotification *)arg1;
- (void)windowWillMove:(NSNotification *)arg1;
- (void)windowDidExpose:(NSNotification *)arg1;
- (void)windowDidResize:(NSNotification *)arg1;
- (void)window:(NSWindow *)arg1 didDecodeRestorableState:(NSCoder *)arg2;
- (void)window:(NSWindow *)arg1 willEncodeRestorableState:(NSCoder *)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willResizeForVersionBrowserWithMaxPreferredSize:(struct CGSize)arg2 maxAllowedSize:(struct CGSize)arg3;
- (void)windowDidFailToExitFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenOnScreen:(NSScreen *)arg2 withDuration:(double)arg3;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1 onScreen:(NSScreen *)arg2;
- (void)window:(NSWindow *)arg1 startCustomAnimationToExitFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToExitFullScreenForWindow:(NSWindow *)arg1;
- (void)windowDidFailToEnterFullScreen:(NSWindow *)arg1;
- (void)window:(NSWindow *)arg1 startCustomAnimationToEnterFullScreenWithDuration:(double)arg2;
- (NSArray *)customWindowsToEnterFullScreenForWindow:(NSWindow *)arg1;
- (unsigned long long)window:(NSWindow *)arg1 willUseFullScreenPresentationOptions:(unsigned long long)arg2;
- (struct CGSize)window:(NSWindow *)arg1 willUseFullScreenContentSize:(struct CGSize)arg2;
- (BOOL)window:(NSWindow *)arg1 shouldDragDocumentWithEvent:(NSEvent *)arg2 from:(struct CGPoint)arg3 withPasteboard:(NSPasteboard *)arg4;
- (BOOL)window:(NSWindow *)arg1 shouldPopUpDocumentPathMenu:(NSMenu *)arg2;
- (struct CGRect)window:(NSWindow *)arg1 willPositionSheet:(NSWindow *)arg2 usingRect:(struct CGRect)arg3;
- (NSUndoManager *)windowWillReturnUndoManager:(NSWindow *)arg1;
- (BOOL)windowShouldZoom:(NSWindow *)arg1 toFrame:(struct CGRect)arg2;
- (struct CGRect)windowWillUseStandardFrame:(NSWindow *)arg1 defaultFrame:(struct CGRect)arg2;
- (struct CGSize)windowWillResize:(NSWindow *)arg1 toSize:(struct CGSize)arg2;
- (id)windowWillReturnFieldEditor:(NSWindow *)arg1 toObject:(id)arg2;
- (BOOL)windowShouldClose:(id)arg1;
@end

@protocol PFTDetailViewProtocol
- (void)reloadDetailData;
- (NSString *)detailViewLabel;
- (void)setInspectionTimeInSeconds:(double)arg1;
@end

@protocol PFTHostViewProtocol
- (int)hostType;
@end

@protocol PFTScalableView
- (struct CGSize)scale;
- (double)setVerticalPercentage:(double)arg1;
- (double)setHorizontalPercentage:(double)arg1;
@end

@protocol SymbolAwareRun <NSObject>
- (XRBacktraceRepository *)backtraceRepository;
@end

@protocol XRBrushDataSource <NSObject>
- (unsigned long long)numberOfGraphsForRun:(XRRun *)arg1;
- (NSString *)graphStyleForRun:(XRRun *)arg1;

@optional
- (BOOL)hasBaselineForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 provideBackgroundTextForInspectionTimeStamp:(unsigned long long)arg2;
- (unsigned long long)supportedGraphTypesForRun:(XRRun *)arg1;
- (BOOL)stackGraphsForRun:(XRRun *)arg1;
- (BOOL)run:(XRRun *)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (long long)run:(XRRun *)arg1 numberOfLabelsForPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3 graphAtIndex:(long long)arg4;
- (void)run:(XRRun *)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(XRRun *)arg1 graphToCurrentTimeForGraphAtIndex:(long long)arg2;
- (NSString *)graphSummaryForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 pathTypeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (struct XRPathAttribute)run:(XRRun *)arg1 attributeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (unsigned long long)run:(XRRun *)arg1 stateForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (id)run:(XRRun *)arg1 graphedDataKeypath:(id *)arg2;
- (NSString *)run:(XRRun *)arg1 labelForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSString *)run:(XRRun *)arg1 labelForGraphAtIndex:(long long)arg2;
- (NSImage *)run:(XRRun *)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 forTimeRange:(struct XRTimeRange)arg4 minimumInterval:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(XRGraphSequence *)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
@end

@protocol XRCallTreeDataSource <NSObject>
- (XRBacktraceAggregator *)backtracesForCategory:(NSString *)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;

@optional
- (NSArray *)processCategoriesForPid:(int)arg1;
- (NSArray *)provideCategories;
@end

@protocol XRCodeLineProtocol
@property(readonly, nonatomic) unsigned long long length;
@property(readonly, nonatomic) unsigned long long byteOffset;
@property(readonly, nonatomic) NSString *lineString;

@optional
- (NSString *)timingString;
- (unsigned long long)lineNumber;
- (NSString *)locationReference;
- (unsigned long long)absoluteAddress;
- (NSAttributedString *)attributedLineString;
@end

@protocol XRCodeProvider
- (struct _CSTypeRef)kernelSymbolicator;
- (struct _CSTypeRef)csSymbolicator;
- (XRArchitecture *)deviceArchitecture;
- (BOOL)getSymbol:(id *)arg1 forAddress:(unsigned long long)arg2 inKernel:(BOOL)arg3;
- (BOOL)forEachSourceMappingInSymbol:(id <CommonSymbol>)arg1 forAddresses:(XRIndexSet *)arg2 executeBlock:(void (^)(struct _XRIndexRange, id <CommonSymbol>, unsigned long long))arg3;
- (BOOL)getSourceCode:(id *)arg1 andPath:(id *)arg2 forSymbol:(id <CommonSymbol>)arg3 error:(id *)arg4;
- (BOOL)getInstructions:(id *)arg1 cpu:(int *)arg2 cpuSubtype:(int *)arg3 mode:(unsigned long long *)arg4 forSymbol:(id <CommonSymbol>)arg5 error:(id *)arg6;
@end

@protocol XRComment <NSObject, NSCopying>
@property(retain, nonatomic) XRCodeFragment *fragment;
@property(retain, nonatomic) XRCodeFragment *disasmFragment;
@property(retain, nonatomic) XRCodeFragment *sourceFragment;
@property(readonly, nonatomic) NSArray *dataItems;
@property(readonly) double importance;
- (void)mergeWithComment:(id <XRComment>)arg1;
- (BOOL)canMergeWithComment:(id <XRComment>)arg1;
- (NSString *)stringWithType:(int)arg1;

@optional
- (BOOL)needsInspector;
- (BOOL)isMerged;
- (NSDictionary *)analysisInfo;
- (NSArray *)nextSymbols;
- (BOOL)isFragmentConvertible;
@end

@protocol XRContextContainer <NSObject>
- (NSView *)viewForContext:(XRContext *)arg1;
- (NSArray *)siblingsForContext:(XRContext *)arg1;
- (void)displayContext:(XRContext *)arg1;
- (XRContext *)contextRepresentation;

@optional
- (id <XRContextContainer>)contextContainerForUUID:(NSString *)arg1;
- (NSString *)uuid;
- (NSImage *)iconForContext:(XRContext *)arg1;
@end

@protocol XRDataElement
- (NSArray *)menuItemGroup;
- (NSView *)view;
- (NSView *)createView;
- (NSArray *)keyPaths;
- (id)target;
- (void)unbindTarget;
- (void)bindTarget:(id)arg1 toKeyPathArray:(NSArray *)arg2;
- (void)bindTarget:(id)arg1 toKeyPaths:(id)arg2;
- (BOOL)editableWhileRunning;
- (void)setEditableWhileRunning:(BOOL)arg1;
- (BOOL)overrideUserDefaults;
- (void)setOverrideUserDefaults:(BOOL)arg1;
- (BOOL)displayByDefault;
- (void)setDisplayByDefault:(BOOL)arg1;
- (BOOL)acceptsFirstResponderInContent;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (void)setStringValue:(NSString *)arg1;
- (NSString *)stringValue;
- (void)setDisplaysSelection:(BOOL)arg1;
- (BOOL)displaysSelection;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (NSString *)summary;
- (void)setTitle:(NSString *)arg1;
- (NSString *)title;
- (void)setCategory:(NSString *)arg1;
- (NSString *)category;

@optional
- (void)configureConfigurationButton:(DVTGradientImageButton *)arg1;
@end

@protocol XRDeviceObserver <NSObject>
- (void)handleDeviceNotification:(XRDevice *)arg1;
@end

@protocol XRFileObserver <NSObject>
- (void)rescanPath:(NSString *)arg1;
@end

@protocol XRFileSystem <NSObject>
@property(nonatomic) BOOL fileContentsOnly;
@property(copy, nonatomic) NSArray *fixedPathsList;
@property(nonatomic) __weak id owner;
- (NSImage *)imageForEntry:(NSDictionary *)arg1;
- (NSArray *)childrenForEntry:(NSDictionary *)arg1;
- (BOOL)isItemExpandable:(NSDictionary *)arg1;
@end

@protocol XRInspectorSource <NSObject>
- (XRInstrument *)instrument;
- (NSArray *)dataElementsForInspector:(id)arg1;
- (void)inspectorDismissed:(id)arg1;

@optional
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (NSArray *)configurationDataElementsForInspector:(id)arg1;
- (NSImage *)spotImage;
- (struct CGRect)spotRect;
@end

@protocol XRInstrumentTypeData <NSObject>
@property(readonly) DVTPlugIn *plugIn;
@property(readonly) NSArray *brushNames;
@property(readonly) NSString *helpURL;
@property(readonly) BOOL deprecated;
@property(readonly) BOOL beta;
@property(readonly) NSString *instrumentClassName;
@property(readonly) BOOL canReplay;
@property(readonly) NSString *uuid;
@property(readonly) NSArray *keywords;
@property(readonly) unsigned int deckUnits;
@property(readonly) NSImage *icon;
@property(readonly, copy) NSString *description;
@property(readonly) NSString *category;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;
- (id)valueForKey:(NSString *)arg1 error:(id *)arg2;
- (void)loadExtensionPlugIn;
- (void)loadExtensionBundle;
@end

@protocol XROutlineDetailViewUIDProvider
- (id <NSObject><NSCoding>)outlineView:(XROutlineDetailView *)arg1 uidForItem:(id)arg2;
@end

@protocol XRProcessObserver <NSObject>
- (void)processDeathDetectedForPid:(int)arg1;
@end

@protocol XRProcessTargetedObject <NSObject>
- (int)defaultTargetTypeForChooser;
- (XRDevice *)currentTargetDevice;
- (PFTProcess *)currentTargetProcess;
- (BOOL)supportsTargetType:(int)arg1;
- (void)setTargetsDevice:(XRDevice *)arg1;
- (void)setTargetsLaunchedProcess:(PFTProcess *)arg1;
- (void)setTargetsExistingProcess:(PFTProcess *)arg1;
- (void)setTargetsAllProcesses;
@end

@protocol XRRemoteDeviceAuthorizedAPI <DTXAllowedRPC>
- (void)memoryLevelNotification:(NSDictionary *)arg1;
- (void)applicationStateNotification:(NSDictionary *)arg1;
- (void)dyldNotificationReceived:(NSDictionary *)arg1;
@end

@protocol XRScriptDelegate <NSObject>

@optional
- (void)didSave;
- (void)willSave;
- (void)didRevertScript:(XRScript *)arg1 toTextView:(NSTextView *)arg2;
- (void)willRevertScript:(XRScript *)arg1 toTextView:(NSTextView *)arg2;
- (void)didSyncScript:(XRScript *)arg1 fromTextView:(NSTextView *)arg2;
- (void)willSyncScript:(XRScript *)arg1 fromTextView:(NSTextView *)arg2;
- (void)didLoadIntoTextView:(NSTextView *)arg1;
- (void)willLoadIntoTextView:(NSTextView *)arg1;
- (BOOL)automaticallyManageTargetLifecycle;
- (BOOL)configureScriptTargetEnvironment:(NSMutableDictionary *)arg1 arguments:(NSMutableString *)arg2 error:(id *)arg3;
- (void)target:(id)arg1 isReadyForScript:(XRScript *)arg2;
- (void)stopScript:(XRScript *)arg1;
- (BOOL)canRecordScript:(XRScript *)arg1;
- (BOOL)isRecordingScript:(XRScript *)arg1;
- (void)recordScript:(XRScript *)arg1;
- (BOOL)canPlayScript:(XRScript *)arg1;
- (BOOL)isPlayingScript:(XRScript *)arg1;
- (void)playScript:(XRScript *)arg1;
@end

@protocol XRSourceAnalyzerPlugin <NSObject, NSFastEnumeration>
+ (id <XRSourceAnalyzerPlugin>)sourceAnalyzerForString:(NSString *)arg1 ofType:(NSString *)arg2 error:(id *)arg3;
- (BOOL)getSourceLine:(id *)arg1 atIndex:(unsigned long long)arg2 error:(id *)arg3;
@end

@protocol XRStrataDataSource <XRBrushDataSource>
- (struct XRStrataGroup *)run:(XRRun *)arg1 strataGroupForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;

@optional
- (double)widthOfBlockGraphForRun:(XRRun *)arg1 usingScale:(struct CGSize)arg2;
@end

@protocol XRStrategyControllerDelegate
- (NSArray *)strategy:(XRStrategyController *)arg1 runsForRunNumber:(unsigned long long)arg2;
@end

@protocol XRSymbolSourceProxy <NSObject, NSCoding>
- (int)processIdentifier;
- (NSDictionary *)callTreeInformation;
- (PFTSymbolData *)concreteSymbol;
- (id <CommonSymbol>)symbol;

@optional
- (unsigned long long)markerAddress;
- (unsigned long long)markerLineNumber;
- (NSString *)markerPath;
- (BOOL)hasMarker;
- (void)setMarkerAtPath:(NSString *)arg1 atLineNumber:(unsigned long long)arg2 atAddress:(unsigned long long)arg3;
@end

@protocol XRTableColumnTableDelegate <NSObject>

@optional
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSView *)arg2 forTableColumn:(NSTableColumn *)arg3;
- (void)tableView:(NSTableView *)arg1 didAddColumnView:(NSView *)arg2 forTableColumn:(NSTableColumn *)arg3;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2;
@end

@protocol XRTemplateProtocol <NSObject>
- (void)awakeFromTemplate;
@end

@protocol XRTextPulseAnimationTarget
- (void)setTextPulseNeedsDisplay;
- (void)textPulseDidEnd;
- (void)setTextPulseAlpha:(double)arg1;
- (void)textPulseWillStart;
@end

@protocol XRThreadStrategyDataSource <NSObject>
- (NSArray *)threadsParticipatingInRun:(XRRun *)arg1;
@end

@protocol XRTopicInterfaceComponent <NSObject>
- (NSView *)view;
- (void)applyResult:(NSMutableDictionary *)arg1;
- (XRTopic *)subTopic;
- (void)setSubTopic:(XRTopic *)arg1;
- (id)initWithTopic:(XRTopic *)arg1;

@optional
- (int)topicViewer:(id <XRTopicViewer>)arg1 handleKeyDown:(id)arg2;
- (void)reloadData;
- (void)refresh;
@end

@protocol XRUIModelChangeObserver
- (void)modelDidChange:(NSNotification *)arg1;
@end

@protocol XRUIStackFrame <NSCoding, NSObject>
- (long long)lineNumberForDisplay;
- (NSString *)pathForDisplay;
- (NSString *)symbolNameForUse;
- (NSString *)symbolNameForDisplay;
- (NSString *)libraryForDisplay;
@end

@interface NSArray (PrivateAPI)
- (id)allItemsWithKeyPath:(id)arg1 equalTo:(id)arg2;
- (id)allItemsWithKey:(id)arg1 equalTo:(id)arg2;
- (id)itemWithKey:(id)arg1 equalTo:(id)arg2;
@end

@interface NSArray (XrayFoundationAdditions)
- (id)filteredArrayWithSelector:(SEL)arg1 range:(struct _NSRange)arg2 context:(void *)arg3;
@end

@interface NSBezierPath (PFTExtensions)
+ (id)bezierPathWithNWNotchedRectInRect:(struct CGRect)arg1 radius:(double)arg2 notchSize:(struct CGSize)arg3;
+ (id)bezierPathWithNENotchedRectInRect:(struct CGRect)arg1 radius:(double)arg2 notchSize:(struct CGSize)arg3;
+ (id)bezierPathWithPointingRectInRect:(struct CGRect)arg1 radius:(double)arg2;
+ (id)bezierPathWithHeavyRoundRectInRect:(struct CGRect)arg1 radius:(double)arg2;
+ (id)bezierPathWithLeftRoundRectInRect:(struct CGRect)arg1 radius:(double)arg2;
+ (id)bezierPathWithRoundRectInRect:(struct CGRect)arg1 radius:(double)arg2;
@end

@interface NSImage (PFTThemeManagerExtensions)
- (id)downsampledImageWithSize:(struct CGSize)arg1;
@end

@interface NSImage (PrivateAPI)
+ (id)menuImageForApplication:(id)arg1;
+ (id)imageForApplication:(id)arg1;
+ (id)imageForFile:(id)arg1;
+ (id)menuImageForPid:(int)arg1;
+ (id)imageNamed:(id)arg1 forClass:(Class)arg2;
+ (id)imageNamed:(id)arg1 forBundle:(id)arg2;
+ (id)searchBundlesForImageNamed:(id)arg1;
@end

@interface NSMutableArray (FormerTSFoundationExtra)
- (void)moveObjectsFromIndices:(unsigned long long *)arg1 numIndices:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)correctlyRemoveObjectsFromIndices:(unsigned long long *)arg1 numIndices:(unsigned long long)arg2;
- (void)addObjectsFromArrayIfAbsent:(id)arg1 basedOnKey:(id)arg2;
- (void)addObjectsFromArrayIfAbsent:(id)arg1;
- (void)addObjectIfAbsent:(id)arg1;
@end

@interface NSString (ByteStringComparsion)
- (long long)stringByteValue;
@end

@interface NSString (PFTExtensions)
- (id)displayNameForExecutablePath;
- (id)pathToAppWrapper;
- (id)wordAtIndex:(unsigned long long)arg1;
- (id)stringByReplacingCharacter:(unsigned short)arg1 withCharacter:(unsigned short)arg2;
- (id)stringByRemovingLeadingAndTrailingWhitespaceAndNewlines;
- (id)stringByRemovingLeadingAndTrailingWhitespace;
@end

@interface NSString (PrivateSortMethods)
- (long long)numericPrefixCompare:(id)arg1;
@end

@interface NSView (XRAutolayoutHelpers)
+ (id)autolayoutView;
@end

@interface NSView (XRViewController)
- (void)xr_override_setNextResponder:(id)arg1;
@property(retain, nonatomic) NSViewController *xr_viewController;
- (void)_setXr_viewController:(id)arg1;
@end

@interface PFTCallTreeNode : NSObject <CommonSymbol, XRUIStackFrame>
{
    void *_chunk;
    NSString *name;
    id data;
    unsigned long long parentalAddress;
    unsigned int terminals;
    int count;
    PFTCallTreeNode *representedNode;
    PFTCallTreeNode *parent;
    PFTCallTreeNode *root;
    PFTCallTreeNode *firstKids[2];
    struct __CFDictionary *childrenDict;
    int numberOfChildren;
    int pid;
    unsigned int _nodeFlags;
    id _cachedChildData;
    PFTCallTreeNode *_cachedChild;
    struct __CFDictionary *_terminalSamplesByKeyAddress;
    BOOL _childRetainsParent;
    unsigned long long _weightCount;
    struct {
        double selfWeight;
        double weight;
    } weights[1];
}

+ (id)newNodeWithWeightCount:(unsigned long long)arg1 name:(id)arg2;
+ (id)newNodeWithWeightCount:(unsigned long long)arg1;
+ (id)allocWithWeightCount:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (long long)lineNumberForDisplay;
- (id)pathForDisplay;
- (id)symbolNameForUse;
- (id)symbolNameForDisplay;
- (id)libraryForDisplay;
- (id)libraryPath;
- (id)libraryName;
- (unsigned long long)lineNumber;
- (id)sourcePath;
- (unsigned long long)address;
- (BOOL)recursivelyTrimLibraries:(id)arg1 keepBoundaries:(BOOL)arg2;
- (BOOL)recursivelyTrimSymbols:(id)arg1 prune:(BOOL)arg2;
- (BOOL)_recursivePruneWithBlock:(CDUnknownBlockType)arg1;
- (void)recursivelyPruneLeavingLibraryNames:(id)arg1 requireAny:(BOOL)arg2;
- (void)recursivelyPruneLeavingSymbolNames:(id)arg1 requireAny:(BOOL)arg2;
- (void)recursivePruneByWeightWithMin:(long long)arg1 max:(long long)arg2;
- (void)recursivePruneByCountWithMin:(unsigned int)arg1 max:(unsigned int)arg2;
- (void)mergeWithNode:(id)arg1 factor:(int)arg2;
- (void)flattenAllRecursion;
- (void)pruneChild:(id)arg1;
- (void)flattenChild:(id)arg1;
- (BOOL)recursiveFlattenWithDataSelector:(SEL)arg1 filterNonZero:(BOOL)arg2;
- (BOOL)recursiveFlattenWithPredicate:(id)arg1;
- (id)_heaviestInvolvingNodeWithStyle:(int)arg1;
- (id)heaviestInvolvingNodeAsCounts;
- (id)heaviestInvolvingNodeAsWeights;
- (id)heaviestInvolvingNodeAsBytes;
- (id)heaviestInvolvingNode;
- (double)selfCountPercent;
- (double)totalCountPercent;
- (double)parentCountPercent;
- (double)selfWeightPercent:(unsigned long long)arg1;
- (double)totalWeightPercent:(unsigned long long)arg1;
- (double)parentWeightPercent:(unsigned long long)arg1;
- (id)symbolData;
- (id)_symbolData;
- (id)data;
- (id)symbol;
- (void)setName:(id)arg1;
- (id)symbolName;
- (void)setShowAsCounts:(id)arg1;
- (void)setShowAsBytes:(id)arg1;
- (id)totalBytes;
- (id)selfBytes;
- (int)terminals;
- (int)count;
- (double)selfWeight:(unsigned long long)arg1;
- (double)weight:(unsigned long long)arg1;
- (unsigned long long)weightCount;
- (int)pid;
- (int)numberChildren;
- (id)children;
- (id)uidSet;
- (id)childWithSymbolName:(id)arg1;
- (id)childWithUid:(id)arg1;
- (id)symbolNamePath;
- (id)uidPath;
- (id)uid;
- (id)parent;
- (id)root;
- (id)_gatherSamples;
- (void)_recursiveGatherSamples:(id)arg1;
- (id)_assembleLineSpecificData;
- (void)_recursiveAssembleLineSpecificData:(id)arg1 baseSymbolData:(id)arg2;
- (void)setRoot:(id)arg1;
- (void)adopt:(id)arg1 merge:(BOOL)arg2 compare:(BOOL)arg3;
- (unsigned int)_thread;
- (void)fixupCounts;
- (id)getConcreteParent;
- (void)setDoNotRecalcWeightFlag;
- (void)setTopFunctionsFlag;
- (void)setIsTopOfStackFlag;
- (void)setPrivateDataFlag;
- (void)setIsInvertedFlag;
- (void)addTerminals:(int)arg1;
- (void)addSelfWeight:(double)arg1 forIndex:(unsigned long long)arg2;
- (void)addWeight:(double)arg1 forIndex:(unsigned long long)arg2;
- (long long)addSamples:(id)arg1 range:(struct _NSRange)arg2 leafName:(id)arg3 controller:(id)arg4 dataMining:(CDUnknownBlockType)arg5 firstLevelLookup:(id)arg6;
- (long long)addSamples:(id)arg1 range:(struct _NSRange)arg2 leafName:(id)arg3 controller:(id)arg4 dataMining:(CDUnknownBlockType)arg5;
- (id)addNewChildWithData:(id)arg1;
- (id)childThatMatchesNode:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)representedObject;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)copyWithDataForAddress:(unsigned long long)arg1;
- (void)_assignParent:(id)arg1 retain:(BOOL)arg2;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)dealloc;
- (oneway void)backgroundRelease;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTCornerTableView : NSView
{
    BOOL _drawAquaStyle;
    NSTableHeaderCell *_drawCell;
}

- (BOOL)isFlipped;
- (void)drawRect:(struct CGRect)arg1;
- (void)setDrawAquaStyle:(BOOL)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PFTDataElement : NSObject <XRDataElement>
{
    NSString *_category;
    NSString *_title;
    BOOL _editable;
    _BindObject *_value;
    NSView *_view;
    struct CGRect _enclosingRect;
    BOOL _displayByDefault;
    BOOL _overrideUserDefaults;
    NSString *_noticeMessage;
    BOOL _elementEnabled;
    BOOL _editableWhileRunning;
    NSString *_documentUUID;
    BOOL _displaysSelection;
    id _targetNotRetained;
    NSMutableArray *_keyPaths;
    Class _clz;
    NSMenu *_actionMenu;
    id _owner;
    DVTExtension *_extension;
}

+ (id)createForType:(id)arg1 category:(id)arg2 title:(id)arg3 editable:(BOOL)arg4 objectValue:(id)arg5;
+ (void)initialize;
@property(retain) DVTExtension *extension; // @synthesize extension=_extension;
@property(retain) NSMenu *actionMenu; // @synthesize actionMenu=_actionMenu;
- (void).cxx_destruct;
- (BOOL)dataViewCanResize;
- (void)configureConfigurationButton:(id)arg1;
- (id)menuItemGroup;
- (id)view;
- (id)createView;
- (id)noticeMessage;
- (void)setNoticeMessage:(id)arg1;
- (id)documentUUID;
- (void)setDocumentUUID:(id)arg1;
- (struct CGRect)enclosingRect;
- (id)title;
- (void)setTitle:(id)arg1;
- (id)bindObject;
- (void)setElementEnabled:(BOOL)arg1;
- (BOOL)elementEnabled;
- (id)keyPaths;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)unbindTarget;
- (void)bindTarget:(id)arg1 toKeyPathArray:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)bindTarget:(id)arg1 toKeyPaths:(id)arg2;
- (void)noteSearchCriteria:(id)arg1;
- (BOOL)isSearchCriteriaReady;
- (id)tooltipForSearchCriteria;
- (id)searchCriteria;
- (BOOL)isSearchCriteria;
- (void)setDisplaysSelection:(BOOL)arg1;
- (BOOL)displaysSelection;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (BOOL)editableWhileRunning;
- (void)setEditableWhileRunning:(BOOL)arg1;
- (BOOL)overrideUserDefaults;
- (void)setOverrideUserDefaults:(BOOL)arg1;
- (BOOL)displayByDefault;
- (void)setDisplayByDefault:(BOOL)arg1;
- (BOOL)acceptsFirstResponderInContent;
- (void)setEditable:(BOOL)arg1;
- (BOOL)isEditable;
- (id)summary;
- (id)description;
- (void)setCategory:(id)arg1;
- (id)category;
- (void)dealloc;
- (void)setup;
- (id)owner;
- (void)setOwner:(id)arg1;
- (id)initWithTitle:(id)arg1 editable:(BOOL)arg2 value:(id)arg3 viewer:(Class)arg4 owner:(id)arg5;
- (id)init;
- (id)initWithExtension:(id)arg1;

@end

@interface PFTDataElementList : NSObject
{
    NSString *_title;
    NSString *_placeholderString;
    NSMutableArray *_elements;
    NSMutableArray *_categoryNames;
    NSMutableArray *_categoryLists;
    BOOL _postUpdateNotifications;
}

+ (void)initialize;
- (id)elementsForCategory:(id)arg1;
- (id)categoryNames;
- (unsigned long long)categoryCount;
- (unsigned long long)indexOfElement:(id)arg1;
- (id)elementAtIndex:(unsigned int)arg1;
- (id)firstElement;
- (unsigned long long)count;
- (id)allElements;
- (void)removeAllElements;
- (void)addElements:(id)arg1;
- (void)removeElement:(id)arg1;
- (void)addElement:(id)arg1;
- (void)addElement:(id)arg1 toCategory:(id)arg2;
- (void)_postNotification:(id)arg1 forElement:(id)arg2;
- (id)placeholderString;
- (void)setPlaceholderString:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PFTDataElementView : NSView
{
    PFTDataElement *_dataElement;
}

- (id)dataElement;
- (void)setDataElement:(id)arg1;
- (void)dealloc;
- (id)initWithDataElement:(id)arg1;

@end

@interface PFTDisplaySymbol : NSObject <NSCopying, CommonSymbol, XRUIStackFrame>
{
    unsigned long long _address;
    NSString *_sourcePath;
    unsigned long long _lineNumber;
    int _pid;
    NSString *_symbolName;
    NSString *_libraryName;
    NSString *_libraryPath;
    PFTSymbolData *_resolvedSymbol;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (long long)lineNumberForDisplay;
- (id)pathForDisplay;
- (id)symbolNameForUse;
- (id)symbolNameForDisplay;
- (id)libraryForDisplay;
- (id)resolvedSymbol;
- (id)libraryPath;
- (id)libraryName;
- (id)symbolName;
- (int)pid;
- (unsigned long long)lineNumber;
- (id)sourcePath;
- (unsigned long long)address;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initWithAddress:(unsigned long long)arg1 sourcePath:(id)arg2 lineNumber:(unsigned long long)arg3 pid:(int)arg4 symbolName:(id)arg5 libraryName:(id)arg6 libraryPath:(id)arg7 andResolvedSymbol:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTProcess : NSObject <XRProcessObserver, NSCopying>
{
    NSString *_userProvidedArgs;
    NSDictionary *_userProvidedEnvironment;
    NSMutableDictionary *_mutatedEnvironment;
    NSString *_executablePath;
    NSString *_bundleIdentifier;
    XRDevice *_device;
    int _pid;
    BOOL _didLaunchProcess;
    int _specifiedType;
    BOOL _subtaskPaused;
    BOOL _restricted;
    PFTProcess *_hostProcess;
    NSDictionary *_properties;
    NSMutableDictionary *_launchControlProperties;
    NSImage *_atomicProcessImage;
}

+ (id)processFromData:(id)arg1 device:(id)arg2;
+ (id)chooseProcessWithDevice:(id)arg1 targetedObject:(id)arg2 prompt:(id)arg3 initialPath:(id)arg4 useForAllApplications:(char *)arg5;
+ (id)editProcess:(id)arg1 forCommand:(id)arg2 forDevice:(id)arg3 targetedObject:(id)arg4;
+ (id)chooseProcessForCommand:(id)arg1 withSelectedProcess:(id)arg2 forDevice:(id)arg3 targetedObject:(id)arg4;
+ (id)chooseExistingProcessForCommand:(id)arg1 forInstrument:(id)arg2;
+ (void)initialize;
@property(retain) NSImage *atomicProcessImage; // @synthesize atomicProcessImage=_atomicProcessImage;
@property(readonly) NSMutableDictionary *launchControlProperties; // @synthesize launchControlProperties=_launchControlProperties;
@property(copy) NSDictionary *properties; // @synthesize properties=_properties;
@property(copy, nonatomic) PFTProcess *hostProcess; // @synthesize hostProcess=_hostProcess;
@property BOOL restricted; // @synthesize restricted=_restricted;
@property(readonly) __weak XRDevice *device; // @synthesize device=_device;
@property(readonly) int processIdentifier; // @synthesize processIdentifier=_pid;
@property(readonly) NSString *executablePath; // @synthesize executablePath=_executablePath;
@property(copy) NSString *argumentsString; // @synthesize argumentsString=_userProvidedArgs;
- (void).cxx_destruct;
- (id)functionSymbolNames;
@property(readonly, copy) NSString *description;
@property int type;
@property(nonatomic, getter=isPaused) BOOL paused;
@property(copy) NSImage *image;
- (void)stop;
@property(readonly, getter=isRunning) BOOL running;
- (BOOL)run:(id *)arg1;
- (void)processDeathDetectedForPid:(int)arg1;
- (void)resetInitialEnvironmentAndArgs;
- (void)addEnvironmentVariable:(id)arg1 value:(id)arg2;
@property(readonly) NSArray *arguments;
@property(copy) NSDictionary *environment;
@property(readonly, nonatomic) int processDomain;
@property(readonly, nonatomic) PFTProcess *canonicalHostProcess;
@property(readonly) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly) NSString *displayName;
@property(readonly) NSString *processName;
- (id)templateData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (void)_setPid:(int)arg1 asOwner:(BOOL)arg2;
@property(readonly) BOOL _isProcessOwner;
- (id)initWithDevice:(id)arg1 path:(id)arg2 bundleIdentifier:(id)arg3 arguments:(id)arg4 environment:(id)arg5 launchOptions:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTExistingProcess : PFTProcess
{
}

- (id)initWithDevice:(id)arg1 path:(id)arg2 pid:(int)arg3;

@end

@interface PFTInlinedInstance : NSObject
{
    struct _CSRange instanceRange;
    PFTSymbolData *_inlinedCaller;
}

@property(nonatomic) PFTSymbolData *inlinedCaller; // @synthesize inlinedCaller=_inlinedCaller;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct _CSRange)range;
- (id)initWithInlinedCaller:(id)arg1 andRange:(struct _CSRange)arg2;

@end

@interface XRInstrument : NSObject <XRInspectorSource, XRContextContainer, XRTemplateProtocol, NSCoding>
{
    PFTInstrumentType *_type;
    XRTrace *_trace;
    unsigned long long _trueDetailViewType;
    int _graphType;
    NSMutableArray *_runList;
    BOOL _isEndingCommand;
    struct XRTimeRange _selectedTimeRange;
    NSSet *_tableIDsForNextRun;
    BOOL _isInvalid;
    int _states[6];
    XRRun *_run;
    long long _selectedRunIndex;
    NSString *_uuid;
    NSMutableArray *_permittedContexts;
    struct XRTimeRange _recordedDataTimeRange;
    PFTInstrumentCommand *_currentCommand;
    BOOL _addedAdHoc;
    int _commandType;
    PFTProcess *_commandTarget;
    id _targetDevice;
    BOOL _isSelected;
    double _generalScaleFactor;
    unsigned long long _inspectionTime;
    unsigned int _masterDeckUnits;
    unsigned int _detailDeckUnits;
    long long _selectedBrush;
    double _peakTrackValue;
    NSMutableDictionary *_peakTrackValuePerGraph;
    id <XRBrushDataSource> _cachedBrushDataSource;
    id _graphedDataTarget;
    BOOL _requiresControlBand;
    BOOL _ignoreContextChanges;
    BOOL _isDisplayingContext;
    NSMutableDictionary *_switchAttributes;
    BOOL _initializedSwitchAttributes;
    BOOL _isSettingDetailView;
    NSMutableArray *_navigationStack;
    NSArrayController *_navigationStackController;
    NSString *_primaryOptionDescription;
    NSObject *_sourceView;
    NSObject *_editorView;
    NSMutableArray *_scripts;
    unsigned long long _selectedScriptIndex;
    NSString *_selectedScriptUUID;
    NSObject *_consoleView;
    NSMutableDictionary *_detailViewPreferences;
    float _analysisProgress;
    NSRecursiveLock *_analysisProgressLock;
}

+ (id)dataElementWithIdentifier:(id)arg1 title:(id)arg2 editable:(BOOL)arg3 enabledWhileRunning:(BOOL)arg4 object:(id)arg5 target:(id)arg6 keyPaths:(id)arg7;
+ (void)initialize;
- (void)setAnalysisProgress:(float)arg1;
- (float)analysisProgress;
- (id)strategyIdentifiersSupported;
- (void)refreshSummaries;
- (BOOL)needsSummaryView;
- (id)eventDescriptorForIdentifier:(id)arg1;
- (id)preferenceForViewWithName:(id)arg1;
- (void)setViewPreferenceForName:(id)arg1 preference:(id)arg2;
- (id)dataMiningMenu;
- (BOOL)supportsDataMining;
- (id)primaryOptionKeyPath;
- (void)setPrimaryOptionDescription:(id)arg1;
- (id)primaryOptionDescription;
- (id)instrument;
- (id)dataElementsForInspector:(id)arg1;
- (void)inspectorDismissed:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)resetTargetDeviceProperties;
- (BOOL)hasCustomStateDisplayDescription;
- (id)stateDisplayDescription;
- (id)unsupportedDeviceReason:(id)arg1;
- (BOOL)isDeviceSupported:(id)arg1;
- (id)deviceStateDescription:(id)arg1;
- (void)setTargetDevice:(id)arg1;
- (id)targetDevice;
- (void)clearContextForContext:(id)arg1;
- (void)popDataContext:(id)arg1 forContext:(id)arg2;
- (void)pushDataContext:(id)arg1 forContext:(id)arg2;
- (id)dataContextForContext:(id)arg1;
- (void)popNavigationItem:(id)arg1;
- (void)pushNavigationItem:(id)arg1;
- (void)clearAllNavigationItems;
- (id)navigationStackController;
- (id)navigationStack;
- (void)setSelectedScript:(id)arg1;
- (id)selectedScript;
- (void)removeScript:(id)arg1;
- (void)addScript:(id)arg1;
- (id)allScriptsIncludingChildren;
- (id)scripts;
- (id)scriptEditor;
- (BOOL)supportsScriptEditor;
- (void)setSymbolSelected:(id)arg1 withCallTreeInformation:(id)arg2;
- (id)sourceView;
- (BOOL)supportsSource;
- (id)consoleView;
- (BOOL)supportsConsole;
- (BOOL)viewAsCallTree;
- (void)setViewAsCallTree:(BOOL)arg1;
- (BOOL)supportsCallTree;
- (void)_focusOnSummary:(id)arg1;
- (void)focusOnSummary:(id)arg1;
- (void)displayContextForPath:(id)arg1;
- (void)_displayContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (id)contextRepresentation;
- (id)siblingsForContext:(id)arg1;
- (BOOL)commonContextContainedInPathOfContext:(id)arg1;
- (id)topLevelCommonContexts;
- (id)splitterContext;
- (id)summaryViewContext;
- (id)sourceViewContext;
- (id)scriptViewContext;
- (id)consoleViewContext;
- (id)_permittedContexts;
- (id)iconForContext:(id)arg1;
- (id)_detailViewLabelForType:(unsigned long long)arg1;
- (id)detailViewLabelForType:(unsigned long long)arg1;
- (BOOL)isSettingDetailView;
- (void)setIsSettingDetailView:(BOOL)arg1;
- (void)_setDetailViewType:(unsigned long long)arg1;
- (void)setDetailViewType:(unsigned long long)arg1;
- (void)displayDetailViewType:(unsigned long long)arg1;
- (unsigned long long)defaultDetailViewType;
- (unsigned long long)_detailViewType;
- (unsigned long long)detailViewType;
- (unsigned long long)_detailViewTypeMask;
- (unsigned long long)detailViewTypeMask;
- (void)toggleControlBand;
- (BOOL)requiresControlBand;
- (void)setRequiresControlBand:(BOOL)arg1;
- (id)errorMessage;
- (void)setErrorMessage:(id)arg1;
- (void)setErrorMessage:(id)arg1 inSection:(id)arg2;
- (void)setErrorMessage:(id)arg1 inSection:(id)arg2 withHelpReference:(id)arg3;
- (BOOL)addedAdHoc;
- (void)setAddedAdHoc:(BOOL)arg1;
- (BOOL)useLegacyBrush;
- (BOOL)detailViewRequiresScrollView:(id)arg1;
- (id)allowedTriggerActions;
- (void)setDetailDeckUnits:(unsigned int)arg1;
- (unsigned int)detailDeckUnits;
- (void)setMasterDeckUnits:(unsigned int)arg1;
- (unsigned int)masterDeckUnits;
- (void)setGraphType:(int)arg1;
- (int)graphType;
- (void)resetPeakValues;
- (void)_resetPeakValues;
- (double)peakTrackValueForGraphAtIndex:(long long)arg1;
- (void)setPeakTrackValue:(double)arg1 forGraphAtIndex:(long long)arg2;
- (double)peakTrackValue;
- (void)setPeakTrackValue:(double)arg1;
- (void)_refreshTrackView;
- (void)setDetailViewScaleValue:(double)arg1;
- (double)detailViewScaleValue;
- (void)setSelected:(BOOL)arg1;
- (BOOL)isSelected;
- (id)_selectedSearchContext;
- (id)_searchContexts;
- (void)_filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (void)updateContext:(id)arg1 delayed:(BOOL)arg2;
- (void)updateContext:(id)arg1;
- (id)dataElementsForTargetCommands;
- (id)dataElementsForContext:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)detailView;
- (id)_dataElementsForContext:(id)arg1;
- (void)_setNeedsTrackViewRefresh;
- (void)_setNeedsSetupDataElementRefresh;
- (void)_setNeedsSearchDataElementRefresh;
- (void)_setNeedsDetailDataElementRefresh;
- (void)_setNeedsEventDataElementRefresh;
- (void)_setNeedsInstrumentDataElementRefresh;
- (id)switchAttributes;
- (void)freeSwitchAttributes;
- (void)initializeSwitchAttributes;
- (id)switchDescriptors;
- (BOOL)initialValueForSwitch:(id)arg1;
- (void)postCoreHighlightNotificationForThreadID:(unsigned long long)arg1 context:(id)arg2;
- (void)postThreadHighlightNotificationForThreadID:(unsigned long long)arg1 context:(id)arg2;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (struct XRTimeRange)selectedTimeRange;
- (unsigned long long)inspectionTime;
- (void)setInspectionTime:(unsigned long long)arg1;
- (void)halfTick:(id)arg1;
- (BOOL)requiresHalfTickNotification;
- (void)_tick:(id)arg1;
- (void)tick:(id)arg1;
- (BOOL)requiresTickNotification;
- (void)setCurrentBrushName:(id)arg1;
- (id)currentBrushName;
- (id)createBrushNamed:(id)arg1;
- (id)brushNames;
- (id)defaultBrushName;
- (void)resetBrushState;
- (struct XRTimeRange)recordedDataTimeRange;
- (void)didRecordDataInTimeRange:(struct XRTimeRange)arg1;
- (id)cachedBrushDataSource;
- (id)dataSourceForBrushWithName:(id)arg1;
- (void)updateTrackView;
- (void)updateTrackView:(BOOL)arg1;
- (void)updateTrackViewInRange:(struct XRTimeRange)arg1;
- (int)deckUnitsForHostType:(int)arg1;
- (double)trackHeightForHostType:(int)arg1;
- (void)setNeedsTrackRefresh;
- (id)createTrackSegment;
- (void)addTrackSegment:(BOOL)arg1;
- (id)selectedRun;
- (long long)selectedRunIndex;
- (BOOL)setSelectedRunIndex:(long long)arg1;
- (void)setShowRunsInUI:(BOOL)arg1;
- (BOOL)showRunsInUI;
- (BOOL)showRuns;
- (id)currentRun;
- (id)allRuns;
- (id)displayNameForRun:(id)arg1;
- (void)deleteRun:(id)arg1;
- (void)setCurrentRun:(id)arg1;
- (id)runWithRunNumber:(long long)arg1;
- (id)createRun;
- (void)_removeObserverFromBrushDataSourceTarget;
- (void)_addObserverToBrushDataSourceTarget;
- (BOOL)canAddFlag;
- (BOOL)canReplay;
- (BOOL)canRecord;
- (BOOL)canRun;
- (BOOL)targetPaused;
- (void)setTargetPaused:(BOOL)arg1;
- (void)disableRecording;
- (void)enableRecording;
- (BOOL)recordingEnabled;
- (void)setRecordingEnabled:(BOOL)arg1;
- (void)notifyStateChanged;
- (void)toggleAttribute:(int)arg1 withinHost:(id)arg2;
- (void)setState:(int)arg1 forAttribute:(int)arg2;
- (int)stateForAttribute:(int)arg1;
- (BOOL)supportsAttribute:(int)arg1 inHostType:(int)arg2;
- (id)createMenuForAttribute:(int)arg1 inHostType:(int)arg2;
- (void)_selectTrackBrush:(id)arg1;
- (BOOL)hasMenuForAttribute:(int)arg1 inHostType:(int)arg2;
- (void)stopRecording;
- (void)startRecording;
- (void)prepareToRecord;
- (void)initializeRunForCommand:(id)arg1;
- (BOOL)verifyEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (BOOL)configureEnvironment:(id)arg1 arguments:(id)arg2 instruments:(id)arg3 error:(id *)arg4;
- (void)setCurrentCommand:(id)arg1;
- (id)currentCommand;
- (void)endCommand:(id)arg1;
- (void)suspendDataCollection;
- (void)willEndCommand:(id)arg1;
- (void)_endTraceOnProcessFailure;
- (void)startCommand:(id)arg1;
- (void)cancelCommand:(id)arg1;
- (BOOL)acceptCommand:(id)arg1;
- (void)didLaunchTarget:(id)arg1;
- (void)willLaunchTarget:(id)arg1;
- (int)minimumAuthorizationRequirement;
- (void)targetTerminated:(id)arg1;
- (void)observeTargets:(BOOL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (id)coreStrategyController;
- (id)threadStrategyController;
- (void)setTrace:(id)arg1;
- (id)trace;
- (int)targetProcessIdentifier;
- (int)trueTargetType;
- (int)commandTypeViaUI;
- (void)setCommandTypeViaUI:(int)arg1;
- (int)defaultTargetType;
- (id)reasonForNotSupportingRecordingOptions:(id)arg1;
- (BOOL)supportsRecordingOptions:(id)arg1;
- (BOOL)supportsMode:(id)arg1;
- (BOOL)supportsTargetType:(int)arg1;
- (int)targetType;
- (void)setTargetType:(int)arg1;
- (id)uuid;
- (id)contextMenuTitleForColumnWithIdentifier:(id)arg1;
- (id)panelName;
- (id)displayName;
- (void)setDisplayContext:(id)arg1 visible:(BOOL)arg2;
- (BOOL)isDisplayContextVisible:(id)arg1;
- (BOOL)displayEnabled;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (int)hostType;
- (void)setType:(id)arg1;
- (id)type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)awakeFromTemplate;
- (void)invalidate;
- (void)dealloc;
- (id)initWithType:(id)arg1;
- (BOOL)needsCoreProfileTap;
- (BOOL)shouldPreloadCoreProfile;
- (id)extension;
- (id)initWithExtension:(id)arg1;
- (void)overrideDynamicTableRequirementsForNextRun:(id)arg1;
- (void)overrideDynamicSchemasForNextRun:(id)arg1;
- (void)updateAnalysisCoreForNextRun;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTInstrument : XRInstrument
{
    long long _lastEventIndexOfInterest;
    long long _eventIndexForInspection;
    NSOperationQueue *_operationQueue;
    BOOL _isInInspectionHeadUpdate;
    NSArray *_detailElements;
}

@property(copy, nonatomic) NSArray *detailElements; // @synthesize detailElements=_detailElements;
- (BOOL)useLegacyBrush;
- (BOOL)detailViewRequiresScrollView:(id)arg1;
- (id)operationQueue;
- (struct PFTEvent *)oppositeColocationEventToEvent:(struct PFTEvent *)arg1;
- (int)eventColocationType:(struct PFTEvent *)arg1;
- (id)popCurrentDetailView;
- (void)pushDetailView:(id)arg1;
- (id)dataElementsForContext:(id)arg1;
- (void)_postInspectionTimeChange;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)setInspectionTime:(unsigned long long)arg1;
- (long long)eventIndexForInspection;
- (void)setEventIndexForInspection:(long long)arg1;
- (long long)lastEventIndexOfInterest;
- (void)startCommand:(id)arg1;
- (BOOL)setSelectedRunIndex:(long long)arg1;
- (BOOL)canAddFlag;
- (void)dealloc;
- (id)initWithType:(id)arg1;

@end

@interface PFTInstrumentCommand : NSObject <NSCoding>
{
    double _startTime;
    double _endTime;
    long long _numberOfRuns;
    PFTProcess *_defaultExecProcess;
    PFTProcess *_defaultExistingProcess;
    int _commandPurpose;
    BOOL _forCommandLine;
    NSString *_uuid;
    XRRecordModeOptions *_recordModeOptions;
    XRTrace *_trace;
}

@property(retain) XRRecordModeOptions *recordModeOptions; // @synthesize recordModeOptions=_recordModeOptions;
- (id)uuid;
- (id)description;
- (int)commandPurpose;
- (void)setCommandPurpose:(int)arg1;
- (id)target;
- (id)defaultExistingProcess;
- (void)setDefaultExistingProcess:(id)arg1;
- (id)defaultExecProcess;
- (void)setDefaultExecProcess:(id)arg1;
- (id)trace;
- (void)setTrace:(id)arg1;
- (BOOL)isForCommandLine;
- (id)destination;
- (id)currentRunPath;
- (void)setNumberOfRuns:(long long)arg1;
- (long long)numberOfRuns;
- (double)endTime;
- (void)silentlySetStart:(double)arg1 end:(double)arg2;
- (void)markEnd;
- (double)startTime;
- (void)markStart;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)templateData;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initForCommandLine:(BOOL)arg1 andTrace:(id)arg2;

@end

@interface PFTInstrumentList : NSObject <PFTHostViewProtocol, NSCoding>
{
    NSMutableArray *_instruments;
    NSMutableDictionary *_instrumentsByPlugin;
    unsigned int _maxNumberAllowed;
    BOOL _bumpsFirstOnOverflow;
    int _viewType;
    unsigned int _instrumentsMissingFromRepository;
    XRTrace *_trace;
}

- (void).cxx_destruct;
- (unsigned long long)missingInstrumentCount;
- (BOOL)canReplay;
- (BOOL)canRecord;
- (BOOL)canRun;
- (void)pauseCommandWithState:(BOOL)arg1;
- (BOOL)allInstrumentsSupportMode:(id)arg1;
- (BOOL)allInstrumentsSupportTargetType:(int)arg1;
- (void)voteForEpoch:(id)arg1 fromDevice:(id)arg2;
- (void)endCommand:(id)arg1;
- (void)willEndCommand:(id)arg1;
- (void)startCommand:(id)arg1;
- (BOOL)prepareCommand:(id)arg1 error:(id *)arg2;
- (BOOL)verifyCommand:(id)arg1 error:(id *)arg2;
- (BOOL)acceptCommand:(id)arg1;
- (void)_enumerateInstrumentsByPluginWithBlock:(CDUnknownBlockType)arg1;
- (void)enumerateInstrumentsUsingBlock:(CDUnknownBlockType)arg1;
- (id)allInstruments;
- (id)selectedInstrument;
- (void)removeAllInstruments;
- (void)removeInstrument:(id)arg1;
- (void)removeInstrumentAtIndex:(unsigned long long)arg1;
- (void)moveInstrument:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)replaceInstrument:(id)arg1 withInstrument:(id)arg2;
- (void)addInstrument:(id)arg1;
- (void)addInstrument:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)instrumentByUUID:(id)arg1;
- (id)instrumentByUUIDType:(id)arg1;
- (unsigned long long)indexOfInstrument:(id)arg1;
- (id)instrumentAtIndex:(unsigned long long)arg1;
- (id)firstInstrument;
- (unsigned long long)count;
- (BOOL)isInstrumentOwner:(id)arg1;
- (void)_postNotification:(id)arg1 forInstrument:(id)arg2;
- (int)hostType;
- (void)setBumpsFirstOnOverflow:(BOOL)arg1;
- (BOOL)bumpsFirstOnOverflow;
- (void)setMaxNumberAllowed:(unsigned int)arg1;
- (unsigned int)maxNumberAllowed;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)trace;
- (void)setTrace:(id)arg1;
- (void)resetCommand;
- (void)replaceType:(id)arg1 withType:(id)arg2;
- (void)updateInstrumentsWithType:(id)arg1;
- (id)initForHostType:(int)arg1;
- (id)init;

@end

@interface PFTInstrumentPlugin : NSObject
{
    DVTExtension *_extension;
}

+ (id)keywordStopList;
+ (unsigned long long)scrapeContainerForWindowStartTime:(struct CPRecordContainer *)arg1;
@property(retain) DVTExtension *extension; // @synthesize extension=_extension;
- (void)voteForEpoch:(id)arg1 withInstruments:(id)arg2 fromDevice:(id)arg3;
- (id)keywordsForType:(id)arg1;
- (void)pauseInstruments:(id)arg1 withState:(BOOL)arg2;
- (void)endInstruments:(id)arg1 forCommand:(id)arg2;
- (void)willEndInstruments:(id)arg1 forCommand:(id)arg2;
- (void)startInstruments:(id)arg1 forCommand:(id)arg2;
- (BOOL)prepareInstruments:(id)arg1 forCommand:(id)arg2 error:(id *)arg3;
- (BOOL)verifyInstruments:(id)arg1 performCommand:(id)arg2 error:(id *)arg3;
- (BOOL)canInstruments:(id)arg1 performCommand:(id)arg2;
- (id)decodeTypeWithUUID:(id)arg1 withCoder:(id)arg2;
- (void)encodeType:(id)arg1 withCoder:(id)arg2;
- (void)removeType:(id)arg1;
- (void)addType:(id)arg1;
- (void)editInstrumentType:(id)arg1 forClient:(id)arg2;
- (void)editInstrumentType:(id)arg1 forClient:(id)arg2 errorMessage:(id)arg3 errorSection:(id)arg4;
- (BOOL)isInstrumentTypeDeletable:(id)arg1;
- (BOOL)isInstrumentTypeEditable:(id)arg1;
- (id)createInstrumentForType:(id)arg1;
- (id)instrumentTypes;
- (id)initWithExtension:(id)arg1;
- (id)init;

@end

@interface PFTInstrumentRegistry : NSObject
{
    NSMutableDictionary *_types;
    NSMutableArray *_localTypes;
    NSMutableArray *_sortedCategories;
    NSMutableArray *_templateTypes;
}

+ (id)sharedInstrumentRegistry;
- (id)typesCapableOfAttaching;
- (id)instrumentTypeWithUUID:(id)arg1;
- (id)templateTypes;
- (id)typesForCategory:(id)arg1;
- (id)localTypes;
- (id)types;
- (id)categories;
- (void)updateType:(id)arg1;
- (void)removeType:(id)arg1;
- (void)addTypeIfMissing:(id)arg1;
- (void)addType:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PFTInstrumentType : NSObject <NSCoding>
{
    PFTInstrumentPlugin *_plugIn;
    NSString *_instrumentClass;
    NSString *_name;
    NSString *_category;
    NSString *_description;
    NSImage *_icon;
    NSImage *_menuIcon;
    NSImage *_largeIcon;
    unsigned int _deckUnits;
    NSArray *_keywords;
    NSString *_uuid;
    BOOL _beta;
    BOOL _deprecated;
    NSArray *_brushNames;
    NSString *_helpURL;
    NSObject<XRInstrumentTypeData> *_data;
}

+ (id)typeWithPlugIn:(id)arg1 extension:(id)arg2;
@property(readonly) NSObject<XRInstrumentTypeData> *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)requiredTableSpecs;
- (id)description;
- (BOOL)deprecated;
- (BOOL)beta;
- (BOOL)isDeletable;
- (BOOL)isEditable;
- (BOOL)isInstrumentTemplate;
- (long long)caseInsensitiveCompare:(id)arg1;
- (id)apple_ref;
- (id)helpURL;
- (id)brushNames;
- (BOOL)canReplay;
- (id)uuid;
- (void)addTransientKeywords:(id)arg1;
- (id)keywords;
- (unsigned int)deckUnits;
- (id)largeIcon;
- (id)menuIcon;
- (id)icon;
- (id)typeDescription;
- (id)category;
- (id)name;
- (id)extension;
- (BOOL)supportsDevice:(id)arg1;
- (id)createInstrument;
- (Class)instrumentClass;
- (id)plugIn;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)unregisterType;
- (void)registerType;
- (id)initWithPlugIn:(id)arg1 data:(id)arg2;

@end

@interface PFTLibraryNameDisplayCell : NSTextFieldCell
{
    BOOL _disableLibraryColoring;
}

@property(nonatomic) BOOL disableLibraryColoring; // @synthesize disableLibraryColoring=_disableLibraryColoring;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface PFTMasterInstrument : PFTInstrument
{
    int _switchState;
}

- (void)setDriverSwitchState:(int)arg1;
- (int)driverSwitchState;
- (int)driverSwitchType;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (void)stopRecordingMasterTrack;
- (void)startRecordingMasterTrack;
- (BOOL)isPlayingBack;
- (BOOL)isRecordingMasterTrack;
- (BOOL)canRecordMasterTrack;

@end

@interface PFTNavButtonsTextAttachmentCell : NSTextAttachmentCell
{
    PFTNavButtonsTextCell *_realCell;
}

+ (id)attachmentCellForHelp:(SEL)arg1 target:(id)arg2 tooltip:(id)arg3;
+ (id)attachmentCellForJump:(SEL)arg1 target:(id)arg2 tooltip:(id)arg3;
- (struct CGPoint)cellBaselineOffset;
- (struct CGSize)cellSize;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (BOOL)wantsToTrackMouse;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)dealloc;
- (id)initWithNavCell:(id)arg1;

@end

@interface PFTNavButtonsTextCell : NSTextFieldCell
{
    NSMutableDictionary *_imageNameDictonaries;
    NSMutableDictionary *_buttonSelectors;
    NSMutableDictionary *_tooltipsForIdentifier;
    NSMutableArray *_buttonIdentifiers;
    unsigned long long _imageAlignment;
    BOOL _displayImages;
    BOOL _useAlternate;
    BOOL _scalesImages;
    NSImage *_image;
    NSString *_mouseOverIdentifier;
    NSString *_mouseDownIdentifier;
}

+ (BOOL)prefersTrackingUntilMouseUp;
- (void)drawWithExpansionFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)expansionFrameWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)trackMouse:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3 untilMouseUp:(BOOL)arg4;
- (struct CGSize)imageDrawSize;
- (struct CGRect)buttonRectForBounds:(struct CGRect)arg1;
- (void)selectWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 start:(long long)arg5 length:(long long)arg6;
- (void)editWithFrame:(struct CGRect)arg1 inView:(id)arg2 editor:(id)arg3 delegate:(id)arg4 event:(id)arg5;
- (unsigned long long)hitTestForEvent:(id)arg1 inRect:(struct CGRect)arg2 ofView:(id)arg3;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)titleRectForBounds:(struct CGRect)arg1;
- (id)toolTipForPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (id)identifierForPoint:(struct CGPoint)arg1 inBounds:(struct CGRect)arg2;
- (struct CGRect)rectForButtonsBasedOnTitleRect:(struct CGRect)arg1 inBounds:(struct CGRect)arg2;
- (id)buttonImageForIdentifer:(id)arg1;
- (void)addButtonWithIdentifier:(id)arg1 imageNames:(id)arg2 action:(SEL)arg3;
- (void)setAlternate:(BOOL)arg1;
- (BOOL)scalesImages;
- (void)setScalesImages:(BOOL)arg1;
- (void)setShowsImages:(BOOL)arg1;
- (void)setImageAlignment:(unsigned long long)arg1;
- (void)setImage:(id)arg1;
- (id)image;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface PFTNibView : NSView
{
    NSView *_view;
    NSMutableArray *_topLevelObjects;
    BOOL _settingUpNibView;
    BOOL _didSetupNibView;
}

- (id)classForNibName;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)dealloc;
- (void)setupNibView:(BOOL)arg1;
- (id)init;

@end

@interface PFTOwnerData : NSObject <NSCoding>
{
    int _isFromSystemLibraries;
    int _pid;
    unsigned int oTypeFlags;
    unsigned int csDataFlags;
    NSString *ownerName;
    CDStruct_e6eac3cb uuidBytes;
    NSString *ownerPath;
    struct _CSArchitecture arch;
    BOOL hasUUID;
}

+ (void)initialize;
- (BOOL)hasDSYMInformation;
- (BOOL)isFromSystemLibraries;
- (const CDStruct_e6eac3cb *)uuidBytes;
- (id)UUIDString;
- (void)setPid:(int)arg1;
- (int)pid;
- (struct _CSArchitecture)arch;
- (id)libraryPath;
- (id)libraryName;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (BOOL)isEqual:(id)arg1;
- (BOOL)isEqualInName:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 path:(id)arg2 pid:(int)arg3 uuid:(const CDStruct_e6eac3cb *)arg4 flags:(unsigned int)arg5 dataFlags:(unsigned int)arg6 arch:(struct _CSArchitecture)arg7;

@end

@interface PFTPersistentSymbols : NSObject <NSCoding, XRCodeProvider>
{
    XRDevice *_device;
    int _pid;
    BOOL _symbolicatorAttemptMade;
    struct __CFDictionary *_cfSymbolDataForAddress;
    struct __CFDictionary *_ownerDataForRealSymbolOwners;
    struct __CFDictionary *_symbolDataForRealSymbols;
    NSMutableDictionary *_symbolDataForNameAndPath;
    NSMutableArray *_duplicateSymbols;
    struct __CFDictionary *_threadIdentifierToNameDict;
    NSObject<OS_dispatch_queue> *_symToAddrQueue;
    struct _opaque_pthread_mutex_t _threadNamingLock;
    struct _CSTypeRef _symbolicator;
    struct _CSTypeRef _kernelSymbolicator;
    struct __CFData *_signature;
    struct __CFData *_kernelSignature;
    NSMutableArray *_usedThreadNames;
    BOOL _compatabilityCastDown;
    BOOL _unarchived;
    XRCodeManager *_sourceManager;
    NSString *_execName;
    XRArchitecture *_deviceArch;
}

+ (void)_notifyClientsSymbolicatorCreated:(id)arg1;
+ (id)_findSourcePathForProposedSearchPath:(id)arg1;
+ (void)doneWithSymbolStore:(id)arg1;
+ (id)sharedSymbolStoreForPid:(int)arg1 forDevice:(id)arg2;
+ (id)sharedSymbolStoreForPid:(int)arg1 forDevice:(id)arg2 signature:(struct __CFData *)arg3 kernelSignature:(struct __CFData *)arg4;
+ (void)initialize;
- (id)_shadowOwnerForCSOwner:(struct _CSTypeRef)arg1;
- (id)_shadowSymbolForCSSymbol:(struct _CSTypeRef)arg1 isConcrete:(BOOL)arg2;
- (id)_shadowSymbolForAddress:(unsigned long long)arg1 inSymbolicator:(struct _CSTypeRef)arg2 atTime:(unsigned long long)arg3;
- (id)_iterateStackFramesForAddress:(unsigned long long)arg1 inSymbolOwner:(struct _CSTypeRef)arg2 atTime:(unsigned long long)arg3;
- (id)_emptySymbolDataWithName:(id)arg1 withAddress:(unsigned long long)arg2 withSymbolOwner:(struct _CSTypeRef)arg3;
- (void)_makeSymbolicatorAttempt;
- (id)getOwnerDataByUUID:(const CDStruct_e6eac3cb *)arg1 faultingSymbolOwner:(struct _CSTypeRef)arg2;
- (BOOL)getSourceDeclarationPath:(id *)arg1 andLineNumber:(struct _NSRange *)arg2 forIvar:(id)arg3 ofClass:(id)arg4;
- (id)inDwarf:(void *)arg1 compileUnit:(id)arg2 findHeaderForiVar:(id)arg3 inClass:(id)arg4;
- (void)printDIEObject:(void *)arg1 object:(id)arg2;
- (BOOL)getSymbol:(id *)arg1 forAddress:(unsigned long long)arg2 inKernel:(BOOL)arg3;
- (BOOL)forEachSourceMappingInSymbol:(id)arg1 forAddresses:(id)arg2 executeBlock:(CDUnknownBlockType)arg3;
- (BOOL)getSourceCode:(id *)arg1 andPath:(id *)arg2 forSymbol:(id)arg3 error:(id *)arg4;
- (BOOL)getInstructions:(id *)arg1 cpu:(int *)arg2 cpuSubtype:(int *)arg3 mode:(unsigned long long *)arg4 forSymbol:(id)arg5 error:(id *)arg6;
- (id)codeForSymbol:(id)arg1;
- (id)sourceCodeManager;
- (id)execNameForProcess;
- (int)pid;
- (id)deviceArchitecture;
- (id)architecture;
- (id)threads;
- (id)threadNameForThread:(unsigned long long)arg1 pid:(int)arg2;
- (id)learnThreadNameForThread:(unsigned long long)arg1 backtrace:(id)arg2;
- (id)symbolDataForName:(const char *)arg1;
- (id)ownerDataForAddress:(unsigned long long)arg1;
- (id)symbolDataWithName:(id)arg1 inSymbolOwner:(id)arg2;
- (id)symbolDataForAddress:(unsigned long long)arg1 isKernelSymbol:(BOOL)arg2;
- (id)symbolDataForAddress:(unsigned long long)arg1 isKernelSymbol:(BOOL)arg2 allowFault:(BOOL)arg3;
- (struct _CSTypeRef)kernelSymbolicator;
- (struct _CSTypeRef)csSymbolicator;
- (BOOL)symbolsCurrentlyAvailable;
- (void)replaceSourcePath:(id)arg1 withPath:(id)arg2;
- (void)resymbolicate;
- (void)saveFakeSymbolWithName:(id)arg1 address:(unsigned long long)arg2;
- (void)learnSymbolsForBacktrace:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)_addLookupAddressesFromShadowSymbol:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;
- (id)initWithDevice:(id)arg1 signature:(struct __CFData *)arg2 kernelSignature:(struct __CFData *)arg3 pid:(int)arg4;
- (void)_setupSynchronization;

@end

@interface PFTPidPickerController : NSViewController <XRProcessTargetedObject>
{
    NSPopUpButton *_pidPicker;
    NSButton *_applyToAllButton;
    NSImageView *_imageView;
    NSTextField *_label;
    PFTProcess *_process;
    XRInstrument *_instrument;
}

- (void).cxx_destruct;
- (id)currentTargetDevice;
@property(readonly) PFTProcess *currentTargetProcess;
- (BOOL)supportsTargetType:(int)arg1;
- (id)defaultProcess;
- (int)defaultTargetTypeForChooser;
- (void)setTargetsDevice:(id)arg1;
- (void)setTargetsLaunchedProcess:(id)arg1;
- (void)setTargetsExistingProcess:(id)arg1;
- (void)setTargetsAllProcesses;
@property(readonly) BOOL applyToAll;
- (void)_cancelClicked:(id)arg1;
- (void)_okClicked:(id)arg1;
- (id)initWithInstrument:(id)arg1;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTTrackBrush : NSObject
{
    BOOL _thumbScale;
}

@property BOOL thumbScale; // @synthesize thumbScale=_thumbScale;
- (BOOL)requiresBackground;
- (BOOL)cachingAllowed;
- (void)updateMarkersForTrackSegment:(id)arg1 forInstrument:(id)arg2 forRun:(id)arg3 startIndex:(unsigned long long)arg4 length:(unsigned long long)arg5 inRect:(struct CGRect)arg6 usingScale:(struct CGSize)arg7 recordingHeadLocation:(double)arg8 inspectionHead:(double)arg9;
- (void)drawAboveRun:(id)arg1 forInstrument:(id)arg2 inRect:(struct CGRect)arg3 visibleRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 recordingHeadLocation:(double)arg6 inspectionHead:(double)arg7;
- (void)drawTrackSegment:(id)arg1 eventRange:(struct _NSRange)arg2 inRect:(struct CGRect)arg3;

@end

@interface PFTPointTrackBrush : PFTTrackBrush
{
    NSMutableArray *_verticalKeys;
}

- (void)drawTrackSegment:(id)arg1 eventRange:(struct _NSRange)arg2 inRect:(struct CGRect)arg3;
- (void)dealloc;

@end

@interface PFTQuantityTrackBrush : PFTTrackBrush
{
    NSString *_key;
    NSString *_title;
    NSString *_description;
    BOOL _graphsDuration;
    int _style;
}

- (BOOL)cachingAllowed;
- (void)drawAboveRun:(id)arg1 forInstrument:(id)arg2 inRect:(struct CGRect)arg3 visibleRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 recordingHeadLocation:(double)arg6 inspectionHead:(double)arg7;
- (void)updateMarkersForTrackSegment:(id)arg1 forInstrument:(id)arg2 forRun:(id)arg3 startIndex:(unsigned long long)arg4 length:(unsigned long long)arg5 inRect:(struct CGRect)arg6 usingScale:(struct CGSize)arg7 recordingHeadLocation:(double)arg8 inspectionHead:(double)arg9;
- (void)drawTrackSegment:(id)arg1 eventRange:(struct _NSRange)arg2 inRect:(struct CGRect)arg3;
- (void)dealloc;
- (id)initWithKey:(id)arg1 title:(id)arg2 description:(id)arg3;
- (id)initWithKey:(id)arg1 title:(id)arg2 description:(id)arg3 graphsDuration:(BOOL)arg4 style:(int)arg5;

@end

@interface XRRun : NSObject <NSCoding>
{
    long long _runNumber;
    double _startTime;
    double _endTime;
    NSString *_path;
    NSString *_errMessage;
    NSString *_errSection;
    NSString *_helpReference;
    NSMutableDictionary *_runData;
    NSMutableArray *_trackSegments;
    BOOL _dataChanged;
    BOOL _fetchedArchInfo;
    BOOL _is64BitTarget;
    NSMutableArray *_flags;
    NSLock *_flagsLock;
    XRManagedObjectList *_bookmarkFlags;
    struct _XRDeviceTimeInfo _deviceTimeInfo;
    XRInstrument *_instrument;
    XRDatasetExpertSpace *_datasetExpertSpace;
    NSString *_coreProfileTapUUID;
}

+ (void)initialize;
@property(retain) NSString *coreProfileTapUUID; // @synthesize coreProfileTapUUID=_coreProfileTapUUID;
@property BOOL dataChanged; // @synthesize dataChanged=_dataChanged;
- (void)selectRowsFromDatasetExpert:(id)arg1;
@property(readonly) XRDatasetExpertSpace *datasetExpertSpace;
- (void)didInitializeDatasetExpertSpace:(id)arg1;
- (id)eventDescriptorForIdentifier:(id)arg1;
- (id)threadStrategyController;
- (id)helpReference;
- (void)setHelpReference:(id)arg1;
- (id)errorSection;
- (id)errorMessage;
- (void)setErrorMessage:(id)arg1;
- (void)setErrorMessage:(id)arg1 inSection:(id)arg2;
- (void)resymbolicationDidComplete;
- (void)setIs64bit:(BOOL)arg1;
- (BOOL)is64Bit;
- (id)interfaceObjectForKey:(id)arg1;
- (void)setInterfaceObject:(id)arg1 forKey:(id)arg2;
- (id)userInterfaceData;
- (id)dataContextObjectForKey:(id)arg1;
- (void)setDataContextObject:(id)arg1 forKey:(id)arg2;
- (id)dataContexts;
- (id)bookmarkFlags;
@property(readonly) const struct _XRDeviceTimeInfo *deviceTimeInfo;
- (void)highlightFlag:(id)arg1 focus:(BOOL)arg2;
- (id)flagWithValue:(id)arg1 forKey:(id)arg2;
- (id)flagList;
- (unsigned long long)flagCount;
- (BOOL)hasFlags;
- (void)removeFlag:(id)arg1;
- (void)addFlag:(id)arg1;
- (Class)connectionDecoratorForStrategy:(id)arg1;
- (Class)decoratorForStrategy:(id)arg1;
- (void)cleanupFromView;
- (void)stopCurrentTrackSegmentNow;
- (void)addTrackSegment:(id)arg1;
- (void)clearTrackSegments;
- (void)_addTrackSegment:(id)arg1;
- (id)allSegments;
- (int)targetProcessIdentifier;
- (void)setTargetProcessIdentifier:(int)arg1;
@property(readonly) struct XRTimeRange timeRange;
- (BOOL)isRunning;
- (void)setEnd:(double)arg1;
- (double)endTime;
- (void)setStart:(double)arg1;
- (double)startTime;
@property(readonly) NSURL *coreProfileTapURL;
@property(readonly) NSURL *intermediatesURL;
- (id)path;
- (id)displayName;
- (long long)runNumber;
@property XRInstrument *instrument;
- (BOOL)shouldSaveToDocument;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)setPath:(id)arg1;
- (void)setupWithRunNumber:(long long)arg1 atPath:(id)arg2;
- (id)init;
- (void)finishedImportingSession:(id)arg1;
- (void)prepareToImportSession:(id)arg1;

@end

@interface PFTRun : XRRun
{
    struct PFTEvent *_eventsBuffer;
    unsigned long long _eventsBufferSize;
    unsigned long long _eventCapacity;
    unsigned long long _eventWritingIndex;
    long long _growthRate;
    BOOL _reordered;
    NSRecursiveLock *_eventBufferLock;
    struct PFTEvent *_firstEvent;
    struct PFTEvent *_secondEvent;
    unsigned long long _selectedStartIndex;
    unsigned long long _selectedEndIndex;
}

+ (void)initialize;
- (void)addTrackSegment:(id)arg1;
- (void)getFocusedEventRangeFrom:(struct PFTEvent **)arg1 to:(struct PFTEvent **)arg2;
- (void)setFocusedEventRangeFrom:(struct PFTEvent *)arg1 to:(struct PFTEvent *)arg2;
- (long long)lastEventIndex;
- (struct PFTEvent *)eventBuffer;
- (id)stringOfKeyedValue:(id)arg1 forEvent:(struct PFTEvent *)arg2 forInstrument:(id)arg3 lock:(BOOL)arg4;
- (float)quantityOfKeyedValue:(id)arg1 forEvent:(struct PFTEvent *)arg2 atIndex:(unsigned long long)arg3 forInstrument:(id)arg4 lock:(BOOL)arg5;
- (struct PFTEvent *)filteredEventAtIndex:(long long)arg1 lock:(BOOL)arg2;
- (long long)filteredCountUsingLock:(BOOL)arg1;
- (struct PFTEvent *)eventAtIndexNoLock:(long long)arg1;
- (struct PFTEvent *)eventAtIndex:(long long)arg1;
- (struct PFTEvent *)_eventAtIndex:(long long)arg1;
- (unsigned long long)timestampForEventIndex:(long long)arg1;
- (struct PFTEvent *)lastEvent;
- (struct PFTEvent *)lastEventLock:(BOOL)arg1;
- (void)moveTopTo:(unsigned long long)arg1 lock:(BOOL)arg2;
- (struct PFTEvent *)checkAndReorderLastEventUsingLock:(BOOL)arg1;
- (BOOL)reorderFetchAndReset;
- (void)addEvent:(struct PFTEvent)arg1 lock:(BOOL)arg2;
- (struct PFTEvent *)newEventLock:(BOOL)arg1;
- (struct PFTEvent *)newEvent;
- (void)growEventsBufferLock:(BOOL)arg1;
- (void)growEventsBuffer;
- (void)unlockEventBuffer;
- (void)lockEventBuffer;
- (BOOL)isMultiThreaded;
- (unsigned long long)selectedEndIndex;
- (unsigned long long)selectedStartIndex;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (unsigned long long)lastFilteredEventIndexRelativeToTime:(double)arg1;
- (unsigned long long)lastEventIndexRelativeToTime:(double)arg1;
- (unsigned long long)lastEventIndexRelativeToTimeInNanoSeconds:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)setupWithRunNumber:(long long)arg1 atPath:(id)arg2;
- (void)setInstrument:(id)arg1;

@end

@interface PFTSelection : NSResponder
{
    NSObject<PFTSelectionSource> *_source;
    NSMutableArray *_delegates;
}

- (id)bundle;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (BOOL)respondsToSelector:(SEL)arg1;
- (id)aggregateElements;
- (void)removeFromAggregate:(id)arg1;
- (void)addToAggregate:(id)arg1;
- (int)validateAction:(SEL)arg1;
- (int)validateItem:(id)arg1;
- (int)validateAndPerformAction:(SEL)arg1;
- (void)revalidate;
- (id)titleOfInspector;
- (id)source;
- (void)dealloc;
- (id)initWithSource:(id)arg1;

@end

@interface PFTSymbolData : NSObject <NSCoding, CommonSymbol, XRUIStackFrame, NSCopying>
{
    NSString *sourcePath;
    struct XRLineNumData *addressData;
    int numAddresses;
    int addressesCapacity;
    BOOL _missingSymbolName;
    struct _CSRange symbolRange;
    unsigned int fTypeFlags;
    PFTOwnerData *ownerData;
    NSMutableArray *inlinedInstances;
    NSString *symbolName;
}

+ (void)initialize;
- (long long)lineNumberForDisplay;
- (id)pathForDisplay;
- (id)symbolNameForUse;
- (id)symbolNameForDisplay;
- (id)libraryForDisplay;
@property(readonly, copy) NSString *description;
- (BOOL)isDyldStub;
- (BOOL)isJavaMethod;
- (BOOL)isObjcMethod;
- (BOOL)isFunction;
- (BOOL)isDsym;
- (BOOL)isBundle;
- (BOOL)isDyld;
- (BOOL)isDylib;
- (BOOL)isAOut;
- (BOOL)isProtected;
- (BOOL)isMachO;
- (BOOL)symbolRangeContainsAddress:(unsigned long long)arg1;
- (unsigned long long)offsetWithinConcreteSymbolForAddress:(unsigned long long)arg1;
- (id)findConcreteCallerAtAddress:(unsigned long long)arg1;
- (id)findCallerOfInlinedInstanceAtAddress:(unsigned long long)arg1;
- (void)addInlinedInstanceWithCaller:(id)arg1 andRange:(struct _CSRange)arg2;
- (void)replacePath:(id)arg1 withPath:(id)arg2;
- (id)keyVersionForAddress:(unsigned long long)arg1;
- (id)displayVersionForAddress:(unsigned long long)arg1;
- (void)updateAddress:(unsigned long long)arg1 line:(unsigned int)arg2 path:(const char *)arg3;
- (void)logAddress:(unsigned long long)arg1 line:(unsigned int)arg2 path:(const char *)arg3;
- (unsigned long long)enumerateAddressInformationWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)lineNumberForAddress:(unsigned long long)arg1;
- (unsigned long long)lineNumber;
- (unsigned long long)address;
- (int)pid;
- (BOOL)isConcrete;
- (void)setRange:(struct _CSRange)arg1;
- (struct _CSRange)range;
- (id)sourcePath;
- (id)owner;
- (id)libraryPath;
- (id)libraryName;
- (id)symbolName;
- (BOOL)isFromSystemLibraries;
- (BOOL)isMissingSymbolName;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)initWithName:(id)arg1 addressRange:(struct _CSRange)arg2 path:(id)arg3 lineNumber:(unsigned int)arg4 flags:(unsigned int)arg5 ownerData:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface PFTTableDataSource : NSObject <NSTableViewDataSource>
{
    NSPredicate *_filterPredicate;
    int _excludedRowCount;
    id <NSTableViewDelegate> _delegate;
    id <NSTableViewDataSource> _dataSource;
    NSMutableIndexSet *_includedIndices;
    NSMutableIndexSet *_excludedIndices;
}

- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)clearFilteredData;
- (id)filterPredicate;
- (void)setFilterPredicate:(id)arg1;
- (id)dataSource;
- (void)setDataSource:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTTableDetailView : NSTableView <PFTScalableView, PFTDetailViewProtocol>
{
    BOOL _isSetup;
    BOOL _shouldSizeToFit;
    BOOL _shouldReorder;
    BOOL _delegateChecked;
    BOOL _delegateResponds;
    struct CGRect _visibleRect;
    long long _selectedRow;
    long long _lastTrackedCellX;
    long long _lastTrackedCellY;
    struct CGRect _lastTrackedRect;
    BOOL _isTracking;
    BOOL _isBeingAddedToWindow;
    NSTableColumn *_trackingColumn;
    NSString *_name;
    NSMutableDictionary *_viewingPreferences;
    NSString *_detailViewLabel;
    BOOL _filtering;
    PFTTableDataSource *_tableDataSource;
}

+ (id)_stringForRows:(id)arg1 inView:(id)arg2 delimiter:(unsigned short)arg3;
- (void)copy:(id)arg1;
- (id)exportableData;
- (void)reloadDetailData;
- (id)detailViewLabel;
- (void)setInspectionTimeInSeconds:(double)arg1;
- (id)instrument;
- (void)setDelegate:(id)arg1;
- (void)setInstrument:(id)arg1;
- (void)startNow:(double)arg1;
- (void)keyDown:(id)arg1;
- (void)drawBackgroundInClipRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)reloadData;
- (void)setFilterPredicate:(id)arg1;
- (void)setDetailViewLabel:(id)arg1;
- (void)removeAllTableColumns;
- (struct CGSize)scale;
- (double)setVerticalPercentage:(double)arg1;
- (double)setHorizontalPercentage:(double)arg1;
- (void)setVisibilityOfTableColumnWithIdentifier:(id)arg1 hidden:(BOOL)arg2;
- (void)setHighlightedTableColumn:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewDidMoveToWindow;
- (BOOL)isBeingAddedToWindow;
- (void)restorePowerTraceDetailView;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)defaultViewSymbolAction:(id)arg1;
- (void)toggleVisibility:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (void)setupContextMenuForColumns;
- (void)moveColumn:(long long)arg1 toColumn:(long long)arg2;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)tableDetailView:(id)arg1 shouldDisplayActionInRow:(long long)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (id)addColumn:(id)arg1 weightIndex:(unsigned long long)arg2 title:(id)arg3 datacell:(id)arg4;
- (id)addColumn:(id)arg1 title:(id)arg2 datacell:(id)arg3;
- (id)addActionColumn:(id)arg1 weightIndex:(unsigned long long)arg2 action:(SEL)arg3 target:(id)arg4 title:(id)arg5;
- (id)addActionColumn:(id)arg1 action:(SEL)arg2 target:(id)arg3 title:(id)arg4;
- (id)tableColumnWithIdentifier:(id)arg1 andIndex:(unsigned long long)arg2;
- (long long)columnWithIdentifier:(id)arg1 andIndex:(unsigned long long)arg2;
- (void)dealloc;
- (void)_recordSelectionState;
- (void)setupView;
- (void)setShouldSizeToFit:(BOOL)arg1;
- (id)name;
- (id)initWithName:(id)arg1;

@end

@interface PFTTableHeaderCell : DVTModernTableHeaderCell
{
}

- (id)initTextCell:(id)arg1;
- (void)highlight:(BOOL)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;

@end

@interface PFTThemeManager : NSObject
{
}

+ (void)addResourceTemplateIcon:(id)arg1;
+ (id)publicTemplateIcons;
+ (id)consoleIcon;
+ (id)sourceIcon;
+ (id)snapshotIcon;
+ (id)diagramIcon;
+ (id)outlineIcon;
+ (id)tableIcon;
+ (id)coloredIconForSymbolData:(id)arg1;
+ (id)iconForLibraryType:(int)arg1;
+ (id)iconForSymbolString:(id)arg1;
+ (id)classMethodIcon;
+ (id)functionIcon;
+ (id)imageForShape:(int)arg1 size:(int)arg2;
+ (id)imageForBarBridgePartIsLeft:(BOOL)arg1 isLeftSelected:(BOOL)arg2 isRightSelected:(BOOL)arg3;
+ (id)imageForBarPart:(int)arg1 selected:(BOOL)arg2;
+ (id)trackErrorImage;
+ (id)trackWarningImage;
+ (id)popUpArrowsImage;
+ (id)sliderBackgroundImage;
+ (id)rulerHeadImage:(int)arg1;
+ (id)flagIconWithName:(id)arg1;
+ (id)flagColorForKey:(id)arg1;
+ (id)flagImageWithColor:(id)arg1 modifiable:(BOOL)arg2;
+ (id)iconForFileType:(id)arg1;
+ (id)smallImageForUnknownFileItem;
+ (id)imageForUnknownFileItem;
+ (id)folderIcon:(int)arg1;
+ (id)resourceNamed:(id)arg1;
+ (id)smallImageForDualView:(BOOL)arg1;
+ (id)smallImageForCounterpart:(BOOL)arg1;
+ (id)smallImageForXcode;
+ (id)imageForActivityMonitor;
+ (id)smallImageForDaemonAgent;
+ (id)imageForTerminal;
+ (id)smallImageForTerminal;
+ (id)smallImageForSoftLinkedFolder;
+ (id)smallWarningImage;
+ (id)imageForHistory:(BOOL)arg1 size:(int)arg2;
+ (id)imageForDisclosureArrow:(BOOL)arg1;
+ (id)imageForRecordPart:(int)arg1 withState:(int)arg2;
+ (id)imageForDriverSwitchType:(int)arg1 withState:(int)arg2;
+ (id)segmentBackgroundForPart:(int)arg1 selected:(BOOL)arg2 pressed:(BOOL)arg3;
+ (id)imageForInstrumentBackground:(BOOL)arg1;
+ (id)imageForMouseEvent:(int)arg1 size:(int)arg2;
+ (id)trackFlag:(int)arg1 cap:(int)arg2;
+ (id)inspectorImageForAdd:(BOOL)arg1 pressed:(BOOL)arg2;
+ (id)sliderKnob:(BOOL)arg1;
+ (id)toolWellPart:(int)arg1;
+ (id)imageForStatelessGlyph:(id)arg1;
+ (id)imageCloseBoxForFlyoverState:(int)arg1;
+ (id)imageInfoForFlyoverState:(int)arg1;
+ (id)imageForGlyph:(id)arg1 forFlyoverState:(int)arg2;
+ (id)imageForGlyph:(id)arg1 forState:(int)arg2;
+ (id)roundImageForControlSize:(int)arg1 forSwitchWithState:(int)arg2;
+ (id)imagePart:(int)arg1 scrollerPart:(unsigned long long)arg2 forVerticalScroller:(BOOL)arg3 zoomEnabled:(BOOL)arg4;
+ (id)imagePart:(int)arg1 forControlSize:(int)arg2 forSwitchWithState:(int)arg3;
+ (id)imageTimeDisplayPart:(int)arg1 active:(BOOL)arg2;
+ (id)imagePart:(int)arg1 forTrayType:(int)arg2 ofControlSize:(int)arg3;
+ (id)imageForInstrumentToggleAttribute:(id)arg1 pressed:(BOOL)arg2;
+ (id)imageForInstrumentAttribute:(id)arg1 on:(BOOL)arg2 pressed:(BOOL)arg3;
+ (id)imageForMasterTrackState:(int)arg1;
+ (id)imageForKnobPressed:(BOOL)arg1;
+ (id)scalableImageNamed:(id)arg1;
+ (id)imageNamed:(id)arg1;
+ (id)timeScaleBorderColor;
+ (id)timeScaleColor;
+ (id)timeSelectionBorderColor;
+ (id)timeSelectionColor;
+ (id)templateChooserCellBorderUnselectedColor;
+ (id)templateChooserCellBorderSelectedColor;
+ (id)templateChooserCellBackgroundColor;
+ (id)ruleEditorBackgroundColor;
+ (id)inactiveLargeAttributes;
+ (id)activeSmallAttributes;
+ (id)activeLargeAttributes;
+ (id)activeHUDAttributes;
+ (id)inactiveLCDColor;
+ (id)activeLCDColor;
+ (id)smallLCDFont;
+ (id)largeLCDFont;
+ (id)hudLCDFont;
+ (id)markupDotShadow;
+ (id)scrollThumbShadow;
+ (struct CGFunctionCallbacks)yellowBlackBlend;
+ (struct CGFunctionCallbacks)purpleWhiteBlend;
+ (struct CGFunctionCallbacks)lightWhiteBlackBlend;
+ (struct CGFunctionCallbacks)whiteBlackBlend;
+ (struct CGFunctionCallbacks)whiteBlueBlend;
+ (struct CGFunctionCallbacks)lightRedBlackBlend;
+ (struct CGFunctionCallbacks)redBlackBlend;
+ (struct CGFunctionCallbacks)instrumentSelectedBackgroundBlend;
+ (struct CGFunctionCallbacks)instrumentBackgroundBlend;
+ (struct CGFunctionCallbacks)gradientSelectionForView:(id)arg1;
+ (struct CGFunctionCallbacks)dataHeadlineSelectedBlend;
+ (struct CGFunctionCallbacks)dataHeadlineBlend;
+ (struct CGFunctionCallbacks)headingBlend;
+ (struct CGFunctionCallbacks)trackSegmentCompleteBlend;
+ (struct CGFunctionCallbacks)trackSegmentRunSelectedBlend;
+ (struct CGFunctionCallbacks)trackSegmentSelectedBlend;
+ (struct CGFunctionCallbacks)trackSegmentBlend;
+ (struct CGFunctionCallbacks)cornerBlend;
+ (struct CGFunctionCallbacks)lightWindowBlendInverted;
+ (struct CGFunctionCallbacks)lightWindowBlend;
+ (struct CGFunctionCallbacks)windowBlend;
+ (id)miniDisplayLabelAttributes;
+ (id)miniDisplayLabelFont;
+ (id)xattachedInspectorRearBackgroundColor;
+ (id)attachedInspectorRearBackgroundColor;
+ (id)attachedInspectorBackgroundColor;
+ (id)placeholderLabelInspectorAttributes;
+ (id)inspectorElementContentBackgroundColor;
+ (id)inspectorElementHeadlineBackgroundColor;
+ (id)inspectorControlBackgroundColor;
+ (id)inspectorBackgroundColor;
+ (id)toolbarLabelShadow;
+ (id)toolbarChooserLabelAttributes;
+ (id)trackBadgeShadow;
+ (id)trackErrorMessageShadow;
+ (id)trackErrorMessagenBoxShadow;
+ (id)trackErrorMessageAttributes;
+ (id)trackMarkerShadow;
+ (id)trackMarkerLabelAttributes;
+ (id)trackMarkerBorderColor;
+ (id)trackMarkerFillColor;
+ (id)trackLabelInvertedSelectedAttributes;
+ (struct CGSize)trackLabelForInvertedGraphDefaultSize;
+ (id)trackLabelForGraphInvertedAttributesWithSize:(id)arg1;
+ (id)trackLabelGraphShadow;
+ (id)trackLabelInvertedAttributes;
+ (id)trackLabelAttributes;
+ (id)trackWatermarkErrorLabelAttributes;
+ (id)trackWatermarkInformativeLabelAttributes;
+ (id)trackGridColor;
+ (id)trackUnselectedBackgroundColor;
+ (id)trackSelectedBackgroundColorDarker;
+ (id)trackSelectedBackgroundColor;
+ (id)trackBackgroundColor;
+ (id)trackEventLineColor;
+ (id)trackEventDurationColor;
+ (id)trackEventPointColor;
+ (id)trackLabelColorShadow;
+ (id)trackEdgeColorShadow;
+ (id)trackEdgeColor;
+ (id)bottomTrackSegmentCompleteBackgroundColor;
+ (id)topTrackSegmentCompleteBackgroundColor;
+ (id)bottomTrackSegmentSelectedBackgroundColor;
+ (id)topTrackSegmentSelectedBackgroundColor;
+ (id)bottomTrackSegmentBackgroundColor;
+ (id)topTrackSegmentBackgroundColor;
+ (id)sourceHeaderBarAttributes;
+ (id)consolePromptAttributes;
+ (id)consoleStandardOutAttributes;
+ (id)consoleStandardInAttributes;
+ (id)dataViewerLibraryFrameAttributes;
+ (id)dataViewerAlternatingColors;
+ (id)dataViewerSelectedLabelAttributes;
+ (id)dataViewerCategoryAttributes;
+ (id)dataViewerCategoryLabelColor;
+ (id)dataViewerHeadlingShadow;
+ (id)dataViewerControlBackgroundColor;
+ (id)dataViewerLabelFont;
+ (id)dataViewerControlFont;
+ (id)dataViewerCategoryLabelFont;
+ (id)basicColorForNumber:(unsigned long long)arg1;
+ (id)chartColorForNumber:(unsigned long long)arg1;
+ (id)spectralColorForString:(id)arg1;
+ (id)spectralColorForNumber:(unsigned long long)arg1;
+ (id)darkColorForNumber:(unsigned long long)arg1;
+ (id)darkColorForString:(id)arg1;
+ (id)colorForNumber:(unsigned long long)arg1;
+ (id)colorForString:(id)arg1;
+ (id)colorForLibrary:(id)arg1;
+ (void)toggleColorLibraries;
+ (BOOL)colorLibraries;
+ (id)detailBackgroundColor;
+ (id)librarySelectedTypeRingColor;
+ (id)libraryCategoryColorHeadingShadow;
+ (id)libraryCategoryColorShadow;
+ (id)libraryCategoryHeadingAttributes;
+ (id)libraryCategorySelectedTypeAttributes;
+ (id)libraryCategoryTypeAttributes;
+ (id)libraryCategorySelectedTextColor;
+ (id)libraryCategoryTextColor;
+ (id)libraryCategoryHeadingTextColor;
+ (id)libraryCategoryHeadingFont;
+ (id)libraryCategoryTypeFont;
+ (id)libraryCategoryListFont;
+ (id)libraryCategoryBinColor;
+ (id)libraryToolBoxColor;
+ (id)libraryCategoryBackgroundColor;
+ (id)libraryBackgroundColor;
+ (id)instrumentDefaultImage;
+ (id)instrumentSelectedLabelAttributes;
+ (id)masterSwitchDisabledLabelFont;
+ (id)masterSwitchLabelFont;
+ (id)masterInstrumentSwitchDisabledLabelAttributes;
+ (id)masterInstrumentSwitchLabelAttributes;
+ (id)masterInstrumentLabelAttributes;
+ (id)threadLabelSmallAttributesWithSelection:(BOOL)arg1;
+ (id)threadLabelLargeAttributesWithSelection:(BOOL)arg1;
+ (id)instrumentLabelSmallAttributesWithSelection:(BOOL)arg1;
+ (id)instrumentLabelLargeAttributesWithSelection:(BOOL)arg1;
+ (id)instrumentLabelDisabledAttributes;
+ (id)instrumentLabelAttributes;
+ (id)instrumentIconShadow;
+ (id)instrumentRunBoxShadow;
+ (id)instrumentDisabledLabelShadow;
+ (id)instrumentLabelSelectedShadow;
+ (id)instrumentGraphLabelShadow;
+ (id)instrumentLabelShadow;
+ (id)instrumentDisabledLabelColor;
+ (id)instrumentLabelSelectedColor;
+ (id)instrumentGraphLabelColor;
+ (id)instrumentLabelColor;
+ (id)instrumentLabelSmallFont;
+ (id)instrumentLabelLargeFont;
+ (id)instrumentLabelFont;
+ (id)rightInstrumentSelectedBackgroundColor;
+ (id)leftInstrumentSelectedBackgroundColor;
+ (id)rightInstrumentBackgroundColor;
+ (id)leftInstrumentBackgroundColor;
+ (id)instrumentEdgeColorShadow;
+ (id)instrumentBorderColor;
+ (id)instrumentEdgeColor;
+ (id)instrumentBackgroundImage;
+ (id)instrumentBackgroundColor;
+ (id)instrumentListBackgroundColor;
+ (id)gradientBackgroundSourceListHeader;
+ (id)gradientBackgroundTextColorShadow;
+ (id)gradientBackgroundDisabledTextColor;
+ (id)gradientBackgroundTextColor;
+ (id)bottomControlHorizontalColor;
+ (id)topControlHorizontalColor;
+ (id)bottomDropHorizontalColor;
+ (id)topDropHorizontalColor;
+ (id)masterTrackInnerBottomHorizontalColor;
+ (id)masterTrackInnerTopHorizontalColor;
+ (id)masterTrackOuterHorizontalColor;
+ (id)genericLightBezelColor;
+ (id)genericBezelColor;
+ (id)genericMediumBezelColor;
+ (id)genericHeavyBezelColor;
+ (id)lightRightVerticalColor;
+ (id)heavyLeftVerticalColor;
+ (id)errorHighlightColor;
+ (id)selectedLabelShadow;
+ (id)inspectionPositionColor;
+ (id)recordPositionColor;
+ (id)rulerFontColor;
+ (id)rulerBackgroundColor;
+ (void)drawBlackGlassInRect:(struct CGRect)arg1 forView:(id)arg2 inverted:(BOOL)arg3 radius:(double)arg4;
+ (struct CGFunctionCallbacks)topLipBlackGlassBlend;
+ (struct CGFunctionCallbacks)bottomLipBlackGlassBlend;
+ (struct CGFunctionCallbacks)topBlackGlassBlend;
+ (struct CGFunctionCallbacks)bottomBlackGlassBlend;
+ (void)drawTrackGlassInRect:(struct CGRect)arg1 forView:(id)arg2 deckUnits:(int)arg3 selected:(BOOL)arg4 bordered:(BOOL)arg5 inverted:(BOOL)arg6;
+ (void)drawTrackGlassInRect:(struct CGRect)arg1 forView:(id)arg2 deckUnits:(int)arg3 selected:(BOOL)arg4;
+ (void)drawTrackGlowInRect:(struct CGRect)arg1 forView:(id)arg2 deckUnits:(int)arg3 selected:(BOOL)arg4 bordered:(BOOL)arg5 inverted:(BOOL)arg6;
+ (id)unselectedTrackBorderColor;
+ (id)selectedTrackBorderColor;
+ (void)drawTrackGlowInRect:(struct CGRect)arg1 forView:(id)arg2 deckUnits:(int)arg3 selected:(BOOL)arg4;
+ (struct CGFunctionCallbacks)topLipGlassBlend;
+ (struct CGFunctionCallbacks)bottomLipGlassBlend;
+ (struct CGFunctionCallbacks)topGlassBlend;
+ (struct CGFunctionCallbacks)bottomGlassBlend;
+ (void)drawTrackBackgroundInRect:(struct CGRect)arg1 forView:(id)arg2 deckUnits:(int)arg3 selected:(BOOL)arg4;
+ (void)drawTrackMarkerInRect:(struct CGRect)arg1 leftCap:(int)arg2 center:(int)arg3 rightcap:(int)arg4 alpha:(double)arg5;
+ (void)fillVerticalRect:(struct CGRect)arg1 forView:(id)arg2 withOperation:(struct CGFunctionCallbacks)arg3;
+ (void)fillVerticalRectNoCache:(struct CGRect)arg1 forView:(id)arg2 withOperation:(struct CGFunctionCallbacks)arg3;
+ (void)fillHorizontalRect:(struct CGRect)arg1 forView:(id)arg2 withOperation:(struct CGFunctionCallbacks)arg3;
+ (id)emptyShadow;
+ (id)colorWithUserRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (void)initialize;

@end

@interface PFTTokenWrapper : NSObject
{
    NSString *_displayString;
    NSObject *_representedObject;
}

- (id)representedObject;
- (id)description;
- (id)displayString;
- (void)dealloc;
- (id)initWithString:(id)arg1 representingObject:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface PFTTrackMarker : NSView
{
    NSString *_name;
    NSString *_label;
    struct CGPoint _location;
    struct CGSize _scale;
    BOOL _pointToCenter;
    BOOL _pointDown;
    BOOL _goLeft;
    BOOL _markerIsHidden;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)viewDidMoveToWindow;
- (void)setFrame:(struct CGRect)arg1;
- (BOOL)isOpaque;
- (BOOL)goLeft;
- (void)setGoLeft:(BOOL)arg1;
- (BOOL)pointDown;
- (void)setPointDown:(BOOL)arg1;
- (BOOL)pointToCenter;
- (void)setPointToCenter:(BOOL)arg1;
- (struct CGSize)size;
- (struct CGSize)scale;
- (void)setScale:(struct CGSize)arg1;
- (struct CGPoint)location;
- (void)setLocation:(struct CGPoint)arg1;
- (id)label;
- (void)setLabel:(id)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (BOOL)markerIsHidden;
- (void)setMarkerIsHidden:(BOOL)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PFTTrackSegment : NSObject <NSCoding>
{
    XRRun *_runNotRetained;
    long long _start;
    long long _end;
    double _startTimeInUnits;
    double _endTimeInUnits;
    double _endTimeRange;
    BOOL _segmentLocked;
    PFTTrackBrush *_brush;
    NSMutableDictionary *_cachedRanges;
    struct CGSize _cachingScale;
    double _cachingHeight;
    unsigned int _cachingDeckUnits;
    double _currentRenderingFactor;
    double _inspectionHeadLocation;
    double _recordingHeadLocation;
    BOOL _markerIsHidden;
    BOOL _pauseEndedSegment;
    NSMutableDictionary *_highlightMarkers;
    PFTTraceDocument *_traceDocument;
}

+ (void)initialize;
- (id)markerViews;
- (id)markers;
- (void)removeAllMarkers;
- (void)removeMarker:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeMarkers:(id)arg1;
- (void)hideMarkerGroup:(id)arg1;
- (struct CGPoint)locationOfMarkerGroup:(id)arg1;
- (BOOL)addMarker:(id)arg1 atLocation:(struct CGPoint)arg2 index:(long long)arg3 withLabel:(id)arg4;
- (void)addMarkerGroup:(id)arg1 atLocation:(struct CGPoint)arg2 markerCount:(long long)arg3;
- (double)cachingHeightForRect:(struct CGRect)arg1;
- (BOOL)isSegmentLocked;
- (void)updateMarkersInRect:(struct CGRect)arg1 forInstrument:(id)arg2 usingScale:(struct CGSize)arg3 recordingHeadLocation:(double)arg4 inspectionHead:(double)arg5;
- (void)drawInRect:(struct CGRect)arg1 visibleRect:(struct CGRect)arg2 forInstrument:(id)arg3 usingScale:(struct CGSize)arg4 recordingHeadLocation:(double)arg5 inspectionHead:(double)arg6 userDraggingInspectionHead:(BOOL)arg7;
- (void)layoutMarkersInRect:(struct CGRect)arg1 position:(int)arg2;
- (void)layoutMarkersInRect:(struct CGRect)arg1;
- (id)brushForTrack:(id)arg1;
- (id)brush;
- (void)setBrush:(id)arg1;
- (BOOL)requiresFullRepaint;
- (BOOL)markerIsHidden;
- (void)setMarkerIsHidden:(BOOL)arg1;
- (double)recordingHeadLocation;
- (void)setRecordingHeadLocation:(double)arg1;
- (double)inspectionHeadLocation;
- (BOOL)setInspectionHeadLocation:(double)arg1;
- (struct CGSize)scale;
- (BOOL)pauseEndedSegment;
- (void)setPauseEndedSegment:(BOOL)arg1;
- (void)lockAtEndTimeInUnits:(double)arg1;
- (BOOL)segmentComplete;
- (id)traceDocument;
- (void)setTraceDocument:(id)arg1;
- (id)parentRun;
- (void)setParentRun:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)clearGraphCache;
- (void)dealloc;
- (void)_hardSetFromImportWithEndTime:(double)arg1;
- (void)setStartIndex:(long long)arg1 endIndex:(long long)arg2;
- (void)setupWithStartTime:(double)arg1;
- (id)initWithTraceDocument:(id)arg1;

@end

@interface PFTTypedTrackBrush : PFTPointTrackBrush
{
    NSArray *_types;
}

- (void)drawAboveRun:(id)arg1 forInstrument:(id)arg2 inRect:(struct CGRect)arg3 visibleRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 recordingHeadLocation:(double)arg6 inspectionHead:(double)arg7;
- (void)drawTrackSegment:(id)arg1 eventRange:(struct _NSRange)arg2 inRect:(struct CGRect)arg3;
- (void)dealloc;
- (id)initWithTypes:(id)arg1;

@end

@interface UniquingTable : NSObject
{
    int _pid;
    struct {
        unsigned long long *_field1;
        unsigned long long _field2;
        unsigned long long _field3;
        unsigned long long _field4;
        int _field5;
        int _field6;
        struct _opaque_pthread_rwlock_t {
            long long _field1;
            char _field2[192];
        } _field7;
        int _field8;
        CDUnknownFunctionPointerType _field9;
    } *_table;
}

+ (id)uniquingTableForPid:(int)arg1;
+ (void)initialize;
- (BOOL)uniqueBacktrace:(id *)arg1 forKernelFrames:(unsigned long long *)arg2 kernelFrameCount:(int)arg3 userFrames:(unsigned long long *)arg4 userFrameCount:(int)arg5 pid:(int)arg6;
- (BOOL)uniqueBacktrace:(id *)arg1 forFrames:(unsigned long long *)arg2 kernelFrameCount:(int)arg3 totalFrameCount:(int)arg4 pid:(int)arg5;
- (BOOL)uniqueBacktrace:(id *)arg1 forFrames:(unsigned long long *)arg2 count:(int)arg3 pid:(int)arg4;
- (id)uniqueBacktrace:(id)arg1;
- (void)resetUniquingTable:(int)arg1 collisions:(int)arg2;
- (void)dealloc;
- (id)initWithPid:(int)arg1;

@end

@interface XRASLObserver : NSObject <XRFileObserver>
{
    unsigned long long _lastASLIdentifier;
    XRDevice *_device;
    XRASLQuery *_query;
    BOOL _queryActive;
    NSObject<OS_dispatch_queue> *_backgroundQueue;
}

+ (void)runQuery:(id)arg1 onDevice:(id)arg2 startIdentifier:(unsigned long long)arg3;
+ (unsigned long long)_runQuery:(id)arg1 onDevice:(id)arg2 startIdentifier:(unsigned long long)arg3;
- (void).cxx_destruct;
- (void)rescanPath:(id)arg1;
- (void)unregister;
- (void)registerWithDevice:(id)arg1;
- (unsigned long long)lastScannedIdentifier;
- (id)initWithQuery:(id)arg1 startIdentifier:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRASLQuery : NSObject
{
    int _pid;
    double _minimumTime;
    XRTrace *_trace;
}

- (void)processResponse:(struct __asl_object_s *)arg1 fromDevice:(id)arg2;
- (int)configureQuery:(struct __asl_object_s *)arg1;
- (void)dealloc;
- (id)initWithPid:(int)arg1 minimumTime:(double)arg2 trace:(id)arg3;

@end

@interface XRAbstractFileSystem : NSObject <XRFileSystem>
{
    NSMutableDictionary *_subEntriesByPath;
    NSMutableDictionary *_imagesByPath;
    BOOL _invalidating;
    BOOL _expandBundles;
    BOOL _showHiddenFiles;
    BOOL _fileContentsOnly;
    id _owner;
    NSArray *_fixedPathsList;
}

@property(nonatomic) BOOL fileContentsOnly; // @synthesize fileContentsOnly=_fileContentsOnly;
@property(copy, nonatomic) NSArray *fixedPathsList; // @synthesize fixedPathsList=_fixedPathsList;
@property(nonatomic) BOOL showHiddenFiles; // @synthesize showHiddenFiles=_showHiddenFiles;
@property(nonatomic) BOOL expandBundles; // @synthesize expandBundles=_expandBundles;
@property(nonatomic) __weak id owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (BOOL)isItemExpandable:(id)arg1;
- (id)faultImageForEntry:(id)arg1;
- (id)faultChildrenForEntry:(id)arg1;
- (id)imageForEntry:(id)arg1;
- (id)childrenForEntry:(id)arg1;
- (void)_invalidateOwner;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAction : NSObject
{
    NSString *_identifier;
    id _handler;
    NSString *_targetClassType;
    NSString *_targetProtocolType;
    NSString *_displayName;
    NSString *_actionSelector;
    BOOL _appleInternal;
}

+ (id)createActionWithDictionary:(id)arg1 handler:(id)arg2;
@property BOOL appleInternal; // @synthesize appleInternal=_appleInternal;
@property(copy) NSString *actionSelector; // @synthesize actionSelector=_actionSelector;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy) NSString *targetProtocolType; // @synthesize targetProtocolType=_targetProtocolType;
@property(copy) NSString *targetClassType; // @synthesize targetClassType=_targetClassType;
@property(retain) id handler; // @synthesize handler=_handler;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)_dispatchAction:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)dispatchActionForArray:(id)arg1 forDocument:(id)arg2;
- (SEL)action;
- (long long)displayNameCompare:(id)arg1;
- (id)description;
- (id)initWithIdentifier:(id)arg1 handler:(id)arg2 targetClassType:(id)arg3 targetProtocolType:(id)arg4 displayName:(id)arg5 actionSelector:(id)arg6 appleInternal:(BOOL)arg7;

@end

@interface XRActionContextManager : NSObject
{
    NSMutableArray *_actions;
    NSMutableDictionary *_classTargetedActions;
    NSMutableDictionary *_protocolTargetActions;
}

+ (void)dispatchActionWithIdentifier:(id)arg1 forArray:(id)arg2 forDocument:(id)arg3;
+ (id)sharedContextManager;
+ (void)initializePlugIns:(id)arg1;
- (void).cxx_destruct;
- (id)actionWithIdentifier:(id)arg1;
- (id)actionsForClassName:(id)arg1;
- (id)actionsForPrototype:(id)arg1;
- (void)addAction:(id)arg1;
- (id)init;

@end

@interface XRActionHandler : NSObject
{
    DVTExtension *_extension;
}

+ (id)actionHandlerWithExtension:(id)arg1;
@property(retain, nonatomic) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
- (BOOL)validateMenuItem:(id)arg1;

@end

@interface XRAnalysisCoreSpace : XRSpace
{
    XRSpaceDataToken *_pathManTok;
    XRSpaceDataToken *_coresByRunNumberTok;
    XRSpaceDataToken *_coreForNextRunTok;
}

- (void).cxx_destruct;
- (id)spaceName;
- (BOOL)isSerial;
- (id)pathManager;
- (id)coreForNextRun;
- (void)engageCoreForNextRunWithRunNumber:(long long)arg1;
- (id)coreForRunNumber:(long long)arg1;
- (id)initWithSourceURL:(id)arg1;

@end

@interface XRArchitecture : NSObject <NSCoding, NSCopying>
{
    int _cpuType;
    int _cpuSubtype;
}

+ (id)currentArchitecture;
+ (id)architectureWithCSArchitecture:(struct _CSArchitecture)arg1;
+ (void)initialize;
@property(nonatomic) int cpuSubtype; // @synthesize cpuSubtype=_cpuSubtype;
@property(nonatomic) int cpuType; // @synthesize cpuType=_cpuType;
- (BOOL)isLittleEndian;
- (BOOL)isBigEndian;
- (BOOL)is64Bit;
- (BOOL)is32Bit;
- (struct _CSArchitecture)csArchitecture;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCpuType:(int)arg1 cpuSubtype:(int)arg2;

@end

@interface XRArchitectureFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)stringForNumberValue:(id)arg1;

@end

@interface XRBacktraceAggregator : NSObject
{
    void *_backtraceAndThreadToCounter;
    unsigned long long _resultTimestamp;
    unsigned long long _weightCount;
}

- (id)aggregatedSamplesForPid:(int)arg1;
- (id)aggregatedSamples;
- (void)addBacktraceAggregator:(id)arg1;
- (void)enumerateBacktracesForPid:(int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)countBacktrace:(id)arg1 thread:(unsigned long long)arg2 withCount:(int)arg3 weights:(double *)arg4;
- (void)dealloc;
- (id)initWithTimestamp:(unsigned long long)arg1 weightCount:(unsigned long long)arg2;
- (id)initWithTimestamp:(unsigned long long)arg1;

@end

@interface XRBacktraceCollapser : NSObject
{
    unsigned int _collapsingLevel;
}

+ (unsigned int)maxCollapsingLevel;
+ (id)collapserForDocument:(id)arg1;
+ (void)initialize;
- (id)collapsedFrames:(id)arg1;
- (unsigned int)collapsingLevel;
- (void)setCollapsingLevel:(unsigned int)arg1;
- (id)initWithCollapsingLevel:(unsigned int)arg1;

@end

@interface XRBacktraceRepository : NSObject <NSCoding, NSOutlineViewDataSource, NSOutlineViewDelegate, XROutlineDetailViewUIDProvider>
{
    int _pid;
    NSString *_processName;
    PFTPersistentSymbols *_persistentSymbols;
    NSMutableArray *_allSamples;
    NSMutableDictionary *_samplesForCategory;
    NSString *_defaultCategoryName;
    int _symbolicationTiming;
    NSMutableDictionary *_activeTrimming;
    NSMutableDictionary *_activeFilters;
    NSString *_activeCategory;
    NSMutableArray *_activeSamples;
    PFTCallTreeNode *_currentTreeRoot;
    NSPredicate *_categoryPredicate;
    NSMutableArray *_focusCategories;
    id _focusedNode;
    NSMutableDictionary *_focusInfo;
    NSMutableDictionary *_focusedNodeDataCountForFocusCategory;
    NSMutableDictionary *_focusedNodeDataForFocusCategory;
    id <XRCallTreeDataSource> _dataSource;
    NSObject<OS_dispatch_queue> *_symbolicationQueue;
    NSMutableDictionary *_cachedTreesForCategory;
    struct __CFDictionary *_cachedSortedTreeChildren;
    struct __CFDictionary *_cachedInterestingSymbolInBacktrace;
    struct __CFDictionary *_cachedFullBacktraceStrings;
    BOOL _setupAttempted;
    XRDevice *_associatedDevice;
    struct __CFData *_freezeDriedSignature;
    struct __CFData *_freezeDriedKernelSignature;
    id _treeDataTrackingQuery;
    SEL _categoryComparator;
    SEL _summaryCategoryComparator;
    NSMutableDictionary *_outlineViewColumnSortBlocks;
    struct _opaque_pthread_mutex_t _callTreeActionLock;
    XRBacktraceRepository *_mergeRepository;
    XRBacktraceRepository *_settingOverride;
    int _mergeFactor;
    BOOL _needsRecreate;
    BOOL _viewSettingsInitialized;
    struct XRTimeRange _activeTimeRange;
    NSString *_sortID;
    unsigned long long _sortIndex;
    BOOL _sortAscending;
    unsigned long long _weightCount;
    BOOL _showObjCOnly;
}

+ (long long)indexOfTimestamp:(unsigned long long)arg1 inSampleArray:(id)arg2 closestBefore:(BOOL)arg3;
+ (void)initialize;
@property(nonatomic) BOOL showObjCOnly; // @synthesize showObjCOnly=_showObjCOnly;
@property(readonly, nonatomic) unsigned long long weightCount; // @synthesize weightCount=_weightCount;
@property(copy, nonatomic) NSString *processName; // @synthesize processName=_processName;
- (id)filterContext;
- (SEL)filterSelector;
- (void)setFilterSelector:(SEL)arg1 context:(void *)arg2;
- (id)outlineView:(id)arg1 uidForItem:(id)arg2;
- (id)outlineView:(id)arg1 toolTipForCell:(id)arg2 rect:(struct CGRect *)arg3 tableColumn:(id)arg4 item:(id)arg5 mouseLocation:(struct CGPoint)arg6;
- (void)outlineView:(id)arg1 willDisplayCell:(id)arg2 forTableColumn:(id)arg3 item:(id)arg4;
- (BOOL)outlineView:(id)arg1 shouldShowCellExpansionForTableColumn:(id)arg2 item:(id)arg3;
- (BOOL)shouldDisplayActionInOutlineView:(id)arg1 forItem:(id)arg2;
- (void)outlineView:(id)arg1 didClickTableColumn:(id)arg2;
- (id)_treeNode:(id)arg1 valueForIdentifier:(id)arg2 andIndex:(unsigned long long)arg3;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (void)sortOutlineColumnName:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_setSortIdentifier:(id)arg1 sortIndex:(unsigned long long)arg2 ascending:(BOOL)arg3 outlineView:(id)arg4;
- (void)_setSortIdentifier:(id)arg1 ascending:(BOOL)arg2 outlineView:(id)arg3;
- (id)highlightColumnInOutlineView:(id)arg1;
- (void)setSortIdentifier:(id)arg1 sortIndex:(unsigned long long)arg2 ascending:(BOOL)arg3;
- (void)setSortIdentifier:(id)arg1 ascending:(BOOL)arg2;
- (void)_addNodesToTopFunctionsTreeRoot:(id)arg1 firstLevelLookup:(id)arg2;
- (void)refreshTreeRoot;
- (id)_newTreeRoot;
- (id)_treeForCat:(id)arg1;
- (void)setContainedCategoryTokens:(id)arg1 matchesAny:(BOOL)arg2;
- (void)_applyDataMiningToCallTreeRoot:(id)arg1;
- (BOOL)_pruneLibraryTokensOr;
- (id)_pruneLibraryTokens;
- (BOOL)_pruneSymbolTokensOr;
- (id)_pruneSymbolTokens;
- (id)concatenatedSymbolNamesForBacktrace:(id)arg1;
- (id)interestingSymbolInBacktrace:(id)arg1;
- (BOOL)shouldIgnoreSymbol:(id)arg1;
- (id)backtraceRepository;
- (id)rootBinding;
- (id)rootNode;
- (void)pruneByRequiringLibraryNameTokens:(id)arg1 requireAny:(BOOL)arg2;
- (void)pruneByRequiringSymbolNameTokens:(id)arg1 requireAny:(BOOL)arg2;
- (id)boundaryLibraries;
- (id)flattenedLibraries;
- (id)prunedSymbols;
- (id)flattenedSymbols;
- (void)flattenLibraryOfSymbolToBoundaries:(id)arg1;
- (void)flattenLibraryOfSymbol:(id)arg1;
- (void)restoreLibraryOfSymbol:(id)arg1;
- (void)pruneSymbol:(id)arg1;
- (void)flattenSymbol:(id)arg1;
- (void)downloadDSYM:(id)arg1;
- (void)symbolicateAddress:(id)arg1;
- (void)locateAndSymbolicateAddress:(id)arg1;
- (void)restoreSymbol:(id)arg1;
- (void)_modifyLibraryTrimming:(id)arg1 option:(int)arg2;
- (void)_modifySymbolTrimming:(id)arg1 option:(int)arg2;
@property(nonatomic) unsigned int maximumTreeBranchCount;
@property(nonatomic) unsigned int minimumTreeBranchCount;
- (BOOL)treeBranchCountFiltering;
- (long long)maximumTreeBranchWeight;
- (void)setMaximumTreeBranchWeight:(double)arg1;
- (BOOL)treeBranchWeightFiltering;
- (long long)minimumTreeBranchWeight;
- (void)setMinimumTreeBranchWeight:(double)arg1;
@property(nonatomic) BOOL topFunctions;
@property(nonatomic) BOOL showProcessesByCategory;
@property(nonatomic) BOOL showCategoryAsLeaf;
@property(nonatomic) BOOL showAllAsCategory;
@property(nonatomic) BOOL inverted;
@property(nonatomic) BOOL separateByCategory;
@property(nonatomic) BOOL separateByThread;
@property(nonatomic) BOOL flattenRecursion;
@property(nonatomic) BOOL trimSystemLibraries;
@property(nonatomic) BOOL trimMissingSymbols;
- (void)clearAllTrimmingRules;
- (void)mergeTreesWithRepository:(id)arg1 factor:(int)arg2;
- (void)_setOverrideRepository:(id)arg1;
- (struct XRTimeRange)timeRangeFilter;
- (void)setTimeRangeFilter:(struct XRTimeRange)arg1;
- (void)clearAllFilters;
- (id)threadNameForThread:(unsigned long long)arg1 pid:(int)arg2;
- (id)threadNameForThreadId:(unsigned long long)arg1 backtrace:(id)arg2;
- (unsigned long long)activeThread;
- (void)setActiveThread:(unsigned long long)arg1;
- (void)setFocusNode:(id)arg1;
- (id)_samplesInSubtreeOfTreeNode:(id)arg1;
- (id)activeCategory;
- (void)setActiveCategory:(id)arg1;
@property(nonatomic) BOOL viewSettingsInitialized;
- (void)_jumpToXcodeForSymbol:(id)arg1;
- (void)focusLibraryCallees:(id)arg1;
- (void)focusLibraryCallers:(id)arg1;
- (void)focusSymbolCallees:(id)arg1;
- (void)focusSymbolCallers:(id)arg1;
- (void)focusSubtree:(id)arg1;
- (void)_setFocusObject:(id)arg1 forKey:(id)arg2 andNotifyUpdate:(BOOL)arg3;
- (void)_resetFocus;
- (id)dataMiningMenuForItem:(id)arg1 allowRevealSymbol:(BOOL)arg2;
- (id)samplesByLineSpecificSymbolForTreeNode:(id)arg1;
- (void)_setTrackedTreeData:(id)arg1;
- (id)nameForPid:(int)arg1;
- (id)symbolStringsForBacktrace:(id)arg1 reverseOrder:(BOOL)arg2;
- (id)symbolsForBacktrace:(id)arg1 reverseOrder:(BOOL)arg2;
- (id)hottestSymbolInBacktrace:(id)arg1;
- (id)libraryForAddress:(unsigned long long)arg1;
- (id)symbolForPC:(unsigned long long)arg1;
- (id)samplesForCategory:(id)arg1;
- (void)applyFocusInformation:(id)arg1;
- (void)_applyFocusInformation:(id)arg1 refresh:(BOOL)arg2;
- (void)_applyFiltersAndTrimming:(id)arg1;
- (void)_focusUsingFocusInfo:(id)arg1;
- (id)focusInformation;
- (id)focusTitle;
- (id)iconForFocusInformation:(id)arg1;
- (void)setNeedsForceReloadData:(BOOL)arg1;
- (void)setCallTreeDataSource:(id)arg1;
- (void)resymbolicate:(id)arg1;
- (void)_clearCaches;
- (void)_wipeTree;
- (void)clearCategory:(id)arg1;
- (void)setComparatorForSummaryCategoryNames:(SEL)arg1;
- (void)setComparatorForCategoryNames:(SEL)arg1;
- (void)setNameForDefaultCategory:(id)arg1;
- (void)learnSymbolicInformationForBacktrace:(id)arg1;
- (void)_learnSymbolicInformationForBacktrace:(id)arg1 queue:(id)arg2;
- (void)storeSample:(id)arg1 forCategory:(id)arg2 excludeFromDefaultCategory:(BOOL)arg3 needsSymbolication:(BOOL)arg4;
- (void)storeBacktrace:(id)arg1 forCategory:(id)arg2 excludeFromDefaultCategory:(BOOL)arg3 weight:(double)arg4 timestamp:(unsigned long long)arg5 eventType:(unsigned int)arg6 thread:(unsigned int)arg7 extendedData:(id)arg8 needsSymbolication:(BOOL)arg9;
- (void)setSymbolicationTiming:(int)arg1;
- (struct __CFData *)kernelSignature;
- (struct __CFData *)signatureForPid:(int)arg1;
- (id)allRepositories;
- (id)repositoryForPid:(int)arg1;
- (int)pid;
- (id)symbolProvider;
- (BOOL)_setupSymbolProviderWithPid:(int)arg1 forDevice:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDevice:(id)arg1 pid:(int)arg2 signature:(struct __CFData *)arg3 kernelSignature:(struct __CFData *)arg4 weightCount:(unsigned long long)arg5;
- (id)initWithDevice:(id)arg1 pid:(int)arg2 signature:(struct __CFData *)arg3 kernelSignature:(struct __CFData *)arg4;
- (id)initWithDevice:(id)arg1 pid:(int)arg2 weightCount:(unsigned long long)arg3;
- (id)initWithDevice:(id)arg1 pid:(int)arg2;
- (id)initWithDevice:(id)arg1 weightCount:(unsigned long long)arg2;
- (id)initWithDevice:(id)arg1;
- (void)_commonRepositoryInit;
- (CDUnknownBlockType)_createSymbolTestBlock;
- (id)_trackedTreeData;
- (int)_requiredFocusCount;
- (id)_leafNameForSample:(id)arg1;
- (BOOL)_setupWithSymbolProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRBrush : NSObject
{
}

+ (Class)graphSequenceClass;
+ (struct XRPathAttribute)defaultPathAttribute;
+ (id)brushForStyle:(id)arg1;
+ (id)colorForNumber:(unsigned long long)arg1;
+ (void)initialize;
- (int)trackMarkerPosition;
- (double)minPixelsForRun:(id)arg1 datasource:(id)arg2 usingScale:(struct CGSize)arg3;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleForGraphAtIndex:(long long)arg3;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleToPath:(id)arg3 graphAtIndex:(long long)arg4;
- (void)run:(id)arg1 datasource:(id)arg2 renderSummaryLabelInRect:(struct CGRect)arg3;
- (BOOL)run:(id)arg1 datasource:(id)arg2 renderLabelForGraphAtIndex:(long long)arg3 visibleRect:(struct CGRect)arg4;
- (void)run:(id)arg1 datasource:(id)arg2 renderLabelsForSequences:(id)arg3 usingScale:(struct CGSize)arg4 graphAtIndex:(long long)arg5;
- (void)run:(id)arg1 datasource:(id)arg2 renderPathGroup:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRPointBrushImpl : XRBrush
{
}

- (void)run:(id)arg1 datasource:(id)arg2 renderSummaryLabelInRect:(struct CGRect)arg3;
- (BOOL)run:(id)arg1 datasource:(id)arg2 renderLabelForGraphAtIndex:(long long)arg3 visibleRect:(struct CGRect)arg4;
- (void)run:(id)arg1 datasource:(id)arg2 renderLabelsForSequences:(id)arg3 usingScale:(struct CGSize)arg4 graphAtIndex:(long long)arg5;
- (void)run:(id)arg1 datasource:(id)arg2 renderPathGroup:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (void)run:(id)arg1 datasource:(id)arg2 renderPath:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRLineBrushImpl : XRPointBrushImpl
{
}

- (void)renderPath:(id)arg1;
- (void)preparePathForRendering:(id)arg1;
- (BOOL)drawPointsForDatasource:(id)arg1;
- (void)run:(id)arg1 datasource:(id)arg2 renderPath:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleForGraphAtIndex:(long long)arg3;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleToPath:(id)arg3 graphAtIndex:(long long)arg4;

@end

@interface XRFilledLineBrushImpl : XRLineBrushImpl
{
}

- (void)renderPath:(id)arg1;
- (void)preparePathForRendering:(id)arg1;
- (BOOL)drawPointsForDatasource:(id)arg1;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleForGraphAtIndex:(long long)arg3;

@end

@interface XRBaselineBlockBrushImpl : XRFilledLineBrushImpl
{
}

- (void)preparePathForRendering:(id)arg1;
- (void)run:(id)arg1 datasource:(id)arg2 renderPath:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (double)minPixelsForRun:(id)arg1 datasource:(id)arg2 usingScale:(struct CGSize)arg3;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRBezierPath : NSObject
{
    struct CGPath *_cgPathRef;
    NSAffineTransform *_transform;
    double _lineWidth;
    double _dashPhase;
    unsigned long long _dashCount;
    double *_dashLengths;
    NSImage *_cachedImage;
    long long _elementCount;
    struct CGPoint *_firstPoints;
    unsigned long long *_types;
    long long _applierIndex;
    struct CGPath *_tempPathRef;
    NSAffineTransform *_applyTransform;
}

- (void)stroke;
- (void)fill;
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;
- (long long)elementCount;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (void)setLineWidth:(double)arg1;
- (double)lineWidth;
- (struct CGRect)bounds;
- (void)transformUsingAffineTransform:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRBlockActionWrapper : NSObject
{
    CDUnknownBlockType _block;
}

- (void)invokeAction:(id)arg1;
- (void)dealloc;
- (id)initWithBlockAction:(CDUnknownBlockType)arg1;

@end

@interface XRBlockTargetButton : NSButton
{
    CDUnknownBlockType _blockAction;
}

@property(copy, nonatomic) CDUnknownBlockType blockAction; // @synthesize blockAction=_blockAction;
- (void).cxx_destruct;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;

@end

@interface XRBlockValueTransformer : NSValueTransformer
{
    CDUnknownBlockType _transform;
    CDUnknownBlockType _reverseTransform;
}

+ (id)valueTranformerWithTransform:(CDUnknownBlockType)arg1 reverseTransform:(CDUnknownBlockType)arg2;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;
- (void)dealloc;
- (id)initWithTransform:(CDUnknownBlockType)arg1 reverseTransform:(CDUnknownBlockType)arg2;

@end

@interface XRBytesFormattedTextFieldCell : NSTextFieldCell
{
    BOOL _formatObjectValue;
    NSString *_defaultsIdentifier;
}

+ (id)cellWithDefaultsIdentifier:(id)arg1;
- (void)_toggleFormatting:(id)arg1;
- (void)setFormatsObjectValue:(BOOL)arg1;
- (id)initWithDefaultsIdentifier:(id)arg1;

@end

@interface XRBytesFormatter : NSNumberFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromNumber:(id)arg1;
+ (id)stringForLongLong:(long long)arg1;
+ (void)initialize;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;

@end

@interface XRCPUCoreFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)arg1;

@end

@interface XRStrategyController : NSObject
{
    NSMutableArray *_sources;
    id <XRStrategyControllerDelegate> _delegate;
    unsigned long long _runNumber;
    XRStrategyFilter *_filter;
}

+ (struct NSString *)strategyIdentifier;
+ (id)uiControllerClassName;
+ (id)name;
+ (id)strategyInfo;
@property __weak id delegate; // @synthesize delegate=_delegate;
@property(readonly) unsigned long long runNumber; // @synthesize runNumber=_runNumber;
- (void)recordDeviceInformation;
- (void)_invalidateStrategyFilter;
- (void)reloadData;
- (void)reloadRunList;
- (void)enumerateRunsAndSources:(CDUnknownBlockType)arg1;
- (id)_makeStrategyFilter;
- (id)strategyFilter;
- (id)participatingRuns;
- (BOOL)getDataSource:(out struct NSObject **)arg1 forInstrument:(id)arg2;
- (void)dealloc;
- (id)initWithRunNumber:(unsigned long long)arg1 delegate:(id)arg2;

@end

@interface XRCPUStrategyController : XRStrategyController
{
    NSMutableArray *_participatingCoresList;
    NSMutableArray *_filteredCoresList;
    NSMutableArray *_allCoresList;
    NSArray *_selectedCoresList;
    XRCore *_selectedCore;
    NSString *_displayStyle;
    BOOL _isRefreshingDataModel;
}

+ (id)strategyInfo;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)setDisplayStyle:(id)arg1;
- (id)displayStyle;
- (void)setSelectedCore:(id)arg1;
- (id)selectedCore;
- (void)setSelectedCoresList:(id)arg1;
- (id)selectedCoresList;
- (id)allCoresList;
- (id)filteredCores;
- (id)_makeStrategyFilter;
- (id)participatingCores;
- (void)reloadData;
- (void)refreshParticipatingCoresList;
- (BOOL)getDataSource:(out struct NSObject **)arg1 forInstrument:(id)arg2;
- (void)dealloc;

@end

@interface XRCPUStrategyQuery : NSObject
{
    NSMutableIndexSet *_allCPUs;
    struct XRTimeRange _timeRange;
}

@property struct XRTimeRange timeRange; // @synthesize timeRange=_timeRange;
- (id)allCPUs;
- (void)removeAllCPUs;
- (void)addAllCPUs;
- (void)addCPU:(id)arg1;

@end

@interface XRCachedCallTree : NSObject
{
    XRBacktraceRepository *_controllerNotRetained;
    PFTCallTreeNode *_cachedTree;
    NSString *_rootNodeName;
    NSArray *_nodeDataSource;
    NSMutableArray *_failedSource;
    long long _lastUsedNode;
    unsigned long long _savedIndex;
    id _lastNodeCheck;
    unsigned long long _weightCount;
}

- (unsigned long long *)savedIndex;
- (id)name;
- (id)callTree;
- (void)updateCallTreeRoot:(id)arg1 byAddingSamples:(id)arg2 forCategory:(id)arg3;
- (BOOL)_updateByAddingSamples:(id)arg1 range:(struct _NSRange)arg2 toCallTree:(id)arg3 forCategory:(id)arg4;
- (void)updateCallTreeRoot:(id)arg1 withCategory:(id)arg2;
- (void)update;
- (void)invalidate;
- (void)dealloc;
- (id)initWithController:(id)arg1 sampleArray:(id)arg2 name:(id)arg3 weightCount:(unsigned long long)arg4;

@end

@interface XROutlineDetailView : NSOutlineView <PFTDetailViewProtocol>
{
    XRInstrument *_targetInstrument;
    NSString *_viewLabel;
    NSString *_name;
    NSMutableDictionary *_viewingPreferences;
    long long _lastTrackedCellX;
    long long _lastTrackedCellY;
    NSTableColumn *_trackingColumn;
    struct __CFSet *_selectionSet;
    unsigned long long _selectionPreservationThreshold;
    BOOL _shouldReorder;
    BOOL _isTracking;
    BOOL _disallowAutoExpand;
    BOOL _isSetup;
    BOOL _delegateChecked;
    BOOL _delegateResponds;
    BOOL _maintainsSelection;
    BOOL _uidBasedSelection;
    int _blockAutoScrolling;
    double _outlineXDelta;
    double _outlineXInset;
    BOOL _slidingEnabled;
    BOOL _isExpandingItem;
    BOOL _isCollapsingItem;
    double _expandCollapseDelta;
    long long _expandCollapseMaxLevel;
    long long *_xrindentArray;
    long long _xrindentArraySize;
    XROutlineDetailView *_mirroredOutline;
}

+ (id)slideShadow;
@property(nonatomic) BOOL disallowAutoExpand; // @synthesize disallowAutoExpand=_disallowAutoExpand;
- (void)expandPath:(id)arg1 usingItemKey:(id)arg2;
- (id)nodeForPath:(id)arg1 usingItemKey:(id)arg2;
- (void)setDisplaySelection:(id)arg1 usingItemKey:(id)arg2;
- (id)diplaySelectionUsingItemKey:(id)arg1;
- (void)deepCopy:(id)arg1;
- (void)copy:(id)arg1;
- (id)_copySelectedHierarchyFromNode:(id)arg1;
- (void)_appendChildDataForItem:(id)arg1 toString:(id)arg2 atLevel:(int)arg3;
- (void)keyDown:(id)arg1;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)reloadDetailData;
- (id)detailViewLabel;
- (void)setDetailViewLabel:(id)arg1;
- (void)setInspectionTimeInSeconds:(double)arg1;
- (void)setDelegate:(id)arg1;
- (id)instrument;
- (void)setInstrument:(id)arg1;
- (void)deselectRow:(long long)arg1;
- (void)selectRowIndexes:(id)arg1 byExtendingSelection:(BOOL)arg2;
- (void)extendSelectedRowsByIndex:(unsigned long long)arg1;
- (void)restoreSelection:(id)arg1;
- (id)savedSelection;
- (void)setSelectionPreservationThreshold:(unsigned long long)arg1;
- (void)setPreservesSelection:(BOOL)arg1;
- (void)_applySelectionSet;
- (id)_childItemOfItem:(id)arg1 withUID:(id)arg2;
- (void)_refreshSelectionSet;
- (void)_clearSelectionSet;
- (void)_destroySelectionPath:(CDStruct_1b81fc1c *)arg1;
- (CDStruct_1b81fc1c *)_createSelectionPathForItem:(id)arg1;
- (BOOL)performDragOperation:(id)arg1;
- (BOOL)prepareForDragOperation:(id)arg1;
- (unsigned long long)draggingUpdated:(id)arg1;
- (unsigned long long)draggingEntered:(id)arg1;
- (id)exportableData;
- (void)_drawBandForOutlineCellAtRow:(long long)arg1;
- (struct CGRect)_highlightBandInRow:(long long)arg1 mouseRow:(long long)arg2;
- (BOOL)_shouldHighlightBandInRow:(long long)arg1 mouseRow:(long long)arg2;
- (id)menuForEvent:(id)arg1;
- (BOOL)resignFirstResponder;
- (BOOL)becomeFirstResponder;
- (void)_drawContentsAtRow:(long long)arg1 column:(long long)arg2 withCellFrame:(struct CGRect)arg3;
- (void)_drawOutlineCellAtRow:(long long)arg1;
- (void)drawGridInClipRect:(struct CGRect)arg1;
- (struct CGRect)frameOfOutlineCellAtRow:(long long)arg1;
- (struct CGRect)frameOfCellAtColumn:(long long)arg1 row:(long long)arg2;
- (void)_sizeToFitForUserColumnResizeWithOriginalWidths:(id)arg1;
- (void)sizeColumnToFit:(id)arg1;
- (BOOL)isExpandingOrCollapsing;
- (BOOL)isCollapsingItem;
- (BOOL)isExpandingItem;
- (void)_postItemDidCollapseNotification:(id)arg1;
- (void)_postItemDidExpandNotification:(id)arg1;
- (void)_changeIndentLevel:(long long)arg1 indent:(BOOL)arg2;
- (double)slidingOutlineColumnWidthDelta;
- (void)_resizeOutlineColumn;
- (void)resetOutlineX;
- (double)outlineXInset;
- (void)setOutlineXInset:(double)arg1;
- (double)outlineXDelta;
- (void)setOutlineXDelta:(double)arg1;
- (void)defaultViewSymbolAction:(id)arg1;
- (void)setVisibilityOfTableColumnWithIdentifier:(id)arg1 hidden:(BOOL)arg2;
- (void)toggleVisibility:(id)arg1;
- (void)setupContextMenuForColumns;
- (void)setHighlightedTableColumn:(id)arg1;
- (id)preparedCellAtColumn:(long long)arg1 row:(long long)arg2;
- (BOOL)shouldDisplayActionInOutlineView:(id)arg1 forItem:(id)arg2;
- (void)mouseExited:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)moveColumn:(unsigned long long)arg1 toColumn:(unsigned long long)arg2 prefs:(BOOL)arg3;
- (void)mirrorColumnWidths:(id)arg1;
- (void)_setMirroringEnabled:(BOOL)arg1 withSourceView:(id)arg2;
- (void)moveColumn:(long long)arg1 toColumn:(long long)arg2;
- (id)addColumn:(id)arg1 weightIndex:(unsigned long long)arg2 title:(id)arg3 datacell:(id)arg4 isOutlineColumn:(BOOL)arg5 initialWidth:(double)arg6 hidden:(BOOL)arg7;
- (id)addColumn:(id)arg1 title:(id)arg2 datacell:(id)arg3 isOutlineColumn:(BOOL)arg4 initialWidth:(double)arg5 hidden:(BOOL)arg6;
- (void)evaluateSlideCapability;
- (BOOL)useSlidingColumn;
- (id)addActionColumn:(id)arg1 weightIndex:(unsigned long long)arg2 action:(SEL)arg3 target:(id)arg4 title:(id)arg5 isOutlineColumn:(BOOL)arg6 initialWidth:(double)arg7 hidden:(BOOL)arg8;
- (id)addActionColumn:(id)arg1 action:(SEL)arg2 target:(id)arg3 title:(id)arg4 isOutlineColumn:(BOOL)arg5 initialWidth:(double)arg6 hidden:(BOOL)arg7;
- (id)tableColumnWithIdentifier:(id)arg1 andIndex:(unsigned long long)arg2;
- (long long)columnWithIdentifier:(id)arg1 andIndex:(unsigned long long)arg2;
- (void)setBlockAutoScrolling:(BOOL)arg1;
- (void)scrollRowToVisible:(long long)arg1;
- (void)viewDidMoveToWindow;
- (void)viewDidMoveToSuperview;
- (void)setupView;
- (id)name;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface XRCallTreeDetailView : XROutlineDetailView <XRContextContainer>
{
    XRBacktraceRepository *backtraceDataSource;
    NSMutableSet *_expansionDeckUids;
    NSArray *_selectedStack;
    NSMutableDictionary *_dataSourceKVCState;
    NSString *_navigationKeyPath;
    NSMutableArray *_focusNodeStack;
    XRContext *_contextLast;
    XRInstrument *_observedInstrument;
    NSMutableArray *_selectedUidPath;
    NSString *_contextLabel;
    NSString *_sortID;
    unsigned long long _sortIndex;
    BOOL _sortAscending;
    BOOL _ignoreSelChanges;
    BOOL _conformNextSync;
    BOOL _searchMatchesAny;
    NSString *_activeSearchContext;
    NSArray *_activeSearchTokens;
    NSMutableDictionary *_dataMiningOptions;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
- (void)_filterCurrentDataSource;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (id)selectedSearchContext;
- (id)searchContexts;
- (void)_updateInstrumentDataElementContexts;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (id)dataElementForHeaviestStack;
- (id)heaviestStackForNode:(id)arg1;
- (id)_heaviestStackWithCurrentSortForRow:(long long)arg1;
- (void)mergeWithRepository:(id)arg1 factor:(int)arg2;
- (id)dataMiningElementsWithState:(BOOL)arg1;
- (void)setValue:(id)arg1 forDataMiningOption:(id)arg2;
- (id)dataMiningMenuForSelectedRow;
- (id)menuForEvent:(id)arg1;
- (void)collapseItem:(id)arg1 collapseChildren:(BOOL)arg2;
- (void)expandItem:(id)arg1 expandChildren:(BOOL)arg2;
- (void)_changeExpansionStateOfItem:(id)arg1 expanded:(BOOL)arg2 involveChildren:(BOOL)arg3;
- (void)_stackFrameSelected:(id)arg1;
- (void)_selfSelectionChanged:(id)arg1;
- (void)setSortIdentifier:(id)arg1 sortIndex:(unsigned long long)arg2 ascending:(BOOL)arg3;
- (void)setSortIdentifier:(id)arg1 ascending:(BOOL)arg2;
- (void)_refreshColumnHighlight;
- (void)forceReloadDetailData;
- (void)reloadDetailData;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)backtraceRepository;
- (void)setBacktraceRepository:(id)arg1;
- (void)_resetObservation:(BOOL)arg1;
- (void)setNavigationDataElementKeypath:(id)arg1;
- (void)_navigationSync;
- (id)_nameForFocusNode:(id)arg1;
- (void)_pushFocus:(id)arg1;
- (void)_processContextChange;
- (void)_prepareForContextChange;
- (void)_refreshNavigationObservation;
- (void)_instrumentWillBeRemoved:(id)arg1;
- (void)setInstrument:(id)arg1;
- (id)uuid;
- (id)iconForTitle:(id)arg1;
- (id)iconForContext:(id)arg1;
- (id)viewForContext:(id)arg1;
- (id)siblingsForContext:(id)arg1;
- (void)displayContext:(id)arg1;
- (id)contextRepresentation;
- (void)forceLastColumnToFit;
- (void)setContextRepresentationLabel:(id)arg1;
- (BOOL)useSlidingColumn;
- (id)addFocusActionColumn:(id)arg1 title:(id)arg2 isOutlineColumn:(BOOL)arg3 initialWidth:(double)arg4;
- (id)addColumn:(id)arg1 weightIndex:(unsigned long long)arg2 title:(id)arg3 datacell:(id)arg4 isOutlineColumn:(BOOL)arg5 initialWidth:(double)arg6 hidden:(BOOL)arg7;
- (id)addColumn:(id)arg1 title:(id)arg2 datacell:(id)arg3 isOutlineColumn:(BOOL)arg4 initialWidth:(double)arg5 hidden:(BOOL)arg6;
- (void)_libColorChanged:(id)arg1;
- (void)_addDefaultColumns;
- (void)viewDidMoveToWindow;
- (void)setupView;
- (void)setPreferenceOptions:(id)arg1;
- (id)preferenceOptions;
- (void)dealloc;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRChooserMenu : NSMenu <NSMenuDelegate>
{
    unsigned long long _controlSize;
    PFTProcess *_activeProcess;
    XRDevice *_targetDevice;
    id <XRProcessTargetedObject> _targetObject;
}

+ (id)chooserMenuForDevice:(id)arg1 process:(id)arg2 targetedObject:(id)arg3 controlSize:(unsigned long long)arg4;
@property(readonly, nonatomic) unsigned long long controlSize; // @synthesize controlSize=_controlSize;
@property(readonly, nonatomic) id <XRProcessTargetedObject> targetObject; // @synthesize targetObject=_targetObject;
- (void).cxx_destruct;
@property(retain, nonatomic) XRDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain, nonatomic) PFTProcess *activeProcess; // @synthesize activeProcess=_activeProcess;
- (void)setActiveProcessToAllProcesses;
- (void)rebuildMenu;
- (void)menuNeedsUpdate:(id)arg1;
- (id)initWithDevice:(id)arg1 process:(id)arg2 targetedObject:(id)arg3 controlSize:(unsigned long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRCoachComment : NSObject <XRComment>
{
    NSMutableDictionary *_analysisInfo;
    NSArray *_fragments;
    XRCodeManager *_srcManager;
    XRCodeFragment *_sourceFrag;
    XRCodeFragment *_disasmFrag;
    XRCodeFragment *_myFrag;
    BOOL _minimalInfo;
    BOOL _forcedNeed;
}

@property(retain, nonatomic) XRCodeFragment *fragment; // @synthesize fragment=_myFrag;
@property(retain, nonatomic) XRCodeFragment *sourceFragment; // @synthesize sourceFragment=_sourceFrag;
@property(retain, nonatomic) XRCodeFragment *disasmFragment; // @synthesize disasmFragment=_disasmFrag;
- (BOOL)needsInspector;
- (void)setNeedsInspector;
@property(readonly, nonatomic) NSArray *dataItems;
@property(readonly) double importance;
- (BOOL)isMerged;
- (void)mergeWithComment:(id)arg1;
- (BOOL)canMergeWithComment:(id)arg1;
- (id)stringWithType:(int)arg1;
- (id)analysisInfo;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithAnalysis:(id)arg1 forFragment:(id)arg2 referencingSources:(id)arg3 inSourceCodeManager:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRCodeFragment : NSObject
{
    NSObject *_key;
    XRIndexSet *_lineSet;
    int _kind;
}

- (id)fragmentWithLineSet:(id)arg1;
- (BOOL)isDisassembly;
- (BOOL)isBinary;
- (BOOL)isSource;
- (id)key;
- (void)dealloc;
- (id)initWithLineSet:(id)arg1 andKey:(id)arg2 ofKind:(int)arg3;
- (void)setLineSet:(id)arg1;
- (id)lineSet;
- (id)init;

@end

@interface XRCodeLineProxy : NSProxy <XRCodeLineProtocol>
{
    int _kind;
    id <XRCodeLineProtocol><NSObject> _line;
    unsigned long long _symbolBaseAddress;
    id <XRCodeProvider><NSObject> _codeProvider;
    NSString *_locationBase;
    unsigned long long _lineNo;
    struct {
        unsigned int capabilitiesChecked:1;
        unsigned int hasAttributedLine:1;
        unsigned int inKernel:1;
    } _flags;
}

- (id)attributedLineString;
- (unsigned long long)absoluteAddress;
- (id)locationReference;
- (unsigned long long)lineNumber;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)initWithCodeLine:(id)arg1 ofKind:(int)arg2 lineNumber:(unsigned long long)arg3 baseSymbolAddress:(unsigned long long)arg4 locationBase:(id)arg5 inKernel:(BOOL)arg6 andProvider:(id)arg7;

// Remaining properties
@property(readonly, nonatomic) unsigned long long byteOffset; // @dynamic byteOffset;
@property(readonly, nonatomic) unsigned long long length; // @dynamic length;
@property(readonly, nonatomic) NSString *lineString; // @dynamic lineString;

@end

@interface XRCodeManager : NSObject
{
    NSMutableArray *_disassemblers;
    NSMutableArray *_srcAnalyzers;
    NSCache *_disassembledInstructions;
    NSCache *_coachTipsCache;
    NSCache *_sourceCache;
    id <XRCodeProvider><NSObject> _providerDelegate;
}

+ (void)setMaxSymbolLengthInBytes:(unsigned long long)arg1;
- (BOOL)appendStaticAnalysisComments:(id)arg1 forSymbol:(id)arg2 error:(id *)arg3;
- (BOOL)loopDetectionForSymbol:(id)arg1 error:(id *)arg2;
- (id)staticAnalysisInfoForSymbol:(id)arg1 error:(id *)arg2;
- (unsigned long long)getBaseAddressOfDisassemblyFragment:(id)arg1;
- (BOOL)getPath:(id *)arg1 andType:(id *)arg2 ofFragment:(id)arg3 error:(id *)arg4;
- (BOOL)getLines:(id *)arg1 inFragment:(id)arg2 error:(id *)arg3;
- (BOOL)getLineNumbers:(unsigned long long *)arg1 atByteOffsets:(const unsigned long long *)arg2 count:(unsigned long long)arg3 inFragment:(id)arg4 error:(id *)arg5;
- (unsigned long long)enumerateLinesInFragment:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (BOOL)getLine:(id *)arg1 atIndex:(unsigned long long)arg2 inFragment:(id)arg3 error:(id *)arg4;
- (id)productsOfLine:(unsigned long long)arg1 inFragment:(id)arg2 inConcreteSymbol:(id)arg3;
- (id)originsOfLine:(unsigned long long)arg1 inFragment:(id)arg2 inSymbol:(id)arg3 withConcreteBaseAddress:(unsigned long long)arg4;
- (BOOL)resolveFragment:(id)arg1 error:(id *)arg2;
- (id)disassemblyOfSymbol:(id)arg1;
- (id)codeOfSymbol:(id)arg1;
- (id)originOfSymbol:(id)arg1;
- (id)sourceCodeProviderDelegate;
- (void)setSourceCodeProviderDelegate:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRColumnViewingPreferences : NSObject
{
    BOOL isVisible;
    BOOL isSelected;
    unsigned long long columnIndex;
}

- (id)initWithDictionary:(id)arg1;
- (id)encodeAsDictionary;
- (id)initWithVisibility:(BOOL)arg1 selected:(BOOL)arg2 columnIndex:(unsigned long long)arg3;

@end

@interface XRConsolidatedThreadStateFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromState:(int)arg1;
+ (id)stringFromNumber:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;

@end

@interface XRContext : NSObject <NSCoding>
{
    NSString *_label;
    id <NSObject><NSCoding> _value;
    NSMutableDictionary *_attributes;
    XRContext *_parent;
    NSString *_containerUUID;
    NSObject<XRContextContainer> *_container;
}

+ (void)initialize;
@property(readonly, retain, nonatomic) NSString *containerUUID; // @synthesize containerUUID=_containerUUID;
@property(retain, nonatomic) XRContext *parentContext; // @synthesize parentContext=_parent;
@property(readonly, copy, nonatomic) NSMutableDictionary *attributes; // @synthesize attributes=_attributes;
@property(readonly, retain, nonatomic) id <NSObject><NSCoding> value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
- (unsigned long long)markerAddress;
- (unsigned long long)markerLineNumber;
- (id)markerPath;
- (BOOL)hasMarker;
- (void)setMarkerAtPath:(id)arg1 atLineNumber:(unsigned long long)arg2 atAddress:(unsigned long long)arg3;
- (int)siblingMenuDispayRule;
- (void)restoreViewStateToView:(id)arg1;
- (void)preserveViewState:(id)arg1;
- (void)setAncestor:(id)arg1;
- (void)display;
- (void)setRestorationContainer:(id)arg1;
@property(nonatomic) __weak NSObject<XRContextContainer> *container;
- (id)contextRootedByContainer:(id)arg1;
- (id)rootContext;
- (id)contextPathDescriptor;
- (id)contextPath;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLabel:(id)arg1 value:(id)arg2 attributes:(id)arg3 container:(id)arg4 parentContext:(id)arg5;

@end

@interface XRContextLegacyDataElement : XRContext
{
    NSArray *_paths;
    NSString *_targetKeyPath;
    PFTDataElement *_element;
}

- (id)element;
- (void)setPaths:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)paths;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithDataElement:(id)arg1 instrument:(id)arg2 parentContext:(id)arg3;

@end

@interface XRControlBar : DVTBorderedView
{
}

- (BOOL)isOpaque;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRControlBarButton : NSButton
{
    BOOL _isMouseDown;
    BOOL _drawsBorderline;
    BOOL _drawsStartBorderline;
    BOOL _postClickNotifications;
}

@property BOOL postClickNotifications; // @synthesize postClickNotifications=_postClickNotifications;
@property BOOL drawsStartBorderline; // @synthesize drawsStartBorderline=_drawsStartBorderline;
@property BOOL drawsBorderline; // @synthesize drawsBorderline=_drawsBorderline;
@property BOOL isMouseDown; // @synthesize isMouseDown=_isMouseDown;
- (void)mouseDown:(id)arg1;
- (void)handleMenu;
- (void)awakeFromNib;

@end

@interface XRControlBarButtonCell : NSButtonCell
{
}

- (void)drawImage:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3;
- (void)drawBezelWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface XRCore : NSObject <NSCoding, NSCopying>
{
    XRDevice *_nonRetainedDevice;
    unsigned long long _number;
    BOOL _isPhysical;
    NSString *_internalIdentifier;
    NSString *_displayName;
    NSString *_description;
}

+ (void)initialize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)displayName;
- (BOOL)isPhysical;
- (unsigned long long)number;
- (id)device;
- (void)dealloc;
- (id)initWithDevice:(id)arg1 number:(unsigned long long)arg2 physical:(BOOL)arg3;

@end

@interface XRCountersEventCounter : NSObject <NSCoding>
{
    NSString *_mnemonic;
    NSString *_counter;
    BOOL _enabled;
    XRPMEvent *_event;
}

@property(nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) NSString *counter; // @synthesize counter=_counter;
@property(retain, nonatomic) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
@property(retain, nonatomic) XRPMEvent *event; // @synthesize event=_event;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface XRCountersEventCounterProc : XRCountersEventCounter
{
    NSMutableArray *_processors;
}

@property(copy, nonatomic) NSMutableArray *processors; // @synthesize processors=_processors;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface XRCountersSetupEventOrFormula : NSObject <NSCoding>
{
    BOOL _supported;
    BOOL _beingEdited;
    NSString *_displayName;
    NSString *_aliasOrMnemonic;
    NSString *_mnemonic;
    NSString *_explanation;
    NSString *_formulaText;
    NSString *_warningString;
}

@property(nonatomic) BOOL beingEdited; // @synthesize beingEdited=_beingEdited;
@property(nonatomic) BOOL supported; // @synthesize supported=_supported;
@property(retain, nonatomic) NSString *warningString; // @synthesize warningString=_warningString;
@property(retain, nonatomic) NSString *formulaText; // @synthesize formulaText=_formulaText;
@property(retain, nonatomic) NSString *explanation; // @synthesize explanation=_explanation;
@property(retain, nonatomic) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
@property(retain, nonatomic) NSString *aliasOrMnemonic; // @synthesize aliasOrMnemonic=_aliasOrMnemonic;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;
- (BOOL)isEvent;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithBlankFormula;
- (id)initWithFormulaNamed:(id)arg1 text:(id)arg2;
- (id)initFromPMEvent:(id)arg1;
- (id)initWithDisplayName:(id)arg1 aliasOrMnemonic:(id)arg2 mnemonic:(id)arg3 explanation:(id)arg4;

@end

@interface XRCountersSetupModel : NSObject
{
    XRInstrument *_instrument;
    BOOL _sampleByTime;
    NSNumber *_sampleRateTime;
    NSString *_sampleRateUnits;
    NSNumber *_sampleRateEvents;
    NSString *_pmiEventAliasOrMnemonic;
    NSString *_callstacks;
    NSMutableArray *_eventsAndFormulas;
    NSString *_pmiEventWarningString;
}

@property(retain, nonatomic) NSArray *eventsAndFormulas; // @synthesize eventsAndFormulas=_eventsAndFormulas;
@property(retain, nonatomic) NSString *callstacks; // @synthesize callstacks=_callstacks;
@property(retain, nonatomic) NSString *pmiEventWarningString; // @synthesize pmiEventWarningString=_pmiEventWarningString;
@property(retain, nonatomic) NSString *pmiEventAliasOrMnemonic; // @synthesize pmiEventAliasOrMnemonic=_pmiEventAliasOrMnemonic;
@property(retain, nonatomic) NSNumber *sampleRateEvents; // @synthesize sampleRateEvents=_sampleRateEvents;
@property(retain, nonatomic) NSString *sampleRateUnits; // @synthesize sampleRateUnits=_sampleRateUnits;
@property(retain, nonatomic) NSNumber *sampleRateTime; // @synthesize sampleRateTime=_sampleRateTime;
@property(nonatomic) BOOL sampleByTime; // @synthesize sampleByTime=_sampleByTime;
@property(readonly, nonatomic) __weak XRInstrument *instrument; // @synthesize instrument=_instrument;
- (void).cxx_destruct;
- (id)modelStateDescription;
- (void)removeEventOrFormulaAtIndex:(unsigned long long)arg1;
- (void)removeEventOrFormulaNamed:(id)arg1;
- (void)removeEventOrFormula:(id)arg1;
- (void)addEventOrFormula:(id)arg1;
- (id)thresholdForAliasOrMnemonic:(id)arg1;
- (id)thresholdForMnemonic:(id)arg1;
- (id)eventForAliasOrMnemonic:(id)arg1;
- (id)eventForMnemonic:(id)arg1;
- (void)setConfigurationOptions:(id)arg1;
- (id)configurationOptions;
- (id)initWithInstrument:(id)arg1;

@end

@interface XRCountingArray : NSObject
{
    SEL _equalitySelector;
    BOOL _isSorted;
    NSMutableArray *_items;
    NSMutableArray *_addCounts;
}

- (void)sort;
- (unsigned long long)addCountForAllItems;
- (unsigned long long)addCountForItem:(id)arg1;
- (id)allItems;
- (void)increaseCount:(unsigned long long)arg1 forItem:(id)arg2;
- (void)addItem:(id)arg1;
- (void)addItem:(id)arg1 withCount:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithEqualitySelector:(SEL)arg1;
- (id)init;

@end

@interface XRDSYMDownloadCoordinator : NSObject
{
    NSObject<OS_dispatch_queue> *_parallelQueue;
    int _numberOfDownloads;
    int _maxSimultaneousDownloads;
    struct vector<_XRDSYMObserverID *, std::__1::allocator<_XRDSYMObserverID *>> *_observers;
    struct _DBGDSYMObserverID *_dbgObserverRef;
    NSMutableSet *_negativeCache;
    BOOL _downloadingPaused;
    NSString *_downloadScript;
    NSMutableArray *_queuedDownloads;
}

+ (id)defaultCoordinator;
@property(readonly, retain, nonatomic) NSMutableArray *queuedDownloads; // @synthesize queuedDownloads=_queuedDownloads;
@property(readonly, nonatomic) BOOL downloadingPaused; // @synthesize downloadingPaused=_downloadingPaused;
@property(readonly, retain, nonatomic) NSString *downloadScript; // @synthesize downloadScript=_downloadScript;
- (void)_notifyDSYMObserversAboutUUID:(id)arg1 fullDSYMURL:(id)arg2 flags:(unsigned int)arg3;
- (void)_downloadForUUID:(id)arg1 succeeded:(BOOL)arg2 withURL:(id)arg3;
- (void)_checkStartNewDownload;
- (BOOL)unregisterObserver:(struct _XRDSYMObserverID *)arg1;
- (struct _XRDSYMObserverID *)registerObserverWithFlags:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (void)cancelDownloadForUUID:(id)arg1;
- (void)cancelDownloads;
- (void)resumeDownloads;
- (void)pauseDownloads;
- (void)bumpPriorityForUUID:(id)arg1;
- (id)downloadStatusForUUID:(id)arg1;
- (BOOL)isDownloadingUUID:(id)arg1;
- (BOOL)negativeCacheHasEntries;
- (void)resetNegativeCacheForUUID:(id)arg1;
- (void)resetNegativeCache;
- (BOOL)checkNegativeCacheForUUID:(id)arg1;
- (BOOL)downloadDSYMForUUID:(id)arg1;
- (long long)numberOfDownloads;
- (long long)_downloadIndexOfUUID:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)init;

@end

@interface XRDSYMDownloadStatus : NSObject <NSCopying>
{
    NSString *_uuid;
    NSDate *_startDate;
    long long _queueSlot;
}

@property(nonatomic) long long queueSlot; // @synthesize queueSlot=_queueSlot;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(readonly, retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (BOOL)downloadStarted;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithUUID:(id)arg1;

@end

@interface XRDTPSImporter : NSObject
{
    XRRun *_run;
    NSKeyedUnarchiver *_unarchiver;
    int _dtpsVersion;
    int _pid;
    double _startSecs;
    double _stopSecs;
    struct _XRDeviceTimeInfo _startTimeInfo;
    struct _XRDeviceTimeInfo _stopTimeInfo;
    XRDevice *_device;
    XRBacktraceRepository *_backtraceRepository;
    unsigned long long _messageCount;
    NSMutableArray *_messageArray;
    unsigned long long _messageIndex;
}

@property(readonly) unsigned long long messageCount; // @synthesize messageCount=_messageCount;
@property(readonly, retain) XRBacktraceRepository *backtraceRepository; // @synthesize backtraceRepository=_backtraceRepository;
@property(readonly) double stopSecs; // @synthesize stopSecs=_stopSecs;
@property(readonly) double startSecs; // @synthesize startSecs=_startSecs;
@property(readonly) int pid; // @synthesize pid=_pid;
@property(readonly) int dtpsVersion; // @synthesize dtpsVersion=_dtpsVersion;
@property(readonly, retain) XRDevice *device; // @synthesize device=_device;
@property(readonly, retain) NSKeyedUnarchiver *unarchiver; // @synthesize unarchiver=_unarchiver;
- (void)endImport;
- (void)_doASLQuery;
- (id)nextMessage;
- (const struct _XRDeviceTimeInfo *)timeInfo:(BOOL)arg1;
- (void)dealloc;
- (id)initWithFilePaths:(id)arg1 forRun:(id)arg2 error:(id *)arg3;
- (id)hostID;
- (void)displayError:(id)arg1 withInfo:(id)arg2;

@end

@interface XRDTPlugInKeyWrapper : NSObject <NSCopying>
{
    PFTInstrumentPlugin *_plugIn;
}

+ (id)wrapperForPlugIn:(id)arg1;
@property(nonatomic) __weak PFTInstrumentPlugin *plugIn; // @synthesize plugIn=_plugIn;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface XRExecOptionsViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate, XRTopicInterfaceComponent>
{
    NSButton *_showHiddenFilesButton;
    NSButton *_traversePackagesButton;
    NSTextField *_workingDirectory;
    NSTextField *_argumentsField;
    NSString *_argumentsString;
    NSMutableArray *_names;
    NSMutableArray *_values;
    PFTProcess *_selectedProcess;
    DVTTableView *_environmentVariablesTable;
    DVTGradientImageButton *_addEnvironmentVariableButton;
    DVTGradientImageButton *_removeEnvironmentVariableButton;
    DVTGradientImagePopUpButton *_optionsPopUpButton;
    NSMenu *_optionsMenu;
    DVTBorderedView *_borderedView;
    XRTopic *_topic;
    NSString *_selectedPath;
    NSString *_workingDirectoryString;
}

+ (void)initialize;
@property(retain, nonatomic) NSString *workingDirectoryString; // @synthesize workingDirectoryString=_workingDirectoryString;
@property(copy, nonatomic) NSString *selectedPath; // @synthesize selectedPath=_selectedPath;
@property(retain, nonatomic) XRTopic *topic; // @synthesize topic=_topic;
@property(nonatomic) __weak DVTBorderedView *borderedView; // @synthesize borderedView=_borderedView;
@property(nonatomic) __weak NSMenu *optionsMenu; // @synthesize optionsMenu=_optionsMenu;
@property(nonatomic) __weak DVTGradientImagePopUpButton *optionsPopUpButton; // @synthesize optionsPopUpButton=_optionsPopUpButton;
@property(nonatomic) __weak DVTGradientImageButton *removeEnvironmentVariableButton; // @synthesize removeEnvironmentVariableButton=_removeEnvironmentVariableButton;
@property(nonatomic) __weak DVTGradientImageButton *addEnvironmentVariableButton; // @synthesize addEnvironmentVariableButton=_addEnvironmentVariableButton;
@property(nonatomic) __weak DVTTableView *environmentVariablesTable; // @synthesize environmentVariablesTable=_environmentVariablesTable;
@property(retain, nonatomic) PFTProcess *selectedProcess; // @synthesize selectedProcess=_selectedProcess;
@property(retain, nonatomic) NSMutableArray *values; // @synthesize values=_values;
@property(retain, nonatomic) NSMutableArray *names; // @synthesize names=_names;
@property(copy, nonatomic) NSString *argumentsString; // @synthesize argumentsString=_argumentsString;
@property(nonatomic) __weak NSTextField *argumentsField; // @synthesize argumentsField=_argumentsField;
@property(nonatomic) __weak NSTextField *workingDirectory; // @synthesize workingDirectory=_workingDirectory;
@property(nonatomic) __weak NSButton *traversePackagesButton; // @synthesize traversePackagesButton=_traversePackagesButton;
@property(nonatomic) __weak NSButton *showHiddenFilesButton; // @synthesize showHiddenFilesButton=_showHiddenFilesButton;
- (void).cxx_destruct;
- (void)_updateUI;
- (void)_pathSelected:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 row:(long long)arg4;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)setSubTopic:(id)arg1;
- (id)subTopic;
- (void)applyResult:(id)arg1;
- (void)_traversePackagesButtonClicked:(id)arg1;
- (void)_removeEnvironmentVariableButtonClicked:(id)arg1;
- (void)_delete;
- (void)_addEnvironmentVariableButtonClicked:(id)arg1;
- (void)hideTraverseButton;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithTopic:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDaemonExecOptionsViewController : XRExecOptionsViewController
{
}

- (void)applyResult:(id)arg1;
- (void)awakeFromNib;

@end

@interface XRDataContext : XRContext
{
    NSString *_instrumentUUID;
}

- (void)display;
- (void)setInstrumentUUID:(id)arg1;
- (id)container;
- (void)removeSelf;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface XRDevice : NSObject <DTApplicationWorkspaceClient, DTApplicationObserver>
{
    NSObject<OS_dispatch_queue> *_connectionGuardQueue;
    DTXConnection *_activeConnection;
    NSMutableDictionary *_cachedCapabilities;
    int _connectionCount;
    NSObject<OS_dispatch_queue> *_installedApplicationsQueue;
    NSObject<OS_dispatch_queue> *_installedApplicationsUpdateQueue;
    NSMutableDictionary *_installedAppsByPath;
    NSMutableDictionary *_pidObservers;
    NSMutableDictionary *_logRecorders;
    NSMutableArray *_allCores;
    NSObject<OS_dispatch_semaphore> *_tapLock;
    DTCoreProfileTap *_coreProfileTap;
    struct _CPEventSet *_kdebugEventSet;
    DTPerfMonDevice *_dtPerfMonDevice;
    NSMutableDictionary *_iconsByPid;
    NSMutableDictionary *_iconsByPath;
    NSString *_deviceIdentifier;
    NSString *_deviceDisplayName;
    NSString *_deviceDescription;
    NSString *_buildVersion;
    NSString *_productVersion;
    NSString *_productType;
    double _timeDifference;
    DTXChannel *_capabilitiesChannel;
    NSImage *_downsampledDeviceImage;
}

+ (id)deviceWithTemplateData:(id)arg1;
@property(copy) NSImage *downsampledDeviceImage; // @synthesize downsampledDeviceImage=_downsampledDeviceImage;
@property(retain) DTXChannel *capabilitiesChannel; // @synthesize capabilitiesChannel=_capabilitiesChannel;
@property double timeDifference; // @synthesize timeDifference=_timeDifference;
@property(copy) NSString *productType; // @synthesize productType=_productType;
@property(copy) NSString *productVersion; // @synthesize productVersion=_productVersion;
@property(copy) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(copy) NSString *deviceDescription; // @synthesize deviceDescription=_deviceDescription;
@property(copy) NSString *deviceDisplayName; // @synthesize deviceDisplayName=_deviceDisplayName;
@property(copy) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly) int connectionCount; // @synthesize connectionCount=_connectionCount;
- (void).cxx_destruct;
- (id)dtPerfMonDevice;
- (struct _CPEventSet *)supportedKDebugEvents;
- (id)coreProfileTap;
- (id)_copyDTPerfMonDevice;
- (struct _CPEventSet *)_copySupportedKDebugEvents;
- (BOOL)authorize:(int)arg1;
- (void)simulateMemoryWarning:(id)arg1;
- (void)activateProcess:(id)arg1;
- (void)terminateProcess:(id)arg1;
- (BOOL)resumeProcess:(id)arg1;
- (BOOL)suspendProcess:(id)arg1;
- (int)launchProcess:(id)arg1 error:(id *)arg2;
- (void)recordLogsForPid:(int)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)observersForPid:(int)arg1;
- (void)removeObserver:(id)arg1 forPid:(int)arg2;
- (void)addObserver:(id)arg1 forPid:(int)arg2;
- (void)enableTerminatedPidCaching:(BOOL)arg1;
- (BOOL)supportsKernelBacktracing;
- (void)fixupSymbolicator:(struct _CSTypeRef)arg1;
- (struct _CSTypeRef)createKernelSymbolicator;
- (struct _CSTypeRef)createSymbolicatorForPid:(int)arg1;
- (id)architecturesForPath:(id)arg1;
- (BOOL)executableIsRetricted:(id)arg1 launchOptions:(id)arg2;
- (BOOL)isRunningPid:(int)arg1;
- (id)environmentForPid:(int)arg1;
- (id)execnameForPid:(int)arg1;
- (id)executablePathForPid:(int)arg1;
- (id)iconNameForExecutableName:(id)arg1;
- (id)iconForAppPath:(id)arg1 executableName:(id)arg2;
@property(copy) NSImage *deviceSmallRepresentationIcon;
- (id)_iconForPid:(int)arg1 smallSize:(BOOL)arg2;
- (id)smallIconForPid:(int)arg1;
- (id)iconForPid:(int)arg1;
- (id)userForUID:(id)arg1;
@property(readonly) id <XRFileSystem> fileSystem;
- (id)targetTopicsWithSelectedPath:(id)arg1;
- (void)alternateAction;
- (id)alternateText;
- (BOOL)daemonsSupported;
- (void)sendInput:(id)arg1 toPid:(int)arg2;
- (BOOL)supportsDeviceIO;
- (BOOL)supportsStandardInput;
- (void)didRecordLogMessage:(id)arg1;
- (void)removeFilesystemObserver:(id)arg1;
- (void)addFilesystemObserver:(id)arg1 forPaths:(id)arg2;
@property(readonly, copy) NSImage *defaultAppIcon;
@property(readonly) BOOL allowsChoosingExecutable;
- (id)processWithExecutablePath:(id)arg1 bundleIdentifier:(id)arg2 arguments:(id)arg3 environment:(id)arg4 launchOptions:(id)arg5;
- (void)clearPreviousExecutables;
- (void)addPreviousExecutable:(id)arg1;
@property(readonly) NSArray *previousExecutables;
@property(readonly) NSArray *runningProcesses;
- (void)preflightDevice;
- (id)targetControlDataElementsForProcess:(id)arg1;
- (id)launchControlDataElementsForProcess:(id)arg1;
@property(readonly) NSString *externalSDKPath;
@property(readonly) NSString *internalSDKPath;
- (long long)versionForCapability:(id)arg1;
- (id)displayNameForNetworkInterface:(id)arg1;
- (id)deviceArchitecture;
- (void)applicationUninstalled:(id)arg1;
- (void)applicationInstalled:(id)arg1;
- (id)processFromSerialized:(id)arg1;
- (BOOL)updateInstalledExecutables;
- (void)clearInstalledExecutables;
- (void)removeInstalledExecutables:(id)arg1;
- (void)addInstalledExecutables:(id)arg1;
@property(readonly) NSArray *unrestrictedAppExtensions;
@property(readonly) NSArray *unrestrictedExecutables;
@property(readonly) NSArray *installedExecutables;
- (id)_installedMatchingType:(int)arg1 unrestrictedOnly:(BOOL)arg2;
- (void)teardownConnection;
- (void)prepareConnection:(id)arg1;
- (void)disconnect;
- (id)makeConnection;
- (id)connection;
- (id)_faultConnection;
- (void)_connectionInterrupted:(id)arg1;
- (id)allCores;
- (id)cpuDescription;
- (int)speedOfCpus;
- (int)numberOfCpus;
- (int)numberOfPhysicalCpus;
- (BOOL)currentDeviceTime:(struct _XRDeviceTimeInfo *)arg1;
@property(readonly) BOOL isDevelopmentDevice;
- (void)bootDevice;
@property(readonly) BOOL isOnLine;
@property(readonly) BOOL isLocal;
- (id)templateData;
- (void)assumeProperties:(id)arg1;
@property(readonly) unsigned long long hash;
- (BOOL)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTemplateData:(id)arg1;
- (id)initWithIdentifier:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)init;
- (id)launchDaemonPaths;
- (id)launchAgentPaths;
@property(readonly, copy) NSString *deviceRootPath;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface XRDeviceChooserMenu : XRChooserMenu <XRDeviceObserver>
{
    BOOL _allowTemplateDefaultItem;
}

@property(nonatomic) BOOL allowTemplateDefaultItem; // @synthesize allowTemplateDefaultItem=_allowTemplateDefaultItem;
- (void)_chooseDeviceAlternate:(id)arg1;
- (void)_chooseDevice:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)rebuildMenu;
- (void)_addItemForDevice:(id)arg1 alternate:(id)arg2;
- (void)handleDeviceNotification:(id)arg1;
- (id)initWithDevice:(id)arg1 process:(id)arg2 targetedObject:(id)arg3 controlSize:(unsigned long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDeviceDiscovery : NSObject
{
    DVTExtension *_extension;
}

+ (id)devicesMatching:(id)arg1;
+ (id)deviceForIdentifier:(id)arg1;
+ (id)allKnownDevices;
+ (id)availableDevices;
+ (void)unregisterForDeviceNotifications:(unsigned int)arg1;
+ (unsigned int)registerForDevicesNotifications:(CDUnknownBlockType)arg1;
+ (void)forgetDevice:(id)arg1;
+ (void)deviceStateChanged:(id)arg1;
+ (void)deviceConnected:(id)arg1;
+ (void)_systemDidWake:(id)arg1;
+ (void)_systemWillSleep:(id)arg1;
+ (void)initialize;
+ (id)deviceDiscoveryImplementations;
+ (void)_faultDeviceDiscoveryImpls;
+ (void)registerDeviceObserver:(id)arg1;
@property(retain, nonatomic) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
- (void)stopListeningForDevices;
- (void)startListeningForDevices;
- (id)deviceList;
- (id)deviceManagementItems;

@end

@interface XRDeviceDiscoveryLocal : XRDeviceDiscovery
{
}

- (id)deviceList;

@end

@interface XRTopic : NSObject
{
    XRTopic *_parentNotRetained;
    NSMutableArray *_children;
    NSString *_label;
    NSString *_imageName;
    NSString *_userInterfaceComponentIdentifier;
    id <XRTopicInterfaceComponent> _interfaceComponent;
    NSMutableDictionary *_attributes;
}

+ (id)allLeafChildrenOfRoots:(id)arg1;
- (void).cxx_destruct;
- (id)interfaceComponent;
- (id)attributes;
- (id)imageName;
- (id)label;
- (id)allLeafChildren;
- (id)children;
- (void)addChild:(id)arg1;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)initWithLabel:(id)arg1 imageName:(id)arg2 userInterfaceComponentIdentifier:(id)arg3;
- (id)initWithLabel:(id)arg1 userInterfaceComponentIdentifier:(id)arg2;

@end

@interface XRDeviceTopic : XRTopic
{
    XRDevice *_device;
}

@property(retain, nonatomic) XRDevice *device; // @synthesize device=_device;
- (void).cxx_destruct;

@end

@interface XRDisassembledInstructionsKey : NSObject <NSCopying>
{
    unsigned long long _namehash;
    unsigned long long _pathhash;
}

- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSymbol:(id)arg1;
- (unsigned long long)path_hash;
- (unsigned long long)name_hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface XRDisassemblyComment : NSObject <XRComment>
{
    NSArray *_fragments;
    XRCodeManager *_srcManager;
    XRCodeFragment *_disasmFrag;
    XRCodeFragment *_sourceFrag;
    XRCodeFragment *_myFrag;
}

@property(retain, nonatomic) XRCodeFragment *fragment; // @synthesize fragment=_myFrag;
@property(retain, nonatomic) XRCodeFragment *disasmFragment; // @synthesize disasmFragment=_disasmFrag;
@property(retain, nonatomic) XRCodeFragment *sourceFragment; // @synthesize sourceFragment=_sourceFrag;
@property(readonly, nonatomic) NSArray *dataItems;
- (BOOL)isMerged;
@property(readonly) double importance;
- (void)mergeWithComment:(id)arg1;
- (BOOL)canMergeWithComment:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)stringWithType:(int)arg1;
- (void)dealloc;
- (id)initWithFragment:(id)arg1 referencingSources:(id)arg2 inSourceCodeManager:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDragThumb : NSImageView
{
    NSWindow *_windowTarget;
    NSSplitView *_splitviewTarget;
    struct CGPoint _location;
}

- (void)_splitViewChangedFrame:(id)arg1;
- (void)resetCursorRects;
- (void)drawRect:(struct CGRect)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)awakeFromNib;
- (void)dealloc;

@end

@interface XREpochBallotBox : NSObject
{
    struct _XRDeviceTimeInfo _initialTimeInfo;
    NSDate *_hostAbsoluteStartTime;
    NSDate *_hostAbsoluteEndTime;
    unsigned long long _newMachAbsTime;
}

- (void).cxx_destruct;
- (void)voteNanosecondsBeforeEndTime:(unsigned long long)arg1;
- (unsigned long long)bestTargetMachEpoch;
- (id)bestHostAbsoluteStartTime;
- (struct _XRDeviceTimeInfo)bestTargetDeviceTimeInfo;
- (void)voteDeviceRelativeMachAbsoluteTime:(unsigned long long)arg1;
- (id)initWithInitialTimeInfo:(struct _XRDeviceTimeInfo)arg1 hostAbsoluteStartTime:(id)arg2 hostAbsoluteEndTime:(id)arg3;

@end

@interface XRError : NSError
{
}

- (id)localizedDescription;

@end

@interface XRExpandableMenuItem : NSMenuItem
{
    CDUnknownBlockType _clientAction;
    BOOL _trackingInside;
}

+ (id)itemWithTitle:(id)arg1 indentationLevel:(long long)arg2 controlSize:(unsigned long long)arg3 action:(CDUnknownBlockType)arg4;
- (void).cxx_destruct;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (void)expandItem:(id)arg1;
- (id)initWithTitle:(id)arg1 indentationLevel:(long long)arg2 controlSize:(unsigned long long)arg3 action:(CDUnknownBlockType)arg4;

@end

@interface XRExtensionInstrumentTypeData : NSObject <XRInstrumentTypeData>
{
    DVTExtension *_extension;
}

@property(readonly) DVTExtension *extension; // @synthesize extension=_extension;
- (void).cxx_destruct;
- (id)valueForKey:(id)arg1 error:(id *)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)loadExtensionPlugIn;
- (void)loadExtensionBundle;
@property(readonly) DVTPlugIn *plugIn;
@property(readonly) NSArray *keywords;
@property(readonly) NSString *helpURL;
@property(readonly) NSArray *brushNames;
@property(readonly) BOOL canReplay;
@property(readonly) NSString *uuid;
@property(readonly) unsigned int deckUnits;
@property(readonly) NSImage *icon;
@property(readonly) BOOL deprecated;
@property(readonly) BOOL beta;
@property(readonly) NSString *instrumentClassName;
@property(readonly, copy) NSString *description;
@property(readonly) NSString *category;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;
- (id)initWithExtension:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFileSystemObserver : NSObject
{
    NSMutableDictionary *_fsEventObservers;
    struct __FSEventStream *_fsEventStream;
    unsigned long long _lastEventId;
    NSMutableDictionary *_kqueueObservers;
    NSMutableDictionary *_fdPaths;
    int _kqueueFD;
    NSMutableDictionary *_pollingObservers;
    NSTimer *_timer;
}

+ (id)sharedXRFileSystemObserver;
- (void)dealloc;
- (void)stop;
- (void)start;
- (BOOL)removeObserver:(id)arg1 forPath:(id)arg2;
- (BOOL)addObserver:(id)arg1 forPath:(id)arg2;
- (void)removePollingObserver:(id)arg1 forPath:(id)arg2;
- (BOOL)addPollingObserver:(id)arg1 forPath:(id)arg2;
- (void)_timerFired:(id)arg1;
- (void)updateKqueueFDForPath:(id)arg1;
- (void)removeKqueueObserver:(id)arg1 forPath:(id)arg2;
- (BOOL)addKqueueObserver:(id)arg1 forPath:(id)arg2;
- (void)_waitForKqueue:(id)arg1;
- (void)_processKqueueEvents:(id)arg1;
- (void)removeFSEventObserver:(id)arg1 forPath:(id)arg2;
- (BOOL)addFSEventObserver:(id)arg1 forPath:(id)arg2;
- (BOOL)_isPathOnLocalFileSystem:(id)arg1;
- (void)_stopFSEventStream;
- (void)_startFSEventStream;
- (void)_processEventsCount:(unsigned long long)arg1 paths:(char **)arg2 flags:(const unsigned int *)arg3 ids:(const unsigned long long *)arg4;
- (id)init;

@end

@interface XRFilenameFormatter : NSFormatter
{
    BOOL _showPathExtensions;
}

- (id)stringForObjectValue:(id)arg1;
- (BOOL)showPathExtensions;
- (void)setShowPathExtensions:(BOOL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRFlag : NSObject <NSCoding>
{
}

- (long long)compare:(id)arg1 usingSortDescriptors:(id)arg2;
- (void)setHasFocus:(BOOL)arg1;
- (BOOL)hasFocus;
- (BOOL)isGlobal;
- (BOOL)modifiable;
- (void)setDateModified:(id)arg1;
- (id)dateModified;
- (unsigned long long)creationTimestamp;
- (id)dateCreated;
- (void)setIcon:(id)arg1;
- (id)icon;
- (void)setSummary:(id)arg1;
- (id)summary;
- (void)setName:(id)arg1;
- (id)name;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface XRFlagArrayController : NSArrayController
{
}

- (BOOL)canSelectPrevious;
- (BOOL)canSelectNext;

@end

@interface XRFlagController : NSObject <NSOutlineViewDataSource>
{
    NSMutableDictionary *_flagsForRun;
    long long _selectedRun;
    unsigned long long _observationCt;
    NSArrayController *_trackFlagsController;
    NSArray *_trackFlagsSortDescriptors;
    NSArrayController *_tableFlagsController;
    NSArray *_tableFlagsSortDescriptors;
    XRFlag *_focusFlag;
    NSMutableArray *_signalFlags;
    NSMutableArray *_trackFlags;
    NSMutableArray *_flagsShowing;
    NSMutableArray *_flagsHiding;
    NSMutableArray *_topLevelTableFlags;
    NSMutableArray *_stopFlags;
    unsigned long long _topLevelFlagCt;
    BOOL _deferRearrangeObjects;
    union _flagTableFilter_u _flagFilter;
    BOOL _searchingActive;
}

- (void)setSearchedFlags:(id)arg1;
- (void)outlineView:(id)arg1 setObjectValue:(id)arg2 forTableColumn:(id)arg3 byItem:(id)arg4;
- (id)outlineView:(id)arg1 objectValueForTableColumn:(id)arg2 byItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)filterFlags:(id)arg1;
- (void)updateFilteredFlags;
- (void)setFlagDisplayFilter:(union _flagTableFilter_u)arg1;
- (BOOL)flagIsFiltered:(id)arg1;
- (union _flagTableFilter_u)flagDisplayFilter;
- (void)invertAllFlagsDisplay;
- (void)setDisplayFlagsOfType:(int)arg1 isDisplayed:(BOOL)arg2;
- (void)setFlag:(id)arg1 isDisplayed:(BOOL)arg2;
- (void)focusOnFlag:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)sortDescriptors;
- (void)setSortDescriptors:(id)arg1;
- (BOOL)canSelectPreviousFlag;
- (BOOL)canSelectNextFlag;
- (void)setHighlightedFlags:(id)arg1;
- (id)highlightedFlags;
- (id)displayedFlags;
- (id)flagAtIndex:(unsigned long long)arg1;
- (id)displayedFlagAtIndex:(unsigned long long)arg1;
- (id)nextFlag;
- (id)previousFlag;
- (void)selectNextFlag;
- (void)selectPreviousFlag;
- (id)addedRunFlags;
- (id)selectedRunFlags;
- (id)runFlagsController;
- (long long)selectedRun;
- (void)setSelectedRun:(long long)arg1;
- (void)setRunFlagsContent:(id)arg1;
- (long long)reorderSignalFlags;
- (long long)updateTopLevelFlags;
- (id)flagsForRun:(long long)arg1 fromPID:(int)arg2 andThread:(unsigned long long)arg3;
- (BOOL)hasFlagsForRun:(long long)arg1;
- (void)removeFlag:(id)arg1 forRun:(long long)arg2;
- (void)unregisterFlag:(id)arg1 forRun:(long long)arg2;
- (void)registerFlag:(id)arg1 forRun:(long long)arg2 displayed:(BOOL)arg3;
- (void)deferArrangeFlags:(BOOL)arg1;
- (id)trackFlagsForRun:(long long)arg1;
- (void)deleteFlagsForRun:(long long)arg1;
- (id)flagsForRun:(long long)arg1;
- (unsigned long long)_indexForInsertingFlag:(id)arg1 intoSortedArray:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)observeSelectedRunFlags;
- (void)unobserveSelectedRunFlags;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFlagViewer : PFTNibView <NSWindowDelegate>
{
    PFTTraceDocument *_currDocument;
    XRFlagController *_flagController;
    NSOutlineView *_flagOutline;
    NSWindow *_myWindow;
    NSMenu *_tableColumnMenu;
    NSMenu *_displayStateMenu;
    NSSearchField *_flagTableSearchField;
    NSMenu *_searchColumnMenu;
    NSArray *_searchMenuItemsArray;
    NSArray *_flagColumnArray;
    NSArray *_flagColumnMenuItemsArray;
    BOOL _flagTableDeferReload;
    BOOL _ignoreColumnMoves;
    NSMutableArray *_flagColumnsToSearch;
    NSMutableArray *_searchedFlags;
    XRASLObserver *_aslObserver;
    NSMapTable *_nextASLScanForTrace;
}

+ (union _flagTableFilter_u)defaultFlagFilter;
+ (union _flagTableFilter_u)flagFilterForDocument:(id)arg1 runNumber:(long long)arg2;
+ (void)setFlagFilter:(union _flagTableFilter_u)arg1 forDocument:(id)arg2 runNumber:(long long)arg3;
- (void)flagModifiedResponse:(id)arg1;
- (void)setSearchCategoryFrom:(id)arg1;
- (void)searchFlagTableAction:(id)arg1;
- (void)columnVisibleAction:(id)arg1;
- (void)displayFilterAction:(id)arg1;
- (void)flagMenuAction:(id)arg1;
- (void)flagRangeAction:(id)arg1;
- (void)reloadFlagTable;
- (id)title;
- (void)dealloc;
- (void)windowWillClose:(id)arg1;
- (void)hideWindow:(id)arg1;
- (void)showWindow:(id)arg1;
- (id)window;
- (id)flagView;
- (id)contentView;
- (void)setTitleFromDocument:(id)arg1;
- (void)updateRunNumber:(id)arg1;
- (id)document;
- (void)setDocument:(id)arg1;
- (void)_traceDidStop:(id)arg1;
- (void)_traceDidStart:(id)arg1;
- (void)refreshDisplayStateFilterMenuWith:(union _flagTableFilter_u)arg1;
- (void)toggleDisplay;
- (void)scanRemainingASLForTrace:(id)arg1;
- (void)_setASLObservationToTrace:(id)arg1;
- (void)inspectFlagAction:(id)arg1;
- (void)setFlagController:(id)arg1;
- (void)tableViewColumnDidMove:(id)arg1;
- (void)_processNewSignalFlags:(id)arg1;
- (id)init;
- (void)updateSearchCategoryMenu;
- (void)updateColumnHidingMenu;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRFormulaError : NSObject <NSCoding>
{
    NSString *_error;
    long long _character;
}

@property(readonly, nonatomic) long long character; // @synthesize character=_character;
@property(readonly, retain, nonatomic) NSString *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithErrorString:(id)arg1 character:(long long)arg2;

@end

@interface XRFormulaEvaluator : NSObject <NSCoding>
{
    NSMutableArray *_errors;
    NSString *_templateFilePath;
    NSString *_formulaVariableFilePath;
    NSMutableString *_variableBuffer;
    void *_clangIndex;
    struct CXTranslationUnitImpl *_tu;
    BOOL _clangStructsInitialized;
    CDStruct_a94d320b *_tokenCursors;
    struct {
        void *_field1;
        unsigned int _field2;
    } *_tokenStrings;
    unsigned int _tokenCursorCount;
    CDStruct_a94d320b *_cursorStack;
    struct FormulaEntry *_entryStack;
    int _entryStackCount;
    double *_valueStack;
    NSString *_formulaString;
    NSArray *_allowedVariableNames;
    NSDictionary *_variableNameToIndexMap;
    NSArray *_usedVariableNames;
}

@property(readonly, retain, nonatomic) NSArray *errors; // @synthesize errors=_errors;
@property(readonly, retain, nonatomic) NSArray *usedVariableNames; // @synthesize usedVariableNames=_usedVariableNames;
@property(retain, nonatomic) NSDictionary *variableNameToIndexMap; // @synthesize variableNameToIndexMap=_variableNameToIndexMap;
@property(retain, nonatomic) NSArray *allowedVariableNames; // @synthesize allowedVariableNames=_allowedVariableNames;
- (void).cxx_destruct;
- (BOOL)evaluateFormulaWithVariableValues:(double *)arg1 andVariableCount:(unsigned long long)arg2 forResult:(double *)arg3;
- (BOOL)_prepareToEvaluate;
- (BOOL)setFormulaString:(id)arg1;
@property(readonly, retain, nonatomic) NSString *formulaString; // @synthesize formulaString=_formulaString;
- (BOOL)_prepareFiles;
- (id)errorsAsString;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)_releaseMemoryStructures;
- (id)init;

@end

@interface XRFourStateButton : NSButton
{
    int _part;
    int _state;
    BOOL _sendingAction;
}

+ (void)initialize;
- (BOOL)sendAction:(SEL)arg1 to:(id)arg2;
- (void)setX:(double)arg1 y:(double)arg2;
- (void)setPart:(int)arg1 withState:(int)arg2;
- (id)init;

@end

@interface XRFourStateButtonCell : NSButtonCell
{
}

- (BOOL)isOpaque;

@end

@interface XRFutureImage : NSImage
{
}

- (void)updateWithImageRef:(struct CGImage *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPlaceholderImage:(id)arg1;

@end

@interface XRGraphSequence : NSObject
{
    struct XRGraphPoint *_pointList;
    long long _pointListCount;
    struct XRTimeRange _timeRange;
    unsigned long long _minimumInterval;
    BOOL _isConfirmedEmpty;
}

- (id)description;
- (BOOL)append:(id)arg1;
- (BOOL)combine:(id)arg1;
- (void)replaceWith:(id)arg1;
- (BOOL)intersects:(id)arg1;
- (unsigned long long)minimumInterval;
- (id)endTime;
- (id)startTime;
- (struct XRTimeRange)timeRange;
- (struct XRGraphPoint *)pointBeforeTime:(unsigned long long)arg1;
- (unsigned long long)indexOfPointBeforeTime:(unsigned long long)arg1;
- (struct XRGraphPoint *)lastPoint;
- (struct XRGraphPoint *)firstPoint;
- (long long)pointListCount;
- (struct XRGraphPoint *)pointList;
- (void)dealloc;
- (id)initWithPoints:(struct XRGraphPoint *)arg1 count:(long long)arg2 forTimeRange:(struct XRTimeRange)arg3 minimumInterval:(unsigned long long)arg4;

@end

@interface XRGraphSequenceList : NSObject
{
    NSMutableArray *_sequences;
    XRPathGroup *_pathGroup;
    double _peak;
}

+ (unsigned long long)pointCountInArray:(id)arg1;
@property(retain) XRPathGroup *cachedPathGroup; // @synthesize cachedPathGroup=_pathGroup;
- (unsigned long long)pointCount;
- (id)createMissingSequencesOfType:(Class)arg1 inTimeRange:(struct XRTimeRange)arg2;
- (id)sequencesAfterTime:(unsigned long long)arg1;
- (id)sequencesBeforeTime:(unsigned long long)arg1;
- (id)sequencesInTimeRange:(struct XRTimeRange)arg1;
- (BOOL)appendToRootSequence:(id)arg1 targetSequence:(id)arg2;
- (struct XRTimeRange)purgeSequencesIntersectingRange:(struct XRTimeRange)arg1;
- (void)consolidateSequence:(id)arg1;
- (void)removeSequence:(id)arg1;
- (void)addSequence:(id)arg1;
- (void)clearPathGroupCache;
- (void)dealloc;
- (id)init;

@end

@interface XRHeaderStyleSegmentedCell : NSSegmentedCell
{
    NSTableHeaderCell *_drawCell;
    BOOL _equallySplitSegments;
    BOOL _instantMenus;
}

- (void)_trackSelectedItemMenu;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (BOOL)instantMenus;
- (void)setInstantMenus:(BOOL)arg1;
- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (struct CGRect)_rectForSegment:(long long)arg1 inFrame:(struct CGRect)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (void)dealloc;
- (BOOL)equallySplitSegments;
- (void)setEquallySplitSegments:(BOOL)arg1;

@end

@interface XRHexadecimalFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
- (id)stringForObjectValue:(id)arg1;

@end

@interface XRHighLowBrushImpl : XRBrush
{
}

@end

@interface XRHitComment : NSObject <XRComment>
{
    XRRun *_run;
    XRCodeFragment *_sourceFragment;
    XRCodeFragment *_disasmFragment;
    XRCodeFragment *_myFragment;
    long long _value;
    id _formatter;
    XRCountingArray *_backtraces;
    id <NSObject> _context;
    double _percentage;
    id <CommonSymbol> _symbol;
    int _mergeCount;
}

@property(retain, nonatomic) XRCodeFragment *fragment; // @synthesize fragment=_myFragment;
@property(retain, nonatomic) XRCodeFragment *disasmFragment; // @synthesize disasmFragment=_disasmFragment;
@property(retain, nonatomic) XRCodeFragment *sourceFragment; // @synthesize sourceFragment=_sourceFragment;
- (id)nextSymbols;
- (void)setNaturalDisplayType:(int)arg1;
@property(readonly) double importance;
@property(readonly, nonatomic) NSArray *dataItems;
- (BOOL)isMerged;
- (void)mergeWithComment:(id)arg1;
- (BOOL)canMergeWithComment:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addStatisticsForComment:(id)arg1;
- (id)context;
- (id)backtraces;
- (id)stringWithType:(int)arg1;
- (id)formattedValue;
- (id)formattedPercentage;
- (id)formatValue:(long long)arg1;
- (long long)value;
- (id)run;
- (void)dealloc;
- (id)initComment:(id)arg1 run:(id)arg2 ofFragment:(id)arg3 value:(long long)arg4 formatter:(id)arg5 percentage:(double)arg6 backtraces:(id)arg7 context:(id)arg8 symbol:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRHitCountFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromNumber:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;

@end

@interface XRKDebugEventsRemoteFetch : NSObject
{
}

+ (id)xmlEventsFromDevice:(id)arg1;

@end

@interface XRLCDField : NSView <XRTextPulseAnimationTarget>
{
    NSString *_label;
    NSColor *_color;
    NSDictionary *_attributes;
    NSImage *_freezeDriedContent;
    double _freezeDriedContentAlpha;
}

+ (void)drawString:(id)arg1 inRect:(struct CGRect)arg2 withAttributes:(id)arg3;
- (void)setTextPulseNeedsDisplay;
- (void)textPulseDidEnd;
- (void)setTextPulseAlpha:(double)arg1;
- (void)textPulseWillStart;
- (void)setTextColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setLabel:(id)arg1;
- (void)dealloc;

@end

@interface XRLabeledView : NSBox
{
}

- (void)setTitle:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrameSize:(struct CGSize)arg1;
- (struct CGRect)titleRect;

@end

@interface XRLegacyInstrument : XRInstrument
{
}

@end

@interface XRLocalDevice : XRDevice
{
    NSMutableDictionary *_deathSourcesByPid;
    NSMutableSet *_awaitingActivation;
    NSMapTable *_observedDevicePathsByObserver;
    NSMutableDictionary *_pidToProcessIODictionary;
    XRLocalExpiredPidCache *_expiredPidCache;
    struct AuthorizationOpaqueRef *_traceAuthorization;
    NSObject<OS_dispatch_queue> *_deviceAuthGuard;
    NSMutableDictionary *_taskPorts;
}

+ (id)localDevice;
+ (void)initialize;
- (void).cxx_destruct;
- (id)deviceArchitecture;
- (struct _CSTypeRef)_symbolicatorFromExpiredPidCache:(int)arg1;
- (BOOL)authorize:(int)arg1;
- (unsigned int)taskForPid:(int)arg1;
- (long long)versionForCapability:(id)arg1;
- (void)activateProcess:(id)arg1;
- (void)terminateProcess:(id)arg1;
- (BOOL)resumeProcess:(id)arg1;
- (BOOL)suspendProcess:(id)arg1;
- (int)launchProcess:(id)arg1 error:(id *)arg2;
- (int)_launchDaemonWithDevicePath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4;
- (void)addIOWatcher:(id)arg1 forPid:(int)arg2;
- (BOOL)handlePotentialSUIDProblems:(id)arg1 error:(id *)arg2;
- (void)_processDeathDetected:(int)arg1;
- (void)removeObserver:(id)arg1 forPid:(int)arg2;
- (void)addObserver:(id)arg1 forPid:(int)arg2;
- (void)enableTerminatedPidCaching:(BOOL)arg1;
- (struct _CSTypeRef)createKernelSymbolicator;
- (struct _CSArchitecture)_kernelArchitecture;
- (struct _CSTypeRef)createSymbolicatorForPid:(int)arg1;
- (id)architecturesForPath:(id)arg1;
- (BOOL)executableIsRetricted:(id)arg1 launchOptions:(id)arg2;
- (BOOL)isRunningPid:(int)arg1;
- (id)environmentForPid:(int)arg1;
- (id)execnameForPid:(int)arg1;
- (id)userForUID:(id)arg1;
- (void)_appDidLaunch:(id)arg1;
- (id)runningProcesses;
- (id)fileSystem;
- (void)sendInput:(id)arg1 toPid:(int)arg2;
- (BOOL)supportsKernelBacktracing;
- (BOOL)supportsStandardInput;
- (void)removeFilesystemObserver:(id)arg1;
- (void)addFilesystemObserver:(id)arg1 forPaths:(id)arg2;
- (id)buildVersion;
- (id)productType;
- (id)displayNameForNetworkInterface:(id)arg1;
- (id)cpuDescription;
- (int)speedOfCpus;
- (int)numberOfCpus;
- (int)numberOfPhysicalCpus;
- (BOOL)isOnLine;
- (BOOL)isLocal;
- (id)initWithTemplateData:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

@interface XRLocalDeviceProcessReaper : NSObject <XRProcessObserver>
{
    int _targetPid;
    int _exitStatus;
    XRLocalDevice *_localDevice;
}

+ (id)reaperForPid:(int)arg1 localDevice:(id)arg2;
- (void).cxx_destruct;
- (void)processDeathDetectedForPid:(int)arg1;
- (int)exitStatus;
- (void)reapProcess;
- (void)dealloc;
- (id)initWithPid:(int)arg1 localDevice:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRLocalExpiredPidCache : NSObject
{
    struct _XRLocalExpiredPidCacheState _state;
    NSObject<OS_dispatch_queue> *_stateQueue;
}

- (void)dealloc;
- (void)setSymbolicator:(struct _CSTypeRef)arg1 forNewPid:(int)arg2;
- (struct _CSTypeRef)symbolicatorForPid:(int)arg1;
- (void)disableTracking;
- (void)enableTracking:(struct AuthorizationOpaqueRef *)arg1;
- (id)init;

@end

@interface XRLocalFileSystem : XRAbstractFileSystem
{
}

- (id)faultImageForEntry:(id)arg1;
- (id)faultChildrenForEntry:(id)arg1;

@end

@interface XRLogEvent : NSObject <NSCoding>
{
    NSString *_logMessage;
    int _type;
    NSString *_deviceUUID;
    int _pid;
    unsigned long long _nanoTimestamp;
    unsigned long long _linesInMessage;
}

+ (void)initialize;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)linesInMessage;
- (unsigned long long)timestamp;
- (int)pid;
- (int)type;
- (id)logMessage;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initLogEvent:(id)arg1 type:(int)arg2 pid:(int)arg3 timestamp:(unsigned long long)arg4;

@end

@interface XRManagedObjectList : NSObject <NSCoding>
{
    NSMutableArray *_objects;
    id <NSObject><NSCoding> _selectedObject;
}

- (void)removeObject:(id)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addNextSelectedObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objects;
- (id)subarrayWithRange:(struct _NSRange)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfSelectedObject;
- (void)selectObjectAtIndex:(unsigned long long)arg1;
- (void)setSelectedObject:(id)arg1;
- (id)selectedObject;
- (id)lastObject;
- (id)firstObject;
- (long long)count;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRMenuItem : NSMenuItem
{
}

- (void)_xr_refreshImageNotification:(id)arg1;
- (void)setImage:(id)arg1;
- (void)dealloc;

@end

@interface XRMobileFlagUtilities : NSObject
{
}

+ (void)addAppStateChangeFlagAtTime:(unsigned long long)arg1 forDeviceID:(id)arg2 stateDescription:(id)arg3 appName:(id)arg4 execName:(id)arg5 pid:(long long)arg6 trace:(id)arg7 runNumber:(long long)arg8;

@end

@interface XRMonitoredLaunchPanel : NSAlert
{
}

+ (id)monitoredLaunchPanelWithProcess:(id)arg1;
- (void)completeWithAction:(CDUnknownBlockType)arg1;
- (id)initWithProcess:(id)arg1;

@end

@interface XRMultiProcessBacktraceRepository : XRBacktraceRepository <XRCallTreeDataSource>
{
    struct __CFDictionary *_repositoryForPid;
    NSMutableDictionary *_repositoryForProcessName;
    NSMutableDictionary *_repositoryForCategory;
    NSObject<OS_dispatch_queue> *_repositoryForProcQueue;
    XRBacktraceRepository *_activeRepository;
    BOOL _activeRepositoryIsFake;
    NSMutableDictionary *_unappliedSettings;
    NSPredicate *_processPredicate;
    unsigned long long _preservedIndex;
    XRBacktraceAggregator *_dataSourceAggregation;
    unsigned long long _cacheIndex;
    unsigned long long _cacheUpIndex;
    XRBacktraceAggregator *_cacheAggregation;
    BOOL _avoidSetterRecursion;
    NSDictionary *_freezeDriedSignatures;
    BOOL _disallowFaultingNewSymbolStores;
}

- (void)storeSample:(id)arg1 forCategory:(id)arg2 excludeFromDefaultCategory:(BOOL)arg3 needsSymbolication:(BOOL)arg4;
- (void)storeBacktrace:(id)arg1 forCategory:(id)arg2 excludeFromDefaultCategory:(BOOL)arg3 weight:(double)arg4 timestamp:(unsigned long long)arg5 eventType:(unsigned int)arg6 thread:(unsigned int)arg7 extendedData:(id)arg8 needsSymbolication:(BOOL)arg9;
- (id)interestingSymbolInBacktrace:(id)arg1;
- (id)hottestSymbolInBacktrace:(id)arg1;
- (id)threadNameForThread:(unsigned long long)arg1 pid:(int)arg2;
- (id)threadNameForThreadId:(unsigned long long)arg1 backtrace:(id)arg2;
- (id)symbolsForBacktrace:(id)arg1 reverseOrder:(BOOL)arg2;
- (void)resymbolicate:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setContainedCategoryTokens:(id)arg1 matchesAny:(BOOL)arg2;
- (BOOL)showObjCOnly;
- (void)setShowObjCOnly:(BOOL)arg1;
- (void)_modifyLibraryTrimming:(id)arg1 option:(int)arg2;
- (void)_modifySymbolTrimming:(id)arg1 option:(int)arg2;
- (void)pruneByRequiringLibraryNameTokens:(id)arg1 requireAny:(BOOL)arg2;
- (BOOL)shouldDisplayActionInOutlineView:(id)arg1 forItem:(id)arg2;
- (void)pruneByRequiringSymbolNameTokens:(id)arg1 requireAny:(BOOL)arg2;
- (void)setSymbolicationTiming:(int)arg1;
- (void)setSeparateByCategory:(BOOL)arg1;
- (void)setShowCategoryAsLeaf:(BOOL)arg1;
- (void)setTimeRangeFilter:(struct XRTimeRange)arg1;
- (id)nameForPid:(int)arg1;
- (void)_setOverrideRepository:(id)arg1;
- (void)setCallTreeDataSource:(id)arg1;
- (id)concatenatedSymbolNamesForBacktrace:(id)arg1;
- (void)setNeedsForceReloadData:(BOOL)arg1;
- (void)_setTrackedTreeData:(id)arg1;
- (id)_newTreeRoot;
- (void)_enumerateRepositoryByPid:(CDUnknownBlockType)arg1;
- (void)_faultRepositoryForCategoryName:(id)arg1 pidRepo:(id)arg2;
- (id)backtracesForCategory:(id)arg1 timeRange:(struct XRTimeRange)arg2 savedIndex:(unsigned long long *)arg3;
- (id)provideCategories;
- (void)setFocusNode:(id)arg1;
- (void)_resetFocus;
- (void)learnSymbolicInformationForBacktrace:(id)arg1;
- (void)_setFocusObject:(id)arg1 forKey:(id)arg2 andNotifyUpdate:(BOOL)arg3;
- (void)applyFocusInformation:(id)arg1;
- (void)_updateDataSourceAggregation;
- (void)_clearDataSourceAggregation;
- (id)focusTitle;
- (id)focusInformation;
- (void)setContainedProcessTokens:(id)arg1 matchesAny:(BOOL)arg2;
- (struct __CFData *)kernelSignature;
- (struct __CFData *)signatureForPid:(int)arg1;
- (id)allRepositories;
- (void)addRepository:(id)arg1 forPid:(int)arg2;
- (id)repositoryForPid:(int)arg1;
- (void)_setActiveRepository:(id)arg1 isFake:(BOOL)arg2;
- (void)_setActiveRepository:(id)arg1;
- (void)_enumerateRepositoriesAllowingCallouts:(BOOL)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_setRepository:(id)arg1 forPid:(int)arg2 name:(id)arg3;
- (id)_anyRepository;
- (id)_repositoryForName:(id)arg1;
- (id)_repositoryForPid:(int)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDevice:(id)arg1 signatures:(id)arg2;
- (void)_commonRepositoryInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRMutableArrayRawCoder : NSObject
{
    NSCoder *_involvedCoder;
    long long _containedObjectVersion;
    struct DataRepresentationSubstitutions *_substitutions;
    NSMutableDictionary *_encodingHeader;
    Class _primaryClass;
    Class _secondaryClass;
    BOOL _shouldByteSwap;
    BOOL _secondaryFlag;
    unsigned int _maxEncodingSize;
    CDUnknownBlockType _primaryAllocatorBlock;
}

+ (int)currentEnvironment;
+ (void)initialize;
- (id *)decodeObjectsWithReturnedCount:(unsigned long long *)arg1;
- (id)decodeMutableArray;
- (void)encodeObjects:(id *)arg1 count:(unsigned long long)arg2;
- (void)encodeMutableArray:(id)arg1;
- (char *)decodeBlobWithReturnedObjectCount:(unsigned long long *)arg1 returnedLength:(unsigned long long *)arg2;
- (void)encodeBlob:(char *)arg1 withLength:(unsigned long long)arg2 objectCount:(unsigned long long)arg3 objectClass:(Class)arg4;
- (void)dealloc;
- (void)setCustomAllocatorForPrimaryClass:(CDUnknownBlockType)arg1;
- (id)initUsingCoder:(id)arg1 maxObjectEncodingSize:(unsigned int)arg2 primaryClass:(Class)arg3 secondaryClass:(Class)arg4;
- (id)initUsingCoder:(id)arg1;

@end

@interface XRNamedRange : NSObject <NSCoding, NSCopying>
{
    unsigned long long _start;
    unsigned long long _length;
    NSString *_name;
}

+ (void)initialize;
- (struct XRTimeRange)timeRange;
- (struct _CSRange)csRange;
- (id)name;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithStart:(unsigned long long)arg1 length:(unsigned long long)arg2 name:(id)arg3;

@end

@interface XRNanoTimestampFormatter : NSNumberFormatter
{
}

+ (id)tooltip;
+ (id)stringForNanoseconds:(unsigned long long)arg1;
- (id)stringForObjectValue:(id)arg1;

@end

@interface XRObserverBox : NSView
{
    NSView *_xAxisSibling;
}

- (void)setFrameSize:(struct CGSize)arg1;
- (void)didAddSubview:(id)arg1;
- (void)layoutViews;
- (void)_splitViewChangedFrame:(id)arg1;
- (void)awakeFromNib;
- (void)viewDidMoveToWindow;

@end

@interface XRPMDevice : NSObject
{
    NSString *_name;
    NSMutableArray *_events;
    NSMutableDictionary *_eventsByCounter;
    NSMutableDictionary *_allEventsForDeviceByMnemonicDict;
    NSMutableDictionary *_allEventsForDeviceByAliasOrMnemonicDict;
    NSMutableDictionary *_counterArrayCache;
}

@property(retain, nonatomic) NSArray *events; // @synthesize events=_events;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)allAliasesAndMnemonics;
- (id)eventFromAliasOrMnemonic:(id)arg1;
- (id)eventFromMnemonic:(id)arg1;
- (id)initWithName:(id)arg1;

@end

@interface XRPMEvent : NSObject
{
    DTPerfMonEvent *_dtPerfMonEvent;
    NSNumber *_threshold;
    NSArray *_counterNameArray;
}

@property(retain, nonatomic) NSArray *counterNameArray; // @synthesize counterNameArray=_counterNameArray;
@property(retain, nonatomic) NSNumber *threshold; // @synthesize threshold=_threshold;
- (void).cxx_destruct;
- (long long)compare:(id)arg1 usingSortDescriptors:(id)arg2;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *aliasOrMnemonic;
@property(readonly, retain, nonatomic) NSString *alias;
@property(readonly, retain, nonatomic) NSString *mnemonic;
@property(readonly, retain, nonatomic) NSString *explanation;
- (id)initWithMnemonic:(id)arg1 alias:(id)arg2;
- (id)initWithDTEvent:(id)arg1;

@end

@interface XRPMFormula : NSObject <NSCoding>
{
    NSString *_name;
    NSString *_formulaString;
}

@property(retain, nonatomic) NSString *formulaString; // @synthesize formulaString=_formulaString;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 formulaString:(id)arg2;

@end

@interface XRPathGroup : NSObject
{
    struct __CFDictionary *_statePathMap;
    double _peak;
}

- (void)transformUsingAffineTransform:(id)arg1;
- (double)peak;
- (BOOL)hasPaths;
- (id)subPaths;
- (id)path;
- (id)pathForState:(unsigned long long)arg1 pathType:(unsigned long long)arg2;
- (void)closePath;
- (void)closePathForState:(unsigned long long)arg1 pathType:(unsigned long long)arg2;
- (void)_closePathForState:(long long)arg1 pathType:(unsigned long long)arg2;
- (void)addPathElement:(struct CGPoint)arg1 disconnect:(BOOL)arg2;
- (void)addPathElement:(struct CGRect)arg1;
- (void)addPathElement:(struct CGPoint)arg1 forState:(unsigned long long)arg2 pathType:(unsigned long long)arg3 disconnect:(BOOL)arg4;
- (void)_addPathElement:(struct CGPoint)arg1 forState:(long long)arg2 pathType:(unsigned long long)arg3 disconnect:(BOOL)arg4;
- (void)addPathElement:(struct CGRect)arg1 forState:(unsigned long long)arg2 pathType:(unsigned long long)arg3;
- (void)_addPathElement:(struct CGRect)arg1 forState:(long long)arg2 pathType:(unsigned long long)arg3;
- (long long)_hashForState:(long long)arg1 pathType:(unsigned long long)arg2;
- (void)dealloc;
- (id)init;

@end

@interface XRPeakBrushImpl : XRPointBrushImpl
{
}

- (void)run:(id)arg1 datasource:(id)arg2 applyStyleToPath:(id)arg3 graphAtIndex:(long long)arg4;
- (void)run:(id)arg1 datasource:(id)arg2 renderPath:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleForGraphAtIndex:(long long)arg3;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRPercentageFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringForNumberValue:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringForNumberValue:(id)arg1;

@end

@interface XRPosixFilePermissionsFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)stringForNumberValue:(id)arg1;

@end

@interface XRPosixOpenModeFormatter : NSFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)stringForNumberValue:(id)arg1;

@end

@interface XRProcessAndSymbolOwnerListModel : XRHierarchicalModel
{
}

+ (id)pathToSystemSymbolOwnerAtIndex:(long long)arg1 processIndex:(long long)arg2;
+ (id)pathToUserSymbolOwnerAtIndex:(long long)arg1 processIndex:(long long)arg2;
+ (id)pathToErrorForProcessIndex:(long long)arg1;
+ (id)pathToSystemFrameworkCategoryForProcessIndex:(long long)arg1;
+ (BOOL)isSystemSymbolOwnerPath:(id)arg1;
+ (BOOL)isUserSymbolOwnerPath:(id)arg1;
+ (BOOL)isSymbolOwnerPath:(id)arg1;
+ (BOOL)isErrorPath:(id)arg1;
+ (BOOL)isSystemFrameworkCategoryPath:(id)arg1;
+ (BOOL)isProcessPath:(id)arg1;
- (void)sortByProcessNameAndPID;
- (id)processes;
- (void)setSystemCategoryElement:(id)arg1 andErrorElement:(id)arg2 underProcessIndex:(long long)arg3;
- (long long)addSymbolOwner:(id)arg1 underProcessIndex:(long long)arg2;
- (long long)addProcess:(id)arg1;
- (id)systemSymbolOwnersOfProcessAtIndex:(long long)arg1 withAttributes:(id)arg2;
- (id)userSymbolOwnersOfProcessAtIndex:(long long)arg1 withAttributes:(id)arg2;
- (id)symbolOwnersOfProcessAtIndex:(long long)arg1 withAttributes:(id)arg2;
- (id)systemSymbolOwnersOfProcessAtIndex:(long long)arg1;
- (id)userSymbolOwnersOfProcessAtIndex:(long long)arg1;
- (id)symbolOwnersOfProcessAtIndex:(long long)arg1;
- (id)systemSymbolOwnersOfProcessAtIndexPath:(id)arg1;
- (id)userSymbolOwnersOfProcessAtIndexPath:(id)arg1;
- (id)symbolOwnersOfProcessAtIndexPath:(id)arg1;
- (id)_symbolOwnersAtProcessIndex:(long long)arg1 userSymbols:(BOOL)arg2 passingTest:(CDUnknownBlockType)arg3;
- (id)symbolOwnerPathsPassingTest:(CDUnknownBlockType)arg1;
- (long long)numberOfUniqueSymbolOwnersWithAttribute:(int)arg1;
- (BOOL)containsSymbolOwnerWithAttribute:(int)arg1;

@end

@interface XRProcessChooserMenu : XRChooserMenu <XRProcessTargetedObject>
{
    NSMutableDictionary *_shouldExpandByGroupName;
    BOOL _showCurrentSelectionGroup;
    BOOL _showAppExtensions;
    BOOL _showNonUIApps;
    BOOL _showRestrictedApps;
    NSString *_allProcessesTitle;
}

@property(copy, nonatomic) NSString *allProcessesTitle; // @synthesize allProcessesTitle=_allProcessesTitle;
@property(nonatomic) BOOL showRestrictedApps; // @synthesize showRestrictedApps=_showRestrictedApps;
@property(nonatomic) BOOL showNonUIApps; // @synthesize showNonUIApps=_showNonUIApps;
@property(nonatomic) BOOL showAppExtensions; // @synthesize showAppExtensions=_showAppExtensions;
@property(nonatomic) BOOL showCurrentSelectionGroup; // @synthesize showCurrentSelectionGroup=_showCurrentSelectionGroup;
- (void).cxx_destruct;
- (int)defaultTargetTypeForChooser;
- (id)currentTargetDevice;
- (id)currentTargetProcess;
- (BOOL)supportsTargetType:(int)arg1;
- (void)setTargetsLaunchedProcess:(id)arg1;
- (void)setTargetsExistingProcess:(id)arg1;
- (void)setTargetsDevice:(id)arg1;
- (void)setTargetsAllProcesses;
- (void)__bogusEnabled:(id)arg1;
- (void)_choosePid:(id)arg1;
- (void)_clearMenu:(id)arg1;
- (void)_choosePreviousExecutable:(id)arg1;
- (void)_editActiveTarget:(id)arg1;
- (void)_chooseExecutable:(id)arg1;
- (void)_chooseAll:(id)arg1;
- (void)notifyParentMenu;
- (BOOL)validateMenuItem:(id)arg1;
- (void)_rebuildItems:(CDUnknownBlockType)arg1;
- (long long)indexOfItemWithRepresentedObject:(id)arg1;
- (void)rebuildMenu;
- (void)_addItemGroup:(id)arg1 withTitle:(id)arg2 block:(CDUnknownBlockType)arg3;
- (id)_itemForProcess:(id)arg1 alternate:(BOOL)arg2;
- (void)menuDidClose:(id)arg1;
- (void)_setShouldExpand:(BOOL)arg1 forGroupName:(id)arg2;
- (BOOL)_shouldExpand:(id)arg1;
- (id)initWithDevice:(id)arg1 process:(id)arg2 targetedObject:(id)arg3 controlSize:(unsigned long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRProcessIOWatcher : NSObject
{
    NSString *_lastIncompleteSegment;
    BOOL _invalidated;
    int _pid;
    XRDevice *_device;
}

@property(readonly, nonatomic) XRDevice *device; // @synthesize device=_device;
@property(readonly) int pid; // @synthesize pid=_pid;
- (void)_postMessages:(id)arg1 asEventType:(int)arg2;
- (BOOL)_processData:(id)arg1;
- (BOOL)isInvalid;
- (void)invalidate;
- (void)dealloc;
- (id)initForPid:(int)arg1 fromDevice:(id)arg2;

@end

@interface XRProcessIOWatcherFD : XRProcessIOWatcher
{
    NSFileHandle *_stdoutHandle;
    NSFileHandle *_stdinHandle;
}

- (void)writeInput:(id)arg1;
- (void)_readStdio:(id)arg1;
- (void)invalidate;
- (void)dealloc;
- (id)initForPid:(int)arg1 fromDevice:(id)arg2 stdoutFD:(int)arg3 stdinFD:(int)arg4;

@end

@interface XRProcessIOWatcherPath : XRProcessIOWatcher <XRFileObserver>
{
    NSString *_stdoutFilePath;
    BOOL _removeWhenDone;
    NSObject<OS_dispatch_queue> *_backgroundQueue;
    NSFileHandle *_stdoutHandle;
    long long _curFileOffset;
    NSObject<OS_dispatch_semaphore> *_lock;
    BOOL _queryActive;
}

@property(nonatomic) BOOL queryActive; // @synthesize queryActive=_queryActive;
- (void)rescanPath:(id)arg1;
- (void)_readFile;
- (void)invalidate;
- (void)dealloc;
- (id)initForPid:(int)arg1 fromDevice:(id)arg2 stdoutPath:(id)arg3 removeWhenDone:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRRatioCell : NSCell
{
    NSArray *_colors;
    CDUnknownBlockType _colorProvider;
}

+ (id)ratioCellWithColors:(id)arg1;
+ (id)ratioCell;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (BOOL)isOpaque;
- (id)_colorForFractionAtIndex:(unsigned int)arg1;
- (void)setColorProvider:(CDUnknownBlockType)arg1;
- (void)setColors:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface XRRatioObject : NSObject <NSCopying>
{
    long long _total;
    long long *_values;
    unsigned int _count;
    long long _scale;
}

@property(readonly, nonatomic) long long denominator; // @synthesize denominator=_scale;
@property(readonly, nonatomic) long long total; // @synthesize total=_total;
@property(readonly, nonatomic) unsigned int count; // @synthesize count=_count;
- (id)description;
- (double)fractionAtIndex:(unsigned int)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithValues:(long long *)arg1 count:(unsigned int)arg2 denominator:(long long)arg3;

@end

@interface XRRawBacktrace : NSObject <CommonRawStack>
{
    unsigned long long *_frames;
    unsigned int _count;
    int _pid;
    unsigned long long _hash;
}

- (BOOL)backtraceIsEqual:(id)arg1;
- (unsigned long long)backtraceHash;
- (int)pid;
- (long long)kernelFrameCount;
- (long long)count;
- (unsigned long long *)frames;
- (id)initWithDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 version:(long long)arg4 substitutions:(struct DataRepresentationSubstitutions *)arg5;
- (void)addToDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 substitutions:(struct DataRepresentationSubstitutions *)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setFrames:(unsigned long long *)arg1 count:(unsigned int)arg2;
- (void)dealloc;
- (id)initWithFrames:(unsigned long long *)arg1 count:(long long)arg2 pid:(int)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRRawKernelUserBacktrace : XRRawBacktrace
{
    long long _kernelFrameCount;
}

+ (void)initialize;
- (long long)kernelFrameCount;
- (id)initWithDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 version:(long long)arg4 substitutions:(struct DataRepresentationSubstitutions *)arg5;
- (void)addToDataStream:(char *)arg1 position:(unsigned long long *)arg2 max:(unsigned long long)arg3 substitutions:(struct DataRepresentationSubstitutions *)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setFrames:(unsigned long long *)arg1 kernelCount:(unsigned int)arg2 userCount:(unsigned int)arg3;
- (id)initWithKernelFrames:(unsigned long long *)arg1 kernelFrameCount:(long long)arg2 userFrames:(unsigned long long *)arg3 userFrameCount:(long long)arg4 pid:(int)arg5;

@end

@interface XRRecordControl : NSView
{
    XRFourStateButton *_pauseButton;
    XRFourStateButton *_recordButton;
    XRFourStateButton *_loopButton;
}

@property(retain) XRFourStateButton *pauseButton; // @synthesize pauseButton=_pauseButton;
@property(retain) XRFourStateButton *loopButton; // @synthesize loopButton=_loopButton;
@property(retain) XRFourStateButton *recordButton; // @synthesize recordButton=_recordButton;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRRecordModeOptions : NSObject <NSCoding, NSCopying>
{
    int _recordMode;
    unsigned long long _recordModeMask;
    double _startDelay;
    double _timeLimit;
    double _windowLimit;
    unsigned long long _sampleLimit;
    BOOL _supportsStartDelay;
    BOOL _supportsTimeLimit;
    BOOL _supportsSampleLimit;
    BOOL _supportsWindowed;
    BOOL _startDelayed;
    BOOL _windowed;
    BOOL _timeLimited;
    BOOL _sampleLimited;
}

@property(readonly) unsigned long long recordModeMask; // @synthesize recordModeMask=_recordModeMask;
@property BOOL supportsSampleLimit; // @synthesize supportsSampleLimit=_supportsSampleLimit;
@property BOOL supportsTimeLimit; // @synthesize supportsTimeLimit=_supportsTimeLimit;
@property BOOL supportsStartDelay; // @synthesize supportsStartDelay=_supportsStartDelay;
@property BOOL supportsWindowed; // @synthesize supportsWindowed=_supportsWindowed;
@property double unrealizedWindowLimit; // @synthesize unrealizedWindowLimit=_windowLimit;
@property unsigned long long unrealizedSampleLimit; // @synthesize unrealizedSampleLimit=_sampleLimit;
@property double unrealizedTimeLimit; // @synthesize unrealizedTimeLimit=_timeLimit;
@property double unrealizedStartDelay; // @synthesize unrealizedStartDelay=_startDelay;
@property BOOL startDelayed; // @synthesize startDelayed=_startDelayed;
@property BOOL timeLimited; // @synthesize timeLimited=_timeLimited;
@property BOOL sampleLimited; // @synthesize sampleLimited=_sampleLimited;
@property BOOL windowed; // @synthesize windowed=_windowed;
@property(readonly) unsigned long long sampleLimit;
@property(readonly) double windowLimit;
@property(readonly) double timeLimit;
@property(readonly) double startDelay;
- (int)recordMode;
- (void)setRecordMode:(int)arg1;
- (void)mergeWithRecordOptions:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setDataDictionary:(id)arg1;
- (id)dataDictionary;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithRecordMask:(unsigned long long)arg1;

@end

@interface XRRefCountFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromNumber:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;

@end

@interface XRRemoteDevice : XRDevice <XRRemoteDeviceAuthorizedAPI, DTProcessControlObserver>
{
    struct __CFDictionary *_activeSymbolicators;
    struct _CSTypeRef _kernelSymbolicator;
    NSObject<OS_dispatch_queue> *_activeSymbolicatorQueue;
    NSObject<OS_dispatch_semaphore> *_outstandingAppRequest;
    NSMutableDictionary *_userIdMap;
    NSMutableArray *_pidsLaunchedPosixStyle;
    NSDictionary *_hardwareInfo;
    NSDictionary *_networkInterfaceInfo;
    NSMutableDictionary *_procIconMap;
    int _memoryConstraint;
    BOOL _supportsDTProcessControlServiceDictionaries;
    DTXChannel *_deviceInfoService;
    DTXChannel *_launchDaemonService;
    DTXChannel *_xpcLauncherService;
    DTXChannel *_defaultProcessControlChannel;
    DTXChannel *_posixProcessControlChannel;
    DTXChannel *_notificationsChannel;
    DTXChannel *_applicationChannel;
}

+ (void)initialize;
@property(retain) DTXChannel *applicationChannel; // @synthesize applicationChannel=_applicationChannel;
@property(retain) DTXChannel *notificationsChannel; // @synthesize notificationsChannel=_notificationsChannel;
@property(retain) DTXChannel *posixProcessControlChannel; // @synthesize posixProcessControlChannel=_posixProcessControlChannel;
@property(retain) DTXChannel *defaultProcessControlChannel; // @synthesize defaultProcessControlChannel=_defaultProcessControlChannel;
@property(retain) DTXChannel *xpcLauncherService; // @synthesize xpcLauncherService=_xpcLauncherService;
@property(retain) DTXChannel *launchDaemonService; // @synthesize launchDaemonService=_launchDaemonService;
@property(retain) DTXChannel *deviceInfoService; // @synthesize deviceInfoService=_deviceInfoService;
- (void).cxx_destruct;
- (void)simulateMemoryWarning:(id)arg1;
- (id)targetControlDataElementsForProcess:(id)arg1;
- (id)launchControlDataElementsForProcess:(id)arg1;
- (void)outputReceived:(id)arg1 fromProcess:(int)arg2 atTime:(unsigned long long)arg3;
- (void)memoryLevelNotification:(id)arg1;
- (void)applicationStateNotification:(id)arg1;
- (unsigned long long)_traceRelativeTimestampForNotification:(id)arg1 inTrace:(id)arg2;
- (void)setMemoryConstraint:(int)arg1;
- (int)memoryConstraint;
- (id)_copyDTPerfMonDevice;
- (id)_copyDTPerfMonDevice:(BOOL)arg1;
- (struct _CPEventSet *)_copySupportedKDebugEvents;
- (struct _CPEventSet *)_copySupportedKDebugEvents:(BOOL)arg1;
- (id)displayNameForNetworkInterface:(id)arg1;
- (BOOL)supportsDeviceIO;
- (BOOL)daemonsSupported;
- (id)cpuDescription;
- (id)deviceArchitecture;
- (int)speedOfCpus;
- (int)numberOfPhysicalCpus;
- (int)numberOfCpus;
- (void)activateProcess:(id)arg1;
- (BOOL)resumeProcess:(id)arg1;
- (BOOL)suspendProcess:(id)arg1;
- (void)terminateProcess:(id)arg1;
- (int)launchProcess:(id)arg1 error:(id *)arg2;
- (void)pidDiedCallback:(id)arg1;
- (void)removeObserver:(id)arg1 forPid:(int)arg2;
- (void)addObserver:(id)arg1 forPid:(int)arg2;
- (BOOL)allowsChoosingExecutable;
- (void)dyldNotificationReceived:(id)arg1;
- (struct _CSTypeRef)createKernelSymbolicator;
- (BOOL)supportsKernelBacktracing;
- (struct _CSTypeRef)createSymbolicatorForPid:(int)arg1;
- (struct __CFSet *)_symbolicatorSetForPid:(int)arg1;
- (BOOL)executableIsRetricted:(id)arg1 launchOptions:(id)arg2;
- (BOOL)isRunningPid:(int)arg1;
- (id)execnameForPid:(int)arg1;
- (BOOL)currentDeviceTime:(struct _XRDeviceTimeInfo *)arg1;
- (id)userForUID:(id)arg1;
- (id)iconForAppPath:(id)arg1 executableName:(id)arg2;
- (void)_cacheFill:(id)arg1 executableName:(id)arg2 image:(id)arg3;
- (id)runningProcesses;
- (id)defaultAppIcon;
- (BOOL)updateInstalledExecutables;
- (id)fileSystem;
- (id)processControlServiceForPid:(int)arg1;
- (void)teardownConnection;
- (long long)processControlServiceVersion;
- (long long)deviceInfoVersion;
- (void)prepareConnection:(id)arg1;
- (id)initWithTemplateData:(id)arg1;
- (id)templateData;
- (BOOL)supportsProcessControlEventDictionaries;
- (void)preflightDevice;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRRemoteFileSystem : XRAbstractFileSystem
{
    XRRemoteDevice *_device;
    DTXChannel *_channel;
}

- (void).cxx_destruct;
- (id)faultImageForEntry:(id)arg1;
- (id)faultChildrenForEntry:(id)arg1;
- (id)initWithDevice:(id)arg1;

@end

@interface XRRulerTimeFormatter : NSNumberFormatter
{
    BOOL _fixedPrecision;
    double _unitsToMinutes;
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromNumber:(id)arg1;
+ (id)stringForDouble:(double)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;
- (void)setFixedPrecision:(BOOL)arg1;
- (id)init;
- (id)initWithUnits:(id)arg1;

@end

@interface XRRunListData : NSObject <NSCoding>
{
    NSMutableArray *_runNumbers;
    NSMutableDictionary *_runData;
    NSMutableArray *_inMemoryProcessCache;
}

+ (void)initialize;
- (struct CGRect)rectOfProperty:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (void)setRect:(struct CGRect)arg1 ofProperty:(id)arg2 forRunNumber:(unsigned long long)arg3;
- (double)heightOfItem:(id)arg1 withDefaultHeight:(double)arg2 forRunNumber:(unsigned long long)arg3;
- (void)setHeight:(double)arg1 ofItem:(id)arg2 forRunNumber:(unsigned long long)arg3;
- (unsigned long long)threadIDForSerialNumber:(unsigned int)arg1 forRunNumber:(unsigned long long)arg2;
- (unsigned int)threadSerialNumberForID:(unsigned long long)arg1 forRunNumber:(unsigned long long)arg2;
- (id)processWithPid:(int)arg1 forRunNumber:(unsigned long long)arg2;
- (id)processDataWithPid:(int)arg1 forRunNumber:(unsigned long long)arg2;
- (id)processDatasForRunNumber:(unsigned long long)arg1;
- (void)addProcess:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)logEventsForRunNumber:(unsigned long long)arg1;
- (void)addProcessLogEvents:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)recordModeOptionsForRunNumber:(unsigned long long)arg1;
- (void)addRecordModeOptions:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)flagListForRunNumber:(unsigned long long)arg1;
- (void)removeFlag:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (void)addFlag:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)startStringForRunNumber:(unsigned long long)arg1;
- (id)startDateForRunNumber:(unsigned long long)arg1;
- (unsigned long long)startTimeForRunNumber:(unsigned long long)arg1;
- (void)addStartTime:(unsigned long long)arg1 forRunNumber:(unsigned long long)arg2;
- (BOOL)hasRunningTimeForRunNumber:(unsigned long long)arg1;
- (unsigned long long)runningTimeForRunNumber:(unsigned long long)arg1;
- (void)addRunningTime:(unsigned long long)arg1 forRunNumber:(unsigned long long)arg2;
- (id)stringArchitectureForRunNumber:(unsigned long long)arg1;
- (id)architectureForRunNumber:(unsigned long long)arg1;
- (void)addArchitectureData:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)stringOSVersionInfoForRunNumber:(unsigned long long)arg1;
- (id)osVersionForRunNumber:(unsigned long long)arg1;
- (void)addOSVersionData:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)allCoresDataForRunNumber:(unsigned long long)arg1;
- (void)addAllCoresData:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (int)numberOfCpusDataForRunNumber:(unsigned long long)arg1;
- (void)addNumberOfCpusData:(int)arg1 forRunNumber:(unsigned long long)arg2;
- (id)targetDataForRunNumber:(unsigned long long)arg1;
- (void)addTargetData:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)commentForRunNumber:(unsigned long long)arg1;
- (void)addComment:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)iconNamed:(id)arg1 fullSize:(BOOL)arg2;
- (void)addIcon:(id)arg1 name:(id)arg2 fullSize:(BOOL)arg3;
- (id)dataForRunNumber:(unsigned long long)arg1;
- (id)dataForAllRuns;
- (id)runData;
- (id)runNumbers;
- (unsigned long long)runNumberForIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfRunNumber:(unsigned long long)arg1;
- (void)removeRunNumber:(unsigned long long)arg1;
- (void)addRunNumber:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRRunningBlockBrushImpl : XRFilledLineBrushImpl
{
}

- (void)preparePathForRendering:(id)arg1;
- (void)run:(id)arg1 datasource:(id)arg2 renderPath:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRRunningStateBrushImpl : XRPointBrushImpl
{
}

+ (SEL)selectorForPathType:(id)arg1;
- (int)trackMarkerPosition;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleToPath:(id)arg3 withState:(unsigned long long)arg4 pathType:(unsigned long long)arg5 scale:(struct CGSize)arg6 graphAtIndex:(long long)arg7;
- (void)renderLinePointsPath:(unsigned long long)arg1 pathType:(unsigned long long)arg2 run:(id)arg3 datasource:(id)arg4 withPath:(id)arg5 sequences:(id)arg6 scale:(struct CGSize)arg7 graphAtIndex:(long long)arg8;
- (void)renderRectPointsPath:(unsigned long long)arg1 pathType:(unsigned long long)arg2 run:(id)arg3 datasource:(id)arg4 withPath:(id)arg5 sequences:(id)arg6 scale:(struct CGSize)arg7 graphAtIndex:(long long)arg8;
- (void)renderLinePath:(unsigned long long)arg1 pathType:(unsigned long long)arg2 run:(id)arg3 datasource:(id)arg4 withPath:(id)arg5 sequences:(id)arg6 scale:(struct CGSize)arg7 graphAtIndex:(long long)arg8;
- (void)renderPointPath:(unsigned long long)arg1 pathType:(unsigned long long)arg2 run:(id)arg3 datasource:(id)arg4 withPath:(id)arg5 sequences:(id)arg6 scale:(struct CGSize)arg7 graphAtIndex:(long long)arg8;
- (void)renderRectPath:(unsigned long long)arg1 pathType:(unsigned long long)arg2 run:(id)arg3 datasource:(id)arg4 withPath:(id)arg5 sequences:(id)arg6 scale:(struct CGSize)arg7 graphAtIndex:(long long)arg8;
- (void)run:(id)arg1 datasource:(id)arg2 renderPathGroup:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRSampleEvent : NSObject <CommonTimeSample>
{
    unsigned long long _timestamp;
    unsigned int _eventType;
    int _quantity;
    unsigned long long _thread;
    id <CommonRawStack> _backtrace;
    id _extendedData;
    unsigned long long _weightCount;
    union {
        double scalar;
        double *array;
    } _weight;
}

+ (void)initialize;
- (id)extendedData;
- (id)backtrace;
- (int)quantity;
- (double)weightAtIndex:(unsigned int)arg1;
- (double)weight;
- (unsigned long long)thread;
- (unsigned int)eventType;
- (unsigned long long)timestamp;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithTimestamp:(unsigned long long)arg1 eventType:(unsigned int)arg2 thread:(unsigned long long)arg3 weights:(double *)arg4 weightCount:(unsigned long long)arg5 quantity:(int)arg6 backtrace:(id)arg7 extendedData:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRScopeBarButtonCell : DVTScopeBarButtonCell
{
}

- (long long)nextState;

@end

@interface XRScript : NSObject <NSCoding, XRScriptDelegate>
{
    NSString *_name;
    NSString *_type;
    NSString *_uuid;
    NSDictionary *_metaData;
    id <XRScriptDelegate> _delegate;
    BOOL _isRecording;
    BOOL _isPlaying;
    NSDate *_dateModifiedLocally;
    XRScriptControl *_owner;
}

- (void)stopScript;
- (BOOL)canRecordScript;
- (BOOL)isRecordingScript;
- (void)recordScript;
- (BOOL)canPlayScript;
- (BOOL)isPlayingScript;
- (void)playScript;
- (BOOL)isEditable;
- (void)syncFromEditor;
- (void)syncToEditor;
- (void)insertInEditorTextValue:(id)arg1;
- (id)owner;
- (void)setOwner:(id)arg1;
- (id)metaData;
- (void)setMetaData:(id)arg1;
- (void)setTextValue:(id)arg1;
- (id)textValue;
- (id)uuid;
- (void)setType:(id)arg1;
- (id)type;
- (void)setDateModifiedLocally:(id)arg1;
- (id)dateModifiedLocally;
- (void)setName:(id)arg1;
- (id)name;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRScriptInDocument : XRScript <NSCoding>
{
    NSString *_textValue;
}

- (void)setTextValue:(id)arg1;
- (id)textValue;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRScriptOnFileSystem : XRScript <NSCoding>
{
    NSString *_path;
}

- (id)dateModifiedOnDisk;
- (BOOL)isEditable;
- (id)path;
- (void)setPath:(id)arg1;
- (void)setTextValue:(id)arg1;
- (id)textValue;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface XRSegementedDotCell : NSSegmentedCell
{
}

- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;

@end

@interface XRSegmentedCell : NSSegmentedCell
{
    BOOL _hideBackground;
}

@property BOOL hideBackground; // @synthesize hideBackground=_hideBackground;
- (void)flashLabel;
- (double)_menuDelayTimeForSegment:(long long)arg1;
- (void)_drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;

@end

@interface XRSegmentedTimeDisplayCell : NSSegmentedCell <XRTextPulseAnimationTarget>
{
    NSColor *_color;
    NSImage *_freezeDriedContent;
    double _freezeDriedContentAlpha;
}

+ (void)drawString:(id)arg1 withDigitRect:(struct CGRect)arg2 withAttributes:(id)arg3;
- (void)setTextPulseNeedsDisplay;
- (void)textPulseDidEnd;
- (void)setTextPulseAlpha:(double)arg1;
- (void)textPulseWillStart;
- (void)setTextColor:(id)arg1;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2;
- (void)drawSegment:(long long)arg1 inFrame:(struct CGRect)arg2 withView:(id)arg3;
- (void)dealloc;

@end

@interface XRSessionDevice : XRRemoteDevice
{
}

- (id)address;
- (struct _CSTypeRef)createKernelSymbolicator;
- (struct _CSTypeRef)createSymbolicatorForPid:(int)arg1;
- (BOOL)isOnLine;

@end

@interface XRSharedArchiveObject : NSObject <NSCoding>
{
    id <NSObject><NSCoding> _sharedObject;
}

+ (id)archiveObject:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)sharedObject;
- (void)dealloc;
- (id)initWithObject:(id)arg1;

@end

@interface XRSharingArchiver : NSArchiver
{
    XRSharingCoordinator *_sharingCoordinator;
}

- (id)sharingCoordinator;
- (void)dealloc;
- (id)initForWritingWithMutableData:(id)arg1 sharingCoordinator:(id)arg2;

@end

@interface XRSharingCoordinator : NSObject
{
    NSURL *_sharingLocation;
    NSMutableArray *_sharingInfoObjects;
    NSMutableArray *_sharingInfoLocations;
    NSMutableDictionary *_readingInfo;
    NSMutableDictionary *_attributes;
    NSLock *_sharingLock;
}

- (id)attributeForKey:(id)arg1;
- (void)setAttribute:(id)arg1 forKey:(id)arg2;
- (id)readerLockForLocation:(id)arg1;
- (BOOL)setReaderLock:(id)arg1 forLocation:(id)arg2;
- (id)objectForLocation:(id)arg1;
- (BOOL)setObject:(id)arg1 forLocation:(id *)arg2;
- (id)sharingLocation;
- (void)setSharingLocation:(id)arg1;
- (void)dealloc;
- (id)initWithSharingLocation:(id)arg1;

@end

@interface XRSharingUnarchiver : NSUnarchiver
{
    XRSharingCoordinator *_sharingCoordinator;
}

- (id)sharingCoordinator;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg1 sharingCoordinator:(id)arg2;

@end

@interface XRTraceFlag : XRFlag
{
    NSNumber *_number;
    NSString *_name;
    NSString *_summary;
    NSString *_signature;
    NSString *_icon;
    NSString *_instrumentInstanceUUID;
    BOOL _modifiable;
    BOOL _isGlobal;
    BOOL _hasFocus;
    double _dateCreated;
    double _dateModified;
    BOOL _isPreArchivingFix;
    BOOL _isDisplayed;
    BOOL _isFiltered;
    int _type;
    XRTraceFlag *_complement;
    NSMutableDictionary *_kvobservers;
}

+ (id)nextFlagNumber;
+ (id)flagWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 modifiable:(BOOL)arg4 global:(BOOL)arg5;
+ (void)initialize;
- (long long)compare:(id)arg1 usingSortDescriptors:(id)arg2;
- (id)description;
- (unsigned long long)timestamp;
- (void)setComplementFlag:(id)arg1;
- (id)complementFlag;
- (void)setHasFocus:(BOOL)arg1;
- (BOOL)hasFocus;
- (void)setDateModified:(id)arg1;
- (id)dateModified;
- (unsigned long long)creationTimestamp;
- (id)dateCreated;
- (void)setIcon:(id)arg1;
- (id)icon;
- (BOOL)isGlobal;
- (BOOL)modifiable;
- (void)setSummary:(id)arg1;
- (id)summary;
- (void)setName:(id)arg1;
- (id)name;
- (void)setType:(int)arg1;
- (int)type;
- (void)setIsFiltered:(BOOL)arg1;
- (BOOL)isFiltered;
- (void)setIsDisplayed:(BOOL)arg1;
- (BOOL)isDisplayed;
- (id)numberString;
- (void)setNumber:(unsigned long long)arg1;
- (unsigned long long)number;
- (void)removeObserver:(id)arg1 forKeyPath:(id)arg2;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 modifiable:(BOOL)arg4 global:(BOOL)arg5;

@end

@interface XRTimeFlag : XRTraceFlag
{
    NSString *_key;
    unsigned long long _nanoTimestamp;
    NSMutableData *_colorData;
    id <NSObject><NSCoding> _color;
    XRFlagRulerMarker *_marker;
}

+ (id)flagWithTimestamp:(unsigned long long)arg1 modifiable:(BOOL)arg2 global:(BOOL)arg3;
+ (id)flagWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 modifiable:(BOOL)arg4 global:(BOOL)arg5 timestamp:(unsigned long long)arg6;
+ (void)initialize;
- (id)dataElementsForContext:(id)arg1;
- (id)description;
- (id)flagKey;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setTimestamp:(unsigned long long)arg1;
- (unsigned long long)timestamp;
- (void)setMarker:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 modifiable:(BOOL)arg4 global:(BOOL)arg5 timestamp:(unsigned long long)arg6;

@end

@interface XRSignalFlag : XRTimeFlag
{
    NSString *_sourceString;
    NSArray *_backtraceFrames;
    int _pid;
    unsigned long long _thrid;
    unsigned long long _timeShift;
    NSString *_procName;
}

+ (id)signalWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 timestamp:(unsigned long long)arg4 andBacktrace:(id)arg5 forPID:(int)arg6 onThread:(unsigned long long)arg7 withType:(int)arg8 sourceLocation:(const char *)arg9;
+ (id)formattedTimeFromTimestamp:(unsigned long long)arg1;
+ (void)initialize;
- (id)dataElementsForContext:(id)arg1;
- (void)setProcessName:(id)arg1;
- (id)processName;
- (unsigned long long)ThreadID;
- (int)ProcessID;
- (void)setBacktrace:(id)arg1;
- (id)backtrace;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (unsigned long long)absoluteTimestamp;
- (unsigned long long)timestamp;
- (unsigned long long)currentTimeShift;
- (int)type;
- (void)setSourceString:(id)arg1;
- (id)sourceString;
- (void)setName:(id)arg1;
- (unsigned long long)shiftTimeBy:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 modifiable:(BOOL)arg4 global:(BOOL)arg5 timestamp:(unsigned long long)arg6 andBacktrace:(id)arg7 forPID:(int)arg8 onThread:(unsigned long long)arg9 withType:(int)arg10 sourceLocation:(const char *)arg11;

@end

@interface XRSimpleTextLine : NSObject <XRCodeLineProtocol>
{
    NSString *_text;
    unsigned long long _offset;
}

@property(readonly, nonatomic) unsigned long long length; // @dynamic length;
@property(readonly, nonatomic) unsigned long long byteOffset; // @dynamic byteOffset;
@property(readonly, nonatomic) NSData *rawBytes; // @dynamic rawBytes;
@property(readonly, nonatomic) NSString *lineString; // @dynamic lineString;
- (void)dealloc;
- (id)initWithString:(id)arg1 andOffset:(unsigned long long)arg2;

@end

@interface XRSimpleTextSourceAnalyzer : NSObject <XRSourceAnalyzerPlugin>
{
    NSString *_src;
}

+ (id)sourceAnalyzerForString:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (BOOL)getSourceLine:(id *)arg1 atIndex:(unsigned long long)arg2 error:(id *)arg3;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSlidingCapableScrollView : NSScrollView
{
    BOOL _slideColumn;
}

+ (BOOL)isCompatibleWithResponsiveScrolling;
- (void)reloadData;
- (void)viewDidMoveToSuperview;
- (void)awakeFromNib;
- (void)setFrameSize:(struct CGSize)arg1;
- (BOOL)_pinnedInDirectionX:(double)arg1 y:(double)arg2;
- (void)reflectScrolledClipView:(id)arg1;
- (void)updateHorizontalScrollerSlide;
- (void)_doScroller:(id)arg1 hitPart:(long long)arg2 multiplier:(double)arg3;
- (void)_doSlide:(id)arg1;
- (BOOL)slidingColumnEnabled;
- (void)setSlidingColumnEnabled:(BOOL)arg1;
- (void)setDocumentView:(id)arg1;

@end

@interface XRSlidingTableColumn : NSTableColumn
{
}

- (void)setOverrideWidth:(double)arg1;
- (void)setWidth:(double)arg1;
- (void)setTableView:(id)arg1;

@end

@interface XRSourceComment : NSObject <XRComment>
{
    NSArray *_fragments;
    XRCodeManager *_srcManager;
    XRCodeFragment *_sourceFrag;
    XRCodeFragment *_disasmFrag;
    XRCodeFragment *_myFrag;
}

@property(retain, nonatomic) XRCodeFragment *fragment; // @synthesize fragment=_myFrag;
@property(retain, nonatomic) XRCodeFragment *disasmFragment; // @synthesize disasmFragment=_disasmFrag;
@property(retain, nonatomic) XRCodeFragment *sourceFragment; // @synthesize sourceFragment=_sourceFrag;
@property(readonly, nonatomic) NSArray *dataItems;
@property(readonly) double importance;
- (BOOL)isMerged;
- (void)mergeWithComment:(id)arg1;
- (BOOL)canMergeWithComment:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)stringWithType:(int)arg1;
- (void)dealloc;
- (id)initWithFragment:(id)arg1 referencingSources:(id)arg2 inSourceCodeManager:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRStatePath : XRBezierPath
{
    long long _state;
    unsigned long long _pathType;
}

- (void)transformUsingAffineTransform:(id)arg1;
- (long long)compare:(id)arg1;
- (id)initWithState:(long long)arg1 pathType:(unsigned long long)arg2;

@end

@interface XRStorageManagerAdapterCursor : XRDatasetAdapterCursor
{
    XRStorageManager *_storage;
    XRDatasetEnclosure *_enclosure;
    const struct _ExtraColumnInfo *_extraInfoByColIdx;
    const struct XRSQLTableDefinition *_tableDef;
}

- (void).cxx_destruct;
- (int)pushColumn:(unsigned char)arg1 toSQLite3:(struct sqlite3_context *)arg2;
- (void)next;
- (void)jumpToCurrentRowID;
- (BOOL)startCursorWithEnclosure:(id)arg1;
- (id)initWithStorageMananger:(id)arg1 tableDefinition:(const struct XRSQLTableDefinition *)arg2 extraColumnInfo:(const void *)arg3;

@end

@interface XRStorageManagerTableAdapter : XRDatasetAdapterTable
{
    struct _ExtraColumnInfo *_extraInfoByColIdx;
    struct XRSQLTableDefinition *_tableDef;
    XRStorageManager *_sm;
    NSMutableData *_fieldMappings;
    BOOL _rowIDsAscendingByTime;
}

@property BOOL rowIDsAscendingByTime; // @synthesize rowIDsAscendingByTime=_rowIDsAscendingByTime;
@property(readonly) XRStorageManager *storageManager; // @synthesize storageManager=_sm;
- (void).cxx_destruct;
- (const struct _ExtraColumnInfo *)extraColumnInfo;
- (int)datasetTypeForDescriptor:(id)arg1;
- (BOOL)getColumnToEnclosureFieldMap:(const int **)arg1 count:(char *)arg2;
- (id)openCursor;
- (const struct XRSQLTableDefinition *)tableDefinition;
- (void)_fillInTableDef;
- (void)dealloc;
- (id)initWithStorageManager:(id)arg1;

@end

@interface XRStrataGraphSequence : XRGraphSequence
{
    struct XRStrataGroup *_strataGroups;
    struct XRStrataBufferChunk *_bufferHead;
    struct XRStrataBufferChunk *_bufferTail;
    unsigned long long _strataCount;
    unsigned long long _groupIndex;
    unsigned long long _strataIndex;
    BOOL _contextIsStrataGroup;
}

- (BOOL)append:(id)arg1;
- (BOOL)combine:(id)arg1;
- (void)replaceWith:(id)arg1;
- (void)addWeight:(float)arg1 state:(unsigned long long)arg2 toStrataGroup:(struct XRStrataGroup *)arg3 atIndex:(unsigned int)arg4;
- (struct XRStrataGroup *)newStrataGroupWithComponents:(unsigned int)arg1 strata:(struct XRStrata *)arg2;
- (struct XRStrataGroup *)newStrataGroupWithComponents:(unsigned int)arg1;
- (unsigned int)components;
- (struct XRStrataGroup *)strataGroupAtIndex:(unsigned long long)arg1;
- (void)initializeStrataWithComponents:(unsigned int)arg1 contextIsStrataGroup:(BOOL)arg2;
- (void)dealloc;
- (void)_createNewBufferChunk;
- (void)_freeStrataBufferChunks;

@end

@interface XRStrategyFilter : NSObject
{
    unsigned long long *_identifierSpace;
    unsigned int _count;
}

+ (id)filterMatchingCores:(id)arg1 ofPossibleCores:(id)arg2;
+ (id)filterMatchingThreads:(id)arg1 ofPossibleThreads:(id)arg2;
- (BOOL)matches:(unsigned long long)arg1;
- (void)dealloc;
- (id)initMatchingObjects:(id)arg1 ofPossibleObjects:(id)arg2 accessor:(CDUnknownBlockType)arg3;

@end

@interface XRStrategyInfo : NSObject <NSCopying>
{
    struct NSString *_identifier;
    NSString *_displayName;
    NSString *_uiControllerClassName;
    NSString *_uiListViewClassName;
    NSString *_uiTrackViewClassName;
}

@property(readonly) NSString *uiTrackViewClassName; // @synthesize uiTrackViewClassName=_uiTrackViewClassName;
@property(readonly) NSString *uiListViewClassName; // @synthesize uiListViewClassName=_uiListViewClassName;
@property(readonly) NSString *uiControllerClassName; // @synthesize uiControllerClassName=_uiControllerClassName;
@property(readonly) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (long long)compareStrategyName:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initWithIdentifier:(struct NSString *)arg1 andDisplayName:(id)arg2 andUIControllerClassName:(id)arg3;
- (id)initWithIdentifier:(struct NSString *)arg1 andDisplayName:(id)arg2 andUIControllerClassName:(id)arg3 andListViewClassName:(id)arg4 andTrackViewClassName:(id)arg5;

@end

@interface XRStrategyManager : NSObject <XRStrategyControllerDelegate>
{
    NSMutableDictionary *_controllers;
    XRTrace *_traceNotRetained;
    NSMutableSet *_presentStrategies;
    id _addRemoveHandlers[2];
    BOOL _strategiesNeedReload;
}

+ (id)strategyInfoByIdentifier;
@property(copy) NSSet *presentStrategies; // @synthesize presentStrategies=_presentStrategies;
- (void)dealloc;
- (void)_reloadAllStratControllers;
- (void)strategiesNeedReload;
- (id)strategy:(id)arg1 runsForRunNumber:(unsigned long long)arg2;
- (id)strategyWithIdentifier:(struct NSString *)arg1 forRunNumber:(unsigned long long)arg2;
- (id)init;
- (id)threadStrategyForRunNumber:(unsigned long long)arg1;
- (id)trace;
- (void)_setTrace:(id)arg1;
- (id)cpuStrategyForRunNumber:(unsigned long long)arg1;

@end

@interface XRStrategyManagerNameRunPair : NSObject <NSCopying>
{
    unsigned long long runNumber;
    NSString *identifier;
}

- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRunNumber:(unsigned long long)arg1 andControllerIdent:(id)arg2;

@end

@interface XRStrategySourceRunPair : NSObject
{
    struct NSObject *source;
    XRRun *run;
}

+ (id)pairWithSource:(struct NSObject *)arg1 andRun:(id)arg2;
- (void)dealloc;
- (id)initWithSource:(struct NSObject *)arg1 andRun:(id)arg2;

@end

@interface XRStratifiedBrushImpl : XRFilledLineBrushImpl
{
}

+ (Class)graphSequenceClass;
- (void)preparePathForRendering:(id)arg1;
- (double)minPixelsForRun:(id)arg1 datasource:(id)arg2 usingScale:(struct CGSize)arg3;
- (void)run:(id)arg1 datasource:(id)arg2 renderPathGroup:(id)arg3 sequences:(id)arg4 usingScale:(struct CGSize)arg5 graphAtIndex:(long long)arg6;
- (void)run:(id)arg1 datasource:(id)arg2 applyStyleToPath:(id)arg3 withState:(unsigned long long)arg4 pathType:(unsigned long long)arg5 scale:(struct CGSize)arg6 graphAtIndex:(long long)arg7;
- (id)run:(id)arg1 datasource:(id)arg2 createPathForSequences:(id)arg3 inRect:(struct CGRect)arg4 usingScale:(struct CGSize)arg5 peakValue:(double *)arg6 graphAtIndex:(long long)arg7;

@end

@interface XRSymbolContext : XRDataContext <XRSymbolSourceProxy>
{
}

- (int)processIdentifier;
- (int)siblingMenuDispayRule;
- (id)callTreeInformation;
- (id)concreteSymbol;
- (id)symbol;
- (id)initWithSymbol:(id)arg1 withConcreteSymbol:(id)arg2 callTreeInformation:(id)arg3 container:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRSymbolInspectorCustomOutlineView : NSOutlineView
{
    XRProcessAndSymbolOwnerListModel *_symbolOwnerList;
}

- (BOOL)performKeyEquivalent:(id)arg1;
- (void)setSymbolOwnerList:(id)arg1;

@end

@interface XRSymbolInspectorViewController : XRUIViewController <NSOutlineViewDelegate, NSOutlineViewDataSource, XRUIModelChangeObserver>
{
    BOOL _initializingModel;
    BOOL _checkNeedToExpandSingleProcess;
    BOOL _binaryAnddsymViewsAreUninitialized;
    BOOL _showingBinaryPathContainer;
    BOOL _showingdSYMPathText;
    struct _XRDSYMObserverID *_downloadObserverRef;
    BOOL _startingDSYMDownload;
    XRSymbolOwnerListLimiter *_symbolicationLimiter;
    NSMutableSet *_retainedPaths;
    NSMutableArray *_selectedUUIDs;
    NSMutableSet *_expandedUUIDs;
    NSSet *_selectedSymbolOwners;
    DVTBorderedView *_mainBox;
    DVTBorderedView *_filterSearchBox;
    DVTBorderedView *_tableBox;
    NSSearchField *_textRestrictionFilterView;
    NSView *_restrictionView;
    DVTScopeBarButton *_executableRestrictionButton;
    DVTScopeBarButton *_incompleteRestrictionButton;
    XRSymbolInspectorCustomOutlineView *_symbolOwnerOutline;
    NSTextField *_nameView;
    NSTextField *_uuidView;
    NSTextField *_archView;
    NSProgressIndicator *_statusSpinner;
    NSTextField *_statusText;
    NSButton *_doneButton;
    NSButton *_locateBinaryButton;
    NSButton *_locatedsymButton;
    NSTextField *_downloaddSYMStatusText;
    NSButton *_downloaddSYMButton;
    NSView *_rightContainer;
    NSView *_archContainer;
    NSView *_binaryPathContainer;
    NSView *_binaryLocateContainer;
    NSView *_dsymPathContainer;
    NSView *_dsymLocateContainer;
    NSTextField *_binaryPathText;
    NSTextField *_dsymPathText;
    NSButton *_binaryPathFolder;
    NSButton *_dsymPathFolder;
    NSMenuItem *_showKernelLibrariesMenuItem;
    NSMenuItem *_downloadsSubMenuItem;
    NSMenuItem *_resumeDownloadsMenuItem;
    NSMenuItem *_pauseDownloadsMenuItem;
    NSMenuItem *_cancelDownloadsMenuItem;
}

+ (void)initialize;
@property NSMenuItem *cancelDownloadsMenuItem; // @synthesize cancelDownloadsMenuItem=_cancelDownloadsMenuItem;
@property NSMenuItem *pauseDownloadsMenuItem; // @synthesize pauseDownloadsMenuItem=_pauseDownloadsMenuItem;
@property NSMenuItem *resumeDownloadsMenuItem; // @synthesize resumeDownloadsMenuItem=_resumeDownloadsMenuItem;
@property NSMenuItem *downloadsSubMenuItem; // @synthesize downloadsSubMenuItem=_downloadsSubMenuItem;
@property NSMenuItem *showKernelLibrariesMenuItem; // @synthesize showKernelLibrariesMenuItem=_showKernelLibrariesMenuItem;
@property NSButton *dsymPathFolder; // @synthesize dsymPathFolder=_dsymPathFolder;
@property NSButton *binaryPathFolder; // @synthesize binaryPathFolder=_binaryPathFolder;
@property NSTextField *dsymPathText; // @synthesize dsymPathText=_dsymPathText;
@property NSTextField *binaryPathText; // @synthesize binaryPathText=_binaryPathText;
@property(retain) NSView *dsymLocateContainer; // @synthesize dsymLocateContainer=_dsymLocateContainer;
@property(retain) NSView *dsymPathContainer; // @synthesize dsymPathContainer=_dsymPathContainer;
@property(retain) NSView *binaryLocateContainer; // @synthesize binaryLocateContainer=_binaryLocateContainer;
@property(retain) NSView *binaryPathContainer; // @synthesize binaryPathContainer=_binaryPathContainer;
@property NSView *archContainer; // @synthesize archContainer=_archContainer;
@property NSView *rightContainer; // @synthesize rightContainer=_rightContainer;
@property NSButton *downloaddSYMButton; // @synthesize downloaddSYMButton=_downloaddSYMButton;
@property NSTextField *downloaddSYMStatusText; // @synthesize downloaddSYMStatusText=_downloaddSYMStatusText;
@property NSButton *locatedsymButton; // @synthesize locatedsymButton=_locatedsymButton;
@property NSButton *locateBinaryButton; // @synthesize locateBinaryButton=_locateBinaryButton;
@property NSButton *doneButton; // @synthesize doneButton=_doneButton;
@property NSTextField *statusText; // @synthesize statusText=_statusText;
@property NSProgressIndicator *statusSpinner; // @synthesize statusSpinner=_statusSpinner;
@property NSTextField *archView; // @synthesize archView=_archView;
@property NSTextField *uuidView; // @synthesize uuidView=_uuidView;
@property NSTextField *nameView; // @synthesize nameView=_nameView;
@property XRSymbolInspectorCustomOutlineView *symbolOwnerOutline; // @synthesize symbolOwnerOutline=_symbolOwnerOutline;
@property DVTScopeBarButton *incompleteRestrictionButton; // @synthesize incompleteRestrictionButton=_incompleteRestrictionButton;
@property DVTScopeBarButton *executableRestrictionButton; // @synthesize executableRestrictionButton=_executableRestrictionButton;
@property NSView *restrictionView; // @synthesize restrictionView=_restrictionView;
@property NSSearchField *textRestrictionFilterView; // @synthesize textRestrictionFilterView=_textRestrictionFilterView;
@property DVTBorderedView *tableBox; // @synthesize tableBox=_tableBox;
@property DVTBorderedView *filterSearchBox; // @synthesize filterSearchBox=_filterSearchBox;
@property DVTBorderedView *mainBox; // @synthesize mainBox=_mainBox;
@property(readonly, nonatomic) NSSet *selectedSymbolOwners; // @synthesize selectedSymbolOwners=_selectedSymbolOwners;
- (void)reloadSymbolOwnerOutlineView;
- (id)populatedViewForSymbolOwnerPath:(id)arg1;
- (long long)numberOfSymbolOwnersUnderIndexPath:(id)arg1;
- (id)selectedSymbolOwnerElementsFromOutline:(id)arg1;
- (id)selectedSymbolOwnerPathsFromOutline:(id)arg1;
- (void)_executeSymbolOwnerAction:(SEL)arg1 bySelectingSymbolOwners:(id)arg2;
- (void)outlineViewItemDidCollapse:(id)arg1;
- (void)outlineViewItemDidExpand:(id)arg1;
- (void)outlineViewSelectionDidChange:(id)arg1;
- (void)outlineViewSelectionIsChanging:(id)arg1;
- (BOOL)outlineView:(id)arg1 shouldSelectItem:(id)arg2;
- (BOOL)outlineView:(id)arg1 shouldShowOutlineCellForItem:(id)arg2;
- (id)outlineView:(id)arg1 child:(long long)arg2 ofItem:(id)arg3;
- (BOOL)outlineView:(id)arg1 isItemExpandable:(id)arg2;
- (id)outlineView:(id)arg1 viewForTableColumn:(id)arg2 item:(id)arg3;
- (double)outlineView:(id)arg1 heightOfRowByItem:(id)arg2;
- (long long)outlineView:(id)arg1 numberOfChildrenOfItem:(id)arg2;
- (void)_refreshOptionsMenu;
- (void)_refreshStatusText;
- (void)_cancelDownload:(id)arg1;
- (void)_bumpDownloadPriority:(id)arg1;
- (void)_refreshSymbolOwnerTextViews;
- (void)_refreshRestrictionButtons;
- (void)fullRedisplay;
- (void)loadView;
- (void)modelDidChange:(id)arg1;
- (void)finishRefreshingModel;
- (void)startRefreshingModel;
- (id)textFilterString;
- (void)setRestrictionState:(id)arg1;
- (id)restrictionSet;
- (void)_enumerateRestrictionButtons:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) XRProcessAndSymbolOwnerListModel *displayedSymbolOwnerHierarchy;
@property(readonly, nonatomic) XRProcessAndSymbolOwnerListModel *inputSymbolOwnerHierarchy;
- (void)_downloadsWereResumed;
- (void)_downloadsWerePaused;
- (void)_removedDSYMForUUID:(id)arg1 atURL:(id)arg2;
- (void)_addedDSYMForUUID:(id)arg1 atURL:(id)arg2;
- (void)_downloadCancelledDSYMForUUID:(id)arg1 atURL:(id)arg2;
- (void)_downloadCompletedForUUID:(id)arg1 atURL:(id)arg2;
- (void)_downloadStartedForUUID:(id)arg1;
- (void)downloaddSYMClick:(id)arg1;
- (void)locateBinaryClick:(id)arg1;
- (void)locatedSYMClick:(id)arg1;
- (void)doneButtonClick:(id)arg1;
- (void)textFilterAction:(id)arg1;
- (void)_updateDSYMContainer:(BOOL)arg1 binaryContainer:(BOOL)arg2;
- (void)restrictionButtonClick:(id)arg1;
- (void)cancelDownloadsClick:(id)arg1;
- (void)pauseDownloadsClick:(id)arg1;
- (void)resumeDownloadsClick:(id)arg1;
- (void)showKernelLibrariesClick:(id)arg1;
- (id)nibBundle;
- (id)nibName;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_commonSetup;
- (void)_setGlobalSearchPaths:(id)arg1;
- (id)_globalSearchPaths;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSymbolOwnerElement : XRImmutableElement
{
    NSString *_name;
    NSString *_symbolOwnerUUID;
    NSString *_binaryPath;
    NSString *_dsymPath;
    NSString *_arch;
    NSString *_formattedSize;
    XRAttributeSet *_attributes;
    struct _CSTypeRef _symbolOwner;
}

@property(readonly, nonatomic) struct _CSTypeRef symbolOwner; // @synthesize symbolOwner=_symbolOwner;
@property(readonly, nonatomic) XRAttributeSet *attributes; // @synthesize attributes=_attributes;
@property(readonly, nonatomic) NSString *formattedSize; // @synthesize formattedSize=_formattedSize;
@property(readonly, nonatomic) NSString *arch; // @synthesize arch=_arch;
@property(readonly, nonatomic) NSString *dsymPath; // @synthesize dsymPath=_dsymPath;
@property(readonly, nonatomic) NSString *binaryPath; // @synthesize binaryPath=_binaryPath;
@property(readonly, nonatomic) NSString *symbolOwnerUUID; // @synthesize symbolOwnerUUID=_symbolOwnerUUID;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)copySymbolOwnerElementByUnioningAttributes:(id)arg1 andSubtractingAttributes:(id)arg2;
- (id)copySymbolOwnerElementUsingBinaryPath:(id)arg1 dsymPath:(id)arg2 additionalAttributes:(id)arg3;
- (id)copy;
- (void)dealloc;
- (id)initWithSymbolOwner:(struct _CSTypeRef)arg1 name:(id)arg2 uuid:(id)arg3 binaryPath:(id)arg4 dsymPath:(id)arg5 arch:(id)arg6 size:(id)arg7 attributes:(id)arg8;
- (id)_initWithSymbolOwner:(struct _CSTypeRef)arg1 name:(id)arg2 symbolOwnerUUID:(id)arg3 binaryPath:(id)arg4 dsymPath:(id)arg5 arch:(id)arg6 size:(id)arg7 attributes:(id)arg8 UUID:(struct __CFUUID *)arg9;

@end

@interface XRSymbolOwnerListLimiter : NSObject <XRUIModelChangeObserver>
{
    BOOL _showKernelLibraries;
    XRProcessAndSymbolOwnerListModel *_input;
    XRProcessAndSymbolOwnerListModel *_output;
    XRAttributeSet *_restrictions;
    NSString *_textRestriction;
}

@property(retain, nonatomic) NSString *textRestriction; // @synthesize textRestriction=_textRestriction;
@property(retain, nonatomic) XRAttributeSet *restrictions; // @synthesize restrictions=_restrictions;
@property(nonatomic) BOOL showKernelLibraries; // @synthesize showKernelLibraries=_showKernelLibraries;
@property(retain, nonatomic) XRProcessAndSymbolOwnerListModel *output; // @synthesize output=_output;
@property(retain, nonatomic) XRProcessAndSymbolOwnerListModel *input; // @synthesize input=_input;
- (void)modelDidChange:(id)arg1;
- (void)_resetOutput;
- (void)dealloc;

@end

@interface XRSymbolSourceFlag : XRTraceFlag <XRSymbolSourceProxy>
{
    id <NSCoding><NSObject> _symbol;
    NSDictionary *_callTreeInformation;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (int)processIdentifier;
- (id)callTreeInformation;
- (id)concreteSymbol;
- (id)symbol;
- (id)initWithSymbol:(id)arg1 callTreeInformation:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRSymbolicationCategoryElement : XRImmutableElement
{
    NSString *_name;
}

@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)_initWithName:(id)arg1 UUID:(struct __CFUUID *)arg2;

@end

@interface XRSymbolicationErrorElement : XRImmutableElement
{
    NSString *_name;
}

@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)_initWithName:(id)arg1 UUID:(struct __CFUUID *)arg2;

@end

@interface XRSymbolicationManager : NSObject
{
}

+ (void)startAutomaticDownloadsForDocument:(id)arg1;
+ (void)downloadDSYMForSymbol:(id)arg1;
+ (void)locateDSYMAndSymbolicateForSymbol:(id)arg1;
+ (id)symbolicateMenuItemsForSymbol:(id)arg1 withTarget:(id)arg2 locateSelector:(SEL)arg3 symbolicateSelector:(SEL)arg4 downloadSelector:(SEL)arg5;
+ (void)symbolicateDocuments:(id)arg1;
+ (BOOL)addDSYM:(id)arg1 forUUID:(id)arg2 andResymbolicate:(BOOL)arg3;
+ (void)refreshModel:(id)arg1 forDocument:(id)arg2;
+ (id)findBinaryForUUID:(struct __CFUUID *)arg1 withDSYM:(id)arg2 binaryPathGuess:(id)arg3;
+ (void)_enumerateRepositoriesForCurrentRunOfDocument:(id)arg1 flatten:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface XRSymbolicatorsByPid : NSObject
{
    void *_map;
}

- (void)dealloc;
- (struct _CSTypeRef)symbolicatorForPid:(int)arg1;
- (void)addSymbolicator:(struct _CSTypeRef)arg1 forPid:(int)arg2;
- (id)init;

@end

@interface XRSystemTimeFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromJoinedString:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromJoinedString:(id)arg1;

@end

@interface XRTableColumn : NSTableColumn
{
    NSView *_tableColumnView;
}

- (void)setWidth:(double)arg1;
- (void)setTableView:(id)arg1;
- (id)tableColumnView;
- (void)setTableColumnView:(id)arg1;
- (void)updateTableColumnViewPosition;
- (void)dealloc;

@end

@interface XRTableColumnWithIndex : NSTableColumn
{
    unsigned long long _identifierIndex;
    CDUnknownBlockType _mirroringNotifier;
}

- (void)setHidden:(BOOL)arg1;
- (void)setWidth:(double)arg1;
- (void)setMirroringNotifier:(CDUnknownBlockType)arg1;
- (unsigned long long)identifierIndex;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 andIndex:(unsigned long long)arg2;

@end

@interface XRTableFullImageCell : NSImageCell
{
}

@end

@interface XRTapPlugIn : NSObject
{
}

+ (id)sharedTapPlugInForTableSchema:(id)arg1;
+ (void)scanPlugIns;
- (void)endRecording:(id)arg1;
- (void)pauseRecording:(id)arg1;
- (id)startRecordingTableIDs:(id)arg1 runNumber:(long long)arg2 trace:(id)arg3;
- (BOOL)canRecordTableIDs:(id)arg1 runNumber:(long long)arg2 trace:(id)arg3;

@end

@interface XRTemplateChooserSelectionView : NSView
{
    BOOL _showsFirstResponder;
    NSBezierPath *_path;
}

@property(nonatomic) BOOL showsFirstResponder; // @synthesize showsFirstResponder=_showsFirstResponder;
- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setNilValueForKey:(id)arg1;

@end

@interface XRTemplateChooserTargetedObject : NSObject <XRProcessTargetedObject>
{
    int _defaultTargetType;
    NSWindow *_window;
    XRDevice *_targetDevice;
    PFTProcess *_defaultProcess;
}

@property(retain, nonatomic) PFTProcess *defaultProcess; // @synthesize defaultProcess=_defaultProcess;
@property(retain, nonatomic) XRDevice *targetDevice; // @synthesize targetDevice=_targetDevice;
@property(retain, nonatomic) NSWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (id)mainWindow;
- (id)currentTargetDevice;
- (id)currentTargetProcess;
- (BOOL)supportsTargetType:(int)arg1;
- (void)setTargetsDevice:(id)arg1;
- (void)setTargetsLaunchedProcess:(id)arg1;
- (void)setTargetsExistingProcess:(id)arg1;
- (int)defaultTargetTypeForChooser;
- (void)setTargetsAllProcesses;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTemplateChooserTextField : NSTextField
{
    BOOL _showsFirstResponder;
}

@property(nonatomic) BOOL showsFirstResponder; // @synthesize showsFirstResponder=_showsFirstResponder;
- (void)setNilValueForKey:(id)arg1;

@end

@interface XRTemplateChooserTextFieldCell : NSTextFieldCell
{
}

+ (id)sharedStorage;
- (void)drawInteriorWithFrame:(struct CGRect)arg1 inView:(id)arg2;

@end

@interface XRTemplateCollectionViewItem : NSCollectionViewItem
{
}

- (void)setSelected:(BOOL)arg1;
- (void)setRepresentedObject:(id)arg1;

@end

@interface XRTemplateItem : NSObject
{
    NSString *_templatePath;
    NSImage *_image;
    NSAttributedString *_templateDescription;
    NSString *_title;
    NSString *_imageUID;
    BOOL _hasInstruments;
    BOOL _custom;
    BOOL _deletable;
    NSMutableArray *_items;
    XRTemplateItem *_defaultItem;
    BOOL _isDocumentRef;
}

- (id)defaultItem;
- (id)items;
- (BOOL)isDeletable;
- (BOOL)isCustom;
- (BOOL)hasInstruments;
- (id)documentUUID;
- (id)templatePath;
- (id)templateURL;
- (id)helpURL;
- (id)imageDescription;
- (BOOL)isSelectable;
- (id)imageSubtitle;
- (id)imageTitle;
- (id)imageRepresentation;
- (id)imageUID;
- (id)description;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface XRTemplateItemView : NSView
{
    id _delegate;
    XRTemplateChooserTextField *_textField;
    XRTemplateChooserSelectionView *_selectionView;
    NSImageView *_imageView;
}

@property(retain, nonatomic) NSImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) XRTemplateChooserSelectionView *selectionView; // @synthesize selectionView=_selectionView;
@property(retain, nonatomic) XRTemplateChooserTextField *textField; // @synthesize textField=_textField;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)mouseDown:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1;
- (void)keyDown:(id)arg1;
- (BOOL)acceptsFirstResponder;
- (id)initWithCoder:(id)arg1;

@end

@interface XRTextPulseAnimation : NSAnimation
{
    NSObject *_cell;
    NSColor *_color;
    BOOL _fadeIn;
}

- (void)setCurrentProgress:(float)arg1;
- (void)stopAnimation;
- (void)startAnimation;
- (void)setColorAlpha:(double)arg1;
- (void)flipAndGo;
- (void)dealloc;
- (id)initWithCell:(id)arg1 foregroundColor:(id)arg2 fadeIn:(BOOL)arg3;

@end

@interface XRTheme : NSObject
{
    NSBundle *_bundle;
}

+ (void)drawPathSeparatorInFrame:(struct CGRect)arg1 isActive:(BOOL)arg2 isDemiSize:(BOOL)arg3;
+ (id)inactiveTextColorForGradientStyle:(int)arg1;
+ (id)textColorForGradientStyle:(int)arg1;
+ (id)inactiveInteriorBorderColorForGradientStyle:(int)arg1;
+ (id)interiorBorderColorForGradientStyle:(int)arg1;
+ (id)interiorHighlightColorForGradientStyle:(int)arg1;
+ (id)inactiveBorderColorForGradientStyle:(int)arg1;
+ (id)borderColorForGradientStyle:(int)arg1;
+ (id)inactiveBackgroundGradientForGradientStyle:(int)arg1;
+ (id)backgroundGradientForGradientStyle:(int)arg1;
+ (id)currentTheme;
- (void).cxx_destruct;
@property(readonly) NSImage *traceTemplateImage;
@property(readonly) NSImage *appExtensionImage;
@property(readonly) NSImage *XPCServiceImage;
@property(readonly) NSGradient *active1Gradient;
@property(readonly) NSGradient *inactiveGradient;
@property(readonly) NSGradient *glassGradient;
@property(readonly) NSGradient *buttonSeparatorGradient;
@property(readonly) NSGradient *pathSeparatorHighlightGradientInactive;
@property(readonly) NSGradient *pathSeparatorGradientInactive;
@property(readonly) NSGradient *pathSeparatorHighlightGradient;
@property(readonly) NSGradient *pathSeparatorGradient;
@property(readonly) NSColor *glassSeparatorColor;
@property(readonly) NSColor *inactiveColor;
@property(readonly) NSColor *active1Color;
@property(readonly) NSColor *whiteShadow3Color;
@property(readonly) NSColor *blackColor;
@property(readonly) double pathSeparatorWidth;
- (id)selectedTrackBackgroundColor;
- (id)trackBackgroundColor;
@property(readonly) NSColor *activityViewScrollingTextFieldTextColorInactive;
@property(readonly) NSColor *activityViewScrollingTextFieldTextColorActive;
@property(readonly) NSImage *toolbarButtonStrategyThreadsAlternate;
@property(readonly) NSImage *toolbarButtonStrategyThreadsNatural;
- (id)_imageFactoryForStrategyThreads;
@property(readonly) NSImage *strategyThreadsTemplate;
@property(readonly) NSImage *toolbarButtonStrategyInstrumentsAlternate;
@property(readonly) NSImage *toolbarButtonStrategyInstrumentsNatural;
- (id)_imageFactoryForStrategyInstruments;
@property(readonly) NSImage *strategyInstrumentsTemplate;
@property(readonly) NSImage *toolbarButtonStrategyCPUAlternate;
@property(readonly) NSImage *toolbarButtonStrategyCPUNatural;
- (id)_imageFactoryForStrategyCPU;
@property(readonly) NSImage *strategyCPUTemplate;
@property(readonly) NSColor *inspectorAreaButtonBarBackgroundColor;
@property(readonly) NSColor *stroke7Color;
@property(readonly) NSColor *stroke5Color;
@property(readonly) NSColor *stroke4Color;
@property(readonly) NSColor *stroke3Color;
@property(readonly) NSColor *stroke2Color;
@property(readonly) NSColor *stroke1Color;
@property(readonly) NSImage *glassBarGearImage;
@property(readonly) DVTTheme *currentDVTTheme;
- (id)init;

@end

@interface XRThread : NSObject <NSCoding, NSCopying>
{
    id <CommonRawStack> _creationBackTrace;
    XRThread *_parent;
    NSMutableArray *_children;
    XRDevice *_device;
    NSMutableDictionary *_attributes;
    XRTrace *_traceNotRetained;
    XRThreadElement *_element;
    BOOL _threadWasDeserialized;
}

+ (id)threadNameFromSymbolName:(id)arg1;
+ (void)initialize;
- (void).cxx_destruct;
- (long long)sortByProcess:(id)arg1;
- (int)pid;
- (void)setPid:(int)arg1;
- (id)execIconName;
- (void)setExecIconName:(id)arg1;
- (id)iconForExecutable;
- (id)smallIconForExecutable;
- (id)_faultIcon:(BOOL)arg1;
- (void)setExecName:(id)arg1;
- (id)execName;
- (id)attributes;
- (void)setParent:(id)arg1;
- (id)parent;
- (void)addChild:(id)arg1;
- (id)children;
- (id)description;
- (BOOL)hasOverrideName;
- (void)overrideName:(id)arg1;
- (id)name;
- (id)procExecName;
- (id)simpleDisplayName;
- (id)creationBackTrace;
- (unsigned int)serialNumber;
- (unsigned long long)threadIdentifier;
- (id)trace;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setCreationBacktrace:(id)arg1;
- (void)merge:(id)arg1;
- (void)addElementAttributes:(id)arg1;
- (id)populatedElement;
- (id)element;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)initThread:(unsigned long long)arg1 creationBackTrace:(id)arg2 forTrace:(id)arg3 withRunNumber:(unsigned long long)arg4;
- (id)initThread:(unsigned long long)arg1 pid:(int)arg2 execName:(id)arg3 creationBackTrace:(id)arg4 device:(id)arg5 forTrace:(id)arg6 withRunNumber:(unsigned long long)arg7;

@end

@interface XRThreadDisplayObject : NSObject <NSCoding>
{
    unsigned int _tid;
    NSString *_threadName;
    NSString *_uniqueCachedDescription;
}

- (id)description;
- (id)name;
- (id)threadNumber;
- (unsigned int)tid;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithThread:(unsigned int)arg1 assignedName:(id)arg2;

@end

@interface XRThreadGroup : NSObject <NSCoding>
{
    NSString *_threadGroupName;
    int _type;
    NSMutableArray *_threads;
}

+ (void)initialize;
- (void).cxx_destruct;
- (id)description;
- (id)name;
- (id)threadWithIdentifier:(unsigned long long)arg1;
- (id)threads;
- (BOOL)removeThread:(id)arg1;
- (BOOL)addThread:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initThreadGroupName:(id)arg1 type:(int)arg2;

@end

@interface XRThreadStateFormatter : NSFormatter
{
}

+ (id)stringForObjectValue:(id)arg1;
+ (id)stringFromState:(int)arg1;
+ (id)stringFromNumber:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromNumber:(id)arg1;

@end

@interface XRThreadStrategyController : XRStrategyController
{
    NSMutableSet *_participatingThreadsList;
    NSMutableSet *_filteredThreadsList;
    NSMutableArray *_allProcessesList;
    NSArray *_selectedProcessesList;
    NSMutableArray *_allThreadsList;
    NSArray *_selectedThreadsList;
    NSMutableArray *_allCoresList;
    NSArray *_selectedCoresList;
    XRThread *_selectedThread;
    NSString *_displayStyle;
    BOOL _isRefreshingDataModel;
    int _sortBy;
}

+ (id)strategyInfo;
@property(nonatomic) int sortBy; // @synthesize sortBy=_sortBy;
- (void)recordDeviceInformation;
- (void)setDisplayStyle:(id)arg1;
- (id)displayStyle;
- (void)setSelectedThread:(id)arg1;
- (id)selectedThread;
- (void)setSelectedCoresList:(id)arg1;
- (id)selectedCoresList;
- (id)allCoresList;
- (id)_makeStrategyFilter;
- (void)setSelectedThreadsList:(id)arg1;
- (id)selectedThreadsList;
- (id)allThreadsList;
- (void)setSelectedProcessesList:(id)arg1;
- (id)selectedProcessesList;
- (id)allProcessesList;
- (id)filteredThreads;
- (id)participatingThreads;
- (void)reloadData;
- (void)refreshParticipatingThreadsList;
- (void)_recomputeFilteredList;
- (BOOL)getDataSource:(out struct NSObject **)arg1 forInstrument:(id)arg2;
- (void)dealloc;

@end

@interface XRThreadStrategyQuery : NSObject
{
    NSMutableIndexSet *_threadSerialNumbers;
    struct XRTimeRange _timeRange;
}

@property struct XRTimeRange timeRange; // @synthesize timeRange=_timeRange;
- (id)threadSerialNumbers;
- (void)removeAllThreads;
- (void)addAllThreads;
- (void)addThread:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRTrackSegment : PFTTrackSegment
{
    NSMutableArray *_graphSequencesList;
    unsigned long long _cachingGraphCount;
    struct XRTimeRange _cachedRecordedTimeRange;
    BOOL _implementsBackgroundLabelAPI;
    BOOL _useOldProvidePointsAPI;
}

- (void)clearGraphCache;
- (struct XRTimeRange)purgeSequencesIntersectingRange:(struct XRTimeRange)arg1;
- (void)removeGraphListAtIndex:(long long)arg1;
- (void)insertGraphListAtIndex:(long long)arg1;
- (id)listAtIndex:(long long)arg1;
- (void)drawInRect:(struct CGRect)arg1 visibleRect:(struct CGRect)arg2 forInstrument:(id)arg3 usingScale:(struct CGSize)arg4 recordingHeadLocation:(double)arg5 inspectionHead:(double)arg6 userDraggingInspectionHead:(BOOL)arg7;
- (BOOL)requiresFullRepaint;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithTraceDocument:(id)arg1;

@end

@interface XRThreadTrackSegment : XRTrackSegment
{
    XRThread *_thread;
}

- (void)drawInRect:(struct CGRect)arg1 visibleRect:(struct CGRect)arg2 usingScale:(struct CGSize)arg3 recordingHeadLocation:(double)arg4 inspectionHead:(double)arg5 userDraggingInspectionHead:(BOOL)arg6;
- (id)thread;
- (void)setThread:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XRTimeDataElementFlag : XRTimeFlag
{
    NSString *_dataElementIdentifier;
    NSString *_dataElementStringValue;
}

+ (void)initialize;
- (id)dataElementsForContext:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 summary:(id)arg2 icon:(id)arg3 modifiable:(BOOL)arg4 global:(BOOL)arg5 timestamp:(unsigned long long)arg6 dataElementIdentifier:(id)arg7 dataElementStringValue:(id)arg8;

@end

@interface XRTimeDisplay : NSView
{
    int _appearanceType;
    XRLCDField *_lcd;
    NSProgressIndicator *_busySpinner;
    NSButton *_tcb;
    NSString *_label;
    NSButton *_backButton;
    NSButton *_forwardButton;
    NSImageView *_deviceGlyph;
    BOOL _shouldDisplayDeviceGlyph;
    BOOL _shouldDisplayBusySpinner;
}

- (void)setFrameSize:(struct CGSize)arg1;
- (void)resetCursorRects;
- (void)setBusySpinner:(BOOL)arg1;
- (void)setShowsDeviceGlyph:(BOOL)arg1;
- (void)_showDeviceGlyph;
- (void)setLabel:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (int)appearanceType;
- (void)setAppearanceType:(int)arg1;
- (id)forwardButton;
- (id)backButton;
- (id)timeControl;
- (id)lcd;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface XRToolbarButtonImageStrategyCPU : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;

@end

@interface XRToolbarButtonImageStrategyInstruments : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;

@end

@interface XRToolbarButtonImageStrategyThreads : DVTToolbarButtonImageFactory
{
}

- (id)templateImageForButton;

@end

@interface XRTrace : NSObject <XRDeviceObserver, XRTemplateProtocol>
{
    NSURL *_outputURL;
    BOOL _shouldKeepOriginalDirectory;
    NSURL *_previousTemplateURL;
    PFTInstrumentList *_basicInstruments;
    PFTInstrumentList *_recordingInstruments;
    PFTInstrumentCommand *_instrumentCommand;
    long long _loadedRunNumber;
    XRRunListData *_runData;
    NSAttributedString *_templateDescription;
    NSString *_templateIconURL;
    NSString *_documentUUID;
    NSTimer *_timerTick;
    NSTimer *_timerHalfTick;
    NSTimer *_timeLimitTimer;
    BOOL _paused;
    XRRecordModeOptions *_recordOptions;
    BOOL _verbose;
    XRFlagController *_flagController;
    XRWorkTracker *_workTracker;
    XRStrategyManager *_strategyManager;
    XRDevice *_device;
    XRPMDevice *_targetPMDevice;
    NSMutableDictionary *_cpuFormulaNamesToText;
    NSMutableDictionary *_cpuPMFormulasDictionary;
    id _owner;
    id <NSObject> _suspendIdleToken;
    BOOL _localCoreProfileIsBlessed;
    NSMapTable *_currentRunsTapTokens;
    XRAnalysisCoreSpace *_coreSpace;
}

+ (id)templateItemsRetainBlank:(BOOL)arg1;
+ (id)defaultAndCustomTemplatePaths;
+ (id)customTemplatePaths;
+ (id)defaultTemplatePaths;
+ (id)pathForPlatform:(id)arg1;
+ (void)initialize;
+ (BOOL)isRunningCommandLine;
@property(readonly, nonatomic) XRAnalysisCoreSpace *coreSpace; // @synthesize coreSpace=_coreSpace;
- (void)setTimeInfo:(const struct _XRDeviceTimeInfo *)arg1 forDevice:(id)arg2 andRunNumber:(unsigned long long)arg3;
- (struct _XRDeviceTimeInfo)timeInfoForDevice:(id)arg1 andRunNumber:(long long)arg2;
- (id)strategyManager;
- (id)workTracker;
- (void)unregisterFlag:(id)arg1 forRun:(long long)arg2;
- (void)registerFlag:(id)arg1 forRun:(long long)arg2;
- (void)registerFlag:(id)arg1 forRun:(long long)arg2 displayed:(BOOL)arg3;
- (void)_selectedRunChanged:(id)arg1;
- (id)flagController;
- (void)mergeRecordOptionsWith:(id)arg1;
- (void)setRecordModeOptions:(id)arg1;
- (id)recordModeOptions;
- (void)close;
- (void)setDocumentUUID:(id)arg1;
- (id)documentUUID;
- (BOOL)saveDocument:(id)arg1 saveAllRuns:(BOOL)arg2 error:(id *)arg3;
- (BOOL)_copySubPath:(id)arg1 fromOldArchivePath:(id)arg2 toNewArchivePath:(id)arg3 addToPathsList:(id)arg4 error:(id *)arg5;
- (BOOL)_copyDataForRunNumber:(long long)arg1 instrument:(id)arg2 fromOldArchivePath:(id)arg3 toNewArchivePath:(id)arg4 addToPathsList:(id)arg5 error:(id *)arg6;
- (void)_cleanPaths:(id)arg1 excluding:(id)arg2;
- (BOOL)_conditionalCreateOutputDirectory:(id)arg1 addToPathsList:(id)arg2 error:(id *)arg3;
- (BOOL)loadDocument:(id)arg1 error:(id *)arg2;
- (BOOL)saveTemplate:(id)arg1 error:(id *)arg2;
- (BOOL)loadTemplate:(id)arg1 preserveRunHistory:(BOOL)arg2 error:(id *)arg3;
- (id)templateDescrption;
- (void)setTemplateDescription:(id)arg1;
- (id)templateIconURL;
- (void)setTemplateIconURL:(id)arg1;
- (void)_runTimerLimitReached:(id)arg1;
- (void)_runTimerHalfTickFireMethod:(id)arg1;
- (void)_runTimerTickFireMethod:(id)arg1;
- (void)startAdHocInstrument:(id)arg1;
- (void)_runDidEnd:(id)arg1;
- (void)togglePauseCommand;
- (void)endCommand;
- (BOOL)startCommandWithPurpose:(int)arg1;
- (void)_releaseSuspendToken;
- (void)_acquireSuspendToken;
- (void)synthesizeRunDataForImportRunNumber:(long long)arg1;
- (void)_recordRunInformation;
- (void)_recordArchitectureNotification:(id)arg1;
- (BOOL)canPerformCommand;
- (long long)currentRunNumber;
- (void)deleteRunNumber:(long long)arg1;
- (void)promoteRunNumber:(long long)arg1;
- (id)runData;
- (void)setRunData:(id)arg1;
- (BOOL)isRunning;
- (void)setInstrumentCommand:(id)arg1;
- (id)instrumentCommand;
- (id)peersOfInstrument:(id)arg1;
- (id)instrumentWithUUID:(id)arg1;
- (id)recordingInstruments;
- (id)basicInstruments;
- (void)reportError:(id)arg1;
- (void)setVerbose:(BOOL)arg1;
- (BOOL)verbose;
- (id)outputURL;
- (void)setOwner:(id)arg1;
- (id)owner;
- (void)handleDeviceNotification:(id)arg1;
- (void)dealloc;
- (id)initWithOutputURL:(id)arg1 forCommandLine:(BOOL)arg2;
- (id)allCores;
- (int)numberOfCpus;
- (void)recordHardwareInformation:(id)arg1;
- (void)recordHardwareInformation:(id)arg1 forRunNumber:(unsigned long long)arg2;
- (id)temporaryFormulaEvaluatorForFormulaText:(id)arg1;
- (id)formulaEvaluatorNamed:(id)arg1;
- (void)removeFormulaNamed:(id)arg1;
- (void)modifyFormulaNamed:(id)arg1 withNewText:(id)arg2;
- (void)addFormulaNamed:(id)arg1 text:(id)arg2;
- (id)cpuFormulaNamesToText;
- (void)loadPMDevice;
- (void)setTargetPMDevice:(id)arg1;
- (id)targetPMDevice;
- (void)setTargetDevice:(id)arg1;
- (id)targetDevice;
- (void)targetDeviceChanged:(id)arg1;
- (void)awakeFromTemplate;
- (void)coreProfileLoaded:(id)arg1;
- (void)_coreProfileLoaded;
- (void)_stopRecordingIntoAnalysisCore;
- (void)_startRecordingIntoAnalysisCore;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTrackMarkerGroup : NSObject
{
    NSMutableArray *_markers;
    unsigned long long _markerCount;
    NSString *_groupName;
    double _xLocation;
}

@property unsigned long long markerCount; // @synthesize markerCount=_markerCount;
@property(readonly) NSArray *markers; // @synthesize markers=_markers;
@property double xLocation; // @synthesize xLocation=_xLocation;
@property(readonly) NSString *groupName; // @synthesize groupName=_groupName;
- (void)hideMarkers;
- (void)removeMarkerAtIndex:(unsigned long long)arg1;
- (void)removeMarkers;
- (id)markerAtIndex:(unsigned long long)arg1;
- (BOOL)addMarkerAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithGroupName:(id)arg1 xLocation:(double)arg2 markerCount:(unsigned long long)arg3;

@end

@interface XRTransparentButtonCell : XRFourStateButtonCell
{
}

- (BOOL)isOpaque;

@end

@interface XRTrigger : NSObject <NSCoding>
{
    NSString *_displayName;
    NSString *_targetInstrumentUUID;
    NSString *_displayActionName;
    NSString *_action;
}

@property(copy) NSString *action; // @synthesize action=_action;
@property(copy) NSString *displayActionName; // @synthesize displayActionName=_displayActionName;
@property(copy) NSString *targetInstrumentUUID; // @synthesize targetInstrumentUUID=_targetInstrumentUUID;
@property(copy) NSString *displayName; // @synthesize displayName=_displayName;
- (void)fireTriggerFromInstrument:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithDisplayName:(id)arg1 targetUUID:(id)arg2 displayActionName:(id)arg3 actionName:(id)arg4;

@end

@interface XRUIStackFrameImpl : NSObject <XRUIStackFrame, CommonSymbol>
{
    NSString *_library;
    NSString *_symbolName;
    NSString *_path;
    long long _lineNumber;
}

@property(readonly, copy) NSString *description;
- (id)libraryPath;
- (id)libraryName;
- (id)symbolName;
- (unsigned long long)lineNumber;
- (id)sourcePath;
- (int)pid;
- (unsigned long long)address;
- (long long)lineNumberForDisplay;
- (id)pathForDisplay;
- (id)symbolNameForUse;
- (id)symbolNameForDisplay;
- (id)libraryForDisplay;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithLibrary:(id)arg1 symbolName:(id)arg2 path:(id)arg3 lineNumber:(long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRUserTimeFormatter : NSNumberFormatter
{
}

+ (id)stringForNanoseconds:(unsigned long long)arg1;
- (id)stringForObjectValue:(id)arg1;

@end

@interface XRUserTimeFormatterWithDashedZeroes : NSNumberFormatter
{
}

- (id)stringForObjectValue:(id)arg1;

@end

@interface XRWeakViewControllerReference : NSObject
{
    NSViewController *_weakViewController;
}

@property(nonatomic) __weak NSViewController *weakViewController; // @synthesize weakViewController=_weakViewController;
- (void).cxx_destruct;

@end

@interface XRWorkTracker : NSObject
{
    NSMutableDictionary *_workItems;
    unsigned long long _nextWorkIdentifier;
    NSString *_workDescription;
    unsigned long long _totalNumberOfWorkItems;
    unsigned long long _numberOfWorkItemsCompleted;
    unsigned long long _futureValue;
    BOOL _isCancelled;
    BOOL _canCancel;
    XRTrace *_trace;
}

@property(nonatomic) BOOL isCancelled; // @synthesize isCancelled=_isCancelled;
@property(nonatomic) unsigned long long futureValue; // @synthesize futureValue=_futureValue;
@property(nonatomic) unsigned long long numberOfWorkItemsCompleted; // @synthesize numberOfWorkItemsCompleted=_numberOfWorkItemsCompleted;
@property(nonatomic) unsigned long long totalNumberOfWorkItems; // @synthesize totalNumberOfWorkItems=_totalNumberOfWorkItems;
@property(copy, nonatomic) NSString *workDescription; // @synthesize workDescription=_workDescription;
- (void)_completedAllWork;
- (void)cancelWorkWithIdentifier:(unsigned long long)arg1;
- (BOOL)noteFutureProgressForWorkWithIdentifier:(unsigned long long)arg1 numberOfWorkUnitsToBeCompleted:(unsigned long long)arg2;
- (BOOL)continueProgressForWorkWithIdentifier:(unsigned long long)arg1 numberOfWorkUnitsCompleted:(unsigned long long)arg2;
- (unsigned long long)startProgress:(id)arg1 totalNumberOfWorkUnits:(unsigned long long)arg2 canCancel:(BOOL)arg3;
- (BOOL)canCancel;
- (BOOL)hasWork;
- (id)trace;
- (void)dealloc;
- (id)initWithTrace:(id)arg1;

@end

@interface XRXMLInstrumentTypeData : XRExtensionInstrumentTypeData <XRInstrumentTypeData>
{
}

- (id)initWithXMLElement:(id)arg1 baseExtension:(id)arg2;

// Remaining properties
@property(readonly) BOOL beta;
@property(readonly) NSArray *brushNames;
@property(readonly) BOOL canReplay;
@property(readonly) NSString *category;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned int deckUnits;
@property(readonly) BOOL deprecated;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSString *helpURL;
@property(readonly) NSImage *icon;
@property(readonly) NSString *identifier;
@property(readonly) NSString *instrumentClassName;
@property(readonly) NSArray *keywords;
@property(readonly) NSString *name;
@property(readonly) DVTPlugIn *plugIn;
@property(readonly) Class superclass;
@property(readonly) NSString *uuid;

@end

@interface _BindObject : NSObject
{
    id _value;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)validateStringValue:(id *)arg1 error:(id *)arg2;
- (void)setObjectValue:(id)arg1;
- (id)objectValue;
- (void)setStringValue:(id)arg1;
- (id)stringValue;

@end

