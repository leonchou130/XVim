//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct XRAnalysisCoreReadCursor {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
};

struct XRAnalysisCoreTableBindings;

struct XRAnalysisCoreTableColumnInternals;

struct XRAnalysisCoreWriteCursor {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
    struct bitset<64> _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct _XRStorageManagerExternalAccessPack *_field6;
    vector_5b13af2a *_field7;
    struct _XRStorageManagerCursor _field8;
};

struct XRBinderEngine {
    void *_env;
    NSObject *_delegate;
    CDStruct_a3227609 _consoleNameRegex;
    CDStruct_a3227609 _dumpStringRegex;
    NSMutableString *_dumpedString;
    NSMutableAttributedString *_consoleContents;
    NSString *_currentCommand;
    unsigned long long _commandStringLoc;
    unsigned int _strongAddressType;
    NSMutableSet *_clipsHeldObjects;
};

struct XRCLIPS {
    void *_field1;
    id _field2;
    CDStruct_a3227609 _field3;
    CDStruct_a3227609 _field4;
    id _field5;
    id _field6;
    id _field7;
    unsigned long long _field8;
    unsigned int _field9;
    id _field10;
};

struct XRCLIPSModelerEngine {
    void *_env;
    NSObject *_delegate;
    CDStruct_a3227609 _consoleNameRegex;
    CDStruct_a3227609 _dumpStringRegex;
    NSMutableString *_dumpedString;
    NSMutableAttributedString *_consoleContents;
    NSString *_currentCommand;
    unsigned long long _commandStringLoc;
    unsigned int _strongAddressType;
    NSMutableSet *_clipsHeldObjects;
    struct XRAnalysisCoreTableBindings *_currentBindings;
    struct XRAnalysisCoreWriteCursor *_writeCursor;
    unsigned int _currentTableID;
    struct unordered_map<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>>> _columnMapsByTableID;
    unsigned long long _rowsCreated;
    unsigned long long _rowsRead;
};

struct XREventTypeActions {
    Class typeClass;
    unsigned int *fieldOffsets;
    unsigned int initCount;
    unsigned int **preorders;
    CDUnknownBlockType *initializers;
};

struct XRSpatialIndex<XRT50_C22_Strategy>;

struct XRSpatialIndex<XRTD50_CC22_Strategy>;

struct XRSpatialIndexMP<_XRIndexedStorageBasic_MPStrategy<XRT50_C22_Strategy>> {
    struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _field1;
    struct vector<XRSpatialIndex<XRT50_C22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRT50_C22_Strategy>*>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct _XRIndexedStorageBasic_MPStrategy<XRT50_C22_Strategy> *_field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
};

struct XRSpatialIndexMP<_XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy>> {
    struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _field1;
    struct vector<XRSpatialIndex<XRTD50_CC22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRTD50_CC22_Strategy>*>> _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    struct _XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy> *_field5;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field6;
};

struct XRStorageHeader {
    unsigned int magic;
    unsigned int version;
    unsigned int header_size;
    unsigned int _data_start;
    unsigned int _event_size;
    unsigned int _chunk_size;
    unsigned int events_per_chunk;
    long long data_end;
};

struct XRStorageManagerLock {
    struct _opaque_pthread_mutex_t _lock;
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } _cond;
    int _readers;
    int _writers;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct XRVMPagePool {
    CDUnknownFunctionPointerType *_vptr$XRSpatialIndexPagePool;
    _Bool _writable;
    unsigned int _pagesInSuperPage;
    int _fileFD;
    long long _offset;
    unsigned long long _pageSize;
    int _pagesRetained;
    unsigned int _pageCount;
    struct deque<char *, std::__1::allocator<char *>> _mappings;
};

struct _MergingCursor {
    CDUnknownFunctionPointerType *_vptr$XRAnalysisCoreReadCursor;
    unsigned int _currentTableID;
    struct priority_queue<_TimeOrderedCursor *, std::__1::vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>>, _TimeOrderedCursorGreater> _timeOrderedCursorPrioQueue;
    struct unordered_multimap<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _aliasMMap;
    struct __hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> _currentTableID;
    struct __hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> _currentTableIDsEnd;
};

struct _TimeOrderedCursor;

struct _XRAnalysisCoreReadCursorSeekable {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct function<signed char ()> _field3;
    unsigned int _field4;
    vector_5b13af2a *_field5;
    struct _XRStorageManagerCursor _field6;
};

struct _XRIndexedStorageBasic_MPStrategy<XRT50_C22_Strategy> {
    unsigned int _field1;
    struct _XRStorageManagerExternalAccessPack *_field2;
    id _field3;
};

struct _XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy> {
    unsigned int _field1;
    struct _XRStorageManagerExternalAccessPack *_field2;
    id _field3;
};

struct _XRStorageManagerAccess {
    struct unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> *_reuseMap;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> *_reuseIdentifiers;
    struct XRVMPagePool _pool;
    struct XRStorageHeader _storageHeader;
    struct XREventTypeActions _typeActions;
    XRDescriptorSubstitutions *_substitutions;
    unsigned int _nextEventIdentifier;
    unsigned int _monotonicNextEventIdentifier;
};

struct _XRStorageManagerAccessToken {
    struct bitset<3> _field1;
    struct XRStorageManagerLock *_field2;
};

struct _XRStorageManagerCursor {
    unsigned int *_field1;
    char *_field2;
    char *_field3;
    _Bool _field4;
    struct XRVMPagePool *_field5;
    struct _XRStorageManagerDirectAddress _field6;
};

struct _XRStorageManagerDirectAddress {
    unsigned int _field1;
    unsigned int _field2;
};

struct _XRStorageManagerExternalAccessPack {
    struct _XRStorageManagerAccessToken _field1;
    struct _XRStorageManagerAccess *_field2;
};

struct __hash_map_const_iterator<std::__1::__hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> {
    struct __hash_const_iterator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *__node_;
    } __i_;
};

struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>;

struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>;

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long _field1;
                    unsigned long long _field2;
                    char *_field3;
                } _field1;
                struct __short {
                    union {
                        unsigned char _field1;
                        char _field2;
                    } _field1;
                    char _field2[23];
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct bitset<3> {
    unsigned long long _field1;
};

struct bitset<64> {
    unsigned long long _field1;
};

struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> {
    struct __split_buffer<_XRStorageManagerDirectAddress *, std::__1::allocator<_XRStorageManagerDirectAddress *>> {
        struct _XRStorageManagerDirectAddress **__first_;
        struct _XRStorageManagerDirectAddress **__begin_;
        struct _XRStorageManagerDirectAddress **__end_;
        struct __compressed_pair<_XRStorageManagerDirectAddress **, std::__1::allocator<_XRStorageManagerDirectAddress *>> {
            struct _XRStorageManagerDirectAddress **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<_XRStorageManagerDirectAddress>> {
        unsigned long long __first_;
    } __size_;
};

struct deque<char *, std::__1::allocator<char *>> {
    struct __split_buffer<char **, std::__1::allocator<char **>> {
        char ***__first_;
        char ***__begin_;
        char ***__end_;
        struct __compressed_pair<char ***, std::__1::allocator<char **>> {
            char ***__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<char *>> {
        unsigned long long __first_;
    } __size_;
};

struct function<signed char ()> {
    struct type _field1;
    struct __base<signed char ()> *_field2;
};

struct map<unsigned int, XRAnalysisCoreQueryDiscreteFilter, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XRAnalysisCoreQueryDiscreteFilter>>> {
    struct __tree<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, XRAnalysisCoreQueryRangeFilter, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XRAnalysisCoreQueryRangeFilter>>> {
    struct __tree<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct priority_queue<_TimeOrderedCursor *, std::__1::vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>>, _TimeOrderedCursorGreater> {
    struct vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>> c;
    struct comp;
};

struct re_guts;

struct type {
    unsigned char _field1[24];
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, std::__1::unordered_map<unsigned long, unsigned int, std::__1::hash<unsigned long>, std::__1::equal_to<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned int>>>>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>>;

struct unordered_multimap<unsigned int, unsigned int, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, unsigned int>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned int, unsigned int>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, unsigned int>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vector<XRAnalysisCoreTableColumnInternals, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
    struct XRAnalysisCoreTableColumnInternals *__begin_;
    struct XRAnalysisCoreTableColumnInternals *__end_;
    struct __compressed_pair<XRAnalysisCoreTableColumnInternals *, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
        struct XRAnalysisCoreTableColumnInternals *__first_;
    } __end_cap_;
};

struct vector<XRSpatialIndex<XRT50_C22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRT50_C22_Strategy>*>> {
    struct XRSpatialIndex<XRT50_C22_Strategy> **_field1;
    struct XRSpatialIndex<XRT50_C22_Strategy> **_field2;
    struct __compressed_pair<XRSpatialIndex<XRT50_C22_Strategy>**, std::__1::allocator<XRSpatialIndex<XRT50_C22_Strategy>*>> {
        struct XRSpatialIndex<XRT50_C22_Strategy> **_field1;
    } _field3;
};

struct vector<XRSpatialIndex<XRTD50_CC22_Strategy>*, std::__1::allocator<XRSpatialIndex<XRTD50_CC22_Strategy>*>> {
    struct XRSpatialIndex<XRTD50_CC22_Strategy> **_field1;
    struct XRSpatialIndex<XRTD50_CC22_Strategy> **_field2;
    struct __compressed_pair<XRSpatialIndex<XRTD50_CC22_Strategy>**, std::__1::allocator<XRSpatialIndex<XRTD50_CC22_Strategy>*>> {
        struct XRSpatialIndex<XRTD50_CC22_Strategy> **_field1;
    } _field3;
};

struct vector<_TimeOrderedCursor *, std::__1::allocator<_TimeOrderedCursor *>> {
    struct _TimeOrderedCursor **__begin_;
    struct _TimeOrderedCursor **__end_;
    struct __compressed_pair<_TimeOrderedCursor **, std::__1::allocator<_TimeOrderedCursor *>> {
        struct _TimeOrderedCursor **__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    int re_magic;
    unsigned long long re_nsub;
    char *re_endp;
    struct re_guts *re_g;
} CDStruct_a3227609;

// Template types
typedef struct map<unsigned int, XRAnalysisCoreQueryDiscreteFilter, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XRAnalysisCoreQueryDiscreteFilter>>> {
    struct __tree<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryDiscreteFilter>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_c516c4f7;

typedef struct map<unsigned int, XRAnalysisCoreQueryRangeFilter, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XRAnalysisCoreQueryRangeFilter>>> {
    struct __tree<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XRAnalysisCoreQueryRangeFilter>, std::__1::less<unsigned int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
} map_58539d56;

typedef struct vector<XRAnalysisCoreTableColumnInternals, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
    struct XRAnalysisCoreTableColumnInternals *__begin_;
    struct XRAnalysisCoreTableColumnInternals *__end_;
    struct __compressed_pair<XRAnalysisCoreTableColumnInternals *, std::__1::allocator<XRAnalysisCoreTableColumnInternals>> {
        struct XRAnalysisCoreTableColumnInternals *__first_;
    } __end_cap_;
} vector_5b13af2a;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsAnalysisCore.framework/Versions/A/InstrumentsAnalysisCore
// UUID: 255A1D37-E2E1-355E-90FF-EF1093E64053
//
//                           Arch: x86_64
//                Current version: 56156.0.0
//          Compatibility version: 1.0.0
//                 Source version: 56156.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol XRAnalysisCoreModeler <NSObject>
- (void)populateSpeculationTables:(const struct XRAnalysisCoreTableBindings *)arg1 eventHorizon:(unsigned long long)arg2 registry:(id <XRAnalysisCoreRegistry>)arg3;
- (void)populateOutputTables:(const struct XRAnalysisCoreTableBindings *)arg1 usingObserverations:(struct XRAnalysisCoreReadCursor *)arg2 registry:(id <XRAnalysisCoreRegistry>)arg3;
- (void)resetModelerStateWithTables:(id <XRIntKeyedDictionaryImmutable>)arg1 registry:(id <XRAnalysisCoreRegistry>)arg2;
@end

@protocol XRAnalysisCoreModelerFactory <NSObject>
- (void)instanceModelersInSolution:(XRAnalysisCoreModelerBindingSolution *)arg1;
@end

@protocol XRAnalysisCoreQueryHandler <NSObject>
- (void)reduceFromLocalResults:(NSArray *)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(NSMutableDictionary *)arg3 core:(id <XRAnalysisCoreReadOnly>)arg4 registry:(id <XRAnalysisCoreRegistry>)arg5 rowIterator:(struct XRAnalysisCoreReadCursor *)arg6;
@end

@protocol XRAnalysisCoreReadOnly <NSObject>
- (XRAnalysisCoreTableSchema *)schemaWithName:(NSString *)arg1;
- (NSString *)coreSubpath;
@end

@protocol XRAnalysisCoreRegistry <NSObject>
@end

@interface XRAnalysisCore : NSObject <XRAnalysisCoreReadOnly, XRAnalysisCoreRegistry>
{
    XRAnalysisCorePathManager *_pathMan;
    XRAnalysisCoreTableManager *_tableMan;
    NSString *_mySubpath;
    struct XRBinderEngine _binderEngine;
    XRIntKeyedDictionary *_readOnlySpecsByID;
    XRIntKeyedDictionary *_appendOnlyTablesByID;
    NSMutableDictionary *_knownSchemasByName;
    NSMutableArray *_binderInvocations;
    XRAnalysisCoreModelerBindingSolution *_modelerBindingSolution;
    NSMutableSet *_inputTableIDs;
    XRAnalysisCoreCLIPSModelerFactory *_clipsModelerFactory;
    NSMutableArray *_modelerFactories;
    NSArray *_modelerTablePairs;
    _XRWeakProxy *_weakProxyToMe;
    unsigned long long _lastEventHorizon;
}

+ (void)initialize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)debugEnumerateModelerSolution:(CDUnknownBlockType)arg1;
- (void)debugEnumerateInternalTables:(CDUnknownBlockType)arg1;
- (id)debugStringForTable:(id)arg1;
- (void)readRowsInArray:(id)arg1 startingAt:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (id)selectRowsWithQuery:(id)arg1 tableID:(unsigned int)arg2;
- (void)query:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3;
- (void)moveEventHorizon:(unsigned long long)arg1;
- (void)populateTableIDs:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)tableWithID:(unsigned int)arg1;
- (void)enumerateTables:(CDUnknownBlockType)arg1;
- (void)_addModelerInstanceForClass:(id)arg1 bindings:(id)arg2;
- (unsigned int)_createAppendOnlyTableForTableID:(id)arg1;
- (id)_bindStore:(id)arg1 table:(id)arg2 side:(id)arg3;
- (void)_reportUnboundAppendTableID:(id)arg1;
- (unsigned int)_reserveTableID;
- (id)_createIndexedStorageWithSchema:(id)arg1 attributes:(id)arg2;
- (void)_dictionary:(id)arg1 setValue:(id)arg2 forKey:(id)arg3;
- (id)_makeMutableDictionary;
- (void)_prepareToReceiveBindingSolution;
- (void)engage;
- (void)realizeBindingSolution;
- (void)solveBindingProblem;
- (void)removeRequiredTableWithID:(unsigned int)arg1;
- (unsigned int)addRequiredTableWithSpec:(id)arg1;
- (void)clipsDidReset:(struct XRCLIPS *)arg1;
- (void)clipsDidClear:(struct XRCLIPS *)arg1;
- (void)rulesEngine:(int)arg1 executeCommand:(id)arg2 moduleName:(id)arg3;
- (id)rulesEngine:(int)arg1 swapConsoleBuffer:(id)arg2;
- (id)rulesEngine:(int)arg1 rulesForModule:(id)arg2;
- (id)rulesEngine:(int)arg1 factsForModule:(id)arg2;
- (id)rulesEngineModuleNames:(int)arg1;
- (id)engineeringTypeMnemonicForTypeID:(int)arg1;
- (id)schemaWithName:(id)arg1;
- (void)enumerateKnownSchemas:(CDUnknownBlockType)arg1;
- (void)moveToSubpath:(id)arg1;
- (id)coreSubpath;
- (id)initWithPathManager:(id)arg1 dataSubpath:(id)arg2;
- (void)_scanURLForCoreExtensions:(id)arg1;
- (void)_importSchemasXMLFromURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreCLIPSModeler : NSObject <XRAnalysisCoreModeler>
{
    XRAnalysisCorePathManager *_pathMan;
    struct XRCLIPSModelerEngine _engine;
    NSMutableDictionary *_loadedRuleURLsByModelerID;
    NSMutableArray *_invocations;
    unsigned long long _eventsHandled;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
- (void)populateSpeculationTables:(const struct XRAnalysisCoreTableBindings *)arg1 eventHorizon:(unsigned long long)arg2 registry:(id)arg3;
- (void)populateOutputTables:(const struct XRAnalysisCoreTableBindings *)arg1 usingObserverations:(struct XRAnalysisCoreReadCursor *)arg2 registry:(id)arg3;
- (void)resetModelerStateWithTables:(id)arg1 registry:(id)arg2;
- (void)instanceModeler:(id)arg1 fromRulesAtURL:(id)arg2;
- (id)init;
- (id)initWithPathManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreCLIPSModelerFactory : NSObject <XRAnalysisCoreModelerFactory>
{
    NSMutableDictionary *_rulesURLByPath;
    XRAnalysisCoreCLIPSModeler *_commonModeler;
}

- (void).cxx_destruct;
- (void)prepareForNewModelerSolution;
- (struct XRCLIPS *)rulesEngine;
- (void)instanceModelersInSolution:(id)arg1;
- (void)registerRulesURL:(id)arg1 modelerClassName:(id)arg2;
- (id)init;
- (id)initWithPathManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRAnalysisCoreModelerBindingSolution : NSObject
{
    NSMutableArray *_instances;
}

- (void).cxx_destruct;
- (id)modelerTableSetPairs;
- (BOOL)isFullyInstantiated;
- (void)enumerateInstancesWithBlock:(CDUnknownBlockType)arg1;
- (void)addInstanceToSolution:(id)arg1;
- (id)init;

@end

@interface XRAnalysisCoreModelerInstance : NSObject
{
    XRIntKeyedDictionary *_bindings;
    NSString *_modelerClassName;
    id <XRAnalysisCoreModeler> _modeler;
}

@property(retain, nonatomic) id <XRAnalysisCoreModeler> modeler; // @synthesize modeler=_modeler;
@property(readonly, nonatomic) NSString *modelerClassName; // @synthesize modelerClassName=_modelerClassName;
- (void).cxx_destruct;
- (void)addTable:(id)arg1 tableID:(unsigned int)arg2;
@property(readonly, nonatomic) id <XRIntKeyedDictionaryImmutable> tablesByID;
- (id)init;
- (id)initWithClassName:(id)arg1;

@end

@interface XRAnalysisCoreModelerTableSetPair : NSObject
{
    id <XRAnalysisCoreModeler> _modeler;
    XRIntKeyedDictionary *_tablesByID;
}

@property(retain, nonatomic) XRIntKeyedDictionary *tablesByID; // @synthesize tablesByID=_tablesByID;
@property(retain, nonatomic) id <XRAnalysisCoreModeler> modeler; // @synthesize modeler=_modeler;
- (void).cxx_destruct;

@end

@interface XRAnalysisCorePathManager : NSObject
{
    BOOL _doneValidating;
    BOOL _isValid;
    NSMutableSet *_paths;
    NSMutableDictionary *_mappings;
    NSMutableSet *_privateSubpaths;
    NSURL *_privateLocalBaseURL;
    unsigned long long _nextTempID;
    NSURL *_baseURL;
}

+ (id)defaultExperimentsURL;
+ (id)defaultGlobalConfigURL;
@property(readonly) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void).cxx_destruct;
- (void)enumerateSubpathsAndURLs:(CDUnknownBlockType)arg1;
- (id)copyURL:(id)arg1 asSubpath:(id)arg2 error:(id *)arg3;
- (BOOL)moveSubpathFrom:(id)arg1 to:(id)arg2 error:(id *)arg3;
- (BOOL)remapSubpath:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (id)localFileSystemDirectoryForSubpath:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)createLocalFileSystemDirectoryAtSubpath:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;
- (BOOL)validateWithError:(id *)arg1;
- (id)initWithBaseURL:(id)arg1;

@end

@interface XRAnalysisCoreRowArray : NSObject
{
    unsigned int _tableID;
    struct deque<_XRStorageManagerDirectAddress, std::__1::allocator<_XRStorageManagerDirectAddress>> _contents;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long count;

@end

@interface XRAnalysisCoreTable : NSObject
{
    id <XRAnalysisCoreReadOnly> _delegate;
    int _accessRights;
    XRAnalysisCoreTableSpec *_spec;
    XRIndexedStorage *_store;
}

@property(retain, nonatomic) XRIndexedStorage *store; // @synthesize store=_store;
@property(readonly) int accessRights; // @synthesize accessRights=_accessRights;
@property(readonly, nonatomic) XRAnalysisCoreTableSpec *spec; // @synthesize spec=_spec;
- (void).cxx_destruct;
@property(readonly, nonatomic) XRAnalysisCoreTableSchema *schema;
- (id)init;
- (id)initWithSpec:(id)arg1 accessRights:(int)arg2 delegate:(id)arg3;

@end

@interface XRAnalysisCoreTableColumn : NSObject
{
    XRFieldDescriptor *_fieldDescriptor;
    unsigned char _topologyFieldID;
    int _engineeringType;
    NSString *_mnemonic;
    NSString *_engineeringName;
}

@property(readonly) unsigned char topologyFieldID; // @synthesize topologyFieldID=_topologyFieldID;
@property(readonly) int engineeringType; // @synthesize engineeringType=_engineeringType;
@property(readonly) NSString *engineeringName; // @synthesize engineeringName=_engineeringName;
@property(readonly) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
- (void).cxx_destruct;
- (id)initWithEngineeringName:(id)arg1 mnemonic:(id)arg2 engineeringType:(int)arg3 topologyFieldID:(unsigned char)arg4;
@property(retain) XRFieldDescriptor *fieldDescriptor;

@end

__attribute__((visibility("hidden")))
@interface XRAnalysisCoreTableManager : NSObject
{
    XRAnalysisCorePathManager *_pathMan;
    NSMutableDictionary *_storesBySpec;
    NSMutableDictionary *_invalidStoresBySpec;
    XRIntKeyedDictionary *_tablesByID;
    unsigned long long _latestStoreIdx;
    unsigned int _nextAvailableTableID;
    id <XRAnalysisCoreReadOnly> _delegate;
}

- (void).cxx_destruct;
- (id)tableBoundToID:(unsigned int)arg1;
- (void)enumerateKnownTablesWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)reserveTableID;
- (id)bindTableID:(unsigned int)arg1 store:(id)arg2 side:(int)arg3;
- (void)wipeInvalidTables;
- (void)invalidateAllTables;
- (id)makeStoreWithSpec:(id)arg1;
- (id)init;
- (id)initWithPathManager:(id)arg1 delegate:(id)arg2;

@end

@interface XRAnalysisCoreTableQuery : NSObject
{
    XRAnalysisCoreTableSchema *_schema;
    map_58539d56 _rangeFilters;
    map_c516c4f7 _discreteFilters;
    struct XRTimeRange _timeRange;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)init;
- (void)setTimeRange:(struct XRTimeRange)arg1;
- (id)initWithSchema:(id)arg1;
- (void)setHighValue:(const void *)arg1 lowValue:(const void *)arg2 column:(unsigned int)arg3;
- (void)setDiscreteFilter:(id)arg1 column:(unsigned int)arg2;
- (struct XRTimeRange)timeRange;
- (const map_c516c4f7 *)discreteFilters;
- (const map_58539d56 *)rangeFilters;

@end

@interface XRAnalysisCoreTableSchema : NSObject
{
    vector_5b13af2a _colInternalsByID;
    NSArray *_colObjectsByID;
    NSDictionary *_columnIDsByMnemonic;
    int _topologyTypeID;
    NSString *_name;
}

+ (id)schemaFromXMLElement:(id)arg1;
@property(readonly) int topologyTypeID; // @synthesize topologyTypeID=_topologyTypeID;
@property(readonly) NSString *name; // @synthesize name=_name;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned int)columnIDForMnemonic:(id)arg1;
- (void)enumerateColumns:(CDUnknownBlockType)arg1;
- (id)columnForID:(unsigned int)arg1;
@property(readonly) unsigned long long columnCount;
- (id)initWithName:(id)arg1 topology:(int)arg2 columns:(id)arg3;
- (id)topologyFieldDescriptor;
- (id)columnObjectsByID;
- (const vector_5b13af2a *)columnInternalsByID;

@end

@interface XRAnalysisCoreTableSpec : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_schemaName;
    NSDictionary *_attributes;
}

+ (BOOL)supportsSecureCoding;
@property(readonly, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
@property(readonly, nonatomic) NSString *schemaName; // @synthesize schemaName=_schemaName;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithSchema:(id)arg1 attributes:(id)arg2;

@end

@interface XRDescriptorSubstitutions : NSObject <NSCoding>
{
    unsigned int _nextIdentifier;
    struct __CFDictionary *_valuesToIdentifiers;
    struct __CFDictionary *_identifiersToValues;
    struct _opaque_pthread_mutex_t _substitutionLock;
}

- (id)objectForSubstitutionIdentifier:(unsigned int)arg1;
- (unsigned int)substitutionIdentifierForObject:(id)arg1;
- (id)initWithOldCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_descriptorIvarInit;

@end

@interface XREventDescriptor : NSObject <NSCoding>
{
    Class _eventClass;
    unsigned int _minEventSize;
    unsigned int _maxEventSize;
    unsigned int _version;
    BOOL _variableSize;
    NSString *_name;
    NSString *_synopsis;
    NSString *_identifier;
    NSArray *_fields;
    NSMutableDictionary *_fieldsByName;
    NSDictionary *_props;
    NSMutableDictionary *_publicProps;
    XRDescriptorSubstitutions *_substitutions;
}

@property(readonly) NSMutableDictionary *properties; // @synthesize properties=_publicProps;
@property(copy, nonatomic) NSDictionary *archivedProperties; // @synthesize archivedProperties=_props;
@property(readonly) BOOL isSizeVariable; // @synthesize isSizeVariable=_variableSize;
@property(readonly) NSArray *fields; // @synthesize fields=_fields;
@property(readonly) unsigned int maxEventSize; // @synthesize maxEventSize=_maxEventSize;
@property(readonly) Class eventClass; // @synthesize eventClass=_eventClass;
@property(readonly) unsigned int version; // @synthesize version=_version;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)setSubstitutions:(id)arg1;
- (id)substitutions;
- (id)fieldWithName:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_setupFieldsByName;
- (id)initWithExtensionData:(id)arg1;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 synopsis:(id)arg3 eventClass:(Class)arg4 version:(unsigned int)arg5 minSize:(unsigned int)arg6 maxSize:(unsigned int)arg7;
- (id)initWithIdentifier:(id)arg1 name:(id)arg2 synopsis:(id)arg3 eventClass:(Class)arg4 version:(unsigned int)arg5 fields:(id)arg6;
- (id)_initWithIdentifier:(id)arg1 name:(id)arg2 synopsis:(id)arg3 eventClass:(Class)arg4 version:(unsigned int)arg5 minSize:(unsigned int)arg6 maxSize:(unsigned int)arg7 fields:(id)arg8;

@end

@interface XREventIDProxyArray : NSArray
{
    XRStorageManager *_storageManager;
    XRManagedIDArray *_representedIDs;
    unsigned int _timeRangeStartIndex;
    unsigned int _timeRangeEndIndex;
    unsigned int *_sortedOrder;
    unsigned int _sortedCount;
    NSSortDescriptor *_descriptorInUse;
    BOOL _descending;
}

- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (void)_reverseOrdering;
- (void)sortUsingDescriptors:(id)arg1;
- (BOOL)_validSortedOrder;
- (void)_clearSortedOrder;
- (unsigned int)identifierAtIndex:(unsigned long long)arg1;
- (void)enumerateIdentifiersUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateEventsUsingBlock:(CDUnknownBlockType)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (id)mutableCopy;
- (void)dealloc;
- (id)initWithStorageManager:(id)arg1 eventIDs:(id)arg2;

@end

@interface XRFieldDescriptor : NSObject <NSCoding>
{
    NSString *_name;
    int _type;
    unsigned int _index;
    unsigned int _multi;
}

+ (int)fieldTypeForString:(id)arg1;
@property(readonly) NSString *name; // @synthesize name=_name;
@property(readonly) int type; // @synthesize type=_type;
- (void).cxx_destruct;
@property(readonly) unsigned int size;
@property(readonly) unsigned int maxMultiples;
@property(readonly) unsigned int identifierHandle;
@property(readonly) unsigned int handle;
@property(readonly) BOOL isMultiField;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 index:(unsigned int)arg2 type:(int)arg3 multiples:(unsigned int)arg4;

@end

@interface XRIndexedStorage : NSObject
{
    XRAnalysisCoreTableSpec *_spec;
    XRAnalysisCoreTableSchema *_schema;
    XRStorageManager *_store;
    NSURL *_baseFileURL;
}

+ (id)storageWithSchema:(id)arg1 baseFileURL:(id)arg2;
+ (id)storageWithSchema:(id)arg1 baseFileURL:(id)arg2 spec:(id)arg3;
@property(readonly, nonatomic) NSURL *baseFileURL; // @synthesize baseFileURL=_baseFileURL;
@property(readonly, nonatomic) XRStorageManager *store; // @synthesize store=_store;
@property(readonly, nonatomic) XRAnalysisCoreTableSchema *schema; // @synthesize schema=_schema;
@property(readonly, nonatomic) XRAnalysisCoreTableSpec *spec; // @synthesize spec=_spec;
- (void).cxx_destruct;
- (void)grantExternalReadWriteAccess:(struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)grantExternalReadOnlyAccess:(struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)query:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3;
- (BOOL)optimize;
- (id)initWithSchema:(id)arg1 baseFileURL:(id)arg2;
- (id)initWithSchema:(id)arg1 baseFileURL:(id)arg2 spec:(id)arg3;

@end

@interface XRIndexedStorageT50_C22 : XRIndexedStorage
{
    struct _XRIndexedStorageBasic_MPStrategy<XRT50_C22_Strategy> *_strat;
    struct XRSpatialIndexMP<_XRIndexedStorageBasic_MPStrategy<XRT50_C22_Strategy>> *_index;
    unsigned int _topologyHandle;
}

- (void)dealloc;
- (struct _XRAnalysisCoreReadCursorSeekable *)createSeekableReadOnlyCursorForTableID:(unsigned int)arg1 pack:(const struct _XRStorageManagerExternalAccessPack *)arg2;
- (void)executeQuery:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3 pack:(const struct _XRStorageManagerExternalAccessPack *)arg4;
- (BOOL)performIndexOptimizeWithAccess:(const struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)discardWriteCursor:(struct XRAnalysisCoreWriteCursor *)arg1;
- (struct XRAnalysisCoreWriteCursor *)writeCursorWithPack:(const struct _XRStorageManagerExternalAccessPack *)arg1;
- (id)initWithSchema:(id)arg1 baseFileURL:(id)arg2 spec:(id)arg3;

@end

@interface XRIndexedStorageTD50_CC22 : XRIndexedStorage
{
    struct _XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy> *_strat;
    struct XRSpatialIndexMP<_XRIndexedStorageBasic_MPStrategy<XRTD50_CC22_Strategy>> *_index;
    unsigned int _topologyHandle;
}

- (void)dealloc;
- (struct _XRAnalysisCoreReadCursorSeekable *)createSeekableReadOnlyCursorForTableID:(unsigned int)arg1 pack:(const struct _XRStorageManagerExternalAccessPack *)arg2;
- (void)executeQuery:(id)arg1 tableID:(unsigned int)arg2 handler:(id)arg3 pack:(const struct _XRStorageManagerExternalAccessPack *)arg4;
- (BOOL)performIndexOptimizeWithAccess:(const struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)discardWriteCursor:(struct XRAnalysisCoreWriteCursor *)arg1;
- (struct XRAnalysisCoreWriteCursor *)writeCursorWithPack:(const struct _XRStorageManagerExternalAccessPack *)arg1;
- (id)initWithSchema:(id)arg1 baseFileURL:(id)arg2 spec:(id)arg3;

@end

@interface XRManagedEvent : NSObject <NSCopying>
{
    int _managedRetainCount;
    unsigned int _identifier;
    XRStorageManager *_storageManager;
}

+ (void)configureDescriptor:(id)arg1 forStorageManager:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (unsigned int)_managedRetainCount;
- (id)storageManager;
- (unsigned int)identifier;

@end

@interface XRManagedEventArrayController : NSArrayController
{
    XRStorageManager *_storageManager;
    XRManagedIDArray *_contentIDs;
    XREventIDProxyArray *_proxyArray;
    struct XRTimeRange _filterTimeRange;
    CDUnknownBlockType _filterBlock;
    CDUnknownBlockType _destructorBlock;
    XREventIDProxyArray *_idArrangedCache;
    NSTableView *_scrolledTable;
    NSArray *_tokens;
    CDUnknownBlockType *_tokenCompositions;
    unsigned int _compCount;
    BOOL _logicalOR;
    BOOL _discardIDSelection;
    CDUnknownBlockType _compositionDestructor;
}

@property(retain, nonatomic) XREventIDProxyArray *arrangedCache; // @synthesize arrangedCache=_idArrangedCache;
@property(retain, nonatomic) XRStorageManager *storageManager; // @synthesize storageManager=_storageManager;
- (void)applyCompositeFilter;
- (void)_appendDestructorBlock:(CDUnknownBlockType)arg1;
- (void)_addTest:(CDUnknownBlockType)arg1 toIndex:(unsigned long long)arg2;
- (void)addTestForToken:(id)arg1 test:(CDUnknownBlockType)arg2 destructor:(CDUnknownBlockType)arg3;
- (void)addGlobalTest:(CDUnknownBlockType)arg1 destructor:(CDUnknownBlockType)arg2;
- (void)setupCompositeFilterWithTokens:(id)arg1 requireAllTokensMatch:(BOOL)arg2;
- (void)selectEventWithIdentifier:(unsigned int)arg1;
- (void)selectEventNearestTimestamp:(unsigned long long)arg1;
- (void)setAutomaticSelectionScrollInTableView:(id)arg1;
- (void)setPreservesSelection:(BOOL)arg1;
- (void)setPreservesIDSelection:(BOOL)arg1;
- (void)enumerateArrangedEventsAtIndexes:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned int)identifierAtArrangedIndex:(unsigned long long)arg1;
- (unsigned long long)arrangedIndexOfIdentifier:(unsigned int)arg1;
- (CDUnknownBlockType)filterBlock;
- (void)setFilterBlock:(CDUnknownBlockType)arg1 destructor:(CDUnknownBlockType)arg2;
- (id)_kFilteredArray:(id)arg1;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (id)arrangeObjects:(id)arg1;
- (void)rearrangeObjects;
- (void)setFilterPredicate:(id)arg1;
- (void)setSortDescriptors:(id)arg1;
- (void)_doAndMaintainSelection:(CDUnknownBlockType)arg1;
- (void)_scrollToRow:(long long)arg1;
- (id)content;
- (id)contentIDs;
- (void)setContentIDs:(id)arg1;
- (void)_refreshProxyArray;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithContent:(id)arg1;
- (id)init;

@end

@interface XRManagedIDArray : NSObject <NSCoding>
{
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _myVector;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)enumerateIdentifiersWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)identifierAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)lowerBound:(unsigned int)arg1;
- (unsigned long long)upperBound:(unsigned int)arg1;
- (unsigned long long)binarySearchReturnNearest:(BOOL)arg1 withComparator:(CDUnknownBlockType)arg2;
- (void)removeAllIdentifiers;
- (void)mergeIdentifiers:(id)arg1;
- (void)appendEventIdentifier:(unsigned int)arg1;
- (id)initWithIdentifiers:(unsigned int *)arg1 count:(unsigned long long)arg2;
- (id)init;

@end

@interface XRNumericSortDescriptor : NSSortDescriptor
{
    int _sortType;
    SEL _valueSelector;
    CDUnknownBlockType _sortBlock;
}

+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 type:(int)arg3;
- (void).cxx_destruct;
- (double)numericValueForObject:(id)arg1;
- (id)reversedSortDescriptor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_setSortType:(int)arg1;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 block:(CDUnknownBlockType)arg3;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 type:(int)arg3;

@end

@interface XROrderedStreamSynthesizer : NSObject
{
    struct _MergingCursor _mergeCursor;
    struct XRTimeRange _timeRange;
    XRIntKeyedDictionary *_knownStoresByTableID;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)executeWithBlock:(CDUnknownBlockType)arg1;
- (void)addTableID:(unsigned int)arg1 store:(id)arg2;
- (id)initWithTimeRange:(struct XRTimeRange)arg1;

@end

@interface XRStorageManager : NSObject
{
    XREventDescriptor *_eventDescriptor;
    struct __sFILE {
        char *_field1;
        int _field2;
        int _field3;
        short _field4;
        short _field5;
        struct __sbuf _field6;
        int _field7;
        void *_field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        struct __sbuf _field13;
        struct __sFILEX *_field14;
        int _field15;
        unsigned char _field16[3];
        unsigned char _field17[1];
        struct __sbuf _field18;
        int _field19;
        long long _field20;
    } *_rowNormalWriterStream;
    int _readerFD;
    BOOL _readOnly;
    BOOL _storageCompleteSuccess;
    NSString *_filePath;
    BOOL _runEnded;
    BOOL _persist;
    struct XRStorageManagerLock _lock;
    struct _XRStorageManagerAccess _accessor;
}

@property(readonly, nonatomic) XREventDescriptor *eventDescriptor; // @synthesize eventDescriptor=_eventDescriptor;
@property(copy, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)grantExternalReadWriteAccess:(struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)grantExternalReadOnlyAccess:(struct _XRStorageManagerExternalAccessPack *)arg1;
- (void)writeAccessWithBlock:(CDUnknownBlockType)arg1;
- (void)readAccessWithBlock:(CDUnknownBlockType)arg1;
- (unsigned int)earliestEventIdentifierAfterTimestamp:(unsigned long long)arg1;
- (unsigned int)latestEventIdentifierBeforeTimestamp:(unsigned long long)arg1;
- (unsigned int)_binarySearchWithTimestamp:(unsigned long long)arg1 after:(BOOL)arg2;
- (unsigned int)lastEventIdentifier;
- (BOOL)identifierIsValid:(unsigned int)arg1;
- (void)enumerateEventsInList:(unsigned int *)arg1 count:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateEventsFromIdentifier:(unsigned int)arg1 toIdentifier:(unsigned int)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)eventForIdentifier:(unsigned int)arg1;
- (void)destroyEventWithIdentifier:(unsigned int)arg1;
- (void)accessEvent:(unsigned int)arg1 actions:(CDUnknownBlockType)arg2;
- (void)mutateEvent:(unsigned int)arg1 actions:(CDUnknownBlockType)arg2;
- (unsigned int)storeEventWithActions:(CDUnknownBlockType)arg1;
- (BOOL)storageComplete;
- (void)flushMemory;
- (void)addInitReferencingFieldNames:(id)arg1 actions:(CDUnknownBlockType)arg2;
- (id)objectForSubstitutionIdentifier:(unsigned int)arg1;
- (unsigned int)substitutionIdentifierForObject:(id)arg1;
- (id)fieldWithName:(id)arg1;
- (id)persist;
- (id)archiveProperties;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 descriptor:(id)arg2 options:(int)arg3;

@end

@interface XRValueTransformingSortDescriptor : NSSortDescriptor
{
    NSValueTransformer *_vt;
}

+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(CDUnknownBlockType)arg3 valueTransformer:(id)arg4;
+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3 valueTransformer:(id)arg4;
+ (id)descriptorWithKey:(id)arg1 ascending:(BOOL)arg2 valueTransformer:(id)arg3;
- (void).cxx_destruct;
- (id)valueForObject:(id)arg1;
- (id)reversedSortDescriptor;
- (void)_setValueTransformer:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 comparator:(CDUnknownBlockType)arg3 valueTransformer:(id)arg4;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 selector:(SEL)arg3 valueTransformer:(id)arg4;
- (id)initWithKey:(id)arg1 ascending:(BOOL)arg2 valueTransformer:(id)arg3;

@end

@interface _XRAnalysisCorePathEntry : NSObject
{
    NSString *_component;
}

@property(readonly, nonatomic) NSString *component; // @synthesize component=_component;
- (void).cxx_destruct;
- (id)initWithComponent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _XRAnalysisCoreRowArrayQueryHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    unsigned int _tableID;
    XRAnalysisCoreRowArray *_product;
}

@property(retain, nonatomic) XRAnalysisCoreRowArray *product; // @synthesize product=_product;
- (void).cxx_destruct;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 core:(id)arg4 registry:(id)arg5 rowIterator:(struct XRAnalysisCoreReadCursor *)arg6;
- (id)initWithTableID:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _XRSortingTimeQueryHandler : NSObject <XRAnalysisCoreQueryHandler>
{
    NSArray *_arrayOfSortedLocals;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)releaseOwnershipOfSortedLocals:(CDUnknownBlockType)arg1;
- (void)reduceFromLocalResults:(id)arg1;
- (void)runWorkgroup:(unsigned short)arg1 of:(unsigned int)arg2 withLocalResults:(id)arg3 core:(id)arg4 registry:(id)arg5 rowIterator:(struct XRAnalysisCoreReadCursor *)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _XRWeakProxy : NSProxy
{
    id _realObj;
}

+ (id)weakProxyForObject:(id)arg1;
- (void).cxx_destruct;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

