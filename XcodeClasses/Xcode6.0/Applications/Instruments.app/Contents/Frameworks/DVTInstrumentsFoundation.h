//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CPRecordContainer;

struct DTCoreProfileTapContainerRec {
    struct CPRecordContainer *_field1;
    long long _field2;
};

struct DTNStatSourceMap {
    struct __CFDictionary *_container;
    long long _nextSerialNumber;
};

struct DTXSharedMemory {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    int _field8;
    int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    unsigned int _field17;
    char _field18[0];
};

struct TFPPidWatcher {
    unsigned int clientPort;
};

struct _CSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _ContainerArray {
    struct DTCoreProfileTapContainerRec *recs;
    long long count;
};

struct _XRIndexRange {
    unsigned long long location;
    unsigned long long length;
};

struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>;

struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> {
    struct __compressed_pair<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> {
        struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, id>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, id>>> {
        struct unique_ptr<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *>*> {
                struct __hash_node<std::__1::__hash_value_type<unsigned long long, id>, void *> *__next_;
            } __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, id>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct vm_region_submap_info_64 {
    int _field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned short _field11;
    unsigned char _field12;
    unsigned char _field13;
    unsigned int _field14;
    int _field15;
    unsigned int _field16;
    unsigned short _field17;
    unsigned int _field18;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    int _field2;
} CDStruct_1e94be47;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_cbbc06c7;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    struct *_field3;
} CDStruct_3b01f0aa;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/DVTInstrumentsFoundation.framework/Versions/A/DVTInstrumentsFoundation
// UUID: 395884D1-4429-348D-9C99-AA60FB2E81B9
//
//                           Arch: x86_64
//                Current version: 56120.0.0
//          Compatibility version: 1.0.0
//                 Source version: 56120.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/Contents/SharedFrameworks
//

@protocol DTActivityMonitoringServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (void)setSamplingRate:(NSNumber *)arg1;
- (NSNumber *)killPid:(NSNumber *)arg1 withSignal:(NSNumber *)arg2;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTApplicationListingServiceRequests <DTXAllowedRPC>
- (void)unregisterUpdateToken:(NSString *)arg1;
- (NSArray *)installedApplicationsMatching:(NSDictionary *)arg1 registerUpdateToken:(NSString *)arg2;
@end

@protocol DTApplicationWorkspaceClient <NSObject>
- (void)applicationUninstalled:(NSDictionary *)arg1;
- (void)applicationInstalled:(NSDictionary *)arg1;
@end

@protocol DTCoreProfileTapAuthorizedAPI <DTXAllowedRPC>
- (void)fetchDataNow;
- (void)setConfig:(NSDictionary *)arg1;
- (void)unpause;
- (void)pause;
- (void)stop;
- (void)start;
@end

@protocol DTDeviceInfoServiceAuthorizedAPI <DTXAllowedRPC>
- (NSString *)cpDeviceName;
- (NSString *)cpDeviceInfoAsXML;
- (NSString *)cpKDebugEventsAsXML;
- (NSDictionary *)networkInformation;
- (NSDictionary *)systemInformation;
- (NSDictionary *)hardwareInformation;
- (NSDictionary *)iconDescriptionFileForAppPath:(NSString *)arg1;
- (NSArray *)directoryListingForPath:(NSString *)arg1;
- (NSDictionary *)symbolicatorSignaturesForExpiredPids;
- (void)unregisterSignatureTrackingForPid:(NSNumber *)arg1;
- (NSData *)symbolicatorSignatureForPid:(NSNumber *)arg1 trackingSelector:(NSString *)arg2;
- (NSString *)machKernelName;
- (NSNumber *)pidIs64Bit:(NSNumber *)arg1;
- (NSNumber *)isRunningPid:(NSNumber *)arg1;
- (NSString *)execnameForPid:(NSNumber *)arg1;
- (NSString *)nameForGID:(NSNumber *)arg1;
- (NSString *)nameForUID:(NSNumber *)arg1;
- (NSArray *)runningProcesses;
- (NSArray *)machTimeInfo;
@end

@protocol DTFSUsageActivityServiceAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)initialSwitches;
- (void)setValue:(NSNumber *)arg1 forSwitchName:(NSString *)arg2;
- (NSNumber *)valueForSwitch:(NSString *)arg1;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTFileBrowserServiceAuthorizedAPI <DTXAllowedRPC>
- (NSMutableDictionary *)updateAttributesForItem:(NSMutableDictionary *)arg1;
- (NSArray *)contentsOfDirectoryAtPath:(NSString *)arg1;
- (NSData *)dataFromFileAtPath:(NSString *)arg1;
- (NSArray *)entriesInPathsArray:(NSArray *)arg1;
- (NSArray *)entriesAtPath:(NSString *)arg1;
@end

@protocol DTInstrumentServerAllowedRPC <DTXAllowedRPC>
- (void)setMaxConnectionEnqueue:(unsigned long long)arg1;
@end

@protocol DTInstrumentServerSimulatorPrivilege <DTXAllowedRPC>
- (void)_notifyOfTFPCommunicationsPort:(unsigned int)arg1;
@end

@protocol DTLaunchDaemonServiceAuthorizedMethods <DTXAllowedRPC>
- (NSNumber *)setupOneShotDaemonWithDevicePath:(NSString *)arg1 environment:(NSDictionary *)arg2 arguments:(NSArray *)arg3 options:(NSDictionary *)arg4;
@end

@protocol DTLeaksServiceAuthorizedRPC <DTXAllowedRPC>
- (void)cancelAllRequests;
- (void)requestLeaksForPid:(NSNumber *)arg1 context:(NSNumber *)arg2 provideBacktraces:(NSNumber *)arg3;
@end

@protocol DTNetworkingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)replayLastRecordedSession;
- (void)setTargetPID:(NSNumber *)arg1;
- (void)stopMonitoring;
- (void)startMonitoring;
@end

@protocol DTObjectAllocServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopCollection;
- (void)startCollectionWithPid:(int)arg1;
- (NSNumber *)attachToPid:(NSNumber *)arg1 eventsMask:(NSNumber *)arg2;
- (NSDictionary *)preparedEnvironmentForLaunch:(NSDictionary *)arg1 eventsMask:(NSNumber *)arg2;
@end

@protocol DTProcessControlServiceAuthorizedMethods <DTXAllowedRPC>
- (void)sendProcessControlEvent:(NSData *)arg1 toPid:(NSNumber *)arg2;
- (void)killPid:(NSNumber *)arg1;
- (NSNumber *)launchSuspendedProcessWithDevicePath:(NSString *)arg1 bundleIdentifier:(NSString *)arg2 environment:(NSDictionary *)arg3 arguments:(NSArray *)arg4 options:(NSDictionary *)arg5;
- (void)resumePid:(NSNumber *)arg1;
- (void)suspendPid:(NSNumber *)arg1;
- (void)stopObservingPid:(NSNumber *)arg1;
- (void)startObservingPid:(NSNumber *)arg1;
@end

@protocol DTSamplingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopSampling;
- (void)startSampling;
- (void)setTargetPid:(NSNumber *)arg1;
- (void)setOutputRate:(NSNumber *)arg1;
- (void)setSamplingRate:(NSNumber *)arg1;
@end

@protocol DTVMTrackingServiceAuthorizedAPI <DTXAllowedRPC>
- (void)stopTracking;
- (void)startTracking;
- (XRVMState *)requestVMSnapshot;
- (void)setTargetPid:(NSNumber *)arg1 referenceDate:(NSDate *)arg2;
- (NSMutableDictionary *)configureLaunchEnvironment:(NSMutableDictionary *)arg1;
@end

@protocol DTXAllowedRPC <NSObject>
@end

@protocol DTXPCControlServiceRequests <DTXAllowedRPC>
- (void)stopObservationsForIdentifier:(NSString *)arg1 requestingProcess:(int)arg2;
- (void)observeServicesWithIdentifier:(NSString *)arg1 requestingProcess:(int)arg2 environment:(NSDictionary *)arg3 arguments:(NSArray *)arg4 options:(NSDictionary *)arg5;
@end

@protocol LSApplicationWorkspaceObserverProtocol <NSObject>

@optional
- (void)networkUsageChanged:(BOOL)arg1;
- (void)applicationInstallsDidPrioritize:(NSArray *)arg1;
- (void)applicationInstallsDidCancel:(NSArray *)arg1;
- (void)applicationInstallsDidResume:(NSArray *)arg1;
- (void)applicationInstallsDidPause:(NSArray *)arg1;
- (void)applicationInstallsArePrioritized:(NSArray *)arg1 arePaused:(NSArray *)arg2;
- (void)applicationsDidFailToUninstall:(NSArray *)arg1;
- (void)pluginsDidUninstall:(NSArray *)arg1;
- (void)applicationsDidUninstall:(NSArray *)arg1;
- (void)pluginsWillUninstall:(NSArray *)arg1;
- (void)applicationsWillUninstall:(NSArray *)arg1;
- (void)applicationsDidFailToInstall:(NSArray *)arg1;
- (void)pluginsDidInstall:(NSArray *)arg1;
- (void)applicationsDidInstall:(NSArray *)arg1;
- (void)applicationsWillInstall:(NSArray *)arg1;
- (void)applicationInstallsDidUpdateIcon:(NSArray *)arg1;
- (void)applicationInstallsDidChange:(NSArray *)arg1;
- (void)applicationInstallsDidStart:(NSArray *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (BOOL)supportsSecureCoding;
@end

@protocol XRIntKeyedDictionaryImmutable <NSObject>
- (unsigned long long)count;
- (void)enumerateObjectsAndIntegerKeys:(void (^)(id, unsigned long long))arg1;
- (NSArray *)allObjects;
- (id)objectForIntegerKey:(unsigned long long)arg1;
@end

@protocol _ContainerStrategy <NSObject>
@property(readonly, getter=isSessionBased) BOOL sessionBased;
- (void)fetchFromTap:(id)arg1 guard:(_CPTapGuarded *)arg2;
- (void)unpauseTap:(id)arg1 guard:(_CPTapGuarded *)arg2;
- (void)pauseTap:(id)arg1 guard:(_CPTapGuarded *)arg2;
- (void)stopTap:(id)arg1 guard:(_CPTapGuarded *)arg2;
- (void)startTap:(id)arg1 guard:(_CPTapGuarded *)arg2;
- (void)receivedRecordContainers:(struct DTCoreProfileTapContainerRec *)arg1 count:(long long)arg2 guard:(_CPTapGuarded *)arg3;
- (void)setSessionHandler:(void (^)(struct _CPSession *))arg1 guard:(_CPTapGuarded *)arg2;
- (void)invokeClientHandlers:(id)arg1;
- (id)willInvokeClientHandlers:(_CPTapGuarded *)arg1;
- (void)reset:(_CPTapGuarded *)arg1;
@end

@interface DTActivityMonitoringService : DTXService <DTActivityMonitoringServiceAuthorizedAPI>
{
    BOOL _doCollectData;
    long long _samplingRate;
}

+ (void)registerCapabilities:(id)arg1;
- (void)collectData;
- (id)configureLaunchEnvironment:(id)arg1;
- (id)killPid:(id)arg1 withSignal:(id)arg2;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (void)setSamplingRate:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTAllocationsRecorder : NSObject
{
    struct DTXSharedMemory *_shmem;
    NSObject<OS_dispatch_queue> *_processingQueue;
    struct {
        double _field1;
        unsigned int _field2;
        unsigned int _field3;
        unsigned long long _field4;
        unsigned long long _field5;
        unsigned long long _field6;
        long long _field7;
        unsigned long long _field8[0];
        char _field9[0];
    } *_partialEvent;
    unsigned int _partialSize;
    unsigned int _partialFilled;
    int _eventTotal;
    unsigned int _targetTask;
    int _stopCollection;
    BOOL _readStackLogsUponAttach;
    unsigned int _sharedMemorySize;
    CDUnknownBlockType _eventHandler;
    CDUnknownBlockType _bufferHandler;
}

+ (BOOL)configureLocalLaunchEnvironment:(id)arg1 recordedEventsMask:(unsigned int)arg2;
+ (long long)currentVersion;
+ (id)serviceIdentifier;
+ (unsigned int)cppClassNamesMask;
+ (unsigned int)zombieEventsMask;
+ (unsigned int)mallocReallocFreeEventsMask;
+ (unsigned int)retainReleaseAutoEventsMask;
+ (unsigned int)vmEventsMask;
+ (unsigned int)allEventsMask;
@property(nonatomic) unsigned int sharedMemorySize; // @synthesize sharedMemorySize=_sharedMemorySize;
@property(nonatomic) BOOL readStackLogsUponAttach; // @synthesize readStackLogsUponAttach=_readStackLogsUponAttach;
@property(copy, nonatomic) CDUnknownBlockType bufferHandler; // @synthesize bufferHandler=_bufferHandler;
@property(copy, nonatomic) CDUnknownBlockType eventHandler; // @synthesize eventHandler=_eventHandler;
- (void).cxx_destruct;
- (void)_processIncomingData;
@property(readonly) int eventCount;
- (void)_endAndTossResources:(BOOL)arg1;
- (void)cancel;
- (void)stop;
- (void)processBufferMessage:(id)arg1;
- (BOOL)_startWithError:(id *)arg1;
- (BOOL)startForProcessingBuffersWithError:(id *)arg1;
- (BOOL)startWithLaunchedTask:(unsigned int)arg1 error:(id *)arg2;
- (BOOL)startAttachingToRunningTask:(unsigned int)arg1 recordedEventsMask:(unsigned int)arg2 error:(id *)arg3;
- (unsigned long long)_setupSharedMemoryInTask:(unsigned int)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface DTApplicationListingService : DTXService <DTApplicationWorkspaceClient, DTApplicationListingServiceRequests>
{
}

- (void)unregisterUpdateToken:(id)arg1;
- (id)installedApplicationsMatching:(id)arg1 registerUpdateToken:(id)arg2;
- (void)_sendNotification:(id)arg1 install:(BOOL)arg2;
- (void)applicationUninstalled:(id)arg1;
- (void)applicationInstalled:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTApplicationWorkspaceObserver : NSObject <LSApplicationWorkspaceObserverProtocol>
{
    NSMutableDictionary *_registrationsByToken;
    NSMutableDictionary *_knownAppsByPath;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)pluginsDidUninstall:(id)arg1;
- (void)applicationsDidUninstall:(id)arg1;
- (void)pluginsDidInstall:(id)arg1;
- (void)applicationsDidInstall:(id)arg1;
- (void)unregisterNotificationToken:(id)arg1 observer:(id)arg2;
- (void)_unregisterNotificationTokenInternal:(id)arg1;
- (id)registerNotificationToken:(id)arg1 observer:(id)arg2 query:(id)arg3;
- (void)_notifyWithDictionaryRepresentation:(id)arg1 addition:(BOOL)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTCPRemoteCache : NSObject
{
    id *_locks;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)kindToString:(int)arg1;
+ (id)sharedDTCPRemoteCache;
- (BOOL)accessFileKind:(int)arg1 device:(id)arg2 fileType:(id)arg3 block:(CDUnknownBlockType)arg4;
- (id)_filePathForKind:(int)arg1 fileType:(id)arg2 directoryURL:(id)arg3;
- (id)_directoryForDevice:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DTCoreProfileTap : NSObject
{
    NSObject<OS_dispatch_queue> *_guardQueue;
    NSObject<OS_dispatch_queue> *_sourceAndHandlerQueue;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)_fetch:(id)arg1;
- (void)_setConnection:(id)arg1 guarded:(id)arg2;
- (void)_reset:(id)arg1;
- (void)_stop:(id)arg1;
- (void)_start:(id)arg1;
- (void)_unpause:(id)arg1;
- (void)_pause:(id)arg1;
- (id)_containerStrategy:(id)arg1;
- (void)fetchDataNow;
- (id)errorString;
@property(readonly) NSString *UUID;
@property(readonly) BOOL requiresCPSession;
@property(readonly) BOOL isRunning;
- (long long)triggerCount;
- (unsigned int)coreCount;
- (id)metadataForSession;
- (id)metadataForTriggerIndex:(long long)arg1;
- (void)setFilePreservation:(BOOL)arg1;
- (BOOL)_isArchiving:(id)arg1;
- (BOOL)isArchiving;
- (BOOL)setArchivingPath:(id)arg1 error:(id *)arg2;
- (void)stop;
- (void)start;
- (void)unpause;
- (void)pause;
- (void)resume;
- (void)suspend;
- (void)setRecordingPriority:(int)arg1;
- (void)setDisplayInterval:(CDStruct_1e94be47)arg1;
- (void)setWindowSize:(CDStruct_1e94be47)arg1;
- (void)setBufferMode:(int)arg1;
- (CDStruct_1e94be47)displayInterval;
- (CDStruct_1e94be47)windowSize;
- (int)bufferMode;
- (int)addTriggerConfig:(id)arg1 recordContainerHandler:(CDUnknownBlockType)arg2;
- (int)addTriggerConfig:(id)arg1 recordHandler:(CDUnknownBlockType)arg2;
- (void)setConfiguration:(id)arg1 withSessionHandler:(CDUnknownBlockType)arg2;
- (void)setConfiguration:(id)arg1 withRecordContainerHandler:(CDUnknownBlockType)arg2;
- (void)setConfiguration:(id)arg1 withRecordHandler:(CDUnknownBlockType)arg2;
- (void)_setConfiguration:(id)arg1 withRecordHandler:(id)arg2 recordContainerHandler:(id)arg3;
- (void)setSessionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithCoreCount:(int)arg1;

@end

@interface DTCoreProfileLocalTap : DTCoreProfileTap
{
    NSMutableArray *_triggers;
    CDUnknownBlockType _taskForPid;
    NSObject<OS_dispatch_source> *_pollTimer;
    unsigned long long _actionTypesByKind[5];
}

- (void).cxx_destruct;
- (id)_triggers;
- (id)_containerStrategy:(id)arg1;
- (void)_stop:(id)arg1;
- (void)_start:(id)arg1;
- (id)triggerIDs;
- (unsigned long long)eventLimitForConfiguration:(id)arg1;
- (unsigned long long)bufferSizeForConfiguration:(id)arg1;
- (void)setTaskForPidBlock:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface DTCoreProfileRemoteTap : DTCoreProfileTap
{
    BOOL _requiresCPSession;
    DTXConnection *_connection;
    NSString *_serviceName;
    DTXChannel *_channel;
    long long _version;
    NSObject<OS_dispatch_queue> *_unprocessedMessageQueue;
    NSObject<OS_dispatch_source> *_receivedMessage;
    struct __CFArray *_containersByTrigger;
    NSMutableArray *_rawBufferAccumulator;
}

+ (BOOL)stopOnChannel:(id)arg1;
+ (BOOL)unpauseOnChannel:(id)arg1;
+ (BOOL)pauseOnChannel:(id)arg1;
+ (BOOL)startOnChannel:(id)arg1 withConfiguration:(id)arg2;
- (void).cxx_destruct;
- (id)_containerStrategy:(id)arg1;
- (void)_reset:(id)arg1;
- (void)_fetch:(id)arg1;
- (void)_unpause:(id)arg1;
- (void)_pause:(id)arg1;
- (void)_stop:(id)arg1;
- (void)_start:(id)arg1;
- (void)messageReceived:(id)arg1;
- (void)_setConnection:(id)arg1 guarded:(id)arg2;
- (void)setConnection:(id)arg1;
- (void)dealloc;
- (id)initWithConnection:(id)arg1 serviceName:(id)arg2 version:(long long)arg3 coreCount:(int)arg4 requiresCPSession:(BOOL)arg5;
- (id)init;

@end

@interface DTCoreProfilePlaybackTap : DTCoreProfileRemoteTap
{
    CDUnknownBlockType _nextMessageBlock;
}

- (void).cxx_destruct;
- (void)start;
- (id)initWithNextMessageBlock:(CDUnknownBlockType)arg1 requiresCPSession:(BOOL)arg2;

@end

@interface DTCoreProfileTapConfig : NSObject <NSCopying>
{
    NSMutableDictionary *_dict;
}

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)reset;
- (id)plistForTrigger:(int)arg1;
- (id)plist;
- (int)addTriggerConfig:(id)arg1;
- (unsigned long long)triggerConfigCount;
- (void)enumerateTriggerConfigs:(CDUnknownBlockType)arg1;
@property(nonatomic) CDStruct_1e94be47 windowSize;
@property(nonatomic) int recordingPriority;
@property(nonatomic) int bufferMode;
@property(nonatomic) CDStruct_1e94be47 displayInterval;
@property(nonatomic) BOOL spoolToDiskWhenPossible;
- (void)setIsDeferredDisplay:(BOOL)arg1;
@property(readonly, nonatomic) BOOL isDeferredDisplay;
- (id)initWithPlist:(id)arg1;
- (id)init;

@end

@interface DTCoreProfileTapMessage : NSObject <NSCoding>
{
    NSMutableDictionary *_plist;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSDictionary *sessionMetadata;
@property(copy, nonatomic) NSDictionary *triggerMetadata;
@property(nonatomic) unsigned long long recordCount;
@property(nonatomic) unsigned long long logicalProcessorCore;
@property(nonatomic) unsigned long long triggerIndex;
@property(nonatomic) unsigned long long triggerCount;
@property(nonatomic) unsigned long long coreCount;
@property(nonatomic) int kind;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface DTCoreProfileTapPlaybackService : DTXService <DTCoreProfileTapAuthorizedAPI>
{
    NSOperation *_op;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)fetchDataNow;
- (void)setConfig:(id)arg1;
- (void)pause;
- (void)unpause;
- (void)stop;
- (void)start;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTCoreProfileTapService : DTXService <DTCoreProfileTapAuthorizedAPI>
{
    NSRecursiveLock *_lock;
    id _lockedObj;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)fetchDataNow;
- (void)unpause;
- (void)pause;
- (void)stop;
- (void)start;
- (id)requiresCPSession;
- (void)setConfig:(id)arg1;
- (BOOL)_validateConfig:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTCoreProfileTriggerConfig : NSObject
{
    NSMutableDictionary *_dict;
    struct _CPEventSet *_kdebugFilterSet;
}

+ (id)deviceSignPostConfig;
- (void).cxx_destruct;
- (id)plist;
@property(nonatomic) unsigned long long callstackFrameDepth;
@property(retain, nonatomic) struct _CPEventSet *kdebugFilter;
- (void)setUuid:(id)arg1;
@property(readonly, retain, nonatomic) NSString *uuid;
@property(retain, nonatomic) NSArray *pmiDeviceIndices;
@property(nonatomic) unsigned long long pmiEventThreshold;
@property(retain, nonatomic) NSString *pmiEventMnemonic;
@property(retain, nonatomic) NSString *pmiCounterName;
- (void)enumerateActions:(CDUnknownBlockType)arg1;
- (void)addAction:(int)arg1;
- (void)enumeratePIDsInFilter:(CDUnknownBlockType)arg1;
- (void)includePID:(int)arg1;
@property(nonatomic) BOOL isAllProcesses;
- (void)enumerateThreadStatesToInclude:(CDUnknownBlockType)arg1;
- (void)includeThreadState:(int)arg1;
@property(nonatomic) BOOL hasThreadStateFilter;
@property(nonatomic) unsigned long long eventLimitHint;
@property(nonatomic) CDStruct_1e94be47 sampleInterval;
@property(nonatomic) int kind;
- (void)dealloc;
- (id)initWithUUIDString:(id)arg1;
- (id)initWithPlist:(id)arg1;
- (id)init;

@end

@interface DTDeviceInfoService : DTXService <DTDeviceInfoServiceAuthorizedAPI>
{
    struct __CFDictionary *_trackingSymbolicatorsByPid;
}

+ (BOOL)isApplication:(id)arg1;
+ (void)registerCapabilities:(id)arg1;
- (id)networkInformation;
- (id)cpDeviceName;
- (id)cpDeviceInfoAsXML;
- (id)cpKDebugEventsAsXML;
- (id)systemInformation;
- (id)productVersion;
- (id)uniqueID;
- (id)lookupSysctl:(const char *)arg1;
- (id)hardwareInformation;
- (int)hwCPU64BitCapable;
- (int)hwCPUtype;
- (int)hwCPUsubtype;
- (int)speedOfCpus;
- (int)numberOfCpus;
- (int)numberOfPhysicalCpus;
- (id)iconDescriptionForIconPath:(id)arg1;
- (id)iconDescriptionFileForAppPath:(id)arg1;
- (id)directoryListingForPath:(id)arg1;
- (id)symbolicatorSignaturesForExpiredPids;
- (void)unregisterSignatureTrackingForPid:(id)arg1;
- (id)symbolicatorSignatureForPid:(id)arg1 trackingSelector:(id)arg2;
- (id)machKernelName;
- (id)pidIs64Bit:(id)arg1;
- (id)isRunningPid:(id)arg1;
- (id)execnameForPid:(id)arg1;
- (id)nameForGID:(id)arg1;
- (id)nameForUID:(id)arg1;
- (id)runningProcesses;
- (id)machTimeInfo;
- (void)messageReceived:(id)arg1;
- (void)dealloc;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRExpiredPidCacheServiceProtected : NSObject
{
    NSObject<OS_dispatch_queue> *_cacheQ;
    _XRExpiredPidCache *_cache;
}

- (void).cxx_destruct;
- (void)_performOnCache:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface DTExpiredPidCacheService : XRExpiredPidCacheServiceProtected
{
}

+ (id)defaultCache;
+ (void)disableExpiredPidCaching;
- (void)enableCaching:(BOOL)arg1;
- (id)allExpiredSignatures;
- (id)signatureForExpiredPid:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DTFSUsageActivityService : DTXService <DTFSUsageActivityServiceAuthorizedAPI>
{
    DTXConnection *_targetConnection;
    NSMutableDictionary *_switches;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (id)initialSwitches;
- (void)setValue:(id)arg1 forSwitchName:(id)arg2;
- (id)valueForSwitch:(id)arg1;
- (void)stopSampling;
- (void)startSamplingWithPid:(int)arg1;
- (id)configureLaunchEnvironment:(id)arg1;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTFileBrowserService : DTXService <DTFileBrowserServiceAuthorizedAPI>
{
}

+ (void)registerCapabilities:(id)arg1;
- (id)updateAttributesForItem:(id)arg1;
- (id)contentsOfDirectoryAtPath:(id)arg1;
- (id)dataFromFileAtPath:(id)arg1;
- (id)entriesInPathsArray:(id)arg1;
- (id)entriesAtPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTInstrumentServer : NSObject <DTInstrumentServerAllowedRPC, DTInstrumentServerSimulatorPrivilege>
{
    DTXConnection *_connection;
    CDUnknownBlockType _channelRestrictBlock;
}

+ (void)_tfpPortReceived:(unsigned int)arg1;
+ (void)_taskInvalid:(unsigned int)arg1 forPid:(int)arg2;
+ (unsigned int)taskForPid:(int)arg1;
+ (struct AuthorizationOpaqueRef *)sharedAuthorization;
+ (void)takeOwnershipOfSharedAuthorization:(struct AuthorizationOpaqueRef *)arg1;
+ (BOOL)isAppleInternal;
@property(copy) CDUnknownBlockType channelRestrictBlock; // @synthesize channelRestrictBlock=_channelRestrictBlock;
@property(readonly, nonatomic) DTXConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)_notifyOfTFPCommunicationsPort:(unsigned int)arg1;
- (void)restrictChannelsWithBlock:(CDUnknownBlockType)arg1;
- (void)loadServicesAtPath:(id)arg1;
- (void)setMaxConnectionEnqueue:(unsigned long long)arg1;
- (void)cancel;
- (void)resume;
- (id)initWithTransport:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTLaunchDaemonService : DTXService <DTLaunchDaemonServiceAuthorizedMethods>
{
}

+ (void)registerCapabilities:(id)arg1;
- (id)setupOneShotDaemonWithDevicePath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTLeaksService : DTXService <DTLeaksServiceAuthorizedRPC>
{
    NSObject<OS_dispatch_queue> *_coordinationQueue;
    DTXConnection *_helperConnection;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)cancelAllRequests;
- (void)requestLeaksForPid:(id)arg1 context:(id)arg2 provideBacktraces:(id)arg3;
- (BOOL)spawnHelperTaskForPid:(int)arg1;
- (void)dealloc;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTNStatSourceMapEntry : NSObject
{
    long long _serialNumber;
    int _pid;
    XRNetworkingServiceObservationTuple *_lastStats;
}

@property(retain, nonatomic) XRNetworkingServiceObservationTuple *lastStats; // @synthesize lastStats=_lastStats;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(readonly, nonatomic) long long serialNumber; // @synthesize serialNumber=_serialNumber;
- (void).cxx_destruct;

@end

@interface DTNetworkInterfaceInfo : NSObject
{
}

+ (id)interfaceNameMappings;
+ (void)addInterface:(struct __SCNetworkInterface *)arg1 toNameMapping:(id)arg2;

@end

@interface DTNetworkingService : DTXService <DTNetworkingServiceAuthorizedAPI>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    struct __NStatManager *_netstatMan;
    struct DTNStatSourceMap _sources;
    unsigned long long _seenInterfaces;
    unsigned long long _hiddenInterfaces;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    long long _interval;
    int _filteredToPid;
    BOOL _isAppleInternal;
    BOOL _isDisconnected;
}

+ (id)serviceName;
+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)replayLastRecordedSession;
- (void)setTargetPID:(id)arg1;
- (void)stopMonitoring;
- (void)startMonitoring;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTObjectAllocService : DTXService <DTObjectAllocServiceAuthorizedAPI>
{
    unsigned int _task;
    DTAllocationsRecorder *_recorder;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)stopCollection;
- (void)startCollectionWithPid:(int)arg1;
- (id)attachToPid:(id)arg1 eventsMask:(id)arg2;
- (id)preparedEnvironmentForLaunch:(id)arg1 eventsMask:(id)arg2;
- (void)messageReceived:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTPerfMonDevice : NSObject
{
    NSString *_name;
    NSMutableDictionary *_countersDict;
    NSArray *_counterNames;
    NSMutableDictionary *_eventMnemonicsByCounter;
    NSArray *_sortedEventMnemonics;
    NSMutableDictionary *_counterNameToMask;
    NSMutableDictionary *_counterMaskToName;
    NSMutableDictionary *_eventMnemonicToMask;
    unsigned long long _countersInUseMask;
    struct __CFArray *_deviceInstances;
}

- (void).cxx_destruct;
- (BOOL)deallocateCounters:(id)arg1;
- (BOOL)allocateCounters:(id)arg1;
- (BOOL)canAllocateCounters:(id)arg1;
- (BOOL)_allocateCounters:(id)arg1 doAllocation:(BOOL)arg2;
- (int)_numFreeCounters;
- (id)newCounterArrayForMnemonic:(id)arg1;
- (id)eventMaskForMnemonic:(id)arg1;
- (id)eventByMnemonic:(id)arg1 forCounter:(id)arg2;
- (id)eventMnemonicsForCounter:(id)arg1;
- (id)eventMnemonics;
- (id)counterNames;
- (id)name;
- (void)setDeviceInstances:(struct __CFArray *)arg1;
- (struct __CFArray *)deviceInstances;
- (void)dealloc;
- (BOOL)isRealDevice;
- (id)initWithName:(id)arg1 fromDevice:(struct _CPDevice *)arg2;

@end

@interface DTPerfMonEvent : NSObject
{
    NSString *_mnemonic;
    NSString *_alias;
    NSString *_explanation;
    struct _CPCounterEvent *_counterEvent;
    NSString *_displayName;
}

- (void).cxx_destruct;
- (struct _CPCounter *)allocCounterForDeviceInstance:(struct _CPDevice *)arg1;
- (struct _CPCounterEvent *)counterEvent;
- (id)displayName;
- (id)explanation;
- (id)aliasOrMnemonic;
- (id)alias;
- (id)mnemonic;
- (void)dealloc;
- (id)initWithMnemonic:(id)arg1 alias:(id)arg2;
- (id)initWithCPCounterEvent:(struct _CPCounterEvent *)arg1;

@end

@interface DTPerfMonEventAllocation : NSObject
{
    NSString *_mnemonic;
    NSString *_groupName;
    NSString *_allocatedCounterName;
    NSString *_warningString;
}

@property(retain, nonatomic) NSString *warningString; // @synthesize warningString=_warningString;
@property(readonly, retain, nonatomic) NSString *allocatedCounterName; // @synthesize allocatedCounterName=_allocatedCounterName;
@property(readonly, retain, nonatomic) NSString *groupName; // @synthesize groupName=_groupName;
@property(readonly, retain, nonatomic) NSString *mnemonic; // @synthesize mnemonic=_mnemonic;
- (void).cxx_destruct;
- (void)_setAllocatedCounterName:(id)arg1;
- (id)initWithMnemonic:(id)arg1 groupName:(id)arg2;

@end

@interface DTPerfMonManager : NSObject
{
    NSMutableDictionary *_devicesDict;
    NSArray *_deviceNames;
    DTPerfMonDevice *_localDevice;
    NSMutableArray *_processorNames;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedDTPerfMonManager;
- (void).cxx_destruct;
- (id)counterNames;
- (id)processorNames;
- (id)deviceForName:(id)arg1;
- (id)localDevice;
- (id)deviceNames;
- (id)_addKnownDevice:(struct _CPDevice *)arg1;
- (void)_addKnownDevices;
- (void)_addLocalDevice;
- (void)refreshDevices;
- (id)loadDeviceAtURL:(id)arg1 forName:(id)arg2;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DTProcessControlService : DTXService <DTProcessControlServiceAuthorizedMethods>
{
    NSMutableArray *_pids;
    NSMutableArray *_sources;
    NSMutableDictionary *_activeIODispatchSources;
    NSObject<OS_dispatch_queue> *_deathNoteQueue;
}

- (void).cxx_destruct;
- (void)watchOutputFileDescriptor:(int)arg1 forPid:(int)arg2;
- (int)cleanupPid:(int)arg1;
- (void)sendProcessControlEvent:(id)arg1 toPid:(id)arg2;
- (void)_performMemoryWarningForPid:(int)arg1;
- (void)killPid:(id)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4;
- (void)suspendPid:(id)arg1;
- (void)resumePid:(id)arg1;
- (void)stopObservingPid:(id)arg1;
- (void)startObservingPid:(id)arg1;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTPosixSpawnProcessControlService : DTProcessControlService
{
}

+ (int)posixSpawnWithPath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4 fileDescriptorHandler:(CDUnknownBlockType)arg5;
+ (void)registerCapabilities:(id)arg1;
- (int)cleanupPid:(int)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;

@end

@interface DTProcessControlEvent : NSObject <NSSecureCoding>
{
}

+ (BOOL)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DTProcessControlApplicationMemoryWarning : DTProcessControlEvent
{
}

@end

@interface DTProcessControlBackgroundFetchEvent : DTProcessControlEvent
{
}

@end

@interface DTSamplingService : DTXService <DTSamplingServiceAuthorizedAPI>
{
    BOOL _doCollectData;
    unsigned long long _samplingRate;
    unsigned long long _outputRate;
    unsigned long long _outputRateDelta;
    unsigned long long *_backtraceBuffer;
    unsigned long long _backtraceBufferSize;
    unsigned long long _backtraceBufferUsedSize;
    unsigned int _task;
    BOOL _targetIs64Bit;
}

+ (void)registerCapabilities:(id)arg1;
- (void)addSampleWithTimeInfo:(struct __CFDictionary *)arg1 useZeroDelta:(BOOL)arg2;
- (void)collectData;
- (void)_allocateBuffer;
- (void)_outputData;
- (void)stopSampling;
- (void)startSampling;
- (void)setTargetPid:(id)arg1;
- (void)setOutputRate:(id)arg1;
- (void)setSamplingRate:(id)arg1;
- (void)dealloc;
- (id)initWithChannel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTVMTrackingService : DTXService <DTVMTrackingServiceAuthorizedAPI>
{
    int _targetPid;
    unsigned int _targetTask;
    XRVMState *_currentState;
}

+ (void)registerCapabilities:(id)arg1;
- (void).cxx_destruct;
- (void)stopTracking;
- (void)startTracking;
- (id)requestVMSnapshot;
- (void)setTargetPid:(id)arg1 referenceDate:(id)arg2;
- (id)configureLaunchEnvironment:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTXPCControlService : DTProcessControlService <DTXPCControlServiceRequests>
{
}

+ (void)registerCapabilities:(id)arg1;
- (void)stopObservationsForIdentifier:(id)arg1 requestingProcess:(int)arg2;
- (void)observeServicesWithIdentifier:(id)arg1 requestingProcess:(int)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;
- (void)messageReceived:(id)arg1;
- (id)launchSuspendedProcessWithDevicePath:(id)arg1 bundleIdentifier:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DTXPCServiceController : NSObject
{
    NSMutableDictionary *_registrationDictsByPid;
    NSObject<OS_dispatch_queue> *_guard;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)unregisterClient:(id)arg1 withIdentifier:(id)arg2 parent:(int)arg3;
- (void)_matchRemove:(CDUnknownBlockType)arg1;
- (void)registerClient:(id)arg1 forXPCService:(id)arg2 environment:(id)arg3 arguments:(id)arg4 options:(id)arg5 handler:(CDUnknownBlockType)arg6;
- (id)init;

@end

@interface LeakAnalyzer : NSObject
{
    unsigned int _task;
}

+ (id)descriptionForLeakErrorCode:(int)arg1;
+ (id)serializedLeakDataWithCount:(unsigned int)arg1 leaks:(CDStruct_cbbc06c7 *)arg2 contents:(id *)arg3 references:(CDStruct_3b01f0aa)arg4 layouts:(id)arg5 timestamp:(unsigned long long)arg6;
+ (void)deserializeLeakData:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)findLeaksWithOptions:(unsigned int)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithTask:(unsigned int)arg1;

@end

@interface NSFileHandle (DVTInstrumentsFoundationAdditions)
- (void)enumerateDTKDebugEventsWithBlock:(CDUnknownBlockType)arg1 progressTracker:(id)arg2;
- (BOOL)writeCPRecordArraysByCore:(id)arg1 startingAtAbsoluteTime:(long long)arg2 error:(id *)arg3;
@end

@interface XRIndexSet : NSObject <NSCopying>
{
    struct _XRIndexRange _range;
    struct _XRIndexRange *_rangeArray;
    unsigned long long _arraySize;
    unsigned long long _numRanges;
}

+ (id)indexSetWithIndexesInRange:(struct _XRIndexRange)arg1;
+ (id)indexSetWithIndex:(unsigned long long)arg1;
- (void)enumerateRangesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateIndexesUsingBlock:(CDUnknownBlockType)arg1;
- (BOOL)intersectsIndexesInRange:(struct _XRIndexRange)arg1;
- (BOOL)containsIndex:(unsigned long long)arg1;
- (unsigned long long)lastIndex;
- (unsigned long long)firstIndex;
- (unsigned long long)count;
- (unsigned long long)_queryRange:(struct _XRIndexRange)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithIndexes:(struct _XRIndexRange)arg1;
- (id)initWithIndex:(unsigned long long)arg1;
- (id)init;

@end

@interface XRIntKeyedDictionary : NSObject <XRIntKeyedDictionaryImmutable, NSCoding>
{
    struct unordered_map<unsigned long long, id, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, id>>> _hash_map;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)count;
- (void)enumerateObjectsAndIntegerKeys:(CDUnknownBlockType)arg1;
- (id)allObjects;
- (void)removeObjectForIntegerKey:(unsigned long long)arg1;
- (void)setObject:(id)arg1 forIntegerKey:(unsigned long long)arg2;
- (void)setObject:(id)arg1 forIntergerKey:(unsigned long long)arg2;
- (id)objectForIntegerKey:(unsigned long long)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRInternalizedSettingsStore : NSObject
{
}

+ (id)objectForKey:(id)arg1;
+ (id)internalizedSettings;
+ (void)initialize;

@end

@interface XRMutableIndexSet : XRIndexSet
{
}

- (void)addIndexesInRange:(struct _XRIndexRange)arg1;
- (void)addIndex:(unsigned long long)arg1;
- (void)_addRange:(struct _XRIndexRange)arg1;
- (void)_mergeRangesFromIndex:(unsigned long long)arg1;
- (void)_insertRange:(struct _XRIndexRange)arg1 atIndex:(unsigned long long)arg2;
- (void)growArray;

@end

@interface XRNetworkingServiceObservationTuple : NSObject
{
    id *data;
    unsigned char _count;
    int _kind;
}

@property(nonatomic) unsigned char count; // @synthesize count=_count;
@property(nonatomic) int kind; // @synthesize kind=_kind;
- (void)dealloc;
- (id)initWithKind:(int)arg1 count:(unsigned char)arg2 source:(struct __CFDictionary *)arg3 indexToKeyMap:(const struct __CFString ***)arg4;
- (id)initWithKind:(int)arg1 count:(unsigned char)arg2;

@end

@interface XRRecentArray : NSObject
{
    NSMutableArray *_entries;
    unsigned long long _maximumRecentCount;
    NSObject<OS_dispatch_semaphore> *_lock;
}

- (void).cxx_destruct;
- (BOOL)containsEntry:(id)arg1;
- (id)entryAtIndex:(unsigned long long)arg1;
- (id)entries;
- (void)removeEntryAtIndex:(unsigned long long)arg1;
- (void)removeEntry:(id)arg1;
- (void)addEntry:(id)arg1;
@property(nonatomic) unsigned long long maximumRecentCount;
- (id)initWithMaximumRecentCount:(unsigned long long)arg1;

@end

@interface XRRecentArrayStoredPrefs : XRRecentArray
{
    NSString *_preferencePathArray;
    NSString *_preferencePathMaxCount;
}

+ (id)sharedInstanceForPreferencePath:(id)arg1;
- (void).cxx_destruct;
- (void)synchronize;
- (void)_readUserDefaults;
- (void)dealloc;
- (id)initWithMaximumRecentCount:(unsigned long long)arg1 preferencePath:(id)arg2;

@end

@interface XRShimSupport : NSObject
{
    NSURL *_exposedResources;
    NSOperationQueue *_backgroundQ;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)startTrampolinedDaemonWithDevicePath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4 kickstart:(BOOL)arg5;
- (void)kickstart:(id)arg1;
- (void)addSimShimToEnvironment:(id)arg1;
- (id)_exposedTrampolineURL;
- (id)_exposedLibSimShimURL;
- (id)_trampolineURL;
- (id)_libSimShimURL;
- (id)_newSubmitJobAuth;
- (void)copyShimsAndTrampolinesTo:(id)arg1;
- (id)init;

@end

@interface XRSpace : NSObject
{
    NSOperationQueue *_queue;
    NSMutableString *_tag;
    unsigned long long _seqNum;
    NSMutableDictionary *_userDataByToken;
}

- (void).cxx_destruct;
- (BOOL)isBusy;
- (unsigned long long)operationCount;
- (BOOL)currentlyInThisSpace;
- (BOOL)isSerial;
- (id)spaceName;
- (BOOL)isOpValidForSpace:(id)arg1;
- (id)userDataForToken:(id)arg1;
- (void)removeUserDataForToken:(id)arg1;
- (void)replaceUserData:(id)arg1 forToken:(id)arg2;
- (id)storeUserData:(id)arg1;
- (id)afterOperationsRunBlock:(id)arg1;
- (id)afterOperation:(id)arg1 spaceBlock:(CDUnknownBlockType)arg2;
- (id)afterOperation:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)addOperation:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_postQueueStateChanged;
- (void)dealloc;
- (id)init;
- (id)initWithQueue:(id)arg1;

@end

@interface XRSpaceBlockOp : NSOperation
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)main;
- (id)initWithSpaceBlock:(CDUnknownBlockType)arg1;

@end

@interface XRSpaceDataToken : NSObject <NSCopying>
{
    id _tag;
    unsigned long long _seq;
}

- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSpaceTag:(id)arg1 sequenceID:(unsigned long long)arg2;
- (BOOL)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface XRTrampolinedLaunchOp : NSOperation
{
    NSString *_path;
    NSDictionary *_environment;
    NSArray *_arguments;
    NSDictionary *_options;
    BOOL _kickstart;
    int _launchedPID;
}

@property(nonatomic) int launchedPID; // @synthesize launchedPID=_launchedPID;
- (void).cxx_destruct;
- (void)main;
- (id)initWithDevicePath:(id)arg1 environment:(id)arg2 arguments:(id)arg3 options:(id)arg4 kickstart:(BOOL)arg5;

@end

@interface XRVMRegion : NSObject <NSCoding, NSCopying>
{
    unsigned long long start;
    unsigned long long length;
    int current_prot;
    int max_prot;
    unsigned char external_pager;
    unsigned char share_mode;
    unsigned char user_tag;
    BOOL is_submap;
    NSString *path;
    NSString *type;
    unsigned int pages_resident;
    unsigned int pages_shared_now_private;
    unsigned int pages_swapped_out;
    unsigned int pages_dirtied;
    unsigned int ref_count;
    unsigned int region_page_shift;
}

+ (void)initialize;
+ (unsigned long long)regionIndexInArray:(id)arg1 forAddress:(unsigned long long)arg2;
- (void).cxx_destruct;
- (id)displayPath;
- (id)displayType;
- (int)maxProtection;
- (int)currentProtection;
- (id)path;
- (id)type;
- (unsigned char)tag;
- (unsigned long long)pageSize;
- (unsigned long long)swappedSize;
- (unsigned long long)dirtySize;
- (unsigned long long)residentSize;
- (unsigned int)virtualPages;
- (unsigned long long)virtualSize;
- (unsigned long long)location;
- (BOOL)isSubmapRegion;
- (void)_setResident:(unsigned int)arg1 dirty:(unsigned int)arg2 swapped:(unsigned int)arg3 speculative:(unsigned int)arg4;
- (void)setAddress:(unsigned long long)arg1 size:(unsigned long long)arg2;
- (void)setPath:(id)arg1 type:(id)arg2;
- (BOOL)isAdjacentTo:(id)arg1;
- (BOOL)typeMatches:(id)arg1;
- (BOOL)regionMatch:(id)arg1;
- (BOOL)matchesAddr:(unsigned long long)arg1 size:(unsigned long long)arg2 regionInfo:(struct vm_region_submap_info_64 *)arg3;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAddress:(unsigned long long)arg1 size:(unsigned long long)arg2 regionInfo:(struct vm_region_submap_info_64 *)arg3;

@end

@interface XRVMCoalescedRegion : XRVMRegion
{
    NSMutableArray *_subRegions;
    NSString *_groupName;
    unsigned long long _virtualSize;
    unsigned int _multiplicityFlags;
}

- (void).cxx_destruct;
- (id)displayPath;
- (id)displayType;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)sortSubregionsWithComparator:(CDUnknownBlockType)arg1;
- (BOOL)isFakeAggregate;
- (id)subRegions;
- (unsigned long long)virtualSize;
- (void)addRegion:(id)arg1;
- (id)initWithRegions:(id)arg1 groupName:(id)arg2;

@end

@interface XRVMRegionAnnotation : NSObject <NSCoding>
{
    unsigned long long _baseAddress;
    int *_pageMap;
    unsigned int _vpages;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (int)dispositionForPage:(unsigned long long)arg1;
- (id)initSamplingRegion:(id)arg1 inTask:(unsigned int)arg2 updateRegionStatistics:(BOOL)arg3;

@end

@interface XRVMState : NSObject <NSCoding>
{
    unsigned long long _machAbsolute;
    unsigned long long _traceRelative;
    NSMutableArray *_regions;
    unsigned long long _residentSize;
    unsigned long long _swapSize;
    unsigned long long _dirtySize;
    unsigned long long _totalSize;
    unsigned long long _sharedRegionStart;
    unsigned long long _sharedRegionLength;
    struct __CFDictionary *_pageAnnotationsByRegion;
    unsigned int _task;
}

+ (id)currentStateForTask:(unsigned int)arg1 pid:(int)arg2 previousState:(id)arg3 dehydratedDiffVersion:(BOOL)arg4;
+ (void)initialize;
- (void).cxx_destruct;
- (id)summaryRegionsWithOptions:(int)arg1;
- (id)regionsWithOptions:(int)arg1;
- (void)_annotateRange:(struct _CSRange)arg1 withPath:(id)arg2 type:(id)arg3;
- (id)_annotationForRegion:(id)arg1;
- (void)_addRegion:(id)arg1 annotation:(id)arg2 new:(BOOL)arg3;
- (unsigned long long)traceRelativeTimestamp;
- (unsigned long long)machAbsoluteTimestamp;
- (id)regions;
- (unsigned long long)swappedSize;
- (unsigned long long)dirtySize;
- (unsigned long long)residentSize;
- (unsigned long long)virtualSize;
- (id)regionForAddress:(unsigned long long)arg1;
- (void)hydrateWithPreviousState:(id)arg1;
- (id)detailsForRegion:(id)arg1;
- (void)_recalculateSizes;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface _CPTapGuarded : NSObject
{
    id <_ContainerStrategy> containerStrategy;
    BOOL _stoppedWhileSuspended;
    BOOL _removeValidatedPathWhenComplete;
    BOOL _hasAtLeastOneRecordHandler;
    BOOL _running;
    BOOL _connectionEnabled;
    BOOL _paused;
    BOOL _preserveContainerFiles;
    int _suspendCount;
    int _containersCreated;
    unsigned int _coreCount;
    struct _CPSession *_session;
    struct _CPSession *_unprocessedSession;
    NSString *_UUID;
    NSObject<OS_dispatch_source> *_internalSrc;
    DTCoreProfileTapConfig *_latestConfig;
    NSString *_latestValidatedPath;
    DTCoreProfileTapConfig *_currentConfig;
    NSString *_currentContainerPath;
    NSMutableArray *_recordHandlers;
    NSMutableArray *_recordContainerHandlers;
    long long _triggerCount;
    NSMutableArray *_metadataByTriggerIndex;
    NSDictionary *_sessionMetadata;
    unsigned int *_triggerIDs;
    NSString *_errorString;
}

@property(retain, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(nonatomic) unsigned int *triggerIDs; // @synthesize triggerIDs=_triggerIDs;
@property(retain, nonatomic) NSDictionary *sessionMetadata; // @synthesize sessionMetadata=_sessionMetadata;
@property(retain, nonatomic) NSMutableArray *metadataByTriggerIndex; // @synthesize metadataByTriggerIndex=_metadataByTriggerIndex;
@property(nonatomic) long long triggerCount; // @synthesize triggerCount=_triggerCount;
@property(nonatomic) unsigned int coreCount; // @synthesize coreCount=_coreCount;
@property(nonatomic) BOOL preserveContainerFiles; // @synthesize preserveContainerFiles=_preserveContainerFiles;
@property(nonatomic) BOOL paused; // @synthesize paused=_paused;
@property(nonatomic) BOOL connectionEnabled; // @synthesize connectionEnabled=_connectionEnabled;
@property(nonatomic) BOOL running; // @synthesize running=_running;
@property(nonatomic) int containersCreated; // @synthesize containersCreated=_containersCreated;
@property(retain, nonatomic) NSMutableArray *recordContainerHandlers; // @synthesize recordContainerHandlers=_recordContainerHandlers;
@property(retain, nonatomic) NSMutableArray *recordHandlers; // @synthesize recordHandlers=_recordHandlers;
@property(nonatomic) BOOL hasAtLeastOneRecordHandler; // @synthesize hasAtLeastOneRecordHandler=_hasAtLeastOneRecordHandler;
@property(retain, nonatomic) NSString *currentContainerPath; // @synthesize currentContainerPath=_currentContainerPath;
@property(retain, nonatomic) DTCoreProfileTapConfig *currentConfig; // @synthesize currentConfig=_currentConfig;
@property(retain, nonatomic) NSString *latestValidatedPath; // @synthesize latestValidatedPath=_latestValidatedPath;
@property(retain, nonatomic) DTCoreProfileTapConfig *latestConfig; // @synthesize latestConfig=_latestConfig;
@property(nonatomic) BOOL removeValidatedPathWhenComplete; // @synthesize removeValidatedPathWhenComplete=_removeValidatedPathWhenComplete;
@property(nonatomic) BOOL stoppedWhileSuspended; // @synthesize stoppedWhileSuspended=_stoppedWhileSuspended;
@property(nonatomic) int suspendCount; // @synthesize suspendCount=_suspendCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *internalSrc; // @synthesize internalSrc=_internalSrc;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
- (void).cxx_destruct;
@property(nonatomic) struct _CPSession *unprocessedSession; // @synthesize unprocessedSession=_unprocessedSession;
@property(nonatomic) struct _CPSession *session; // @synthesize session=_session;
- (void)dealloc;
- (void)reset;

@end

@interface _DTCoreProfileTapService : NSObject
{
    DTXChannel *channel;
    DTCoreProfileLocalTap *tap;
    NSMutableIndexSet *metadataSentIndexSet;
    BOOL sessionMetaDataSent;
    BOOL useExpiredPidCache;
}

- (void).cxx_destruct;
- (id)initWithChannel:(id)arg1;

@end

@interface _RecordContainerStrategy : NSObject <_ContainerStrategy>
{
    struct _ContainerArray _containers;
    CDUnknownBlockType _tapRecordContainerHandler;
}

@property(copy, nonatomic) CDUnknownBlockType tapRecordContainerHandler; // @synthesize tapRecordContainerHandler=_tapRecordContainerHandler;
- (void).cxx_destruct;
- (void)dealloc;
- (void)receivedRecordContainers:(struct DTCoreProfileTapContainerRec *)arg1 count:(long long)arg2 guard:(id)arg3;
- (void)setSessionHandler:(CDUnknownBlockType)arg1 guard:(id)arg2;
@property(readonly, getter=isSessionBased) BOOL sessionBased;
- (void)invokeClientHandlers:(id)arg1;
- (id)willInvokeClientHandlers:(id)arg1;
- (void)reset:(id)arg1;
- (void)fetchFromTap:(id)arg1 guard:(id)arg2;
- (void)unpauseTap:(id)arg1 guard:(id)arg2;
- (void)pauseTap:(id)arg1 guard:(id)arg2;
- (void)stopTap:(id)arg1 guard:(id)arg2;
- (void)startTap:(id)arg1 guard:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _RecordContainerLocalStrategy : _RecordContainerStrategy
{
}

- (void)fetchFromTap:(id)arg1 guard:(id)arg2;
- (void)unpauseTap:(id)arg1 guard:(id)arg2;
- (void)pauseTap:(id)arg1 guard:(id)arg2;
- (void)stopTap:(id)arg1 guard:(id)arg2;
- (void)startTap:(id)arg1 guard:(id)arg2;

@end

@interface _RecordContainerRemoteStrategy : _RecordContainerStrategy
{
}

@end

@interface _SessionContainerStrategy : NSObject <_ContainerStrategy>
{
    CDUnknownBlockType _sessionHandler;
}

- (void).cxx_destruct;
- (void)receivedRecordContainers:(struct DTCoreProfileTapContainerRec *)arg1 count:(long long)arg2 guard:(id)arg3;
- (void)setSessionHandler:(CDUnknownBlockType)arg1 guard:(id)arg2;
- (void)invokeClientHandlers:(id)arg1;
- (id)willInvokeClientHandlers:(id)arg1;
@property(readonly, getter=isSessionBased) BOOL sessionBased;
- (void)reset:(id)arg1;
- (void)fetchFromTap:(id)arg1 guard:(id)arg2;
- (void)unpauseTap:(id)arg1 guard:(id)arg2;
- (void)pauseTap:(id)arg1 guard:(id)arg2;
- (void)stopTap:(id)arg1 guard:(id)arg2;
- (void)startTap:(id)arg1 guard:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _SessionContainerLocalStrategy : _SessionContainerStrategy
{
}

- (void)reset:(id)arg1;
- (void)fetchFromTap:(id)arg1 guard:(id)arg2;
- (void)unpauseTap:(id)arg1 guard:(id)arg2;
- (void)pauseTap:(id)arg1 guard:(id)arg2;
- (void)stopTap:(id)arg1 guard:(id)arg2;
- (void)startTap:(id)arg1 guard:(id)arg2;

@end

@interface _SessionContainerRemoteStrategy : _SessionContainerStrategy
{
}

- (void)stopTap:(id)arg1 guard:(id)arg2;
- (void)startTap:(id)arg1 guard:(id)arg2;

@end

@interface _XRExpiredPidCache : NSObject
{
    struct TFPPidWatcher pidWatcher;
    int enableCount;
    NSMutableDictionary *signatures;
}

- (void).cxx_destruct;

@end

