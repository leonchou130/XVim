//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct PFTEvent {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
};

struct XRGraphPoint {
    unsigned long long _field1;
    float _field2;
    void *_field3;
};

struct XRPathAttribute {
    id _field1;
    id _field2;
    double _field3;
    double *_field4;
    double _field5;
    double _field6;
};

struct XRStrata;

struct XRStrataGroup {
    struct XRStrata *_field1;
    void *_field2;
    unsigned int _field3;
};

struct XRTimeRange {
    unsigned long long start;
    unsigned long long length;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct fileposq_s {
    long long _field1;
    unsigned long long _field2;
    int _field3;
    struct fileposq_s *_field4;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks/InstrumentsDTrace.framework/Versions/A/InstrumentsDTrace
// UUID: 87AC9CCE-D6E2-3094-8F31-C95E13AA5D44
//
//                           Arch: x86_64
//                Current version: 56156.0.0
//          Compatibility version: 1.0.0
//                 Source version: 56156.0.0.0.0
//       Minimum Mac OS X version: 10.9.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../../../
//                               = /Applications/Xcode.app/Contents/Applications/Instruments.app/Contents/Frameworks
//                       Run path: @loader_path/../../../../../../../SharedFrameworks
//                               = /Applications/Xcode.app/Contents/SharedFrameworks
//                       Run path: @loader_path/../../../../../../../OtherFrameworks
//                               = /Applications/Xcode.app/Contents/OtherFrameworks
//

@protocol CommonRawStack <NSCoding, NSObject>
- (long long)kernelFrameCount;
- (int)pid;
- (long long)count;
- (unsigned long long *)frames;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSComboBoxDataSource <NSObject>

@optional
- (NSString *)comboBox:(NSComboBox *)arg1 completedString:(NSString *)arg2;
- (unsigned long long)comboBox:(NSComboBox *)arg1 indexOfItemWithStringValue:(NSString *)arg2;
- (id)comboBox:(NSComboBox *)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(NSComboBox *)arg1;
@end

@protocol NSControlTextEditingDelegate <NSObject>

@optional
- (NSArray *)control:(NSControl *)arg1 textView:(NSTextView *)arg2 completions:(NSArray *)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(NSControl *)arg1 textView:(NSTextView *)arg2 doCommandBySelector:(SEL)arg3;
- (BOOL)control:(NSControl *)arg1 isValidObject:(id)arg2;
- (void)control:(NSControl *)arg1 didFailToValidatePartialString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 didFailToFormatString:(NSString *)arg2 errorDescription:(NSString *)arg3;
- (BOOL)control:(NSControl *)arg1 textShouldEndEditing:(NSText *)arg2;
- (BOOL)control:(NSControl *)arg1 textShouldBeginEditing:(NSText *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (BOOL)respondsToSelector:(SEL)arg1;
- (BOOL)conformsToProtocol:(Protocol *)arg1;
- (BOOL)isMemberOfClass:(Class)arg1;
- (BOOL)isKindOfClass:(Class)arg1;
- (BOOL)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (BOOL)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSRuleEditorDelegate <NSObject>
- (id)ruleEditor:(NSRuleEditor *)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;
- (id)ruleEditor:(NSRuleEditor *)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (long long)ruleEditor:(NSRuleEditor *)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;

@optional
- (void)ruleEditorRowsDidChange:(NSNotification *)arg1;
- (NSDictionary *)ruleEditor:(NSRuleEditor *)arg1 predicatePartsForCriterion:(id)arg2 withDisplayValue:(id)arg3 inRow:(long long)arg4;
@end

@protocol NSTableViewDataSource <NSObject>

@optional
- (NSArray *)tableView:(NSTableView *)arg1 namesOfPromisedFilesDroppedAtDestination:(NSURL *)arg2 forDraggedRowsWithIndexes:(NSIndexSet *)arg3;
- (BOOL)tableView:(NSTableView *)arg1 acceptDrop:(id <NSDraggingInfo>)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(NSTableView *)arg1 validateDrop:(id <NSDraggingInfo>)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 writeRowsWithIndexes:(NSIndexSet *)arg2 toPasteboard:(NSPasteboard *)arg3;
- (void)tableView:(NSTableView *)arg1 updateDraggingItemsForDrag:(id <NSDraggingInfo>)arg2;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 endedAtPoint:(struct CGPoint)arg3 operation:(unsigned long long)arg4;
- (void)tableView:(NSTableView *)arg1 draggingSession:(NSDraggingSession *)arg2 willBeginAtPoint:(struct CGPoint)arg3 forRowIndexes:(NSIndexSet *)arg4;
- (id <NSPasteboardWriting>)tableView:(NSTableView *)arg1 pasteboardWriterForRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 sortDescriptorsDidChange:(NSArray *)arg2;
- (void)tableView:(NSTableView *)arg1 setObjectValue:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (id)tableView:(NSTableView *)arg1 objectValueForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(NSTableView *)arg1;
@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@optional
- (void)tableViewSelectionIsChanging:(NSNotification *)arg1;
- (void)tableViewColumnDidResize:(NSNotification *)arg1;
- (void)tableViewColumnDidMove:(NSNotification *)arg1;
- (void)tableViewSelectionDidChange:(NSNotification *)arg1;
- (BOOL)tableView:(NSTableView *)arg1 shouldReorderColumn:(long long)arg2 toColumn:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 sizeToFitWidthOfColumn:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 isGroupRow:(long long)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldTypeSelectForEvent:(NSEvent *)arg2 withCurrentSearchString:(NSString *)arg3;
- (long long)tableView:(NSTableView *)arg1 nextTypeSelectMatchFromRow:(long long)arg2 toRow:(long long)arg3 forString:(NSString *)arg4;
- (NSString *)tableView:(NSTableView *)arg1 typeSelectStringForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (double)tableView:(NSTableView *)arg1 heightOfRow:(long long)arg2;
- (void)tableView:(NSTableView *)arg1 didDragTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 didClickTableColumn:(NSTableColumn *)arg2;
- (void)tableView:(NSTableView *)arg1 mouseDownInHeaderOfTableColumn:(NSTableColumn *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectTableColumn:(NSTableColumn *)arg2;
- (NSIndexSet *)tableView:(NSTableView *)arg1 selectionIndexesForProposedSelection:(NSIndexSet *)arg2;
- (BOOL)tableView:(NSTableView *)arg1 shouldSelectRow:(long long)arg2;
- (BOOL)selectionShouldChangeInTableView:(NSTableView *)arg1;
- (NSCell *)tableView:(NSTableView *)arg1 dataCellForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (BOOL)tableView:(NSTableView *)arg1 shouldTrackCell:(NSCell *)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (BOOL)tableView:(NSTableView *)arg1 shouldShowCellExpansionForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (NSString *)tableView:(NSTableView *)arg1 toolTipForCell:(NSCell *)arg2 rect:(struct CGRect *)arg3 tableColumn:(NSTableColumn *)arg4 row:(long long)arg5 mouseLocation:(struct CGPoint)arg6;
- (BOOL)tableView:(NSTableView *)arg1 shouldEditTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 willDisplayCell:(id)arg2 forTableColumn:(NSTableColumn *)arg3 row:(long long)arg4;
- (void)tableView:(NSTableView *)arg1 didRemoveRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (void)tableView:(NSTableView *)arg1 didAddRowView:(NSTableRowView *)arg2 forRow:(long long)arg3;
- (NSTableRowView *)tableView:(NSTableView *)arg1 rowViewForRow:(long long)arg2;
- (NSView *)tableView:(NSTableView *)arg1 viewForTableColumn:(NSTableColumn *)arg2 row:(long long)arg3;
@end

@protocol SymbolAwareRun <NSObject>
- (XRBacktraceRepository *)backtraceRepository;
@end

@protocol XRBrushDataSource <NSObject>
- (unsigned long long)numberOfGraphsForRun:(XRRun *)arg1;
- (NSString *)graphStyleForRun:(XRRun *)arg1;

@optional
- (BOOL)hasBaselineForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 provideBackgroundTextForInspectionTimeStamp:(unsigned long long)arg2;
- (unsigned long long)supportedGraphTypesForRun:(XRRun *)arg1;
- (BOOL)stackGraphsForRun:(XRRun *)arg1;
- (BOOL)run:(XRRun *)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (long long)run:(XRRun *)arg1 numberOfLabelsForPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3 graphAtIndex:(long long)arg4;
- (void)run:(XRRun *)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(XRRun *)arg1 graphToCurrentTimeForGraphAtIndex:(long long)arg2;
- (NSString *)graphSummaryForRun:(XRRun *)arg1;
- (NSString *)run:(XRRun *)arg1 pathTypeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (struct XRPathAttribute)run:(XRRun *)arg1 attributeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (unsigned long long)run:(XRRun *)arg1 stateForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (id)run:(XRRun *)arg1 graphedDataKeypath:(id *)arg2;
- (NSString *)run:(XRRun *)arg1 labelForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSString *)run:(XRRun *)arg1 labelForGraphAtIndex:(long long)arg2;
- (NSImage *)run:(XRRun *)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (NSColor *)run:(XRRun *)arg1 colorForGraphAtIndex:(long long)arg2;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 forTimeRange:(struct XRTimeRange)arg4 minimumInterval:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (void)run:(XRRun *)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(XRGraphSequence *)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
@end

@protocol XRExportDataProtocol
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(NSString *)arg2;
@end

@protocol XRSearchTargetHelper
- (NSArray *)backtraceForVisibleRow:(unsigned long long)arg1;
@end

@protocol XRSourceQuery
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 inSourceManager:(XRCodeManager *)arg3 callTreeInformation:(NSDictionary *)arg4;

@optional
- (NSArray *)operation:(NSOperation *)arg1 commentsForSymbol:(id <CommonSymbol>)arg2 forProcess:(int)arg3 inSourceManager:(XRCodeManager *)arg4 callTreeInformation:(NSDictionary *)arg5;
- (NSNumber *)sourceQueriesMustRunOnMainThread;
@end

@protocol XRStrataDataSource <XRBrushDataSource>
- (struct XRStrataGroup *)run:(XRRun *)arg1 strataGroupForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;

@optional
- (double)widthOfBlockGraphForRun:(XRRun *)arg1 usingScale:(struct CGSize)arg2;
@end

@protocol XRVerticalResizeProtocol
- (void)_editorChangedFrame:(double)arg1;
@end

@interface DTraceEvent : NSObject <NSCoding>
{
    NSMutableArray *_data;
    PFTDTraceEventDescriptor *_descriptor;
    PFTDTraceRun *_owner;
    long long _version;
    unsigned long long _index;
    unsigned long long _relativeTimestamp;
}

+ (void)initialize;
+ (id)keyPathsForValuesAffectingStackTraceArray;
+ (id)keyPathsForValuesAffectingRawStackTrace;
+ (id)keyPathsForValuesAffectingStackDepth;
@property(readonly) long long version; // @synthesize version=_version;
@property(retain) PFTDTraceEventDescriptor *descriptor; // @synthesize descriptor=_descriptor;
@property PFTDTraceRun *owner; // @synthesize owner=_owner;
@property id stackTrace; // @dynamic stackTrace;
@property(readonly) unsigned long long tid; // @dynamic tid;
@property(readonly) unsigned long long relativeTimestamp; // @dynamic relativeTimestamp;
- (BOOL)isNumericKey:(id)arg1;
- (unsigned long long)index;
- (void)setIndex:(unsigned long long)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (unsigned long long)indexForKey:(id)arg1;
- (id)valueForKey:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)data;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithData:(id)arg1 withDescriptor:(id)arg2;

@end

@interface NSArray (PFTDescription)
- (id)pftdescriptionAtIndex:(unsigned int)arg1;
@end

@interface NSObject (ChildItems)
- (void)childItem:(id)arg1;
@end

@interface NSObject (PFTDescription)
- (id)pftdescription;
@end

@interface NSString (PrivateSortMethods)
- (long long)xray_numericCompare:(id)arg1;
@end

@interface NSTextField (PFTDescription)
- (id)pftdescription;
@end

@interface PFTDTraceEventDescriptor : NSObject <NSCoding>
{
    NSString *_event_name;
    NSString *_probe;
    NSString *_silent_script;
    NSArray *_variables;
    NSArray *_fields;
    NSMutableDictionary *_custom_types;
    BOOL _emitUStack;
    BOOL _emitKStack;
    BOOL _emitJStack;
    NSString *_predicate;
    BOOL _includeDefaultPredicate;
    SEL _actionSelector;
    NSMutableDictionary *_fieldIndexToKeyMap;
    NSMutableString *_typestr;
    NSMutableString *_argstr;
}

+ (id)convertFieldsToDictionaries:(id)arg1;
+ (id)createDescriptorWithData:(id)arg1 ustack:(BOOL)arg2 kstack:(BOOL)arg3 jstack:(BOOL)arg4;
+ (id)descriptionForProvider:(id)arg1;
+ (id)providerForDescription:(id)arg1;
+ (id)builtInTypesPreferredColumnWidths;
+ (id)descriptionFromFormat:(id)arg1;
+ (id)formatFromDescription:(id)arg1;
+ (id)typeFromDescription:(id)arg1;
+ (id)builtInTypeDescriptions;
+ (id)builtInVariables;
+ (id)builtInTypeGraphCapabilities;
+ (BOOL)isNumericType:(id)arg1;
+ (id)builtInTypes;
- (unsigned long long)fieldIndexForKey:(id)arg1;
- (SEL)actionSelector;
- (void)setActionSelector:(id)arg1;
- (BOOL)includeDefaultPredicate;
- (id)predicate;
- (BOOL)emitJStack;
- (BOOL)emitKStack;
- (BOOL)emitUStack;
- (long long)argumentCount;
- (id)fields;
- (id)variables;
- (id)probe;
- (id)eventName;
- (BOOL)canGraphType:(id)arg1;
- (void)dealloc;
- (id)createScriptWithPredicate:(id)arg1 usingEventIdentifier:(id)arg2 event:(long long)arg3 instrumentIndex:(long long)arg4 descriptorIndex:(long long)arg5 includeSwitch:(BOOL)arg6;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 probe:(id)arg2 script:(id)arg3 variables:(id)arg4 fields:(id)arg5 ustack:(BOOL)arg6 kstack:(BOOL)arg7 jstack:(BOOL)arg8 predicate:(id)arg9 includeDefaultPredicate:(BOOL)arg10;
- (void)_computeStrings;
- (id)wrapArg:(id)arg1 forType:(id)arg2 forProvider:(id)arg3;

@end

@interface PFTDTraceInstrument : PFTInstrument <XRExportDataProtocol, XRSearchTargetHelper, NSTableViewDataSource, NSTableViewDelegate>
{
    NSString *_dtraceScript;
    NSArray *_eventDescriptors;
    NSMutableArray *_eventDescriptorsWithOutput;
    NSMutableDictionary *_eventDescriptorsDisplayable;
    NSMutableArray *_eventTypes;
    BOOL _didComputeDescriptors;
    BOOL _didComputeScript;
    unsigned long long _timeOffset;
    int _instrumentRunNumber;
    BOOL _isRemoved;
    PFTTableDetailView *_detailView;
    XRCallTreeDetailView *_callTreeDetailView;
    BOOL _viewAsCallTree;
    unsigned long long _rowsDisplayedInDetailView;
    unsigned long long _maxAttributeCount;
    NSMutableArray *_variablesToUse;
    NSMutableArray *_fieldsToUse;
    NSMutableArray *_allVariables;
    NSMutableArray *_allFields;
    NSMutableDictionary *_statisticsToDisplay;
    NSMutableArray *_existingEnabledDefaults;
    BOOL _sortAscending;
    BOOL _usesPidProvider;
    NSMutableArray *_quants;
    NSString *_maxStackDepth;
    NSString *_filterContext;
    BOOL _needsFilterRefresh;
    NSDictionary *_restoredPrefs;
}

+ (id)createCallTraceInstrumentForSymbol:(id)arg1 module:(id)arg2 onEnter:(BOOL)arg3 onExit:(BOOL)arg4;
@property(copy) NSString *maxStackDepth; // @synthesize maxStackDepth=_maxStackDepth;
- (void)halfTick:(id)arg1;
- (BOOL)requiresHalfTickNotification;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)addColumnsToCallTreeDetailView:(id)arg1;
- (void)addColumnsToDetailView:(id)arg1;
- (void)defaultViewSymbolAction:(id)arg1;
- (void)_singleClick:(id)arg1;
- (void)_selectionDidChange:(id)arg1;
- (void)trackFocusedOnEventAtUnfilteredIndex:(unsigned long long)arg1;
- (void)setNeedsFilterRefresh;
- (void)refreshFiltersNow;
- (void)reloadDetailViews;
- (id)dataMiningMenu;
- (BOOL)supportsDataMining;
- (BOOL)viewAsCallTree;
- (void)setViewAsCallTree:(BOOL)arg1;
- (BOOL)supportsCallTree;
- (id)detailViewLabelForType:(unsigned long long)arg1;
- (BOOL)detailViewRequiresScrollView:(id)arg1;
- (void)_flagChanged:(id)arg1;
- (id)searchContexts;
- (id)selectedSearchContext;
- (void)filterDetailWithTokens:(id)arg1 context:(id)arg2 matchesAny:(BOOL)arg3;
- (BOOL)useLegacyBrush;
- (void)setCurrentBrushName:(id)arg1;
- (id)dataSourceForBrushWithName:(id)arg1;
- (id)createBrushNamed:(id)arg1;
- (id)eventTypes;
- (id)brushNames;
- (id)existingEnabledDefaults;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setDetailViewType:(unsigned long long)arg1;
- (void)_updateDetailElements;
- (id)dataElementsForContext:(id)arg1;
- (void)_createViews;
- (id)backtraceForVisibleRow:(unsigned long long)arg1;
- (id)dataElementsForExtendedEventViewContext;
- (id)configurationDataElementsForInspector:(id)arg1;
- (BOOL)willProvideConfigurationDataElementsForInspector:(id)arg1;
- (id)dataElementsForTrackViewSetupContext;
- (id)_activeDetailView;
- (BOOL)_isRemoved;
- (void)_remove;
- (id)createRun;
- (BOOL)setSelectedRunIndex:(long long)arg1;
- (BOOL)usesPidProvider;
- (int)_waitInterval;
- (unsigned int)_maxRecordLength;
- (char *)_bufferSize;
- (const char *)_dtraceScript;
- (void)_prepareProbe;
- (char *)_dtraceOutputPath;
- (id)eventDescriptorsToStringUsingNumberPrefix:(long long)arg1 includeSwitch:(BOOL)arg2 externalTarget:(int)arg3;
- (id)_eventDescriptorsToExportStringUsingNumberPrefix:(long long)arg1 includeSwitch:(BOOL)arg2 externalTarget:(int)arg3;
- (id)_eventDescriptorsToStringUsingNumberPrefix:(long long)arg1 includeSwitch:(BOOL)arg2;
- (id)_substituteVariablesForScript:(id)arg1;
- (void)setErrorMessage:(id)arg1;
- (void)setErrorMessage:(id)arg1 inSection:(id)arg2;
- (BOOL)isDeviceSupported:(id)arg1;
- (void)addTrackSegment:(BOOL)arg1;
- (void)setTargetType:(int)arg1;
- (void)stopRecording;
- (void)_endCommand:(id)arg1;
- (void)_startCommand:(id)arg1 instrumentNumber:(int)arg2;
- (BOOL)acceptCommand:(id)arg1;
- (void)restoreFromTraceTemplateData:(id)arg1;
- (id)traceTemplateData;
- (id)allCurrentOutputDescriptors;
- (id)outputDescriptorAtIndex:(unsigned long long)arg1;
- (id)argTableSkipList;
- (void)setType:(id)arg1;
- (void)exportSelectedRunInFormat:(int)arg1 toPath:(id)arg2;
- (void)dealloc;
- (void)computeEventDescriptorsWithOutput;
- (void)_clearProbeData;
- (void)setEventDescriptors:(id)arg1;
- (void)_setScript:(id)arg1;
- (void)observeStatistics;
- (void)unobserveStatistics;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTDTraceInstrumentPlugin : PFTInstrumentPlugin
{
    struct AuthorizationOpaqueRef *_authorizationRef;
    NSLock *_authorizationLock;
    NSMutableDictionary *_traceScripts;
    XRDTraceBuilderViewController *_dTraceBuilderViewController;
}

+ (BOOL)doesStringContainOutputActions:(id)arg1 outputScriptRange:(struct _NSRange *)arg2;
+ (BOOL)doesPathContainIllegalCharacters:(id)arg1;
+ (BOOL)doesScriptContainIllegalCalls:(id)arg1;
@property(retain, nonatomic) XRDTraceBuilderViewController *dTraceBuilderViewController; // @synthesize dTraceBuilderViewController=_dTraceBuilderViewController;
- (void).cxx_destruct;
- (id)keywordsForType:(id)arg1;
- (void)endInstruments:(id)arg1 forCommand:(id)arg2;
- (BOOL)prepareInstruments:(id)arg1 forCommand:(id)arg2 error:(id *)arg3;
- (BOOL)canInstruments:(id)arg1 performCommand:(id)arg2;
- (void)_editEnded:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)editInstrumentType:(id)arg1 forClient:(id)arg2 errorMessage:(id)arg3 errorSection:(id)arg4;
- (BOOL)isInstrumentTypeDeletable:(id)arg1;
- (BOOL)isInstrumentTypeEditable:(id)arg1;
- (id)createInstrumentForType:(id)arg1;
- (struct AuthorizationOpaqueRef *)obtainAuthorizaton:(BOOL)arg1;
- (id)decodeTypeWithUUID:(id)arg1 withCoder:(id)arg2;
- (void)encodeType:(id)arg1 withCoder:(id)arg2;
- (void)removeType:(id)arg1;
- (void)addType:(id)arg1;
- (void)_findDTraceInstrumentsUserOnly:(BOOL)arg1;
- (void)_findDTraceInstruments;
- (void)dealloc;
- (id)initWithExtension:(id)arg1;
- (void)exportInstrument:(id)arg1 toPath:(id)arg2;
- (void)exportInstrument:(id)arg1 withIdentifier:(id)arg2;
- (id)_userInstrumentFileURLForIdentifier:(id)arg1 createDirectory:(BOOL)arg2;
- (id)_userInstrumentsDirectoryURL;

@end

@interface PFTDTraceInstrumentType : PFTInstrumentType
{
    NSDictionary *_probe;
    NSMutableArray *_eventTypes;
    NSURL *_fileURL;
}

+ (id)dTraceTypeBaseExtension;
+ (id)typeWithPlugIn:(id)arg1 XMLElement:(id)arg2 baseExtension:(id)arg3 fileURL:(id)arg4;
- (void).cxx_destruct;
- (BOOL)isEditable;
- (id)eventTypes;
@property(readonly) NSURL *fileURL; // @synthesize fileURL=_fileURL;
- (id)probeCopy;
- (id)probe;
- (void)setProbe:(id)arg1;
@property(readonly) PFTDTraceInstrumentPlugin *dTracePlugIn;
- (id)initWithPlugIn:(id)arg1 data:(id)arg2 fileURL:(id)arg3;

@end

@interface PFTDTraceRun : PFTRun <SymbolAwareRun, XRSourceQuery>
{
    struct __CFArray *_eventAttributes;
    NSMutableArray *_eventSymbolStacks;
    NSArrayController *_attrController;
    NSPredicate *_dataFilterPredicate;
    long long _attributeCount;
    XRBacktraceRepository *_primaryRepository;
    BOOL _reloadedDataNeedsDescriptors;
    struct XRTimeRange _selectedTimeRange;
}

+ (void)initialize;
- (void)dataProcessingComplete;
- (void)addStackTrace:(id)arg1 forRawEvent:(struct PFTEvent)arg2 dtraceEvent:(id)arg3 symbolicateStack:(BOOL)arg4;
- (void)addRawEvent:(struct PFTEvent)arg1 dtraceEvent:(id)arg2 stackTrace:(id)arg3;
- (id)operation:(id)arg1 commentsForSymbol:(id)arg2 inSourceManager:(id)arg3 callTreeInformation:(id)arg4;
- (id)sourceQueriesMustRunOnMainThread;
- (id)valueForKey:(id)arg1 atIndex:(long long)arg2;
- (BOOL)setSortKey:(id)arg1 ascending:(BOOL)arg2;
- (id)mutableDTraceEventsWithinTimeRange:(struct XRTimeRange)arg1 count:(unsigned long long *)arg2 atIndex:(unsigned long long *)arg3 filtered:(BOOL)arg4;
- (id)dtraceEventsWithinTimeRange:(struct XRTimeRange)arg1 filtered:(BOOL)arg2 lock:(BOOL)arg3;
- (id)dataMatchingPredicate:(id)arg1 lock:(BOOL)arg2;
- (id)dataMatchingPredicate:(id)arg1;
- (BOOL)reorderFetchAndReset;
- (unsigned long long)indexForFilteredIndex:(unsigned long long)arg1 lock:(BOOL)arg2;
- (unsigned long long)filteredIndexForIndex:(unsigned long long)arg1 lock:(BOOL)arg2;
- (unsigned long long)lastDTraceEventIndexRelativeToTimeInNanoSeconds:(unsigned long long)arg1 lock:(BOOL)arg2;
- (unsigned long long)lastFilteredEventIndexRelativeToTime:(double)arg1;
- (struct PFTEvent *)filteredEventAtIndex:(long long)arg1 lock:(BOOL)arg2;
- (long long)filteredCountUsingLock:(BOOL)arg1;
- (void)filterNow;
- (id)filterPredicate;
- (void)filterEventsWithStackTokens:(id)arg1 requireAny:(BOOL)arg2;
- (void)filterWithPredicate:(id)arg1 columns:(unsigned long long)arg2;
- (id)_substitutePredicateForPredicate:(id)arg1;
- (id)dateFilterPredicate;
- (void)setSelectedTimeRange:(struct XRTimeRange)arg1;
- (id)backtraceRepository;
- (id)stringOfKeyedValue:(id)arg1 forEvent:(struct PFTEvent *)arg2 forInstrument:(id)arg3 lock:(BOOL)arg4;
- (float)quantityOfKeyedValue:(id)arg1 forEvent:(struct PFTEvent *)arg2 atIndex:(unsigned long long)arg3 forInstrument:(id)arg4 lock:(BOOL)arg5;
- (id)repositoryForCallTrees;
- (long long)stackDepthForEvent:(struct PFTEvent *)arg1 lock:(BOOL)arg2;
- (id)rawStackAtIndex:(unsigned long long)arg1;
- (id)symbolStackTraceForEvent:(struct PFTEvent *)arg1;
- (id)symbolStackTraceForEvent:(struct PFTEvent *)arg1 lock:(BOOL)arg2;
- (long long)attributeCount;
- (void)setAttributeCount:(long long)arg1;
- (id)attributesForEvent:(struct PFTEvent *)arg1 lock:(BOOL)arg2;
- (id)attributesForEvent:(struct PFTEvent *)arg1;
- (id)dtraceEventForRawEvent:(struct PFTEvent *)arg1 lock:(BOOL)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)setInstrument:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PFTDTraceScript : NSObject
{
    NSArray *_dtraceInstruments;
    void **_dtraceRuns;
    PFTInstrumentCommand *_currentCommand;
    NSString *_uuid;
    BOOL _isImporting;
    NSString *_importFilepath;
    NSCondition *_backgroundThreadCoordinationLock;
    NSThread *_backgroundThread;
    long long _backgroundThreadState;
    BOOL _terminateBackgroundThread;
    NSMutableArray *_workQueue;
    NSLock *_workQueueLock;
    NSString *_dtraceScript;
    BOOL _usesPidProvider;
    NSMutableArray *_targetPids;
    unsigned long long _timeOffset;
    XRDTraceClient *_dtraceClient;
    id _delegate;
    long long _currentFilepos;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _fileposLock;
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } _dataAvailable;
    BOOL _ignoreDataInFile;
    struct fileposq_s *_headFilePos;
    struct fileposq_s *_tailFilePos;
    struct fileposq_s *_cachedFilePos;
    struct __CFArray *_producerArray;
    long long _workToken;
    PFTTraceDocument *_traceDocument;
}

+ (id)scriptForInstruments:(id)arg1 targetType:(int)arg2;
- (void)cancelImport;
- (void)_badImportFile;
- (void)_importCompleted;
- (void)importFromURL:(id)arg1 forRunNumber:(long long)arg2;
- (void)_serverFatalErrorMessage:(id)arg1;
- (void)_deleteAlertDidEnd:(id)arg1 returnCode:(int)arg2 contextInfo:(void *)arg3;
- (void)_serverStatusMessage:(id)arg1;
- (id)noteError:(id)arg1 onLine:(int)arg2 forInstrumentAtIndex:(long long)arg3 inSection:(id)arg4;
- (void)_dataProcessingCompleted;
- (void)_beginBackgroundProcessWithCommand:(id)arg1;
- (void)_processImportedData;
- (void)transferEventsToConsumer:(struct __CFArray *)arg1;
- (void)_processWorkQueue;
- (void)_processData;
- (id)_popWorkOffQueue;
- (void)_pushWorkOnQueue:(id)arg1;
- (void)_postDataProcessingError;
- (void)_processStackClauseBinary:(struct __sFILE *)arg1 record:(char *)arg2 eventPair:(struct EventPair **)arg3 uniquingTable:(id)arg4;
- (void)_processStackClauseSymbolicated:(struct __sFILE *)arg1 record:(char *)arg2 eventPair:(struct EventPair **)arg3 uniquingTable:(id)arg4 readMore:(char *)arg5;
- (int)_processDataClause:(struct __sFILE *)arg1 record:(char *)arg2 eventPair:(struct EventPair **)arg3 readMore:(char *)arg4;
- (id)targetProcessIdentifiers;
- (BOOL)usesPidProvider;
- (struct fileposq_s *)_getFilePos;
- (void)consumeBuffersComplete:(long long)arg1 timestamp:(unsigned long long)arg2 code:(int)arg3;
- (void)freeFilePosCache;
- (void)freeFilePos:(struct fileposq_s *)arg1;
- (struct fileposq_s *)allocFilePos;
- (void)_prepareProbesWithExternalTarget:(int)arg1 includeSwitch:(BOOL)arg2;
- (void)_setScript:(id)arg1;
- (char *)_dtraceOutputPath;
- (id)_dtraceOutputPathAsNSString;
- (unsigned int)_maxRecordLength;
- (char *)_bufferSize;
- (id)currentCommand;
- (BOOL)endInstruments:(id)arg1 forCommand:(id)arg2;
- (void)endCommand:(id)arg1;
- (void)startCommand:(id)arg1;
- (id)uuid;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)traceDocument;
- (void)setTraceDocument:(id)arg1;
- (void)dealloc;
- (id)initWithInstruments:(id)arg1;

@end

@interface PFTRuleEditor : NSRuleEditor
{
    NSColor *_backgroundColor;
    BOOL _newItemRefusesCycle;
}

- (BOOL)_nextUnusedItems:(id *)arg1 andValues:(id *)arg2 forRow:(long long)arg3 forRowType:(unsigned long long)arg4;
- (BOOL)newItemRefusesCycle;
- (void)setNewItemRefusesCycle:(BOOL)arg1;
- (void)updateRowRemovalBehavior;
- (void)removeRowsAtIndexes:(id)arg1 includeSubrows:(BOOL)arg2;
- (void)insertRowAtIndex:(long long)arg1 withType:(unsigned long long)arg2 asSubrowOfRow:(long long)arg3 animate:(BOOL)arg4;
- (void)addRow:(id)arg1;
- (void)removeRowAtIndex:(long long)arg1;
- (BOOL)resignFirstResponder;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (id)_backgroundColors;
- (void)dealloc;

@end

@interface XRDTraceBrushDataSource : NSObject <XRBrushDataSource>
{
    NSString *_brushType;
}

- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)graphStyleForRun:(id)arg1;
- (void)dealloc;
- (id)initWithBrushType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDTraceBrushDataSource2 : NSObject <XRBrushDataSource>
{
    NSString *_brushType;
    PFTDTraceInstrument *_unretainedInstrument;
}

- (id)run:(id)arg1 labelForGraphAtIndex:(long long)arg2;
- (id)run:(id)arg1 colorForGraphAtIndex:(long long)arg2;
- (id)run:(id)arg1 imageForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (void)run:(id)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (void)run:(id)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (BOOL)run:(id)arg1 hasImagesForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)graphStyleForRun:(id)arg1;
- (void)dealloc;
- (id)initWithBrushType:(id)arg1 forInstrument:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDTraceBuilderViewController : NSViewController <NSComboBoxDataSource>
{
    long long _currentProbeNumberInElementArray;
    long long _newProbeNumber;
    NSMutableArray *_probeViewControllers;
    NSMenuItem *_keepUserStackTraces;
    NSMenuItem *_keepKernelStackTraces;
    NSMenuItem *_keepNoStackTraces;
    NSComboBox *_category;
    NSTextField *_name;
    NSTextField *_descriptionField;
    NSImageView *_image;
    NSPopUpButton *_stackPopup;
    NSButton *_saveButton;
    NSButton *_savePreferenceCheckbox;
    PFTDataView *_probesView;
    NSButton *_deleteButton;
    PFTDataElementList *_probesModel;
    NSPopUpButton *_rootRuleEditorPopUpButton;
    NSTextField *_rootRuleEditorTextField;
    NSPopUpButton *_subrootRuleEditorPopUpButton;
    NSPopUpButton *_simplePredicateComparator;
    NSPopUpButton *_rootActionsPopUp;
    NSPopUpButton *_argumentPopUp;
    NSTextField *_nameType;
    NSString *_errorMessage;
    NSString *_errorSection;
    PFTDTraceInstrumentType *_type;
    id <PFTInstrumentClient> _client;
    NSMutableArray *_probes;
    NSString *_beginClause;
    NSString *_endClause;
    NSString *_dataClause;
    NSData *_previousState;
}

@property(copy, nonatomic) NSData *previousState; // @synthesize previousState=_previousState;
@property(copy, nonatomic) NSString *dataClause; // @synthesize dataClause=_dataClause;
@property(copy, nonatomic) NSString *endClause; // @synthesize endClause=_endClause;
@property(copy, nonatomic) NSString *beginClause; // @synthesize beginClause=_beginClause;
@property(retain, nonatomic) NSMutableArray *probes; // @synthesize probes=_probes;
@property(retain, nonatomic) id <PFTInstrumentClient> client; // @synthesize client=_client;
@property(retain, nonatomic) PFTDTraceInstrumentType *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *errorSection; // @synthesize errorSection=_errorSection;
@property(retain, nonatomic) NSString *errorMessage; // @synthesize errorMessage=_errorMessage;
@property(nonatomic) __weak NSTextField *nameType; // @synthesize nameType=_nameType;
@property(nonatomic) __weak NSPopUpButton *argumentPopUp; // @synthesize argumentPopUp=_argumentPopUp;
@property(nonatomic) __weak NSPopUpButton *rootActionsPopUp; // @synthesize rootActionsPopUp=_rootActionsPopUp;
@property(nonatomic) __weak NSPopUpButton *simplePredicateComparator; // @synthesize simplePredicateComparator=_simplePredicateComparator;
@property(nonatomic) __weak NSPopUpButton *subrootRuleEditorPopUpButton; // @synthesize subrootRuleEditorPopUpButton=_subrootRuleEditorPopUpButton;
@property(nonatomic) __weak NSTextField *rootRuleEditorTextField; // @synthesize rootRuleEditorTextField=_rootRuleEditorTextField;
@property(nonatomic) __weak NSPopUpButton *rootRuleEditorPopUpButton; // @synthesize rootRuleEditorPopUpButton=_rootRuleEditorPopUpButton;
@property(retain, nonatomic) PFTDataElementList *probesModel; // @synthesize probesModel=_probesModel;
@property(nonatomic) __weak NSButton *deleteButton; // @synthesize deleteButton=_deleteButton;
@property(nonatomic) __weak PFTDataView *probesView; // @synthesize probesView=_probesView;
@property(nonatomic) __weak NSButton *savePreferenceCheckbox; // @synthesize savePreferenceCheckbox=_savePreferenceCheckbox;
@property(nonatomic) __weak NSButton *saveButton; // @synthesize saveButton=_saveButton;
@property(nonatomic) __weak NSPopUpButton *stackPopup; // @synthesize stackPopup=_stackPopup;
@property(nonatomic) __weak NSImageView *image; // @synthesize image=_image;
@property(nonatomic) __weak NSTextField *descriptionField; // @synthesize descriptionField=_descriptionField;
@property(nonatomic) __weak NSTextField *name; // @synthesize name=_name;
@property(nonatomic) __weak NSComboBox *category; // @synthesize category=_category;
@property(nonatomic) __weak NSMenuItem *keepNoStackTraces; // @synthesize keepNoStackTraces=_keepNoStackTraces;
@property(nonatomic) __weak NSMenuItem *keepKernelStackTraces; // @synthesize keepKernelStackTraces=_keepKernelStackTraces;
@property(nonatomic) __weak NSMenuItem *keepUserStackTraces; // @synthesize keepUserStackTraces=_keepUserStackTraces;
- (void).cxx_destruct;
- (void)_updateSaveButtonTitle;
- (void)_validateDeleteButton;
- (void)_readInType;
- (void)_setupArgumentsPopup:(id)arg1;
- (void)_updateDataElementsList;
- (BOOL)_recordProbesAndVerify:(BOOL)arg1;
- (id)_currentDescriptionAndAttributes:(id *)arg1;
- (id)_identifier;
- (void)_exportDescription:(id)arg1 toPath:(id)arg2;
- (void)newProbe:(id)arg1;
- (void)deleteProbe:(id)arg1;
- (void)preserveAction:(id)arg1;
- (void)cancel:(id)arg1;
- (void)ok:(id)arg1;
- (id)comboBox:(id)arg1 objectValueForItemAtIndex:(long long)arg2;
- (long long)numberOfItemsInComboBox:(id)arg1;
- (void)awakeFromNib;
- (id)initWithType:(id)arg1 client:(id)arg2 errorMessage:(id)arg3 errorSection:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDTraceClient : NSObject
{
    NSObject<OS_xpc_object> *_daemonConnection;
    NSMutableArray *_statusMessages;
    NSConditionLock *_probesSetUpLock;
    PFTDTraceScript *_currentScript;
}

+ (id)clientWithScript:(id)arg1 scriptPath:(id)arg2 outputPath:(id)arg3 authorization:(struct AuthorizationOpaqueRef *)arg4;
- (id)currentScript;
- (id)statusMessages;
- (void)addStatusMessage:(id)arg1 code:(int)arg2 terminator:(BOOL)arg3;
- (void)stop;
- (BOOL)waitForProbeSetupUntilDate:(id)arg1;
- (void)dealloc;
- (id)_initWithScript:(id)arg1 scriptPath:(id)arg2 outputPath:(id)arg3 authorization:(struct AuthorizationOpaqueRef *)arg4;

@end

@interface XRDTraceLibraryBrushDataSource : NSObject <XRStrataDataSource>
{
    NSMutableArray *_libraries;
}

- (double)widthOfBlockGraphForRun:(id)arg1 usingScale:(struct CGSize)arg2;
- (struct XRPathAttribute)run:(id)arg1 attributeForState:(unsigned long long)arg2 graphAtIndex:(long long)arg3;
- (void)run:(id)arg1 userFocusedOnPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3;
- (id)run:(id)arg1 colorForGraphAtIndex:(long long)arg2;
- (void)run:(id)arg1 provideLabel:(id *)arg2 andLabelPosition:(struct XRGraphPoint *)arg3 forLabelIndex:(long long)arg4 forInspectionTimeStamp:(unsigned long long)arg5 graphAtIndex:(long long)arg6;
- (long long)run:(id)arg1 numberOfLabelsForPoint:(struct XRGraphPoint *)arg2 forInspectionTimeStamp:(unsigned long long)arg3 graphAtIndex:(long long)arg4;
- (struct XRStrataGroup *)run:(id)arg1 strataGroupForPoint:(struct XRGraphPoint *)arg2 graphAtIndex:(long long)arg3;
- (void)run:(id)arg1 providePoints:(struct XRGraphPoint **)arg2 count:(long long *)arg3 graphSequence:(id)arg4 forTimeRange:(struct XRTimeRange)arg5 minimumInterval:(unsigned long long)arg6 graphAtIndex:(long long)arg7;
- (id)run:(id)arg1 graphedDataKeypath:(id *)arg2;
- (unsigned long long)numberOfGraphsForRun:(id)arg1;
- (id)graphStyleForRun:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRDTraceXMLBuilder : NSObject
{
}

+ (id)xmlFromDescription:(id)arg1;

@end

@interface XRProbeView : NSView
{
    XRProbeViewController *_viewController;
}

@property(nonatomic) __weak XRProbeViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (id)recordProbesAndVerify:(BOOL)arg1;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface XRProbeViewController : NSViewController <XRVerticalResizeProtocol, NSRuleEditorDelegate>
{
    DVTExtension *_previousExtension;
    NSString *_previousName;
    PFTRuleEditor *_ruleEditor;
    PFTRuleEditor *_actionsTable;
    NSTextView *_script;
    NSMutableDictionary *_probe;
    PFTDataElement *_element;
    unsigned long long _errorContext;
    NSTextField *_scriptLabel;
    NSTextField *_ruleLabel;
    NSTextField *_actionLabel;
    NSPopUpButton *_subrootRuleEditorPopUpButton;
    NSPopUpButton *_rootActionsPopUp;
    NSTextField *_rootRuleEditorTextField;
}

@property(retain, nonatomic) NSTextField *rootRuleEditorTextField; // @synthesize rootRuleEditorTextField=_rootRuleEditorTextField;
@property(retain, nonatomic) NSPopUpButton *rootActionsPopUp; // @synthesize rootActionsPopUp=_rootActionsPopUp;
@property(retain, nonatomic) NSPopUpButton *subrootRuleEditorPopUpButton; // @synthesize subrootRuleEditorPopUpButton=_subrootRuleEditorPopUpButton;
@property(nonatomic) __weak NSTextField *actionLabel; // @synthesize actionLabel=_actionLabel;
@property(nonatomic) __weak NSTextField *ruleLabel; // @synthesize ruleLabel=_ruleLabel;
@property(nonatomic) __weak NSTextField *scriptLabel; // @synthesize scriptLabel=_scriptLabel;
@property(nonatomic) unsigned long long errorContext; // @synthesize errorContext=_errorContext;
@property(retain, nonatomic) PFTDataElement *element; // @synthesize element=_element;
@property(retain, nonatomic) NSMutableDictionary *probe; // @synthesize probe=_probe;
@property(retain, nonatomic) NSTextView *script; // @synthesize script=_script;
@property(nonatomic) __weak PFTRuleEditor *actionsTable; // @synthesize actionsTable=_actionsTable;
@property(nonatomic) __weak PFTRuleEditor *ruleEditor; // @synthesize ruleEditor=_ruleEditor;
- (void).cxx_destruct;
- (void)_setRulesForProbe:(id)arg1;
- (void)_loadActionsForProbePoint:(id)arg1;
- (void)_setTitleOfElement;
- (void)_textFieldEdited:(id)arg1;
- (void)_menuSelected:(id)arg1;
- (void)_editorChangedFrame:(double)arg1;
- (id)ruleEditor:(id)arg1 displayValueForCriterion:(id)arg2 inRow:(long long)arg3;
- (id)ruleEditor:(id)arg1 child:(long long)arg2 forCriterion:(id)arg3 withRowType:(unsigned long long)arg4;
- (long long)ruleEditor:(id)arg1 numberOfChildrenForCriterion:(id)arg2 withRowType:(unsigned long long)arg3;
- (id)recordProbesAndVerify:(BOOL)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (id)initWithProbe:(id)arg1 actionGuide:(id)arg2 subrootGuide:(id)arg3 editorGuide:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XRTabView : NSTabView
{
}

- (void)_drawBorder:(id)arg1 inRect:(struct CGRect)arg2;

@end

