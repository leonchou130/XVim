//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/SpringBoardServices.framework/SpringBoardServices
// UUID: C4A99868-77F8-3F6A-BE5C-96E688BEC13E
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2933.5.5.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BKSAccelerometerDelegate <NSObject>
- (void)accelerometer:(BKSAccelerometer *)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;

@optional
- (void)accelerometer:(BKSAccelerometer *)arg1 didChangeDeviceOrientation:(int)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol SBCardItemsControllerRemoteInterface <NSObject>
- (void)getCardItemsForControllerWithIdentifier:(NSString *)arg1 withHandler:(void (^)(NSArray *, NSError *))arg2;
- (void)clearCardItemsForControllerWithIdentifier:(NSString *)arg1;
- (void)setCardItems:(NSArray *)arg1 forControllerWithIdentifier:(NSString *)arg2;
- (void)removeCardItems:(NSArray *)arg1 forControllerWithIdentifier:(NSString *)arg2;
- (void)addCardItems:(NSArray *)arg1 forControllerWithIdentifier:(NSString *)arg2;
- (void)cardItemsDidChange:(NSArray *)arg1 forControllerWithIdentifier:(NSString *)arg2;
@end

@protocol SBSCardItemsControllerRemoteInterface <NSObject>
@end

@protocol SBSStatusBarStyleOverridesAssertionClient <NSObject>
- (void)invalidateStatusBarStyleOverridesAssertionsWithIdentifiers:(NSSet *)arg1;
@end

@protocol SBStatusBarStyleOverridesAssertionServer <NSObject>
- (void)deactivateStatusBarStyleOverridesAssertionsWithIdentifiers:(NSSet *)arg1;
- (void)activateStatusBarStyleOverridesAssertions:(NSSet *)arg1 reply:(void (^)(NSDictionary *))arg2;
@end

@interface NSDictionary (SBS)
- (id)sbs_dictionaryByAddingEntriesFromDictionary:(id)arg1;
- (id)sbs_safeObjectForKey:(id)arg1 ofType:(Class)arg2;
@end

@interface NSMutableDictionary (SBS)
- (void)sbs_setSafeObject:(id)arg1 forKey:(id)arg2;
@end

@interface NSObject (SBS)
+ (_Bool)sbs_synchronousWrapper:(CDUnknownBlockType)arg1 dispatchTimeout:(unsigned long long)arg2;
+ (id)sbs_valueFromData:(id)arg1 ofType:(const char *)arg2;
+ (id)sbs_dataWithValue:(id)arg1;
+ (_Bool)sbs_synchronousWrapper:(CDUnknownBlockType)arg1 timeout:(double)arg2;
+ (_Bool)sbs_synchronousWrapper:(CDUnknownBlockType)arg1;
+ (id)sbs_objectFromData:(id)arg1;
+ (id)sbs_dataFromObject:(id)arg1;
- (_Bool)sbs_isPlistableType;
@end

@interface NSString (SBS)
+ (id)sbs_stringFromCGRect:(struct CGRect)arg1;
- (struct CGRect)sbs_cgRectValue;
@end

@interface SBAppLaunchUtilities : NSObject
{
}

+ (_Bool)waitForChangeToState:(unsigned int)arg1 forDisplayID:(id)arg2 withTimeout:(double)arg3 performingBlock:(CDUnknownBlockType)arg4;

@end

@interface SBLaunchAppListener : NSObject
{
    NSString *_bundleIdentifier;
    CDUnknownBlockType _block;
    NSLock *_lock;
    _Bool _launched;
    int _notifyToken;
    int _notifyAppExitedToken;
    unsigned int _notifyRegisterStatus;
    unsigned int _notifyAppExitedStatus;
}

+ (_Bool)waitForLaunchThatSpringBoardKnowsAbout:(id)arg1 timeout:(double)arg2;
- (void)invalidate;
- (void)_didFailToLaunch;
- (void)_didLaunch;
- (void)dealloc;
- (id)initWithBundleIdentifier:(id)arg1 handlerBlock:(CDUnknownBlockType)arg2;

@end

@interface SBSAccelerometer : NSObject <BKSAccelerometerDelegate>
{
    id <SBSAccelerometerDelegate> _delegate;
    BKSAccelerometer *_bksMirror;
}

- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (int)currentDeviceOrientation;
@property(nonatomic) _Bool orientationEventsEnabled;
@property(nonatomic) float zThreshold;
@property(nonatomic) float yThreshold;
@property(nonatomic) float xThreshold;
@property(nonatomic) double updateInterval;
@property(nonatomic) _Bool accelerometerEventsEnabled;
- (void)dealloc;
- (id)init;
@property(nonatomic) id <SBSAccelerometerDelegate> delegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBSAcquireAssertionAction : BSAction
{
}

+ (id)assertionWithAssertionName:(id)arg1 reason:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned int port;
@property(readonly, nonatomic) NSString *reason;
@property(readonly, nonatomic) NSString *assertionName;

@end

@interface SBSAssertion : NSObject
{
    NSString *_assertionName;
    NSString *_reason;
    unsigned int _port;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _lock;
}

@property(readonly, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(readonly, nonatomic) NSString *assertionName; // @synthesize assertionName=_assertionName;
- (void)invalidate;
- (void)dealloc;
- (id)initWithAssertionName:(id)arg1 reason:(id)arg2 port:(unsigned int)arg3;

@end

@interface SBSCardItem : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _requiresPasscode;
    NSString *_identifier;
    NSData *_iconData;
    NSString *_title;
    NSString *_body;
    NSString *_bundleName;
    NSData *_attachmentData;
    NSDictionary *_userInfo;
    UIImage *_thumbnail;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) UIImage *thumbnail; // @synthesize thumbnail=_thumbnail;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) NSData *attachmentData; // @synthesize attachmentData=_attachmentData;
@property(copy, nonatomic) NSString *bundleName; // @synthesize bundleName=_bundleName;
@property(nonatomic) _Bool requiresPasscode; // @synthesize requiresPasscode=_requiresPasscode;
@property(copy, nonatomic) NSString *body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSData *iconData; // @synthesize iconData=_iconData;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)sortDate;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 iconData:(id)arg2 title:(id)arg3 body:(id)arg4 classification:(long long)arg5 bundleName:(id)arg6 userInfo:(id)arg7;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 iconData:(id)arg2 title:(id)arg3 body:(id)arg4 requiresPasscode:(_Bool)arg5 bundleName:(id)arg6 userInfo:(id)arg7;
- (id)initWithIdentifier:(id)arg1 iconData:(id)arg2 title:(id)arg3 body:(id)arg4 requiresPasscode:(_Bool)arg5 bundleName:(id)arg6 attachmentData:(id)arg7 userInfo:(id)arg8;

@end

@interface SBSCardItemsController : NSObject <SBSCardItemsControllerRemoteInterface>
{
    NSString *_identifier;
    NSXPCConnection *_connection;
}

- (void)getCardItemsWithHandler:(CDUnknownBlockType)arg1;
- (void)clearAllCardItems;
- (void)setCardItems:(id)arg1;
- (void)removeCardItems:(id)arg1;
- (void)addCardItems:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SBSLocalNotificationClient : NSObject
{
}

+ (id)scheduledLocalNotificationsForBundleIdentifier:(id)arg1;
+ (void)setScheduledLocalNotifications:(id)arg1 bundleIdentifier:(id)arg2;
+ (void)cancelAllLocalNotificationsForBundleIdentifier:(id)arg1;
+ (void)cancelLocalNotification:(id)arg1 bundleIdentifier:(id)arg2 waitUntilDone:(_Bool)arg3;
+ (void)cancelLocalNotification:(id)arg1 bundleIdentifier:(id)arg2;
+ (void)scheduleLocalNotification:(id)arg1 bundleIdentifier:(id)arg2 waitUntilDone:(_Bool)arg3;
+ (void)scheduleLocalNotification:(id)arg1 bundleIdentifier:(id)arg2;
+ (id)scheduledLocalNotifications;
+ (void)setScheduledLocalNotifications:(id)arg1;
+ (void)cancelAllLocalNotifications;
+ (void)cancelLocalNotification:(id)arg1;
+ (void)scheduleLocalNotification:(id)arg1;
+ (void)_scheduleLocalNotifications:(id)arg1 cancel:(_Bool)arg2 replace:(_Bool)arg3 optionalBundleIdentifier:(id)arg4;
+ (void)_scheduleLocalNotifications:(id)arg1 cancel:(_Bool)arg2 replace:(_Bool)arg3 optionalBundleIdentifier:(id)arg4 waitUntilDone:(_Bool)arg5;
+ (id)getPendingNotification;
+ (id)currentUserNotificationSettingsForBundleID:(id)arg1;
+ (id)currentUserNotificationSettings;
+ (void)migrateUserNotificationSettingsForBundleIdentifierPushSettingsPairs:(id)arg1;
+ (void)registerUserNotificationSettings:(id)arg1 bundleIdentifier:(id)arg2;
+ (void)registerUserNotificationSettings:(id)arg1;
+ (unsigned int)currentAllowedNotificationTypesForBundleID:(id)arg1;

@end

@interface SBSLockScreenPluginService : NSObject
{
}

- (void)disableLockScreenBundle:(id)arg1 withContext:(id)arg2;
- (void)enableLockScreenBundle:(id)arg1 withContext:(id)arg2;
- (id)_serializedDataForContext:(id)arg1;

@end

@interface SBSRemoteNotificationClient : NSObject
{
}

+ (id)getNotificationUserInfoForToken:(int)arg1;
+ (id)getPendingNotificationUserInfo;
+ (unsigned char)legacyRegisteredRemoteNotificationTypes;
+ (_Bool)isRegisteredForRemoteNotifications;
+ (void)registerForRemoteNotificationsWithLegacyTypes:(unsigned char)arg1;
+ (void)unregisterForRemoteNotifications;
+ (void)registerForRemoteNotifications;
+ (unsigned int)_remoteNotificationServerPort;
+ (void)setAllowed:(_Bool)arg1 forBundleIdentifier:(id)arg2;
+ (void)getSupportedBundleIdentifiers:(id *)arg1 enabledBundleIdentifiers:(id *)arg2;

@end

@interface SBSRestartRenderServerAction : BSAction
{
}

+ (id)restartActionWithTargetRelaunchURL:(id)arg1;
@property(readonly, nonatomic) NSURL *targetURL;

@end

@interface SBSStatusBarStyleOverridesAssertion : NSObject
{
    SBSStatusBarStyleOverridesAssertionData *_assertionData;
    CDUnknownBlockType _invalidationHandler;
    NSObject<OS_dispatch_queue> *_invalidationQueue;
    NSRecursiveLock *_invalidationLock;
}

+ (id)assertionWithStatusBarStyleOverrides:(int)arg1 forPID:(int)arg2 exclusive:(_Bool)arg3;
+ (id)backgroundLocationAssertionForPID:(int)arg1;
@property(retain, nonatomic) NSRecursiveLock *invalidationLock; // @synthesize invalidationLock=_invalidationLock;
@property(retain, nonatomic) SBSStatusBarStyleOverridesAssertionData *assertionData; // @synthesize assertionData=_assertionData;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)_callInvalidationHandler;
- (void)invalidateFromServer;
- (void)invalidate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *invalidationQueue; // @synthesize invalidationQueue=_invalidationQueue;
@property(copy, nonatomic) CDUnknownBlockType invalidationHandler; // @synthesize invalidationHandler=_invalidationHandler;
- (void)acquireWithHandler:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
@property(readonly, copy, nonatomic) NSString *uniqueIdentifier;
@property(readonly, nonatomic) _Bool isExclusive;
@property(readonly, nonatomic) int pid;
@property(readonly, nonatomic) int statusBarStyleOverrides;
- (void)dealloc;
- (id)initWithStatusBarStyleOverridesAssertionData:(id)arg1;
- (id)initWithStatusBarStyleOverrides:(int)arg1 forPID:(int)arg2 exclusive:(_Bool)arg3;

@end

@interface SBSStatusBarStyleOverridesAssertionData : NSObject <NSSecureCoding>
{
    _Bool _exclusive;
    _Bool _isExclusive;
    int _statusBarStyleOverrides;
    int _pid;
    NSString *_uniqueIdentifier;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic, getter=isExclusive) _Bool exclusive; // @synthesize exclusive=_exclusive;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(nonatomic) int statusBarStyleOverrides; // @synthesize statusBarStyleOverrides=_statusBarStyleOverrides;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithStatusBarStyleOverrides:(int)arg1 forPID:(int)arg2 exclusive:(_Bool)arg3 uniqueIdentifier:(id)arg4;
- (id)initWithStatusBarStyleOverrides:(int)arg1 forPID:(int)arg2 exclusive:(_Bool)arg3;

// Remaining properties
@property(readonly, nonatomic) _Bool isExclusive; // @synthesize isExclusive=_isExclusive;

@end

@interface SBSStatusBarStyleOverridesAssertionManager : NSObject <SBSStatusBarStyleOverridesAssertionClient>
{
    NSHashTable *_assertions;
    NSXPCConnection *_sbXPCConnection;
    NSObject<OS_dispatch_queue> *_internalQueue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *internalQueue; // @synthesize internalQueue=_internalQueue;
@property(retain, nonatomic) NSXPCConnection *sbXPCConnection; // @synthesize sbXPCConnection=_sbXPCConnection;
@property(retain, nonatomic) NSHashTable *assertions; // @synthesize assertions=_assertions;
- (void)_reactivateAssertions;
- (void)_tearDownXPCConnection;
- (void)_internalQueue_removeStatusBarStyleOverridesAssertionMatchingData:(id)arg1 invalidate:(_Bool)arg2;
- (void)_invalidateStatusBarStyleOverridesAssertionsWithData:(id)arg1;
- (void)invalidateStatusBarStyleOverridesAssertionsWithIdentifiers:(id)arg1;
- (void)removeStatusBarStyleOverridesAssertion:(id)arg1;
- (void)addStatusBarStyleOverridesAssertion:(id)arg1 withHandler:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _SBSDisplayIdentifiersCache : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSSet *_displayIdentifiers;
    int _changedToken;
    CDUnknownBlockType _changedBlock;
}

+ (id)sharedInstance;
- (void)_queue_noteChanged;
- (void)registerChangedBlock:(CDUnknownBlockType)arg1;
- (id)displayIdentifiers;
- (void)dealloc;
- (id)init;

@end

