//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreDAV.framework/CoreDAV
// UUID: 2C3FB959-2048-3EB5-A303-4C46E0AB4796
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 261.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CoreDAVACLTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)aclTask:(CoreDAVACLTask *)arg1 error:(NSError *)arg2;
@end

@protocol CoreDAVAccountInfoProvider <NSObject>
- (_Bool)shouldFailAllTasks;
- (_Bool)handleCertificateError:(NSError *)arg1;
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(void (^)(int))arg1;
- (NSString *)userAgentHeader;
- (NSSet *)serverComplianceClasses;
- (NSString *)accountID;
- (NSURL *)principalURL;
- (NSData *)identityPersist;
- (NSString *)password;
- (NSString *)user;
- (NSString *)serverRoot;
- (long long)port;
- (NSString *)host;
- (NSString *)scheme;

@optional
- (void)webLoginRequestedAtURL:(NSURL *)arg1 reasonString:(NSString *)arg2 completionBlock:(void (^)(int))arg3;
- (NSString *)clientToken;
- (void)clientTokenRequestedByServer;
- (_Bool)shouldCompressRequests;
- (_Bool)shouldUseOpportunisticSockets;
- (struct __CFURLStorageSession *)copyStorageSession;
- (void)noteTimeSpentInNetworking:(double)arg1;
- (void)noteFailedProtocolRequest;
- (void)noteFailedNetworkRequest;
- (void)noteSuccessfulRequestWithNumDownloadedElements:(long long)arg1;
- (void)noteTimeSpentInNetworking:(double)arg1 forTask:(CoreDAVTask *)arg2;
- (void)noteFailedProtocolRequestForTask:(CoreDAVTask *)arg1;
- (void)noteFailedNetworkRequestForTask:(CoreDAVTask *)arg1;
- (void)noteSuccessfulRequestWithNumDownloadedElements:(long long)arg1 forTask:(CoreDAVTask *)arg2;
- (_Bool)shouldTurnModalOnBadPassword;
- (_Bool)shouldSendClientInfoHeaderForURL:(NSURL *)arg1;
- (_Bool)shouldHandleHTTPCookiesForURL:(NSURL *)arg1;
- (void)noteHomeSetOnDifferentHost:(NSURL *)arg1;
- (_Bool)handleShouldUseCredentialStorage;
- (_Bool)shouldRetryUnauthorizedConnection:(NSURLConnection *)arg1;
- (_Bool)handleAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg1 withConnection:(NSURLConnection *)arg2;
- (_Bool)handleAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg1;
- (_Bool)handleTrustChallenge:(NSURLAuthenticationChallenge *)arg1 withConnection:(NSURLConnection *)arg2;
- (_Bool)handleTrustChallenge:(NSURLAuthenticationChallenge *)arg1;
- (id <CoreDAVOAuthInfoProvider>)oauthInfoProvider;
- (NSDictionary *)customConnectionProperties;
- (NSDictionary *)additionalHeaderValues;
@end

@protocol CoreDAVContainerMultiGetSubmittable <CoreDAVSubmittable>
@property(nonatomic) _Bool shouldIgnoreResponseErrors;
@property(readonly, nonatomic) NSSet *parsedContents;
@property(readonly, nonatomic) NSSet *deletedURLs;
@property(readonly, nonatomic) NSSet *missingURLs;
@end

@protocol CoreDAVDeleteTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)deleteTask:(CoreDAVDeleteTask *)arg1 completedWithError:(NSError *)arg2;
@end

@protocol CoreDAVGetTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)getTask:(CoreDAVGetTask *)arg1 data:(NSData *)arg2 error:(NSError *)arg3;
@end

@protocol CoreDAVItem <NSObject>
+ (NSCache *)parseRuleCache;
+ (NSDictionary *)copyParseRules;
- (void)parserSuggestsBaseURL:(NSURL *)arg1;
- (_Bool)validate;
- (void)write:(CoreDAVXMLData *)arg1;
- (NSDictionary *)copyParseRules;
- (void)parserFoundUnrecognizedElement:(CoreDAVItem *)arg1;
- (void)parserFoundPayload:(NSData *)arg1;
- (void)parserFoundAttributes:(NSSet *)arg1;
@end

@protocol CoreDAVLeafDataPayload <NSObject>
@property(readonly, nonatomic) NSString *syncKey;
@property(readonly, nonatomic) NSData *dataPayload;
@property(retain, nonatomic) NSURL *serverID;
- (id)initWithURL:(NSURL *)arg1 eTag:(NSString *)arg2 dataPayload:(NSData *)arg3 inContainerWithURL:(NSURL *)arg4 withAccountInfoProvider:(id <CoreDAVAccountInfoProvider>)arg5;

@optional
@property(readonly, nonatomic) NSArray *childrenOrder;
@end

@protocol CoreDAVMkcolTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)mkcolTask:(CoreDAVMkcolTask *)arg1 parsedPropStats:(NSArray *)arg2 error:(NSError *)arg3;
@end

@protocol CoreDAVOptionsTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)optionsTask:(CoreDAVOptionsTask *)arg1 error:(NSError *)arg2;
@end

@protocol CoreDAVPrincipalSearchPropertySetTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)searchPropertySetTask:(CoreDAVPrincipalSearchPropertySetTask *)arg1 completetWithPropertySearchSet:(NSSet *)arg2 error:(NSError *)arg3;
@end

@protocol CoreDAVPropFindTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)propFindTask:(CoreDAVPropFindTask *)arg1 parsedResponses:(NSArray *)arg2 error:(NSError *)arg3;
@end

@protocol CoreDAVPropPatchTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)propPatchTask:(CoreDAVPropPatchTask *)arg1 parsedResponses:(NSArray *)arg2 error:(NSError *)arg3;
@end

@protocol CoreDAVPutTaskDelegate <CoreDAVTaskDelegate>

@optional
- (void)putTask:(CoreDAVPutTask *)arg1 completedWithNewETag:(NSString *)arg2 error:(NSError *)arg3;
@end

@protocol CoreDAVResponseBodyParser <NSObject>
@property(readonly) NSError *parserError;
- (_Bool)processData:(NSData *)arg1 forTask:(CoreDAVTask *)arg2;

@optional
+ (_Bool)canHandleContentType:(NSString *)arg1;
@end

@protocol CoreDAVSubmittable <NSObject>
@property(nonatomic) double timeoutInterval;
@property(readonly, nonatomic) NSError *error;
@property(nonatomic) id <CoreDAVAccountInfoProvider> accountInfoProvider;
@property(nonatomic) id <CoreDAVTaskManager> taskManager;
@property(copy, nonatomic) CDUnknownBlockType completionBlock;
- (void)finishEarlyWithError:(NSError *)arg1;
- (void)submitWithTaskManager:(id <CoreDAVTaskManager>)arg1;
@end

@protocol CoreDAVTaskDelegate <NSObject>

@optional
- (void)task:(CoreDAVTask *)arg1 didFinishWithError:(NSError *)arg2;
@end

@protocol CoreDAVTaskGroupDelegate <NSObject>

@optional
- (void)taskGroup:(CoreDAVTaskGroup *)arg1 didFinishWithError:(NSError *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@interface CoreDAVContainer : NSObject
{
    _Bool _isUnauthenticated;
    NSURL *_url;
    CoreDAVResourceTypeItem *_resourceType;
    NSString *_containerTitle;
    NSSet *_privileges;
    NSString *_pushKey;
    NSDictionary *_pushTransports;
    NSURL *_resourceID;
    CoreDAVSupportedReportSetItem *_supportedReportSetItem;
    NSString *_quotaAvailable;
    NSString *_quotaUsed;
    NSURL *_owner;
    NSURL *_addMemberURL;
    NSDictionary *_bulkRequests;
    NSString *_syncToken;
}

+ (id)convertPushTransportsForNSServerNotificationCenter:(id)arg1;
+ (id)copyPropertyMappingsForParser;
@property(retain, nonatomic) NSString *syncToken; // @synthesize syncToken=_syncToken;
@property(retain, nonatomic) NSDictionary *bulkRequests; // @synthesize bulkRequests=_bulkRequests;
@property(retain, nonatomic) NSURL *addMemberURL; // @synthesize addMemberURL=_addMemberURL;
@property(retain, nonatomic) NSURL *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) CoreDAVResourceTypeItem *resourceType; // @synthesize resourceType=_resourceType;
@property(retain, nonatomic) CoreDAVSupportedReportSetItem *supportedReportSetItem; // @synthesize supportedReportSetItem=_supportedReportSetItem;
@property(retain, nonatomic) NSString *quotaUsed; // @synthesize quotaUsed=_quotaUsed;
@property(retain, nonatomic) NSString *quotaAvailable; // @synthesize quotaAvailable=_quotaAvailable;
@property(retain, nonatomic) NSURL *resourceID; // @synthesize resourceID=_resourceID;
@property(retain, nonatomic) NSDictionary *pushTransports; // @synthesize pushTransports=_pushTransports;
@property(retain, nonatomic) NSString *pushKey; // @synthesize pushKey=_pushKey;
@property(retain, nonatomic) NSSet *privileges; // @synthesize privileges=_privileges;
@property(retain, nonatomic) NSString *containerTitle; // @synthesize containerTitle=_containerTitle;
@property(nonatomic) _Bool isUnauthenticated; // @synthesize isUnauthenticated=_isUnauthenticated;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void)dealloc;
@property(readonly, nonatomic) _Bool supportsSyncCollectionReport;
@property(readonly, nonatomic) _Bool supportsPrincipalPropertySearchReport;
@property(readonly, nonatomic) NSSet *supportedReportsAsStringSet;
@property(readonly, nonatomic) _Bool hasUnbindPrivileges;
@property(readonly, nonatomic) _Bool hasBindPrivileges;
@property(readonly, nonatomic) _Bool hasWritePropertiesPrivileges;
@property(readonly, nonatomic) _Bool hasWriteContentPrivileges;
@property(readonly, nonatomic) _Bool hasReadPrivileges;
- (_Bool)_anyPrivilegesMatches:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSSet *privilegesAsStringSet;
@property(readonly, nonatomic) _Bool isPrincipal;
@property(readonly, nonatomic) NSSet *resourceTypeAsStringSet;
@property(readonly, nonatomic) NSSet *supportedReports;
- (void)applyParsedProperties:(id)arg1;
- (id)description;
- (id)initWithURL:(id)arg1 andProperties:(id)arg2;

@end

@interface CardDAVAddressBookContainer : CoreDAVContainer
{
    NSString *_maxResourceSize;
    NSString *_maxImageSize;
    NSURL *_meCardURL;
}

+ (id)copyPropertyMappingsForParser;
@property(retain, nonatomic) NSURL *meCardURL; // @synthesize meCardURL=_meCardURL;
@property(retain, nonatomic) NSString *maxImageSize; // @synthesize maxImageSize=_maxImageSize;
@property(retain, nonatomic) NSString *maxResourceSize; // @synthesize maxResourceSize=_maxResourceSize;
- (void)dealloc;
@property(readonly, nonatomic) _Bool isSharedAddressBook;
@property(readonly, nonatomic) _Bool isSearchAddressBook;
@property(readonly, nonatomic) _Bool isAddressBook;
- (void)applyParsedProperties:(id)arg1;
- (id)description;

@end

@interface CoreDAVTask : NSObject <CoreDAVSubmittable>
{
    id <CoreDAVTaskManager> _taskManager;
    id <CoreDAVAccountInfoProvider> _accountInfoProvider;
    long long _numDownloadedElements;
    int _depth;
    NSHTTPURLResponse *_response;
    NSURLConnection *_connection;
    NSURLRequest *_request;
    double _timeoutInterval;
    long long _responseStatusCode;
    NSDate *_dateConnectionWentOut;
    _Bool _didSendRequest;
    _Bool _didFailWithError;
    _Bool _didCancel;
    _Bool _didReceiveResponse;
    _Bool _didReceiveData;
    _Bool _didFinishLoading;
    _Bool _finished;
    id _context;
    _Bool _receivedBadPasswordResponse;
    _Bool _justTriedTokenAuth;
    _Bool _everTriedTokenAuth;
    _Bool _shouldRetryWithClientToken;
    _Bool _didRetryWithClientToken;
    _Bool _requestIsCompressed;
    _Bool _compressedRequestFailed;
    NSError *_passwordNotificationError;
    id <CoreDAVResponseBodyParser> _responseBodyParser;
    CoreDAVRequestLogger *_logger;
    NSURL *_url;
    _Bool _allowAutomaticRedirects;
    id <CoreDAVTaskDelegate> _delegate;
    CDUnknownBlockType _requestProgressBlock;
    CDUnknownBlockType _responseProgressBlock;
    CDUnknownBlockType _completionBlock;
    NSError *_error;
    unsigned long long _totalBytesReceived;
    NSMutableDictionary *_overriddenHeaders;
    NSMutableArray *_redirectHistory;
    NSDictionary *_requestProperties;
    NSData *_fakeResponseData;
    _Bool _haveParsedFakeResponseData;
    CoreDAVErrorItem *_forbiddenErrorItem;
    NSString *_uniqueID;
}

+ (id)stringFromDepth:(int)arg1;
+ (unsigned int)uniqueQueryID;
@property(retain, nonatomic) NSDictionary *requestProperties; // @synthesize requestProperties=_requestProperties;
@property(nonatomic) _Bool allowAutomaticRedirects; // @synthesize allowAutomaticRedirects=_allowAutomaticRedirects;
@property(nonatomic) unsigned long long totalBytesReceived; // @synthesize totalBytesReceived=_totalBytesReceived;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy, nonatomic) CDUnknownBlockType responseProgressBlock; // @synthesize responseProgressBlock=_responseProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType requestProgressBlock; // @synthesize requestProgressBlock=_requestProgressBlock;
@property(nonatomic) long long responseStatusCode; // @synthesize responseStatusCode=_responseStatusCode;
@property(retain, nonatomic) id <CoreDAVResponseBodyParser> responseBodyParser; // @synthesize responseBodyParser=_responseBodyParser;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) int depth; // @synthesize depth=_depth;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <CoreDAVAccountInfoProvider> accountInfoProvider; // @synthesize accountInfoProvider=_accountInfoProvider;
@property(nonatomic) id <CoreDAVTaskManager> taskManager; // @synthesize taskManager=_taskManager;
- (id)_requestForLogging;
- (id)_connectionForLogging;
- (void)reportStatusWithError:(id)arg1;
- (long long)numDownloadedElements;
- (void)reset;
- (void)submitWithTaskManager:(id)arg1;
- (void)finishEarlyWithError:(id)arg1;
- (void)startModal;
@property(readonly, nonatomic) NSDictionary *responseHeaders;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)handleWebLoginRequestWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (id)lastRedirectURL;
- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (_Bool)_shouldHandleStatusCode:(long long)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)_handleBadPasswordResponse;
- (id)_applyStorageSession:(struct __CFURLStorageSession *)arg1 toRequest:(id)arg2;
- (id)_applyAuthenticationChain:(struct __CFArray *)arg1 toRequest:(id)arg2;
- (id)credentialForOAuthChallenge:(id)arg1;
- (_Bool)markAsFinished;
@property(readonly, nonatomic, getter=isFinished) _Bool finished;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (void)_sendTimeSpentInNetworkingToProvider;
- (_Bool)validate:(id *)arg1;
- (void)performCoreDAVTask;
- (unsigned long long)cachePolicy;
- (void)overrideRequestHeader:(id)arg1 withValue:(id)arg2;
- (id)additionalHeaderValues;
- (void)_failImmediately;
- (id)_createBodyData;
- (id)_compressBodyData:(id)arg1;
- (void)tearDownResources;
- (void)loadRequest:(id)arg1;
- (_Bool)shouldLogResponseBody;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (id)requestBodyStream;
- (_Bool)_includeGeneralHeaders;
- (id)httpMethod;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVBulkChangeTask : CoreDAVTask
{
    NSString *_appSpecificNamespace;
    NSString *_appSpecificDataProp;
    NSDictionary *_uuidsToAddActions;
    NSDictionary *_hrefsToModDeleteActions;
    NSString *_checkCTag;
    _Bool _simple;
    _Bool _returnChangedData;
    NSData *_pushedData;
    _Bool _validCTag;
    NSString *_nextCTag;
    NSMutableSet *_bulkChangeResponses;
    NSString *_requestDataContentType;
}

@property(readonly, nonatomic) NSSet *bulkChangeResponses; // @synthesize bulkChangeResponses=_bulkChangeResponses;
@property(readonly, nonatomic) NSString *nextCTag; // @synthesize nextCTag=_nextCTag;
@property(readonly, nonatomic) NSDictionary *hrefsToModDeleteActions; // @synthesize hrefsToModDeleteActions=_hrefsToModDeleteActions;
@property(readonly, nonatomic) NSDictionary *uuidsToAddActions; // @synthesize uuidsToAddActions=_uuidsToAddActions;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (void)fillOutDataWithUUIDsToAddActions:(id)arg1 hrefsToModDeleteActions:(id)arg2;
- (id)requestBody;
- (id)httpMethod;
- (id)additionalHeaderValues;
- (void)dealloc;
- (id)initWithURL:(id)arg1 checkCTag:(id)arg2 simple:(_Bool)arg3 returnChangedData:(_Bool)arg4 uuidsToAddActions:(id)arg5 hrefsToModDeleteActions:(id)arg6;

@end

@interface CardDAVBulkChangeTask : CoreDAVBulkChangeTask
{
}

- (id)initWithURL:(id)arg1 checkCTag:(id)arg2 simple:(_Bool)arg3 returnChangedData:(_Bool)arg4 uuidsToAddActions:(id)arg5 hrefsToModDeleteActions:(id)arg6;

@end

@interface CoreDAVTaskGroup : NSObject <CoreDAVSubmittable>
{
    id <CoreDAVTaskManager> _taskManager;
    id <CoreDAVAccountInfoProvider> _accountInfoProvider;
    double _timeoutInterval;
    NSMutableSet *_outstandingTasks;
    _Bool _isCancelling;
    _Bool _isTearingDown;
    _Bool _isFinished;
    id <CoreDAVTaskGroupDelegate> _delegate;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _completionBlock;
    NSError *_error;
    id _context;
}

@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) id <CoreDAVTaskManager> taskManager; // @synthesize taskManager=_taskManager;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(readonly, nonatomic) NSMutableSet *outstandingTasks; // @synthesize outstandingTasks=_outstandingTasks;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) id <CoreDAVTaskGroupDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) id <CoreDAVAccountInfoProvider> accountInfoProvider; // @synthesize accountInfoProvider=_accountInfoProvider;
- (void)submitWithTaskManager:(id)arg1;
- (void)finishEarlyWithError:(id)arg1;
- (void)finishCoreDAVTaskGroupWithError:(id)arg1;
- (void)finishCoreDAVTaskGroupWithError:(id)arg1 delegateCallbackBlock:(CDUnknownBlockType)arg2;
- (void)cancelTaskGroup;
- (void)bailWithError:(id)arg1;
- (void)_tearDownAllTasks;
- (void)taskGroupWillCancelWithError:(id)arg1;
- (void)syncAway;
- (void)startTaskGroup;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVBulkUploadTaskGroup : CoreDAVTaskGroup <CoreDAVTaskDelegate>
{
    NSURL *_folderURL;
    NSString *_lastKnownCTag;
    _Bool _validCTag;
    unsigned long long _multiPutBatchMaxNumResources;
    unsigned long long _multiPutBatchMaxSize;
    NSMutableDictionary *_remainingUUIDsToAddActions;
    NSMutableDictionary *_remainingHREFsToModDeleteActions;
    NSMutableDictionary *_uuidToHREF;
    NSMutableDictionary *_hrefToETag;
    NSMutableDictionary *_uuidToErrorItems;
    NSMutableDictionary *_hrefToErrorItems;
    NSMutableDictionary *_uuidToStatus;
    NSMutableDictionary *_hrefToStatus;
}

@property(readonly, nonatomic) NSDictionary *hrefToStatus; // @synthesize hrefToStatus=_hrefToStatus;
@property(readonly, nonatomic) NSDictionary *uuidToStatus; // @synthesize uuidToStatus=_uuidToStatus;
@property(readonly, nonatomic) NSDictionary *hrefToErrorItems; // @synthesize hrefToErrorItems=_hrefToErrorItems;
@property(readonly, nonatomic) NSDictionary *uuidToErrorItems; // @synthesize uuidToErrorItems=_uuidToErrorItems;
@property(readonly, nonatomic) NSDictionary *hrefToETag; // @synthesize hrefToETag=_hrefToETag;
@property(readonly, nonatomic) NSDictionary *uuidToHREF; // @synthesize uuidToHREF=_uuidToHREF;
@property(retain, nonatomic) NSString *nextCTag; // @synthesize nextCTag=_lastKnownCTag;
@property(readonly, nonatomic) _Bool validCTag; // @synthesize validCTag=_validCTag;
@property(readonly, nonatomic) NSURL *folderURL; // @synthesize folderURL=_folderURL;
@property(nonatomic) unsigned long long multiPutBatchMaxSize; // @synthesize multiPutBatchMaxSize=_multiPutBatchMaxSize;
@property(nonatomic) unsigned long long multiPutBatchMaxNumResources; // @synthesize multiPutBatchMaxNumResources=_multiPutBatchMaxNumResources;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)syncAway;
- (void)startTaskGroup;
- (void)_sendNextBatch;
- (Class)multiPutTaskClass;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithFolderURL:(id)arg1 checkCTag:(id)arg2 uuidsToAddActions:(id)arg3 hrefsToModDeleteActions:(id)arg4 context:(id)arg5 accountInfoProvider:(id)arg6 taskManager:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CardDAVBulkUploadTaskGroup : CoreDAVBulkUploadTaskGroup
{
}

- (Class)multiPutTaskClass;
- (id)initWithFolderURL:(id)arg1 checkCTag:(id)arg2 uuidsToAddActions:(id)arg3 hrefsToModDeleteActions:(id)arg4 context:(id)arg5 accountInfoProvider:(id)arg6 taskManager:(id)arg7;

@end

@interface CoreDAVGetTask : CoreDAVTask
{
    id _appSpecificDataItemResult;
    _Bool _forceNoCache;
}

@property(nonatomic) _Bool forceNoCache; // @synthesize forceNoCache=_forceNoCache;
@property(retain, nonatomic) id appSpecificDataItemResult; // @synthesize appSpecificDataItemResult=_appSpecificDataItemResult;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (unsigned long long)cachePolicy;
- (id)httpMethod;
- (id)description;
- (void)dealloc;

// Remaining properties
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CardDAVFolderGetTask : CoreDAVGetTask
{
}

- (void)finishCoreDAVTaskWithError:(id)arg1;

@end

@interface CoreDAVContainerInfoTaskGroup : CoreDAVTaskGroup <CoreDAVPropFindTaskDelegate>
{
    int _phase;
    NSMutableSet *_containerURLs;
    NSMutableSet *_containers;
    int _containerInfoDepth;
    NSString *_appSpecificHomeSetPropNameSpace;
    NSString *_appSpecificHomeSetPropName;
}

@property(readonly, nonatomic) NSSet *containerURLs; // @synthesize containerURLs=_containerURLs;
@property(nonatomic) int containerInfoDepth; // @synthesize containerInfoDepth=_containerInfoDepth;
- (id)_copyContainerParserMappings;
- (id)_copyContainerWithURL:(id)arg1 andProperties:(id)arg2;
- (void)propFindTask:(id)arg1 parsedResponses:(id)arg2 error:(id)arg3;
- (void)_getContainerTopLevelInfo;
- (void)_getContainerHomeSet;
- (int)containerInfoDepthForURL:(id)arg1;
- (void)taskGroupWillCancelWithError:(id)arg1;
- (void)startTaskGroup;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 containerURLs:(id)arg2 taskManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <CoreDAVContainerInfoTaskGroupDelegate> delegate; // @dynamic delegate;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CardDAVFolderInfoTaskGroup : CoreDAVContainerInfoTaskGroup
{
    NSSet *_directoryGatewayURLs;
}

- (id)_copyContainerParserMappings;
- (id)_copyContainerWithURL:(id)arg1 andProperties:(id)arg2;
- (int)containerInfoDepthForURL:(id)arg1;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 containerURLs:(id)arg2 directoryGatewayURLs:(id)arg3 taskManager:(id)arg4;

@end

@interface CoreDAVContainerMultiGetTask : CoreDAVTask <CoreDAVContainerMultiGetSubmittable>
{
    NSSet *_urls;
    NSString *_appSpecificNamespace;
    NSString *_appSpecificMultiGetNameSpace;
    NSString *_appSpecificMultiGetCommand;
    NSString *_appSpecificDataProp;
    Class _appSpecificDataItemClass;
    _Bool _shouldIgnoreResponseErrors;
    NSSet *_additionalPropElements;
    NSSet *_parsedContents;
    NSSet *_missingURLs;
    NSSet *_deletedURLs;
}

@property(readonly, nonatomic) NSSet *deletedURLs; // @synthesize deletedURLs=_deletedURLs;
@property(readonly, nonatomic) NSSet *missingURLs; // @synthesize missingURLs=_missingURLs;
@property(readonly, nonatomic) NSSet *parsedContents; // @synthesize parsedContents=_parsedContents;
@property(nonatomic) _Bool shouldIgnoreResponseErrors; // @synthesize shouldIgnoreResponseErrors=_shouldIgnoreResponseErrors;
@property(retain, nonatomic) NSSet *additionalPropElements; // @synthesize additionalPropElements=_additionalPropElements;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (id)httpMethod;
- (void)dealloc;
- (void)setAdditionalProperties:(id)arg1 onDataItem:(id)arg2;
- (id)copyAdditionalPropElements;
- (id)initWithURLs:(id)arg1 atContainerURL:(id)arg2 appSpecificDataItemClass:(Class)arg3;

// Remaining properties
@property(nonatomic) id <CoreDAVAccountInfoProvider> accountInfoProvider;
@property(copy, nonatomic) CDUnknownBlockType completionBlock;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSError *error;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) id <CoreDAVTaskManager> taskManager;
@property(nonatomic) double timeoutInterval;

@end

@interface CardDAVFolderMultiGetTask : CoreDAVContainerMultiGetTask
{
}

- (id)initWithURLs:(id)arg1 atContainerURL:(id)arg2 appSpecificDataItemClass:(Class)arg3;

@end

@interface CoreDAVContainerQueryTask : CoreDAVTask
{
    NSSet *_searchTerms;
    unsigned long long _searchLimit;
    NSString *_appSpecificNamespace;
    NSString *_appSpecificQueryCommand;
    NSString *_appSpecificDataProp;
    Class _appSpecificDataItemClass;
}

+ (id)_copySearchTermsFromSearchString:(id)arg1;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (void)addFiltersToXMLData:(id)arg1;
- (id)httpMethod;
- (void)dealloc;
- (id)_initWithSearchTerms:(id)arg1 searchLimit:(unsigned long long)arg2 atURL:(id)arg3 appSpecificDataItemClass:(Class)arg4;
- (id)initWithSearchString:(id)arg1 searchLimit:(unsigned long long)arg2 atURL:(id)arg3 appSpecificDataItemClass:(Class)arg4;
- (id)initWithSearchTerms:(id)arg1 searchLimit:(unsigned long long)arg2 atURL:(id)arg3 appSpecificDataItemClass:(Class)arg4;

// Remaining properties
@property(nonatomic) id <CoreDAVContainerQueryTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CardDAVFolderQueryTask : CoreDAVContainerQueryTask
{
}

- (void)addFiltersToXMLData:(id)arg1;
- (id)initWithSearchTerms:(id)arg1 searchLimit:(unsigned long long)arg2 atURL:(id)arg3 appSpecificDataItemClass:(Class)arg4;

@end

@interface CoreDAVContainerSyncTaskGroup : CoreDAVTaskGroup <CoreDAVDeleteTaskDelegate, CoreDAVPutTaskDelegate, CoreDAVGetTaskDelegate>
{
    int _phase;
    NSURL *_folderURL;
    NSString *_previousCTag;
    NSString *_nextCTag;
    _Bool _ensureUpdatedCTag;
    _Bool _useSyncCollection;
    NSString *_previousSyncToken;
    NSString *_nextSyncToken;
    NSMutableArray *_actions;
    unsigned long long _multiGetBatchSize;
    NSMutableArray *_unsubmittedTasks;
    unsigned long long _maxIndependentTasks;
    NSURL *_addMemberURL;
    _Bool _useMultiGet;
    NSDictionary *_bulkRequests;
    NSString *_bulkChangeCheckCTag;
    NSMutableSet *_syncReportDeletedURLs;
    NSMutableDictionary *_urlToETag;
    Class _appSpecificDataItemClass;
    _Bool _syncItemOrder;
    NSMutableArray *_localItemURLOrder;
    NSMutableDictionary *_remainingUUIDsToAddActions;
    NSMutableDictionary *_remainingHREFsToModDeleteActions;
    _Bool _actionsOnly;
}

@property(nonatomic) _Bool actionsOnly; // @synthesize actionsOnly=_actionsOnly;
@property(retain, nonatomic) NSString *bulkChangeCheckCTag; // @synthesize bulkChangeCheckCTag=_bulkChangeCheckCTag;
@property(retain, nonatomic) NSDictionary *bulkRequests; // @synthesize bulkRequests=_bulkRequests;
@property(readonly, nonatomic) NSArray *localItemURLOrder; // @synthesize localItemURLOrder=_localItemURLOrder;
@property(nonatomic) _Bool useSyncCollection; // @synthesize useSyncCollection=_useSyncCollection;
@property(retain, nonatomic) NSString *previousSyncToken; // @synthesize previousSyncToken=_previousSyncToken;
@property(nonatomic) _Bool ensureUpdatedCTag; // @synthesize ensureUpdatedCTag=_ensureUpdatedCTag;
@property(retain, nonatomic) NSString *nextCTag; // @synthesize nextCTag=_nextCTag;
@property(retain, nonatomic) NSString *previousCTag; // @synthesize previousCTag=_previousCTag;
@property(readonly, nonatomic) NSURL *folderURL; // @synthesize folderURL=_folderURL;
@property(nonatomic) _Bool useMultiGet; // @synthesize useMultiGet=_useMultiGet;
@property(nonatomic) unsigned long long maxIndependentTasks; // @synthesize maxIndependentTasks=_maxIndependentTasks;
@property(nonatomic) unsigned long long multiGetBatchSize; // @synthesize multiGetBatchSize=_multiGetBatchSize;
@property(retain, nonatomic) NSURL *addMemberURL; // @synthesize addMemberURL=_addMemberURL;
- (void)_getTask:(id)arg1 finishedWithParsedContents:(id)arg2 deletedItems:(id)arg3 error:(id)arg4;
- (void)getTask:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)propFindTask:(id)arg1 parsedResponses:(id)arg2 error:(id)arg3;
- (_Bool)shouldFetchMoreETags;
- (void)deleteTask:(id)arg1 completedWithError:(id)arg2;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)_bulkChangeTask:(id)arg1 didFinishWithError:(id)arg2;
- (void)_syncReportTask:(id)arg1 didFinishWithError:(id)arg2;
- (void)_postTask:(id)arg1 didFinishWithError:(id)arg2;
- (void)applyAdditionalPropertiesFromPostTask:(id)arg1;
- (void)putTask:(id)arg1 completedWithNewETag:(id)arg2 error:(id)arg3;
- (void)applyAdditionalPropertiesFromPutTask:(id)arg1;
- (_Bool)isWhitelistedError:(id)arg1;
- (void)syncAway;
- (void)startTaskGroup;
- (void)_getDataPayloads;
- (void)deleteResourceURLs:(id)arg1;
- (_Bool)shouldDownloadResource:(id)arg1 localETag:(id)arg2 serverETag:(id)arg3;
- (void)_configureMultiGet:(id)arg1;
- (void)_getOrder;
- (void)_getETags;
- (id)copyGetEtagTaskWithPropertiesToFind:(id)arg1;
- (void)_bulkChange;
- (void)_sendNextBatch;
- (void)_pushActions;
- (id)copyPostTaskWithPayloadItem:(id)arg1 forAction:(id)arg2;
- (id)copyPutTaskWithPayloadItem:(id)arg1 forAction:(id)arg2;
- (void)_getCTag;
- (unsigned long long)_submitTasks;
- (void)cancelTaskGroup;
- (void)bailWithError:(id)arg1;
- (void)_tearDownAllUnsubmittedTasks;
- (void)taskGroupWillCancelWithError:(id)arg1;
- (void)receivedPropertiesToValues:(id)arg1 forURL:(id)arg2;
- (_Bool)shouldFetchResourceWithEtag:(id)arg1 propertiesToValues:(id)arg2;
- (id)copyAdditionalResourcePropertiesToFetch;
- (Class)bulkChangeTaskClass;
- (id)dataContentType;
- (id)copyMultiGetTaskWithURLs:(id)arg1;
- (id)copyGetTaskWithURL:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 syncItemOrder:(_Bool)arg5 context:(id)arg6 accountInfoProvider:(id)arg7 taskManager:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <CoreDAVLocalDBInfoProvider> delegate; // @dynamic delegate;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CardDAVFolderSyncTaskGroup : CoreDAVContainerSyncTaskGroup
{
    _Bool _isInitialSync;
}

@property(nonatomic) _Bool isInitialSync; // @synthesize isInitialSync=_isInitialSync;
- (Class)bulkChangeTaskClass;
- (id)dataContentType;
- (id)copyGetTaskWithURL:(id)arg1;
- (id)copyMultiGetTaskWithURLs:(id)arg1;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 context:(void *)arg5 accountInfoProvider:(id)arg6 taskManager:(id)arg7 appSpecificDataItemClass:(Class)arg8;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousSyncToken:(id)arg3 actions:(id)arg4 syncItemOrder:(_Bool)arg5 context:(id)arg6 accountInfoProvider:(id)arg7 taskManager:(id)arg8 appSpecificDataItemClass:(Class)arg9;

@end

@interface CoreDAVGetAccountPropertiesTaskGroup : CoreDAVTaskGroup <CoreDAVPropFindTaskDelegate, CoreDAVOptionsTaskDelegate, CoreDAVPrincipalSearchPropertySetTaskDelegate, CoreDAVTaskDelegate>
{
    NSURL *_principalURL;
    NSString *_displayName;
    NSURL *_resourceID;
    NSSet *_emailAddresses;
    NSSet *_collections;
    NSSet *_principalSearchProperties;
    _Bool _isExpandPropertyReportSupported;
    _Bool _fetchPrincipalSearchProperties;
    _Bool _shouldIgnoreHomeSetOnDifferentHost;
    NSMutableSet *_redirectHistory;
}

@property(nonatomic) _Bool shouldIgnoreHomeSetOnDifferentHost; // @synthesize shouldIgnoreHomeSetOnDifferentHost=_shouldIgnoreHomeSetOnDifferentHost;
@property(readonly, nonatomic) NSSet *principalSearchProperties; // @synthesize principalSearchProperties=_principalSearchProperties;
@property(nonatomic) _Bool fetchPrincipalSearchProperties; // @synthesize fetchPrincipalSearchProperties=_fetchPrincipalSearchProperties;
@property(readonly, nonatomic) _Bool isExpandPropertyReportSupported; // @synthesize isExpandPropertyReportSupported=_isExpandPropertyReportSupported;
@property(readonly, nonatomic) NSSet *collections; // @synthesize collections=_collections;
@property(readonly, nonatomic) NSSet *emailAddresses; // @synthesize emailAddresses=_emailAddresses;
@property(readonly, nonatomic) NSURL *resourceID; // @synthesize resourceID=_resourceID;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSURL *principalURL; // @synthesize principalURL=_principalURL;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)searchPropertySetTask:(id)arg1 completetWithPropertySearchSet:(id)arg2 error:(id)arg3;
- (void)processPrincipalHeaders:(id)arg1;
- (void)coaxServerForPrincipalHeaders;
- (void)propFindTask:(id)arg1 parsedResponses:(id)arg2 error:(id)arg3;
- (_Bool)forceOptionsRequest;
- (void)_taskCompleted:(id)arg1 withError:(id)arg2;
- (void)_setPropertiesFromParsedResponses:(id)arg1;
- (void)startTaskGroup;
- (id)homeSet;
- (id)_copyAccountPropertiesPropFindElements;
- (void)taskGroupWillCancelWithError:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <CoreDAVGetAccountPropertiesTaskGroupDelegate> delegate; // @dynamic delegate;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CardDAVGetAccountPropertiesTaskGroup : CoreDAVGetAccountPropertiesTaskGroup
{
    NSSet *_addressBookHomes;
    NSSet *_directoryGatewayURLs;
}

@property(readonly, nonatomic) NSSet *directoryGatewayURLs; // @synthesize directoryGatewayURLs=_directoryGatewayURLs;
@property(readonly, nonatomic) NSSet *addressBookHomes; // @synthesize addressBookHomes=_addressBookHomes;
- (id)directoryGatewayURL;
- (void)_setPropertiesFromParsedResponses:(id)arg1;
- (id)homeSet;
- (id)_copyAccountPropertiesPropFindElements;
- (id)description;
- (void)dealloc;

@end

@interface CoreDAVMultiPutTask : CoreDAVTask
{
    NSString *_appSpecificNamespace;
    NSString *_appSpecificDataProp;
    NSString *_checkCTag;
    CoreDAVXMLData *_pushedData;
    _Bool _validCTag;
    NSString *_nextCTag;
    NSMutableDictionary *_uuidToHREF;
    NSMutableDictionary *_hrefToETag;
    NSMutableDictionary *_uuidToErrorItems;
    NSMutableDictionary *_hrefToErrorItems;
    NSMutableDictionary *_uuidToStatus;
    NSMutableDictionary *_hrefToStatus;
}

@property(readonly, nonatomic) NSDictionary *hrefToStatus; // @synthesize hrefToStatus=_hrefToStatus;
@property(readonly, nonatomic) NSDictionary *uuidToStatus; // @synthesize uuidToStatus=_uuidToStatus;
@property(readonly, nonatomic) NSDictionary *hrefToErrorItems; // @synthesize hrefToErrorItems=_hrefToErrorItems;
@property(readonly, nonatomic) NSDictionary *uuidToErrorItems; // @synthesize uuidToErrorItems=_uuidToErrorItems;
@property(readonly, nonatomic) NSDictionary *hrefToETag; // @synthesize hrefToETag=_hrefToETag;
@property(readonly, nonatomic) NSDictionary *uuidToHREF; // @synthesize uuidToHREF=_uuidToHREF;
@property(readonly, nonatomic) NSString *nextCTag; // @synthesize nextCTag=_nextCTag;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (void)fillOutDataWithUUIDsToAddActions:(id)arg1 hrefsToModDeleteActions:(id)arg2;
- (id)requestBody;
- (id)httpMethod;
- (id)additionalHeaderValues;
- (void)dealloc;
- (id)initWithURL:(id)arg1 checkCTag:(id)arg2 uuidsToAddActions:(id)arg3 hrefsToModDeleteActions:(id)arg4;

@end

@interface CardDAVMultiPutTask : CoreDAVMultiPutTask
{
}

- (id)initWithURL:(id)arg1 checkCTag:(id)arg2 uuidsToAddActions:(id)arg3 hrefsToModDeleteActions:(id)arg4;

@end

@interface CardDAVUpdateMeCardTaskGroup : CoreDAVTaskGroup <CoreDAVPropPatchTaskDelegate>
{
    NSURL *_homeURL;
    NSURL *_cardURL;
}

@property(readonly, nonatomic) NSURL *homeURL; // @synthesize homeURL=_homeURL;
@property(readonly, nonatomic) NSURL *cardURL; // @synthesize cardURL=_cardURL;
- (void)propPatchTask:(id)arg1 parsedResponses:(id)arg2 error:(id)arg3;
- (void)startTaskGroup;
- (id)_newPropPatchTask;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2 homeURL:(id)arg3 cardURL:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVItem : NSObject <CoreDAVItem>
{
    NSString *_name;
    NSString *_nameSpace;
    NSMutableSet *_attributes;
    NSMutableArray *_extraChildItems;
    NSData *_payload;
    _Bool _useCDATA;
}

+ (id)parseRuleCache;
+ (id)copyParseRules;
@property(nonatomic) _Bool useCDATA; // @synthesize useCDATA=_useCDATA;
@property(retain, nonatomic) NSData *payload; // @synthesize payload=_payload;
@property(retain, nonatomic) NSMutableArray *extraChildItems; // @synthesize extraChildItems=_extraChildItems;
@property(retain, nonatomic) NSMutableSet *attributes; // @synthesize attributes=_attributes;
@property(retain, nonatomic) NSString *nameSpace; // @synthesize nameSpace=_nameSpace;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (id)generateXMLString;
- (void)parserSuggestsBaseURL:(id)arg1;
- (void)setPayloadAsString:(id)arg1;
- (id)payloadAsString;
- (_Bool)validate;
- (void)write:(id)arg1;
- (id)childrenToWrite;
- (void)parserFoundAttributes:(id)arg1;
- (void)parserFoundPayload:(id)arg1;
- (void)parserFoundUnrecognizedElement:(id)arg1;
- (id)copyParseRules;
- (id)hashString;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithNameSpace:(id)arg1 andName:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVACEItem : CoreDAVItem
{
    CoreDAVPrincipalItem *_principal;
    CoreDAVInvertItem *_invert;
    CoreDAVGrantItem *_grant;
    CoreDAVDenyItem *_deny;
    CoreDAVItemWithNoChildren *_protectedItem;
    CoreDAVItemWithHrefChildItem *_inherited;
}

+ (id)privilegeItemWithNameSpace:(id)arg1 andName:(id)arg2;
+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItemWithHrefChildItem *inherited; // @synthesize inherited=_inherited;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *protectedItem; // @synthesize protectedItem=_protectedItem;
@property(retain, nonatomic) CoreDAVDenyItem *deny; // @synthesize deny=_deny;
@property(retain, nonatomic) CoreDAVGrantItem *grant; // @synthesize grant=_grant;
@property(retain, nonatomic) CoreDAVInvertItem *invert; // @synthesize invert=_invert;
@property(retain, nonatomic) CoreDAVPrincipalItem *principal; // @synthesize principal=_principal;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithPrincipal:(id)arg1 shouldInvert:(_Bool)arg2 action:(int)arg3 withPrivileges:(id)arg4;
- (id)init;

@end

@interface CoreDAVACLItem : CoreDAVItem
{
    NSMutableSet *_accessControlEntities;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *accessControlEntities; // @synthesize accessControlEntities=_accessControlEntities;
- (id)liveACEs;
- (id)notGrantedSubsetOfACEs:(id)arg1;
- (void)addACE:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVACLTask : CoreDAVTask
{
    NSArray *_accessControlEntities;
}

@property(retain, nonatomic) NSArray *accessControlEntities; // @synthesize accessControlEntities=_accessControlEntities;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)requestBody;
- (id)httpMethod;
- (id)description;
- (void)dealloc;
- (id)initWithAccessControlEntities:(id)arg1 atURL:(id)arg2;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(nonatomic) id <CoreDAVACLTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVAction : NSObject
{
    int _action;
    id _context;
    id _changeContext;
}

@property(retain, nonatomic) id changeContext; // @synthesize changeContext=_changeContext;
@property(readonly, nonatomic) id context; // @synthesize context=_context;
@property(readonly, nonatomic) int action; // @synthesize action=_action;
- (id)description;
- (id)initWithAction:(int)arg1 context:(id)arg2;
- (void)dealloc;

@end

@interface CoreDAVActionBackedTask : CoreDAVTask
{
    CoreDAVAction *_backingAction;
}

@property(retain, nonatomic) CoreDAVAction *backingAction; // @synthesize backingAction=_backingAction;
- (void)dealloc;
- (id)description;

@end

@interface CoreDAVBulkRequestsItem : CoreDAVItem
{
    CoreDAVLeafItem *_maxResourcesItem;
    CoreDAVLeafItem *_maxSizeItem;
    NSMutableSet *_supportedItems;
}

+ (id)copyParseRules;
@property(readonly, nonatomic) NSSet *supportedItems; // @synthesize supportedItems=_supportedItems;
@property(retain, nonatomic) CoreDAVLeafItem *maxSizeItem; // @synthesize maxSizeItem=_maxSizeItem;
@property(retain, nonatomic) CoreDAVLeafItem *maxResourcesItem; // @synthesize maxResourcesItem=_maxResourcesItem;
@property(readonly, nonatomic) _Bool supportsDelete;
@property(readonly, nonatomic) _Bool supportsUpdate;
@property(readonly, nonatomic) _Bool supportsInsert;
- (_Bool)supportsItemWithNameSpace:(id)arg1 name:(id)arg2;
@property(readonly, nonatomic) long long maxSize;
@property(readonly, nonatomic) long long maxResources;
@property(readonly, nonatomic) NSDictionary *dictRepresentation;
- (void)addSupportedItem:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVBulkRequestsSetItem : CoreDAVItem
{
    CoreDAVBulkRequestsItem *_crudItem;
    CoreDAVBulkRequestsItem *_simpleItem;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVBulkRequestsItem *simpleItem; // @synthesize simpleItem=_simpleItem;
@property(retain, nonatomic) CoreDAVBulkRequestsItem *crudItem; // @synthesize crudItem=_crudItem;
@property(readonly, nonatomic) NSDictionary *dictRepresentation;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVBulkRequestsSupportedItem : CoreDAVItem
{
    CoreDAVItem *_supported;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItem *supported; // @synthesize supported=_supported;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVCalendarServerEmailAddressSetItem : CoreDAVItem
{
    NSMutableSet *_emailAddresses;
    CoreDAVItemWithNoChildren *_unauthenticated;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *unauthenticated; // @synthesize unauthenticated=_unauthenticated;
@property(retain, nonatomic) NSMutableSet *emailAddresses; // @synthesize emailAddresses=_emailAddresses;
- (void)addEmailAddress:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVCalendarServerPushTransportsItem : CoreDAVItem
{
    NSMutableSet *_transports;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *transports; // @synthesize transports=_transports;
- (void)addTransport:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVCalendarServerTransportItem : CoreDAVItem
{
    CoreDAVLeafItem *_apsBundleID;
    CoreDAVLeafItem *_courierServer;
    CoreDAVItemWithHrefChildItem *_subscriptionURL;
    CoreDAVItemWithHrefChildItem *_tokenURL;
    CoreDAVLeafItem *_apsEnv;
    CoreDAVLeafItem *_refreshInterval;
    CoreDAVLeafItem *_xmppServer;
    CoreDAVLeafItem *_xmppURI;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVLeafItem *xmppURI; // @synthesize xmppURI=_xmppURI;
@property(retain, nonatomic) CoreDAVLeafItem *xmppServer; // @synthesize xmppServer=_xmppServer;
@property(retain, nonatomic) CoreDAVLeafItem *refreshInterval; // @synthesize refreshInterval=_refreshInterval;
@property(retain, nonatomic) CoreDAVLeafItem *apsEnv; // @synthesize apsEnv=_apsEnv;
@property(retain, nonatomic) CoreDAVItemWithHrefChildItem *tokenURL; // @synthesize tokenURL=_tokenURL;
@property(retain, nonatomic) CoreDAVItemWithHrefChildItem *subscriptionURL; // @synthesize subscriptionURL=_subscriptionURL;
@property(retain, nonatomic) CoreDAVLeafItem *courierServer; // @synthesize courierServer=_courierServer;
@property(retain, nonatomic) CoreDAVLeafItem *apsBundleID; // @synthesize apsBundleID=_apsBundleID;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVContainerInfoSyncTaskGroup : CoreDAVTaskGroup <CoreDAVTaskDelegate>
{
    NSString *_previousSyncToken;
    NSURL *_containerURL;
}

- (id)copyContainerParserMappings;
- (Class)containerItemClass;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)startTaskGroup;
@property(readonly, copy) NSString *description;
- (void)dealloc;
@property(nonatomic) id <CoreDAVContainerInfoSyncProvider> delegate;
- (id)initWithContainerURL:(id)arg1 previousSyncToken:(id)arg2 accountInfoProvider:(id)arg3 taskManager:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVCopyOrMoveTask : CoreDAVTask
{
    int _overwrite;
    NSURL *_destinationURL;
}

+ (id)stringFromOverwriteValue:(int)arg1;
@property(retain, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(nonatomic) int overwrite; // @synthesize overwrite=_overwrite;
- (void)_callBackToDelegateWithResponses:(id)arg1 error:(id)arg2;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)additionalHeaderValues;
- (id)requestBody;
- (id)description;
- (void)dealloc;
- (id)initWithSourceURL:(id)arg1 destinationURL:(id)arg2 andOverwrite:(int)arg3;
- (id)initWithSourceURL:(id)arg1 destinationURL:(id)arg2;
- (id)initWithURL:(id)arg1;

@end

@interface CoreDAVCopyTask : CoreDAVCopyOrMoveTask
{
}

- (void)_callBackToDelegateWithResponses:(id)arg1 error:(id)arg2;
- (_Bool)validate:(id *)arg1;
- (void)dealloc;
- (id)httpMethod;

// Remaining properties
@property(nonatomic) id <CoreDAVCopyTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVCurrentUserPrincipalItem : CoreDAVItem
{
    CoreDAVHrefItem *_href;
    CoreDAVItemWithNoChildren *_unauthenticated;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *unauthenticated; // @synthesize unauthenticated=_unauthenticated;
@property(retain, nonatomic) CoreDAVHrefItem *href; // @synthesize href=_href;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVCurrentUserPrivilegeSetItem : CoreDAVItem
{
    NSMutableSet *_privileges;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *privileges; // @synthesize privileges=_privileges;
- (_Bool)hasPrivilegeWithNameSpace:(id)arg1 andName:(id)arg2;
- (void)addPrivilege:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVDeleteTask : CoreDAVActionBackedTask
{
    NSString *_previousETag;
}

@property(retain, nonatomic) NSString *previousETag; // @synthesize previousETag=_previousETag;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)requestBody;
- (id)additionalHeaderValues;
- (id)httpMethod;
- (id)description;
- (void)dealloc;

// Remaining properties
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVDenyItem : CoreDAVItem
{
    NSMutableSet *_privileges;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *privileges; // @synthesize privileges=_privileges;
- (void)addPrivilege:(id)arg1;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVDiscoveryAccountInfo : NSObject <CoreDAVAccountInfoProvider>
{
    NSString *_scheme;
    NSString *_host;
    NSString *_serverRoot;
    long long _port;
    NSString *_user;
    NSString *_password;
    NSData *_identityPersist;
    NSURL *_principalURL;
    NSString *_accountID;
    NSDictionary *_serverHeaders;
    NSSet *_serverComplianceClasses;
    NSString *_userAgentHeader;
    _Bool _shouldFailAllTasks;
    _Bool _started;
    _Bool _success;
    NSError *_error;
    id <CoreDAVAccountInfoProvider> _backingAccountInfoProvider;
}

@property(retain, nonatomic) NSString *userAgentHeader; // @synthesize userAgentHeader=_userAgentHeader;
@property(retain, nonatomic) NSSet *serverComplianceClasses; // @synthesize serverComplianceClasses=_serverComplianceClasses;
@property(retain, nonatomic) NSDictionary *serverHeaders; // @synthesize serverHeaders=_serverHeaders;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) _Bool success; // @synthesize success=_success;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property(retain, nonatomic) id <CoreDAVAccountInfoProvider> backingAccountInfoProvider; // @synthesize backingAccountInfoProvider=_backingAccountInfoProvider;
@property(nonatomic) _Bool shouldFailAllTasks; // @synthesize shouldFailAllTasks=_shouldFailAllTasks;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
@property(retain, nonatomic) NSURL *principalURL; // @synthesize principalURL=_principalURL;
@property(retain, nonatomic) NSData *identityPersist; // @synthesize identityPersist=_identityPersist;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *user; // @synthesize user=_user;
@property(retain, nonatomic) NSString *serverRoot; // @synthesize serverRoot=_serverRoot;
@property(nonatomic) long long port; // @synthesize port=_port;
@property(retain, nonatomic) NSString *host; // @synthesize host=_host;
@property(retain, nonatomic) NSString *scheme; // @synthesize scheme=_scheme;
- (_Bool)shouldUseOpportunisticSockets;
- (struct __CFURLStorageSession *)copyStorageSession;
- (_Bool)shouldSendClientInfoHeaderForURL:(id)arg1;
- (_Bool)shouldHandleHTTPCookiesForURL:(id)arg1;
- (_Bool)handleShouldUseCredentialStorage;
- (_Bool)handleAuthenticateAgainstProtectionSpace:(id)arg1 withConnection:(id)arg2;
- (_Bool)handleAuthenticateAgainstProtectionSpace:(id)arg1;
- (_Bool)shouldRetryUnauthorizedConnection:(id)arg1;
- (_Bool)shouldTurnModalOnBadPassword;
- (_Bool)handleCertificateError:(id)arg1;
- (_Bool)handleTrustChallenge:(id)arg1 withConnection:(id)arg2;
- (_Bool)handleTrustChallenge:(id)arg1;
- (id)oauthInfoProvider;
- (id)clientToken;
- (void)clientTokenRequestedByServer;
- (id)additionalHeaderValues;
- (void)promptUserForNewCoreDAVPasswordWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)url;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVDiscoveryTaskGroup : CoreDAVTaskGroup <CoreDAVOptionsTaskDelegate, CoreDAVPropFindTaskDelegate>
{
    NSString *_requiredComplianceClass;
    NSArray *_httpPorts;
    NSArray *_httpsPorts;
    NSString *_httpServiceString;
    NSString *_httpsServiceString;
    NSString *_wellKnownPath;
    NSArray *_potentialContextPaths;
    NSMutableArray *_discoveries;
    _Bool _didReceiveAuthenticationError;
    _Bool _shouldBailEarly;
    id <CoreDAVAccountInfoProvider> _discoveredAccountInfo;
}

@property(retain, nonatomic) NSArray *potentialContextPaths; // @synthesize potentialContextPaths=_potentialContextPaths;
@property(retain, nonatomic) NSString *wellKnownPath; // @synthesize wellKnownPath=_wellKnownPath;
@property(retain, nonatomic) id <CoreDAVAccountInfoProvider> discoveredAccountInfo; // @synthesize discoveredAccountInfo=_discoveredAccountInfo;
@property(nonatomic) _Bool shouldBailEarly; // @synthesize shouldBailEarly=_shouldBailEarly;
@property(nonatomic) _Bool didReceiveAuthenticationError; // @synthesize didReceiveAuthenticationError=_didReceiveAuthenticationError;
- (void)getDiscoveryStatus:(id)arg1 priorFailed:(id *)arg2 subsequentFailed:(id *)arg3 priorIncomplete:(id *)arg4 subsequentIncomplete:(id *)arg5 priorSuccess:(id *)arg6 subsequentSuccess:(id *)arg7;
- (void)addToDiscoveryArray:(id *)arg1 discovery:(id)arg2;
- (id)cleanedStringsFromResponseHeaders:(id)arg1 forHeader:(id)arg2;
- (id)extractPrincipalURLFromPropFindTask:(id)arg1 error:(id *)arg2;
- (id)propFindProperties;
- (void)noteDefinitiveAuthFailureFromTask:(id)arg1;
- (void)completeDiscovery:(id)arg1 error:(id)arg2;
- (void)propFindTaskFinished:(id)arg1;
- (void)optionsTask:(id)arg1 error:(id)arg2;
- (void)completeOptionsTask:(id)arg1 error:(id)arg2;
- (void)srvLookupTask:(id)arg1 error:(id)arg2;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)startPropfindTask:(id)arg1;
- (void)startOptionsTask:(id)arg1;
- (void)startWellKnownFallbackHeadTask:(id)arg1 withURL:(id)arg2;
- (void)startWellKnownLocationTask:(id)arg1 withURL:(id)arg2;
- (void)startSRVLookup:(id)arg1 serviceString:(id)arg2;
- (id)allDiscoveryPaths:(id)arg1;
- (id)allDiscoveryPorts:(id)arg1 withScheme:(id)arg2;
- (id)setupDiscoveries:(id)arg1 withSchemes:(id)arg2;
- (void)syncAway;
- (void)startTaskGroup;
- (void)cancelTaskGroup;
- (void)taskGroupWillCancelWithError:(id)arg1;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2 httpPorts:(id)arg3 httpsPorts:(id)arg4 httpServiceString:(id)arg5 httpsServiceString:(id)arg6 wellKnownPaths:(id)arg7 requiredComplianceClass:(id)arg8;
- (id)initWithAccountInfoProvider:(id)arg1 taskManager:(id)arg2 httpPorts:(id)arg3 httpsPorts:(id)arg4 httpServiceString:(id)arg5 httpsServiceString:(id)arg6 wellKnownPath:(id)arg7 potentialContextPaths:(id)arg8 requiredComplianceClass:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <CoreDAVDiscoveryTaskGroupDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVErrorItem : CoreDAVItem
{
    CoreDAVItemWithNoChildren *_numberOfMatchesWithinLimits;
    CoreDAVItemWithNoChildren *_validSyncToken;
    CoreDAVItemWithNoChildren *_noUIDConflict;
    CoreDAVItemWithNoChildren *_validAddressData;
    CoreDAVItemWithNoChildren *_maxResourceSize;
    CoreDAVItemWithNoChildren *_uid;
    CoreDAVItemWithNoChildren *_ctagOkay;
    CoreDAVItemWithNoChildren *_maxImageSize;
    CoreDAVItemWithNoChildren *_invalidImageType;
    CoreDAVItemWithNoChildren *_imageError;
    CoreDAVItemWithNoChildren *_maxAttendees;
    CoreDAVItemWithNoChildren *_quotaExceeded;
    CoreDAVItemWithNoChildren *_maxResources;
    CoreDAVItemWithNoChildren *_validTimezone;
    CoreDAVLeafItem *_status;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVLeafItem *status; // @synthesize status=_status;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *validTimezone; // @synthesize validTimezone=_validTimezone;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *maxResources; // @synthesize maxResources=_maxResources;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *quotaExceeded; // @synthesize quotaExceeded=_quotaExceeded;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *maxAttendees; // @synthesize maxAttendees=_maxAttendees;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *imageError; // @synthesize imageError=_imageError;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *invalidImageType; // @synthesize invalidImageType=_invalidImageType;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *maxImageSize; // @synthesize maxImageSize=_maxImageSize;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *ctagOkay; // @synthesize ctagOkay=_ctagOkay;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *uid; // @synthesize uid=_uid;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *maxResourceSize; // @synthesize maxResourceSize=_maxResourceSize;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *validAddressData; // @synthesize validAddressData=_validAddressData;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *noUIDConflict; // @synthesize noUIDConflict=_noUIDConflict;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *validSyncToken; // @synthesize validSyncToken=_validSyncToken;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *numberOfMatchesWithinLimits; // @synthesize numberOfMatchesWithinLimits=_numberOfMatchesWithinLimits;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVPropertyFindBaseTask : CoreDAVTask
{
    CoreDAVMultiStatusItem *_multiStatus;
    NSSet *_propertiesToFind;
}

@property(retain, nonatomic) CoreDAVMultiStatusItem *multiStatus; // @synthesize multiStatus=_multiStatus;
@property(retain, nonatomic) NSSet *propertiesToFind; // @synthesize propertiesToFind=_propertiesToFind;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)getTotalFailureError;
- (void)updateMultiStatusFromResponse;
- (id)successfulValueForNameSpace:(id)arg1 elementName:(id)arg2;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)additionalHeaderValues;
- (id)parseHints;
- (id)description;
- (void)dealloc;
- (id)initWithPropertiesToFind:(id)arg1 atURL:(id)arg2;

@end

@interface CoreDAVExpandPropertiesTask : CoreDAVPropertyFindBaseTask
{
    NSMutableSet *_propertiesToExpand;
}

@property(retain, nonatomic) NSMutableSet *propertiesToExpand; // @synthesize propertiesToExpand=_propertiesToExpand;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)parseHints;
- (id)requestBody;
- (id)httpMethod;
- (id)description;
- (void)addPropertyToExpandWithPropertiesToFind:(id)arg1 expandedName:(id)arg2 expandedNameSpace:(id)arg3;
- (id)initWithPropertiesToFind:(id)arg1 atURL:(id)arg2 expandedName:(id)arg3 expandedNameSpace:(id)arg4;
- (void)dealloc;

@end

@interface CoreDAVExpandProperty : NSObject
{
    NSSet *_propertiesToFind;
    NSString *_expandedName;
    NSString *_expandedNameSpace;
}

@property(retain, nonatomic) NSString *expandedNameSpace; // @synthesize expandedNameSpace=_expandedNameSpace;
@property(retain, nonatomic) NSString *expandedName; // @synthesize expandedName=_expandedName;
@property(retain, nonatomic) NSSet *propertiesToFind; // @synthesize propertiesToFind=_propertiesToFind;
- (id)initWithPropertiesToFind:(id)arg1 expandedName:(id)arg2 expandedNameSpace:(id)arg3;
- (void)dealloc;

@end

@interface CoreDAVFolderContentsMultiGetTask : CoreDAVContainerMultiGetTask
{
}

- (void)setAdditionalProperties:(id)arg1 onDataItem:(id)arg2;
- (id)copyAdditionalPropElements;
- (id)initWithURLs:(id)arg1 atContainerURL:(id)arg2 appSpecificDataItemClass:(Class)arg3;

@end

@interface CoreDAVGetToFileTask : CoreDAVGetTask
{
    NSFileHandle *_destinationFile;
}

@property(retain, nonatomic) NSFileHandle *destinationFile; // @synthesize destinationFile=_destinationFile;
- (_Bool)shouldLogResponseBody;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)initWithURL:(id)arg1 destinationFile:(id)arg2;
- (void)dealloc;

@end

@interface CoreDAVGrantItem : CoreDAVItem
{
    NSMutableSet *_privileges;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *privileges; // @synthesize privileges=_privileges;
- (void)addPrivilege:(id)arg1;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVHeadTask : CoreDAVTask
{
}

- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)requestBody;
- (unsigned long long)cachePolicy;
- (id)httpMethod;

@end

@interface CoreDAVLeafItem : CoreDAVItem
{
}

- (void)write:(id)arg1;

@end

@interface CoreDAVHrefItem : CoreDAVLeafItem
{
    NSURL *_baseURL;
    int _writeStyle;
}

@property(nonatomic) int writeStyle; // @synthesize writeStyle=_writeStyle;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
- (void)parserSuggestsBaseURL:(id)arg1;
- (id)payloadAsOriginalURL;
- (id)payloadAsFullURL;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)init;

@end

@interface CoreDAVInvertItem : CoreDAVItem
{
    CoreDAVPrincipalItem *_principal;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVPrincipalItem *principal; // @synthesize principal=_principal;
- (id)description;
- (void)write:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVItemParserMapping : NSObject
{
    NSString *_nameSpace;
    NSString *_name;
    Class _parseClass;
}

@property(nonatomic) Class parseClass; // @synthesize parseClass=_parseClass;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *nameSpace; // @synthesize nameSpace=_nameSpace;
- (id)description;
- (void)dealloc;
- (id)initWithNameSpace:(id)arg1 name:(id)arg2 parseClass:(Class)arg3;

@end

@interface CoreDAVItemWithHrefChildItem : CoreDAVItem
{
    CoreDAVHrefItem *_href;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVHrefItem *href; // @synthesize href=_href;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;

@end

@interface CoreDAVItemWithHrefChildItemTolerateBarePayload : CoreDAVItemWithHrefChildItem
{
    CoreDAVHrefItem *_virtualHref;
}

- (void)setPayload:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)href;

@end

@interface CoreDAVItemWithHrefChildren : CoreDAVItem
{
    NSMutableSet *_hrefs;
    CoreDAVItemWithNoChildren *_unauthenticated;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *unauthenticated; // @synthesize unauthenticated=_unauthenticated;
@property(retain, nonatomic) NSMutableSet *hrefs; // @synthesize hrefs=_hrefs;
- (id)hrefsAsStrings;
- (id)hrefsAsOriginalURLs;
- (id)hrefsAsFullURLs;
- (void)addHref:(id)arg1;
- (id)description;
- (void)dealloc;

@end

@interface CoreDAVItemWithNoChildren : CoreDAVItem
{
}

- (void)parserFoundUnrecognizedElement:(id)arg1;

@end

@interface CoreDAVLeafDataPayload : NSObject <CoreDAVLeafDataPayload>
{
    NSURL *_serverID;
    NSString *_syncKey;
    NSData *_dataPayload;
}

@property(readonly, nonatomic) NSString *syncKey; // @synthesize syncKey=_syncKey;
@property(readonly, nonatomic) NSData *dataPayload; // @synthesize dataPayload=_dataPayload;
@property(retain, nonatomic) NSURL *serverID; // @synthesize serverID=_serverID;
- (void)dealloc;
- (id)initWithURL:(id)arg1 eTag:(id)arg2 dataPayload:(id)arg3 inContainerWithURL:(id)arg4 withAccountInfoProvider:(id)arg5;

// Remaining properties
@property(readonly, nonatomic) NSArray *childrenOrder;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVLogging : NSObject
{
    struct __CFDictionary *_logDelegates;
    NSObject<OS_dispatch_queue> *_delegateMuckingQueue;
}

+ (id)sharedLogging;
- (void)logDiagnosticForProvider:(id)arg1 withLevel:(long long)arg2 format:(id)arg3 args:(struct __va_list_tag [1])arg4;
- (id)delegatesToLogTransmittedDataForAccountInfoProvider:(id)arg1;
- (_Bool)_shouldOutputAtLevel:(long long)arg1 forAccountInfoProvider:(id)arg2;
- (_Bool)shouldLogAtLevel:(long long)arg1 forAccountInfoProvider:(id)arg2;
- (id)_delegatesToLogForProvider:(id)arg1;
- (void)removeLogDelegate:(id)arg1 forAccountInfoProvider:(id)arg2;
- (void)addLogDelegate:(id)arg1 forAccountInfoProvider:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVMatchResultsItem : CoreDAVItem
{
    CoreDAVLeafItem *_rank;
    CoreDAVLeafItem *_language;
    CoreDAVLeafItem *_region;
    CoreDAVLeafItem *_calendarDescription;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVLeafItem *calendarDescription; // @synthesize calendarDescription=_calendarDescription;
@property(retain, nonatomic) CoreDAVLeafItem *region; // @synthesize region=_region;
@property(retain, nonatomic) CoreDAVLeafItem *language; // @synthesize language=_language;
@property(retain, nonatomic) CoreDAVLeafItem *rank; // @synthesize rank=_rank;
- (id)description;
- (void)dealloc;

@end

@interface CoreDAVMkcolResponseItem : CoreDAVItem
{
    NSMutableSet *_propStats;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *propStats; // @synthesize propStats=_propStats;
- (_Bool)hasPropertyError;
- (void)addPropStat:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVMkcolTask : CoreDAVActionBackedTask
{
    NSSet *_propertiesToSet;
    _Bool _sendOrder;
    int _absoluteOrder;
    NSURL *_priorOrderedURL;
}

@property(retain, nonatomic) NSURL *priorOrderedURL; // @synthesize priorOrderedURL=_priorOrderedURL;
@property(nonatomic) int absoluteOrder; // @synthesize absoluteOrder=_absoluteOrder;
@property(retain, nonatomic) NSSet *propertiesToSet; // @synthesize propertiesToSet=_propertiesToSet;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (id)additionalHeaderValues;
- (id)httpMethod;
- (id)description;
- (void)dealloc;
- (id)initWithPropertiesToSet:(id)arg1 atURL:(id)arg2;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVMoveTask : CoreDAVCopyOrMoveTask
{
    NSString *_previousETag;
}

@property(retain, nonatomic) NSString *previousETag; // @synthesize previousETag=_previousETag;
- (void)_callBackToDelegateWithResponses:(id)arg1 error:(id)arg2;
- (id)additionalHeaderValues;
- (id)httpMethod;
- (id)description;
- (void)dealloc;

// Remaining properties
@property(nonatomic) id <CoreDAVMoveTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVMoveWithFallbackTaskGroup : CoreDAVTaskGroup
{
    NSURL *_sourceURL;
    NSURL *_destinationURL;
    NSString *_previousETag;
    _Bool _useFallback;
    int _overwrite;
    NSData *_dataPayload;
    NSString *_dataContentType;
    NSDictionary *_responseHeaders;
    NSString *_nextETag;
}

@property(readonly, nonatomic) NSString *nextETag; // @synthesize nextETag=_nextETag;
@property(readonly, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(retain, nonatomic) NSString *dataContentType; // @synthesize dataContentType=_dataContentType;
@property(retain, nonatomic) NSData *dataPayload; // @synthesize dataPayload=_dataPayload;
@property(retain, nonatomic) NSString *previousETag; // @synthesize previousETag=_previousETag;
@property(nonatomic) _Bool useFallback; // @synthesize useFallback=_useFallback;
@property(nonatomic) int overwrite; // @synthesize overwrite=_overwrite;
@property(readonly, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(readonly, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
- (void)_completedPutTask:(id)arg1;
- (void)_completedMoveTask:(id)arg1;
- (void)startTaskGroup;
- (id)description;
- (void)dealloc;
- (id)initWithSourceURL:(id)arg1 destinationURL:(id)arg2 AccountInfoProvider:(id)arg3 taskManager:(id)arg4;

@end

@interface CoreDAVMultiGetWithFallbackTaskGroup : CoreDAVTaskGroup <CoreDAVContainerMultiGetSubmittable>
{
    _Bool _shouldIgnoreResponseErrors;
    _Bool _usingMultiGet;
    CoreDAVContainerMultiGetTask *_multiGetTask;
    CDUnknownBlockType _getBlock;
    NSMutableSet *_urls;
    NSMutableSet *_parsedContents;
}

@property(nonatomic) _Bool shouldIgnoreResponseErrors; // @synthesize shouldIgnoreResponseErrors=_shouldIgnoreResponseErrors;
@property(readonly, nonatomic) NSSet *parsedContents;
@property(readonly, nonatomic) NSSet *deletedURLs;
@property(readonly, nonatomic) NSSet *missingURLs;
@property(readonly, nonatomic) NSError *error;
- (void)startTaskGroup;
- (void)_fetchOneItem;
- (void)_switchToSingleGetMode;
- (void)_configureAndSubmitTask:(id)arg1;
- (void)dealloc;
- (id)initWithURLs:(id)arg1 multiGetBlock:(CDUnknownBlockType)arg2 getBlock:(CDUnknownBlockType)arg3 accountInfoProvider:(id)arg4 taskManager:(id)arg5;

// Remaining properties
@property(nonatomic) id <CoreDAVAccountInfoProvider> accountInfoProvider;
@property(copy, nonatomic) CDUnknownBlockType completionBlock;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(nonatomic) id <CoreDAVTaskManager> taskManager;
@property(nonatomic) double timeoutInterval;

@end

@interface CoreDAVMultiMoveWithFallbackTaskGroup : CoreDAVTaskGroup
{
    NSSet *_sourceURLs;
    NSURL *_destinationURL;
    int _overwrite;
    _Bool _useFallback;
    NSDictionary *_sourceEntityDataPayloads;
    NSDictionary *_sourceEntityDataContentTypes;
    NSDictionary *_sourceEntityETags;
    NSMutableSet *_destinationURLs;
    NSMutableDictionary *_destinationEntityETags;
    NSMutableArray *_outstandingSourceURLsToMove;
}

@property(retain, nonatomic) NSMutableArray *outstandingSourceURLsToMove; // @synthesize outstandingSourceURLsToMove=_outstandingSourceURLsToMove;
@property(readonly, nonatomic) NSMutableSet *destinationURLs; // @synthesize destinationURLs=_destinationURLs;
@property(readonly, nonatomic) NSMutableDictionary *destinationEntityETags; // @synthesize destinationEntityETags=_destinationEntityETags;
@property(readonly, nonatomic) NSDictionary *sourceEntityETags; // @synthesize sourceEntityETags=_sourceEntityETags;
@property(readonly, nonatomic) NSDictionary *sourceEntityDataContentTypes; // @synthesize sourceEntityDataContentTypes=_sourceEntityDataContentTypes;
@property(readonly, nonatomic) NSDictionary *sourceEntityDataPayloads; // @synthesize sourceEntityDataPayloads=_sourceEntityDataPayloads;
@property(readonly, nonatomic) _Bool useFallback; // @synthesize useFallback=_useFallback;
@property(readonly, nonatomic) int overwrite; // @synthesize overwrite=_overwrite;
@property(readonly, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(readonly, nonatomic) NSSet *sourceURLs; // @synthesize sourceURLs=_sourceURLs;
- (void)_completedPutTask:(id)arg1 sourceURL:(id)arg2;
- (void)_completedMoveTask:(id)arg1 sourceURL:(id)arg2;
- (id)_eTagFromTaskResponseHeaders:(id)arg1;
- (void)_setTagsForDestinationEntityAtURL:(id)arg1 fromTaskResponseHeaders:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)processOutstandingTasks;
- (void)startTaskGroup;
- (id)filenameFromURL:(id)arg1;
- (id)fullDestinationURLFromSourceURL:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithSourceURLs:(id)arg1 destinationURL:(id)arg2 overwrite:(_Bool)arg3 useFallback:(_Bool)arg4 sourceEntityDataPayloads:(id)arg5 sourceEntityDataContentTypes:(id)arg6 sourceEntityETags:(id)arg7 accountInfoProvider:(id)arg8 taskManager:(id)arg9;

@end

@interface CoreDAVMultiStatusItem : CoreDAVItem
{
    NSMutableArray *_orderedResponses;
    CoreDAVLeafItem *_responseDescription;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVLeafItem *responseDescription; // @synthesize responseDescription=_responseDescription;
@property(retain, nonatomic) NSMutableArray *orderedResponses; // @synthesize orderedResponses=_orderedResponses;
@property(readonly, nonatomic) NSSet *responses;
- (void)addResponse:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVNullParser : NSObject <CoreDAVResponseBodyParser>
{
    NSError *_parserError;
}

+ (_Bool)canHandleContentType:(id)arg1;
- (_Bool)processData:(id)arg1 forTask:(id)arg2;
@property(readonly) NSError *parserError;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVOctetStreamParser : NSObject <CoreDAVResponseBodyParser>
{
    NSMutableData *_octetStreamData;
    NSError *_parserError;
}

+ (_Bool)canHandleContentType:(id)arg1;
@property(retain, nonatomic) NSMutableData *octetStreamData; // @synthesize octetStreamData=_octetStreamData;
@property(readonly) NSError *parserError;
- (_Bool)processData:(id)arg1 forTask:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVOctetStreamToFileParser : CoreDAVOctetStreamParser
{
    NSFileHandle *_fileHandle;
}

@property(retain, nonatomic) NSFileHandle *fileHandle; // @synthesize fileHandle=_fileHandle;
- (_Bool)processData:(id)arg1 forTask:(id)arg2;
- (void)dealloc;
- (id)initWithFileHandle:(id)arg1;

@end

@interface CoreDAVOptionsTask : CoreDAVTask
{
}

- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)requestBody;
- (id)httpMethod;

// Remaining properties
@property(nonatomic) id <CoreDAVOptionsTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVOrderedAction : CoreDAVAction
{
    int _absoluteOrder;
    NSURL *_priorURL;
}

@property(retain, nonatomic) NSURL *priorURL; // @synthesize priorURL=_priorURL;
@property(readonly, nonatomic) int absoluteOrder; // @synthesize absoluteOrder=_absoluteOrder;
- (id)description;
- (void)dealloc;
- (id)initWithAction:(int)arg1 context:(id)arg2 absoluteOrder:(int)arg3;

@end

@interface CoreDAVParseRule : NSObject
{
    long long _minimumNumber;
    long long _maximumNumber;
    NSString *_nameSpace;
    NSString *_elementName;
    Class _objectClass;
    SEL _setterMethod;
}

+ (id)ruleWithMinimumNumber:(long long)arg1 maximumNumber:(long long)arg2 nameSpace:(id)arg3 elementName:(id)arg4 objectClass:(Class)arg5 setterMethod:(SEL)arg6;
@property(readonly, nonatomic) SEL setterMethod; // @synthesize setterMethod=_setterMethod;
@property(readonly, nonatomic) Class objectClass; // @synthesize objectClass=_objectClass;
@property(readonly, nonatomic) NSString *elementName; // @synthesize elementName=_elementName;
@property(readonly, nonatomic) NSString *nameSpace; // @synthesize nameSpace=_nameSpace;
@property(readonly, nonatomic) long long maximumNumber; // @synthesize maximumNumber=_maximumNumber;
@property(readonly, nonatomic) long long minimumNumber; // @synthesize minimumNumber=_minimumNumber;
- (id)description;
- (void)dealloc;
- (id)initWithMinimumNumber:(long long)arg1 maximumNumber:(long long)arg2 nameSpace:(id)arg3 elementName:(id)arg4 objectClass:(Class)arg5 setterMethod:(SEL)arg6;

@end

@interface CoreDAVPostOrPutTask : CoreDAVActionBackedTask
{
    _Bool _forceToServer;
    NSString *_previousETag;
    NSString *_requestDataContentType;
    NSData *_requestDataPayload;
    _Bool _sendOrder;
    int _absoluteOrder;
    NSURL *_priorOrderedURL;
}

@property(retain, nonatomic) NSURL *priorOrderedURL; // @synthesize priorOrderedURL=_priorOrderedURL;
@property(nonatomic) int absoluteOrder; // @synthesize absoluteOrder=_absoluteOrder;
@property(retain, nonatomic) NSData *requestDataPayload; // @synthesize requestDataPayload=_requestDataPayload;
@property(retain, nonatomic) NSString *requestDataContentType; // @synthesize requestDataContentType=_requestDataContentType;
@property(retain, nonatomic) NSString *previousETag; // @synthesize previousETag=_previousETag;
@property(nonatomic) _Bool forceToServer; // @synthesize forceToServer=_forceToServer;
- (id)requestBody;
- (id)additionalHeaderValues;
- (id)description;
- (void)dealloc;
- (id)initWithDataPayload:(id)arg1 dataContentType:(id)arg2 atURL:(id)arg3 previousETag:(id)arg4;
- (id)initWithURL:(id)arg1;

@end

@interface CoreDAVPostTask : CoreDAVPostOrPutTask
{
}

- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)httpMethod;
- (id)initWithDataPayload:(id)arg1 dataContentType:(id)arg2 atURL:(id)arg3 previousETag:(id)arg4;

// Remaining properties
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVPrincipalItem : CoreDAVItem
{
    CoreDAVHrefItem *_href;
    CoreDAVItemWithNoChildren *_all;
    CoreDAVItemWithNoChildren *_authenticated;
    CoreDAVItemWithNoChildren *_unauthenticated;
    CoreDAVItem *_property;
    CoreDAVItemWithNoChildren *_selfItem;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *selfItem; // @synthesize selfItem=_selfItem;
@property(retain, nonatomic) CoreDAVItem *property; // @synthesize property=_property;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *unauthenticated; // @synthesize unauthenticated=_unauthenticated;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *authenticated; // @synthesize authenticated=_authenticated;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *all; // @synthesize all=_all;
@property(retain, nonatomic) CoreDAVHrefItem *href; // @synthesize href=_href;
- (id)hashString;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initTypeIsSelf;
- (id)initTypeIsUnauthenticated;
- (id)initTypeIsAuthenticated;
- (id)initTypeIsProperty:(id)arg1;
- (id)initTypeIsHREFWithURL:(id)arg1;
- (id)initTypeIsAll;
- (id)init;

@end

@interface CoreDAVPrincipalPropertySearchTask : CoreDAVPropertyFindBaseTask
{
    NSSet *_searchItems;
    _Bool _applyToPrincipalCollectionSet;
    NSDictionary *_extraAttributes;
}

@property(nonatomic) _Bool applyToPrincipalCollectionSet; // @synthesize applyToPrincipalCollectionSet=_applyToPrincipalCollectionSet;
@property(retain, nonatomic) NSDictionary *extraAttributes; // @synthesize extraAttributes=_extraAttributes;
@property(retain, nonatomic) NSSet *searchItems; // @synthesize searchItems=_searchItems;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)requestBody;
- (id)httpMethod;
- (id)initWithPropertySearches:(id)arg1 propertiesToFind:(id)arg2 atURL:(id)arg3 applyToPrincipalCollectionSet:(_Bool)arg4 extraAttributes:(id)arg5;
- (void)dealloc;
- (id)initWithPropertiesToFind:(id)arg1 atURL:(id)arg2;

@end

@interface CoreDAVPrincipalSearchPropertyItem : CoreDAVItem
{
    CoreDAVItem *_prop;
    CoreDAVLeafItem *_descriptionItem;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVLeafItem *descriptionItem; // @synthesize descriptionItem=_descriptionItem;
@property(retain, nonatomic) CoreDAVItem *prop; // @synthesize prop=_prop;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVPrincipalSearchPropertySetItem : CoreDAVItem
{
    NSMutableSet *_principalSearchProperties;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *principalSearchProperties; // @synthesize principalSearchProperties=_principalSearchProperties;
- (void)addPrincipalSearchProperty:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVPrincipalSearchPropertySetTask : CoreDAVTask
{
}

- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (id)httpMethod;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(nonatomic) id <CoreDAVPrincipalSearchPropertySetTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVPropFindItem : CoreDAVItem
{
    CoreDAVItemWithNoChildren *_propName;
    CoreDAVItemWithNoChildren *_allProp;
    CoreDAVItem *_include;
    CoreDAVItem *_prop;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItem *prop; // @synthesize prop=_prop;
@property(retain, nonatomic) CoreDAVItem *include; // @synthesize include=_include;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *allProp; // @synthesize allProp=_allProp;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *propName; // @synthesize propName=_propName;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVPropFindTask : CoreDAVPropertyFindBaseTask
{
}

- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)requestBody;
- (id)httpMethod;
- (id)initWithPropertiesToFind:(id)arg1 atURL:(id)arg2 withDepth:(int)arg3;

// Remaining properties
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVPropPatchTask : CoreDAVActionBackedTask
{
    NSSet *_propPatchRemoveElements;
    NSSet *_propPatchSetElements;
    CoreDAVResponseItem *_responseItem;
    _Bool _sendOrder;
    int _absoluteOrder;
    NSURL *_priorOrderedURL;
}

@property(retain, nonatomic) NSURL *priorOrderedURL; // @synthesize priorOrderedURL=_priorOrderedURL;
@property(nonatomic) int absoluteOrder; // @synthesize absoluteOrder=_absoluteOrder;
@property(retain, nonatomic) CoreDAVResponseItem *responseItem; // @synthesize responseItem=_responseItem;
@property(retain, nonatomic) NSSet *propPatchSetElements; // @synthesize propPatchSetElements=_propPatchSetElements;
@property(retain, nonatomic) NSSet *propPatchRemoveElements; // @synthesize propPatchRemoveElements=_propPatchRemoveElements;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)requestBody;
- (id)additionalHeaderValues;
- (id)httpMethod;
- (id)description;
- (void)dealloc;
- (id)initWithPropertiesToSet:(id)arg1 andRemove:(id)arg2 atURL:(id)arg3;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(nonatomic) id <CoreDAVPropPatchTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVPropStatItem : CoreDAVItem
{
    CoreDAVLeafItem *_status;
    CoreDAVItem *_prop;
    CoreDAVErrorItem *_errorItem;
    CoreDAVLeafItem *_responseDescription;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVLeafItem *responseDescription; // @synthesize responseDescription=_responseDescription;
@property(retain, nonatomic) CoreDAVErrorItem *errorItem; // @synthesize errorItem=_errorItem;
@property(retain, nonatomic) CoreDAVItem *prop; // @synthesize prop=_prop;
@property(retain, nonatomic) CoreDAVLeafItem *status; // @synthesize status=_status;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVPropertySearchItem : CoreDAVItem
{
    CoreDAVLeafItem *_prop;
    NSString *_match;
    NSString *_matchTypeAttribute;
}

@property(retain, nonatomic) NSString *matchTypeAttribute; // @synthesize matchTypeAttribute=_matchTypeAttribute;
@property(retain, nonatomic) NSString *match; // @synthesize match=_match;
@property(retain, nonatomic) CoreDAVLeafItem *prop; // @synthesize prop=_prop;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithSearchPropertyNameSpace:(id)arg1 andName:(id)arg2;
- (id)init;

@end

@interface CoreDAVPropertyUpdateItem : CoreDAVItem
{
}

@end

@interface CoreDAVPutTask : CoreDAVPostOrPutTask
{
    NSString *_nextETag;
}

@property(retain, nonatomic) NSString *nextETag; // @synthesize nextETag=_nextETag;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)httpMethod;
- (id)description;
- (void)dealloc;

// Remaining properties
@property(nonatomic) id <CoreDAVTaskDelegate> delegate; // @dynamic delegate;

@end

@interface CoreDAVPutStreamTask : CoreDAVPutTask
{
}

- (id)requestBody;
- (id)requestBodyStream;

@end

@interface CoreDAVRecursiveContainerSyncTaskGroup : CoreDAVTaskGroup <CoreDAVDeleteTaskDelegate, CoreDAVPutTaskDelegate, CoreDAVTaskGroupDelegate, CoreDAVMkcolTaskDelegate, CoreDAVPropPatchTaskDelegate>
{
    int _phase;
    NSURL *_folderURL;
    NSString *_previousCTag;
    NSString *_nextCTag;
    NSString *_previousSyncToken;
    NSString *_nextSyncToken;
    NSString *_previousPTag;
    NSString *_nextPTag;
    NSArray *_actions;
    unsigned long long _multiGetBatchSize;
    NSMutableArray *_unsubmittedTasks;
    NSURL *_addMemberURL;
    _Bool _useMultiGet;
    NSMutableSet *_syncReportDeletedURLs;
    NSMutableDictionary *_leafURLToETag;
    NSMutableArray *_childCollectionURL;
    Class _appSpecificDataItemClass;
    Class _appSpecificContainerItemClass;
    _Bool _syncItemOrder;
    NSMutableDictionary *_folderURLToChildrenURLOrder;
    _Bool _preflightCTag;
}

@property(retain, nonatomic) NSString *nextCTag; // @synthesize nextCTag=_nextCTag;
@property(readonly, nonatomic) NSDictionary *folderURLToChildrenURLOrder; // @synthesize folderURLToChildrenURLOrder=_folderURLToChildrenURLOrder;
@property(retain, nonatomic) NSString *previousSyncToken; // @synthesize previousSyncToken=_previousSyncToken;
@property(nonatomic) _Bool preflightCTag; // @synthesize preflightCTag=_preflightCTag;
@property(readonly, nonatomic) NSString *previousCTag; // @synthesize previousCTag=_previousCTag;
@property(readonly, nonatomic) NSURL *folderURL; // @synthesize folderURL=_folderURL;
@property(nonatomic) unsigned long long multiGetBatchSize; // @synthesize multiGetBatchSize=_multiGetBatchSize;
- (_Bool)shouldSyncChildWithResourceType:(id)arg1;
- (id)dataContentType;
- (id)copyFolderMultiGetTaskWithURLs:(id)arg1;
- (id)copyMultiGetTaskWithURLs:(id)arg1;
- (id)_copyContainerParserMappings;
- (void)_getTask:(id)arg1 finishedWithParsedContents:(id)arg2 deletedItems:(id)arg3 error:(id)arg4;
- (void)propFindTask:(id)arg1 parsedResponses:(id)arg2 error:(id)arg3;
- (void)_syncReportTask:(id)arg1 didFinishWithError:(id)arg2;
- (void)deleteTask:(id)arg1 completedWithError:(id)arg2;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)propPatchTask:(id)arg1 parsedResponses:(id)arg2 error:(id)arg3;
- (void)mkcolTask:(id)arg1 parsedPropStats:(id)arg2 error:(id)arg3;
- (void)_folderModTask:(id)arg1 parsedPropStats:(id)arg2 error:(id)arg3;
- (void)_postTask:(id)arg1 didFinishWithError:(id)arg2;
- (void)putTask:(id)arg1 completedWithNewETag:(id)arg2 error:(id)arg3;
- (_Bool)isWhitelistedError:(id)arg1;
- (void)syncAway;
- (void)startTaskGroup;
- (void)_getDataPayloads;
- (void)_getItemTags;
- (void)_getTopFolderTags;
- (void)_pushActions;
- (void)_taskGroupSuccessfullyFinishedWithContents:(id)arg1;
- (unsigned long long)_submitTasks;
- (void)cancelTaskGroup;
- (void)bailWithError:(id)arg1;
- (void)_foundChildrenOrder:(id)arg1 inFolderWithURL:(id)arg2;
- (void)_tearDownAllUnsubmittedTasks;
- (void)taskGroupWillCancelWithError:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithFolderURL:(id)arg1 previousCTag:(id)arg2 previousPTag:(id)arg3 previousSyncToken:(id)arg4 actions:(id)arg5 syncItemOrder:(_Bool)arg6 context:(id)arg7 accountInfoProvider:(id)arg8 taskManager:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <CoreDAVLocalDBTreeInfoProvider> delegate; // @dynamic delegate;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVRemoveItem : CoreDAVItem
{
    CoreDAVItem *_prop;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItem *prop; // @synthesize prop=_prop;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVRequestLogger : NSObject
{
    id <CoreDAVAccountInfoProvider> _provider;
    NSArray *_headerSortDescriptors;
    int _snippetsLogged;
}

@property(retain, nonatomic) NSArray *headerSortDescriptors; // @synthesize headerSortDescriptors=_headerSortDescriptors;
- (void)finishCoreDAVResponse;
- (void)logCoreDAVResponseSnippet:(id)arg1 withTaskIdentifier:(id)arg2 isBody:(_Bool)arg3;
- (void)logCoreDAVResponseSnippet:(id)arg1 withTaskIdentifier:(id)arg2;
- (void)logCoreDAVResponseSnippet:(id)arg1;
- (void)logCoreDAVResponseHeaders:(id)arg1 andStatusCode:(long long)arg2 withTaskIdentifier:(id)arg3;
- (void)logCoreDAVRequest:(id)arg1 withTaskIdentifier:(id)arg2;
- (id)_inflateRequestBody:(id)arg1;
- (void)dealloc;
- (id)initWithProvider:(id)arg1;

@end

@interface CoreDAVResourceTypeItem : CoreDAVItem
{
    CoreDAVItemWithNoChildren *_addressBook;
    CoreDAVItemWithNoChildren *_searchAddressBook;
    CoreDAVItemWithNoChildren *_shared;
    CoreDAVItemWithNoChildren *_principal;
    CoreDAVItemWithNoChildren *_collection;
    CoreDAVItemWithNoChildren *_unauthenticated;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *unauthenticated; // @synthesize unauthenticated=_unauthenticated;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *collection; // @synthesize collection=_collection;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *principal; // @synthesize principal=_principal;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *shared; // @synthesize shared=_shared;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *searchAddressBook; // @synthesize searchAddressBook=_searchAddressBook;
@property(retain, nonatomic) CoreDAVItemWithNoChildren *addressBook; // @synthesize addressBook=_addressBook;
- (_Bool)isTypeWithNameSpace:(id)arg1 andName:(id)arg2;
@property(readonly, nonatomic) NSSet *stringSet;
- (void)write:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVResponseItem : CoreDAVItem
{
    NSMutableArray *_hrefs;
    CoreDAVLeafItem *_status;
    NSMutableSet *_propStats;
    CoreDAVErrorItem *_errorItem;
    CoreDAVLeafItem *_responseDescription;
    CoreDAVItemWithHrefChildItem *_location;
    CoreDAVLeafItem *_serverUID;
    CoreDAVMatchResultsItem *_matchResults;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVMatchResultsItem *matchResults; // @synthesize matchResults=_matchResults;
@property(retain, nonatomic) CoreDAVLeafItem *serverUID; // @synthesize serverUID=_serverUID;
@property(retain, nonatomic) CoreDAVItemWithHrefChildItem *location; // @synthesize location=_location;
@property(retain, nonatomic) CoreDAVLeafItem *responseDescription; // @synthesize responseDescription=_responseDescription;
@property(retain, nonatomic) CoreDAVErrorItem *errorItem; // @synthesize errorItem=_errorItem;
@property(retain, nonatomic) NSMutableSet *propStats; // @synthesize propStats=_propStats;
@property(retain, nonatomic) CoreDAVLeafItem *status; // @synthesize status=_status;
@property(retain, nonatomic) NSMutableArray *hrefs; // @synthesize hrefs=_hrefs;
- (_Bool)hasPropertyError;
- (id)successfulPropertiesToValues;
- (id)firstHref;
- (void)addHref:(id)arg1;
- (void)addPropStat:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVSRVLookupTask : CoreDAVTask
{
    NSString *_serviceString;
    NSArray *_fetchedRecords;
    struct __CFHost *_host;
}

@property(nonatomic) struct __CFHost *host; // @synthesize host=_host;
@property(retain, nonatomic) NSArray *fetchedRecords; // @synthesize fetchedRecords=_fetchedRecords;
@property(retain, nonatomic) NSString *serviceString; // @synthesize serviceString=_serviceString;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (void)performCoreDAVTask;
- (id)description;
- (void)dealloc;
- (id)initWithServiceString:(id)arg1;

@end

@interface CoreDAVSRVResourceRecord : NSObject
{
    NSString *_serviceString;
    NSNumber *_priority;
    NSNumber *_weight;
    NSNumber *_port;
    NSString *_target;
}

@property(retain, nonatomic) NSString *target; // @synthesize target=_target;
@property(retain, nonatomic) NSNumber *port; // @synthesize port=_port;
@property(retain, nonatomic) NSNumber *weight; // @synthesize weight=_weight;
@property(retain, nonatomic) NSNumber *priority; // @synthesize priority=_priority;
@property(retain, nonatomic) NSString *serviceString; // @synthesize serviceString=_serviceString;
- (id)description;
- (void)dealloc;

@end

@interface CoreDAVSetItem : CoreDAVItem
{
    CoreDAVItem *_prop;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItem *prop; // @synthesize prop=_prop;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVSupportedReportItem : CoreDAVItem
{
    CoreDAVItem *_report;
}

+ (id)copyParseRules;
@property(retain, nonatomic) CoreDAVItem *report; // @synthesize report=_report;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVSupportedReportSetItem : CoreDAVItem
{
    NSMutableSet *_supportedReports;
}

+ (id)copyParseRules;
@property(retain, nonatomic) NSMutableSet *supportedReports; // @synthesize supportedReports=_supportedReports;
- (_Bool)supportsReportWithNameSpace:(id)arg1 andName:(id)arg2;
- (void)addSupportedReport:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVSyncReportItem : CoreDAVMultiStatusItem
{
    NSString *_syncToken;
}

+ (id)copyParseRules;
@property(readonly, nonatomic) NSString *syncToken; // @synthesize syncToken=_syncToken;
- (void)_setSyncTokenItem:(id)arg1;
- (id)description;
- (void)dealloc;

@end

@interface CoreDAVSyncReportTask : CoreDAVPropertyFindBaseTask
{
    NSString *_previousSyncToken;
    NSString *_nextSyncToken;
    _Bool _moreToSync;
    _Bool _wasInvalidSyncToken;
}

@property(readonly, nonatomic) _Bool wasInvalidSyncToken; // @synthesize wasInvalidSyncToken=_wasInvalidSyncToken;
@property(readonly, nonatomic) _Bool moreToSync; // @synthesize moreToSync=_moreToSync;
@property(readonly, nonatomic) NSString *nextSyncToken; // @synthesize nextSyncToken=_nextSyncToken;
- (void)finishCoreDAVTaskWithError:(id)arg1;
- (id)copyDefaultParserForContentType:(id)arg1;
- (id)notFoundHREFs;
- (id)requestBody;
- (id)httpMethod;
- (id)description;
- (void)dealloc;
- (id)initWithPropertiesToFind:(id)arg1 atURL:(id)arg2 withDepth:(int)arg3 previousSyncToken:(id)arg4;

@end

@interface CoreDAVUpdateACLTaskGroup : CoreDAVTaskGroup <CoreDAVPropFindTaskDelegate, CoreDAVACLTaskDelegate>
{
    int _state;
    NSSet *_aceItems;
    NSURL *_url;
    CoreDAVPropFindTask *_fetchTask;
}

@property(retain, nonatomic) CoreDAVPropFindTask *fetchTask; // @synthesize fetchTask=_fetchTask;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSSet *aceItems; // @synthesize aceItems=_aceItems;
@property(nonatomic) int state; // @synthesize state=_state;
- (void)taskGroupWillCancelWithError:(id)arg1;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)_finishWithError:(id)arg1 state:(int)arg2;
- (void)startTaskGroup;
- (void)_startSetACLWithAccessControlEntities:(id)arg1;
- (void)_startGetACL;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 aceItems:(id)arg2 url:(id)arg3 taskManager:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVValidatePrincipalsTaskGroup : CoreDAVTaskGroup <CoreDAVTaskDelegate>
{
    NSMutableSet *_urlsToExamine;
    NSMutableSet *_principalURLs;
    NSURL *_urlBeingExamined;
    _Bool _authError;
}

@property(readonly, nonatomic) _Bool didReceiveAuthenticationError; // @synthesize didReceiveAuthenticationError=_authError;
@property(retain, nonatomic) NSURL *urlBeingExamined; // @synthesize urlBeingExamined=_urlBeingExamined;
@property(retain, nonatomic) NSMutableSet *principalURLs; // @synthesize principalURLs=_principalURLs;
@property(retain, nonatomic) NSMutableSet *urlsToExamine; // @synthesize urlsToExamine=_urlsToExamine;
- (void)cancelTaskGroup;
- (void)startTaskGroup;
- (void)task:(id)arg1 didFinishWithError:(id)arg2;
- (void)_fetchNextURL;
- (void)_finishWithError:(id)arg1;
@property(readonly, nonatomic) NSSet *resultPrincipalURLs;
- (void)dealloc;
- (id)initWithAccountInfoProvider:(id)arg1 urls:(id)arg2 taskManager:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVXMLData : NSObject
{
    _Bool _shouldAddFormattingSpaces;
    struct _xmlTextWriter *_writer;
    struct _xmlDoc *_doc;
    _Bool _docHasEnded;
    struct __CFDictionary *_seenURIsToPrefixes;
    struct __CFDictionary *_seenURIsToDepth;
    struct __CFArray *_elementStack;
}

+ (_Bool)string:(id)arg1 isEqualToXmlCharString:(const char *)arg2;
@property(nonatomic) _Bool shouldAddFormattingSpaces; // @synthesize shouldAddFormattingSpaces=_shouldAddFormattingSpaces;
@property(readonly, nonatomic) NSData *data;
- (void)appendElement:(id)arg1 inNamespace:(id)arg2 withStringContentAsCDATA:(id)arg3 withAttributeNamesAndValues:(id)arg4;
- (void)appendElement:(id)arg1 inNamespace:(id)arg2 withStringContent:(id)arg3 withAttributeNamesAndValues:(id)arg4;
- (void)endElement:(id)arg1 inNamespace:(id)arg2;
- (void)startElement:(id)arg1 inNamespace:(id)arg2 withAttributes:(id)arg3;
- (void)startElement:(id)arg1 inNamespace:(id)arg2 withAttributeNamesAndValues:(id)arg3;
- (void)_startElement:(id)arg1 inNamespace:(id)arg2 withAttributeNamesAndValues:(id)arg3 attributes:(struct __va_list_tag [1])arg4;
- (void)_startElement:(id)arg1 inNamespace:(id)arg2;
- (const char *)_prefixForNameSpace:(const char *)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CoreDAVXMLElementAttribute : NSObject
{
    NSString *_name;
    NSString *_nameSpace;
    NSString *_value;
}

@property(retain, nonatomic) NSString *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *nameSpace; // @synthesize nameSpace=_nameSpace;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;
- (void)dealloc;
- (id)initWithNameSpace:(id)arg1 name:(id)arg2 value:(id)arg3;
- (id)init;

@end

@interface CoreDAVXMLElementGenerator : NSObject <NSXMLParserDelegate>
{
    int _parsingState;
    SEL _parentElementSetter;
    CoreDAVItem *_element;
    CoreDAVItem *_parentElement;
    CoreDAVXMLElementGenerator *_parentGenerator;
    NSMutableData *_characters;
    NSMutableData *_cDATA;
    CoreDAVXMLElementGenerator *_currentlyParsingSubItem;
    NSDictionary *_cachedElementParseRules;
    _Bool _checkedElementValidityIfRootElement;
    _Bool _isUnrecognized;
    NSURL *_baseURL;
}

@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(nonatomic) _Bool checkedElementValidityIfRootElement; // @synthesize checkedElementValidityIfRootElement=_checkedElementValidityIfRootElement;
@property(retain, nonatomic) NSDictionary *cachedElementParseRules; // @synthesize cachedElementParseRules=_cachedElementParseRules;
@property(nonatomic) CoreDAVXMLElementGenerator *parentGenerator; // @synthesize parentGenerator=_parentGenerator;
@property(retain, nonatomic) CoreDAVItem *element; // @synthesize element=_element;
@property(retain, nonatomic) CoreDAVXMLElementGenerator *currentlyParsingSubItem; // @synthesize currentlyParsingSubItem=_currentlyParsingSubItem;
@property(retain, nonatomic) NSMutableData *cDATA; // @synthesize cDATA=_cDATA;
@property(retain, nonatomic) NSMutableData *characters; // @synthesize characters=_characters;
@property(nonatomic) SEL parentElementSetter; // @synthesize parentElementSetter=_parentElementSetter;
@property(nonatomic) int parsingState; // @synthesize parsingState=_parsingState;
@property(nonatomic) _Bool isUnrecognized; // @synthesize isUnrecognized=_isUnrecognized;
- (void)resumeParsingWithParser:(id)arg1;
- (void)noteChildCascadingFailure;
- (void)parserDidEndDocument:(id)arg1;
- (void)parser:(id)arg1 validationErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 foundCDATA:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (_Bool)isExpectedNameSpace:(id)arg1 andElementName:(id)arg2;
- (void)notifyElement:(id)arg1 ofAttributesFound:(id)arg2;
- (_Bool)tracksRootElement;
- (void)dealloc;
- (id)initWithParser:(id)arg1 parentGenerator:(id)arg2 parentElementSetter:(SEL)arg3 element:(id)arg4;
- (id)initWithParser:(id)arg1 baseURL:(id)arg2 rootElementNameSpace:(id)arg3 elementName:(id)arg4 parseClass:(Class)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CoreDAVXMLParser : NSXMLParser <CoreDAVResponseBodyParser>
{
    CoreDAVXMLElementGenerator *_rootElementGenerator;
    CoreDAVXMLElementGenerator *_rootErrorGenerator;
    NSSet *_parseHints;
    NSURL *_baseURL;
}

+ (_Bool)canHandleContentType:(id)arg1;
@property(retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(retain, nonatomic) NSSet *parseHints; // @synthesize parseHints=_parseHints;
@property(retain, nonatomic) CoreDAVXMLElementGenerator *rootErrorGenerator; // @synthesize rootErrorGenerator=_rootErrorGenerator;
@property(retain, nonatomic) CoreDAVXMLElementGenerator *rootElementGenerator; // @synthesize rootElementGenerator=_rootElementGenerator;
@property(readonly, nonatomic) CoreDAVErrorItem *rootError;
@property(readonly, nonatomic) CoreDAVItem *rootElement;
- (void)dealloc;
- (_Bool)processData:(id)arg1 forTask:(id)arg2;
- (id)initWithRootElementNameSpace:(id)arg1 name:(id)arg2 parseClass:(Class)arg3 baseURL:(id)arg4;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSError *parserError; // @dynamic parserError;
@property(readonly) Class superclass;

@end

@interface NSArray (CoreDAVExtensions)
+ (id)cdvArrayWithIntegers:(int)arg1;
+ (id)_arrayWithIntArg:(int)arg1 additionalArgs:(struct __va_list_tag [1])arg2;
@end

@interface NSDictionary (CoreDAVExtensions)
- (id)CDVMergeOverrideDictionary:(id)arg1;
- (id)CDVObjectForKeyWithNameSpace:(id)arg1 andName:(id)arg2;
- (id)CDVObjectForKeyCaseInsensitive:(id)arg1;
@end

@interface NSMutableDictionary (CoreDAVExtensions)
- (void)CDVAddObjectsAndKeys:(id)arg1;
@end

@interface NSMutableSet (CoreDAVExtensions)
- (void)CDVAddItemParserMappingWithNameSpace:(id)arg1 name:(id)arg2 parseClass:(Class)arg3;
@end

@interface NSString (CoreDAVExtensions)
+ (id)CDVPreconditionHeaderValueWithCTag:(id)arg1;
+ (id)CDVPreconditionHeaderValueWithCTag:(id)arg1 pathTag:(id)arg2;
+ (id)CDVStringWithNumberOfSpaces:(unsigned long long)arg1;
+ (id)CDVStringWithNameSpace:(id)arg1 andName:(id)arg2;
- (id)CDVStringByXMLUnquoting;
- (id)CDVStringByXMLQuoting;
- (id)CDVStringByAddingPercentEscapesForUserOrPassword;
- (_Bool)CDVIsHTTPStatusLineWithStatusCode:(long long)arg1;
- (id)CDVStringByRemovingTerminatingSlashIfNeeded;
- (id)CDVStringByAppendingSlashIfNeeded;
- (id)CDVStringByRemovingPercentEscapesForHREF;
- (id)CDVStringByAddingPercentEscapesForHREF;
- (id)initWithCDVNameSpace:(id)arg1 andName:(id)arg2;
@end

@interface NSURL (CoreDAVExtensions)
+ (id)CDVDefaultPortForScheme:(id)arg1;
+ (id)CDVURLWithScheme:(id)arg1 host:(id)arg2 port:(id)arg3 path:(id)arg4;
+ (id)CDVURLWithScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6;
- (_Bool)CDVIsSafeRedirectForRequestURL:(id)arg1;
- (id)CDVfixedURLByAppendingPathComponent:(id)arg1;
- (id)CDVFileSystemSafePath;
- (_Bool)CDVIsEqualToURL:(id)arg1;
- (id)CDVServerURLWithPath:(_Bool)arg1;
- (id)CDVServerURL;
- (id)CDVURLByDeletingLastPathComponent;
- (id)CDVRawLastPathComponentPreservingEscapes;
- (id)CDVRawLastPathComponent;
- (id)CDVRawPath;
- (id)CDVPassword;
- (id)CDVURLWithPath:(id)arg1;
- (id)CDVURLWithPassword:(id)arg1;
- (id)CDVURLWithUser:(id)arg1;
- (id)initWithCDVScheme:(id)arg1 user:(id)arg2 password:(id)arg3 host:(id)arg4 port:(id)arg5 path:(id)arg6 parameterString:(id)arg7 query:(id)arg8 fragment:(id)arg9;
- (id)CDVURLWithScheme:(id)arg1 userandpass:(id)arg2 host:(id)arg3 port:(id)arg4 path:(id)arg5 parameters:(id)arg6 encodePercents:(_Bool)arg7;
@end

