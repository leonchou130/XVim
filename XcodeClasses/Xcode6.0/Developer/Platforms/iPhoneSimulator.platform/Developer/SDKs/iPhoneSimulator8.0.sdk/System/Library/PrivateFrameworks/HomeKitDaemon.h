//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
// UUID: 8550BA08-F8AE-30FA-9E90-A8F2B328EE3F
//
//                           Arch: x86_64
//                Current version: 78.0.0
//          Compatibility version: 1.0.0
//                 Source version: 78.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol APSConnectionDelegate <NSObject>
- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;

@optional
- (void)connectionDidReconnect:(APSConnection *)arg1;
- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;
- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;
- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;
- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;
@end

@protocol HAPAccessoryServerBrowserDelegate <NSObject>
- (void)accessoryServerBrowser:(HAPAccessoryServerBrowser *)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(NSString *)arg2;
- (void)accessoryServerBrowser:(HAPAccessoryServerBrowser *)arg1 didStopDiscoveringWithError:(NSError *)arg2;
- (void)accessoryServerBrowser:(HAPAccessoryServerBrowser *)arg1 didStartDiscoveringWithError:(NSError *)arg2;
- (void)accessoryServerBrowser:(HAPAccessoryServerBrowser *)arg1 didRemoveAccessoryServer:(HAPAccessoryServer *)arg2;
- (void)accessoryServerBrowser:(HAPAccessoryServerBrowser *)arg1 didFindAccessoryServer:(HAPAccessoryServer *)arg2;
@end

@protocol HAPAccessoryServerDelegate <NSObject>
- (void)accessoryServer:(HAPAccessoryServer *)arg1 didUpdateValuesForCharacteristics:(NSArray *)arg2;
- (void)accessoryServer:(HAPAccessoryServer *)arg1 isBlockedWithCompletionHandler:(void (^)(_Bool))arg2;
- (void)accessoryServer:(HAPAccessoryServer *)arg1 didDiscoverAccessoriesWithError:(NSError *)arg2;
- (void)accessoryServer:(HAPAccessoryServer *)arg1 didStopPairingWithError:(NSError *)arg2;
- (void)accessoryServer:(HAPAccessoryServer *)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;
- (void)accessoryServer:(HAPAccessoryServer *)arg1 requestUserPermissionForUnauthenticatedAccessory:(NSError *)arg2;
- (void)accessoryServer:(HAPAccessoryServer *)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;
@end

@protocol HMDAccessoryManagerDelegate <NSObject>

@optional
- (void)accessoryManager:(HMDAccessoryManager *)arg1 didRemovePairedAccessories:(NSArray *)arg2 fromBridgeAccessory:(HMDAccessory *)arg3;
- (void)accessoryManager:(HMDAccessoryManager *)arg1 didAddPairedAccessories:(NSArray *)arg2 toBridgeAccessory:(HMDAccessory *)arg3;
- (void)accessoryManager:(HMDAccessoryManager *)arg1 didRemoveNewAccessory:(HMDAccessory *)arg2;
- (void)accessoryManager:(HMDAccessoryManager *)arg1 didFindNewAccessory:(HMDAccessory *)arg2;
@end

@protocol HMDaemonConnection <HMMessageTransport>
- (void)recheckinWithName:(NSString *)arg1;
- (void)checkinWithName:(NSString *)arg1 handleMessageWithName:(NSString *)arg2 messageIdentifier:(NSUUID *)arg3 messagePayload:(NSDictionary *)arg4 target:(NSUUID *)arg5 responseHandler:(void (^)(NSError *, NSDictionary *))arg6;
@end

@protocol HMIDSMessageTransport <NSObject>
+ (void)messageElementsFromDictionary:(NSDictionary *)arg1 messageName:(id *)arg2 messageIdentifier:(id *)arg3 messagePayload:(id *)arg4 target:(id *)arg5 transactionID:(id *)arg6 isRequest:(_Bool *)arg7 isResponse:(_Bool *)arg8 isNotification:(_Bool *)arg9;
+ (NSMutableDictionary *)dictionaryForMessageName:(NSString *)arg1 messageIdentifier:(NSUUID *)arg2 messagePayload:(NSDictionary *)arg3 target:(NSUUID *)arg4 transactionID:(NSString *)arg5 msgType:(unsigned long long)arg6;
- (void)handleMessageWithName:(NSString *)arg1 messageIdentifier:(NSUUID *)arg2 messagePayload:(NSDictionary *)arg3 target:(NSUUID *)arg4 destination:(NSString *)arg5 responseHandler:(void (^)(NSError *, NSDictionary *))arg6;
- (void)handleMessageWithName:(NSString *)arg1 messageIdentifier:(NSUUID *)arg2 messagePayload:(NSDictionary *)arg3 target:(NSUUID *)arg4 destination:(NSString *)arg5;
@end

@protocol HMMessageReceiver <NSObject>
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
@end

@protocol HMMessageTransport <NSObject>
- (void)handleMessageWithName:(NSString *)arg1 messageIdentifier:(NSUUID *)arg2 messagePayload:(NSDictionary *)arg3 target:(NSUUID *)arg4 responseHandler:(void (^)(NSError *, NSDictionary *))arg5;
- (void)handleMessageWithName:(NSString *)arg1 messageIdentifier:(NSUUID *)arg2 messagePayload:(NSDictionary *)arg3 target:(NSUUID *)arg4;
@end

@protocol IDSServiceDelegate <NSObject>

@optional
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withContext:(NSData *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4 withOptions:(NSDictionary *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 inviteReceivedForSession:(IDSSession *)arg3 fromID:(NSString *)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 hasBeenDeliveredWithContext:(id)arg4;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 identifier:(NSString *)arg3 didSendWithSuccess:(_Bool)arg4 error:(NSError *)arg5;
- (void)service:(IDSService *)arg1 nearbyDevicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 devicesChanged:(NSArray *)arg2;
- (void)service:(IDSService *)arg1 activeAccountsChanged:(NSSet *)arg2;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingUnhandledProtobuf:(IDSProtobuf *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingData:(NSData *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
- (void)service:(IDSService *)arg1 account:(IDSAccount *)arg2 incomingMessage:(NSDictionary *)arg3 fromID:(NSString *)arg4 context:(IDSMessageContext *)arg5;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@interface HMDAccessory : NSObject <NSSecureCoding, HMMessageReceiver>
{
    _Bool _blocked;
    _Bool _isAccessoryPaired;
    _Bool _unblockPending;
    _Bool _remoteAccessState;
    _Bool _isAccessoryReachable;
    HMDHome *_home;
    NSString *_name;
    NSUUID *_uuid;
    NSString *_uniqueIdentifier;
    NSString *_configurationAppIdentifier;
    NSString *_providedName;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_dispatch_source> *_pairingRetryTimer;
    NSMutableArray *_discoveredServices;
    HMMessageDispatcher *_msgDispatcher;
    HAPAccessory *_hapAccessory;
    HMDRoom *_room;
    HMDAccessory *_bridge;
    NSMutableSet *_identifiersForBridgedAccessories;
    long long _linkType;
    HMDAccessoryManager *_accessoryManager;
    NSData *_publicKey;
    NSString *_pairingUsername;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool isAccessoryReachable; // @synthesize isAccessoryReachable=_isAccessoryReachable;
@property(nonatomic) _Bool remoteAccessState; // @synthesize remoteAccessState=_remoteAccessState;
@property(retain, nonatomic) NSString *pairingUsername; // @synthesize pairingUsername=_pairingUsername;
@property(retain, nonatomic) NSData *publicKey; // @synthesize publicKey=_publicKey;
@property(nonatomic) _Bool unblockPending; // @synthesize unblockPending=_unblockPending;
@property(nonatomic) __weak HMDAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(readonly, nonatomic) long long linkType; // @synthesize linkType=_linkType;
@property(retain, nonatomic) NSMutableSet *identifiersForBridgedAccessories; // @synthesize identifiersForBridgedAccessories=_identifiersForBridgedAccessories;
@property(nonatomic) __weak HMDAccessory *bridge; // @synthesize bridge=_bridge;
@property(retain, nonatomic) HMDRoom *room; // @synthesize room=_room;
@property(retain, nonatomic) HAPAccessory *hapAccessory; // @synthesize hapAccessory=_hapAccessory;
@property(nonatomic) _Bool isAccessoryPaired; // @synthesize isAccessoryPaired=_isAccessoryPaired;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSMutableArray *discoveredServices; // @synthesize discoveredServices=_discoveredServices;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pairingRetryTimer; // @synthesize pairingRetryTimer=_pairingRetryTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSString *providedName; // @synthesize providedName=_providedName;
@property(nonatomic) _Bool blocked; // @synthesize blocked=_blocked;
@property(retain, nonatomic) NSString *configurationAppIdentifier; // @synthesize configurationAppIdentifier=_configurationAppIdentifier;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(copy, nonatomic, getter=getName) NSString *name; // @synthesize name=_name;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
- (void).cxx_destruct;
- (void)_handleIdentify:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)_sendBlockedNotification:(_Bool)arg1 withError:(id)arg2 withIdentifier:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (void)_handleUpdateAuthorizationData:(id)arg1;
- (void)_handleUpdateAssociatedServiceType:(id)arg1;
- (void)_handleRenameService:(id)arg1;
- (void)_remoteAccessEnabled:(_Bool)arg1;
- (void)remoteAccessEnabled:(_Bool)arg1;
- (void)_sendConnectivityNotification:(_Bool)arg1 remoteAccessChanged:(_Bool)arg2;
- (void)updateReachability:(_Bool)arg1 remoteAccessChanged:(_Bool)arg2;
- (id)findCharacteristicType:(id)arg1 forServiceType:(id)arg2;
- (id)findCharacteristic:(id)arg1 forService:(id)arg2;
- (void)_handleRename:(id)arg1;
- (void)_handleUpdateRoom:(id)arg1;
- (void)_handleCharacteristicEnableNotification:(id)arg1;
- (void)_enableNotificationForCharacteristic:(id)arg1 message:(id)arg2;
- (void)_notifyCharacteristicNotificationChanges:(id)arg1 message:(id)arg2;
- (void)_resetCharacteristicNotifications;
- (void)_readValueForCharacteristic:(id)arg1 messageIdentifier:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)_handleCharacteristicRead:(id)arg1;
- (void)_handleCharacteristicWrite:(id)arg1;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 identifier:(id)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)hmdCharacteristicResponseTuples:(id)arg1 mapping:(id)arg2;
- (id)hapCharacteristicWriteTuples:(id)arg1 hmdResponseTuples:(id *)arg2 mapping:(id *)arg3;
- (void)notifyValue:(id)arg1 error:(id)arg2 identifier:(id)arg3 forCharacteristic:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_registerForMessages;
- (void)updateRoom:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)hmdCharacteristicFromHapCharacteristic:(id)arg1;
- (void)didEncounterError:(id)arg1;
- (void)unblockWithIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)blockWithError:(id)arg1;
- (void)removeBridgedAccessory:(id)arg1;
- (void)addBridgedAccessory:(id)arg1;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)configure:(id)arg1 msgDispatcher:(id)arg2 accessoryManager:(id)arg3;
- (void)savePublicKeyToKeychain;
- (void)setPairingUsername:(id)arg1 publicKey:(id)arg2;
- (void)removeAccessory;
- (void)registerForIdentifyWithMessageDispatcher:(id)arg1;
- (void)configureWithAccessory:(id)arg1 forRemoval:(_Bool)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)configureWithAccessory:(id)arg1 forRemoval:(_Bool)arg2;
- (id)_populateServices:(id *)arg1;
- (id)descriptionNonBlocking;
@property(readonly, copy) NSString *description;
@property(readonly, copy, nonatomic) NSArray *services;
@property(readonly, nonatomic, getter=isReachable) _Bool reachable;
@property(readonly, nonatomic, getter=isPaired) _Bool paired;
- (id)getConfiguredName;
- (id)initWithAccessory:(id)arg1 messageDispatcher:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDAccessoryBrowser : NSObject <HMDAccessoryManagerDelegate, HMMessageReceiver>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSUUID *_uuid;
    HMMessageDispatcher *_messageDispatcher;
    HMDAccessoryManager *_accessoryManager;
    unsigned long long _generationCounter;
}

@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) HMDAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(retain, nonatomic) HMMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)accessoryManager:(id)arg1 didRemoveNewAccessory:(id)arg2;
- (void)accessoryManager:(id)arg1 didFindNewAccessory:(id)arg2;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)_stopDiscoveringAccessories;
- (void)_startDiscoveringAccessories;
- (void)_handleRequestSearchForNewAccessories:(id)arg1;
- (void)_handleRequestFetchNewAccessories:(id)arg1;
- (void)_registerForMessages;
- (id)initWithMessageDispatcher:(id)arg1 accessoryManager:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDAccessoryManager : NSObject <HAPAccessoryServerBrowserDelegate, HAPAccessoryServerDelegate>
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMapTable *_delegates;
    NSMutableSet *_pairedAccessories;
    NSMutableSet *_unpairedAccessories;
    NSMapTable *_addAccessoryCompletionHandlersForAccessoryServers;
    NSHashTable *_removeAccessoryInProgressForHMDAccessories;
    NSMapTable *_pairingRetryTimersForAccessoryServers;
    NSMapTable *_retrievalCompletionTuplesForAccessories;
    NSMutableArray *_accessoryServerBrowsers;
    HAPAccessoryServerBrowserIP *_ipAccessoryServerBrowser;
    HAPAccessoryServerBrowserBTLE *_btleAccessoryServerBrowser;
    NSObject<OS_dispatch_source> *_reachabilityTimerForBTLE;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *reachabilityTimerForBTLE; // @synthesize reachabilityTimerForBTLE=_reachabilityTimerForBTLE;
@property(retain, nonatomic) HAPAccessoryServerBrowserBTLE *btleAccessoryServerBrowser; // @synthesize btleAccessoryServerBrowser=_btleAccessoryServerBrowser;
@property(retain, nonatomic) HAPAccessoryServerBrowserIP *ipAccessoryServerBrowser; // @synthesize ipAccessoryServerBrowser=_ipAccessoryServerBrowser;
@property(retain, nonatomic) NSMutableArray *accessoryServerBrowsers; // @synthesize accessoryServerBrowsers=_accessoryServerBrowsers;
@property(retain, nonatomic) NSMapTable *retrievalCompletionTuplesForAccessories; // @synthesize retrievalCompletionTuplesForAccessories=_retrievalCompletionTuplesForAccessories;
@property(retain, nonatomic) NSMapTable *pairingRetryTimersForAccessoryServers; // @synthesize pairingRetryTimersForAccessoryServers=_pairingRetryTimersForAccessoryServers;
@property(retain, nonatomic) NSHashTable *removeAccessoryInProgressForHMDAccessories; // @synthesize removeAccessoryInProgressForHMDAccessories=_removeAccessoryInProgressForHMDAccessories;
@property(retain, nonatomic) NSMapTable *addAccessoryCompletionHandlersForAccessoryServers; // @synthesize addAccessoryCompletionHandlersForAccessoryServers=_addAccessoryCompletionHandlersForAccessoryServers;
@property(retain, nonatomic) NSMutableSet *unpairedAccessories; // @synthesize unpairedAccessories=_unpairedAccessories;
@property(retain, nonatomic) NSMutableSet *pairedAccessories; // @synthesize pairedAccessories=_pairedAccessories;
@property(retain, nonatomic) NSMapTable *delegates; // @synthesize delegates=_delegates;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (_Bool)_isRetrievalInProgressForAccessory:(id)arg1;
- (id)_dequeueAllRetrievalCompletionTuplesForAccessory:(id)arg1;
- (void)_enqueueRetrievalCompletionTuple:(id)arg1 forAccessory:(id)arg2;
- (void)_retrieveHAPAccessoryForHMDAccessory:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)retrieveHAPAccessoryForHMDAccessory:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_disablePairedAccessoriesForServer:(id)arg1 error:(id)arg2;
- (void)_removeAccessoriesForPrimaryAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_updatePairedAccessoriesForServer:(id)arg1;
- (id)_pairedAccessoriesForServer:(id)arg1;
- (void)_createPairedAccessoriesForUnpairedAccessory:(id)arg1 server:(id)arg2;
- (id)_unpairedAccessoryForServer:(id)arg1;
- (void)accessoryServer:(id)arg1 didUpdateValuesForCharacteristics:(id)arg2;
- (void)accessoryServer:(id)arg1 isBlockedWithCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)_accessoryServerIsBlocked:(id)arg1;
- (void)accessoryServer:(id)arg1 didDiscoverAccessoriesWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didStopPairingWithError:(id)arg2;
- (void)accessoryServer:(id)arg1 didReceiveBadPasswordThrottleAttemptsWithDelay:(long long)arg2;
- (void)accessoryServer:(id)arg1 promptUserForPasswordWithType:(unsigned long long)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFailToDiscoverAccessoryServerWithIdentifier:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didStopDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didStartDiscoveringWithError:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didRemoveAccessoryServer:(id)arg2;
- (void)accessoryServerBrowser:(id)arg1 didFindAccessoryServer:(id)arg2;
- (void)removePairingOnPrimaryAccessory:(id)arg1 forController:(id)arg2 publicKey:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)addPairingOnPrimaryAccessory:(id)arg1 forController:(id)arg2 publicKey:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)_updatePairingRetryTimerForServer:(id)arg1 delay:(long long)arg2;
- (void)_sendRemoveCompletionStatusForHMDAccessories:(id)arg1 withCompletion:(CDUnknownBlockType)arg2 error:(id)arg3;
- (void)_sendPairingCompletionStatusForServer:(id)arg1 accessories:(id)arg2 error:(id)arg3;
- (void)accessoryServer:(id)arg1 requestUserPermissionForUnauthenticatedAccessory:(id)arg2;
- (void)_promptForPairingPasswordForServer:(id)arg1;
- (void)_removeReachableAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_removeAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)removeAccessory:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_pairAccessory:(id)arg1 home:(id)arg2 password:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)pairAccessory:(id)arg1 home:(id)arg2 password:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_setBTLEPowerChangeCompletionHandler;
- (void)_notifyDelegatesOfPairedAccessories:(id)arg1 removedFromBridgeAccessory:(id)arg2;
- (void)_notifyDelegatesOfPairedAccessories:(id)arg1 addedToBridgeAccessory:(id)arg2;
- (void)_notifyDelegatesOfRemovedNewAccessory:(id)arg1;
- (void)_notifyDelegatesOfNewAccessory:(id)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1 queue:(id)arg2;
- (void)btleAccessoryReachabilityProbeTimer:(_Bool)arg1;
- (void)_stopDiscoveringAccessories;
- (void)stopDiscoveringAccessories;
- (void)_startDiscoveringAccessories;
- (void)startDiscoveringAccessories;
- (void)_startDiscoveringPairedAccessories;
- (void)addPairedAccessories:(id)arg1;
- (void)resetConfiguration;
- (void)_removeUnpairedAccessory:(id)arg1;
- (id)allUnpairedAccessories;
- (id)allPairedAccessories;
- (id)accessoryWithUUID:(id)arg1;
- (id)initWithPairedAccessories:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDAccessoryRetrievalCompletionTuple : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _completion;
}

+ (id)tupleWithQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;

@end

@interface HMDActionSet : NSObject <HMMessageReceiver, NSSecureCoding>
{
    _Bool _executionInProgress;
    NSString *_name;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMMessageDispatcher *_msgDispatcher;
    HMDHome *_home;
    NSMutableArray *_currentActions;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool executionInProgress; // @synthesize executionInProgress=_executionInProgress;
@property(retain, nonatomic) NSMutableArray *currentActions; // @synthesize currentActions=_currentActions;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)_execute:(CDUnknownBlockType)arg1;
- (id)_generateOverallError:(id)arg1;
- (void)_handleReplaceActionValueRequest:(id)arg1;
- (void)_handleRenameRequest:(id)arg1;
- (void)_handleRemoveActionRequest:(id)arg1;
- (void)_removeAction:(id)arg1 message:(id)arg2;
- (void)_handleAddActionRequest:(id)arg1;
- (void)_registerForMessages;
- (id)actionWithUUID:(id)arg1;
- (void)fixupActionsForReplacementAccessory:(id)arg1;
- (void)removeAccessory:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) NSArray *actions;
- (void)configure:(id)arg1 queue:(id)arg2;
- (void)removeActionForCharacteristic:(id)arg1;
- (void)removeService:(id)arg1;
- (void)executeWithTriggerSource:(id)arg1;
- (void)execute:(id)arg1;
- (id)initWithName:(id)arg1 uuid:(id)arg2 home:(id)arg3 queue:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDMessageFilter : NSObject
{
    NSString *_name;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
- (_Bool)shouldCloudSyncData;
- (void)resetConfiguration;
- (_Bool)acceptMessage:(id)arg1 target:(id)arg2 errorReason:(id *)arg3;
- (id)initWithName:(id)arg1;

@end

@interface HMDAdminEnforcementMessageFilter : HMDMessageFilter
{
    NSString *_localAdminName;
    NSMutableDictionary *_adminsOfHomes;
    NSMutableDictionary *_objectsContainedInHomes;
}

+ (_Bool)isWhitelistedMessage:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *objectsContainedInHomes; // @synthesize objectsContainedInHomes=_objectsContainedInHomes;
@property(retain, nonatomic) NSMutableDictionary *adminsOfHomes; // @synthesize adminsOfHomes=_adminsOfHomes;
@property(retain, nonatomic) NSString *localAdminName; // @synthesize localAdminName=_localAdminName;
- (void).cxx_destruct;
- (id)homeUUIDForTargetUUIDForMessage:(id)arg1;
- (_Bool)acceptMessage:(id)arg1 target:(id)arg2 errorReason:(id *)arg3;
- (id)localAdministratorName;
- (void)resetConfiguration;
- (void)addObjectWithUUID:(id)arg1 containedInHome:(id)arg2;
- (void)addHomeWithUUID:(id)arg1 administratorName:(id)arg2;
- (id)initWithName:(id)arg1;

@end

@interface HMDApplicationStateMonitor : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    BKSApplicationStateMonitor *_bkAppStateMonitor;
    CDUnknownBlockType _notificationHandler;
    NSObject<OS_dispatch_queue> *_notificationQueue;
}

+ (id)applicationStateDescription:(unsigned long long)arg1;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue; // @synthesize notificationQueue=_notificationQueue;
@property(copy, nonatomic) CDUnknownBlockType notificationHandler; // @synthesize notificationHandler=_notificationHandler;
@property(retain, nonatomic) BKSApplicationStateMonitor *bkAppStateMonitor; // @synthesize bkAppStateMonitor=_bkAppStateMonitor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)handleAppStateChangedInfo:(id)arg1;
- (void)start;
- (void)setNotificationHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (id)init;

@end

@interface HMDBackgroundAppMessageFilter : HMDMessageFilter
{
    NSMutableSet *_pidOfAppsRunningInBackground;
}

+ (_Bool)isWhitelistedMessage:(id)arg1;
@property(retain, nonatomic) NSMutableSet *pidOfAppsRunningInBackground; // @synthesize pidOfAppsRunningInBackground=_pidOfAppsRunningInBackground;
- (void).cxx_destruct;
- (_Bool)acceptMessage:(id)arg1 target:(id)arg2 errorReason:(id *)arg3;
- (void)updateAppWithPid:(int)arg1 runningInBackground:(_Bool)arg2;
- (id)initWithName:(id)arg1;

@end

@interface HMDCharacteristic : NSObject <NSSecureCoding>
{
    _Bool _notificationEnabled;
    HMDAccessory *_accessory;
    HMDService *_service;
    NSData *_authorizationData;
    HAPCharacteristic *_hapCharacteristic;
    NSString *_characteristicType;
    NSNumber *_characteristicInstanceID;
    long long _characteristicProperties;
    HMDCharacteristicMetadata *_characteristicMetadata;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) HMDCharacteristicMetadata *characteristicMetadata; // @synthesize characteristicMetadata=_characteristicMetadata;
@property(nonatomic) long long characteristicProperties; // @synthesize characteristicProperties=_characteristicProperties;
@property(retain, nonatomic) NSNumber *characteristicInstanceID; // @synthesize characteristicInstanceID=_characteristicInstanceID;
@property(retain, nonatomic) NSString *characteristicType; // @synthesize characteristicType=_characteristicType;
@property(retain, nonatomic) HAPCharacteristic *hapCharacteristic; // @synthesize hapCharacteristic=_hapCharacteristic;
@property(copy, nonatomic) NSData *authorizationData; // @synthesize authorizationData=_authorizationData;
@property(nonatomic) _Bool notificationEnabled; // @synthesize notificationEnabled=_notificationEnabled;
@property(readonly, nonatomic) __weak HMDService *service; // @synthesize service=_service;
@property(readonly, nonatomic) __weak HMDAccessory *accessory; // @synthesize accessory=_accessory;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)validateValue:(id)arg1 outValue:(id *)arg2;
@property(readonly, nonatomic) HMDCharacteristicMetadata *metadata;
@property(readonly, copy, nonatomic) id value;
@property(readonly, nonatomic) long long properties;
@property(readonly, nonatomic) __weak HAPCharacteristic *characteristic;
@property(readonly, copy, nonatomic) NSNumber *instanceID;
@property(readonly, copy, nonatomic) NSString *type;
- (void)unconfigure;
- (id)initWithCharacteristic:(id)arg1 service:(id)arg2 accessory:(id)arg3;
- (void)configureWithCharacteristic:(id)arg1 service:(id)arg2 accessory:(id)arg3;

@end

@interface HMDCharacteristicMetadata : NSObject <NSSecureCoding>
{
    NSNumber *_minimumValue;
    NSNumber *_maximumValue;
    NSNumber *_stepValue;
    NSNumber *_maxLength;
    NSString *_format;
    NSString *_units;
    NSString *_manufacturerDescription;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)isValidMetadata:(id)arg1;
@property(readonly, copy, nonatomic) NSString *manufacturerDescription; // @synthesize manufacturerDescription=_manufacturerDescription;
@property(readonly, copy, nonatomic) NSString *units; // @synthesize units=_units;
@property(readonly, copy, nonatomic) NSString *format; // @synthesize format=_format;
@property(readonly, nonatomic) NSNumber *maxLength; // @synthesize maxLength=_maxLength;
@property(readonly, nonatomic) NSNumber *stepValue; // @synthesize stepValue=_stepValue;
@property(readonly, nonatomic) NSNumber *maximumValue; // @synthesize maximumValue=_maximumValue;
@property(readonly, nonatomic) NSNumber *minimumValue; // @synthesize minimumValue=_minimumValue;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithCharacteristicMetadata:(id)arg1;
- (void)configureWithCharacteristicMetadata:(id)arg1;

@end

@interface HMDCharacteristicResponseTuple : NSObject
{
    HMDCharacteristic *_characteristic;
    NSError *_error;
}

+ (id)tupleWithCharacteristic:(id)arg1 error:(id)arg2;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) HMDCharacteristic *characteristic; // @synthesize characteristic=_characteristic;
- (void).cxx_destruct;

@end

@interface HMDCharacteristicWriteAction : NSObject <NSSecureCoding>
{
    NSUUID *_uuid;
    HMDActionSet *_actionSet;
    HMDCharacteristic *_characteristic;
    id _targetValue;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) id targetValue; // @synthesize targetValue=_targetValue;
@property(readonly, nonatomic) __weak HMDCharacteristic *characteristic; // @synthesize characteristic=_characteristic;
@property(readonly, nonatomic) __weak HMDActionSet *actionSet; // @synthesize actionSet=_actionSet;
@property(readonly, copy, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)replaceCharacteristic:(id)arg1;
- (void)configure:(id)arg1 actionSet:(id)arg2;
- (id)initWithCharacteristic:(id)arg1 targetValue:(id)arg2;

@end

@interface HMDCharacteristicWriteRequestTuple : NSObject
{
    HMDCharacteristic *_characteristic;
    id _value;
}

+ (id)tupleWithCharacteristic:(id)arg1 value:(id)arg2;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic) HMDCharacteristic *characteristic; // @synthesize characteristic=_characteristic;
- (void).cxx_destruct;

@end

@interface HMDCloudDataSyncManager : NSObject <APSConnectionDelegate, HMMessageReceiver>
{
    _Bool _accountActive;
    _Bool _needConflictResolution;
    _Bool _cloudRecordExists;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    CKContainer *_container;
    CKDatabase *_database;
    CKRecordZone *_homeDataBlobRecordZone;
    CKRecordID *_homeDataBlobRecordID;
    CKSubscription *_homeDataBlobSubscription;
    NSData *_cloudServerTokenData;
    HMMessageDispatcher *_configSyncDispatcher;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_pendingFetchedRecords;
    CDUnknownBlockType _fetchCompletionHandler;
    NSObject<OS_dispatch_queue> *_clientCallbackQueue;
    NSString *_lastChangeTag;
    CKRecord *_homeDataRecord;
    NSObject<OS_dispatch_source> *_pollTimer;
    NSObject<OS_dispatch_source> *_controllerKeyPollTimer;
    APSConnection *_pushConnection;
    CDUnknownBlockType _cloudDataDeletedNotificationHandler;
    CDUnknownBlockType _controllerKeyAvailableNotificationHandler;
    HMDCloudDataSyncStateFilter *_cloudDataSyncStateFilter;
    NSUUID *_uuid;
    HMMessageDispatcher *_msgDispatcher;
    HMDHomeManager *_homeManager;
}

@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) HMDCloudDataSyncStateFilter *cloudDataSyncStateFilter; // @synthesize cloudDataSyncStateFilter=_cloudDataSyncStateFilter;
@property(copy, nonatomic) CDUnknownBlockType controllerKeyAvailableNotificationHandler; // @synthesize controllerKeyAvailableNotificationHandler=_controllerKeyAvailableNotificationHandler;
@property(copy, nonatomic) CDUnknownBlockType cloudDataDeletedNotificationHandler; // @synthesize cloudDataDeletedNotificationHandler=_cloudDataDeletedNotificationHandler;
@property(retain, nonatomic) APSConnection *pushConnection; // @synthesize pushConnection=_pushConnection;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *controllerKeyPollTimer; // @synthesize controllerKeyPollTimer=_controllerKeyPollTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *pollTimer; // @synthesize pollTimer=_pollTimer;
@property(retain, nonatomic) CKRecord *homeDataRecord; // @synthesize homeDataRecord=_homeDataRecord;
@property(nonatomic) _Bool cloudRecordExists; // @synthesize cloudRecordExists=_cloudRecordExists;
@property(nonatomic) _Bool needConflictResolution; // @synthesize needConflictResolution=_needConflictResolution;
@property(retain, nonatomic) NSString *lastChangeTag; // @synthesize lastChangeTag=_lastChangeTag;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientCallbackQueue; // @synthesize clientCallbackQueue=_clientCallbackQueue;
@property(copy, nonatomic) CDUnknownBlockType fetchCompletionHandler; // @synthesize fetchCompletionHandler=_fetchCompletionHandler;
@property(retain, nonatomic) NSMutableArray *pendingFetchedRecords; // @synthesize pendingFetchedRecords=_pendingFetchedRecords;
@property(nonatomic) _Bool accountActive; // @synthesize accountActive=_accountActive;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) HMMessageDispatcher *configSyncDispatcher; // @synthesize configSyncDispatcher=_configSyncDispatcher;
@property(retain, nonatomic) NSData *cloudServerTokenData; // @synthesize cloudServerTokenData=_cloudServerTokenData;
@property(retain, nonatomic) CKSubscription *homeDataBlobSubscription; // @synthesize homeDataBlobSubscription=_homeDataBlobSubscription;
@property(retain, nonatomic) CKRecordID *homeDataBlobRecordID; // @synthesize homeDataBlobRecordID=_homeDataBlobRecordID;
@property(retain, nonatomic) CKRecordZone *homeDataBlobRecordZone; // @synthesize homeDataBlobRecordZone=_homeDataBlobRecordZone;
@property(retain, nonatomic) CKDatabase *database; // @synthesize database=_database;
@property(retain, nonatomic) CKContainer *container; // @synthesize container=_container;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (void)_registerForPushNotifications;
- (void)_setupSubscription;
- (_Bool)_isControllerKeyAvailable;
- (void)_stopControllerKeyPollTimer;
- (void)_startControllerKeyPollTimer;
- (void)_handleKeychainSyncStateChanged:(_Bool)arg1;
- (void)_handleKeychainSyncChanged:(id)arg1;
- (void)_stopFetchPollTimer;
- (void)_startFetchPollTimer;
- (void)_uploadHomeData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_handleFetchCompletedWithError:(id)arg1 serverToken:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_handleChangedRecordWithEncodedData:(id)arg1;
- (void)_fetchNewChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_fetchExistingRecord:(CDUnknownBlockType)arg1;
- (void)_updateCloudDataSyncFilterState:(_Bool)arg1;
- (void)_accountIsActive;
- (void)_createZoneAndFetchChanges:(CDUnknownBlockType)arg1;
- (void)_resetRecordState;
- (id)_changeTokenFromData:(id)arg1;
- (void)_handleAccountStatus:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2 error:(id)arg3;
- (void)_resetCloudDataForCurrentAccount:(CDUnknownBlockType)arg1;
- (id)convertCKErrorToHMError:(id)arg1;
- (void)resetCloudDataForCurrentAccount:(CDUnknownBlockType)arg1;
- (void)updateAccountStatusChanged:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)uploadHomeData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setControllerKeyAvailableNotificationBlock:(CDUnknownBlockType)arg1;
- (void)setCloudDataDeletedNotificationBlock:(CDUnknownBlockType)arg1;
- (void)setDataAvailableFromCloudCompletionBlock:(CDUnknownBlockType)arg1;
- (void)fetchCurrentAccountStateWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSData *serverTokenData;
- (void)_registerForMessages;
- (id)initWithCloudServerTokenData:(id)arg1 messageDispatcher:(id)arg2 cloudDataSyncStateFilter:(id)arg3 homeManager:(id)arg4 callbackQueue:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDCloudDataSyncStateFilter : HMDMessageFilter <HMMessageReceiver>
{
    _Bool _keychainSyncEnabled;
    _Bool _keychainSyncRequiredPopShown;
    _Bool _iCloudAccountActive;
    _Bool _cloudDataSyncCompleted;
    _Bool _serverTokenAvailable;
    int _circleNotificationToken;
    NSUUID *_uuid;
    HMMessageDispatcher *_msgDispatcher;
    long long _totalTransientPeerDevices;
    NSObject<OS_dispatch_source> *_popupTimer;
    long long _totalHomes;
}

+ (_Bool)isWhitelistedRemoteTransportMessage:(id)arg1;
@property(nonatomic) long long totalHomes; // @synthesize totalHomes=_totalHomes;
@property(nonatomic) _Bool serverTokenAvailable; // @synthesize serverTokenAvailable=_serverTokenAvailable;
@property(nonatomic) _Bool cloudDataSyncCompleted; // @synthesize cloudDataSyncCompleted=_cloudDataSyncCompleted;
@property(nonatomic) _Bool iCloudAccountActive; // @synthesize iCloudAccountActive=_iCloudAccountActive;
@property(nonatomic) _Bool keychainSyncRequiredPopShown; // @synthesize keychainSyncRequiredPopShown=_keychainSyncRequiredPopShown;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *popupTimer; // @synthesize popupTimer=_popupTimer;
@property(nonatomic) long long totalTransientPeerDevices; // @synthesize totalTransientPeerDevices=_totalTransientPeerDevices;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(nonatomic) _Bool keychainSyncEnabled; // @synthesize keychainSyncEnabled=_keychainSyncEnabled;
@property(nonatomic) int circleNotificationToken; // @synthesize circleNotificationToken=_circleNotificationToken;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (_Bool)shouldCloudSyncData;
- (void)resetConfiguration;
- (void)updateServerTokenAvailable:(_Bool)arg1;
- (void)updateCloudDataSyncState:(_Bool)arg1;
- (_Bool)acceptMessage:(id)arg1 target:(id)arg2 errorReason:(id *)arg3;
- (void)updateTotalHomes:(long long)arg1;
- (void)_stopPopupTimer;
- (void)_startPopupTimer;
- (void)_handleAccountStatusChanged:(id)arg1;
- (void)_handleCircleChangedNotification;
- (void)_handleRemoteAccessPeersFoundNotification:(id)arg1;
- (void)dealloc;
- (void)_registerForCircleChangeNotifications;
- (id)initWithName:(id)arg1 messageDispatcher:(id)arg2 totalTransientPeerDevices:(unsigned long long)arg3 serverTokenAvailable:(_Bool)arg4 totalHomes:(long long)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDConnectionProxy : NSObject <HMDaemonConnection>
{
    _Bool _ready;
    _Bool _activated;
    NSString *_clientName;
    NSXPCConnection *_xpcConnection;
    HMMessageDispatcher *_recvDispatcher;
    NSMutableSet *_pendingRequests;
    NSObject<OS_dispatch_group> *_activeMessageTracker;
    unsigned long long _activeMessageCount;
}

@property(nonatomic) unsigned long long activeMessageCount; // @synthesize activeMessageCount=_activeMessageCount;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *activeMessageTracker; // @synthesize activeMessageTracker=_activeMessageTracker;
@property(nonatomic) _Bool activated; // @synthesize activated=_activated;
@property(nonatomic) _Bool ready; // @synthesize ready=_ready;
@property(retain, nonatomic) NSMutableSet *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property(retain, nonatomic) HMMessageDispatcher *recvDispatcher; // @synthesize recvDispatcher=_recvDispatcher;
@property(nonatomic) __weak NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(retain, nonatomic) NSString *clientName; // @synthesize clientName=_clientName;
- (void).cxx_destruct;
- (_Bool)_checkForAuthorizationForMessage:(id)arg1 client:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)handleMessageWithName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)handleMessageWithName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4;
- (void)recheckinWithName:(id)arg1;
- (void)checkinWithName:(id)arg1 handleMessageWithName:(id)arg2 messageIdentifier:(id)arg3 messagePayload:(id)arg4 target:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (_Bool)shouldSendResponseForMessageIdentifier:(id)arg1;
- (void)deactivate;
- (void)activate;
- (id)remoteProxy;
- (int)clientPid;
- (id)name;
- (void)dealloc;
- (id)initWithConnection:(id)arg1 queue:(id)arg2 activeMessageTracker:(id)arg3 recvDispatcher:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDHome : NSObject <HMDAccessoryManagerDelegate, HMMessageReceiver, NSSecureCoding>
{
    NSString *_name;
    HMDHomeManager *_homeManager;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMMessageDispatcher *_msgDispatcher;
    HMDAccessoryManager *_accessoryManager;
    NSMutableArray *_rooms;
    NSMutableArray *_zones;
    NSMutableArray *_accessories;
    NSMutableArray *_services;
    NSMutableArray *_serviceGroups;
    NSMutableArray *_actionSets;
    NSMutableArray *_triggers;
    NSMutableArray *_users;
    HMDRoom *_roomForEntireHome;
    long long _lastKnownReachableIPAccessoryCount;
    long long _lastKnownReachableAccessoryCount;
    long long _configurationVersion;
    NSString *_administratorName;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)isObjectContainedInHome:(id)arg1;
@property(retain, nonatomic) NSString *administratorName; // @synthesize administratorName=_administratorName;
@property(nonatomic) long long configurationVersion; // @synthesize configurationVersion=_configurationVersion;
@property(nonatomic) long long lastKnownReachableAccessoryCount; // @synthesize lastKnownReachableAccessoryCount=_lastKnownReachableAccessoryCount;
@property(nonatomic) long long lastKnownReachableIPAccessoryCount; // @synthesize lastKnownReachableIPAccessoryCount=_lastKnownReachableIPAccessoryCount;
@property(retain, nonatomic) HMDRoom *roomForEntireHome; // @synthesize roomForEntireHome=_roomForEntireHome;
@property(retain, nonatomic) NSMutableArray *users; // @synthesize users=_users;
@property(retain, nonatomic) NSMutableArray *triggers; // @synthesize triggers=_triggers;
@property(retain, nonatomic) NSMutableArray *actionSets; // @synthesize actionSets=_actionSets;
@property(retain, nonatomic) NSMutableArray *serviceGroups; // @synthesize serviceGroups=_serviceGroups;
@property(retain, nonatomic) NSMutableArray *services; // @synthesize services=_services;
@property(retain, nonatomic) NSMutableArray *accessories; // @synthesize accessories=_accessories;
@property(retain, nonatomic) NSMutableArray *zones; // @synthesize zones=_zones;
@property(retain, nonatomic) NSMutableArray *rooms; // @synthesize rooms=_rooms;
@property(retain, nonatomic) HMDAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(nonatomic) __weak HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)accessoryManager:(id)arg1 didRemovePairedAccessories:(id)arg2 fromBridgeAccessory:(id)arg3;
- (void)accessoryManager:(id)arg1 didAddPairedAccessories:(id)arg2 toBridgeAccessory:(id)arg3;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (id)thisAdminUser;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_remoteAccessEnabled:(_Bool)arg1;
- (void)_handleMultipleCharacteristicRead:(id)arg1;
- (void)_readCharacteristicValues:(id)arg1 identifier:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_handleMultipleCharacteristicWrite:(id)arg1;
- (void)_writeCharacteristicValues:(id)arg1 identifier:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_notifyChangedCharacteristics:(id)arg1 identifier:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_notifyChangedCharacteristics:(id)arg1;
- (void)_handleUnblock:(id)arg1;
- (long long)reachableIPAccessories;
- (long long)reachableAccessories;
- (void)_reachabilityChangedForAccessory:(id)arg1 reachable:(_Bool)arg2;
- (void)_addPairingsForAccessories:(id)arg1 controllerName:(id)arg2 controllerPublicKey:(id)arg3;
- (void)_removePairingsForAccessories:(id)arg1 controllerName:(id)arg2 controllerPublicKey:(id)arg3;
- (void)_handleQueryUserPrivilege:(id)arg1;
- (void)_removeUser:(id)arg1 message:(id)arg2;
- (void)_handleRemoveUser:(id)arg1;
- (void)_performAddPairingForUser:(id)arg1 destination:(id)arg2 remotePeer:(_Bool)arg3 userPrivilege:(unsigned long long)arg4 controllerInfo:(id)arg5 identifier:(id)arg6 responseHandler:(CDUnknownBlockType)arg7;
- (void)performAddPairingForRemoteAccessPoint:(id)arg1 destination:(id)arg2 controllerInfo:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)_sendInviteRequestForUser:(id)arg1 userPrivilege:(unsigned long long)arg2 confirm:(_Bool)arg3 message:(id)arg4;
- (void)_addUser:(id)arg1 userPrivilege:(unsigned long long)arg2 confirm:(_Bool)arg3 message:(id)arg4;
- (void)_handleAddUser:(id)arg1;
- (void)_removeAdditionalUser:(id)arg1 fromAccessory:(id)arg2;
- (void)_removeAllUsersFromAccessory:(id)arg1;
- (void)_removeAllAccessoriesWithCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (void)_removeAccessories:(id)arg1 message:(id)arg2;
- (void)_removeService:(id)arg1;
- (void)_removeCharacteristic:(id)arg1;
- (void)_removeAccessoryWithUUID:(id)arg1 message:(id)arg2;
- (void)_handleRemoveAccessory:(id)arg1;
- (void)_handleRemoveAccessories:(id)arg1;
- (void)_addAdditionalUser:(id)arg1 toAccessories:(id)arg2;
- (void)_addAllUsersToAccessories:(id)arg1;
- (void)_addNewAccessories:(id)arg1 message:(id)arg2;
- (void)_handleAddAccessory:(id)arg1;
- (id)_addAccessory:(id)arg1 configurationApp:(id)arg2;
- (void)_handleRemoveTrigger:(id)arg1;
- (void)_handleAddTimerTrigger:(id)arg1;
- (void)_handleAddTrigger:(id)arg1;
- (void)_handleExecuteActionSet:(id)arg1;
- (void)_handleRemoveActionSet:(id)arg1;
- (void)_handleAddActionSet:(id)arg1;
- (void)_handleRemoveServiceGroup:(id)arg1;
- (void)_handleAddServiceGroup:(id)arg1;
- (void)_handleRemoveZone:(id)arg1;
- (void)_handleAddZone:(id)arg1;
- (void)_handleRemoveRoom:(id)arg1;
- (void)_handleAddRoom:(id)arg1;
- (void)_handleRename:(id)arg1;
- (void)_registerForMessages;
- (void)handleBackgroundTaskAgentJob:(id)arg1;
- (void)checkTimerTriggers;
- (void)notifyChangedCharacteristics:(id)arg1;
- (void)writeCharacteristicValues:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)reachabilityChangedForAccessory:(id)arg1 reachable:(_Bool)arg2;
- (void)notifySyncDataChanged;
- (id)replaceName:(id)arg1 withNewName:(id)arg2;
- (id)removeName:(id)arg1;
- (id)addName:(id)arg1;
- (void)removeAllAccessoriesWithCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (void)removeCharacteristic:(id)arg1;
- (void)removeService:(id)arg1;
- (void)reEvaluateTriggers;
- (id)serviceGroupWithUUID:(id)arg1;
- (id)serviceGroupWithName:(id)arg1;
- (id)triggerWithUUID:(id)arg1;
- (id)triggerWithName:(id)arg1;
- (id)actionSetWithUUID:(id)arg1;
- (id)actionSetWithName:(id)arg1;
- (id)zoneWithUUID:(id)arg1;
- (id)zoneWithName:(id)arg1;
- (id)accessoryWithUUID:(id)arg1;
- (id)accessoryWithName:(id)arg1;
- (id)roomWithUUID:(id)arg1;
- (id)roomWithName:(id)arg1;
- (void)saveWithReason:(id)arg1 information:(id)arg2 postSyncNotification:(_Bool)arg3;
- (void)saveWithReason:(id)arg1 postSyncNotification:(_Bool)arg2;
- (void)addAccessoryToCollection:(id)arg1;
- (void)remoteAccessEnabled:(_Bool)arg1;
- (void)checkReachabilityAndSpinRemoteAccess;
- (void)notifyNewRemotePeersFound:(_Bool)arg1 remoteUsersRemoved:(id)arg2;
- (void)_checkRemoteAccess;
- (void)invalidate;
- (void)configure:(id)arg1;
- (void)takeOwnershipOfTriggers:(id)arg1 triggersToReactivate:(id)arg2;
- (void)fixupReplacementAccessories:(id)arg1 commonAccessories:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)initWithName:(id)arg1 uuid:(id)arg2 entireRoomUUID:(id)arg3 administratorName:(id)arg4 homeManager:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDHomeManager : NSObject <HMMessageReceiver, IDSServiceDelegate, HMDAccessoryManagerDelegate>
{
    _Bool _accountActive;
    _Bool _accountStatusFailedDueToNetworkFailure;
    _Bool _uploadToCloudIsPending;
    _Bool _lastAnswerForShouldCloudSyncData;
    NSUUID *_uuid;
    HMDPersistentStore *_store;
    NSMutableArray *_homes;
    NSMutableDictionary *_homeNames;
    NSUUID *_primaryHomeUUID;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMMessageDispatcher *_messageDispatcher;
    HMDIDSMessageDispatcher *_idsMessageDispatcher;
    HMDAccessoryManager *_accessoryManager;
    NSMutableSet *_unassociatedRemotePeers;
    NSMutableDictionary *_associatedRemotePeers;
    unsigned long long _generationCounter;
    HMDNameValidator *_nameValidator;
    NSObject<OS_dispatch_source> *_accessoryFinderTimer;
    NSMutableArray *_pendingResponsesForAccessoryFinder;
    NSMutableArray *_pendingAccessoryTransactions;
    HMDPowerManager *_powerManager;
    HMDCloudDataSyncManager *_cloudDataSyncManager;
    struct __SCNetworkReachability *_reachability;
    long long _networkConnectionAvailable;
    NSMutableDictionary *_pendingDataSyncAcks;
    NSMutableDictionary *_pendingRemoteSessions;
    HMDMessageFilterChain *_msgFilterChain;
    NSMutableSet *_pendingResponsesForRemoteAccessSetup;
    HMDIdentityRegistry *_identityRegistry;
    NSObject<OS_dispatch_source> *_cloudUploadTimer;
    HMDCloudDataSyncStateFilter *_cloudDataSyncStateFilter;
}

+ (id)getCurrentUserID;
+ (id)activeAccountIdentifier;
+ (_Bool)shouldDisableCloudDataSync;
@property(retain, nonatomic) HMDCloudDataSyncStateFilter *cloudDataSyncStateFilter; // @synthesize cloudDataSyncStateFilter=_cloudDataSyncStateFilter;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *cloudUploadTimer; // @synthesize cloudUploadTimer=_cloudUploadTimer;
@property(nonatomic) _Bool lastAnswerForShouldCloudSyncData; // @synthesize lastAnswerForShouldCloudSyncData=_lastAnswerForShouldCloudSyncData;
@property(nonatomic) _Bool uploadToCloudIsPending; // @synthesize uploadToCloudIsPending=_uploadToCloudIsPending;
@property(nonatomic) _Bool accountStatusFailedDueToNetworkFailure; // @synthesize accountStatusFailedDueToNetworkFailure=_accountStatusFailedDueToNetworkFailure;
@property(nonatomic) _Bool accountActive; // @synthesize accountActive=_accountActive;
@property(retain, nonatomic) HMDIdentityRegistry *identityRegistry; // @synthesize identityRegistry=_identityRegistry;
@property(retain, nonatomic) NSMutableSet *pendingResponsesForRemoteAccessSetup; // @synthesize pendingResponsesForRemoteAccessSetup=_pendingResponsesForRemoteAccessSetup;
@property(retain, nonatomic) HMDMessageFilterChain *msgFilterChain; // @synthesize msgFilterChain=_msgFilterChain;
@property(retain, nonatomic) NSMutableDictionary *pendingRemoteSessions; // @synthesize pendingRemoteSessions=_pendingRemoteSessions;
@property(retain, nonatomic) NSMutableDictionary *pendingDataSyncAcks; // @synthesize pendingDataSyncAcks=_pendingDataSyncAcks;
@property(nonatomic) long long networkConnectionAvailable; // @synthesize networkConnectionAvailable=_networkConnectionAvailable;
@property(nonatomic) struct __SCNetworkReachability *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) HMDCloudDataSyncManager *cloudDataSyncManager; // @synthesize cloudDataSyncManager=_cloudDataSyncManager;
@property(retain, nonatomic) HMDPowerManager *powerManager; // @synthesize powerManager=_powerManager;
@property(retain, nonatomic) NSMutableArray *pendingAccessoryTransactions; // @synthesize pendingAccessoryTransactions=_pendingAccessoryTransactions;
@property(retain, nonatomic) NSMutableArray *pendingResponsesForAccessoryFinder; // @synthesize pendingResponsesForAccessoryFinder=_pendingResponsesForAccessoryFinder;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *accessoryFinderTimer; // @synthesize accessoryFinderTimer=_accessoryFinderTimer;
@property(retain, nonatomic) HMDNameValidator *nameValidator; // @synthesize nameValidator=_nameValidator;
@property(nonatomic) unsigned long long generationCounter; // @synthesize generationCounter=_generationCounter;
@property(retain, nonatomic) NSMutableDictionary *associatedRemotePeers; // @synthesize associatedRemotePeers=_associatedRemotePeers;
@property(retain, nonatomic) NSMutableSet *unassociatedRemotePeers; // @synthesize unassociatedRemotePeers=_unassociatedRemotePeers;
@property(retain, nonatomic) HMDAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(retain, nonatomic) HMDIDSMessageDispatcher *idsMessageDispatcher; // @synthesize idsMessageDispatcher=_idsMessageDispatcher;
@property(retain, nonatomic) HMMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSUUID *primaryHomeUUID; // @synthesize primaryHomeUUID=_primaryHomeUUID;
@property(retain, nonatomic) NSMutableDictionary *homeNames; // @synthesize homeNames=_homeNames;
@property(retain, nonatomic) NSMutableArray *homes; // @synthesize homes=_homes;
@property(retain, nonatomic) HMDPersistentStore *store; // @synthesize store=_store;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (void)accessoryManager:(id)arg1 didRemovePairedAccessories:(id)arg2 fromBridgeAccessory:(id)arg3;
- (void)accessoryManager:(id)arg1 didAddPairedAccessories:(id)arg2 toBridgeAccessory:(id)arg3;
- (void)accessoryManager:(id)arg1 didRemoveNewAccessory:(id)arg2;
- (void)accessoryManager:(id)arg1 didFindNewAccessory:(id)arg2;
- (void)_postiCloudSigninState:(_Bool)arg1;
- (void)_teardownRemoteAccessForHome:(id)arg1;
- (void)_handlePrimaryAccountDeleted:(id)arg1;
- (void)_handlePrimaryAccountModified:(id)arg1;
- (void)_handleLogControl:(id)arg1;
- (void)_handleRemoteSessionTornDown:(id)arg1;
- (void)_electRemoteAccessPeerForHome:(id)arg1;
- (void)_addPairingForRemoteAccessPoint:(id)arg1 destination:(id)arg2 controllerInfo:(id)arg3 forHome:(id)arg4;
- (void)_autoAddUser:(id)arg1 destination:(id)arg2 forHome:(id)arg3;
- (void)_findRemotePeerContainingAccessories:(id)arg1 forHome:(id)arg2;
- (void)_accessoriesAreLocallyReachableOnTransientDevice:(_Bool)arg1 forHome:(id)arg2;
- (id)_accessoryIdentifiersForHome:(id)arg1;
- (void)_removeFromUnassociatedPeers:(id)arg1;
- (void)_checkForRemotePeers;
- (void)_handleRemoteAccessPeersFoundNotification:(id)arg1;
- (void)_handleAreYouAtHome:(id)arg1;
- (void)_handleControllerKeyAvailable;
- (_Bool)_eraseLocalHomeConfiguration:(_Bool)arg1;
- (void)_eraseConfigurationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_handleResetConfiguration:(id)arg1;
- (void)_handleHomeDataSync:(id)arg1;
- (void)_handleUserRemoved:(id)arg1;
- (void)_handleResetHome:(id)arg1;
- (void)_removeAllUsersOfHome:(id)arg1;
- (_Bool)isThisDeviceAdminOfHome:(id)arg1;
- (void)_sendUserRemoved:(id)arg1 fromHome:(id)arg2 pairingUsername:(id)arg3;
- (void)_sendUserAdded:(id)arg1 destination:(id)arg2 toHome:(id)arg3;
- (void)_acceptHomeInvite:(id)arg1;
- (void)_handleAccessHomeInvite:(id)arg1;
- (void)_handleElectDeviceForIDSSession:(id)arg1;
- (void)_handleAddRemoteAccessRequest:(id)arg1;
- (void)_handleDoYouSeeUnpairedAccessories:(id)arg1;
- (_Bool)_findAnyAccessoryWithIdentities:(id)arg1 inAccessories:(id)arg2;
- (void)_startScanningForAccessories:(id)arg1;
- (void)_processAnyPendingRequestsForRemoteAccess:(_Bool)arg1;
- (void)_cancelAccessoryFinderTimer;
- (void)_startAccessoryFinderTimerExpired;
- (void)_startAccessoryFinderTimer;
- (void)_sendInviteRequestToUser:(id)arg1 forHome:(id)arg2 confirm:(_Bool)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_handleRequestSubmitAWDMetric:(id)arg1;
- (void)_handleRequestIsUserUsingHomeKit:(id)arg1;
- (void)_handleRequestSetPrimaryHome:(id)arg1;
- (void)_handleRequestRemoveHome:(id)arg1;
- (void)_removeHome:(id)arg1 withMessage:(id)arg2;
- (void)_handleRequestAddHome:(id)arg1;
- (void)notifyPrimaryHomeUpdated:(id)arg1;
- (void)_handleRequestFetchHomeConfiguration:(id)arg1;
- (void)_monitorReachability;
- (void)_registerForMessages;
- (void)_postHomesDidUpdateNotification;
- (void)postHomesDidUpdateNotification;
- (void)_mergeHomeDataWithRemoteHomes:(id)arg1 remotePrimaryHome:(id)arg2 remoteAccessories:(id)arg3 needConflictResolution:(_Bool)arg4 idsDataSync:(_Bool)arg5;
- (void)_suspendXPCConnectionAndMergeRemoteHomes:(id)arg1 remotePrimaryHome:(id)arg2 remoteAccessories:(id)arg3 needConflictResolution:(_Bool)arg4 idsDataSync:(_Bool)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)_handleDataFromCloudWithHomes:(id)arg1 primaryHome:(id)arg2 accessories:(id)arg3 needConflictResolution:(_Bool)arg4;
- (id)_filterAccessories:(id)arg1 inHome:(id)arg2;
- (id)_filterAccessories:(id)arg1 withUUIDs:(id)arg2;
- (void)identifiersOfAccessoriesFromLocalAccessoryTransactions:(id *)arg1 accessoriesRemoved:(id *)arg2;
- (id)identifiersOfAccessories:(id)arg1;
- (void)_updateCloudDataSyncWithAccountState:(_Bool)arg1;
- (void)_fetchDataFromCloud;
- (void)_configureHomes:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)handleBackgroundTaskAgentJob:(const char *)arg1 forHomeWithUUID:(id)arg2;
- (void)checkTimerTriggersForHomes;
- (void)accessoriesAreLocallyReachableOnTransientDevice:(_Bool)arg1 forHome:(id)arg2;
- (void)notifySyncDataChanged;
- (id)replaceName:(id)arg1 withNewName:(id)arg2 inNamespaces:(id)arg3;
- (id)removeName:(id)arg1 namespace:(id)arg2;
- (id)addName:(id)arg1 namespace:(id)arg2;
- (id)_homeWithUUID:(id)arg1;
- (id)_homeWithName:(id)arg1;
- (void)electDeviceForUser:(id)arg1 destination:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)sendUserRemoved:(id)arg1 fromHome:(id)arg2 pairingUsername:(id)arg3;
- (void)sendUserAdded:(id)arg1 destination:(id)arg2 toHome:(id)arg3;
- (void)sendInviteRequestToUser:(id)arg1 forHome:(id)arg2 confirm:(_Bool)arg3 queue:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_handleAccountStatusDetermined:(id)arg1;
- (void)_stopUploadTimer;
- (void)_startUploadTimer;
- (void)_uploadHomeConfigToCloud;
- (void)_pushChangesToCloud;
- (void)_removePendingDataSyncAcksForUser:(id)arg1 forHome:(id)arg2;
- (void)_addPendingDataSyncAcksForUser:(id)arg1 forHome:(id)arg2;
- (void)_pushChangesForHome:(id)arg1 toRegularUsersOfHome:(id)arg2;
- (void)_pushChangesForHome:(id)arg1 toRemoteDevicesOnSameAccount:(id)arg2;
- (void)_pushChangesToUsers:(id)arg1 forHome:(id)arg2;
- (void)_pushChangesToUsersThatHaveNotAcknowledged;
- (void)_pushChangesToAllUsersOfAllHomes;
- (_Bool)doesSaveReasonAffectOnlyLocalData:(id)arg1;
- (void)_saveWithReason:(id)arg1 postSyncNotification:(_Bool)arg2;
- (void)_saveWithReason:(id)arg1 information:(id)arg2 postSyncNotification:(_Bool)arg3;
- (void)saveWithReason:(id)arg1 information:(id)arg2 postSyncNotification:(_Bool)arg3;
- (void)saveWithReason:(id)arg1 postSyncNotification:(_Bool)arg2;
- (void)saveRequestFromHome:(id)arg1 reason:(id)arg2 information:(id)arg3 postSyncNotification:(_Bool)arg4;
- (void)_saveToPersistentStore;
- (id)initWithMessageDispatcher:(id)arg1 idsMessageDispatcher:(id)arg2 accessoryManager:(id)arg3 messageFilterChain:(id)arg4 homes:(id)arg5 primaryHome:(id)arg6 identityRegistry:(id)arg7 store:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMMessageDispatcher : NSObject
{
    _Bool _remoteSource;
    id <HMMessageTransport> _transport;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_notificationHandlers;
}

@property(nonatomic, getter=isRemoteSource) _Bool remoteSource; // @synthesize remoteSource=_remoteSource;
@property(retain, nonatomic) NSMutableDictionary *notificationHandlers; // @synthesize notificationHandlers=_notificationHandlers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) __weak id <HMMessageTransport> transport; // @synthesize transport=_transport;
- (void).cxx_destruct;
- (void)dispatchMessage:(id)arg1 target:(id)arg2;
- (void)unregisterForForMessage:(id)arg1 receiver:(id)arg2;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 messageHandler:(CDUnknownBlockType)arg3;
- (void)_sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 target:(id)arg2 andInvokeCompletionHandler:(CDUnknownBlockType)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 target:(id)arg2;
- (id)initWithTransport:(id)arg1;

@end

@interface HMDIDSMessageDispatcher : HMMessageDispatcher
{
    HMMessageDispatcher *_recvDispatcher;
    NSMutableDictionary *_remoteGateways;
    HMDMessageFilterChain *_msgFilterChain;
    HMDAdminEnforcementMessageFilter *_adminMsgFilter;
    NSMutableDictionary *_activeClientSecureSessions;
    NSMutableDictionary *_activeServerSecureSessions;
    HMDIdentityRegistry *_identityRegistry;
    HMDNotificationRelay *_notificationRelay;
    HMMessageDispatcher *_notificationDispatcher;
}

+ (_Bool)isWhitelistedLocalMessage:(id)arg1;
+ (id)whitelistedCommands;
@property(retain, nonatomic) HMMessageDispatcher *notificationDispatcher; // @synthesize notificationDispatcher=_notificationDispatcher;
@property(retain, nonatomic) HMDNotificationRelay *notificationRelay; // @synthesize notificationRelay=_notificationRelay;
@property(retain, nonatomic) HMDIdentityRegistry *identityRegistry; // @synthesize identityRegistry=_identityRegistry;
@property(retain, nonatomic) NSMutableDictionary *activeServerSecureSessions; // @synthesize activeServerSecureSessions=_activeServerSecureSessions;
@property(retain, nonatomic) NSMutableDictionary *activeClientSecureSessions; // @synthesize activeClientSecureSessions=_activeClientSecureSessions;
@property(retain, nonatomic) HMDAdminEnforcementMessageFilter *adminMsgFilter; // @synthesize adminMsgFilter=_adminMsgFilter;
@property(retain, nonatomic) HMDMessageFilterChain *msgFilterChain; // @synthesize msgFilterChain=_msgFilterChain;
@property(retain, nonatomic) NSMutableDictionary *remoteGateways; // @synthesize remoteGateways=_remoteGateways;
@property(retain, nonatomic) HMMessageDispatcher *recvDispatcher; // @synthesize recvDispatcher=_recvDispatcher;
- (void).cxx_destruct;
- (void)_handleSecureClientMessage:(id)arg1 fromID:(id)arg2;
- (void)_handleSecureServerMessage:(id)arg1 fromID:(id)arg2;
- (void)dispatchMessage:(id)arg1 target:(id)arg2;
- (void)unregisterForForMessage:(id)arg1 receiver:(id)arg2;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 messageHandler:(CDUnknownBlockType)arg3;
- (void)_setRemoteAccessPeer:(id)arg1 forHome:(id)arg2 sendNotification:(_Bool)arg3;
- (void)_sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseQueue:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)_sendSecureMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseQueue:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)electDeviceForUser:(id)arg1 destination:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)configureNotificationDispatcher:(id)arg1;
- (void)setRemoteAccessPeer:(id)arg1 forHome:(id)arg2;
- (void)sendSecureMessage:(id)arg1 target:(id)arg2 userID:(id)arg3 destination:(id)arg4 responseQueue:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (void)sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3 responseQueue:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)sendMessage:(id)arg1 target:(id)arg2 destination:(id)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 andInvokeCompletionHandler:(CDUnknownBlockType)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 target:(id)arg2;
@property(readonly, nonatomic) NSArray *transientDevices;
@property(readonly, nonatomic) NSArray *residentDevices;
- (id)initWithIDSTransport:(id)arg1 messageFilterChain:(id)arg2 identityRegistry:(id)arg3 notificationRelayDispatcher:(id)arg4;

@end

@interface HMDIDSMessageTransport : NSObject <IDSServiceDelegate, HMMessageTransport, HMIDSMessageTransport>
{
    IDSService *_idsService;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_pendingResponses;
    NSMutableDictionary *_pendingSentMessages;
    NSMutableDictionary *_pendingResponseTimers;
    HMMessageDispatcher *_messageDispatcher;
    NSMutableSet *_peerTransientDeviceAddresses;
    NSMutableSet *_peerResidentDeviceAddresses;
}

+ (void)messageElementsFromDictionary:(id)arg1 messageName:(id *)arg2 messageIdentifier:(id *)arg3 messagePayload:(id *)arg4 target:(id *)arg5 transactionID:(id *)arg6 isRequest:(_Bool *)arg7 isResponse:(_Bool *)arg8 isNotification:(_Bool *)arg9;
+ (id)dictionaryForMessageName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4 transactionID:(id)arg5 msgType:(unsigned long long)arg6;
+ (id)idsMessageTypeDescription:(unsigned long long)arg1;
@property(retain, nonatomic) NSMutableSet *peerResidentDeviceAddresses; // @synthesize peerResidentDeviceAddresses=_peerResidentDeviceAddresses;
@property(retain, nonatomic) NSMutableSet *peerTransientDeviceAddresses; // @synthesize peerTransientDeviceAddresses=_peerTransientDeviceAddresses;
@property(nonatomic) __weak HMMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) NSMutableDictionary *pendingResponseTimers; // @synthesize pendingResponseTimers=_pendingResponseTimers;
@property(retain, nonatomic) NSMutableDictionary *pendingSentMessages; // @synthesize pendingSentMessages=_pendingSentMessages;
@property(retain, nonatomic) NSMutableDictionary *pendingResponses; // @synthesize pendingResponses=_pendingResponses;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) IDSService *idsService; // @synthesize idsService=_idsService;
- (void).cxx_destruct;
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;
- (void)service:(id)arg1 activeAccountsChanged:(id)arg2;
- (void)service:(id)arg1 devicesChanged:(id)arg2;
- (void)service:(id)arg1 account:(id)arg2 incomingMessage:(id)arg3 fromID:(id)arg4;
- (void)_removePendingResponseTimerForTransaction:(id)arg1;
- (void)_startPendingResponseTimer:(id)arg1 identifier:(id)arg2;
- (void)handleMessageWithName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4 destination:(id)arg5 responseHandler:(CDUnknownBlockType)arg6;
- (void)handleMessageWithName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4 destination:(id)arg5;
- (id)sendMessage:(id)arg1 destinations:(id)arg2 msgType:(unsigned long long)arg3 error:(id *)arg4;
- (void)handleMessageWithName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
- (void)handleMessageWithName:(id)arg1 messageIdentifier:(id)arg2 messagePayload:(id)arg3 target:(id)arg4;
- (void)updatePeerDeviceAddresses:(id)arg1;
- (void)configure:(id)arg1;
- (id)transientDevices;
- (id)residentDevices;
- (id)initWithIDSService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDIdentityRegistry : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_registry;
}

@property(retain, nonatomic) NSMutableDictionary *registry; // @synthesize registry=_registry;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)clear;
- (id)publicKeyForIdentifier:(id)arg1;
- (void)deregisterPublicKeyForIdentifier:(id)arg1;
- (void)registerPublicKey:(id)arg1 forIdentifier:(id)arg2;
- (id)init;

@end

@interface HMDKeyedRemoteArchiver : NSObject
{
    NSKeyedArchiver *_archiver;
    NSString *_transportType;
}

@property(retain, nonatomic) NSString *transportType; // @synthesize transportType=_transportType;
@property(retain, nonatomic) NSKeyedArchiver *archiver; // @synthesize archiver=_archiver;
- (void).cxx_destruct;
- (void)finishEncoding;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initForWritingWithMutableData:(id)arg1 remoteDeviceIsOnSameAccount:(_Bool)arg2;

@end

@interface HMDKeyedXPCArchiver : NSObject
{
    NSKeyedArchiver *_archiver;
}

@property(retain, nonatomic) NSKeyedArchiver *archiver; // @synthesize archiver=_archiver;
- (void).cxx_destruct;
- (void)finishEncoding;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (void)_configure;
- (id)initForWritingWithMutableData:(id)arg1;

@end

@interface HMDMainDriver : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    HMDHomeManager *_homeManager;
    HMDAccessoryBrowser *_accessoryBrowser;
    HMDXpcServer *_xpcServer;
    HMDIDSMessageDispatcher *_messageDispatcher;
    HMMessageDispatcher *_notificationRelayDispatcher;
    HMDCloudDataSyncManager *_cloudDataSyncManager;
    HMDIDSMessageTransport *_idsTransport;
    HMDAccessoryManager *_accessoryManager;
    NSMutableArray *_unpairedAccessories;
    HMDMessageFilterChain *_msgFilterChain;
    HMDIdentityRegistry *_identityRegistry;
}

+ (id)driver;
@property(retain, nonatomic) HMDIdentityRegistry *identityRegistry; // @synthesize identityRegistry=_identityRegistry;
@property(retain, nonatomic) HMDMessageFilterChain *msgFilterChain; // @synthesize msgFilterChain=_msgFilterChain;
@property(retain, nonatomic) NSMutableArray *unpairedAccessories; // @synthesize unpairedAccessories=_unpairedAccessories;
@property(retain, nonatomic) HMDAccessoryManager *accessoryManager; // @synthesize accessoryManager=_accessoryManager;
@property(retain, nonatomic) HMDIDSMessageTransport *idsTransport; // @synthesize idsTransport=_idsTransport;
@property(retain, nonatomic) HMDCloudDataSyncManager *cloudDataSyncManager; // @synthesize cloudDataSyncManager=_cloudDataSyncManager;
@property(retain, nonatomic) HMMessageDispatcher *notificationRelayDispatcher; // @synthesize notificationRelayDispatcher=_notificationRelayDispatcher;
@property(retain, nonatomic) HMDIDSMessageDispatcher *messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(retain, nonatomic) HMDXpcServer *xpcServer; // @synthesize xpcServer=_xpcServer;
@property(retain, nonatomic) HMDAccessoryBrowser *accessoryBrowser; // @synthesize accessoryBrowser=_accessoryBrowser;
@property(retain, nonatomic) HMDHomeManager *homeManager; // @synthesize homeManager=_homeManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)start;
- (void)initBackgroundTaskAgentForTimerTriggers;
- (void)executeBTAJob:(const char *)arg1 withXPCDict:(id)arg2;
- (id)init;

@end

@interface HMDMessageFilterChain : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_messageFilters;
}

@property(retain, nonatomic) NSMutableArray *messageFilters; // @synthesize messageFilters=_messageFilters;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)_executeChainForMessage:(id)arg1 queue:(id)arg2 target:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)resetConfiguration;
- (void)removeMessageFilter:(id)arg1;
- (void)addMessageFilter:(id)arg1;
- (_Bool)shouldCloudSyncData;
- (void)executeChainForMessage:(id)arg1 queue:(id)arg2 target:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
@property(readonly, copy, nonatomic) NSArray *filters;
- (id)init;

@end

@interface HMDNameValidator : NSObject
{
    NSMutableDictionary *_namespaceList;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSUUID *_homeManagerUUID;
}

@property(retain, nonatomic) NSUUID *homeManagerUUID; // @synthesize homeManagerUUID=_homeManagerUUID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(copy, nonatomic) NSMutableDictionary *namespaceList; // @synthesize namespaceList=_namespaceList;
- (void).cxx_destruct;
- (id)replaceName:(id)arg1 withNewName:(id)arg2 inNamespaces:(id)arg3;
- (id)removeName:(id)arg1 namespace:(id)arg2;
- (id)addName:(id)arg1 namespace:(id)arg2;
- (id)removeNamespace:(id)arg1;
- (id)addNamespace:(id)arg1;
- (id)_replaceName:(id)arg1 withNewName:(id)arg2 inNamespaces:(id)arg3;
- (id)_removeName:(id)arg1 namespace:(id)arg2;
- (id)_addName:(id)arg1 namespace:(id)arg2;
- (id)_validateName:(id)arg1;
- (id)_despaceName:(id)arg1;
- (id)_removeNamespace:(id)arg1;
- (id)_addNamespace:(id)arg1;
- (id)initWithUUID:(id)arg1;

@end

@interface HMDNotificationRelay : NSObject <HMMessageReceiver>
{
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_pendingNotifications;
    HMDIDSMessageDispatcher *_msgDispatcher;
    HMMessageDispatcher *_notificationRelayDispatcher;
}

@property(nonatomic) __weak HMMessageDispatcher *notificationRelayDispatcher; // @synthesize notificationRelayDispatcher=_notificationRelayDispatcher;
@property(nonatomic) __weak HMDIDSMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSMutableDictionary *pendingNotifications; // @synthesize pendingNotifications=_pendingNotifications;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (void)_handleNotification:(id)arg1;
- (void)_registerForNotifications;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)_relayResponseForNotificationState:(id)arg1;
- (void)sendResponse:(id)arg1 error:(id)arg2 forMessage:(id)arg3;
- (void)removePendingNotification:(id)arg1;
- (void)addPendingNotification:(id)arg1 forDestination:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (id)initWithMessageDispatcher:(id)arg1 notificationRelayDispatcher:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDNotificationRelayState : NSObject
{
    NSString *_destination;
    NSObject<OS_dispatch_queue> *_responseQueue;
    CDUnknownBlockType _responseHandler;
    NSDictionary *_response;
    NSError *_responseError;
}

@property(retain, nonatomic) NSError *responseError; // @synthesize responseError=_responseError;
@property(retain, nonatomic) NSDictionary *response; // @synthesize response=_response;
@property(copy, nonatomic) CDUnknownBlockType responseHandler; // @synthesize responseHandler=_responseHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *responseQueue; // @synthesize responseQueue=_responseQueue;
@property(retain, nonatomic) NSString *destination; // @synthesize destination=_destination;
- (void).cxx_destruct;
- (id)initWithDestination:(id)arg1 responseQueue:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;

@end

@interface HMDPersistentStore : NSObject
{
}

+ (id)decryptDataWithControllerKey:(id)arg1 error:(id *)arg2;
+ (id)encryptDataWithControllerKey:(id)arg1 error:(id *)arg2;
+ (id)serializeHomes:(id)arg1 primaryHome:(id)arg2 accessories:(id)arg3 localStorage:(_Bool)arg4 remoteDeviceOnSameAccount:(_Bool)arg5;
+ (id)storeDirectoryPath;
+ (_Bool)deserializeHomes:(id *)arg1 primaryHome:(id *)arg2 accessories:(id *)arg3 fromData:(id)arg4;
+ (id)idsDataSyncJournalPath;
+ (id)transactionJournalPath;
+ (id)serverTokenPath;
+ (id)protectedStorePath;
+ (id)storePath;
- (id)unarchiveIDSDataSyncJournal;
- (_Bool)archiveIDSDataSyncJournal:(id)arg1;
- (id)unarchiveTransactionJournal;
- (_Bool)archiveTransactions:(id)arg1;
- (id)unarchiveServerTokenData:(_Bool *)arg1;
- (_Bool)archiveCloudServerTokenData:(id)arg1;
- (_Bool)archiveHomes:(id)arg1 primaryHome:(id)arg2 accessories:(id)arg3;
- (void)resetConfiguration;
- (id)unarchiveHomes:(id *)arg1 primaryHome:(id *)arg2 accessories:(id *)arg3;

@end

@interface HMDPowerManager : NSObject
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _ethernetActive;
    _Bool _networkAccessRequired;
    unsigned int _powerAssertion;
    struct __SCDynamicStore *_scStore;
    void *_scContext;
    _Bool _started;
}

@property(nonatomic, getter=isNetworkAccessRequired) _Bool networkAccessRequired; // @synthesize networkAccessRequired=_networkAccessRequired;
- (void).cxx_destruct;
- (void)_ensureNetworkInterfaceMonitorStopped;
- (int)_ensureNetworkInterfaceMonitorStarted;
- (void)_update;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)init;

@end

@interface HMDRoom : NSObject <HMMessageReceiver, NSSecureCoding>
{
    NSString *_name;
    NSUUID *_uuid;
    HMDHome *_home;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMMessageDispatcher *_msgDispatcher;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_handleRenameRequest:(id)arg1;
- (void)_registerForMessages;
- (void)configure:(id)arg1 queue:(id)arg2;
- (id)initWithName:(id)arg1 uuid:(id)arg2 home:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDSecureSession : NSObject
{
    _Bool _clientMode;
    NSUUID *_sessionID;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSString *_destination;
    HMDIDSMessageDispatcher *_msgDispatcher;
    HMMessageDispatcher *_notificationDispatcher;
    HAPRemoteSession *_hapRemoteSession;
    HMDIdentityRegistry *_identityRegistry;
    CDUnknownBlockType _stoppedNotificationHandler;
    HMDNotificationRelay *_notificationRelay;
}

@property(nonatomic) _Bool clientMode; // @synthesize clientMode=_clientMode;
@property(retain, nonatomic) HMDNotificationRelay *notificationRelay; // @synthesize notificationRelay=_notificationRelay;
@property(copy, nonatomic) CDUnknownBlockType stoppedNotificationHandler; // @synthesize stoppedNotificationHandler=_stoppedNotificationHandler;
@property(retain, nonatomic) HMDIdentityRegistry *identityRegistry; // @synthesize identityRegistry=_identityRegistry;
@property(retain, nonatomic) HAPRemoteSession *hapRemoteSession; // @synthesize hapRemoteSession=_hapRemoteSession;
@property(retain, nonatomic) HMMessageDispatcher *notificationDispatcher; // @synthesize notificationDispatcher=_notificationDispatcher;
@property(retain, nonatomic) HMDIDSMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSString *destination; // @synthesize destination=_destination;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy, nonatomic) NSUUID *sessionID; // @synthesize sessionID=_sessionID;
- (void).cxx_destruct;
- (void)handleSecureMessage:(id)arg1;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
@property(copy, nonatomic) CDUnknownBlockType sessionStoppedNotificationHandler;
- (void)stop;
- (void)_configureAsClient:(_Bool)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startServerAndInvokeOnQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startClientAndInvokeOnQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithDestination:(id)arg1 messageDispatcher:(id)arg2 notificationDispatcher:(id)arg3 identityRegistry:(id)arg4 notificationRelay:(id)arg5 clientMode:(_Bool)arg6 sessionID:(id)arg7;

@end

@interface HMDService : NSObject <NSSecureCoding>
{
    HMDAccessory *_accessory;
    NSString *_name;
    NSNumber *_instanceID;
    NSString *_associatedServiceType;
    NSArray *_characteristics;
    HAPService *_hapService;
    NSString *_serviceType;
    NSString *_providedName;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSString *providedName; // @synthesize providedName=_providedName;
@property(retain, nonatomic) NSString *serviceType; // @synthesize serviceType=_serviceType;
@property(retain, nonatomic) HAPService *hapService; // @synthesize hapService=_hapService;
@property(readonly, copy, nonatomic) NSArray *characteristics; // @synthesize characteristics=_characteristics;
@property(readonly, nonatomic) NSString *associatedServiceType; // @synthesize associatedServiceType=_associatedServiceType;
@property(copy, nonatomic) NSNumber *instanceID; // @synthesize instanceID=_instanceID;
@property(copy, nonatomic, getter=getName) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) __weak HMDAccessory *accessory; // @synthesize accessory=_accessory;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)getConfiguredName;
- (id)updateName:(id)arg1;
- (_Bool)updateAssociatedServiceType:(id)arg1 error:(id *)arg2;
- (id)findCharacteristicWithType:(id)arg1;
- (id)findCharacteristic:(id)arg1;
@property(readonly, copy, nonatomic) NSString *type;
- (id)initWithService:(id)arg1 accessory:(id)arg2;
- (void)unconfigure;
- (id)configureWithService:(id)arg1 accessory:(id)arg2;

@end

@interface HMDServiceGroup : NSObject <HMMessageReceiver, NSSecureCoding>
{
    NSString *_name;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_services;
    HMDHome *_home;
    HMMessageDispatcher *_msgDispatcher;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
@property(retain, nonatomic) NSMutableArray *services; // @synthesize services=_services;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)_handleRemoveServiceRequest:(id)arg1;
- (void)_handleAddServiceRequest:(id)arg1;
- (void)_registerForMessages;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)removeService:(id)arg1;
- (void)removeServicesForAccessory:(id)arg1;
- (void)fixupServicesForReplacementAccessory:(id)arg1;
- (void)_handleRenameRequest:(id)arg1;
- (void)configure:(id)arg1 queue:(id)arg2;
- (id)initWithName:(id)arg1 uuid:(id)arg2 home:(id)arg3 queue:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDTrigger : NSObject <HMMessageReceiver, NSSecureCoding>
{
    _Bool _active;
    NSString *_name;
    NSUUID *_uuid;
    NSMutableArray *_currentActionSets;
    HMDHome *_home;
    NSObject<OS_dispatch_queue> *_workQueue;
    HMMessageDispatcher *_msgDispatcher;
    NSDate *_mostRecentFireDate;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSDate *mostRecentFireDate; // @synthesize mostRecentFireDate=_mostRecentFireDate;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
@property(retain, nonatomic) NSMutableArray *currentActionSets; // @synthesize currentActionSets=_currentActionSets;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_registerForMessages;
- (void)_handleActivateTriggerRequest:(id)arg1;
- (void)_handleUpdateActionSetRequest:(id)arg1;
- (void)_handleRenameRequest:(id)arg1;
- (id)_activate:(_Bool)arg1;
- (id)_updateActionSets:(id)arg1 add:(_Bool)arg2;
- (void)invalidate;
- (void)configure:(id)arg1 messageDispatcher:(id)arg2 queue:(id)arg3;
- (void)triggerFired;
- (void)reEvaluate;
- (void)removeActionSet:(id)arg1;
- (void)checkForNoActions;
- (id)actionSets;
- (id)initWithName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDTimerTrigger : HMDTrigger
{
    NSDate *_fireDate;
    NSTimeZone *_fireDateTimeZone;
    NSDateComponents *_fireRepeatInterval;
    NSString *_timerID;
    NSDate *_currentFireDate;
    NSTimer *_timer;
}

+ (_Bool)supportsSecureCoding;
+ (id)validateWholeMinuteDate:(id)arg1 onCalendar:(id)arg2;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSDate *currentFireDate; // @synthesize currentFireDate=_currentFireDate;
@property(retain, nonatomic) NSString *timerID; // @synthesize timerID=_timerID;
@property(copy, nonatomic) NSDateComponents *fireRepeatInterval; // @synthesize fireRepeatInterval=_fireRepeatInterval;
@property(copy, nonatomic) NSTimeZone *fireDateTimeZone; // @synthesize fireDateTimeZone=_fireDateTimeZone;
@property(copy, nonatomic) NSDate *fireDate; // @synthesize fireDate=_fireDate;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)getCalendar;
- (void)_closestDatesForStartDate:(id)arg1 earliestDate:(id)arg2 timeZone:(id)arg3 deliveryRepeatInterval:(id)arg4 returnDateBefore:(id *)arg5 returnDateAfter:(id *)arg6;
- (void)_timerTriggered;
- (id)_nextFireDate;
- (id)_activate:(_Bool)arg1;
- (void)_handleUpdateTimerTriggerPropertiesRequest:(id)arg1;
- (void)_registerForMessages;
- (void)_stopTimer;
- (void)_startTimerWithFireDate:(id)arg1;
- (id)validateRecurrence:(id)arg1;
- (void)nsTimerTriggered:(id)arg1;
- (void)timerTriggered;
- (void)dealloc;
- (void)invalidate;
- (void)completeConfiguration;
- (void)configure:(id)arg1 messageDispatcher:(id)arg2 queue:(id)arg3;
- (id)initWithName:(id)arg1 fireDate:(id)arg2 timeZone:(id)arg3 recurrence:(id)arg4;

@end

@interface HMDUIDialogPresenter : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
}

+ (id)sharedUIDialogPresenter;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (_Bool)presentDialogWithInfo:(id)arg1 options:(unsigned long long)arg2 textField:(id *)arg3;
- (_Bool)presentDialogWithInfo:(id)arg1 options:(unsigned long long)arg2 textField:(id *)arg3 timeout:(double)arg4;
- (void)displayKeychainSyncForHome:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)confirmInviteFromUser:(id)arg1 forHome:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)confirmRemoveUser:(id)arg1 fromHome:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)confirmAddUser:(id)arg1 toHome:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_requestUserPermissionForUnauthenticatedAccessory:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)requestUserPermissionForUnauthenticatedAccessory:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_requestPairingPasswordForAccessory:(id)arg1 home:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)requestPairingPasswordForAccessory:(id)arg1 home:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface HMDUser : NSObject <NSSecureCoding>
{
    _Bool _remoteGateway;
    NSString *_userID;
    NSUUID *_uuid;
    NSString *_displayName;
    NSString *_pairingUsername;
    NSData *_publicKey;
    unsigned long long _privilege;
    HMDHome *_home;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) HMDHome *home; // @synthesize home=_home;
@property(readonly, nonatomic) unsigned long long privilege; // @synthesize privilege=_privilege;
@property(readonly, nonatomic, getter=isRemoteGateway) _Bool remoteGateway; // @synthesize remoteGateway=_remoteGateway;
@property(readonly, copy, nonatomic) NSData *publicKey; // @synthesize publicKey=_publicKey;
@property(readonly, copy, nonatomic) NSString *pairingUsername; // @synthesize pairingUsername=_pairingUsername;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 displayName:(id)arg2 pairingUsername:(id)arg3 publicKey:(id)arg4 privilege:(unsigned long long)arg5 remoteGateway:(_Bool)arg6 home:(id)arg7;

@end

@interface HMDXpcServer : HMMessageDispatcher <NSXPCListenerDelegate, HMMessageReceiver>
{
    _Bool _activeHomeKitApps;
    NSObject<OS_dispatch_queue> *_xpcWorkQueue;
    NSUUID *_uuid;
    NSXPCListener *_xpcListener;
    NSMutableSet *_xpcClients;
    HMDApplicationStateMonitor *_appMonitor;
    NSMutableSet *_foregroundApps;
    NSObject<OS_dispatch_group> *_activeMessageTracker;
    HMDIDSMessageDispatcher *_recvDispatcher;
    HMMessageDispatcher *_notificationRelayDispatcher;
    HMDBackgroundAppMessageFilter *_backgroundAppMsgFilter;
}

@property(retain, nonatomic) HMDBackgroundAppMessageFilter *backgroundAppMsgFilter; // @synthesize backgroundAppMsgFilter=_backgroundAppMsgFilter;
@property(retain, nonatomic) HMMessageDispatcher *notificationRelayDispatcher; // @synthesize notificationRelayDispatcher=_notificationRelayDispatcher;
@property(retain, nonatomic) HMDIDSMessageDispatcher *recvDispatcher; // @synthesize recvDispatcher=_recvDispatcher;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *activeMessageTracker; // @synthesize activeMessageTracker=_activeMessageTracker;
@property(nonatomic) _Bool activeHomeKitApps; // @synthesize activeHomeKitApps=_activeHomeKitApps;
@property(retain, nonatomic) NSMutableSet *foregroundApps; // @synthesize foregroundApps=_foregroundApps;
@property(retain, nonatomic) HMDApplicationStateMonitor *appMonitor; // @synthesize appMonitor=_appMonitor;
@property(retain, nonatomic) NSMutableSet *xpcClients; // @synthesize xpcClients=_xpcClients;
@property(retain, nonatomic) NSXPCListener *xpcListener; // @synthesize xpcListener=_xpcListener;
@property(retain, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *xpcWorkQueue; // @synthesize xpcWorkQueue=_xpcWorkQueue;
- (void).cxx_destruct;
- (void)_handleResumeXPCConnectionRequest:(id)arg1;
- (void)_handleSuspendXPCConnectionRequest:(id)arg1;
- (void)_registerForMessages;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)dispatchMessage:(id)arg1 target:(id)arg2;
- (void)unregisterForForMessage:(id)arg1 receiver:(id)arg2;
- (void)registerForMessage:(id)arg1 receiver:(id)arg2 messageHandler:(CDUnknownBlockType)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 andInvokeCompletionHandler:(CDUnknownBlockType)arg3;
- (void)sendMessage:(id)arg1 target:(id)arg2 responseQueue:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 target:(id)arg2;
- (void)trackActiveHomeKitAppsForNewConnection:(_Bool)arg1;
- (void)handleApplicationRunningInForeground:(_Bool)arg1 pid:(int)arg2;
- (void)handleApplicationSuspended:(int)arg1;
- (void)handleApplicationStateChanged:(unsigned long long)arg1 forPid:(int)arg2;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)endPoint;
- (void)reset;
- (_Bool)stop;
- (_Bool)start;
- (id)initWithQueue:(id)arg1 receiveDispatcher:(id)arg2 notificationRelayDispatcher:(id)arg3 messageFilterChain:(id)arg4 registerAsMachService:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMDZone : NSObject <HMMessageReceiver, NSSecureCoding>
{
    NSString *_name;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_currentRooms;
    HMDHome *_home;
    HMMessageDispatcher *_msgDispatcher;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) HMMessageDispatcher *msgDispatcher; // @synthesize msgDispatcher=_msgDispatcher;
@property(nonatomic) __weak HMDHome *home; // @synthesize home=_home;
@property(retain, nonatomic) NSMutableArray *currentRooms; // @synthesize currentRooms=_currentRooms;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property(readonly, nonatomic) NSUUID *messageTargetUUID;
- (void)removeRoom:(id)arg1;
- (void)_handleRename:(id)arg1;
- (void)_handleRemoveRoom:(id)arg1;
- (void)_handleAddRoom:(id)arg1;
- (void)_registerForMessages;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)roomWithUUID:(id)arg1;
- (id)roomWithName:(id)arg1;
- (id)rooms;
- (void)configure:(id)arg1 queue:(id)arg2;
- (id)initWithName:(id)arg1 uuid:(id)arg2 home:(id)arg3 queue:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMMessage : NSObject
{
    _Bool _remoteSource;
    NSString *_name;
    NSUUID *_identifier;
    NSDictionary *_messagePayload;
    CDUnknownBlockType _responseHandler;
    id _transport;
}

+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 remoteSource:(_Bool)arg4 responseHandler:(CDUnknownBlockType)arg5;
+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 remoteSource:(_Bool)arg4;
+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3;
+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 transport:(id)arg4 responseHandler:(CDUnknownBlockType)arg5;
+ (id)messageWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 transport:(id)arg4;
+ (id)messageWithName:(id)arg1 messagePayload:(id)arg2 transport:(id)arg3 responseHandler:(CDUnknownBlockType)arg4;
+ (id)messageWithName:(id)arg1 messagePayload:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
+ (id)messageWithName:(id)arg1 messagePayload:(id)arg2 transport:(id)arg3;
+ (id)messageWithName:(id)arg1 messagePayload:(id)arg2;
@property(readonly, nonatomic, getter=isRemoteSource) _Bool remoteSource; // @synthesize remoteSource=_remoteSource;
@property(readonly, nonatomic) id transport; // @synthesize transport=_transport;
@property(readonly, nonatomic) CDUnknownBlockType responseHandler; // @synthesize responseHandler=_responseHandler;
@property(readonly, nonatomic) NSDictionary *messagePayload; // @synthesize messagePayload=_messagePayload;
@property(readonly, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 identifier:(id)arg2 messagePayload:(id)arg3 transport:(id)arg4 responseHandler:(CDUnknownBlockType)arg5 remoteSource:(_Bool)arg6;
- (int)sourcePid;
- (id)calendarForKey:(id)arg1;
- (id)errorForKey:(id)arg1;
- (id)dateComponentsForKey:(id)arg1;
- (id)timeZoneForKey:(id)arg1;
- (id)nullForKey:(id)arg1;
- (id)dateForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1 keyPresent:(_Bool *)arg2;
- (_Bool)boolForKey:(id)arg1;
- (id)numberForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)uuidFromRemoteMessageForKey:(id)arg1;
- (id)uuidForKey:(id)arg1;

@end

@interface HMMsgHandler : NSObject
{
    NSObject<OS_dispatch_queue> *_receiverQueue;
    CDUnknownBlockType _messageHandler;
}

+ (id)msgHandler:(CDUnknownBlockType)arg1 receiverQueue:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType messageHandler; // @synthesize messageHandler=_messageHandler;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *receiverQueue; // @synthesize receiverQueue=_receiverQueue;
- (void).cxx_destruct;
- (id)initWithMessageHandler:(CDUnknownBlockType)arg1 receiverQueue:(id)arg2;

@end

@interface HMUIndent : NSObject
{
    NSString *_level;
    NSString *_step;
    unsigned long long _factor;
}

+ (id)indentWithLevel:(id)arg1 step:(id)arg2 factor:(unsigned long long)arg3;
+ (id)indentWithLevel:(id)arg1;
@property(readonly, nonatomic) unsigned long long factor; // @synthesize factor=_factor;
@property(readonly, nonatomic) NSString *step; // @synthesize step=_step;
@property(readonly, nonatomic) NSString *level; // @synthesize level=_level;
- (void).cxx_destruct;
- (id)indentByFactor:(unsigned long long)arg1;
- (id)description;
- (id)initWithLevel:(id)arg1 step:(id)arg2 factor:(unsigned long long)arg3;

@end

@interface NSArray (Logging)
- (id)shortDescription;
- (id)shortDescriptionWithIndent:(id)arg1;
@end

@interface NSCoder (HMDUtilities)
- (_Bool)isLocalStore;
@end

@interface NSCoder (HMExtensions)
- (id)decodeSetOfConditionalObjects:(Class)arg1 forKey:(id)arg2;
- (void)encodeSetOfConditionalObjects:(id)arg1 forKey:(id)arg2;
- (id)decodeArrayOfConditionalObjects:(Class)arg1 forKey:(id)arg2;
- (void)encodeArrayOfConditionalObjects:(id)arg1 forKey:(id)arg2;
@end

@interface NSCoder (RemoteTransport)
- (_Bool)isRemoteTransportOnSameAccount;
- (_Bool)isRemoteTransport;
@end

@interface NSCoder (XPCTransport)
- (_Bool)isXPCTransport;
@end

@interface NSData (Logging)
- (id)shortDescription;
@end

@interface NSDate (homed)
- (id)localTimeDescription;
@end

@interface NSDictionary (Logging)
- (id)shortDescription;
- (id)shortDescriptionWithIndent:(id)arg1;
@end

@interface NSDictionary (Utils)
- (id)nullForKey:(id)arg1;
- (id)calendarFromDataForKey:(id)arg1;
- (id)calendarForKey:(id)arg1;
- (id)errorFromDataForKey:(id)arg1;
- (id)errorForKey:(id)arg1;
- (id)dateComponentsFromDataForKey:(id)arg1;
- (id)dateComponentsForKey:(id)arg1;
- (id)timeZoneFromDataForKey:(id)arg1;
- (id)timeZoneForKey:(id)arg1;
- (id)dateForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)mutableArrayForKey:(id)arg1;
- (id)mutableDictionaryForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1 keyPresent:(_Bool *)arg2;
- (_Bool)boolForKey:(id)arg1;
- (id)numberForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)uuidFromStringForKey:(id)arg1;
- (id)uuidForKey:(id)arg1;
@end

@interface NSKeyedUnarchiver (SecureCodingUtils)
+ (id)deserializeObjectWithData:(id)arg1 allowedClasses:(id)arg2;
@end

@interface WLOHomeKitConfiguration : NSObject
{
    unsigned int _numHomes;
    unsigned int _numAccessories;
    unsigned int _numServices;
    unsigned int _numUsers;
    unsigned int _numScenes;
    unsigned int _numTriggers;
    unsigned int _numLocations;
    unsigned int _numLocationGroups;
    unsigned int _numAccessoryServiceGroups;
    unsigned int _databaseSize;
}

@property unsigned int databaseSize; // @synthesize databaseSize=_databaseSize;
@property unsigned int numAccessoryServiceGroups; // @synthesize numAccessoryServiceGroups=_numAccessoryServiceGroups;
@property unsigned int numLocationGroups; // @synthesize numLocationGroups=_numLocationGroups;
@property unsigned int numLocations; // @synthesize numLocations=_numLocations;
@property unsigned int numTriggers; // @synthesize numTriggers=_numTriggers;
@property unsigned int numScenes; // @synthesize numScenes=_numScenes;
@property unsigned int numUsers; // @synthesize numUsers=_numUsers;
@property unsigned int numServices; // @synthesize numServices=_numServices;
@property unsigned int numAccessories; // @synthesize numAccessories=_numAccessories;
@property unsigned int numHomes; // @synthesize numHomes=_numHomes;
- (id)description;

@end

@interface WLOHomeKitEvent : NSObject
{
    unsigned int _eventType;
}

@property(nonatomic) unsigned int eventType; // @synthesize eventType=_eventType;
- (id)description;

@end

@interface WLOHomeKitResult : NSObject
{
    unsigned int _resultType;
    int _resultCode;
    unsigned int _duration;
    unsigned int _transportType;
    unsigned int _isClient;
    NSArray *_serviceTypes;
    NSArray *_characteristicTypes;
}

@property(retain, nonatomic) NSArray *characteristicTypes; // @synthesize characteristicTypes=_characteristicTypes;
@property(retain, nonatomic) NSArray *serviceTypes; // @synthesize serviceTypes=_serviceTypes;
@property(nonatomic) unsigned int isClient; // @synthesize isClient=_isClient;
@property(nonatomic) unsigned int transportType; // @synthesize transportType=_transportType;
@property(nonatomic) unsigned int duration; // @synthesize duration=_duration;
@property(nonatomic) int resultCode; // @synthesize resultCode=_resultCode;
@property(nonatomic) unsigned int resultType; // @synthesize resultType=_resultType;
- (void).cxx_destruct;
- (id)description;

@end

@interface WLOMetrics : NSObject
{
}

+ (void)LogResultMetric:(unsigned long long)arg1 resultCode:(long long)arg2 duration:(double)arg3 transportType:(unsigned long long)arg4 isClient:(_Bool)arg5 serviceTypes:(id)arg6 characteristicTypes:(id)arg7;
+ (void)LogEventMetric:(unsigned long long)arg1;
+ (void)LogConfigurationMetric:(id)arg1;

@end

