//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/XPCKit.framework/XPCKit
// UUID: E45AE2C9-219C-3A09-AB4D-25DBEF35F847
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 268.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol XPCClientConnectionDelegate <NSObject>
- (void)XPCClientConnection:(XPCClientConnection *)arg1 didReceiveRequest:(XPCRequest *)arg2;
@end

@protocol XPCServiceConnectionDelegate <NSObject>
- (void)XPCServiceConnectionDidDisconnect:(XPCServiceConnection *)arg1;
- (void)XPCServiceConnection:(XPCServiceConnection *)arg1 didReceiveRequest:(XPCRequest *)arg2 sequenceNumber:(unsigned long long)arg3;
@end

@protocol XPCServiceListenerDelegate <NSObject>
- (void)XPCServiceListener:(XPCServiceListener *)arg1 didReceiveNewConnection:(XPCServiceConnection *)arg2;

@optional
- (_Bool)XPCServiceListener:(XPCServiceListener *)arg1 shouldAcceptNewConnection:(NSObject<OS_xpc_object> *)arg2;
@end

@interface XPCClientConnection : NSObject
{
    NSString *_serviceName;
    NSObject<OS_xpc_object> *_connection;
    NSObject<OS_dispatch_queue> *_queue;
    id <XPCClientConnectionDelegate> _delegate;
}

@property(readonly, nonatomic) id <XPCClientConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithServiceName:(id)arg1 delegate:(id)arg2;
- (void)sendMessage:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)_reallySendMessage:(id)arg1 handler:(CDUnknownBlockType)arg2 sequence:(unsigned long long)arg3 retryCount:(unsigned long long)arg4;
- (void)_handleIncomingMessage:(id)arg1;
- (void)_handleConnectionEvent:(id)arg1;
- (id)debugDescription;

@end

@interface XPCNSClientConnection : NSObject <XPCClientConnectionDelegate>
{
    XPCClientConnection *_clientConnection;
    id <XPCNSClientConnectionDelegate> _delegate;
}

@property(readonly, nonatomic) id <XPCNSClientConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)XPCClientConnection:(id)arg1 didReceiveRequest:(id)arg2;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)sendMessageReliably:(id)arg1 data:(id)arg2 maxRetryCount:(int)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 data:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (id)initWithServiceName:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XPCNSRequest : NSObject
{
    id <NSCoding> _message;
    NSData *_data;
    XPCRequest *_request;
}

@property(readonly, retain, nonatomic) XPCRequest *request; // @synthesize request=_request;
@property(readonly, retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, retain, nonatomic) id <NSCoding> message; // @synthesize message=_message;
- (void).cxx_destruct;
- (void)sendReply:(id)arg1;
- (id)initWithXPCRequest:(id)arg1;

@end

@interface XPCNSServiceConnection : NSObject <XPCServiceConnectionDelegate>
{
    XPCServiceConnection *_serviceConnection;
    id <XPCNSServiceConnectionDelegate> _delegate;
    id <NSObject> _context;
}

@property(retain, nonatomic) id <NSObject> context; // @synthesize context=_context;
@property(nonatomic) __weak id <XPCNSServiceConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)XPCServiceConnectionDidDisconnect:(id)arg1;
- (void)XPCServiceConnection:(id)arg1 didReceiveRequest:(id)arg2 sequenceNumber:(unsigned long long)arg3;
@property(readonly, retain, nonatomic) NSString *serviceName;
- (void)sendMessage:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (id)initWithXPCServiceConnection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XPCNSServiceListener : NSObject <XPCServiceListenerDelegate>
{
    XPCServiceListener *_serviceListener;
    id <XPCNSServiceListenerDelegate> _delegate;
}

@property(readonly, nonatomic) id <XPCNSServiceListenerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)XPCServiceListener:(id)arg1 didReceiveNewConnection:(id)arg2;
- (_Bool)XPCServiceListener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
@property(readonly, retain, nonatomic) NSString *serviceName;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)start;
- (id)initWithServiceName:(id)arg1 queue:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XPCRequest : NSObject
{
    CDUnknownBlockType _handler;
    unsigned long long _sequence;
    NSObject<OS_xpc_object> *_message;
    NSObject<OS_xpc_object> *_reply;
}

@property(readonly, nonatomic) NSObject<OS_xpc_object> *reply; // @synthesize reply=_reply;
@property(readonly, nonatomic) NSObject<OS_xpc_object> *message; // @synthesize message=_message;
@property(readonly, nonatomic) unsigned long long sequence; // @synthesize sequence=_sequence;
- (void).cxx_destruct;
- (id)initWithMessage:(id)arg1 sequence:(unsigned long long)arg2 connection:(id)arg3;
- (void)sendReply;

@end

@interface XPCServiceConnection : NSObject
{
    NSString *_serviceName;
    id <XPCServiceConnectionDelegate> _delegate;
    NSObject<OS_xpc_object> *_client;
    id <NSObject> _context;
    XPCServiceListener *_serviceListener;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) __weak XPCServiceListener *serviceListener; // @synthesize serviceListener=_serviceListener;
@property(retain, nonatomic) id <NSObject> context; // @synthesize context=_context;
@property(readonly, nonatomic) NSObject<OS_xpc_object> *client; // @synthesize client=_client;
@property(nonatomic) __weak id <XPCServiceConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, retain, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
- (void).cxx_destruct;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)sendMessage:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)workQueueShutDown;
- (void)resume;
- (void)workQueueHandleIncomingMessage:(id)arg1;
- (id)initWithServiceName:(id)arg1 client:(id)arg2 queue:(id)arg3;
- (id)debugDescription;

@end

@interface XPCServiceListener : NSObject
{
    NSString *_serviceName;
    id <XPCServiceListenerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSObject<OS_xpc_object> *_listener;
    NSMutableSet *_serviceConnections;
    unsigned long long _clientCount;
}

@property(nonatomic) unsigned long long clientCount; // @synthesize clientCount=_clientCount;
@property(retain, nonatomic) NSMutableSet *serviceConnections; // @synthesize serviceConnections=_serviceConnections;
@property(retain, nonatomic) NSObject<OS_xpc_object> *listener; // @synthesize listener=_listener;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) id <XPCServiceListenerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, retain, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
- (void).cxx_destruct;
- (void)serviceConnectionDidDisconnect:(id)arg1;
- (void)workQueueHandleIncomingConnection:(id)arg1;
- (void)shutDownCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_workQueueShutDownServiceConnections:(id)arg1 index:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)start;
- (id)initWithServiceName:(id)arg1 queue:(id)arg2 delegate:(id)arg3;
- (id)debugDescription;

@end

