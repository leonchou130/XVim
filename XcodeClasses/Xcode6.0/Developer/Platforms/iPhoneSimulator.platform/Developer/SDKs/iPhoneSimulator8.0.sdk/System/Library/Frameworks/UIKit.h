//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIKeyAndScopeToValueCache {
    unsigned int previousScope;
    unsigned int previousKey;
    struct UINibDecoderValue *previousValue;
};

struct UIKeyToKeyIDCache {
    NSString *previousKey[64];
    void *previousKeyID[64];
    _Bool previousKeyExists[64];
    long long hashHits;
    long long hashHotMisses;
    long long hashColdMisses;
};

struct UINibArchiveTableInfo {
    unsigned int count;
    unsigned int offset;
};

struct UINibDecoderHeader {
    unsigned char type[10];
    unsigned int formatVersion;
    unsigned int coderVersion;
    struct UINibArchiveTableInfo objects;
    struct UINibArchiveTableInfo keys;
    struct UINibArchiveTableInfo values;
    struct UINibArchiveTableInfo classes;
};

struct UINibDecoderObjectEntry {
    unsigned int _field1;
    unsigned int _field2;
};

struct UINibDecoderRecursiveState {
    long long objectID;
    long long nextGenericKey;
    unsigned int nextValueSearchIndex;
    _Bool replaced;
};

struct UINibDecoderValue {
    unsigned int _field1;
    unsigned int _field2;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UIPeripheralAnimationGeometry {
    struct CGPoint outPosition;
    struct CGPoint inPosition;
    struct CGRect bounds;
    struct CGAffineTransform transform;
    double targetFrameHeightDelta;
};

struct UIStringIDTableBucket {
    id _field1;
    unsigned long long _field2;
    struct UIStringIDTableBucket *_field3;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _PDFHistoryItem {
    _Bool restorePending;
    _Bool isInitialScale;
    double zoomScale;
    struct CGPoint contentOffset;
};

struct _UICollectionViewCompositionLayout {
    Class _field1;
};

struct _UICollectionViewCompositionLayoutInvalidationContext {
    Class _field1;
    id _field2;
};

struct _UIWebTouchEvent {
    int type;
    double timestamp;
    struct CGPoint locationInScreenCoordinates;
    struct CGPoint locationInDocumentCoordinates;
    double scale;
    double rotation;
    _Bool inJavaScriptGesture;
    struct _UIWebTouchPoint *touchPoints;
    unsigned int touchPointCount;
};

struct _UIWebTouchPoint;

struct _UIWebViewportConfiguration {
    struct CGSize size;
    float initialScale;
    float minimumScale;
    float maximumScale;
    _Bool allowsUserScaling;
};

#pragma mark Typedef'd Structures

typedef struct {
    UIWebPDFView *view;
    NSTimer *timer;
} CDStruct_d58a15aa;

typedef struct {
    id _field1;
    unsigned long long _field2;
} CDStruct_856ef1b3;

typedef struct {
    _Bool animateContentRotation;
    _Bool preserveHeight;
    _Bool avoidFadingBottomOfContent;
    _Bool skipSnapshotOfEndState;
    double contentStretchRightEdgeInset;
    int edgeClip;
} CDStruct_010f855d;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    _Bool itemIsEnabled[25];
    char timeString[64];
    int gsmSignalStrengthRaw;
    int gsmSignalStrengthBars;
    char serviceString[100];
    char serviceCrossfadeString[100];
    char serviceImages[2][100];
    char operatorDirectory[1024];
    unsigned int serviceContentType;
    int wifiSignalStrengthRaw;
    int wifiSignalStrengthBars;
    unsigned int dataNetworkType;
    int batteryCapacity;
    unsigned int batteryState;
    char batteryDetailString[150];
    int bluetoothBatteryCapacity;
    int thermalColor;
    unsigned int thermalSunlightMode:1;
    unsigned int slowActivity:1;
    unsigned int syncActivity:1;
    char activityDisplayId[256];
    unsigned int bluetoothConnected:1;
    unsigned int displayRawGSMSignal:1;
    unsigned int displayRawWifiSignal:1;
    unsigned int locationIconType:1;
    unsigned int quietModeInactive:1;
    unsigned int tetheringConnectionCount;
} CDStruct_0e61b686;

typedef struct {
    unsigned int val[8];
} CDStruct_4c969caf;

typedef struct {
    unsigned int idiom:6;
    unsigned int landscape:1;
    unsigned int split:1;
    unsigned int appearance:8;
    unsigned int rendering:16;
} CDStruct_961fb75c;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
} CDStruct_afa449f9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} CDStruct_d83abbfb;

typedef struct {
    double w;
    double x;
    double y;
    double z;
} CDStruct_bf7dff04;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double amount;
    int unit;
} CDStruct_73524d89;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
} CDStruct_3eb7d77a;

typedef struct {
    long long userInterfaceIdiom;
    double displayScale;
    long long touchLevel;
    long long interactionModel;
    long long horizontalSizeClass;
    long long verticalSizeClass;
} CDStruct_cf4bd6d1;

typedef struct {
    long long width;
    long long height;
} CDStruct_d58201db;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    struct CGSize _field6;
} CDStruct_0ba2c6ed;

typedef struct {
    _Bool overrideItemIsEnabled[25];
    unsigned int overrideTimeString:1;
    unsigned int overrideGsmSignalStrengthRaw:1;
    unsigned int overrideGsmSignalStrengthBars:1;
    unsigned int overrideServiceString:1;
    unsigned int overrideServiceImages:2;
    unsigned int overrideOperatorDirectory:1;
    unsigned int overrideServiceContentType:1;
    unsigned int overrideWifiSignalStrengthRaw:1;
    unsigned int overrideWifiSignalStrengthBars:1;
    unsigned int overrideDataNetworkType:1;
    unsigned int disallowsCellularDataNetworkTypes:1;
    unsigned int overrideBatteryCapacity:1;
    unsigned int overrideBatteryState:1;
    unsigned int overrideBatteryDetailString:1;
    unsigned int overrideBluetoothBatteryCapacity:1;
    unsigned int overrideThermalColor:1;
    unsigned int overrideSlowActivity:1;
    unsigned int overrideActivityDisplayId:1;
    unsigned int overrideBluetoothConnected:1;
    unsigned int overrideDisplayRawGSMSignal:1;
    unsigned int overrideDisplayRawWifiSignal:1;
    CDStruct_0e61b686 values;
} CDStruct_9dad2be2;

typedef struct {
    CDStruct_73524d89 _field1[4];
} CDStruct_bd7e7c01;

typedef struct {
    int _field1;
    struct CGSize _field2;
} CDStruct_2f66a7ba;

typedef struct {
    CDStruct_bf7dff04 quaternion;
    CDStruct_03942939 userAcceleration;
    CDStruct_03942939 rotationRate;
    CDStruct_03942939 magneticField;
    int magneticFieldCalibrationLevel;
    _Bool doingYawCorrection;
    _Bool doingBiasEstimation;
    _Bool isInitialized;
} CDStruct_04e8b4cd;

typedef struct {
    struct _NSRange src;
    struct _NSRange dst;
    _Bool isEqual;
} CDStruct_8a233cb2;

typedef struct {
    id _field1;
    double _field2;
    double _field3;
    CDStruct_0ba2c6ed _field4;
    CDStruct_0ba2c6ed _field5;
    CDStruct_0ba2c6ed _field6;
    CDStruct_0ba2c6ed _field7;
    _Bool _field8;
} CDStruct_41b0f204;

typedef struct {
    struct CGRect left;
    struct CGRect middle;
    struct CGRect right;
} CDStruct_24b02699;

typedef struct {
    CDStruct_24b02699 top;
    CDStruct_24b02699 middle;
    CDStruct_24b02699 bottom;
} CDStruct_fa4dcde7;

// Ambiguous groups
typedef struct {
    unsigned int isPresentingModalViewController:1;
    unsigned int isPresentingActionSheet:1;
    unsigned int wasIgnoringDimmingViewTouchesBeforeScrolling:1;
    unsigned int isInTextEffectsWindow:1;
    unsigned int isEmbeddingInView:1;
    unsigned int embeddedPresentationBounces:1;
} CDStruct_4a475a17;

typedef struct {
    float m_x;
    float m_y;
    float m_z;
    float m_w;
} CDStruct_23957544;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float x;
    float y;
    float z;
} CDStruct_03942939;

#pragma mark Named Unions

union _GLKQuaternion {
    struct {
        union _GLKVector3 v;
        float s;
    } ;
    struct {
        float x;
        float y;
        float z;
        float w;
    } ;
    float q[4];
};

union _GLKVector3 {
    CDStruct_03942939 ;
    struct {
        float r;
        float g;
        float b;
    } ;
    struct {
        float s;
        float t;
        float p;
    } ;
    float v[3];
};

#pragma mark Typedef'd Unions

typedef union {
    UIImage *image;
    UIView *view;
} CDUnion_b710d1cf;

typedef union {
    CDStruct_961fb75c styling;
    int intValue;
} CDUnion_2c5a7b77;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/UIKit.framework/UIKit
// UUID: C6D9BFB9-C8BC-33EF-8481-F637A5D64F40
//
//                           Arch: x86_64
//                Current version: 3318.0.0
//          Compatibility version: 1.0.0
//                 Source version: 3318.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol CAAction
- (void)runActionForKey:(NSString *)arg1 object:(id)arg2 arguments:(NSDictionary *)arg3;
@end

@protocol DDDetectionControllerInteractionDelegate <NSObject>

@optional
- (void)actionDidFinish:(DDAction *)arg1;
- (void)actionWillStart:(DDAction *)arg1;
- (void)action:(DDAction *)arg1 didDismissAlertController:(UIAlertController *)arg2;
@end

@protocol FBSSceneDelegate <NSObject>
- (void)scene:(FBSScene *)arg1 didReceiveActions:(NSSet *)arg2;
- (void)scene:(FBSScene *)arg1 didUpdateWithDiff:(FBSSceneSettingsDiff *)arg2 transitionContext:(FBSSceneTransitionContext *)arg3 completion:(void (^)(FBSWorkspaceSceneUpdateResponse *))arg4;
@end

@protocol FBSUIApplicationSystemServiceDelegate <NSObject>
@end

@protocol FBSUIApplicationWorkspaceDelegate <FBSWorkspaceDelegate>
- (void)workspaceNoteAssertionExpirationImminent:(FBSUIApplicationWorkspace *)arg1;
- (void)workspaceShouldExit:(FBSUIApplicationWorkspace *)arg1;
- (void)workspace:(FBSUIApplicationWorkspace *)arg1 didLaunchWithCompletion:(void (^)(FBSUIApplicationLaunchResponse *))arg2;
@end

@protocol FBSWorkspaceDelegate <NSObject>

@optional
- (void)workspace:(FBSWorkspace *)arg1 didReceiveActions:(NSSet *)arg2;
- (void)workspace:(FBSWorkspace *)arg1 willDestroyScene:(FBSScene *)arg2 withTransitionContext:(FBSSceneTransitionContext *)arg3 completion:(void (^)(FBSWorkspaceDestroySceneResponse *))arg4;
- (void)workspace:(FBSWorkspace *)arg1 didCreateScene:(FBSScene *)arg2 withTransitionContext:(FBSSceneTransitionContext *)arg3 completion:(void (^)(FBSWorkspaceCreateSceneResponse *))arg4;
- (void)workspaceDidEndTransaction:(FBSWorkspace *)arg1;
- (void)workspaceDidBeginTransaction:(FBSWorkspace *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSDiscardableContent
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
@end

@protocol NSExtensionRequestHandling <NSObject>
- (void)beginRequestWithExtensionContext:(NSExtensionContext *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSFilePresenter <NSObject>
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL;

@optional
@property(readonly, copy) NSURL *primaryPresentedItemURL;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didResolveConflictVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didLoseVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didGainVersion:(NSFileVersion *)arg2;
- (void)presentedSubitemDidChangeAtURL:(NSURL *)arg1;
- (void)presentedSubitemAtURL:(NSURL *)arg1 didMoveToURL:(NSURL *)arg2;
- (void)presentedSubitemDidAppearAtURL:(NSURL *)arg1;
- (void)accommodatePresentedSubitemDeletionAtURL:(NSURL *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)presentedItemDidResolveConflictVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidLoseVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidGainVersion:(NSFileVersion *)arg1;
- (void)presentedItemDidChange;
- (void)presentedItemDidMoveToURL:(NSURL *)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)relinquishPresentedItemToWriter:(void (^)(void (^)(void)))arg1;
- (void)relinquishPresentedItemToReader:(void (^)(void (^)(void)))arg1;
@end

@protocol NSISEngineDelegate <NSObject>
- (void)engine:(NSISEngine *)arg1 willBreakConstraint:(id <NSISConstraint>)arg2 dueToMutuallyExclusiveConstraints:(NSArray *)arg3;
- (NSISVariable *)engine:(NSISEngine *)arg1 markerForConstraintToBreakAmongConstraints:(NSArray *)arg2;
- (void)constraintsDidChangeInEngine:(NSISEngine *)arg1;
@end

@protocol NSISVariableDelegate <NSObject>
- (_Bool)nsis_valueOfVariableIsUserObservable:(NSISVariable *)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(NSISVariable *)arg1;
- (NSString *)nsis_descriptionOfVariable:(NSISVariable *)arg1;
- (void)nsis_valueOfVariable:(NSISVariable *)arg1 didChangeInEngine:(NSISEngine *)arg2;
@end

@protocol NSKeyedArchiverDelegate <NSObject>

@optional
- (void)archiverDidFinish:(NSKeyedArchiver *)arg1;
- (void)archiverWillFinish:(NSKeyedArchiver *)arg1;
- (void)archiver:(NSKeyedArchiver *)arg1 willReplaceObject:(id)arg2 withObject:(id)arg3;
- (void)archiver:(NSKeyedArchiver *)arg1 didEncodeObject:(id)arg2;
- (id)archiver:(NSKeyedArchiver *)arg1 willEncodeObject:(id)arg2;
@end

@protocol NSLayoutItem <NSObject>
- (_Bool)nsli_isFlipped;
- (unsigned long long)nsli_autoresizingMask;
- (_Bool)nsli_descriptionIncludesPointer;
- (NSString *)nsli_description;
- (_Bool)nsli_resolvedValue:(double *)arg1 forSymbolicConstant:(NSString *)arg2 inConstraint:(NSLayoutConstraint *)arg3 error:(id *)arg4;
- (_Bool)nsli_lowerAttribute:(int)arg1 intoExpression:(NSISLinearExpression *)arg2 withCoefficient:(double)arg3 container:(id <NSLayoutItem>)arg4;
- (_Bool)nsli_lowerAttribute:(int)arg1 intoExpression:(NSISLinearExpression *)arg2 withCoefficient:(double)arg3 forConstraint:(NSLayoutConstraint *)arg4;
- (id <NSLayoutItem>)nsli_superitem;
- (struct CGSize)nsli_convertSizeFromEngineSpace:(struct CGSize)arg1;
- (struct CGSize)nsli_convertSizeToEngineSpace:(struct CGSize)arg1;
- (NSISEngine *)nsli_layoutEngine;

@optional
- (double)nsli_marginOffsetForAttribute:(long long)arg1;
- (_Bool)nsli_removeConstraint:(NSLayoutConstraint *)arg1;
- (void)nsli_addConstraint:(NSLayoutConstraint *)arg1;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (void)layoutManager:(NSLayoutManager *)arg1 textContainer:(NSTextContainer *)arg2 didChangeGeometryFromSize:(struct CGSize)arg3;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(_Bool)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
- (struct CGRect)layoutManager:(NSLayoutManager *)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(NSTextContainer *)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg2;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg2;
- (long long)layoutManager:(NSLayoutManager *)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (unsigned long long)layoutManager:(NSLayoutManager *)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(UIFont *)arg5 forGlyphRange:(struct _NSRange)arg6;
@end

@protocol NSMetadataQueryDelegate <NSObject>

@optional
- (id)metadataQuery:(NSMetadataQuery *)arg1 replacementValueForAttribute:(NSString *)arg2 value:(id)arg3;
- (id)metadataQuery:(NSMetadataQuery *)arg1 replacementObjectForResultObject:(NSMetadataItem *)arg2;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSTextAttachmentCell <NSObject>
- (NSTextAttachment *)attachment;
- (void)setAttachment:(NSTextAttachment *)arg1;
- (struct CGPoint)cellBaselineOffset;
- (struct CGSize)cellSize;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(UIView *)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(NSLayoutManager *)arg4;

@optional
- (void)drawWithFrame:(struct CGRect)arg1 inView:(UIView *)arg2;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(UIView *)arg2 characterIndex:(unsigned long long)arg3;
- (struct CGRect)cellFrameForTextContainer:(NSTextContainer *)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
@end

@protocol NSTextContainerView <NSObject, NSTextLayoutOrientationProvider>

@optional
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;
- (struct CGRect)desiredBoundsForTextContainerSize:(struct CGSize)arg1;
- (struct CGRect)textContainerFrameForBounds:(struct CGRect)arg1;
- (NSDictionary *)linkTextAttributes;
@end

@protocol NSTextLayoutOrientationProvider
@property(nonatomic) long long layoutOrientation;
@end

@protocol NSUITextViewCommonMethods <NSTextLayoutOrientationProvider, NSTextContainerView>
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;
- (_Bool)isHorizontallyResizable;
- (struct CGSize)minSize;
- (void)invalidateTextContainerOrigin;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;
- (struct UIEdgeInsets)textContainerInset;
- (struct CGPoint)textContainerOrigin;
- (struct CGRect)visibleRect;

@optional
@property(nonatomic) struct _NSRange markedRange;
@property(nonatomic) NSTextContainer *textContainer;
- (void)addTextAttachmentView:(UIView *)arg1 forAttachment:(NSTextAttachment *)arg2;
@end

@protocol NSUserActivityDelegate <NSObject>

@optional
- (void)userActivity:(NSUserActivity *)arg1 didReceiveInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)userActivityWasContinued:(NSUserActivity *)arg1;
- (void)userActivityWillSave:(NSUserActivity *)arg1;
@end

@protocol NSXPCConnectionDelegate <NSObject>

@optional
- (void)connection:(NSXPCConnection *)arg1 handleInvocation:(NSInvocation *)arg2 isReply:(_Bool)arg3;
- (id <NSSecureCoding>)replacementObjectForXPCConnection:(NSXPCConnection *)arg1 encoder:(NSXPCCoder *)arg2 object:(id)arg3;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@protocol PKPrinterBrowserDelegate <NSObject>
- (void)removePrinter:(PKPrinter *)arg1 moreGoing:(_Bool)arg2;
- (void)addPrinter:(PKPrinter *)arg1 moreComing:(_Bool)arg2;
@end

@protocol SFAirDropActivityViewControllerDelegate <NSObject>
- (void)airDropActivityDidSuccessfullyStartTransfer;
- (void)airDropActivityDidSuccessfullyCompleteTransfer;
- (void)airDropActivityRequestingSharedItemsWithCompletionHandler:(void (^)(void))arg1;
@end

@protocol TIKeyboardInputManagerDynamicDictionarySupport <NSObject>
- (void)removeAllDynamicDictionariesWithCompletionHandler:(void (^)(NSError *))arg1;
@end

@protocol TITextCheckerSupport <NSObject>
- (void)appendWordToTextCheckerLocalDictionary:(NSString *)arg1;
- (void)requestTextCheckerLocalDictionaryWithCompletionHandler:(void (^)(NSData *))arg1;
- (void)string:(NSString *)arg1 isExemptFromTextCheckerWithCompletionHandler:(void (^)(_Bool))arg2;
@end

@protocol UIAccessibilityIdentification <NSObject>
@property(copy, nonatomic) NSString *accessibilityIdentifier;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIActivityGroupViewControllerDelegate <NSObject>
- (void)activityGroupViewController:(UIActivityGroupViewController *)arg1 didSelectActivity:(UIActivity *)arg2;
@end

@protocol UIActivityItemSource <NSObject>
- (id)activityViewController:(UIActivityViewController *)arg1 itemForActivityType:(NSString *)arg2;
- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)arg1;

@optional
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailImageForActivityType:(NSString *)arg2 suggestedSize:(struct CGSize)arg3;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 dataTypeIdentifierForActivityType:(NSString *)arg2;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 subjectForActivityType:(NSString *)arg2;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIAlertControllerBackgroundView <NSObject>
@property double cornerRadius;
@end

@protocol UIAlertControllerContaining <NSObject>
- (UIAlertController *)_containedAlertController;
@end

@protocol UIAlertControllerVisualStyleProviding <NSObject>
- (UIAlertControllerVisualStyle *)visualStyleForAlertControllerStyle:(long long)arg1 traitCollection:(UITraitCollection *)arg2 descriptor:(UIAlertControllerDescriptor *)arg3;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAppearance <NSObject>
+ (id)appearanceForTraitCollection:(UITraitCollection *)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(UITraitCollection *)arg1;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)appearance;
@end

@protocol UIAppearanceContainer <NSObject>
@end

@protocol UIApplicationSceneClientSettings <NSObject>
@property(readonly, nonatomic) long long notificationCenterRevealMode;
@property(readonly, nonatomic) long long controlCenterRevealMode;
@property(readonly, nonatomic) unsigned long long proximityDetectionModes;
@property(readonly, nonatomic) _Bool orientationEnabled;
@property(readonly, nonatomic) _Bool idleTimerDisabled;
@property(readonly, nonatomic) long long compatibilityMode;
@property(readonly, nonatomic) double defaultPNGExpirationTime;
@property(readonly, copy, nonatomic) NSString *defaultPNGName;
@property(readonly, nonatomic) _Bool defaultStatusBarHidden;
@property(readonly, nonatomic) long long defaultStatusBarStyle;
@property(readonly, nonatomic) _Bool statusBarHidden;
@property(readonly, nonatomic) long long statusBarStyle;
@end

@protocol UIApplicationSceneSettings <NSObject>
@property(readonly, nonatomic) int statusBarStyleOverridesToSuppress;
@property(readonly, nonatomic) _Bool underLock;
@end

@protocol UIAutoscrollContainer
@property(nonatomic) struct CGPoint autoscrollContentOffset;
- (struct CGRect)contentFrameForView:(UIView *)arg1;
@end

@protocol UIAutoscrollDelegate

@optional
- (void)autoscrollWillNotStart;
- (void)updateAutoscroll:(UIAutoscroll *)arg1;
@end

@protocol UIBarPositioning <NSObject>
@property(readonly, nonatomic) long long barPosition;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICalloutBarDelegate <NSObject>

@optional
- (void)calloutBar:(UICalloutBar *)arg1 didFinishAnimation:(NSDictionary *)arg2;
- (void)calloutBar:(UICalloutBar *)arg1 willStartAnimation:(NSDictionary *)arg2;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UICollisionBehaviorDelegate <NSObject>

@optional
- (void)collisionBehavior:(UICollisionBehavior *)arg1 endedContactForItem:(id <UIDynamicItem>)arg2 withBoundaryIdentifier:(id <NSCopying>)arg3;
- (void)collisionBehavior:(UICollisionBehavior *)arg1 beganContactForItem:(id <UIDynamicItem>)arg2 withBoundaryIdentifier:(id <NSCopying>)arg3 atPoint:(struct CGPoint)arg4;
- (void)collisionBehavior:(UICollisionBehavior *)arg1 endedContactForItem:(id <UIDynamicItem>)arg2 withItem:(id <UIDynamicItem>)arg3;
- (void)collisionBehavior:(UICollisionBehavior *)arg1 beganContactForItem:(id <UIDynamicItem>)arg2 withItem:(id <UIDynamicItem>)arg3 atPoint:(struct CGPoint)arg4;
@end

@protocol UIContentContainer <NSObject>
@property(readonly, nonatomic) struct CGSize preferredContentSize;
- (void)willTransitionToTraitCollection:(UITraitCollection *)arg1 withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id <UIViewControllerTransitionCoordinator>)arg2;
- (struct CGSize)sizeForChildContentContainer:(id <UIContentContainer>)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id <UIContentContainer>)arg1;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id <UIContentContainer>)arg1;
@end

@protocol UICoordinateSpace <NSObject>
@property(readonly, nonatomic) struct CGRect bounds;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromCoordinateSpace:(id <UICoordinateSpace>)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toCoordinateSpace:(id <UICoordinateSpace>)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromCoordinateSpace:(id <UICoordinateSpace>)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toCoordinateSpace:(id <UICoordinateSpace>)arg2;
@end

@protocol UIDataSourceModelAssociation
- (NSIndexPath *)indexPathForElementWithModelIdentifier:(NSString *)arg1 inView:(UIView *)arg2;
- (NSString *)modelIdentifierForElementAtIndexPath:(NSIndexPath *)arg1 inView:(UIView *)arg2;
@end

@protocol UIDimmingViewDelegate
- (void)dimmingViewWasTapped:(UIDimmingView *)arg1;
@end

@protocol UIDocumentPasswordViewDelegate
- (void)userDidEnterPassword:(NSString *)arg1 forPasswordView:(UIDocumentPasswordView *)arg2;

@optional
- (void)didEndEditingPassword:(UITextField *)arg1 inView:(UIDocumentPasswordView *)arg2;
- (void)didBeginEditingPassword:(UITextField *)arg1 inView:(UIDocumentPasswordView *)arg2;
@end

@protocol UIDynamicAnimatorDelegate <NSObject>

@optional
- (void)dynamicAnimatorDidPause:(UIDynamicAnimator *)arg1;
- (void)dynamicAnimatorWillResume:(UIDynamicAnimator *)arg1;
@end

@protocol UIDynamicItem <NSObject>
@property(nonatomic) struct CGAffineTransform transform;
@property(readonly, nonatomic) struct CGRect bounds;
@property(nonatomic) struct CGPoint center;
@end

@protocol UIFormPeripheral
- (UIView *)assistantView;
- (void)endEditing;
- (void)beginEditing;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIGestureRecognizerDelegatePrivate <UIGestureRecognizerDelegate>

@optional
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 canBePreventedByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 canPreventGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UIInputViewAnimationController <NSObject>
- (void)completeAnimationWithHost:(id <UIInputViewAnimationHost>)arg1 context:(id <NSObject>)arg2;
- (void)performAnimationWithHost:(id <UIInputViewAnimationHost>)arg1 context:(id <NSObject>)arg2;
- (id <NSObject>)prepareAnimationWithHost:(id <UIInputViewAnimationHost>)arg1 startPlacement:(UIInputViewSetPlacement *)arg2 endPlacement:(UIInputViewSetPlacement *)arg3;
@end

@protocol UIInputViewAnimationHost <NSObject>
- (void)setInputViewsHidden:(_Bool)arg1;
- (void)updateToPlacement:(UIInputViewSetPlacement *)arg1 withNormalAnimationsAndNotifications:(_Bool)arg2;
- (struct CGRect)transitioningFrame;
- (UIView *)transitioningView;
- (void)syncToExistingAnimations;
@end

@protocol UIKBCacheableView <NSObject>
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) _Bool cacheDeferable;
@property(readonly, nonatomic) NSString *cacheKey;
- (NSDictionary *)cacheKeysForRenderFlags:(NSArray *)arg1;

@optional
- (void)drawContentsOfRenderers:(NSArray *)arg1;
@end

@protocol UIKBHandwritingStrokeEnabled
@property(readonly, nonatomic) double inkWidth;
@end

@protocol UIKBRenderEffect <NSObject, NSCopying>
@property(nonatomic) double weight;
@property(readonly, nonatomic) SEL renderSelector;
@property(readonly, nonatomic) _Bool renderUnder;
@property(readonly, nonatomic) _Bool isValid;
- (struct CGColor *)CGColor;
@end

@protocol UIKeyInput <UITextInputTraits>
- (void)deleteBackward;
- (void)insertText:(NSString *)arg1;
- (_Bool)hasText;
@end

@protocol UIKeyboardCandidateBarDelegate <NSObject>

@optional
- (void)candidateBarDidScroll:(UIKeyboardCandidateBar *)arg1;
@end

@protocol UIKeyboardCandidateBarLayoutDelegate <UICollectionViewDelegate>
- (struct CGSize)sizeOfDummyItemForCollectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;

@optional
- (void)candidateBarLayoutDidFinishPreparingLayout;
@end

@protocol UIKeyboardCandidateGridCollectionViewControllerDelegate <UIKeyboardCandidateList>
- (unsigned long long)gridCollectionViewNumberOfColumns:(UIKeyboardCandidateGridCollectionViewController *)arg1;
- (unsigned long long)gridCollectionViewSelectedSortMethodIndex:(UIKeyboardCandidateGridCollectionViewController *)arg1;

@optional
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)padInlineFloatingViewExpand:(UIKeyboardCandidateGridCollectionViewController *)arg1;
- (_Bool)padInlineFloatingViewIsExpanded:(UIKeyboardCandidateGridCollectionViewController *)arg1;
- (UIView *)headerViewForCandidateSet:(TIKeyboardCandidateResultSet *)arg1;
@end

@protocol UIKeyboardCandidateGridLayoutDelegate <UICollectionViewDelegate>
- (struct CGSize)rowSizeForGridLayout;
@end

@protocol UIKeyboardCandidateList <NSObject>
- (unsigned long long)selectedSortIndex;
- (NSString *)statisticsIdentifier;
- (TIKeyboardBehaviors *)keyboardBehaviors;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (TIKeyboardCandidate *)currentCandidate;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (_Bool)showCandidate:(TIKeyboardCandidate *)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id <UIKeyboardCandidateListDelegate>)arg1;
- (void)setCandidates:(TIKeyboardCandidateResultSet *)arg1 inlineText:(NSString *)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;

@optional
- (unsigned long long)viewOffsetForCandidateAtIndex:(unsigned long long)arg1;
- (NSString *)inlineText;
- (TIKeyboardCandidateResultSet *)candidates;
- (void)revealHiddenCandidates;
- (void)jumpToCompositions;
- (void)candidatesDidChange;
- (_Bool)hasPreviousPage;
- (_Bool)hasNextPage;
- (_Bool)handleTabKeyWithShift:(_Bool)arg1;
- (_Bool)handleNumberKey:(unsigned long long)arg1;
- (void)setCompletionContext:(NSString *)arg1;
- (void)showCaret:(_Bool)arg1 gradually:(_Bool)arg2;
- (void)setInlineText:(NSString *)arg1;
- (void)setCandidates:(TIKeyboardCandidateResultSet *)arg1 type:(int)arg2 inlineText:(NSString *)arg3 inlineRect:(struct CGRect)arg4 maxX:(double)arg5 layout:(_Bool)arg6;
@end

@protocol UIKeyboardCandidateListDelegate <NSObject>

@optional
- (void)candidateListShouldBeDismissed:(id <UIKeyboardCandidateList>)arg1;
- (void)candidateListSelectionDidChange:(id <UIKeyboardCandidateList>)arg1;
- (void)candidateListAcceptCandidate:(id <UIKeyboardCandidateList>)arg1;
- (void)setCandidateList:(id <UIKeyboardCandidateList>)arg1 updateCandidateView:(_Bool)arg2;
@end

@protocol UIKeyboardCandidateRowViewControllerDelegate <UIKeyboardCandidateList>
@end

@protocol UIKeyboardCandidateViewInline <NSObject>
- (UIView<UIKeyboardCandidateList> *)activeCandidateList;
@end

@protocol UIKeyboardEmojiCategoryControl <NSObject>
- (void)setCategory:(UIKeyboardEmojiCategory *)arg1;
@end

@protocol UIKeyboardEmojiInput <NSObject>
- (void)reloadForCategory:(UIKeyboardEmojiCategory *)arg1;
@end

@protocol UIKeyboardEmojiPressIndicationDelegate <NSObject>

@optional
- (void)removePressIndicator;
- (void)installPressIndicatorAtPoint:(struct CGPoint)arg1;
@end

@protocol UIKeyboardImplGeometryDelegate
@property(nonatomic, getter=isMinimized) _Bool minimized;
- (_Bool)isActive;
- (_Bool)canDismiss;
- (_Bool)shouldSaveMinimizationState;
- (void)implBoundsHeightChangeDone:(double)arg1 suppressNotification:(_Bool)arg2;
- (void)prepareForImplBoundsHeightChange:(double)arg1 suppressNotification:(_Bool)arg2;
@end

@protocol UIKeyboardInput <NSObject>

@optional
- (void)keyboardInputChangedSelection:(id <UIKeyboardInput>)arg1;
- (_Bool)keyboardInputChanged:(id <UIKeyboardInput>)arg1;
- (_Bool)keyboardInputShouldDelete:(id <UIKeyboardInput>)arg1;
- (_Bool)keyboardInput:(id <UIKeyboardInput>)arg1 shouldInsertText:(NSString *)arg2 isMarkedText:(_Bool)arg3;
- (_Bool)keyboardInput:(id <UIKeyboardInput>)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
@end

@protocol UIKeyboardKeyplaneTransitionDelegate
- (void)transitionDidFinish:(_Bool)arg1;
- (void)finishTransitionWithCompletion:(void (^)(void))arg1;
- (void)updateProgress:(double)arg1 startHeight:(double)arg2 endHeight:(double)arg3;
- (void)prepareForTransition;
@end

@protocol UILayoutSupport <NSObject>
@property(readonly, nonatomic) double length;
@end

@protocol UIModalViewDelegate <NSObject>

@optional
- (void)modalView:(UIModalView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)modalView:(UIModalView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentModalView:(UIModalView *)arg1;
- (void)willPresentModalView:(UIModalView *)arg1;
- (void)modalViewCancel:(UIModalView *)arg1;
- (void)modalView:(UIModalView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIMovieScrubberTrackViewDataSource <NSObject>
- (void)movieScrubberTrackView:(UIMovieScrubberTrackView *)arg1 requestThumbnailImageForTimestamp:(NSNumber *)arg2 isSummaryThumbnail:(_Bool)arg3;
- (double)movieScrubberTrackViewThumbnailAspectRatio:(UIMovieScrubberTrackView *)arg1;
- (NSArray *)movieScrubberTrackView:(UIMovieScrubberTrackView *)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(NSNumber *)arg3 endingAt:(NSNumber *)arg4;
- (double)movieScrubberTrackViewDuration:(UIMovieScrubberTrackView *)arg1;
@end

@protocol UIMovieScrubberTrackViewDelegate <NSObject>

@optional
- (double)movieScrubberTrackViewZoomAnimationDelay:(UIMovieScrubberTrackView *)arg1;
- (double)movieScrubberTrackViewZoomAnimationDuration:(UIMovieScrubberTrackView *)arg1;
- (void)movieScrubberTrackViewDidFinishRequestingThumbnails:(UIMovieScrubberTrackView *)arg1;
- (void)movieScrubberTrackViewWillBeginRequestingThumbnails:(UIMovieScrubberTrackView *)arg1;
- (void)movieScrubberTrackViewDidCollapse:(UIMovieScrubberTrackView *)arg1;
- (void)movieScrubberTrackViewDidExpand:(UIMovieScrubberTrackView *)arg1;
- (void)movieScrubberTrackView:(UIMovieScrubberTrackView *)arg1 clampedSizeWidthDelta:(double)arg2 actualSizeWidthDelta:(double)arg3 originXDelta:(double)arg4 minimumVisibleValue:(double)arg5 maximumVisibleValue:(double)arg6;
@end

@protocol UINavigationBarDelegate <UIBarPositioningDelegate>

@optional
- (void)navigationBar:(UINavigationBar *)arg1 didPopItem:(UINavigationItem *)arg2;
- (_Bool)navigationBar:(UINavigationBar *)arg1 shouldPopItem:(UINavigationItem *)arg2;
- (void)navigationBar:(UINavigationBar *)arg1 didPushItem:(UINavigationItem *)arg2;
- (_Bool)navigationBar:(UINavigationBar *)arg1 shouldPushItem:(UINavigationItem *)arg2;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIObjectRestoration
+ (id <UIStateRestoring>)objectWithRestorationIdentifierPath:(NSArray *)arg1 coder:(NSCoder *)arg2;
@end

@protocol UIPDFAnnotationControllerDelegate

@optional
- (UIImage *)marginNoteImage:(UIPDFAnnotation *)arg1 controller:(UIPDFAnnotationController *)arg2;
- (struct CGSize)marginNoteImageSize:(UIPDFAnnotationController *)arg1;
- (struct CGImage *)underlineImage:(struct CGRect)arg1 controller:(UIPDFAnnotationController *)arg2;
- (struct CGImage *)newHighlightMaskImage:(struct CGRect)arg1 controller:(UIPDFAnnotationController *)arg2;
- (void)annotationWasRemoved:(UIPDFAnnotation *)arg1 controller:(UIPDFAnnotationController *)arg2;
- (void)annotation:(UIPDFAnnotation *)arg1 isBeingPressedAtPoint:(struct CGPoint)arg2 controller:(UIPDFAnnotationController *)arg3;
- (void)annotation:(UIPDFAnnotation *)arg1 wasTouchedAtPoint:(struct CGPoint)arg2 controller:(UIPDFAnnotationController *)arg3;
- (void)annotation:(UIPDFAnnotation *)arg1 didEndTrackingAtPoint:(struct CGPoint)arg2 controller:(UIPDFAnnotationController *)arg3;
- (_Bool)willTrackAnnotationAtPoint:(struct CGPoint)arg1 controller:(UIPDFAnnotationController *)arg2;
@end

@protocol UIPDFPageViewDelegate

@optional
- (void)pageWasRendered:(UIPDFPageView *)arg1;
- (Class)classForAnnotationType:(const char *)arg1;
- (void)selectionDidEndTracking:(UIPDFPageView *)arg1;
- (_Bool)selectionWillTrack:(UIPDFPageView *)arg1;
- (void)didTap:(UIPDFPageView *)arg1 atPoint:(struct CGPoint)arg2;
- (_Bool)shouldRecognizeTapIn:(UIPDFPageView *)arg1 atPoint:(struct CGPoint)arg2;
- (void)doubleTapIn:(UIPDFPageView *)arg1 atPoint:(struct CGPoint)arg2;
- (void)resetZoom:(UIPDFPageView *)arg1;
- (void)zoom:(UIPDFPageView *)arg1 to:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 kind:(int)arg4;
@end

@protocol UIPickerTableViewContainerDelegate
- (void)setAllowsMultipleSelection:(_Bool)arg1;
- (_Bool)_usesCheckSelection;
- (_Bool)_soundsEnabled;
- (void)_sendCheckedRow:(long long)arg1 inTableView:(UITableView *)arg2 checked:(_Bool)arg3;

@optional
- (void)pickerTableView:(UIPickerTableView *)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;
- (void)_pickerTableViewDidChangeContentOffset:(UIPickerTableView *)arg1;
@end

@protocol UIPickerViewDataSource <NSObject>
- (long long)pickerView:(UIPickerView *)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(UIPickerView *)arg1;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIPickerViewScrollTesting
- (void)_performScrollTest:(NSString *)arg1 withIterations:(long long)arg2 rowsToScroll:(long long)arg3 inComponent:(long long)arg4;
@end

@protocol UIPopoverBackgroundViewMethods
+ (double)arrowHeight;
+ (struct UIEdgeInsets)contentViewInsets;
+ (double)arrowBase;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>

@optional
- (void)popoverPresentationController:(UIPopoverPresentationController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)arg1;
- (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)arg1;
@end

@protocol UIPrinterBrowserOwner <NSObject>
@property(retain, nonatomic) PKPrinter *printer;
- (void)cancelPrinting;
- (_Bool)filtersPrinters;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dismissAnimated:(_Bool)arg1;

@optional
- (_Bool)shouldShowPrinter:(PKPrinter *)arg1;
- (void)setUserSelectedPrinter:(_Bool)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UIScrollViewIntersectionDelegate
- (void)scrollView:(UIScrollView *)arg1 didFinishPanGesture:(UIPanGestureRecognizer *)arg2;
- (void)scrollView:(UIScrollView *)arg1 didPanWithGesture:(UIPanGestureRecognizer *)arg2;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISplittableInputView <NSObject>
- (void)didEndSplitTransition;
- (void)willBeginSplitTransition;
- (void)updateSplitSubviewContraintsWithLeftContentSize:(struct CGSize)arg1 rightContentSize:(struct CGSize)arg2;
- (void)layoutSplitSubviewsWithLeftContentSize:(struct CGSize)arg1 rightContentSize:(struct CGSize)arg2;
- (void)updateMergedSubviewConstraints;
- (void)layoutMergedSubviews;
@end

@protocol UIStateRestoring <NSObject>

@optional
@property(readonly, nonatomic) Class objectRestorationClass;
@property(readonly, nonatomic) id <UIStateRestoring> restorationParent;
- (void)applicationFinishedRestoringState;
- (void)decodeRestorableStateWithCoder:(NSCoder *)arg1;
- (void)encodeRestorableStateWithCoder:(NSCoder *)arg1;
@end

@protocol UIStatusBarServerClient
- (void)statusBarServer:(UIStatusBarServer *)arg1 didReceiveDoubleHeightStatusString:(NSString *)arg2 forStyle:(long long)arg3;
- (void)statusBarServer:(UIStatusBarServer *)arg1 didReceiveGlowAnimationState:(_Bool)arg2 forStyle:(long long)arg3;
- (void)statusBarServer:(UIStatusBarServer *)arg1 didReceiveStyleOverrides:(int)arg2;
- (void)statusBarServer:(UIStatusBarServer *)arg1 didReceiveStatusBarData:(const CDStruct_0e61b686 *)arg2 withActions:(int)arg3;
@end

@protocol UIStatusBarStateObserver <NSObject>
- (void)statusBarStateProvider:(id <UIStatusBarStateProvider>)arg1 didPostStatusBarData:(const CDStruct_0e61b686 *)arg2 withActions:(int)arg3;

@optional
- (void)statusBarStateProvider:(id <UIStatusBarStateProvider>)arg1 didChangeDoubleHeightStatusStringForStyle:(long long)arg2;
@end

@protocol UIStatusBarTinting <NSObject>
- (UIColor *)_statusBarTintColor;
@end

@protocol UITabBarDelegate <NSObject>

@optional
- (void)tabBar:(UITabBar *)arg1 didEndCustomizingItems:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBar:(UITabBar *)arg1 willEndCustomizingItems:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBar:(UITabBar *)arg1 didBeginCustomizingItems:(NSArray *)arg2;
- (void)tabBar:(UITabBar *)arg1 willBeginCustomizingItems:(NSArray *)arg2;
- (void)tabBar:(UITabBar *)arg1 didSelectItem:(UITabBarItem *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITableViewSubviewReusing <NSObject>
@property(readonly, nonatomic) NSString *reuseIdentifier;
- (void)prepareForReuse;
- (id)initWithReuseIdentifier:(NSString *)arg1;
@end

@protocol UITextAutoscrolling
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
@end

@protocol UITextDocumentProxy <UIKeyInput>
@property(readonly, nonatomic) NSString *documentContextAfterInput;
@property(readonly, nonatomic) NSString *documentContextBeforeInput;
- (void)adjustTextPositionByCharacterOffset:(long long)arg1;
@end

@protocol UITextEffectsOrdering
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (int)textEffectsVisibilityLevel;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextInput <UIKeyInput>
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (UITextRange *)characterRangeAtPoint:(struct CGPoint)arg1;
- (UITextPosition *)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(UITextRange *)arg2;
- (UITextPosition *)closestPositionToPoint:(struct CGPoint)arg1;
- (NSArray *)selectionRectsForRange:(UITextRange *)arg1;
- (struct CGRect)caretRectForPosition:(UITextPosition *)arg1;
- (struct CGRect)firstRectForRange:(UITextRange *)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(UITextRange *)arg2;
- (long long)baseWritingDirectionForPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (UITextRange *)characterRangeByExtendingPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (UITextPosition *)positionWithinRange:(UITextRange *)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (long long)comparePosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (UITextPosition *)positionFromPosition:(UITextPosition *)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (UITextPosition *)positionFromPosition:(UITextPosition *)arg1 offset:(long long)arg2;
- (UITextRange *)textRangeFromPosition:(UITextPosition *)arg1 toPosition:(UITextPosition *)arg2;
- (void)unmarkText;
- (void)setMarkedText:(NSString *)arg1 selectedRange:(struct _NSRange)arg2;
- (void)replaceRange:(UITextRange *)arg1 withText:(NSString *)arg2;
- (NSString *)textInRange:(UITextRange *)arg1;

@optional
@property(nonatomic) long long selectionAffinity;
@property(readonly, nonatomic) UIView *textInputView;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (void)dictationRecognitionFailed;
- (void)dictationRecordingDidEnd;
- (void)insertDictationResult:(NSArray *)arg1;
- (long long)characterOffsetOfPosition:(UITextPosition *)arg1 withinRange:(UITextRange *)arg2;
- (UITextPosition *)positionWithinRange:(UITextRange *)arg1 atCharacterOffset:(long long)arg2;
- (NSDictionary *)textStylingAtPosition:(UITextPosition *)arg1 inDirection:(long long)arg2;
- (_Bool)shouldChangeTextInRange:(UITextRange *)arg1 replacementText:(NSString *)arg2;
@end

@protocol UITextInputAdditions
@property(readonly, nonatomic, getter=_caretRect) struct CGRect caretRect;
@property(readonly, nonatomic, getter=isEditing) _Bool editing;
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (UITextInteractionAssistant *)interactionAssistant;
- (UIView *)textInputView;

@optional
- (_Bool)_useGesturesForEditableContent;
- (UIView *)_textInputViewForAddingGestureRecognizers;
@end

@protocol UITextInputControllerDelegate <NSObject>

@optional
- (void)textInputDidChangeSelection:(UITextInputController *)arg1;
- (struct _NSRange)textInput:(UITextInputController *)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)textInputDidChange:(UITextInputController *)arg1;
- (void)textInput:(UITextInputController *)arg1 prepareAttributedTextForInsertion:(NSMutableAttributedString *)arg2;
- (_Bool)textInput:(UITextInputController *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (_Bool)textInputShouldBeginEditing:(UITextInputController *)arg1;
@end

@protocol UITextInputDelegate <NSObject>
- (void)textDidChange:(id <UITextInput>)arg1;
- (void)textWillChange:(id <UITextInput>)arg1;
- (void)selectionDidChange:(id <UITextInput>)arg1;
- (void)selectionWillChange:(id <UITextInput>)arg1;
@end

@protocol UITextInputPrivate <UITextInput, UITextInputTokenizer, UITextInputTraits_Private>
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (_Bool)hasSelection;
- (void)selectAll;
- (_Bool)hasContent;
- (struct _NSRange)selectionRange;
- (UITextInputTraits *)textInputTraits;

@optional
@property(nonatomic) long long selectionGranularity;
- (void)_insertAttributedTextWithoutClosingTyping:(NSAttributedString *)arg1;
- (UIFont *)fontForCaretSelection;
- (UIColor *)textColorForCaretSelection;
- (void)replaceRangeWithTextWithoutClosingTyping:(UITextRange *)arg1 replacementText:(NSString *)arg2;
- (_Bool)_shouldRepeatInsertText:(NSString *)arg1;
- (double)_delayUntilRepeatInsertText:(NSString *)arg1;
- (_Bool)isAutoFillMode;
- (void)acceptedAutoFillWord:(NSString *)arg1;
- (UITextRange *)rangeWithTextAlternatives:(id *)arg1 atPosition:(UITextPosition *)arg2;
- (NSArray *)metadataDictionariesForDictationResults;
- (void)insertDictationResult:(NSArray *)arg1 withCorrectionIdentifier:(id)arg2;
- (void)streamingDictationDidEnd;
- (void)streamingDictationDidBegin;
- (UIView *)automaticallySelectedOverlay;
- (void)setBottomBufferHeight:(double)arg1;
- (void)handleKeyWebEvent:(WebEvent *)arg1;
- (_Bool)requiresKeyEvents;
@end

@protocol UITextInputTokenizer <NSObject>
- (_Bool)isPosition:(UITextPosition *)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (UITextPosition *)positionFromPosition:(UITextPosition *)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(UITextPosition *)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (UITextRange *)rangeEnclosingPosition:(UITextPosition *)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
@end

@protocol UITextInputTraits <NSObject>

@optional
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@end

@protocol UITextInputTraits_Private <NSObject, UITextInputTraits>
- (void)takeTraitsFrom:(id <UITextInputTraits>)arg1;

@optional
@property(nonatomic) _Bool disablePrediction;
@property(copy, nonatomic) NSString *responseContext;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool deferBecomingResponder;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) _Bool learnsCorrections;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) int textLoupeVisibility;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@end

@protocol UITextInput_Internal
@property(readonly, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;
- (_Bool)_usesAsynchronousProtocol;
- (void)_phraseBoundaryGesture:(UIPhraseBoundaryGestureRecognizer *)arg1;
- (UIPhraseBoundaryGestureRecognizer *)_newPhraseBoundaryGestureRecognizer;
- (_Bool)_hasMarkedText;
- (void)_unmarkText;
- (void)_setMarkedText:(NSString *)arg1 selectedRange:(struct _NSRange)arg2;
- (void)_setGestureRecognizers;
- (UITextInputArrowKeyHistory *)_moveToEndOfDocument:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToEndOfLine:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToEndOfWord:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToStartOfDocument:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToStartOfLine:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveToStartOfWord:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveRight:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveLeft:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveDown:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (UITextInputArrowKeyHistory *)_moveUp:(_Bool)arg1 withHistory:(UITextInputArrowKeyHistory *)arg2;
- (_Bool)_shouldPerformUICalloutBarButtonReplaceAction:(SEL)arg1 forText:(NSString *)arg2 checkAutocorrection:(_Bool)arg3;
- (struct _NSRange)_selectedNSRange;
- (void)_selectAll;
- (long long)_selectionAffinity;
- (UITextPosition *)_positionFromPosition:(UITextPosition *)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(_Bool)arg4;
- (void)_setSelectedTextRange:(UITextRange *)arg1 withAffinityDownstream:(_Bool)arg2;
- (void)_scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (UIFont *)_fontForCaretSelection;
- (UIColor *)_textColorForCaretSelection;
- (UITextPosition *)_clampedpositionFromPosition:(UITextPosition *)arg1 offset:(int)arg2;
- (void)_deleteForwardAndNotify:(_Bool)arg1;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;
- (void)_deleteToEndOfLine;
- (void)_deleteToStartOfLine;
- (void)_deleteByWord;
- (UITextPosition *)_findPleasingWordBoundaryFromPosition:(UITextPosition *)arg1;
- (UITextRange *)_fullRange;
- (UITextRange *)_rangeOfText:(NSString *)arg1 endingAtPosition:(UITextPosition *)arg2;
- (UITextRange *)_rangeOfParagraphEnclosingPosition:(UITextPosition *)arg1;
- (UITextRange *)_rangeOfLineEnclosingPosition:(UITextPosition *)arg1;
- (UITextRange *)_rangeOfEnclosingWord:(UITextPosition *)arg1;
- (UITextPosition *)_positionAtStartOfWords:(unsigned long long)arg1 beforePosition:(UITextPosition *)arg2;
- (void)_replaceCurrentWordWithText:(NSString *)arg1;
- (void)_setCaretSelectionAtEndOfSelection;
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)arg1;
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;
- (void)_expandSelectionToBackwardDeletionCluster;
- (void)_moveCurrentSelection:(int)arg1;
- (void)_extendCurrentSelection:(int)arg1;
- (_Bool)_hasMarkedTextOrRangedSelection;
- (_Bool)_isEmptySelection;
- (struct CGRect)_selectionClipRect;
- (_Bool)_selectionAtDocumentEnd;
- (_Bool)_selectionAtDocumentStart;
- (_Bool)_selectionAtWordStart;
- (NSString *)_wordContainingCaretSelection;
- (unsigned int)_characterInRelationToRangedSelection:(int)arg1;
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;
- (unsigned int)_characterBeforeCaretSelection;
- (unsigned int)_characterAfterCaretSelection;
- (NSString *)_fullText;
- (struct _NSRange)_nsrangeForTextRange:(UITextRange *)arg1;
- (int)_indexForTextPosition:(UITextPosition *)arg1;

@optional
@property(readonly, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
- (void)_setInternalGestureRecognizers;
- (_Bool)_isInteractiveTextSelectionDisabled;
- (struct CGRect)_lastRectForRange:(UITextRange *)arg1;
@end

@protocol UITextLinkInteraction
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)cancelInteractionWithLink;
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (_Bool)isInteractingWithLink;
- (void)tapLinkAtPoint:(struct CGPoint)arg1;
- (_Bool)mightHaveLinks;
@end

@protocol UITraitEnvironment <NSObject>
@property(readonly, nonatomic) UITraitCollection *traitCollection;
- (void)traitCollectionDidChange:(UITraitCollection *)arg1;
@end

@protocol UIVideoEditorControllerDelegate <NSObject>

@optional
- (void)videoEditorControllerDidCancel:(UIVideoEditorController *)arg1;
- (void)videoEditorController:(UIVideoEditorController *)arg1 didFailWithError:(NSError *)arg2;
- (void)videoEditorController:(UIVideoEditorController *)arg1 didSaveEditedVideoToPath:(NSString *)arg2;
@end

@protocol UIVideoEditorControllerDelegatePrivate <UIVideoEditorControllerDelegate>

@optional
- (void)videoEditorController:(UIViewController *)arg1 didTrimVideoWithOptions:(NSDictionary *)arg2;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerAnimatedTransitioningEx <UIViewControllerAnimatedTransitioning>
- (void)setOperation:(long long)arg1;
- (long long)operation;
- (void)setInteractionAborted:(_Bool)arg1;
- (_Bool)interactionAborted;
- (void)setInteractionController:(UIPercentDrivenInteractiveTransition *)arg1;
- (UIPercentDrivenInteractiveTransition *)interactionController;

@optional
- (UIWindow *)window;
@end

@protocol UIViewControllerContextTransitioning <NSObject>
- (struct CGRect)finalFrameForViewController:(UIViewController *)arg1;
- (struct CGRect)initialFrameForViewController:(UIViewController *)arg1;
- (struct CGAffineTransform)targetTransform;
- (UIView *)viewForKey:(NSString *)arg1;
- (UIViewController *)viewControllerForKey:(NSString *)arg1;
- (void)completeTransition:(_Bool)arg1;
- (void)cancelInteractiveTransition;
- (void)finishInteractiveTransition;
- (void)updateInteractiveTransition:(double)arg1;
- (long long)presentationStyle;
- (_Bool)transitionWasCancelled;
- (_Bool)isInteractive;
- (_Bool)isAnimated;
- (UIView *)containerView;
@end

@protocol UIViewControllerContextTransitioningEx <UIViewControllerContextTransitioning>
@property(nonatomic, getter=_allowUserInteraction, setter=_setAllowUserInteraction:) _Bool _allowUserInteraction;
@property(nonatomic, setter=_setPercentOffset:) double _percentOffset;
@property(retain, nonatomic, setter=_setContainerViews:) NSArray *_containerViews;
- (void)_interactivityDidChange:(_Bool)arg1;
- (void)__runAlongsideAnimations;
@end

@protocol UIViewControllerInteractiveTransitioning <NSObject>
- (void)startInteractiveTransition:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (long long)completionCurve;
- (double)completionSpeed;
@end

@protocol UIViewControllerKeyboardContextTransitioning <NSObject>
@property(readonly, nonatomic) struct CGRect toKeyboardFrame;
@property(readonly, nonatomic) UIView *toKeyboard;
@property(readonly, nonatomic) struct CGRect fromKeyboardFrame;
@property(readonly, nonatomic) UIView *fromKeyboard;
@property(readonly, nonatomic) id <UIViewControllerContextTransitioning> mainContext;
@end

@protocol UIViewControllerPresenting <NSObject>
- (UIPresentationController *)_presentationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIViewControllerRestoration
+ (UIViewController *)viewControllerWithRestorationIdentifierPath:(NSArray *)arg1 coder:(NSCoder *)arg2;
@end

@protocol UIViewControllerTransitionCoordinator <UIViewControllerTransitionCoordinatorContext>
- (void)notifyWhenInteractionEndsUsingBlock:(void (^)(id <UIViewControllerTransitionCoordinatorContext>))arg1;
- (_Bool)animateAlongsideTransitionInView:(UIView *)arg1 animation:(void (^)(id <UIViewControllerTransitionCoordinatorContext>))arg2 completion:(void (^)(id <UIViewControllerTransitionCoordinatorContext>))arg3;
- (_Bool)animateAlongsideTransition:(void (^)(id <UIViewControllerTransitionCoordinatorContext>))arg1 completion:(void (^)(id <UIViewControllerTransitionCoordinatorContext>))arg2;
@end

@protocol UIViewControllerTransitionCoordinatorContext <NSObject>
- (struct CGAffineTransform)targetTransform;
- (UIView *)containerView;
- (UIView *)viewForKey:(NSString *)arg1;
- (UIViewController *)viewControllerForKey:(NSString *)arg1;
- (long long)completionCurve;
- (double)completionVelocity;
- (double)percentComplete;
- (double)transitionDuration;
- (_Bool)isCancelled;
- (_Bool)isInteractive;
- (_Bool)initiallyInteractive;
- (long long)presentationStyle;
- (_Bool)isAnimated;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWKInteractionViewProtocol
- (void)_cancelLongPressGestureRecognizer;
- (NSArray *)webSelectionRects;
- (_Bool)pointIsInAssistedNode:(struct CGPoint)arg1;
- (_Bool)hasSelectablePositionAtPoint:(struct CGPoint)arg1;
- (_Bool)hasMarkedText;
- (NSString *)markedText;
- (void)applyAutocorrection:(NSString *)arg1 toString:(NSString *)arg2 withCompletionHandler:(void (^)(UIWKAutocorrectionRects *))arg3;
- (void)requestAutocorrectionRectsForString:(NSString *)arg1 withCompletionHandler:(void (^)(UIWKAutocorrectionRects *))arg2;
- (void)requestAutocorrectionContextWithCompletionHandler:(void (^)(UIWKAutocorrectionContext *))arg1;
- (struct CGRect)textLastRect;
- (struct CGRect)textFirstRect;
- (void)changeSelectionWithTouchesFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 withGesture:(long long)arg3 withState:(long long)arg4;
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3;
- (void)changeSelectionWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;

@optional
- (void)moveByOffset:(long long)arg1;
- (struct CGRect)unobscuredContentRect;
- (double)inverseScale;
- (UIView *)unscaledView;
- (void)selectWordBackward;
- (_Bool)isReplaceAllowed;
- (void)selectWordForReplacement;
- (void)replaceText:(NSString *)arg1 withText:(NSString *)arg2;
- (NSString *)selectedText;
- (_Bool)pointIsNearMarkedText:(struct CGPoint)arg1;
- (void)requestDictationContext:(void (^)(NSString *, NSString *, NSString *))arg1;
- (void)replaceDictatedText:(NSString *)arg1 withText:(NSString *)arg2;
- (void)clearSelection;
- (void)changeBlockSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 forHandle:(long long)arg3;
- (void)changeSelectionWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 baseIsStart:(_Bool)arg3 withFlags:(long long)arg4;
@end

@protocol UIWebFileUploadPanelDelegate <NSObject>

@optional
- (void)fileUploadPanelDidDismiss:(UIWebFileUploadPanel *)arg1;
@end

@protocol UIWebFindOnPageHighlighter <NSObject>
@property(readonly, nonatomic) unsigned long long highlightedMatchIndex;
@property(readonly, nonatomic) unsigned long long numberOfMatches;
@property(nonatomic) id <UIWebFindOnPageHighlighterDelegate> delegate;
@property(readonly, copy, nonatomic) NSString *searchText;
- (void)highlightPreviousMatch;
- (void)highlightNextMatch;
- (void)setSelectionRect:(struct CGRect)arg1 textRects:(NSArray *)arg2 contentViews:(NSArray *)arg3 wobble:(_Bool)arg4;
- (void)setSearchText:(NSString *)arg1 matchLimit:(unsigned long long)arg2;
@end

@protocol UIWebFormAccessoryDelegate
- (void)accessoryClear;
- (void)accessoryAutoFill;
- (void)accessoryTab:(_Bool)arg1;
- (void)accessoryDone;
@end

@protocol UIWebFormControl
- (void)controlEndEditing;
- (void)controlBeginEditing;
- (UIView *)controlView;
@end

@protocol UIWebPDFSearchOperationDelegate
- (void)search:(UIWebPDFSearchOperation *)arg1 hasPartialResults:(NSArray *)arg2;
- (void)searchDidFinish:(UIWebPDFSearchOperation *)arg1;
- (void)searchLimitHit:(UIWebPDFSearchOperation *)arg1;
- (void)searchWasCancelled:(UIWebPDFSearchOperation *)arg1;
- (void)searchDidTimeOut:(UIWebPDFSearchOperation *)arg1;
- (void)searchDidBegin:(UIWebPDFSearchOperation *)arg1;
@end

@protocol UIWebPDFViewDelegate

@optional
- (NSString *)passwordForPDFView:(UIWebPDFView *)arg1;
- (void)handleLongPressOnLink:(NSString *)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 contentRect:(struct CGRect)arg4;
- (void)handleLinkClick:(NSString *)arg1 inRect:(struct CGRect)arg2;
- (void)resetZoom:(UIWebPDFView *)arg1;
- (void)pdfView:(UIWebPDFView *)arg1 zoomToRect:(struct CGRect)arg2 forPoint:(struct CGPoint)arg3 considerHeight:(_Bool)arg4;
- (void)didDetermineDocumentBounds:(UIWebPDFView *)arg1;
@end

@protocol UIWebPDFViewPrivateDelegate
- (void)didScroll:(UIWebPDFView *)arg1;
@end

@protocol UIWebRotatingNodePopoverDelegate
- (void)popoverWasDismissed:(UIWebRotatingNodePopover *)arg1;
@end

@protocol UIWebSelectedItemPrivate
- (void)unselect;
- (void)setSelected:(_Bool)arg1;
- (_Bool)isGroup;
- (_Bool)selected;
- (DOMNode *)node;
@end

@protocol UIWebSelectionBlock <NSObject>
- (DOMDocument *)enclosingDocument;
- (DOMRange *)rangeOfContents;
- (_Bool)canShrinkDirectlyToTextOnly;
- (_Bool)containsRange:(DOMRange *)arg1;
- (DOMRange *)asDomRange;
- (DOMNode *)asDomNode;
- (_Bool)selectable;
- (_Bool)rendersAsBlock;
- (_Bool)strictlyContainsBlock:(id <UIWebSelectionBlock>)arg1;
- (_Bool)containsBlock:(id <UIWebSelectionBlock>)arg1;
- (_Bool)isSameBlock:(id <UIWebSelectionBlock>)arg1;
- (id <UIWebSelectionBlock>)largerParent;
- (id <UIWebSelectionBlock>)parentBlock;
- (struct CGRect)boundingRectAndInsideFixedPosition:(int *)arg1;
- (struct CGRect)boundingRect;
- (WebFrame *)webFrame;
@end

@protocol UIWebTouchEventsGestureRecognizerDelegate
- (_Bool)isAnyTouchOverActiveArea:(NSSet *)arg1;
- (_Bool)shouldIgnoreWebTouch;
@end

@protocol WebDocumentText <NSObject>
- (void)deselectAll;
- (void)selectAll;
- (NSString *)selectedString;
- (NSString *)string;
- (_Bool)supportsTextEncoding;
@end

@protocol WebFormDelegate <NSObject>
- (void)willSendSubmitEventToForm:(DOMHTMLFormElement *)arg1 inFrame:(WebFrame *)arg2 withValues:(NSDictionary *)arg3;
- (void)frame:(WebFrame *)arg1 sourceFrame:(WebFrame *)arg2 willSubmitForm:(DOMElement *)arg3 withValues:(NSDictionary *)arg4 submissionListener:(id <WebFormSubmissionListener>)arg5;
- (_Bool)textField:(DOMHTMLInputElement *)arg1 doCommandBySelector:(SEL)arg2 inFrame:(WebFrame *)arg3;
- (void)didFocusTextField:(DOMHTMLInputElement *)arg1 inFrame:(WebFrame *)arg2;
- (void)textDidChangeInTextArea:(DOMHTMLTextAreaElement *)arg1 inFrame:(WebFrame *)arg2;
- (void)textDidChangeInTextField:(DOMHTMLInputElement *)arg1 inFrame:(WebFrame *)arg2;
- (void)textFieldDidEndEditing:(DOMHTMLInputElement *)arg1 inFrame:(WebFrame *)arg2;
- (void)textFieldDidBeginEditing:(DOMHTMLInputElement *)arg1 inFrame:(WebFrame *)arg2;
@end

@protocol WebPDFViewPlaceholderDelegate
- (void)setBackgroundColor:(UIColor *)arg1;
- (struct CGPDFDocument *)cgPDFDocument;

@optional
- (void)didCompleteLayout;
- (void)viewWillClose;
@end

@protocol WebUIBrowserLoadingControllerDelegate <NSObject>

@optional
- (void)webThreadWebView:(WebView *)arg1 didLayout:(unsigned long long)arg2;
- (void)webView:(WebView *)arg1 didHandleOnloadEventsForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didClearWindowObject:(WebScriptObject *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didChangeLocationWithinPageForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didFinishLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didCommitLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didFailProvisionalLoadWithError:(NSError *)arg2 forFrame:(WebFrame *)arg3;
- (void)webView:(WebView *)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(WebFrame *)arg2;
- (void)webView:(WebView *)arg1 didStartProvisionalLoadForFrame:(WebFrame *)arg2;
- (_Bool)browserLoadingControllerShouldEvaluateUserEnteredJavaScript:(WebUIBrowserLoadingController *)arg1;
- (NSString *)browserLoadingController:(WebUIBrowserLoadingController *)arg1 userVisibleStringForURL:(NSURL *)arg2;
- (void)browserLoadingControllerDidUpdateLoadingState:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingController:(WebUIBrowserLoadingController *)arg1 didFinishLoadingWithError:(NSError *)arg2 dataSource:(WebDataSource *)arg3;
- (void)browserLoadingControllerDidStartLoading:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingControllerWillStartUserDrivenLoad:(WebUIBrowserLoadingController *)arg1;
- (_Bool)browserLoadingControllerShouldShowProvisionalURLs:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingController:(WebUIBrowserLoadingController *)arg1 failedToStartLoadingRequest:(NSURLRequest *)arg2 error:(NSError *)arg3;
- (void)browserLoadingController:(WebUIBrowserLoadingController *)arg1 willLoadRequest:(NSURLRequest *)arg2 userDriven:(_Bool)arg3;
- (void)browserLoadingControllerDidUpdateEstimatedProgress:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingControllerDidUpdateSecurity:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingControllerDidUpdateBackForward:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingControllerDidUpdateTitle:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingControllerDidUpdateURLString:(WebUIBrowserLoadingController *)arg1;
- (void)browserLoadingControllerDidUpdateURL:(WebUIBrowserLoadingController *)arg1;
@end

@protocol _EditScriptData <NSObject>
+ (id <_EditScriptData>)EditScriptDataWithArray:(NSArray *)arg1;
+ (id <_EditScriptData>)EditScriptDataWithString:(NSString *)arg1 chunkSize:(long long)arg2;
- (long long)indexOfFirstDifferenceWithOtherData:(id <_EditScriptData>)arg1 shouldReverseIterate:(_Bool)arg2;
- (long long)characterIndexForItem:(long long)arg1;
- (long long)lengthOfItem:(long long)arg1;
- (NSString *)stringValue;
- (NSString *)stringAtIndex:(long long)arg1;
- (long long)length;
@end

@protocol _NSFileProviderHost
@end

@protocol _NSFileProviderVendor
- (void)_URLForItemIdentifier:(NSString *)arg1 completion:(void (^)(NSError *, NSURL *))arg2;
- (void)_identifierForItemAtURL:(NSURL *)arg1 completion:(void (^)(NSError *, NSString *))arg2;
- (void)_stopProvidingItemAtURL:(NSURL *)arg1 completion:(void (^)(NSError *))arg2;
- (void)_itemChangedAtURL:(NSURL *)arg1 completion:(void (^)(NSError *))arg2;
- (void)_startProvidingItemAtURL:(NSURL *)arg1 completion:(void (^)(NSError *))arg2;
- (void)_providePlaceholderAtURL:(NSURL *)arg1 completion:(void (^)(NSURL *, NSError *))arg2;
- (void)_performInitialSetupWithCompletion:(void (^)(NSString *, NSURL *, NSError *))arg1;
@end

@protocol _UIActivityGroupViewDelegateFlowLayout <UICollectionViewDelegateFlowLayout>
- (UIView *)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 needsContainerViewForDraggingItemAtIndexPath:(NSIndexPath *)arg3;
- (NSIndexPath *)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 moveItemAtIndexPath:(NSIndexPath *)arg3 toIndexPath:(NSIndexPath *)arg4;
@end

@protocol _UIAlertActionRepresenting <NSObject>
- (void)_action:(UIAlertAction *)arg1 changedToChecked:(_Bool)arg2;
- (void)_action:(UIAlertAction *)arg1 changedToEnabled:(_Bool)arg2;
@end

@protocol _UIAlertControllerTextFieldViewControllerContaining <NSObject>
- (void)_returnKeyPressedInLastTextField;
@end

@protocol _UIAppearanceContainer <_UIAppearanceRestriction>
- (Class)_appearanceGuideClass;
- (id <_UIAppearanceContainer>)_appearanceContainer;
@end

@protocol _UIAppearanceRestriction <UIAppearanceContainer>
+ (_Bool)_preventsAppearanceProxyCustomization;
@end

@protocol _UIBackdropViewGraphicsQualityChangeDelegate
- (void)backdropView:(_UIBackdropView *)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (_UIBackdropViewSettings *)backdropView:(_UIBackdropView *)arg1 willChangeToGraphicsQuality:(long long)arg2;
@end

@protocol _UIBarPositioningInternal <NSObject>
- (long long)_barPosition;
- (void)_setBarPosition:(long long)arg1;
@end

@protocol _UIBasicAnimationFactory <NSObject>
- (CABasicAnimation *)_basicAnimationForView:(UIView *)arg1 withKeyPath:(NSString *)arg2;

@optional
- (CAMediaTimingFunction *)_timingFunctionForAnimationInView:(UIView *)arg1 withKeyPath:(NSString *)arg2;
- (CAMediaTimingFunction *)_timingFunctionForAnimation;
@end

@protocol _UIContentContainerInternal <UIContentContainer>
- (void)_systemLayoutFittingSizeDidChangeForChildContentContainer:(id <UIContentContainer>)arg1 childViewController:(UIViewController *)arg2;
- (_Bool)_monitorsSystemLayoutFittingSize;

@optional
- (struct CGRect)_frameForChildContentContainer:(id <UIContentContainer>)arg1;
@end

@protocol _UIDocumentPickerExtensionViewController <NSObject>
- (void)_documentPickerDidDismiss;
- (void)_prepareWithExtensionInfo:(NSDictionary *)arg1 completionHandler:(void (^)(void))arg2;
- (void)_setUploadURLWrapper:(_UIDocumentPickerNSURLWrapper *)arg1;
- (void)_setPickerMode:(unsigned long long)arg1;
- (void)_setPickableTypes:(NSArray *)arg1;
@end

@protocol _UIDocumentPickerOverviewDelegate <NSObject>
- (void)overviewController:(_UIDocumentPickerOverviewViewController *)arg1 selectedAuxiliaryOptionWithIdentifier:(NSString *)arg2;
- (void)overviewController:(_UIDocumentPickerOverviewViewController *)arg1 selectedDocumentPickerWithIdentifier:(NSString *)arg2;
@end

@protocol _UIDocumentPickerRemoteViewControllerContaining
- (void)_stitchFileCreationAtURL:(NSURL *)arg1;
- (void)_preferredContentSizeChanged:(struct CGSize)arg1;
- (void)_dismissWithOption:(NSString *)arg1;
- (void)_didSelectPicker;
- (void)_dismissViewController;
- (void)_didSelectURL:(NSURL *)arg1;
@end

@protocol _UIDocumentPickerServiceInvalidating <NSObject>
- (void)invalidate;
@end

@protocol _UIDocumentPickerViewController <NSObject>
- (void)_documentPickerDidDismiss;
- (void)_prepareForDisplayWithCompletion:(void (^)(struct CGSize))arg1;
- (void)_showDefaultPicker;
- (void)_setAuxiliaryOptions:(NSArray *)arg1;
- (void)_setUploadURLWrapper:(_UIDocumentPickerNSURLWrapper *)arg1;
- (void)_setPickerMode:(unsigned long long)arg1;
- (void)_setPickableTypes:(NSArray *)arg1;
@end

@protocol _UIDocumentPickerViewControllerHost <NSObject>
- (void)_stitchFileCreationAtURL:(NSURL *)arg1;
- (void)_preferredContentSizeChanged:(struct CGSize)arg1;
- (void)_dismissWithOption:(NSString *)arg1;
- (void)_didSelectPicker;
- (void)_dismissViewController;
- (void)_didSelectURLWrapper:(_UIDocumentPickerNSURLWrapper *)arg1;
@end

@protocol _UIDynamicCaretDocumentContentDelegate <NSObject>
- (void)setDocumentHasContent:(_Bool)arg1;
@end

@protocol _UIGestureRecognizerServerInterface <NSObject>
- (void)ipc_requestGestureRecognizerInstructionForContextID:(unsigned int)arg1 withInitialTouchTimestamp:(double)arg2 reply:(void (^)(long long))arg3;
- (void)ipc_removeGestureRecognizerStateForContextId:(unsigned int)arg1 withInitialTouchTimestamp:(double)arg2;
- (void)ipc_setGestureRecognizerState:(long long)arg1 forGestureRecognizersInContextId:(unsigned int)arg2 affectingContextId:(unsigned int)arg3 withInitialTouchTimestamp:(double)arg4 lastTouchTimestamp:(double)arg5;
- (void)ipc_setGestureRecognizerState:(long long)arg1 forGestureRecognizersInContextId:(unsigned int)arg2 withInitialTouchTimestamp:(double)arg3 lastTouchTimestamp:(double)arg4;
@end

@protocol _UIHostedTextServiceSessionDelegate <NSObject>
- (void)dismissHostedTextServiceSession:(_UIHostedTextServiceSession *)arg1 animated:(_Bool)arg2;
@end

@protocol _UIIVCInterface <NSObject>
@property(retain, nonatomic) id <_UIIVCResponseDelegate> responseDelegate;
- (void)_handleInputViewControllerState:(_UIInputViewControllerState *)arg1;
- (void)_tearDownRemoteService;
@end

@protocol _UIIVCResponseDelegate <NSObject>
- (void)_performInputViewControllerOutput:(_UIInputViewControllerOutput *)arg1;
@end

@protocol _UIIVCResponseDelegateImpl <_UIIVCResponseDelegate>
- (void)_requestInputManagerSync;
@end

@protocol _UIKeyboardArbitration
- (void)signalKeyboardChanged:(_UIKeyboardChangedInformation *)arg1;
- (void)setWindowContextID:(unsigned int)arg1 forKeyboard:(_Bool)arg2;
- (void)startArbitrationWithExpectedState:(_UIKeyboardChangedInformation *)arg1;
@end

@protocol _UIKeyboardArbitrationClient
- (void)keyboardChanged:(_UIKeyboardChangedInformation *)arg1;
@end

@protocol _UILayoutBaselineUpdating <NSObject>
- (void)_updateBaselineInformationDependentOnBounds;
@end

@protocol _UIMultilineTextContentSizing <NSObject>
- (void)_setInSecondConstraintsPass:(_Bool)arg1;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
@end

@protocol _UIQueuingScrollViewDataSource <NSObject>
- (void)queuingScrollView:(_UIQueuingScrollView *)arg1 didFlushView:(UIView *)arg2 animated:(_Bool)arg3;
- (id)queuingScrollView:(_UIQueuingScrollView *)arg1 viewAfterView:(UIView *)arg2;
- (id)queuingScrollView:(_UIQueuingScrollView *)arg1 viewBeforeView:(UIView *)arg2;
@end

@protocol _UIQueuingScrollViewDelegate <NSObject>
- (_Bool)queuingScrollViewShouldLayoutSubviews:(_UIQueuingScrollView *)arg1;
- (void)queuingScrollViewDidFinishScrolling:(_UIQueuingScrollView *)arg1;
- (void)queuingScrollView:(_UIQueuingScrollView *)arg1 didBailoutOfScrollAndRevealedView:(UIView *)arg2;
- (void)queuingScrollView:(_UIQueuingScrollView *)arg1 didEndManualScroll:(_Bool)arg2 toRevealView:(UIView *)arg3 direction:(long long)arg4 animated:(_Bool)arg5 didFinish:(_Bool)arg6 didComplete:(_Bool)arg7;
- (void)queuingScrollView:(_UIQueuingScrollView *)arg1 didCommitManualScroll:(_Bool)arg2 toRevealView:(UIView *)arg3 concealView:(UIView *)arg4 direction:(long long)arg5 animated:(_Bool)arg6 canComplete:(_Bool)arg7;
- (void)queuingScrollView:(_UIQueuingScrollView *)arg1 willManuallyScroll:(_Bool)arg2 toRevealView:(UIView *)arg3 concealView:(UIView *)arg4 animated:(_Bool)arg5;
@end

@protocol _UIRemoteKeyboardControllerDelegate <NSObject>
- (void)controllerDidLayoutSubviews:(id <_UIRemoteKeyboardViewSource>)arg1;
@end

@protocol _UIRemoteKeyboardInputViewPlaceholder
@property(readonly, retain) UIView *placeheldView;
- (_Bool)refreshPlaceholder;
@end

@protocol _UIRemoteKeyboardViewSource <NSObject>
@property(readonly, nonatomic) UIInputViewSet *inputViewSet;
@property(readonly, nonatomic) UIView *hostView;
@property(retain, nonatomic) id <_UIRemoteKeyboardControllerDelegate> controllerDelegate;
- (void)checkPlaceholdersForRemoteKeyboards;
@end

@protocol _UIRemoteViewController_TextEffectsOperatorInterface
- (void)__sendNotificationName:(NSString *)arg1 userInfo:(NSDictionary *)arg2;
@end

@protocol _UIRemoteViewController_ViewControllerOperatorInterface
- (void)__viewServiceDidUpdatePreferredStatusBarStyle:(long long)arg1 hidden:(_Bool)arg2;
- (void)__viewServiceInstrinsicContentSizeDidChange:(struct CGSize)arg1 fenceSendRight:(_UIViewServiceXPCMachSendRight *)arg2;
- (void)__viewServicePreferredContentSizeDidChange:(struct CGSize)arg1 fenceSendRight:(_UIViewServiceXPCMachSendRight *)arg2;
- (void)__viewServicePopoverDidSetUseToolbarShine:(_Bool)arg1;
- (void)__viewServicePopoverDidChangeContentSize:(struct CGSize)arg1 animated:(_Bool)arg2 fenceSendRight:(_UIViewServiceXPCMachSendRight *)arg3 withReplyHandler:(void (^)(struct CGSize))arg4;
- (void)__setViewServiceIsDisplayingPopover:(_Bool)arg1;
- (void)__dismissTextServiceSessionAnimated:(_Bool)arg1;
- (void)__showServiceForText:(NSString *)arg1 type:(long long)arg2 fromRectValue:(NSValue *)arg3 replyHandler:(void (^)(id, NSError *))arg4;
- (void)__viewServiceDidUpdateTintColor:(UIColor *)arg1 duration:(double)arg2;
- (void)__setSupportedInterfaceOrientations:(NSArray *)arg1;
- (void)__viewServiceDidUnregisterScrollToTopView;
- (void)__viewServiceDidRegisterScrollToTopView;
- (void)__viewServiceDidPromoteFirstResponder;
- (void)__dismissActionSheetWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)__presentActionSheetFromYCoordinate:(double)arg1 withTitle:(NSString *)arg2 buttonTitles:(NSArray *)arg3 cancelButtonIndex:(long long)arg4 destructiveButtonIndex:(long long)arg5 style:(long long)arg6;
@end

@protocol _UIRemoteWebViewControllerProtocol <NSObject>
- (void)_dispatchDidDismissViewController;
- (void)_dispatchWillPresentViewControllerWithCompletionHandler:(void (^)(id, NSError *))arg1;
- (void)_decidePolicyForEncodedRequest:(NSData *)arg1 inMainFrame:(_Bool)arg2 navigationType:(NSNumber *)arg3 replyHandler:(void (^)(id, NSError *))arg4;
- (void)_setURLString:(NSString *)arg1;
- (void)_setTitle:(NSString *)arg1;
- (void)_setLoading:(_Bool)arg1 error:(NSError *)arg2;
- (void)_setEstimatedProgress:(float)arg1;
- (void)_setCanGoBack:(_Bool)arg1 canGoForward:(_Bool)arg2;
@end

@protocol _UIResponderForwardable <NSObject>
@property(readonly, retain, nonatomic) UIWindow *window;
@property(retain, nonatomic, setter=_setResponder:) UIResponder *_responder;
@property(nonatomic, setter=_setForwardablePhase:) long long _forwardablePhase;
- (NSMutableArray *)_mutableForwardingRecord;
- (void)_abandonForwardingRecord;
- (_Bool)_isAbandoningForwardingRecord;
- (NSArray *)gestureRecognizers;
- (SEL)_responderSelectorForPhase:(long long)arg1;
- (NSArray *)_forwardingRecord;
- (_Bool)_wantsForwardingFromResponder:(UIResponder *)arg1 toNextResponder:(UIResponder *)arg2 withEvent:(UIEvent *)arg3;
@end

@protocol _UIRotatingAlertControllerDelegate
- (struct CGRect)presentationRectInHostViewForSheet:(_UIRotatingAlertController *)arg1;
- (struct CGRect)initialPresentationRectInHostViewForSheet:(_UIRotatingAlertController *)arg1;
- (UIView *)hostViewForSheet:(_UIRotatingAlertController *)arg1;
@end

@protocol _UIScreenBasedObject <NSObject>
@property(readonly) NSDictionary *_options;
@property(readonly) UIScreen *_intendedScreen;
- (_Bool)_matchingOptions:(NSDictionary *)arg1;
- (id)_initWithScreen:(UIScreen *)arg1 options:(NSDictionary *)arg2;
@end

@protocol _UIScreenEdgePanRecognizerDelegate <NSObject>

@optional
- (void)screenEdgePanRecognizerStateDidChange:(_UIScreenEdgePanRecognizer *)arg1;
@end

@protocol _UIScrollNotification <NSObject>
- (void)_updateBackdropMaskViewsInScrollView:(UIScrollView *)arg1;
- (void)_didScroll;
@end

@protocol _UIScrollToTopView
- (void)_scrollToTopFromTouchAtScreenLocation:(struct CGPoint)arg1 resultHandler:(void (^)(_Bool))arg2;
- (_Bool)isScrollEnabled;
@end

@protocol _UISearchControllerPresenting <NSObject>
@property(readonly, nonatomic) struct CGRect finalFrameForContainerView;
@property(readonly, nonatomic) UIPresentationController<_UISearchControllerPresenting> *adaptivePresentationController;
@property(readonly, nonatomic) double resultsControllerContentOffset;
@property(readonly, nonatomic) _Bool searchBarToBecomeTopAttached;
@property(readonly, nonatomic) double statusBarAdjustment;
@property(readonly, nonatomic) _Bool shouldAccountForStatusBar;
@property(readonly, retain, nonatomic) UIView *searchBarContainerView;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)setContentVisible:(_Bool)arg1;
@end

@protocol _UIServiceWebViewControllerProtocol <NSObject>
- (void)_webContentSizeWithReplyHandler:(void (^)(id, NSError *))arg1;
- (void)configureWithEncodedSettings:(NSDictionary *)arg1;
- (void)setShouldDecidePolicyRemotely:(_Bool)arg1;
- (void)stopLoading;
- (void)reload;
- (void)goForward;
- (void)goBack;
- (void)loadUserTypedAddress:(NSString *)arg1;
- (void)loadHTMLString:(NSString *)arg1 baseURL:(NSURL *)arg2;
- (void)loadEncodedRequest:(NSData *)arg1;
@end

@protocol _UISettingsGroupObserver <NSObject>
- (void)settingsGroup:(_UISettingsGroup *)arg1 didMoveSettings:(_UISettings *)arg2 fromIndex:(unsigned long long)arg3 toIndex:(unsigned long long)arg4;
- (void)settingsGroup:(_UISettingsGroup *)arg1 didRemoveSettings:(_UISettings *)arg2 atIndex:(unsigned long long)arg3;
- (void)settingsGroup:(_UISettingsGroup *)arg1 didInsertSettings:(_UISettings *)arg2 atIndex:(unsigned long long)arg3;
@end

@protocol _UISettingsKeyObserver <NSObject>
- (void)settings:(_UISettings *)arg1 changedValueForKey:(NSString *)arg2;
@end

@protocol _UISettingsKeyPathObserver <NSObject>
- (void)settings:(_UISettings *)arg1 changedValueForKeyPath:(NSString *)arg2;
@end

@protocol _UIShadowedView <NSObject>
- (UIView *)_shadowView;
@end

@protocol _UISiriWaveyViewDelegate <NSObject>
- (float)audioLevelForWaveyView:(_UISiriWaveyView *)arg1;
@end

@protocol _UIStateRestorationContinuation

@optional
- (void (^)(void))_decodeRestorableStateAndReturnContinuationWithCoder:(NSCoder *)arg1;
@end

@protocol _UISwitchInternalViewProtocol <NSObject>
@property(nonatomic) _Bool useAlternateColor;
@property(nonatomic) _Bool on;
@property(retain, nonatomic) UIImage *offImage;
@property(retain, nonatomic) UIImage *onImage;
@property(retain, nonatomic) UIColor *thumbTintColor;
@property(retain, nonatomic) UIColor *tintColor;
@property(retain, nonatomic) UIColor *onTintColor;
- (void)_setPressed:(_Bool)arg1 on:(_Bool)arg2 animated:(_Bool)arg3 shouldAnimateLabels:(_Bool)arg4 completion:(void (^)(_Bool))arg5;
- (void)_prepareForInteraction;
- (void)_cleanUpAfterAnimating;
- (void)setSendAction:(_Bool)arg1;
- (void)_setPressed:(_Bool)arg1;
- (void)_setOn:(_Bool)arg1 animated:(_Bool)arg2 force:(_Bool)arg3;
- (void)_setProgress:(double)arg1;
- (void)_setProgress:(double)arg1 animated:(_Bool)arg2 withDuration:(double)arg3 force:(_Bool)arg4 sendAction:(_Bool)arg5;
@end

@protocol _UITextDocumentInterfaceDelegate <NSObject>
- (void)_didResetDocumentState;
- (void)_willResetDocumentState;
@end

@protocol _UITouchPhaseChangeDelegate <NSObject>
- (void)_touchPhaseChangedForTouch:(UITouch *)arg1;
@end

@protocol _UITraitEnvironmentInternal <UITraitEnvironment>
- (UITraitCollection *)_traitCollectionForChildEnvironment:(id <UITraitEnvironment>)arg1;
@end

@protocol _UIViewControllerControlMessageDeputy_Connection
- (void)__connectToViewControllerControlMessageDeputyFromRemoteViewController:(id)arg1 replyHandler:(void (^)(id))arg2;
@end

@protocol _UIViewServiceDeputy <NSObject, _UIViewServiceDeputy_UIViewServiceInterface>
+ (id <_UIViewServiceDeputyXPCInterface>)XPCInterface;
- (_UIAsyncInvocationObserver *)invalidate;
@end

@protocol _UIViewServiceDeputyManagerDelegate <NSObject>
- (void)deputyManager:(_UIViewServiceDeputyManager *)arg1 didUpdateExportedInterface:(NSXPCInterface *)arg2;
@end

@protocol _UIViewServiceDeputyManager_HostInterface
@end

@protocol _UIViewServiceDeputyRotationDelegate <NSObject>
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)rotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)setHostedWindow:(UIWindow *)arg1 disableAutomaticBehaviors:(_Bool)arg2;
@end

@protocol _UIViewServiceDeputyRotationSource <NSObject>
- (void)addDeputyRotationDelegate:(id <_UIViewServiceDeputyRotationDelegate>)arg1;
@end

@protocol _UIViewServiceDeputyXPCInterface <NSObject>
- (NSInvocation *)connectionInvocation;
- (SEL)connectionSelector;
- (Protocol *)connectionProtocol;
- (NSXPCInterface *)hostObjectInterface;
- (NSXPCInterface *)exportedInterface;
@end

@protocol _UIViewServiceDeputy_UIViewServiceInterface
- (void)__prepareForDisconnectionWithCompletionHandler:(void (^)(id, NSError *))arg1;
@end

@protocol _UIViewServiceDummyPopoverControllerDelegate <NSObject>

@optional
- (void)dummyPopoverController:(_UIViewServiceDummyPopoverController *)arg1 popoverViewDidSetUseToolbarShine:(_Bool)arg2;
- (void)dummyPopoverController:(_UIViewServiceDummyPopoverController *)arg1 didChangeContentSize:(struct CGSize)arg2 animated:(_Bool)arg3;
@end

@protocol _UIViewServiceImplicitAnimationDecodingProxy_EncodingProxyInterface <NSObject>

@optional
- (void)__animateNextInvocationOfSelector:(NSString *)arg1 withAnimationAttributes:(_UIViewAnimationAttributes *)arg2;
@end

@protocol _UIViewServiceProxy_ReplyAwaiting
- (id)_awaitingReply;
@end

@protocol _UIViewServiceProxy_ReplyControl <_UIViewServiceProxy_ReplyAwaiting>
- (id)_deliveringRepliesAsynchronously;
@end

@protocol _UIViewServiceSession_HostInterface
@end

@protocol _UIViewServiceTextEffectsOperator_Connection
- (void)__connectToTextEffectsOperatorFromRemoteViewController:(id)arg1 replyHandler:(void (^)(id))arg2;
@end

@protocol _UIViewServiceTextEffectsOperator_RemoteViewControllerInterface <_UIViewServiceDeputy_UIViewServiceInterface, _UIViewServiceUIBehaviorInterface>
- (void)__hostViewWillDisappear:(_Bool)arg1;
- (void)__hostViewWillAppear:(_Bool)arg1;
- (void)__hostDidEnterBackground;
- (void)__hostWillEnterForeground;
- (void)__setHostAllowedNotifications:(NSArray *)arg1;
- (void)__setNextAutomaticOrderOutDirection:(int)arg1 duration:(double)arg2;
- (void)__setWindowOffset:(struct CGPoint)arg1;
- (void)__createHostedTextEffectsWithReplyHandler:(void (^)(_UIHostedWindowHostingHandle *, _UIHostedWindowHostingHandle *, _UIHostedWindowHostingHandle *))arg1;
@end

@protocol _UIViewServiceUIBehaviorInterface <_UIViewService_FencingControlInterface, _UIViewServiceImplicitAnimationDecodingProxy_EncodingProxyInterface>
@end

@protocol _UIViewServiceViewControllerDeputyXPCInterface_Connection
- (void)__connectToViewControllerFromRemoteViewController:(id)arg1 replyHandler:(void (^)(id))arg2;
@end

@protocol _UIViewServiceViewControllerOperatorDelegate <NSObject>

@optional
- (void)viewControllerOperator:(_UIViewServiceViewControllerOperator *)arg1 didCreateServiceViewControllerOfClass:(Class)arg2;
@end

@protocol _UIViewServiceViewControllerOperator_Connection
- (void)__connectToViewControllerOperatorFromRemoteViewController:(id)arg1 replyHandler:(void (^)(id))arg2;
@end

@protocol _UIViewServiceViewControllerOperator_RemoteViewControllerInterface <_UIViewServiceDeputy_UIViewServiceInterface, _UIViewServiceUIBehaviorInterface>
- (void)__restoreStateForSession:(NSString *)arg1 restorationAnchor:(NSString *)arg2;
- (void)__saveStateForSession:(NSString *)arg1 restorationAnchor:(NSString *)arg2 completionHandler:(void (^)(_Bool, NSError *))arg3;
- (void)__exchangeAccessibilityPortInformation:(_UIViewServiceXPCMachSendRight *)arg1 replyHandler:(void (^)(_UIViewServiceXPCMachSendRight *, NSError *))arg2;
- (void)__dimmingViewWasTapped;
- (void)__textServiceDidDismiss;
- (void)__setHostTintColor:(UIColor *)arg1 tintAdjustmentMode:(long long)arg2;
- (void)__hostDidUpdateAppearanceWithSerializedRepresentations:(NSArray *)arg1 originalSource:(id)arg2 legacyAppearance:(_Bool)arg3;
- (void)__scrollToTopFromTouchAtViewLocation:(struct CGPoint)arg1 resultHandler:(void (^)(_Bool, NSError *))arg2;
- (void)__hostedActionSheetDidDismissWithClickedButtonIndex:(long long)arg1;
- (void)__hostedActionSheetClickedButtonAtIndex:(long long)arg1;
- (void)__hostedActionSheetDidPresent;
- (void)__hostDidSetPresentationControllerClassName:(NSString *)arg1;
- (void)__hostDidSetContentOverlayInsets:(struct UIEdgeInsets)arg1;
- (void)__hostDisablesAutomaticKeyboardBehavior:(_Bool)arg1;
- (void)__hostDidPromoteFirstResponder;
- (void)__hostDidRotateFromInterfaceOrientation:(long long)arg1 skipSelf:(_Bool)arg2;
- (void)__hostWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 skipSelf:(_Bool)arg3;
- (void)__hostWillRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 skipSelf:(_Bool)arg3;
- (void)__hostDidChangeStatusBarHeight:(double)arg1;
- (void)__hostDidChangeStatusBarOrientationToInterfaceOrientation:(long long)arg1;
- (void)__hostDidEnterBackground;
- (void)__hostWillEnterForeground;
- (void)__setContentSize:(struct CGSize)arg1;
- (void)__setServiceInPopover:(_Bool)arg1;
- (void)__hostViewDidMoveToScreenWithIntegerDisplayID:(unsigned int)arg1 newHostingHandleReplyHandler:(void (^)(_UIHostedWindowHostingHandle *))arg2;
- (void)__hostViewDidDisappear:(_Bool)arg1;
- (void)__hostViewWillDisappear:(_Bool)arg1;
- (void)__hostViewDidAppear:(_Bool)arg1;
- (void)__hostViewWillAppear:(_Bool)arg1 inInterfaceOrientation:(long long)arg2 statusBarHeight:(double)arg3 completionHandler:(void (^)(struct CGSize))arg4;
- (void)__hostReadyToReceiveMessagesFromServiceViewController;
- (void)__createViewController:(NSString *)arg1 withContextToken:(NSUUID *)arg2 fbsDisplays:(NSArray *)arg3 appearanceSerializedRepresentations:(NSArray *)arg4 legacyAppearance:(_Bool)arg5 hostAccessibilityServerPort:(_UIViewServiceXPCMachSendRight *)arg6 canShowTextServices:(_Bool)arg7 replyHandler:(void (^)(_UIHostedWindowHostingHandle *, NSArray *, long long, _Bool, _UIViewServiceXPCMachSendRight *, NSError *))arg8;
- (void)__createViewController:(NSString *)arg1 withAppearanceSerializedRepresentations:(NSArray *)arg2 legacyAppearance:(_Bool)arg3 hostAccessibilityServerPort:(_UIViewServiceXPCMachSendRight *)arg4 canShowTextServices:(_Bool)arg5 replyHandler:(void (^)(_UIHostedWindowHostingHandle *, NSArray *, long long, _Bool, _UIViewServiceXPCMachSendRight *, NSError *))arg6;
@end

@protocol _UIViewService_FencingControlInterface

@optional
- (void)__endFencingMessagesForSendRight:(_UIViewServiceXPCMachSendRight *)arg1;
- (void)__beginFencingMessagesWithSendRight:(_UIViewServiceXPCMachSendRight *)arg1 connectionCount:(unsigned long long)arg2;
@end

@protocol _UIWebDoubleTapDelegate
- (_Bool)considerHeightForDoubleTap;
- (CDStruct_39925896)doubleTapScalesForSize:(struct CGSize)arg1;
- (struct CGRect)rectOfInterestForPoint:(struct CGPoint)arg1;
- (double)minimumScaleForSize:(struct CGSize)arg1;
- (struct CGRect)visibleContentRect;
- (double)currentDocumentScale;
- (double)zoomedDocumentScale;
- (UIView *)contentView;
- (UIScrollView *)enclosingScrollView;

@optional
- (void)willZoomToLocation:(struct CGPoint)arg1 atScale:(double)arg2 forDuration:(double)arg3;
- (_Bool)shouldSelectionAssistantReceiveDoubleTapAtPoint:(struct CGPoint)arg1 forScale:(double)arg2;
- (void)willZoomToMinimumScale;
@end

@protocol _UIWebRotationDelegate
- (_Bool)considerHeightOfRectOfInterestForRotation;
- (struct CGRect)activeRectForRectOfInterest:(struct CGRect)arg1;
- (double)heightToKeepVisible;
- (double)minimumVerticalContentOffset;
- (struct CGRect)rectOfInterestForRotation;
- (double)minimumScaleForSize:(struct CGSize)arg1;
- (void)updateBoundariesOfScrollView:(UIScrollView *)arg1 withScales:(CDStruct_39925896)arg2;
- (CDStruct_39925896)scalesForContainerSize:(struct CGSize)arg1;
- (double)currentDocumentScale;
- (double)zoomedDocumentScale;
- (UIView *)contentView;
- (UIScrollView *)enclosingScrollView;

@optional
- (struct CGSize)contentSizeForScrollView:(UIScrollView *)arg1;
- (double)scaleForProposedNewScale:(double)arg1 andOldScale:(double)arg2;
@end

@interface ASAsset (UIReferenceLibraryViewControllerAdditions_Private)
- (long long)_contentVersion;
- (long long)_formatVersion;
@end

@interface BSAction (UIActionType)
- (long long)UIActionType;
@end

@interface CABasicAnimation (Normalized)
+ (id)normalizedAnimationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3;
@end

@interface CAContext (UIApplication)
- (id)_associatedScreen;
- (void)_setAssociatedScreen:(id)arg1;
@end

@interface CAKeyframeAnimation (Normalized)
+ (id)normalizedKeyframeAnimationWithKeyPath:(id)arg1;
@end

@interface CALayer (PerspectiveAdditions)
- (void)setPerspectiveDistance:(double)arg1;
@end

@interface CALayer (TextEffectsLayerOrdering)
- (long long)compareTextEffectsOrdering:(id)arg1;
@end

@interface CALayer (UIPageCurlAdditions)
- (_Bool)uiHasFilterWithName:(id)arg1;
@end

@interface CAMediaTimingFunction (UIKBAdditions)
+ (id)_kbTimingFunction;
@end

@interface CAMediaTimingFunction (UIPageCurlAdditions)
+ (id)uiFunctionWithControlPoints:(const struct CGPoint *)arg1;
@end

@interface CIColor (UIKitAdditions)
- (id)initWithColor:(id)arg1;
@end

@interface CIImage (UIKitAdditions)
- (id)initWithImage:(id)arg1 options:(id)arg2;
- (id)initWithImage:(id)arg1;
@end

@interface CUINamedImage (UIKitAdditions)
- (id)traitCollection;
- (id)UIImage;
@end

@interface DOMElement (BrowserExtras)
- (_Bool)isHidden;
- (_Bool)inDocument;
@end

@interface DOMElement (UIWebDocumentViewTextSelecting)
- (_Bool)exceedsStructuralComplexity:(int)arg1;
@end

@interface DOMElement (UIWebFormExtensions)
- (void)getTextWritingDirection:(long long *)arg1 override:(_Bool *)arg2;
@end

@interface DOMElement (UIWebInteraction)
- (_Bool)touchCalloutEnabled;
- (id)tapHighlightColor;
@end

@interface DOMElement (UIWebSelectionAdditions)
- (_Bool)hasCustomLineHeight;
- (_Bool)selectable;
@end

@interface DOMHTMLAnchorElement (UIWebInteraction)
- (_Bool)alwaysAttemptToShowTapHighlight;
@end

@interface DOMHTMLAppletElement (UIWebInteraction)
- (_Bool)showsTapHighlight;
@end

@interface DOMHTMLAreaElement (UIWebInteraction)
- (id)absoluteQuadsAtPoint:(struct CGPoint)arg1;
@end

@interface DOMHTMLEmbedElement (UIWebInteraction)
- (_Bool)showsTapHighlight;
@end

@interface DOMHTMLImageElement (UIWebInteraction)
- (_Bool)alwaysAttemptToShowTapHighlight;
- (_Bool)showsTapHighlight;
@end

@interface DOMHTMLInputElement (UITextInputAdditions)
- (_Bool)isEditing;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (long long)keyboardType;
- (_Bool)isTextControl;
- (_Bool)isSecure;
- (id)text;
- (id)textInputTraits;
@end

@interface DOMHTMLInputElement (UIWebBrowserViewPrivate)
- (id)_textFormElement;
- (void)_accessoryClear;
- (_Bool)_supportsAccessoryClear;
- (_Bool)_supportsAutoFill;
- (_Bool)_requiresInputView;
- (_Bool)_requiresAccessoryView;
- (void)_stopAssistingDocumentView:(id)arg1;
- (void)_startAssistingDocumentView:(id)arg1;
@end

@interface DOMHTMLInputElement (UIWebFormPeripheral)
- (id)createPeripheral;
@end

@interface DOMHTMLInputElement (UIWebInteraction)
- (_Bool)nodeCanBecomeFirstResponder;
- (_Bool)isLikelyToBeginPageLoad;
- (_Bool)isAssistedDateType;
@end

@interface DOMHTMLObjectElement (UIWebInteraction)
- (_Bool)showsTapHighlight;
@end

@interface DOMHTMLOptGroupElement (UIWebFormExtensions)
- (id)itemTitle;
- (void)populateCell:(id)arg1;
- (id)createPickerCell;
- (id)createSelectedItem;
@end

@interface DOMHTMLOptionElement (UIWebFormExtensions)
- (id)itemTitle;
- (void)populateCell:(id)arg1;
- (id)createPickerCell;
- (id)createSelectedItem;
@end

@interface DOMHTMLSelectElement (UIWebBrowserViewPrivate)
- (_Bool)_supportsAutoFill;
- (_Bool)_requiresInputView;
- (_Bool)_requiresAccessoryView;
- (void)_stopAssistingDocumentView:(id)arg1;
- (void)_startAssistingDocumentView:(id)arg1;
@end

@interface DOMHTMLSelectElement (UIWebFormPeripheral)
- (id)createPeripheral;
@end

@interface DOMHTMLSelectElement (UIWebInteraction)
- (_Bool)nodeCanBecomeFirstResponder;
@end

@interface DOMHTMLTextAreaElement (UITextInputAdditions)
- (_Bool)isEditing;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (_Bool)isTextControl;
- (id)textInputTraits;
@end

@interface DOMHTMLTextAreaElement (UIWebBrowserViewPrivate)
- (id)_textFormElement;
- (_Bool)_supportsAutoFill;
- (_Bool)_requiresInputView;
- (_Bool)_requiresAccessoryView;
- (void)_stopAssistingDocumentView:(id)arg1;
- (void)_startAssistingDocumentView:(id)arg1;
@end

@interface DOMHTMLTextAreaElement (UIWebInteraction)
- (_Bool)nodeCanBecomeFirstResponder;
@end

@interface DOMNode (UIKit_DOMExtras)
- (id)urlScheme;
- (id)tagName;
@end

@interface DOMNode (UITextInputAdditions) <UIKeyboardInput, UITextInputPrivate, UIKeyInput, UITextInputTokenizer>
- (id)textDocument;
@property(nonatomic) long long selectionAffinity;
- (_Bool)editing;
- (_Bool)editable;
- (id)selectionRectsForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (struct CGRect)caretRectForPosition:(id)arg1;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (_Bool)hasText;
- (void)unmarkText;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (void)moveDown;
- (void)moveUp;
- (void)moveLeft;
- (void)moveRight;
- (struct CGRect)_lastRectForRange:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2 closeTyping:(_Bool)arg3;
- (id)rangeOfEnclosingWord:(id)arg1;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textInRange:(id)arg1;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(copy) UITextRange *selectedTextRange;
- (void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_textSelectingContainer;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;
- (_Bool)becomesEditableWithGestures;
- (_Bool)isEditing;
- (_Bool)isEditable;
- (id)content;
- (void)updateSelection;
- (id)selectionView;
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (_Bool)isAutoFillMode;
- (void)acceptedAutoFillWord:(id)arg1;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;
- (void)updateAutoscroll:(id)arg1;
- (id)automaticallySelectedOverlay;
- (void)setInitialSelectionBehavior:(int)arg1;
- (int)initialSelectionBehavior;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) int textLoupeVisibility;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(nonatomic) id textSuggestionDelegate;
- (_Bool)isShowingPlaceholder;
- (struct CGRect)convertCaretRect:(struct CGRect)arg1;
- (struct CGRect)caretRect;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)setSelectionWithPoint:(struct CGPoint)arg1 inset:(double)arg2;
- (id)text;
- (void)setText:(id)arg1;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1 withInset:(double)arg2;
- (int)selectionState;
- (void)selectAll;
- (_Bool)selectionAtWordStart;
- (_Bool)selectionAtDocumentStart;
- (_Bool)hasSelection;
- (void)extendCurrentSelection:(int)arg1;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (struct _NSRange)selectionRange;
- (int)wordOffsetInRange:(id)arg1;
- (id)textColorForCaretSelection;
- (id)fontForCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)clearMarkedText;
- (id)rectsForNSRange:(struct _NSRange)arg1;
- (void)confirmMarkedText:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (id)insertDictationResultPlaceholder;
- (id)metadataDictionariesForDictationResults;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (id)uiWebDocumentView;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (void)handleKeyWebEvent:(id)arg1;
- (_Bool)requiresKeyEvents;
- (id)delegate;
- (void)setSecure:(_Bool)arg1;
- (id)textInputTraits;
- (void)setupPlaceholderTextIfNeeded;
- (_Bool)hasContent;
- (void)takeTraitsFrom:(id)arg1;

// Remaining properties
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool forceEnableDictation;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) long long selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;
@end

@interface DOMNode (UITextInputView)
- (id)textInputView;
@end

@interface DOMNode (UITextInput_Internal) <UITextInput_Internal>
- (id)_selectableText;
- (_Bool)_shouldPerformUICalloutBarButtonReplaceAction:(SEL)arg1 forText:(id)arg2 checkAutocorrection:(_Bool)arg3;
- (void)_phraseBoundaryGesture:(id)arg1;
- (id)_newPhraseBoundaryGestureRecognizer;
- (void)_unmarkText;
- (void)_setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (_Bool)_hasMarkedText;
- (_Bool)_usesAsynchronousProtocol;
- (void)_setGestureRecognizers;
- (long long)_selectionAffinity;
- (void)_setSelectedTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_setHistory:(id)arg1 withExtending:(_Bool)arg2 withAnchor:(int)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)_setSelectionRangeWithHistory:(id)arg1;
- (void)_updateSelectionWithTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_fontForCaretSelection;
- (id)_textColorForCaretSelection;
- (id)_clampedpositionFromPosition:(id)arg1 offset:(int)arg2;
- (id)_findPleasingWordBoundaryFromPosition:(id)arg1;
- (id)_fullRange;
- (id)_rangeOfParagraphEnclosingPosition:(id)arg1;
- (id)_rangeOfLineEnclosingPosition:(id)arg1;
- (id)_rangeOfEnclosingWord:(id)arg1;
- (id)_rangeOfText:(id)arg1 endingAtPosition:(id)arg2;
- (void)_scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)_replaceCurrentWordWithText:(id)arg1;
- (void)_deleteForwardAndNotify:(_Bool)arg1;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;
- (void)_deleteToEndOfLine;
- (void)_deleteToStartOfLine;
- (void)_deleteByWord;
- (void)_setCaretSelectionAtEndOfSelection;
- (id)_positionAtStartOfWords:(unsigned long long)arg1 beforePosition:(id)arg2;
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)arg1;
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;
- (void)_expandSelectionToBackwardDeletionCluster;
- (void)_moveCurrentSelection:(int)arg1;
- (void)_extendCurrentSelection:(int)arg1;
- (_Bool)_hasMarkedTextOrRangedSelection;
- (_Bool)_isEmptySelection;
- (struct CGRect)_selectionClipRect;
- (_Bool)_selectionAtDocumentEnd;
- (_Bool)_selectionAtDocumentStart;
- (_Bool)_selectionAtWordStart;
- (id)_fullText;
- (id)_wordContainingCaretSelection;
- (unsigned int)_characterInRelationToRangedSelection:(int)arg1;
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;
- (unsigned int)_characterBeforeCaretSelection;
- (unsigned int)_characterAfterCaretSelection;
- (struct _NSRange)_nsrangeForTextRange:(id)arg1;
- (int)_indexForTextPosition:(id)arg1;
- (void)_selectAll;
- (struct _NSRange)_selectedNSRange;
- (id)_keyInput;
@property(readonly, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;

// Remaining properties
@property(readonly, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
@end

@interface DOMNode (UIThreadSafeNodeAdditions)
- (id)_realNode;
@end

@interface DOMNode (UIWebBrowserViewPrivate)
- (id)_textFormElement;
- (id)_previousAssistedNode;
- (id)_nextAssistedNode;
- (void)_accessoryClear;
- (_Bool)_supportsAccessoryClear;
- (_Bool)_supportsAutoFill;
- (_Bool)_requiresInputView;
- (_Bool)_requiresAccessoryView;
- (void)_stopAssistingDocumentView:(id)arg1;
- (void)_startAssistingDocumentView:(id)arg1;
@end

@interface DOMNode (UIWebFormPeripheral)
- (id)createPeripheral;
@end

@interface DOMNode (UIWebFormSelectPeripheralExtensions)
- (id)itemTitle;
- (void)populateCell:(id)arg1;
- (id)createPickerCell;
- (id)createSelectedItem;
@end

@interface DOMNode (UIWebInteraction)
- (_Bool)nodeCanBecomeFirstResponder;
- (_Bool)isLikelyToBeginPageLoad;
- (id)absoluteQuadsAtPoint:(struct CGPoint)arg1;
- (_Bool)touchCalloutEnabled;
- (id)tapHighlightColor;
- (_Bool)alwaysAttemptToShowTapHighlight;
- (_Bool)showsTapHighlight;
@end

@interface DOMNode (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)lastDescendantOfAboutTheSameWidthOrHeight;
- (id)firstDescendantOfAboutTheSameWidthOrHeight;
- (id)firstDescendantOfAboutTheSameWidthOrHeightAsRect:(struct CGRect)arg1 withDescentDirection:(int)arg2;
- (id)enclosingDocument;
- (struct CGRect)boundingRectAndInsideFixedPosition:(int *)arg1;
- (struct CGRect)boundingRect;
- (_Bool)canShrinkDirectlyToTextOnly;
- (id)rangeOfContents;
- (_Bool)containsRange:(id)arg1;
- (id)asDomRange;
- (id)asDomNode;
- (_Bool)rendersAsBlock;
- (id)largerParent;
- (_Bool)strictlyContainsBlock:(id)arg1;
- (_Bool)containsBlock:(id)arg1;
- (_Bool)isSameBlock:(id)arg1;
- (_Bool)hasCustomLineHeight;
- (_Bool)selectable;
- (id)parentBlock;
- (id)webFrame;
- (id)enclosingElementIncludingSelf;
- (id)asElement;
- (_Bool)strictlyContainsNode:(id)arg1;
- (_Bool)containsNode:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface DOMNode (UIWebViewAdditions)
- (long long)keyboardType;
- (_Bool)isSecure;
- (_Bool)isTextControl;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
@end

@interface DOMRange (UIWebSelectionAdditions) <UIWebSelectionBlock>
- (id)enclosingDocument;
- (id)rangeOfContents;
- (_Bool)canShrinkDirectlyToTextOnly;
- (_Bool)containsRange:(id)arg1;
- (id)asDomRange;
- (id)asDomNode;
- (_Bool)selectable;
- (_Bool)rendersAsBlock;
- (_Bool)strictlyContainsBlock:(id)arg1;
- (_Bool)containsBlock:(id)arg1;
- (_Bool)isSameBlock:(id)arg1;
- (id)largerParent;
- (id)parentBlock;
- (struct CGRect)boundingRectAndInsideFixedPosition:(int *)arg1;
- (struct CGRect)boundingRect;
- (id)webFrame;
- (void)unionWithRange:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface FBSScene (UIKit)
- (void)updateUIClientSettingsWithBlock:(CDUnknownBlockType)arg1;
@end

@interface FBSSceneClientSettings (UIApplicationSceneClientSettings)
- (_Bool)isUISubclass;
@end

@interface FBSSceneSettings (UIApplicationSceneSettings)
- (_Bool)isUISubclass;
@end

@interface FBSSceneTransitionContext (UIApplicationSceneTransitionContext)
- (_Bool)isUISubclass;
@end

@interface LSApplicationProxy (LSResourceProxyIconPrivate)
- (CDStruct_2f66a7ba *)_iconVariantDefinitions:(id)arg1;
- (struct CGSize)_defaultStyleSize:(id)arg1;
@end

@interface LSDocumentProxy (LSResourceProxyIconPrivate)
- (CDStruct_2f66a7ba *)_iconVariantDefinitions:(id)arg1;
- (struct CGSize)_defaultStyleSize:(id)arg1;
@end

@interface LSResourceProxy (LSResourceProxyIconPrivate)
- (struct CGSize)_largestImageSize:(id)arg1;
- (CDStruct_2f66a7ba *)_iconDefinitionForSize:(struct CGSize)arg1 style:(id)arg2;
- (CDStruct_2f66a7ba *)_iconVariantDefinitions:(id)arg1;
@end

@interface LSResourceProxy (UIKitPrivate)
+ (long long)_compareApplicationIconCanvasSize:(struct CGSize)arg1 withSize:(struct CGSize)arg2;
+ (struct CGSize)_applicationIconCanvasSize;
- (struct CGSize)_defaultStyleSize:(id)arg1;
- (id)_iconForStyle:(id)arg1;
- (id)_iconForStyle:(id)arg1 size:(struct CGSize)arg2;
@end

@interface NSArray (UICollectionAdditions)
- (id)_nextToLastObject;
@end

@interface NSArray (UICollectionAdditions_Performance)
- (void)_makeObjectsPerformSelector:(SEL)arg1 object:(id)arg2 range:(struct _NSRange)arg3;
- (id)_initWithObjectsFromArray:(id)arg1 range:(struct _NSRange)arg2;
@end

@interface NSArray (UIKitConvenienceAdditions)
- (id)_ui_onlyObject;
- (id)_ui_firstObject;
@end

@interface NSArray (UIReferenceLibraryViewControllerAdditions_Private)
- (id)_filteredArrayOfObjectsPassingTest:(CDUnknownBlockType)arg1;
@end

@interface NSArray (UIStringDrawingPrivate)
- (struct CGSize)_legacy_drawComponentsJoinedByString:(id)arg1 atPoint:(struct CGPoint *)arg2 forWidth:(double)arg3 withFont:(id)arg4 lineBreakMode:(long long)arg5;
@end

@interface NSAttributedString (SecuredTextField)
- (id)_ui_secureStringWithPointSize:(double)arg1;
@end

@interface NSAttributedString (UIKitAdditions)
- (id)_ui_attributedStringWithOriginalFontAttributes;
- (long long)_ui_resolvedTextAlignment;
@end

@interface NSAttributedString (UILabelAdditions)
- (id)_ui_synthesizeAttributedSubstringFromRange:(struct _NSRange)arg1 usingDefaultAttributes:(id)arg2;
- (id)_ui_fontsInRange:(struct _NSRange)arg1 usingDefaultFont:(id)arg2;
@end

@interface NSBundle (TextureDataLoading)
- (id)dataForResourceName:(id)arg1;
@end

@interface NSBundle (UIKeyboardFactoryAdditions)
+ (id)_typologyBundle;
@end

@interface NSBundle (UINSBundleAdditions)
- (id)loadNibNamed:(id)arg1 owner:(id)arg2 options:(id)arg3;
@end

@interface NSBundle (UINSBundleLocalizableStringAdditions)
+ (id)currentNibLoadingBundle;
+ (void)popNibLoadingBundle;
+ (void)pushNibLoadingBundle:(id)arg1;
+ (id)currentNibPath;
+ (void)popNibPath;
+ (void)pushNibPath:(id)arg1;
@end

@interface NSCoder (UIGeometryKeyedCoding)
- (struct UIOffset)decodeUIOffsetForKey:(id)arg1;
- (struct UIEdgeInsets)decodeUIEdgeInsetsForKey:(id)arg1;
- (struct CGAffineTransform)decodeCGAffineTransformForKey:(id)arg1;
- (struct CGRect)decodeCGRectForKey:(id)arg1;
- (struct CGSize)decodeCGSizeForKey:(id)arg1;
- (struct CGVector)decodeCGVectorForKey:(id)arg1;
- (struct CGPoint)decodeCGPointForKey:(id)arg1;
- (void)encodeUIOffset:(struct UIOffset)arg1 forKey:(id)arg2;
- (void)encodeUIEdgeInsets:(struct UIEdgeInsets)arg1 forKey:(id)arg2;
- (void)encodeCGAffineTransform:(struct CGAffineTransform)arg1 forKey:(id)arg2;
- (void)encodeCGRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeCGSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodeCGVector:(struct CGVector)arg1 forKey:(id)arg2;
- (void)encodeCGPoint:(struct CGPoint)arg1 forKey:(id)arg2;
@end

@interface NSCoder (UITypeSafety)
- (id)_copyDecodedObjectForKey:(id)arg1 ofClass:(Class)arg2;
@end

@interface UIColor : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_systemColorName;
}

+ (double)_luminanceWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3;
+ (id)textFieldAtomBlueColor;
+ (id)__halfTransparentWhiteColor;
+ (id)__halfTransparentBlackColor;
+ (id)tableCellDefaultSelectionTintColor;
+ (id)infoTextOverPinStripeTextColor;
+ (id)textFieldAtomPurpleColor;
+ (id)tableCellGrayTextColor;
+ (id)tableCellValue2BlueColor;
+ (id)tableCellValue1BlueColor;
+ (id)sectionHeaderBorderColor;
+ (id)sectionHeaderOpaqueBackgroundColor;
+ (id)sectionHeaderBackgroundColor;
+ (id)sectionListBorderColor;
+ (id)tableGroupedTopShadowColor;
+ (id)tableShadowColor;
+ (id)tableSelectionGradientEndColor;
+ (id)tableSelectionGradientStartColor;
+ (id)tableSelectionColor;
+ (id)tablePlainHeaderFooterFloatingBackgroundColor;
+ (id)tablePlainHeaderFooterBackgroundColor;
+ (id)tableCellbackgroundColorPigglyWiggly;
+ (id)tableCellBackgroundColor;
+ (id)tableCellGroupedBackgroundColorLegacyWhite;
+ (id)tableCellPlainBackgroundColor;
+ (id)tableBackgroundColor;
+ (id)brownColor;
+ (id)purpleColor;
+ (id)orangeColor;
+ (id)magentaColor;
+ (id)yellowColor;
+ (id)cyanColor;
+ (id)blueColor;
+ (id)greenColor;
+ (id)redColor;
+ (id)clearColor;
+ (id)grayColor;
+ (id)whiteColor;
+ (id)lightGrayColor;
+ (id)darkGrayColor;
+ (id)blackColor;
+ (id)classFallbacksForKeyedArchiver;
+ (_Bool)supportsSecureCoding;
+ (id)_composedColorFromSourceColor:(id)arg1 destinationColor:(id)arg2 tintColor:(id)arg3 alpha:(double)arg4;
+ (id)_systemColorForColor:(id)arg1 withName:(id)arg2;
+ (id)_systemColorWithName:(id)arg1;
+ (id)colorWithCIColor:(id)arg1;
+ (id)colorWithPatternImage:(id)arg1;
+ (id)_disambiguated_due_to_CIImage_colorWithCGColor:(struct CGColor *)arg1;
+ (id)colorWithCGColor:(struct CGColor *)arg1;
+ (id)_disambiguated_due_to_CIImage_colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)colorWithWhite:(double)arg1 alpha:(double)arg2;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)_alternateUISwitchableSelectorPairs;
+ (void)initialize;
+ (id)scrollViewTexturedBackgroundColor;
+ (id)underPageBackgroundColor;
+ (id)viewFlipsideBackgroundColor;
+ (id)tableCellBlueTextColor;
+ (id)tableGroupedSeparatorLightColor;
+ (id)tableSeparatorLightColor;
+ (id)tableSeparatorDarkColor;
+ (id)tableCellGroupedBackgroundColor;
+ (id)groupTableViewBackgroundColor;
+ (id)_markedTextBorderColor;
+ (id)_markedTextBackgroundColor;
+ (id)darkTextColor;
+ (id)lightTextColor;
+ (id)selectionGrabberColor;
+ (id)insertionPointColor;
+ (id)selectionHighlightColor;
+ (id)pinStripeColor;
+ (id)externalSystemGreenColor;
+ (id)externalSystemRedColor;
+ (id)externalSystemTealColor;
+ (id)systemDarkPinkColor;
+ (id)systemDarkTealColor;
+ (id)systemDarkYellowColor;
+ (id)systemDarkOrangeColor;
+ (id)systemDarkBlueColor;
+ (id)systemDarkGreenColor;
+ (id)systemDarkRedColor;
+ (id)systemMidGrayColor;
+ (id)systemGrayColor;
+ (id)systemPinkColor;
+ (id)systemTealColor;
+ (id)systemYellowColor;
+ (id)systemOrangeColor;
+ (id)systemBlueColor;
+ (id)systemGreenColor;
+ (id)systemRedColor;
+ (id)_alternateForegroundColor2;
+ (id)_alternateForegroundColor;
+ (id)_alternateTextColor2;
+ (id)_alternateTextColor;
+ (id)_alternateBackgroundColor2;
+ (id)_alternateBackgroundColor;
+ (id)_webContentBackgroundColor;
+ (id)_vibrantDarkFillDodgeColor;
+ (id)_vibrantLightFillDarkeningColor;
+ (id)_vibrantLightFillBurnColor;
+ (id)_vibrantLightDividerDarkeningColor;
+ (id)_vibrantLightDividerBurnColor;
+ (id)_systemSelectedColor;
+ (id)_externalBarBackgroundColor;
+ (id)_alternateGrayColorForFontSize:(double)arg1;
+ (id)_grayColorForFontSize:(double)arg1;
+ (id)_alternateSystemInteractionTintColor;
+ (id)_dimmingViewColor;
+ (id)_translucentPaperTextureColor;
+ (id)noContentDarkGradientBackgroundColor;
+ (id)noContentLightGradientBackgroundColor;
+ (id)_accessibilityButtonShapesNoBlendModeBackgroundColorOnDark;
+ (id)_accessibilityButtonShapesNoBlendModeBackgroundColorOnLight;
+ (id)_accessibilityButtonShapesDisabledBackgroundColorOnDark;
+ (id)_accessibilityButtonShapesBackgroundColorOnDark;
+ (id)_accessibilityButtonShapesBackgroundColorOnLight;
+ (id)_externalSystemSuperDarkGrayColor;
+ (id)_externalSystemExtraDarkGrayColor;
+ (id)_externalSystemDarkGrayColor;
+ (id)_externalSystemGrayColor;
+ (id)_externalSystemMidGrayColor;
+ (id)_externalSystemWhiteColor;
+ (id)_systemMidGrayTintColor;
+ (id)_barStyleBlackHairlineShadowColor;
+ (id)_barHairlineShadowColor;
+ (id)_systemDestructiveTintColor;
+ (id)_systemInteractionTintColor;
- (id)_colorBlendedWithColors:(id)arg1;
- (id)_colorBlendedWithColor:(id)arg1;
- (id)_colorBlendedWithColor:(id)arg1 compositingFilter:(id)arg2;
- (double)_luminanceDifferenceFromColor:(id)arg1;
- (double)_luminance;
- (double)_colorDifferenceFromColor:(id)arg1;
- (_Bool)_isSimilarToColor:(id)arg1 withinPercentage:(double)arg2;
@property(retain, nonatomic, getter=_systemColorName, setter=_setSystemColorName:) NSString *systemColorName;
- (_Bool)isPatternColor;
- (id)styleString;
- (double)alphaComponent;
- (struct CGColor *)cgColor;
- (_Bool)_getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (_Bool)_getWhite:(double *)arg1 alpha:(double *)arg2;
- (_Bool)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (_Bool)getHue:(double *)arg1 saturation:(double *)arg2 brightness:(double *)arg3 alpha:(double *)arg4;
- (_Bool)getWhite:(double *)arg1 alpha:(double *)arg2;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) CIColor *CIColor;
@property(readonly, nonatomic) struct CGColor *CGColor;
- (id)colorWithAlphaComponent:(double)arg1;
- (void)setStroke;
- (void)setFill;
- (void)set;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)dealloc;
- (id)initWithCIColor:(id)arg1;
- (id)initWithPatternImage:(id)arg1;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSColor : UIColor
{
}

+ (id)colorWithCalibratedWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithCoder:(id)arg1;

@end

@interface NSDateComponents (NSCalendarUnit)
+ (id)_ui_namesForComponents:(unsigned long long)arg1;
+ (unsigned long long)_ui_largerComponentsRelativeToComponent:(unsigned long long)arg1;
+ (unsigned long long)_ui_smallerComponentsRelativeToComponent:(unsigned long long)arg1;
+ (unsigned long long)smaller:(_Bool)arg1 componentsRelativeToComponent:(unsigned long long)arg2;
- (void)_ui_setComponents:(id)arg1;
- (void)_ui_setValue:(long long)arg1 forComponent:(unsigned long long)arg2;
- (long long)_ui_valueForComponent:(unsigned long long)arg1;
- (id)_ui_conciseDescription;
@end

@interface NSDictionary (UICollectionAdditions)
- (_Bool)_boolForKey:(id)arg1;
@end

@interface NSDictionary (UIStringDrawingKeyCompatibility)
- (id)_ui_attributesForDictionaryContainingUIStringDrawingKeys;
- (_Bool)_ui_dictionaryContainsUIStringDrawingKeys;
@end

@interface NSDictionary (UIWebBrowserViewPrivate)
- (int)_web_messageType;
- (id)_web_messageSourceURL;
- (int)_web_messageLineNumber;
- (id)_web_messageText;
@end

__attribute__((visibility("hidden")))
@interface NSDocumentDifferenceSize : NSObject
{
    long long _generationCount;
    long long _changeCount;
}

@property(nonatomic) long long changeCount; // @synthesize changeCount=_changeCount;
@property(nonatomic) long long generationCount; // @synthesize generationCount=_generationCount;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface NSDocumentDifferenceSizeTriple : NSObject
{
    NSDocumentDifferenceSize *_dueToRecentChangesBeforeSaving;
    NSDocumentDifferenceSize *_betweenPreservingPreviousVersionAndSaving;
    NSDocumentDifferenceSize *_betweenPreviousSavingAndSaving;
}

@property(readonly, nonatomic) NSDocumentDifferenceSize *betweenPreviousSavingAndSaving; // @synthesize betweenPreviousSavingAndSaving=_betweenPreviousSavingAndSaving;
@property(readonly, nonatomic) NSDocumentDifferenceSize *betweenPreservingPreviousVersionAndSaving; // @synthesize betweenPreservingPreviousVersionAndSaving=_betweenPreservingPreviousVersionAndSaving;
@property(readonly, nonatomic) NSDocumentDifferenceSize *dueToRecentChangesBeforeSaving; // @synthesize dueToRecentChangesBeforeSaving=_dueToRecentChangesBeforeSaving;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface NSExtension (UIViewControllerAdditions)
- (id)__UIKit_upcall_icons;
- (void)instantiateViewControllerWithInputItems:(id)arg1 connectionHandler:(CDUnknownBlockType)arg2;
- (void)instantiateViewControllerWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
@end

@interface NSFileProviderExtension : NSObject <NSExtensionRequestHandling>
{
    NSObject<OS_dispatch_queue> *_extensionDispatchQueue;
    NSObject<OS_dispatch_queue> *_memberQueue;
    NSURL *_memberQueueDocumentStorageURL;
    NSString *_memberQueueProviderIdentifier;
}

+ (id)_relativeComponentsOfURL:(id)arg1 fromBaseURL:(id)arg2;
+ (id)_resourceIDOfURL:(id)arg1 outError:(id *)arg2;
+ (id)placeholderURLForURL:(id)arg1;
+ (_Bool)writePlaceholderAtURL:(id)arg1 withMetadata:(id)arg2 error:(id *)arg3;
@property(copy, nonatomic) NSString *memberQueueProviderIdentifier; // @synthesize memberQueueProviderIdentifier=_memberQueueProviderIdentifier;
@property(retain, nonatomic) NSURL *memberQueueDocumentStorageURL; // @synthesize memberQueueDocumentStorageURL=_memberQueueDocumentStorageURL;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *memberQueue; // @synthesize memberQueue=_memberQueue;
- (void)beginRequestWithExtensionContext:(id)arg1;
- (void)stopProvidingItemAtURL:(id)arg1;
- (void)itemChangedAtURL:(id)arg1;
- (void)startProvidingItemAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)providePlaceholderAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)persistentIdentifierForItemAtURL:(id)arg1;
- (id)URLForItemWithPersistentIdentifier:(id)arg1;
- (id)documentStorageURL;
- (id)providerIdentifier;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSIndexPath (UICollectionViewAdditions)
+ (id)indexPathForItem:(long long)arg1 inSection:(long long)arg2;
@property(readonly, nonatomic) long long item;
@end

@interface NSIndexPath (UITableView)
+ (id)indexPathForRow:(long long)arg1 inSection:(long long)arg2;
@property(readonly, nonatomic) long long row;
@property(readonly, nonatomic) long long section;
@end

@interface NSLayoutConstraint (UIInterfaceBuilderSupport)
@property(getter=_encodedConstant, setter=_setEncodedConstant:) _NSLayoutConstraintConstant *encodedConstant;
@end

@interface NSLayoutConstraint (UIKitSymbolicConstantResolution)
+ (_Bool)_UIWantsMarginAttributeSupport;
- (_Bool)defaultResolvedValue:(double *)arg1 forSymbolicConstant:(id)arg2 error:(id *)arg3;
@end

@interface NSLayoutManager (UITextViewController)
- (id)_commonTextViewController;
@end

@interface NSMutableArray (UICollectionAdditions_Performance)
- (void)_addObjectsFromArray:(id)arg1 range:(struct _NSRange)arg2;
@end

@interface NSMutableArray (UIKBExtras)
- (void)_kb_reverse;
@end

@interface NSMutableArray (UIKitQueueAdditions)
- (id)_ui_peek;
- (id)_ui_dequeue;
- (void)_ui_enqueue:(id)arg1;
@end

@interface NSMutableArray (UIMovieScrubberTrackViewAdditions)
- (void)removeViewsFromSuperview;
@end

@interface NSMutableAttributedString (UIKitAdditions)
- (void)_ui_restoreOriginalFontAttributes;
@end

@interface NSMutableDictionary (UIKBExtras)
+ (id)_dictionaryWithContentsOfDictionaries:(id)arg1;
@end

@interface NSMutableString (UICalloutViewAdditions)
- (void)standardizeWhitespace;
@end

@interface NSObject (IvarDescription)
- (id)_shortMethodDescription;
- (id)_methodDescription;
- (id)__methodDescriptionForClass:(Class)arg1;
- (id)_ivarDescription;
- (id)__ivarDescriptionForClass:(Class)arg1;
@end

@interface NSObject (NSLayoutConstraintCallsThis)
- (id)className;
@end

@interface NSObject (UIAccessibility)
@property(nonatomic) long long accessibilityNavigationStyle;
@property(nonatomic) _Bool shouldGroupAccessibilityChildren; // @dynamic shouldGroupAccessibilityChildren;
- (void)setAccessibilityIdentifier:(id)arg1;
@property(retain, nonatomic) NSString *accessibilityLanguage; // @dynamic accessibilityLanguage;
- (void)setAccessibilityContainer:(id)arg1;
@property(nonatomic) _Bool isAccessibilityElement; // @dynamic isAccessibilityElement;
@property(nonatomic) unsigned long long accessibilityTraits; // @dynamic accessibilityTraits;
@property(nonatomic) struct CGPoint accessibilityActivationPoint; // @dynamic accessibilityActivationPoint;
@property(copy, nonatomic) UIBezierPath *accessibilityPath;
@property(nonatomic) struct CGRect accessibilityFrame; // @dynamic accessibilityFrame;
@property(copy, nonatomic) NSString *accessibilityHint; // @dynamic accessibilityHint;
@property(copy, nonatomic) NSString *accessibilityValue; // @dynamic accessibilityValue;
@property(copy, nonatomic) NSString *accessibilityLabel; // @dynamic accessibilityLabel;
@property(nonatomic) _Bool accessibilityViewIsModal; // @dynamic accessibilityViewIsModal;
@property(nonatomic) _Bool accessibilityElementsHidden; // @dynamic accessibilityElementsHidden;
- (id)storedAccessibilityActivationPoint;
- (id)storedAccessibilityFrame;
- (id)storedIsAccessibilityElement;
- (id)storedAccessibilityTraits;
- (id)storedAccessibilityViewIsModal;
- (id)storedAccessibilityElementsHidden;
- (id)storedAccessibilityNavigationStyle;
- (id)storedShouldGroupAccessibilityChildren;
- (id)accessibilityIdentifier;
- (id)accessibilityContainer;
@end

@interface NSObject (UIAccessibilityAction)
@property(retain, nonatomic) NSArray *accessibilityCustomActions;
- (_Bool)accessibilityActivate;
- (_Bool)accessibilityPerformMagicTap;
- (_Bool)accessibilityPerformEscape;
- (_Bool)accessibilityScroll:(long long)arg1;
- (void)accessibilityDecrement;
- (void)accessibilityIncrement;
@end

@interface NSObject (UIAccessibilityContainer)
@property(retain, nonatomic) NSArray *accessibilityElements;
- (long long)indexOfAccessibilityElement:(id)arg1;
- (id)accessibilityElementAtIndex:(long long)arg1;
- (long long)accessibilityElementCount;
@end

@interface NSObject (UIAccessibilityFocus)
- (_Bool)accessibilityElementIsFocused;
- (void)accessibilityElementDidLoseFocus;
- (void)accessibilityElementDidBecomeFocused;
@end

@interface NSObject (UIAccessibilityPrivate)
+ (void)__accessibilityRequestGuidedAccessSession:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
+ (long long)__accessibilityGuidedAccessRestrictionStateForIdentifier:(id)arg1;
+ (_Bool)__accessibilityGuidedAccessStateEnabled;
- (void)_accessibilityFinalize;
- (void)accessibilitySetIdentification:(id)arg1;
@end

@interface NSObject (UIAppearanceAdditions)
+ (void)_installAppearanceSwizzlesForSetter:(id)arg1;
@end

@interface NSObject (UIKitAccessibilityInterfaceBuilderSupport)
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (_Bool)isAccessibilityElementByDefault;
- (unsigned long long)defaultAccessibilityTraits;
@end

@interface NSObject (UINibLoadingActionEstablishing)
- (void)_connectInterfaceBuilderEventConnection:(id)arg1;
@end

@interface NSObject (UINibLoadingAdditions)
- (void)prepareForInterfaceBuilder;
- (void)awakeFromNib;
@end

@interface NSObject (_NSItemProviderTypeCoercion_UIKitAdditions)
- (id)_NSItemProviderTypeCoercion_coercedUIImageValueFromNSDataValue:(id)arg1 error:(id *)arg2;
- (id)_NSItemProviderTypeCoercion_coercedUIImageValueFromNSURLValue:(id)arg1 error:(id *)arg2;
@end

@interface NSObject (_UIApplicationAlternateUI)
+ (id)_alternateUISwitchableSelectorPairs;
@end

@interface NSObject (_UITraitStorageAccessors)
- (void)_applyTraitStorageRecordsForTraitCollection:(id)arg1;
@property(getter=_traitStorageList, setter=_setTraitStorageList:) _UITraitStorageList *traitStorageList;
@end

@interface NSParagraphStyle (UIKitAdditions)
- (long long)_ui_resolvedTextAlignment;
@end

@interface NSString (UICalloutViewAdditions)
- (id)stringByStandardizingWhitespace;
@end

@interface NSString (UIKBExtras)
- (id)_adjustedFontFromFont:(id)arg1 withinFrame:(struct CGRect)arg2 minimumSize:(double)arg3 textSize:(struct CGSize *)arg4;
- (struct CGSize)_optimizedSizeWithFont:(id)arg1;
@end

@interface NSString (UIKitAdditions)
- (id)queryKeysAndValues;
- (id)_uikit_unescapedQueryValue;
@end

@interface NSString (UISafeInstantiators)
- (id)_initWithUTF8String:(const char *)arg1 maxLength:(unsigned long long)arg2;
@end

@interface NSString (UIStringDrawing)
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 minFontSize:(double)arg4 actualFontSize:(double *)arg5 lineBreakMode:(long long)arg6 baselineAdjustment:(long long)arg7;
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 fontSize:(double)arg4 lineBreakMode:(long long)arg5 baselineAdjustment:(long long)arg6;
- (struct CGSize)sizeWithFont:(id)arg1 minFontSize:(double)arg2 actualFontSize:(double *)arg3 forWidth:(double)arg4 lineBreakMode:(long long)arg5;
- (struct CGSize)drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4;
- (struct CGSize)drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)drawInRect:(struct CGRect)arg1 withFont:(id)arg2;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4;
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 withFont:(id)arg2;
- (struct CGSize)sizeWithFont:(id)arg1 forWidth:(double)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)sizeWithFont:(id)arg1;
@end

@interface NSString (UIStringDrawingLegacy)
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 minFontSize:(double)arg4 actualFontSize:(double *)arg5 lineBreakMode:(long long)arg6 baselineAdjustment:(long long)arg7;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 minFontSize:(double)arg4 actualFontSize:(double *)arg5 lineBreakMode:(long long)arg6 baselineAdjustment:(long long)arg7 includeEmoji:(_Bool)arg8;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 fontSize:(double)arg4 lineBreakMode:(long long)arg5 baselineAdjustment:(long long)arg6;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 fontSize:(double)arg4 lineBreakMode:(long long)arg5 baselineAdjustment:(long long)arg6 includeEmoji:(_Bool)arg7;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1 minFontSize:(double)arg2 actualFontSize:(double *)arg3 forWidth:(double)arg4 lineBreakMode:(long long)arg5;
- (struct CGSize)_legacy_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4 lineSpacing:(int)arg5 includeEmoji:(_Bool)arg6 truncationRect:(struct CGRect *)arg7;
- (struct CGSize)_legacy_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4 lineSpacing:(int)arg5 includeEmoji:(_Bool)arg6;
- (struct CGSize)_legacy_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4 lineSpacing:(int)arg5;
- (struct CGSize)_legacy_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4;
- (struct CGSize)_legacy_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)_legacy_drawInRect:(struct CGRect)arg1 withFont:(id)arg2;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 lineBreakMode:(long long)arg3 lineSpacing:(int)arg4;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4 letterSpacing:(double)arg5 includeEmoji:(_Bool)arg6;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4 letterSpacing:(double)arg5;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4;
- (struct CGSize)_legacy_drawAtPoint:(struct CGPoint)arg1 withFont:(id)arg2;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1 forWidth:(double)arg2 lineBreakMode:(long long)arg3 letterSpacing:(double)arg4;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1 forWidth:(double)arg2 lineBreakMode:(long long)arg3;
- (struct CGSize)_legacy_sizeWithFont:(id)arg1;
@end

@interface NSString (UIStringDrawingSuperCrufty)
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 minFontSize:(double)arg4 actualFontSize:(double *)arg5 lineBreakMode:(long long)arg6 baselineAdjustment:(long long)arg7 includeEmoji:(_Bool)arg8;
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 fontSize:(double)arg4 lineBreakMode:(long long)arg5 baselineAdjustment:(long long)arg6 includeEmoji:(_Bool)arg7;
- (struct CGSize)_drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4 lineSpacing:(int)arg5 includeEmoji:(_Bool)arg6 truncationRect:(struct CGRect *)arg7;
- (struct CGSize)drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4 lineSpacing:(int)arg5 includeEmoji:(_Bool)arg6;
- (struct CGSize)drawInRect:(struct CGRect)arg1 withFont:(id)arg2 lineBreakMode:(long long)arg3 alignment:(long long)arg4 lineSpacing:(int)arg5;
- (struct CGSize)sizeWithFont:(id)arg1 constrainedToSize:(struct CGSize)arg2 lineBreakMode:(long long)arg3 lineSpacing:(int)arg4;
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4 letterSpacing:(double)arg5 includeEmoji:(_Bool)arg6;
- (struct CGSize)drawAtPoint:(struct CGPoint)arg1 forWidth:(double)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4 letterSpacing:(double)arg5;
- (struct CGSize)sizeWithFont:(id)arg1 forWidth:(double)arg2 lineBreakMode:(long long)arg3 letterSpacing:(double)arg4;
@end

@interface NSString (UIWebViewAdditions)
- (id)_uikit_stringWithWritingDirection:(long long)arg1 asOverride:(_Bool)arg2;
- (id)_uikit_stringByTrimmingWhitespaceAndNewlines;
@end

@interface NSTextStorage (UIKitUndoExtensions)
- (id)_undoRedoAttributedSubstringFromRange:(struct _NSRange)arg1;
- (void)_undoRedoTextOperation:(id)arg1;
@end

@interface NSURL (UIDocumentPicker)
- (_Bool)ui_hasSandboxExtendedForClass:(const char *)arg1;
- (_Bool)ui_hasReadSandboxExtended;
- (id)ui_issueSandboxExtensionOfClass:(const char *)arg1 error:(id *)arg2;
- (id)ui_issueReadWriteSandboxExtensionWithError:(id *)arg1;
- (id)ui_issueReadSandboxExtensionWithError:(id *)arg1;
@end

@interface NSURL (UIKitAdditions)
+ (id)URLWithDisplayIdentifier:(id)arg1 forSearchResultDomain:(int)arg2 andIdentifier:(unsigned long long)arg3;
+ (id)mapsURLWithSourceAddress:(id)arg1 destinationAddress:(id)arg2;
+ (id)mapsURLWithAddress:(id)arg1;
+ (id)mapsURLWithQuery:(id)arg1;
- (_Bool)isHTTPOrHTTPSURL;
- (_Bool)isJavaScriptURL;
- (_Bool)isAccountURL;
- (_Bool)isWebcalURL;
- (_Bool)isSpringboardHandledURL;
- (id)searchResultIdentifier;
- (id)searchResultDomain;
- (id)radarWebURL;
- (id)appleStoreURL;
- (id)itmsURL;
- (id)phobosURL;
- (_Bool)isGoogleMapsURL;
- (_Bool)_isGoogleMapsDomain:(id)arg1 subdomain:(id)arg2 path:(id)arg3 queryKeysAndValues:(id)arg4;
- (void)_domain:(id *)arg1 subdomain:(id *)arg2;
@end

@interface NSURL (UIKitPrivateAdditions)
- (_Bool)isInternalUIKitURL;
@end

__attribute__((visibility("hidden")))
@interface NSUndoTextOperation : NSObject
{
    struct _NSRange _affectedRange;
    UITextInputController *_inputController;
}

@property(nonatomic) UITextInputController *inputController; // @synthesize inputController=_inputController;
@property(nonatomic) struct _NSRange affectedRange; // @synthesize affectedRange=_affectedRange;
- (_Bool)supportsCoalescing;
- (void)undoRedo;
- (id)initWithAffectedRange:(struct _NSRange)arg1 inputController:(id)arg2;

@end

@interface NSValue (NSValueUIGeometryExtensions)
+ (id)valueWithUIOffset:(struct UIOffset)arg1;
+ (id)valueWithUIEdgeInsets:(struct UIEdgeInsets)arg1;
+ (id)valueWithCGAffineTransform:(struct CGAffineTransform)arg1;
+ (id)valueWithCGRect:(struct CGRect)arg1;
+ (id)valueWithCGSize:(struct CGSize)arg1;
+ (id)valueWithCGVector:(struct CGVector)arg1;
+ (id)valueWithCGPoint:(struct CGPoint)arg1;
- (struct UIOffset)UIOffsetValue;
- (struct UIEdgeInsets)UIEdgeInsetsValue;
- (struct CGAffineTransform)CGAffineTransformValue;
- (struct CGRect)CGRectValue;
- (struct CGSize)CGSizeValue;
- (struct CGVector)CGVectorValue;
- (struct CGPoint)CGPointValue;
@end

__attribute__((visibility("hidden")))
@interface PKExtendedPhysicsBody : PKPhysicsBody
{
    long long _associations;
    double _areaFactor;
}

+ (id)bodyWithEdgeLoopFromPath:(struct CGPath *)arg1;
+ (id)bodyWithEdgeChainFromPath:(struct CGPath *)arg1;
+ (id)bodyWithPolygonFromPath:(struct CGPath *)arg1;
+ (id)bodyWithEdgeFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (id)bodyWithRectangleOfSize:(struct CGSize)arg1;
+ (id)bodyWithCircleOfRadius:(double)arg1;
- (_Bool)dissociate;
- (void)associate;
- (id)description;
- (id)initWithRectangleOfSize:(struct CGSize)arg1;
@property(nonatomic) double normalizedDensity;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PKExtendedPhysicsWorld : PKPhysicsWorld
{
}

@property(nonatomic) _Bool debugEnabled;
- (_Bool)supportsDebug;
- (id)debugPaths;

@end

@interface PKJob (UIPrintStatusViewController)
- (_Bool)isEqual:(id)arg1;
@end

@interface PKPrinter (UIPrinterBrowserViewController)
- (_Bool)isEqual:(id)arg1;
@end

@interface TIDocumentState (UITextInputAdditions)
+ (id)documentStateOfSecureTextDocument:(id)arg1;
+ (id)documentStateOfDocument:(id)arg1;
- (id)initWithSecureTextDocument:(id)arg1;
- (id)initWithDocument:(id)arg1;
- (id)_contextAfterPosition:(id)arg1 inDocument:(id)arg2;
- (id)_contextBeforePosition:(id)arg1 inDocument:(id)arg2;
- (id)_positionFromPosition:(id)arg1 toPreviousWordStartInDocument:(id)arg2 tokenAccumulator:(CDUnknownBlockType)arg3;
- (id)_positionFromPosition:(id)arg1 toPreviousWordBoundaryInDocument:(id)arg2 tokenAccumulator:(CDUnknownBlockType)arg3;
- (id)copyTextInRange:(id)arg1 fromDocument:(id)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2 inDocument:(id)arg3;
@end

@interface TIKeyboardCandidateResultSet (UIKeyboardCandidateAdditions)
- (_Bool)candidatesForSortIndexShowAlternativeText:(long long)arg1;
- (id)candidateGroupsForSortIndex:(long long)arg1;
@end

@interface TITextInputTraits (UIKBExtras)
+ (unsigned long long)translateToTextInputReturnKeyType:(long long)arg1;
+ (unsigned long long)translateToTextInputKeyboardAppearance:(long long)arg1;
+ (unsigned long long)translateToTextInputKeyboardType:(long long)arg1;
+ (unsigned long long)translateToTextInputSpellCheckingType:(long long)arg1;
+ (unsigned long long)translateToTextInputAutocorrectionType:(long long)arg1;
+ (unsigned long long)translateToTextInputAutocapitalizationType:(long long)arg1;
+ (id)traitsForUITextInputTraits:(id)arg1;
@end

@interface UIAcceleration : NSObject
{
    double timestamp;
    double x;
    double y;
    double z;
}

@property(nonatomic) double z; // @synthesize z;
@property(nonatomic) double y; // @synthesize y;
@property(nonatomic) double x; // @synthesize x;
@property(nonatomic) double timestamp; // @synthesize timestamp;
- (id)description;

@end

@interface UIAccelerometer : NSObject
{
    double _updateInterval;
    id <UIAccelerometerDelegate> _delegate;
    struct {
        unsigned int delegateDidAccelerate:1;
        unsigned int reserved:31;
    } _accelerometerFlags;
    CMMotionManager *_motionManager;
}

+ (id)sharedAccelerometer;
@property(nonatomic) id <UIAccelerometerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double updateInterval; // @synthesize updateInterval=_updateInterval;
- (void)_didSuspend:(id)arg1;
- (void)_willResume:(id)arg1;
- (void)_stopAccelerometer;
- (void)_startAccelerometerIfNecessary;
- (id)_motionManager;
- (void)_acceleratedInX:(double)arg1 y:(double)arg2 z:(double)arg3 timestamp:(double)arg4;
- (void)dealloc;
- (id)init;

@end

@interface UIAccessibilityCustomAction : NSObject
{
    id _weakTarget;
    NSString *_name;
    SEL _selector;
}

@property(nonatomic) SEL selector; // @synthesize selector=_selector;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) __weak id target;
- (void)dealloc;
- (id)initWithName:(id)arg1 target:(id)arg2 selector:(SEL)arg3;

@end

@interface UIAccessibilityElement : NSObject <UIAccessibilityIdentification>
{
}

- (id)initWithAccessibilityContainer:(id)arg1;

// Remaining properties
@property(nonatomic) id accessibilityContainer; // @dynamic accessibilityContainer;
@property(nonatomic) struct CGRect accessibilityFrame; // @dynamic accessibilityFrame;
@property(retain, nonatomic) NSString *accessibilityHint; // @dynamic accessibilityHint;
@property(copy, nonatomic) NSString *accessibilityIdentifier; // @dynamic accessibilityIdentifier;
@property(retain, nonatomic) NSString *accessibilityLabel; // @dynamic accessibilityLabel;
@property(nonatomic) unsigned long long accessibilityTraits; // @dynamic accessibilityTraits;
@property(retain, nonatomic) NSString *accessibilityValue; // @dynamic accessibilityValue;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool isAccessibilityElement; // @dynamic isAccessibilityElement;
@property(readonly) Class superclass;

@end

@interface UIAccessoryBackgroundTaskAction : BSAction
{
}

- (long long)UIActionType;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface UIResponder : NSObject <UITextInput_Internal, UITextInputAdditions, _UIStateRestorationContinuation>
{
}

+ (void)clearTextInputContextIdentifier:(id)arg1;
+ (void)_finishStateRestoration;
+ (void)_cleanupAllStateRestorationTables;
+ (void)_prepareForSecondPassStateRestoration;
+ (void)_cleanupStateRestorationObjectIdentifierTrackingTables;
+ (void)_setRestoredIdentifierPathForObject:(id)arg1 identifierPath:(id)arg2;
+ (void)_updateStateRestorationIdentifierMap;
+ (void)_stopDeferredTrackingObjectsWithIdentifiers;
+ (void)_startDeferredTrackingObjectsWithIdentifiers;
+ (id)objectWithRestorationIdentifierPath:(id)arg1;
- (void)_tagAsRestorableResponder;
- (void)_clearRestorableResponderStatus;
- (id)_nextResponderOverride;
- (void)_overrideInputAccessoryViewNextResponderWithResponder:(id)arg1;
- (void)_overrideInputViewNextResponderWithResponder:(id)arg1;
- (void)_clearOverrideNextResponder;
@property(readonly, nonatomic) NSUndoManager *undoManager;
- (id)targetForAction:(SEL)arg1 withSender:(id)arg2;
- (id)_targetForAction:(SEL)arg1 withSender:(id)arg2 canPerformActionBlock:(CDUnknownBlockType)arg3;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_clearBecomeFirstResponderWhenCapable;
- (id)firstResponder;
- (_Bool)isFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)resignFirstResponder;
- (void)_finishResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)_containsResponder:(id)arg1;
- (_Bool)_containedInAbsoluteResponderChain;
@property(readonly, nonatomic) UIResponder *_responderForEditing;
@property(readonly, nonatomic) UIResponder *_editingDelegate;
- (_Bool)_isRootForKeyResponderCycle;
- (id)_previousKeyResponder;
- (id)_nextKeyResponder;
- (id)nextResponder;
- (void)gestureChanged:(struct __GSEvent *)arg1;
- (void)gestureEnded:(struct __GSEvent *)arg1;
- (void)gestureStarted:(struct __GSEvent *)arg1;
- (void)scrollWheel:(struct __GSEvent *)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)motionCancelled:(long long)arg1 withEvent:(id)arg2;
- (void)motionEnded:(long long)arg1 withEvent:(id)arg2;
- (void)motionBegan:(long long)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (void)reloadInputViewsWithoutReset;
- (void)reloadInputViews;
@property(readonly, retain, nonatomic) NSString *textInputContextIdentifier;
@property(readonly, retain, nonatomic) UITextInputMode *textInputMode;
@property(readonly, retain, nonatomic) UIInputViewController *inputAccessoryViewController;
@property(readonly, retain, nonatomic) UIInputViewController *inputViewController;
@property(readonly, retain, nonatomic) UIView *inputAccessoryView;
@property(readonly, retain, nonatomic) UIView *inputView;
@property(readonly, nonatomic) NSArray *keyCommands;
- (void)_didChangeToFirstResponder:(id)arg1;
- (_Bool)_canChangeFirstResponder:(id)arg1 toResponder:(id)arg2;
- (id)_responderSelectionImage;
- (id)_responderSelectionContainerViewForResponder:(id)arg1;
- (struct CGRect)_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect)_responderSelectionRectForWindow:(id)arg1;
- (id)_primaryContentResponder;
- (id)_deepestUnambiguousResponder;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)_moveWithEvent:(id)arg1;
- (id)_showServiceForText:(id)arg1 type:(long long)arg2 fromRect:(struct CGRect)arg3 inView:(id)arg4;
- (_Bool)_canShowTextServices;
- (id)_nextViewControllerInResponderChain;
- (_Bool)_isViewController;
- (void)_completeForwardingTouches:(id)arg1 phase:(long long)arg2 event:(id)arg3;
- (void)_completeForwardingTouches:(id)arg1 phase:(long long)arg2 event:(id)arg3 index:(unsigned long long)arg4;
- (_Bool)_isTransitioningFromView:(id)arg1;
- (void)_windowResignedKey;
- (void)_windowBecameKey;
- (id)nextFirstResponder;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)_handleKeyEvent:(struct __GSEvent *)arg1;
- (_Bool)_isPinningInputViews;
- (void)_endPinningInputViews;
- (void)_beginPinningInputViews;
- (void)_becomeFirstResponderAndMakeVisible;
- (_Bool)_canBecomeFirstResponder;
- (void)_resignFirstResponder;
- (void)_becomeFirstResponder;
- (_Bool)_resignIfContainsFirstResponder;
- (id)_responderWindow;
- (id)_keyboardResponder;
- (_Bool)_requiresKeyboardResetOnReload;
- (_Bool)_requiresKeyboardWindowWhenFirstResponder;
- (_Bool)_requiresKeyboardWhenFirstResponder;
- (_Bool)_disableAutomaticKeyboardUI;
- (_Bool)_disableAutomaticKeyboardBehavior;
- (id)_keyCommandForEvent:(id)arg1;
- (id)_keyCommands;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (id)_window;
- (_Bool)_supportsBecomeFirstResponderWhenPossible;
- (_Bool)_canBecomeFirstResponderWhenPossible;
- (_Bool)_becomeFirstResponderWhenPossible;
- (id)_responderForBecomeFirstResponder;
- (id)_firstResponder;
- (void)_setFirstResponder:(id)arg1;
- (void)restoreUserActivityState:(id)arg1;
- (void)updateUserActivityState:(id)arg1;
@property(retain, nonatomic) NSUserActivity *userActivity;
- (id)_userActivity;
- (id)_selectableText;
@property(readonly, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
- (struct CGRect)_lastRectForRange:(id)arg1;
- (long long)selectionAffinity;
- (_Bool)_shouldPerformUICalloutBarButtonReplaceAction:(SEL)arg1 forText:(id)arg2 checkAutocorrection:(_Bool)arg3;
- (void)_phraseBoundaryGesture:(id)arg1;
- (id)_newPhraseBoundaryGestureRecognizer;
- (void)_unmarkText;
- (void)_setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (_Bool)_hasMarkedText;
- (_Bool)_usesAsynchronousProtocol;
- (void)_setGestureRecognizers;
- (long long)_selectionAffinity;
- (void)_setSelectedTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_setHistory:(id)arg1 withExtending:(_Bool)arg2 withAnchor:(int)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)_setSelectionRangeWithHistory:(id)arg1;
- (void)_updateSelectionWithTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_fontForCaretSelection;
- (id)_textColorForCaretSelection;
- (id)_clampedpositionFromPosition:(id)arg1 offset:(int)arg2;
- (id)_findPleasingWordBoundaryFromPosition:(id)arg1;
- (id)_fullRange;
- (id)_rangeOfParagraphEnclosingPosition:(id)arg1;
- (id)_rangeOfLineEnclosingPosition:(id)arg1;
- (id)_rangeOfEnclosingWord:(id)arg1;
- (id)_rangeOfText:(id)arg1 endingAtPosition:(id)arg2;
- (void)_scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)_replaceCurrentWordWithText:(id)arg1;
- (void)_deleteForwardAndNotify:(_Bool)arg1;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;
- (void)_deleteToEndOfLine;
- (void)_deleteToStartOfLine;
- (void)_deleteByWord;
- (void)_setCaretSelectionAtEndOfSelection;
- (id)_positionAtStartOfWords:(unsigned long long)arg1 beforePosition:(id)arg2;
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)arg1;
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;
- (void)_expandSelectionToBackwardDeletionCluster;
- (void)_moveCurrentSelection:(int)arg1;
- (void)_extendCurrentSelection:(int)arg1;
- (_Bool)_hasMarkedTextOrRangedSelection;
- (_Bool)_isEmptySelection;
- (struct CGRect)_selectionClipRect;
- (_Bool)_selectionAtDocumentEnd;
- (_Bool)_selectionAtDocumentStart;
- (_Bool)_selectionAtWordStart;
- (id)_fullText;
- (id)_wordContainingCaretSelection;
- (unsigned int)_characterInRelationToRangedSelection:(int)arg1;
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;
- (unsigned int)_characterBeforeCaretSelection;
- (unsigned int)_characterAfterCaretSelection;
- (struct _NSRange)_nsrangeForTextRange:(id)arg1;
- (int)_indexForTextPosition:(id)arg1;
- (void)_selectAll;
- (struct _NSRange)_selectedNSRange;
- (id)_keyInput;
@property(readonly, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;
- (void)endSelectionChange;
- (void)beginSelectionChange;
@property(readonly, nonatomic, getter=_caretRect) struct CGRect caretRect;
- (id)_asTextSelection;
@property(readonly, nonatomic, getter=isEditing) _Bool editing;
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
- (id)interactionAssistant;
- (id)textInputView;
- (_Bool)_usesDeemphasizedTextAppearance;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)_restorationIdentifierPath;
@property(copy, nonatomic) NSString *restorationIdentifier;
- (void)_rebuildStateRestorationIdentifierPath;

@end

@interface UIView : UIResponder <_UIScrollNotification, UITextEffectsOrdering, NSISVariableDelegate, NSLayoutItem, NSISEngineDelegate, _UITraitEnvironmentInternal, NSCoding, UIAppearance, UIAppearanceContainer, UIDynamicItem, UITraitEnvironment, UICoordinateSpace>
{
    CALayer *_layer;
    id _gestureInfo;
    NSMutableArray *_gestureRecognizers;
    NSArray *_subviewCache;
    float _charge;
    long long _tag;
    UIViewController *_viewDelegate;
    NSString *_backgroundColorSystemColorName;
    unsigned long long _countOfMotionEffectsInSubtree;
    struct {
        unsigned int userInteractionDisabled:1;
        unsigned int implementsDrawRect:1;
        unsigned int implementsDidScroll:1;
        unsigned int implementsMouseTracking:1;
        unsigned int implementsIntrinsicContentSize:1;
        unsigned int hasBackgroundColor:1;
        unsigned int isOpaque:1;
        unsigned int becomeFirstResponderWhenCapable:1;
        unsigned int interceptMouseEvent:1;
        unsigned int deallocating:1;
        unsigned int debugFlash:1;
        unsigned int debugSkippedSetNeedsDisplay:1;
        unsigned int debugScheduledDisplayIsRequired:1;
        unsigned int isInAWindow:1;
        unsigned int isAncestorOfFirstResponder:1;
        unsigned int dontAutoresizeSubviews:1;
        unsigned int autoresizeMask:6;
        unsigned int patternBackground:1;
        unsigned int fixedBackgroundPattern:1;
        unsigned int dontAnimate:1;
        unsigned int superLayerIsView:1;
        unsigned int layerKitPatternDrawing:1;
        unsigned int multipleTouchEnabled:1;
        unsigned int exclusiveTouch:1;
        unsigned int hasViewController:1;
        unsigned int needsDidAppearOrDisappear:1;
        unsigned int gesturesEnabled:1;
        unsigned int deliversTouchesForGesturesToSuperview:1;
        unsigned int chargeEnabled:1;
        unsigned int skipsSubviewEnumeration:1;
        unsigned int needsDisplayOnBoundsChange:1;
        unsigned int hasTiledLayer:1;
        unsigned int hasLargeContent:1;
        unsigned int unused:1;
        unsigned int traversalMark:1;
        unsigned int appearanceIsInvalid:1;
        unsigned int monitorsSubtree:1;
        unsigned int hostsAutolayoutEngine:1;
        unsigned int constraintsAreClean:1;
        unsigned int subviewLayoutConstraintsAreClean:1;
        unsigned int intrinsicContentSizeConstraintsAreClean:1;
        unsigned int potentiallyHasDanglyConstraints:1;
        unsigned int doesNotTranslateAutoresizingMaskIntoConstraints:1;
        unsigned int autolayoutIsClean:1;
        unsigned int layoutFlushingDisabled:1;
        unsigned int layingOutFromConstraints:1;
        unsigned int wantsAutolayout:1;
        unsigned int subviewWantsAutolayout:1;
        unsigned int isApplyingValuesFromEngine:1;
        unsigned int isInAutolayout:1;
        unsigned int isUpdatingAutoresizingConstraints:1;
        unsigned int isUpdatingConstraints:1;
        unsigned int isHostingUpdateConstraintsPassDuringLayout:1;
        unsigned int isRunningEngineLevelConstraintsPass:1;
        unsigned int systemLayoutFittingSizeNeedsUpdate:1;
        unsigned int systemLayoutFittingSizeNeedsUpdateInWholeSubtree:1;
        unsigned int isCalculatingSystemLayoutFittingSize:1;
        unsigned int stayHiddenAwaitingReuse:1;
        unsigned int stayHiddenAfterReuse:1;
        unsigned int skippedLayoutWhileHiddenForReuse:1;
        unsigned int hasMaskView:1;
        unsigned int hasVisualAltitude:1;
        unsigned int hasBackdropMaskViews:1;
        unsigned int backdropMaskViewFlags:5;
        unsigned int delaysTouchesForSystemGestures:1;
        unsigned int subclassShouldDelayTouchForSystemGestures:1;
        unsigned int hasMotionEffects:1;
        unsigned int backdropOverlayMode:2;
        unsigned int tintAdjustmentMode:2;
        unsigned int isReferenceView:1;
        unsigned int focusState:2;
        unsigned int hasUserInterfaceIdiom:1;
        unsigned int userInterfaceIdiom:3;
        unsigned int ancestorDefinesTintColor:1;
        unsigned int ancestorDefinesTintAdjustmentMode:1;
        unsigned int needsTraitCollectionDidChange:1;
        unsigned int coloredViewBounds:1;
        unsigned int coloredAlignmentRects:1;
        unsigned int preservesSuperviewMargins:1;
        unsigned int hasGeometryObservers:1;
        unsigned int wantsGeometryChanges:1;
    } _viewFlags;
    long long _retainCount;
    long long _tintAdjustmentDimmingCount;
    _Bool _shouldArchiveUIAppearanceTags;
    UIColor *_interactionTintColor;
    NSISVariable *_minXVariable;
    NSISVariable *_minYVariable;
    NSISVariable *_boundsWidthVariable;
    NSISVariable *_boundsHeightVariable;
    NSISEngine *_layoutEngine;
    NSString *_layoutDebuggingIdentifier;
    NSMutableArray *_internalConstraints;
    NSArray *_constraintsExceptingSubviewAutoresizingConstraints;
    UIPresentationController *__presentationControllerToNotifyOnLayoutSubviews;
}

+ (void)_setShouldEnableUIKitParallaxEffects:(_Bool)arg1;
+ (_Bool)_shouldEnableUIKitDefaultParallaxEffects;
+ (void)_recenterMotionEffects;
+ (_Bool)_motionEffectsEnabled;
+ (_Bool)_motionEffectsSupported;
+ (void)_endSuspendingMotionEffectsForReason:(id)arg1;
+ (void)_beginSuspendingMotionEffectsForReason:(id)arg1;
+ (id)_motionEffectEngine;
+ (void)_setTintColorUpdating:(_Bool)arg1;
+ (_Bool)_tintColorUpdating;
+ (id)_defaultInteractionTintColorForIdiom:(long long)arg1;
+ (void)_setAnimatedPropertiesEnabled:(_Bool)arg1;
+ (Class)layerClass;
+ (_Bool)_preventsAppearanceProxyCustomization;
+ (void)_performCustomizableAppearanceModifications:(CDUnknownBlockType)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceMatchingProperties:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)_appearanceRecorderWhenContainedIn:(Class)arg1;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)_appearanceWhenContainedIn:(id)arg1;
+ (id)_appearanceRecorder;
+ (id)appearance;
+ (void)_removeHierarchyTrackingVisitor:(id)arg1;
+ (void)_addHierarchyTrackingVisitor:(id)arg1;
+ (void)throttledFlush;
+ (void)flush;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2 withBaseDuration:(double)arg3;
+ (double)_durationForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
+ (int)_degreesToRotateFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
+ (void)_setAnimationFilterValue:(float)arg1;
+ (void)_setAnimationFilter:(int)arg1 forView:(id)arg2;
+ (void)setAnimationDidStopSelector:(SEL)arg1;
+ (void)setAnimationWillStartSelector:(SEL)arg1;
+ (void)setAnimationTransition:(long long)arg1 forView:(id)arg2 cache:(_Bool)arg3;
+ (void)setAnimationRoundsToInteger:(_Bool)arg1;
+ (void)setAnimationFromCurrentState:(_Bool)arg1;
+ (void)setAnimationAutoreverses:(_Bool)arg1;
+ (void)setAnimationBeginsFromCurrentState:(_Bool)arg1;
+ (void)setAnimationRepeatAutoreverses:(_Bool)arg1;
+ (void)setAnimationRepeatCount:(float)arg1;
+ (void)setAnimationCurve:(long long)arg1;
+ (void)setAnimationPreventsAdditive:(_Bool)arg1;
+ (void)setAnimationStartTime:(double)arg1;
+ (void)setAnimationStartDate:(id)arg1;
+ (void)setAnimationFrameInterval:(double)arg1;
+ (void)setAnimationDelay:(double)arg1;
+ (void)setAnimationDuration:(double)arg1;
+ (void)_performWithoutAnimation:(CDUnknownBlockType)arg1;
+ (void)performWithoutAnimation:(CDUnknownBlockType)arg1;
+ (_Bool)areAnimationsEnabled;
+ (void)setAnimationsEnabled:(_Bool)arg1;
+ (void)_inheritAnimationParameters;
+ (CDUnknownBlockType)_alongsideAnimations;
+ (void)_setAlongsideAnimations:(CDUnknownBlockType)arg1;
+ (void)_finalizeStoppedAnimationWithUUID:(id)arg1 reverseAnimation:(_Bool)arg2;
+ (void)_stopAnimationWithUUID:(id)arg1;
+ (void)_reverseAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(long long)arg3;
+ (void)_completeAnimationWithUUID:(id)arg1 duration:(double)arg2 curve:(long long)arg3 reverse:(_Bool)arg4;
+ (_Bool)_addCompletion:(CDUnknownBlockType)arg1;
+ (void)_disableAnimationTracking:(id)arg1;
+ (void)_disableAnimationTracking:(id)arg1 clearTrackedAnimations:(_Bool)arg2;
+ (id)_performWithAnimationTracking:(CDUnknownBlockType)arg1;
+ (void)_finishAnimationTracking;
+ (id)_startAnimationTracking;
+ (id)_enableAnimationTracking;
+ (_Bool)_isAnimationTracking;
+ (void)enableAnimation;
+ (void)disableAnimation;
+ (void)setAnimationPosition:(struct CGPoint)arg1;
+ (void)setAnimationDelegate:(id)arg1;
+ (long long)_currentAnimationCurve;
+ (double)_currentAnimationDuration;
+ (void)_setAnimationAttributes:(id)arg1 skipDelegateAssignment:(_Bool)arg2;
+ (void)_setAnimationAttributes:(id)arg1;
+ (_Bool)_isInAnimationBlock;
+ (void)endAnimations;
+ (void)commitAnimations;
+ (void)beginAnimations:(id)arg1 context:(void *)arg2;
+ (void)beginAnimations:(id)arg1;
+ (void)_animateWithAttributes:(id)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)_currentAnimationAttributes;
+ (id)_defaultUIViewActionForLayer:(id)arg1 forKey:(id)arg2;
+ (id)_defaultUIViewAnimationForLayer:(id)arg1 forKey:(id)arg2;
+ (_Bool)_hasActiveAnimationContext;
+ (void)performSystemAnimation:(unsigned long long)arg1 onViews:(id)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)transitionWithView:(id)arg1 duration:(double)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)animateWithDuration:(double)arg1 animations:(CDUnknownBlockType)arg2;
+ (void)animateWithDuration:(double)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 start:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)animateWithDuration:(double)arg1 delay:(double)arg2 usingSpringWithDamping:(double)arg3 initialSpringVelocity:(double)arg4 options:(unsigned long long)arg5 animations:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;
+ (void)_animateWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 factory:(id)arg4 animations:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 animations:(CDUnknownBlockType)arg5 start:(CDUnknownBlockType)arg6 completion:(CDUnknownBlockType)arg7;
+ (void)_setupAnimationWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 factory:(id)arg5 animations:(CDUnknownBlockType)arg6 start:(CDUnknownBlockType)arg7 animationStateGenerator:(CDUnknownBlockType)arg8 completion:(CDUnknownBlockType)arg9;
+ (void)addKeyframeWithRelativeStartTime:(double)arg1 relativeDuration:(double)arg2 animations:(CDUnknownBlockType)arg3;
+ (void)animateKeyframesWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)setAnimationTransition:(long long)arg1 forView:(id)arg2;
+ (id)_disabledColorForTintColor:(id)arg1;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(double)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)_animateUsingDefaultDampedSpringWithDelay:(double)arg1 initialSpringVelocity:(double)arg2 options:(unsigned long long)arg3 animations:(CDUnknownBlockType)arg4 start:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)_animateUsingDefaultTimingWithOptions:(unsigned long long)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
+ (double)_durationOfSpringAnimationWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 velocity:(double)arg4;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 mass:(double)arg4 stiffness:(double)arg5 damping:(double)arg6 initialVelocity:(double)arg7 animations:(CDUnknownBlockType)arg8 completion:(CDUnknownBlockType)arg9;
+ (void)_animateUsingSpringWithDuration:(double)arg1 delay:(double)arg2 options:(unsigned long long)arg3 mass:(double)arg4 stiffness:(double)arg5 damping:(double)arg6 initialVelocity:(double)arg7 animations:(CDUnknownBlockType)arg8 start:(CDUnknownBlockType)arg9 completion:(CDUnknownBlockType)arg10;
+ (id)_topMostView:(id)arg1 reverse:(_Bool)arg2;
+ (_Bool)_isAddingResponderToTree;
+ (void)_setIsResponderAncestorOfFirstResponder:(_Bool)arg1 startingAtFirstResponder:(id)arg2;
+ (void)_performBlockwithAutomaticAppearanceDisabled:(CDUnknownBlockType)arg1;
+ (void)_endDisablingPromoteDescendantToFirstResponder;
+ (void)_beginDisablingPromoteDescendantToFirstResponder;
+ (void)_initializeForIdiom:(long long)arg1;
+ (void)_registerClassForIdiomInitializationIfNeccessary;
+ (void)_performInitializationForIdiomIfNeccessary:(long long)arg1;
+ (void)_transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 animations:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
+ (_Bool)_invalidatesViewUponCreation;
+ (void)_setInvalidatesViewUponCreation:(_Bool)arg1;
+ (id)_tintColorForStyle:(int)arg1;
+ (id)_viewWithLayoutConstraints;
+ (_Bool)_retroactivelyRequiresConstraintBasedLayout;
+ (_Bool)requiresConstraintBasedLayout;
+ (void)_enableToolsDebugAlignmentRects:(_Bool)arg1;
+ (void)_enableToolsDebugColorViewBounds:(_Bool)arg1;
+ (_Bool)_toolsDebugAlignmentRects;
+ (_Bool)_toolsDebugColorViewBounds;
@property(retain, nonatomic, getter=_presentationControllerToNotifyOnLayoutSubviews, setter=_setPresentationControllerToNotifyOnLayoutSubviews:) UIPresentationController *_presentationControllerToNotifyOnLayoutSubviews; // @synthesize _presentationControllerToNotifyOnLayoutSubviews=__presentationControllerToNotifyOnLayoutSubviews;
@property(readonly, retain, nonatomic) CALayer *layer; // @synthesize layer=_layer;
@property(nonatomic) long long tag; // @synthesize tag=_tag;
@property(nonatomic, setter=_setShouldArchiveUIAppearanceTags:) _Bool _shouldArchiveUIAppearanceTags; // @synthesize _shouldArchiveUIAppearanceTags;
@property(readonly, retain, nonatomic) NSArray *_constraintsExceptingSubviewAutoresizingConstraints; // @synthesize _constraintsExceptingSubviewAutoresizingConstraints;
@property(retain, nonatomic, setter=_setInternalConstraints:) NSMutableArray *_internalConstraints; // @synthesize _internalConstraints;
@property(nonatomic) unsigned long long _countOfMotionEffectsInSubtree; // @synthesize _countOfMotionEffectsInSubtree;
@property(copy, nonatomic, setter=_setLayoutDebuggingIdentifier:) NSString *_layoutDebuggingIdentifier; // @synthesize _layoutDebuggingIdentifier;
@property(retain, nonatomic, setter=_setLayoutEngine:) NSISEngine *_layoutEngine; // @synthesize _layoutEngine;
@property(readonly, retain, nonatomic) NSISVariable *_boundsHeightVariable; // @synthesize _boundsHeightVariable;
@property(readonly, retain, nonatomic) NSISVariable *_boundsWidthVariable; // @synthesize _boundsWidthVariable;
@property(readonly, retain, nonatomic) NSISVariable *_minYVariable; // @synthesize _minYVariable;
@property(readonly, retain, nonatomic) NSISVariable *_minXVariable; // @synthesize _minXVariable;
@property(retain, nonatomic, setter=_setInteractionTintColor:) UIColor *_interactionTintColor; // @synthesize _interactionTintColor;
- (id)resizableSnapshotViewFromRect:(struct CGRect)arg1 withCapInsets:(struct UIEdgeInsets)arg2;
- (id)snapshotView;
- (_Bool)drawViewHierarchyInRect:(struct CGRect)arg1;
- (id)resizableSnapshotFromRect:(struct CGRect)arg1 withCapInsets:(struct UIEdgeInsets)arg2;
- (id)snapshot;
- (_Bool)drawViewHierarchyInRect:(struct CGRect)arg1 afterScreenUpdates:(_Bool)arg2;
- (_Bool)_drawViewHierarchyInRect:(struct CGRect)arg1;
- (_Bool)_imageSnapshotCapturedAllContent;
- (id)resizableSnapshotViewFromRect:(struct CGRect)arg1 afterScreenUpdates:(_Bool)arg2 withCapInsets:(struct UIEdgeInsets)arg3;
- (id)snapshotViewAfterScreenUpdates:(_Bool)arg1;
- (void)_geometryChanged:(unsigned long long)arg1 forAncestor:(id)arg2;
- (void)_unregisterForGeometryChanges;
- (void)_registerForGeometryChanges;
- (void)_notifyGeometryObserversOfOriginChange:(_Bool)arg1 sizeChanged:(_Bool)arg2;
- (void)_addParentGeometryObservers;
- (void)_removeParentGeometryObservers;
- (void)_removeGeometryChangeObserver:(id)arg1;
- (void)_addGeometryChangeObserver:(id)arg1;
- (struct CGRect)_visualAltitudeSensitiveBoundsWithVisualAltitude:(double)arg1 edges:(unsigned long long)arg2;
- (double)_touchSloppinessFactor;
@property(nonatomic) struct CGAffineTransform transform;
- (void)_reestablishConstraintsForTransformChange;
@property(nonatomic) struct CGPoint center;
@property(readonly, nonatomic) struct CGRect bounds;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toCoordinateSpace:(id)arg2;
- (long long)_currentUserInterfaceIdiom;
- (void)_addPossibleRespondersToArray:(id)arg1;
- (struct CGRect)_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect)_responderSelectionRectForWindow:(id)arg1;
- (double)_convertVisualAltitude:(double)arg1 toView:(id)arg2;
- (double)_convertVisualAltitude:(double)arg1 fromView:(id)arg2;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (struct CGSize)_visualAltitudeBias;
- (void)_setVisualAltitude:(double)arg1;
- (void)_updateParallaxEffectWithAltitude:(double)arg1 bias:(struct CGSize)arg2;
- (id)_parallaxMotionEffect;
- (double)_visualAltitude;
- (_Bool)_unapplyMotionEffect:(id)arg1;
- (_Bool)_applyKeyPathsAndRelativeValues:(id)arg1 forMotionEffect:(id)arg2;
- (void)_recursivelyReconsiderMotionEffectSuspension;
- (void)_recursivelyConsiderResumingMotionEffects;
- (void)_recursivelySuspendMotionEffects;
- (_Bool)_motionEffectsAreSuspended;
- (void)setMotionEffects:(id)arg1;
- (id)_motionEffects;
- (id)motionEffects;
- (void)_endSuspendingMotionEffects;
- (void)_beginSuspendingMotionEffects;
- (void)_unregisterAllMotionEffects;
- (void)_removeMotionEffect:(id)arg1;
- (void)removeMotionEffect:(id)arg1;
- (void)_addMotionEffect:(id)arg1;
- (void)addMotionEffect:(id)arg1;
- (void)_dispatchMotionEffectsVisitorWithDelta:(long long)arg1;
- (_Bool)_isInVisibleHierarchy;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_updateBackdropMaskFrames;
- (void)_recursivelySetHiddenForBackdropMaskViews:(_Bool)arg1;
- (void)_setHiddenForBackdropMaskViews:(_Bool)arg1;
- (void)_setTransformForBackdropMaskViews:(struct CGAffineTransform)arg1;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint)arg1 convertPoint:(_Bool)arg2;
- (void)_setCenterForBackdropMaskViews:(struct CGPoint)arg1;
- (void)_setBoundsForBackdropMaskViews:(struct CGRect)arg1;
- (void)_setFrameForBackdropMaskViews:(struct CGRect)arg1 convertFrame:(_Bool)arg2;
- (void)_setFrameForBackdropMaskViews:(struct CGRect)arg1;
- (id)_anyBackdropMaskView;
- (void)_removeBackdropMaskViews;
- (id)_backdropMaskViewForFlag:(long long)arg1;
- (void)_setBackdropMaskView:(id)arg1 forFlag:(long long)arg2;
- (id)_generateBackdropMaskViewForFlag:(long long)arg1;
- (id)_generateBackdropMaskImage;
@property(readonly, nonatomic) NSArray *_backdropMaskViews; // @dynamic _backdropMaskViews;
- (void)_setBackdropMaskViewForFilters:(id)arg1;
@property(readonly, nonatomic) UIView *_backdropMaskViewForFilters; // @dynamic _backdropMaskViewForFilters;
- (void)_setBackdropMaskViewForDarkeningTint:(id)arg1;
- (id)_backdropMaskViewForDarkeningTint;
- (void)_setBackdropMaskViewForColorBurnTint:(id)arg1;
- (id)_backdropMaskViewForColorBurnTint;
- (void)_setBackdropMaskViewForColorTint:(id)arg1;
@property(readonly, nonatomic) UIView *_backdropMaskViewForColorTint; // @dynamic _backdropMaskViewForColorTint;
- (void)_setBackdropMaskViewForGrayscaleTint:(id)arg1;
@property(readonly, nonatomic) UIView *_backdropMaskViewForGrayscaleTint; // @dynamic _backdropMaskViewForGrayscaleTint;
- (void)_setBackdropMaskViewFlags:(long long)arg1;
- (long long)_backdropMaskViewFlags;
- (id)maskView;
- (void)setMaskView:(id)arg1;
@property(retain, nonatomic, setter=_setMaskView:) UIView *_maskView;
- (void)_setDrawsAsBackdropOverlayWithBlendMode:(long long)arg1;
- (void)_setDrawsAsBackdropOverlay:(_Bool)arg1;
- (_Bool)_drawsAsBackdropOverlay;
- (double)_imageButtonMargin;
- (double)_textButtonMargin;
- (double)_contentMargin;
- (void)_focusStateDidChange;
- (void)_setFocusState:(long long)arg1;
- (long long)_focusState;
- (_Bool)_isFocusableElement;
@property(nonatomic, getter=_ancestorDefinesTintAdjustmentMode, setter=_setAncestorDefinesTintAdjustmentMode:) _Bool _ancestorDefinesTintAdjustmentMode;
@property(nonatomic, getter=_ancestorDefinesTintColor, setter=_setAncestorDefinesTintColor:) _Bool _ancestorDefinesTintColor;
- (void)_endOcclusion:(id)arg1;
- (void)_beginOcclusion:(id)arg1;
- (_Bool)_hasNormalTintAdjustmentMode;
- (void)interactionTintColorDidChange;
- (id)tintColor;
- (id)__darkSystemColorForColor:(id)arg1;
- (id)_normalInheritedTintColor;
@property(retain, nonatomic) UIColor *interactionTintColor;
- (void)tintColorDidChange;
- (long long)_primitiveTintAdjustmentMode;
- (void)setTintAdjustmentMode:(long long)arg1;
- (long long)tintAdjustmentMode;
- (long long)_defaultTintAdjustmentMode;
- (void)setTintColor:(id)arg1;
- (id)_inheritedInteractionTintColor;
- (id)_tintColorArchivingKey;
- (void)_dispatchTintColorVisitorWithReasons:(unsigned long long)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_processTraitsDidChangeRecursively:(id)arg1 forceNotification:(_Bool)arg2;
- (void)_traitCollectionDidChange:(id)arg1;
- (void)_noteTraitsDidChangeRecursively;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
@property(readonly, nonatomic) UITraitCollection *traitCollection;
- (void)_setAppearanceIsInvalid:(_Bool)arg1;
- (_Bool)_appearanceIsInvalid;
- (void)_invalidateAppearanceForTraitCollection:(id)arg1;
- (void)_invalidateAppearanceForSubviewsOfClass:(Class)arg1;
- (_Bool)_fakeShouldAnimatePropertyWithKey:(id)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)setPreservesSuperviewLayoutMargins:(_Bool)arg1;
- (_Bool)preservesSuperviewLayoutMargins;
- (void)layoutMarginsDidChange;
- (void)setLayoutMargins:(struct UIEdgeInsets)arg1;
- (void)_layoutMarginsDidChange;
- (struct UIEdgeInsets)layoutMargins;
- (struct UIEdgeInsets)_defaultLayoutMargins;
- (struct CGColor *)_backgroundCGColor;
@property(retain, nonatomic, getter=_backgroundColorSystemColorName, setter=_setBackgroundColorSystemColorName:) NSString *backgroundColorSystemColorName;
- (_Bool)_hasOpaqueBackground;
- (_Bool)cancelTouchTracking;
- (_Bool)cancelMouseTracking;
- (void)stopHeartbeat:(SEL)arg1;
- (void)startHeartbeat:(SEL)arg1 inRunLoopMode:(id)arg2;
- (_Bool)_supportsBecomeFirstResponderWhenPossible;
- (_Bool)_canBecomeFirstResponderWhenPossible;
- (_Bool)_becomeFirstResponderWhenPossible;
- (void)_clearBecomeFirstResponderWhenCapable;
- (id)_previousKeyResponder;
- (id)_nextKeyResponder;
- (long long)_topToBottomLeftToRightViewCompare:(id)arg1;
- (id)nextResponder;
- (id)tapDelegate;
- (void)setTapDelegate:(id)arg1;
- (_Bool)_isChargeEnabled;
- (void)_setChargeEnabled:(_Bool)arg1;
- (float)charge;
- (void)setCharge:(float)arg1;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_createLayerWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)_setTraitStorageSubviews:(id)arg1;
- (id)_traitStorageSubviews;
- (void)_setTraitStorageConstraints:(id)arg1;
- (id)_traitStorageConstraints;
- (id)_appearanceTraitCollection;
- (Class)_appearanceGuideClass;
- (id)_appearanceContainer;
- (void)_receiveVisitor:(id)arg1;
- (double)_firstBaselineOffsetFromTop;
- (double)_baselineOffsetFromBottom;
- (id)_constraintsArray;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentWidthVariable;
- (id)nsli_boundsHeightVariable;
- (id)nsli_boundsWidthVariable;
- (id)nsli_minYVariable;
- (id)nsli_minXVariable;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (id)_contentHeightVariable;
- (id)_contentWidthVariable;
- (_Bool)_canBeReusedInPickerView;
- (void)setOrigin:(struct CGPoint)arg1;
- (struct CGPoint)origin;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)position;
- (void)setBounds:(struct CGRect)arg1;
- (_Bool)_needsLayoutOnAnimatedBoundsChangeForNewBounds:(struct CGRect)arg1;
- (void)resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_applyISEngineLayoutValues;
- (void)_applyAutoresizingMaskWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_resizeWithOldSuperviewSize_ancient:(struct CGSize)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (unsigned long long)autoresizingMask;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (_Bool)autoresizesSubviews;
- (void)setAutoresizesSubviews:(_Bool)arg1;
- (void)setRotationBy:(float)arg1;
- (void)setFrame:(struct CGRect)arg1 forFields:(int)arg2;
- (struct CGRect)hitRect;
- (struct CGPoint)_convertOffset:(struct CGPoint)arg1 fromView:(id)arg2;
- (struct CGPoint)_convertOffset:(struct CGPoint)arg1 toView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (struct CGSize)convertSize:(struct CGSize)arg1 fromView:(id)arg2;
- (struct CGSize)convertSize:(struct CGSize)arg1 toView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_hitTest:(struct CGPoint)arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)isExclusiveTouch;
- (void)setExclusiveTouch:(_Bool)arg1;
- (_Bool)isMultipleTouchEnabled;
- (void)setMultipleTouchEnabled:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (_Bool)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect)arg1;
- (struct CGRect)extent;
- (struct CGRect)frame;
- (void)layoutSubviews;
- (void)_updateConstraintsAsNecessaryAndApplyLayoutFromEngine;
- (void)layoutBelowIfNeeded;
- (void)layoutIfNeeded;
- (void)setNeedsLayout;
- (_Bool)_shouldDirtyLayoutForConstraints;
- (id)viewWithTag:(long long)arg1;
- (_Bool)isDescendantOfView:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)viewWillMoveToSuperview:(id)arg1;
- (void)movedToSuperview:(id)arg1;
- (void)movedFromSuperview:(id)arg1;
- (void)_postMovedFromSuperview:(id)arg1;
- (void)_promoteSelfOrDescendantToFirstResponderIfNecessary;
- (void)deferredBecomeFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 copySublayers:(_Bool)arg4;
- (void)_makeSubtreePerformSelector:(SEL)arg1 withObject:(id)arg2;
- (id)_findFirstSubviewWantingToBecomeFirstResponder;
- (void)insertSubview:(id)arg1 above:(id)arg2;
- (void)insertSubview:(id)arg1 below:(id)arg2;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)_willMoveToWindow:(id)arg1;
- (void)_willMoveToWindow:(id)arg1 withAncestorView:(id)arg2;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (id)_screen;
- (id)_backgroundColor;
- (void)_setBackgroundColor:(id)arg1;
- (_Bool)_associatedViewControllerForwardsAppearanceCallbacks:(id)arg1 performHierarchyCheck:(_Bool)arg2 isRoot:(_Bool)arg3;
- (void)_didRemoveSubview:(id)arg1;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)sendSubviewToBack:(id)arg1;
- (void)bringSubviewToFront:(id)arg1;
- (void)_movedToFront;
- (void)insertSubview:(id)arg1 aboveSubview:(id)arg2;
- (void)insertSubview:(id)arg1 belowSubview:(id)arg2;
- (void)addSubview:(id)arg1;
- (void)exchangeSubviewAtIndex:(long long)arg1 withSubviewAtIndex:(long long)arg2;
- (void)insertSubview:(id)arg1 atIndex:(long long)arg2;
- (void)removeFromSuperview;
- (void)_willRemoveSubviewWantingAutolayout:(id)arg1;
- (void)_removeFirstResponderFromSubtree;
- (id)_window;
- (id)window;
- (id)subviews;
- (id)superview;
- (_Bool)containsView:(id)arg1;
- (id)_imageFromRect:(struct CGRect)arg1;
- (void *)_createIOSurfaceWithPadding:(struct UIEdgeInsets)arg1;
- (void)_enableLayerKitPatternDrawing:(_Bool)arg1;
- (void)recursivelyForceDisplayIfNeeded;
- (void)forceDisplayIfNeeded;
- (struct CGImage *)newSnapshotWithRect:(struct CGRect)arg1;
- (void)setContentsPosition:(int)arg1;
- (void)setClearsContext:(_Bool)arg1;
- (_Bool)isHiddenOrHasHiddenAncestor;
- (_Bool)_isHiddenForReuse;
- (void)_setHiddenForReuse:(_Bool)arg1;
- (_Bool)isHidden;
- (void)setHidden:(_Bool)arg1;
- (_Bool)clearsContextBeforeDrawing;
- (void)setClearsContextBeforeDrawing:(_Bool)arg1;
- (_Bool)isOpaque;
- (void)setOpaque:(_Bool)arg1;
- (double)alpha;
- (void)setAlpha:(double)arg1;
- (void)setFixedBackgroundPattern:(_Bool)arg1;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)clipsToBounds;
- (void)setClipsToBounds:(_Bool)arg1;
- (void)setNeedsDisplayOnBoundsChange:(_Bool)arg1;
- (_Bool)needsDisplayOnBoundsChange;
- (_Bool)needsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setNeedsDisplay;
- (struct CGRect)visibleBounds;
- (void)drawRect:(struct CGRect)arg1;
- (void)_setShouldRasterize:(_Bool)arg1;
- (void)setContentScaleFactor:(double)arg1;
- (double)contentScaleFactor;
- (void)_resetContentRect;
- (void)_setContentRectInPixels:(struct CGRect)arg1 forContentSize:(struct CGSize)arg2;
- (struct CGRect)contentStretch;
- (void)setContentStretch:(struct CGRect)arg1;
- (void)_setContentStretchInPixels:(struct CGRect)arg1 forContentSize:(struct CGSize)arg2 shouldTile:(_Bool)arg3;
- (void)_resetContentStretch;
- (long long)contentMode;
- (void)setContentMode:(long long)arg1;
- (void)_enumerateDescendentViews:(CDUnknownBlockType)arg1;
- (void)_removeAllAnimations:(_Bool)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (void)_clearAnimationFilters;
- (_Bool)_isInTransitionBlock;
- (id)_basicAnimationWithKeyPath:(id)arg1;
- (struct CGImage *)createSnapshotWithRect:(struct CGRect)arg1;
- (void)setClipsSubviews:(_Bool)arg1;
- (_Bool)isEnabled;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (struct CGPoint)frameOrigin;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (id)initWithSize:(struct CGSize)arg1;
- (_Bool)_isInteractiveElement;
- (id)_disabledColor;
- (struct CGRect)_visualAltitudeSensitiveBoundsWithInfiniteEdges:(unsigned long long)arg1;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (_Bool)_isMemberOfViewControllerHierarchy:(id)arg1;
- (void)_unregisterAsReferenceView;
- (void)_registerAsReferenceView;
- (void)_unregisterFromAnimators;
- (void)_notifyReferenceViewSizeChange;
- (id)_encodableSubviews;
@property(readonly, nonatomic, getter=_currentScreenScale) double currentScreenScale;
- (void)_recursivelyNameLayerTree;
- (void)_setBackgroundCGColor:(struct CGColor *)arg1;
- (void)_setBackgroundCGColor:(struct CGColor *)arg1 withSystemColorName:(id)arg2;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
@property(nonatomic, getter=_monitorsSubtree, setter=_setMonitorsSubtree:) _Bool monitorsSubtree;
- (_Bool)_shouldApplyExclusiveTouch;
- (_Bool)_isInExclusiveTouchSubviewTree;
- (_Bool)_appliesExclusiveTouchToSubviewTree;
- (_Bool)_shouldResignFirstResponderWithInteractionDisabled;
- (id)_gestureRecognizers;
- (void)_unsubscribeToScrollNotificationsIfNecessary:(id)arg1;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (id)_containingScrollView;
- (id)_viewIndexPath;
- (_Bool)_isAncestorOfFirstResponder;
- (void)_setIsAncestorOfFirstResponder:(_Bool)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (_Bool)_allowsArchivingAsSubview;
- (void)_encodeBackgroundColorWithCoder:(id)arg1;
- (void)_encodeFrameWithCoder:(id)arg1;
- (id)_subviewAtIndex:(long long)arg1;
- (long long)_viewOrderRelativeToView:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (_Bool)_isAlphaHittableAndHasAlphaHittableAncestors;
@property(nonatomic, getter=_viewDelegate, setter=_setViewDelegate:) UIViewController *viewDelegate;
@property(nonatomic) _Bool viewTraversalMark;
@property(nonatomic) _Bool skipsSubviewEnumeration;
- (void *)_createImageFromRect:(struct CGRect)arg1 padding:(struct UIEdgeInsets)arg2;
- (struct CARenderServerBuffer *)_createRenderServerBufferFromRect:(struct CGRect)arg1 padding:(struct UIEdgeInsets)arg2;
- (void)_renderLayerWithRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)_renderLayerContentsWithRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)_renderSnapshotWithRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (void)_setContentsTransform:(struct CGAffineTransform)arg1;
- (void)_setContentImage:(id)arg1;
- (_Bool)_canHandleStatusBarTouchAtLocation:(struct CGPoint)arg1;
- (void)_collectKeyViews:(id)arg1;
- (void)_clearBecomeFirstResponderWhenCapableOnSubtree;
- (id)_rootForKeyResponderCycle;
- (_Bool)_isRootForKeyResponderCycle;
- (_Bool)_containedInAbsoluteResponderChain;
- (_Bool)_shouldTryPromoteDescendantToFirstResponder;
- (id)_firstResponder;
- (_Bool)_shouldDelayTouchForSystemGestures:(id)arg1;
- (void)_setDelaysTouchesForSystemGestures:(_Bool)arg1;
- (_Bool)_delaysTouchesForSystemGestures;
- (_Bool)_isInAWindow;
- (_Bool)_animationIsPaused;
- (_Bool)_alwaysHandleInteractionEvents;
- (_Bool)_alwaysHandleScrollerMouseEvent;
- (void)_webCustomViewWasRemovedFromSuperview:(id)arg1;
- (void)_webCustomViewWillBeRemovedFromSuperview;
- (void)_webCustomViewWasAddedAsSubviewOfView:(id)arg1;
- (void)_performUpdatesForPossibleChangesOfIdiom:(long long)arg1 orScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_didChangeFromIdiomOnScreen:(id)arg1 traverseHierarchy:(_Bool)arg2;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_willChangeToIdiomOnScreen:(id)arg1 traverseHierarchy:(_Bool)arg2;
@property(nonatomic, getter=_userInterfaceIdiom, setter=_setUserInterfaceIdiom:) long long _userInterfaceIdiom;
- (void)_applyScreenScaleToContentScaleFactorIfNotSpecifiedByDeveloper;
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;
- (void)_applyAppearanceInvocations;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (_Bool)_controlsOwnScaleFactor;
- (void)_updateNeedsDisplayOnBoundsChange;
- (_Bool)_canDrawContent;
- (id)_interceptEvent:(id)arg1;
- (id)_interceptMouseEvent:(struct __GSEvent *)arg1;
- (void)_setInterceptMouseEvent:(_Bool)arg1;
- (void)_invalidateLayerContents;
- (void)_invalidateSubviewCache;
- (void)_didScroll;
- (id)_scroller;
- (id)_layer;
- (_Bool)_subclassImplementsIntrinsicSizeWithinSize;
- (_Bool)_subclassImplementsIntrinsicContentSize;
- (_Bool)_subclassImplementsDrawRect;
- (id)_viewControllerForAncestor;
- (id)_initWithMaskImage:(id)arg1;
- (id)_initWithLayer:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)removeAllGestureRecognizers;
- (void)removeGestureRecognizer:(id)arg1;
- (void)addGestureRecognizer:(id)arg1;
@property(nonatomic) _Bool deliversTouchesForGesturesToSuperview;
@property(nonatomic) _Bool gesturesEnabled;
- (void)setGestureRecognizers:(id)arg1;
- (id)gestureRecognizers;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)layoutSublayersOfLayer:(id)arg1;
- (_Bool)_wantsReapplicationOfAutoLayout;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)drawLayer:(id)arg1 inContext:(struct CGContext *)arg2;
- (id)recursiveDescription;
- (id)_superDescription;
@property(readonly, copy) NSString *description;
- (id)_autoresizingDescription;
- (id)scriptingInfoWithChildren;
- (id)_scriptingInfo;
- (int)_style;
- (int)_containerStyle;
- (_Bool)useBlockyMagnificationInClassic;
- (id)_enclosingScrollableScrollerIncludingSelf;
- (_Bool)_isScrollingEnabled;
- (id)_enclosingScrollerIncludingSelf;
- (_Bool)_areAccessibilityButtonShapesEnabled;
- (void)restoreUserActivityState:(id)arg1;
- (void)updateUserActivityState:(id)arg1;
- (void)_prepareToAppearInNavigationItem:(id)arg1 onLeft:(_Bool)arg2;
- (id)_window;
- (void)gestureEnded:(struct __GSEvent *)arg1;
- (void)gestureChanged:(struct __GSEvent *)arg1;
- (void)gestureStarted:(struct __GSEvent *)arg1;
- (void)_resetZoomingWithEvent:(struct __GSEvent *)arg1;
- (int)stateForGestureType:(int)arg1;
- (float)_zoomScale;
- (void)_setZoomScale:(float)arg1 duration:(double)arg2;
- (float)rotationDegrees;
- (void)setRotationDegrees:(float)arg1 duration:(double)arg2;
- (id)valueForGestureAttribute:(int)arg1;
- (void)setValue:(id)arg1 forGestureAttribute:(int)arg2;
- (int)enabledGestures;
- (void)setEnabledGestures:(int)arg1;
- (id)gestureDelegate;
- (void)setGestureDelegate:(id)arg1;
- (_Bool)canHandleGestures;
- (void)_stopRotationFromEvent:(struct __GSEvent *)arg1;
- (void)_rotateFromEvent:(struct __GSEvent *)arg1;
- (_Bool)_startRotationFromEvent:(struct __GSEvent *)arg1;
- (_Bool)_canStartRotationFromEvent:(struct __GSEvent *)arg1;
- (void)_setRotationAnimationProgress:(id)arg1;
- (void)_rotateToDegrees:(float)arg1 duration:(float)arg2 event:(struct __GSEvent *)arg3;
- (void)rotateToDegrees:(float)arg1;
- (void)_stopZoomFromEvent:(struct __GSEvent *)arg1;
- (_Bool)_startZoomFromEvent:(struct __GSEvent *)arg1;
- (_Bool)_canStartZoomFromEvent:(struct __GSEvent *)arg1;
- (_Bool)_zoomWithEvent:(struct __GSEvent *)arg1;
- (float)_rubberBandScaleForScale:(float)arg1;
- (float)_minimumZoomScaleDelta;
- (float)_scaleForInternalScale:(float)arg1;
- (float)_internalScaleForScale:(float)arg1;
- (void)_setZoomAnimationProgress:(id)arg1;
- (_Bool)_isRubberBanding;
- (void)_rubberbandZoomToEvent:(struct __GSEvent *)arg1 scale:(float)arg2;
- (void)_zoomToEvent:(struct __GSEvent *)arg1 scale:(float)arg2 animate:(_Bool)arg3 constrainScrollPoint:(_Bool)arg4;
- (void)_zoomToScale:(float)arg1 event:(struct __GSEvent *)arg2;
- (void)_setGestureInfoZoomScale:(float)arg1;
- (void)zoomToScale:(float)arg1;
- (struct CGPoint)_scrollPointForPoint:(struct CGPoint)arg1 scale:(float)arg2 constrain:(_Bool)arg3 snapToEdge:(_Bool)arg4;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (void)animator:(id)arg1 startAnimation:(id)arg2;
- (void)_gestureChanged:(int)arg1 event:(struct __GSEvent *)arg2;
- (void)_stopGesture:(int)arg1 event:(struct __GSEvent *)arg2;
- (void)_startGesture:(int)arg1 event:(struct __GSEvent *)arg2;
- (float)_zoomAnimationProgress;
- (void)_animateZoomFailureToWindowPoint:(struct CGPoint)arg1 scale:(double)arg2 duration:(float)arg3;
- (void)_animateToScrollPoint:(struct CGPoint)arg1;
- (void)_zoomToWindowPoint:(struct CGPoint)arg1 scale:(double)arg2 duration:(float)arg3 constrainScrollPoint:(_Bool)arg4 event:(struct __GSEvent *)arg5;
- (float)_zoomAnimationDurationForScale:(double)arg1;
- (void)_zoomToScrollPoint:(struct CGPoint)arg1 scale:(double)arg2 duration:(float)arg3 event:(struct __GSEvent *)arg4;
- (struct CGPoint)_constrainedScrollPoint:(struct CGPoint)arg1 contentSize:(struct CGSize)arg2;
- (struct CGSize)_scrollerContentSize;
- (void)_gestureEnded:(struct __GSEvent *)arg1;
- (id)_gestureInfo;
- (void)reduceWidth:(double)arg1;
- (id)_syntheticUIEventWithGSEvent:(struct __GSEvent *)arg1 touchPhase:(long long)arg2;
- (id)_syntheticTouch;
- (long long)compareTextEffectsOrdering:(id)arg1;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (int)textEffectsVisibilityLevel;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (_Bool)isAccessibilityElementByDefault;
- (long long)_depthFirstCompare:(id)arg1;
- (id)textInputView;
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;
- (id)viewPrintFormatter;
- (Class)_printFormatterClass;
- (_Bool)_hasAutolayoutHeightConstraint;
- (void)_removeAutolayoutSizingConstraints;
- (void)_convertToAutolayoutSizingIfNecessary;
- (id)_rootInputWindowController;
@property(nonatomic, setter=_setAccessoryViewFrame:) struct CGRect _accessoryViewFrame;
@property(readonly, nonatomic) _Bool _lightStyleRenderConfig;
@property(readonly, nonatomic) UIKBRenderConfig *_inheritedRenderConfig;
- (void)_setRenderConfig:(id)arg1;
- (int)_clipCornersOfView:(id)arg1;
- (int)_clipCorners;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
- (struct CGRect)_compatibleBounds;
- (void)_constrainViewToSuperview;
- (struct CGSize)_systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (struct CGSize)_systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(_Bool *)arg4;
- (_Bool)_forwardsSystemLayoutFittingSizeToContentView:(id)arg1;
- (struct CGSize)_calculatedSystemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3 hasIntentionallyCollapsedHeight:(_Bool *)arg4;
- (void)_recursiveCollectTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(_Bool)arg2 returningConstraintsForViewsNeedingSecondPass:(id *)arg3 constraintsRemovedForFitting:(id)arg4 constraintsAddedForFitting:(id)arg5;
- (void)_makeTemporaryInternalConstraintsWithEngine:(id)arg1 ignoreAutoresizingMaskConstraints:(_Bool)arg2 returningConstraintsForViewsNeedingSecondPass:(id *)arg3 constraintsRemovedForFitting:(id)arg4 constraintsAddedForFitting:(id)arg5;
- (void)_finishTemporaryInternalConstraints:(id)arg1 withEngine:(id)arg2 constraintsAddedForFitting:(id)arg3;
- (void)_populateEngineWithConstraintsForViewSubtree:(id)arg1 forComputingFittingSizeOfView:(id)arg2;
- (id)_descendantWithAmbiguousLayout;
- (void)exerciseAmbiguityInLayout;
- (id)_layoutVariablesWithAmbiguousValue;
- (_Bool)hasAmbiguousLayout;
- (id)_relevantLayoutVariables;
- (id)constraintsAffectingLayoutForAxis:(long long)arg1;
- (void)_removeAlignmentDebuggingOverlays;
- (id)_alignmentDebuggingOverlayCreateIfNecessary:(_Bool)arg1;
- (void)invalidateIntrinsicContentSize;
- (id)_generateContentSizeConstraints;
- (void)_updateContentSizeConstraints;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)_setContentSizeConstraints:(id)arg1;
- (id)_contentSizeConstraints;
- (void)setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (float)contentCompressionResistancePriorityForAxis:(long long)arg1;
- (struct CGSize)_defaultContentCompressionResistancePriorities;
- (void)_setContentCompressionResistancePriorities:(struct CGSize)arg1;
- (struct CGSize)_contentCompressionResistancePriorities;
- (void)_setPrimitiveContentCompressionResistancePrioritiesValue:(id)arg1;
- (id)_primitiveContentCompressionResistancePrioritiesValue;
- (void)setContentHuggingPriority:(float)arg1 forAxis:(long long)arg2;
- (float)contentHuggingPriorityForAxis:(long long)arg1;
- (struct CGSize)_defaultContentHuggingPriorities;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)_setContentHuggingPriorities:(struct CGSize)arg1;
- (struct CGSize)_contentHuggingPriorities;
- (void)_setPrimitiveContentHuggingPrioritiesValue:(id)arg1;
- (id)_primitiveContentHuggingPrioritiesValue;
- (void)_enableLayoutFlushing;
- (void)_disableLayoutFlushing;
- (void)_constraints_frameDidChange;
- (void)_engineHostConstraints_frameDidChange;
- (void)_autoresizingConstraints_frameDidChange;
- (void)_constantsForVerticalAutoresizingConstraints:(double *)arg1:(double *)arg2;
- (void)_constantsForHorizontalAutoresizingConstraints:(double *)arg1:(double *)arg2;
- (id)_constraintsEquivalentToAutoresizingMask;
- (unsigned long long)_effectiveAutoresizingMask;
- (void)_invalidateEngineHostConstraints;
- (void)_updateLayoutEngineHostConstraints;
- (void)_updateAutoresizingConstraints;
- (void)_uiib_invalidateAutoresizingConstraints;
- (void)_invalidateAutoresizingConstraints;
- (void)_effectiveAutoresizingMask_autoresizesSubviewsChanged;
- (void)_constraints_viewGeometryDidChange;
- (void)_constraints_subviewDidChangeSuperview:(id)arg1;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (void)_constraints_didChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (void)_constraints_willChangeAutoresizingConstraintsArrayForContainedView:(id)arg1;
- (_Bool)_autoresizingConstraintsAreUpdated;
- (void)_invalidateLayoutEngineHostConstraints;
- (id)_layoutEngineHostConstraints;
- (void)_setLayoutEngineHostConstraints:(id)arg1;
- (void)_setAutoresizingConstraints:(id)arg1;
- (id)_autoresizingConstraints;
- (double)nsli_marginOffsetForAttribute:(long long)arg1;
- (id)_constraintForIdentifier:(id)arg1;
- (void)removeConstraints:(id)arg1;
- (_Bool)nsli_removeConstraint:(id)arg1;
- (void)_removeConstraint:(id)arg1;
- (void)removeConstraint:(id)arg1;
- (void)addConstraints:(id)arg1;
- (void)nsli_addConstraint:(id)arg1;
- (void)_addConstraint:(id)arg1;
- (void)addConstraint:(id)arg1;
- (_Bool)_uiib_tryToAddConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (_Bool)_tryToAddConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (_Bool)_tryToAddConstraintWithoutUpdatingConstraintsArray:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (id)constraints;
- (void)_layoutEngine_willRemoveLayoutConstraint:(id)arg1;
- (_Bool)_layoutEngine_didAddLayoutConstraint:(id)arg1 roundingAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;
- (void)_viewHierarchyUnpreparedForConstraint:(id)arg1;
- (_Bool)_isViewHierarchyPreparedForConstraint:(id)arg1;
- (void)_rebuildLayoutFromScratch;
- (void)_withAutomaticEngineOptimizationDisabled:(CDUnknownBlockType)arg1;
- (void)_layoutEngine_windowDidChange;
- (void)_initializeLayoutEngine;
- (id)_legendEntryForDescriptionForLayout;
- (id)_descriptionForLayoutTrace;
- (_Bool)nsli_isFlipped;
- (unsigned long long)nsli_autoresizingMask;
- (_Bool)nsli_descriptionIncludesPointer;
- (id)nsli_description;
- (_Bool)nsli_resolvedValue:(double *)arg1 forSymbolicConstant:(id)arg2 inConstraint:(id)arg3 error:(id *)arg4;
- (id)nsli_superitem;
- (struct CGSize)nsli_convertSizeFromEngineSpace:(struct CGSize)arg1;
- (struct CGSize)nsli_convertSizeToEngineSpace:(struct CGSize)arg1;
- (id)nsli_layoutEngine;
- (_Bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (_Bool)nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 container:(id)arg4;
- (struct CGSize)_preferredLayoutEngineToUserScalingCoefficients;
- (struct CGSize)nsli_engineToUserScalingCoefficients;
- (struct CGSize)nsli_engineToUserScalingCoefficientsInEngine:(id)arg1;
- (_Bool)nsis_valueOfVariableIsUserObservable:(id)arg1;
- (_Bool)nsis_shouldIntegralizeVariable:(id)arg1;
- (id)nsis_descriptionOfVariable:(id)arg1;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (id)_layoutDescriptionIfDifferentFromDefault;
- (id)_defaultLayoutDescription;
- (id)_layoutDebuggingTitle;
- (id)viewForBaselineLayout;
- (id)_viewForBaselineLayout;
- (void)_updateConstraintsAtEngineLevelIfNeeded;
- (void)updateConstraints;
- (void)updateConstraintsIfNeeded;
- (void)_updateConstraintsIfNeeded;
- (void)_updateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:(id)arg1;
- (void)_internalUpdateConstraintsIfNeededAccumulatingViewsNeedingSecondPassAndViewsNeedingBaselineUpdate:(id)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;
- (void)_withAutomaticEngineOptimizationDisabledIfEngineExists:(CDUnknownBlockType)arg1;
- (id)_layoutEngineIfAvailable;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (id)_layoutEngineCreateIfNecessary;
- (void)_discardLayoutEngine:(id)arg1;
- (void)_switchToLayoutEngine:(id)arg1;
- (void)_parentalLayoutEngineDidChangeTo:(id)arg1;
- (_Bool)_usesAutoresizingConstraints;
- (_Bool)_usesLayoutEngineHostingConstraints;
- (void)_uiib_setHostsLayoutEngine:(_Bool)arg1;
- (_Bool)_uiib_hostsLayoutEngine;
- (void)_setHostsLayoutEngine:(_Bool)arg1;
- (_Bool)_hostsLayoutEngine;
- (void)_initializeHostedLayoutEngine;
- (void)_accumulateViewConstraintsIntoArray:(id)arg1;
- (void)_is_setNeedsLayout;
- (void)_invalidateIntrinsicContentSizeNeedingLayout:(_Bool)arg1;
- (_Bool)_is_needsLayout;
- (_Bool)_hasLayoutEngine;
- (struct CGPoint)_nsis_origin;
- (struct CGRect)_nsis_bounds;
- (void)_nsis_center:(struct CGPoint *)arg1 bounds:(struct CGRect *)arg2 inEngine:(id)arg3;
- (struct CGSize)_nsis_contentSize;
- (_Bool)_isFloatingLayoutItem;
- (_Bool)_supportsContentDimensionVariables;
- (_Bool)_useContentDimensionVariablesForConstraintLowering;
- (_Bool)translatesAutoresizingMaskIntoConstraints;
- (struct CGRect)_alignmentBounds;
- (struct CGRect)_alignmentFrame;
- (struct CGRect)_boundsForAlignmentRect:(struct CGRect)arg1;
- (struct CGRect)_alignmentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)frameForAlignmentRect:(struct CGRect)arg1;
- (struct CGRect)alignmentRectForFrame:(struct CGRect)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (_Bool)_potentiallyHasDanglyConstraints;
- (void)_setPotentiallyHasDanglyConstraints:(_Bool)arg1;
- (_Bool)_wantsAutolayout;
- (void)_setWantsAutolayout;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(_Bool)arg1;
- (void)setNeedsUpdateConstraints;
- (void)_setNeedsUpdateConstraints;
- (void)_setNeedsUpdateConstraintsNeedingLayout:(_Bool)arg1;
- (void)_informContainerThatSubviewsNeedUpdateConstraints;
- (void)_informContainerThatSubviewsNeedUpdateConstraintsNeedingLayout:(_Bool)arg1;
- (_Bool)needsUpdateConstraints;
- (_Bool)_wantsBaselineUpdatingFollowingConstraintsPass;
- (_Bool)_needsDoubleUpdateConstraintsPass;
- (void)_applyISEngineLayoutToSubviewsSkippingSubview:(id)arg1;
- (void)_is_layout;
- (id)_allLayoutEngines;
- (id)_recursiveLayoutEngineDescription;
- (id)_autolayoutTrace;
- (id)_recursiveAutolayoutTraceAtLevel:(long long)arg1;
- (id)_constraintsValidityDescription;
- (id)_rootView;
- (id)_recursiveConstraintsTraceAtLevel:(long long)arg1;
- (void)engine:(id)arg1 willBreakConstraint:(id)arg2 dueToMutuallyExclusiveConstraints:(id)arg3;
- (id)engine:(id)arg1 markerForConstraintToBreakAmongConstraints:(id)arg2;
- (void)constraintsDidChangeInEngine:(id)arg1;
- (void)_invalidateSystemLayoutSizeFittingSizeAtEngineDelegateLevel;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (_Bool)_hasCustomAutolayoutNeighborSpacing;
- (id)_colorViewBoundsOverlayCreateIfNecessary:(_Bool)arg1;
- (void)_removeColorViewBoundsOverlays;
- (id)_hierarchyRepresentation;
- (id)_representationOfHierarchyForXcode;
- (void)_didRemoveDependentConstraint:(id)arg1;
- (void)_didAddDependentConstraint:(id)arg1;
- (void)_oldUpdateLayoutEngineHostConstraints;
- (id)_dimensionExpressionInContainer:(id)arg1 vertical:(_Bool)arg2 useContentVariables:(_Bool)arg3;
- (id)_edgeExpressionInContainer:(id)arg1 vertical:(_Bool)arg2 max:(_Bool)arg3 contentInsetScale:(double)arg4;
- (id)_centerExpressionInContainer:(id)arg1 vertical:(_Bool)arg2 contentInsetScale:(double)arg3;
- (id)_lowerExpressionOneLevelWithCurrentXExpression:(id)arg1 YExpression:(id)arg2 vertical:(_Bool)arg3 container:(id)arg4;
- (void)_addCenterExpressionToExpression:(id)arg1 isVertical:(_Bool)arg2;
- (_Bool)_old_nsli_lowerAttribute:(int)arg1 intoExpression:(id)arg2 withCoefficient:(double)arg3 forConstraint:(id)arg4;
- (id)_scrollViewWantingUpdateInConstraint:(id)arg1;
- (void)_nsis_origin:(struct CGPoint *)arg1 bounds:(struct CGRect *)arg2 inEngine:(id)arg3;
- (unsigned long long)_numberOfColumns:(_Bool)arg1;
- (_Bool)endEditing:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic, getter=_maskView, setter=_setMaskView:) UIView *maskView;
@property(readonly) Class superclass;

@end

@interface UIActionSheet : UIView <UIPopoverControllerDelegate>
{
    UIAlertController *_alertController;
    _UIAlertControllerShimPresenter *_presenter;
    NSMutableArray *_actions;
    long long _cancelIndex;
    long long _firstOtherButtonIndex;
    long long _destructiveButtonIndex;
    long long _actionSheetStyle;
    id _context;
    _Bool _hasPreparedAlertActions;
    _Bool _isPresented;
    _Bool _alertControllerShouldDismiss;
    _Bool _handlingAlertActionShouldDismiss;
    _Bool _dismissingAlertController;
    _UIWeakRef *_weakDelegate;
}

+ (_Bool)_isAlertControllerShimClass;
+ (Class)_popoverControllerClass;
@property(retain, nonatomic) _UIWeakRef *weakDelegate; // @synthesize weakDelegate=_weakDelegate;
- (id)_alertController;
- (id)_addMediaButtonWithTitle:(id)arg1 iconView:(id)arg2 andTableIconView:(id)arg3;
- (id)_buttonAtIndex:(long long)arg1;
- (id)_addButtonWithTitle:(id)arg1 label:(id)arg2;
- (id)addMediaButtonWithTitle:(id)arg1 iconView:(id)arg2 andTableIconView:(id)arg3;
- (id)buttonAtIndex:(long long)arg1;
- (id)addButtonWithTitle:(id)arg1 label:(id)arg2;
- (id)_contentView;
- (void)_setContentView:(id)arg1;
- (_Bool)_isSBAlert;
- (id)_attributedTitleString;
- (void)_setAttributedTitleString:(id)arg1;
- (void)setSelectedButtonGlyphHighlightedImage:(id)arg1;
- (void)setSelectedButtonGlyphImage:(id)arg1;
- (void)setIndexOfSelectedButton:(long long)arg1;
- (id)_indexesOfSelectedButtons;
- (void)_toggleButtonSelectionAtIndex:(unsigned long long)arg1;
- (void)_setIndexesOfSelectedButtons:(id)arg1;
- (_Bool)useThreeColumnsButtonsLayout;
- (void)setUseThreeColumnsButtonsLayout:(_Bool)arg1;
- (void)setInPopover:(_Bool)arg1;
- (void)presentSheetInContentView:(id)arg1;
- (id)_relinquishPopoverController;
- (void)presentFromRect:(struct CGRect)arg1 inView:(id)arg2 direction:(unsigned long long)arg3 allowInteractionWithViews:(id)arg4 backgroundStyle:(long long)arg5 animated:(_Bool)arg6;
- (void)presentFromBarButtonItem:(id)arg1 direction:(unsigned long long)arg2 allowInteractionWithViews:(id)arg3 backgroundStyle:(long long)arg4 animated:(_Bool)arg5;
- (void)setDimsBackground:(_Bool)arg1;
- (int)numberOfLinesInTitle;
- (void)setTitleMaxLineCount:(int)arg1;
- (id)_titleLabel;
- (void)setDimView:(id)arg1;
- (void)setDefaultButtonIndex:(long long)arg1;
- (void)presentSheetInView:(id)arg1;
- (id)context;
- (void)setContext:(id)arg1;
- (id)subtitle;
- (void)setSubtitle:(id)arg1;
- (void)setTaglineText:(id)arg1;
- (id)bodyText;
- (void)setBodyText:(id)arg1;
- (id)message;
- (void)setMessage:(id)arg1;
- (void)_setIsPresented:(_Bool)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)_dismissForTappedIndex:(long long)arg1;
- (_Bool)_prepareToDismissForTappedIndex:(long long)arg1;
- (void)_prepareAlertActions;
- (id)_preparedAlertActionAtIndex:(unsigned long long)arg1;
- (void)_performPresentationDismissalWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)showInView:(id)arg1;
- (void)_showFromRect:(struct CGRect)arg1 inView:(id)arg2 direction:(unsigned long long)arg3 animated:(_Bool)arg4;
- (void)showFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (void)showFromBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (void)showFromTabBar:(id)arg1;
- (void)showFromToolbar:(id)arg1;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
@property(readonly, nonatomic) long long firstOtherButtonIndex;
- (void)_setFirstOtherButtonIndex:(long long)arg1;
@property(nonatomic) long long destructiveButtonIndex;
@property(nonatomic) long long cancelButtonIndex;
@property(readonly, nonatomic) long long numberOfButtons;
- (id)buttonTitleAtIndex:(long long)arg1;
- (long long)addButtonWithTitle:(id)arg1;
@property(nonatomic) long long actionSheetStyle;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) id <UIActionSheetDelegate> delegate;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 delegate:(id)arg2 cancelButtonTitle:(id)arg3 destructiveButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIActivity : NSObject
{
    long long _defaultPriority;
    CDUnknownBlockType _activityCompletionHandler;
    CDUnknownBlockType _activityCompletionWithItemsHandler;
}

+ (long long)activityCategory;
+ (id)_activityGenericImage:(id)arg1;
+ (id)_activityFunctionImage:(id)arg1;
+ (id)_activitySettingsImageForApplication:(id)arg1;
+ (id)_activityImageForApplication:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType activityCompletionWithItemsHandler; // @synthesize activityCompletionWithItemsHandler=_activityCompletionWithItemsHandler;
@property(copy, nonatomic) CDUnknownBlockType activityCompletionHandler; // @synthesize activityCompletionHandler=_activityCompletionHandler;
- (void)activityDidFinish:(_Bool)arg1;
- (void)performActivity;
- (id)activityViewController;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)dealloc;
- (void)_injectedJavaScriptResult:(id)arg1;
@property(readonly, nonatomic) NSExtension *applicationExtension;
- (_Bool)_canBeExcludedByActivityViewController:(id)arg1;
- (void)activityDidFinish:(_Bool)arg1 items:(id)arg2 error:(id)arg3;
- (id)_attachmentNameForActivityItem:(id)arg1;
- (id)_thumbnailImageForActivityItem:(id)arg1;
- (id)_dataTypeIdentifierForActivityItem:(id)arg1;
- (id)_subjectForActivityItem:(id)arg1;
- (struct CGSize)_thumbnailSize;
- (void)_setSubject:(id)arg1;
- (_Bool)_dismissActivityFromViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_presentActivityOnViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_cleanup;
- (void)_willPresentAsFormSheet;
- (id)_embeddedActivityViewController;
- (void)_setActivityCompletionWithItemsHandler:(CDUnknownBlockType)arg1;
- (void)_setActivityCompletionHandler:(CDUnknownBlockType)arg1;
- (id)_beforeActivity;
- (id)_activitySettingsImage;
- (id)activitySettingsImage;
- (id)_activityImage;
- (_Bool)_canPerformWithSuppliedActivityItems:(id)arg1;

@end

@interface UIActivityContinuationAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, nonatomic) NSDate *lastUpdateTime;
@property(readonly, nonatomic) NSString *activityType;
@property(readonly, nonatomic) NSString *originatingDeviceName;
@property(readonly, nonatomic) NSString *originatingDeviceType;
@property(readonly, nonatomic) NSString *activityTypeIdentifier;
@property(readonly, nonatomic) NSString *identifier;
- (id)initWithSettings:(id)arg1;

@end

@interface UIViewController : UIResponder <_UIViewServiceDeputy, NSExtensionRequestHandling, UIViewControllerPresenting, _UITraitEnvironmentInternal, _UIContentContainerInternal, NSCoding, UIAppearanceContainer, UITraitEnvironment, UIContentContainer>
{
    UIView *_view;
    UITabBarItem *_tabBarItem;
    UINavigationItem *_navigationItem;
    NSArray *_toolbarItems;
    NSString *_title;
    NSString *_nibName;
    NSBundle *_nibBundle;
    UIViewController *_parentViewController;
    UIViewController *_childModalViewController;
    UIViewController *_parentModalViewController;
    UIViewController *_previousRootViewController;
    UIView *_modalTransitionView;
    UIResponder *_modalPreservedFirstResponder;
    id _dimmingView;
    id _dropShadowView;
    id _currentAction;
    UIStoryboard *_storyboard;
    NSArray *_storyboardSegueTemplates;
    NSDictionary *_externalObjectsTableForViewLoading;
    NSArray *_topLevelObjectsToKeepAliveFromStoryboard;
    UIView *_savedHeaderSuperview;
    UIView *_savedFooterSuperview;
    UIBarButtonItem *_editButtonItem;
    UISearchDisplayController *_searchDisplayController;
    long long _modalTransitionStyle;
    long long _modalPresentationStyle;
    long long _lastKnownInterfaceOrientation;
    UIPopoverController *_popoverController;
    UIView *_containerViewInSheet;
    struct CGSize _contentSizeForViewInPopover;
    struct CGSize _formSheetSize;
    UIScrollView *_recordedContentScrollView;
    CDUnknownBlockType _afterAppearance;
    long long _explicitAppearanceTransitionLevel;
    NSArray *_keyCommands;
    NSMapTable *_overrideTraitCollections;
    struct {
        unsigned int appearState:2;
        unsigned int isEditing:1;
        unsigned int isPerformingModalTransition:1;
        unsigned int hidesBottomBarWhenPushed:1;
        unsigned int autoresizesArchivedViewToFullSize:1;
        unsigned int viewLoadedFromControllerNib:1;
        unsigned int isRootViewController:1;
        unsigned int customizesForPresentationInPopover:1;
        unsigned int isSuspended:1;
        unsigned int wasApplicationFrameAtSuspend:1;
        unsigned int wantsFullScreenLayout:1;
        unsigned int shouldUseFullScreenLayout:1;
        unsigned int allowsAutorotation:1;
        unsigned int searchControllerRetained:1;
        unsigned int oldModalInPopover:1;
        unsigned int isModalInPopover:1;
        unsigned int isInWillRotateCallback:1;
        unsigned int disallowMixedOrientationPresentations:1;
        unsigned int isFinishingModalTransition:1;
        unsigned int definesPresentationContext:1;
        unsigned int providesPresentationContextTransitionStyle:1;
        unsigned int containmentSupport:1;
        unsigned int isSettingAppearState:1;
        unsigned int isInAnimatedVCTransition:1;
        unsigned int presentationIsChanging:1;
        unsigned int isBeingPresented:1;
        unsigned int containmentIsChanging:1;
        unsigned int explicitTransitionIsAppearing:1;
        unsigned int disableAppearanceTransitions:1;
        unsigned int needsDidMoveCleanup:1;
        unsigned int suppressesBottomBar:1;
        unsigned int disableRootPromotion:1;
        unsigned int interfaceOrientationReentranceGuard:1;
        unsigned int isExecutingAfterAppearance:1;
        unsigned int rootResignationNeeded:1;
        unsigned int shouldSynthesizeSupportedOrientations:1;
        unsigned int viewConstraintsNeedUpdateOnAppearance:1;
        unsigned int shouldForceNonAnimatedTransition:1;
        unsigned int isInCustomTransition:1;
        unsigned int usesSharedView:1;
        unsigned int extendedLayoutIncludesOpaqueBars:1;
        unsigned int automaticallyAdjustInsets:1;
        unsigned int previousShouldUnderlapUnderStatusBar:1;
        unsigned int freezeShouldUnderlapUnderStatusBar:1;
        unsigned int neverResizeRoot:1;
        unsigned int monitorsSystemLayoutFittingSize:1;
    } _viewControllerFlags;
    long long _retainCount;
    _Bool _ignoreAppSupportedOrientations;
    _Bool _viewHostsLayoutEngine;
    NSString *_storyboardIdentifier;
    id <UIViewControllerTransitioningDelegate> _transitioningDelegate;
    _Bool _modalPresentationCapturesStatusBarAppearance;
    NSMutableArray *_childViewControllers;
    double _customNavigationInteractiveTransitionDuration;
    double _customNavigationInteractiveTransitionPercentComplete;
    UITransitionView *_customTransitioningView;
    UITraitCollection *_lastNotifiedTraitCollection;
    UIPresentationController *_presentationController;
    double _navigationControllerContentOffsetAdjustment;
    double _contentMargin;
    _UILayoutGuide *_topLayoutGuide;
    _UILayoutGuide *_bottomLayoutGuide;
    NSLayoutConstraint *_topBarInsetGuideConstraint;
    NSLayoutConstraint *_bottomBarInsetGuideConstraint;
    _UILayoutGuide *_leftLayoutGuide;
    _UILayoutGuide *_rightLayoutGuide;
    NSLayoutConstraint *_leftMarginGuideConstraint;
    NSLayoutConstraint *_rightMarginGuideConstraint;
    UIViewController *_sourceViewControllerIfPresentedViaPopoverSegue;
    UIViewController *_modalSourceViewController;
    UIViewController *_presentedStatusBarViewController;
    unsigned long long _edgesForExtendedLayout;
    UIView *__embeddedView;
    UIView *__embeddingView;
    id <_UIViewControllerContentViewEmbedding> __embeddedDelegate;
    UIPresentationController *_originalPresentationController;
    UIPresentationController *_temporaryPresentationController;
    UIViewController *__childControllerToIgnoreWhileLookingForTransitionCoordinator;
    struct CGSize _preferredContentSize;
    CDStruct_d58201db _presentationSizeClassPair;
    struct UIEdgeInsets _navigationControllerContentInsetAdjustment;
    struct UIEdgeInsets _contentOverlayInsets;
    struct CGRect __embeddedViewFrame;
}

+ (id)_currentStatusBarHiddenViewController;
+ (id)_currentStatusBarStyleViewController;
+ (void)attemptRotationToDeviceOrientation;
+ (_Bool)_doesOverrideLegacyShouldAutorotateMethod;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (_Bool)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (double)durationForTransition:(int)arg1;
+ (double)customTransitionDuration;
+ (void)setCustomTransitionDuration:(double)arg1;
+ (id)_viewControllerForFullScreenPresentationFromView:(id)arg1;
+ (void)_scheduleTransition:(CDUnknownBlockType)arg1;
+ (void)_performWithoutDeferringTransitions:(CDUnknownBlockType)arg1;
+ (_Bool)_shouldDeferTransitions;
+ (void)_setShouldDeferTransitions:(_Bool)arg1;
+ (void)_setShouldUseLegacyPresentations:(_Bool)arg1;
+ (_Bool)_optsOutOfPopoverControllerHierarchyCheck;
+ (_Bool)_isViewSizeFullScreen:(id)arg1 inWindow:(id)arg2;
+ (_Bool)_isViewSizeFullScreen:(id)arg1 inWindow:(id)arg2 ignoreInWindowCheck:(_Bool)arg3;
+ (_Bool)_doesOverrideLegacyFullScreenLayout;
+ (id)_printHierarchy;
+ (id)_allDescriptions;
+ (void)_traverseViewControllerHierarchy:(CDUnknownBlockType)arg1;
+ (void)_traverseViewControllerHierarchyWithDelayedRelease:(CDUnknownBlockType)arg1;
+ (void)_traverseViewControllerHierarchyWithDelayedReleaseArray:(const void **)arg1 block:(CDUnknownBlockType)arg2;
+ (void)setViewController:(id)arg1 forView:(id)arg2;
+ (void)removeViewControllerForView:(id)arg1;
+ (id)viewControllerForView:(id)arg1;
+ (int)_keyboardDirectionForTransition:(int)arg1;
+ (id)existingNibNameMatchingClassName:(id)arg1 bundle:(id)arg2;
+ (id)_traitCollectionWithParentTraitCollection:(id)arg1 overrideTraitCollection:(id)arg2;
+ (_Bool)_preventsAppearanceProxyCustomization;
+ (_Bool)_frameIsNotResizedForDoubleHeightStatusBarChanges:(id)arg1;
+ (_Bool)_synthesizeSupportedInterfaceOrientationsFromShouldAutorotateToInterfaceOrientation;
+ (struct CGSize)defaultFormSheetSize;
+ (_Bool)doesOverrideSupportedInterfaceOrientations;
+ (_Bool)doesOverridePreferredInterfaceOrientationForPresentation;
+ (_Bool)doesOverrideViewControllerMethod:(SEL)arg1;
+ (_Bool)doesOverrideViewControllerMethod:(SEL)arg1 inBaseClass:(Class)arg2;
+ (_Bool)_shouldUseLegacyModalViewControllers;
+ (_Bool)_isNestedViewControllerSupportDisabled;
+ (void)_disableNestedViewControllerSupport:(_Bool)arg1;
+ (void)_forceLegacyModalViewControllers:(_Bool)arg1;
+ (_Bool)_shouldUseRootViewControllerAutopromotion;
+ (void)initialize;
+ (double)_slimHorizontalContentMargin;
+ (double)_standardHorizontalContentMargin;
+ (_Bool)_directlySetsContentOverlayInsetsForChildren;
+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
+ (_Bool)_isSecureForRemoteViewService;
+ (id)XPCInterface;
+ (_Bool)_initializedByViewServices;
@property(retain, nonatomic, setter=_setChildControllerToIgnoreWhileLookingForTransitionCoordinator:) UIViewController *_childControllerToIgnoreWhileLookingForTransitionCoordinator; // @synthesize _childControllerToIgnoreWhileLookingForTransitionCoordinator=__childControllerToIgnoreWhileLookingForTransitionCoordinator;
@property(retain, nonatomic, getter=_temporaryPresentationController, setter=_setTemporaryPresentationController:) UIPresentationController *temporaryPresentationController; // @synthesize temporaryPresentationController=_temporaryPresentationController;
@property(retain, nonatomic, getter=_originalPresentationController, setter=_setOriginalPresentationController:) UIPresentationController *originalPresentationController; // @synthesize originalPresentationController=_originalPresentationController;
@property(nonatomic, getter=_presentationSizeClassPair, setter=_setPresentationSizeClassPair:) CDStruct_d58201db presentationSizeClassPair; // @synthesize presentationSizeClassPair=_presentationSizeClassPair;
@property(nonatomic, setter=_setEmbeddedDelegate:) id <_UIViewControllerContentViewEmbedding> _embeddedDelegate; // @synthesize _embeddedDelegate=__embeddedDelegate;
@property(nonatomic, setter=_setEmbeddedViewFrame:) struct CGRect _embeddedViewFrame; // @synthesize _embeddedViewFrame=__embeddedViewFrame;
@property(retain, nonatomic, setter=_setEmbeddingView:) UIView *_embeddingView; // @synthesize _embeddingView=__embeddingView;
@property(retain, nonatomic, setter=_setEmbeddedView:) UIView *_embeddedView; // @synthesize _embeddedView=__embeddedView;
@property(nonatomic) unsigned long long edgesForExtendedLayout; // @synthesize edgesForExtendedLayout=_edgesForExtendedLayout;
@property(nonatomic) _Bool modalPresentationCapturesStatusBarAppearance; // @synthesize modalPresentationCapturesStatusBarAppearance=_modalPresentationCapturesStatusBarAppearance;
@property(retain, nonatomic, setter=_setPresentedStatusBarViewController:) UIViewController *_presentedStatusBarViewController; // @synthesize _presentedStatusBarViewController;
@property(nonatomic) long long modalPresentationStyle; // @synthesize modalPresentationStyle=_modalPresentationStyle;
@property(nonatomic) long long modalTransitionStyle; // @synthesize modalTransitionStyle=_modalTransitionStyle;
@property(nonatomic) UIViewController *parentModalViewController; // @synthesize parentModalViewController=_parentModalViewController;
@property(retain, nonatomic) UIDropShadowView *dropShadowView; // @synthesize dropShadowView=_dropShadowView;
@property(nonatomic, setter=_setModalSourceViewController:) UIViewController *_modalSourceViewController; // @synthesize _modalSourceViewController;
@property(nonatomic, setter=_setSourceViewControllerIfPresentedViaPopoverSegue:) UIViewController *_sourceViewControllerIfPresentedViaPopoverSegue; // @synthesize _sourceViewControllerIfPresentedViaPopoverSegue;
@property(readonly, nonatomic) NSArray *storyboardSegueTemplates; // @synthesize storyboardSegueTemplates=_storyboardSegueTemplates;
- (void)_setStoryboard:(id)arg1;
@property(retain, nonatomic) UIStoryboard *storyboard; // @synthesize storyboard=_storyboard;
@property(retain, nonatomic) NSBundle *nibBundle; // @synthesize nibBundle=_nibBundle;
@property(readonly, nonatomic) UIView *savedHeaderSuperview; // @synthesize savedHeaderSuperview=_savedHeaderSuperview;
@property(copy, nonatomic) NSString *nibName; // @synthesize nibName=_nibName;
@property(readonly, retain, nonatomic) NSLayoutConstraint *_rightMarginGuideConstraint; // @synthesize _rightMarginGuideConstraint;
@property(readonly, retain, nonatomic) NSLayoutConstraint *_leftMarginGuideConstraint; // @synthesize _leftMarginGuideConstraint;
@property(readonly, retain, nonatomic) NSLayoutConstraint *_bottomBarInsetGuideConstraint; // @synthesize _bottomBarInsetGuideConstraint;
@property(readonly, retain, nonatomic) NSLayoutConstraint *_topBarInsetGuideConstraint; // @synthesize _topBarInsetGuideConstraint;
@property(nonatomic, setter=_setContentMargin:) double _contentMargin; // @synthesize _contentMargin;
@property(nonatomic, setter=_setContentOverlayInsets:) struct UIEdgeInsets _contentOverlayInsets; // @synthesize _contentOverlayInsets;
@property(nonatomic, setter=_setNavigationControllerContentOffsetAdjustment:) double _navigationControllerContentOffsetAdjustment; // @synthesize _navigationControllerContentOffsetAdjustment;
@property(retain, nonatomic, setter=_setPresentationController:) UIPresentationController *_presentationController; // @synthesize _presentationController;
@property(retain, nonatomic, setter=_setLastNotifiedTraitCollection:) UITraitCollection *_lastNotifiedTraitCollection; // @synthesize _lastNotifiedTraitCollection;
@property(nonatomic, setter=_setNavigationControllerContentInsetAdjustment:) struct UIEdgeInsets _navigationControllerContentInsetAdjustment; // @synthesize _navigationControllerContentInsetAdjustment;
@property(retain, nonatomic) UITransitionView *customTransitioningView; // @synthesize customTransitioningView=_customTransitioningView;
@property(nonatomic) double customNavigationInteractiveTransitionPercentComplete; // @synthesize customNavigationInteractiveTransitionPercentComplete=_customNavigationInteractiveTransitionPercentComplete;
@property(nonatomic) double customNavigationInteractiveTransitionDuration; // @synthesize customNavigationInteractiveTransitionDuration=_customNavigationInteractiveTransitionDuration;
@property(nonatomic) NSMutableArray *mutableChildViewControllers; // @synthesize mutableChildViewControllers=_childViewControllers;
@property(readonly, nonatomic) CDStruct_d58201db __sizeClassPair;
- (_Bool)_isMemberOfViewControllerHierarchy:(id)arg1;
@property(readonly, nonatomic) long long _verticalSizeClass;
@property(readonly, nonatomic) long long _horizontalSizeClass;
- (long long)_verticalSizeClassForChildViewController:(id)arg1;
- (long long)_horizontalSizeClassForChildViewController:(id)arg1;
- (void)_setAllowNestedNavigationControllers:(_Bool)arg1;
- (_Bool)_allowNestedNavigationControllers;
- (_Bool)_isNestedNavigationController;
- (void)_prepareForNormalDisplayWithNavigationController:(id)arg1;
- (void)_prepareForNestedDisplayWithNavigationController:(id)arg1;
- (void)_setKeyCommands:(id)arg1;
- (id)_keyCommands;
- (_Bool)isMovingFromParentViewController;
- (_Bool)isMovingToParentViewController;
- (_Bool)isBeingDismissed;
- (_Bool)isBeingPresented;
- (void)_updateInteractivePopGestureEnabledState;
- (void)_removeNavigationItemsFromNavigationController:(id)arg1 transition:(int)arg2;
- (void)_appendNavigationItemsToNavigationController:(id)arg1 transition:(int)arg2;
- (id)_lastNavigationItems;
@property(nonatomic) _Bool searchBarHidNavBar;
- (void)_setSearchDisplayControllerUnretained:(id)arg1;
@property(retain, nonatomic) UISearchDisplayController *searchDisplayController; // @dynamic searchDisplayController;
- (void)_setSearchDisplayController:(id)arg1 retain:(_Bool)arg2;
- (id)defaultPNGName;
- (id)_screen;
- (id)_effectiveStatusBarHiddenViewController;
- (id)_effectiveStatusBarStyleViewController;
- (void)setNeedsStatusBarAppearanceUpdate;
- (id)_preferredStatusBarHideAnimationParameters;
- (id)_preferredStatusBarStyleAnimationParameters;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)accessibilityLargeTextDidChange;
- (id)rotatingSnapshotViewForWindow:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)window:(id)arg1 didRotateFromInterfaceOrientation:(long long)arg2;
- (void)window:(id)arg1 didRotateFromInterfaceOrientation:(long long)arg2 oldSize:(struct CGSize)arg3;
- (void)_didRotateFromInterfaceOrientation;
- (void)_didRotateFromInterfaceOrientation:(long long)arg1 forwardToChildControllers:(_Bool)arg2 skipSelf:(_Bool)arg3;
- (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)window:(id)arg1 willAnimateSecondHalfOfRotationFromInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1;
- (void)window:(id)arg1 didAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg2;
- (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)window:(id)arg1 willAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)window:(id)arg1 setupWithInterfaceOrientation:(long long)arg2;
- (void)window:(id)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)window:(id)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3 newSize:(struct CGSize)arg4;
- (void)_willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(_Bool)arg3 skipSelf:(_Bool)arg4;
- (void)window:(id)arg1 resizeFromOrientation:(long long)arg2;
- (struct CGAffineTransform)tranformForScreenOriginRotation:(float)arg1;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (void)getRotationContentSettings:(CDStruct_010f855d *)arg1 forWindow:(id)arg2;
- (_Bool)_shouldUseOnePartRotation;
- (_Bool)shouldWindowUseOnePartInterfaceRotationAnimation:(id)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)window:(id)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)window:(id)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3 newSize:(struct CGSize)arg4;
- (void)_willRotateToInterfaceOrientation;
- (void)_willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(_Bool)arg3 skipSelf:(_Bool)arg4;
@property(nonatomic, getter=isInWillRotateCallback) _Bool inWillRotateCallback;
- (struct CGRect)_boundsForOrientation:(long long)arg1;
- (struct CGPoint)_centerForOrientation:(long long)arg1;
- (_Bool)_isViewControllerInWindowHierarchy;
- (void)_updateLastKnownInterfaceOrientationOnPresentionStack:(long long)arg1;
- (void)setInterfaceOrientation:(long long)arg1;
- (void)_setInterfaceOrientationOnModalRecursively:(long long)arg1;
- (long long)interfaceOrientation;
- (long long)_legacyInterfaceOrientation;
- (void)_clearLastKnownInterfaceOrientation;
- (void)_setLastKnownInterfaceOrientation:(long long)arg1;
- (long long)_lastKnownInterfaceOrientation;
- (id)rotatingFooterView;
- (id)rotatingFooterViewForWindow:(id)arg1;
- (id)rotatingContentViewForWindow:(id)arg1;
- (id)rotatingHeaderView;
- (id)rotatingHeaderViewForWindow:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)__withSupportedInterfaceOrientation:(long long)arg1 apply:(CDUnknownBlockType)arg2;
- (unsigned long long)__supportedInterfaceOrientations;
- (void)_updateSupportedInterfaceOrientationsIfNecessary;
- (long long)_preferredInterfaceOrientationForPresentationInWindow:(id)arg1 fromInterfaceOrientation:(long long)arg2;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)_setIgnoreAppSupportedOrientations:(_Bool)arg1;
- (_Bool)_ignoreAppSupportedOrientations;
- (void)_setAllowsAutorotation:(_Bool)arg1;
- (_Bool)_allowsAutorotation;
- (_Bool)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(long long)arg2;
- (void)_updateInterfaceOrientationAnimated:(_Bool)arg1;
- (_Bool)_isInterfaceAutorotationDisabled;
- (void)_endDisablingInterfaceAutorotation;
- (void)_beginDisablingInterfaceAutorotation;
- (id)_viewControllerForSupportedInterfaceOrientations;
- (id)_viewControllerForSupportedInterfaceOrientationsWithDismissCheck:(_Bool)arg1;
- (id)_viewControllersForRotationCallbacks;
- (id)_viewControllerForRotation;
- (id)_viewControllerForRotationWithDismissCheck:(_Bool)arg1;
- (_Bool)_isPresentedDescendantOfViewController:(id)arg1;
- (id)_nearestFullScreenAncestorViewController;
- (_Bool)_checkIfViewControllerIsBeingDismissed:(id)arg1;
- (id)viewControllerForRotation;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)_sendViewWillTransitionToSizeToPresentationController:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (id)targetViewControllerForAction:(SEL)arg1 sender:(id)arg2;
- (id)_nextViewController;
- (void)showDetailViewController:(id)arg1 sender:(id)arg2;
- (void)showViewController:(id)arg1 sender:(id)arg2;
- (void)_showViewController:(id)arg1 withAction:(SEL)arg2 sender:(id)arg3;
- (double)durationForTransition:(int)arg1;
- (id)_backgroundColorForModalFormSheet;
- (_Bool)_shouldIgnoreTouchesForModalFormSheet;
- (_Bool)disablesAutomaticKeyboardDismissal;
- (_Bool)_shouldAutoPinInputViewsForModalFormSheet;
@property(nonatomic) _Bool disableRootPromotion;
- (void)_setDisallowMixedOrientationPresentations:(_Bool)arg1;
- (_Bool)_disallowMixedOrientationPresentations;
- (void)_handleTapToDismissModalCurl:(id)arg1;
- (void)_addCurlUpTapGestureRecognizerWithRevealedHeight:(double)arg1;
- (_Bool)_hasCurlUpTapGestureRecognizer;
@property(readonly, nonatomic) UIViewController *presentingViewController;
@property(readonly, nonatomic) UIViewController *presentedViewController;
@property(nonatomic) _Bool providesPresentationContextTransitionStyle;
- (_Bool)_isPresentationContextByDefault;
@property(nonatomic) _Bool definesPresentationContext;
- (void)_legacyModalDismissTransitionDidComplete;
- (id)popoverPresentationController;
- (_Bool)_isInPopoverPresentation;
- (_Bool)_isInContextOfPresentationControllerOfClass:(Class)arg1 effective:(_Bool)arg2;
- (id)_existingPresentationControllerImmediate:(_Bool)arg1 effective:(_Bool)arg2;
- (id)popoverPresentationController:(_Bool)arg1;
- (id)presentationController;
- (void)_didCancelDismissTransition:(id)arg1;
- (void)_didFinishDismissTransition;
- (void)_legacyModalPresentTransitionDidComplete;
- (void)_didCancelPresentTransition:(id)arg1;
- (void)_didFinishPresentTransition;
- (_Bool)transitionViewShouldUseViewControllerCallbacks;
- (void)_startPresentCustomTransitionWithDuration:(double)arg1;
- (void)transitionViewDidComplete:(id)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissModalViewControllerAnimated:(_Bool)arg1;
- (void)_windowControllerBasedDismissViewControllerWithTransition:(int)arg1 from:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dismissViewControllerWithAnimationController:(id)arg1 interactionController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dismissViewControllerWithTransition:(int)arg1 from:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dismissModalViewControllerWithTransition:(int)arg1;
- (void)_windowControllerDismissViewControllerWithTransition:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissViewControllerWithTransition:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_resetViewController;
- (void)_legacyDismissModalViewController:(id)arg1 withTransition:(int)arg2;
- (void)presentModalViewController:(id)arg1 animated:(_Bool)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentModalViewController:(id)arg1 withTransition:(int)arg2;
- (void)_windowControllerBasedPresentViewController:(id)arg1 withTransition:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_presentViewController:(id)arg1 withAnimationController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentViewController:(id)arg1 withTransition:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_requiresCustomPresentationController;
- (void)_replaceViewControllerInPresentationHierarchy:(id)arg1;
- (id)_adaptedPresentationControllerForTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)_shouldAdaptWhenRotated;
- (void)_presentViewController:(id)arg1 presentationController:(id)arg2 animationController:(id)arg3 interactionController:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)transitionCoordinator;
- (id)_transitionCoordinator;
- (id)_transitionCoordinatorForWindowController:(id)arg1;
- (id)_customInteractionControllerForDismissal:(id)arg1;
- (id)_customAnimatorForDismissedController:(id)arg1;
- (id)_customInteractionControllerForPresentation:(id)arg1;
- (id)_customAnimatorForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)_customPresentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)_endDelayingPresentation;
- (void)_beginDelayingPresentation;
- (void)_beginDelayingPresentation:(double)arg1 cancellationHandler:(CDUnknownBlockType)arg2;
- (void)_cancelDelayedPresentation:(_Bool)arg1;
- (id)_delayingViewController;
- (_Bool)_isWaitingForDelayedPresentation;
- (_Bool)_isDelayingPresentation;
- (void)__viewControllerWillBePresented:(_Bool)arg1;
- (int)_transitionForModalTransitionStyle:(long long)arg1 appearing:(_Bool)arg2;
@property(readonly, nonatomic) _Bool _useSheetRotation;
@property(readonly, nonatomic) _Bool _isModalSheet;
@property(readonly, nonatomic) _Bool _isInSheetPresentation;
@property(readonly, nonatomic) _Bool _isPresentedFormSheet;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (_Bool)_useCustomDimmingView;
@property(readonly, nonatomic) _Bool _isDimmingBackground;
- (long long)_preferredInterfaceOrientationGivenCurrentOrientation:(long long)arg1;
- (long long)_preferredInterfaceOrientationGivenStatusBarAndDeviceAndOrientation:(long long)arg1;
- (long long)_preferredInterfaceOrientationGivenStatusBarAndDeviceOrientationAndMask:(unsigned long long *)arg1;
- (long long)_supportedInterfaceOrientationForInterfaceOrientation:(long long)arg1 givenMask:(unsigned long long *)arg2;
- (void)_legacyPresentModalViewController:(id)arg1 withTransition:(int)arg2;
- (void)userDidCancelPopoverView:(id)arg1;
- (struct CGRect)_frameForContainerViewInSheetForBounds:(struct CGRect)arg1;
- (struct CGRect)_frameForContainerViewInSheetForBounds:(struct CGRect)arg1 displayingTopView:(_Bool)arg2 andBottomView:(_Bool)arg3;
- (_Bool)_ancestorViewControllerIsInPopover;
- (id)_popoverController;
- (void)_setPopoverController:(id)arg1;
- (void)_setModalPresentationStyle:(long long)arg1;
- (void)_sheetPresentAnimationDidStop;
- (void)setIsSheet:(_Bool)arg1;
- (_Bool)isSheet;
- (void)_setCustomizesForPresentationInPopover:(_Bool)arg1;
- (_Bool)_customizesForPresentationInPopover;
- (void)_overlayPresentAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (CDUnknownBlockType)_completionBlock;
- (id)currentAction;
@property(readonly, nonatomic) UIViewController *modalViewController;
@property(retain, nonatomic) UIViewController *childModalViewController;
@property(retain, nonatomic) UITransitionView *modalTransitionView;
- (void)setShouldForceNonAnimatedTransition:(_Bool)arg1;
@property(nonatomic, getter=isFinishingModalTransition) _Bool finishingModalTransition;
- (void)setPerformingModalTransition:(_Bool)arg1;
- (_Bool)isPerformingModalTransition;
@property(nonatomic) _Bool automaticallyAdjustsScrollViewInsets;
@property(nonatomic) _Bool extendedLayoutIncludesOpaqueBars;
@property(nonatomic) _Bool wantsFullScreenLayout;
- (_Bool)_reallyWantsFullScreenLayout;
- (_Bool)_shouldUseFullScreenLayoutInWindow:(id)arg1 parentViewController:(id)arg2;
- (_Bool)_shouldChildViewControllerUseFullScreenLayout:(id)arg1;
- (_Bool)_shouldUseFullScreenLayout;
- (_Bool)_viewControllerUnderlapsStatusBar;
- (void)applicationDidResume;
- (void)applicationWillSuspend;
- (void)applicationWantsViewsToDisappear;
- (id)_visibleView;
- (_Bool)_isViewInWindowWithoutParentViewController;
- (void)purgeMemoryForReason:(int)arg1;
- (_Bool)_canReloadView;
- (void)didReceiveMemoryWarning;
- (void)_didReceiveMemoryWarning:(id)arg1;
- (id)_printHierarchy;
- (id)_descriptionForPrintingHierarchy;
- (id)_descriptionWithChildren:(int)arg1;
- (void)_traverseViewControllerHierarchyFromLevel:(long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_description;
- (void)_layoutContainerViewDidMoveToWindow:(id)arg1;
- (void)_layoutContainerViewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;
- (_Bool)_shouldPropagateFrameChange:(struct CGRect)arg1;
- (void)__willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)viewWillMoveToWindow:(id)arg1;
@property(readonly, nonatomic) _Bool inExplicitAppearanceTransition;
- (id)_requiredNotificationsForRemoteServices;
- (_Bool)_doesSelfOrAncestorPassPredicate:(CDUnknownBlockType)arg1;
- (_Bool)_didSelfOrAncestorBeginAppearanceTransition;
- (void)_resignRootViewController;
- (_Bool)_tryBecomeRootViewControllerInWindow:(id)arg1;
- (_Bool)_isRootViewController;
- (void)updateViewConstraints;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)_endAppearanceTransitionToViewController:(id)arg1;
- (void)_beginAppearanceTransitionToViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_executeAfterAppearanceBlock;
@property(nonatomic) _Bool needsDidMoveCleanup;
@property(copy, nonatomic) CDUnknownBlockType afterAppearanceBlock; // @synthesize afterAppearanceBlock=_afterAppearance;
- (void)setAppearanceTransitionsAreDisabledForAllVisibleDescendents:(_Bool)arg1;
@property(nonatomic) _Bool appearanceTransitionsAreDisabled;
- (_Bool)_endAppearanceTransition:(CDUnknownBlockType)arg1;
- (void)__viewDidDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)__viewWillDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)__viewDidAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)__viewWillAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_setViewAppearState:(int)arg1 isAnimating:(_Bool)arg2;
@property(nonatomic, getter=isInAnimatedVCTransition) _Bool inAnimatedVCTransition;
- (_Bool)_skipDefaultAppearStateCallbacks;
- (_Bool)_forwardAppearanceMethods;
- (_Bool)_forwardRotationMethods;
@property(readonly, nonatomic) _Bool isSettingAppearState;
- (_Bool)isUsingLegacyContainment;
- (void)setUseLegacyContainment:(_Bool)arg1;
- (void)setContainmentSupport:(_Bool)arg1;
- (_Bool)containmentSupport;
- (_Bool)_isHostedRootViewController;
- (_Bool)_hasAppeared;
- (void)_setAppearState:(int)arg1;
- (int)_appearState;
- (_Bool)_isAppearingOrAppeared;
- (void)_setPreviousRootViewController:(id)arg1;
- (id)_previousRootViewController;
- (id)_ancestorViewControllerOfClass:(Class)arg1 allowModalParent:(_Bool)arg2;
- (_Bool)isViewControllerModallyPresented;
- (id)_modalPresenter:(long long)arg1;
- (id)_modalPresenterForPresentationController:(id)arg1;
@property(readonly, nonatomic, getter=_window) UIWindow *window;
- (_Bool)_isPresentingInWindow:(id)arg1;
- (id)_viewsWithDisabledInteractionGivenTransitionContext:(id)arg1;
- (id)_rootAncestorViewController;
- (id)_nonModalAncestorViewController;
- (id)_nonModalAncestorViewControllerStopAtIsPresentationContext:(_Bool)arg1;
- (id)_nonModalParentViewController;
@property(readonly, nonatomic) unsigned long long childViewControllersCount;
@property(nonatomic) UIViewController *parentViewController;
@property(readonly, nonatomic) UIViewController *_parentModalViewController;
@property(readonly, nonatomic) UIViewController *_parentViewController;
- (void)removeChildViewController:(id)arg1;
- (void)removeChildViewController:(id)arg1 notifyDidMove:(_Bool)arg2;
- (void)_addChildViewController:(id)arg1 notifyWillMove:(_Bool)arg2;
- (void)_addChildViewController:(id)arg1 performHierarchyCheck:(_Bool)arg2 notifyWillMove:(_Bool)arg3;
- (void)_addChildViewController:(id)arg1;
- (void)_removeChildViewController:(id)arg1;
- (void)_enumerateVisibleChildControllers:(_Bool)arg1 includePresentedChildren:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)_barBackdropGroupNameForAncestorViewController:(id *)arg1;
- (void)_enumerateAncestorViewControllersUntilStop:(_Bool *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)_backdropBarGroupName;
- (void)updateTitleForViewController:(id)arg1;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (id)_nextViewControllerInResponderChain;
- (id)segueForUnwindingToViewController:(id)arg1 fromViewController:(id)arg2 identifier:(id)arg3;
- (_Bool)canPerformUnwindSegueAction:(SEL)arg1 fromViewController:(id)arg2 withSender:(id)arg3;
- (id)viewControllerForUnwindSegueAction:(SEL)arg1 fromViewController:(id)arg2 withSender:(id)arg3;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (_Bool)shouldPerformSegueWithIdentifier:(id)arg1 sender:(id)arg2;
- (void)performSegueWithIdentifier:(id)arg1 sender:(id)arg2;
- (id)_segueTemplateWithIdentifier:(id)arg1;
- (_Bool)_containsFirstResponder;
- (void)autoresizeArchivedView;
- (void)setAutoresizesArchivedViewToFullSize:(_Bool)arg1;
- (_Bool)autoresizesArchivedViewToFullSize;
- (void)_updateLayoutForStatusBarAndInterfaceOrientation;
- (_Bool)_shouldUpdateLayoutForStatusBarAndInterfaceOrientation;
- (void)window:(id)arg1 statusBarWillChangeFromHeight:(double)arg2 toHeight:(double)arg3;
- (void)window:(id)arg1 statusBarWillChangeFromHeight:(double)arg2 toHeight:(double)arg3 windowSizedViewController:(id)arg4;
- (void)window:(id)arg1 willAnimateFromContentFrame:(struct CGRect)arg2 toContentFrame:(struct CGRect)arg3;
- (id)_existingTabBarItem;
- (void)_setExistingTabBarItem:(id)arg1;
- (id)_existingNavigationItem;
- (void)_setExistingNavigationItem:(id)arg1;
- (id)contentScrollView;
- (void)_clearRecordedContentScrollView;
- (void)_recordContentScrollView;
- (id)_modalPreservedFirstResponder;
- (id)_existingView;
- (_Bool)isViewLoaded;
@property(retain, nonatomic) UIView *view;
- (void)_cleanupLayoutGuides;
- (void)_setSharedView:(id)arg1;
- (void)loadViewIfRequired;
- (void)viewDidUnload;
- (void)viewWillUnload;
- (void)unloadViewForced:(_Bool)arg1;
- (void)unloadViewIfReloadable;
- (void)unloadView;
- (void)forceUnloadView;
- (void)viewDidLoad;
- (void)loadView;
- (double)_statusBarHeightAdjustmentForCurrentOrientation;
- (double)_statusBarHeightForCurrentInterfaceOrientation;
- (struct CGRect)_defaultInitialViewFrame;
- (void)_loadViewFromNibNamed:(id)arg1 bundle:(id)arg2;
- (void)_inferLayoutGuidesFromSubviews;
- (void)_updateTraitsIfNecessary;
- (void)_traitCollectionDidChange:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
@property(readonly, nonatomic) UITraitCollection *traitCollection;
- (id)_parentTraitEnvironment;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_window:(id)arg1 willTransitionToTraitCollection:(id)arg2 withTransitionCoordinator:(id)arg3;
- (void)_parent:(id)arg1 willTransitionToTraitCollection:(id)arg2 withTransitionCoordinator:(id)arg3;
- (id)_appearanceGuideClass;
- (id)_appearanceContainer;
- (id)_nonPresentationAppearanceContainer;
- (_Bool)_isViewController;
- (id)_deepestUnambiguousResponder;
- (_Bool)_canBecomeDeepestUnambiguousResponder;
- (_Bool)_canBecomeFirstResponder;
- (id)nextResponder;
- (id)_firstResponder;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_shouldPersistViewWhenCoding;
- (void)_populateArchivedChildViewControllers:(id)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)_vanillaInit;
- (id)init;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_doCommonSetup;
- (void)_setFrameIsNotResizedForDoubleHeightStatusBarChanges:(_Bool)arg1;
- (_Bool)_frameIsNotResizedForDoubleHeightStatusBarChanges;
- (_Bool)_viewHostsLayoutEngine;
- (void)_setViewHostsLayoutEngine:(_Bool)arg1;
- (void)_installLayoutGuidesAndConstraintsIfNecessary;
- (void)_setUpLayoutGuideConstraintIfNecessaryOnLeft:(_Bool)arg1;
- (void)_setUpLayoutGuideConstraintIfNecessaryAtTop:(_Bool)arg1;
- (void)_setUsesSharedView:(_Bool)arg1;
- (_Bool)_usesSharedView;
- (void)_setInCustomTransition:(_Bool)arg1;
- (_Bool)_isInCustomTransition;
- (void)_setShouldSynthesizeSupportedOrientations:(_Bool)arg1;
- (_Bool)_shouldSynthesizeSupportedOrientations;
- (void)_prepareForDismissalInPopover:(id)arg1;
- (void)_prepareForPresentationInPopover:(id)arg1;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_willResignContentViewControllerOfPopover:(id)arg1;
- (void)_didBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (id)_viewForModalPresentationInPopover;
- (id)_viewForContentInPopover;
@property(nonatomic) _Bool modalInPopover;
- (_Bool)isModalInPopover;
- (void)_endModalPresentationInPopover;
- (void)_startModalPresentationInPopover;
- (id)_parentContentContainer;
- (struct CGSize)_systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)_systemLayoutFittingSizeDidChangeForChildContentContainer:(id)arg1 childViewController:(id)arg2;
- (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id)arg1;
- (void)systemLayoutFittingSizeDidChangeForChildViewController:(id)arg1;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
@property(nonatomic) struct CGSize preferredContentSize; // @synthesize preferredContentSize=_preferredContentSize;
@property(nonatomic) struct CGSize contentSizeForViewInPopover; // @synthesize contentSizeForViewInPopover=_contentSizeForViewInPopover;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)_setFormSheetSize:(struct CGSize)arg1;
- (void)setFormSheetSize:(struct CGSize)arg1;
- (struct CGSize)_formSheetSizeForWindowWithSize:(struct CGSize)arg1;
- (struct CGSize)formSheetSize;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
@property(retain, nonatomic, setter=_setPreviousFittingSizeInfo:) NSDictionary *_previousFittingSizeInfo;
@property(readonly, nonatomic) _Bool _monitorsSystemLayoutFittingSize;
@property(readonly, retain, nonatomic) _UILayoutGuide *_rightLayoutGuide; // @synthesize _rightLayoutGuide;
@property(readonly, retain, nonatomic) _UILayoutGuide *_leftLayoutGuide; // @synthesize _leftLayoutGuide;
@property(readonly, retain, nonatomic) _UILayoutGuide *bottomLayoutGuide; // @synthesize bottomLayoutGuide=_bottomLayoutGuide;
- (id)_bottomLayoutGuide;
@property(readonly, retain, nonatomic) _UILayoutGuide *topLayoutGuide; // @synthesize topLayoutGuide=_topLayoutGuide;
- (id)_topLayoutGuide;
- (double)_contentMarginForChildViewController:(id)arg1;
- (void)_updateChildContentMargins;
- (struct UIEdgeInsets)_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(_Bool *)arg2;
- (void)_updateContentOverlayInsetsFromParentIfNecessary;
- (void)_updateContentOverlayInsetsForSelfAndChildren;
- (void)_primitiveSetNavigationControllerContentOffsetAdjustment:(double)arg1;
- (void)_primitiveSetNavigationControllerContentInsetAdjustment:(struct UIEdgeInsets)arg1;
- (id)_presentationControllerClassName;
- (id)moreListTableCell;
- (id)moreListSelectedImage;
- (id)moreListImage;
- (id)_moreListTitle;
- (void)updateTabBarItemForViewController:(id)arg1;
@property(readonly, retain, nonatomic) UITabBarController *tabBarController;
@property(retain, nonatomic) UITabBarItem *tabBarItem;
- (id)separateSecondaryViewControllerForSplitViewController:(id)arg1;
- (void)collapseSecondaryViewController:(id)arg1 forSplitViewController:(id)arg2;
@property(readonly, retain, nonatomic) UISplitViewController *splitViewController;
- (double)_topBarHeight;
- (void)_setSuppressesBottomBar:(_Bool)arg1;
- (_Bool)_suppressesBottomBar;
@property(nonatomic) _Bool hidesBottomBarWhenPushed;
@property(readonly, retain, nonatomic) UINavigationController *navigationController;
- (_Bool)canHandleSnapbackIdentifier:(id)arg1 animated:(_Bool)arg2;
- (void)_toggleEditing:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setEditing:(_Bool)arg1;
- (_Bool)isEditing;
- (id)editButtonItem;
@property(readonly, retain, nonatomic) UINavigationItem *navigationItem;
- (void)_updateToolbarItemsFromViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setToolbarItems:(id)arg1 animated:(_Bool)arg2;
- (void)setToolbarItems:(id)arg1;
- (id)toolbarItems;
- (id)overrideTraitCollectionForChildViewController:(id)arg1;
- (void)setOverrideTraitCollection:(id)arg1 forChildViewController:(id)arg2;
- (id)traitCollectionForChildViewController:(id)arg1;
- (id)childViewControllerForStatusBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (void)cancelBeginAppearanceTransition;
- (void)endAppearanceTransition;
- (void)beginAppearanceTransition:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)_hackFor11408026_endAppearanceTransition;
- (_Bool)_hackFor11408026_beginAppearanceTransition:(_Bool)arg1 animated:(_Bool)arg2;
- (void)transitionFromViewController:(id)arg1 toViewController:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 animations:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
- (void)removeFromParentViewController;
- (void)addChildViewController:(id)arg1;
@property(readonly, nonatomic) NSArray *childViewControllers;
- (void)didMoveToParentViewController:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (_Bool)_isContainmentChanging;
- (void)_presentingViewControllerDidChange:(id)arg1;
- (void)_presentingViewControllerWillChange:(id)arg1;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (_Bool)_shouldLoadViewDuringRestoration:(id)arg1;
- (void)applicationFinishedRestoringState;
- (CDUnknownBlockType)_decodeRestorableStateAndReturnContinuationWithCoder:(id)arg1;
- (void)_presentViewControllerForStateRestoration:(id)arg1 animated:(_Bool)arg2;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)_allContainedViewControllers;
- (void)setStoryboardIdentifier:(id)arg1;
- (id)storyboardIdentifier;
- (void)setRestorationClass:(Class)arg1;
- (Class)restorationClass;
- (id)_restorationClassName;
- (id)_additionalViewControllersToCheckForUserActivity;
- (id)_activityContinuationSuitableToBecomeCurrent;
- (void)restoreUserActivityState:(id)arg1;
- (void)updateUserActivityState:(id)arg1;
- (void)setUserActivity:(id)arg1;
- (void)_unembedContentView;
- (void)_embedContentViewInView:(id)arg1 withContentFrame:(struct CGRect)arg2 delegate:(id)arg3;
- (void)_unembedContentViewSettingDelegate:(id)arg1;
- (_Bool)_viewControllerWasSelected;
- (id)_uiCollectionView;
- (_Bool)useLayoutToLayoutNavigationTransitions;
- (id)_animatorForOperation:(long long)arg1 fromViewController:(id)arg2 toViewController:(id)arg3;
- (void)setTransitioningDelegate:(id)arg1;
- (id)transitioningDelegate;
- (void)_window:(id)arg1 viewWillTransitionToSize:(struct CGSize)arg2 withTransitionCoordinator:(id)arg3;
- (void)window:(id)arg1 didTransitionToWindowSize:(struct CGSize)arg2;
- (void)_preferredContentSizeDidChangeForChildViewController:(id)arg1;
- (long long)_rotatingToInterfaceOrientation;
- (long long)_rotatingFromInterfaceOrientation;
- (void)attentionClassDumpUser:(id)arg1 yesItsUsAgain:(id)arg2 althoughSwizzlingAndOverridingPrivateMethodsIsFun:(id)arg3 itWasntMuchFunWhenYourAppStoppedWorking:(id)arg4 pleaseRefrainFromDoingSoInTheFutureOkayThanksBye:(id)arg5;
- (long long)_imagePickerStatusBarStyle;
- (_Bool)_displaysFullScreen;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (void)_setUseTelephonyUI:(_Bool)arg1;
- (void)dismissModalItem:(id)arg1 withTappedButtonIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)updateModaltem:(id)arg1 animated:(_Bool)arg2;
- (void)presentModalItem:(id)arg1 animated:(_Bool)arg2;
- (void)presentModalItem:(id)arg1 animated:(_Bool)arg2 dontPresentAndAddToStack:(_Bool)arg3;
- (void)presentModalItem:(id)arg1 replacing:(id)arg2 animated:(_Bool)arg3;
- (void)presentModalItem:(id)arg1 replacing:(id)arg2 animated:(_Bool)arg3 dontPresentAndAddToStack:(_Bool)arg4;
- (struct CGSize)_resolvedPreferredContentSize;
- (CDStruct_4c969caf)_hostAuditToken;
- (int)_hostProcessIdentifier;
- (id)_remoteViewControllerProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)_remoteViewControllerProxy;
- (id)_hostApplicationBundleIdentifier;
- (void)_supportedInterfaceOrientationsDidChange;
- (_Bool)_shouldForwardSystemLayoutFittingSizeChanges;
- (_Bool)_shouldRemoveViewFromHierarchyOnDisappear;
- (void)_hostApplicationDidEnterBackground;
- (void)_hostApplicationWillEnterForeground;
- (void)_willAppearInRemoteViewController:(id)arg1;
- (void)_willAppearInRemoteViewController;
- (void)__prepareForDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_setHostAuditToken:(CDStruct_4c969caf)arg1;
- (void)_setHostProcessIdentifier:(int)arg1;
- (void)_setRemoteViewControllerProxy:(id)arg1;
- (void)_setHostApplicationBundleIdentifier:(id)arg1;
- (id)invalidate;
- (void)_stateRestorationDidFinish:(_Bool)arg1;
- (void)beginRequestWithExtensionContext:(id)arg1;
@property(retain, nonatomic, setter=_setExtensionContext:) NSExtensionContext *extensionContext; // @dynamic extensionContext;
- (id)_extensionContext;
- (struct CGSize)_resolvedPreferredContentSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) struct CGSize preferedContentSizeInModalItem; // @dynamic preferedContentSizeInModalItem;
@property(readonly) Class superclass;

@end

@interface UICollectionViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource>
{
    UICollectionViewLayout *_layout;
    UICollectionView *_collectionView;
    struct {
        unsigned int clearsSelectionOnViewWillAppear:1;
        unsigned int useLayoutToLayoutNavigationTransitions:1;
    } _collectionViewControllerFlags;
}

@property(nonatomic) _Bool useLayoutToLayoutNavigationTransitions;
- (void)_setUseLayoutToLayoutNavigationTransitions:(_Bool)arg1 withCheck:(_Bool)arg2;
- (_Bool)shouldCrossFadeBottomBars;
- (_Bool)shouldCrossFadeNavigationBar;
- (id)_animatorForOperation:(long long)arg1 fromViewController:(id)arg2 toViewController:(id)arg3;
- (id)_newCollectionViewWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)dataSource;
- (id)delegate;
@property(retain, nonatomic) UICollectionView *collectionView;
- (id)contentScrollView;
- (id)_uiCollectionView;
- (void)__viewWillAppear:(_Bool)arg1;
- (void)viewWillUnload;
- (void)_clearSharedView;
- (void)_setSharedCollectionView:(id)arg1;
- (void)setView:(id)arg1;
- (void)loadView;
- (id)_wrappingView;
@property(readonly, nonatomic) UICollectionViewLayout *collectionViewLayout;
@property(nonatomic) _Bool clearsSelectionOnViewWillAppear;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCollectionViewLayout:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIActivityGroupViewController : UICollectionViewController <_UIActivityGroupViewDelegateFlowLayout, UIGestureRecognizerDelegate>
{
    _Bool _darkStyleOnLegacyApp;
    _Bool _embedded;
    _Bool _picker;
    _Bool _hasActivities;
    _Bool _activityIndexDidChangeWhileDragging;
    _Bool _allowsUserCustomization;
    id <UIActivityGroupViewControllerDelegate> _delegate;
    long long _activityCategory;
    NSDictionary *_customActivityTitles;
    NSArray *_activities;
    NSArray *_visibleActivities;
    _UIActivityUserDefaults *_userDefaults;
    _UIUserDefaultsActivity *_userDefaultsActivity;
    UILongPressGestureRecognizer *_editingGestureRecognizer;
    NSIndexPath *_indexPathForMenuActivity;
    struct CGPoint _initialDraggingLocation;
}

@property(nonatomic) _Bool allowsUserCustomization; // @synthesize allowsUserCustomization=_allowsUserCustomization;
@property(copy, nonatomic) NSIndexPath *indexPathForMenuActivity; // @synthesize indexPathForMenuActivity=_indexPathForMenuActivity;
@property(nonatomic) _Bool activityIndexDidChangeWhileDragging; // @synthesize activityIndexDidChangeWhileDragging=_activityIndexDidChangeWhileDragging;
@property(nonatomic) struct CGPoint initialDraggingLocation; // @synthesize initialDraggingLocation=_initialDraggingLocation;
@property(retain, nonatomic) UILongPressGestureRecognizer *editingGestureRecognizer; // @synthesize editingGestureRecognizer=_editingGestureRecognizer;
@property(retain, nonatomic) _UIUserDefaultsActivity *userDefaultsActivity; // @synthesize userDefaultsActivity=_userDefaultsActivity;
@property(retain, nonatomic) _UIActivityUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(copy, nonatomic) NSArray *visibleActivities; // @synthesize visibleActivities=_visibleActivities;
@property(nonatomic) _Bool hasActivities; // @synthesize hasActivities=_hasActivities;
@property(nonatomic, getter=isPicker) _Bool picker; // @synthesize picker=_picker;
@property(nonatomic, getter=isEmbedded) _Bool embedded; // @synthesize embedded=_embedded;
@property(nonatomic) _Bool darkStyleOnLegacyApp; // @synthesize darkStyleOnLegacyApp=_darkStyleOnLegacyApp;
@property(copy, nonatomic) NSArray *activities; // @synthesize activities=_activities;
@property(copy, nonatomic) NSDictionary *customActivityTitles; // @synthesize customActivityTitles=_customActivityTitles;
@property(nonatomic) long long activityCategory; // @synthesize activityCategory=_activityCategory;
@property(nonatomic) id <UIActivityGroupViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)activityUserDefaultsDidChange:(id)arg1;
- (void)ignoreUserDefaultsChangesWhileUsingBlock:(CDUnknownBlockType)arg1;
- (void)unregisterForActivityUserDefaultsChanges;
- (void)registerForActivityUserDefaultsChanges;
- (void)hideItemAtIndexPath:(id)arg1;
- (id)activityGroupViewLayout;
- (id)collectionView:(id)arg1 layout:(id)arg2 needsContainerViewForDraggingItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 layout:(id)arg2 moveItemAtIndexPath:(id)arg3 toIndexPath:(id)arg4;
- (id)targetIndexPathForMoveFromRowAtIndexPath:(id)arg1 toProposedIndexPath:(id)arg2;
- (void)handleEditingGesture:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (struct UIEdgeInsets)_preferredSectionInset;
- (struct CGSize)_preferredCellSize;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)reloadItemForActivityOfTypeIfNeeded:(id)arg1;
- (id)activityForItemAtIndexPath:(id)arg1;
- (void)renameActivity:(id)arg1;
- (void)hideActivity:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)canBecomeFirstResponder;
- (void)_setVisibleActivities:(id)arg1 animated:(_Bool)arg2;
- (void)_updateVisibleActivitiesAnimated:(_Bool)arg1;
- (void)_setActivities:(id)arg1 animated:(_Bool)arg2;
- (void)setActivities:(id)arg1 animated:(_Bool)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithActivityCategory:(long long)arg1 userDefaults:(id)arg2 userDefaultsIdentifier:(id)arg3;
- (id)initWithActivityCategory:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIActivityIndicatorView : UIView <NSCoding>
{
    double _duration;
    _Bool _animating;
    long long _activityIndicatorViewStyle;
    long long _actualActivityIndicatorViewStyle;
    _Bool _hidesWhenStopped;
    _Bool _hasShadow;
    _Bool _clockWise;
    _Bool _spinning;
    _Bool _useArtwork;
    _Bool _useOutlineShadow;
    double _width;
    UIColor *_color;
    long long _spokeCount;
    UIColor *_shadowColor;
    double _innerRadius;
    long long _spokeFrameRatio;
    NSArray *_spokeImages;
    double _spinningDuration;
    NSString *_artBackupKeyString;
    UIImageView *_internalView;
    struct CGSize _shadowOffset;
}

+ (struct CGSize)size;
+ (struct CGSize)defaultSizeForStyle:(long long)arg1;
+ (_Bool)_isModernStyle:(long long)arg1;
+ (id)_loadResourcesForStyle:(long long)arg1;
@property(nonatomic) _Bool useOutlineShadow; // @synthesize useOutlineShadow=_useOutlineShadow;
@property(readonly, nonatomic) UIImageView *internalView; // @synthesize internalView=_internalView;
@property(readonly, nonatomic) NSString *artBackupKeyString; // @synthesize artBackupKeyString=_artBackupKeyString;
@property(nonatomic) _Bool useArtwork; // @synthesize useArtwork=_useArtwork;
@property(nonatomic) double spinningDuration; // @synthesize spinningDuration=_spinningDuration;
@property _Bool spinning; // @synthesize spinning=_spinning;
@property(nonatomic) _Bool clockWise; // @synthesize clockWise=_clockWise;
@property(readonly) NSArray *spokeImages; // @synthesize spokeImages=_spokeImages;
@property(nonatomic) long long spokeFrameRatio; // @synthesize spokeFrameRatio=_spokeFrameRatio;
@property(nonatomic) double innerRadius; // @synthesize innerRadius=_innerRadius;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
@property(nonatomic) long long spokeCount; // @synthesize spokeCount=_spokeCount;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property _Bool hasShadow; // @synthesize hasShadow=_hasShadow;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) _Bool hidesWhenStopped; // @synthesize hidesWhenStopped=_hidesWhenStopped;
@property(nonatomic) long long activityIndicatorViewStyle; // @synthesize activityIndicatorViewStyle=_activityIndicatorViewStyle;
- (void)stopAnimation;
- (void)startAnimation;
- (void)setAnimating:(_Bool)arg1;
- (void)setStyle:(long long)arg1;
- (_Bool)_shouldGoBackToBaseStyle;
- (_Bool)_shouldGoToCustomStyle;
- (_Bool)_hasCustomColor;
- (_Bool)_isArtWorkBased;
- (_Bool)_canCustomize;
- (void)generateImages;
- (_Bool)_canCustomizeStyle:(long long)arg1;
- (id)_layoutInfosForStyle:(long long)arg1;
- (long long)_customStyleForStyle:(long long)arg1;
- (id)_defaulColorForStyle:(long long)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_feedTheGear;
- (void)_updateInternalViewFrameWithBounds:(struct CGRect)arg1;
- (id)_generateModernImagesForImages:(id)arg1;
- (id)_generateImages;
- (id)_styleNameForStyle:(long long)arg1;
- (id)artBackupKey;
- (id)_artBackupKey;
- (id)_imageForStep:(long long)arg1;
- (_Bool)_isModern;
- (double)_alphaValueForStep:(long long)arg1;
- (double)_widthForGearWidth:(double)arg1;
- (double)_spokeLengthForGearWidth:(double)arg1;
- (double)_spokeWidthForGearWidth:(double)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_removeAllAnimations:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isHighlighted;
- (void)setAnimationDuration:(double)arg1;
- (_Bool)isAnimating;
- (void)stopAnimating;
- (void)_tearDownAnimation;
- (void)startAnimating;
- (void)_setUpAnimation;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithActivityIndicatorStyle:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;

@end

__attribute__((visibility("hidden")))
@interface UIActivityItemImageRep : NSObject
{
    id _asset;
    CDUnknownBlockType _thumbnailProvider;
    CDUnknownBlockType _dataProvider;
}

+ (id)activityItemImageRepWithAsset:(id)arg1 thumbnailProvider:(CDUnknownBlockType)arg2 dataProvider:(CDUnknownBlockType)arg3;
@property(copy, nonatomic) CDUnknownBlockType dataProvider; // @synthesize dataProvider=_dataProvider;
@property(copy, nonatomic) CDUnknownBlockType thumbnailProvider; // @synthesize thumbnailProvider=_thumbnailProvider;
@property(retain, nonatomic) id asset; // @synthesize asset=_asset;
- (id)data;
- (id)thumbnail;
- (void)dealloc;

@end

@interface UIActivityItemProvider : NSOperation <UIActivityItemSource>
{
    float _progress;
    id _placeholderItem;
    NSString *_activityType;
    NSString *_status;
    id _providedItem;
}

@property(retain, nonatomic) id providedItem; // @synthesize providedItem=_providedItem;
@property(nonatomic) float progress; // @synthesize progress=_progress;
@property(copy, nonatomic) NSString *status; // @synthesize status=_status;
@property(readonly, nonatomic) NSString *activityType; // @synthesize activityType=_activityType;
@property(retain, nonatomic) id placeholderItem; // @synthesize placeholderItem=_placeholderItem;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (void)main;
- (id)item;
- (void)_setActivityType:(id)arg1;
- (void)dealloc;
- (id)initWithPlaceholderItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIActivityItemURLRep : NSObject
{
    NSURL *_URL;
    UIImage *_thumbnail;
    long long _attachmentURLType;
}

@property(nonatomic) long long attachmentURLType; // @synthesize attachmentURLType=_attachmentURLType;
@property(retain, nonatomic) UIImage *thumbnail; // @synthesize thumbnail=_thumbnail;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (id)scheme;
- (_Bool)isFileURL;
- (void)dealloc;

@end

@interface UIActivityViewController : UIViewController <UIViewControllerRestoration, UIAlertControllerContaining, UIActivityGroupViewControllerDelegate, SFAirDropActivityViewControllerDelegate>
{
    _Bool _useBlackPopoverStyle;
    _Bool _showKeyboardAutomatically;
    _Bool _allowsEmbedding;
    _Bool _airdropped;
    _Bool _willDismissActivityViewController;
    _Bool _performActivityForStateRestoration;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _completionWithItemsHandler;
    NSArray *_excludedActivityTypes;
    UIActivity *_activity;
    NSArray *_includedActivityTypes;
    long long _excludedActivityCategories;
    NSArray *_activityTypeOrder;
    NSString *_mailAutosaveIdentifier;
    CDUnknownBlockType _preCompletionHandler;
    id <UIActivityViewControllerDelegate> _airDropDelegate;
    UIViewController *_activityViewController;
    NSArray *_activityItems;
    NSArray *_applicationActivities;
    UIAlertController *_activityAlertController;
    _UIAlertControllerShimPresenter *_activityAlertControllerShimPresenter;
    _UIActivityGroupListViewController *_activityGroupListViewController;
    NSOperationQueue *_activityItemProviderOperationQueue;
    long long _totalProviderCount;
    long long _completedProviderCount;
    unsigned long long _backgroundTaskIdentifier;
    long long _originalPopoverBackgroundStyle;
    Class _originalPopoverBackgroundViewClass;
    NSString *_subject;
    SFAirDropActivityViewController *_airDropViewController;
    CDUnknownBlockType __popoverDismissalAction;
    _UIActivityApplicationExtensionDiscovery *_applicationExtensionDiscovery;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (id)_activeActivityViewControllers;
+ (id)_attachmentNameForActivityItem:(id)arg1 activity:(id)arg2;
+ (id)_thumbnailImageForActivityItem:(id)arg1 activity:(id)arg2;
+ (id)_dataTypeIdentifierForActivityItem:(id)arg1 activity:(id)arg2;
+ (id)_itemProviderForActivityItem:(id)arg1 typeIdentifier:(id)arg2 activity:(id)arg3;
+ (id)_subjectForActivityItem:(id)arg1 activity:(id)arg2;
+ (void)_clearActivityItems:(id)arg1;
+ (void)_addActivityItem:(id)arg1 activityViewController:(id)arg2 originalActivityItem:(id)arg3;
+ (void)_reloadImageForActivity:(id)arg1;
@property(nonatomic) _Bool performActivityForStateRestoration; // @synthesize performActivityForStateRestoration=_performActivityForStateRestoration;
@property(retain, nonatomic) _UIActivityApplicationExtensionDiscovery *applicationExtensionDiscovery; // @synthesize applicationExtensionDiscovery=_applicationExtensionDiscovery;
@property(nonatomic) _Bool willDismissActivityViewController; // @synthesize willDismissActivityViewController=_willDismissActivityViewController;
@property(copy, nonatomic) CDUnknownBlockType _popoverDismissalAction; // @synthesize _popoverDismissalAction=__popoverDismissalAction;
@property(nonatomic) _Bool airdropped; // @synthesize airdropped=_airdropped;
@property(retain, nonatomic) SFAirDropActivityViewController *airDropViewController; // @synthesize airDropViewController=_airDropViewController;
@property(copy, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(nonatomic) Class originalPopoverBackgroundViewClass; // @synthesize originalPopoverBackgroundViewClass=_originalPopoverBackgroundViewClass;
@property(nonatomic) long long originalPopoverBackgroundStyle; // @synthesize originalPopoverBackgroundStyle=_originalPopoverBackgroundStyle;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(nonatomic) long long completedProviderCount; // @synthesize completedProviderCount=_completedProviderCount;
@property(nonatomic) long long totalProviderCount; // @synthesize totalProviderCount=_totalProviderCount;
@property(retain, nonatomic) NSOperationQueue *activityItemProviderOperationQueue; // @synthesize activityItemProviderOperationQueue=_activityItemProviderOperationQueue;
@property(retain, nonatomic) _UIActivityGroupListViewController *activityGroupListViewController; // @synthesize activityGroupListViewController=_activityGroupListViewController;
@property(retain, nonatomic) _UIAlertControllerShimPresenter *activityAlertControllerShimPresenter; // @synthesize activityAlertControllerShimPresenter=_activityAlertControllerShimPresenter;
@property(retain, nonatomic) UIAlertController *activityAlertController; // @synthesize activityAlertController=_activityAlertController;
@property(copy, nonatomic) NSArray *applicationActivities; // @synthesize applicationActivities=_applicationActivities;
@property(copy, nonatomic) NSArray *activityItems; // @synthesize activityItems=_activityItems;
@property(retain, nonatomic) UIViewController *activityViewController; // @synthesize activityViewController=_activityViewController;
@property(nonatomic) id <UIActivityViewControllerDelegate> airDropDelegate; // @synthesize airDropDelegate=_airDropDelegate;
@property(copy, nonatomic) CDUnknownBlockType preCompletionHandler; // @synthesize preCompletionHandler=_preCompletionHandler;
@property(retain, nonatomic) NSString *mailAutosaveIdentifier; // @synthesize mailAutosaveIdentifier=_mailAutosaveIdentifier;
@property(nonatomic) _Bool allowsEmbedding; // @synthesize allowsEmbedding=_allowsEmbedding;
@property(copy, nonatomic) NSArray *activityTypeOrder; // @synthesize activityTypeOrder=_activityTypeOrder;
@property(nonatomic) long long excludedActivityCategories; // @synthesize excludedActivityCategories=_excludedActivityCategories;
@property(copy, nonatomic) NSArray *includedActivityTypes; // @synthesize includedActivityTypes=_includedActivityTypes;
@property(nonatomic) _Bool showKeyboardAutomatically; // @synthesize showKeyboardAutomatically=_showKeyboardAutomatically;
@property(nonatomic) _Bool useBlackPopoverStyle; // @synthesize useBlackPopoverStyle=_useBlackPopoverStyle;
@property(retain, nonatomic) UIActivity *activity; // @synthesize activity=_activity;
@property(copy, nonatomic) NSArray *excludedActivityTypes; // @synthesize excludedActivityTypes=_excludedActivityTypes;
@property(copy, nonatomic) CDUnknownBlockType completionWithItemsHandler; // @synthesize completionWithItemsHandler=_completionWithItemsHandler;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void)airDropActivityDidSuccessfullyCompleteTransfer;
- (void)airDropActivityDidSuccessfullyStartTransfer;
- (void)airDropActivityRequestingSharedItemsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)activityGroupViewController:(id)arg1 didSelectActivity:(id)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_cancel;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_setDarkStyleOnLegacyApp;
- (void)_setPopoverController:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_performActivity:(id)arg1;
- (void)_performActivityOfType:(id)arg1;
- (void)_prepareActivity:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_prepareActivity:(id)arg1;
- (id)_titleForActivity:(id)arg1;
- (void)_resetAfterActivity:(_Bool)arg1;
- (void)_executeActivity;
- (void)_removeFromActiveActivityViewControllers;
- (void)_addToActiveActivityViewControllers;
- (void)_mailAutosaveWithHandler:(CDUnknownBlockType)arg1;
- (void)_cleanupActivityWithSuccess:(_Bool)arg1;
- (void)_cleanupActivityWithSuccess:(_Bool)arg1 items:(id)arg2 error:(id)arg3;
@property(readonly, nonatomic) _Bool sourceIsManaged;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (double)_displayHeight;
- (id)_containedAlertController;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (_Bool)_requiresCustomPresentationController;
- (id)_newActivityGroupViewControllerForItems:(id)arg1 category:(long long)arg2;
- (void)viewDidLoad;
- (void)_updateActivities:(id)arg1 animated:(_Bool)arg2;
- (void)_updateActivityItems:(id)arg1 animated:(_Bool)arg2;
- (void)_updateActivityItems:(id)arg1;
- (id)_availableActivities;
- (id)_availableActivitiesForItems:(id)arg1 applicationExtensionActivities:(id)arg2;
- (id)_availableActivitiesForItems:(id)arg1;
- (_Bool)_shouldShowSystemActivity:(id)arg1;
- (id)_activityItemValues;
- (void)dealloc;
- (id)initWithActivityItems:(id)arg1 applicationActivities:(id)arg2;
- (void)_reloadImageForActivity:(id)arg1;
- (void)_notifyReloadImageForActivity:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPopoverBackgroundView : UIView <UIPopoverBackgroundViewMethods>
{
}

+ (_Bool)wantsDefaultContentAppearance;
+ (double)_contentViewCornerRadiusForArrowDirection:(unsigned long long)arg1;
+ (double)cornerRadius;
+ (struct UIEdgeInsets)contentViewInsets;
+ (double)arrowBase;
+ (double)arrowHeight;
- (long long)backgroundStyle;
- (void)layoutSubviews;
- (struct CGRect)_backgroundContentViewFrame;
- (struct CGRect)_contentViewFrame;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)_updateShadow;
- (id)_shadowPath;
- (struct CGSize)_shadowOffset;
- (double)_shadowRadius;
- (double)_shadowOpacity;
- (struct UIEdgeInsets)_shadowInsets;
- (id)_shadowPathForRect:(struct CGRect)arg1 arrowDirection:(unsigned long long)arg2;
- (_Bool)_wantsDefaultContentAppearance;
- (struct UIEdgeInsets)_contentViewInsetsForArrowDirection:(unsigned long long)arg1;
- (struct UIEdgeInsets)_contentViewInsets;
@property(nonatomic) unsigned long long arrowDirection;
@property(nonatomic) double arrowOffset;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverStandardChromeView : UIPopoverBackgroundView
{
    UIView *_arrowView;
    UIView *_leftCapView;
    UIView *_rightCapView;
    _UIBackdropView *_blurView;
    NSArray *_dimmingViews;
    UIColor *_popoverBackgroundColor;
    double _arrowOffset;
    unsigned long long _arrowDirection;
    long long _backgroundStyle;
    _Bool _arrowVisible;
    _Bool useShortMode;
    _Bool _debugMode;
    double _dimmingViewTopEdgeInset;
}

+ (struct UIEdgeInsets)contentViewInsets;
+ (double)arrowBase;
+ (double)arrowHeight;
@property(nonatomic) double dimmingViewTopEdgeInset; // @synthesize dimmingViewTopEdgeInset=_dimmingViewTopEdgeInset;
@property(nonatomic, getter=isDebugModeEnabled) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugMode;
@property(nonatomic) _Bool useShortMode; // @synthesize useShortMode;
- (void)setArrowVisible:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isArrowVisible) _Bool arrowVisible;
@property(copy, nonatomic) UIColor *popoverBackgroundColor;
- (void)setBackgroundStyle:(long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) long long backgroundStyle;
- (_Bool)isRightArrowPinnedToBottom;
- (_Bool)isRightArrowPinnedToTop;
- (double)maxNonPinnedOffset;
- (double)minNonPinnedOffset;
- (_Bool)wouldPinForOffset:(double)arg1;
- (_Bool)isPinned;
- (_Bool)hasComponentViews;
- (void)_loadNecessaryViews;
- (id)_shadowPath;
- (struct CGSize)_shadowOffset;
- (double)_shadowRadius;
- (double)_shadowOpacity;
- (struct UIEdgeInsets)_shadowInsets;
- (void)setArrowDirection:(unsigned long long)arg1;
- (unsigned long long)arrowDirection;
- (void)setArrowOffset:(double)arg1;
- (double)arrowOffset;
- (void)motionCancelled:(long long)arg1 withEvent:(id)arg2;
- (void)motionEnded:(long long)arg1 withEvent:(id)arg2;
- (void)motionBegan:(long long)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)_layoutArrowViewsNone;
- (void)_layoutArrowViewsLeftOrRight;
- (void)_layoutArrowViewsUpOrDown;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIActivityViewPopoverBackgroundView : _UIPopoverStandardChromeView
{
}

+ (struct UIEdgeInsets)contentViewInsets;
+ (void)useNormalContentViewInsets:(_Bool)arg1;
- (double)_shadowOpacity;

@end

@interface UIAddToReadingListActivity : UIActivity
{
}

- (void)_addToReadingList:(id)arg1 withTitle:(id)arg2;
- (void)performActivity;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;

@end

@interface UIAlertAction : NSObject <NSCopying>
{
    NSString *_title;
    _Bool _enabled;
    _Bool _checked;
    _Bool __isDefault;
    long long _style;
    CDUnknownBlockType _handler;
    CDUnknownBlockType _simpleHandler;
    UIImage *_image;
    CDUnknownBlockType _shouldDismissHandler;
    NSString *__descriptiveText;
    id <_UIAlertActionRepresenting> __representer;
    UIAlertController *__alertController;
}

+ (id)actionWithTitle:(id)arg1 style:(long long)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)_actionWithTitle:(id)arg1 image:(id)arg2 style:(long long)arg3 handler:(CDUnknownBlockType)arg4 shouldDismissHandler:(CDUnknownBlockType)arg5;
+ (id)_actionWithTitle:(id)arg1 descriptiveText:(id)arg2 image:(id)arg3 style:(long long)arg4 handler:(CDUnknownBlockType)arg5 shouldDismissHandler:(CDUnknownBlockType)arg6;
@property(nonatomic, setter=_setAlertController:) UIAlertController *_alertController; // @synthesize _alertController=__alertController;
@property(setter=_setIsDefault:) _Bool _isDefault; // @synthesize _isDefault=__isDefault;
@property(setter=_setRepresenter:) id <_UIAlertActionRepresenting> _representer; // @synthesize _representer=__representer;
@property(copy, nonatomic, setter=_setDescriptiveText:) NSString *_descriptiveText; // @synthesize _descriptiveText=__descriptiveText;
@property(copy, nonatomic) CDUnknownBlockType shouldDismissHandler; // @synthesize shouldDismissHandler=_shouldDismissHandler;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) CDUnknownBlockType simpleHandler; // @synthesize simpleHandler=_simpleHandler;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(nonatomic) long long style; // @synthesize style=_style;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (_Bool)_isChecked;
- (void)_setChecked:(_Bool)arg1;
@property(nonatomic, getter=isEnabled) _Bool enabled;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface UIControl : UIView
{
    NSMutableArray *_targetActions;
    struct CGPoint _previousPoint;
    double _downTime;
    struct {
        unsigned int disabled:1;
        unsigned int tracking:1;
        unsigned int touchInside:1;
        unsigned int touchDragged:1;
        unsigned int requiresDisplayOnTracking:1;
        unsigned int highlighted:1;
        unsigned int dontHighlightOnTouchDown:1;
        unsigned int delayActions:1;
        unsigned int allowActionsToQueue:1;
        unsigned int pendingUnhighlight:1;
        unsigned int selected:1;
        unsigned int verticalAlignment:2;
        unsigned int horizontalAlignment:2;
        unsigned int wasLastHighlightSuccessful:1;
        unsigned int touchHasHighlighted:1;
    } _controlFlags;
}

- (void)_sendDelayedActions:(_Bool)arg1;
- (void)_unhighlight;
- (void)setTracking:(_Bool)arg1;
- (void)removeTarget:(id)arg1 forEvents:(int)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forEvents:(int)arg3;
- (_Bool)hasOneOrMoreTargets;
- (_Bool)requiresDisplayOnTracking;
- (void)setRequiresDisplayOnTracking:(_Bool)arg1;
- (_Bool)touchDragged;
- (_Bool)shouldTrack;
- (_Bool)_touchHasHighlighted;
- (void)_setTouchHasHighlighted:(_Bool)arg1;
- (_Bool)_wasLastHighlightSuccessful;
- (void)_setLastHighlightSuccessful:(_Bool)arg1;
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_cancelDelayedActions;
- (void)_sendDelayedActions;
- (void)_delayActions;
- (void)_setHighlightOnMouseDown:(_Bool)arg1;
- (void)_sendActionsForEvents:(int)arg1 withEvent:(id)arg2;
- (_Bool)_hasActionForEventMask:(int)arg1;
- (double)_highlightCornerRadius;
- (struct CGRect)_clippedHighlightBounds;
- (_Bool)canBecomeFirstResponder;
- (void)sendActionsForControlEvents:(unsigned long long)arg1;
- (void)sendAction:(SEL)arg1 to:(id)arg2 forEvent:(id)arg3;
- (id)actionsForTarget:(id)arg1 forControlEvent:(unsigned long long)arg2;
- (unsigned long long)allControlEvents;
- (id)allTargets;
- (void)removeTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic, getter=isSelected) _Bool selected; // @dynamic selected;
@property(nonatomic) long long contentHorizontalAlignment; // @dynamic contentHorizontalAlignment;
@property(nonatomic) long long contentVerticalAlignment; // @dynamic contentVerticalAlignment;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @dynamic highlighted;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)cancelTouchTracking;
- (_Bool)cancelMouseTracking;
@property(readonly, nonatomic, getter=isTouchInside) _Bool touchInside; // @dynamic touchInside;
@property(readonly, nonatomic) unsigned long long state; // @dynamic state;
@property(readonly, nonatomic, getter=isTracking) _Bool tracking; // @dynamic tracking;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_connectInterfaceBuilderEventConnection:(id)arg1;

@end

@interface UIButton : UIControl <NSCoding>
{
    unsigned long long _externalFlatEdge;
    struct __CFDictionary *_contentLookup;
    struct UIEdgeInsets _contentEdgeInsets;
    struct UIEdgeInsets _titleEdgeInsets;
    struct UIEdgeInsets _imageEdgeInsets;
    UIImageView *_backgroundView;
    UIImageView *_imageView;
    UILabel *_titleView;
    _Bool _initialized;
    unsigned long long _lastDrawingControlState;
    UITapGestureRecognizer *_selectGestureRecognizer;
    struct {
        unsigned int reversesTitleShadowWhenHighlighted:1;
        unsigned int adjustsImageWhenHighlighted:1;
        unsigned int adjustsImageWhenDisabled:1;
        unsigned int autosizeToFit:1;
        unsigned int disabledDimsImage:1;
        unsigned int showsTouchWhenHighlighted:1;
        unsigned int buttonType:8;
        unsigned int shouldHandleScrollerMouseEvent:1;
        unsigned int titleFrozen:1;
    } _buttonFlags;
    _UIButtonMaskAnimationView *_maskAnimationView;
    UIView *_selectionView;
    UIFont *_lazyTitleViewFont;
    NSArray *_contentConstraints;
    struct UIEdgeInsets _internalTitlePaddingInsets;
}

+ (id)_defaultImageColorForState:(unsigned long long)arg1 button:(id)arg2;
+ (id)_defaultTitleColorForState:(unsigned long long)arg1 button:(id)arg2;
+ (id)_defaultBackgroundImageForType:(long long)arg1 andState:(unsigned long long)arg2;
+ (id)_defaultImageForType:(long long)arg1 andState:(unsigned long long)arg2;
+ (id)_xImage;
+ (id)_minusImage;
+ (id)_checkmarkImage;
+ (id)_questionMarkImage;
+ (id)_exclamationMarkImage;
+ (id)_plusImage;
+ (id)_infoDarkImage;
+ (id)_infoLightImage;
+ (id)_detailDisclosureImage;
+ (id)_selectedIndicatorImage;
+ (void)_setVisuallyHighlighted:(_Bool)arg1 forViews:(id)arg2 initialPress:(_Bool)arg3;
+ (void)_setVisuallyHighlighted:(_Bool)arg1 forViews:(id)arg2 initialPress:(_Bool)arg3 baseAlpha:(double)arg4;
+ (id)_defaultNormalTitleShadowColor;
+ (id)_defaultNormalTitleColor;
+ (id)buttonWithType:(long long)arg1;
@property(nonatomic, setter=_setInternalTitlePaddingInsets:) struct UIEdgeInsets _internalTitlePaddingInsets; // @synthesize _internalTitlePaddingInsets;
@property(copy, nonatomic, setter=_setContentConstraints:) NSArray *_contentConstraints; // @synthesize _contentConstraints;
- (id)_letterpressStyleForState:(unsigned long long)arg1;
- (id)_attributedTitleForState:(unsigned long long)arg1;
- (id)_shadowColorForState:(unsigned long long)arg1;
- (id)_imageColorForState:(unsigned long long)arg1;
- (id)_titleColorForState:(unsigned long long)arg1;
- (id)_titleForState:(unsigned long long)arg1;
- (id)_backgroundForState:(unsigned long long)arg1 usesBackgroundForNormalState:(_Bool *)arg2;
- (id)_imageForState:(unsigned long long)arg1 usesImageForNormalState:(_Bool *)arg2;
- (void)_takeContentFromArchivableContent:(id)arg1;
- (id)_archivableContent:(id *)arg1;
- (id)_contentForState:(unsigned long long)arg1;
- (void)_setAttributedTitle:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setShadowColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setImageColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setTitleColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setTitle:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setBackground:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setContent:(id)arg1 forState:(unsigned long long)arg2;
- (void)_updateEffectsForImageView:(id)arg1 background:(_Bool)arg2;
- (_Bool)_shouldDefaultToTemplatesForImageViewBackground:(_Bool)arg1;
- (double)_drawingStrokeForState:(unsigned long long)arg1;
- (void)_setDrawingStroke:(double)arg1 forState:(unsigned long long)arg2;
- (long long)_drawingStyleForState:(unsigned long long)arg1;
- (void)_setDrawingStyle:(long long)arg1 forState:(unsigned long long)arg2;
- (long long)_drawingStyleForStroke:(double)arg1;
- (double)_drawingStrokeForStyle:(long long)arg1;
- (struct CGRect)_highlightBounds;
- (id)image;
- (void)setTitle:(id)arg1;
- (id)title;
- (id)_titleView;
- (id)_imageView;
- (id)_backgroundView;
- (void)_setTitleShadowOffset:(struct CGSize)arg1;
- (struct CGSize)_titleShadowOffset;
- (void)_setLineBreakMode:(long long)arg1;
- (long long)_lineBreakMode;
- (void)_setFont:(id)arg1;
- (id)_font;
- (void)_setLetterpressStyle:(id)arg1 forState:(unsigned long long)arg2;
- (void)crossfadeToImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setBackgroundImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)setImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)setTitleShadowColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)setTitleColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)setTitle:(id)arg1 forStates:(unsigned long long)arg2;
- (struct CGPoint)pressFeedbackPosition;
- (void)setShowPressFeedback:(_Bool)arg1;
- (void)setDisabledDimsImage:(_Bool)arg1;
- (_Bool)autosizesToFit;
- (void)setAutosizesToFit:(_Bool)arg1;
- (void)_setShouldHandleScrollerMouseEvent:(_Bool)arg1;
- (_Bool)_alwaysHandleScrollerMouseEvent;
- (void)_titleAttributesChanged;
- (long long)_buttonType;
- (void)_setButtonType:(long long)arg1;
- (void)_setupTitleView;
- (void)_setupTitleViewRequestingLayout:(_Bool)arg1;
- (id)_newLabelWithFrame:(struct CGRect)arg1;
- (void)_setupImageView;
- (id)_createPreparedImageViewWithFrame:(struct CGRect)arg1;
- (id)_setupBackgroundView;
- (id)_newImageViewWithFrame:(struct CGRect)arg1;
- (void)setTitleShadowOffset:(struct CGSize)arg1;
- (struct CGSize)titleShadowOffset;
- (void)setLineBreakMode:(long long)arg1;
- (long long)lineBreakMode;
- (void)setFont:(id)arg1;
- (id)font;
- (void)layoutSubviews;
- (void)_layoutTitleView;
- (void)_updateTitleView;
- (void)_layoutImageView;
- (void)_updateImageView;
- (void)_layoutBackgroundImageView;
- (void)_updateBackgroundImageView;
- (_Bool)_shouldUpdatePressedness;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (id)viewForBaselineLayout;
- (void)updateConstraints;
- (id)_titleOrImageViewForBaselineLayout;
- (void)_setContentHuggingPriorities:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)_titleRectForContentRect:(struct CGRect)arg1 calculatePositionForEmptyTitle:(_Bool)arg2;
- (struct CGRect)contentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)backgroundRectForBounds:(struct CGRect)arg1;
@property(readonly, retain, nonatomic) NSAttributedString *currentAttributedTitle;
@property(readonly, retain, nonatomic) UIImage *currentBackgroundImage;
@property(readonly, retain, nonatomic) UIImage *currentImage;
@property(readonly, retain, nonatomic) UIColor *currentTitleShadowColor;
@property(readonly, retain, nonatomic) UIColor *_currentImageColor;
@property(readonly, retain, nonatomic) UIColor *currentTitleColor;
@property(readonly, retain, nonatomic) NSString *currentTitle;
- (id)attributedTitleForState:(unsigned long long)arg1;
- (id)backgroundImageForState:(unsigned long long)arg1;
- (id)imageForState:(unsigned long long)arg1;
- (id)titleShadowColorForState:(unsigned long long)arg1;
- (id)titleColorForState:(unsigned long long)arg1;
- (id)titleForState:(unsigned long long)arg1;
- (void)setAttributedTitle:(id)arg1 forState:(unsigned long long)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setTitleShadowColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)_setImageColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setTitleColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setTitle:(id)arg1 forState:(unsigned long long)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (struct CGRect)_clippedHighlightBounds;
- (struct CGRect)_highlightRectForImageRect:(struct CGRect)arg1;
- (struct CGRect)_highlightRectForTextRect:(struct CGRect)arg1;
- (void)_setTitleFrozen:(_Bool)arg1;
- (_Bool)_isTitleFrozen;
- (void)_beginTitleAnimation;
- (void)_sendSetNeedsLayoutToSuperviewOnTitleAnimationCompletionIfNecessary;
- (_Bool)_hasDrawingStyle;
- (double)_borderWidthForState:(unsigned long long)arg1 bounds:(struct CGRect)arg2;
- (id)_borderColorForState:(unsigned long long)arg1;
- (id)_fadeOutAnimationWithKeyPath:(id)arg1;
- (id)_transitionAnimationWithKeyPath:(id)arg1;
@property(setter=_setExternalFlatEdge:) unsigned long long _externalFlatEdge;
- (id)_externalImageColorForState:(unsigned long long)arg1;
- (id)_externalBorderColorForState:(unsigned long long)arg1;
- (id)_externalTitleColorForState:(unsigned long long)arg1;
- (long long)_externalDrawingStyleForState:(unsigned long long)arg1;
- (void)_willMoveToWindow:(id)arg1;
- (void)_setupDrawingStyleForState:(unsigned long long)arg1;
- (struct CGRect)_highlightBoundsForDrawingStyle;
- (void)_prepareMaskAnimationViewIfNecessary;
- (struct CGRect)_selectedIndicatorBounds;
- (id)_selectedIndicatorViewWithImage:(id)arg1;
- (double)_selectedIndicatorAlpha;
- (void)_updateSelectionViewForState:(unsigned long long)arg1;
- (_Bool)_imageNeedsCompositingModeWhenSelected;
- (_Bool)_textNeedsCompositingModeWhenSelected;
- (void)_setupPressednessForState:(unsigned long long)arg1;
- (void)_updateMaskState;
- (_Bool)_hasHighlightColor;
- (double)_highlightCornerRadius;
- (struct UIEdgeInsets)_outsetInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)_pathImageEdgeInsets;
- (struct UIEdgeInsets)_pathTitleEdgeInsets;
- (void)tintColorDidChange;
- (void)_selectGestureChanged:(id)arg1;
- (void)_uninstallSelectGestureRecognizer;
- (void)_installSelectGestureRecognizer;
- (void)_focusStateDidChange;
- (_Bool)_isFocusableElement;
- (_Bool)_isExternalRoundedRectButtonWithPressednessState;
- (_Bool)_isExternalRoundedRectButton;
- (_Bool)_isModernButton;
- (void)setContentVerticalAlignment:(long long)arg1;
- (void)setContentHorizontalAlignment:(long long)arg1;
@property(readonly, retain, nonatomic) UIImageView *imageView;
@property(readonly, retain, nonatomic) UILabel *titleLabel;
- (_Bool)_likelyToHaveTitle;
- (_Bool)_canHaveTitle;
@property(nonatomic) struct UIEdgeInsets imageEdgeInsets; // @dynamic imageEdgeInsets;
@property(nonatomic) _Bool showsTouchWhenHighlighted;
@property(nonatomic) _Bool adjustsImageWhenDisabled; // @dynamic adjustsImageWhenDisabled;
@property(nonatomic) _Bool adjustsImageWhenHighlighted; // @dynamic adjustsImageWhenHighlighted;
@property(nonatomic) _Bool reversesTitleShadowWhenHighlighted; // @dynamic reversesTitleShadowWhenHighlighted;
@property(nonatomic) struct UIEdgeInsets titleEdgeInsets; // @dynamic titleEdgeInsets;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @dynamic contentEdgeInsets;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_applyAppropriateChargeForButtonType;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_setFrame:(struct CGRect)arg1 deferLayout:(_Bool)arg2;
@property(readonly, nonatomic) long long buttonType;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)invalidateIntrinsicContentSize;
- (void)_invalidateContentConstraints;
- (struct UIEdgeInsets)_combinedContentPaddingInsets;
- (id)_layoutDebuggingTitle;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (id)_scriptingInfo;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (unsigned long long)defaultAccessibilityTraits;
- (_Bool)isAccessibilityElementByDefault;

@end

__attribute__((visibility("hidden")))
@interface UIAlertButton : UIButton
{
    double _imageOffset;
    _Bool _isNewStyle;
    UIImageView *_highlightView;
}

@property(readonly) UIImageView *highlightView; // @synthesize highlightView=_highlightView;
@property(nonatomic) _Bool isNewStyle; // @synthesize isNewStyle=_isNewStyle;
@property(nonatomic) double imageOffset; // @synthesize imageOffset=_imageOffset;
- (void)dealloc;
- (void)setEnabled:(_Bool)arg1;
- (void)_focusStateDidChange;
- (_Bool)_isFocusableElement;
- (void)_transitionHighlightViewToHighlighted:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (id)image;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setTitle:(id)arg1;
- (id)title;
@property(retain, nonatomic) UIImage *highlightImage;
- (id)initWithTitle:(id)arg1;

@end

@interface UIAlertController : UIViewController <UIAlertControllerContaining, _UIAlertControllerTextFieldViewControllerContaining, UIAlertControllerVisualStyleProviding>
{
    NSString *_message;
    NSAttributedString *_attributedTitle;
    NSAttributedString *_attributedMessage;
    NSMutableArray *_actions;
    NSSet *_linkedAlertControllers;
    UIAlertAction *_cancelAction;
    long long _resolvedStyle;
    long long _preferredStyle;
    NSObject<UIAlertControllerVisualStyleProviding> *_styleProvider;
    UIViewController *_contentViewController;
    _UIAlertControllerTextFieldViewController *_textFieldViewController;
    _Bool _textFieldsHidden;
    UIGestureRecognizer *_backButtonDismissGestureRecognizer;
    id _ownedTransitioningDelegate;
    _Bool _shouldEnsureContentControllerViewIsVisibleOnAppearance;
    _Bool __shouldAllowNilParameters;
    _Bool __shouldFlipFrameForShimDismissal;
    UIAlertAction *__defaultAlertAction;
    UIPopoverController *__compatibilityPopoverController;
}

+ (_Bool)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (id)_alertControllerWithTitle:(id)arg1 message:(id)arg2;
+ (id)alertControllerWithTitle:(id)arg1 message:(id)arg2 preferredStyle:(long long)arg3;
+ (void)_setShouldUsePresentationController:(_Bool)arg1;
+ (_Bool)_shouldUsePresentationController;
@property _Bool _shouldFlipFrameForShimDismissal; // @synthesize _shouldFlipFrameForShimDismissal=__shouldFlipFrameForShimDismissal;
@property(nonatomic, setter=_setCompatibilityPopoverController:) UIPopoverController *_compatibilityPopoverController; // @synthesize _compatibilityPopoverController=__compatibilityPopoverController;
@property(setter=_setShouldAllowNilParameters:) _Bool _shouldAllowNilParameters; // @synthesize _shouldAllowNilParameters=__shouldAllowNilParameters;
@property(setter=_setDefaultAlertAction:) UIAlertAction *_defaultAlertAction; // @synthesize _defaultAlertAction=__defaultAlertAction;
@property(readonly) long long _resolvedStyle; // @synthesize _resolvedStyle;
@property(nonatomic, setter=_setShouldEnsureContentControllerViewIsVisibleOnAppearance:) _Bool _shouldEnsureContentControllerViewIsVisibleOnAppearance; // @synthesize _shouldEnsureContentControllerViewIsVisibleOnAppearance;
@property(readonly) UIAlertAction *_cancelAction; // @synthesize _cancelAction;
@property(readonly) NSMutableArray *_actions; // @synthesize _actions;
- (void)viewDidDisappear;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_removeAllTextFields;
- (id)_textFieldViewController;
- (_Bool)_hasContentToDisplay;
- (id)_containedAlertController;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
@property(retain, nonatomic) UIViewController *contentViewController;
- (double)_contentVerticalInsets;
@property(readonly) UIView *_dimmingView;
@property(readonly) UIView *_foregroundView;
- (id)cancelAction;
- (void)setCancelAction:(id)arg1;
@property(copy, nonatomic, getter=_attributedMessage, setter=_setAttributedMessage:) NSAttributedString *attributedMessage;
@property(copy, nonatomic, getter=_attributedTitle, setter=_setAttributedTitle:) NSAttributedString *attributedTitle;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *title;
- (_Bool)_shouldFitWidthToContentViewControllerWidth;
- (_Bool)_shouldSizeToFillSuperview;
- (id)_alertControllerContainer;
- (_Bool)_viewControllerIsPresentedInPopover:(id)arg1;
- (_Bool)_isPresentedAsPopover;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)_flipFrameForShimDismissalIfNecessary;
- (void)_updateViewFrameForLandscapePresentationInShimIfNecessary;
- (long long)_modalPresentationStyleForResolvedStyle;
- (void)setModalPresentationStyle:(long long)arg1;
- (void)_updateModalPresentationStyle;
- (_Bool)_requiresCustomPresentationController;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)linkedAlertControllers;
- (void)unlinkAlertController:(id)arg1;
- (void)linkAlertController:(id)arg1;
- (void)_dismissAnimated:(_Bool)arg1 triggeringAction:(id)arg2 triggeredByPopoverDimmingView:(_Bool)arg3;
- (void)_dismissAnimated:(_Bool)arg1 triggeringAction:(id)arg2;
- (void)_dismissFromPopoverDimmingView;
- (void)_dismissFromBackButton:(id)arg1;
- (void)_attemptAnimatedDismissWithGestureRecognizer:(id)arg1;
- (_Bool)_canDismissWithGestureRecognizer;
- (id)_dismissGestureRecognizer;
- (void)_clearActionHandlers;
- (void)_fireOffActionOnTargetIfValidForAction:(id)arg1;
- (_Bool)_shouldDismissAction:(id)arg1;
- (void)_actionViewTapped:(id)arg1;
- (void)_actionViewHighlightChanged:(id)arg1;
- (id)visualStyleForAlertControllerStyle:(long long)arg1 traitCollection:(id)arg2 descriptor:(id)arg3;
@property(retain, nonatomic, getter=_styleProvider, setter=_setStyleProvider:) NSObject<UIAlertControllerVisualStyleProviding> *styleProvider;
@property(readonly) _Bool _shouldProvideDimmingView;
@property(nonatomic) long long preferredStyle;
- (void)_uninstallBackGestureRecognizer;
- (void)_installBackGestureRecognizer;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_resolvedStyleChanged;
- (id)_currentDescriptor;
- (void)_updateProvidedStyle;
- (void)_reevaluateResolvedStyle;
- (id)_requiredNotificationsForRemoteServices;
- (void)viewDidLayoutSubviews;
- (void)_recomputePreferredContentSize;
- (id)_alertControllerView;
- (void)viewDidLoad;
@property(readonly) _Bool _shouldAlignToKeyboard;
- (void)_updateShouldAlignToKeyboard;
- (void)loadView;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)dealloc;
- (void)setTextFieldsCanBecomeFirstResponder:(_Bool)arg1;
@property(setter=_setTextFieldsHidden:) _Bool _textFieldsHidden;
- (void)_returnKeyPressedInLastTextField;
@property(readonly, nonatomic) NSArray *textFields;
- (void)addTextFieldWithConfigurationHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *actions;
- (void)_actionChanged:(id)arg1;
- (void)_addActionWithTitle:(id)arg1 image:(id)arg2 style:(long long)arg3 handler:(CDUnknownBlockType)arg4;
- (void)_addActionWithTitle:(id)arg1 style:(long long)arg2 handler:(CDUnknownBlockType)arg3 shouldDismissHandler:(CDUnknownBlockType)arg4;
- (void)_addActionWithTitle:(id)arg1 style:(long long)arg2 handler:(CDUnknownBlockType)arg3;
- (void)addAction:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerDescriptor : NSObject
{
    _Bool _hasTitle;
    _Bool _hasMessage;
}

@property _Bool hasMessage; // @synthesize hasMessage=_hasMessage;
@property _Bool hasTitle; // @synthesize hasTitle=_hasTitle;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerStackManager : NSObject
{
    NSMutableArray *_alertControllerStack;
    NSMutableArray *_hiddenAlertControllers;
}

+ (id)sharedStackManager;
- (long long)_alertControllerStackCount;
- (_Bool)_alertControllerShouldBeTrackedInStack:(id)arg1;
- (void)_setHasAlertControllers:(_Bool)arg1;
- (void)_displayedAlertControllersChanged;
- (void)_didHideAlertController:(id)arg1;
- (void)_willHideAlertController:(id)arg1;
- (void)_willShowAlertController:(id)arg1;
- (id)_topAlertControllerInStack;
- (void)_removeAlertControllerFromStack:(id)arg1;
- (void)_addAlertControllerToStack:(id)arg1;
- (void)_showHiddenStackedAlertControllers;
- (void)_hideStackedAlertControllers;
- (void)_alertControllerDidDisappear:(id)arg1;
- (void)_alertControllerWillDisappear:(id)arg1;
- (void)_alertControllerDidAppear:(id)arg1;
- (void)_alertControllerWillAppear:(id)arg1;
- (void)dealloc;
- (id)autorelease;
- (void)release;
- (id)retain;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerVisualStyle : NSObject
{
}

- (double)_scaledMarginBelowLastLabelLastBaseline;
- (double)_scaledMarginBelowMessageLabelLastBaseline;
- (double)_scaledMarginAboveMessageLabelFirstBaseline;
- (double)_scaledMarginBelowTitleLabelLastBaseline;
- (double)_scaledMarginAboveTitleLabelFirstBaseline;
- (double)minimumActionHeight;
- (id)defaultActionBackgroundColorWhenSeparate;
- (id)actionHighlightedBackgroundView;
- (id)highlightedActionContentColor;
- (id)defaultActionFont;
- (id)regularActionFont;
- (id)backgroundView;
- (double)visualAltitude;
- (double)backgroundCornerRadius;
- (double)verticalContentMargin;
- (double)horizontalContentMargin;
- (double)maximumWidth;
- (double)marginBelowLastLabelLastBaseline;
- (long long)maximumNumberOfLinesInMessageLabel;
- (double)marginBelowMessageLabelLastBaseline;
- (double)marginAboveMessageLabelFirstBaseline;
- (id)messageLabelColor;
- (id)messageLabelFont;
- (long long)maximumNumberOfLinesInTitleLabel;
- (double)marginBelowTitleLabelLastBaseline;
- (double)marginAboveTitleLabelFirstBaseline;
- (id)titleLabelColor;
- (id)titleLabelFont;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerVisualStyleActionSheet : UIAlertControllerVisualStyle
{
    UIAlertControllerDescriptor *_descriptor;
}

@property(retain, nonatomic) UIAlertControllerDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (void)dealloc;
- (double)minimumActionHeight;
- (id)defaultActionBackgroundColorWhenSeparate;
- (id)defaultActionFont;
- (id)regularActionFont;
- (double)_systemFontSize;
- (double)visualAltitude;
- (double)backgroundCornerRadius;
- (double)verticalContentMargin;
- (double)horizontalContentMargin;
- (double)maximumWidth;
- (double)marginBelowLastLabelLastBaseline;
- (double)marginBelowMessageLabelLastBaseline;
- (double)marginAboveMessageLabelFirstBaseline;
- (id)messageLabelColor;
- (id)messageLabelFont;
- (double)marginBelowTitleLabelLastBaseline;
- (double)marginAboveTitleLabelFirstBaseline;
- (id)titleLabelColor;
- (id)titleLabelFont;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerVisualStyleActionSheetCar : UIAlertControllerVisualStyleActionSheet
{
}

- (double)minimumActionHeight;
- (id)defaultActionBackgroundColorWhenSeparate;
- (id)highlightedActionContentColor;
- (id)actionHighlightedBackgroundView;
- (id)defaultActionFont;
- (id)regularActionFont;
- (id)backgroundView;
- (double)visualAltitude;
- (double)verticalContentMargin;
- (double)horizontalContentMargin;
- (long long)maximumNumberOfLinesInMessageLabel;
- (id)messageLabelColor;
- (id)messageLabelFont;
- (long long)maximumNumberOfLinesInTitleLabel;
- (id)titleLabelColor;
- (id)titleLabelFont;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerVisualStyleAlert : UIAlertControllerVisualStyle
{
    UIAlertControllerDescriptor *_descriptor;
}

@property(retain, nonatomic) UIAlertControllerDescriptor *descriptor; // @synthesize descriptor=_descriptor;
- (void)dealloc;
- (double)minimumActionHeight;
- (id)defaultActionFont;
- (id)regularActionFont;
- (double)visualAltitude;
- (double)backgroundCornerRadius;
- (double)verticalContentMargin;
- (double)horizontalContentMargin;
- (double)maximumWidth;
- (double)marginBelowLastLabelLastBaseline;
- (double)marginBelowMessageLabelLastBaseline;
- (double)marginAboveMessageLabelFirstBaseline;
- (id)messageLabelColor;
- (id)messageLabelFont;
- (double)marginBelowTitleLabelLastBaseline;
- (double)marginAboveTitleLabelFirstBaseline;
- (id)titleLabelColor;
- (id)titleLabelFont;

@end

__attribute__((visibility("hidden")))
@interface UIAlertControllerVisualStyleAlertCar : UIAlertControllerVisualStyleAlert
{
}

- (double)minimumActionHeight;
- (id)highlightedActionContentColor;
- (id)actionHighlightedBackgroundView;
- (id)defaultActionFont;
- (id)regularActionFont;
- (id)backgroundView;
- (double)visualAltitude;
- (double)verticalContentMargin;
- (double)horizontalContentMargin;
- (double)maximumWidth;
- (long long)maximumNumberOfLinesInMessageLabel;
- (id)messageLabelColor;
- (id)messageLabelFont;
- (long long)maximumNumberOfLinesInTitleLabel;
- (id)titleLabelColor;
- (id)titleLabelFont;

@end

__attribute__((visibility("hidden")))
@interface UIAlertLabeledButton : UIAlertButton
{
    UILabel *_typeLabel;
    double _titleOffset;
}

@property(nonatomic) double titleOffset; // @synthesize titleOffset=_titleOffset;
- (void)dealloc;
- (void)layoutSubviews;
@property(readonly, nonatomic) UILabel *typeLabel;

@end

__attribute__((visibility("hidden")))
@interface UIAlertMediaButton : UIAlertButton
{
    UIImageView *_checkmarkView;
    UIImage *_tableIcon;
    UIImage *_highlightedTableIcon;
}

@property(retain, nonatomic) UIImage *highlightedTableIcon; // @synthesize highlightedTableIcon=_highlightedTableIcon;
@property(retain, nonatomic) UIImage *tableIcon; // @synthesize tableIcon=_tableIcon;
- (void)dealloc;
- (void)layoutSubviews;
@property(readonly, nonatomic) UIImageView *checkmarkView;

@end

@interface UITextField : UIControl <UIKeyboardInput, _UILayoutBaselineUpdating, UITextInputTraits_Private, UIPopoverControllerDelegate, UITextInput, NSCoding>
{
    _UICascadingTextStorage *_textStorage;
    long long _borderStyle;
    double _minimumFontSize;
    id _delegate;
    UIImage *_background;
    UIImage *_disabledBackground;
    long long _clearButtonMode;
    UIView *_leftView;
    long long _leftViewMode;
    UIView *_rightView;
    long long _rightViewMode;
    UITextInputTraits *_traits;
    UITextInputTraits *_nonAtomTraits;
    double _fullFontSize;
    struct UIEdgeInsets _padding;
    struct _NSRange _selectionRangeWhenNotEditing;
    int _scrollXOffset;
    int _scrollYOffset;
    float _progress;
    UIButton *_clearButton;
    struct CGSize _clearButtonOffset;
    struct CGSize _leftViewOffset;
    struct CGSize _rightViewOffset;
    UITextFieldBorderView *_backgroundView;
    UITextFieldBorderView *_disabledBackgroundView;
    UITextFieldBackgroundView *_systemBackgroundView;
    UITextFieldLabel *_displayLabel;
    UITextFieldLabel *_placeholderLabel;
    UITextFieldLabel *_suffixLabel;
    UITextFieldLabel *_prefixLabel;
    UIImageView *_iconView;
    UILabel *_label;
    double _labelOffset;
    UITextInteractionAssistant *_interactionAssistant;
    UIView *_inputView;
    UIView *_inputAccessoryView;
    UITextFieldAtomBackgroundView *_atomBackgroundView;
    struct {
        unsigned int verticallyCenterText:1;
        unsigned int isAnimating:4;
        unsigned int inactiveHasDimAppearance:1;
        unsigned int becomesFirstResponderOnClearButtonTap:1;
        unsigned int clearsPlaceholderOnBeginEditing:1;
        unsigned int adjustsFontSizeToFitWidth:1;
        unsigned int fieldEditorAttached:1;
        unsigned int canBecomeFirstResponder:1;
        unsigned int shouldSuppressShouldBeginEditing:1;
        unsigned int inResignFirstResponder:1;
        unsigned int undoDisabled:1;
        unsigned int explicitAlignment:1;
        unsigned int implementsCustomDrawing:1;
        unsigned int needsClearing:1;
        unsigned int suppressContentChangedNotification:1;
        unsigned int allowsEditingTextAttributes:1;
        unsigned int usesAttributedText:1;
        unsigned int backgroundViewState:2;
        unsigned int clearingBehavior:2;
    } _textFieldFlags;
    _Bool _deferringBecomeFirstResponder;
    _Bool _avoidBecomeFirstResponder;
    _Bool _setSelectionRangeAfterFieldEditorIsAttached;
    NSLayoutConstraint *_baselineLayoutConstraint;
    _UIBaselineLayoutStrut *_baselineLayoutLabel;
}

+ (_Bool)_isDisplayingShortcutViewController;
+ (_Bool)_isCompatibilityTextField;
@property(retain) UIView *inputView; // @synthesize inputView=_inputView;
@property(nonatomic) long long rightViewMode; // @synthesize rightViewMode=_rightViewMode;
@property(retain, nonatomic) UIView *rightView; // @synthesize rightView=_rightView;
@property(nonatomic) long long leftViewMode; // @synthesize leftViewMode=_leftViewMode;
@property(retain, nonatomic) UIView *leftView; // @synthesize leftView=_leftView;
@property(nonatomic) long long clearButtonMode; // @synthesize clearButtonMode=_clearButtonMode;
@property(retain, nonatomic) UIImage *disabledBackground; // @synthesize disabledBackground=_disabledBackground;
@property(retain, nonatomic) UIImage *background; // @synthesize background=_background;
@property(nonatomic) id <UITextFieldDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double minimumFontSize; // @synthesize minimumFontSize=_minimumFontSize;
@property(nonatomic) long long borderStyle; // @synthesize borderStyle=_borderStyle;
@property(retain, nonatomic, setter=_setBaselineLayoutLabel:) _UIBaselineLayoutStrut *_baselineLayoutLabel; // @synthesize _baselineLayoutLabel;
@property(retain, nonatomic, setter=_setBaselineLayoutConstraint:) NSLayoutConstraint *_baselineLayoutConstraint; // @synthesize _baselineLayoutConstraint;
- (void)willMoveToWindow:(id)arg1;
- (void)_createInteractionAssistant;
- (id)_backgroundView;
- (id)_systemBackgroundView;
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (id)metadataDictionariesForDictationResults;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)_textInputViewForAddingGestureRecognizers;
@property(readonly, nonatomic) UIView *textInputView;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (id)_inputController;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)_inPopover;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)replace:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)_addShortcut:(id)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)_setBackgroundStrokeWidth:(double)arg1;
- (void)_setBackgroundFillColor:(id)arg1;
- (void)_setBackgroundStrokeColor:(id)arg1;
- (void)_selectionMayChange:(id)arg1;
- (_Bool)_isDisplayingReferenceLibraryViewController;
- (void)_define:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (id)_proxyTextInput;
- (void)layoutTilesNow;
- (id)webView;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;
- (unsigned long long)offsetInMarkedTextForSelection:(id)arg1;
- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;
- (id)selectedAttributedText;
- (id)selectedText;
- (struct CGRect)_selectionClipRect;
- (id)interactionAssistant;
- (id)selectionView;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (_Bool)hasSelection;
- (id)_fieldEditor;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (_Bool)_useGesturesForEditableContent;
- (_Bool)isEditable;
- (struct CGPoint)_originForTextFieldLabel:(id)arg1;
- (id)undoManager;
- (int)atomStyle;
- (void)setAtomStyle:(int)arg1;
- (_Bool)drawsAsAtom;
- (void)setDrawsAsAtom:(_Bool)arg1;
- (void)setClearButtonOffset:(struct CGSize)arg1;
- (void)_clearButtonClicked:(id)arg1;
- (_Bool)isUndoEnabled;
- (void)setUndoEnabled:(_Bool)arg1;
- (void)setTextCentersVertically:(_Bool)arg1;
- (void)setTextCentersHorizontally:(_Bool)arg1;
- (void)setLabel:(id)arg1;
- (id)textLabel;
- (void)setLabelOffset:(float)arg1;
- (_Bool)hasMarkedText;
- (void)setProgress:(float)arg1;
- (struct CGRect)iconRect;
- (void)setBecomesFirstResponderOnClearButtonTap:(_Bool)arg1;
- (struct CGSize)clearButtonOffset;
- (void)setIcon:(id)arg1;
- (unsigned long long)characterOffsetAtPoint:(struct CGPoint)arg1;
- (void)setSelectionRange:(struct _NSRange)arg1;
- (struct _NSRange)selectionRange;
- (void)clearText;
- (void)_resetSelectionUI;
- (void)_clearSelectionUI;
- (void)selectAll;
- (void)setEnabled:(_Bool)arg1;
- (void)_setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setInactiveHasDimAppearance:(_Bool)arg1;
- (float)paddingRight;
- (void)setPaddingRight:(float)arg1;
- (float)paddingBottom;
- (void)setPaddingBottom:(float)arg1;
- (float)paddingTop;
- (void)setPaddingTop:(float)arg1;
- (float)paddingLeft;
- (void)setPaddingLeft:(float)arg1;
- (void)setPaddingTop:(float)arg1 paddingLeft:(float)arg2;
- (void)drawBorder:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)_canDrawContent;
- (_Bool)_implementsCustomDrawing;
- (struct CGRect)editRect;
- (struct CGRect)textRect;
- (struct CGRect)clearButtonRect;
- (void)setClearButtonStyle:(int)arg1;
- (void)setTextAutorresizesToFit:(_Bool)arg1;
- (void)setAutoresizesTextToFit:(_Bool)arg1;
- (id)documentFragmentForPasteboardItemAtIndex:(long long)arg1;
- (id)_dictationInterpretations;
- (id)supportedPasteboardTypesForCurrentSelection;
- (_Bool)fieldEditor:(id)arg1 shouldInsertText:(id)arg2 replacingRange:(struct _NSRange)arg3;
- (void)fieldEditorDidChangeSelection:(id)arg1;
- (struct _NSRange)fieldEditor:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)selectAllFromFieldEditor:(id)arg1;
- (void)fieldEditorDidChange:(id)arg1;
- (id)customOverlayContainer;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (_Bool)keyboardInputShouldDelete:(id)arg1;
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;
- (void)_applicationResuming:(id)arg1;
- (void)willDetachFieldEditor:(id)arg1;
- (void)attachFieldEditor:(id)arg1;
- (void)willAttachFieldEditor:(id)arg1;
- (void)_drawTextInRect:(struct CGRect)arg1 forLabel:(id)arg2;
- (void)drawPrefixInRect:(struct CGRect)arg1;
- (void)drawSuffixInRect:(struct CGRect)arg1;
- (void)drawPlaceholderInRect:(struct CGRect)arg1;
- (void)drawTextInRect:(struct CGRect)arg1;
- (struct CGRect)rightViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)leftViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_baselineLeftViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)clearButtonRectForBounds:(struct CGRect)arg1;
- (struct CGSize)_clearButtonSize;
- (struct CGRect)_frameForLabel:(id)arg1 inTextRect:(struct CGRect)arg2;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)placeholderRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)borderRectForBounds:(struct CGRect)arg1;
- (_Bool)_hasSuffixField;
@property(retain) UIView *inputAccessoryView;
@property(readonly, nonatomic, getter=isEditing) _Bool editing;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
@property(copy, nonatomic) NSDictionary *typingAttributes;
@property(nonatomic) _Bool allowsEditingTextAttributes;
@property(nonatomic) _Bool adjustsFontSizeToFitWidth;
- (void)setClearsPlaceholderOnBeginEditing:(_Bool)arg1;
- (_Bool)clearsPlaceholderOnBeginEditing;
@property(nonatomic) _Bool clearsOnBeginEditing;
- (void)_setPrefix:(id)arg1;
- (void)_updateSuffix:(id)arg1;
- (void)_setSuffix:(id)arg1 withColor:(id)arg2;
- (long long)_suffixLabelTextAlignment;
@property(copy, nonatomic) NSAttributedString *attributedPlaceholder;
@property(copy, nonatomic) NSString *placeholder;
- (void)createPlaceholderIfNecessary;
- (void)finishedSettingPlaceholder;
- (id)createTextLabelWithTextColor:(id)arg1;
- (void)_switchToLayoutEngine:(id)arg1;
- (void)_createBaselineLayoutLabelIfNecessary;
- (id)createPlaceholderLabelWithFont:(id)arg1 andTextAlignment:(long long)arg2;
- (Class)_placeholderLabelClass;
- (void)setContentVerticalAlignment:(long long)arg1;
@property(copy, nonatomic) NSDictionary *defaultTextAttributes;
@property(nonatomic) long long textAlignment;
@property(retain, nonatomic) UIFont *font;
- (void)disableClearsOnInsertion;
- (int)clearingBehavior;
- (void)setClearingBehavior:(int)arg1;
@property(nonatomic) _Bool clearsOnInsertion;
- (double)shadowBlur;
- (void)setShadowBlur:(double)arg1;
- (struct CGSize)shadowOffset;
- (void)setShadowOffset:(struct CGSize)arg1;
- (id)shadowColor;
- (void)setShadowColor:(id)arg1;
@property(retain, nonatomic) UIColor *textColor;
- (void)_syncTypingAttributesWithDefaultAttribute:(id)arg1;
- (void)_updateAtomTextColor;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;
- (void)_sanitizeText:(id)arg1;
- (_Bool)_textNeedsSanitizing:(id)arg1;
- (void)_setAttributedText:(id)arg1 onFieldEditorAndSetCaretSelectionAfterText:(_Bool)arg2;
@property(copy, nonatomic) NSString *text;
- (void)finishedSettingTextOrAttributedText;
- (id)searchText;
- (_Bool)_hasContent;
- (id)_attributedText;
- (id)_text;
- (_Bool)_shouldObscureInput;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
- (void)_updateTextLabel;
- (void)tintColorDidChange;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)takeTraitsFrom:(id)arg1;
- (id)textInputTraits;
- (_Bool)_shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged;
- (id)_textLabelView;
- (id)_placeholderLabel;
- (id)_placeholderView;
- (id)_placeholderColor;
- (void)_setSystemBackgroundViewActive:(_Bool)arg1;
- (_Bool)_fieldEditorAttached;
- (Class)_systemBackgroundViewClass;
- (void)_setRightViewOffset:(struct CGSize)arg1;
- (struct CGSize)_rightViewOffset;
- (void)_setLeftViewOffset:(struct CGSize)arg1;
- (struct CGSize)_leftViewOffset;
- (struct CGPoint)_scrollOffset;
- (id)actualFont;
- (double)actualMinimumFontSize;
- (struct CGRect)adjustedCaretRectForCaretRect:(struct CGRect)arg1;
- (void)_clearBackgroundViews;
- (void)_updateBackgroundViewsAnimated:(_Bool)arg1;
- (_Bool)_shouldEndEditing;
- (void)layoutSubviews;
- (struct CGRect)_prefixFrame;
- (struct CGRect)_suffixFrame;
- (void)_updateBaselineInformationDependentOnBounds;
- (_Bool)_wantsBaselineUpdatingFollowingConstraintsPass;
- (void)_setUpBaselineLayoutConstraintsForBounds:(struct CGRect)arg1;
- (double)_baselineLayoutConstraintConstantForBounds:(struct CGRect)arg1;
- (void)_updateLabel;
- (struct CGRect)_availableTextRectForBounds:(struct CGRect)arg1 forEditing:(_Bool)arg2;
- (struct CGRect)_availableTextRectExcludingButtonsForBounds:(struct CGRect)arg1;
- (_Bool)_isShowingPrefix;
- (_Bool)_isShowingPlaceholder;
- (_Bool)_showsRightView;
- (_Bool)_showsLeftView;
- (_Bool)_showsClearButtonWhenEmpty;
- (_Bool)_showsClearButton:(_Bool)arg1;
- (_Bool)_showsClearButtonWhenNonEmpty:(_Bool)arg1;
- (void)_updateAtomBackground;
- (_Bool)_showsAtomBackground;
- (_Bool)_partsShouldBeMini;
- (_Bool)_heightShouldBeMini;
- (struct CGRect)_atomBackgroundViewFrame;
- (void)_updateAutosizeStyleIfNeeded;
- (void)_updateButtons;
- (id)_clearButton;
- (id)clearButton;
- (id)_clearButtonImageForState:(unsigned long long)arg1;
- (void)_endedEditing;
- (float)_marginTopForBounds:(struct CGRect)arg1;
- (float)_marginTop;
- (id)_copyFont:(id)arg1 newSize:(float)arg2 maxSize:(float)arg3;
- (void)setFont:(id)arg1 fullFontSize:(float)arg2;
- (id)automaticallySelectedOverlay;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_resignFirstResponder;
- (void)_windowBecameKey;
- (_Bool)resignFirstResponder;
- (void)_becomeFirstResponder;
- (void)_updatePlaceholderPosition;
- (long long)_currentTextAlignment;
- (void)__resumeBecomeFirstResponder;
- (void)_initialScrollDidFinish:(id)arg1;
- (void)_activateSelectionView;
- (void)_stopObservingFieldEditorScroll;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)becomeFirstResponder;
- (void)scrollTextFieldToVisible;
- (_Bool)_requiresKeyboardResetOnReload;
- (_Bool)canResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (id)viewForBaselineLayout;
- (struct CGSize)_textSize;
- (struct CGSize)_textSizeUsingFullFontSize:(_Bool)arg1;
- (void)setAnimating:(_Bool)arg1;
- (struct CGRect)_responderExternalTouchRectForWindow:(id)arg1;
- (struct CGRect)_responderSelectionRectForWindow:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_sizeChanged:(_Bool)arg1;
- (void)_setNeedsStyleRecalc;
- (void)dealloc;
- (void)_encodeBackgroundColorWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_invalidateBaselineLayoutConstraints;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (_Bool)isAccessibilityElementByDefault;
- (void)_setPasscodeStyleAlpha:(double)arg1;
- (double)_passcodeStyleAlpha;
- (void)_updateForPasscodeAppearance;
- (_Bool)_isPasscodeStyle;
- (id)_scriptingInfo;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder; // @dynamic deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool forceEnableDictation;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(nonatomic) int textLoupeVisibility;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;

@end

__attribute__((visibility("hidden")))
@interface UIAlertSheetTextField : UITextField
{
    UIThreePartImageView *_sheetBackgroundView;
}

- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)clearButtonRectForBounds:(struct CGRect)arg1;
- (id)backgroundView;
- (void)setBackgroundView:(id)arg1;
- (void)dealloc;

@end

@interface UIScrollView : UIView <_UIScrollToTopView, NSCoding>
{
    id _delegate;
    struct CGSize _contentSize;
    struct UIEdgeInsets _contentInset;
    UIImageView *_verticalScrollIndicator;
    UIImageView *_horizontalScrollIndicator;
    _UIStaticScrollBar *_staticScrollBar;
    struct UIEdgeInsets _scrollIndicatorInset;
    double _startOffsetX;
    double _startOffsetY;
    double _lastUpdateOffsetX;
    double _lastUpdateOffsetY;
    double _lastUpdateTime;
    double _minimumZoomScale;
    double _maximumZoomScale;
    UIView *_zoomView;
    double _horizontalVelocity;
    double _verticalVelocity;
    double _previousHorizontalVelocity;
    double _previousVerticalVelocity;
    id _scrollHeartbeat;
    struct CGPoint _pageDecelerationTarget;
    struct CGSize _decelerationFactor;
    struct CGPoint _adjustedDecelerationTarget;
    struct CGSize _adjustedDecelerationFactor;
    double _decelerationLnFactorH;
    double _decelerationLnFactorV;
    id *_shadows;
    id _scrollNotificationViews;
    double _contentOffsetAnimationDuration;
    id _animation;
    id _zoomAnimation;
    id _pinch;
    id _pan;
    id _swipe;
    id _touchDelayGestureRecognizer;
    UISwipeGestureRecognizer *_lowFidelitySwipeGestureRecognizers[4];
    UIScrollView *_draggingChildScrollView;
    struct CGPoint _parentAdjustment;
    double _pagingSpringPull;
    double _pagingFriction;
    long long _fastScrollCount;
    double _fastScrollMultiplier;
    double _fastScrollStartMultiplier;
    double _fastScrollEndTime;
    struct CGPoint _rotationCenterPoint;
    double _accuracy;
    unsigned long long _zoomAnimationCount;
    struct CGSize _accumulatedOffset;
    long long _touchLevel;
    double _savedKeyboardAdjustmentDelta;
    struct {
        unsigned int tracking:1;
        unsigned int dragging:1;
        unsigned int verticalBounceEnabled:1;
        unsigned int horizontalBounceEnabled:1;
        unsigned int verticalBouncing:1;
        unsigned int horizontalBouncing:1;
        unsigned int bouncesZoom:1;
        unsigned int zoomBouncing:1;
        unsigned int alwaysBounceHorizontal:1;
        unsigned int alwaysBounceVertical:1;
        unsigned int preventScrollingContainer:1;
        unsigned int canCancelContentTouches:1;
        unsigned int delaysContentTouches:1;
        unsigned int programmaticScrollDisabled:1;
        unsigned int scrollDisabled:1;
        unsigned int zoomDisabled:1;
        unsigned int scrollTriggered:1;
        unsigned int showsHorizontalScrollIndicator:1;
        unsigned int showsVerticalScrollIndicator:1;
        unsigned int indicatorStyle:2;
        unsigned int inZoom:1;
        unsigned int hideIndicatorsInZoom:1;
        unsigned int pushedTrackingMode:1;
        unsigned int displayingScrollIndicators:1;
        unsigned int verticalIndicatorShrunk:1;
        unsigned int horizontalIndicatorShrunk:1;
        unsigned int contentFitDisableScrolling:1;
        unsigned int pagingEnabled:1;
        unsigned int pagingLeft:1;
        unsigned int pagingRight:1;
        unsigned int pagingUp:1;
        unsigned int pagingDown:1;
        unsigned int lastHorizontalDirection:1;
        unsigned int lastVerticalDirection:1;
        unsigned int dontScrollToTop:1;
        unsigned int scrollingToTop:1;
        unsigned int singleFingerPan:1;
        unsigned int autoscrolling:1;
        unsigned int automaticContentOffsetAdjustmentDisabled:1;
        unsigned int skipStartOffsetAdjustment:1;
        unsigned int delegateScrollViewDidScroll:1;
        unsigned int delegateScrollViewDidZoom:1;
        unsigned int delegateContentSizeForZoomScale:1;
        unsigned int preserveCenterDuringRotation:1;
        unsigned int delaysTrackingWhileDecelerating:1;
        unsigned int pinnedZoomMin:1;
        unsigned int pinnedXMin:1;
        unsigned int pinnedYMin:1;
        unsigned int pinnedXMax:1;
        unsigned int pinnedYMax:1;
        unsigned int skipLinkChecks:1;
        unsigned int staysCenteredDuringPinch:1;
        unsigned int wasDelayingPinchForSystemGestures:1;
        unsigned int systemGesturesRecognitionPossible:1;
        unsigned int disableContentOffsetRounding:1;
        unsigned int alwaysDisableContentOffsetRounding:1;
        unsigned int adjustedDecelerationTargetX:1;
        unsigned int adjustedDecelerationTargetY:1;
        unsigned int hasScrolled:1;
        unsigned int wantsConstrainedContentSize:1;
        unsigned int constrainedContentSizeNeedsUpdate:1;
        unsigned int updateInsetBottom:1;
        unsigned int beingDraggedByChildScrollView:1;
        unsigned int adjustsTargetsOnContentOffsetChanges:1;
        unsigned int forwardsTouchesUpResponderChain:1;
        unsigned int firstResponderKeyboardAvoidanceDisabled:1;
    } _scrollViewFlags;
    _Bool _useContentDimensionVariablesForConstraintLowering;
    id _scrollTestParameters;
    long long _keyboardDismissMode;
    NSISVariable *_contentWidthVariable;
    NSISVariable *_contentHeightVariable;
    NSArray *_automaticContentConstraints;
    struct CGPoint _zoomAnchorPoint;
}

+ (SEL)_pinchGestureAction;
+ (SEL)_panGestureAction;
+ (void)_scrollWithNSTimer:(_Bool)arg1;
+ (id)_implicitAnimationCulprits;
@property(copy, nonatomic, setter=_setAutomaticContentConstraints:) NSArray *_automaticContentConstraints; // @synthesize _automaticContentConstraints;
@property(nonatomic, setter=_setUseContentDimensionVariablesForConstraintLowering:) _Bool _useContentDimensionVariablesForConstraintLowering; // @synthesize _useContentDimensionVariablesForConstraintLowering;
@property(readonly, retain, nonatomic) NSISVariable *_contentHeightVariable; // @synthesize _contentHeightVariable;
@property(readonly, retain, nonatomic) NSISVariable *_contentWidthVariable; // @synthesize _contentWidthVariable;
@property(nonatomic) long long keyboardDismissMode; // @synthesize keyboardDismissMode=_keyboardDismissMode;
@property(retain, nonatomic) id scrollTestParameters; // @synthesize scrollTestParameters=_scrollTestParameters;
@property(readonly, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinch;
@property(readonly, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_pan;
@property(nonatomic) id <UIScrollViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
- (void)_smoothScrollIntoBounds;
- (void)_staticScrollBarScrollAnimationEnded;
- (void)_handleLowFidelitySwipe:(id)arg1;
- (void)_staticScrollBar:(id)arg1 didScrollInDirection:(struct CGPoint)arg2;
- (void)_lowFidelityScrollInDirection:(struct CGPoint)arg1;
- (struct CGPoint)_contentOffsetForLowFidelityScrollInDirection:(struct CGPoint)arg1 duration:(double *)arg2;
- (void)_hideScrollIndicators;
- (void)_adjustScrollerIndicators:(_Bool)arg1 alwaysShowingThem:(_Bool)arg2;
- (void)_layoutStaticScrollBar;
- (void)_startTimer:(_Bool)arg1;
- (void)_prepareToPageWithHorizontalVelocity:(double)arg1 verticalVelocity:(double)arg2;
- (void)_runLoopModePopped:(id)arg1;
- (void)_popTrackingRunLoopMode;
- (void)_smoothScrollTimer:(id)arg1;
- (void)_smoothScrollDisplayLink:(id)arg1;
- (void)_smoothScrollWithUpdateTime:(double)arg1;
- (void)_getStandardDecelerationOffset:(double *)arg1 forTimeInterval:(double)arg2 min:(double)arg3 max:(double)arg4 decelerationFactor:(double)arg5 decelerationLnFactor:(double)arg6 velocity:(double *)arg7;
- (_Bool)_getBouncingDecelerationOffset:(double *)arg1 forTimeInterval:(double)arg2 lastUpdateOffset:(double)arg3 min:(double)arg4 max:(double)arg5 decelerationFactor:(double)arg6 decelerationLnFactor:(double)arg7 velocity:(double *)arg8;
- (struct CGPoint)_pageDecelerationTarget;
- (_Bool)_getPagingDecelerationOffset:(struct CGPoint *)arg1 forTimeInterval:(double)arg2;
@property(readonly, nonatomic, getter=_isAnimatingZoom) _Bool isAnimatingZoom;
@property(readonly, nonatomic, getter=isZoomBouncing) _Bool zoomBouncing;
@property(readonly, nonatomic, getter=isZooming) _Bool zooming;
- (void)zoomToRect:(struct CGRect)arg1 animated:(_Bool)arg2;
@property(nonatomic) double zoomScale;
- (double)_zoomScaleFromPresentationLayer:(_Bool)arg1;
- (void)setZoomScale:(double)arg1 animated:(_Bool)arg2;
- (void)setZoomScale:(double)arg1 withAnchorPoint:(struct CGPoint)arg2 validatingScrollOffset:(_Bool)arg3 allowRubberbanding:(_Bool)arg4 animated:(_Bool)arg5 duration:(double)arg6 notifyDelegate:(_Bool)arg7 force:(_Bool)arg8;
- (void)setZoomScale:(double)arg1 withAnchorPoint:(struct CGPoint)arg2 validatingScrollOffset:(_Bool)arg3 allowRubberbanding:(_Bool)arg4 animated:(_Bool)arg5 duration:(double)arg6 notifyDelegate:(_Bool)arg7;
- (void)_adjustContentSizeForView:(id)arg1 atScale:(double)arg2;
- (void)_zoomAnimationDidStop;
- (float)_zoomAnimationDurationForScale:(double)arg1;
- (_Bool)_ownsAnimationForKey:(id)arg1 ofView:(id)arg2;
- (void)_markScrollViewAnimationForKey:(id)arg1 ofView:(id)arg2;
- (double)_zoomScaleForRubberBandScale:(double)arg1;
- (double)_zoomRubberBandScaleForScale:(double)arg1;
- (void)_zoomToCenter:(struct CGPoint)arg1 scale:(double)arg2 duration:(double)arg3 force:(_Bool)arg4;
- (void)_zoomToCenter:(struct CGPoint)arg1 scale:(double)arg2 duration:(double)arg3;
@property(nonatomic) double maximumZoomScale; // @synthesize maximumZoomScale=_maximumZoomScale;
@property(nonatomic) double minimumZoomScale;
- (void)nsis_valueOfVariable:(id)arg1 didChangeInEngine:(id)arg2;
- (_Bool)_evaluateWantsConstrainedContentSize;
- (id)_layoutVariablesWithAmbiguousValue;
- (struct UIOffset)_offsetForCenterOfPossibleZoomView:(id)arg1 withIncomingBoundsSize:(struct CGSize)arg2;
- (struct CGSize)_nsis_contentSize;
- (id)nsli_contentHeightVariable;
- (id)nsli_contentWidthVariable;
- (_Bool)_supportsContentDimensionVariables;
@property(nonatomic, setter=_setWantsConstrainedContentSize:) _Bool _wantsConstrainedContentSize;
- (id)description;
@property(readonly, nonatomic, getter=_isAnimatingScroll) _Bool isAnimatingScroll;
- (double)_defaultPagingFriction;
- (void)_setPagingFriction:(double)arg1;
- (double)_pagingFriction;
- (_Bool)_ignoreLinkedOnChecks;
- (void)_setIgnoreLinkedOnChecks:(_Bool)arg1;
- (void)setUserInteractionEnabled:(_Bool)arg1;
- (void)_scrollToTopFromTouchAtScreenLocation:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool scrollsToTop;
- (void)_registerAsScrollToTopViewIfPossible;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (_Bool)touchesShouldBegin:(id)arg1 withEvent:(id)arg2 inContentView:(id)arg3;
@property(nonatomic) _Bool delaysContentTouches;
@property(nonatomic) _Bool canCancelContentTouches;
@property(nonatomic) _Bool bouncesZoom;
@property(readonly, nonatomic, getter=isDecelerating) _Bool decelerating;
@property(readonly, nonatomic, getter=isDragging) _Bool dragging;
@property(readonly, nonatomic, getter=isTracking) _Bool tracking;
- (_Bool)cancelMouseTracking;
- (_Bool)cancelTouchTracking;
@property(nonatomic, getter=_forwardsTouchesUpResponderChain, setter=_setForwardsTouchesUpResponderChain:) _Bool forwardsTouchesUpResponderChain;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)handlePan:(id)arg1;
- (void)handlePinch:(id)arg1;
- (void)_handleSwipe:(id)arg1;
- (void)_gestureRecognizerFailed:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (void)_updatePinchGestureForState:(long long)arg1;
- (void)_setStaysCenteredDuringPinch:(_Bool)arg1;
- (_Bool)_staysCenteredDuringPinch;
@property(nonatomic, getter=_zoomAnchorPoint, setter=_setZoomAnchorPoint:) struct CGPoint zoomAnchorPoint; // @synthesize zoomAnchorPoint=_zoomAnchorPoint;
- (id)_getDelegateZoomView;
- (void)_endPanNormal:(_Bool)arg1;
- (_Bool)_scrollViewWillEndDraggingWithDeceleration:(_Bool)arg1;
- (void)_updatePanGesture;
- (void)_rubberBandToOffset:(struct CGPoint)arg1;
- (struct CGPoint)_rubberBandContentOffsetForOffset:(struct CGPoint)arg1 outsideX:(_Bool *)arg2 outsideY:(_Bool *)arg3;
- (struct CGPoint)_touchPositionForTouches:(id)arg1;
- (void)setShowBackgroundShadow:(_Bool)arg1;
- (_Bool)_showsBackgroundShadow;
- (void)_setShowsBackgroundShadow:(_Bool)arg1;
- (void)flashScrollIndicators;
- (void)_willMoveToWindow:(id)arg1;
- (void)setPreservesCenterDuringRotation:(_Bool)arg1;
- (_Bool)preservesCenterDuringRotation;
- (void)_registerForRotation:(_Bool)arg1 ofWindow:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(id)arg1;
- (void)willRotateToInterfaceOrientation:(id)arg1;
- (void)_enableOnlyGestureRecognizersForCurrentTouchLevel;
- (void)_createGestureRecognizersForCurrentTouchLevel;
- (void)_systemGestureStateChanged:(id)arg1;
- (void)delayed:(id)arg1;
- (double)_scrollHysteresis;
- (void)_setContentOffsetRoundingEnabled:(_Bool)arg1;
- (_Bool)_contentOffsetRoundingEnabled;
- (_Bool)tracksImmediatelyWhileDecelerating;
- (void)setTracksImmediatelyWhileDecelerating:(_Bool)arg1;
- (_Bool)allowsMultipleFingers;
- (void)setAllowsMultipleFingers:(_Bool)arg1;
- (void)setVerticalScrollDecelerationFactor:(double)arg1;
- (double)verticalScrollDecelerationFactor;
- (void)setHorizontalScrollDecelerationFactor:(double)arg1;
- (double)horizontalScrollDecelerationFactor;
@property(nonatomic) long long indicatorStyle;
@property(nonatomic) double decelerationRate;
@property(nonatomic) struct UIEdgeInsets scrollIndicatorInsets;
@property(nonatomic) _Bool showsVerticalScrollIndicator;
@property(nonatomic) _Bool showsHorizontalScrollIndicator;
@property(nonatomic) _Bool alwaysBounceHorizontal;
@property(readonly, nonatomic, getter=_isHorizontalBouncing) _Bool isHorizontalBouncing;
@property(readonly, nonatomic, getter=_isVerticalBouncing) _Bool isVerticalBouncing;
- (void)_setTransfersScrollToContainer:(_Bool)arg1;
- (_Bool)_transfersScrollToContainer;
@property(nonatomic) _Bool alwaysBounceVertical;
- (double)keyboardBottomInsetAdjustmentDelta;
- (_Bool)updateInsetBottomDuringKeyboardDismiss;
- (void)setUpdateInsetBottomDuringKeyboardDismiss:(_Bool)arg1;
- (_Bool)bouncesVertically;
- (void)setBouncesVertically:(_Bool)arg1;
- (_Bool)bouncesHorizontally;
- (void)setBouncesHorizontally:(_Bool)arg1;
@property(nonatomic) _Bool bounces;
- (unsigned long long)_abuttedPagingEdges;
- (unsigned long long)_currentlyAbuttedContentEdges;
- (unsigned long long)_abuttedEdgesForContentOffset:(struct CGPoint)arg1;
@property(nonatomic, getter=isPagingEnabled) _Bool pagingEnabled;
@property(readonly, nonatomic, getter=_isScrollingToTop) _Bool scrollingToTop;
@property(nonatomic, getter=isProgrammaticScrollEnabled) _Bool programmaticScrollEnabled;
@property(nonatomic, getter=_isFirstResponderKeyboardAvoidanceEnabled, setter=_setFirstResponderKeyboardAvoidanceEnabled:) _Bool firstResponderKeyboardAvoidanceEnabled;
- (_Bool)isZoomEnabled;
- (void)setZoomEnabled:(_Bool)arg1;
- (void)setScrollingEnabled:(_Bool)arg1;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
- (void)_updateZoomGestureRecognizersEnabled;
- (void)_updateScrollGestureRecognizersEnabled;
@property(nonatomic, getter=isDirectionalLockEnabled) _Bool directionalLockEnabled;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
@property(nonatomic) struct CGPoint contentOffset;
- (void)_updateContentFitDisableScrolling;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)removeFromSuperview;
- (void)_webCustomViewWillBeRemovedFromSuperview;
@property(nonatomic, getter=_adjustsTargetsOnContentOffsetChanges, setter=_setAdjustsTargetsOnContentOffsetChanges:) _Bool adjustsTargetsOnContentOffsetChanges;
- (_Bool)_isRectFullyVisible:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (double)_adjustedVerticalOffsetPinnedToScrollableBounds:(double)arg1;
- (double)_adjustedHorizontalOffsetPinnedToScrollableBounds:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_attemptToDragParent:(id)arg1 forNewBounds:(struct CGRect)arg2 oldBounds:(struct CGRect)arg3;
- (void)_stopDraggingParent:(id)arg1;
- (void)_startDraggingParent:(id)arg1;
- (_Bool)_stopBeingDraggedByChild:(id)arg1;
- (_Bool)_startBeingDraggedByChild:(id)arg1;
- (void)_updatePagingGesture;
- (id)_scrollViewTouchDelayGesture;
- (void)_updatePinchGesture;
- (void)_updatePanGestureConfiguration;
- (id)_panGestureRecognizer;
- (void)_updateUsesStaticScrollBar;
- (_Bool)_usesLowFidelityPanning;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_flashScrollIndicatorsPersistingPreviousFlashes:(_Bool)arg1;
- (void)_setUsesStaticScrollBar:(_Bool)arg1;
@property(readonly, nonatomic) _UIStaticScrollBar *_staticScrollBar;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)layoutSubviews;
- (void)_applyConstrainedContentSizeIfNecessary;
- (void)_switchToLayoutEngine:(id)arg1;
- (void)_centerContentIfNecessary;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)_isScrollingEnabled;
- (void)_adjustContentOffsetIfNecessary;
- (_Bool)_shouldScrollOnGestureRecognizerFailed;
- (struct CGRect)_rectForPageContainingView:(id)arg1;
- (void)_pinContentOffsetToClosestPageBoundary;
- (void)_scrollViewDidEndZooming;
- (void)_scrollViewWillBeginZooming;
- (void)_scrollViewDidEndDecelerating;
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;
- (void)_scrollViewWillBeginDragging;
- (id)_backgroundShadowForSlideAnimation;
- (void)_adjustShadowsIfNecessaryForOffset:(double)arg1;
- (void)_adjustShadowsIfNecessary;
- (void)_skipNextStartOffsetAdjustment;
- (struct CGRect)contentFrameForView:(id)arg1;
- (void)setAutoscrollContentOffset:(struct CGPoint)arg1;
- (struct CGPoint)autoscrollContentOffset;
- (_Bool)_isAutoscrolling;
- (void)_setAutoscrolling:(_Bool)arg1;
- (_Bool)_isBouncing;
- (_Bool)_pagingDown;
- (_Bool)_pagingUp;
- (_Bool)_pagingRight;
- (_Bool)_pagingLeft;
- (_Bool)_canScrollY;
- (_Bool)_canScrollX;
- (void)_adjustForAutomaticKeyboardInfo:(id)arg1 animated:(_Bool)arg2 lastAdjustment:(double *)arg3;
- (struct CGPoint)_adjustedContentOffsetPinnedToScrollableBounds:(struct CGPoint)arg1;
- (void)_setShowsHorizontalScrollIndicator:(_Bool)arg1;
- (void)_setShowsVerticalScrollIndicator:(_Bool)arg1;
- (void)_setAlwaysBounceVertical:(_Bool)arg1;
- (struct CGPoint)_animatedTargetOffset;
- (struct CGPoint)_animatedOriginalOffset;
- (id)_parentScrollView;
- (void)_setContentOffsetPinned:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)_setContentOffsetPinned:(struct CGPoint)arg1;
- (double)_verticalVelocity;
- (double)_horizontalVelocity;
- (double)_touchDelayForScrollDetection;
- (_Bool)_scrollsToMakeFirstResponderVisible;
- (void)animator:(id)arg1 stopAnimation:(id)arg2 fraction:(float)arg3;
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;
- (void)_delegateScrollViewAnimationEnded;
- (_Bool)_forwardsToParentScroller;
- (void)_ensureViewsAreLoadedInRect:(struct CGRect)arg1;
- (void)_forceDelegateScrollViewDidZoom:(_Bool)arg1;
- (_Bool)_isAutomaticContentOffsetAdjustmentEnabled;
- (void)_setAutomaticContentOffsetAdjustmentEnabled:(_Bool)arg1;
- (void)_updateScrollAnimationForChangedTargetOffset:(struct CGPoint)arg1;
- (void)_setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2 animationCurve:(int)arg3 animationAdjustsForContentOffsetDelta:(_Bool)arg4;
- (void)_setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2 animationCurve:(int)arg3;
- (void)_setAbsoluteContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)_setContentOffset:(struct CGPoint)arg1 duration:(double)arg2 animationCurve:(int)arg3;
- (void)_clearContentOffsetAnimation;
- (void)_clearContentOffsetAnimation:(id)arg1;
- (struct CGPoint)_originalOffsetForAnimatedSetContentOffset;
- (double)_contentOffsetAnimationDuration;
- (void)_setContentOffsetAnimationDuration:(double)arg1;
- (void)_moveContentSubview:(id)arg1 toBack:(_Bool)arg2;
- (void)_addContentSubview:(id)arg1 atBack:(_Bool)arg2;
- (_Bool)_canCancelContentTouches:(id)arg1;
- (void)_removeScrollNotificationView:(id)arg1;
- (void)_addScrollNotificationView:(id)arg1;
- (_Bool)_resetScrollingForGestureEvent:(id)arg1;
- (_Bool)_beginTrackingWithEvent:(id)arg1;
- (void)_resetScrollingWithUIEvent:(id)arg1;
- (void)_stopScrollingAndZoomingAnimations;
- (void)_stopScrollingAndZoomingAnimationsPinningToContentViewport:(_Bool)arg1;
- (void)_stopScrollingAndZoomingAnimationsPinningToContentViewport:(_Bool)arg1 tramplingDragFlags:(_Bool)arg2;
- (void)_stopScrollingNotify:(_Bool)arg1 pin:(_Bool)arg2;
- (void)_stopScrollingNotify:(_Bool)arg1 pin:(_Bool)arg2 tramplingDragFlags:(_Bool)arg3;
- (void)_stopScrollDecelerationNotify:(_Bool)arg1;
- (void)_adjustBackgroundShadowsForContentSizeForcedVisible:(_Bool)arg1;
- (void)_adjustBackgroundShadowsForContentSizeForcedVisible:(_Bool)arg1 withOffset:(double)arg2;
- (void)_adjustStartOffsetForGrabbedBouncingScrollView;
- (double)_shadowHeightOffset;
- (double)_offsetForRubberBandOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4;
- (double)_rubberBandOffsetForOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4 outside:(_Bool *)arg5;
- (void)_clearParentAdjustment;
- (_Bool)_shouldTrackImmediatelyWhileDecelerating;
- (void)_notifyDidScroll;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (_Bool)_viewIsInsideNavigationController;
- (void)_incrementForScrollTest;
- (id)_scrollTestExtraResults;
- (void)_performScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3 length:(int)arg4 scrollAxis:(int)arg5;
- (void)_performScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3 scrollAxis:(int)arg4;
- (void)_performScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3 length:(int)arg4;
- (void)_performScrollTest:(id)arg1 iterations:(int)arg2 delta:(int)arg3;
- (void)_suppressImplicitAnimationsForScrollTest;
- (void)_reenableImplicitAnimationsAfterScrollTest;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (double)maxVelocityInDirection:(int)arg1;
- (int)scrollableDirections;
- (void)_accumulateViewConstraintsIntoArray:(id)arg1;
- (void)_old_updateAutomaticContentSizeConstraintsIfNecessaryWithContentSize:(struct CGSize)arg1;
- (void)_resizeWithOldSuperviewSize:(struct CGSize)arg1;
- (void)_setSubviewWantsAutolayoutTripWantsAutolayout:(_Bool)arg1;
- (id)_constraintsFromContentSize;
- (void)_didRemoveDependentConstraint:(id)arg1;
- (void)_didAddDependentConstraint:(id)arg1;
- (_Bool)_constraintAffectsContentSize:(id)arg1;
- (void)_adjustCrossingConstraintsIfNecessaryForOldContentInset:(struct UIEdgeInsets)arg1;

@end

@interface _UICompatibilityTextView : UIScrollView <UITextLinkInteraction, UITextInput>
{
    id _private;
    _Bool m_editing;
    UIView *m_inputView;
}

+ (id)excludedElementsForHTML;
+ (id)_bestInterpretationForDictationResult:(id)arg1;
+ (_Bool)_isCompatibilityTextView;
+ (void)initialize;
@property(retain) UIView *inputView; // @synthesize inputView=m_inputView;
- (id)selectionRectsForRange:(id)arg1;
- (void)setSelectionGranularity:(long long)arg1;
- (long long)selectionGranularity;
@property(nonatomic) long long selectionAffinity;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (id)metadataDictionariesForDictationResults;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (id)insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
- (id)_proxyTextInput;
- (Class)_printFormatterClass;
@property(readonly, nonatomic) UIView *textInputView;
- (void)layoutSubviews;
- (void)scrollToMakeCaretVisible:(_Bool)arg1;
- (void)setScrollerIndicatorSubrect:(struct CGRect)arg1;
- (void)setAllowsFourWayRubberBanding:(_Bool)arg1;
- (_Bool)scrollingEnabled;
- (void)setScrollEnabled:(_Bool)arg1;
- (void)setScrollingEnabled:(_Bool)arg1;
- (void)setAllowsRubberBanding:(_Bool)arg1;
- (struct CGPoint)offset;
- (void)setOffset:(struct CGPoint)arg1;
- (void)displayScrollerIndicators;
- (_Bool)showScrollerIndicators;
- (void)setShowScrollerIndicators:(_Bool)arg1;
- (double)bottomBufferHeight;
- (void)setBottomBufferHeight:(double)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (_Bool)keyboardInputShouldDelete:(id)arg1;
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (id)automaticallySelectedOverlay;
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;
- (_Bool)isInteractingWithLink;
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)cancelInteractionWithLink;
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)tapLinkAtPoint:(struct CGPoint)arg1;
- (unsigned long long)_allowedLinkTypes;
- (_Bool)mightHaveLinks;
@property(nonatomic) unsigned long long dataDetectorTypes;
- (void)resetDataDetectorsResultsWithWebLock;
- (void)startDataDetectorsWithWebLock;
- (void)cancelDataDetectorsWithWebLock;
- (_Bool)shouldStartDataDetectors;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (void)setLineHeight:(double)arg1;
- (double)lineHeight;
- (id)webView;
- (struct CGRect)visibleTextRect;
- (struct CGRect)visibleRect;
- (void)setMarginTop:(int)arg1;
- (int)marginTop;
@property(retain) UIView *inputAccessoryView;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;
- (_Bool)becomesEditableWithGestures;
- (_Bool)_requiresKeyboardWhenFirstResponder;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=m_editing;
@property(nonatomic, getter=isEditable) _Bool editable;
@property(nonatomic) struct _NSRange selectedRange;
@property(nonatomic) long long textAlignment;
@property(copy, nonatomic) NSString *text;
- (_Bool)hasText;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIFont *font;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)_transferTextViewPropertiesFromText:(id)arg1;
- (void)_transferAttribute:(id)arg1 fromString:(id)arg2 andSetPropertyWith:(SEL)arg3 usingValueClass:(Class)arg4;
@property(nonatomic) _Bool allowsEditingTextAttributes;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)textInputTraits;
- (id)contentAsHTMLString;
- (void)setContentToHTMLString:(id)arg1;
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (struct CGRect)rectForSelection:(struct _NSRange)arg1;
- (void)setSelectionToEnd;
- (void)setSelectionToStart;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_updateForNewSize:(struct CGSize)arg1 withOldSize:(struct CGSize)arg2;
- (void)performBecomeEditableTasks;
- (void)webViewDidChange:(id)arg1;
- (_Bool)shouldScrollEnclosingScrollView;
- (void)scrollRectToVisibleInContainingScrollView;
- (id)documentFragmentForPasteboardItemAtIndex:(long long)arg1;
- (id)supportedPasteboardTypesForCurrentSelection;
- (id)undoManager;
- (id)undoManagerForWebView:(id)arg1;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)_addShortcut:(id)arg1;
- (void)_define:(id)arg1;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)replace:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)selectAll;
- (id)selectedText;
- (id)interactionAssistant;
- (id)selectionView;
- (void)updateSelection;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGImage *)newSnapshotWithRect:(struct CGRect)arg1;
- (struct CGImage *)createSnapshotWithRect:(struct CGRect)arg1;
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (void)disableClearsOnInsertion;
@property(nonatomic) _Bool clearsOnInsertion;
- (void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;
- (void)ensureSelection;
- (_Bool)isFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (id)_keyboardResponder;
- (void)updateWebViewObjects;
- (void)didMoveToSuperview;
- (void)recalculateStyle;
- (id)styleString;
- (struct CGSize)tileSizeForSize:(struct CGSize)arg1;
- (_Bool)_alwaysHandleScrollerMouseEvent;
- (void)keyboardDidShow:(id)arg1;
- (void)delayedUpdateForKeyboardDidShow;
- (void)removeFromSuperview;
- (void)dealloc;
- (void)_dealloc;
- (void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(_Bool)arg2;
- (void)updateContentEditableAttribute:(_Bool)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 font:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 webView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_automationValue;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <UITextViewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIAlertTextView : _UICompatibilityTextView
{
}

- (_Bool)canBecomeFirstResponder;

@end

@interface UIAlertView : UIView
{
    UIAlertController *_alertController;
    _UIAlertControllerShimPresenter *_presenter;
    NSMutableArray *_actions;
    long long _cancelIndex;
    long long _defaultButtonIndex;
    long long _firstOtherButtonIndex;
    NSString *_message;
    NSString *_subtitle;
    long long _alertViewStyle;
    _Bool _runsModal;
    id _context;
    _Bool _hasPreparedAlertActions;
    _Bool _isPresented;
    _Bool _alertControllerShouldDismiss;
    _Bool _handlingAlertActionShouldDismiss;
    _Bool _dismissingAlertController;
    _Bool __currentlyRunningModal;
    UIViewController *externalViewControllerForPresentation;
    _UIWeakRef *_weakDelegate;
}

+ (_Bool)_isAlertControllerShimClass;
+ (void)applyTransformToAllAlerts:(struct CGAffineTransform)arg1;
+ (_Bool)_springBoardAlertDisplayingOverApplicationAlert;
+ (void)_setSpringBoardAlertDisplayingOverApplicationAlert:(_Bool)arg1;
+ (id)_alertWindow;
+ (struct CGSize)minimumSize;
+ (id)_alertViewForWindow:(id)arg1;
+ (id)_alertViewForSessionWithRemoteViewController:(id)arg1;
+ (id)_remoteAlertViewWithBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) _UIWeakRef *weakDelegate; // @synthesize weakDelegate=_weakDelegate;
@property(nonatomic, setter=_setCurrentlyRunningModal:) _Bool _currentlyRunningModal; // @synthesize _currentlyRunningModal=__currentlyRunningModal;
@property(retain, nonatomic, getter=_externalViewControllerForPresentation, setter=_setExternalViewControllerForPresentation:) UIViewController *externalViewControllerForPresentation; // @synthesize externalViewControllerForPresentation;
- (id)_alertController;
- (void)_showByReplacingPreviousAlertAnimated:(_Bool)arg1;
- (void)_useLegacyUI:(_Bool)arg1;
- (_Bool)_isSBAlert;
- (void)_updateFrameForDisplay;
- (void)_prepareToBeReplaced;
- (id)keyboard;
- (void)setKeyboardShowsOnPopup:(_Bool)arg1;
- (void)_useUndoStyle:(_Bool)arg1;
- (_Bool)_shouldUseUndoStyle;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
- (void)_showByReplacingAlert:(id)arg1 animated:(_Bool)arg2;
- (id)_representedModalItem;
- (id)_representedModalItemView;
- (void)_setAccessoryViewController:(id)arg1;
- (void)_setAccessoryView:(id)arg1;
- (void)replaceAlert:(id)arg1;
- (void)_prepareForDisplay;
- (int)numberOfLinesInTitle;
- (double)_buttonHeight;
- (double)_maxHeight;
- (struct CGRect)titleRect;
- (_Bool)runsModal;
- (void)setRunsModal:(_Bool)arg1;
- (_Bool)dimsBackground;
- (void)setDimsBackground:(_Bool)arg1;
- (_Bool)forceHorizontalButtonsLayout;
- (void)setForceHorizontalButtonsLayout:(_Bool)arg1;
- (int)alertSheetStyle;
- (void)setAlertSheetStyle:(int)arg1;
- (long long)numberOfRows;
- (void)setNumberOfRows:(long long)arg1;
- (struct CGSize)backgroundSize;
- (id)_dimView;
- (void)setDimView:(id)arg1;
- (_Bool)isBodyTextTruncated;
- (id)taglineTextLabel;
- (id)bodyTextLabel;
- (id)titleLabel;
- (id)_titleLabel;
- (_Bool)_canShowAlerts;
- (_Bool)_isAnimating;
@property(nonatomic) _Bool showsOverSpringBoardAlerts;
- (id)tableView;
- (_Bool)tableShouldShowMinimumContent;
- (void)setTableShouldShowMinimumContent:(_Bool)arg1;
- (id)context;
- (void)setContext:(id)arg1;
- (int)bodyMaxLineCount;
- (void)setBodyTextMaxLineCount:(int)arg1;
- (int)titleMaxLineCount;
- (void)setTitleMaxLineCount:(int)arg1;
- (int)suspendTag;
- (void)setSuspendTag:(int)arg1;
- (void)layoutAnimated:(_Bool)arg1;
- (void)layout;
- (long long)_currentOrientation;
- (_Bool)requiresPortraitOrientation;
- (void)_performPresentationDismissalWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)dismissAnimated:(_Bool)arg1;
- (void)dismiss;
- (void)show;
- (void)_showAnimated:(_Bool)arg1;
- (void)_performPopup:(_Bool)arg1;
- (void)presentSheetFromButtonBar:(id)arg1;
- (void)_presentSheetStartingFromYCoordinate:(double)arg1;
- (void)showWithAnimationType:(int)arg1;
- (void)presentSheetToAboveView:(id)arg1;
- (void)presentSheetInView:(id)arg1;
- (void)presentSheetFromAboveView:(id)arg1;
- (void)presentSheetFromBehindView:(id)arg1;
- (void)_presentSheetFromView:(id)arg1 above:(_Bool)arg2;
- (void)popupAlertAnimated:(_Bool)arg1;
- (void)popupAlertAnimated:(_Bool)arg1 animationType:(int)arg2;
- (void)popupAlertAnimated:(_Bool)arg1 atOffset:(double)arg2;
@property(nonatomic) _Bool groupsTextFields;
- (void)_setTextFieldsHidden:(_Bool)arg1;
- (id)textFieldAtIndex:(long long)arg1;
- (id)textField;
- (int)textFieldCount;
- (void)_textDidChangeInTextField:(id)arg1;
- (id)addTextFieldWithValue:(id)arg1 label:(id)arg2;
- (id)_addTextFieldWithValue:(id)arg1 label:(id)arg2;
- (long long)_maximumNumberOfTextFieldsForCurrentStyle;
- (int)buttonCount;
@property(readonly, nonatomic) long long numberOfButtons;
- (id)buttonTitleAtIndex:(long long)arg1;
- (id)_buttonAtIndex:(long long)arg1;
- (void)_updateFirstOtherButtonEnabledState;
- (void)_updateButtonTitles;
- (id)buttonAtIndex:(long long)arg1;
@property(readonly, nonatomic) long long firstOtherButtonIndex;
- (void)_setFirstOtherButtonIndex:(long long)arg1;
@property(nonatomic) long long cancelButtonIndex;
- (long long)defaultButtonIndex;
- (void)setDefaultButtonIndex:(long long)arg1;
- (id)defaultButton;
- (void)setDefaultButton:(id)arg1;
- (id)_destructiveButton;
- (void)_setDestructiveButton:(id)arg1;
- (id)_defaultButton;
- (void)_setDefaultButton:(id)arg1;
- (long long)addButtonWithTitle:(id)arg1;
- (id)addButtonWithTitle:(id)arg1 buttonClass:(Class)arg2;
- (id)addButtonWithTitle:(id)arg1 label:(id)arg2;
- (id)_addButtonWithTitle:(id)arg1 label:(id)arg2 buttonClass:(Class)arg3;
- (id)_addButtonWithTitle:(id)arg1;
- (id)_addButtonWithTitleText:(id)arg1;
- (void)_endRunningModallyIfNecessary;
- (void)_beginRunningModallyIfNecessary;
- (void)_setIsPresented:(_Bool)arg1;
- (void)_dismissForTappedIndex:(long long)arg1;
- (_Bool)_prepareToDismissForTappedIndex:(long long)arg1;
- (id)window;
@property(nonatomic) long long alertViewStyle;
@property(nonatomic) id delegate;
- (void)_updateMessageAndSubtitle;
- (id)subtitle;
- (void)setSubtitle:(id)arg1;
- (void)setTaglineText:(id)arg1;
- (id)bodyText;
- (void)setBodyText:(id)arg1;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *title;
- (void)_changeButtonTitleAtIndex:(long long)arg1 toTitle:(id)arg2;
- (void)_prepareAlertActions;
- (id)_preparedAlertActionAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;
- (id)initWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 defaultButton:(id)arg4 cancelButton:(id)arg5 otherButtons:(id)arg6;
- (id)initWithTitle:(id)arg1 buttons:(id)arg2 defaultButtonIndex:(int)arg3 delegate:(id)arg4 context:(id)arg5;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIAnimation : NSObject
{
    id _target;
    SEL _action;
    id _delegate;
    CDUnknownBlockType _completion;
    struct {
        unsigned int curve:4;
        unsigned int tvOutput:1;
        unsigned int useNSTimer:1;
    } _animationFlags;
    double _startTime;
    double _duration;
    int _state;
}

- (void)dealloc;
- (float)progressForFraction:(float)arg1;
- (void)setProgress:(float)arg1;
- (void)setAnimationCurve:(int)arg1;
- (CDUnknownBlockType)completion;
- (void)setCompletion:(CDUnknownBlockType)arg1;
- (_Bool)usesNSTimer;
- (void)setUsesNSTimer:(_Bool)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (id)target;
- (void)stopAnimation;
- (id)initWithTarget:(id)arg1;
- (void)markStop;
- (void)markStart:(double)arg1;
- (float)fractionForTime:(double)arg1;
- (void)setDuration:(double)arg1;
- (int)type;
- (int)state;

@end

@interface UIAlphaAnimation : UIAnimation
{
    double _startAlpha;
    double _endAlpha;
}

- (double)alphaForFraction:(float)arg1;
- (void)setProgress:(float)arg1;
- (double)_alphaForMultiplier:(float)arg1;
- (void)setEndAlpha:(double)arg1;
- (void)setStartAlpha:(double)arg1;

@end

@interface UIAnimator : NSObject
{
    NSMutableArray *_animations;
    double _lastUpdateTime;
    id _heartbeat[3];
    int _heartbeatClientCount[3];
}

+ (void)enableAnimation;
+ (void)disableAnimation;
+ (id)sharedAnimator;
- (float)fractionForAnimation:(id)arg1;
- (void)stopAnimation:(id)arg1;
- (void)startAnimation:(id)arg1;
- (void)removeAnimationsForTarget:(id)arg1 ofKind:(Class)arg2;
- (void)removeAnimationsForTarget:(id)arg1;
- (void)addAnimations:(id)arg1 withDuration:(double)arg2 start:(_Bool)arg3;
- (void)addAnimation:(id)arg1 withDuration:(double)arg2 start:(_Bool)arg3;
- (void)dealloc;
- (_Bool)_isRunningAnimation:(id)arg1;
- (void)_advanceAnimationsOfType:(int)arg1 withTimestamp:(double)arg2;
- (void)_startAnimation:(id)arg1 withStartTime:(double)arg2;
- (void)_LCDHeartbeatCallback:(id)arg1;
- (void)_TVHeartbeatCallback:(id)arg1;
- (void)_TimerHeartbeatCallback:(id)arg1;
- (void)_addAnimation:(id)arg1 withDuration:(double)arg2 start:(_Bool)arg3 startTime:(double)arg4;

@end

@interface UIApplication : UIResponder <FBSUIApplicationWorkspaceDelegate, FBSSceneDelegate, FBSUIApplicationSystemServiceDelegate, NSUserActivityDelegate, UIActionSheetDelegate>
{
    id <UIApplicationDelegate> _delegate;
    NSMutableSet *_exclusiveTouchWindows;
    UIEvent *_event;
    UIEvent *_touchesEvent;
    UIEvent *_motionEvent;
    UIEvent *_remoteControlEvent;
    long long _remoteControlEventObservers;
    NSArray *_topLevelNibObjects;
    long long _networkResourcesCurrentlyLoadingCount;
    NSTimer *_hideNetworkActivityIndicatorTimer;
    UIAlertView *_editAlertView;
    UIStatusBar *_statusBar;
    long long _statusBarRequestedStyle;
    UIStatusBarWindow *_statusBarWindow;
    NSMutableArray *_observerBlocks;
    NSMutableArray *_postCommitActions;
    NSString *_mainStoryboardName;
    NSMutableArray *_tintViewDurationStack;
    NSMutableArray *_statusBarTintColorLockingControllers;
    long long _statusBarTintColorLockingCount;
    NSString *_preferredContentSizeCategory;
    struct {
        unsigned int deactivatingReasonFlags:11;
        unsigned int isSuspended:1;
        unsigned int isSuspendedEventsOnly:1;
        unsigned int isLaunchedSuspended:1;
        unsigned int calledNonSuspendedLaunchDelegate:1;
        unsigned int calledSuspendedLaunchDelegate:1;
        unsigned int isHandlingURL:1;
        unsigned int statusBarShowsProgress:1;
        unsigned int statusBarHidden:1;
        unsigned int statusBarHiddenDefault:1;
        unsigned int statusBarHiddenVerticallyCompact:1;
        unsigned int blockInteractionEvents:4;
        unsigned int receivesMemoryWarnings:1;
        unsigned int showingProgress:1;
        unsigned int receivesPowerMessages:1;
        unsigned int launchEventReceived:1;
        unsigned int activateEventReceived:1;
        unsigned int systemIsAnimatingApplicationLifecycleEvent:1;
        unsigned int isResuming:1;
        unsigned int isSuspendedUnderLock:1;
        unsigned int shouldExitAfterSendSuspend:1;
        unsigned int terminating:1;
        unsigned int isHandlingShortCutURL:1;
        unsigned int idleTimerDisabled:1;
        unsigned int deviceOrientation:3;
        unsigned int delegateShouldBeReleasedUponSet:1;
        unsigned int delegateHandleOpenURL:1;
        unsigned int delegateOpenURL:1;
        unsigned int delegateDidReceiveMemoryWarning:1;
        unsigned int delegateWillTerminate:1;
        unsigned int delegateSignificantTimeChange:1;
        unsigned int delegateWillChangeInterfaceOrientation:1;
        unsigned int delegateDidChangeInterfaceOrientation:1;
        unsigned int delegateWillChangeStatusBarFrame:1;
        unsigned int delegateDidChangeStatusBarFrame:1;
        unsigned int delegateDeviceAccelerated:1;
        unsigned int delegateDeviceChangedOrientation:1;
        unsigned int delegateDidBecomeActive:1;
        unsigned int delegateWillResignActive:1;
        unsigned int delegateDidEnterBackground:1;
        unsigned int delegateDidEnterBackgroundWasSent:1;
        unsigned int delegateWillEnterForeground:1;
        unsigned int delegateWillSuspend:1;
        unsigned int delegateDidResume:1;
        unsigned int delegateSupportsStateRestoration:1;
        unsigned int delegateSupportedInterfaceOrientations:1;
        unsigned int delegateHandleSiriTask:1;
        unsigned int userDefaultsSyncDisabled:1;
        unsigned int headsetButtonClickCount:4;
        unsigned int isHeadsetButtonDown:1;
        unsigned int isFastForwardActive:1;
        unsigned int isRewindActive:1;
        unsigned int shakeToEdit:1;
        unsigned int zoomInClassicMode:1;
        unsigned int ignoreHeadsetClicks:1;
        unsigned int touchRotationDisabled:1;
        unsigned int taskSuspendingUnsupported:1;
        unsigned int taskSuspendingOnLockUnsupported:1;
        unsigned int isUnitTests:1;
        unsigned int requiresHighResolution:1;
        unsigned int singleUseLaunchOrientation:3;
        unsigned int defaultInterfaceOrientation:3;
        unsigned int supportedInterfaceOrientationsMask:5;
        unsigned int delegateWantsNextResponder:1;
        unsigned int isRunningInApplicationSwitcher:1;
        unsigned int isSendingEventForProgrammaticTouchCancellation:1;
        unsigned int delegateWantsStatusBarTouchesEnded:1;
        unsigned int interfaceLayoutDirectionIsValid:1;
        unsigned int interfaceLayoutDirection:3;
        unsigned int restorationExtended:1;
        unsigned int normalRestorationInProgress:1;
        unsigned int normalRestorationCompleted:1;
        unsigned int isDelayingTintViewChange:1;
        unsigned int isUpdatingTintViewColor:1;
        unsigned int isHandlingMemoryWarning:1;
        unsigned int forceStatusBarTintColorChanges:1;
        unsigned int disableLegacyAutorotation:1;
        unsigned int isFakingForegroundTransitionForBackgroundFetch:1;
        unsigned int couldNotRestoreStateWhenLocked:1;
        unsigned int disableStyleOverrides:1;
        unsigned int legibilityAccessibilitySettingEnabled:1;
        unsigned int viewControllerBasedStatusBarAppearance:1;
        unsigned int fakingRequiresHighResolution:1;
        unsigned int isStatusBarFading:1;
        unsigned int systemWindowsSecure:1;
    } _applicationFlags;
    UIColor *_defaultTopNavBarTintColor;
    long long _undoButtonIndex;
    long long _redoButtonIndex;
    UIMoveEvent *_moveEvent;
    UIPhysicalButtonsEvent *_physicalButtonsEvent;
    UIWheelEvent *_wheelEvent;
    NSMutableDictionary *_physicalButtonMap;
    UIPhysicalKeyboardEvent *_physicalKeyboardEvent;
    _Bool _alwaysHitTestsForMainScreen;
    UIWindow *_backgroundHitTestWindow;
    NSMutableArray *_eventQueue;
    struct __CFDictionary *_childEventMap;
    long long _disableTouchCoalescingCount;
    long long _classicMode;
    NSMutableSet *_actionsPendingInitialization;
    NSMutableSet *_idleTimerDisabledReasons;
    double _currentTimestampWhenFirstTouchCameDown;
    struct CGPoint _currentLocationWhereFirstTouchCameDown;
    NSString *_currentActivityUUID;
    NSString *_currentActivityType;
    UIApplicationSceneSettingsDiffInspector *_sceneSettingsDiffInspector;
    _Bool _saveStateRestorationArchiveWithFileProtectionCompleteUntilFirstUserAuthentication;
    double _lastTimestampWhenFirstTouchCameDown;
    double _lastTimestampWhenAllTouchesLifted;
    long long _virtualHorizontalSizeClass;
    long long _virtualVerticalSizeClass;
    long long __expectedViewOrientation;
    NSString *_preferredContentSizeCategoryName;
    struct CGPoint _lastLocationWhereFirstTouchCameDown;
    struct CGPoint _lastLocationWhereAllTouchesLifted;
    struct CGSize _virtualWindowSizeInSceneReferenceSpace;
}

+ (id)_defaultContentSizeCategory;
+ (id)stringForInterfaceOrientation:(long long)arg1;
+ (long long)interfaceOrientationForString:(id)arg1;
+ (_Bool)_isBackgroundStyleTransparent:(long long)arg1;
+ (long long)_backgroundStyleForString:(id)arg1;
+ (long long)statusBarStyleForString:(id)arg1;
+ (id)stringForStatusBarStyle:(long long)arg1;
+ (_Bool)rendersLocally;
+ (_Bool)registerAsSystemApp;
+ (_Bool)isRunningEventPump;
+ (Class)_statusBarClass;
+ (_Bool)shouldBackgroundMainThreadOnSuspendedLaunch;
+ (void)_startStatusBarServerIfNecessary;
+ (void)_startWindowServerIfNecessary;
+ (_Bool)_isAfterCACommitHandlerInstalled;
+ (void)_installAfterCACommitHandler;
+ (void)_noteInterfaceOrientationChangingTo:(long long)arg1;
+ (_Bool)shouldMakeUIForDefaultPNG;
+ (_Bool)isRunningInStoreDemoMode;
+ (id)sharedApplication;
+ (void)registerObjectForStateRestoration:(id)arg1 restorationIdentifier:(id)arg2;
@property(copy, nonatomic, setter=_setPreferredContentSizeCategoryName:) NSString *preferredContentSizeCategoryName; // @synthesize preferredContentSizeCategoryName=_preferredContentSizeCategoryName;
@property(nonatomic, setter=_setExpectedViewOrientation:) long long _expectedViewOrientation; // @synthesize _expectedViewOrientation=__expectedViewOrientation;
@property(readonly) long long _virtualVerticalSizeClass; // @synthesize _virtualVerticalSizeClass;
@property(readonly) long long _virtualHorizontalSizeClass; // @synthesize _virtualHorizontalSizeClass;
@property(readonly) struct CGSize _virtualWindowSizeInSceneReferenceSpace; // @synthesize _virtualWindowSizeInSceneReferenceSpace;
@property(nonatomic, getter=_lastLocationWhereAllTouchesLifted, setter=_setLastLocationWhereAllTouchesLifted:) struct CGPoint lastLocationWhereAllTouchesLifted; // @synthesize lastLocationWhereAllTouchesLifted=_lastLocationWhereAllTouchesLifted;
@property(nonatomic, getter=_lastLocationWhereFirstTouchCameDown, setter=_setLastLocationWhereFirstTouchCameDown:) struct CGPoint lastLocationWhereFirstTouchCameDown; // @synthesize lastLocationWhereFirstTouchCameDown=_lastLocationWhereFirstTouchCameDown;
@property(nonatomic, getter=_lastTimestampWhenAllTouchesLifted, setter=_setLastTimestampWhenAllTouchesLifted:) double lastTimestampWhenAllTouchesLifted; // @synthesize lastTimestampWhenAllTouchesLifted=_lastTimestampWhenAllTouchesLifted;
@property(nonatomic, getter=_lastTimestampWhenFirstTouchCameDown, setter=_setLastTimestampWhenFirstTouchCameDown:) double lastTimestampWhenFirstTouchCameDown; // @synthesize lastTimestampWhenFirstTouchCameDown=_lastTimestampWhenFirstTouchCameDown;
- (id)_preferredContentSizeCategory:(unsigned long long)arg1;
- (void)_setTextLegibilityEnabled:(_Bool)arg1;
@property(readonly, nonatomic) NSString *preferredContentSizeCategory;
- (void)_setPreferredContentSizeCategory:(id)arg1;
- (id)_showServiceForText:(id)arg1 type:(long long)arg2 fromRect:(struct CGRect)arg3 inView:(id)arg4;
- (_Bool)_canShowTextServices;
- (_Bool)_areSystemWindowsSecure;
- (void)_setSystemWindowsSecure:(_Bool)arg1;
- (id)_fallbackPresentationViewController;
- (_Bool)_usesPreMTAlertBehavior;
- (void)_sendHeadsetOriginatedMediaRemoteCommand:(unsigned int)arg1;
- (void)endReceivingRemoteControlEvents;
- (void)beginReceivingRemoteControlEvents;
- (void)_checkBackgroundRefreshAPIAdoption;
- (void)_registerForBackgroundRefreshStatusChangedNotification;
@property(readonly, nonatomic) long long backgroundRefreshStatus;
- (void)setMinimumBackgroundFetchInterval:(double)arg1;
- (void)clearKeepAliveTimeout;
- (_Bool)setKeepAliveTimeout:(double)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_wakeTimerFired;
- (id)_backgroundModes;
- (void)endBackgroundTask:(unsigned long long)arg1;
- (unsigned long long)beginBackgroundTaskWithName:(id)arg1 expirationHandler:(CDUnknownBlockType)arg2;
- (unsigned long long)beginBackgroundTaskWithExpirationHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) double backgroundTimeRemaining;
@property(readonly, nonatomic) long long applicationState;
- (_Bool)_executableWasLinkedWithUIKit;
- (_Bool)shouldFenceStatusBarRotation;
- (_Bool)_shouldIgnoreHeadsetClicks;
- (void)_setIgnoreHeadsetClicks:(_Bool)arg1;
- (void)_endShowingNetworkActivityIndicator;
- (void)_beginShowingNetworkActivityIndicator;
- (void)_hideNetworkActivityIndicator;
- (_Bool)_taskSuspendingUnsupported;
- (_Bool)_fakingRequiresHighResolution;
- (_Bool)_requiresHighResolution;
- (_Bool)_isViewContentScalingDisabled;
- (void)_setShouldZoom:(_Bool)arg1;
- (_Bool)_shouldZoom;
- (_Bool)_isClassic;
- (id)scheduledLocalNotifications;
- (void)setScheduledLocalNotifications:(id)arg1;
- (void)cancelAllLocalNotifications;
- (void)cancelLocalNotification:(id)arg1;
- (void)scheduleLocalNotification:(id)arg1;
- (void)validateNotification:(id)arg1;
- (void)presentLocalNotificationNow:(id)arg1;
- (void)registerForRemoteNotificationTypes:(unsigned long long)arg1;
- (unsigned long long)enabledRemoteNotificationTypes;
- (void)unregisterForRemoteNotifications;
- (_Bool)isRegisteredForRemoteNotifications;
- (void)registerForRemoteNotifications;
- (id)currentUserNotificationSettings;
- (void)registerUserNotificationSettings:(id)arg1;
- (_Bool)_supportsShakesWhenNotActive;
- (void)stopModal;
- (void)runModal:(id)arg1;
- (long long)alertInterfaceOrientation;
- (id)displayIDForURLScheme:(id)arg1 isPublic:(_Bool)arg2;
- (_Bool)canShowAlerts;
- (void)requestDeviceUnlock;
- (_Bool)isPasscodeRequiredToUnlock;
- (_Bool)isLocked;
- (void)setHasMiniAlerts:(_Bool)arg1;
- (void)willDismissMiniAlert;
- (void)willDisplayMiniAlert;
- (void)didDismissMiniAlert;
- (void)didDismissActionSheet;
- (_Bool)_isWindowServerHostingManaged;
- (void)_bringContextToFront:(id)arg1;
- (void)_sendOrderedOutContextsAndInvalidate:(_Bool)arg1;
- (void)applicationDidOrderOutContext:(id)arg1 forWindow:(id)arg2;
- (void)applicationWillOrderInContext:(id)arg1 forWindow:(id)arg2;
- (void)_setApplicationBackdropStyle:(long long)arg1;
- (void)_setApplicationIsOpaque:(_Bool)arg1;
- (void)setExpectsFaceContact:(_Bool)arg1 inLandscape:(_Bool)arg2;
- (void)setExpectsFaceContact:(_Bool)arg1;
- (_Bool)_isAutorotationDisabledForAppWindows;
- (id)_rootViewControllers;
@property(readonly, nonatomic) NSArray *windows;
@property(readonly, nonatomic) UIWindow *keyWindow;
- (void)clearHardwareKeyboardState;
- (void)setHardwareKeyboardLayoutName:(id)arg1;
- (_Bool)becomeFirstResponder;
- (id)textInputMode;
- (void)_sendMoveEventWithDirection:(long long)arg1 fromEvent:(id)arg2;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)handleKeyEvent:(struct __GSEvent *)arg1;
- (void)_handleKeyEvent:(struct __GSEvent *)arg1;
- (id)keyCommands;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)handleKeyUIEvent:(id)arg1;
- (void)handleKeyHIDEvent:(struct __IOHIDEvent *)arg1;
- (struct __GSKeyboard *)GSKeyboardForHWLayout:(id)arg1 forceRebuild:(_Bool)arg2;
- (void)_handleUnicodeEvent:(struct __IOHIDEvent *)arg1;
- (void)sendEvent:(id)arg1;
- (id)_motionKeyWindow;
- (_Bool)_needsShakesWhenInactive;
- (_Bool)handleEvent:(struct __GSEvent *)arg1 withNewEvent:(id)arg2;
- (_Bool)handleEvent:(struct __GSEvent *)arg1;
- (_Bool)_handlePhysicalButtonEvent:(id)arg1;
- (void)_handleHIDEvent:(struct __IOHIDEvent *)arg1;
- (void)_updateOrientation;
- (void)_handleApplicationActivationWithScene:(id)arg1 transitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handleApplicationLifecycleEventWithScene:(id)arg1 transitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_handleApplicationLaunchEventWithCompletion:(CDUnknownBlockType)arg1;
- (id)_getActivityContinuationDictionaryIfPresent:(id)arg1;
- (void)_handleActivityContinuation:(id)arg1;
- (_Bool)_callDelegateWillContinueActivityWithType:(id)arg1;
- (_Bool)_callContinueUserActivity:(id)arg1;
- (void)_removeDocument:(id)arg1 forUserActivity:(id)arg2;
- (void)_addDocument:(id)arg1 forUserActivity:(id)arg2;
- (void)_removeResponder:(id)arg1 forUserActivity:(id)arg2;
- (void)_addResponder:(id)arg1 forUserActivity:(id)arg2;
- (void)_removeResponder:(id)arg1 document:(id)arg2 forUserActivity:(id)arg3;
- (void)_cleanupUserActivity:(id)arg1 activityIdentifier:(id)arg2;
- (void)_addResponder:(id)arg1 document:(id)arg2 forUserActivity:(id)arg3;
- (void)userActivityWillSave:(id)arg1;
- (void)_userActivityWillSave:(id)arg1;
- (void)_checkActivityContinuationAndBecomeCurrentIfNeeded;
- (void)_findBestActivityToMakeCurrent:(id)arg1;
- (_Bool)_activityContinuationsAreBeingTracked;
- (void)_deactivateReachability;
- (void)_setReachabilitySupported:(_Bool)arg1;
- (void)_updateSnapshotForBackgroundApplication:(_Bool)arg1;
- (void)_updateSnapshotAndStateRestorationArchiveForBackgroundEvent:(CDUnknownBlockType)arg1 saveState:(_Bool)arg2 exitIfCouldNotRestoreState:(_Bool)arg3;
- (void)_sendWillEnterForegroundCallbacks;
- (void)_setVirtualWindowSizeInSceneReferenceSpace:(struct CGSize)arg1 virtualHorizontalSizeClass:(long long)arg2 virtualVerticalSizeClass:(long long)arg3;
- (void)_handleNonLaunchSpecificActions:(id)arg1 forScene:(id)arg2 withTransitionContext:(id)arg3;
- (void)_cancelUnfinishedTouchesForEvent:(id)arg1;
- (void)_cancelAllInputs;
- (void)_cancelAllTouches;
- (void)_cancelTouches:(id)arg1 withEvent:(id)arg2;
- (_Bool)_isSendingEventForProgrammaticTouchCancellation;
- (void)_cancelViewProcessingOfTouches:(id)arg1 withEvent:(id)arg2 sendingTouchesCancelledToViewsOfTouches:(id)arg3;
- (void)_cancelTouches:(id)arg1 withEvent:(id)arg2 includingGestures:(_Bool)arg3 notificationBlock:(CDUnknownBlockType)arg4;
- (void)_cancelGestureRecognizersForView:(id)arg1;
- (void)_cancelGestureRecognizers:(id)arg1;
- (void)_finishButtonEvent:(id)arg1;
- (void)_cancelPhysicalButtonsWithType:(long long)arg1;
- (_Bool)_prepareButtonEvent:(id)arg1 type:(long long)arg2 phase:(long long)arg3 timestamp:(double)arg4;
- (void)_sendButtonEventWithType:(long long)arg1 phase:(long long)arg2 timestamp:(double)arg3;
- (void)_setPhysicalButton:(id)arg1 forType:(long long)arg2;
- (id)_physicalButtonForType:(long long)arg1;
- (id)_gestureRecognizersForResponder:(id)arg1;
- (id)_keyWindowForScreen:(id)arg1;
- (void)_enableTouchCoalescingWithCount:(long long)arg1;
- (void)_disableTouchCoalescingWithCount:(long long)arg1;
- (_Bool)_shouldDisableTouchCoalescing;
- (_Bool)_shouldDelayTouchesForControlCenter;
- (_Bool)_didEatCurrentTouch;
- (void)_eatCurrentTouch;
- (void)_playbackEvents:(id)arg1 atPlaybackRate:(float)arg2 messageWhenDone:(id)arg3 withSelector:(SEL)arg4;
- (void)_removeRecorder:(id)arg1;
- (void)_addRecorder:(id)arg1;
- (void)_startPlaybackTimer;
- (void)_stopPlayback;
- (void)_playbackTimerCallback:(id)arg1;
- (void)_purgeSharedInstances;
- (void)setReceivesMemoryWarnings:(_Bool)arg1;
- (void)_receivedMemoryNotification;
- (void)didReceiveMemoryWarning;
- (void)_performMemoryWarning;
- (_Bool)_isHandlingMemoryWarning;
- (void)_processScriptEvent:(struct __GSEvent *)arg1;
- (void)_dumpScreenContents:(struct __GSEvent *)arg1;
- (void)_dumpUIHierarchy:(struct __GSEvent *)arg1;
- (void)setSystemVolumeHUDEnabled:(_Bool)arg1;
- (void)setSystemVolumeHUDEnabled:(_Bool)arg1 forAudioCategory:(id)arg2;
- (void)setSuspensionAnimationDelay:(double)arg1;
- (void)setProximityEventsEnabled:(_Bool)arg1;
- (float)backlightLevel;
- (_Bool)_overridesDynamicCaret;
- (_Bool)_isSensitiveUIEnabled;
- (void)setBacklightLevel:(float)arg1;
- (void)vibrateForDuration:(int)arg1;
- (void)_unregisterForUserDefaultsChanges;
- (void)_registerForUserDefaultsChanges;
- (void)_cancelCurrentTouchEvent;
- (void)_clearTouchesForView:(id)arg1;
- (void)userDefaultsDidChange:(id)arg1;
- (void)_handleUserDefaultsDidChange:(id)arg1;
- (void)batteryStatusDidChange:(id)arg1;
- (void)significantTimeChange;
- (unsigned long long)blockInteractionEventsCount;
- (_Bool)ignoresInteractionEvents;
- (void)setIgnoresInteractionEvents:(_Bool)arg1;
- (_Bool)_usesEmoji;
- (void)setStatusBarShowsProgress:(_Bool)arg1;
- (void)_setStatusBarShowsProgress:(_Bool)arg1;
- (double)windowRotationDuration;
- (void)setStatusBarMode:(int)arg1 duration:(float)arg2;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(long long)arg2 duration:(float)arg3;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(long long)arg2 duration:(float)arg3 fenceID:(int)arg4;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(long long)arg2 duration:(float)arg3 fenceID:(int)arg4 animation:(int)arg5 startTime:(double)arg6;
- (void)setStatusBarMode:(int)arg1 interfaceOrientation:(long long)arg2 duration:(float)arg3 fenceID:(int)arg4 animation:(int)arg5;
- (long long)_getSpringBoardOrientation;
- (void)noteActiveInterfaceOrientationDidChangeToOrientation:(long long)arg1 willAnimateWithSettings:(id)arg2 fromOrientation:(long long)arg3;
- (void)noteActiveInterfaceOrientationWillChangeToOrientation:(long long)arg1;
- (long long)activeInterfaceOrientation;
- (double)statusBarHeight;
- (double)statusBarHeightForOrientation:(long long)arg1 ignoreHidden:(_Bool)arg2;
- (double)statusBarHeightForOrientation:(long long)arg1;
@property(readonly, nonatomic) struct CGRect statusBarFrame;
- (struct CGRect)statusBarFrameForOrientation:(long long)arg1;
- (void)statusBar:(id)arg1 didAnimateFromHeight:(double)arg2 toHeight:(double)arg3 animation:(int)arg4;
- (void)statusBar:(id)arg1 willAnimateFromHeight:(double)arg2 toHeight:(double)arg3 duration:(double)arg4 animation:(int)arg5;
- (long long)statusBar:(id)arg1 styleForRequestedStyle:(long long)arg2 overrides:(int)arg3;
- (void)_setUserDefaultsSyncEnabled:(_Bool)arg1;
- (_Bool)_isTrackingAnyTouch;
- (_Bool)_rotationDisabledDuringTouch;
- (void)_setRotationDisabledDuringTouch:(_Bool)arg1;
- (id)_exclusiveTouchWindows;
- (void)motionEnded:(long long)arg1 withEvent:(id)arg2;
- (_Bool)_alertWindowShouldRotate;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_showEditAlertView;
- (void)_showEditAlertViewWithUndoManager:(id)arg1 window:(id)arg2;
- (void)_sendRemoteControlEvent:(long long)arg1;
- (id)_remoteControlEvent;
- (void)_sendMotionCancelled:(long long)arg1;
- (void)_sendMotionEnded:(long long)arg1;
- (void)_sendMotionBegan:(long long)arg1;
- (id)_physicalKeyboardEvent;
- (id)_physicalButtonsEvent;
- (id)_wheelEvent;
- (id)_moveEvent;
- (id)_motionEvent;
- (id)_touchesEvent;
- (id)_event;
- (long long)_frontMostAppOrientation;
- (void)_setStatusBarMode:(int)arg1;
- (int)statusBarMode;
- (void)_removeDefaultInterfaceOrientatationOverride;
- (void)_overrideDefaultInterfaceOrientationWithOrientation:(long long)arg1;
- (long long)interfaceOrientation;
- (void)_fetchInfoPlistFlags;
- (long long)_classicMode;
- (_Bool)_shouldUseHiResForClassic;
- (void)_setClassicMode:(long long)arg1;
- (_Bool)homeScreenCanAddIcons;
- (void)addWebClipToHomeScreen:(id)arg1;
@property(readonly, nonatomic) long long userInterfaceLayoutDirection;
@property(readonly, nonatomic, getter=isProtectedDataAvailable) _Bool protectedDataAvailable;
@property(nonatomic) _Bool applicationSupportsShakeToEdit;
@property(nonatomic) long long applicationIconBadgeNumber;
- (void)setApplicationBadgeString:(id)arg1;
- (void)removeStatusBarItem:(int)arg1;
- (void)addStatusBarItem:(int)arg1;
- (void)addStatusBarItem:(int)arg1 removeOnExit:(_Bool)arg2;
- (void)removeStatusBarImageNamed:(id)arg1;
- (void)addStatusBarImageNamed:(id)arg1 removeOnExit:(_Bool)arg2;
- (void)addStatusBarImageNamed:(id)arg1;
- (void)setNewsstandIconImage:(id)arg1;
- (_Bool)launchApplicationWithIdentifier:(id)arg1 suspended:(_Bool)arg2;
- (_Bool)_isMotionEvent:(struct __GSEvent *)arg1;
- (_Bool)_isInteractionEvent:(struct __GSEvent *)arg1;
- (double)defaultImageSnapshotExpiration;
- (_Bool)removeDefaultImage:(id)arg1 forScreen:(id)arg2;
- (_Bool)removeDefaultImage:(id)arg1;
- (void)prepareForDefaultImageSnapshotForScreen:(id)arg1;
- (void)prepareForDefaultImageSnapshot;
- (_Bool)_updateDefaultImage;
- (id)pathToDefaultImageNamed:(id)arg1 forScreen:(id)arg2;
- (id)nameOfDefaultImageToUpdateAtSuspension;
- (struct CGImage *)_createDefaultImageSnapshotForScreen:(id)arg1;
- (struct CGRect)applicationSnapshotRectForScreen:(id)arg1 orientation:(long long)arg2;
- (struct CGRect)applicationSnapshotRectForOrientation:(long long)arg1;
- (id)_localCachesDirectory;
- (id)userCachesDirectory;
- (id)userLibraryDirectory;
- (id)userHomeDirectory;
- (_Bool)usesBackgroundNetwork;
- (void)setUsesBackgroundNetwork:(_Bool)arg1;
- (void)showNetworkPromptsIfNecessary:(_Bool)arg1;
- (void)showTTYPromptForNumber:(id)arg1 withID:(int)arg2;
- (_Bool)isHandlingURL;
- (void)_setHandlingURL:(_Bool)arg1 url:(id)arg2;
- (_Bool)isHandlingOpenShortCut;
- (void)_applicationHandleSiriTask:(id)arg1;
- (void)_applicationOpenURL:(id)arg1 payload:(id)arg2;
- (void)applicationOpenURL:(id)arg1;
- (void)applicationOpenToShortCut:(id)arg1;
- (_Bool)canOpenURL:(id)arg1;
- (_Bool)openURL:(id)arg1;
- (_Bool)_canOpenURL:(id)arg1 publicURLsOnly:(_Bool)arg2;
- (id)_applicationProxyForURLScheme:(id)arg1 publicURLsOnly:(_Bool)arg2;
- (id)displayIdentifier;
- (void)updateSuspendedSettings:(id)arg1;
- (void)_destroyContextsAndNotifySpringBoard;
- (void)_setCompatibilityModeOnSettings:(id)arg1;
- (void)_handleApplicationDectivationWithScene:(id)arg1 shouldForceExit:(_Bool)arg2 transitionContext:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)applicationSuspend;
- (void)terminateWithSuccess;
- (void)_terminateWithStatus:(int)arg1;
- (id)_snapshotContextWithName:(id)arg1 screen:(id)arg2;
- (id)_sceneIDForScreen:(id)arg1;
- (_Bool)_saveSnapshotWithName:(id)arg1;
- (void)_handleHeadsetButtonTripleClick;
- (void)_handleHeadsetButtonDoubleClick;
- (void)_handleHeadsetButtonClick;
- (void)_headsetButtonUp:(struct __IOHIDEvent *)arg1;
- (void)_headsetButtonDown:(struct __IOHIDEvent *)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)_postSimpleRemoteNotificationForAction:(long long)arg1 andContext:(long long)arg2 trackID:(id)arg3;
- (void)_postSimpleRemoteNotificationForAction:(long long)arg1 andContext:(long long)arg2;
- (void)resetIdleTimerAndUndim;
- (void)lockDevice:(struct __GSEvent *)arg1;
- (void)accessoryKeyStateChanged:(struct __GSEvent *)arg1;
- (void)proximityStateChanged:(_Bool)arg1;
- (void)acceleratedInX:(float)arg1 Y:(float)arg2 Z:(float)arg3;
- (void)volumeChanged:(struct __GSEvent *)arg1;
- (void)setWantsLockEvents:(_Bool)arg1;
- (void)setWantsVolumeButtonEvents:(_Bool)arg1;
- (void)ringerChanged:(int)arg1;
- (void)_scrollsToTopInitiatorView:(id)arg1 touchesEnded:(id)arg2 withEvent:(id)arg3;
- (void)menuButtonUp:(struct __GSEvent *)arg1;
- (void)menuButtonDown:(struct __GSEvent *)arg1;
- (void)headsetAvailabilityChanged:(struct __GSEvent *)arg1;
- (void)headsetButtonUp:(struct __GSEvent *)arg1;
- (void)headsetButtonDown:(struct __GSEvent *)arg1;
- (void)lockButtonUp:(struct __GSEvent *)arg1;
- (void)lockButtonDown:(struct __GSEvent *)arg1;
- (void)mediaKeyUp:(struct __GSEvent *)arg1;
- (void)mediaKeyDown:(struct __GSEvent *)arg1;
- (unsigned int)_frontmostApplicationPort;
- (void)suspendReturningToLastApp:(_Bool)arg1;
- (void)suspend;
- (_Bool)_isLaunchedSuspended;
- (_Bool)_isResuming;
- (_Bool)systemIsAnimatingApplicationLifecycleEvent;
- (void)_setSuspendedUnderLock:(_Bool)arg1;
- (void)_setSuspendedEventsOnly:(_Bool)arg1;
- (_Bool)isRunningInTaskSwitcher;
- (_Bool)isSuspendedUnderLock;
- (_Bool)isSuspendedEventsOnly;
- (_Bool)isSuspended;
- (void)_setSuspended:(_Bool)arg1;
- (void)applicationWillTerminate;
- (void)applicationDidResumeForEventsOnly;
- (void)applicationDidResume;
- (void)applicationDidResumeFromUnderLock;
- (void)applicationDidEndResumeAnimation;
- (void)applicationDidBeginSuspendAnimation;
- (void)applicationWillSuspendUnderLock;
- (void)applicationWillSuspendForEventsOnly;
- (void)applicationWillSuspend;
- (_Bool)_isStatusBarTintColorLocked;
- (_Bool)_hasStatusBarTintColorLockingController;
- (void)_removeViewControllerForLockingStatusBarTintColor:(id)arg1;
- (void)_addViewControllerForLockingStatusBarTintColor:(id)arg1;
- (void)_popStatusBarTintColorLock;
- (void)_pushStatusBarTintColorLock;
- (double)_currentTintViewDuration;
- (void)_popTintViewDuration;
- (void)_pushTintViewDuration:(double)arg1;
- (void)_updateCurrentTintViewForWindow:(id)arg1;
- (void)_updateCurrentTintViewColor;
- (void)_setDefaultTopNavBarTintColor:(id)arg1;
- (id)_defaultTopNavBarTintColor;
- (id)_currentTintViewWindow;
- (_Bool)_shouldTintStatusBar;
- (void)_setTopNavBarTintColor:(id)arg1 withDuration:(double)arg2;
- (void)setDoubleHeightStatusText:(id)arg1;
- (void)setDoubleHeightPrefixText:(id)arg1;
- (int)doubleHeightMode;
- (void)setDoubleHeightMode:(int)arg1;
- (void)setDoubleHeightMode:(int)arg1 glowAnimationEnabled:(_Bool)arg2;
- (void)setDoubleHeightStatusText:(id)arg1 forStyle:(long long)arg2;
- (void)setGlowAnimationEnabled:(_Bool)arg1 forStyle:(long long)arg2;
- (void)removeStatusBarStyleOverrides:(int)arg1;
- (void)addStatusBarStyleOverrides:(int)arg1;
@property(readonly, nonatomic) double statusBarOrientationAnimationDuration;
- (unsigned long long)_supportedInterfaceOrientationsForWindow:(id)arg1;
- (unsigned long long)supportedInterfaceOrientationsForWindow:(id)arg1;
- (void)_setSupportedInterfaceOrientationsIsEnabled:(_Bool)arg1;
- (_Bool)_legacyAutorotationIsDisabled;
- (_Bool)_supportedInterfaceOrientationsIsEnabled;
- (_Bool)_statusBarOrientationFollowsWindow:(id)arg1;
- (long long)_statusBarOrientationForWindow:(id)arg1;
@property(nonatomic) long long statusBarOrientation;
- (void)setStatusBarOrientation:(long long)arg1 animated:(_Bool)arg2;
- (void)_setStatusBarOrientation:(long long)arg1;
- (void)_setStatusBarOrientation:(long long)arg1 animated:(_Bool)arg2;
- (void)setStatusBarOrientation:(long long)arg1 animation:(int)arg2 duration:(double)arg3;
- (void)setStatusBarOrientation:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBarOrientation:(long long)arg1 animationParameters:(id)arg2 notifySpringBoardAndFence:(_Bool)arg3;
- (void)_notifySpringBoardOfStatusBarOrientationChangeAndFenceWithAnimationDuration:(double)arg1;
- (void)_notifyDidChangeStatusBarFrame:(struct CGRect)arg1;
- (void)_notifyWillChangeStatusBarFrame:(struct CGRect)arg1;
@property(nonatomic, getter=isStatusBarHidden) _Bool statusBarHidden;
- (void)setStatusBarHidden:(_Bool)arg1 withAnimation:(long long)arg2;
- (void)setStatusBarHidden:(_Bool)arg1 duration:(double)arg2;
- (void)setStatusBarHidden:(_Bool)arg1 duration:(double)arg2 changeApplicationFlag:(_Bool)arg3;
- (void)setStatusBarHidden:(_Bool)arg1 animationParameters:(id)arg2;
- (void)_setStatusBarHidden:(_Bool)arg1 animationParameters:(id)arg2 changeApplicationFlag:(_Bool)arg3;
- (_Bool)_isStatusBarHiddenForOrientation:(long long)arg1;
- (_Bool)_isOrientationVerticallyCompact:(long long)arg1;
- (_Bool)_supportsCompactStatusBarHiding;
- (_Bool)_isInStatusBarFadeAnimation;
- (void)setStatusBarHidden:(_Bool)arg1 animationParameters:(id)arg2 changeApplicationFlag:(_Bool)arg3;
@property(nonatomic) long long statusBarStyle;
- (void)setStatusBarStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)setStatusBarStyle:(long long)arg1 duration:(double)arg2;
- (void)setStatusBarStyle:(long long)arg1 animation:(int)arg2;
- (void)setStatusBarStyle:(long long)arg1 animation:(int)arg2 startTime:(double)arg3 duration:(double)arg4 curve:(long long)arg5;
- (void)_setStatusBarStyle:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBarStyle:(long long)arg1 animationParameters:(id)arg2;
- (void)_updateCurrentStatusBarViewControllerAppearance;
- (id)_implicitStatusBarHiddenAnimationParametersWithViewController:(id)arg1 animation:(long long)arg2;
- (id)_implicitStatusBarStyleAnimationParametersWithViewController:(id)arg1;
- (id)_implicitStatusBarAnimationParametersWithClass:(Class)arg1;
- (void)performDisablingStatusBarStyleValidation:(CDUnknownBlockType)arg1;
- (void)_fixupBackgroundHitTestWindow;
- (_Bool)_alwaysHitTestsForMainScreen;
- (void)_setAlwaysHitTestsForMainScreen:(_Bool)arg1;
- (void)_setBackgroundStyle:(long long)arg1;
- (id)statusBarWindow;
- (id)statusBar;
- (void)_createStatusBarWithRequestedStyle:(long long)arg1 orientation:(long long)arg2 hidden:(_Bool)arg3;
- (_Bool)handleDoubleHeightStatusBarTap:(long long)arg1;
@property(nonatomic, getter=isNetworkActivityIndicatorVisible) _Bool networkActivityIndicatorVisible;
- (_Bool)sendAction:(SEL)arg1 to:(id)arg2 from:(id)arg3 forEvent:(id)arg4;
- (_Bool)sendAction:(SEL)arg1 toTarget:(id)arg2 fromSender:(id)arg3 forEvent:(id)arg4;
- (id)_targetInChainForAction:(SEL)arg1 sender:(id)arg2;
- (id)nextResponder;
- (void)popRunLoopMode:(id)arg1 requester:(id)arg2;
- (void)popRunLoopMode:(id)arg1;
- (void)pushRunLoopMode:(id)arg1 requester:(id)arg2;
- (void)pushRunLoopMode:(id)arg1;
- (id)userInfoDictionaryForRunLoopMode:(id)arg1 requester:(id)arg2;
- (int)_loadMainInterfaceFile;
- (int)_loadMainStoryboardFileNamed:(id)arg1 bundle:(id)arg2;
- (int)_loadMainNibFileNamed:(id)arg1 bundle:(id)arg2;
- (void)_registerForLegibilitySettingChangedNotification;
- (void)_registerForPreferredContentSizeChangedNotification;
- (void)_registerForNameLayerTreeNotification;
- (void)_unregisterForTimeChangedNotification;
- (void)_unregisterForLocaleChangedNotification;
- (void)_unregisterForLanguageChangedNotification;
- (void)_unregisterForSignificantTimeChangeNotification;
- (void)_registerForKeyBagLockStatusNotification;
- (void)_registerForLocaleChangedNotification;
- (void)_registerForLocaleWillChangeNotification;
- (void)_registerForLanguageChangedNotification;
- (void)_registerForSignificantTimeChangeNotification;
- (void)_registerForAlertItemStateChangeNotification;
- (long long)_currentExpectedInterfaceOrientation;
- (void)_runWithMainScene:(id)arg1 transitionContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_applicationLaunchesIntoPortrait;
- (double)_launchTime;
- (double)_execOrResumeTime;
- (void)_reportMainSceneUpdateFinished:(CDUnknownBlockType)arg1;
- (void)scene:(id)arg1 didReceiveActions:(id)arg2;
- (void)scene:(id)arg1 didUpdateWithDiff:(id)arg2 transitionContext:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)workspaceNoteAssertionExpirationImminent:(id)arg1;
- (void)workspace:(id)arg1 didReceiveActions:(id)arg2;
- (void)workspace:(id)arg1 willDestroyScene:(id)arg2 withTransitionContext:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)workspace:(id)arg1 didCreateScene:(id)arg2 withTransitionContext:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)workspaceDidEndTransaction:(id)arg1;
- (void)workspaceShouldExit:(id)arg1;
- (void)workspace:(id)arg1 didLaunchWithCompletion:(CDUnknownBlockType)arg2;
- (void)__completeAndRunAsPlugin;
- (void)_run;
- (void)_installEventRunLoopSource;
- (void)_performBlockAfterCATransactionCommits:(CDUnknownBlockType)arg1;
- (void)_addAfterCACommitBlockForViewController:(id)arg1;
- (void)_installAutoreleasePoolsIfNecessaryForMode:(struct __CFString *)arg1;
- (void)_callInitializationDelegatesForMainScene:(id)arg1 transitionContext:(id)arg2;
- (_Bool)_handleDelegateCallbacksWithOptions:(id)arg1 isSuspended:(_Bool)arg2 restoreState:(_Bool)arg3;
- (_Bool)_hasStoryboard;
- (id)_mainStoryboardName;
- (id)_newSceneForWindow:(id)arg1 oldDisplay:(id)arg2 newDisplay:(id)arg3;
- (id)_mainSceneForDisplay:(id)arg1;
- (_Bool)_hasCalledRunWithMainScene;
- (id)_mainScene;
- (id)_workspace;
- (_Bool)_isSpringBoard;
- (_Bool)isFrontBoard;
- (_Bool)_isSpringBoardShowingAnAlert;
- (_Bool)_hasNormalRestorationCompleted;
- (void)_setRestorationExtended:(_Bool)arg1;
- (_Bool)_isRestorationExtended;
- (_Bool)_isNormalRestorationInProgress;
- (_Bool)_hasApplicationCalledLaunchDelegate;
- (_Bool)_isActivated;
- (void)_stopDeactivatingForReason:(int)arg1;
- (void)_deactivateForReason:(int)arg1;
- (void)_deactivateForReason:(int)arg1 notify:(_Bool)arg2;
@property(nonatomic, getter=isIdleTimerDisabled) _Bool idleTimerDisabled;
- (void)_setIdleTimerDisabled:(_Bool)arg1 forReason:(id)arg2;
- (id)idleTimerDisabledReasons;
- (_Bool)isIgnoringInteractionEvents;
- (void)endIgnoringInteractionEvents;
- (void)beginIgnoringInteractionEvents;
@property(nonatomic) id <UIApplicationDelegate> delegate;
- (void)_setDelegate:(id)arg1 assumeOwnership:(_Bool)arg2;
- (_Bool)shouldLaunchSafe;
- (void)_setAmbiguousControlCenterActivationMargin:(double)arg1;
- (id)_launchTestName;
- (id)_extendLaunchTest;
- (void)dealloc;
- (id)init;
- (void)_setShouldFixMainThreadPriority:(_Bool)arg1;
- (void)_restoreApplicationPreservationStateWithSessionIdentifier:(id)arg1 beginHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)ignoreSnapshotOnNextApplicationLaunch;
- (void)completeStateRestoration;
- (void)extendStateRestoration;
- (void)_saveApplicationPreservationState:(id)arg1 viewController:(id)arg2 sessionIdentifier:(id)arg3 beginHandler:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_setSaveStateRestorationArchiveWithFileProtectionCompleteUntilFirstUserAuthentication;
- (void)removeApplicationPreservationStateWithSessionIdentifier:(id)arg1;
- (void)restoreApplicationPreservationStateWithSessionIdentifier:(id)arg1 viewController:(id)arg2 beginHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)saveApplicationPreservationStateWithSessionIdentifier:(id)arg1 viewController:(id)arg2 beginHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_saveApplicationPreservationStateIfSupported;
- (_Bool)_doRestorationIfNecessary;
- (void)setStatusBarHidden:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isProximitySensingEnabled) _Bool proximitySensingEnabled;
- (void)rotateIfNeeded:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)rotateIfNeeded:(long long)arg1;
- (void)testPrep:(id)arg1 options:(id)arg2;
- (void)stopLeaking;
- (void)startLeaking;
- (void)_leak;
- (void)enableFramebufferStatisticsGathering;
- (void)stopCHUDRecording;
- (void)startCHUDRecording:(id)arg1;
- (long long)_testOrientation:(id)arg1 options:(id)arg2;
- (_Bool)_isSupportedOrientation:(long long)arg1;
- (_Bool)handleTestURL:(id)arg1;
- (void)failedTest:(id)arg1 withResults:(id)arg2;
- (void)failedTest:(id)arg1;
- (void)finishedTest:(id)arg1 waitForCommit:(_Bool)arg2 extraResults:(id)arg3 withTeardownBlock:(CDUnknownBlockType)arg4;
- (void)finishedTest:(id)arg1 waitForCommit:(_Bool)arg2 extraResults:(id)arg3;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 withTeardownBlock:(CDUnknownBlockType)arg3;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2;
- (void)finishedTest:(id)arg1;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2 waitForNotification:(id)arg3 withTeardownBlock:(CDUnknownBlockType)arg4;
- (void)_reportResults:(id)arg1;
- (struct __CFMessagePort *)_purplePPTServerPort;
- (void)finishedIPTest:(id)arg1 extraResults:(id)arg2;
- (void)finishedIPTest:(id)arg1;
- (void)startedIPTest:(id)arg1;
- (_Bool)isPPTAvailable;
- (void)_sendDictionaryToPPT:(id)arg1;
- (void)finishedSubTest:(id)arg1 forTest:(id)arg2;
- (void)startedSubTest:(id)arg1 forTest:(id)arg2 withMetrics:(id)arg3;
- (void)startedSubTest:(id)arg1 forTest:(id)arg2;
- (id)subTest:(id)arg1 ForTest:(id)arg2 withMetrics:(id)arg3;
- (id)resultsForTest:(id)arg1;
- (void)startedTest:(id)arg1;
- (id)_currentFrameCountForTestDisplay;
- (_Bool)isRunningSuspendTest;
- (_Bool)isRunningQuitTest;
- (_Bool)isRunningTest:(id)arg1;
- (_Bool)isRunningTest;
- (_Bool)shouldRecordExtendedLaunchTime;
- (void *)_getSymbol:(id)arg1 forFramework:(id)arg2;
- (id)_pathForFrameworkName:(id)arg1 inPrivate:(_Bool)arg2;
- (_Bool)reportApplicationSuspended;
- (void)runTest:(id)arg1 startingBeforeAnimation:(id)arg2 stoppingAfterAnimation:(id)arg3;
- (void)runTest:(id)arg1 forAnimation:(id)arg2;
- (void)_noteAnimationFinished:(id)arg1;
- (void)_noteAnimationStarted:(id)arg1;
- (void)installCACommitCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_executeResizeTest;
- (void)_executeNextResizeSubTest;
- (_Bool)runTest:(id)arg1 options:(id)arg2;
- (id)_currentTests;
- (_Bool)launchedToTest;
- (_Bool)_shouldHandleTestURL:(id)arg1;
- (void)_accessibilityStatusChanged:(id)arg1;
- (void)_accessibilityInit;
- (void)_accessibilitySetUpQuickSpeak;
- (void)_updateLargeTextNotification;
- (void)_updateApplicationAccessibility;
- (Class)_accessibilityBundlePrincipalClass;
- (_Bool)_accessibilityApplicationIsSystemWideServer;
- (void)_updateAccessibilitySettingsLoader;
- (void)_updateAccessibilityItunesSettings;
- (id)_accessibilitySettingsBundle;
- (_Bool)_accessibilityCaptureSimulatorEvent:(struct __GSEvent *)arg1;
- (void)_sheetWithRemoteIdentifierDidDismiss:(id)arg1;
- (void)endRemoteSheet:(id)arg1 returnCode:(long long)arg2 dismissAnimated:(_Bool)arg3;
- (void)endRemoteSheet:(id)arg1 returnCode:(long long)arg2;
- (void)endRemoteSheet:(id)arg1;
- (void)beginRemoteSheetController:(id)arg1 viewOrNil:(id)arg2 delegate:(id)arg3 didEndSelector:(SEL)arg4 contextInfo:(void *)arg5 requireTopApplication:(_Bool)arg6 opaque:(_Bool)arg7 presentAnimated:(_Bool)arg8;
- (void)beginRemoteSheetController:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4 requireTopApplication:(_Bool)arg5 opaque:(_Bool)arg6 presentAnimated:(_Bool)arg7;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4 requireTopApplication:(_Bool)arg5 opaque:(_Bool)arg6 presentAnimated:(_Bool)arg7;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4 requireTopApplication:(_Bool)arg5 presentAnimated:(_Bool)arg6;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4 requireTopApplication:(_Bool)arg5;
- (void)beginRemoteSheet:(id)arg1 delegate:(id)arg2 didEndSelector:(SEL)arg3 contextInfo:(void *)arg4;
- (void)_alertSheetStackChanged;
- (void)runTestForKeyboardSplitAndMergeWithName:(id)arg1 withShowKeyboardBlock:(CDUnknownBlockType)arg2 withExtraResultsBlock:(CDUnknownBlockType)arg3 withCleanupBlock:(CDUnknownBlockType)arg4;
- (void)runTestForKeyboardRotationWithName:(id)arg1 fromOrientation:(long long)arg2 withShowKeyboardBlock:(CDUnknownBlockType)arg3 withExtraResultsBlock:(CDUnknownBlockType)arg4 withCleanupBlock:(CDUnknownBlockType)arg5;
- (void)runTestForKeyboardBringupAndDismissalWithName:(id)arg1 withShowKeyboardBlock:(CDUnknownBlockType)arg2 withHideKeyboardBlock:(CDUnknownBlockType)arg3 withExtraResultsBlock:(CDUnknownBlockType)arg4 withCleanupBlock:(CDUnknownBlockType)arg5;
- (void)_runSubTestForKeyboardMergeWithName:(id)arg1 withExtraResultsBlock:(CDUnknownBlockType)arg2 withCleanupBlock:(CDUnknownBlockType)arg3;
- (void)_runSubTestForKeyboardSplitWithName:(id)arg1 withShowKeyboardBlock:(CDUnknownBlockType)arg2 withExtraResultsBlock:(CDUnknownBlockType)arg3 withCleanupBlock:(CDUnknownBlockType)arg4;
- (void)_runSubTestForKeyboardDismissalWithName:(id)arg1 withHideKeyboardBlock:(CDUnknownBlockType)arg2 withExtraResultsBlock:(CDUnknownBlockType)arg3 withCleanupBlock:(CDUnknownBlockType)arg4;
- (void)_runSubTestForKeyboardBringupWithName:(id)arg1 withShowKeyboardBlock:(CDUnknownBlockType)arg2 withHideKeyboardBlock:(CDUnknownBlockType)arg3 withExtraResultsBlock:(CDUnknownBlockType)arg4 withCleanupBlock:(CDUnknownBlockType)arg5;
- (void)showKeyboardUsingBlock:(CDUnknownBlockType)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)installNotificationObserverForNotificationName:(id)arg1 forOneNotification:(_Bool)arg2 usingBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIApplicationExtensionActivity : UIActivity
{
    NSExtension *_applicationExtension;
    NSExtensionItem *__injectedExtensionItem;
    UIViewController *_extensionViewController;
    id _extensionContextIdentifier;
    UIViewController *_presenterViewController;
    CDUnknownBlockType _presenterCompletion;
    _UIActivityBundleHelper *_activityBundleHelper;
    NSString *_localizedExtensionBundleName;
    UIImage *_renderedActivityImage;
    UIImage *_renderedActivitySettingsImage;
    CDUnknownBlockType _extensionRequestCleanupCompletion;
}

+ (long long)activityCategory;
+ (id)_applicationExtensionActivitiesForItems:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType extensionRequestCleanupCompletion; // @synthesize extensionRequestCleanupCompletion=_extensionRequestCleanupCompletion;
@property(retain, nonatomic) UIImage *renderedActivitySettingsImage; // @synthesize renderedActivitySettingsImage=_renderedActivitySettingsImage;
@property(retain, nonatomic) UIImage *renderedActivityImage; // @synthesize renderedActivityImage=_renderedActivityImage;
@property(copy, nonatomic) NSString *localizedExtensionBundleName; // @synthesize localizedExtensionBundleName=_localizedExtensionBundleName;
@property(retain, nonatomic) _UIActivityBundleHelper *activityBundleHelper; // @synthesize activityBundleHelper=_activityBundleHelper;
@property(copy, nonatomic) CDUnknownBlockType presenterCompletion; // @synthesize presenterCompletion=_presenterCompletion;
@property(nonatomic) UIViewController *presenterViewController; // @synthesize presenterViewController=_presenterViewController;
@property(copy, nonatomic) id extensionContextIdentifier; // @synthesize extensionContextIdentifier=_extensionContextIdentifier;
@property(retain, nonatomic) UIViewController *extensionViewController; // @synthesize extensionViewController=_extensionViewController;
@property(retain, nonatomic) NSExtensionItem *_injectedExtensionItem; // @synthesize _injectedExtensionItem=__injectedExtensionItem;
@property(retain, nonatomic) NSExtension *applicationExtension; // @synthesize applicationExtension=_applicationExtension;
- (void)_presentExtensionViewControllerIfPossible;
- (void)_instantiateExtensionViewControllerWithInputItems:(id)arg1;
- (void)_cleanup;
- (_Bool)_dismissActivityFromViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_presentActivityOnViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)_isServiceExtension;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (_Bool)_canBeExcludedByActivityViewController:(id)arg1;
- (id)_activitySettingsImage;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)_injectedJavaScriptResult:(id)arg1;
- (id)debugDescription;
- (void)dealloc;
- (id)initWithApplicationExtension:(id)arg1;

@end

@interface _UIRemoteViewController : UIViewController <_UIRemoteViewController_ViewControllerOperatorInterface, _UIRemoteViewController_TextEffectsOperatorInterface, UIActionSheetDelegate>
{
    NSString *_serviceBundleIdentifier;
    _UIViewServiceInterface *_serviceInterface;
    _UIRemoteViewService *_remoteViewService;
    id _serviceViewControllerProxy;
    id _serviceViewControllerControlMessageProxy;
    NSArray *_serviceViewControllerSupportedInterfaceOrientations;
    unsigned int _serviceAccessibilityServerPort;
    unsigned long long _serviceRegisteredScrollToTopViewCount;
    id _viewControllerOperatorProxy;
    _UIAsyncInvocation *_viewControllerOperatorHalfDisconnectionInvocation;
    id _textEffectsOperatorProxy;
    _UIAsyncInvocation *_textEffectsOperatorHalfDisconnectionInvocation;
    _Bool _fencingCurrentTransaction;
    int _preFencedCommitActionsLock;
    NSMutableArray *_preFencedCommitActions;
    _UISizeTrackingView *_sizeTrackingView;
    _UIRemoteView *_serviceViewControllerRemoteView;
    _UITextEffectsRemoteView *_fullScreenTextEffectsRemoteView;
    _UITextEffectsRemoteView *_textEffectsAboveStatusBarRemoteView;
    _UITextEffectsRemoteView *_remoteKeyboardRemoteView;
    UIView *_fullScreenTextEffectsSnapshotView;
    _Bool _snapshotTextEffectsAfterRotation;
    unsigned int _serviceScreenDisplayID;
    _UIAsyncInvocation *_terminationInvocation;
    int _terminationErrorLock;
    NSError *_terminationError;
    UIActionSheet *_hostedActionSheet;
    _UITextServiceSession *_textServiceSession;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
    UIDimmingView *_hostedDimmingView;
    UIView *_touchGrabbingView;
    long long _preferredStatusBarStyle;
    _Bool _prefersStatusBarHidden;
    _Bool _isFocusDeferred;
    NSString *_deferredDisplayUUID;
    unsigned int _deferredContextID;
    NSArray *_allowedNotifications;
    _Bool _serviceViewShouldShareTouchesWithHost;
    BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion;
}

+ (_Bool)__shouldAllowHostProcessToTakeFocus;
+ (_Bool)__shouldHostRemoteTextEffectsWindow;
+ (id)_requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 service:(id)arg4 connectionHandler:(CDUnknownBlockType)arg5;
+ (id)requestViewControllerWithService:(id)arg1 traitCollection:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
+ (id)requestViewControllerWithService:(id)arg1 connectionHandler:(CDUnknownBlockType)arg2;
+ (id)requestViewController:(id)arg1 traitCollection:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 connectionHandler:(CDUnknownBlockType)arg4;
+ (id)requestViewController:(id)arg1 fromServiceWithBundleIdentifier:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;
+ (_Bool)shouldPropagateAppearanceCustomizations;
@property(nonatomic) _Bool serviceViewShouldShareTouchesWithHost; // @synthesize serviceViewShouldShareTouchesWithHost=_serviceViewShouldShareTouchesWithHost;
@property(retain, nonatomic, setter=_setTouchDeliveryPolicyAssertion:) BKSTouchDeliveryPolicyAssertion *_touchDeliveryPolicyAssertion; // @synthesize _touchDeliveryPolicyAssertion;
- (id)_cancelTouchesForCurrentEventInHostedContent;
- (void)_prepareTouchDeliveryPolicy;
- (void)restoreStateForSession:(id)arg1 anchor:(id)arg2;
- (void)saveStateForSession:(id)arg1 anchor:(id)arg2;
- (void)__dismissTextServiceSessionAnimated:(_Bool)arg1;
- (void)__showServiceForText:(id)arg1 type:(long long)arg2 fromRectValue:(id)arg3 replyHandler:(CDUnknownBlockType)arg4;
- (void)_initializeAccessibilityPortInformation;
- (void)_updateTintColor;
- (void)_appearanceInvocationsDidChange:(id)arg1;
- (id)_appearanceSource;
- (void)__viewServiceDidUpdateTintColor:(id)arg1 duration:(double)arg2;
- (void)viewDidInvalidateIntrinsicContentSize;
- (struct CGSize)intrinsicContentSizeForServiceSize:(struct CGSize)arg1;
- (void)__viewServiceInstrinsicContentSizeDidChange:(struct CGSize)arg1 fenceSendRight:(id)arg2;
- (void)__viewServicePreferredContentSizeDidChange:(struct CGSize)arg1 fenceSendRight:(id)arg2;
- (_Bool)_customizesForPresentationInPopover;
- (void)__viewServicePopoverDidSetUseToolbarShine:(_Bool)arg1;
- (void)__viewServicePopoverDidChangeContentSize:(struct CGSize)arg1 animated:(_Bool)arg2 fenceSendRight:(id)arg3 withReplyHandler:(CDUnknownBlockType)arg4;
- (void)__viewServiceDidPromoteFirstResponder;
- (void)__sendNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)dimmingViewWasTapped:(id)arg1;
- (void)__setViewServiceIsDisplayingPopover:(_Bool)arg1;
- (void)__setSupportedInterfaceOrientations:(id)arg1;
- (void)__viewServiceDidUpdatePreferredStatusBarStyle:(long long)arg1 hidden:(_Bool)arg2;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (_Bool)_requiresKeyboardWindowWhenFirstResponder;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_didRotateFromInterfaceOrientation:(long long)arg1 forwardToChildControllers:(_Bool)arg2 skipSelf:(_Bool)arg3;
- (void)_willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(_Bool)arg3 skipSelf:(_Bool)arg4;
- (void)_willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 forwardToChildControllers:(_Bool)arg3 skipSelf:(_Bool)arg4;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)_ignoreAppSupportedOrientations;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_setDeferred:(_Bool)arg1 forDisplayUUID:(id)arg2;
- (id)_clientDeferralProperties;
- (id)_hostDeferralProperties;
- (void)__willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_addPreFencedCommitAction:(CDUnknownBlockType)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)__dismissActionSheetWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)__presentActionSheetFromYCoordinate:(double)arg1 withTitle:(id)arg2 buttonTitles:(id)arg3 cancelButtonIndex:(long long)arg4 destructiveButtonIndex:(long long)arg5 style:(long long)arg6;
- (void)_firstResponderDidChange:(id)arg1;
- (_Bool)canBecomeFirstResponder;
- (_Bool)_serviceHasScrollToTopView;
- (void)_scrollToTopFromTouchAtViewLocation:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)__viewServiceDidUnregisterScrollToTopView;
- (void)__viewServiceDidRegisterScrollToTopView;
- (void)dealloc;
- (void)_terminateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (id)disconnect;
- (id)_terminateWithError:(id)arg1;
- (void)_setContentOverlayInsets:(struct UIEdgeInsets)arg1;
- (void)_updateTouchGrabbingView;
- (void)_applicationWillDeactivate:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_snapshotAndRemoveTextEffectsRemoteView;
- (void)_restoreTextEffectsRemoteView;
- (void)_applicationDidFinishSuspendSnapshot:(id)arg1;
- (void)_hostDidEnterBackground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_hostWillEnterForeground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_statusBarHeightDidChange:(id)arg1;
- (void)_statusBarOrientationDidChange:(id)arg1;
- (long long)__getPreferredInterfaceOrientation;
- (_Bool)__shouldRemoteViewControllerFenceOperations;
- (id)_addAutoAllowedNotifications:(id)arg1;
- (id)allowedNotifications;
- (void)setAllowedNotifications:(id)arg1;
- (_Bool)inheritsSecurity;
- (void)setInheritsSecurity:(_Bool)arg1;
@property(readonly, nonatomic) CDStruct_4c969caf serviceAuditToken;
@property(readonly, nonatomic) int serviceProcessIdentifier;
@property(readonly, nonatomic) NSString *serviceBundleIdentifier;
- (void)synchronizeAnimationsInActions:(CDUnknownBlockType)arg1;
- (void)loadView;
- (void)_awakeWithConnectionInfo:(id)arg1;
- (id)_initWithViewServiceBundleIdentifier:(id)arg1;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;
- (id)serviceViewControllerProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)serviceViewControllerProxy;
- (void)viewServiceDidTerminateWithError:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIApplicationExtensionViewControllerHost : _UIRemoteViewController
{
}

@end

@interface UIApplicationSceneClientSettings : FBSSceneClientSettings <UIApplicationSceneClientSettings>
{
}

- (_Bool)isUISubclass;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) long long notificationCenterRevealMode;
@property(readonly, nonatomic) long long controlCenterRevealMode;
@property(readonly, nonatomic) unsigned long long proximityDetectionModes;
@property(readonly, nonatomic) _Bool orientationEnabled;
@property(readonly, nonatomic) _Bool idleTimerDisabled;
@property(readonly, nonatomic) long long compatibilityMode;
@property(readonly, nonatomic) double defaultPNGExpirationTime;
@property(readonly, copy, nonatomic) NSString *defaultPNGName;
@property(readonly, nonatomic) _Bool defaultStatusBarHidden;
@property(readonly, nonatomic) long long defaultStatusBarStyle;
@property(readonly, nonatomic) _Bool statusBarHidden;
@property(readonly, nonatomic) long long statusBarStyle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIApplicationSceneClientSettingsDiffInspector : FBSSceneClientSettingsDiffInspector
{
}

- (void)_observeOtherSetting:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)observeNotificationCenterRevealModeWithBlock:(CDUnknownBlockType)arg1;
- (void)observeControlCenterRevealModeWithBlock:(CDUnknownBlockType)arg1;
- (void)observeProximityDetectionModesWithBlock:(CDUnknownBlockType)arg1;
- (void)observeOrientationEnabledWithBlock:(CDUnknownBlockType)arg1;
- (void)observeIdleTimerDisabledWithBlock:(CDUnknownBlockType)arg1;
- (void)observeCompatibilityModeWithBlock:(CDUnknownBlockType)arg1;
- (void)observeDefaultPNGExpirationTimeWithBlock:(CDUnknownBlockType)arg1;
- (void)observeDefaultPNGNameWithBlock:(CDUnknownBlockType)arg1;
- (void)observeDefaultStatusBarHiddenWithBlock:(CDUnknownBlockType)arg1;
- (void)observeDefaultStatusBarStyleWithBlock:(CDUnknownBlockType)arg1;
- (void)observeStatusBarHiddenWithBlock:(CDUnknownBlockType)arg1;
- (void)observeStatusBarStyleWithBlock:(CDUnknownBlockType)arg1;

@end

@interface UIApplicationSceneSettings : FBSSceneSettings <UIApplicationSceneSettings>
{
}

- (_Bool)isUISubclass;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) int statusBarStyleOverridesToSuppress;
@property(readonly, nonatomic) _Bool underLock;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIApplicationSceneSettingsDiffInspector : FBSSceneSettingsDiffInspector
{
}

- (void)_observeOtherSetting:(unsigned long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)observeStatusBarStyleOverridesToSuppressWithBlock:(CDUnknownBlockType)arg1;
- (void)observeUnderLockWithBlock:(CDUnknownBlockType)arg1;

@end

@interface UIApplicationSceneTransitionContext : FBSSceneTransitionContext
{
}

- (_Bool)isUISubclass;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
@property(nonatomic, getter=_lifecycleActionType, setter=_setLifecycleActionType:) unsigned long long lifecycleActionType;
@property(nonatomic) double execTime;
@property(nonatomic) double userLaunchEventTime;
@property(nonatomic) _Bool safeMode;
@property(nonatomic) _Bool forTesting;
@property(retain, nonatomic) NSDictionary *payload;

@end

@interface UIAssignToContactActivity : UIActivity <ABPeoplePickerNavigationControllerDelegate, UINavigationControllerDelegate, UIImagePickerControllerDelegate>
{
    UIImage *_image;
    ABPeoplePickerNavigationController *_peoplePicker;
    void *_person;
    UIImagePickerController *_imagePickerController;
}

@property(retain, nonatomic) UIImagePickerController *imagePickerController; // @synthesize imagePickerController=_imagePickerController;
@property(nonatomic) void *person; // @synthesize person=_person;
@property(retain, nonatomic) ABPeoplePickerNavigationController *peoplePicker; // @synthesize peoplePicker=_peoplePicker;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)_cleanup;
- (id)activityViewController;
- (void)_willPresentAsFormSheet;
- (id)_embeddedActivityViewController;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)activityTitle;
- (id)_activityImage;
- (id)activityType;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDynamicBehavior : NSObject
{
    UIDynamicAnimator *_context;
    NSMutableArray *_items;
    NSMutableArray *_behaviors;
    NSMutableArray *_addedBehaviors;
    _Bool __isPrimitiveBehavior;
    CDUnknownBlockType _action;
}

+ (void)initialize;
@property(nonatomic, setter=_isPrimitiveBehavior:) _Bool _isPrimitiveBehavior; // @synthesize _isPrimitiveBehavior=__isPrimitiveBehavior;
@property(copy, nonatomic) CDUnknownBlockType action; // @synthesize action=_action;
- (id)description;
- (id)_itemsDescription;
- (void)_changedParameterForBody:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *childBehaviors;
- (void)removeChildBehavior:(id)arg1;
- (void)addChildBehavior:(id)arg1;
- (_Bool)allowsAnimatorToStop;
- (void)_dissociate;
- (void)_associate;
- (void)willMoveToAnimator:(id)arg1;
- (void)_reevaluate:(unsigned long long)arg1;
- (void)_step;
- (void)dealloc;
- (id)init;
- (id)_init:(_Bool)arg1;
- (id)items;
@property(readonly, nonatomic) UIDynamicAnimator *dynamicAnimator;
- (id)_context;
- (id)_items;
- (void)_setItems:(id)arg1;
- (void)_setContext:(id)arg1;

@end

@interface UIAttachmentBehavior : UIDynamicBehavior
{
    struct CGPoint _anchorPoint;
    struct CGPoint _anchorPointA;
    struct CGPoint _anchorPointB;
    PKExtendedPhysicsBody *_anchorBody;
    PKPhysicsJoint *_joint;
    double _damping;
    double _frequency;
    double _length;
    long long _type;
    struct {
        unsigned int dampingSet:1;
        unsigned int frequencySet:1;
        unsigned int lengthSet:1;
        unsigned int isRevolute:1;
    } _stateFlags;
    long long _attachedBehaviorType;
}

@property(readonly, nonatomic) long long attachedBehaviorType; // @synthesize attachedBehaviorType=_attachedBehaviorType;
- (id)description;
- (void)_dissociate;
- (void)_associate;
- (void)_reevaluateJoint;
- (void)_changedParameter;
@property(nonatomic) struct CGPoint anchorPoint;
@property(nonatomic) double frequency;
@property(nonatomic) double damping;
@property(nonatomic) double length;
@property(readonly, copy, nonatomic) NSArray *items;
- (long long)type;
- (void)dealloc;
- (id)initWithItem:(id)arg1 point:(struct CGPoint)arg2 attachedToItem:(id)arg3 point:(struct CGPoint)arg4;
- (id)initWithItem:(id)arg1 offsetFromCenter:(struct UIOffset)arg2 attachedToItem:(id)arg3 offsetFromCenter:(struct UIOffset)arg4;
- (id)initWithItem:(id)arg1 offsetFromCenter:(struct UIOffset)arg2 attachedToAnchor:(struct CGPoint)arg3;
- (id)initWithItem:(id)arg1 point:(struct CGPoint)arg2 attachedToAnchor:(struct CGPoint)arg3;
- (id)initWithItem:(id)arg1 attachedToItem:(id)arg2;
- (id)initWithItem:(id)arg1 attachedToAnchor:(struct CGPoint)arg2;
- (id)init;

@end

@interface UIWindow : UIView <NSISEngineDelegate>
{
    id _delegate;
    double _windowLevel;
    double _windowSublevel;
    id _layerContext;
    UIView *_lastMouseDownView;
    UIView *_lastMouseEnteredView;
    UIResponder *_firstResponder;
    id _fingerInfo;
    id _touchData;
    long long _viewOrientation;
    UIView *_exclusiveTouchView;
    NSUndoManager *_undoManager;
    UIScreen *_screen;
    CALayer *_transformLayer;
    NSMutableArray *_rotationViewControllers;
    UIViewController *_rootViewController;
    UIColor *_savedBackgroundColor;
    NSMutableSet *_subtreeMonitoringViews;
    NSMutableSet *_tintViews;
    id _currentTintView;
    struct {
        unsigned int delegateWillRotate:1;
        unsigned int delegateDidRotate:1;
        unsigned int delegateWillAnimateFirstHalf:1;
        unsigned int delegateDidAnimationFirstHalf:1;
        unsigned int delegateWillAnimateSecondHalf:1;
        unsigned int autorotatesToPortrait:1;
        unsigned int autorotatesToPortraitUpsideDown:1;
        unsigned int autorotatesToLandscapeLeft:1;
        unsigned int autorotatesToLandscapeRight:1;
        unsigned int dontBecomeKeyOnOrderFront:1;
        unsigned int output:1;
        unsigned int inGesture:1;
        unsigned int bitsPerComponent:4;
        unsigned int autorotates:1;
        unsigned int isRotating:1;
        unsigned int isUsingOnePartRotationAnimation:1;
        unsigned int isHandlingContentRotation:1;
        unsigned int disableAutorotationCount:4;
        unsigned int needsAutorotationWhenReenabled:1;
        unsigned int forceTwoPartRotationAnimation:1;
        unsigned int orderKeyboardInAfterRotating:1;
        unsigned int roundedCorners:4;
        unsigned int resizesToFullScreen:1;
        unsigned int keepContextInBackground:1;
        unsigned int ignoreSetHidden:1;
        unsigned int forceVisibleOnInit:1;
        unsigned int settingFirstResponder:1;
        unsigned int legacyOrientationChecks:1;
        unsigned int windowResizedToFullScreen:1;
        unsigned int statusBarFollowsOrientation:1;
        unsigned int secure:1;
        unsigned int isMainSceneSized:1;
    } _windowFlags;
    id _windowController;
    _Bool _attachable;
    NSString *_debugName;
    FBSScene *_scene;
    _UIResponderSelectionCursor *_responderSelectionCursor;
    _UISystemGestureGateGestureRecognizer *_systemGestureGateForGestures;
    _UISystemGestureGateGestureRecognizer *_systemGestureGateForTouches;
    UITraitCollection *_traitCollection;
    UITraitCollection *_destinationTraitCollection;
    struct __CFDictionary *_touchMap;
    long long _containedGestureRecognizerMaximumState;
    double _lastTouchTimestamp;
    unsigned int _systemGesturesArePossible:1;
    long long _verticalSizeClassStateRestorationOverride;
    long long _horizontalSizeClassStateRestorationOverride;
    _Bool _shouldDisableTransformLayerScalingForSnapshotting;
    _Bool __containedGestureRecognizersShouldRespectGestureServerInstructions;
    _Bool __usesLegacySupportedOrientationChecks;
    _Bool __shouldHitTestEntireScreen;
    _UIViewControllerNullAnimationTransitionCoordinator *_traitCollectionChangeTransitionCoordinator;
    NSArray *_windowInternalConstraints;
    NSArray *_rootViewConstraints;
    CDUnknownBlockType _deferredLaunchBlock;
    CDUnknownBlockType __rotationCompleteBlock;
    long long _toWindowOrientation;
    long long _fromWindowOrientation;
    _UIWindowAnimationController *__animationController;
    CDUnknownBlockType __shouldPreventRotationHook;
    _UISimulatedApplicationResizeGestureRecognizerDelegate *__simulatedApplicationResizeGestureRecognizerDelegate;
}

+ (_Bool)_isSystemWindow;
+ (_Bool)_isSecure;
+ (id)_findWithDisplayPoint:(struct CGPoint)arg1;
+ (void)_enumerateWindowsIncludingInternalWindows:(_Bool)arg1 onlyVisibleWindows:(_Bool)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (id)allWindowsIncludingInternalWindows:(_Bool)arg1 onlyVisibleWindows:(_Bool)arg2 forScreen:(id)arg3;
+ (id)allWindowsIncludingInternalWindows:(_Bool)arg1 onlyVisibleWindows:(_Bool)arg2;
+ (id)_statusBarControllingWindow;
+ (id)_hitTestToPoint:(struct CGPoint)arg1 forEvent:(id)arg2 windowServerHitTestWindow:(id)arg3 screen:(id)arg4;
+ (id)_topVisibleWindowPassingTest:(CDUnknownBlockType)arg1;
+ (void *)createIOSurfaceFromScreen:(id)arg1;
+ (void *)createScreenIOSurface;
+ (void *)createIOSurfaceOnScreen:(id)arg1 withContextIds:(const unsigned int *)arg2 count:(unsigned long long)arg3 frame:(struct CGRect)arg4 usePurpleGfx:(_Bool)arg5 outTransform:(struct CGAffineTransform *)arg6;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)arg1 count:(unsigned long long)arg2 frame:(struct CGRect)arg3 usePurpleGfx:(_Bool)arg4 outTransform:(struct CGAffineTransform *)arg5;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)arg1 count:(unsigned long long)arg2 frame:(struct CGRect)arg3 outTransform:(struct CGAffineTransform *)arg4;
+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)arg1 count:(unsigned long long)arg2 frame:(struct CGRect)arg3;
+ (void *)createIOSurfaceWithContextId:(unsigned int)arg1 frame:(struct CGRect)arg2;
+ (void)_noteStatusBarHeightChanged:(double)arg1 oldHeight:(double)arg2 forAutolayoutRootViewsOnly:(_Bool)arg3;
+ (void)_noteStatusBarHeightChanged:(double)arg1 oldHeight:(double)arg2;
+ (void)_removeWindowFromStack:(id)arg1;
+ (void)_popKeyWindow:(id)arg1;
+ (void)_popKeyWindow;
+ (void)__popKeyWindow:(id)arg1 findNewKeyWindowIfStackEmpty:(_Bool)arg2;
+ (void)_pushKeyWindow:(id)arg1;
+ (void)_setKeyWindowStackEnabled:(_Bool)arg1;
+ (unsigned long long)_keyWindowStackSize;
+ (void)_clearKeyWindowStack;
+ (void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned int)arg1;
+ (void)_synchronizeDrawingAcrossProcessesOverPort:(unsigned int)arg1 withPreCommitHandler:(CDUnknownBlockType)arg2;
+ (unsigned int)_synchronizeDrawingAcrossProcessesWithPreCommitHandler:(CDUnknownBlockType)arg1;
+ (unsigned int)_synchronizeDrawingAcrossProcesses;
+ (void)_synchronizeDrawing;
+ (void)_setTransformLayerRotationsAreEnabled:(_Bool)arg1;
+ (_Bool)_transformLayerRotationsAreEnabled;
+ (void)_executeDeferredLaunchBlocks;
+ (void)_prepareWindowsForAppResume;
+ (void)_prepareWindowsPassingTestForAppResume:(CDUnknownBlockType)arg1;
+ (void)_prepareWindowsForAppSuspend;
+ (void)setAllWindowsKeepContextInBackground:(_Bool)arg1;
+ (Class)layerClass;
+ (void)adjustForAccessibilityIfNeeded:(id)arg1;
+ (void)initialize;
+ (id)_externalKeyWindow;
+ (id)keyWindow;
+ (struct CGRect)constrainFrameToScreen:(struct CGRect)arg1;
@property(nonatomic, setter=_setShouldHitTestEntireScreen:) _Bool _shouldHitTestEntireScreen; // @synthesize _shouldHitTestEntireScreen=__shouldHitTestEntireScreen;
@property(retain, nonatomic, setter=_setSimulatedApplicationResizeGestureRecognizerDelegate:) _UISimulatedApplicationResizeGestureRecognizerDelegate *_simulatedApplicationResizeGestureRecognizerDelegate; // @synthesize _simulatedApplicationResizeGestureRecognizerDelegate=__simulatedApplicationResizeGestureRecognizerDelegate;
@property(copy, nonatomic, setter=_setShouldPreventRotationHook:) CDUnknownBlockType _shouldPreventRotationHook; // @synthesize _shouldPreventRotationHook=__shouldPreventRotationHook;
@property(retain, nonatomic, getter=_animationController, setter=_setAnimationController:) _UIWindowAnimationController *_animationController; // @synthesize _animationController=__animationController;
@property(readonly, nonatomic, getter=_fromWindowOrientation) long long fromWindowOrientation; // @synthesize fromWindowOrientation=_fromWindowOrientation;
@property(readonly, nonatomic, getter=_toWindowOrientation) long long toWindowOrientation; // @synthesize toWindowOrientation=_toWindowOrientation;
@property(copy, nonatomic, setter=_setRotationCompleteBlock:) CDUnknownBlockType _rotationCompleteBlock; // @synthesize _rotationCompleteBlock=__rotationCompleteBlock;
@property(readonly, nonatomic) _Bool _usesLegacySupportedOrientationChecks; // @synthesize _usesLegacySupportedOrientationChecks=__usesLegacySupportedOrientationChecks;
@property(nonatomic, setter=_setContainedGestureRecognizersShouldRespectGestureServerInstructions:) _Bool _containedGestureRecognizersShouldRespectGestureServerInstructions; // @synthesize _containedGestureRecognizersShouldRespectGestureServerInstructions=__containedGestureRecognizersShouldRespectGestureServerInstructions;
@property(copy, nonatomic, setter=_setDeferredLaunchBlock:) CDUnknownBlockType _deferredLaunchBlock; // @synthesize _deferredLaunchBlock;
@property(nonatomic, setter=_setShouldDisableTransformLayerScalingForSnapshotting:) _Bool _shouldDisableTransformLayerScalingForSnapshotting; // @synthesize _shouldDisableTransformLayerScalingForSnapshotting;
@property(copy, nonatomic, setter=_setRootViewConstraints:) NSArray *_rootViewConstraints; // @synthesize _rootViewConstraints;
@property(copy, nonatomic, setter=_setWindowInternalConstraints:) NSArray *_windowInternalConstraints; // @synthesize _windowInternalConstraints;
@property(retain, nonatomic, setter=_setTraitCollectionChangeTransitionCoordinator:) _UIViewControllerNullAnimationTransitionCoordinator *_traitCollectionChangeTransitionCoordinator; // @synthesize _traitCollectionChangeTransitionCoordinator;
@property(retain, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (_Bool)_appearsInLoupe;
- (_Bool)_shouldCreateContextAsSecure;
- (_Bool)_isSecure;
- (void)_setSecure:(_Bool)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_updateSimulatedApplicationResizeGestureForInterfaceOrientationChange;
- (void)_installSimulatedApplicationResizeGesture;
- (id)_normalInheritedTintColor;
- (double)_touchSloppinessFactor;
- (_Bool)_canActAsKeyWindowForScreen:(id)arg1;
- (struct __CFDictionary *)_touchMap;
- (void)_setTouchMap:(struct __CFDictionary *)arg1;
- (id)_rootLayer;
- (_Bool)_shouldZoom;
- (void)loadFirstResponderScrollViewContentInDirection:(struct CGSize)arg1;
- (void)_scrollResponderToVisible:(id)arg1;
- (void)_moveResponderSelectionInDirection:(long long)arg1 fromRect:(struct CGRect)arg2;
- (_Bool)_isPoint:(struct CGPoint)arg1 relativeToPoint:(struct CGPoint)arg2 inDirection:(long long)arg3;
- (void)moveToNextResponderInDirection:(long long)arg1;
- (void)_moveWithEvent:(id)arg1;
- (id)_directionalGestureRecognizers;
- (void)_geometryDidChangeForView:(id)arg1;
- (id)_responderSelectionContainerViewForResponder:(id)arg1;
- (void)_resizeWindowToFullScreenIfNecessary;
- (void)_removeTintView:(id)arg1;
- (void)_addTintView:(id)arg1;
- (void)_updateCurrentTintView;
- (void)_updateCurrentTintViewForPotentialTintView:(id)arg1;
- (void)_tintViewDidChangeAppearance:(id)arg1;
- (void)_updateAppTintView;
- (id)_currentTintView;
- (void)_writeLayerTreeToPath:(id)arg1;
- (id)_subtreeMonitorsForView:(id)arg1;
- (void)_unregisterViewForSubtreeMonitoring:(id)arg1;
- (void)_registerViewForSubtreeMonitoring:(id)arg1;
- (void)removeFromSuperview;
- (void)setKeepContextInBackground:(_Bool)arg1;
- (_Bool)keepContextInBackground;
- (void)setResizesToFullScreen:(_Bool)arg1;
- (_Bool)resizesToFullScreen;
- (id)_touchData;
- (struct CGPoint)_transformDisplayToWindowCoordinates:(struct CGPoint)arg1;
- (_Bool)_canAffectStatusBarAppearance;
- (_Bool)_includeInDefaultImageSnapshot;
- (_Bool)isInternalWindow;
- (id)_window;
- (_Bool)_isInAWindow;
- (id)_targetWindowForPathIndex:(long long)arg1 atPoint:(struct CGPoint)arg2 forEvent:(id)arg3 windowServerHitTestWindow:(id)arg4 onScreen:(id)arg5;
- (void)_updateIsSceneSizedFlag;
- (void)_sceneBoundsDidChange;
- (struct CGPoint)_clampPointToScreenJail:(struct CGPoint)arg1;
- (struct CGPoint)_convertDoublePointFromSceneReferenceSpace:(struct CGPoint)arg1;
- (struct CGPoint)_convertDoublePointToSceneReferenceSpace:(struct CGPoint)arg1;
- (struct CGRect)_convertRectToSceneReferenceSpace:(struct CGRect)arg1;
- (struct CGRect)_convertRectFromSceneReferenceSpace:(struct CGRect)arg1;
- (struct CGPoint)_convertPointToSceneReferenceSpace:(struct CGPoint)arg1;
- (struct CGPoint)_convertPointFromSceneReferenceSpace:(struct CGPoint)arg1;
- (struct CGRect)_sceneReferenceBounds;
- (struct CGRect)_sceneBounds;
- (_Bool)_isHostedInAnotherProcess;
- (_Bool)_usesWindowServerHitTesting;
- (_Bool)_alwaysGetsContexts;
- (_Bool)_isWindowServerHostingManaged;
- (void *)createIOSurface;
- (void *)createIOSurfaceWithFrame:(struct CGRect)arg1;
- (_Bool)_isStatusBarWindow;
- (_Bool)_clearMouseView;
- (void)_setMouseEnteredView:(id)arg1;
- (void)_setMouseDownView:(id)arg1 withEvent:(struct __GSEvent *)arg2;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)redo:(id)arg1;
- (void)undo:(id)arg1;
- (id)undoManager;
- (_Bool)_needsShakesWhenInactive;
- (id)_deepestUnambiguousResponder;
- (_Bool)_supportsBecomeFirstResponderWhenPossible;
- (_Bool)_becomeFirstResponderWhenPossible;
- (_Bool)becomeFirstResponder;
- (id)_firstResponder;
- (id)firstResponder;
- (_Bool)_isSettingFirstResponder;
- (void)_setIsSettingFirstResponder:(_Bool)arg1;
- (void)_setFirstResponder:(id)arg1;
- (void)_unregisterScrollToTopView:(id)arg1;
- (void)_registerScrollToTopView:(id)arg1;
- (id)_registeredScrollToTopViews;
- (void)_unregisterChargedView:(id)arg1;
- (void)_registerChargedView:(id)arg1;
- (id)contentView;
- (void)makeKeyAndVisible;
- (void)resignKeyWindow;
- (void)becomeKeyWindow;
- (void)_endKeyWindowDeferral;
- (void)_beginKeyWindowDeferral;
- (id)_deferralPropertiesWithContextID:(unsigned int)arg1;
- (void)_makeKeyWindowIgnoringOldKeyWindow:(_Bool)arg1;
- (void)_makeExternalKeyWindow;
- (void)makeKeyWindow;
- (void)_resignKeyWindowStatus;
@property(readonly, nonatomic, getter=isKeyWindow) _Bool keyWindow;
@property(nonatomic) double windowLevel;
- (void)setCenter:(struct CGPoint)arg1;
- (void)_setFrame:(struct CGRect)arg1 sendTraitNotifications:(_Bool)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_clearSizeClassesForStateRestoration;
- (void)_setStateRestorationVerticalSizeClass:(long long)arg1 horizontalSizeClass:(long long)arg2;
- (void)_propagateTraitCollectionChangedForStateRestoration;
- (void)_willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_willTransitionToVirtualHorizontalSizeClass:(long long)arg1 virtualVerticalSizeClass:(long long)arg2;
- (void)_screenWillTransitionToTraitCollection:(id)arg1;
- (void)_willChangeToSize:(struct CGSize)arg1 orientation:(long long)arg2 screen:(id)arg3 withTransitionCoordinator:(id)arg4;
@property(readonly, nonatomic) CDStruct_d58201db __sizeClassPair;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_updateWindowTraitsAndNotify:(_Bool)arg1;
- (id)_traitCollectionForSize:(struct CGSize)arg1 screenCollection:(id)arg2 virtualHorizontalSizeClass:(long long)arg3 virtualVerticalSizeClass:(long long)arg4;
- (id)_traitCollectionForSize:(struct CGSize)arg1 screenCollection:(id)arg2;
- (id)_traitCollectionForSize:(struct CGSize)arg1 screen:(id)arg2;
- (id)_traitCollectionWhenRotated;
- (void)_updateWindowTraits;
- (id)traitCollection;
- (_Bool)_shouldParticipateInVirtualResizing;
@property(retain, nonatomic) UIScreen *screen;
- (_Bool)_shouldApplyHorizontalPixelScaleTransform;
- (_Bool)_shouldPrepareScreenForWindow;
- (void)_createContextIfNecessaryForCurrentApplicationState;
- (id)_screen;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (int)bitsPerComponent;
- (int)windowOutput;
- (void)handleStatusBarChangeFromHeight:(double)arg1 toHeight:(double)arg2;
- (_Bool)_shouldDelayTouchForSystemGestures:(id)arg1;
- (void)_setSystemGestureRecognitionIsPossible:(_Bool)arg1 andTouchesAreCancelled:(_Bool)arg2;
- (_Bool)_systemGestureRecognitionIsPossible;
- (void)_createSystemGestureGateGestureRecognizerIfNeeded;
- (id)_appearanceContainer;
- (void)synchronizeDrawingWithID:(int)arg1 count:(unsigned long long)arg2;
- (void)synchronizeDrawingWithID:(int)arg1;
- (void)_setWindowInterfaceOrientation:(long long)arg1;
- (long long)_windowInterfaceOrientation;
- (long long)interfaceOrientation;
- (_Bool)isUsingOnePartRotationAnimation;
- (_Bool)isRotating;
- (_Bool)autorotates;
- (void)_finishedFullRotation:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_finishedFullRotation:(id)arg1 finished:(id)arg2 context:(id)arg3 skipNotification:(_Bool)arg4;
- (void)_finishedFirstHalfRotation:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 applyTransformToWindow:(_Bool)arg3 updateStatusBar:(_Bool)arg4 duration:(double)arg5 force:(_Bool)arg6 isRotating:(_Bool)arg7;
- (void)_rotateWindowToOrientation:(long long)arg1 updateStatusBar:(_Bool)arg2 duration:(double)arg3 skipCallbacks:(_Bool)arg4;
- (_Bool)_shouldResizeWithScene;
- (void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 updateStatusBar:(_Bool)arg3 duration:(double)arg4 force:(_Bool)arg5 isRotating:(_Bool)arg6;
- (void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 updateStatusBar:(_Bool)arg3 duration:(double)arg4 force:(_Bool)arg5;
- (void)_setRotatableClient:(id)arg1 toOrientation:(long long)arg2 duration:(double)arg3 force:(_Bool)arg4;
- (void)_setRotatableViewOrientation:(long long)arg1 duration:(double)arg2 force:(_Bool)arg3;
- (void)_setRotatableViewOrientation:(long long)arg1 updateStatusBar:(_Bool)arg2 duration:(double)arg3 force:(_Bool)arg4;
- (void)_updateStatusBarToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_updateStatusBarToInterfaceOrientation:(long long)arg1 duration:(double)arg2 fenceID:(int)arg3 animation:(int)arg4;
- (void)_forceTwoPartRotationAnimation:(_Bool)arg1;
- (void)_setRotatableViewOrientation:(long long)arg1 updateStatusBar:(_Bool)arg2 duration:(double)arg3;
- (void)_setRotatableViewOrientation:(long long)arg1 duration:(double)arg2;
- (void)setAutorotates:(_Bool)arg1 forceUpdateInterfaceOrientation:(_Bool)arg2;
- (void)setAutorotates:(_Bool)arg1;
- (void)endDisablingInterfaceAutorotation;
- (void)endDisablingInterfaceAutorotationAnimated:(_Bool)arg1;
- (_Bool)isInterfaceAutorotationDisabled;
- (void)beginDisablingInterfaceAutorotation;
- (void)_updateInterfaceOrientationFromDeviceOrientation:(_Bool)arg1;
- (void)_updateInterfaceOrientationFromDeviceOrientationIfRotationEnabled:(_Bool)arg1;
- (void)_updateInterfaceOrientationFromDeviceOrientation;
- (void)_updateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 force:(_Bool)arg3;
- (void)_updateToInterfaceOrientation:(long long)arg1 animated:(_Bool)arg2;
- (void)_handleDeviceOrientationChange:(id)arg1;
- (void)_adjustSizeClassesAndResizeWindowToFrame:(struct CGRect)arg1;
- (void)_rotateToBounds:(struct CGRect)arg1 withAnimator:(id)arg2 transitionContext:(id)arg3;
- (void)_handleStatusBarOrientationChange:(id)arg1;
- (void)_setWindowControlsStatusBarOrientation:(_Bool)arg1;
- (_Bool)_windowControlsStatusBarOrientation;
- (_Bool)_isAnyWindowRotating;
- (_Bool)_shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)_shouldAutorotateToInterfaceOrientation:(long long)arg1 checkForDismissal:(_Bool)arg2 isRotationDisabled:(_Bool *)arg3;
- (unsigned long long)_supportedInterfaceOrientationsForRootViewController;
- (_Bool)_legacyShouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_clearPendingKeyboardChanges;
- (void)_removeRotationViewController:(id)arg1;
- (void)_addRotationViewController:(id)arg1;
- (id)__clientsForRotationCallbacks;
- (id)_clientsForRotation;
- (id)_rotationViewControllers;
- (void)_slideFooterFromOrientation:(long long)arg1 toOrientation:(long long)arg2 startSnapshot:(id)arg3 endSnapshot:(id)arg4 duration:(double)arg5;
- (void)_positionHeaderView:(id)arg1 andFooterView:(id)arg2 outsideContentViewForInterfaceOrientation:(long long)arg3;
- (void)_slideHeaderView:(id)arg1 andFooterView:(id)arg2 offScreen:(_Bool)arg3 forInterfaceOrientation:(long long)arg4;
- (_Bool)_canPromoteFromKeyWindowStack;
- (_Bool)_canBecomeKeyWindow;
- (void)setBecomeKeyOnOrderFront:(_Bool)arg1;
- (double)level;
- (void)setLevel:(double)arg1;
- (struct CGPoint)convertDeviceToWindow:(struct CGPoint)arg1;
- (struct CGPoint)convertWindowToDevice:(struct CGPoint)arg1;
- (id)_rootForKeyResponderCycle;
- (_Bool)_containedInAbsoluteResponderChain;
- (id)nextResponder;
- (void)_endModalSession;
- (void)_beginModalSession;
- (id)_exclusiveTouchView;
- (void)_setExclusiveTouchView:(id)arg1;
- (double)_convertVisualAltitude:(double)arg1 toWindow:(id)arg2;
- (double)_convertVisualAltitude:(double)arg1 fromWindow:(id)arg2;
- (struct CGPoint)_convertOffsetFromSceneReferenceSpace:(struct CGPoint)arg1;
- (struct CGPoint)_convertOffsetToSceneReferenceSpace:(struct CGPoint)arg1;
- (struct CGPoint)_convertOffset:(struct CGPoint)arg1 fromWindow:(id)arg2;
- (struct CGPoint)_convertOffset:(struct CGPoint)arg1 toWindow:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toWindow:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromWindow:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toWindow:(id)arg2;
- (_Bool)_disableAutomaticKeyboardUI;
- (_Bool)_disableAutomaticKeyboardBehavior;
- (void)sendEvent:(id)arg1;
- (void)_sendButtonsForEvent:(id)arg1;
- (void)_sendButtonGesturesForEvent:(id)arg1;
- (void)_sendTouchesForEvent:(id)arg1;
- (void)_sendGesturesForEvent:(id)arg1;
- (void)_scrollToTopViewsUnderScreenPointIfNecessary:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (_Bool)_isScrollingEnabledForView:(id)arg1;
- (id)_targetForStolenStatusBarTouchesAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2 excludingWindow:(id)arg3;
- (struct CGPoint)warpPoint:(struct CGPoint)arg1;
- (double)_chargeMultiplicationFactor;
- (void)makeKey:(id)arg1;
- (void)orderOut:(id)arg1;
- (void)_orderFrontWithoutMakingKey;
- (void)orderFront:(id)arg1;
- (void)makeKeyAndOrderFront:(id)arg1;
@property(nonatomic, setter=_setLegacyOrientationChecks:) _Bool _legacyOrientationChecks;
- (void)setHidden:(_Bool)arg1;
- (void)_setHidden:(_Bool)arg1 forced:(_Bool)arg2;
- (void)addRootViewControllerViewIfPossible;
- (id)_rootViewConstraintsUpdateIfNecessaryForView:(id)arg1;
- (void)_updateRootViewConstraintsForInterfaceOrientationAndStatusBarHeight;
- (unsigned int)_contextId;
- (_Bool)_disableViewScaling;
- (_Bool)_disableGroupOpacity;
- (_Bool)_ignoresHitTest;
- (void)_updateContextOrderingAndSetLayerHidden:(_Bool)arg1;
- (void)_orderContextToFront;
- (_Bool)_hasContext;
- (void)_destroyContextFromScreen:(id)arg1;
- (void)_destroyContext;
- (void)_configureContextOptions:(id)arg1;
- (void)_createContextAttached:(_Bool)arg1;
- (void)_createContext;
- (void)_updateTransformLayer;
- (_Bool)_isOffsetByScreenJail;
- (_Bool)_isRotatedByScreenJail;
- (_Bool)_isClippedByScreenJail;
- (_Bool)_isScaledByScreenJail;
- (_Bool)_isConstrainedByScreenJail;
- (void)_transformLayerShouldMaskToBounds:(_Bool)arg1;
- (void)_updateTransformLayerSizeForClassicPresentation;
- (void)_updateTransformLayerForClassicPresentation;
- (id)representation;
- (void)setContentView:(id)arg1;
- (void)dealloc;
- (void)awakeFromNib;
- (void)encodeWithCoder:(id)arg1;
- (id)_initWithOrientation:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentRect:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 debugName:(id)arg2 scene:(id)arg3 attached:(_Bool)arg4;
- (id)_initWithFrame:(struct CGRect)arg1 debugName:(id)arg2 attached:(_Bool)arg3;
- (id)_initWithFrame:(struct CGRect)arg1 debugName:(id)arg2;
- (id)_initWithFrame:(struct CGRect)arg1 attached:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;
- (void)_commonInitAttachedWindow:(_Bool)arg1 debugName:(id)arg2 scene:(id)arg3;
- (id)_scene;
- (void)_setScene:(id)arg1;
- (void)_updateSceneIfNecessary;
- (id)_debugName;
- (id)_responderWindow;
- (id)_window;
- (double)_classicOffset;
- (void)matchDeviceOrientation:(id)arg1;
- (void)keyboardDidHide;
- (void)setupForOrientation:(long long)arg1;
- (_Bool)inhibitTextEffectsRotation;
- (_Bool)inhibitManualTransform;
- (_Bool)inhibitSetupOrientation;
- (void)_matchDeviceOrientation;
- (_Bool)_isTextEffectsWindow;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (id)_hostingHandle;
- (void)exerciseAmbiguityInLayout;
- (_Bool)hasAmbiguousLayout;
- (id)_descendantWithAmbiguousLayout;
- (void)updateConstraintsIfNeeded;
- (id)_redundantConstraints;
- (id)_uiib_candidateRedundantConstraints;
- (id)_uiib_layoutEngineCreatingIfNecessary;
- (id)_layoutEngineIfAvailable;
- (id)_layoutEngineCreateIfNecessary;
- (void)_initializeLayoutEngine;
- (void)_switchToLayoutEngine:(id)arg1;
- (void)_constraints_subviewWillChangeSuperview:(id)arg1;
- (void)_autolayout_windowDidChangeCenterFrom:(struct CGPoint)arg1;
- (void)_autolayout_windowDidChangeBoundsFrom:(struct CGRect)arg1;
- (void)_windowInternalConstraints_centerDidChange;
- (void)_windowInternalConstraints_sizeDidChange;
- (unsigned long long)_expectedWindowInternalConstraintsCount;
- (void)_uiib_invalidateWindowInternalConstraints;
- (void)_invalidateWindowInternalConstraints;
- (void)updateConstraints;
- (_Bool)_isLoweringAnchoringConstraints;
- (void)_setIsLoweringAnchoringConstraints:(_Bool)arg1;
- (id)_centerExpressionInContainer:(id)arg1 vertical:(_Bool)arg2 contentInsetScale:(double)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIAutoRotatingWindow : UIWindow
{
    long long _interfaceOrientation;
    _Bool _unknownOrientation;
}

+ (id)sharedPopoverHostingWindow;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_didRemoveSubview:(id)arg1;
- (void)updateForOrientation:(long long)arg1;
- (void)dealloc;
- (id)_initWithFrame:(struct CGRect)arg1 attached:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

@end

__attribute__((visibility("hidden")))
@interface UIAutocorrectInlinePrompt : UIView <UIKeyboardCandidateList>
{
    struct CGRect m_originalTypedTextRect;
    NSString *m_typedText;
    NSString *m_correction;
    NSArray *m_usageTrackingTypes;
    NSMutableArray *m_typedTextViews;
    UIView *m_correctionView;
    UIView *m_correctionAnimationView;
    UIView *m_typedTextAnimationView;
    UIView *m_correctionShadowView;
    _Bool m_fits;
    _Bool m_mouseDown;
    id m_delegate;
    long long m_index;
    int m_promptTextType;
    double m_originalTypedTextRectCorrectionAmount;
    double m_maxX;
    _Bool _showHiddenCandidatesOnly;
    unsigned int m_usageTrackingMask;
    TIKeyboardCandidateResultSet *_candidateResultSet;
}

@property(nonatomic) _Bool showHiddenCandidatesOnly; // @synthesize showHiddenCandidatesOnly=_showHiddenCandidatesOnly;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateResultSet; // @synthesize candidateResultSet=_candidateResultSet;
@property(nonatomic) unsigned int usageTrackingMask; // @synthesize usageTrackingMask=m_usageTrackingMask;
- (_Bool)prepareForAnimation:(struct CGRect)arg1;
- (id)activeCandidateList;
- (void)setSelectedItem:(unsigned long long)arg1;
- (unsigned long long)numberOfShownItems;
- (unsigned long long)index;
- (void)_candidateSelected:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dismiss;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)correctionShadowView;
- (id)typedTextAnimationView;
- (id)correctionAnimationView;
- (id)correctionView;
- (id)typedTextView;
- (id)typedText;
- (id)correction;
- (struct CGRect)correctionFrameFromDesiredFrame:(struct CGRect)arg1 textHeight:(int)arg2 withExtraGap:(double)arg3;
- (struct CGRect)horizontallySquishedCorrectionFrame:(struct CGRect)arg1;
- (double)maximumCandidateWidth;
- (_Bool)isAcceptableTextEffectsFrame:(struct CGRect)arg1 afterScrollBy:(double)arg2;
- (void)addTypedTextRect:(struct CGRect)arg1;
- (void)setCandidateObject:(id)arg1 candidateSet:(id)arg2 type:(int)arg3 typedText:(id)arg4 inRect:(struct CGRect)arg5 maxX:(double)arg6 showHiddenCandidatesOnly:(_Bool)arg7;
- (void)setCandidateSet:(id)arg1 showHiddenCandidatesOnly:(_Bool)arg2;
- (void)setCorrection:(id)arg1 typedText:(id)arg2 inRect:(struct CGRect)arg3 maxX:(double)arg4;
- (void)revealHiddenCandidates;
- (_Bool)isHiddenCandidatesList;
- (id)inlineText;
@property(readonly, nonatomic) TIKeyboardCandidateResultSet *candidates;
- (_Bool)isExtendedList;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (id)currentCandidate;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)showCandidate:(id)arg1;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (void)candidatesDidChange;
- (void)setCandidates:(id)arg1 type:(int)arg2 inlineText:(id)arg3 inlineRect:(struct CGRect)arg4 maxX:(double)arg5 layout:(_Bool)arg6;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (struct CGRect)shadowFrameForFrame:(struct CGRect)arg1;
- (void)removePromptSubviews;
- (void)dealloc;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIAutocorrectShadowView : UIView
{
    int m_edgeType;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setEdgeType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIAutocorrectTextView : UIView
{
    NSString *m_string;
    int m_type;
    int m_edgeType;
    UIFont *m_textFont;
    _Bool m_animating;
    _Bool m_isLongString;
}

@property(nonatomic) _Bool isLongString; // @synthesize isLongString=m_isLongString;
@property(nonatomic) _Bool animating; // @synthesize animating=m_animating;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (struct CGRect)_calculateRectForExpandedHitRegion;
- (void)drawRect:(struct CGRect)arg1;
- (void)setEdgeType:(int)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 string:(id)arg2 type:(int)arg3 edgeType:(int)arg4;

@end

__attribute__((visibility("hidden")))
@interface UIAutoscroll : NSObject
{
    id m_target;
    struct CGPoint m_point;
    UIView<UIAutoscrollContainer> *m_scrollContainer;
    int m_directions;
    double m_repeatInterval;
    NSTimer *m_timer;
    unsigned long long m_count;
    _Bool m_active;
}

@property(nonatomic) _Bool active; // @synthesize active=m_active;
@property(nonatomic) unsigned long long count; // @synthesize count=m_count;
@property(nonatomic) double repeatInterval; // @synthesize repeatInterval=m_repeatInterval;
@property(nonatomic) int directions; // @synthesize directions=m_directions;
@property(nonatomic) struct CGPoint point; // @synthesize point=m_point;
@property(retain, nonatomic) UIView<UIAutoscrollContainer> *scrollContainer; // @synthesize scrollContainer=m_scrollContainer;
@property(retain, nonatomic) id target; // @synthesize target=m_target;
- (void)timerFired:(id)arg1;
- (void)invalidate;
- (_Bool)startAutoscroll:(id)arg1 scrollContainer:(id)arg2 point:(struct CGPoint)arg3 directions:(int)arg4 repeatInterval:(double)arg5;
- (void)dealloc;

@end

@interface UIBarItem : NSObject <UIAppearance>
{
    _Bool _hasCustomizableInstanceAppearanceModifications;
    _Bool _shouldArchiveUIAppearanceTags;
}

+ (id)_appearanceRecorderWhenContainedIn:(Class)arg1;
+ (id)appearanceForTraitCollection:(id)arg1 whenContainedIn:(Class)arg2;
+ (id)appearanceForTraitCollection:(id)arg1;
+ (id)appearanceWhenContainedIn:(Class)arg1;
+ (id)_appearanceWhenContainedIn:(id)arg1;
+ (id)_appearanceRecorder;
+ (id)appearance;
+ (id)_appearanceBlindViewClasses;
@property(nonatomic, setter=_setShouldArchiveUIAppearanceTags:) _Bool _shouldArchiveUIAppearanceTags; // @synthesize _shouldArchiveUIAppearanceTags;
@property(nonatomic, setter=_setHasCustomizableInstanceAppearanceModifications:) _Bool _hasCustomizableInstanceAppearanceModifications; // @synthesize _hasCustomizableInstanceAppearanceModifications;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIImage *image; // @dynamic image;
@property(nonatomic) struct UIEdgeInsets imageInsets; // @dynamic imageInsets;
@property(retain, nonatomic) UIImage *landscapeImagePhone; // @dynamic landscapeImagePhone;
@property(nonatomic) struct UIEdgeInsets landscapeImagePhoneInsets; // @dynamic landscapeImagePhoneInsets;
@property(readonly) Class superclass;
@property(nonatomic) long long tag; // @dynamic tag;
@property(copy, nonatomic) NSString *title; // @dynamic title;

@end

@interface UIBarButtonItem : UIBarItem <NSCoding>
{
    NSString *_title;
    NSSet *_possibleTitles;
    SEL _action;
    id _target;
    UIImage *_image;
    UIImage *_landscapeImagePhone;
    struct UIEdgeInsets _imageInsets;
    struct UIEdgeInsets _landscapeImagePhoneInsets;
    double _width;
    UIView *_view;
    long long _tag;
    id _appearanceStorage;
    struct {
        unsigned int enabled:1;
        unsigned int style:3;
        unsigned int isSystemItem:1;
        unsigned int systemItem:7;
        unsigned int viewIsCustom:1;
        unsigned int isMinibarView:1;
        unsigned int disableAutosizing:1;
        unsigned int selected:1;
        unsigned int imageHasEffects:1;
    } _barButtonItemFlags;
    _Bool _flexible;
    _Bool __showsBackButtonIndicator;
    _Bool __hidden;
    _Bool __viewWantsLetterpressImage;
    _Bool __needsViewUpdateForLetterpressImage;
    double _toolbarCharge;
    double _minimumWidth;
    double _maximumWidth;
    NSSet *_possibleSystemItems;
    NSDictionary *_stylesForSizingTitles;
    UIBarButtonItem *__itemVariation;
    UINavigationItem *__owningNavigationItem;
}

+ (id)_appearanceBlindViewClasses;
+ (Class)classForToolbarButton;
+ (Class)classForNavigationButton;
+ (void)_getSystemItemStyle:(long long *)arg1 title:(id *)arg2 image:(id *)arg3 selectedImage:(id *)arg4 action:(SEL *)arg5 forBarStyle:(long long)arg6 landscape:(_Bool)arg7 alwaysBordered:(_Bool)arg8 usingSystemItem:(long long)arg9 usingItemStyle:(long long)arg10;
@property(readonly, nonatomic) _Bool _needsViewUpdateForLetterpressImage; // @synthesize _needsViewUpdateForLetterpressImage=__needsViewUpdateForLetterpressImage;
@property(readonly, nonatomic) _Bool _viewWantsLetterpressImage; // @synthesize _viewWantsLetterpressImage=__viewWantsLetterpressImage;
@property(nonatomic, setter=_setOwningNavigationItem:) UINavigationItem *_owningNavigationItem; // @synthesize _owningNavigationItem=__owningNavigationItem;
@property(nonatomic, setter=_setHidden:) _Bool _hidden; // @synthesize _hidden=__hidden;
@property(nonatomic, setter=_setShowsBackButtonIndicator:) _Bool _showsBackButtonIndicator; // @synthesize _showsBackButtonIndicator=__showsBackButtonIndicator;
@property(retain, nonatomic, setter=_setItemVariation:) UIBarButtonItem *_itemVariation; // @synthesize _itemVariation=__itemVariation;
@property(copy, nonatomic, setter=_setStylesForSizingTitles:) NSDictionary *_stylesForSizingTitles; // @synthesize _stylesForSizingTitles;
@property(nonatomic, setter=_setFlexible:) _Bool _flexible; // @synthesize _flexible;
@property(nonatomic, setter=_setMaximumWidth:) double _maximumWidth; // @synthesize _maximumWidth;
@property(nonatomic, setter=_setMinimumWidth:) double _minimumWidth; // @synthesize _minimumWidth;
@property(nonatomic, setter=_setToolbarCharge:) double _toolbarCharge; // @synthesize _toolbarCharge;
- (void)setTag:(long long)arg1;
- (long long)tag;
@property(nonatomic) id target; // @synthesize target=_target;
@property(nonatomic) SEL action; // @synthesize action=_action;
- (struct UIOffset)backButtonTitlePositionAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (double)backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (struct UIOffset)titlePositionAdjustmentForBarMetrics:(long long)arg1;
- (void)setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (double)backgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (id)backButtonBackgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
@property(retain, nonatomic) UIColor *tintColor;
- (id)backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)backgroundImageForState:(unsigned long long)arg1 style:(long long)arg2 barMetrics:(long long)arg3;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (id)_appearanceStorage;
@property(nonatomic) _Bool selected;
@property(copy, nonatomic, getter=_possibleSystemItems, setter=_setPossibleSystemItems:) NSSet *possibleSystemItems; // @synthesize possibleSystemItems=_possibleSystemItems;
- (void)_setSystemItem:(long long)arg1;
@property(readonly, nonatomic) long long systemItem;
@property(readonly, nonatomic) _Bool isSystemItem;
@property(retain, nonatomic) UIView *customView;
@property(copy, nonatomic) NSSet *possibleTitles;
- (id)itemVariation;
@property(copy, nonatomic, setter=_setPossibleItemVariations:) NSSet *_possibleItemVariations;
@property(nonatomic) double width;
- (struct UIEdgeInsets)imageInsets;
- (void)setImageInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)landscapeImagePhoneInsets;
- (void)setLandscapeImagePhoneInsets:(struct UIEdgeInsets)arg1;
- (id)landscapeImagePhone;
- (void)setLandscapeImagePhone:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
@property(nonatomic) long long style;
@property(nonatomic, getter=isEnabled) _Bool enabled;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCustomView:(id)arg1;
- (id)initWithBarButtonSystemItem:(long long)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)initWithTitle:(id)arg1 style:(long long)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)initWithImage:(id)arg1 landscapeImagePhone:(id)arg2 style:(long long)arg3 target:(id)arg4 action:(SEL)arg5;
- (id)initWithImage:(id)arg1 style:(long long)arg2 target:(id)arg3 action:(SEL)arg4;
- (id)init;
- (void)_connectInterfaceBuilderEventConnection:(id)arg1;
- (double)_width;
- (void)_setWidth:(double)arg1;
- (id)createViewForToolbar:(id)arg1;
- (id)createViewForNavigationItem:(id)arg1;
- (id)_foregroundColorForLetterpressWithView:(id)arg1;
- (void)_applyPositionAdjustmentToSegmentedControl:(id)arg1;
- (_Bool)_shouldBezelSystemButtonImage;
@property(nonatomic, setter=_setImageHasEffects:) _Bool _imageHasEffects;
@property(readonly, nonatomic) UIToolbarButton *_toolbarButton;
@property(nonatomic, getter=_miniImageInsets, setter=_setMiniImageInsets:) struct UIEdgeInsets miniImageInsets;
@property(retain, nonatomic, getter=_miniImage, setter=_setMiniImage:) UIImage *miniImage;
- (void)_sendAction:(id)arg1 withEvent:(id)arg2;
- (_Bool)isCustomViewItem;
- (void)setIsMinibarView:(_Bool)arg1;
- (_Bool)isMinibarView;
- (id)view;
- (void)setView:(id)arg1;
- (id)nextResponder;
- (id)window;
- (void)_updateView;
- (void)_getToolbarEdgeInsets:(struct UIEdgeInsets *)arg1 imageInsets:(struct UIEdgeInsets *)arg2 glowInsets:(struct UIEdgeInsets *)arg3 forBarStyle:(long long)arg4 landscape:(_Bool)arg5 alwaysBordered:(_Bool)arg6;
- (double)_rightImagePaddingForEdgeMarginInNavBar;
- (double)_leftImagePaddingForEdgeMarginInNavBar;
- (_Bool)_isImageBarButtonItem;
- (void)_getNavBarEdgeSizeAdjust:(struct CGSize *)arg1 imageInsets:(struct UIEdgeInsets *)arg2 landscape:(_Bool)arg3;
- (void)_getSystemItemStyle:(long long *)arg1 title:(id *)arg2 image:(id *)arg3 selectedImage:(id *)arg4 action:(SEL *)arg5 forBarStyle:(long long)arg6 landscape:(_Bool)arg7 alwaysBordered:(_Bool)arg8;
- (id)scriptingID;

@end

__attribute__((visibility("hidden")))
@interface UIBarButtonItemProxy : NSObject
{
    UIBarButtonItem *_item;
    UIView *_view;
}

- (id)view;
- (id)item;
- (void)dealloc;
- (id)initWithItem:(id)arg1 inToolbar:(id)arg2;

@end

@interface UIBezierPath : NSObject <NSCopying, NSCoding>
{
    struct CGPath *_path;
    double *_lineDashPattern;
    unsigned long long _lineDashPatternCount;
    double _lineWidth;
    double _miterLimit;
    double _flatness;
    double _lineDashPhase;
    int _lineCapStyle;
    int _lineJoinStyle;
    _Bool _usesEvenOddFillRule;
    struct CGPath *_immutablePath;
    _Bool _immutablePathIsValid;
}

+ (id)_continuousRoundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadii:(id)arg3 segments:(int)arg4 smoothPillShapes:(_Bool)arg5;
+ (id)_continuousRoundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadius:(struct CGSize)arg3 segments:(int)arg4;
+ (id)_bezierPathWithPillRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
+ (id)_roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadius:(double)arg3 segments:(int)arg4 legacyCorners:(_Bool)arg5;
+ (id)_roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 cornerRadius:(double)arg3 segments:(int)arg4;
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 withCornerRadii:(id)arg3;
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedCorners:(int)arg2 withCornerRadius:(double)arg3;
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withRoundedEdges:(unsigned long long)arg2;
+ (id)_bezierPathWithRoundedRect:(struct CGRect)arg1 byRoundingCorners:(unsigned long long)arg2 cornerRadius:(double)arg3;
+ (id)roundedRectBezierPath:(struct CGRect)arg1 withTopCornerRadius:(double)arg2 withBottomCornerRadius:(double)arg3;
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithArcCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 byRoundingCorners:(unsigned long long)arg2 cornerRadii:(struct CGSize)arg3;
+ (id)_bezierPathWithArcRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;
+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPath;
+ (id)shadowBezierPath:(struct CGRect)arg1 withRoundedEdges:(unsigned long long)arg2;
@property(nonatomic) _Bool usesEvenOddFillRule; // @synthesize usesEvenOddFillRule=_usesEvenOddFillRule;
@property(nonatomic) double flatness; // @synthesize flatness=_flatness;
@property(nonatomic) double miterLimit; // @synthesize miterLimit=_miterLimit;
@property(nonatomic) int lineJoinStyle; // @synthesize lineJoinStyle=_lineJoinStyle;
@property(nonatomic) int lineCapStyle; // @synthesize lineCapStyle=_lineCapStyle;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1 transform:(struct CGAffineTransform)arg2;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;
- (void)appendBezierPathWithRect:(struct CGRect)arg1;
- (void)appendBezierPath:(id)arg1;
- (void)clip;
- (void)lineToPoint:(struct CGPoint)arg1;
- (struct CGPath *)_pathRef;
- (id)description;
- (void)_addRoundedCornerWithTrueCorner:(struct CGPoint)arg1 radius:(struct CGSize)arg2 corner:(unsigned long long)arg3 clockwise:(_Bool)arg4;
- (struct CGPath *)_createMutablePathByDecodingData:(id)arg1;
- (struct CGPath *)_mutablePath;
- (void)addClip;
- (void)strokeWithBlendMode:(int)arg1 alpha:(double)arg2;
- (void)fillWithBlendMode:(int)arg1 alpha:(double)arg2;
- (void)stroke;
- (void)fill;
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (_Bool)containsPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGPoint currentPoint;
@property(readonly, nonatomic) struct CGRect bounds;
@property(readonly, getter=isEmpty) _Bool empty;
@property(nonatomic) struct CGPath *CGPath;
- (id)bezierPathByReversingPath;
- (void)removeAllPoints;
- (void)closePath;
- (void)applyTransform:(struct CGAffineTransform)arg1;
- (void)appendPath:(id)arg1;
- (void)addArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;
- (void)addQuadCurveToPoint:(struct CGPoint)arg1 controlPoint:(struct CGPoint)arg2;
- (void)addCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)addLineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)_initWithCGMutablePath:(struct CGPath *)arg1;
- (id)init;

@end

@interface UIVisualEffect : NSObject <NSCopying, NSSecureCoding>
{
    _UIVisualEffectConfig *_effectConfig;
    _UIBackdropViewSettings *_effectSettings;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) _UIBackdropViewSettings *effectSettings; // @synthesize effectSettings=_effectSettings;
@property(readonly, nonatomic) _UIVisualEffectConfig *effectConfig; // @synthesize effectConfig=_effectConfig;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface UIBlurEffect : UIVisualEffect
{
    long long _style;
}

+ (_Bool)supportsSecureCoding;
+ (id)effectWithStyle:(long long)arg1;
- (id)effectSettings;
@property(readonly, nonatomic) long long _style;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIBookViewController : UIViewController
{
    id <UIBookViewControllerDelegate> _delegate;
    UIView *_contentView;
    UIViewController *_evenPage;
    UIViewController *_oddPage;
    UIViewController *_newEvenPage;
    UIViewController *_newOddPage;
    long long _turnCount;
    long long _animatedPageTurns;
    double _turnMargin;
    struct UIEdgeInsets _contentInset;
    double _turnDuration;
}

@property(nonatomic) double turnDuration; // @synthesize turnDuration=_turnDuration;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(nonatomic) double turnMargin; // @synthesize turnMargin=_turnMargin;
@property(retain, nonatomic) UIViewController *evenPage; // @synthesize evenPage=_evenPage;
@property(retain, nonatomic) UIViewController *oddPage; // @synthesize oddPage=_oddPage;
@property(nonatomic) id <UIBookViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)turnPages:(long long)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)view;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)_setupContentViewIfNecessary;
- (void)_turnAllPagesNonAnimated;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)_startCurlAnimation;
- (void)_setupCurlFilters;
- (void)_turnSinglePageAnimated;
- (void)_positionPage:(id)arg1 isLeft:(_Bool)arg2;
- (void)_setNewPage:(id)arg1 isLeft:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIButtonBarBadgeBackground : UIView
{
    UIImage *_image;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIButtonContent : NSObject <NSCoding, NSCopying>
{
    NSString *title;
    NSAttributedString *attributedTitle;
    UIImage *image;
    UIImage *background;
    UIColor *titleColor;
    UIColor *imageColor;
    UIColor *shadowColor;
    NSNumber *drawingStroke;
}

@property(retain, nonatomic) NSNumber *drawingStroke; // @synthesize drawingStroke;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor;
@property(retain, nonatomic) UIColor *imageColor; // @synthesize imageColor;
@property(retain, nonatomic) UIColor *titleColor; // @synthesize titleColor;
@property(retain, nonatomic) UIImage *background; // @synthesize background;
@property(retain, nonatomic) UIImage *image; // @synthesize image;
@property(retain, nonatomic) NSAttributedString *attributedTitle; // @synthesize attributedTitle;
@property(retain, nonatomic) NSString *title; // @synthesize title;
- (id)description;
@property(retain, nonatomic) _UIGraphicsLetterpressStyle *letterpressStyle;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) _Bool isEmpty; // @dynamic isEmpty;

@end

@interface UILabel : UIView <_UIMultilineTextContentSizing, NSCoding>
{
    struct CGSize _size;
    UIColor *_highlightedColor;
    long long _numberOfLines;
    long long _measuredNumberOfLines;
    double _lastLineBaseline;
    double _previousLastLineBaseline;
    double _firstLineBaseline;
    double _previousFirstLineBaseline;
    double _minimumScaleFactor;
    id _content;
    NSAttributedString *_synthesizedAttributedText;
    NSMutableDictionary *_defaultAttributes;
    double _minimumFontSize;
    long long _lineSpacing;
    id _layout;
    _UILabelScaledMetrics *_scaledMetrics;
    struct {
        unsigned int unused1:3;
        unsigned int highlighted:1;
        unsigned int autosizeTextToFit:1;
        unsigned int autotrackTextToFit:1;
        unsigned int baselineAdjustment:2;
        unsigned int unused2:2;
        unsigned int enabled:1;
        unsigned int wordRoundingEnabled:1;
        unsigned int explicitAlignment:1;
        unsigned int marqueeEnabled:1;
        unsigned int marqueeRunable:1;
        unsigned int marqueeRequired:1;
        unsigned int drawsLetterpress:1;
        unsigned int unused3:1;
        unsigned int usesExplicitPreferredMaxLayoutWidth:1;
        unsigned int determiningPreferredMaxLayoutWidth:1;
        unsigned int inSecondConstraintsPass:1;
        unsigned int drawsDebugBaselines:1;
        unsigned int explicitBaselineOffset:1;
        unsigned int usesSimpleTextEffects:1;
        unsigned int isComplexString:1;
        unsigned int wantsUnderlineForAccessibilityButtonShapesEnabled:1;
    } _textLabelFlags;
    _Bool __textColorFollowsTintColor;
    double _preferredMaxLayoutWidth;
}

+ (struct CGSize)_legacy_adjustSizeForWebKitConstraining:(struct CGSize)arg1 withFont:(id)arg2;
+ (struct CGRect)_insetRect:(struct CGRect)arg1 forAttributedString:(id)arg2 inView:(id)arg3;
+ (struct UIEdgeInsets)_insetsForAttributedString:(id)arg1 inView:(id)arg2;
+ (struct UIEdgeInsets)_insetsForString:(id)arg1 withFont:(id)arg2 inView:(id)arg3;
+ (struct __CFCharacterSet *)_tooBigChars;
+ (id)_defaultAttributes;
+ (id)defaultFont;
+ (Class)layerClass;
@property(nonatomic, setter=_setTextColorFollowsTintColor:) _Bool _textColorFollowsTintColor; // @synthesize _textColorFollowsTintColor=__textColorFollowsTintColor;
@property(nonatomic) double minimumScaleFactor; // @synthesize minimumScaleFactor=_minimumScaleFactor;
@property(nonatomic) double preferredMaxLayoutWidth; // @synthesize preferredMaxLayoutWidth=_preferredMaxLayoutWidth;
- (_Bool)_usesSimpleTextEffects;
- (void)_setUsesSimpleTextEffects:(_Bool)arg1;
- (_Bool)drawsUnderline;
- (void)setDrawsUnderline:(_Bool)arg1;
- (id)letterpressStyle;
- (void)setLetterpressStyle:(id)arg1;
- (_Bool)drawsLetterpress;
- (void)setDrawsLetterpress:(_Bool)arg1;
- (void)setMarqueeRunning:(_Bool)arg1;
- (_Bool)marqueeRunning;
- (void)_stopMarqueeWithRedisplay:(_Bool)arg1;
- (void)_startMarqueeIfNecessary;
- (void)_startMarquee;
- (void)_drawFullMarqueeTextInRect:(struct CGRect)arg1;
- (void)_coordinateBeginTimeForMarqueeAnimations:(double)arg1;
- (double)_maximumMarqueeTextWidth;
- (id)_siblingMarqueeLabels;
- (void)setMarqueeEnabled:(_Bool)arg1;
- (_Bool)_shouldDrawUnderlinesLikeWebKit;
- (void)_setWordRoundingEnabled:(_Bool)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_drawTextInRect:(struct CGRect)arg1 baselineCalculationOnly:(_Bool)arg2;
- (_Bool)_updateScaledMetricsForRect:(struct CGRect)arg1;
- (_Bool)_drawsUnderline;
- (void)drawTextInRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)updateConstraints;
- (void)_setInSecondConstraintsPass:(_Bool)arg1;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)invalidateIntrinsicContentSize;
- (_Bool)_needsDoubleUpdateConstraintsPass;
- (double)_firstBaselineOffsetFromTop;
- (double)_baselineOffsetFromBottom;
- (struct CGRect)_ensureBaselineMetricsReturningBounds;
@property(readonly, nonatomic) double _lastLineBaseline;
@property(nonatomic) long long baselineAdjustment;
- (id)_layoutDebuggingTitle;
@property(nonatomic, setter=_setDrawsDebugBaselines:) _Bool _drawsDebugBaselines;
@property(nonatomic) _Bool adjustsLetterSpacingToFitWidth;
@property(nonatomic) long long lineSpacing;
@property(nonatomic) long long numberOfLines;
@property(nonatomic) long long lineBreakMode;
- (void)_setLineBreakMode:(long long)arg1;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
- (double)shadowBlur;
- (void)setShadowBlur:(double)arg1;
@property(nonatomic) struct CGSize shadowOffset;
- (void)_setShadowUIOffset:(struct UIOffset)arg1;
@property(retain, nonatomic) UIColor *shadowColor;
- (id)_shadow;
- (void)_setShadow:(id)arg1;
@property(retain, nonatomic) UIFont *font;
- (void)_setFont:(id)arg1;
- (void)_baselineOffsetParametersDidChange;
- (id)currentTextColor;
- (id)_disabledFontColor;
@property(retain, nonatomic) UIColor *highlightedTextColor;
@property(nonatomic) long long textAlignment;
- (void)_setTextAlignment:(long long)arg1;
- (void)tintColorDidChange;
@property(nonatomic) double minimumFontSize;
- (double)_minimumFontSize;
- (void)_setMinimumFontSize:(double)arg1;
- (id)_associatedScalingLabel;
- (double)_actualScaleFactor;
@property(nonatomic) _Bool adjustsFontSizeToFitWidth;
@property(retain, nonatomic) UIColor *textColor;
- (void)_setTextColor:(id)arg1;
@property(nonatomic, getter=isEnabled) _Bool enabled;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled; // @dynamic userInteractionEnabled;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)_setAttributedText:(id)arg1 andTakeOwnership:(_Bool)arg2;
@property(copy, nonatomic) NSString *text;
- (void)_setText:(id)arg1;
- (struct UIEdgeInsets)_contentInsetsFromFonts;
- (void)_invalidateTextSize;
- (struct CGRect)_textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2 includingShadow:(_Bool)arg3;
- (_Bool)_shouldCeilSizeToViewScale;
- (id)_stringDrawingContext;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2;
- (struct CGSize)textSize;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_attributedStringHasAttributesNotCoveredByPrimitives;
- (id)initWithCoder:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_invalidateAsNeededForNewSize:(struct CGSize)arg1 oldSize:(struct CGSize)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInit;
@property(retain, nonatomic, getter=_synthesizedAttributedText, setter=_setSynthesizedAttributedText:) NSAttributedString *_synthesizedAttributedText;
- (void)_invalidateSynthesizedAttributedTextAndLayout;
- (void)_invalidateLayout;
- (void)_invalidateDefaultAttributes;
- (id)_synthesizedTextAttributes;
- (id)_compatibilityAttributedString;
- (void)_setDefaultAttributes:(id)arg1;
- (id)_defaultAttributes;
- (double)_preferredMaxLayoutWidth;
- (id)_scriptingInfo;
@property(nonatomic, setter=_setLastLineBaselineFrameOriginY:) double _lastLineBaselineFrameOriginY;
@property(nonatomic, setter=_setFirstLineBaselineFrameOriginY:) double _firstLineBaselineFrameOriginY;
@property(nonatomic, setter=_setFirstLineCapFrameOriginY:) double _firstLineCapFrameOriginY;
@property(readonly, nonatomic) double _firstLineBaselineOffsetFromBoundsTop;
@property(readonly, nonatomic) double _capOffsetFromBoundsTop;
- (long long)_measuredNumberOfLines;
@property(nonatomic, setter=_setWantsUnderlineForAccessibilityButtonShapesEnabled:) _Bool _wantsUnderlineForAccessibilityButtonShapesEnabled; // @dynamic _wantsUnderlineForAccessibilityButtonShapesEnabled;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (_Bool)_shouldShowAccessibilityButtonShapesUnderline;
- (void)_accessibilityButtonShapesChangedNotification:(id)arg1;
- (void)_accessibilityButtonShapesParametersDidChange;
- (void)_resetUsesExplicitPreferredMaxLayoutWidth;
- (struct CGSize)rawSize;
- (void)setRawSize:(struct CGSize)arg1;
- (void)drawContentsInRect:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGSize)textSizeForWidth:(double)arg1;
- (_Bool)centersHorizontally;
- (void)setCentersHorizontally:(_Bool)arg1;
- (id)color;
- (void)setColor:(id)arg1;
- (void)_setColor:(id)arg1;
- (_Bool)autotrackTextToFit;
- (void)setAutotrackTextToFit:(_Bool)arg1;
- (unsigned long long)defaultAccessibilityTraits;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (_Bool)isAccessibilityElementByDefault;
- (id)_image;
- (_Bool)_isTextFieldCenteredLabel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIButtonLabel : UILabel
{
    _Bool _reverseShadow;
    UIButton *_button;
}

+ (id)_defaultAttributes;
- (void)invalidateIntrinsicContentSize;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (id)_defaultAttributes;
- (struct CGSize)intrinsicContentSize;
- (void)setReverseShadow:(_Bool)arg1;
- (struct CGSize)shadowOffset;
- (void)setTextAlignment:(long long)arg1;
- (void)setAdjustsFontSizeToFitWidth:(_Bool)arg1;
- (void)setMinimumScaleFactor:(double)arg1;
- (void)_setMinimumFontSize:(double)arg1;
- (void)setShadowOffset:(struct CGSize)arg1;
- (void)setLineBreakMode:(long long)arg1;
- (void)setFont:(id)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 button:(id)arg2;
- (void)_setWantsAutolayout;

@end

__attribute__((visibility("hidden")))
@interface UICGColor : UIColor
{
    struct CGColor *cachedColor;
}

- (_Bool)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (_Bool)getWhite:(double *)arg1 alpha:(double *)arg2;
- (_Bool)isPatternColor;
- (double)alphaComponent;
- (struct CGColor *)CGColor;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)colorSpaceName;
- (void)setStroke;
- (void)setFill;
- (void)set;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCGColor:(struct CGColor *)arg1;

@end

__attribute__((visibility("hidden")))
@interface UICIColor : UIColor
{
    CIColor *_ciColor;
    UIColor *_rgbColor;
}

- (_Bool)getWhite:(double *)arg1 alpha:(double *)arg2;
- (_Bool)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)CIColor;
- (struct CGColor *)CGColor;
- (id)colorWithAlphaComponent:(double)arg1;
- (void)setStroke;
- (void)setFill;
- (void)set;
- (id)_rgbColor;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCIColor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UICachedDevicePatternColor : UICGColor
{
}

- (void)_forceDealloc;
- (void)dealloc;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (id)autorelease;
- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;

@end

__attribute__((visibility("hidden")))
@interface UIDeviceRGBColor : UIColor
{
    double redComponent;
    double greenComponent;
    double blueComponent;
    double alphaComponent;
    struct CGColor *cachedColor;
    long long cachedColorOnceToken;
}

- (_Bool)getWhite:(double *)arg1 alpha:(double *)arg2;
- (_Bool)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (_Bool)getHue:(double *)arg1 saturation:(double *)arg2 brightness:(double *)arg3 alpha:(double *)arg4;
- (double)alphaComponent;
- (struct CGColor *)CGColor;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)colorSpaceName;
- (void)setStroke;
- (void)setFill;
- (void)set;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface UICachedDeviceRGBColor : UIDeviceRGBColor
{
}

- (void)_forceDealloc;
- (void)dealloc;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;

@end

__attribute__((visibility("hidden")))
@interface UIDeviceWhiteColor : UIColor
{
    double whiteComponent;
    double alphaComponent;
    struct CGColor *cachedColor;
    long long cachedColorOnceToken;
}

- (_Bool)getHue:(double *)arg1 saturation:(double *)arg2 brightness:(double *)arg3 alpha:(double *)arg4;
- (_Bool)getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (_Bool)getWhite:(double *)arg1 alpha:(double *)arg2;
- (double)alphaComponent;
- (struct CGColor *)CGColor;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)colorSpaceName;
- (void)setStroke;
- (void)setFill;
- (void)set;
- (id)colorWithAlphaComponent:(double)arg1;
- (struct CGColor *)_createCGColorWithAlpha:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface UICachedDeviceWhiteColor : UIDeviceWhiteColor
{
}

- (void)_forceDealloc;
- (void)dealloc;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (unsigned long long)retainCount;
- (id)retain;
- (oneway void)release;

@end

@interface UICalloutBar : UIView
{
    id m_delegate;
    struct CGPoint m_pointBelowControls;
    struct CGPoint m_pointAboveControls;
    struct CGPoint m_pointLeftOfControls;
    struct CGPoint m_pointRightOfControls;
    struct CGPoint m_targetPoint;
    int m_targetDirection;
    _Bool m_targetHorizontal;
    _Bool m_fadeAfterCommand;
    _Bool m_recalcVisibleItems;
    _Bool m_shouldAppear;
    int m_pageCount;
    int m_currentPage;
    _Bool m_supressesHorizontalMovement;
    struct CGRect m_controlFrame;
    struct CGRect m_targetRect;
    struct CGRect m_supressesHorizontalMovementFrame;
    double m_supressedHorizontalMovementX;
    int m_arrowDirection;
    NSArray *m_systemButtonDescriptions;
    NSMutableArray *m_currentSystemButtons;
    NSMutableArray *m_extraButtons;
    UICalloutBarButton *m_nextButton;
    UICalloutBarButton *m_previousButton;
    NSMutableArray *m_rectsToEvade;
    UICalloutBarBackground *m_overlay;
    double m_fadedTime;
    NSDictionary *m_currentAppearOrFadeContext;
    id m_responderTarget;
    NSArray *m_replacements;
    NSArray *m_extraItems;
    NSString *m_untruncatedString;
    _Bool m_didPromptForReplace;
    _Bool m_ignoringEvents;
    _Bool m_showAllReplacements;
    _Bool m_ignoreFade;
}

+ (void)fadeSharedCalloutBarIfNeededForTouchInView:(id)arg1 window:(id)arg2;
+ (void)hideSharedCalloutBar;
+ (void)fadeSharedCalloutBar;
+ (_Bool)sharedCalloutBarIsVisible;
+ (void)_releaseSharedInstance;
+ (id)activeCalloutBar;
+ (id)sharedCalloutBar;
@property(retain, nonatomic) NSDictionary *currentAppearOrFadeContext; // @synthesize currentAppearOrFadeContext=m_currentAppearOrFadeContext;
@property(nonatomic) _Bool supressesHorizontalMovement; // @synthesize supressesHorizontalMovement=m_supressesHorizontalMovement;
@property(copy, nonatomic) NSString *untruncatedString; // @synthesize untruncatedString=m_untruncatedString;
@property(copy, nonatomic) NSArray *extraItems; // @synthesize extraItems=m_extraItems;
@property(nonatomic) _Bool showAllReplacements; // @synthesize showAllReplacements=m_showAllReplacements;
@property(copy, nonatomic) NSArray *replacements; // @synthesize replacements=m_replacements;
@property(nonatomic) UIResponder *responderTarget; // @synthesize responderTarget=m_responderTarget;
@property(nonatomic) int arrowDirection; // @synthesize arrowDirection=m_arrowDirection;
@property(nonatomic) struct CGRect targetRect; // @synthesize targetRect=m_targetRect;
@property(readonly, nonatomic) NSArray *rectsToEvade; // @synthesize rectsToEvade=m_rectsToEvade;
@property(nonatomic) id delegate; // @synthesize delegate=m_delegate;
@property(nonatomic) struct CGRect controlFrame; // @synthesize controlFrame=m_controlFrame;
@property(nonatomic) _Bool targetHorizontal; // @synthesize targetHorizontal=m_targetHorizontal;
@property(nonatomic) int targetDirection; // @synthesize targetDirection=m_targetDirection;
@property(nonatomic) struct CGPoint targetPoint; // @synthesize targetPoint=m_targetPoint;
@property(nonatomic) struct CGPoint pointRightOfControls; // @synthesize pointRightOfControls=m_pointRightOfControls;
@property(nonatomic) struct CGPoint pointLeftOfControls; // @synthesize pointLeftOfControls=m_pointLeftOfControls;
@property(nonatomic) struct CGPoint pointBelowControls; // @synthesize pointBelowControls=m_pointBelowControls;
@property(nonatomic) struct CGPoint pointAboveControls; // @synthesize pointAboveControls=m_pointAboveControls;
- (void)clearSupressesHorizontalMovementFrame;
- (void)clearReplacements;
- (_Bool)hasReplacements;
- (void)clearEvadeRects;
- (void)addRectToEvade:(struct CGRect)arg1;
- (void)fadeAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)appearAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (_Bool)recentlyFaded;
- (void)updateAnimated:(_Bool)arg1;
- (void)update;
- (void)hide;
- (void)fade;
- (void)_fadeAfterCommand:(SEL)arg1;
- (void)_endOngoingAppearOrFadeAnimations;
- (void)appear;
- (void)show;
- (void)buttonHighlighted:(id)arg1 highlighted:(_Bool)arg2;
- (void)setTargetRect:(struct CGRect)arg1 arrowDirection:(int)arg2;
- (void)setTargetRect:(struct CGRect)arg1 pointLeftOfControls:(struct CGPoint)arg2 pointRightOfControls:(struct CGPoint)arg3;
- (void)setTargetRect:(struct CGRect)arg1 pointBelowControls:(struct CGPoint)arg2 pointAboveControls:(struct CGPoint)arg3;
- (_Bool)_updateVisibleItemsAnimated:(_Bool)arg1;
- (void)updateForCurrentPage;
- (void)configureButtons:(double)arg1;
- (_Bool)setFrameForSize:(struct CGSize)arg1;
- (void)updateAvailableButtons;
- (_Bool)calculateControlFrameInsideTargetRect:(struct CGSize)arg1;
- (_Bool)calculateControlFrameForCalloutSize:(struct CGSize)arg1 right:(_Bool)arg2;
- (_Bool)calculateControlFrameForCalloutSize:(struct CGSize)arg1 below:(_Bool)arg2;
- (double)supressHorizontalXMovementIfNeededForPoint:(struct CGPoint)arg1 proposedX:(double)arg2;
- (_Bool)rectClear:(struct CGRect)arg1;
- (void)resetPage;
- (struct CGRect)textEffectsWindowBoundsWithoutStatusBar;
- (int)textEffectsVisibilityLevel;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)removeFromSuperview;
- (void)_showNextItems:(id)arg1;
- (void)_showPreviousItems:(id)arg1;
- (void)buttonPressed:(id)arg1;
- (id)targetForAction:(SEL)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) _Bool visible;
- (void)expandAfterAlertOrBecomeActive:(id)arg1;
- (void)flattenForAlertOrResignActive:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIBackdropView : UIView
{
    _Bool _autosizesToFitSuperview;
    _Bool _computesColorSettings;
    _Bool _appliesOutputSettingsAutomatically;
    _Bool _appliesOutputSettingsAutomaticallyEnabledComputesColorSettings;
    _Bool _applyingBackdropChanges;
    _Bool _applyingTransition;
    _Bool _requiresTintViews;
    _Bool _wantsColorSettings;
    _Bool _blursBackground;
    _Bool _allowsColorSettingsSuppression;
    _Bool _contentViewAccessed;
    _Bool _contentViewAccessorGuard;
    _Bool _applySettingsAfterLayout;
    _Bool _updateMaskViewsForViewReentrancyGuard;
    _Bool _simulatesMasks;
    _Bool _backdropVisibilitySetOnce;
    _Bool _blurRadiusSetOnce;
    _Bool _disablesOccludedBackdropBlurs;
    _Bool __backdropVisible;
    _Bool __zoomsBack;
    long long _style;
    NSHashTable *_observers;
    id <_UIBackdropViewObserver> _observer;
    double _appliesOutputSettingsAnimationDuration;
    _UIBackdropViewSettings *_inputSettings;
    _UIBackdropViewSettings *_outputSettings;
    _UIBackdropViewSettings *_savedInputSettingsDuringRenderInContext;
    long long _configuration;
    _UIBackdropEffectView *_backdropEffectView;
    NSString *_groupName;
    UIImage *_filterMaskImage;
    UIView *_grayscaleTintView;
    UIImage *_grayscaleTintMaskImage;
    UIView *_colorTintView;
    UIImage *_colorTintMaskImage;
    UIView *_colorBurnTintView;
    UIImage *_colorBurnTintMaskImage;
    CAFilter *_gaussianBlurFilter;
    CAFilter *_colorSaturateFilter;
    CAFilter *_tintFilter;
    UIView *_contentView;
    UIView *_darkeningTintView;
    UIImage *_darkeningTintMaskImage;
    long long _maskMode;
    NSMutableSet *_partialMaskViews;
    UIView *_grayscaleTintMaskViewContainer;
    NSMutableDictionary *_grayscaleTintMaskViewMap;
    UIView *_colorTintMaskViewContainer;
    NSMutableDictionary *_colorTintMaskViewMap;
    UIView *_colorBurnTintMaskViewContainer;
    NSMutableDictionary *_colorBurnTintMaskViewMap;
    UIView *_darkeningTintMaskViewContainer;
    NSMutableDictionary *_darkeningTintMaskViewMap;
    UIView *_filterMaskViewContainer;
    NSMutableDictionary *_filterMaskViewMap;
    id _computeAndApplySettingsNotificationObserver;
    double _colorMatrixGrayscaleTintLevel;
    double _colorMatrixGrayscaleTintAlpha;
    UIColor *_colorMatrixColorTint;
    double _colorMatrixColorTintAlpha;
    long long _blurHardEdges;
    struct __CFRunLoopObserver *_updateInputBoundsRunLoopObserver;
    double _previousBackdropStatisticsRed;
    double _previousBackdropStatisticsGreen;
    double _previousBackdropStatisticsBlue;
    double _previousBackdropStatisticsContrast;
    id <_UIBackdropViewGraphicsQualityChangeDelegate> _graphicsQualityChangeDelegate;
    NSString *__blurQuality;
    double __blurRadius;
    double __saturationDeltaFactor;
}

+ (Class)layerClass;
+ (Class)defaultSettingsClass;
+ (void)setAllBackdropViewsToGraphicsQuality:(long long)arg1;
+ (void)adjustGraphicsQualityForAccessibilityIfNeeded:(id)arg1;
+ (void)restoreColorSettingsForRequester:(id)arg1;
+ (void)suppressColorSettingsForRequester:(id)arg1;
+ (void)restoreColorSettingsForDidBecomeActive:(id)arg1;
+ (void)suppressColorSettingsForWillResignActive:(id)arg1;
+ (void)restoreColorSettingsForRunLoopModePop:(id)arg1;
+ (void)suppressColorSettingsForRunLoopModePush:(id)arg1;
+ (id)allBackdropViews;
@property(nonatomic, setter=setZoomsBack:) _Bool _zoomsBack; // @synthesize _zoomsBack=__zoomsBack;
@property(nonatomic) _Bool _backdropVisible; // @synthesize _backdropVisible=__backdropVisible;
@property(nonatomic) double _saturationDeltaFactor; // @synthesize _saturationDeltaFactor=__saturationDeltaFactor;
@property(nonatomic) double _blurRadius; // @synthesize _blurRadius=__blurRadius;
@property(copy, nonatomic) NSString *_blurQuality; // @synthesize _blurQuality=__blurQuality;
@property(nonatomic) _Bool disablesOccludedBackdropBlurs; // @synthesize disablesOccludedBackdropBlurs=_disablesOccludedBackdropBlurs;
@property(nonatomic) id <_UIBackdropViewGraphicsQualityChangeDelegate> graphicsQualityChangeDelegate; // @synthesize graphicsQualityChangeDelegate=_graphicsQualityChangeDelegate;
@property(nonatomic) double previousBackdropStatisticsContrast; // @synthesize previousBackdropStatisticsContrast=_previousBackdropStatisticsContrast;
@property(nonatomic) double previousBackdropStatisticsBlue; // @synthesize previousBackdropStatisticsBlue=_previousBackdropStatisticsBlue;
@property(nonatomic) double previousBackdropStatisticsGreen; // @synthesize previousBackdropStatisticsGreen=_previousBackdropStatisticsGreen;
@property(nonatomic) double previousBackdropStatisticsRed; // @synthesize previousBackdropStatisticsRed=_previousBackdropStatisticsRed;
@property(nonatomic) _Bool blurRadiusSetOnce; // @synthesize blurRadiusSetOnce=_blurRadiusSetOnce;
@property(nonatomic) _Bool backdropVisibilitySetOnce; // @synthesize backdropVisibilitySetOnce=_backdropVisibilitySetOnce;
@property(nonatomic) struct __CFRunLoopObserver *updateInputBoundsRunLoopObserver; // @synthesize updateInputBoundsRunLoopObserver=_updateInputBoundsRunLoopObserver;
@property(nonatomic) long long blurHardEdges; // @synthesize blurHardEdges=_blurHardEdges;
@property(nonatomic) _Bool simulatesMasks; // @synthesize simulatesMasks=_simulatesMasks;
@property(nonatomic) double colorMatrixColorTintAlpha; // @synthesize colorMatrixColorTintAlpha=_colorMatrixColorTintAlpha;
@property(retain, nonatomic) UIColor *colorMatrixColorTint; // @synthesize colorMatrixColorTint=_colorMatrixColorTint;
@property(nonatomic) double colorMatrixGrayscaleTintAlpha; // @synthesize colorMatrixGrayscaleTintAlpha=_colorMatrixGrayscaleTintAlpha;
@property(nonatomic) double colorMatrixGrayscaleTintLevel; // @synthesize colorMatrixGrayscaleTintLevel=_colorMatrixGrayscaleTintLevel;
@property(nonatomic) _Bool updateMaskViewsForViewReentrancyGuard; // @synthesize updateMaskViewsForViewReentrancyGuard=_updateMaskViewsForViewReentrancyGuard;
@property(retain, nonatomic) id computeAndApplySettingsNotificationObserver; // @synthesize computeAndApplySettingsNotificationObserver=_computeAndApplySettingsNotificationObserver;
@property(nonatomic) _Bool applySettingsAfterLayout; // @synthesize applySettingsAfterLayout=_applySettingsAfterLayout;
@property(retain, nonatomic) NSMutableDictionary *filterMaskViewMap; // @synthesize filterMaskViewMap=_filterMaskViewMap;
@property(retain, nonatomic) UIView *filterMaskViewContainer; // @synthesize filterMaskViewContainer=_filterMaskViewContainer;
@property(retain, nonatomic) NSMutableDictionary *darkeningTintMaskViewMap; // @synthesize darkeningTintMaskViewMap=_darkeningTintMaskViewMap;
@property(retain, nonatomic) UIView *darkeningTintMaskViewContainer; // @synthesize darkeningTintMaskViewContainer=_darkeningTintMaskViewContainer;
@property(retain, nonatomic) NSMutableDictionary *colorBurnTintMaskViewMap; // @synthesize colorBurnTintMaskViewMap=_colorBurnTintMaskViewMap;
@property(retain, nonatomic) UIView *colorBurnTintMaskViewContainer; // @synthesize colorBurnTintMaskViewContainer=_colorBurnTintMaskViewContainer;
@property(retain, nonatomic) NSMutableDictionary *colorTintMaskViewMap; // @synthesize colorTintMaskViewMap=_colorTintMaskViewMap;
@property(retain, nonatomic) UIView *colorTintMaskViewContainer; // @synthesize colorTintMaskViewContainer=_colorTintMaskViewContainer;
@property(retain, nonatomic) NSMutableDictionary *grayscaleTintMaskViewMap; // @synthesize grayscaleTintMaskViewMap=_grayscaleTintMaskViewMap;
@property(retain, nonatomic) UIView *grayscaleTintMaskViewContainer; // @synthesize grayscaleTintMaskViewContainer=_grayscaleTintMaskViewContainer;
@property(retain, nonatomic) NSMutableSet *partialMaskViews; // @synthesize partialMaskViews=_partialMaskViews;
@property(nonatomic) long long maskMode; // @synthesize maskMode=_maskMode;
@property(nonatomic) _Bool contentViewAccessorGuard; // @synthesize contentViewAccessorGuard=_contentViewAccessorGuard;
@property(nonatomic) _Bool contentViewAccessed; // @synthesize contentViewAccessed=_contentViewAccessed;
@property(retain, nonatomic) UIImage *darkeningTintMaskImage; // @synthesize darkeningTintMaskImage=_darkeningTintMaskImage;
@property(retain, nonatomic) UIView *darkeningTintView; // @synthesize darkeningTintView=_darkeningTintView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) CAFilter *tintFilter; // @synthesize tintFilter=_tintFilter;
@property(retain, nonatomic) CAFilter *colorSaturateFilter; // @synthesize colorSaturateFilter=_colorSaturateFilter;
@property(retain, nonatomic) CAFilter *gaussianBlurFilter; // @synthesize gaussianBlurFilter=_gaussianBlurFilter;
@property(retain, nonatomic) UIImage *colorBurnTintMaskImage; // @synthesize colorBurnTintMaskImage=_colorBurnTintMaskImage;
@property(retain, nonatomic) UIView *colorBurnTintView; // @synthesize colorBurnTintView=_colorBurnTintView;
@property(retain, nonatomic) UIImage *colorTintMaskImage; // @synthesize colorTintMaskImage=_colorTintMaskImage;
@property(retain, nonatomic) UIView *colorTintView; // @synthesize colorTintView=_colorTintView;
@property(retain, nonatomic) UIImage *grayscaleTintMaskImage; // @synthesize grayscaleTintMaskImage=_grayscaleTintMaskImage;
@property(retain, nonatomic) UIView *grayscaleTintView; // @synthesize grayscaleTintView=_grayscaleTintView;
@property(retain, nonatomic) UIImage *filterMaskImage; // @synthesize filterMaskImage=_filterMaskImage;
@property(copy, nonatomic) NSString *groupName; // @synthesize groupName=_groupName;
@property(retain, nonatomic) _UIBackdropEffectView *backdropEffectView; // @synthesize backdropEffectView=_backdropEffectView;
@property(nonatomic) _Bool allowsColorSettingsSuppression; // @synthesize allowsColorSettingsSuppression=_allowsColorSettingsSuppression;
@property(nonatomic) _Bool blursBackground; // @synthesize blursBackground=_blursBackground;
@property(nonatomic) _Bool wantsColorSettings; // @synthesize wantsColorSettings=_wantsColorSettings;
@property(nonatomic) _Bool requiresTintViews; // @synthesize requiresTintViews=_requiresTintViews;
@property(nonatomic) _Bool applyingTransition; // @synthesize applyingTransition=_applyingTransition;
@property(nonatomic) _Bool applyingBackdropChanges; // @synthesize applyingBackdropChanges=_applyingBackdropChanges;
@property(nonatomic) _Bool appliesOutputSettingsAutomaticallyEnabledComputesColorSettings; // @synthesize appliesOutputSettingsAutomaticallyEnabledComputesColorSettings=_appliesOutputSettingsAutomaticallyEnabledComputesColorSettings;
@property(nonatomic) long long configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) _UIBackdropViewSettings *savedInputSettingsDuringRenderInContext; // @synthesize savedInputSettingsDuringRenderInContext=_savedInputSettingsDuringRenderInContext;
@property(retain, nonatomic) _UIBackdropViewSettings *outputSettings; // @synthesize outputSettings=_outputSettings;
@property(retain, nonatomic) _UIBackdropViewSettings *inputSettings; // @synthesize inputSettings=_inputSettings;
@property(nonatomic) double appliesOutputSettingsAnimationDuration; // @synthesize appliesOutputSettingsAnimationDuration=_appliesOutputSettingsAnimationDuration;
@property(nonatomic) _Bool appliesOutputSettingsAutomatically; // @synthesize appliesOutputSettingsAutomatically=_appliesOutputSettingsAutomatically;
@property(nonatomic) _Bool computesColorSettings; // @synthesize computesColorSettings=_computesColorSettings;
@property(nonatomic) id <_UIBackdropViewObserver> observer; // @synthesize observer=_observer;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(nonatomic) _Bool autosizesToFitSuperview; // @synthesize autosizesToFitSuperview=_autosizesToFitSuperview;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void)applySettings:(id)arg1;
- (void)applySettingsWithBuiltInAnimation:(id)arg1;
- (void)computeAndApplySettingsForTransition;
- (void)computeAndApplySettings:(id)arg1;
- (void)delayedComputeAndApplySettings;
- (void)adjustTintImplementationIfNeeded:(id)arg1;
- (void)ensureProperSubviewOrdering;
- (void)addContentViewIfNeededForSettings:(id)arg1;
- (void)addDarkeningTintViewIfNeededForSettings:(id)arg1;
- (void)addColorBurnTintViewIfNeededForSettings:(id)arg1;
- (void)addColorTintViewIfNeededForSettings:(id)arg1;
- (void)addGrayscaleTintViewIfNeededForSettings:(id)arg1;
- (void)addBackdropEffectViewIfNeededForSettings:(id)arg1;
- (void)updateSubviewHierarchyIfNeededForSettings:(id)arg1;
@property(readonly, nonatomic) UIView *effectView; // @dynamic effectView;
- (void)transitionComplete;
- (void)transitionIncrementallyToPrivateStyle:(long long)arg1 weighting:(double)arg2;
- (void)transitionIncrementallyToStyle:(long long)arg1 weighting:(double)arg2;
- (void)transitionIncrementallyToSettings:(id)arg1 weighting:(double)arg2;
- (void)transitionToSettings:(id)arg1;
- (void)transitionToColor:(id)arg1;
- (void)transitionToPrivateStyle:(long long)arg1;
- (void)transitionToStyle:(long long)arg1;
- (void)prepareForTransitionToSettings:(id)arg1;
- (void)_setBlursBackground:(_Bool)arg1;
- (void)setUsesZoom;
- (void)setBackdropVisible:(_Bool)arg1;
- (_Bool)isBackdropVisible;
- (void)setTintFilterForSettings:(id)arg1;
- (void)setSaturationDeltaFactor:(double)arg1;
- (double)saturationDeltaFactor;
- (void)_updateInputBounds;
- (void)scheduleUpdateInputBoundsIfNeeded;
- (void)setBlurFilterWithRadius:(double)arg1 blurQuality:(id)arg2 blurHardEdges:(long long)arg3;
- (void)setBlurFilterWithRadius:(double)arg1 blurQuality:(id)arg2;
- (void)setBlursWithHardEdges:(_Bool)arg1;
- (_Bool)blursWithHardEdges;
- (void)setBlurQuality:(id)arg1;
- (id)blurQuality;
- (void)setBlurRadius:(double)arg1;
- (double)blurRadius;
- (id)filters;
- (void)_updateFilters;
- (void)removeOverlayBlendModeFromView:(id)arg1;
- (void)applyOverlayBlendModeToView:(id)arg1;
- (void)applyOverlayBlendMode:(long long)arg1 toView:(id)arg2;
- (void)removeMaskViews;
- (void)updateMaskViewsForView:(id)arg1;
- (void)updateMaskViewForView:(id)arg1 flag:(long long)arg2;
- (void)setMaskImage:(id)arg1 onLayer:(id)arg2;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)didCallRenderInContextOnBackdropViewLayer;
- (void)willCallRenderInContextOnBackdropViewLayer;
- (id)backdropViewLayer;
- (void)setShouldRasterizeEffectsView:(_Bool)arg1;
- (void)backdropLayerStatisticsDidChange:(id)arg1;
- (void)settingsDidChange:(id)arg1;
- (void)clearUpdateInputBoundsRunLoopObserver;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 privateStyle:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithPrivateStyle:(long long)arg1;
- (id)initWithStyle:(long long)arg1;
- (id)initWithSettings:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 settings:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 autosizesToFitSuperview:(_Bool)arg2 settings:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UICalloutBarBackground : _UIBackdropView
{
    double m_dividerOffsets[24];
    UIImageView *_blurMaskView;
    UIImageView *_tintMaskView;
    _UIBackdropView *_separatorView;
    struct CGRect _highlightRect;
}

@property(nonatomic) struct CGRect highlightRect; // @synthesize highlightRect=_highlightRect;
@property(retain, nonatomic) _UIBackdropView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) UIImageView *tintMaskView; // @synthesize tintMaskView=_tintMaskView;
@property(retain, nonatomic) UIImageView *blurMaskView; // @synthesize blurMaskView=_blurMaskView;
- (void)setBlurDisabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1 forFrame:(struct CGRect)arg2;
- (void)layoutSubviews;
- (void)setDividerOffsets:(double *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UICalloutBarButton : UIButton
{
    SEL m_action;
    int m_position;
    int m_type;
    UITextReplacement *m_textReplacement;
    double m_contentWidth;
    double m_contentScale;
    double m_additionalContentHeight;
    double m_dividerOffset;
    double m_imageVerticalAdjust;
    long long m_page;
    _Bool m_isText;
    _Bool m_configured;
    _Bool m_single;
    _Bool m_padLeft;
    _Bool m_padRight;
    _Bool m_dontDismiss;
    _Bool forceFlash;
}

+ (id)buttonWithImage:(id)arg1 action:(SEL)arg2 type:(int)arg3 inView:(id)arg4;
+ (id)buttonWithTitle:(id)arg1 action:(SEL)arg2 type:(int)arg3 inView:(id)arg4;
+ (id)buttonWithTitle:(id)arg1 subtitle:(id)arg2 maxWidth:(double)arg3 action:(SEL)arg4 type:(int)arg5 inView:(id)arg6;
@property(nonatomic) _Bool dontDismiss; // @synthesize dontDismiss=m_dontDismiss;
@property(nonatomic) double imageVerticalAdjust; // @synthesize imageVerticalAdjust=m_imageVerticalAdjust;
@property(nonatomic) double dividerOffset; // @synthesize dividerOffset=m_dividerOffset;
@property(nonatomic) long long page; // @synthesize page=m_page;
@property(nonatomic) _Bool forceFlash; // @synthesize forceFlash;
@property(retain, nonatomic) UITextReplacement *textReplacement; // @synthesize textReplacement=m_textReplacement;
@property(readonly, nonatomic) int type; // @synthesize type=m_type;
@property(readonly, nonatomic) double additionalContentHeight; // @synthesize additionalContentHeight=m_additionalContentHeight;
@property(readonly, nonatomic) double contentScale; // @synthesize contentScale=m_contentScale;
@property(readonly, nonatomic) double contentWidth; // @synthesize contentWidth=m_contentWidth;
@property(readonly, nonatomic) SEL action; // @synthesize action=m_action;
- (void)flash;
- (void)cancelFlash;
- (void)fadeAndSendAction;
- (void)setHighlighted:(_Bool)arg1;
- (void)setContentScale:(double)arg1;
- (void)configureForRightPosition:(int)arg1;
- (void)configureForMiddlePosition;
- (void)configureForLeftPosition:(int)arg1;
- (void)configureForSingle:(int)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)adjustRectForPosition:(struct CGRect)arg1 scaleRect:(_Bool)arg2;
- (void)removeFromSuperview;
- (void)layoutSubviews;
- (void)configureLabel;
- (void)dealloc;
- (void)setupWithImage:(id)arg1 action:(SEL)arg2 type:(int)arg3;
- (void)setupWithTitle:(id)arg1 action:(SEL)arg2 type:(int)arg3;
- (void)setupWithTitle:(id)arg1 subtitle:(id)arg2 maxWidth:(double)arg3 action:(SEL)arg4 type:(int)arg5;
- (void)_commonSetupWithAction:(SEL)arg1 type:(int)arg2;

@end

@interface UICalloutView : UIControl
{
    UIImageView *_leftCap;
    UIImageView *_rightCap;
    UIImageView *_topAnchor;
    UIImageView *_bottomAnchor;
    UIImageView *_leftBackground;
    UIImageView *_rightBackground;
    UILabel *_title;
    UILabel *_subtitle;
    UILabel *_temporary;
    UIView *_leftView;
    UIView *_rightView;
    struct {
        struct CGPoint origin;
        struct CGPoint offset;
        int position;
        struct CGPoint desiredPoint;
        struct CGRect desiredBounds;
    } _anchor;
    struct CGRect _frame;
    id _delegate;
    struct {
        unsigned int animated:1;
        unsigned int didMoveCalled:1;
        unsigned int hasPendingAnimatedLayout:1;
        unsigned int canAnchorFromBottom:1;
        unsigned int reserved:28;
    } _flags;
    NSMutableArray *_fadeInViews;
    NSMutableArray *_fadeOutViews;
    NSTimer *_layoutAnimationTimer;
    double _maximumWidth;
}

+ (id)sharedCalloutView;
+ (double)defaultHeight;
+ (id)_bottomAnchorImage;
+ (id)_topAnchorImage;
+ (id)_rightCapImage;
+ (id)_leftCapImage;
+ (id)_backgroundImage;
@property(nonatomic) double maximumWidth; // @synthesize maximumWidth=_maximumWidth;
@property(retain, nonatomic) UIView *rightView; // @synthesize rightView=_rightView;
@property(retain, nonatomic) UIView *leftView; // @synthesize leftView=_leftView;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)removeTarget:(id)arg1;
- (void)addTarget:(id)arg1 action:(SEL)arg2;
- (void)completeBounceAnimation;
- (void)_markDidMoveCalled;
- (void)fadeOutWithDuration:(double)arg1;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)setAnchorPoint:(struct CGPoint)arg1 boundaryRect:(struct CGRect)arg2 animate:(_Bool)arg3;
- (void)_layoutSubviews:(_Bool)arg1;
- (void)_setOriginForScale:(double)arg1;
- (void)getActualAnchorPoint:(struct CGPoint *)arg1 frame:(struct CGRect *)arg2 position:(int *)arg3 forDesiredAnchorPoint:(struct CGPoint)arg4 boundaryRect:(struct CGRect)arg5;
@property(nonatomic) _Bool canAnchorFromBottom;
- (struct CGPoint)anchorPoint;
- (struct CGPoint)offset;
- (void)setOffset:(struct CGPoint)arg1;
@property(nonatomic) long long subtitleTextAlignment;
@property(nonatomic) long long titleTextAlignment;
@property(nonatomic) long long subtitleLineBreakMode;
@property(nonatomic) long long titleLineBreakMode;
- (id)temporaryTitle;
- (void)setTemporaryTitle:(id)arg1;
- (id)subtitle;
- (void)setSubtitle:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_fadeViewsIn:(_Bool)arg1;
- (void)_scheduleLayoutAnimation;
- (void)_layoutAnimation;
- (void)_setLayoutAnimationTimer:(id)arg1;
- (void)setSubtitle:(id)arg1 animated:(_Bool)arg2;
- (void)setRightView:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftView:(id)arg1 animated:(_Bool)arg2;
- (void)_scheduleViewToFadeOut:(id)arg1;
- (void)_scheduleViewToFadeIn:(id)arg1;
- (void)_setRightView:(id)arg1;
- (void)_setLeftView:(id)arg1;
@property(readonly, nonatomic) double UICalloutViewMinimumWidth;
@property(readonly, nonatomic) double UICalloutViewVerticalMargin;
@property(readonly, nonatomic) double UICalloutViewHorizontalPadding;
@property(readonly, nonatomic) double UICalloutViewHorizontalMargin;
@property(readonly, nonatomic) double UICalloutViewButtonPadding;
@property(readonly, nonatomic) double UICalloutViewLayoutDuration;
@property(readonly, nonatomic) double UICalloutViewCapPaddingTop;
@property(readonly, nonatomic) double UICalloutViewCapHeight;

@end

__attribute__((visibility("hidden")))
@interface UICellHighlightingSupport : NSObject
{
    struct __CFDictionary *_unhighlightedStates;
    id _cell;
}

- (void)highlightView:(id)arg1;
- (void)applyState:(unsigned long long)arg1 toView:(id)arg2;
- (void)cacheState:(unsigned long long)arg1 forView:(id)arg2;
- (void)dealloc;
- (id)initWithCell:(id)arg1;

@end

@interface UICheckeredPatternView : UIView
{
    UIColor *m_patternColor;
    UIColor *m_checkerColor;
    double m_scale;
}

- (void)setCheckerColor:(id)arg1;
- (id)checkerColor;
- (void)updatePatternColor;
- (void)didMoveToWindow;
- (_Bool)_canDrawContent;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIClassSwapper : NSObject
{
    NSString *className;
    id object;
}

+ (id)swapperForObject:(id)arg1 withClassName:(id)arg2;
- (id)object;
- (id)className;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithObject:(id)arg1 andClassName:(id)arg2;

@end

@interface UIClassicController : NSObject
{
    UIWindow *_window;
    UIView *_chromeView;
    UIStatusBarViewController *_statusBarViewController;
    UIZoomViewController *_zoomViewController;
    _Bool _hidesClassicChrome;
    _Bool _hidesStatusBarFiller;
}

+ (id)sharedClassicController;
- (void)setDrawsStatusBarFiller:(_Bool)arg1;
- (_Bool)drawsStatusBarFiller;
- (void)setZoomed:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)_shouldHideStatusBar;
- (void)_classicChangeStatusBarOrientationFinished:(id)arg1 finished:(_Bool)arg2 context:(id)arg3;
- (void)_classicChangeStatusBarOrientation:(id)arg1;
- (void)_initializeStatusBarOrientation;
- (void)setZoomed:(_Bool)arg1;
- (_Bool)isZoomed;
- (_Bool)_supportsZoom;
- (id)_window;
- (void)_setupWindow;
- (_Bool)isClassicControlWindow:(id)arg1;
- (void)setStatusBarOrientation:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBarStyle:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBarHidden:(_Bool)arg1 animationParameters:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIScrollsToTopInitiatorView : UIView
{
}

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldSeekHigherPriorityTouchTarget;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIClassicStatusBarView : _UIScrollsToTopInitiatorView
{
    UIImageView *_backgroundView;
    UIImage *_image;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIClassicWindow : UIWindow
{
}

- (_Bool)_shouldZoom;
- (_Bool)_isConstrainedByScreenJail;
- (void)_updateTransformLayerForClassicPresentation;

@end

__attribute__((visibility("hidden")))
@interface UIClientRotationContext : NSObject
{
    UIView *_headerView;
    UIView *_footerView;
    UIView *_contentView;
    UIView *_snapshotTargetView;
    UIView *_rotatingSnapshotView;
    UIView *_footerStartSnapshotView;
    UIView *_footerEndSnapshotView;
    _Bool _headerWasHidden;
    _Bool _footerWasHidden;
    _Bool _contentWasHidden;
    _Bool _snapshotTargetWasHidden;
    _Bool _orderKeyboardInAfterRotating;
    _Bool _skipFooterRotation;
    _Bool _skipHeaderRotation;
    long long _fromOrientation;
    long long _toOrientation;
    double _duration;
    UISnapshotView *_headerSnapshotViewStart;
    UISnapshotView *_footerSnapshotViewStart;
    UISnapshotView *_contentSnapshotViewStart;
    double _contentTopAdjustmentStart;
    id _rotatingClient;
    CDStruct_010f855d _rotationSettings;
    double contentBottomInset;
    UIWindow *_window;
    _Bool _skipClientRotationCallbacks;
    NSArray *_backdropViews;
}

@property(nonatomic) _Bool skipClientRotationCallbacks; // @synthesize skipClientRotationCallbacks=_skipClientRotationCallbacks;
@property(readonly, nonatomic) long long toOrientation; // @synthesize toOrientation=_toOrientation;
@property(readonly, nonatomic) long long fromOrientation; // @synthesize fromOrientation=_fromOrientation;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(readonly, nonatomic) id rotatingClient; // @synthesize rotatingClient=_rotatingClient;
- (void)disableBackdropViewUpdates:(_Bool)arg1;
- (void)finishFullRotateUsingOnePartAnimation:(_Bool)arg1;
- (void)finishFirstHalfRotation;
- (void)rotateSnapshots;
- (void)setupRotationOrderingKeyboardInAfterRotation:(_Bool)arg1;
- (_Bool)_isFooterTranslucent;
- (_Bool)_isHeaderTranslucent;
- (void)_slideFooterWithStartSnapshot:(id)arg1 endSnapshot:(id)arg2 duration:(double)arg3;
- (void)_positionHeaderView:(id)arg1 andFooterView:(id)arg2 outsideContentViewForInterfaceOrientation:(long long)arg3;
- (void)slideHeaderViewAndFooterViewOffScreen:(_Bool)arg1 forInterfaceOrientation:(long long)arg2;
- (void)_slideHeaderView:(id)arg1 andFooterView:(id)arg2 offScreen:(_Bool)arg3 forInterfaceOrientation:(long long)arg4;
- (void)dealloc;
- (id)initWithClient:(id)arg1 toOrientation:(long long)arg2 duration:(double)arg3 andWindow:(id)arg4;

@end

@interface UICollectionReusableView : UIView
{
    UICollectionViewLayoutAttributes *_layoutAttributes;
    NSString *_reuseIdentifier;
    UICollectionView *_collectionView;
    long long _updateAnimationCount;
    struct {
        unsigned int wasDequeued:1;
    } _reusableViewFlags;
}

@property(copy, nonatomic) NSString *reuseIdentifier; // @synthesize reuseIdentifier=_reuseIdentifier;
- (id)preferredLayoutAttributesFittingAttributes:(id)arg1;
- (_Bool)_disableRasterizeInAnimations;
- (_Bool)_wasDequeued;
- (void)_markAsDequeued;
- (void)_clearUpdateAnimation;
- (void)_addUpdateAnimation;
@property(readonly, nonatomic, getter=_isInUpdateAnimation) _Bool inUpdateAnimation;
@property(nonatomic, getter=_collectionView, setter=_setCollectionView:) UICollectionView *collectionView;
- (void)_setReuseIdentifier:(id)arg1;
@property(copy, nonatomic, getter=_layoutAttributes, setter=_setLayoutAttributes:) UICollectionViewLayoutAttributes *layoutAttributes;
- (void)_setBaseLayoutAttributes:(id)arg1;
- (void)didTransitionFromLayout:(id)arg1 toLayout:(id)arg2;
- (void)willTransitionFromLayout:(id)arg1 toLayout:(id)arg2;
- (void)applyLayoutAttributes:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UICollectionView : UIScrollView
{
    UICollectionViewLayout *_layout;
    id <UICollectionViewDataSource> _dataSource;
    UIView *_backgroundView;
    NSMutableSet *_indexPathsForSelectedItems;
    NSMutableDictionary *_cellReuseQueues;
    NSMutableDictionary *_supplementaryViewReuseQueues;
    NSMutableSet *_indexPathsForHighlightedItems;
    long long _reloadingSuspendedCount;
    long long _updateAnimationCount;
    UICollectionReusableView *_firstResponderView;
    UIView *_newContentView;
    long long _firstResponderViewType;
    NSString *_firstResponderViewKind;
    NSIndexPath *_firstResponderIndexPath;
    NSMutableDictionary *_visibleCellsDict;
    NSMutableDictionary *_visibleSupplementaryViewsDict;
    NSMutableDictionary *_visibleDecorationViewsDict;
    NSMutableDictionary *_clonedCellsDict;
    NSMutableDictionary *_clonedSupplementaryViewsDict;
    NSMutableDictionary *_clonedDecorationViewsDict;
    NSIndexPath *_pendingSelectionIndexPath;
    NSMutableSet *_pendingDeselectionIndexPaths;
    UICollectionViewData *_collectionViewData;
    UICollectionViewUpdate *_currentUpdate;
    struct CGRect _visibleBounds;
    struct CGRect _preRotationBounds;
    struct CGPoint _rotationBoundsOffset;
    long long _rotationAnimationCount;
    long long _updateCount;
    NSMutableArray *_insertItems;
    NSMutableArray *_deleteItems;
    NSMutableArray *_reloadItems;
    NSMutableArray *_moveItems;
    NSArray *_originalInsertItems;
    NSArray *_originalDeleteItems;
    UITouch *_currentTouch;
    id _updateCompletionHandler;
    NSMutableDictionary *_cellClassDict;
    NSMutableDictionary *_cellNibDict;
    NSMutableDictionary *_supplementaryViewClassDict;
    NSMutableDictionary *_supplementaryViewNibDict;
    NSMutableDictionary *_cellNibExternalObjectsTables;
    NSMutableDictionary *_supplementaryViewNibExternalObjectsTables;
    UICollectionViewLayoutAttributes *_transitionLayoutAttributes;
    _Bool _isInInteractiveTransition;
    _Bool _shouldAccumulateTrackedLayoutValues;
    NSMutableDictionary *_interactiveTransitionInfos;
    CDUnknownBlockType _interactiveCompletionHandler;
    double _currentInteractiveTransitionTimeStamp;
    double _previousInteractiveTransitionTimeStamp;
    double _startTimeStamp;
    struct CGPoint _currentCenterOffset;
    struct CGPoint _previousCenterOffset;
    double _currentInteractiveTransitionProgress;
    double _previousInteractiveTransitionProgress;
    _UIDynamicAnimationGroup *_endInteractiveTransitionAnimationGroup;
    UICollectionViewLayout *_nextLayoutForInteractiveTranstion;
    NSMutableDictionary *_interactiveTransitionValueTrackingDict;
    NSMutableArray *_trackedValuesKeys;
    NSMutableSet *_invalidatedItemIndexPaths;
    NSMutableDictionary *_invalidatedSupplementaryIndexPaths;
    NSMutableDictionary *_invalidatedDecorationIndexPaths;
    CDUnknownBlockType _invalidationBlock;
    struct {
        unsigned int delegateShouldHighlightItemAtIndexPath:1;
        unsigned int delegateDidHighlightItemAtIndexPath:1;
        unsigned int delegateDidUnhighlightItemAtIndexPath:1;
        unsigned int delegateShouldSelectItemAtIndexPath:1;
        unsigned int delegateShouldDeselectItemAtIndexPath:1;
        unsigned int delegateDidSelectItemAtIndexPath:1;
        unsigned int delegateDidDeselectItemAtIndexPath:1;
        unsigned int delegateSupportsMenus:1;
        unsigned int delegateWillDisplayCell:1;
        unsigned int delegateWillDisplaySupplementaryView:1;
        unsigned int delegateDidEndDisplayingCell:1;
        unsigned int delegateDidEndDisplayingSupplementaryView:1;
        unsigned int delegateIndexForReferenceItemDuringLayoutTransition:1;
        unsigned int delegateOverrideForTransitionOffsetSize:1;
        unsigned int delegateTargetContentOffsetForProposedContentOffset:1;
        unsigned int dataSourceNumberOfSections:1;
        unsigned int dataSourceViewForSupplementaryElement:1;
        unsigned int reloadSkippedDuringSuspension:1;
        unsigned int scheduledUpdateVisibleCells:1;
        unsigned int scheduledUpdateVisibleCellLayoutAttributes:1;
        unsigned int allowsSelection:1;
        unsigned int allowsMultipleSelection:1;
        unsigned int fadeCellsForBoundsChange:1;
        unsigned int updatingLayout:1;
        unsigned int needsReload:1;
        unsigned int reloading:1;
        unsigned int skipLayoutDuringSnapshotting:1;
        unsigned int layoutInvalidatedSinceLastCellUpdate:1;
        unsigned int doneFirstLayout:1;
        unsigned int loadingOffscreenViews:1;
        unsigned int updating:1;
        unsigned int updatingVisibleCells:1;
        unsigned int preRotationBoundsSet:1;
    } _collectionViewFlags;
    struct CGPoint _lastLayoutOffset;
    _Bool _usesLegacyExternalInputSupport;
    CDUnknownBlockType _navigationCompletion;
}

+ (id)_reuseKeyForSupplementaryViewOfKind:(id)arg1 withReuseIdentifier:(id)arg2;
@property(nonatomic, getter=_usesLegacyExternalInputSupport, setter=_setUsesLegacyExternalInputSupport:) _Bool usesLegacyExternalInputSupport; // @synthesize usesLegacyExternalInputSupport=_usesLegacyExternalInputSupport;
@property(copy, nonatomic, getter=_navigationCompletion, setter=_setNavigationCompletion:) CDUnknownBlockType navigationCompletion; // @synthesize navigationCompletion=_navigationCompletion;
@property(retain, nonatomic, getter=_currentTouch, setter=_setCurrentTouch:) UITouch *currentTouch; // @synthesize currentTouch=_currentTouch;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) id <UICollectionViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) UICollectionViewLayout *collectionViewLayout; // @synthesize collectionViewLayout=_layout;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (_Bool)_indexPathIsValid:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)_dynamicAnimationsForTrackValues;
- (void)_updateTrackedLayoutValuesWith:(id)arg1;
- (double)_trackedLayoutValueForKey:(id)arg1;
- (void)_trackLayoutValue:(double)arg1 forKey:(id)arg2;
- (long long)maximumGlobalItemIndex;
- (long long)highlightedGlobalItem;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)_unhighlightAllItemsAndHighlightGlobalItem:(long long)arg1;
- (void)_highlightFirstVisibleItemIfAppropriate;
- (void)_moveWithEvent:(id)arg1;
- (_Bool)canBecomeFirstResponder;
- (void)_cellMenuDismissed;
- (void)_performAction:(SEL)arg1 forCell:(id)arg2 sender:(id)arg3;
- (_Bool)_canPerformAction:(SEL)arg1 forCell:(id)arg2 sender:(id)arg3;
- (_Bool)_shouldShowMenuForCell:(id)arg1;
- (struct CGPoint)_contentOffsetForNewFrame:(struct CGRect)arg1 oldFrame:(struct CGRect)arg2 newContentSize:(struct CGSize)arg3 andOldContentSize:(struct CGSize)arg4;
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;
- (void)didMoveToWindow;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_cancelTouches;
- (void)_selectAllSelectedItems;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)_userSelectItemAtIndexPath:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)_selectableIndexPathForItemContainingHitView:(id)arg1;
- (void)_unhighlightAllItems;
- (void)_invalidateLayoutWithContext:(id)arg1;
- (void)_invalidateWithBlock:(CDUnknownBlockType)arg1;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_endUpdates;
- (void)_beginUpdates;
- (void)_updateAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_updateWithItems:(id)arg1;
- (id)_viewAnimationsForCurrentUpdate;
- (void)_prepareLayoutForUpdates;
- (void)_endItemAnimations;
- (void)_setupCellAnimations;
- (void)moveItemAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)reloadItemsAtIndexPaths:(id)arg1;
- (void)deleteItemsAtIndexPaths:(id)arg1;
- (void)insertItemsAtIndexPaths:(id)arg1;
- (void)_updateRowsAtIndexPaths:(id)arg1 updateAction:(int)arg2;
- (void)moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)reloadSections:(id)arg1;
- (void)deleteSections:(id)arg1;
- (void)insertSections:(id)arg1;
- (void)_updateSections:(id)arg1 updateAction:(int)arg2;
- (id)_arrayForUpdateAction:(int)arg1;
@property(readonly, nonatomic, getter=_currentUpdate) UICollectionViewUpdate *currentUpdate;
- (void)_reuseSupplementaryView:(id)arg1;
- (void)_reuseCell:(id)arg1;
- (id)dequeueReusableSupplementaryViewOfKind:(id)arg1 withReuseIdentifier:(id)arg2 forIndexPath:(id)arg3;
- (id)dequeueReusableCellWithReuseIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (id)_dequeueReusableViewOfKind:(id)arg1 withIdentifier:(id)arg2 forIndexPath:(id)arg3 viewCategory:(unsigned long long)arg4;
- (void)_setExternalObjectTable:(id)arg1 forNibLoadingOfSupplementaryViewOfKind:(id)arg2 withReuseIdentifier:(id)arg3;
- (void)_setExternalObjectTable:(id)arg1 forNibLoadingOfCellWithReuseIdentifier:(id)arg2;
- (void)registerNib:(id)arg1 forSupplementaryViewOfKind:(id)arg2 withReuseIdentifier:(id)arg3;
- (void)registerNib:(id)arg1 forCellWithReuseIdentifier:(id)arg2;
- (void)registerClass:(Class)arg1 forSupplementaryViewOfKind:(id)arg2 withReuseIdentifier:(id)arg3;
- (void)registerClass:(Class)arg1 forCellWithReuseIdentifier:(id)arg2;
- (void)_scrollViewWillEndDraggingWithVelocity:(struct CGPoint)arg1 targetContentOffset:(inout struct CGPoint *)arg2;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)scrollToItemAtIndexPath:(id)arg1 atScrollPosition:(unsigned long long)arg2 animated:(_Bool)arg3;
- (id)_indexPathsForVisibleDecorationViewsOfKind:(id)arg1;
- (id)_indexPathsForVisibleSupplementaryViewsOfKind:(id)arg1;
- (id)_indexPathsForVisibleSupplementaryViewsOfKind:(id)arg1 isDecorationView:(_Bool)arg2;
- (id)_visibleDecorationViewsOfKind:(id)arg1;
- (id)_visibleSupplementaryViewsOfKind:(id)arg1;
- (id)_visibleSupplementaryViewsOfKind:(id)arg1 isDecorationView:(_Bool)arg2;
- (id)indexPathsForVisibleItems;
- (id)visibleCells;
- (id)cellForItemAtIndexPath:(id)arg1;
- (id)indexPathForSupplementaryView:(id)arg1;
- (id)indexPathForCell:(id)arg1;
- (id)_indexPathForView:(id)arg1 ofType:(unsigned long long)arg2;
- (id)_visibleViewDictForElementCategory:(unsigned long long)arg1 elementKind:(id)arg2;
- (id)indexPathForItemAtPoint:(struct CGPoint)arg1;
- (id)layoutAttributesForSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfSections;
- (id)_pivotForTransitionFromLayout:(id)arg1 toLayout:(id)arg2;
- (void)cancelInteractiveTransition;
- (void)finishInteractiveTransition;
- (void)_cancelInteractiveTransitionWithFinalAnimation:(_Bool)arg1;
- (void)_finishInteractiveTransitionWithFinalAnimation:(_Bool)arg1;
- (void)_finishInteractiveTransitionShouldFinish:(_Bool)arg1 finalAnimation:(_Bool)arg2;
- (void)_cleanUpAfterInteractiveTransitionDidFinish:(_Bool)arg1;
- (void)_updateTransitionWithProgress:(double)arg1;
- (id)startInteractiveTransitionToCollectionViewLayout:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setCollectionViewLayout:(id)arg1 animated:(_Bool)arg2 isInteractive:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setCollectionViewLayout:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setCollectionViewLayout:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_visible;
- (void)layoutSubviews;
- (void)_setVisibleView:(id)arg1 forLayoutAttributes:(id)arg2;
- (id)_visibleViewForLayoutAttributes:(id)arg1;
- (id)_visibleCellForIndexPath:(id)arg1;
- (id)_viewControllerToNotifyOnLayoutSubviews;
- (void)_updateBackgroundView;
- (id)_doubleSidedAnimationsForView:(id)arg1 withStartingLayoutAttributes:(id)arg2 startingLayout:(id)arg3 endingLayoutAttributes:(id)arg4 endingLayout:(id)arg5 withAnimationSetup:(CDUnknownBlockType)arg6 animationCompletion:(CDUnknownBlockType)arg7 enableCustomAnimations:(_Bool)arg8 customAnimationsType:(unsigned long long)arg9;
- (void)_ensureViewsAreLoadedInRect:(struct CGRect)arg1;
- (void)_updateVisibleCellsNow:(_Bool)arg1;
- (_Bool)_shouldFadeCellsForBoundChangeWhileRotating;
- (void)_applyLayoutAttributes:(id)arg1 toView:(id)arg2;
- (void)setContentSize:(struct CGSize)arg1;
- (id)_createPreparedSupplementaryViewForElementOfKind:(id)arg1 atIndexPath:(id)arg2 withLayoutAttributes:(id)arg3 applyAttributes:(_Bool)arg4;
- (id)_createPreparedCellForItemAtIndexPath:(id)arg1 withLayoutAttributes:(id)arg2 applyAttributes:(_Bool)arg3;
- (struct CGRect)_visibleBounds;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_addControlledSubview:(id)arg1 atZIndex:(long long)arg2;
- (void)_setIsAncestorOfFirstResponder:(_Bool)arg1;
- (void)_invalidateLayoutIfNecessary;
- (void)reloadData;
- (void)_setNeedsVisibleCellsUpdate:(_Bool)arg1 withLayoutAttributes:(_Bool)arg2;
- (void)_resumeReloads;
- (void)_suspendReloads;
@property(nonatomic) _Bool allowsMultipleSelection;
- (_Bool)_highlightItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(unsigned long long)arg3;
- (_Bool)_highlightItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3 notifyDelegate:(_Bool)arg4;
- (void)_unhighlightItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 notifyDelegate:(_Bool)arg3;
@property(nonatomic) _Bool allowsSelection;
- (void)deselectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)_deselectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 notifyDelegate:(_Bool)arg3;
- (void)selectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(unsigned long long)arg3;
- (void)_selectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(unsigned long long)arg3 notifyDelegate:(_Bool)arg4;
- (void)_deselectAllAnimated:(_Bool)arg1 notifyDelegate:(_Bool)arg2;
@property(readonly, nonatomic, getter=_visibleViews) NSArray *visibleViews;
@property(readonly, nonatomic, getter=_collectionViewData) UICollectionViewData *collectionViewData;
- (id)indexPathsForSelectedItems;
- (_Bool)_dataSourceImplementsNumberOfSections;
- (void)_reloadDataIfNeeded;
@property(nonatomic) id <UICollectionViewDelegate> delegate; // @dynamic delegate;
- (id)_visibleDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)_visibleSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)_visibleSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2 isDecorationView:(_Bool)arg3;
- (id)_keysForObject:(id)arg1 inDictionary:(id)arg2;
- (void)_addEntriesFromDictionary:(id)arg1 inDictionary:(id)arg2;
- (void)_addEntriesFromDictionary:(id)arg1 inDictionary:(id)arg2 andSet:(id)arg3;
- (void)_setObject:(id)arg1 inDictionary:(id)arg2 forKind:(id)arg3 indexPath:(id)arg4;
- (id)_objectInDictionary:(id)arg1 forKind:(id)arg2 indexPath:(id)arg3;
- (id)description;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UICollectionViewAnimation : NSObject
{
    UICollectionReusableView *_view;
    UICollectionViewLayoutAttributes *_finalLayoutAttributes;
    double _startFraction;
    double _endFraction;
    int _viewType;
    NSMutableArray *_completionHandlers;
    NSMutableArray *_startupHandlers;
    CDUnknownBlockType _animationBlock;
    struct {
        unsigned int animateFromCurrentPosition:1;
        unsigned int deleteAterAnimation:1;
        unsigned int rasterizeAfterAnimation:1;
        unsigned int resetRasterizationAfterAnimation:1;
    } _collectionViewAnimationFlags;
}

@property(readonly, nonatomic) double endFraction; // @synthesize endFraction=_endFraction;
@property(readonly, nonatomic) double startFraction; // @synthesize startFraction=_startFraction;
@property(readonly, nonatomic) UICollectionViewLayoutAttributes *finalLayoutAttributes; // @synthesize finalLayoutAttributes=_finalLayoutAttributes;
@property(readonly, nonatomic) int viewType; // @synthesize viewType=_viewType;
@property(readonly, nonatomic) UICollectionReusableView *view; // @synthesize view=_view;
- (void)addStartupHandler:(CDUnknownBlockType)arg1;
- (void)addCompletionHandler:(CDUnknownBlockType)arg1;
- (void)start;
@property(nonatomic) _Bool resetRasterizationAfterAnimation;
@property(nonatomic) _Bool rasterizeAfterAnimation;
@property(readonly, nonatomic) _Bool deleteAfterAnimation;
@property(readonly, nonatomic) _Bool animateFromCurrentPosition;
- (id)description;
- (void)dealloc;
- (id)initWithView:(id)arg1 viewType:(int)arg2 finalLayoutAttributes:(id)arg3 startFraction:(double)arg4 endFraction:(double)arg5 animateFromCurrentPostion:(_Bool)arg6 deleteAfterAnimation:(_Bool)arg7 customAnimations:(CDUnknownBlockType)arg8;

@end

@interface UICollectionViewCell : UICollectionReusableView <UIGestureRecognizerDelegate>
{
    UIView *_contentView;
    UIView *_backgroundView;
    UIView *_selectedBackgroundView;
    UILongPressGestureRecognizer *_menuGesture;
    id _selectionSegueTemplate;
    id _highlightingSupport;
    struct {
        unsigned int selected:1;
        unsigned int highlighted:1;
        unsigned int showingMenu:1;
        unsigned int clearSelectionWhenMenuDisappears:1;
        unsigned int waitingForSelectionAnimationHalfwayPoint:1;
    } _collectionCellFlags;
    _Bool _selected;
    _Bool _highlighted;
}

+ (Class)_contentViewClass;
@property(retain, nonatomic) UIView *selectedBackgroundView; // @synthesize selectedBackgroundView=_selectedBackgroundView;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(readonly, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (_Bool)_forwardsSystemLayoutFittingSizeToContentView:(id)arg1;
- (void)layoutSubviews;
- (id)_selectionSegueTemplate;
- (void)_setSelectionSegueTemplate:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)_performAction:(SEL)arg1 sender:(id)arg2;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_menuDismissed:(id)arg1;
- (void)_handleMenuGesture:(id)arg1;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)_isUsingOldStyleMultiselection;
- (_Bool)_shouldSaveOpaqueStateForView:(id)arg1;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
- (void)_setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
- (void)_setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_teardownHighlightingSupportIfReady;
- (void)_setupHighlightingSupport;
- (void)_updateBackgroundView;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_setOpaque:(_Bool)arg1 forSubview:(id)arg2;
- (void)_updateHighlightColorsForAnimationHalfwayPoint;
- (void)_updateHighlightColorsForView:(id)arg1 highlight:(_Bool)arg2;
- (void)prepareForReuse;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UICollectionViewControllerWrapperView : UIView
{
}

- (void)didMoveToSuperview;
- (id)_collectionViewController;
- (id)_viewControllerToNotifyOnLayoutSubviews;

@end

__attribute__((visibility("hidden")))
@interface UICollectionViewData : NSObject
{
    UICollectionView *_collectionView;
    UICollectionViewLayout *_layout;
    NSMapTable *_screenPageMap;
    NSMutableIndexSet *_globalIndexesOfItemsAwaitingValidation;
    id *_globalItems;
    NSMutableDictionary *_supplementaryLayoutAttributes;
    NSMutableDictionary *_decorationLayoutAttributes;
    NSMutableDictionary *_invalidatedSupplementaryIndexPaths;
    NSMutableDictionary *_invalidatedDecorationIndexPaths;
    struct CGRect _validLayoutRect;
    long long _numItems;
    long long _numSections;
    long long *_sectionItemCounts;
    long long _lastSectionTestedForNumberOfItemsBeforeSection;
    long long _lastResultForNumberOfItemsBeforeSection;
    struct CGSize _contentSize;
    NSMutableArray *_clonedCellAttributes;
    NSMutableArray *_clonedSupplementaryAttributes;
    NSMutableArray *_clonedDecorationAttributes;
    struct {
        unsigned int contentSizeIsValid:1;
        unsigned int itemCountsAreValid:1;
        unsigned int layoutIsPrepared:1;
        unsigned int layoutLocked:1;
    } _collectionViewDataFlags;
}

+ (void)initialize;
@property(readonly, nonatomic) NSArray *clonedDecorationAttributes; // @synthesize clonedDecorationAttributes=_clonedDecorationAttributes;
@property(readonly, nonatomic) NSArray *clonedSupplementaryAttributes; // @synthesize clonedSupplementaryAttributes=_clonedSupplementaryAttributes;
@property(readonly, nonatomic) NSArray *clonedCellAttributes; // @synthesize clonedCellAttributes=_clonedCellAttributes;
@property(nonatomic, getter=isLayoutLocked) _Bool layoutLocked;
@property(readonly, nonatomic) _Bool layoutIsPrepared;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)knownDecorationElementKinds;
- (id)knownSupplementaryElementKinds;
- (id)existingSupplementaryLayoutAttributes;
- (id)existingSupplementaryLayoutAttributesInSection:(long long)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)layoutAttributesForElementsInSection:(long long)arg1;
- (id)layoutAttributesForGlobalItemIndex:(long long)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (struct CGRect)rectForDecorationElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (struct CGRect)rectForSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (struct CGRect)rectForGlobalItemIndex:(long long)arg1;
- (struct CGRect)collectionViewContentRect;
- (struct CGRect)rectForItemAtIndexPath:(id)arg1;
- (id)indexPathForItemAtGlobalIndex:(long long)arg1;
- (long long)globalIndexForItemAtIndexPath:(id)arg1;
- (long long)numberOfItemsBeforeSection:(long long)arg1;
- (long long)numberOfItemsInSection:(long long)arg1;
- (long long)numberOfItems;
- (long long)numberOfSections;
- (void)validateLayoutInRect:(struct CGRect)arg1;
- (void)_loadEverything;
- (void)_setLayoutAttributes:(id)arg1 atGlobalItemIndex:(int)arg2;
- (id)_screenPageForPoint:(struct CGPoint)arg1;
- (void)_setupMutableIndexPath:(id *)arg1 forGlobalItemIndex:(int)arg2;
- (void)_prepareToLoadData;
- (void)_validateContentSize;
- (void)_validateItemCounts;
- (void)_updateItemCounts;
- (void)invalidate:(_Bool)arg1;
- (void)validateDecorationViews;
- (void)validateSupplementaryViews;
- (void)invalidateDecorationIndexPaths:(id)arg1;
- (void)invalidateSupplementaryIndexPaths:(id)arg1;
- (void)invalidateItemsAtIndexPaths:(id)arg1;
- (void)dealloc;
- (id)initWithCollectionView:(id)arg1 layout:(id)arg2;

@end

@interface UICollectionViewLayout : NSObject <NSCoding>
{
    UICollectionView *_collectionView;
    struct CGSize _collectionViewBoundsSize;
    NSMutableDictionary *_initialAnimationLayoutAttributesDict;
    NSMutableDictionary *_finalAnimationLayoutAttributesDict;
    NSMutableDictionary *_deletedSupplementaryIndexPathsDict;
    NSMutableDictionary *_insertedSupplementaryIndexPathsDict;
    NSMutableDictionary *_deletedDecorationIndexPathsDict;
    NSMutableDictionary *_insertedDecorationIndexPathsDict;
    NSMutableIndexSet *_deletedSectionsSet;
    NSMutableIndexSet *_insertedSectionsSet;
    NSMutableDictionary *_decorationViewClassDict;
    NSMutableDictionary *_decorationViewNibDict;
    NSMutableDictionary *_decorationViewExternalObjectsTables;
    UICollectionViewLayout *_transitioningFromLayout;
    UICollectionViewLayout *_transitioningToLayout;
    UIDynamicAnimator *_animator;
    UICollectionViewLayoutInvalidationContext *_invalidationContext;
    struct CGRect _frame;
    NSIndexSet *_sections;
    NSIndexSet *_items;
    NSArray *_elementKinds;
    struct _UICollectionViewCompositionLayout *_compositionLayout;
    UICollectionViewLayout *_siblingLayout;
    struct CGPoint _layoutOffset;
    unsigned long long _layoutOffsetEdges;
    struct {
        unsigned int inTransitionFromTransitionLayout:1;
        unsigned int inTransitionToTransitionLayout:1;
        unsigned int prepared:1;
    } _layoutFlags;
    long long _sublayoutType;
}

+ (Class)invalidationContextClass;
+ (Class)layoutAttributesClass;
@property(nonatomic, getter=_sublayoutType, setter=_setSublayoutType:) long long sublayoutType; // @synthesize sublayoutType=_sublayoutType;
@property(nonatomic, getter=_isPrepared, setter=_setPrepared:) _Bool prepared;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromLayout:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toLayout:(id)arg2;
- (struct CGPoint)_offsetInTopParentLayout:(struct _UICollectionViewCompositionLayout **)arg1;
@property(nonatomic, getter=_layoutOffsetEdges, setter=_setLayoutOffsetEdges:) unsigned long long layoutOffsetEdges;
@property(nonatomic, getter=_layoutOffset, setter=_setLayoutOffset:) struct CGPoint layoutOffset;
@property(nonatomic, getter=_siblingLayout, setter=_setSiblingLayout:) UICollectionViewLayout *siblingLayout;
@property(nonatomic, getter=_compositionLayout, setter=_setCompositionLayout:) _UICollectionViewCompositionLayout *compositionLayout;
@property(copy, nonatomic, getter=_elementKinds, setter=_setElementKinds:) NSArray *elementKinds;
@property(copy, nonatomic, getter=_items, setter=_setItems:) NSIndexSet *items;
@property(copy, nonatomic, getter=_sections, setter=_setSections:) NSIndexSet *sections;
- (struct CGRect)_dynamicReferenceBounds;
- (struct CGRect)_bounds;
@property(nonatomic, getter=_frame, setter=_setFrame:) struct CGRect frame;
- (void)_invalidateLayoutUsingContext:(id)arg1;
- (_Bool)_supportsAdvancedTransitionAnimations;
- (void)_setExternalObjectTable:(id)arg1 forNibLoadingOfDecorationViewOfKind:(id)arg2;
- (id)_decorationViewForLayoutAttributes:(id)arg1;
- (void)_finalizeCollectionViewItemAnimations;
- (id)indexPathsToInsertForDecorationViewOfKind:(id)arg1;
- (id)indexPathsToInsertForSupplementaryViewOfKind:(id)arg1;
- (id)indexPathsToDeleteForDecorationViewOfKind:(id)arg1;
- (id)indexPathsToDeleteForSupplementaryViewOfKind:(id)arg1;
- (id)_indexPathsToInsertForDecorationViewOfKind:(id)arg1;
- (id)_indexPathsToInsertForSupplementaryViewOfKind:(id)arg1;
- (id)_indexPathsToDeleteForDecorationViewOfKind:(id)arg1;
- (id)_indexPathsToDeleteForSupplementaryViewOfKind:(id)arg1;
- (id)finalLayoutAttributesForDisappearingDecorationElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)initialLayoutAttributesForAppearingDecorationElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (void)_prepareToAnimateFromCollectionViewItems:(id)arg1 atContentOffset:(struct CGPoint)arg2 toItems:(id)arg3 atContentOffset:(struct CGPoint)arg4;
- (id)_dynamicAnimator;
- (void)_setDynamicAnimator:(id)arg1;
- (void)finalizeAnimatedBoundsChange;
- (void)prepareForAnimatedBoundsChange:(struct CGRect)arg1;
- (void)_setCollectionViewBoundsSize:(struct CGSize)arg1;
@property(readonly, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void)_setCollectionView:(id)arg1;
- (struct CGPoint)updatesContentOffsetForProposedContentOffset:(struct CGPoint)arg1;
- (struct CGPoint)transitionContentOffsetForProposedContentOffset:(struct CGPoint)arg1 keyItemIndexPath:(id)arg2;
- (void)_didFinishLayoutTransitionAnimations:(_Bool)arg1;
- (void)finalizeLayoutTransition;
- (void)prepareForTransitionFromLayout:(id)arg1;
- (void)prepareForTransitionToLayout:(id)arg1;
- (void)_finalizeLayoutTransition;
- (void)_prepareForTransitionFromLayout:(id)arg1;
- (void)_prepareForTransitionToLayout:(id)arg1;
- (void)registerNib:(id)arg1 forDecorationViewOfKind:(id)arg2;
- (void)registerClass:(Class)arg1 forDecorationViewOfKind:(id)arg2;
- (id)snapshottedLayoutAttributeForItemAtIndexPath:(id)arg1;
- (void)finalizeCollectionViewUpdates;
- (void)prepareForCollectionViewUpdates:(id)arg1;
- (struct CGSize)collectionViewContentSize;
- (CDUnknownBlockType)_animationForReusableView:(id)arg1 toLayoutAttributes:(id)arg2;
- (CDUnknownBlockType)_animationForReusableView:(id)arg1 toLayoutAttributes:(id)arg2 type:(unsigned long long)arg3;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)invalidationContextForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (id)invalidationContextForBoundsChange:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (void)invalidateLayoutWithContext:(id)arg1;
- (void)invalidateLayout;
- (void)prepareLayout;
- (_Bool)shouldInvalidateLayoutForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface UICollectionViewFlowLayout : UICollectionViewLayout
{
    struct {
        unsigned int delegateSizeForItem:1;
        unsigned int delegateReferenceSizeForHeader:1;
        unsigned int delegateReferenceSizeForFooter:1;
        unsigned int delegateInsetForSection:1;
        unsigned int delegateInteritemSpacingForSection:1;
        unsigned int delegateLineSpacingForSection:1;
        unsigned int delegateAlignmentOptions:1;
        unsigned int layoutDataIsValid:1;
        unsigned int delegateInfoIsValid:1;
        unsigned int roundsToScreenScale:1;
    } _gridLayoutFlags;
    double _interitemSpacing;
    double _lineSpacing;
    struct CGSize _itemSize;
    struct CGSize _estimatedItemSize;
    struct CGSize _headerReferenceSize;
    struct CGSize _footerReferenceSize;
    struct UIEdgeInsets _sectionInset;
    _UIFlowLayoutInfo *_data;
    struct CGSize _currentLayoutSize;
    NSMutableDictionary *_insertedItemsAttributesDict;
    NSMutableDictionary *_insertedSectionHeadersAttributesDict;
    NSMutableDictionary *_insertedSectionFootersAttributesDict;
    NSMutableDictionary *_deletedItemsAttributesDict;
    NSMutableDictionary *_deletedSectionHeadersAttributesDict;
    NSMutableDictionary *_deletedSectionFootersAttributesDict;
    long long _scrollDirection;
    NSDictionary *_rowAlignmentsOptionsDictionary;
    struct CGPoint _contentOffsetAdjustment;
    struct CGSize _contentSizeAdjustment;
    NSMutableArray *_indexPathsToValidate;
}

+ (Class)invalidationContextClass;
@property(nonatomic) struct CGSize estimatedItemSize; // @synthesize estimatedItemSize=_estimatedItemSize;
@property(nonatomic) struct UIEdgeInsets sectionInset; // @synthesize sectionInset=_sectionInset;
@property(nonatomic) struct CGSize footerReferenceSize; // @synthesize footerReferenceSize=_footerReferenceSize;
@property(nonatomic) struct CGSize headerReferenceSize; // @synthesize headerReferenceSize=_headerReferenceSize;
@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(nonatomic) double minimumInteritemSpacing; // @synthesize minimumInteritemSpacing=_interitemSpacing;
@property(nonatomic) double minimumLineSpacing; // @synthesize minimumLineSpacing=_lineSpacing;
- (_Bool)_roundsToScreenScale;
- (void)_setRoundsToScreenScale:(_Bool)arg1;
- (long long)_sectionArrayIndexForIndexPath:(id)arg1;
- (void)_updateContentSizeScrollingDimensionWithDelta:(double)arg1;
- (id)_rowAlignmentOptions;
- (void)_setRowAlignmentsOptions:(id)arg1;
- (void)_invalidateButKeepAllInfo;
- (void)_invalidateButKeepDelegateInfo;
- (struct CGSize)synchronizeLayout;
- (id)finalLayoutAttributesForFooterInDeletedSection:(long long)arg1;
- (id)finalLayoutAttributesForHeaderInDeletedSection:(long long)arg1;
- (id)finalLayoutAttributesForDeletedItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForFooterInInsertedSection:(long long)arg1;
- (id)initialLayoutAttributesForHeaderInInsertedSection:(long long)arg1;
- (id)initialLayoutAttributesForInsertedItemAtIndexPath:(id)arg1;
- (void)finalizeCollectionViewUpdates;
- (void)_setNeedsLayoutComputationWithoutInvalidation;
- (struct CGRect)_frameForFooterInSection:(long long)arg1 usingData:(id)arg2;
- (struct CGRect)_frameForHeaderInSection:(long long)arg1 usingData:(id)arg2;
- (struct CGRect)_frameForItem:(long long)arg1 inSection:(long long)arg2 usingData:(id)arg3;
- (void)_fetchItemsInfoForRect:(struct CGRect)arg1;
- (void)_updateItemsLayoutForRect:(struct CGRect)arg1;
- (void)_getSizingInfos;
- (void)_updateDelegateFlags;
@property(nonatomic) long long scrollDirection;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)_layoutAttributesForItemsInRect:(struct CGRect)arg1;
- (_Bool)_estimatesSizes;
- (id)invalidationContextForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (_Bool)shouldInvalidateLayoutForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForFooterInSection:(long long)arg1;
- (id)layoutAttributesForHeaderInSection:(long long)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1 usingData:(id)arg2;
- (id)layoutAttributesForFooterInSection:(long long)arg1 usingData:(id)arg2;
- (id)layoutAttributesForHeaderInSection:(long long)arg1 usingData:(id)arg2;
- (id)indexPathForItemAtPoint:(struct CGPoint)arg1;
- (id)indexesForSectionFootersInRect:(struct CGRect)arg1;
- (id)indexesForSectionHeadersInRect:(struct CGRect)arg1;
- (id)indexesForSectionFootersInRect:(struct CGRect)arg1 usingData:(id)arg2;
- (id)indexesForSectionHeadersInRect:(struct CGRect)arg1 usingData:(id)arg2;
- (struct CGSize)collectionViewContentSize;
- (id)invalidationContextForBoundsChange:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (void)prepareLayout;
- (void)invalidateLayoutWithContext:(id)arg1;
- (struct CGSize)_estimatedItemSize;
- (void)_setEstimatedItemSize:(struct CGSize)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface UICollectionViewLayoutInvalidationContext : NSObject
{
    NSMutableSet *_invalidatedItemIndexPaths;
    NSMutableDictionary *_invalidatedSupplementaryIndexPaths;
    NSMutableDictionary *_invalidatedDecorationIndexPaths;
    NSArray *_updateItems;
    struct CGPoint _contentOffsetAdjustment;
    struct CGSize _contentSizeAdjustment;
    struct {
        unsigned int invalidateDataSource:1;
        unsigned int invalidateEverything:1;
    } _invalidationContextFlags;
}

@property(nonatomic) struct CGSize contentSizeAdjustment;
@property(nonatomic) struct CGPoint contentOffsetAdjustment;
@property(nonatomic, getter=_updateItems, setter=_setUpdateItems:) NSArray *updateItems;
- (void)_setInvalidateEverything:(_Bool)arg1;
@property(nonatomic) _Bool invalidateEverything;
- (void)_setInvalidateDataSourceCounts:(_Bool)arg1;
@property(nonatomic) _Bool invalidateDataSourceCounts;
@property(readonly, nonatomic) NSDictionary *invalidatedDecorationIndexPaths;
- (void)invalidateDecorationElementsOfKind:(id)arg1 atIndexPaths:(id)arg2;
@property(readonly, nonatomic) NSDictionary *invalidatedSupplementaryIndexPaths;
- (void)invalidateSupplementaryElementsOfKind:(id)arg1 atIndexPaths:(id)arg2;
@property(readonly, nonatomic) NSArray *invalidatedItemIndexPaths;
- (void)invalidateItemsAtIndexPaths:(id)arg1;
- (void)_invalidateSupplementaryElementsOfKind:(id)arg1 atIndexPaths:(id)arg2;
- (void)_setInvalidatedSupplementaryViews:(id)arg1;
- (id)_invalidatedSupplementaryViews;
- (void)dealloc;

@end

@interface UICollectionViewFlowLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
{
    struct {
        unsigned int invalidateDelegateMetrics:1;
        unsigned int invalidateAttributes:1;
    } _flowLayoutInvalidationFlags;
}

@property(nonatomic) _Bool invalidateFlowLayoutDelegateMetrics;
@property(nonatomic) _Bool invalidateFlowLayoutAttributes;
- (id)init;

@end

@interface UICollectionViewLayoutAttributes : NSObject <NSCopying, UIDynamicItem>
{
    NSString *_elementKind;
    NSString *_reuseIdentifier;
    struct CGPoint _center;
    struct CGSize _size;
    struct CGRect _frame;
    double _alpha;
    struct CATransform3D _transform;
    NSIndexPath *_indexPath;
    NSString *_isCloneString;
    struct {
        unsigned int isCellKind:1;
        unsigned int isDecorationView:1;
        unsigned int isHidden:1;
        unsigned int isClone:1;
    } _layoutFlags;
    long long _zIndex;
}

+ (id)layoutAttributesForDecorationViewOfKind:(id)arg1 withIndexPath:(id)arg2;
+ (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 withIndexPath:(id)arg2;
+ (id)layoutAttributesForCellWithIndexPath:(id)arg1;
@property(retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(nonatomic) long long zIndex; // @synthesize zIndex=_zIndex;
@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(nonatomic) struct CATransform3D transform3D; // @synthesize transform3D=_transform;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) struct CGPoint center; // @synthesize center=_center;
@property(readonly, nonatomic) NSString *representedElementKind;
@property(readonly, nonatomic) unsigned long long representedElementCategory;
- (_Bool)_isSupplementaryView;
- (_Bool)_isDecorationView;
- (_Bool)_isCell;
@property(readonly) unsigned long long hash;
- (_Bool)_isTransitionVisibleTo:(id)arg1;
- (_Bool)_isEquivalentTo:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGAffineTransform transform;
@property(nonatomic) struct CGRect frame;
@property(nonatomic) struct CGRect bounds;
- (id)initialLayoutAttributesForInsertedDecorationElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_reuseIdentifier;
- (void)_setReuseIdentifier:(id)arg1;
- (id)_elementKind;
- (void)_setElementKind:(id)arg1;
- (_Bool)_isClone;
- (void)_setIsClone:(_Bool)arg1;
@property(nonatomic, getter=isHidden) _Bool hidden;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface UICollectionViewTransitionLayout : UICollectionViewLayout
{
    UICollectionViewLayout *_fromLayout;
    UICollectionViewLayout *_toLayout;
    struct CGRect _fromVisibleBounds;
    struct CGRect _toVisibleBounds;
    struct CGSize _contentSize;
    _Bool _haveValidInfos;
    double _transitionProgress;
    NSMutableDictionary *_transitionInformationsDict;
    NSMutableDictionary *_currentLayoutInfos;
    _Bool _layoutIsValid;
    NSMutableArray *_disappearingLayoutAttributes;
    NSMutableArray *_appearingLayoutAttributes;
    double _accuracy;
}

@property(nonatomic) double transitionProgress; // @synthesize transitionProgress=_transitionProgress;
@property(readonly, nonatomic) UICollectionViewLayout *nextLayout; // @synthesize nextLayout=_toLayout;
@property(readonly, nonatomic) UICollectionViewLayout *currentLayout; // @synthesize currentLayout=_fromLayout;
- (void)dealloc;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)interpolatedLayoutAttributesFromLayoutAttributes:(id)arg1 toLayoutAttributes:(id)arg2 progress:(double)arg3;
- (struct CGSize)collectionViewContentSize;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1;
- (double)valueForAnimatedKey:(id)arg1;
- (void)updateValue:(double)arg1 forAnimatedKey:(id)arg2;
- (struct CGRect)_newVisibleBounds;
- (struct CGRect)_oldVisibleBounds;
- (void)prepareLayout;
- (void)_prepareForTransitionToLayout:(id)arg1;
- (void)_prepareForTransitionFromLayout:(id)arg1;
- (void)_finalizeLayoutTransition;
- (_Bool)_supportsAdvancedTransitionAnimations;
- (void)invalidateLayout;
- (void)_setCollectionView:(id)arg1;
- (id)initWithCurrentLayout:(id)arg1 nextLayout:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UICollectionViewUpdate : NSObject
{
    UICollectionView *_collectionView;
    NSArray *_updateItems;
    UICollectionViewData *_oldModel;
    UICollectionViewData *_newModel;
    struct CGRect _oldVisibleBounds;
    struct CGRect _newVisibleBounds;
    NSMutableIndexSet *_movedItems;
    NSMutableIndexSet *_movedSections;
    NSMutableIndexSet *_deletedSections;
    NSMutableIndexSet *_insertedSections;
    long long *_oldSectionMap;
    long long *_newSectionMap;
    long long *_oldGlobalItemMap;
    long long *_newGlobalItemMap;
    NSMutableArray *_deletedSupplementaryIndexesSectionArray;
    NSMutableArray *_insertedSupplementaryIndexesSectionArray;
    NSMutableDictionary *_deletedSupplementaryTopLevelIndexesDict;
    NSMutableDictionary *_insertedSupplementaryTopLevelIndexesDict;
    id *_animatedItems;
    id *_animatedHeaders;
    id *_animatedFooters;
    NSMutableArray *_viewAnimations;
    NSMutableArray *_gaps;
}

- (id)oldIndexPathForSupplementaryElementOfKind:(id)arg1 newIndexPath:(id)arg2;
- (id)newIndexPathForSupplementaryElementOfKind:(id)arg1 oldIndexPath:(id)arg2;
- (void)_computeGaps;
- (void)_computeSupplementaryUpdates;
- (void)_computeItemUpdates;
- (void)_computeSectionUpdates;
- (void)dealloc;
- (id)initWithCollectionView:(id)arg1 updateItems:(id)arg2 oldModel:(id)arg3 newModel:(id)arg4 oldVisibleBounds:(struct CGRect)arg5 newVisibleBounds:(struct CGRect)arg6;

@end

__attribute__((visibility("hidden")))
@interface UICollectionViewUpdateGap : NSObject
{
    UICollectionViewUpdateItem *_firstUpdateItem;
    UICollectionViewUpdateItem *_lastUpdateItem;
    NSMutableArray *_deleteItems;
    NSMutableArray *_insertItems;
    struct CGRect _beginningRect;
    struct CGRect _endingRect;
}

+ (id)gapWithUpdateItem:(id)arg1;
@property(nonatomic) struct CGRect endingRect; // @synthesize endingRect=_endingRect;
@property(nonatomic) struct CGRect beginningRect; // @synthesize beginningRect=_beginningRect;
@property(readonly, nonatomic) NSArray *insertItems; // @synthesize insertItems=_insertItems;
@property(readonly, nonatomic) NSArray *deleteItems; // @synthesize deleteItems=_deleteItems;
@property(retain, nonatomic) UICollectionViewUpdateItem *lastUpdateItem; // @synthesize lastUpdateItem=_lastUpdateItem;
@property(retain, nonatomic) UICollectionViewUpdateItem *firstUpdateItem; // @synthesize firstUpdateItem=_firstUpdateItem;
@property(readonly, nonatomic) _Bool isSectionBasedGap;
@property(readonly, nonatomic) NSArray *updateItems;
@property(readonly, nonatomic) _Bool hasInserts;
@property(readonly, nonatomic) _Bool isDeleteBasedGap;
- (void)dealloc;
- (void)addUpdateItem:(id)arg1;
- (id)description;
- (id)init;

@end

@interface UICollectionViewUpdateItem : NSObject
{
    NSIndexPath *_initialIndexPath;
    NSIndexPath *_finalIndexPath;
    long long _updateAction;
    id _gap;
}

@property(readonly, nonatomic) long long updateAction; // @synthesize updateAction=_updateAction;
@property(readonly, nonatomic) NSIndexPath *indexPathAfterUpdate; // @synthesize indexPathAfterUpdate=_finalIndexPath;
@property(readonly, nonatomic) NSIndexPath *indexPathBeforeUpdate; // @synthesize indexPathBeforeUpdate=_initialIndexPath;
- (long long)inverseCompareIndexPaths:(id)arg1;
- (long long)compareIndexPaths:(id)arg1;
@property(readonly, nonatomic, getter=_isSectionOperation) _Bool isSectionOperation;
@property(nonatomic, getter=_gap, setter=_setGap:) id gap;
@property(readonly, nonatomic, getter=_indexPath) NSIndexPath *indexPath;
@property(readonly, nonatomic, getter=_action) long long action;
- (id)description;
@property(retain, nonatomic, getter=_newIndexPath, setter=_setNewIndexPath:) NSIndexPath *newIndexPath;
- (void)dealloc;
- (id)initWithOldIndexPath:(id)arg1 newIndexPath:(id)arg2;
- (id)initWithAction:(long long)arg1 forIndexPath:(id)arg2;
- (id)initWithInitialIndexPath:(id)arg1 finalIndexPath:(id)arg2 updateAction:(long long)arg3;

@end

@interface UICollisionBehavior : UIDynamicBehavior
{
    _Bool _usesImplicitBounds;
    struct UIEdgeInsets _implicitBoundsInsets;
    PKExtendedPhysicsBody *_implicitBoundsBody;
    NSMutableDictionary *_boundaryBodies;
    NSMutableDictionary *_boundaryPaths;
    unsigned long long _collisionMode;
    id <UICollisionBehaviorDelegate> _collisionDelegate;
    unsigned int _groupVID;
    unsigned int _groupBID;
    struct {
        unsigned int delegateBeganWithItem:1;
        unsigned int delegateEndedWithItem:1;
        unsigned int delegateBeganWithBoundary:1;
        unsigned int delegateEndedWithBoundary:1;
    } _collisionBehaviorFlags;
}

- (id)description;
- (void)_removeExplicitBoundaries;
- (void)_setupExplicitBoundaries;
- (void)removeAllBoundaries;
@property(readonly, copy, nonatomic) NSArray *boundaryIdentifiers;
- (void)removeBoundaryWithIdentifier:(id)arg1;
- (id)boundaryWithIdentifier:(id)arg1;
- (void)addBoundaryWithIdentifier:(id)arg1 fromPoint:(struct CGPoint)arg2 toPoint:(struct CGPoint)arg3;
- (void)addBoundaryWithIdentifier:(id)arg1 forPath:(id)arg2;
- (void)_setupImplicitBoundaries;
- (void)_removeImplicitBoundaries;
@property(nonatomic) _Bool translatesReferenceBoundsIntoBoundary;
- (void)_setTranslatesReferenceItemBounds:(_Bool)arg1 intoBoundaryWithInsets:(struct UIEdgeInsets)arg2;
- (void)setTranslatesReferenceBoundsIntoBoundaryWithInsets:(struct UIEdgeInsets)arg1;
- (void)_dissociate;
- (void)_associate;
- (void)_reevaluate:(unsigned long long)arg1;
- (void)_didEndContact:(id)arg1;
@property(nonatomic) id <UICollisionBehaviorDelegate> collisionDelegate;
- (void)_didBeginContact:(id)arg1;
- (void)_setCollisions:(_Bool)arg1 forBody:(id)arg2 isEdge:(_Bool)arg3;
@property(nonatomic) unsigned long long collisionMode;
- (void)_applySettings;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (void)_addItem:(id)arg1;
- (void)dealloc;
@property(readonly, copy, nonatomic) NSArray *items;
- (id)initWithItems:(id)arg1;
- (id)init;

@end

@interface UIInputViewController : UIViewController <_UITextDocumentInterfaceDelegate, UITextInputDelegate>
{
    _Bool _alignsToContentViewController;
    NSObject<UITextDocumentProxy> *_textDocumentProxy;
    NSString *_primaryLanguage;
}

+ (_Bool)_requiresProxyInterface;
@property(copy, nonatomic) NSString *primaryLanguage; // @synthesize primaryLanguage=_primaryLanguage;
@property(nonatomic) _Bool _alignsToContentViewController; // @synthesize _alignsToContentViewController;
@property(readonly, nonatomic) NSObject<UITextDocumentProxy> *textDocumentProxy; // @synthesize textDocumentProxy=_textDocumentProxy;
- (void)_didResetDocumentState;
- (void)_willResetDocumentState;
- (void)textDidChange:(id)arg1;
- (void)textWillChange:(id)arg1;
- (void)selectionDidChange:(id)arg1;
- (void)selectionWillChange:(id)arg1;
- (void)requestSupplementaryLexiconWithCompletion:(CDUnknownBlockType)arg1;
- (void)returnToPreviousInputMode;
- (void)advanceToNextInputMode;
- (void)dismissKeyboard;
- (void)setView:(id)arg1;
@property(retain, nonatomic) UIInputView *inputView;
- (id)_textDocumentInterface;
- (id)_proxyInterface;
- (id)_compatibilityController;
@property(readonly, nonatomic) UIKeyboard *_keyboard;
- (_Bool)_shouldForwardSystemLayoutFittingSizeChanges;
- (struct CGSize)_systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)_setExtensionContext:(id)arg1;
- (id)_extensionContext;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
- (void)loadView;
- (void)_setTextDocumentProxy:(id)arg1;
- (void)dealloc;
- (void)_setupInputController;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UICompatibilityInputViewController : UIInputViewController
{
    UIKeyboardInputMode *_inputMode;
    UIKeyboard *_deferredSystemView;
    UIKeyboardInputMode *_incomingExtensionInputMode;
    _Bool _shouldRegenerateSizingConstraints;
    UIViewController *_inputController;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (_Bool)_requiresProxyInterface;
+ (id)deferredInputModeControllerWithKeyboard:(id)arg1;
+ (id)inputViewControllerWithView:(id)arg1;
@property(retain, nonatomic) UIViewController *inputController; // @synthesize inputController=_inputController;
- (void)viewDidLayoutSubviews;
- (void)didFinishTranslation;
- (void)finishSplitTransition:(_Bool)arg1;
- (void)willBeginTranslation;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (id)_keyboard;
- (id)childCompatibilityController;
- (void)setInputMode:(id)arg1;
- (void)tearDownInputController;
- (void)rebuildChildConstraints;
- (void)generateCompatibleSizeConstraintsIfNecessary;
- (void)didMoveToParentViewController:(id)arg1;
- (void)didSuspend:(id)arg1;
- (id)_compatView;
- (id)_compatibilityController;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (void)dealloc;
- (void)loadView;
- (id)_initAsDeferredController;

@end

@interface UITableViewCell : UIView <UIScrollViewDelegate, NSCoding, UIGestureRecognizerDelegate>
{
    UITableView *_tableView;
    id _layoutManager;
    id _target;
    SEL _editAction;
    SEL _accessoryAction;
    _UITableViewCellOldEditingData *_oldEditingData;
    id _editingData;
    double _rightMargin;
    long long _indentationLevel;
    double _indentationWidth;
    NSString *_reuseIdentifier;
    UIView *_contentView;
    UIImageView *_imageView;
    UILabel *_textLabel;
    UILabel *_detailTextLabel;
    UIView *_backgroundView;
    UIView *_selectedBackgroundView;
    UIView *_multipleSelectionBackgroundView;
    UIView *_selectedOverlayView;
    double _selectionFadeDuration;
    UIColor *_backgroundColor;
    UIColor *_separatorColor;
    UIVisualEffect *_separatorEffect;
    UIColor *_topShadowColor;
    UIColor *_bottomShadowColor;
    UIColor *_sectionBorderColor;
    UIView *_floatingSeparatorView;
    UIView *_topShadowAnimationView;
    UIView *_bottomShadowAnimationView;
    id _badge;
    struct __CFDictionary *_unhighlightedStates;
    id _highlightingSupport;
    id _selectionSegueTemplate;
    id _accessoryActionSegueTemplate;
    UIControl *_accessoryView;
    UIControl *_editingAccessoryView;
    UIView *_customAccessoryView;
    UIView *_customEditingAccessoryView;
    _UITableViewCellSeparatorView *_separatorView;
    _UITableViewCellSeparatorView *_topSeparatorView;
    UIView *_topShadowView;
    UITextField *_editableTextField;
    double _lastSelectionTime;
    NSTimer *_deselectTimer;
    double _textFieldOffset;
    double _indexBarWidth;
    struct UIEdgeInsets _separatorInset;
    struct UIEdgeInsets _backgroundInset;
    SEL _returnAction;
    UIColor *_selectionTintColor;
    UIColor *_accessoryTintColor;
    UIImage *_reorderControlImage;
    UILongPressGestureRecognizer *_menuGesture;
    NSIndexPath *_representedIndexPath;
    _Bool _isPigglyWigglyCell;
    _Bool _focusable;
    UITableViewCellDeleteConfirmationView *_swipeToDeleteConfirmationView;
    UITapGestureRecognizer *_swipeToDeleteCancelationGesture;
    UIView *_clearBlendingView;
    double _swipeToDeleteDistancePulled;
    double _sectionCornerRadius;
    double _sectionBorderWidth;
    double _defaultMarginWidth;
    struct {
        unsigned int showingDeleteConfirmation:1;
        unsigned int separatorStyle:3;
        unsigned int selectionStyle:3;
        unsigned int selectionFadeFraction:11;
        unsigned int editing:1;
        unsigned int editingStyle:3;
        unsigned int accessoryType:3;
        unsigned int editingAccessoryType:3;
        unsigned int showsAccessoryWhenEditing:1;
        unsigned int showsReorderControl:1;
        unsigned int showDisclosure:1;
        unsigned int showTopSeparator:1;
        unsigned int hideTopSeparatorDuringReordering:1;
        unsigned int disclosureClickable:1;
        unsigned int disclosureStyle:1;
        unsigned int showingRemoveControl:1;
        unsigned int sectionLocation:3;
        unsigned int tableViewStyle:1;
        unsigned int shouldIndentWhileEditing:1;
        unsigned int fontSet:1;
        unsigned int usingDefaultSelectedBackgroundView:1;
        unsigned int wasSwiped:1;
        unsigned int highlighted:1;
        unsigned int separatorDirty:1;
        unsigned int drawn:1;
        unsigned int drawingDisabled:1;
        unsigned int style:12;
        unsigned int showingMenu:1;
        unsigned int clipsContents:1;
        unsigned int animatingSelection:1;
        unsigned int backgroundColorSet:1;
        unsigned int needsSetup:1;
        unsigned int dontDrawTopShadow:1;
        unsigned int usingMultiselectbackgroundView:1;
        unsigned int layoutLoopCounter:2;
        unsigned int isPigglyWigglyCell;
        unsigned int deleteAnimationInProgress:1;
        unsigned int deleteCancelationAnimationInProgress:1;
        unsigned int animating:1;
        unsigned int shouldHaveFullLengthBottomSeparator:1;
        unsigned int shouldHaveFullLengthTopSeparator:1;
        unsigned int drawsSeparatorAtTopOfSection:1;
        unsigned int drawsSeparatorAtBottomOfSection:1;
        unsigned int separatorBackdropOverlayBlendMode:3;
        unsigned int separatorDrawsInVibrantLightMode:1;
        unsigned int separatorHidden:1;
        unsigned int hidingSeparatorsForSelection:1;
        unsigned int clippedBeforeSwiping:1;
        unsigned int allowsReorderingWhenNotEditing:1;
        unsigned int needsHeightCalculation:1;
    } _tableCellFlags;
}

+ (id)_defaultTopShadowColor;
+ (void)_initializeForIdiom:(long long)arg1;
+ (void)initialize;
- (void)_setAllowsReorderingWhenNotEditing:(_Bool)arg1;
- (_Bool)_allowsReorderingWhenNotEditing;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)_usesRoundedGroups;
- (_Bool)_separatorHidden;
- (void)_setSeparatorHidden:(_Bool)arg1;
- (double)_sectionBorderWidth;
- (void)_setSectionBorderWidth:(double)arg1;
- (struct UIEdgeInsets)_backgroundInset;
- (void)_setBackgroundInset:(struct UIEdgeInsets)arg1;
- (void)_setIndexBarWidth:(double)arg1;
- (double)_indexBarWidth;
- (void)_setSeparatorEffect:(id)arg1;
- (id)_separatorEffect;
- (long long)_separatorBackdropOverlayBlendMode;
- (void)_setSeparatorBackdropOverlayBlendMode:(long long)arg1;
- (_Bool)_separatorDrawsInVibrantLightMode;
- (void)_setSeparatorDrawsInVibrantLightMode:(_Bool)arg1;
- (void)_setSeparatorDrawsInVibrantLightModeUIAppearance:(id)arg1;
@property(nonatomic) struct UIEdgeInsets separatorInset;
- (_Bool)_isAnimating;
- (void)_setAnimating:(_Bool)arg1;
- (void)_setAnimating:(_Bool)arg1 clippingAdjacentCells:(_Bool)arg2;
- (SEL)returnAction;
- (void)setReturnAction:(SEL)arg1;
- (void)textFieldDidBecomeFirstResponder:(id)arg1;
- (void)setPlaceHolderValue:(id)arg1;
- (double)textFieldOffset;
- (void)setTextFieldOffset:(double)arg1;
- (id)editableTextField;
- (void)_actionButtonPushed:(id)arg1;
- (void)_swipeAccessoryButtonPushed;
- (void)_swipeDeleteButtonPushed;
- (void)_updateViewsForDeleteButton;
- (void)_setDeleteAnimationInProgress:(_Bool)arg1;
- (_Bool)_isDeleteAnimationInProgress;
- (id)_deleteConfirmationView;
- (_Bool)_isDeleteCancelationAnimationInProgress;
- (void)_setDeleteCancelationAnimationInProgress:(_Bool)arg1;
- (void)_updateSwipeWithDistancePulled:(double)arg1;
- (void)_handleSwipeDeleteCancelation:(id)arg1;
- (void)_beginSwiping;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_tableViewDidUpdateMarginWidth;
- (void)_updateSeparatorContent:(_Bool)arg1;
- (void)_focusStateDidChange;
- (_Bool)_isFocusableElement;
- (void)_setIsPigglyWigglyCell:(_Bool)arg1;
- (_Bool)_isPigglyWigglyCell;
- (double)_defaultMarginWidth;
- (void)_setDefaultMarginWidth:(double)arg1;
- (void)_setRightMarginWidth:(double)arg1;
- (double)_rightMarginWidth;
- (void)_setMarginWidth:(double)arg1;
- (double)_marginWidth;
- (void)_setFocusable:(_Bool)arg1;
- (_Bool)_isFocusable;
- (void)_setIndexPath:(id)arg1;
- (id)_indexPath;
- (_Bool)_isUsingOldStyleMultiselection;
- (_Bool)_shouldSaveOpaqueStateForView:(id)arg1;
- (_Bool)_isMultiselecting;
- (void)_setMultiselecting:(_Bool)arg1;
- (void)_multiselectColorChanged;
- (void)_startToEditTextField;
- (id)_scriptingInfo;
- (void)setTableViewStyle:(long long)arg1;
- (long long)tableViewStyle;
- (void)removeControl:(id)arg1 wasCanceledForTarget:(id)arg2;
- (struct CGRect)removeControl:(id)arg1 endFrameForTarget:(id)arg2;
- (struct CGRect)removeControl:(id)arg1 startFrameForTarget:(id)arg2;
- (void)_setDrawsTopShadow:(_Bool)arg1;
- (_Bool)_drawsTopShadow;
- (_Bool)_needsHeightCalculation;
- (void)_setNeedsHeightCalculation:(_Bool)arg1;
- (_Bool)_needsSetup;
- (void)_setNeedsSetup:(_Bool)arg1;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (SEL)_accessoryAction;
- (void)_setAccessoryAction:(SEL)arg1;
- (id)_target;
- (void)_setTarget:(id)arg1;
- (_Bool)wasSwiped;
- (void)setWasSwiped:(_Bool)arg1;
- (_Bool)_hasEditingAccessoryView;
- (_Bool)_hasAccessoryView;
- (id)_titleForDeleteConfirmationButton;
- (id)_topShadowView:(_Bool)arg1;
- (id)_selectedBackgroundView:(_Bool)arg1;
- (id)_backgroundView:(_Bool)arg1;
- (id)_customEditingAccessoryView:(_Bool)arg1;
- (id)_customAccessoryView:(_Bool)arg1;
- (id)_editingAccessoryView:(_Bool)arg1;
- (id)_accessoryView:(_Bool)arg1;
- (id)_defaultAccessoryView;
- (id)_newAccessoryView:(_Bool)arg1;
- (void)removeEditingData;
- (id)editingData:(_Bool)arg1;
- (double)_editingButtonOffset;
- (_Bool)_isReorderable;
- (void)deleteConfirmationControlWasCancelled:(id)arg1;
- (void)deleteConfirmationControlWasClicked:(id)arg1;
- (void)editControlWasClicked:(id)arg1;
- (void)removeControlWillHideRemoveConfirmation:(id)arg1;
- (void)insertControl:(id)arg1 shouldInsertWithTarget:(id)arg2;
- (void)removeControl:(id)arg1 willRemoveTarget:(id)arg2;
- (void)_willBeDeleted;
- (void)_uiRemoveControlMinusButtonHideAnimationDone:(id)arg1;
- (void)_grabberReleased:(id)arg1;
- (void)_grabberDragged:(id)arg1 yDelta:(float)arg2;
- (void)_grabberBeganReorder:(id)arg1;
- (id)_removeControl;
- (void)_removeInnerShadow;
- (void)_animateInnerShadowForInsertion:(_Bool)arg1 withRowAnimation:(long long)arg2;
- (void)_removeFloatingSeparator;
- (void)_animateFloatingSeparatorForInsertion:(_Bool)arg1 withRowAnimation:(long long)arg2;
- (void)_drawSeparatorInRect:(struct CGRect)arg1;
- (void)_setDrawsTopSeparator:(_Bool)arg1;
- (void)_setShouldIndentWhileEditing:(_Bool)arg1;
- (void)_setShowingDeleteConfirmation:(_Bool)arg1;
- (void)_setEditingStyle:(long long)arg1;
- (id)_reorderControlImage;
- (void)_setReorderControlImage:(id)arg1;
- (id)_badge:(_Bool)arg1;
- (id)_imageView:(_Bool)arg1;
- (id)_editableTextField:(_Bool)arg1;
- (id)_detailTextLabel:(_Bool)arg1;
- (id)_textLabel:(_Bool)arg1;
- (id)_tableView;
- (void)_setTableView:(id)arg1;
- (void)_performAction:(SEL)arg1 sender:(id)arg2;
- (void)_updateFullWidthSwipeDeletionView;
- (_Bool)canBecomeFirstResponder;
- (void)_setSectionLocation:(int)arg1 animated:(_Bool)arg2 forceBackgroundSetup:(_Bool)arg3;
- (void)setSectionLocation:(int)arg1 animated:(_Bool)arg2;
- (void)setSectionLocation:(int)arg1;
- (void)_setupSelectedBackgroundView;
- (int)sectionLocation;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)_insetsBackground;
- (struct CGRect)contentRectForState:(unsigned long long)arg1;
- (void)didTransitionToState:(unsigned long long)arg1;
- (void)_didTransitionToState:(unsigned long long)arg1;
- (void)willTransitionToState:(unsigned long long)arg1;
- (void)_willTransitionToState:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (void)_setHiddenForReuse:(_Bool)arg1;
- (void)_updateCellMaskViewsForView:(id)arg1 backdropView:(id)arg2;
- (void)removeFromSuperview;
- (SEL)accessoryAction;
- (void)setAccessoryAction:(SEL)arg1;
- (SEL)editAction;
- (void)setEditAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)reorderRectForBounds:(struct CGRect)arg1;
- (struct CGRect)accessoryRectForBounds:(struct CGRect)arg1 accessoryView:(id)arg2 isCustom:(_Bool)arg3;
- (struct CGRect)editRectForBounds:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)textRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)contentRectForBounds:(struct CGRect)arg1;
- (struct CGRect)backgroundRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_delegateConfirmationRect;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) _Bool showingDeleteConfirmation;
- (void)setShowingDeleteConfirmation:(_Bool)arg1;
@property(nonatomic, getter=isEditing) _Bool editing;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (double)selectionFadeDuration;
- (void)setSelectionFadeDuration:(double)arg1;
- (_Bool)clipsContents;
- (void)setClipsContents:(_Bool)arg1;
- (unsigned long long)currentStateMask;
@property(nonatomic) double indentationWidth;
@property(nonatomic) long long indentationLevel;
- (_Bool)hidesAccessoryWhenEditing;
- (void)setHidesAccessoryWhenEditing:(_Bool)arg1;
@property(retain, nonatomic) UIView *editingAccessoryView;
@property(nonatomic) long long editingAccessoryType;
- (id)_accessoryTintColor;
- (void)_setAccessoryTintColor:(id)arg1;
@property(retain, nonatomic) UIView *accessoryView;
@property(nonatomic) long long accessoryType;
- (void)_syncAccessoryViewsIfNecessary;
@property(nonatomic) _Bool shouldIndentWhileEditing;
@property(nonatomic) _Bool showsReorderControl;
- (void)_setShowsReorderControl:(_Bool)arg1;
@property(readonly, nonatomic) long long editingStyle;
- (void)setEditingStyle:(long long)arg1;
- (long long)style;
- (id)selectedOverlayView;
- (id)layoutManager;
- (void)setLayoutManager:(id)arg1;
- (void)_drawContentInRect:(struct CGRect)arg1 selected:(_Bool)arg2;
- (void)_updateHighlightColors;
- (_Bool)_isHighlighted;
- (float)selectionPercent;
- (_Bool)isAtLeastHalfSelected;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_delayedDeselect;
- (void)_deselectAnimationFinished;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_cancelInternalPerformRequests;
- (void)showSelectedBackgroundView:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(nonatomic, getter=isSelected) _Bool selected;
- (id)selectionTintColor;
- (void)setSelectionTintColor:(id)arg1;
@property(nonatomic) long long selectionStyle;
- (void)_setSelectionStyle:(long long)arg1 selectionTintColor:(id)arg2;
- (void)_setOpaque:(_Bool)arg1 forSubview:(id)arg2;
- (id)_multiselectBackgroundColor;
- (void)_clearOpaqueViewState:(id)arg1;
- (void)_saveOpaqueViewState:(id)arg1;
- (void)prepareForReuse;
@property(readonly, copy, nonatomic) NSString *reuseIdentifier;
- (void)setReuseIdentifier:(id)arg1;
- (void)setSectionBorderColor:(id)arg1;
- (id)sectionBorderColor;
- (id)bottomShadowColor;
- (void)setBottomShadowColor:(id)arg1;
- (id)topShadowColor;
- (void)setTopShadowColor:(id)arg1;
- (id)separatorColor;
- (void)setSeparatorColor:(id)arg1;
- (id)tableBackgroundColor;
- (void)setTableBackgroundColor:(id)arg1;
- (_Bool)_backgroundColorSet;
- (id)_contentBackgroundColor;
- (void)_setTableBackgroundCGColor:(struct CGColor *)arg1 withSystemColorName:(id)arg2;
- (long long)separatorStyle;
- (void)setSeparatorStyle:(long long)arg1;
@property(retain, nonatomic) UIView *selectedBackgroundView;
@property(retain, nonatomic) UIView *multipleSelectionBackgroundView;
- (void)setSelectedBackgroundView:(id)arg1 animated:(_Bool)arg2;
- (void)selectedBackgroundViewChange:(id)arg1 finished:(id)arg2 context:(id)arg3;
@property(retain, nonatomic) UIView *backgroundView;
@property(readonly, retain, nonatomic) UIView *contentView;
- (id)_badgeText;
- (void)_setBadgeText:(id)arg1;
- (id)selectedImage;
- (void)setSelectedImage:(id)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)selectedTextColor;
- (void)setSelectedTextColor:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (long long)lineBreakMode;
- (void)setLineBreakMode:(long long)arg1;
- (long long)textAlignment;
- (void)setTextAlignment:(long long)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (void)_setFont:(id)arg1 layout:(_Bool)arg2;
- (id)text;
- (void)setText:(id)arg1;
@property(readonly, retain, nonatomic) UIImageView *imageView;
@property(readonly, retain, nonatomic) UILabel *detailTextLabel;
@property(readonly, retain, nonatomic) UILabel *textLabel;
- (_Bool)_canDrawContent;
- (void)setDrawingEnabled:(_Bool)arg1;
- (_Bool)drawingEnabled;
- (void)_didCreateContentView;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)_setupMenuGesture;
- (void)_endSwiping:(_Bool)arg1;
- (void)_systemTextSizeChanged;
- (void)_setupTableViewCellCommon;
- (id)initWithFrame:(struct CGRect)arg1 reuseIdentifier:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (_Bool)_drawsSeparatorAtBottomOfSection;
- (void)_setDrawsSeparatorAtBottomOfSection:(_Bool)arg1;
- (_Bool)_drawsSeparatorAtTopOfSection;
- (void)_setDrawsSeparatorAtTopOfSection:(_Bool)arg1;
- (void)_updateSeparatorContent;
- (_Bool)_shouldHideSeparator;
- (struct CGRect)_topSeparatorFrame;
- (_Bool)_showFullLengthTopSeparatorForTopOfSection;
- (_Bool)_showSeparatorAtTopOfSection;
- (struct CGRect)_separatorFrame;
- (double)_separatorHeight;
- (_Bool)_shouldHaveFullLengthTopSeparator;
- (void)_setShouldHaveFullLengthTopSeparator:(_Bool)arg1;
- (_Bool)_shouldHaveFullLengthBottomSeparator;
- (void)_setShouldHaveFullLengthBottomSeparator:(_Bool)arg1;
- (id)selectionSegueTemplate;
- (void)setSelectionSegueTemplate:(id)arg1;
- (id)accessoryActionSegueTemplate;
- (void)setAccessoryActionSegueTemplate:(id)arg1;
- (void)_setDrawsTopSeparatorDuringReordering:(_Bool)arg1;
- (_Bool)_drawsTopSeparatorDuringReordering;
- (void)_setReordering:(_Bool)arg1;
- (void)_resetSelectionTimer;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_menuDismissed:(id)arg1;
- (void)_topShadowDidFadeOut;
- (void)_updateTopShadowView:(_Bool)arg1;
- (void)_updateContentClip;
- (void)_longPressGestureRecognized:(id)arg1;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (void)_editingTransitionAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (struct CGSize)_imageInsetSize;
- (struct CGSize)_textInsetSize;
- (id)_badge;
- (id)_imageView;
- (id)_editableTextField;
- (void)_contentViewLabelTextDidChange:(id)arg1;
- (void)_releaseDetailTextLabel;
- (void)_releaseTextLabel;
- (id)_detailTextLabel;
- (id)_textLabel;
- (id)_defaultFont;
- (void)_showReorderControl;
- (void)_updateAndCacheBackgroundColorForHighlightIgnoringSelection:(_Bool)arg1;
- (void)_updateHighlightColorsForAnimationHalfwayPoint;
- (_Bool)_isCurrentlyConsideredHighlighted;
- (void)_updateHighlightColorsForView:(id)arg1 highlighted:(_Bool)arg2;
- (void)_layoutSubviewsAnimated:(_Bool)arg1;
- (id)_layoutDebuggingTitle;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)setNeedsUpdateConstraints;
- (void)_removeRemoveControl;
- (void)_releaseRemoveControl;
- (id)_createRemoveControlForStyle:(long long)arg1;
- (id)_currentAccessoryView:(_Bool)arg1;
- (id)_disclosurePressedImage:(_Bool)arg1;
- (id)_disclosureImage:(_Bool)arg1;
- (id)_disclosureChevronImage:(_Bool)arg1;
- (id)_checkmarkImage:(_Bool)arg1;
- (id)_detailDisclosureImage:(_Bool)arg1;
- (id)_tintedDisclosureImagePressed:(_Bool)arg1;
- (void)_finishedFadingGrabber:(id)arg1 finished:(_Bool)arg2;
- (void)_setGrabberHidden:(_Bool)arg1;
- (void)_releaseReorderingControl;
- (id)_reorderingSeparatorView;
- (id)_reorderingControl;
- (void)_createReorderControlIfNeeded;
- (void)setOldEditingData:(id)arg1;
- (id)oldEditingData;
- (id)_swipeToDeleteConfirmationView;
- (_Bool)_isInModalViewController;
- (long long)_popoverControllerStyle;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UICompletionCell : UITableViewCell
{
    NSString *_cellContentString;
}

@property(retain, nonatomic, getter=_contentString, setter=_setContentString:) NSString *contentString; // @synthesize contentString=_cellContentString;
- (void)dealloc;

@end

@interface UICompletionTable : UIView <UITableViewDelegate, UITableViewDataSource>
{
    UICompletionTablePrivate *_private;
}

+ (id)_shadowImage;
+ (id)_cellFont;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)dequeueReusableCellWithIdentifier:(id)arg1;
- (id)_completionForRow:(long long)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
@property(nonatomic) struct UIEdgeInsets scrollIndicatorInsets;
@property(nonatomic) struct UIEdgeInsets contentInset;
- (void)setTopStrokeColor:(id)arg1;
- (void)reloadData;
@property(nonatomic) id delegate;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UICompletionTablePrivate : NSObject
{
    id _delegate;
    UITableView *_table;
    UIShadowView *_shadowView;
    UIView *_topStrokeView;
}

- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UICompositeImageElement : NSObject
{
    UIImage *m_image;
    struct CGRect m_fromRect;
    struct CGRect m_toRect;
    int m_operation;
    double m_fraction;
}

+ (id)elementWithImage:(id)arg1 toRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3 operation:(int)arg4 fraction:(double)arg5;
- (void)draw;
- (void)dealloc;
- (id)initWithImage:(id)arg1 toRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3 operation:(int)arg4 fraction:(double)arg5;

@end

__attribute__((visibility("hidden")))
@interface UICompositeImageView : UIView
{
    NSMutableArray *m_images;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)removeAllImages;
- (void)addImage:(id)arg1 toRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3 operation:(int)arg4 fraction:(double)arg5;
- (void)addImage:(id)arg1 toRect:(struct CGRect)arg2 fromRect:(struct CGRect)arg3;
- (void)addImage:(id)arg1 operation:(int)arg2 fraction:(double)arg3;
- (void)addImage:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UILocalNotification : NSObject <NSCopying, NSCoding>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)alloc;
- (_Bool)isTriggeredByRegion;
- (_Bool)isTriggeredByDate;
- (void)validate;
- (void)clearNonSystemProperties;
- (long long)compareFireDates:(id)arg1;
- (_Bool)isValid;
- (id)nextFireDateAfterDate:(id)arg1 localTimeZone:(id)arg2;
- (id)nextFireDateForLastFireDate:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(copy, nonatomic) NSString *alertAction; // @dynamic alertAction;
@property(copy, nonatomic) NSString *alertBody; // @dynamic alertBody;
@property(copy, nonatomic) NSString *alertLaunchImage; // @dynamic alertLaunchImage;
@property(nonatomic) _Bool allowSnooze; // @dynamic allowSnooze;
@property(nonatomic) long long applicationIconBadgeNumber; // @dynamic applicationIconBadgeNumber;
@property(copy, nonatomic) NSString *category; // @dynamic category;
@property(copy, nonatomic) NSString *customLockSliderLabel; // @dynamic customLockSliderLabel;
@property(copy, nonatomic) NSDate *fireDate; // @dynamic fireDate;
@property(nonatomic) _Bool fireNotificationsWhenAppRunning; // @dynamic fireNotificationsWhenAppRunning;
@property(copy, nonatomic) NSString *firedNotificationName; // @dynamic firedNotificationName;
@property(nonatomic) _Bool hasAction; // @dynamic hasAction;
@property(nonatomic) _Bool hideAlertTitle; // @dynamic hideAlertTitle;
@property(nonatomic) _Bool interruptAudioAndLockDevice; // @dynamic interruptAudioAndLockDevice;
@property(nonatomic) _Bool isTransient; // @dynamic isTransient;
@property(copy, nonatomic) CLRegion *region; // @dynamic region;
@property(nonatomic) _Bool regionTriggersOnce; // @dynamic regionTriggersOnce;
@property(nonatomic) int remainingRepeatCount; // @dynamic remainingRepeatCount;
@property(copy, nonatomic) NSCalendar *repeatCalendar; // @dynamic repeatCalendar;
@property(nonatomic) unsigned long long repeatInterval; // @dynamic repeatInterval;
@property(nonatomic) _Bool resumeApplicationInBackground; // @dynamic resumeApplicationInBackground;
@property(nonatomic) _Bool showAlarmStatusBarItem; // @dynamic showAlarmStatusBarItem;
@property(copy, nonatomic) NSString *snoozedNotificationName; // @dynamic snoozedNotificationName;
@property(copy, nonatomic) NSString *soundName; // @dynamic soundName;
@property(nonatomic) int soundType; // @dynamic soundType;
@property(copy, nonatomic) NSTimeZone *timeZone; // @dynamic timeZone;
@property(nonatomic) int totalRepeatCount; // @dynamic totalRepeatCount;
@property(copy, nonatomic) NSDictionary *userInfo; // @dynamic userInfo;

@end

__attribute__((visibility("hidden")))
@interface UIConcreteLocalNotification : UILocalNotification
{
    NSDate *fireDate;
    NSTimeZone *timeZone;
    unsigned long long repeatInterval;
    NSCalendar *repeatCalendar;
    int totalRepeatCount;
    int remainingRepeatCount;
    CLRegion *region;
    _Bool regionTriggersOnce;
    NSString *alertBody;
    _Bool hasAction;
    NSString *alertAction;
    NSString *alertLaunchImage;
    NSString *soundName;
    long long applicationIconBadgeNumber;
    NSData *userInfoData;
    _Bool hideAlertTitle;
    _Bool allowSnooze;
    int soundType;
    _Bool interruptAudioAndLockDevice;
    _Bool resumeApplicationInBackground;
    _Bool fireNotificationsWhenAppRunning;
    _Bool showAlarmStatusBarItem;
    NSString *customLockSliderLabel;
    NSString *firedNotificationName;
    NSString *snoozedNotificationName;
    NSString *category;
    _Bool isTransient;
}

- (void)setRegionTriggersOnce:(_Bool)arg1;
- (_Bool)regionTriggersOnce;
- (void)setRegion:(id)arg1;
- (id)region;
- (void)setIsTransient:(_Bool)arg1;
- (_Bool)isTransient;
- (void)setCategory:(id)arg1;
- (id)category;
- (void)setSnoozedNotificationName:(id)arg1;
- (id)snoozedNotificationName;
- (void)setFiredNotificationName:(id)arg1;
- (id)firedNotificationName;
- (void)setCustomLockSliderLabel:(id)arg1;
- (id)customLockSliderLabel;
- (void)setShowAlarmStatusBarItem:(_Bool)arg1;
- (_Bool)showAlarmStatusBarItem;
- (void)setFireNotificationsWhenAppRunning:(_Bool)arg1;
- (_Bool)fireNotificationsWhenAppRunning;
- (void)setResumeApplicationInBackground:(_Bool)arg1;
- (_Bool)resumeApplicationInBackground;
- (void)setInterruptAudioAndLockDevice:(_Bool)arg1;
- (_Bool)interruptAudioAndLockDevice;
- (int)soundType;
- (void)setAllowSnooze:(_Bool)arg1;
- (_Bool)allowSnooze;
- (void)setHideAlertTitle:(_Bool)arg1;
- (_Bool)hideAlertTitle;
- (void)setRemainingRepeatCount:(int)arg1;
- (int)remainingRepeatCount;
- (int)totalRepeatCount;
- (void)setApplicationIconBadgeNumber:(long long)arg1;
- (long long)applicationIconBadgeNumber;
- (void)setSoundName:(id)arg1;
- (id)soundName;
- (void)setAlertLaunchImage:(id)arg1;
- (id)alertLaunchImage;
- (void)setAlertAction:(id)arg1;
- (id)alertAction;
- (void)setHasAction:(_Bool)arg1;
- (_Bool)hasAction;
- (void)setAlertBody:(id)arg1;
- (id)alertBody;
- (void)setRepeatCalendar:(id)arg1;
- (id)repeatCalendar;
- (void)setRepeatInterval:(unsigned long long)arg1;
- (unsigned long long)repeatInterval;
- (void)setTimeZone:(id)arg1;
- (id)timeZone;
- (void)setFireDate:(id)arg1;
- (id)fireDate;
- (_Bool)isTriggeredByDate;
- (void)validate;
- (void)clearNonSystemProperties;
- (_Bool)isValid;
- (id)nextFireDateAfterDate:(id)arg1 localTimeZone:(id)arg2;
- (id)nextFireDateForLastFireDate:(id)arg1;
- (id)description;
- (id)userInfo;
- (void)setUserInfo:(id)arg1;
- (void)_setUserInfoData:(id)arg1;
- (long long)compareFireDates:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setTotalRepeatCount:(int)arg1;
- (void)setSoundType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIControlTargetAction : NSObject
{
    id _target;
    SEL _action;
    int _eventMask;
    _Bool _cancelled;
}

@property(nonatomic) _Bool cancelled; // @synthesize cancelled=_cancelled;

@end

@interface UICopyToPasteboardActivity : UIActivity
{
}

- (id)pasteboard;
- (void)performActivity;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;

@end

__attribute__((visibility("hidden")))
@interface UICustomObject : NSObject
{
}

- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIPickerContentView : UIView
{
    UILabel *_titleLabel;
    UIImageView *_checkView;
    struct {
        unsigned int checked:1;
        unsigned int highlighted:1;
    } _pickerContentViewFlags;
}

+ (double)_checkmarkOffset;
- (_Bool)_isSelectable;
- (double)labelWidthForBounds:(struct CGRect)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isHighlighted;
- (void)layoutSubviews;
@property(readonly, nonatomic) UILabel *titleLabel;
@property(nonatomic, getter=isChecked) _Bool checked;
- (id)checkedColor;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIDOMHTMLOptionPickerCell : UIPickerContentView
{
    _Bool _disabled;
}

@property(nonatomic) _Bool disabled; // @synthesize disabled=_disabled;
- (id)initWithHTMLOptionNode:(id)arg1;
- (id)initCommon;
- (_Bool)_isSelectable;

@end

__attribute__((visibility("hidden")))
@interface UIDOMHTMLOptGroupCell : UIDOMHTMLOptionPickerCell
{
}

- (void)layoutSubviews;
- (double)labelWidthForBounds:(struct CGRect)arg1;
- (id)initWithHTMLOptGroupNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDOMHTMLOptGroupSelectedItem : NSObject <UIWebSelectedItemPrivate>
{
    DOMHTMLOptGroupElement *_node;
}

@property(retain, nonatomic) DOMHTMLOptGroupElement *_node; // @synthesize _node;
- (void)dealloc;
- (void)unselect;
- (void)setSelected:(_Bool)arg1;
- (_Bool)isGroup;
- (_Bool)selected;
- (id)node;
- (id)initWithHTMLOptGroupNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDOMHTMLOptionSelectedItem : NSObject <UIWebSelectedItemPrivate>
{
    _Bool _selected;
    DOMHTMLOptionElement *_node;
}

@property(retain, nonatomic) DOMHTMLOptionElement *_node; // @synthesize _node;
- (void)dealloc;
- (void)unselect;
- (void)setSelected:(_Bool)arg1;
- (_Bool)isGroup;
- (_Bool)selected;
- (id)node;
- (id)initWithHTMLOptionNode:(id)arg1;

@end

@interface UIDateLabel : UILabel
{
    _Bool _forceTimeOnly;
    NSDate *_date;
    _Bool _boldForAllLocales;
    NSDate *_yesterday;
    NSDate *_today;
    NSDate *_noon;
    NSDate *_tomorrow;
    NSDate *_previousWeek;
    UIFont *_timeDesignatorFont;
    NSCalendar *_calendar;
    _Bool _shouldRecomputeText;
    double _paddingFromTimeToDesignator;
}

+ (id)defaultFont;
+ (id)pmString;
+ (id)amString;
+ (id)_weekdayDateFormatter;
+ (id)_relativeDateFormatter;
+ (id)_timeOnlyDateFormatter;
+ (id)_dateFormatter;
+ (id)_timeFormatWithoutDesignator;
@property(nonatomic) _Bool shouldRecomputeText; // @synthesize shouldRecomputeText=_shouldRecomputeText;
@property(nonatomic) double paddingFromTimeToDesignator; // @synthesize paddingFromTimeToDesignator=_paddingFromTimeToDesignator;
@property(nonatomic) _Bool boldForAllLocales; // @synthesize boldForAllLocales=_boldForAllLocales;
@property(nonatomic) _Bool forceTimeOnly; // @synthesize forceTimeOnly=_forceTimeOnly;
@property(readonly, nonatomic) struct CGSize timeDesignatorSize;
@property(readonly, nonatomic) UIFont *timeDesignatorFont;
@property(readonly, nonatomic) NSString *timeDesignator;
@property(readonly, nonatomic) _Bool timeDesignatorAppearsBeforeTime;
@property(readonly, nonatomic) _Bool use24HourTime;
- (id)font;
@property(readonly, nonatomic, getter=_dateString) NSString *dateString;
- (id)text;
- (void)_recomputeTextIfNecessary;
@property(nonatomic) double timeInterval;
@property(retain, nonatomic) NSDate *date;
- (double)_tomorrow;
- (double)_noon;
- (double)_today;
- (double)_yesterday;
- (double)_lastWeek;
- (id)_todayDate;
- (id)_dateWithDayDiffFromToday:(long long)arg1;
- (id)_calendar;
- (void)drawTextInRect:(struct CGRect)arg1;
- (id)_stringDrawingContext;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)_didUpdateDate;
- (void)invalidate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIDatePicker : UIControl <UIPickerViewScrollTesting, NSCoding>
{
    _UIDatePickerView *_pickerView;
    _Bool _useCurrentDateDuringDecoding;
}

+ (Class)_pickerViewClass;
- (void)_performScrollTest:(id)arg1 withIterations:(long long)arg2 rowsToScroll:(long long)arg3 inComponent:(long long)arg4;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)invalidateIntrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)setDate:(id)arg1 animated:(_Bool)arg2;
@property(nonatomic) long long minuteInterval; // @dynamic minuteInterval;
@property(nonatomic) double countDownDuration; // @dynamic countDownDuration;
@property(retain, nonatomic) NSDate *maximumDate; // @dynamic maximumDate;
@property(retain, nonatomic) NSDate *minimumDate; // @dynamic minimumDate;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(copy, nonatomic) NSCalendar *calendar; // @dynamic calendar;
@property(retain, nonatomic) NSTimeZone *timeZone; // @dynamic timeZone;
@property(retain, nonatomic) NSLocale *locale; // @dynamic locale;
- (void)_setLocale:(id)arg1;
- (id)_locale;
@property(nonatomic) long long datePickerMode; // @dynamic datePickerMode;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_insertPickerView;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setDate:(id)arg1 animate:(_Bool)arg2;
- (void)setBackgroundColor:(id)arg1;
- (int)second;
- (int)minute;
- (int)hour;
- (void)setHighlightsToday:(_Bool)arg1;
- (void)setStaggerTimeIntervals:(_Bool)arg1;
- (void)setDateComponents:(id)arg1;
- (id)dateComponents;
- (void)setDelegate:(id)arg1;
@property(nonatomic, getter=_useCurrentDateDuringDecoding, setter=_setUseCurrentDateDuringDecoding:) _Bool useCurrentDateDuringDecoding;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(nonatomic, getter=_usesModernStyle, setter=_setUsesModernStyle:) _Bool _usesModernStyle;
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval; // @dynamic allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration; // @dynamic allowsZeroCountDownDuration;
@property(nonatomic, getter=_drawsBackground, setter=_setDrawsBackground:) _Bool drawsBackground; // @dynamic drawsBackground;
@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome; // @dynamic usesBlackChrome;
@property(readonly, nonatomic, getter=_dateUnderSelectionBar) NSDate *dateUnderSelectionBar; // @dynamic dateUnderSelectionBar;
- (void)_setHidesLabels:(_Bool)arg1;
- (void)_setHighlightsToday:(_Bool)arg1;
@property(readonly, nonatomic, getter=_contentWidth) double contentWidth; // @dynamic contentWidth;
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;
- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;
@property(nonatomic) double timeInterval; // @dynamic timeInterval;

@end

__attribute__((visibility("hidden")))
@interface UIDatePickerContentView : UIView
{
    struct {
        unsigned int isAmPm:1;
    } _datePickerContentViewFlags;
    _Bool _isModern;
    UILabel *_titleLabel;
    double _titleLabelMaxX;
    long long _titleAlignment;
}

@property(nonatomic) _Bool isModern; // @synthesize isModern=_isModern;
@property(nonatomic) long long titleAlignment; // @synthesize titleAlignment=_titleAlignment;
@property(nonatomic) double titleLabelMaxX; // @synthesize titleLabelMaxX=_titleLabelMaxX;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)layoutSubviews;
@property(nonatomic) _Bool isAmPm;
- (_Bool)_canBeReusedInPickerView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDatePickerWeekMonthDayView : UIView
{
    struct {
        unsigned int weekdayLast:1;
    } _datePickerWeekMonthDayViewFlags;
    _Bool _isModern;
    UILabel *_dateLabel;
    UILabel *_weekdayLabel;
    NSString *_formattedDateString;
    double _weekdayWidth;
}

@property(nonatomic) _Bool isModern; // @synthesize isModern=_isModern;
@property(nonatomic) double weekdayWidth; // @synthesize weekdayWidth=_weekdayWidth;
@property(copy, nonatomic) NSString *formattedDateString; // @synthesize formattedDateString=_formattedDateString;
@property(readonly, nonatomic) UILabel *weekdayLabel; // @synthesize weekdayLabel=_weekdayLabel;
@property(readonly, nonatomic) UILabel *dateLabel; // @synthesize dateLabel=_dateLabel;
@property(nonatomic) _Bool weekdayLast;
- (void)layoutSubviews;
- (_Bool)_canBeReusedInPickerView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIDefaultKeyboardInput : UIView <UIKeyboardInput, UITextInputPrivate>
{
    UITextInputTraits *m_traits;
}

- (id)selectionRectsForRange:(id)arg1;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (void)unmarkText;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textInRange:(id)arg1;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
@property(copy) UITextRange *selectedTextRange;
- (_Bool)hasText;
- (struct CGRect)visibleBounds;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;
- (_Bool)becomesEditableWithGestures;
- (void)updateSelection;
- (_Bool)isEditing;
- (_Bool)isEditable;
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)selectionView;
@property(nonatomic) _Bool forceEnableDictation;
@property(nonatomic) _Bool acceptsEmoji; // @dynamic acceptsEmoji;
- (void)setSecure:(_Bool)arg1;
- (_Bool)isSecure;
- (void)setupPlaceholderTextIfNeeded;
- (_Bool)isShowingPlaceholder;
- (struct CGRect)convertCaretRect:(struct CGRect)arg1;
- (struct CGRect)caretRect;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (id)text;
- (void)setText:(id)arg1;
- (void)selectAll;
- (void)extendCurrentSelection:(int)arg1;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (struct _NSRange)selectionRange;
- (_Bool)selectionAtWordStart;
- (_Bool)selectionAtDocumentStart;
- (int)selectionState;
- (_Bool)hasSelection;
- (_Bool)hasContent;
- (int)wordOffsetInRange:(id)arg1;
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (id)rectsForNSRange:(struct _NSRange)arg1;
- (id)textColorForCaretSelection;
- (id)fontForCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterBeforeCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (void)confirmMarkedText:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
- (id)delegate;
- (void)takeTraitsFrom:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)textInputTraits;
- (void)dealloc;

// Remaining properties
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue; // @dynamic contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *insertionPointColor; // @dynamic insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth; // @dynamic insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(nonatomic) long long selectionAffinity;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(nonatomic) long long selectionGranularity;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType; // @dynamic shortcutConversionType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility; // @dynamic textLoupeVisibility;
@property(nonatomic) int textSelectionBehavior; // @dynamic textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate; // @dynamic textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet; // @dynamic textTrimmingSet;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;

@end

__attribute__((visibility("hidden")))
@interface UIDelayedAction : NSObject
{
    id m_target;
    SEL m_action;
    id m_userInfo;
    double m_delay;
    NSTimer *m_timer;
    _Bool m_canceled;
    NSString *m_runLoopMode;
}

- (void)timerFired:(id)arg1;
- (double)delay;
- (id)target;
- (void)setTarget:(id)arg1;
- (_Bool)scheduled;
- (id)userInfo;
- (void)unschedule;
- (void)cancel;
- (void)touchWithDelay:(double)arg1;
- (void)touch;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 userInfo:(id)arg3 delay:(double)arg4;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 userInfo:(id)arg3 delay:(double)arg4 mode:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface UIDelayedControlTargetAction : UIControlTargetAction
{
    UIEvent *_event;
}

- (void)dealloc;

@end

@interface UIDevice : NSObject
{
    long long _numDeviceOrientationObservers;
    float _batteryLevel;
    struct {
        unsigned int batteryMonitoringEnabled:1;
        unsigned int proximityMonitoringEnabled:1;
        unsigned int expectsFaceContactInLandscape:1;
        unsigned int orientation:3;
        unsigned int batteryState:2;
        unsigned int proximityState:1;
    } _deviceFlags;
}

+ (id)currentDevice;
+ (long long)currentDeviceOrientationAllowingAmbiguous:(_Bool)arg1;
+ (id)modelSpecificLocalizedStringKeyForKey:(id)arg1;
- (void)_playSystemSound:(unsigned int)arg1;
- (void)_unregisterForSystemSounds:(id)arg1;
- (void)_registerForSystemSounds:(id)arg1;
- (void)_updateSystemSoundActiveStatus:(id)arg1;
- (float)_softwareDimmingAlpha;
@property(nonatomic, setter=_setBacklightLevel:) float _backlightLevel;
- (void)playInputClick;
@property(readonly, nonatomic) long long userInterfaceIdiom;
@property(readonly, nonatomic, getter=isMultitaskingSupported) _Bool multitaskingSupported;
@property(readonly, nonatomic) _Bool proximityState;
- (void)_setExpectsFaceContactInLandscape:(_Bool)arg1;
@property(nonatomic, getter=isProximityMonitoringEnabled) _Bool proximityMonitoringEnabled;
@property(readonly, nonatomic) float batteryLevel;
@property(readonly, nonatomic) long long batteryState;
@property(nonatomic, getter=isBatteryMonitoringEnabled) _Bool batteryMonitoringEnabled;
@property(readonly, nonatomic, getter=isGeneratingDeviceOrientationNotifications) _Bool generatesDeviceOrientationNotifications;
- (void)endGeneratingDeviceOrientationNotifications;
- (void)beginGeneratingDeviceOrientationNotifications;
@property(readonly, nonatomic) long long orientation;
- (void)setOrientation:(long long)arg1 animated:(_Bool)arg2;
@property(readonly, retain, nonatomic) NSUUID *identifierForVendor;
@property(readonly, retain, nonatomic) NSString *buildVersion;
@property(readonly, retain, nonatomic) NSString *systemVersion;
@property(readonly, retain, nonatomic) NSString *systemName;
@property(readonly, retain, nonatomic) NSString *localizedModel;
@property(readonly, retain, nonatomic) NSString *model;
@property(readonly, retain, nonatomic) NSString *name;
- (id)_deviceInfoForKey:(struct __CFString *)arg1;
- (void)_setActiveUserInterfaceIdiom:(long long)arg1;
- (void)_enableDeviceOrientationEvents:(_Bool)arg1;
- (void)_clearGraphicsQualityOverride;
- (_Bool)_hasGraphicsQualityOverride;
- (void)_setGraphicsQualityOverride:(long long)arg1;
- (long long)_graphicsQuality;
- (_Bool)_isTTYEnabled;
- (void)_setBatteryLevel:(float)arg1;
- (void)_setBatteryState:(long long)arg1;
- (void)_setProximityState:(_Bool)arg1;
- (long long)_predictionGraphicsQuality;
- (long long)_keyboardGraphicsQuality;

@end

__attribute__((visibility("hidden")))
@interface UIDeviceAppearanceContainer : NSObject <_UIAppearanceContainer>
{
}

+ (_Bool)_preventsAppearanceProxyCustomization;
- (id)_appearanceGuideClass;
- (id)_appearanceContainer;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDictationController : NSObject <_UITouchPhaseChangeDelegate>
{
    AFDictationConnection *_connection;
    AFDictationOptions *_options;
    AFPreferences *_preferences;
    NSArray *_availableLanguages;
    NSTimer *_recordingLimitTimer;
    void *_callCenterFrameworkFileHandle;
    id _callCenter;
    void *_facetimeCallFrameworkFileHandle;
    id _facetimeCallManager;
    _Bool _wasDisabledDueToTelephonyActivity;
    UIAlertView *_dictationAvailableSoonAlert;
    _Bool _connectionWasAlreadyAliveForStatisticsLogging;
    UIDictationStreamingOperations *_streamingOperations;
    NSString *_language;
    _Bool _recievingResults;
    _Bool _streamingAnimationActive;
    double _lastAnimationUpdateTimeStamp;
    CADisplayLink *_streamingAnimationDisplayLink;
    _Bool cancelledByWaitingForLocalResults;
    _Bool _updatingDocument;
    _Bool dictationStartedFromGesture;
    _Bool _performingStreamingEditingOperation;
    _Bool _discardNextHypothesis;
    _Bool _hasPreheated;
    NSMutableArray *_pendingEdits;
    NSString *_previousHypothesis;
    NSString *_lastHypothesis;
    NSString *_targetHypothesis;
    UIKeyboardInputMode *_inputModeThatInvokedDictation;
    struct _NSRange _insertionRange;
}

+ (void)poppedLastStreamingOperation;
+ (_Bool)usingTypeAndTalk;
+ (id)stringForViewMode:(int)arg1;
+ (id)stringForState:(int)arg1;
+ (void)logDictationString:(id)arg1;
+ (void)didBeginEditingInTextView:(id)arg1;
+ (id)streamingHypothesisForPhrases:(id)arg1;
+ (id)activeConnection;
+ (int)viewMode;
+ (_Bool)starkScreenExists;
+ (void)updateLandingView;
+ (id)metadataDictionaryForCorrectionIdentifier:(id)arg1;
+ (id)attributedStringForDictationResult:(id)arg1 andCorrectionIdentifier:(id)arg2;
+ (id)singleLineResultForResult:(id)arg1;
+ (id)bestInterpretationForDictationResult:(id)arg1;
+ (id)serializedDictationPhrases:(id)arg1;
+ (id)serializedDictationPhrases:(id)arg1 fromKeyboard:(_Bool)arg2 transform:(struct __CFString *)arg3;
+ (id)interpretation:(id)arg1 forPhraseIndex:(unsigned long long)arg2 isShiftLocked:(_Bool)arg3 autocapitalizationType:(long long)arg4;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 ranges:(id *)arg3 options:(id)arg4;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 ranges:(id *)arg3;
+ (void)applicationDidChangeStatusBarFrame;
+ (void)siriPreferencesChanged;
+ (void)applicationWillResignActive;
+ (void)applicationDidBecomeActive;
+ (_Bool)shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;
+ (_Bool)shouldDeleteBackwardInInputDelegate:(id)arg1;
+ (_Bool)takesPhysicalButtonsEnded:(id)arg1 forTextView:(id)arg2;
+ (_Bool)takesPhysicalButtonsBegan:(id)arg1 forTextView:(id)arg2;
+ (_Bool)shouldHideCursorForTextView:(id)arg1;
+ (_Bool)shouldHideSelectionUIForTextView:(id)arg1;
+ (_Bool)isTextViewOnStarkScreen:(id)arg1;
+ (void)didOneFingerTapInTextView:(id)arg1;
+ (void)keyboardDidUpdateOnScreenStatus;
+ (void)keyboardDidSetInputMode;
+ (void)keyboardWillChangeFromDelegate:(id)arg1 toDelegate:(id)arg2;
+ (_Bool)shouldEnableGestureHandler;
+ (void)enableGestureHandlerIfNecessary;
+ (void)disableGestureHandler;
+ (void)logCorrectionStatisticsForDelegate:(id)arg1;
+ (_Bool)dictationIsFunctional;
+ (_Bool)fetchCurrentInputModeSupportsDictation;
+ (id)serializedDictationPhrasesFromTokenMatrix:(id)arg1 fromKeyboard:(_Bool)arg2 transform:(struct __CFString *)arg3;
+ (id)serializedInterpretationFromTokens:(id)arg1 transform:(struct __CFString *)arg2 fromKeyboard:(_Bool)arg3 options:(id)arg4;
+ (_Bool)isRunning;
+ (id)sharedInstance;
+ (id)activeInstance;
+ (double)serverManualEndpointingThreshold;
+ (_Bool)usingServerManualEndpointingThreshold;
+ (_Bool)setupForOpeningConnections;
+ (_Bool)setupForPhraseSerialization;
+ (_Bool)openAssistantFrameworkIfNecessary;
@property(retain, nonatomic) UIKeyboardInputMode *inputModeThatInvokedDictation; // @synthesize inputModeThatInvokedDictation=_inputModeThatInvokedDictation;
@property(nonatomic) _Bool hasPreheated; // @synthesize hasPreheated=_hasPreheated;
@property(nonatomic) struct _NSRange insertionRange; // @synthesize insertionRange=_insertionRange;
@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;
@property(copy, nonatomic) NSString *targetHypothesis; // @synthesize targetHypothesis=_targetHypothesis;
@property(copy, nonatomic) NSString *lastHypothesis; // @synthesize lastHypothesis=_lastHypothesis;
@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;
@property(nonatomic) _Bool performingStreamingEditingOperation; // @synthesize performingStreamingEditingOperation=_performingStreamingEditingOperation;
@property(retain, nonatomic) NSMutableArray *pendingEdits; // @synthesize pendingEdits=_pendingEdits;
@property(nonatomic) _Bool dictationStartedFromGesture; // @synthesize dictationStartedFromGesture;
- (void)setLanguage:(id)arg1;
- (id)language;
- (void)preheatIfNecessary;
- (_Bool)isRecievingResults;
- (void)dictationConnnectionDidChangeAvailability:(id)arg1;
- (void)dictationConnection:(id)arg1 speechRecognitionDidFail:(id)arg2;
- (void)dictationConnection:(id)arg1 speechRecordingDidFail:(id)arg2;
- (void)dictationConnectionSpeechRecordingDidCancel:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidEnd:(id)arg1;
- (void)dictationConnectionSpeechRecordingDidBegin:(id)arg1;
- (void)dictationConnectionSpeechRecordingWillBegin:(id)arg1;
- (void)dictationConnection:(id)arg1 didRecognizeTokens:(id)arg2 languageModel:(id)arg3;
- (void)dictationConnection:(id)arg1 didHypothesizePhrases:(id)arg2 languageModel:(id)arg3;
- (void)setupToInsertResultForNewHypothesis:(id)arg1;
- (void)_updateFromSelectedTextRange:(id)arg1 withNewHypothesis:(id)arg2;
- (id)_hypothesisRangeFromSelectionRange:(id)arg1 inputDelegate:(id)arg2;
- (id)_rangeByExtendingRange:(id)arg1 by:(long long)arg2 inputDelegate:(id)arg3;
- (void)_displayLinkFired:(id)arg1;
- (void)_startStreamingAnimations;
- (void)_stopStreamingAnimation;
- (void)dictationConnection:(id)arg1 didRecognizePhrases:(id)arg2 languageModel:(id)arg3 correctionIdentifier:(id)arg4;
- (void)finishDictationRecognitionWithPhrases:(id)arg1 languageModel:(id)arg2 correctionIdentifier:(id)arg3;
- (void)insertSerializedDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (id)resultWithTrailingSpace:(id)arg1;
- (struct __CFString *)resultTransformForLanguageModel:(id)arg1;
- (_Bool)needsLeadingSpaceForPhrases:(id)arg1;
- (_Bool)needsTrailingSpaceForPhrases:(id)arg1;
- (id)dictationPhraseArrayFromDictationResult:(id)arg1;
- (void)restartDictationForTypeAndTalk;
- (void)performIgnoringDocumentChanges:(CDUnknownBlockType)arg1;
- (void)stopDictation;
- (void)cancelDictation;
- (void)_finalizeDictationText;
- (void)startDictationForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)switchToDictationInputMode;
- (void)_touchPhaseChangedForTouch:(id)arg1;
- (void)switchToDictationInputModeWithTouch:(id)arg1;
- (void)startDictation;
- (void)startDictationForReason:(long long)arg1;
- (void)setupForDictationStartForReason:(long long)arg1;
- (void)setupForStreamingDictationStart;
- (void)dismissDictationView:(id)arg1;
- (_Bool)wasDisabledDueToTelephonyActivity;
- (_Bool)dictationEnabled;
- (id)connectionForStatisticsLogging;
- (void)releaseConnectionAfterStatisticsLogging;
- (void)releaseConnectionAfterDictationRequest;
- (void)releaseConnection;
- (id)connection;
- (id)_connection;
- (void)startRecordingLimitTimer;
- (void)cancelRecordingLimitTimer;
- (void)dealloc;
- (int)state;
- (void)errorAnimationDidFinish;
- (void)setState:(int)arg1;
- (void)endSessionIfNecessaryForTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)completeStartConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)startConnectionForReason:(long long)arg1;
- (void)completeStartConnectionForReason:(long long)arg1;
- (void)setupConnectionOptions;
- (id)selectedTextForInputDelegate:(id)arg1;
- (id)postfixTextForInputDelegate:(id)arg1;
- (id)prefixTextForInputDelegate:(id)arg1;
- (id)fieldIdentifierInputDelegate:(id)arg1;
- (float)audioLevel;
- (_Bool)supportsInputMode:(id)arg1 error:(id *)arg2;
- (id)supportedDictationLanguages:(CDUnknownBlockType)arg1;
- (id)languageCodeForAssistantLanguageCode:(id)arg1;
- (id)assistantCompatibleLanguageCodeForInputMode:(id)arg1;
- (_Bool)_shouldInsertText:(id)arg1 inInputDelegate:(id)arg2;
- (_Bool)_shouldDeleteBackwardInInputDelegate:(id)arg1;
- (void)_restartDictation;
- (void)enableProximity;
- (void)proximityStateChanged:(id)arg1;
- (void)disableAutorotation;
- (void)setDictationInputmode;
- (void)reenableAutorotation;
- (void)delayedTelephonyCheckingSetup;
- (_Bool)disabledDueToTelephonyActivity;
- (id)streamingOperations;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDictationView : UIView <_UISiriWaveyViewDelegate>
{
    UIKeyboardDicationBackground *_background;
    UIButton *_endpointButton;
    UIButton *_endpointButtonLandscape;
    UIButton *_waveTapEndpointButton;
    int _state;
    _Bool _keyboardInTransition;
    _Bool _automaticAppearanceWasEnabled;
    _UISiriWaveyView *_waveyView;
    UIDictationMeterView *_meterView;
}

+ (struct CGSize)layoutSize;
+ (id)activeInstance;
+ (id)sharedInstance;
+ (struct CGSize)viewSize;
+ (Class)dictationViewClass;
- (float)audioLevelForWaveyView:(id)arg1;
- (_Bool)visible;
- (void)endpointButtonPressed;
- (void)dealloc;
- (void)layoutSubviews;
- (_Bool)drawsOwnBackground;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setState:(int)arg1;
- (_Bool)isShowing;
- (void)returnToKeyboard;
- (void)finishReturnToKeyboard;
- (void)prepareForReturnToKeyboard;
- (void)keyboardDidShow:(id)arg1;
- (struct CGPoint)backgroundOffset;
- (struct CGPoint)contentOffset;
- (struct CGPoint)positionForShow;
- (void)show;
- (void)applicationEnteredBackground;
- (struct CGSize)currentScreenSize;
- (id)createEndpointButtonWithRect:(struct CGRect)arg1 action:(SEL)arg2;
- (id)endpointButton;
- (id)endpointButtonImageWithRect:(struct CGRect)arg1 pressed:(_Bool)arg2;
- (void)highlightEndpointButton;
- (void)applicationWillResignActive;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDictationFloatingStarkView : UIDictationView <UIGestureRecognizerDelegate>
{
    UIDimmingView *_dimmingView;
}

- (void)endpointButtonPressed;
- (void)show;
- (struct CGPoint)positionForShow;
- (void)returnToKeyboard;
- (void)dimmingViewWasTapped:(id)arg1;
- (void)setInputViewsHiddenForDictation:(_Bool)arg1;
- (void)setState:(int)arg1;
- (void)prepareForReturnToKeyboard;
- (void)finishReturnToKeyboard;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDictationLandingView : UIView <_UIBasicAnimationFactory>
{
    UITextRange *_range;
    id _placeholder;
    _Bool _didHaveText;
    _Bool _willInsertResult;
    double _angle;
    double _diameter;
    CADisplayLink *_displayLink;
    double _startTime;
    double _shrinkStartTime;
    _Bool _shrinking;
    NSOperation *_afterShrinkCompletionInvocation;
}

+ (id)activeInstance;
+ (id)sharedInstance;
+ (double)widthForLineHeight:(double)arg1;
+ (double)diameterForLineHeight:(double)arg1;
@property(nonatomic) _Bool willInsertResult; // @synthesize willInsertResult=_willInsertResult;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (double)fadeOutDuration;
- (void)stopLandingForError;
- (void)errorShakeDidFinish;
- (void)stopLanding;
- (void)startLandingIfNecessary;
- (void)startDisplayLinkIfNecessary;
- (void)showCursor;
- (void)hideCursor;
- (_Bool)delegateWasEmpty;
- (void)updatePosition;
- (void)drawRect:(struct CGRect)arg1;
- (void)advanceLanding:(id)arg1;
- (void)shrinkWithCompletion:(id)arg1;
- (void)rotateBy:(double)arg1;
- (void)clearRotation;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDictationLandingViewSettings : NSObject
{
    _Bool _useBlackWave;
    double _fadeInDuration;
    double _fadeOutDuration;
    double _shrinkDuration;
    double _colorTransitionInDuration;
    double _colorTransitionOutDuration;
    double _circleRPM;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool useBlackWave; // @synthesize useBlackWave=_useBlackWave;
@property(nonatomic) double circleRPM; // @synthesize circleRPM=_circleRPM;
@property(nonatomic) double colorTransitionOutDuration; // @synthesize colorTransitionOutDuration=_colorTransitionOutDuration;
@property(nonatomic) double colorTransitionInDuration; // @synthesize colorTransitionInDuration=_colorTransitionInDuration;
@property(nonatomic) double shrinkDuration; // @synthesize shrinkDuration=_shrinkDuration;
@property(nonatomic) double fadeOutDuration; // @synthesize fadeOutDuration=_fadeOutDuration;
@property(nonatomic) double fadeInDuration; // @synthesize fadeInDuration=_fadeInDuration;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIDictationMeterView : UIButton
{
    UIImageView *_background;
    UIImageView *_overlay;
    NSMutableArray *_micListeningImages;
    CALayer *_micImageLayer;
    CALayer *_animatingLayer;
    NSTimer *_fillTimer;
    int _phase;
    int _state;
    float _runningPowerLevels[5];
    unsigned int _powerPointer;
    CADisplayLink *_displayLink;
    double _releaseStart;
    float _releaseLevel;
    int _cachedViewMode;
}

- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)_startListening;
- (void)_clearDisplayLink;
- (void)_updateListeningAnimation:(id)arg1;
- (void)_startRelease;
- (void)_updateReleaseAnimation:(id)arg1;
- (void)_startSustain;
- (id)_sustainKeyFrameAnimation;
- (void)_startDecay;
- (id)_decayKeyFrameAnimation;
- (void)_startAttack;
- (id)_attackKeyFrameAnimation;
- (id)imageForMicLevel:(double)arg1;
- (id)_keyframeAnimationForCGImages:(id)arg1 duration:(double)arg2;
- (void)_removeAnimationsAndClearLayers;
- (float)_adjustedDuration:(float)arg1;
- (float)_currentMicPowerLevel;
- (float)_powerLevelForMicPower:(float)arg1;
- (float)_updateMedianWithNewValue:(float)arg1;
- (void)_resetRunningPowerLevels;
- (void)_reset;
- (id)_emptyMicImage;
- (void)setState:(int)arg1;
- (double)_animationInterval;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIDictationPhrase : NSObject
{
    NSString *_text;
    NSArray *_alternativeInterpretations;
}

+ (id)phraseWithText:(id)arg1 alternativeInterpretations:(id)arg2;
@property(readonly, nonatomic) NSArray *alternativeInterpretations; // @synthesize alternativeInterpretations=_alternativeInterpretations;
@property(readonly, nonatomic) NSString *text; // @synthesize text=_text;
- (id)description;
- (void)dealloc;
- (id)initWithText:(id)arg1 alternativeInterpretations:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIDictationPopUpView : UIDictationView
{
}

- (void)layoutSubviews;
- (void)setState:(int)arg1;
- (id)createEndpointButtonWithRect:(struct CGRect)arg1 action:(SEL)arg2;
- (_Bool)drawsOwnBackground;
- (void)returnToKeyboard;

@end

__attribute__((visibility("hidden")))
@interface UIDictationSplitLayoutView : UIDictationView
{
}

- (_Bool)drawsOwnBackground;
- (_Bool)isShowing;
- (void)returnToKeyboard;
- (void)finishReturnToKeyboard;
- (void)layoutSubviews;
- (void)setState:(int)arg1;
- (void)setRenderConfig:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDictationStreamingOperation : NSInvocationOperation
{
}

- (void)start;

@end

__attribute__((visibility("hidden")))
@interface UIDictationStreamingOperations : NSObject
{
    double _timeAfterInsertion;
    double _timeAfterSelectRange;
    id <UITextInput> _document;
    NSMutableArray *_operations;
}

@property(retain, nonatomic) NSMutableArray *operations; // @synthesize operations=_operations;
- (unsigned long long)selectionChangeDelta;
- (_Bool)isNotEmpty;
- (_Bool)isEmpty;
- (void)willEndEditingInInputDelegate:(id)arg1;
- (void)pushReplaceSelectionWithText:(id)arg1;
- (void)_performReplaceSelectedText:(id)arg1;
- (void)pushInsertTextForSpeech:(id)arg1;
- (void)pushSelectRangeForSpeech:(struct _NSRange)arg1;
- (void)dictationWillBeginInDocument:(id)arg1;
- (void)setDocument:(id)arg1;
- (void)performSelectRangeForSpeech:(id)arg1;
- (void)pushSpeechOperationWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
- (void)pushSpeechOperation:(id)arg1;
- (void)popAndInvoke;
- (double)delayAfterSelector:(SEL)arg1;
- (id)pop;
- (_Bool)hasOperations;
- (void)clearOperations;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIDictationiPadLayoutView : UIDictationView
{
}

- (_Bool)isShowing;
- (void)returnToKeyboard;
- (void)finishReturnToKeyboard;
- (void)layoutSubviews;
- (void)setState:(int)arg1;
- (void)setRenderConfig:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDictationiPhoneLayoutView : UIDictationView
{
}

- (_Bool)isShowing;
- (void)returnToKeyboard;
- (void)finishReturnToKeyboard;
- (void)layoutSubviews;
- (void)setState:(int)arg1;
- (void)setRenderConfig:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)doneButtonTitleForLightBackground:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDimmingView : UIView <UIGestureRecognizerDelegate>
{
    id _delegate;
    UIBarButtonItem *_highlightedBarButtonItem;
    UIImageView *_highlightedImageView;
    UIImageView *_backgroundGlow;
    NSArray *_passthroughViews;
    _Bool _ignoresTouches;
    _Bool _displayed;
    _Bool _inPassthroughHitTest;
    UIColor *_dimmingColor;
    UITapGestureRecognizer *_singleFingerTapRecognizer;
    _Bool _suppressesBackdrops;
}

+ (id)defaultDimmingColor;
@property(nonatomic) _Bool suppressesBackdrops; // @synthesize suppressesBackdrops=_suppressesBackdrops;
@property(retain, nonatomic) UIColor *dimmingColor; // @synthesize dimmingColor=_dimmingColor;
@property(nonatomic) _Bool displayed; // @synthesize displayed=_displayed;
@property(nonatomic) _Bool ignoresTouches; // @synthesize ignoresTouches=_ignoresTouches;
@property(retain, nonatomic) NSArray *passthroughViews; // @synthesize passthroughViews=_passthroughViews;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void)_simulateTap;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)handleSingleTap:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)mouseUp:(struct __GSEvent *)arg1;
- (void)display:(_Bool)arg1 withAnimationDuration:(double)arg2 afterDelay:(double)arg3;
- (void)display:(_Bool)arg1;
- (id)_backdropViewsToAnimate;
@property(retain, nonatomic) UIBarButtonItem *highlightedBarButtonItem;
- (void)dimmingRemovalAnimationDidStop;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDocument : NSObject <NSFilePresenter>
{
    NSURL *_fileURL;
    NSString *_fileType;
    NSString *_localizedName;
    NSUndoManager *_undoManager;
    NSDate *_fileModificationDate;
    NSObject<OS_dispatch_queue> *_fileAccessQueue;
    NSObject<OS_dispatch_queue> *_openingQueue;
    NSObject<OS_dispatch_semaphore> *_fileAccessSemaphore;
    NSOperationQueue *_filePresenterQueue;
    id _differenceDueToRecentChanges;
    id _differenceSincePreservingPreviousVersion;
    id _differenceSinceSaving;
    NSTimer *_autosavingTimer;
    double _lastSaveTime;
    double _lastPreservationTime;
    id _versionWithoutRecentChanges;
    NSMutableArray *_versions;
    NSLock *_documentPropertyLock;
    id _alertPresenter;
    struct __docFlags {
        unsigned int inClose:1;
        unsigned int isOpen:1;
        unsigned int inOpen:1;
        unsigned int isAutosavingBecauseOfTimer:1;
        unsigned int versionWithoutRecentChangesIsNotLastOpened:1;
        unsigned int ignoreUndoAndRedoNotifications:1;
        unsigned int editingDisabled:1;
        unsigned int isRegisteredAsFilePresenter:1;
        unsigned int movingFile:1;
        unsigned int savingError:1;
        unsigned int inConflict:1;
        unsigned int needToStopAccessingSecurityScopedResource:1;
    } _docFlags;
    NSUserActivity *_currentUserActivity;
    NSLock *_activityContinuationLock;
}

+ (void)_autosavingTimerDidFireSoContinue:(id)arg1;
+ (void)_finishWritingToURL:(id)arg1 withTemporaryDirectoryURL:(id)arg2 newContentsURL:(id)arg3 afterSuccess:(_Bool)arg4;
+ (id)_customizationOfError:(id)arg1 withDescription:(id)arg2 recoverySuggestion:(id)arg3 recoveryAttempter:(id)arg4;
+ (id)_typeForContentsOfURL:(id)arg1 error:(id *)arg2;
+ (void)initialize;
+ (id)_fileModificationDateForURL:(id)arg1;
@property(readonly, nonatomic) NSDocumentDifferenceSize *differenceSinceSaving; // @synthesize differenceSinceSaving=_differenceSinceSaving;
@property(readonly, nonatomic) NSDocumentDifferenceSize *differenceSincePreservingPreviousVersion; // @synthesize differenceSincePreservingPreviousVersion=_differenceSincePreservingPreviousVersion;
@property(readonly, nonatomic) NSDocumentDifferenceSize *differenceDueToRecentChanges; // @synthesize differenceDueToRecentChanges=_differenceDueToRecentChanges;
- (void)disableEditing;
- (void)enableEditing;
- (void)presentedSubitemAtURL:(id)arg1 didResolveConflictVersion:(id)arg2;
- (void)presentedItemDidResolveConflictVersion:(id)arg1;
- (void)presentedSubitemAtURL:(id)arg1 didLoseVersion:(id)arg2;
- (void)presentedSubitemAtURL:(id)arg1 didGainVersion:(id)arg2;
- (void)presentedSubitemAtURL:(id)arg1 didMoveToURL:(id)arg2;
- (void)presentedSubitemDidChangeAtURL:(id)arg1;
- (void)presentedSubitemDidAppearAtURL:(id)arg1;
- (void)accommodatePresentedSubitemDeletionAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)presentedItemDidLoseVersion:(id)arg1;
- (void)presentedItemDidGainVersion:(id)arg1;
- (void)_updateConflictState;
- (void)presentedItemDidChange;
- (void)presentedItemDidMoveToURL:(id)arg1;
- (void)accommodatePresentedItemDeletionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)savePresentedItemChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)relinquishPresentedItemToWriter:(CDUnknownBlockType)arg1;
- (_Bool)_shouldAllowWritingInResponseToPresenterMessage;
- (void)relinquishPresentedItemToReader:(CDUnknownBlockType)arg1;
@property(readonly, retain) NSOperationQueue *presentedItemOperationQueue;
@property(readonly, copy) NSURL *presentedItemURL;
- (id)fileNameExtensionForType:(id)arg1 saveOperation:(long long)arg2;
@property(readonly, copy) NSString *localizedName;
- (void)_updateLocalizedName;
- (void)userInteractionNoLongerPermittedForError:(id)arg1;
- (void)finishedHandlingError:(id)arg1 recovered:(_Bool)arg2;
- (void)handleError:(id)arg1 userInteractionPermitted:(_Bool)arg2;
@property(retain) NSUndoManager *undoManager;
- (void)_releaseUndoManager;
- (void)_changeWasRedone:(id)arg1;
- (void)_changeWasUndone:(id)arg1;
- (void)_changeWasDone:(id)arg1;
- (void)updateChangeCountWithToken:(id)arg1 forSaveOperation:(long long)arg2;
- (id)changeCountTokenForSaveOperation:(long long)arg1;
- (void)updateChangeCount:(long long)arg1;
- (_Bool)hasUnsavedChanges;
- (_Bool)_hasUnsavedChanges;
- (void)closeWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)savingFileType;
- (void)autosaveWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_autosaveWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_saveUnsavedChangesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_scheduleAutosaving;
- (void)_scheduleAutosavingAfterDelay:(double)arg1 reset:(_Bool)arg2;
- (void)_rescheduleAutosaving;
- (void)_autosavingCompletedSuccessfully:(_Bool)arg1;
- (double)_autosavingDelay;
- (void)_finishSavingToURL:(id)arg1 forSaveOperation:(long long)arg2 changeCount:(id)arg3;
- (void)saveToURL:(id)arg1 forSaveOperation:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)contentsForType:(id)arg1 error:(id *)arg2;
- (_Bool)_coordinateWritingItemAtURL:(id)arg1 error:(id *)arg2 byAccessor:(CDUnknownBlockType)arg3;
- (id)fileAttributesToWriteToURL:(id)arg1 forSaveOperation:(long long)arg2 error:(id *)arg3;
- (_Bool)writeContents:(id)arg1 toURL:(id)arg2 forSaveOperation:(long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (_Bool)writeContents:(id)arg1 andAttributes:(id)arg2 safelyToURL:(id)arg3 forSaveOperation:(long long)arg4 error:(id *)arg5;
- (id)_presentableFileNameForSaveOperation:(long long)arg1 url:(id)arg2;
- (_Bool)loadFromContents:(id)arg1 ofType:(id)arg2 error:(id *)arg3;
- (_Bool)readFromURL:(id)arg1 error:(id *)arg2;
- (void)revertToContentsOfURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_unlockFileAccessQueue;
- (void)_lockFileAccessQueueAndPerformBlock:(CDUnknownBlockType)arg1;
- (void)performAsynchronousFileAccessUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly) unsigned long long documentState;
- (void)_sendStateChangedNotification;
- (_Bool)_isInConflict;
- (void)_setInConflict:(_Bool)arg1;
- (_Bool)_hasSavingError;
- (void)_setHasSavingError:(_Bool)arg1;
- (_Bool)_isInOpen;
- (void)_setInOpen:(_Bool)arg1;
- (_Bool)_isOpen;
- (void)_setOpen:(_Bool)arg1;
@property(getter=_isEditingDisabled, setter=_setEditingDisabled:) _Bool editingDisabled;
@property(copy) NSDate *fileModificationDate;
@property(readonly, copy) NSString *fileType;
- (void)setFileType:(id)arg1;
@property(readonly) NSURL *fileURL;
- (void)_setFileURL:(id)arg1;
- (void)openWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)restoreUserActivityState:(id)arg1;
- (void)updateUserActivityState:(id)arg1;
- (id)userActivity;
- (void)setUserActivity:(id)arg1;
- (void)_setUserActivity:(id)arg1;
- (void)_clearActivityForCloudDocument;
- (void)_saveActivityForCloudDocumentIfAppropriate;
- (id)_activityTypeIdentifierForCloudDocument;
- (void)_invalidateCurrentUserActivity;
- (_Bool)_documentIsUbiquitous;
- (id)_userActivityWithActivityType:(id)arg1;
- (id)_userInfoForActivityContinuation;
- (void)_unregisterAsFilePresenterIfNecessary;
- (void)_registerAsFilePresenterIfNecessary;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithFileURL:(id)arg1;
- (id)init;
- (void)_performBlockSynchronouslyOnMainThread:(CDUnknownBlockType)arg1;
- (void)_performBlock:(CDUnknownBlockType)arg1 synchronouslyOnQueue:(id)arg2;
- (id)_fileOpeningQueue;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSURL *primaryPresentedItemURL;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDocumentAlertPresenter : NSObject <UIAlertViewDelegate>
{
    CDUnknownBlockType _completionHandler;
    NSError *_error;
    UIAlertView *_alert;
}

+ (id)_presentAlertWithError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_forceFinishNow;
- (void)dealloc;
- (id)initWithError:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIDocumentErrorRecoveryAttempter : NSObject
{
    UIDocument *_document;
    id _wrappedRecoveryAttempter;
    CDUnknownBlockType _continuerOrNil;
    long long _silentRecoveryOptionIndex;
    CDUnknownBlockType _appModalRecoveryAttempter;
    CDUnknownBlockType _recoveryCancelerOrNil;
    struct {
        unsigned int attemptedRecovery:1;
    } _errorRecoveryAttempterFlags;
}

- (void)cancelRecovery;
- (_Bool)attemptSilentRecoveryFromError:(id)arg1 error:(id *)arg2;
- (_Bool)attemptRecoveryFromError:(id)arg1 optionIndex:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 silentRecoveryOptionIndex:(unsigned long long)arg2 appModalRecoveryAttempter:(CDUnknownBlockType)arg3 recoveryCanceler:(CDUnknownBlockType)arg4;
- (id)initWithDocument:(id)arg1 wrappedRecoveryAttempter:(id)arg2;

@end

@interface UIDocumentInteractionController : NSObject <UIActionSheetDelegate>
{
    id <UIDocumentInteractionControllerDelegate> _delegate;
    id _previewItemProxy;
    NSArray *_icons;
    id _annotation;
    NSString *_uniqueIdentifier;
    UIViewController *_presentingViewController;
    id _previewController;
    NSArray *_gestureRecognizers;
    struct CGRect _presentRect;
    UIView *_presentView;
    UIBarButtonItem *_presentItem;
    NSArray *_availableApplications;
    UIPopoverController *_popoverController;
    UIActivityViewController *_activityViewController;
    _Bool _shouldUnzipDocument;
    _Bool _sourceIsManaged;
    NSURL *_unzippedDocumentURL;
    id _applicationToOpen;
    NSURL *_tmpURLToDeleteOnDealloc;
    struct {
        unsigned int delegateViewControllerForPreview:1;
        unsigned int delegateRectForPreview:1;
        unsigned int delegateViewForPreview:1;
        unsigned int transitionImageForPreview:1;
        unsigned int documentProxyForPreview:1;
        unsigned int delegateWillBeginPreview:1;
        unsigned int delegateDidEndPreviewPreview:1;
        unsigned int delegateWillEndPreviewPreview:1;
        unsigned int delegateWillPresentOptionsMenu:1;
        unsigned int delegateDidDismissOptionsMenu:1;
        unsigned int delegateWillPresentOpenInMenu:1;
        unsigned int delegateDidDismissOpenInMenu:1;
        unsigned int delegateWillBeginSendingToApplication:1;
        unsigned int delegateDidEndSendingToApplication:1;
        unsigned int delegateCanPerformAction:1;
        unsigned int delegatePerformAction:1;
        unsigned int delegateUnzipURL:1;
        unsigned int showingOptionsMenu:1;
        unsigned int showingOpenInMenu:1;
        unsigned int delegateExcludesActivities:1;
        unsigned int delegateCanBlockRemoteImages:1;
        unsigned int delegateAddsActivities:1;
        unsigned int delegateProvidesActivityItem:1;
        unsigned int delegateProvidesPrintInfo:1;
        unsigned int performingActivity:1;
    } _documentInteractionControllerFlags;
}

+ (id)_pathFilterPredicate;
+ (id)_unzippingQueue;
+ (id)_UTIForFileURL:(id)arg1;
+ (id)interactionControllerWithURL:(id)arg1;
+ (void)initialize;
+ (id)allActionSelectorNames;
+ (id)_applicationsForDocumentProxy:(id)arg1;
@property(retain, nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
@property(retain, nonatomic) UIActivityViewController *activityViewController; // @synthesize activityViewController=_activityViewController;
@property(nonatomic) _Bool sourceIsManaged; // @synthesize sourceIsManaged=_sourceIsManaged;
@property(retain, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(retain, nonatomic) id annotation; // @synthesize annotation=_annotation;
@property(nonatomic) id <UIDocumentInteractionControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_fixupFileExtensionIfNeeded;
@property(readonly, nonatomic) _UIPreviewItemProxy *previewItemProxy;
@property(readonly, nonatomic) id previewController;
- (void)_activityControllerViewDidDismiss;
- (_Bool)_delegatePerformAction:(SEL)arg1;
- (_Bool)_delegateCanPerformAction:(SEL)arg1;
- (_Bool)_delegateImplementsLegacyActions;
- (_Bool)_canSaveToCameraRollForType;
- (_Bool)_isValidURL:(id)arg1;
- (_Bool)_isFilenameValidForUnzipping:(id)arg1 allowsArchiveZip:(_Bool)arg2;
- (_Bool)_isPackageArchive:(id)arg1;
- (_Bool)_documentNeedsHelpUnzippingForPreview;
- (_Bool)_canUnzipDocumentForPreview;
- (_Bool)_canUnzipDocument;
- (id)_unzippedDocumentURL;
- (void)_setUnzippedDocumentURL:(id)arg1;
- (void)_setApplicationToOpen:(id)arg1;
- (id)_applicationToOpen;
- (void)_interfaceOrientationWillChange:(id)arg1;
- (void)_invalidate;
- (void)_unzipFileAndSetupPayload:(CDUnknownBlockType)arg1;
- (id)_unzipFileAndSetupPayload:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_pathsInArchive:(CDUnknownBlockType)arg1;
- (_Bool)_setupPreviewController;
- (_Bool)_setupForOpenInMenu;
- (_Bool)_setupForOptionsMenu;
- (void)_finishedCopyingResource;
- (void)openResourceOperation:(id)arg1 didFinishCopyingResource:(id)arg2;
- (void)_openDocumentWithCurrentApplication;
- (void)_openDocumentWithApplication:(id)arg1;
- (id)_applications:(_Bool)arg1;
- (void)_presentOptionsMenu:(id)arg1;
- (void)_presentOpenIn:(id)arg1;
- (void)_presentPreview:(id)arg1;
@property(readonly, nonatomic) NSArray *gestureRecognizers;
- (void)dismissMenuAnimated:(_Bool)arg1;
- (void)dismissPreviewAnimated:(_Bool)arg1;
- (_Bool)presentOpenInMenuFromBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (_Bool)presentOpenInMenuFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (_Bool)presentPreviewAnimated:(_Bool)arg1;
- (id)presentingNavigationController;
- (_Bool)presentOptionsMenuFromBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (_Bool)presentOptionsMenuFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (_Bool)_canUnzipDocumentAndPresentOpenIn;
- (_Bool)_canUnzipDocumentAndPresentOptions;
- (_Bool)_canPreviewUnzippedDocument;
@property(nonatomic) _Bool shouldUnzipDocument; // @synthesize shouldUnzipDocument=_shouldUnzipDocument;
@property(nonatomic, getter=_performingActivity, setter=_setPerformingActivity:) _Bool performingActivity;
- (_Bool)_isImageOrVideo;
- (_Bool)_isVideo;
- (_Bool)_isImage;
@property(readonly, nonatomic) NSArray *icons;
@property(copy) NSString *name;
@property(copy, nonatomic) NSString *UTI;
@property(retain) NSURL *URL;
- (void)dealloc;
- (id)initWithURL:(id)arg1;
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (void)previewControllerDidDismiss:(id)arg1;
- (void)previewControllerWillDismiss:(id)arg1;
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;
- (void)popoverController:(id)arg1 animationCompleted:(long long)arg2;
- (void)_dismissEverythingWithExtremePrejudiceAnimated:(_Bool)arg1;
- (void)openDocumentWithDefaultApplication;
- (unsigned long long)applicationCount;
- (void)setPreviewURLOverride:(id)arg1;
- (_Bool)_delegateExistsAndImplementsRequiredMethods:(id *)arg1;
- (id)_documentProxySourceIsManaged:(_Bool)arg1;
- (id)extractSubitemFromArchive:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)subitemsInArchive:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isArchive) _Bool archive;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDocumentMenuViewController : UIViewController <_UIDocumentPickerRemoteViewControllerContaining, UIAlertControllerContaining>
{
    id <UIDocumentMenuDelegate> _weak_delegate;
    _Bool _dismissDelegateCalled;
    NSMutableArray *_auxiliaryOptions;
    _UIDocumentPickerRemoteViewController *_remoteViewController;
    UIAlertController *_alertController;
    unsigned long long _documentPickerMode;
    NSURL *_uploadURL;
}

@property(copy, nonatomic) NSURL *uploadURL; // @synthesize uploadURL=_uploadURL;
@property(nonatomic) unsigned long long documentPickerMode; // @synthesize documentPickerMode=_documentPickerMode;
@property(nonatomic) _Bool dismissDelegateCalled; // @synthesize dismissDelegateCalled=_dismissDelegateCalled;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic, getter=_remoteViewController, setter=_setRemoteViewController:) _UIDocumentPickerRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) NSMutableArray *auxiliaryOptions; // @synthesize auxiliaryOptions=_auxiliaryOptions;
- (void)setModalPresentationStyle:(long long)arg1;
- (long long)modalPresentationStyle;
- (id)_containedAlertController;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (_Bool)_requiresCustomPresentationController;
- (void)_preferredContentSizeChanged:(struct CGSize)arg1;
- (void)_dismissWithOption:(id)arg1;
- (void)_dismissViewController;
- (void)_stitchFileCreationAtURL:(id)arg1;
- (void)_didSelectURL:(id)arg1;
- (void)_didSelectPicker;
@property(nonatomic) __weak id <UIDocumentMenuDelegate> delegate;
- (void)addOptionWithTitle:(id)arg1 image:(id)arg2 order:(unsigned long long)arg3 handler:(CDUnknownBlockType)arg4;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)_commonInitWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithURL:(id)arg1 inMode:(unsigned long long)arg2;
- (id)initWithDocumentTypes:(id)arg1 inMode:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDocumentPasswordField : UITextField
{
}

@end

@interface UIDocumentPasswordView : UIView <UITextFieldDelegate>
{
    UIImageView *_iconView;
    UIDocumentPasswordField *_passwordTextField;
    UILabel *_label;
    NSObject<UIDocumentPasswordViewDelegate> *passwordDelegate;
}

@property(readonly, nonatomic) UITextField *passwordField; // @synthesize passwordField=_passwordTextField;
@property(nonatomic) NSObject<UIDocumentPasswordViewDelegate> *passwordDelegate; // @synthesize passwordDelegate;
- (double)_textFieldWidth;
- (double)_labelHorizontalOffset;
- (id)_labelTextColor;
- (id)_labelFont;
- (void)_passwordEntered:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)_canDrawContent;
- (void)layoutSubviews;
- (struct CGRect)_iconRectForContainerRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithDocumentName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDocumentPickerExtensionViewController : UIViewController <_UIDocumentPickerExtensionViewController>
{
    unsigned long long _documentPickerMode;
    NSURL *_originalURL;
    NSArray *_validTypes;
    NSString *_providerIdentifier;
    NSURL *_documentStorageURL;
}

+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;
- (void)_setDocumentStorageURL:(id)arg1;
@property(copy, nonatomic) NSURL *documentStorageURL; // @synthesize documentStorageURL=_documentStorageURL;
- (void)_setProviderIdentifier:(id)arg1;
@property(copy, nonatomic) NSString *providerIdentifier; // @synthesize providerIdentifier=_providerIdentifier;
- (void)_setPickableTypes:(id)arg1;
@property(copy, nonatomic) NSArray *validTypes; // @synthesize validTypes=_validTypes;
@property(copy, nonatomic) NSURL *originalURL; // @synthesize originalURL=_originalURL;
- (void)_setPickerMode:(unsigned long long)arg1;
@property(nonatomic) unsigned long long documentPickerMode; // @synthesize documentPickerMode=_documentPickerMode;
- (void)_documentPickerDidDismiss;
- (void)_prepareWithExtensionInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)prepareForPresentationInMode:(unsigned long long)arg1;
- (void)prepareForDocumentSelectionInMode:(unsigned long long)arg1;
- (void)_setUploadURL:(id)arg1;
- (void)_setUploadURLWrapper:(id)arg1;
- (void)dealloc;
- (void)dismissGrantingAccessToURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDocumentPickerViewController : UIViewController <_UIDocumentPickerRemoteViewControllerContaining>
{
    id <UIDocumentPickerDelegate> _weak_delegate;
    unsigned long long _documentPickerMode;
    _UIDocumentPickerRemoteViewController *_remoteViewController;
    _UIRemoteViewService *_remoteViewService;
    NSURL *_uploadURL;
    NSMutableArray *_stitchingTokens;
}

+ (unsigned long long)supportedModes;
+ (id)supportedContentTypes;
+ (id)image;
+ (id)localizedName;
+ (id)_identifier;
+ (id)_extension;
@property(retain, nonatomic) NSMutableArray *stitchingTokens; // @synthesize stitchingTokens=_stitchingTokens;
@property(copy, nonatomic) NSURL *uploadURL; // @synthesize uploadURL=_uploadURL;
@property(retain, nonatomic) _UIRemoteViewService *remoteViewService; // @synthesize remoteViewService=_remoteViewService;
@property(retain, nonatomic, getter=_remoteViewController, setter=_setRemoteViewController:) _UIDocumentPickerRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(nonatomic) unsigned long long documentPickerMode; // @synthesize documentPickerMode=_documentPickerMode;
- (id)initWithExistingDocumentAtURL:(id)arg1 inMode:(unsigned long long)arg2;
- (id)initForSelectingDocumentMatchingTypes:(id)arg1 inMode:(unsigned long long)arg2;
- (id)_initWithRemoteViewController:(id)arg1 inMode:(unsigned long long)arg2 uploadURLOrNil:(id)arg3;
- (void)_finishStitching;
- (void)_prepareForDeletionIfNecessary;
- (id)initWithURL:(id)arg1 inMode:(unsigned long long)arg2;
- (id)initWithDocumentTypes:(id)arg1 inMode:(unsigned long long)arg2;
- (void)addAuxiliaryOptionWithTitle:(id)arg1 image:(id)arg2 identifier:(id)arg3;
- (void)_preferredContentSizeChanged:(struct CGSize)arg1;
- (void)_stitchFileCreationAtURL:(id)arg1;
- (void)_dismissWithOption:(id)arg1;
- (void)_didSelectPicker;
- (void)_didSelectURL:(id)arg1;
- (void)_callDelegateWithSelectedURLAndDismiss:(id)arg1;
- (void)_dismissViewController;
@property(nonatomic) __weak id <UIDocumentPickerDelegate> delegate;
- (void)dealloc;
- (void)_commonInitWithCompletion:(CDUnknownBlockType)arg1;

@end

@interface UIDocumentStorageManager : NSObject
{
    NSObject<OS_dispatch_queue> *_ivarQueue;
    _UIDocumentStorage *_storage;
    NSMutableSet *_observers;
    NSMetadataQuery *_query;
    NSDictionary *_identifiersToURLMap;
    NSURL *_defaultURL;
}

+ (void)requestSharedManager:(CDUnknownBlockType)arg1;
- (void)removeObserver:(id)arg1;
- (void)updateObserver:(id)arg1 withSortDescriptors:(id)arg2;
- (id)observeContentsOfUbiquitousContainersWithIdentifiers:(id)arg1 sortedWithDescriptors:(id)arg2 updateHandler:(CDUnknownBlockType)arg3;
- (id)observeContentsOfDirectory:(id)arg1 sortedWithDescriptors:(id)arg2 updateHandler:(CDUnknownBlockType)arg3;
- (void)willMoveURL:(id)arg1 toURL:(id)arg2;
- (void)willRemoveURL:(id)arg1;
- (void)willAddURL:(id)arg1;
- (id)_observeContentsOfDirectories:(id)arg1 sortedWithDescriptors:(id)arg2 updateHandler:(CDUnknownBlockType)arg3;
- (void)_updateObservers;
- (id)_queryResults;
- (void)_queryUpdated;
- (void)_initialGatherFinished;
- (void)_resetQuery;
- (void)_storeUserICloudChoice:(_Bool)arg1 forIdentityToken:(id)arg2;
- (id)_userICloudChoiceForIdentityToken:(id)arg1;
- (id)_userICloudChoiceArray;
- (void)_setStorage:(id)arg1;
- (void)_loadUserICloudChoiceWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_finishSetupWithDecision:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)runSetupProcessWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_appActivated:(id)arg1;
- (void)_ubiquityIdentityTokenChanged;
- (id)_identifierToURLMap;
@property(readonly) NSURL *dataStorageURL;
@property(readonly) NSURL *documentStorageURL;
@property(readonly) _Bool usesUbiquitousStorage;
- (id)_initWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface UIGestureRecognizer : NSObject
{
    NSMutableArray *_targets;
    NSMutableArray *_delayedTouches;
    UIView *_view;
    UITouchesEvent *_updateEvent;
    UIPhysicalButtonsEvent *_updateButtonEvent;
    id <UIGestureRecognizerDelegate> _delegate;
    NSMutableSet *_friends;
    long long _state;
    struct {
        unsigned int delegateShouldBegin:1;
        unsigned int delegateCanPrevent:1;
        unsigned int delegateCanBePrevented:1;
        unsigned int delegateShouldRecognizeSimultaneously:1;
        unsigned int delegateShouldReceiveTouch:1;
        unsigned int delegateShouldRequireFailure:1;
        unsigned int delegateShouldBeRequiredToFail:1;
        unsigned int delegateFailed:1;
        unsigned int privateDelegateShouldBegin:1;
        unsigned int privateDelegateCanPrevent:1;
        unsigned int privateDelegateCanBePrevented:1;
        unsigned int privateDelegateShouldRecognizeSimultaneously:1;
        unsigned int privateDelegateShouldReceiveTouch:1;
        unsigned int privateDelegateShouldRequireFailure:1;
        unsigned int privateDelegateShouldBeRequiredToFail:1;
        unsigned int subclassShouldRequireFailure:1;
        unsigned int subclassShouldBeRequiredToFail:1;
        unsigned int privateSubclassShouldRequireFailure:1;
        unsigned int privateSubclassShouldBeRequiredToFail:1;
        unsigned int hasSubclassDynamicFailureRequirements:1;
        unsigned int hasDelegateDynamicFailureRequirements:1;
        unsigned int queriedFailureRequirements:1;
        unsigned int cancelsTouchesInView:1;
        unsigned int delaysTouchesBegan:1;
        unsigned int delaysTouchesEnded:1;
        unsigned int disabled:1;
        unsigned int dirty:1;
        unsigned int delivered:1;
        unsigned int deliveredEndedOrCancelled:1;
        unsigned int continuous:1;
        unsigned int requiresDelayedBegan:1;
        unsigned int willBeginAfterSatisfyingFailureRequirements:1;
        unsigned int requiresSystemGesturesToFail:1;
        unsigned int acceptsFailureRequirements:1;
    } _gestureFlags;
    NSMutableSet *_failureRequirements;
    NSMutableSet *_failureDependents;
    NSMutableSet *_dynamicFailureRequirements;
    NSMutableSet *_dynamicFailureDependents;
    id _failureMap;
}

+ (_Bool)_touchesBeganWasDelayedForTouch:(id)arg1;
@property(nonatomic) id <UIGestureRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
- (struct CGPoint)locationOfTouch:(unsigned long long)arg1 inView:(id)arg2;
- (unsigned long long)numberOfTouches;
- (struct CGPoint)locationInView:(id)arg1;
- (_Bool)_affectedByGesture:(id)arg1;
- (void)_invalidate;
- (id)description;
- (void)_appendDescriptionToString:(id)arg1 atLevel:(int)arg2 includingDependencies:(_Bool)arg3;
- (void)_appendDescription:(id)arg1 forDependencies:(id)arg2 toString:(id)arg3 atLevel:(int)arg4;
- (void)_appendSubclassDescription:(id)arg1;
- (id)_briefDescription;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (_Bool)_acceptsFailureRequirements;
- (void)_setAcceptsFailureRequiments:(_Bool)arg1;
- (void)_failureRequirementCompleted:(id)arg1 withEvent:(id)arg2;
- (void)removeFailureRequirement:(id)arg1;
- (void)requireOtherGestureToFail:(id)arg1;
- (void)requireGestureRecognizerToFail:(id)arg1;
- (void)_addDynamicFailureRequirement:(id)arg1;
- (void)_removeFailureDependent:(id)arg1;
- (void)_addDynamicFailureDependent:(id)arg1;
- (void)_addFailureDependent:(id)arg1;
- (void)_clearReferencesToRelatedGesture:(id)arg1;
- (void)_exclude;
- (void)_cancelRecognition;
- (_Bool)_isDirty;
- (void)_setDirty;
- (_Bool)_isExcludedByGesture:(id)arg1;
- (_Bool)_delegateCanPreventGestureRecognizer:(id)arg1;
- (_Bool)_isFriendWithGesture:(id)arg1;
- (void)_addFriendGesture:(id)arg1;
- (_Bool)_shouldBegin;
- (_Bool)_delegateShouldReceiveTouch:(id)arg1;
- (long long)_depthFirstViewCompare:(id)arg1;
- (_Bool)_isRecognized;
- (void)_queueForResetIfFinished;
- (void)_resetIfFinished;
- (void)_updateGestureStateWithEvent:(id)arg1 buttonEvent:(id)arg2 afterDelay:(_Bool)arg3;
- (void)_delayedUpdateGesture;
- (_Bool)_requiresGestureRecognizerToFail:(id)arg1;
- (_Bool)_shouldReceiveTouch:(id)arg1;
- (void)_updateGestureWithEvent:(id)arg1 buttonEvent:(id)arg2;
- (void)_enqueueDelayedTouchesToSend;
- (void)_enqueueDelayedTouchToSend:(id)arg1;
- (void)_clearDelayedTouches;
- (void)_touchWasCancelled:(id)arg1;
- (void)_delayTouchesForEvent:(id)arg1;
- (void)_delayTouch:(id)arg1 forEvent:(id)arg2;
- (double)_distanceBetweenTouches:(id)arg1;
- (struct CGPoint)_centroidOfTouches:(id)arg1 excludingEnded:(_Bool)arg2;
- (id)_activeTouchesForEvent:(id)arg1;
- (void)_ignorePhysicalButton:(id)arg1 forEvent:(id)arg2;
- (void)ignoreTouch:(id)arg1 forEvent:(id)arg2;
- (_Bool)shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (_Bool)shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (_Bool)_shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (_Bool)_shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_hasTargets;
- (id)_delayedTouches;
- (void)_setFailureMap:(id)arg1;
- (id)_failureMap;
- (void)_setRequiresSystemGesturesToFail:(_Bool)arg1;
- (_Bool)_requiresSystemGesturesToFail;
- (void)setState:(long long)arg1;
@property(readonly, nonatomic) long long state;
@property(nonatomic, getter=isEnabled) _Bool enabled;
@property(nonatomic) _Bool delaysTouchesEnded;
@property(nonatomic) _Bool delaysTouchesBegan;
@property(nonatomic) _Bool cancelsTouchesInView;
- (void)setView:(id)arg1;
@property(readonly, nonatomic) UIView *view;
- (void)_resetGestureRecognizer;
- (void)reset;
- (void)_clearUpdateTimer;
- (void)removeTarget:(id)arg1 action:(SEL)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)_connectInterfaceBuilderEventConnection:(id)arg1;
- (void)_detach;

@end

__attribute__((visibility("hidden")))
@interface UIDragRecognizer : UIGestureRecognizer
{
    double _maximumDeviation;
    double _minimumDistance;
    struct CGPoint _startPosition;
    _Bool _restrictsToAngle;
    double _angle;
    UITouch *_touch;
    UIDelayedAction *_tooSlow;
    double _startAngle;
    double _quietPeriod;
    _Bool _canBeginDrag;
    SEL _checkCanBeginDrag;
    UIDelayedAction *ignoreTouch;
}

@property(retain, nonatomic) UIDelayedAction *ignoreTouch; // @synthesize ignoreTouch;
@property(nonatomic) SEL checkCanBeginDrag; // @synthesize checkCanBeginDrag=_checkCanBeginDrag;
@property(nonatomic) _Bool canBeginDrag; // @synthesize canBeginDrag=_canBeginDrag;
@property(nonatomic) double quietPeriod; // @synthesize quietPeriod=_quietPeriod;
@property(nonatomic) double startAngle; // @synthesize startAngle=_startAngle;
@property(nonatomic) double angle; // @synthesize angle=_angle;
@property(nonatomic) _Bool restrictsToAngle; // @synthesize restrictsToAngle=_restrictsToAngle;
@property(retain, nonatomic) UITouch *touch; // @synthesize touch=_touch;
@property(nonatomic) double minimumDistance; // @synthesize minimumDistance=_minimumDistance;
@property(nonatomic) struct CGPoint startPosition; // @synthesize startPosition=_startPosition;
@property(nonatomic) double maximumDeviation; // @synthesize maximumDeviation=_maximumDeviation;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)clearIgnoreTouch;
- (void)tooSlow:(id)arg1;
- (void)clearTimer;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface UIDragger : NSObject
{
    CDUnknownFunctionPointerType _interpolator;
    UIView *_target;
    id _delegate;
    SEL _action;
    struct CGPoint _startLocation;
    struct CGPoint _stopLocation;
    double _duration;
    _Bool _showFinger;
    unsigned int _port;
    NSArray *_modes;
    unsigned long long _startTimestamp;
    unsigned long long _stopTimestamp;
    unsigned long long _lastTimestamp;
    _Bool _waitingForSmoothScrolling;
    UIImageView *_fingerView;
}

- (void)run;
- (void)_continueDrag:(id)arg1;
- (void)_stopDrag:(id)arg1;
- (void)_smoothScrollingDidEnd:(id)arg1;
- (void)_smoothScrollingWillStart:(id)arg1;
- (void)dragDidEnd;
- (double)_delayUntilNextEvent;
- (void)_postMouseEvent:(int)arg1 timestamp:(unsigned long long)arg2 location:(struct CGPoint)arg3;
- (void)showFinger;
- (void)setDuration:(double)arg1;
- (void)setStopLocation:(struct CGPoint)arg1;
- (void)setStartLocation:(struct CGPoint)arg1;
- (void)setAction:(SEL)arg1;
- (void)setDelegate:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)setInterpolation:(CDUnknownFunctionPointerType)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIDropShadowView : UIView
{
    double _cornerRadius;
    UIView *_contentView;
    UIView *_backgroundImage;
    NSDictionary *_preservedLayerValues;
}

@property(nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (void)didFinishRotation;
- (void)willBeginRotationWithOriginalBounds:(struct CGRect)arg1 newBounds:(struct CGRect)arg2;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateShadowPath;
- (void)dealloc;
- (id)init;

@end

@interface UIDynamicAnimator : NSObject
{
    PKExtendedPhysicsWorld *_world;
    CADisplayLink *_displaylink;
    double _elapsedTime;
    double _realElapsedTime;
    double _lastUpdateTime;
    double _lastInterval;
    long long _ticks;
    CALayer *_debugLayer;
    NSMutableDictionary *_bodies;
    NSMutableArray *_topLevelBehaviors;
    NSMutableSet *_registeredBehaviors;
    NSMutableSet *_behaviorsToRemove;
    NSMutableSet *_behaviorsToAdd;
    NSMutableArray *_postSolverActions;
    NSMutableArray *_beginContacts;
    NSMutableArray *_endContacts;
    _Bool _isInWorldStepMethod;
    _Bool _needsLocalBehaviorReevaluation;
    _Bool _stopping;
    unsigned long long _referenceSystemType;
    unsigned long long _integralization;
    struct {
        unsigned int delegateImplementsDynamicAnimatorDidPause:1;
        unsigned int delegateImplementsDynamicAnimatorWillResume:1;
    } _stateFlags;
    double _accuracy;
    int _registeredCollisionGroups;
    int _registeredImplicitBounds;
    struct CGRect _referenceSystemBounds;
    id <_UIDynamicReferenceSystem> _referenceSystem;
    int _debugInterval;
    CDUnknownBlockType _action;
    id <UIDynamicAnimatorDelegate> _delegate;
    _Bool _disableDisplayLink;
    double _speed;
    UIDynamicAnimatorTicker *_ticker;
}

+ (id)_allDynamicAnimators;
+ (void)_clearReferenceViewFromAnimators:(id)arg1;
+ (void)_referenceViewSizeChanged:(id)arg1;
+ (void)_unregisterAnimator:(id)arg1;
+ (void)_registerAnimator:(id)arg1;
+ (void)initialize;
@property(retain, nonatomic) UIDynamicAnimatorTicker *ticker; // @synthesize ticker=_ticker;
- (id)_referenceSystem;
- (unsigned long long)_referenceSystemType;
- (struct CGRect)_referenceSystemBounds;
- (void)_setReferenceSystem:(id)arg1;
@property(readonly, nonatomic) UIView *referenceView;
- (void)setReferenceView:(id)arg1;
- (double)_realElapsedTime;
- (long long)_ticks;
- (void)_displayLinkTick:(id)arg1;
- (double)_animatorInterval;
- (_Bool)_animatorStep:(double)arg1;
- (_Bool)_alwaysDisableDisplayLink;
- (void)_setAlwaysDisableDisplayLink:(_Bool)arg1;
- (int)_debugInterval;
- (void)_setDebugInterval:(int)arg1;
- (void)_setAction:(CDUnknownBlockType)arg1;
- (void)_setDelegate:(id)arg1;
@property(nonatomic) id <UIDynamicAnimatorDelegate> delegate;
- (id)_delegate;
- (void)_postSolverStep;
- (void)_runBlockPostSolverIfNeeded:(CDUnknownBlockType)arg1;
- (void)_preSolverStep;
- (void)_start;
- (void)_tickle;
- (void)_clearReferenceView;
- (void)_stop;
- (void)_setRunning:(_Bool)arg1;
@property(readonly, nonatomic, getter=isRunning) _Bool running;
- (_Bool)_isWorldActive;
- (void)_setupWorld;
- (double)_speed;
- (void)_setSpeed:(double)arg1;
- (id)_world;
- (id)_bodyForItem:(id)arg1;
- (id)_keyForItem:(id)arg1;
- (id)_registerBodyForItem:(id)arg1 shape:(unsigned long long)arg2;
- (void)updateItemUsingCurrentState:(id)arg1;
- (void)updateItemFromCurrentState:(id)arg1;
- (id)layoutAttributesForCellAtIndexPath:(id)arg1;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)itemsInRect:(struct CGRect)arg1;
- (id)_registerBodyForItem:(id)arg1;
- (void)_unregisterBodyForItem:(id)arg1 action:(CDUnknownBlockType)arg2;
- (void)_defaultMapper:(id)arg1 position:(struct CGPoint)arg2 angle:(double)arg3 itemType:(unsigned long long)arg4;
- (unsigned long long)_animatorIntegralization;
- (void)_setAnimatorIntegralization:(unsigned long long)arg1;
- (void)_unregisterCollisionGroup;
- (int)_registerCollisionGroup;
@property(readonly, copy, nonatomic) NSArray *behaviors;
- (double)elapsedTime;
- (void)removeAllBehaviors;
- (void)_traverseBehaviorHierarchy:(CDUnknownBlockType)arg1;
- (void)_unregisterImplicitBounds;
- (void)_registerImplicitBounds;
- (void)_reevaluateImplicitBounds;
- (void)_evaluateLocalBehaviors;
- (void)_shouldReevaluateLocalBehaviors;
- (void)_reportEndContacts;
- (void)_reportBeginContacts;
- (void)didEndContact:(id)arg1;
- (void)didBeginContact:(id)arg1;
- (void)_unregisterBehavior:(id)arg1;
- (void)_registerBehavior:(id)arg1;
- (void)_checkBehavior:(id)arg1;
- (void)removeBehavior:(id)arg1;
- (void)addBehavior:(id)arg1;
- (double)_ptmRatio;
- (id)recursiveDescription;
- (id)description;
- (void)dealloc;
- (id)initWithReferenceSystem:(id)arg1;
- (id)init;
- (id)initWithCollectionViewLayout:(id)arg1;
- (id)initWithReferenceView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIDynamicAnimatorTicker : NSObject
{
    UIDynamicAnimator *_animator;
}

@property UIDynamicAnimator *animator; // @synthesize animator=_animator;
- (void)_displayLinkTick:(id)arg1;

@end

@interface UIImageView : UIView
{
    id _storage;
    struct UIEdgeInsets _cachedEdgeInsetsForEffects;
    _Bool _templateSettingsAreInvalid;
    _Bool _edgeInsetsForEffectsAreValid;
    _Bool __animatesContents;
}

@property(nonatomic, setter=_setAnimatesContents:) _Bool _animatesContents; // @synthesize _animatesContents=__animatesContents;
@property(nonatomic, setter=_setEdgeInsetsForEffectsAreValid:) _Bool _edgeInsetsForEffectsAreValid; // @synthesize _edgeInsetsForEffectsAreValid;
@property(readonly, nonatomic) _Bool _templateSettingsAreInvalid; // @synthesize _templateSettingsAreInvalid;
- (void)_updateImageViewForOldImage:(id)arg1 newImage:(id)arg2;
- (void)_resolveImageForTrait:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)_currentHighlightedImage;
- (id)_currentImage;
- (id)_decompressingImageForType:(unsigned long long)arg1;
- (void)_setDecompressingImage:(id)arg1 forType:(unsigned long long)arg2;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)setAnimating:(_Bool)arg1;
- (struct CGImage *)imageRef;
- (void)setCGImageRef:(struct CGImage *)arg1;
@property(nonatomic) int drawMode;
- (void)_drawImageEffectsForImage:(id)arg1 inRect:(struct CGRect)arg2;
- (_Bool)_needsImageEffectsForImage:(id)arg1 suppressColorizing:(_Bool)arg2;
- (_Bool)_needsImageEffectsForImage:(id)arg1;
- (void)tintColorDidChange;
- (id)_effectiveTintColorWithImage:(id)arg1;
@property(nonatomic, setter=_setMasksTemplateImages:) _Bool _masksTemplateImages;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
@property(nonatomic, setter=_setTemplateImageRenderingEffects:) unsigned long long _templateImageRenderingEffects;
@property(nonatomic, setter=_setDefaultRenderingMode:) long long _defaultRenderingMode;
@property(readonly, nonatomic) struct UIEdgeInsets _edgeInsetsForEffects;
- (void)_updateTemplateProperties;
- (void)_templateSettingsDidChange;
- (void)_invalidateTemplateSettings;
- (void)_updateMasking;
- (_Bool)_shouldTreatImageAsTemplate:(id)arg1;
- (id)_activeImage;
- (id)_generateBackdropMaskImage;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
@property(nonatomic) long long animationRepeatCount;
@property(nonatomic) double animationDuration;
- (_Bool)isAnimating;
- (void)stopAnimating;
- (void)startAnimating;
@property(copy, nonatomic) NSArray *highlightedAnimationImages;
@property(copy, nonatomic) NSArray *animationImages;
- (void)drawRect:(struct CGRect)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_setViewGeometry:(struct CGRect)arg1 forMetric:(int)arg2;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(retain, nonatomic) UIImage *highlightedImage;
@property(retain, nonatomic) UIImage *image;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithImage:(id)arg1 highlightedImage:(id)arg2;
- (id)initWithImage:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_updateState;
- (_Bool)_setImageViewContents:(id)arg1;
- (_Bool)_canDrawContent;
- (_Bool)_shouldDrawImage:(id)arg1;
- (_Bool)useBlockyMagnificationInClassic;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (unsigned long long)defaultAccessibilityTraits;
- (_Bool)isAccessibilityElementByDefault;
- (void)_applySettingsForLegibilityStyle:(long long)arg1;
- (id)_cachedPretiledImageForImage:(id)arg1;
- (void)_clearPretiledImageCacheForImage:(id)arg1;
- (void)_updatePretiledImageCacheForImage:(id)arg1;
- (_Bool)_recomputePretilingState;

// Remaining properties
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
@property(nonatomic, getter=isUserInteractionEnabled) _Bool userInteractionEnabled; // @dynamic userInteractionEnabled;

@end

__attribute__((visibility("hidden")))
@interface UIDynamicCaret : UIImageView <UIKeyboardCandidateList, _UIDynamicCaretDocumentContentDelegate>
{
    id <UIKeyboardCandidateListDelegate> _candidateListDelegate;
    long long _selectedIndex;
    _Bool _justDeleted;
    _UIDynamicCaretInput *_inputView;
    _UIDynamicCaretAlternatives *_alternativesView;
    _UIDynamicCaretNoContentView *_noContentView;
    _UIDynamicCaretHelpLabel *_helpLabel;
    TIKeyboardCandidateResultSet *_candidateSet;
}

@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateSet; // @synthesize candidateSet=_candidateSet;
@property(retain, nonatomic) _UIDynamicCaretHelpLabel *helpLabel; // @synthesize helpLabel=_helpLabel;
@property(retain, nonatomic) _UIDynamicCaretNoContentView *noContentView; // @synthesize noContentView=_noContentView;
@property(retain, nonatomic) _UIDynamicCaretAlternatives *alternativesView; // @synthesize alternativesView=_alternativesView;
@property(retain, nonatomic) _UIDynamicCaretInput *inputView; // @synthesize inputView=_inputView;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (_Bool)showCandidate:(id)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;
- (_Bool)hasCandidates;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)alternativeTappedAtIndex:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setDocumentHasContent:(_Bool)arg1;
@property(nonatomic) _Bool isActive;
- (void)didMoveToSuperview;
- (id)backgroundImage;
- (void)displayAlternatives:(_Bool)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIDynamicItemBehavior : UIDynamicBehavior
{
    _Bool _useDefaultViewPropertiesApplier;
    _Bool _useCircularBoundingBox;
    struct {
        unsigned int elasticityChanged:1;
        unsigned int frictionChanged:1;
        unsigned int densityChanged:1;
        unsigned int resistanceChanged:1;
        unsigned int angularResistanceChanged:1;
        unsigned int rotationEnabledChanged:1;
        unsigned int useDefaultViewPropertiesApplierChanged:1;
    } _stateFlags;
    NSMapTable *_cachedAngularVelocities;
    NSMapTable *_cachedLinearVelocities;
    _Bool _allowsRotation;
    double _elasticity;
    double _friction;
    double _density;
    double _resistance;
    double _angularResistance;
}

@property(nonatomic) _Bool allowsRotation; // @synthesize allowsRotation=_allowsRotation;
@property(nonatomic) double angularResistance; // @synthesize angularResistance=_angularResistance;
@property(nonatomic) double resistance; // @synthesize resistance=_resistance;
@property(nonatomic) double density; // @synthesize density=_density;
@property(nonatomic) double friction; // @synthesize friction=_friction;
@property(nonatomic) double elasticity; // @synthesize elasticity=_elasticity;
- (id)description;
- (void)setUseDefaultViewPropertiesApplier:(_Bool)arg1;
- (_Bool)useDefaultViewPropertiesApplier;
- (void)_dissociate;
- (void)_associate;
- (void)_reevaluate:(unsigned long long)arg1;
- (void)applyImpulse:(struct CGPoint)arg1 toItem:(id)arg2;
- (_Bool)_rotationEnabledForItem:(id)arg1;
- (double)_massForItem:(id)arg1;
- (double)_angularResistanceForItem:(id)arg1;
- (double)_resistanceForItem:(id)arg1;
- (double)_densityForItem:(id)arg1;
- (double)_frictionForItem:(id)arg1;
- (double)_elasticityForItem:(id)arg1;
- (double)angularVelocityForItem:(id)arg1;
- (void)addAngularVelocity:(double)arg1 forItem:(id)arg2;
- (double)_angleForItem:(id)arg1;
- (void)_setAngle:(double)arg1 forItem:(id)arg2;
- (struct CGPoint)_positionForItem:(id)arg1;
- (void)_setPosition:(struct CGPoint)arg1 forItem:(id)arg2;
- (struct CGPoint)linearVelocityForItem:(id)arg1;
- (void)addLinearVelocity:(struct CGPoint)arg1 forItem:(id)arg2;
@property(readonly, copy, nonatomic) NSArray *items;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (void)_configureBody:(id)arg1 forView:(id)arg2;
- (void)_setUseCircularBoundingBox:(_Bool)arg1;
- (_Bool)_useCircularBoundingBox;
- (void)dealloc;
- (id)initWithItems:(id)arg1;
- (id)init;
- (void)_commonInit;

@end

@interface UIEvent : NSObject
{
    double _timestamp;
}

- (id)touchesForGestureRecognizer:(id)arg1;
- (id)touchesForView:(id)arg1;
- (id)touchesForWindow:(id)arg1;
- (id)allTouches;
@property(readonly, nonatomic) double timestamp;
@property(readonly, nonatomic) long long subtype;
@property(readonly, nonatomic) long long type;
- (_Bool)_isKeyDown;
- (long long)_modifierFlags;
- (id)_unmodifiedInput;
- (id)_modifiedInput;
- (id)_triggeringPhysicalButton;
- (id)_physicalButtonsForGestureRecognizer:(id)arg1;
- (id)_physicalButtonsForResponder:(id)arg1;
- (id)_physicalButtonsForWindow:(id)arg1;
- (id)_allPhysicalButtons;
- (long long)_moveDirection;
- (int)_shakeState;
- (id)_touchesForGestureRecognizer:(id)arg1;
- (struct __IOHIDEvent *)_hidEvent;
- (struct __GSEvent *)_gsEvent;
- (id)_initWithEvent:(struct __GSEvent *)arg1 touches:(id)arg2;
- (double)_wheelVelocity;
- (_Bool)isKeyDown;
- (void)_sendEventToResponder:(id)arg1;
- (id)_windows;
- (id)_screen;
- (void)_setTimestamp:(double)arg1;
- (id)_init;

@end

@interface UIFetchContentInBackgroundAction : BSAction
{
}

- (void)sendResponse:(id)arg1;
- (long long)UIActionType;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithHandler:(CDUnknownBlockType)arg1;

@end

@interface UIFetchContentInBackgroundActionResponse : BSActionResponse
{
}

+ (id)responseWithResult:(unsigned long long)arg1;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long result;
- (id)initWithInfo:(id)arg1 error:(id)arg2;
- (id)initWithBackgroundFetchResult:(unsigned long long)arg1;

@end

@interface UIFieldEditor : UIScrollView <UITextInputControllerDelegate, NSLayoutManagerDelegate, NSUITextViewCommonMethods, UIAutoscrollContainer, UITextInput, UITextAutoscrolling, UIKeyboardInput>
{
    UITextInputController *_inputController;
    UITextField *_proxiedView;
    UIAutoscroll *_autoscroll;
    NSTextContainer *_textContainer;
    _UIFieldEditorLayoutManager *_layoutManager;
    _UICascadingTextStorage *_textStorage;
    struct {
        unsigned int delegateRespondsToFieldEditorDidChange:1;
        unsigned int delegateRespondsToShouldInsertText:1;
        unsigned int delegateRespondsToShouldReplaceWithText:1;
        unsigned int suppressScrollToSelection:1;
        unsigned int clearOnNextEdit:1;
    } _feFlags;
    struct UIEdgeInsets _padding;
    _UIFieldEditorContentView *_contentView;
    struct _NSRange _unobscuredSecureRange;
    NSTimer *_obscureLastCharacterTimer;
    struct CGPoint _textContainerOrigin;
    double _contentWidth;
    _UIFieldEditorContentView *_passcodeStyleCutoutView;
    struct CGPoint _autoscrollContentOffset;
}

+ (id)excludedElementsForHTML;
+ (void)releaseSharedInstance;
+ (id)sharedFieldEditor;
+ (id)activeFieldEditor;
@property(nonatomic) struct CGPoint autoscrollContentOffset; // @synthesize autoscrollContentOffset=_autoscrollContentOffset;
@property(nonatomic) struct UIEdgeInsets padding; // @synthesize padding=_padding;
- (_Bool)_hasDictationPlaceholder;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)_textInputTraits;
- (_Bool)_shouldObscureInput;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(nonatomic) struct _NSRange markedRange;
- (id)linkTextAttributes;
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;
- (_Bool)isHorizontallyResizable;
- (struct CGSize)minSize;
- (void)invalidateTextContainerOrigin;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;
- (struct UIEdgeInsets)textContainerInset;
- (struct CGPoint)textContainerOrigin;
- (struct CGRect)visibleRect;
@property(nonatomic) long long layoutOrientation;
@property(nonatomic) NSTextContainer *textContainer;
- (void)layoutManager:(id)arg1 didCompleteLayoutForTextContainer:(id)arg2 atEnd:(_Bool)arg3;
- (struct CGRect)layoutManager:(id)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(id)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (long long)layoutManager:(id)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (unsigned long long)layoutManager:(id)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(id)arg5 forGlyphRange:(struct _NSRange)arg6;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (id)_inputController;
- (id)interactionAssistant;
- (id)metadataDictionariesForDictationResults;
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (_Bool)isEditing;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
@property(readonly, nonatomic) UIView *textInputView;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)clearText;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (void)deleteBackward;
- (void)_obscureLastCharacter;
- (void)_cancelObscureLastCharacterTimer;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (void)drawTextInRect:(struct CGRect)arg1 forContentView:(id)arg2;
- (_Bool)_clearOnEditIfNeeded;
- (id)_textContainer;
- (id)_layoutManager;
- (struct CGPoint)_textContainerOrigin;
- (id)undoManager;
- (int)atomStyle;
- (_Bool)drawsAsAtom;
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;
- (void)_performWhileSuppressingDelegateNotifications:(CDUnknownBlockType)arg1;
- (_Bool)hasMarkedText;
- (unsigned long long)characterOffsetAtPoint:(struct CGPoint)arg1;
- (void)revealSelection;
- (void)setSelection:(struct _NSRange)arg1;
- (struct _NSRange)selectionRange;
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2 adjustForPurpleCaret:(_Bool)arg3;
- (void)setScrollXOffset:(int)arg1 scrollYOffset:(int)arg2;
- (int)scrollYOffset;
- (int)scrollXOffset;
- (void)setAttributedText:(id)arg1;
- (id)attributedText;
- (void)setAttributedText:(id)arg1 andSetCaretSelectionAfterText:(_Bool)arg2;
- (void)addTextAlternativesDisplayStyleToRange:(struct _NSRange)arg1;
- (void)setText:(id)arg1;
- (id)text;
- (void)setText:(id)arg1 andSetCaretSelectionAfterText:(_Bool)arg2;
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (id)font;
- (void)setFont:(id)arg1;
- (id)textColor;
- (void)setTextColor:(id)arg1;
- (id)style;
- (void)setStyle:(id)arg1;
- (struct _NSRange)_unobscuredSecureRange;
- (_Bool)_isPasscodeStyle;
- (void)_setValue:(id)arg1 forTextAttribute:(id)arg2;
- (void)becomeFieldEditorForView:(id)arg1;
- (struct CGRect)contentFrameForView:(id)arg1;
- (void)cancelAutoscroll;
- (void)updateAutoscroll:(id)arg1;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (struct CGRect)_selectionClipRect;
- (id)proxiedView;
- (id)textColorForCaretSelection;
- (id)textInputTraits;
- (id)_textSelectingContainer;
- (struct CGRect)_responderExternalTouchRectForWindow:(id)arg1;
- (_Bool)isFirstResponder;
- (id)_responderForBecomeFirstResponder;
- (void)selectAll;
- (void)textInput:(id)arg1 prepareAttributedTextForInsertion:(id)arg2;
- (_Bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (struct _NSRange)textInput:(id)arg1 willChangeSelectionFromCharacterRange:(struct _NSRange)arg2 toCharacterRange:(struct _NSRange)arg3;
- (void)textInputDidChangeSelection:(id)arg1;
- (void)textInputDidChange:(id)arg1;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (_Bool)keyboardInputShouldDelete:(id)arg1;
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (id)_textStorage;
- (void)_textStorageDidProcessEditing:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic) long long selectionAffinity;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;

@end

@interface UIFlicker : NSObject
{
    UIView *_target;
    struct CGPoint _startLocation;
    int _throwIterations;
    id _delegate;
    int _mouseUpCount;
    int _mouseDraggedCount;
    float _delay;
    struct CGPoint _offset;
}

- (void)run;
- (void)setDelegate:(id)arg1;
- (void)setDelay:(float)arg1;
- (void)setIterations:(int)arg1;
- (void)setStartLocation:(struct CGPoint)arg1;
- (void)setTarget:(id)arg1;
- (void)setOffset:(struct CGPoint)arg1;
- (struct CGPoint)offset;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIFloatArray : NSObject
{
    int _count;
    int _gapCount;
    int *_gaps;
    float _gapValue;
    float _minValue;
    union {
        float singleton;
        float *array;
    } _values;
    struct {
        unsigned int valueIsSingleton:1;
        unsigned int hideGaps:1;
        unsigned int unused:30;
    } _floatArrayFlags;
}

- (void)hideGaps:(_Bool)arg1;
- (int)indexForGapIndex:(int)arg1;
- (CDStruct_3eb7d77a)indexesFromOffset:(float)arg1 toOffset:(float)arg2;
- (CDStruct_3eb7d77a)_indexesViaArrayFromOffset:(float)arg1 toOffset:(float)arg2;
- (CDStruct_3eb7d77a)_indexesViaSingletonFromOffset:(float)arg1 toOffset:(float)arg2;
- (CDStruct_b2fbf00d)offsetsForGapIndex:(int)arg1;
- (CDStruct_b2fbf00d)offsetsForIndex:(int)arg1;
- (float)sum;
- (int)valueCount;
- (float)minValue;
- (float)singleValue;
- (_Bool)refreshWithDataProvider:(id)arg1;
- (_Bool)refreshWithDataProvider:(id)arg1 singleValue:(float)arg2;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (_Bool)_setupWithDataProvider:(id)arg1 valueIsSingleton:(_Bool)arg2 singletonValue:(float)arg3 isRefresh:(_Bool)arg4;
- (_Bool)_setupGapIndexesWithCount:(int)arg1 dataProvider:(id)arg2 isRefresh:(_Bool)arg3;
- (_Bool)_setupValuesWithCount:(int)arg1 dataProvider:(id)arg2 isRefresh:(_Bool)arg3;
- (_Bool)_setupValuesWithCount:(int)arg1 singleValue:(float)arg2 isRefresh:(_Bool)arg3;

@end

@interface UIFont (SecuredTextField)
+ (id)_ui_bulletFontForFont:(id)arg1;
@end

@interface UIFrameAnimation : UIAnimation
{
    struct CGRect _startFrame;
    struct CGRect _endFrame;
    int _fieldsToChange;
}

- (void)setProgress:(float)arg1;
- (void)setSignificantRectFields:(int)arg1;
- (struct CGRect)endFrame;
- (void)setEndFrame:(struct CGRect)arg1;
- (void)setStartFrame:(struct CGRect)arg1;
- (id)initWithTarget:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIFullScreenViewController : UIViewController
{
}

- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIGestureAnimation : UIAnimation
{
    SEL _progressSelector;
    int _gestureType;
}

- (int)gestureType;
- (void)setProgress:(float)arg1;
- (id)initWithTarget:(id)arg1 progressSelector:(SEL)arg2 gestureType:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIGestureDelayedTouch : NSObject <NSCopying>
{
    UITouch *_touch;
    UITouch *_stateWhenDelayed;
    UITouch *_stateWhenDelivered;
    UIEvent *_event;
    long long _delayCount;
    _Bool _cloneForSecondDelivery;
}

@property _Bool cloneForSecondDelivery; // @synthesize cloneForSecondDelivery=_cloneForSecondDelivery;
@property(retain) UIEvent *event; // @synthesize event=_event;
@property(retain) UITouch *stateWhenDelivered; // @synthesize stateWhenDelivered=_stateWhenDelivered;
@property(retain) UITouch *stateWhenDelayed; // @synthesize stateWhenDelayed=_stateWhenDelayed;
@property(retain) UITouch *touch; // @synthesize touch=_touch;
- (id)description;
- (double)timestampForDelivery;
- (long long)phaseForDelivery;
- (void)saveCurrentTouchState;
- (long long)delayCount;
- (void)incrementDelayCount;
- (long long)decrementDelayCount;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIGestureInfo : NSObject
{
    id delegate;
    int enabledGestures;
    int rotationState;
    int zoomState;
    int panState;
    struct CGPoint startGestureInner;
    struct CGPoint startGestureOuter;
    struct CGPoint startScrollPoint;
    struct CGPoint endScrollPoint;
    struct CGSize visibleSize;
    struct CGRect centerRect;
    UIGestureAnimation *rotationAnimation;
    float rotationDegrees;
    float recentRotationDegrees;
    float minDegrees;
    float maxDegrees;
    float startDegrees;
    float endDegrees;
    UIGestureAnimation *zoomAnimation;
    int zoomRubberBandHysteresisCount;
    float zoomScale;
    float startScale;
    float endScale;
    float unadjustedScale;
    float zoomMultiplier;
    float minScale;
    float maxScale;
    struct CGPoint zoomFailureWindowPoint;
    float zoomFailureDuration;
    float zoomFailureStartScale;
    float zoomAnimationProgress;
    UIScrollAnimation *scrollAnimation;
    struct {
        unsigned int pushedRunLoop:1;
        unsigned int isRotatingRight:1;
        unsigned int isZoomRubberBandEnabled:1;
        unsigned int zoomsFromCurrentToMinOrMax:1;
        unsigned int updatesScroller:1;
        unsigned int isAnimatingZoomFailure:1;
    } flags;
}

- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIGestureRecognizerTarget : NSObject
{
    id _target;
    SEL _action;
}

- (id)description;

@end

__attribute__((visibility("hidden")))
@interface UIGobblerGestureRecognizer : UIGestureRecognizer
{
    UIView *_excludedView;
}

- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 excludedView:(id)arg3;

@end

@interface UIGradient : NSObject
{
    CDStruct_d83abbfb *_values;
    double _height;
    struct CGShading *_shader;
}

- (void)dealloc;
- (void)fillRect:(struct CGRect)arg1;
- (void)fillRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)initVerticalWithValues:(CDStruct_d83abbfb *)arg1;

@end

@interface UIGravityBehavior : UIDynamicBehavior
{
    struct CGPoint _gravity;
}

- (id)description;
- (void)_dissociate;
- (void)_associate;
@property(readonly, copy, nonatomic) NSArray *items;
- (void)setGravity:(struct CGPoint)arg1;
- (void)setAngle:(double)arg1 magnitude:(double)arg2;
- (void)_setAngle:(double)arg1 magnitude:(double)arg2;
- (void)setXComponent:(double)arg1 yComponent:(double)arg2;
- (void)setYComponent:(double)arg1;
- (void)setXComponent:(double)arg1;
@property(nonatomic) double magnitude;
@property(nonatomic) double angle;
- (double)yComponent;
- (double)xComponent;
- (struct CGPoint)denormalizedGravity;
- (struct CGPoint)gravity;
@property(nonatomic) struct CGVector gravityDirection;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (void)_addItem:(id)arg1;
- (id)initWithItems:(id)arg1;
- (id)init;
- (void)_commonInit;

@end

__attribute__((visibility("hidden")))
@interface UIGroupTableViewCellBackground : UIView
{
    int _sectionLocation;
    int _newSectionLocation;
    long long _animationCount;
    long long _selectionStyle;
    long long _separatorStyle;
    UIView *_topSeparatorView;
    UIView *_bottomSeparatorView;
    UIColor *_selectionTintColor;
    double _sectionBorderWidth;
    struct UIEdgeInsets _separatorInset;
    struct {
        unsigned int selected:1;
    } _groupBackgroundFlags;
}

+ (void)initialize;
+ (void)_flushCacheOnNotification:(id)arg1;
@property(nonatomic) struct UIEdgeInsets separatorInset; // @synthesize separatorInset=_separatorInset;
@property(nonatomic) double sectionBorderWidth; // @synthesize sectionBorderWidth=_sectionBorderWidth;
- (id)_topShadowViewWithColor:(id)arg1;
- (id)_contentMaskLayer;
- (void)layoutSubviews;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
@property(nonatomic, getter=isSelected) _Bool selected;
@property(nonatomic) long long separatorStyle;
@property(nonatomic) long long selectionStyle;
@property(retain, nonatomic) UIColor *selectionTintColor;
- (void)setSelectionTintColor:(id)arg1 layoutSubviews:(_Bool)arg2;
@property(nonatomic) int sectionLocation;
- (void)setSectionLocation:(int)arg1 animated:(_Bool)arg2;
- (void)_setSectionLocationAnimationDidStop;
- (void)setFrame:(struct CGRect)arg1;
- (void)displayLayer:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_layoutSubviews:(_Bool)arg1;
- (struct CGRect)_contentsCenter:(_Bool)arg1;
- (struct CGRect)_contentsRect:(_Bool)arg1;
- (double)_pixelDisplayedImageHeight;
- (void)_updateSeparatorViews;
- (id)_fillColor;
- (id)_bottomShadowColor;
- (id)_topShadowColor;
- (id)_separatorColor;
- (id)_sectionBorderColor;
- (id)_backgroundColor;
- (void)_decrementAnimationCount;
- (void)_incrementAnimationCount;
- (struct CGRect)_contentRectForContentHeight:(double)arg1;
- (id)_cachedImageForKey:(id)arg1;
- (id)_roundedRectBezierPathInRect:(struct CGRect)arg1 withSectionLocation:(int)arg2 forBorder:(_Bool)arg3 cornerRadiusAdjustment:(double)arg4;

@end

@interface UIHandleBackgroundURLSessionAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, copy, nonatomic) NSString *sessionIdentifier;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithSessionIdentifier:(id)arg1;

@end

@interface UIHandleLocalNotificationAction : BSAction
{
    NSObject<OS_dispatch_semaphore> *_decodeSemaphore;
    UILocalNotification *_cachedNotification;
}

- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (long long)UIActionType;
@property(readonly, copy, nonatomic) NSString *action;
@property(readonly, copy, nonatomic) UILocalNotification *notification;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithNotification:(id)arg1 action:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (id)initWithNotification:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (id)initWithNotification:(id)arg1;
- (id)_initWithNotification:(id)arg1 action:(id)arg2 type:(long long)arg3 withHandler:(CDUnknownBlockType)arg4;

@end

@interface UIHandleRemoteNotificationAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (void)sendResponse:(id)arg1;
- (long long)UIActionType;
@property(readonly, copy, nonatomic) NSString *action;
@property(readonly, copy, nonatomic) NSDictionary *payload;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithRemoteNotificationPayload:(id)arg1 action:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (id)initWithRemoteNotificationPayload:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (id)_initWithRemoteNotificationPayload:(id)arg1 action:(id)arg2 type:(long long)arg3 withHandler:(CDUnknownBlockType)arg4;

@end

@interface UIHandleStatusBarTapAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, nonatomic) long long statusBarStyle;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithStatusBarStyle:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIIBApplication : UIApplication
{
    long long _statusBarOrientation;
}

+ (_Bool)rendersLocally;
- (long long)statusBarOrientation;
- (void)setStatusBarOrientation:(long long)arg1 animationParameters:(id)arg2;
- (id)init;

@end

@interface UIImage : NSObject <NSSecureCoding>
{
    void *_imageRef;
    double _scale;
    struct {
        unsigned int named:1;
        unsigned int imageOrientation:3;
        unsigned int cached:1;
        unsigned int hasPattern:1;
        unsigned int isCIImage:1;
        unsigned int renderingMode:2;
        unsigned int suppressesAccessibilityHairlineThickening:1;
        unsigned int hasDecompressionInfo:1;
    } _imageFlags;
    UITraitCollection *_traitCollection;
    UIImageAsset *_imageAsset;
    struct UIEdgeInsets _alignmentRectInsets;
}

+ (id)animatedImageWithImages:(id)arg1 duration:(double)arg2;
+ (id)animatedResizableImageNamed:(id)arg1 capInsets:(struct UIEdgeInsets)arg2 resizingMode:(long long)arg3 duration:(double)arg4;
+ (id)animatedResizableImageNamed:(id)arg1 capInsets:(struct UIEdgeInsets)arg2 duration:(double)arg3;
+ (id)animatedImageNamed:(id)arg1 duration:(double)arg2;
+ (struct UIEdgeInsets)_edgeInsetsForStylePresetNames:(id)arg1 scale:(double)arg2;
+ (_Bool)supportsSecureCoding;
+ (id)imageWithCIImage:(id)arg1 scale:(double)arg2 orientation:(long long)arg3;
+ (id)imageWithCIImage:(id)arg1;
+ (id)imageWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
+ (id)imageWithCGImage:(struct CGImage *)arg1;
+ (id)imageWithData:(id)arg1 scale:(double)arg2;
+ (id)imageWithData:(id)arg1;
+ (id)imageWithContentsOfFile:(id)arg1;
+ (id)imageNamed:(id)arg1 inBundle:(id)arg2 compatibleWithTraitCollection:(id)arg3;
+ (id)_imageNamed:(id)arg1 withTrait:(id)arg2;
+ (id)imageNamed:(id)arg1;
+ (void)initialize;
+ (id)_deviceSpecificImageNamed:(id)arg1 inBundle:(id)arg2;
+ (id)_deviceSpecificImageNamed:(id)arg1;
+ (id)imageWithContentsOfCPBitmapFile:(id)arg1 flags:(int)arg2;
+ (id)imageFromAlbumArtData:(id)arg1 height:(int)arg2 width:(int)arg3 bytesPerRow:(int)arg4 cache:(_Bool)arg5;
+ (id)_defaultBackgroundGradient;
+ (id)_backgroundGradientWithStartColor:(id)arg1 andEndColor:(id)arg2;
+ (id)imageNamed:(id)arg1 inBundle:(id)arg2;
+ (id)_kitImageNamed:(id)arg1 withTrait:(id)arg2;
+ (id)kitImageNamed:(id)arg1;
+ (id)imageAtPath:(id)arg1;
+ (long long)_idiomDefinedByPath:(id)arg1;
+ (unsigned long long)_scaleDefinedByPath:(id)arg1;
+ (void)_flushCache:(id)arg1;
+ (void)_flushSharedImageCache;
+ (id)_iconForResourceProxy:(id)arg1 format:(int)arg2;
+ (id)_iconForResourceProxy:(id)arg1 variant:(int)arg2 variantsScale:(double)arg3;
+ (id)_applicationIconImageForBundleIdentifier:(id)arg1 format:(int)arg2 scale:(double)arg3;
+ (id)_applicationIconImageForBundleIdentifier:(id)arg1 format:(int)arg2;
+ (int)_iconVariantForUIApplicationIconFormat:(int)arg1 scale:(double *)arg2;
+ (id)_cachedImageForKey:(id)arg1 fromBlock:(CDUnknownBlockType)arg2;
+ (id)_tintedImageForSize:(struct CGSize)arg1 withTint:(id)arg2 maskImage:(id)arg3 effectsImage:(id)arg4 style:(int)arg5 edgeInsets:(struct UIEdgeInsets)arg6;
+ (id)_tintedImageForSize:(struct CGSize)arg1 withTint:(id)arg2 maskImage:(id)arg3 effectsImage:(id)arg4 style:(int)arg5;
+ (id)_tintedImageForSize:(struct CGSize)arg1 withTint:(id)arg2 effectsImage:(id)arg3 maskImage:(id)arg4 style:(int)arg5;
+ (struct CGSize)_legibilityImageSizeForSize:(struct CGSize)arg1 style:(long long)arg2;
@property(retain, nonatomic) UIImageAsset *imageAsset; // @synthesize imageAsset=_imageAsset;
@property(copy, nonatomic) UITraitCollection *traitCollection; // @synthesize traitCollection=_traitCollection;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)_primitiveImageAsset;
- (id)_automationID;
- (void)drawAsPatternInRect:(struct CGRect)arg1;
- (void)drawInRect:(struct CGRect)arg1 blendMode:(int)arg2 alpha:(double)arg3;
- (void)drawInRect:(struct CGRect)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1 blendMode:(int)arg2 alpha:(double)arg3;
- (void)drawAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) NSArray *images;
- (id)imageWithAlignmentRectInsets:(struct UIEdgeInsets)arg1;
- (void)_setAlignmentRectInsets:(struct UIEdgeInsets)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets alignmentRectInsets; // @synthesize alignmentRectInsets=_alignmentRectInsets;
- (void)_setSuppressesAccessibilityHairlineThickening:(_Bool)arg1;
- (id)_imageWithStylePresets:(id)arg1 withTintColor:(id)arg2;
- (id)_cachedImageStyledWithPresets:(id)arg1 forTintColor:(id)arg2;
@property(readonly, nonatomic) long long renderingMode;
- (id)imageWithRenderingMode:(long long)arg1;
@property(readonly, nonatomic) long long resizingMode;
@property(readonly, nonatomic) struct UIEdgeInsets capInsets;
- (id)resizableImageWithCapInsets:(struct UIEdgeInsets)arg1 resizingMode:(long long)arg2;
- (id)resizableImageWithCapInsets:(struct UIEdgeInsets)arg1;
- (void)_setAlwaysStretches:(_Bool)arg1;
- (_Bool)_isTiledWhenStretchedToSize:(struct CGSize)arg1;
- (_Bool)_isResizable;
- (_Bool)_isSubimage;
- (struct CGRect)_contentRectInPixels;
- (struct CGRect)_contentStretchInPixels;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) long long imageOrientation;
- (struct CGSize)_sizeInPixels;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) CIImage *CIImage;
@property(readonly, nonatomic) struct CGImage *CGImage;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_encodePropertiesWithCoder:(id)arg1;
- (void)_encodeDataWithCoder:(id)arg1 imageName:(id)arg2;
- (_Bool)_canEncodeWithName:(id)arg1 coder:(id)arg2;
- (id)_initWithOtherImage:(id)arg1;
- (void)_configureImage:(id)arg1;
- (id)initWithCIImage:(id)arg1 scale:(double)arg2 orientation:(long long)arg3;
- (id)initWithCIImage:(id)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithData:(id)arg1 scale:(double)arg2;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (_Bool)_isDecompressing;
- (id)_initWithData:(id)arg1 immediateLoadWithMaxSize:(struct CGSize)arg2 scale:(double)arg3 renderingIntent:(int)arg4;
- (void)_startEagerDecompression;
- (void)_saveDecompressedImage:(struct CGImage *)arg1;
- (void)_decompressionFallbackImageCreation;
- (void)_decompressionComplete;
- (id)_decompressionInfo;
- (void)_setDecompressionInfo:(id)arg1;
- (_Bool)_suppressesAccessibilityHairlineThickening;
- (id)_imageThatSuppressesAccessibilityHairlineThickening;
- (id)_flatImageWithColor:(id)arg1;
- (CDStruct_afa449f9)_calculateStatistics;
- (id)_resizableImageWithSubimageInsets:(struct UIEdgeInsets)arg1 resizeInsets:(struct UIEdgeInsets)arg2;
- (id)_stretchableImageWithCapInsets:(struct UIEdgeInsets)arg1;
- (_Bool)writeToCPBitmapFile:(id)arg1 flags:(int)arg2;
- (id)initWithCGImage:(struct CGImage *)arg1 imageOrientation:(long long)arg2;
- (id)_initWithData:(id)arg1 scale:(double)arg2;
- (id)_initWithData:(id)arg1 preserveScale:(_Bool)arg2;
- (id)_initWithData:(id)arg1 preserveScale:(_Bool)arg2 cache:(_Bool)arg3;
- (id)initWithContentsOfFile:(id)arg1 cache:(_Bool)arg2;
@property(readonly, nonatomic) long long topCapHeight;
@property(readonly, nonatomic) long long leftCapWidth;
- (id)stretchableImageWithLeftCapWidth:(long long)arg1 topCapHeight:(long long)arg2;
- (struct CGColor *)_tiledPatternColor;
- (id)patternColor;
- (struct CGColor *)_patternColor;
- (void)draw1PartImageInRect:(struct CGRect)arg1 fraction:(double)arg2 operation:(int)arg3;
- (void)draw1PartImageInRect:(struct CGRect)arg1 fraction:(double)arg2;
- (void)draw1PartImageInRect:(struct CGRect)arg1;
- (void)draw3PartImageWithSliceRects:(CDStruct_24b02699)arg1 inRect:(struct CGRect)arg2 operation:(int)arg3 fraction:(double)arg4;
- (void)draw3PartImageWithSliceRects:(CDStruct_24b02699)arg1 inRect:(struct CGRect)arg2 fraction:(double)arg3;
- (void)draw3PartImageWithSliceRects:(CDStruct_24b02699)arg1 inRect:(struct CGRect)arg2;
- (void)draw9PartImageWithSliceRects:(CDStruct_fa4dcde7)arg1 inRect:(struct CGRect)arg2 operation:(int)arg3 fraction:(double)arg4;
- (void)draw9PartImageWithSliceRects:(CDStruct_fa4dcde7)arg1 inRect:(struct CGRect)arg2 fraction:(double)arg3;
- (void)draw9PartImageWithSliceRects:(CDStruct_fa4dcde7)arg1 inRect:(struct CGRect)arg2;
- (void)compositeToPoint:(struct CGPoint)arg1 operation:(int)arg2;
- (void)compositeToPoint:(struct CGPoint)arg1 operation:(int)arg2 fraction:(double)arg3;
- (void)compositeToPoint:(struct CGPoint)arg1 fromRect:(struct CGRect)arg2 operation:(int)arg3 fraction:(double)arg4;
- (void)compositeToRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(int)arg3 fraction:(double)arg4;
- (struct CGImage *)imageRef;
- (id)initWithData:(id)arg1 cache:(_Bool)arg2;
- (id)_serializedData;
- (id)_imageScaledToProportion:(double)arg1 interpolationQuality:(int)arg2;
- (id)_doubleBezeledImageWithExteriorShadowRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 interiorShadowRed:(double)arg5 green:(double)arg6 blue:(double)arg7 alpha:(double)arg8 fillRed:(double)arg9 green:(double)arg10 blue:(double)arg11 alpha:(double)arg12;
- (id)_bezeledImageWithShadowRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 fillRed:(double)arg5 green:(double)arg6 blue:(double)arg7 alpha:(double)arg8 drawShadow:(_Bool)arg9;
- (id)_flatImageWithWhite:(double)arg1 alpha:(double)arg2;
- (_Bool)_isInvisibleAndGetIsTranslucent:(_Bool *)arg1;
- (_Bool)_isNamed;
- (void)_setNamed:(_Bool)arg1;
- (_Bool)_isCached;
- (void)_setCached:(_Bool)arg1;
- (id)_resizableImageWithCapMask:(int)arg1;
- (id)_applicationIconImageForFormat:(int)arg1 precomposed:(_Bool)arg2 scale:(double)arg3;
- (id)_applicationIconImageForFormat:(int)arg1 precomposed:(_Bool)arg2;
- (void)_preheatBitmapData;
- (id)_applyBackdropViewStyle:(long long)arg1 includeTints:(_Bool)arg2 includeBlur:(_Bool)arg3 graphicsQuality:(long long)arg4 allowImageResizing:(_Bool)arg5;
- (id)_applyBackdropViewStyle:(long long)arg1 includeTints:(_Bool)arg2 includeBlur:(_Bool)arg3 graphicsQuality:(long long)arg4;
- (id)_applyBackdropViewStyle:(long long)arg1 includeTints:(_Bool)arg2 includeBlur:(_Bool)arg3;
- (id)_applyBackdropViewSettings:(id)arg1 includeTints:(_Bool)arg2 includeBlur:(_Bool)arg3 allowImageResizing:(_Bool)arg4;
- (id)_applyBackdropViewSettings:(id)arg1 includeTints:(_Bool)arg2 includeBlur:(_Bool)arg3;
- (id)_applyBackdropViewSettings:(id)arg1;
- (id)_applyBackdropViewSettings:(id)arg1 allowImageResizing:(_Bool)arg2;
- (id)_subimageInRect:(struct CGRect)arg1;
- (id)_unselectedTabBarItemImageWithTintColor:(id)arg1 metrics:(long long)arg2 style:(long long)arg3 forScreenScale:(double)arg4;
- (id)_selectedTabBarItemImageWithTintColor:(id)arg1 metrics:(long long)arg2 style:(long long)arg3 forScreenScale:(double)arg4;
- (id)_tabBarItemImageWithTintColor:(id)arg1 selected:(_Bool)arg2 metrics:(long long)arg3 style:(long long)arg4 forScreenScale:(double)arg5;
- (id)_imageWithBrightnessModifiedForLegibilityStyle:(long long)arg1;
- (void)_drawImageForLegibilitySettings:(id)arg1 strength:(double)arg2 size:(struct CGSize)arg3;
- (void)_drawImageForLegibilityStyle:(long long)arg1 size:(struct CGSize)arg2;
- (id)_imageForLegibilitySettings:(id)arg1 strength:(double)arg2;
- (id)_imageForLegibilityStyle:(long long)arg1;

@end

@interface UIImageAsset : NSObject <NSSecureCoding>
{
    _UIAssetManager *_assetManager;
    _Bool _cacheContents;
    UITraitCollection *_defaultTraitCollection;
    struct {
        unsigned int hasRegisteredImages:1;
        unsigned int supportsBlockGeneration:1;
    } _assetFlags;
    NSString *_assetName;
    CDUnknownBlockType _creationBlock;
}

+ (_Bool)supportsSecureCoding;
+ (id)_assetGeneratingImagesWithDrawingBlock:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) CDUnknownBlockType creationBlock; // @synthesize creationBlock=_creationBlock;
@property(copy, nonatomic) NSString *assetName; // @synthesize assetName=_assetName;
@property(readonly, nonatomic) _UIAssetManager *_assetManager; // @synthesize _assetManager;
- (void)_clearResolvedImageResources;
- (id)_defaultTraitCollection;
- (id)_mutableCatalog;
- (id)_updateAssetFromBlockGenerationWithTraitCollection:(id)arg1 resolvedCatalogImage:(id)arg2;
- (void)_registerImage:(id)arg1 withTraitCollection:(id)arg2 cache:(_Bool)arg3;
- (_Bool)isEqual:(id)arg1;
- (void)unregisterImageWithTraitCollection:(id)arg1;
- (void)registerImage:(id)arg1 withTraitCollection:(id)arg2;
- (id)imageWithTraitCollection:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)_initWithAssetName:(id)arg1 forManager:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIImageLSResourceProxy : UIImage
{
}

+ (id)imageWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
- (void)drawInRect:(struct CGRect)arg1 blendMode:(int)arg2 alpha:(double)arg3;

@end

@interface UIImageNibPlaceholder : UIImage <NSCoding>
{
    NSString *runtimeResourceName;
}

- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 andRuntimeResourceName:(id)arg2;
- (id)initWithContentsOfFile:(id)arg1 andRuntimeResourceName:(id)arg2;

@end

@interface UINavigationController : UIViewController <UIGestureRecognizerDelegatePrivate, UINavigationBarDelegate>
{
    UIView *_containerView;
    UINavigationBar *_navigationBar;
    Class _navigationBarClass;
    UIToolbar *_toolbar;
    UIView *_navigationTransitionView;
    double _bottomInsetDelta;
    double _statusBarHeightForHideShow;
    UIViewController *_disappearingViewController;
    id <UINavigationControllerDelegate> _delegate;
    long long _savedNavBarStyleBeforeSheet;
    long long _savedToolBarStyleBeforeSheet;
    UITapGestureRecognizer *_backGestureRecognizer;
    _UINavigationControllerPalette *_topPalette;
    _UINavigationControllerPalette *_freePalette;
    _UINavigationControllerPalette *_transitioningTopPalette;
    struct {
        unsigned int isAppearingAnimated:1;
        unsigned int isAlreadyPoppingNavigationItem:1;
        unsigned int isNavigationBarHidden:1;
        unsigned int isToolbarShown:1;
        unsigned int needsDeferredTransition:1;
        unsigned int isTransitioning:1;
        unsigned int paletteTransitionPending:1;
        unsigned int lastOperation:4;
        unsigned int lastOperationAnimated:1;
        unsigned int deferredTransition:8;
        unsigned int didPreloadKeyboardAnimation:1;
        unsigned int didHideBottomBar:1;
        unsigned int didExplicitlyHideTabBar:1;
        unsigned int isChangingOrientationForPop:1;
        unsigned int pretendNavBarHidden:1;
        unsigned int avoidMovingNavBarOffscreenBeforeUnhiding:1;
        unsigned int searchBarHidNavBar:1;
        unsigned int useSystemPopoverBarAppearance:1;
        unsigned int isCustomTransition:1;
        unsigned int isBuiltinTransition:1;
        unsigned int resetDidHideOnCancel:1;
        unsigned int delegateWillShowViewController:1;
        unsigned int delegateDidShowViewController:1;
        unsigned int delegateTransitionController:1;
        unsigned int delegateTransitionControllerEx:1;
        unsigned int delegateInteractionController:1;
        unsigned int delegateInteractionControllerEx:1;
        unsigned int delegateShouldCrossFadeNavigationBar:1;
        unsigned int delegateShouldCrossFadeBottomBars:1;
        unsigned int delegateShouldUseBuiltinInteractionController:1;
        unsigned int delegateSupportedInterfaceOrientations:1;
        unsigned int delegatePreferredInterfaceOrientationForPresentation:1;
        unsigned int delegateLayoutTransitioningClass:1;
        unsigned int navigationBarHidesCompletelyOffscreen:1;
        unsigned int clipUnderlapWhileTransitioning:1;
        unsigned int isCrossfadingOutTabBar:1;
        unsigned int isCrossfadingInTabBar:1;
        unsigned int skipContentInsetCalculation:1;
        unsigned int neverInWindow:1;
        unsigned int useStandardStatusBarHeight:1;
        unsigned int allowUserInteractionDuringTransition:1;
        unsigned int enableBackButtonDuringTransition:1;
        unsigned int allowsGroupBlending:1;
        unsigned int allowNestedNavigationControllers:1;
        unsigned int nestedNavigationBarWasHidden:1;
        unsigned int nestedToolbarWasHidden:1;
        unsigned int isNested:1;
        unsigned int searchHidNavigationBar:1;
        unsigned int suppressMixedOrientationPop:1;
    } _navigationControllerFlags;
    _Bool _interactiveTransition;
    _Bool _hidesBarsWhenKeyboardAppears;
    _Bool _hidesBarsOnSwipe;
    _Bool _hidesBarsWhenVerticallyCompact;
    _Bool _hidesBarsOnTap;
    _Bool __usingBuiltinAnimator;
    _Bool __barAnimationWasCancelled;
    Class _toolbarClass;
    double _customNavigationTransitionDuration;
    id <UIViewControllerAnimatedTransitioning> __transitionController;
    _UINavigationParallaxTransition *__cachedTransitionController;
    id <UIViewControllerInteractiveTransitioning> __interactionController;
    _UINavigationInteractiveTransition *__cachedInteractionController;
    NSUUID *__toolbarAnimationId;
    NSUUID *__navbarAnimationId;
    CDUnknownBlockType __updateNavigationBarHandler;
    id __keyboardAppearedNotificationToken;
    _UIBarPanGestureRecognizer *__barSwipeHideGesture;
    _UIAnimationCoordinator *__barInteractiveAnimationCoordinator;
    _UIBarTapGestureRecognizer *__barTapHideGesture;
    long long _builtinTransitionStyle;
    double _builtinTransitionGap;
    NSString *__backdropGroupName;
}

+ (_Bool)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (_Bool)_directlySetsContentOverlayInsetsForChildren;
+ (_Bool)doesOverrideSupportedInterfaceOrientations;
+ (_Bool)doesOverridePreferredInterfaceOrientationForPresentation;
@property(retain, nonatomic, getter=_backdropGroupName, setter=_setBackdropGroupName:) NSString *_backdropGroupName; // @synthesize _backdropGroupName=__backdropGroupName;
@property(nonatomic, getter=_builtinTransitionGap, setter=_setBuiltinTransitionGap:) double builtinTransitionGap; // @synthesize builtinTransitionGap=_builtinTransitionGap;
@property(nonatomic, getter=_builtinTransitionStyle, setter=_setBuiltinTransitionStyle:) long long builtinTransitionStyle; // @synthesize builtinTransitionStyle=_builtinTransitionStyle;
@property(retain, nonatomic, setter=_setBarTapHideGesture:) _UIBarTapGestureRecognizer *_barTapHideGesture; // @synthesize _barTapHideGesture=__barTapHideGesture;
@property(retain, nonatomic, setter=_setInteractiveAnimationCoordinator:) _UIAnimationCoordinator *_barInteractiveAnimationCoordinator; // @synthesize _barInteractiveAnimationCoordinator=__barInteractiveAnimationCoordinator;
@property(retain, nonatomic, setter=_setBarSwipeHideGesture:) _UIBarPanGestureRecognizer *_barSwipeHideGesture; // @synthesize _barSwipeHideGesture=__barSwipeHideGesture;
@property(retain, nonatomic, setter=_setKeyboardAppearedNotificationToken:) id _keyboardAppearedNotificationToken; // @synthesize _keyboardAppearedNotificationToken=__keyboardAppearedNotificationToken;
@property(copy, nonatomic, setter=_setUpdateNavigationBarHandler:) CDUnknownBlockType _updateNavigationBarHandler; // @synthesize _updateNavigationBarHandler=__updateNavigationBarHandler;
@property(nonatomic, setter=_setBarAnimationWasCancelled:) _Bool _barAnimationWasCancelled; // @synthesize _barAnimationWasCancelled=__barAnimationWasCancelled;
@property(retain, nonatomic, setter=_setNavbarAnimationId:) NSUUID *_navbarAnimationId; // @synthesize _navbarAnimationId=__navbarAnimationId;
@property(retain, nonatomic, setter=_setToolbarAnimationId:) NSUUID *_toolbarAnimationId; // @synthesize _toolbarAnimationId=__toolbarAnimationId;
@property(nonatomic, getter=_isUsingBuiltinAnimator, setter=_setUsingBuiltinAnimator:) _Bool _usingBuiltinAnimator; // @synthesize _usingBuiltinAnimator=__usingBuiltinAnimator;
@property(retain, nonatomic, setter=_setCachedInteractionController:) _UINavigationInteractiveTransition *_cachedInteractionController; // @synthesize _cachedInteractionController=__cachedInteractionController;
@property(retain, nonatomic, setter=_setInteractionController:) id <UIViewControllerInteractiveTransitioning> _interactionController; // @synthesize _interactionController=__interactionController;
@property(retain, nonatomic, setter=_setCachedTransitionController:) _UINavigationParallaxTransition *_cachedTransitionController; // @synthesize _cachedTransitionController=__cachedTransitionController;
@property(retain, nonatomic, setter=_setTransitionController:) id <UIViewControllerAnimatedTransitioning> _transitionController; // @synthesize _transitionController=__transitionController;
@property(nonatomic) _Bool hidesBarsOnTap; // @synthesize hidesBarsOnTap=_hidesBarsOnTap;
@property(nonatomic) _Bool hidesBarsWhenVerticallyCompact; // @synthesize hidesBarsWhenVerticallyCompact=_hidesBarsWhenVerticallyCompact;
@property(nonatomic) _Bool hidesBarsOnSwipe; // @synthesize hidesBarsOnSwipe=_hidesBarsOnSwipe;
@property(nonatomic) _Bool hidesBarsWhenKeyboardAppears; // @synthesize hidesBarsWhenKeyboardAppears=_hidesBarsWhenKeyboardAppears;
@property(retain, nonatomic) UIViewController *disappearingViewController; // @synthesize disappearingViewController=_disappearingViewController;
@property(nonatomic, getter=isInteractiveTransition) _Bool interactiveTransition; // @synthesize interactiveTransition=_interactiveTransition;
@property(nonatomic) id <UINavigationControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double customNavigationTransitionDuration; // @synthesize customNavigationTransitionDuration=_customNavigationTransitionDuration;
@property(nonatomic, setter=_setToolbarClass:) Class _toolbarClass; // @synthesize _toolbarClass;
- (id)moreListTableCell;
- (id)moreListSelectedImage;
- (id)moreListImage;
- (id)_moreListTitle;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_didBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (id)_viewForContentInPopover;
- (_Bool)isModalInPopover;
- (void)_prepareForPresentationInPopover:(id)arg1;
- (void)_prepareForDismissalInPopover:(id)arg1;
- (struct CGRect)_frameForContainerViewInSheetForBounds:(struct CGRect)arg1 displayingTopView:(_Bool)arg2 andBottomView:(_Bool)arg3;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)_setPreferredContentSizeFromChildContentContainer:(id)arg1;
- (struct CGSize)preferredContentSize;
- (struct CGSize)contentSizeForViewInPopover;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (void)setContentSizeForViewInPopover:(struct CGSize)arg1;
- (struct CGSize)_adjustedContentSizeForPopover:(struct CGSize)arg1;
- (void)_layoutTopViewControllerOutOfSheet;
- (void)_layoutTopViewControllerInSheetWithPopoverView:(id)arg1;
- (void)_layoutTopViewControllerInSheet;
- (void)updateTabBarItemForViewController:(id)arg1;
- (id)tabBarItem;
- (id)defaultPNGName;
- (void)_setBarsHidden:(_Bool)arg1 allowAnimation:(_Bool)arg2;
- (void)_setBarsHidden:(_Bool)arg1;
- (void)_gestureRecognizedToggleVisibility:(id)arg1;
- (_Bool)_useCrossFadeForGestureHiding;
- (_Bool)_shouldHideBarsForTraits:(id)arg1;
- (void)_configureBarTapGesture;
- (id)_existingToolbarWithItems;
@property(readonly, nonatomic) UITapGestureRecognizer *barHideOnTapGestureRecognizer;
- (void)_makeBarHideGestureIfNecessary;
- (void)_gestureRecognizedInteractiveHide:(id)arg1;
- (void)_configureBarSwipeGesture;
@property(readonly, retain, nonatomic) UIPanGestureRecognizer *barHideOnSwipeGestureRecognizer;
- (void)_makeBarSwipeGestureIfNecessary;
- (void)setCondensesBarsOnSwipe:(_Bool)arg1;
- (_Bool)condensesBarsOnSwipe;
- (void)_configureKeyboardBarHiding;
- (void)_hideForKeyboardAppearance;
- (void)_setKeyboardNotificationToken:(id)arg1;
- (void)_configureBarsAutomaticActions;
- (void)navigationBarDidChangeOpacity:(id)arg1;
- (void)navigationBarDidResizeForPrompt:(id)arg1;
- (void)navigationBar:(id)arg1 buttonClicked:(int)arg2;
- (_Bool)navigationBar:(id)arg1 shouldPopItem:(id)arg2;
- (id)_findViewControllerToPopToForNavigationItem:(id)arg1;
- (long long)_positionForBar:(id)arg1;
- (void)updateTitleForViewController:(id)arg1;
- (id)rotatingSnapshotViewForWindow:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1;
- (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (_Bool)_shouldUseOnePartRotation;
- (id)rotatingFooterView;
- (id)rotatingHeaderView;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)_shouldSynthesizeSupportedOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)_doesTopViewControllerSupportInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (_Bool)_transitionConflictsWithNavigationTransitions:(id)arg1;
- (void)_presentationTransitionUnwrapViewController:(id)arg1;
- (void)_presentationTransitionWrapViewController:(id)arg1 forTransitionContext:(id)arg2;
- (void)makeModalViewControllerTopViewController;
- (id)popToViewControllerWithSnapbackIdentifier:(id)arg1 animated:(_Bool)arg2;
- (id)popToViewController:(id)arg1 transition:(int)arg2;
- (id)popToViewController:(id)arg1 animated:(_Bool)arg2;
- (id)popToRootViewControllerWithTransition:(int)arg1;
- (id)popToRootViewControllerAnimated:(_Bool)arg1;
- (id)popViewControllerWithTransition:(int)arg1;
- (id)popViewControllerWithAnimationTransition:(long long)arg1 duration:(double)arg2 curve:(long long)arg3;
- (id)_popViewControllerWithTransition:(int)arg1 allowPoppingLast:(_Bool)arg2;
- (void)_popViewControllerAndUpdateInterfaceOrientationAnimated:(_Bool)arg1;
- (_Bool)isAlreadyPoppingNavItem;
- (double)_customNavigationTransitionDuration;
- (_Bool)_isInteractiveCustomNavigationTransition;
- (_Bool)_willPerformCustomNavigationTransitionForPush;
- (_Bool)_willPerformCustomNavigationTransitionForPop;
- (_Bool)_shouldPopFromLandscapeToPortraitOrientation;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_snapshotView;
- (void)_tabBarControllerDidFinishShowingTabBar:(id)arg1 isHidden:(_Bool)arg2;
- (void)_hideOrShowBottomBarIfNeededWithTransition:(int)arg1;
- (void)_updateBottomBarHiddenState;
- (void)_resetBottomBarHiddenState;
- (_Bool)_shouldBottomBarBeHidden;
- (id)popViewControllerAnimated:(_Bool)arg1;
- (id)_findViewControllerToPopTo;
- (id)_nthChildViewControllerFromTop:(unsigned long long)arg1;
- (void)pushViewController:(id)arg1 transition:(int)arg2;
- (void)pushViewController:(id)arg1 transition:(int)arg2 forceImmediate:(_Bool)arg3;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_prepareForNormalDisplayWithNavigationController:(id)arg1;
- (void)_prepareForNestedDisplayWithNavigationController:(id)arg1;
- (void)showViewController:(id)arg1 sender:(id)arg2;
- (id)separateSecondaryViewControllerForSplitViewController:(id)arg1;
- (void)collapseSecondaryViewController:(id)arg1 forSplitViewController:(id)arg2;
- (void)_executeNavigationHandler:(CDUnknownBlockType)arg1 deferred:(_Bool)arg2;
- (id)_customInteractionController:(id)arg1;
- (_Bool)_shouldUseBuiltinInteractionController;
- (void)__viewWillLayoutSubviews;
- (id)_customTransitionController:(_Bool)arg1;
- (_Bool)_isPerformingLayoutToLayoutTransition;
- (void)_propagateContentAdjustmentsForControllersWithSharedViews;
- (id)_builtinInteractionController;
- (id)_builtinTransitionController;
- (void)_clearLastOperation;
- (int)_deferredTransition;
- (void)_startDeferredTransitionIfNeeded;
- (void)_startDeferredTransitionIfNeeded:(id)arg1;
- (void)_startTransition:(int)arg1 fromViewController:(id)arg2 toViewController:(id)arg3;
- (void)_updateScrollViewFromViewController:(id)arg1 toViewController:(id)arg2;
- (long long)_navigationTransitionForUITransition:(int)arg1;
- (void)_layoutViewController:(id)arg1;
- (void)_didGainChildScrollView:(id)arg1;
- (void)_computeAndApplyScrollContentInsetDeltaForViewController:(id)arg1;
- (struct UIEdgeInsets)_expectedContentInsetDeltaForViewController:(id)arg1;
- (double)_scrollViewTopContentInsetForViewController:(id)arg1;
- (double)_topBarHeight;
- (double)_scrollViewBottomContentInsetForViewController:(id)arg1;
- (void)_layoutTopViewController;
- (struct CGRect)_frameForWrapperViewForViewController:(id)arg1;
- (struct CGRect)_frameForViewController:(id)arg1;
- (void)_updateChildContentMargins;
- (struct UIEdgeInsets)_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(_Bool *)arg2;
- (_Bool)_shouldStatusBarInsetViewController:(id)arg1;
- (_Bool)_shouldLayoutViewControllerForTransparentStatusBar:(id)arg1;
- (_Bool)_shouldChildViewControllerUseFullScreenLayout:(id)arg1;
- (void)_updatePaletteConstraints;
- (void)_updatePaletteBackground;
- (_Bool)_shouldToolBar:(id)arg1 insetViewController:(id)arg2;
- (_Bool)_shouldToolBar:(id)arg1 insetViewController:(id)arg2 orOverlayContent:(_Bool *)arg3;
- (_Bool)_shouldTabBar:(id)arg1 insetViewController:(id)arg2;
- (_Bool)_shouldTabBar:(id)arg1 insetViewController:(id)arg2 orOverlayContent:(_Bool *)arg3;
- (_Bool)_shouldNavigationBarInsetViewController:(id)arg1;
- (_Bool)_shouldNavigationBarInsetViewController:(id)arg1 orOverlayContent:(_Bool *)arg2;
- (_Bool)_isNavigationBarEffectivelyVisible;
- (_Bool)_shouldNavigationBarInsetViewControllerPreInnsbruck:(id)arg1;
- (_Bool)_isNavigationBarVisible;
- (_Bool)_hasTranslucentNavigationBarIncludingViewController:(id)arg1;
- (void)_updateLayoutForStatusBarAndInterfaceOrientation;
- (void)_updateBarsForCurrentInterfaceOrientation;
- (_Bool)wasLastOperationAnimated;
- (long long)lastOperation;
@property(nonatomic) _Bool needsDeferredTransition;
- (void)setNeedsDeferredTransition;
- (void)_setCustomTransition:(_Bool)arg1;
- (_Bool)isBuiltinTransition;
- (_Bool)isCustomTransition;
- (double)navigationTransitionView:(id)arg1 durationForTransition:(long long)arg2;
- (void)_navigationTransitionView:(id)arg1 didCancelTransition:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4 wrapperView:(id)arg5;
- (void)navigationTransitionView:(id)arg1 didEndTransition:(long long)arg2 fromView:(id)arg3 toView:(id)arg4;
- (void)navigationTransitionView:(id)arg1 didStartTransition:(long long)arg2;
- (id)_transitionAnimationContext;
- (_Bool)_isTransitioning;
- (void)didShowViewController:(id)arg1 animated:(_Bool)arg2;
- (void)willShowViewController:(id)arg1 animated:(_Bool)arg2;
- (id)_deepestUnambiguousResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (id)_screenEdgePanGestureRecognizer;
- (void)_performBackGesture:(id)arg1;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (id)segueForUnwindingToViewController:(id)arg1 fromViewController:(id)arg2 identifier:(id)arg3;
- (id)viewControllerForUnwindSegueAction:(SEL)arg1 fromViewController:(id)arg2 withSender:(id)arg3;
- (void)_updateToolbarItemsFromViewController:(id)arg1 animated:(_Bool)arg2;
- (_Bool)editing;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)viewDidUnload;
- (void)purgeMemoryForReason:(int)arg1;
- (_Bool)_viewControllerWasSelected;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)_viewControllerForDisappearCallback;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)isShown;
@property(readonly, nonatomic) UIGestureRecognizer *interactivePopGestureRecognizer;
- (void)loadView;
- (void)_navigationBarDidChangeStyle:(id)arg1;
- (id)childViewControllerForStatusBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (long long)preferredStatusBarStyle;
- (void)_hideShowToolbarDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_setToolbarHidden:(_Bool)arg1 edge:(unsigned long long)arg2 duration:(double)arg3;
- (void)_positionToolbarHidden:(_Bool)arg1 edge:(unsigned long long)arg2;
- (void)_positionToolbarHidden:(_Bool)arg1 edge:(unsigned long long)arg2 crossFade:(_Bool)arg3;
- (void)_positionToolbarHidden:(_Bool)arg1;
- (void)setToolbarHidden:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isToolbarHidden) _Bool toolbarHidden;
@property(readonly, nonatomic) UIToolbar *toolbar;
- (void)setToolbar:(id)arg1;
- (void)_configureToolbar;
- (void)_setVisualAltitudeForBar:(id)arg1;
- (id)_existingToolbar;
- (id)_existingNavigationBar;
- (void)_sendNavigationBarToBack;
@property(nonatomic) _Bool avoidMovingNavBarOffscreenBeforeUnhiding;
- (void)setSearchBarHidNavBar:(_Bool)arg1;
- (_Bool)searchBarHidNavBar;
@property(nonatomic) _Bool pretendNavBarHidden;
- (void)_hideShowNavigationBarDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_setNavigationBarHidden:(_Bool)arg1 edge:(unsigned long long)arg2 duration:(double)arg3;
- (void)_positionTopBar:(id)arg1 hidden:(_Bool)arg2 edge:(unsigned long long)arg3 center:(struct CGPoint)arg4 offset:(double)arg5;
- (_Bool)_searchHidNavigationBar;
- (void)_setSearchHidNavigationBar:(_Bool)arg1;
- (void)_setNavigationBarHidesCompletelyOffscreen:(_Bool)arg1;
- (struct CGPoint)_computeTopBarCenter:(id)arg1 hidden:(_Bool)arg2 edge:(unsigned long long)arg3 center:(struct CGPoint)arg4 offset:(double)arg5;
- (_Bool)_reallyWantsFullScreenLayout;
- (void)_positionNavigationBarHidden:(_Bool)arg1;
- (void)_setNavigationBarHidden:(_Bool)arg1 edgeIfNotNavigating:(unsigned long long)arg2 duration:(double)arg3;
- (void)_repositionPaletteWithNavigationBarHidden:(_Bool)arg1 duration:(double)arg2;
- (void)_positionPaletteHidden:(_Bool)arg1 edge:(unsigned long long)arg2;
- (void)_positionPaletteHidden:(_Bool)arg1 edge:(unsigned long long)arg2 initialOffset:(double)arg3;
- (void)_positionNavigationBarHidden:(_Bool)arg1 edge:(unsigned long long)arg2;
- (void)_positionNavigationBarHidden:(_Bool)arg1 edge:(unsigned long long)arg2 initialOffset:(double)arg3;
- (void)setNavigationBarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)_animationParametersForHidingNavigationBar:(_Bool)arg1 lastOperation:(long long)arg2 edge:(unsigned long long *)arg3 duration:(double *)arg4;
- (_Bool)_clipUnderlapWhileTransitioning;
- (void)_setClipUnderlapWhileTransitioning:(_Bool)arg1;
@property(nonatomic, getter=isNavigationBarHidden) _Bool navigationBarHidden;
- (void)setNavigationBar:(id)arg1;
- (id)_backdropBarGroupName;
- (id)_navigationBarHiddenByDefault:(_Bool)arg1;
@property(readonly, nonatomic) UINavigationBar *navigationBar;
- (id)_viewsWithDisabledInteractionGivenTransitionContext:(id)arg1;
- (void)setNavigationBarClass:(Class)arg1;
- (Class)navigationBarClass;
- (void)_startCustomTransition:(id)arg1;
- (id)_keyboardAnimationStyle;
- (int)_keyboardDirectionForTransition:(long long)arg1;
- (void)_startToolbarTransitionIfNecessary:(id)arg1 animated:(_Bool)arg2;
- (id)_transitionCoordinator;
- (_Bool)_shouldCrossFadeBottomBars;
- (_Bool)_shouldCrossFadeNavigationBar;
- (double)durationForTransition:(int)arg1;
- (void)_cancelInteractiveTransition:(double)arg1 transitionContext:(id)arg2;
- (void)_finishInteractiveTransition:(double)arg1 transitionContext:(id)arg2;
- (void)_updateInteractiveTransition:(double)arg1;
- (void)_updateInteractiveBarTransition:(id)arg1 withUUID:(id)arg2 percent:(double)arg3 isFinished:(_Bool)arg4 didComplete:(_Bool)arg5 completionSpeed:(double)arg6 completionCurve:(long long)arg7;
- (void)_startInteractiveNavbarTransition;
- (void)_startInteractiveToolbarTransition;
- (id)_startInteractiveBarTransition:(id)arg1;
- (_Bool)_navbarIsAppearingInteractively;
- (_Bool)_toolbarIsAnimatingInteractively;
- (void)_setContentInset:(struct UIEdgeInsets)arg1;
- (void)_setClipsToBounds:(_Bool)arg1;
@property(readonly, nonatomic) UINavigationTransitionView *navigationTransitionView;
- (void)_setViewControllers_7_0:(id)arg1 transition:(int)arg2 animated:(_Bool)arg3;
- (void)_setViewControllers_7_0:(id)arg1 transition:(int)arg2 animated:(_Bool)arg3 operation:(long long)arg4;
- (void)_setViewControllers:(id)arg1 transition:(int)arg2;
- (void)_setViewControllers:(id)arg1 transition:(int)arg2 animated:(_Bool)arg3;
- (void)_setViewControllers:(id)arg1 transition:(int)arg2 animated:(_Bool)arg3 operation:(long long)arg4;
- (id)_navigationBarForNestedNavigationController;
- (id)_outermostNavigationController;
- (void)_updateInteractivePopGestureEnabledState;
- (id)_lastNavigationItems;
- (id)_navigationItems;
- (id)navigationItem;
- (_Bool)_hasNestedNavigationController;
@property(nonatomic, getter=_isNestedNavigationController, setter=_setIsNestedNavigationController:) _Bool isNestedNavigationController;
@property(nonatomic, getter=_allowNestedNavigationControllers, setter=_setAllowNestedNavigationControllers:) _Bool allowNestedNavigationControllers;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (int)_transitionForOldViewControllers:(id)arg1 newViewControllers:(id)arg2;
@property(copy, nonatomic) NSArray *viewControllers;
- (_Bool)_isPresentationContextByDefault;
@property(readonly, nonatomic) UIViewController *previousViewController;
@property(readonly, retain, nonatomic) UIViewController *visibleViewController;
- (long long)modalTransitionStyle;
@property(readonly, nonatomic) UIViewController *bottomViewController;
@property(readonly, retain, nonatomic) UIViewController *topViewController;
- (_Bool)_usesTransitionController;
- (void)setEnableBackButtonDuringTransition:(_Bool)arg1;
- (_Bool)enableBackButtonDuringTransition;
- (void)setAllowUserInteractionDuringTransition:(_Bool)arg1;
- (_Bool)allowUserInteractionDuringTransition;
- (_Bool)_useStandardStatusBarHeight;
- (_Bool)_useCurrentStatusBarHeight;
- (void)_setUseStandardStatusBarHeight:(_Bool)arg1;
- (void)_setUseCurrentStatusBarHeight:(_Bool)arg1;
@property(nonatomic, getter=_didExplicitlyHideTabBar, setter=_setDidExplicitlyHideTabBar:) _Bool didHideTabBar;
@property(nonatomic, getter=_isCrossfadingInTabBar, setter=_setCrossfadingInTabBar:) _Bool crossfadingInTabBar;
@property(nonatomic, getter=_isCrossfadingOutTabBar, setter=_setCrossfadingOutTabBar:) _Bool crossfadingOutTabBar;
- (void)dealloc;
- (void)_releaseContainerViews;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_shouldPersistViewWhenCoding;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_confirmBarAccessMethods;
- (id)initWithNavigationBarClass:(Class)arg1 toolbarClass:(Class)arg2;
- (id)initWithRootViewController:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
@property _Bool isExpanded;
@property(retain) UIViewController *detailViewController;
- (void)_startPaletteTransitionIfNecessary:(id)arg1 animated:(_Bool)arg2;
- (void)detachPalette:(id)arg1;
- (void)detachPalette:(id)arg1 isInPaletteTransition:(_Bool)arg2;
- (id)existingPaletteForEdge:(unsigned long long)arg1;
- (void)_detachPalette:(id)arg1;
- (void)attachPalette:(id)arg1 isPinned:(_Bool)arg2;
- (id)paletteForEdge:(unsigned long long)arg1 size:(struct CGSize)arg2;
- (id)_pinningBarForPalette:(id)arg1;
- (struct CGRect)_boundsForPalette:(id)arg1 size:(struct CGSize)arg2;
- (struct CGRect)_frameForPalette:(id)arg1;
- (id)_topPalette;
- (void)_prepareCollectionViewControllers:(id)arg1 forSharingInRange:(id)arg2;
- (void)_prepareCollectionViewControllerForSharing:(id)arg1;
- (void)_prepareCollectionViewController:(id)arg1 forSharingWithCollectionViewController:(id)arg2;
- (id)_additionalViewControllersToCheckForUserActivity;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIImagePickerController : UINavigationController <NSCoding>
{
    long long _sourceType;
    id _image;
    struct CGRect _cropRect;
    NSArray *_mediaTypes;
    NSMutableDictionary *_properties;
    int _previousStatusBarStyle;
    _Bool _previousStatusBarHidden;
    struct {
        unsigned int visible:1;
        unsigned int isCleaningUp:1;
        unsigned int savingOptions:3;
        unsigned int didRevertStatusBar:1;
    } _imagePickerFlags;
}

+ (_Bool)isFlashAvailableForCameraDevice:(long long)arg1;
+ (id)availableCaptureModesForCameraDevice:(long long)arg1;
+ (_Bool)isCameraDeviceAvailable:(long long)arg1;
+ (id)availableMediaTypesForSourceType:(long long)arg1;
+ (_Bool)_reviewCapturedItems;
+ (_Bool)_isMediaTypeAvailable:(id)arg1 forSource:(long long)arg2;
+ (_Bool)isSourceTypeAvailable:(long long)arg1;
- (void)_imagePickerDidCompleteWithInfoArray:(id)arg1;
- (void)_imagePickerDidCompleteWithInfo:(id)arg1;
- (void)_imagePickerDidCancel;
- (void)_autoDismiss;
- (struct CGSize)_adjustedContentSizeForPopover:(struct CGSize)arg1;
- (void)_setupControllersForCurrentMediaTypes;
- (void)_setupControllersForCurrentSourceType;
- (id)_createInitialController;
- (void)_removeAllChildren;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)_didRevertStatusBar;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillUnload;
@property(nonatomic) long long cameraFlashMode;
@property(nonatomic) long long cameraCaptureMode;
- (_Bool)_isCameraCaptureModeValid:(long long)arg1;
@property(nonatomic) long long cameraDevice;
- (void)stopVideoCapture;
- (_Bool)startVideoCapture;
- (void)takePicture;
@property(nonatomic) struct CGAffineTransform cameraViewTransform;
@property(retain, nonatomic) UIView *cameraOverlayView;
@property(nonatomic) _Bool showsCameraControls;
- (id)_cameraViewController;
- (_Bool)_sourceTypeIsCamera;
- (unsigned long long)_imagePickerSavingOptions;
- (void)_setImagePickerSavingOptions:(unsigned long long)arg1;
- (id)_valueForProperty:(id)arg1;
- (void)_setValue:(id)arg1 forProperty:(id)arg2;
- (id)_properties;
- (void)_initializeProperties;
- (void)_setProperties:(id)arg1;
- (_Bool)_allowsImageEditing;
- (void)_setAllowsImageEditing:(_Bool)arg1;
@property(nonatomic) long long videoQuality;
@property(nonatomic) double videoMaximumDuration;
@property(nonatomic) _Bool allowsEditing;
@property(nonatomic) _Bool allowsImageEditing;
- (void)_setAllowsMultipleSelection:(_Bool)arg1;
- (_Bool)_allowsMultipleSelection;
@property(copy, nonatomic) NSArray *mediaTypes;
@property(nonatomic) long long sourceType;
- (void)_updateCameraCaptureMode;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedChildViewControllers:(id)arg1;
- (void)dealloc;
- (id)_initWithSourceImageData:(id)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(nonatomic) id <UINavigationControllerDelegate><UIImagePickerControllerDelegate> delegate; // @dynamic delegate;

@end

__attribute__((visibility("hidden")))
@interface UIInlineCandidateTextView : UIView
{
    int m_type;
    int m_edgeType;
    _Bool m_animating;
    NSMutableArray *_candidateCellArray;
    NSArray *_candidates;
    id _target;
    SEL _action;
    unsigned long long _selectedItem;
    _UIInlineCandidateCell *_currentlyPushedItem;
    _Bool _showingArrow;
    _Bool _arrowHighlighted;
    _Bool _phraseEditable;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (struct CGRect)_calculateRectForExpandedHitRegion;
- (void)redrawArrow;
- (id)findCell:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (unsigned long long)selectedItem;
- (void)setSelectedItem:(unsigned long long)arg1;
- (void)showHighlightedArrow;
- (_Bool)_arrowHighlighted;
- (unsigned long long)numberOfShownItems;
- (double)_layoutCandidates:(id)arg1 maxCount:(int)arg2 height:(double)arg3 maxScreenWidth:(double)arg4 hasExtensionCandidates:(_Bool)arg5;
- (void)setTarget:(id)arg1 action:(SEL)arg2;
- (void)_cellSelected:(id)arg1;
- (void)setAnimating:(_Bool)arg1;
- (void)setEdgeType:(int)arg1;
- (int)textEffectsVisibilityLevel;
- (int)edgeType;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 candidates:(id)arg2 type:(int)arg3 maxScreenWidth:(double)arg4 hasExtensionCandidates:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface UIInputSetHostView : UIView
{
}

+ (_Bool)_notifyOnExplicitLayout;
+ (_Bool)_retroactivelyRequiresConstraintBasedLayout;
- (void)layoutIfNeeded;
- (int)_clipCornersOfView:(id)arg1;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIInputSetContainerView : UIInputSetHostView
{
    UIKBRenderConfig *_renderConfig;
}

+ (_Bool)_notifyOnExplicitLayout;
- (void)_setAccessoryViewFrame:(struct CGRect)arg1;
- (struct CGRect)_accessoryViewFrame;
- (id)_inputWindowController;
- (int)textEffectsVisibilityLevel;
- (void)_setRenderConfig:(id)arg1;
- (id)_inheritedRenderConfig;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcher : NSObject
{
    UIDelayedAction *m_switcherDelay;
    UIDelayedAction *m_hideSwitcherDelay;
    int m_state;
    UIInputSwitcherView *m_switcherView;
    NSString *_newMode;
}

+ (id)activeInstance;
+ (id)sharedInstance;
- (_Bool)handleModifiersChangedEvent:(id)arg1;
- (_Bool)switchMode:(id)arg1 withDelay:(_Bool)arg2;
- (_Bool)handleSwitchCommand:(_Bool)arg1;
- (_Bool)isVisible;
- (void)clearSwitcherTimer;
- (void)cancelSwitcherTimer;
- (void)touchSwitcherTimer;
- (void)showSwitcher;
- (void)clearHideSwitcherTimer;
- (void)touchHideSwitcherTimer;
- (void)hideSwitcher;
- (void)handleRotate:(id)arg1;
- (void)setNewMode:(id)arg1;
- (id)newMode;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcherSelectionExtraView : UIView
{
    double m_pointerOffset;
    int _roundedCorners;
    UIKeyboardMenuView *_menu;
    struct CGRect _keyRect;
}

@property(nonatomic) UIKeyboardMenuView *menu; // @synthesize menu=_menu;
@property(nonatomic) int roundedCorners; // @synthesize roundedCorners=_roundedCorners;
@property(nonatomic) struct CGRect keyRect; // @synthesize keyRect=_keyRect;
@property(nonatomic) double pointerOffset; // @synthesize pointerOffset=m_pointerOffset;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcherShadowView : UIView
{
    int m_mode;
    double m_pointerOffset;
    NSArray *m_gradientColors;
    UIKeyboardMenuView *_menu;
    _UIBackdropView *_blurView;
    struct CGRect _keyRect;
}

@property(retain, nonatomic) _UIBackdropView *blurView; // @synthesize blurView=_blurView;
@property(nonatomic) UIKeyboardMenuView *menu; // @synthesize menu=_menu;
@property(nonatomic) struct CGRect keyRect; // @synthesize keyRect=_keyRect;
@property(retain, nonatomic) NSArray *gradientColors; // @synthesize gradientColors=m_gradientColors;
@property(nonatomic) double pointerOffset; // @synthesize pointerOffset=m_pointerOffset;
@property(nonatomic) int mode; // @synthesize mode=m_mode;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcherTableCell : UITableViewCell
{
}

- (void)layoutSubviews;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcherTableCellBackgroundView : UIView
{
    UITableView *_tableView;
    UITableViewCell *_cell;
    UIKeyboardMenuView *_menu;
}

@property(nonatomic) UIKeyboardMenuView *menu; // @synthesize menu=_menu;
@property(nonatomic) UITableViewCell *cell; // @synthesize cell=_cell;
@property(nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithTableView:(id)arg1 cell:(id)arg2;

@end

@interface UITableView : UIScrollView <UIGestureRecognizerDelegatePrivate, UIScrollViewDelegate, NSCoding>
{
    id <UITableViewDataSource> _dataSource;
    UITableViewRowData *_rowData;
    double _rowHeight;
    double _sectionHeaderHeight;
    double _sectionFooterHeight;
    double _estimatedRowHeight;
    double _estimatedSectionHeaderHeight;
    double _estimatedSectionFooterHeight;
    struct CGRect _visibleBounds;
    struct _NSRange _visibleRows;
    NSMutableArray *_visibleCells;
    NSIndexPath *_firstResponderIndexPath;
    UIView *_firstResponderView;
    int _firstResponderViewType;
    NSMutableDictionary *_reusableTableCells;
    NSMutableDictionary *_nibMap;
    NSMutableDictionary *_headerFooterNibMap;
    NSMutableDictionary *_nibExternalObjectsTables;
    UITableViewCell *_topSeparatorCell;
    UIView *_topSeparator;
    NSMutableArray *_extraSeparators;
    struct __CFDictionary *_visibleHeaderViews;
    struct __CFDictionary *_visibleFooterViews;
    NSMutableDictionary *_reusableHeaderFooterViews;
    NSMutableArray *_highlightedIndexPaths;
    NSMutableArray *_selectedIndexPaths;
    long long _swipeToDeleteSection;
    long long _swipeToDeleteRow;
    NSIndexPath *_pendingSelectionIndexPath;
    NSMutableArray *_pendingDeselectionIndexPaths;
    UIView *_newContentView;
    _UITableViewDeleteAnimationSupport *_deleteAnimationSupport;
    _UITableViewReorderingSupport *_reorderingSupport;
    UIView *_backgroundView;
    UIView *_clearBlendingView;
    UITableViewWrapperView *_wrapperView;
    UITableViewIndex *_index;
    UIView *_tableHeaderBackgroundView;
    UIView *_tableHeaderView;
    UIView *_tableFooterView;
    UITableViewCountView *_countLabel;
    NSArray *_sectionIndexTitlesForTableView;
    UITableViewIndexOverlayIndicatorView *_indexOverlayIndicatorView;
    NSTimer *_indexOverlayTimer;
    NSTimer *_indexOverlayIndicatorEventIgnoreTimer;
    long long _currentIndexTitleIndex;
    UITableViewIndexOverlaySelectionView *_indexOverlaySelectionView;
    long long _tableReloadingSuspendedCount;
    long long _sectionIndexMinimumDisplayRowCount;
    long long _updateAnimationCount;
    NSMutableArray *_insertItems;
    NSMutableArray *_deleteItems;
    NSMutableArray *_reloadItems;
    NSMutableArray *_moveItems;
    UIColor *_separatorColor;
    UIColor *_separatorTopShadowColor;
    UIColor *_separatorBottomShadowColor;
    UIVisualEffect *_separatorEffect;
    UIColor *_checkmarkColor;
    UIColor *_sectionBorderColor;
    UIColor *_indexColor;
    UIColor *_indexBackgroundColor;
    UIColor *_indexTrackingBackgroundColor;
    NSArray *_defaultSectionIndexTitles;
    UISwipeGestureRecognizer *_swipeGestureRecognizer;
    UIGobblerGestureRecognizer *_swipeToDeleteGobblerGestureRecognizer;
    UITableViewCell *_swipeToDeleteCell;
    long long _updateCount;
    NSIndexPath *_displayingCellContentStringIndexPath;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    NSTimer *_longPressAutoscrollTimer;
    int _longPressAutoscrollDirection;
    struct UIEdgeInsets _sectionContentInset;
    double _sectionBorderWidth;
    UITouch *_currentTouch;
    UIRefreshControl *_refreshControl;
    NSMutableDictionary *_cellClassDict;
    NSMutableDictionary *_headerFooterClassDict;
    double _topPadding;
    double _bottomPadding;
    struct UIEdgeInsets _separatorInset;
    id _updateCompletionHandler;
    UIImage *_multiSelectCheckmarkImage;
    UIImage *_multiSelectNotSelectedImage;
    id _deferredEditingHandler;
    NSMutableArray *_hiddenSeparatorIndexPaths;
    NSMutableDictionary *_tentativeCells;
    struct __CFDictionary *_tentativeHeaderViews;
    struct __CFDictionary *_tentativeFooterViews;
    NSMutableSet *_clientGesturesRequiringTableGesturesToFail;
    _UITableViewUpdateSupport *_currentUpdate;
    struct CGPoint _postLayoutContentOffset;
    struct _NSRange _preReloadVisibleRowRange;
    struct {
        unsigned int dataSourceNumberOfRowsInSection:1;
        unsigned int dataSourceCellForRow:1;
        unsigned int dataSourceNumberOfSectionsInTableView:1;
        unsigned int dataSourceTitleForHeaderInSection:1;
        unsigned int dataSourceTitleForFooterInSection:1;
        unsigned int dataSourceDetailTextForHeaderInSection:1;
        unsigned int dataSourceCommitEditingStyle:1;
        unsigned int dataSourceSectionIndexTitlesForTableView:1;
        unsigned int dataSourceSectionForSectionIndexTitle:1;
        unsigned int dataSourceCanEditRow:1;
        unsigned int dataSourceCanMoveRow:1;
        unsigned int dataSourceCanUpdateRow:1;
        unsigned int dataSourceShouldShowMenu:1;
        unsigned int dataSourceCanPerformAction:1;
        unsigned int dataSourcePerformAction:1;
        unsigned int dataSourceIndexPathForSectionIndexTitle:1;
        unsigned int delegateEditingStyleForRowAtIndexPath:1;
        unsigned int delegateTitleForDeleteConfirmationButtonForRowAtIndexPath:1;
        unsigned int delegateEditActionsForRowAtIndexPath:1;
        unsigned int delegateShouldIndentWhileEditing:1;
        unsigned int dataSourceMoveRow:1;
        unsigned int delegateCellForRow:1;
        unsigned int delegateWillDisplayCell:1;
        unsigned int delegateDidEndDisplayingCell:1;
        unsigned int delegateDidEndDisplayingSectionHeader:1;
        unsigned int delegateDidEndDisplayingSectionFooter:1;
        unsigned int delegateHeightForRow:1;
        unsigned int delegateHeightForSectionHeader:1;
        unsigned int delegateTitleWidthForSectionHeader:1;
        unsigned int delegateHeightForSectionFooter:1;
        unsigned int delegateTitleWidthForSectionFooter:1;
        unsigned int delegateEstimatedHeightForRow:1;
        unsigned int delegateEstimatedHeightForSectionHeader:1;
        unsigned int delegateEstimatedHeightForSectionFooter:1;
        unsigned int delegateViewForHeaderInSection:1;
        unsigned int delegateViewForFooterInSection:1;
        unsigned int delegateDisplayedItemCountForRowCount:1;
        unsigned int delegateDisplayStringForRowCount:1;
        unsigned int delegateAccessoryTypeForRow:1;
        unsigned int delegateAccessoryButtonTappedForRow:1;
        unsigned int delegateWillSelectRow:1;
        unsigned int delegateWillDeselectRow:1;
        unsigned int delegateDidSelectRow:1;
        unsigned int delegateDidDeselectRow:1;
        unsigned int delegateWillBeginEditing:1;
        unsigned int delegateDidEndEditing:1;
        unsigned int delegateWillMoveToRow:1;
        unsigned int delegateIndentationLevelForRow:1;
        unsigned int delegateWantsHeaderForSection:1;
        unsigned int delegateHeightForRowsInSection:1;
        unsigned int delegateMargin:1;
        unsigned int delegateHeaderTitleAlignment:1;
        unsigned int delegateFooterTitleAlignment:1;
        unsigned int delegateFrameForSectionIndexGivenProposedFrame:1;
        unsigned int delegateDidFinishReload:1;
        unsigned int delegateHeightForHeader:1;
        unsigned int delegateHeightForFooter:1;
        unsigned int delegateViewForHeader:1;
        unsigned int delegateViewForFooter:1;
        unsigned int delegateCalloutTargetRectForCell:1;
        unsigned int delegateShouldShowMenu:1;
        unsigned int delegateCanPerformAction:1;
        unsigned int delegatePerformAction:1;
        unsigned int delegateWillBeginReordering:1;
        unsigned int delegateDidEndReordering:1;
        unsigned int delegateDidCancelReordering:1;
        unsigned int delegateWillDisplayHeaderViewForSection:1;
        unsigned int delegateWillDisplayFooterViewForSection:1;
        unsigned int delegateShouldHighlightRow:1;
        unsigned int delegateDidHighlightRow:1;
        unsigned int delegateDidUnhighlightRow:1;
        unsigned int delegateTitleForSwipeAccessory:1;
        unsigned int delegateBackgroundColorForDeleteConfirmationButton:1;
        unsigned int delegateBackgroundColorForSwipeAccessory:1;
        unsigned int delegateDeleteConfirmationButton:1;
        unsigned int delegateSwipeAccessory:1;
        unsigned int delegateSwipeAccessoryPushed:1;
        unsigned int delegateShouldDrawTopSeparatorForSection:1;
        unsigned int delegateWillBeginSwiping:1;
        unsigned int delegateDidEndSwiping:1;
        unsigned int style:1;
        unsigned int separatorStyle:3;
        unsigned int wasEditing:1;
        unsigned int isEditing:1;
        unsigned int isEditingAllRows:1;
        unsigned int scrollsToSelection:1;
        unsigned int reloadSkippedDuringSuspension:1;
        unsigned int updating:1;
        unsigned int displaySkippedDuringSuspension:1;
        unsigned int needsReload:1;
        unsigned int updatingVisibleCellsManually:1;
        unsigned int scheduledUpdateVisibleCells:1;
        unsigned int scheduledUpdateVisibleCellsFrames:1;
        unsigned int warnForForcedCellUpdateDisabled:1;
        unsigned int displayTopSeparator:1;
        unsigned int countStringInsignificantRowCount:4;
        unsigned int needToAdjustExtraSeparators:1;
        unsigned int overlapsSectionHeaderViews:1;
        unsigned int ignoreTouchSelect:1;
        unsigned int lastHighlightedRowActive:1;
        unsigned int reloading:1;
        unsigned int allowsSelection:1;
        unsigned int allowsSelectionDuringEditing:1;
        unsigned int allowsMultipleSelection:1;
        unsigned int allowsMultipleSelectionDuringEditing:1;
        unsigned int showsSelectionImmediatelyOnTouchBegin:1;
        unsigned int indexHidden:1;
        unsigned int indexHiddenForSearch:1;
        unsigned int defaultShowsHorizontalScrollIndicator:1;
        unsigned int defaultShowsVerticalScrollIndicator:1;
        unsigned int sectionIndexTitlesLoaded:1;
        unsigned int tableHeaderViewShouldAutoHide:1;
        unsigned int tableHeaderViewIsHidden:1;
        unsigned int tableHeaderViewWasHidden:1;
        unsigned int tableHeaderViewShouldPin:1;
        unsigned int hideScrollIndicators:1;
        unsigned int sendReloadFinished:1;
        unsigned int keepFirstResponderWhenInteractionDisabled:1;
        unsigned int keepFirstResponderVisibleOnBoundsChange:1;
        unsigned int dontDrawTopShadowInGroupedSections:1;
        unsigned int forceStaticHeadersAndFooters:1;
        unsigned int displaysCellContentStringsOnTapAndHold:1;
        unsigned int displayingCellContentStringCallout:1;
        unsigned int longPressAutoscrollingActive:1;
        unsigned int adjustsRowHeightsForSectionLocation:1;
        unsigned int inInit:1;
        unsigned int inSetBackgroundColor:1;
        unsigned int usingCustomBackgroundView:1;
        unsigned int rowDataIndexPathsAreValidForCurrentCells:1;
        unsigned int committingDelete:1;
        unsigned int didReloadWhileCommittingDelete:1;
        unsigned int editingForSwipeDelete:1;
        unsigned int wasEditingForSwipeToDeleteBeforeSuspendedReload:1;
        unsigned int ignorePinnedTableHeaderUpdates:1;
        unsigned int navigationGestureWasEnabledBeforeSwipeToDelete:1;
        unsigned int didDisableNavigationGesture:1;
        unsigned int separatorsDrawAsOverlay:1;
        unsigned int swipeToDeleteRowIsBeingDeleted:1;
        unsigned int drawsSeparatorAtTopOfSections:1;
        unsigned int separatorBackdropOverlayBlendMode:3;
        unsigned int separatorsDrawInVibrantLightMode:1;
        unsigned int wrapCells:1;
        unsigned int showingIndexIndicatorOverlay:1;
        unsigned int showingIndexSelectionOverlay:1;
        unsigned int loadingOffscreenViews:1;
        unsigned int externalScreenHasTouch:1;
        unsigned int ignoringWheelEventsOnIndexOverlayIndicator:1;
        unsigned int deleteCancelationAnimationInProgress:1;
        unsigned int manuallyManagesSwipeUI:1;
        unsigned int allowsReorderingWhenNotEditing:1;
        unsigned int needsDeleteConfirmationCleanup:1;
        unsigned int resetContentOffsetAfterLayout:1;
        unsigned int cellsSelfSize:1;
        unsigned int usingCustomLayoutMargins:1;
        unsigned int settingDefaultLayoutMargins:1;
        unsigned int deallocating:1;
    } _tableFlags;
}

+ (id)_alternateUISwitchableSelectorPairs;
+ (void)initialize;
+ (void)_initializeForIdiom:(long long)arg1;
+ (id)_alternateExternalSeparatorColor;
+ (id)_externalTableSeparatorColor;
+ (id)_alternateExternalTableBackgroundColor;
+ (id)_externalTableBackgroundColor;
@property(nonatomic) long long sectionIndexMinimumDisplayRowCount; // @synthesize sectionIndexMinimumDisplayRowCount=_sectionIndexMinimumDisplayRowCount;
@property(nonatomic) double estimatedSectionFooterHeight; // @synthesize estimatedSectionFooterHeight=_estimatedSectionFooterHeight;
@property(nonatomic) double estimatedSectionHeaderHeight; // @synthesize estimatedSectionHeaderHeight=_estimatedSectionHeaderHeight;
@property(nonatomic) double estimatedRowHeight; // @synthesize estimatedRowHeight=_estimatedRowHeight;
@property(retain, nonatomic) UITouch *currentTouch; // @synthesize currentTouch=_currentTouch;
- (_Bool)_cellsSelfSize;
- (void)_setCellsSelfSize:(_Bool)arg1;
- (void)_setAllowsReorderingWhenNotEditing:(_Bool)arg1;
- (_Bool)_allowsReorderingWhenNotEditing;
- (void)_setHeight:(double)arg1 forRowAtIndexPath:(id)arg2;
@property(readonly, nonatomic, getter=_defaultMarginWidth) double defaultMarginWidth;
@property(nonatomic, getter=_manuallyManagesSwipeUI, setter=_setManuallyManagesSwipeUI:) _Bool manuallyManagesSwipeUI;
- (double)_defaultSectionFooterHeight;
- (double)_defaultSectionHeaderHeight;
- (void)_systemTextSizeChanged;
- (double)_heightForFooterView:(id)arg1 inSection:(long long)arg2;
- (double)_heightForFooterInSection:(long long)arg1;
- (double)_classicHeightForFooterInSection:(long long)arg1;
- (double)_heightForHeaderView:(id)arg1 inSection:(long long)arg2;
- (double)_heightForHeaderInSection:(long long)arg1;
- (double)_classicHeightForHeaderInSection:(long long)arg1;
- (double)_heightForCell:(id)arg1 atIndexPath:(id)arg2;
- (double)_heightForRowAtIndexPath:(id)arg1;
- (double)_classicHeightForRowAtIndexPath:(id)arg1;
- (void)_applyContentSizeDeltaForEstimatedHeightAdjustments:(double)arg1;
- (_Bool)_isEditingForSwipeDeletion;
- (double)_sectionBorderWidth;
- (void)_setSectionBorderWidth:(double)arg1;
@property(nonatomic) struct UIEdgeInsets separatorInset;
@property(copy, nonatomic) UIVisualEffect *separatorEffect;
- (long long)_separatorBackdropOverlayBlendMode;
- (void)_setSeparatorBackdropOverlayBlendMode:(long long)arg1;
- (_Bool)_separatorsDrawAsOverlay;
- (void)_setSeparatorsDrawAsOverlay:(_Bool)arg1;
- (void)_setSeparatorsDrawInVibrantLightModeUIAppearance:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (_Bool)_pathIsHidden:(id)arg1;
- (_Bool)_indexPathIsValid:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (_Bool)ignorePinnedTableHeaderUpdates;
- (void)_setIgnorePinnedTableHeaderUpdates:(_Bool)arg1;
- (void)_autoscrollForLongPress:(id)arg1;
- (struct CGRect)_visibleBoundsIncludingRowsOnly;
- (void)_stopLongPressAutoscrollTimer;
- (void)longPress:(id)arg1;
- (_Bool)longPressGestureWithinAutoscrollZone;
- (_Bool)_displayingCellContentStringCallout;
- (void)_performCellContentStringCalloutCleanupHidingMenu:(_Bool)arg1;
- (void)_endDisplayingCellContentStringCallout;
- (void)_updateCellContentStringCallout:(id)arg1;
- (void)_beginDisplayingCellContentStringCallout;
- (void)_adjustForAutomaticKeyboardInfo:(id)arg1 animated:(_Bool)arg2 lastAdjustment:(double *)arg3;
- (_Bool)_hasHeaderFooterBelowRowAtIndexPath:(id)arg1;
- (void)_setSwipeToDeleteCell:(id)arg1;
- (void)_setSwipeToDeleteCell:(id)arg1 installGobbler:(_Bool)arg2;
- (id)_swipeToDeleteCell;
- (void)_actionButton:(id)arg1 pushedInCell:(id)arg2;
- (void)_swipeAccessoryButtonPushedInCell:(id)arg1;
- (id)_backgroundColorForSwipeAccessoryButton;
- (id)_backgroundColorForDeleteConfirmationButton;
- (id)_titleForSwipeAccessoryButton;
- (id)_titleForDeleteConfirmationButton;
- (id)_multiSelectNotSelectedImage;
- (id)_multiSelectCheckmarkImage;
- (_Bool)_estimatesSectionFooterHeights;
- (_Bool)_estimatesSectionHeaderHeights;
- (_Bool)_estimatesRowHeights;
- (void)_setKeepsFirstResponderVisibleOnBoundsChange:(_Bool)arg1;
- (_Bool)_keepsFirstResponderVisibleOnBoundsChange;
- (struct CGRect)_calloutTargetRectForCell:(id)arg1;
- (struct UIEdgeInsets)_backgroundContentInset;
- (double)_backgroundInset;
- (_Bool)_usesNewHeaderFooterBehavior;
- (double)_heightForSeparator;
- (void)_performAction:(SEL)arg1 forCell:(id)arg2 sender:(id)arg3;
- (_Bool)_canPerformAction:(SEL)arg1 forCell:(id)arg2 sender:(id)arg3;
- (_Bool)_shouldShowMenuForCell:(id)arg1;
- (double)_spacingForExtraSeparators;
- (id)_tableFooterView:(_Bool)arg1;
- (id)_tableHeaderView:(_Bool)arg1;
- (_Bool)_isTableHeaderViewHidden;
- (_Bool)_wantsSwipes;
- (id)_indexPathForSwipeRowAtPoint:(struct CGPoint)arg1;
- (id)_rowData;
- (void)_setIsAncestorOfFirstResponder:(_Bool)arg1;
- (_Bool)_shouldResignFirstResponderWithInteractionDisabled;
- (struct CGRect)_indexRect;
- (_Bool)_isShowingIndex;
- (void)animateDeletionOfRowWithCell:(id)arg1;
- (void)_finishedRemovingRemovalButtonForTableCell:(id)arg1;
- (void)_didInsertRowForTableCell:(id)arg1;
- (void)_removeWasCanceledForCell:(id)arg1;
- (void)_animateSwipeCancelation;
- (void)_endSwipeToDeleteRowDidDelete:(_Bool)arg1;
- (void)_reorderPositionChangedForCell:(id)arg1 withScrollFactorPercentage:(float)arg2;
- (void)_reorderPositionChangedForCell:(id)arg1;
- (double)_shadowHeightOffset;
- (_Bool)_isLastRowForIndexPath:(id)arg1;
- (id)titleForDeleteConfirmationButton:(id)arg1;
- (_Bool)_isCellReorderable:(id)arg1;
- (void)_drawExtraSeparator:(struct CGRect)arg1;
- (void)_tableFooterHeightDidChangeToHeight:(double)arg1;
- (void)_tableHeaderHeightDidChangeToHeight:(double)arg1;
- (_Bool)allowsFooterViewsToFloat;
- (_Bool)allowsHeaderViewsToFloat;
- (id)_visibleFooterViewForSection:(long long)arg1 includeTentativeViews:(_Bool)arg2;
- (id)_visibleFooterViewForSection:(long long)arg1;
- (id)_visibleHeaderViewForSection:(long long)arg1 includeTentativeViews:(_Bool)arg2;
- (id)_visibleHeaderViewForSection:(long long)arg1;
- (id)_createPreparedCellForRowAtIndexPath:(id)arg1 willDisplay:(_Bool)arg2;
- (id)_createPreparedCellForGlobalRow:(long long)arg1 willDisplay:(_Bool)arg2;
- (id)_createPreparedCellForGlobalRow:(long long)arg1 withIndexPath:(id)arg2 willDisplay:(_Bool)arg3;
- (void)_setupCell:(id)arg1 forEditing:(_Bool)arg2 atIndexPath:(id)arg3 animated:(_Bool)arg4 updateSeparators:(_Bool)arg5;
- (void)_setupCell:(id)arg1 forEditing:(_Bool)arg2 atIndexPath:(id)arg3 canEdit:(_Bool)arg4 editingStyle:(long long)arg5 shouldIndentWhileEditing:(_Bool)arg6 showsReorderControl:(_Bool)arg7 accessoryType:(long long)arg8 animated:(_Bool)arg9 updateSeparators:(_Bool)arg10;
- (id)_sectionFooterViewWithFrame:(struct CGRect)arg1 forSection:(long long)arg2 floating:(_Bool)arg3 reuseViewIfPossible:(_Bool)arg4 willDisplay:(_Bool)arg5;
- (id)_sectionHeaderViewWithFrame:(struct CGRect)arg1 forSection:(long long)arg2 floating:(_Bool)arg3 reuseViewIfPossible:(_Bool)arg4 willDisplay:(_Bool)arg5;
- (id)_sectionHeaderView:(_Bool)arg1 withFrame:(struct CGRect)arg2 forSection:(long long)arg3 floating:(_Bool)arg4 reuseViewIfPossible:(_Bool)arg5 willDisplay:(_Bool)arg6;
- (id)_popReusableHeaderView:(_Bool)arg1;
- (id)_reorderingIndexPath;
- (long long)_globalReorderingRow;
- (id)_reorderingCell;
- (_Bool)_isEditingWithNoSwipedCell;
- (_Bool)_isEditingRowAtIndexPath:(id)arg1;
- (_Bool)_wasEditingRowAtIndexPath:(id)arg1;
- (_Bool)_wasEditing;
- (id)_visibleCellForGlobalRow:(long long)arg1;
- (struct _NSRange)_visibleGlobalRows;
- (void)_ensureViewsAreLoadedInRect:(struct CGRect)arg1;
- (struct CGRect)_visibleBounds;
- (_Bool)_shouldUnionVisibleBounds;
- (id)_cellAfterIndexPath:(id)arg1;
- (void)_setTopSeparatorCell:(id)arg1;
- (id)_targetIndexPathAtPoint:(struct CGPoint)arg1;
- (void)_autoscrollForReordering:(id)arg1;
- (void)_endReorderAnimations;
- (void)_beginReorderAnimationForCell:(id)arg1;
- (void)_finishedAnimatingCellReorder:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_endCellReorderAnimation:(_Bool)arg1;
- (void)_cancelCellReorder:(_Bool)arg1;
- (void)_endReorderingForCell:(id)arg1 wasCancelled:(_Bool)arg2 animated:(_Bool)arg3;
- (void)adjustIndexPaths:(id)arg1 forMoveOfIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (void)_tableCellAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)_beginReorderingForCell:(id)arg1;
- (void)_stopAutoscrollTimer;
- (void)_deselectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2 notifyDelegate:(_Bool)arg3;
- (void)_deselectAllNonMultiSelectRowsAnimated:(_Bool)arg1 notifyDelegate:(_Bool)arg2;
- (void)_deselectAllNonMultiSelectRowsAnimated:(_Bool)arg1;
- (_Bool)_delegateImplementsViewForFooterInSection;
- (_Bool)_delegateImplementsViewForHeaderInSection;
- (_Bool)_dataSourceImplementsDetailTextForHeaderInSection;
- (_Bool)_dataSourceImplementsTitleForFooterInSection;
- (_Bool)_dataSourceImplementsTitleForHeaderInSection;
- (_Bool)_delegateImplementsAlignmentForFooterInSection;
- (_Bool)_delegateImplementsTitleWidthForFooterInSection;
- (_Bool)_delegateImplementsHeightForFooterInSection;
- (_Bool)_delegateImplementsAlignmentForHeaderInSection;
- (_Bool)_delegateImplementsTitleWidthForHeaderInSection;
- (_Bool)_delegateImplementsHeightForHeaderInSection;
- (_Bool)_delegateWantsCustomFooterForSection:(long long)arg1;
- (_Bool)_delegateWantsFooterTitleForSection:(long long)arg1;
- (_Bool)_delegateWantsFooterForSection:(long long)arg1;
- (_Bool)_delegateImplementsMarginForTableView;
- (_Bool)_delegateImplementsHeightForRowsInSection;
- (_Bool)_delegateWantsHeaderTitleForSection:(long long)arg1;
- (_Bool)_delegateWantsHeaderForSection:(long long)arg1;
- (id)_delegateViewForFooterInSection:(long long)arg1;
- (id)_delegateViewForHeaderInSection:(long long)arg1;
- (_Bool)_dataSourceImplementsCanUpdateRowAtIndexPath;
- (_Bool)_delegateImplementsHeightForRowAtIndexPath;
- (_Bool)_dataSourceImplementsNumberOfSectionsInTableView;
- (struct UIEdgeInsets)_contentInset;
- (void)_endRefreshingAnimated:(_Bool)arg1;
- (void)_beginRefreshing;
- (void)_setRefreshControl:(id)arg1;
- (id)_refreshControl;
- (double)_rubberBandOffsetForOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4 outside:(_Bool *)arg5;
- (double)_offsetForRubberBandOffset:(double)arg1 maxOffset:(double)arg2 minOffset:(double)arg3 range:(double)arg4;
- (_Bool)_shouldSetIndexBackgroundColorToTableBackgroundColor;
- (double)_timeBeforeIndexOverlayFadesAway;
- (double)_timeToIgnoreWheelEventsOnIndexOverlayIndicator;
- (double)_externalIndexWidth;
- (_Bool)_shouldShowHeadersAndFooters;
- (void)_transitionIndexOverlaySelectionViewToVisible:(_Bool)arg1;
- (void)_configureIndexOverlaySelectionViewIfNecessary;
- (_Bool)_shouldHaveIndexOverlaySelectionView;
- (void)_restartIndexOverlayTimer;
- (void)_stopIgnoringWheelEventsOnIndexOverlayIndicator:(id)arg1;
- (void)_startIndexOverlayIndicatorIgnoreTimer;
- (void)_stopIndexOverlayTimer;
- (void)_startIndexOverlayTimer;
- (void)_hideIndexOverlay;
- (void)_hideIndexOverlay:(id)arg1;
- (void)_transitionIndexOverlayToVisible:(_Bool)arg1 shouldFadeBackToInvisible:(_Bool)arg2;
- (void)_configureIndexOverlayIndicatorViewIfNecessary;
- (void)_recomputeSectionIndexTitleIndex;
- (long long)_currentSectionIndexTitleIndex;
- (void)_tearDownIndexOverlayViews;
- (_Bool)_shouldShowIndexOverlays;
- (struct CGRect)_boundsForIndexOverlay;
- (long long)maximumGlobalRowIndex;
- (long long)highlightedGlobalRow;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)_shiftSectionIndexTitleIndexByAmount:(long long)arg1;
- (void)_moveSectionIndexTitleIndexToIndex:(long long)arg1;
- (id)_updateIndexOverlayToShowTitleAtIndex:(long long)arg1;
- (void)_unhighlightAllRowsAndHighlightGlobalRow:(long long)arg1;
- (_Bool)_highlightFirstVisibleRowIfAppropriate;
- (void)_moveWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)_selectRowsAtIndexPaths:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3 notifyDelegate:(_Bool)arg4;
- (_Bool)_delegateImplementsEstimatedHeightForSectionFooter;
- (_Bool)_delegateImplementsEstimatedHeightForSectionHeader;
- (_Bool)_delegateImplementsEstimatedHeightForRowAtIndexPath;
- (void)_cleanupStateFromDeleteConfirmation;
- (struct UIEdgeInsets)_rawSeparatorInset;
- (double)_marginWidth;
- (void)_setMarginWidth:(double)arg1;
- (_Bool)_pinsTableHeaderView;
- (void)_setPinsTableHeaderView:(_Bool)arg1;
- (void)_updatePinnedTableHeader;
- (void)_configureCellForDisplay:(id)arg1 forIndexPath:(id)arg2;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (struct UIEdgeInsets)_sectionContentInset;
- (void)_setSectionContentInset:(struct UIEdgeInsets)arg1;
- (_Bool)_adjustsRowHeightsForSectionLocation;
- (void)_setAdjustsRowHeightsForSectionLocation:(_Bool)arg1;
@property(nonatomic) _Bool allowsMultipleSelectionDuringEditing;
@property(nonatomic) _Bool allowsMultipleSelection;
- (double)_contentWidthForCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (void)_setExternalObjectTable:(id)arg1 forNibLoadingOfCellWithReuseIdentifier:(id)arg2;
- (void)_registerThing:(id)arg1 asNib:(_Bool)arg2 forViewType:(int)arg3 withReuseIdentifer:(id)arg4;
- (void)registerClass:(Class)arg1 forHeaderFooterViewReuseIdentifier:(id)arg2;
- (void)registerClass:(Class)arg1 forCellReuseIdentifier:(id)arg2;
- (void)registerNib:(id)arg1 forHeaderFooterViewReuseIdentifier:(id)arg2;
- (void)registerNib:(id)arg1 forCellReuseIdentifier:(id)arg2;
- (void)_scrollFirstResponderCellToVisible:(_Bool)arg1;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setShowsVerticalScrollIndicator:(_Bool)arg1;
- (void)setShowsHorizontalScrollIndicator:(_Bool)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setEditing:(_Bool)arg1 animated:(_Bool)arg2 forced:(_Bool)arg3;
@property(nonatomic, getter=isEditing) _Bool editing;
- (void)willMoveToSuperview:(id)arg1;
- (void)setLayoutMargins:(struct UIEdgeInsets)arg1;
- (void)_setDefaultLayoutMargins:(struct UIEdgeInsets)arg1;
- (void)didMoveToWindow;
- (_Bool)cancelTouchTracking;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_updateWrapperFrame;
- (double)_widthForContentInRect:(struct CGRect)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (struct CGSize)_contentSize;
- (void)_rectChangedWithNewSize:(struct CGSize)arg1 oldSize:(struct CGSize)arg2;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (_Bool)_scrollsToMakeFirstResponderVisible;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (struct CGPoint)_contentOffsetForLowFidelityScrollInDirection:(struct CGPoint)arg1 duration:(double *)arg2;
- (id)_nearestContentSubviewToPoint:(struct CGPoint)arg1;
- (id)_contentSubviews;
- (id)_visibleHeaderFooterViews;
- (id)_visibleSubviewsInHeaderFooterDictionary:(struct __CFDictionary *)arg1;
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;
- (void)_scrollViewWillEndDraggingWithVelocity:(struct CGPoint)arg1 targetContentOffset:(struct CGPoint *)arg2;
- (void)_updateTableHeaderViewForAutoHideWithVelocity:(double)arg1 targetOffset:(struct CGPoint *)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_beginTrackingWithEvent:(id)arg1;
- (void)_resetDragSwipeAndTouchSelectFlags;
- (_Bool)_canSelectRowContainingHitView:(id)arg1;
- (_Bool)_gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (void)_handleSwipeDeleteGobbler:(id)arg1;
- (void)_installSwipeToDeleteGobbler;
- (double)_swipeToDeleteOffsetForRow:(long long)arg1 inSection:(long long)arg2;
- (void)_endSwipeToDeleteGesture:(_Bool)arg1;
- (void)_handleSwipeDelete:(id)arg1;
- (_Bool)_canSwipeCellAtPoint:(struct CGPoint)arg1;
- (_Bool)_swipeCellAtPoint:(struct CGPoint)arg1;
- (id)dequeueReusableHeaderFooterViewWithIdentifier:(id)arg1;
- (id)dequeueReusableCellWithIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (id)dequeueReusableCellWithIdentifier:(id)arg1;
- (id)_dequeueReusableViewOfType:(int)arg1 withIdentifier:(id)arg2;
@property(retain, nonatomic) UIView *tableFooterView;
@property(retain, nonatomic) UIView *tableHeaderView;
- (void)setBackgroundColor:(id)arg1;
- (void)_setBackgroundColor:(id)arg1 animated:(_Bool)arg2;
- (void)_backgroundColorAnimationDidStop;
- (_Bool)_usingCustomBackgroundView;
@property(retain, nonatomic) UIView *backgroundView;
- (void)_configureBackgroundView;
- (double)_bottomPadding;
- (void)_setBottomPadding:(double)arg1;
- (double)_topPadding;
- (void)_setTopPadding:(double)arg1;
- (_Bool)usesVariableMargins;
- (void)setUsesVariableMargins:(_Bool)arg1;
- (_Bool)_drawsSeparatorAtTopOfSections;
- (void)_setDrawsSeparatorAtTopOfSections:(_Bool)arg1;
- (_Bool)_shouldDrawSeparatorAtBottomOfSection:(long long)arg1;
- (_Bool)_shouldDrawSeparatorAtTopOfSection:(long long)arg1;
- (id)separatorBottomShadowColor;
- (void)setSeparatorBottomShadowColor:(id)arg1;
- (id)separatorTopShadowColor;
- (void)setSeparatorTopShadowColor:(id)arg1;
- (id)_defaultSeparatorColor;
@property(retain, nonatomic) UIColor *separatorColor;
@property(nonatomic) long long separatorStyle;
- (unsigned long long)maximumNumberOfSectionIndexTitlesWithoutTruncation;
- (_Bool)showsSelectionImmediatelyOnTouchBegin;
- (void)_selectAllSelectedRows;
- (void)setShowsSelectionImmediatelyOnTouchBegin:(_Bool)arg1;
- (void)deselectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)selectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3;
- (void)_userSelectRowAtPendingSelectionIndexPath:(id)arg1;
- (void)_selectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3 notifyDelegate:(_Bool)arg4;
- (void)_reloadDataIfNeeded;
- (void)_highlightCell:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3 highlight:(_Bool)arg4;
- (void)unhighlightRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (_Bool)highlightRowAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3;
- (_Bool)_shouldHighlightInsteadOfSelectRowAtIndexPath:(id)arg1;
- (_Bool)_isRowMultiSelect:(id)arg1;
- (id)_indexPathsForHighlightedRows;
- (id)indexPathsForSelectedRows;
- (id)indexPathForSelectedRow;
@property(nonatomic) _Bool allowsSelectionDuringEditing;
- (void)_updateCellsToFocusable:(_Bool)arg1;
@property(nonatomic) _Bool allowsSelection;
- (void)moveRowAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (void)reloadRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2;
- (void)deleteRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2;
- (void)insertRowsAtIndexPaths:(id)arg1 withRowAnimation:(long long)arg2;
- (void)_updateRowsAtIndexPaths:(id)arg1 updateAction:(int)arg2 withRowAnimation:(long long)arg3;
- (void)moveSection:(long long)arg1 toSection:(long long)arg2;
- (void)_reloadSectionHeaderFooters:(id)arg1 withRowAnimation:(long long)arg2;
- (void)reloadSections:(id)arg1 withRowAnimation:(long long)arg2;
- (void)deleteSections:(id)arg1 withRowAnimation:(long long)arg2;
- (void)insertSections:(id)arg1 withRowAnimation:(long long)arg2;
- (void)_updateSections:(id)arg1 updateAction:(int)arg2 withRowAnimation:(long long)arg3 headerFooterOnly:(_Bool)arg4;
- (id)_arrayForUpdateAction:(int)arg1;
- (void)_performBatchUpdates:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_performBatchUpdates:(CDUnknownBlockType)arg1 withContext:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)endUpdates;
- (void)endUpdatesWithContext:(id)arg1;
- (void)beginUpdates;
- (void)scrollToNearestSelectedRowAtScrollPosition:(long long)arg1 animated:(_Bool)arg2;
- (void)scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2 animated:(_Bool)arg3;
- (struct CGPoint)_contentOffsetForScrollingToRowAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2;
- (id)indexPathsForVisibleRows;
- (id)visibleCells;
- (id)_visibleCells;
- (id)footerViewForSection:(long long)arg1;
- (id)headerViewForSection:(long long)arg1;
- (id)_existingCellForRowAtIndexPath:(id)arg1;
- (id)cellForRowAtIndexPath:(id)arg1;
- (id)indexPathsForRowsInRect:(struct CGRect)arg1;
- (id)indexPathForCell:(id)arg1;
- (id)indexPathForRowAtPoint:(struct CGPoint)arg1;
- (struct CGRect)_rectForTableFooterView;
- (struct CGRect)_rectForTableHeaderView;
- (struct CGRect)_rectForRowAtIndexPath:(id)arg1 canGuess:(_Bool)arg2;
- (struct CGRect)rectForRowAtIndexPath:(id)arg1;
- (struct CGRect)rectForFooterInSection:(long long)arg1;
- (struct CGRect)rectForHeaderInSection:(long long)arg1;
- (struct CGRect)rectForSection:(long long)arg1;
- (long long)numberOfRowsInSection:(long long)arg1;
- (long long)numberOfSections;
- (void)setOverlapsSectionHeaderViews:(_Bool)arg1;
- (_Bool)overlapsSectionHeaderViews;
- (_Bool)tableHeaderViewShouldAutoHide;
- (void)setTableHeaderViewShouldAutoHide:(_Bool)arg1;
- (struct CGRect)indexFrame;
- (_Bool)isIndexHidden;
- (void)setIndexHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setIndexHiddenForSearch:(_Bool)arg1;
- (id)indexPathForRowAtGlobalRow:(long long)arg1;
- (long long)globalRowForRowAtIndexPath:(id)arg1;
- (void)noteNumberOfRowsChanged;
- (void)_numberOfRowsDidChange;
- (void)reloadSectionIndexTitles;
- (struct CGPoint)_validContentOffsetForProposedOffset:(struct CGPoint)arg1;
- (void)reloadData;
@property(nonatomic) double sectionFooterHeight;
@property(nonatomic) double sectionHeaderHeight;
@property(nonatomic) double rowHeight;
@property(retain, nonatomic) UIColor *sectionIndexTrackingBackgroundColor;
@property(retain, nonatomic) UIColor *sectionIndexBackgroundColor;
@property(retain, nonatomic) UIColor *sectionIndexColor;
@property(nonatomic) id <UITableViewDelegate> delegate;
@property(nonatomic) id <UITableViewDataSource> dataSource;
- (_Bool)_isInModalViewController;
- (long long)_popoverControllerStyle;
@property(readonly, nonatomic) long long style;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)_updateSwipeWithDistancePulled:(double)arg1;
- (void)_updateWrapperContentInset;
- (_Bool)_shouldWrapCells;
- (void)_setupDefaultHeights;
- (void)_initializeTentativeViewContainers;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (void)_setupTableViewCommon;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_setUsesStaticScrollBar:(_Bool)arg1;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
@property(readonly, nonatomic, getter=_wrapperView) UIScrollView *wrapperView;
- (id)_classMapForType:(int)arg1;
- (id)_nibMapForType:(int)arg1;
- (id)_cellReuseMapForType:(int)arg1;
- (void)_setHeaderAndFooterViewsFloat:(_Bool)arg1;
- (_Bool)_headerAndFooterViewsFloat;
- (void)_setSectionIndexTrackingBackgroundColor:(id)arg1;
- (id)_sectionIndexTrackingBackgroundColor;
- (void)_setSectionIndexColor:(id)arg1;
- (id)_sectionIndexColor;
- (long long)_sectionForFooterView:(id)arg1;
- (long long)_sectionForHeaderView:(id)arg1;
- (id)_defaultBackgroundView;
- (void)_scrollToTopHidingTableHeaderIfNecessary:(_Bool)arg1;
- (void)_scrollToTopHidingTableHeader:(_Bool)arg1;
- (void)_scrollToTopFromTouchAtScreenLocation:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)setDeleteConfirmationIndexPath:(id)arg1 animated:(_Bool)arg2;
- (id)deleteConfirmationIndexPath;
- (void)_sendDidEndEditingForIndexPath:(id)arg1;
- (void)_sendWillBeginEditingForIndexPath:(id)arg1;
- (void)_validateSectionHeadersAndFooters;
- (void)_validateCells;
- (void)_languageChanged;
- (_Bool)_shouldDisplayTopSeparator;
- (_Bool)_hasSwipeToDeleteRow;
- (void)_updateShowScrollIndicatorsFlag;
- (void)flashScrollIndicators;
- (void)_sectionIndexTouchesEnded:(id)arg1;
- (long long)_sectionIndexChangedToIndex:(long long)arg1 title:(id)arg2;
- (void)_sectionIndexChanged:(id)arg1;
- (_Bool)_shouldChangeIndexBasedOnValueChanged;
- (void)_accessoryButtonAction:(id)arg1;
- (_Bool)_canEditRowAtIndexPath:(id)arg1;
- (void)_updateAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_updateWithItems:(id)arg1 updateSupport:(id)arg2;
- (void)_endAnimatingCells;
- (void)_beginAnimatingCells;
- (void)_setGestureRecognizerRequiresTableGestureRecognizersToFail:(id)arg1;
- (void)_reuseHeaderFooterView:(id)arg1 isHeader:(_Bool)arg2 forSection:(long long)arg3;
- (void)_reuseTableViewCell:(id)arg1 withIndexPath:(id)arg2 didEndDisplaying:(_Bool)arg3;
- (void)_reuseTableViewSubview:(id)arg1 viewType:(int)arg2;
- (id)_newSectionViewWithFrame:(struct CGRect)arg1 forSection:(long long)arg2 isHeader:(_Bool)arg3;
- (void)_setupSectionView:(id)arg1 isHeader:(_Bool)arg2 forSection:(long long)arg3;
- (double)_footerRightMarginWidth;
- (double)_footerMarginWidth;
- (double)_headerRightMarginWidth;
- (double)_headerMarginWidth;
- (id)_reorderingSupport;
- (_Bool)_canMoveRowAtIndexPath:(id)arg1;
- (long long)_accessoryTypeForCell:(id)arg1 forRowAtIndexPath:(id)arg2;
- (_Bool)_shouldIndentWhileEditingForRowAtIndexPath:(id)arg1;
- (id)_swipeActionButtonsForRowAtIndexPath:(id)arg1;
- (id)_swipeActionButtons;
- (id)_swipeAccessoryButtonForRowAtIndexPath:(id)arg1;
- (id)_swipeAccessoryButton;
- (id)_deleteConfirmationButtonForRowAtIndexPath:(id)arg1;
- (id)_deleteConfirmationButton;
- (id)_backgroundColorForSwipeAccessoryButtonForRowAtIndexPath:(id)arg1;
- (id)_backgroundColorForDeleteConfirmationButtonForRowAtIndexPath:(id)arg1;
- (id)_titleForSwipeAccessoryButtonForRowAtIndexPath:(id)arg1;
- (id)_titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg1;
- (long long)_editingStyleForRowAtIndexPath:(id)arg1;
- (id)_tableViewCellForContentView:(id)arg1;
- (void)_showSeparatorForRowAtIndexPath:(id)arg1;
- (void)_showSeparatorForRowBeforeIndexPath:(id)arg1;
- (void)_hideSeparatorForRowAtIndexPath:(id)arg1;
- (void)_cellDidHideSelectedBackground:(id)arg1;
- (void)_cellDidShowSelectedBackground:(id)arg1;
- (id)_cellContainerView;
- (void)_addContentSubview:(id)arg1 atBack:(_Bool)arg2;
- (void)_adjustExtraSeparators;
- (_Bool)_shouldDisplayExtraSeparatorsAtOffset:(double *)arg1;
- (struct _NSRange)_visibleGlobalRowsInRect:(struct CGRect)arg1;
- (void)_updateVisibleCellsNow:(_Bool)arg1 isRecursive:(_Bool)arg2;
- (void)_reapTentativeViews;
- (void)_updateVisibleHeadersAndFootersNow:(_Bool)arg1;
- (void)_updateTableHeadersAndFootersNow:(_Bool)arg1;
- (void)_updateVisibleCellsImmediatelyIfNecessary;
- (void)_setNeedsVisibleCellsUpdate:(_Bool)arg1 withFrames:(_Bool)arg2;
- (void)_endCellAnimationsWithContext:(id)arg1;
- (void)_setupCellAnimations;
- (void)_updateIndex;
- (void)_addIndexToAppropriateContainer;
- (void)_removeIndex;
- (void)_updateVisibleViewsRightMarginForShowingIndex:(_Bool)arg1;
- (id)_dataSourceSectionIndexTitlesForTableView;
- (void)_updateIndexDisplayedTitles;
- (void)_updateIndexTitles:(id)arg1;
- (void)_updateIndexFrameSuppressingChangeNotification:(_Bool)arg1;
- (void)_updateIndexFrame;
- (void)_updateBackgroundView;
- (void)_updateBackgroundViewFrame;
- (void)_updateContentSize;
- (void)_setDrawsTopShadowInGroupedSections:(_Bool)arg1;
- (_Bool)_drawsTopShadowInGroupedSections;
- (double)heightForTableHeaderViewHiding;
- (double)heightForAutohidingTableHeaderView;
- (void)_setHeightForTableHeaderViewHiding:(double)arg1;
- (void)_adjustTableHeaderAndFooterViews;
- (void)setSectionBorderColor:(id)arg1;
- (id)sectionBorderColor;
- (id)multiselectCheckmarkColor;
- (void)setMultiselectCheckmarkColor:(id)arg1;
- (id)_tableHeaderBackgroundView;
- (id)tableHeaderBackgroundColor;
- (void)setTableHeaderBackgroundColor:(id)arg1;
- (void)setCountString:(id)arg1;
- (void)setCountStringInsignificantRowCount:(unsigned long long)arg1;
- (void)_setRowCount:(unsigned long long)arg1;
- (unsigned long long)_countStringRowCount;
- (void)_resumeReloads;
- (void)_suspendReloads;
- (void)_adjustReusableTableCells;
- (void)_adjustCountLabel;
- (void)_scheduleAdjustExtraSeparators;
- (void)_updateRowData;
- (void)_ensureRowDataIsLoaded;
- (float)_animationDuration;
- (void)_setDisplaysCellContentStringsOnTapAndHold:(_Bool)arg1;
- (_Bool)_displaysCellContentStringsOnTapAndHold;
- (void)_updateTableViewGestureRecognizersForEditing;
- (id)_swipeGestureRecognizer;
- (void)_removeTableViewGestureRecognizers;
- (void)_installTableViewGestureRecognizers;
- (id)_scrollTestExtraResults;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (id)_scriptingInfo;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcherTableView : UITableView
{
    UIKeyboardMenuView *_menu;
}

@property(nonatomic) UIKeyboardMenuView *menu; // @synthesize menu=_menu;
- (void)selectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(long long)arg3;
- (void)deselectRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardMenuView : UIView <UITableViewDataSource, UITableViewDelegate, UIDimmingViewDelegate>
{
    UIInputSwitcherTableView *m_table;
    UIInputSwitcherShadowView *m_shadowView;
    UIInputSwitcherSelectionExtraView *m_selExtraView;
    struct CGRect m_referenceRect;
    double m_pointerOffset;
    _Bool m_scrollable;
    _Bool m_startAutoscroll;
    _Bool m_scrolling;
    _Bool m_shouldFade;
    struct CGPoint m_point;
    double m_scrollStartTime;
    int m_scrollDirection;
    NSTimer *m_scrollTimer;
    int m_visibleRows;
    int m_firstVisibleRow;
    int m_mode;
    UIDimmingView *m_dimmingView;
    _Bool _usesStraightLeftEdge;
    _Bool _usesDarkTheme;
    UIKBTree *_referenceKey;
    UIKeyboardLayoutStar *_layout;
}

+ (id)viewThatContainsBaseKey;
@property(nonatomic) UIKeyboardLayoutStar *layout; // @synthesize layout=_layout;
@property(nonatomic) UIKBTree *referenceKey; // @synthesize referenceKey=_referenceKey;
@property(nonatomic) _Bool usesDarkTheme; // @synthesize usesDarkTheme=_usesDarkTheme;
@property(nonatomic) _Bool usesStraightLeftEdge; // @synthesize usesStraightLeftEdge=_usesStraightLeftEdge;
@property(nonatomic) int mode; // @synthesize mode=m_mode;
- (void)toggleKeyboardPredictionPreference;
- (id)predictiveSwitch;
- (id)subtitleFontForItemAtIndex:(int)arg1;
- (id)subtitleForItemAtIndex:(int)arg1;
- (id)fontForItemAtIndex:(int)arg1;
- (id)localizedTitleForItemAtIndex:(int)arg1;
- (id)titleForItemAtIndex:(int)arg1;
- (void)didSelectItemAtIndex:(int)arg1;
- (struct CGSize)preferredSize;
- (long long)defaultSelectedIndex;
- (long long)numberOfItems;
- (struct CGRect)popupRect;
- (void)setRenderConfig:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willDeselectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (int)indexForIndexPath:(id)arg1;
- (void)setHighlightForRowAtIndexPath:(id)arg1 highlight:(_Bool)arg2;
- (void)selectItemAtPoint:(struct CGPoint)arg1;
- (void)highlightRow:(int)arg1;
- (void)updateSelectionWithPoint:(struct CGPoint)arg1;
- (void)autoscrollTimerFired:(id)arg1;
- (void)stopAnyAutoscrolling;
- (void)endScrolling:(id)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayForTopBottomCells;
- (void)setNeedsDisplayForCell:(id)arg1;
- (void)fadeAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)hide;
- (void)removeFromSuperview;
- (void)fadeWithDelay:(double)arg1;
- (void)fade;
- (void)_delayedFade;
- (void)showAsPopupForKey:(id)arg1 inLayout:(id)arg2;
- (int)_internationalKeyRoundedCornerInLayout:(id)arg1;
- (double)minYOfLastTableCellForSelectionExtraView;
- (id)maskForShadowViewBlurredBackground;
- (void)showAsHUD;
- (void)setupShadowViewWithSize:(struct CGSize)arg1;
- (void)show;
- (void)insertSelExtraView;
- (_Bool)usesShadowView;
- (_Bool)usesDimmingView;
- (void)dimmingViewWasTapped:(id)arg1;
- (id)dimmingView;
- (void)setKeyboardDimmed:(_Bool)arg1;
- (void)performShowAnimation;
- (_Bool)isVisible;
- (void)setFrame:(struct CGRect)arg1;
- (id)font;
- (id)subtitleFont;
- (void)applicationWillSuspend:(id)arg1;
- (_Bool)centerPopUpOverKey;
@property(readonly) _Bool usesTable;
- (id)table;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputSwitcherView : UIKeyboardMenuView
{
    int m_currentInputModeIndex;
    _Bool m_keyboardSettingsFromSwitcher;
    NSMutableArray *m_inputModes;
    UISwitch *m_predictiveSwitch;
}

+ (id)activeInstance;
+ (id)sharedInstance;
@property(nonatomic) _Bool keyboardSettingsFromSwitcher; // @synthesize keyboardSettingsFromSwitcher=m_keyboardSettingsFromSwitcher;
@property(retain, nonatomic) NSArray *inputModes; // @synthesize inputModes=m_inputModes;
- (id)predictiveSwitch;
- (void)switchAction;
- (void)didSelectItemAtIndex:(int)arg1;
- (id)subtitleFontForItemAtIndex:(int)arg1;
- (id)subtitleForItemAtIndex:(int)arg1;
- (id)fontForItemAtIndex:(int)arg1;
- (id)localizedTitleForItemAtIndex:(int)arg1;
- (id)titleForItemAtIndex:(int)arg1;
- (long long)defaultSelectedIndex;
- (struct CGSize)preferredSize;
- (long long)numberOfItems;
- (void)show;
- (void)selectPreviousInputMode;
- (id)previousInputMode;
- (void)selectNextInputMode;
- (id)nextInputMode;
- (void)selectInputMode:(id)arg1;
- (void)setInputMode:(id)arg1;
- (void)selectRowForInputMode:(id)arg1;
- (id)selectedInputMode;
- (void)toggleKeyboardPredictionPreference;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIInputView : UIView <UISplittableInputView>
{
    long long _style;
    UIKBRenderConfig *_renderConfig;
    _Bool _suppressBackgroundStyling;
    _Bool _disableSplitSupport;
    _UIInputViewContent *_leftContentView;
    _UIInputViewContent *_rightContentView;
    double _contentRatio;
    struct CGSize _leftContentSize;
    struct CGSize _rightContentSize;
    struct CGSize _defaultSize;
    double _gapWidth;
    double _leftOffset;
    _Bool _isTransitioning;
    double _transitionGap;
    double _transitionLeftOffset;
    double _transitionRatio;
    UIImage *_mergedImage;
    UIImage *_splitImage;
    NSMutableDictionary *_mergedSliceMap;
    NSMutableDictionary *_splitSliceMap;
    NSArray *_visibleLayers;
    CALayer *_transitionLayer;
}

+ (void)_setupAppearanceIfNecessary;
@property(retain, nonatomic) NSMutableDictionary *_splitSliceMap; // @synthesize _splitSliceMap;
@property(retain, nonatomic) NSMutableDictionary *_mergedSliceMap; // @synthesize _mergedSliceMap;
@property(retain, nonatomic) UIImage *_splitImage; // @synthesize _splitImage;
@property(retain, nonatomic) UIImage *_mergedImage; // @synthesize _mergedImage;
@property(nonatomic) struct CGSize rightContentViewSize; // @synthesize rightContentViewSize=_rightContentSize;
@property(nonatomic) struct CGSize leftContentViewSize; // @synthesize leftContentViewSize=_leftContentSize;
@property(nonatomic) double contentRatio; // @synthesize contentRatio=_contentRatio;
@property(readonly, nonatomic) UIView *rightContentView; // @synthesize rightContentView=_rightContentView;
@property(readonly, nonatomic) UIView *leftContentView; // @synthesize leftContentView=_leftContentView;
@property(readonly, nonatomic) long long inputViewStyle; // @synthesize inputViewStyle=_style;
- (void)didEndSplitTransition;
- (void)willBeginSplitTransition;
- (struct CGSize)_defaultSize;
- (double)_additionalClipHeight;
- (int)_clipCornersOfView:(id)arg1;
- (void)_updateClipCorners;
- (id)_toolbarBorderedBackground;
- (id)_splitBorderedBackgroundWithCorners:(unsigned long long)arg1;
- (void)updateSplitSubviewContraintsWithLeftContentSize:(struct CGSize)arg1 rightContentSize:(struct CGSize)arg2;
- (void)updateMergedSubviewConstraints;
- (void)layoutSplitSubviewsWithLeftContentSize:(struct CGSize)arg1 rightContentSize:(struct CGSize)arg2;
- (void)layoutMergedSubviews;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_updateWithSize:(struct CGSize)arg1;
- (void)_endSplitTransitionIfNeeded:(_Bool)arg1;
- (void)_beginSplitTransitionIfNeeded:(double)arg1 gapWidth:(double)arg2;
- (_Bool)_isTransitioning;
- (void)_setProgress:(double)arg1 boundedBy:(double)arg2;
- (void)_setLeftOffset:(double)arg1 gapWidth:(double)arg2;
- (_Bool)_supportsSplit;
- (void)_setNeedsContentSizeUpdate;
- (_Bool)_isSplit;
- (_Bool)_isToolbars;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setInputViewStyle:(long long)arg1;
- (id)_inheritedRenderConfig;
- (void)_setRenderConfig:(id)arg1;
- (void)_setDisableSplitSupport:(_Bool)arg1;
- (_Bool)_disableSplitSupport;
- (void)_setSuppressBackgroundStyling:(_Bool)arg1;
- (_Bool)_suppressBackgroundStyling;
- (void)_updateBackgroundColor;
- (id)tintColor;
- (id)initWithFrame:(struct CGRect)arg1 inputViewStyle:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationControllerBasic : NSObject <UIInputViewAnimationController>
{
}

- (void)completeAnimationWithHost:(id)arg1 context:(id)arg2;
- (void)performAnimationWithHost:(id)arg1 context:(id)arg2;
- (id)prepareAnimationWithHost:(id)arg1 startPlacement:(id)arg2 endPlacement:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationControllerSlide : NSObject <UIInputViewAnimationController>
{
    int _slide;
}

- (void)completeAnimationWithHost:(id)arg1 context:(id)arg2;
- (void)performAnimationWithHost:(id)arg1 context:(id)arg2;
- (id)prepareAnimationWithHost:(id)arg1 startPlacement:(id)arg2 endPlacement:(id)arg3;
- (id)placementForSlideStart:(_Bool)arg1;
- (id)initWithSlide:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationControllerSlideContext : NSObject
{
    UIView *_snapshot;
    UIInputViewSetPlacement *_endPlacement;
    struct CGRect _snapshotEndFrame;
}

@property(retain, nonatomic) UIInputViewSetPlacement *endPlacement; // @synthesize endPlacement=_endPlacement;
@property(nonatomic) struct CGRect snapshotEndFrame; // @synthesize snapshotEndFrame=_snapshotEndFrame;
@property(retain, nonatomic) UIView *snapshot; // @synthesize snapshot=_snapshot;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationControllerViewController : NSObject <UIInputViewAnimationController>
{
    id <UIViewControllerContextTransitioning> _context;
    id <UIViewControllerAnimatedTransitioning_Keyboard> _animator;
}

+ (id)controllerWithContext:(id)arg1;
- (void)completeAnimationWithHost:(id)arg1 context:(id)arg2;
- (void)performAnimationWithHost:(id)arg1 context:(id)arg2;
- (id)prepareAnimationWithHost:(id)arg1 startPlacement:(id)arg2 endPlacement:(id)arg3;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationControllerViewControllerContext : NSObject <UIViewControllerKeyboardContextTransitioning>
{
    _UIViewControllerTransitionContext *_context;
    id <UIInputViewAnimationHost> _host;
    UIView *_from;
    UIView *_to;
    struct CGRect _fromRect;
    struct CGRect _toRect;
}

+ (id)contextWithHost:(id)arg1 startPlacement:(id)arg2 endPlacement:(id)arg3 transitionContext:(id)arg4;
@property(readonly, nonatomic) struct CGRect toKeyboardFrame;
@property(readonly, nonatomic) UIView *toKeyboard;
@property(readonly, nonatomic) struct CGRect fromKeyboardFrame;
@property(readonly, nonatomic) UIView *fromKeyboard;
@property(readonly, nonatomic) id <UIViewControllerContextTransitioning> mainContext;
- (void)dealloc;
- (id)initWithHost:(id)arg1 startPlacement:(id)arg2 endPlacement:(id)arg3 transitionContext:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationStyle : NSObject <NSCopying>
{
    _Bool animated;
    double duration;
    unsigned long long extraOptions;
    _Bool interactivelyCancelled;
    _Bool force;
}

+ (id)animationStyleAnimated:(_Bool)arg1 duration:(double)arg2;
+ (id)animationStyleDefault;
+ (id)animationStyleImmediate;
@property(nonatomic) _Bool interactivelyCancelled; // @synthesize interactivelyCancelled;
@property(nonatomic) unsigned long long extraOptions; // @synthesize extraOptions;
@property(nonatomic) _Bool force; // @synthesize force;
@property(nonatomic) double duration; // @synthesize duration;
@property(nonatomic) _Bool animated; // @synthesize animated;
@property(readonly, nonatomic) _Bool canDismissWithScrollView;
- (id)endPlacementForInputViewSet:(id)arg1;
- (id)startPlacementForInputViewSet:(id)arg1 currentPlacement:(id)arg2;
- (id)controllerForStartPlacement:(id)arg1 endPlacement:(id)arg2;
- (void)launchAnimation:(CDUnknownBlockType)arg1 afterStarted:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3 forHost:(id)arg4 fromCurrentPosition:(_Bool)arg5;
@property(readonly, nonatomic) _Bool isAnimationCompleted;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationStyleDirectional : UIInputViewAnimationStyle
{
    int _outDirection;
}

+ (id)animationStyleAnimated:(_Bool)arg1 duration:(double)arg2 outDirection:(int)arg3;
@property(nonatomic) int outDirection; // @synthesize outDirection=_outDirection;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)canDismissWithScrollView;
- (id)controllerForStartPlacement:(id)arg1 endPlacement:(id)arg2;
- (id)endPlacementForInputViewSet:(id)arg1;
- (id)startPlacementForInputViewSet:(id)arg1 currentPlacement:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewAnimationStyleExtraView : NSObject
{
    int _clipContainerType;
    int _alignment;
    UIView *_view;
    CDUnknownBlockType _animation;
}

+ (id)extraView:(id)arg1 withAlignment:(int)arg2 animation:(CDUnknownBlockType)arg3 onSnapshot:(_Bool)arg4;
@property(copy, nonatomic) CDUnknownBlockType animation; // @synthesize animation=_animation;
@property(nonatomic) int alignment; // @synthesize alignment=_alignment;
@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
@property(nonatomic) int clipContainerType; // @synthesize clipContainerType=_clipContainerType;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewControllerInterface : TIKeyboardInputManagerStub <_UIIVCInterface>
{
    id <_UIIVCResponseDelegate> _responseDelegate;
    id <_UIIVCInterface> _forwardingInterface;
    _UIInputViewControllerState *_cachedState;
}

@property(retain, nonatomic, getter=_cachedState, setter=_setCachedState:) _UIInputViewControllerState *cachedState; // @synthesize cachedState=_cachedState;
@property(retain, nonatomic) id <_UIIVCInterface> forwardingInterface; // @synthesize forwardingInterface=_forwardingInterface;
@property(retain, nonatomic) id <_UIIVCResponseDelegate> responseDelegate; // @synthesize responseDelegate=_responseDelegate;
- (void)syncToKeyboardState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_tearDownRemoteService;
- (void)_handleInputViewControllerState:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewControllerInterfaceClient : NSExtensionContext
{
    id <_UIIVCInterface> _forwardingInterface;
}

+ (id)_extensionAuxiliaryVendorProtocol;
+ (id)_extensionAuxiliaryHostProtocol;
@property(retain, nonatomic) id <_UIIVCInterface> forwardingInterface; // @synthesize forwardingInterface=_forwardingInterface;
- (void)dealloc;
- (void)_handleInputViewControllerState:(id)arg1;
- (void)_tearDownRemoteService;
- (id)responseDelegate;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewPlacementTransition : NSObject
{
    _Bool cancelled;
    int animationState;
    UIInputViewSetPlacement *fromPlacement;
    UIInputViewSetPlacement *toPlacement;
    UIInputViewAnimationStyle *animationStyle;
    UIInputViewSetNotificationInfo *notificationInfo;
    unsigned long long notifications;
    id <NSObject> animationContext;
    id <UIInputViewAnimationController> animationController;
}

+ (id)transitionFromPlacement:(id)arg1 toPlacement:(id)arg2 withAnimationStyle:(id)arg3;
@property(retain, nonatomic) id <UIInputViewAnimationController> animationController; // @synthesize animationController;
@property(retain, nonatomic) id <NSObject> animationContext; // @synthesize animationContext;
@property(nonatomic) _Bool cancelled; // @synthesize cancelled;
@property(nonatomic) int animationState; // @synthesize animationState;
@property(nonatomic) unsigned long long notifications; // @synthesize notifications;
@property(retain, nonatomic) UIInputViewSetNotificationInfo *notificationInfo; // @synthesize notificationInfo;
@property(retain, nonatomic) UIInputViewAnimationStyle *animationStyle; // @synthesize animationStyle;
@property(retain, nonatomic) UIInputViewSetPlacement *toPlacement; // @synthesize toPlacement;
@property(retain, nonatomic) UIInputViewSetPlacement *fromPlacement; // @synthesize fromPlacement;
- (void)dealloc;
- (_Bool)didAdvanceAnimationToState:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewPostPinningReloadState : NSObject
{
    UIResponder *_responderPreventedFromSettingInputViews;
}

+ (id)stateWithResponder:(id)arg1;
@property(retain, nonatomic) UIResponder *responderToReload; // @synthesize responderToReload=_responderPreventedFromSettingInputViews;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewTransition : NSObject
{
    UIInputViewSet *oldSet;
    UIInputViewSet *newSet;
    UIInputViewAnimationStyle *animationStyle;
    _Bool cancelled;
    int animationState;
    double animationStartTime;
    _Bool skipNotifications;
    _Bool skipFencing;
    struct CGRect beginFrame;
    struct CGRect endFrame;
    struct CGRect beginFrameScreen;
    struct CGRect endFrameScreen;
    struct CGRect beginFloatingFrame;
    struct CGRect endFloatingFrame;
    struct CGRect beginFloatingFrameScreen;
    struct CGRect endFloatingFrameScreen;
    int activeClippingModes;
    UISnapshotView *snapshotView;
    struct CGRect snapshotViewBeginFrame;
    struct CGRect snapshotViewEndFrame;
}

@property(nonatomic) int activeClippingModes; // @synthesize activeClippingModes;
@property(nonatomic) struct CGRect snapshotViewEndFrame; // @synthesize snapshotViewEndFrame;
@property(nonatomic) struct CGRect snapshotViewBeginFrame; // @synthesize snapshotViewBeginFrame;
@property(retain, nonatomic) UISnapshotView *snapshotView; // @synthesize snapshotView;
@property(nonatomic) struct CGRect endFloatingFrameScreen; // @synthesize endFloatingFrameScreen;
@property(nonatomic) struct CGRect beginFloatingFrameScreen; // @synthesize beginFloatingFrameScreen;
@property(nonatomic) struct CGRect endFloatingFrame; // @synthesize endFloatingFrame;
@property(nonatomic) struct CGRect beginFloatingFrame; // @synthesize beginFloatingFrame;
@property(nonatomic) struct CGRect endFrameScreen; // @synthesize endFrameScreen;
@property(nonatomic) struct CGRect beginFrameScreen; // @synthesize beginFrameScreen;
@property(nonatomic) struct CGRect endFrame; // @synthesize endFrame;
@property(nonatomic) struct CGRect beginFrame; // @synthesize beginFrame;
@property(nonatomic) _Bool skipFencing; // @synthesize skipFencing;
@property(nonatomic) _Bool skipNotifications; // @synthesize skipNotifications;
@property(nonatomic) double animationStartTime; // @synthesize animationStartTime;
@property(nonatomic) int animationState; // @synthesize animationState;
@property(nonatomic) _Bool cancelled; // @synthesize cancelled;
@property(retain, nonatomic) UIInputViewAnimationStyle *animationStyle; // @synthesize animationStyle;
@property(retain, nonatomic) UIInputViewSet *oldSet; // @synthesize oldSet;
- (id)description;
@property(readonly, nonatomic) _Bool ignoreFrameChanges;
- (_Bool)isOnScreen;
- (_Bool)isAccessoryViewChangedOnly;
- (_Bool)requiresAutomaticAppearanceEnabled;
- (_Bool)shouldRecomputeEndFrame;
- (_Bool)shouldCompleteOnSuspend;
- (_Bool)isAlmostDone;
- (_Bool)subsumesTransition:(id)arg1;
@property(readonly, nonatomic) int cancelState;
@property(readonly, nonatomic) int endState;
@property(readonly, nonatomic) int transitioningState;
@property(readonly, nonatomic) int beginState;
- (_Bool)fadeAccessoryView;
- (void)postNotificationsForTransitionEnd;
- (void)postNotificationsForTransitionStart;
- (id)userInfoForTransition;
@property(readonly, nonatomic) struct CGPoint deprecatedCenterEnd;
@property(readonly, nonatomic) struct CGPoint deprecatedCenterBegin;
@property(readonly, nonatomic) struct CGRect deprecatedBounds;
- (void)setNewSet:(id)arg1;
- (id)newSet;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewRotateTransition : UIInputViewTransition
{
}

- (_Bool)shouldRecomputeEndFrame;
- (_Bool)shouldCompleteOnSuspend;
- (_Bool)fadeAccessoryView;
- (void)postNotificationsForTransitionEnd;
- (void)postNotificationsForTransitionStart;
- (_Bool)subsumesTransition:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSet : NSObject
{
    UIView *_inputView;
    UIView *_inputAccessoryView;
    _Bool _isSplit;
    double _splitHeightDelta;
    UIResponder *_restorableResponder;
    _Bool _restoreUsingBecomeFirstResponder;
    UIInputViewController *_inputViewController;
    UIInputViewController *_accessoryViewController;
}

+ (id)emptyInputSet;
+ (id)inputSetWithPlaceholderAndAccessoryView:(id)arg1;
+ (id)inputSetWithKeyboardAndAccessoryView:(id)arg1;
+ (id)inputSetWithInputView:(id)arg1 accessoryView:(id)arg2;
@property(nonatomic) UIResponder *restorableResponder; // @synthesize restorableResponder=_restorableResponder;
@property(nonatomic) double splitHeightDelta; // @synthesize splitHeightDelta=_splitHeightDelta;
@property(retain, nonatomic) UIInputViewController *accessoryViewController; // @synthesize accessoryViewController=_accessoryViewController;
@property(retain, nonatomic) UIInputViewController *inputViewController; // @synthesize inputViewController=_inputViewController;
@property(retain, nonatomic) UIView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(retain, nonatomic) UIView *inputView; // @synthesize inputView=_inputView;
- (void)_setSplitProgress:(double)arg1;
- (void)_endSplitTransitionIfNeeded;
- (void)_beginSplitTransitionIfNeeded;
- (_Bool)_accessorySuppressesShadow;
- (id)_splittableInputAccessoryView;
- (id)_themableInputAccessoryView;
- (_Bool)setAccessoryViewVisible:(_Bool)arg1 delay:(double)arg2;
- (void)refreshPresentation;
- (struct CGRect)_rightInputViewSetFrame;
- (struct CGRect)_leftInputViewSetFrame;
@property(readonly, nonatomic) struct CGRect inputAccessoryViewBounds;
@property(readonly, nonatomic) struct CGRect inputViewBounds;
@property(readonly, nonatomic) _Bool _inputViewIsSplit;
@property(readonly, nonatomic) _Bool isSplit; // @synthesize isSplit=_isSplit;
@property(readonly, nonatomic) _Bool supportsSplit;
@property(readonly, nonatomic) _Bool isInputAccessoryViewPlaceholder;
@property(readonly, nonatomic) _Bool isInputViewPlaceholder;
@property(readonly, nonatomic) _Bool inputViewKeyboardCanSplit;
- (_Bool)_inputViewSetSupportsSplit;
- (_Bool)_inputAccessoryViewSupportsSplit;
- (_Bool)_inputViewSupportsSplit;
- (_Bool)__isCKAccessoryView;
- (_Bool)inSyncWithOrientation:(long long)arg1 forKeyboard:(id)arg2;
- (long long)keyboardOrientation:(id)arg1;
- (id)description;
- (_Bool)isStrictSupersetOfViewSet:(id)arg1;
- (_Bool)containsResponder:(id)arg1;
- (_Bool)visible;
- (_Bool)_inputViewIsVisible;
- (_Bool)usesKeyClicks;
- (_Bool)isEqual:(id)arg1;
- (_Bool)containsView:(id)arg1;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
@property(nonatomic) _Bool restoreUsingBecomeFirstResponder;
@property(readonly, nonatomic) UIView *splitExemptSubview;
@property(readonly, nonatomic) UIView *layeringView;
- (void)_setRenderConfig:(id)arg1;
- (id)inputSetWithInputAccessoryViewOnly;
- (void)dealloc;
- (id)initWithInputView:(id)arg1 accessoryView:(id)arg2 isKeyboard:(_Bool)arg3;
@property(readonly, nonatomic) UIKeyboard *keyboard;
- (_Bool)_isKeyboard;
- (_Bool)canAnimateToInputViewSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetNotificationInfo : NSObject
{
    _Bool _changedAccessoryOnly;
    double _duration;
    unsigned long long _options;
    struct CGPoint _beginCenter;
    struct CGPoint _endCenter;
    struct CGRect _beginFrame;
    struct CGRect _endFrame;
    struct CGRect _bounds;
}

+ (id)info;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(nonatomic) struct CGPoint endCenter; // @synthesize endCenter=_endCenter;
@property(nonatomic) struct CGPoint beginCenter; // @synthesize beginCenter=_beginCenter;
@property(nonatomic) _Bool changedAccessoryOnly; // @synthesize changedAccessoryOnly=_changedAccessoryOnly;
@property(nonatomic) unsigned long long options; // @synthesize options=_options;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) struct CGRect endFrame; // @synthesize endFrame=_endFrame;
@property(nonatomic) struct CGRect beginFrame; // @synthesize beginFrame=_beginFrame;
- (void)populateEndInfoWithFrame:(struct CGRect)arg1;
- (void)populateStartInfoWithFrame:(struct CGRect)arg1;
- (void)populateWithAnimationStyle:(id)arg1;
- (void)logGeometry;
@property(readonly, nonatomic) NSDictionary *privateUserInfo;
@property(readonly, nonatomic) NSDictionary *userInfo;
- (id)inverseInfo;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacement : NSObject
{
}

+ (id)placement;
- (_Bool)accessoryViewWillAppear;
- (_Bool)inputViewWillAppear;
- (unsigned long long)notificationsForTransitionToPlacement:(id)arg1;
- (id)verticalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;
- (id)horizontalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;
@property(readonly, nonatomic) _Bool isInteractive;
@property(readonly, nonatomic) _Bool showsKeyboard;
@property(readonly, nonatomic) _Bool showsInputViews;
@property(readonly, nonatomic) _Bool isUndocked;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementAccessoryOnScreen : UIInputViewSetPlacement
{
}

- (_Bool)accessoryViewWillAppear;
- (_Bool)showsInputViews;
- (id)verticalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementOffScreenDown : UIInputViewSetPlacement
{
}

- (id)verticalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementInitialPosition : UIInputViewSetPlacementOffScreenDown
{
}

- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementOffScreenDownByScreenHeight : UIInputViewSetPlacement
{
}

- (id)verticalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementOffScreenLeft : UIInputViewSetPlacement
{
}

- (id)horizontalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementOffScreenRight : UIInputViewSetPlacement
{
}

- (id)horizontalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementOnScreen : UIInputViewSetPlacement
{
}

- (_Bool)inputViewWillAppear;
- (_Bool)showsKeyboard;
- (_Bool)showsInputViews;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSetPlacementUndocked : UIInputViewSetPlacement
{
    double _normalizedOffset;
}

+ (id)placementWithUndockedOffset:(double)arg1;
@property(nonatomic) double normalizedOffset; // @synthesize normalizedOffset=_normalizedOffset;
- (_Bool)isUndocked;
- (_Bool)inputViewWillAppear;
- (_Bool)isEqual:(id)arg1;
- (id)verticalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIInputViewSlideTransition : UIInputViewTransition
{
}

@end

__attribute__((visibility("hidden")))
@interface UIInputWindowController : UIViewController <UIScrollViewIntersectionDelegate, UIKeyboardKeyplaneTransitionDelegate, UIGestureRecognizerDelegate, UIInputViewAnimationHost, _UIRemoteKeyboardViewSource>
{
    NSMutableArray *_animationStyleStack;
    _Bool _suppressedCallbacks;
    _Bool _suppressedNotifications;
    _Bool _isChangingPlacement;
    _Bool _isChangingInputViews;
    _Bool _requiresConstraintUpdate;
    int _hiddenCount;
    unsigned long long _rotationState;
    NSMutableDictionary *_inputViewEdgeConstraints;
    NSMutableDictionary *_accessoryViewEdgeConstraints;
    NSMutableDictionary *_inputBackdropViewEdgeConstraints;
    NSMutableDictionary *_accessoryBackdropViewEdgeConstraints;
    UIView *_preRotationSnapshot;
    struct CGSize _preRotationInputViewSize;
    struct CGSize _preRotationInputAccessoryViewSize;
    struct CGAffineTransform _preRotationInputViewTransform;
    struct CGAffineTransform _preRotationInputAccessoryViewTransform;
    _Bool _isTranslating;
    _Bool _isSplitting;
    _Bool _splitLockState;
    CADisplayLink *_displayLink;
    double _lastBounceTime;
    double _lastTranslationNotificationTime;
    double _targetTranslation;
    double _initialTranslation;
    double _translationVelocity;
    UIPanGestureRecognizer *_translateRecognizer;
    CDUnknownBlockType _bounceCompletionBlock;
    SEL _interactiveTransitionCleanupSelector;
    UIScrollView *_scrollViewForTransition;
    _Bool _scrollViewTransitionFinishing;
    _Bool _scrollViewShowsHorizontalScrollIndicator;
    struct CGPoint _scrollViewTransitionPreviousPoint;
    UIInputViewSetNotificationInfo *_scrollViewNotificationInfo;
    struct CGRect _preLayoutHostViewFrame;
    _Bool _didOverridePreLayoutHostViewFrame;
    _Bool _didPostLayoutNotification;
    UIInputViewSetNotificationInfo *_keyboardHeightChangeNotificationInfo;
    _Bool _wasOnScreen;
    NSString *_lastKeyboardID;
    _Bool _shouldNotifyRemoteKeyboards;
    UIView *_hostView;
    UIInputViewSet *_inputViewSet;
    UIInputViewSetPlacement *_placement;
    UIInputViewController *_inputViewController;
    UIInputViewController *_inputAccessoryViewController;
    UIKBInputBackdropView *_inputBackdropView;
    UIKBInputBackdropView *_inputAccessoryBackdropView;
    NSArray *_visibilityConstraints;
    NSLayoutConstraint *_verticalVisibilityConstraint;
    UIInputViewSetPlacement *_postRotationPlacement;
    UIInputViewSet *_postRotationInputViewSet;
    UIInputViewSetNotificationInfo *_templateNotificationInfo;
    UIInputViewPlacementTransition *_currentTransition;
    id <_UIRemoteKeyboardControllerDelegate> _controllerDelegate;
    NSLayoutConstraint *_inputViewHeightConstraint;
    NSLayoutConstraint *_accessoryViewHeightConstraint;
}

+ (id)tranformedUserInfoForNotificationName:(id)arg1 userInfo:(id)arg2;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (_Bool)_doesOverrideLegacyFullScreenLayout;
@property(retain, nonatomic) NSLayoutConstraint *accessoryViewHeightConstraint; // @synthesize accessoryViewHeightConstraint=_accessoryViewHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *inputViewHeightConstraint; // @synthesize inputViewHeightConstraint=_inputViewHeightConstraint;
@property(retain, nonatomic) id <_UIRemoteKeyboardControllerDelegate> controllerDelegate; // @synthesize controllerDelegate=_controllerDelegate;
@property(nonatomic) _Bool shouldNotifyRemoteKeyboards; // @synthesize shouldNotifyRemoteKeyboards=_shouldNotifyRemoteKeyboards;
@property(retain, nonatomic) UIInputViewPlacementTransition *currentTransition; // @synthesize currentTransition=_currentTransition;
@property(retain, nonatomic) UIInputViewSetNotificationInfo *templateNotificationInfo; // @synthesize templateNotificationInfo=_templateNotificationInfo;
@property(retain, nonatomic) UIInputViewSet *postRotationInputViewSet; // @synthesize postRotationInputViewSet=_postRotationInputViewSet;
@property(retain, nonatomic) UIInputViewSetPlacement *postRotationPlacement; // @synthesize postRotationPlacement=_postRotationPlacement;
@property(retain, nonatomic) NSLayoutConstraint *verticalVisibilityConstraint; // @synthesize verticalVisibilityConstraint=_verticalVisibilityConstraint;
@property(retain, nonatomic) NSArray *visibilityConstraints; // @synthesize visibilityConstraints=_visibilityConstraints;
@property(retain, nonatomic, setter=setInputAccessoryBackdropView:) UIKBInputBackdropView *_inputAccessoryBackdropView; // @synthesize _inputAccessoryBackdropView;
@property(retain, nonatomic, setter=setInputBackdropView:) UIKBInputBackdropView *_inputBackdropView; // @synthesize _inputBackdropView;
@property(retain, nonatomic) UIInputViewController *_inputAccessoryViewController; // @synthesize _inputAccessoryViewController;
@property(retain, nonatomic) UIInputViewController *_inputViewController; // @synthesize _inputViewController;
@property(nonatomic) UIInputViewSetPlacement *placement; // @synthesize placement=_placement;
@property(retain, nonatomic) UIInputViewSet *inputViewSet; // @synthesize inputViewSet=_inputViewSet;
@property(readonly, nonatomic) UIView *hostView; // @synthesize hostView=_hostView;
- (void)candidateBarWillChangeHeight:(double)arg1 withDuration:(double)arg2;
- (void)setInterfaceAutorotationDisabled:(_Bool)arg1;
- (void)keyboardHeightChangeDone;
- (void)prepareKeyboardHeightChangeWithDelta:(double)arg1 duration:(double)arg2;
- (void)extendKeyboardBackdropHeight:(double)arg1 withDuration:(double)arg2;
- (void)animateAccessoryViewVisibility:(_Bool)arg1 withDuration:(double)arg2;
- (_Bool)isTranslating;
- (_Bool)isChangingPlacement;
- (_Bool)isRotating;
- (_Bool)isUndocked;
- (_Bool)isOnScreen;
- (struct CGRect)visibleFrame;
- (void)setInputView:(id)arg1 accessoryView:(id)arg2;
- (void)setRotationAwarePlacement:(id)arg1;
- (void)setPlacement:(id)arg1 starting:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (unsigned long long)changeToInputViewSet:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)initializeTranslateGestureRecognizer;
- (void)translateToPlacement:(id)arg1;
- (void)window:(id)arg1 statusBarWillChangeFromHeight:(double)arg2 toHeight:(double)arg3;
- (void)_finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)_rotateToOrientation:(long long)arg1 duration:(double)arg2;
- (void)_prepareForRotationToOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_viewControllerForAutorotation;
- (id)windowForAutorotation;
- (void)clearInteractiveTransitionStateIfNecessary;
- (void)setInputViewsHidden:(_Bool)arg1;
- (void)updateToPlacement:(id)arg1 withNormalAnimationsAndNotifications:(_Bool)arg2;
- (struct CGRect)transitioningFrame;
- (id)transitioningView;
- (void)syncToExistingAnimations;
- (void)moveFromPlacement:(id)arg1 toPlacement:(id)arg2 starting:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)mergeTransitionIfNecessaryWithTransition:(id)arg1;
- (void)performOperations:(CDUnknownBlockType)arg1 withAnimationStyle:(id)arg2;
- (id)nextAnimationStyle;
- (void)popAnimationStyle;
- (void)pushAnimationStyle:(id)arg1;
- (void)checkPlaceholdersForRemoteKeyboards;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)_forcePreLayoutHostViewFrame;
- (void)updateAppearStatesForPlacement:(id)arg1 start:(_Bool)arg2 animated:(_Bool)arg3;
- (void)changeChild:(unsigned long long)arg1 toAppearState:(int)arg2 animated:(_Bool)arg3;
- (int)appearStateForChild:(unsigned long long)arg1 placement:(id)arg2 start:(_Bool)arg3;
- (void)postEndNotifications:(unsigned long long)arg1 withInfo:(id)arg2;
- (void)postStartNotifications:(unsigned long long)arg1 withInfo:(id)arg2;
- (id)initialNotificationInfo;
- (void)updateVisibilityConstraintsForPlacement:(id)arg1;
- (void)updateViewConstraints;
- (void)updateConstraintInsets;
- (void)updateViewSizingConstraints;
- (void)clearViewSizingConstraints:(unsigned long long)arg1;
- (struct UIEdgeInsets)_aligningInsetsForChildInputViewController:(id)arg1;
- (_Bool)_subviewUsesClassicLayout:(id)arg1;
- (void)rebuildConstraints:(id)arg1 forView:(id)arg2 toMatchView:(id)arg3;
- (id)viewMatchingConstraintForAttribute:(long long)arg1 primaryView:(id)arg2 secondaryView:(id)arg3;
- (void)performWithSafeTransitionFrames:(CDUnknownBlockType)arg1;
- (void)performOperations:(CDUnknownBlockType)arg1 withTemplateNotificationInfo:(id)arg2;
- (void)performWithoutCallbacksOrNotifications:(CDUnknownBlockType)arg1;
- (void)performWithoutAppearanceCallbacks:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) UIView *_inputAccessoryView;
@property(readonly, nonatomic) UIView *_inputView;
- (void)didSuspend:(id)arg1;
- (void)willResume:(id)arg1;
- (void)registerPowerLogEvent:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)scrollView:(id)arg1 didFinishPanGesture:(id)arg2;
- (void)scrollView:(id)arg1 didPanWithGesture:(id)arg2;
- (void)completeKeyboardDismiss:(unsigned long long)arg1;
- (void)finishScrollViewTransition;
- (void)hideScrollViewHorizontalScrollIndicator:(_Bool)arg1;
- (void)updateScrollViewContentInsetBottom:(double)arg1;
- (void)fillInNotificationInfo:(id)arg1 forDismissMode:(unsigned long long)arg2;
- (unsigned long long)keyboardDismissModeForPublicMode:(long long)arg1;
- (void)_updateBackdropViews;
- (void)transitionDidFinish:(_Bool)arg1;
- (void)finishTransitionWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateProgress:(double)arg1 startHeight:(double)arg2 endHeight:(double)arg3;
- (void)prepareForTransition;
- (void)setAccessoryViewVisible:(_Bool)arg1 delay:(double)arg2;
- (void)undock;
- (void)dock;
- (void)_updateBounceAnimation:(id)arg1;
- (void)invalidateDisplayLink;
- (void)bounceAnimationDidFinish;
- (void)translateDetected:(id)arg1;
- (int)_clipCornersOfView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIRemoveControl : UIView
{
    UIView *_target;
    id _delegate;
    UIView *_removeConfirmationButton;
    UIRemoveControlMinusButton *_minusButton;
    NSString *_label;
    struct {
        unsigned int removeButtonVisible:1;
        unsigned int removeConfirmationVisible:1;
        unsigned int removedFromTargetWhenHidden:1;
        unsigned int disableToggleRotate:1;
        unsigned int alwaysHideRemoveButton:1;
        unsigned int editingStyle:3;
        unsigned int reserved:23;
    } _removeControlFlags;
}

+ (void)hideAllRemoveConfirmationsInView:(id)arg1;
+ (_Bool)removeConfirmationsVisibleInView:(id)arg1;
+ (float)removeButtonWidth;
- (void)_hideRemoveAnimationDone;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (void)_shouldRemoveTarget;
- (void)_doRemove:(id)arg1;
- (void)_doInsert:(id)arg1;
- (void)_showDeleteConfirmation:(id)arg1;
- (void)_hideRemoveConfirmation;
- (void)addConfirmationButtonSubview:(id)arg1 withWidth:(float)arg2 target:(id)arg3;
- (void)_setTableViewCellEditingStyle:(long long)arg1;
- (void)_setInsertControl:(_Bool)arg1;
- (_Bool)_isInsertControl;
- (float)_verticalOffsetFromTarget;
- (id)_scriptingInfo;
- (id)removeConfirmationButton;
- (void)setRemoveConfirmationLabel:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)hideControlsUsingRemoveAnimation;
- (void)setAlpha:(double)arg1;
- (id)_interceptEvent:(id)arg1;
- (id)_interceptMouseEvent:(struct __GSEvent *)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)isHighlighted;
- (void)setHighlighted:(_Bool)arg1;
- (id)removeConfirmationView;
- (void)setRemoveConfirmationVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setRemoveConfirmationVisible:(_Bool)arg1;
- (_Bool)isRemoveConfirmationVisible;
- (void)_setRemoveConfirmationShowing:(_Bool)arg1 animated:(_Bool)arg2;
- (struct CGRect)_removeConfirmationEndingFrame;
- (struct CGRect)_removeConfirmationStartingFrame;
- (struct CGRect)targetContentBounds;
- (void)_confirmationAnimationDidEnd;
- (_Bool)isRemoveButtonVisible;
- (void)showRemoveButton:(_Bool)arg1 animated:(_Bool)arg2;
- (float)removeButtonAnimationDuration;
- (struct CGRect)removeButtonEndingFrame;
- (struct CGRect)removeButtonStartingFrame;
- (struct CGRect)defaultRemoveButtonEndingFrame;
- (struct CGRect)defaultRemoveButtonStartingFrame;
- (void)_minusButtonFadeAnimationStopped;
- (void)minusButtonDidHide:(id)arg1;
- (void)_setInterceptMouseEvent:(_Bool)arg1;
- (_Bool)removedFromTargetWhenHidden;
- (void)setAlwaysHideRemoveButton:(_Bool)arg1;
- (void)setRemovedFromTargetWhenHidden:(_Bool)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setTarget:(id)arg1;
- (void)layoutSubviews;
- (void)removeFromSuperview;
- (void)dealloc;
- (id)initWithTarget:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInsertControl : UIRemoveControl
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIInternalEvent : UIEvent
{
    struct __GSEvent *_gsEvent;
    struct __IOHIDEvent *_hidEvent;
}

- (id)_screen;
- (struct __IOHIDEvent *)_hidEvent;
- (void)_setHIDEvent:(struct __IOHIDEvent *)arg1;
- (struct __GSEvent *)_gsEvent;
- (void)_setGSEvent:(struct __GSEvent *)arg1;
- (void)dealloc;

@end

@interface UIMotionEffect : NSObject <NSCopying, NSCoding>
{
    _UIMotionAnalyzerSettings *_preferredMotionAnalyzerSettings;
}

- (void)_setPreferredMotionAnalyzerSettings:(id)arg1;
- (id)_preferredMotionAnalyzerSettings;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_keyPathsAndRelativeValuesForPose:(id)arg1;
- (id)keyPathsAndRelativeValuesForViewerOffset:(struct UIOffset)arg1;
- (void)dealloc;
- (id)init;

@end

@interface UIInterpolatingMotionEffect : UIMotionEffect
{
    double _horizontalAccelerationBoostFactor;
    double _verticalAccelerationBoostFactor;
    NSString *_keyPath;
    long long _type;
    id _minimumRelativeValue;
    id _maximumRelativeValue;
}

@property(retain, nonatomic) id maximumRelativeValue; // @synthesize maximumRelativeValue=_maximumRelativeValue;
@property(retain, nonatomic) id minimumRelativeValue; // @synthesize minimumRelativeValue=_minimumRelativeValue;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
- (void)_setType:(long long)arg1;
- (void)_setKeyPath:(id)arg1;
- (void)_setVerticalAccelerationBoostFactor:(double)arg1;
- (double)_verticalAccelerationBoostFactor;
- (void)_setHorizontalAccelerationBoostFactor:(double)arg1;
- (double)_horizontalAccelerationBoostFactor;
- (id)description;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)keyPathsAndRelativeValuesForViewerOffset:(struct UIOffset)arg1;
- (id)_keyPathsAndRelativeValuesForPose:(id)arg1;
- (id)initWithKeyPath:(id)arg1 type:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBBackdropView : _UIBackdropView
{
    _Bool _primaryBackdrop;
    NSMutableArray *_secondaryBackdrops;
    UIKeyboardBackdropCornerView *_backdropCornerView;
    _Bool _hasUpdatedFrame;
}

+ (void)overlayRelevantSettings:(id)arg1 ontoSettings:(id)arg2;
+ (void)_updatedSecondaryBackdropsWithSettings:(id)arg1;
+ (void)_unregisterSecondaryBackdropView:(id)arg1;
+ (void)_registerSecondaryBackdropView:(id)arg1;
+ (id)triggerNotificationNames;
+ (id)unconditionalTriggerNotificationNames;
@property(readonly, nonatomic) _Bool _hasUpdatedFrame; // @synthesize _hasUpdatedFrame;
- (void)didCallRenderInContextOnBackdropViewLayer;
- (void)willCallRenderInContextOnBackdropViewLayer;
- (void)layoutSubviews;
- (void)_setRenderConfig:(id)arg1;
- (void)applySettings:(id)arg1;
- (void)triggerUpdate:(id)arg1;
- (void)transitionToStyle:(long long)arg1;
- (int)textEffectsVisibilityLevel;
- (void)updateFrame:(struct CGRect)arg1 withCorners:(int)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 primaryBackdrop:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKBSplitImageView : UIView
{
    UIImageView *_fullView;
    UIImageView *_splitLeft;
    UIImageView *_splitRight;
    NSString *_currentFilterType;
}

@property(nonatomic) NSString *filterType; // @synthesize filterType=_currentFilterType;
- (void)setImage:(id)arg1 cachedWidth:(double)arg2 keyplane:(id)arg3;
- (void)setImage:(id)arg1 splitLeft:(id)arg2 splitRight:(id)arg3 keyplane:(id)arg4;
- (void)insertSubviewAtBottom:(id)arg1;
- (_Bool)_shouldInheritScreenScaleAsContentScaleFactor;
- (void)setAlpha:(double)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBBackgroundView : UIKBSplitImageView <UIKBCacheableView>
{
    UIKBTree *_keyplane;
    UITextInputTraits *_inputTraits;
    int _visualStyle;
    NSObject *_geometryCacheKey;
    struct CGRect _splitLeftRect;
    struct CGRect _splitLeftCacheRect;
    struct CGRect _splitRightRect;
    struct CGRect _splitRightCacheRect;
    int _topCorners;
    _Bool _isSplit;
    _Bool _centerFilled;
    _Bool _hasCandidateKeys;
    UIKBRenderConfig *_renderConfig;
}

@property(retain, nonatomic) NSObject *geometryCacheKey; // @synthesize geometryCacheKey=_geometryCacheKey;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) _Bool cacheDeferable;
- (void)displayLayer:(id)arg1;
- (void)layoutSubviews;
- (id)cacheKeysForRenderFlags:(id)arg1;
@property(readonly, nonatomic) NSString *cacheKey;
- (void)drawContentsOfRenderers:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)refreshStyleForKeyplane:(id)arg1 inputTraits:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKBKeyView : UIView <UIKBCacheableView>
{
    UIKBTree *m_keyplane;
    UIKBTree *m_key;
    struct CGRect m_drawFrame;
    struct __CFBoolean *m_allowsCaching;
    UIKBRenderConfig *m_renderConfig;
    CALayer *_keyBorders;
    CALayer *_keyBackgrounds;
    CALayer *_keyForegrounds;
    CALayer *_keyCaps;
    CALayer *_keyCapHint;
    int _renderedKeyState;
    NSString *_cachedTraitsHashString;
    _Bool _renderAsMask;
    UIKeyboardMenuView *_popupMenu;
}

@property(nonatomic) _Bool renderAsMask; // @synthesize renderAsMask=_renderAsMask;
@property(nonatomic) UIKeyboardMenuView *popupMenu; // @synthesize popupMenu=_popupMenu;
@property(retain, nonatomic) NSString *cachedTraitsHashString; // @synthesize cachedTraitsHashString=_cachedTraitsHashString;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=m_renderConfig;
@property(nonatomic) struct CGRect drawFrame; // @synthesize drawFrame=m_drawFrame;
@property(readonly, nonatomic) UIKBTree *key; // @synthesize key=m_key;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=m_keyplane;
- (id)_generateBackdropMaskImage;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawContentsOfRenderers:(id)arg1;
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) _Bool cacheDeferable;
- (void)displayLayer:(id)arg1;
- (void)_popuplateLayer:(id)arg1 withContents:(id)arg2;
- (void)layoutSubviews;
- (_Bool)requiresSublayers;
- (_Bool)_shouldUpdateLayers;
@property(readonly) long long cachedRenderFlags;
- (id)cacheKeysForRenderFlags:(id)arg1;
@property(readonly, nonatomic) NSString *cacheKey;
@property(readonly, nonatomic) struct UIEdgeInsets displayInsets;
- (void)dimKeyCaps:(double)arg1 duration:(double)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)_applyAppearanceInvocations;
- (_Bool)_viewShouldBeOpaque;
- (int)textEffectsVisibilityLevel;
- (void)dealloc;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKBBlurredKeyView : UIKBKeyView
{
    UIKBKeyView *_keyView;
    UIKBBackdropView *_backdropView;
}

- (void)setRenderConfig:(id)arg1;
- (id)renderConfig;
- (void)setDrawFrame:(struct CGRect)arg1;
- (struct CGRect)drawFrame;
- (id)key;
- (id)keyplane;
- (void)dimKeyCaps:(double)arg1 duration:(double)arg2;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (void)setNeedsDisplay;
- (void)displayLayer:(id)arg1;
- (_Bool)requiresSublayers;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

@end

@interface UIKBCacheToken : NSObject <NSCopying>
{
    NSMutableArray *_components;
    NSString *_name;
    double _scale;
    int _emptyFields;
    long long _renderFlags;
}

+ (id)tokenTemplateFilledForKey:(id)arg1 style:(int)arg2 size:(struct CGSize)arg3;
+ (id)tokenTemplateForKey:(id)arg1 name:(id)arg2 style:(int)arg3 size:(struct CGSize)arg4;
+ (id)tokenTemplateForKey:(id)arg1 style:(int)arg2 size:(struct CGSize)arg3;
+ (id)tokenForKeyMask:(id)arg1 style:(CDStruct_961fb75c)arg2 displayInsets:(struct UIEdgeInsets)arg3;
+ (id)tokenForKey:(id)arg1 style:(CDStruct_961fb75c)arg2 displayInsets:(struct UIEdgeInsets)arg3;
+ (id)tokenForKey:(id)arg1 style:(CDStruct_961fb75c)arg2;
+ (id)tokenForKeyplane:(id)arg1;
@property(nonatomic) long long renderFlags; // @synthesize renderFlags=_renderFlags;
@property(nonatomic) int emptyFields; // @synthesize emptyFields=_emptyFields;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (id)stringForRenderFlags:(long long)arg1 lightKeyboard:(_Bool)arg2;
- (id)stringForSplitState:(_Bool)arg1;
- (id)stringForState:(int)arg1;
- (id)stringForKey:(id)arg1 state:(int)arg2;
@property(readonly, nonatomic) NSString *string;
- (id)stringForComponentArray:(id)arg1 additionalValues:(CDUnknownBlockType)arg2;
- (id)stringForConstruction:(CDUnknownBlockType)arg1;
- (int)_writeArray:(id)arg1 toStr:(char *)arg2 maxLen:(int)arg3;
- (int)_writeEdgeInsets:(struct UIEdgeInsets)arg1 toStr:(char *)arg2 maxLen:(int)arg3;
- (int)_writeNumber:(float)arg1 toStr:(char *)arg2;
- (int)_writeString:(id)arg1 toStr:(char *)arg2 maxLen:(int)arg3;
@property(readonly, nonatomic) _Bool hasKey;
@property(nonatomic) int displayHint;
@property(nonatomic) int rowHint;
@property(nonatomic) struct CGSize size;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithComponents:(id)arg1 name:(id)arg2;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBCacheToken_Key : UIKBCacheToken
{
    CDUnion_2c5a7b77 _style;
    NSString *_cacheDisplayString;
    int _displayTypeHint;
    int _displayRowHint;
    struct CGSize _size;
    int _state;
    int _clipCorners;
    _Bool _usesInsets;
    struct UIEdgeInsets _displayInsets;
}

+ (id)tokenForKey:(id)arg1 style:(CDStruct_961fb75c)arg2 displayInsets:(struct UIEdgeInsets)arg3;
+ (id)tokenForKey:(id)arg1 style:(CDStruct_961fb75c)arg2;
- (id)stringForRenderFlags:(long long)arg1 lightKeyboard:(_Bool)arg2;
- (id)string;
- (id)_stringWithAdditionalValues:(CDUnknownBlockType)arg1;
- (_Bool)hasKey;
- (void)setDisplayHint:(int)arg1;
- (int)displayHint;
- (void)setRowHint:(int)arg1;
- (int)rowHint;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)dealloc;
- (id)_initWithKey:(id)arg1 style:(CDStruct_961fb75c)arg2 displayInsets:(struct UIEdgeInsets)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKBCacheToken_KeyFilledTemplate : UIKBCacheToken_Key
{
}

+ (id)tokenTemplateFilledForKey:(id)arg1 style:(int)arg2 size:(struct CGSize)arg3;
- (id)_stringWithAdditionalValues:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBCacheToken_KeyMask : UIKBCacheToken_Key
{
}

+ (id)tokenForKey:(id)arg1 style:(CDStruct_961fb75c)arg2 displayInsets:(struct UIEdgeInsets)arg3;
- (id)_stringWithAdditionalValues:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBCacheToken_KeyTemplate : UIKBCacheToken_Key
{
}

+ (id)tokenTemplateForKey:(id)arg1 name:(id)arg2 style:(int)arg3 size:(struct CGSize)arg4;
- (id)_stringWithAdditionalValues:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBCacheToken_Keyplane : UIKBCacheToken
{
    struct CGSize _size;
    CDUnion_2c5a7b77 _style;
    NSString *_geometrySetName;
    NSString *_keySetName;
}

+ (id)tokenForKeyplane:(id)arg1;
- (id)stringForSplitState:(_Bool)arg1;
- (void)dealloc;
- (id)_initWithKeyplane:(id)arg1 keylayout:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBCandidateCollectionView : UICollectionView
{
}

- (void)configureAsCandidatesBar;
- (_Bool)_selectAndScrollToItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(unsigned long long)arg3;
@property(readonly, nonatomic) NSIndexPath *selectedItemIndexPath;

@end

__attribute__((visibility("hidden")))
@interface UIKBCandidateGapView : UIKBKeyView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (_Bool)shouldCache;
- (id)cacheKeysForRenderFlags:(id)arg1;
- (id)cacheKey;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBCandidateView : UIKBKeyView <UIKeyboardCandidateGridCollectionViewControllerDelegate>
{
    UIView *_clippingView;
    UIView *_topBorder;
    unsigned long long _selectedSortIndex;
    UIKeyboardCandidateGridCollectionViewController *_collectionViewController;
    UIKeyboardCandidateSortControl *_scrollViewSortControl;
    CDStruct_961fb75c _visualStyling;
}

@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(retain, nonatomic) UIKeyboardCandidateSortControl *scrollViewSortControl; // @synthesize scrollViewSortControl=_scrollViewSortControl;
@property(retain, nonatomic) UIKeyboardCandidateGridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(nonatomic) unsigned long long selectedSortIndex; // @synthesize selectedSortIndex=_selectedSortIndex;
@property(readonly, nonatomic) TIKeyboardCandidateResultSet *candidateResultSet;
- (id)headerViewForCandidateSet:(id)arg1;
- (unsigned long long)gridCollectionViewNumberOfColumns:(id)arg1;
- (unsigned long long)gridCollectionViewSelectedSortMethodIndex:(id)arg1;
- (id)groupedCandidatesFromCandidateSet:(id)arg1 forSortIndex:(unsigned long long)arg2;
- (void)sortSelectionBarAction:(id)arg1;
- (void)clearCollectionViewController;
- (void)updateCollectionViewController:(_Bool)arg1;
- (void)updateCollectionViewController;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (_Bool)showCandidate:(id)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;
- (_Bool)isTenKey;
- (id)candidateList;
- (void)setRenderConfig:(id)arg1;
- (void)displayLayer:(id)arg1;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (void)addSubview:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKBGradient : NSObject <NSCopying>
{
    NSString *_gradientName;
    NSString *_flatColorName;
    NSString *_startColorName;
    NSString *_endColorName;
    NSArray *_colors;
    double _middleLocation;
    double _opacity;
    _Bool _horizontal;
    _Bool _usesRGBColors;
    _Bool _didQueryRGBColors;
}

+ (id)gradientWith3Colors:(id)arg1 middleLocation:(double)arg2;
+ (id)gradientWithStartColor:(id)arg1 endColor:(id)arg2;
+ (id)gradientWithFlatColor:(id)arg1;
+ (id)gradientWithName:(id)arg1;
@property(nonatomic) _Bool horizontal; // @synthesize horizontal=_horizontal;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWith3Colors:(id)arg1 middleLocation:(double)arg2;
- (id)initWithStartColor:(id)arg1 endColor:(id)arg2;
- (id)initWithFlatColor:(id)arg1;
- (id)initWithName:(id)arg1;
- (struct CGGradient *)CGGradient;
@property(readonly, nonatomic) _Bool usesRGBColors;

@end

__attribute__((visibility("hidden")))
@interface UIKBColorGradient : UIKBGradient
{
    UIColor *_color;
}

+ (id)gradientWithUIColor:(id)arg1;
- (struct CGGradient *)CGGradient;
- (void)dealloc;
- (id)initWithUIColor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBCursorSelection : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface UIKBDimmingView : UIView
{
    UIKBTree *_keyplane;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)refreshStyleForKeyplane:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBEdgeEffect : NSObject <UIKBRenderEffect>
{
    NSString *_colorName;
    unsigned long long _edges;
    double _inset;
    double _weight;
    UIKBGradient *_gradient;
    double _opacity;
}

+ (id)effectWithColor:(id)arg1 edges:(unsigned long long)arg2 inset:(double)arg3 weight:(double)arg4;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(retain, nonatomic) UIKBGradient *gradient; // @synthesize gradient=_gradient;
@property(nonatomic) double weight; // @synthesize weight=_weight;
@property(nonatomic) double inset; // @synthesize inset=_inset;
@property(nonatomic) unsigned long long edges; // @synthesize edges=_edges;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGColor *)CGColor;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithColor:(id)arg1 edges:(unsigned long long)arg2 inset:(double)arg3 weight:(double)arg4;
@property(readonly, nonatomic) SEL renderSelector;
@property(readonly, nonatomic) _Bool renderUnder;
@property(readonly, nonatomic) _Bool isValid;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIKBGeometry : NSObject <NSCoding, NSCopying>
{
    NSString *m_name;
    CDStruct_73524d89 m_x;
    CDStruct_73524d89 m_y;
    CDStruct_73524d89 m_w;
    CDStruct_73524d89 m_h;
    CDStruct_73524d89 m_paddingTop;
    CDStruct_73524d89 m_paddingLeft;
    CDStruct_73524d89 m_paddingBottom;
    CDStruct_73524d89 m_paddingRight;
    _Bool m_explicitlySpecified;
}

+ (id)codeStringForValue:(CDStruct_73524d89)arg1;
+ (id)geometryWithOriginValue:(CDStruct_73524d89)arg1 sizeValue:(CDStruct_73524d89)arg2;
+ (id)geometryWithRect:(struct CGRect)arg1;
+ (id)geometry;
@property(nonatomic) _Bool explicitlySpecified; // @synthesize explicitlySpecified=m_explicitlySpecified;
@property(nonatomic, setter=setPaddingRight:) CDStruct_73524d89 paddingRight; // @synthesize paddingRight=m_paddingRight;
@property(nonatomic, setter=setPaddingBottom:) CDStruct_73524d89 paddingBottom; // @synthesize paddingBottom=m_paddingBottom;
@property(nonatomic, setter=setPaddingLeft:) CDStruct_73524d89 paddingLeft; // @synthesize paddingLeft=m_paddingLeft;
@property(nonatomic, setter=setPaddingTop:) CDStruct_73524d89 paddingTop; // @synthesize paddingTop=m_paddingTop;
@property(nonatomic, setter=setH:) CDStruct_73524d89 h; // @synthesize h=m_h;
@property(nonatomic, setter=setW:) CDStruct_73524d89 w; // @synthesize w=m_w;
@property(nonatomic, setter=setY:) CDStruct_73524d89 y; // @synthesize y=m_y;
@property(nonatomic, setter=setX:) CDStruct_73524d89 x; // @synthesize x=m_x;
@property(retain, nonatomic) NSString *name; // @synthesize name=m_name;
- (_Bool)usesAutomaticMetrics;
- (_Bool)usesPercentages;
- (id)overrideGeometry:(id)arg1;
- (struct CGRect)paddedFrameWithResolvedFrame:(struct CGRect)arg1;
- (struct CGRect)paddedFrameWithContainingFrame:(struct CGRect)arg1;
- (struct CGRect)frameWithContainingFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (id)shortDescription;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1 rect:(CDStruct_bd7e7c01)arg2 padding:(CDStruct_bd7e7c01)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKBGraphCache : NSObject <_UIScreenBasedObject>
{
    UIScreen *_screen;
    NSMutableDictionary *_graphCache;
}

+ (id)graphCacheForScreen:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *graphCache; // @synthesize graphCache=_graphCache;
@property(readonly) NSDictionary *_options;
- (_Bool)_matchingOptions:(id)arg1;
@property(readonly) UIScreen *_intendedScreen;
- (void)dealloc;
- (id)_initWithScreen:(id)arg1 options:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingPointFIFO : NSObject
{
    UIKBHandwritingPointFIFO *_nextFIFO;
}

@property(retain, nonatomic) UIKBHandwritingPointFIFO *nextFIFO; // @synthesize nextFIFO=_nextFIFO;
- (void)clear;
- (void)flush;
- (void)addPoint:(struct CGPoint)arg1;
- (void)emitPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithFIFO:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingBoxcarFilterPointFIFO : UIKBHandwritingPointFIFO
{
    NSMutableArray *_prevPoints;
    unsigned long long _width;
}

@property(nonatomic) unsigned long long width; // @synthesize width=_width;
@property(retain, nonatomic) NSMutableArray *prevPoints; // @synthesize prevPoints=_prevPoints;
- (void)clear;
- (void)flush;
- (void)addPoint:(struct CGPoint)arg1;
- (void)emitAveragedPoint;
- (void)dealloc;
- (id)initWithFIFO:(id)arg1 width:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingCandidateView : UIKBKeyView <UIKeyboardCandidateList, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    _Bool _usesCandidateSelection;
    id <UIKeyboardCandidateListDelegate> _delegate;
    TIKeyboardCandidateResultSet *_candidateResultSet;
    UIKBCandidateCollectionView *_candidatesCollectionView;
    UIKeyboardCandidatePocketShadow *_pocketShadow;
    CDStruct_961fb75c _visualStyling;
    UIKeyboardCandidateLogButton *_logButton;
    unsigned long long _dummyCellCount;
    double _dummyCellWidth;
}

@property(nonatomic) double dummyCellWidth; // @synthesize dummyCellWidth=_dummyCellWidth;
@property(nonatomic) unsigned long long dummyCellCount; // @synthesize dummyCellCount=_dummyCellCount;
@property(retain, nonatomic) UIKeyboardCandidateLogButton *logButton; // @synthesize logButton=_logButton;
@property(nonatomic) _Bool usesCandidateSelection; // @synthesize usesCandidateSelection=_usesCandidateSelection;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(retain, nonatomic) UIKeyboardCandidatePocketShadow *pocketShadow; // @synthesize pocketShadow=_pocketShadow;
@property(retain, nonatomic) UIKBCandidateCollectionView *candidatesCollectionView; // @synthesize candidatesCollectionView=_candidatesCollectionView;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateResultSet; // @synthesize candidateResultSet=_candidateResultSet;
@property(nonatomic) id <UIKeyboardCandidateListDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *candidates;
@property(readonly, nonatomic) id <UIKeyboardCandidateList> candidateList;
- (void)_setRenderConfig:(id)arg1;
- (void)setRenderConfig:(id)arg1;
- (id)_inheritedRenderConfig;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)selectAndScrollToCandidateAtIndexPath:(id)arg1 animated:(_Bool)arg2;
- (void)reloadDataByAppendingAtEnd:(_Bool)arg1;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (_Bool)hasPreviousPage;
- (_Bool)hasNextPage;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (_Bool)showCandidate:(id)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (void)calculateDummyCellAttributes;
- (void)updatePocketShadowForKeyplane:(id)arg1;
- (void)jumpToCompositions;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingCandidateViewCell : UICollectionViewCell
{
    TIKeyboardCandidate *_candidate;
    CDStruct_961fb75c _visualStyling;
    UILabel *_label;
    UILabel *_secondaryLabel;
    UIKBThemedView *_themedView;
}

+ (double)widthForCandidate:(id)arg1 visualStyling:(CDStruct_961fb75c)arg2;
+ (id)secondaryLabelFont;
+ (id)labelFontForText:(id)arg1;
@property(retain, nonatomic) UIKBThemedView *themedView; // @synthesize themedView=_themedView;
@property(retain, nonatomic) UILabel *secondaryLabel; // @synthesize secondaryLabel=_secondaryLabel;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(copy, nonatomic) TIKeyboardCandidate *candidate; // @synthesize candidate=_candidate;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets edgeInsets;
- (void)drawRect:(struct CGRect)arg1;
- (void)reloadData;
- (void)updateLabels;
- (void)updateThemedView;
- (void)_setRenderConfig:(id)arg1;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingQuadCurvePointFIFO : UIKBHandwritingPointFIFO
{
    NSMutableArray *_prevPoints;
    UIBezierPath *_path;
    UIView<UIKBHandwritingStrokeEnabled> *_strokeView;
}

@property(retain, nonatomic) UIView<UIKBHandwritingStrokeEnabled> *strokeView; // @synthesize strokeView=_strokeView;
@property(retain, nonatomic) UIBezierPath *path; // @synthesize path=_path;
@property(retain, nonatomic) NSMutableArray *prevPoints; // @synthesize prevPoints=_prevPoints;
- (void)clear;
- (void)flush;
- (void)addPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithFIFO:(id)arg1 strokeView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingStrokePointFIFO : UIKBHandwritingPointFIFO
{
    TIHandwritingStrokes *_strokes;
}

@property(retain, nonatomic) TIHandwritingStrokes *strokes; // @synthesize strokes=_strokes;
- (void)clear;
- (void)flush;
- (void)addPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithFIFO:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingStrokeView : UIView <UIKBHandwritingStrokeEnabled>
{
    UIKBHandwritingView *_keyView;
}

@property(retain, nonatomic) UIKBHandwritingView *keyView; // @synthesize keyView=_keyView;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly, nonatomic) double inkWidth;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKBHandwritingView : UIKBKeyView <UIGestureRecognizerDelegate>
{
    UIKBHandwritingStrokeView *_strokeView;
    double _inkWidth;
    struct CGColor *_inkColor;
    struct CGImage *_inkMask;
    NSMutableArray *_interpolatedPaths;
    UIBezierPath *_currentPath;
    UIKBHandwritingStrokePointFIFO *_strokeFIFO;
    UIKBHandwritingBoxcarFilterPointFIFO *_smoothingFIFO;
    UIKBHandwritingQuadCurvePointFIFO *_interpolatingFIFO;
}

@property(retain, nonatomic) UIKBHandwritingQuadCurvePointFIFO *interpolatingFIFO; // @synthesize interpolatingFIFO=_interpolatingFIFO;
@property(retain, nonatomic) UIKBHandwritingBoxcarFilterPointFIFO *smoothingFIFO; // @synthesize smoothingFIFO=_smoothingFIFO;
@property(retain, nonatomic) UIKBHandwritingStrokePointFIFO *strokeFIFO; // @synthesize strokeFIFO=_strokeFIFO;
@property(retain, nonatomic) UIBezierPath *currentPath; // @synthesize currentPath=_currentPath;
@property(retain, nonatomic) NSMutableArray *interpolatedPaths; // @synthesize interpolatedPaths=_interpolatedPaths;
@property(nonatomic) struct CGImage *inkMask; // @synthesize inkMask=_inkMask;
@property(nonatomic) struct CGColor *inkColor; // @synthesize inkColor=_inkColor;
@property(nonatomic) double inkWidth; // @synthesize inkWidth=_inkWidth;
@property(retain, nonatomic) UIKBHandwritingStrokeView *strokeView; // @synthesize strokeView=_strokeView;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)cancelTouchTracking;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)addInkPoint:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)send;
- (void)deleteStrokesAtIndexes:(id)arg1;
- (void)clearAndNotify:(_Bool)arg1;
- (void)updateInkColor;
- (void)updateForKeyplane:(id)arg1 key:(id)arg2;
- (void)setRenderConfig:(id)arg1;
- (_Bool)shouldCache;
- (void)log;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKBInputBackdropView : UIView
{
    UIKBBackdropView *_inputBackdropFullView;
    UIKBBackdropView *_inputBackdropLeftView;
    UIKBBackdropView *_inputBackdropRightView;
    unsigned long long _innerCorners;
    _Bool _isTransitioning;
    double _transitionGap;
    double _transitionLeftOffset;
    _Bool _hasStartRect;
    _Bool _hasEndRect;
    struct CGRect _savedStartRect;
    struct CGRect _savedEndRect;
}

+ (_Bool)_retroactivelyRequiresConstraintBasedLayout;
@property(retain, nonatomic) UIKBBackdropView *inputBackdropRightView; // @synthesize inputBackdropRightView=_inputBackdropRightView;
@property(retain, nonatomic) UIKBBackdropView *inputBackdropLeftView; // @synthesize inputBackdropLeftView=_inputBackdropLeftView;
@property(retain, nonatomic) UIKBBackdropView *inputBackdropFullView; // @synthesize inputBackdropFullView=_inputBackdropFullView;
- (_Bool)_isTransitioning;
- (void)_endSplitTransitionIfNeeded:(_Bool)arg1;
- (void)_beginSplitTransitionIfNeeded:(double)arg1 gapWidth:(double)arg2;
- (void)_setInitialProgressWithFrame:(struct CGRect)arg1;
- (void)_setProgress:(double)arg1 withFrame:(struct CGRect)arg2;
- (void)_setFrame:(struct CGRect)arg1 leftOffset:(double)arg2 gapWidth:(double)arg3 progress:(double)arg4 innerCorners:(unsigned long long)arg5;
- (void)_setFrame:(struct CGRect)arg1 leftOffset:(double)arg2 gapWidth:(double)arg3 progress:(double)arg4;
- (void)layoutInputBackdropToFullWithRect:(struct CGRect)arg1;
- (void)layoutInputBackdropToSplitWithLeftViewRect:(struct CGRect)arg1 andRightViewRect:(struct CGRect)arg2 innerCorners:(int)arg3;
- (void)transitionToStyle:(long long)arg1 isSplit:(_Bool)arg2;
- (int)textEffectsVisibilityLevel;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 primaryBackdrop:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBKeyDisplayContents : NSObject
{
    _Bool _isCustomGlyph;
    _Bool _secondaryIsCustomGlyph;
    _Bool _fillPath;
    _Bool _force1xImages;
    _Bool _stringKeycapOverImage;
    NSString *_displayString;
    NSString *_displayStringImage;
    NSString *_secondaryDisplayStringImage;
    NSString *_secondaryDisplayString;
    NSArray *_variantDisplayStrings;
    NSArray *_variantDisplayImages;
    long long _highlightedVariantIndex;
    long long _displayPathType;
    UIKBKeyDisplayContents *_fallbackContents;
}

+ (id)displayContents;
@property(nonatomic) _Bool stringKeycapOverImage; // @synthesize stringKeycapOverImage=_stringKeycapOverImage;
@property(retain, nonatomic) UIKBKeyDisplayContents *fallbackContents; // @synthesize fallbackContents=_fallbackContents;
@property(nonatomic) _Bool force1xImages; // @synthesize force1xImages=_force1xImages;
@property(nonatomic) _Bool fillPath; // @synthesize fillPath=_fillPath;
@property(nonatomic) long long displayPathType; // @synthesize displayPathType=_displayPathType;
@property(nonatomic) long long highlightedVariantIndex; // @synthesize highlightedVariantIndex=_highlightedVariantIndex;
@property(retain, nonatomic) NSArray *variantDisplayImages; // @synthesize variantDisplayImages=_variantDisplayImages;
@property(retain, nonatomic) NSArray *variantDisplayStrings; // @synthesize variantDisplayStrings=_variantDisplayStrings;
@property(nonatomic) _Bool secondaryIsCustomGlyph; // @synthesize secondaryIsCustomGlyph=_secondaryIsCustomGlyph;
@property(nonatomic) _Bool isCustomGlyph; // @synthesize isCustomGlyph=_isCustomGlyph;
@property(retain, nonatomic) NSString *secondaryDisplayString; // @synthesize secondaryDisplayString=_secondaryDisplayString;
@property(retain, nonatomic) NSString *secondaryDisplayStringImage; // @synthesize secondaryDisplayStringImage=_secondaryDisplayStringImage;
@property(retain, nonatomic) NSString *displayStringImage; // @synthesize displayStringImage=_displayStringImage;
@property(retain, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKBKeyInterval : NSObject
{
    UIKBTree *_key;
    double _interval;
}

@property(nonatomic) double interval; // @synthesize interval=_interval;
@property(retain, nonatomic) UIKBTree *key; // @synthesize key=_key;
- (void)dealloc;
- (id)initWithKey:(id)arg1 interval:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBKeyplaneView : UIKBSplitImageView <UIKBCacheableView>
{
    UIKBTree *_keyplane;
    UIKBTree *_defaultKeyplane;
    UIKBCacheToken *_cacheToken;
    UIKBKeyView *_candidateGapView;
    NSMutableDictionary *_subviewIndex;
    NSMutableDictionary *_activeViewIndex;
    NSMutableDictionary *_renderedKeyViews;
    NSMutableDictionary *_delayedDeactivationKeys;
    NSTimer *_activatedTimer;
    _Bool _performingDeactivation;
    _Bool _shouldDrawRect;
    UIKBRenderConfig *_renderConfig;
    UIKBSplitImageView *_keyBorders;
    UIKBSplitImageView *_keyBackgrounds;
    UIKBSplitImageView *_keyCaps;
}

@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(retain, nonatomic) UIKBCacheToken *cacheToken; // @synthesize cacheToken=_cacheToken;
@property(retain, nonatomic) UIKBTree *defaultKeyplane; // @synthesize defaultKeyplane=_defaultKeyplane;
@property(retain, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
- (void)purgeSubviews;
- (void)purgeKeyViews;
- (void)activateKeys;
- (void)deactivateKeys;
- (void)deactivateKey:(id)arg1 previousState:(int)arg2;
- (void)dimKeyCaps:(double)arg1 duration:(double)arg2;
- (void)updateDecorationViewsIfNeeded;
- (void)deactivateAdaptiveKey:(id)arg1;
- (id)viewForKey:(id)arg1 state:(int)arg2;
- (id)viewForKey:(id)arg1;
- (int)stateForKey:(id)arg1;
- (void)setState:(int)arg1 forKey:(id)arg2;
- (Class)classForKey:(id)arg1;
- (id)containingViewForKey:(id)arg1 withState:(int)arg2;
- (int)cornerMaskForKey:(id)arg1 recursive:(_Bool)arg2;
- (id)cacheIdentifierForKey:(id)arg1 withState:(int)arg2;
- (id)cacheIdentifierForKey:(id)arg1;
- (void)removeKeyFromDelayedDeactivationSet:(id)arg1;
- (void)addKeyToDelayedDeactivationSet:(id)arg1;
- (void)performDelayedDeactivation:(id)arg1;
- (void)scheduleDelayedDeactivation;
- (void)cancelDelayedDeactivation;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawContentsOfRenderers:(id)arg1;
- (_Bool)_shouldDrawLowResBackground;
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) _Bool cacheDeferable;
- (void)displayLayer:(id)arg1;
- (id)cacheKeysForRenderFlags:(id)arg1;
@property(readonly, nonatomic) NSString *cacheKey;
- (void)layoutSubviews;
- (_Bool)isPasscodeStyle;
- (_Bool)validForKeyplane:(id)arg1 withVisualStyle:(int)arg2;
- (void)dealloc;
- (void)removeFromSuperview;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIKBMergeAction : NSObject <NSCopying>
{
    NSString *_remainingKeyName;
    NSString *_disappearingKeyName;
    NSArray *_orderedKeyList;
    UIKBGeometry *_factors;
}

+ (id)mergeActionWithOrderedKeyList:(id)arg1 factors:(id)arg2;
+ (id)mergeActionWithRemainingKeyName:(id)arg1 disappearingKeyName:(id)arg2 factors:(id)arg3;
@property(retain, nonatomic) UIKBGeometry *factors; // @synthesize factors=_factors;
@property(retain, nonatomic) NSArray *orderedKeyList; // @synthesize orderedKeyList=_orderedKeyList;
@property(retain, nonatomic) NSString *disappearingKeyName; // @synthesize disappearingKeyName=_disappearingKeyName;
@property(retain, nonatomic) NSString *remainingKeyName; // @synthesize remainingKeyName=_remainingKeyName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderConfig : NSObject <NSCopying>
{
    _Bool _lightKeyboard;
    double _blurRadius;
    double _blurSaturation;
    double _keycapOpacity;
    double _lightLatinKeycapOpacity;
}

+ (long long)backdropStyleForStyle:(long long)arg1;
+ (id)configForAppearance:(long long)arg1;
+ (id)darkConfig;
+ (id)defaultConfig;
@property(nonatomic) _Bool lightKeyboard; // @synthesize lightKeyboard=_lightKeyboard;
@property(nonatomic) double lightLatinKeycapOpacity; // @synthesize lightLatinKeycapOpacity=_lightLatinKeycapOpacity;
@property(nonatomic) double keycapOpacity; // @synthesize keycapOpacity=_keycapOpacity;
@property(nonatomic) double blurSaturation; // @synthesize blurSaturation=_blurSaturation;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
@property(readonly, nonatomic) long long backdropStyle;
@property(readonly, nonatomic) _Bool whiteText;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface UIKBRenderFactory : NSObject
{
    UIKBRenderConfig *_renderConfig;
    NSMutableArray *_segmentTraits;
    double _rivenSizeFactor;
    _Bool _lightweightFactory;
    double _scale;
    _Bool _boldTextEnabled;
}

+ (id)segmentedControlColor:(_Bool)arg1;
+ (id)cacheKeyForString:(id)arg1 withRenderFlags:(long long)arg2 renderConfig:(id)arg3;
+ (id)lightweightFactoryForVisualStyle:(CDStruct_961fb75c)arg1 renderConfig:(id)arg2;
+ (id)factoryForVisualStyle:(CDStruct_961fb75c)arg1 renderConfig:(id)arg2;
+ (Class)factoryClassForVisualStyle:(CDStruct_961fb75c)arg1;
+ (long long)_graphicsQuality;
+ (_Bool)_enabled;
@property(readonly, nonatomic) _Bool boldTextEnabled; // @synthesize boldTextEnabled=_boldTextEnabled;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) _Bool lightweightFactory; // @synthesize lightweightFactory=_lightweightFactory;
@property(nonatomic) double rivenSizeFactor; // @synthesize rivenSizeFactor=_rivenSizeFactor;
@property(readonly, nonatomic) NSArray *segmentTraits; // @synthesize segmentTraits=_segmentTraits;
@property(readonly, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (id)thinTextFontName;
- (id)lightTextFontName;
- (id)lightPadKeycapsFontName;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;
- (id)controlKeyShadowColorName;
- (id)defaultKeyShadowColorName;
- (id)controlKeyForegroundColorName;
- (id)controlKeyBackgroundColorName;
- (id)defaultKeyBackgroundColorName;
- (void)removeAllLayoutSegments;
- (void)addLayoutSegment:(id)arg1;
- (_Bool)useBlueThemingForKey:(id)arg1;
- (_Bool)shouldClearBaseDisplayStringForVariants;
- (id)displayContentsForKey:(id)arg1;
- (id)keyImageNameWithSkinnyVariation:(id)arg1;
- (double)skinnyKeyThreshold;
- (id)boldKeyImageName;
- (id)undoKeyImageName;
- (id)pasteKeyImageName;
- (id)copyKeyImageName;
- (id)cutKeyImageName;
- (id)rightArrowKeyImageName;
- (id)leftArrowKeyImageName;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (id)deleteKeyImageName;
- (id)handwritingMoreKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)dismissKeyImageName;
- (id)dictationKeyImageName;
- (id)globalEmojiKeyImageName;
- (id)globalKeyImageName;
- (id)traitsHashStringForKey:(id)arg1 withGeometry:(id)arg2 controlOpacities:(_Bool)arg3;
- (id)hashStringElement;
- (id)traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (void)setupLayoutSegments;
- (void)lowQualityTraits:(id)arg1;
- (double)translucentGapWidth;
- (void)scaleTraits:(id)arg1;
- (double)RivenFactor:(double)arg1;
- (id)initWithRenderConfig:(id)arg1 skipLayoutSegments:(_Bool)arg2;
- (void)dealloc;
- (void)modifyTraitsForDetachedInputSwitcher:(id)arg1 withKey:(id)arg2;
- (double)keyCornerRadius;
- (id)extraPasscodePaddleTraits;
- (id)passcodeShiftedControlKeyTraits;
- (id)passcodeActiveControlKeyTraits;
- (id)passcodeControlKeyTraits;
- (id)passcodeKeyEdgeColorName;
- (double)passcodeEdgeWeight;
- (id)passcodeBackgroundTraitsForKeyplane:(id)arg1;
- (void)modifyKeyTraitsForPasscode:(id)arg1 forKey:(id)arg2 onKeyplane:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory10Key : UIKBRenderFactory
{
}

+ (_Bool)_isActiveKeyplaneSwitchKey:(id)arg1;
- (void)setupColumnLayoutSegmentsWithControlWidth:(double)arg1;
- (id)shiftedWhiteControlKeyTraits;
- (id)shiftedControlKeyTraits;
- (id)activeControlKeyTraits;
- (id)controlKeyTraits;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (struct CGPoint)numberPadVBarSecondaryTextOffset;
- (struct CGPoint)numberPadKeySecondaryTextOffset;
- (struct CGPoint)numberPadKeyPrimaryTextOffset;
- (double)numberPadKeyPrimarySymbolSize;
- (struct CGPoint)dictationKeyTextOffset;
- (struct CGPoint)globeKeyTextOffset;
- (struct CGPoint)abcKeyTextOffset;
- (unsigned long long)edgesAdjustedForTranslucentGapsForGeometry:(id)arg1 key:(id)arg2 onKeyplane:(id)arg3;
- (double)interkeyGapsCenterXOfKeyplaneFrame:(struct CGRect)arg1;
- (struct UIEdgeInsets)topEdgeAdjustmentInsets;
- (id)_preferredScriptFontForRendering:(int)arg1;
- (id)displayContentsForKey:(id)arg1;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)controlKeyBackgroundColorName;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory10Key_Portrait : UIKBRenderFactory10Key
{
}

- (void)setupLayoutSegments;
- (double)controlColumnWidthFactor;
- (struct CGPoint)dictationKeyTextOffset;
- (struct CGPoint)globeKeyTextOffset;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory10Key_Landscape : UIKBRenderFactory10Key_Portrait
{
}

- (double)controlColumnWidthFactor;
- (struct CGPoint)numberPadVBarSecondaryTextOffset;
- (struct CGPoint)numberPadKeySecondaryTextOffset;
- (struct CGPoint)numberPadKeyPrimaryTextOffset;
- (double)numberPadKeyPrimarySymbolSize;
- (struct CGPoint)abcKeyTextOffset;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory10Key_LandscapeChoco : UIKBRenderFactory10Key_Landscape
{
}

- (double)controlColumnWidthFactor;
- (void)setupColumnLayoutSegmentsWithControlWidth:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory10Key_LandscapeTruffle : UIKBRenderFactory10Key_Landscape
{
}

- (double)controlColumnWidthFactor;
- (void)setupColumnLayoutSegmentsWithControlWidth:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory50On_Portrait : UIKBRenderFactory10Key
{
}

- (void)setupLayoutSegments;
- (double)controlColumnWidthFactor;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (double)deleteKeyFontSize;
- (double)spaceKeyFontSize;
- (double)returnKeyFontSize;
- (double)keyplaneSwitchKeyFontSize;
- (double)keyCornerRadius;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory50On_Landscape : UIKBRenderFactory50On_Portrait
{
}

- (double)keyCornerRadius;
- (double)deleteKeyFontSize;
- (double)spaceKeyFontSize;
- (double)returnKeyFontSize;
- (double)keyplaneSwitchKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory_Emoji : UIKBRenderFactory
{
}

- (id)_emojiBorderColor;
- (id)_emojiCategoryControlKeyActiveTraits;
- (id)_emojiCategoryControlKeyTraits;
- (id)_emojiSpaceKeyBackgroundColorGradient;
- (id)_emojiSpaceKeyActiveBackgroundColorGradient;
- (id)_emojiDefaultControlKeyBackgroundColorGradient;
- (id)_emojiDefaultControlKeyActiveBackgroundColorGradient;
- (id)_emojiInputViewKeyBackgroundColorGradient;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)controlKeyBackgroundColorName;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryEmoji_iPhone : UIKBRenderFactory_Emoji
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)traitsHashStringForKey:(id)arg1 withGeometry:(id)arg2 controlOpacities:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryEmoji_iPad : UIKBRenderFactoryEmoji_iPhone
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (double)keyCornerRadius;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryEmoji_iPad_Landscape : UIKBRenderFactoryEmoji_iPad
{
}

- (double)keyCornerRadius;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryEmoji_iPad_Split : UIKBRenderFactory_Emoji
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (double)keyCornerRadius;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryHWR_Portrait : UIKBRenderFactory10Key
{
}

- (void)setupLayoutSegments;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (double)spaceKeyFontSize;
- (struct CGPoint)moreKeyTextOffset;
- (struct CGPoint)spaceKeyTextOffset;
- (struct CGPoint)deleteGlyphOffset;
- (struct UIEdgeInsets)handwritingAreaInsets;
- (double)handwritingGradientStartLocation;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryHWR_Landscape : UIKBRenderFactoryHWR_Portrait
{
}

- (void)setupLayoutSegments;
- (double)spaceKeyFontSize;
- (struct CGPoint)spaceKeyTextOffset;
- (struct CGPoint)deleteGlyphOffset;
- (struct UIEdgeInsets)handwritingAreaInsets;
- (double)handwritingGradientStartLocation;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryLayoutSegment : NSObject
{
    int _rectCount;
    struct CGRect _rects[3];
    int _triangleCorners[3];
    int _edgeCount;
    unsigned long long _edges[3];
    NSString *_cachedKeyNames[3];
    _Bool _requireAllMatches;
    int _states;
    UIKBRenderTraits *_traits;
}

+ (id)segmentWithTraits:(id)arg1;
@property(nonatomic) _Bool requireAllMatches; // @synthesize requireAllMatches=_requireAllMatches;
@property(nonatomic) int keyStates; // @synthesize keyStates=_states;
@property(readonly, nonatomic) UIKBRenderTraits *traits; // @synthesize traits=_traits;
- (_Bool)containsPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 withKeyplane:(id)arg3;
- (void)addRelativeLayoutRectFromEdge:(unsigned long long)arg1 ofCachedKey:(id)arg2;
- (void)addLayoutRect:(struct CGRect)arg1 asTriangle:(int)arg2;
- (void)dealloc;
- (id)initWithTraits:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryNumberPad : UIKBRenderFactory
{
}

- (void)setupLayoutSegments;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)_customizeSymbolStyle:(id)arg1 secondaryStyle:(id)arg2 forKey:(id)arg3 contents:(id)arg4;
- (struct CGPoint)loneZeroOffset;
- (struct CGPoint)rightColumnLetterOffset;
- (struct CGPoint)rightColumnNumberOffset;
- (struct CGPoint)centerColumnLetterOffset;
- (struct CGPoint)centerColumnNumberOffset;
- (struct CGPoint)leftColumnLetterOffset;
- (struct CGPoint)leftColumnNumberOffset;
- (struct CGPoint)dictationGlyphOffset;
- (struct CGPoint)deleteGlyphOffset;
- (double)letterFontSize;
- (double)numberFontSize;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)controlKeyForegroundColorName;
- (id)controlKeyBackgroundColorName;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryNumberPadLandscape : UIKBRenderFactoryNumberPad
{
}

- (struct CGPoint)loneZeroOffset;
- (struct CGPoint)rightColumnLetterOffset;
- (struct CGPoint)rightColumnNumberOffset;
- (struct CGPoint)centerColumnLetterOffset;
- (struct CGPoint)centerColumnNumberOffset;
- (struct CGPoint)leftColumnLetterOffset;
- (struct CGPoint)leftColumnNumberOffset;
- (struct CGPoint)dictationGlyphOffset;
- (struct CGPoint)deleteGlyphOffset;
- (double)letterFontSize;
- (double)numberFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory_Candidates : UIKBRenderFactory
{
}

- (id)traitsForEdgeGradientWithSize:(struct CGSize)arg1;
- (id)traitsForSortControlBackgroundWithSize:(struct CGSize)arg1 edges:(unsigned long long)arg2;
- (id)traitsForEmptyExtendedPane:(struct CGSize)arg1 rowHeight:(double)arg2 idiomPad:(_Bool)arg3 clipCorners:(_Bool)arg4;
- (id)traitsForExtendedCellSize:(struct CGSize)arg1 highlighted:(_Bool)arg2 groupHeader:(_Bool)arg3 edges:(unsigned long long)arg4;
- (id)traitsForHWRCellSize:(struct CGSize)arg1 highlighted:(_Bool)arg2;
- (id)traitsForToggleButtonWithSize:(struct CGSize)arg1 highlighted:(_Bool)arg2 edges:(unsigned long long)arg3;
- (id)traitsForCellSize:(struct CGSize)arg1 highlighted:(_Bool)arg2 edges:(_Bool)arg3;
- (id)initWithRenderConfig:(id)arg1;
- (id)controlKeyBackgroundColorName;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory_Car : UIKBRenderFactory
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)displayContentsForKey:(id)arg1;
- (double)defaultKeyFontSize;
- (id)activeKeyColor;
- (id)enabledKeyColor;
- (id)dividerColor;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory_CarLinear : UIKBRenderFactory_Car
{
}

- (void)setupLayoutSegments;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)lightTextFontName;
- (double)activeLetterFontSize;
- (double)letterLineFontSize;
- (double)defaultKeyFontSize;
- (double)carKeyRadius;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactory_Monolith : UIKBRenderFactory
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)fontName;
- (struct CGPoint)enabledTextOffset;
- (struct CGPoint)highlightedTextOffset;
- (double)enabledFontSize;
- (double)highlightedFontSize;
- (id)inactiveTextColor;
- (id)activeTextColor;
- (id)highlightedKeyColor;
- (id)displayContentsForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhone : UIKBRenderFactory
{
}

- (void)setupLayoutSegments;
- (id)shiftDeleteGlyphTraits;
- (id)shiftLockControlKeyTraits;
- (id)shiftedControlKeyTraits;
- (id)activeControlKeyTraits;
- (id)controlKeyTraits;
- (double)_row4ControlSegmentWidth;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)variantGeometriesForGeometry:(id)arg1 variantCount:(unsigned long long)arg2;
- (_Bool)_popupMenuStyleForKey:(id)arg1;
- (_Bool)_popupStyleForKey:(id)arg1;
- (void)_customizePopupTraits:(id)arg1 forKey:(id)arg2 onKeyplane:(id)arg3;
- (double)dualStringBottomAdditionalOffsetForDisplayContents:(id)arg1;
- (_Bool)isTallPopup;
- (double)popupFontSize;
- (struct CGPoint)popupSymbolTextOffset;
- (struct CGPoint)variantSymbolTextOffset;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct UIEdgeInsets)variantDisplayFrameInsets;
- (struct UIEdgeInsets)variantPaddedFrameInsets;
- (struct UIEdgeInsets)wideShadowPaddleInsets;
- (void)_customizeSymbolStyle:(id)arg1 forKey:(id)arg2 contents:(id)arg3;
- (void)_customizeGeometry:(id)arg1 forKey:(id)arg2 contents:(id)arg3;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (id)controlKeyForegroundColorName;
- (id)controlKeyBackgroundColorName;
- (double)skinnyKeyThreshold;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (id)deleteKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)dictationKeyImageName;
- (id)globalKeyImageName;
- (struct CGPoint)secondaryShiftKeyOffset;
- (struct CGPoint)shiftKeyOffset;
- (struct CGPoint)deleteKeyOffset;
- (struct CGPoint)moreABCKeyOffset;
- (struct CGPoint)more123KeyOffset;
- (struct CGPoint)dictationKeyOffset;
- (struct CGPoint)realEmojiKeyOffset;
- (struct CGPoint)internationalKeyOffset;
- (struct CGPoint)zhuyinFirstToneKeyOffset;
- (struct CGPoint)dismissKeyOffset;
- (struct CGPoint)undoKeyOffset;
- (struct CGPoint)boldKeyOffset;
- (struct CGPoint)pasteKeyOffset;
- (struct CGPoint)copyKeyOffset;
- (struct CGPoint)cutKeyOffset;
- (struct CGPoint)rightArrowKeyOffset;
- (struct CGPoint)leftArrowKeyOffset;
- (struct CGPoint)returnKeyOffset;
- (struct CGPoint)stringKeyOffset;
- (double)zhuyinFirstToneKeyFontSize;
- (double)moreABCKeyFontSize;
- (double)moreKeyFontSize;
- (double)assistKeyFontSize;
- (double)returnKeyFontSize;
- (double)hintNoneKeyFontSize;
- (double)shiftKeyFontSize;
- (double)deleteKeyFontSize;
- (double)stringKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPad : UIKBRenderFactoryiPhone
{
}

- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (void)setupLayoutSegments;
- (double)_row4ControlSegmentWidth;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)variantGeometriesForGeometry:(id)arg1 variantCount:(unsigned long long)arg2;
- (double)defaultVariantSizeThreshold;
- (struct CGSize)defaultVariantGeometrySize;
- (void)_customizePopupTraits:(id)arg1 forKey:(id)arg2 onKeyplane:(id)arg3;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct UIEdgeInsets)variantDisplayFrameInsets;
- (_Bool)shouldClearBaseDisplayStringForVariants;
- (void)_customizeSymbolStyle:(id)arg1 forKey:(id)arg2 contents:(id)arg3;
- (struct CGPoint)dismissKeyOffset;
- (struct CGPoint)dualStringKeyOffset;
- (double)fallbackFontSize;
- (double)zhuyinFirstToneKeyFontSize;
- (double)facemarkKeyFontSize;
- (double)emailDotKeyFontSize;
- (double)smallKanaKeyFontSize;
- (double)dismissKeyFontSize;
- (double)spaceKeyFontSize;
- (double)dictationKeyFontSize;
- (double)internationalKeyFontSize;
- (double)moreKeyFontSize;
- (double)deleteKeyFontSize;
- (double)shiftKeyFontSize;
- (double)defaultPathWeight;
- (double)fontSizeAdjustmentForNonAlphanumericKeycaps;
- (double)bottomRowDefaultFontSize;
- (double)dualStringKeyFontSizeAdjustment;
- (double)stringKeyFontSize;
- (void)_customizeGeometry:(id)arg1 forKey:(id)arg2 contents:(id)arg3;
- (id)displayContentsForKey:(id)arg1;
- (double)skinnyKeyThreshold;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (id)deleteKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)dismissKeyImageName;
- (id)dictationKeyImageName;
- (id)globalKeyImageName;
- (struct CGPoint)secondaryShiftKeyOffset;
- (struct CGPoint)shiftKeyOffset;
- (struct CGPoint)deleteKeyOffset;
- (struct CGPoint)dictationKeyOffset;
- (struct CGPoint)internationalKeyOffset;
- (double)keyInsetBottom;
- (double)returnKeySymbolFrameInset;
- (double)symbolFrameInset;
- (struct CGRect)dismissKeySymbolFrame;
- (struct CGRect)shiftKeySymbolFrame;
- (double)dualStringKeyMiddleMargin;
- (double)keyCornerRadius;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPad10Key_Portrait : UIKBRenderFactory10Key_Landscape
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (unsigned long long)edgesAdjustedForTranslucentGapsForGeometry:(id)arg1 key:(id)arg2 onKeyplane:(id)arg3;
- (struct UIEdgeInsets)topEdgeAdjustmentInsets;
- (double)controlColumnWidthFactor;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (double)keyCornerRadius;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPad10Key_Landscape : UIKBRenderFactoryiPad10Key_Portrait
{
}

- (double)controlColumnWidthFactor;
- (double)keyCornerRadius;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPadHWR_Portrait : UIKBRenderFactory10Key
{
}

- (void)setupLayoutSegments;
- (double)controlColumnWidthFactor;
- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (struct CGPoint)spaceReturnKeyTextOffset;
- (struct CGPoint)dismissKeyOffset;
- (double)dismissKeyFontSize;
- (double)spaceKeyFontSize;
- (double)dictationKeyFontSize;
- (double)internationalKeyFontSize;
- (double)moreKeyFontSize;
- (double)deleteKeyFontSize;
- (double)keyCornerRadius;
- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPadHWR_Landscape : UIKBRenderFactoryiPadHWR_Portrait
{
}

- (double)controlColumnWidthFactor;
- (double)keyCornerRadius;
- (struct CGPoint)spaceReturnKeyTextOffset;
- (struct CGPoint)dismissKeyOffset;
- (double)dismissKeyFontSize;
- (double)spaceKeyFontSize;
- (double)dictationKeyFontSize;
- (double)internationalKeyFontSize;
- (double)moreKeyFontSize;
- (double)deleteKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPadLandscape : UIKBRenderFactoryiPad
{
}

- (double)defaultVariantSizeThreshold;
- (double)skinnyKeyThreshold;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (id)deleteKeyImageName;
- (id)handwritingMoreKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)dismissKeyImageName;
- (id)dictationKeyImageName;
- (id)globalKeyImageName;
- (struct CGPoint)shiftKeyOffset;
- (struct CGPoint)deleteKeyOffset;
- (struct CGPoint)dismissKeyOffset;
- (struct CGPoint)dualStringKeyOffset;
- (double)fallbackFontSize;
- (double)zhuyinFirstToneKeyFontSize;
- (double)facemarkKeyFontSize;
- (double)emailDotKeyFontSize;
- (double)smallKanaKeyFontSize;
- (double)dismissKeyFontSize;
- (double)spaceKeyFontSize;
- (double)dictationKeyFontSize;
- (double)internationalKeyFontSize;
- (double)moreKeyFontSize;
- (double)deleteKeyFontSize;
- (double)shiftKeyFontSize;
- (double)fontSizeAdjustmentForNonAlphanumericKeycaps;
- (double)bottomRowDefaultFontSize;
- (double)dualStringKeyFontSizeAdjustment;
- (double)stringKeyFontSize;
- (struct CGRect)dismissKeySymbolFrame;
- (struct CGRect)shiftKeySymbolFrame;
- (double)dualStringKeyMiddleMargin;
- (double)keyCornerRadius;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPadLandscapePasscode : UIKBRenderFactoryiPadLandscape
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)hashStringElement;
- (id)shiftLockControlKeyTraits;
- (id)activeControlKeyTraits;
- (id)controlKeyTraits;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (double)passcodeEdgeWeight;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPadPasscode : UIKBRenderFactoryiPad
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)hashStringElement;
- (id)shiftLockControlKeyTraits;
- (id)activeControlKeyTraits;
- (id)controlKeyTraits;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (double)passcodeEdgeWeight;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPadSplit : UIKBRenderFactoryiPad
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (void)_customizeSymbolStyle:(id)arg1 forKey:(id)arg2 contents:(id)arg3;
- (id)variantGeometriesForGeometry:(id)arg1 variantCount:(unsigned long long)arg2;
- (void)_customizeGeometry:(id)arg1 forKey:(id)arg2 contents:(id)arg3;
- (void)_customizeTraits:(id)arg1 forPopupForKey:(id)arg2 withRenderConfig:(id)arg3 keycapsFontName:(id)arg4;
- (double)keyInsetBottom;
- (double)symbolFrameInset;
- (double)defaultPathWeight;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (double)skinnyKeyThreshold;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (id)deleteKeyImageName;
- (double)keyCornerRadius;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)dismissKeyImageName;
- (id)dictationKeyImageName;
- (id)globalEmojiKeyImageName;
- (id)globalKeyImageName;
- (struct CGPoint)shiftKeyOffset;
- (struct CGPoint)deleteKeyOffset;
- (struct CGPoint)dismissKeyOffset;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhoneChoco : UIKBRenderFactoryiPhone
{
}

- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;
- (_Bool)isTallPopup;
- (struct CGPoint)popupSymbolTextOffset;
- (struct CGPoint)variantSymbolTextOffset;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct UIEdgeInsets)wideShadowPaddleInsets;
- (struct CGPoint)moreABCKeyOffset;
- (struct CGPoint)more123KeyOffset;
- (struct CGPoint)dictationKeyOffset;
- (struct CGPoint)internationalKeyOffset;
- (struct CGPoint)returnKeyOffset;
- (double)moreABCKeyFontSize;
- (double)moreKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhoneLandscape : UIKBRenderFactoryiPhone
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)variantGeometriesForGeometry:(id)arg1 variantCount:(unsigned long long)arg2;
- (double)skinnyKeyThreshold;
- (id)boldKeyImageName;
- (id)undoKeyImageName;
- (id)pasteKeyImageName;
- (id)copyKeyImageName;
- (id)cutKeyImageName;
- (id)rightArrowKeyImageName;
- (id)leftArrowKeyImageName;
- (id)dismissKeyImageName;
- (id)shiftLockImageName;
- (id)shiftOnKeyImageName;
- (id)shiftKeyImageName;
- (id)deleteKeyImageName;
- (id)muttitapReverseKeyImageName;
- (id)multitapCompleteKeyImageName;
- (id)dictationKeyImageName;
- (id)globalKeyImageName;
- (struct CGPoint)moreABCKeyOffset;
- (struct CGPoint)more123KeyOffset;
- (double)moreABCKeyFontSize;
- (double)_row4ControlSegmentWidth;
- (_Bool)isTallPopup;
- (double)popupFontSize;
- (struct CGPoint)popupSymbolTextOffset;
- (struct CGPoint)variantSymbolTextOffset;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct UIEdgeInsets)variantDisplayFrameInsets;
- (struct UIEdgeInsets)variantPaddedFrameInsets;
- (struct UIEdgeInsets)wideShadowPaddleInsets;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhoneChocoLandscape : UIKBRenderFactoryiPhoneLandscape
{
}

- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;
- (_Bool)isTallPopup;
- (double)popupFontSize;
- (struct CGPoint)popupSymbolTextOffset;
- (struct CGPoint)variantSymbolTextOffset;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct CGPoint)dismissKeyOffset;
- (struct CGPoint)realEmojiKeyOffset;
- (struct CGPoint)moreABCKeyOffset;
- (struct CGPoint)rightArrowKeyOffset;
- (struct CGPoint)leftArrowKeyOffset;
- (struct CGPoint)undoKeyOffset;
- (struct CGPoint)dictationKeyOffset;
- (struct CGPoint)internationalKeyOffset;
- (struct CGPoint)returnKeyOffset;
- (double)moreABCKeyFontSize;
- (double)moreKeyFontSize;
- (double)assistKeyFontSize;
- (double)stringKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhoneLegacy : UIKBRenderFactory
{
}

- (id)backgroundTraitsForKeyplane:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhonePasscode : UIKBRenderFactoryiPhone
{
}

- (id)_traitsForKey:(id)arg1 onKeyplane:(id)arg2;
- (id)hashStringElement;
- (id)shiftLockControlKeyTraits;
- (id)activeControlKeyTraits;
- (id)controlKeyTraits;
- (id)backgroundTraitsForKeyplane:(id)arg1;
- (double)passcodeEdgeWeight;
- (id)defaultKeyBackgroundColorName;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhoneTruffle : UIKBRenderFactoryiPhone
{
}

- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;
- (_Bool)isTallPopup;
- (double)popupFontSize;
- (struct CGPoint)popupSymbolTextOffset;
- (struct CGPoint)variantSymbolTextOffset;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct UIEdgeInsets)variantPaddedFrameInsets;
- (struct UIEdgeInsets)wideShadowPaddleInsets;
- (struct CGPoint)deleteKeyOffset;
- (struct CGPoint)moreABCKeyOffset;
- (struct CGPoint)more123KeyOffset;
- (struct CGPoint)dictationKeyOffset;
- (struct CGPoint)internationalKeyOffset;
- (struct CGPoint)returnKeyOffset;
- (struct CGPoint)stringKeyOffset;
- (double)moreABCKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderFactoryiPhoneTruffleLandscape : UIKBRenderFactoryiPhoneLandscape
{
}

- (id)thinKeycapsFontName;
- (id)lightKeycapsFontName;
- (_Bool)isTallPopup;
- (double)popupFontSize;
- (struct CGPoint)popupSymbolTextOffset;
- (struct CGPoint)variantSymbolTextOffset;
- (struct UIEdgeInsets)variantSymbolFrameInsets;
- (struct CGPoint)dismissKeyOffset;
- (struct CGPoint)realEmojiKeyOffset;
- (struct CGPoint)moreABCKeyOffset;
- (struct CGPoint)rightArrowKeyOffset;
- (struct CGPoint)leftArrowKeyOffset;
- (struct CGPoint)undoKeyOffset;
- (struct CGPoint)boldKeyOffset;
- (struct CGPoint)pasteKeyOffset;
- (struct CGPoint)copyKeyOffset;
- (struct CGPoint)cutKeyOffset;
- (struct CGPoint)dictationKeyOffset;
- (struct CGPoint)deleteKeyOffset;
- (struct CGPoint)internationalKeyOffset;
- (struct CGPoint)returnKeyOffset;
- (double)assistKeyFontSize;
- (double)moreKeyFontSize;
- (double)moreABCKeyFontSize;
- (double)stringKeyFontSize;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderGeometry : NSObject <NSCopying>
{
    _Bool _detachedVariants;
    _Bool _tallPopup;
    int _roundRectCorners;
    int _popupBias;
    double _roundRectRadius;
    long long _flickDirection;
    NSValue *_splitLeftRect;
    NSValue *_splitRightRect;
    struct CGPoint _popupSource;
    struct CGRect _frame;
    struct CGRect _paddedFrame;
    struct CGRect _displayFrame;
    struct CGRect _symbolFrame;
}

+ (id)geometryWithFrame:(struct CGRect)arg1 paddedFrame:(struct CGRect)arg2;
+ (id)geometryWithShape:(id)arg1;
@property(retain, nonatomic) NSValue *splitRightRect; // @synthesize splitRightRect=_splitRightRect;
@property(retain, nonatomic) NSValue *splitLeftRect; // @synthesize splitLeftRect=_splitLeftRect;
@property(nonatomic) _Bool tallPopup; // @synthesize tallPopup=_tallPopup;
@property(nonatomic) _Bool detachedVariants; // @synthesize detachedVariants=_detachedVariants;
@property(nonatomic) long long flickDirection; // @synthesize flickDirection=_flickDirection;
@property(nonatomic) int popupBias; // @synthesize popupBias=_popupBias;
@property(nonatomic) double roundRectRadius; // @synthesize roundRectRadius=_roundRectRadius;
@property(nonatomic) int roundRectCorners; // @synthesize roundRectCorners=_roundRectCorners;
@property(nonatomic) struct CGPoint popupSource; // @synthesize popupSource=_popupSource;
@property(nonatomic) struct CGRect symbolFrame; // @synthesize symbolFrame=_symbolFrame;
@property(nonatomic) struct CGRect displayFrame; // @synthesize displayFrame=_displayFrame;
@property(nonatomic) struct CGRect paddedFrame; // @synthesize paddedFrame=_paddedFrame;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(readonly, nonatomic) struct UIEdgeInsets paddedInsets;
@property(readonly, nonatomic) struct UIEdgeInsets displayInsets;
- (id)similarShape;
- (id)iPadVariantGeometries:(unsigned long long)arg1;
- (id)iPhoneVariantGeometries:(unsigned long long)arg1;
- (void)applyShadowInsets:(struct UIEdgeInsets)arg1;
- (void)applyInsets:(struct UIEdgeInsets)arg1;
- (void)overlayWithGeometry:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithShape:(id)arg1;
- (id)_copyForDirection:(long long)arg1 positionFactor:(double)arg2 sizeFactor:(double)arg3 scale:(double)arg4;
- (id)copyForPopupDirection:(long long)arg1 scale:(double)arg2;
- (id)copyForFlickDirection:(long long)arg1 scale:(double)arg2;
- (void)applyOffset:(struct CGPoint)arg1;
- (void)makeIntegralWithScale:(double)arg1;
- (void)adjustToTopWithInsets:(struct UIEdgeInsets)arg1;
- (unsigned long long)adjustForTranslucentGapsInFrameWithSize_10Key:(struct CGSize)arg1 centerX:(double)arg2 isInBottomRow:(_Bool)arg3;
- (unsigned long long)adjustForTranslucentGapsWithSize:(struct CGSize)arg1 inFrame:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderTraits : NSObject <NSCopying>
{
    NSMutableArray *_renderEffects;
    NSMutableArray *_foregroundRenderEffects;
    _Bool _honorControlOpacity;
    _Bool _controlOpacities;
    UIKBRenderGeometry *_geometry;
    UIKBGradient *_backgroundGradient;
    UIKBGradient *_layeredBackgroundGradient;
    UIKBGradient *_layeredForegroundGradient;
    UIKBTextStyle *_symbolStyle;
    UIKBTextStyle *_secondarySymbolStyle;
    UIKBTextStyle *_fallbackSymbolStyle;
    NSArray *_variantGeometries;
    UIKBRenderTraits *_variantTraits;
    UIKBRenderTraits *_highlightedVariantTraits;
    double _forceOpacity;
    long long _blendForm;
    NSString *_hashString;
}

+ (id)traitsWithSymbolStyle:(id)arg1;
+ (id)traitsWithGeometry:(id)arg1;
+ (id)emptyTraits;
@property(retain, nonatomic) NSString *hashString; // @synthesize hashString=_hashString;
@property(nonatomic) long long blendForm; // @synthesize blendForm=_blendForm;
@property(nonatomic) double forceOpacity; // @synthesize forceOpacity=_forceOpacity;
@property(nonatomic) _Bool controlOpacities; // @synthesize controlOpacities=_controlOpacities;
@property(retain, nonatomic) UIKBRenderTraits *highlightedVariantTraits; // @synthesize highlightedVariantTraits=_highlightedVariantTraits;
@property(retain, nonatomic) UIKBRenderTraits *variantTraits; // @synthesize variantTraits=_variantTraits;
@property(retain, nonatomic) NSArray *variantGeometries; // @synthesize variantGeometries=_variantGeometries;
@property(readonly, nonatomic) NSArray *foregroundRenderEffects; // @synthesize foregroundRenderEffects=_foregroundRenderEffects;
@property(readonly, nonatomic) NSArray *renderEffects; // @synthesize renderEffects=_renderEffects;
@property(retain, nonatomic) UIKBTextStyle *fallbackSymbolStyle; // @synthesize fallbackSymbolStyle=_fallbackSymbolStyle;
@property(retain, nonatomic) UIKBTextStyle *secondarySymbolStyle; // @synthesize secondarySymbolStyle=_secondarySymbolStyle;
@property(retain, nonatomic) UIKBTextStyle *symbolStyle; // @synthesize symbolStyle=_symbolStyle;
@property(retain, nonatomic) UIKBGradient *layeredForegroundGradient; // @synthesize layeredForegroundGradient=_layeredForegroundGradient;
@property(retain, nonatomic) UIKBGradient *layeredBackgroundGradient; // @synthesize layeredBackgroundGradient=_layeredBackgroundGradient;
@property(retain, nonatomic) UIKBGradient *backgroundGradient; // @synthesize backgroundGradient=_backgroundGradient;
@property(retain, nonatomic) UIKBRenderGeometry *geometry; // @synthesize geometry=_geometry;
- (void)modifyForMasking;
- (void)overlayWithTraits:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)removeAllRenderEffects;
- (void)addForegroundRenderEffect:(id)arg1;
- (void)addRenderEffect:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKBRenderer : NSObject
{
    struct CGContext *_cachingContext;
    CDUnknownBlockType _cachingContextCompletion;
    _Bool _opaque;
    _Bool _containsRGBContent;
    struct CGContext *_ctx;
    double _scale;
    long long _renderFlags;
    NSString *_cacheKey;
    UIImage *_renderedImage;
    struct CGSize _size;
}

+ (void)clearInternalCaches;
+ (struct CGContext *)imageContextWithSize:(struct CGSize)arg1 scale:(double)arg2 opaque:(_Bool)arg3 invert:(_Bool)arg4;
+ (id)rendererWithContext:(struct CGContext *)arg1 withSize:(struct CGSize)arg2 withScale:(double)arg3 opaque:(_Bool)arg4 renderFlags:(long long)arg5;
@property(readonly, nonatomic) _Bool containsRGBContent; // @synthesize containsRGBContent=_containsRGBContent;
@property(retain, nonatomic) NSString *cacheKey; // @synthesize cacheKey=_cacheKey;
@property(readonly, nonatomic) long long renderFlags; // @synthesize renderFlags=_renderFlags;
@property(readonly, nonatomic) _Bool opaque; // @synthesize opaque=_opaque;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)pathForSplitGeometry:(id)arg1;
- (id)pathForFlickPopupGeometries:(id)arg1;
- (id)pathForFlickGeometry:(id)arg1;
- (id)pathForRenderGeometry:(id)arg1;
- (void)addPathForSplitGeometry:(id)arg1;
- (void)addPathForFlickPopupGeometries:(id)arg1;
- (void)addPathForFlickGeometry:(id)arg1;
- (void)addPathForRenderGeometry:(id)arg1;
- (void)addPathForTraits:(id)arg1 displayRect:(struct CGRect *)arg2;
- (void)addRoundRect:(struct CGRect)arg1 radius:(double)arg2 corners:(unsigned long long)arg3;
- (_Bool)renderKeyPathContents:(id)arg1 withTraits:(id)arg2;
- (void)drawShiftPath:(_Bool)arg1 weight:(double)arg2 transform:(struct CGAffineTransform)arg3 color:(struct CGColor *)arg4;
- (void)drawPath:(struct CGPath *)arg1 weight:(double)arg2 transform:(struct CGAffineTransform)arg3 color:(struct CGColor *)arg4 fill:(_Bool)arg5;
- (struct CGPath *)_deleteGlyphPaths;
- (struct CGPath *)_thickShiftGlyphPath;
- (struct CGPath *)_thinShiftGlyphPath;
- (_Bool)renderKeyStringContents:(id)arg1 withTraits:(id)arg2;
- (_Bool)_drawKeyString:(id)arg1 inRect:(struct CGRect)arg2 withStyle:(id)arg3;
- (_Bool)_drawSingleSymbol:(id)arg1 inRect:(struct CGRect)arg2 withStyle:(id)arg3;
- (_Bool)renderKeyImageContents:(id)arg1 withTraits:(id)arg2;
- (void)_drawKeyImage:(id)arg1 inRect:(struct CGRect)arg2 withStyle:(id)arg3 force1xImages:(_Bool)arg4;
- (void)_renderVariantsFromKeyContents:(id)arg1 withTraits:(id)arg2;
- (void)renderKeyContents:(id)arg1 withTraits:(id)arg2;
- (void)renderBackgroundTraits:(id)arg1;
- (void)_completeCacheImageWithTraitsIfNecessary:(id)arg1;
- (_Bool)loadCachedImageForHashString:(id)arg1;
- (struct CGContext *)_contextForCacheImageSize:(struct CGSize)arg1;
- (void)renderBackgroundTraits:(id)arg1 allowCaching:(_Bool)arg2;
- (void)_drawLinearGradient:(id)arg1 inRect:(struct CGRect)arg2;
- (void)renderShadowEffect:(id)arg1 withTraits:(id)arg2;
- (void)renderEdgeEffect:(id)arg1 withTraits:(id)arg2;
@property(readonly, nonatomic) NSData *contextData;
@property(readonly, nonatomic) UIImage *renderedImage; // @synthesize renderedImage=_renderedImage;
@property(readonly, nonatomic) struct CGContext *context; // @synthesize context=_ctx;
- (void)ensureContext;
- (struct CGColor *)_validColorForColor:(struct CGColor *)arg1;
- (void)dealloc;
- (id)initWithContext:(struct CGContext *)arg1 withSize:(struct CGSize)arg2 withScale:(double)arg3 opaque:(_Bool)arg4 renderFlags:(long long)arg5;

@end

@interface UIKBScreenTraits : NSObject
{
    _Bool _knobInput;
    UIScreen *_screen;
    long long _orientation;
    double _keyboardWidth;
}

+ (id)traitsWithScreen:(id)arg1 orientation:(long long)arg2;
@property(nonatomic) double keyboardWidth; // @synthesize keyboardWidth=_keyboardWidth;
@property(readonly, nonatomic) _Bool knobInput; // @synthesize knobInput=_knobInput;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(readonly, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property(readonly, nonatomic) long long idiom;
- (id)initWithScreen:(id)arg1 orientation:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBShadowEffect : NSObject <UIKBRenderEffect>
{
    NSString *_colorName;
    double _weight;
    struct CGSize _offset;
    struct UIEdgeInsets _insets;
    struct UIEdgeInsets _concaveInsets;
}

+ (id)effectWithColor:(id)arg1 offset:(struct CGSize)arg2 insets:(struct UIEdgeInsets)arg3 weight:(double)arg4;
@property(nonatomic) double weight; // @synthesize weight=_weight;
@property(nonatomic) struct UIEdgeInsets concaveInsets; // @synthesize concaveInsets=_concaveInsets;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) struct CGSize offset; // @synthesize offset=_offset;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGColor *)CGColor;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithColor:(id)arg1 offset:(struct CGSize)arg2 insets:(struct UIEdgeInsets)arg3 weight:(double)arg4;
@property(readonly, nonatomic) SEL renderSelector;
@property(readonly, nonatomic) _Bool renderUnder;
@property(readonly, nonatomic) _Bool isValid;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIKBShape : NSObject <NSCoding, NSCopying>
{
    UIKBGeometry *m_geometry;
    struct CGRect m_originalFrame;
    struct CGRect m_frame;
    struct CGRect m_paddedFrame;
    unsigned long long m_uid;
    _Bool m_scaled;
}

+ (id)shapeByCombining:(id)arg1 withShape:(id)arg2;
+ (id)shape;
@property(nonatomic) _Bool scaled; // @synthesize scaled=m_scaled;
@property(readonly, nonatomic) unsigned long long uid; // @synthesize uid=m_uid;
@property(nonatomic) struct CGRect paddedFrame; // @synthesize paddedFrame=m_paddedFrame;
@property(nonatomic) struct CGRect frame; // @synthesize frame=m_frame;
@property(retain, nonatomic) UIKBGeometry *geometry; // @synthesize geometry=m_geometry;
- (void)scaleIfNeeded:(double)arg1 onlyYAxis:(_Bool)arg2;
- (struct CGRect)_scaleRect:(struct CGRect)arg1 inYAxis:(_Bool)arg2;
- (void)scaleWidth:(double)arg1;
- (void)addRectFrom:(id)arg1 mergeActionFactors:(id)arg2;
- (void)addRectFrom:(id)arg1 widthFraction:(double)arg2 heightFraction:(double)arg3 adjustOriginXFactor:(double)arg4 adjustOriginYFactor:(double)arg5 absoluteOriginFactors:(_Bool)arg6;
- (void)addRectFrom:(id)arg1 widthFraction:(double)arg2 heightFraction:(double)arg3 adjustOriginXFactor:(double)arg4 adjustOriginYFactor:(double)arg5;
- (void)addRectFrom:(id)arg1;
- (id)description;
- (_Bool)shouldUseGeometry;
- (_Bool)isEmpty;
@property(readonly, nonatomic) struct CGRect originalFrame;
- (void)setFrameOnly:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1 resetOriginalFrame:(_Bool)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)makeLikeOther:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithGeometry:(id)arg1 frame:(struct CGRect)arg2 paddedFrame:(struct CGRect)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKBShapeOperator : NSObject
{
    double _scale;
}

+ (id)operatorWithScale:(double)arg1;
@property(nonatomic) double scale; // @synthesize scale=_scale;
- (id)shapesByElaboratingShapes:(id)arg1 insideShape:(id)arg2 count:(long long)arg3;
- (id)shapesByScalingShapes:(id)arg1 factor:(struct CGSize)arg2;
- (id)geometryByScalingShapeGeometry:(id)arg1 factor:(struct CGSize)arg2;
- (id)shapeByScalingShape:(id)arg1 factor:(struct CGSize)arg2;
- (struct CGRect)_scaleRect:(struct CGRect)arg1 factor:(struct CGSize)arg2;
- (CDStruct_c3b9c2ee)_scaleRange:(CDStruct_c3b9c2ee)arg1 factor:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBSplitKeyplaneGenerator : NSObject
{
    NSMutableArray *_rows;
    NSDictionary *_splitLayoutHints;
    UIKBTree *_sourceKeyboard;
    UIKBTree *_sourceKeyplane;
    struct CGSize _splitKeySizeFactor;
    struct CGSize _keyboardSize;
    double _leftSideWidestRow;
    double _rightSideWidestRow;
    long long _keyboardType;
    UIKeyboardSliceSet *_sliceSet;
    UIKeyboardTransitionSlice *_leftSlice;
    UIKeyboardTransitionSlice *_rightSlice;
}

- (id)generateRivenKeyplaneFromKeyplane:(id)arg1 forKeyboard:(id)arg2;
- (id)finalizeSplitKeyplane;
- (void)initializeGeneratorForKeyplane:(id)arg1 name:(id)arg2;
- (void)organizeKeyplaneIntoRows;
- (id)hintsForRow:(id)arg1;
- (void)splitRow:(id)arg1;
- (void)alignSpaceKeyEdges;
- (void)addKey:(id)arg1 withShape:(id)arg2 forRow:(id)arg3 attribs:(id)arg4 left:(_Bool)arg5 force:(_Bool)arg6 isDefaultWidth:(_Bool)arg7;
- (void)commitUncommittedSlices;
- (void)splitSpaceKey:(id)arg1 leftSpace:(id)arg2 left:(struct CGRect)arg3 right:(struct CGRect)arg4;
- (void)addSliceStart:(struct CGRect)arg1 end:(struct CGRect)arg2 startToken:(id)arg3 endToken:(id)arg4 left:(_Bool)arg5 normalization:(int)arg6 isDefaultWidth:(_Bool)arg7 row:(int)arg8;
- (id)keysOrderedByPosition;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKBSplitRow : NSObject
{
    unsigned char _rowIndex;
    double _rowOffset;
    double _rowWidth;
    struct CGSize _defaultKeySize;
    NSMutableArray *_keys;
    NSMutableArray *_vacancies;
    NSDictionary *_hints;
    UIKBTree *_keylistLeft;
    UIKBTree *_geolistLeft;
    UIKBTree *_attrlistLeft;
    UIKBTree *_keylistRight;
    UIKBTree *_geolistRight;
    UIKBTree *_attrlistRight;
}

@property(retain) NSDictionary *hints; // @synthesize hints=_hints;
@property struct CGSize defaultKeySize; // @synthesize defaultKeySize=_defaultKeySize;
@property double rowWidth; // @synthesize rowWidth=_rowWidth;
@property(readonly) NSMutableArray *keys; // @synthesize keys=_keys;
@property double rowOffset; // @synthesize rowOffset=_rowOffset;
@property(nonatomic) unsigned char rowIndex; // @synthesize rowIndex=_rowIndex;
- (id)description;
- (id)listOfType:(int)arg1 left:(_Bool)arg2;
- (id)keyAtIndex:(int)arg1;
- (void)addKey:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface UIKBSplitTraits : NSObject
{
    int _corners;
    struct CGRect _leftFrame;
    struct CGRect _rightFrame;
}

+ (id)traitsWithLeftFrame:(struct CGRect)arg1 rightFrame:(struct CGRect)arg2 corners:(int)arg3;
@property(readonly, nonatomic) int corners; // @synthesize corners=_corners;
@property(readonly, nonatomic) struct CGRect rightFrame; // @synthesize rightFrame=_rightFrame;
@property(readonly, nonatomic) struct CGRect leftFrame; // @synthesize leftFrame=_leftFrame;
- (id)initWithLeftFrame:(struct CGRect)arg1 rightFrame:(struct CGRect)arg2 corners:(unsigned long long)arg3;

@end

@interface UIKBTextEditingTraits : NSObject
{
    _Bool _canToggleBoldface;
    _Bool _canToggleItalics;
    _Bool _canToggleUnderline;
    _Bool _supportStyling;
    _Bool _canCut;
    _Bool _canCopy;
    _Bool _canPaste;
    _Bool _canMoveCursorLeft;
    _Bool _canMoveCursorRight;
    _Bool _isBold;
    _Bool _isItalicized;
    _Bool _isUnderlined;
}

+ (id)traitsWithResponder:(id)arg1 keyMaskFlags:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool isUnderlined; // @synthesize isUnderlined=_isUnderlined;
@property(readonly, nonatomic) _Bool isItalicized; // @synthesize isItalicized=_isItalicized;
@property(readonly, nonatomic) _Bool isBold; // @synthesize isBold=_isBold;
@property(readonly, nonatomic) _Bool canMoveCursorRight; // @synthesize canMoveCursorRight=_canMoveCursorRight;
@property(readonly, nonatomic) _Bool canMoveCursorLeft; // @synthesize canMoveCursorLeft=_canMoveCursorLeft;
@property(readonly, nonatomic) _Bool canPaste; // @synthesize canPaste=_canPaste;
@property(readonly, nonatomic) _Bool canCopy; // @synthesize canCopy=_canCopy;
@property(nonatomic) _Bool canCut; // @synthesize canCut=_canCut;
@property(readonly, nonatomic) _Bool supportStyling; // @synthesize supportStyling=_supportStyling;
@property(readonly, nonatomic) _Bool canToggleUnderline; // @synthesize canToggleUnderline=_canToggleUnderline;
@property(readonly, nonatomic) _Bool canToggleItalics; // @synthesize canToggleItalics=_canToggleItalics;
@property(readonly, nonatomic) _Bool canToggleBoldface; // @synthesize canToggleBoldface=_canToggleBoldface;
- (id)initWithResponder:(id)arg1 keyMaskFlags:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKBTextStyle : NSObject <NSCopying>
{
    NSString *_fontName;
    double _fontSize;
    double _minFontSize;
    double _kerning;
    double _textOpacity;
    NSString *_textColor;
    NSString *_etchColor;
    double _pathWeight;
    long long _selector;
    struct CGPoint _textOffset;
    struct CGPoint _etchOffset;
}

+ (id)styleWithTextColor:(id)arg1;
+ (id)styleWithFontName:(id)arg1 withFontSize:(double)arg2;
@property(nonatomic) long long selector; // @synthesize selector=_selector;
@property(nonatomic) double pathWeight; // @synthesize pathWeight=_pathWeight;
@property(nonatomic) struct CGPoint etchOffset; // @synthesize etchOffset=_etchOffset;
@property(nonatomic) struct CGPoint textOffset; // @synthesize textOffset=_textOffset;
@property(retain, nonatomic) NSString *etchColor; // @synthesize etchColor=_etchColor;
@property(retain, nonatomic) NSString *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) double textOpacity; // @synthesize textOpacity=_textOpacity;
@property(nonatomic) double kerning; // @synthesize kerning=_kerning;
@property(nonatomic) double minFontSize; // @synthesize minFontSize=_minFontSize;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)overlayWithStyle:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKBThemedView : UIView <UIKBCacheableView>
{
    CALayer *_borders;
    CALayer *_background;
    _Bool _lightKeyboard;
    _Bool _active;
    _Bool _usePersistentCaching;
    int _style;
    struct UIEdgeInsets _cacheInsets;
}

@property(nonatomic) _Bool usePersistentCaching; // @synthesize usePersistentCaching=_usePersistentCaching;
@property(nonatomic) struct UIEdgeInsets cacheInsets; // @synthesize cacheInsets=_cacheInsets;
@property(nonatomic) int style; // @synthesize style=_style;
@property(nonatomic) _Bool active; // @synthesize active=_active;
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) _Bool cacheDeferable;
- (void)drawContentsOfRenderers:(id)arg1;
- (id)traitsForCurrentStyle;
- (void)displayLayer:(id)arg1;
- (void)_popuplateLayer:(id)arg1 withContents:(id)arg2;
- (void)layoutSubviews;
- (id)cacheKeysForRenderFlags:(id)arg1;
@property(readonly, nonatomic) NSString *cacheKey;
- (void)_setRenderConfig:(id)arg1;
- (void)didMoveToWindow;
- (_Bool)_canDrawContent;
- (_Bool)_hasInsets;
- (id)initWithFrame:(struct CGRect)arg1 style:(int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIKBTree : NSObject <NSCopying>
{
    int type;
    NSString *name;
    NSMutableDictionary *properties;
    NSMutableArray *subtrees;
    NSMutableDictionary *cache;
    NSString *layoutTag;
}

+ (long long)extraIPhoneIdiom:(long long)arg1 width:(double)arg2 landscape:(_Bool)arg3;
+ (id)keyboard;
+ (id)key;
+ (id)shapesForControlKeyShapes:(id)arg1 options:(int)arg2;
+ (id)mergeStringForKeyName:(id)arg1;
+ (_Bool)shouldSkipCacheString:(id)arg1;
+ (id)stringForType:(int)arg1;
+ (id)treeOfType:(int)arg1;
+ (id)uniqueName;
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag;
@property(retain, nonatomic) NSMutableDictionary *cache; // @synthesize cache;
@property(retain, nonatomic) NSMutableArray *subtrees; // @synthesize subtrees;
@property(retain, nonatomic) NSMutableDictionary *properties; // @synthesize properties;
@property(retain, nonatomic) NSString *name; // @synthesize name;
@property(nonatomic) int type; // @synthesize type;
- (_Bool)renderKeyInKeyplane:(id)arg1;
- (_Bool)_renderAsStringKey;
- (id)cacheDisplayString;
- (_Bool)shouldCacheKey;
- (_Bool)hasLayoutTag:(id)arg1;
- (id)variantDisplayString;
- (void)orderVariantKeys:(_Bool)arg1;
- (_Bool)disablesEdgeSwipe;
- (_Bool)behavesAsShiftKey;
- (_Bool)avoidAutoDeactivation;
- (_Bool)dynamicDisplayTypeHint;
- (double)fadeOutDuration;
- (_Bool)canFadeOutFromState:(int)arg1 toState:(int)arg2;
- (_Bool)modifiesKeyplane;
- (_Bool)avoidsLanguageIndicator;
- (_Bool)isExemptFromInputManagerHitTesting;
- (_Bool)isExemptFromInputManagerLayout;
- (void)setForceMultitap:(_Bool)arg1;
- (_Bool)forceMultitap;
- (void)setClipCorners:(int)arg1;
- (int)clipCorners;
- (void)setSplitMode:(int)arg1;
- (int)splitMode;
- (void)setDisabled:(_Bool)arg1;
- (_Bool)disabled;
- (void)setFlickDirection:(long long)arg1;
- (long long)flickDirection;
- (id)variantPopupBias;
- (void)setVariantPopupBias:(id)arg1;
- (void)setGhost:(_Bool)arg1;
- (_Bool)ghost;
- (void)setVisible:(_Bool)arg1;
- (_Bool)visible;
- (void)setOverrideDisplayString:(id)arg1;
- (id)overrideDisplayString;
- (void)setRendering:(int)arg1;
- (int)rendering;
- (void)setDisplayRowHint:(int)arg1;
- (int)displayRowHint;
- (void)setTextAlignment:(long long)arg1;
- (long long)textAlignment;
- (void)setHighlightedVariantIndex:(long long)arg1;
- (long long)highlightedVariantIndex;
- (void)setDisplayTypeHint:(int)arg1;
- (int)displayTypeHint;
- (void)setVariantType:(int)arg1;
- (int)variantType;
- (void)setInteractionType:(int)arg1;
- (int)interactionType;
- (void)setDisplayType:(int)arg1;
- (int)displayType;
- (id)localizationKey;
- (void)setDisplayString:(id)arg1;
- (id)displayString;
- (id)fullRepresentedString;
- (void)setRepresentedString:(id)arg1;
- (id)representedString;
- (void)updateVariantTypeForActions:(unsigned int)arg1;
- (int)_variantType;
- (void)setState:(int)arg1;
- (int)state;
- (id)activeShapesFromOutputShapes:(id)arg1 inputShapes:(id)arg2;
- (void)setActiveGeometriesList:(id)arg1;
- (id)activeGeometriesList;
- (void)setGeometriesList:(id)arg1;
- (id)geometriesList;
- (id)listShapes;
- (id)attributeSet:(_Bool)arg1;
- (id)geometrySet:(_Bool)arg1;
- (id)keySet;
- (void)updateMoreAndInternationalKeysWithOptions:(int)arg1;
- (void)mergeKeyNames:(id)arg1;
- (void)subsumeDisappearingKeyName:(id)arg1 intoKeyName:(id)arg2 factors:(id)arg3;
- (id)keysForMergeConditions;
- (void)updateDictationKeyOnNumberPads:(_Bool)arg1;
- (id)findLeftMoreKey;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
- (_Bool)looksLike:(id)arg1;
- (_Bool)supportsType:(long long)arg1;
- (id)autolocalizedKeyCacheIterator;
- (int)dragThreshold;
- (long long)handBias;
- (double)primaryKeylayoutOffset;
- (double)primaryKeylayoutWidthRatio;
- (_Bool)isSplit;
- (void)setIsGenerated:(_Bool)arg1;
- (_Bool)isGenerated;
- (_Bool)isLetters;
- (_Bool)looksLikeShiftAlternate;
- (_Bool)usesKeyCharging;
- (_Bool)usesAdaptiveKeys;
- (_Bool)isShiftKeyPlaneChooser;
- (_Bool)noLanguageIndicator;
- (_Bool)notUseCandidateSelection;
- (_Bool)shouldSkipCandidateSelectionForVariants;
- (_Bool)shouldSkipCandidateSelection;
- (_Bool)isAlphabeticPlane;
- (_Bool)isShiftKeyplane;
- (id)shiftAlternateKeyplaneName;
- (id)alternateKeyplaneName;
- (_Bool)usesAutoShift;
- (id)keysWithString:(id)arg1;
- (id)keysByKeyName:(id)arg1;
- (id)geometriesOrderedByPosition;
- (id)keysOrderedByPosition;
- (id)keysOrderedByPositionWithoutZip;
- (void)clearTransientCaches;
- (id)keyAttributes;
- (id)geometries;
- (id)keys;
- (void)_addKeylayoutKeys:(id)arg1;
- (void)setAttributes:(id)arg1;
- (id)keyplaneForKey:(id)arg1;
- (id)keyForString:(id)arg1;
- (void)precacheLayoutName:(id)arg1;
- (id)layoutName;
- (void)cacheKey:(id)arg1;
- (id)_cacheRootNameForKey:(id)arg1;
- (id)firstCachedKeyWithName:(id)arg1;
- (id)cachedKeysByKeyName:(id)arg1;
- (void)setVisualStyling:(CDStruct_961fb75c)arg1;
- (CDStruct_961fb75c)visualStyling;
- (CDStruct_961fb75c)stylingFromVisualStyle;
- (void)setVisualStyle:(int)arg1;
- (int)visualStyle;
- (void)setFrameOnly:(struct CGRect)arg1;
- (void)setPaddedFrame:(struct CGRect)arg1;
- (struct CGRect)paddedFrame;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (struct CGRect)_keyplaneFrame;
- (void)setGeometry:(id)arg1;
- (id)geometry;
- (void)setShape:(id)arg1;
- (id)shape;
- (_Bool)subtreesAreOrdered;
- (_Bool)isLeafType;
- (void)elaborateLayoutWithSize:(struct CGSize)arg1 scale:(double)arg2;
- (long long)_keyCountOnNamedRow:(id)arg1;
- (void)zipAttributes;
- (void)zipGeometrySet;
- (void)zipGeometries:(_Bool)arg1 attributes:(_Bool)arg2;
- (_Bool)_needsScaling;
- (int)indexOfSubtree:(id)arg1;
- (id)subtreesWithProperty:(id)arg1 value:(id)arg2;
- (id)subtreeWithName:(id)arg1 rows:(id)arg2;
- (id)subtreeWithName:(id)arg1;
- (id)subtreeWithType:(int)arg1;
- (id)recursiveDescription;
- (id)description;
- (id)numberForProperty:(id)arg1;
- (_Bool)boolForProperty:(id)arg1;
- (long long)intForProperty:(id)arg1;
- (id)stringForProperty:(id)arg1;
- (_Bool)setObject:(id)arg1 forProperty:(id)arg2;
- (_Bool)isDuplicateOfTree:(id)arg1;
- (_Bool)isEqualToTree:(id)arg1;
- (_Bool)isSameAsTree:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithType:(int)arg1 withName:(id)arg2 withProperties:(id)arg3 withSubtrees:(id)arg4 withCache:(id)arg5;
- (id)initWithType:(int)arg1;
- (_Bool)isHashed;
- (id)componentName;
- (id)unhashedName;
- (id)nameFromAttributes;

@end

__attribute__((visibility("hidden")))
@interface UIKBTreeLocalizedKeylistEnumerator : NSEnumerator
{
    NSDictionary *_keyplaneCache;
    NSEnumerator *_nameEnum;
}

- (id)nextObject;
- (void)dealloc;
- (id)initWithKeyplaneCache:(id)arg1;

@end

@interface UIKBTree_Compile : UIKBTree
{
    NSMutableDictionary *symbols;
    NSMutableDictionary *refs;
}

+ (int)typeForString:(id)arg1;
+ (id)stringEnumForType:(int)arg1;
+ (id)treeOfType:(int)arg1;
+ (id)uniqueNameWithType:(int)arg1;
@property(retain, nonatomic) NSMutableDictionary *refs; // @synthesize refs;
@property(retain, nonatomic) NSMutableDictionary *symbols; // @synthesize symbols;
- (_Bool)_needsScaling;
@property(nonatomic) _Bool variable;
@property(readonly, nonatomic) NSArray *refList;
- (void)setAttributeSet:(id)arg1;
- (id)attributeSet:(_Bool)arg1;
- (void)setGeometrySet:(id)arg1;
- (id)geometrySet:(_Bool)arg1;
- (int)subtreeHash;
- (int)shapeHash;
- (int)symbolHash:(id)arg1;
- (id)symbolValues:(id)arg1 withSymbols:(id)arg2;
- (_Bool)usesSymbols;
- (void)mergePropertiesWithSubtreeRange:(struct _NSRange)arg1 properties:(id)arg2;
- (void)mergePropertiesWithOthers:(id)arg1;
- (void)mergeSymbolsWithOthers:(id)arg1;
- (void)mergeSubtreesWithOthers:(id)arg1;
- (int)indexOfSubtreeWithName:(id)arg1 rows:(id)arg2;
- (int)indexOfSubtreeWithType:(int)arg1;
- (void)setTarget:(id)arg1 forReference:(id)arg2;
- (id)listAtIndex:(int)arg1;
- (_Bool)isSameAsTree:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(int)arg1;
- (void)uniquifyName;
- (id)simpleName;

@end

@interface UIKeyCommand : NSObject <NSCopying, NSSecureCoding>
{
    NSIndexSet *_keyCodes;
    SEL _action;
    long long _buttonType;
    UIEvent *_triggeringEvent;
    NSString *_segueIdentifier;
    UIViewController *_controllerForSegue;
    NSString *_input;
    long long _modifierFlags;
}

+ (id)keyCommandWithInput:(id)arg1 modifierFlags:(long long)arg2 segueIdentifier:(id)arg3;
+ (id)keyCommandWithInput:(id)arg1 modifierFlags:(long long)arg2 buttonType:(long long)arg3;
+ (id)keyCommandWithKeyCodes:(id)arg1 modifierFlags:(long long)arg2 buttonType:(long long)arg3;
+ (id)keyCommandWithKeyCodes:(id)arg1 modifierFlags:(long long)arg2 action:(SEL)arg3;
+ (id)keyCommandWithInput:(id)arg1 modifierFlags:(long long)arg2 action:(SEL)arg3;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) long long modifierFlags; // @synthesize modifierFlags=_modifierFlags;
@property(readonly, nonatomic) NSString *input; // @synthesize input=_input;
- (void)_setViewControllerForSegue:(id)arg1;
- (id)_controllerForSegue;
- (id)_segueIdentifier;
- (void)_setTriggeringEvent:(id)arg1;
- (id)_triggeringEvent;
- (void)_setButtonType:(long long)arg1;
- (long long)_buttonType;
- (id)_keyCodes;
- (void)setAction:(SEL)arg1;
- (SEL)action;
- (_Bool)triggerSegueIfPossible;
- (id)initWithInput:(id)arg1 modifierFlags:(long long)arg2 segueIdentifier:(id)arg3;
- (id)initWithInput:(id)arg1 modifierFlags:(long long)arg2 buttonType:(long long)arg3;
- (id)initWithKeyCodes:(id)arg1 modifierFlags:(long long)arg2 buttonType:(long long)arg3;
- (id)initWithKeyCodes:(id)arg1 modifierFlags:(long long)arg2 action:(SEL)arg3;
- (id)initWithInput:(id)arg1 modifierFlags:(long long)arg2 action:(SEL)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface UIKeyboard : UIView <UIKeyboardImplGeometryDelegate>
{
    UIView *m_snapshot;
    UITextInputTraits *m_defaultTraits;
    _Bool m_typingDisabled;
    _Bool m_minimized;
    _Bool m_respondingToImplGeometryChange;
    long long m_orientation;
    long long m_idiom;
    _Bool m_hasExplicitOrientation;
}

+ (_Bool)splitKeyboardEnabled;
+ (_Bool)isInHardwareKeyboardMode;
+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;
+ (_Bool)shouldMinimizeForHardwareKeyboard;
+ (_Bool)respondsToProxGesture;
+ (_Bool)isOnScreen;
+ (struct CGRect)defaultFrameForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)defaultSize;
+ (void)removeAllDynamicDictionaries;
+ (void)initImplementationNow;
+ (void)clearActiveForScreen:(id)arg1;
+ (void)makeKeyboardActive:(id)arg1 forScreen:(id)arg2;
+ (id)activeKeyboardForScreen:(id)arg1;
+ (void)_clearActiveKeyboard;
+ (id)activeKeyboard;
@property(nonatomic) long long keyboardIdiom; // @synthesize keyboardIdiom=m_idiom;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
@property(nonatomic) _Bool showsCandidatesInline;
- (_Bool)canDismiss;
- (void)implBoundsHeightChangeDone:(double)arg1 suppressNotification:(_Bool)arg2;
- (void)prepareForImplBoundsHeightChange:(double)arg1 suppressNotification:(_Bool)arg2;
- (struct UIPeripheralAnimationGeometry)geometryForImplHeightDelta:(double)arg1;
- (void)keyboardMinMaximized:(id)arg1 finished:(id)arg2 context:(id)arg3;
@property(nonatomic, getter=isMinimized) _Bool minimized;
- (void)maximize;
- (void)minimize;
- (void)_setPasscodeOutlineAlpha:(double)arg1;
- (void)_setRenderConfig:(id)arg1;
- (id)targetWindow;
- (void)responseContextDidChange;
- (void)setCorrectionLearningAllowed:(_Bool)arg1;
- (struct UIPeripheralAnimationGeometry)geometryForMinimize:(_Bool)arg1;
- (void)syncMinimizedStateToHardwareKeyboardAttachedState;
- (_Bool)shouldSaveMinimizationState;
- (void)setShowPredictionBar:(_Bool)arg1;
- (_Bool)showPredictionBar;
- (void)setDisableInteraction:(_Bool)arg1;
- (_Bool)disableInteraction;
- (void)setCursorLocation:(long long)arg1;
- (long long)cursorLocation;
- (void)_moveWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canHandleEvent:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (int)textEffectsVisibilityLevel;
- (void)displayLayer:(id)arg1;
- (void)setNeedsDisplay;
- (void)_deactivateForBackgrounding;
- (void)deactivate;
- (_Bool)isActive;
- (void)activate;
@property(nonatomic) _Bool typingEnabled;
- (void)takeSnapshot;
- (void)clearSnapshot;
- (id)delegate;
- (void)setDefaultTextInputTraits:(id)arg1;
- (id)defaultTextInputTraits;
- (void)setReturnKeyEnabled:(_Bool)arg1;
- (_Bool)returnKeyEnabled;
@property(nonatomic) _Bool caretVisible;
@property(nonatomic) _Bool caretBlinks;
- (_Bool)hasAutocorrectPrompt;
- (void)acceptAutocorrection;
- (void)removeAutocorrectPrompt;
- (void)geometryChangeDone:(_Bool)arg1;
- (void)prepareForGeometryChange;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setOrientation:(long long)arg1;
- (long long)interfaceOrientation;
- (void)updateLayout;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)clearActivePerScreenIfNeeded;
- (_Bool)isActivePerScreen;
- (void)dealloc;
- (id)initLazily;
- (id)initWithDefaultSize;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 lazily:(_Bool)arg2;
- (void)autoAdjustOrientationForSize:(struct CGSize)arg1;
- (void)autoAdjustOrientation;
- (void)manualKeyboardWasOrderedOut;
- (void)manualKeyboardWillBeOrderedOut;
- (void)manualKeyboardWasOrderedIn;
- (void)manualKeyboardWillBeOrderedIn;
- (long long)_positionInCandidateList:(id)arg1;
- (_Bool)_hasCandidates;
- (void)_acceptCurrentCandidate;
- (id)_getAutocorrection;
- (void)_setAutocorrects:(_Bool)arg1;
- (void)_setInputMode:(id)arg1;
- (id)_typeCharacter:(id)arg1 withError:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;
- (id)_touchPoint:(struct CGPoint)arg1;
- (void)_setSplit:(_Bool)arg1;
- (void)_setUndocked:(_Bool)arg1;
- (void)_changeToKeyplane:(id)arg1;
- (id)_keyplaneNamed:(id)arg1;
- (id)_keyplaneForKey:(id)arg1;
- (id)_baseKeyForRepresentedString:(id)arg1;
- (id)_getLocalizedInputMode;
- (id)_getCurrentKeyboardName;
- (id)_getCurrentKeyplaneName;
- (_Bool)_isAutomaticKeyboard;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardAutocorrectionController : NSObject
{
    TIAutocorrectionList *_autocorrectionList;
    _Bool _needsAutocorrection;
    _Bool _deferredAutocorrection;
    _Bool _requestedAutocorrection;
}

@property(nonatomic) _Bool requestedAutocorrection; // @synthesize requestedAutocorrection=_requestedAutocorrection;
@property(nonatomic) _Bool deferredAutocorrection; // @synthesize deferredAutocorrection=_deferredAutocorrection;
@property(nonatomic) _Bool needsAutocorrection; // @synthesize needsAutocorrection=_needsAutocorrection;
- (void)requestAutocorrectionWithExecutionContext:(id)arg1;
- (_Bool)hasAutocorrection;
- (void)clearAutocorrection;
- (void)setNeedsAutocorrection;
@property(retain, nonatomic) TIAutocorrectionList *autocorrectionList;
@property(readonly, nonatomic) TIKeyboardCandidate *autocorrection;
- (void)updateSuggestionViews;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardAutomatic : UIKeyboard
{
    _Bool showsCandidateBar;
    _Bool showsCandidateInline;
    _Bool receivedCandidatesInCurrentInputMode;
    _Bool caretBlinks;
}

@property(nonatomic) _Bool caretBlinks; // @synthesize caretBlinks;
@property(nonatomic) _Bool receivedCandidatesInCurrentInputMode; // @synthesize receivedCandidatesInCurrentInputMode;
@property(nonatomic) _Bool showsCandidateInline; // @synthesize showsCandidateInline;
@property(nonatomic) _Bool showsCandidateBar; // @synthesize showsCandidateBar;
- (void)activate;
- (_Bool)_isAutomaticKeyboard;
- (void)didSuspend:(id)arg1;
- (void)willResume:(id)arg1;
- (void)implBoundsHeightChangeDone:(double)arg1 suppressNotification:(_Bool)arg2;
- (void)prepareForImplBoundsHeightChange:(double)arg1 suppressNotification:(_Bool)arg2;
- (struct UIPeripheralAnimationGeometry)geometryForHeightDelta:(double)arg1;
- (_Bool)isActive;
- (void)maximize;
- (void)minimize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardBackdropCornerView : UIView
{
    int _corners;
    double _radius;
}

- (id)_generateBackdropMaskImage;
- (void)drawInRect:(struct CGRect)arg1;
- (void)updateFrame:(struct CGRect)arg1 withCorners:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1 withCorners:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardBehaviors_Handwriting : TIKeyboardBehaviors
{
    _Bool _usesCandidateSelection;
}

@property(nonatomic) _Bool usesCandidateSelection; // @synthesize usesCandidateSelection=_usesCandidateSelection;
- (id)keyBehaviorsForState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardButton : UIButton
{
    long long _keyboardButtonStyle;
}

@property(readonly, nonatomic) long long keyboardButtonStyle; // @synthesize keyboardButtonStyle=_keyboardButtonStyle;
- (id)initWithKeyboardButtonStyle:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCache : NSObject
{
    CPBitmapStore *_store;
    NSSet *_layouts;
    _Bool _isCommitting;
}

+ (_Bool)enabled;
+ (id)sharedInstance;
- (void)updateCacheForInputModes:(id)arg1;
- (id)uniqueLayoutsFromInputModes:(id)arg1;
- (id)displayImagesForView:(id)arg1 fromLayout:(id)arg2 imageFlags:(id)arg3;
- (void)displayView:(id)arg1 imageWidth:(double)arg2 fromLayout:(id)arg3;
- (void)displayView:(id)arg1 fromLayout:(id)arg2;
- (struct CGImage *)cachedCompositeImageForCacheKeys:(id)arg1 fromLayout:(id)arg2 opacities:(id)arg3;
- (struct CGImage *)cachedImageForKey:(id)arg1 fromLayout:(id)arg2;
- (void)clearNonPersistentCache;
- (void)commitTransaction;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBar : UIView <UIKeyboardCandidateList, UIKeyboardCandidateListDelegate, UIKeyboardCandidateBarLayoutDelegate, UICollectionViewDataSource>
{
    _Bool _canExtend;
    _Bool _forceReloadInitiallyHiddenCandidates;
    _Bool _shouldSkipLayoutUntilScrollViewAnimationEnds;
    _Bool _didSkipLayout;
    NSString *_inlineText;
    UIImageView *_candidateMaskView;
    id <UIKeyboardCandidateBarDelegate> _delegate;
    double _upArrowWidth;
    id <UIKeyboardCandidateListDelegate> _candidateListDelegate;
    NSArray *_candidateViews;
    unsigned long long _currentCandidateViewIndex;
    UIKBThemedView *_secondaryCandidatesViewEdgeGradient;
    TIKeyboardCandidateResultSet *_candidateResultSet;
    NSArray *_filteredCandidates;
    NSIndexPath *_dragStartNextPageIndexPath;
    NSIndexPath *_dragStartPreviousPageIndexPath;
    CDUnknownBlockType _skippedSetCandidatesBlock;
    struct CGPoint _dragStartOffset;
}

+ (double)defaultPagingDistanceThreshold;
+ (double)defaultPagingVelocityThreshold;
+ (double)defaultCandidateWidth;
+ (double)heightForInterfaceOrientation:(long long)arg1;
+ (double)height;
+ (double)heightForRowAtIndex:(unsigned long long)arg1 interfaceOrientation:(long long)arg2;
+ (double)heightForRowAtIndex:(unsigned long long)arg1;
+ (double)heightForLastRow;
+ (unsigned long long)numberOfRowsForInterfaceOrientation:(long long)arg1;
+ (unsigned long long)numberOfRows;
+ (void)setScreenTraits:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType skippedSetCandidatesBlock; // @synthesize skippedSetCandidatesBlock=_skippedSetCandidatesBlock;
@property(nonatomic) _Bool didSkipLayout; // @synthesize didSkipLayout=_didSkipLayout;
@property(nonatomic) _Bool shouldSkipLayoutUntilScrollViewAnimationEnds; // @synthesize shouldSkipLayoutUntilScrollViewAnimationEnds=_shouldSkipLayoutUntilScrollViewAnimationEnds;
@property(copy, nonatomic) NSIndexPath *dragStartPreviousPageIndexPath; // @synthesize dragStartPreviousPageIndexPath=_dragStartPreviousPageIndexPath;
@property(copy, nonatomic) NSIndexPath *dragStartNextPageIndexPath; // @synthesize dragStartNextPageIndexPath=_dragStartNextPageIndexPath;
@property(nonatomic) struct CGPoint dragStartOffset; // @synthesize dragStartOffset=_dragStartOffset;
@property(nonatomic) _Bool forceReloadInitiallyHiddenCandidates; // @synthesize forceReloadInitiallyHiddenCandidates=_forceReloadInitiallyHiddenCandidates;
@property(nonatomic) _Bool canExtend; // @synthesize canExtend=_canExtend;
@property(retain, nonatomic) NSArray *filteredCandidates; // @synthesize filteredCandidates=_filteredCandidates;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateResultSet; // @synthesize candidateResultSet=_candidateResultSet;
@property(retain, nonatomic) UIKBThemedView *secondaryCandidatesViewEdgeGradient; // @synthesize secondaryCandidatesViewEdgeGradient=_secondaryCandidatesViewEdgeGradient;
@property(nonatomic) unsigned long long currentCandidateViewIndex; // @synthesize currentCandidateViewIndex=_currentCandidateViewIndex;
@property(retain, nonatomic) NSArray *candidateViews; // @synthesize candidateViews=_candidateViews;
@property(nonatomic) id <UIKeyboardCandidateListDelegate> candidateListDelegate; // @synthesize candidateListDelegate=_candidateListDelegate;
@property(nonatomic) double upArrowWidth; // @synthesize upArrowWidth=_upArrowWidth;
@property(nonatomic) id <UIKeyboardCandidateBarDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImageView *candidateMaskView; // @synthesize candidateMaskView=_candidateMaskView;
@property(copy, nonatomic) NSString *inlineText; // @synthesize inlineText=_inlineText;
- (void)setFrame:(struct CGRect)arg1;
@property(readonly, nonatomic) UIKBCandidateCollectionView *currentCandidateView;
@property(readonly, nonatomic) TIKeyboardCandidateResultSet *candidates;
- (id)visibleCandidates;
- (Class)_barCellClassForSection:(long long)arg1;
- (unsigned long long)_sectionIndexForSection:(long long)arg1;
- (long long)_sectionForSectionIndex:(unsigned long long)arg1 candidateView:(id)arg2;
- (id)_candidateViewForSection:(long long)arg1;
- (double)_emptySpaceForItemsToIndex:(unsigned long long)arg1 inSection:(long long)arg2;
- (double)_widthOfItemAtIndex:(unsigned long long)arg1 inSection:(long long)arg2;
- (id)_itemAtIndex:(unsigned long long)arg1 inSection:(long long)arg2;
- (unsigned long long)_countOfItemsInSection:(long long)arg1;
- (id)_indexPathForCandidateFromIndexPath:(id)arg1 inCandidateView:(id)arg2;
- (id)_indexPathForCurrentCandidateViewFromIndexPath:(id)arg1;
- (id)_indexPathForLastVisibleItem;
- (id)_indexPathForFirstVisibleItem;
- (id)_previousPageIndexPath;
- (id)_nextPageIndexPath;
- (void)_showPageAtIndexPath:(id)arg1;
- (void)_updateCanExtendState;
- (void)_stepSelectedCandidateInDirection:(_Bool)arg1 candidateView:(id)arg2 section:(long long)arg3;
- (void)_stepSelectedCandidateInDirection:(_Bool)arg1;
- (void)_scrollToFirstCandidateInSection:(long long)arg1 withAnimation:(_Bool)arg2;
- (void)_showCandidateAtIndex:(unsigned long long)arg1 inSection:(long long)arg2 scrollCellToVisible:(_Bool)arg3 animated:(_Bool)arg4;
- (void)_performSkippedLayoutIfNeeded;
- (_Bool)_showingInitiallyHiddenCandidates;
- (void)_reloadDataByAppendingAtEnd:(_Bool)arg1 initiallyHiddenCandidatesChanged:(_Bool)arg2;
- (void)_reloadData;
- (void)_clearData;
- (void)_updateCandidateViews;
- (void)candidateListShouldBeDismissed:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (unsigned long long)viewOffsetForCandidateAtIndex:(unsigned long long)arg1;
- (void)revealHiddenCandidates;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (_Bool)hasCandidates;
- (unsigned long long)count;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (_Bool)hasNextPage;
- (_Bool)hasPreviousPage;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)showCandidate:(id)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)candidatesDidChange;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)adjustSelectionToNearestVisibleCandidate;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)candidateBarLayoutDidFinishPreparingLayout;
- (struct CGSize)sizeOfDummyItemForCollectionView:(id)arg1 layout:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBarCell : UICollectionViewCell <UIKBCacheableView>
{
    _Bool _beginsFirstPage;
    _Bool _endsLastPage;
    _Bool _isAtLeftEdge;
    UIKBThemedView *_themedView;
    UILabel *_label;
    NSString *_candidateText;
}

+ (_Bool)highlightAffectsBackground;
+ (double)widthForCandidateText:(id)arg1;
+ (_Bool)drawsSideBorders;
+ (struct UIEdgeInsets)cacheInsets;
+ (id)textColorWithHighlight:(_Bool)arg1 whiteText:(_Bool)arg2;
+ (id)font;
+ (id)reuseIdentifier;
@property(nonatomic) _Bool isAtLeftEdge; // @synthesize isAtLeftEdge=_isAtLeftEdge;
@property(nonatomic) _Bool endsLastPage; // @synthesize endsLastPage=_endsLastPage;
@property(nonatomic) _Bool beginsFirstPage; // @synthesize beginsFirstPage=_beginsFirstPage;
@property(copy, nonatomic) NSString *candidateText; // @synthesize candidateText=_candidateText;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(retain, nonatomic) UIKBThemedView *themedView; // @synthesize themedView=_themedView;
- (void)drawRect:(struct CGRect)arg1;
@property(readonly, nonatomic) _Bool keepNonPersistent;
@property(readonly, nonatomic) double cachedWidth;
@property(readonly, nonatomic) _Bool cacheDeferable;
- (void)displayLayer:(id)arg1;
- (id)cacheKeysForRenderFlags:(id)arg1;
@property(readonly, nonatomic) NSString *cacheKey;
- (void)updateIsAtLeftEdgeState;
- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)updateLabels;
- (void)_setRenderConfig:(id)arg1;
- (void)didMoveToWindow;
- (void)setCandidate:(id)arg1;
- (void)prepareForReuse;
- (void)applyLayoutAttributes:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBarCell_SecondaryCandidate : UIKeyboardCandidateBarCell
{
}

+ (_Bool)highlightAffectsBackground;
+ (struct UIEdgeInsets)cacheInsets;
+ (id)textColorWithHighlight:(_Bool)arg1 whiteText:(_Bool)arg2;
+ (id)font;
+ (id)reuseIdentifier;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateLabels;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBarLayout : UICollectionViewLayout
{
    struct CGSize _contentSize;
    NSMutableArray *_allAttributes;
    NSArray *_edgeDummyCellAttributes;
}

+ (id)dummyCellCollectionViewKind;
+ (id)layout;
+ (Class)layoutAttributesClass;
@property(retain, nonatomic) NSArray *edgeDummyCellAttributes; // @synthesize edgeDummyCellAttributes=_edgeDummyCellAttributes;
@property(retain, nonatomic) NSMutableArray *allAttributes; // @synthesize allAttributes=_allAttributes;
- (void)prepareLayout;
- (struct CGSize)collectionViewContentSize;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBarLayoutAttributes : UICollectionViewLayoutAttributes <NSCopying>
{
    _Bool _beginsFirstPage;
    _Bool _endsLastPage;
}

@property(nonatomic) _Bool endsLastPage; // @synthesize endsLastPage=_endsLastPage;
@property(nonatomic) _Bool beginsFirstPage; // @synthesize beginsFirstPage=_beginsFirstPage;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface UISegmentedControl : UIControl <_UIBasicAnimationFactory, NSCoding>
{
    NSMutableArray *_segments;
    long long _selectedSegment;
    long long _highlightedSegment;
    UIView *_removedSegment;
    long long _barStyle;
    id _appearanceStorage;
    UIView *_backgroundBarView;
    double _enabledAlpha;
    struct {
        unsigned int style:3;
        unsigned int size:2;
        unsigned int delegateAlwaysNotifiesDelegateOfSegmentClicks:1;
        unsigned int momentaryClick:1;
        unsigned int tracking:1;
        unsigned int autosizeToFitSegments:1;
        unsigned int isSizingToFit:1;
        unsigned int autosizeText:1;
        unsigned int transparentBackground:1;
        unsigned int useProportionalWidthSegments:1;
        unsigned int translucentBackground:1;
        unsigned int appearanceNeedsUpdate:1;
    } _segmentedControlFlags;
    _Bool __hasTranslucentOptionsBackground;
}

+ (id)_modernDividerImage;
+ (id)_modernBackgroundSelected:(_Bool)arg1 highlighted:(_Bool)arg2;
+ (double)defaultHeightForStyle:(long long)arg1;
+ (double)defaultHeightForStyle:(long long)arg1 size:(int)arg2;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (double)defaultHeight;
@property(nonatomic, setter=_setTranslucentOptionsBackground:) _Bool _hasTranslucentOptionsBackground; // @synthesize _hasTranslucentOptionsBackground=__hasTranslucentOptionsBackground;
- (void)_updateDividerImageForSegmentAtIndex:(unsigned long long)arg1;
- (void)_removeSegmentAnimationFinished:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_clearSelectedSegment;
- (void)_insertSegment:(int)arg1 withInfo:(id)arg2 animated:(_Bool)arg3;
- (id)_createAndAddSegmentAtIndex:(int)arg1 position:(unsigned int)arg2 withInfo:(id)arg3;
- (id)_createSegmentAtIndex:(int)arg1 position:(unsigned int)arg2 withInfo:(id)arg3;
- (_Bool)_isInTranslucentToolbar;
- (_Bool)_isInMiniBar;
- (double)_barHeight;
- (void)_setBadgeValue:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)_badgeValueForSegmentAtIndex:(unsigned long long)arg1;
- (struct UIOffset)contentPositionAdjustmentForSegmentType:(long long)arg1 barMetrics:(long long)arg2;
- (void)setContentPositionAdjustment:(struct UIOffset)arg1 forSegmentType:(long long)arg2 barMetrics:(long long)arg3;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 barMetrics:(long long)arg4;
- (void)_setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 barMetrics:(long long)arg4;
- (id)backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)_optionsBackgroundImage;
- (void)_setOptionsBackgroundImage:(id)arg1;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)removedSegment;
- (void)setRemovedSegment:(id)arg1;
- (void)setAlpha:(double)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)_setEnabled:(_Bool)arg1 forcePropagateToSegments:(_Bool)arg2;
- (_Bool)useBlockyMagnificationInClassic;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_tapSegmentAtPoint:(struct CGPoint)arg1;
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)highlightSegment:(int)arg1;
- (void)_setHighlightedSegmentHighlighted:(_Bool)arg1;
- (_Bool)shouldTrack;
- (void)layoutSubviews;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (id)viewForBaselineLayout;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (struct CGRect)bounds;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)frame;
- (void)setFrame:(struct CGRect)arg1;
- (void)sizeToFit;
- (void)_setSelected:(_Bool)arg1 forSegmentAtIndex:(int)arg2 forceInfoDisplay:(_Bool)arg3;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (void)_animateContentChangeWithAnimations:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setSelectedSegmentIndex:(long long)arg1 notify:(_Bool)arg2 animate:(_Bool)arg3;
- (void)_setSelectedSegmentIndex:(long long)arg1 notify:(_Bool)arg2;
@property(nonatomic) long long selectedSegmentIndex;
@property(readonly, nonatomic) unsigned long long numberOfSegments;
- (_Bool)_shouldSelectSegmentAtIndex:(long long)arg1;
- (_Bool)isEnabledForSegmentAtIndex:(unsigned long long)arg1;
- (void)setEnabled:(_Bool)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (struct CGSize)contentOffsetForSegmentAtIndex:(unsigned long long)arg1;
- (void)setContentOffset:(struct CGSize)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (double)widthForSegmentAtIndex:(unsigned long long)arg1;
- (void)setWidth:(double)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)imageForSegmentAtIndex:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)_attributedTitleForSegmentAtIndex:(unsigned long long)arg1;
- (void)_setAttributedTitle:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (id)titleForSegmentAtIndex:(unsigned long long)arg1;
- (void)setTitle:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (void)removeAllSegments;
- (void)removeSegmentAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)_insertSegmentWithAttributedTitle:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)insertSegmentWithImage:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)insertSegmentWithTitle:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)_setUsesNewAnimations:(_Bool)arg1;
- (_Bool)_usesNewAnimations;
- (_Bool)transparentBackground;
- (void)setTransparentBackground:(_Bool)arg1;
- (long long)barStyle;
- (void)setBarStyle:(long long)arg1;
- (void)_setAutosizeText:(_Bool)arg1;
@property(nonatomic, getter=isMomentary) _Bool momentary;
- (void)setSegmentControlStyle:(long long)arg1;
- (long long)segmentControlStyle;
- (void)setControlSize:(int)arg1;
- (void)_setControlSize:(int)arg1 andInvalidate:(_Bool)arg2;
- (int)controlSize;
@property(nonatomic) long long segmentedControlStyle;
- (void)_setAppearanceIsTiled:(_Bool)arg1 leftCapWidth:(unsigned long long)arg2 rightCapWidth:(unsigned long long)arg3;
- (void)_setSegmentedControlAppearance:(CDStruct_41b0f204 *)arg1;
- (void)_setNeedsAppearanceUpdate;
- (void)_resetForAppearanceChange;
- (void)_setOptionsShadowHidden:(_Bool)arg1;
- (_Bool)_optionsShadowHidden;
- (void)_updateOptionsBackground;
- (void)_setCurrentBackgroundImage:(id)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)dealloc;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_tintColorArchivingKey;
- (id)initWithItems:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonSegmentedControlInit;
- (void)updateForMiniBarState:(_Bool)arg1;
@property(nonatomic) _Bool apportionsSegmentWidthsByContent;
- (id)infoViewForSegment:(long long)arg1;
- (long long)selectedSegment;
- (void)setSelectedSegment:(long long)arg1;
- (_Bool)isEnabledForSegment:(unsigned long long)arg1;
- (void)setEnabled:(_Bool)arg1 forSegment:(unsigned long long)arg2;
- (struct CGSize)contentOffsetForSegment:(unsigned long long)arg1;
- (void)setContentOffset:(struct CGSize)arg1 forSegment:(unsigned long long)arg2;
- (float)widthForSegment:(unsigned long long)arg1;
- (void)setWidth:(float)arg1 forSegment:(unsigned long long)arg2;
- (id)imageForSegment:(unsigned long long)arg1;
- (void)setImage:(id)arg1 forSegment:(unsigned long long)arg2;
- (id)titleForSegment:(unsigned long long)arg1;
- (void)setTitle:(id)arg1 forSegment:(unsigned long long)arg2;
- (void)removeSegment:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)insertSegment:(unsigned long long)arg1 withImage:(id)arg2 animated:(_Bool)arg3;
- (void)insertSegment:(unsigned long long)arg1 withTitle:(id)arg2 animated:(_Bool)arg3;
- (void)addSegmentWithTitle:(id)arg1;
- (void)selectSegment:(int)arg1;
- (void)setImagePadding:(struct CGSize)arg1 forSegment:(unsigned long long)arg2;
- (void)setAlwaysNotifiesDelegateOfSegmentClicks:(_Bool)arg1;
- (void)setDelegate:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 withStyle:(long long)arg2 withItems:(id)arg3;
- (id)scriptingInfoWithChildren;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBarSegmentControl : UISegmentedControl
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateBarShadow : UIView
{
    _Bool _inverted;
}

@property(nonatomic, getter=isInverted) _Bool inverted; // @synthesize inverted=_inverted;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateFloatingArrowView : UICollectionReusableView
{
    UIButton *_arrowButton;
}

+ (id)reuseIdentifier;
+ (id)collectionViewKind;
@property(retain, nonatomic) UIButton *arrowButton; // @synthesize arrowButton=_arrowButton;
- (void)dealloc;
- (void)applyLayoutAttributes:(id)arg1;
- (void)prepareForReuse;
- (void)updateArrow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGrid : UIView <UIKeyboardCandidateList, UIKeyboardCandidateListDelegate, UIKeyboardCandidateGridCollectionViewControllerDelegate, UIKeyboardCandidateRowViewControllerDelegate>
{
    UIImageView *_backgroundView;
    UIView *_topBarShadow;
    UIView *_bottomBarShadow;
    UIKeyboardCandidateSortControl *_sortBar;
    UIKeyboardCandidateGridHeader *_gridHeader;
    _Bool _drawTopShadow;
    _Bool _drawBottomShadow;
    _Bool _secondaryCandidatesViewIsCurrent;
    int _candidatesVisualStyle;
    id <UIKeyboardCandidateListDelegate> _candidateListDelegate;
    TIKeyboardCandidateResultSet *_candidateSet;
    NSMutableDictionary *_collectionViewControllers;
    UIKeyboardCandidateGridCollectionViewController *_collectionViewController;
    unsigned long long _numberOfColumns;
    id <UICollectionViewDelegate> _scrollViewDelegate;
    UIKBBackdropView *_backdropView;
    NSArray *_sortedCandidates;
    NSString *_inlineText;
    UIKeyboardCandidateRowViewController *_secondaryCandidatesViewController;
}

@property(nonatomic) _Bool secondaryCandidatesViewIsCurrent; // @synthesize secondaryCandidatesViewIsCurrent=_secondaryCandidatesViewIsCurrent;
@property(retain, nonatomic) UIKeyboardCandidateRowViewController *secondaryCandidatesViewController; // @synthesize secondaryCandidatesViewController=_secondaryCandidatesViewController;
@property(retain, nonatomic) NSString *inlineText; // @synthesize inlineText=_inlineText;
@property(retain, nonatomic) NSArray *sortedCandidates; // @synthesize sortedCandidates=_sortedCandidates;
@property(retain, nonatomic) UIKBBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(nonatomic) int candidatesVisualStyle; // @synthesize candidatesVisualStyle=_candidatesVisualStyle;
@property(nonatomic) id <UICollectionViewDelegate> scrollViewDelegate; // @synthesize scrollViewDelegate=_scrollViewDelegate;
@property(nonatomic) unsigned long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(nonatomic) UIKeyboardCandidateGridHeader *gridHeader; // @synthesize gridHeader=_gridHeader;
@property(nonatomic) UIKeyboardCandidateSortControl *sortBar; // @synthesize sortBar=_sortBar;
@property(retain, nonatomic) UIKeyboardCandidateGridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateSet; // @synthesize candidateSet=_candidateSet;
@property(nonatomic) id <UIKeyboardCandidateListDelegate> candidateListDelegate; // @synthesize candidateListDelegate=_candidateListDelegate;
@property(nonatomic) _Bool drawBottomShadow; // @synthesize drawBottomShadow=_drawBottomShadow;
@property(nonatomic) _Bool drawTopShadow; // @synthesize drawTopShadow=_drawTopShadow;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (_Bool)padInlineFloatingViewIsExpanded:(id)arg1;
- (unsigned long long)gridCollectionViewNumberOfColumns:(id)arg1;
- (unsigned long long)gridCollectionViewSelectedSortMethodIndex:(id)arg1;
- (void)sortSelectionBarAction:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *collectionViewControllers; // @synthesize collectionViewControllers=_collectionViewControllers;
- (void)candidateListShouldBeDismissed:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (void)revealHiddenCandidates;
- (_Bool)handleTabKeyWithShift:(_Bool)arg1;
- (_Bool)handleNumberKey:(unsigned long long)arg1;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setCandidates:(id)arg1 type:(int)arg2 inlineText:(id)arg3 inlineRect:(struct CGRect)arg4 maxX:(double)arg5 layout:(_Bool)arg6;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (void)candidatesDidChange;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (_Bool)hasNextPage;
- (_Bool)hasPreviousPage;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (_Bool)showCandidate:(id)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)isExtendedList;
- (_Bool)isHiddenCandidatesList;
- (void)showArrowButton:(_Bool)arg1;
- (void)statusBarFrameWillChange:(id)arg1;
- (void)candidateViewDidFinishExtending;
- (void)candidateViewWillBeginExtendingWithVisibleCandidates:(id)arg1;
- (void)layout;
- (void)layoutSubviews;
- (void)clearViews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridCell : UICollectionViewCell
{
    _Bool _dummy;
    _Bool _usesGroupHeaderAppearance;
    _Bool _shouldShowCandidateNumber;
    _Bool _secondaryCandidateAppearance;
    _Bool _emphasizedAppearance;
    int _candidatesVisualStyle;
    NSString *_text;
    NSString *_alternativeText;
    unsigned long long _candidateNumber;
    unsigned long long _edges;
    double _rowHeight;
    double _rightPadding;
    CDStruct_961fb75c _visualStyling;
    long long _textAlignment;
    double _cellPadding;
    double _minimumWidth;
    UILabel *_textLabel;
    UILabel *_alternativeTextLabel;
    UILabel *_candidateNumberLabel;
    struct CGSize _size;
    struct CGSize _candidateNumberSize;
    struct CGRect _visibleBounds;
}

+ (_Bool)drawsSideBorders;
+ (struct CGColor *)legacy_outlineShadowColorForVisualStyling:(CDStruct_961fb75c)arg1 candidatesVisualStyle:(int)arg2;
+ (struct CGColor *)legacy_outlineColorForVisualStyling:(CDStruct_961fb75c)arg1 candidatesVisualStyle:(int)arg2;
+ (double)widthForCandidate:(id)arg1 candidateNumber:(unsigned long long)arg2 visualStyle:(int)arg3;
+ (struct CGSize)sizeForGroupHeader:(id)arg1 visualStyle:(int)arg2;
+ (double)rightPaddingForIndex;
+ (id)reuseIdentifier;
@property(retain, nonatomic) UILabel *candidateNumberLabel; // @synthesize candidateNumberLabel=_candidateNumberLabel;
@property(retain, nonatomic) UILabel *alternativeTextLabel; // @synthesize alternativeTextLabel=_alternativeTextLabel;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(nonatomic) double minimumWidth; // @synthesize minimumWidth=_minimumWidth;
@property(nonatomic) double cellPadding; // @synthesize cellPadding=_cellPadding;
@property(nonatomic) struct CGSize candidateNumberSize; // @synthesize candidateNumberSize=_candidateNumberSize;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) int candidatesVisualStyle; // @synthesize candidatesVisualStyle=_candidatesVisualStyle;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(nonatomic) double rightPadding; // @synthesize rightPadding=_rightPadding;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(nonatomic) unsigned long long edges; // @synthesize edges=_edges;
@property(nonatomic) _Bool emphasizedAppearance; // @synthesize emphasizedAppearance=_emphasizedAppearance;
@property(nonatomic) _Bool secondaryCandidateAppearance; // @synthesize secondaryCandidateAppearance=_secondaryCandidateAppearance;
@property(nonatomic) struct CGRect visibleBounds; // @synthesize visibleBounds=_visibleBounds;
@property(nonatomic) _Bool shouldShowCandidateNumber; // @synthesize shouldShowCandidateNumber=_shouldShowCandidateNumber;
@property(nonatomic) unsigned long long candidateNumber; // @synthesize candidateNumber=_candidateNumber;
@property(copy, nonatomic) NSString *alternativeText; // @synthesize alternativeText=_alternativeText;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) _Bool usesGroupHeaderAppearance; // @synthesize usesGroupHeaderAppearance=_usesGroupHeaderAppearance;
@property(nonatomic) _Bool dummy; // @synthesize dummy=_dummy;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
@property(readonly, nonatomic) _Bool canShowCandidateNumber;
- (void)updateGroupHeaderLabelPosition;
- (void)updateLabelColors;
- (void)updateLabels;
- (void)drawBackgroundAndBorders;
- (void)drawRect:(struct CGRect)arg1;
- (void)prepareForReuse;
- (void)applyLayoutAttributes:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridCellAttributes : UICollectionViewLayoutAttributes
{
    _Bool _dummy;
    _Bool _groupHeader;
    _Bool _needsPaddingForIndexScrubber;
    _Bool _groupShowsAlternativeText;
    _Bool _secondaryCandidateAppearance;
    _Bool _emphasizedAppearance;
    int _candidatesVisualStyle;
    NSIndexPath *_candidateIndexPath;
    CDStruct_961fb75c _visualStyling;
    unsigned long long _candidateNumber;
    unsigned long long _rowIndex;
    unsigned long long _edges;
    struct CGSize _rowSize;
}

@property(nonatomic) _Bool emphasizedAppearance; // @synthesize emphasizedAppearance=_emphasizedAppearance;
@property(nonatomic) _Bool secondaryCandidateAppearance; // @synthesize secondaryCandidateAppearance=_secondaryCandidateAppearance;
@property(nonatomic) _Bool groupShowsAlternativeText; // @synthesize groupShowsAlternativeText=_groupShowsAlternativeText;
@property(nonatomic) _Bool needsPaddingForIndexScrubber; // @synthesize needsPaddingForIndexScrubber=_needsPaddingForIndexScrubber;
@property(nonatomic) unsigned long long edges; // @synthesize edges=_edges;
@property(nonatomic) struct CGSize rowSize; // @synthesize rowSize=_rowSize;
@property(nonatomic) unsigned long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(nonatomic) unsigned long long candidateNumber; // @synthesize candidateNumber=_candidateNumber;
@property(nonatomic) _Bool groupHeader; // @synthesize groupHeader=_groupHeader;
@property(nonatomic) _Bool dummy; // @synthesize dummy=_dummy;
@property(nonatomic) int candidatesVisualStyle; // @synthesize candidatesVisualStyle=_candidatesVisualStyle;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(retain, nonatomic) NSIndexPath *candidateIndexPath; // @synthesize candidateIndexPath=_candidateIndexPath;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)representedElementCategory;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridCollectionView : UIKBCandidateCollectionView
{
    double _indexMaximumHeight;
    UIKeyboardCandidateGridCollectionViewController *_parentViewController;
    double _previousGroupBarStartingY;
    UITableViewIndex *_index;
    UIView *_headerView;
}

@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(readonly, nonatomic) UITableViewIndex *index; // @synthesize index=_index;
@property(nonatomic) double previousGroupBarStartingY; // @synthesize previousGroupBarStartingY=_previousGroupBarStartingY;
@property(nonatomic) UIKeyboardCandidateGridCollectionViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(retain, nonatomic) NSArray *indexTitles;
- (void)keyboardWillShowNotification:(id)arg1;
- (void)keyboardDidHideNotification:(id)arg1;
- (void)selectItemAtIndexPath:(id)arg1 animated:(_Bool)arg2 scrollPosition:(unsigned long long)arg3;
- (void)setContentOffset:(struct CGPoint)arg1;
- (_Bool)shouldShowIndex;
- (void)showIndex:(_Bool)arg1;
- (void)delayUpdateIndex;
- (void)updateIndex;
- (void)updateIndex:(_Bool)arg1;
- (double)groupBarStartingY;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)isCellVisible:(id)arg1;
- (void)scrollToBottomWithAnimation:(_Bool)arg1;
- (void)scrollToOffsetFromTop:(double)arg1 withAnimation:(_Bool)arg2;
- (void)scrollToTopWithAnimation:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridCollectionViewController : UIViewController <UICollectionViewDataSource, UIKeyboardCandidateList, UIKeyboardCandidateGridLayoutDelegate>
{
    _Bool _alwaysShowExtensionCandidates;
    _Bool _hasSecondaryCandidates;
    _Bool _showHiddenCandidatesOnly;
    _Bool _singleLineMode;
    _Bool _showsExtensionCandidates;
    _Bool _supportsNumberKeySelection;
    _Bool _secondaryCandidatesViewIsCurrent;
    _Bool __usesDeemphasizedTextAppearance;
    int _candidatesVisualStyle;
    id <UIKeyboardCandidateGridCollectionViewControllerDelegate> _delegate;
    id <UIKeyboardCandidateListDelegate> _candidateListDelegate;
    TIKeyboardCandidateResultSet *_candidateSet;
    NSArray *_candidateGroups;
    double _rowHeight;
    CDStruct_961fb75c _visualStyling;
    UIButton *_padInlineFloatingArrowButton;
    UIView *_headerView;
    UIKBCandidateCollectionView *_secondaryCandidatesView;
    double _groupBarWidth;
}

@property(nonatomic) _Bool _usesDeemphasizedTextAppearance; // @synthesize _usesDeemphasizedTextAppearance=__usesDeemphasizedTextAppearance;
@property(nonatomic) _Bool secondaryCandidatesViewIsCurrent; // @synthesize secondaryCandidatesViewIsCurrent=_secondaryCandidatesViewIsCurrent;
@property(nonatomic) _Bool supportsNumberKeySelection; // @synthesize supportsNumberKeySelection=_supportsNumberKeySelection;
@property(nonatomic) _Bool showsExtensionCandidates; // @synthesize showsExtensionCandidates=_showsExtensionCandidates;
@property(nonatomic) double groupBarWidth; // @synthesize groupBarWidth=_groupBarWidth;
@property(nonatomic) _Bool singleLineMode; // @synthesize singleLineMode=_singleLineMode;
@property(nonatomic) _Bool showHiddenCandidatesOnly; // @synthesize showHiddenCandidatesOnly=_showHiddenCandidatesOnly;
@property(retain, nonatomic) UIKBCandidateCollectionView *secondaryCandidatesView; // @synthesize secondaryCandidatesView=_secondaryCandidatesView;
@property(nonatomic) _Bool hasSecondaryCandidates; // @synthesize hasSecondaryCandidates=_hasSecondaryCandidates;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(readonly, nonatomic) UIButton *padInlineFloatingArrowButton; // @synthesize padInlineFloatingArrowButton=_padInlineFloatingArrowButton;
@property(nonatomic) _Bool alwaysShowExtensionCandidates; // @synthesize alwaysShowExtensionCandidates=_alwaysShowExtensionCandidates;
@property(nonatomic) int candidatesVisualStyle; // @synthesize candidatesVisualStyle=_candidatesVisualStyle;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(retain, nonatomic) NSArray *candidateGroups; // @synthesize candidateGroups=_candidateGroups;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateSet; // @synthesize candidateSet=_candidateSet;
@property(nonatomic) id <UIKeyboardCandidateListDelegate> candidateListDelegate; // @synthesize candidateListDelegate=_candidateListDelegate;
@property(nonatomic) id <UIKeyboardCandidateGridCollectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool hasGroupBar;
@property(readonly, nonatomic) UIKeyboardCandidateGridLayout *collectionViewGridLayout;
@property(readonly, nonatomic) UIKeyboardCandidateGridCollectionView *collectionView;
- (void)revealHiddenCandidates;
- (_Bool)handleNumberKey:(unsigned long long)arg1;
- (unsigned long long)rowIndexForCellAtIndexPath:(id)arg1;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (void)reloadData;
- (void)candidatesDidChange;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (_Bool)hasNextPage;
- (_Bool)hasPreviousPage;
- (void)showNextRow;
- (void)showPreviousRow;
- (void)showNextPage;
- (void)showPreviousPage;
- (void)stepOneLine:(_Bool)arg1;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)showCandidate:(id)arg1;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;
- (void)scrollViewIndexChanged:(id)arg1;
- (void)updateIndexTitles;
- (void)updateHeaderView;
- (void)layout;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)lastCandidateIndexPath;
- (id)firstCandidateIndexPath;
- (id)lastCandidateIndexPathInGroupAtIndex:(unsigned long long)arg1;
- (id)firstCandidateIndexPathInGroupAtIndex:(unsigned long long)arg1;
- (id)selectedItemIndexPath;
- (id)indexPathForCandidate:(id)arg1;
- (id)candidateAtIndexPath:(id)arg1;
- (unsigned long long)candidateIndexOffset;
- (id)groupAtIndex:(unsigned long long)arg1;
- (unsigned long long)groupsCount;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct CGSize)rowSizeForGridLayout;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (unsigned long long)padInlineHighlightedRowIndex;
- (void)padInlineFloatingExpand;
- (_Bool)padInlineFloatingIsExpanded;
- (void)candidateViewDidFinishExtending;
- (void)candidateViewWillBeginExtendingWithVisibleCandidates:(id)arg1;
- (void)scrollToBottomWithAnimation:(_Bool)arg1;
- (void)scrollToTopWithAnimation:(_Bool)arg1;
- (void)scrollToTopWithAnimation:(_Bool)arg1 revealHeaderView:(_Bool)arg2;
- (void)viewDidLoad;
- (void)dealloc;
- (void)loadSecondaryCandidatesView;
- (void)loadView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridHeader : UIView
{
    UILabel *_inlineTextLabel;
    double _inlineTextRightMargin;
    UIButton *_toggleButton;
    UIKBBackdropView *_backdropView;
}

@property(retain, nonatomic) UIKBBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) UIButton *toggleButton; // @synthesize toggleButton=_toggleButton;
@property(nonatomic) double inlineTextRightMargin; // @synthesize inlineTextRightMargin=_inlineTextRightMargin;
@property(retain, nonatomic) UILabel *inlineTextLabel; // @synthesize inlineTextLabel=_inlineTextLabel;
@property(copy, nonatomic) NSString *inlineText;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridHeaderContainerView : UICollectionReusableView
{
}

+ (id)reuseIdentifier;
+ (id)collectionViewKind;
- (void)setHeaderView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridLayout : UICollectionViewLayout
{
    struct CGSize _contentSize;
    _Bool _expanded;
    _Bool _needsPaddingForIndexScrubber;
    _Bool _supportsNumberKeySelection;
    _Bool _hasSecondaryCandidates;
    _Bool _needsLayout;
    int _candidatesVisualStyle;
    NSArray *_candidateGroups;
    unsigned long long _columnsCount;
    CDStruct_961fb75c _visualStyling;
    double _headerViewHeight;
    NSSet *_emphasizedCandidates;
    NSMutableArray *_cellAttributes;
    NSMutableDictionary *_supplementaryAttributes;
}

+ (void)deemphasizeLastItemIfNeeded:(id)arg1;
+ (Class)layoutAttributesClass;
+ (id)layout;
@property(retain, nonatomic) NSMutableDictionary *supplementaryAttributes; // @synthesize supplementaryAttributes=_supplementaryAttributes;
@property(retain, nonatomic) NSMutableArray *cellAttributes; // @synthesize cellAttributes=_cellAttributes;
@property(nonatomic) _Bool needsLayout; // @synthesize needsLayout=_needsLayout;
@property(retain, nonatomic) NSSet *emphasizedCandidates; // @synthesize emphasizedCandidates=_emphasizedCandidates;
@property(nonatomic) _Bool hasSecondaryCandidates; // @synthesize hasSecondaryCandidates=_hasSecondaryCandidates;
@property(nonatomic) _Bool supportsNumberKeySelection; // @synthesize supportsNumberKeySelection=_supportsNumberKeySelection;
@property(nonatomic) double headerViewHeight; // @synthesize headerViewHeight=_headerViewHeight;
@property(nonatomic) _Bool needsPaddingForIndexScrubber; // @synthesize needsPaddingForIndexScrubber=_needsPaddingForIndexScrubber;
@property(nonatomic) _Bool expanded; // @synthesize expanded=_expanded;
@property(nonatomic) int candidatesVisualStyle; // @synthesize candidatesVisualStyle=_candidatesVisualStyle;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
@property(nonatomic) unsigned long long columnsCount; // @synthesize columnsCount=_columnsCount;
@property(retain, nonatomic) NSArray *candidateGroups; // @synthesize candidateGroups=_candidateGroups;
- (id)previousCandidateIndexPathFromIndexPath:(id)arg1;
- (id)nextCandidateIndexPathFromIndexPath:(id)arg1;
@property(readonly, nonatomic) struct CGSize rowSize;
- (id)layoutAttributesForCandidateIndexPath:(id)arg1;
- (void)finishLayoutForRowWithAttributes:(id)arg1 minimumCellWidth:(double)arg2 remainingWidth:(double)arg3 rowOrigin:(struct CGPoint)arg4 isFirstRow:(_Bool)arg5 isLastRow:(_Bool)arg6 zIndex:(long long)arg7;
- (void)prepareLayout;
- (void)getGroupBarWidth:(double *)arg1 headerAttributes:(id *)arg2;
@property(readonly, nonatomic) double groupBarWidth;
- (id)attributesWithFrame:(struct CGRect)arg1;
- (unsigned long long)numberOfItemsInSection:(long long)arg1;
- (unsigned long long)numberOfCandidateSections;
- (unsigned long long)numberOfSections;
- (struct CGSize)collectionViewContentSize;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (void)invalidateLayout;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridOverlayBackgroundView : UICollectionReusableView
{
    double _rowHeight;
    unsigned long long _highlightedRowIndex;
}

+ (struct CGColor *)backgroundColor;
+ (id)reuseIdentifier;
+ (id)collectionViewKind;
@property(nonatomic) unsigned long long highlightedRowIndex; // @synthesize highlightedRowIndex=_highlightedRowIndex;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
- (void)drawRect:(struct CGRect)arg1;
- (void)applyLayoutAttributes:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridOverlayBackgroundViewAttributes : UICollectionViewLayoutAttributes
{
    struct CGSize _rowSize;
}

@property(nonatomic) struct CGSize rowSize; // @synthesize rowSize=_rowSize;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateGridSecondaryCandidatesLayout : UICollectionViewFlowLayout
{
    int _candidatesVisualStyle;
    CDStruct_961fb75c _visualStyling;
}

+ (Class)layoutAttributesClass;
@property(nonatomic) int candidatesVisualStyle; // @synthesize candidatesVisualStyle=_candidatesVisualStyle;
@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
- (void)updateAttributes:(id)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateToggleButton : UIButton
{
    NSString *_arrowDirection;
    UIKBThemedView *_themedView;
}

+ (id)arrowImageName;
@property(retain, nonatomic) UIKBThemedView *themedView; // @synthesize themedView=_themedView;
@property(copy, nonatomic) NSString *arrowDirection; // @synthesize arrowDirection=_arrowDirection;
- (void)_setRenderConfig:(id)arg1;
- (void)setArrowColor:(id)arg1 forState:(unsigned long long)arg2;
- (id)arrowColorForState:(unsigned long long)arg1;
- (void)updateArrow;
- (void)layoutSubviews;
- (struct CGRect)labelFrameFromFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateInlineFloatingToggleButton : UIKeyboardCandidateToggleButton
{
}

+ (id)arrowImageName;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateInlineFloatingView : UIView <UIKeyboardCandidateList, UIKeyboardCandidateListDelegate, UIKeyboardCandidateGridCollectionViewControllerDelegate>
{
    _Bool _reducedWidth;
    _Bool _showHiddenCandidatesOnly;
    int _position;
    TIKeyboardCandidateResultSet *_candidateSet;
    NSString *_inlineText;
    double _maxX;
    UIKeyboardCandidateGridCollectionViewController *_collectionViewController;
    id <UIKeyboardCandidateListDelegate> _candidateListDelegate;
    UIKeyboardCandidateSortControl *_sortSelectionBar;
    struct CGRect _inlineRect;
    struct CGRect _previousCollapsedFrame;
}

@property(nonatomic) _Bool showHiddenCandidatesOnly; // @synthesize showHiddenCandidatesOnly=_showHiddenCandidatesOnly;
@property(nonatomic) struct CGRect previousCollapsedFrame; // @synthesize previousCollapsedFrame=_previousCollapsedFrame;
@property(nonatomic) int position; // @synthesize position=_position;
@property(nonatomic) id <UIKeyboardCandidateListDelegate> candidateListDelegate; // @synthesize candidateListDelegate=_candidateListDelegate;
@property(readonly, nonatomic, getter=isReducedWidth) _Bool reducedWidth; // @synthesize reducedWidth=_reducedWidth;
@property(nonatomic) double maxX; // @synthesize maxX=_maxX;
@property(nonatomic) struct CGRect inlineRect; // @synthesize inlineRect=_inlineRect;
@property(copy, nonatomic) NSString *inlineText; // @synthesize inlineText=_inlineText;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateSet; // @synthesize candidateSet=_candidateSet;
- (id)_inheritedRenderConfig;
@property(readonly, nonatomic) UIKeyboardCandidateSortControl *sortSelectionBar; // @synthesize sortSelectionBar=_sortSelectionBar;
@property(readonly, nonatomic) UIKeyboardCandidateGridCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
- (void)sortSelectionBarAction;
- (void)padInlineFloatingViewExpand:(id)arg1;
- (_Bool)padInlineFloatingViewIsExpanded:(id)arg1;
- (unsigned long long)gridCollectionViewNumberOfColumns:(id)arg1;
- (unsigned long long)gridCollectionViewSelectedSortMethodIndex:(id)arg1;
- (void)candidateListShouldBeDismissed:(id)arg1;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (_Bool)handleTabKeyWithShift:(_Bool)arg1;
- (_Bool)handleNumberKey:(unsigned long long)arg1;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)showCandidate:(id)arg1;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)layout;
- (id)candidates;
- (void)candidatesDidChange;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (void)setCandidates:(id)arg1 type:(int)arg2 inlineText:(id)arg3 inlineRect:(struct CGRect)arg4 maxX:(double)arg5 layout:(_Bool)arg6 showHiddenCandidatesOnly:(_Bool)arg7;
- (void)setCandidates:(id)arg1 type:(int)arg2 inlineText:(id)arg3 inlineRect:(struct CGRect)arg4 maxX:(double)arg5 layout:(_Bool)arg6;
- (void)setCandidateSet:(id)arg1 showHiddenCandidatesOnly:(_Bool)arg2;
- (void)adjustFrameForInlineText:(id)arg1 inlineRect:(struct CGRect)arg2 maxX:(double)arg3;
- (struct CGRect)adjustedFrameFromDesiredFrame:(struct CGRect)arg1 textHeight:(double)arg2;
- (_Bool)isAcceptableFrame:(struct CGRect)arg1 afterScrollBy:(double)arg2;
- (struct CGRect)adjustedInlineRectFromInlineText:(id)arg1 inlineRect:(struct CGRect)arg2;
- (void)revealHiddenCandidates;
- (_Bool)isHiddenCandidatesList;
- (_Bool)isExtendedList;
- (void)expand;
- (struct CGSize)size;
- (void)updateLayerBorderWidth;
- (void)didMoveToWindow;
- (void)setFrame:(struct CGRect)arg1;
- (id)activeCandidateList;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateLogButton : UIButton
{
    CDStruct_961fb75c _visualStyling;
}

@property(nonatomic) CDStruct_961fb75c visualStyling; // @synthesize visualStyling=_visualStyling;
- (void)log;
- (void)updateLabelColor;
- (id)initWithFrame:(struct CGRect)arg1 visualStyling:(CDStruct_961fb75c)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidatePageControl : UIView
{
    UIKeyboardCandidateBarSegmentControl *_pageControl;
    _Bool _usingVerticalArrows;
}

+ (id)imageWithColor:(id)arg1 size:(struct CGSize)arg2;
- (void)layoutSubviews;
- (void)updatePageControlWithStatus:(_Bool)arg1 rightControlButtonEnabled:(_Bool)arg2;
- (void)_changePage:(id)arg1;
- (void)setUseVerticalArrows:(_Bool)arg1;
- (void)_setRenderConfig:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidatePocketShadow : UIView
{
    _Bool _shadowFadesToBottom;
    _Bool _drawsShadow;
    double _shadowHeightGrowthFactor;
}

+ (double)width;
@property(nonatomic) _Bool drawsShadow; // @synthesize drawsShadow=_drawsShadow;
@property(nonatomic) _Bool shadowFadesToBottom; // @synthesize shadowFadesToBottom=_shadowFadesToBottom;
@property(nonatomic) double shadowHeightGrowthFactor; // @synthesize shadowHeightGrowthFactor=_shadowHeightGrowthFactor;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateRowViewController : UIViewController <UIKeyboardCandidateList, UICollectionViewDelegate, UICollectionViewDataSource>
{
    _Bool _showsHiddenCandidates;
    id <UIKeyboardCandidateRowViewControllerDelegate> _delegate;
    id <UIKeyboardCandidateListDelegate> _candidateListDelegate;
    TIKeyboardCandidateResultSet *_candidateSet;
    Class _cellClass;
}

+ (double)suggestedHeightForCellClass:(Class)arg1;
@property(retain, nonatomic) Class cellClass; // @synthesize cellClass=_cellClass;
@property(nonatomic) _Bool showsHiddenCandidates; // @synthesize showsHiddenCandidates=_showsHiddenCandidates;
@property(retain, nonatomic) TIKeyboardCandidateResultSet *candidateSet; // @synthesize candidateSet=_candidateSet;
@property(nonatomic) id <UIKeyboardCandidateListDelegate> candidateListDelegate; // @synthesize candidateListDelegate=_candidateListDelegate;
@property(nonatomic) id <UIKeyboardCandidateRowViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *candidates;
@property(readonly, nonatomic) UIKBCandidateCollectionView *collectionView;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize)sizeOfDummyItemForCollectionView:(id)arg1 layout:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)_showCandidateAtIndex:(unsigned long long)arg1 scrollCellToVisible:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_stepSelectedCandidateInDirection:(_Bool)arg1;
- (void)_reloadCandidates;
- (unsigned long long)selectedSortIndex;
- (id)statisticsIdentifier;
- (id)keyboardBehaviors;
- (void)setUIKeyboardCandidateListDelegate:(id)arg1;
- (void)setCandidates:(id)arg1 type:(int)arg2 inlineText:(id)arg3 inlineRect:(struct CGRect)arg4 maxX:(double)arg5 layout:(_Bool)arg6;
- (void)setCandidates:(id)arg1 inlineText:(id)arg2 inlineRect:(struct CGRect)arg3 maxX:(double)arg4 layout:(_Bool)arg5;
- (void)candidatesDidChange;
- (_Bool)hasCandidates;
- (void)candidateAcceptedAtIndex:(unsigned long long)arg1;
- (unsigned long long)currentIndex;
- (id)currentCandidate;
- (void)revealHiddenCandidates;
- (void)showPreviousRow;
- (void)showNextRow;
- (void)showPreviousPage;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidate;
- (_Bool)showCandidate:(id)arg1;
- (void)showCandidateAtIndex:(unsigned long long)arg1;
- (_Bool)isExtendedList;
- (_Bool)isHiddenCandidatesList;
- (void)loadView;
- (double)suggestedHeight;
- (id)initWithCellClass:(Class)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateSortControl : UIView
{
    UIKeyboardCandidateBarSegmentControl *_segmentedControl;
    int _candidatesVisualStyle;
    _Bool _legacyAlertAppearance;
    UIKBThemedView *_themedView;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
@property(retain, nonatomic) UIKBThemedView *themedView; // @synthesize themedView=_themedView;
@property(readonly) UISegmentedControl *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
- (void)setSortControlTitles:(id)arg1;
- (_Bool)needsToUpdateSortControlForTitles:(id)arg1;
- (void)selectNextSegment;
- (void)selectPreviousSegment;
- (void)layoutSubviews;
- (void)_setRenderConfig:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 candidatesVisualStyle:(int)arg2 legacyAlertAppearance:(_Bool)arg3;
- (void)updateTitleTextAttributes;
- (void)addSegmentedControlWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateSplitKeyboardToggleButton : UIKeyboardCandidateToggleButton
{
}

- (struct CGRect)labelFrameFromFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateUnsplitKeyboardToggleButton : UIKeyboardCandidateToggleButton
{
    UIKeyboardCandidatePocketShadow *_pocketShadow;
    UIImage *_backgroundNormal;
    UIImage *_backgroundHighlighted;
    _Bool _drawsBackground;
    _Bool _drawsPocketShadow;
}

@property(nonatomic) _Bool drawsPocketShadow; // @synthesize drawsPocketShadow=_drawsPocketShadow;
@property(nonatomic) _Bool drawsBackground; // @synthesize drawsBackground=_drawsBackground;
- (id)toggleButtonBackgroundImageWithHighlight:(_Bool)arg1;
- (void)updateBackgroundImages;
- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateUtilities : NSObject
{
}

+ (id)candidateScrollViewBackgroundWithHeight:(double)arg1;
+ (id)candidateBarBackgroundWithHighlight:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateView : UIInputView
{
    UIKeyboardCandidateBar *_bar;
    UIKeyboardCandidateSortControl *_sortControl;
    UIKeyboardCandidateGrid *_extendedView;
    UIView<UIKeyboardCandidateList> *_inlineView;
    UIImageView *_leftBackground;
    UIImageView *_rightBackground;
    UIKeyboardCandidateUnsplitKeyboardToggleButton *_leftButton;
    UIKeyboardCandidateSplitKeyboardToggleButton *_rightButton;
    struct {
        unsigned int isExtended;
        unsigned int didMinimizeKeyboard;
        unsigned int isSplit;
    } _candidateBarFlags;
}

+ (double)defaultExtendedControlHeight;
+ (id)activeCandidateList;
+ (void)setActiveCandidateView:(id)arg1;
+ (id)activeCandidateView;
+ (id)sharedInstanceForInlineView:(_Bool)arg1;
+ (id)sharedInstanceForInlineView;
+ (id)sharedInstance;
@property(retain, nonatomic) UIView<UIKeyboardCandidateList> *inlineView; // @synthesize inlineView=_inlineView;
- (void)setCandidatesToExtendedViewFromCollapsedView:(id)arg1;
- (unsigned long long)_numberOfColumns:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)willMoveToSuperview:(id)arg1;
- (void)layoutSubviews;
- (double)barHeight;
- (void)setFrame:(struct CGRect)arg1;
- (void)_toggleExtendedCandidateView:(id)arg1;
- (void)setCandidateViewExtended:(_Bool)arg1;
- (void)candidatesDidChange;
- (id)activeCandidateList;
- (void)setCandidateBarCanExtend:(_Bool)arg1;
- (_Bool)isExtended;
- (void)updatePageControlStatus;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateView_Floating : UIKeyboardCandidateView <UIKeyboardCandidateViewInline>
{
    struct CGRect _collapsedRect;
    struct CGSize presentationSize;
}

+ (double)defaultExtendedControlHeight;
@property struct CGSize presentationSize; // @synthesize presentationSize;
- (id)_inheritedRenderConfig;
- (void)candidatesDidChange;
- (id)activeCandidateList;
- (void)setCandidateViewExtended:(_Bool)arg1;
- (unsigned long long)_numberOfColumns:(_Bool)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateView_iPad : UIKeyboardCandidateView <UICollectionViewDelegate, UIKeyboardCandidateBarDelegate>
{
    UIKeyboardCandidatePageControl *_pageControl;
}

+ (double)defaultExtendedControlHeight;
- (void)didEndSplitTransition;
- (void)candidateBarDidScroll:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)updatePageControlStatus;
- (double)_additionalClipHeight;
- (void)setCandidateViewExtended:(_Bool)arg1;
- (int)_clipCornersOfView:(id)arg1;
- (void)layoutSubviews;
- (unsigned long long)_numberOfColumns:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (double)rightButtonYOffset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateView_iPhone : UIKeyboardCandidateView <UICollectionViewDelegate, UIGestureRecognizerDelegate>
{
    UIKeyboardCandidateGridHeader *_header;
}

- (void)_handleKeyboardShowOrHide:(id)arg1;
- (void)handleTap;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (_Bool)_shouldUseFullMetrics;
- (_Bool)_shouldShowHideKeyboard;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_setupKeyboardInteraction;
- (void)dealloc;
- (void)layoutSubviews;
- (double)barHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateView_iPhone_Bar : UIKeyboardCandidateView_iPhone
{
}

- (void)layoutSubviews;
- (struct CGSize)_defaultSize;
- (void)setCandidateViewExtended:(_Bool)arg1;
- (unsigned long long)_numberOfColumns:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCandidateView_iPhone_Floating : UIKeyboardCandidateView_iPhone <UIKeyboardCandidateViewInline>
{
    struct CGRect _collapsedRect;
    _Bool _withKeyboard;
}

- (_Bool)_shouldUseFullMetrics;
- (_Bool)_shouldShowHideKeyboard;
- (void)_collapse:(id)arg1;
- (void)candidatesDidChange;
- (id)activeCandidateList;
- (void)setCandidateViewExtended:(_Bool)arg1;
- (unsigned long long)_numberOfColumns:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardCornerView : UIView
{
    _Bool _leftSide;
    double _radius;
}

- (void)drawRect:(struct CGRect)arg1;
- (int)textEffectsVisibilityLevel;
- (id)initWithFrame:(struct CGRect)arg1 left:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardDicationBackground : UIView
{
    NSArray *_shadows;
    UIKeyboardDicationBackgroundGradientView *_gradient;
}

@property(retain, nonatomic) UIKeyboardDicationBackgroundGradientView *gradient; // @synthesize gradient=_gradient;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)shadows;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardDicationBackgroundGradientView : UIView <_UIBasicAnimationFactory>
{
    UIKBRenderConfig *_renderConfig;
    UIDictationView *_dictationView;
}

@property(nonatomic) UIDictationView *dictationView; // @synthesize dictationView=_dictationView;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)_backgroundFillFrame;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (void)startColorTransitionOut;
- (void)startColorTransitionIn;
- (id)backgroundColorForCurrentRenderConfig;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardDictationMenu : UIKeyboardMenuView
{
}

+ (id)activeInstance;
+ (id)sharedInstance;
- (_Bool)usesDimmingView;
- (void)hide;
- (void)fadeWithDelay:(double)arg1;
- (void)fade;
- (void)cleanupForFadeOrHide;
- (void)show;
- (void)performShowAnimation;
- (_Bool)centerPopUpOverKey;
- (_Bool)usesTable;
- (struct CGSize)preferredSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardDictationStarkDoneButton : UIButton
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmoji : NSObject
{
    NSString *_emojiString;
    _Bool _hasDingbat;
}

+ (id)emojiWithString:(id)arg1 hasDingbat:(_Bool)arg2;
@property _Bool hasDingbat; // @synthesize hasDingbat=_hasDingbat;
@property(retain, nonatomic) NSString *emojiString; // @synthesize emojiString=_emojiString;
- (_Bool)isEqual:(id)arg1;
- (id)key;
- (void)dealloc;
- (id)initWithString:(id)arg1 hasDingbat:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCategory : NSObject
{
    int _categoryType;
    NSArray *_emoji;
    long long _lastVisibleFirstEmojiIndex;
}

+ (id)localizedStringForKey:(id)arg1;
+ (id)categoryForType:(int)arg1;
+ (id)emojiRecentsFromPreferences;
+ (_Bool)hasVariantsForEmoji:(id)arg1;
+ (id)categories;
+ (long long)numberOfCategories;
@property(nonatomic) long long lastVisibleFirstEmojiIndex; // @synthesize lastVisibleFirstEmojiIndex=_lastVisibleFirstEmojiIndex;
@property(retain) NSArray *emoji; // @synthesize emoji=_emoji;
@property int categoryType; // @synthesize categoryType=_categoryType;
- (id)description;
@property(readonly, getter=recentDescription) NSString *recentDescription;
@property(readonly, getter=displaySymbol) NSString *displaySymbol;
@property(readonly, getter=displayName) NSString *displayName;
@property(readonly, nonatomic, getter=name) NSString *name;
- (void)dealloc;
- (void)releaseCategories;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCategoryBar : UIKBKeyView <UIKeyboardEmojiCategoryControl>
{
    UIKeyboardEmojiCategoryController *_categoryController;
    int _selected;
    int _total;
    int _dividerTotal;
    UIImage *_darkDivider;
    UIImage *_plainDivider;
    UIImage *_selectedDivider;
    NSMutableArray *_segmentViews;
    NSMutableArray *_dividerViews;
}

- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (struct CGRect)frameForDivider:(int)arg1;
- (void)sendActionsForControlEvents:(unsigned long long)arg1;
- (void)setCategory:(id)arg1;
@property long long selectedIndex; // @dynamic selectedIndex;
- (void)releaseImagesAndViews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCategoryBar_iPad : UIKeyboardEmojiCategoryBar
{
    UIImage *categoryKeyImage;
    UIImage *categoryKeyHighlightedImage;
    UIImage *dividerImage;
    UIImage *dividerHighlightedImage;
}

@property(retain) UIImage *dividerHighlightedImage; // @synthesize dividerHighlightedImage;
@property(retain) UIImage *dividerImage; // @synthesize dividerImage;
@property(retain) UIImage *categoryKeyHighlightedImage; // @synthesize categoryKeyHighlightedImage;
@property(retain) UIImage *categoryKeyImage; // @synthesize categoryKeyImage;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)frameForSegment:(int)arg1;
- (void)layoutSubviews;
- (void)releaseImagesAndViews;
- (void)updateSegmentAndDividers:(int)arg1;
- (void)updateSegmentImages;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCategoryBar_iPhone : UIKeyboardEmojiCategoryBar
{
    NSArray *_selectedImages;
    NSArray *_unselectedImages;
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)releaseImagesAndViews;
- (void)updateSegmentAndDividers:(int)arg1;
- (void)updateSegmentImages;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCategoryController : NSObject
{
}

+ (Class)classForCategoryControl;
- (void)setCurrentCategory:(id)arg1;
- (id)initWithCategoryControl:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiPicker : UIKBKeyView <UITableViewDelegate, UITableViewDataSource>
{
    UIImageView *_container;
    UITableView *_picker;
    UIImageView *_innerShadow;
}

@property(readonly) UITableView *picker; // @synthesize picker=_picker;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)shouldCache;
- (void)dealloc;
- (id)container;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)containerView;
- (id)defaultIndexPath;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCategoryPicker : UIKeyboardEmojiPicker <UIKeyboardEmojiCategoryControl>
{
    UIKeyboardEmojiCategoryController *_categoryController;
}

- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)symbolForRow:(long long)arg1;
- (id)titleForRow:(long long)arg1;
- (void)setCategory:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;
- (id)categoryForCurrentRow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiCharacterPicker : UIKeyboardEmojiPicker <UIKeyboardEmojiInput>
{
    UIKeyboardEmojiCategory *_category;
    UIKeyboardEmojiInputController *_inputController;
}

@property UIKeyboardEmojiCategory *category; // @synthesize category=_category;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)charactersForRow:(long long)arg1;
- (void)reloadForCategory:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiDefaultsController : NSObject
{
    NSMutableDictionary *_defaults;
}

+ (id)sharedController;
- (id)defaultsValueForKey:(id)arg1;
- (void)setDefaultsValue:(id)arg1 forKey:(id)arg2;
- (long long)currentSequenceKey;
- (void)setCurrentSequenceKey:(long long)arg1;
- (id)usageHistoryKey;
- (void)setUsageHistoryKey:(id)arg1;
- (id)recentsKey;
- (void)setRecentsKey:(id)arg1;
- (long long)emojiCategoryDefaultsIndex:(id)arg1;
- (void)setEmojiCategoryDefaultsIndex:(long long)arg1 forCategory:(id)arg2;
- (void)handleRead:(id)arg1;
- (void)handleWrite:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)writeEmojiDefaults;
- (void)readEmojiDefaults;
- (id)emptyDefaultsDictionary;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiGraphics : NSObject
{
    struct CGRect _imageRect;
    struct UIKBTheme *_categoryTheme;
    struct UIKBTheme *_categorySelectedTheme;
    struct UIKBTheme *_controlTheme;
    struct UIKBTheme *_controlPressedTheme;
    struct UIKBTheme *_dividerTheme;
    struct UIKBTheme *_darkDividerTheme;
    struct UIKBTheme *_selectedDividerTheme;
    struct UIKBTheme *_backgroundTheme;
    struct CGColor *_selectedDividerStart;
    struct CGColor *_symbolColor;
    struct CGGradient *_darkDividerGradient;
    struct CGGradient *_selectedGradient;
    struct CGGradient *_selectedDividerGradient;
    struct CGGradient *_backgroundGradient;
}

+ (_Bool)boldText;
+ (id)pressIndicatorViewWithFrame:(struct CGRect)arg1 whiteKeyboard:(_Bool)arg2;
+ (double)emojiPageControlYOffset:(_Bool)arg1;
+ (double)optionalDescriptionPadding:(_Bool)arg1;
+ (struct CGPoint)padding:(_Bool)arg1;
+ (struct CGPoint)margin:(_Bool)arg1;
+ (unsigned char)colCount:(_Bool)arg1;
+ (unsigned char)rowCount:(_Bool)arg1;
+ (struct CGSize)emojiSize:(_Bool)arg1;
+ (id)emojiFontAttributes;
+ (id)emojiFontAttributesForPortrait:(_Bool)arg1;
+ (id)imageWithRect:(struct CGRect)arg1 name:(id)arg2 pressed:(_Bool)arg3;
+ (_Bool)isLandscape;
+ (id)sharedInstance;
- (id)categoryKeyGenerator:(_Bool)arg1 rect:(struct CGRect)arg2;
- (id)keyImageWithDisplayString:(id)arg1 state:(int)arg2 rect:(struct CGRect)arg3 fontSize:(double)arg4;
- (id)keyImageWithDisplayString:(id)arg1 state:(int)arg2 rect:(struct CGRect)arg3 fontSize:(double)arg4 offset:(struct CGPoint)arg5;
- (id)protoKeyboard;
- (id)protoKeyWithDisplayString:(id)arg1;
- (struct UIKBTheme *)createProtoThemeForKey:(id)arg1 keyboard:(id)arg2 state:(int)arg3;
- (id)emojiPressedGenerator:(id)arg1 rect:(struct CGRect)arg2;
- (id)backgroundGradientGenerator:(id)arg1;
- (id)pageIndicatorCurrentGenerator:(id)arg1;
- (id)pageIndicatorGenerator:(id)arg1;
- (id)categorySymbolsGenerator:(id)arg1;
- (id)categoryPlacesGenerator:(id)arg1;
- (id)categoryObjectsGenerator:(id)arg1;
- (id)categoryNatureGenerator:(id)arg1;
- (id)categoryPeopleGenerator:(id)arg1;
- (id)categoryRecentsGenerator:(id)arg1;
- (id)categoryWithSymbol:(id)arg1 pressed:(id)arg2;
- (id)selectedDividerGenerator:(id)arg1;
- (id)darkDividerGenerator:(id)arg1;
- (id)dividerGenerator:(id)arg1;
- (id)dividerWithTheme:(struct UIKBTheme *)arg1;
- (void)drawTopEdgeInContext:(struct CGContext *)arg1 withTheme:(struct UIKBTheme *)arg2;
- (id)generateImageWithRect:(struct CGRect)arg1 name:(id)arg2 pressed:(_Bool)arg3;
- (void)initializeThemes;
- (void)releaseThemes;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiImageView : UIView
{
    NSString *_emojiString;
}

- (void)drawRect:(struct CGRect)arg1;
@property(retain, nonatomic) NSString *emojiString;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 emojiString:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiInputController : NSObject
{
    int _currentSequence;
    NSMutableDictionary *_usageHistory;
    NSMutableArray *_recents;
    UIKeyboardEmojiCategory *_lastCategory;
}

+ (void)writeEmojiDefaultsAndReleaseActiveInputView;
+ (void)writeEmojiDefaults;
+ (id)activeInputView;
+ (Class)classForInputView;
@property(retain, nonatomic) UIKeyboardEmojiCategory *lastViewedCategory; // @synthesize lastViewedCategory=_lastCategory;
- (id)defaultsDictionary;
- (void)clearAncientHistory;
- (id)lastCategory;
- (id)recents;
- (void)emojiUsed:(id)arg1;
- (double)scoreForEmoji:(id)arg1;
- (double)scoreForSequence:(int)arg1;
- (_Bool)isAncientSequence:(int)arg1;
- (void)dealloc;
- (id)initWithInputView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiPage : UIView
{
    NSArray *_emoji;
    int _numRows;
    int _numCols;
    int _numPages;
    struct CGPoint _emojiPadding;
    struct CGPoint _margin;
    struct CGSize _emojiSize;
    struct CGRect _keyActivationRect;
    UITouch *_activeTouch;
    _Bool _needsLayout;
    _Bool _needsEmojiRendering;
    UIKBRenderConfig *_renderConfig;
    NSDictionary *_emojiAttributes;
    UIKeyboardEmojiView *_touched;
    UIKeyboardEmojiView *_pendingDisplay;
    UIKeyboardEmojiView *_onDisplay;
    UIKeyboardEmojiInputController *_inputController;
}

@property(retain) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(retain, nonatomic) NSDictionary *emojiAttributes; // @synthesize emojiAttributes=_emojiAttributes;
@property _Bool needsEmojiRendering; // @synthesize needsEmojiRendering=_needsEmojiRendering;
@property UIKeyboardEmojiInputController *inputController; // @synthesize inputController=_inputController;
@property struct CGRect keyActivationRect; // @synthesize keyActivationRect=_keyActivationRect;
@property(retain) UIKeyboardEmojiView *onDisplay; // @synthesize onDisplay=_onDisplay;
@property(retain) UIKeyboardEmojiView *pendingDisplay; // @synthesize pendingDisplay=_pendingDisplay;
@property(retain) UITouch *activeTouch; // @synthesize activeTouch=_activeTouch;
@property(retain) NSArray *emoji; // @synthesize emoji=_emoji;
@property(retain) UIKeyboardEmojiView *touched; // @synthesize touched=_touched;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchCancelled:(id)arg1;
- (void)touchEnded:(id)arg1;
- (void)touchMoved:(id)arg1;
- (void)touchBegan:(id)arg1;
- (void)checkForStalePopup:(id)arg1;
- (void)removeDisplayedPopup:(id)arg1;
- (void)showPendingPopup:(id)arg1;
- (void)cancelPendingPopupChanges;
- (id)closestForPoint:(struct CGPoint)arg1;
- (struct CGRect)emojiRectForPoint:(struct CGPoint)arg1 index:(unsigned long long *)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)deactivatePopUps;
- (void)generateSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (int)takeEmoji:(id)arg1 fromIndex:(int)arg2;
@property(readonly, nonatomic) long long emojiCountPerPage;
- (struct CGRect)rectForRow:(int)arg1 Col:(int)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)updateLayoutConstants;
- (void)removeFromSuperview;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiPickerCategoryCell : UITableViewCell
{
    UILabel *_symbol;
    UILabel *_title;
}

- (void)setTitle:(id)arg1;
- (void)setSymbol:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)titleFont;
- (id)symbolFont;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiPickerCharacterCell : UITableViewCell
{
    NSArray *_characters;
    NSString *_emojiString;
    UIKeyboardEmojiInputController *_inputController;
    UIView *_pressIndicator;
}

+ (id)emojiFontAttributes;
@property(retain) UIView *pressIndicator; // @synthesize pressIndicator=_pressIndicator;
@property UIKeyboardEmojiInputController *inputController; // @synthesize inputController=_inputController;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
@property(retain) NSArray *characters;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiScrollView : UIKBKeyView <UIScrollViewDelegate, UIKeyboardEmojiInput, UIKeyboardEmojiPressIndicationDelegate>
{
    UIKeyboardEmojiInputController *_inputController;
    UIKeyboardEmojiCategory *_category;
    UIPageControl *_pageControl;
    UIScrollView *_scrollView;
    UILabel *_categoryLabel;
    UILabel *_optionalDescription;
    NSMutableArray *_pages;
    int _currentPage;
    UIView *_pressIndicator;
    _Bool _whiteText;
}

@property _Bool whiteText; // @synthesize whiteText=_whiteText;
@property(retain, nonatomic) UIView *pressIndicator; // @synthesize pressIndicator=_pressIndicator;
- (void)goToFirstPage;
- (void)setScrollDelay:(double)arg1;
- (int)currentPage;
- (void)ensureSurrounded;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)pageChanged;
- (void)saveFirstVisibleEmojiIndex;
- (void)reloadForCategory:(id)arg1;
- (long long)emojiCountPerPageForRotation;
- (void)clearPages;
- (void)interruptScrolling;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)layoutPages;
- (void)delayLayout;
- (void)layoutRecents;
- (void)doLayout;
- (void)forceLayout;
- (_Bool)shouldCache;
- (void)setRenderConfig:(id)arg1;
- (void)removePressIndicator;
- (void)installPressIndicatorAtPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiSplit : UIKBKeyView <UITableViewDelegate, UITableViewDataSource, UIKeyboardEmojiPressIndicationDelegate>
{
    UITableView *_picker;
    UIView *_pressIndicator;
}

@property(retain, nonatomic) UIView *pressIndicator; // @synthesize pressIndicator=_pressIndicator;
@property(readonly) UITableView *picker; // @synthesize picker=_picker;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)removePressIndicator;
- (void)installPressIndicatorAtPoint:(struct CGPoint)arg1;
- (_Bool)shouldCache;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)defaultIndexPath;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiSplitCategoryCell : UITableViewCell
{
    UIImageView *_symbol;
    UILabel *_title;
}

@property(retain, nonatomic) UILabel *title; // @synthesize title=_title;
@property(retain, nonatomic) UIImageView *symbol; // @synthesize symbol=_symbol;
- (void)setTitleText:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)titleFont;
- (id)symbolFont;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiSplitCategoryPicker : UIKeyboardEmojiSplit <UIKeyboardEmojiCategoryControl>
{
    UIKeyboardEmojiCategoryController *_categoryController;
    _Bool _whiteText;
    UIKeyboardEmojiCategory *_lastUsedCategory;
}

@property _Bool whiteText; // @synthesize whiteText=_whiteText;
- (void)setRenderConfig:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)symbolForRow:(long long)arg1;
- (id)titleForRow:(long long)arg1;
- (void)updateCategorySelectedIndicator:(int)arg1;
- (void)setCategory:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;
- (id)categoryForCurrentRow;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiSplitCharacterCell : UITableViewCell
{
    NSArray *_characters;
    NSString *_emojiString;
    UIKeyboardEmojiInputController *_inputController;
    UIView<UIKeyboardEmojiPressIndicationDelegate> *_delegate;
}

+ (id)emojiFontAttributes;
@property UIKeyboardEmojiInputController *inputController; // @synthesize inputController=_inputController;
@property(retain) UIView<UIKeyboardEmojiPressIndicationDelegate> *delegate; // @synthesize delegate=_delegate;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
@property(retain) NSArray *characters;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiSplitCharacterPicker : UIKeyboardEmojiSplit <UIKeyboardEmojiInput>
{
    UILabel *_optionalDescription;
    UIKeyboardEmojiCategory *_category;
    UIKeyboardEmojiInputController *_inputController;
}

@property(retain) UIKeyboardEmojiCategory *category; // @synthesize category=_category;
- (void)setRenderConfig:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)charactersForRow:(long long)arg1;
- (void)reloadForCategory:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 keyplane:(id)arg2 key:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardEmojiView : UIControl
{
    UIKeyboardEmoji *_emoji;
    UIView *_popup;
    UIKeyboardEmojiImageView *_imageView;
    UIKBRenderConfig *_renderConfig;
    UIView<UIKeyboardEmojiPressIndicationDelegate> *_delegate;
}

+ (id)emojiViewForEmoji:(id)arg1 withFrame:(struct CGRect)arg2;
+ (void)recycleEmojiView:(id)arg1;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(retain) UIView<UIKeyboardEmojiPressIndicationDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain) UIKeyboardEmojiImageView *imageView; // @synthesize imageView=_imageView;
@property(retain) UIView *popup; // @synthesize popup=_popup;
@property(retain) UIKeyboardEmoji *emoji; // @synthesize emoji=_emoji;
- (void)setEmoji:(id)arg1 withFrame:(struct CGRect)arg2;
- (void)uninstallPopup;
- (id)createAndInstallKeyPopupView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 emoji:(id)arg2;

@end

@interface UITextInputMode : NSObject <NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
+ (id)activeInputModes;
+ (id)currentInputMode;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, retain, nonatomic) NSString *primaryLanguage;

@end

@interface UIKeyboardInputMode : UITextInputMode <NSCopying>
{
    _Bool isDisplayed;
    NSString *primaryLanguage;
    NSString *languageWithRegion;
    NSString *identifier;
    NSString *normalizedIdentifier;
    NSString *softwareLayout;
    NSString *hardwareLayout;
}

+ (id)dictationInputMode;
+ (id)intlInputMode;
+ (id)keyboardInputModeWithIdentifier:(id)arg1;
+ (id)hardwareLayoutFromIdentifier:(id)arg1;
+ (id)softwareLayoutFromIdentifier:(id)arg1;
+ (id)canonicalLanguageIdentifierFromIdentifier:(id)arg1;
@property(nonatomic) _Bool isDisplayed; // @synthesize isDisplayed;
@property(retain, nonatomic) NSString *hardwareLayout; // @synthesize hardwareLayout;
@property(retain, nonatomic) NSString *softwareLayout; // @synthesize softwareLayout;
@property(retain, nonatomic) NSString *normalizedIdentifier; // @synthesize normalizedIdentifier;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier;
@property(retain, nonatomic) NSString *languageWithRegion; // @synthesize languageWithRegion;
@property(retain, nonatomic) NSString *primaryLanguage; // @synthesize primaryLanguage;
- (_Bool)isDesiredForTraits:(id)arg1 forceASCIICapable:(_Bool)arg2;
- (_Bool)isAllowedForTraits:(id)arg1;
@property(readonly, nonatomic) NSString *containingBundleDisplayName;
@property(readonly, nonatomic) NSBundle *containingBundle;
@property(readonly, nonatomic) NSExtension *extension;
@property(readonly, nonatomic) _Bool isExtensionInputMode;
@property(readonly, nonatomic) _Bool defaultLayoutIsASCIICapable;
@property(readonly, nonatomic) _Bool isDefaultRightToLeft;
@property(readonly, nonatomic) NSString *extendedDisplayName;
@property(readonly, nonatomic) NSString *displayName;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *normalizedIdentifierLevels;
@property(readonly, nonatomic) NSString *identifierWithLayouts;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardExtensionInputMode : UIKeyboardInputMode
{
    NSExtension *_extension;
}

@property(retain, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
- (_Bool)isDesiredForTraits:(id)arg1 forceASCIICapable:(_Bool)arg2;
- (_Bool)isAllowedForTraits:(id)arg1;
- (id)normalizedIdentifierLevels;
- (id)identifierWithLayouts;
- (id)containingBundleDisplayName;
- (id)containingBundle;
- (_Bool)isExtensionInputMode;
- (_Bool)defaultLayoutIsASCIICapable;
- (_Bool)isDefaultRightToLeft;
- (id)extendedDisplayName;
- (id)displayName;
- (id)hardwareLayout;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSplitTransitionView : UIView
{
    double _currentProgress;
    double _liftOffProgress;
    double _finishProgress;
    double _finishDuration;
    double _finalTransitionStartTime;
    CADisplayLink *_displayLink;
    CDUnknownBlockType _completionBlock;
    struct CGRect _startFrame;
    struct CGRect _endFrame;
    id <UIKeyboardKeyplaneTransitionDelegate> _transitionDelegate;
    id <UIKeyboardSplitTransitionDataSource> _transitionDataSource;
    _Bool _centerFilled;
    _Bool _isRebuilding;
    _Bool _isSplitTranslation;
    UIKeyboardSliceSet *_sliceSet;
}

@property(nonatomic) id <UIKeyboardSplitTransitionDataSource> splitTransitionDataSource; // @synthesize splitTransitionDataSource=_transitionDataSource;
@property(nonatomic) id <UIKeyboardKeyplaneTransitionDelegate> splitTransitionDelegate; // @synthesize splitTransitionDelegate=_transitionDelegate;
@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (_Bool)showDictationKey;
- (_Bool)showIntlKey;
- (struct CGImage *)keyImageWithToken:(id)arg1;
- (struct CGImage *)splitKeyboardImage;
- (struct CGImage *)defaultKeyboardImage;
- (_Bool)canDisplayTransition;
- (void)updateWithProgress:(double)arg1;
- (void)finishWithProgress:(double)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)transitionToFinalState:(id)arg1;
- (void)finalizeTransition;
- (_Bool)transitionIsVisible;
- (void)rebuildControlKeys:(int)arg1;
- (void)rebuildFromKeyplane:(id)arg1 toKeyplane:(id)arg2 keyboardType:(long long)arg3 orientation:(long long)arg4;
- (void)transformForProgress:(double)arg1;
- (_Bool)shouldAllowRubberiness;
- (void)rebuildTransitionForSplitStyleChange:(id)arg1;
- (struct CGRect)rectEnclosingKeyplane:(id)arg1;
- (struct CGSize)sizeForShadowLayer:(int)arg1;
- (id)colorsForBackgroundLayer:(int)arg1;
- (void)initializeLayers;
- (id)bottomDropShadow;
- (id)outerCenterDropShadow;
- (id)centerDropShadow;
- (id)topDropShadow;
@property(readonly) NSArray *backgroundLayers;
@property(readonly) NSArray *shadowLayers;
- (void)setFrame:(struct CGRect)arg1;
- (void)didMoveToWindow;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardFlipTransitionView : UIKeyboardSplitTransitionView
{
    CALayer *_container;
    CALayer *_frontFace;
    CALayer *_backFace;
    CALayer *_frontDarkening;
    CALayer *_backDarkening;
    CALayer *_backDarkeningLeft;
    CALayer *_backDarkeningRight;
    _Bool _showingFrontFace;
    UIKBCacheToken *_startKeyplaneToken;
    UIKBCacheToken *_endKeyplaneToken;
    NSMutableDictionary *_controlKeys;
    struct {
        unsigned int shiftKeys:1;
        unsigned int returnKeys:1;
        unsigned int moreIntlKeys:1;
    } _rebuildFlags;
}

@property(nonatomic, getter=isShowingFrontFace) _Bool showingFrontFace; // @synthesize showingFrontFace=_showingFrontFace;
- (_Bool)transitionIsVisible;
- (void)rebuildControlKeys:(int)arg1;
- (void)rebuildTransitionForSplitStyleChange:(id)arg1;
- (void)rebuildFromKeyplane:(id)arg1 toKeyplane:(id)arg2 keyboardType:(long long)arg3 orientation:(long long)arg4;
- (void)updateTransition;
- (void)_delayedUpdateTransition;
- (void)rebuildMoreIntlKeys;
- (void)updateMoreIntlKey:(id)arg1 asStart:(_Bool)arg2 withRect:(struct CGRect)arg3 showIntl:(_Bool)arg4 showDictKey:(_Bool)arg5;
- (void)rebuildReturnSlices;
- (void)rebuildShiftSlices;
- (void)rebuildControlSlicesForKeyName:(id)arg1;
- (void)rebuildTransition;
- (void)rebuildBackgroundTransition;
- (struct CGImage *)splitKeyboardImage;
- (struct CGImage *)defaultKeyboardImage;
- (void)_flipToFront:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIKeyboardImpl : UIView <_UIIVCResponseDelegateImpl, UIKeyboardCandidateListDelegate>
{
    id <UIKeyInput> m_delegate;
    UIKeyboardTaskQueue *m_taskQueue;
    CDUnknownBlockType m_externalTask;
    TIKeyboardState *m_keyboardState;
    TIKeyboardInputManagerState *m_inputManagerState;
    UIView *m_languageIndicator;
    NSString *m_previousInputString;
    UIKeyboardAutocorrectionController *m_autocorrectionController;
    UIAutocorrectInlinePrompt *m_autocorrectPrompt;
    TIKeyboardCandidateResultSet *m_candidateResultSet;
    id <UIKeyboardCandidateList> m_candidateList;
    UIView *m_markedTextOverlay;
    id <UIKeyboardImplGeometryDelegate> m_geometryDelegate;
    NSObject<UIKeyboardRecording><UIApplicationEventRecording> *m_recorder;
    UIKeyboardLayout *m_layout;
    NSMutableDictionary *m_keyedLayouts;
    UIKeyboardScheduledTask *m_autoDeleteTask;
    unsigned int m_autoDeleteCount;
    double m_autoDeleteLastDelete;
    double m_autoDeleteInterval;
    unsigned int m_autoDeleteShiftCharacter;
    UIDelayedAction *m_longPressAction;
    long long m_orientation;
    long long m_originalOrientation;
    struct CGPoint m_inputPoint;
    int m_changeCount;
    double m_changeTime;
    id m_changedDelegate;
    struct __CFRunLoopObserver *m_observer;
    unsigned long long m_textInputChangingCount;
    _Bool m_textInputChangingText;
    _Bool m_textInputChangingDirection;
    _Bool m_textInputChangesIgnored;
    _Bool m_insideKeyInputDelegateCall;
    UITextInputTraits *m_defaultTraits;
    UITextInputTraits *m_traits;
    int m_returnKeyState;
    long long m_currentDirection;
    _Bool m_autoDeleteOK;
    _Bool m_autocapitalizationPreference;
    _Bool m_autocorrectionPreference;
    _Bool m_autoshift;
    _Bool m_caretShowingNow;
    _Bool m_changeNotificationDisabled;
    _Bool m_correctionLearningAllowed;
    _Bool m_delegateIsSMSTextView;
    _Bool m_delegateRequiresKeyEvents;
    _Bool m_doubleSpacePeriodWasAppliedInCurrentContext;
    _Bool m_doubleSpacePeriodPreference;
    _Bool m_hardwareKeyboardAttached;
    _Bool m_inDealloc;
    _Bool m_initializationDone;
    _Bool m_performanceLoggingEnabled;
    _Bool m_selecting;
    _Bool m_shift;
    _Bool m_shiftLocked;
    _Bool m_shiftLockedEnabled;
    _Bool m_settingShift;
    _Bool m_suggestionsShownForCurrentDeletion;
    _Bool m_originalShouldSkipCandidateSelection;
    _Bool m_updatingPreferences;
    _Bool m_changingGeometryWithSameOrientation;
    _Bool m_suppressGeometryChangeNotifications;
    _Bool m_acceptingCandidate;
    _Bool m_didAutomaticallyInsertSpace;
    _Bool m_didSyncDocumentStateToInputDelegate;
    _Bool m_userChangedSelection;
    _Bool m_shouldChargeKeys;
    _Bool m_longPress;
    _Bool m_replacingWord;
    _Bool m_shiftNeedsUpdate;
    _Bool m_shiftPreventAutoshift;
    _Bool m_shiftHeldDownNeedsUpdated;
    _Bool m_delegateAdoptsTextInput;
    _Bool m_delegateAdoptsTextInputPrivate;
    _Bool m_delegateAdoptsKeyboardInput;
    _Bool m_delegateAdoptsWKInteraction;
    _Bool m_clientVariantSupportEnabled;
    _Bool m_clientVariantSupportEnabledEver;
    NSMutableArray *m_keyplaneNamesPreviousDelegate;
    NSMutableArray *m_keyplaneNamesCurrentDelegate;
    UITextInputArrowKeyHistory *m_arrowKeyHistory;
    _Bool m_preRotateShift;
    _Bool m_preRotateShiftLocked;
    _Bool m_showInputModeIndicator;
    _Bool m_suppressUpdateCandidateView;
    _Bool m_shouldUpdateCacheOnInputModesChange;
    _Bool m_shouldSetInputModeInNextRun;
    _Bool m_rivenCenterFilled;
    double m_splitProgress;
    _Bool m_needsCandidates;
    _Bool m_shouldSkipCandidateGeneration;
    _Bool m_updateLayoutOnShowKeyboard;
    _Bool m_receivedCandidatesInCurrentInputMode;
    int _currentAlertReason;
    _Bool m_scrolling;
    _Bool m_hasInputOnAcceptCandidate;
    _Bool m_maximizing;
    unsigned long long m_previousSpaceKeyBehavior;
    unsigned long long m_previousReturnKeyBehavior;
    _Bool m_usesCandidateSelection;
    _Bool m_UsedCandidateSelection;
    CDUnknownBlockType m_keyInputCompletionHandler;
    _Bool m_updatingLayout;
    _Bool m_showsCandidateBar;
    _Bool m_showsCandidateInline;
    _Bool committingCandidate;
    _Bool geometryIsChanging;
    _Bool m_softwareKeyboardShownByTouch;
    _Bool _handlingKeyCommandFromHardwareKeyboard;
    TIKeyboardTouchEvent *m_touchEventWaitingForKeyInputEvent;
    _UIActionWhenIdle *m_delayedCandidateRequest;
    _UIActionWhenIdle *m_deferredDidSetDelegateAction;
    UIPhysicalKeyboardEvent *m_hardwareRepeatEvent;
    UIKeyboardScheduledTask *m_hardwareRepeatTask;
    UIAlertView *keyboardAlertView;
    NSDictionary *_candidateRequestInfo;
    UIKeyboardScheduledTask *_autocorrectPromptTask;
}

+ (void)hardwareKeyboardAvailabilityChanged;
+ (Class)layoutClassForInputMode:(id)arg1 keyboardType:(long long)arg2;
+ (long long)interfaceOrientationForSize:(struct CGSize)arg1;
+ (struct CGPoint)persistentDictationWindowOffset;
+ (void)setPersistentDictationWindowOffset:(struct CGPoint)arg1;
+ (void)setPersistentDictationTargetZone:(int)arg1;
+ (int)persistentDictationTargetZone;
+ (struct CGPoint)persistentOffset;
+ (struct CGPoint)normalizedPersistentOffset;
+ (void)setPersistentOffset:(struct CGPoint)arg1;
+ (void)suppressSetPersistentOffset:(_Bool)arg1;
+ (void)setPersistentSplitProgress:(double)arg1;
+ (double)splitProgress;
+ (double)persistentSplitProgress;
+ (_Bool)supportsSplit;
+ (_Bool)isSplit;
+ (_Bool)rivenTranslationPreference;
+ (_Bool)rivenPreference;
+ (_Bool)rivenInstalled;
+ (void)refreshRivenStateWithTraits:(id)arg1 isKeyboard:(_Bool)arg2;
+ (double)additionalInstanceHeightLoadingForInterfaceOrientation:(long long)arg1;
+ (double)additionalInstanceHeightLoading;
+ (double)additionalInstanceHeight;
+ (double)additionalInstanceHeightForInterfaceOrientation:(long long)arg1;
+ (id)normalizedInputModesFromPreference;
+ (struct CGSize)keyboardSizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)sizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)_defaultSizeForInterfaceOrientation:(long long)arg1;
+ (struct CGSize)defaultSizeForInterfaceOrientation:(long long)arg1;
+ (Class)layoutClassForCurrentInputMode;
+ (void)applicationDidReceiveMemoryWarning:(id)arg1;
+ (void)applicationWillEnterForeground:(id)arg1;
+ (void)applicationDidEnterBackground:(id)arg1;
+ (void)applicationWillResignActive:(id)arg1;
+ (void)applicationWillSuspend:(id)arg1;
+ (void)releaseSharedInstance;
+ (id)activeInstance;
+ (id)sharedInstance;
+ (void)sendPerformanceNotification:(id)arg1;
+ (void)markElapsed:(id)arg1;
+ (void)markPerformance:(id)arg1;
+ (void)setParentTestForProfiling:(id)arg1;
+ (void)_clearHardwareKeyboardMinimizationPreference;
+ (id)keyboardScreen;
@property(nonatomic) _Bool handlingKeyCommandFromHardwareKeyboard; // @synthesize handlingKeyCommandFromHardwareKeyboard=_handlingKeyCommandFromHardwareKeyboard;
@property(retain, nonatomic) UIKeyboardScheduledTask *autocorrectPromptTask; // @synthesize autocorrectPromptTask=_autocorrectPromptTask;
@property(retain, nonatomic) NSDictionary *candidateRequestInfo; // @synthesize candidateRequestInfo=_candidateRequestInfo;
@property(nonatomic) _Bool softwareKeyboardShownByTouch; // @synthesize softwareKeyboardShownByTouch=m_softwareKeyboardShownByTouch;
@property(nonatomic) _Bool geometryIsChanging; // @synthesize geometryIsChanging;
@property(nonatomic) _Bool committingCandidate; // @synthesize committingCandidate;
@property(retain, nonatomic) UIAlertView *keyboardAlertView; // @synthesize keyboardAlertView;
@property(nonatomic) _Bool showsCandidateInline; // @synthesize showsCandidateInline=m_showsCandidateInline;
@property(nonatomic) _Bool receivedCandidatesInCurrentInputMode; // @synthesize receivedCandidatesInCurrentInputMode=m_receivedCandidatesInCurrentInputMode;
@property(nonatomic) _Bool showsCandidateBar; // @synthesize showsCandidateBar=m_showsCandidateBar;
@property(nonatomic) _Bool shouldSetInputModeInNextRun; // @synthesize shouldSetInputModeInNextRun=m_shouldSetInputModeInNextRun;
@property(nonatomic) _Bool showInputModeIndicator; // @synthesize showInputModeIndicator=m_showInputModeIndicator;
@property(retain, nonatomic) UIKeyboardScheduledTask *hardwareRepeatTask; // @synthesize hardwareRepeatTask=m_hardwareRepeatTask;
@property(retain, nonatomic) UIPhysicalKeyboardEvent *hardwareRepeatEvent; // @synthesize hardwareRepeatEvent=m_hardwareRepeatEvent;
@property(retain, nonatomic) id changedDelegate; // @synthesize changedDelegate=m_changedDelegate;
@property(retain, nonatomic) _UIActionWhenIdle *deferredDidSetDelegateAction; // @synthesize deferredDidSetDelegateAction=m_deferredDidSetDelegateAction;
@property(retain, nonatomic) _UIActionWhenIdle *delayedCandidateRequest; // @synthesize delayedCandidateRequest=m_delayedCandidateRequest;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEventWaitingForKeyInputEvent; // @synthesize touchEventWaitingForKeyInputEvent=m_touchEventWaitingForKeyInputEvent;
@property(readonly, nonatomic) UIKeyboardAutocorrectionController *autocorrectionController; // @synthesize autocorrectionController=m_autocorrectionController;
@property(retain, nonatomic) TIKeyboardInputManagerState *inputManagerState; // @synthesize inputManagerState=m_inputManagerState;
@property(copy, nonatomic) CDUnknownBlockType externalTask; // @synthesize externalTask=m_externalTask;
@property(nonatomic) id <UIKeyboardImplGeometryDelegate> geometryDelegate; // @synthesize geometryDelegate=m_geometryDelegate;
@property(retain, nonatomic) UITextInputArrowKeyHistory *arrowKeyHistory; // @synthesize arrowKeyHistory=m_arrowKeyHistory;
@property(retain, nonatomic) id <UIKeyboardRecording><UIApplicationEventRecording> recorder;
- (void)trackUsageForCandidateAcceptedAction:(id)arg1;
- (void)trackUsageForPromptedCorrection:(id)arg1 inputString:(id)arg2 previousPrompt:(id)arg3;
- (void)trackUsageForAcceptedAutocorrection:(id)arg1 promptWasShowing:(_Bool)arg2;
- (_Bool)isAutoFillMode;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)needsKeyHitTestResults;
- (_Bool)canHandleKeyHitTest;
- (void)updateNoContentViews;
- (id)dynamicCaretList;
- (void)clearSelection;
- (_Bool)caretVisible;
- (_Bool)caretBlinks;
- (void)setCaretVisible:(_Bool)arg1;
- (void)setCaretBlinks:(_Bool)arg1;
- (void)startCaretBlinkIfNeeded;
- (_Bool)canHandleEvent:(id)arg1;
- (void)_moveWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)showKeyboardIfNeeded;
- (void)ejectKeyDown;
- (void)toggleSoftwareKeyboard;
- (void)completeHandleKeyEvent:(id)arg1;
- (void)handleKeyWithString:(id)arg1 forKeyEvent:(id)arg2 executionContext:(id)arg3;
- (void)handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)handleKeyEvent:(id)arg1;
- (void)_handleKeyEvent:(id)arg1 executionContext:(id)arg2;
- (void)flushTouchEventWaitingForKeyInputEventIfNecessary;
- (void)_remapKeyEvent:(id)arg1 withKeyEventMap:(id)arg2;
- (void)_handleWebKeyEvent:(id)arg1 withInputString:(id)arg2 executionContext:(id)arg3;
- (void)_continueHandleWebKeyEventWithTask:(CDUnknownBlockType)arg1 executionContext:(id)arg2;
- (void)_handleWebKeyEvent:(id)arg1 withIndex:(unsigned long long)arg2 inInputString:(id)arg3 executionContext:(id)arg4;
- (void)_handleWebKeyEvent:(id)arg1 withEventType:(int)arg2 withInputString:(id)arg3 withInputStringIgnoringModifiers:(id)arg4;
- (void)updateKeyboardEventsLagging:(id)arg1;
- (_Bool)isValidKeyInput:(id)arg1;
- (void)cancelAllKeyEvents;
- (void)dismissKeyboard;
@property(nonatomic, getter=isInHardwareKeyboardMode) _Bool inHardwareKeyboardMode;
- (void)showKeyboard;
- (void)hideKeyboard;
- (void)firstHardwareAutoRepeatWithExecutionContext:(id)arg1;
- (void)hardwareKeyboardAvailabilityChanged;
- (void)updateHardwareKeyboardLayout;
- (int)changeCount;
- (void)updateChangeTimeAndIncrementCount;
- (void)clearChangeTimeAndCount;
- (void)clearTimers;
- (_Bool)isLongPress;
- (void)longPressAction;
- (void)handleDelayedActionLongPress;
- (void)clearLongPressTimer;
- (void)touchLongPressTimer;
- (void)touchLongPressTimerWithDelay:(double)arg1;
- (void)stopAutoDelete;
- (void)startAutoDeleteTimer;
- (void)completeHandleAutoDelete;
- (void)handleAutoDeleteWithExecutionContext:(id)arg1;
- (void)touchAutoDeleteTimerWithThreshold:(double)arg1;
- (void)clearAutoDeleteTimer;
- (id)generateAutocorrectionReplacements:(id)arg1;
- (void)generateCandidatesFromReplacements;
- (id)replacementsFromSelectedText;
- (void)generateCandidatesWithOptions:(int)arg1;
- (void)generateCandidates;
- (_Bool)delegateSuggestionsForCurrentInput;
- (id)autocorrectionRecordForWord:(id)arg1;
- (void)autocorrectionAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)fadeAutocorrectPrompt;
- (void)animateAutocorrectionToRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2;
- (void)animateAutocorrectionToText:(id)arg1 fromRect:(struct CGRect)arg2;
- (_Bool)applyAutocorrection:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 correctionRects:(id)arg2;
- (id)autocorrectPromptRectsForInput:(id)arg1;
- (void)updateAutocorrectPrompt:(id)arg1 executionContext:(id)arg2;
- (void)updateAutocorrectPrompt:(id)arg1;
- (id)autocorrectPromptRectsFromFirstDelegateRect:(struct CGRect)arg1 lastDelegateRect:(struct CGRect)arg2;
- (id)_rangeForAutocorrectionText:(id)arg1;
- (void)clearAutocorrectPromptTimer;
- (void)touchAutocorrectPromptTimer;
- (struct CGRect)convertRectToAutocorrectRect:(struct CGRect)arg1 delegateView:(id)arg2 container:(id)arg3;
- (void)updateTextCandidateView;
- (id)inputOverlayContainer;
- (void)updateKeyboardConfigurations;
- (id)updateKeyBehaviors:(id)arg1 withBehaviors:(id)arg2 forState:(id)arg3;
- (id)_keyboardBehaviorState;
- (void)performKeyBehaviorConfirmFirstCandidate;
- (void)performKeyBehaviorConfirm;
- (void)_handleKeyBehavior:(unsigned long long)arg1 forKeyType:(id)arg2;
- (void)_nop;
- (void)updateReturnKey:(_Bool)arg1;
- (void)updateReturnKey;
- (void)setReturnKeyEnabled:(_Bool)arg1;
- (_Bool)returnKeyEnabled;
- (id)returnKeyDisplayName;
- (int)returnKeyType;
- (_Bool)noContent;
- (void)setCandidates:(id)arg1;
- (void)removeAutocorrectPromptAndCandidateList;
- (void)removeCandidateList;
- (void)removeAutocorrectPrompt;
- (id)autocorrectPrompt;
- (void)setAutocorrectionList:(id)arg1;
- (void)setAutocorrection:(id)arg1;
- (void)responseContextDidChange;
- (_Bool)isMinimized;
- (void)resizeCandidateBarWithDelta:(double)arg1;
- (void)updateCandidateDisplay;
- (_Bool)needsToDeferUpdateTextCandidateView;
- (void)updateCandidateDisplayAsyncWithCandidateSet:(id)arg1;
- (_Bool)displaysCandidates;
- (void)setCandidateList:(id)arg1 updateCandidateView:(_Bool)arg2;
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2 forInput:(id)arg3;
- (_Bool)acceptWord:(id)arg1 firstDelete:(unsigned long long)arg2;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (void)replaceText:(id)arg1;
- (void)clearDelegate;
- (void)clearAnimations;
- (void)clearTransientState;
- (void)completeAcceptCandidateBeforeAddingInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1 executionContext:(id)arg2;
- (void)addInputObject:(id)arg1;
- (void)clearInput;
- (id)candidateList;
- (void)candidateListSelectionDidChange:(id)arg1;
- (void)candidateListAcceptCandidate:(id)arg1;
- (void)revealHiddenCandidates;
- (void)jumpToCompositions;
- (void)showNextPage;
- (void)showPreviousCandidate;
- (void)showNextCandidates;
- (void)completeAcceptCandidate:(id)arg1;
- (void)acceptCurrentCandidateIfSelectedWithExecutionContext:(id)arg1;
- (void)acceptCurrentCandidateIfSelected;
- (void)setUserSelectedCurrentCandidate:(_Bool)arg1;
- (_Bool)userSelectedCurrentCandidate;
- (void)acceptFirstCandidate;
- (void)acceptCurrentCandidateForInput:(id)arg1 executionContext:(id)arg2;
- (void)acceptCurrentCandidateWithExecutionContext:(id)arg1;
- (void)acceptCurrentCandidateForInput:(id)arg1;
- (void)acceptCurrentCandidate;
- (void)acceptCandidate:(id)arg1 forInput:(id)arg2;
- (void)acceptCandidate:(id)arg1;
- (void)acceptCandidate:(id)arg1 atIndex:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)acceptPredictiveInput:(id)arg1 executionContext:(id)arg2;
- (void)acceptPredictiveInput:(id)arg1;
- (void)acceptCandidate:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeAutocorrection;
- (void)acceptAutocorrection;
- (void)willReplaceTextInRangedSelectionWithKeyboardInput;
- (void)completeDeleteFromInput;
- (void)deleteFromInputWithExecutionContext:(id)arg1;
- (void)deleteFromInput;
- (void)didHandleWebKeyEvent;
- (void)completeDeleteOnceFromInputWithCharacterBefore:(unsigned int)arg1;
- (void)scheduleReplacementsAfterDeletionToEndOfWord;
- (void)moveSelectionToEndOfWord;
- (void)collapseSelectionAndAdjustByOffset:(long long)arg1;
- (void)collapseSelection;
- (_Bool)selectionIsEndOfWord;
- (_Bool)nextCharacterIsWordCharacter;
- (void)deleteOnceFromInputWithExecutionContext:(id)arg1;
- (void)updateLayoutAndSetShift;
- (_Bool)shouldEnableShiftForDeletedCharacter:(unsigned int)arg1;
- (void)movePhraseBoundaryToDirection:(long long)arg1;
- (unsigned long long)phraseBoundary;
- (void)didChangePhraseBoundary;
- (void)completeAddInputString:(id)arg1 generateCandidates:(_Bool)arg2;
- (void)completeAddInputString:(id)arg1;
- (void)addWordTerminator:(id)arg1 afterSpace:(_Bool)arg2 elapsedTime:(double)arg3 executionContext:(id)arg4;
- (void)didApplyAutocorrection:(id)arg1 autocorrectPromptFrame:(struct CGRect)arg2;
- (_Bool)shouldApplyAcceptedAutocorrection:(id)arg1;
- (void)acceptAutocorrection:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (void)syncInputManagerToAcceptedAutocorrection:(id)arg1 forInput:(id)arg2;
- (void)didAcceptAutocorrection:(id)arg1 wordTerminator:(id)arg2;
- (id)inputWordForTerminatorAtSelection;
- (void)acceptAutocorrectionForWordTerminator:(id)arg1 executionContextPassingTIKeyboardCandidate:(id)arg2;
- (id)acceptAutocorrectionForWordTerminator:(id)arg1;
- (void)addInputEvent:(id)arg1 executionContext:(id)arg2;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;
- (_Bool)shouldAcceptCandidate:(id)arg1 beforeInputString:(id)arg2;
- (id)handleReplacement:(id)arg1 forSpaceAndInput:(id)arg2;
- (id)handleDeleteAutospaceForInputString:(id)arg1 afterSpace:(_Bool)arg2;
- (_Bool)shouldDeleteAutospaceBeforeTerminator:(id)arg1;
- (id)handleDoubleSpacePeriodForInputString:(id)arg1 afterSpace:(_Bool)arg2 elapsedTime:(double)arg3;
- (void)updateDoubleSpacePeriodStateForString:(id)arg1;
- (void)updateDoubleSpacePeriodStateForCharacter:(unsigned int)arg1;
- (id)inputEventForInputString:(id)arg1;
- (void)addInputString:(id)arg1 fromVariantKey:(_Bool)arg2;
- (void)addInputString:(id)arg1;
- (void)deleteBackward;
- (void)deleteForwardAndNotify:(_Bool)arg1;
- (void)updateKeyboardStateForDeletion;
- (void)deleteBackwardAndNotify:(_Bool)arg1;
- (void)insertTextAfterSelection:(id)arg1;
- (void)updateKeyboardStateForInsertion:(id)arg1;
- (void)insertText:(id)arg1;
- (void)setPreviousInputString:(id)arg1;
- (_Bool)acceptInputString:(id)arg1;
- (void)handleStringInput:(id)arg1 withFlags:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)handleClearWithExecutionContext:(id)arg1;
- (void)handleClear;
- (void)handleDelete;
- (void)handleDeleteWithExecutionContext:(id)arg1;
- (void)handleDeleteAsRepeat:(_Bool)arg1 executionContext:(id)arg2;
- (void)setInputPoint:(struct CGPoint)arg1;
- (void)keyDeactivated;
- (void)keyActivated;
- (_Bool)supportsNumberKeySelection;
- (_Bool)suppliesCompletions;
- (_Bool)usesAutocorrectionLists;
- (void)setUsesCandidateSelection:(_Bool)arg1;
- (_Bool)usesCandidateSelection;
@property(nonatomic) _Bool shouldSkipCandidateSelection;
- (void)forceShiftUpdateIfKeyboardStateChanged;
- (void)forceShiftUpdate;
- (void)clearShiftState;
- (_Bool)shiftLockedEnabled;
- (_Bool)isShiftLocked;
- (_Bool)isAutoShifted;
- (_Bool)isShifted;
- (void)setShiftLockedForced:(_Bool)arg1;
- (void)setShiftLocked:(_Bool)arg1;
- (void)setShiftNeedsUpdate;
- (void)setShiftPreventAutoshift:(_Bool)arg1;
- (void)setShift:(_Bool)arg1 autoshift:(_Bool)arg2;
- (void)setShift:(_Bool)arg1;
- (void)toggleShift;
- (void)setShiftOffIfNeeded;
- (_Bool)isSelectionAtSentenceAutoshiftBoundary;
- (void)updateStylingTraitsIfNeeded;
- (void)updateShiftState;
- (void)notifyShiftState;
- (void)updateInputManagerAutocapitalizationType;
- (void)recomputeActiveInputModesFromList:(id)arg1;
- (_Bool)shouldSwitchInputMode:(id)arg1;
- (void)recomputeActiveInputModes;
- (_Bool)shouldForceASCIICapable;
- (void)releaseInputManagerIfInactive;
- (void)releaseInputManager;
- (void)setInputManagerFromCurrentInputMode;
@property(readonly, nonatomic) TIKeyboardInputManagerStub *inputManager;
- (void)removeAllDynamicDictionaries;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 executionContext:(id)arg2;
- (void)performHitTestForTouchEvent:(id)arg1 executionContextPassingNSNumber:(id)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1 delayed:(_Bool)arg2;
- (void)skipHitTestForTouchEvent:(id)arg1;
- (void)generateReplacementsForString:(id)arg1 candidatesHandler:(CDUnknownBlockType)arg2 executionContext:(id)arg3;
- (void)handleAcceptedCandidate:(id)arg1 executionContext:(id)arg2;
- (void)inputManagerDidGenerateAutocorrections:(id)arg1 executionContext:(id)arg2;
- (void)generateAutocorrectionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)generateAutocorrectionWithExecutionContext:(id)arg1;
- (void)inputManagerDidGenerateCandidatesForRequest:(id)arg1 resultSet:(id)arg2;
- (void)cancelCandidateRequests;
- (void)generateCandidatesAsynchronouslyWithRange:(struct _NSRange)arg1 selectedCandidate:(id)arg2;
- (void)generateCandidatesAsynchronously;
- (void)performKeyboardOutput:(id)arg1;
- (void)handleKeyboardInput:(id)arg1 executionContext:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)syncKeyboardToConfiguration:(id)arg1;
- (void)syncInputManagerToKeyboardStateWithExecutionContext:(id)arg1;
- (void)syncInputManagerToKeyboardState;
@property(readonly, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)selectionDidChange:(id)arg1;
- (void)completeUpdateForChangedSelection:(_Bool)arg1;
- (_Bool)shouldGenerateCandidatesAfterSelectionChange;
- (void)updateForChangedSelectionWithExecutionContext:(id)arg1;
- (void)updateForChangedSelection;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)selectionWillChange:(id)arg1;
- (void)prepareForSelectionChange;
- (void)syncDocumentStateToInputDelegateWithExecutionContext:(id)arg1;
- (void)syncDocumentStateToInputDelegate;
- (id)inputStringFromPhraseBoundary;
- (id)searchStringForMarkedText;
- (id)markedTextOverlay;
- (id)markedText;
- (_Bool)hasEditableMarkedText;
- (_Bool)hasMarkedText;
- (void)unmarkText:(id)arg1;
- (void)unmarkText;
- (void)clearInputForMarkedText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2 inputString:(id)arg3 searchString:(id)arg4;
- (int)_clipCornersOfView:(id)arg1;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
- (void)didMoveToSuperview;
- (long long)interfaceOrientation;
- (void)updateLayout;
- (void)finishLayoutChangeWithArguments:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowCandidateBar;
- (_Bool)currentKeyboardTraitsAllowCandidateBar;
- (struct CGRect)subtractKeyboardFrameFromRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)geometryChangeDone:(_Bool)arg1;
- (void)prepareForGeometryChange;
- (void)releaseSuppressUpdateCandidateView;
- (void)updateLayoutIfNeeded;
- (_Bool)handleKeyCommand:(id)arg1 repeatOkay:(_Bool *)arg2;
- (void)handleObserverCallback;
- (void)updateObserverState;
- (void)setChangeNotificationDisabled:(_Bool)arg1;
- (_Bool)changeNotificationDisabled;
- (void)setChanged;
- (void)textFrameChanged:(id)arg1;
- (void)callChanged;
- (void)callChangedSelection;
- (_Bool)callShouldDeleteWithWordCountForRapidDelete:(int)arg1 characterCountForRapidDelete:(int)arg2;
- (_Bool)usesAutoDeleteWord;
- (_Bool)callShouldReplaceExtendedRange:(unsigned long long)arg1 withText:(id)arg2 includeMarkedText:(_Bool)arg3;
- (_Bool)callShouldInsertText:(id)arg1;
- (void)_requestInputManagerSync;
- (void)_performInputViewControllerOutput:(id)arg1;
- (_Bool)_shouldRequestInputManagerSyncForKeyboardOutputCallbacks:(id)arg1;
- (void)enable;
- (id)textInputTraits;
- (void)setDefaultTextInputTraits:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)finishTextChanged;
- (void)textChanged:(id)arg1 executionContext:(id)arg2;
- (void)textChanged:(id)arg1;
- (void)layoutHasChanged;
- (void)textWillChange:(id)arg1;
- (void)storeDelegateConformance;
- (_Bool)autocorrectSpellingEnabled;
- (void)setAutocorrectSpellingEnabled:(_Bool)arg1;
- (_Bool)delegateSupportsCorrectionUI;
- (_Bool)delegateIsSMSTextView;
- (void)didSetDelegate;
- (void)setDelegate:(id)arg1 force:(_Bool)arg2;
@property(retain, nonatomic) UIResponder<UIKeyInput> *delegate;
@property(readonly, nonatomic) UIResponder *delegateAsResponder;
@property(readonly, nonatomic) UIResponder<UIWKInteractionViewProtocol> *asynchronousInputDelegate;
@property(readonly, nonatomic) UIResponder<UITextInput> *inputDelegate;
@property(readonly, nonatomic) UIResponder<UITextInputPrivate> *privateInputDelegate;
@property(readonly, nonatomic) id <UIKeyboardInput> legacyInputDelegate;
- (void)takeTextInputTraitsFromDelegate;
- (void)setCorrectionLearningAllowed:(_Bool)arg1;
- (void)finishLayoutToCurrentInterfaceOrientation;
- (void)updateLayoutToCurrentInterfaceOrientation;
- (void)prepareLayoutForInterfaceOrientation:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setOrientation;
- (void)_updateSoundPreheatingForWindow:(id)arg1;
- (void)setInputModeToNextASCIICapableInPreferredList;
- (void)finishSetInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)setInputModeToNextInPreferredListWithExecutionContext:(id)arg1;
- (void)showInternationalKeyInfoAlertIfNeeded;
- (void)showInformationalAlertIfNeededForReason:(int)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)fadeAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1;
- (void)updateInputModeIndicatorOnSingleKeyOnly:(_Bool)arg1 preserveIfPossible:(_Bool)arg2;
- (void)setInputModeFromPreferences;
- (void)finishSetInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)finishSetExtensionInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)finishSetKeyboardInputMode:(id)arg1 didChangeDirection:(_Bool)arg2;
- (void)reinitializeAfterInputModeSwitch:(_Bool)arg1;
- (void)cleanUpBeforeInputModeSwitch;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;
- (void)setKeyboardInputMode:(id)arg1 userInitiated:(_Bool)arg2;
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2 updateIndicator:(_Bool)arg3 executionContext:(id)arg4;
- (void)setInputMode:(id)arg1 userInitiated:(_Bool)arg2;
- (void)setInputMode:(id)arg1;
- (_Bool)shiftLockPreference;
- (void)setHardwareKeyboardsSeenPreference:(id)arg1;
- (id)hardwareKeyboardsSeenPreference;
- (void)setShouldUpdateCacheOnInputModesChange:(_Bool)arg1;
- (id)inputModeLastUsedForLanguage:(id)arg1;
- (void)updateInputModeLastChosenPreference;
- (id)inputModeLastUsedPreference;
- (id)inputModePreference;
- (void)saveInputModesPreference:(id)arg1;
- (void)setAutomaticMinimizationEnabled:(_Bool)arg1;
- (_Bool)automaticMinimizationEnabled;
- (_Bool)keyboardsExpandedPreference;
- (id)UILanguagePreference;
- (_Bool)doubleSpacePeriodPreference;
- (_Bool)swipeToTabPreference;
- (_Bool)checkSpellingPreferenceForTraits;
- (_Bool)checkSpellingPreference;
- (_Bool)autocapitalizationPreference;
- (_Bool)predictionPreferenceForTraits;
- (_Bool)predictionForTraits;
- (_Bool)autocorrectionPreferenceForTraits;
- (_Bool)keyboardIsKeyPad;
- (_Bool)autocorrectionPreference;
- (_Bool)performanceLoggingPreference;
- (void)cancelSplitTransition;
- (_Bool)hideAccessoryViewsDuringSplit;
- (void)setSplitProgress:(double)arg1;
- (void)setInSplitKeyboardMode:(_Bool)arg1;
@property(readonly, nonatomic) _Bool splitTransitionInProgress;
@property(readonly) unsigned long long minimumTouchesForTranslation;
@property _Bool rivenSplitLock;
- (void)refreshRivenPreferences;
- (struct CGSize)dragGestureSize;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
@property(readonly) _Bool centerFilled;
- (void)defaultsDidChange;
- (void)selectionScrolling:(id)arg1;
- (void)applicationResumedEventsOnly:(id)arg1;
- (void)applicationSuspendedEventsOnly:(id)arg1;
- (void)removeFromSuperview;
- (void)clearLayouts;
@property(retain, nonatomic) TIKeyboardLayout *layoutForKeyHitTest;
- (void)refreshKeyboardState;
- (id)layoutState;
- (void)dealloc;
- (void)detach;
- (void)keyboardDidHide:(id)arg1;
- (void)delayedInit;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic) _Bool hardwareKeyboardIsSeen;
- (void)callLayoutUpdateAllLocalizedKeys;
- (void)callLayoutUpdateLocalizedKeys;
- (void)callLayoutLongPressAction;
- (void)callLayoutSetAutoshift:(_Bool)arg1;
- (void)callLayoutSetShift:(_Bool)arg1;
- (_Bool)callLayoutIsShiftKeyBeingHeld;
- (_Bool)callLayoutIsShiftKeyPlaneChooser;
- (_Bool)callLayoutIgnoresShiftState;
- (_Bool)callLayoutUsesAutoShift;
- (void)callLayoutUpdateReturnKey;
- (void)timeElapsed:(unsigned int)arg1 message:(id)arg2;
- (void)timeMark:(unsigned int)arg1;
- (void)timeMark:(unsigned int)arg1 message:(id)arg2;
- (void)logHandwritingData;
- (_Bool)isAutoDeleteActive;
- (void)testAutocorrectionPromptWithCorrection:(id)arg1;
- (int)textInputChangingCount;
- (_Bool)_isShowingCandidateUIWithAvailableCandidates;
- (void)updateFromTextInputTraits;
- (_Bool)hasAutoRepeat;
- (void)_setShiftLockedEnabled:(_Bool)arg1;
- (void)_setInputManager:(id)arg1;
- (void)composeTypologyRadar;
- (void)moveCursorRightShifted:(_Bool)arg1;
- (void)moveCursorLeftShifted:(_Bool)arg1;
- (void)acceptAutocorrectionAndEndComposition;
- (id)_layout;
- (_Bool)isUsingDictationLayout;
- (void)setTextInputChangesIgnored:(_Bool)arg1;
- (void)finishSplitTransitionWithProgress:(double)arg1;
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;
- (id)selectionView;
- (void)setInitialDirection;
- (_Bool)_shouldMinimizeForHardwareKeyboard;
- (void)clearLanguageIndicator;
- (_Bool)keyboardDrawsOpaque;
- (void)clearExcessKeyboardMemory;
- (_Bool)_needsCandidates;
- (void)_setNeedsCandidates:(_Bool)arg1;
- (long long)_positionInCandidateList:(id)arg1;
- (_Bool)_hasCandidates;
- (id)_getAutocorrection;
- (void)_setAutocorrects:(_Bool)arg1;
- (id)_getLocalizedInputMode;
- (id)_getCurrentKeyboardName;
- (id)_getCurrentKeyplaneName;
- (void)stopKeyboardRecording;
- (void)startKeyboardRecording;
- (void)installRecorder;
- (_Bool)keyboardRecordingEnabled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardInputManagerClient : NSObject
{
    NSXPCConnection *_connection;
}

+ (_Bool)instancesRespondToSelector:(SEL)arg1;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void)handleError:(id)arg1 forRequest:(id)arg2;
- (void)handleRequest:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)init;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardInputManagerClientRequest : NSObject
{
    NSInvocation *_invocation;
    unsigned long long _errorCount;
}

+ (id)untargetedInvocationWithInvocation:(id)arg1 withCompletion:(_Bool)arg2;
@property(nonatomic) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(readonly, nonatomic) NSInvocation *invocation;
- (id)initWithInvocation:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardInputManagerMux : NSObject
{
    NSMutableArray *_clients;
    id <_UIIVCResponseDelegateImpl> _responseDelegate;
    id <TIKeyboardInputManager> _systemInputManager;
}

+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) id <TIKeyboardInputManager> systemInputManager; // @synthesize systemInputManager=_systemInputManager;
@property(retain, nonatomic) id <_UIIVCResponseDelegateImpl> responseDelegate; // @synthesize responseDelegate=_responseDelegate;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)updateClientResponseDelegatesWithDelegate:(id)arg1;
- (void)releaseConnectedClients;
- (void)removeAllClients;
- (void)removeClient:(id)arg1;
- (void)addClient:(id)arg1;
- (void)setSystemInputManagerFromKeyboardState:(id)arg1;
@property(readonly, nonatomic) _Bool hasSystemInputManager;
- (_Bool)_systemHasKbd;
- (void)dealloc;

@end

@interface UIKeyboardInputModeController : NSObject
{
    UIKeyboardInputMode *_currentInputMode;
    NSArray *_inputModesWithoutHardwareSupport;
    NSArray *_allExtensions;
    NSArray *_allowedExtensions;
    _Bool _skipExtensionInputModes;
    _Bool _cacheNeedsRefresh;
    NSArray *keyboardInputModes;
    NSArray *keyboardInputModeIdentifiers;
    NSArray *enabledInputModes;
    NSArray *normalizedInputModes;
    NSArray *defaultKeyboardInputModes;
    NSArray *defaultRawInputModes;
    NSArray *defaultInputModes;
    NSArray *defaultNormalizedInputModes;
    UIKeyboardInputMode *_lastUsedInputMode;
    NSString *_inputModeContextIdentifier;
    id <UIKeyboardInputModeControllerDelegate> _delegate;
    UIKeyboardInputMode *_nextInputModeToUse;
    UIKeyboardInputMode *_currentUsedInputMode;
}

+ (id)sharedInputModeController;
@property(retain, nonatomic) UIKeyboardInputMode *currentUsedInputMode; // @synthesize currentUsedInputMode=_currentUsedInputMode;
@property(retain, nonatomic) UIKeyboardInputMode *nextInputModeToUse; // @synthesize nextInputModeToUse=_nextInputModeToUse;
@property(nonatomic) id <UIKeyboardInputModeControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *inputModeContextIdentifier; // @synthesize inputModeContextIdentifier=_inputModeContextIdentifier;
@property(retain, nonatomic) UIKeyboardInputMode *lastUsedInputMode; // @synthesize lastUsedInputMode=_lastUsedInputMode;
@property(readonly, nonatomic) NSArray *allowedExtensions; // @synthesize allowedExtensions=_allowedExtensions;
@property(retain) NSArray *defaultNormalizedInputModes; // @synthesize defaultNormalizedInputModes;
@property(retain) NSArray *defaultInputModes; // @synthesize defaultInputModes;
@property(copy, nonatomic) NSArray *defaultRawInputModes; // @synthesize defaultRawInputModes;
@property(retain) NSArray *defaultKeyboardInputModes; // @synthesize defaultKeyboardInputModes;
@property(retain) NSArray *normalizedInputModes; // @synthesize normalizedInputModes;
@property(retain) NSArray *enabledInputModes; // @synthesize enabledInputModes;
@property(retain) NSArray *keyboardInputModeIdentifiers; // @synthesize keyboardInputModeIdentifiers;
@property(retain) NSArray *keyboardInputModes; // @synthesize keyboardInputModes;
- (void)startConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)startDictationConnectionForFileAtURL:(id)arg1 forInputModeIdentifier:(id)arg2;
- (void)performWithoutExtensionInputModes:(CDUnknownBlockType)arg1;
- (void)switchToCurrentSystemInputMode;
- (void)updateCurrentAndNextInputModes;
- (void)updateLastUsedInputMode:(id)arg1;
- (id)nextInputModeInPreferenceListForTraits:(id)arg1;
- (id)nextInputModeToUseForTraits:(id)arg1;
- (id)nextInputModeFromList:(id)arg1 withFilter:(unsigned long long)arg2 withTraits:(id)arg3;
- (id)extensionInputModes;
- (_Bool)verifyKeyboardExtensionsWithApp;
- (_Bool)deviceStateIsLocked;
- (id)_MCFilteredExtensionIdentifiers;
- (void)_clearAllExtensionIfNeeded;
- (void)didEnterBackground:(id)arg1;
- (id)suggestedInputModesForPreferredLanguages;
- (id)preferredLanguages;
- (id)suggestedInputModesForCurrentLocale;
- (id)suggestedInputModesForCurrentLocale:(_Bool)arg1 fallbackToDefaultInputModes:(_Bool)arg2;
- (id)defaultEnabledInputModesForCurrentLocale:(_Bool)arg1;
- (_Bool)currentLocaleRequiresExtendedSetup;
- (void)updateCurrentInputMode:(id)arg1;
- (void)_setCurrentInputMode:(id)arg1 force:(_Bool)arg2;
@property(retain) UIKeyboardInputMode *currentInputMode;
@property(readonly, nonatomic) _Bool containsDictationSupportedInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *currentPublicInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *currentSystemInputMode;
@property(readonly, nonatomic) UIKeyboardInputMode *hardwareInputMode;
- (id)_systemInputModePassingTest:(CDUnknownBlockType)arg1;
@property(nonatomic) UIKeyboardInputMode *currentInputModeInPreference;
@property(readonly) NSArray *activeInputModeIdentifiers;
- (id)activeInputModes;
- (id)inputModeWithIdentifier:(id)arg1;
- (id)init;
- (void)dealloc;
- (_Bool)identifierIsValidSystemInputMode:(id)arg1;
- (id)identifiersFromInputModes:(id)arg1;
@property(readonly) NSArray *enabledInputModeLanguages;
@property(readonly) NSArray *normalizedEnabledInputModeIdentifiers;
@property(readonly) NSArray *enabledInputModeIdentifiers;
- (id)enabledInputModeIdentifiers:(_Bool)arg1;
@property(readonly) NSArray *inputModesWithoutHardwareSupport;
@property(readonly) NSArray *supportedInputModeIdentifiers;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardKeyplaneTransition : NSObject
{
    double _currentProgress;
    double _liftOffProgress;
    double _finishProgress;
    double _finishDuration;
    double _finalTransitionStartTime;
    CADisplayLink *_displayLink;
    UIKBTree *_start;
    UIKBTree *_end;
    UIView *_startView;
    UIView *_endView;
    CDUnknownBlockType _completionBlock;
    id <UIKeyboardKeyplaneTransitionDelegate> _transitionDelegate;
    _Bool _initiallyAtEnd;
}

@property(nonatomic) _Bool initiallyAtEnd; // @synthesize initiallyAtEnd=_initiallyAtEnd;
@property(nonatomic) id <UIKeyboardKeyplaneTransitionDelegate> transitionDelegate; // @synthesize transitionDelegate=_transitionDelegate;
@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (_Bool)canDisplayTransitionFromKeyplane:(id)arg1 toKeyplane:(id)arg2;
- (void)finishWithProgress:(double)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)transitionToFinalState:(id)arg1;
- (void)finalizeTransition;
- (void)removeAllAnimations;
- (void)updateWithProgress:(double)arg1;
- (void)rebuildFromStartKeyplane:(id)arg1 startView:(id)arg2 toEndKeyplane:(id)arg3 endView:(id)arg4;
@property(readonly, nonatomic) double endHeight;
@property(readonly, nonatomic) double startHeight;
- (void)dealloc;

@end

@interface UIKeyboardLayout : UIView
{
    UITextInputTraits *_inputTraits;
    UIKBScreenTraits *_screenTraits;
    UIKBTextEditingTraits *_textEditingTraits;
    NSMutableArray *_uncommittedTouches;
    UITouch *_activeTouch;
    UITouch *_shiftKeyTouch;
    long long _cursorLocation;
    _Bool _disableInteraction;
    UIKeyboardTaskQueue *_taskQueue;
    _Bool hideKeysUnderIndicator;
}

+ (Class)_subclassForScreenTraits:(id)arg1;
@property(nonatomic) _Bool hideKeysUnderIndicator; // @synthesize hideKeysUnderIndicator;
@property(nonatomic) _Bool disableInteraction; // @synthesize disableInteraction=_disableInteraction;
@property(nonatomic) long long cursorLocation; // @synthesize cursorLocation=_cursorLocation;
@property(retain, nonatomic) UITouch *shiftKeyTouch; // @synthesize shiftKeyTouch=_shiftKeyTouch;
@property(retain, nonatomic) UITouch *activeTouch; // @synthesize activeTouch=_activeTouch;
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;
- (id)simulateTouch:(struct CGPoint)arg1;
- (void)changeToKeyplane:(id)arg1;
- (id)keyplaneNamed:(id)arg1;
- (id)keyplaneForKey:(id)arg1;
- (id)baseKeyForString:(id)arg1;
- (void)triggerSpaceKeyplaneSwitchIfNecessary;
- (id)currentKeyplane;
- (void)setPasscodeOutlineAlpha:(double)arg1;
- (_Bool)shouldFadeToLayout;
- (_Bool)shouldFadeFromLayout;
- (void)fadeWithInvocation:(id)arg1;
- (SEL)handlerForNotification:(id)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
- (struct CGSize)dragGestureSize;
- (double)flickDistance;
- (double)hitBuffer;
- (_Bool)canHandleEvent:(id)arg1;
- (_Bool)canForceTouchCommit:(id)arg1;
- (void)commitTouches:(id)arg1 executionContext:(id)arg2;
- (void)forceUpdatesForCommittedTouch;
- (void)commitTouches:(id)arg1;
- (id)touchesToCommitBeforeTouch:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)clearShiftIfNecessaryForEndedTouch:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;
- (void)touchCancelled:(id)arg1;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (void)didCommitTouch:(id)arg1;
- (void)touchUp:(id)arg1;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (void)touchDragged:(id)arg1;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (void)touchDown:(id)arg1;
- (_Bool)canProduceString:(id)arg1;
- (_Bool)shouldShowIndicator;
- (id)activationIndicatorView;
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (void)restoreDefaultsForAllKeys;
- (void)restoreDefaultsForKey:(id)arg1;
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;
- (void)setAction:(SEL)arg1 forKey:(id)arg2;
- (void)setTarget:(id)arg1 forKey:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
@property(retain, nonatomic) NSString *layoutTag;
- (void)setRenderConfig:(id)arg1;
- (void)updateBackgroundCorners;
- (_Bool)canMultitap;
- (_Bool)hasAccentKey;
- (_Bool)hasCandidateKeys;
- (id)candidateList;
- (_Bool)performSpaceAction;
- (_Bool)performReturnAction;
- (void)didClearInput;
- (void)longPressAction;
- (_Bool)isShiftKeyPlaneChooser;
- (_Bool)isShiftKeyBeingHeld;
- (void)setAutoshift:(_Bool)arg1;
- (void)setShift:(_Bool)arg1;
- (_Bool)isAlphabeticPlane;
- (_Bool)ignoresShiftState;
- (_Bool)usesAutoShift;
- (void)updateLocalizedKeys:(_Bool)arg1;
- (void)deactivateActiveKeys;
- (void)clearUnusedObjects:(_Bool)arg1;
- (unsigned long long)textEditingKeyMask;
- (void)setTextEditingTraits:(id)arg1;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
@property(readonly, nonatomic) long long idiom;
@property(readonly, nonatomic) long long orientation;
@property(retain, nonatomic) UIKeyboardTaskQueue *taskQueue;
- (void)willMoveToWindow:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)addWipeRecognizer;
- (void)wipeGestureRecognized:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutStar : UIKeyboardLayout
{
    UIKBTree *_keyboard;
    UIKBTree *_keyplane;
    NSString *_keyboardName;
    NSString *_keyplaneName;
    long long _appearance;
    UIKBTree *_activeKey;
    UIKBKeyplaneView *_keyplaneView;
    UIKBBackgroundView *_backgroundView;
    double _prevTouchUpTime;
    double _prevTouchDownTime;
    int _prevUpActions;
    NSMutableDictionary *_keyboards;
    NSMutableDictionary *_allKeyplaneViews;
    NSMutableSet *_allKeyplaneKeycaps;
    NSMutableSet *_validInputStrings;
    NSString *_localizedInputKey;
    struct __CFDictionary *_extendedTouchInfoMap;
    int _preferredTrackingChangeCount;
    int _shiftTrackingChangeCount;
    NSMutableSet *_accentInfo;
    NSMutableSet *_hasAccents;
    id _spaceTarget;
    SEL _spaceAction;
    SEL _spaceLongAction;
    id _returnTarget;
    SEL _returnAction;
    SEL _returnLongAction;
    id _deleteTarget;
    SEL _deleteAction;
    SEL _deleteLongAction;
    _Bool _shift;
    _Bool _autoshift;
    _Bool _settingShift;
    _Bool _didLongPress;
    NSString *_preTouchKeyplaneName;
    _Bool _revertKeyplaneAfterTouch;
    _Bool _wasShifted;
    _Bool _swipeDetected;
    _Bool _showIntlKey;
    _Bool _showDictationKey;
    _Bool _suppressDeactivateKeys;
    _Bool _shiftLockReady;
    double _shiftLockFirstTapTime;
    UISwipeGestureRecognizer *_rightSwipeRecognizer;
    UISwipeGestureRecognizer *_leftSwipeRecognizer;
    UISwipeGestureRecognizer *_upSwipeRecognizer;
    UIKeyboardKeyplaneTransition *_keyplaneTransition;
    UIKeyboardSplitTransitionView *_transitionView;
    double _initialSplitProgress;
    double _finalSplitProgress;
    double _initialPinchSeparation;
    double _pinchSeparationValues[4];
    _Bool _pinchDetected;
    double _autoSplitLastUpdate;
    double _autoSplitElapsedTime;
    CADisplayLink *_displayLink;
    _Bool _ghostKeysEnabled;
    UIDelayedAction *_delayedCentroidUpdate;
    _Bool _isRebuilding;
    long long _initialBias;
    _Bool _edgeSwipeDetected;
    _Bool _edgeSwipeInhibited;
    double _initialEdgeTranslation;
    double _edgeSwipeProgress;
    double _edgeSwipeVelocity;
    NSString *_layoutTag;
    _Bool _preRotateShift;
    NSString *_preRotateKeyplaneName;
    UIDelayedAction *_multitapAction;
    _Bool _unshiftAfterMultitap;
    int _multitapCount;
    UIKBTree *_multitapKey;
    UIView *_flickPopupView;
    NSMutableDictionary *_compositeImages;
    NSTimer *_flickPopuptimer;
    id _touchInfo;
    UIView *_dimKeyboardImageView;
    _Bool _keyboardImageViewIsDim;
    _Bool _isOutOfBounds;
    NSMutableSet *_keysUnderIndicator;
    _UIKeyboardTypingSpeedLogger *_typingSpeedLogger;
    int playKeyClickSoundOn;
    UIKBRenderConfig *_renderConfig;
}

+ (id)sharedRivenKeyplaneGenerator;
+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2;
+ (id)keyboardWithName:(id)arg1 screenTraits:(id)arg2;
+ (id)keyboardFromFactoryWithName:(id)arg1 screen:(id)arg2;
+ (void)accessibilitySensitivityChanged;
+ (Class)_subclassForScreenTraits:(id)arg1;
@property(retain, nonatomic) UIKBRenderConfig *renderConfig; // @synthesize renderConfig=_renderConfig;
@property(copy, nonatomic) NSString *preTouchKeyplaneName; // @synthesize preTouchKeyplaneName=_preTouchKeyplaneName;
@property(nonatomic) int playKeyClickSoundOn; // @synthesize playKeyClickSoundOn;
@property(copy, nonatomic) NSString *localizedInputKey; // @synthesize localizedInputKey=_localizedInputKey;
@property(readonly, nonatomic) _Bool showsDictationKey; // @synthesize showsDictationKey=_showDictationKey;
@property(readonly, nonatomic) _Bool showsInternationalKey; // @synthesize showsInternationalKey=_showIntlKey;
@property(nonatomic) _Bool didLongPress; // @synthesize didLongPress=_didLongPress;
@property(nonatomic) _Bool autoShift; // @synthesize autoShift=_autoshift;
@property(nonatomic) _Bool shift; // @synthesize shift=_shift;
@property(retain, nonatomic) UIKBTree *activeKey; // @synthesize activeKey=_activeKey;
@property(copy, nonatomic) NSString *keyplaneName; // @synthesize keyplaneName=_keyplaneName;
@property(copy, nonatomic) NSString *keyboardName; // @synthesize keyboardName=_keyboardName;
@property(readonly, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(readonly, nonatomic) UIKBTree *keyboard; // @synthesize keyboard=_keyboard;
- (void)triggerSpaceKeyplaneSwitchIfNecessary;
- (id)currentKeyplaneView;
- (id)currentKeyplane;
- (void)fadeWithInvocation:(id)arg1;
- (id)simulateTouchForCharacter:(id)arg1 errorVector:(struct CGPoint)arg2 shouldTypeVariants:(_Bool)arg3 baseKeyForVariants:(_Bool)arg4;
- (id)simulateTouch:(struct CGPoint)arg1;
- (struct CGPoint)applyError:(struct CGPoint)arg1 toKey:(id)arg2;
- (void)changeToKeyplane:(id)arg1;
- (id)keyplaneNamed:(id)arg1;
- (id)keyplaneForKey:(id)arg1;
- (id)baseKeyForString:(id)arg1;
- (_Bool)shouldRetestKey:(id)arg1 withKeyplane:(id)arg2;
- (id)scriptingInfoWithChildren;
- (void)didRotate;
- (void)willRotate;
- (void)updateKeyCentroids;
- (_Bool)isShiftKeyBeingHeld;
- (void)setAutoshift:(_Bool)arg1;
- (void)updateShiftKeyState;
- (int)stateForShiftKey:(id)arg1;
- (_Bool)isAlphabeticPlane;
- (_Bool)ignoresShiftState;
- (_Bool)usesAutoShift;
- (void)upActionShift;
- (void)downActionShiftWithKey:(id)arg1;
- (unsigned int)upActionFlagsForKey:(id)arg1;
- (unsigned int)downActionFlagsForKey:(id)arg1;
- (_Bool)keyHasAccentedVariants:(id)arg1;
- (id)activeTouchForInteraction:(int)arg1;
- (id)touchForKey:(id)arg1;
- (void)clearAllTouchInfo;
- (void)clearInfoForTouch:(id)arg1;
- (void)cancelTouchIfNecessaryForInfo:(id)arg1;
- (id)generateInfoForTouch:(id)arg1;
- (id)infoForTouch:(id)arg1;
- (void)swipeDetected:(id)arg1;
- (void)uninstallGestureRecognizers;
- (void)installGestureRecognizers;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)touchCancelled:(id)arg1 executionContext:(id)arg2;
- (void)continueFromInternationalActionForTouchUp:(id)arg1 withActions:(long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(long long)arg6 executionContext:(id)arg7;
- (void)completeSendStringActionForTouchUp:(id)arg1 withActions:(long long)arg2 timestamp:(double)arg3 interval:(double)arg4 didLongPress:(_Bool)arg5 prevActions:(long long)arg6 executionContext:(id)arg7;
- (_Bool)shouldSendStringForFlick:(id)arg1;
- (_Bool)shouldYieldToControlCenterForFlickWithInitialPoint:(struct CGPoint)arg1 finalPoint:(struct CGPoint)arg2;
- (void)completeRetestForTouchUp:(id)arg1 timestamp:(double)arg2 interval:(double)arg3 executionContext:(id)arg4;
- (_Bool)shouldSendTouchUpToRecorder:(id)arg1;
- (_Bool)shouldSendTouchUpToInputManager:(id)arg1;
- (void)handleKeyboardMenusForTouch:(id)arg1;
- (void)touchUp:(id)arg1 executionContext:(id)arg2;
- (_Bool)predictionGestureDetectedForTouchInfo:(id)arg1;
- (void)handleDelayedCentroidUpdate;
- (void)cancelDelayedCentroidUpdate;
- (void)refreshGhostKeyState;
- (_Bool)performSpaceAction;
- (_Bool)performReturnAction;
- (void)completeHitTestForTouchDragged:(id)arg1 hitKey:(id)arg2;
- (void)touchDragged:(id)arg1 executionContext:(id)arg2;
- (_Bool)touchPassesDragThreshold:(id)arg1;
- (_Bool)canForceTouchCommit:(id)arg1;
- (void)completeDeleteActionForTouchDownWithActions:(unsigned long long)arg1 executionContext:(id)arg2;
- (void)completeSendStringActionForTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;
- (id)keyplaneNameForRevertAfterTouch;
- (void)completeCommitTouchesPrecedingTouchDownWithKey:(id)arg1 withActions:(unsigned long long)arg2 executionContext:(id)arg3;
- (void)incrementPunctuationIfNeeded:(id)arg1;
- (_Bool)shouldCommitPrecedingTouchesForTouchDownWithActions:(unsigned long long)arg1;
- (void)touchDownWithKey:(id)arg1 atPoint:(struct CGPoint)arg2 executionContext:(id)arg3;
- (void)fadeMenu:(id)arg1 forKey:(id)arg2;
- (void)fadeMenu:(id)arg1 forKey:(id)arg2 withDelay:(double)arg3;
- (void)hideMenu:(id)arg1 forKey:(id)arg2;
- (_Bool)shouldSkipResponseToGlobeKey:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)playKeyClickSound;
- (void)completeHitTestForTouchDown:(id)arg1 executionContext:(id)arg2;
- (void)touchDown:(id)arg1 executionContext:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (double)hitBuffer;
- (void)setSplit:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_autoSplit:(id)arg1;
- (void)setSplitProgress:(double)arg1;
- (void)interpretTouchesForSplit;
- (_Bool)pinchSplitGestureEnabled;
- (_Bool)pinchDetected;
- (void)finishSplitTransitionWithProgress:(double)arg1;
- (void)finishSplitTransition;
- (void)finishSplit;
- (void)showSplitTransitionView:(_Bool)arg1;
- (void)prepareForSplitTransition;
- (double)interpretPinchSeparationValues;
- (void)rebuildKeyplaneTransitionWithTargetBias:(long long)arg1;
- (void)finishHandBiasTransition;
- (void)interpretTouchesForEdgeSwipe;
- (long long)biasForKeyboard:(id)arg1;
- (long long)currentKeyboardBias;
- (_Bool)edgeSwipeGestureEnabled;
- (id)keyboardLayoutWithBias:(long long)arg1;
- (id)activationIndicatorView;
- (void)setHideKeysUnderIndicator:(_Bool)arg1;
- (_Bool)shouldShowIndicator;
- (void)showPopupVariantsForKey:(id)arg1;
- (id)_keyplaneVariantsKeyForString:(id)arg1;
- (void)longPressAction;
- (void)showMenu:(id)arg1 forKey:(id)arg2;
- (_Bool)isLongPressedKey:(id)arg1;
- (_Bool)isShiftKeyPlaneChooser;
- (void)restoreDefaultsForAllKeys;
- (void)restoreDefaultsForKey:(id)arg1;
- (void)setLongPressAction:(SEL)arg1 forKey:(id)arg2;
- (void)setAction:(SEL)arg1 forKey:(id)arg2;
- (void)setTarget:(id)arg1 forKey:(id)arg2;
- (void)setLabel:(id)arg1 forKey:(id)arg2;
- (void)updateLayoutTags;
@property(retain, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
- (void)didClearInput;
- (void)touchMultitapTimer;
- (void)cancelMultitapTimer;
- (void)handleMultitapTimerFired;
- (void)multitapExpired;
- (void)multitapInterrupted;
- (_Bool)canMultitap;
- (id)multitapCompleteKeys;
- (id)activeMultitapCompleteKey;
- (_Bool)hasAccentKey;
- (_Bool)hasCandidateKeys;
- (id)candidateList;
- (void)logHandwritingData;
- (void)deleteHandwritingStrokesAtIndexes:(id)arg1;
- (void)clearHandwritingStrokesIfNeededAndNotify:(_Bool)arg1;
- (id)createKeyEventForStringAction:(id)arg1 forKey:(id)arg2 isPopupVariant:(_Bool)arg3 isMultitap:(_Bool)arg4 isFlick:(_Bool)arg5;
- (void)performHitTestForTouchInfo:(id)arg1 touchStage:(int)arg2 executionContextPassingUIKBTree:(id)arg3;
- (int)keycodeForKey:(id)arg1;
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;
- (id)keyHitTest:(struct CGPoint)arg1;
- (id)keyHitTestWithoutCharging:(struct CGPoint)arg1;
- (id)keyHitTestClosestToPoint:(struct CGPoint)arg1;
- (id)keyHitTestContainingPoint:(struct CGPoint)arg1;
- (_Bool)shouldHitTestKey:(id)arg1;
- (void)deactivateActiveKeys;
- (void)deactivateActiveKeysClearingTouchInfo:(_Bool)arg1 clearingDimming:(_Bool)arg2;
- (id)initialKeyplaneNameWithKBStarName:(id)arg1;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
- (void)updateCachedKeyplaneKeycaps;
- (id)cacheTokenForKeyplane:(id)arg1;
- (id)cacheIdentifierForKeyplaneNamed:(id)arg1;
- (void)setState:(int)arg1 forKey:(id)arg2;
- (int)stateForKey:(id)arg1;
- (void)refreshForDictationAvailablityDidChange;
- (_Bool)shouldMergeKey:(id)arg1;
- (void)updateMoreAndInternationalKeys;
- (int)stateForKeyplaneSwitchKey:(id)arg1;
- (void)setTextEditingTraits:(id)arg1;
- (unsigned long long)textEditingKeyMask;
- (int)stateForManipulationKey:(id)arg1;
- (int)stateForStylingKey:(id)arg1;
- (_Bool)supportStylingWithKey:(id)arg1;
- (int)stateForDictationKey:(id)arg1;
- (int)stateForMultitapReverseKey:(id)arg1;
- (int)displayTypeHintForShiftKey;
- (int)displayTypeHintForMoreKey;
- (void)setCurrencyKeysForCurrentLocaleOnKeyplane:(id)arg1;
- (void)setReturnKeyEnabled:(_Bool)arg1 withDisplayName:(id)arg2 withType:(int)arg3;
- (void)updateTransitionWithFlags:(int)arg1;
- (_Bool)useScaledGeometrySet;
- (void)updateGlobeKeyDisplayString;
- (_Bool)canReuseKeyplaneView;
- (_Bool)shouldShowDictationKey;
- (void)updateBackgroundIfNeeded;
- (void)updateBackgroundCorners;
- (_Bool)handwritingPlane;
- (void)setPasscodeOutlineAlpha:(double)arg1;
- (struct CGImage *)renderedKeyplaneWithToken:(id)arg1 split:(_Bool)arg2;
- (struct CGImage *)renderedImageWithToken:(id)arg1;
- (struct CGImage *)renderedImageWithStateFallbacksForToken:(id)arg1;
- (struct CGImage *)cachedCompositeImageWithCacheKey:(id)arg1;
- (void)rebuildSplitTransitionView;
- (void)updateLocalizedKeys:(_Bool)arg1;
- (void)updateLocalizedKeysOnKeyplane:(id)arg1;
- (_Bool)canProduceString:(id)arg1;
- (double)lastTouchUpTimestamp;
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;
- (void)updateKeyboardForKeyplane:(id)arg1;
- (void)setKeyboardAppearance:(long long)arg1;
- (int)visualStyleForKeyboardIfSplit:(_Bool)arg1;
- (void)refreshForRivenPreferences;
- (struct CGRect)frameForKeylayoutName:(id)arg1;
- (struct CGRect)frameForKeylayoutName:(id)arg1 onKeyplaneName:(id)arg2;
- (struct CGSize)dragGestureSize;
- (id)defaultKeyplaneForKeyplane:(id)arg1;
- (id)splitNameForKeyplane:(id)arg1;
- (id)splitNameForKeyplaneName:(id)arg1;
- (id)defaultNameForKeyplaneName:(id)arg1;
@property(readonly, nonatomic) NSString *localizedInputMode;
- (SEL)handlerForNotification:(id)arg1;
- (void)flushKeyCache:(id)arg1;
- (void)removeFromSuperview;
- (void)clearUnusedObjects:(_Bool)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)accessibilitySensitivityChanged;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly, nonatomic, getter=isRotating) _Bool rotating;
- (void)setKeyForTouchInfo:(id)arg1 key:(id)arg2;
- (id)popupKeyViews;
- (struct CGRect)frameForLastKeyWithRepresentedString:(id)arg1;
- (struct CGRect)frameForKeyWithRepresentedString:(id)arg1;
- (id)keyWithRepresentedString:(id)arg1;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
- (void)activateCompositeKey:(id)arg1 direction:(int)arg2 flickString:(id)arg3 popupInfo:(id)arg4;
- (void)showPopupView:(int)arg1 withKey:(id)arg2 popupInfo:(id)arg3 force:(_Bool)arg4;
- (void)setKeyboardDim:(_Bool)arg1;
- (void)setDisableInteraction:(_Bool)arg1;
- (void)setKeyboardDim:(_Bool)arg1 amount:(double)arg2 withDuration:(double)arg3;
- (void)handleDismissFlickView;
- (void)handleDismissFlickView:(id)arg1;
- (void)handlePopupView;
- (void)handlePopupView:(id)arg1;
- (id)overlayCharacterImageForKey:(id)arg1 direction:(int)arg2 rect:(struct CGRect)arg3 flickString:(id)arg4 popupInfo:(id)arg5;
- (id)getFlickCompositeImageForKey:(id)arg1 direction:(int)arg2 rect:(struct CGRect)arg3;
- (id)getPopupBackgroundImageForKey:(id)arg1 direction:(int)arg2 popupInfo:(id)arg3 rect:(struct CGRect)arg4;
- (id)compositeImageForKey:(id)arg1;
- (void)setCompositeImage:(id)arg1 forKey:(id)arg2;
- (void)showFlickView:(int)arg1 withKey:(id)arg2 flickString:(id)arg3;
- (void)handleFlick:(id)arg1;
- (void)populateFlickPopupsForKey:(id)arg1;
- (id)flickStringForInputKey:(id)arg1 direction:(int)arg2;
- (id)flickPopupStringForKey:(id)arg1 withString:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutCursor : UIKeyboardLayoutStar
{
    UIKBTree *_indirectKeyboard;
    UIView *_selectionView;
    long long _selectedKeyIndex;
    _Bool _useGridSelection;
    _Bool _suppressOperations;
}

+ (struct CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2;
+ (id)carKeyboardNameForKeyboard:(id)arg1 screenTraits:(id)arg2;
- (_Bool)_handleMoveWithEvent:(id)arg1;
- (void)_moveWithEvent:(id)arg1;
- (_Bool)_handleWheelChangedWithEvent:(id)arg1;
- (void)_wheelChangedWithEvent:(id)arg1;
- (_Bool)_handlePhysicalKeyDownWithEvent:(id)arg1;
- (void)_handleKeyUIEvent:(id)arg1;
- (_Bool)_handleRemoteControlReceivedWithEvent:(id)arg1;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (_Bool)_handlePhysicalButtonEvent:(id)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)handleVisualDirectionalInput:(int)arg1;
- (_Bool)handleLinearDirectionalInput:(int)arg1;
- (void)takeKeyAction:(id)arg1;
- (_Bool)canHandleEvent:(id)arg1;
- (long long)keyIndexAtPoint:(struct CGPoint)arg1;
- (void)setHighlightedVariantIndex:(long long)arg1 key:(id)arg2;
- (void)setSelectedKeyIndex:(long long)arg1;
- (void)deactivateCurrentKey;
- (struct CGRect)selectionFrameForKeyIndex:(long long)arg1;
- (void)updateSelectionForCurrentKeyplane;
- (id)keyplaneKeyForCurrentKeyplane;
- (void)setCursorLocation:(long long)arg1;
- (long long)cursorLocation;
- (int)enabledStateForKey:(id)arg1;
- (int)activeStateForKey:(id)arg1;
- (void)updateStatesForGridSelection;
- (_Bool)shouldRetestKey:(id)arg1 withKeyplane:(id)arg2;
- (_Bool)shouldPreventInputManagerHitTestingForKey:(id)arg1;
- (void)setKeyplaneName:(id)arg1;
- (void)flushKeyCache:(id)arg1;
- (id)cacheTokenForKeyplane:(id)arg1;
- (void)setKeyboardAppearance:(long long)arg1;
- (void)setKeyboardName:(id)arg1 appearance:(long long)arg2;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
@property(readonly, nonatomic) UIKBTree *currentKey;
- (void)runWithSuppressedActions:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardLayoutDictation : UIKeyboardLayout
{
    UIKBBackgroundView *_backgroundView;
    UIKBTree *_keyplane;
}

+ (double)landscapeHeight;
+ (double)portraitHeight;
+ (id)activeInstance;
- (struct CGSize)dragGestureSize;
- (_Bool)usesAutoShift;
- (id)currentKeyplane;
- (struct CGSize)splitLeftSize;
- (_Bool)shouldFadeToLayout;
- (_Bool)shouldFadeFromLayout;
- (void)layoutSubviews;
- (void)setRenderConfig:(id)arg1;
- (void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3;
- (void)setupBackgroundViewForNewSplitTraits:(id)arg1;
- (int)_clipCornersOfView:(id)arg1;
- (_Bool)visible;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardPredictionBarGrabber : UIView
{
}

+ (struct CGSize)size;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardPredictionCell : UIView
{
    UIMorphingLabel *m_label;
    UIView *m_maskView;
    UIKBKeyView *m_activeKeyView;
    UIKBKeyView *m_enabledKeyView;
    _Bool m_lightKeyboard;
    struct CGSize m_keyViewSize;
    _Bool _isAutocorrection;
    _Bool _isTypedString;
    _Bool _isCenter;
    _Bool _isLongCandidate;
    int _state;
    TIKeyboardCandidate *_prediction;
    struct CGRect _collapsedFrame;
    struct CGRect _baseFrame;
    struct CGRect _activeFrame;
}

+ (id)initKeyViewWithSize:(struct CGSize)arg1 state:(int)arg2 needsBackground:(_Bool)arg3;
@property(nonatomic) _Bool isLongCandidate; // @synthesize isLongCandidate=_isLongCandidate;
@property(nonatomic) _Bool isCenter; // @synthesize isCenter=_isCenter;
@property(nonatomic) _Bool isTypedString; // @synthesize isTypedString=_isTypedString;
@property(nonatomic) _Bool isAutocorrection; // @synthesize isAutocorrection=_isAutocorrection;
@property(nonatomic) struct CGRect activeFrame; // @synthesize activeFrame=_activeFrame;
@property(nonatomic) struct CGRect baseFrame; // @synthesize baseFrame=_baseFrame;
@property(nonatomic) struct CGRect collapsedFrame; // @synthesize collapsedFrame=_collapsedFrame;
@property(nonatomic) int state; // @synthesize state=_state;
@property(readonly, retain, nonatomic) TIKeyboardCandidate *prediction; // @synthesize prediction=_prediction;
- (void)updateBackgroundWithRenderConfig:(id)arg1;
- (id)label;
- (void)setText:(id)arg1 prediction:(id)arg2 active:(_Bool)arg3;
- (void)setState:(int)arg1 withText:(id)arg2;
- (void)setCellAttributes;
- (id)textColor;
- (void)scrollLabelWithText:(id)arg1 force:(_Bool)arg2;
- (void)touchMoved:(double)arg1;
- (void)setVisibleRect;
- (struct CGRect)visibleRect;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardPredictionView : UIView
{
    UIKBBackgroundView *m_backgroundView;
    UIKeyboardPredictionBarGrabber *m_grabber;
    NSMutableArray *m_predictionCells;
    unsigned long long m_activeIndex;
    double m_width;
    NSString *m_openQuote;
    NSString *m_closeQuote;
    UIView *m_message;
    UILabel *m_messageLabel;
    UIKBKeyView *m_messageKeyView;
    double m_messageShownTime;
    struct CGPoint m_initLocation;
    _Bool m_dragging;
    _Bool m_hasLongCandidates;
    _Bool m_currentInputModeEnablePrediction;
    UIView *m_leftDimmingView;
    UIView *m_rightDimmingView;
    _Bool m_touchOnDimmingView;
    _Bool m_delayActive;
    int _state;
    UITouch *_activeTouch;
    NSTimer *_updateTimer;
    NSArray *_scheduledPredictions;
    TIKeyboardCandidate *_scheduledAutocorrection;
    NSDate *_lastUpdateDate;
}

+ (id)activeInstance;
+ (id)sharedInstance;
+ (double)overlapHeight;
+ (double)predictionViewHeightForState:(int)arg1 orientation:(long long)arg2;
+ (unsigned long long)numberOfCandidates;
@property(retain, nonatomic) NSDate *lastUpdateDate; // @synthesize lastUpdateDate=_lastUpdateDate;
@property(retain, nonatomic) TIKeyboardCandidate *scheduledAutocorrection; // @synthesize scheduledAutocorrection=_scheduledAutocorrection;
@property(retain, nonatomic) NSArray *scheduledPredictions; // @synthesize scheduledPredictions=_scheduledPredictions;
@property(retain, nonatomic) NSTimer *updateTimer; // @synthesize updateTimer=_updateTimer;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) UITouch *activeTouch; // @synthesize activeTouch=_activeTouch;
- (id)description;
- (double)heightBeforeStateChangeForInterfaceOrientation:(long long)arg1;
- (double)heightForInterfaceOrientation:(long long)arg1;
- (void)setPredictionViewState:(int)arg1 animate:(_Bool)arg2 notify:(_Bool)arg3;
- (void)setPredictionViewState:(int)arg1 animate:(_Bool)arg2;
- (void)suppressLayoutSubviewsForCellLabels:(_Bool)arg1;
@property(nonatomic) _Bool show;
- (void)showMessageWithSize:(struct CGSize)arg1;
- (void)setPredictions:(id)arg1 autocorrection:(id)arg2;
- (void)touchUpdateTimer;
- (void)updateTimerFired:(id)arg1;
- (void)_setPredictions:(id)arg1 autocorrection:(id)arg2;
- (id)labelTextForPrediction:(id)arg1 typedString:(id)arg2;
- (void)removeMessage;
- (void)deactivateCandidate;
- (void)activateCandidateAtPoint:(struct CGPoint)arg1;
- (void)acceptCandidate;
- (void)acceptCandidateAtCell:(id)arg1;
- (unsigned long long)predictionCount;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)delayActivateCellForPrediction:(id)arg1;
- (void)commitPrediction:(id)arg1;
- (unsigned long long)indexForPoint:(struct CGPoint)arg1;
- (void)setActiveCellWithIndex:(unsigned long long)arg1;
- (void)setTouchedCellState:(int)arg1;
- (void)updateBackgroundWithRenderConfig:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)releaseMessage;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)suspend;
- (int)messageCount;
- (int)maxMessageCount;
- (void)inputModeDidChange;
- (int)stateForCurrentPreferences;
- (_Bool)enabled;

@end

@interface _UISettings : NSObject <_UISettingsGroupObserver, _UISettingsKeyPathObserver, NSCopying>
{
    NSHashTable *_internal_keyObservers;
    NSHashTable *_internal_keyPathObservers;
    NSSet *_internal_childKeys;
    NSSet *_internal_leafKeys;
    NSDictionary *_internal_keyClasses;
    NSDictionary *_internal_keyStructs;
    _Bool _internal_isObservingPropertiesAndChildren;
}

+ (id)settingsFromArchiveFile:(id)arg1 error:(id *)arg2;
+ (id)settingsFromArchiveDictionary:(id)arg1;
- (id)_associatedNameOrNilIfDefault;
- (id)_associatedName;
- (void)_setAssociatedName:(id)arg1;
- (void)_sendKeyPathChanged:(id)arg1;
- (void)_sendKeyChanged:(id)arg1;
- (id)_keyForChild:(id)arg1;
- (void)_handleChildGroupChange:(id)arg1;
- (void)settingsGroup:(id)arg1 didMoveSettings:(id)arg2 fromIndex:(unsigned long long)arg3 toIndex:(unsigned long long)arg4;
- (void)settingsGroup:(id)arg1 didRemoveSettings:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)settingsGroup:(id)arg1 didInsertSettings:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)settings:(id)arg1 changedValueForKeyPath:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_introspectKeys;
- (id)_dictionaryForStructKey:(id)arg1 ofType:(id)arg2;
- (id)_structValueForKey:(id)arg1 ofType:(id)arg2 fromDictionary:(id)arg3;
- (id)_dictionaryForFontKey:(id)arg1;
- (id)_fontForKey:(id)arg1 fromDictionary:(id)arg2;
- (id)_dictionaryForColorKey:(id)arg1;
- (id)_colorForKey:(id)arg1 fromDictionary:(id)arg2;
- (id)_allKeys;
- (void)_stopObservingChild:(id)arg1;
- (void)_startObservingChild:(id)arg1;
- (void)setValuesFromModel:(id)arg1;
- (void)_addInternalEntriesToArchiveDictionary:(id)arg1;
- (_Bool)_isObservingPropertiesAndChildren;
- (void)_startOrStopObservingPropertiesAndChildren;
- (void)_stopObservingPropertiesAndChildren;
- (void)_startObservingPropertiesAndChildren;
- (_Bool)_hasObservers;
- (id)archiveValueForKey:(id)arg1;
- (void)applyArchiveValue:(id)arg1 forKey:(id)arg2;
- (void)setDefaultValues;
- (void)removeKeyPathObserver:(id)arg1;
- (void)addKeyPathObserver:(id)arg1;
- (void)removeKeyObserver:(id)arg1;
- (void)addKeyObserver:(id)arg1;
- (_Bool)restoreFromArchiveFile:(id)arg1 error:(id *)arg2;
- (void)restoreFromArchiveDictionary:(id)arg1;
- (void)restoreDefaultValues;
- (_Bool)archiveToFile:(id)arg1 error:(id *)arg2;
- (id)archiveDictionary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDefaultValues;
- (id)init;
- (void)_completeInitByApplyingArchiveDictionary:(id)arg1;
- (void)_continueInitBySettingDefaultValues;
- (id)_startInit;
- (id)_initWithArchiveDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardPredictiveSettings : _UISettings
{
    int _lastVolume;
    _Bool _nextPage;
    NSString *_currentInputMode;
    _Bool _currentInputModeEnablePrediction;
    _Bool _didShowHUD;
    _Bool _alwaysShowTypedText;
    int _minLetters;
}

+ (void)hideViaNotification;
+ (void)loadSettings;
+ (id)sharedInstance;
@property(nonatomic) _Bool alwaysShowTypedText; // @synthesize alwaysShowTypedText=_alwaysShowTypedText;
@property(nonatomic) int minLetters; // @synthesize minLetters=_minLetters;
@property(nonatomic) int messageCount;
- (void)next;
- (void)previous;
- (void)show;
- (void)show:(_Bool)arg1;
- (void)pressRingerButton;
- (id)settingsHUDConfiguration;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (void)saveSettings;
- (void)cancel;
- (id)initWithDefaultValues;
- (void)hide;
- (_Bool)_isShowingHUD;
- (id)_sharedHUD;

@end

@interface UIKeyboardPreferencesController : NSObject
{
}

+ (void)handleSpecificHardwareKeyboard;
+ (id)sharedPreferencesController;
@property long long handBias;
- (_Bool)spaceConfirmationEnabled;
- (double)rivenSizeFactor:(double)arg1;
- (_Bool)costlyCapture;
- (_Bool)typologyEnabled;
- (void)setLanguageAwareInputModeLastUsed:(id)arg1;
- (void)saveInputModes:(id)arg1;
- (void)setValue:(id)arg1 forKey:(int)arg2;
- (void)touchSynchronizePreferencesTimer;
- (void)synchronizePreferences;
- (void)releaseDontSynchronizePreferences;
- (_Bool)boolForKey:(int)arg1;
- (id)valueForKey:(int)arg1;
- (void)preferencesControllerChanged:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setInputModeLastUsed:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardRotationState : NSObject
{
    int _state;
    _Bool _requiresNewState;
    int _postRotationState;
    UIInputViewAnimationStyle *_animationStyle;
    long long _targetOrientation;
}

+ (id)stateWithState:(int)arg1 targetOrientation:(long long)arg2;
@property(nonatomic) long long targetOrientation; // @synthesize targetOrientation=_targetOrientation;
@property(retain, nonatomic) UIInputViewAnimationStyle *animationStyle; // @synthesize animationStyle=_animationStyle;
@property(nonatomic) int postRotationState; // @synthesize postRotationState=_postRotationState;
@property(nonatomic) _Bool requiresNewState; // @synthesize requiresNewState=_requiresNewState;
@property(nonatomic) int state; // @synthesize state=_state;
- (void)setPostRotationState:(int)arg1 animationStyle:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardScheduledTask : NSObject
{
    CDUnknownBlockType _task;
    double _timeInterval;
    UIKeyboardTaskQueue *_taskQueue;
    NSTimer *_timer;
    _UIActionWhenIdle *_deferredAction;
    CDUnknownBlockType _enqueuedTask;
}

@property(copy, nonatomic) CDUnknownBlockType enqueuedTask; // @synthesize enqueuedTask=_enqueuedTask;
@property(retain, nonatomic) _UIActionWhenIdle *deferredAction; // @synthesize deferredAction=_deferredAction;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(readonly, nonatomic) UIKeyboardTaskQueue *taskQueue; // @synthesize taskQueue=_taskQueue;
@property(readonly, nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
@property(readonly, nonatomic) CDUnknownBlockType task; // @synthesize task=_task;
- (void)resetTimer;
- (void)invalidate;
- (_Bool)isValid;
- (void)handleDeferredTimerFiredEvent;
- (void)timerFired:(id)arg1;
@property(readonly, nonatomic) _Bool repeats;
- (id)initWithTaskQueue:(id)arg1 timeInterval:(double)arg2 repeats:(_Bool)arg3 task:(CDUnknownBlockType)arg4;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSliceSet : NSObject
{
    NSString *_ssid;
    NSMutableSet *_slices;
    struct CGRect _startRect;
    struct CGRect _endRect;
    double _leftWidth;
    double _rightWidth;
    double _mergePoint;
    NSMutableDictionary *_controlKeys;
}

+ (id)sliceSetWithDictionaryRepresenation:(id)arg1;
@property NSMutableDictionary *controlKeys; // @synthesize controlKeys=_controlKeys;
@property double mergePoint; // @synthesize mergePoint=_mergePoint;
@property double rightWidth; // @synthesize rightWidth=_rightWidth;
@property double leftWidth; // @synthesize leftWidth=_leftWidth;
@property struct CGRect endRect; // @synthesize endRect=_endRect;
@property struct CGRect startRect; // @synthesize startRect=_startRect;
@property(retain) NSString *sliceSetID; // @synthesize sliceSetID=_ssid;
@property(readonly) NSMutableSet *slices; // @synthesize slices=_slices;
- (id)description;
- (void)dealloc;
- (void)addSlice:(id)arg1;
- (id)initWithSliceID:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSliceStore : NSObject
{
    NSMutableDictionary *_store;
}

+ (void)archiveSet:(id)arg1;
+ (id)sliceSetIDForKeyplaneName:(id)arg1 type:(long long)arg2 orientation:(long long)arg3;
+ (id)sliceSetForID:(id)arg1;
+ (id)sharedStore;
- (void)dealloc;
- (id)sliceSetForID:(id)arg1;
- (void)addSet:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSliceTransitionView : UIKeyboardSplitTransitionView
{
    struct CGImage *_defaultKeyplaneImage;
    struct CGImage *_splitKeyplaneImage;
    CALayer *_leftKeys;
    CALayer *_rightKeys;
    CALayer *_spaceFill;
    NSMutableDictionary *_controlKeys;
    CALayer *_topEdgeHighlight;
    UIKBCacheToken *_keyplaneToken;
    long long _orientation;
    struct {
        unsigned int position:1;
        unsigned int slices:1;
        unsigned int backgroundAndShadows:1;
        unsigned int backgroundGradients:1;
        unsigned int topEdgeHighlight:1;
        unsigned int shiftKeys:1;
        unsigned int returnKeys:1;
        unsigned int moreIntlKeys:1;
    } _rebuildFlags;
}

- (_Bool)canDisplayTransition;
- (void)updateWithProgress:(double)arg1;
- (void)rebuildControlKeys:(int)arg1;
- (void)rebuildFromKeyplane:(id)arg1 toKeyplane:(id)arg2 keyboardType:(long long)arg3 orientation:(long long)arg4;
- (void)updateTransition;
- (void)_delayedUpdateTransition;
- (void)setHidden:(_Bool)arg1;
- (void)transformForProgress:(double)arg1;
- (id)meshTransformForProgress:(double)arg1;
- (void)rebuildMoreIntlKeys;
- (void)rebuildReturnSlices;
- (void)rebuildShiftSlices;
- (void)rebuildSliceTransitions;
- (void)refreshKeyplaneImages;
- (void)updateTransitionForSlice:(id)arg1 withStart:(id)arg2 startContents:(id)arg3 end:(id)arg4 endContents:(id)arg5 updateContents:(_Bool)arg6;
- (void)rebuildBackgroundGradientTransitions;
- (void)rebuildBackgroundAndShadowTransitions;
- (void)rebuildShadows;
- (void)rebuildTopEdgeHighlightTransition;
- (id)crossfadeOpacityAnimation;
- (void)rebuildPositionTransition;
- (double)adjustedRightWidthAtMergePoint;
- (double)adjustedLeftWidthAtMergePoint;
- (struct CGImage *)splitKeyboardImage;
- (struct CGImage *)defaultKeyboardImage;
- (struct CGImage *)getKeyboardImageAsSplit:(_Bool)arg1;
- (void)rebuildTransitionForSplitStyleChange:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setRebuildFlags;
- (void)initializeLayers;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSplitControlMenu : UIKeyboardMenuView
{
    NSMutableArray *m_menuOptions;
    struct CGSize m_preferredSize;
    CDUnknownBlockType _finishSplitTransitionBlock;
}

+ (id)activeInstance;
+ (id)sharedInstance;
@property(copy, nonatomic) CDUnknownBlockType finishSplitTransitionBlock; // @synthesize finishSplitTransitionBlock=_finishSplitTransitionBlock;
- (void)didFinishSplitTransition;
- (void)didSelectItemAtIndex:(int)arg1;
- (id)titleForItemAtIndex:(int)arg1;
- (long long)defaultSelectedIndex;
- (struct CGSize)preferredSize;
- (long long)numberOfItems;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSquishTransition : UIKeyboardKeyplaneTransition
{
    double _widthRatio;
    double _offsetX;
    _Bool _transitionNeedsUpdate;
}

- (void)updateWithProgress:(double)arg1;
- (void)removeAllAnimations;
- (void)_updateTransition;
- (void)updateTransitionIfNeeded;
- (void)rebuildFromStartKeyplane:(id)arg1 startView:(id)arg2 toEndKeyplane:(id)arg3 endView:(id)arg4;

@end

@interface UIKeyboardSuggestedInputMode : UIKeyboardInputMode
{
    _Bool enabled;
}

@property(nonatomic) _Bool enabled; // @synthesize enabled;
- (id)description;
- (id)initWithIdentifier:(id)arg1 enabled:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardSyntheticTouch : NSObject
{
    double timestamp;
    long long phase;
    unsigned long long tapCount;
    UIWindow *window;
    struct CGPoint locationInWindow;
    unsigned char _pathIndex;
    unsigned char _pathIdentity;
    float _pathMajorRadius;
}

+ (id)syntheticTouchWithPoint:(struct CGPoint)arg1 timestamp:(double)arg2 window:(id)arg3;
@property(nonatomic) float _pathMajorRadius; // @synthesize _pathMajorRadius;
@property(readonly, nonatomic) unsigned char _pathIdentity; // @synthesize _pathIdentity;
@property(readonly, nonatomic) unsigned char _pathIndex; // @synthesize _pathIndex;
@property(nonatomic) struct CGPoint locationInWindow; // @synthesize locationInWindow;
@property(retain, nonatomic) UIWindow *window; // @synthesize window;
@property(nonatomic) unsigned long long tapCount; // @synthesize tapCount;
@property(nonatomic) long long phase; // @synthesize phase;
@property(nonatomic) double timestamp; // @synthesize timestamp;
- (void)_setLocationInWindow:(struct CGPoint)arg1 resetPrevious:(_Bool)arg2;
- (struct CGPoint)getLocationInWindow;
- (struct CGPoint)previousLocationInView:(id)arg1;
- (struct CGPoint)locationInView:(id)arg1;
- (id)initWithPoint:(struct CGPoint)arg1 timestamp:(double)arg2 window:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardTaskExecutionContext : NSObject
{
    UIKeyboardTaskExecutionContext *_parentExecutionContext;
    CDUnknownBlockType _continuation;
    id _info;
    UIKeyboardTaskQueue *_executionQueue;
}

@property(readonly, nonatomic) UIKeyboardTaskQueue *executionQueue; // @synthesize executionQueue=_executionQueue;
@property(retain, nonatomic) id info; // @synthesize info=_info;
- (void)transferExecutionToMainThreadWithTask:(CDUnknownBlockType)arg1;
- (void)returnExecutionToParentWithInfo:(id)arg1;
- (void)returnExecutionToParent;
- (id)childWithContinuation:(CDUnknownBlockType)arg1;
- (id)initWithParentContext:(id)arg1 continuation:(CDUnknownBlockType)arg2;
- (id)initWithExecutionQueue:(id)arg1;
- (id)init;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardTaskQueue : NSObject
{
    _Bool _executingOnMainThread;
    NSConditionLock *_lock;
    NSMutableArray *_tasks;
    NSMutableArray *_deferredTasks;
    UIKeyboardTaskExecutionContext *_executionContext;
    CDUnknownBlockType _mainThreadContinuation;
}

@property(retain, nonatomic) UIKeyboardTaskExecutionContext *executionContext; // @synthesize executionContext=_executionContext;
- (_Bool)isMainThreadExecutingTask;
- (void)performTask:(CDUnknownBlockType)arg1;
- (void)waitUntilAllTasksAreFinished;
- (void)addDeferredTask:(CDUnknownBlockType)arg1;
- (void)addTask:(CDUnknownBlockType)arg1;
- (void)promoteDeferredTaskIfIdle;
- (void)performDeferredTaskIfIdle;
- (void)performTaskOnMainThread:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2;
- (void)finishExecution;
- (void)continueExecutionOnMainThread;
- (void)unlock;
- (_Bool)tryLockWhenReadyForMainThread;
- (void)lockWhenReadyForMainThread;
- (void)lock;
- (id)init;
- (void)dealloc;
- (id)scheduleTask:(CDUnknownBlockType)arg1 timeInterval:(double)arg2 repeats:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardTouchInfo : NSObject
{
    UITouch *_touch;
    UIKBTree *_key;
    UIKBTree *_keyplane;
    UIKBTree *_slidOffKey;
    struct CGPoint _initialPoint;
    struct CGPoint _initialDragPoint;
    _Bool _dragged;
    int _stage;
    _Bool _maySuppressUpAction;
}

@property(nonatomic) _Bool maySuppressUpAction; // @synthesize maySuppressUpAction=_maySuppressUpAction;
@property(nonatomic) _Bool dragged; // @synthesize dragged=_dragged;
@property(nonatomic) struct CGPoint initialDragPoint; // @synthesize initialDragPoint=_initialDragPoint;
@property(nonatomic) int stage; // @synthesize stage=_stage;
@property(nonatomic) struct CGPoint initialPoint; // @synthesize initialPoint=_initialPoint;
@property(retain, nonatomic) UIKBTree *slidOffKey; // @synthesize slidOffKey=_slidOffKey;
@property(retain, nonatomic) UIKBTree *keyplane; // @synthesize keyplane=_keyplane;
@property(retain, nonatomic) UIKBTree *key; // @synthesize key=_key;
@property(retain, nonatomic) UITouch *touch; // @synthesize touch=_touch;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardTransitionSlice : NSObject
{
    struct CGRect _startRect;
    struct CGRect _endRect;
    UIKBCacheToken *_startToken;
    UIKBCacheToken *_endToken;
    _Bool _shiftContents;
    _Bool _delayCrossfade;
    int _normalization;
}

+ (id)sliceWithStart:(struct CGRect)arg1 end:(struct CGRect)arg2;
@property _Bool delayCrossfade; // @synthesize delayCrossfade=_delayCrossfade;
@property int normalization; // @synthesize normalization=_normalization;
@property(retain) UIKBCacheToken *endToken; // @synthesize endToken=_endToken;
@property(retain) UIKBCacheToken *startToken; // @synthesize startToken=_startToken;
@property struct CGRect endRect; // @synthesize endRect=_endRect;
@property struct CGRect startRect; // @synthesize startRect=_startRect;
- (id)description;
@property(readonly) _Bool hasGeometry;
- (void)addStartRect:(struct CGRect)arg1 end:(struct CGRect)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIKeyboardWipeGestureRecognizer : UIGestureRecognizer
{
    NSMutableArray *_endPoints;
    UITouch *candidateEndpoint;
}

@property(retain, nonatomic) UITouch *candidateEndpoint; // @synthesize candidateEndpoint;
- (void)reset;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)segmentsLookLikeAWipe:(id)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UILayoutContainerView : UIView <NSCoding>
{
    id _delegate;
    _Bool _usesRoundedCorners;
    double _cornerRadius;
    _Bool _usesInnerShadow;
    _Bool _shadowViewsInstalled;
    UIView *_shadowView;
    _Bool _forwardMoveToWindowCallbacks;
}

@property(nonatomic) _Bool forwardMoveToWindowCallbacks; // @synthesize forwardMoveToWindowCallbacks=_forwardMoveToWindowCallbacks;
@property(nonatomic) _Bool usesInnerShadow; // @synthesize usesInnerShadow=_usesInnerShadow;
@property(nonatomic) _Bool usesRoundedCorners; // @synthesize usesRoundedCorners=_usesRoundedCorners;
- (void)dealloc;
- (void)addSubview:(id)arg1;
- (void)_tearDownShadowViews;
- (void)_installShadowViews;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)layoutSubviews;
@property(nonatomic) id delegate;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UILexicon : NSObject <NSCopying>
{
    NSArray *_entries;
}

+ (id)_lexiconWithTILexicon:(id)arg1;
@property(readonly, nonatomic) NSArray *entries; // @synthesize entries=_entries;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface UILexiconEntry : NSObject <NSCopying>
{
    NSString *_userInput;
    NSString *_documentText;
}

+ (id)_entryWithTILexiconEntry:(id)arg1;
@property(readonly, nonatomic) NSString *documentText; // @synthesize documentText=_documentText;
@property(readonly, nonatomic) NSString *userInput; // @synthesize userInput=_userInput;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface UILocalizedIndexedCollation : NSObject
{
    NSLocale *_locale;
    NSArray *_sectionTitles;
    NSArray *_sectionStartStrings;
    NSArray *_sectionIndexTitles;
    NSArray *_sectionIndexMapping;
    NSString *_transform;
    NSString *_firstSectionStartString;
    NSString *_lastSectionStartString;
    struct __CFStringTokenizer *_tokenizer;
}

+ (id)currentCollation;
+ (id)collationWithDictionary:(id)arg1;
- (id)sortedArrayFromArray:(id)arg1 collationStringSelector:(SEL)arg2;
- (long long)sectionForObject:(id)arg1 collationStringSelector:(SEL)arg2;
- (long long)sectionForSectionIndexTitleAtIndex:(long long)arg1;
@property(readonly, nonatomic) NSArray *sectionIndexTitles;
@property(readonly, nonatomic) NSArray *sectionTitles;
- (void)dealloc;
- (struct __CFStringTokenizer *)tokenizer;
- (id)transformedCollationStringForString:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface UILongPressGestureRecognizer : UIGestureRecognizer
{
    NSArray *_touches;
    NSMutableSet *_activeTouches;
    unsigned long long _numberOfTouchesRequired;
    double _minimumPressDuration;
    double _allowableMovement;
    struct CGPoint _startPointScreen;
    id _enoughTimeElapsed;
    id _tooMuchTimeElapsed;
    id _imp;
    unsigned int _gotTouchEnd:1;
    unsigned int _gotTooMany:1;
    unsigned int _gotEnoughTaps:1;
    unsigned int _cancelPastAllowableMovement:1;
    long long _buttonType;
}

@property(nonatomic, setter=_setButtonType:) long long _buttonType; // @synthesize _buttonType;
@property(nonatomic) double allowableMovement; // @synthesize allowableMovement=_allowableMovement;
@property(nonatomic) double delay; // @synthesize delay=_minimumPressDuration;
@property(nonatomic) unsigned long long numberOfTouchesRequired; // @synthesize numberOfTouchesRequired=_numberOfTouchesRequired;
@property(readonly, retain, nonatomic) NSArray *touches; // @synthesize touches=_touches;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (struct CGPoint)locationOfTouch:(unsigned long long)arg1 inView:(id)arg2;
- (unsigned long long)numberOfTouches;
- (struct CGPoint)locationInView:(id)arg1;
- (double)_touchSloppinessFactor;
- (void)tapRecognizerFailedToRecognizeTap:(id)arg1;
- (void)tapRecognizerRecognizedTap:(id)arg1;
- (_Bool)tapIsPossibleForTapRecognizer:(id)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) struct CGPoint startPoint;
- (struct CGPoint)centroidScreen;
@property(readonly, nonatomic) struct CGPoint centroid;
- (void)_interactionsEndedWithValidTouches:(_Bool)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_startTapFinishedTimer;
- (void)startTimer;
- (void)clearTimer;
- (void)tooMuchElapsed:(id)arg1;
- (void)enoughTimeElapsed:(id)arg1;
- (void)_resetGestureRecognizer;
- (void)setView:(id)arg1;
- (void)setTouches:(id)arg1;
@property(nonatomic) _Bool cancelPastAllowableMovement;
@property(nonatomic) double minimumPressDuration;
@property(nonatomic) unsigned long long numberOfTapsRequired;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)invalidate;

@end

@interface UIMailActivity : UIActivity <UIStateRestoring>
{
    _Bool _keyboardVisible;
    _Bool _sourceIsManaged;
    _Bool _hasAnyAccount;
    _Bool _hasFilteredAccount;
    NSString *_autosaveIdentifier;
    MFMailComposeViewController *_mailComposeViewController;
}

+ (long long)activityCategory;
@property(retain, nonatomic) MFMailComposeViewController *mailComposeViewController; // @synthesize mailComposeViewController=_mailComposeViewController;
@property(nonatomic) _Bool hasFilteredAccount; // @synthesize hasFilteredAccount=_hasFilteredAccount;
@property(nonatomic) _Bool hasAnyAccount; // @synthesize hasAnyAccount=_hasAnyAccount;
@property(retain, nonatomic) NSString *autosaveIdentifier; // @synthesize autosaveIdentifier=_autosaveIdentifier;
@property(nonatomic) _Bool sourceIsManaged; // @synthesize sourceIsManaged=_sourceIsManaged;
@property(nonatomic) _Bool keyboardVisible; // @synthesize keyboardVisible=_keyboardVisible;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)_cleanup;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)setSubject:(id)arg1;
- (id)activityViewController;
- (void)_setSubject:(id)arg1;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (void)autosaveWithHandler:(CDUnknownBlockType)arg1;
- (_Bool)_restoreDraft;
- (id)_stateRestorationDraftIsAvailable;
- (void)_deleteMailDraftIdentifierRestorationArchive:(id)arg1;
- (void)_saveDraft:(id)arg1;
- (id)_mailDraftRestorationURL;
- (id)activityTitle;
- (id)_activitySettingsImage;
- (id)_activityImage;
- (id)activityType;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) Class objectRestorationClass;
@property(readonly, nonatomic) id <UIStateRestoring> restorationParent;
@property(readonly) Class superclass;

@end

@interface UIManagedDocument : UIDocument
{
    NSManagedObjectContext *_managedObjectContext;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSManagedObjectModel *_managedObjectModel;
    NSDictionary *_documentMetadata;
    struct __mdocFlags {
        unsigned int shouldWriteAdditionalContent:1;
        unsigned int _reserved:31;
    } _mdocFlags;
    NSDictionary *persistentStoreOptions;
    NSString *modelConfiguration;
}

+ (_Bool)isPersistentStoreSynchronizedViaUbiquitousContentWithOptions:(id)arg1;
+ (id)additionalContentPathComponent;
+ (id)persistentStoreName;
+ (void)initialize;
@property(copy, nonatomic) NSString *modelConfiguration; // @synthesize modelConfiguration;
@property(copy, nonatomic) NSDictionary *persistentStoreOptions; // @synthesize persistentStoreOptions;
- (void)revertToContentsOfURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)writeContents:(id)arg1 toURL:(id)arg2 forSaveOperation:(long long)arg3 originalContentsURL:(id)arg4 error:(id *)arg5;
- (_Bool)writeContents:(id)arg1 andAttributes:(id)arg2 safelyToURL:(id)arg3 forSaveOperation:(long long)arg4 error:(id *)arg5;
- (id)contentsForType:(id)arg1 error:(id *)arg2;
- (_Bool)readFromURL:(id)arg1 error:(id *)arg2;
- (_Bool)_writeMetadataToDocumentURL:(id)arg1;
- (id)_readMetadataFromDocumentURL:(id)arg1;
- (void)_handleRelocatingStoreContentDirectoryFromSyncedURL:(id)arg1 toNonSyncedURL:(id)arg2;
- (void)_handleRelocatingStoreContentDirectoryFromNonSyncedURL:(id)arg1 toSyncedURL:(id)arg2;
- (_Bool)writeAdditionalContent:(id)arg1 toURL:(id)arg2 originalContentsURL:(id)arg3 error:(id *)arg4;
- (id)additionalContentForURL:(id)arg1 error:(id *)arg2;
- (_Bool)readAdditionalContentFromURL:(id)arg1 error:(id *)arg2;
- (id)persistentStoreTypeForFileType:(id)arg1;
- (_Bool)configurePersistentStoreCoordinatorForURL:(id)arg1 ofType:(id)arg2 modelConfiguration:(id)arg3 storeOptions:(id)arg4 error:(id *)arg5;
@property(readonly, retain, nonatomic) NSManagedObjectModel *managedObjectModel;
@property(readonly, retain, nonatomic) NSManagedObjectContext *managedObjectContext;
- (void)dealloc;
- (id)initWithFileURL:(id)arg1;

@end

@interface UIPrintFormatter : NSObject <NSCopying>
{
    UIPrintPageRenderer *_printPageRenderer;
    double _maximumContentHeight;
    double _maximumContentWidth;
    struct UIEdgeInsets _contentInsets;
    struct UIEdgeInsets _perPageContentInsets;
    long long _startPage;
    long long _pageCount;
    _Bool _needsRecalc;
}

@property(nonatomic) long long startPage; // @synthesize startPage=_startPage;
@property(nonatomic) struct UIEdgeInsets perPageContentInsets; // @synthesize perPageContentInsets=_perPageContentInsets;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic) double maximumContentWidth; // @synthesize maximumContentWidth=_maximumContentWidth;
@property(nonatomic) double maximumContentHeight; // @synthesize maximumContentHeight=_maximumContentHeight;
@property(nonatomic) UIPrintPageRenderer *printPageRenderer; // @synthesize printPageRenderer=_printPageRenderer;
- (void)drawInRect:(struct CGRect)arg1 forPageAtIndex:(long long)arg2;
- (struct CGRect)rectForPageAtIndex:(long long)arg1;
- (struct CGRect)_pageContentRect:(_Bool)arg1;
- (long long)_recalcPageCount;
@property(readonly, nonatomic) long long pageCount; // @synthesize pageCount=_pageCount;
- (void)_recalcIfNecessary;
- (void)_setNeedsRecalc;
- (void)removeFromPrintPageRenderer;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface UIMarkupTextPrintFormatter : UIPrintFormatter
{
    UIWebDocumentView *_webDocumentView;
    UIWebPaginationInfo *_paginationInfo;
    NSString *_markupText;
}

@property(copy, nonatomic) NSString *markupText; // @synthesize markupText=_markupText;
- (void)drawInRect:(struct CGRect)arg1 forPageAtIndex:(long long)arg2;
- (struct CGRect)rectForPageAtIndex:(long long)arg1;
- (long long)_recalcPageCount;
- (void)removeFromPrintPageRenderer;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMarkupText:(id)arg1;

@end

@interface UIMenuController : NSObject <UICalloutBarDelegate>
{
    struct CGRect _targetRect;
    long long _arrowDirection;
}

+ (id)sharedMenuController;
@property(nonatomic) long long arrowDirection; // @synthesize arrowDirection=_arrowDirection;
@property(readonly, nonatomic) struct CGRect menuFrame;
- (void)update;
@property(copy, nonatomic) NSArray *menuItems;
- (void)_setTargetRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (void)setTargetRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)_windowWillRotate:(id)arg1;
- (void)setMenuVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)_menuHidden;
@property(nonatomic, getter=isMenuVisible) _Bool menuVisible;
- (void)dealloc;
- (id)init;
- (_Bool)_updateAnimated:(_Bool)arg1 checkVisible:(_Bool)arg2;
- (void)calloutBar:(id)arg1 didFinishAnimation:(id)arg2;
- (void)calloutBar:(id)arg1 willStartAnimation:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIMenuItem : NSObject
{
    NSString *_title;
    SEL _action;
    _Bool _dontDismiss;
}

@property(nonatomic) _Bool dontDismiss; // @synthesize dontDismiss=_dontDismiss;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 action:(SEL)arg2;

@end

@interface UIMessageActivity : UIActivity
{
    _Bool _sourceIsManaged;
    MFMessageComposeViewController *_messageComposeViewController;
}

+ (long long)activityCategory;
@property(retain, nonatomic) MFMessageComposeViewController *messageComposeViewController; // @synthesize messageComposeViewController=_messageComposeViewController;
@property(nonatomic) _Bool sourceIsManaged; // @synthesize sourceIsManaged=_sourceIsManaged;
- (void)_cleanup;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(int)arg2;
- (id)activityViewController;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)activityTitle;
- (id)_activitySettingsImage;
- (id)_activityImage;
- (id)activityType;
- (void)dealloc;

@end

@interface UIModalView : UIView <UITextFieldDelegate>
{
    id <UIModalViewDelegate> _delegate;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_bodyTextLabel;
    UILabel *_taglineTextLabel;
    double _startX;
    double _startY;
    id _context;
    long long _cancelButton;
    long long _defaultButton;
    long long _firstOtherButton;
    UIToolbar *_toolbar;
    UIWindow *_originalWindow;
    UIWindow *_dimWindow;
    long long _suspendTag;
    long long _dismissButtonIndex;
    double _bodyTextHeight;
    NSMutableArray *_buttons;
    NSMutableArray *_textFields;
    UIView *_keyboard;
    UIView *_table;
    UIView *_dimView;
    UIView *_sheetView;
    struct {
        unsigned int numberOfRows:7;
        unsigned int delegateAlertSheetButtonClicked:1;
        unsigned int delegateDidPresentAlertSheet:1;
        unsigned int delegateDidDismissAlertSheet:1;
        unsigned int hideButtonBar:1;
        unsigned int alertStyle:3;
        unsigned int dontDimBackground:1;
        unsigned int dismissSuspended:1;
        unsigned int dontBlockInteraction:1;
        unsigned int sheetWasPoppedUp:1;
        unsigned int animating:1;
        unsigned int hideWhenDoneAnimating:1;
        unsigned int layoutWhenDoneAnimating:1;
        unsigned int titleMaxLineCount:2;
        unsigned int bodyTextMaxLineCount:3;
        unsigned int runsModal:1;
        unsigned int runningModal:1;
        unsigned int addedTextView:1;
        unsigned int addedTableShadows:1;
        unsigned int showOverSBAlerts:1;
        unsigned int showMinTableContent:1;
        unsigned int bodyTextTruncated:1;
        unsigned int orientation:3;
        unsigned int groupsTextFields:1;
        unsigned int delegateBodyTextAlignment:1;
        unsigned int delegateClickedButtonAtIndex:1;
        unsigned int delegateCancel:1;
        unsigned int delegateWillPresent:1;
        unsigned int delegateDidPresent:1;
        unsigned int delegateWillDismiss:1;
        unsigned int delegateDidDismiss:1;
        unsigned int popupFromPoint:1;
        unsigned int extra:20;
        unsigned int dontCallDismissDelegate:1;
        unsigned int useAutomaticKB:1;
        unsigned int shouldHandleFirstKeyUpEvent:1;
        unsigned int cancelWhenDoneAnimating:1;
    } _modalViewFlags;
}

+ (void)noteOrientationChangingTo:(long long)arg1;
+ (id)visibleAlert;
+ (id)topMostAlert;
+ (_Bool)atLeastOneAlertVisible;
+ (id)_popupAlertBackground;
+ (struct CGSize)minimumSize;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (long long)firstOtherButtonIndex;
- (void)_setFirstOtherButtonIndex:(long long)arg1;
@property(nonatomic) long long cancelButtonIndex;
- (long long)defaultButtonIndex;
- (void)setDefaultButtonIndex:(long long)arg1;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
@property(readonly, nonatomic) long long numberOfButtons;
- (id)buttonTitleAtIndex:(long long)arg1;
- (long long)addButtonWithTitle:(id)arg1;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) id <UIModalViewDelegate> delegate;
- (void)dealloc;
- (id)_initWithTelephoneNumber:(id)arg1 buttons:(id)arg2 defaultButtonIndex:(long long)arg3 delegate:(id)arg4 context:(id)arg5;
- (id)initWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 defaultButton:(id)arg4 cancelButton:(id)arg5 otherButtons:(id)arg6;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)canBecomeFirstResponder;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)_prepareToBeReplaced;
- (void)replaceAlert:(id)arg1;
- (void)_prepareForDisplay;
- (id)taglineTextView;
- (id)bodyTextView;
- (void)presentSheetFromButtonBar:(id)arg1;
- (void)layout;
- (void)_truncateViewHeight:(id)arg1 toFitInFrame:(struct CGRect)arg2 withMinimumHeight:(double)arg3;
- (long long)numberOfLinesInTitle;
- (double)_buttonHeight;
- (double)_maxHeight;
- (struct CGRect)titleRect;
- (_Bool)runsModal;
- (void)setRunsModal:(_Bool)arg1;
- (_Bool)blocksInteraction;
- (void)setBlocksInteraction:(_Bool)arg1;
- (long long)suspendTag;
- (void)setSuspendTag:(long long)arg1;
- (_Bool)dimsBackground;
- (void)setDimsBackground:(_Bool)arg1;
- (void)setAlertSheetStyle:(int)arg1;
- (int)alertSheetStyle;
- (long long)numberOfRows;
- (void)setNumberOfRows:(long long)arg1;
- (void)_alertSheetAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)_appSuspended:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (double)_bottomVerticalInset;
- (double)_titleHorizontalInset;
- (double)_titleVerticalBottomInset;
- (double)_titleVerticalTopInset;
- (struct CGSize)backgroundSize;
- (void)dismissAnimated:(_Bool)arg1;
- (void)dismiss;
- (void)_slideSheetOut:(_Bool)arg1;
- (void)_presentSheetStartingFromYCoordinate:(double)arg1;
- (id)_dimView;
- (void)setDimView:(id)arg1;
- (void)presentSheetToAboveView:(id)arg1;
- (void)presentSheetInView:(id)arg1;
- (void)presentSheetFromAboveView:(id)arg1;
- (void)presentSheetFromBehindView:(id)arg1;
- (void)_presentSheetFromView:(id)arg1 above:(_Bool)arg2;
- (void)popupAlertAnimated:(_Bool)arg1;
- (void)userDidCancelPopoverView:(id)arg1;
- (void)popupAlertAnimated:(_Bool)arg1 fromBarButtonItem:(id)arg2;
- (void)popupAlertAnimated:(_Bool)arg1 atOffset:(double)arg2;
- (void)_layoutIfNeeded;
- (void)_layoutPopupAlertWithOrientation:(long long)arg1 animated:(_Bool)arg2;
- (_Bool)isBodyTextTruncated;
- (void)layoutAnimated:(_Bool)arg1;
- (void)layoutAnimated:(_Bool)arg1 withDuration:(double)arg2;
- (void)_rotatingAnimationDidStop:(id)arg1;
- (void)_setupInitialFrame;
- (void)_cancelAnimated:(_Bool)arg1;
- (void)_hideAnimated:(_Bool)arg1;
- (void)_temporarilyHideAnimated:(_Bool)arg1;
- (void)_removeAlertWindowOrShowAnOldAlert;
- (_Bool)_canShowAlerts;
- (_Bool)_dimsBackground;
- (void)_repopup;
- (void)_repopupNoAnimation;
- (void)_performPopoutAnimationAnimated:(_Bool)arg1;
- (void)_popoutAnimationDidStop:(id)arg1 finished:(id)arg2;
- (_Bool)_isAnimating;
- (void)_bubbleAnimationNormalDidStop:(id)arg1 finished:(id)arg2;
- (void)_bubbleAnimationShrinkDidStop:(id)arg1 finished:(id)arg2;
- (void)_growAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)_performPopup:(_Bool)arg1;
- (_Bool)showsOverSpringBoardAlerts;
- (void)setShowsOverSpringBoardAlerts:(_Bool)arg1;
- (_Bool)_manualKeyboardIsVisible;
- (_Bool)_needsKeyboard;
- (id)tableView;
- (_Bool)tableShouldShowMinimumContent;
- (void)setTableShouldShowMinimumContent:(_Bool)arg1;
- (void)_cleanupAfterPopupAnimation;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (_Bool)_isSBAlert;
- (void)_buttonClicked:(id)arg1;
- (id)context;
- (void)setContext:(id)arg1;
- (long long)buttonCount;
- (id)_addButtonWithTitleText:(id)arg1;
- (id)_addButtonWithTitle:(id)arg1;
- (id)addButtonWithTitle:(id)arg1 label:(id)arg2;
- (id)_addButtonWithTitle:(id)arg1 label:(id)arg2;
- (id)destructiveButton;
- (void)setDestructiveButton:(id)arg1;
- (id)_defaultButton;
- (void)_setDefaultButton:(id)arg1;
- (id)defaultButton;
- (void)setDefaultButton:(id)arg1;
- (id)keyboard;
- (void)_alertSheetTextFieldReturn:(id)arg1;
- (id)textField;
- (long long)textFieldCount;
- (id)textFieldAtIndex:(long long)arg1;
- (void)_setTextFieldsHidden:(_Bool)arg1;
- (id)addTextFieldWithValue:(id)arg1 label:(id)arg2;
- (long long)bodyMaxLineCount;
- (void)setBodyTextMaxLineCount:(long long)arg1;
- (long long)titleMaxLineCount;
- (void)setTitleMaxLineCount:(long long)arg1;
- (id)bodyText;
- (id)subtitle;
- (void)setSubtitle:(id)arg1;
- (void)setTaglineText:(id)arg1;
- (void)setBodyText:(id)arg1;
- (void)_setupTitleStyle;
- (void)_createTaglineTextLabelIfNeeded;
- (void)_createBodyTextLabelIfNeeded;
- (void)_createSubtitleLabelIfNeeded;
- (void)_createTitleLabelIfNeeded;
- (id)buttons;
- (void)_setAlertSheetStyleFromButtonBar:(id)arg1;
- (long long)_currentOrientation;
- (_Bool)requiresPortraitOrientation;
@property(nonatomic) _Bool groupsTextFields;
- (id)initWithTitle:(id)arg1 buttons:(id)arg2 defaultButtonIndex:(long long)arg3 delegate:(id)arg4 context:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITableViewCellLayoutManager : NSObject
{
}

+ (id)_alternateExternalDetailTextColor;
+ (id)_externalDetailTextColor;
+ (id)_alternateExternalTextColor;
+ (id)_externalTextColor;
+ (id)_alternateUISwitchableSelectorPairs;
+ (id)layoutManagerForTableViewCellStyle:(long long)arg1;
- (struct CGSize)intrinsicContentSizeForCell:(id)arg1;
- (void)getTextLabelRect:(struct CGRect *)arg1 detailTextLabelRect:(struct CGRect *)arg2 forCell:(id)arg3;
- (struct CGRect)textRectForCell:(id)arg1;
- (struct CGRect)contentEndingRectForCell:(id)arg1 forDisplayOfDeleteConfirmation:(_Bool)arg2;
- (struct CGRect)contentStartingRectForCell:(id)arg1 forDisplayOfDeleteConfirmation:(_Bool)arg2;
- (struct CGRect)contentEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)contentStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)selectedBackgroundEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)backgroundEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)backgroundStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)deleteConfirmationRectForCell:(id)arg1;
- (_Bool)editingAccessoryShouldFadeForCell:(id)arg1;
- (struct CGRect)editingAccessoryEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (struct CGRect)editingAccessoryStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (_Bool)editingAccessoryShouldAppearForCell:(id)arg1;
- (_Bool)accessoryShouldFadeForCell:(id)arg1;
- (struct CGRect)accessoryEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (struct CGRect)accessoryStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (_Bool)accessoryShouldAppearForCell:(id)arg1;
- (_Bool)reorderSeparatorShouldFadeForCell:(id)arg1;
- (struct CGRect)reorderSeparatorEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (struct CGRect)reorderSeparatorStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (_Bool)reorderSeparatorShouldAppearForCell:(id)arg1;
- (_Bool)reorderControlShouldFadeForCell:(id)arg1;
- (struct CGRect)reorderControlEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (struct CGRect)reorderControlStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (_Bool)reorderControlShouldAppearForCell:(id)arg1;
- (_Bool)editControlShouldFadeForCell:(id)arg1;
- (struct CGRect)editControlEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (struct CGRect)editControlStartingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2;
- (_Bool)editControlShouldAppearForCell:(id)arg1;
- (struct CGRect)contentRectForCell:(id)arg1 forState:(unsigned long long)arg2 rowWidth:(double)arg3;
- (struct CGRect)contentRectForCell:(id)arg1 forState:(unsigned long long)arg2;
- (void)cell:(id)arg1 didTransitionToState:(unsigned long long)arg2;
- (void)cell:(id)arg1 willTransitionToState:(unsigned long long)arg2;
- (void)layoutSubviewsOfCell:(id)arg1;
- (double)contentIndentationForCell:(id)arg1;
- (id)badgeForCell:(id)arg1;
- (id)editableTextFieldForCell:(id)arg1;
- (id)detailTextLabelForCell:(id)arg1;
- (id)textLabelForCell:(id)arg1;
- (id)imageViewForCell:(id)arg1;
- (id)defaultBadgeForCell:(id)arg1;
- (id)defaultEditableTextFieldForCell:(id)arg1;
- (id)defaultLabelForCell:(id)arg1;
- (id)defaultLabelForCell:(id)arg1 ofClass:(Class)arg2;
- (id)defaultDetailTextLabelFontForCell:(id)arg1;
- (id)defaultTextLabelFontForCell:(id)arg1;
- (id)defaultImageViewForCell:(id)arg1;
- (double)defaultDetailTextLabelFontSizeForCell:(id)arg1;
- (double)defaultTextLabelFontSizeForCell:(id)arg1;
- (struct CGRect)_contentRectForCell:(id)arg1 forEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3 rowWidth:(double)arg4;
- (struct CGRect)_contentRectForCell:(id)arg1 forEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;
- (struct CGRect)_editingAccessoryRectForCell:(id)arg1 offscreen:(_Bool)arg2;
- (struct CGRect)_accessoryRectForCell:(id)arg1 offscreen:(_Bool)arg2;
- (struct CGRect)_reorderSeparatorRectForCell:(id)arg1 offscreen:(_Bool)arg2;
- (struct CGRect)_reorderControlRectForCell:(id)arg1 offscreen:(_Bool)arg2;
- (struct CGRect)_editControlRectForCell:(id)arg1 offscreen:(_Bool)arg2;
- (struct CGRect)_adjustedBackgroundContentRectForCell:(id)arg1 forIndentedState:(_Bool)arg2 rowWidth:(double)arg3;
- (struct CGRect)_adjustedBackgroundContentRectForCell:(id)arg1 forIndentedState:(_Bool)arg2;
- (struct CGRect)_adjustedBackgroundRectForCell:(id)arg1 forIndentedState:(_Bool)arg2 rowWidth:(double)arg3;
- (struct CGRect)_adjustedBackgroundRectForCell:(id)arg1 forIndentedState:(_Bool)arg2;
- (struct CGRect)_backgroundRectForCell:(id)arg1 forIndentedState:(_Bool)arg2 rowWidth:(double)arg3;
- (struct CGRect)_backgroundRectForCell:(id)arg1 forIndentedState:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIMoreListCellLayoutManager : UITableViewCellLayoutManager
{
    double _widestImageWidth;
}

- (double)setWidestImageWidthFromViewControllers:(id)arg1;
- (void)layoutSubviewsOfCell:(id)arg1;

@end

@interface UIMoreListController : UIViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_table;
    _Bool _allowsCustomizing;
    _Bool _disableCustomizing;
    _Bool _hideNavigationBar;
    NSArray *_moreViewControllers;
    UIMoreListCellLayoutManager *_layoutManager;
    UIBarButtonItem *_moreEditButtonItem;
    _Bool _moreViewControllersChanged;
}

- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)_targetNavigationController;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)_viewControllerWasSelected;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)tabBarItem;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
@property(nonatomic) _Bool allowsCustomizing;
@property(nonatomic) _Bool moreViewControllersChanged;
@property(retain, nonatomic) NSArray *moreViewControllers;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)_updateEditButton;
- (void)_layoutCells;
- (id)table;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIMoreNavigationController : UINavigationController
{
    UIMoreListController *_moreListController;
    UINavigationController *_originalNavigationController;
    UIViewController *_originalRootViewController;
}

+ (Class)_moreListControllerClass;
@property(readonly, retain, nonatomic) UIViewController *moreListController; // @synthesize moreListController=_moreListController;
@property(nonatomic) _Bool moreViewControllersChanged;
@property(nonatomic) _Bool allowsCustomizing;
@property(retain, nonatomic) NSArray *moreViewControllers;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)_redisplayMoreTableView;
- (void)didShowViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_ensureChildrenHaveParentViewController;
- (id)_stateRestorationParentForChildViewController:(id)arg1 index:(unsigned long long *)arg2;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
@property(nonatomic) UIViewController *displayedViewController;
- (void)_restoreOriginalNavigationController;
- (void)restoreOriginalNavigationController:(id)arg1;
- (id)_preparedViewController:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIMorphingLabel : UIView
{
    UIMorphingLabelGlyphSet *_srcGlyphSet;
    UIMorphingLabelGlyphSet *_dstGlyphSet;
    NSMutableArray *_hiddenGlyphViews;
    UIView *_colorView;
    struct {
        unsigned long long len;
        unsigned long long dir;
    } _memo[51][51];
    CDStruct_8a233cb2 _alignment[100];
    unsigned long long _alignmentSize;
    double _alignmentDelays[100];
    _UIViewAnimationAttributes *_textAnimationAttributes;
    _UIViewAnimationAttributes *_textColorAnimationAttributes;
    double _lastUpdateTime;
    double _slowdown;
    double _rippleFactor;
    double _scaleFactor;
    _Bool _isDoingFastAnimation;
    _Bool _textDidChange;
    _Bool _textColorDidChange;
    _Bool _suppressLayoutSubviews;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    long long _textAlignment;
    struct CGRect _visibleRect;
}

@property(nonatomic) _Bool suppressLayoutSubviews; // @synthesize suppressLayoutSubviews=_suppressLayoutSubviews;
@property(nonatomic) struct CGRect visibleRect; // @synthesize visibleRect=_visibleRect;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (double)requiredWidthForText:(id)arg1;
- (double)flushAmount;
- (_Bool)canFitText:(id)arg1;
- (void)layoutSubviews;
- (id)attributedString;
- (id)attributedStringForText:(id)arg1;
- (void)animateTextColor;
- (void)animateGlyphs;
- (void)animateAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)initAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)animateMovementAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)initMovementAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)copyStateFromGlyph:(id)arg1 toGlyph:(id)arg2;
- (void)animateSubstitutionAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)initSubstitutionAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)animateDeletionAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)initDeletionAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)animateInsertionAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)initInsertionAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)animateChangeInWidthOutsideAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)animateGlyphsInRange:(struct _NSRange)arg1 ofGlyphSet:(id)arg2 byOffset:(double)arg3 delay:(double)arg4;
- (double)changeInWidthDueToAlignmentHunkAtIndex:(unsigned long long)arg1;
- (double)totalRightOffsetForAlignmentHunkAtIndex:(unsigned long long)arg1;
- (double)totalLeftOffsetForAlignmentHunkAtIndex:(unsigned long long)arg1;
- (void)animateHideGlyph:(id)arg1 alphaDuration:(double)arg2 delay:(double)arg3;
- (void)animateShowGlyph:(id)arg1 alpha:(double)arg2 alphaDuration:(double)arg3 delay:(double)arg4;
- (void)animateShowGlyph:(id)arg1 alphaDuration:(double)arg2 delay:(double)arg3;
- (void)animateGlyph:(id)arg1 toScale:(double)arg2 delay:(double)arg3;
- (void)animateGlyph:(id)arg1 toAlpha:(double)arg2 duration:(double)arg3 delay:(double)arg4;
- (void)animateGlyph:(id)arg1 toPosition:(struct CGPoint)arg2 delay:(double)arg3;
- (double)currentMediaTime;
- (id)uniqueStringWithPrefix:(id)arg1;
- (void)hideGlyph:(id)arg1;
- (id)glyphViewWithImage:(id)arg1 isColorGlyph:(_Bool)arg2;
- (void)calculateGlyphAlignment;
- (unsigned long long)calculateHardAlignment:(CDStruct_8a233cb2 *)arg1 size:(unsigned long long)arg2 fromGlyphs:(const unsigned short *)arg3 count:(unsigned long long)arg4 toGlyphs:(const unsigned short *)arg5 count:(unsigned long long)arg6;
- (double)alphaForFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)baseInit;

@end

__attribute__((visibility("hidden")))
@interface UIMorphingLabelGlyphSet : NSObject
{
    UIMorphingLabel *_label;
    NSAttributedString *_attributedString;
    struct __CTLine *_line;
    NSMutableArray *_glyphViews;
    unsigned long long _glyphCount;
    unsigned short *_glyphs;
    struct CGRect *_glyphFrames;
    struct CGPoint *_glyphPositions;
    struct CGPoint _lineOrigin;
    double _lineWidth;
}

@property(readonly, nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(readonly, nonatomic) struct CGPoint lineOrigin; // @synthesize lineOrigin=_lineOrigin;
@property(readonly, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(readonly, nonatomic) NSArray *glyphViews; // @synthesize glyphViews=_glyphViews;
@property(readonly, nonatomic) const struct CGPoint *glyphPositions; // @synthesize glyphPositions=_glyphPositions;
@property(readonly, nonatomic) const struct CGRect *glyphFrames; // @synthesize glyphFrames=_glyphFrames;
@property(readonly, nonatomic) const unsigned short *glyphs; // @synthesize glyphs=_glyphs;
@property(readonly, nonatomic) unsigned long long glyphCount; // @synthesize glyphCount=_glyphCount;
- (struct CGRect)boundingRectForGlyphsInRange:(struct _NSRange)arg1;
- (void)placeGlyphs;
- (void)removeGlyphs;
- (void)buildGlyphViews;
- (void)dealloc;
- (id)initWithLabel:(id)arg1 attributedString:(id)arg2;

@end

@interface UIMotionEffectGroup : UIMotionEffect
{
    NSArray *_motionEffects;
}

@property(copy, nonatomic) NSArray *motionEffects; // @synthesize motionEffects=_motionEffects;
- (id)debugDescription;
- (id)description;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)keyPathsAndRelativeValuesForViewerOffset:(struct UIOffset)arg1;
- (id)_keyPathsAndRelativeValuesForPose:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIMotionEvent : UIInternalEvent
{
    id _motionAccelerometer;
    long long _subtype;
    int _shakeState;
    long long _stateMachineState;
    double _shakeStartTime;
    double _lastMovementTime;
    double _highLevelTime;
    double _lowEndTimeout;
    NSTimer *_idleTimer;
    _Bool _sentMotionBegan;
    float _lowPassState[10];
    unsigned long long _lowPassStateIndex;
    unsigned long long _highPassStateIndex;
    float _highPassState[2];
    int notifyToken;
}

@property(nonatomic) int shakeState; // @synthesize shakeState=_shakeState;
- (void)_enablePeakDetectionIfNecessary;
- (int)_shakeState;
- (float)_determineShakeLevelX:(float)arg1 y:(float)arg2 z:(float)arg3 currentState:(long long)arg4;
- (float)_lowPass:(float)arg1;
- (void)_resetLowPassState;
- (float)_highPass:(float)arg1;
- (long long)_feedStateMachine:(float)arg1 currentState:(long long)arg2 timestamp:(double)arg3;
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;
- (void)_idleTimerFired;
- (void)_accelerometerDidDetectMovementWithTimestamp:(double)arg1;
- (_Bool)_isDetectingMotionEvents;
- (_Bool)_detectWhenNotActive;
- (void)_updateAccelerometerEnabled;
- (void)_willSuspend;
- (void)_willResume;
- (void)_sendEventToResponder:(id)arg1;
- (id)_windows;
- (id)description;
- (void)_setSubtype:(long long)arg1;
- (long long)subtype;
- (long long)type;
- (void)dealloc;
- (id)_init;

@end

__attribute__((visibility("hidden")))
@interface UIMoveEvent : UIInternalEvent
{
    long long _moveDirection;
}

@property(nonatomic, setter=_setMoveDirection:) long long _moveDirection; // @synthesize _moveDirection;
- (void)_sendEventToResponder:(id)arg1;
- (long long)type;

@end

@interface UIMovieScrubber : UIControl <UIMovieScrubberTrackViewDataSource, UIMovieScrubberTrackViewDelegate>
{
    UIImageView *_thumbView;
    UIMovieScrubberTrackView *_trackView;
    UIMovieScrubberEditingView *_editingView;
    UILabel *_elapsedLabel;
    UILabel *_remainingLabel;
    int _timeComponents;
    UIImage *_fillImage;
    UIImage *_innerShadowImage;
    UIImage *_maskImage;
    UIImage *_shadowImage;
    id <UIMovieScrubberDataSource> _dataSource;
    id <UIMovieScrubberDelegate> _delegate;
    struct CGRect _trackRect;
    double _hitOffset;
    double _zoomDelay;
    _Bool _showTimeViews;
    _Bool _editable;
    double _value;
    double _maximumValue;
    double _minimumValue;
    struct CGPoint _touchLocationWhenTrackPressBegan;
    double _trimStartValue;
    double _trimEndValue;
    double _minTrimmedLength;
    double _maxTrimmedLength;
    double _zoomAnimationDuration;
    double _zoomAnimationDelay;
    struct {
        unsigned int continuous:1;
        unsigned int animating:1;
        unsigned int creatingSnapshot:1;
        unsigned int needsReload:1;
        unsigned int layoutTimeViews:1;
        unsigned int computeTrackRect:1;
        unsigned int clampingTrimRange;
        unsigned int zoomed:1;
        unsigned int zoomAnimating:1;
        unsigned int trackIsPressed:1;
        unsigned int trackAnimating:1;
        unsigned int thumbIsVisible:1;
        unsigned int handleIsPressed:1;
        unsigned int willBeginEditing:1;
        unsigned int editing:1;
        unsigned int editingHandle;
        unsigned int rotationDisabled;
        unsigned int isInNavigationBar:1;
        unsigned int delegateValueDidChange:1;
        unsigned int delegateStartValueDidChange:1;
        unsigned int delegateEndValueDidChange:1;
        unsigned int delegateWillBeginRequestingThumbnails:1;
        unsigned int delegateDidFinishRequestingThumbnails:1;
        unsigned int delegateWillBeginEditing:1;
        unsigned int delegateDidBeginEditing:1;
        unsigned int delegateDidCancelEditing:1;
        unsigned int delegateEditingAnimationFinished:1;
        unsigned int delegateWidthDeltaOriginXDelta:1;
        unsigned int delegateDidBeginAnimatingZoom:1;
        unsigned int delegateDidEndAnimatingZoom:1;
        unsigned int delegateWillZoom:1;
        unsigned int dataSourceRequestThumbnailImageIsSummmary:1;
    } _sliderFlags;
    double _edgeInset;
}

+ (id)timeStringForSeconds:(int)arg1 forceFullWidthComponents:(_Bool)arg2 isElapsed:(_Bool)arg3;
@property(nonatomic) double edgeInset; // @synthesize edgeInset=_edgeInset;
@property(nonatomic) double minimumTrimLength; // @synthesize minimumTrimLength=_minTrimmedLength;
@property(nonatomic) double maximumTrimLength; // @synthesize maximumTrimLength=_maxTrimmedLength;
@property(nonatomic) _Bool showTimeViews; // @synthesize showTimeViews=_showTimeViews;
@property(nonatomic) double zoomDelay; // @synthesize zoomDelay=_zoomDelay;
@property(readonly, nonatomic, getter=isZoomAnimating) _Bool zoomAnimating;
@property(readonly, nonatomic) double zoomMaximumValue;
@property(readonly, nonatomic) double zoomMinimumValue;
- (void)movieScrubberTrackViewDidFinishRequestingThumbnails:(id)arg1;
- (void)movieScrubberTrackViewWillBeginRequestingThumbnails:(id)arg1;
- (void)movieScrubberTrackViewDidCollapse:(id)arg1;
- (void)movieScrubberTrackViewDidExpand:(id)arg1;
- (void)movieScrubberTrackView:(id)arg1 clampedSizeWidthDelta:(double)arg2 actualSizeWidthDelta:(double)arg3 originXDelta:(double)arg4 minimumVisibleValue:(double)arg5 maximumVisibleValue:(double)arg6;
- (double)movieScrubberTrackViewZoomAnimationDelay:(id)arg1;
- (double)movieScrubberTrackViewZoomAnimationDuration:(id)arg1;
- (double)movieScrubberTrackViewThumbnailAspectRatio:(id)arg1;
- (void)setThumbnailImage:(struct CGImage *)arg1 forTimestamp:(id)arg2;
- (void)movieScrubberTrackView:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2 isSummaryThumbnail:(_Bool)arg3;
- (id)movieScrubberTrackView:(id)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(id)arg3 endingAt:(id)arg4;
- (double)movieScrubberTrackViewDuration:(id)arg1;
- (void)_sliderValueDidChange:(id)arg1;
- (_Bool)isAnimatingValueChange;
- (_Bool)_alwaysHandleScrollerMouseEvent;
- (_Bool)cancelTouchTracking;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (int)_editingHandleWithTouch:(id)arg1;
- (_Bool)pointInsideThumb:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_cancelTrackPressIfNeccessaryWithTouch:(id)arg1;
- (void)_cancelTrackPress:(_Bool)arg1;
- (void)_beginTrackPressWithTouch:(id)arg1 touchesBegan:(_Bool)arg2;
- (void)_trackPressWasHeld;
- (void)forceUnzoom;
- (_Bool)forceZoom;
- (void)_setZoomAnimating:(_Bool)arg1;
- (void)setRotationDisabled:(_Bool)arg1;
- (double)_valueForTouch:(id)arg1;
- (void)_sendDelayedActions;
- (void)_sliderAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_sliderAnimationWillStart:(id)arg1 context:(id)arg2;
@property(nonatomic) double trimEndValue;
@property(nonatomic) double trimStartValue;
@property(nonatomic) double duration; // @dynamic duration;
- (void)_setValue:(double)arg1 andSendAction:(_Bool)arg2;
- (void)_updateThumbLocation;
- (void)setValue:(double)arg1 animated:(_Bool)arg2;
@property(nonatomic) double value;
@property(readonly, nonatomic) struct UIEdgeInsets alignmentMargins;
@property(readonly, nonatomic) _Bool isInsideNavigationBar;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (void)_updateTimes;
- (void)_initSubviews;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)thumbRectForValue:(double)arg1;
- (struct CGRect)_editingRectForStartTime:(double)arg1 endTime:(double)arg2;
- (struct CGRect)_editingRect;
- (struct CGRect)trackRect;
- (void)_computeTrackRectForBounds:(struct CGRect)arg1;
- (void)setZoomAnimationDuration:(double)arg1;
@property(nonatomic, getter=isEditing) _Bool editing;
- (void)_trimAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)animateCancelEdit;
- (void)animateAfterEdit;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_animateAfterEdit:(_Bool)arg1;
@property(nonatomic, getter=isContinuous) _Bool continuous;
@property(nonatomic, getter=isEditable) _Bool editable;
@property(nonatomic) _Bool thumbIsVisible;
- (id)scriptingInfoWithChildren;
- (id)_scriptingInfo;
@property(nonatomic) id <UIMovieScrubberDelegate> delegate;
- (void)reloadData;
@property(nonatomic) id <UIMovieScrubberDataSource> dataSource;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIMovieScrubberEditingView : UIView
{
    UIImageView *_leftImageView;
    UIImageView *_middleImageView;
    UIImageView *_rightImageView;
    NSArray *_activeImages;
    NSArray *_activeNoEditImages;
    NSArray *_inactiveImages;
    _Bool _enabled;
    _Bool _editing;
    double _edgeInset;
}

@property(nonatomic) double edgeInset; // @synthesize edgeInset=_edgeInset;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (double)_bounceValueForFraction:(double)arg1;
- (void)bounce;
- (void)_updateHandleImages;
- (id)_handleImages;
- (int)handleForPoint:(struct CGPoint)arg1 hitOffset:(double *)arg2;
- (_Bool)pointInsideRightHandle:(struct CGPoint)arg1;
- (struct CGRect)_rightHandleRect;
- (_Bool)pointInsideLeftHandle:(struct CGPoint)arg1;
- (struct CGRect)_leftHandleRect;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIMovieScrubberThumbnailView : UIImageView
{
    unsigned int _hasPlaceholderImage:1;
}

- (_Bool)hasPlaceholderImage;
- (void)setHasPlaceholderImage:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIMovieScrubberTrackOverlayView : UIView
{
    double _value;
    double _minimumValue;
    double _maximumValue;
    double _startValue;
    double _endValue;
    UIImageView *_leftFillView;
    UIImageView *_rightFillView;
    unsigned int _editingHandle;
    unsigned int _editing:1;
    unsigned int _zoomed:1;
}

- (void)layoutSubviews;
- (void)setEditingHandle:(int)arg1;
- (void)setIsZoomed:(_Bool)arg1;
- (void)setMaximumValue:(double)arg1;
- (void)setMinimumValue:(double)arg1;
- (void)setEndValue:(double)arg1;
- (void)setStartValue:(double)arg1;
- (void)setValue:(double)arg1;
- (void)setEditing:(_Bool)arg1;
- (void)_clampValueAndLayout;
- (void)animateFillFramesAway;
- (void)_updateRightFill;
- (void)_updateLeftFill;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIMovieScrubberTrackView : UIView
{
    id <UIMovieScrubberTrackViewDataSource> _dataSource;
    id <UIMovieScrubberTrackViewDelegate> _delegate;
    NSArray *_summaryThumbnailViews;
    NSArray *_summaryThumbnailTimestamps;
    NSArray *_summaryThumbnailChildTimestamps;
    NSDictionary *_thumbnailStartXValues;
    NSDictionary *_childThumbnailViews;
    NSMutableDictionary *_thumbnailViews;
    NSArray *_timestamps;
    UIMovieScrubberTrackOverlayView *_overlayView;
    UIView *_maskContainerView;
    struct CGSize _thumbnailSize;
    float _zoomOriginXDelta;
    float _zoomWidthDelta;
    float _unclampedZoomWidthDelta;
    float _zoomAnimationDuration;
    double _duration;
    double _value;
    double _startValue;
    double _endValue;
    struct {
        unsigned int delegateSizeOriginDelta:1;
        unsigned int delegateDidExpand:1;
        unsigned int delegateDidCollapse:1;
        unsigned int delegateWillRequestThumbs:1;
        unsigned int delegateDidRequestThumbs:1;
        unsigned int delegateZoomAnimationDuration:1;
        unsigned int delegateZoomAnimationDelay:1;
        unsigned int needsReload:1;
        unsigned int editing:1;
        unsigned int editingHandle;
        unsigned int zoomIsDisabled:1;
    } _trackFlags;
}

- (void)_unzoomAnimation:(id)arg1 didFinish:(id)arg2 context:(id)arg3;
- (void)_zoomAnimation:(id)arg1 didFinish:(id)arg2 context:(id)arg3;
- (void)unzoom;
- (void)_setOverlayViewIsZoomed:(_Bool)arg1 minValue:(float)arg2 maxValue:(float)arg3;
- (_Bool)zoomAtPoint:(struct CGPoint)arg1;
- (double)zoomAnimationDuration;
- (void)setZoomAnimationDuration:(double)arg1;
- (void)layoutSubviews;
- (void)reloadData;
- (void)_reallyReloadData;
- (void)clear;
- (id)_createImageViewForTimestamp:(id)arg1 isSummaryThumbnail:(_Bool)arg2;
- (void)setThumbnailImage:(struct CGImage *)arg1 forTimestamp:(id)arg2;
- (void)setEndValue:(double)arg1;
- (void)setStartValue:(double)arg1;
- (void)animateFillFramesAway;
- (void)setEditing:(_Bool)arg1;
- (void)setValue:(double)arg1;
@property(nonatomic) id <UIMovieScrubberTrackViewDelegate> delegate;
@property(nonatomic) id <UIMovieScrubberTrackViewDataSource> dataSource;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIMultiColumnsNavigationTransitionView : UIView <NSCoding>
{
    id _delegate;
    long long _transition;
    UIView *_firstResponderViewToRestore;
    unsigned int _isTransitioning:1;
    double _columnWidth;
    int _columnCount;
    NSArray *_fromViews;
    NSArray *_toViews;
    NSArray *_viewsToRemove;
    NSArray *_viewsToAdd;
    NSArray *_displayedViews;
    struct __CFDictionary *_dividerViews;
    struct __CFDictionary *_containerViews;
    UIColor *_dividersColor;
    double _dividersWidth;
}

+ (double)defaultDurationForTransition:(long long)arg1;
@property(nonatomic) int columnCount; // @synthesize columnCount=_columnCount;
@property(nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void)_removeContainerViewForView:(id)arg1;
- (id)_containerViewForView:(id)arg1;
- (void)_removeDividerViewForView:(id)arg1;
- (id)_dividerViewForView:(id)arg1;
- (void)_navigationTransitionDidStop;
- (_Bool)_isTransitioningFromView:(id)arg1;
- (_Bool)isTransitioning;
- (_Bool)transition:(long long)arg1 fromViews:(id)arg2 toViews:(id)arg3;
- (_Bool)transition:(long long)arg1 toViews:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIMutableApplicationSceneClientSettings : FBSMutableSceneClientSettings <UIApplicationSceneClientSettings>
{
}

- (_Bool)isUISubclass;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) long long notificationCenterRevealMode;
@property(nonatomic) long long controlCenterRevealMode;
@property(nonatomic) unsigned long long proximityDetectionModes;
@property(nonatomic) _Bool orientationEnabled;
@property(nonatomic) _Bool idleTimerDisabled;
@property(nonatomic) long long compatibilityMode;
@property(nonatomic) double defaultPNGExpirationTime;
@property(copy, nonatomic) NSString *defaultPNGName;
@property(nonatomic) _Bool defaultStatusBarHidden;
@property(nonatomic) long long defaultStatusBarStyle;
@property(nonatomic) _Bool statusBarHidden;
@property(nonatomic) long long statusBarStyle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIMutableApplicationSceneSettings : FBSMutableSceneSettings <UIApplicationSceneSettings>
{
}

- (_Bool)isUISubclass;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) int statusBarStyleOverridesToSuppress;
@property(nonatomic) _Bool underLock;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIMutableIndexPath : NSIndexPath
{
    unsigned long long *_mutableIndexes;
    _Bool _locked;
}

+ (void)setIndex:(unsigned long long)arg1 atPosition:(unsigned long long)arg2 forIndexPath:(id *)arg3;
- (id)retain;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (long long)compare:(id)arg1;
- (void)getIndexes:(unsigned long long *)arg1;
- (unsigned long long)indexAtPosition:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithIndexes:(const unsigned long long *)arg1 length:(unsigned long long)arg2;

@end

@interface UIStatusBarStyleRequest : NSObject <NSMutableCopying, NSCopying>
{
    long long _style;
    _Bool _legacy;
    long long _legibilityStyle;
    UIColor *_foregroundColor;
    NSNumber *_overrideHeight;
}

@property(readonly, retain, nonatomic) NSNumber *overrideHeight; // @synthesize overrideHeight=_overrideHeight;
@property(readonly, retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(readonly, nonatomic) long long legibilityStyle; // @synthesize legibilityStyle=_legibilityStyle;
@property(readonly, nonatomic, getter=isLegacy) _Bool legacy; // @synthesize legacy=_legacy;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (_Bool)isTranslucent;
- (_Bool)isDoubleHeight;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)_copyWithZone:(struct _NSZone *)arg1 class:(Class)arg2;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithStyle:(long long)arg1 legacy:(_Bool)arg2 legibilityStyle:(long long)arg3 foregroundColor:(id)arg4;
- (id)initWithStyle:(long long)arg1 legacy:(_Bool)arg2 legibilityStyle:(long long)arg3 foregroundColor:(id)arg4 overrideHeight:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface UIMutableStatusBarStyleRequest : UIStatusBarStyleRequest
{
}

@property(retain, nonatomic) NSNumber *overrideHeight; // @dynamic overrideHeight;
@property(retain, nonatomic) UIColor *foregroundColor; // @dynamic foregroundColor;
@property(nonatomic) long long legibilityStyle; // @dynamic legibilityStyle;
@property(nonatomic, getter=isLegacy) _Bool legacy; // @dynamic legacy;
@property(nonatomic) long long style; // @dynamic style;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface UIUserNotificationAction : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    _Bool _authenticationRequired;
    _Bool _destructive;
    NSString *_activationModeString;
    NSString *_identifier;
    NSString *_title;
    unsigned long long _activationMode;
}

+ (_Bool)supportsSecureCoding;
+ (id)actionWithIdentifier:(id)arg1 title:(id)arg2 activationMode:(unsigned long long)arg3 isAuthenticationRequired:(_Bool)arg4;
@property(nonatomic, getter=isDestructive) _Bool destructive; // @synthesize destructive=_destructive;
@property(nonatomic, getter=isAuthenticationRequired) _Bool authenticationRequired; // @synthesize authenticationRequired=_authenticationRequired;
@property(nonatomic) unsigned long long activationMode; // @synthesize activationMode=_activationMode;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)validatedAction;
- (id)description;
@property(readonly, nonatomic) NSString *activationModeString; // @synthesize activationModeString=_activationModeString;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 activationMode:(unsigned long long)arg3 isAuthenticationRequired:(_Bool)arg4 isDestructive:(_Bool)arg5;

@end

@interface UIMutableUserNotificationAction : UIUserNotificationAction
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(nonatomic) unsigned long long activationMode;
@property(nonatomic, getter=isAuthenticationRequired) _Bool authenticationRequired;
@property(nonatomic, getter=isDestructive) _Bool destructive;
@property(copy, nonatomic) NSString *identifier;
@property(copy, nonatomic) NSString *title;

@end

@interface UIUserNotificationActionSettings : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    NSString *_category;
    NSDictionary *_actionsByContext;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSDictionary *actionsByContext; // @synthesize actionsByContext=_actionsByContext;
@property(copy, nonatomic) NSString *category; // @synthesize category=_category;
- (unsigned long long)_maximumActionsForContext:(unsigned long long)arg1;
- (id)validatedSettings;
- (id)actionsForContext:(unsigned long long)arg1;
- (id)actions;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCategory:(id)arg1 actionsByContext:(id)arg2;

@end

@interface UIMutableUserNotificationActionSettings : UIUserNotificationActionSettings
{
}

- (void)setActions:(id)arg1 forContext:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(copy, nonatomic) NSString *category;

@end

@interface UIUserNotificationCategory : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    NSString *_identifier;
    NSDictionary *_actionsByContext;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSDictionary *actionsByContext; // @synthesize actionsByContext=_actionsByContext;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (unsigned long long)_maximumActionsForContext:(unsigned long long)arg1;
- (id)validatedCategory;
- (id)actionsForContext:(unsigned long long)arg1;
- (id)actions;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 actionsByContext:(id)arg2;

@end

@interface UIMutableUserNotificationCategory : UIUserNotificationCategory
{
}

- (void)setActions:(id)arg1 forContext:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(copy, nonatomic) NSString *identifier;

@end

__attribute__((visibility("hidden")))
@interface UINavBarPrompt : UIView
{
    UILabel *_label;
    UINavigationBar *_navBar;
}

- (void)layoutSubviews;
- (struct CGSize)_updateLabelTextColorAndFontReturningShadowOffset;
- (struct CGSize)_updateLabelTextColorAndFontReturningShadowOffset_legacy;
- (struct CGRect)promptBounds;
- (struct CGRect)_labelFrame;
- (id)prompt;
- (void)setPrompt:(id)arg1;
- (void)dealloc;
- (void)clearWeakReference:(id)arg1;
- (id)initWithPrompt:(id)arg1 navBar:(id)arg2;

@end

@interface UINavigationBar : UIView <UIGestureRecognizerDelegate, _UIShadowedView, _UIBasicAnimationFactory, UIStatusBarTinting, _UIBarPositioningInternal, NSCoding, UIBarPositioning>
{
    NSMutableArray *_itemStack;
    double _rightMargin;
    unsigned int _state;
    id _delegate;
    UIView *_backgroundView;
    UIView *_titleView;
    NSArray *_leftViews;
    NSArray *_rightViews;
    UIView *_prompt;
    UIView *_accessoryView;
    UIColor *_barTintColor;
    id _appearanceStorage;
    id _currentAlert;
    struct {
        unsigned int animate:1;
        unsigned int animationDisabledCount:10;
        unsigned int transitioningBarStyle:1;
        unsigned int newBarStyle:3;
        unsigned int transitioningToTranslucent:1;
        unsigned int barStyle:3;
        unsigned int barTranslucence:3;
        unsigned int disableLayout:1;
        unsigned int backPressed:1;
        unsigned int animatePromptChange:1;
        unsigned int pendingHideBackButton:1;
        unsigned int titleAutosizesToFit:1;
        unsigned int usingNewAPI:1;
        unsigned int forceFullHeightInLandscape:1;
        unsigned int isLocked:1;
        unsigned int shouldUpdatePromptAfterTransition:1;
        unsigned int crossfadeItems:1;
        unsigned int autoAdjustTitle:1;
        unsigned int isContainedInPopover:1;
        unsigned int needsDrawRect:1;
        unsigned int animationCleanupCancelled:1;
        unsigned int layoutInProgress:1;
        unsigned int dynamicDuration:1;
        unsigned int isInteractive:1;
        unsigned int cancelledTransition:1;
        unsigned int animationCount:4;
        unsigned int backgroundLayoutNeedsUpdate:1;
        unsigned int backgroundImageNeedsUpdate:1;
    } _navbarFlags;
    UISwipeGestureRecognizer *_popSwipeGestureRecognizer;
    UIImageView *_backIndicatorView;
    NSMutableArray *_slideTransitionClippingViews;
    _UIViewControllerTransitionContext *_navControllerAnimatingContext;
    _Bool _needsUpdateBackIndicatorImage;
    _Bool _wantsLetterpressContent;
    _Bool __condensed;
    long long _barPosition;
    double _requestedMaxBackButtonWidth;
    NSString *_backdropViewLayerGroupName;
    NSMutableArray *__animationIds;
}

+ (_Bool)_useCustomBackButtonAction;
+ (void)_setUseCustomBackButtonAction:(_Bool)arg1;
+ (void)_initializeForIdiom:(long long)arg1;
+ (void)setDefaultAnimationDuration:(double)arg1;
+ (id)defaultPromptFont;
+ (struct CGSize)defaultSizeWithPrompt;
+ (struct CGSize)defaultSize;
+ (struct CGSize)defaultSizeWithPromptForOrientation:(long long)arg1;
+ (struct CGSize)defaultSizeForOrientation:(long long)arg1;
+ (id)_statusBarBaseTintColorForStyle:(long long)arg1 translucent:(_Bool)arg2 tintColor:(id)arg3;
+ (id)_statusBarBaseTintColorForStyle:(long long)arg1 translucent:(_Bool)arg2 tintColor:(id)arg3 backgroundImage:(id)arg4 viewSize:(struct CGSize)arg5;
+ (id)_bottomColorForBackgroundImage:(id)arg1 viewSize:(struct CGSize)arg2;
@property(retain, nonatomic, setter=_setAnimationIds:) NSMutableArray *_animationIds; // @synthesize _animationIds=__animationIds;
@property(nonatomic, getter=_isCondensed, setter=_setCondensed:) _Bool _condensed; // @synthesize _condensed=__condensed;
@property(nonatomic, setter=_setWantsLetterpressContent:) _Bool _wantsLetterpressContent; // @synthesize _wantsLetterpressContent;
@property(retain, nonatomic, setter=_setBackdropViewLayerGroupName:) NSString *_backdropViewLayerGroupName; // @synthesize _backdropViewLayerGroupName;
@property(nonatomic, setter=_setRequestedMaxBackButtonWidth:) double _requestedMaxBackButtonWidth; // @synthesize _requestedMaxBackButtonWidth;
@property(nonatomic, setter=_setNeedsUpdateBackIndicatorImage:) _Bool _needsUpdateBackIndicatorImage; // @synthesize _needsUpdateBackIndicatorImage;
@property(readonly, nonatomic) long long barPosition; // @synthesize barPosition=_barPosition;
- (long long)_backgroundBackdropStyle;
- (void)_handlePopSwipe:(id)arg1;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)_shadowView;
- (void)_setAutoAdjustTitle:(_Bool)arg1;
- (void)_navBarButtonPressed:(id)arg1;
- (long long)_barStyle:(_Bool)arg1;
- (void)layoutSubviews;
- (double)_backIndicatorClippingMargin;
- (void)setNeedsLayout;
- (id)_itemStack;
- (void)_getTitleViewFrame:(struct CGRect *)arg1 leftViewFrames:(id)arg2 rightViewFrames:(id)arg3;
- (void)_getTitleViewFrame:(struct CGRect *)arg1 leftViewFrames:(id)arg2 rightViewFrames:(id)arg3 forItemAtIndex:(unsigned long long)arg4;
- (void)_getTitleViewFrame:(struct CGRect *)arg1 leftViewFrames:(id)arg2 rightViewFrames:(id)arg3 forItemAtIndex:(unsigned long long)arg4 returnedIdealWidthOfTextContent:(double *)arg5 availableLayoutWidthForTextContent:(double *)arg6 idealBackButtonWidth:(double *)arg7;
- (void)_fadeAllViewsIn;
- (void)_fadeViewsIn:(id)arg1;
- (void)_fadeAllViewsOut;
- (void)_fadeViewsOut:(id)arg1;
- (void)_fadeViewOut:(id)arg1;
- (void)_removeItemsFromSuperview:(id)arg1;
- (id)_allViews;
- (void)_startPopAnimationFromItems:(id)arg1 fromBarStyle:(long long)arg2 toItems:(id)arg3 toBarStyle:(long long)arg4;
- (void)_startPushAnimationFromItems:(id)arg1 fromBarStyle:(long long)arg2;
- (id)_timingFunctionForAnimationInView:(id)arg1 withKeyPath:(id)arg2;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (void)_animateOldBackButtonView:(id)arg1 toNewBackButtonView:(id)arg2 duration:(double)arg3 initialFrameForIncomingView:(CDUnknownBlockType)arg4 destinationFrameForOutgoingView:(CDUnknownBlockType)arg5 animationCleanup:(CDUnknownBlockType)arg6;
- (double)_backTitleWidthOverTitleWidthForMatchingBackButtonView:(id)arg1 titleView:(id)arg2 withBackButtonWidth:(double)arg3;
- (void)_wrapView:(id)arg1 inClippingViewWithLeftBoundary:(double)arg2 rightBoundary:(double)arg3 leftMaskImage:(id)arg4 leftMaskIsChevron:(_Bool)arg5 rightMaskImage:(id)arg6;
- (void)_backgroundFadeDidFinish:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_startBarStyleAnimation:(long long)arg1 withTintColor:(id)arg2;
- (void)_crossFadeToBarBackgroundImageForItem:(id)arg1;
- (struct CGRect)_boundsForPrompt:(id)arg1 inRect:(struct CGRect)arg2 withFont:(id)arg3 barStyle:(long long)arg4;
- (void)_removeAccessoryView;
- (void)setTopItemAlpha:(double)arg1;
- (double)topItemAlpha;
- (struct CGRect)availableTitleArea;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_barSizeDidChangeAndSoDidHeight:(_Bool)arg1;
- (void)_layoutBackgroundViewConsideringAdaptiveBackdropAndChangedHeight:(_Bool)arg1;
- (long long)_barPosition;
- (void)_setBarPosition:(long long)arg1;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)_updateBackIndicatorImage;
- (id)_effectiveBackIndicatorTransitionMaskImage;
- (id)_effectiveBackIndicatorImage;
- (_Bool)_suppressBackIndicator;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_accessibilityButtonShapesDidChangeNotification:(id)arg1;
- (void)_accessibilityButtonShapesParametersDidChange;
- (void)_updateBackgroundImage;
- (void)showHideBackButtomAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)showBackButton:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_hideButtonsAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)hideButtons;
- (id)createButtonWithContents:(id)arg1 width:(double)arg2 barStyle:(long long)arg3 buttonStyle:(int)arg4 isRight:(_Bool)arg5;
- (void)setButton:(int)arg1 enabled:(_Bool)arg2;
- (void)_showLeftRightButtonsAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_setLeftViews:(id)arg1 rightViews:(id)arg2;
- (_Bool)_isIncomingButtonSameAsOutgoingButtonOnLeft:(_Bool)arg1;
- (void)_setLeftView:(id)arg1 rightView:(id)arg2;
- (void)showLeftButton:(id)arg1 withStyle:(int)arg2 rightButton:(id)arg3 withStyle:(int)arg4;
- (void)showButtonsWithLeft:(id)arg1 right:(id)arg2 leftBack:(_Bool)arg3;
- (void)showButtonsWithLeftTitle:(id)arg1 rightTitle:(id)arg2 leftBack:(_Bool)arg3;
- (void)showButtonsWithLeftTitle:(id)arg1 rightTitle:(id)arg2;
- (void)drawBackButtonBackgroundInRect:(struct CGRect)arg1 withStyle:(long long)arg2 pressed:(_Bool)arg3;
- (void)drawBackgroundInRect:(struct CGRect)arg1 withStyle:(long long)arg2;
- (unsigned int)animationDisabledCount;
- (_Bool)isAnimationEnabled;
- (void)enableAnimation;
- (void)disableAnimation;
- (struct CGRect)promptBounds;
- (id)promptView;
- (id)prompt;
- (void)setPrompt:(id)arg1;
- (void)updatePrompt;
- (id)currentBackButton;
- (_Bool)_shouldShowBackButtonForNavigationItem:(id)arg1;
- (id)_currentBackButtonForNthItemFromTop:(unsigned long long)arg1;
- (_Bool)_hasBackButton;
- (id)currentRightView;
- (id)_currentRightViews;
- (id)currentLeftView;
- (id)_currentLeftViews;
- (void)_decrementAnimationCountIfNecessary;
- (void)_incrementAnimationCountIfNecessary;
- (void)setTitleView:(id)arg1;
- (void)_updateTitleView;
- (_Bool)titleAutoresizesToFit;
- (void)setTitleAutoresizesToFit:(_Bool)arg1;
- (void)setRightMargin:(double)arg1;
- (id)_statusBarTintColor;
@property(retain, nonatomic) UIColor *barTintColor;
- (id)_effectiveBarTintColor;
- (void)_setIsContainedInPopover:(_Bool)arg1;
- (void)_propagateEffectiveBarTintColorWithPreviousColor:(id)arg1;
- (id)_titleTextColor;
- (id)buttonItemTextColor;
- (id)buttonItemShadowColor;
- (void)setForceFullHeightInLandscape:(_Bool)arg1;
- (_Bool)forceFullHeightInLandscape;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
- (_Bool)_modernIsTranslucent;
- (_Bool)_hasInvisibleCustomBackgroundImage;
- (_Bool)_legacyIsTranslucent;
- (long long)_statusBarStyle;
@property(nonatomic) long long barStyle;
- (void)_setBarStyle:(long long)arg1;
- (void)_updateNavigationBarItemsForStyle:(long long)arg1;
- (void)_updateNavigationBarItemsForStyle:(long long)arg1 previousTintColor:(id)arg2;
- (void)willRemoveSubview:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)_updateNavigationBarItem:(id)arg1 forStyle:(long long)arg2;
- (void)_updateNavigationBarItem:(id)arg1 forStyle:(long long)arg2 previousTintColor:(id)arg3;
@property(nonatomic) id <UINavigationBarDelegate> delegate;
- (void)removeConstraint:(id)arg1;
- (void)addConstraint:(id)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_willMoveToWindow:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_handleMouseUpAtPoint:(struct CGPoint)arg1;
- (void)_popForTouchAtPoint:(struct CGPoint)arg1;
- (_Bool)_shouldPopForTouchAtPoint:(struct CGPoint)arg1;
- (void)_handleMouseDownAtPoint:(struct CGPoint)arg1;
- (void)_setBackIndicatorPressed:(_Bool)arg1 initialPress:(_Bool)arg2;
- (void)_evaluateBackIndicatorForHilightedState:(_Bool)arg1 ofBarButtonItem:(id)arg2 inNavigationItem:(id)arg3;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)_commonHitTest:(struct CGPoint)arg1 forView:(id)arg2;
- (_Bool)_canHandleStatusBarTouchAtLocation:(struct CGPoint)arg1;
- (void)_navigationAnimationDidFinish:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_reenableUserInteractionWhenReadyWithContext:(id)arg1;
- (void)_reenableUserInteraction;
- (id)backButtonViewAtPoint:(struct CGPoint)arg1;
- (id)navigationItemAtPoint:(struct CGPoint)arg1;
- (void)_cancelInteractiveTransition;
- (void)_cancelInProgressPushOrPop;
- (id)navigationItems;
@property(copy, nonatomic) NSArray *items;
- (void)invalidateIntrinsicContentSize;
- (struct CGSize)intrinsicContentSize;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (long long)effectiveInterfaceOrientation;
- (void)setNavigationItems:(id)arg1;
- (void)_setupTopNavItem:(id)arg1 oldTopNavItem:(id)arg2;
- (void)_addItems:(id)arg1 withEffectiveDelegate:(id)arg2 transition:(int)arg3;
- (void)_addItem:(id)arg1 withEffectiveDelegate:(id)arg2 transition:(int)arg3;
- (void)_setItemsUpToItem:(id)arg1 transition:(id)arg2;
- (void)_setItems:(id)arg1 transition:(int)arg2;
- (void)_setItems:(id)arg1 transition:(int)arg2 reset:(_Bool)arg3;
- (_Bool)_didVisibleItemsChangeWithNewItems:(id)arg1 oldItems:(id)arg2;
- (void)setItems:(id)arg1 animated:(_Bool)arg2;
- (int)_transitionForOldItems:(id)arg1 newItems:(id)arg2;
@property(readonly, retain, nonatomic) UINavigationItem *backItem;
@property(readonly, retain, nonatomic) UINavigationItem *topItem;
- (void)popNavigationItem;
- (void)_prepareForPopAnimationWithNewTopItem:(id)arg1;
- (id)_popNavigationItemWithTransition:(int)arg1;
- (void)_pushNestedNavigationItem:(id)arg1;
- (void)_popNestedNavigationItem;
- (id)popNavigationItemAnimated:(_Bool)arg1;
- (void)pushNavigationItem:(id)arg1;
- (long long)_currentBarStyle;
- (void)_resetBackgroundImageAsNecessary;
- (_Bool)_wantsAdaptiveBackdrop;
- (_Bool)_wantsAdaptiveBackdropWhenNotHidden;
- (_Bool)_wantsAdaptiveBackdropForPalette;
- (_Bool)_barTranslucenceSuppressesAdaptiveBackdrop;
- (_Bool)_backgroundViewSuppressesAdaptiveBackdrop;
- (_Bool)_barStyleSuppressesAdaptiveBackdrop;
- (_Bool)_customBackgroundImageSuppressesAdaptiveBackdrop;
- (_Bool)_customBackgroundImageSuppressesAdaptiveBackdropForPalette;
- (void)_prepareForPushAnimationWithItems:(id)arg1;
- (void)_cancelInteractiveTransition:(double)arg1 completionSpeed:(double)arg2 completionCurve:(long long)arg3;
- (void)_finishInteractiveTransition:(double)arg1 completionSpeed:(double)arg2 completionCurve:(long long)arg3;
- (void)_updateInteractiveTransition:(double)arg1;
- (void)_updateInteractiveStatusBarTransitionPercent:(double)arg1 isFinished:(_Bool)arg2 didComplete:(_Bool)arg3 completionSpeed:(double)arg4 completionCurve:(long long)arg5;
- (void)_pushNavigationItem:(id)arg1 transition:(int)arg2;
- (void)_startInteractiveNavigationBarTransition;
- (void)pushNavigationItem:(id)arg1 animated:(_Bool)arg2;
- (void)_customViewChangedForButtonItem:(id)arg1;
- (void)setAccessoryView:(id)arg1 animate:(_Bool)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (unsigned long long)_subviewIndexAboveBackground;
- (_Bool)_canDrawContent;
- (int)state;
- (id)_defaultTitleFontWithScaleAdjustment:(double)arg1;
- (id)_defaultTitleFont;
- (id)_defaultTitleFontFittingHeight:(double)arg1 withScaleAdjustment:(double)arg2;
- (void)setLocked:(_Bool)arg1;
- (_Bool)isLocked;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonNavBarInit;
- (_Bool)_subclassImplementsDrawBackgroundInRect;
- (_Bool)_subclassImplementsDrawRect;
- (void)_updateOpacity;
- (struct CGSize)defaultSizeForOrientation:(long long)arg1;
- (double)defaultBackButtonAlignmentHeight;
- (void)setHidden:(_Bool)arg1;
- (id)_appearanceStorage;
- (_Bool)isMinibar;
- (void)_setActiveBarMetrics:(long long)arg1;
- (long long)_activeBarMetrics;
- (void)_setDefaultBarMetrics:(long long)arg1;
- (long long)_defaultBarMetrics;
- (void)_setDeferShadowToSearchBar:(_Bool)arg1;
- (_Bool)_deferShadowToSearchBar;
- (void)_setHidesShadow:(_Bool)arg1;
- (_Bool)_hidesShadow;
@property(retain, nonatomic) UIImage *shadowImage;
- (double)titleVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)setTitleVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
@property(copy, nonatomic) NSDictionary *titleTextAttributes;
- (id)backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (id)backgroundImageForBarMetrics:(long long)arg1;
- (void)setBackgroundImage:(id)arg1 forBarMetrics:(long long)arg2;
- (void)_effectiveBarTintColorDidChangeWithPreviousColor:(id)arg1;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (void)_updatePaletteBackgroundIfNecessary;
- (void)_configurePaletteConstraintsIfNecessary;
- (void)_updateBackgroundColor;
- (void)_tintViewAppearanceDidChange;
- (id)_nthNavigationItemFromTop:(long long)arg1;
- (long long)_itemStackCount;
@property(nonatomic, setter=_setBackIndicatorLeftMargin:) double _backIndicatorLeftMargin;
- (double)_effectiveBackIndicatorLeftMargin;
@property(retain, nonatomic, setter=_setBackIndicatorImage:) UIImage *_backIndicatorImage;
@property(retain, nonatomic) UIImage *backIndicatorTransitionMaskImage;
@property(retain, nonatomic) UIImage *backIndicatorImage;
@property(readonly, nonatomic) double _heightIncludingBackground;
- (void)tintColorDidChange;
@property(readonly, nonatomic) long long _barTranslucence;
- (id)_effectiveDelegate;
- (void)_palette:(id)arg1 isAttaching:(_Bool)arg2 didComplete:(_Bool)arg3;
- (id)_backgroundViewForPalette:(id)arg1;
- (void)_setReversesButtonTextShadowOffsetWhenPressed:(_Bool)arg1;
- (void)_setButtonTextShadowOffset:(struct CGSize)arg1;
- (void)_setPressedButtonItemTextColor:(id)arg1 shadowColor:(id)arg2;
- (void)_setButtonItemTextColor:(id)arg1 shadowColor:(id)arg2;
- (void)_setButtonItemTextColor:(id)arg1 shadowColor:(id)arg2 forState:(unsigned long long)arg3;
- (void)_setBackButtonBackgroundImage:(id)arg1 mini:(id)arg2 forStates:(unsigned long long)arg3;
- (void)_setButtonBackgroundImage:(id)arg1 mini:(id)arg2 forStates:(unsigned long long)arg3;
- (void)_setBackgroundImage:(id)arg1 mini:(id)arg2;
- (void)_applySPIAppearanceToButtons;
@property(nonatomic, setter=_setShadowAlpha:) double _shadowAlpha;
@property(retain, nonatomic, setter=_setBackgroundView:) UIView *_backgroundView;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (_Bool)_hasCustomAutolayoutNeighborSpacing;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UINavigationButton : UIButton
{
    NSSet *_possibleTitles;
    int _style;
    long long _barStyle;
    UIColor *_navigationBarTintColor;
    struct CGSize _boundsAdjustment;
    id _appearanceStorage;
    NSSet *_possibleSystemItems;
    unsigned int _size:2;
    unsigned int _wantsLetterpressContent:1;
    UIBarButtonItem *_originatingButtonItem;
    UINavigationItem *_originatingNavigationItem;
    _Bool _createdByBarButtonItem;
    _Bool _isFontScaleInvalid;
    _Bool _wantsBlendModeForAccessibilityBackgrounds;
    _Bool __barItemHidden;
    double _minimumWidth;
    double _maximumWidth;
    long long _buttonItemStyle;
    NSDictionary *_stylesForSizingTitles;
    double _fontScaleAdjustment;
    Class _appearanceGuideClass;
    struct UIEdgeInsets __additionalSelectionInsets;
}

+ (void)_resetRenderingModesForBackgroundImageView:(id)arg1 inBarStyle:(long long)arg2 isEnabled:(_Bool)arg3 withAccessibilityBackground:(_Bool)arg4 wantsBlendModeForAccessibilityBackgrounds:(_Bool)arg5;
+ (id)defaultFont;
@property(nonatomic, setter=_setBarItemHidden:) _Bool _barItemHidden; // @synthesize _barItemHidden=__barItemHidden;
@property(nonatomic, setter=_setAdditionalSelectionInsets:) struct UIEdgeInsets _additionalSelectionInsets; // @synthesize _additionalSelectionInsets=__additionalSelectionInsets;
@property(nonatomic, setter=_setAppearanceGuideClass:) Class _appearanceGuideClass; // @synthesize _appearanceGuideClass;
@property(nonatomic, setter=_setWantsBlendModeForAccessibilityBackgrounds:) _Bool _wantsBlendModeForAccessibilityBackgrounds; // @synthesize _wantsBlendModeForAccessibilityBackgrounds;
@property(nonatomic, setter=_setFontScaleAdjustment:) double _fontScaleAdjustment; // @synthesize _fontScaleAdjustment;
@property(nonatomic, setter=_setFontScaleInvalid:) _Bool _isFontScaleInvalid; // @synthesize _isFontScaleInvalid;
@property(nonatomic, setter=_setCreatedByBarButtonItem:) _Bool _createdByBarButtonItem; // @synthesize _createdByBarButtonItem;
@property(copy, nonatomic, setter=_setStylesForSizingTitles:) NSDictionary *_stylesForSizingTitles; // @synthesize _stylesForSizingTitles;
@property(nonatomic, setter=_setButtonItemStyle:) long long _buttonItemStyle; // @synthesize _buttonItemStyle;
@property(nonatomic) double maximumWidth; // @synthesize maximumWidth=_maximumWidth;
@property(nonatomic) double minimumWidth; // @synthesize minimumWidth=_minimumWidth;
@property(nonatomic) long long barStyle; // @synthesize barStyle=_barStyle;
@property(nonatomic) int style; // @synthesize style=_style;
- (id)_appearanceStorage;
- (void)_applyBarButtonAppearanceStorage:(id)arg1 withTaggedSelectors:(id)arg2;
- (void)_setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (struct UIOffset)_titlePositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (_Bool)_hasBaselineAlignedAbsoluteVerticalPosition:(out double *)arg1 withinNavBar:(id)arg2 forSize:(struct CGSize)arg3;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_UIAppearance_setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)_titleTextAttributesForState:(unsigned long long)arg1;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_UIAppearance_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)_tintColor;
- (void)_setTintColor:(id)arg1;
- (void)_UIAppearance_setTintColor:(id)arg1;
- (id)_backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (void)_UIAppearance_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_UIAppearance_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (void)_updateContentInsets;
- (void)_setBoundsAdjustment:(struct CGSize)arg1;
- (void)_setFrame:(struct CGRect)arg1 deferLayout:(_Bool)arg2;
- (void)_adjustBounds;
- (id)_scriptingInfo;
- (_Bool)_canHandleStatusBarTouchAtLocation:(struct CGPoint)arg1;
- (void)setNavigationBarTintColor:(id)arg1;
@property(nonatomic) int controlSize;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)contentsEqualTo:(id)arg1 withStyle:(int)arg2;
@property(retain, nonatomic) UIImage *image;
@property(retain, nonatomic) NSString *title;
- (_Bool)_isModernButton;
@property(nonatomic) UINavigationItem *originatingNavigationItem;
@property(nonatomic) UIBarButtonItem *originatingButtonItem;
- (void)dealloc;
- (id)initWithImage:(id)arg1 style:(int)arg2;
- (id)initWithImage:(id)arg1;
- (id)initWithImage:(id)arg1 width:(double)arg2 style:(int)arg3;
- (id)initWithImage:(id)arg1 width:(double)arg2 style:(int)arg3 applyBezel:(_Bool)arg4 forBarStyle:(long long)arg5 buttonItemStyle:(long long)arg6;
- (id)initWithTitle:(id)arg1 possibleTitles:(id)arg2 style:(int)arg3;
- (id)initWithTitle:(id)arg1 style:(int)arg2;
- (id)initWithTitle:(id)arg1;
- (id)initWithValue:(id)arg1 width:(double)arg2 style:(int)arg3 barStyle:(long long)arg4 possibleTitles:(id)arg5 tintColor:(id)arg6;
- (id)initWithValue:(id)arg1 width:(double)arg2 style:(int)arg3 barStyle:(long long)arg4 possibleTitles:(id)arg5 possibleSystemItems:(id)arg6 tintColor:(id)arg7 applyBezel:(_Bool)arg8 forButtonItemStyle:(long long)arg9;
- (void)_setTitleFrozen:(_Bool)arg1;
- (void)_updateStyle;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_accessibilityButtonShapesDidChangeNotification:(id)arg1;
- (void)_accessibilityButtonShapesParametersDidChange;
- (id)_customOrAccessibilityBackgroundImageForState:(unsigned long long)arg1 style:(long long)arg2 isMini:(_Bool)arg3;
- (id)_adjustedDefaultTitleFont;
- (struct UIEdgeInsets)_pathImageEdgeInsets;
- (struct UIEdgeInsets)_pathTitleEdgeInsets;
- (struct UIEdgeInsets)_buttonTitleEdgeInsets;
- (long long)_barButtonItemStyle;
- (void)_updateTitleColorsForState:(unsigned long long)arg1;
- (void)layoutSubviews;
- (struct CGRect)_selectedIndicatorBounds;
- (void)_sendSetNeedsLayoutToSuperviewOnTitleAnimationCompletionIfNecessary;
- (void)_setWantsLetterpressContent;
- (void)_updateTitleForLetterpress;
- (void)_updateShadowOffsetWithAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (struct CGSize)_defaultTitleShadowOffsetForState:(unsigned long long)arg1;
- (id)_defaultTitleShadowColorForState:(unsigned long long)arg1;
- (id)_defaultTitleColorForState:(unsigned long long)arg1;
- (_Bool)_wantsAccessibilityButtonShapes;
- (_Bool)_showsAccessibilityBackgroundWhenEnabled;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_prepareToAppearInNavigationItem:(id)arg1 onLeft:(_Bool)arg2;

// Remaining properties
@property(retain, nonatomic) UIColor *tintColor;

@end

@interface UINavigationItem : NSObject <NSCoding>
{
    NSString *_title;
    NSString *_backButtonTitle;
    UIBarButtonItem *_backBarButtonItem;
    NSString *_prompt;
    long long _tag;
    id _context;
    UINavigationBar *_navigationBar;
    UIView *_defaultTitleView;
    UIView *_titleView;
    UIView *_backButtonView;
    NSArray *_leftBarButtonItems;
    NSArray *_rightBarButtonItems;
    NSArray *_customLeftViews;
    NSArray *_customRightViews;
    _Bool _hidesBackButton;
    _Bool _leftItemsSupplementBackButton;
    UIImageView *_frozenTitleView;
    _Bool _barStyleIndependent;
    double _fontScaleAdjustment;
    NSString *_pendingTitle;
    NSArray *_abbreviatedBackButtonTitles;
    long long _independentBarStyle;
    NSArray *_leftItemSpaceList;
    NSArray *_rightItemSpaceList;
    unsigned long long _leftFlexibleSpaceCount;
    unsigned long long _rightFlexibleSpaceCount;
    NSMutableDictionary *_backgroundImages;
    double __titleViewWidthForAnimations;
    double __idealCustomTitleWidth;
    UINavigationBar *__owningNavigationBar;
}

+ (id)defaultFont;
@property(nonatomic, getter=_owningNavigationBar, setter=_setOwningNavigationBar:) UINavigationBar *_owningNavigationBar; // @synthesize _owningNavigationBar=__owningNavigationBar;
@property(nonatomic, setter=_setIdealCustomTitleWidth:) double _idealCustomTitleWidth; // @synthesize _idealCustomTitleWidth=__idealCustomTitleWidth;
@property(nonatomic) double _titleViewWidthForAnimations; // @synthesize _titleViewWidthForAnimations=__titleViewWidthForAnimations;
@property(nonatomic, setter=_setRightFlexibleSpaceCount:) unsigned long long _rightFlexibleSpaceCount; // @synthesize _rightFlexibleSpaceCount;
@property(nonatomic, setter=_setLeftFlexibleSpaceCount:) unsigned long long _leftFlexibleSpaceCount; // @synthesize _leftFlexibleSpaceCount;
@property(copy, nonatomic, setter=_setRightItemSpaceList:) NSArray *_rightItemSpaceList; // @synthesize _rightItemSpaceList;
@property(copy, nonatomic, setter=_setLeftItemSpaceList:) NSArray *_leftItemSpaceList; // @synthesize _leftItemSpaceList;
@property(nonatomic, setter=_setIndependentBarStyle:) long long _independentBarStyle; // @synthesize _independentBarStyle;
@property(nonatomic, getter=_isBarStyleIndependent, setter=_setBarStyleIndependent:) _Bool _barStyleIndependent; // @synthesize _barStyleIndependent;
@property(copy, nonatomic, setter=_setAbbreviatedBackButtonTitles:) NSArray *_abbreviatedBackButtonTitles; // @synthesize _abbreviatedBackButtonTitles;
@property(copy, nonatomic, setter=_setPendingTitle:) NSString *_pendingTitle; // @synthesize _pendingTitle;
@property(nonatomic, setter=_setFontScaleAdjustment:) double _fontScaleAdjustment; // @synthesize _fontScaleAdjustment;
- (id)_independentShadowImage;
- (id)_independentBackgroundImageForBarMetrics:(long long)arg1;
- (void)_setIndependentBackgroundImage:(id)arg1 shadowImage:(id)arg2 forBarMetrics:(long long)arg3;
@property(readonly, nonatomic) NSMutableDictionary *_backgroundImages; // @synthesize _backgroundImages;
@property(nonatomic) _Bool leftItemsSupplementBackButton;
- (id)_automationID;
- (id)_firstNonSpaceRightItem;
- (id)_firstNonSpaceLeftItem;
- (id)_firstNonSpaceItemInList:(id)arg1;
- (void)setCustomRightItem:(id)arg1 animated:(_Bool)arg2;
- (id)customRightItem;
- (void)setCustomRightItem:(id)arg1;
- (void)setCustomLeftItem:(id)arg1 animated:(_Bool)arg2;
- (id)customLeftItem;
- (void)setCustomLeftItem:(id)arg1;
- (id)customTitleView;
- (void)setCustomTitleView:(id)arg1;
- (id)_titleView;
- (id)_defaultTitleView;
- (void)_updateViewsForBarSizeChangeAndApply:(_Bool)arg1;
- (_Bool)_accumulateViewsFromItems:(id)arg1 isLeft:(_Bool)arg2 refreshViews:(_Bool)arg3;
- (void)_setCustomRightViews:(id)arg1;
- (void)_setCustomLeftViews:(id)arg1;
- (void)setLeftBarButtonItems:(id)arg1 animated:(_Bool)arg2;
- (void)setRightBarButtonItems:(id)arg1 animated:(_Bool)arg2;
- (id)_leftBarButtonItems;
- (void)_setLeftBarButtonItems:(id)arg1;
- (id)_rightBarButtonItems;
- (void)_setRightBarButtonItems:(id)arg1;
@property(copy, nonatomic) NSArray *rightBarButtonItems;
@property(copy, nonatomic) NSArray *leftBarButtonItems;
- (void)setCustomRightView:(id)arg1 animated:(_Bool)arg2;
- (void)setCustomRightView:(id)arg1;
- (id)customRightView;
- (void)_setCustomRightView:(id)arg1;
- (id)_customRightView;
- (id)_customRightViewCreating:(_Bool)arg1;
- (id)_customRightViews;
- (id)_customRightViewsCreating:(_Bool)arg1;
- (void)setCustomLeftView:(id)arg1 animated:(_Bool)arg2;
- (void)setCustomLeftView:(id)arg1;
- (id)customLeftView;
- (void)_setCustomLeftView:(id)arg1;
- (void)_setCustomLeftRightView:(id)arg1 left:(_Bool)arg2;
- (id)_customLeftView;
- (id)_customLeftViewCreating:(_Bool)arg1;
- (id)_customLeftViews;
- (id)_customLeftViewsCreating:(_Bool)arg1;
- (void)setRightBarButtonItem:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIBarButtonItem *rightBarButtonItem;
- (void)_setRightBarButtonItem:(id)arg1;
- (id)_rightBarButtonItem;
- (void)setLeftBarButtonItem:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIBarButtonItem *leftBarButtonItem;
- (void)_setLeftBarButtonItem:(id)arg1;
- (id)_leftBarButtonItem;
- (void)setObject:(id)arg1 forLeftRightKeyPath:(id)arg2 animated:(_Bool)arg3;
- (void)_updateBarItemOwnersTo:(id)arg1;
- (void)set_customRightViews:(id)arg1;
- (void)set_customLeftViews:(id)arg1;
- (void)set_leftBarButtonItems:(id)arg1;
- (void)set_rightBarButtonItems:(id)arg1;
- (void)set_customLeftView:(id)arg1;
- (void)set_customRightView:(id)arg1;
- (void)set_rightBarButtonItem:(id)arg1;
- (void)set_leftBarButtonItem:(id)arg1;
- (id)_buttonForBackButtonIndicator;
- (_Bool)_wantsBackButtonIndicator;
- (_Bool)_leftItemsWantBackButton;
- (void)setHidesBackButton:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic) _Bool hidesBackButton;
- (void)updateNavigationBarButtonsAnimated:(_Bool)arg1;
- (void)_updateItemsForLetterpressImagesVisualStateIfNecessary;
@property(copy, nonatomic) NSString *prompt;
@property(retain, nonatomic) UIView *titleView; // @synthesize titleView=_titleView;
- (id)backButtonView;
- (id)existingBackButtonView;
- (void)_replaceCustomLeftRightViewAtIndex:(unsigned long long)arg1 withView:(id)arg2 left:(_Bool)arg3;
- (void)_removeBackButtonView;
- (void)_removeTitleAndButtonViews;
- (void)_removeBarButtonItemViews;
- (id)context;
- (void)setContext:(id)arg1;
- (long long)tag;
- (void)setTag:(long long)arg1;
@property(retain, nonatomic) UIBarButtonItem *backBarButtonItem;
- (id)currentBackButtonTitle;
- (id)backButtonTitle;
@property(copy, nonatomic) NSString *title;
- (void)_setBackButtonTitle:(id)arg1 lineBreakMode:(long long)arg2;
- (void)setBackButtonTitle:(id)arg1;
- (void)_setTitle:(id)arg1 animated:(_Bool)arg2;
- (void)_setTitle:(id)arg1 animated:(_Bool)arg2 matchBarButtonItemAnimationDuration:(_Bool)arg3;
- (void)_addDefaultTitleViewToNavigationBarIfNecessary;
- (void)_setTitleAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_cleanupFrozenTitleView;
- (void)_freezeCurrentTitleView;
- (void)setNavigationBar:(id)arg1;
- (id)navigationBar;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTitle:(id)arg1;
- (id)init;
- (void)_setBackButtonPressed:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UINavigationItemView : UIView
{
    UINavigationItem *_item;
    struct CGSize _titleSize;
    UIView *_topCrossView;
    UIView *_bottomCrossView;
    _Bool _isCrossFading;
    _Bool _customFontSet;
    UILabel *_label;
    _Bool _isFadingInFromCustomAlpha;
}

@property(nonatomic, setter=_setFadingInFromCustomAlpha:) _Bool _isFadingInFromCustomAlpha; // @synthesize _isFadingInFromCustomAlpha;
- (void)_cleanUpCrossView;
- (void)_crossFadeHiddingButton:(_Bool)arg1;
- (void)_prepareCrossViewsForNewSize:(struct CGSize)arg1;
- (id)_scriptingInfo;
- (void)_setLineBreakMode:(long long)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (void)_setFont:(id)arg1;
- (_Bool)titleAutoresizesToFit;
- (void)setTitleAutoresizesToFit:(_Bool)arg1;
- (id)title;
- (struct CGSize)_titleSize;
- (void)_resetTitleSize;
- (void)layoutSubviews;
- (void)_adjustLabelTrackingIfNecessary;
- (void)_updateLabel;
- (struct CGRect)_labelFrame;
- (double)_titleYAdjustmentCustomization;
- (void)_updateLabelContents;
- (void)_updateLabelColor;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)_currentTextShadowOffsetForBarStyle:(long long)arg1;
- (id)_currentTextShadowColorForBarStyle:(long long)arg1;
- (id)_currentTextColorForBarStyle:(long long)arg1;
- (_Bool)_useSilverLookForBarStyle:(long long)arg1;
- (id)_defaultFont;
- (id)navigationItem;
- (void)dealloc;
- (id)initWithNavigationItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UINavigationItemButtonView : UINavigationItemView
{
    long long _style;
    _Bool _pressed;
    _UIBarButtonItemAppearanceStorage *_appearanceStorage;
    _Bool _customBackgroundImageChangedToOrFromNil;
    UIImageView *_backgroundImageView;
    UIImageView *_imageView;
    _Bool _wantsBlendModeForAccessibilityBackgrounds;
    unsigned long long _abbreviatedTitleIndex;
}

@property(nonatomic, setter=_setWantsBlendModeForAccessibilityBackgrounds:) _Bool _wantsBlendModeForAccessibilityBackgrounds; // @synthesize _wantsBlendModeForAccessibilityBackgrounds;
@property(nonatomic, setter=_setAbbreviatedTitleIndex:) unsigned long long _abbreviatedTitleIndex; // @synthesize _abbreviatedTitleIndex;
- (Class)_appearanceGuideClass;
- (void)_applyBarButtonAppearanceStorage:(id)arg1 withTaggedSelectors:(id)arg2;
- (struct UIOffset)_backButtonTitlePositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (double)_backButtonBackgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (id)_backButtonBackgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)_setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_UIAppearance_setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (_Bool)hasCustomBackgroundImage;
- (void)backIndicatorViewHasRespondedToCustomBackgroundImageChange;
- (_Bool)customBackgroundImageChangedToOrFromNil;
- (id)_titleTextAttributesForState:(unsigned long long)arg1;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_UIAppearance_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
@property(retain, nonatomic, setter=_setTintColor:) UIColor *_tintColor;
- (void)_UIAppearance_setTintColor:(id)arg1;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_UIAppearance_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (void)_UIAppearance_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (void)dealloc;
- (id)_defaultFont;
- (id)_scriptingInfo;
- (_Bool)pressed;
- (void)setPressed:(_Bool)arg1 initialPress:(_Bool)arg2;
- (void)setPressed:(_Bool)arg1;
- (void)setStyle:(long long)arg1;
- (void)setStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)_styleAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (struct CGSize)imageSize;
- (id)image;
- (id)title;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)_canDrawContent;
- (void)layoutSubviews;
- (id)backgroundImageView;
- (double)_titleYAdjustmentCustomization;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)_drawBackground_legacy;
- (struct UIEdgeInsets)alignmentRectInsets;
- (id)_currentCustomBackgroundNeedsDarkening:(_Bool *)arg1;
- (struct CGSize)_currentTextShadowOffsetForBarStyle:(long long)arg1;
- (id)_currentTextShadowColorForBarStyle:(long long)arg1;
- (id)_currentTextColorForBarStyle:(long long)arg1;
- (_Bool)_useSilverLookForBarStyle:(long long)arg1;
- (id)_appearanceStorage;
- (void)tintColorDidChange;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)_accessibilityButtonShapesDidChangeNotification:(id)arg1;
- (void)_accessibilityButtonShapesParametersDidChange;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)_suppressesBackIndicatorView;
- (_Bool)_wantsAccessibilityButtonShapes;
- (_Bool)_showsAccessibilityBackgroundWhenEnabled;

@end

@interface UINavigationTransitionView : UIView <NSCoding>
{
    id _delegate;
    UIView *_fromView;
    UIView *_toView;
    long long _transition;
    UIResponder *_firstResponderToRestore;
    UIWindow *_originalWindow;
    double _fromViewAlpha;
    unsigned int _isTransitioning:1;
    unsigned int _popoverWillCleanUpNavigationTransition:1;
    unsigned int _usesRoundedCorners:1;
}

+ (double)defaultDurationForTransition:(long long)arg1;
@property(readonly) UIView *fromView; // @synthesize fromView=_fromView;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool usesRoundedCorners;
- (void)_navigationTransitionDidStop;
- (void)_cleanupTransition;
- (void)_cleanupTransitionFromPopover;
- (void)_notifyDelegateTransitionDidStopWithContext:(id)arg1;
- (_Bool)_isTransitioningFromView:(id)arg1;
@property(readonly) _Bool isTransitioning;
- (_Bool)transition:(long long)arg1 fromView:(id)arg2 toView:(id)arg3;
- (_Bool)transition:(long long)arg1 toView:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic) _Bool popoverWillCleanUpNavigationTransition;

@end

@interface UINib : NSObject
{
    id storage;
}

+ (id)nibWithData:(id)arg1 bundle:(id)arg2;
+ (id)nibWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didReceiveMemoryWarning:(id)arg1;
- (id)instantiateWithOwner:(id)arg1 options:(id)arg2;
- (id)unarchiverForInstantiatingReturningError:(id *)arg1;
- (id)lazyArchiveData;
- (id)nibDataForPath:(id)arg1;
- (id)bundleResourcePath;
- (id)identifierForStringsFile;
- (void)setIdentifierForStringsFile:(id)arg1;
- (id)effectiveBundle;
- (void)setCaptureImplicitLoadingContextOnDecode:(_Bool)arg1;
- (_Bool)captureImplicitLoadingContextOnDecode;
- (void)setCaptureEnclosingNIBBundleOnDecode:(_Bool)arg1;
- (_Bool)captureEnclosingNIBBundleOnDecode;
- (void)setInstantiatingForSimulator:(_Bool)arg1;
- (_Bool)instantiatingForSimulator;
- (void)_registerForMemoryWarningIfNeeded;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithNibName:(id)arg1 directory:(id)arg2 bundle:(id)arg3;
- (id)initWithData:(id)arg1 bundle:(id)arg2;
- (id)initWithBundle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UINibCoderValue : NSObject
{
    NSString *key;
    unsigned int scope;
    BOOL type;
    union {
        float floatValue;
        double doubleValue;
        unsigned long long integerValue;
        void *bytesValue;
    } value;
    unsigned long long length;
}

+ (id)nibValueRepresentingNilReferenceForKey:(id)arg1 scope:(unsigned int)arg2;
+ (id)nibValueForBytes:(const void *)arg1 length:(unsigned long long)arg2 key:(id)arg3 scope:(unsigned int)arg4;
+ (id)nibValueForFloat:(float)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForDouble:(double)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForBoolean:(_Bool)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForInteger:(unsigned long long)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForInt64:(unsigned long long)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForInt32:(unsigned int)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForInt16:(unsigned short)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForInt8:(unsigned char)arg1 key:(id)arg2 scope:(unsigned int)arg3;
+ (id)nibValueForObjectReference:(long long)arg1 key:(id)arg2 scope:(unsigned int)arg3;
- (unsigned long long)byteLength;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UINibDecoder : NSCoder
{
    Class arrayClass;
    Class setClass;
    Class dictionaryClass;
    Class *classes;
    id *missingClasses;
    struct UINibDecoderObjectEntry *objects;
    struct UINibDecoderValue *values;
    char *valueTypes;
    void *valueData;
    unsigned long long valueDataSize;
    struct UINibDecoderHeader header;
    id *objectsByObjectID;
    unsigned int *longObjectClassIDs;
    char *shortObjectClassIDs;
    unsigned int *keyMasks;
    long long inlinedValueKey;
    struct UINibDecoderRecursiveState recursiveState;
    UINibStringIDTable *keyIDTable;
    id delegate;
    struct UIKeyToKeyIDCache keyIDCache;
    struct UIKeyAndScopeToValueCache valueCache;
    long long lookupRounds;
    long long maxPossibleLookupRounds;
    long long failedByKeyMask;
    long long savedByKeyMask;
}

+ (id)unarchiveObjectWithFile:(id)arg1;
+ (id)unarchiveObjectWithData:(id)arg1;
@property id delegate; // @synthesize delegate;
- (void)finishDecoding;
- (long long)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;
- (void *)decodeBytesWithReturnedLength:(unsigned long long *)arg1;
- (void)decodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(void *)arg3;
- (void)decodeValuesOfObjCTypes:(const char *)arg1;
- (id)decodePropertyList;
- (id)decodeObject;
- (id)decodeDataObject;
- (id)decodeNXObject;
- (void)decodeValueOfObjCType:(const char *)arg1 at:(void *)arg2;
- (struct UIEdgeInsets)decodeUIEdgeInsetsForKey:(id)arg1;
- (struct CGAffineTransform)decodeCGAffineTransformForKey:(id)arg1;
- (struct CGRect)decodeCGRectForKey:(id)arg1;
- (struct CGSize)decodeCGSizeForKey:(id)arg1;
- (struct CGPoint)decodeCGPointForKey:(id)arg1;
- (_Bool)decodeArrayOfCGFloats:(double *)arg1 count:(long long)arg2 forKey:(id)arg3;
- (_Bool)decodeArrayOfDoubles:(double *)arg1 count:(long long)arg2 forKey:(id)arg3;
- (_Bool)decodeArrayOfFloats:(float *)arg1 count:(long long)arg2 forKey:(id)arg3;
- (int)decodeInt32ForKey:(id)arg1;
- (int)decodeIntForKey:(id)arg1;
- (long long)decodeIntegerForKey:(id)arg1;
- (long long)decodeInt64ForKey:(id)arg1;
- (double)decodeDoubleForKey:(id)arg1;
- (float)decodeFloatForKey:(id)arg1;
- (_Bool)decodeBoolForKey:(id)arg1;
- (const char *)decodeBytesForKey:(id)arg1 returnedLength:(unsigned long long *)arg2;
- (id)decodeObjectForKey:(id)arg1;
- (_Bool)containsValueForKey:(id)arg1;
- (_Bool)allowsKeyedCoding;
- (void)replaceObject:(id)arg1 withObject:(id)arg2;
- (id)nextGenericKey;
- (_Bool)validateAndIndexKeys:(const void *)arg1 length:(unsigned long long)arg2;
- (_Bool)validateAndIndexValues:(const void *)arg1 length:(unsigned long long)arg2;
- (_Bool)validateAndIndexObjects:(const void *)arg1 length:(unsigned long long)arg2;
- (_Bool)validateAndIndexClasses:(const void *)arg1 length:(unsigned long long)arg2;
- (_Bool)validateAndIndexData:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg1;
- (id)initForReadingWithData:(id)arg1 error:(id *)arg2;

@end

@interface UINibEncoder : NSCoder
{
    struct __CFDictionary *objectsToObjectIDs;
    struct __CFDictionary *objectIDsToObjects;
    struct __CFArray *values;
    struct __CFSet *encodedObjects;
    NSMutableData *data;
    struct __CFDictionary *replacements;
    unsigned int nextObjectID;
    struct {
        unsigned int currentObjectID;
        unsigned int nextAnonymousKey;
    } recursiveState;
    NSMutableSet *objectsUniquedByValue;
    struct __CFSet *objectsReplacedWithNil;
    id delegate;
}

+ (_Bool)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (id)archivedDataWithRootObject:(id)arg1;
@property id delegate; // @synthesize delegate;
- (void)encodeValueOfObjCType:(const char *)arg1 at:(const void *)arg2;
- (void)encodeBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void)encodeArrayOfObjCType:(const char *)arg1 count:(unsigned long long)arg2 at:(const void *)arg3;
- (void)encodeValuesOfObjCTypes:(const char *)arg1;
- (void)encodeConditionalObject:(id)arg1;
- (void)encodeByrefObject:(id)arg1;
- (void)encodeBycopyObject:(id)arg1;
- (void)encodeRootObject:(id)arg1;
- (void)encodeObject:(id)arg1;
- (id)nextGenericKey;
- (void)encodeUIEdgeInsets:(struct UIEdgeInsets)arg1 forKey:(id)arg2;
- (void)encodeCGAffineTransform:(struct CGAffineTransform)arg1 forKey:(id)arg2;
- (void)encodeCGRect:(struct CGRect)arg1 forKey:(id)arg2;
- (void)encodeCGSize:(struct CGSize)arg1 forKey:(id)arg2;
- (void)encodeCGPoint:(struct CGPoint)arg1 forKey:(id)arg2;
- (void)encodeArrayOfCGFloats:(double *)arg1 count:(long long)arg2 forKey:(id)arg3;
- (void)encodeArrayOfFloats:(float *)arg1 count:(long long)arg2 forKey:(id)arg3;
- (void)encodeArrayOfDoubles:(double *)arg1 count:(long long)arg2 forKey:(id)arg3;
- (void)encodeBytes:(const char *)arg1 length:(unsigned long long)arg2 forKey:(id)arg3;
- (void)encodeDouble:(double)arg1 forKey:(id)arg2;
- (void)encodeFloat:(float)arg1 forKey:(id)arg2;
- (void)encodeInteger:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt64:(long long)arg1 forKey:(id)arg2;
- (void)encodeInt32:(int)arg1 forKey:(id)arg2;
- (void)encodeInt:(int)arg1 forKey:(id)arg2;
- (void)encodeBool:(_Bool)arg1 forKey:(id)arg2;
- (void)encodeConditionalObject:(id)arg1 forKey:(id)arg2;
- (void)encodeObject:(id)arg1 forKey:(id)arg2;
- (_Bool)allowsKeyedCoding;
- (long long)versionForClassName:(id)arg1;
- (unsigned int)systemVersion;
- (void)finishEncoding;
- (void)serializeObject:(id)arg1;
- (void)serializeSet:(id)arg1;
- (void)serializeDictionary:(id)arg1;
- (void)serializeArray:(id)arg1;
- (id)replacementObjectForObject:(id)arg1 forKey:(id)arg2;
- (_Bool)shouldUniqueObjectByValue:(id)arg1;
- (_Bool)object:(id)arg1 encodesAsMemberAndWithCoderOfClass:(Class)arg2;
- (_Bool)object:(id)arg1 encodesWithCoderFromClass:(Class)arg2;
- (id)encodedClassNameForObject:(id)arg1;
- (id)encodedClassNameForClass:(Class)arg1;
- (Class)encodedClassForObject:(id)arg1;
- (void)appendValue:(id)arg1;
- (_Bool)previouslyCodedObject:(id)arg1;
- (id)assignObjectIDForObject:(id)arg1;
- (id)objectIDForObject:(id)arg1;
- (void)dealloc;
- (id)initForWritingWithMutableData:(id)arg1;

@end

@interface UINibKeyValuePair : NSObject
{
    id object;
    NSString *keyPath;
    id value;
}

@property(readonly, nonatomic) id value; // @synthesize value;
@property(readonly, nonatomic) NSString *keyPath; // @synthesize keyPath;
@property(readonly, nonatomic) id object; // @synthesize object;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)applyForSimulator;
- (void)apply;
- (void)dealloc;
- (id)initWithObject:(id)arg1 keyPath:(id)arg2 value:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UINibStorage : NSObject
{
    NSString *bundleResourceName;
    NSString *bundleDirectoryName;
    NSBundle *bundle;
    NSString *identifierForStringsFile;
    NSData *archiveData;
    UINibDecoder *nibDecoder;
    _Bool instantiatingForSimulator;
    _Bool captureImplicitLoadingContextOnDecode;
}

@property _Bool captureImplicitLoadingContextOnDecode; // @synthesize captureImplicitLoadingContextOnDecode;
@property(nonatomic) _Bool instantiatingForSimulator; // @synthesize instantiatingForSimulator;
@property(retain, nonatomic) UINibDecoder *nibDecoder; // @synthesize nibDecoder;
@property(copy, nonatomic) NSData *archiveData; // @synthesize archiveData;
@property(copy, nonatomic) NSString *identifierForStringsFile; // @synthesize identifierForStringsFile;
@property(retain, nonatomic) NSBundle *bundle; // @synthesize bundle;
@property(copy, nonatomic) NSString *bundleDirectoryName; // @synthesize bundleDirectoryName;
@property(copy, nonatomic) NSString *bundleResourceName; // @synthesize bundleResourceName;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UINibStringIDTable : NSObject
{
    struct UIStringIDTableBucket **table;
    struct UIStringIDTableBucket *buckets;
    unsigned long long hashMask;
    unsigned long long count;
}

- (long long)count;
- (_Bool)lookupKey:(id)arg1 identifier:(long long *)arg2;
- (void)dealloc;
- (id)initWithKeysTransferingOwnership:(id *)arg1 count:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIOldSliderButton : UIButton
{
}

- (_Bool)cancelTouchTracking;
- (_Bool)cancelMouseTracking;
- (_Bool)shouldTrack;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIOldSliderControl : UIControl
{
    UIImage *_sliderLeftFillCap;
    CDUnion_b710d1cf _sliderLeftFill;
    CDUnion_b710d1cf _sliderRightFill;
    UIImage *_minValueImage;
    UIImage *_maxValueImage;
    int _numberOfTickMarks;
    double _hitOffset;
    UIImage *_sliderRightCap;
    UIImage *_sliderRightFullCap;
    UIImage *_sliderLeftCap;
    struct {
        unsigned int allowsOnlyTickMarks:1;
        unsigned int animating:1;
        unsigned int showValue:1;
        unsigned int layeredFill:1;
        unsigned int continuous:1;
        unsigned int sendActionDuringAnimation:1;
        unsigned int alternateColors:1;
        unsigned int shouldFlipValue:1;
        unsigned int needsNonOpaqueFills:1;
        unsigned int reserved:24;
    } _sliderFlags;
    float _value;
    float _animationEndValue;
    float _minValue;
    float _maxValue;
    UIView *_knob;
    double _lastTrackingTime;
    double _idleTrackingTime;
    struct CGPoint _lastTrackingPoint;
    struct CGPoint _idleTrackingPoint;
}

- (void)setSendActionDuringAnimation:(_Bool)arg1;
- (void)setContinuous:(_Bool)arg1;
- (_Bool)cancelTouchTracking;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)cancelMouseTracking;
- (void)setHighlighted:(_Bool)arg1;
- (float)_validatedValueForPoint:(struct CGPoint)arg1 includeTickMarks:(_Bool)arg2;
- (float)_validatedValue:(float)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setMaxValueImage:(id)arg1;
- (void)setMinValueImage:(id)arg1;
- (void)setShowValue:(_Bool)arg1;
- (void)setAllowsTickMarkValuesOnly:(_Bool)arg1;
- (void)setNumberOfTickMarks:(int)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setMaxValue:(float)arg1;
- (void)setMinValue:(float)arg1;
- (struct CGRect)valueTextBounds;
- (struct CGRect)maxValueImageBounds;
- (struct CGRect)minValueImageBounds;
- (struct CGRect)sliderBounds;
- (float)value;
- (void)setValue:(float)arg1 animated:(_Bool)arg2;
- (void)setValue:(float)arg1 animated:(_Bool)arg2 animationCurve:(int)arg3;
- (_Bool)isAnimatingValueChange;
- (void)_setValue:(float)arg1 andSendAction:(_Bool)arg2;
- (void)setValue:(float)arg1;
- (void)_sendDelayedActions;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (void)drawSliderInRect:(struct CGRect)arg1;
- (void)drawSliderInRect:(struct CGRect)arg1 dirtyRect:(struct CGRect)arg2;
- (void)_sliderBounds:(struct CGRect)arg1 getLeftCapRect:(struct CGRect *)arg2 rightCapRect:(struct CGRect *)arg3 left:(struct CGRect *)arg4 right:(struct CGRect *)arg5;
- (void)drawSliderPiece:(int)arg1 inRect:(struct CGRect)arg2;
- (id)imageForSliderPiece:(int)arg1;
- (void)dealloc;
- (void)refreshImages;
- (void)sliderBoundsChanged;
- (struct CGRect)fillBounds;
- (void)_resetFillFrames;
- (id)createSliderKnobView;
- (id)initWithFrame:(struct CGRect)arg1 layeredFill:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)_scriptingInfo;

@end

__attribute__((visibility("hidden")))
@interface UIOldSliderFillView : UIView
{
    UIImage *_sliderImage;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 image:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIOnePartImageView : UIView
{
    struct CGRect _fromRect;
    UIImage *_image;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setFromRect:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (void)dealloc;

@end

@interface UIOpenURLAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, copy, nonatomic) NSURL *url;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithURL:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPadAppearanceContainer : UIDeviceAppearanceContainer
{
}

@end

@interface UIPageControl : UIControl
{
    NSMutableArray *_indicators;
    long long _currentPage;
    long long _displayedPage;
    struct {
        unsigned int hideForSinglePage:1;
        unsigned int defersCurrentPageDisplay:1;
    } _pageControlFlags;
    UIImage *_currentPageImage;
    UIImage *_pageImage;
    long long _lastUserInterfaceIdiom;
    UIColor *_currentPageIndicatorTintColor;
    UIColor *_pageIndicatorTintColor;
    _UILegibilitySettings *_legibilitySettings;
}

@property(nonatomic, getter=_legibilitySettings, setter=_setLegibilitySettings:) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(retain, nonatomic) UIColor *pageIndicatorTintColor; // @synthesize pageIndicatorTintColor=_pageIndicatorTintColor;
@property(retain, nonatomic) UIColor *currentPageIndicatorTintColor; // @synthesize currentPageIndicatorTintColor=_currentPageIndicatorTintColor;
- (id)_createModernIndicatorImageFromView:(id)arg1;
- (id)_modernIndicatorImageEnabled:(_Bool)arg1;
- (void)_drawModernIndicatorInView:(id)arg1 enabled:(_Bool)arg2;
- (_Bool)_shouldDrawLegibly;
@property(nonatomic, getter=_legibilityStyle, setter=_setLegibilityStyle:) long long legibilityStyle;
- (id)_modernColorEnabled:(_Bool)arg1;
- (double)_modernCornerRadius;
- (struct CGRect)_modernBounds;
- (void)_modernTransitionIndicator:(id)arg1 toEnabled:(_Bool)arg2 index:(long long)arg3 legible:(_Bool)arg4;
- (id)_indicatorViewEnabled:(_Bool)arg1 index:(long long)arg2;
- (id)_indicatorViewEnabled:(_Bool)arg1 index:(long long)arg2 legible:(_Bool)arg3;
- (void)_transitionIndicator:(id)arg1 toEnabled:(_Bool)arg2 index:(long long)arg3;
- (void)_transitionIndicator:(id)arg1 toEnabled:(_Bool)arg2 index:(long long)arg3 legible:(_Bool)arg4;
- (double)_indicatorSpacing;
- (struct CGRect)_indicatorFrameAtIndex:(long long)arg1;
- (id)_correctIdiomaticNameForImageNamed:(id)arg1;
- (id)_activePageIndicatorImage;
- (id)_pageIndicatorImage;
- (void)_updateCurrentPageDisplay;
- (void)_setCurrentPage:(long long)arg1;
- (long long)_displayedPage;
- (void)_setDisplayedPage:(long long)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (struct CGSize)sizeForNumberOfPages:(long long)arg1;
- (void)updateCurrentPageDisplay;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(nonatomic) _Bool defersCurrentPageDisplay; // @dynamic defersCurrentPageDisplay;
@property(nonatomic) _Bool hidesForSinglePage; // @dynamic hidesForSinglePage;
@property(nonatomic) long long currentPage; // @dynamic currentPage;
@property(nonatomic) long long numberOfPages; // @dynamic numberOfPages;
- (void)_invalidateIndicators;
- (id)_pageIndicatorCurrentImageForPage:(long long)arg1;
- (id)_pageIndicatorImageForPage:(long long)arg1;
- (id)_customPageIndicatorCurrentImageForPage:(long long)arg1;
- (id)_customPageIndicatorImageForPage:(long long)arg1;
- (_Bool)_hasCustomImageForPage:(long long)arg1 enabled:(_Bool)arg2;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPageControlInit;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;

@end

@interface UIPageController : UIViewController
{
    NSMutableArray *_viewControllers;
    UIView *_wrapperViews[3];
    int _notificationState[3];
    UIScrollView *_scrollView;
    UIPageControl *_pageControl;
    id <UIPageControllerDelegate> _delegate;
    int _pageSpacing;
    long long _visibleIndex;
    long long _pageCount;
    struct {
        unsigned int delegateViewControllerAtIndex:1;
        unsigned int delegateWillBeginPaging:1;
        unsigned int delegateDidEndPaging:1;
        unsigned int displaysPageControl:1;
        unsigned int wraps:1;
    } _pageControllerFlags;
}

@property(nonatomic) id <UIPageControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1;
- (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (_Bool)_shouldUseOnePartRotation;
- (id)rotatingFooterView;
- (id)rotatingHeaderView;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)_doesVisibleViewControllerSupportInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (long long)indexOfViewController:(id)arg1;
@property(nonatomic) _Bool displaysPageControl;
- (void)_createPageControl;
- (void)_pageChanged:(id)arg1;
@property(nonatomic) _Bool wraps;
@property(nonatomic) long long pageCount;
@property(nonatomic) long long visibleIndex;
- (void)setVisibleIndex:(long long)arg1 animated:(_Bool)arg2;
- (struct CGRect)_scrollViewFrame;
- (void)_scrollViewDidScroll:(id)arg1 forceUpdate:(_Bool)arg2;
- (void)_scrollView:(id)arg1 boundsDidChangeToSize:(struct CGSize)arg2;
- (void)_adjustScrollViewContentInsets;
- (void)_scrollViewDidEndPaging;
- (void)_scrollViewWillBeginPaging;
- (void)_notifyNextViewController:(int)arg1 animated:(_Bool)arg2;
- (void)_notifyVisibleViewController:(int)arg1 animated:(_Bool)arg2;
- (void)_notifyPreviousViewController:(int)arg1 animated:(_Bool)arg2;
- (int)_nextViewControllerNotificationState;
- (int)_visibleViewControllerNotificationState;
- (int)_previousViewControllerNotificationState;
- (void)_setNextViewControllerNotificationState:(int)arg1;
- (void)_setVisibleViewControllerNotificationState:(int)arg1;
- (void)_setPreviousViewControllerNotificationState:(int)arg1;
- (void)_notifyViewController:(id)arg1 ofState:(int)arg2 previousState:(int)arg3 animated:(_Bool)arg4;
@property(readonly, retain, nonatomic) UIViewController *visibleViewController;
- (_Bool)_hasNextViewController;
- (_Bool)_hasVisibleViewController;
- (_Bool)_hasPreviousViewController;
- (id)_nextViewController;
- (id)_visibleViewController;
- (id)_previousViewController;
- (id)_loadNextViewController;
- (id)_loadVisibleViewControllerAndNotify:(_Bool)arg1;
- (id)_loadPreviousViewController;
- (_Bool)_needToLoadNext;
- (_Bool)_needToLoadVisible;
- (_Bool)_needToLoadPrevious;
- (void)_setNextViewController:(id)arg1;
- (void)_setVisibleViewController:(id)arg1;
- (void)_setPreviousViewController:(id)arg1;
- (void)_replaceViewControllerAtIndex:(long long)arg1 withViewController:(id)arg2;
- (_Bool)_isViewControllerBeingUnloaded:(id)arg1 atIndex:(long long)arg2;
- (id)_scrollView;
@property(nonatomic) double pageSpacing;
- (void)viewDidUnload;
- (void)loadView;
- (void)dealloc;
- (id)_pageControllerScrollView;
- (void)reloadViewControllerAtIndex:(long long)arg1;
- (void)setVisibleIndex:(long long)arg1 preservingLoadedViewControllers:(_Bool)arg2 animated:(_Bool)arg3;

@end

@interface UIPageControllerScrollView : UIScrollView
{
    UIPageController *_pageController;
}

@property(nonatomic) UIPageController *pageController; // @synthesize pageController=_pageController;
- (unsigned long long)_abuttedPagingEdges;
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;
- (void)_scrollViewDidEndDecelerating;
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;
- (void)_scrollViewWillBeginDragging;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;

@end

@interface UIPageViewController : UIViewController <UIGestureRecognizerDelegate, _UIQueuingScrollViewDelegate, _UIQueuingScrollViewDataSource>
{
    id <UIPageViewControllerDelegate> _delegate;
    id <UIPageViewControllerDataSource> _dataSource;
    long long _transitionStyle;
    long long _navigationOrientation;
    long long _spineLocation;
    _Bool _doubleSided;
    _Bool _pageControlRequiresValidation;
    NSArray *_viewControllers;
    _UIPageCurl *_pageCurl;
    UIPanGestureRecognizer *_panGestureRecognizer;
    UITapGestureRecognizer *_tapGestureRecognizer;
    _Bool _stashingViewControllersForRotation;
    NSArray *_viewControllersStashedForRotation;
    _Bool _interfaceRotating;
    NSMutableArray *_rotationSnapshotViews;
    long long _spineLocationPriorToInterfaceRotation;
    struct UIEdgeInsets _tapRegionInsets;
    struct CGSize _tapRegionBreadths;
    struct UIEdgeInsets _effectiveTapRegionInsets;
    struct CGSize _effectiveTapRegionBreadths;
    struct CGRect *_tapRegions;
    double _pageSpacing;
    NSMutableDictionary *_cachedViewControllersForCurl;
    NSMutableArray *_cachedViewControllersForScroll;
    NSDictionary *_incomingAndOutgoingViewControllersForManualTransition;
    long long _lastKnownNavigationDirection;
    long long _disableAutorotationCount;
    struct {
        unsigned int delegateWantsTransitionWillBegin:1;
        unsigned int delegateWantsTransitionCompleted:1;
        unsigned int delegateWantsTransitionsFinished:1;
        unsigned int delegateCustomizesSpineLocationForInterfaceOrientation:1;
        unsigned int delegateSupportedInterfaceOrientations:1;
        unsigned int delegatePreferredInterfaceOrientationForPresentation:1;
        unsigned int dataSourceSuppliesBeforeViewController:1;
        unsigned int dataSourceSuppliesAfterViewController:1;
        unsigned int dataSourceSuppliesPageCount:1;
        unsigned int dataSourceSuppliesPageNumber:1;
    } _delegateFlags;
}

+ (id)_incomingViewControllerKeys;
+ (id)_outgoingViewControllerKeys;
+ (id)stringForSpineLocation:(long long)arg1;
+ (_Bool)doesOverrideSupportedInterfaceOrientations;
+ (_Bool)doesOverridePreferredInterfaceOrientationForPresentation;
+ (_Bool)_isSpineLocation:(long long)arg1 supportedForTransitionStyle:(long long)arg2;
+ (_Bool)_isNavigationOrientation:(long long)arg1 supportedForTransitionStyle:(long long)arg2;
+ (_Bool)_isSupportedTransitionStyle:(long long)arg1;
@property(readonly, nonatomic, getter=_isInterfaceRotating) _Bool _interfaceRotating; // @synthesize _interfaceRotating;
@property(retain, nonatomic, setter=_setViewControllersStashedForRotation:) NSArray *_viewControllersStashedForRotation; // @synthesize _viewControllersStashedForRotation;
@property(retain, nonatomic, setter=_setViewControllers:) NSArray *_viewControllers; // @synthesize _viewControllers;
- (void)_pageControlValueChanged:(id)arg1;
- (_Bool)queuingScrollViewShouldLayoutSubviews:(id)arg1;
- (void)queuingScrollView:(id)arg1 didFlushView:(id)arg2 animated:(_Bool)arg3;
- (void)_flushViewController:(id)arg1 animated:(_Bool)arg2;
- (id)queuingScrollView:(id)arg1 viewAfterView:(id)arg2;
- (id)queuingScrollView:(id)arg1 viewBeforeView:(id)arg2;
- (id)_queuingScrollView:(id)arg1 viewBefore:(_Bool)arg2 view:(id)arg3;
- (void)queuingScrollViewDidFinishScrolling:(id)arg1;
- (void)queuingScrollView:(id)arg1 didBailoutOfScrollAndRevealedView:(id)arg2;
- (void)queuingScrollView:(id)arg1 didEndManualScroll:(_Bool)arg2 toRevealView:(id)arg3 direction:(long long)arg4 animated:(_Bool)arg5 didFinish:(_Bool)arg6 didComplete:(_Bool)arg7;
- (void)queuingScrollView:(id)arg1 didCommitManualScroll:(_Bool)arg2 toRevealView:(id)arg3 concealView:(id)arg4 direction:(long long)arg5 animated:(_Bool)arg6 canComplete:(_Bool)arg7;
- (void)queuingScrollView:(id)arg1 willManuallyScroll:(_Bool)arg2 toRevealView:(id)arg3 concealView:(id)arg4 animated:(_Bool)arg5;
- (void)_updatePageControlViaDataSourceIfNecessary;
- (void)_handleTapGesture:(id)arg1;
- (void)_handlePanGesture:(id)arg1;
- (_Bool)_shouldCompleteManualCurlWithSuggestedVelocity:(double *)arg1;
- (long long)_navigationEndDirectionInResponseToPanGestureRecognizer:(id)arg1 suggestedVelocity:(double *)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)_shouldBeginNavigationInDirection:(long long *)arg1 inResponseToPanGestureRecognizer:(id)arg2;
- (_Bool)_shouldNavigateInDirection:(long long *)arg1 inResponseToVelocity:(double *)arg2 ofGestureRecognizedByPanGestureRecognizer:(id)arg3;
- (_Bool)_shouldNavigateInDirection:(long long *)arg1 inResponseToTapGestureRecognizer:(id)arg2;
- (struct CGRect *)_tapRegions;
- (id)_incomingViewControllersForGestureDrivenCurlInDirection:(long long)arg1;
- (void)setViewControllers:(id)arg1 direction:(long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_setViewControllers:(id)arg1 withScrollInDirection:(long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_cacheViewControllerForScroll:(id)arg1;
- (void)_setViewControllers:(id)arg1 withCurlOfType:(long long)arg2 fromLocation:(struct CGPoint)arg3 direction:(long long)arg4 animated:(_Bool)arg5 notifyDelegate:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;
- (void)_endDisablingInterfaceAutorotation;
- (void)_beginDisablingInterfaceAutorotation;
- (void)_invalidateViewControllersStashedForCurlFromDataSource;
- (void)_populateIncomingViewControllersInMap:(id)arg1 withViewControllers:(id)arg2 forCurlInDirection:(long long)arg3;
- (void)_populateOutgoingViewControllersInMap:(id)arg1;
- (id)_viewControllersForCurlWithViewControllers:(id)arg1 direction:(long long)arg2;
- (id)_viewControllerAfterViewController:(id)arg1;
- (id)_viewControllerBeforeViewController:(id)arg1;
- (id)_viewControllerBefore:(_Bool)arg1 viewController:(id)arg2;
- (_Bool)_canHandleGestures;
- (id)_validatedViewControllersForTransitionWithViewControllers:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_isCurrentViewControllerStateValid;
- (void)_contentViewFrameOrBoundsDidChange;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (long long)_requestSpineLocationForInterfaceOrientationAndUpdateStashedViewControllers:(long long)arg1;
- (void)_invalidatePageCurl;
- (id)_viewControllersForPendingSpineLocation:(long long)arg1;
- (id)_validatedViewControllersForPresentationOfViewControllers:(id)arg1 validRange:(struct _NSRange)arg2;
- (struct _NSRange)_validRangeForPresentationOfViewControllersWithSpineLocation:(long long)arg1;
- (_Bool)_shouldSynthesizeSupportedOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_sendChildViewWill:(_Bool)arg1 appear:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_child:(id)arg1 didRotateFromInterfaceOrientation:(long long)arg2;
- (void)_child:(id)arg1 willAnimateRotationToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)_child:(id)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)_child:(id)arg1 endAppearanceTransitionIfPossible:(_Bool)arg2;
- (_Bool)_childCanEndAppearanceTransition:(id)arg1;
- (void)_childEndAppearanceTransition:(id)arg1;
- (void)_child:(id)arg1 beginAppearanceTransitionIfPossible:(_Bool)arg2 animated:(_Bool)arg3;
- (_Bool)_child:(id)arg1 canBeginAppearanceTransition:(_Bool)arg2;
- (void)_child:(id)arg1 beginAppearanceTransition:(_Bool)arg2 animated:(_Bool)arg3;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)viewWillUnload;
- (void)loadView;
@property(nonatomic, setter=_setPageSpacing:) double _pageSpacing;
- (struct CGSize)_contentSizeForSize:(struct CGSize)arg1;
- (id)_pageControl;
@property(readonly, nonatomic, getter=_isPageControlVisible) _Bool _pageControlVisible;
@property(readonly, nonatomic) _UIQueuingScrollView *_scrollView;
@property(readonly, nonatomic) _UIPageViewControllerContentView *_contentView;
- (void)_setDisabledScrollingRegion:(struct CGRect)arg1;
- (struct CGRect)_disabledScrollingRegion;
- (void)_setTapRegionBreadths:(struct CGSize)arg1;
- (struct CGSize)_tapRegionBreadths;
- (struct CGSize)_effectiveTapRegionBreadths;
- (void)_setTapRegionInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)_tapRegionInsets;
- (struct UIEdgeInsets)_effectiveTapRegionInsets;
- (void)_invalidateEffectiveTapRegions;
@property(readonly, nonatomic) NSArray *viewControllers;
@property(readonly, nonatomic) NSArray *gestureRecognizers;
@property(nonatomic, getter=isDoubleSided) _Bool doubleSided;
@property(readonly, nonatomic) long long spineLocation;
- (void)_setSpineLocation:(long long)arg1;
@property(readonly, nonatomic) long long navigationOrientation;
@property(readonly, nonatomic) long long _navigationOrientation;
@property(readonly, nonatomic) long long transitionStyle;
@property(readonly, nonatomic) long long _transitionStyle;
@property(nonatomic) id <UIPageViewControllerDataSource> dataSource;
@property(nonatomic) id <UIPageViewControllerDelegate> delegate;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_shouldPersistViewWhenCoding;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithTransitionStyle:(long long)arg1 navigationOrientation:(long long)arg2 options:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPanGestureRecognizer : UIGestureRecognizer
{
    struct CGPoint _firstSceneReferenceLocation;
    struct CGPoint _lastSceneReferenceLocation;
    double _lastTouchTime;
    id _velocitySample;
    id _previousVelocitySample;
    NSMutableArray *_touches;
    unsigned long long _lastTouchCount;
    unsigned long long _minimumNumberOfTouches;
    unsigned long long _maximumNumberOfTouches;
    double _hysteresis;
    struct CGPoint _lastUnadjustedSceneReferenceLocation;
    unsigned int _failsPastMaxTouches:1;
    unsigned int _canPanHorizontally:1;
    unsigned int _canPanVertically:1;
    unsigned int _ignoresStationaryTouches:1;
    NSMutableArray *_movingTouches;
}

+ (void)_setPanGestureRecognizersEnabled:(_Bool)arg1;
@property(readonly, getter=_previousVelocitySample) UIPanGestureVelocitySample *_previousVelocitySample; // @synthesize _previousVelocitySample;
@property(readonly, getter=_velocitySample) UIPanGestureVelocitySample *_velocitySample; // @synthesize _velocitySample;
@property(nonatomic) unsigned long long maximumNumberOfTouches; // @synthesize maximumNumberOfTouches=_maximumNumberOfTouches;
@property(nonatomic) unsigned long long minimumNumberOfTouches; // @synthesize minimumNumberOfTouches=_minimumNumberOfTouches;
- (struct CGPoint)locationOfTouch:(unsigned long long)arg1 inView:(id)arg2;
- (unsigned long long)numberOfTouches;
- (struct CGPoint)locationInView:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)_handleEndedTouches:(id)arg1 withFinalStateAdjustments:(CDUnknownBlockType)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)_processTouchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_updateMovingTouchesArraySavingOldArray:(id *)arg1;
- (void)_willBeginAfterSatisfyingFailureRequirements;
- (void)_removeHysteresisFromTranslation;
- (_Bool)_shouldTryToBeginWithEvent:(id)arg1;
- (_Bool)_willScrollY;
- (_Bool)_willScrollX;
- (void)_centroidMovedTo:(struct CGPoint)arg1 atTime:(double)arg2;
- (struct CGPoint)_adjustSceneReferenceLocation:(struct CGPoint)arg1;
- (struct CGPoint)_shiftPanLocationToNewSceneReferenceLocation:(struct CGPoint)arg1 lockingToAxis:(int)arg2;
- (struct UIOffset)_offsetInViewFromSceneReferenceLocation:(struct CGPoint)arg1 toSceneReferenceLocation:(struct CGPoint)arg2;
- (void)_touchesListChangedFrom:(id)arg1 to:(id)arg2;
- (struct CGPoint)velocityInView:(id)arg1;
- (struct CGPoint)_convertVelocitySample:(id)arg1 fromSceneReferenceCoordinatesToView:(id)arg2;
- (void)setTranslation:(struct CGPoint)arg1 inView:(id)arg2;
- (struct CGPoint)translationInView:(id)arg1;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 fromSceneReferenceCoordinatesToView:(id)arg2;
- (struct CGPoint)_convertPoint:(struct CGPoint)arg1 toSceneReferenceCoordinatesFromView:(id)arg2;
- (void)_setCanPanVertically:(_Bool)arg1;
- (void)_setCanPanHorizontally:(_Bool)arg1;
- (_Bool)_canPanVertically;
- (_Bool)_canPanHorizontally;
- (_Bool)_ignoresStationaryTouches;
- (void)_setIgnoresStationaryTouches:(_Bool)arg1;
- (double)_hysteresis;
- (void)_setHysteresis:(double)arg1;
- (long long)_lastTouchCount;
- (_Bool)failsPastMaxTouches;
- (void)setFailsPastMaxTouches:(_Bool)arg1;
- (void)_resetGestureRecognizer;
- (void)_resetVelocitySamples;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIPanGestureVelocitySample : NSObject
{
    struct CGPoint start;
    struct CGPoint end;
    double dt;
}

@property double dt; // @synthesize dt;
@property struct CGPoint end; // @synthesize end;
@property struct CGPoint start; // @synthesize start;

@end

@interface UIPasscodeField : UIView <UITextFieldDelegate>
{
    NSMutableString *_value;
    NSMutableArray *_entryFields;
    NSMutableArray *_entryBackgrounds;
    UIButton *_okButton;
    _Bool _opaqueBackground;
    _Bool _centerHorizontally;
    long long _keyboardType;
    long long _keyboardAppearance;
    int _emptyContentReturnKeyType;
    id _delegate;
}

+ (Class)textFieldClass;
+ (double)defaultHeight;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)okButtonClicked:(id)arg1;
- (void)textFieldDidResignFirstResponder:(id)arg1;
- (_Bool)textFieldShouldStartEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldInsertText:(id)arg2 replacingRange:(struct _NSRange)arg3;
- (void)_textDidChange;
- (void)setDelegate:(id)arg1;
- (_Bool)isFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)setNumberOfEntryFields:(int)arg1;
- (void)setNumberOfEntryFields:(int)arg1 opaqueBackground:(_Bool)arg2;
- (int)numberOfEntryFields;
- (void)deleteLastCharacter;
- (void)appendString:(id)arg1;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)setTextCentersHorizontally:(_Bool)arg1;
- (void)setShowsOKButton:(_Bool)arg1;
- (_Bool)showsOKButton;
- (void)_updateFields;
- (void)dealloc;
- (void)setKeyboardType:(long long)arg1 appearance:(long long)arg2 emptyContentReturnKeyType:(int)arg3;
- (void)setKeyboardType:(long long)arg1 appearance:(long long)arg2;
- (void)setKeyboardType:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPasteboard : NSObject
{
    NSString *_name;
}

+ (void)removePasteboardWithName:(id)arg1;
+ (id)pasteboardWithUniqueName;
+ (id)pasteboardWithName:(id)arg1 create:(_Bool)arg2;
+ (id)generalPasteboard;
+ (id)_printPasteboard;
+ (id)_findPasteboard;
@property(copy, nonatomic) NSArray *items;
@property(readonly, nonatomic) long long numberOfItems;
@property(readonly, nonatomic) long long changeCount;
@property(nonatomic, getter=isPersistent) _Bool persistent;
- (void)_addItems:(id)arg1 oldPasteboardTypes:(id)arg2;
- (void)addItems:(id)arg1;
- (id)dataForPasteboardType:(id)arg1 inItemSet:(id)arg2;
- (id)valuesForPasteboardType:(id)arg1 inItemSet:(id)arg2;
- (id)itemSetWithPasteboardTypes:(id)arg1;
- (_Bool)containsPasteboardTypes:(id)arg1 inItemSet:(id)arg2;
- (id)pasteboardTypesForItemSet:(id)arg1;
- (void)setData:(id)arg1 forPasteboardType:(id)arg2;
- (void)setValue:(id)arg1 forPasteboardType:(id)arg2;
- (id)valueForPasteboardType:(id)arg1;
- (id)dataForPasteboardType:(id)arg1;
- (_Bool)containsPasteboardTypes:(id)arg1;
- (id)pasteboardTypes;
@property(readonly, nonatomic) NSString *name;
- (void)dealloc;
- (id)init;
@property(copy, nonatomic) NSArray *colors;
@property(copy, nonatomic) UIColor *color;
@property(copy, nonatomic) NSArray *images;
@property(copy, nonatomic) UIImage *image;
@property(copy, nonatomic) NSArray *URLs;
@property(copy, nonatomic) NSURL *URL;
@property(copy, nonatomic) NSArray *strings;
@property(copy, nonatomic) NSString *string;
- (void)_pasteboardChanged:(id)arg1;
- (id)_initWithName:(id)arg1 system:(_Bool)arg2 create:(_Bool)arg3;

@end

@interface UIPercentDrivenInteractiveTransition : NSObject <UIViewControllerInteractiveTransitioning>
{
    double _duration;
    _Bool _didCommitAnimations;
    _Bool __transitionInterrupted;
    double _completionSpeed;
    long long _completionCurve;
    NSString *__originalFillMode;
    NSUUID *__uuid;
}

@property(nonatomic, getter=_isTransitionInterrupted, setter=_setTransitionInterrupted:) _Bool _transitionInterrupted; // @synthesize _transitionInterrupted=__transitionInterrupted;
@property(retain, nonatomic, setter=_setUuid:) NSUUID *_uuid; // @synthesize _uuid=__uuid;
@property(retain, nonatomic, setter=_setOriginalFillMode:) NSString *_originalFillMode; // @synthesize _originalFillMode=__originalFillMode;
@property(nonatomic) long long completionCurve; // @synthesize completionCurve=_completionCurve;
@property(nonatomic) double completionSpeed; // @synthesize completionSpeed=_completionSpeed;
- (void)finishInteractiveTransition;
- (void)cancelInteractiveTransition;
- (void)updateInteractiveTransition:(double)arg1;
- (void)startInteractiveTransition:(id)arg1 containerViews:(id)arg2 animation:(CDUnknownBlockType)arg3;
- (void)startInteractiveTransition:(id)arg1;
- (void)_stopInteractiveTransition;
- (void)_stopInteractiveTransition:(id)arg1;
- (void)_updateInteractiveTransition:(id)arg1 percent:(double)arg2 isFinished:(_Bool)arg3 didComplete:(_Bool)arg4;
- (void)_setDuration:(double)arg1;
@property(readonly) double duration;
@property(readonly) double percentComplete;
- (void)_resetInteractionController;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPeripheralHost : NSObject <UIScrollViewIntersectionDelegate, UIKeyboardKeyplaneTransitionDelegate, UIGestureRecognizerDelegate>
{
    UIPeripheralHostView *_hostView;
    UIKeyboardAutomatic *_automaticKeyboard;
    _Bool _automaticAppearanceEnabled;
    _Bool _automaticAppearanceEnabledInternal;
    _Bool _automaticKeyboardAnimatingIn;
    _Bool _automaticKeyboardAnimatingOut;
    int _automaticKeyboardState;
    int _ignoringReloadInputViews;
    _Bool _suppresingNotifications;
    _Bool _useHideNotificationsWhenNotVisible;
    _Bool _reloadInputViewsForcedIsAllowed;
    int _nextAutomaticOrderInDirection;
    long long _targetRotatedOrientation;
    _Bool _isTranslating;
    _Bool _isSplitting;
    _Bool _isUndocked;
    _Bool _splitLockState;
    UIPanGestureRecognizer *_translateRecognizer;
    CADisplayLink *_displayLink;
    double _lastBounceTime;
    double _lastTranslationNotificationTime;
    struct CGAffineTransform _targetTransform;
    struct CGAffineTransform _initialTransform;
    struct CGPoint _velocity;
    NSMutableArray *_dropShadowViews;
    int _shadowStyle;
    _Bool _wasBackgroundSplit;
    struct CGRect _previousShadowFrameLeft;
    struct CGRect _previousShadowFrameRight;
    CDUnknownBlockType _bounceCompletionBlock;
    double m_keyboardAttachedViewHeight;
    struct CGRect _lastKnownIVFrame;
    struct CGRect _lastKnownIAVFrame;
    NSMutableArray *_animationStyleStack;
    _Bool _hasCustomAnimationProperties;
    double _nextAutomaticOrderInDuration;
    double _lastAutomaticKeyboardDuration;
    long long _disableAnimationsCount;
    NSMutableArray *_targetStateStack;
    UIInputViewSet *_inputViewSet;
    UIResponder *_responder;
    _Bool _ignoreInputModeChanges;
    NSMutableSet *_pinningResponders;
    _Bool _ignoresPinning;
    UIInputViewPostPinningReloadState *_postPinningReloadState;
    _Bool _animationFencingEnabled;
    _Bool _interfaceAutorotationDisabled;
    UIKeyboardRotationState *_rotationState;
    UIInputViewTransition *_currentTransition;
    UIScrollView *_scrollViewForTransition;
    _Bool _scrollViewShowsHorizontalScrollIndicator;
    UIInputViewTransition *_scrollViewTransition;
    _Bool _scrollViewTransitionFinishing;
    struct CGPoint _scrollViewTransitionPreviousPoint;
    struct CGPoint _scrollViewTransitionVelocity;
    UIResponder *_selfHostingTrigger;
    NSMutableDictionary *_preservedViewSets;
    _Bool _didFadeInputViews;
    _Bool _blockedReloadInputViewsForDictation;
    _Bool _animateCornerRefresh;
    _Bool _showCorners;
    NSMutableArray *_extraViews;
    int _clippingKeyboardMode;
    struct CGRect _clippingKeyboardAdjustmentStart;
    struct CGRect _clippingKeyboardAdjustmentEnd;
    double _ambiguousControlCenterActivationMargin;
    NSMutableDictionary *_preservedAccessoryViewNextResponderSets;
    UIResponder *_responderWithoutAutomaticAppearanceEnabled;
    UITextEffectsWindow *_containerWindow;
    _Bool _springBoardLockStateIsLocked;
    int _hostedAnimationToggleCount;
    UIInputViewSet *_transientInputViewSet;
}

+ (void)_releaseSharedInstance;
+ (id)activeInstance;
+ (id)sharedInstance;
+ (struct CGRect)screenBoundsInAppOrientation;
+ (id)passthroughViews;
+ (double)gridViewRubberBandValueForValue:(double)arg1 target:(double)arg2 timeInterval:(double)arg3 velocity:(double *)arg4;
+ (struct CGRect)visiblePeripheralFrame;
+ (Class)hostViewClass;
@property(retain, nonatomic) UIInputViewPostPinningReloadState *postPinningReloadState; // @synthesize postPinningReloadState=_postPinningReloadState;
@property(retain, nonatomic) UIResponder *selfHostingTrigger; // @synthesize selfHostingTrigger=_selfHostingTrigger;
@property(nonatomic) UIInputViewSet *_transientInputViews; // @synthesize _transientInputViews=_transientInputViewSet;
@property(retain, nonatomic) UIInputViewSet *_inputViews; // @synthesize _inputViews=_inputViewSet;
@property(nonatomic) _Bool animationFencingEnabled; // @synthesize animationFencingEnabled=_animationFencingEnabled;
@property(retain, nonatomic) UIInputViewTransition *currentTransition; // @synthesize currentTransition=_currentTransition;
@property(retain, nonatomic) UIResponder *responder; // @synthesize responder=_responder;
@property(retain, nonatomic) UIKeyboardRotationState *rotationState; // @synthesize rotationState=_rotationState;
@property(nonatomic) _Bool automaticAppearanceEnabled; // @synthesize automaticAppearanceEnabled=_automaticAppearanceEnabled;
- (void)transitionDidFinish:(_Bool)arg1;
- (void)updateProgress:(double)arg1 startHeight:(double)arg2 endHeight:(double)arg3;
- (void)setAccessoryViewVisible:(_Bool)arg1 delay:(double)arg2;
- (id)nextAnimationStyle:(_Bool)arg1;
- (id)nextAnimationStyle;
- (void)orderOutWithAnimation:(_Bool)arg1 toDirection:(int)arg2 duration:(double)arg3;
- (void)orderOutWithAnimationStyle:(id)arg1;
- (void)orderInWithAnimationStyle:(id)arg1;
- (void)orderOutAutomaticToDirection:(int)arg1 withDuration:(double)arg2;
- (void)orderOutAutomaticSkippingAnimation;
- (void)orderOutAutomatic;
- (void)orderInAutomaticFromDirection:(int)arg1 withDuration:(double)arg2;
- (void)orderInAutomaticSkippingAnimation;
- (void)orderInAutomatic;
- (void)forceOrderOutAutomaticToDirection:(int)arg1 withDuration:(double)arg2;
- (void)forceOrderInAutomaticFromDirection:(int)arg1 withDuration:(double)arg2;
- (void)forceOrderOutAutomaticAnimated:(_Bool)arg1;
- (void)forceOrderInAutomaticAnimated:(_Bool)arg1;
- (void)forceOrderOutAutomatic;
- (void)forceOrderInAutomatic;
- (void)layoutIfNeeded;
- (void)layoutInputViews;
- (void)layoutInputViewsForGeometry:(struct UIPeripheralAnimationGeometry)arg1;
@property(readonly, nonatomic) UIKeyboardAutomatic *automaticKeyboard;
- (void)createAutomaticKeyboardIfNeeded;
@property(readonly, nonatomic) _Bool animationsEnabled;
- (void)finishRotationOfKeyboard:(id)arg1;
- (void)rotateKeyboard:(id)arg1 toOrientation:(long long)arg2;
- (void)prepareForRotationOfKeyboard:(id)arg1 toOrientation:(long long)arg2;
- (void)finishRotation;
- (void)rotateToOrientation:(long long)arg1;
- (void)prepareForRotationToOrientation:(long long)arg1;
- (struct CGRect)_centerStretchRectForWidth:(double)arg1;
- (_Bool)_somePartOfKeyboardIsOnScreen:(id)arg1;
- (void)updateBackdrop;
- (void)updateDropShadow;
- (void)showDropShadows:(_Bool)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)translateDetected:(id)arg1;
- (void)disableInterfaceAutorotation:(_Bool)arg1;
- (void)_updateBounceAnimation:(id)arg1;
- (void)invalidateDisplayLink;
- (void)bounceAnimationDidFinish;
- (void)finishTransitionWithCompletion:(CDUnknownBlockType)arg1;
- (void)prepareForTransition;
- (void)showInputViewsIfNeeded;
- (void)fadeInputViewsIfNeeded;
- (void)fadeInInputViews:(_Bool)arg1;
- (_Bool)isUndocked;
- (void)undock;
- (void)dock;
- (void)refreshCorners;
- (void)_performRefreshCorners;
- (void)showCorners:(_Bool)arg1 withDuration:(double)arg2;
- (void)postKeyboardFrameChangeNotification:(id)arg1 withInfo:(id)arg2;
- (id)undockedInfoFromDefaultInfo:(id)arg1 forNotification:(id)arg2;
- (void)postUndockingNotification;
- (void)postDockingNotification;
- (void)postDidHideNotification;
- (void)postDidShowNotification;
@property(retain, nonatomic) UIPeripheralHostState *targetState;
- (void)manualKeyboardWasOrderedOut:(id)arg1;
- (void)manualKeyboardWillBeOrderedOut:(id)arg1;
- (void)manualKeyboardWasOrderedIn:(id)arg1;
- (void)manualKeyboardWillBeOrderedIn:(id)arg1;
- (_Bool)isOffScreen;
- (_Bool)isOnScreen;
@property(nonatomic) int currentState; // @synthesize currentState=_automaticKeyboardState;
- (void)setKeyboardOnScreenNotifyKey:(_Bool)arg1;
- (id)retain;
- (void)createHostViewIfNeeded;
- (void)updateRenderConfigForCurrentResponder;
- (void)initializeTranslateGestureRecognizer;
- (struct CGSize)sizeOfInputViewForInputViewSet:(id)arg1 withInterfaceOrientation:(long long)arg2;
- (void)textEffectsWindowDidRotate:(id)arg1;
- (void)peripheralHostDidEnterBackground:(id)arg1;
- (void)springBoardLockStateChanged:(id)arg1;
- (void)peripheralHostWillResume:(id)arg1;
- (void)completeCurrentTransitionIfNeeded;
- (_Bool)hasDictationKeyboard;
- (void)dealloc;
- (id)init;
- (void)setListeningToSpringBoardKeyboardNotifications:(_Bool)arg1;
@property(readonly, nonatomic) _Bool automaticAppearanceReallyEnabled;
- (void)setInputViewsHidden:(_Bool)arg1;
- (void)updateToPlacement:(id)arg1 withNormalAnimationsAndNotifications:(_Bool)arg2;
- (struct CGRect)transitioningFrame;
- (id)contentView;
- (id)transitioningView;
- (void)syncToExistingAnimations;
- (void)postDidHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry)arg1;
- (void)postWillHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry)arg1 duration:(double)arg2;
- (id)userInfoFromGeometry:(struct UIPeripheralAnimationGeometry)arg1 duration:(double)arg2 forWill:(_Bool)arg3 forShow:(_Bool)arg4;
- (struct CGRect)screenRectFromBounds:(struct CGRect)arg1 atCenter:(struct CGPoint)arg2 applyingSourceHeightDelta:(double)arg3;
- (_Bool)userInfoContainsActualGeometryChange:(id)arg1;
- (void)logGeometryDescriptionFromUserInfo:(id)arg1;
- (struct UIPeripheralAnimationGeometry)calculateAnimationGeometryForOrientation:(long long)arg1 outDirection:(int)arg2 forTransition:(int)arg3;
- (struct CGSize)totalPeripheralSizeForOrientation:(long long)arg1;
- (void)setPeripheralFrameForHostBounds:(struct CGRect)arg1;
- (void)setPeripheralToolbarFrameForHostWidth:(double)arg1;
- (_Bool)isHostingActiveImpl;
- (_Bool)hasCustomInputView;
- (void)scrollView:(id)arg1 didFinishPanGesture:(id)arg2;
- (void)scrollView:(id)arg1 didPanWithGesture:(id)arg2;
- (void)animateKeyboardOutWithDuration:(double)arg1 delta:(double)arg2;
- (void)updateScrollViewContentInsetBottom:(double)arg1;
- (void)finishScrollViewTransition;
- (void)hideScrollViewHorizontalScrollIndicator:(_Bool)arg1;
- (_Bool)_shouldDelayRotationForWindow:(id)arg1;
- (_Bool)_isAccessoryViewChangedOnly;
- (_Bool)_isTransitioning;
- (id)_inheritedRenderConfig;
- (void)updateInputAccessoryViewVisibility:(_Bool)arg1 withDuration:(double)arg2;
- (void)candidateBarWillChangeHeight:(double)arg1 withDuration:(double)arg2;
- (void)extendKeyboardBackdropHeight:(double)arg1 withDuration:(double)arg2;
- (_Bool)isSplitting;
- (_Bool)isTranslating;
- (_Bool)isRotating;
- (void)_endDisablingAnimations;
- (void)_beginDisablingAnimations;
- (void)_resignFirstResponderIfHostingOnBehalfOfResponder:(id)arg1;
- (_Bool)_hostFirstResponder:(id)arg1 onBehalfOfResponder:(id)arg2;
- (_Bool)_isSelfHosting;
- (void)_clearPreservedInputViewsWithRestorableResponder:(id)arg1;
- (void)_clearPreservedInputViewsWithId:(id)arg1 clearKeyboard:(_Bool)arg2;
- (_Bool)_restoreInputViewsWithId:(id)arg1 animated:(_Bool)arg2;
- (void)_preserveInputViewsWithId:(id)arg1 animated:(_Bool)arg2;
- (void)_preserveInputViewsWithId:(id)arg1;
- (void)_preserveInputViewsWithId:(id)arg1 animated:(_Bool)arg2 reset:(_Bool)arg3;
@property(readonly, nonatomic) _Bool keyClicksEnabled;
- (_Bool)_isSuppressedByManualKeyboard;
- (id)_inputViewsForResponder:(id)arg1 withAutomaticKeyboard:(_Bool)arg2;
- (id)_inputViewsForResponder:(id)arg1;
- (struct CGRect)localDisplayRectForViewSet:(id)arg1;
- (struct CGRect)localDisplayRectForViewSet:(id)arg1 position:(int)arg2;
- (struct CGRect)displayRectForViewSet:(id)arg1 orientation:(long long)arg2 position:(int)arg3 fromRotation:(_Bool)arg4;
- (id)_currentInputView;
@property(retain, nonatomic) UIInputViewSet *inputViews;
- (void)setInputViews:(id)arg1 animated:(_Bool)arg2;
- (void)setInputViews:(id)arg1 animationStyle:(id)arg2;
- (_Bool)skipTransitionForInputViews:(id)arg1;
- (id)computeTransitionFromInputViews:(id)arg1 toInputViews:(id)arg2 animationStyle:(id)arg3;
- (id)computeTransitionForInputViews:(id)arg1 fromOrientation:(long long)arg2 toOrientation:(long long)arg3;
- (_Bool)shouldApplySettingsForBackdropView:(id)arg1;
- (void)executeTransition:(id)arg1;
- (void)enableKeyboardTyping;
- (void)adjustAccessoryViewForSubsumedTransition:(id)arg1;
- (void)adjustHostViewForTransitionCompletion:(id)arg1;
- (void)adjustHostViewForTransitionEndFrame:(id)arg1;
- (void)adjustHostViewForTransitionStartFrame:(id)arg1;
- (void)endClippingForTransition:(id)arg1;
- (id)containerForClippingMode:(int)arg1 onTransition:(id)arg2;
- (struct CGRect)calculateSnapshotRectForTransition:(id)arg1 forStart:(_Bool)arg2;
- (struct CGRect)calculateRectForTransition:(id)arg1 forStart:(_Bool)arg2;
- (struct CGRect)adjustRect:(struct CGRect)arg1 forStart:(_Bool)arg2;
- (double)accessoryViewFadeDuration:(id)arg1;
@property(readonly, nonatomic) UIInputViewSet *loadAwareInputViews;
- (void)implBoundsHeightChangeDoneForGeometry:(struct UIPeripheralAnimationGeometry)arg1;
- (void)peripheralViewMinMaximized:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (_Bool)maximizeWithAnimation:(_Bool)arg1;
- (_Bool)maximize;
- (_Bool)minimize;
- (void)performMultipleOperations:(CDUnknownBlockType)arg1 withAnimationStyle:(id)arg2;
- (void)postDidShowNotificationForGeometry:(struct UIPeripheralAnimationGeometry)arg1;
- (void)postWillShowNotificationForGeometry:(struct UIPeripheralAnimationGeometry)arg1 duration:(double)arg2;
- (_Bool)shouldUseHideNotificationForGeometry:(struct UIPeripheralAnimationGeometry)arg1;
- (void)resetNextAutomaticOrderInDirectionAndDuration;
- (void)setNextAutomaticOrderInDirection:(int)arg1 duration:(double)arg2;
- (void)prepareToAnimateClippedKeyboardWithOffsets:(struct CGRect)arg1 orderingIn:(_Bool)arg2 onSnapshot:(_Bool)arg3;
- (void)popAnimationStyle;
- (void)pushAnimationStyle:(id)arg1;
- (void)setkeyboardAttachedViewHeight:(double)arg1;
- (double)keyboardAttachedViewHeight;
- (double)getLastAutomaticDuration;
- (void)resetCurrentOrderOutAnimationDuration:(double)arg1;
- (double)getVerticalOverlapForView:(id)arg1 usingKeyboardInfo:(id)arg2;
- (struct CGPoint)offHostPointForPoint:(struct CGPoint)arg1;
- (_Bool)_isCoordinatingWithSystemGestures;
@property(nonatomic) double ambiguousControlCenterActivationMargin;
- (struct CGRect)_inputViewRectToAvoid;
- (int)_clipCornersOfView:(id)arg1;
- (void)moveToPersistentOffset;
- (void)setUndockedWithOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (struct CGPoint)adjustedPersistentOffset;
- (double)minimumOffsetForBuffer:(double)arg1;
- (struct CGRect)visiblePeripheralFrame:(_Bool)arg1;
@property(readonly, nonatomic, getter=_isIgnoringReloadInputViews) _Bool ignoringReloadInputViews;
- (void)_endIgnoringReloadInputViews;
- (void)_beginIgnoringReloadInputViews;
@property(nonatomic) _Bool automaticAppearanceInternalEnabled;
@property(readonly, nonatomic) NSMutableArray *dropShadowViews;
@property(readonly, nonatomic) UIView *view;
- (void)_inputModeChangedWhileContextTracked:(id)arg1;
- (void)_trackInputModeIfNecessary:(id)arg1;
- (_Bool)_isTrackingResponder:(id)arg1;
@property(nonatomic) _Bool ignoresPinning;
- (void)_setIgnoresPinning:(_Bool)arg1 allowImmediateReload:(_Bool)arg2;
- (_Bool)_hasPostPinningReloadState;
- (_Bool)_isPinningInputViewsOnBehalfOfResponder:(id)arg1;
- (void)_stopPinningInputViewsOnBehalfOfResponder:(id)arg1;
- (void)_beginPinningInputViewsOnBehalfOfResponder:(id)arg1;
- (void)_clearPinningResponders;
- (void)_setHosted:(_Bool)arg1;
- (void)forceReloadInputViews;
- (void)_reloadInputViewsForResponder:(id)arg1;
- (void)setTextEffectsWindowLevelForInputView:(id)arg1 responder:(id)arg2;
- (void)_updateContainerWindowLevel;
- (void)_setReloadInputViewsForcedIsAllowed:(_Bool)arg1;
- (void)prepareForPinning;
- (_Bool)pinningPreventsInputViews:(id)arg1;
- (id)containerTextEffectsWindowAboveStatusBar;
- (id)containerTextEffectsWindow;
- (id)transformedContainerView;
- (id)containerRootController;
- (id)containerWindow;
- (id)_screenForFirstResponder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPeripheralHostState : NSObject
{
    struct UIPeripheralAnimationGeometry _geometry;
    NSDictionary *_screenGeometry;
    _Bool _inPositionIsDestination;
}

+ (id)stateWithGeometry:(struct UIPeripheralAnimationGeometry)arg1 inPositionIsDestination:(_Bool)arg2;
@property(nonatomic) _Bool inPositionIsDestination; // @synthesize inPositionIsDestination=_inPositionIsDestination;
@property(retain, nonatomic) NSDictionary *screenGeometry; // @synthesize screenGeometry=_screenGeometry;
@property(nonatomic) struct UIPeripheralAnimationGeometry geometry; // @synthesize geometry=_geometry;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIPeripheralHostView : UIView
{
    int _explicitLayoutCount;
    UIKeyboardCornerView *_cornerViewLeft;
    UIKeyboardCornerView *_cornerViewRight;
    UIKBInputBackdropView *_inputBackdropView;
    UIKBInputBackdropView *_inputAccessoryBackdropView;
    UIKBRenderConfig *_renderConfig;
}

@property(readonly, nonatomic) UIKBInputBackdropView *inputAccessoryBackdropView; // @synthesize inputAccessoryBackdropView=_inputAccessoryBackdropView;
@property(readonly, nonatomic) UIKBInputBackdropView *inputBackdropView; // @synthesize inputBackdropView=_inputBackdropView;
@property(readonly, nonatomic) UIKeyboardCornerView *cornerViewRight; // @synthesize cornerViewRight=_cornerViewRight;
@property(readonly, nonatomic) UIKeyboardCornerView *cornerViewLeft; // @synthesize cornerViewLeft=_cornerViewLeft;
- (void)removeFromSuperview;
- (int)_clipCornersOfView:(id)arg1;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
- (void)layoutSubviews;
- (_Bool)explicitLayout;
- (void)endExplicitLayout;
- (void)beginExplicitLayout;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)didAddSubview:(id)arg1;
- (void)_setRenderConfig:(id)arg1 updateKeyboard:(_Bool)arg2;
- (void)_setRenderConfig:(id)arg1;
- (void)_setBaseRenderConfig:(id)arg1;
- (id)_inheritedRenderConfig;
- (void)syncInputAccessoryViewBackdropToFrame:(struct CGRect)arg1;
- (void)syncInputViewBackdropToFrame:(struct CGRect)arg1;
- (int)textEffectsVisibilityLevel;
- (void)dealloc;
- (void)updateBackdropViewForInputAccessoryView:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPhoneAppearanceContainer : UIDeviceAppearanceContainer
{
}

@end

__attribute__((visibility("hidden")))
@interface UIPhraseBoundaryGestureRecognizer : UILongPressGestureRecognizer
{
    UIResponder<UITextInput> *_textInput;
    UIDelayedAction *_secondDelayTimer;
    double _secondDelay;
    _Bool _secondDelayElapsed;
    id _userData;
}

@property(nonatomic) id userData; // @synthesize userData=_userData;
@property(readonly, nonatomic) _Bool secondDelayElapsed; // @synthesize secondDelayElapsed=_secondDelayElapsed;
@property(nonatomic) double secondDelay; // @synthesize secondDelay=_secondDelay;
@property(nonatomic) UIResponder<UITextInput> *textInput; // @synthesize textInput=_textInput;
- (void)clearTimer;
- (void)startTimer;
- (void)secondDelayElapsed:(id)arg1;
- (void)setState:(long long)arg1;
- (void)_resetGestureRecognizer;

@end

__attribute__((visibility("hidden")))
@interface UIPhysicalButtonsEvent : UIInternalEvent
{
    NSMutableSet *_allPhysicalButtons;
    _UIPhysicalButton *_triggeringPhysicalButton;
}

@property(retain, nonatomic) _UIPhysicalButton *_triggeringPhysicalButton; // @synthesize _triggeringPhysicalButton;
- (void)_removePhysicalButton:(id)arg1;
- (void)_addPhysicalButton:(id)arg1;
- (id)_gestureRecognizersForWindow:(id)arg1;
- (id)_physicalButtonsForGestureRecognizer:(id)arg1 withPhase:(long long)arg2;
- (id)_physicalButtonsForGestureRecognizer:(id)arg1;
- (id)_physicalButtonsForResponder:(id)arg1 withPhase:(long long)arg2;
- (id)_physicalButtonsForResponder:(id)arg1;
- (id)_respondersForWindow:(id)arg1;
- (id)_physicalButtonsForWindow:(id)arg1;
- (id)_allPhysicalButtons;
- (id)_windows;
- (long long)type;
- (void)dealloc;
- (id)_init;

@end

__attribute__((visibility("hidden")))
@interface UIPhysicalKeyboardEvent : UIPhysicalButtonsEvent
{
    int _inputFlags;
    NSString *_modifiedInput;
    NSString *_unmodifiedInput;
    NSString *_shiftModifiedInput;
    NSString *_commandModifiedInput;
    NSString *_markedInput;
    long long _modifierFlags;
    NSString *_privateInput;
}

+ (id)_eventWithInput:(id)arg1 inputFlags:(int)arg2;
@property(retain, nonatomic) NSString *_privateInput; // @synthesize _privateInput;
@property(nonatomic) int _inputFlags; // @synthesize _inputFlags;
@property(nonatomic) long long _modifierFlags; // @synthesize _modifierFlags;
@property(retain, nonatomic) NSString *_markedInput; // @synthesize _markedInput;
@property(retain, nonatomic) NSString *_commandModifiedInput; // @synthesize _commandModifiedInput;
@property(retain, nonatomic) NSString *_shiftModifiedInput; // @synthesize _shiftModifiedInput;
@property(retain, nonatomic) NSString *_unmodifiedInput; // @synthesize _unmodifiedInput;
@property(retain, nonatomic) NSString *_modifiedInput; // @synthesize _modifiedInput;
@property(readonly, nonatomic) long long _gsModifierFlags;
- (void)_privatizeInput;
- (void)dealloc;
- (id)_cloneEvent;
- (_Bool)isEqual:(id)arg1;
- (_Bool)_matchesKeyCommand:(id)arg1;
- (void)_setHIDEvent:(struct __IOHIDEvent *)arg1 keyboard:(struct __GSKeyboard *)arg2;
@property(readonly, nonatomic) long long _keyCode;
@property(readonly, nonatomic) _Bool _isKeyDown;
- (long long)type;

@end

__attribute__((visibility("hidden")))
@interface UIPickerColumnView : UIView <UIPickerTableViewContainerDelegate, UITableViewDataSource>
{
    UIPickerTableView *_topTable;
    UIPickerTableView *_middleTable;
    UIPickerTableView *_bottomTable;
    UIView *_topContainerView;
    UIView *_middleContainerView;
    UIView *_bottomContainerView;
    double _middleBarHeight;
    double _rowHeight;
    UIPickerView *_pickerView;
    struct CGRect _tableFrame;
    struct CATransform3D _perspectiveTransform;
    UIColor *__textColor;
    double _leftHitTestExtension;
    double _rightHitTestExtension;
}

@property(nonatomic) double rightHitTestExtension; // @synthesize rightHitTestExtension=_rightHitTestExtension;
@property(nonatomic) double leftHitTestExtension; // @synthesize leftHitTestExtension=_leftHitTestExtension;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *_textColor; // @synthesize _textColor=__textColor;
@property(nonatomic) struct CATransform3D perspectiveTransform; // @synthesize perspectiveTransform=_perspectiveTransform;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)_visibleCellClosestToPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (id)_allVisibleCells;
- (struct _NSRange)_visibleGlobalRows;
- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;
- (void)_pickerTableViewDidChangeContentOffset:(id)arg1;
- (void)_moveTableViewIfNecessary:(id)arg1 toContentOffset:(struct CGPoint)arg2;
- (void)setAllowsMultipleSelection:(_Bool)arg1;
- (void)endUpdates;
- (void)beginUpdates;
- (void)reloadData;
- (id)cellForRowAtIndexPath:(id)arg1;
- (long long)numberOfRowsInSection:(long long)arg1;
- (_Bool)_usesCheckSelection;
- (_Bool)_soundsEnabled;
- (void)_sendCheckedRow:(long long)arg1 inTableView:(id)arg2 checked:(_Bool)arg3;
@property(nonatomic) struct CGRect selectionBarRect;
- (void)clearDataSourceAndDelegate;
@property(readonly, nonatomic) long long selectionBarRow;
- (_Bool)_scrollRowAtIndexPathToSelectionBar:(id)arg1 animated:(_Bool)arg2;
- (_Bool)isRowChecked:(long long)arg1;
- (_Bool)selectRow:(long long)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;
- (double)_horizontalBiasForEndTables;
- (_Bool)_pointLiesWithinEffectiveTableBounds:(struct CGPoint)arg1;
- (struct CGRect)_tableFrame;
- (id)_preferredTable;
- (_Bool)_containsTable:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 tableFrame:(struct CGRect)arg2 middleBarHeight:(double)arg3 rowHeight:(double)arg4 pickerView:(id)arg5 transform:(struct CATransform3D)arg6;
- (struct CATransform3D)_transformForTableWithTranslationX:(double)arg1;
- (struct CATransform3D)_transformForTableWithPerspectiveTranslationX:(double)arg1;
- (id)_createContainerViewWithFrame:(struct CGRect)arg1;
- (void)_centerTableInContainer:(id)arg1;
- (id)_createTableViewWithFrame:(struct CGRect)arg1 containingFrame:(struct CGRect)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPickerTableView : UITableView <UITableViewDelegate>
{
    struct CGRect _selectionBarRect;
    long long _selectionBarRow;
    NSMutableIndexSet *_checkedRows;
    double _lastClickedOffset;
    long long _lastSelectedRow;
    _Bool _usesModernStyle;
    UIColor *_textColor;
    struct CGRect _visibleRect;
    NSMutableArray *_referencingCells;
    struct {
        unsigned int allowsMultipleSelection:1;
        unsigned int scrollingDirection:2;
        unsigned int didSelectDisabled:1;
        unsigned int skipRowChangeNotifications:1;
        unsigned int scrollingForSelection:1;
        unsigned int pickerViewImplementsSelectionBarChanged:2;
        unsigned int cancellingAnimation:1;
        unsigned int updatingContentInset:1;
    } _pickerTableFlags;
}

@property(nonatomic) long long lastSelectedRow; // @synthesize lastSelectedRow=_lastSelectedRow;
@property(nonatomic) struct CGRect selectionBarRect; // @synthesize selectionBarRect=_selectionBarRect;
- (_Bool)_shouldWrapCells;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *_textColor;
@property(getter=_usesModernStyle, setter=_setUsesModernStyle:) _Bool _usesModernStyle;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)_scrollingFinished;
- (struct CGPoint)contentOffsetForRowAtIndexPath:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (_Bool)_beginTrackingWithEvent:(id)arg1;
- (_Bool)isRowChecked:(long long)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(nonatomic) long long selectionBarRow; // @synthesize selectionBarRow=_selectionBarRow;
- (void)_setSelectionBarRow:(long long)arg1;
- (void)_playClickIfNecessary;
- (id)_containerView;
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;
- (id)_anyDateLabel;
- (void)layoutSubviews;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)_setContentOffset:(struct CGPoint)arg1 notify:(_Bool)arg2;
- (void)_notifyContentOffsetChange;
- (struct CATransform3D)_transformForCellAtY:(double)arg1;
- (double)_rotationForCellCenterY:(double)arg1;
- (double)_yForY:(double)arg1;
- (double)_distanceToCenterForY:(double)arg1;
- (double)_zForUnitY:(double)arg1;
- (double)_viewYForUnitY:(double)arg1;
- (double)_yRangingFromZeroTo:(double)arg1 forUnitY:(double)arg2;
- (double)_unitYForViewY:(double)arg1;
- (double)_zCoordinateForYCoordinate:(double)arg1;
- (void)_updateContentInsets;
- (void)_rectChangedWithNewSize:(struct CGSize)arg1 oldSize:(struct CGSize)arg2;
- (_Bool)didSelectDisabled:(_Bool)arg1;
- (_Bool)selectRow:(long long)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;
- (id)_checkedRows;
- (_Bool)_scrollRowAtIndexPathToSelectionBar:(id)arg1 animated:(_Bool)arg2;
- (struct CGRect)_selectionBarRectForBounds:(struct CGRect)arg1;
- (void)dealloc;
- (id)_pickerView;
- (struct CGRect)_visibleBounds;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 visibleRect:(struct CGRect)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPickerTableViewCell : UITableViewCell
{
    UITapGestureRecognizer *_tap;
    UIPickerTableView *pickerTable;
}

@property(nonatomic) UIPickerTableView *pickerTable; // @synthesize pickerTable;
- (void)_tapAction:(id)arg1;
- (void)_setIsCenterCell:(_Bool)arg1 shouldModifyAlphaOfView:(_Bool)arg2;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIPickerTableViewTitledCell : UIPickerTableViewCell
{
    UILabel *_titleLabel;
    _Bool _isAttributed;
    _Bool _usesModernStyle;
    UIColor *_textColor;
}

@property(readonly, nonatomic) _Bool _isAttributed; // @synthesize _isAttributed;
@property(readonly, nonatomic) UILabel *_titleLabel; // @synthesize _titleLabel;
- (void)prepareForReuse;
@property(retain, nonatomic) NSAttributedString *attributedTitle;
@property(retain, nonatomic) NSString *title;
- (_Bool)_canBeReusedInPickerView;
- (void)dealloc;
- (void)_setIsCenterCell:(_Bool)arg1 shouldModifyAlphaOfView:(_Bool)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 isModern:(_Bool)arg3 textColor:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface UIPickerTableViewWrapperCell : UIPickerTableViewCell
{
    UIView *_wrappedView;
    UIView *_wrappedViewContainer;
    struct CGSize _wrappedViewSize;
}

- (id)_anyDateLabel;
- (void)prepareForReuse;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
@property(retain, nonatomic) UIView *wrappedView;
- (void)_updateWrappedView;
- (void)_updateWrappedViewFrame;
- (void)_setIsCenterCell:(_Bool)arg1 shouldModifyAlphaOfView:(_Bool)arg2;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface UIPickerView : UIView <UIPickerTableViewContainerDelegate, UITableViewDelegate, UIPickerViewScrollTesting, NSCoding, UITableViewDataSource>
{
    NSMutableArray *_tables;
    UIView *_topFrame;
    NSMutableArray *_dividers;
    NSMutableArray *_selectionBars;
    id <UIPickerViewDataSource> _dataSource;
    id <UIPickerViewDelegate> _delegate;
    UIView *_backgroundView;
    long long _numberOfComponents;
    UIImageView *_topGradient;
    UIImageView *_bottomGradient;
    UIView *_foregroundView;
    CALayer *_maskGradientLayer;
    UIView *_topLineView;
    UIView *_bottomLineView;
    struct {
        unsigned int needsLayout:1;
        unsigned int delegateRespondsToNumberOfComponentsInPickerView:1;
        unsigned int delegateRespondsToNumberOfRowsInComponent:1;
        unsigned int delegateRespondsToDidSelectRow:1;
        unsigned int delegateRespondsToViewForRow:1;
        unsigned int delegateRespondsToTitleForRow:1;
        unsigned int delegateRespondsToAttributedTitleForRow:1;
        unsigned int delegateRespondsToWidthForComponent:1;
        unsigned int delegateRespondsToRowHeightForComponent:1;
        unsigned int showsSelectionBar:1;
        unsigned int allowsMultipleSelection:1;
        unsigned int allowSelectingCells:1;
        unsigned int soundsDisabled:1;
        unsigned int usesCheckedSelection:1;
        unsigned int skipsBackground:1;
    } _pickerViewFlags;
    _Bool _usesModernStyle;
    UIColor *_textColor;
    UIColor *_textShadowColor;
    _UIPickerViewTestParameters *_currentTestParameters;
    _Bool _isInLayoutSubviews;
    _Bool _magnifierEnabled;
}

+ (id)_modernNonCenterCellFont;
+ (id)_modernCenterCellFont;
+ (struct CGSize)defaultSizeForCurrentOrientation;
+ (struct CGSize)sizeForCurrentOrientationThatFits:(struct CGSize)arg1;
+ (struct CGSize)sizeThatFits:(struct CGSize)arg1 forInterfaceOrientation:(long long)arg2;
@property(nonatomic, setter=_setMagnifierEnabled:) _Bool _magnifierEnabled; // @synthesize _magnifierEnabled;
@property(nonatomic, setter=_setInLayoutSubviews:) _Bool _isInLayoutSubviews; // @synthesize _isInLayoutSubviews;
@property(nonatomic) id <UIPickerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <UIPickerViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)_noteScrollingFinishedForComponent:(long long)arg1;
- (void)_completeCurrentTest;
- (void)_iterateOnCurrentTest;
- (void)_performScrollTest:(id)arg1 withIterations:(long long)arg2 rowsToScroll:(long long)arg3 inComponent:(long long)arg4;
- (struct CATransform3D)_perspectiveTransform;
- (_Bool)_shouldDrawWithModernStyle;
@property(retain, nonatomic, getter=_textShadowColor, setter=_setTextShadowColor:) UIColor *textShadowColor;
@property(retain, nonatomic, getter=_textColor, setter=_setTextColor:) UIColor *textColor;
@property(retain, nonatomic, getter=_highlightColor, setter=_setHighlightColor:) UIColor *highlightColor;
@property(getter=_usesModernStyle, setter=_setUsesModernStyle:) _Bool usesModernStyle;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)selectRow:(int)arg1 inColumn:(int)arg2 animated:(_Bool)arg3;
- (void)selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3;
- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;
- (struct CGRect)_effectiveTableViewFrameForColumn:(long long)arg1;
- (id)tableViewForColumn:(long long)arg1;
- (long long)columnForTableView:(id)arg1;
- (int)selectedRowForColumn:(int)arg1;
- (long long)selectedRowInComponent:(long long)arg1;
- (struct _NSRange)visibleRowsForColumn:(int)arg1;
- (_Bool)_drawsBackground;
- (void)_setDrawsBackground:(_Bool)arg1;
- (_Bool)_usesCheckedSelection;
- (void)_setUsesCheckedSelection:(_Bool)arg1;
- (void)_sendSelectionChangedFromTable:(id)arg1 notify:(_Bool)arg2;
- (_Bool)_usesCheckSelection;
- (_Bool)allowsMultipleSelection;
- (void)setAllowsMultipleSelection:(_Bool)arg1;
- (void)_sendSelectionChangedForComponent:(long long)arg1 notify:(_Bool)arg2;
@property(nonatomic) _Bool showsSelectionIndicator;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_updateWithOldSize:(struct CGSize)arg1 newSize:(struct CGSize)arg2;
- (void)_resetSelectionOfTables;
- (void)layoutSubviews;
- (id)_contentView;
- (double)_wheelShift;
- (void)reloadAllPickerPieces;
- (id)viewForRow:(long long)arg1 forComponent:(long long)arg2;
@property(readonly, nonatomic) long long numberOfComponents; // @synthesize numberOfComponents=_numberOfComponents;
- (long long)numberOfColumns;
- (long long)numberOfRowsInColumn:(long long)arg1;
- (long long)numberOfRowsInComponent:(long long)arg1;
- (struct CGSize)rowSizeForComponent:(long long)arg1;
- (id)_createTableWithFrame:(struct CGRect)arg1 forComponent:(long long)arg2;
- (id)_createColumnWithTableFrame:(struct CGRect)arg1 rowHeight:(double)arg2;
- (void)_addMagnifierLinesForRowHeight:(double)arg1;
- (double)_delegateRowHeightForComponent:(long long)arg1;
- (double)_delegateWidthForComponent:(long long)arg1 ofCount:(int)arg2 withSizeLeft:(double)arg3;
- (id)_delegateAttributedTitleForRow:(long long)arg1 forComponent:(long long)arg2;
- (id)_delegateTitleForRow:(long long)arg1 forComponent:(long long)arg2;
- (long long)_delegateNumberOfRowsInComponent:(long long)arg1;
- (long long)_delegateNumberOfComponents;
- (double)scrollAnimationDuration;
- (void)_sendCheckedRow:(long long)arg1 inTableView:(id)arg2 checked:(_Bool)arg3;
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (id)createDividerWithFrame:(struct CGRect)arg1;
- (id)_createViewForPickerPiece:(int)arg1;
- (struct CGRect)_selectionBarRectForHeight:(double)arg1;
- (id)imageForPickerPiece:(int)arg1;
- (id)_popoverSuffix;
- (id)_selectionBarSuffix;
- (id)pickerImageNamePrefix;
- (void)reloadComponent:(long long)arg1;
- (void)reloadDataForColumn:(int)arg1;
- (void)reloadAllComponents;
- (void)reloadData;
- (void)reload;
- (void)didMoveToWindow;
- (void)setAlpha:(double)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)_updateSelectedRows;
- (void)_updateSound;
- (void)setNeedsLayout;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (_Bool)_soundsEnabled;
- (void)setSoundsEnabled:(_Bool)arg1;
- (id)_orientationImageSuffix;
- (double)_tableRowHeight;
- (_Bool)_isLandscapeOrientation;
- (struct CGSize)defaultSize;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)isAccessibilityElementByDefault;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPinchGestureRecognizer : UIGestureRecognizer
{
    double _initialTouchDistance;
    double _initialTouchScale;
    double _lastTouchTime;
    double _velocity;
    double _previousVelocity;
    double _scaleThreshold;
    struct CGAffineTransform _transform;
    struct CGPoint _anchorSceneReferencePoint;
    UITouch *_touches[2];
    double _hysteresis;
    id _transformAnalyzer;
    unsigned int _endsOnSingleTouch:1;
}

@property(nonatomic, getter=_hysteresis, setter=_setHysteresis:) double hysteresis; // @synthesize hysteresis=_hysteresis;
@property(nonatomic) double scaleThreshold; // @synthesize scaleThreshold=_scaleThreshold;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) double velocity;
@property(nonatomic) double scale;
@property(readonly, nonatomic) struct CGPoint anchorPoint;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)_setEndsOnSingleTouch:(_Bool)arg1;
- (_Bool)_endsOnSingleTouch;

@end

__attribute__((visibility("hidden")))
@interface UIPlaceholderColor : UIColor
{
}

- (void)dealloc;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)autorelease;

@end

__attribute__((visibility("hidden")))
@interface UIPopoverButton : UIButton
{
}

- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (id)_setupBackgroundView;
- (void)setEnabled:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1 buttonType:(long long)arg2;

@end

@interface UIPopoverController : NSObject <UIDimmingViewDelegate, UIGestureRecognizerDelegatePrivate, UIAppearanceContainer>
{
    id _delegate;
    UIViewController *_contentViewController;
    UIViewController *_splitParentController;
    _UIPopoverView *_popoverView;
    UIDimmingView *_dimmingView;
    UIView *_layoutConstraintView;
    struct CGRect _targetRectInEmbeddingView;
    UIBarButtonItem *_targetBarButtonItem;
    unsigned long long _requestedArrowDirections;
    unsigned long long _currentArrowDirection;
    long long _popoverBackgroundStyle;
    UIColor *_backgroundColor;
    _UIPopoverLayoutInfo *_preferredLayoutInfo;
    Class _popoverBackgroundViewClass;
    struct CGSize _popoverContentSize;
    struct CGRect _targetRectInDimmingView;
    struct CGRect _embeddedTargetRect;
    long long _popoverControllerStyle;
    _Bool _ignoresKeyboardNotifications;
    UIView *_currentPresentationView;
    struct CGRect _currentPresentationRectInView;
    unsigned long long _originalArrowDirections;
    unsigned int draggingChildScrollViewCount;
    id _target;
    SEL _didEndSelector;
    UIViewController *_modalPresentationFromViewController;
    UIViewController *_modalPresentationToViewController;
    unsigned long long _toViewAutoResizingMask;
    UIViewController *_slidingViewController;
    UIView *_presentingView;
    unsigned long long _presentationEdge;
    long long _presentationDirection;
    int _presentationState;
    _Bool _didPresentInActiveSequence;
    unsigned long long _slideTransitionCount;
    UIPanGestureRecognizer *_vendedGestureRecognizer;
    UIPanGestureRecognizer *_dimmingViewGestureRecognizer;
    NSArray *_passthroughViews;
    CDStruct_4a475a17 _popoverControllerFlags;
    _Bool _allowResizePastTargetRect;
    _Bool _dismissesOnRotation;
    _Bool _showsTargetRect;
    _Bool _showsOrientationMarker;
    _Bool _showsPresentationArea;
    _Bool _retainsSelfWhilePresented;
    unsigned long long _popoverArrowDirection;
    UIPopoverPresentationController *_presentationController;
    struct UIEdgeInsets _popoverLayoutMargins;
}

+ (_Bool)_forceAttemptsToAvoidKeyboard;
+ (struct UIEdgeInsets)_defaultPopoverLayoutMarginsForPopoverControllerStyle:(long long)arg1 andContentViewController:(id)arg2;
+ (Class)_popoverViewClass;
+ (_Bool)_showTargetRectPref;
+ (_Bool)_useLegacyPopoverControllers;
+ (void)_setForceModernPopoverUse:(_Bool)arg1;
+ (_Bool)_popoversDisabled;
@property(retain, nonatomic, getter=_presentationController, setter=_setPresentationController:) UIPopoverPresentationController *presentationController; // @synthesize presentationController=_presentationController;
@property(nonatomic) unsigned long long popoverArrowDirection; // @synthesize popoverArrowDirection=_popoverArrowDirection;
@property(nonatomic, getter=_presentationEdge, setter=_setPresentationEdge:) unsigned long long presentationEdge; // @synthesize presentationEdge=_presentationEdge;
@property(nonatomic, getter=_presentingView, setter=_setPresentingView:) UIView *presentingView; // @synthesize presentingView=_presentingView;
@property(retain, nonatomic) _UIPopoverLayoutInfo *preferredLayoutInfo; // @synthesize preferredLayoutInfo=_preferredLayoutInfo;
@property(nonatomic, getter=_retainsSelfWhilePresented, setter=_setRetainsSelfWhilePresented:) _Bool retainsSelfWhilePresented; // @synthesize retainsSelfWhilePresented=_retainsSelfWhilePresented;
@property(nonatomic) _Bool showsPresentationArea; // @synthesize showsPresentationArea=_showsPresentationArea;
@property(nonatomic) _Bool showsOrientationMarker; // @synthesize showsOrientationMarker=_showsOrientationMarker;
@property(nonatomic) _Bool showsTargetRect; // @synthesize showsTargetRect=_showsTargetRect;
@property(retain, nonatomic) Class popoverBackgroundViewClass; // @synthesize popoverBackgroundViewClass=_popoverBackgroundViewClass;
@property(nonatomic) _Bool dismissesOnRotation; // @synthesize dismissesOnRotation=_dismissesOnRotation;
@property(nonatomic) _Bool allowResizePastTargetRect; // @synthesize allowResizePastTargetRect=_allowResizePastTargetRect;
@property(retain, nonatomic) UIDimmingView *dimmingView; // @synthesize dimmingView=_dimmingView;
@property(nonatomic) id <UIPopoverControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_modalAnimation:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_modalTransition:(int)arg1 fromViewController:(id)arg2 toViewController:(id)arg3 target:(id)arg4 didEndSelector:(SEL)arg5;
- (id)_dimmingView;
- (_Bool)_embedsInView;
- (id)_managingSplitViewController;
- (void)_setManagingSplitViewController:(id)arg1;
- (_Bool)isPresentingOrDismissing;
- (_Bool)_isDismissing;
- (_Bool)_isPresenting;
- (void)_containedViewControllerModalStateChanged;
- (void)_stopWatchingForNotifications;
@property(nonatomic, setter=_setIgnoresKeyboardNotifications:) _Bool _ignoresKeyboardNotifications; // @dynamic _ignoresKeyboardNotifications;
- (void)_stopWatchingForScrollViewNotifications;
- (void)_startWatchingForScrollViewNotifications;
- (void)_scrollViewDidEndDragging:(id)arg1;
- (void)_scrollViewWillBeginDragging:(id)arg1;
- (void)_stopWatchingForWindowRotations;
- (void)_startWatchingForWindowRotations;
- (void)_hostingWindowDidRotate:(id)arg1;
- (void)_hostingWindowWillRotate:(id)arg1;
- (_Bool)_canRepresentAutomatically;
- (void)_stopWatchingForKeyboardNotifications;
- (void)_startWatchingForKeyboardNotificationsIfNecessary;
- (void)_keyboardStateChanged:(id)arg1;
- (void)_moveAwayFromTheKeyboard:(id)arg1;
- (id)_layoutInfoForCurrentKeyboardState;
- (id)_layoutInfoForCurrentKeyboardStateAndHostingWindow:(id)arg1;
- (id)_layoutInfoFromLayoutInfo:(id)arg1 forCurrentKeyboardStateAndHostingWindow:(id)arg2;
- (_Bool)_attemptsToAvoidKeyboard;
- (void)_stopWatchingForNavigationControllerNotifications:(id)arg1;
- (void)_startWatchingForNavigationControllerNotifications:(id)arg1;
- (void)_newViewControllerWasPushed:(id)arg1;
- (void)_adjustPopoverForNewContentSizeFromViewController:(id)arg1 allowShrink:(_Bool)arg2;
- (void)_newViewControllerWillBePushed:(id)arg1;
- (void)_setGesturesEnabled:(_Bool)arg1;
- (void)_swipe:(id)arg1;
- (_Bool)_gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (id)_gestureRecognizerForPresentationFromEdge:(unsigned long long)arg1;
- (void)dimmingViewWasTapped:(id)arg1;
- (void)_dismissPopoverAnimated:(_Bool)arg1 stateOnly:(_Bool)arg2 notifyDelegate:(_Bool)arg3;
- (void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(id)arg1;
- (void)_postludeForDismissal;
- (CDUnknownBlockType)_completionBlockForDismissalWhenNotifyingDelegate:(_Bool)arg1;
- (void)_beginMapsTransitionToNewViewController:(id)arg1 arrowDirections:(unsigned long long)arg2 slideDuration:(double)arg3 expandDuration:(double)arg4;
- (void)_beginMapsTransitionToNewViewController:(id)arg1 newTargetRect:(struct CGRect)arg2 inView:(id)arg3 arrowDirections:(unsigned long long)arg4 slideDuration:(double)arg5 expandDuration:(double)arg6;
- (void)_setContentViewController:(id)arg1 backgroundStyle:(long long)arg2 animated:(_Bool)arg3;
- (long long)_popoverBackgroundStyle;
- (void)_setPopoverBackgroundStyle:(long long)arg1;
- (_Bool)_manuallyHandlesContentViewControllerAppearanceCalls;
- (long long)_popoverControllerStyle;
- (void)_performHierarchyCheckOnViewController:(id)arg1;
- (void)_transitionFromViewController:(id)arg1 toViewController:(id)arg2 animated:(_Bool)arg3;
- (void)_layoutDimmingViewForInterfaceOrientationOfHostingWindow:(id)arg1;
- (void)_updateDimmingViewTransformForInterfaceOrientationOfHostingWindow:(id)arg1;
- (double)_dismissalAnimationDuration;
- (double)_presentationAnimationDuration;
- (struct CGSize)_currentPopoverContentSize;
- (id)_splitParentController;
- (void)_setSplitParentController:(id)arg1;
- (void)_setPopoverView:(id)arg1;
- (id)popoverView;
- (void)dismissPopoverAnimated:(_Bool)arg1;
- (void)presentPopoverFromBarButtonItem:(id)arg1 permittedArrowDirections:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)presentPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4;
- (void)_presentShimmedPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4;
- (void)_setupPresentationController;
- (_Bool)_shimPopoverPresentationController;
- (void)_commonPresentPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4;
- (_Bool)_shimPresentSlidingPopoverAnimated:(_Bool)arg1;
- (struct CGPoint)_centerPointForScale:(double)arg1 frame:(struct CGRect)arg2 anchor:(struct CGPoint)arg3;
- (void)_presentPopoverFromRect:(struct CGRect)arg1 embeddedInView:(id)arg2 usingViewForLayoutConstraints:(id)arg3 permittedArrowDirections:(unsigned long long)arg4;
- (void)_presentPopoverFromRect:(struct CGRect)arg1 embeddedInView:(id)arg2 usingViewForLayoutConstraints:(id)arg3 permittedArrowDirections:(unsigned long long)arg4 animate:(_Bool)arg5;
- (void)_presentPopoverFromEdge:(unsigned long long)arg1 ofView:(id)arg2 animated:(_Bool)arg3;
- (void)_presentPopoverBySlidingIn:(_Bool)arg1 fromEdge:(unsigned long long)arg2 ofView:(id)arg3 animated:(_Bool)arg4 stateOnly:(_Bool)arg5 notifyDelegate:(_Bool)arg6;
- (void)_invalidateLayoutInfo;
- (void)_resetSlideTransitionCount;
- (void)_incrementSlideTransitionCount:(_Bool)arg1;
- (unsigned long long)_slideTransitionCount;
- (void)_setPresentationState:(int)arg1;
- (int)_presentationState;
- (Class)_defaultChromeViewClass;
- (Class)_popoverLayoutInfoForChromeClass:(Class)arg1;
- (_Bool)_popoverBackgroundViewWantsDefaultContentAppearance;
@property(copy, nonatomic) NSArray *passthroughViews;
@property(copy, nonatomic) UIColor *backgroundColor;
@property(nonatomic) struct UIEdgeInsets popoverLayoutMargins; // @synthesize popoverLayoutMargins=_popoverLayoutMargins;
@property(readonly, nonatomic, getter=isPopoverVisible) _Bool popoverVisible;
- (void)setPopoverContentSize:(struct CGSize)arg1 animated:(_Bool)arg2;
@property(nonatomic) struct CGSize popoverContentSize;
- (void)setPopoverFrame:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)setContentViewController:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIViewController *contentViewController;
- (void)dealloc;
- (id)initWithContentViewController:(id)arg1;
- (id)_initWithContentViewController:(id)arg1 popoverControllerStyle:(long long)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPresentationController : NSObject <_UIAppearanceContainer, _UITraitEnvironmentInternal, _UIContentContainerInternal, UIAppearanceContainer, UITraitEnvironment, UIContentContainer>
{
    _Bool _isDisconnectedRoot;
    _Bool _transitionAsDisconnectedRoot;
    _Bool _needsDidAppear;
    _Bool _needsDidDisappear;
    _Bool _monitorsSystemLayoutFittingSize;
    id _target;
    SEL _didEndSelector;
    UITraitCollection *_lastNotifiedTraitCollection;
    _Bool _changedPresentingViewControllerDuringAdaptation;
    _Bool _containerIgnoresDirectTouchEvents;
    UIViewController *_presentingViewController;
    UIViewController *_presentedViewController;
    UIView *_containerView;
    id <UIAdaptivePresentationControllerDelegate> _delegate;
    UITraitCollection *_overrideTraitCollection;
    id <UIViewControllerAnimatedTransitioning> _currentTransitionController;
    id <UIViewControllerInteractiveTransitioning> _currentInteractionController;
    UIView *_presentationView;
    UIView *__currentPresentationSuperview;
    long long _state;
    CDUnknownBlockType __transitionViewForCurrentTransition;
    CDUnknownBlockType __fromViewForCurrentTransition;
    CDUnknownBlockType __toViewForCurrentTransition;
    CDUnknownBlockType __computeToEndFrameForCurrentTransition;
    CDUnknownBlockType __currentTransitionDidComplete;
    struct CGSize _preferredContentSize;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
+ (struct UIEdgeInsets)_defaultBaseContentInsetsForFrame:(struct CGRect)arg1 inView:(id)arg2;
@property(nonatomic, getter=_containerIgnoresDirectTouchEvents, setter=_setContainerIgnoresDirectTouchEvents:) _Bool containerIgnoresDirectTouchEvents; // @synthesize containerIgnoresDirectTouchEvents=_containerIgnoresDirectTouchEvents;
@property(copy, nonatomic) CDUnknownBlockType _currentTransitionDidComplete; // @synthesize _currentTransitionDidComplete=__currentTransitionDidComplete;
@property(copy, nonatomic) CDUnknownBlockType _computeToEndFrameForCurrentTransition; // @synthesize _computeToEndFrameForCurrentTransition=__computeToEndFrameForCurrentTransition;
@property(copy, nonatomic) CDUnknownBlockType _toViewForCurrentTransition; // @synthesize _toViewForCurrentTransition=__toViewForCurrentTransition;
@property(copy, nonatomic) CDUnknownBlockType _fromViewForCurrentTransition; // @synthesize _fromViewForCurrentTransition=__fromViewForCurrentTransition;
@property(copy, nonatomic) CDUnknownBlockType _transitionViewForCurrentTransition; // @synthesize _transitionViewForCurrentTransition=__transitionViewForCurrentTransition;
@property(nonatomic, getter=_changedPresentingViewControllerDuringAdaptation, setter=_setChangedPresentingViewControllerDuringAdaptation:) _Bool changedPresentingViewControllerDuringAdaptation; // @synthesize changedPresentingViewControllerDuringAdaptation=_changedPresentingViewControllerDuringAdaptation;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic, getter=_currentPresentationSuperview, setter=_setCurrentPresentationSuperview:) UIView *_currentPresentationSuperview; // @synthesize _currentPresentationSuperview=__currentPresentationSuperview;
@property(retain, nonatomic, getter=_presentationView, setter=_setPresentationView:) UIView *presentationView; // @synthesize presentationView=_presentationView;
@property(retain, nonatomic, getter=_currentInteractionController, setter=_setCurrentInteractionController:) id <UIViewControllerInteractiveTransitioning> currentInteractionController; // @synthesize currentInteractionController=_currentInteractionController;
@property(retain, nonatomic, getter=_currentTransitionController, setter=_setCurrentTransitionController:) id <UIViewControllerAnimatedTransitioning> currentTransitionController; // @synthesize currentTransitionController=_currentTransitionController;
@property(copy, nonatomic) UITraitCollection *overrideTraitCollection; // @synthesize overrideTraitCollection=_overrideTraitCollection;
@property(nonatomic) id <UIAdaptivePresentationControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_setContainerView:(id)arg1;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (void)_setPresentedViewController:(id)arg1;
@property(retain, nonatomic) UIViewController *presentedViewController; // @synthesize presentedViewController=_presentedViewController;
@property(retain, nonatomic) UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
@property(nonatomic, getter=_preferredContentSize, setter=_setPreferredContentSize:) struct CGSize _preferredContentSize; // @synthesize _preferredContentSize;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (id)_sharedParent:(id)arg1 willTransitionToTraitCollection:(id)arg2 withTransitionCoordinator:(id)arg3;
- (void)_window:(id)arg1 willTransitionToTraitCollection:(id)arg2 withTransitionCoordinator:(id)arg3;
- (void)_parent:(id)arg1 willTransitionToTraitCollection:(id)arg2 withTransitionCoordinator:(id)arg3;
- (void)_updateTraitsIfNecessary;
- (void)traitCollectionDidChange:(id)arg1;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
@property(readonly, nonatomic) UITraitCollection *traitCollection;
- (id)_parentTraitCollection;
- (id)_parentTraitEnvironment;
- (Class)_appearanceGuideClass;
- (id)_appearanceContainer;
- (id)_presentedViewControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (void)_setPresentingViewController:(id)arg1;
- (CDStruct_d58201db)__sizeClassPair;
- (void)systemLayoutFittingSizeDidChangeForChildContentContainer:(id)arg1;
- (void)_systemLayoutFittingSizeDidChangeForChildContentContainer:(id)arg1 childViewController:(id)arg2;
- (_Bool)_monitorsSystemLayoutFittingSize;
@property(readonly, nonatomic) struct CGSize preferredContentSize;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)_shouldAdaptFromSizeClassPair:(CDStruct_d58201db)arg1 toSizeClassPair:(CDStruct_d58201db)arg2;
- (long long)adaptivePresentationStyle;
@property(readonly, nonatomic) long long presentationStyle;
- (id)_preferredAnimationControllerForDismissal;
- (id)_preferredAnimationControllerForPresentation;
- (_Bool)_forcesPreferredAnimationControllers;
- (id)presentedView;
- (struct CGRect)_frameOfPresentedViewControllerViewInSuperview;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (void)_transitionFromDidEnd;
- (void)_transitionFromWillBegin;
- (void)_transitionToDidEnd;
- (void)_transitionToWillBegin;
- (void)containerViewDidLayoutSubviews;
- (void)containerViewWillLayoutSubviews;
- (void)_containerViewWillLayoutSubviews;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (void)_initViewHierarchyForPresentationSuperview:(id)arg1;
- (struct CGRect)_frameForChildContentContainer:(id)arg1;
- (void)dealloc;
- (id)_descriptionForPrintingViewControllerHierarchy;
- (void)runTransitionForCurrentState;
- (struct UIEdgeInsets)_baseContentInsets;
- (id)_fullscreenPresentationSuperview;
- (id)_currentContextPresentationSuperview;
- (_Bool)_shouldGrabPresentersView;
- (_Bool)shouldRemovePresentersView;
- (_Bool)shouldPresentInFullscreen;
- (_Bool)_shouldRespectDefinesPresentationContext;
- (id)_childPresentationController;
- (id)_firstCurrentContextChildInWindow;
- (id)_parentPresentationControllerImmediate:(_Bool)arg1;
- (id)_parentPresentationController;
- (struct CGRect)_fullscreenFrameForViewController:(id)arg1 inWindow:(id)arg2 transitionView:(id)arg3;
- (void)_transitionToPresentationController:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_dismissWithAnimationController:(id)arg1 interactionController:(id)arg2 target:(id)arg3 didEndSelector:(SEL)arg4;
- (void)_presentWithAnimationController:(id)arg1 interactionController:(id)arg2 target:(id)arg3 didEndSelector:(SEL)arg4;
- (void)_adjustOrientationIfNecessaryInWindow:(id)arg1 forViewController:(id)arg2 preservingViewController:(id)arg3;
- (_Bool)_presentationPotentiallyUnderlapsStatusBar;
- (void)_cleanup;
- (void)transitionDidFinish:(_Bool)arg1;
- (struct CGRect)_frameForViewController:(id)arg1 inWindow:(id)arg2 transitionView:(id)arg3 fromViewController:(id)arg4;
- (_Bool)_shouldDisableInteractionDuringTransitions;
- (_Bool)_preserveResponderAcrossWindows;
- (_Bool)_shouldKeepCurrentFirstResponder;
- (_Bool)_shouldChangeStatusBarViewController;
- (_Bool)_shouldDisablePresentersAppearanceCallbacks;
- (_Bool)_isAdapted;
- (_Bool)_transitioningTo;
- (_Bool)_transitioningFrom;
- (_Bool)dismissed;
- (_Bool)dismissing;
- (_Bool)presented;
- (_Bool)presenting;
- (void)transitionDidStart;
- (struct CGSize)_flipSize:(struct CGSize)arg1;
- (void)_transplantView:(id)arg1 toSuperview:(id)arg2;
- (void)_transplantView:(id)arg1 toSuperview:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_performBlockWithoutTriggeringResponderEvents:(CDUnknownBlockType)arg1;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPopoverPresentationController : UIPresentationController <UIDimmingViewDelegate, UIGestureRecognizerDelegatePrivate>
{
    UIViewController *_contentViewController;
    UIViewController *_splitParentController;
    _UIPopoverView *_popoverView;
    UIDimmingView *_dimmingView;
    UIView *_layoutConstraintView;
    struct CGRect _targetRectInEmbeddingView;
    UIBarButtonItem *_targetBarButtonItem;
    unsigned long long _currentArrowDirection;
    long long _popoverBackgroundStyle;
    UIColor *_backgroundColor;
    _UIPopoverLayoutInfo *_preferredLayoutInfo;
    Class _popoverBackgroundViewClass;
    struct CGSize _popoverContentSize;
    struct CGRect _targetRectInContainerView;
    struct CGRect _embeddedTargetRect;
    long long _popoverControllerStyle;
    _Bool _ignoresKeyboardNotifications;
    unsigned int draggingChildScrollViewCount;
    id _target;
    SEL _didEndSelector;
    UIViewController *_modalPresentationFromViewController;
    UIViewController *_modalPresentationToViewController;
    unsigned long long _toViewAutoResizingMask;
    UIViewController *_slidingViewController;
    _Bool _isLayoutDisabled;
    _Bool _useSourceViewBoundsAsSourceRect;
    UIView *_presentingView;
    unsigned long long _presentationEdge;
    long long _presentationDirection;
    int _presentationState;
    _Bool _didPresentInActiveSequence;
    unsigned long long _slideTransitionCount;
    UIPanGestureRecognizer *_vendedGestureRecognizer;
    UIPanGestureRecognizer *_dimmingViewGestureRecognizer;
    CDStruct_4a475a17 _popoverControllerFlags;
    _Bool _isDismissingBecauseDimmingViewTapped;
    _Bool _allowResizePastTargetRect;
    _Bool _dismissesOnRotation;
    _Bool _showsTargetRect;
    _Bool _showsOrientationMarker;
    _Bool _showsPresentationArea;
    _Bool _retainsSelfWhilePresented;
    _Bool __centersPopoverIfSourceViewNotSet;
    _Bool __shouldHideArrow;
    unsigned long long _permittedArrowDirections;
    UIView *_sourceView;
    UIBarButtonItem *_barButtonItem;
    unsigned long long _popoverArrowDirection;
    double __dimmingViewTopEdgeInset;
    struct UIEdgeInsets _popoverLayoutMargins;
    struct CGRect _sourceRect;
}

+ (void)_setAlwaysAllowPopoverPresentations:(_Bool)arg1;
+ (_Bool)_alwaysAllowPopoverPresentations;
+ (_Bool)_forceAttemptsToAvoidKeyboard;
+ (struct UIEdgeInsets)_defaultPopoverLayoutMarginsForPopoverControllerStyle:(long long)arg1 andContentViewController:(id)arg2;
+ (Class)_popoverViewClass;
+ (_Bool)_showTargetRectPref;
@property(nonatomic, setter=_setDimmingViewTopEdgeInset:) double _dimmingViewTopEdgeInset; // @synthesize _dimmingViewTopEdgeInset=__dimmingViewTopEdgeInset;
@property(nonatomic, getter=_shouldHideArrow, setter=_setShouldHideArrow:) _Bool _shouldHideArrow; // @synthesize _shouldHideArrow=__shouldHideArrow;
@property(nonatomic, getter=_centersPopoverIfSourceViewNotSet, setter=_setCentersPopoverIfSourceViewNotSet:) _Bool _centersPopoverIfSourceViewNotSet; // @synthesize _centersPopoverIfSourceViewNotSet=__centersPopoverIfSourceViewNotSet;
@property(nonatomic) unsigned long long popoverArrowDirection; // @synthesize popoverArrowDirection=_popoverArrowDirection;
@property(retain, nonatomic) UIBarButtonItem *barButtonItem; // @synthesize barButtonItem=_barButtonItem;
@property(nonatomic) struct CGRect sourceRect; // @synthesize sourceRect=_sourceRect;
@property(retain, nonatomic) UIView *sourceView; // @synthesize sourceView=_sourceView;
@property(nonatomic) unsigned long long permittedArrowDirections; // @synthesize permittedArrowDirections=_permittedArrowDirections;
@property(nonatomic, getter=_presentationEdge, setter=_setPresentationEdge:) unsigned long long presentationEdge; // @synthesize presentationEdge=_presentationEdge;
@property(nonatomic, getter=_presentingView, setter=_setPresentingView:) UIView *presentingView; // @synthesize presentingView=_presentingView;
@property(retain, nonatomic) _UIPopoverLayoutInfo *preferredLayoutInfo; // @synthesize preferredLayoutInfo=_preferredLayoutInfo;
@property(nonatomic, getter=_retainsSelfWhilePresented, setter=_setRetainsSelfWhilePresented:) _Bool retainsSelfWhilePresented; // @synthesize retainsSelfWhilePresented=_retainsSelfWhilePresented;
@property(nonatomic) _Bool showsPresentationArea; // @synthesize showsPresentationArea=_showsPresentationArea;
@property(nonatomic) _Bool showsOrientationMarker; // @synthesize showsOrientationMarker=_showsOrientationMarker;
@property(nonatomic) _Bool showsTargetRect; // @synthesize showsTargetRect=_showsTargetRect;
@property(retain, nonatomic) Class popoverBackgroundViewClass; // @synthesize popoverBackgroundViewClass=_popoverBackgroundViewClass;
@property(nonatomic) struct UIEdgeInsets popoverLayoutMargins; // @synthesize popoverLayoutMargins=_popoverLayoutMargins;
@property(nonatomic) _Bool dismissesOnRotation; // @synthesize dismissesOnRotation=_dismissesOnRotation;
@property(nonatomic) _Bool allowResizePastTargetRect; // @synthesize allowResizePastTargetRect=_allowResizePastTargetRect;
@property(retain, nonatomic) UIDimmingView *dimmingView; // @synthesize dimmingView=_dimmingView;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)_setContentViewController:(id)arg1 animated:(_Bool)arg2;
- (id)_preferredAnimationControllerForDismissal;
- (id)_preferredAnimationControllerForPresentation;
- (_Bool)_forcesPreferredAnimationControllers;
- (long long)adaptivePresentationStyle;
- (long long)_defaultPresentationStyleForCompactWidth;
- (_Bool)_shouldDisableInteractionDuringTransitions;
- (_Bool)_shouldKeepCurrentFirstResponder;
- (void)containerViewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (struct CGRect)_sourceRect;
- (id)_sourceView;
- (void)_transitionToDidEnd;
- (void)_transitionToWillBegin;
- (void)_transitionFromDidEnd;
- (void)_transitionFromWillBegin;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (id)_exceptionStringForNilSourceViewOrBarButtonItem;
- (id)_popoverHostingWindow;
- (id)_presentationView;
- (struct UIEdgeInsets)_baseContentInsets;
- (_Bool)shouldRemovePresentersView;
- (_Bool)shouldPresentInFullscreen;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (id)presentedView;
- (id)_dimmingView;
- (_Bool)_presentationPotentiallyUnderlapsStatusBar;
- (_Bool)_embedsInView;
- (id)_managingSplitViewController;
- (void)_setManagingSplitViewController:(id)arg1;
- (_Bool)isPresentingOrDismissing;
- (_Bool)_isDismissing;
- (_Bool)_isPresenting;
- (void)_containedViewControllerModalStateChanged;
- (void)_stopWatchingForNotifications;
@property(nonatomic, setter=_setIgnoresKeyboardNotifications:) _Bool _ignoresKeyboardNotifications; // @dynamic _ignoresKeyboardNotifications;
- (void)_stopWatchingForScrollViewNotifications;
- (void)_startWatchingForScrollViewNotifications;
- (void)_scrollViewDidEndDragging:(id)arg1;
- (void)_scrollViewWillBeginDragging:(id)arg1;
- (void)_stopWatchingForKeyboardNotifications;
- (void)_startWatchingForKeyboardNotificationsIfNecessary;
- (void)_keyboardStateChanged:(id)arg1;
- (void)_moveAwayFromTheKeyboard:(id)arg1;
- (id)_layoutInfoForCurrentKeyboardState;
- (id)_layoutInfoForCurrentKeyboardStateAndHostingWindow:(id)arg1;
- (id)_layoutInfoFromLayoutInfo:(id)arg1 forCurrentKeyboardStateAndHostingWindow:(id)arg2;
- (_Bool)_attemptsToAvoidKeyboard;
- (void)_stopWatchingForNavigationControllerNotifications:(id)arg1;
- (void)_startWatchingForNavigationControllerNotifications:(id)arg1;
- (void)_newViewControllerWasPushed:(id)arg1;
- (void)_adjustPopoverForNewContentSizeFromViewController:(id)arg1 allowShrink:(_Bool)arg2;
- (void)_newViewControllerWillBePushed:(id)arg1;
- (void)_setGesturesEnabled:(_Bool)arg1;
- (void)dimmingViewWasTapped:(id)arg1;
- (void)_dismissPopoverAnimated:(_Bool)arg1 stateOnly:(_Bool)arg2 notifyDelegate:(_Bool)arg3;
- (void)_postludeForDismissal;
- (CDUnknownBlockType)_completionBlockForDismissalWhenNotifyingDelegate:(_Bool)arg1;
- (void)_setContentViewController:(id)arg1 backgroundStyle:(long long)arg2 animated:(_Bool)arg3;
- (long long)_popoverBackgroundStyle;
- (void)_setPopoverBackgroundStyle:(long long)arg1;
- (_Bool)_manuallyHandlesContentViewControllerAppearanceCalls;
- (long long)_popoverControllerStyle;
- (void)_performHierarchyCheckOnViewController:(id)arg1;
- (void)_transitionFromViewController:(id)arg1 toViewController:(id)arg2 animated:(_Bool)arg3;
- (double)_dismissalAnimationDuration;
- (double)_presentationAnimationDuration;
- (struct CGSize)_currentPopoverContentSize;
- (id)_splitParentController;
- (void)_setSplitParentController:(id)arg1;
- (void)_setPopoverView:(id)arg1;
- (_Bool)_isShimmingPopoverControllerPresentation;
- (id)popoverView;
- (void)_commonPresentPopoverFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4;
- (struct CGPoint)_centerPointForScale:(double)arg1 frame:(struct CGRect)arg2 anchor:(struct CGPoint)arg3;
- (void)_invalidateLayoutInfo;
- (void)_resetSlideTransitionCount;
- (void)_incrementSlideTransitionCount:(_Bool)arg1;
- (unsigned long long)_slideTransitionCount;
- (void)_setPresentationState:(int)arg1;
- (int)_presentationState;
- (Class)_defaultChromeViewClass;
- (Class)_popoverLayoutInfoForChromeClass:(Class)arg1;
- (_Bool)_popoverBackgroundViewWantsDefaultContentAppearance;
@property(copy, nonatomic) NSArray *passthroughViews;
@property(copy, nonatomic) UIColor *backgroundColor;
@property(readonly, nonatomic) unsigned long long arrowDirection;
- (_Bool)isPopoverVisible;
- (void)setPopoverContentSize:(struct CGSize)arg1 animated:(_Bool)arg2;
- (void)setPopoverContentSize:(struct CGSize)arg1;
- (struct CGSize)popoverContentSize;
- (void)setPopoverFrame:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <UIPopoverPresentationControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIPrintActivity : UIActivity
{
    UIViewController *_wrapperViewController;
}

@property(retain) UIViewController *wrapperViewController; // @synthesize wrapperViewController=_wrapperViewController;
- (id)printInteractionControllerParentViewController:(id)arg1;
- (void)activityDidFinish:(_Bool)arg1;
- (id)printInteractionController;
- (void)_cleanup;
- (void)cancelPrintOptions;
- (void)performActivity;
- (id)_embeddedActivityViewController;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)activityTitle;
- (id)_activityImage;
- (id)activityType;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIPrintActivityWrapperNavigationController : UINavigationController
{
    CDUnknownBlockType _completionHandler;
    _Bool _presentedPrintInteractionController;
}

@property(nonatomic) _Bool presentedPrintInteractionController; // @synthesize presentedPrintInteractionController=_presentedPrintInteractionController;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithCompletion:(CDUnknownBlockType)arg1;

@end

@interface UIPrintInfo : NSObject <NSCopying, NSCoding>
{
    NSString *_printerID;
    NSString *_jobName;
    long long _outputType;
    long long _orientation;
    long long _duplex;
    long long _copies;
    _Bool _scaleUp;
}

+ (id)printInfoWithDictionary:(id)arg1;
+ (id)printInfo;
@property(nonatomic) _Bool scaleUp; // @synthesize scaleUp=_scaleUp;
@property(nonatomic) long long copies; // @synthesize copies=_copies;
@property(nonatomic) long long duplex; // @synthesize duplex=_duplex;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) long long outputType; // @synthesize outputType=_outputType;
@property(copy, nonatomic) NSString *jobName; // @synthesize jobName=_jobName;
@property(copy, nonatomic) NSString *printerID; // @synthesize printerID=_printerID;
- (void)dealloc;
- (id)_createPrintSettingsForPrinter:(id)arg1;
- (void)_updateWithPrinter:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)dictionaryRepresentation;
- (id)_initWithDictionary:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIPrintInfoRequest : NSObject
{
    PKPrinter *_printer;
    int _requestState;
    CDUnknownBlockType _completionHandler;
}

+ (id)requestInfoForPrinter:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) int requestState; // @synthesize requestState=_requestState;
- (void)requestPrintInfo;
- (void)dealloc;

@end

@interface UIPrintInteractionController : NSObject
{
    _Bool _hidesNumberOfCopies;
    CDUnknownBlockType _completionHandler;
    unsigned long long _backgroundTaskIdentifier;
    id _printState;
    _Bool _showsPageRange;
    _Bool _showsPaperSelectionForLoadedPapers;
    UIPrintInfo *_printInfo;
    id <UIPrintInteractionControllerDelegate> _delegate;
    UIPrintPaper *_printPaper;
    UIPrintPageRenderer *_printPageRenderer;
    UIPrintFormatter *_printFormatter;
    id _printingItem;
    NSArray *_printingItems;
    id <UIPrintInteractionControllerDelegate> _printActivityDelegate;
}

+ (id)sharedPrintController;
+ (_Bool)canPrintData:(id)arg1;
+ (_Bool)canPrintURL:(id)arg1;
+ (id)printableUTIs;
+ (_Bool)isPrintingAvailable;
@property(nonatomic) id <UIPrintInteractionControllerDelegate> printActivityDelegate; // @synthesize printActivityDelegate=_printActivityDelegate;
@property(copy, nonatomic) NSArray *printingItems; // @synthesize printingItems=_printingItems;
@property(copy, nonatomic) id printingItem; // @synthesize printingItem=_printingItem;
@property(retain, nonatomic) UIPrintFormatter *printFormatter; // @synthesize printFormatter=_printFormatter;
@property(retain, nonatomic) UIPrintPageRenderer *printPageRenderer; // @synthesize printPageRenderer=_printPageRenderer;
@property(readonly, nonatomic) UIPrintPaper *printPaper; // @synthesize printPaper=_printPaper;
@property(nonatomic) _Bool showsPaperSelectionForLoadedPapers; // @synthesize showsPaperSelectionForLoadedPapers=_showsPaperSelectionForLoadedPapers;
@property(nonatomic) _Bool showsPageRange; // @synthesize showsPageRange=_showsPageRange;
@property(nonatomic) id <UIPrintInteractionControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIPrintInfo *printInfo; // @synthesize printInfo=_printInfo;
- (void)_endPrintJob:(_Bool)arg1 error:(id)arg2;
- (id)_printPageRenderer:(id)arg1;
- (id)_printItem:(id)arg1;
- (void)_printPage;
- (void)_startPrinting;
- (void)_updatePrintPaper;
- (id)_paperForContentType:(long long)arg1;
- (id)_paperForPDFItem:(id)arg1 withDuplexMode:(long long)arg2;
- (void)_preparePrintInfo;
- (void)_printPanelDidDismiss;
- (void)_setPrintInfoState:(int)arg1;
- (void)_printPanelWillDismiss:(_Bool)arg1;
- (void)_printPanelDidPresent;
- (_Bool)_setupPrintPanel:(CDUnknownBlockType)arg1;
- (void)_updatePageCount;
@property(retain, nonatomic) UIPrintPaper *paper;
@property(retain, nonatomic) PKPrinter *printer;
@property(nonatomic) struct _NSRange pageRange;
@property(readonly, nonatomic) long long pageCount;
@property(nonatomic) _Bool showsNumberOfCopies;
- (_Bool)_canShowCopies;
- (_Bool)_canShowPaperList;
- (_Bool)_canShowPageRange;
- (_Bool)_canShowDuplex;
- (struct CGSize)_printItemContentSize;
- (id)_currentPrintInfo;
- (void)_cleanPrintState;
- (void)dismissAnimated:(_Bool)arg1;
- (_Bool)printToPrinter:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)presentFromBarButtonItem:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)presentFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)presentAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)_init;
- (id)init;
- (oneway void)release;
- (void)_cancelManualPrintPage;
- (void)_manualPrintPage;
- (void)_enableManualPrintPage:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrintInteractionControllerInternals : NSObject
{
    long long _pageCount;
    struct _NSRange _pageRange;
    long long _currentPage;
    UIPrintPanelViewController *_printPanelViewController;
    UIPrintingProgress *_printingProgress;
    PKPrinter *_printer;
    UIPrintPaper *_paper;
    PKPrintSettings *_printSettings;
    UIPrintInfo *_activePrintInfo;
    int _printInfoState;
    _Bool _supressNotifyDismissed;
    UIPrintPageRenderer *_formatterRenderer;
    _Bool _manualPrintPageEnabled;
}

- (void)dealloc;

@end

@interface UIPrintPageRenderer : NSObject
{
    double _headerHeight;
    double _footerHeight;
    struct CGRect _paperRect;
    struct CGRect _printableRect;
    NSMutableArray *_printFormatters;
    struct CGContext *_printContext;
}

@property(copy, nonatomic) NSArray *printFormatters; // @synthesize printFormatters=_printFormatters;
@property(nonatomic) struct CGRect printableRect; // @synthesize printableRect=_printableRect;
@property(nonatomic) struct CGRect paperRect; // @synthesize paperRect=_paperRect;
@property(nonatomic) double footerHeight; // @synthesize footerHeight=_footerHeight;
@property(nonatomic) double headerHeight; // @synthesize headerHeight=_headerHeight;
- (void)_endPrintContext:(id)arg1 success:(_Bool)arg2;
- (void)_drawPage:(long long)arg1;
- (_Bool)_startPrintContext:(id)arg1 printSettings:(id)arg2;
- (void)drawFooterForPageAtIndex:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)drawContentForPageAtIndex:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)drawHeaderForPageAtIndex:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)drawPrintFormatter:(id)arg1 forPageAtIndex:(long long)arg2;
- (void)drawPageAtIndex:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)prepareForDrawingPages:(struct _NSRange)arg1;
- (long long)numberOfPages;
- (long long)_maxFormatterPage;
- (void)_removePrintFormatter:(id)arg1;
- (id)printFormattersForPageAtIndex:(long long)arg1;
- (void)addPrintFormatter:(id)arg1 startingAtPageAtIndex:(long long)arg2;
- (void)dealloc;

@end

@interface UITableViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
{
    long long _tableViewStyle;
    id _keyboardSupport;
    id _staticDataSource;
    struct {
        unsigned int clearsSelectionOnViewWillAppear:1;
        unsigned int insetsApplied:1;
        unsigned int adjustingInsets:1;
    } _tableViewControllerFlags;
    _UIFilteredDataSource *_filteredDataSource;
    long long _filteredDataType;
}

- (void)_refreshFilteredDataSourceFilterTypeForScreen:(id)arg1;
- (void)_setFilteredDataType:(long long)arg1;
- (long long)_filteredDataType;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 indentationLevelForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)_adjustTableForKeyboardInfo:(id)arg1;
@property(retain, nonatomic) UIRefreshControl *refreshControl;
- (_Bool)_viewControllerWasSelected;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)_resolvedDataSourceFilterTypeForScreen:(id)arg1;
- (void)loadView;
- (void)_applyDefaultDataSourceToTable:(id)arg1;
@property(nonatomic) _Bool clearsSelectionOnViewWillAppear;
@property(retain, nonatomic) UITableView *tableView;
- (id)_existingTableView;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)init;
@property(retain, nonatomic, getter=_staticDataSource, setter=_setStaticDataSource:) UITableViewDataSource *staticDataSource;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrintPanelTableViewController : UITableViewController
{
    UIPrintPanelViewController *_printPanelViewController;
    long long _rangeRow;
    long long _copiesRow;
    long long _duplexRow;
    long long _paperRow;
    _Bool _contactingPrinter;
    _Bool _printerWarningWasShown;
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)updateDuplex:(id)arg1;
- (void)updateCopies:(id)arg1;
- (void)updatePageRange:(struct _NSRange)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)clearPrintPanelViewController;
- (void)setShowContactingPrinter:(_Bool)arg1;
- (void)showContacting;
- (void)showCancelButton;
- (void)dealloc;
- (id)initWithPrintPanelViewController:(id)arg1;
- (void)_updateSize;
- (void)_update:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrintPanelViewController : NSObject <UIPrinterBrowserOwner>
{
    UIPrintInteractionController *_printInteractionController;
    UIPrintInfo *_observedPrintInfo;
    UINavigationController *_navigationController;
    UIPrintPanelTableViewController *_tableViewController;
    UIViewController *_parentController;
    UIPopoverController *_poverController;
    UIWindow *_window;
    PKPrinter *_printer;
    _Bool _dismissed;
    _Bool _animated;
    _Bool _observingRotation;
    _Bool _parentHasNoPopover;
}

@property(retain, nonatomic) PKPrinter *printer; // @synthesize printer=_printer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (_Bool)filtersPrinters;
@property(readonly, nonatomic) _Bool showPaperSelection;
@property(readonly, nonatomic) _Bool showPrinterWarning;
@property(readonly, nonatomic) _Bool showPaper;
@property(readonly, nonatomic) _Bool showCopies;
@property(readonly, nonatomic) _Bool showPageRange;
@property(readonly, nonatomic) _Bool showDuplex;
@property(retain, nonatomic) UIPrintPaper *paper;
@property(readonly, nonatomic) NSArray *paperList;
- (id)_removeRollsFrom:(id)arg1;
@property(nonatomic) long long copies;
@property(nonatomic) struct _NSRange pageRange;
@property(readonly, nonatomic) long long pageCount;
@property(nonatomic) _Bool duplex;
- (void)controllerDidDisappear;
- (void)cancelPrinting;
- (void)startPrinting;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)dismissPrintPanel:(_Bool)arg1 animated:(_Bool)arg2;
- (void)presentPrintPanelFromBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (void)presentPrintPanelFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (void)presentPrintPanelAnimated:(_Bool)arg1;
- (void)_keyWindowWillRotate:(id)arg1;
- (void)_presentWindow;
- (void)_presentInParentAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)initWithPrintInterationController:(id)arg1 inParentController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrintPanelWindow : UIWindow
{
}

- (_Bool)_canAffectStatusBarAppearance;

@end

@interface UIPrintPaper : NSObject
{
    int _paperOrientation;
    id _internal;
}

+ (id)_defaultPaperForOutputType:(long long)arg1;
+ (id)_defaultPaperListForOutputType:(long long)arg1;
+ (id)_defaultPKPaperForOuptutType:(long long)arg1;
+ (id)_readyPaperListForPrinter:(id)arg1 withDuplexMode:(long long)arg2 forContentType:(long long)arg3 contentSize:(struct CGSize)arg4;
+ (id)bestPaperForPageSize:(struct CGSize)arg1 andContentType:(long long)arg2 withPapersFromArray:(id)arg3;
+ (id)bestPaperForPageSize:(struct CGSize)arg1 withPapersFromArray:(id)arg2;
- (int)_paperOrientation;
- (void)_setPaperOrientation:(int)arg1;
- (id)_localizedMediaTypeName;
- (id)_localizedName;
- (id)description;
- (id)_pkPaper;
- (struct CGRect)_printableRectForDuplex:(_Bool)arg1;
@property(readonly) struct CGRect printableRect;
@property(readonly) struct CGSize paperSize;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (void)_updatePKPaper:(id)arg1;
- (id)_initWithPrintKitPaper:(id)arg1;
- (struct CGRect)printRect;

@end

__attribute__((visibility("hidden")))
@interface UIPrintPaperViewController : UITableViewController
{
    UIPrintPanelViewController *_printPanelViewController;
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)loadView;
- (void)adjustPopoverSize;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (id)initWithPrintPanelViewController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrintRangePickerView : UIPickerView
{
    double _shift;
}

- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)layoutSubviews;
- (double)_wheelShift;

@end

__attribute__((visibility("hidden")))
@interface UIPrintRangeViewController : UIViewController <UIPickerViewDataSource, UIPickerViewDelegate, UITableViewDataSource, UITableViewDelegate>
{
    UIPrintPanelViewController *_printPanelViewController;
    long long _pageCount;
    struct _NSRange _pageRange;
    UIPickerView *_fromPicker;
    UIPickerView *_toPicker;
    UITableView *_tableView;
    double _pickerWidth;
}

- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithPrintPanelViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrintStatusJobTableViewCell : UITableViewCell
{
    UIActivityIndicatorView *_activityIndicator;
}

- (void)layoutSubviews;
@property(nonatomic) _Bool showActive;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrintStatusJobsViewController : UITableViewController
{
    NSArray *_jobs;
    _Bool _autoPush;
    UIPrintingMessageView *_noJobsView;
}

- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willReappear;
- (void)handleJobListDidChange;
- (void)updateJobInfo:(id)arg1;
- (void)updateTableViewCell:(id)arg1 withJob:(id)arg2;
- (id)visibleJobs;
- (void)updateForJobCountChange;
- (void)pushSingleJobAnimated:(_Bool)arg1;
- (void)pushJob:(id)arg1 animated:(_Bool)arg2;
- (void)loadView;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIPrintStatusTableViewCell : UITableViewCell
{
    UIActivityIndicatorView *_activityIndicator;
    UILabel *_titleLabel;
    UILabel *_hostLabel;
}

@property(retain, nonatomic) UILabel *hostLabel; // @synthesize hostLabel=_hostLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)layoutSubviews;
@property(nonatomic) _Bool showActive;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrintStatusTableViewController : UITableViewController
{
    PKJob *_printJob;
    NSDateFormatter *_sentFormatter;
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)updateJobInfo;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)cancelPrinting;
- (void)popToJobsView;
- (void)updateCancelButton;
- (void)loadView;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;
- (id)initWithJob:(id)arg1;

@end

@interface UIPrintStatusViewController : UINavigationController
{
    UIPopoverController *_poverController;
    id <UIPrintStatusDelegate> _printStatusDelegate;
}

@property(nonatomic) id <UIPrintStatusDelegate> printStatusDelegate; // @synthesize printStatusDelegate=_printStatusDelegate;
- (void)jobDidCancel;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)presentPrintStatusFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (id)printStatusView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;

@end

@interface UIPrinter : NSObject
{
    id _printerInfo;
    NSURL *URL;
}

+ (id)printerWithURL:(id)arg1;
@property(readonly, copy) NSURL *URL; // @synthesize URL;
- (id)_internalPrinter;
- (void)contactPrinter:(CDUnknownBlockType)arg1;
@property(readonly) _Bool supportsDuplex;
@property(readonly) _Bool supportsColor;
@property(readonly, copy) NSString *makeAndModel;
@property(readonly) long long supportedJobTypes;
@property(readonly, copy) NSString *displayLocation;
@property(readonly, copy) NSString *displayName;
- (id)init;
- (id)_initWithPrinter:(id)arg1;
- (id)_initWithURL:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterBrowserViewController : UITableViewController <PKPrinterBrowserDelegate>
{
    id <UIPrinterBrowserOwner> _ownerPanelViewController;
    PKPrinterBrowser *_printerBrowser;
    NSMutableArray *_preferredPrinters;
    NSMutableArray *_otherPrinters;
    NSMutableArray *_filteredOutPrinters;
    NSArray *_lastUsedPrinters;
    PKPrinter *_lockedPrinter;
    _Bool _loaded;
    UIPrinterSearchingView *_searchingView;
    _Bool _clearCurrentPrinter;
    _Bool _shouldFilterPrinters;
    double _maximumPopoverHeight;
}

@property double maximumPopoverHeight; // @synthesize maximumPopoverHeight=_maximumPopoverHeight;
- (void)showCancelButton;
- (void)removePrinter:(id)arg1 moreGoing:(_Bool)arg2;
- (void)addPrinter:(id)arg1 moreComing:(_Bool)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)printerAtIndexPath:(id)arg1;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willEnterForeground;
- (void)updateSearching;
- (void)stopPrinterBrowser;
- (void)startPrinterBrowser;
- (void)loadView;
- (void)adjustPopoverSize;
- (void)selectPrinter:(id)arg1;
- (void)dealloc;
- (id)initWithOwnerViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterInternals : NSObject
{
    PKPrinter *_printer;
}

- (void)dealloc;

@end

@interface UIPrinterPickerController : NSObject
{
    unsigned long long _backgroundTaskIdentifier;
    CDUnknownBlockType _completionHandler;
    id _state;
    UIPrinter *_selectedPrinter;
    id <UIPrinterPickerControllerDelegate> _delegate;
}

+ (id)printerPickerControllerWithInitiallySelectedPrinter:(id)arg1;
@property(nonatomic) id <UIPrinterPickerControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIPrinter *selectedPrinter; // @synthesize selectedPrinter=_selectedPrinter;
- (void)dismissAnimated:(_Bool)arg1;
- (_Bool)_shouldShowPrinter:(id)arg1;
- (_Bool)_delegateFiltersPrinters;
- (void)_printerPickerDidDismiss;
- (void)_printerPickerWillDismiss;
- (void)_printerPickerDidPresent;
- (_Bool)_setupPickerPanel:(CDUnknownBlockType)arg1;
- (_Bool)presentFromBarButtonItem:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)presentFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)presentAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)_init;
- (id)init;
- (oneway void)release;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterPickerControllerInternals : NSObject
{
    UIPrinterPickerViewController *_printerPickerViewController;
    _Bool _supressNotifyDismissed;
}

- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterPickerViewController : UIViewController <UIPrinterBrowserOwner, UINavigationControllerDelegate>
{
    UIPrinterPickerController *_printerPickerController;
    UINavigationController *_navigationController;
    UIPrinterBrowserViewController *_printerBrowserViewController;
    UIViewController *_parentController;
    UIViewController *_originalViewControllerInNav;
    UIPopoverController *_poverController;
    UIWindow *_window;
    _Bool _dismissed;
    _Bool _animated;
    _Bool _observingRotation;
    _Bool _parentHasNoPopover;
    _Bool _userSelectedPrinter;
    PKPrinter *_printer;
}

@property _Bool userSelectedPrinter; // @synthesize userSelectedPrinter=_userSelectedPrinter;
@property(retain, nonatomic) PKPrinter *printer; // @synthesize printer=_printer;
- (_Bool)shouldShowPrinter:(id)arg1;
- (_Bool)filtersPrinters;
- (void)controllerDidDisappear;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)cancelPrinting;
- (void)dismissPrinterPickerAnimated:(_Bool)arg1;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)presentPrinterPickerPanelFromBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (void)presentPrinterPickerPanelFromRect:(struct CGRect)arg1 inView:(id)arg2 animated:(_Bool)arg3;
- (void)presentPrinterPickerPanelAnimated:(_Bool)arg1;
- (void)_keyWindowWillRotate:(id)arg1;
- (void)_presentWindow;
- (void)_presentInParentAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)initWithPrinterPickerController:(id)arg1 inParentController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterPickerWindow : UIWindow
{
}

- (_Bool)_canAffectStatusBarAppearance;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSearchingView : UIView
{
    UILabel *_searchingLabel;
    UIActivityIndicatorView *_searchingIndicator;
    NSArray *_searchingLabelConstraints;
}

- (void)setSearching:(_Bool)arg1;
- (void)searchTimeout;
- (void)dealloc;
- (id)initInView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupConfigureViewController : UITableViewController <UITableViewDataSource, UITextFieldDelegate>
{
    _Bool _addToNetwork;
    _Bool _directPrinting;
    PKPrinter *_printer;
    NSString *_directPasscode;
    UIButton *_finishButton;
    UIPrinterSetupConnectingView *_connectingView;
}

@property(retain, nonatomic) UIPrinterSetupConnectingView *connectingView; // @synthesize connectingView=_connectingView;
@property(retain, nonatomic) UIButton *finishButton; // @synthesize finishButton=_finishButton;
@property(copy, nonatomic) NSString *directPasscode; // @synthesize directPasscode=_directPasscode;
@property(nonatomic) _Bool directPrinting; // @synthesize directPrinting=_directPrinting;
@property(nonatomic) _Bool addToNetwork; // @synthesize addToNetwork=_addToNetwork;
@property(retain, nonatomic) PKPrinter *printer; // @synthesize printer=_printer;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textDidChange:(id)arg1;
- (void)finish;
- (void)finished:(_Bool)arg1;
- (void)toggleDirectPrinting:(id)arg1;
- (void)toggleAddToNetwork:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithPrinter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupConnectingView : UIView
{
    UILabel *_label;
    UIActivityIndicatorView *_activityIndicator;
    double _presentationTime;
}

@property(nonatomic) double presentationTime; // @synthesize presentationTime=_presentationTime;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
- (void)setMessage:(id)arg1 active:(_Bool)arg2;
- (void)willMoveToSuperview:(id)arg1;
- (void)presentView;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupDisplayPINView : UIView
{
    UILabel *_titleLabel;
    UIButton *_nextButton;
}

@property(retain, nonatomic) UIButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)setMessage:(id)arg1 showButton:(_Bool)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupDisplayPINViewController : UIViewController
{
    PKPrinter *_printer;
}

@property(retain, nonatomic) PKPrinter *printer; // @synthesize printer=_printer;
- (void)enterPIN;
- (void)viewDidAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)showDisplayMessage:(long long)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithPrinter:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupPINScrollView : UIScrollView
{
    UIView *_contentView;
    double _visibleHeight;
}

@property(nonatomic) double visibleHeight; // @synthesize visibleHeight=_visibleHeight;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (_Bool)_scrollsToMakeFirstResponderVisible;
- (void)layoutSubviews;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)dealloc;
- (id)initWithContentView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupPINView : UIControl <UITextFieldDelegate>
{
    UILabel *_titleLabel;
    UILabel *_enterLabel;
    UIPasscodeField *_passcodeField;
    UITextField *_textEntryField;
    UILabel *_failedLabel;
    UIImageView *_failedBackground;
    long long _failedAttemptCount;
}

@property(nonatomic) long long failedAttemptCount; // @synthesize failedAttemptCount=_failedAttemptCount;
@property(retain, nonatomic) UIImageView *failedBackground; // @synthesize failedBackground=_failedBackground;
@property(retain, nonatomic) UILabel *failedLabel; // @synthesize failedLabel=_failedLabel;
@property(retain, nonatomic) UITextField *textEntryField; // @synthesize textEntryField=_textEntryField;
@property(retain, nonatomic) UIPasscodeField *passcodeField; // @synthesize passcodeField=_passcodeField;
@property(retain, nonatomic) UILabel *enterLabel; // @synthesize enterLabel=_enterLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)textDidChange:(id)arg1;
- (void)showSuccess:(_Bool)arg1;
- (id)PIN;
- (void)stopPINInput;
- (void)startPINInput;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithPrinterName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterSetupPINViewController : UIViewController
{
    PKPrinter *_printer;
    UIPrinterSetupConnectingView *_connectingView;
    UIPrinterSetupPINView *_PINView;
    UIScrollView *_scrollView;
}

@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) UIPrinterSetupPINView *PINView; // @synthesize PINView=_PINView;
@property(retain, nonatomic) UIPrinterSetupConnectingView *connectingView; // @synthesize connectingView=_connectingView;
@property(retain, nonatomic) PKPrinter *printer; // @synthesize printer=_printer;
- (void)connectToPrinter;
- (void)connected:(_Bool)arg1;
- (void)showFailure;
- (void)showSetup;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithPrinter:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIPrinterTableViewCell : UITableViewCell
{
    int _printerState;
    UIActivityIndicatorView *_activityIndicator;
}

@property(nonatomic) int printerState; // @synthesize printerState=_printerState;

@end

__attribute__((visibility("hidden")))
@interface UIPrintingMessageView : UIView
{
    UILabel *_title;
    UILabel *_message;
}

- (void)setMessage:(id)arg1;
- (void)dealloc;
- (id)initInView:(id)arg1 title:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIPrintingProgress : NSObject
{
    NSString *_printerName;
    CDUnknownBlockType _cancelHandler;
    double _startTime;
    double _displayTime;
    UIAlertView *_alert;
    UIPrintingProgressViewController *_viewController;
    _Bool _donePrinting;
    _Bool _forceDisplayAsAlert;
}

- (double)nextPrintDelay;
- (void)setPage:(long long)arg1 ofPage:(long long)arg2;
- (void)setPrintInfoState:(int)arg1;
- (void)endProgress;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)didPresentAlertView:(id)arg1;
- (void)progressCancel;
- (void)hideProgressAnimated:(_Bool)arg1;
- (void)showProgress:(id)arg1 immediately:(_Bool)arg2;
- (_Bool)progressVisible;
- (void)dealloc;
- (id)initWithPrinterName:(id)arg1 forceDisplayAsAlert:(_Bool)arg2 cancelHandler:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIPrintingProgressViewController : UITableViewController
{
    UIPrintingProgress *_printingProgress;
    UIPrintingMessageView *_messageView;
    UINavigationController *_navController;
    UIWindow *_window;
    double _rotationDelay;
}

- (double)rotationDelay;
- (_Bool)visible;
- (void)dismissAnimated:(_Bool)arg1;
- (void)cleanupAfterDismiss;
- (void)show;
- (void)setDonePrinting:(_Bool)arg1;
- (void)setMessage:(id)arg1;
- (void)cancelProgress;
- (void)doneProgress;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 message:(id)arg2 printingProgress:(id)arg3;

@end

@interface UIProgressHUD : UIView
{
    UIProgressIndicator *_progressIndicator;
    UILabel *_progressMessage;
    UIImageView *_doneView;
    UIWindow *_parentWindow;
    struct {
        unsigned int isShowing:1;
        unsigned int isShowingText:1;
        unsigned int fixedFrame:1;
        unsigned int reserved:30;
    } _progressHUDFlags;
}

- (void)dealloc;
- (void)done;
- (void)hide;
- (void)showInView:(id)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFontSize:(int)arg1;
- (void)setShowsText:(_Bool)arg1;
- (void)setText:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_progressIndicator;
- (void)show:(_Bool)arg1;
- (id)initWithWindow:(id)arg1;

@end

@interface UIProgressIndicator : UIActivityIndicatorView
{
}

+ (struct CGSize)size;
- (void)stopAnimation;
- (void)startAnimation;
- (void)setAnimating:(_Bool)arg1;
- (void)setStyle:(int)arg1;
@property(nonatomic) int progressIndicatorStyle;

@end

@interface UIProgressView : UIView <NSCoding>
{
    long long _progressViewStyle;
    float _progress;
    long long _barStyle;
    UIColor *_progressTintColor;
    UIColor *_trackTintColor;
    UIImageView *_trackView;
    UIImageView *_progressView;
    _Bool _isAnimating;
    NSArray *_trackColors;
    NSArray *_progressColors;
    UIImage *_trackImage;
    UIImage *_progressImage;
}

+ (id)_tintedImageForHeight:(double)arg1 andColors:(id)arg2;
+ (id)_tintedImageForHeight:(double)arg1 andColors:(id)arg2 roundingRectCorners:(unsigned long long)arg3;
+ (CDStruct_d58a15aa)_standardImagesForStyle:(long long)arg1 barStyle:(long long)arg2;
+ (int)_indexForStyle:(long long)arg1 barStyle:(long long)arg2;
+ (struct CGSize)defaultSize;
@property(retain, nonatomic) UIColor *trackTintColor; // @synthesize trackTintColor=_trackTintColor;
@property(retain, nonatomic) UIColor *progressTintColor; // @synthesize progressTintColor=_progressTintColor;
@property(retain, nonatomic) UIImage *progressImage; // @synthesize progressImage=_progressImage;
@property(retain, nonatomic) UIImage *trackImage; // @synthesize trackImage=_trackImage;
@property(nonatomic) float progress; // @synthesize progress=_progress;
@property(nonatomic) long long progressViewStyle; // @synthesize progressViewStyle=_progressViewStyle;
- (void)_setProgressColor:(id)arg1;
- (id)_progressColor;
- (void)_setProgressAnimated:(float)arg1 duration:(double)arg2 delay:(double)arg3 options:(unsigned long long)arg4;
- (void)setProgress:(float)arg1 animated:(_Bool)arg2;
- (void)_setProgress:(float)arg1;
- (void)tintColorDidChange;
- (void)layoutSubviews;
- (void)_updateImages;
- (unsigned long long)_roundedCornersForProgressForCurrentStyle;
- (unsigned long long)_roundedCornersForTrackForCurrentStyle;
- (id)_defaultTrackColorForCurrentStyle;
- (id)_appropriateProgressImage;
- (id)_appropriateTrackImage;
- (_Bool)_shouldTintTrack;
- (_Bool)_shouldTintProgress;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithProgressViewStyle:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setBarStyle:(long long)arg1;
- (long long)barStyle;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;

@end

__attribute__((visibility("hidden")))
@interface UIProxyObject : NSObject <NSCoding>
{
    NSString *proxiedObjectIdentifier;
}

+ (void)removeMappingsForCoder:(id)arg1;
+ (id)mappedObjectForCoder:(id)arg1 withIdentifier:(id)arg2;
+ (void)addMappings:(id)arg1 forCoder:(id)arg2;
+ (void)addMappingFromIdentifier:(id)arg1 toObject:(id)arg2 forCoder:(id)arg3;
+ (struct __CFDictionary *)proxyDecodingMap;
- (id)proxiedObjectIdentifier;
- (void)setProxiedObjectIdentifier:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIPushBehavior : UIDynamicBehavior
{
    double _angle;
    double _magnitude;
    _Bool _active;
    long long _mode;
    struct CGVector _forceVector;
    double _timeInterval;
    NSMutableDictionary *_targetPoints;
    int _i;
}

- (id)description;
- (void)_step;
@property(nonatomic) double magnitude;
@property(nonatomic) double angle;
- (void)setYComponent:(double)arg1;
- (void)setXComponent:(double)arg1;
- (double)yComponent;
- (double)xComponent;
@property(nonatomic) struct CGVector pushDirection;
- (void)setXComponent:(double)arg1 yComponent:(double)arg2;
- (void)setAngle:(double)arg1 magnitude:(double)arg2;
- (void)_dissociate;
- (void)_associate;
- (void)setTargetPoint:(struct CGPoint)arg1 forItem:(id)arg2;
- (struct CGPoint)targetPointForItem:(id)arg1;
- (void)setTargetOffsetFromCenter:(struct UIOffset)arg1 forItem:(id)arg2;
- (struct UIOffset)targetOffsetFromCenterForItem:(id)arg1;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
@property(readonly, nonatomic) long long mode;
@property(nonatomic) _Bool active;
@property(readonly, copy, nonatomic) NSArray *items;
- (id)initWithItems:(id)arg1;
- (id)initWithItems:(id)arg1 mode:(long long)arg2;
- (id)init;
- (void)dealloc;
- (void)_commonInit;

@end

@interface UIReferenceLibraryViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, UINavigationControllerDelegate>
{
    NSString *_term;
    NSArray *_definitionValues;
    UINavigationController *_baseNavController;
    UITableViewController *_multiDefViewController;
    UIViewController *_longDefViewController;
    long long _oldPopoverStyle;
    UIWindow *_rotationDecider;
    CDUnknownBlockType _dismissCompletionHandler;
}

+ (id)_colorAttributes;
+ (id)_dictionaryDefinitionAttributes;
+ (id)_localizedDictionaryTitleAttributes;
+ (id)_pressedButtonImage;
+ (id)_defaultButtonImage;
+ (id)_diddlyDoViewLineColor;
+ (id)_foregroundColor;
+ (id)_backgroundColor;
+ (id)_viewControllerForReferenceWithString:(id)arg1 options:(unsigned long long)arg2;
+ (id)_popoverControllerForReferenceLibraryWithString:(id)arg1;
+ (_Bool)dictionaryHasDefinitionForTerm:(id)arg1;
+ (_Bool)_shouldShowDefineForTerm:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType dismissCompletionHandler; // @synthesize dismissCompletionHandler=_dismissCompletionHandler;
@property(retain, nonatomic, setter=_setRotationDecider:) UIWindow *_rotationDecider; // @synthesize _rotationDecider;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_setPopoverController:(id)arg1;
- (void)viewDidLoad;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_colorAttributes;
- (id)_dictionaryDefinitionAttributes;
- (id)_localizedDictionaryTitleAttributes;
- (id)_pressedButtonImage;
- (id)_defaultButtonImage;
- (id)_diddlyDoViewLineColor;
- (id)_foregroundColor;
- (id)_backgroundColor;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)pushDownloadManager:(id)arg1;
- (void)_installRequiredElementsOnViewController:(id)arg1;
- (void)_dismissModalReferenceView:(id)arg1;
- (void)_searchWeb:(id)arg1;
- (void)dealloc;
- (id)initWithTerm:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIRefreshControl : UIControl
{
    long long _style;
    _UIRefreshControlContentView *_contentView;
    UIScrollView *_scrollView;
    double _refreshControlHeight;
    double _visibleHeight;
    double _snappingHeight;
    double _additionalTopInset;
    _Bool _insetsApplied;
    _Bool _adjustingInsets;
    struct UIEdgeInsets _appliedInsets;
    int _refreshControlState;
}

+ (Class)_contentViewClassForStyle:(long long)arg1;
+ (id)_defaultColor;
@property(readonly, nonatomic) int refreshControlState; // @synthesize refreshControlState=_refreshControlState;
- (void)_setRefreshControlState:(int)arg1 notify:(_Bool)arg2;
- (void)setRefreshControlState:(int)arg1;
- (_Bool)_canTransitionFromState:(int)arg1 toState:(int)arg2;
- (double)_scrollViewHeight;
- (void)setBackgroundColor:(id)arg1;
- (void)_updateConcealingMask;
- (void)endRefreshing;
- (void)beginRefreshing;
- (void)_removeInsetHeight:(double)arg1;
- (void)_addInsetHeight:(double)arg1;
- (void)_removeInsets;
- (void)_addInsets;
- (void)_update;
- (double)_stiffnessForVelocity:(double)arg1;
- (void)_didScroll;
- (double)_visibleHeightForContentOffset:(struct CGPoint)arg1 origin:(struct CGPoint)arg2;
- (struct CGPoint)_originForContentOffset:(struct CGPoint)arg1;
@property(readonly, nonatomic, getter=_appliedInsets) struct UIEdgeInsets appliedInsets;
@property(readonly, nonatomic, getter=_isApplyingInsets) _Bool _applyingInsets;
@property(readonly, nonatomic) double _snappingHeight;
- (void)_updateSnappingHeight;
- (void)_setVisibleHeight:(double)arg1;
- (void)_updateHiddenStateIfNeeded;
- (int)_recomputeNewState;
@property(readonly, nonatomic) double _visibleHeight;
- (void)_resizeToFitContents;
- (id)_attributedTitle;
- (void)_setAttributedTitle:(id)arg1;
- (id)_tintColor;
- (void)_setTintColor:(id)arg1;
@property(readonly, nonatomic) double _refreshControlHeight;
- (id)_contentView;
@property(readonly, nonatomic) long long style;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(retain, nonatomic) NSAttributedString *attributedTitle;
@property(retain, nonatomic) UIColor *tintColor;
- (double)revealedFraction;
@property(readonly, nonatomic, getter=isRefreshing) _Bool refreshing;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIRemoteApplication : NSObject
{
    NSString *_machServiceName;
    unsigned int _port;
}

- (void)didTakeScreenshot;
- (void)wakeTimerFired;
- (void)backgroundContinuationEnabledDidChange:(_Bool)arg1;
- (void)localNotificationDidSnooze:(id)arg1;
- (void)localNotificationMessageDelivered:(id)arg1;
- (void)didRegisterUserNotificationSettings:(id)arg1;
- (void)remoteNotificationMessageDelivered;
- (void)remoteNotificationRegistrationFailedWithErrorDomain:(id)arg1 code:(long long)arg2 localizedDescription:(id)arg3;
- (void)remoteNotificationRegistrationSucceededWithDeviceToken:(id)arg1;
- (void)sheetWithRemoteViewIdentifierDidDismiss:(id)arg1;
- (void)simpleRemoteActionDidOccur:(long long)arg1;
- (void)statusBarWillChangeOrientation:(long long)arg1 duration:(float)arg2;
- (void)showTopMostMiniAlertWithSynchronizationPort:(unsigned int)arg1;
- (void)hideTopMostMiniAlert;
- (void)updatePort;
- (void)dealloc;
- (id)initWithMachServiceName:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIRemoteControlEvent : UIInternalEvent
{
    long long _subtype;
}

- (void)_simpleRemoteActionNotification:(id)arg1;
- (void)_sendEventToResponder:(id)arg1;
- (id)_windows;
- (void)_setSubtype:(long long)arg1;
- (long long)subtype;
- (long long)type;
- (void)dealloc;
- (id)_init;

@end

__attribute__((visibility("hidden")))
@interface UIRemoteInputViewControllerInterface : NSExtensionContext <_UIIVCResponseDelegate>
{
    id <_UIIVCResponseDelegate> _responseDelegate;
}

+ (id)_extensionAuxiliaryVendorProtocol;
+ (id)_extensionAuxiliaryHostProtocol;
@property(retain, nonatomic) id <_UIIVCResponseDelegate> responseDelegate; // @synthesize responseDelegate=_responseDelegate;
- (void)_openURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_handleInputViewControllerState:(id)arg1;
- (void)_tearDownRemoteService;
- (void)_performInputViewControllerOutput:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITextEffectsWindow : UIAutoRotatingWindow <_UIScreenBasedObject>
{
    _Bool _inDealloc;
    unsigned long long _activeEffectsCount;
    unsigned long long _hostedUseCount;
    double _defaultWindowLevel;
    struct CGPoint _hostedWindowOffset;
    NSDictionary *_perScreenOptions;
    unsigned long long _activeRemoteViewCount;
    unsigned long long _windowLevelCount;
    double _windowLevelStack[5];
}

+ (_Bool)_isSystemWindow;
+ (void)lowerTextEffectsWindowsForHideNotificationCenter;
+ (void)raiseTextEffectsWindowsForShowNotificationCenter;
+ (void)releaseSharedInstances;
+ (id)sharedTextEffectsWindowAboveStatusBar;
+ (id)sharedTextEffectsWindowForScreen:(id)arg1;
+ (id)sharedTextEffectsWindow;
+ (id)_sharedTextEffectsWindowforScreen:(id)arg1 aboveStatusBar:(_Bool)arg2 allowHosted:(_Bool)arg3 matchesStatusBarOrientationOnAccess:(_Bool)arg4;
@property(nonatomic) struct CGPoint hostedWindowOffset; // @synthesize hostedWindowOffset=_hostedWindowOffset;
@property(nonatomic) double defaultWindowLevel; // @synthesize defaultWindowLevel=_defaultWindowLevel;
- (void)_handleStatusBarOrientationChange:(id)arg1;
- (_Bool)_shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)_canActAsKeyWindowForScreen:(id)arg1;
- (_Bool)_shouldParticipateInVirtualResizing;
- (_Bool)_isTextEffectsWindow;
- (_Bool)_shouldTintStatusBar;
- (_Bool)_canAffectStatusBarAppearance;
- (_Bool)isInternalWindow;
- (struct CGRect)_sceneBounds;
- (struct CGRect)_sceneReferenceBounds;
- (_Bool)_shouldResizeWithScene;
- (id)nonHostedWindow;
- (id)aboveStatusBarWindow;
- (long long)interfaceOrientation;
- (void)_matchDeviceOrientation;
- (void)updateSubviewOrdering;
- (void)resetTransform;
- (void)updateForOrientation:(long long)arg1;
- (void)updateForOrientation:(long long)arg1 forceResetTransform:(_Bool)arg2;
- (void)sortSubviews;
- (void)sendSubviewToBack:(id)arg1;
- (void)bringSubviewToFront:(id)arg1;
- (void)didAddSubview:(id)arg1;
- (void)_didRemoveSubview:(id)arg1;
- (void)delayHideWindow;
- (void)handleStatusBarChangeFromHeight:(double)arg1 toHeight:(double)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromWindow:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toWindow:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromWindow:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toWindow:(id)arg2;
- (struct CGPoint)_adjustPointForHostedDisplay:(struct CGPoint)arg1 hasTarget:(_Bool)arg2 inset:(_Bool)arg3;
- (struct CGPoint)magnifierScreenPointForPoint:(struct CGPoint)arg1 targetWindow:(id)arg2;
- (struct CGPoint)classicWindowPointForPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) struct CGRect hostedFrame;
- (void)_updateTransformLayerForClassicPresentation;
- (_Bool)_disableViewScaling;
- (void)_configureContextOptions:(id)arg1;
- (void)_restoreWindowLevel;
- (void)_setWindowLevel:(double)arg1;
@property(readonly) unsigned int contextID;
@property(nonatomic) _Bool useHostedInstance;
- (void)applicationWindowRotated:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly) NSDictionary *_options;
@property(readonly) UIScreen *_intendedScreen;
- (_Bool)_matchingOptions:(id)arg1;
- (id)_initWithScreen:(id)arg1 options:(id)arg2;
- (id)_basicInitWithScreen:(id)arg1 options:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIRemoteKeyboardWindow : UITextEffectsWindow
{
    _Bool _isViewServiceKeyboard;
    UIView *_viewServiceHostView;
}

+ (id)remoteKeyboardWindowForScreen:(id)arg1 create:(_Bool)arg2 forViewService:(_Bool)arg3;
@property(nonatomic) UIView *viewServiceHostView; // @synthesize viewServiceHostView=_viewServiceHostView;
- (void)_didRemoveSubview:(id)arg1;
- (_Bool)_alwaysGetsContexts;
- (_Bool)_isHostedInAnotherProcess;
- (_Bool)_isWindowServerHostingManaged;
- (void)invalidate;
- (_Bool)_matchingOptions:(id)arg1;
- (id)_basicInitWithScreen:(id)arg1 options:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIRemoteSheetInfo : NSObject
{
    UIView *_sheetView;
    UISpringBoardHostedView *_remoteView;
    id _delegate;
    SEL _selector;
    void *_context;
    long long _returnCode;
}

@property(nonatomic) long long returnCode; // @synthesize returnCode=_returnCode;
@property(nonatomic) void *context; // @synthesize context=_context;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UISpringBoardHostedView *remoteView; // @synthesize remoteView=_remoteView;
@property(retain, nonatomic) UIView *sheetView; // @synthesize sheetView=_sheetView;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIRemoveControlMinusButton : UIControl
{
    unsigned int _rotated:1;
    unsigned int _rotating:1;
    unsigned int _hiding:1;
    unsigned int _showAsPlus:1;
    unsigned int _reserved:28;
    float _verticalOffset;
}

+ (id)plusImage;
+ (id)minusImage;
+ (float)defaultWidth;
- (void)_toggleRotateAnimationDidStop:(id)arg1 finished:(_Bool)arg2;
- (_Bool)isRotating;
- (_Bool)isRotated;
- (void)toggleRotate:(_Bool)arg1;
- (void)animator:(id)arg1 stopAnimation:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)isHiding;
- (void)setHiding:(_Bool)arg1;
- (void)dealloc;
- (id)initWithRemoveControl:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIRemoveControlMultiSelectButton : UIRemoveControlMinusButton
{
    unsigned int _isHighlighted:1;
    unsigned int _isSelected:1;
}

+ (id)minusCenterImage;
+ (id)plusImage;
+ (id)minusImage;
+ (float)defaultWidth;
- (void)setSelected:(_Bool)arg1;
- (_Bool)isHighlighted;
- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1 highlighted:(_Bool)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)setHiding:(_Bool)arg1;
- (_Bool)isHiding;
- (_Bool)isRotating;
- (_Bool)isRotated;
- (void)toggleRotate:(_Bool)arg1;
- (id)initWithRemoveControl:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIRemoveControlTextButton : UIControl
{
    NSString *_label;
}

- (id)_scriptingInfo;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)_alwaysHandleScrollerMouseEvent;
- (float)buttonWidth;
- (void)sizeToFit;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithRemoveControl:(id)arg1 withTarget:(id)arg2 withLabel:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIRemoveControlTextFrameAnimation : UIFrameAnimation
{
}

- (void)setProgress:(float)arg1;

@end

@interface UIResignActiveAction : BSAction
{
}

- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, nonatomic) long long reason;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithReason:(long long)arg1;

@end

@interface UIResumeActiveAction : BSAction
{
}

- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, nonatomic) long long reason;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithReason:(long long)arg1;

@end

@interface UIRivenFactory : NSObject
{
}

+ (id)_splitKeyboardLayoutHints;

@end

@interface UIRotationAnimation : UIAnimation
{
    double _startAngle;
    double _endAngle;
}

- (void)setProgress:(float)arg1;
- (void)setEndRotationAngle:(double)arg1;
- (void)setStartRotationAngle:(double)arg1;

@end

@interface UIRotationGestureRecognizer : UIGestureRecognizer
{
    double _initialTouchDistance;
    double _initialTouchAngle;
    double _currentTouchAngle;
    long long _currentRotationCount;
    double _lastTouchTime;
    double _velocity;
    double _previousVelocity;
    struct CGPoint _anchorSceneReferencePoint;
    id _transformAnalyzer;
    UITouch *_touches[2];
    float _preRecognitionWeight;
    float _postRecognitionWeight;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (double)_postRecognitionWeight;
- (void)_setPostRecognitionWeight:(double)arg1;
- (double)_preRecognitionWeight;
- (void)_setPreRecognitionWeight:(double)arg1;
@property(readonly, nonatomic) double velocity;
@property(nonatomic) double rotation;
- (void)_updateTransformAnalyzerWeights;
- (struct CGPoint)anchorPoint;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIRoundedRectButton : UIButton
{
    UIBezierPath *_fillPath;
    UIColor *_fillColor;
    UIGroupTableViewCellBackground *_tableViewStyleBackground;
    UIView *_shadowView;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setTintColor:(id)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (long long)buttonType;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_invalidatePaths;
- (void)_invalidateBackingViews;
- (void)_updateState;
- (id)_backgroundView;
- (id)_setupBackgroundView;
- (_Bool)_wantsTableViewStyleBackground;
- (id)_contentBackgroundColor;
- (_Bool)_canDrawContent;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 fillColor:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonRoundedRectButtonInit;

@end

__attribute__((visibility("hidden")))
@interface UIUpdateItem : NSObject
{
    int _action;
    NSIndexPath *_indexPath;
    long long _animation;
    double _offset;
    UITableViewUpdateGap *_gap;
    _Bool _headerFooterOnly;
    _Bool _skipAnimation;
}

@property(nonatomic) _Bool skipAnimation; // @synthesize skipAnimation=_skipAnimation;
@property(nonatomic) _Bool headerFooterOnly; // @synthesize headerFooterOnly=_headerFooterOnly;
@property(nonatomic) UITableViewUpdateGap *gap; // @synthesize gap=_gap;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic) long long animation; // @synthesize animation=_animation;
@property(readonly, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(readonly, nonatomic) int action; // @synthesize action=_action;
- (long long)inverseCompareIndexPaths:(id)arg1;
- (long long)compareIndexPaths:(id)arg1;
- (_Bool)isSectionOperation;
- (id)_actionDescription;
- (void)dealloc;
- (id)initWithAction:(int)arg1 forIndexPath:(id)arg2 animation:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIRowMoveUpdateItem : UIUpdateItem
{
    NSIndexPath *_newIndexPath;
}

- (id)newIndexPath;
- (void)dealloc;
- (id)initWithOldIndexPath:(id)arg1 newIndexPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIRuntimeAccessibilityConfiguration : NSObject
{
    NSString *accessibilityConfigurationHint;
    NSString *accessibilityConfigurationLabel;
    NSNumber *accessibilityConfigurationTraits;
    NSNumber *isAccessibilityConfigurationElement;
    NSObject *object;
}

@property(retain, nonatomic) NSObject *object; // @synthesize object;
@property(retain, nonatomic) NSNumber *isAccessibilityConfigurationElement; // @synthesize isAccessibilityConfigurationElement;
@property(retain, nonatomic) NSNumber *accessibilityConfigurationTraits; // @synthesize accessibilityConfigurationTraits;
@property(retain, nonatomic) NSString *accessibilityConfigurationLabel; // @synthesize accessibilityConfigurationLabel;
@property(retain, nonatomic) NSString *accessibilityConfigurationHint; // @synthesize accessibilityConfigurationHint;
- (void)applyConfiguration;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1 label:(id)arg2 hint:(id)arg3 traits:(id)arg4 andIsAccessibilityElement:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface UIRuntimeConnection : NSObject <NSCoding>
{
    id source;
    id destination;
    NSString *label;
}

- (void)connectForSimulator;
- (void)connect;
- (void)setLabel:(id)arg1;
- (id)label;
- (void)setDestination:(id)arg1;
- (id)destination;
- (void)setSource:(id)arg1;
- (id)source;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIRuntimeEventConnection : UIRuntimeConnection
{
    unsigned long long eventMask;
}

@property unsigned long long eventMask; // @synthesize eventMask;
- (id)description;
- (void)connectForSimulator;
- (void)connect;
@property(readonly) SEL action;
@property(readonly) id target;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIRuntimeOutletCollectionConnection : UIRuntimeConnection
{
    NSString *runtimeCollectionClassName;
    _Bool addsContentToExistingCollection;
}

@property _Bool addsContentToExistingCollection; // @synthesize addsContentToExistingCollection;
@property(copy) NSString *runtimeCollectionClassName; // @synthesize runtimeCollectionClassName;
- (id)description;
- (void)connectForSimulator;
- (void)connect;
- (void)performConnect;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIRuntimeOutletConnection : UIRuntimeConnection
{
}

- (id)description;
- (void)connectForSimulator;
- (void)connect;

@end

@interface UISaveToCameraRollActivity : UIActivity
{
    long long _imageCount;
    long long _videoCount;
}

@property(nonatomic) long long videoCount; // @synthesize videoCount=_videoCount;
@property(nonatomic) long long imageCount; // @synthesize imageCount=_imageCount;
- (void)performActivity;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;

@end

@interface UIScreen : NSObject <UICoordinateSpace, _UITraitEnvironmentInternal, UITraitEnvironment>
{
    id _display;
    struct CGRect _bounds;
    struct CGRect _referenceBounds;
    struct CGRect _interfaceOrientedBounds;
    struct CGRect _unjailedReferenceBounds;
    struct CGRect _mainSceneReferenceBounds;
    long long _interfaceOrientation;
    double _scale;
    double _touchScaleFactor;
    double _horizontalScale;
    long long _userInterfaceIdiom;
    NSDictionary *_capabilities;
    UIWindow *_screenDisablingWindow;
    double _startedPausingWindows;
    NSMutableArray *_pausedWindows;
    _UIScreenTransparentHitTestWindow *_extendedJailHitTestWindow;
    NSArray *_availableDisplayModes;
    double _pointsPerInch;
    _UIScreenFixedCoordinateSpace *_fixedCoordinateSpace;
    struct {
        unsigned int bitsPerComponent:4;
        unsigned int initialized:1;
        unsigned int connected:1;
        unsigned int overscanCompensation:2;
        unsigned int screenUpdatesDisabled:1;
        unsigned int wantsWideContentMargins:1;
        unsigned int queriedDeviceContentMargins:1;
        unsigned int hasCalculatedPointsPerInch:1;
    } _screenFlags;
    _Bool _wantsSoftwareDimming;
    _Bool _jailUsesHitTestWindow;
    UITraitCollection *_defaultTraitCollection;
    UITraitCollection *_overrideTraitCollection;
    UITraitCollection *_lastNotifiedTraitCollection;
    FBSDisplay *_fbsDisplay;
    UISoftwareDimmingWindow *_softwareDimmingWindow;
    long long _lastNotifiedBacklightLevel;
    double _jailScale;
    long long _jailOrientation;
    struct CGSize _jailSize;
    struct CGPoint _jailOffset;
    struct UIEdgeInsets _jailTouchInsets;
}

+ (struct CGRect)convertRect:(struct CGRect)arg1 fromView:(id)arg2;
+ (struct CGRect)convertRect:(struct CGRect)arg1 toView:(id)arg2;
+ (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromView:(id)arg2;
+ (struct CGPoint)convertPoint:(struct CGPoint)arg1 toView:(id)arg2;
+ (id)__connectedFBSDisplays;
+ (_Bool)_shouldDisableJail;
+ (void)_FBSDisplayDidPossiblyDisconnect:(id)arg1 forSceneDestruction:(id)arg2;
+ (void)_FBSDisplayDidPossiblyDisconnect:(id)arg1;
+ (void)_FBSDisplayDidPossiblyConnect:(id)arg1 withScene:(id)arg2 andPost:(_Bool)arg3;
+ (void)_FBSDisplayDidPossiblyConnect:(id)arg1 withScene:(id)arg2;
+ (void)_FBSDisplayDidPossiblyConnect:(id)arg1;
+ (void)_endDisableScreenUpdates;
+ (void)_beginDisableScreenUpdatesForSnapshotUsingSnapshotCover:(_Bool)arg1;
+ (void)_beginDisableScreenUpdatesForSnapshot;
+ (void)_prepareScreensForAppResume;
+ (id)_screenWithIntegerDisplayID:(unsigned int)arg1;
+ (id)_screenWithDisplayID:(id)arg1;
+ (id)_screenWithDisplayName:(id)arg1;
+ (id)_workspaceCapableScreens;
+ (id)_carScreen;
+ (id)screens;
+ (void)_enumerateScreensWithBlock:(CDUnknownBlockType)arg1;
+ (struct CGAffineTransform)transformToRotateScreen:(double)arg1;
+ (struct CGAffineTransform)transformForScreenOriginRotation:(double)arg1;
+ (id)mainScreen;
+ (void)_videoOutSettingsChanged;
+ (id)__createPlugInScreenForFBSDisplay:(id)arg1;
+ (void)initialize;
@property(nonatomic, getter=_jailUsesHitTestWindow, setter=_setJailUsesHitTestWindow:) _Bool jailUsesHitTestWindow; // @synthesize jailUsesHitTestWindow=_jailUsesHitTestWindow;
@property(nonatomic, getter=_jailTouchInsets, setter=_setJailTouchInsets:) struct UIEdgeInsets jailTouchInsets; // @synthesize jailTouchInsets=_jailTouchInsets;
@property(nonatomic, getter=_jailOrientation, setter=_setJailOrientation:) long long jailOrientation; // @synthesize jailOrientation=_jailOrientation;
@property(nonatomic, getter=_jailScale, setter=_setJailScale:) double jailScale; // @synthesize jailScale=_jailScale;
@property(nonatomic, getter=_jailOffset, setter=_setJailOffset:) struct CGPoint jailOffset; // @synthesize jailOffset=_jailOffset;
@property(nonatomic, setter=_setLastNotifiedBacklightLevel:) long long _lastNotifiedBacklightLevel; // @synthesize _lastNotifiedBacklightLevel;
@property(retain, nonatomic, setter=_setSoftwareDimmingWindow:) UISoftwareDimmingWindow *_softwareDimmingWindow; // @synthesize _softwareDimmingWindow;
@property(nonatomic) _Bool wantsSoftwareDimming; // @synthesize wantsSoftwareDimming=_wantsSoftwareDimming;
@property(readonly, nonatomic, getter=_unjailedReferenceBounds) struct CGRect _unjailedReferenceBounds; // @synthesize _unjailedReferenceBounds;
@property(readonly, nonatomic) struct CGRect _referenceBounds; // @synthesize _referenceBounds;
@property(retain, nonatomic) FBSDisplay *fbsDisplay; // @synthesize fbsDisplay=_fbsDisplay;
@property(retain, nonatomic, getter=_lastNotifiedTraitCollection, setter=_setLastNotifiedTraitCollection:) UITraitCollection *lastNotifiedTraitCollection; // @synthesize lastNotifiedTraitCollection=_lastNotifiedTraitCollection;
@property(nonatomic, getter=_overrideTraitCollection, setter=_setOverrideTraitCollection:) UITraitCollection *overrideTraitCollection; // @synthesize overrideTraitCollection=_overrideTraitCollection;
@property(nonatomic, getter=_defaultTraitCollection, setter=_setDefaultTraitCollection:) UITraitCollection *defaultTraitCollection; // @synthesize defaultTraitCollection=_defaultTraitCollection;
@property(nonatomic, getter=_jailSize, setter=_setJailSize:) struct CGSize jailSize; // @synthesize jailSize=_jailSize;
@property(readonly, nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(readonly, nonatomic) double nativeScale;
@property(readonly, nonatomic) struct CGRect nativeBounds;
- (struct CGRect)_nativeDisplayBounds;
- (id)_snapshotExcludingWindows:(id)arg1 withRect:(struct CGRect)arg2;
@property(readonly, copy) NSString *description;
@property(nonatomic) double brightness;
- (_Bool)_supportsBrightness;
- (void)_endObservingBacklightLevelNotifications;
- (void)_beginObservingBacklightLevelNotifications;
- (void)_postBrightnessDidChangeNotificationIfAppropriate;
- (float)rawBrightnessForBacklightLevel:(float)arg1;
- (id)_lazySoftwareDimmingWindow;
- (id)_display;
- (_Bool)_areMusicListsLimited;
- (_Bool)_areListsLimited;
- (_Bool)_isUIElementLimited:(id)arg1;
- (_Bool)_canFocusViews;
- (_Bool)_isDisplayPointWithinExtendedJailBounds:(struct CGPoint)arg1;
- (long long)_workspaceCapableScreenType;
- (_Bool)_isWorkspaceCapable;
- (id)_displayID;
- (void)_setCapability:(id)arg1 forKey:(id)arg2;
- (id)_capabilityForKey:(id)arg1;
- (id)_capabilities;
- (void)_notifyTraitsChangedAndPropagateToAllWindows;
- (void)_willTransitionToTraitCollection:(id)arg1;
- (void)_updateTraits;
- (id)_defaultTraitCollectionForInterfaceOrientation:(long long)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)_traitCollectionForChildEnvironment:(id)arg1;
@property(readonly, nonatomic) UITraitCollection *traitCollection;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toCoordinateSpace:(id)arg2;
@property(readonly) id <UICoordinateSpace> fixedCoordinateSpace;
@property(readonly) id <UICoordinateSpace> coordinateSpace;
- (void)_updateCapabilities;
- (void)_setUserInterfaceIdiom:(long long)arg1;
- (long long)_userInterfaceIdiom;
- (void)_updateUserInterfaceIdiom;
- (void)_disconnectScreen;
- (void)_connectScreen;
@property(nonatomic, setter=_setInterfaceOrientation:) long long _interfaceOrientation;
- (double)_pointsPerInch;
- (double)_touchScaleFactor;
- (void)_setScale:(double)arg1;
- (double)_scale;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
- (id)displayLinkWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)_prepareForWindow;
- (_Bool)_hasStatusBar;
- (_Bool)_isCarScreen;
- (_Bool)_isMainScreen;
- (_Bool)_isExternal;
- (id)_name;
- (unsigned int)_seed;
- (unsigned int)_integerDisplayID;
@property(nonatomic) long long overscanCompensation;
@property(readonly, copy, nonatomic) NSArray *availableModes;
- (int)screenType;
@property(retain, nonatomic) UIScreenMode *currentMode;
- (void)setBitsPerComponent:(int)arg1;
- (int)bitsPerComponent;
@property(readonly, retain, nonatomic) UIScreenMode *preferredMode;
@property(readonly, retain, nonatomic) UIScreen *mirroredScreen;
- (double)_refreshRate;
- (long long)_imageOrientation;
- (double)_rotation;
- (struct CGRect)_boundsInPixels;
- (struct CGRect)_realDisplayBounds;
- (double)_horizontalPixelScale;
@property(readonly, nonatomic) struct CGRect applicationFrame;
- (struct CGRect)_boundsForInterfaceOrientation:(long long)arg1;
- (struct CGRect)_interfaceOrientedBounds;
- (void)_computeMetrics;
- (_Bool)_isRotatable;
- (void)_setMainSceneReferenceBounds:(struct CGRect)arg1 computingMetricsIfNecessary:(_Bool)arg2;
- (void)_setMainSceneReferenceBounds:(struct CGRect)arg1;
- (struct CGRect)_mainSceneReferenceBounds;
- (struct CGPoint)_positionForWindowTransformLayerInJail:(_Bool)arg1 offsetByScreenJail:(_Bool)arg2;
- (struct CGPoint)_positionForWindowTransformLayerInJail:(_Bool)arg1;
- (_Bool)_areBoundsJailed;
- (struct UIEdgeInsets)_jailedBoundsEdgeInsets;
- (struct UIEdgeInsets)_rawJailedBoundsEdgeInsets;
- (struct CGRect)_applicationFrameForInterfaceOrientation:(long long)arg1;
- (struct CGRect)_applicationFrameForInterfaceOrientation:(long long)arg1 usingStatusbarHeight:(double)arg2;
- (struct CGRect)_applicationFrameForInterfaceOrientation:(long long)arg1 usingStatusbarHeight:(double)arg2 ignoreStatusBar:(_Bool)arg3;
- (void)_updateOverscanCompensationAllowingBackgroundUpdate:(_Bool)arg1;
- (_Bool)_overscanAdjustmentNeedsUpdate;
- (_Bool)_isOverscanned;
- (_Bool)_hasWindows;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateAvailableDisplayModes;
- (void)dealloc;
- (id)initWithDisplay:(id)arg1;
- (void)_enumerateWindowsWithBlock:(CDUnknownBlockType)arg1;
- (void)_ensureConnectedIfPossible;
- (_Bool)_wantsWideContentMargins;
- (id)snapshot;
- (id)snapshotView;
- (void)_enableScreenUpdates;
- (void)_disableScreenUpdates:(_Bool)arg1;
- (void)_setSpeed:(double)arg1 forWindow:(id)arg2;
- (id)snapshotViewAfterScreenUpdates:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIScreenEdgePanGestureRecognizer : UIPanGestureRecognizer <_UIScreenEdgePanRecognizerDelegate>
{
    _UIScreenEdgePanRecognizer *_recognizer;
    unsigned long long _edges;
}

@property(nonatomic) unsigned long long edges; // @synthesize edges=_edges;
- (double)_edgeRegionSize;
- (_Bool)isRequiringLongPress;
- (void)screenEdgePanRecognizerStateDidChange:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldTryToBeginWithEvent:(id)arg1;
- (void)reset;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIScreenMode : NSObject
{
    id _mode;
    _Bool _mainScreen;
}

+ (id)_screenModeForDisplayMode:(id)arg1 mainScreen:(_Bool)arg2;
@property _Bool _mainScreen; // @synthesize _mainScreen;
- (id)description;
- (id)_displayMode;
- (_Bool)_isNTSCOrPAL;
@property(readonly, nonatomic) double pixelAspectRatio;
@property(readonly, nonatomic) struct CGSize size;
- (struct CGSize)_sizeWithLevel:(unsigned long long)arg1;
- (id)initWithDisplayMode:(id)arg1 mainScreen:(_Bool)arg2;

@end

@interface UIScrollAnimation : UIAnimation
{
    struct CGPoint _startPoint;
    struct CGPoint _endPoint;
}

- (void)setProgress:(float)arg1;
- (void)setEndPoint:(struct CGPoint)arg1;
- (void)setStartPoint:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIScrollTestParameters : NSObject
{
    int _iterations;
    int _delta;
    int _scrollLength;
    float _startOffset;
    NSString *_currentTest;
    int _axis;
    CADisplayLink *_displayLink;
}

@property(nonatomic) int axis; // @synthesize axis=_axis;
@property(nonatomic) float startOffset; // @synthesize startOffset=_startOffset;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(nonatomic) int scrollLength; // @synthesize scrollLength=_scrollLength;
@property(nonatomic) int delta; // @synthesize delta=_delta;
@property(retain, nonatomic) NSString *currentTest; // @synthesize currentTest=_currentTest;
@property(nonatomic) int iterations; // @synthesize iterations=_iterations;
@property(readonly, nonatomic) float endOffset;
- (void)dealloc;
- (id)initWithName:(id)arg1 iterations:(int)arg2 delta:(int)arg3 length:(int)arg4 startOffset:(float)arg5 scrollAxis:(int)arg6;

@end

__attribute__((visibility("hidden")))
@interface UIScrollViewDelayedTouchesBeganGestureRecognizer : UIGestureRecognizer
{
    UIDelayedAction *_touchDelay;
    struct CGPoint _startSceneReferenceLocation;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (void)sendDelayedTouches;
- (void)sendTouchesShouldBeginForDelayedTouches:(id)arg1;
- (void)sendTouchesShouldBeginForTouches:(id)arg1 withEvent:(id)arg2;
- (void)clearTimer;

@end

__attribute__((visibility("hidden")))
@interface UIScrollViewPagingSwipeGestureRecognizer : UIGestureRecognizer
{
    UIDelayedAction *_swipeFailureDelay;
    struct CGPoint _startLocation;
    struct CGPoint _lastLocation;
    double _lastTime;
    int _directionalFailureCount;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_processNewLocation:(struct CGPoint)arg1;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (void)enoughTimeElapsed:(id)arg1;
- (void)clearTimer;

@end

__attribute__((visibility("hidden")))
@interface UIScrollViewPanGestureRecognizer : UIPanGestureRecognizer
{
    UIScrollView *_scrollView;
    SEL _scrollViewAction;
    struct CGPoint _reconsideredLockingLocation;
    unsigned int _lastLockingAxis:2;
    unsigned int _lockingAxis:2;
    unsigned int _hasChildScrollView:1;
    unsigned int _hasParentScrollView:1;
    unsigned int _caughtDeceleratingScrollView:1;
    unsigned int _directionalLockEnabled:1;
    unsigned int _transfersTrackingFromParentScrollView:1;
}

@property(nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(readonly, nonatomic, getter=_caughtDeceleratingScrollView) _Bool caughtDeceleratingScrollView;
@property(nonatomic, getter=isDirectionalLockEnabled) _Bool directionalLockEnabled;
- (double)_hysteresis;
- (void)_scrollViewDidEndZooming;
- (void)_resetGestureRecognizer;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldTryToBeginWithEvent:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (struct CGPoint)velocityInView:(id)arg1;
- (struct CGPoint)translationInView:(id)arg1;
- (void)_centroidMovedTo:(struct CGPoint)arg1 atTime:(double)arg2;
- (struct CGPoint)_adjustSceneReferenceLocation:(struct CGPoint)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldTransferTrackingFromParentScrollViewForCurrentOffset;
- (_Bool)_shouldContinueToWaitToTransferTrackingFromParentScrollView;
- (_Bool)_canTransferTrackingFromParentPagingScrollView;
- (void)removeTarget:(id)arg1 action:(SEL)arg2;
- (void)setDelegate:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIScrollViewPinchGestureRecognizer : UIPinchGestureRecognizer
{
    UIScrollView *_scrollView;
    SEL _scrollViewAction;
    unsigned int _hasParentScrollView:1;
}

@property(nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (double)_hysteresis;
- (void)removeTarget:(id)arg1 action:(SEL)arg2;
- (void)setDelegate:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIScrollViewScrollAnimation : UIAnimation
{
    struct CGPoint _originalOffset;
    struct CGPoint _targetOffset;
    double _accuracy;
    _Bool _adjustsForContentOffsetDelta;
}

- (void)dealloc;
- (void)setProgress:(float)arg1;
- (void)adjustForContentOffsetDelta:(struct CGPoint)arg1;

@end

@interface UIScrubberControl : UIOldSliderControl
{
    CDUnion_b710d1cf _sliderAvailableFill;
    double _duration;
    float _lastDisplayedWidth;
    float _maxTrackWidth;
    UIView *_elapsedTimeView;
    UIView *_remainingTimeView;
    id _delegate;
    double _trackingStartTime;
    struct CGPoint _lastUpdatedPoint;
    float _valueAvailable;
    unsigned int _didDrag:1;
    unsigned int _sentScrubbingStart:1;
    unsigned int _autoSizesToFitDuration:1;
    unsigned int _layoutTimeParts:2;
    unsigned int _remainingIsDuration:1;
    unsigned int _delegateDidEnterScrubbingState:1;
    unsigned int _delegateDidChangeScrubValue:1;
    unsigned int _delegateShouldBeginScrubbing:1;
    unsigned int _endingTracking:1;
    unsigned int _showKnob:1;
    unsigned int _largeKnob:1;
    unsigned int _rightCapIsDownloadCap:1;
    unsigned int _requireMomentaryDelay:1;
    unsigned int _showFullWidthComponents:1;
    unsigned int _alwaysShowAllComponentsForDuration:1;
    unsigned int _timeLayoutDisabledCount:7;
    unsigned int _timeLayoutSkippedLayout:1;
    unsigned int _timeLayoutSkippedForcedLayout:1;
    unsigned int _showTimeCentered:1;
    unsigned int _leftCapIsDownloadCap:1;
    unsigned int _allowsAnyValue:1;
    unsigned int _unused:3;
}

+ (_Bool)allowLayeredFillForKnob;
- (void)setTimeShadowColor:(id)arg1;
- (void)setTimeColor:(id)arg1;
- (void)setValueAvailable:(float)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_sendDelegateDidEnterScrubbingState:(_Bool)arg1;
- (void)setScrubbingRequiresMomentaryDelay:(_Bool)arg1;
- (void)setShowDuration:(_Bool)arg1;
- (void)setShowFullWidthComponents:(_Bool)arg1;
- (void)enableTimesLayout;
- (void)disableTimesLayout;
- (void)_updateTimes:(_Bool)arg1;
- (void)setValue:(float)arg1 animated:(_Bool)arg2 animationCurve:(int)arg3;
- (void)_setValue:(float)arg1 andSendAction:(_Bool)arg2;
- (void)_updateAvailableFill;
- (void)drawSliderPiece:(int)arg1 inRect:(struct CGRect)arg2;
- (void)setAllowsAnyValue:(_Bool)arg1;
- (_Bool)_notAllValueAvailable;
- (struct CGRect)fillBounds;
- (struct CGRect)_rectOfTrack;
- (struct CGRect)hitRect;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInsideKnob:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (_Bool)pointInsideKnob:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (double)requiredAutoUpdateDurationForDuration:(double)arg1;
- (double)duration;
- (void)setDuration:(double)arg1;
- (void)sizeToFit;
- (float)scrubValue;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (void)_resetTimeFrames;
- (const CDStruct_869f9c67 *)metrics;
- (id)imageForSliderPiece:(int)arg1;
- (struct CGRect)sliderBounds;
- (void)setShowTimeCenteredInAvailableArea:(_Bool)arg1;
- (void)setPinTimeToOutsideEdges:(_Bool)arg1;
- (id)createSliderKnobView;
- (id)initWithFrame:(struct CGRect)arg1 maxTrackWidth:(float)arg2 showTimes:(_Bool)arg3 showKnob:(_Bool)arg4;
- (id)initWithFrame:(struct CGRect)arg1 maxTrackWidth:(float)arg2 showTimes:(_Bool)arg3 knobStyle:(int)arg4;

@end

__attribute__((visibility("hidden")))
@interface UIScrubberTimeView : UIView
{
    NSString *_time;
    UIColor *_timeColor;
    UIColor *_timeShadowColor;
    unsigned int _align:2;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)time;
- (void)setTimeShadowColor:(id)arg1;
- (void)setTimeColor:(id)arg1;
- (void)setTime:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UISearchBar : UIView <UITextInputTraits_Private, UIStatusBarTinting, _UIBarPositioningInternal, UIBarPositioning, UITextInputTraits>
{
    UISearchBarTextField *_searchField;
    UILabel *_promptLabel;
    UIButton *_cancelButton;
    id <UISearchBarDelegate><UISearchBarDelegate_Private> _delegate;
    id _controller;
    UIColor *_barTintColor;
    UIImageView *_separator;
    NSString *_cancelButtonText;
    NSArray *_scopes;
    long long _selectedScope;
    UIView *_background;
    UIView *_scopeBar;
    UIView *_scopeBarContainerView;
    struct UIEdgeInsets _contentInset;
    UIImageView *_shadowView;
    id _appearanceStorage;
    _UISearchBarNavigationItem *_navigationItem;
    _UISearchBarScopeBarBackground *_scopeBarBackgroundView;
    UIBarButtonItem *_animatedAppearanceBarButtonItem;
    _UIBackdropView *_backdrop;
    unsigned long long _backdropStyle;
    UIView *_maskView;
    UITapGestureRecognizer *_tapToActivateGestureRecognizer;
    UIBarButtonItem *_cancelBarButtonItem;
    UITextInputTraits *_textInputTraits;
    UIButton *_leftButton;
    struct {
        unsigned int barStyle:3;
        unsigned int showsBookmarkButton:1;
        unsigned int showsCancelButton:1;
        unsigned int barTranslucence:3;
        unsigned int autoDisableCancelButton:1;
        unsigned int showsScopeBar:1;
        unsigned int hideBackground:1;
        unsigned int combinesLandscapeBars:1;
        unsigned int usesEmbeddedAppearance:1;
        unsigned int showsSearchResultsButton:1;
        unsigned int searchResultsButtonSelected:1;
        unsigned int pretendsIsInBar:1;
        unsigned int disabled:1;
        unsigned int backgroundLayoutNeedsUpdate:1;
        unsigned int containedInNavigationPalette:1;
        unsigned int containedInNavigationBar:1;
        unsigned int containedInToolBar:1;
        unsigned int drawsBackgroundInPalette:1;
        unsigned int centerPlaceholder:1;
        unsigned int searchFieldLeftViewMode:2;
        unsigned int cancelButtonWantsLetterpress:1;
    } _searchBarFlags;
    _Bool __forceCenteredPlaceholderLayout;
    _Bool __transplanting;
    UIColor *_statusBarTintColor;
    UIView *_inputAccessoryView;
    long long _barPosition;
    unsigned long long _searchBarStyle;
    UISearchController *__searchController;
    unsigned long long __scopeBarPosition;
}

@property(nonatomic, setter=_setScopeBarPosition:) unsigned long long _scopeBarPosition; // @synthesize _scopeBarPosition=__scopeBarPosition;
@property(nonatomic, setter=_setTransplanting:) _Bool _transplanting; // @synthesize _transplanting=__transplanting;
@property(nonatomic, setter=_setSearchController:) UISearchController *_searchController; // @synthesize _searchController=__searchController;
@property(nonatomic) _Bool _forceCenteredPlaceholderLayout; // @synthesize _forceCenteredPlaceholderLayout=__forceCenteredPlaceholderLayout;
@property(nonatomic) unsigned long long searchBarStyle; // @synthesize searchBarStyle=_searchBarStyle;
@property(readonly, nonatomic) long long barPosition; // @synthesize barPosition=_barPosition;
@property(retain, nonatomic) UIView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(retain, nonatomic, setter=_setStatusBarTintColor:) UIColor *_statusBarTintColor; // @synthesize _statusBarTintColor;
@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor=_barTintColor;
@property(nonatomic) id <UISearchBarDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_setCancelButtonWantsLetterpress;
- (id)_alternateTitle;
- (_Bool)_shouldUseNavigationBarHeight;
- (long long)_barMetricsForOrientation:(long long)arg1;
- (void)setSearchFieldLeftViewMode:(long long)arg1;
- (long long)searchFieldLeftViewMode;
- (void)_updateInsetsForTableView:(id)arg1;
- (void)tappedSearchBar:(id)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_updatePlaceholderColor;
- (void)_allowCursorToAppear:(_Bool)arg1;
- (id)_textColor;
- (id)_glyphAndTextColor:(_Bool)arg1;
- (_Bool)centerPlaceholder;
- (void)setCenterPlaceholder:(_Bool)arg1;
- (unsigned long long)_backdropStyle;
- (void)_setBackdropStyle:(unsigned long long)arg1;
- (void)_applySearchBarStyle;
- (void)_updateNeedForBackdrop;
- (void)_setBackgroundLayoutNeedsUpdate:(_Bool)arg1;
- (_Bool)_containedInNavigationPalette;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_layoutBackgroundViewConsideringTopBarStatusAndChangedHeight:(_Bool)arg1;
- (_Bool)_isAtTop;
- (id)_animatedAppearanceBarButtonItem;
- (id)_navigationItem;
- (struct UIOffset)positionAdjustmentForSearchBarIcon:(long long)arg1;
- (void)setPositionAdjustment:(struct UIOffset)arg1 forSearchBarIcon:(long long)arg2;
@property(nonatomic) struct UIOffset searchTextPositionAdjustment;
@property(nonatomic) struct UIOffset searchFieldBackgroundPositionAdjustment;
- (id)scopeBarButtonTitleTextAttributesForState:(unsigned long long)arg1;
- (void)setScopeBarButtonTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)scopeBarButtonDividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2;
- (void)setScopeBarButtonDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;
- (id)scopeBarButtonBackgroundImageForState:(unsigned long long)arg1;
- (void)setScopeBarButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
@property(retain, nonatomic) UIImage *scopeBarBackgroundImage;
- (id)imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2;
- (id)_imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2;
- (id)_imageForSearchBarIcon:(long long)arg1 state:(unsigned long long)arg2 customImage:(_Bool *)arg3;
- (void)setImage:(id)arg1 forSearchBarIcon:(long long)arg2 state:(unsigned long long)arg3;
- (id)searchFieldBackgroundImageForState:(unsigned long long)arg1;
- (void)setSearchFieldBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)_setSeparatorImage:(id)arg1;
- (id)_separatorImage;
@property(retain, nonatomic) UIImage *backgroundImage;
- (id)backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (void)setBackgroundImage:(id)arg1 forBarMetrics:(long long)arg2;
- (void)_effectiveBarTintColorDidChange:(_Bool)arg1;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (void)_setBarTintColor:(id)arg1 forceUpdate:(_Bool)arg2;
- (id)_effectiveBarTintColor;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_scopeChanged:(id)arg1;
@property(nonatomic) _Bool showsScopeBar;
- (void)_setShowsScopeBar:(_Bool)arg1 animateOpacity:(_Bool)arg2;
- (void)_setScopeBarHidden:(_Bool)arg1;
@property(nonatomic) long long selectedScopeButtonIndex;
@property(copy, nonatomic) NSArray *scopeButtonTitles;
- (void)_setUpScopeBar;
- (void)_updateScopeBarBackground;
- (struct UIEdgeInsets)_scopeBarInsets;
- (_Bool)_scopeBarIsVisible;
- (struct UIEdgeInsets)contentInset;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (id)_makeShadowView;
- (_Bool)_shouldDisplayShadow;
- (void)_setShadowVisibleIfNecessary:(_Bool)arg1;
- (id)_navigationBarForShadow;
- (void)layoutSubviews;
- (double)_scopeBarHeight;
- (void)sendSubviewToBack:(id)arg1;
- (void)bringSubviewToFront:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (double)_searchFieldHeight;
- (double)_landscapeScopeBarWidth;
- (double)_landscapeSearchFieldWidth;
- (double)_availableBoundsWidthForSize:(struct CGSize)arg1;
- (double)_availableBoundsWidth;
- (_Bool)_searchFieldWidthShouldBeFlexible;
- (void)_setShowsSeparator:(_Bool)arg1;
- (id)_currentSeparatorImage;
- (struct CGSize)intrinsicContentSize;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)_defaultHeight;
- (double)_barHeightForBarMetrics:(long long)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)takeTraitsFrom:(id)arg1;
- (id)textInputTraits;
@property(readonly, retain, nonatomic) UIButton *_leftButton; // @synthesize _leftButton;
- (void)_setupLeftButton;
- (id)cancelButton;
- (void)setCancelButton:(id)arg1;
- (_Bool)usesEmbeddedAppearance;
- (void)setUsesEmbeddedAppearance:(_Bool)arg1;
- (_Bool)_wouldCombineLandscapeBarsForSize:(struct CGSize)arg1;
- (_Bool)_shouldCombineLandscapeBarsForOrientation:(long long)arg1;
- (_Bool)_shouldCombineLandscapeBars;
- (_Bool)combinesLandscapeBars;
- (void)setCombinesLandscapeBars:(_Bool)arg1;
- (_Bool)drawsBackgroundInPalette;
- (void)setDrawsBackgroundInPalette:(_Bool)arg1;
- (_Bool)drawsBackground;
- (void)setDrawsBackground:(_Bool)arg1;
- (id)_cancelBarButtonItem;
- (void)_displayNavBarCancelButton:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setShowsCancelButton:(_Bool)arg1;
@property(nonatomic) _Bool showsCancelButton;
- (void)setShowsCancelButton:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic) _Bool showsBookmarkButton;
@property(nonatomic, getter=isSearchResultsButtonSelected) _Bool searchResultsButtonSelected;
@property(nonatomic) _Bool showsSearchResultsButton;
- (void)_updateRightView;
@property(copy, nonatomic) NSString *placeholder;
@property(copy, nonatomic) NSString *prompt;
@property(copy, nonatomic) NSString *text;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
@property(nonatomic) long long barStyle;
- (void)_removeMarginsIfNecessary;
- (void)movedToSuperview:(id)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)_identifyBarContainer;
- (void)didMoveToWindow:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (id)_scopeBar;
@property(readonly, nonatomic, getter=_searchBarTextField) UISearchBarTextField *searchBarTextField;
- (id)searchField;
- (id)controller;
- (void)setController:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_viewForChildViews;
- (void)_setMaskBounds:(struct CGRect)arg1;
- (void)_setMaskActive:(_Bool)arg1;
- (void)_commonInit;
- (id)_scopeBarContainer;
- (long long)_barPosition;
- (void)_setBarPosition:(long long)arg1;
- (void)_updateBackgroundToBackdropStyle:(long long)arg1;
- (id)_scopeBarBackgroundView;
- (id)_backgroundView;
- (void)_setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setScopeBarSegmentsEnabled:(_Bool)arg1;
- (void)_setEnabled:(_Bool)arg1;
- (_Bool)_isEnabled;
- (_Bool)isFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)reloadInputViews;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)_searchFieldEditingChanged;
- (void)_searchFieldReturnPressed;
- (void)_searchFieldEndEditing;
- (void)_searchFieldBeginEditing;
- (void)_resultsListButtonPressed;
- (void)_bookmarkButtonPressed;
- (void)_cancelButtonPressed;
- (void)_destroyCancelButton;
- (void)_setupCancelButtonWithAppearance:(id)arg1;
- (void)_setupCancelButton;
- (void)_setAutoDisableCancelButton:(_Bool)arg1;
- (void)_setCancelButtonText:(id)arg1;
- (void)_setupPromptLabel;
- (_Bool)textFieldShouldClear:(id)arg1;
- (_Bool)_textFieldShouldScrollToVisibleWhenBecomingFirstResponder:(id)arg1;
- (_Bool)textFieldShouldEndEditing:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)_updateOpacity;
- (void)_setupSearchField;
- (void)_updateMagnifyingGlassView;
- (void)_updateSearchFieldArt;
- (_Bool)_consideredInBarWithSuperview:(id)arg1;
- (_Bool)_isInBar;
- (void)setPretendsIsInBar:(_Bool)arg1;
- (_Bool)pretendsIsInBar;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (_Bool)_hasCustomAutolayoutNeighborSpacing;

// Remaining properties
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool forceEnableDictation;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(nonatomic) int textLoupeVisibility;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;

@end

__attribute__((visibility("hidden")))
@interface _UIBarBackgroundImageView : UIImageView
{
    UIView *_topStripView;
    UIImageView *_customImageContainer;
    _Bool _translucent;
}

@property(nonatomic, getter=isTranslucent) _Bool translucent; // @synthesize translucent=_translucent;
- (id)image;
- (void)setImage:(id)arg1;
- (void)removeTopStripView;
- (void)updateTopStripViewCreateIfNecessary;
- (id)topStripView;

@end

__attribute__((visibility("hidden")))
@interface UISearchBarBackground : _UIBarBackgroundImageView <_UIBarPositioningInternal>
{
    UIColor *_barTintColor;
    NSMutableDictionary *_customBackgroundImages;
    NSMutableDictionary *_generatedBackgroundImages;
    long long _barPosition;
    unsigned long long _searchBarStyle;
    unsigned int _barStyle:3;
    unsigned int _barTranslucence:3;
    unsigned int _usesEmbeddedAppearance:1;
    unsigned int _actingAsNavBar:1;
    unsigned int _usesContiguousBarBackground:1;
    unsigned int _barHasController;
}

@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor=_barTintColor;
- (void)_setBehavesAsIfSearchBarHasController:(_Bool)arg1;
- (void)_updateBackgroundImageIfPossible;
@property(nonatomic) _Bool usesContiguousBarBackground;
- (_Bool)_hasCustomBackgroundImage;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (id)_backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)_setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;
@property(readonly, nonatomic) UIImage *backgroundImage;
@property(readonly, nonatomic) UIImage *backgroundImagePrompt;
- (void)_updateBackgroundImage;
- (id)_createBackgroundImageForBarStyle:(long long)arg1 alpha:(double)arg2;
@property(nonatomic) unsigned long long searchBarStyle;
@property(nonatomic) long long barStyle;
@property(nonatomic) _Bool usesEmbeddedAppearance;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (long long)_barPosition;
- (void)_setBarPosition:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UISearchBarTextField : UITextField
{
    NSMutableDictionary *_customClearButtons;
    NSMutableDictionary *_iconOffsets;
    NSValue *_searchTextOffsetValue;
    _UISearchBarSearchFieldBackgroundView *_effectBackgroundTop;
    _UISearchBarSearchFieldBackgroundView *_effectBackgroundBottom;
    _Bool _deferringFirstResponder;
    _Bool _animatePlaceholderOnResignFirstResponder;
    _Bool __preventSelectionViewActivation;
}

@property(nonatomic, setter=_setPreventSelectionViewActivation:) _Bool _preventSelectionViewActivation; // @synthesize _preventSelectionViewActivation=__preventSelectionViewActivation;
- (id)textInputTraits;
- (void)_setBottomEffectBackgroundVisible:(_Bool)arg1;
- (void)_setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)canBecomeFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)resignFirstResponder;
- (void)_becomeFirstResponder;
- (void)_activateSelectionView;
- (void)_removeEffectsBackgroundViews;
- (void)_clearBackgroundViews;
- (void)_updateBackgroundViewsAnimated:(_Bool)arg1;
- (void)updateForBackdropStyle:(unsigned long long)arg1;
- (id)_createEffectsBackgroundViewWithStyle:(unsigned long long)arg1 applyFilter:(id)arg2;
- (void)_updateBackgroundView:(id)arg1 withStyle:(unsigned long long)arg2 filter:(id)arg3;
- (struct CGRect)placeholderRectForBounds:(struct CGRect)arg1;
- (id)_placeholderColor;
- (Class)_systemBackgroundViewClass;
- (Class)_placeholderLabelClass;
- (void)tintColorDidChange;
- (long long)_suffixLabelTextAlignment;
- (struct CGRect)_suffixFrame;
- (struct CGRect)_availableTextRectForBounds:(struct CGRect)arg1 forEditing:(_Bool)arg2;
- (_Bool)_shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged;
- (_Bool)_becomeFirstResponderWhenPossible;
- (struct CGRect)clearButtonRectForBounds:(struct CGRect)arg1;
- (struct CGSize)_clearButtonSize;
- (struct CGRect)rightViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)leftViewRectForBounds:(struct CGRect)arg1;
- (_Bool)_shouldCenterPlaceholder;
- (struct CGRect)_adjustmentsForLeftViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_adjustedTextOrEditingRect:(struct CGRect)arg1 forBounds:(struct CGRect)arg2;
- (_Bool)_hasActionForEventMask:(int)arg1;
- (void)dealloc;
@property(retain, nonatomic, setter=_setSearchTextOffetValue:) NSValue *_searchTextOffsetValue;
- (id)_offsetValueForIcon:(long long)arg1;
- (void)_setOffsetValue:(id)arg1 forIcon:(long long)arg2;
- (id)_clearButtonImageForState:(unsigned long long)arg1;
- (void)_setClearButtonImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextFieldLabel : UILabel
{
}

+ (id)_defaultAttributes;
+ (id)defaultFont;
- (_Bool)_shouldDrawUnderlinesLikeWebKit;
- (void)drawTextInRect:(struct CGRect)arg1;
- (void)_defaultDrawTextInRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UISearchBarTextFieldLabel : UITextFieldLabel
{
    _Bool _ignoresGeometryChanges;
}

+ (id)_defaultAttributes;
@property(nonatomic) _Bool ignoresGeometryChanges; // @synthesize ignoresGeometryChanges=_ignoresGeometryChanges;
- (void)setFrame:(struct CGRect)arg1;

@end

@interface UISearchController : UIViewController <UIViewControllerPresenting, _UIScrollNotification, NSCoding, UIViewControllerTransitioningDelegate, UIViewControllerAnimatedTransitioning>
{
    UISearchBar *_searchBar;
    int _barPresentationStyle;
    id <UIViewControllerAnimatedTransitioning> _animator;
    id _windowWillAnimateToken;
    _UISearchControllerDidScrollDelegate *_didScrollDelegate;
    struct {
        unsigned int searchBarWasTableHeaderView:1;
    } _controllerFlags;
    _Bool _dimsBackgroundDuringPresentation;
    _Bool _hidesNavigationBarDuringPresentation;
    _Bool __showResultsForEmptySearch;
    UIView *_resultsControllerViewContainer;
    id <UISearchResultsUpdating> _searchResultsUpdater;
    id <UISearchControllerDelegate> _delegate;
    UIViewController *_searchResultsController;
    long long __previousSearchBarPosition;
    double __resultsContentScrollViewPresentationOffset;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) double _resultsContentScrollViewPresentationOffset; // @synthesize _resultsContentScrollViewPresentationOffset=__resultsContentScrollViewPresentationOffset;
@property(nonatomic) long long _previousSearchBarPosition; // @synthesize _previousSearchBarPosition=__previousSearchBarPosition;
@property(nonatomic, setter=_setShowResultsForEmptySearch:) _Bool _showResultsForEmptySearch; // @synthesize _showResultsForEmptySearch=__showResultsForEmptySearch;
@property(readonly, retain, nonatomic) UIViewController *searchResultsController; // @synthesize searchResultsController=_searchResultsController;
@property(nonatomic) _Bool hidesNavigationBarDuringPresentation; // @synthesize hidesNavigationBarDuringPresentation=_hidesNavigationBarDuringPresentation;
@property(nonatomic) _Bool dimsBackgroundDuringPresentation; // @synthesize dimsBackgroundDuringPresentation=_dimsBackgroundDuringPresentation;
@property(nonatomic) id <UISearchControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <UISearchResultsUpdating> searchResultsUpdater; // @synthesize searchResultsUpdater=_searchResultsUpdater;
@property(retain, nonatomic) UIView *_resultsControllerViewContainer; // @synthesize _resultsControllerViewContainer;
@property(readonly, nonatomic) int _barPresentationStyle; // @synthesize _barPresentationStyle;
@property(readonly, retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
- (void)_navigationControllerWillShowViewController:(id)arg1;
- (void)_endWatchingPresentingController;
- (void)_beginWatchingPresentingController;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_didScroll;
- (void)_watchScrollView:(id)arg1 forScrolling:(_Bool)arg2;
- (void)_updateSearchBarMaskIfNecessary;
- (void)_updateTableHeaderBackgroundViewInTableView:(id)arg1 amountScrolledUnder:(double)arg2;
- (void)_presentingViewControllerDidChange:(id)arg1;
- (void)_presentingViewControllerWillChange:(id)arg1;
- (void)_updateSearchResultsControllerWithDelta:(struct CGSize)arg1;
- (void)_updateSearchResultsPositionWithDelta:(struct CGSize)arg1;
- (void)_updateSearchResultsContentScrollViewWithDelta:(struct CGSize)arg1;
- (void)_adjustSearchBarSizeForOrientation:(long long)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (_Bool)_requiresCustomPresentationController;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)_animatorForBarPresentationStyle:(int)arg1 dismissing:(_Bool)arg2;
- (id)_searchPresentationController;
- (id)_presentationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (_Bool)_allowFormSheetStylePresentation;
- (void)_updateVisibilityOfSearchResultsForSearchBar:(id)arg1;
- (void)_dismissPresentation:(_Bool)arg1;
- (void)_performAutomaticPresentation;
- (id)_locatePresentingViewController;
- (void)_searchBarSuperviewChanged;
- (void)_searchBarCancelButtonClicked:(id)arg1;
- (void)_searchBarSearchButtonClicked:(id)arg1;
- (void)_searchBarTextDidBeginEditing:(id)arg1;
- (void)_searchBar:(id)arg1 textDidChange:(id)arg2;
- (_Bool)_searchBarShouldFinalizeBecomingFirstResponder;
- (void)_sizeSearchViewToPresentingViewController:(id)arg1;
- (void)_connectSearchBar:(id)arg1;
@property(nonatomic, getter=isActive) _Bool active;
- (void)setModalPresentationStyle:(long long)arg1;
- (void)_didDismissSearchController;
- (void)_willDismissSearchController;
- (void)_didPresentFromViewController:(id)arg1;
- (void)_willPresentFromViewController:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)_resultsControllerWillLayoutVisibleUnderContainerView;
- (void)_resizeResultsControllerWithDelta:(struct CGSize)arg1;
- (id)_createAnimationCoordinator;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithSearchResultsController:(id)arg1;
- (void)_commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UISearchDisplayController : NSObject <_UIScrollNotification>
{
    UIViewController *_viewController;
    UITableView *_tableView;
    UIView *_dimmingView;
    UISearchBar *_searchBar;
    UILabel *_noResultsLabel;
    NSString *_noResultsMessage;
    NSString *_resultsTitle;
    id <UISearchDisplayDelegate> _delegate;
    id <UITableViewDataSource> _tableViewDataSource;
    id <UITableViewDelegate> _tableViewDelegate;
    struct __CFArray *_containingScrollViews;
    double _lastKeyboardAdjustment;
    double _lastFooterAdjustment;
    UIPopoverController *_popoverController;
    long long _searchResultsTableViewStyle;
    id _navigationControllerBookkeeper;
    NSArray *_savedSelectedCellsWhenViewWillAppear;
    UIScrollView *_savedContainingScrollView;
    UISearchDisplayControllerContainerView *_containerView;
    unsigned long long _savedSearchBarResizingMask;
    UINavigationItem *_navigationItem;
    struct CGPoint _containingScrollViewContentOffset;
    struct CGRect _searchFieldInNavigationBarFrame;
    _UINavigationControllerPalette *_attachedNavigationPalette;
    UIButton *_animatingAppearanceNavigationButton;
    double _animatingAppearanceNavigationSearchBarWidth;
    UIColor *_dimmingOverlayColor;
    UIView *_tableViewBackgroundHeaderView;
    long long _unactivatedBarPosition;
    _UISearchControllerDidScrollDelegate *_didScrollDelegate;
    struct {
        unsigned int visible:1;
        unsigned int animating:1;
        unsigned int hidIndexBar:1;
        unsigned int hidNavigationBar:1;
        unsigned int noResultsMessageVisible:1;
        unsigned int noResultsMessageAutoDisplay:1;
        unsigned int navigationBarHidingEnabled:1;
        unsigned int dimTableViewOnEmptySearchString:1;
        unsigned int isRotatingWithPopover:1;
        unsigned int cancelButtonManagementDisabled:1;
        unsigned int allowDisablingNavigationBarHiding:1;
        unsigned int showsResultsForEmptyField:1;
        unsigned int searchBarCanBeHoisted:1;
        unsigned int animatingSearchResultsDisappearance:1;
        unsigned int navigationBarShadowWasHidden:1;
        unsigned int hoistingSearchBar:1;
    } _searchDisplayControllerFlags;
    _Bool _displaysSearchBarInNavigationBar;
    unsigned long long _navigationBarSearchFieldSizing;
    double __activationGapHeight;
    double __additionalNonCollapsingHeightAboveSearchBar;
}

@property(nonatomic) double _additionalNonCollapsingHeightAboveSearchBar; // @synthesize _additionalNonCollapsingHeightAboveSearchBar=__additionalNonCollapsingHeightAboveSearchBar;
@property(nonatomic) double _activationGapHeight; // @synthesize _activationGapHeight=__activationGapHeight;
@property(nonatomic) unsigned long long navigationBarSearchFieldSizing; // @synthesize navigationBarSearchFieldSizing=_navigationBarSearchFieldSizing;
@property(nonatomic) _Bool displaysSearchBarInNavigationBar; // @synthesize displaysSearchBarInNavigationBar=_displaysSearchBarInNavigationBar;
@property(copy, nonatomic) NSString *searchResultsTitle; // @synthesize searchResultsTitle=_resultsTitle;
@property(nonatomic) id <UITableViewDelegate> searchResultsDelegate; // @synthesize searchResultsDelegate=_tableViewDelegate;
@property(nonatomic) id <UITableViewDataSource> searchResultsDataSource; // @synthesize searchResultsDataSource=_tableViewDataSource;
@property(readonly, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(readonly, nonatomic) UIViewController *searchContentsController; // @synthesize searchContentsController=_viewController;
@property(nonatomic) id <UISearchDisplayDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_containedInPopover;
- (double)_statusBarHeight;
- (_Bool)_shouldAccountForStatusBarHeight;
- (_Bool)_searchBarInNavigationControllerComponent;
- (id)_dimmingOverlayColor;
- (void)_setDimmingOverlayColor:(id)arg1;
- (void)_animateNavigationBarSearchBarAppearance:(id)arg1;
- (id)_containerView;
- (void)_configureContainerView;
@property(readonly, nonatomic) UINavigationItem *navigationItem;
- (_Bool)_showsResultsForEmptyField;
- (void)_setShowsResultsForEmptyField:(_Bool)arg1;
- (_Bool)_searchBarShouldScrollToVisible:(id)arg1;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_didScroll;
- (void)_updateSearchBarMaskIfNecessary;
- (void)_updateTableHeaderBackgroundViewInTableView:(id)arg1 amountScrolledUnder:(double)arg2;
- (void)_watchContainingTableViewForScrolling:(_Bool)arg1;
- (id)_noResultsMessageLabel;
@property(nonatomic, getter=_isCancelButtonManagementDisabled, setter=_setCancelButtonManagementDisabled:) _Bool cancelButtonManagementDisabled;
- (void)_clearViewController;
@property(nonatomic) _Bool dimTableViewOnEmptySearchString;
- (_Bool)_allowDisablingNavigationBarHiding;
- (void)_setAllowDisablingNavigationBarHiding:(_Bool)arg1;
@property(nonatomic, getter=isNavigationBarHidingEnabled) _Bool navigationBarHidingEnabled;
@property(copy, nonatomic) NSString *noResultsMessage;
@property(nonatomic) _Bool automaticallyShowsNoResultsMessage;
@property(nonatomic) _Bool noResultsMessageVisible;
@property(readonly, nonatomic) UITableView *searchResultsTableView; // @synthesize searchResultsTableView=_tableView;
- (_Bool)popoverControllerShouldDismissPopover:(id)arg1;
- (void)popoverController:(id)arg1 animationCompleted:(long long)arg2;
- (void)_managedTableViewDidScroll;
- (void)_updateNoSearchResultsMessageVisiblity;
- (void)navigationControllerDidCancelShowingViewController:(id)arg1;
- (void)navigationControllerDidShowViewController:(id)arg1;
- (void)navigationControllerWillShowViewController:(id)arg1;
- (void)_restoreSelectedCellsInCaseViewDidNotReallyAppear;
- (void)_saveSelectedRowsInCaseViewDoesNotReallyAppear;
- (void)_clearSavedSelectedCellsWeUsedWhenHedgingOurBets;
- (void)searchBar:(id)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarResultsListButtonClicked:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)windowDidRotate:(id)arg1;
- (void)windowWillAnimateRotation:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (double)_updateNavigationPalette;
- (void)_updatePinnedSearchBar;
@property(nonatomic, getter=isActive) _Bool active;
- (void)setActive:(_Bool)arg1 animated:(_Bool)arg2;
- (void)showHideAnimationDidFinish;
- (void)_sendDelegateDidBeginDidEndSearch;
- (id)_dimmingViewColor;
- (double)_dimmingViewAlpha;
- (void)_hideVisibleRefreshControl;
- (void)_searchBarSuperviewChanged;
- (void)_searchBarSuperviewWillChange;
- (void)_indexBarFrameChanged:(id)arg1;
- (void)_setTableViewVisible:(_Bool)arg1 inView:(id)arg2;
- (void)_hoistSearchBar;
- (void)_adjustTableViewContentInsetsAndOffsetsIgnoringCurrent:(_Bool)arg1;
- (struct UIEdgeInsets)_tableViewContentInsets;
- (void)_enableParentScrollViews;
- (void)_disableParentScrollViews;
- (void)_destroyManagedTableView;
- (id)_createPopoverController;
- (void)_popoverClearButtonPressed:(id)arg1;
- (void)_popoverKeyboardDidHide:(id)arg1;
- (void)_popoverKeyboardDidShow:(id)arg1;
- (_Bool)_isSearchBarInBar;
- (_Bool)hidNavigationBar;
- (id)_topShadowView;
- (id)_containingTableView;
- (id)_containingViewOfClass:(Class)arg1;
- (void)setSearchContentsController:(id)arg1;
- (void)_setupNoResultsLabelIfNecessary;
- (void)setSearchBar:(id)arg1;
- (void)_configureNewSearchBar;
- (_Bool)_areSearchContentsSplitViewMaster;
- (void)_cleanUpSearchBar;
- (void)_configureSearchBarForTableView;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSearchBar:(id)arg1 contentsController:(id)arg2 searchResultsTableViewStyle:(long long)arg3;
- (id)initWithSearchBar:(id)arg1 contentsController:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UISearchDisplayControllerContainerView : UIView
{
    _Bool _collapsedTopView;
    UIView *_topView;
    UIView *_bottomView;
    UIView *_behindView;
    NSLayoutConstraint *_topViewHeightConstraint;
    NSLayoutConstraint *_topViewAttributeTopConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *topViewAttributeTopConstraint; // @synthesize topViewAttributeTopConstraint=_topViewAttributeTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *topViewHeightConstraint; // @synthesize topViewHeightConstraint=_topViewHeightConstraint;
@property(readonly, nonatomic) UIView *behindView; // @synthesize behindView=_behindView;
@property(readonly, nonatomic) UIView *bottomView; // @synthesize bottomView=_bottomView;
@property(readonly, nonatomic) UIView *topView; // @synthesize topView=_topView;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)configureInteractionForContainment:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)adjustTopAttributeConstantByDelta:(double)arg1;
- (void)updateTopAttributeConstant:(double)arg1;
- (void)setBottomViewUserInteractionEnabled:(_Bool)arg1;
- (void)collapseTopView;
- (void)updateTopViewHeight:(double)arg1 animateUpdate:(_Bool)arg2;
- (void)updateTopViewHeight:(double)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 topViewHeight:(double)arg2;

@end

@interface UISearchField : UITextField
{
}

+ (double)defaultHeight;
- (_Bool)_shouldSendContentChangedNotificationsIfOnlyMarkedTextChanged;
- (id)_scriptingInfo;
- (void)setPaddingTop:(float)arg1 paddingLeft:(float)arg2;
- (struct CGRect)rightViewRectForBounds:(struct CGRect)arg1;
- (struct CGRect)_availableTextRectExcludingButtonsForBounds:(struct CGRect)arg1;
- (struct CGRect)iconRect;
- (id)_placeholderColor;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UISearchResultsTableView : UITableView
{
    UISearchDisplayController *_controller;
    double _offsetForNoResultsMessage;
    UIView *_topShadowView;
}

@property(nonatomic) UISearchDisplayController *controller; // @synthesize controller=_controller;
@property(retain, nonatomic, getter=_topShadowView, setter=_setTopShadowView:) UIView *_topShadowView;
- (double)_offsetForNoResultsMessage;
- (void)_setOffsetForNoResultsMessage:(double)arg1;
- (void)_numberOfRowsDidChange;
- (void)setContentOffset:(struct CGPoint)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UISectionRowData : NSObject <NSCopying>
{
    _Bool _valid;
    double _headerHeight;
    double _maxHeaderTitleWidth;
    double _footerHeight;
    double _maxFooterTitleWidth;
    double _headerOffset;
    double _footerOffset;
    unsigned long long _numRows;
    unsigned long long _arrayLength;
    float *_rowHeights;
    NSMutableIndexSet *_forcedNegativeRows;
    double *_rowOffsets;
    _Bool _estimatesRowHeights;
    double _sectionHeight;
    long long _headerAlignment;
    long long _footerAlignment;
    UITableViewRowData *_rowData;
    _Bool _sectionOffsetValid;
    double _sectionOffset;
    long long _sectionRowOffset;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (long long)rowForPoint:(struct CGPoint)arg1;
- (long long)_rowForPoint:(struct CGPoint)arg1 beginningWithRow:(long long)arg2 numberOfRows:(long long)arg3;
- (int)sectionLocationForReorderedRow:(long long)arg1;
- (int)sectionLocationForRow:(long long)arg1;
- (double)offsetForRow:(long long)arg1;
- (void)deleteRowAtIndex:(long long)arg1;
- (void)insertRowAtIndex:(long long)arg1 inSection:(long long)arg2 rowHeight:(double)arg3 tableViewRowData:(id)arg4;
- (void)refreshWithSection:(long long)arg1 tableView:(id)arg2 tableViewRowData:(id)arg3;
- (double)_defaultSectionFooterHeightForSection:(long long)arg1 tableView:(id)arg2 tableViewRowData:(id)arg3;
- (double)_defaultSectionHeaderHeightForSection:(long long)arg1 tableView:(id)arg2 tableViewRowData:(id)arg3;
- (double)heightForEmptySection:(long long)arg1 inTableView:(id)arg2 rowData:(id)arg3;
- (double)heightForFooterInSection:(long long)arg1 canGuess:(_Bool)arg2;
- (double)heightForHeaderInSection:(long long)arg1 canGuess:(_Bool)arg2;
- (double)heightForRow:(long long)arg1 inSection:(long long)arg2 canGuess:(_Bool)arg3;
- (void)updateSectionHeightWithDelta:(double)arg1 section:(long long)arg2 updateFooterOffset:(_Bool)arg3;
- (void)setHeight:(double)arg1 forRow:(long long)arg2;
- (void)addOffset:(double)arg1 fromRow:(long long)arg2;
- (double)_headerOrFooterSizeForTable:(id)arg1 title:(id)arg2 detailText:(id)arg3 isHeader:(_Bool)arg4 stripPaddingForAbuttingView:(_Bool)arg5 isTopHeader:(_Bool)arg6;
- (void)invalidateSectionOffset;
- (void)invalidate;
- (void)dealloc;
- (id)initWithRowData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UISegment : UIImageView
{
    UIView *_info;
    _UISegmentedControlAppearanceStorage *_appearanceStorage;
    double _width;
    struct CGSize _contentOffset;
    long long _barStyle;
    unsigned long long _rightSegmentState;
    NSString *_badgeValue;
    _UIBadgeView *_badgeView;
    id _objectValue;
    struct {
        unsigned int style:3;
        unsigned int size:2;
        unsigned int selected:1;
        unsigned int highlighted:1;
        unsigned int showDivider:1;
        unsigned int hasImage:1;
        unsigned int position:3;
        unsigned int autosizeText:1;
        unsigned int isMomentary:1;
        unsigned int wasSelected:1;
        unsigned int needsBackgroundAndContentViewUpdate:1;
    } _segmentFlags;
    NSArray *_infoConstraints;
    double _requestedScaleFactor;
}

+ (id)_backgroundImageWithStorage:(id)arg1 style:(long long)arg2 mini:(_Bool)arg3 state:(unsigned long long)arg4 position:(unsigned int)arg5 drawMode:(int *)arg6 defaultBlock:(CDUnknownBlockType)arg7;
@property(nonatomic) double requestedScaleFactor; // @synthesize requestedScaleFactor=_requestedScaleFactor;
@property(copy, nonatomic, setter=_setInfoConstraints:) NSArray *_infoConstraints; // @synthesize _infoConstraints;
- (void)layoutSubviews;
- (id)viewForBaselineLayout;
- (double)_idealWidth;
- (struct UIEdgeInsets)_paddingInsets;
- (_Bool)useBlockyMagnificationInClassic;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)infoName;
- (void)_forceInfoDisplay;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (void)setContentOffset:(struct CGSize)arg1;
- (id)label;
- (void)setPosition:(unsigned int)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_positionInfoWithoutAnimation;
- (void)_positionInfo;
- (void)updateConstraints;
- (void)_invalidateInfoConstraints;
- (struct CGSize)contentSize;
- (struct CGSize)_maximumTextSize;
- (double)_barHeight;
- (struct CGRect)contentRect;
- (struct CGRect)_contentRectForBounds:(struct CGRect)arg1;
- (void)animateRemoveForWidth:(double)arg1;
- (void)animateAdd:(_Bool)arg1;
- (_Bool)_shouldUsePadMomentaryAppearance;
- (void)setShowDivider:(_Bool)arg1;
- (_Bool)showDivider;
@property int controlSize;
@property(getter=isMomentary) _Bool momentary;
@property(readonly) UIView *badgeView;
@property(copy, nonatomic) NSString *badgeValue;
- (void)tintColorDidChange;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isHighlighted;
@property(getter=isSelected) _Bool selected;
- (void)setEnabled:(_Bool)arg1;
- (void)_setEnabledAppearance:(_Bool)arg1;
- (void)setAutosizeText:(_Bool)arg1;
- (void)setTintColor:(id)arg1;
- (void)setBarStyle:(long long)arg1;
- (id)disabledTextColor;
- (id)_attributedTextForState:(unsigned long long)arg1 selected:(_Bool)arg2;
- (void)_updateTextColors;
- (void)setWasSelected:(_Bool)arg1;
- (void)updateMasking;
- (_Bool)_hasSelectedColor;
- (id)_currentOptionsStyleTextShadowColor;
- (id)_currentOptionsStyleTextColor;
- (void)_updateBackgroundAndContentViews;
- (void)_updateBackgroundAndContentViewsIfNeeded;
- (void)updateDividerViewForChangedSegment:(id)arg1;
- (void)insertDividerView;
- (id)_dividerImage;
- (void)updateForAppearance:(id)arg1 style:(int)arg2;
- (id)_dividerImageIsCustom:(_Bool *)arg1;
- (unsigned long long)_segmentState;
- (_Bool)_isInMiniBar;
- (void)setNeedsBackgroundAndContentViewUpdate;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)_tintColorArchivingKey;
- (id)initWithCoder:(id)arg1;
- (id)initWithInfo:(id)arg1 style:(long long)arg2 size:(int)arg3 barStyle:(long long)arg4 tintColor:(id)arg5 appearanceStorage:(id)arg6 position:(unsigned int)arg7 autosizeText:(_Bool)arg8;
- (void)_commonSegmentInit;

@end

__attribute__((visibility("hidden")))
@interface UISegmentLabel : UILabel
{
    UILabel *_associatedLabel;
}

@property(nonatomic) UILabel *associatedLabel; // @synthesize associatedLabel=_associatedLabel;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (id)_disabledFontColor;
- (id)_associatedScalingLabel;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UISelectionGrabber : UIView
{
    UISelectionGrabberDot *m_dotView;
    _Bool m_isDotted;
    _Bool m_activeFlattened;
    _Bool m_alertFlattened;
    _Bool m_navigationTransitionFlattened;
    _Bool m_animating;
    int m_orientation;
    int _applicationDeactivationReason;
}

+ (id)_grabberDot;
@property(nonatomic) int orientation; // @synthesize orientation=m_orientation;
@property(nonatomic) _Bool animating; // @synthesize animating=m_animating;
@property(nonatomic) _Bool navigationTransitionFlattened; // @synthesize navigationTransitionFlattened=m_navigationTransitionFlattened;
@property(nonatomic) _Bool activeFlattened; // @synthesize activeFlattened=m_activeFlattened;
@property(nonatomic) _Bool alertFlattened; // @synthesize alertFlattened=m_alertFlattened;
@property(nonatomic) _Bool isDotted; // @synthesize isDotted=m_isDotted;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)didMoveToSuperview;
- (_Bool)isPointedLeft;
- (_Bool)isPointedRight;
- (_Bool)isPointedUp;
- (_Bool)isPointedDown;
- (_Bool)isVertical;
- (void)updateDot;
- (_Bool)scroller:(id)arg1 fullyContainSelectionRect:(struct CGRect)arg2;
- (_Bool)dotIsVisbleInDocument:(struct CGRect)arg1;
- (_Bool)clipDot:(struct CGRect)arg1;
- (void)removeFromSuperview;
- (void)setHidden:(_Bool)arg1;
- (_Bool)autoscrolled;
- (_Bool)inputViewIsChanging;
- (_Bool)isRotating;
- (_Bool)isScaling;
- (_Bool)isScrolling;
- (void)canExpandAfterNavigationTransition:(id)arg1;
- (void)mustFlattenForNavigationTransition:(id)arg1;
- (void)canExpandAfterBecomeActive:(id)arg1;
- (void)mustFlattenForResignActive:(id)arg1;
- (void)saveDeactivationReason:(id)arg1;
- (void)canExpandAfterAlert:(id)arg1;
- (void)mustFlattenForAlert:(id)arg1;
@property(readonly, nonatomic) UITextRangeView *hostView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_dotView;

@end

__attribute__((visibility("hidden")))
@interface UISelectionGrabberDot : UIView
{
    UISelectionGrabber *m_grabber;
}

@property(nonatomic) UISelectionGrabber *grabber; // @synthesize grabber=m_grabber;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (int)textEffectsVisibilityLevel;
- (int)textEffectsVisibilityLevelInKeyboardWindow;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 container:(id)arg2;

@end

@interface UITapGestureRecognizer : UIGestureRecognizer
{
    struct CGPoint _locationInView;
    id _imp;
    unsigned int _delaysRecognitionForGreaterTapCounts;
    long long _buttonType;
}

@property(nonatomic, setter=_setButtonType:) long long _buttonType; // @synthesize _buttonType;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (struct CGPoint)locationOfTouch:(unsigned long long)arg1 inView:(id)arg2;
- (unsigned long long)numberOfTouches;
- (struct CGPoint)locationInView:(id)arg1;
@property(readonly, nonatomic) struct CGPoint location;
@property(readonly, nonatomic) struct CGPoint centroid;
- (void)_appendSubclassDescription:(id)arg1;
- (void)_setDelaysRecognitionForGreaterTapCounts:(_Bool)arg1;
- (_Bool)_delaysRecognitionForGreaterTapCounts;
- (void)setMaximumIntervalBetweenSuccessiveTaps:(double)arg1;
- (double)maximumIntervalBetweenSuccessiveTaps;
- (void)setMaximumSingleTapDuration:(double)arg1;
- (double)maximumSingleTapDuration;
- (void)setAllowableMovement:(double)arg1;
- (double)allowableMovement;
@property(nonatomic) unsigned long long numberOfTouchesRequired;
@property(nonatomic) unsigned long long numberOfTapsRequired;
@property(readonly, nonatomic) NSArray *touches;
- (double)_touchSloppinessFactor;
- (void)tapRecognizerFailedToRecognizeTap:(id)arg1;
- (void)tapRecognizerRecognizedTap:(id)arg1;
- (_Bool)tapIsPossibleForTapRecognizer:(id)arg1;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldRequireFailureOfGestureRecognizer:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (void)_resetGestureRecognizer;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface UITextTapRecognizer : UITapGestureRecognizer
{
}

- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UISelectionTapRecognizer : UITextTapRecognizer
{
    UIResponder<UITextInput> *_textView;
}

@property UIResponder<UITextInput> *textView; // @synthesize textView=_textView;
- (void)setState:(long long)arg1;
- (_Bool)isCloseToSelection;

@end

__attribute__((visibility("hidden")))
@interface UIShadowView : UIView
{
    UIImage *_image;
}

+ (id)bottomShadowImage;
+ (id)topShadowImage;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (void)setShadowImage:(id)arg1 forEdge:(unsigned long long)arg2 inside:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UITextSelectionRect : NSObject
{
}

+ (_Bool)endIsHorizontal:(id)arg1;
+ (_Bool)startIsHorizontal:(id)arg1;
+ (struct CGRect)endEdgeFromRects:(id)arg1;
+ (id)endRectFromRects:(id)arg1;
+ (struct CGRect)startEdgeFromRects:(id)arg1;
+ (id)startRectFromRects:(id)arg1;
@property(readonly, nonatomic) _Bool isVertical;
@property(readonly, nonatomic) _Bool containsStart;
@property(readonly, nonatomic) _Bool containsEnd;
@property(readonly, nonatomic, getter=_isImpl) UITextSelectionRectImpl *isImpl;
- (id)range;
@property(readonly, nonatomic) long long writingDirection;
@property(readonly, nonatomic) struct CGRect rect;

@end

__attribute__((visibility("hidden")))
@interface UISimpleSelectionRect : UITextSelectionRect
{
    struct CGRect _rect;
}

+ (id)rectWithCGRect:(struct CGRect)arg1;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;

@end

@interface UISimpleTextPrintFormatter : UIPrintFormatter
{
}

- (id)initWithAttributedText:(id)arg1;
- (id)initWithText:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSAttributedString *attributedText; // @dynamic attributedText;
@property(retain, nonatomic) UIColor *color; // @dynamic color;
@property(retain, nonatomic) UIFont *font; // @dynamic font;
@property(copy, nonatomic) NSString *text; // @dynamic text;
@property(nonatomic) long long textAlignment; // @dynamic textAlignment;

@end

@interface UISiriTaskAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, retain, nonatomic) AFSiriTask *payload;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithPayload:(id)arg1;

@end

@interface UISlider : UIControl <NSCoding>
{
    float _value;
    float _minValue;
    float _maxValue;
    double _alpha;
    struct __CFDictionary *_contentLookup;
    UIImageView *_minValueImageView;
    UIImageView *_maxValueImageView;
    UIImageView *_thumbView;
    UIImageView *_minTrackView;
    UIImageView *_maxTrackView;
    UIView *_maxTrackClipView;
    struct {
        unsigned int continuous:1;
        unsigned int animating:1;
        unsigned int preparingToAnimate:1;
        unsigned int showValue:1;
        unsigned int trackEnabled:1;
        unsigned int creatingSnapshot:1;
        unsigned int thumbDisabled:1;
        unsigned int minTrackHidden:1;
    } _sliderFlags;
    double _hitOffset;
    UIColor *_minTintColor;
    UIColor *_maxTintColor;
    UIColor *_thumbTintColor;
    UIView *_thumbViewNeue;
    CAShapeLayer *_thumbViewNeueShape;
    _Bool _useLookNeue;
    NSArray *_trackColors;
    _Bool _trackIsArtworkBased;
    _Bool _thumbIsArtworkBased;
    _Bool _maxColorIsValid;
    _Bool _animatingWithDynamics;
    UIImageView *_innerThumbView;
}

@property(retain, nonatomic) UIColor *thumbTintColor; // @synthesize thumbTintColor=_thumbTintColor;
@property(retain, nonatomic) UIColor *maximumTrackTintColor; // @synthesize maximumTrackTintColor=_maxTintColor;
@property(retain, nonatomic) UIColor *minimumTrackTintColor; // @synthesize minimumTrackTintColor=_minTintColor;
- (_Bool)cancelTouchTracking;
- (void)_controlTouchEnded:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchMoved:(id)arg1 withEvent:(id)arg2;
- (void)_controlTouchBegan:(id)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)cancelMouseTracking;
- (void)_sendDelayedActions;
- (void)_sliderAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_sliderAnimationWillStart:(id)arg1 context:(id)arg2;
@property(nonatomic) float maximumValue; // @dynamic maximumValue;
@property(nonatomic) float minimumValue; // @dynamic minimumValue;
- (void)_setValue:(float)arg1 andSendAction:(_Bool)arg2;
- (void)_setValue:(float)arg1 minValue:(float)arg2 maxValue:(float)arg3 andSendAction:(_Bool)arg4;
- (void)setValue:(float)arg1 animated:(_Bool)arg2;
@property(nonatomic) float value; // @dynamic value;
- (void)setAlpha:(double)arg1;
@property(nonatomic, getter=isContinuous) _Bool continuous;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)_updateAppearanceForEnabled:(_Bool)arg1;
- (void)_layoutSubviewsForBoundsChange:(_Bool)arg1;
- (void)_updateMaxTrackColor;
- (void)layoutSubviews;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (struct CGRect)maximumValueImageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)minimumValueImageRectForBounds:(struct CGRect)arg1;
- (void)tintColorDidChange;
@property(retain, nonatomic) UIImage *maximumValueImage;
@property(retain, nonatomic) UIImage *minimumValueImage;
@property(readonly, nonatomic) UIImage *currentMaximumTrackImage;
@property(readonly, nonatomic) UIImage *currentMinimumTrackImage;
@property(readonly, nonatomic) UIImage *currentThumbImage;
- (id)maximumTrackImageForState:(unsigned long long)arg1;
- (id)minimumTrackImageForState:(unsigned long long)arg1;
- (id)thumbImageForState:(unsigned long long)arg1;
- (void)setMaximumTrackImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setMinimumTrackImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setThumbImage:(id)arg1 forState:(unsigned long long)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (id)description;
- (void)dealloc;
- (void)_rebuildControlThumb:(_Bool)arg1 track:(_Bool)arg2;
- (void)_buildTrackArtwork;
- (double)_cornerRadiusForRect:(struct CGRect)arg1;
- (void)_initSubviews;
- (void)_initImages;
- (id)createThumbViewNeue;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (id)_maxValueView;
- (id)_minValueView;
- (id)_maxTrackView;
- (id)_minTrackView;
- (void)_setUseLookNeue:(_Bool)arg1;
- (struct UIEdgeInsets)_thumbHitEdgeInsets;
- (_Bool)_isThumbEnabled;
- (void)_setMinimumTrackVisible:(_Bool)arg1 withDuration:(double)arg2;
- (void)_setThumbEnabled:(_Bool)arg1;
- (_Bool)_trackEnabled;
- (void)_setTrackEnabled:(_Bool)arg1;
- (void)setMaximumTrackImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)setMinimumTrackImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)setThumbImage:(id)arg1 forStates:(unsigned long long)arg2;
- (id)createThumbView;
- (struct CGRect)valueTextRectForBounds:(struct CGRect)arg1;
- (void)setShowValue:(_Bool)arg1;
- (_Bool)isAnimatingValueChange;
- (_Bool)_alwaysHandleScrollerMouseEvent;
- (id)_maximumTrackImageForState:(unsigned long long)arg1;
- (id)_minimumTrackImageForState:(unsigned long long)arg1;
- (id)_thumbImageForState:(unsigned long long)arg1;
- (id)_contentForState:(unsigned long long)arg1;
- (void)_setMaximumTrackImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setMinimumTrackImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setThumbTintColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setThumbImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)_setContent:(id)arg1 forState:(unsigned long long)arg2;
- (id)scriptingInfoWithChildren;
- (id)_scriptingInfo;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (_Bool)isAccessibilityElementByDefault;

@end

__attribute__((visibility("hidden")))
@interface UISliderContent : NSObject
{
    UIImage *thumb;
    UIImage *minTrack;
    UIImage *maxTrack;
}

@property(retain, nonatomic) UIImage *maxTrack; // @synthesize maxTrack;
@property(retain, nonatomic) UIImage *minTrack; // @synthesize minTrack;
@property(retain, nonatomic) UIImage *thumb; // @synthesize thumb;
- (void)dealloc;
@property(readonly, nonatomic) _Bool isEmpty; // @dynamic isEmpty;

@end

@interface UISnapBehavior : UIDynamicBehavior
{
    struct CGPoint _anchorPoint;
    double _damping;
    double _distance;
    double _frequency;
    struct {
        unsigned int attachedToView:1;
        unsigned int dampingSet:1;
        unsigned int frequencySet:1;
        unsigned int lengthSet:1;
    } _stateFlags;
    NSMutableArray *_joints;
    PKPhysicsBody *_anchorBody;
}

@property(nonatomic) double damping; // @synthesize damping=_damping;
- (id)description;
- (void)_dissociate;
- (void)_associate;
- (void)_setFrequency:(double)arg1;
- (double)_frequency;
- (void)_setDistance:(double)arg1;
- (double)_distance;
- (void)dealloc;
- (id)initWithItem:(id)arg1 snapToPoint:(struct CGPoint)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UISnapshotModalViewController : UIViewController
{
    long long _interfaceOrientation;
    UIViewController *_disappearingViewController;
    UINavigationController *_parentController;
}

@property(retain, nonatomic) UIViewController *disappearingViewController; // @synthesize disappearingViewController=_disappearingViewController;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithInterfaceOrientation:(long long)arg1;

@end

@interface UISnapshotView : UIView <UIStatusBarTinting>
{
    struct CGSize _contentSize;
    struct UIEdgeInsets _contentBeyondBounds;
    struct UIEdgeInsets _edgePadding;
    struct UIEdgeInsets _edgeInsets;
    struct CGPoint _contentOffset;
    UIColor *_edgePaddingColor;
    UIView *_imageView;
    NSMutableArray *_edgePaddingViews;
    struct CGRect _snapshotRect;
    UIImageView *_shadowView;
    unsigned int _disableEdgeAntialiasing:1;
    unsigned int _disableVerticalStretch:1;
    UIColor *_statusBarTintColor;
}

@property(retain, nonatomic, setter=_setStatusBarTintColor:) UIColor *_statusBarTintColor; // @synthesize _statusBarTintColor;
@property(retain, nonatomic) UIView *shadowView; // @synthesize shadowView=_shadowView;
@property(retain, nonatomic) UIColor *edgePaddingColor; // @synthesize edgePaddingColor=_edgePaddingColor;
@property(nonatomic, getter=_contentOffset, setter=_setContentOffset:) struct CGPoint contentOffset; // @synthesize contentOffset=_contentOffset;
@property(readonly, nonatomic, getter=_contentSize) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(readonly, nonatomic, getter=_snapshotView) UIView *snapshotView; // @synthesize snapshotView=_imageView;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic) struct UIEdgeInsets edgePadding; // @synthesize edgePadding=_edgePadding;
- (void)captureSnapshotOfView:(id)arg1 withSnapshotType:(int)arg2;
- (void)captureSnapshotRect:(struct CGRect)arg1 fromView:(id)arg2 withSnapshotType:(int)arg3;
- (void)_addEdgePaddingViewInRect:(struct CGRect)arg1;
- (struct CGRect)_contentsCenterForEdgePadding:(struct UIEdgeInsets)arg1 withContentSize:(struct CGSize)arg2;
- (void)_drawEdges:(struct UIEdgeInsets)arg1 withContentSize:(struct CGSize)arg2;
- (struct UIEdgeInsets)_edgePadding;
- (void)layoutSubviews;
- (void)_updateContentsRect;
- (void)_positionImageView;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)setContentStretch:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(nonatomic, getter=_snapshotRect, setter=_setSnapshotRect:) struct CGRect snapshotRect;
@property(nonatomic, getter=isVerticalStretchEnabled) _Bool verticalStretchEnabled;
@property(nonatomic, getter=isEdgeAntialiasingEnabled) _Bool edgeAntialiasingEnabled;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UISocialActivity : UIApplicationExtensionActivity
{
    NSString *_builtinActivityType;
    SLComposeViewController *_socialComposeViewController;
}

+ (long long)activityCategory;
@property(retain, nonatomic) SLComposeViewController *socialComposeViewController; // @synthesize socialComposeViewController=_socialComposeViewController;
@property(copy, nonatomic) NSString *builtinActivityType; // @synthesize builtinActivityType=_builtinActivityType;
- (void)_cleanup;
- (_Bool)_dismissActivityFromViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_presentActivityOnViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)activityViewController;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (_Bool)_canBeExcludedByActivityViewController:(id)arg1;
- (id)activityType;
- (id)debugDescription;
- (void)dealloc;
- (id)initWithActivityType:(id)arg1;
- (id)initWithApplicationExtension:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UISoftwareDimmingWindow : UIWindow
{
    float _overlayLevel;
}

@property(nonatomic) float overlayLevel; // @synthesize overlayLevel=_overlayLevel;
- (void)updateOverlayColor;
- (_Bool)_ignoresHitTest;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UISplitViewController : UIViewController <UIGestureRecognizerDelegate>
{
    id _delegate;
    UIBarButtonItem *_barButtonItem;
    UIBarButtonItem *_displayModeButtonItem;
    NSString *_buttonTitle;
    UIPopoverController *_hiddenPopoverController;
    UIView *_rotationSnapshotView;
    UIResponder *_postTransitionResponder;
    UISnapshotView *_collapsingMasterSnapshotView;
    UISnapshotView *_collapsingDetailSnapshotView;
    double _masterColumnWidth;
    float _gutterWidth;
    float _cornerRadius;
    long long _rotatingFromOrientation;
    long long _lastPresentedOrientation;
    struct CGRect _rotatingFromMasterViewFrame;
    struct CGRect _rotatingToMasterViewFrame;
    NSArray *_cornerImageViews;
    UIView *_underBarSeparatorView;
    unsigned long long _slideTransitionCount;
    UIView *_masterBackgroundView;
    _Bool _presentsInFadingPopover;
    _Bool _presentsWithGesture;
    UIGestureRecognizer *_popoverPresentationGestureRecognizer;
    long long _preferredDisplayMode;
    long long _effectiveTargetDisplayMode;
    long long _pendingDisplayModeChangeCount;
    _Bool _useChangingBoundsLayout;
    struct {
        unsigned int validDelegateHiddenMasterOrientations:5;
        unsigned int delegateHiddenMasterOrientations:5;
        unsigned int delegateImplementsShouldHide:1;
        unsigned int hidden:3;
        unsigned int delegateHandlesTogglingMaster:1;
        unsigned int delegateProvidesBackgroundView:1;
        unsigned int delegateWantsUnSlideCallback:1;
        unsigned int masterOnSlide:1;
        unsigned int delegateWantsWillShowCallback:1;
        unsigned int delegateWantsWillHideCallback:1;
        unsigned int delegateWantsWillPresentCallback:1;
        unsigned int delegateWantsNavigationRequests:1;
        unsigned int resizesDetailOnSlide:1;
        unsigned int delegateSupportedInterfaceOrientations:1;
        unsigned int delegatePreferredInterfaceOrientationForPresentation:1;
        unsigned int disableDetailFrameChanges:1;
        unsigned int delegateWantsShowViewController:1;
        unsigned int delegateWantsPrivateShowViewController:1;
        unsigned int delegateWantsShowDetailViewController:1;
        unsigned int delegateWantsPrivateShowDetailViewController:1;
        unsigned int delegateWantsCollapseSecondaryViewController:1;
        unsigned int delegateWantsPrivateCollapseSecondaryViewController:1;
        unsigned int delegateWantsSeparateSecondaryViewController:1;
        unsigned int delegateWantsPrivateSeparateSecondaryViewController:1;
        unsigned int delegateWantsPrimaryViewControllerForCollapse:1;
        unsigned int delegateWantsPrivatePrimaryViewControllerForCollapse:1;
        unsigned int delegateWantsPrimaryViewControllerForExpanding:1;
        unsigned int delegateWantsPrivatePrimaryViewControllerForExpanding:1;
        unsigned int collapsedState:2;
        unsigned int primaryHidingState:2;
        unsigned int primaryHidingStateForCurrentOrientation:2;
        unsigned int delegateWantsWillChangeToDisplayMode:1;
        unsigned int delegateWantsTargetDisplayModeForAction:1;
        unsigned int pendingPresentMasterViewController:1;
        unsigned int pendingUpdateTargetDisplayMode:1;
        unsigned int collapsingClockwise:1;
    } _splitViewControllerFlags;
    _Bool _resizeForKeyboard;
    NSString *_displayModeButtonItemTitle;
    double _preferredPrimaryColumnWidthFraction;
    double _minimumPrimaryColumnWidth;
    double _maximumPrimaryColumnWidth;
    UIViewController *__preservedDetailController;
    CDUnknownBlockType __didChangeBoundsBlock;
    CDUnknownBlockType __clearPreventRotationHook;
}

+ (_Bool)_optsOutOfPopoverControllerHierarchyCheck;
+ (double)_defaultGutterWidthInView:(id)arg1;
+ (_Bool)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (_Bool)doesOverrideSupportedInterfaceOrientations;
+ (_Bool)doesOverridePreferredInterfaceOrientationForPresentation;
+ (_Bool)_forcePresentsWithGesture;
+ (_Bool)_forcePresentsInSlidingPopover;
@property(copy, nonatomic, setter=_setClearPreventRotationHook:) CDUnknownBlockType _clearPreventRotationHook; // @synthesize _clearPreventRotationHook=__clearPreventRotationHook;
@property(copy, nonatomic, getter=_didChangeBoundsBlock, setter=_setDidChangeBoundsBlock:) CDUnknownBlockType _didChangeBoundsBlock; // @synthesize _didChangeBoundsBlock=__didChangeBoundsBlock;
@property(retain, nonatomic, getter=_preservedDetailController, setter=_setPreservedDetailController:) UIViewController *_preservedDetailController; // @synthesize _preservedDetailController=__preservedDetailController;
@property(nonatomic) _Bool resizeForKeyboard; // @synthesize resizeForKeyboard=_resizeForKeyboard;
@property(nonatomic) double maximumPrimaryColumnWidth; // @synthesize maximumPrimaryColumnWidth=_maximumPrimaryColumnWidth;
@property(nonatomic) double minimumPrimaryColumnWidth; // @synthesize minimumPrimaryColumnWidth=_minimumPrimaryColumnWidth;
@property(nonatomic) double preferredPrimaryColumnWidthFraction; // @synthesize preferredPrimaryColumnWidthFraction=_preferredPrimaryColumnWidthFraction;
@property(copy, nonatomic, setter=_setDisplayModeButtonItemTitle:) NSString *_displayModeButtonItemTitle; // @synthesize _displayModeButtonItemTitle;
@property(nonatomic) _Bool presentsWithGesture; // @synthesize presentsWithGesture=_presentsWithGesture;
@property(nonatomic) id <UISplitViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_popoverController:(id)arg1 didChangeFromVisible:(_Bool)arg2;
- (void)_popoverController:(id)arg1 willChangeToVisible:(_Bool)arg2;
- (void)_popoverController:(id)arg1 willAnimateToFrame:(struct CGRect)arg2;
- (struct CGRect)_detailViewFrameWithPopoverControllerFrame:(struct CGRect)arg1;
@property(nonatomic, setter=_setResizesDetailOnSlide:) _Bool _resizesDetailOnSlide;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (void)__viewWillLayoutSubviews;
- (void)_updateLayoutForStatusBarAndInterfaceOrientation;
- (void)_updateMasterViewControllerFrame;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)snapshotForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
- (void)snapshotAllViews;
- (void)snapshotMasterView;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_invalidateHidesMasterViewInOrientation:(long long)arg1;
- (_Bool)hidesMasterViewDuringRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
- (_Bool)revealsMasterViewDuringRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2;
- (_Bool)_isRotating;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations:(id)arg1;
- (_Bool)_shouldSynthesizeSupportedOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (double)_contentMarginForChildViewController:(id)arg1;
- (void)_updateChildContentMargins;
- (struct UIEdgeInsets)_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(_Bool *)arg2;
- (void)popoverWillAppear:(id)arg1;
- (void)_presentGestureAttemptedWithPresentedPopoverController:(id)arg1;
- (struct CGSize)_contentSizeForChildViewController:(id)arg1 inPopoverController:(id)arg2;
- (void)toggleMasterVisible:(id)arg1;
- (void)_dismissMasterViewController:(_Bool)arg1;
- (void)_presentMasterViewController:(_Bool)arg1;
- (_Bool)_isMasterPopoverVisible;
- (void)_layoutContainerViewWillMoveToWindow:(id)arg1;
- (_Bool)_shouldPreventAutorotation;
- (void)_layoutContainerViewDidMoveToWindow:(id)arg1;
- (void)purgeMemoryForReason:(int)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)displayModeButtonItem;
- (void)_updateDisplayModeButtonItem;
- (void)_triggerDisplayModeAction:(id)arg1;
- (long long)_effectiveTargetDisplayMode;
- (void)_cacheEffectiveTargetDisplayMode;
- (void)_updateTargetDisplayMode;
- (void)_displayModeDidChange;
- (void)_displayModeWillChangeTo:(long long)arg1;
- (void)_changeToDisplayMode:(long long)arg1 forCurrentOrientationOnly:(_Bool)arg2;
- (_Bool)_shouldModifyDisplayModeWhenRotating;
- (long long)_defaultTargetDisplayMode;
- (id)_defaultDisplayModes;
@property(readonly, nonatomic) long long displayMode;
@property(nonatomic) long long preferredDisplayMode;
- (_Bool)_effectivePresentsWithGesture;
@property(nonatomic, setter=_setPresentsInFadingPopover:) _Bool _presentsInFadingPopover;
@property(nonatomic) float gutterWidth;
- (float)preferredLeftColumnWidth;
- (void)setPreferredLeftColumnWidth:(float)arg1;
@property(nonatomic) float masterColumnWidth;
- (void)_showMasterViewAnimated:(_Bool)arg1;
@property(nonatomic) _Bool hidesMasterViewInPortrait;
@property(readonly, nonatomic) _Bool hidesMasterViewInLandscape;
- (id)detailViewController;
- (id)masterViewController;
- (_Bool)_hasMasterViewController;
- (void)_setupUnderBarSeparatorView;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)_removeCollapsingSnapshotViews;
- (_Bool)_disableAutomaticKeyboardBehavior;
- (void)_didTransitionTraitCollection;
- (void)_transitionFromTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_invokeDidChangeBoundsBlock;
- (void)_willTransitionToWindowSize:(struct CGSize)arg1 oldWidthClass:(long long)arg2 newWidthClass:(long long)arg3;
- (void)_prepareForInitialCompactLayout;
- (void)showDetailViewController:(id)arg1 sender:(id)arg2;
- (void)showViewController:(id)arg1 sender:(id)arg2;
- (id)_primaryContentResponder;
- (id)_childContainingSender:(id)arg1;
- (void)_setMasterOverrideTraitCollectionActive:(_Bool)arg1;
@property(copy, nonatomic) NSArray *viewControllers;
- (void)_slideIn:(_Bool)arg1 viewController:(id)arg2 animated:(_Bool)arg3 totalDuration:(double)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)_canSlideMaster;
- (_Bool)_canDisplayHostedMaster;
- (_Bool)_delegateUsesLegacySlideSPI;
- (id)_separateSecondaryViewControllerFromPrimaryViewController:(id)arg1;
- (void)_collapseSecondaryViewController:(id)arg1 ontoPrimaryViewController:(id)arg2;
- (id)_secondaryViewControllerForCollapsing;
- (id)_primaryViewControllerForExpanding;
- (id)_primaryViewControllerForCollapsing;
- (void)_setCollapsedState:(long long)arg1;
- (_Bool)_isCollapsed;
@property(readonly, nonatomic, getter=isCollapsed) _Bool collapsed;
- (double)_primaryColumnWidthForSize:(struct CGSize)arg1;
@property(readonly, nonatomic) double primaryColumnWidth;
- (float)leftColumnWidth;
- (void)_viewControllerHiding:(id)arg1;
- (void)_setupHiddenPopoverControllerWithViewController:(id)arg1;
- (void)_removeRoundedCorners;
- (void)_setupRoundedCorners;
- (struct CGRect)_detailViewFrame;
- (struct CGRect)_detailViewFrame:(struct CGRect)arg1;
- (struct CGRect)_masterViewFrame;
- (struct CGRect)_masterViewFrame:(struct CGRect)arg1;
- (void)_addOrRemovePopoverPresentationGestureRecognizer;
- (void)_calculateDelegateHiddenMasterOrientations;
- (_Bool)_isHidesMasterInLandscapeValid;
- (_Bool)_isHidesMasterInPortraitValid;
- (id)_primaryDimmingView;
- (_Bool)_isMasterViewShown;
- (void)_setPrimaryHidingStateForCurrentOrientation:(long long)arg1;
- (long long)_primaryHidingStateForCurrentOrientation;
- (void)_setPrimaryHidingState:(long long)arg1;
- (long long)_primaryHidingState;
- (long long)_effectivePrimaryHidingState;
- (void)unloadViewForced:(_Bool)arg1;
- (_Bool)_isLandscape;
- (void)loadView;
- (_Bool)_shouldPersistViewWhenCoding;
- (void)_loadNewSubviews:(id)arg1;
- (void)loadSubviews;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_commonInit;
- (struct CGRect)_frameForChildContentContainer:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (id)_allContainedViewControllers;
- (id)_additionalViewControllersToCheckForUserActivity;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UISpringBoardHostedView : UIView
{
    NSString *_remoteViewIdentifier;
    UIWindow *_remoteWindow;
    _Bool _remoteViewOpaque;
}

- (id)remoteViewIdentifier;
- (void)unregister;
- (void)dealloc;
- (void)registerWithIdentifier:(id)arg1 andController:(id)arg2;
- (void)setRemoteViewOpaque:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStateRestorationKeyedUnarchiver : NSKeyedUnarchiver
{
    NSDictionary *_defaultValues;
}

- (id)decodeObjectForKey:(id)arg1;
- (void)dealloc;
- (id)initForReadingWithData:(id)arg1 defaultValues:(id)arg2;

@end

@interface UIStatusBar : _UIScrollsToTopInitiatorView <UIStatusBarServerClient, UIStatusBarStateObserver>
{
    UIStatusBarWindow *_statusBarWindow;
    UIStatusBarServer *_statusBarServer;
    id <UIStatusBarStateProvider> _inProcessProvider;
    _Bool _showsForeground;
    UIStatusBarBackgroundView *_backgroundView;
    UIStatusBarForegroundView *_foregroundView;
    UILabel *_doubleHeightLabel;
    UIView *_doubleHeightLabelContainer;
    NSString *_currentDoubleHeightText;
    CDStruct_0e61b686 _currentRawData;
    NSMutableArray *_interruptedAnimationCompositeViews;
    UIStatusBarBackgroundView *_newStyleBackgroundView;
    UIStatusBarForegroundView *_newStyleForegroundView;
    UIStatusBar *_slidingStatusBar;
    long long _requestedStyle;
    int _styleOverrides;
    UIStatusBarStyleAttributes *_styleAttributes;
    long long _orientation;
    _Bool _hidden;
    _Bool _suppressesHiddenSideEffects;
    _Bool _foreground;
    _Bool _registered;
    _Bool _waitingOnCallbackAfterChangingStyleOverridesLocally;
    _Bool _suppressGlow;
    double _translucentBackgroundAlpha;
    _Bool _showOnlyCenterItems;
    CDStruct_9dad2be2 *_localDataOverrides;
    UIColor *_tintColor;
    UIColor *_lastUsedBackgroundColor;
    UIStatusBarStyleAnimationParameters *_nextTintTransition;
    NSNumber *_overrideHeight;
    NSMutableSet *_disableRasterizationReasons;
    _Bool _persistentAnimationsEnabled;
    _Bool _simulatesLegacyAppearance;
    _Bool _serverUpdatesDisabled;
    _Bool _homeItemsDisabled;
    id <UIStatusBarStyleDelegate> _styleDelegate;
    UIColor *_foregroundColor;
    long long _legibilityStyle;
}

+ (id)_styleAttributesForStatusBarStyle:(long long)arg1 legacy:(_Bool)arg2;
+ (id)_styleAttributesForRequest:(id)arg1;
+ (id)_newStyleAttributesForRequest:(id)arg1;
+ (void)setSuppressUpdateAnimations:(_Bool)arg1;
+ (void)setTintOverrideEnabled:(_Bool)arg1 withColor:(id)arg2;
+ (long long)lowBatteryLevel;
+ (void)getData:(CDStruct_0e61b686 *)arg1 forRequestedData:(const CDStruct_0e61b686 *)arg2 withOverrides:(const CDStruct_9dad2be2 *)arg3;
+ (id)navBarTintColorFromStatusBarTintColor:(id)arg1;
+ (id)statusBarTintColorForNavBarTintColor:(id)arg1;
+ (id)defaultBlueTintColor;
+ (int)cornerStyleForRequestedStyle:(long long)arg1 effectiveStyle:(long long)arg2 alignment:(int)arg3;
+ (long long)defaultStyleForRequestedStyle:(long long)arg1 styleOverrides:(int)arg2;
+ (long long)defaultStatusBarStyleWithTint:(_Bool)arg1;
+ (double)heightForStyle:(long long)arg1 orientation:(long long)arg2;
+ (struct CGRect)_frameInSceneReferenceSpaceForStyleAttributes:(id)arg1 orientation:(long long)arg2;
+ (struct CGRect)_frameInSceneReferenceSpaceForStyleAttributes:(id)arg1 orientation:(long long)arg2 inSceneWithReferenceSize:(struct CGSize)arg3;
+ (struct CGRect)_frameInSceneReferenceSpaceForStyle:(long long)arg1 orientation:(long long)arg2 inSceneWithReferenceSize:(struct CGSize)arg3;
@property(nonatomic) long long legibilityStyle; // @synthesize legibilityStyle=_legibilityStyle;
@property(retain, nonatomic) UIColor *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(nonatomic) _Bool homeItemsDisabled; // @synthesize homeItemsDisabled=_homeItemsDisabled;
@property(nonatomic) _Bool serverUpdatesDisabled; // @synthesize serverUpdatesDisabled=_serverUpdatesDisabled;
@property(nonatomic) _Bool simulatesLegacyAppearance; // @synthesize simulatesLegacyAppearance=_simulatesLegacyAppearance;
@property(nonatomic) _Bool persistentAnimationsEnabled; // @synthesize persistentAnimationsEnabled=_persistentAnimationsEnabled;
@property(nonatomic) id <UIStatusBarStyleDelegate> styleDelegate; // @synthesize styleDelegate=_styleDelegate;
@property(readonly, nonatomic) int styleOverrides; // @synthesize styleOverrides=_styleOverrides;
@property(nonatomic) UIStatusBarWindow *statusBarWindow; // @synthesize statusBarWindow=_statusBarWindow;
- (void)_clearOverrideHeight;
- (void)_setOverrideHeight:(double)arg1;
- (id)_currentComposedDataForStyle:(id)arg1;
- (id)_currentComposedData;
- (double)_hiddenAlphaForHideAnimationParameters:(id)arg1;
- (struct CGAffineTransform)_hiddenTransformForHideAnimationParameters:(id)arg1;
- (_Bool)_isTransparent;
- (id)_backgroundView;
- (void)statusBarStateProvider:(id)arg1 didChangeDoubleHeightStatusStringForStyle:(long long)arg2;
- (void)statusBarStateProvider:(id)arg1 didPostStatusBarData:(const CDStruct_0e61b686 *)arg2 withActions:(int)arg3;
- (void)statusBarServer:(id)arg1 didReceiveDoubleHeightStatusString:(id)arg2 forStyle:(long long)arg3;
- (void)statusBarServer:(id)arg1 didReceiveGlowAnimationState:(_Bool)arg2 forStyle:(long long)arg3;
- (void)statusBarServer:(id)arg1 didReceiveStyleOverrides:(int)arg2;
- (void)statusBarServer:(id)arg1 didReceiveStatusBarData:(const CDStruct_0e61b686 *)arg2 withActions:(int)arg3;
- (void)_itemViewShouldEndDisablingRasterization:(id)arg1;
- (void)_itemViewShouldBeginDisablingRasterization:(id)arg1;
- (void)_endDisablingRasterizationForReason:(id)arg1;
- (void)_beginDisablingRasterizationForReason:(id)arg1;
- (void)_updateShouldRasterize;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)_currentStyleAttributes;
- (void)setStyleRequest:(id)arg1 animationParameters:(id)arg2;
@property(copy, nonatomic) UIStatusBarStyleRequest *styleRequest;
- (id)currentStyleRequestForStyle:(long long)arg1;
- (void)setLegibilityStyle:(long long)arg1 animationParameters:(id)arg2;
- (void)_styleOverridesDidChange:(id)arg1;
- (void)setForegroundColor:(id)arg1 animationParameters:(id)arg2;
- (void)_updatePersistentAnimationsEnabledForForegroundView:(id)arg1;
- (void)_itemViewPerformButtonAction:(id)arg1;
- (void)crossfadeTime:(_Bool)arg1 duration:(double)arg2;
- (void)_willEnterForeground:(id)arg1;
- (void)_didEnterBackground:(id)arg1;
- (void)_evaluateServerRegistration;
- (void)didMoveToSuperview;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (_Bool)_shouldSeekHigherPriorityTouchTarget;
- (_Bool)_touchShouldProduceReturnEvent;
- (id)_styleAttributesForRequest:(id)arg1;
- (void)setSuppressesHiddenSideEffects:(_Bool)arg1;
- (_Bool)isHidden;
- (void)setHidden:(_Bool)arg1;
- (void)setHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHidden:(_Bool)arg1 animationParameters:(id)arg2;
- (void)_statusBarDidAnimateRotation;
- (void)_statusBarWillAnimateRotation;
- (void)setOrientation:(long long)arg1;
- (void)layoutSubviews;
- (void)setTintColor:(id)arg1 withDuration:(double)arg2;
- (void)setTintColor:(id)arg1;
- (id)activeTintColor;
- (void)_swapToNewForegroundView;
- (void)_swapToNewBackgroundView;
- (void)_crossfadeToNewForegroundViewWithAlpha:(double)arg1;
- (void)_crossfadeToNewBackgroundView;
- (void)_setStyle:(id)arg1;
- (void)_setFrameForStyle:(id)arg1;
- (void)_finishedSettingStyleWithOldHeight:(double)arg1 newHeight:(double)arg2 animation:(int)arg3;
- (void)_setStyle:(id)arg1 animation:(int)arg2;
- (id)_prepareToSetStyle:(id)arg1 animation:(int)arg2;
- (void)_updateBackgroundFrame;
- (struct CGRect)_backgroundFrameForAttributes:(id)arg1;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (id)_prepareInterruptedAnimationCompositeViewIncludingForeground:(_Bool)arg1;
- (struct CGAffineTransform)_slideTransform;
- (id)currentDoubleHeightLabelText;
- (void)_adjustDoubleHeightTextVisibility;
- (void)_setDoubleHeightStatusString:(id)arg1;
- (id)_doubleHeightStatusStringForStyle:(long long)arg1;
- (_Bool)_shouldUseInProcessProviderDoubleHeightStatusString;
- (void)_requestStyleAttributes:(id)arg1 animationParameters:(id)arg2;
- (void)requestStyle:(long long)arg1 animationParameters:(id)arg2;
- (void)requestStyle:(long long)arg1 animation:(int)arg2 startTime:(double)arg3 duration:(double)arg4 curve:(long long)arg5;
- (void)requestStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)requestStyle:(long long)arg1;
- (long long)styleForRequestedStyle:(long long)arg1;
- (_Bool)isTranslucent;
- (_Bool)isDoubleHeight;
- (long long)currentStyle;
- (long long)_requestedStyle;
- (double)_standardHeight;
- (double)heightForOrientation:(long long)arg1;
- (struct CGRect)frameForOrientation:(long long)arg1;
- (double)currentHeight;
- (struct CGRect)currentFrame;
- (double)defaultDoubleHeight;
- (double)defaultHeight;
- (void)setLocalDataOverrides:(CDStruct_9dad2be2 *)arg1;
- (void)setShowsOnlyCenterItems:(_Bool)arg1;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setSuppressesGlow:(_Bool)arg1;
- (void)forgetEitherSideHistory;
- (void)noteStyleOverridesChangedLocally;
- (void)forceUpdateStyleOverrides:(_Bool)arg1;
- (void)forceUpdateGlowAnimation;
- (void)forceUpdateDoubleHeightStatus;
- (void)forceUpdateToData:(const CDStruct_0e61b686 *)arg1 animated:(_Bool)arg2;
- (void)forceUpdateData:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 showForegroundView:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1 showForegroundView:(_Bool)arg2 inProcessStateProvider:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarItemView : UIView
{
    double _currentOverlap;
    struct CGContext *_imageContext;
    double _imageContextScale;
    _UILegibilityView *_legibilityView;
    _Bool _visible;
    _Bool _allowsUpdates;
    UIStatusBarItem *_item;
    UIStatusBarLayoutManager *_layoutManager;
    UIStatusBarForegroundStyleAttributes *_foregroundStyle;
}

+ (id)createViewForItem:(id)arg1 withData:(id)arg2 actions:(int)arg3 foregroundStyle:(id)arg4;
@property(nonatomic) _Bool allowsUpdates; // @synthesize allowsUpdates=_allowsUpdates;
@property(nonatomic, getter=isVisible) _Bool visible; // @synthesize visible=_visible;
@property(readonly, nonatomic) UIStatusBarForegroundStyleAttributes *foregroundStyle; // @synthesize foregroundStyle=_foregroundStyle;
@property(nonatomic) UIStatusBarLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(readonly, nonatomic) UIStatusBarItem *item; // @synthesize item=_item;
- (id)description;
- (void)willMoveToWindow:(id)arg1;
- (void)endDisablingRasterization;
- (void)beginDisablingRasterization;
- (id)imageWithShadowNamed:(id)arg1;
- (id)imageWithText:(id)arg1;
- (void)endImageContext;
- (id)imageFromImageContextClippedToWidth:(double)arg1;
- (void)beginImageContextWithMinimumWidth:(double)arg1;
- (void)setPersistentAnimationsEnabled:(_Bool)arg1;
- (void)performPendedActions;
- (id)contentsImage;
- (_Bool)animatesDataChange;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (double)maximumOverlap;
- (double)addContentOverlap:(double)arg1;
- (double)resetContentOverlap;
- (double)extraRightPadding;
- (double)extraLeftPadding;
- (double)shadowPadding;
- (double)standardPadding;
- (long long)textAlignment;
- (id)textFont;
- (long long)textStyle;
- (void)setContentMode:(long long)arg1;
- (double)updateContentsAndWidth;
- (double)adjustFrameToNewSize:(double)arg1;
- (void)setLayerContentsImage:(id)arg1;
- (double)legibilityStrength;
- (long long)legibilityStyle;
- (double)setStatusBarData:(id)arg1 actions:(int)arg2;
- (double)currentRightOverlap;
- (double)currentLeftOverlap;
- (double)currentOverlap;
- (void)setCurrentOverlap:(double)arg1;
- (void)setVisible:(_Bool)arg1 frame:(struct CGRect)arg2 duration:(double)arg3;
- (void)dealloc;
- (id)initWithItem:(id)arg1 data:(id)arg2 actions:(int)arg3 style:(id)arg4;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarActivityItemView : UIStatusBarItemView
{
    UIActivityIndicatorView *_activityIndicator;
    _Bool _slowActivity;
    _Bool _syncActivity;
    _Bool _newsstandActivity;
}

- (double)shadowPadding;
- (double)updateContentsAndWidth;
- (void)setVisible:(_Bool)arg1;
- (void)_stopAnimating;
- (void)_startAnimating;
- (long long)_activityIndicatorStyle;
- (void)dealloc;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarAdornmentWindow : UIWindow
{
}

- (_Bool)_shouldZoom;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarIndicatorItemView : UIStatusBarItemView
{
}

- (id)contentsImage;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarAirplaneModeItemView : UIStatusBarIndicatorItemView
{
}

- (void)setVisible:(_Bool)arg1 frame:(struct CGRect)arg2 duration:(double)arg3;
- (double)extraLeftPadding;

@end

@interface UIStatusBarAnimationParameters : NSObject
{
    double _duration;
    double _delay;
    long long _curve;
    id <_UIBasicAnimationFactory> _animationFactory;
    double _startTime;
}

+ (void)animateWithParameters:(id)arg1 fromCurrentState:(_Bool)arg2 frameInterval:(double)arg3 animations:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)animateWithParameters:(id)arg1 fromCurrentState:(_Bool)arg2 animations:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)animateWithParameters:(id)arg1 animations:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) id <_UIBasicAnimationFactory> animationFactory; // @synthesize animationFactory=_animationFactory;
@property(nonatomic) long long curve; // @synthesize curve=_curve;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double delay; // @synthesize delay=_delay;
- (_Bool)shouldAnimate;
- (id)initWithEmptyParameters;
- (id)initWithDefaultParameters;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarAppIconItemView : UIStatusBarItemView
{
}

- (id)contentsImage;
- (id)_appBundleIdentifier;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarBackgroundView : UIView
{
    UIStatusBarStyleAttributes *_style;
    UIStatusBarCorners *_topCorners;
    UIImageView *_glowView;
    _Bool _glowEnabled;
    _Bool _suppressGlow;
}

- (_Bool)_topCornersAreRounded;
- (id)_glowImage;
- (id)_baseImage;
- (id)_backgroundImageName;
- (void)_stopGlowAnimation;
- (void)_startGlowAnimationWaitForNextCycle:(_Bool)arg1;
- (_Bool)_styleCanGlow;
- (void)setSuppressesGlow:(_Bool)arg1;
- (void)_setGlowAnimationEnabled:(_Bool)arg1 waitForNextCycle:(_Bool)arg2;
- (void)setGlowAnimationEnabled:(_Bool)arg1;
- (id)style;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(id)arg2 backgroundColor:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarBatteryItemView : UIStatusBarItemView
{
    int _capacity;
    int _state;
    UIView *_accessoryView;
}

- (double)legibilityStrength;
- (void)_updateAccessoryImage;
- (double)extraRightPadding;
- (id)contentsImage;
- (id)_accessoryImage;
- (_Bool)_needsAccessoryImage;
- (double)_batteryYOffsetWithBackground:(id)arg1;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarBatteryPercentItemView : UIStatusBarItemView
{
    NSString *_percentString;
}

- (long long)textStyle;
- (long long)textAlignment;
- (_Bool)animatesDataChange;
- (double)extraRightPadding;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarBluetoothBatteryItemView : UIStatusBarItemView
{
    int _capacity;
}

- (double)extraLeftPadding;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarBluetoothItemView : UIStatusBarItemView
{
    _Bool _connected;
    _Bool _shouldAnimateConnection;
}

- (double)alphaForConnected:(_Bool)arg1;
- (void)setVisible:(_Bool)arg1;
- (id)contentsImage;
- (void)_blinkAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)performPendedActions;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarButtonActionItemView : UIStatusBarItemView
{
    UIButton *_button;
    UIButton *_externalButton;
}

- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)usesAdvancedActions;
- (long long)buttonType;
- (void)_pressAndHoldButton:(id)arg1;
- (void)_doubleTapButton:(id)arg1;
- (void)_pressButton:(id)arg1;
- (void)_triggerButtonWithAction:(long long)arg1;
- (void)layoutSubviews;
- (double)updateContentsAndWidth;
- (id)_createButton;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarComposedData : NSObject <NSCopying>
{
    CDStruct_0e61b686 _rawData;
    _Bool _itemEnabled[30];
    NSString *_doubleHeightStatus;
}

@property(copy, nonatomic) NSString *doubleHeightStatus; // @synthesize doubleHeightStatus=_doubleHeightStatus;
- (void)setItem:(int)arg1 enabled:(_Bool)arg2;
- (_Bool)isItemEnabled:(int)arg1;
@property(readonly, nonatomic) CDStruct_0e61b686 *rawData;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRawData:(const CDStruct_0e61b686 *)arg1;

@end

@interface UIStatusBarCorners : UIView
{
    int _cornerStyle;
    int _cornerAlignment;
    UIView *_leftCorner;
    UIView *_rightCorner;
}

+ (double)cornerRadius;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (id)_imageForCornerWithStyle:(int)arg1;
- (int)cornerStyle;
- (void)dealloc;
- (id)initForAlignment:(int)arg1 style:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarDataNetworkItemView : UIStatusBarItemView
{
    int _dataNetworkType;
    int _wifiStrengthRaw;
    int _wifiStrengthBars;
    _Bool _enableRSSI;
    _Bool _showRSSI;
}

- (id)_stringForRSSI;
- (id)_dataNetworkImage;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (double)maximumOverlap;
- (double)extraLeftPadding;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarDoubleHeightItemView : UIStatusBarItemView
{
    NSString *_contentsString;
    double _letterSpacing;
    _Bool _ellipsize;
}

- (double)extraRightPadding;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarForegroundStyleAttributes : NSObject
{
    double _height;
    long long _legibilityStyle;
    NSMutableDictionary *_cachedFonts;
}

- (double)airplaneItemExtraMargin;
- (void)setThermalColorShadow;
- (int)legacyStyle;
- (_Bool)usesVerticalLayout;
- (struct CGPoint)positionForMoonMaskInBounds:(struct CGRect)arg1;
- (double)sizeForMoonMaskVisible:(_Bool)arg1;
- (id)textForNetworkType:(int)arg1;
- (double)bluetoothBatteryExtraPadding;
- (id)tintColor;
- (id)textColorForStyle:(long long)arg1;
- (id)makeTextFontForStyle:(long long)arg1;
- (id)textFontForStyle:(long long)arg1;
- (id)expandedNameForImageName:(id)arg1;
- (id)cachedImageWithText:(id)arg1 forWidth:(double)arg2 lineBreakMode:(long long)arg3 letterSpacing:(double)arg4 textAlignment:(long long)arg5 style:(long long)arg6 itemType:(int)arg7;
- (id)imageWithText:(id)arg1 ofItemType:(int)arg2 forWidth:(double)arg3 lineBreakMode:(long long)arg4 letterSpacing:(double)arg5 textAlignment:(long long)arg6 style:(long long)arg7 withLegibilityStyle:(long long)arg8 legibilityStrength:(double)arg9;
- (id)shadowImageForImage:(id)arg1 withIdentifier:(id)arg2 forStyle:(long long)arg3 withStrength:(double)arg4 inTempGroup:(id)arg5;
- (id)shadowImageForImage:(id)arg1 withIdentifier:(id)arg2 forStyle:(long long)arg3 withStrength:(double)arg4;
- (id)imageNamed:(id)arg1 withLegibilityStyle:(long long)arg2 legibilityStrength:(double)arg3;
- (id)imageNamed:(id)arg1;
- (id)untintedImageNamed:(id)arg1;
- (id)uncachedImageNamed:(id)arg1;
- (void)cacheImage:(id)arg1 named:(id)arg2 inTempGroup:(id)arg3;
- (void)_cacheImage:(id)arg1 named:(id)arg2;
- (id)cachedImageNamed:(id)arg1 inTempGroup:(id)arg2;
- (id)_cachedImageNamed:(id)arg1;
- (double)shadowPadding;
- (double)edgePadding;
- (double)standardPadding;
- (double)scale;
- (void)drawTextInRect:(struct CGRect)arg1 withColor:(id)arg2 withBlock:(CDUnknownBlockType)arg3;
- (void)drawText:(id)arg1 forWidth:(double)arg2 lineBreakMode:(long long)arg3 letterSpacing:(double)arg4 textAlignment:(long long)arg5 style:(long long)arg6 textSize:(struct CGSize)arg7 textHeight:(double)arg8;
- (double)textOffsetForStyle:(long long)arg1;
- (void)_drawText:(id)arg1 inRect:(struct CGRect)arg2 withFont:(id)arg3 lineBreakMode:(long long)arg4 letterSpacing:(double)arg5 textAlignment:(long long)arg6;
- (void)drawBluetoothBatteryInsidesWithSize:(struct CGSize)arg1 capacity:(double)arg2;
- (id)bluetoothBatteryImageNameWithCapacity:(double)arg1;
- (void)drawBatteryInsidesWithSize:(struct CGSize)arg1 capacity:(double)arg2 charging:(_Bool)arg3;
- (id)batteryImageNameWithCapacity:(double)arg1;
- (double)batteryAccessoryMargin;
- (long long)activityIndicatorStyleWithSyncActivity:(_Bool)arg1;
- (long long)legibilityStyle;
- (double)height;
- (id)uniqueIdentifier;
- (void)dealloc;
- (id)initWithHeight:(double)arg1 legibilityStyle:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarNewUIForegroundStyleAttributes : UIStatusBarForegroundStyleAttributes
{
    NSString *_uniqueIdentifier;
    _Bool _isTintColorBlack;
    _Bool _hasBusyBackground;
    UIColor *_tintColor;
}

@property(readonly, retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
- (struct CGPoint)positionForMoonMaskInBounds:(struct CGRect)arg1;
- (double)sizeForMoonMaskVisible:(_Bool)arg1;
- (double)bluetoothBatteryExtraPadding;
- (id)textForNetworkType:(int)arg1;
- (id)textColorForStyle:(long long)arg1;
- (id)makeTextFontForStyle:(long long)arg1;
- (double)textOffsetForStyle:(long long)arg1;
- (_Bool)_shouldUseBoldFontForStyle:(long long)arg1;
- (id)proportionalFontForFont:(id)arg1;
- (id)imageNamed:(id)arg1 withLegibilityStyle:(long long)arg2 legibilityStrength:(double)arg3;
- (id)expandedNameForImageName:(id)arg1;
- (double)edgePadding;
- (void)drawBluetoothBatteryInsidesWithSize:(struct CGSize)arg1 capacity:(double)arg2;
- (id)bluetoothBatteryImageNameWithCapacity:(double)arg1;
- (struct UIEdgeInsets)edgeInsetsForBluetoothBatteryInsides;
- (struct UIEdgeInsets)edgeInsetsForBatteryInsides;
- (double)batteryAccessoryMargin;
- (id)_batteryColorForCapacity:(double)arg1 lowCapacity:(double)arg2 charging:(_Bool)arg3;
- (void)drawBatteryInsidesWithSize:(struct CGSize)arg1 capacity:(double)arg2 charging:(_Bool)arg3;
- (id)batteryImageNameWithCapacity:(double)arg1;
- (double)_roundDimension:(double)arg1;
- (long long)activityIndicatorStyleWithSyncActivity:(_Bool)arg1;
- (id)uniqueIdentifier;
- (void)dealloc;
- (id)initWithHeight:(double)arg1 legibilityStyle:(long long)arg2;
- (id)initWithHeight:(double)arg1 legibilityStyle:(long long)arg2 tintColor:(id)arg3 hasBusyBackground:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarExternalForegroundStyleAttributes : UIStatusBarNewUIForegroundStyleAttributes
{
}

- (id)textForNetworkType:(int)arg1;
- (double)textOffsetForStyle:(long long)arg1;
- (id)makeTextFontForStyle:(long long)arg1;
- (id)expandedNameForImageName:(id)arg1;
- (long long)activityIndicatorStyleWithSyncActivity:(_Bool)arg1;
- (double)batteryAccessoryMargin;
- (struct UIEdgeInsets)edgeInsetsForBluetoothBatteryInsides;
- (struct UIEdgeInsets)edgeInsetsForBatteryInsides;
- (double)edgePadding;
- (double)standardPadding;
- (_Bool)usesVerticalLayout;
- (double)scale;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarExternalInCallForegroundStyleAttributes : UIStatusBarExternalForegroundStyleAttributes
{
}

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarExternalNavigationForegroundStyleAttributes : UIStatusBarExternalForegroundStyleAttributes
{
}

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarStyleAttributes : NSObject
{
    UIStatusBarStyleRequest *_request;
    UIStatusBarForegroundStyleAttributes *_foregroundStyle;
}

- (long long)tapButtonType;
- (_Bool)shouldShowInternalItemType:(int)arg1 withScreenCapabilities:(id)arg2;
- (double)glowAnimationDuration;
- (id)newForegroundStyleWithHeight:(double)arg1;
- (double)foregroundAlpha;
- (id)backgroundImageName;
- (id)backgroundColorWithTintColor:(id)arg1;
- (_Bool)shouldUseVisualAltitude;
- (_Bool)isDoubleHeight;
- (_Bool)usesVerticalLayout;
- (_Bool)isTransparent;
- (_Bool)isTranslucent;
- (_Bool)areTopCornersRounded;
- (int)cornerStyle;
- (double)heightForMetrics:(long long)arg1;
- (double)heightForOrientation:(long long)arg1;
- (long long)idiom;
- (id)foregroundStyle;
- (_Bool)supportsRasterization;
- (long long)legibilityStyle;
- (long long)style;
- (void)dealloc;
- (id)init;
- (id)initWithRequest:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarNewUIStyleAttributes : UIStatusBarStyleAttributes
{
    UIColor *_backgroundColor;
    UIColor *_foregroundColor;
    _Bool _hasBusyBackground;
}

- (id)newForegroundStyleWithHeight:(double)arg1;
- (Class)foregroundStyleClass;
- (id)backgroundColorWithTintColor:(id)arg1;
- (_Bool)shouldUseVisualAltitude;
- (_Bool)isTransparent;
- (_Bool)isTranslucent;
- (long long)legibilityStyle;
- (void)dealloc;
- (id)initWithRequest:(id)arg1;
- (id)initWithRequest:(id)arg1 backgroundColor:(id)arg2 foregroundColor:(id)arg3;
- (id)initWithRequest:(id)arg1 backgroundColor:(id)arg2 foregroundColor:(id)arg3 hasBusyBackground:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarExternalStyleAttributes : UIStatusBarNewUIStyleAttributes
{
}

- (long long)tapButtonType;
- (_Bool)shouldShowInternalItemType:(int)arg1 withScreenCapabilities:(id)arg2;
- (Class)foregroundStyleClass;
- (id)backgroundImageName;
- (double)heightForMetrics:(long long)arg1;
- (long long)idiom;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarExternalTranslucentForegroundStyleAttributes : UIStatusBarExternalForegroundStyleAttributes
{
}

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarForegroundView : UIView
{
    _Bool _usesVerticalLayout;
    _Bool _itemIsEnabled[30];
    UIStatusBarLayoutManager *_layoutManagers[3];
    int _ignoreDataLevel;
    NSMutableArray *_actionAnimationStack;
    UIStatusBarComposedData *_pendedData;
    int _pendedActions;
    long long _idiom;
    UIStatusBarForegroundStyleAttributes *_foregroundStyle;
}

@property(readonly, nonatomic) UIStatusBarForegroundStyleAttributes *foregroundStyle; // @synthesize foregroundStyle=_foregroundStyle;
@property(nonatomic) long long idiom; // @synthesize idiom=_idiom;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setPersistentAnimationsEnabled:(_Bool)arg1;
- (double)edgePadding;
- (_Bool)_tryToPlaceItem:(id)arg1 inItemArray:(id)arg2 layoutManager:(id)arg3 roomRemaining:(double *)arg4 allowSwap:(_Bool)arg5 swappedItem:(id *)arg6;
- (id)_computeVisibleItemsPreservingHistory:(_Bool)arg1;
- (void)_reflowItemViewsWithDuration:(double)arg1 preserveHistory:(_Bool)arg2;
- (void)_cleanUpAfterDataChange;
- (void)_cleanUpAfterSimpleReflow;
- (_Bool)ignoringData;
- (void)stopIgnoringData:(_Bool)arg1;
- (void)startIgnoringData;
- (void)reflowItemViewsForgettingEitherSideItemHistory;
- (void)reflowItemViews:(_Bool)arg1;
- (void)_reflowItemViewsCrossfadingCenterWithDuration:(double)arg1;
- (void)reflowItemViewsCrossfadingCenter:(id)arg1 duration:(double)arg2;
- (void)setStatusBarData:(id)arg1 actions:(int)arg2 animated:(_Bool)arg3;
- (void)_setStatusBarData:(id)arg1 actions:(int)arg2 animated:(_Bool)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 foregroundStyle:(id)arg2 usesVerticalLayout:(_Bool)arg3;

@end

@interface UIStatusBarHideAnimationParameters : UIStatusBarAnimationParameters
{
    int _hideAnimation;
    double _additionalSlideHeight;
}

@property(nonatomic) double additionalSlideHeight; // @synthesize additionalSlideHeight=_additionalSlideHeight;
@property(nonatomic) int hideAnimation; // @synthesize hideAnimation=_hideAnimation;
- (_Bool)shouldAnimate;
- (id)initWithDefaultParameters;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarHomeItemView : UIStatusBarButtonActionItemView
{
}

- (_Bool)usesAdvancedActions;
- (long long)buttonType;
- (double)extraRightPadding;
- (id)contentsImage;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarItem : NSObject
{
    long long _idiom;
    int _type;
}

+ (_Bool)isItemWithTypeExclusive:(int)arg1;
+ (_Bool)itemType:(int)arg1 idiom:(long long)arg2 appearsInRegion:(int)arg3;
+ (_Bool)itemType:(int)arg1 idiom:(long long)arg2 canBeEnabledForData:(id)arg3 style:(id)arg4;
+ (_Bool)typeIsValid:(int)arg1;
+ (id)itemWithType:(int)arg1 idiom:(long long)arg2;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
- (id)description;
- (long long)compareCenterOrder:(id)arg1;
- (long long)compareRightOrder:(id)arg1;
- (long long)compareLeftOrder:(id)arg1;
- (long long)comparePriority:(id)arg1;
- (_Bool)appearsInRegion:(int)arg1;
- (_Bool)appearsOnRight;
- (_Bool)appearsOnLeft;
@property(readonly, nonatomic) NSString *indicatorName;
- (int)centerOrder;
@property(readonly, nonatomic) int rightOrder;
@property(readonly, nonatomic) int leftOrder;
@property(readonly, nonatomic) int priority;
@property(readonly, nonatomic) Class viewClass;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarLayoutManager : NSObject
{
    UIStatusBarForegroundView *_foregroundView;
    int _region;
    UIStatusBarItemView *_itemViews[30];
    _Bool _persistentAnimationsEnabled;
    _Bool _usesVerticalLayout;
}

@property(readonly, nonatomic) _Bool usesVerticalLayout; // @synthesize usesVerticalLayout=_usesVerticalLayout;
@property(nonatomic) _Bool persistentAnimationsEnabled; // @synthesize persistentAnimationsEnabled=_persistentAnimationsEnabled;
@property(nonatomic) UIStatusBarForegroundView *foregroundView; // @synthesize foregroundView=_foregroundView;
- (struct CGRect)_repositionedNewFrame:(struct CGRect)arg1 sizeDelta:(double)arg2;
- (double)_positionAfterPlacingItemView:(id)arg1 startPosition:(double)arg2 firstView:(_Bool)arg3;
- (struct CGRect)_frameForItemView:(id)arg1 startPosition:(double)arg2 firstView:(_Bool)arg3;
- (double)_startPosition;
- (SEL)_itemSortSelector;
- (id)_itemViewsSortedForLayout;
- (id)_itemViews;
- (id)_createViewForItem:(id)arg1 withData:(id)arg2 actions:(int)arg3;
- (id)_viewForItem:(id)arg1;
- (double)_sizeNeededForItemView:(id)arg1;
- (void)itemView:(id)arg1 sizeChangedBy:(double)arg2;
- (_Bool)itemIsVisible:(id)arg1;
- (struct CGRect)rectForItems:(id)arg1;
- (double)removeOverlap:(double)arg1 fromItems:(id)arg2;
- (double)distributeOverlap:(double)arg1 amongItems:(id)arg2;
- (void)clearOverlapFromItems:(id)arg1;
- (double)sizeNeededForItems:(id)arg1;
- (double)sizeNeededForItem:(id)arg1;
- (void)makeVisibleItemsPerformPendedActions;
- (void)positionInvisibleItems;
- (void)removeDisabledItems:(_Bool *)arg1;
- (void)reflowWithVisibleItems:(id)arg1 duration:(double)arg2;
- (_Bool)updateDoubleHeightItem;
- (_Bool)prepareDoubleHeightItemWithEnabledItems:(_Bool *)arg1;
- (_Bool)_updateItemView:(id)arg1 withData:(id)arg2 actions:(int)arg3 animated:(_Bool)arg4;
- (_Bool)_processDelta:(double)arg1 forView:(id)arg2;
- (void)_positionNewItemViewsWithEnabledItems:(_Bool *)arg1;
- (void)_prepareEnabledItemType:(int)arg1 withEnabledItems:(_Bool *)arg2 withData:(id)arg3 actions:(int)arg4 itemAppearing:(_Bool *)arg5 itemDisappearing:(_Bool *)arg6;
- (_Bool)updateItemsWithData:(id)arg1 actions:(int)arg2 animated:(_Bool)arg3;
- (void)setVisibilityOfItem:(id)arg1 visible:(_Bool)arg2;
- (void)setVisibilityOfAllItems:(_Bool)arg1;
- (_Bool)prepareEnabledItems:(_Bool *)arg1 withData:(id)arg2 actions:(int)arg3;
- (void)_addOriginDelta:(double)arg1 toPoint:(struct CGPoint *)arg2;
- (void)_setOrigin:(double)arg1 forPoint:(struct CGPoint *)arg2;
- (double)_dimensionForSize:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithRegion:(int)arg1 foregroundView:(id)arg2 usesVerticalLayout:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarLocationItemView : UIStatusBarItemView
{
    int _iconType;
}

- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarLockScreenForegroundStyleAttributes : UIStatusBarNewUIForegroundStyleAttributes
{
}

- (struct CGPoint)positionForMoonMaskInBounds:(struct CGRect)arg1;
- (double)sizeForMoonMaskVisible:(_Bool)arg1;
- (double)textOffsetForStyle:(long long)arg1;
- (id)makeTextFontForStyle:(long long)arg1;
- (struct UIEdgeInsets)edgeInsetsForBluetoothBatteryInsides;
- (struct UIEdgeInsets)edgeInsetsForBatteryInsides;
- (long long)activityIndicatorStyleWithSyncActivity:(_Bool)arg1;
- (id)expandedNameForImageName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarLockScreenStyleAttributes : UIStatusBarNewUIStyleAttributes
{
}

- (_Bool)shouldShowInternalItemType:(int)arg1 withScreenCapabilities:(id)arg2;
- (Class)foregroundStyleClass;
- (double)heightForMetrics:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarMapsCompassItemView : UIStatusBarItemView
{
    MKStarkCompassView *_compassView;
}

- (double)updateContentsAndWidth;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarNavigationItemView : UIStatusBarAppIconItemView
{
}

- (id)_appBundleIdentifier;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarNewUIDoubleHeightStyleAttributes : UIStatusBarNewUIStyleAttributes
{
}

- (_Bool)isDoubleHeight;
- (double)heightForMetrics:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarNotChargingItemView : UIStatusBarItemView
{
    NSString *_notChargingString;
}

- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (void)dealloc;

@end

@interface UIStatusBarOrientationAnimationParameters : UIStatusBarAnimationParameters
{
    int _orientationAnimation;
}

@property(nonatomic) int orientationAnimation; // @synthesize orientationAnimation=_orientationAnimation;
- (_Bool)shouldAnimate;
- (id)initWithDefaultParameters;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarPublisher : NSObject
{
    struct __CFMachPort *_machPort;
    int _styleOverrides;
    NSMutableSet *_statusBarItems;
}

- (void)removeStatusBarItem:(int)arg1;
- (void)addStatusBarItem:(int)arg1;
- (id)statusBarItems;
- (int)removeStyleOverrides:(int)arg1;
- (int)addStyleOverrides:(int)arg1;
- (int)styleOverrides;
- (unsigned int)publisherPort;
- (void)dealloc;
- (id)initWithCFMachPort:(struct __CFMachPort *)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarQuietModeItemView : UIStatusBarIndicatorItemView
{
    _Bool _hideForAction;
    _Bool _registeredForNotifications;
    _Bool _inactive;
}

- (void)setVisible:(_Bool)arg1;
- (double)_visibleAlpha;
- (void)setVisible:(_Bool)arg1 frame:(struct CGRect)arg2 duration:(double)arg3;
- (void)_triggerAction:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarReturnToCallItemView : UIStatusBarAppIconItemView
{
    UILabel *_textLabel;
}

- (id)_appBundleIdentifier;
- (void)layoutSubviews;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (void)dealloc;

@end

@interface UIStatusBarServer : NSObject
{
    id <UIStatusBarServerClient> _statusBar;
    struct __CFRunLoopSource *_source;
}

+ (id)getDoubleHeightStatusStringForStyle:(long long)arg1;
+ (_Bool)getGlowAnimationStateForStyle:(long long)arg1;
+ (double)getGlowAnimationEndTimeForStyle:(long long)arg1;
+ (int)getStyleOverrides;
+ (CDStruct_9dad2be2 *)getStatusBarOverrideData;
+ (const CDStruct_0e61b686 *)getStatusBarData;
+ (void)permanentizeStatusBarOverrideData;
+ (void)postStatusBarOverrideData:(CDStruct_9dad2be2 *)arg1;
+ (void)removeStatusBarItem:(int)arg1;
+ (void)addStatusBarItem:(int)arg1;
+ (void)postDoubleHeightStatusString:(id)arg1 forStyle:(long long)arg2;
+ (void)postGlowAnimationState:(_Bool)arg1 forStyle:(long long)arg2;
+ (void)removeStyleOverrides:(int)arg1;
+ (void)addStyleOverrides:(int)arg1;
+ (void)postStatusBarData:(const CDStruct_0e61b686 *)arg1 withActions:(int)arg2;
+ (unsigned int)_publisherPort;
+ (unsigned int)_serverPort;
+ (void)runServer;
@property(retain, nonatomic) id <UIStatusBarServerClient> statusBar; // @synthesize statusBar=_statusBar;
- (void)_receivedDoubleHeightStatus:(const char *)arg1 forStyle:(long long)arg2;
- (void)_receivedGlowAnimationState:(_Bool)arg1 forStyle:(long long)arg2;
- (void)_receivedStyleOverrides:(int)arg1;
- (void)_receivedStatusBarData:(CDStruct_0e61b686 *)arg1 actions:(int)arg2;
- (void)dealloc;
- (id)initWithStatusBar:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarServerThread : NSThread
{
    NSMutableArray *_clientPorts;
    NSMutableArray *_publishers;
    CDStruct_0e61b686 _statusBarData;
    CDStruct_0e61b686 _composedStatusBarData;
    CDStruct_9dad2be2 _overrides;
    struct __CFDictionary *_doubleHeightStatusStrings;
    struct __CFDictionary *_glowAnimationStates;
    NSMutableDictionary *_glowAnimationEndTimes;
    _Bool _composedStatusBarDataValid;
}

- (void)_removeStatusBarItem:(int)arg1 forPublisher:(id)arg2;
- (void)_addStatusBarItem:(int)arg1 forPublisher:(id)arg2;
- (_Bool)_permanentizeStatusBarOverrideData;
- (void)_postStatusBarOverrideData:(CDStruct_9dad2be2 *)arg1;
- (void)_postDoubleHeightStatus:(char *)arg1 forStyle:(long long)arg2;
- (id)_doubleHeightStatusStringForStyle:(long long)arg1;
- (void)_postGlowAnimationState:(_Bool)arg1 forStyle:(long long)arg2;
- (_Bool)_glowAnimationStateForStyle:(long long)arg1;
- (double)_glowAnimationEndTimeForStyle:(long long)arg1;
- (void)_removeAnimationEndTimesForOverrides:(int)arg1;
- (void)_removeStyleOverrides:(int)arg1 forPublisher:(id)arg2;
- (void)_setAnimationEndTimesForOverrides:(int)arg1;
- (void)_addStyleOverrides:(int)arg1 forPublisher:(id)arg2;
- (void)_broadcastStyleOverrides;
- (int)_styleOverrides;
- (void)_postStatusBarData:(CDStruct_0e61b686 *)arg1 actions:(int)arg2;
- (void)_broadcastStatusBarDataWithActions:(int)arg1;
- (CDStruct_9dad2be2 *)_statusBarOverrideData;
- (CDStruct_0e61b686 *)_statusBarData;
- (void)_removePublisher:(struct __CFMachPort *)arg1;
- (id)_publisherForPort:(unsigned int)arg1;
- (void)_removeClient:(struct __CFMachPort *)arg1;
- (void)_addClient:(unsigned int)arg1;
- (void)main;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarServiceItemView : UIStatusBarItemView
{
    NSString *_serviceString;
    NSString *_crossfadeString;
    unsigned long long _crossfadeStep;
    double _maxWidth;
    double _serviceWidth;
    double _crossfadeWidth;
    int _contentType;
    _Bool _loopingNecessaryForString;
    _Bool _loopNowIfNecessary;
    _Bool _loopingNow;
    double _letterSpacing;
}

- (void)dealloc;
- (_Bool)_loopingNecessary;
- (void)_crossfadeStepAnimation;
- (_Bool)_crossfaded;
- (void)_finalAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_loopAnimationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)performPendedActions;
- (double)extraRightPadding;
- (_Bool)animatesDataChange;
- (void)setVisible:(_Bool)arg1 frame:(struct CGRect)arg2 duration:(double)arg3;
- (id)contentsImage;
- (id)_crossfadeContentsImage;
- (id)_serviceContentsImage;
- (id)_contentsImageFromString:(id)arg1 withWidth:(double)arg2 letterSpacing:(double)arg3;
- (id)_cachedContentImageForString:(id)arg1 withWidth:(double)arg2 letterSpacing:(double)arg3;
- (double)updateContentsAndWidth;
- (long long)legibilityStyle;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;
- (_Bool)updateForContentType:(int)arg1 serviceString:(id)arg2 serviceCrossfadeString:(id)arg3 maxWidth:(double)arg4 actions:(int)arg5;
- (double)addContentOverlap:(double)arg1;
- (double)resetContentOverlap;
- (double)standardPadding;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarSignalStrengthItemView : UIStatusBarItemView
{
    int _signalStrengthRaw;
    int _signalStrengthBars;
    _Bool _enableRSSI;
    _Bool _showRSSI;
}

- (id)_stringForRSSI;
- (double)extraRightPadding;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

@interface UIStatusBarStyleAnimationParameters : UIStatusBarAnimationParameters
{
    int _styleAnimation;
}

@property(nonatomic) int styleAnimation; // @synthesize styleAnimation=_styleAnimation;
- (_Bool)shouldAnimate;
- (id)initWithDefaultParameters;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarTetheringItemView : UIStatusBarItemView
{
    int _tetheringConnectionCount;
}

- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarThermalColorItemView : UIStatusBarItemView
{
    int _thermalColor;
    _Bool _sunlightMode;
}

- (id)_color;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarTimeItemView : UIStatusBarItemView
{
    NSString *_timeString;
}

- (void)dealloc;
- (long long)textStyle;
- (id)contentsImage;
- (_Bool)updateForNewData:(id)arg1 actions:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIStatusBarViewController : UIViewController
{
    _Bool _iPhoneWS;
    UIWindow *_window;
    UIView *_statusBar;
    UIClassicStatusBarView *_statusBarBackgroundView;
    _Bool _keyboardVisible;
}

+ (double)statusBarOrientationAnimationDurationFrom:(long long)arg1 to:(long long)arg2;
@property(readonly, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void)_statusBarViewControllerKeyboardDidHide:(id)arg1;
- (void)_statusBarViewControllerKeyboardWillShow:(id)arg1;
- (void)_changeStatusBarOrientationFinished:(id)arg1 finished:(_Bool)arg2 context:(void *)arg3;
- (void)_finishStatusBarOrientationChange;
- (void)_changeStatusBarOrientationFrom:(long long)arg1 toOrientation:(long long)arg2;
- (void)_statusBarHideAnimationFinished:(id)arg1 finished:(_Bool)arg2 hidden:(id)arg3;
- (struct CGSize)_statusBarSizeForOrientation:(long long)arg1;
- (void)_updateStatusBarForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2 style:(long long)arg3 hidden:(_Bool)arg4 slideUp:(_Bool)arg5;
- (void)_updateStatusBarGeometryForRotationFromInterfaceOrientation:(long long)arg1 toInterfaceOrientation:(long long)arg2 hidden:(_Bool)arg3 slideUp:(_Bool)arg4;
- (void)_zoom:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_prepareForZoom:(_Bool)arg1;
- (void)setStatusBarOrientation:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBarStyle:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBarHidden:(_Bool)arg1 animationParameters:(id)arg2;
- (void)loadView;
- (_Bool)isClassicControlWindow:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface UIStatusBarWindow : UIWindow
{
    UIStatusBar *_statusBar;
    long long _orientation;
    UIStatusBarCorners *_topCorners;
    double _topCornersOffset;
    UIStatusBarCorners *_bottomCorners;
    _Bool _cornersHidden;
}

+ (_Bool)_isSystemWindow;
+ (struct CGRect)statusBarWindowFrame;
+ (struct CGRect)_defaultStatusBarSceneBounds;
+ (struct CGRect)_defaultStatusBarSceneBoundsForOrientation:(long long)arg1;
+ (struct CGRect)_defaultStatusBarSceneReferenceBounds;
+ (_Bool)isIncludedInClassicJail;
- (struct CGRect)_sceneReferenceBounds;
- (struct CGRect)_sceneBounds;
- (_Bool)_canActAsKeyWindowForScreen:(id)arg1;
- (_Bool)_shouldZoom;
- (void)_updateTransformLayerForClassicPresentation;
- (_Bool)_isStatusBarWindow;
- (_Bool)_disableGroupOpacity;
- (_Bool)_disableViewScaling;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setTopCornerStyle:(int)arg1 topCornersOffset:(double)arg2 bottomCornerStyle:(int)arg3 animationParameters:(id)arg4;
- (void)setCornersHidden:(_Bool)arg1 animationParameters:(id)arg2;
- (long long)orientation;
- (void)_rotate;
- (void)setOrientation:(long long)arg1 animationParameters:(id)arg2;
- (void)setStatusBar:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (struct CGRect)statusBarWindowFrame;

@end

@interface UIStepper : UIControl
{
    _Bool _isRtoL;
    UIImageView *_middleView;
    UIButton *_plusButton;
    UIButton *_minusButton;
    NSTimer *_repeatTimer;
    long long _repeatCount;
    NSMutableDictionary *_dividerImages;
    _Bool _continuous;
    _Bool _autorepeat;
    _Bool _wraps;
    double _value;
    double _minimumValue;
    double _maximumValue;
    double _stepValue;
}

@property(nonatomic) _Bool wraps; // @synthesize wraps=_wraps;
@property(nonatomic) _Bool autorepeat; // @synthesize autorepeat=_autorepeat;
@property(nonatomic, getter=isContinuous) _Bool continuous; // @synthesize continuous=_continuous;
@property(nonatomic) double stepValue; // @synthesize stepValue=_stepValue;
@property(nonatomic) double maximumValue; // @synthesize maximumValue=_maximumValue;
@property(nonatomic) double minimumValue; // @synthesize minimumValue=_minimumValue;
@property(nonatomic) double value; // @synthesize value=_value;
- (void)_updateImages;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (id)decrementImageForState:(unsigned long long)arg1;
- (void)setDecrementImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)_setDecrementImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)incrementImageForState:(unsigned long long)arg1;
- (void)setIncrementImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)_setIncrementImage:(id)arg1 forState:(unsigned long long)arg2;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2;
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;
- (void)_setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3;
- (id)backgroundImageForState:(unsigned long long)arg1;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)layoutSubviews;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_updateCount:(id)arg1;
- (void)_stopTimer;
- (void)_startTimer;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_updateDividerImageForButtonState;
- (void)_updateHighlightingAtPoint:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_updateButtonEnabled;
- (void)_commonStepperInit;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)dealloc;
- (void)setFrame:(struct CGRect)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIStoryboard : NSObject
{
    NSBundle *bundle;
    NSString *storyboardFileName;
    NSDictionary *identifierToNibNameMap;
    NSString *designatedEntryPointIdentifier;
    NSMutableDictionary *identifierToUINibMap;
}

+ (id)storyboardWithName:(id)arg1 bundle:(id)arg2;
@property(readonly, nonatomic) NSMutableDictionary *identifierToUINibMap; // @synthesize identifierToUINibMap;
@property(readonly, nonatomic) NSString *designatedEntryPointIdentifier; // @synthesize designatedEntryPointIdentifier;
@property(readonly, nonatomic) NSDictionary *identifierToNibNameMap; // @synthesize identifierToNibNameMap;
@property(readonly, nonatomic) NSString *storyboardFileName; // @synthesize storyboardFileName;
@property(readonly, nonatomic) NSBundle *bundle; // @synthesize bundle;
- (id)instantiateInitialViewController;
- (id)instantiateViewControllerWithIdentifier:(id)arg1;
- (id)nibForViewControllerWithIdentifier:(id)arg1;
- (id)nibForStoryboardNibNamed:(id)arg1;
- (id)identifierForStringsFile;
- (_Bool)containsNibNamed:(id)arg1;
@property(readonly) NSString *name;
- (id)initWithBundle:(id)arg1 storyboardFileName:(id)arg2 identifierToNibNameMap:(id)arg3 designatedEntryPointIdentifier:(id)arg4;
- (void)dealloc;

@end

@interface UIStoryboardSegue : NSObject
{
    NSString *_identifier;
    id _sourceViewController;
    id _destinationViewController;
    CDUnknownBlockType _performHandler;
    id _sender;
}

+ (id)segueWithIdentifier:(id)arg1 source:(id)arg2 destination:(id)arg3 performHandler:(CDUnknownBlockType)arg4;
@property(retain, nonatomic) id sender; // @synthesize sender=_sender;
@property(copy, nonatomic) CDUnknownBlockType performHandler; // @synthesize performHandler=_performHandler;
@property(readonly, nonatomic) id destinationViewController; // @synthesize destinationViewController=_destinationViewController;
@property(readonly, nonatomic) id sourceViewController; // @synthesize sourceViewController=_sourceViewController;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)_prepare;
- (void)perform;
- (id)initWithIdentifier:(id)arg1 source:(id)arg2 destination:(id)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardEmbedSegue : UIStoryboardSegue
{
    UIView *_containerView;
}

@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (void)perform;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardSegueTemplate : NSObject <NSCoding>
{
    NSString *_identifier;
    NSString *_segueClassName;
    UIViewController *_viewController;
    NSString *_destinationViewControllerIdentifier;
    _Bool _performOnViewLoad;
}

@property(nonatomic) _Bool performOnViewLoad; // @synthesize performOnViewLoad=_performOnViewLoad;
@property(nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void)perform:(id)arg1;
- (void)_perform:(id)arg1;
- (id)segueWithDestinationViewController:(id)arg1;
- (Class)effectiveSegueClass;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardEmbedSegueTemplate : UIStoryboardSegueTemplate
{
    UIView *_containerView;
}

@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardModalSegue : UIStoryboardSegue
{
    _Bool _useDefaultModalPresentationStyle;
    _Bool _useDefaultModalTransitionStyle;
    _Bool _animates;
    long long _modalPresentationStyle;
    long long _modalTransitionStyle;
}

@property(nonatomic) _Bool animates; // @synthesize animates=_animates;
@property(nonatomic) long long modalTransitionStyle; // @synthesize modalTransitionStyle=_modalTransitionStyle;
@property(nonatomic) long long modalPresentationStyle; // @synthesize modalPresentationStyle=_modalPresentationStyle;
@property(nonatomic) _Bool useDefaultModalTransitionStyle; // @synthesize useDefaultModalTransitionStyle=_useDefaultModalTransitionStyle;
@property(nonatomic) _Bool useDefaultModalPresentationStyle; // @synthesize useDefaultModalPresentationStyle=_useDefaultModalPresentationStyle;
- (void)perform;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardModalSegueTemplate : UIStoryboardSegueTemplate
{
    _Bool _useDefaultModalPresentationStyle;
    _Bool _useDefaultModalTransitionStyle;
    long long _modalPresentationStyle;
    long long _modalTransitionStyle;
    _Bool _animates;
}

@property(nonatomic) _Bool animates; // @synthesize animates=_animates;
@property(nonatomic) long long modalTransitionStyle; // @synthesize modalTransitionStyle=_modalTransitionStyle;
@property(nonatomic) long long modalPresentationStyle; // @synthesize modalPresentationStyle=_modalPresentationStyle;
@property(nonatomic) _Bool useDefaultModalTransitionStyle; // @synthesize useDefaultModalTransitionStyle=_useDefaultModalTransitionStyle;
@property(nonatomic) _Bool useDefaultModalPresentationStyle; // @synthesize useDefaultModalPresentationStyle=_useDefaultModalPresentationStyle;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPopoverPresentationSegue : UIStoryboardSegue <UIPopoverPresentationControllerDelegate>
{
    NSArray *_passthroughViews;
    unsigned long long _permittedArrowDirections;
    UIBarButtonItem *_anchorBarButtonItem;
    UIView *_anchorView;
    struct CGRect _anchorRect;
}

@property(nonatomic) struct CGRect anchorRect; // @synthesize anchorRect=_anchorRect;
@property(retain, nonatomic) UIView *anchorView; // @synthesize anchorView=_anchorView;
@property(retain, nonatomic) UIBarButtonItem *anchorBarButtonItem; // @synthesize anchorBarButtonItem=_anchorBarButtonItem;
@property(nonatomic) unsigned long long permittedArrowDirections; // @synthesize permittedArrowDirections=_permittedArrowDirections;
@property(copy, nonatomic) NSArray *passthroughViews; // @synthesize passthroughViews=_passthroughViews;
- (void)perform;
- (void)_prepare;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPopoverPresentationSegueTemplate : UIStoryboardSegueTemplate
{
    unsigned long long _permittedArrowDirections;
    NSArray *_passthroughViews;
    UIView *_anchorView;
    UIBarButtonItem *_anchorBarButtonItem;
}

@property(retain, nonatomic) UIBarButtonItem *anchorBarButtonItem; // @synthesize anchorBarButtonItem=_anchorBarButtonItem;
@property(retain, nonatomic) UIView *anchorView; // @synthesize anchorView=_anchorView;
@property(copy, nonatomic) NSArray *passthroughViews; // @synthesize passthroughViews=_passthroughViews;
@property(nonatomic) unsigned long long permittedArrowDirections; // @synthesize permittedArrowDirections=_permittedArrowDirections;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface UIStoryboardPopoverSegue : UIStoryboardSegue
{
    UIPopoverController *_popoverController;
    NSArray *_passthroughViews;
    unsigned long long _permittedArrowDirections;
    UIView *_anchorView;
    UIBarButtonItem *_anchorBarButtonItem;
    struct CGRect _anchorRect;
}

@property(nonatomic, setter=_setAnchorRect:) struct CGRect _anchorRect; // @synthesize _anchorRect;
@property(retain, nonatomic, setter=_setAnchorBarButtonItem:) UIBarButtonItem *_anchorBarButtonItem; // @synthesize _anchorBarButtonItem;
@property(retain, nonatomic, setter=_setAnchorView:) UIView *_anchorView; // @synthesize _anchorView;
@property(nonatomic, setter=_setPermittedArrowDirections:) unsigned long long _permittedArrowDirections; // @synthesize _permittedArrowDirections;
@property(copy, nonatomic, setter=_setPassthroughViews:) NSArray *_passthroughViews; // @synthesize _passthroughViews;
- (void)perform;
@property(readonly, retain, nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPopoverSegueTemplate : UIStoryboardSegueTemplate
{
    unsigned long long _permittedArrowDirections;
    NSArray *_passthroughViews;
    UIBarButtonItem *_anchorBarButtonItem;
    UIView *_anchorView;
}

@property(retain, nonatomic) UIView *anchorView; // @synthesize anchorView=_anchorView;
@property(retain, nonatomic) UIBarButtonItem *anchorBarButtonItem; // @synthesize anchorBarButtonItem=_anchorBarButtonItem;
@property(copy, nonatomic) NSArray *passthroughViews; // @synthesize passthroughViews=_passthroughViews;
@property(nonatomic) unsigned long long permittedArrowDirections; // @synthesize permittedArrowDirections=_permittedArrowDirections;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPresentationSegue : UIStoryboardSegue <UIAdaptivePresentationControllerDelegate>
{
    _Bool _useDefaultModalPresentationStyle;
    _Bool _useDefaultModalTransitionStyle;
    _Bool _animates;
    long long _modalPresentationStyle;
    long long _modalTransitionStyle;
}

@property(nonatomic) _Bool animates; // @synthesize animates=_animates;
@property(nonatomic) long long modalTransitionStyle; // @synthesize modalTransitionStyle=_modalTransitionStyle;
@property(nonatomic) long long modalPresentationStyle; // @synthesize modalPresentationStyle=_modalPresentationStyle;
@property(nonatomic) _Bool useDefaultModalTransitionStyle; // @synthesize useDefaultModalTransitionStyle=_useDefaultModalTransitionStyle;
@property(nonatomic) _Bool useDefaultModalPresentationStyle; // @synthesize useDefaultModalPresentationStyle=_useDefaultModalPresentationStyle;
- (void)perform;
- (void)_prepare;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPresentationSegueTemplate : UIStoryboardSegueTemplate
{
    _Bool _useDefaultModalPresentationStyle;
    _Bool _useDefaultModalTransitionStyle;
    _Bool _animates;
    long long _modalPresentationStyle;
    long long _modalTransitionStyle;
}

@property(nonatomic) _Bool animates; // @synthesize animates=_animates;
@property(nonatomic) long long modalTransitionStyle; // @synthesize modalTransitionStyle=_modalTransitionStyle;
@property(nonatomic) long long modalPresentationStyle; // @synthesize modalPresentationStyle=_modalPresentationStyle;
@property(nonatomic) _Bool useDefaultModalTransitionStyle; // @synthesize useDefaultModalTransitionStyle=_useDefaultModalTransitionStyle;
@property(nonatomic) _Bool useDefaultModalPresentationStyle; // @synthesize useDefaultModalPresentationStyle=_useDefaultModalPresentationStyle;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPushSegue : UIStoryboardSegue
{
    long long _destinationContainmentContext;
    long long _splitViewControllerIndex;
}

@property(nonatomic) long long splitViewControllerIndex; // @synthesize splitViewControllerIndex=_splitViewControllerIndex;
@property(nonatomic) long long destinationContainmentContext; // @synthesize destinationContainmentContext=_destinationContainmentContext;
- (void)perform;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardPushSegueTemplate : UIStoryboardSegueTemplate
{
    long long _destinationContainmentContext;
    long long _splitViewControllerIndex;
}

@property(nonatomic) long long splitViewControllerIndex; // @synthesize splitViewControllerIndex=_splitViewControllerIndex;
@property(nonatomic) long long destinationContainmentContext; // @synthesize destinationContainmentContext=_destinationContainmentContext;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardReplaceSegue : UIStoryboardSegue
{
    long long _destinationContainmentContext;
    long long _splitViewControllerIndex;
}

@property(nonatomic) long long splitViewControllerIndex; // @synthesize splitViewControllerIndex=_splitViewControllerIndex;
@property(nonatomic) long long destinationContainmentContext; // @synthesize destinationContainmentContext=_destinationContainmentContext;
- (void)perform;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardReplaceSegueTemplate : UIStoryboardSegueTemplate
{
    long long _destinationContainmentContext;
    long long _splitViewControllerIndex;
}

@property(nonatomic) long long splitViewControllerIndex; // @synthesize splitViewControllerIndex=_splitViewControllerIndex;
@property(nonatomic) long long destinationContainmentContext; // @synthesize destinationContainmentContext=_destinationContainmentContext;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardScene : NSObject
{
    UIViewController *sceneViewController;
}

@property(retain, nonatomic) UIViewController *sceneViewController; // @synthesize sceneViewController;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardShowSegue : UIStoryboardSegue
{
    SEL _action;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
- (void)perform;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardShowSegueTemplate : UIStoryboardSegueTemplate
{
    NSString *_action;
}

@property(copy, nonatomic) NSString *action; // @synthesize action=_action;
- (id)segueWithDestinationViewController:(id)arg1;
- (id)defaultSegueClassName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIStoryboardUnwindSegueTemplate : UIStoryboardSegueTemplate
{
    NSString *_action;
}

@property(copy, nonatomic) NSString *action; // @synthesize action=_action;
- (void)_perform:(id)arg1;
- (id)_unwindExecutorForTarget:(id)arg1;
- (id)_unwindTargetForSelector:(SEL)arg1 withSender:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UISubTest : NSObject
{
    NSNumber *_startTime;
    NSNumber *_startFrame;
    NSMutableArray *_time;
    NSMutableArray *_fps;
    NSString *_testName;
    _Bool _showTime;
    _Bool _showFps;
}

- (void).cxx_destruct;
- (id)outputData;
- (void)stopWithFrameCount:(id)arg1;
- (void)startWithFrameCount:(id)arg1;
- (id)initWithName:(id)arg1 metrics:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UISwappableImageView : UIImageView
{
    id _value;
    id _alternate;
    double _scale;
    _Bool _showAlternate;
    _Bool _flipped;
    _Bool _updateImage;
    _Bool _bezel;
    int _bezelStyle;
    int _currentAnimation;
    UIToolbar *_buttonBar;
    int _buttonTag;
    _UISwappableImageViewAnimationProxy *_proxy;
    long long _barButtonItemStyle;
    _Bool _didDisableWindowAutorotation;
    id _didFinishTarget;
    SEL _didFinishSelector;
}

- (void)setImage:(id)arg1;
- (void)_willMoveToWindow:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animateImage:(float)arg1 withButtonBar:(id)arg2 withTag:(int)arg3 target:(id)arg4 didFinishSelector:(SEL)arg5;
- (void)setFlipped:(_Bool)arg1;
- (void)showAlternateImage:(_Bool)arg1;
- (void)updateImageIfNeededWithTintColor:(id)arg1;
- (void)updateImageIfNeeded;
- (void)setBezelStyleForBarStyle:(long long)arg1 tintColor:(id)arg2 iconTintColor:(id)arg3 iconTintColorDidChange:(_Bool)arg4;
- (void)setBezelStyleForBarStyle:(long long)arg1 tintColor:(id)arg2;
- (void)dealloc;
- (id)initWithImage:(id)arg1 alternateImage:(id)arg2 barStyle:(long long)arg3 barButtonItemStyle:(long long)arg4 tintColor:(id)arg5 bezel:(_Bool)arg6;

@end

@interface UISwipeGestureRecognizer : UIGestureRecognizer
{
    double _maximumDuration;
    double _minimumPrimaryMovement;
    double _maximumPrimaryMovement;
    double _minimumSecondaryMovement;
    double _maximumSecondaryMovement;
    double _rateOfMinimumMovementDecay;
    double _rateOfMaximumMovementDecay;
    unsigned long long _numberOfTouchesRequired;
    NSMutableArray *_touches;
    unsigned long long _direction;
    struct CGPoint _startLocation;
    struct CGPoint *_startLocations;
    double _startTime;
    unsigned int _failed:1;
}

@property(nonatomic) unsigned long long direction; // @synthesize direction=_direction;
@property(nonatomic) unsigned long long numberOfTouchesRequired; // @synthesize numberOfTouchesRequired=_numberOfTouchesRequired;
@property(nonatomic) double rateOfMaximumMovementDecay; // @synthesize rateOfMaximumMovementDecay=_rateOfMaximumMovementDecay;
@property(nonatomic) double rateOfMinimumMovementDecay; // @synthesize rateOfMinimumMovementDecay=_rateOfMinimumMovementDecay;
@property(nonatomic) double maximumSecondaryMovement; // @synthesize maximumSecondaryMovement=_maximumSecondaryMovement;
@property(nonatomic) double minimumSecondaryMovement; // @synthesize minimumSecondaryMovement=_minimumSecondaryMovement;
@property(nonatomic) double maximumPrimaryMovement; // @synthesize maximumPrimaryMovement=_maximumPrimaryMovement;
@property(nonatomic) double minimumPrimaryMovement; // @synthesize minimumPrimaryMovement=_minimumPrimaryMovement;
@property(nonatomic) double maximumDuration; // @synthesize maximumDuration=_maximumDuration;
- (void)_appendSubclassDescription:(id)arg1;
- (struct CGPoint)locationOfTouch:(unsigned long long)arg1 inView:(id)arg2;
- (unsigned long long)numberOfTouches;
- (struct CGPoint)locationInView:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (_Bool)_checkForSwipeWithDelta:(struct CGPoint)arg1 time:(double)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_resetGestureRecognizer;
@property(readonly, nonatomic) struct CGPoint startPoint;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface UISwitch : UIControl <UIGestureRecognizerDelegate, NSCoding>
{
    UILongPressGestureRecognizer *_pressGesture;
    UIPanGestureRecognizer *_panGesture;
    UIView<_UISwitchInternalViewProtocol> *_control;
    _Bool _onStateChangedByLongPressGestureRecognizer;
    _Bool _onStateChangedByPanGestureRecognizer;
    _Bool _on;
    double _enabledAlpha;
}

+ (Class)_internalViewClass;
@property(nonatomic, getter=isOn) _Bool on; // @synthesize on=_on;
@property(nonatomic) double enabledAlpha; // @synthesize enabledAlpha=_enabledAlpha;
@property(nonatomic, getter=_alwaysShowOnOffLabel, setter=_setAlwaysShowsOnOffLabel:) _Bool alwaysShowOnOffLabel;
- (void)_populateArchivedSubviews:(id)arg1;
@property(retain, nonatomic) UIImage *onImage;
@property(retain, nonatomic) UIImage *offImage;
@property(retain, nonatomic) UIColor *thumbTintColor;
@property(retain, nonatomic) UIColor *tintColor;
@property(retain, nonatomic) UIColor *onTintColor;
- (id)_onTintColor;
- (void)_setOnTintColor:(id)arg1;
@property(retain, nonatomic, getter=_onColor, setter=_setOnColor:) UIColor *onColor;
- (void)setEnabled:(_Bool)arg1;
- (void)setAlpha:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (_Bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (void)_onAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)setOn:(_Bool)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (void)_animateToOn:(_Bool)arg1 withDuration:(double)arg2 sendAction:(_Bool)arg3;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_shouldAlterCodedFrame;
- (void)_encodeFrameWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)init;
- (void)_handleLongPressNL:(id)arg1;
- (void)_handleTapNL:(id)arg1;
- (void)_handlePanNL:(id)arg1;
- (_Bool)_handleTranslationInPanGestureRecognizer:(id)arg1;
- (_Bool)_gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)_commonInitNewLookNeue1;
- (void)_commonInitNewLook;
- (_Bool)_useOldSize;
- (void)_setKnobBounceMass:(double)arg1;
- (double)_knobBounceMass;
- (void)_setKnobBounceStiffness:(double)arg1;
- (double)_knobBounceStiffness;
- (void)_setKnobBounceDamping:(double)arg1;
- (double)_knobBounceDamping;
- (void)_setKnobBounceDuration:(double)arg1;
- (double)_knobBounceDuration;
- (void)_setPressed:(_Bool)arg1 on:(_Bool)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setAlternateColors:(_Bool)arg1;
- (id)_scriptingInfo;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (unsigned long long)defaultAccessibilityTraits;
- (_Bool)isAccessibilityElementByDefault;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UISystemInputViewController : UIInputViewController
{
    NSMutableDictionary *_accessoryViews;
    NSMutableDictionary *_accessoryConstraints;
    UIResponder<UITextInput> *_persistentDelegate;
    UIKeyboard *_keyboard;
    NSArray *_keyboardConstraits;
}

+ (_Bool)_requiresProxyInterface;
@property(retain, nonatomic) NSArray *keyboardConstraits; // @synthesize keyboardConstraits=_keyboardConstraits;
@property(retain, nonatomic) UIKeyboard *keyboard; // @synthesize keyboard=_keyboard;
@property(retain, nonatomic) UIResponder<UITextInput> *persistentDelegate; // @synthesize persistentDelegate=_persistentDelegate;
- (void)viewWillLayoutSubviews;
- (void)setAccessoryView:(id)arg1 forEdge:(long long)arg2;
- (id)accessoryViewForEdge:(long long)arg1;
- (void)setConstraits:(id)arg1 forEdge:(long long)arg2;
- (id)constraitsForEdge:(long long)arg1;
- (void)updateViewConstraints;
- (id)constraintFromView:(id)arg1 attribute:(long long)arg2 toView:(id)arg3 attribute:(long long)arg4;
- (id)_keyboard;
- (_Bool)_disableAutomaticKeyboardBehavior;
- (void)dealloc;
- (void)loadView;
- (id)init;

@end

@interface UITabBar : UIView <_UIBackdropViewGraphicsQualityChangeDelegate, _UIShadowedView>
{
    UIView *_customizeView;
    _UITabBarBackgroundView *_backgroundView;
    _UIBackdropView *_adaptiveBackdrop;
    UIView *_shadowView;
    id <UITabBarDelegate> _delegate;
    NSArray *_items;
    UITabBarItem *_selectedItem;
    NSArray *_customizationItems;
    long long _barOrientation;
    struct {
        unsigned int alertShown:1;
        unsigned int wasEnabled:1;
        unsigned int customized:1;
        unsigned int downButtonSentAction:1;
        unsigned int isLocked:1;
        unsigned int backgroundIsPattern:1;
        unsigned int hasCustomBackgroundView:1;
        unsigned int barStyle:3;
        unsigned int barTranslucence:3;
        unsigned int backgroundNeedsUpdate:1;
    } _tabBarFlags;
    NSArray *_buttonItems;
    struct __CFArray *_hiddenItems;
    _UITabBarAppearanceStorage *_appearanceStorage;
    _Bool _dividerImagesChangeWithSelection;
    _Bool _dividerImagesAreInvalid;
    _Bool _hidesShadow;
    _Bool _showsHighlightedState;
    double _nextSelectionSlideDuration;
    NSMutableArray *_dividerImageViews;
    long long _itemPositioning;
    double _itemDimension;
    double _itemSpacing;
    long long _barMetrics;
    long long _imageStyle;
    long long _tabBarSizing;
    UIView *_accessoryView;
    NSString *_backdropViewLayerGroupName;
}

+ (void)_initializeForIdiom:(long long)arg1;
+ (id)_unselectedTabTintColorForView:(id)arg1;
+ (id)_tabBarForView:(id)arg1;
+ (float)_buttonGap;
@property(retain, nonatomic, getter=_backdropViewLayerGroupName, setter=_setBackdropViewLayerGroupName:) NSString *backdropViewLayerGroupName; // @synthesize backdropViewLayerGroupName=_backdropViewLayerGroupName;
@property(nonatomic, setter=_setAccessoryView:) UIView *_accessoryView; // @synthesize _accessoryView;
@property(nonatomic, setter=_setTabBarSizing:) long long _tabBarSizing; // @synthesize _tabBarSizing;
@property(nonatomic, setter=_setShowsHighlightedState:) _Bool _showsHighlightedState; // @synthesize _showsHighlightedState;
@property(nonatomic, setter=_setHidesShadow:) _Bool _hidesShadow; // @synthesize _hidesShadow;
@property(nonatomic, setter=_setBarMetrics:) long long _barMetrics; // @synthesize _barMetrics;
@property(nonatomic) double itemSpacing; // @synthesize itemSpacing=_itemSpacing;
@property(nonatomic) double itemWidth; // @synthesize itemWidth=_itemDimension;
@property(nonatomic) long long itemPositioning; // @synthesize itemPositioning=_itemPositioning;
@property(retain, nonatomic, setter=_setDividerImageViews:) NSMutableArray *_dividerImageViews; // @synthesize _dividerImageViews;
@property(nonatomic, setter=_setDividerImagesAreInvalid:) _Bool _dividerImagesAreInvalid; // @synthesize _dividerImagesAreInvalid;
@property(nonatomic, setter=_setDividerImagesChangeWithSelection:) _Bool _dividerImagesChangeWithSelection; // @synthesize _dividerImagesChangeWithSelection;
@property(nonatomic, setter=_setNextSelectionSlideDuration:) double _nextSelectionSlideDuration; // @synthesize _nextSelectionSlideDuration;
@property(nonatomic) id <UITabBarDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, setter=_setImageStyle:) long long _imageStyle; // @synthesize _imageStyle;
- (id)_dividerImageForLeftButtonState:(unsigned long long)arg1 rightButtonState:(unsigned long long)arg2;
- (void)_setDividerImage:(id)arg1 forLeftButtonState:(unsigned long long)arg2 rightButtonState:(unsigned long long)arg3;
- (void)_invalidateDividerImages;
- (id)_shadowView;
@property(retain, nonatomic) UIColor *selectedImageTintColor;
@property(retain, nonatomic) UIColor *barTintColor;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (void)_effectiveBarTintColorDidChange;
- (id)_effectiveBarTintColor;
- (void)_updateTintedImages:(id)arg1 selected:(_Bool)arg2;
@property(retain, nonatomic) UIImage *selectionIndicatorImage;
@property(retain, nonatomic) UIImage *shadowImage;
@property(retain, nonatomic) UIImage *backgroundImage;
- (void)_makeCurrentButtonFirstResponder;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (_Bool)isCustomizing;
- (_Bool)endCustomizingAnimated:(_Bool)arg1;
- (void)beginCustomizingItems:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (_Bool)_isTranslucent;
@property(nonatomic, setter=_setBarOrientation:) long long _barOrientation;
- (long long)_effectiveBarOrientation;
- (void)removeConstraint:(id)arg1;
- (void)addConstraint:(id)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)_showItemsAnimated:(_Bool)arg1;
- (void)_hideItemsAnimated:(_Bool)arg1;
- (void)setItems:(id)arg1 animated:(_Bool)arg2;
- (void)_finishSetItems:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_sendAction:(id)arg1 withEvent:(id)arg2;
@property(nonatomic) UITabBarItem *selectedItem;
- (void)_animateSelectionChangeFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3;
- (void)_accessibilityButtonShapesEnabledDidChangeNotification:(id)arg1;
- (void)_accessibilityButtonShapesParametersDidChange;
- (id)_topmostDividerImageView;
@property(copy, nonatomic) NSArray *items;
@property(nonatomic, getter=isLocked) _Bool locked;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_doCommonTabBarInit;
- (_Bool)_canDrawContent;
- (_Bool)_subclassImplementsDrawRect;
@property(nonatomic, setter=_setInterTabButtonSpacing:) double _interTabButtonSpacing;
@property(nonatomic, setter=_setTabButtonWidth:) double _tabButtonWidth;
- (void)_cleanupAdaptiveBackdrop;
- (id)_appearanceStorage;
@property(nonatomic) long long barStyle;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
- (_Bool)_wantsAdaptiveBackdrop;
@property(nonatomic, setter=_setBackgroundNeedsUpdate:) _Bool _backgroundNeedsUpdate;
- (void)_setLabelShadowOffset:(struct CGSize)arg1;
- (void)_setLabelShadowColor:(id)arg1;
- (void)_setLabelTextColor:(id)arg1 selectedTextColor:(id)arg2;
- (void)_setLabelFont:(id)arg1;
- (void)_setSelectionIndicatorImage:(id)arg1;
- (void)_setBackgroundImage:(id)arg1;
@property(retain, nonatomic, setter=_setBackgroundView:) UIView *_backgroundView;
- (void)setButtonItems:(id)arg1;
- (id)buttonItems;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)setBadgeAnimated:(_Bool)arg1 forButton:(int)arg2;
- (void)setBadgeGlyph:(id)arg1 forButton:(int)arg2;
- (void)setBadgeValue:(id)arg1 forButton:(int)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dismissCustomizeSheet:(_Bool)arg1;
- (void)_tabBarFinishedAnimating;
- (void)_alertDidHide;
- (void)_alertWillShow:(_Bool)arg1 duration:(float)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)_positionTabBarButtons:(id)arg1 ignoringItem:(id)arg2;
- (struct CGRect)_tabAreaLayoutBounds;
- (void)_configureItems:(id)arg1;
- (void)_updateDividerImagesIfNecessary;
- (void)_configureTabBarReplacingItem:(id)arg1 withNewItem:(id)arg2 dragging:(_Bool)arg3 swapping:(_Bool)arg4;
- (void)_updateAppearanceCustomizationIfNecessaryForItem:(id)arg1;
- (void)_customizeWithAvailableItems:(id)arg1;
- (void)_finishCustomizeAnimation:(id)arg1;
- (void)_customizeDoneButtonAction:(id)arg1;
- (void)_dismissCustomizeSheet:(_Bool)arg1;
- (void)_adjustButtonSelection:(id)arg1;
- (void)_buttonCancel:(id)arg1;
- (void)_buttonUp:(id)arg1;
- (void)_buttonDownDelayed:(id)arg1;
- (void)_buttonDown:(id)arg1;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;
- (void)_updateBackgroundImage;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (_Bool)_isHidden:(id)arg1;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (_Bool)_hasCustomAutolayoutNeighborSpacing;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UITabBarButton : UIControl
{
    struct CGRect _hitRect;
    UIView *_info;
    UIVisualEffectView *_vibrancyEffectView;
    UITabBarButtonLabel *_label;
    _UIBadgeView *_badge;
    UITabBarSelectionIndicatorView *_selectedIndicator;
    _Bool _selected;
    _Bool _barHeight;
    _Bool _badgeAnimated;
    struct UIEdgeInsets _infoInsets;
    struct UIOffset _selectedInfoOffset;
    struct UIOffset _infoOffset;
    UIImage *_customSelectedIndicatorImage;
    NSValue *_labelOffsetValue;
    NSMutableDictionary *_buttonTintColorsForState;
    NSMutableDictionary *_contentTintColorsForState;
    _Bool _showsHighlightedState;
    _Bool _centerAllContents;
    Class _appearanceGuideClass;
    UIColor *_unselectedTintColor;
}

+ (id)_defaultLabelColor;
@property(retain, nonatomic, getter=_unselectedTintColor, setter=_setUnselectedTintColor:) UIColor *unselectedTintColor; // @synthesize unselectedTintColor=_unselectedTintColor;
@property(nonatomic, setter=_setAppearanceGuideClass:) Class _appearanceGuideClass; // @synthesize _appearanceGuideClass;
@property(nonatomic, setter=_setCenterAllContents:) _Bool _centerAllContents; // @synthesize _centerAllContents;
@property(nonatomic, setter=_setShowsHighlightedState:) _Bool _showsHighlightedState; // @synthesize _showsHighlightedState;
@property(readonly, nonatomic) UITabBarButtonLabel *tabBarButtonLabel; // @synthesize tabBarButtonLabel=_label;
@property(retain, nonatomic) NSValue *labelOffsetValue; // @synthesize labelOffsetValue=_labelOffsetValue;
- (id)_contentTintColorForState:(unsigned long long)arg1;
- (void)_setContentTintColor:(id)arg1 forState:(unsigned long long)arg2;
- (id)_buttonTintColorForState:(unsigned long long)arg1;
- (void)_setButtonTintColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)_applyTabBarButtonAppearanceStorage:(id)arg1 withTaggedSelectors:(id)arg2;
- (struct UIOffset)_titlePositionAdjustment;
- (void)_setTitlePositionAdjustment:(struct UIOffset)arg1;
- (void)_UIAppearance_setTitlePositionAdjustment:(struct UIOffset)arg1;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_UIAppearance_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (struct CGRect)_responderSelectionRectForWindow:(id)arg1;
- (void)_focusStateDidChange;
- (_Bool)_isFocusableElement;
- (void)_setLabelHidden:(_Bool)arg1;
- (void)_setCustomSelectedIndicatorImage:(id)arg1;
- (_Bool)_useBarHeight;
- (void)_setBarHeight:(float)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGRect)_frameForSelectedIndicator;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)setEnabled:(_Bool)arg1;
- (void)_setBadgeAnimated:(_Bool)arg1;
- (void)_badgeAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)_setBadgeValue:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_positionBadge;
- (void)_setInfoOffset:(struct UIOffset)arg1;
- (void)_setSelectedInfoOffset:(struct UIOffset)arg1;
@property(nonatomic, getter=_isSelected, setter=_setSelected:) _Bool _selected;
- (void)_setUnselectedTintColor:(id)arg1 forceLabelToConform:(_Bool)arg2;
- (void)_updateToMatchCurrentState;
- (void)setHighlighted:(_Bool)arg1;
- (void)_updateInfoFrame;
- (void)_showSelectedIndicator:(_Bool)arg1 changeSelection:(_Bool)arg2;
- (void)_setUpSelectedIndicatorViewIfNeeded;
- (void)_updateSelectedIndicatorView;
- (id)_swappableImageView;
- (struct CGRect)_tabBarHitRect;
- (void)_setTabBarHitRect:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1 selectedImage:(id)arg2 label:(id)arg3 withInsets:(struct UIEdgeInsets)arg4;
- (id)_selectedIndicatorView;
- (id)_scriptingInfo;

@end

__attribute__((visibility("hidden")))
@interface UITabBarButtonLabel : UILabel
{
    double _boundsWidth;
    _UITabBarItemAppearanceStorage *_appearanceStorage;
    _Bool _isSelected;
    _Bool _isHighlighted;
    Class _appearanceGuideClass;
    UIColor *_unselectedTintColor;
}

+ (double)_fontPointSizeForIdiom:(long long)arg1;
@property(retain, nonatomic, getter=_unselectedTintColor, setter=_setUnselectedTintColor:) UIColor *unselectedTintColor; // @synthesize unselectedTintColor=_unselectedTintColor;
@property(nonatomic, setter=_setAppearanceGuideClass:) Class _appearanceGuideClass; // @synthesize _appearanceGuideClass;
- (id)_containingTabBarButton;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (id)_fontForIdiom:(long long)arg1;
- (void)_applyTabBarButtonAppearanceStorage:(id)arg1 withTaggedSelectors:(id)arg2;
- (id)_titleTextAttributesForState:(unsigned long long)arg1;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_UIAppearance_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_updateForFontChangeWithIdiom:(long long)arg1;
- (void)_setTitlePositionAdjustment:(struct UIOffset)arg1;
- (void)_UIAppearance_setTitlePositionAdjustment:(struct UIOffset)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)updateTextColorsForState;
- (void)tintColorDidChange;
- (void)sizeToFitBounds:(struct CGRect)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (_Bool)_shouldCeilSizeToViewScale;
- (void)dealloc;

@end

@interface UITabBarController : UIViewController <UIGestureRecognizerDelegate, UITabBarDelegate, NSCoding>
{
    UITabBar *_tabBar;
    UIView *_containerView;
    UIView *_viewControllerTransitionView;
    id _tabBarItemsToViewControllers;
    UIViewController *_selectedViewController;
    UIMoreNavigationController *_moreNavigationController;
    NSArray *_customizableViewControllers;
    id <UITabBarControllerDelegate><UITabBarControllerDelegate_Private> _delegate;
    UIViewController *_selectedViewControllerDuringWillAppear;
    UIViewController *_transientViewController;
    unsigned long long _customMaxItems;
    unsigned long long _defaultMaxItems;
    long long _tabBarPosition;
    UITapGestureRecognizer *_backGestureRecognizer;
    UITapGestureRecognizer *_selectGestureRecognizer;
    struct {
        unsigned int isShowingMoreItem:1;
        unsigned int needsToRebuildItems:1;
        unsigned int isBarHidden:1;
        unsigned int editButtonOnLeft:1;
        unsigned int barLayoutIsValid:1;
        unsigned int reselectTab:1;
        unsigned int delegateSupportedInterfaceOrientations:1;
        unsigned int delegatePreferredInterfaceOrientationForPresentation:1;
    } _tabBarControllerFlags;
    NSMutableArray *_moreChildViewControllers;
    UIView *_accessoryView;
    id <UIViewControllerAnimatedTransitioning> __animator;
    id <UIViewControllerInteractiveTransitioning> __interactor;
    NSString *__backdropGroupName;
}

+ (_Bool)_shouldSendLegacyMethodsFromViewWillTransitionToSize;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (Class)_moreNavigationControllerClass;
+ (_Bool)_directlySetsContentOverlayInsetsForChildren;
+ (_Bool)doesOverrideSupportedInterfaceOrientations;
+ (_Bool)doesOverridePreferredInterfaceOrientationForPresentation;
@property(retain, nonatomic, getter=_backdropGroupName, setter=_setBackdropGroupName:) NSString *_backdropGroupName; // @synthesize _backdropGroupName=__backdropGroupName;
@property(retain, nonatomic, setter=_setInteractor:) id <UIViewControllerInteractiveTransitioning> _interactor; // @synthesize _interactor=__interactor;
@property(retain, nonatomic, setter=_setAnimator:) id <UIViewControllerAnimatedTransitioning> _animator; // @synthesize _animator=__animator;
@property(nonatomic) id <UITabBarControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic, setter=_setAccessoryView:) UIView *_accessoryView; // @synthesize _accessoryView;
@property(nonatomic) NSMutableArray *moreChildViewControllers; // @synthesize moreChildViewControllers=_moreChildViewControllers;
- (void)_setBadgeValue:(id)arg1 forTabBarItem:(id)arg2;
- (id)rotatingSnapshotViewForWindow:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateSecondHalfOfRotationFromInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1;
- (void)willAnimateFirstHalfOfRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1;
- (_Bool)_shouldUseOnePartRotation;
- (id)rotatingFooterView;
- (id)rotatingHeaderView;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)_shouldSynthesizeSupportedOrientations;
- (_Bool)_doAllViewControllersSupportInterfaceOrientation:(long long)arg1;
- (_Bool)_allowsAutorotation;
- (void)_setMaximumNumberOfItems:(unsigned long long)arg1;
- (unsigned long long)_effectiveMaxItems;
- (_Bool)showsEditButtonOnLeft;
- (void)setShowsEditButtonOnLeft:(_Bool)arg1;
- (void)revealTabBarSelection;
- (void)concealTabBarSelection;
- (void)setTransientViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setTransientViewController:(id)arg1;
- (id)transientViewController;
- (void)transitionViewDidComplete:(id)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)transitionFromViewController:(id)arg1 toViewController:(id)arg2 transition:(int)arg3 shouldSetSelected:(_Bool)arg4;
- (id)_customAnimatorForFromViewController:(id)arg1 toViewController:(id)arg2;
- (id)_customInteractionControllerForAnimator:(id)arg1;
- (struct CGRect)_frameForWrapperViewForViewController:(id)arg1;
- (id)transitionCoordinator;
- (struct CGRect)_frameForViewController:(id)arg1;
- (struct UIEdgeInsets)_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(_Bool *)arg2;
- (void)_updateLayoutForStatusBarAndInterfaceOrientation;
- (id)_transitionView;
- (void)transitionFromViewController:(id)arg1 toViewController:(id)arg2;
- (void)_tabBarItemClicked:(id)arg1;
- (id)_viewControllerForTabBarItem:(id)arg1;
- (void)_setTabBarPosition:(long long)arg1;
- (long long)_effectiveTabBarPosition;
- (id)_backdropBarGroupName;
- (long long)_tabBarPosition;
@property(readonly, nonatomic) UITabBar *tabBar;
- (id)_viewControllersInTabBar;
- (id)allViewControllers;
- (void)showBarWithTransition:(int)arg1;
- (void)_showBarWithTransition:(int)arg1 isExplicit:(_Bool)arg2;
- (void)hideBarWithTransition:(int)arg1;
- (void)_hideBarWithTransition:(int)arg1 isExplicit:(_Bool)arg2;
- (void)animationDidStop:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (_Bool)_isBarHidden;
- (void)tabBar:(id)arg1 didEndCustomizingItems:(id)arg2 changed:(_Bool)arg3;
- (void)tabBar:(id)arg1 willEndCustomizingItems:(id)arg2 changed:(_Bool)arg3;
- (id)_viewsWithDisabledInteractionGivenTransitionContext:(id)arg1;
- (void)tabBarSizingDidChange:(id)arg1;
- (void)tabBar:(id)arg1 willBeginCustomizingItems:(id)arg2;
- (void)beginCustomizingTabBar:(id)arg1;
@property(copy, nonatomic) NSArray *customizableViewControllers; // @synthesize customizableViewControllers=_customizableViewControllers;
@property(readonly, nonatomic) UINavigationController *moreNavigationController;
- (void)setRestorationIdentifier:(id)arg1;
- (void)_setMoreNavigationControllerRestorationIdentifier;
- (id)_existingMoreNavigationController;
- (_Bool)_allowsCustomizing;
- (id)childViewControllerForStatusBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (void)_setSelectedViewController:(id)arg1;
@property(nonatomic) UIViewController *selectedViewController;
@property(nonatomic) unsigned long long selectedIndex;
- (id)_viewControllerForSelectAtIndex:(unsigned long long)arg1;
- (_Bool)_allowSelectionWithinMoreList;
- (id)_selectedViewControllerInTabBar;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)_rebuildTabBarItemsAnimated:(_Bool)arg1;
- (void)_rebuildTabBarItemsIfNeeded;
@property(copy, nonatomic) NSArray *viewControllers;
- (void)_configureTargetActionForTabBarItem:(id)arg1;
- (_Bool)_isTabBarFocused;
- (id)_responderSelectionContainerViewForResponder:(id)arg1;
- (void)_performSelectGesture:(id)arg1;
- (void)_performBackGesture:(id)arg1;
- (_Bool)_gestureRecognizerShouldBegin:(id)arg1;
- (void)_updateLayoutForTraitCollection:(id)arg1;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (_Bool)_reallyWantsFullScreenLayout;
- (void)updateTabBarItemForViewController:(id)arg1;
- (void)_setSelectedTabBarItem:(id)arg1;
- (void)purgeMemoryForReason:(int)arg1;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)_isPresentationContextByDefault;
- (void)loadView;
- (void)_layoutContainerView;
- (void)setView:(id)arg1;
- (void)setTabBar:(id)arg1;
- (void)_setTabBarVisualAltitude;
- (void)_prepareTabBar;
- (void)__viewWillLayoutSubviews;
- (void)_selectDefaultViewControllerIfNecessaryWithAppearanceTransitions:(_Bool)arg1;
- (id)_wrapperViewForViewController:(id)arg1;
- (void)_layoutViewController:(id)arg1;
- (id)_deepestUnambiguousResponder;
- (_Bool)becomeFirstResponder;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_shouldPersistViewWhenCoding;
- (void)_populateArchivedChildViewControllers:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (_Bool)_ignoreUnselectedTabsForStateRestoration;
- (id)_allContainedViewControllers;
- (id)_additionalViewControllersToCheckForUserActivity;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UITabBarCustomizeView : UIView
{
    UITabBar *_tabBar;
    NSMutableArray *_proxies;
    NSMutableArray *_fixedItems;
    UITabBarItemProxy *_draggingProxy;
    UITabBarItem *_draggingItem;
    UISnapshotView *_dragImage;
    UIImageView *_replacementGlow;
    UITabBarItem *_replaceItem;
    UILabel *_titleLabel;
    struct CGPoint _startPoint;
    long long _itemsInRowCount;
    double _gridOffset;
    struct CGRect _firstItemRect;
    UITabBarItem *_selectedBeforeItem;
    NSArray *_availableItems;
}

@property(retain, nonatomic) NSArray *availableItems; // @synthesize availableItems=_availableItems;
- (void)tabBarTouchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)tabBarTouchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)tabBarTouchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)tabBarTouchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)itemInTabBarWithTouches:(id)arg1 withEvent:(id)arg2;
- (void)adjustDragImageWithTouches:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (void)setTabBar:(id)arg1 currentItems:(id)arg2 availableItems:(id)arg3;
- (long long)_barMetrics;
- (void)updateProxiesSelection;
- (void)tintTabBarItemsForEdit:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UITabBarItem : UIBarItem
{
    NSString *_title;
    SEL _action;
    id _target;
    UIImage *_templateImage;
    UIImage *_selectedTemplateImage;
    UIImage *_selectedImage;
    UIImage *_unselectedImage;
    struct UIEdgeInsets _imageInsets;
    NSString *_badgeValue;
    UIView *_view;
    long long _tag;
    id _appearanceStorage;
    struct {
        unsigned int enabled:1;
        unsigned int style:3;
        unsigned int isSystemItem:1;
        unsigned int systemItem:7;
        unsigned int viewIsCustom:1;
        unsigned int animatedBadge:1;
        unsigned int customSelectedImage:1;
        unsigned int customUnselectedImage:1;
    } _tabBarItemFlags;
    long long _barMetrics;
    long long _imageStyle;
    UIColor *_tintColor;
}

+ (id)_appearanceBlindViewClasses;
- (void)setTag:(long long)arg1;
- (long long)tag;
@property(retain, nonatomic, setter=_setTintColor:) UIColor *_tintColor; // @synthesize _tintColor;
@property(nonatomic, setter=_setImageStyle:) long long _imageStyle; // @synthesize _imageStyle;
@property(nonatomic, setter=_setBarMetrics:) long long _barMetrics; // @synthesize _barMetrics;
- (struct UIOffset)titlePositionAdjustment;
- (void)setTitlePositionAdjustment:(struct UIOffset)arg1;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)finishedUnselectedImage;
- (id)finishedSelectedImage;
- (void)setFinishedSelectedImage:(id)arg1 withFinishedUnselectedImage:(id)arg2;
@property(retain, nonatomic) UIImage *selectedImage;
@property(copy, nonatomic) NSString *badgeValue;
- (struct UIEdgeInsets)imageInsets;
- (void)setImageInsets:(struct UIEdgeInsets)arg1;
- (id)image;
- (void)setImage:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (_Bool)isEnabled;
- (void)setEnabled:(_Bool)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTabBarSystemItem:(long long)arg1 tag:(long long)arg2;
- (id)initWithTitle:(id)arg1 image:(id)arg2 selectedImage:(id)arg3;
- (id)initWithTitle:(id)arg1 image:(id)arg2 tag:(long long)arg3;
- (id)init;
- (id)_internalTemplateImages;
- (void)_updateToMatchCurrentState;
- (_Bool)_isSelected;
- (void)_setSelected:(_Bool)arg1;
- (id)_internalTemplateImage;
- (void)_setInternalTemplateImage:(id)arg1;
- (id)_internalTitle;
- (void)_setInternalTitle:(id)arg1;
@property(nonatomic) SEL action;
@property(nonatomic) id target;
@property(retain, nonatomic) UIImage *unselectedImage;
@property(nonatomic) _Bool animatedBadge;
@property(nonatomic) _Bool viewIsCustom;
@property(retain, nonatomic) UIView *view;
- (long long)systemItem;
- (_Bool)isSystemItem;
- (void)_updateView;
- (void)_updateViewAndPositionItems:(_Bool)arg1;
- (id)_createViewForTabBar:(id)arg1 showingBadge:(_Bool)arg2 withTint:(_Bool)arg3;
- (id)_createViewForTabBar:(id)arg1 showingBadge:(_Bool)arg2;
- (void)_setTitleTextAttributeValue:(id)arg1 forAttributeKey:(id)arg2 state:(unsigned long long)arg3;
- (id)nextResponder;
- (id)_updateImageWithTintColor:(id)arg1 isSelected:(_Bool)arg2 getImageOffset:(struct UIOffset *)arg3;
- (void)_updateButtonForTintColor:(id)arg1 selected:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITabBarItemProxy : NSObject
{
    UITabBarItem *_item;
    UIView *_view;
}

- (id)view;
- (id)item;
- (void)dealloc;
- (void)setSelected:(_Bool)arg1;
- (id)initWithItem:(id)arg1 inTabBar:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITabBarSelectionIndicatorView : UIImageView
{
}

- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)setImage:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 withImageName:(id)arg2 orCustomImage:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UITabBarSwappableImageView : UIImageView
{
    id _value;
    id _alternate;
    double _scale;
    _Bool _showAlternate;
    _Bool _flipped;
    int _currentAnimation;
    UITabBar *_tabBar;
    int _buttonTag;
}

- (void)setImage:(id)arg1;
- (void)setAlternateImage:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animateImage:(float)arg1 withTabBar:(id)arg2 withTag:(int)arg3;
- (void)showAlternateImage:(_Bool)arg1;
- (void)setCurrentImage;
- (void)dealloc;
- (id)initWithImage:(id)arg1 alternateImage:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITableViewBackgroundView : UIView
{
    UIImageView *_gradientImageView;
    UIView *_textureImageView;
}

- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellContentMirror : UIView
{
    unsigned int _selected:1;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)cell;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic, getter=isSelected) _Bool selected;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellContentView : UIView
{
    CALayer *_mask;
}

+ (id)classFallbacksForKeyedArchiver;
- (void)updateConstraintsIfNeeded;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
@property(retain, nonatomic) CALayer *mask;
- (id)_cell;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_tableViewCellContentViewCommonSetup;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellDeleteConfirmationControl_Legacy : UIControl
{
    _Bool _visible;
    UITableViewCellDeleteConfirmationGestureRecognizer *_deleteConfirmationGesture;
}

+ (struct CGSize)defaultSizeForTitle:(id)arg1;
- (void)layoutSubviews;
@property(nonatomic, getter=isVisible) _Bool visible;
- (void)setVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGSize)defaultSize;
- (void)cancelDeleteConfirmationWithGesture:(id)arg1;
- (void)touchUpOutside:(id)arg1;
- (void)touchUpInside:(id)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1;
- (void)_confirmationAnimationDidEnd;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellDeleteConfirmationGestureRecognizer : UIGestureRecognizer
{
    UIView *_excludedView;
}

- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 excludedView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellDeleteConfirmationView : UIView
{
    double _visibleWidth;
    struct CGSize _contentSize;
    double _visibleHeightRatio;
    double _cornerRadius;
    int _sectionLocation;
    _UITableViewCellActionButton *_deleteView;
    _UITableViewCellActionButton *_accessoryView;
    NSArray *_actionButtons;
}

@property(nonatomic) int sectionLocation; // @synthesize sectionLocation=_sectionLocation;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(readonly, nonatomic) _UITableViewCellActionButton *accessoryView; // @synthesize accessoryView=_accessoryView;
@property(readonly, nonatomic) _UITableViewCellActionButton *deleteView; // @synthesize deleteView=_deleteView;
@property(nonatomic) double visibleHeightRatio; // @synthesize visibleHeightRatio=_visibleHeightRatio;
@property(readonly, nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) double visibleWidth; // @synthesize visibleWidth=_visibleWidth;
- (void)updateBounds;
- (void)updateMaskView:(_Bool)arg1;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 actionButtons:(id)arg2 contentSize:(struct CGSize)arg3;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellDetailDisclosureView : UIControl
{
    UIButton *_infoButton;
    UIImageView *_disclosureView;
}

- (void)removeTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (void)dealloc;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellEditControl : UIControl
{
    UITableViewCell *_cell;
    UIImageView *_imageView;
    _UITableViewCellEditControlMinusView *_minusView;
    UIImageView *_shadowView;
    unsigned int _style:2;
    unsigned int _rotated:1;
    unsigned int _rotating:1;
    unsigned int _hiding:1;
    unsigned int _reserved:27;
}

+ (struct CGSize)defaultSize;
+ (id)_multiSelectHighlightedImage;
+ (id)_multiSelectSelectedImage;
+ (id)_multiSelectNotSelectedImage;
+ (id)_insertImage:(double)arg1;
+ (id)_deleteImage:(double)arg1;
+ (id)_deleteImageBackground:(double)arg1;
+ (struct CGRect)_minusRect;
- (void)_multiselectColorChanged;
@property(nonatomic, getter=isHiding) _Bool hiding;
- (void)_toggleRotateAnimationDidStop:(id)arg1 finished:(_Bool)arg2;
- (_Bool)isRotating;
@property(nonatomic, getter=isRotated) _Bool rotated;
- (void)setRotated:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)_shadowImage;
- (void)dealloc;
- (id)initWithTableViewCell:(id)arg1 editingStyle:(long long)arg2;
- (id)_currentImage;
- (void)_toggleRotate;
- (void)_updateImageView;
- (id)_minusView;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellEditingData : NSObject
{
    UITableViewCell *_cell;
    long long _editingStyle;
    UITableViewCellEditControl *_editControl;
    UITableViewCellReorderControl *_reorderControl;
    UITableViewCellDeleteConfirmationControl_Legacy *_deleteConfirmationControl;
    UIView *_reorderSeparatorView;
}

- (id)reorderSeparatorView:(_Bool)arg1;
- (id)deleteConfirmationControl:(_Bool)arg1;
- (id)reorderControl:(_Bool)arg1;
- (id)editControl:(_Bool)arg1;
@property(readonly, nonatomic, getter=isDataRequired) _Bool dataRequired;
- (void)dealloc;
- (id)initWithTableViewCell:(id)arg1 editingStyle:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellLayoutManagerEditable1 : UITableViewCellLayoutManager <UITextFieldDelegate>
{
}

- (void)_textValueChanged:(id)arg1;
- (void)_textFieldEndEditingOnReturn:(id)arg1;
- (void)_textFieldEndEditing:(id)arg1;
- (void)_textFieldStartEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (id)editableTextFieldForCell:(id)arg1;
- (id)detailTextLabelForCell:(id)arg1;
- (void)layoutSubviewsOfCell:(id)arg1;
- (id)defaultTextLabelFontForCell:(id)arg1;
- (double)defaultTextFieldFontSizeForCell:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellLayoutManagerSubtitle : UITableViewCellLayoutManager
{
}

- (void)layoutSubviewsOfCell:(id)arg1;
- (void)getTextLabelRect:(struct CGRect *)arg1 detailTextLabelRect:(struct CGRect *)arg2 forCell:(id)arg3;
- (id)defaultDetailTextLabelFontForCell:(id)arg1;
- (id)defaultTextLabelFontForCell:(id)arg1;
- (id)detailTextLabelForCell:(id)arg1;
- (id)textLabelForCell:(id)arg1;
- (id)imageViewForCell:(id)arg1;
- (double)defaultDetailTextLabelFontSizeForCell:(id)arg1;
- (double)defaultTextLabelFontSizeForCell:(id)arg1;

@end

@interface UITableViewCellLayoutManagerValue1 : UITableViewCellLayoutManager
{
}

- (void)layoutSubviewsOfCell:(id)arg1;
- (void)getTextLabelRect:(struct CGRect *)arg1 detailTextLabelRect:(struct CGRect *)arg2 forCell:(id)arg3;
- (id)defaultTextLabelFontForCell:(id)arg1;
- (id)defaultDetailTextLabelFontForCell:(id)arg1;
- (id)detailTextLabelForCell:(id)arg1;
- (id)textLabelForCell:(id)arg1;
- (id)imageViewForCell:(id)arg1;
- (double)defaultDetailTextLabelFontSizeForCell:(id)arg1;
- (double)defaultTextLabelFontSizeForCell:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellLayoutManagerValue2 : UITableViewCellLayoutManager
{
}

- (struct CGSize)intrinsicContentSizeForCell:(id)arg1;
- (void)layoutSubviewsOfCell:(id)arg1;
- (void)getTextLabelRect:(struct CGRect *)arg1 detailTextLabelRect:(struct CGRect *)arg2 forCell:(id)arg3;
- (id)defaultDetailTextLabelFontForCell:(id)arg1;
- (id)defaultTextLabelFontForCell:(id)arg1;
- (id)detailTextLabelForCell:(id)arg1;
- (id)textLabelForCell:(id)arg1;
- (id)imageViewForCell:(id)arg1;
- (double)defaultDetailTextLabelFontSizeForCell:(id)arg1;
- (double)defaultTextLabelFontSizeForCell:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellReorderControl : UIControl
{
    UITableViewCell *_cell;
    struct CGPoint _downPoint;
}

+ (struct CGSize)defaultSize;
+ (id)grabberImage;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (_Bool)shouldTrack;
- (void)layoutSubviews;
- (id)initWithTableViewCell:(id)arg1;
- (id)grabberImage;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellSelectedBackground : UIView
{
    long long _selectionStyle;
    UIColor *_multiselectBackgroundColor;
    UIColor *_selectionTintColor;
    _Bool _multiselect;
}

@property(retain, nonatomic) UIColor *selectionTintColor; // @synthesize selectionTintColor=_selectionTintColor;
@property(retain, nonatomic) UIColor *multiselectBackgroundColor; // @synthesize multiselectBackgroundColor=_multiselectBackgroundColor;
@property(nonatomic) long long selectionStyle; // @synthesize selectionStyle=_selectionStyle;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
@property(nonatomic, getter=isMultiselect) _Bool multiselect;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCellUnhighlightedState : NSObject
{
    _Bool _opaque;
    _Bool _highlighted;
    UIColor *_backgroundColor;
}

@property(retain) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property _Bool highlighted; // @synthesize highlighted=_highlighted;
@property _Bool opaque; // @synthesize opaque=_opaque;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITableViewControllerKeyboardSupport : NSObject
{
    UITableViewController *_tableViewController;
    double _adjustmentForKeyboard;
    unsigned int _viewIsDisappearing:1;
    unsigned int _registeredForNotifications:1;
}

@property(nonatomic) double adjustmentForKeyboard; // @synthesize adjustmentForKeyboard=_adjustmentForKeyboard;
- (void)_keyboardDidChangeFrame:(id)arg1;
- (void)_keyboardDidHide:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardDidShow:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (id)initWithTableViewController:(id)arg1;
@property(nonatomic) _Bool registeredForNotifications;
@property(nonatomic) _Bool viewIsDisappearing;

@end

__attribute__((visibility("hidden")))
@interface UITableViewCountView : UILabel
{
    NSString *_countString;
    int _count;
}

- (long long)count;
- (void)setCount:(long long)arg1;
- (void)setCountString:(id)arg1 withCount:(long long)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 withCountString:(id)arg2 withCount:(long long)arg3;

@end

@interface UITableViewDataSource : NSObject <UITableViewDataSource, UITableViewDelegate, NSCoding>
{
    NSArray *_sections;
}

+ (id)staticDataSourceWithSections:(id)arg1;
@property(copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
- (long long)tableView:(id)arg1 indentationLevelForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITableViewHeaderFooterView : UIView <UITableViewSubviewReusing>
{
    long long _tableViewStyle;
    UIImage *_backgroundImage;
    struct CGRect _frame;
    long long _textAlignment;
    UITableView *_tableView;
    double _maxTitleWidth;
    NSString *_reuseIdentifier;
    UIView *_backgroundView;
    _UITableViewHeaderFooterViewLabel *_label;
    _UITableViewHeaderFooterViewLabel *_detailLabel;
    UIView *_contentView;
    UIColor *_tintColor;
    struct UIEdgeInsets _separatorInset;
    struct {
        unsigned int isHeader:1;
        unsigned int labelBackgroundColorNeedsUpdate:1;
        unsigned int detailLabelBackgroundColorNeedsUpdate:1;
        unsigned int floating:1;
        unsigned int stripPadding:1;
        unsigned int isTopHeader:1;
    } _headerFooterFlags;
}

+ (id)_defaultTextColorForTableViewStyle:(long long)arg1 isSectionHeader:(_Bool)arg2;
+ (id)_defaultFontForTableViewStyle:(long long)arg1 isSectionHeader:(_Bool)arg2;
+ (id)_defaultPlainHeaderFooterFont;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(nonatomic) double maxTitleWidth; // @synthesize maxTitleWidth=_maxTitleWidth;
@property(nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(copy, nonatomic) NSString *reuseIdentifier; // @synthesize reuseIdentifier=_reuseIdentifier;
@property(readonly, retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic, getter=_isTopHeader, setter=_setTopHeader:) _Bool topHeader;
@property(nonatomic, getter=_stripPadding, setter=_setStripPadding:) _Bool stripPadding;
- (void)_tableViewDidUpdateMarginWidth;
@property(retain, nonatomic) UIColor *tintColor;
- (id)_scriptingInfo;
- (void)setNeedsUpdateConstraints;
- (struct CGSize)systemLayoutSizeFittingSize:(struct CGSize)arg1 withHorizontalFittingPriority:(float)arg2 verticalFittingPriority:(float)arg3;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
- (void)setOpaque:(_Bool)arg1;
@property(nonatomic) _Bool floating;
@property(nonatomic) long long tableViewStyle;
- (void)_updateLayerContents;
@property(nonatomic, getter=_rightMarginWidth, setter=_setRightMarginWidth:) double rightMarginWidth;
@property(nonatomic, getter=_marginWidth, setter=_setMarginWidth:) double marginWidth;
- (void)_updateContentAndBackgroundView;
- (struct CGRect)_backgroundRect;
- (void)_setBackgroundViewColor:(id)arg1;
@property(retain, nonatomic) UIView *backgroundView;
- (void)_setupBackgroundView;
- (void)_updateBackgroundImage;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_sizeThatFits:(struct CGSize)arg1 stripPaddingForAbuttingView:(_Bool)arg2 isTopHeader:(_Bool)arg3;
- (_Bool)_useDetailText;
- (struct CGRect)_detailLabelFrame;
- (struct CGRect)_labelFrame;
@property(copy, nonatomic) NSString *text;
@property(readonly, retain, nonatomic) UILabel *detailTextLabel;
@property(readonly, retain, nonatomic) UILabel *textLabel;
- (id)_label:(_Bool)arg1;
- (void)_setupLabelAppearance;
- (void)_updateDetailLabelBackgroundColorIfNeeded;
- (void)_updateDetailLabelBackgroundColor;
- (void)_updateLabelBackgroundColorIfNeeeded;
- (void)_updateLabelBackgroundColor;
- (void)_invalidateDetailLabelBackgroundColor;
- (void)_invalidateLabelBackgroundColor;
- (struct CGSize)_detailTextSizeForWidth:(double)arg1;
- (struct CGSize)_textSizeForWidth:(double)arg1;
@property(nonatomic) long long textAlignment;
@property(nonatomic) _Bool sectionHeader;
- (struct CGRect)frame;
- (void)setFrame:(struct CGRect)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithReuseIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UITableViewIndex : UIControl
{
    NSArray *_titles;
    UIFont *_font;
    long long _selectedSection;
    _Bool _pastTop;
    _Bool _pastBottom;
    struct CGSize _cachedSize;
    struct CGSize _cachedSizeToFit;
    UIColor *_indexColor;
    UIColor *_indexBackgroundColor;
    UIColor *_indexTrackingBackgroundColor;
    double _topPadding;
    double _bottomPadding;
    double _verticalTextHeightEstimate;
    NSArray *_entries;
}

@property(readonly, nonatomic) _Bool pastBottom; // @synthesize pastBottom=_pastBottom;
@property(readonly, nonatomic) _Bool pastTop; // @synthesize pastTop=_pastTop;
@property(readonly, nonatomic) long long selectedSection; // @synthesize selectedSection=_selectedSection;
- (id)_externalDotImage;
- (id)_dotImage;
- (void)tintColorDidChange;
@property(retain, nonatomic) UIColor *indexBackgroundColor;
@property(retain, nonatomic) UIColor *indexTrackingBackgroundColor;
@property(retain, nonatomic) UIColor *indexColor;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)_selectSectionForTouch:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)_visibleBoundsForRect:(struct CGRect)arg1 stride:(double *)arg2;
- (unsigned long long)maximumNumberOfTitlesWithoutTruncationForHeight:(double)arg1;
@property(readonly, nonatomic) NSString *selectedSectionTitle;
@property(retain, nonatomic) UIFont *font;
@property(retain, nonatomic) NSArray *titles;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_cacheAndMeasureTitles;
- (id)_displayTitles;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (double)_minLineSpacingForIdiom:(long long)arg1;
- (id)_fontForIdiom:(long long)arg1;
- (long long)_idiom;

@end

__attribute__((visibility("hidden")))
@interface UITableViewIndexOverlayIndicatorView : UIView
{
    UILabel *_label;
    UITapGestureRecognizer *_tapGestureRecognizer;
    UITableView *_table;
}

@property(copy, nonatomic) NSString *currentText;
- (void)layoutSubviews;
- (void)_willChangeToIdiom:(long long)arg1 onScreen:(id)arg2;
- (void)dealloc;
- (void)_invalidateTable;
- (void)_tapGestureChanged:(id)arg1;
- (id)initWithTable:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITableViewIndexOverlaySelectionView : UIView <UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_collectionView;
    UITableViewIndexOverlaySelectionViewCollectionViewFlowLayout *_flowLayout;
    UITableView *_table;
}

- (void)_setIndexColor:(id)arg1;
- (void)_invalidateTable;
- (void)_doneTapped;
- (void)_cellTapped:(id)arg1;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)layoutSubviews;
- (_Bool)canBecomeFirstResponder;
- (id)initWithTable:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UITableViewIndexOverlaySelectionViewCollectionViewCell : UICollectionViewCell
{
    UIButton *_button;
    double _rightMargin;
    _Bool _rightMarginAdjusted;
    id _tapTarget;
    SEL _tapAction;
}

@property(readonly) UIButton *button; // @synthesize button=_button;
- (void)dealloc;
@property(readonly) UILabel *label;
@property(nonatomic) double rightMargin;
@property(nonatomic) long long textAlignment;
@property(copy, nonatomic) NSString *text;
- (void)applyLayoutAttributes:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITableViewIndexOverlaySelectionViewCollectionViewFlowLayout : UICollectionViewFlowLayout
{
    struct CGRect _frameForDoneButton;
    double _rightMarginForDoneButton;
}

+ (Class)layoutAttributesClass;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
@property(nonatomic) double rightMarginForDoneButton;
@property(nonatomic) struct CGRect frameForDoneButton;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITableViewIndexOverlaySelectionViewCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
{
    double rightMargin;
}

@property(nonatomic) double rightMargin; // @synthesize rightMargin;

@end

__attribute__((visibility("hidden")))
@interface UITableViewLabel : UILabel
{
    UITableViewCell *_tableCell;
}

@property(nonatomic) UITableViewCell *tableCell; // @synthesize tableCell=_tableCell;
- (void)setText:(id)arg1;

@end

@interface UITableViewRow : NSObject <NSCoding>
{
    long long _indentationLevel;
    UITableViewCell *_cell;
    double _height;
}

+ (id)row;
@property(retain, nonatomic) UITableViewCell *cell; // @synthesize cell=_cell;
@property(nonatomic) double height; // @synthesize height=_height;
- (long long)indentationLevel;
- (void)setIndentationLevel:(long long)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UITableViewRowAction : NSObject <NSCopying>
{
    long long _style;
    NSString *_title;
    UIColor *_backgroundColor;
    CDUnknownBlockType _handler;
    _UITableViewCellActionButton *_button;
    UIVisualEffect *_backgroundEffect;
}

+ (id)rowActionWithStyle:(long long)arg1 title:(id)arg2 handler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic, getter=_handler) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(copy, nonatomic) UIVisualEffect *backgroundEffect; // @synthesize backgroundEffect=_backgroundEffect;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void)_setButton:(id)arg1;
- (id)_button;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)_initWithStyle:(id)arg1 title:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface UITableViewRowData : NSObject <NSCopying>
{
    UITableView *_tableView;
    long long _numSections;
    long long _sectionRowDataCapacity;
    id *_sectionRowData;
    double _minimumRowHeight;
    double _tableViewWidth;
    _Bool _tableHeaderHeightValid;
    double _tableHeaderHeight;
    _Bool _tableFooterHeightValid;
    double _tableFooterHeight;
    double _heightForTableHeaderViewHiding;
    double _tableTopPadding;
    double _tableBottomPadding;
    _Bool _tableSidePaddingValid;
    double _tableSidePadding;
    NSIndexPath *_reorderedIndexPath;
    NSIndexPath *_gapIndexPath;
    double _reorderedRowHeight;
    _Bool _estimatesRowHeights;
}

@property(nonatomic) double tableBottomPadding; // @synthesize tableBottomPadding=_tableBottomPadding;
@property(nonatomic) double tableTopPadding; // @synthesize tableTopPadding=_tableTopPadding;
@property(nonatomic) double minimumRowHeight; // @synthesize minimumRowHeight=_minimumRowHeight;
@property(nonatomic) _Bool estimatesRowHeights; // @synthesize estimatesRowHeights=_estimatesRowHeights;
@property(readonly, nonatomic) double reorderedRowHeight; // @synthesize reorderedRowHeight=_reorderedRowHeight;
@property(readonly, nonatomic) NSIndexPath *reorderGapIndexPath; // @synthesize reorderGapIndexPath=_gapIndexPath;
- (long long)sectionForSectionRowData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)maxFooterTitleWidthForSection:(long long)arg1;
- (double)maxHeaderTitleWidthForSection:(long long)arg1;
- (long long)footerAlignmentForSection:(long long)arg1;
- (long long)headerAlignmentForSection:(long long)arg1;
- (id)indexPathForRowAtGlobalRow:(long long)arg1;
- (long long)globalRowForRowAtIndexPath:(id)arg1;
- (struct _NSRange)sectionsInRect:(struct CGRect)arg1;
- (long long)sectionForPoint:(struct CGPoint)arg1;
- (long long)_sectionForPoint:(struct CGPoint)arg1 beginningWithSection:(long long)arg2 numberOfSections:(long long)arg3;
- (struct _NSRange)globalRowsInRect:(struct CGRect)arg1 canGuess:(_Bool)arg2;
- (id)indexPathsForRowsInRect:(struct CGRect)arg1;
- (struct CGRect)rectForGlobalRow:(long long)arg1 heightCanBeGuessed:(_Bool)arg2;
- (struct CGRect)rectForRow:(long long)arg1 inSection:(long long)arg2 heightCanBeGuessed:(_Bool)arg3;
- (struct CGRect)floatingRectForFooterInSection:(long long)arg1 visibleRect:(struct CGRect)arg2;
- (double)heightForTable;
- (struct CGRect)rectForFooterInSection:(long long)arg1 heightCanBeGuessed:(_Bool)arg2;
- (struct CGRect)floatingRectForHeaderInSection:(long long)arg1 visibleRect:(struct CGRect)arg2;
- (struct CGRect)rectForHeaderInSection:(long long)arg1 heightCanBeGuessed:(_Bool)arg2;
- (struct CGRect)rectForSection:(long long)arg1;
- (struct CGRect)rectForTable;
- (struct CGRect)rectForTableFooterView;
- (struct CGRect)rectForTableHeaderView;
@property(nonatomic) double tableSidePadding;
- (int)sectionLocationForReorderedRow:(long long)arg1 inSection:(long long)arg2;
- (int)sectionLocationForRow:(long long)arg1 inSection:(long long)arg2;
- (void)setHeight:(double)arg1 forRowAtIndexPath:(id)arg2;
- (double)heightForRow:(long long)arg1 inSection:(long long)arg2 canGuess:(_Bool)arg3 adjustForReorderedRow:(_Bool)arg4;
- (double)heightForRow:(long long)arg1 inSection:(long long)arg2 canGuess:(_Bool)arg3;
- (double)heightForFooterInSection:(long long)arg1 canGuess:(_Bool)arg2;
- (double)heightForHeaderInSection:(long long)arg1 canGuess:(_Bool)arg2;
- (double)offsetForSection:(id)arg1;
- (double)heightForSection:(long long)arg1;
- (double)heightForTableFooterView;
@property(readonly, nonatomic) double heightForTableHeaderViewHiding;
@property(readonly, nonatomic) double heightForAutohidingTableHeaderView;
- (void)setHeightForTableHeaderViewHiding:(double)arg1;
- (double)heightForTableHeaderView;
- (_Bool)shouldStripHeaderTopPaddingForSection:(long long)arg1;
- (_Bool)hasFooterForSection:(long long)arg1;
- (_Bool)hasHeaderForSection:(long long)arg1;
- (long long)numberOfRows;
- (long long)numberOfRowsBeforeSection:(long long)arg1;
- (long long)numberOfRowsInSection:(long long)arg1;
- (long long)numberOfSections;
- (void)removeReorderGapFromIndexPath:(id)arg1;
- (void)addReorderGapFromIndexPath:(id)arg1;
- (void)moveRowAtIndexPathFrom:(id)arg1 toIndexPath:(id)arg2;
- (id)targetIndexPathForPoint:(struct CGPoint)arg1;
- (id)reorderedIndexPath;
- (void)setReorderedIndexPath:(id)arg1;
- (void)invalidateSection:(long long)arg1;
- (void)invalidateAllSectionOffsetsAndUpdatePadding;
- (void)invalidateAllSections;
- (void)_updateTopAndBottomPadding;
- (void)ensureAllSectionsAreValid;
- (void)tableFooterHeightDidChangeToHeight:(double)arg1;
- (void)tableHeaderHeightDidChangeToHeight:(double)arg1;
- (void)adjustSectionOffsetsBeginningAtIndex:(long long)arg1 count:(long long)arg2 delta:(double)arg3 rowDelta:(long long)arg4;
- (void)tableViewWidthDidChangeToWidth:(double)arg1;
- (long long)_sectionRowForGlobalRow:(long long)arg1 inSection:(long long *)arg2;
- (void)_ensureSectionOffsetIsValidForSection:(long long)arg1;
- (void)_updateSectionRowDataArrayForNumSections:(long long)arg1;
- (void)_updateNumSections;
- (void)dealloc;
- (id)initWithTableView:(id)arg1;

@end

@interface UITableViewSection : NSObject <NSCoding>
{
    NSString *_headerTitle;
    UIView *_headerView;
    NSString *_footerTitle;
    UIView *_footerView;
    NSArray *_rows;
}

+ (id)sectionWithRows:(id)arg1;
@property(copy, nonatomic) NSArray *rows; // @synthesize rows=_rows;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(copy, nonatomic) NSString *footerTitle; // @synthesize footerTitle=_footerTitle;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(copy, nonatomic) NSString *headerTitle; // @synthesize headerTitle=_headerTitle;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITableViewUpdateGap : NSObject
{
    UIUpdateItem *_firstUpdateItem;
    UIUpdateItem *_lastUpdateItem;
    NSMutableArray *_deleteItems;
    NSMutableArray *_insertItems;
    struct {
        unsigned int hasAutomaticAnimationItems:1;
    } _gapFlags;
}

+ (id)gapWithUpdateItem:(id)arg1;
@property(readonly, nonatomic) NSArray *insertItems; // @synthesize insertItems=_insertItems;
@property(readonly, nonatomic) NSArray *deleteItems; // @synthesize deleteItems=_deleteItems;
@property(retain, nonatomic) UIUpdateItem *lastUpdateItem; // @synthesize lastUpdateItem=_lastUpdateItem;
@property(retain, nonatomic) UIUpdateItem *firstUpdateItem; // @synthesize firstUpdateItem=_firstUpdateItem;
@property(readonly, nonatomic) _Bool hasAutomaticAnimationItems;
@property(readonly, nonatomic) _Bool isSectionBasedGap;
@property(readonly, nonatomic) NSArray *updateItems;
@property(readonly, nonatomic) _Bool hasInserts;
@property(readonly, nonatomic) _Bool isDeleteBasedGap;
- (void)dealloc;
- (void)addUpdateItem:(id)arg1;
- (id)description;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UITableViewVisibleCells : NSMutableArray
{
    NSMutableArray *_array;
}

- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)removeLastObject;
- (void)addObject:(id)arg1;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)_array;

@end

__attribute__((visibility("hidden")))
@interface UITableViewWrapperView : UIScrollView
{
    NSMutableArray *_stuckToBackViews;
}

@property(readonly, nonatomic) NSArray *stuckToBackViews; // @synthesize stuckToBackViews=_stuckToBackViews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)_forwardsToParentScroller;
- (void)setBounds:(struct CGRect)arg1;
- (void)handleSwipeBeginning:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)willRemoveSubview:(id)arg1;
- (void)_unstickView:(id)arg1;
- (void)_stickViewToBack:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITapAndAHalfRecognizer : UIGestureRecognizer
{
    struct CGPoint _startPoint;
    double _allowableMovement;
    int _numberOfFullTaps;
    double _minimumFinalPressDuration;
    NSMutableSet *_activeTouches;
    int _currentNumberOfTaps;
    UITouch *_touch;
    UIDelayedAction *_tapTimer;
}

@property(nonatomic) double minimumFinalPressDuration; // @synthesize minimumFinalPressDuration=_minimumFinalPressDuration;
@property(nonatomic) double allowableMovement; // @synthesize allowableMovement=_allowableMovement;
@property(retain, nonatomic) UITouch *touch; // @synthesize touch=_touch;
@property(nonatomic) int numberOfFullTaps; // @synthesize numberOfFullTaps=_numberOfFullTaps;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_verifyMovementInAllowableRange;
- (void)recognized:(id)arg1;
- (void)tooSlow:(id)arg1;
- (void)startTapTimer:(double)arg1;
- (void)startRecognitionTimer:(double)arg1;
- (void)clearTapTimer;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface UITapRecognizer : NSObject <NSCoding>
{
    unsigned long long _numberOfTouchesRequired;
    unsigned long long _numberOfTapsRequired;
    NSMutableSet *_activeTouches;
    int _currentNumberOfTouches;
    int _currentNumberOfTaps;
    struct CGPoint _location;
    struct CGPoint _startPoint;
    double _allowableMovement;
    double _maximumSingleTapDuration;
    double _maximumIntervalBetweenSuccessiveTaps;
    NSMutableArray *_touches;
    id _delegate;
    unsigned int _timerOn:1;
    unsigned int _noNewTouches:1;
}

@property(nonatomic) id <UITapRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *touches; // @synthesize touches=_touches;
@property(nonatomic) unsigned long long numberOfTouchesRequired; // @synthesize numberOfTouchesRequired=_numberOfTouchesRequired;
@property(nonatomic) unsigned long long numberOfTapsRequired; // @synthesize numberOfTapsRequired=_numberOfTapsRequired;
- (struct CGPoint)locationInView:(id)arg1;
- (struct CGPoint)_locationInSceneReferenceSpace;
@property(nonatomic) double maximumIntervalBetweenSuccessiveTaps;
@property(nonatomic) double maximumSingleTapDuration;
@property(nonatomic) double allowableMovement;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_interactionEndedTouch:(_Bool)arg1;
- (void)_beginInteraction;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (double)_effectiveAllowableMovement;
- (void)tooSlow:(id)arg1;
- (void)startTapTimer:(double)arg1;
- (void)clearTapTimer;
- (void)_reset;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UITestOneAppearanceContainer : UIDeviceAppearanceContainer
{
}

@end

__attribute__((visibility("hidden")))
@interface UITestTwoAppearanceContainer : UIDeviceAppearanceContainer
{
}

@end

__attribute__((visibility("hidden")))
@interface UITextAttachmentView : UIView <NSTextAttachmentCell>
{
    UIImage *_image;
    NSTextAttachment *_attachment;
}

+ (id)viewForImage:(id)arg1;
+ (id)viewForData:(id)arg1 ofType:(id)arg2;
@property(nonatomic) NSTextAttachment *attachment; // @synthesize attachment=_attachment;
@property(retain, nonatomic) UIImage *image;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3 layoutManager:(id)arg4;
- (void)drawWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterIndex:(unsigned long long)arg3;
@property(nonatomic) struct CGRect drawingBounds;
- (struct CGPoint)cellBaselineOffset;
- (struct CGSize)cellSize;
- (id)contentView;
- (void)dealloc;
- (id)initWithContentView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITextChecker : NSObject
{
    id _reserved;
    long long _usdt;
}

+ (void)queryLocalUpdateAssets:(CDUnknownBlockType)arg1;
+ (id)_textCheckerBackgroundQueue;
+ (void)setString:(id)arg1 isExemptFromChecker:(_Bool)arg2;
+ (void)unlearnWord:(id)arg1;
+ (_Bool)hasLearnedWord:(id)arg1;
+ (void)learnWord:(id)arg1;
+ (void)_setWords:(id)arg1 inDictionary:(id)arg2;
+ (id)_wordsInDictionary:(id)arg1;
+ (_Bool)_isWord:(id)arg1 inDictionary:(id)arg2;
+ (_Bool)_forgetWord:(id)arg1 inDictionary:(id)arg2;
+ (_Bool)_learnWord:(id)arg1 inDictionary:(id)arg2;
+ (id)dictionaryInfo:(id)arg1;
+ (id)openUserDictionary:(id)arg1;
+ (struct __CFSet *)createDictHashTable:(_Bool)arg1;
+ (id)bestLanguageForString:(id)arg1 fromAlternatives:(id)arg2 currentLanguage:(id)arg3;
+ (id)bestLanguageForString:(id)arg1 fromAlternatives:(id)arg2 currentLanguage:(id)arg3 insertionPointIndex:(unsigned long long)arg4 scriptForBestLanguage:(id *)arg5;
+ (id)availableLanguages;
+ (long long)uniqueSpellDocumentTag;
- (_Bool)isWordInUserDictionaries:(id)arg1 caseSensitive:(_Bool)arg2;
- (void)setIgnoredWords:(id)arg1;
- (id)ignoredWords;
- (void)ignoreWord:(id)arg1;
- (id)alternativesForPinyinInputString:(id)arg1;
- (id)stringForInputString:(id)arg1 language:(id)arg2;
- (_Bool)canChangeCaseOfFirstLetterInString:(id)arg1 toUpperCase:(_Bool)arg2 language:(id)arg3;
- (id)suggestWordInLanguage:(id)arg1;
- (id)completionsForPartialWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3;
- (id)guessesForWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3;
- (id)correctionForWordRange:(struct _NSRange)arg1 inString:(id)arg2 language:(id)arg3;
- (struct _NSRange)checkGrammarOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(_Bool)arg4 details:(id *)arg5;
- (struct _NSRange)checkSpellingOfString:(id)arg1 startingAt:(long long)arg2 language:(id)arg3 wrap:(_Bool)arg4 correction:(id *)arg5;
- (struct _NSRange)rangeOfMisspelledWordInString:(id)arg1 range:(struct _NSRange)arg2 startingAt:(long long)arg3 wrap:(_Bool)arg4 language:(id)arg5;
- (struct _NSRange)_chunkAndFindMisspelledWordInString:(id)arg1 language:(id)arg2 learnedDictionaries:(id)arg3 wordCount:(long long *)arg4 correction:(id *)arg5 usingChecker:(id)arg6;
- (struct _NSRange)_chunkAndCheckGrammarInString:(id)arg1 language:(id)arg2 usingChecker:(id)arg3 details:(id *)arg4;
- (long long)adjustOffsetToNextWordBoundaryInString:(id)arg1 startingAt:(long long)arg2;
- (id)_checker;
- (void)dealloc;
- (_Bool)_doneLoading;
- (id)_initWithAsynchronousLoading:(_Bool)arg1;
- (id)init;
- (void)initGlobals;
- (void)queryUpdateBundle;
- (void)initUserDictionaries;
- (void)_setDocumentDictionaryName:(id)arg1;
- (void)_setLanguageDictionaryName:(id)arg1;
- (id)_nameOfDictionaryForDocumentTag:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextCheckerDictionaryEntry : NSObject
{
    struct __CFSet *dictionary;
    NSData *data;
    long long size;
}

- (void)dealloc;

@end

@interface UITextContentView : UIView <UITextInput, UITextLinkInteraction, UITextInputTraits>
{
    id m_delegate;
    WebFrame *m_frame;
    DOMHTMLElement *m_body;
    int m_marginTop;
    struct UIEdgeInsets m_selectionInset;
    double m_bottomBufferHeight;
    _Bool m_editable;
    _Bool m_editing;
    _Bool m_becomesEditableWithGestures;
    _Bool m_becomingFirstResponder;
    _Bool m_reentrancyGuard;
    _Bool m_scrollsSelectionOnWebDocumentChanges;
    _Bool m_hasExplicitTextAlignment;
    _Bool m_allowsEditingTextAttributes;
    _Bool m_usesAttributedText;
    UITextInteractionAssistant *m_interactionAssistant;
    UIWebDocumentView *m_webView;
    UIFont *m_font;
    UIColor *m_textColor;
    long long m_textAlignment;
}

@property(nonatomic) id <UITextContentViewDelegate> delegate; // @synthesize delegate=m_delegate;
@property(nonatomic) _Bool scrollsSelectionOnWebDocumentChanges; // @synthesize scrollsSelectionOnWebDocumentChanges=m_scrollsSelectionOnWebDocumentChanges;
@property(nonatomic) struct UIEdgeInsets selectionInset; // @synthesize selectionInset=m_selectionInset;
- (void)setSelectionGranularity:(long long)arg1;
- (long long)selectionGranularity;
@property(nonatomic) long long selectionAffinity;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (id)metadataDictionariesForDictationResults;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (id)insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
- (id)_proxyTextInput;
- (struct CGPoint)offset;
- (void)setOffset:(struct CGPoint)arg1;
- (void)displayScrollerIndicators;
- (double)bottomBufferHeight;
- (void)setBottomBufferHeight:(double)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (_Bool)keyboardInputShouldDelete:(id)arg1;
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;
- (_Bool)isInteractingWithLink;
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)cancelInteractionWithLink;
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)tapLinkAtPoint:(struct CGPoint)arg1;
- (unsigned long long)_allowedLinkTypes;
- (_Bool)mightHaveLinks;
- (void)setDataDetectorTypes:(unsigned long long)arg1;
- (unsigned long long)dataDetectorTypes;
- (void)resetDataDetectorsResultsWithWebLock;
- (void)startDataDetectorsWithWebLock;
- (void)cancelDataDetectorsWithWebLock;
- (_Bool)shouldStartDataDetectors;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (void)_didScroll;
- (id)webView;
- (struct CGRect)visibleTextRect;
- (struct CGRect)visibleRect;
- (void)setMarginTop:(int)arg1;
- (int)marginTop;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;
- (_Bool)becomesEditableWithGestures;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=m_editing;
@property(nonatomic, getter=isEditable) _Bool editable;
@property(nonatomic) struct _NSRange selectedRange;
@property(nonatomic) long long textAlignment;
@property(copy, nonatomic) NSString *text;
- (_Bool)hasText;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIFont *font;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)_removeTextViewPropertiesFromText:(id)arg1;
- (void)_removeAttribute:(id)arg1 fromString:(id)arg2 andSetPropertyWith:(SEL)arg3 usingValueClass:(Class)arg4;
@property(nonatomic) _Bool allowsEditingTextAttributes;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)textInputTraits;
- (id)contentAsAttributedString;
- (void)setContentToAttributedString:(id)arg1;
- (id)contentAsHTMLString;
- (void)setContentToHTMLString:(id)arg1;
- (struct CGRect)rectForScrollToVisible;
- (void)performScrollSelectionToVisible:(_Bool)arg1;
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (struct CGRect)rectForSelection:(struct _NSRange)arg1;
- (void)setSelectionToEnd;
- (void)setSelectionToStart;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_sizeChanged;
- (void)performBecomeEditableTasks;
- (void)webViewDidChange:(id)arg1;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (id)documentFragmentForPasteboardItemAtIndex:(long long)arg1;
- (id)supportedPasteboardTypesForCurrentSelection;
- (void)selectAll;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (void)_addShortcut:(id)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (void)_define:(id)arg1;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)replace:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (id)undoManager;
- (id)undoManagerForWebView:(id)arg1;
- (void)_hideSelectionCommands;
- (id)fontForCaretSelection;
- (struct _NSRange)selectionRange;
- (_Bool)hasMarkedText;
- (unsigned long long)offsetInMarkedTextForSelection:(id)arg1;
- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;
- (id)selectedText;
- (id)selectionRectsForRange:(id)arg1;
- (struct CGRect)caretRectForVisiblePosition:(id)arg1;
- (struct CGRect)_selectionClipRect;
- (id)interactionAssistant;
- (id)selectionView;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (_Bool)hasSelection;
- (void)endSelectionChange;
- (void)updateSelection;
- (void)beginSelectionChange;
- (void)_scrollViewDidEndDecelerating;
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;
- (void)_scrollViewWillBeginDragging;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)automaticallySelectedOverlay;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;
- (void)ensureSelection;
- (_Bool)isFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (id)_keyboardResponder;
- (void)setSelectionChangeCallbacksDisabled:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)recalculateStyle;
- (id)styleString;
- (void)keyboardDidShow:(id)arg1;
- (void)removeFromSuperview;
- (void)dealloc;
- (void)commonInitWithWebDocumentView:(id)arg1 isDecoding:(_Bool)arg2;
- (void)updateContentEditableAttribute:(_Bool)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 webView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_automationValue;

// Remaining properties
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(readonly, nonatomic) UIView *textInputView;

@end

__attribute__((visibility("hidden")))
@interface UITextEffectsWindowHosted : UITextEffectsWindow
{
}

- (_Bool)_isOffsetByScreenJail;
- (_Bool)_isRotatedByScreenJail;
- (_Bool)_isClippedByScreenJail;
- (_Bool)_isScaledByScreenJail;
- (_Bool)_isConstrainedByScreenJail;
- (_Bool)_usesWindowServerHitTesting;
- (_Bool)_isWindowServerHostingManaged;

@end

__attribute__((visibility("hidden")))
@interface UITextEffectsWindowNoAbove : UITextEffectsWindow
{
}

- (id)aboveStatusBar;

@end

__attribute__((visibility("hidden")))
@interface UITextFieldAtomBackgroundView : UIView
{
    int _atomStyle;
}

- (void)setAtomStyle:(int)arg1;
- (int)atomStyle;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextFieldBackgroundView : UIView
{
    _Bool _active;
    _Bool _enabled;
    float _progress;
    UIColor *_fillColor;
}

@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
- (void)setProgress:(float)arg1;
- (void)setActive:(_Bool)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2;
- (void)setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_updateImages;

@end

__attribute__((visibility("hidden")))
@interface UITextFieldBorderView : UIView
{
    UIImage *_image;
}

- (_Bool)useBlockyMagnificationInClassic;
- (void)dealloc;
- (void)layoutSubviews;
- (void)setImage:(id)arg1;
- (void)_updateViewPropertiesForBackgroundImage;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextFieldCenteredLabel : UITextFieldLabel
{
    double _textXPosition;
    double _textWidth;
}

@property(nonatomic) double textWidth; // @synthesize textWidth=_textWidth;
@property(nonatomic) double textXPosition; // @synthesize textXPosition=_textXPosition;
- (_Bool)_isTextFieldCenteredLabel;

@end

__attribute__((visibility("hidden")))
@interface UITextFieldRoundedRectBackgroundView : UITextFieldBackgroundView
{
    UIImageView *_leftCap;
    UIImageView *_center;
    UIImageView *_rightCap;
    UIImageView *_progressFill;
}

- (void)layoutSubviews;
- (void)_updateImages;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITextInputArrowKeyHistory : NSObject
{
    UITextPosition *startPosition;
    long long amount;
    int anchor;
    UITextPosition *start;
    UITextPosition *end;
    UITextPosition *cursor;
    _Bool affinityDownstream;
}

@property(nonatomic) long long amount; // @synthesize amount;
@property(nonatomic) _Bool affinityDownstream; // @synthesize affinityDownstream;
@property(retain, nonatomic) UITextPosition *end; // @synthesize end;
@property(retain, nonatomic) UITextPosition *start; // @synthesize start;
@property(retain, nonatomic) UITextPosition *cursor; // @synthesize cursor;
@property(nonatomic) int anchor; // @synthesize anchor;
@property(retain, nonatomic) UITextPosition *startPosition; // @synthesize startPosition;
- (void)dealloc;

@end

@interface UITextInputController : NSObject <UITextInput_Internal, UITextInput, UITextInputAdditions>
{
    id <UITextInputDelegate> _inputDelegate;
    _UITextKitTextRange *_selectedTextRange;
    _UITextInputControllerTokenizer *_tokenizer;
    NSLayoutManager *_layoutManager;
    NSHashTable *_observedScrollViews;
    _UITextServiceSession *_definitionSession;
    _UITextServiceSession *_learnSession;
    UITextInputTraits *_textInputTraits;
    struct _NSRange _markedTextRange;
    struct _NSRange _markedTextSelection;
    struct {
        unsigned int delegateRespondsToTextInputShouldBeginEditing:1;
        unsigned int delegateRespondsToTextInputShouldChangeCharactersInRangeReplacementText:1;
        unsigned int delegateRespondsToTextInputDidChange:1;
        unsigned int delegateRespondsToTextInputDidChangeSelection:1;
        unsigned int delegateRespondsToTextInputWillChangeSelectionFromCharacterRangeToCharacterRange:1;
        unsigned int delegateRespondsToTextInputEditorDidChangeSelection:1;
        unsigned int delegateRespondsToTextInputPrepareAttributedTextForInsertion:1;
        unsigned int textOrSelectionChangeOriginatesWithKeyboard:1;
        unsigned int showingTextStyleOptions:1;
        unsigned int undoRedoInProgress:1;
        unsigned int textOrSelectionChangeOriginatesWithMarkedText:1;
        unsigned int nextSelectionChangeMustUpdate:1;
        unsigned int hasTextAlternatives:1;
        unsigned int suppressDelegateChangeNotifications:1;
    } _tiFlags;
    NSArray *_extraItemsBeforeTextStyleOptions;
    UIView<UITextInput> *_firstTextView;
    _UITextUndoManager *_undoManager;
    _UITextUndoOperationTyping *_undoOperationForCoalescing;
    UITextChecker *_textChecker;
    _UIDictationAttachment *_dictationPlaceholder;
    _Bool _allowsEditingTextAttributes;
    _Bool _continuousSpellCheckingEnabled;
    NSDictionary *_emptyStringAttributes;
    NSDictionary *_typingAttributes;
    id <UITextInputControllerDelegate> _delegate;
    struct _NSRange _previousSelectedRange;
}

@property(nonatomic) struct _NSRange previousSelectedRange; // @synthesize previousSelectedRange=_previousSelectedRange;
@property(nonatomic) _Bool continuousSpellCheckingEnabled; // @synthesize continuousSpellCheckingEnabled=_continuousSpellCheckingEnabled;
@property(nonatomic) id <UITextInputControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(copy, nonatomic) NSDictionary *typingAttributes; // @synthesize typingAttributes=_typingAttributes;
@property(nonatomic) _Bool allowsEditingTextAttributes; // @synthesize allowsEditingTextAttributes=_allowsEditingTextAttributes;
@property(copy, nonatomic, getter=_emptyStringAttributes, setter=_setEmptyStringAttributes:) NSDictionary *emptyStringAttributes; // @synthesize emptyStringAttributes=_emptyStringAttributes;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)_resetShowingTextStyle:(id)arg1;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)_toggleFontTrait:(int)arg1;
- (void)_addShortcut:(id)arg1;
- (void)_clearSelectionUI;
- (_Bool)_isDisplayingReferenceLibraryViewController;
- (_Bool)_isDisplayingShortcutViewController;
- (void)_removeShortcutController;
- (void)_define:(id)arg1;
- (void)_removeDefinitionController;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)paste:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (void)_copySelectionToClipboard;
- (void)removeTextStylingFromString:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (_Bool)_isSecureTextEntry;
- (void)replace:(id)arg1;
- (void)selectAll;
- (id)_selectedAttributedText;
- (id)_selectedText;
- (_Bool)_shouldHandleResponderAction:(SEL)arg1;
- (_Bool)_canHandleResponderAction:(SEL)arg1;
- (void)delegateWillChangeAttributedText:(id)arg1;
- (id)metadataDictionariesForDictationResults;
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (void)_insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2 replacingRange:(struct _NSRange)arg3 resultLength:(unsigned long long *)arg4;
- (void)clearText;
- (void)changeWillBeUndone:(id)arg1;
- (void)stopCoalescing;
- (_Bool)isCoalescing;
- (_Bool)_undoRedoInProgress;
- (void)_setUndoRedoInProgress:(_Bool)arg1;
- (void)undoDidChangeText;
- (void)undoWillChangeText;
- (void)registerUndoOperationForType:(int)arg1 actionName:(id)arg2 affectedRange:(struct _NSRange)arg3 replacementText:(id)arg4;
- (void)coalesceInTextView:(id)arg1 affectedRange:(struct _NSRange)arg2 replacementRange:(struct _NSRange)arg3;
- (void)_undoManagerWillUndo:(id)arg1;
- (id)undoManager;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectForPosition:(id)arg1;
@property(readonly, nonatomic, getter=_caretRect) struct CGRect caretRect;
- (struct CGRect)_caretRectForOffset:(unsigned long long)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (void)_invalidateEmptyStringAttributes;
- (void)_invalidateTypingAttributes;
- (void)_addToTypingAttributes:(id)arg1 value:(id)arg2;
- (id)_attributesForReplacementInRange:(struct _NSRange)arg1;
- (id)_newAttributedStringForInsertionOfText:(id)arg1 inRange:(struct _NSRange)arg2;
- (id)_fixupTypingAttributeForAttributes:(id)arg1;
- (id)_whitelistedTypingAttributes;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (struct _NSRange)markedRange;
- (void)_forceUnmarkTextDueToEditing;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(nonatomic) long long selectionAffinity;
@property(copy) UITextRange *selectedTextRange;
- (void)_performWhileSuppressingDelegateNotifications:(CDUnknownBlockType)arg1;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (void)_ensureSelectionVisible;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (id)_parentScrollView;
- (unsigned long long)_validCaretPositionFromCharacterIndex:(unsigned long long)arg1 downstream:(_Bool)arg2;
- (id)_characterPositionForPoint:(struct CGPoint)arg1;
- (id)_rectsForRange:(struct _NSRange)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (id)selectionView;
- (void)updateSelection;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (void)checkSpellingForSelectionChangeIfNecessary;
- (void)removeSpellingMarkersForCurrentWord;
- (void)removeSpellingMarkersFromWordInRange:(id)arg1;
- (id)textRangeForNSRange:(struct _NSRange)arg1;
- (struct _NSRange)nsRangeForTextRange:(id)arg1;
- (void)checkSpellingForWordInRange:(id)arg1;
- (void)preheatTextChecker;
- (id)textChecker;
- (void)deleteBackward;
- (void)didEndEditing;
- (struct _NSRange)_rangeForBackwardsDelete;
- (void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2;
- (_Bool)_hasDictationPlaceholder;
- (id)_filteredAttributedTextInRange:(struct _NSRange)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (void)_insertAttributedText:(id)arg1 fromKeyboard:(_Bool)arg2;
- (void)addTextAlternativesDisplayStyleToRange:(struct _NSRange)arg1;
- (void)insertText:(id)arg1;
- (void)removeAlternativesForCurrentWord;
- (_Bool)hasText;
- (_Bool)_mightHaveSelection;
@property(readonly, nonatomic, getter=isEditing) _Bool editing;
@property(readonly, nonatomic, getter=isEditable) _Bool editable;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (void)_insertText:(id)arg1 fromKeyboard:(_Bool)arg2;
- (int)atomStyle;
- (_Bool)drawsAsAtom;
@property(nonatomic) struct _NSRange selectedRange;
- (void)_coordinateSelectionChange:(CDUnknownBlockType)arg1;
- (void)_ensureSelectionValid;
- (void)_setSelectedTextRange:(id)arg1;
- (struct _NSRange)_selectedRange;
- (void)_setSelectedRange:(struct _NSRange)arg1;
- (void)_selectionDidScroll:(id)arg1;
- (id)interactionAssistant;
- (id)_firstTextView;
- (void)_selectionGeometryChanged;
- (void)_textStorageDidProcessEditing:(id)arg1;
- (void)_updateFirstTextView;
- (_Bool)_shouldConsiderTextViewForGeometry:(id)arg1;
- (void)_textContainerDidChangeView:(id)arg1;
- (void)_teardownTextContainerView:(id)arg1;
- (void)_setupTextContainerView:(id)arg1;
- (void)_setInternalGestureRecognizers;
- (id)_textStorage;
- (id)_layoutManager;
- (_Bool)_delegateShouldChangeTextInRange:(struct _NSRange)arg1 replacementText:(id)arg2;
- (void)_sendDelegateChangeNotificationsForText:(_Bool)arg1 selection:(_Bool)arg2;
- (void)_sendDelegateWillChangeNotificationsForText:(_Bool)arg1 selection:(_Bool)arg2;
- (void)_cancelDictationIfNecessaryForChangeInRange:(struct _NSRange)arg1;
- (void)dealloc;
- (void)_commonInitWithLayoutManager:(id)arg1;
- (id)initWithLayoutManager:(id)arg1;
- (id)_selectableText;
- (_Bool)_shouldPerformUICalloutBarButtonReplaceAction:(SEL)arg1 forText:(id)arg2 checkAutocorrection:(_Bool)arg3;
- (void)_phraseBoundaryGesture:(id)arg1;
- (id)_newPhraseBoundaryGestureRecognizer;
- (void)_unmarkText;
- (void)_setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (_Bool)_hasMarkedText;
- (_Bool)_usesAsynchronousProtocol;
- (void)_setGestureRecognizers;
- (long long)_selectionAffinity;
- (void)_setSelectedTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)_moveRight:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveLeft:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveDown:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveUp:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfDocument:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfParagraph:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfLine:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToEndOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_moveToStartOfWord:(_Bool)arg1 withHistory:(id)arg2;
- (id)_setHistory:(id)arg1 withExtending:(_Bool)arg2 withAnchor:(int)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)_setSelectionRangeWithHistory:(id)arg1;
- (void)_updateSelectionWithTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
- (id)_fontForCaretSelection;
- (id)_textColorForCaretSelection;
- (id)_clampedpositionFromPosition:(id)arg1 offset:(int)arg2;
- (id)_findPleasingWordBoundaryFromPosition:(id)arg1;
- (id)_fullRange;
- (id)_rangeOfParagraphEnclosingPosition:(id)arg1;
- (id)_rangeOfLineEnclosingPosition:(id)arg1;
- (id)_rangeOfEnclosingWord:(id)arg1;
- (id)_rangeOfText:(id)arg1 endingAtPosition:(id)arg2;
- (void)_scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)_replaceCurrentWordWithText:(id)arg1;
- (void)_deleteForwardAndNotify:(_Bool)arg1;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;
- (void)_deleteToEndOfLine;
- (void)_deleteToStartOfLine;
- (void)_deleteByWord;
- (void)_setCaretSelectionAtEndOfSelection;
- (id)_positionAtStartOfWords:(unsigned long long)arg1 beforePosition:(id)arg2;
- (void)_expandSelectionToStartOfWordsBeforeCaretSelection:(int)arg1;
- (void)_expandSelectionToStartOfWordBeforeCaretSelection;
- (void)_expandSelectionToBackwardDeletionCluster;
- (void)_moveCurrentSelection:(int)arg1;
- (void)_extendCurrentSelection:(int)arg1;
- (_Bool)_hasMarkedTextOrRangedSelection;
- (_Bool)_isEmptySelection;
- (struct CGRect)_selectionClipRect;
- (_Bool)_selectionAtDocumentEnd;
- (_Bool)_selectionAtDocumentStart;
- (_Bool)_selectionAtWordStart;
- (id)_fullText;
- (id)_wordContainingCaretSelection;
- (unsigned int)_characterInRelationToRangedSelection:(int)arg1;
- (unsigned int)_characterInRelationToCaretSelection:(int)arg1;
- (unsigned int)_characterBeforeCaretSelection;
- (unsigned int)_characterAfterCaretSelection;
- (struct _NSRange)_nsrangeForTextRange:(id)arg1;
- (int)_indexForTextPosition:(id)arg1;
- (void)_selectAll;
- (struct _NSRange)_selectedNSRange;
- (id)_keyInput;
@property(readonly, nonatomic, getter=_proxyTextInput) UIResponder<UITextInput> *__content;

// Remaining properties
@property(readonly, nonatomic) UIView<UITextInputPrivate> *_textSelectingContainer;
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;
@property(readonly, nonatomic) UIView *textInputView;

@end

@interface UITextInputStringTokenizer : NSObject <UITextInputTokenizer>
{
    UIResponder<UITextInput> *_textInput;
}

- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)_positionFromPosition:(id)arg1 offset:(unsigned long long)arg2 affinity:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)_isDownstreamForDirection:(long long)arg1 atPosition:(id)arg2;
- (struct _NSRange)_getClosestTokenRangeForPosition:(id)arg1 granularity:(long long)arg2 downstream:(_Bool)arg3;
- (long long)_indexForTextPosition:(id)arg1;
- (id)initWithTextInput:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying>
{
    long long autocapitalizationType;
    long long autocorrectionType;
    long long spellCheckingType;
    unsigned int keyboardType:8;
    unsigned int keyboardAppearance:8;
    long long returnKeyType;
    _Bool enablesReturnKeyAutomatically;
    _Bool secureTextEntry;
    struct __CFCharacterSet *textTrimmingSet;
    UIColor *insertionPointColor;
    UIColor *selectionBarColor;
    UIColor *selectionHighlightColor;
    UIImage *selectionDragDotImage;
    unsigned long long insertionPointWidth;
    int textLoupeVisibility;
    int textSelectionBehavior;
    id textSuggestionDelegate;
    _Bool isSingleLineDocument;
    _Bool contentsIsSingleValue;
    _Bool acceptsEmoji;
    _Bool forceEnableDictation;
    _Bool returnKeyGoesToNextResponder;
    _Bool acceptsFloatingKeyboard;
    _Bool acceptsSplitKeyboard;
    _Bool displaySecureTextUsingPlainText;
    _Bool learnsCorrections;
    int emptyContentReturnKeyType;
    int shortcutConversionType;
    _Bool suppressReturnKeyStyling;
    _Bool useInterfaceLanguageForLocalization;
    _Bool deferBecomingResponder;
    _Bool enablesReturnKeyOnNonWhiteSpaceContent;
    NSString *autocorrectionContext;
    NSString *responseContext;
    _Bool disablePrediction;
}

+ (_Bool)keyboardTypeRequiresASCIICapable:(long long)arg1;
+ (id)traitsByAdoptingTraits:(id)arg1;
+ (id)defaultTextInputTraits;
+ (long long)accessibleAppearanceForAppearance:(long long)arg1;
@property(nonatomic) _Bool disablePrediction; // @synthesize disablePrediction;
@property(copy, nonatomic) NSString *responseContext; // @synthesize responseContext;
@property(copy, nonatomic) NSString *autocorrectionContext; // @synthesize autocorrectionContext;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent; // @synthesize enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool deferBecomingResponder; // @synthesize deferBecomingResponder;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization; // @synthesize useInterfaceLanguageForLocalization;
@property(nonatomic) _Bool suppressReturnKeyStyling; // @synthesize suppressReturnKeyStyling;
@property(nonatomic) int shortcutConversionType; // @synthesize shortcutConversionType;
@property(nonatomic) _Bool learnsCorrections; // @synthesize learnsCorrections;
@property(nonatomic) _Bool displaySecureTextUsingPlainText; // @synthesize displaySecureTextUsingPlainText;
@property(nonatomic) _Bool acceptsSplitKeyboard; // @synthesize acceptsSplitKeyboard;
@property(nonatomic) _Bool acceptsFloatingKeyboard; // @synthesize acceptsFloatingKeyboard;
@property(nonatomic) _Bool returnKeyGoesToNextResponder; // @synthesize returnKeyGoesToNextResponder;
@property(nonatomic) int emptyContentReturnKeyType; // @synthesize emptyContentReturnKeyType;
@property(nonatomic) _Bool forceEnableDictation; // @synthesize forceEnableDictation;
@property(nonatomic) _Bool acceptsEmoji; // @synthesize acceptsEmoji;
@property(nonatomic) _Bool contentsIsSingleValue; // @synthesize contentsIsSingleValue;
@property(nonatomic) _Bool isSingleLineDocument; // @synthesize isSingleLineDocument;
@property(nonatomic) int textSelectionBehavior; // @synthesize textSelectionBehavior;
@property(nonatomic) int textLoupeVisibility; // @synthesize textLoupeVisibility;
@property(nonatomic) unsigned long long insertionPointWidth; // @synthesize insertionPointWidth;
@property(retain, nonatomic) UIImage *selectionDragDotImage; // @synthesize selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor; // @synthesize selectionHighlightColor;
@property(retain, nonatomic) UIColor *selectionBarColor; // @synthesize selectionBarColor;
@property(retain, nonatomic) UIColor *insertionPointColor; // @synthesize insertionPointColor;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @synthesize secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @synthesize enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType; // @synthesize returnKeyType;
@property(nonatomic) long long keyboardAppearance; // @synthesize keyboardAppearance;
@property(nonatomic) long long keyboardType; // @synthesize keyboardType;
@property(nonatomic) long long spellCheckingType; // @synthesize spellCheckingType;
@property(nonatomic) long long autocorrectionType; // @synthesize autocorrectionType;
@property(nonatomic) long long autocapitalizationType; // @synthesize autocapitalizationType;
- (_Bool)isEqual:(id)arg1;
- (_Bool)publicTraitsMatchTraits:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)takeTraitsFrom:(id)arg1;
- (void)setToDefaultValues;
- (void)dealloc;
- (id)init;
@property(nonatomic) id textSuggestionDelegate; // @dynamic textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet; // @dynamic textTrimmingSet;
- (id)dictionaryRepresentation;
- (void)setToSecureValues;
- (void)_setColorsToMatchTintColor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITextInteractionAssistant : NSObject <UIGestureRecognizerDelegate>
{
    UIResponder<UITextInput> *_view;
    UITextSelectionView *_selectionView;
    NSMutableArray *_recognizers;
    NSMutableSet *_linkGestures;
    UILongPressGestureRecognizer *_loupeGesture;
    UITapGestureRecognizer *_singleTapGesture;
    UIGestureRecognizer *_doubleTapGesture;
    int _autoscrollRamp;
    double _autoscrollFactor;
    struct CGPoint _autoscrollBasePoint;
    struct CGPoint _autoscrollUntransformedExtentPoint;
    struct CGPoint _loupeGestureEndPoint;
    UITextChecker *_textChecker;
    _Bool _inGesture;
    _Bool _autoscrolled;
    _Bool _isTryingToHighlightLink;
    _Bool _externalTextInput;
    NSHashTable *_gestureRecognizerViews;
}

@property(readonly, nonatomic, getter=isExperimentalUIEnabled) _Bool experimentalUIEnabled;
- (id)textSelectionView;
- (void)clearGestureRecognizers;
- (id)initWithResponder:(id)arg1;
- (void)didEndScrollingOverflow;
- (void)willStartScrollingOverflow;
- (void)layoutChangedByScrolling:(_Bool)arg1;
- (_Bool)swallowsDoubleTapWithScale:(double)arg1 atPoint:(struct CGPoint)arg2;
- (void)scheduleReplacementsForRange:(id)arg1 withOptions:(unsigned long long)arg2;
- (void)scheduleDictationReplacementsForAlternatives:(id)arg1 range:(id)arg2;
- (id)rangeForTextReplacement:(id)arg1;
- (void)scheduleChineseTransliteration;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (void)scheduleReplacements;
- (void)cancelInteractionWithLink;
- (_Bool)tapOnLinkWithGesture:(id)arg1;
- (_Bool)isInteractingWithLink;
- (_Bool)shouldIgnoreLinkGestures;
- (void)longDelayRecognizer:(id)arg1;
- (void)smallDelayRecognizer:(id)arg1;
- (_Bool)viewCouldBecomeEditable:(id)arg1;
- (void)updateAutoscroll:(id)arg1;
- (void)autoscrollWillNotStart;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (void)resignedFirstResponder;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;
- (void)rangeSelectionMoved:(struct CGPoint)arg1 withTouchPoint:(struct CGPoint)arg2;
- (void)rangeSelectionEnded:(struct CGPoint)arg1;
- (void)rangeSelectionStarted:(struct CGPoint)arg1;
- (void)selectionAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)updateWithMagnifierTerminalPoint:(_Bool)arg1;
- (void)updateSelectionWithPoint:(struct CGPoint)arg1;
- (void)twoFingerRangedSelectGesture:(id)arg1;
- (void)twoFingerSingleTap:(id)arg1;
- (void)notifyKeyboardSelectionChanged;
- (void)clearSelection;
- (void)selectAll:(id)arg1;
- (void)selectWordWithoutShowingCommands;
- (void)selectWord;
- (void)oneFingerTripleTap:(id)arg1;
- (void)oneFingerDoubleTap:(id)arg1;
- (void)oneFingerTapSelectsAll:(id)arg1;
- (void)oneFingerTapInUneditable:(id)arg1;
- (void)oneFingerTap:(id)arg1;
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;
- (_Bool)noCalloutBarAndTouchInSelection:(struct CGPoint)arg1;
- (double)distanceBetweenPoint:(struct CGPoint)arg1 andRange:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)shouldHandleOneFingerTapInUneditable:(id)arg1;
- (_Bool)shouldHandleFormGestureAtLocation:(struct CGPoint)arg1;
- (void)doubleTapInUneditable:(id)arg1;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)tapAndAHalf:(id)arg1;
- (void)confirmMarkedText:(id)arg1;
- (void)loupeGesture:(id)arg1;
- (void)scrollSelectionToVisible;
- (void)setFirstResponderIfNecessary;
- (void)removeGestureRecognizersFromView:(id)arg1;
- (void)addGestureRecognizersToView:(id)arg1;
- (void)setGestureRecognizers;
- (id)linkInteractionView;
- (id)addDragRecognizer;
- (void)canBeginDragCursor:(id)arg1;
- (id)addPhraseBoundaryGestureRecognizerToView:(id)arg1;
- (id)phraseBoundaryGestureRecognizer;
- (id)addTapAndHoldOnLinkRecognizerToView:(id)arg1;
- (id)addHighlightLinkRecognizerToView:(id)arg1;
- (id)addTwoFingerRangedSelectRecognizerToView:(id)arg1;
- (id)twoFingerRangedSelectRecognizer;
- (id)addLoupeGestureRecognizer:(_Bool)arg1 toView:(id)arg2;
- (id)loupeGestureRecognizer:(_Bool)arg1;
- (id)addTapAndAHalfRecognizerToView:(id)arg1;
- (id)tapAndAHalfRecognizer;
- (id)addTwoFingerSingleTapRecognizerToView:(id)arg1;
- (id)twoFingerSingleTapRecognizer;
- (id)addSelectionTapRecognizerToView:(id)arg1;
- (id)addSelectionTapRecognizer:(SEL)arg1 toView:(id)arg2;
- (id)selectionTapRecognizer:(SEL)arg1;
- (id)addOneFingerTripleTapRecognizerToView:(id)arg1;
- (id)oneFingerTripleTapRecognizer;
- (id)addOneFingerTapRecognizerToView:(id)arg1;
- (id)addOneFingerTapRecognizer:(SEL)arg1 toView:(id)arg2;
- (id)oneFingerTapRecognizer:(SEL)arg1;
- (id)addOneFingerDoubleTapRecognizerToView:(id)arg1;
- (id)addOneFingerDoubleTapRecognizer:(SEL)arg1 toView:(id)arg2;
- (id)oneFingerDoubleTapRecognizer:(SEL)arg1;
- (_Bool)useGesturesForEditableContent;
- (void)clearGestureRecognizers:(_Bool)arg1;
- (void)disableClearsOnInsertion;
- (void)turnOffDrawsAsAtomIfPlainStyleAtom;
- (_Bool)containerIsBrowserView;
- (_Bool)containerChangesSelectionOnOneFingerTap;
- (_Bool)containerAllowsSelectionTintOnly;
- (_Bool)containerAllowsSelection;
- (_Bool)containerIsPlainStyleAtom;
- (_Bool)containerIsAtom;
- (_Bool)containerIsTextField;
@property(readonly, nonatomic) UIFieldEditor *fieldEditor; // @dynamic fieldEditor;
@property(readonly, nonatomic) UIView *scrollView;
- (void)attach;
- (void)detach;
- (void)detach:(_Bool)arg1;
@property(readonly, nonatomic) _Bool externalTextInput;
@property(nonatomic) struct CGPoint autoscrollUntransformedExtentPoint;
@property(nonatomic) _Bool autoscrolled;
@property(nonatomic) _Bool inGesture;
@property(nonatomic) struct CGPoint loupeGestureEndPoint;
@property(retain, nonatomic) UILongPressGestureRecognizer *loupeGesture;
@property(retain, nonatomic) UIGestureRecognizer *doubleTapGesture;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapGesture; // @dynamic singleTapGesture;
@property(readonly, nonatomic) UIResponder<UITextInput> *textDocument;
- (id)_selectionView;
- (_Bool)requiresImmediateUpdate;
@property(readonly, nonatomic) UITextSelectionView *selectionView;
- (void)deactivateSelection;
- (void)activateSelection;
- (void)selectionChanged;
@property(readonly, nonatomic) UIResponder<UITextInput> *view;
- (id)_scrollable;
- (id)_asText;
- (void)dealloc;
- (id)initWithView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UITextLabel : UILabel
{
}

- (void)drawRect:(struct CGRect)arg1;
- (long long)alignment;
- (void)setAlignment:(long long)arg1;
- (float)minFontSize;
- (void)setMinFontSize:(float)arg1;
- (_Bool)textAutoresizesToFit;
- (void)setTextAutoresizesToFit:(_Bool)arg1;
- (_Bool)wrapsText;
- (void)setWrapsText:(_Bool)arg1;
- (_Bool)centersHorizontally;
- (void)setCentersHorizontally:(_Bool)arg1;
- (id)highlightedColor;
- (void)setHighlightedColor:(id)arg1;
- (id)color;
- (void)setColor:(id)arg1;
- (struct CGSize)ellipsizedTextSize;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifier : UIView
{
    UIView *_target;
    struct CGPoint _magnificationPoint;
    struct CGPoint _animationPoint;
    struct CGPoint _terminalPoint;
    _Bool _terminalPointPlacedCarefully;
    UIResponder<UITextInput> *_text;
    UITextMagnifierTimeWeightedPoint *_weightedPoint;
    UIView *_magnifierRenderer;
    UIView *_autoscrollRenderer;
    int _autoscrollDirections;
}

+ (id)getLoupeBackgroundColor:(id)arg1;
@property(retain, nonatomic) UIResponder<UITextInput> *text; // @synthesize text=_text;
@property(nonatomic) struct CGPoint animationPoint; // @synthesize animationPoint=_animationPoint;
@property(retain, nonatomic) UIView *target; // @synthesize target=_target;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 text:(id)arg2 magnificationPoint:(struct CGPoint)arg3 offset:(struct CGPoint)arg4 animated:(_Bool)arg5;
- (void)windowWillRotate:(id)arg1;
- (void)detectLostTouches:(id)arg1;
- (void)remove;
- (void)zoomDownAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)zoomDownAnimation;
- (void)zoomUpAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)zoomUpAnimation;
- (void)setNeedsDisplay;
- (void)setFrame:(struct CGRect)arg1;
- (void)autoscrollWillNotStart;
- (void)setAutoscrollDirections:(int)arg1;
- (void)animateToMagnifierRenderer;
- (void)setToMagnifierRenderer;
- (void)animateToAutoscrollRenderer;
- (void)postAutoscrollPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) _Bool terminalPointPlacedCarefully; // @synthesize terminalPointPlacedCarefully=_terminalPointPlacedCarefully;
@property(readonly, nonatomic) struct CGPoint terminalPoint; // @synthesize terminalPoint=_terminalPoint;
@property(nonatomic) struct CGPoint magnificationPoint; // @synthesize magnificationPoint=_magnificationPoint;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifierCaret : UITextMagnifier
{
    struct CGPoint _offset;
    float _yOffset;
}

+ (id)sharedCaretMagnifier;
@property(nonatomic) float yOffset; // @synthesize yOffset=_yOffset;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 text:(id)arg2 magnificationPoint:(struct CGPoint)arg3 offset:(struct CGPoint)arg4 animated:(_Bool)arg5;
- (void)updateFrameAndOffset;
- (void)remove;
- (void)zoomDownAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)zoomDownAnimation;
- (void)zoomUpAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)zoomUpAnimation;
- (void)setAutoscrollDirections:(int)arg1;
- (_Bool)terminalPointPlacedCarefully;
- (void)setMagnificationPoint:(struct CGPoint)arg1;
- (void)setAnimationPoint:(struct CGPoint)arg1;
- (struct CGPoint)animationPoint;
- (void)dealloc;
- (id)initWithFrame;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifierRenderer : UIView
{
    int m_autoscrollDirections;
    int m_magnifierMethod;
}

@property(nonatomic) int magnifierMethod; // @synthesize magnifierMethod=m_magnifierMethod;
@property(nonatomic) int autoscrollDirections; // @synthesize autoscrollDirections=m_autoscrollDirections;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawMagnifier:(struct CGRect)arg1;
- (void)drawAutoscroller:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifierCaretRenderer : UITextMagnifierRenderer
{
}

- (void)drawMagnifier:(struct CGRect)arg1;
- (void)drawAutoscroller:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifierRanged : UITextMagnifier
{
    double _touchOffsetFromMagnificationPoint;
    double _magnifierOffsetFromTouch;
    _Bool _isHorizontal;
    _Bool _isAnimating;
    long long _delayedAnimationType;
}

+ (id)sharedRangedMagnifier;
@property(nonatomic) _Bool isHorizontal; // @synthesize isHorizontal=_isHorizontal;
- (struct CGPoint)snappedPoint:(struct CGPoint)arg1;
- (struct CGRect)caretRectClosestToPoint:(struct CGPoint)arg1;
- (struct CGPoint)clipPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (void)stopMagnifying:(_Bool)arg1;
- (void)beginMagnifyingTarget:(id)arg1 text:(id)arg2 magnificationPoint:(struct CGPoint)arg3 offset:(struct CGPoint)arg4 animated:(_Bool)arg5;
- (void)updateFrame;
- (double)offsetFromMagnificationPoint;
- (void)remove;
- (void)zoomDownAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)zoomDownAnimation;
- (void)zoomUpAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)zoomUpAnimation;
- (void)setAutoscrollDirections:(int)arg1;
- (int)horizontalMovement;
- (_Bool)wasPlacedCarefullyAtTime:(double)arg1;
- (int)horizontalMovementAtTime:(double)arg1;
- (_Bool)terminalPointPlacedCarefully;
- (void)setMagnificationPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithFrame;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifierRangedRenderer : UITextMagnifierRenderer
{
}

- (void)drawMagnifier:(struct CGRect)arg1;
- (void)drawAutoscroller:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextMagnifierTimeWeightedPoint : NSObject
{
    int m_index;
    struct {
        struct CGPoint point;
        double time;
    } m_points[16];
}

- (float)distanceCoveredInInterval:(double)arg1 priorTo:(double)arg2;
- (struct CGSize)displacementInInterval:(double)arg1 priorTo:(double)arg2;
- (struct CGSize)displacementInInterval:(double)arg1;
- (float)distanceCoveredInInterval:(double)arg1;
- (_Bool)historyCovers:(double)arg1;
@property(readonly, nonatomic) struct CGPoint weightedPoint;
- (void)addPoint:(struct CGPoint)arg1;
- (void)clearHistory;

@end

@interface UITextPosition : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface UITextPositionImpl : UITextPosition
{
    WebVisiblePosition *_webVisiblePosition;
}

+ (id)wrapWebVisiblePosition:(id)arg1;
@property(retain, nonatomic) WebVisiblePosition *webVisiblePosition; // @synthesize webVisiblePosition=_webVisiblePosition;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface UITextRange : NSObject
{
}

@property(readonly, nonatomic) UITextPosition *end;
@property(readonly, nonatomic) UITextPosition *start;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
@property(readonly, nonatomic, getter=_isImpl) UITextRangeImpl *isImpl;
@property(readonly, nonatomic, getter=_isRanged) _Bool isRanged;
@property(readonly, nonatomic, getter=_isCaret) _Bool isCaret;

@end

__attribute__((visibility("hidden")))
@interface UITextRangeImpl : UITextRange
{
    DOMRange *_domRange;
    long long _affinityIfCollapsed;
}

+ (id)wrapDOMRange:(id)arg1;
+ (id)wrapDOMRange:(id)arg1 withAffinity:(long long)arg2;
@property(nonatomic) long long affinity; // @synthesize affinity=_affinityIfCollapsed;
@property(retain, nonatomic) DOMRange *domRange; // @synthesize domRange=_domRange;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEmpty;
- (id)end;
- (id)start;
- (void)adjustAffinityOfPosition:(id)arg1 isStart:(_Bool)arg2;
- (void)dealloc;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface UITextRangeView : UIView
{
    UITextSelectionView *m_selectionView;
    UIResponder<UITextInput> *m_container;
    int m_mode;
    NSArray *m_rects;
    NSMutableArray *m_rectViews;
    UITouch *m_activeTouch;
    struct CGRect m_startEdge;
    struct CGRect m_endEdge;
    struct CGPoint m_basePoint;
    struct CGPoint m_extentPoint;
    struct CGPoint m_initialBasePoint;
    struct CGPoint m_initialExtentPoint;
    double m_initialDistance;
    struct CGPoint m_touchOffset;
    double m_firstMovedTime;
    UISelectionGrabber *m_startGrabber;
    UISelectionGrabber *m_endGrabber;
    _Bool m_animateUpdate;
    _Bool m_baseIsStart;
    _Bool m_commandsWereShowing;
    _Bool m_inGesture;
    _Bool m_magnifying;
    _Bool m_scrolling;
    _Bool m_scaling;
    _Bool m_rotating;
    _Bool m_inputViewIsChanging;
}

@property(nonatomic) _Bool inputViewIsChanging; // @synthesize inputViewIsChanging=m_inputViewIsChanging;
@property(nonatomic) _Bool rotating; // @synthesize rotating=m_rotating;
@property(nonatomic) _Bool scaling; // @synthesize scaling=m_scaling;
@property(nonatomic) _Bool isScrolling; // @synthesize isScrolling=m_scrolling;
@property(nonatomic) _Bool inGesture; // @synthesize inGesture=m_inGesture;
@property(nonatomic) _Bool magnifying; // @synthesize magnifying=m_magnifying;
@property(nonatomic) _Bool commandsWereShowing; // @synthesize commandsWereShowing=m_commandsWereShowing;
@property(nonatomic) _Bool animateUpdate; // @synthesize animateUpdate=m_animateUpdate;
@property(retain, nonatomic) UISelectionGrabber *endGrabber; // @synthesize endGrabber=m_endGrabber;
@property(retain, nonatomic) UISelectionGrabber *startGrabber; // @synthesize startGrabber=m_startGrabber;
@property(nonatomic) double firstMovedTime; // @synthesize firstMovedTime=m_firstMovedTime;
@property(nonatomic) struct CGPoint touchOffset; // @synthesize touchOffset=m_touchOffset;
@property(nonatomic) double initialDistance; // @synthesize initialDistance=m_initialDistance;
@property(nonatomic) struct CGPoint initialExtentPoint; // @synthesize initialExtentPoint=m_initialExtentPoint;
@property(nonatomic) struct CGPoint initialBasePoint; // @synthesize initialBasePoint=m_initialBasePoint;
@property(nonatomic) struct CGPoint extentPoint; // @synthesize extentPoint=m_extentPoint;
@property(nonatomic) struct CGPoint basePoint; // @synthesize basePoint=m_basePoint;
@property(nonatomic) struct CGRect endEdge; // @synthesize endEdge=m_endEdge;
@property(nonatomic) struct CGRect startEdge; // @synthesize startEdge=m_startEdge;
@property(nonatomic) _Bool baseIsStart; // @synthesize baseIsStart=m_baseIsStart;
@property(retain, nonatomic) UITouch *activeTouch; // @synthesize activeTouch=m_activeTouch;
@property(nonatomic) int mode; // @synthesize mode=m_mode;
- (struct CGPoint)convertFromMagnifierPoint:(struct CGPoint)arg1;
- (struct CGPoint)magnifierPoint;
- (void)updateGrabbers;
- (_Bool)_endIsHorizontal;
- (_Bool)_startIsHorizontal;
- (void)updateRectViews;
- (struct CGRect)_selectionClipRect;
- (void)updateBaseAndExtentPointsFromEdges;
- (void)beginMagnifying;
@property(readonly, nonatomic) _Bool autoscrolled;
- (struct CGPoint)applyTouchOffset:(struct CGPoint)arg1;
- (void)setTouchOffset:(struct CGPoint)arg1 touchPoint:(struct CGPoint)arg2;
- (_Bool)pointCloserToEnd:(struct CGPoint)arg1 startEdge:(struct CGRect)arg2 endEdge:(struct CGRect)arg3;
- (void)cancelDelayedActions;
- (void)stopAnimating;
- (void)startAnimating;
- (void)updateDots;
- (void)inputViewDidChange;
- (void)inputViewWillChange;
- (void)didRotate;
- (void)willRotate;
- (void)scaleDidChange;
- (void)scaleWillChange;
- (void)didScroll;
- (void)willScroll;
- (void)doneMagnifying;
- (void)prepareForMagnification;
- (void)updateBaseIsStartWithDocumentPoint:(struct CGPoint)arg1;
- (void)updateSelectionWithDocumentPoint:(struct CGPoint)arg1;
@property(retain, nonatomic) NSArray *rects; // @synthesize rects=m_rects;
- (void)updateEdges;
@property(readonly, nonatomic) UIResponder<UITextInput> *container;
@property(readonly, nonatomic) UITextSelectionView *selectionView;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setMagnifierOrientation;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)removeFromSuperview;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 selectionView:(id)arg2;

@end

@interface UITextRenderingAttributes : NSObject <NSCopying>
{
    UIFont *_font;
    double _minimumFontSize;
    double _actualFontSize;
    double _lineSpacing;
    long long _lineBreakMode;
    long long _baselineAdjustment;
    double _trackingAdjustment;
    double _minimumTrackingAdjustment;
    double _actualTrackingAdjustment;
    long long _alignment;
    _Bool _includeEmoji;
    struct CGRect _truncationRect;
    _Bool _drawUnderline;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UITextReplacement : NSObject
{
    UITextRange *_range;
    NSString *_originalText;
    NSString *_replacementText;
    NSString *_menuTitle;
    unsigned int _usageTrackingMask;
}

+ (id)replacementWithRange:(id)arg1 original:(id)arg2 replacement:(id)arg3 menuTitle:(id)arg4;
@property(nonatomic) unsigned int usageTrackingMask; // @synthesize usageTrackingMask=_usageTrackingMask;
@property(readonly, nonatomic) NSString *menuTitle; // @synthesize menuTitle=_menuTitle;
@property(readonly, nonatomic) NSString *replacementText; // @synthesize replacementText=_replacementText;
@property(readonly, nonatomic) NSString *originalText; // @synthesize originalText=_originalText;
@property(readonly, nonatomic) UITextRange *range; // @synthesize range=_range;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITextReplacementGenerator : NSObject
{
    UITextRange *_replacementRange;
    NSString *_stringToReplace;
}

@property(copy, nonatomic) NSString *stringToReplace; // @synthesize stringToReplace=_stringToReplace;
@property(retain, nonatomic) UITextRange *replacementRange; // @synthesize replacementRange=_replacementRange;
- (id)replacements;
- (void)addPlaceholderForEmptyReplacements:(id)arg1;
- (id)replacementWithText:(id)arg1;
- (_Bool)shouldAllowString:(id)arg1 intoReplacements:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITextReplacementGeneratorForChineseTransliteration : UITextReplacementGenerator
{
}

- (id)replacements;

@end

__attribute__((visibility("hidden")))
@interface UITextReplacementGeneratorForCorrections : UITextReplacementGenerator
{
    _Bool _forceHistoryReplacement;
    _Bool _forceAutocorrectionGuesses;
    _Bool _forceSpellingGuesses;
    UITextChecker *_textChecker;
    TIKeyboardCandidate *_autocorrectionRecord;
    unsigned long long _maxEditDistance;
    unsigned long long _maxCountAfterAutocorrectionGuesses;
    unsigned long long _maxCountAfterSpellingGuesses;
}

@property(nonatomic) _Bool forceSpellingGuesses; // @synthesize forceSpellingGuesses=_forceSpellingGuesses;
@property(nonatomic) unsigned long long maxCountAfterSpellingGuesses; // @synthesize maxCountAfterSpellingGuesses=_maxCountAfterSpellingGuesses;
@property(nonatomic) _Bool forceAutocorrectionGuesses; // @synthesize forceAutocorrectionGuesses=_forceAutocorrectionGuesses;
@property(nonatomic) unsigned long long maxCountAfterAutocorrectionGuesses; // @synthesize maxCountAfterAutocorrectionGuesses=_maxCountAfterAutocorrectionGuesses;
@property(nonatomic) unsigned long long maxEditDistance; // @synthesize maxEditDistance=_maxEditDistance;
@property(nonatomic) _Bool forceHistoryReplacement; // @synthesize forceHistoryReplacement=_forceHistoryReplacement;
@property(retain, nonatomic) TIKeyboardCandidate *autocorrectionRecord; // @synthesize autocorrectionRecord=_autocorrectionRecord;
@property(retain, nonatomic) UITextChecker *textChecker; // @synthesize textChecker=_textChecker;
- (id)replacements;
- (void)addSpellingGuessesForString:(id)arg1 ToReplacements:(id)arg2;
- (void)addAutocorrectionGuessesToReplacements:(id)arg1;
- (void)addPreviouslySuggestedAutocorrectionToReplacements:(id)arg1;
- (id)addReplacementRevertingAutocorrectionToReplacements:(id)arg1;
- (_Bool)isStringMisspelled:(id)arg1;
- (id)init;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITextReplacementGeneratorForDictation : UITextReplacementGenerator
{
    NSTextAlternatives *_alternatives;
}

@property(readonly, nonatomic) NSTextAlternatives *alternatives; // @synthesize alternatives=_alternatives;
- (id)replacements;
- (id)initWithAlternatives:(id)arg1 stringToReplace:(id)arg2 replacementRange:(id)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITextSelection : NSObject
{
    UIResponder<UITextInputPrivate> *_document;
    long long _granularity;
    UITextRange *_selectedRange;
    UITextRange *_base;
    UITextRange *_initialExtent;
    _Bool _isCommitting;
}

@property(readonly, nonatomic) _Bool isCommitting; // @synthesize isCommitting=_isCommitting;
@property(readonly, nonatomic) UIResponder<UITextInputPrivate> *document; // @synthesize document=_document;
@property(retain, nonatomic) UITextRange *selectedRange; // @synthesize selectedRange=_selectedRange;
@property(retain, nonatomic) UITextRange *initialExtent; // @synthesize initialExtent=_initialExtent;
@property(nonatomic) long long granularity; // @synthesize granularity=_granularity;
@property(retain, nonatomic) UITextRange *base; // @synthesize base=_base;
- (void)smartExtendRangedSelection:(int)arg1 downstream:(_Bool)arg2;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint)arg1;
- (void)setSelectionWithFirstPoint:(struct CGPoint)arg1 secondPoint:(struct CGPoint)arg2;
- (_Bool)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(_Bool)arg2;
- (_Bool)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(_Bool)arg2 allowFlipping:(_Bool)arg3;
- (struct CGPoint)clipPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelection;
- (_Bool)hasEditableSelection;
- (_Bool)pointAtEndOfLine:(struct CGPoint)arg1;
- (_Bool)pointAtStartOfLine:(struct CGPoint)arg1;
- (void)moveCaretToBoundaryOfWhitespaceOrLine;
- (void)alterSelection:(struct CGPoint)arg1 granularity:(long long)arg2;
- (void)aggressivelyExpandSelectionToWordContainingCaretSelection;
- (void)collapseSelection;
- (void)clearSelection;
- (void)selectAll;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (unsigned long long)offsetInMarkedText;
- (struct CGRect)closestCaretRectForPoint:(struct CGPoint)arg1 inSelection:(_Bool)arg2;
- (id)selectedText;
- (id)wordContainingCaretSelection;
- (struct CGRect)caretRectAtBeginOfDocument;
- (struct CGRect)caretRectAtEndOfDocument;
- (struct CGRect)caretRect;
- (id)selectionRects;
@property(readonly, nonatomic, getter=_domRange) DOMRange *domRange;
- (void)commit;
- (void)selectionChanged;
- (void)dealloc;
- (void)invalidate;
- (id)initWithDocument:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextSelectionRectImpl : UITextSelectionRect
{
    WebSelectionRect *webRect;
}

+ (id)rectsWithWebRects:(id)arg1;
+ (id)rectWithWebRect:(id)arg1;
@property(retain, nonatomic) WebSelectionRect *webRect; // @synthesize webRect;
- (_Bool)isVertical;
- (_Bool)containsEnd;
- (_Bool)containsStart;
- (id)range;
- (long long)writingDirection;
- (struct CGRect)rect;
- (void)dealloc;
- (id)initWithWebRect:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UITextSelectionView : UIView
{
    UITextInteractionAssistant *m_interactionAssistant;
    UITextSelection *m_selection;
    NSTimer *m_caretTimer;
    UIView *m_caretView;
    UITextRangeView *m_rangeView;
    _Bool m_caretBlinks;
    _Bool m_caretShowingNow;
    _Bool m_visible;
    _Bool m_activated;
    _Bool m_wasShowingCommands;
    _Bool m_delayShowingCommands;
    _Bool m_dictationReplacementsMode;
    int m_showingCommandsCounter;
    NSArray *m_replacements;
    _Bool m_deferSelectionCommands;
    struct __CFRunLoopObserver *m_observer;
}

@property(retain, nonatomic) NSArray *replacements; // @synthesize replacements=m_replacements;
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant; // @synthesize interactionAssistant=m_interactionAssistant;
- (struct CGRect)clippedTargetRect:(struct CGRect)arg1;
- (id)scrollView;
- (void)updateSelectionWithDocumentPoint:(struct CGPoint)arg1;
- (void)updateBaseIsStartWithDocumentPoint:(struct CGPoint)arg1;
- (void)didRotate:(id)arg1;
- (void)willRotate:(id)arg1;
- (void)scaleDidChange:(id)arg1;
- (void)scaleWillChange:(id)arg1;
- (void)doneMagnifying;
- (void)prepareForMagnification;
- (void)layoutChangedByScrolling:(_Bool)arg1;
- (struct CGRect)selectionBoundingBox;
@property(readonly, nonatomic) UITextSelection *selection;
@property(readonly, nonatomic) UITextRangeView *rangeView;
- (void)updateDocumentHasContent:(_Bool)arg1;
- (id)dynamicCaretList;
- (id)dynamicCaret;
@property(readonly, nonatomic) UIView *caretView; // @synthesize caretView=m_caretView;
- (void)startCaretBlinkIfNeeded;
- (void)touchCaretBlinkTimer;
- (void)clearCaretBlinkTimer;
- (void)caretBlinkTimerFired:(id)arg1;
- (void)showCaret:(int)arg1;
- (void)hideCaret:(int)arg1;
- (void)clearCaret;
- (void)configureForReplacementMode;
- (void)configureForHighlightMode;
- (void)configureForSelectionMode;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) _Bool selectionCommandsShowing;
- (void)hideSelectionCommands;
- (void)hideSelectionCommandsAfterDelay:(double)arg1;
- (void)showReplacementsWithGenerator:(id)arg1 forDictation:(_Bool)arg2 afterDelay:(double)arg3;
- (void)calculateAndShowReplacements:(id)arg1;
- (void)showSelectionCommands;
- (void)showSelectionCommandsAfterDelay:(double)arg1;
- (void)showCalloutBarAfterDelay:(double)arg1;
- (void)cancelDelayedCommandRequests;
- (void)updateSelectionCommands;
- (void)showCommandsWithReplacements:(id)arg1;
- (_Bool)updateCalloutBarRects:(id)arg1 effectsWindow:(id)arg2;
@property(nonatomic) _Bool caretBlinks; // @synthesize caretBlinks=m_caretBlinks;
@property(nonatomic) _Bool visible; // @synthesize visible=m_visible;
- (void)appearOrFadeIfNecessary;
- (_Bool)shouldBeVisible;
- (void)updateSelectionDots;
- (void)updateSelectionRectsIfNeeded;
- (void)deferredUpdateSelectionCommands;
- (void)deferredUpdateSelectionRects;
- (void)updateSelectionRects;
- (void)selectionChanged;
- (void)installIfNecessary;
- (void)clearRange;
- (void)removeFromSuperview;
- (void)textSelectionViewActivated:(id)arg1;
- (void)inputViewDidAnimate;
- (void)inputViewWillAnimate;
- (void)inputViewDidMove;
- (void)inputViewWillMove:(id)arg1;
- (void)inputViewDidChange;
- (void)inputViewWillChange;
- (_Bool)affectedByScrollerNotification:(id)arg1;
- (void)selectionDidScroll:(id)arg1;
- (void)selectionWillScroll:(id)arg1;
- (void)viewAnimate:(id)arg1;
- (void)inputModeDidChange:(id)arg1;
- (void)windowDidResignOrBecomeKey;
- (void)deactivate;
- (void)activate;
- (void)detach;
- (void)dealloc;
- (void)invalidate;
- (id)initWithInteractionAssistant:(id)arg1;

@end

@interface UITextView : UIScrollView <UITextLinkInteraction, UITextInputControllerDelegate, UITextAutoscrolling, UIKeyboardInput, UITextInputTraits_Private, _UIMultilineTextContentSizing, _UILayoutBaselineUpdating, UITextInput>
{
    id _private;
    NSTextStorage *_textStorage;
    NSTextContainer *_textContainer;
    NSLayoutManager *_layoutManager;
    _UITextContainerView *_containerView;
    id _inputDelegate;
    id <UITextInputTokenizer> _tokenizer;
    UITextInputController *_inputController;
    UITextInteractionAssistant *_interactionAssistant;
    UITextInputTraits *_textInputTraits;
    UIAutoscroll *_autoscroll;
    struct {
        unsigned int needsScrollToSelectionAfterLayout:1;
        unsigned int isInteractingWithLink:1;
        unsigned int linkInteractionIsLongPress:1;
        unsigned int editable:1;
        unsigned int reentrancyGuard:1;
        unsigned int usesExplicitPreferredMaxLayoutWidth:1;
        unsigned int determiningPreferredMaxLayoutWidth:1;
        unsigned int inSecondConstraintsPass:1;
        unsigned int interactiveSelectionDisabled:1;
        unsigned int selectable:1;
        unsigned int shouldPresentSheetsInAWindowLayeredAboveTheKeyboard:1;
    } _tvFlags;
    id _linkInteractionItem;
    _UITextViewRestorableScrollPosition *_scrollTarget;
    struct CGPoint _scrollTargetOffset;
    unsigned long long _dataDetectorTypes;
    double _preferredMaxLayoutWidth;
    UIView *_inputAccessoryView;
    _UISiriStreamingManager *_streamingManager;
    _UICharacterStreamingManager *_characterStreamingManager;
    long long _siriAnimationStyle;
    NSDictionary *_siriParameters;
    double _firstBaselineOffsetFromTop;
    double _lastBaselineOffsetFromBottom;
    _Bool _clearsOnInsertion;
    UIView *_inputView;
}

+ (id)_bestInterpretationForDictationResult:(id)arg1;
+ (_Bool)_isCompatibilityTextView;
+ (id)_sharedHighlightView;
@property(readonly, retain, nonatomic) NSTextStorage *textStorage; // @synthesize textStorage=_textStorage;
@property(readonly, nonatomic) NSLayoutManager *layoutManager; // @synthesize layoutManager=_layoutManager;
@property(readonly, nonatomic) NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(retain) UIView *inputView; // @synthesize inputView=_inputView;
- (void)_resetDataDetectorsResults;
- (void)_startDataDetectors;
- (void)_cancelDataDetectors;
- (_Bool)_shouldStartDataDetectors;
- (unsigned long long)_effectiveDataDetectorTypes;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)takeTraitsFrom:(id)arg1;
- (id)_textInputTraits;
@property(nonatomic) _Bool forceEnableDictation;
- (id)metadataDictionariesForDictationResults;
- (void)_registerUndoOperationForReplacementWithActionName:(id)arg1 replacementText:(id)arg2;
- (void)_setDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (_Bool)textInput:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (id)automaticallySelectedOverlay;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (_Bool)keyboardInputShouldDelete:(id)arg1;
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)replace:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (_Bool)_isDisplayingShortcutViewController;
- (void)_addShortcut:(id)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (void)_selectionMayChange:(id)arg1;
- (_Bool)_isDisplayingReferenceLibraryViewController;
- (void)_define:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(copy, nonatomic) NSDictionary *linkTextAttributes;
- (double)lineHeight;
- (void)setLineHeight:(double)arg1;
- (struct CGRect)visibleTextRect;
- (struct CGRect)visibleRect;
- (struct CGRect)visibleRectIgnoringKeyboard;
@property(nonatomic) struct UIEdgeInsets textContainerInset;
- (void)setMarginTop:(unsigned long long)arg1;
- (unsigned long long)marginTop;
- (void)setContentToHTMLString:(id)arg1;
- (id)webView;
@property(nonatomic) unsigned long long dataDetectorTypes;
- (void)disableClearsOnInsertion;
@property(nonatomic) _Bool clearsOnInsertion; // @synthesize clearsOnInsertion=_clearsOnInsertion;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;
@property(nonatomic) struct _NSRange selectedRange;
@property(nonatomic) long long textAlignment;
@property(retain, nonatomic) UIColor *textColor;
@property(copy, nonatomic) NSString *text;
@property(retain, nonatomic) UIFont *font;
- (id)initWithFrame:(struct CGRect)arg1 font:(id)arg2;
- (void)textInputDidChangeSelection:(id)arg1;
- (void)textInputDidChange:(id)arg1;
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;
@property(copy, nonatomic) NSDictionary *typingAttributes;
- (id)rangeWithTextAlternatives:(id *)arg1 atPosition:(id)arg2;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
@property(nonatomic, getter=isSelectable) _Bool selectable;
@property(nonatomic, getter=isEditable) _Bool editable;
- (_Bool)_mightHaveSelection;
- (_Bool)isEditing;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
- (id)selectionRectsForRange:(id)arg1;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (struct CGRect)caretRectForPosition:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
- (id)undoManager;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)_textInputViewForAddingGestureRecognizers;
@property(readonly, nonatomic) UIView *textInputView;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
@property(readonly, nonatomic) UITextRange *markedTextRange;
@property(nonatomic) long long selectionAffinity;
@property(copy) UITextRange *selectedTextRange;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)textInRange:(id)arg1;
- (id)selectedText;
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (void)_scrollRangeToVisible:(struct _NSRange)arg1 animated:(_Bool)arg2;
- (id)_restorableScrollPosition;
- (void)_restoreScrollPosition:(id)arg1 animated:(_Bool)arg2;
- (struct CGPoint)_closeQuoteAnchor;
- (struct CGPoint)_openQuoteAnchor;
- (struct CGPoint)_lastGlyphBaselineRightPointWithLayoutManager:(id)arg1;
- (struct CGPoint)_firstGlyphBaselineLeftPointWithLayoutManager:(id)arg1;
- (void)_streamingManagerDidCommitFinalResults;
- (void)_didFinishSpeechRecognition;
- (void)_didRecognizeSpeechStrings:(id)arg1;
- (void)_didRecognizeSpeechTokens:(id)arg1;
- (id)extractWordArrayFromTokensArray:(id)arg1;
- (void)_enableSiriAnimationDictationStyleWithCharacterInsertionRate:(double)arg1 minimumDurationBetweenHypotheses:(double)arg2;
- (void)_enableSiriAnimationDictationStyle;
- (void)_setScrollTarget:(id)arg1;
- (struct _NSRange)_visibleRangeWithLayout:(_Bool)arg1;
- (struct CGPoint)_contentOffsetForScrollToVisible:(struct _NSRange)arg1;
- (struct CGRect)_rectForScrollToVisible:(struct _NSRange)arg1;
- (id)interactionAssistant;
- (id)selectionView;
- (void)updateSelection;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (void)_deleteBackwardAndNotify:(_Bool)arg1;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (void)setShouldPresentSheetsInAWindowLayeredAboveTheKeyboard:(_Bool)arg1;
- (_Bool)shouldPresentSheetsInAWindowLayeredAboveTheKeyboard;
- (_Bool)_isInteractiveTextSelectionDisabled;
- (void)_setInteractiveTextSelectionDisabled:(_Bool)arg1;
- (void)setScrollEnabled:(_Bool)arg1;
- (void)setUsesTiledViews:(_Bool)arg1;
- (_Bool)usesTiledViews;
@property(nonatomic) _Bool allowsEditingTextAttributes;
- (_Bool)resignFirstResponder;
- (_Bool)canResignFirstResponder;
- (void)tintColorDidChange;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)_shouldScrollEnclosingScrollView;
- (void)_scrollSelectionToVisibleInContainingScrollView;
- (void)_updateBaselineInformationDependentOnBounds;
- (void)updateConstraints;
- (void)_setInSecondConstraintsPass:(_Bool)arg1;
- (void)_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:(struct CGRect)arg1;
- (void)_prepareForFirstIntrinsicContentSizeCalculation;
- (void)invalidateIntrinsicContentSize;
- (_Bool)_wantsBaselineUpdatingFollowingConstraintsPass;
- (_Bool)_needsDoubleUpdateConstraintsPass;
- (double)_currentPreferredMaxLayoutWidth;
- (id)_layoutDebuggingTitle;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)_performLayoutCalculation:(CDUnknownBlockType)arg1 inSize:(struct CGSize)arg2;
- (void)_baselineOffsetDidChange;
- (double)_baselineOffsetFromBottom;
- (double)_firstBaselineOffsetFromTop;
- (double)_preferredMaxLayoutWidth;
- (void)_setPreferredMaxLayoutWidth:(double)arg1;
- (void)_resetUsesExplicitPreferredMaxLayoutWidth;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_updateContentSize;
- (void)layoutSubviews;
- (void)_resyncContainerFrameForNonAutolayout;
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;
- (void)_keyboardDidShow:(id)arg1;
- (void)_observedTextViewDidChange:(id)arg1;
- (unsigned long long)_totalNumberOfTextViewsInLayoutManager;
- (void)_textStorageDidProcessEditing:(id)arg1;
- (id)_containerView;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)addTextAlternativesDisplayStyleToRange:(struct _NSRange)arg1;
@property(retain) UIView *inputAccessoryView;
- (void)dealloc;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initReadonlyAndUnselectableWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonInitWithTextContainer:(id)arg1 isDecoding:(_Bool)arg2 isEditable:(_Bool)arg3 isSelectable:(_Bool)arg4;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (_Bool)isAccessibilityElementByDefault;
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;
- (Class)_printFormatterClass;
@property(nonatomic, setter=_setDrawsDebugBaselines:) _Bool _drawsDebugBaselines;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)_finishHandlingInteraction:(id)arg1;
- (void)validateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (_Bool)willInteractWithLinkAtPoint:(struct CGPoint)arg1;
- (void)startLongInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)cancelInteractionWithLink;
- (void)_resetLinkInteraction;
- (void)updateInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)startInteractionWithLinkAtPoint:(struct CGPoint)arg1;
- (void)_highlightLinkAtPoint:(struct CGPoint)arg1;
- (struct CGRect)_presentationRectForLinkAtRange:(struct _NSRange)arg1;
- (_Bool)isInteractingWithLink;
- (void)tapLinkAtPoint:(struct CGPoint)arg1;
- (_Bool)mightHaveLinks;
- (id)_interactableItemAtPoint:(struct CGPoint)arg1;

// Remaining properties
@property(nonatomic) _Bool acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(nonatomic) id <UITextViewDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(retain, nonatomic) UIColor *selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor;
@property(nonatomic) int shortcutConversionType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(nonatomic) int textLoupeVisibility;
@property(nonatomic) int textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;

@end

@interface UIViewPrintFormatter : UIPrintFormatter
{
    UIView *_view;
}

@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void)drawInRect:(struct CGRect)arg1 forPageAtIndex:(long long)arg2;
- (struct CGRect)rectForPageAtIndex:(long long)arg1;
- (long long)_recalcPageCount;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initWithView:(id)arg1;

@end

@interface UITextViewPrintFormatter : UIViewPrintFormatter
{
    struct {
        unsigned int initializedUsedRects:1;
    } _textViewPrintFormatterFlags;
    NSArray *_pageData;
}

- (long long)textAlignment;
- (void)setTextAlignment:(long long)arg1;
- (id)color;
- (void)setColor:(id)arg1;
- (id)font;
- (void)setFont:(id)arg1;
- (id)attributedText;
- (void)setAttributedText:(id)arg1;
- (id)text;
- (void)setText:(id)arg1;
- (id)_textView;
- (void)drawInRect:(struct CGRect)arg1 forPageAtIndex:(long long)arg2;
- (struct CGRect)rectForPageAtIndex:(long long)arg1;
- (long long)_recalcPageCount;
- (id)_pageData;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UITexturedButton : UIButton
{
}

- (id)backgroundImageForState:(unsigned long long)arg1;
- (void)setBackgroundImage:(id)arg1 forStates:(unsigned long long)arg2;
- (id)titleShadowColorForState:(unsigned long long)arg1;
- (void)setTitleShadowColor:(id)arg1 forStates:(unsigned long long)arg2;
- (id)titleColorForState:(unsigned long long)arg1;
- (void)setTitleColor:(id)arg1 forStates:(unsigned long long)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (long long)buttonType;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIThreadSafeNode : NSObject
{
    DOMNode *_node;
}

+ (id)threadSafeNodeWithNode:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (void)dealloc;
- (id)description;
- (id)initWithNode:(id)arg1;
- (id)_realNode;

@end

__attribute__((visibility("hidden")))
@interface UIThreePartImageView : UIView
{
    CDStruct_24b02699 _slices;
    UIImage *_image;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setSlices:(CDStruct_24b02699)arg1;
- (void)setImage:(id)arg1;
- (void)dealloc;

@end

@interface UIToolbar : UIView <_UIShadowedView, _UIBackdropViewGraphicsQualityChangeDelegate, _UIBarPositioningInternal, UIBarPositioning>
{
    id _delegate;
    NSArray *_items;
    UIColor *_barTintColor;
    struct {
        unsigned int barStyle:3;
        unsigned int mode:2;
        unsigned int wasEnabled:1;
        unsigned int downButtonSentAction:1;
        unsigned int barTranslucence:3;
        unsigned int isLocked:1;
        unsigned int backgroundLayoutNeedsUpdate:1;
        unsigned int hasCustomBackgroundView:1;
    } _toolbarFlags;
    struct __CFDictionary *_groups;
    NSArray *_buttonItems;
    long long _currentButtonGroup;
    long long _pressedTag;
    double _extraEdgeInsets;
    id _appearanceStorage;
    _UIBackdropView *_adaptiveBackdrop;
    UIImageView *_backgroundView;
    UIView *_shadowView;
    _Bool _isAdaptiveToolbarDisabled;
    _Bool _wantsLetterpressContent;
    _Bool _centerTextButtons;
    _Bool _collapsed;
    long long _barPosition;
    NSString *_backdropViewLayerGroupName;
}

+ (double)defaultHeightForBarSize:(int)arg1;
+ (double)defaultSelectionModeHeight;
+ (double)defaultHeight;
+ (id)defaultButtonFont;
+ (Class)defaultTextButtonClass;
+ (Class)defaultButtonClass;
+ (float)_buttonGap;
@property(nonatomic, getter=isCollapsed) _Bool collapsed; // @synthesize collapsed=_collapsed;
@property(retain, nonatomic, getter=_backdropViewLayerGroupName, setter=_setBackdropViewLayerGroupName:) NSString *backdropViewLayerGroupName; // @synthesize backdropViewLayerGroupName=_backdropViewLayerGroupName;
@property(nonatomic) _Bool centerTextButtons; // @synthesize centerTextButtons=_centerTextButtons;
@property(readonly, nonatomic) long long barPosition; // @synthesize barPosition=_barPosition;
@property(nonatomic, setter=_setWantsLetterpressContent:) _Bool _wantsLetterpressContent; // @synthesize _wantsLetterpressContent;
@property(nonatomic, getter=_isAdaptiveToolbarDisabled, setter=_setAdaptiveToolbarDisabled:) _Bool _adaptiveToolbarDisabled; // @synthesize _adaptiveToolbarDisabled=_isAdaptiveToolbarDisabled;
@property(retain, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;
@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor=_barTintColor;
- (void)_setHidesShadow:(_Bool)arg1;
- (_Bool)_hidesShadow;
- (id)shadowImageForToolbarPosition:(long long)arg1;
- (void)setShadowImage:(id)arg1 forToolbarPosition:(long long)arg2;
- (id)backgroundImageForToolbarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forToolbarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (void)_customViewChangedForButtonItem:(id)arg1;
- (unsigned long long)_subviewIndexAboveBackgroundView;
- (void)animateToolbarItemIndex:(unsigned long long)arg1 duration:(double)arg2 target:(id)arg3 didFinishSelector:(SEL)arg4;
- (void)layoutSubviews;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (_Bool)isMinibar;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)invalidateIntrinsicContentSize;
- (struct CGSize)intrinsicContentSize;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)removeConstraint:(id)arg1;
- (void)addConstraint:(id)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;
- (struct CGSize)defaultSizeForOrientation:(long long)arg1;
- (void)setItems:(id)arg1 animated:(_Bool)arg2;
- (void)_sendAction:(id)arg1 withEvent:(id)arg2;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
- (void)_effectiveBarTintColorDidChangeWithPreviousColor:(id)arg1;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (void)_setBarTintColor:(id)arg1 force:(_Bool)arg2;
- (id)_effectiveBarTintColor;
- (void)_updateBackgroundColor;
@property(copy, nonatomic) NSArray *items;
@property(nonatomic) id <UIToolbarDelegate> delegate;
- (int)mode;
- (void)setMode:(int)arg1;
@property(nonatomic) long long barStyle;
- (void)setBarStyle:(long long)arg1 force:(_Bool)arg2;
- (void)_updateOpacity;
- (double)extraEdgeInsets;
- (void)setExtraEdgeInsets:(double)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)_isTopBar_legacy;
- (long long)_barPosition;
- (void)_setBarPosition:(long long)arg1;
- (void)_setButtonBackgroundImage:(id)arg1 mini:(id)arg2 forStates:(unsigned long long)arg3;
- (void)_setBackgroundImage:(id)arg1 mini:(id)arg2;
- (struct CGRect)_frameOfBarButtonItem:(id)arg1;
- (void)_setForceTopBarAppearance:(_Bool)arg1;
- (void)setButtonItems:(id)arg1;
- (id)buttonItems;
- (void)drawRect:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_frameOrCenterChanged;
- (void)_frameOrBoundsChangedWithVisibleSizeChange:(_Bool)arg1 wasMinibar:(_Bool)arg2;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)animateWithDuration:(float)arg1 forButton:(int)arg2;
- (void)setOnStateForButton:(_Bool)arg1 forButton:(int)arg2;
- (_Bool)onStateForButton:(int)arg1;
- (void)setBadgeAnimated:(_Bool)arg1 forButton:(int)arg2;
- (void)setBadgeGlyph:(id)arg1 forButton:(int)arg2;
- (void)setBadgeValue:(id)arg1 forButton:(int)arg2;
- (void)setButtonBarTrackingMode:(int)arg1;
- (void)getVisibleButtonTags:(int *)arg1 count:(unsigned int *)arg2 maxItems:(unsigned int)arg3;
- (int)currentButtonGroup;
- (void)showButtonGroup:(int)arg1 withDuration:(double)arg2;
- (void)registerButtonGroup:(int)arg1 withButtons:(int *)arg2 withCount:(int)arg3;
- (void)showButtons:(int *)arg1 withCount:(int)arg2 withDuration:(double)arg3;
- (void)_buttonBarFinishedAnimating;
- (void)positionButtons:(id)arg1 tags:(int *)arg2 count:(int)arg3 group:(int)arg4;
- (id)createButtonWithDescription:(id)arg1;
- (id)initInView:(id)arg1 withItemList:(id)arg2;
- (id)initInView:(id)arg1 withFrame:(struct CGRect)arg2 withItemList:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)_subclassImplementsDrawRect;
- (_Bool)_isInNavigationBar;
- (id)_customToolbarAppearance;
- (void)_positionToolbarButtons:(id)arg1 ignoringItem:(id)arg2 resetFontScaleAdjustment:(_Bool)arg3;
- (id)_positionToolbarButtons:(id)arg1 ignoringItem:(id)arg2 resetFontScaleAdjustment:(_Bool)arg3 actuallyRepositionButtons:(_Bool)arg4;
- (id)_repositionedItemsFromItems:(id)arg1 withBarButtonFrames:(id *)arg2 withHitRects:(id *)arg3 buttonIndexes:(id *)arg4 textButtonIndexes:(id *)arg5;
- (void)_updateBackgroundImage;
- (void)_layoutBackgroundViewConsideringStatusBar;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (void)_cleanupAdaptiveBackdrop;
- (id)_currentCustomBackground;
- (id)_currentCustomBackgroundRespectOversize_legacy:(_Bool *)arg1;
@property(nonatomic, getter=_isLocked, setter=_setLocked:) _Bool _locked;
- (_Bool)_supportsAdaptiveBackground;
- (void)_setBackgroundView:(id)arg1;
- (id)_backgroundView;
- (id)_adaptiveBackdrop;
- (double)_edgeMarginForBorderedItem:(_Bool)arg1 isText:(_Bool)arg2;
- (void)_updateItemsForNewFrame:(id)arg1;
- (void)_finishButtonAnimation:(int)arg1 forButton:(int)arg2;
- (id)_currentButtons;
- (void)_showButtons:(int *)arg1 withCount:(int)arg2 group:(int)arg3 withDuration:(double)arg4 adjustPositions:(_Bool)arg5 skipTag:(int)arg6;
- (id)_buttonWithDescription:(id)arg1;
- (void)_adjustButtonPressed:(id)arg1;
- (void)_buttonCancel:(id)arg1;
- (void)_buttonUp:(id)arg1;
- (void)_buttonDownDelayed:(id)arg1;
- (void)_buttonDown:(id)arg1;
- (id)_descriptionForTag:(int)arg1;
- (id)scriptingInfoWithChildren;
- (void)_updateScriptingInfo:(id)arg1 view:(id)arg2;
- (id)_buttonName:(id)arg1 withType:(int)arg2;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (_Bool)_hasCustomAutolayoutNeighborSpacing;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIToolbarButton : UIControl
{
    struct CGRect _hitRect;
    UIView *_info;
    UILabel *_label;
    UIToolbarButtonBadge *_badge;
    _UIPressedIndicatorView *_pressedIndicator;
    long long _barStyle;
    long long _style;
    struct UIEdgeInsets _glowAdjust;
    _Bool _onState;
    _Bool _barHeight;
    _Bool _badgeAnimated;
    _Bool _bezel;
    double _minimumWidth;
    double _maximumWidth;
    float _labelHeight;
    struct UIEdgeInsets _infoInsets;
    UIColor *_toolbarTintColor;
    _Bool _isAnimatedTrashButton;
    id _appearanceStorage;
    _Bool _isInTopBar;
    Class _appearanceGuideClass;
    struct UIEdgeInsets __additionalSelectionInsets;
}

+ (id)_defaultLabelColor;
+ (id)_defaultLabelFont;
@property(nonatomic, setter=_setAdditionalSelectionInsets:) struct UIEdgeInsets _additionalSelectionInsets; // @synthesize _additionalSelectionInsets=__additionalSelectionInsets;
@property(nonatomic, setter=_setAppearanceGuideClass:) Class _appearanceGuideClass; // @synthesize _appearanceGuideClass;
@property(nonatomic, getter=isAnimatedTrashButton) _Bool animatedTrashButton; // @synthesize animatedTrashButton=_isAnimatedTrashButton;
- (void)_applyBarButtonAppearanceStorage:(id)arg1 withTaggedSelectors:(id)arg2;
- (void)_setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackButtonTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackButtonBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (struct UIOffset)_titlePositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (double)_backgroundVerticalPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_UIAppearance_setBackgroundVerticalPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (void)_setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_UIAppearance_setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)_titleTextAttributesForState:(unsigned long long)arg1;
- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_UIAppearance_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
@property(retain, nonatomic, setter=_setTintColor:) UIColor *_tintColor;
- (void)_UIAppearance_setTintColor:(id)arg1;
- (id)_backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (void)_UIAppearance_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (void)_UIAppearance_setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 barMetrics:(long long)arg4;
- (id)_info;
- (void)_adjustToolbarButtonInfoTintColorHasChanged:(_Bool)arg1;
- (void)_adjustToolbarButtonInfo;
- (void)_updateInfoTextColorsForState:(unsigned long long)arg1;
- (void)_updateShadowOffsetWithAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (struct CGSize)_defaultTitleShadowOffsetForState:(unsigned long long)arg1;
- (id)_defaultTitleShadowColorForState:(unsigned long long)arg1;
- (id)_defaultTitleColorForState:(unsigned long long)arg1;
- (_Bool)_useSilverLook;
- (void)setBarStyle:(long long)arg1;
- (void)setToolbarTintColor:(id)arg1;
- (_Bool)_useBarHeight;
- (void)_setBarHeight:(float)arg1;
- (void)_animateImage:(float)arg1 withButtonBar:(id)arg2;
- (void)_animateImage:(float)arg1 withButtonBar:(id)arg2 target:(id)arg3 didFinishSelector:(SEL)arg4;
- (_Bool)_isOn;
- (void)_setOn:(_Bool)arg1;
- (double)_paddingForLeft:(_Bool)arg1;
- (_Bool)_shouldApplyPadding;
- (_Bool)_canGetPadding;
- (_Bool)_infoIsButton;
- (_Bool)_isBordered;
- (_Bool)_isBorderedOtherThanAccessibility;
- (void)layoutSubviews;
- (void)_adjustPushButtonForMiniBar:(_Bool)arg1 isChangingBarHeight:(_Bool)arg2;
- (id)_customOrAccessibilityBackgroundImageForState:(unsigned long long)arg1 style:(long long)arg2 isMini:(_Bool)arg3;
- (struct UIEdgeInsets)alignmentRectInsets;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)_setTouchHasHighlighted:(_Bool)arg1;
- (void)_setLastHighlightSuccessful:(_Bool)arg1;
- (_Bool)_canHandleStatusBarTouchAtLocation:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)setEnabled:(_Bool)arg1;
- (void)_setInfoFlexibleWidth:(_Bool)arg1;
- (void)_setInfoExtremityWidth:(float)arg1 isMin:(_Bool)arg2;
- (void)_setInfoWidth:(float)arg1;
- (void)_setBadgeAnimated:(_Bool)arg1;
- (void)_badgeAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)_setBadgeValue:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_positionBadge;
- (void)setUseSelectedImage:(_Bool)arg1;
- (void)_setPressed:(_Bool)arg1;
- (void)_showPressedIndicator:(_Bool)arg1;
- (struct CGRect)_buttonBarHitRect;
- (void)_setButtonBarHitRect:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (void)_sizeView:(id)arg1 toPossibleTitles:(id)arg2 pressedTitle:(id)arg3;
- (void)setSizesToFitImage:(_Bool)arg1;
@property(nonatomic, setter=_setCreatedByBarButtonItem:) _Bool _createdByBarButtonItem;
- (_Bool)_wantsAccessibilityButtonShapes;
- (_Bool)_showsAccessibilityBackgroundWhenEnabled;
- (void)_setWantsBlendModeForAccessibilityBackgrounds:(_Bool)arg1;
- (void)_setWantsLetterpressContent;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1 pressedImage:(id)arg2 label:(id)arg3 labelHeight:(float)arg4 withBarStyle:(long long)arg5 withStyle:(long long)arg6 withInsets:(struct UIEdgeInsets)arg7 possibleTitles:(id)arg8 possibleSystemItems:(id)arg9 withToolbarTintColor:(id)arg10 bezel:(_Bool)arg11 imageInsets:(struct UIEdgeInsets)arg12 glowInsets:(struct UIEdgeInsets)arg13 landscape:(_Bool)arg14;
- (id)_newButton;
- (void)_setInTopBar:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIToolbarButtonBadge : UIView
{
    UIView *_value;
    UIView *_background;
    UIView *_alternate;
}

- (void)setBlinks:(_Bool)arg1;
- (void)layoutSubviews;
- (void)setValue:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithValue:(id)arg1 blinks:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIToolbarTextButton : UIToolbarButton
{
    NSString *_title;
    NSString *_pressedTitle;
    NSSet *_possibleTitles;
}

- (void)_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)_UIAppearance_setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)_scriptingInfo;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)layoutSubviews;
- (void)_setPressed:(_Bool)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 pressedTitle:(id)arg2 withFont:(id)arg3 withBarStyle:(long long)arg4 withStyle:(long long)arg5 withTitleWidth:(float)arg6 possibleTitles:(id)arg7 withToolbarTintColor:(id)arg8;

@end

@interface UITouch : NSObject <_UIResponderForwardable>
{
    double _movementMagnitudeSquared;
    double _timestamp;
    long long _phase;
    long long _savedPhase;
    unsigned long long _tapCount;
    long long _edgeType;
    UIWindow *_window;
    UIView *_view;
    UIView *_warpedIntoView;
    NSMutableArray *_gestureRecognizers;
    NSMutableArray *_forwardingRecord;
    struct CGPoint _locationInWindow;
    struct CGPoint _previousLocationInWindow;
    double _previousPressure;
    unsigned char _pathIndex;
    unsigned char _pathIdentity;
    double _pathMajorRadius;
    double _majorRadiusTolerance;
    double _pressure;
    struct {
        unsigned int _firstTouchForView:1;
        unsigned int _isTap:1;
        unsigned int _isDelayed:1;
        unsigned int _sentTouchesEnded:1;
        unsigned int _abandonForwardingRecord:1;
    } _touchFlags;
    _Bool _eaten;
    id <_UITouchPhaseChangeDelegate> __phaseChangeDelegate;
    UIWindow *__windowServerHitTestWindow;
    struct CGSize _displacement;
}

+ (id)_createTouchesWithGSEvent:(struct __GSEvent *)arg1 phase:(long long)arg2 view:(id)arg3;
@property(retain, nonatomic, setter=_setWindowServerHitTestWindow:) UIWindow *_windowServerHitTestWindow; // @synthesize _windowServerHitTestWindow=__windowServerHitTestWindow;
@property(retain, nonatomic, setter=_setPhaseChangeDelegate:) id <_UITouchPhaseChangeDelegate> _phaseChangeDelegate; // @synthesize _phaseChangeDelegate=__phaseChangeDelegate;
@property(readonly, nonatomic) double majorRadiusTolerance; // @synthesize majorRadiusTolerance=_majorRadiusTolerance;
@property(readonly, nonatomic) double majorRadius; // @synthesize majorRadius=_pathMajorRadius;
@property(nonatomic, getter=_isEaten, setter=_setEaten:) _Bool _eaten; // @synthesize _eaten;
@property(nonatomic, setter=_setEdgeType:) long long _edgeType; // @synthesize _edgeType;
@property(nonatomic, setter=_setDisplacement:) struct CGSize _displacement; // @synthesize _displacement;
@property(readonly, nonatomic) double _pressure; // @synthesize _pressure;
@property(nonatomic, setter=_setPathIdentity:) unsigned char _pathIdentity; // @synthesize _pathIdentity;
@property(nonatomic, setter=_setPathIndex:) unsigned char _pathIndex; // @synthesize _pathIndex;
- (float)_pathMajorRadius;
@property(nonatomic, setter=_setForwardablePhase:) long long _forwardablePhase;
- (void)_loadStateFromTouch:(id)arg1;
- (struct CGPoint)previousLocationInView:(id)arg1;
- (struct CGPoint)locationInView:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *gestureRecognizers;
@property(readonly, retain, nonatomic) UIView *view;
@property(readonly, retain, nonatomic) UIWindow *window;
@property(nonatomic) _Bool sentTouchesEnded;
- (_Bool)isDelayed;
- (void)setIsDelayed:(_Bool)arg1;
@property(nonatomic) _Bool isTap;
@property(readonly, nonatomic) unsigned long long tapCount;
- (long long)info;
@property(readonly, nonatomic) long long phase;
@property(readonly, nonatomic) double timestamp;
- (void)dealloc;
- (_Bool)_isStationaryRelativeToTouches:(id)arg1;
- (void)_updateMovementMagnitudeForLocation:(struct CGPoint)arg1;
@property(retain, nonatomic) UIView *warpedIntoView;
@property(retain, nonatomic, setter=_setResponder:) UIResponder *_responder;
- (SEL)_responderSelectorForPhase:(long long)arg1;
- (id)_forwardingRecord;
- (void)_abandonForwardingRecord;
- (_Bool)_isAbandoningForwardingRecord;
- (id)_mutableForwardingRecord;
- (_Bool)_wantsForwardingFromResponder:(id)arg1 toNextResponder:(id)arg2 withEvent:(id)arg3;
- (long long)_compareIndex:(id)arg1;
- (struct CGPoint)_previousLocationInSceneReferenceSpace;
- (struct CGPoint)_locationInSceneReferenceSpace;
- (struct CGPoint)_previousLocationInWindow:(id)arg1;
- (struct CGPoint)_locationInWindow:(id)arg1;
- (void)_popPhase;
- (void)_pushPhase:(long long)arg1;
- (void)_clearGestureRecognizers;
- (id)_gestureRecognizers;
- (void)_removeGestureRecognizer:(id)arg1;
- (void)_addGestureRecognizer:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)_phaseDescription;
- (void)_setPressure:(double)arg1 resetPrevious:(_Bool)arg2;
- (void)_setLocationInWindow:(struct CGPoint)arg1 resetPrevious:(_Bool)arg2;
- (_Bool)_isFirstTouchForView;
- (void)_setIsFirstTouchForView:(_Bool)arg1;
- (double)_distanceFrom:(id)arg1 inView:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UITouchData : NSObject
{
    struct CGPoint startTouchDownLocation;
    unsigned long long lastTapCount;
    double lastTouchUpTimestamp;
    double lastTouchDownTimestamp;
    _Bool touchIsValidTap;
    UITouch *lastTouch;
}

@end

__attribute__((visibility("hidden")))
@interface UITouchTapInfo : NSObject
{
    unsigned long long _tapCount;
    float _multiTapDelay;
    float _rejectAsTapThrehold;
    float _viewTouchPauseThreshold;
    struct CGPoint _startPosition;
    double _startTime;
}

- (_Bool)cancelTouchTracking;
- (void)touchEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchMoved:(id)arg1 withEvent:(id)arg2;
- (_Bool)_touchLocationConsideredMovement:(id)arg1;
- (void)touchBegan:(id)arg1 withEvent:(id)arg2;
- (void)clearTapState;
- (void)releaseAndClearWeakRefs;

@end

__attribute__((visibility("hidden")))
@interface UITouchesEvent : UIInternalEvent
{
    NSMutableSet *_touches;
    struct __CFDictionary *_keyedTouches;
    struct __CFDictionary *_keyedTouchesByWindow;
    struct __CFDictionary *_gestureRecognizersByWindow;
    NSMapTable *_latentSystemGestureWindows;
}

- (id)_windowsAwaitingLatentSystemGestureNotificationDeliveredToEventWindow:(id)arg1;
- (void)_windowNoLongerAwaitingSystemGestureNotification:(id)arg1;
- (void)_addWindowAwaitingLatentSystemGestureNotification:(id)arg1 deliveredToEventWindow:(id)arg2;
@property(readonly, nonatomic) unsigned int _windowServerHitTestContextId;
@property(readonly, nonatomic) double _initialTouchTimestamp;
- (void)_dismissSharedCalloutBarIfNeeded;
- (id)description;
- (id)_cloneEvent;
- (void)_moveTouchesFromView:(id)arg1 toView:(id)arg2;
- (id)_firstTouchForView:(id)arg1;
- (id)_viewsForWindow:(id)arg1;
- (void)_invalidateGestureRecognizerForWindowCache;
- (id)_gestureRecognizersForWindow:(id)arg1;
- (id)_windows;
- (void)_touchesForGesture:(id)arg1 withPhase:(long long)arg2 intoSet:(id)arg3;
- (id)_touchesForGesture:(id)arg1 withPhase:(long long)arg2;
- (id)_touchesForView:(id)arg1 withPhase:(long long)arg2;
- (void)_clearTouches;
- (void)_removeTouchesForWindow:(id)arg1;
- (void)_removeTouchesForKey:(id)arg1;
- (id)_touchesForWindow:(id)arg1;
- (id)_touchesForKey:(id)arg1;
- (void)_removeTouch:(id)arg1 fromGestureRecognizer:(id)arg2;
- (void)_removeTouch:(id)arg1;
- (void)_clearViewForTouch:(id)arg1;
- (void)_addTouch:(id)arg1 forDelayedDelivery:(_Bool)arg2;
- (_Bool)_addGestureRecognizersForView:(id)arg1 toTouch:(id)arg2 currentTouchMap:(struct __CFDictionary *)arg3 newTouchMap:(struct __CFDictionary *)arg4;
- (id)touchesForGestureRecognizer:(id)arg1;
- (id)_touchesForGestureRecognizer:(id)arg1;
- (id)touchesForView:(id)arg1;
- (id)touchesForWindow:(id)arg1;
- (id)_allTouches;
- (id)allTouches;
- (void)dealloc;
- (id)_initWithEvent:(struct __GSEvent *)arg1 touches:(id)arg2;
- (id)_init;
- (long long)type;

@end

@interface UITraitCollection : NSObject <NSCopying, NSSecureCoding>
{
    CDStruct_cf4bd6d1 _builtinTraits;
    NSDictionary *_clientDefinedTraits;
}

+ (id)_emptyTraitCollection;
+ (id)_traitCollectionWithValue:(id)arg1 forTraitNamed:(id)arg2;
+ (id)traitCollectionWithVerticalSizeClass:(long long)arg1;
+ (id)traitCollectionWithHorizontalSizeClass:(long long)arg1;
+ (id)traitCollectionWithDisplayScale:(double)arg1;
+ (id)traitCollectionWithInteractionModel:(long long)arg1;
+ (id)traitCollectionWithTouchLevel:(long long)arg1;
+ (id)traitCollectionWithUserInterfaceIdiom:(long long)arg1;
+ (id)traitCollectionWithTraitsFromCollections:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) long long verticalSizeClass;
@property(readonly, nonatomic) long long horizontalSizeClass;
@property(readonly, nonatomic) double displayScale;
- (long long)interactionModel;
- (long long)touchLevel;
@property(readonly, nonatomic) long long userInterfaceIdiom;
- (id)_valueForTraitNamed:(id)arg1;
- (_Bool)_matchesIntersectionWithTraitCollection:(id)arg1;
- (_Bool)containsTraitsInCollection:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)init;
- (id)_initWithBuiltinTraitStorage:(CDStruct_cf4bd6d1 *)arg1 clientDefinedTraits:(id)arg2;
- (id)_namedImageDescription;

@end

@interface UITransformAnimation : UIAnimation
{
    struct CGAffineTransform _startTransform;
    struct CGAffineTransform _endTransform;
}

- (struct CGAffineTransform)transformForFraction:(float)arg1;
- (void)setProgress:(float)arg1;
- (struct CGAffineTransform)_transformWithMultiplier:(float)arg1;
- (void)setEndTransform:(struct CGAffineTransform)arg1;
- (void)setStartTransform:(struct CGAffineTransform)arg1;

@end

@interface UITransitionView : UIView <NSCoding>
{
    UIView *_fromView;
    UIView *_toView;
    NSMutableArray *_frozenSubviews;
    UIResponder *_firstResponderToRemember;
    id _delegate;
    UIWindow *_originalWindow;
    struct {
        unsigned int animationInProgress:1;
        unsigned int ignoresInteractionEvents:1;
        unsigned int shouldNotifyDidCompleteImmediately:1;
        unsigned int useViewControllerAppearanceCallbacks:1;
        unsigned int shouldRestoreFromViewAlpha:1;
        unsigned int shouldRasterize:1;
        unsigned int enableRotationAfterTransition:1;
        unsigned int removeFromView:1;
    } _transitionViewFlags;
    double _curlUpRevealedHeight;
    _Bool _ignoreDirectTouchEvents;
    long long _animationTimingCurve;
}

+ (double)defaultDurationForTransition:(int)arg1;
@property(nonatomic) _Bool ignoreDirectTouchEvents; // @synthesize ignoreDirectTouchEvents=_ignoreDirectTouchEvents;
@property(nonatomic) long long animationTimingCurve; // @synthesize animationTimingCurve=_animationTimingCurve;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_transitionDidStop:(id)arg1 finished:(id)arg2;
- (void)_startTransition:(int)arg1 withDuration:(double)arg2;
- (void)setIgnoresInteractionEvents:(_Bool)arg1;
- (_Bool)ignoresInteractionEvents;
- (_Bool)rasterizesOnTransition;
- (void)setRasterizesOnTransition:(_Bool)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (_Bool)_isTransitioningFromFromView:(id)arg1;
- (_Bool)isTransitioning;
- (id)toView;
- (id)fromView;
- (_Bool)transition:(int)arg1 fromView:(id)arg2 toView:(id)arg3 removeFromView:(_Bool)arg4;
- (_Bool)transition:(int)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)notifyDidCompleteTransition:(id)arg1;
- (_Bool)transition:(int)arg1 toView:(id)arg2;
- (void)_didCompleteTransition:(_Bool)arg1;
@property(nonatomic) _Bool shouldNotifyDidCompleteImmediately;
- (void)_didStartTransition;
- (double)durationForTransition:(int)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (double)_curlUpRevealedHeight;

@end

@interface UITwoSidedAlertController : NSObject
{
    UIAlertView *_front;
    UIAlertView *_back;
    UIAlertView *_currentAlert;
    id _delegate;
}

- (void)alertViewCancel:(id)arg1;
- (void)alertSheet:(id)arg1 buttonClicked:(int)arg2;
- (void)backAlertClickedButtonAtIndex:(long long)arg1;
- (void)frontAlertClickedButtonAtIndex:(long long)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)flip;
- (void)dismiss;
- (void)didPresentAlertView:(id)arg1;
- (void)show;
- (id)createBackAlert;
- (id)createFrontAlert;
- (id)backAlert;
- (id)frontAlert;
- (void)setDelegate:(id)arg1;
- (void)dealloc;

@end

@interface UIUserNotificationSettings : NSObject <NSCopying, NSSecureCoding>
{
    unsigned long long _types;
    NSSet *_categories;
}

+ (_Bool)supportsSecureCoding;
+ (id)settingsForRegisteredSettings:(id)arg1 requestedSettings:(id)arg2;
+ (id)settingsForTypes:(unsigned long long)arg1 categories:(id)arg2;
+ (id)settingsForUserNotificationTypes:(unsigned long long)arg1 userNotificationActionSettings:(id)arg2;
@property(readonly, copy, nonatomic) NSSet *categories; // @synthesize categories=_categories;
@property(readonly, nonatomic) unsigned long long types; // @synthesize types=_types;
- (id)userNotificationActionSettings;
- (unsigned long long)allowedUserNotificationTypes;
- (id)validatedSettings;
- (id)description;
- (_Bool)mayPresentUserNotificationOfType:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTypes:(unsigned long long)arg1 categories:(id)arg2;
- (id)initWithUserNotificationTypes:(unsigned long long)arg1 userNotificationActionSettings:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIVariableDelayLoupeGesture : UILongPressGestureRecognizer
{
    UIResponder<UITextInput> *_textView;
}

@property UIResponder<UITextInput> *textView; // @synthesize textView=_textView;
- (void)startTimer;
- (_Bool)isCloseToCaret;
- (void)invalidate;

@end

@interface UIVibrancyEffect : UIVisualEffect
{
    long long _blurStyle;
}

+ (_Bool)supportsSecureCoding;
+ (id)effectForBlurEffect:(id)arg1;
- (id)_lowQualityEffectConfig;
- (id)_highQualityEffectConfig;
- (id)effectConfigForQuality:(long long)arg1;
- (id)effectConfig;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface UIVideoEditorController : UINavigationController
{
    int _previousStatusBarStyle;
    NSMutableDictionary *_properties;
    struct {
        unsigned int visible:1;
        unsigned int isCleaningUp:1;
        unsigned int didRevertStatusBar:1;
    } _flags;
}

+ (_Bool)canEditVideoAtPath:(id)arg1;
- (id)_valueForProperty:(id)arg1;
- (void)_setValue:(id)arg1 forProperty:(id)arg2;
- (id)_properties;
- (void)_initializeProperties;
- (void)_setProperties:(id)arg1;
@property(nonatomic) long long videoQuality;
@property(nonatomic) double videoMaximumDuration;
- (void)_setVideoURL:(id)arg1;
- (id)_videoURL;
@property(copy, nonatomic) NSString *videoPath;
- (void)editVideoViewController:(id)arg1 didFailWithError:(id)arg2;
- (void)editVideoViewController:(id)arg1 didTrimVideoWithOptions:(id)arg2;
- (void)editVideoViewControllerDidCancel:(id)arg1;
- (void)_autoDismiss;
- (void)_setupControllers;
- (id)_createInitialController;
- (void)_removeAllChildren;
- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;
- (_Bool)_didRevertStatusBar;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillUnload;
- (id)init;

// Remaining properties
@property(nonatomic) id <UINavigationControllerDelegate><UIVideoEditorControllerDelegate> delegate; // @dynamic delegate;

@end

__attribute__((visibility("hidden")))
@interface UIViewAnimation : NSObject
{
    UIView *_view;
    NSIndexPath *_indexPath;
    struct CGRect _endRect;
    double _endAlpha;
    double _startFraction;
    double _endFraction;
    int _curve;
    _Bool _animateFromCurrentPosition;
    _Bool _shouldDeleteAfterAnimation;
    _Bool _editing;
    _Bool _shouldAnimateShadow;
    _Bool _shouldResetGroupOpacityAfterAnimation;
    _Bool _shouldAllowGroupOpacityAfterAnimation;
    _Bool _shouldClipToBoundsAfterAnimation;
}

@property(nonatomic) _Bool shouldClipToBoundsAfterAnimation; // @synthesize shouldClipToBoundsAfterAnimation=_shouldClipToBoundsAfterAnimation;
@property(nonatomic) _Bool shouldAllowGroupOpacityAfterAnimation; // @synthesize shouldAllowGroupOpacityAfterAnimation=_shouldAllowGroupOpacityAfterAnimation;
@property(nonatomic) _Bool shouldResetGroupOpacityAfterAnimation; // @synthesize shouldResetGroupOpacityAfterAnimation=_shouldResetGroupOpacityAfterAnimation;
@property(nonatomic) _Bool shouldAnimateShadow; // @synthesize shouldAnimateShadow=_shouldAnimateShadow;
@property(readonly, nonatomic) _Bool editing; // @synthesize editing=_editing;
@property(readonly, nonatomic) _Bool shouldDeleteAfterAnimation; // @synthesize shouldDeleteAfterAnimation=_shouldDeleteAfterAnimation;
@property(readonly, nonatomic) _Bool animateFromCurrentPosition; // @synthesize animateFromCurrentPosition=_animateFromCurrentPosition;
@property(readonly, nonatomic) int curve; // @synthesize curve=_curve;
@property(readonly, nonatomic) double endFraction; // @synthesize endFraction=_endFraction;
@property(readonly, nonatomic) double startFraction; // @synthesize startFraction=_startFraction;
@property(readonly, nonatomic) double endAlpha; // @synthesize endAlpha=_endAlpha;
@property(readonly, nonatomic) struct CGRect endRect; // @synthesize endRect=_endRect;
@property(readonly, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (id)description;
- (void)dealloc;
- (id)initWithView:(id)arg1 indexPath:(id)arg2 endRect:(struct CGRect)arg3 endAlpha:(double)arg4 startFraction:(double)arg5 endFraction:(double)arg6 curve:(int)arg7 animateFromCurrentPosition:(_Bool)arg8 shouldDeleteAfterAnimation:(_Bool)arg9 editing:(_Bool)arg10;

@end

__attribute__((visibility("hidden")))
@interface UIViewAnimationBlockDelegate : NSObject
{
    _Bool _didBeginBlockAnimation;
    _Bool _allowUserInteraction;
    _Bool _isZeroDuration;
    _Bool _allowsUserInteractionToCutOffEndOfAnimation;
    _Bool _animationDidStopSent;
    CDUnknownBlockType _start;
    CDUnknownBlockType _completion;
}

+ (void)setAnimationBlockDelegateWithDuration:(double)arg1 options:(unsigned long long)arg2 start:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) _Bool _allowsUserInteraction; // @synthesize _allowsUserInteraction=_allowUserInteraction;
- (_Bool)_allowsUserInteractionToCutOffEndOfAnimation;
- (void)_sendDeferredCompletion:(id)arg1;
- (void)_didEndBlockAnimation:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)_willBeginBlockAnimation:(id)arg1 context:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIViewAnimationContext : NSObject
{
    NSArray *_viewAnimations;
    long long _animationCount;
    id _completionHandler;
    UITableViewCell *_swipeToDeleteCell;
}

@property(retain, nonatomic) UITableViewCell *swipeToDeleteCell; // @synthesize swipeToDeleteCell=_swipeToDeleteCell;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) long long animationCount; // @synthesize animationCount=_animationCount;
@property(retain, nonatomic) NSArray *viewAnimations; // @synthesize viewAnimations=_viewAnimations;
- (void)dealloc;
- (id)initWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIViewAnimationState : NSObject
{
    UIViewAnimationState *_nextState;
    NSString *_animationID;
    void *_context;
    id _delegate;
    double _duration;
    double _delay;
    double _frameInterval;
    double _start;
    long long _curve;
    float _repeatCount;
    long long _transition;
    UIView *_transitionView;
    int _filter;
    UIView *_filterView;
    float _filterValue;
    SEL _willStartSelector;
    SEL _didEndSelector;
    int _didEndCount;
    struct CGPoint _position;
    unsigned int _willStartSent:1;
    unsigned int _useCurrentLayerState:1;
    unsigned int _cacheTransition:1;
    unsigned int _autoreverses:1;
    unsigned int _roundsToInteger:1;
    unsigned int _preventsAdditive:1;
    unsigned int _layoutSubviews:1;
    NSMutableArray *_trackedAnimations;
    NSUUID *_uuid;
    id <_UIBasicAnimationFactory> _animationFactory;
    CAMediaTimingFunction *_customCurve;
    _Bool _animationFactoryMakesPerAnimationCustomCurves;
    CDUnknownBlockType _alongsideAnimations;
    NSMutableArray *_addedCompletions;
    _Bool _animationDidStopSent;
    _Bool _allowUserInteractionToCutOffEndOfAnimation;
    _Bool _retainedSelf;
}

+ (void)popAnimationState;
+ (void)pushViewAnimationState:(id)arg1 context:(void *)arg2;
- (id)_defaultAnimationForKey:(id)arg1;
- (void)_trackAnimation:(id)arg1 withAnimationKey:(id)arg2 forKeyPath:(id)arg3 inLayer:(id)arg4;
- (void)_addAnimationStateForTracking:(id)arg1;
- (id)_trackedAnimations;
- (void)_removeAnimationStateFromTrackingMap:(_Bool)arg1 disableTrackingIfNeeded:(_Bool)arg2;
- (void)_removeAnimationStateFromTrackingMap:(_Bool)arg1;
- (void)_acceptEarlyAnimationCutoff:(id)arg1;
- (_Bool)_allowsUserInteractionToCutOffEndOfAnimation;
@property(readonly, nonatomic) _Bool _allowsUserInteraction;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)sendDelegateAnimationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStart:(id)arg1;
- (void)setAnimationAttributes:(id)arg1 correctZeroDuration:(_Bool)arg2 skipDelegateAssignment:(_Bool)arg3 customCurve:(id)arg4;
- (void)setAnimationAttributes:(id)arg1 correctZeroDuration:(_Bool)arg2 skipDelegateAssignment:(_Bool)arg3;
- (void)_runAlongsideAnimations;
- (void)_setAlongsideAnimations:(CDUnknownBlockType)arg1;
- (void)setAnimationAttributes:(id)arg1;
- (void)setupCustomTimingCurve;
- (void)dealloc;
- (void)pop;
- (void)setupWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 factory:(id)arg5 parentState:(id)arg6 start:(CDUnknownBlockType)arg7 completion:(CDUnknownBlockType)arg8;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2 forView:(id)arg3;
- (_Bool)_shouldAnimateAdditivelyForKey:(id)arg1 onLayer:(id)arg2;
- (id)animationForLayer:(id)arg1 forKey:(id)arg2 forView:(id)arg3;
- (_Bool)_shouldStartFromCurrentStateForLayer:(id)arg1 key:(id)arg2;
- (void)configureAnimation:(id)arg1 forLayer:(id)arg2 forKey:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIViewControllerAction : NSObject
{
    UIViewController *_viewController;
    NSString *_name;
    int _transition;
    CDUnknownBlockType _completion;
    double _curlUpRevealedHeight;
}

@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(nonatomic) int transition; // @synthesize transition=_transition;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic, setter=_setCurlUpRevealedHeight:) double _curlUpRevealedHeight; // @synthesize _curlUpRevealedHeight;
@property(readonly, nonatomic) _Bool animated;
- (void)dealloc;
- (id)initWithViewController:(id)arg1 name:(id)arg2 transition:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIViewControllerBuiltinTransitionViewAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
    id <UIViewControllerContextTransitioning> _transitionContext;
    _Bool _removeFromView;
    int _transition;
    id _delegate;
    UIView *_toView;
    UIView *_fromView;
}

@property(nonatomic) int transition; // @synthesize transition=_transition;
@property(nonatomic) _Bool removeFromView; // @synthesize removeFromView=_removeFromView;
@property(nonatomic) UIView *fromView; // @synthesize fromView=_fromView;
@property(nonatomic) UIView *toView; // @synthesize toView=_toView;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (_Bool)transitionViewShouldUseViewControllerCallbacks;
- (void)transitionViewDidComplete:(id)arg1 fromView:(id)arg2 toView:(id)arg3 removeFromView:(_Bool)arg4;
- (struct CGPoint)transitionView:(id)arg1 endOriginForToView:(id)arg2 forTransition:(int)arg3 defaultOrigin:(struct CGPoint)arg4;
- (struct CGPoint)transitionView:(id)arg1 beginOriginForToView:(id)arg2 forTransition:(int)arg3 defaultOrigin:(struct CGPoint)arg4;
- (struct CGPoint)transitionView:(id)arg1 endOriginForFromView:(id)arg2 forTransition:(int)arg3 defaultOrigin:(struct CGPoint)arg4;
- (struct CGPoint)_adjustOrigin:(struct CGPoint)arg1 givenOtherOrigin:(struct CGPoint)arg2 forTransition:(int)arg3;
- (void)transitionView:(id)arg1 startCustomTransitionWithDuration:(double)arg2;
- (void)transitionViewDidStart:(id)arg1;
- (double)durationForTransition:(int)arg1;
- (void)_prepareKeyboardForTransition:(int)arg1 fromView:(id)arg2;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)initWithTransition:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIViewControllerWrapperView : UIView
{
    _Bool _tightWrappingDisabled;
}

+ (id)existingWrapperViewForView:(id)arg1;
+ (id)wrapperViewForView:(id)arg1 wrapperFrame:(struct CGRect)arg2 viewFrame:(struct CGRect)arg3;
+ (id)wrapperViewForView:(id)arg1 frame:(struct CGRect)arg2;
@property(nonatomic) _Bool tightWrappingDisabled; // @synthesize tightWrappingDisabled=_tightWrappingDisabled;
- (void)unwrapView:(id)arg1;
- (void)unwrapView;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIViewHeartbeat : NSObject
{
    UIView *_view;
    SEL _selector;
    CADisplayLink *_heartbeat;
}

+ (void)stopHeartbeatWithView:(id)arg1 selector:(SEL)arg2;
+ (void)startHeartbeatWithView:(id)arg1 selector:(SEL)arg2 inRunLoopMode:(id)arg3;
- (void)_updateDisplayLink:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIViewKeyframeAnimationState : UIViewAnimationState
{
    double _frameDuration;
    double _frameStartTime;
    long long _calculationMode;
    NSMutableSet *_keyframeLayers;
    NSMutableDictionary *_keyframeLayersForCurrentKeyFrameDict;
    _Bool _inFrame;
}

- (void)cleanupTrackedLayers;
- (void)dealloc;
- (void)pop;
- (void)addKeyframeWithRelativeStartTime:(double)arg1 relativeDuration:(double)arg2 animations:(CDUnknownBlockType)arg3;
- (id)animationForLayer:(id)arg1 forKey:(id)arg2 forView:(id)arg3;
- (void)setupWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 factory:(id)arg5 parentState:(id)arg6 start:(CDUnknownBlockType)arg7 completion:(CDUnknownBlockType)arg8;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIViewSpringAnimationState : UIViewAnimationState
{
    double _mass;
    double _stiffness;
    double _damping;
    double _velocity;
}

+ (id)defaultSpringAnimationForKey:(id)arg1 mass:(double)arg2 stiffness:(double)arg3 damping:(double)arg4 velocity:(double)arg5;
- (id)_defaultAnimationForKey:(id)arg1;
- (void)setupWithDuration:(double)arg1 delay:(double)arg2 view:(id)arg3 options:(unsigned long long)arg4 factory:(id)arg5 parentState:(id)arg6 start:(CDUnknownBlockType)arg7 completion:(CDUnknownBlockType)arg8;
- (id)animationForLayer:(id)arg1 forKey:(id)arg2 forView:(id)arg3;
- (void)generateSpringPropertiesForDuration:(double)arg1 damping:(double)arg2 velocity:(double)arg3;

@end

@interface UIVirtualResizeAction : BSAction
{
}

- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (long long)UIActionType;
@property(readonly, nonatomic) long long virtualVerticalSizeClass;
@property(readonly, nonatomic) long long virtualHorizontalSizeClass;
@property(readonly, nonatomic) struct CGSize virtualSize;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;
- (id)initWithVirtualSize:(struct CGSize)arg1 virtualHorizontalSizeClass:(long long)arg2 virtualVerticalSizeClass:(long long)arg3;

@end

@interface UIVirtualResizeResetAction : BSAction
{
}

- (long long)UIActionType;
- (id)init;

@end

@interface UIVisualEffectView : UIView <NSSecureCoding>
{
    UIView *_maskView;
    struct {
        unsigned int hasHadAlphaAnimated:1;
        unsigned int suppressReportingEmptyContentView:1;
    } _effectViewFlags;
    _UIVisualEffectContentView *_contentView;
    NSString *_groupName;
    UIVisualEffect *_effect;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) UIVisualEffect *effect; // @synthesize effect=_effect;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(copy, nonatomic, setter=_setGroupName:) NSString *_groupName; // @synthesize _groupName;
- (id)_whatsWrongWithThisEffect;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)viewDidMoveToSuperview;
- (id)maskView;
- (void)setMaskView:(id)arg1;
- (void)_applyGroupNameToSubviews;
- (void)_configureForEffectConfig:(id)arg1;
- (void)_configureForEffectSettings:(id)arg1;
- (void)_configureForCurrentEffect;
- (void)_setEffect:(id)arg1;
- (void)_createContentViewIfNecessary;
- (void)dealloc;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEffect:(id)arg1;
- (void)_commonInit;

@end

@interface UIWKAutocorrectionContext : NSObject
{
    NSString *_contextBeforeSelection;
    NSString *_selectedText;
    NSString *_contextAfterSelection;
    NSString *_markedText;
    struct _NSRange _rangeInMarkedText;
}

@property(nonatomic) struct _NSRange rangeInMarkedText; // @synthesize rangeInMarkedText=_rangeInMarkedText;
@property(copy, nonatomic) NSString *markedText; // @synthesize markedText=_markedText;
@property(copy, nonatomic) NSString *contextAfterSelection; // @synthesize contextAfterSelection=_contextAfterSelection;
@property(copy, nonatomic) NSString *selectedText; // @synthesize selectedText=_selectedText;
@property(copy, nonatomic) NSString *contextBeforeSelection; // @synthesize contextBeforeSelection=_contextBeforeSelection;
- (void)dealloc;

@end

@interface UIWKAutocorrectionRects : NSObject
{
    struct CGRect _firstRect;
    struct CGRect _lastRect;
}

@property(nonatomic) struct CGRect lastRect; // @synthesize lastRect=_lastRect;
@property(nonatomic) struct CGRect firstRect; // @synthesize firstRect=_firstRect;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectionAssistant : NSObject <UIGestureRecognizerDelegate>
{
    UIView *_view;
    UIWebSelectionView *_selectionView;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UITapAndAHalfRecognizer *_tapAndAHalfGestureRecognizer;
    _Bool _enabled;
}

- (void)didRotate:(id)arg1;
- (void)willRotate:(id)arg1;
@property(nonatomic) _Bool enabled;
- (void)layoutChangedByScrolling:(_Bool)arg1;
- (void)hideCallout;
- (void)resignedFirstResponder;
- (void)didEndScrollingOverflow;
- (void)willStartScrollingOverflow;
- (void)didEndScrollingOrZoomingPage;
- (void)willStartScrollingOrZoomingPage;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2 fromView:(id)arg3;
- (void)scaleChanged;
- (void)tap:(id)arg1;
- (void)makeWebSelection:(id)arg1;
@property(readonly, nonatomic) struct CGRect selectionFrame;
@property(readonly, nonatomic) UIWebSelectionView *selectionView;
@property(readonly, nonatomic) UIWebSelection *selection;
- (void)selectionChanged;
- (void)clearSelection;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)isSelectionGestureRecognizer:(id)arg1;
- (void)setGestureRecognizers;
- (void)dealloc;
- (id)initWithView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIWKSelectionAssistant : UIWebSelectionAssistant
{
    _UITextServiceSession *_definitionSession;
}

- (void)blockSelectionChangedWithTouch:(long long)arg1 withFlags:(long long)arg2 growThreshold:(double)arg3 shrinkThreshold:(double)arg4;
- (void)selectionChangedWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 withFlags:(long long)arg3;
- (void)selectionChangedWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2;
- (void)selectionChangedWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;
- (void)selectionChangedWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;
- (void)showDictionaryFor:(id)arg1 fromRect:(struct CGRect)arg2;
- (_Bool)shouldHandleSingleTapAtPoint:(struct CGPoint)arg1;
- (void)selectionChanged;
- (struct CGRect)selectionFrame;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
@property(readonly, nonatomic) UILongPressGestureRecognizer *selectionLongPressRecognizer;
- (id)initWithView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectionView : UIView
{
    UIView *_center;
    struct CGRect _selectionFrame;
    UIWebSelectionHandle *_top;
    UIWebSelectionHandle *_right;
    UIWebSelectionHandle *_bottom;
    UIWebSelectionHandle *_left;
    UIWebSelectionOutline *_outline;
    UIWebTextRangeView *_textRangeView;
    UIWebDocumentView *_documentView;
    UIWebSelectionNode *_selectionNode;
    UIWebSelectionGraph *_selectionGraph;
    double _growThreshold;
    double _shrinkThreshold;
    struct {
        UIWebSelectionHandle *scrollingHandle;
        double startTime;
        int direction;
        NSTimer *timer;
    } _autoscrollData;
    struct {
        UIWebSelectionHandle *activeHandle;
        struct CGPoint handleCenterStart;
        double handleOffset;
    } _blockSelectionData;
    struct {
        UIWebSelectionHandle *start;
        UIWebSelectionHandle *end;
        struct CGSize startingOffset;
        _Bool anchorAtStart;
        struct {
            _Bool flipPossible;
            _Bool rectsChanged;
            struct CGRect originalSelectionRect;
        } flipData;
    } _rangedSelectionData;
    _Bool _creatingSelection;
    int _nestedLayoutCalls;
    _Bool _calloutBarIsHiddenBeforeRotation;
    _Bool _rotating;
    int _selectionInFixedPosition;
}

@property(retain, nonatomic) UIWebSelectionNode *selectionNode; // @synthesize selectionNode=_selectionNode;
- (void)layoutChangedByScrolling:(_Bool)arg1;
- (void)updateForChangedLayoutWhileManipulatingBlockSelectionHandle;
- (void)updateForChangedLayoutWhileManipulatingTextSelectionHandle;
- (_Bool)activelyManipulatingBlockSelectionHandle;
- (_Bool)activelyManipulatingTextSelectionHandle;
- (id)activeHandle;
@property(readonly, nonatomic) UIWebSelection *selection;
- (void)scaleChanged;
- (void)clearSelection;
- (void)endSelectionCreationWithPoint:(struct CGPoint)arg1;
- (void)updateSelectionCreationWithPoint:(struct CGPoint)arg1;
- (void)startSelectionCreationWithPoint:(struct CGPoint)arg1;
- (id)nodeInPristineGraphAtPoint:(struct CGPoint)arg1;
- (void)selectionChanged;
- (void)updateSelectionRects;
- (void)removeFromSuperview;
- (struct CGRect)desiredBox;
- (void)animateSloppyReleaseOfHandleInText:(id)arg1 withMagnifier:(id)arg2;
- (void)shiftWebRangeSelectionAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)stopAnyAutoscrolling;
- (void)autoscrollTimerFired:(id)arg1;
- (void)_subscribeToScrollNotificationsIfNecessary:(id)arg1;
- (void)_didScroll;
- (void)updateAutoscrollForHandle:(id)arg1;
- (int)autoscrollDirectionsForHandle:(id)arg1;
- (struct CGRect)visibleRect;
- (id)scroller;
- (void)contractForActiveHandle;
- (void)expandForActiveHandle;
- (_Bool)shouldContractForActiveHandle;
- (_Bool)shouldExpandForActiveHandle;
- (void)computeExpandAndContractThresholdsForActiveHandle;
- (_Bool)canFlip;
- (void)considerFlipping;
- (void)switchToTextModeForHandle:(id)arg1;
- (_Bool)isHorizontalWritingMode;
- (void)switchToBlockModeForHandle:(id)arg1;
- (_Bool)shouldSwitchToBlockModeForHandle:(id)arg1;
- (void)touchChanged:(id)arg1 forHandleInText:(id)arg2;
- (void)setOrientationOfMagnifier:(id)arg1 forHandleInText:(id)arg2;
- (void)touchChanged:(id)arg1 forHandle:(id)arg2;
- (id)handles;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)resetSelection;
- (void)setSelectionFrame:(struct CGRect)arg1 animated:(_Bool)arg2;
- (void)updateFrameAndHandlesWithAnimation:(_Bool)arg1;
- (void)updateTextRangeViewSelectionRects;
- (struct CGRect)fetchSelectionBoundingRect;
- (struct CGRect)fetchSelectionBoundingTextSelectionRect;
@property(nonatomic) struct CGRect selectionFrame;
- (void)setHandleCenters;
- (void)hideControls;
- (void)hideControlsBeforeRotation;
- (void)showControls;
- (void)showControlsAfterRotation;
- (void)didEndScrollingOverflow;
- (void)willStartScrollingOverflow;
- (void)didEndScrollingOrZoomingPage;
- (void)willStartScrollingOrZoomingPage;
- (void)onAfterScrollOrZoomShowingSelection:(_Bool)arg1;
- (void)onBeforeScrollOrZoomHidingSelection:(_Bool)arg1;
- (void)calloutBar:(id)arg1 selectedCommand:(id)arg2;
- (void)showCopyCalloutWithAnimation:(_Bool)arg1;
- (_Bool)updateRectForCalloutBar:(id)arg1 inWindow:(id)arg2;
- (void)hideCopyCallout;
- (void)dealloc;
- (id)initWithWebDocumentView:(id)arg1;
- (id)handleWithPosition:(int)arg1;
- (id)tintView;

@end

__attribute__((visibility("hidden")))
@interface UIWKSelectionView : UIWebSelectionView
{
    UIView<UIWKInteractionViewProtocol> *_interactionView;
    UIWebSelectionHandle *_handle;
    _Bool _selectionIsBlock;
    _Bool _thresholdIsValid;
    _Bool _usingGesture;
    struct CGPoint _lastTouchPoint;
}

- (void)onAfterScrollOrZoomShowingSelection:(_Bool)arg1;
- (void)onBeforeScrollOrZoomHidingSelection:(_Bool)arg1;
- (void)clearSelection;
- (void)endSelectionCreationWithPoint:(struct CGPoint)arg1;
- (void)selectionCreationEndedWithPoint:(struct CGPoint)arg1;
- (void)showControls;
- (void)updateSelectionCreationWithPoint:(struct CGPoint)arg1;
- (void)selectionCreationUpdatedWithPoint:(struct CGPoint)arg1;
- (void)startSelectionCreationWithPoint:(struct CGPoint)arg1;
- (void)selectionCreationStartedWithPoint:(struct CGPoint)arg1;
- (void)updateFrameAndHandlesWithAnimation:(_Bool)arg1 showHandles:(_Bool)arg2;
- (struct CGRect)visibleRect;
- (id)scroller;
- (void)switchToTextModeForHandle:(id)arg1;
- (void)updateRangedSelectionData;
- (_Bool)isHorizontalWritingMode;
- (void)switchToBlockModeForHandle:(id)arg1 withPoint:(struct CGPoint)arg2;
- (_Bool)shouldSwitchToBlockModeForHandle:(id)arg1;
- (void)setHandleCenters;
- (void)touchChanged:(id)arg1 forHandle:(id)arg2;
- (void)blockSelectionChangedWithTouch:(long long)arg1 withFlags:(long long)arg2 growThreshold:(double)arg3 shrinkThreshold:(double)arg4;
- (_Bool)shouldContractForActiveHandle;
- (_Bool)shouldExpandForActiveHandle;
- (double)handleOffsetForPoint:(struct CGPoint)arg1 handlePosition:(int)arg2;
- (void)touchChanged:(id)arg1 forHandleInText:(id)arg2;
- (void)selectionChangedWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 withFlags:(long long)arg3;
- (void)selectionChanged;
- (void)updateSelectionRects;
- (void)updateTextRangeViewSelectionRects;
- (id)selectionRects;
- (struct CGRect)fetchSelectionBoundingRect;
- (struct CGRect)unobscuredRect;
- (void)showCopyCalloutWithAnimation:(_Bool)arg1;
- (_Bool)updateRectForCalloutBar:(id)arg1 inWindow:(id)arg2;
- (void)setSelectionMode:(_Bool)arg1;
- (id)tintView;
- (id)initWithView:(id)arg1;

@end

@interface UIWKTextInteractionAssistant : UITextInteractionAssistant
{
    long long _selectionOperation;
    _UITextServiceSession *_definitionSession;
    _UITextServiceSession *_learnSession;
    UITextChecker *_textChecker;
    unsigned long long _options;
    struct CGRect _caretBeforeTap;
    NSString *_wordBeforeTap;
    UITapGestureRecognizer *_singleTapGesture;
    UILongPressGestureRecognizer *_loupeGesture;
}

@property(readonly, retain, nonatomic) UILongPressGestureRecognizer *loupeGesture; // @synthesize loupeGesture=_loupeGesture;
@property(readonly, retain, nonatomic) UITapGestureRecognizer *singleTapGesture; // @synthesize singleTapGesture=_singleTapGesture;
- (void)showTextServiceFor:(id)arg1 fromRect:(struct CGRect)arg2;
- (void)showDictionaryFor:(id)arg1 fromRect:(struct CGRect)arg2;
- (void)hideTextStyleOptions;
- (void)showTextStyleOptions;
- (void)selectAll:(id)arg1;
- (void)selectWord;
- (void)twoFingerRangedSelectGesture:(id)arg1;
- (void)twoFingerSingleTap:(id)arg1;
- (void)oneFingerTripleTap:(id)arg1;
- (void)rangeSelectionMoved:(struct CGPoint)arg1 withTouchPoint:(struct CGPoint)arg2;
- (void)rangeSelectionEnded:(struct CGPoint)arg1;
- (void)rangeSelectionStarted:(struct CGPoint)arg1;
- (void)updateWithMagnifierTerminalPoint:(_Bool)arg1;
- (void)updateSelectionWithPoint:(struct CGPoint)arg1;
- (void)oneFingerDoubleTap:(id)arg1;
- (void)tapAndAHalf:(id)arg1;
- (void)selectWithTapGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;
- (void)loupeGesture:(id)arg1;
- (void)oneFingerTap:(id)arg1;
- (void)selectionChangedWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2 withFlags:(long long)arg3;
- (void)selectionChangedWithTouchAt:(struct CGPoint)arg1 withSelectionTouch:(long long)arg2;
- (void)selectionChangedWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3 withFlags:(long long)arg4;
- (id)_asText;
- (void)selectionChangedWithGestureAt:(struct CGPoint)arg1 withGesture:(long long)arg2 withState:(long long)arg3;
- (void)selectionChanged;
- (_Bool)requiresImmediateUpdate;
- (void)selectTextForReplacement:(id)arg1 withOptions:(unsigned long long)arg2;
- (void)showReplacementsForText:(id)arg1 withOptions:(unsigned long long)arg2;
- (void)scheduleReplacementsForText:(id)arg1 withOptions:(unsigned long long)arg2;
- (_Bool)shouldTryReplacementsForText:(id)arg1 withOptions:(unsigned long long)arg2;
- (void)scheduleReplacementsForText:(id)arg1;
- (void)scheduleReplacementsWithOptions:(unsigned long long)arg1;
- (void)scheduleChineseTransliterationForText:(id)arg1;
- (void)scrollSelectionToVisible;
- (_Bool)containerIsBrowserView;
- (_Bool)containerAllowsSelectionTintOnly;
- (_Bool)containerAllowsSelection;
- (_Bool)containerIsPlainStyleAtom;
- (_Bool)containerIsAtom;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)dealloc;
- (id)initWithView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebBrowserFindOnPageHighlighter : NSObject <UIWebFindOnPageHighlighter>
{
    NSMutableArray *_highlightBubbleViews;
    NSArray *_pdfHighlightViews;
    UIView *_highlightHostView;
    UIWebBrowserView *_browserView;
    UIWebPDFViewHandler *_pdfHandler;
    _Bool _zoomToHighlightSelection;
    id <UIWebFindOnPageHighlighterDelegate> _delegate;
    NSString *_searchText;
    unsigned long long _numberOfMatches;
    unsigned long long _highlightedMatchIndex;
}

+ (_Bool)expandedRectsWouldIntersect:(id)arg1;
@property(readonly, nonatomic) unsigned long long highlightedMatchIndex; // @synthesize highlightedMatchIndex=_highlightedMatchIndex;
@property(readonly, nonatomic) unsigned long long numberOfMatches; // @synthesize numberOfMatches=_numberOfMatches;
@property(nonatomic) id <UIWebFindOnPageHighlighterDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
- (void)search:(id)arg1 hasPartialResults:(id)arg2;
- (void)searchDidFinish:(id)arg1;
- (void)searchLimitHit:(id)arg1;
- (void)searchWasCancelled:(id)arg1;
- (void)searchDidTimeOut:(id)arg1;
- (void)searchDidBegin:(id)arg1;
- (void)highlightPreviousMatch;
- (void)highlightNextMatch;
- (void)_highlightFindOnPageMatch:(_Bool)arg1;
- (void)_highlightFindOnPageMatchForPDF:(_Bool)arg1 withPDFHandler:(id)arg2;
- (id)_currentPDFSearchResult;
- (_Bool)_updateHighlightedMatchIndex:(_Bool)arg1;
- (void)setSearchText:(id)arg1 matchLimit:(unsigned long long)arg2;
- (unsigned long long)findOnPageOptions;
- (_Bool)_highlightSelection;
- (_Bool)updateHighlightBubbleWobble:(_Bool)arg1;
- (void)setSelectionRect:(struct CGRect)arg1 textRects:(id)arg2 contentViews:(id)arg3 wobble:(_Bool)arg4;
- (void)setSelectionRect:(struct CGRect)arg1 textRects:(id)arg2 contentImage:(struct CGImage *)arg3 wobble:(_Bool)arg4;
- (void)_setSelectionRect:(struct CGRect)arg1 textRects:(id)arg2 contentImage:(struct CGImage *)arg3 contentViews:(id)arg4 wobble:(_Bool)arg5;
- (void)_clearHighlightViews;
- (void)_addContentViewAtIndex:(unsigned long long)arg1 withRect:(struct CGRect)arg2;
- (void)clearBrowserView;
- (void)dealloc;
- (void)_commonInitialize;
- (id)initWithPDFViewHandler:(id)arg1;
- (id)initWithBrowserView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIWebTiledView : UIView
{
    WAKWindow *_wakWindow;
    int _inGestureType;
    int _tilingArea;
    _Bool _didFirstTileLayout;
    _Bool _layoutTilesInMainThread;
    _Bool _tilingModeIsLocked;
    _Bool _allowsPaintingAndScriptsWhilePanning;
    _Bool _editingTilingModeEnabled;
}

- (id)wakWindow;
- (void)setLayoutTilesInMainThread:(_Bool)arg1;
- (_Bool)layoutTilesInMainThread;
- (void)dumpTiles;
- (void)removeForegroundTiles;
- (void)removeAllTiles;
- (void)removeAllNonVisibleTiles;
- (_Bool)keepsZoomedOutTiles;
- (void)setKeepsZoomedOutTiles:(_Bool)arg1;
- (_Bool)tilesOpaque;
- (void)setTilesOpaque:(_Bool)arg1;
- (_Bool)tileDrawingEnabled;
- (void)setEditingTilingModeEnabled:(_Bool)arg1;
- (_Bool)editingTilingModeEnabled;
- (void)setTileDrawingEnabled:(_Bool)arg1;
- (_Bool)logsTilingChanges;
- (void)setLogsTilingChanges:(_Bool)arg1;
- (_Bool)isTilingEnabled;
- (void)setTilingEnabled:(_Bool)arg1;
- (unsigned int)adjustedMaxTileCount;
- (unsigned int)maxTileCount;
- (void)setMaxTileCount:(unsigned int)arg1;
- (_Bool)drawsGrid;
- (void)setDrawsGrid:(_Bool)arg1;
- (struct CGSize)tileSize;
- (void)setTileSize:(struct CGSize)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setNeedsDisplay;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)_didScroll;
- (void)setNeedsLayout;
- (void)setAllowsPaintingAndScriptsWhilePanning:(_Bool)arg1;
- (_Bool)allowsPaintingAndScriptsWhilePanning;
- (void)unlockTilingMode;
- (void)lockTilingMode;
- (int)tilingArea;
- (void)setTilingArea:(int)arg1;
- (void)setInGesture:(int)arg1;
- (void)updateTilingMode;
- (void)willMoveToWindow:(id)arg1;
- (void)_screenChanged:(id)arg1;
- (void)layoutSubviews;
- (void)drawImageIntoTiles:(struct CGImage *)arg1;
- (void)layoutTilesNowForRect:(struct CGRect)arg1;
- (void)layoutTilesNowOnWebThread;
- (void)layoutTilesNow;
- (struct CGRect)visibleRect;
- (void)setWAKWindow:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_updateForScreen:(id)arg1;

@end

@interface UIWebDocumentView : UIWebTiledView <DDDetectionControllerInteractionDelegate, _UIRotatingAlertControllerDelegate, UITextAutoscrolling, UIAutoscrollContainer, UIGestureRecognizerDelegate, UIKeyboardInput, UITextInputPrivate, UIKeyInput, UIModalViewDelegate, UITextInputTokenizer, _UIWebDoubleTapDelegate, UIWebFileUploadPanelDelegate>
{
    WebView *_webView;
    id m_parentTextView;
    id _delegate;
    id _textSuggestionDelegate;
    struct CGRect _doubleTapRect;
    struct CGRect _mainDocumentDoubleTapRect;
    struct CGPoint _scrollPoint;
    struct CGPoint _doubleTapStartPosition;
    double _doubleTapStartTime;
    struct CGSize _pendingSize;
    long long _orientation;
    DOMHTMLElement *_standaloneEditingElement;
    struct CGPoint _mouseDownPoint;
    double _mouseDownTime;
    UIAutoscroll *_autoscroll;
    struct __CFDictionary *_plugInViews;
    long long m_selectionGranularity;
    CALayer *_contentLayersHostingLayer;
    CALayer *_flattenedRotatingContentLayer;
    NSArray *_additionalSubviews;
    UITextInputTraits *_traits;
    id <UITextInputDelegate> _inputDelegate;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UITapGestureRecognizer *_twoFingerDoubleTapGestureRecognizer;
    _UIWebHighlightLongPressGestureRecognizer *_highlightLongPressGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UIPanGestureRecognizer *_twoFingerPanGestureRecognizer;
    struct {
        NSTimer *timer;
        struct CGPoint location;
        _Bool isBlocked;
        _Bool isCancelled;
        _Bool isOnWebThread;
        _Bool isDisplayingHighlight;
        _Bool attemptedClick;
        struct CGPoint lastPanTranslation;
        DOMNode *element;
        id delegate;
        UIWebRotatingAlertController *interactionSheet;
        _Bool allowsImageSheet;
        _Bool allowsDataDetectorsSheet;
        _Bool allowsLinkSheet;
        _Bool acceptsFirstResponder;
        double documentScale;
    } _interaction;
    _UIWebViewportHandler *_viewportHandler;
    int _documentType;
    float _documentScale;
    float _previousDocumentScale;
    struct CGSize _fixedLayoutOriginRoundingDelta;
    struct CGSize _fixedLayoutSizeRoundingDelta;
    unsigned int _mouseDownCount;
    unsigned long long _dataDetectorTypes;
    unsigned int _webCoreNeedsSetNeedsDisplay:1;
    unsigned int _webCoreNeedsDraw:1;
    unsigned int _ignoresFocusingMouse:1;
    unsigned int _ignoresKeyEvents:1;
    unsigned int _autoresizes:1;
    unsigned int _ignoresViewportOverflowWhenAutoresizing:1;
    unsigned int _shouldIgnoreCustomViewport:1;
    unsigned int _updatingSize:1;
    unsigned int _scalesToFit:1;
    unsigned int _updatesScrollView:1;
    unsigned int _hasCustomScale:1;
    unsigned int _shouldRestoreScrollPosition:1;
    unsigned int _pageNeedsReset:1;
    unsigned int _hasScrollPoint:1;
    unsigned int _gesturesDisabled:1;
    unsigned int _doubleTapRectIsReplaced:1;
    unsigned int _standaloneEditableView:1;
    unsigned int _widgetEditingView:1;
    unsigned int _mouseDragged:1;
    unsigned int _mouseReentrancyGuard:1;
    unsigned int _isShowingFullScreenPlugIn:1;
    unsigned int _isSettingRedrawFrame:1;
    unsigned int _needsScrollNotifications:1;
    unsigned int _loadsSynchronously:1;
    unsigned int _mouseDown:1;
    unsigned int _usePreTimberlineTransparencyBehavior:1;
    unsigned int _geolocationDialogAllowed:1;
    unsigned int _usingMinimalTilesDuringLoading:1;
    unsigned int _sheetsCount:2;
    unsigned int _didFirstVisuallyNonEmptyLayout:1;
    unsigned int _loadInProgress:1;
    unsigned int _uiwdvIsResigningFirstResponder:1;
    unsigned int _sizeUpdatesSuspended:1;
    unsigned int _sizeUpdateOccurredWhileSuspended:1;
    unsigned int _shouldOnlyRecognizeGesturesOnActiveElements:1;
    unsigned int _ignoresFocusEventFromFirstResponderChange:1;
    unsigned int _shouldCloseWebViewAtDealloc:1;
    unsigned int _shouldRemoveUserStyleSheet:1;
    unsigned int _hasDrawnTiles:1;
    unsigned int _showingTextStyleOptions:1;
    unsigned int _subviewCachesNeedUpdate:1;
    unsigned int _avoidFixedPositionUpdateViaDidScroll:1;
    unsigned int _inspectorSearchingForNode:1;
    unsigned int _previousScrollWasScrollToTop:1;
    unsigned int _pageIsLoadedFromPageCache:1;
    unsigned int _shouldSendWillShowInteractionHighlight:1;
    WebThreadSafeUndoManager *_undoManager;
    UIWebSelectionAssistant *_webSelectionAssistant;
    UITextInteractionAssistant *_textSelectionAssistant;
    UITextChecker *_textChecker;
    struct UIEdgeInsets _caretInsets;
    UIWebFileUploadPanel *_fileUploadPanel;
    int _selectionAffinity;
    DOMElement *_dictationResultPlaceholder;
    id _dictationResultPlaceholderRemovalObserver;
    DOMRange *_rangeToRestoreAfterDictation;
    UIWebPlaybackTargetPicker *_playbackTargetPicker;
    struct _UIWebViewportConfiguration _defaultViewportConfigurations[5];
    _UITextServiceSession *_definitionSession;
    _UITextServiceSession *_learnSession;
    WebHistoryItem *_latestCommittedPageLoadHistoryItem;
    _Bool _suppressesIncrementalRendering;
    _Bool _wantsMinimalUI;
    unsigned long long _renderTreeSize;
    unsigned long long _renderTreeSizeThresholdForReset;
    struct CGRect _exposedScrollViewRect;
}

+ (id)standardTextViewPreferences;
+ (_Bool)hasLandscapeOrientation;
+ (void)initialize;
+ (double)getTimestamp;
+ (Class)layerClass;
+ (id)_sharedHighlightView;
+ (id)_createDefaultHighlightView;
@property(nonatomic) unsigned long long renderTreeSizeThresholdForReset; // @synthesize renderTreeSizeThresholdForReset=_renderTreeSizeThresholdForReset;
@property(readonly, nonatomic) unsigned long long renderTreeSize; // @synthesize renderTreeSize=_renderTreeSize;
@property(readonly, nonatomic) _Bool wantsMinimalUI; // @synthesize wantsMinimalUI=_wantsMinimalUI;
@property(nonatomic) struct CGRect exposedScrollViewRect; // @synthesize exposedScrollViewRect=_exposedScrollViewRect;
@property(nonatomic) _Bool suppressesIncrementalRendering; // @synthesize suppressesIncrementalRendering=_suppressesIncrementalRendering;
@property(retain, nonatomic) DOMRange *rangeToRestoreAfterDictation; // @synthesize rangeToRestoreAfterDictation=_rangeToRestoreAfterDictation;
- (void)willZoomToLocation:(struct CGPoint)arg1 atScale:(double)arg2 forDuration:(double)arg3;
- (_Bool)shouldSelectionAssistantReceiveDoubleTapAtPoint:(struct CGPoint)arg1 forScale:(double)arg2;
- (void)willZoomToMinimumScale;
- (_Bool)considerHeightForDoubleTap;
- (CDStruct_39925896)doubleTapScalesForSize:(struct CGSize)arg1;
- (struct CGRect)rectOfInterestForPoint:(struct CGPoint)arg1;
- (double)minimumScaleForSize:(struct CGSize)arg1;
- (struct CGRect)visibleContentRect;
- (double)currentDocumentScale;
- (double)zoomedDocumentScale;
- (id)contentView;
- (id)enclosingScrollView;
- (_Bool)_isInspectorSearchingForNode;
- (_Bool)_shouldResetForNewPage;
- (int)documentType;
- (id)_documentUrl;
- (id)selectionRectsForRange:(id)arg1;
@property(nonatomic) long long selectionGranularity;
@property(nonatomic) long long selectionAffinity;
- (void)setBaseWritingDirection:(long long)arg1 forRange:(id)arg2;
- (long long)baseWritingDirectionForPosition:(id)arg1 inDirection:(long long)arg2;
- (id)characterRangeByExtendingPosition:(id)arg1 inDirection:(long long)arg2;
- (id)positionWithinRange:(id)arg1 farthestInDirection:(long long)arg2;
- (id)characterRangeAtPoint:(struct CGPoint)arg1;
- (id)closestPositionToPoint:(struct CGPoint)arg1 withinRange:(id)arg2;
- (id)closestPositionToPoint:(struct CGPoint)arg1;
@property(copy, nonatomic) NSDictionary *markedTextStyle;
- (struct CGRect)caretRectForPosition:(id)arg1;
@property(nonatomic) id <UITextInputDelegate> inputDelegate;
@property(readonly, nonatomic) id <UITextInputTokenizer> tokenizer;
- (struct CGRect)_lastRectForRange:(id)arg1;
- (struct CGRect)firstRectForRange:(id)arg1;
- (id)rangeEnclosingPosition:(id)arg1 withGranularity:(long long)arg2 inDirection:(long long)arg3;
- (void)_scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (_Bool)isPosition:(id)arg1 withinTextUnit:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 toBoundary:(long long)arg2 inDirection:(long long)arg3;
- (_Bool)isPosition:(id)arg1 atBoundary:(long long)arg2 inDirection:(long long)arg3;
- (id)positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3;
- (id)_positionFromPosition:(id)arg1 inDirection:(long long)arg2 offset:(long long)arg3 withAffinityDownstream:(_Bool)arg4;
- (id)positionFromPosition:(id)arg1 offset:(long long)arg2;
- (long long)offsetFromPosition:(id)arg1 toPosition:(id)arg2;
- (long long)comparePosition:(id)arg1 toPosition:(id)arg2;
- (void)replaceRange:(id)arg1 withText:(id)arg2;
- (id)rangeOfEnclosingWord:(id)arg1;
- (id)textRangeFromPosition:(id)arg1 toPosition:(id)arg2;
- (id)textInRange:(id)arg1;
@property(readonly, nonatomic) UITextPosition *endOfDocument;
@property(readonly, nonatomic) UITextPosition *beginningOfDocument;
- (void)unmarkText;
@property(readonly, nonatomic) UITextRange *markedTextRange;
- (void)setSelectedTextRange:(id)arg1 withAffinityDownstream:(_Bool)arg2;
@property(copy) UITextRange *selectedTextRange;
- (_Bool)hasText;
- (id)_textSelectingContainer;
- (_Bool)hasSimpleTextOnlyStructure;
- (_Bool)containsOnlySelectableElements;
- (void)setTileUpdatesDisabled:(_Bool)arg1;
- (void)_restoreFlattenedContentLayers;
- (void)_flattenAndSwapContentLayersInRect:(struct CGRect)arg1;
- (void *)_createIOSurfaceFromRect:(struct CGRect)arg1;
- (_Bool)_shouldFlattenContentLayersForRect:(struct CGRect)arg1;
- (unsigned int)_contentSizeInExposedRect:(struct CGRect)arg1 topLayer:(id)arg2 visibleLayerCount:(int *)arg3;
- (double)maximumDoubleTapScale;
- (void)didEndZoom;
- (void)didZoom;
- (void)willStartZoom;
- (void)scrollViewWasRemoved;
- (void)didEndScroll;
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;
- (void)_updateFixedPositioningObjectsLayoutDuringScroll;
- (void)willStartScrollToTop;
- (void)willStartScroll;
- (void)useSelectionAssistantWithMode:(int)arg1;
- (void)setBecomesEditableWithGestures:(_Bool)arg1;
- (_Bool)becomesEditableWithGestures;
- (_Bool)playsNicelyWithGestures;
- (struct CGRect)autoscrollContentFrame;
- (struct CGRect)autoscrollDragFrame;
- (struct CGRect)visibleContentFrame;
- (struct CGRect)visibleFrame;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)textStylingAtPosition:(id)arg1 inDirection:(long long)arg2;
- (_Bool)inPopover;
- (_Bool)isCaretInEmptyParagraph;
- (id)webSelectionAssistant;
- (void)makeTextWritingDirectionLeftToRight:(id)arg1;
- (void)makeTextWritingDirectionRightToLeft:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (void)replace:(id)arg1;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)paste:(id)arg1;
- (_Bool)_isDisplayingShortcutViewController;
- (void)_addShortcut:(id)arg1;
- (void)_insertAttributedTextWithoutClosingTyping:(id)arg1;
- (_Bool)_isDisplayingReferenceLibraryViewController;
- (void)_define:(id)arg1;
- (struct CGRect)_shortcutPresentationRect;
- (void)_showTextStyleOptions:(id)arg1;
- (void)toggleUnderline:(id)arg1;
- (void)toggleItalics:(id)arg1;
- (void)toggleBoldface:(id)arg1;
- (void)copy:(id)arg1;
- (void)cut:(id)arg1;
- (struct CGRect)_selectionClipRect;
- (void)updateSelection;
- (void)endSelectionChange;
- (void)beginSelectionChange;
- (_Bool)isEditing;
- (_Bool)isEditable;
@property(readonly, nonatomic) UITextInteractionAssistant *interactionAssistant;
- (id)selectionView;
- (void)takeTraitsFrom:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)textInputTraits;
- (void)webView:(id)arg1 willAddPlugInView:(id)arg2;
- (_Bool)hasPlugInSubviews;
- (_Bool)isShowingFullScreenPlugInUI;
- (void)didRemovePlugInView:(id)arg1;
- (void)webView:(id)arg1 didHideFullScreenForPlugInView:(id)arg2;
- (void)webView:(id)arg1 willShowFullScreenForPlugInView:(id)arg2;
- (id)webView:(id)arg1 plugInViewWithArguments:(id)arg2 fromPlugInPackage:(id)arg3;
- (void)setPaused:(_Bool)arg1 withEvents:(_Bool)arg2;
- (void)setPaused:(_Bool)arg1;
- (void)handleKeyWebEvent:(id)arg1;
- (_Bool)requiresKeyEvents;
- (void)setBottomBufferHeight:(double)arg1;
- (id)automaticallySelectedOverlay;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (_Bool)keyboardInputShouldDelete:(id)arg1;
- (_Bool)keyboardInput:(id)arg1 shouldInsertText:(id)arg2 isMarkedText:(_Bool)arg3;
- (_Bool)keyboardInput:(id)arg1 shouldReplaceTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (id)implementationWebView;
- (struct CGRect)convertCaretRect:(struct CGRect)arg1;
- (void)setCaretChangeListener:(id)arg1;
- (_Bool)hasContent;
- (id)text;
- (void)setText:(id)arg1;
- (void)selectAll;
- (_Bool)selectionAtWordStart;
- (_Bool)selectionAtDocumentStart;
- (_Bool)hasSelection;
- (void)extendCurrentSelection:(int)arg1;
- (id)rangeByExtendingCurrentSelection:(int)arg1;
- (id)rangeByMovingCurrentSelection:(int)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinityDownstream:(_Bool)arg2;
- (id)selectedDOMRange;
- (struct _NSRange)selectionRange;
- (void)replaceSelectionWithWebArchive:(id)arg1 selectReplacement:(_Bool)arg2 smartReplace:(_Bool)arg3;
- (int)wordOffsetInRange:(id)arg1;
- (id)nextUnperturbedDictationResultBoundaryFromPosition:(id)arg1;
- (id)rectsForNSRange:(struct _NSRange)arg1;
- (id)textColorForCaretSelection;
- (id)fontForCaretSelection;
- (unsigned short)characterAfterCaretSelection;
- (unsigned short)characterInRelationToCaretSelection:(int)arg1;
- (void)confirmMarkedText:(id)arg1;
- (void)setMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (void)replaceCurrentWordWithText:(id)arg1;
- (void)replaceRangeWithTextWithoutClosingTyping:(id)arg1 replacementText:(id)arg2;
- (void)clearMarkedText;
- (id)dictationInterpretations;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (void)_finishedUsingDictationPlaceholder;
- (struct CGRect)frameForDictationResultPlaceholder:(id)arg1;
- (id)insertDictationResultPlaceholder;
- (_Bool)_dictationPlaceholderHasBeenRemoved;
- (_Bool)hasRangedSelection;
- (id)dictationResultMetadataForRange:(id)arg1;
- (id)metadataDictionariesForDictationResults;
- (void)insertDictationResult:(id)arg1 withCorrectionIdentifier:(id)arg2;
- (_Bool)isEditingSingleLineElement;
- (void)insertText:(id)arg1;
- (void)deleteBackward;
- (void)disableClearsOnInsertion;
- (void)deleteFromInput;
- (void)addInputString:(id)arg1;
- (void)addInputString:(id)arg1 withFlags:(unsigned long long)arg2;
- (id)delegate;
- (void)setContinuousSpellCheckingEnabled:(_Bool)arg1;
- (void)_setParentTextView:(id)arg1;
- (id)_parentTextView;
- (id)undoManager;
- (id)undoManagerForWebView:(id)arg1;
- (void)_undoManagerDidRedo:(id)arg1;
- (void)_undoManagerDidUndo:(id)arg1;
- (void)setInteractionAssistantGestureRecognizers;
- (void)ensureSelection;
- (_Bool)clearWKFirstResponder;
- (_Bool)makeWKFirstResponder;
- (id)_responderForBecomeFirstResponder;
- (_Bool)resignFirstResponder;
- (void)deferredBecomeFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)updateKeyboardStateOnResponderChanges;
- (_Bool)isWidgetEditingView;
- (void)setIsWidgetEditingView:(_Bool)arg1;
- (id)standaloneEditingElement;
- (void)setStandaloneEditingElement:(id)arg1;
- (_Bool)isStandaloneEditableView;
- (void)setIsStandaloneEditableView:(_Bool)arg1;
- (id)textFormElement;
- (id)formElement;
- (void)_clearAllConsoleMessages;
- (void)_resetFormDataForFrame:(id)arg1;
- (void)assistFormNode:(id)arg1;
- (_Bool)doubleTapRectIsReplaced;
- (struct CGRect)doubleTapRect;
- (void)_handleTwoFingerDoubleTapAtLocation:(struct CGPoint)arg1;
- (void)_handleDoubleTapAtLocation:(struct CGPoint)arg1;
- (void)_handleSingleTapZoomPostClickAtLocation:(struct CGPoint)arg1;
- (_Bool)_handleSingleTapZoomPreClickAtLocation:(struct CGPoint)arg1;
@property(nonatomic, getter=isDoubleTapEnabled) _Bool doubleTapEnabled;
@property(nonatomic) _Bool mediaPlaybackAllowsAirPlay;
@property(nonatomic) _Bool shouldOnlyRecognizeGesturesOnActiveElements;
- (void)sendOrientationEventForOrientation:(long long)arg1;
- (void)didRotateInteractionSheet;
- (void)willRotateInteractionSheet;
- (void)updateInteractionElements;
- (void)redrawScaledDocument;
- (void)_reshapePlugInViews;
- (id)checkSpellingOfString:(id)arg1;
- (void)_renderUnbufferedInContext:(struct CGContext *)arg1;
- (void)webViewDidDrawTiles:(id)arg1;
- (id)subviews;
- (_Bool)_shouldUpdateSubviewCachesForPlugins;
- (void)_updateSubviewCaches;
- (id)_collectAdditionalSubviews;
- (void)_setSubviewCachesNeedUpdate:(_Bool)arg1;
- (void)webViewDidCommitCompositingLayerChanges:(id)arg1;
- (void)_webthread_webView:(id)arg1 attachRootLayer:(id)arg2;
- (void)revealedSelectionByScrollingWebFrame:(id)arg1;
- (_Bool)isUnperturbedDictationResultMarker:(id)arg1;
- (int)deviceOrientation;
- (void)showPlaybackTargetPicker:(_Bool)arg1 fromRect:(struct CGRect)arg2;
- (long long)getPasteboardChangeCount;
- (id)readDataFromPasteboard:(id)arg1 withIndex:(long long)arg2;
- (id)supportedPasteboardTypesForCurrentSelection;
- (id)_supportedPasteboardTypesForCurrentSelection;
- (_Bool)performsTwoStepPaste:(id)arg1;
- (_Bool)fragmentContainsRichContent:(id)arg1;
- (_Bool)hasRichlyEditableSelection;
- (_Bool)isInsideRichlyEditableTextWidget;
- (long long)getPasteboardItemsCount;
- (void)writeDataToPasteboard:(id)arg1;
- (void)_updateFixedPositionContent;
- (struct CGRect)_adjustedLayoutRectForFixedPositionObjects;
- (void)_updateFixedPositionedObjectsLayoutRectUsingWebThread:(_Bool)arg1 synchronize:(_Bool)arg2;
- (struct CGRect)_layoutRectForFixedPositionObjects;
- (struct CGRect)_documentViewVisibleRect;
- (void)_updateWebKitExposedScrollViewRect;
- (void)_notifyContentHostingLayersOfScaleChange;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_notifyPlugInViewsOfScaleChange;
- (void)_notifyPlugInViewsOfDidZoom;
- (void)_notifyPlugInViewsOfDidEndZooming;
- (void)_notifyPlugInViewsOfWillBeginZooming;
- (_Bool)_isSubviewOfPlugInView:(id)arg1;
- (void)_didScroll;
- (void)_cancelLongPressGestureRecognizer;
- (void)setTilingArea:(int)arg1;
- (void)setIgnoresKeyEvents:(_Bool)arg1;
- (void)setIgnoresFocusingMouse:(_Bool)arg1;
- (_Bool)cancelTouchTracking;
- (_Bool)cancelMouseTracking;
- (struct CGImage *)newSnapshotWithRect:(struct CGRect)arg1;
- (struct CGImage *)createSnapshotWithRect:(struct CGRect)arg1;
- (void)setOpaque:(_Bool)arg1;
- (void)setDrawsBackground:(_Bool)arg1;
- (void)setSmoothsFonts:(_Bool)arg1;
- (void)layoutSubviews;
- (void)forceLayout;
- (void)_showPendingContentLayers;
- (_Bool)webView:(id)arg1 shouldScrollToPoint:(struct CGPoint)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 restoreStateFromHistoryItem:(id)arg2 forFrame:(id)arg3 force:(_Bool)arg4;
- (void)webView:(id)arg1 saveStateToHistoryItem:(id)arg2 forFrame:(id)arg3;
- (void)saveStateToCurrentHistoryItem;
- (void)_saveStateToHistoryItem:(id)arg1;
- (void)_resetForNewPage;
- (void)_restoreScrollPointForce:(_Bool)arg1;
- (_Bool)updatesScrollView;
- (void)setUpdatesScrollView:(_Bool)arg1;
- (void)fileUploadPanelDidDismiss:(id)arg1;
- (void)setAllowsUserScaling:(_Bool)arg1 forDocumentTypes:(int)arg2;
- (void)setMaximumScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setMinimumScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setInitialScale:(float)arg1 forDocumentTypes:(int)arg2;
- (void)setViewportSize:(struct CGSize)arg1 forDocumentTypes:(int)arg2;
- (void)setMinimumSize:(struct CGSize)arg1 updateCurrentViewportConfigurationSize:(_Bool)arg2;
- (void)setMinimumSize:(struct CGSize)arg1;
- (void)setIgnoresViewportOverflowWhenAutoresizing:(_Bool)arg1;
- (void)setAutoresizes:(_Bool)arg1;
- (struct CGRect)documentBounds;
- (void)_WAKViewSizeDidChange:(id)arg1;
- (void)webViewDidReceiveMobileDocType:(id)arg1;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (void)webViewDidRestoreFromPageCache:(id)arg1;
- (void)webView:(id)arg1 runOpenPanelForFileButtonWithResultListener:(id)arg2 allowMultipleFiles:(_Bool)arg3 acceptMIMETypes:(id)arg4;
- (void)webViewDidEndOverflowScroll:(id)arg1;
- (void)webViewDidStartOverflowScroll:(id)arg1;
- (void)_editableSelectionLayoutChangedByScrolling:(_Bool)arg1;
- (void)_selectionLayoutChangedByScrolling:(_Bool)arg1;
- (void)webThreadWebViewDidLayout:(id)arg1 byScrolling:(_Bool)arg2;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)resetTilingAfterLoadComplete;
- (void)sendScrollEventIfNecessaryWasUserScroll:(_Bool)arg1;
- (void)sendScrollEventIfNecessary;
- (_Bool)needsScrollNotifications;
- (void)webView:(id)arg1 needsScrollNotifications:(id)arg2 forFrame:(id)arg3;
- (_Bool)isClassicViewportMode;
- (void)webView:(id)arg1 didReceiveViewportArguments:(id)arg2;
- (void)_applyViewportArguments:(id)arg1;
@property(nonatomic) _Bool shouldIgnoreCustomViewport;
- (void)_clearDoubleTapRect;
- (void)_updateSize;
@property(nonatomic) _Bool sizeUpdatesSuspended;
- (void)_setDocumentType:(int)arg1;
- (void)_setDocumentType:(int)arg1 overrideCustomConfigurations:(_Bool)arg2 viewportArguments:(id)arg3;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromFrame:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toFrame:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromFrame:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toFrame:(id)arg2;
- (void)viewportHandler:(id)arg1 didChangeViewportSize:(struct CGSize)arg2;
- (void)viewportHandlerDidChangeScales:(id)arg1;
- (void)_updateScrollViewBoundaryZoomScales;
- (double)_zoomedDocumentScale;
- (float)minimumScale;
- (float)maximumScale;
- (float)initialScale;
- (float)minimumScaleForMinimumSize:(struct CGSize)arg1;
- (float)_documentScale;
- (void)_setDocumentScale:(float)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setUsePreTimberlineTransparencyBehavior;
- (unsigned long long)dataDetectorTypes;
- (void)setDataDetectorTypes:(unsigned long long)arg1;
- (unsigned long long)effectiveDataDetectorTypes;
- (_Bool)_dataDetectionIsActivated;
- (_Bool)detectsPhoneNumbers;
- (void)setDetectsPhoneNumbers:(_Bool)arg1;
- (void)setUserStyleSheet:(id)arg1;
- (id)_focusedOrMainFrame;
- (id)_groupName;
- (id)webView;
- (_Bool)loadsSynchronously;
- (void)setLoadsSynchronously:(_Bool)arg1;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
- (void)_cleanUpFrameStateAndLoad:(CDUnknownBlockType)arg1;
- (void)_runLoadBlock:(CDUnknownBlockType)arg1;
- (void)setDelegate:(id)arg1;
- (void)stopLoading:(id)arg1;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (_Bool)hasDrawnTiles;
- (_Bool)didFirstVisuallyNonEmptyLayout;
- (void)dealloc;
- (void)_setTextColor:(id)arg1;
- (void)_setFont:(id)arg1;
- (void)_dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)_presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_removeShortcutController:(_Bool)arg1;
- (void)_removeDefinitionController:(_Bool)arg1;
- (void)_inspectorDidStopSearchingForNode:(id)arg1;
- (void)_inspectorDidStartSearchingForNode:(id)arg1;
- (void)_resetShowingTextStyle:(id)arg1;
- (id)initWithWebView:(id)arg1 frame:(struct CGRect)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initSimpleHTMLDocumentWithStyle:(id)arg1 frame:(struct CGRect)arg2 preferences:(id)arg3 groupName:(id)arg4;
- (struct CGRect)webViewFrameForUIFrame:(struct CGRect)arg1;
- (void)_restoreViewportSettingsWithSize:(struct CGSize)arg1;
- (id)scriptingInfoWithChildren;
- (id)_scriptingInfoForForm:(id)arg1;
- (id)_scriptingInfoForLink:(id)arg1;
@property(getter=_acceptsFirstResponder, setter=_setAcceptsFirstResponder:) _Bool _acceptsFirstResponder;
- (id)_doubleTapGestureRecognizer;
- (id)superviewForSheet;
- (struct CGPoint)interactionLocation;
- (id)interactionElement;
- (void)setAllowsLinkSheet:(_Bool)arg1;
- (void)setAllowsDataDetectorsSheet:(_Bool)arg1;
- (void)setAllowsImageSheet:(_Bool)arg1;
- (id)interactionDelegate;
- (void)setInteractionDelegate:(id)arg1;
- (_Bool)supportsTwoFingerScrollingAtTouchLocation:(struct CGPoint)arg1 andLocation:(struct CGPoint)arg2;
- (void)sendScrollWheelEvents;
- (void)_cleanupSheet;
- (void)_didDismissElementSheet;
- (id)_targetURL;
- (void)cancelInteractionWithImmediateDisplay:(_Bool)arg1;
- (void)deferInteraction;
- (void)cancelInteraction;
- (void)completeInteraction;
- (void)resetInteraction;
- (void)highlightApproximateNodeAndDisplayInfoSheet;
- (void)hideTapHighlight;
- (void)highlightApproximateNodeInverted:(_Bool)arg1;
- (id)deepestNodeAtViewportLocation:(struct CGPoint)arg1;
- (id)approximateNodeAtViewportLocation:(struct CGPoint *)arg1;
- (void)webViewDidPreventDefaultForEvent:(id)arg1;
- (void)webView:(id)arg1 didObserveDeferredContentChange:(int)arg2 forFrame:(id)arg3;
- (void)attemptClick:(id)arg1;
- (void)_sendMouseMoveAndAttemptClick:(id)arg1;
- (void)performClick:(id)arg1;
- (void)_syntheticMouseEventNotHandledAtLocation:(struct CGPoint)arg1;
- (void)_twoFingerPanRecognized:(id)arg1;
- (void)_longPressRecognized:(id)arg1;
- (void)_highlightLongPressRecognized:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (SEL)_actionForLongPressOnElement:(id)arg1;
- (void)_twoFingerDoubleTapRecognized:(id)arg1;
- (void)_doubleTapRecognized:(id)arg1;
- (void)_singleTapRecognized:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)installGestureRecognizers;
- (_Bool)willInteractWithLocation:(struct CGPoint)arg1;
- (_Bool)isInInteraction;
- (_Bool)startActionSheet;
- (void)validateInteractionWithLocation:(struct CGPoint)arg1;
- (void)tapInteractionWithLocation:(struct CGPoint)arg1;
- (void)continueInteractionWithLocation:(struct CGPoint)arg1;
- (void)startInteractionWithLocation:(struct CGPoint)arg1;
- (void)_resetInteractionWithLocation:(struct CGPoint)arg1;
- (void)performInteractionSelector:(SEL)arg1 afterDelay:(double)arg2;
- (void)clearInteractionTimer;
- (struct CGRect)presentationRectInHostViewForSheet:(id)arg1;
- (struct CGRect)initialPresentationRectInHostViewForSheet:(id)arg1;
- (id)hostViewForSheet:(id)arg1;
- (struct CGRect)_presentationRectForSheetGivenPoint:(struct CGPoint)arg1 inHostView:(id)arg2;
- (void)action:(id)arg1 didDismissAlertController:(id)arg2;
- (void)_showDataDetectorsSheet;
- (void)actionDidFinish;
- (void)_showLinkSheet;
- (void)_showImageSheet;
- (void)_createSheetWithElementActions:(id)arg1 showLinkTitle:(_Bool)arg2;
- (void)drawPage:(unsigned long long)arg1 withPaginationInfo:(id)arg2;
- (void)_drawPDFPagesForPage:(unsigned long long)arg1 withPaginationInfo:(id)arg2;
- (void)endPrintMode;
- (id)beginPrintModeForFrame:(id)arg1 withSize:(struct CGSize)arg2 startOffset:(double)arg3 minimumLayoutWidth:(double)arg4 maximumLayoutWidth:(double)arg5 tileClippedContent:(_Bool)arg6;
- (id)beginPrintModeWithSize:(struct CGSize)arg1 startOffset:(double)arg2 minimumLayoutWidth:(double)arg3 maximumLayoutWidth:(double)arg4 tileClippedContent:(_Bool)arg5;
- (id)beginPrintModeForFrame:(id)arg1 withWidth:(double)arg2 height:(double)arg3 startOffset:(double)arg4 shrinkToFit:(_Bool)arg5 tileClippedContent:(_Bool)arg6;
- (id)beginPrintModeWithWidth:(double)arg1 height:(double)arg2 startOffset:(double)arg3 shrinkToFit:(_Bool)arg4 tileClippedContent:(_Bool)arg5;
- (id)beginPrintModeWithWidth:(double)arg1 height:(double)arg2 startOffset:(double)arg3 shrinkToFit:(_Bool)arg4;
- (id)_beginPrintModeForPDFView:(id)arg1 withSize:(struct CGSize)arg2 startOffset:(double)arg3 minimumLayoutWidth:(double)arg4 maximumLayoutWidth:(double)arg5;
- (id)_beginPrintModeForHTMLView:(id)arg1 withSize:(struct CGSize)arg2 startOffset:(double)arg3 minimumLayoutWidth:(double)arg4 maximumLayoutWidth:(double)arg5 tileClippedContent:(_Bool)arg6;
- (_Bool)isInPrintMode;
- (struct CGPoint)constrainedPoint:(struct CGPoint)arg1;
- (_Bool)mouseEventsChangeSelection;
- (id)positionAtStartOrEndOfWord:(id)arg1;
- (id)asText;
- (struct CGRect)visibleBounds;
- (id)webVisiblePositionForPoint:(struct CGPoint)arg1;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)scrollSelectionToVisible:(_Bool)arg1;
- (void)cancelAutoscroll;
- (void)startAutoscroll:(struct CGPoint)arg1;
- (struct CGRect)contentFrameForView:(id)arg1;
@property(nonatomic) struct CGPoint autoscrollContentOffset;
- (_Bool)selectionIsCaretInDisplayBlockElementAtOffset:(int)arg1;
- (void)setSelectionToStart;
- (void)setSelectionToEnd;
- (void)setRangedSelectionWithExtentPoint:(struct CGPoint)arg1;
- (void)smartExtendRangedSelection:(int)arg1;
- (id)selectionRects;
- (id)selectionRectsForDOMRange:(id)arg1;
- (id)textInDOMRange:(id)arg1;
- (void)setSelectedDOMRange:(id)arg1 affinity:(int)arg2;
- (id)wordAtPoint:(struct CGPoint)arg1;
- (void)setSelectionWithFirstPoint:(struct CGPoint)arg1 secondPoint:(struct CGPoint)arg2;
- (void)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(_Bool)arg2 allowFlipping:(_Bool)arg3;
- (_Bool)setRangedSelectionExtentPoint:(struct CGPoint)arg1 baseIsStart:(_Bool)arg2;
- (void)setRangedSelectionInitialExtentToCurrentSelectionEnd;
- (void)setRangedSelectionInitialExtentToCurrentSelectionStart;
- (void)clearRangedSelectionInitialExtent;
- (void)setRangedSelectionBaseToCurrentSelectionEnd;
- (void)setRangedSelectionBaseToCurrentSelectionStart;
- (void)setRangedSelectionBaseToCurrentSelection;
- (void)setBaseWritingDirection:(long long)arg1;
- (void)toggleBaseWritingDirection;
- (long long)selectionBaseWritingDirection;
- (struct CGRect)caretRectForVisiblePosition:(id)arg1;
- (struct CGRect)caretRect;
- (struct UIEdgeInsets)caretInsets;
- (void)setCaretInsets:(struct UIEdgeInsets)arg1;
- (void)collapseSelection;
@property(readonly, nonatomic) int selectionState;
- (unsigned long long)offsetInMarkedTextForSelection:(id)arg1;
- (struct CGRect)closestCaretRectInMarkedTextRangeForPoint:(struct CGPoint)arg1;
- (_Bool)hasMarkedText;
- (_Bool)hasEditableSelection;
- (void)clearSelection;
- (void)selectionChanged:(id)arg1;
- (void)selectionChanged;
- (struct CGPoint)convertPointToSelectedFrameCoordinates:(struct CGPoint)arg1;
- (struct CGRect)convertRectFromSelectedFrameCoordinates:(struct CGRect)arg1;
- (void)selectWord;
- (Class)_printFormatterClass;

// Remaining properties
@property(nonatomic) _Bool acceptsEmoji; // @dynamic acceptsEmoji;
@property(nonatomic) _Bool acceptsFloatingKeyboard;
@property(nonatomic) _Bool acceptsSplitKeyboard;
@property(nonatomic) long long autocapitalizationType; // @dynamic autocapitalizationType;
@property(copy, nonatomic) NSString *autocorrectionContext;
@property(nonatomic) long long autocorrectionType; // @dynamic autocorrectionType;
@property(nonatomic) _Bool contentsIsSingleValue; // @dynamic contentsIsSingleValue;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) _Bool deferBecomingResponder;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool disablePrediction;
@property(nonatomic) _Bool displaySecureTextUsingPlainText;
@property(nonatomic) int emptyContentReturnKeyType;
@property(nonatomic) _Bool enablesReturnKeyAutomatically; // @dynamic enablesReturnKeyAutomatically;
@property(nonatomic) _Bool enablesReturnKeyOnNonWhiteSpaceContent;
@property(nonatomic) _Bool forceEnableDictation;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) UIColor *insertionPointColor; // @dynamic insertionPointColor;
@property(nonatomic) unsigned long long insertionPointWidth; // @dynamic insertionPointWidth;
@property(nonatomic) _Bool isSingleLineDocument; // @dynamic isSingleLineDocument;
@property(nonatomic) long long keyboardAppearance; // @dynamic keyboardAppearance;
@property(nonatomic) long long keyboardType; // @dynamic keyboardType;
@property(nonatomic) _Bool learnsCorrections;
@property(copy, nonatomic) NSString *responseContext;
@property(nonatomic) _Bool returnKeyGoesToNextResponder;
@property(nonatomic) long long returnKeyType; // @dynamic returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry; // @dynamic secureTextEntry;
@property(retain, nonatomic) UIColor *selectionBarColor; // @dynamic selectionBarColor;
@property(retain, nonatomic) UIImage *selectionDragDotImage; // @dynamic selectionDragDotImage;
@property(retain, nonatomic) UIColor *selectionHighlightColor; // @dynamic selectionHighlightColor;
@property(nonatomic) int shortcutConversionType; // @dynamic shortcutConversionType;
@property(nonatomic) long long spellCheckingType; // @dynamic spellCheckingType;
@property(readonly) Class superclass;
@property(nonatomic) _Bool suppressReturnKeyStyling;
@property(readonly, nonatomic) UIView *textInputView;
@property(nonatomic) int textLoupeVisibility; // @dynamic textLoupeVisibility;
@property(nonatomic) int textSelectionBehavior; // @dynamic textSelectionBehavior;
@property(nonatomic) id textSuggestionDelegate; // @dynamic textSuggestionDelegate;
@property(nonatomic) struct __CFCharacterSet *textTrimmingSet; // @dynamic textTrimmingSet;
@property(nonatomic) _Bool useInterfaceLanguageForLocalization;

@end

@interface UIWebBrowserView : UIWebDocumentView <UIWebTouchEventsGestureRecognizerDelegate, UIWebFormAccessoryDelegate, _UIWebRotationDelegate>
{
    UIWebFormAccessory *_accessory;
    NSObject<UIFormPeripheral> *_input;
    DOMNode *_currentAssistedNode;
    DOMNode *_assistedNodeStartingFocusRedirects;
    struct CGRect _inputViewBounds;
    struct CGRect _addressViewBounds;
    double _lastAdjustmentForScroller;
    unsigned long long _audioSessionCategoryOverride;
    unsigned int _accessoryEnabled:1;
    unsigned int _forceInputView:1;
    unsigned int _formIsAutoFilling:1;
    unsigned int _inputViewObeysDOMFocus:1;
    unsigned int _allowDOMFocusRedirects:1;
    unsigned int _hasEditedTextField:1;
    unsigned int _alwaysDispatchesScrollEvents:1;
    UIWebTouchEventsGestureRecognizer *_webTouchEventsGestureRecognizer;
    UIWebFormDelegate *_formDelegate;
    UIResponder *_editingDelegateForEverythingExceptForms;
    unsigned long long _dispatchedTouchEvents;
    NSMutableArray *_deferredTouchEvents;
    NSHashTable *_activeHighlighters;
    NSMutableSet *_overflowScrollViewsPendingInsertion;
    NSMutableSet *_overflowScrollViewsPendingDeletion;
    NSMutableSet *_overflowScrollViews;
    NSLock *_pendingOverflowDataLock;
    NSMutableArray *_pendingOverflowScrolls;
    _Bool _pendingGeometryChangeAfterOverflowScroll;
    struct {
        NSMutableArray *all;
        NSMutableArray *html;
        NSMutableArray *javascript;
        NSMutableArray *css;
        NSMutableArray *error;
        NSMutableArray *warning;
        NSMutableArray *tip;
        NSMutableArray *log;
    } _messages;
    CDStruct_d58a15aa _pdf;
    id <UIWebAutoFillDelegate> _autoFillDelegate;
}

+ (id)getUIWebBrowserViewForWebFrame:(id)arg1;
+ (double)preferredScrollDecelerationFactor;
+ (void)initialize;
@property(nonatomic) id <UIWebAutoFillDelegate> autoFillDelegate; // @synthesize autoFillDelegate=_autoFillDelegate;
@property(readonly, nonatomic) _Bool hasEditedTextField; // @synthesize hasEditedTextField=_hasEditedTextField;
@property(nonatomic) _Bool allowDOMFocusRedirects; // @synthesize allowDOMFocusRedirects=_allowDOMFocusRedirects;
@property(nonatomic) _Bool inputViewObeysDOMFocus; // @synthesize inputViewObeysDOMFocus=_inputViewObeysDOMFocus;
@property(nonatomic, getter=isAccessoryEnabled) _Bool accessoryEnabled; // @synthesize accessoryEnabled=_accessoryEnabled;
@property(nonatomic) UIResponder *_editingDelegateForEverythingExceptForms; // @synthesize _editingDelegateForEverythingExceptForms;
@property(retain, nonatomic) DOMNode *_currentAssistedNode; // @synthesize _currentAssistedNode;
@property(retain, nonatomic) NSObject<UIFormPeripheral> *_input; // @synthesize _input;
@property(retain, nonatomic) UIWebFormAccessory *_accessory; // @synthesize _accessory;
- (id)_collectAdditionalSubviews;
- (void)webViewDidCommitCompositingLayerChanges:(id)arg1;
- (void)_removeAdditionalSubview:(id)arg1;
- (void)_addAdditionalSubview:(id)arg1;
- (void)_noteOverflowScrollViewPendingDeletion:(id)arg1;
- (void)_noteOverflowScrollViewPendingInsertion:(id)arg1;
- (_Bool)_hasSubviewContainingWebContent:(id)arg1;
- (void)_overflowScrollView:(id)arg1 didEndScrollingForNode:(id)arg2;
- (void)_overflowScrollView:(id)arg1 scrollOffsetChangedForNode:(id)arg2 whileScrolling:(_Bool)arg3;
- (_Bool)appendOverflowScrollForNode:(id)arg1 offset:(struct CGPoint)arg2 whileScrolling:(_Bool)arg3;
- (void)_webThreadOverflowScrollOffsetChanged;
- (void)_overflowScrollView:(id)arg1 willStartScrollingForNode:(id)arg2;
- (void)webView:(id)arg1 willRemoveScrollingLayer:(id)arg2 withContentsLayer:(id)arg3 forNode:(id)arg4;
- (void)webView:(id)arg1 didCreateOrUpdateScrollingLayer:(id)arg2 withContentsLayer:(id)arg3 scrollSize:(id)arg4 forNode:(id)arg5 allowHorizontalScrollbar:(_Bool)arg6 allowVerticalScrollbar:(_Bool)arg7;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)redrawScaledDocument;
- (void)_removeFindOnPageHighlighter:(id)arg1;
- (id)addFindOnPageHighlighter;
- (_Bool)considerHeightOfRectOfInterestForRotation;
- (struct CGSize)contentSizeForScrollView:(id)arg1;
- (double)scaleForProposedNewScale:(double)arg1 andOldScale:(double)arg2;
- (struct CGRect)activeRectForRectOfInterest:(struct CGRect)arg1;
- (double)heightToKeepVisible;
- (double)minimumVerticalContentOffset;
- (struct CGRect)rectOfInterestForRotation;
- (void)updateBoundariesOfScrollView:(id)arg1 withScales:(CDStruct_39925896)arg2;
- (CDStruct_39925896)scalesForContainerSize:(struct CGSize)arg1;
@property(nonatomic) _Bool alwaysDispatchesScrollEvents;
- (void)webView:(id)arg1 didFirstVisuallyNonEmptyLayoutInFrame:(id)arg2;
- (id)_absoluteUrlRelativeToDocumentURL:(id)arg1;
- (void)_startURLificationIfNeededCoalesce:(_Bool)arg1;
- (void)_setSelectedDOMRangeAndUpdateUI:(id)arg1;
- (void)_clearSelectionAndUI;
- (_Bool)_dumpWebArchiveAtPath:(id)arg1;
- (void)_clearAllConsoleMessages;
- (void)clearMessagesMatchingMask:(int)arg1;
- (id)messagesMatchingMask:(int)arg1;
- (void)webView:(id)arg1 addMessageToConsole:(id)arg2 withSource:(id)arg3;
- (void)rotateEnclosingScrollViewToFrame:(struct CGRect)arg1;
- (struct CGSize)_defaultScrollViewContentSize;
- (void)_zoomToRect:(struct CGRect)arg1 withScale:(double)arg2;
- (void)_zoomToRect:(struct CGRect)arg1 ensuringVisibilityOfRect:(struct CGRect)arg2 withScale:(double)arg3 forceScroll:(_Bool)arg4 formAssistantFrame:(struct CGRect)arg5 animationDuration:(double)arg6;
- (void)_zoomToRect:(struct CGRect)arg1 ensuringVisibilityOfRect:(struct CGRect)arg2 withScale:(double)arg3 forceScroll:(_Bool)arg4;
- (void)_zoomToNode:(id)arg1 forceScroll:(_Bool)arg2;
- (void)_centerRect:(struct CGRect)arg1 forSizeChange:(_Bool)arg2 withVisibleHeight:(double)arg3 pinningEdge:(unsigned long long)arg4;
- (void)_centerRect:(struct CGRect)arg1 forSizeChange:(_Bool)arg2 withVisibleHeight:(double)arg3 pinningEdge:(unsigned long long)arg4 toValue:(double)arg5;
- (struct CGRect)_activeRectForRectToCenter:(struct CGRect)arg1;
- (void)webViewDidPreventDefaultForEvent:(id)arg1;
- (struct CGPoint)_convertWindowPointToViewport:(struct CGPoint)arg1;
@property(readonly, nonatomic) _Bool isDispatchingTouchEvents;
- (void)_webTouchEventsRecognized:(id)arg1;
- (void)_handleDeferredEvents;
- (void)_deferWebEvent:(id)arg1;
- (void)_endDeferringEvents;
- (void)_startDeferringEvents;
- (void)_dispatchWebEvent:(id)arg1;
- (_Bool)_shouldDeferEvents;
- (void)webView:(id)arg1 elementDidBlurNode:(id)arg2;
- (void)webView:(id)arg1 elementDidFocusNode:(id)arg2;
- (void)_webViewFormEditedStatusHasChanged:(id)arg1;
- (_Bool)_isAutoFilling;
- (_Bool)isAutoFillMode;
- (void)acceptedAutoFillWord:(id)arg1;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)_clearFormAutoFillStateForFrame:(id)arg1;
- (void)webView:(id)arg1 willCloseFrame:(id)arg2;
- (void)_autoFillFrame:(id)arg1;
- (void)_resetFormDataForFrame:(id)arg1;
- (id)textFormElement;
- (id)formElement;
- (void)formDelegateTextDidChange;
- (void)_scrollCaretToVisible:(id)arg1;
- (void)accessoryClear;
- (void)accessoryAutoFill;
- (void)accessoryTab:(_Bool)arg1;
- (void)accessoryDone;
@property(nonatomic) NSString *networkInterfaceName;
@property(nonatomic) unsigned int audioSessionCategoryOverride;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction;
@property(nonatomic) _Bool allowsInlineMediaPlayback;
- (void)assistFormNode:(id)arg1;
- (void)_assistFormNode:(id)arg1;
- (void)_endAllowingFocusRedirects;
- (void)_beginAllowingFocusRedirects;
- (void)_updateAccessory;
- (void)_updateAutoFillButton;
- (void)_displayFormNodeInputView;
- (void)_stopAssistingFormNode;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)simulateDidScroll;
- (void)_didScroll;
- (void)_updateScrollerViewForInputView:(id)arg1;
- (void)_updateFixedPositioningObjectsLayoutSoon;
- (void)_updateFixedPositionContent;
- (void)_updateFixedPositioningObjectsLayoutAfterVisibleGeometryChange;
- (void)_updateFixedPositioningObjectsLayoutAfterScroll;
- (void)_updateFixedPositioningObjectsLayoutDuringScroll;
- (void)_keyboardDidHide:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_keyboardDidChangeFrame:(id)arg1;
- (void)_keyboardWillChangeFrame:(id)arg1;
- (void)_setInputViewBoundsForAutomaticKeyboardInfo:(id)arg1 adjustScrollView:(_Bool)arg2;
- (void)_stopAssistingNode:(id)arg1;
- (void)_startAssistingNode:(id)arg1;
- (void)_stopAssistingKeyboard;
- (void)_startAssistingKeyboard;
- (void)_transliterateChinese:(id)arg1;
- (void)_promptForReplace:(id)arg1;
- (_Bool)playsNicelyWithGestures;
- (id)_editingDelegate;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)inputView;
- (id)inputAccessoryView;
- (void)_prevAccessoryTab:(id)arg1;
- (void)_nextAccessoryTab:(id)arg1;
- (id)keyCommands;
- (_Bool)resignFirstResponder;
- (id)textDocument;
- (id)_keyboardResponder;
- (_Bool)_requiresKeyboardResetOnReload;
- (_Bool)_requiresKeyboardWhenFirstResponder;
- (_Bool)_keepKeyboardVisibleDuringFocusRedirects;
- (_Bool)isEditable;
- (void)installGestureRecognizers;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithWebView:(id)arg1 frame:(struct CGRect)arg2;
- (_Bool)isAnyTouchOverActiveArea:(id)arg1;
- (_Bool)shouldIgnoreWebTouch;

@end

@interface UIWebClip : NSObject
{
    NSString *identifier;
    NSURL *pageURL;
    NSArray *icons;
    unsigned long long currentIconIndex;
    NSURL *startupImageURL;
    NSURL *startupLandscapeImageURL;
    NSString *title;
    _Bool fullScreen;
    _Bool classicMode;
    _Bool removalDisallowed;
    _Bool iconIsScreenShotBased;
    _Bool iconIsPrecomposed;
    _Bool iconIsPrerendered;
    unsigned long long supportedOrientations;
    long long statusBarStyle;
    UIImage *iconImage;
    UIImage *startupImage;
    UIImage *startupLandscapeImage;
    UIImage *initialLaunchImage;
    id delegate;
    NSString *dashcodePortName;
    NSString *dashcodeFrameworkPath;
    NSMutableData *_customIconData;
    NSURLConnection *_iconConnection;
    NSMutableData *_customStartupImageData;
    NSURLConnection *_startupImageConnection;
    NSMutableData *_customStartupLandscapeImageData;
    NSURLConnection *_startupLandscapeImageConnection;
}

+ (id)urlForWebClipWithIdentifier:(id)arg1;
+ (id)pathForWebClipCacheWithIdentifier:(id)arg1;
+ (id)pathForWebClipStorageWithIdentifier:(id)arg1;
+ (id)pathForWebClipWithIdentifier:(id)arg1;
+ (id)webClipsDirectoryPath;
+ (id)_webClipLinkTagsFromWebDocumentView:(id)arg1;
+ (id)webClipIconsForWebDocumentView:(id)arg1;
+ (id)webClipIconsForWebClipLinkTags:(id)arg1 pageURL:(id)arg2;
+ (unsigned long long)webClipOrientationsForWebDocumentView:(id)arg1;
+ (unsigned long long)_webClipOrientationsForMetaTagContent:(id)arg1;
+ (_Bool)webClipClassicModeValueForWebDocumentView:(id)arg1;
+ (id)webClipTitleForWebDocumentView:(id)arg1;
+ (_Bool)webClipFullScreenValueForWebDocumentView:(id)arg1;
+ (_Bool)_webClipFullScreenValueForMetaTagContent:(id)arg1;
+ (long long)webClipStatusBarStyleForWebDocumentView:(id)arg1;
+ (long long)_webClipStatusBarStyleForMetaTagContent:(id)arg1;
+ (id)_contentForMetaName:(id)arg1 inWebDocumentView:(id)arg2;
+ (id)webClipIdentifierFromBundleIdentifier:(id)arg1;
+ (_Bool)bundleIdentifierContainsWebClipIdentifier:(id)arg1;
+ (id)webClips;
+ (id)webClipWithURL:(id)arg1;
+ (id)webClipWithIdentifier:(id)arg1;
@property(retain) NSString *dashcodeFrameworkPath; // @synthesize dashcodeFrameworkPath;
@property(retain) NSString *dashcodePortName; // @synthesize dashcodePortName;
@property id delegate; // @synthesize delegate;
@property(retain, nonatomic) UIImage *initialLaunchImage; // @synthesize initialLaunchImage;
@property(retain, nonatomic) UIImage *startupLandscapeImage; // @synthesize startupLandscapeImage;
@property(retain, nonatomic) UIImage *startupImage; // @synthesize startupImage;
@property long long statusBarStyle; // @synthesize statusBarStyle;
@property unsigned long long supportedOrientations; // @synthesize supportedOrientations;
@property(readonly) _Bool iconIsPrerendered; // @synthesize iconIsPrerendered;
@property(readonly) _Bool iconIsPrecomposed; // @synthesize iconIsPrecomposed;
@property(readonly) _Bool iconIsScreenShotBased; // @synthesize iconIsScreenShotBased;
@property _Bool removalDisallowed; // @synthesize removalDisallowed;
@property _Bool classicMode; // @synthesize classicMode;
@property _Bool fullScreen; // @synthesize fullScreen;
@property(copy, nonatomic) NSString *title; // @synthesize title;
@property(retain) NSURL *startupLandscapeImageURL; // @synthesize startupLandscapeImageURL;
@property(retain) NSURL *startupImageURL; // @synthesize startupImageURL;
@property(retain) NSArray *icons; // @synthesize icons;
@property(retain, nonatomic) NSURL *pageURL; // @synthesize pageURL;
@property(copy) NSString *identifier; // @synthesize identifier;
- (id)getStartupImage:(long long)arg1;
- (void)requestCustomLandscapeStartupImageUpdate;
- (void)requestCustomPortraitStartupImageUpdate;
- (void)requestCustomIconUpdate;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (_Bool)tryLoadingNextCustomIcon;
- (void)updateCustomMediaLocationsFromWebDocumentView:(id)arg1;
- (void)updateCustomMediaLocationsWithWebClipLinkTags:(id)arg1 baseURL:(id)arg2;
- (void)requestIconUpdateInSpringBoard;
- (id)bundleIdentifier;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)stopLoadingStartupLandscapeImage;
- (void)stopLoadingStartupImage;
- (void)stopLoadingCustomIcon;
- (void)cancelMediaUpdate;
- (void)dealloc;
- (void)setIconImageFromScreenshot:(id)arg1;
- (void)setIconImage:(id)arg1 isPrecomposed:(_Bool)arg2;
- (void)_setIconImage:(id)arg1 isPrecomposed:(_Bool)arg2 isScreenShotBased:(_Bool)arg3;
@property(readonly, retain, nonatomic) UIImage *iconImage;
- (id)generateIconImageForFormat:(int)arg1 scale:(double)arg2;
@property(readonly) NSString *iconImagePath;
- (id)_bundleImageWithName:(id)arg1;
- (id)_bundleResourceWithName:(id)arg1;
- (id)_initWithIdentifier:(id)arg1;
- (_Bool)removeFromDisk;
- (_Bool)createOnDisk;
- (_Bool)updateOnDisk;
- (_Bool)_writeImage:(id)arg1 toDiskWithFileName:(id)arg2;
- (id)_info;
- (void)_reloadProperties;
- (void)_readPropertiesFromBundle:(struct __CFBundle *)arg1;
- (void)configureWithMetaTags:(id)arg1 linkTags:(id)arg2;

@end

@interface UIWebClipIcon : NSObject
{
    _Bool _precomposed;
    _Bool _siteWide;
    struct CGSize _bestSize;
    NSURL *_url;
}

@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) struct CGSize bestSize; // @synthesize bestSize=_bestSize;
@property(nonatomic, getter=isSiteWide) _Bool siteWide; // @synthesize siteWide=_siteWide;
@property(nonatomic, getter=isPrecomposed) _Bool precomposed; // @synthesize precomposed=_precomposed;
- (long long)compare:(id)arg1 preferringDeviceIconSizes:(_Bool)arg2;
- (void)dealloc;

@end

@interface UIWebClipLinkTag : NSObject
{
    _Bool _mediaMatchesPortraitOrientation;
    _Bool _mediaMatchesLandscapeOrientation;
    NSString *_href;
    NSString *_rel;
    NSString *_sizes;
}

@property(nonatomic) _Bool mediaMatchesLandscapeOrientation; // @synthesize mediaMatchesLandscapeOrientation=_mediaMatchesLandscapeOrientation;
@property(nonatomic) _Bool mediaMatchesPortraitOrientation; // @synthesize mediaMatchesPortraitOrientation=_mediaMatchesPortraitOrientation;
@property(copy, nonatomic) NSString *sizes; // @synthesize sizes=_sizes;
@property(copy, nonatomic) NSString *rel; // @synthesize rel=_rel;
@property(copy, nonatomic) NSString *href; // @synthesize href=_href;
- (void)dealloc;
@property(readonly, nonatomic) NSURL *hrefURL;

@end

__attribute__((visibility("hidden")))
@interface UIWebDateTimePopoverViewController : UIViewController
{
    id <UIWebFormControl> _innerWebDateTimeControl;
}

@property(retain, nonatomic) id <UIWebFormControl> _innerWebDateTimeControl; // @synthesize _innerWebDateTimeControl;
- (void)loadView;
- (void)dealloc;
- (id)initWithDOMHTMLInputElement:(id)arg1 datePickerMode:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIWebDefaultDateTimePicker : NSObject <UIWebFormControl>
{
    DOMHTMLInputElement *_inputElement;
    UIDatePicker *_datePicker;
    NSString *_formatString;
    _Bool _shouldRemoveTimeZoneInformation;
    _Bool _isTimeInput;
}

@property(retain, nonatomic) UIDatePicker *_datePicker; // @synthesize _datePicker;
@property(retain, nonatomic) DOMHTMLInputElement *_inputElement; // @synthesize _inputElement;
- (void)controlEndEditing;
- (void)controlBeginEditing;
- (id)_sanitizeInputValueForFormatter:(id)arg1;
- (id)controlView;
- (void)dealloc;
- (id)initWithDOMHTMLInputElement:(id)arg1 datePickerMode:(long long)arg2;
- (void)_dateChangeHandler:(id)arg1;
- (void)_dateChanged;
- (void)_dateChangedSetAsString;
- (void)_dateChangedSetAsNumber;
- (long long)_timeZoneOffsetFromGMT:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebRotatingNodePopover : NSObject <UIPopoverControllerDelegate>
{
    _Bool _isRotating;
    DOMNode *_node;
    struct CGPoint _presentationPoint;
    UIPopoverController *_popoverController;
    id <UIWebRotatingNodePopoverDelegate> _dismissDelegate;
}

@property(nonatomic) id <UIWebRotatingNodePopoverDelegate> dismissDelegate; // @synthesize dismissDelegate=_dismissDelegate;
@property(retain, nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
@property(nonatomic) struct CGPoint presentationPoint; // @synthesize presentationPoint=_presentationPoint;
@property(retain, nonatomic) DOMNode *node; // @synthesize node=_node;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)didRotate:(id)arg1;
- (void)willRotate:(id)arg1;
- (void)dismissPopoverAnimated:(_Bool)arg1;
- (void)presentPopoverAnimated:(_Bool)arg1;
- (unsigned long long)popoverArrowDirections;
- (void)dealloc;
- (id)initWithDOMNode:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebFormRotatingAccessoryPopover : UIWebRotatingNodePopover <UIWebRotatingNodePopoverDelegate>
{
}

- (void)popoverWasDismissed:(id)arg1;
- (unsigned long long)popoverArrowDirections;
- (void)accessoryDone;
- (id)initWithDOMNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebDefaultDateTimePopover : UIWebFormRotatingAccessoryPopover <UIWebFormControl>
{
    UIWebDateTimePopoverViewController *_webDateTimeViewController;
}

@property(retain, nonatomic) UIWebDateTimePopoverViewController *_webDateTimeViewController; // @synthesize _webDateTimeViewController;
- (void)controlEndEditing;
- (void)controlBeginEditing;
- (id)controlView;
- (void)dealloc;
- (id)initWithDOMHTMLInputElement:(id)arg1 datePickerMode:(long long)arg2;
- (void)clear:(id)arg1;

@end

@interface UIWebDocumentViewPrintFormatter : UIViewPrintFormatter
{
    UIWebPaginationInfo *_paginationInfo;
}

- (void)drawInRect:(struct CGRect)arg1 forPageAtIndex:(long long)arg2;
- (struct CGRect)rectForPageAtIndex:(long long)arg1;
- (long long)_recalcPageCount;
- (void)removeFromPrintPageRenderer;
- (id)_webDocumentView;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIWebDragDotView : UIView
{
    UIColor *m_insertionPointColor;
    UIColor *m_selectionBarColor;
    UIImageView *m_dot;
    int m_orientation;
    struct CGRect m_stickFrame;
    struct CGRect m_dotFrame;
}

@property(nonatomic) _Bool showsBall;
- (void)drawRect:(struct CGRect)arg1;
- (void)setEdge:(struct CGRect)arg1;
- (struct CGRect)stickFrameForEdge:(struct CGRect)arg1 withOverlap:(double)arg2;
- (_Bool)isPointedLeft;
- (_Bool)isPointedRight;
- (_Bool)isPointedUp;
- (_Bool)isPointedDown;
- (_Bool)isVertical;
- (void)dealloc;
- (id)initWithEdge:(struct CGRect)arg1 container:(id)arg2 orientation:(int)arg3;

@end

@interface UIWebElementAction : NSObject
{
    NSString *_title;
    CDUnknownBlockType _actionHandler;
    CDUnknownBlockType _dismissalHandler;
    int _type;
}

+ (id)standardElementActionWithType:(int)arg1;
+ (id)standardElementActionWithType:(int)arg1 customTitle:(id)arg2;
+ (id)customElementActionWithTitle:(id)arg1 actionHandler:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType dismissalHandler; // @synthesize dismissalHandler=_dismissalHandler;
@property(readonly, nonatomic) int type; // @synthesize type=_type;
- (void)_runActionWithElement:(id)arg1 targetURL:(id)arg2 documentView:(id)arg3 interactionLocation:(struct CGPoint)arg4;
- (id)_title;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 actionHandler:(CDUnknownBlockType)arg2 type:(int)arg3;

@end

@interface UIWebElementActionInfo : NSObject
{
    struct CGPoint _interactionLocation;
}

@property(readonly, nonatomic) struct CGPoint interactionLocation; // @synthesize interactionLocation=_interactionLocation;
- (void)_setInteractionLocation:(struct CGPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebFileUploadPanel : UIViewController <UINavigationControllerDelegate, UIImagePickerControllerDelegate, UIPopoverControllerDelegate>
{
    UIAlertController *_selectPickerTypeSheet;
    UIImagePickerController *_imagePicker;
    UIViewController *_presentationViewController;
    UIPopoverController *_presentationPopover;
    _Bool _documentViewPresentedViewController;
    struct CGPoint _interactionPoint;
    DOMNode *_interactionElement;
    _Bool _allowMultipleFiles;
    _Bool _isUsingCamera;
    NSArray *_mimeTypes;
    UIWebDocumentView *_documentView;
    NSObject<WebOpenPanelResultListener> *_resultListener;
    id <UIWebFileUploadPanelDelegate> _delegate;
}

@property(nonatomic) id <UIWebFileUploadPanelDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool isUsingCamera; // @synthesize isUsingCamera=_isUsingCamera;
@property(nonatomic) _Bool allowMultipleFiles; // @synthesize allowMultipleFiles=_allowMultipleFiles;
@property(retain, nonatomic) NSObject<WebOpenPanelResultListener> *resultListener; // @synthesize resultListener=_resultListener;
@property(nonatomic) UIWebDocumentView *documentView; // @synthesize documentView=_documentView;
@property(copy, nonatomic) NSArray *mimeTypes; // @synthesize mimeTypes=_mimeTypes;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMultipleMediaWithInfo:(id)arg2;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (_Bool)_willMultipleSelectionDelegateBeCalled;
- (id)_thumbnailSizedImageForImage:(id)arg1;
- (void)_processMediaInfoDictionaries:(id)arg1 atIndex:(unsigned long long)arg2 processedResults:(id)arg3 processedImageCount:(unsigned long long)arg4 processedVideoCount:(unsigned long long)arg5 successBlock:(CDUnknownBlockType)arg6 failureBlock:(CDUnknownBlockType)arg7;
- (void)_processMediaInfoDictionaries:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (id)_displayStringForPhotos:(unsigned long long)arg1 videos:(unsigned long long)arg2;
- (void)_temporaryFilePathForOriginalImage:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)_filePathFromMediaInfo:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (id)_filePathForMediaURL:(id)arg1;
- (double)_compressionQuality;
- (void)_dismissDisplayAnimated:(_Bool)arg1;
- (void)dismiss;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)present;
- (void)_presentFullscreenViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_presentPopoverWithContentViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_showMediaSourceSelectionSheet;
- (void)_showPhotoPickerWithSourceType:(long long)arg1;
- (id)_photoPickerWithSourceType:(long long)arg1;
- (id)_mediaTypesForPickerSourceType:(long long)arg1;
- (_Bool)_string:(id)arg1 hasPrefixCaseInsensitive:(id)arg2;
- (void)_chooseFilenames:(id)arg1 displayString:(id)arg2 iconImage:(id)arg3;
- (void)_chooseFilename:(id)arg1 displayString:(id)arg2 iconImage:(id)arg3;
- (void)_cancel;
- (void)_dispatchDidDismiss;
- (void)dealloc;
- (id)initWithResultListener:(id)arg1 mimeTypes:(id)arg2 allowMultipleFiles:(_Bool)arg3 documentView:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIWebFormAccessory : UIInputView
{
    UIToolbar *_leftToolbar;
    UIToolbar *_rightToolbar;
    UIBarButtonItem *_doneButton;
    UIBarButtonItem *_flexibleSpaceItem;
    UIBarButtonItem *_previousItem;
    UIBarButtonItem *_nextItem;
    UISegmentedControl *_tab;
    UIBarButtonItem *_autofill;
    UIBarButtonItem *_clearButton;
    id <UIWebFormAccessoryDelegate> delegate;
}

+ (id)toolbarWithItems:(id)arg1;
@property(nonatomic) id <UIWebFormAccessoryDelegate> delegate; // @synthesize delegate;
@property(retain, nonatomic) UIBarButtonItem *_clearButton; // @synthesize _clearButton;
@property(retain, nonatomic) UIBarButtonItem *_autofill; // @synthesize _autofill;
@property(retain, nonatomic) UISegmentedControl *_tab; // @synthesize _tab;
@property(nonatomic, getter=isPreviousEnabled) _Bool previousEnabled;
@property(nonatomic, getter=isNextEnabled) _Bool nextEnabled;
- (void)setClearVisible:(_Bool)arg1;
- (void)showAutoFillButton;
- (void)showAutoFillButtonWithTitle:(id)arg1;
- (void)hideAutoFillButton;
- (void)_applyTreatmentToAutoFillLabel;
- (void)_refreshAutofillPresentation;
- (id)_autoFillButton;
- (void)clear:(id)arg1;
- (void)autoFill:(id)arg1;
- (void)_nextTapped:(id)arg1;
- (void)_previousTapped:(id)arg1;
- (void)_tabSegmentedControlDidChange:(id)arg1;
- (void)done:(id)arg1;
- (void)layoutSubviews;
- (void)_updateFrame;
- (void)_orientationDidChange:(id)arg1;
- (void)_setRenderConfig:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebFormDateTimePeripheral : NSObject <UIFormPeripheral>
{
    DOMHTMLInputElement *_inputElement;
    id <UIWebFormControl> _control;
}

+ (id)createPeripheralWithDOMHTMLInputElement:(id)arg1;
@property(retain, nonatomic) id <UIWebFormControl> _control; // @synthesize _control;
@property(retain, nonatomic) DOMHTMLInputElement *_inputElement; // @synthesize _inputElement;
- (id)assistantView;
- (void)endEditing;
- (void)beginEditing;
- (void)dealloc;
- (id)initWithDOMHTMLInputElement:(id)arg1;
- (long long)_datePickerModeForInputType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebFormDelegate : NSObject <WebFormDelegate>
{
    UIWebBrowserView *_webBrowserView;
    _UIWebFormDelegateEditedFormsMap *_editedForms;
}

- (void)acceptedAutoFillWord:(id)arg1;
- (_Bool)hasCurrentSuggestions;
- (CDStruct_856ef1b3)suggestionsForString:(id)arg1 inputIndex:(unsigned int)arg2;
- (_Bool)formWasEdited;
- (void)dataSourceHasChangedForFrame:(id)arg1;
- (id)initWithWebBrowserView:(id)arg1;
- (void)willSendSubmitEventToForm:(id)arg1 inFrame:(id)arg2 withValues:(id)arg3;
- (void)didFocusTextField:(id)arg1 inFrame:(id)arg2;
- (_Bool)textField:(id)arg1 doCommandBySelector:(SEL)arg2 inFrame:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1 inFrame:(id)arg2;
- (void)textFieldDidBeginEditing:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextField:(id)arg1 inFrame:(id)arg2;
- (void)textDidChangeInTextArea:(id)arg1 inFrame:(id)arg2;
- (void)frame:(id)arg1 sourceFrame:(id)arg2 willSubmitForm:(id)arg3 withValues:(id)arg4 submissionListener:(id)arg5;
- (void)dealloc;
- (void)_clearEditedFormsInFrame:(id)arg1;
- (_Bool)_shouldIgnoreFormTextChangesInFrame:(id)arg1;
- (void)_didEditFormElement:(id)arg1 inFrame:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebFormSelectPeripheral : NSObject <UIFormPeripheral>
{
    DOMHTMLSelectElement *_selectionNode;
    id <UIWebFormControl> _selectControl;
}

+ (id)createPeripheralWithDOMHTMLSelectElement:(id)arg1;
@property(retain, nonatomic) id <UIWebFormControl> _selectControl; // @synthesize _selectControl;
@property(retain, nonatomic) DOMHTMLSelectElement *_selectionNode; // @synthesize _selectionNode;
- (void)endEditing;
- (void)beginEditing;
- (id)assistantView;
- (void)dealloc;
- (id)initWithDOMHTMLSelectElement:(id)arg1;

@end

@interface UIWebGeolocationPolicyDecider : NSObject
{
    NSMutableDictionary *_sites;
    NSMutableArray *_challenges;
    NSMapTable *_activeChallenges;
}

+ (id)sharedPolicyDecider;
+ (void)initialize;
- (void)decidePolicyForGeolocationRequestFromOrigin:(id)arg1 requestingURL:(id)arg2 window:(id)arg3 listener:(id)arg4;
- (void)webView:(id)arg1 decidePolicyForGeolocationRequestFromOrigin:(id)arg2 frame:(id)arg3 listener:(id)arg4;
- (void)_decidePolicyForGeolocationRequestFromOrigin:(id)arg1 requestingURL:(id)arg2 window:(id)arg3 listener:(id)arg4;
- (void)_executeNextChallenge;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (long long)_getChallengeCountFromHistoryForToken:(id)arg1 requestingURL:(id)arg2;
- (void)clearAuthorizationsAddedBetween:(id)arg1 and:(id)arg2;
- (_Bool)_isAuthorizationDate:(id)arg1 inclusivelyBetweenDate:(id)arg2 andDate:(id)arg3;
- (void)clearAllCaches;
- (void)clearCache;
- (void)_save;
- (void)_load;
- (id)_siteFile;
- (id)_siteFileInContainerDirectory:(id)arg1 creatingIntermediateDirectoriesIfNecessary:(_Bool)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIWebLayer : CALayer
{
    _Bool _layoutsSuspended;
}

- (void)setLayoutsSuspended:(_Bool)arg1;
- (void)setNeedsLayout;

@end

__attribute__((visibility("hidden")))
@interface UIWebOptGroup : NSObject
{
    id <UIWebSelectedItemPrivate> _group;
    NSArray *_options;
    long long _offset;
}

@property(retain, nonatomic) NSArray *options; // @synthesize options=_options;
@property(retain, nonatomic) id <UIWebSelectedItemPrivate> group; // @synthesize group=_group;
@property(readonly, nonatomic) long long offset; // @synthesize offset=_offset;
- (void)dealloc;
- (id)initWithGroup:(id)arg1 itemOffset:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIWebOverflowContentView : UIView
{
}

- (void)_setCachedSubviews:(id)arg1;
- (void)_replaceLayer:(id)arg1;
- (void)fixUpViewAfterInsertion;
- (id)superview;
- (id)initWithLayer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebOverflowScrollInfo : NSObject
{
    _Bool _isUserScroll;
    DOMNode *_node;
    struct CGPoint _offset;
}

@property(nonatomic) _Bool isUserScroll; // @synthesize isUserScroll=_isUserScroll;
@property(nonatomic) struct CGPoint offset; // @synthesize offset=_offset;
@property(retain, nonatomic) DOMNode *node; // @synthesize node=_node;
- (_Bool)coalesceScrollForNode:(id)arg1 offset:(struct CGPoint)arg2 isUserScroll:(_Bool)arg3;
- (void)dealloc;
- (id)initWithNode:(id)arg1 offset:(struct CGPoint)arg2 isUserScroll:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIWebOverflowScrollListener : NSObject <UIScrollViewDelegate>
{
    UIWebOverflowScrollView *_scrollView;
}

- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)_didCompleteScrolling;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)initWithScrollView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebOverflowScrollView : UIScrollView
{
    UIWebBrowserView *_webBrowserView;
    UIWebOverflowScrollListener *_scrollListener;
    UIWebOverflowContentView *_overflowContentView;
    DOMNode *_node;
    _Bool _beingRemoved;
}

@property(nonatomic, getter=isBeingRemoved) _Bool beingRemoved; // @synthesize beingRemoved=_beingRemoved;
@property(retain, nonatomic) DOMNode *node; // @synthesize node=_node;
@property(retain, nonatomic) UIWebOverflowContentView *overflowContentView; // @synthesize overflowContentView=_overflowContentView;
@property(retain, nonatomic) UIWebOverflowScrollListener *scrollListener; // @synthesize scrollListener=_scrollListener;
@property(nonatomic) UIWebBrowserView *webBrowserView; // @synthesize webBrowserView=_webBrowserView;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)_replaceLayer:(id)arg1;
- (void)prepareForRemoval;
- (_Bool)fixUpViewAfterInsertion;
- (id)superview;
- (void)dealloc;
- (id)initWithLayer:(id)arg1 node:(id)arg2 webBrowserView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIWebOverflowScrollViewInfo : NSObject
{
    UIWebOverflowScrollView *_scrollView;
    CALayer *_scrollViewLayer;
    UIView *_oldSuperview;
}

@property(retain, nonatomic) UIView *oldSuperview; // @synthesize oldSuperview=_oldSuperview;
@property(retain, nonatomic) UIWebOverflowScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)dealloc;
- (id)initWithScrollView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebPDFLabelView : UIView
{
    UILabel *_label;
    _UIBackdropView *_backdropView;
    NSTimer *_timer;
    unsigned long long currentPageIndex;
}

@property(nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex;
- (void)_makeRoundedCorners;
- (void)fadeOut;
- (void)_fadeOutAnimationDidStop:(id)arg1 finished:(id)arg2;
- (void)showNowInSuperView:(id)arg1 atOrigin:(struct CGPoint)arg2 withText:(id)arg3 animated:(_Bool)arg4;
- (double)_fadeOutDuration;
- (double)_fadeOutDelay;
@property(readonly, nonatomic, getter=isTimerInstalled) _Bool timerInstalled;
- (void)setText:(id)arg1;
- (void)sizeToFit;
- (void)dealloc;
- (void)clearTimer;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface UIWebPDFLinkAction : NSObject
{
    int type;
    NSString *title;
    CDUnknownBlockType handler;
}

@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler;
@property(nonatomic) int type; // @synthesize type;
@property(copy, nonatomic) NSString *title; // @synthesize title;
- (void)dealloc;

@end

@interface UIWebPDFSearchController : NSObject <UIWebPDFSearchOperationDelegate>
{
    unsigned long long _resultIndexWhenLimitHit;
    _Bool _notifiedThatSearchBegin;
    unsigned long long _pageIndexWhenLimitHit;
    NSOperationQueue *_searchQueue;
    NSMutableArray *_results;
    NSString *_searchString;
    UIPDFDocument *_documentToSearch;
    NSObject<UIWebPDFSearchControllerDelegate> *searchDelegate;
    unsigned long long startingPageIndex;
    double documentScale;
    unsigned long long resultLimit;
}

@property(retain, nonatomic) NSArray *results; // @synthesize results=_results;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(nonatomic) unsigned long long resultLimit; // @synthesize resultLimit;
@property(nonatomic) double documentScale; // @synthesize documentScale;
@property(nonatomic) unsigned long long startingPageIndex; // @synthesize startingPageIndex;
@property(nonatomic) NSObject<UIWebPDFSearchControllerDelegate> *searchDelegate; // @synthesize searchDelegate;
@property(retain, nonatomic) UIPDFDocument *documentToSearch; // @synthesize documentToSearch=_documentToSearch;
- (void)search:(id)arg1 hasPartialResults:(id)arg2;
- (void)searchDidFinish:(id)arg1;
- (void)searchLimitHit:(id)arg1;
- (void)searchWasCancelled:(id)arg1;
- (void)searchDidTimeOut:(id)arg1;
- (void)searchDidBegin:(id)arg1;
- (void)resume;
- (void)pause;
- (void)cancel;
- (void)_clearSearchQueue;
- (void)search:(id)arg1;
- (unsigned long long)_actualStartingPageIndex;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) _Bool paused;
@property(readonly, nonatomic) _Bool searching;

@end

__attribute__((visibility("hidden")))
@interface UIWebPDFSearchOperation : NSOperation
{
    NSMutableArray *_results;
    unsigned long long _pageIndex;
    unsigned long long _numberOfResultsToSkip;
    unsigned long long _totalResultsCount;
    unsigned long long _currentPageResultCount;
    _Bool _complete;
    unsigned long long startingPageIndex;
    UIPDFDocument *documentToSearch;
    NSObject<UIWebPDFSearchOperationDelegate> *searchDelegate;
    double documentScale;
    NSString *searchString;
    unsigned long long resultLimit;
}

@property(nonatomic) unsigned long long resultLimit; // @synthesize resultLimit;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString;
@property(nonatomic) unsigned long long numberOfResultsToSkip; // @synthesize numberOfResultsToSkip=_numberOfResultsToSkip;
@property(nonatomic) double documentScale; // @synthesize documentScale;
@property NSObject<UIWebPDFSearchOperationDelegate> *searchDelegate; // @synthesize searchDelegate;
@property(retain) UIPDFDocument *documentToSearch; // @synthesize documentToSearch;
@property(readonly, nonatomic) unsigned long long currentPageIndex; // @synthesize currentPageIndex=_pageIndex;
@property(nonatomic) unsigned long long startingPageIndex; // @synthesize startingPageIndex;
@property(readonly, nonatomic) unsigned long long currentPageResultCount; // @synthesize currentPageResultCount=_currentPageResultCount;
- (void)cancel;
- (void)main;
- (void)_search;
- (id)sanitizedAttributedStringForAttributedString:(id)arg1;
- (struct __CTFont *)_fontWithPDFFont:(struct CGPDFFont *)arg1 size:(double)arg2;
- (void)_notifyDelegateOfStatus;
- (_Bool)_hitSearchLimit;
- (void)dealloc;
- (id)init;

@end

@interface UIWebPDFSearchResult : NSObject
{
    NSArray *rotationAngles;
    unsigned long long pageIndex;
    NSArray *strings;
    NSString *string;
    NSArray *rects;
    struct CGRect boundingBox;
}

@property(retain, nonatomic) NSArray *rects; // @synthesize rects;
@property(nonatomic) struct CGRect boundingBox; // @synthesize boundingBox;
@property(retain, nonatomic) NSString *string; // @synthesize string;
@property(retain, nonatomic) NSArray *strings; // @synthesize strings;
@property(nonatomic) unsigned long long pageIndex; // @synthesize pageIndex;
@property(retain, nonatomic) NSArray *rotationAngles; // @synthesize rotationAngles;
- (id)description;

@end

@interface UIWebPDFView : UIView <UIPDFPageViewDelegate, UIPDFAnnotationControllerDelegate, WebPDFViewPlaceholderDelegate, UIPopoverControllerDelegate, UIGestureRecognizerDelegate>
{
    NSMutableArray *_backingLayerImageViews;
    struct CGPDFDocument *_cgPDFDocument;
    UIPDFDocument *_document;
    _Bool _hasScheduledCacheUpdate;
    struct CGRect _documentBounds;
    NSObject<UIWebPDFViewDelegate> *_pdfDelegate;
    _Bool _delegateRespondsToDidScroll;
    UITapGestureRecognizer *_tapGestureRecognizer;
    NSURL *_documentURL;
    _Bool _rotating;
    _Bool _zooming;
    double _initialZoomScale;
    struct CGAffineTransform _documentTransform;
    double _documentScale;
    long long _ignoreContentOffsetChanges;
    struct CGPoint _contentOffsetAtScrollStart;
    NSMutableArray *_pageViews;
    NSArray *_pageMinYs;
    _Bool hidePageViewsUntilReadyToRender;
    _Bool hideActivityIndicatorForUnRenderedContent;
    _Bool readyForSnapshot;
    WebPDFViewPlaceholder *pdfPlaceHolderView;
    UIColor *backgroundColorForUnRenderedContent;
    NSString *documentPassword;
    NSArray *pageRects;
}

+ (void)setAsPDFDocRepAndView;
+ (void)initialize;
@property(retain, nonatomic) NSArray *pageMinYs; // @synthesize pageMinYs=_pageMinYs;
@property(nonatomic) _Bool readyForSnapshot; // @synthesize readyForSnapshot;
@property(retain, nonatomic) NSArray *pageRects; // @synthesize pageRects;
@property(retain, nonatomic) NSString *documentPassword; // @synthesize documentPassword;
@property(nonatomic) _Bool hideActivityIndicatorForUnRenderedContent; // @synthesize hideActivityIndicatorForUnRenderedContent;
@property(retain, nonatomic) UIColor *backgroundColorForUnRenderedContent; // @synthesize backgroundColorForUnRenderedContent;
@property(nonatomic) _Bool hidePageViewsUntilReadyToRender; // @synthesize hidePageViewsUntilReadyToRender;
@property(nonatomic) long long ignoreContentOffsetChanges; // @synthesize ignoreContentOffsetChanges=_ignoreContentOffsetChanges;
@property WebPDFViewPlaceholder *pdfPlaceHolderView; // @synthesize pdfPlaceHolderView;
@property(readonly, nonatomic) double documentScale; // @synthesize documentScale=_documentScale;
@property(nonatomic) struct CGAffineTransform documentTransform; // @synthesize documentTransform=_documentTransform;
@property(nonatomic) double initialZoomScale; // @synthesize initialZoomScale=_initialZoomScale;
@property(readonly, nonatomic) struct CGRect documentBounds; // @synthesize documentBounds=_documentBounds;
@property(nonatomic) NSObject<UIWebPDFViewDelegate> *pdfDelegate; // @synthesize pdfDelegate=_pdfDelegate;
@property(retain, nonatomic) NSURL *documentURL; // @synthesize documentURL=_documentURL;
- (id)imageForContactRect:(struct CGRect)arg1 onPageInViewRect:(struct CGRect)arg2 destinationRect:(struct CGRect)arg3;
- (unsigned long long)_pageNumberForRect:(struct CGRect)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_tapGestureRecognized:(id)arg1;
- (void)_define:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)_selection;
- (id)_pageWithSelection;
- (void)clearSelection;
- (void)annotation:(id)arg1 isBeingPressedAtPoint:(struct CGPoint)arg2 controller:(id)arg3;
- (void)annotation:(id)arg1 wasTouchedAtPoint:(struct CGPoint)arg2 controller:(id)arg3;
- (void)_didLongPress:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4;
- (void)_didLongPress:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToURL:(id)arg4;
- (void)_didTouch:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToPageIndex:(unsigned long long)arg4;
- (void)_didTouch:(id)arg1 inRect:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 linkingToURL:(id)arg4;
- (void)resetZoom:(id)arg1;
- (void)zoom:(id)arg1 to:(struct CGRect)arg2 atPoint:(struct CGPoint)arg3 kind:(int)arg4;
- (void)didCompleteLayout;
- (void)_recreateUIPDFDocument;
- (_Bool)_checkIfDocumentNeedsUnlock;
- (_Bool)_tryToUnlockDocumentWithPassword:(id)arg1;
- (void)viewWillClose;
- (void)snapshotComplete;
- (void)prepareForSnapshot:(_Bool)arg1;
- (unsigned long long)firstVisiblePageNumber;
- (void)didZoom:(id)arg1;
- (void)willZoom:(id)arg1;
- (void)didRotate:(id)arg1;
- (void)willRotate:(id)arg1;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)_didScroll;
- (void)willScroll:(id)arg1;
- (void)ensureCorrectPagesAreInstalled:(_Bool)arg1;
- (void)_scheduleRemovePageViewsNotInViewCoordsRect;
- (void)_removePageViewsNotInCurrentViewCoordsRect;
- (void)_removePageViewsNotInViewCoordsRect:(struct CGRect)arg1;
- (id)_addPageAtIndex:(unsigned long long)arg1;
- (void)_addSubViewsInViewCoordsBounds:(struct CGRect)arg1 force:(_Bool)arg2;
- (id)_installViewAtIndex:(long long)arg1 inFrame:(struct CGRect)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (struct CGRect)_viewCachingBoundsInUIViewCoords;
- (struct CGRect)_viewportBoundsInUIViewCoords;
- (struct CGRect)_viewportBoundsInUIVIewCoordsWithView:(id)arg1;
- (id)viewportView;
- (id)viewAtIndex:(long long)arg1;
- (void)dealloc;
- (void)_removeBackgroundImageObserverIfNeeded:(id)arg1;
- (id)initWithWebPDFViewPlaceholder:(id)arg1;
@property(readonly, nonatomic) NSData *documentData;
@property(readonly, nonatomic) UIPDFDocument *document;
- (id)uiPDFDocument;
@property(readonly, nonatomic) struct CGPDFDocument *cgPDFDocument;
- (_Bool)_hasPageRects;
@property(readonly, nonatomic) unsigned long long totalPages;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UIWebPDFViewHandler : NSObject <UIWebPDFViewPrivateDelegate, UIDocumentPasswordViewDelegate, _UIRotatingAlertControllerDelegate, UIWebPDFViewDelegate, _UIWebDoubleTapDelegate, _UIWebRotationDelegate>
{
    UIWebPDFView *_pdfView;
    _Bool _scalesPageToFit;
    double _initialZoomScale;
    NSObject<UIWebPDFViewHandlerDelegate> *_pdfHandlerDelegate;
    _UIHighlightView *_linkHighlightView;
    UIWebPDFLabelView *_pageLabelView;
    _Bool _showPageLabels;
    _Bool _showsShadowsForHTMLContent;
    _Bool _cachedScrollViewShadowsState;
    UIDocumentPasswordView *_passwordEntryView;
    NSMapTable *_searchControllers;
    UIColor *_backgroundColorForUnRenderedContent;
    _Bool _hideActivityIndicatorForUnRenderedContent;
    _Bool _hidePageViewsUntilReadyToRender;
    WebPDFNSNumberFormatter *_labelViewFormatter;
    struct _PDFHistoryItem _pendingHistoryItemRestore;
    _UIRotatingAlertController *_linkActionSheet;
    NSDictionary *_linkActionInfo;
    NSArray *_linkActions;
    struct CGRect _rectOfInterest;
    _Bool _rectOfInterestConsidersHeight;
    UIAlertView *_currentAlert;
}

@property(nonatomic) _Bool hideActivityIndicatorForUnRenderedContent; // @synthesize hideActivityIndicatorForUnRenderedContent=_hideActivityIndicatorForUnRenderedContent;
@property(retain, nonatomic) UIColor *backgroundColorForUnRenderedContent; // @synthesize backgroundColorForUnRenderedContent=_backgroundColorForUnRenderedContent;
@property(nonatomic) _Bool hidePageViewsUntilReadyToRender; // @synthesize hidePageViewsUntilReadyToRender=_hidePageViewsUntilReadyToRender;
@property(nonatomic) NSObject<UIWebPDFViewHandlerDelegate> *pdfHandlerDelegate; // @synthesize pdfHandlerDelegate=_pdfHandlerDelegate;
@property(nonatomic) _Bool scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
@property(nonatomic) _Bool showPageLabels; // @synthesize showPageLabels=_showPageLabels;
- (void)rotateEnclosingScrollViewToFrame:(struct CGRect)arg1;
- (unsigned long long)_verticalEdgeForContentOffsetInScrollView:(id)arg1;
- (double)_pinValueForVerticalEdge:(unsigned long long)arg1 inScrollView:(id)arg2;
- (_Bool)considerHeightOfRectOfInterestForRotation;
- (struct CGRect)activeRectForRectOfInterest:(struct CGRect)arg1;
- (double)heightToKeepVisible;
- (double)minimumVerticalContentOffset;
- (struct CGRect)rectOfInterestForRotation;
- (void)updateBoundariesOfScrollView:(id)arg1 withScales:(CDStruct_39925896)arg2;
- (_Bool)considerHeightForDoubleTap;
- (CDStruct_39925896)doubleTapScalesForSize:(struct CGSize)arg1;
- (struct CGRect)rectOfInterestForPoint:(struct CGPoint)arg1;
- (double)minimumScaleForSize:(struct CGSize)arg1;
- (struct CGRect)visibleContentRect;
- (double)currentDocumentScale;
- (double)zoomedDocumentScale;
- (id)contentView;
- (id)enclosingScrollView;
- (void)restoreStateFromHistoryItem:(id)arg1 forWebView:(id)arg2;
- (void)restoreStateFromPendingHistoryItem;
- (void)saveStateToHistoryItem:(id)arg1 forWebView:(id)arg2;
- (CDStruct_39925896)scalesForContainerSize:(struct CGSize)arg1;
- (void)revealSearchResult:(id)arg1 andZoomIn:(_Bool)arg2;
- (void)_resultRects:(id)arg1 andResultViews:(id)arg2 forSearchResult:(id)arg3 inViewCoordinates:(id)arg4;
- (void)handleScrollToAnchor:(id)arg1;
- (void)updatePageNumberLabelWithUserScrolling:(_Bool)arg1 animated:(_Bool)arg2;
- (id)_getLabelViewFormatter;
- (void)updateViewHierarchyForFirstNonEmptyLayoutInFrame:(id)arg1;
- (void)updateViewHierarchyForDocumentViewLoadComplete:(id)arg1;
- (void)updateViewHierarchyForDocumentViewTabSwitch:(id)arg1;
- (void)updateViewHierarchyForDocumentViewTabSwitch:(id)arg1 restoringZoomScale:(double)arg2 andScrollPt:(struct CGPoint)arg3;
- (void)updateViewHierarchyForDocumentViewNewLoad:(id)arg1;
- (void)removeViewFromSuperview;
@property(readonly, nonatomic) UIView *frontView;
@property(readonly, nonatomic) UIWebPDFView *pdfView;
- (void)ensureCorrectPagesAreInstalled:(_Bool)arg1;
- (void)didScroll:(id)arg1;
- (id)passwordForPDFView:(id)arg1;
- (void)resetZoom:(id)arg1;
- (void)pdfView:(id)arg1 zoomToRect:(struct CGRect)arg2 forPoint:(struct CGPoint)arg3 considerHeight:(_Bool)arg4;
- (void)didDetermineDocumentBounds:(id)arg1;
- (void)_postdidDetermineDocumentBounds;
- (void)_showPasswordEntryViewForFile:(id)arg1;
- (void)didEndEditingPassword:(id)arg1 inView:(id)arg2;
- (void)didBeginEditingPassword:(id)arg1 inView:(id)arg2;
- (void)_keyboardDidShow:(id)arg1;
- (void)_adjustContentOffsetForKeyboardIfNeeded;
- (void)userDidEnterPassword:(id)arg1 forPasswordView:(id)arg2;
- (void)_showPasswordErrorAlert;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)createPageLabel;
- (void)clearPageLabel;
- (struct CGRect)presentationRectInHostViewForSheet:(id)arg1;
- (struct CGRect)initialPresentationRectInHostViewForSheet:(id)arg1;
- (id)hostViewForSheet:(id)arg1;
- (void)performAction:(id)arg1 fromAlertController:(id)arg2;
- (void)handleLongPressOnLink:(id)arg1 atPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 contentRect:(struct CGRect)arg4;
- (void)_showLinkSheet:(id)arg1;
- (id)_actionsForInteractionInfo:(id)arg1;
- (id)_actionForType:(int)arg1;
- (void)clearActionSheet;
- (void)handleLinkClick:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_notifyDelegateDidClickLink:(id)arg1;
- (void)_notifyDelegateWillClickLink:(id)arg1;
- (void)_completeLinkClickWithURLString:(id)arg1;
- (void)_completeLinkClickWithURL:(id)arg1;
- (id)_absoluteUrlRelativeToDocumentURL:(id)arg1;
- (void)scrollToPageNumber:(long long)arg1 animate:(_Bool)arg2;
- (void)highlightRect:(struct CGRect)arg1;
- (id)createLinkHighlight;
- (void)clearLinkHighlight;
- (void)adjustZoomScalesForScrollView;
- (void)_adjustZoomScalesForScrollViewInternal:(id)arg1;
- (void)updateViewSettings;
- (void)_updateViewHierarchyForDocumentView:(id)arg1 ignoreIfSame:(_Bool)arg2;
- (void)_ensurePDFViewInHierarchyForWebDocView:(id)arg1;
- (void)_createPDFViewIfNeeded:(id)arg1;
- (void)_removePDFViewIfWebDocViewIsNotSamePDF:(id)arg1;
- (void)_removePDFViewIfWebDocViewIsNotPDF:(id)arg1;
- (void)_replacePDFViewIfPresentWithWebDocView:(id)arg1;
- (struct CGRect)_rectForPasswordView:(id)arg1;
- (struct CGRect)_frameForDocumentBounds:(struct CGRect)arg1;
- (struct CGRect)_rectForPdfView:(struct CGRect)arg1;
- (id)_getPDFDocumentViewForWebView:(id)arg1;
- (id)_scroller:(id)arg1;
- (void)clearAllViews;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)findOnPageHighlighter;
- (void)clearSearchControllerForHighlighter:(id)arg1;
- (id)searchControllerForHighlighter:(id)arg1;
- (void)_setSearchControllerDocumentToSearch:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebPaginationInfo : NSObject
{
    NSObject<WebDocumentView> *_documentView;
    double _scaleFactor;
    struct CGSize _layoutSize;
    NSArray *_pageRects;
    UIWebDocumentView *_webDocumentView;
}

@property(retain, nonatomic) UIWebDocumentView *webDocumentView; // @synthesize webDocumentView=_webDocumentView;
- (id)documentView;
- (id)pageRects;
- (struct CGSize)layoutSize;
- (double)scaleFactor;
- (struct CGSize)sizeForPageAtIndex:(long long)arg1;
@property(readonly, nonatomic) double lastPageHeight;
@property(readonly, nonatomic) unsigned long long pageCount;
- (void)dealloc;
- (id)initWithDocumentView:(id)arg1 scaleFactor:(double)arg2 layoutSize:(struct CGSize)arg3 pageRects:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface UIWebPlaybackTargetPicker : UIView <UIPopoverControllerDelegate>
{
    MPAVRoutingController *_routingController;
    MPAudioVideoRoutingPopoverController *_popoverController;
    MPAudioVideoRoutingActionSheet *_actionSheet;
    UIWebDocumentView *_delegate;
}

- (void)show:(_Bool)arg1 fromRect:(struct CGRect)arg2;
- (void)showAirPlayPickerIPhone:(unsigned long long)arg1;
- (void)showAirPlayPickerIPad:(unsigned long long)arg1 fromRect:(struct CGRect)arg2;
- (void)_dismissAirPlayRoutePickerIPad;
- (void)_windowDidRotate:(id)arg1;
- (void)_windowWillRotate:(id)arg1;
- (void)_presentAirPlayPopoverAnimated:(_Bool)arg1 fromRect:(struct CGRect)arg2;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebPlugInView : WAKView
{
    UIWebDocumentView *_webView;
    CALayer *_hostingLayer;
    UIView *_uiView;
    struct __CFRunLoopObserver *_mainRunLoopDrawObserver;
    _Bool _isFullScreen;
    _Bool _parentedInLayer;
    _Bool _isQuickTimePlugIn;
    _Bool _isMapViewPlugIn;
    _Bool _isiAdPlugIn;
}

@property(nonatomic) _Bool isiAdPlugIn; // @synthesize isiAdPlugIn=_isiAdPlugIn;
@property(nonatomic) _Bool isMapViewPlugIn; // @synthesize isMapViewPlugIn=_isMapViewPlugIn;
@property(nonatomic) _Bool isQuickTimePlugIn; // @synthesize isQuickTimePlugIn=_isQuickTimePlugIn;
@property(nonatomic, getter=isParentedInLayer) _Bool parentedInLayer; // @synthesize parentedInLayer=_parentedInLayer;
- (void)detachPluginLayer;
- (void)attachPluginLayer;
- (void)_detachPluginLayerOnMainThread;
- (void)_attachPluginLayerOnMainThread;
- (void)_disconnectPluginLayers;
- (void)_connectPluginLayers;
- (id)pluginLayer;
- (_Bool)willProvidePluginLayer;
- (void)setWebView:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)objectForWebScript;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)webPlugInDestroy;
- (void)webPlugInStop;
- (void)webPlugInStart;
- (void)webPlugInInitialize;
- (void)drawRect:(struct CGRect)arg1;
- (void)layout;
- (void)reshape;
- (_Bool)isParented;
- (id)plugInView;
- (void)invalidateGState;
- (void)viewDidMoveToWindow;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithWebView:(id)arg1 plugInView:(id)arg2;
- (void)_viewDidMoveToWindowOnMainThread;
- (void)_reshapeOnMainThread;

@end

@interface _UIRotatingAlertController : UIAlertController
{
    id <_UIRotatingAlertControllerDelegate> _rotatingSheetDelegate;
    unsigned long long _arrowDirections;
    _Bool _isRotating;
    _Bool _readyToPresentAfterRotation;
    UIViewController *_presentedViewControllerWhileRotating;
    id <UIPopoverPresentationControllerDelegate> _popoverPresentationControllerDelegateWhileRotating;
}

@property(nonatomic) unsigned long long arrowDirections; // @synthesize arrowDirections=_arrowDirections;
@property(nonatomic) id <_UIRotatingAlertControllerDelegate> rotatingSheetDelegate; // @synthesize rotatingSheetDelegate=_rotatingSheetDelegate;
- (void)didRotate;
- (void)_didRotateAndLayout;
- (void)_updateSheetPositionAfterRotation;
- (void)willRotate;
- (void)doneWithSheet;
- (_Bool)presentSheetFromRect:(struct CGRect)arg1;
- (_Bool)presentSheet;
- (void)dealloc;
- (id)init;

@end

@interface UIWebRotatingAlertController : _UIRotatingAlertController
{
    _Bool _wasDeferringCallbacks;
    UIWebDocumentView *_webBrowserView;
}

- (_Bool)presentSheet;
- (void)doneWithSheet;
- (void)dealloc;
- (void)_enableWebView;
- (void)_disableWebView;
- (id)initWithUIWebDocumentView:(id)arg1;

@end

@interface UIWebScrollView : UIScrollView
{
}

- (void)didMoveToWindow;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectMultiplePicker : UIPickerView <UIWebFormControl, UIPickerViewDataSource, UIPickerViewDelegate>
{
    DOMHTMLSelectElement *_selectionNode;
    NSArray *_cachedItems;
    id <UIWebSelectedItemPrivate> _singleSelectionItem;
    unsigned long long _singleSelectionIndex;
    double _fontSize;
    double _maximumTextWidth;
    long long _textAlignment;
    double _layoutWidth;
}

@property(retain, nonatomic) id <UIWebSelectedItemPrivate> _singleSelectionItem; // @synthesize _singleSelectionItem;
@property(retain, nonatomic) NSArray *_cachedItems; // @synthesize _cachedItems;
@property(retain, nonatomic) DOMHTMLSelectElement *_selectionNode; // @synthesize _selectionNode;
- (void)pickerView:(id)arg1 row:(int)arg2 column:(int)arg3 checked:(_Bool)arg4;
- (int)_itemIndexForRowIndex:(int)arg1;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;
- (void)layoutSubviews;
- (void)controlEndEditing;
- (void)controlBeginEditing;
- (id)controlView;
- (void)dealloc;
- (id)initWithDOMHTMLSelectElement:(id)arg1 cachedItems:(id)arg2 singleSelectionItem:(id)arg3 singleSelectionIndex:(unsigned long long)arg4 multipleSelection:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectPopover : UIWebFormRotatingAccessoryPopover <UIWebFormControl>
{
    UIWebSelectTableViewController *_tableViewController;
    UIKeyboard *_keyboard;
}

@property(retain, nonatomic) UIWebSelectTableViewController *_tableViewController; // @synthesize _tableViewController;
- (void)_userActionDismissedPopover:(id)arg1;
- (void)controlEndEditing;
- (void)controlBeginEditing;
- (id)controlView;
- (void)dealloc;
- (id)initWithDOMHTMLSelectElement:(id)arg1 cachedItems:(id)arg2 singleSelectionItem:(id)arg3 singleSelectionIndex:(unsigned long long)arg4 multipleSelection:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectSinglePicker : UIPickerView <UIWebFormControl, UIPickerViewDataSource, UIPickerViewDelegate>
{
    DOMHTMLSelectElement *_selectNode;
    NSArray *_optionItems;
    id <UIWebSelectedItemPrivate> _selectedOptionItem;
    long long _selectedIndex;
    id <UIWebSelectedItemPrivate> _optionToSelectWhenDone;
    long long _indexToSelectWhenDone;
}

- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)controlEndEditing;
- (void)controlBeginEditing;
- (id)controlView;
- (void)dealloc;
- (id)initWithDOMHTMLSelectElement:(id)arg1 allItems:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectTableViewController : UITableViewController <UIKeyInput>
{
    DOMHTMLSelectElement *_selectionNode;
    NSArray *_cachedItems;
    NSArray *_groupsAndOptions;
    unsigned long long _singleSelectionIndex;
    unsigned long long _singleSelectionSection;
    _Bool _allowsMultipleSelection;
    double _fontSize;
    double _maximumTextWidth;
    long long _textAlignment;
    UIWebSelectPopover *_popover;
}

@property(nonatomic) UIWebSelectPopover *_popover; // @synthesize _popover;
@property(retain, nonatomic) NSArray *_cachedItems; // @synthesize _cachedItems;
@property(retain, nonatomic) NSArray *_groupsAndOptions; // @synthesize _groupsAndOptions;
@property(retain, nonatomic) DOMHTMLSelectElement *_selectionNode; // @synthesize _selectionNode;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)_optionsForSection:(long long)arg1;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithDOMHTMLSelectNode:(id)arg1 cachedItems:(id)arg2 singleSelectionIndex:(unsigned long long)arg3 multipleSelection:(_Bool)arg4;
- (void)_setupGroupsAndOptions;
- (_Bool)_isEmpty;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelection : NSObject
{
    UIWebDocumentView *_documentView;
    id <UIWebSelectionBlock> _base;
    id <UIWebSelectionBlock> _extent;
    struct CGSize _desiredSize;
    UITextSelection *_textSelection;
}

@property(nonatomic) struct CGSize desiredSize; // @synthesize desiredSize=_desiredSize;
@property(readonly, nonatomic) UITextSelection *textSelection; // @synthesize textSelection=_textSelection;
@property(retain, nonatomic) id <UIWebSelectionBlock> extent; // @synthesize extent=_extent;
@property(retain, nonatomic) id <UIWebSelectionBlock> base; // @synthesize base=_base;
@property(readonly, nonatomic) UIWebDocumentView *documentView; // @synthesize documentView=_documentView;
- (_Bool)isEqualToSelection:(id)arg1;
- (id)description;
- (_Bool)blockContainsPoint:(struct CGPoint)arg1;
- (void)applySelectionToWebDocumentView;
- (id)asDomRange;
- (void)selectionChanged;
- (struct CGRect)boundingTextSelectionRectAndInsideFixedPosition:(int *)arg1;
- (struct CGRect)boundingTextSelectionRect;
- (id)textSelectionRects;
- (void)useBlock;
@property(readonly, nonatomic, getter=isTextOnly) _Bool textOnly;
- (id)duplicate;
- (void)shrinkSelectionFromPoint:(struct CGPoint)arg1 towardsPoint:(struct CGPoint)arg2 withNewRect:(struct CGRect)arg3;
- (_Bool)tryToShrinkToBaseAndExtent;
- (void)growSelectionTowardsPoint:(struct CGPoint)arg1;
- (void)moveEdge:(int)arg1 outwards:(_Bool)arg2;
- (_Bool)isEqual:(id)arg1;
- (void)shrinkFromEdge:(int)arg1;
- (void)growFromEdge:(int)arg1;
- (double)distanceBetweenFirstRect:(struct CGRect)arg1 second:(struct CGRect)arg2 edge:(int)arg3;
- (id)blockOfSameWidthAtPoint:(struct CGPoint)arg1;
- (id)elementAtPoint:(struct CGPoint)arg1;
- (id)blockAtPoint:(struct CGPoint)arg1;
- (void)adjustSelectionFromPoint:(struct CGPoint)arg1 towardsPoint:(struct CGPoint)arg2 withNewRect:(struct CGRect)arg3;
- (id)webArchive;
- (id)textRepresentation;
- (id)domDocument;
- (id)webFrame;
- (id)webView;
- (struct CGRect)boundingRectAndInsideFixedPosition:(int *)arg1;
@property(readonly, nonatomic) struct CGRect boundingRect; // @dynamic boundingRect;
@property(readonly, nonatomic) _Bool valid;
- (void)setSelectionWithPoint:(struct CGPoint)arg1 ignoringLargeBlocks:(_Bool)arg2;
- (void)setSelectionWithPoint:(struct CGPoint)arg1;
- (void)dealloc;
- (id)initWithDocumentView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectionGraph : NSObject
{
    NSMutableArray *_selectionNodes;
}

- (void)exploreFromNode:(id)arg1;
- (void)exploreFromNode:(id)arg1 outwards:(_Bool)arg2 maxDepth:(int)arg3;
- (id)addNodeFromSelection:(id)arg1;
- (void)clearNodes;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectionHandle : UIView
{
    UITouch *_touch;
    UIImageView *_dragDotView;
    int _position;
    int _textPosition;
    UIWebSelectionView *_selectionView;
    struct CGSize _touchToCenterOffset;
    struct CGSize _centerToSelectionPointOffset;
}

@property(nonatomic) struct CGSize centerToSelectionPointOffset; // @synthesize centerToSelectionPointOffset=_centerToSelectionPointOffset;
@property(readonly, nonatomic) struct CGSize touchToCenterOffset; // @synthesize touchToCenterOffset=_touchToCenterOffset;
@property(retain, nonatomic) UITouch *touch; // @synthesize touch=_touch;
@property(nonatomic) int position; // @synthesize position=_position;
- (struct CGPoint)suggestedHandlePositionOnRect:(struct CGRect)arg1;
- (void)snapToCornerOfRange:(id)arg1 atStart:(_Bool)arg2;
- (double)offsetInDirectionOfHandleFromFirstPoint:(struct CGPoint)arg1 toSecondPoint:(struct CGPoint)arg2;
- (struct CGPoint)applyOffsetInDirectionOfHandle:(double)arg1 toPoint:(struct CGPoint)arg2;
- (struct CGPoint)applyCenterToSelectionPointOffset:(struct CGPoint)arg1;
- (struct CGPoint)applyTouchToCenterOffset:(struct CGPoint)arg1;
@property(nonatomic) int textPosition;
@property(readonly, nonatomic) _Bool hasTextPosition;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dropActiveTouch;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithPosition:(int)arg1 selectionView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectionNode : NSObject
{
    UIWebSelectionNode *_fromTopByExpanding;
    UIWebSelectionNode *_fromTopByContracting;
    UIWebSelectionNode *_fromBottomByExpanding;
    UIWebSelectionNode *_fromBottomByContracting;
    UIWebSelectionNode *_fromRightByExpanding;
    UIWebSelectionNode *_fromRightByContracting;
    UIWebSelectionNode *_fromLeftByExpanding;
    UIWebSelectionNode *_fromLeftByContracting;
    UIWebSelectionGraph *_sharedGraph;
    UIWebSelection *_selection;
    _Bool _invalid;
}

@property(retain) UIWebSelection *selection; // @synthesize selection=_selection;
- (void)invalidate;
- (id)nodeByMovingEdge:(int)arg1 outwards:(_Bool)arg2;
- (int)oppositeEdge:(int)arg1;
- (id *)nodeByReferenceFromEdge:(int)arg1 outwards:(_Bool)arg2;
- (void)dealloc;
- (id)initWithSelection:(id)arg1 inGraph:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface UIWebSelectionOutline : UIView
{
    UIView *_lineViews[4];
}

- (void)dealloc;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWebTextRangeView : UIView
{
    UIView<UITextInput> *m_container;
    NSArray *_rects;
    NSMutableArray *_rectViews;
    UIWebDragDotView *_startDot;
    UIWebDragDotView *_endDot;
    _Bool _magnifying;
}

@property(copy, nonatomic) NSArray *rects; // @synthesize rects=_rects;
- (void)geometryChanged;
- (void)doneMagnifying;
- (void)prepareForMagnification;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)endIsHorizontal;
- (_Bool)startIsHorizontal;
- (struct CGPoint)endCorner;
- (struct CGPoint)startCorner;
- (struct CGRect)endEdge;
- (struct CGRect)startEdge;
- (void)updateRectViews;
- (void)updateDragDots;
- (struct CGRect)boundingRect;
- (id)rectViewAtIndex:(int)arg1;
- (struct CGRect)rectAtIndex:(int)arg1;
- (void)removeFromSuperview;
@property(readonly, nonatomic) UIView<UITextInput> *container;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface UIWebTouchEventsGestureRecognizer : UIGestureRecognizer
{
    id _touchTarget;
    SEL _touchAction;
    id <UIWebTouchEventsGestureRecognizerDelegate> _webTouchDelegate;
    _Bool _passedHitTest;
    _Bool _defaultPrevented;
    double _originalGestureDistance;
    double _originalGestureAngle;
    struct _UIWebTouchEvent _lastTouchEvent;
}

+ (void)initialize;
@property(nonatomic, getter=isDefaultPrevented) _Bool defaultPrevented; // @synthesize defaultPrevented=_defaultPrevented;
@property(readonly, nonatomic) double rotation;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) _Bool inJavaScriptGesture;
@property(readonly, nonatomic) NSMutableArray *touchPhases;
@property(readonly, nonatomic) NSMutableArray *touchIdentifiers;
@property(readonly, nonatomic) NSMutableArray *touchLocations;
@property(readonly, nonatomic) struct CGPoint locationInWindow;
@property(readonly, nonatomic) int type;
@property(readonly, nonatomic) const struct _UIWebTouchEvent *lastTouchEvent;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;
- (void)_processTouches:(id)arg1 withEvent:(id)arg2 type:(int)arg3;
- (void)_recordTouches:(id)arg1 type:(int)arg2;
- (void)reset;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2 touchDelegate:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface UIWebURLAction : NSObject
{
}

+ (_Bool)performDefaultActionForURL:(id)arg1 andDOMNode:(id)arg2 withAllowedTypes:(unsigned long long)arg3 forFrame:(id)arg4 inView:(id)arg5;
+ (void)performDataDetectorsDefaultActionForDOMNode:(id)arg1 forFrame:(id)arg2 inView:(id)arg3;

@end

@interface UIWebView : UIView <NSCoding, UIScrollViewDelegate>
{
    UIWebViewInternal *_internal;
}

+ (void)_updatePersistentStoragePaths;
+ (void)_fixPathsForSandboxDirectoryChange;
+ (id)_relativePathFromAbsolutePath:(id)arg1 removingPathComponents:(unsigned long long)arg2;
+ (void)initialize;
- (void)_addShortcut:(id)arg1;
- (void)_define:(id)arg1;
- (void)selectAll:(id)arg1;
- (void)select:(id)arg1;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)configureWithSettings:(id)arg1;
- (id)_networkInterfaceName;
- (void)_setNetworkInterfaceName:(id)arg1;
- (unsigned long long)_audioSessionCategoryOverride;
- (void)_setAudioSessionCategoryOverride:(unsigned long long)arg1;
- (_Bool)_alwaysDispatchesScrollEvents;
- (void)_setAlwaysDispatchesScrollEvents:(_Bool)arg1;
@property(readonly, nonatomic) unsigned long long pageCount;
- (unsigned long long)_pageCount;
@property(nonatomic) double gapBetweenPages;
- (void)_setGapBetweenPages:(double)arg1;
- (double)_gapBetweenPages;
@property(nonatomic) double pageLength;
- (void)_setPageLength:(double)arg1;
- (double)_pageLength;
@property(nonatomic) long long paginationBreakingMode;
- (void)_setPaginationBehavesLikeColumns:(_Bool)arg1;
- (_Bool)_paginationBehavesLikeColumns;
@property(nonatomic) long long paginationMode;
- (void)_setPaginationMode:(long long)arg1;
- (long long)_paginationMode;
- (void)_setDrawInWebThread:(_Bool)arg1;
- (void)_setWebSelectionEnabled:(_Bool)arg1;
- (void)_setDrawsCheckeredPattern:(_Bool)arg1;
- (void)_setOverridesOrientationChangeEventHandling:(_Bool)arg1;
- (id)_pdfViewHandler;
- (id)_scrollView;
- (id)_documentView;
- (id)_browserView;
- (id)_initWithWebView:(id)arg1;
- (struct CGImage *)newSnapshotWithRect:(struct CGRect)arg1;
- (struct CGImage *)createSnapshotWithRect:(struct CGRect)arg1;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (_Bool)webView:(id)arg1 resource:(id)arg2 canAuthenticateAgainstProtectionSpace:(id)arg3 forDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForGeolocationRequestFromOrigin:(id)arg2 frame:(id)arg3 listener:(id)arg4;
- (id)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4;
- (_Bool)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (id)_makeAlertView;
- (void)webViewClose:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webView:(id)arg1 connectionPropertiesForResource:(id)arg2 dataSource:(id)arg3;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)_updateRequest;
- (void)webViewSupportedOrientationsUpdated:(id)arg1;
- (void)webView:(id)arg1 printFrameView:(id)arg2;
- (void)webView:(id)arg1 exceededApplicationCacheOriginQuotaForSecurityOrigin:(id)arg2 totalSpaceNeeded:(unsigned long long)arg3;
- (void)webView:(id)arg1 frame:(id)arg2 exceededDatabaseQuotaForSecurityOrigin:(id)arg3 database:(id)arg4;
- (void)webView:(id)arg1 unableToImplementPolicyWithError:(id)arg2 frame:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)_reportError:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWasRemoved:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)_didCompleteScrolling;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)restoreStateFromHistoryItem:(id)arg1 forWebView:(id)arg2;
- (void)saveStateToHistoryItem:(id)arg1 forWebView:(id)arg2;
- (void)webViewMainFrameDidFailLoad:(id)arg1 withError:(id)arg2;
- (void)webViewMainFrameDidFinishLoad:(id)arg1;
- (void)webViewMainFrameDidCommitLoad:(id)arg1;
- (void)webViewMainFrameDidFirstVisuallyNonEmptyLayoutInFrame:(id)arg1;
- (void)_updateScrollerViewForInputView:(id)arg1;
- (void)view:(id)arg1 didSetFrame:(struct CGRect)arg2 oldFrame:(struct CGRect)arg3;
- (_Bool)_appliesExclusiveTouchToSubviewTree;
- (void)setBackgroundColor:(id)arg1;
- (void)setOpaque:(_Bool)arg1;
- (void)_updateOpaqueAndBackgroundColor;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_frameOrBoundsChanged;
- (void)_rescaleDocument;
- (void)_finishRotation;
- (void)_beginRotation;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)_updateCheckeredPattern;
@property(nonatomic) _Bool suppressesIncrementalRendering;
@property(readonly, nonatomic, getter=canGoForward) _Bool canGoForward;
@property(readonly, nonatomic, getter=canGoBack) _Bool canGoBack;
- (void)goForward;
- (void)goBack;
- (void)stopLoading;
- (void)reload;
@property(readonly, retain, nonatomic) NSURLRequest *request;
- (void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
@property(readonly, retain, nonatomic) UIScrollView *scrollView;
@property(nonatomic) id <UIWebViewDelegate> delegate;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(nonatomic) _Bool scalesPageToFit;
@property(nonatomic) _Bool mediaPlaybackAllowsAirPlay;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction;
@property(nonatomic) _Bool allowsInlineMediaPlayback;
@property(nonatomic) unsigned long long dataDetectorTypes;
@property(nonatomic) _Bool detectsPhoneNumbers;
- (id)stringByEvaluatingJavaScriptFromString:(id)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 enableReachability:(_Bool)arg2;
- (void)_webViewCommonInitWithWebView:(id)arg1 scalesPageToFit:(_Bool)arg2;
- (void)_updateBrowserViewExposedScrollViewRect;
- (void)_updateViewSettings;
- (void)_setRichTextReaderViewportSettings;
- (void)_setScalesPageToFitViewportSettings;
- (void)_didRotate:(id)arg1;
@property(nonatomic) _Bool keyboardDisplayRequiresUserAction;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (Class)_printFormatterClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface UIWebViewInternal : NSObject
{
    UIScrollView *scroller;
    UIWebBrowserView *browserView;
    UICheckeredPatternView *checkeredPatternView;
    id <UIWebViewDelegate> delegate;
    unsigned int scalesPageToFit:1;
    unsigned int isLoading:1;
    unsigned int hasOverriddenOrientationChangeEventHandling:1;
    unsigned int drawsCheckeredPattern:1;
    unsigned int webSelectionEnabled:1;
    unsigned int drawInWebThread:1;
    unsigned int inRotation:1;
    unsigned int didRotateEnclosingScrollView:1;
    NSURLRequest *request;
    long long clickedAlertButtonIndex;
    UIWebViewWebViewDelegate *webViewDelegate;
    UIWebPDFViewHandler *pdfHandler;
}

@end

@interface UIWebViewPrintFormatter : UIWebDocumentViewPrintFormatter
{
}

- (id)_webDocumentView;

@end

__attribute__((visibility("hidden")))
@interface UIWebViewWebViewDelegate : NSObject
{
    UIWebView *uiWebView;
}

- (void)_clearUIWebView;
- (void)webView:(id)arg1 didChangeLocationWithinPageForFrame:(id)arg2;
- (_Bool)webView:(id)arg1 resource:(id)arg2 canAuthenticateAgainstProtectionSpace:(id)arg3 forDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didCancelAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForGeolocationRequestFromOrigin:(id)arg2 frame:(id)arg3 listener:(id)arg4;
- (id)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4;
- (_Bool)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webViewClose:(id)arg1;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webView:(id)arg1 connectionPropertiesForResource:(id)arg2 dataSource:(id)arg3;
- (void)webViewSupportedOrientationsUpdated:(id)arg1;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 printFrameView:(id)arg2;
- (void)webView:(id)arg1 exceededApplicationCacheOriginQuotaForSecurityOrigin:(id)arg2 totalSpaceNeeded:(unsigned long long)arg3;
- (void)webView:(id)arg1 frame:(id)arg2 exceededDatabaseQuotaForSecurityOrigin:(id)arg3 database:(id)arg4;
- (void)webView:(id)arg1 unableToImplementPolicyWithError:(id)arg2 frame:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (id)webView:(id)arg1 createWebViewWithRequest:(id)arg2;
- (id)initWithUIWebView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIWheelEvent : UIInternalEvent
{
    NSMutableArray *_recentScrollTimestamps;
}

- (double)_wheelVelocity;
- (_Bool)_canHaveVelocity;
- (void)_sendEventToResponder:(id)arg1;
- (long long)subtype;
- (long long)type;
- (void)_setHIDEvent:(struct __IOHIDEvent *)arg1;
- (void)dealloc;

@end

@interface UIWindowController : NSObject
{
    UITransitionView *_transitionView;
    UIWindow *_window;
    int _currentTransition;
    id _target;
    SEL _didEndSelector;
    UIViewController *_fromViewController;
    UIViewController *_toViewController;
    struct CGPoint _beginOriginForToView;
    struct CGPoint _endOriginForToView;
    _Bool _presenting;
    long long _toModalStyle;
    _Bool _needsDidAppear;
    _Bool _needsDidDisappear;
    _Bool __interactiveTransition;
    id <UIViewControllerAnimatedTransitioning> _transitionController;
    id <UIViewControllerInteractiveTransitioning> _interactionController;
}

+ (void)windowWillBeDeallocated:(id)arg1;
+ (id)windowControllerForWindow:(id)arg1;
@property(nonatomic, getter=_isInteractiveTransition, setter=_setInteractiveTransition:) _Bool _interactiveTransition; // @synthesize _interactiveTransition=__interactiveTransition;
@property(nonatomic) UIWindow *window; // @synthesize window=_window;
@property(retain, nonatomic, setter=_setInteractionController:) id <UIViewControllerInteractiveTransitioning> _interactionController; // @synthesize _interactionController;
@property(retain, nonatomic, setter=_setTransitionController:) id <UIViewControllerAnimatedTransitioning> _transitionController; // @synthesize _transitionController;
@property(nonatomic) _Bool presenting; // @synthesize presenting=_presenting;
@property(readonly, nonatomic) UITransitionView *transitionView; // @synthesize transitionView=_transitionView;
- (_Bool)transitionViewShouldUseViewControllerCallbacks;
- (struct CGPoint)transitionView:(id)arg1 endOriginForToView:(id)arg2 forTransition:(int)arg3 defaultOrigin:(struct CGPoint)arg4;
- (struct CGPoint)transitionView:(id)arg1 beginOriginForToView:(id)arg2 forTransition:(int)arg3 defaultOrigin:(struct CGPoint)arg4;
- (struct CGPoint)transitionView:(id)arg1 endOriginForFromView:(id)arg2 forTransition:(int)arg3 defaultOrigin:(struct CGPoint)arg4;
- (void)transitionView:(id)arg1 startCustomTransitionWithDuration:(double)arg2;
- (struct CGPoint)_adjustOrigin:(struct CGPoint)arg1 givenOtherOrigin:(struct CGPoint)arg2 forTransition:(int)arg3;
- (double)durationForTransition:(int)arg1;
- (void)transitionViewDidComplete:(id)arg1 fromView:(id)arg2 toView:(id)arg3 removeFromView:(_Bool)arg4;
- (void)transitionViewDidCancel:(id)arg1 fromView:(id)arg2 toView:(id)arg3;
- (void)transitionViewDidStart:(id)arg1;
- (void)transition:(int)arg1 fromViewController:(id)arg2 toViewController:(id)arg3 target:(id)arg4 didEndSelector:(SEL)arg5 animation:(CDUnknownBlockType)arg6;
- (void)transition:(int)arg1 fromViewController:(id)arg2 toViewController:(id)arg3 target:(id)arg4 didEndSelector:(SEL)arg5;
- (void)_transplantView:(id)arg1 toSuperview:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_prepareKeyboardForTransition:(int)arg1 fromView:(id)arg2;
- (struct CGRect)_boundsForViewController:(id)arg1 transition:(int)arg2 orientation:(long long)arg3 fullScreenLayout:(_Bool)arg4 inWindow:(id)arg5;
- (struct CGSize)_flipSize:(struct CGSize)arg1;
- (struct CGPoint)_originForViewController:(id)arg1 orientation:(long long)arg2 actualStatusBarHeight:(double)arg3 fullScreenLayout:(_Bool)arg4 inWindow:(id)arg5;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface UIWindowLayer : CALayer
{
    UIWindow *_window;
}

- (id)actionForKey:(id)arg1;
- (void)setTransform:(struct CATransform3D)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface UIZoomViewController : UIViewController
{
    UIWindow *_window;
    UIButton *_zoomButton;
}

@property(readonly, nonatomic) UIWindow *window; // @synthesize window=_window;
- (id)screen;
- (void)_getRotationContentSettings:(CDStruct_010f855d *)arg1 forWindow:(id)arg2;
- (void)_suspendAnimationStarted:(id)arg1;
- (void)_applicationDidFinishLaunching:(id)arg1;
- (void)_zoomOrientationAnimationFinished:(id)arg1 finished:(_Bool)arg2 context:(void *)arg3;
- (void)_zoomOrientationChange:(id)arg1;
- (void)loadView;
- (void)_setupPositioningAndRotationForInterfaceOrientation:(long long)arg1 offscreen:(_Bool)arg2;
- (void)_updateZoomButtonTitle;
- (void)_changeZoom:(id)arg1;
- (id)_zoomText:(_Bool)arg1;
- (_Bool)isClassicControlWindow:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface WebFrame (BrowserAdditions)
- (_Bool)isMainFrame;
@end

@interface WebFrame (UIWebDocumentViewTextSelecting)
- (_Bool)isTexty;
@end

@interface WebFrame (UIWebSelectionAdditions)
- (_Bool)containsOnlySelectableElements;
@end

__attribute__((visibility("hidden")))
@interface WebPDFNSNumberFormatter : NSNumberFormatter
{
}

+ (id)copyNumberFormater;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WebThreadSafeUndoManager : NSUndoManager
{
}

- (_Bool)_alwaysShowEditAlertView;
- (void)redo;
- (void)undo;

@end

__attribute__((visibility("hidden")))
@interface _EditScript : NSObject
{
    _Bool _orderAtomsAscending;
    _IntArray2D *_distanceMatrix;
    long long _currentOperation;
    id <_EditScriptData> _itemAData;
    id <_EditScriptData> _itemBData;
    NSArray *_operationPrecedenceArray;
    NSMutableArray *_script;
}

@property(retain, nonatomic) NSMutableArray *script; // @synthesize script=_script;
@property(copy, nonatomic) NSArray *operationPrecedenceArray; // @synthesize operationPrecedenceArray=_operationPrecedenceArray;
- (void)finalizeCurrentScriptAtom;
- (void)addToCurrentScriptAtomEditOperation:(long long)arg1 editIndex:(unsigned long long)arg2 newText:(id)arg3 indexInArrayB:(unsigned long long)arg4;
- (void)initializeCurrentScriptAtom;
- (void)computeEditsFromMatrix;
- (void)computeDistanceMatrix;
- (id)description;
- (id)initWithOperationPrecedence:(long long)arg1 orderAtomsAscending:(_Bool)arg2;
- (id)operationPrecedenceArrayFromOperationPrecedence:(long long)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _EditScriptDataArray : NSObject <_EditScriptData>
{
    NSArray *_data;
    NSString *_cachedStringValue;
}

+ (id)EditScriptDataWithArray:(id)arg1;
+ (id)EditScriptDataWithString:(id)arg1 chunkSize:(long long)arg2;
@property(retain, nonatomic) NSString *cachedStringValue; // @synthesize cachedStringValue=_cachedStringValue;
@property(retain, nonatomic) NSArray *data; // @synthesize data=_data;
- (long long)indexOfFirstDifferenceWithOtherData:(id)arg1 shouldReverseIterate:(_Bool)arg2;
- (long long)characterIndexForItem:(long long)arg1;
- (long long)lengthOfItem:(long long)arg1;
- (id)stringValue;
- (id)stringAtIndex:(long long)arg1;
- (long long)length;
@property(readonly, copy) NSString *description;
- (id)initWithArray:(id)arg1;
- (id)initWithString:(id)arg1 chunkSize:(long long)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _EditScriptIndexed : _EditScript
{
    _EditScriptIndexedAtom *_currentScriptAtom;
}

+ (id)editScriptFromArray:(id)arg1 toArray:(id)arg2 orderAtomsAscending:(_Bool)arg3 operationPrecedence:(long long)arg4;
+ (id)editScriptFromArray:(id)arg1 toArray:(id)arg2;
- (void)finalizeCurrentScriptAtom;
- (void)addToCurrentScriptAtomEditOperation:(long long)arg1 editIndex:(unsigned long long)arg2 newText:(id)arg3 indexInArrayB:(unsigned long long)arg4;
- (void)initializeCurrentScriptAtom;
- (id)applyToArray:(id)arg1;
- (id)initWithOperationPrecedence:(long long)arg1 dataClass:(Class)arg2 fromArray:(id)arg3 toArray:(id)arg4 orderAtomsAscending:(_Bool)arg5;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _EditScriptIndexedAtom : NSObject
{
    long long _editOperation;
    unsigned long long _indexToEdit;
    unsigned long long _indexInArrayB;
    NSString *_replacementText;
}

+ (id)atomWithEditOperation:(long long)arg1 indexToEdit:(unsigned long long)arg2 newText:(id)arg3 indexInArrayB:(unsigned long long)arg4;
@property(retain, nonatomic) NSString *replacementText; // @synthesize replacementText=_replacementText;
@property(nonatomic) unsigned long long indexInArrayB; // @synthesize indexInArrayB=_indexInArrayB;
@property(nonatomic) unsigned long long indexToEdit; // @synthesize indexToEdit=_indexToEdit;
@property(nonatomic) long long editOperation; // @synthesize editOperation=_editOperation;
- (id)description;
- (id)initWithEditOperation:(long long)arg1 indexToEdit:(unsigned long long)arg2 newText:(id)arg3 indexInArrayB:(unsigned long long)arg4;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _EditScriptRanged : _EditScript
{
    long long _options;
    _EditScriptRangedAtom *_currentScriptAtom;
}

+ (id)editScriptForSmallestSingleEditFromString:(id)arg1 toString:(id)arg2;
+ (id)editScriptFromString:(id)arg1 toString:(id)arg2 chunkSize:(long long)arg3 orderAtomsAscending:(_Bool)arg4 operationPrecedence:(long long)arg5 options:(long long)arg6;
+ (id)editScriptFromString:(id)arg1 toString:(id)arg2;
- (void)computeSmallestSingleEdit;
- (void)removeAnyOverlapBetweenIndexOfFirstDifference:(long long *)arg1 andReverseIndexOfLastDifference:(long long *)arg2 shouldShortenFirstDifference:(_Bool)arg3;
- (void)finalizeCurrentScriptAtom;
- (void)addToCurrentScriptAtomEditOperation:(long long)arg1 editIndex:(unsigned long long)arg2 newText:(id)arg3 indexInArrayB:(unsigned long long)arg4;
- (void)initializeCurrentScriptAtom;
- (id)applyToString:(id)arg1;
@property(readonly, nonatomic) NSString *stringB;
@property(readonly, nonatomic) NSString *stringA;
- (id)initWithOperationPrecedence:(long long)arg1 dataClass:(Class)arg2 chunkSize:(long long)arg3 stringA:(id)arg4 stringB:(id)arg5 orderAtomsAscending:(_Bool)arg6 options:(long long)arg7;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _EditScriptRangedAtom : NSObject
{
    NSString *_replacementText;
    struct _NSRange _editRange;
}

+ (id)atomWithEditRange:(struct _NSRange)arg1 replacementText:(id)arg2;
@property(retain, nonatomic) NSString *replacementText; // @synthesize replacementText=_replacementText;
@property(nonatomic) struct _NSRange editRange; // @synthesize editRange=_editRange;
- (id)description;
- (id)initWithEditRange:(struct _NSRange)arg1 replacementText:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _IntArray2D : NSObject
{
    long long *_arrayData;
    unsigned long long _iSize;
    unsigned long long _jSize;
    _Bool _shouldBoundsCheck;
}

+ (id)arrayWithISize:(unsigned long long)arg1 jSize:(unsigned long long)arg2;
@property(nonatomic) _Bool shouldBoundsCheck; // @synthesize shouldBoundsCheck=_shouldBoundsCheck;
@property(readonly, nonatomic) unsigned long long jSize; // @synthesize jSize=_jSize;
@property(readonly, nonatomic) unsigned long long iSize; // @synthesize iSize=_iSize;
- (void):(unsigned long long)arg1:(unsigned long long)arg2 newValue:(long long)arg3;
- (long long):(unsigned long long)arg1:(unsigned long long)arg2 outOfBoundsReturnValue:(long long)arg3;
- (long long):(unsigned long long)arg1:(unsigned long long)arg2;
- (void)assertBoundsForIIndex:(unsigned long long)arg1 jIndex:(unsigned long long)arg2;
- (_Bool)inBoundsForIIndex:(unsigned long long)arg1 jIndex:(unsigned long long)arg2;
- (id)initWithISize:(unsigned long long)arg1 jSize:(unsigned long long)arg2;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _NSFileProviderExtensionContext : NSExtensionContext <_NSFileProviderVendor>
{
    NSFileProviderExtension *_principalInstance;
}

+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;
@property(nonatomic) NSFileProviderExtension *principalInstance; // @synthesize principalInstance=_principalInstance;
- (void)_URLForItemIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_identifierForItemAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_providePlaceholderAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_stopProvidingItemAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_startProvidingItemAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_itemChangedAtURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_performInitialSetupWithCompletion:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface _NSLayoutConstraintConstant : NSObject <NSCoding, NSCopying>
{
    NSString *_symbolicValue;
    double _numericValue;
}

+ (id)constantWithSymbolicValue:(id)arg1 numericValue:(double)arg2;
@property(readonly, nonatomic) double numericValue; // @synthesize numericValue=_numericValue;
@property(readonly, copy, nonatomic) NSString *symbolicValue; // @synthesize symbolicValue=_symbolicValue;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSymbolicValue:(id)arg1 numericValue:(double)arg2;

@end

@interface _UIAccessDeniedView : UIView
{
    UIImageView *_lockView;
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    NSString *_title;
    NSString *_message;
}

@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void)layoutSubviews;
- (id)_textColor;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIActionSheetExternalBackgroundView : UIView
{
}

- (void)layoutSubviews;
- (void)setMaskImage:(id)arg1;

@end

@interface _UIActionSlider : UIControl <UIGestureRecognizerDelegate>
{
    UIView *_contentView;
    UIView *_trackDodgeView;
    UIView *_trackBackgroundView;
    _UIBackdropView *_trackBlurView;
    UIView *_trackSolidView;
    UIView *_knobView;
    UIImageView *_knobImageView;
    _UIGlintyStringView *_trackLabel;
    UIPanGestureRecognizer *_slideGestureRecognizer;
    struct CGPoint _slideGestureInitialPoint;
    double _knobPosition;
    double _trackWidthProportion;
    _Bool _showingTrackLabel;
    _Bool _animating;
    long long _style;
    double _trackTextBaselineFromBottom;
    id <_UIActionSliderDelegate> _delegate;
    double _knobWidth;
    double _cachedTrackMaskWidth;
    struct CGSize _knobImageOffset;
    struct CGSize _trackSize;
    struct UIEdgeInsets _knobInsets;
}

@property(readonly, nonatomic, getter=_knobView) UIView *knobView; // @synthesize knobView=_knobView;
@property(nonatomic) double cachedTrackMaskWidth; // @synthesize cachedTrackMaskWidth=_cachedTrackMaskWidth;
@property(nonatomic, getter=isAnimating) _Bool animating; // @synthesize animating=_animating;
@property(nonatomic, getter=isShowingTrackLabel) _Bool showingTrackLabel; // @synthesize showingTrackLabel=_showingTrackLabel;
@property(nonatomic) double trackWidthProportion; // @synthesize trackWidthProportion=_trackWidthProportion;
@property(nonatomic) struct UIEdgeInsets knobInsets; // @synthesize knobInsets=_knobInsets;
@property(nonatomic) double knobWidth; // @synthesize knobWidth=_knobWidth;
@property(nonatomic) double knobPosition; // @synthesize knobPosition=_knobPosition;
@property(nonatomic) id <_UIActionSliderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double trackTextBaselineFromBottom; // @synthesize trackTextBaselineFromBottom=_trackTextBaselineFromBottom;
@property(nonatomic) struct CGSize trackSize; // @synthesize trackSize=_trackSize;
@property(nonatomic) struct CGSize knobImageOffset; // @synthesize knobImageOffset=_knobImageOffset;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void)_knobPanGesture:(id)arg1;
- (void)_slideCompleted:(_Bool)arg1;
- (void)_hideTrackLabel:(_Bool)arg1;
- (void)_showTrackLabel;
- (void)setMaskFromImage:(id)arg1 onView:(id)arg2;
- (void)setMaskPath:(struct CGPath *)arg1 onView:(id)arg2;
- (void)updateAllTrackMasks;
- (id)trackMaskPath;
- (id)trackMaskImage;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (double)_knobAvailableX;
- (double)_knobMaxX;
- (double)_knobMinX;
- (double)_knobHorizontalPosition;
- (double)_knobVerticalInset;
- (double)_knobMaxXInset;
- (double)_knobMinXInset;
- (double)_knobWidth;
- (struct CGRect)_trackFrame;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (void)closeTrackAnimated:(_Bool)arg1;
- (void)openTrackAnimated:(_Bool)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(readonly, nonatomic) struct CGRect trackTextRect;
@property(readonly, nonatomic) struct CGRect knobRect;
@property(retain, nonatomic) UIFont *trackFont;
@property(copy, nonatomic) NSString *trackText;
@property(retain, nonatomic) UIImage *knobImage;
@property(readonly, nonatomic) UIBezierPath *knobMaskPath;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 vibrantSettings:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIActionSliderKnob : UIView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (_Bool)isOpaque;

@end

__attribute__((visibility("hidden")))
@interface _UIActionSliderTrackComponentView : UIView
{
}

- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIActionWhenIdle : NSObject
{
    NSInvocation *_invocation;
}

+ (id)actionWhenIdleWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;
@property(retain, nonatomic) NSInvocation *invocation; // @synthesize invocation=_invocation;
- (void)addObserverToRunLoop;
- (void)invoke;
- (void)invalidate;
- (_Bool)isValid;
- (void)dealloc;
- (id)initWithInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityApplicationExtensionDiscovery : NSObject
{
    _Bool _performsInitialMatching;
    NSArray *_extensionPointIdentifiers;
    id _extensionMatchingContext;
}

@property _Bool performsInitialMatching; // @synthesize performsInitialMatching=_performsInitialMatching;
@property(retain) id extensionMatchingContext; // @synthesize extensionMatchingContext=_extensionMatchingContext;
@property(copy, nonatomic) NSArray *extensionPointIdentifiers; // @synthesize extensionPointIdentifiers=_extensionPointIdentifiers;
- (void)cancelUpdatesIfNeeded;
- (id)activitiesMatchingInputItems:(id)arg1 error:(id *)arg2 updateBlock:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithExtensionPointIdentifiers:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityBundleHelper : NSObject
{
    LSBundleProxy *_bundleProxy;
}

+ (id)activityBundleHelperForExtension:(id)arg1;
@property(retain, nonatomic) LSBundleProxy *bundleProxy; // @synthesize bundleProxy=_bundleProxy;
- (double)preferredImageScale;
- (id)activityImageForApplicationBundleURL:(id)arg1 applicationIconFormat:(int)arg2 activityCategory:(long long)arg3;
- (id)localizedName;
- (id)imageForApplicationIconFormat:(int)arg1 activityCategory:(long long)arg2;
- (id)debugDescription;
- (void)dealloc;
- (id)initWithBundleProxy:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityDragGestureRecognizer : UILongPressGestureRecognizer <UIAutoscrollDelegate, _UIScrollNotification>
{
    UIScrollView *_targetScrollView;
    UIAutoscroll *_autoscroll;
    struct UIEdgeInsets _draggingInsets;
}

@property(retain, nonatomic) UIAutoscroll *autoscroll; // @synthesize autoscroll=_autoscroll;
@property(retain, nonatomic) UIScrollView *targetScrollView; // @synthesize targetScrollView=_targetScrollView;
@property(nonatomic) struct UIEdgeInsets draggingInsets; // @synthesize draggingInsets=_draggingInsets;
- (int)autoscrollDirectionsForPoint:(struct CGPoint)arg1 inView:(id)arg2;
- (void)cancelAutoscroll;
- (void)beginAutoscrollAndUpdateDirectionIfNeeded;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_didScroll;
- (void)autoscrollWillNotStart;
- (void)updateAutoscroll:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)reset;
- (void)setState:(long long)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityGroupActivityCell : UICollectionViewCell
{
    UILabel *_titleLabel;
    UIImageView *_imageView;
    UIImageView *_highlightedImageView;
}

@property(retain, nonatomic) UIImageView *highlightedImageView; // @synthesize highlightedImageView=_highlightedImageView;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)initHighlightedImageViewIfNeeded;
- (void)updateHighlightedImageViewIfNeeded;
- (void)setHighlighted:(_Bool)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)draggingView;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityGroupListViewController : UICollectionViewController
{
    _Bool _darkStyleOnLegacyApp;
    _Bool _embedded;
    NSArray *_activityGroupViewControllers;
    NSArray *_visibleActivityGroupViewControllers;
    UILabel *_placeholderLabel;
}

@property(retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property(nonatomic, getter=isEmbedded) _Bool embedded; // @synthesize embedded=_embedded;
@property(copy, nonatomic) NSArray *visibleActivityGroupViewControllers; // @synthesize visibleActivityGroupViewControllers=_visibleActivityGroupViewControllers;
@property(nonatomic) _Bool darkStyleOnLegacyApp; // @synthesize darkStyleOnLegacyApp=_darkStyleOnLegacyApp;
@property(copy, nonatomic) NSArray *activityGroupViewControllers; // @synthesize activityGroupViewControllers=_activityGroupViewControllers;
- (_Bool)shouldShowNoActionsPlaceholder;
- (double)preferredContentHeightForViewController:(id)arg1;
- (id)viewControllerForItemAtIndexPath:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (double)displayHeight;
- (void)updateVisibleActivityGroupViewControllers;
- (void)dealloc;
- (id)initWithActivityGroupViewControllers:(id)arg1 embedded:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityGroupListViewLayout : UICollectionViewFlowLayout
{
}

- (void)adjustLayoutAttributesIfNeeded:(id)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityGroupViewFlowLayout : UICollectionViewFlowLayout
{
    UILongPressGestureRecognizer *_editingGestureRecognizer;
    NSIndexPath *_indexPathForDraggedItem;
    _UIActivityGroupActivityCell *_draggingView;
    struct UIOffset _draggingOffset;
}

@property(retain, nonatomic) _UIActivityGroupActivityCell *draggingView; // @synthesize draggingView=_draggingView;
@property(nonatomic) struct UIOffset draggingOffset; // @synthesize draggingOffset=_draggingOffset;
@property(copy, nonatomic) NSIndexPath *indexPathForDraggedItem; // @synthesize indexPathForDraggedItem=_indexPathForDraggedItem;
@property(retain, nonatomic) UILongPressGestureRecognizer *editingGestureRecognizer; // @synthesize editingGestureRecognizer=_editingGestureRecognizer;
- (void)cancelDraggingForGesture:(id)arg1;
- (_Bool)shouldCancelDraggingForGesture:(id)arg1;
- (void)updateDraggingViewForGesture:(id)arg1;
- (void)beginDraggingForGesture:(id)arg1;
- (id)draggingViewForItemAtIndexPath:(id)arg1;
- (void)invalidateGroupViewLayoutAnimated:(_Bool)arg1;
- (void)handleEditingGesture:(id)arg1;
- (void)adjustLayoutAttributesForDraggingIfNeeded:(id)arg1;
- (void)adjustLayoutAttributesIfNeeded:(id)arg1;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (id)indexPathForItemRecognizedByGesture:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityIndicatorViewArtworkItem : NSObject <NSDiscardableContent>
{
    NSString *_artKey;
    NSArray *_images;
    struct {
        unsigned int isDiscarded:1;
        unsigned int useCount;
    } _flags;
}

@property(retain, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, nonatomic) NSString *artKey; // @synthesize artKey=_artKey;
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithArtKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityUserDefaults : NSObject
{
    NSString *_identifier;
    NSUserDefaults *_userDefaults;
}

@property(retain, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)applicationExtensionForActivity:(id)arg1;
- (id)identifierForActivity:(id)arg1;
- (void)postActivityUserDefaultsNotification;
- (void)setDefaultsValue:(id)arg1 forKey:(id)arg2 activity:(id)arg3;
- (id)defaultsValueForKey:(id)arg1 activity:(id)arg2;
- (void)updateUserOrderForActivitiesInArray:(id)arg1;
- (id)userOrderedActivitesFromActivitiesInArray:(id)arg1;
- (void)setActivity:(id)arg1 asHidden:(_Bool)arg2;
- (_Bool)activityIsHidden:(id)arg1;
- (_Bool)canHideActivity:(id)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 userDefaults:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIActivityUserDefaultsViewController : UITableViewController
{
    NSArray *_activities;
    _UIActivityUserDefaults *_userDefaults;
    UIImage *_placeholderImage;
}

@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(retain, nonatomic) _UIActivityUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(copy, nonatomic) NSArray *activities; // @synthesize activities=_activities;
- (long long)preferredActivityCategory;
- (id)settingsImageForActivity:(id)arg1;
- (void)toggleActivityHiddenForRowAtIndexPath:(id)arg1;
- (void)toggleActivityHiddenForControl:(id)arg1;
- (id)activityForRowAtIndexPath:(id)arg1;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithActivities:(id)arg1 userDefaults:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAirDropActivity : UIActivity
{
    SFAirDropActivityViewController *_airDropViewController;
    CDUnknownBlockType _airdropCompletion;
}

@property(copy, nonatomic) CDUnknownBlockType airdropCompletion; // @synthesize airdropCompletion=_airdropCompletion;
@property(retain, nonatomic) SFAirDropActivityViewController *airDropViewController; // @synthesize airDropViewController=_airDropViewController;
- (struct CGSize)_thumbnailSize;
- (void)performActivity;
- (void)prepareWithActivityItems:(id)arg1;
- (id)activityType;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertBackgroundView : UIView
{
}

+ (Class)layerClass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerPresentationController : UIPresentationController <UIAdaptivePresentationControllerDelegate>
{
    UIView *_dimmingView;
    _UIKeyboardLayoutAlignmentView *keyboardLayoutAlignmentView;
    UIView *keyboardLayoutAlignmentAvailableSpaceView;
    _Bool constraintsPrepared;
    _Bool __isCurrentContext;
    _Bool __shouldRespectNearestCurrentContextPresenter;
}

@property(setter=_setShouldRespectNearestCurrentContextPresenter:) _Bool _shouldRespectNearestCurrentContextPresenter; // @synthesize _shouldRespectNearestCurrentContextPresenter=__shouldRespectNearestCurrentContextPresenter;
@property(setter=_setIsCurrentContext:) _Bool _isCurrentContext; // @synthesize _isCurrentContext=__isCurrentContext;
@property(readonly) UIView *_dimmingView; // @synthesize _dimmingView;
- (id)_presentedAlertController;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)setDelegate:(id)arg1;
- (double)constantForAligningAlertControllerToAvailableSpace;
- (long long)attributeToAlignAlertControllerViewBy;
- (void)_prepareConstraintsIfNecessary;
- (void)_occludePresentingWindow:(_Bool)arg1;
- (_Bool)_preserveResponderAcrossWindows;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (_Bool)shouldRemovePresentersView;
- (_Bool)_shouldRespectDefinesPresentationContext;
- (_Bool)shouldPresentInFullscreen;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (id)presentedView;
- (void)containerViewDidLayoutSubviews;
- (void)containerViewWillLayoutSubviews;
- (long long)adaptivePresentationStyle;
- (void)dealloc;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerActionSheetCompactPresentationController : _UIAlertControllerPresentationController
{
}

- (double)constantForAligningAlertControllerToAvailableSpace;
- (long long)attributeToAlignAlertControllerViewBy;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerActionSheetRegularPresentationController : UIPopoverPresentationController
{
    _UIAlertControllerActionSheetCompactPresentationController *_compactPresentationController;
}

- (void)dealloc;
- (id)_alertControllerContainer;
- (id)_alertController;
- (id)_exceptionStringForNilSourceViewOrBarButtonItem;
- (void)dimmingViewWasTapped:(id)arg1;
- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (id)_compactPresentationController;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerActionView : UIView <UIGestureRecognizerDelegate, _UIAlertActionRepresenting>
{
    NSLayoutConstraint *_minimumHeightConstraint;
    UIView *labelContainerView;
    UILabel *label;
    UILabel *descriptiveLabel;
    UIImageView *imageView;
    UIImageView *checkView;
    UIView *highlightedBackgroundContainerView;
    NSMutableArray *highlightedBackgroundConstraints;
    unsigned long long _roundedCorners;
    NSMutableArray *havingDescriptiveLabelConstraints;
    NSMutableArray *notHavingDescriptiveLabelConstraints;
    NSLayoutConstraint *_descriptiveLabelWidthConstraint;
    UIAlertAction *_action;
    UIAlertControllerVisualStyle *_visualStyle;
    id selectedTarget;
    SEL selectedAction;
    id highlightTarget;
    SEL highlightAction;
    _Bool _hasDescriptiveText;
    UIGestureRecognizer *_selectGestureRecognizer;
    _Bool _discrete;
}

@property _Bool discrete; // @synthesize discrete=_discrete;
- (void)_action:(id)arg1 changedToChecked:(_Bool)arg2;
- (void)_action:(id)arg1 changedToEnabled:(_Bool)arg2;
- (void)_focusStateDidChange;
- (_Bool)_isFocusableElement;
- (void)_selectGestureChanged:(id)arg1;
- (void)_uninstallSelectGestureRecognizer;
- (void)_installSelectGestureRecognizer;
- (void)traitCollectionDidChange:(id)arg1;
- (id)_titleFont;
- (double)_minimumLabelScaleFactor;
- (void)_contentSizeChanged;
@property(readonly, copy) NSString *description;
- (id)tintColor;
- (void)tintColorDidChange;
@property(copy, nonatomic) UIAlertAction *action;
- (void)_updateStyle;
@property UIAlertControllerVisualStyle *visualStyle;
- (void)_updateTextAlignmentForDescriptiveText:(_Bool)arg1;
- (void)_updateBackgroundView;
- (void)_updateMinimumHeight;
- (void)_updateFontSize;
- (void)_recomputeBackgroundColor;
- (void)_recomputeTextColor;
- (void)dealloc;
- (void)setHighlightTarget:(id)arg1 action:(SEL)arg2;
- (void)setSelectedTarget:(id)arg1 action:(SEL)arg2;
@property(readonly) double currentDescriptiveLabelTextWidth;
@property double alignedDescriptiveLabelTextWidth;
- (void)_triggerSelect;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)_touchForEvent:(id)arg1;
- (void)_prepareConstraintsForDescriptiveText:(_Bool)arg1;
- (void)_prepareConstraints;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerAlertPresentationController : _UIAlertControllerPresentationController
{
}

- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (long long)attributeToAlignAlertControllerViewBy;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerAnimatedTransitioning : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _presentation;
}

@property(getter=isPresentation) _Bool presentation; // @synthesize presentation=_presentation;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerBlendingSeparatorView : UICollectionReusableView
{
    _UIBlendingHighlightView *_blendingHighlightView;
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerCarActionHighlightedBackgroundView : UIView <UIAlertControllerBackgroundView>
{
}

@property double cornerRadius;
- (void)tintColorDidChange;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerCarBackgroundView : UIView <UIAlertControllerBackgroundView>
{
}

@property double cornerRadius;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerCollectionViewCell : UICollectionViewCell
{
    _UIAlertControllerActionView *_actionView;
}

@property(readonly) _UIAlertControllerActionView *actionView; // @synthesize actionView=_actionView;
- (void)applyLayoutAttributes:(id)arg1;
- (void)prepareForReuse;
@property(copy, nonatomic) UIAlertAction *action;
- (void)dealloc;
- (void)setHighlighted:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerCollectionViewFlowLayout : UICollectionViewFlowLayout
{
    _Bool _hideSeparators;
    double _alignedDescriptiveLabelTextWidth;
    _Bool _shouldRoundFirstCell;
}

+ (Class)layoutAttributesClass;
@property _Bool shouldRoundFirstCell; // @synthesize shouldRoundFirstCell=_shouldRoundFirstCell;
@property double alignedDescriptiveLabelTextWidth;
@property _Bool hideSeparators;
- (id)_topDecorationViewLayoutAttributesAtIndexPath:(id)arg1;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (_Bool)_collectionViewIsLayingOutHorizontallyWithCellHeight:(double)arg1;
- (double)_decorationDimension;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
{
    double _alignedDescriptiveLabelTextWidth;
}

@property double alignedDescriptiveLabelTextWidth; // @synthesize alignedDescriptiveLabelTextWidth=_alignedDescriptiveLabelTextWidth;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerGradientView : UIView
{
}

+ (Class)layerClass;
- (void)setGradientColors:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerShadowedScrollView : UIScrollView
{
    _UIAlertControllerGradientView *_shadowView;
    _Bool _shouldPinToBottomOnResize;
}

@property(nonatomic) _Bool shouldPinToBottomOnResize; // @synthesize shouldPinToBottomOnResize=_shouldPinToBottomOnResize;
- (void)_updateScrollabilityAndShadow;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)_boundsForPinningToBottomWithNewBounds:(struct CGRect)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerShimPresenter : NSObject <UIPopoverControllerDelegate>
{
    UIPopoverController *_popoverController;
    id <UIPopoverControllerDelegate> _popoverDelegate;
    UIViewController *_inPopoverViewController;
    _UIAlertControllerShimPresenterWindow *_window;
    UIAlertController *_alertController;
    UIAlertView *_legacyAlert;
}

+ (id)_topmostLegacyAlertIncludingPresentingAlerts:(_Bool)arg1;
+ (id)_topmostAlertWindow;
+ (void)_removePresenter:(id)arg1;
+ (void)_addPresenter:(id)arg1;
+ (id)_currentFullScreenAlertPresenters;
+ (void)_cancelPendingTouchesIfAppropriate;
+ (_Bool)_shouldPresentActionSheetsFullscreen;
@property UIAlertView *legacyAlert; // @synthesize legacyAlert=_legacyAlert;
@property UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(readonly) _UIAlertControllerShimPresenterWindow *window; // @synthesize window=_window;
- (void)dealloc;
- (void)_createWindowIfNecessary;
- (void)_tearDownInPopoverViewController;
@property id <UIPopoverControllerDelegate> popoverDelegate;
- (id)_popoverController;
- (void)_dismissAlertControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_presentAlertControllerFromRect:(struct CGRect)arg1 inView:(id)arg2 direction:(unsigned long long)arg3 animated:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_presentAlertControllerFromBarButtonItem:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_presentAlertControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerShimPresenterWindow : UIWindow
{
    UIAlertController *_alertController;
}

+ (_Bool)_isSystemWindow;
@property(readonly, retain, nonatomic) UIAlertController *alertController;
- (void)presentAlertController:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_presentationViewController;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerTextField : UITextField
{
    _UIAlertControllerTextFieldView *_textFieldView;
}

@property(nonatomic) _UIAlertControllerTextFieldView *textFieldView; // @synthesize textFieldView=_textFieldView;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerTextFieldView : UIView
{
    UIView *_borderContainerView;
    UIView *_borderView;
    UIView *_innerContentView;
    _UIAlertControllerTextField *_textField;
}

@property(readonly) UITextField *textField;
- (id)_textFieldFont;
- (double)_borderWidth;
- (void)_addConstraints;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerTextFieldViewController : UITableViewController
{
    NSMutableArray *textFieldViews;
    NSMutableArray *textFields;
    _Bool _textFieldsCanBecomeFirstResponder;
    id <_UIAlertControllerTextFieldViewControllerContaining> _container;
}

@property(nonatomic) id <_UIAlertControllerTextFieldViewControllerContaining> container; // @synthesize container=_container;
@property(readonly) NSArray *textFields; // @synthesize textFields;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
@property(nonatomic) _Bool textFieldsCanBecomeFirstResponder;
- (void)removeAllTextFields;
- (long long)numberOfTextFields;
- (id)textFieldAtIndex:(long long)arg1;
- (void)_updatePreferredContentSize;
- (void)_returnKeyPressedInTextField:(id)arg1;
- (id)addTextFieldWithPlaceholder:(id)arg1 isSecure:(_Bool)arg2;
- (double)_bottomMarginForTextFields;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithStyle:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerTextFieldViewTableCell : UITableViewCell
{
    _UIAlertControllerTextFieldView *_textField;
}

- (void)prepareForReuse;
@property(nonatomic) _UIAlertControllerTextFieldView *textField;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerTransitioningDelegate : NSObject <UIViewControllerTransitioningDelegate>
{
}

- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertControllerView : UIView <UICollectionViewDataSource, UIScrollViewDelegate>
{
    UIAlertController *_alertController;
    UIView *_roundedCornersView;
    UICollectionView *_actionCollectionView;
    _UIAlertControllerCollectionViewFlowLayout *_flowLayout;
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    UIView *_contentViewControllerContainerView;
    _UIAlertControllerActionView *_discreteCancelActionView;
    UIView<UIAlertControllerBackgroundView> *_backdropView;
    _UIAlertControllerShadowedScrollView *_contentScrollView;
    UIView *_contentScrollViewContentView;
    UIView *_contentView;
    UIView *_foregroundView;
    UIView *_dimmingView;
    _UIKeyboardLayoutAlignmentView *_keyboardLayoutAlignmentView;
    UIView *_keyboardLayoutAlignmentAvailableSpaceView;
    UIAlertControllerVisualStyle *_visualStyle;
    long long _layoutOrientation;
    _Bool _inPopover;
    _Bool _hasDimmingView;
    _Bool _showsCancelAction;
    _Bool _cancelActionIsDiscrete;
    _Bool _shouldHaveBackdropView;
    _Bool _alignsToKeyboard;
    NSMutableArray *_backdropViewConstraints;
    NSMutableArray *_dimmingViewConstraints;
    NSMutableArray *_dimmingViewForegroundViewTopConstraints;
    NSMutableArray *_dimmingViewForegroundViewBottomConstraints;
    NSMutableArray *_dimmingViewConstraintsForAlertStyle;
    NSMutableArray *_dimmingViewConstraintsForActionSheetStyle;
    NSMutableArray *_noDimmingViewConstraints;
    _Bool _hasCachedLargestActionDimension;
    struct CGSize _largestActionDimension;
    NSLayoutConstraint *_foregroundViewWidthConstraint;
    NSLayoutConstraint *_contentViewTopConstraint;
    NSLayoutConstraint *_contentViewBottomConstraint;
    NSLayoutConstraint *_titleLabelTopAlignmentConstraint;
    NSLayoutConstraint *_messageLabelTopAlignmentConstraint;
    NSLayoutConstraint *_contentViewControllerViewLeftConstraint;
    NSLayoutConstraint *_contentViewControllerViewRightConstraint;
    NSLayoutConstraint *_contentViewControllerViewTopConstraint;
    NSLayoutConstraint *_contentViewControllerViewBottomConstraint;
    NSLayoutConstraint *_contentScrollViewBottomConstraint;
    NSLayoutConstraint *_contentViewControllerContainerViewTopAlignmentConstraint;
    NSLayoutConstraint *_contentViewControllerContainerViewWidthConstraint;
    NSLayoutConstraint *_contentViewControllerContainerViewHeightConstraint;
    NSLayoutConstraint *_collectionViewTopAlignmentConstraint;
    NSLayoutConstraint *_centerXConstraint;
    NSLayoutConstraint *_centerYConstraint;
    NSLayoutConstraint *_widthConstraint;
    NSLayoutConstraint *_heightConstraint;
    NSLayoutConstraint *_collectionViewWidthConstraint;
    NSLayoutConstraint *_collectionViewHeightConstraint;
    NSLayoutConstraint *_discreteCancelActionViewTopConstraint;
    NSLayoutConstraint *_discreteCancelActionViewLeadingConstraint;
    NSLayoutConstraint *_discreteCancelActionViewWidthConstraint;
    NSLayoutConstraint *_discreteCancelActionViewHeightConstraint;
    NSLayoutConstraint *_backdropViewBottomConstraint;
    NSLayoutConstraint *_backdropViewRightConstraint;
}

+ (_Bool)_retroactivelyRequiresConstraintBasedLayout;
+ (void)initialize;
@property(retain) NSLayoutConstraint *backdropViewRightConstraint; // @synthesize backdropViewRightConstraint=_backdropViewRightConstraint;
@property(retain) NSLayoutConstraint *backdropViewBottomConstraint; // @synthesize backdropViewBottomConstraint=_backdropViewBottomConstraint;
@property(retain) NSLayoutConstraint *discreteCancelActionViewHeightConstraint; // @synthesize discreteCancelActionViewHeightConstraint=_discreteCancelActionViewHeightConstraint;
@property(retain) NSLayoutConstraint *discreteCancelActionViewWidthConstraint; // @synthesize discreteCancelActionViewWidthConstraint=_discreteCancelActionViewWidthConstraint;
@property(retain) NSLayoutConstraint *discreteCancelActionViewLeadingConstraint; // @synthesize discreteCancelActionViewLeadingConstraint=_discreteCancelActionViewLeadingConstraint;
@property(retain) NSLayoutConstraint *discreteCancelActionViewTopConstraint; // @synthesize discreteCancelActionViewTopConstraint=_discreteCancelActionViewTopConstraint;
@property(retain) NSLayoutConstraint *collectionViewHeightConstraint; // @synthesize collectionViewHeightConstraint=_collectionViewHeightConstraint;
@property(retain) NSLayoutConstraint *collectionViewWidthConstraint; // @synthesize collectionViewWidthConstraint=_collectionViewWidthConstraint;
@property(retain) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain) NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
@property(retain) NSLayoutConstraint *centerYConstraint; // @synthesize centerYConstraint=_centerYConstraint;
@property(retain) NSLayoutConstraint *centerXConstraint; // @synthesize centerXConstraint=_centerXConstraint;
@property(retain) NSLayoutConstraint *collectionViewTopAlignmentConstraint; // @synthesize collectionViewTopAlignmentConstraint=_collectionViewTopAlignmentConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerContainerViewHeightConstraint; // @synthesize contentViewControllerContainerViewHeightConstraint=_contentViewControllerContainerViewHeightConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerContainerViewWidthConstraint; // @synthesize contentViewControllerContainerViewWidthConstraint=_contentViewControllerContainerViewWidthConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerContainerViewTopAlignmentConstraint; // @synthesize contentViewControllerContainerViewTopAlignmentConstraint=_contentViewControllerContainerViewTopAlignmentConstraint;
@property(retain) NSLayoutConstraint *contentScrollViewBottomConstraint; // @synthesize contentScrollViewBottomConstraint=_contentScrollViewBottomConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerViewBottomConstraint; // @synthesize contentViewControllerViewBottomConstraint=_contentViewControllerViewBottomConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerViewTopConstraint; // @synthesize contentViewControllerViewTopConstraint=_contentViewControllerViewTopConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerViewRightConstraint; // @synthesize contentViewControllerViewRightConstraint=_contentViewControllerViewRightConstraint;
@property(retain) NSLayoutConstraint *contentViewControllerViewLeftConstraint; // @synthesize contentViewControllerViewLeftConstraint=_contentViewControllerViewLeftConstraint;
@property(retain) NSLayoutConstraint *messageLabelTopAlignmentConstraint; // @synthesize messageLabelTopAlignmentConstraint=_messageLabelTopAlignmentConstraint;
@property(retain) NSLayoutConstraint *titleLabelTopAlignmentConstraint; // @synthesize titleLabelTopAlignmentConstraint=_titleLabelTopAlignmentConstraint;
@property(retain) NSLayoutConstraint *contentViewBottomConstraint; // @synthesize contentViewBottomConstraint=_contentViewBottomConstraint;
@property(retain) NSLayoutConstraint *contentViewTopConstraint; // @synthesize contentViewTopConstraint=_contentViewTopConstraint;
@property(retain) NSLayoutConstraint *foregroundViewWidthConstraint; // @synthesize foregroundViewWidthConstraint=_foregroundViewWidthConstraint;
@property(readonly) _UIAlertControllerCollectionViewFlowLayout *_flowLayout; // @synthesize _flowLayout;
@property(readonly) UIView *_dimmingView; // @synthesize _dimmingView;
@property(readonly) UIView *_foregroundView; // @synthesize _foregroundView;
- (long long)tintAdjustmentMode;
- (void)setTintAdjustmentMode:(long long)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (void)_reevaluateSuperviewSizingConstraints;
- (void)willMoveToSuperview:(id)arg1;
- (void)_recomputeAlignedDescriptiveLabelTextWidth;
- (void)_sizeOfContentViewControllerChanged;
- (void)_removeContentViewController;
@property _Bool alignsToKeyboard;
@property _Bool shouldHaveBackdropView;
@property _Bool cancelActionIsDiscrete;
@property _Bool showsCancelAction;
@property _Bool hasDimmingView;
@property _Bool inPopover;
@property long long layoutOrientation;
- (id)defaultAction;
- (id)cancelAction;
- (id)actions;
- (id)contentViewController;
- (_Bool)_shouldTreatEmptyStringsAsNil;
- (_Bool)_hasAttributedMessage;
- (_Bool)_hasMessage;
- (_Bool)_hasAttributedTitle;
- (_Bool)_hasTitle;
- (id)_attributedMessage;
- (id)_attributedTitle;
- (id)message;
- (id)title;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)_contentSizeChanged;
- (void)_updateBackdrop;
- (void)_updateCellStyle:(id)arg1;
- (void)_updateInsets;
- (void)_updateCornerRadius;
- (void)_updateVisualAltitude;
- (void)_updateLabelMaximumLines;
- (void)_updateLabelTextColor;
- (void)_updateLabelFontSizes;
- (void)_updateStyle;
@property(retain, nonatomic, setter=_setVisualStyle:) UIAlertControllerVisualStyle *_visualStyle;
- (struct CGSize)_minimumSizeForAllActions;
- (double)_labelHorizontalInsets;
- (struct CGSize)_contentViewControllerSize;
- (double)_marginBetweenContentAndDiscreteCancelAction;
- (_Bool)hasDiscreteHorizontalCancelAction;
- (_Bool)_actionLayoutIsVertical;
- (_Bool)_wantsHorizontalCollectionViewLayout;
- (_Bool)_wantsHorizontalAlert;
- (_Bool)_wantsHorizontalActionSheet;
- (void)updateDefaultAction;
- (long long)_numberOfActionsForCollectionView;
- (id)_actionsForCollectionView;
- (id)_orderedActionsForCollectionView;
- (_Bool)_shouldHaveCancelActionInCollectionView;
- (void)_actionsChanged;
- (void)_propertiesChanged;
- (void)_removeDiscreteCancelActionView;
- (void)_actionLayoutDirectionChanged;
- (_Bool)_hasDiscreteCancelAction;
- (id)_bottomMostViewToAlignDiscreteCancelActionViewTo;
- (_Bool)_canLayOutActionsHorizontally;
- (struct CGSize)_collectionViewSizeForHorizontalLayout:(_Bool)arg1 itemSize:(struct CGSize)arg2;
- (struct CGSize)_itemSizeForHorizontalLayout:(_Bool)arg1;
- (double)_idealLayoutWidth;
- (double)_idealWidth;
- (double)_layoutWidthForHorizontalLayout:(_Bool)arg1;
- (double)_availableWidthForHorizontalLayout:(_Bool)arg1;
- (_Bool)_horizontalLayoutCanUseFullWidth;
- (double)_verticalLayoutWidth;
- (struct CGSize)_sizeForLayoutWidthDetermination;
- (_Bool)_buttonsAreTopMost;
- (void)_applyCollectionViewConstraints;
- (void)_applyContentViewControllerContainerViewConstraints;
- (void)_applyMessageConstraints;
- (void)_applyTitleConstraints;
- (void)_applyKeyboardAlignmentViewsConstraints;
- (void)_prepareBackdropViewConstraints;
- (void)_prepareDimmingViewConstraints;
- (void)_applyViewConstraints;
- (void)_prepareKeyboardLayoutAlignmentViews;
- (void)_prepareDimmingView;
- (void)_prepareCancelView;
- (void)_invalidateFlowLayout;
- (void)_prepareActionCollectionView;
- (void)_prepareContentViewControllerContainerView;
- (void)_prepareMesssageLabel;
- (void)_prepareTitleLabel;
- (void)_prepareContentScrollView;
- (void)_prepareContentView;
- (void)_prepareForegroundView;
- (void)_prepareViewsAndAddConstraints;
@property UIAlertController *alertController;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertExternalViewController : UIViewController
{
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    NSMutableArray *_buttons;
    UIAlertView *_representedAlert;
}

@property(nonatomic) UIAlertView *representedAlert; // @synthesize representedAlert=_representedAlert;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)_dismissIfCapable;
- (void)_buttonTapped:(id)arg1;
- (id)_buttonWithTitle:(id)arg1 index:(long long)arg2;
- (id)_messageAttributedStringSmallText;
- (id)_messageAttributesSmallText;
- (id)_messageAttributedString;
- (id)_messageAttributes;
- (id)_titleAttributedString;
- (id)_titleAttributes;
- (id)_textAttributes;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertExternalViewControllerButton : UIButton
{
    long long _index;
}

@property long long index; // @synthesize index=_index;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertImageView : UIImageView
{
    struct CGRect _clip;
}

@property(nonatomic) struct CGRect clip; // @synthesize clip=_clip;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertManager : NSObject
{
}

+ (void)sizeAlertWindowForCurrentOrientation;
+ (void)createAlertWindowIfNeeded:(_Bool)arg1 deferDisplay:(_Bool)arg2;
+ (void)createAlertWindowIfNeeded:(_Bool)arg1;
+ (void)alertPopoutCompleted;
+ (void)tellSpringboardHidingAlert:(id)arg1 animated:(_Bool)arg2 forSpringBoardAlertTransition:(_Bool)arg3;
+ (void)tellSpringboardShowingAlert:(id)arg1 animated:(_Bool)arg2 forSpringBoardAlertTransition:(_Bool)arg3;
+ (void)showDimmingViewAnimated:(_Bool)arg1;
+ (void)hideDimmingViewAnimated:(_Bool)arg1;
+ (_Bool)stackContainsAlert:(id)arg1;
+ (void)removeFromStack:(id)arg1;
+ (void)addToStack:(id)arg1 dontDimBackground:(_Bool)arg2;
+ (void)reorientAlertWindowTo:(long long)arg1 animated:(_Bool)arg2 keyboard:(id)arg3;
+ (void)applyClientWindowTransform:(struct CGAffineTransform)arg1;
+ (void)applyInternalWindowTransform:(struct CGAffineTransform)arg1;
+ (void)_applyAlertTransforms;
+ (struct CGAffineTransform)calculatedAlertTransform;
+ (struct CGAffineTransform)_alertTranslationForInterfaceOrientation:(long long)arg1 andTranslation:(double)arg2;
+ (void)alertWindowAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
+ (void)noteOrientationChangingTo:(long long)arg1;
+ (void)noteOrientationChangingTo:(long long)arg1 animated:(_Bool)arg2;
+ (id)visibleAlert;
+ (id)topMostAlert;
+ (_Bool)cancelAlertsAnimated:(_Bool)arg1;
+ (_Bool)cancelTopMostAlertAnimated:(_Bool)arg1;
+ (_Bool)hideTopMostAlertAnimated:(_Bool)arg1;
+ (void)showTopmostMiniAlertWithSynchronizationPort:(unsigned int)arg1;
+ (void)hideAlertsForTermination;
+ (void)hideTopmostMiniAlert;
+ (void)initialize;
- (void)_didHideDimmingView:(id)arg1 finished:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertOverlayWindow : UIWindow
{
}

+ (_Bool)_isSystemWindow;
+ (struct CGRect)constrainFrameToScreen:(struct CGRect)arg1;
- (int)textEffectsVisibilityLevel;
- (void)handleStatusBarChangeFromHeight:(double)arg1 toHeight:(double)arg2;
- (void)_updateTransformLayerForClassicPresentation;
- (_Bool)_canAffectStatusBarAppearance;
- (_Bool)isInternalWindow;
- (id)representation;
- (void)_handleMouseUp:(struct __GSEvent *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertNormalizingOverlayWindow : _UIAlertOverlayWindow
{
}

- (void)setContentScaleFactor:(double)arg1;
- (void)_updateTransformLayerForClassicPresentation;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertSheetTable : UITableView
{
}

- (void)drawExtraSeparator:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertShimPresentingViewController : UIViewController
{
}

- (_Bool)_isSupportedInterfaceOrientation:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertStackWatcher : NSObject
{
}

- (void)_appResumed:(id)arg1;
- (void)_appSuspended:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface _UIAlertTableViewCell : UITableViewCell
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlertViewShimAccessoryViewController : UIViewController
{
    UIViewController *_accessoryViewController;
    double _preferredHeight;
}

- (struct CGSize)preferredContentSize;
- (void)dealloc;
- (id)initWithAccessoryViewController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAlerts_Support : NSObject
{
}

+ (id)dimmingView;
+ (void)hideAlertWindow;
+ (void)showAlertWindow;
+ (id *)destroyPressedImage;
+ (id *)destroyButtonImage;
+ (id *)pressedButtonImage;
+ (id *)cancelButtonImage;
+ (id *)buttonImage;
+ (struct CGAffineTransform)currentAlertWindowTransform;
+ (void)applyAlertWindowTransform:(struct CGAffineTransform)arg1;
+ (id)keyboardIfPresent;
+ (void)setAlertWindow:(id)arg1;
+ (id)alertWindow;
+ (void)setVisibleAlert:(id)arg1;
+ (id)visibleAlert;
+ (id)alertSheetStack;
+ (struct CGRect)sheetButtonContentStretch;
+ (struct CGRect)popupButtonContentStretch;
+ (struct CGRect)compactButtonContentStretch;
+ (struct CGRect)buttonContentStretch;

@end

__attribute__((visibility("hidden")))
@interface _UIAnimatedImage : UIImage
{
    NSArray *_images;
    double _duration;
}

+ (_Bool)supportsSecureCoding;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)_imageWithStylePresets:(id)arg1 withTintColor:(id)arg2;
- (id)_imageScaledToProportion:(double)arg1 interpolationQuality:(int)arg2;
- (id)_doubleBezeledImageWithExteriorShadowRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 interiorShadowRed:(double)arg5 green:(double)arg6 blue:(double)arg7 alpha:(double)arg8 fillRed:(double)arg9 green:(double)arg10 blue:(double)arg11 alpha:(double)arg12;
- (id)_bezeledImageWithShadowRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4 fillRed:(double)arg5 green:(double)arg6 blue:(double)arg7 alpha:(double)arg8 drawShadow:(_Bool)arg9;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)_setAlignmentRectInsets:(struct UIEdgeInsets)arg1;
- (id)resizableImageWithCapInsets:(struct UIEdgeInsets)arg1 resizingMode:(long long)arg2;
- (id)resizableImageWithCapInsets:(struct UIEdgeInsets)arg1;
- (void)_setAlwaysStretches:(_Bool)arg1;
- (_Bool)_isTiledWhenStretchedToSize:(struct CGSize)arg1;
- (_Bool)_isResizable;
- (struct CGRect)_contentRectInPixels;
- (struct CGRect)_contentStretchInPixels;
- (long long)resizingMode;
- (struct UIEdgeInsets)capInsets;
- (double)duration;
- (id)images;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithImages:(id)arg1 duration:(double)arg2;
- (id)_initWithOtherImage:(id)arg1;
- (id)_unselectedTabBarItemImageWithTintColor:(id)arg1 metrics:(long long)arg2 style:(long long)arg3 forScreenScale:(double)arg4;
- (id)_selectedTabBarItemImageWithTintColor:(id)arg1 metrics:(long long)arg2 style:(long long)arg3 forScreenScale:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface _UIAnimationCoordinator : NSObject <UIViewControllerAnimatedTransitioning>
{
    NSMutableDictionary *_stash;
    _UIViewControllerOneToOneTransitionContext *_transitionContext;
    UIPercentDrivenInteractiveTransition *_interactiveTransition;
    double _duration;
    CDUnknownBlockType _preperation;
    CDUnknownBlockType _animator;
    CDUnknownBlockType _completion;
    UIView *_containerView;
    UIViewController *_viewController;
    struct CGRect _startFrame;
    struct CGRect _endFrame;
}

@property(nonatomic) struct CGRect endFrame; // @synthesize endFrame=_endFrame;
@property(nonatomic) struct CGRect startFrame; // @synthesize startFrame=_startFrame;
@property(retain, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(copy, nonatomic) CDUnknownBlockType animator; // @synthesize animator=_animator;
@property(copy, nonatomic) CDUnknownBlockType preperation; // @synthesize preperation=_preperation;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (void)animationEnded:(_Bool)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (void)finishInteractiveAnimation;
- (void)cancelInteractiveAnimation;
- (void)updateInteractiveProgress:(double)arg1;
- (void)animateInteractively;
- (void)animate;
- (void)_updateTransitionContext;
@property(readonly, retain, nonatomic) NSMutableDictionary *stash;
@property(readonly, retain, nonatomic) _UIViewControllerOneToOneTransitionContext *transitionContext;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIAppearance : NSObject
{
    NSArray *_containerList;
    NSMutableArray *_appearanceInvocations;
    NSMapTable *_invocationSources;
    NSMutableDictionary *_resettableInvocations;
    _UIAppearanceCustomizableClassInfo *_customizableClassInfo;
}

+ (void)_setInvalidatesViewsOnAppearanceChange:(_Bool)arg1;
+ (_Bool)_hasCustomizationsForClass:(Class)arg1 guideClass:(Class)arg2;
+ (id)_appearanceWithClassInfo:(id)arg1 containerList:(id)arg2;
+ (id)_newAppearanceWithClassInfo:(id)arg1 containerList:(id)arg2;
+ (id)_appearanceNodeForClassInfo:(id)arg1 containerList:(id)arg2;
+ (id)_appearanceForClass:(Class)arg1 withContainerList:(id)arg2;
+ (void)_applyInvocationsTo:(id)arg1 window:(id)arg2;
+ (void)_applyInvocationsTo:(id)arg1 window:(id)arg2 matchingSelector:(SEL)arg3;
+ (_Bool)_hasAnyCustomizations;
+ (id)_rootAppearancesNode;
+ (id)appearancesAtNode:(id)arg1 withObject:(id)arg2;
+ (id)_recordersExcludingSource:(id)arg1 withWindow:(id)arg2;
+ (id)_pendingRecordInvocationsForSource:(id)arg1;
+ (id)_recorderForSource:(id)arg1;
+ (id)_windowsForSource:(id)arg1;
+ (void)_removeWindow:(id)arg1 forSource:(id)arg2;
+ (void)_addWindow:(id)arg1 forSource:(id)arg2;
+ (void)_setCurrentAppearanceSource:(id)arg1;
+ (id)_currentAppearanceSource;
@property(readonly, nonatomic) _UIAppearanceCustomizableClassInfo *_customizableClassInfo; // @synthesize _customizableClassInfo;
@property(retain, nonatomic, setter=_setResettableInvocations:) NSMutableDictionary *_resettableInvocations; // @synthesize _resettableInvocations;
- (id)description;
- (void)_invalidateAppearanceInWindow:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (_Bool)_isValidAppearanceForCustomizableObject:(id)arg1;
- (id)_appearanceInvocations;
- (void)updateResettableSelectorsWithInvocation:(id)arg1 removeSelector:(_Bool)arg2;
- (id)_resettableInvocationsCreateIfNecessary;

@end

__attribute__((visibility("hidden")))
@interface _UIAppearanceCustomizableClassInfo : NSObject
{
    _Bool _isGuideClassRoot;
    _Bool _isCustomizableViewClassRoot;
    NSString *_appearanceNodeKey;
    unsigned long long _hash;
    Class _customizableViewClass;
    Class _guideClass;
}

+ (id)_customizableClassInfoForViewClass:(Class)arg1 withGuideClass:(Class)arg2;
@property(readonly, nonatomic) Class _customizableViewClass; // @synthesize _customizableViewClass;
@property(readonly, nonatomic) unsigned long long _hash; // @synthesize _hash;
@property(readonly, nonatomic) NSString *_appearanceNodeKey; // @synthesize _appearanceNodeKey;
- (void)dealloc;
- (id)description;
- (id)_superClassInfo;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) Class _guideClass; // @synthesize _guideClass;

@end

@interface _UIAppearanceRecorder : NSObject
{
    NSString *_classNameToRecord;
    Class _superclassToRecord;
    NSArray *_containerClassNames;
    NSMutableArray *_customizations;
    NSArray *_unarchivedCustomizations;
}

+ (id)_sharedAppearanceRecorderForClass:(Class)arg1 whenContainedIn:(id)arg2;
+ (id)_sharedAppearanceRecorderForClassNamed:(id)arg1 superclass:(Class)arg2 whenContainedIn:(id)arg3;
+ (id)_sharedAppearanceRecorder;
@property(copy, nonatomic, setter=_setContainerClassNames:) NSArray *_containerClassNames; // @synthesize _containerClassNames;
@property(nonatomic, setter=_setSuperclassToRecord:) Class _superclassToRecord; // @synthesize _superclassToRecord;
@property(copy, nonatomic, setter=_setClassNameToRecord:) NSString *_classNameToRecord; // @synthesize _classNameToRecord;
@property(readonly, nonatomic) NSData *_serializedRepresentation;
- (void)_applyCustomizations;
- (void)forwardInvocation:(id)arg1;
- (void)_recordInvocation:(id)arg1 withClassName:(id)arg2 containerClassNames:(id)arg3 selectorString:(id)arg4 forRemoteProcess:(_Bool)arg5;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithSerializedRepresentation:(id)arg1;
- (void)_importCustomizations:(id)arg1 withArchiveVersion:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAssetManager : NSObject
{
    _UICache *_imageCache;
    CUICatalog *_catalog;
    NSString *_assetManagerName;
    long long _preferredIdiom;
    double _preferredScale;
    unsigned long long _preferredIdiomSubtype;
    NSBundle *_bundle;
    NSMapTable *_assetMap;
    CUIMutableCatalog *_runtimeCatalog;
    long long onceToken_runtimeCatalog;
    UITraitCollection *_preferredTraitCollection;
    _Bool _managingUIKitAssets;
    _UIAssetManager *_nextAssetManager;
}

+ (id)sharedRuntimeAssetMap;
+ (id)sharedRuntimeCatalog;
+ (long long)_userInterfaceIdiomForDeviceClass:(unsigned long long)arg1;
+ (void)_convertTraitCollection:(id)arg1 toCUIScale:(double *)arg2 CUIIdiom:(long long *)arg3 UIKitIdiom:(long long *)arg4 subtype:(long long *)arg5;
+ (id)createAssetNamed:(id)arg1 fromBundle:(id)arg2;
+ (id)assetManagerForBundle:(id)arg1;
@property(readonly, nonatomic, getter=_managingUIKitAssets) _Bool managingUIKitAssets; // @synthesize managingUIKitAssets=_managingUIKitAssets;
@property(retain, nonatomic) UITraitCollection *preferredTraitCollection; // @synthesize preferredTraitCollection=_preferredTraitCollection;
@property(nonatomic) double preferredScale; // @synthesize preferredScale=_preferredScale;
@property(retain, nonatomic) _UIAssetManager *nextAssetManager; // @synthesize nextAssetManager=_nextAssetManager;
@property(readonly, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
- (id)description;
- (void)_clearCachedResources:(id)arg1;
@property(readonly, nonatomic) CUIMutableCatalog *runtimeCatalog;
- (void)_insertAssetIntoMap:(id)arg1 forName:(id)arg2;
- (id)_assetFromMapForName:(id)arg1;
- (void)_removeAssetFromMap:(id)arg1;
- (void)disableCacheFlushing;
@property(readonly, nonatomic) NSString *carFileName;
- (id)_catalog;
- (id)dataNamed:(id)arg1;
- (id)imageNamed:(id)arg1 withTrait:(id)arg2;
- (id)imageNamed:(id)arg1;
- (id)imageNamed:(id)arg1 idiom:(long long)arg2;
- (id)imageNamed:(id)arg1 idiom:(long long)arg2 subtype:(unsigned long long)arg3;
- (id)imageNamed:(id)arg1 scale:(double)arg2 idiom:(long long)arg3 subtype:(unsigned long long)arg4;
- (id)imageNamed:(id)arg1 scale:(double)arg2 idiom:(long long)arg3 subtype:(unsigned long long)arg4 cachingOptions:(unsigned long long)arg5 sizeClassPair:(CDStruct_d58201db)arg6 attachCatalogImage:(_Bool)arg7;
- (void)dealloc;
- (id)initWithName:(id)arg1 inBundle:(id)arg2 idiom:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIAssociationTable : NSObject
{
    NSMapTable *_leftToRightHashTables;
    NSMapTable *_rightToLeftHashTables;
}

- (_Bool)hasRightValuesForLeftValue:(id)arg1;
- (_Bool)hasLeftValuesForRightValue:(id)arg1;
- (id)rightValueEnumerableForLeftValue:(id)arg1;
- (id)leftValueEnumerableForRightValue:(id)arg1;
- (id)rightValuesForLeftValue:(id)arg1;
- (id)leftValuesForRightValue:(id)arg1;
- (id)rightValueEnumerable;
- (id)leftValueEnumerable;
- (id)rightValues;
- (id)leftValues;
- (_Bool)isEmpty;
- (void)unregisterAssociationWithLeftValue:(id)arg1 rightValue:(id)arg2;
- (void)registerAssociationWithLeftValue:(id)arg1 rightValue:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithLeftValueOptions:(unsigned long long)arg1 rightValueOptions:(unsigned long long)arg2;

@end

@interface _UIAsyncInvocation : NSObject
{
    _UIAsyncInvocationObserver *_observer;
    CDUnknownBlockType _invocationBlock;
    _Bool _invocationBlockHasBeenCalled;
}

+ (id)emptyInvocation;
+ (id)invocationWithBlock:(CDUnknownBlockType)arg1;
- (id)invoke;
- (void)dealloc;

@end

@interface _UIAsyncInvocationObserver : NSObject
{
    NSObject<OS_dispatch_queue> *_postCompletionQueue;
}

+ (void)whenInvocationsCompleteForObservers:(id)arg1 do:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (void)whenCompleteDo:(CDUnknownBlockType)arg1;
- (void)_didCompleteInvocation;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UITraitStorage : NSObject <NSCoding>
{
    NSMutableArray *_records;
    id _object;
    NSString *_keyPath;
}

@property(readonly, nonatomic) __weak id object; // @synthesize object=_object;
@property(readonly, nonatomic) NSString *keyPath; // @synthesize keyPath=_keyPath;
- (void)applyRecordsMatchingTraitCollection:(id)arg1;
- (void)addRecord:(id)arg1;
- (id)records;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1 keyPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAttributeTraitStorage : _UITraitStorage
{
}

- (void)applyRecordsMatchingTraitCollection:(id)arg1;
- (void)addRecordWithTraitCollection:(id)arg1 value:(id)arg2;
- (id)initWithObject:(id)arg1 keyPath:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAttributeTraitStorageRecord : NSObject <NSCoding>
{
    UITraitCollection *_traitCollection;
    id _value;
}

@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, nonatomic) UITraitCollection *traitCollection; // @synthesize traitCollection=_traitCollection;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTraitCollection:(id)arg1 value:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIAttributedStringView : UIView
{
    NSAttributedString *_string;
}

+ (Class)layerClass;
- (void)setTextRotationAngle:(double)arg1;
- (void)setString:(id)arg1;
- (void)didMoveToSuperview;
- (void)_updateContentsScale:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIAutologgingDeallocSentinel : NSObject
{
    _Bool _called;
    NSString *_message;
}

@property(nonatomic) _Bool called; // @synthesize called=_called;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
- (void)dealloc;

@end

@interface _UIBackdropColorSettings : NSObject
{
    _Bool _hasObservedValues;
    double _averageHue;
    double _averageSaturation;
    double _averageBrightness;
    double _contrast;
    _UIBackdropViewSettings *_parentSettings;
    double _previousAverageHue;
    double _previousAverageSaturation;
    double _previousAverageBrightness;
    double _previousContrast;
}

@property(nonatomic) _Bool hasObservedValues; // @synthesize hasObservedValues=_hasObservedValues;
@property(nonatomic) double previousContrast; // @synthesize previousContrast=_previousContrast;
@property(nonatomic) double previousAverageBrightness; // @synthesize previousAverageBrightness=_previousAverageBrightness;
@property(nonatomic) double previousAverageSaturation; // @synthesize previousAverageSaturation=_previousAverageSaturation;
@property(nonatomic) double previousAverageHue; // @synthesize previousAverageHue=_previousAverageHue;
@property(nonatomic) _UIBackdropViewSettings *parentSettings; // @synthesize parentSettings=_parentSettings;
@property(nonatomic) double contrast; // @synthesize contrast=_contrast;
@property(nonatomic) double averageBrightness; // @synthesize averageBrightness=_averageBrightness;
@property(nonatomic) double averageSaturation; // @synthesize averageSaturation=_averageSaturation;
@property(nonatomic) double averageHue; // @synthesize averageHue=_averageHue;
@property(readonly, nonatomic) UIColor *color; // @dynamic color;
- (_Bool)applyCABackdropLayerStatistics:(id)arg1;
- (void)setValuesFromModel:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropContentView : UIView
{
}

- (void)didMoveToWindow;
- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)_descendent:(id)arg1 didMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)recursivelyRemoveBackdropMaskViewsForView:(id)arg1;
- (void)backdropView:(id)arg1 recursivelyUpdateMaskViewsForView:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropEffectView : UIView
{
    CABackdropLayer *_backdropLayer;
    double _zoom;
}

+ (Class)layerClass;
@property(nonatomic) double zoom; // @synthesize zoom=_zoom;
@property(retain, nonatomic) CABackdropLayer *backdropLayer; // @synthesize backdropLayer=_backdropLayer;
- (void)backdropLayerStatisticsDidChange:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewLayer : CALayer
{
    _UIBackdropView *_backdropView;
}

@property(nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
- (void)dealloc;
- (void)renderInContext:(struct CGContext *)arg1;

@end

@interface _UIBackdropViewSettings : NSObject
{
    _Bool _explicitlySetGraphicsQuality;
    _Bool _requiresColorStatistics;
    _Bool _highlighted;
    _Bool _selected;
    _Bool _enabled;
    _Bool _backdropVisible;
    _Bool _zoomsBack;
    _Bool _lightenGrayscaleWithSourceOver;
    _Bool _darkenWithSourceOver;
    _Bool _designMode;
    _Bool _usesBackdropEffectView;
    _Bool _usesGrayscaleTintView;
    _Bool _usesColorTintView;
    _Bool _usesColorBurnTintView;
    _Bool _usesContentView;
    _Bool _usesDarkeningTintView;
    _Bool _appliesTintAndBlurSettings;
    _UIBackdropView *_backdrop;
    long long _style;
    long long _graphicsQuality;
    _UIBackdropColorSettings *_colorSettings;
    long long _renderingHint;
    long long _stackingLevel;
    double _grayscaleTintLevel;
    double _grayscaleTintAlpha;
    double _grayscaleTintMaskAlpha;
    UIImage *_grayscaleTintMaskImage;
    UIColor *_colorTint;
    double _colorTintAlpha;
    double _colorTintMaskAlpha;
    UIImage *_colorTintMaskImage;
    double _colorBurnTintLevel;
    double _colorBurnTintAlpha;
    UIImage *_colorBurnTintMaskImage;
    double _darkeningTintAlpha;
    double _darkeningTintHue;
    double _darkeningTintSaturation;
    double _darkeningTintBrightness;
    UIImage *_darkeningTintMaskImage;
    double _blurRadius;
    NSString *_blurQuality;
    long long _blurHardEdges;
    double _saturationDeltaFactor;
    double _filterMaskAlpha;
    UIImage *_filterMaskImage;
    UIColor *_legibleColor;
    UIColor *_combinedTintColor;
    double _scale;
    double _statisticsInterval;
    unsigned long long _version;
    long long _suppressSettingsDidChange;
    struct __CFRunLoopObserver *_runLoopObserver;
}

+ (id)darkeningTintColor;
+ (id)settingsForPrivateStyle:(long long)arg1;
+ (id)settingsForStyle:(long long)arg1;
+ (id)settingsForPrivateStyle:(long long)arg1 graphicsQuality:(long long)arg2;
+ (id)settingsForStyle:(long long)arg1 graphicsQuality:(long long)arg2;
@property(nonatomic) struct __CFRunLoopObserver *runLoopObserver; // @synthesize runLoopObserver=_runLoopObserver;
@property(nonatomic) long long suppressSettingsDidChange; // @synthesize suppressSettingsDidChange=_suppressSettingsDidChange;
@property(nonatomic) _Bool appliesTintAndBlurSettings; // @synthesize appliesTintAndBlurSettings=_appliesTintAndBlurSettings;
@property(nonatomic) _Bool usesDarkeningTintView; // @synthesize usesDarkeningTintView=_usesDarkeningTintView;
@property(nonatomic) _Bool usesContentView; // @synthesize usesContentView=_usesContentView;
@property(nonatomic) _Bool usesColorBurnTintView; // @synthesize usesColorBurnTintView=_usesColorBurnTintView;
@property(nonatomic) _Bool usesColorTintView; // @synthesize usesColorTintView=_usesColorTintView;
@property(nonatomic) _Bool usesGrayscaleTintView; // @synthesize usesGrayscaleTintView=_usesGrayscaleTintView;
@property(nonatomic) _Bool usesBackdropEffectView; // @synthesize usesBackdropEffectView=_usesBackdropEffectView;
@property(nonatomic, setter=setDesignMode:) _Bool designMode; // @synthesize designMode=_designMode;
@property(nonatomic) unsigned long long version; // @synthesize version=_version;
@property(nonatomic) double statisticsInterval; // @synthesize statisticsInterval=_statisticsInterval;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(retain, nonatomic) UIColor *combinedTintColor; // @synthesize combinedTintColor=_combinedTintColor;
@property(retain, nonatomic) UIColor *legibleColor; // @synthesize legibleColor=_legibleColor;
@property(retain, nonatomic) UIImage *filterMaskImage; // @synthesize filterMaskImage=_filterMaskImage;
@property(nonatomic) double filterMaskAlpha; // @synthesize filterMaskAlpha=_filterMaskAlpha;
@property(nonatomic) double saturationDeltaFactor; // @synthesize saturationDeltaFactor=_saturationDeltaFactor;
@property(nonatomic) long long blurHardEdges; // @synthesize blurHardEdges=_blurHardEdges;
@property(copy, nonatomic) NSString *blurQuality; // @synthesize blurQuality=_blurQuality;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
@property(nonatomic) _Bool darkenWithSourceOver; // @synthesize darkenWithSourceOver=_darkenWithSourceOver;
@property(retain, nonatomic) UIImage *darkeningTintMaskImage; // @synthesize darkeningTintMaskImage=_darkeningTintMaskImage;
@property(nonatomic) double darkeningTintBrightness; // @synthesize darkeningTintBrightness=_darkeningTintBrightness;
@property(nonatomic) double darkeningTintSaturation; // @synthesize darkeningTintSaturation=_darkeningTintSaturation;
@property(nonatomic) double darkeningTintHue; // @synthesize darkeningTintHue=_darkeningTintHue;
@property(nonatomic) double darkeningTintAlpha; // @synthesize darkeningTintAlpha=_darkeningTintAlpha;
@property(retain, nonatomic) UIImage *colorBurnTintMaskImage; // @synthesize colorBurnTintMaskImage=_colorBurnTintMaskImage;
@property(nonatomic) double colorBurnTintAlpha; // @synthesize colorBurnTintAlpha=_colorBurnTintAlpha;
@property(nonatomic) double colorBurnTintLevel; // @synthesize colorBurnTintLevel=_colorBurnTintLevel;
@property(retain, nonatomic) UIImage *colorTintMaskImage; // @synthesize colorTintMaskImage=_colorTintMaskImage;
@property(nonatomic) double colorTintMaskAlpha; // @synthesize colorTintMaskAlpha=_colorTintMaskAlpha;
@property(nonatomic) double colorTintAlpha; // @synthesize colorTintAlpha=_colorTintAlpha;
@property(retain, nonatomic) UIColor *colorTint; // @synthesize colorTint=_colorTint;
@property(nonatomic) _Bool lightenGrayscaleWithSourceOver; // @synthesize lightenGrayscaleWithSourceOver=_lightenGrayscaleWithSourceOver;
@property(retain, nonatomic) UIImage *grayscaleTintMaskImage; // @synthesize grayscaleTintMaskImage=_grayscaleTintMaskImage;
@property(nonatomic) double grayscaleTintMaskAlpha; // @synthesize grayscaleTintMaskAlpha=_grayscaleTintMaskAlpha;
@property(nonatomic) double grayscaleTintAlpha; // @synthesize grayscaleTintAlpha=_grayscaleTintAlpha;
@property(nonatomic) double grayscaleTintLevel; // @synthesize grayscaleTintLevel=_grayscaleTintLevel;
@property(nonatomic) _Bool zoomsBack; // @synthesize zoomsBack=_zoomsBack;
@property(nonatomic, getter=isBackdropVisible) _Bool backdropVisible; // @synthesize backdropVisible=_backdropVisible;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) long long stackingLevel; // @synthesize stackingLevel=_stackingLevel;
@property(nonatomic) long long renderingHint; // @synthesize renderingHint=_renderingHint;
@property(retain, nonatomic) _UIBackdropColorSettings *colorSettings; // @synthesize colorSettings=_colorSettings;
@property(nonatomic) _Bool requiresColorStatistics; // @synthesize requiresColorStatistics=_requiresColorStatistics;
@property(nonatomic) _Bool explicitlySetGraphicsQuality; // @synthesize explicitlySetGraphicsQuality=_explicitlySetGraphicsQuality;
@property(nonatomic) long long graphicsQuality; // @synthesize graphicsQuality=_graphicsQuality;
@property(nonatomic) long long style; // @synthesize style=_style;
@property(nonatomic) _UIBackdropView *backdrop; // @synthesize backdrop=_backdrop;
- (id)description;
- (void)computeOutputSettingsUsingModel:(id)arg1;
@property(nonatomic) _Bool blursWithHardEdges; // @dynamic blursWithHardEdges;
- (void)scheduleSettingsDidChangeIfNeeded;
- (void)clearRunLoopObserver;
- (void)decrementSuppressSettingsDidChange;
- (void)incrementSuppressSettingsDidChange;
- (void)setStackinglevel:(long long)arg1;
- (void)setValuesFromModel:(id)arg1;
- (void)removeKeyPathObserver:(id)arg1;
- (void)addKeyPathObserver:(id)arg1;
- (void)dealloc;
- (void)restoreDefaultValues;
- (void)setDefaultValues;
- (id)initWithDefaultValuesForGraphicsQuality:(long long)arg1;
- (id)initWithDefaultValues;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsLight : _UIBackdropViewSettings
{
}

- (void)computeOutputSettingsUsingModel:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsAdaptiveLight : _UIBackdropViewSettingsLight
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsBlur : _UIBackdropViewSettings
{
}

- (void)computeOutputSettingsUsingModel:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsColorSample : _UIBackdropViewSettings
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsColored : _UIBackdropViewSettings
{
}

- (void)computeOutputSettingsUsingModel:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsCombiner : _UIBackdropViewSettings
{
    _UIBackdropViewSettings *_inputSettingsA;
    _UIBackdropViewSettings *_inputSettingsB;
    double _weighting;
    _UIBackdropViewSettings *_outputSettingsA;
    _UIBackdropViewSettings *_outputSettingsB;
}

@property(retain, nonatomic) _UIBackdropViewSettings *outputSettingsB; // @synthesize outputSettingsB=_outputSettingsB;
@property(retain, nonatomic) _UIBackdropViewSettings *outputSettingsA; // @synthesize outputSettingsA=_outputSettingsA;
@property(nonatomic) double weighting; // @synthesize weighting=_weighting;
@property(retain, nonatomic) _UIBackdropViewSettings *inputSettingsB; // @synthesize inputSettingsB=_inputSettingsB;
@property(retain, nonatomic) _UIBackdropViewSettings *inputSettingsA; // @synthesize inputSettingsA=_inputSettingsA;
- (void)computeOutputSettingsUsingModel:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsDark : _UIBackdropViewSettings
{
}

- (void)computeOutputSettingsUsingModel:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsDarkLow : _UIBackdropViewSettingsDark
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsDarkWithZoom : _UIBackdropViewSettingsDark
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsFlatSemiLight : _UIBackdropViewSettingsLight
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsLightKeyboard : _UIBackdropViewSettings
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsLightLow : _UIBackdropViewSettingsLight
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsNonAdaptive : _UIBackdropViewSettings
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsNone : _UIBackdropViewSettings
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsPasscodePaddle : _UIBackdropViewSettingsDark
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsSemiLight : _UIBackdropViewSettingsLight
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsUltraColored : _UIBackdropViewSettings
{
}

- (void)setColorTint:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsUltraDark : _UIBackdropViewSettingsNonAdaptive
{
}

- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIBackdropViewSettingsUltraLight : _UIBackdropViewSettings
{
}

- (void)dealloc;
- (void)computeOutputSettingsUsingModel:(id)arg1;
- (void)_accessibilityButtonShapesDidChangeNotification:(id)arg1;
- (void)setDefaultValues;
- (id)initWithDefaultValuesForGraphicsQuality:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIBackgroundHitTestWindow : UIWindow
{
}

+ (_Bool)_isSystemWindow;

@end

__attribute__((visibility("hidden")))
@interface _UIBackgroundTaskInfo : NSObject
{
    unsigned long long _taskId;
    CDUnknownBlockType _expireHandler;
    BKSProcessAssertion *_processAssertion;
    int _count;
}

+ (id)backgroundTaskAssertionQueue;
- (void)invalidate;
- (void)fireExpirationHandler;
- (void)dealloc;
- (id)initWithProcessAssertion:(id)arg1 expirationHandler:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIBadgeBackground : UIView
{
    UIImage *_image;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIBadgeView : UIView
{
    UIView *_value;
    UIView *_background;
    UIView *_alternate;
}

- (void)setBlinks:(_Bool)arg1;
- (void)_updateBackgroundBlinks:(_Bool)arg1;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(_Bool)arg3;
- (void)layoutSubviews;
- (void)_updateLabelFont;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)setValue:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithValue:(id)arg1 blinks:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIBarAppearanceStorage : NSObject
{
    NSMutableDictionary *backgroundImages;
}

+ (long long)typicalBarPosition;
- (void)dealloc;
- (_Bool)hasAnyCustomBackgroundImage;
- (id)backgroundImageForBarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forBarPosition:(long long)arg2 barMetrics:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIBarBackButtonItemAppearanceStorage : NSObject
{
    NSMutableDictionary *backgroundImages;
    NSMutableDictionary *miniBackgroundImages;
    NSValue *titlePositionOffset;
    NSValue *miniTitlePositionOffset;
    NSMutableDictionary *backgroundVerticalAdjustmentsForBarMetrics;
}

@property(retain, nonatomic) NSValue *miniTitlePositionOffset; // @synthesize miniTitlePositionOffset;
@property(retain, nonatomic) NSValue *titlePositionOffset; // @synthesize titlePositionOffset;
- (double)backgroundVerticalAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackgroundVerticalAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (id)anyBackgroundImage;
- (id)backgroundImageForState:(unsigned long long)arg1 isMini:(_Bool)arg2;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 isMini:(_Bool)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIBarBackgroundCustomImageContainer : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UIBarBackgroundTopCurtainView : UIView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UIBarItemAppearanceStorage : NSObject
{
    NSMutableDictionary *textAttributesForState;
}

- (id)textAttributeForKey:(id)arg1 state:(unsigned long long)arg2;
- (void)setTextAttribute:(id)arg1 forKey:(id)arg2 state:(unsigned long long)arg3;
- (id)textAttributesForState:(unsigned long long)arg1;
- (void)setTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIBarButtonItemAppearanceStorage : _UIBarItemAppearanceStorage
{
    NSMutableDictionary *backgroundImages;
    NSMutableDictionary *miniBackgroundImages;
    UIColor *tintColor;
    NSValue *titlePositionOffset;
    NSValue *miniTitlePositionOffset;
    NSMutableDictionary *backgroundVerticalAdjustmentsForBarMetrics;
    _UIBarBackButtonItemAppearanceStorage *backButtonAppearance;
}

@property(retain, nonatomic) NSValue *miniTitlePositionOffset; // @synthesize miniTitlePositionOffset;
@property(retain, nonatomic) NSValue *titlePositionOffset; // @synthesize titlePositionOffset;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor;
@property(retain, nonatomic) NSValue *miniBackButtonTitlePositionOffset;
@property(retain, nonatomic) NSValue *backButtonTitlePositionOffset;
- (id)anyBackButtonBackgroundImage;
- (id)backButtonBackgroundImageForState:(unsigned long long)arg1 isMini:(_Bool)arg2;
- (void)setBackButtonBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 isMini:(_Bool)arg3;
- (double)backButtonBackgroundVerticalAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackButtonBackgroundVerticalAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (double)backgroundVerticalAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackgroundVerticalAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (id)anyBackgroundImage;
- (id)backgroundImageForState:(unsigned long long)arg1 style:(long long)arg2 isMini:(_Bool)arg3;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 style:(long long)arg3 isMini:(_Bool)arg4;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIBarItemAppearance : _UIAppearance
{
    NSArray *_blindViewAppearances;
}

+ (id)_appearanceForClass:(Class)arg1 withContainerList:(id)arg2;
+ (id)_rootAppearancesNode;
- (void)dealloc;
- (void)forwardInvocation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIBarPanGestureRecognizer : UIPanGestureRecognizer
{
    long long _barAction;
    double _bias;
}

@property(readonly, nonatomic) double bias; // @synthesize bias=_bias;
@property(readonly, nonatomic) long long barAction; // @synthesize barAction=_barAction;
- (id)description;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIBarTapGestureRecognizer : UITapGestureRecognizer
{
    _Bool _failWhenTappingInBars;
    long long _tapCategory;
}

@property(nonatomic) _Bool failWhenTappingInBars; // @synthesize failWhenTappingInBars=_failWhenTappingInBars;
@property(readonly, nonatomic) long long tapCategory; // @synthesize tapCategory=_tapCategory;
- (id)description;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (long long)_categoryForTapLocation:(struct CGPoint)arg1;
- (void)_setDelegate:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIBaselineLayoutStrut : UITextFieldLabel
{
}

- (struct CGSize)intrinsicContentSize;

@end

__attribute__((visibility("hidden")))
@interface _UIBlendingHighlightView : UIView
{
    UIView *_colorBurnView;
    UIView *_plusDView;
}

+ (id)_blendingPressedView;
+ (id)_blendingSeparatorView;
- (void)dealloc;
@property double cornerRadius;
- (id)initWithFrame:(struct CGRect)arg1 colorBurnColor:(id)arg2 plusDColor:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIBookViewControllerView : UIView
{
    UIBookViewController *_bookViewController;
}

- (void)layoutSubviews;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)initWithBookViewController:(id)arg1 withView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIButtonContentCenteringSpacer : UIView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UIButtonMaskAnimationView : UIView
{
    unsigned long long _hardEdge;
    UIView *_hardEdgeLine;
    UIButton *_delegate;
}

@property(nonatomic) UIButton *delegate; // @synthesize delegate=_delegate;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
@property unsigned long long hardEdge;
@property(nonatomic) UIColor *borderColor;
@property double borderWidth;
- (void)layoutSubviews;
- (struct CGRect)_frameForLine;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UICAAnimationPositionQuantizer : NSObject
{
}

+ (void)quantizePositionsInAnimation:(id)arg1 givenView:(id)arg2;
+ (id)animationWithQuantizedPositionsGivenAnimation:(id)arg1 appliedToView:(id)arg2;

@end

@interface _UICAPackageView : UIView
{
    CAPackage *_package;
    NSArray *_rootViews;
}

+ (id)_buildViewHierarchyFrom:(id)arg1 publishedObjectViewClassMap:(id)arg2 into:(id)arg3;
+ (void)loadPackageViewWithContentsOfURL:(id)arg1 publishedObjectViewClassMap:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)loadPackageViewWithData:(id)arg1 publishedObjectViewClassMap:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)loadPackageViewWithObject:(id)arg1 publishedObjectViewClassMap:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (_Bool)_shouldCatchDecodingExceptions;
- (id)publishedViewWithName:(id)arg1;
- (id)publishedObjectWithName:(id)arg1;
- (void)dealloc;
- (id)initWithContentsOfURL:(id)arg1 publishedObjectViewClassMap:(id)arg2;
- (id)initWithData:(id)arg1 publishedObjectViewClassMap:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UICalloutBarSystemButtonDescription : NSObject
{
    NSString *m_title;
    UIImage *m_image;
    SEL m_action;
    int m_type;
    CDUnknownBlockType m_configurationBlock;
}

+ (id)buttonDescriptionWithImage:(id)arg1 action:(SEL)arg2 type:(int)arg3;
+ (id)buttonDescriptionWithTitle:(id)arg1 action:(SEL)arg2 type:(int)arg3;
@property(copy, nonatomic) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=m_configurationBlock;
@property(readonly, nonatomic) SEL action; // @synthesize action=m_action;
- (id)materializeButtonInView:(id)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 orImage:(id)arg2 action:(SEL)arg3 type:(int)arg4;

@end

__attribute__((visibility("hidden")))
@interface _UICascadingTextStorage : NSConcreteTextStorage
{
    NSMutableDictionary *_defaultAttributes;
}

+ (id)defaultFont;
- (void)_restoreOriginalFontAttribute;
- (_Bool)_shouldSetOriginalFontAttribute;
- (id)_defaultAttributes;
@property(copy, nonatomic) NSDictionary *defaultAttributes;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)dealloc;
- (long long)_ui_resolvedTextAlignment;
@property(nonatomic) long long lineBreakMode;
@property(nonatomic) long long textAlignment;
@property(retain, nonatomic) UIColor *textColor;
@property(nonatomic) double shadowBlur;
@property(nonatomic) struct CGSize shadowOffset;
@property(retain, nonatomic) UIColor *shadowColor;
- (id)_shadow;
- (void)_setShadow:(id)arg1;
@property(retain, nonatomic) UIFont *font;

@end

__attribute__((visibility("hidden")))
@interface _UICharacterStreamingManager : NSObject
{
    UITextView *_textView;
    CADisplayLink *_streamingAnimationDisplayLink;
    _Bool _streamingAnimationActive;
    double _lastAnimationUpdateTimeStamp;
    _Bool _committingFinalResults;
    _Bool _discardNextHypothesis;
    NSString *_previousHypothesis;
    NSString *_lastHypothesis;
    NSString *_targetHypothesis;
    NSMutableArray *_pendingEdits;
    double _streamingCharacterInsertionRate;
    double _minDurationBetweenHypotheses;
}

@property(nonatomic) _Bool discardNextHypothesis; // @synthesize discardNextHypothesis=_discardNextHypothesis;
@property(nonatomic) double minDurationBetweenHypotheses; // @synthesize minDurationBetweenHypotheses=_minDurationBetweenHypotheses;
@property(nonatomic) double streamingCharacterInsertionRate; // @synthesize streamingCharacterInsertionRate=_streamingCharacterInsertionRate;
@property(retain, nonatomic) NSMutableArray *pendingEdits; // @synthesize pendingEdits=_pendingEdits;
@property(copy, nonatomic) NSString *targetHypothesis; // @synthesize targetHypothesis=_targetHypothesis;
@property(copy, nonatomic) NSString *lastHypothesis; // @synthesize lastHypothesis=_lastHypothesis;
@property(copy, nonatomic) NSString *previousHypothesis; // @synthesize previousHypothesis=_previousHypothesis;
- (void)setupToInsertResultForNewHypothesis:(id)arg1;
- (void)_displayLinkFired:(id)arg1;
- (void)_startStreamingAnimations;
- (void)_stopStreamingAnimation;
- (void)setWords:(id)arg1;
- (void)commitFinalResults;
- (void)dealloc;
- (id)initWithTextView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UICircleProgressIndicator : UIView
{
    double _animatedValue;
    double _animationEndTime;
    double _animationStartTime;
    double _animationStartValue;
    UIImage *_borderImage;
    UIImage *_centerImage;
    struct UIEdgeInsets _centerImageInsets;
    CADisplayLink *_displayLink;
    UIImage *_fillImage;
    _Bool _highlighted;
    UIImageView *_indeterminateView;
    _Bool _isAnimating;
    double _progress;
    UIColor *_unhighlightedBackgroundColor;
}

+ (id)_indeterminateImage;
+ (id)_fillImage;
+ (id)_borderImage;
@property(retain, nonatomic) UIImage *fillImage; // @synthesize fillImage=_fillImage;
@property(retain, nonatomic) UIImage *borderImage; // @synthesize borderImage=_borderImage;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) struct UIEdgeInsets imageInsets; // @synthesize imageInsets=_centerImageInsets;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_centerImage;
- (void)_startIndeterminateAnimation;
- (void)_animateValueOnDisplayLink:(id)arg1;
- (void)_setHidesBorderView:(_Bool)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)didMoveToWindow;
- (void)setProgress:(double)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isIndeterminate) _Bool indeterminate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UICollectionSnapshotView : UICollectionReusableView
{
}

@end

@interface _UICollectionViewCompositionLayout : UICollectionViewLayout
{
    NSMutableDictionary *_sublayoutsDict;
}

+ (Class)invalidationContextClass;
- (id)invalidationContextForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (id)invalidationContextForBoundsChange:(struct CGRect)arg1;
- (void)invalidateLayoutWithContext:(struct _UICollectionViewCompositionLayoutInvalidationContext *)arg1;
- (void)_prepareLayout:(id)arg1;
- (void)prepareLayout;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (_Bool)shouldInvalidateLayoutForPreferredLayoutAttributes:(id)arg1 withOriginalAttributes:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)_originConvertedSublayoutAttributesForAttributes:(id)arg1 inLayout:(id)arg2;
- (struct CGSize)collectionViewContentSize;
@property(readonly, nonatomic) NSArray *sublayouts;
- (void)removeSublayout:(id)arg1;
- (void)addSublayout:(id)arg1 forElementKinds:(id)arg2;
- (void)addSublayout:(id)arg1 forItems:(id)arg2 inSection:(long long)arg3 offset:(struct CGPoint)arg4 relativeToEdges:(unsigned long long)arg5 fromSiblingLayout:(id)arg6;
- (void)addSublayout:(id)arg1 forSections:(id)arg2 offset:(struct CGPoint)arg3 relativeToEdges:(unsigned long long)arg4 fromSiblingLayout:(id)arg5;
- (struct CGRect)_frameForLayout:(id)arg1 offset:(struct CGPoint)arg2 relativeToEdges:(unsigned long long)arg3 fromSiblingLayout:(id)arg4;
- (void)addSublayout:(id)arg1 forRect:(struct CGRect)arg2;
- (void)dealloc;
- (id)init;

@end

@interface _UICollectionViewCompositionLayoutInvalidationContext : UICollectionViewLayoutInvalidationContext
{
    NSMapTable *_invalidationContextTable;
}

@property(retain, nonatomic, getter=_invalidationContextTable, setter=_setInvalidationContextTable:) NSMapTable *invalidationContextTable;
- (void)dealloc;

@end

@interface _UICollectionViewControllerLayoutToLayoutTransition : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _crossFadeNavigationBar;
    _Bool _crossFadeBottomBars;
    _Bool _interactionAborted;
    UICollectionViewLayout *_toLayout;
    UIPercentDrivenInteractiveTransition *_interactionController;
    long long _operation;
}

+ (id)transitionForOperation:(long long)arg1 fromViewController:(id)arg2 toViewController:(id)arg3;
@property(nonatomic) long long operation; // @synthesize operation=_operation;
@property(nonatomic) _Bool interactionAborted; // @synthesize interactionAborted=_interactionAborted;
@property(nonatomic) UIPercentDrivenInteractiveTransition *interactionController; // @synthesize interactionController=_interactionController;
@property(nonatomic) _Bool crossFadeBottomBars; // @synthesize crossFadeBottomBars=_crossFadeBottomBars;
@property(nonatomic) _Bool crossFadeNavigationBar; // @synthesize crossFadeNavigationBar=_crossFadeNavigationBar;
@property(retain, nonatomic) UICollectionViewLayout *toLayout; // @synthesize toLayout=_toLayout;
- (_Bool)_shouldCrossFadeBottomBars;
- (_Bool)_shouldCrossFadeNavigationBar;
- (void)dealloc;
- (double)transitionDuration:(id)arg1;
- (void)animateTransition:(id)arg1;
- (void)animationEnded:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UICollectionViewItemKey : NSObject <NSCopying>
{
    NSIndexPath *_indexPath;
    NSString *_identifier;
    _Bool _isClone;
    unsigned long long _type;
}

+ (id)collectionItemKeyForLayoutAttributes:(id)arg1;
+ (id)collectionItemKeyForDecorationViewOfKind:(id)arg1 andIndexPath:(id)arg2;
+ (id)collectionItemKeyForSupplementaryViewOfKind:(id)arg1 andIndexPath:(id)arg2;
+ (id)collectionItemKeyForCellWithIndexPath:(id)arg1;
@property(readonly, nonatomic) _Bool isClone; // @synthesize isClone=_isClone;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, retain, nonatomic) NSIndexPath *indexPath; // @synthesize indexPath=_indexPath;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyAsClone:(_Bool)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 indexPath:(id)arg2 identifier:(id)arg3 clone:(_Bool)arg4;
- (id)initWithType:(unsigned long long)arg1 indexPath:(id)arg2 identifier:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UICollectionViewTrackedValue : NSObject
{
    double _trackedValue;
    NSArray *_values;
    long long _valuesCount;
    long long _currentIndex;
    _Bool _isAccumulating;
}

@property(nonatomic) double trackedValue; // @synthesize trackedValue=_trackedValue;
@property(nonatomic) _Bool isAccumulating; // @synthesize isAccumulating=_isAccumulating;
- (double)speed;
- (void)addValue:(double)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UICollectionViewTrackedValueItem : NSObject
{
    double _timeStamp;
    double _value;
}

@property(nonatomic) double value; // @synthesize value=_value;
@property(nonatomic) double timeStamp; // @synthesize timeStamp=_timeStamp;

@end

__attribute__((visibility("hidden")))
@interface _UICompatibilityTextViewData : NSObject
{
    WebFrame *m_frame;
    DOMHTMLElement *m_body;
    int m_marginTop;
    UIDelayedAction *m_selectionTimer;
    UIDelayedAction *m_longPressAction;
    _Bool m_editable;
    _Bool m_editing;
    _Bool m_becomesEditableWithGestures;
    _Bool m_reentrancyGuard;
    _Bool m_readyForScroll;
    _Bool m_hasExplicitTextAlignment;
    _Bool m_hasExplicitLineHeight;
    UITextInteractionAssistant *m_interactionAssistant;
    UIWebDocumentView *m_webView;
    UIFont *m_font;
    UIColor *m_textColor;
    long long m_textAlignment;
    UIView *m_inputView;
    UIView *m_inputAccessoryView;
    double m_lineHeight;
    _Bool m_skipScrollContainingView;
    _Bool m_allowsEditingTextAttributes;
    _Bool m_usesAttributedText;
    _Bool m_clearsOnInsertion;
}

@end

@interface _UICompatibilityTextViewPrintFormatter : UIWebDocumentViewPrintFormatter
{
}

- (id)_webDocumentView;

@end

@interface _UIContentUnavailableView : UIView
{
    unsigned long long _style;
    NSString *_title;
    _UIBackdropView *_backdrop;
    UIView *_containerView;
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    UIButton *_actionButton;
    NSLayoutConstraint *titleToMessageConstraint;
    NSLayoutConstraint *messageToButtonConstraint;
    UIView *_fromSnapshot;
    UIView *_toSnapshot;
    struct CGSize _fromSnapshotSize;
    NSMutableArray *_containerViewContraints;
    NSString *_message;
    NSString *_buttonTitle;
    CDUnknownBlockType _buttonAction;
    unsigned long long _vibrantOptions;
}

@property(nonatomic) unsigned long long vibrantOptions; // @synthesize vibrantOptions=_vibrantOptions;
@property(copy, nonatomic) CDUnknownBlockType buttonAction; // @synthesize buttonAction=_buttonAction;
@property(copy, nonatomic) NSString *buttonTitle; // @synthesize buttonTitle=_buttonTitle;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (_Bool)_hasVibrantButton;
- (_Bool)_hasVibrantText;
- (double)_labelAlpha;
- (id)_flatTextColor;
- (id)_vibrantBaseColor;
- (void)windowDidRotateNotification:(id)arg1;
- (void)windowWillAnimateRotateNotification:(id)arg1;
- (void)windowWillRotateNotification:(id)arg1;
- (void)didMoveToWindow;
- (void)updateConstraints;
- (void)_actionButtonPressed:(id)arg1;
- (void)_updateViewHierarchy;
- (void)layoutSubviews;
- (id)_buttonBackgroundImageForStyle:(unsigned long long)arg1 controlState:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 title:(id)arg2 style:(unsigned long long)arg3 includeBackdrop:(_Bool)arg4;
- (id)initWithFrame:(struct CGRect)arg1 title:(id)arg2 style:(unsigned long long)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UICurrentContextPresentationController : UIPresentationController
{
}

- (id)_firstCurrentContextChildInWindow;
- (CDStruct_d58201db)__sizeClassPair;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (_Bool)shouldRemovePresentersView;
- (_Bool)_shouldRespectDefinesPresentationContext;
- (_Bool)shouldPresentInFullscreen;

@end

__attribute__((visibility("hidden")))
@interface _UIDSMAlertViewDelegate : NSObject <UIAlertViewDelegate>
{
    CDUnknownBlockType _completionHandler;
}

@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)willPresentAlertView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerChineseCalendar : NSCalendar
{
    NSCalendar *realCalendar;
}

+ (id)cyclicalFromRelated:(id)arg1;
+ (id)relatedFromCyclical:(id)arg1;
@property NSCalendar *realCalendar; // @synthesize realCalendar;
- (struct _NSRange)rangeOfUnit:(unsigned long long)arg1 inUnit:(unsigned long long)arg2 forDate:(id)arg3;
- (id)dateByAddingComponents:(id)arg1 toDate:(id)arg2 options:(unsigned long long)arg3;
- (id)calendarIdentifier;
- (struct _NSRange)maximumRangeOfUnit:(unsigned long long)arg1;
- (void)setTimeZone:(id)arg1;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2;
- (id)components:(unsigned long long)arg1 fromDate:(id)arg2 toDate:(id)arg3 options:(unsigned long long)arg4;
- (id)dateFromComponents:(id)arg1;
- (id)initWithCalendar:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerComponent : NSObject
{
    unsigned long long _equivalentUnit;
    NSString *_formatString;
    unsigned long long _calendarUnit;
    double _width;
    struct _NSRange _unitRange;
}

+ (id)componentsFromDateFormatString:(id)arg1 locale:(id)arg2 desiredUnits:(long long)arg3;
+ (id)componentsFromDateFormatString:(id)arg1 locale:(id)arg2;
@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) struct _NSRange unitRange; // @synthesize unitRange=_unitRange;
@property(readonly, nonatomic) unsigned long long calendarUnit; // @synthesize calendarUnit=_calendarUnit;
@property(readonly, nonatomic) NSString *formatString; // @synthesize formatString=_formatString;
@property(readonly, nonatomic) unsigned long long equivalentUnit;
- (id)description;
- (void)dealloc;
- (id)_initWithFormatString:(id)arg1 calendarUnit:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode : NSObject
{
    NSDateComponents *_selectedDateComponents;
    NSDateComponents *_baseDateComponents;
    unsigned long long *_elements;
    long long _yearsSinceBaseDate;
    struct _NSRange _maxDayRange;
    struct _NSRange _maxMonthRange;
    NSString *_localizedFormatString;
    NSArray *_dateFormatters;
    UIColor *_todayTextColor;
    UIFont *_amPmFont;
    UIFont *_font;
    UIFont *_defaultTimeFont;
    NSString *_amString;
    NSString *_pmString;
    NSDateComponents *_todayDateComponents;
    NSNumberFormatter *_formatter;
    _UIDatePickerView *_datePickerView;
    _Bool _isUsingJapaneseCalendar;
    unsigned long long _numberOfComponents;
    long long _minuteInterval;
    double _todaySinceReferenceDate;
    NSDate *_minimumDate;
    NSDateComponents *_minimumDateComponents;
    NSDate *_maximumDate;
    NSDateComponents *_maximumDateComponents;
    NSDate *_baseDate;
    NSDate *_originatingDate;
}

+ (unsigned long long)extractableCalendarUnits;
+ (id)_datePickerModeWithFormatString:(id)arg1 datePickerView:(id)arg2;
+ (id)_datePickerModeWithMode:(long long)arg1 datePickerView:(id)arg2;
+ (long long)datePickerMode;
+ (id)newDateFromGregorianYear:(long long)arg1 month:(long long)arg2 day:(long long)arg3 timeZone:(id)arg4;
+ (void)initialize;
@property(retain, nonatomic) NSDate *originatingDate; // @synthesize originatingDate=_originatingDate;
@property(nonatomic) long long yearsSinceBaseDate; // @synthesize yearsSinceBaseDate=_yearsSinceBaseDate;
@property(retain, nonatomic) NSDate *baseDate; // @synthesize baseDate=_baseDate;
@property(retain, nonatomic) NSString *localizedFormatString; // @synthesize localizedFormatString=_localizedFormatString;
@property(nonatomic) _UIDatePickerView *datePickerView; // @synthesize datePickerView=_datePickerView;
@property(retain, nonatomic) NSDateComponents *selectedDateComponents; // @synthesize selectedDateComponents=_selectedDateComponents;
@property(readonly, nonatomic) NSDateComponents *maximumDateComponents; // @synthesize maximumDateComponents=_maximumDateComponents;
@property(readonly, nonatomic) NSDate *maximumDate; // @synthesize maximumDate=_maximumDate;
@property(readonly, nonatomic) NSDateComponents *minimumDateComponents; // @synthesize minimumDateComponents=_minimumDateComponents;
@property(readonly, nonatomic) NSDate *minimumDate; // @synthesize minimumDate=_minimumDate;
@property(nonatomic) double todaySinceReferenceDate; // @synthesize todaySinceReferenceDate=_todaySinceReferenceDate;
@property(nonatomic) long long minuteInterval; // @synthesize minuteInterval=_minuteInterval;
@property(nonatomic) unsigned long long numberOfComponents; // @synthesize numberOfComponents=_numberOfComponents;
- (void)updateEnabledStateOfViewForRow:(long long)arg1 inComponent:(long long)arg2;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 column:(long long)arg2;
- (_Bool)_scrollingAnyColumnExcept:(int)arg1;
- (_Bool)_isComponentScrolling:(long long)arg1;
- (_Bool)areValidDateComponents:(id)arg1 comparingUnits:(long long)arg2;
- (id)viewForRow:(long long)arg1 inComponent:(long long)arg2 reusingView:(id)arg3;
- (void)takeExtremesFromMinimumDate:(id)arg1 maximumDate:(id)arg2;
- (id)dateComponentsByRestrictingSelectedComponents:(id)arg1 withLastManipulatedColumn:(long long)arg2;
- (_Bool)_monthExists:(long long)arg1 inYear:(long long)arg2;
- (long long)_numberOfDaysInDateComponents:(id)arg1;
- (void)_updateSelectedDateComponentsWithNewValueInComponent:(long long)arg1 usingSelectionBarValue:(_Bool)arg2;
- (void)resetSelectedDateComponentsWithValuesUnderSelectionBars;
- (void)updateSelectedDateComponentsWithNewValueInComponent:(long long)arg1;
- (void)loadDate:(id)arg1 animated:(_Bool)arg2;
- (long long)validateValue:(long long)arg1 forCalendarUnit:(unsigned long long)arg2;
- (long long)rowForValue:(long long)arg1 forCalendarUnit:(unsigned long long)arg2 currentRow:(long long)arg3;
- (long long)valueForDate:(id)arg1 dateComponents:(id)arg2 calendarUnit:(unsigned long long)arg3;
- (long long)rowForDate:(id)arg1 dateComponents:(id)arg2 component:(long long)arg3 currentRow:(long long)arg4;
- (struct _NSRange)rangeForCalendarUnit:(unsigned long long)arg1;
- (long long)titleAlignmentForCalendarUnit:(unsigned long long)arg1;
- (id)titleForRow:(long long)arg1 inComponent:(long long)arg2;
- (id)dateFormatForCalendarUnit:(unsigned long long)arg1;
- (id)dateForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;
- (long long)valueForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;
- (long long)eraForYearRow:(long long)arg1;
- (long long)yearForRow:(long long)arg1;
- (long long)monthForRow:(long long)arg1;
- (long long)dayForRow:(long long)arg1;
- (long long)hourForRow:(long long)arg1;
- (long long)minuteForRow:(long long)arg1;
- (long long)secondForRow:(long long)arg1;
- (id)_dateForYearRow:(long long)arg1;
- (id)_dateByEnsuringValue:(long long)arg1 forCalendarUnit:(unsigned long long)arg2;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;
- (long long)_incrementForStaggeredTimeIntervals;
- (double)totalComponentWidthWithFont:(id)arg1;
@property(readonly, nonatomic) double totalComponentWidth; // @dynamic totalComponentWidth;
- (void)resetComponentWidths;
- (void)noteCalendarChanged;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;
- (long long)numberOfRowsInComponent:(long long)arg1;
- (long long)componentForCalendarUnit:(unsigned long long)arg1;
- (unsigned long long)calendarUnitForComponent:(long long)arg1;
@property(readonly, nonatomic) long long displayedCalendarUnits;
@property(nonatomic) unsigned long long *elements;
@property(readonly, nonatomic, getter=isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (double)widthForComponent:(long long)arg1 maxWidth:(double)arg2;
@property(readonly, nonatomic) UIColor *todayTextColor;
@property(readonly, nonatomic) double rowHeight;
@property(readonly, nonatomic) UIFont *amPmFont;
@property(readonly, nonatomic) UIFont *defaultTimeFont;
@property(readonly, nonatomic) UIFont *sizedFont;
@property(readonly, nonatomic) UIFont *font;
- (id)fontForCalendarUnit:(unsigned long long)arg1;
@property(readonly, nonatomic) NSString *pmString;
@property(readonly, nonatomic) NSString *amString;
@property(retain, nonatomic) NSDateComponents *baseDateComponents;
- (void)clearBaseDate;
@property(retain, nonatomic) NSDateComponents *todayDateComponents;
- (id)dateFormatterForCalendarUnit:(unsigned long long)arg1;
@property(readonly, nonatomic) long long datePickerMode;
@property(readonly, nonatomic, getter=is24Hour) _Bool is24Hour; // @dynamic is24Hour;
- (double)componentWidthForTwoDigitCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (void)_shouldReset:(id)arg1;
- (id)timeZone;
- (id)locale;
- (id)calendarForFormatters;
- (id)calendar;
- (long long)_yearlessYearForMonth:(long long)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_Custom : _UIDatePickerMode
{
    NSString *_originalFormat;
    NSArray *_components;
    NSArray *_sortedComponents;
    long long _displayedUnits;
    long long _desiredUnits;
}

- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;
- (long long)valueForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;
- (id)dateForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (long long)titleAlignmentForCalendarUnit:(unsigned long long)arg1;
- (id)dateFormatForCalendarUnit:(unsigned long long)arg1;
- (long long)numberOfRowsInComponent:(long long)arg1;
- (unsigned long long)numberOfComponents;
- (long long)displayedCalendarUnits;
- (unsigned long long)extractableCalendarUnits;
- (id)_componentForCalendarUnit:(unsigned long long)arg1;
- (long long)componentForCalendarUnit:(unsigned long long)arg1;
- (unsigned long long)calendarUnitForComponent:(long long)arg1;
- (id)components;
- (void)resetComponentWidths;
- (void)noteCalendarChanged;
- (void)dealloc;
- (id)initWithFormatString:(id)arg1 datePickerView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_Date : _UIDatePickerMode
{
    double _dateYearWidth;
    double _dateMonthWidth;
    double _dateDayWidth;
    NSString *_yearFormat;
    NSString *_monthFormat;
    NSString *_dayFormat;
}

+ (unsigned long long)extractableCalendarUnits;
+ (long long)datePickerMode;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;
- (id)_dateForYearRow:(long long)arg1;
- (long long)rowForDate:(id)arg1 dateComponents:(id)arg2 component:(long long)arg3 currentRow:(long long)arg4;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;
- (void)noteCalendarChanged;
- (void)resetComponentWidths;
- (id)dateFormatForCalendarUnit:(unsigned long long)arg1;
- (id)localizedFormatString;
- (void)_shouldReset:(id)arg1;
- (void)dealloc;
- (long long)displayedCalendarUnits;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_DateAndTime : _UIDatePickerMode
{
    _Bool _weekdayLast;
    double _wmdWeekMonthDayWidth;
    double _wmdHourWidth;
    double _wmdMinuteWidth;
    double _wmdAMPMWidth;
    double _wmdWeekdayWidth;
    NSString *_weekdayFormat;
    NSString *_monthDayFormat;
    NSString *_hourFormat;
    NSString *_minuteFormat;
    NSDateFormatter *_relativeFormatter;
    NSDateFormatter *_weekdayFormatter;
}

+ (unsigned long long)extractableCalendarUnits;
+ (long long)datePickerMode;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;
- (void)updateEnabledStateOfViewForRow:(long long)arg1 inComponent:(long long)arg2;
- (id)viewForRow:(long long)arg1 inComponent:(long long)arg2 reusingView:(id)arg3;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;
- (_Bool)_shouldEnableWeekMonthDayForRow:(long long)arg1;
- (id)_dateForWeekMonthDayRow:(long long)arg1;
- (long long)rowForDate:(id)arg1 dateComponents:(id)arg2 component:(long long)arg3 currentRow:(long long)arg4;
- (id)dateForRow:(long long)arg1 inCalendarUnit:(unsigned long long)arg2;
- (id)titleForRow:(long long)arg1 inComponent:(long long)arg2;
- (_Bool)isWeekdayLast;
- (double)weekdayWidth;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (double)componentWidthForDateTimeCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;
- (id)baseDateComponents;
- (void)_takeBaseDateComponentsFromDate:(id)arg1;
- (void)_resetBaseDateComponentsIfNecessaryFromDate:(id)arg1;
- (void)_updateSelectedDateComponentsWithNewValueInComponent:(long long)arg1 usingSelectionBarValue:(_Bool)arg2;
- (void)loadDate:(id)arg1 animated:(_Bool)arg2;
- (unsigned long long *)elements;
- (long long)displayedCalendarUnits;
- (id)dateFormatForCalendarUnit:(unsigned long long)arg1;
- (id)localizedFormatString;
- (id)weekdayFormatter;
- (id)relativeFormatter;
- (void)noteCalendarChanged;
- (void)resetComponentWidths;
- (void)_shouldReset:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_DateWithOptionalYear : _UIDatePickerMode_Date
{
}

+ (long long)datePickerMode;
- (id)dateComponentsByRestrictingSelectedComponents:(id)arg1 withLastManipulatedColumn:(long long)arg2;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;
- (id)selectedDateComponents;
- (long long)rowForDate:(id)arg1 dateComponents:(id)arg2 component:(long long)arg3 currentRow:(long long)arg4;
- (long long)yearForRow:(long long)arg1;
- (id)titleForRow:(long long)arg1 inComponent:(long long)arg2;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_MonthDay : _UIDatePickerMode_Date
{
}

+ (unsigned long long)extractableCalendarUnits;
+ (long long)datePickerMode;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_Time : _UIDatePickerMode
{
    double _timeHourWidth;
    double _timeMinuteWidth;
    double _timeAMPMWidth;
    NSString *_hourFormat;
    NSString *_minuteFormat;
}

+ (unsigned long long)extractableCalendarUnits;
+ (long long)datePickerMode;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;
- (id)font;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;
- (void)noteCalendarChanged;
- (void)resetComponentWidths;
- (double)rowHeight;
- (id)dateFormatForCalendarUnit:(unsigned long long)arg1;
- (id)localizedFormatString;
- (void)_shouldReset:(id)arg1;
- (void)dealloc;
- (long long)displayedCalendarUnits;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_TimeInterval : _UIDatePickerMode
{
    double _componentWidth;
}

+ (unsigned long long)extractableCalendarUnits;
+ (long long)datePickerMode;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;
- (_Bool)_shouldEnableValueForRow:(long long)arg1 inComponent:(long long)arg2 calendarUnit:(unsigned long long)arg3;
- (long long)valueForDate:(id)arg1 dateComponents:(id)arg2 calendarUnit:(unsigned long long)arg3;
- (id)dateComponentsByRestrictingSelectedComponents:(id)arg1 withLastManipulatedColumn:(long long)arg2;
- (_Bool)areValidDateComponents:(id)arg1 comparingUnits:(long long)arg2;
- (double)widthForCalendarUnit:(unsigned long long)arg1 font:(id)arg2 maxWidth:(double)arg3;
- (struct _NSRange)rangeForCalendarUnit:(unsigned long long)arg1;
- (long long)titleAlignmentForCalendarUnit:(unsigned long long)arg1;
- (id)titleForRow:(long long)arg1 inComponent:(long long)arg2;
- (long long)hourForRow:(long long)arg1;
- (id)font;
- (long long)numberOfRowsForCalendarUnit:(unsigned long long)arg1;
- (void)resetComponentWidths;
- (double)rowHeight;
- (void)takeExtremesFromMinimumDate:(id)arg1 maximumDate:(id)arg2;
- (id)localizedFormatString;
- (_Bool)isTimeIntervalMode;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerMode_YearMonth : _UIDatePickerMode_Date
{
}

+ (unsigned long long)extractableCalendarUnits;
+ (long long)datePickerMode;
- (unsigned long long)nextUnitSmallerThanUnit:(unsigned long long)arg1;
- (unsigned long long)nextUnitLargerThanUnit:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDatePickerView : UIPickerView <UIPickerViewDelegate, UIPickerViewDataSource>
{
    long long _loadingDate;
    NSDate *_userSuppliedDate;
    NSDate *_userSuppliedMinimumDate;
    NSDate *_userSuppliedMaximumDate;
    NSLocale *_compositeLocale;
    NSLocale *_userProvidedLocale;
    NSCalendar *_userProvidedCalendar;
    _UIDatePickerChineseCalendar *_chineseWrapperCalendar;
    NSDate *_minimumDate;
    NSDate *_maximumDate;
    NSDateComponents *_lastSelectedDateComponents;
    _Bool _allowsZeroTimeInterval;
    _UIDatePickerMode *_mode;
    NSTimeZone *_timeZone;
    double _timeInterval;
    UILabel *_hourLabel;
    UILabel *_minuteLabel;
    UIDatePicker *_datePickerDelegate;
    id _delegateOfDatePicker;
    int _expectedAMPM;
    struct {
        unsigned int staggerTimeIntervals:1;
        unsigned int loadingDateOrTime:1;
        unsigned int highlightsToday:1;
        unsigned int usesBlackChrome:1;
    } _datePickerFlags;
}

@property(nonatomic) id delegateOfDatePicker; // @synthesize delegateOfDatePicker=_delegateOfDatePicker;
@property(retain, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(copy, nonatomic) NSDate *maximumDate; // @synthesize maximumDate=_userSuppliedMaximumDate;
@property(copy, nonatomic) NSDate *minimumDate; // @synthesize minimumDate=_userSuppliedMinimumDate;
- (id)_viewForSelectedRowInComponent:(long long)arg1;
@property(nonatomic, getter=_allowsZeroTimeInterval, setter=_setAllowsZeroTimeInterval:) _Bool allowsZeroTimeInterval;
@property(nonatomic, getter=_allowsZeroCountDownDuration, setter=_setAllowsZeroCountDownDuration:) _Bool allowsZeroCountDownDuration;
@property(nonatomic, getter=_usesBlackChrome, setter=_setUsesBlackChrome:) _Bool usesBlackChrome;
- (void)_setHidesLabels:(_Bool)arg1;
- (void)_resetSelectionOfTables;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (id)shadowColor;
- (id)pickerView:(id)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(id)arg4;
- (double)pickerView:(id)arg1 widthForComponent:(long long)arg2;
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;
@property(readonly, nonatomic) double contentWidth; // @dynamic contentWidth;
@property(nonatomic) double timeInterval;
- (void)_updateEnabledCellsIncludingWMDCells:(_Bool)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (void)_fadeLabelForCalendarUnit:(unsigned long long)arg1 toText:(id)arg2 animated:(_Bool)arg3;
- (id)_makeNewAccessoryLabel;
- (id)_contentViewForSizingLabelForPositioningInComponent:(long long)arg1;
- (void)_positionLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 relativeTo:(id)arg3 order:(long long)arg4;
- (void)_setLabel:(id)arg1 forCalendarUnit:(unsigned long long)arg2 animated:(_Bool)arg3;
- (id)_labelForCalendarUnit:(unsigned long long)arg1 createIfNecessary:(_Bool)arg2;
- (void)_updateLabels:(_Bool)arg1;
- (_Bool)_updatedLastSelectedComponentsByValidatingSelectedDateWithLastManipulatedComponent:(long long)arg1;
- (id)_componentsSelectedAfterEnforcingValidityOfComponents:(id)arg1 withLastManipulatedComponent:(long long)arg2;
- (int)_selectedMinuteForColumn:(int)arg1;
- (int)_selectedHourForColumn:(int)arg1;
- (void)setDelegate:(id)arg1;
- (void)_selectRow:(long long)arg1 inComponent:(long long)arg2 animated:(_Bool)arg3 notify:(_Bool)arg4;
- (void)_loadDate:(id)arg1 animated:(_Bool)arg2;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (void)pickerTableView:(id)arg1 didChangeSelectionBarRowFrom:(long long)arg2 to:(long long)arg3;
@property(nonatomic) long long minuteInterval;
@property(nonatomic) long long datePickerMode;
- (void)_setMode:(id)arg1;
@property(readonly, nonatomic, getter=_isTimeIntervalMode) _Bool isTimeIntervalMode; // @dynamic isTimeIntervalMode;
- (long long)numberOfComponentsInPickerView:(id)arg1;
@property(copy, nonatomic) NSDate *date;
- (void)_setDate:(id)arg1 animated:(_Bool)arg2 forced:(_Bool)arg3;
- (void)setDate:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=_hasCustomLocale) _Bool hasCustomLocale; // @dynamic hasCustomLocale;
@property(retain, nonatomic) NSLocale *userProvidedLocale;
@property(readonly, nonatomic, getter=_hasCustomCalendar) _Bool hasCustomCalendar; // @dynamic hasCustomCalendar;
@property(copy, nonatomic) NSCalendar *userProvidedCalendar;
- (_Bool)_isCurrentCalendar:(id)arg1;
- (void)_rebuildCompositeLocale;
- (_Bool)_showingDate;
- (void)_doneLoadingDateOrTime;
- (id)_orientationImageSuffix;
- (id)pickerImageNamePrefix;
- (double)_tableRowHeight;
- (void)_datePickerReset:(id)arg1;
- (void)_todayChanged:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (int)second;
- (int)minute;
- (int)hour;
@property(copy, nonatomic) NSDateComponents *dateComponents; // @dynamic dateComponents;
@property(nonatomic) _Bool staggerTimeIntervals; // @dynamic staggerTimeIntervals;
@property(readonly, nonatomic, getter=_hrMinFont) UIFont *hrMinFont; // @dynamic hrMinFont;
- (id)_hoursStringForHour:(long long)arg1;
- (id)_minutesStringForHour:(long long)arg1 minutes:(long long)arg2;
- (long long)_selectionBarRowInComponent:(long long)arg1;
- (_Bool)_updateDateOrTime;
@property(readonly, nonatomic, getter=_amPmValue) long long amPmValue; // @dynamic amPmValue;
@property(readonly, nonatomic, getter=_lastSelectedDateComponents) NSDateComponents *lastSelectedDateComponents; // @dynamic lastSelectedDateComponents;
- (id)_labelTextForCalendarUnit:(unsigned long long)arg1;
- (id)_selectedTextForCalendarUnit:(unsigned long long)arg1;
@property(readonly, nonatomic) NSLocale *locale; // @dynamic locale;
@property(readonly, nonatomic) NSCalendar *calendar; // @dynamic calendar;
@property(nonatomic) _Bool highlightsToday; // @dynamic highlightsToday;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDebugAlignmentRectView : UIView
{
    double _baselineOffset;
}

- (void)doesNotRecognizeSelector:(SEL)arg1;
- (_Bool)isOpaque;
- (id)_alignmentDebuggingOverlayCreateIfNecessary:(_Bool)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 baselineOffset:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDebugColorBoundsView : UIView
{
}

+ (id)_nextColor;
- (void)doesNotRecognizeSelector:(SEL)arg1;
- (void)_removeColorViewBoundsOverlay;
- (id)_colorViewBoundsOverlayCreateIfNecessary:(_Bool)arg1;
- (id)initWithView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDecompressionInfo : NSObject
{
    NSObject<OS_dispatch_semaphore> *syncSemaphore;
    NSObject<OS_dispatch_semaphore> *metadataSemaphore;
    NSData *imageData;
    struct CGSize maxSize;
    int renderingIntent;
    _Bool decompressionComplete;
    _Bool metadataComplete;
}

- (void)dealloc;
- (id)initWithData:(id)arg1 maxSize:(struct CGSize)arg2 renderingIntent:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIDefinitionDictionary : NSObject
{
    struct __DCSDictionary *_dictionary;
    _Bool _activated;
    ASAsset *_rawAsset;
    NSString *_definitionLanguage;
}

+ (id)_normalizedLanguageStringForLanguageCode:(id)arg1;
@property _Bool activated; // @synthesize activated=_activated;
@property(readonly) NSString *definitionLanguage; // @synthesize definitionLanguage=_definitionLanguage;
@property(readonly) ASAsset *rawAsset; // @synthesize rawAsset=_rawAsset;
- (id)description;
- (id)_definitionValueForTerm:(id)arg1;
- (id)_attributedDefinitionForTerm:(id)arg1;
- (id)_fullHTMLDefinitionForTerm:(id)arg1;
- (id)_shortHTMLDefinitionForTerm:(id)arg1;
- (id)_HTMLDefinitionForTerm:(id)arg1 type:(long long)arg2;
- (_Bool)_hasDefinitionForTerm:(id)arg1;
@property(readonly) NSString *localizedDictionaryName;
@property(readonly) NSString *localizedLanguageName;
- (void)dealloc;
- (id)initWithAsset:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDefinitionValue : NSObject
{
    NSString *_localizedDictionaryName;
    NSString *_term;
    NSAttributedString *_definition;
    NSString *_longDefinition;
    ASAsset *_rawAsset;
}

@property(retain, nonatomic) ASAsset *rawAsset; // @synthesize rawAsset=_rawAsset;
@property(readonly) NSString *longDefinition; // @synthesize longDefinition=_longDefinition;
@property(readonly) NSAttributedString *definition; // @synthesize definition=_definition;
@property(readonly) NSString *term; // @synthesize term=_term;
@property(readonly) NSString *localizedDictionaryName; // @synthesize localizedDictionaryName=_localizedDictionaryName;
- (id)description;
- (void)dealloc;
- (id)initWithLocalizedDictionaryName:(id)arg1 term:(id)arg2 definition:(id)arg3 longDefinition:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface _UIDelayedPresentationContext : NSObject
{
    _Bool _enableUserInteraction;
    long long _reqcnt;
    NSInvocation *_presentInvocation;
    CDUnknownBlockType _cancellationHandler;
    double _timeout;
    NSObject<OS_dispatch_source> *_timerSource;
}

@property(retain, nonatomic) NSInvocation *presentInvocation; // @synthesize presentInvocation=_presentInvocation;
@property(copy, nonatomic) CDUnknownBlockType cancellationHandler; // @synthesize cancellationHandler=_cancellationHandler;
- (void)finishDelayedPresentation:(id)arg1;
- (void)beginDelayedPresentation;
- (void)cancelDelayedPresentation:(_Bool)arg1;
- (long long)incrementRequestCount;
- (long long)decrementRequestCount;
- (long long)requestCount;
- (id)delayingController;
- (id)invocationTarget;
- (void)dealloc;
- (id)initWithTimeout:(double)arg1 cancellationHandler:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDelegatingActionActivity : UIActivity
{
    UIDocumentInteractionController *_documentInteractionController;
    SEL _action;
}

- (void)performActivity;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;
- (id)initWithDocumentInteractionController:(id)arg1 forAction:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDictationAttachment : NSTextAttachment
{
    NSDictionary *_typingAttributesBeforeInsertion;
    struct _NSRange _attachmentRange;
}

@property(copy, nonatomic) NSDictionary *typingAttributesBeforeInsertion; // @synthesize typingAttributesBeforeInsertion=_typingAttributesBeforeInsertion;
@property(nonatomic) struct _NSRange attachmentRange; // @synthesize attachmentRange=_attachmentRange;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIDictionaryManager : NSObject
{
    NSArray *_availableDefinitionDictionaries;
}

+ (id)_filteredDictionaryIDs;
+ (id)assetManager;
+ (void)initialize;
@property(readonly) NSArray *availableDefinitionDictionaries; // @synthesize availableDefinitionDictionaries=_availableDefinitionDictionaries;
- (id)_currentlyAvailableDefinitionDictionaries;
- (id)_allAvailableDefinitionDictionariesUsingRemoteInfo:(_Bool)arg1;
- (id)_availableDictionaryAssets;
- (id)_availableDictionaryAssetsUsingRemoteInfo:(_Bool)arg1;
- (id)_definitionValuesForTerm:(id)arg1;
- (_Bool)_hasDefinitionForTerm:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIDimmingKnockoutBackdropView : UIView
{
    _UIBackdropView *backdropView;
    UIView *dimmingKnockoutView;
}

- (void)dealloc;
@property double cornerRadius;
- (id)_dimmingKnockoutBackgroundColorForBackdropStyle:(long long)arg1;
- (id)_filterForBackdropStyle:(long long)arg1;
- (id)initWithStyle:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDiscardableTintedDisclosureImageCacheItem : NSObject <NSDiscardableContent>
{
    UIImage *_tintedImage;
    UIColor *_tintColor;
    struct {
        unsigned int isDiscarded:1;
        unsigned int isPressed:1;
        unsigned int useCount;
    } _flags;
}

@property(readonly, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(readonly, nonatomic) UIImage *tintedImage; // @synthesize tintedImage=_tintedImage;
- (_Bool)isContentDiscarded;
- (void)discardContentIfPossible;
- (void)endContentAccess;
- (_Bool)beginContentAccess;
- (id)_tintedDisclosureImage:(_Bool)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithPressed:(_Bool)arg1 tintColor:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDismissCurlUpTapGestureRecognizer : UITapGestureRecognizer
{
    float _curlUpDY;
}

@property(nonatomic, setter=_setCurlUpDY:) float _curlUpDY; // @synthesize _curlUpDY;
- (_Bool)_delegateShouldReceiveTouch:(id)arg1;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentActivityItemProvider : UIActivityItemProvider
{
    UIDocumentInteractionController *_documentInteractionController;
}

@property UIDocumentInteractionController *documentInteractionController; // @synthesize documentInteractionController=_documentInteractionController;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)item;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentActivityViewController : UIActivityViewController
{
    _Bool hideSystemActivities;
    UIDocumentInteractionController *_documentInteractionController;
    _Bool _hideSystemActivities;
}

@property(nonatomic) _Bool hideSystemActivities; // @synthesize hideSystemActivities=_hideSystemActivities;
@property(nonatomic) UIDocumentInteractionController *documentInteractionController; // @synthesize documentInteractionController=_documentInteractionController;
- (void)_performActivity:(id)arg1;
- (void)_prepareActivity:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)sourceIsManaged;
- (_Bool)_shouldShowSystemActivity:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentContainerObserver : NSObject
{
    NSMutableSet *_added;
    NSMutableSet *_removed;
    NSMutableDictionary *_moved;
    NSArray *_descriptors;
    NSOrderedSet *_lastSnapshot;
    NSDate *_lastSnapshotDate;
    CDUnknownBlockType _handler;
    NSPredicate *_predicate;
}

+ (id)_observerForDirectories:(id)arg1 sortedWithDescriptors:(id)arg2 updateHandler:(CDUnknownBlockType)arg3;
@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate=_predicate;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain, nonatomic) NSDate *lastSnapshotDate; // @synthesize lastSnapshotDate=_lastSnapshotDate;
@property(retain, nonatomic) NSOrderedSet *lastSnapshot; // @synthesize lastSnapshot=_lastSnapshot;
@property(copy, nonatomic) NSArray *descriptors; // @synthesize descriptors=_descriptors;
- (void)processResults:(id)arg1;
- (void)moveURL:(id)arg1 toURL:(id)arg2;
- (void)removeURL:(id)arg1;
- (void)addURL:(id)arg1;
- (id)_computeUpdatesFromOld:(id)arg1 toNew:(id)arg2;
- (id)_predicateForItemsInDirectory:(id)arg1;
- (void)dealloc;
- (id)initWithDirectories:(id)arg1 sortDescriptors:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerAuxiliaryOption : NSObject <NSSecureCoding>
{
    NSString *_title;
    UIImage *_image;
    NSString *_identifier;
    CDUnknownBlockType _handler;
    unsigned long long _order;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) unsigned long long order; // @synthesize order=_order;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerCell : UICollectionViewCell
{
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIImageView *_thumbnailView;
    UIProgressView *_progressView;
    UIView *_thumbnailCenterView;
    NSLayoutConstraint *_thumbnailCenterWidthConstraint;
    NSLayoutConstraint *_thumbnailCenterHeightConstraint;
    UILongPressGestureRecognizer *_pickableDiagnosticGestureRecognizer;
}

+ (struct CGSize)thumbnailSizeForTraits:(id)arg1;
+ (struct CGSize)defaultSizeForTraits:(id)arg1;
@property(retain, nonatomic) UILongPressGestureRecognizer *pickableDiagnosticGestureRecognizer; // @synthesize pickableDiagnosticGestureRecognizer=_pickableDiagnosticGestureRecognizer;
@property(retain, nonatomic) NSLayoutConstraint *thumbnailCenterHeightConstraint; // @synthesize thumbnailCenterHeightConstraint=_thumbnailCenterHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *thumbnailCenterWidthConstraint; // @synthesize thumbnailCenterWidthConstraint=_thumbnailCenterWidthConstraint;
@property(retain, nonatomic) UIView *thumbnailCenterView; // @synthesize thumbnailCenterView=_thumbnailCenterView;
@property(retain, nonatomic) UIProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIImageView *thumbnailView; // @synthesize thumbnailView=_thumbnailView;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)_showPickableDiagnostic;
- (void)reloadItem:(_Bool)arg1;
- (id)viewControllerForDisplay;
- (void)dealloc;
- (void)prepareForReuse;
- (void)tintColorDidChange;
- (void)traitCollectionDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerCell : _UIDocumentPickerCell
{
    _UIDocumentPickerContainerItem *_item;
    NSString *_containerDisplayName;
    _UIDocumentPickerURLContainerModel *_model;
    UIImageView *_containerIconView;
    id _observerToken;
    NSLayoutConstraint *_containerIconWidthConstraint;
    NSLayoutConstraint *_containerIconHeightConstraint;
    NSLayoutConstraint *_containerIconBottomConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *containerIconBottomConstraint; // @synthesize containerIconBottomConstraint=_containerIconBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *containerIconHeightConstraint; // @synthesize containerIconHeightConstraint=_containerIconHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *containerIconWidthConstraint; // @synthesize containerIconWidthConstraint=_containerIconWidthConstraint;
@property(retain, nonatomic) id observerToken; // @synthesize observerToken=_observerToken;
@property(retain, nonatomic) UIImageView *containerIconView; // @synthesize containerIconView=_containerIconView;
@property(retain, nonatomic) _UIDocumentPickerURLContainerModel *model; // @synthesize model=_model;
@property(retain, nonatomic) NSString *containerDisplayName; // @synthesize containerDisplayName=_containerDisplayName;
@property(retain, nonatomic) _UIDocumentPickerContainerItem *item; // @synthesize item=_item;
- (void)_showPickableDiagnostic;
- (id)viewControllerForDisplay;
- (void)updateSubtitle;
- (void)containersChangedWithSnapshot:(id)arg1 differences:(id)arg2;
- (void)reloadItem:(_Bool)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (void)traitCollectionDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerItem : NSObject
{
    _UIDocumentPickerContainerModel *_weak_parentModel;
    _Bool _pickable;
    id _item;
    long long _type;
    NSMapTable *_thumbnailsBySize;
    NSString *_pickabilityReason;
}

+ (void)clearLRUThumbnailCache;
+ (void)markThumbnailAsRecentlyUsed:(id)arg1;
+ (id)_lruThumbnailArray;
@property(copy, nonatomic) NSString *pickabilityReason; // @synthesize pickabilityReason=_pickabilityReason;
@property(retain, nonatomic) NSMapTable *thumbnailsBySize; // @synthesize thumbnailsBySize=_thumbnailsBySize;
@property(nonatomic) _Bool pickable; // @synthesize pickable=_pickable;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) id item; // @synthesize item=_item;
- (id)description;
- (id)sortTag;
@property(readonly, nonatomic) NSDate *sortDate;
- (id)_blipWithTags:(id)arg1 height:(double)arg2 scale:(double)arg3;
- (id)tagBlipsWithHeight:(double)arg1 scale:(double)arg2;
- (id)tags;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, retain, nonatomic) NSURL *url;
@property(readonly, retain, nonatomic) NSString *subtitle;
@property(readonly, retain, nonatomic) NSString *title;
- (id)_blockingThumbnailWithSize:(struct CGSize)arg1 scale:(double)arg2;
- (id)_createThumbnailWithSize:(struct CGSize)arg1 scale:(double)arg2;
- (id)_defaultThumbnailWithSize:(struct CGSize)arg1 scale:(double)arg2;
- (id)thumbnailWithSize:(struct CGSize)arg1 scale:(double)arg2;
@property(nonatomic) __weak _UIDocumentPickerContainerModel *parentModel;
- (void)dealloc;
- (id)initWithItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerContainerItem : _UIDocumentPickerContainerItem
{
}

- (id)sortDate;
- (id)_blockingThumbnailWithSize:(struct CGSize)arg1 scale:(double)arg2;
- (id)_defaultThumbnailWithSize:(struct CGSize)arg1 scale:(double)arg2;
- (id)url;
- (id)subtitle;
- (id)title;
- (long long)type;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerMetadataItem : _UIDocumentPickerContainerItem
{
    long long _cachedType;
    NSString *_cachedTitle;
    NSString *_cachedSubtitle;
    NSArray *_cachedTags;
    NSURL *_cachedURL;
}

- (id)sortDate;
- (id)tags;
- (id)url;
- (id)subtitle;
- (id)title;
- (long long)type;
- (void)cacheValues;
- (void)_removeCachedValues;
- (void)dealloc;
- (id)initWithItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerModel : NSObject
{
    int _sortOrder;
    NSArray *_pickableTypes;
    unsigned long long _pickerMode;
    NSMutableArray *_updateHandlers;
    NSOperationQueue *_thumbnailQueue;
}

@property(retain, nonatomic) NSOperationQueue *thumbnailQueue; // @synthesize thumbnailQueue=_thumbnailQueue;
@property(retain, nonatomic) NSMutableArray *updateHandlers; // @synthesize updateHandlers=_updateHandlers;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
@property(nonatomic) unsigned long long pickerMode; // @synthesize pickerMode=_pickerMode;
@property(copy, nonatomic) NSArray *pickableTypes; // @synthesize pickableTypes=_pickableTypes;
- (void)updateSortDescriptors;
- (void)refreshItem:(id)arg1 thumbnailOnly:(_Bool)arg2;
- (id)displayTitle;
- (void)stopMonitoringChanges;
- (void)startMonitoringChanges;
@property(readonly, nonatomic) NSArray *modelObjects;
- (void)removeUpdateHandler:(id)arg1;
- (id)addUpdateHandler:(CDUnknownBlockType)arg1 weakSelf:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerModelUpdateHandler : NSObject
{
    id _weak_weakSelf;
    CDUnknownBlockType _handler;
}

@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void)dealloc;
@property(nonatomic) __weak id weakSelf;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerContainerViewController : UIViewController <_UIDocumentPickerServiceInvalidating>
{
    _Bool _rootContainer;
    UIViewController *_childViewController;
    _UIDocumentPickerContainerModel *_model;
    _UIDocumentPickerViewServiceViewController *_serviceViewController;
    _UINavigationControllerPalette *_searchPalette;
}

@property(nonatomic, getter=isRootContainer) _Bool rootContainer; // @synthesize rootContainer=_rootContainer;
@property(retain, nonatomic) _UINavigationControllerPalette *searchPalette; // @synthesize searchPalette=_searchPalette;
@property(nonatomic) _UIDocumentPickerViewServiceViewController *serviceViewController; // @synthesize serviceViewController=_serviceViewController;
@property(retain, nonatomic) _UIDocumentPickerContainerModel *model; // @synthesize model=_model;
@property(retain, nonatomic) UIViewController *childViewController; // @synthesize childViewController=_childViewController;
- (void)_tryExportingFile:(id)arg1 toLocation:(id)arg2;
- (id)_mangledFilenameForURL:(id)arg1;
- (void)_pickCurrentLocationForUpload:(id)arg1;
- (void)_doneButtonPressed;
- (void)_updateForServiceView;
- (void)invalidate;
- (void)teardownPalettes;
- (void)setupPalettes;
- (void)didMoveToParentViewController:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)displayModeChanged;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setChildViewController:(id)arg1 animated:(_Bool)arg2;
- (void)ensureChildViewController;
- (id)url;
- (void)dealloc;
- (id)initWithModel:(id)arg1;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDescriptor : NSObject
{
    NSExtension *_extension;
}

+ (BOOL)cloudEnabledStatus;
+ (void)setCloudEnabledStatus:(BOOL)arg1;
+ (id)descriptorWithIdentifier:(id)arg1;
+ (id)defaultPickerIdentifierForMode:(unsigned long long)arg1 documentTypes:(id)arg2;
+ (id)enabledPickersForMode:(unsigned long long)arg1 documentTypes:(id)arg2;
+ (id)allPickersForMode:(unsigned long long)arg1 documentTypes:(id)arg2;
+ (id)allPickers;
+ (id)hostBundleID;
+ (void)setHostBundleID:(id)arg1;
@property(retain, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(nonatomic) _Bool enabled;
@property(readonly, copy, nonatomic) NSArray *supportedContentTypes;
- (id)_extensionValueOfClass:(Class)arg1 forKey:(id)arg2;
- (id)imageWithScale:(double)arg1;
@property(readonly, copy, nonatomic) NSString *localizedName;
@property(readonly, copy, nonatomic) NSString *nonUIIdentifier;
@property(readonly, retain, nonatomic) NSString *fileProviderDocumentGroup;
- (id)nonUIBundle;
@property(readonly, copy, nonatomic) NSString *identifier;
- (id)_parentApp;
- (id)_ownBundle;
- (_Bool)supportsPickerMode:(unsigned long long)arg1;
- (long long)compare:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDirectoryObserver : NSObject <NSMetadataQueryDelegate>
{
    NSArray *_sortDescriptors;
    NSArray *_staticItems;
    id _weak_updateHandlerWeakSelf;
    NSMetadataQuery *_query;
    NSArray *_scopes;
    CDUnknownBlockType _handler;
    NSOrderedSet *_lastSnapshot;
    NSDate *_lastSnapshotDate;
    NSObject<OS_dispatch_queue> *_queryQueue;
    NSOperationQueue *_queryWorkerQueue;
    Class _itemClass;
}

@property(nonatomic) Class itemClass; // @synthesize itemClass=_itemClass;
@property(retain, nonatomic) NSOperationQueue *queryWorkerQueue; // @synthesize queryWorkerQueue=_queryWorkerQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queryQueue; // @synthesize queryQueue=_queryQueue;
@property(retain, nonatomic) NSDate *lastSnapshotDate; // @synthesize lastSnapshotDate=_lastSnapshotDate;
@property(retain, nonatomic) NSOrderedSet *lastSnapshot; // @synthesize lastSnapshot=_lastSnapshot;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(retain, nonatomic) NSArray *scopes; // @synthesize scopes=_scopes;
@property(retain, nonatomic) NSMetadataQuery *query; // @synthesize query=_query;
- (void)_processResults:(id)arg1 changedItems:(id)arg2 reloadAll:(_Bool)arg3;
- (id)_computeUpdatesFromOld:(id)arg1 toNew:(id)arg2 changedItems:(id)arg3;
@property(retain, nonatomic) NSArray *staticItems;
- (void)_updateObservers:(id)arg1 reloadAll:(_Bool)arg2;
- (id)_queryResults;
- (void)_queryUpdated:(id)arg1;
- (void)_initialGatherFinished:(id)arg1;
@property(retain, nonatomic) NSPredicate *predicate;
@property(retain, nonatomic) NSArray *sortDescriptors;
- (void)dealloc;
- (id)metadataQuery:(id)arg1 replacementObjectForResultObject:(id)arg2;
@property(nonatomic) __weak id updateHandlerWeakSelf;
- (id)initWithScopes:(id)arg1 weakSelf:(id)arg2 updateHandler:(CDUnknownBlockType)arg3 itemClass:(Class)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDocumentCell : _UIDocumentPickerCell
{
    _Bool _enabled;
    _UIDocumentPickerContainerItem *_item;
}

@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) _UIDocumentPickerContainerItem *item; // @synthesize item=_item;
- (void)_showPickableDiagnostic;
- (id)viewControllerForDisplay;
- (void)updateThumbnail;
- (void)updateContents;
- (void)reloadItem:(_Bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)dealloc;
- (void)prepareForReuse;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDocumentCollectionViewController : UICollectionViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    _Bool _shouldHideSortBar;
    _Bool _updatesMayAnimate;
    _UIDocumentPickerContainerModel *_model;
    _UIDocumentPickerViewServiceViewController *_serviceViewController;
    id _monitoringToken;
    _UIDocumentPickerSortOrderView *_sortView;
    NSArray *_modelObjects;
}

@property(nonatomic) _Bool updatesMayAnimate; // @synthesize updatesMayAnimate=_updatesMayAnimate;
@property(copy, nonatomic) NSArray *modelObjects; // @synthesize modelObjects=_modelObjects;
@property(retain, nonatomic) _UIDocumentPickerSortOrderView *sortView; // @synthesize sortView=_sortView;
@property(nonatomic) _Bool shouldHideSortBar; // @synthesize shouldHideSortBar=_shouldHideSortBar;
@property(retain, nonatomic) id monitoringToken; // @synthesize monitoringToken=_monitoringToken;
@property(nonatomic) _UIDocumentPickerViewServiceViewController *serviceViewController; // @synthesize serviceViewController=_serviceViewController;
@property(retain, nonatomic) _UIDocumentPickerContainerModel *model; // @synthesize model=_model;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)setMonitoring:(_Bool)arg1;
- (void)didMoveToParentViewController:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)containersChangedWithSnapshot:(id)arg1 differences:(id)arg2;
- (void)_sortViewChanged:(id)arg1;
- (void)dealloc;
- (void)_dynamicTypeSizeChanged:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_unlockAnimations;
- (id)initWithModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDocumentTableCell : UITableViewCell
{
    _UIDocumentPickerDocumentTableViewController *_weak_tableView;
    _Bool _isContainer;
    UIImageView *_iconView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    _UIDocumentPickerContainerItem *_item;
    SKUIItemOfferButton *_cloudButton;
    NSTimer *_progressTimer;
    id _progressSubscriber;
    UIView *_iconCenteringView;
}

+ (struct CGSize)thumbnailSize;
@property(retain, nonatomic) UIView *iconCenteringView; // @synthesize iconCenteringView=_iconCenteringView;
@property(retain, nonatomic) id progressSubscriber; // @synthesize progressSubscriber=_progressSubscriber;
@property(retain, nonatomic) NSTimer *progressTimer; // @synthesize progressTimer=_progressTimer;
@property(retain, nonatomic) SKUIItemOfferButton *cloudButton; // @synthesize cloudButton=_cloudButton;
@property(retain, nonatomic) _UIDocumentPickerContainerItem *item; // @synthesize item=_item;
@property(nonatomic) _Bool isContainer; // @synthesize isContainer=_isContainer;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView=_iconView;
- (void)updateForDownloadStatus;
- (void)startDownload:(id)arg1;
- (void)reloadItem:(_Bool)arg1;
- (void)updateProgress:(id)arg1;
@property(nonatomic) __weak _UIDocumentPickerDocumentTableViewController *tableView;
- (void)dealloc;
- (void)tintColorDidChange;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDocumentTableContainerCell : _UIDocumentPickerDocumentTableCell
{
    _UIDocumentPickerContainerModel *_model;
    id _observerToken;
    UIImageView *_containerIconView;
}

@property(retain, nonatomic) UIImageView *containerIconView; // @synthesize containerIconView=_containerIconView;
@property(retain, nonatomic) id observerToken; // @synthesize observerToken=_observerToken;
@property(retain, nonatomic) _UIDocumentPickerContainerModel *model; // @synthesize model=_model;
- (void)reloadItem:(_Bool)arg1;
- (void)containersChangedWithSnapshot:(id)arg1 differences:(id)arg2;
- (void)dealloc;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerDocumentTableViewController : UITableViewController
{
    _Bool _shouldHideSortBar;
    _UIDocumentPickerViewServiceViewController *_serviceViewController;
    NSURL *_observedURL;
    _UIDocumentPickerContainerModel *_model;
    id _monitoringToken;
    _UIDocumentPickerSortOrderView *_sortView;
}

@property(retain, nonatomic) _UIDocumentPickerSortOrderView *sortView; // @synthesize sortView=_sortView;
@property(nonatomic) _Bool shouldHideSortBar; // @synthesize shouldHideSortBar=_shouldHideSortBar;
@property(retain, nonatomic) id monitoringToken; // @synthesize monitoringToken=_monitoringToken;
@property(retain, nonatomic) _UIDocumentPickerContainerModel *model; // @synthesize model=_model;
@property(retain, nonatomic) NSURL *observedURL; // @synthesize observedURL=_observedURL;
@property(nonatomic) _UIDocumentPickerViewServiceViewController *serviceViewController; // @synthesize serviceViewController=_serviceViewController;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setMonitoring:(_Bool)arg1;
- (void)didMoveToParentViewController:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)containersChangedWithSnapshot:(id)arg1 differences:(id)arg2;
- (void)_sortViewChanged:(id)arg1;
- (void)_dynamicTypeSizeChanged:(id)arg1;
- (void)dealloc;
- (id)initWithModel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerRemoteViewController : _UIRemoteViewController <_UIDocumentPickerViewControllerHost, _UIDocumentPickerServiceInvalidating>
{
    id <_UIDocumentPickerRemoteViewControllerContaining> _publicController;
    NSString *_identifier;
    NSExtension *_extension;
    id <NSCopying><NSObject> _extensionRequestIdentifier;
}

+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;
@property(copy, nonatomic) id <NSCopying><NSObject> extensionRequestIdentifier; // @synthesize extensionRequestIdentifier=_extensionRequestIdentifier;
@property(retain, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) id <_UIDocumentPickerRemoteViewControllerContaining> publicController; // @synthesize publicController=_publicController;
- (void)_stitchFileCreationAtURL:(id)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)_preferredContentSizeChanged:(struct CGSize)arg1;
- (void)_dismissWithOption:(id)arg1;
- (void)_didSelectPicker;
- (void)_dismissViewController;
- (void)_didSelectURLWrapper:(id)arg1;
- (void)invalidate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerExtensionRemoteViewController : _UIDocumentPickerRemoteViewController
{
}

+ (id)serviceViewControllerInterface;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerFlowLayout : UICollectionViewFlowLayout
{
}

- (struct CGSize)collectionViewContentSize;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerManagementViewController : UITableViewController
{
    NSArray *_allPickers;
}

@property(retain, nonatomic) NSArray *allPickers; // @synthesize allPickers=_allPickers;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)switchToggled:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)_doneButtonPressed;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerManagementViewControllerCell : UITableViewCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerModalManagementViewController : UINavigationController
{
}

- (void)_donePressed:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerNSURLWrapper : NSObject <NSSecureCoding>
{
    _Bool _createSandbox;
    NSURL *_url;
    NSData *_scope;
}

+ (void)assembleURL:(id)arg1 sandbox:(id)arg2 physicalURL:(id)arg3 physicalSandbox:(id)arg4;
+ (_Bool)supportsSecureCoding;
+ (id)wrapperWithURL:(id)arg1 readonly:(_Bool)arg2;
+ (id)wrapperWithURL:(id)arg1;
+ (id)wrapperWithURL:(id)arg1 createSandboxIfNoneAttached:(_Bool)arg2;
@property(copy, nonatomic) NSData *scope; // @synthesize scope=_scope;
@property(nonatomic) _Bool createSandbox; // @synthesize createSandbox=_createSandbox;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerOverviewViewController : UITableViewController
{
    id <_UIDocumentPickerOverviewDelegate> _weak_delegate;
    NSArray *_allPickers;
    NSString *_currentExtensionIdentifier;
    NSArray *_auxiliaryOptions;
}

@property(retain, nonatomic) NSArray *auxiliaryOptions; // @synthesize auxiliaryOptions=_auxiliaryOptions;
@property(retain, nonatomic) NSString *currentExtensionIdentifier; // @synthesize currentExtensionIdentifier=_currentExtensionIdentifier;
@property(retain, nonatomic) NSArray *allPickers; // @synthesize allPickers=_allPickers;
@property(nonatomic) __weak id <_UIDocumentPickerOverviewDelegate> delegate;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)dealloc;
- (id)initWithFileTypes:(id)arg1 mode:(unsigned long long)arg2 auxiliaryOptions:(id)arg3 includeManagementItem:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerOverviewViewControllerCell : UITableViewCell
{
    UIImageView *_iconView;
}

@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView=_iconView;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerURLContainerModel : _UIDocumentPickerContainerModel
{
    NSArray *_modelObjects;
    NSURL *_url;
    NSString *_displayTitle;
    _UIDocumentPickerDirectoryObserver *_observer;
}

+ (void)_tagColorsDidChange;
+ (id)_tagBlipColors;
+ (id)allTags;
+ (id)tagColorsByTag;
@property(retain, nonatomic) _UIDocumentPickerDirectoryObserver *observer; // @synthesize observer=_observer;
@property(retain, nonatomic) NSString *displayTitle; // @synthesize displayTitle=_displayTitle;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSArray *modelObjects; // @synthesize modelObjects=_modelObjects;
- (id)description;
- (void)callUpdateHandlerWithNewItems:(id)arg1 diff:(id)arg2;
- (void)modelChangedWithSnapshot:(id)arg1 differences:(id)arg2;
- (_Bool)shouldShowContainerForType:(id)arg1;
- (_Bool)shouldAllowPickingType:(id)arg1;
- (id)_containerListDidChange;
- (void)refreshItem:(id)arg1 thumbnailOnly:(_Bool)arg2;
- (void)updateSortDescriptors;
- (void)stopMonitoringChanges;
- (id)scopes;
- (void)startMonitoringChanges;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerSearchContainerModel : _UIDocumentPickerURLContainerModel
{
    NSString *_queryString;
}

@property(copy, nonatomic) NSString *queryString; // @synthesize queryString=_queryString;
- (void)_updateObserverForQuery;
- (id)scopes;
- (void)startMonitoringChanges;
- (id)displayTitle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerSearchPaletteView : UIView <UISearchBarDelegate>
{
    _UINavigationControllerPalette *_palette;
    UISearchBar *_searchBar;
    UISegmentedControl *_containerDisplayMode;
    _UIDocumentPickerSearchContainerModel *_searchModel;
    UIViewController *_searchController;
    UIButton *_cancelButton;
    NSLayoutConstraint *_searchFieldLeftConstraint;
    NSLayoutConstraint *_searchFieldRightConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *searchFieldRightConstraint; // @synthesize searchFieldRightConstraint=_searchFieldRightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *searchFieldLeftConstraint; // @synthesize searchFieldLeftConstraint=_searchFieldLeftConstraint;
@property(retain, nonatomic) UIButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) UIViewController *searchController; // @synthesize searchController=_searchController;
@property(retain, nonatomic) _UIDocumentPickerSearchContainerModel *searchModel; // @synthesize searchModel=_searchModel;
@property(retain, nonatomic) UISegmentedControl *containerDisplayMode; // @synthesize containerDisplayMode=_containerDisplayMode;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(nonatomic) _UINavigationControllerPalette *palette; // @synthesize palette=_palette;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchCanceled:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)displayModeChanged:(id)arg1;
- (id)serviceViewController;
- (void)updateViewsAndConstraintsForSearch:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerSortOrderView : UIControl
{
    _UIDocumentPickerViewServiceViewController *_serviceViewController;
    UISegmentedControl *_sortOrder;
}

@property(retain, nonatomic) UISegmentedControl *sortOrder; // @synthesize sortOrder=_sortOrder;
@property(nonatomic) _UIDocumentPickerViewServiceViewController *serviceViewController; // @synthesize serviceViewController=_serviceViewController;
- (void)valueChanged:(id)arg1;
@property(nonatomic) int value;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerUnavailableViewController : UIViewController
{
    UIImageView *_leadImageView;
    UILabel *_titleLabel;
    UILabel *_textLabel;
    UILabel *_textLabel2;
    UIButton *_button;
    NSURL *_buttonURL;
    NSLayoutConstraint *_topConstraint;
    NSLayoutConstraint *_imageToTitleConstraint;
    NSLayoutConstraint *_titleToTextConstraint;
    NSLayoutConstraint *_textToTextConstraint;
    NSLayoutConstraint *_textToButtonConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *textToButtonConstraint; // @synthesize textToButtonConstraint=_textToButtonConstraint;
@property(retain, nonatomic) NSLayoutConstraint *textToTextConstraint; // @synthesize textToTextConstraint=_textToTextConstraint;
@property(retain, nonatomic) NSLayoutConstraint *titleToTextConstraint; // @synthesize titleToTextConstraint=_titleToTextConstraint;
@property(retain, nonatomic) NSLayoutConstraint *imageToTitleConstraint; // @synthesize imageToTitleConstraint=_imageToTitleConstraint;
@property(retain, nonatomic) NSLayoutConstraint *topConstraint; // @synthesize topConstraint=_topConstraint;
@property(retain, nonatomic) NSURL *buttonURL; // @synthesize buttonURL=_buttonURL;
@property(retain, nonatomic) UIButton *button; // @synthesize button=_button;
@property(retain, nonatomic) UILabel *textLabel2; // @synthesize textLabel2=_textLabel2;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *leadImageView; // @synthesize leadImageView=_leadImageView;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_fontSizeDidChange:(id)arg1;
- (id)_buttonBackgroundImageForState:(unsigned long long)arg1 traits:(id)arg2;
- (void)_buttonPressed:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentPickerViewServiceViewController : UINavigationController <_UIDocumentPickerRemoteViewControllerContaining, _UIDocumentPickerOverviewDelegate, _UIDocumentPickerViewController>
{
    _Bool _displayedAsMenu;
    _Bool _hasBeenDismissed;
    long long _displayMode;
    NSArray *_pickableTypes;
    unsigned long long _pickerMode;
    NSURL *_uploadURL;
    NSArray *_auxiliaryOptions;
    NSString *_currentPickerIdentifier;
}

+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;
@property(nonatomic) _Bool hasBeenDismissed; // @synthesize hasBeenDismissed=_hasBeenDismissed;
@property(nonatomic) _Bool displayedAsMenu; // @synthesize displayedAsMenu=_displayedAsMenu;
@property(retain, nonatomic) NSString *currentPickerIdentifier; // @synthesize currentPickerIdentifier=_currentPickerIdentifier;
@property(retain, nonatomic, setter=_setAuxiliaryOptions:) NSArray *auxiliaryOptions; // @synthesize auxiliaryOptions=_auxiliaryOptions;
@property(copy, nonatomic) NSURL *uploadURL; // @synthesize uploadURL=_uploadURL;
- (void)_setPickerMode:(unsigned long long)arg1;
@property(nonatomic) unsigned long long pickerMode; // @synthesize pickerMode=_pickerMode;
- (void)_setPickableTypes:(id)arg1;
@property(copy, nonatomic) NSArray *pickableTypes; // @synthesize pickableTypes=_pickableTypes;
@property(nonatomic) long long displayMode; // @synthesize displayMode=_displayMode;
@property(nonatomic) int sortOrder;
- (void)_preferredContentSizeChanged:(struct CGSize)arg1;
- (void)_didSelectPicker;
- (void)_stitchFileCreationAtURL:(id)arg1;
- (void)_dismissWithOption:(id)arg1;
- (void)_didSelectURL:(id)arg1;
- (void)_doneButton:(id)arg1;
- (void)_dismissViewController;
- (void)overviewController:(id)arg1 selectedAuxiliaryOptionWithIdentifier:(id)arg2;
- (void)overviewController:(id)arg1 selectedDocumentPickerWithIdentifier:(id)arg2;
- (void)_showLocationPopup:(id)arg1;
- (void)_showPicker:(id)arg1;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)setupNavigationItemForPicker:(id)arg1 isRoot:(_Bool)arg2;
- (void)_showTopLevelViewController;
- (void)_willAppearInRemoteViewController;
- (void)_prepareForDisplayWithCompletion:(CDUnknownBlockType)arg1;
- (void)_setUploadURLWrapper:(id)arg1;
- (void)_showDefaultPicker;
- (void)_documentPickerDidDismiss;
- (void)dismissWithURL:(id)arg1 forBundleIdentifier:(id)arg2;
- (void)_dismissWithImportURL:(id)arg1;
- (void)_dismissWithFileProviderURL:(id)arg1 bundleIdentifier:(id)arg2;
- (void)_createBookmarkAndDismissWithCloudURL:(id)arg1;
- (void)beginDownloadingURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) id <_UIDocumentPickerViewControllerHost> hostingViewController;
- (void)_setUploadURL:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDocumentStorage : NSObject
{
    NSString *_scope;
    NSURL *_rootURL;
}

@property(readonly) NSURL *rootURL; // @synthesize rootURL=_rootURL;
- (void)dealloc;
@property(readonly, getter=isUbiquitous) _Bool ubiquitous;
- (id)initWithSearchScope:(id)arg1 rootURL:(id)arg2;

@end

@interface _UIDynamicAnimation : NSObject
{
    CDUnknownBlockType _completion;
    int _state;
    unsigned int _began:1;
    unsigned int _running:1;
    unsigned int _yield:1;
    unsigned int _grouped:1;
    unsigned int _usesNSTimer:1;
}

+ (id)dynamicAnimationForView:(id)arg1 withInitialValue:(double)arg2 velocity:(double)arg3 type:(int)arg4 anchorPoint:(struct CGPoint)arg5;
+ (void)_updateAnimationsWithTimer:(id)arg1;
+ (void)_updateAnimations:(id)arg1;
+ (void)_updateAnimations:(id)arg1 timer:(id)arg2;
- (id)description;
- (void)_appendDescriptionToString:(id)arg1 atLevel:(int)arg2;
- (void)_appendSubclassDescription:(id)arg1 atLevel:(int)arg2;
- (_Bool)_isRunning;
- (void)_setGrouped:(_Bool)arg1;
- (_Bool)_isGrouped;
- (void)_setUsesNSTimer:(_Bool)arg1;
- (_Bool)_usesNSTimer;
- (void)_setShouldYield:(_Bool)arg1;
- (_Bool)_shouldYield;
@property(readonly, nonatomic) int state;
- (void)_cancelWithAppliers:(CDUnknownBlockType)arg1;
- (void)stop;
- (void)runWithCompletion:(CDUnknownBlockType)arg1;
- (void)runWithCompletion:(CDUnknownBlockType)arg1 forScreen:(id)arg2 runLoopMode:(id)arg3;
- (void)_callAppliers:(CDUnknownBlockType)arg1 additionalEndAppliers:(CDUnknownBlockType)arg2 done:(_Bool)arg3;
- (_Bool)_animateForInterval:(double)arg1;
- (void)_stopAnimation;
- (void)dealloc;
- (id)init;

@end

@interface _UIDynamicAnimationActiveValue : NSObject
{
    double _value;
    double _minimumActiveValue;
    double _maximumActiveValue;
    int _type;
    double _boundaryPull;
    id _applier;
    unsigned int _lowerBoundary:1;
    unsigned int _upperBoundary:1;
}

+ (id)activeValue:(double)arg1 ofType:(int)arg2;
+ (id)upperBoundary:(double)arg1 ofType:(int)arg2;
+ (id)lowerBoundary:(double)arg1 ofType:(int)arg2;
@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) double maximumActiveValue; // @synthesize maximumActiveValue=_maximumActiveValue;
@property(nonatomic) double minimumActiveValue; // @synthesize minimumActiveValue=_minimumActiveValue;
@property(nonatomic) double value; // @synthesize value=_value;
- (id)description;
- (void)_appendDescriptionToString:(id)arg1 atLevel:(int)arg2;
- (_Bool)_isUpperBoundary;
- (_Bool)_isLowerBoundary;
- (void)_setBoundaryPull:(double)arg1;
- (double)_boundaryPull;
- (CDUnknownBlockType)_applier;
- (void)dealloc;
- (id)init;

@end

@interface _UIDynamicAnimationGroup : _UIDynamicAnimation
{
    CDUnknownBlockType _applier;
    NSMutableArray *_animations;
    NSMutableArray *_runningAnimations;
}

@property(copy, nonatomic) NSArray *animations; // @synthesize animations=_animations;
- (void)_appendSubclassDescription:(id)arg1 atLevel:(int)arg2;
- (void)runWithCompletion:(CDUnknownBlockType)arg1;
- (void)runWithGroupApplier:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)runWithGroupApplier:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2 forScreen:(id)arg3 runLoopMode:(id)arg4;
- (void)removeAnimation:(id)arg1;
- (void)addAnimation:(id)arg1;
- (_Bool)_animateForInterval:(double)arg1;
- (void)_stopAnimation;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicAnimationState : NSObject
{
    UIScreen *_screen;
    CADisplayLink *_displayLink;
    NSTimer *_timer;
    NSMutableArray *_activeAnimations;
    double _lastUpdateTime;
    _Bool _shouldSchedYield;
}

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicCaretAlternatives : UIView
{
    UIView *_verticalDivider;
    UIView *_horizontalDivider;
    NSArray *_alternativesButtons;
}

@property(retain, nonatomic) NSArray *alternativesButtons; // @synthesize alternativesButtons=_alternativesButtons;
@property(retain, nonatomic) UIView *horizontalDivider; // @synthesize horizontalDivider=_horizontalDivider;
@property(retain, nonatomic) UIView *verticalDivider; // @synthesize verticalDivider=_verticalDivider;
- (void)highlightButtonAtIndex:(long long)arg1;
- (long long)indexOfButtonForPoint:(struct CGPoint)arg1;
- (void)setButtonLabels:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicCaretDot : UIView
{
}

- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicCaretHelpLabel : UIImageView
{
}

- (id)initWithImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicCaretInput : UIView <UIKBHandwritingStrokeEnabled>
{
    struct CGContext *_bitmapContext;
    long long _fadeCount;
    struct CGPoint _lastViewLoc;
    struct CGRect _inkedAreaOfBitmapContext;
    NSTimer *_fadeTimer;
    TIHandwritingStrokes *_accumulatedStrokes;
    UIDelayedAction *_committedAction;
    _UIDynamicCaretDot *_dotView;
}

@property(retain, nonatomic) _UIDynamicCaretDot *dotView; // @synthesize dotView=_dotView;
@property(retain, nonatomic) UIDelayedAction *committedAction; // @synthesize committedAction=_committedAction;
@property(retain, nonatomic) TIHandwritingStrokes *accumulatedStrokes; // @synthesize accumulatedStrokes=_accumulatedStrokes;
@property(retain, nonatomic) NSTimer *fadeTimer; // @synthesize fadeTimer=_fadeTimer;
- (void)cancelTouchAtPoint:(struct CGPoint)arg1;
- (void)endTouchAtPoint:(struct CGPoint)arg1;
- (void)addTouchAtPoint:(struct CGPoint)arg1;
- (void)startTouchAtPoint:(struct CGPoint)arg1;
- (void)addInkPoint:(struct CGPoint)arg1 fromLastPoint:(_Bool)arg2;
- (void)send;
- (void)clearAndNotify:(_Bool)arg1;
- (void)committedStrokes;
- (void)log;
- (void)drawPoint:(struct CGPoint)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_fadeInk;
- (void)clearFadeTimer;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) double inkWidth;
@property(readonly, nonatomic) _Bool isInking;
@property(readonly, nonatomic) _Bool hasInk;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicCaretNoContentView : UIImageView
{
}

- (id)initWithImage:(id)arg1;

@end

@interface _UIDynamicSlider : UISlider <UIDynamicAnimatorDelegate, UICollisionBehaviorDelegate>
{
    double _thumbVelocity;
    struct CGPoint _thumbPreviousPoint;
    double _thumbPreviousTime;
    UIView *_thumbDynamicsView;
    _UIDynamicSliderAnimator *_animator;
    UIGravityBehavior *_gravityBehavior;
    UIPushBehavior *_pushBehavior;
    UIDynamicItemBehavior *_itemBehavior;
}

- (void)dealloc;
- (_Bool)cancelTouchTracking;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)dynamicAnimatorDidPause:(id)arg1;
- (void)collisionBehavior:(id)arg1 beganContactForItem:(id)arg2 withBoundaryIdentifier:(id)arg3 atPoint:(struct CGPoint)arg4;
- (void)_handleDynamicsStep;
- (void)_handleConversionToDynamicsTracking;
- (void)_updateDynamicsTracking:(id)arg1;
- (void)_initializeDynamicsTracking:(id)arg1;
- (void)_clearDynamics;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIDynamicSliderAnimator : UIDynamicAnimator
{
    _UIDynamicSlider *_slider;
}

- (_Bool)_animatorStep:(double)arg1;

@end

@interface _UIDynamicValueAnimation : _UIDynamicAnimation
{
    CDUnknownBlockType _applier;
    CDUnknownBlockType _viewApplier;
    double _value;
    double _velocity;
    double _unitSize;
    double _friction;
    double _decelerationFactor;
    double _decelerationLnFactor;
    double _multiplier;
    NSMutableArray *_activeValues;
    void *_stepFunction;
}

+ (id)_dynamicValueAnimationMatchingCASpringAnimationWithMass:(double)arg1 stiffness:(double)arg2 damping:(float)arg3 velocity:(float)arg4 fromValue:(double)arg5 toValue:(double)arg6;
@property(copy, nonatomic) NSArray *activeValues; // @synthesize activeValues=_activeValues;
@property(nonatomic) double friction; // @synthesize friction=_friction;
@property(nonatomic) double value; // @synthesize value=_value;
@property(nonatomic) double velocity; // @synthesize velocity=_velocity;
- (void)_appendSubclassDescription:(id)arg1 atLevel:(int)arg2;
- (void)_setVelocity:(double)arg1;
- (void)_setMultiplier:(double)arg1;
- (double)_multiplier;
- (void)_setDecelerationFactor:(double)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)runWithCompletion:(CDUnknownBlockType)arg1;
- (void)runWithValueApplier:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)runWithValueApplier:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2 forScreen:(id)arg3 runLoopMode:(id)arg4;
- (_Bool)_animateForInterval:(double)arg1;
- (void)removeActiveValue:(id)arg1;
- (void)addActiveValue:(id)arg1;
- (void)_updateStepFunction;
- (void)_stopAnimation;
- (void)dealloc;
- (id)init;
- (id)initWithValue:(double)arg1 velocity:(double)arg2 unitSize:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIEmojiPageControl : UIPageControl
{
}

- (void)_setCurrentPage:(long long)arg1;
- (id)_pageIndicatorCurrentImageForPage:(long long)arg1;
- (id)_pageIndicatorImageForPage:(long long)arg1;
- (void)layoutSubviews;

@end

__attribute__((visibility("hidden")))
@interface _UIEmojiScrollView : UIScrollView
{
    double _delay;
    _Bool _canDragToScroll;
}

@property double delay; // @synthesize delay=_delay;
- (_Bool)touchesShouldCancelInContentView:(id)arg1;
- (_Bool)touchesShouldBegin:(id)arg1 withEvent:(id)arg2 inContentView:(id)arg3;
- (void)_lookForScrolling;
- (void)_stopLookingForScrolling;
- (void)setContentOffset:(struct CGPoint)arg1;
- (double)_touchDelayForScrollDetection;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIFallbackPresentationViewController : UIViewController
{
    _UIFallbackPresentationWindow *_presentationWindow;
    UIWindow *_rotationDecider;
}

@property(retain, nonatomic) UIWindow *rotationDecider; // @synthesize rotationDecider=_rotationDecider;
- (void)_presentViewController:(id)arg1 sendingView:(id)arg2 animated:(_Bool)arg3;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIFallbackPresentationWindow : UIWindow
{
}

+ (_Bool)_isSystemWindow;
- (_Bool)_includeInDefaultImageSnapshot;
- (_Bool)_canAffectStatusBarAppearance;

@end

__attribute__((visibility("hidden")))
@interface _UIFieldEditorContentView : UIView
{
    UIFieldEditor *_fieldEditor;
}

@property(nonatomic) UIFieldEditor *fieldEditor;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIFieldEditorLayoutManager : NSLayoutManager
{
    _Bool _needsExtraBulletRendering;
}

@property _Bool needsExtraBulletRendering; // @synthesize needsExtraBulletRendering=_needsExtraBulletRendering;
- (void)showCGGlyphs:(const unsigned short *)arg1 positions:(const struct CGPoint *)arg2 count:(unsigned long long)arg3 font:(id)arg4 matrix:(struct CGAffineTransform)arg5 attributes:(id)arg6 inContext:(struct CGContext *)arg7;

@end

@interface _UIFilteredDataSource : NSObject <UITableViewDataSource>
{
    _Bool _limitingWithSections;
    long long _maxVisibleSection;
    long long _numberOfVisibleItemsInLastSection;
    long long _filterType;
    id <UITableViewDataSource> _tableDataSource;
}

@property(nonatomic) id <UITableViewDataSource> tableDataSource; // @synthesize tableDataSource=_tableDataSource;
@property(nonatomic) long long filterType; // @synthesize filterType=_filterType;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)_filteredNumberOfItemsGivenSection:(long long)arg1 numberOfItems:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIFlippingLayer : CATransformLayer
{
}

- (void)setOpaque:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIFlippingView : UIView
{
}

+ (Class)layerClass;

@end

__attribute__((visibility("hidden")))
@interface _UIFlowLayoutInfo : NSObject
{
    NSMutableArray *_sections;
    _Bool _useFloatingHeaderFooter;
    _Bool _horizontal;
    _Bool _leftToRight;
    struct CGRect _visibleBounds;
    struct CGSize _layoutSize;
    double _dimension;
    _Bool _isValid;
    NSDictionary *_rowAlignmentOptions;
    UICollectionViewFlowLayout *_layout;
    _Bool _usesFloatingHeaderFooter;
    _Bool _estimatesSizes;
    struct CGSize _contentSize;
}

@property(nonatomic) _Bool estimatesSizes; // @synthesize estimatesSizes=_estimatesSizes;
@property(nonatomic) UICollectionViewFlowLayout *layout; // @synthesize layout=_layout;
@property(readonly, nonatomic) NSMutableArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) NSDictionary *rowAlignmentOptions; // @synthesize rowAlignmentOptions=_rowAlignmentOptions;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) _Bool leftToRight; // @synthesize leftToRight=_leftToRight;
@property(nonatomic) _Bool horizontal; // @synthesize horizontal=_horizontal;
@property(nonatomic) double dimension; // @synthesize dimension=_dimension;
@property(nonatomic) _Bool usesFloatingHeaderFooter; // @synthesize usesFloatingHeaderFooter=_usesFloatingHeaderFooter;
@property(readonly, nonatomic) NSArray *invalidatedIndexPaths;
- (void)setSize:(struct CGSize)arg1 forItemAtIndexPath:(id)arg2;
- (void)didUpdateSizeForSection:(long long)arg1 withDelta:(double)arg2;
- (id)copy;
- (id)snapshot;
- (struct CGRect)frameForItemAtIndexPath:(id)arg1;
- (id)addSection;
- (void)invalidate:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIFlowLayoutItem : NSObject
{
    _UIFlowLayoutSection *_section;
    _UIFlowLayoutRow *_rowObject;
    struct CGRect _itemFrame;
    struct {
        unsigned int positionEstimated:1;
    } _itemFlags;
}

@property(nonatomic) struct CGRect itemFrame; // @synthesize itemFrame=_itemFrame;
@property(nonatomic) _UIFlowLayoutRow *rowObject; // @synthesize rowObject=_rowObject;
@property(nonatomic) _UIFlowLayoutSection *section; // @synthesize section=_section;
@property(nonatomic, getter=isPositionEstimated) _Bool positionEstimated;
- (id)copy;

@end

__attribute__((visibility("hidden")))
@interface _UIFlowLayoutRow : NSObject
{
    NSMutableArray *_items;
    _UIFlowLayoutSection *_section;
    struct CGSize _rowSize;
    struct CGRect _rowFrame;
    long long _index;
    _Bool _isValid;
    _Bool _complete;
    int _verticalAlignement;
    int _horizontalAlignement;
    double _availableSpace;
    _Bool _fixedItemSize;
}

@property(nonatomic) double availableSpace; // @synthesize availableSpace=_availableSpace;
@property(nonatomic) _Bool fixedItemSize; // @synthesize fixedItemSize=_fixedItemSize;
@property(nonatomic) _Bool complete; // @synthesize complete=_complete;
@property(readonly, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(nonatomic) struct CGRect rowFrame; // @synthesize rowFrame=_rowFrame;
@property(nonatomic) struct CGSize rowSize; // @synthesize rowSize=_rowSize;
@property(nonatomic) _UIFlowLayoutSection *section; // @synthesize section=_section;
- (long long)indexOfNearestItemAtPoint:(struct CGPoint)arg1;
- (id)copyFromSection:(id)arg1;
- (id)snapshot;
- (void)removeItemAtIndex:(long long)arg1;
- (void)insertItem:(id)arg1 atIndex:(long long)arg2;
- (void)addItem:(id)arg1 atEnd:(_Bool)arg2;
- (void)layoutRow;
- (void)invalidate;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIFlowLayoutSection : NSObject
{
    NSMutableArray *_items;
    NSMutableArray *_rows;
    struct UIEdgeInsets _sectionMargins;
    double _verticalInterstice;
    double _horizontalInterstice;
    struct CGRect _headerFrame;
    struct CGRect _footerFrame;
    double _headerDimension;
    double _footerDimension;
    _UIFlowLayoutInfo *_layoutInfo;
    _Bool _isValid;
    struct CGRect _frame;
    struct CGRect _validRect;
    struct CGRect _rectToKeepValid;
    struct _NSRange _validItemRange;
    NSMutableSet *_invalidatedIndexPaths;
    NSDictionary *_rowAlignmentOptions;
    _Bool _fixedItemSize;
    struct CGSize _itemSize;
    double _otherMargin;
    double _beginMargin;
    double _endMargin;
    double _actualGap;
    double _lastRowBeginMargin;
    double _lastRowEndMargin;
    double _lastRowActualGap;
    _Bool _lastRowIncomplete;
    long long _itemsCount;
    long long _itemsByRowCount;
    long long _indexOfIncompleteRow;
}

@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(readonly, nonatomic) struct _NSRange validItemRange; // @synthesize validItemRange=_validItemRange;
@property(readonly, nonatomic) long long itemsByRowCount; // @synthesize itemsByRowCount=_itemsByRowCount;
@property(nonatomic) long long itemsCount; // @synthesize itemsCount=_itemsCount;
@property(readonly, nonatomic) long long indexOfIncompleteRow; // @synthesize indexOfIncompleteRow=_indexOfIncompleteRow;
@property(readonly, nonatomic) _Bool lastRowIncomplete; // @synthesize lastRowIncomplete=_lastRowIncomplete;
@property(readonly, nonatomic) double lastRowActualGap; // @synthesize lastRowActualGap=_lastRowActualGap;
@property(readonly, nonatomic) double lastRowEndMargin; // @synthesize lastRowEndMargin=_lastRowEndMargin;
@property(readonly, nonatomic) double lastRowBeginMargin; // @synthesize lastRowBeginMargin=_lastRowBeginMargin;
@property(readonly, nonatomic) double actualGap; // @synthesize actualGap=_actualGap;
@property(readonly, nonatomic) double endMargin; // @synthesize endMargin=_endMargin;
@property(readonly, nonatomic) double beginMargin; // @synthesize beginMargin=_beginMargin;
@property(readonly, nonatomic) double otherMargin; // @synthesize otherMargin=_otherMargin;
@property(nonatomic) _Bool fixedItemSize; // @synthesize fixedItemSize=_fixedItemSize;
@property(retain, nonatomic) NSDictionary *rowAlignmentOptions; // @synthesize rowAlignmentOptions=_rowAlignmentOptions;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) _UIFlowLayoutInfo *layoutInfo; // @synthesize layoutInfo=_layoutInfo;
@property(nonatomic) struct CGRect footerFrame; // @synthesize footerFrame=_footerFrame;
@property(nonatomic) struct CGRect headerFrame; // @synthesize headerFrame=_headerFrame;
@property(readonly, nonatomic) double footerDimension; // @synthesize footerDimension=_footerDimension;
@property(readonly, nonatomic) double headerDimension; // @synthesize headerDimension=_headerDimension;
@property(nonatomic) struct UIEdgeInsets sectionMargins; // @synthesize sectionMargins=_sectionMargins;
@property(nonatomic) double horizontalInterstice; // @synthesize horizontalInterstice=_horizontalInterstice;
@property(nonatomic) double verticalInterstice; // @synthesize verticalInterstice=_verticalInterstice;
@property(readonly, nonatomic) NSMutableArray *rows; // @synthesize rows=_rows;
@property(readonly, nonatomic) NSMutableArray *items; // @synthesize items=_items;
- (id)rowsInRect:(struct CGRect)arg1;
- (void)addInvalidatedIndexPath:(id)arg1;
- (void)setSize:(struct CGSize)arg1 forItemAtIndexPath:(id)arg2;
- (id)copyFromLayoutInfo:(id)arg1;
- (id)snapshot;
- (id)addRowAtEnd:(_Bool)arg1;
- (id)addItem;
- (void)setEstimatedSize:(struct CGSize)arg1 forSection:(long long)arg2;
- (void)updateEstimatedSizeForSection:(long long)arg1;
- (void)computeLayoutInRect:(struct CGRect)arg1 forSection:(long long)arg2 invalidating:(_Bool)arg3;
- (void)setFooterDimension:(double)arg1 forSection:(long long)arg2;
- (void)setHeaderDimension:(double)arg1 forSection:(long long)arg2;
- (void)logInvalidSizes;
- (long long)estimatedIndexOfItemAtPoint:(struct CGPoint)arg1;
- (void)computeLayout;
- (void)sizeChangedForItem:(id)arg1 atIndexPath:(id)arg2 inRow:(id)arg3;
- (void)invalidate;
- (struct CGRect)frameForItemAtIndexPath:(id)arg1;
@property(readonly, nonatomic) NSArray *invalidatedIndexPaths;
- (void)dealloc;
- (id)init;

@end

@interface _UIFormSheetPresentationController : UIPresentationController
{
    UIDimmingView *_dimmingView;
    UIDropShadowView *_dropShadowView;
    struct CGSize _formSheetSize;
    _Bool _layoutStateShouldAvoidKeyboard;
}

- (_Bool)_presentationPotentiallyUnderlapsStatusBar;
- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)containerViewDidLayoutSubviews;
- (void)containerViewWillLayoutSubviews;
- (_Bool)shouldSubscribeToKeyboardNotifications;
- (id)presentedView;
- (_Bool)_shouldHideBottomCorner;
- (double)_dropShadowCornerRadius;
- (struct CGRect)_frameOfPresentedViewControllerViewInSuperview;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)_changeLayoutModeToAvoidKeyboard:(_Bool)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (id)_presentationView;
- (void)_transitionToDidEnd;
- (void)_transitionToWillBegin;
- (void)_transitionFromDidEnd;
- (void)_transitionFromWillBegin;
- (_Bool)shouldRemovePresentersView;
- (_Bool)shouldPresentInFullscreen;
- (unsigned long long)dropShadowAutoresizingMask;
- (struct CGRect)_frameForViewController:(id)arg1 inWindow:(id)arg2 transitionView:(id)arg3 fromViewController:(id)arg4;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIFullscreenPresentationController : _UICurrentContextPresentationController
{
    UIView *_counterRotatedView;
    double _counterRotatedAngle;
    struct CGRect _counterRotatedOriginalBounds;
}

- (void)_setPresentedViewController:(id)arg1;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)transitionDidFinish:(_Bool)arg1;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)_removeCounterRotation;
- (void)_adjustOrientationIfNecessaryInWindow:(id)arg1 forViewController:(id)arg2 preservingViewController:(id)arg3;
- (_Bool)_shouldChangeStatusBarViewController;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (_Bool)_shouldRespectDefinesPresentationContext;
- (_Bool)shouldRemovePresentersView;
- (_Bool)shouldPresentInFullscreen;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIGestureRecognizerFailureMap : NSObject
{
    NSMutableArray *_gestureRecognizers;
    char *_failureMap;
    int _unmetFailureRequirementCount;
    int _unmetFailureDependentCount;
}

+ (void)buildFailureMapForGestureRecognizer:(id)arg1;
+ (void)buildFailureMapForGestureRecognizers:(id)arg1;
- (_Bool)isGestureRecognizerWaitingForGestureRecognizersToFail:(id)arg1;
@property(readonly) _Bool hasUnmetFailureRequirementsOrDependents;
- (void)gestureRecognizerFinished:(id)arg1 withEvent:(id)arg2;
- (void)_queueRecognizersForResetIfFinished;
- (void)_gestureRecognizerFinished:(id)arg1 withEvent:(id)arg2;
- (void)gestureRecognizerBecameDirty:(id)arg1;
- (void)gestureRecognizerDeallocated:(id)arg1;
- (id)description;
- (void)_rebuildFailureMapDefferingRelease;
- (void)rebuildFailureMap;
- (void)reloadFailureMap;
- (void)dealloc;
- (id)initWithRelatedGestures:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIGestureRecognizerTransformAnalyzer : NSObject
{
    double _lowPassTranslationMagnitudeDelta;
    double _lowPassScaleDelta;
    double _lowPassRotationDelta;
    double _translationWeight;
    double _pinchingWeight;
    double _rotationWeight;
    int _dominantComponent;
}

@property(readonly, nonatomic) int dominantComponent; // @synthesize dominantComponent=_dominantComponent;
@property(nonatomic) double rotationWeight; // @synthesize rotationWeight=_rotationWeight;
@property(nonatomic) double pinchingWeight; // @synthesize pinchingWeight=_pinchingWeight;
@property(nonatomic) double translationWeight; // @synthesize translationWeight=_translationWeight;
- (void)analyzeTouches:(id)arg1;
- (void)reset;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIGetAssetThread : NSThread
{
    NSURL *_url;
    ALAssetsLibrary *_library;
    NSCondition *_condition;
    ALAsset *_asset;
}

@property(retain) NSCondition *condition; // @synthesize condition=_condition;
@property(retain) ALAsset *asset; // @synthesize asset=_asset;
- (void)main;
- (void)dealloc;
- (id)initWithURL:(id)arg1 assetsLibrary:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIGlintyGradientView : UIView
{
}

+ (Class)layerClass;
@property(readonly, nonatomic) CAGradientLayer *gradientLayer;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIGlintyShapeView : UIView
{
    UIBezierPath *_path;
    UIColor *_fillColor;
    UIColor *_strokeColor;
}

+ (Class)layerClass;
@property(readonly, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(readonly, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(readonly, nonatomic) UIBezierPath *path; // @synthesize path=_path;
- (void)setStrokeColor:(id)arg1;
- (void)setFillColor:(id)arg1;
- (void)setPath:(id)arg1;
@property(readonly, nonatomic) CAShapeLayer *shapeLayer;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIGlintyStringView : UIView
{
    _Bool _animationRepeats;
    _Bool _adjustsFontSizeToFitWidth;
    _Bool _hasCustomBackgroundColor;
    _Bool _highlight;
    _Bool _allowsLuminanceAdjustments;
    _Bool _usesBackgroundDimming;
    _Bool _needsTextUpdate;
    _Bool _animating;
    _Bool _fading;
    _Bool _showing;
    int _textIndex;
    id <_UIGlintyStringViewDelegate> _delegate;
    NSString *_text;
    UIFont *_font;
    NSString *_textLanguage;
    _UILegibilitySettings *_legibilitySettings;
    _UIVibrantSettings *_vibrantSettings;
    UIView *_backgroundView;
    UIColor *_backgroundColor;
    UIColor *_chevronBackgroundColor;
    long long _chevronStyle;
    double _horizontalPadding;
    UILabel *_label;
    UIView *_spotlightView;
    UIImage *_chevron;
    UIView *_highlightView;
    UIView *_effectView;
    UIView *_blurView;
    double _blurAlpha;
    NSMutableSet *_blurHiddenRequesters;
    struct CGSize _labelSize;
    struct CGRect _chevronFrame;
}

@property(retain, nonatomic) NSMutableSet *blurHiddenRequesters; // @synthesize blurHiddenRequesters=_blurHiddenRequesters;
@property(nonatomic) double blurAlpha; // @synthesize blurAlpha=_blurAlpha;
@property(retain, nonatomic) UIView *blurView; // @synthesize blurView=_blurView;
@property(retain, nonatomic) UIView *effectView; // @synthesize effectView=_effectView;
@property(nonatomic) _Bool showing; // @synthesize showing=_showing;
@property(nonatomic) _Bool fading; // @synthesize fading=_fading;
@property(nonatomic) _Bool animating; // @synthesize animating=_animating;
@property(retain, nonatomic) UIView *highlightView; // @synthesize highlightView=_highlightView;
@property(retain, nonatomic) UIImage *chevron; // @synthesize chevron=_chevron;
@property(nonatomic) int textIndex; // @synthesize textIndex=_textIndex;
@property(retain, nonatomic) UIView *spotlightView; // @synthesize spotlightView=_spotlightView;
@property(nonatomic) struct CGSize labelSize; // @synthesize labelSize=_labelSize;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(nonatomic) _Bool needsTextUpdate; // @synthesize needsTextUpdate=_needsTextUpdate;
@property(nonatomic) _Bool usesBackgroundDimming; // @synthesize usesBackgroundDimming=_usesBackgroundDimming;
@property(nonatomic) _Bool allowsLuminanceAdjustments; // @synthesize allowsLuminanceAdjustments=_allowsLuminanceAdjustments;
@property(nonatomic) _Bool highlight; // @synthesize highlight=_highlight;
@property(nonatomic) double horizontalPadding; // @synthesize horizontalPadding=_horizontalPadding;
@property(nonatomic) long long chevronStyle; // @synthesize chevronStyle=_chevronStyle;
@property(nonatomic) _Bool hasCustomBackgroundColor; // @synthesize hasCustomBackgroundColor=_hasCustomBackgroundColor;
@property(nonatomic) _Bool adjustsFontSizeToFitWidth; // @synthesize adjustsFontSizeToFitWidth=_adjustsFontSizeToFitWidth;
@property(nonatomic) _Bool animationRepeats; // @synthesize animationRepeats=_animationRepeats;
@property(retain, nonatomic) UIColor *chevronBackgroundColor; // @synthesize chevronBackgroundColor=_chevronBackgroundColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) _UIVibrantSettings *vibrantSettings; // @synthesize vibrantSettings=_vibrantSettings;
@property(retain, nonatomic) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(nonatomic) struct CGRect chevronFrame; // @synthesize chevronFrame=_chevronFrame;
@property(copy, nonatomic) NSString *textLanguage; // @synthesize textLanguage=_textLanguage;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) id <_UIGlintyStringViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (double)baselineOffsetFromBottomWithSize:(struct CGSize)arg1;
- (double)baselineOffsetFromBottom;
@property(readonly, nonatomic) struct CGRect labelFrame;
- (double)_chevronVerticalOffset;
- (double)_chevronHeightWithMaxOffset;
- (double)_chevronWidthWithPaddingCompression:(double)arg1;
- (double)_chevronWidthWithPadding;
- (struct CGSize)_labelSizeThatFits:(struct CGSize)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)_updateHighlight;
- (id)_highlightColor;
- (id)_highlightCompositingFilter;
- (id)shapeViewForCharactersInString:(id)arg1 withFont:(id)arg2 centeredInFrame:(struct CGRect)arg3;
- (void)updateTextWithBounds:(struct CGRect)arg1;
- (void)updateText;
- (void)_updateLabelWithFrame:(struct CGRect)arg1;
- (double)_chevronPadding;
- (id)_chevronImageForStyle:(long long)arg1;
- (void)fadeInWithDuration:(double)arg1;
- (void)fadeIn;
- (void)fadeOutWithDuration:(double)arg1;
- (void)fadeOut;
- (void)show;
- (void)hide;
- (void)stopAnimating;
- (void)startAnimating;
- (_Bool)isAnimating;
- (void)updateBlurForHiddenRequesters;
- (void)setBlurHidden:(_Bool)arg1 forRequester:(id)arg2;
- (void)showBlur;
- (void)hideBlur;
- (void)showEffects;
- (void)hideEffects;
- (void)dealloc;
- (id)initWithText:(id)arg1 andFont:(id)arg2;

@end

@interface _UIGraphicsLetterpressStyle : NSObject <NSCopying>
{
    int innerShadowBlendMode;
    int outerShadowBlendMode;
    UIColor *embossHighlightColor;
    UIColor *embossShadowColor;
    double embossSize;
    UIColor *innerShadowColor;
    double innerShadowBlur;
    UIColor *outerShadowColor;
    double outerShadowBlur;
    UIColor *topGradientColor;
    UIColor *bottomGradientColor;
    double innerOpacity;
    struct CGPoint innerShadowOffset;
    struct CGPoint outerShadowOffset;
}

+ (id)old2xLetterpressStyle;
+ (id)defaultLetterpressStyle;
@property(nonatomic) double innerOpacity; // @synthesize innerOpacity;
@property(retain, nonatomic) UIColor *bottomGradientColor; // @synthesize bottomGradientColor;
@property(retain, nonatomic) UIColor *topGradientColor; // @synthesize topGradientColor;
@property(nonatomic) int outerShadowBlendMode; // @synthesize outerShadowBlendMode;
@property(nonatomic) double outerShadowBlur; // @synthesize outerShadowBlur;
@property(nonatomic) struct CGPoint outerShadowOffset; // @synthesize outerShadowOffset;
@property(retain, nonatomic) UIColor *outerShadowColor; // @synthesize outerShadowColor;
@property(nonatomic) int innerShadowBlendMode; // @synthesize innerShadowBlendMode;
@property(nonatomic) double innerShadowBlur; // @synthesize innerShadowBlur;
@property(nonatomic) struct CGPoint innerShadowOffset; // @synthesize innerShadowOffset;
@property(retain, nonatomic) UIColor *innerShadowColor; // @synthesize innerShadowColor;
@property(nonatomic) double embossSize; // @synthesize embossSize;
@property(retain, nonatomic) UIColor *embossShadowColor; // @synthesize embossShadowColor;
@property(retain, nonatomic) UIColor *embossHighlightColor; // @synthesize embossHighlightColor;
@property(readonly, nonatomic) struct UIEdgeInsets edgeInsets;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIGroupTableViewCellBackgroundImageKey : NSObject <NSCopying>
{
    _Bool _opaque;
    _Bool _selected;
    struct CGSize _size;
    UIColor *_backgroundColor;
    UIColor *_sectionBorderColor;
    double _sectionBorderWidth;
    UIColor *_separatorColor;
    UIColor *_topShadowColor;
    UIColor *_bottomShadowColor;
    UIColor *_fillColor;
    UIColor *_selectionColor;
    double _leftPhase;
    double _rightPhase;
    int _sectionLocation;
    long long _selectionStyle;
    struct UIEdgeInsets _separatorInset;
}

@property(nonatomic) struct UIEdgeInsets separatorInset; // @synthesize separatorInset=_separatorInset;
@property(nonatomic) long long selectionStyle; // @synthesize selectionStyle=_selectionStyle;
@property(nonatomic) int sectionLocation; // @synthesize sectionLocation=_sectionLocation;
@property(nonatomic) double rightPhase; // @synthesize rightPhase=_rightPhase;
@property(nonatomic) double leftPhase; // @synthesize leftPhase=_leftPhase;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(retain, nonatomic) UIColor *bottomShadowColor; // @synthesize bottomShadowColor=_bottomShadowColor;
@property(retain, nonatomic) UIColor *topShadowColor; // @synthesize topShadowColor=_topShadowColor;
@property(retain, nonatomic) UIColor *selectionColor; // @synthesize selectionColor=_selectionColor;
@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(nonatomic) double sectionBorderWidth; // @synthesize sectionBorderWidth=_sectionBorderWidth;
@property(retain, nonatomic) UIColor *sectionBorderColor; // @synthesize sectionBorderColor=_sectionBorderColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(nonatomic) _Bool opaque; // @synthesize opaque=_opaque;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface _UIHighlightView : UIView
{
    UIColor *_color;
    double _cornerRadius;
    struct CGRect _invertedHighlightClipRect;
    NSArray *_cornerRadii;
    NSMutableArray *_innerBounds;
    NSMutableArray *_innerQuads;
    _Bool _invertHighlight;
}

- (id)hitTest:(struct CGPoint)arg1 forEvent:(struct __GSEvent *)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (void)setInvertHighlight:(_Bool)arg1 clipRect:(struct CGRect)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setQuads:(id)arg1 boundaryRect:(struct CGRect)arg2;
- (void)setFrames:(id)arg1 boundaryRect:(struct CGRect)arg2;
- (void)setCornerRadii:(id)arg1;
- (void)setCornerRadius:(double)arg1;
- (void)setColor:(id)arg1;
- (void)dealloc;
- (void)cleanUp;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITextServiceSession : NSObject <UIPopoverControllerDelegate>
{
    long long _type;
    UIViewController *_modalViewController;
    UIPopoverController *_popoverController;
    _Bool _isTextEffectsWindow;
    _Bool _dismissed;
    CDUnknownBlockType _dismissedHandler;
}

+ (id)textServiceSessionForType:(long long)arg1;
+ (id)showServiceForText:(id)arg1 type:(long long)arg2 fromRect:(struct CGRect)arg3 inView:(id)arg4;
+ (_Bool)canShowTextServices;
@property(copy, nonatomic) CDUnknownBlockType dismissedHandler; // @synthesize dismissedHandler=_dismissedHandler;
- (void)_endSession;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)dismissTextServiceAnimated:(_Bool)arg1;
- (long long)type;
- (_Bool)isDisplaying;
- (void)dealloc;
- (void)sessionDidDismiss;
- (id)init;
- (id)initWithType:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIHostedTextServiceSession : _UITextServiceSession
{
    id <_UIHostedTextServiceSessionDelegate> _delegate;
}

+ (id)showServiceForText:(id)arg1 type:(long long)arg2 fromRect:(struct CGRect)arg3 inView:(id)arg4;
@property(nonatomic) id <_UIHostedTextServiceSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)remoteSessionDidDismiss;
- (void)dismissTextServiceAnimated:(_Bool)arg1;

@end

@interface _UIHostedWindow : UIWindow
{
    long long _hostTintAdjustmentMode;
}

@property(nonatomic, setter=_setHostTintAdjustmentMode:) long long _hostTintAdjustmentMode; // @synthesize _hostTintAdjustmentMode;
- (_Bool)_presentActionSheet:(id)arg1 inView:(id)arg2 fromYCoordinate:(double)arg3;
- (void)_configureContextOptions:(id)arg1;
- (long long)_defaultTintAdjustmentMode;
- (_Bool)_isOffsetByScreenJail;
- (_Bool)_isRotatedByScreenJail;
- (_Bool)_isClippedByScreenJail;
- (_Bool)_isScaledByScreenJail;
- (_Bool)_isConstrainedByScreenJail;
- (_Bool)_needsShakesWhenInactive;
- (void)_updateTransformLayerForClassicPresentation;
- (void)_updateAppTintView;
- (void)_unregisterScrollToTopView:(id)arg1;
- (void)_registerScrollToTopView:(id)arg1;
- (_Bool)_usesWindowServerHitTesting;
@property(readonly, nonatomic) _UIHostedWindowHostingHandle *hostingHandle;
- (unsigned int)contextID;
- (_Bool)_canPromoteFromKeyWindowStack;
- (_Bool)_isWindowServerHostingManaged;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIHostedWindowHostingHandle : NSObject <NSSecureCoding>
{
    unsigned int _contextID;
    struct CGAffineTransform _rootLayerTransform;
    struct CGRect _rootLayerFrame;
}

+ (id)hostedWindowHostingHandleWithContextID:(unsigned int)arg1 rootLayerTransform:(struct CGAffineTransform)arg2 rootLayerFrame:(struct CGRect)arg3;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) struct CGRect rootLayerFrame; // @synthesize rootLayerFrame=_rootLayerFrame;
@property(readonly, nonatomic) struct CGAffineTransform rootLayerTransform; // @synthesize rootLayerTransform=_rootLayerTransform;
@property(readonly, nonatomic) unsigned int contextID; // @synthesize contextID=_contextID;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIImageSerializationWrapper : NSObject <NSCoding>
{
    UIImage *_image;
}

- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)initWithImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIImageViewExtendedStorage : NSObject
{
    _Bool _highlighted;
    UIImage *_image;
    UIImage *_highlightedImage;
    NSArray *_animationImages;
    NSArray *_highlightedAnimationImages;
    double _animationDuration;
    long long _animationRepeatCount;
    int _drawMode;
    long long _defaultRenderingMode;
    _Bool _masksTemplateImages;
    unsigned long long _templateImageRenderingEffects;
    UIImage *_displayedImage;
    UIImage *_displayedHighlightedImage;
}

- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIImageViewPretiledImageCacheKey : NSObject
{
    UIImage *_originalImage;
    struct CGSize _pretiledSize;
}

+ (id)cacheKeyWithOriginalImage:(id)arg1 pretiledSize:(struct CGSize)arg2;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface _UIImageViewPretiledImageWrapper : NSObject
{
    UIImage *_pretiledImage;
    _UIImageViewPretiledImageCacheKey *_cacheKey;
}

+ (id)cacheValueWithPretiledImage:(id)arg1 cacheKey:(id)arg2;
@property(readonly, nonatomic) UIImage *pretiledImage; // @synthesize pretiledImage=_pretiledImage;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIInlineCandidateCell : UIView
{
    NSString *_candidate;
    unsigned long long _index;
    UIFont *_font;
    struct CGSize _stringImageSize;
    _Bool _highlighted;
    id _target;
    SEL _action;
    _Bool _lastItem;
    _Bool _dontDrawRightEdge;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setLastItem:(_Bool)arg1;
- (void)dontDrawRightEdge:(_Bool)arg1;
- (unsigned long long)index;
- (struct CGSize)stringImageSize;
- (void)dealloc;
- (id)initWithCandidate:(id)arg1 andIndex:(unsigned long long)arg2 withFontSize:(double)arg3 target:(id)arg4 action:(SEL)arg5;

@end

__attribute__((visibility("hidden")))
@interface _UIInputViewContent : UIView
{
    double _contentHeight;
    double _contentWidth;
    UIInputView *_inputView;
    int _unclippableCorners;
}

@property(nonatomic) int _unclippableCorners; // @synthesize _unclippableCorners;
- (void)_updateCornerClipping;
- (struct CGSize)_contentSize;
- (void)addSubview:(id)arg1;
- (struct CGSize)_sizeFittingContentViews;
- (void)_setToolbarBackgroundViewWithImage:(id)arg1;
- (void)_setToolbarBackgroundImage:(id)arg1;
- (_Bool)_isToolbar;
- (id)initWithFrame:(struct CGRect)arg1 inputView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIInputViewControllerOutput : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _shouldDismiss;
    _Bool _shouldAdvanceInputMode;
    TIKeyboardOutput *_keyboardOutput;
    long long _positionOffset;
    NSString *_primaryLanguage;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *primaryLanguage; // @synthesize primaryLanguage=_primaryLanguage;
@property(nonatomic) _Bool shouldAdvanceInputMode; // @synthesize shouldAdvanceInputMode=_shouldAdvanceInputMode;
@property(nonatomic) _Bool shouldDismiss; // @synthesize shouldDismiss=_shouldDismiss;
@property(nonatomic) long long positionOffset; // @synthesize positionOffset=_positionOffset;
@property(retain, nonatomic) TIKeyboardOutput *keyboardOutput; // @synthesize keyboardOutput=_keyboardOutput;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)createKeyboardOutputIfNecessary;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIInputViewControllerState : NSObject <NSCopying, NSSecureCoding>
{
    TIDocumentState *_documentState;
    TITextInputTraits *_textInputTraits;
}

+ (id)stateForKeyboardState:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) TITextInputTraits *textInputTraits; // @synthesize textInputTraits=_textInputTraits;
@property(retain, nonatomic) TIDocumentState *documentState; // @synthesize documentState=_documentState;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)createDocumentStateIfNecessary;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIInputViewKeyboardOutput : TIKeyboardOutput
{
}

+ (_Bool)supportsSecureCoding;
- (void)setHandwritingStrokesToDelete:(id)arg1;
- (void)setShortcutConversion:(id)arg1;
- (void)setInsertionTextAfterSelection:(id)arg1;
- (void)setForwardDeletionCount:(unsigned long long)arg1;
- (void)setTextToCommit:(id)arg1;
- (void)setAcceptedCandidate:(id)arg1;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIInputViewSetPlacementDragToDismiss : UIInputViewSetPlacementOnScreen
{
    double _offset;
}

+ (id)placementWithOffset:(double)arg1;
@property(nonatomic) double offset; // @synthesize offset=_offset;
- (_Bool)isInteractive;
- (id)verticalConstraintForInputViewSet:(id)arg1 hostView:(id)arg2 containerView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIKBCompatInputView : UIView
{
}

+ (_Bool)_retroactivelyRequiresConstraintBasedLayout;
- (_Bool)_hasAutolayoutHeightConstraint;
- (void)_resizeForKeyplaneSize:(struct CGSize)arg1 splitWidthsChanged:(_Bool)arg2;
- (struct CGSize)intrinsicContentSize;
- (struct CGRect)_compatibleBounds;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setBounds:(struct CGRect)arg1;
@property(readonly, nonatomic) UIView *touchableView;

@end

__attribute__((visibility("hidden")))
@interface _UIKeyboardChangedInformation : NSObject <NSSecureCoding>
{
    unsigned int _animationFencingPort;
    _Bool _keyboardOnScreen;
    struct CGRect _keyboardPosition;
}

+ (_Bool)supportsSecureCoding;
+ (id)informationForKeyboardUp:(struct CGRect)arg1;
+ (id)informationForKeyboardDown;
@property(readonly) _Bool keyboardOnScreen; // @synthesize keyboardOnScreen=_keyboardOnScreen;
@property(readonly) struct CGRect keyboardPosition; // @synthesize keyboardPosition=_keyboardPosition;
@property(readonly) unsigned int animationFencingPort; // @synthesize animationFencingPort=_animationFencingPort;
- (id)description;
- (void)dealloc;
- (void)insertPermissions;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithKeyboardRect:(struct CGRect)arg1 onScreen:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIKeyboardChangedInformationWithFencing : _UIKeyboardChangedInformation
{
}

- (id)initWithKeyboardRect:(struct CGRect)arg1 onScreen:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIKeyboardLayoutAlignmentView : UIView
{
    NSNotification *_keyboardChangeNotificationForUpdateConstraints;
    struct CGRect lastKnownKeyboardRect;
    NSLayoutConstraint *bottomConstraint;
    NSLayoutConstraint *widthConstraint;
    NSLayoutConstraint *heightConstraint;
}

- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_removeConstraints;
- (void)_addConstraints;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)updateConstraints;
- (void)_keyboardChanged:(id)arg1;
- (void)_updateConstraintsToMatchKeyboardFrame:(struct CGRect)arg1;
- (struct CGRect)_frameInBoundsForKeyboardFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIKeyboardTypingSpeedLogger : NSObject
{
    long long _typingDelaySamples[7];
    long long _typingDelaySampleCount;
}

- (void)logToAggregate;
- (void)recordTypingDelay:(double)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIKeyboardUsageTracking : NSObject
{
}

+ (void)selectedPredictiveInputCandidate:(id)arg1 isAutocorrection:(_Bool)arg2;
+ (void)keyboardGestureSelectedPredictiveInputCandidate;
+ (void)keyboardGestureSetPredictionPreference:(_Bool)arg1;
+ (void)inputSwitcherSetPredictionPreference:(_Bool)arg1;
+ (void)predictionViewState:(_Bool)arg1 forInputMode:(id)arg2;
+ (void)keyboardExtensionsOnDevice;
+ (void)keyboardExtensionCrashed;
+ (void)keyboardExtensionPrimaryLanguageChanged;
+ (void)keyboardSetToInputMode:(id)arg1 fromPrevious:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIKeyframe : NSObject
{
    NSString *_key;
    id _value;
    double _startTime;
    double _duration;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
- (void)dealloc;
- (id)initWithKey:(id)arg1 startTime:(double)arg2 duration:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UILabelContentLayer : CALayer
{
}

- (id)actionForKey:(id)arg1;
- (void)drawInContext:(struct CGContext *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UILabelLayer : CALayer
{
    _UILabelContentLayer *_contentLayer;
    _Bool _contentInsetsValid;
    struct UIEdgeInsets _contentInsets;
}

- (void)setMasksToBounds:(_Bool)arg1;
- (void)_updateContentLayer;
- (void)invalidateContentInsets;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSublayers;
- (void)updateContentLayerSize;
- (void)updateContentInsets;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UILabelScaledMetrics : NSObject
{
    double _actualScaleFactor;
    double _baselineOffset;
    double _scaledBaselineOffset;
    double _scaledLineHeight;
    NSAttributedString *_scaledAttributedText;
    struct CGSize _targetSize;
    struct CGSize _scaledSize;
}

@property(retain, nonatomic) NSAttributedString *scaledAttributedText; // @synthesize scaledAttributedText=_scaledAttributedText;
@property(nonatomic) double scaledLineHeight; // @synthesize scaledLineHeight=_scaledLineHeight;
@property(nonatomic) double scaledBaselineOffset; // @synthesize scaledBaselineOffset=_scaledBaselineOffset;
@property(nonatomic) double baselineOffset; // @synthesize baselineOffset=_baselineOffset;
@property(nonatomic) double actualScaleFactor; // @synthesize actualScaleFactor=_actualScaleFactor;
@property(nonatomic) struct CGSize scaledSize; // @synthesize scaledSize=_scaledSize;
@property(nonatomic) struct CGSize targetSize; // @synthesize targetSize=_targetSize;
- (void)dealloc;

@end

@interface _UILayoutGuide : UIView <UILayoutSupport>
{
    _Bool _allowsArchivingAsSubview;
    _Bool _horizontal;
    NSArray *_constraintsToRemoveAtRuntime;
    NSString *_archivedIdentifier;
}

+ (id)_horizontalLayoutGuide;
+ (id)_verticalLayoutGuide;
+ (id)classFallbacksForKeyedArchiver;
@property(nonatomic, getter=isHorizontal, setter=_setHorizontal:) _Bool _horizontal; // @synthesize _horizontal;
@property(copy, nonatomic, setter=_setArchivedIdentifier:) NSString *_archivedIdentifier; // @synthesize _archivedIdentifier;
@property(nonatomic, setter=_setAllowsArchivingAsSubview:) _Bool _allowsArchivingAsSubview; // @synthesize _allowsArchivingAsSubview;
@property(copy, nonatomic, setter=_setConstraintsToRemoveAtRuntime:) NSArray *_constraintsToRemoveAtRuntime; // @synthesize _constraintsToRemoveAtRuntime;
- (id)_layoutVariablesWithAmbiguousValue;
- (_Bool)_isFloatingLayoutItem;
- (id)_relevantLayoutVariables;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) double length;
- (void)_setUpCounterDimensionConstraint;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UILayoutSupportConstraint : NSLayoutConstraint
{
}

+ (id)classFallbacksForKeyedArchiver;

@end

__attribute__((visibility("hidden")))
@interface _UILazyMapTable : NSObject
{
    CDUnknownBlockType _mappingBlock;
    NSMapTable *_keysToClientTables;
    NSMapTable *_keysToValues;
    NSMapTable *_valuesToKeys;
}

- (void)unregisterClient:(id)arg1 ofObjectForKey:(id)arg2;
- (void)registerClient:(id)arg1 ofObjectForKey:(id)arg2;
- (id)cachedObjectEnumerable;
- (id)keyEnumerable;
- (id)cachedObjects;
- (id)keys;
- (_Bool)hasCachedObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)description;
- (void)dealloc;
- (id)initWithMappingBlock:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UILegibilityCachedShadow : NSObject
{
    _UILegibilitySettings *_settings;
    double _strength;
    UIImage *_shadow;
}

@property(retain, nonatomic) UIImage *shadow; // @synthesize shadow=_shadow;
@property(nonatomic) double strength; // @synthesize strength=_strength;
@property(retain, nonatomic) _UILegibilitySettings *settings; // @synthesize settings=_settings;
- (_Bool)isEqual:(id)arg1;
- (_Bool)matchesSettings:(id)arg1 strength:(double)arg2;
- (void)dealloc;

@end

@interface _UILegibilityImageSet : NSObject
{
    UIImage *_image;
    UIImage *_shadowImage;
}

+ (id)imageFromImage:(id)arg1 withShadowImage:(id)arg2;
@property(retain, nonatomic) UIImage *shadowImage; // @synthesize shadowImage=_shadowImage;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)dealloc;
- (id)initWithImage:(id)arg1 shadowImage:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UILegibilityImageView : UIImageView
{
}

- (void)setImage:(id)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

@interface _UILegibilityView : UIView
{
    _Bool _hidesImage;
    _UILegibilitySettings *_settings;
    UIImage *_image;
    UIImage *_shadowImage;
    double _strength;
    UIImageView *_imageView;
    UIImageView *_shadowImageView;
    CAFilter *_imageColorFilter;
    CAFilter *_shadowImageColorFilter;
    long long _options;
}

@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) CAFilter *shadowImageColorFilter; // @synthesize shadowImageColorFilter=_shadowImageColorFilter;
@property(retain, nonatomic) CAFilter *imageColorFilter; // @synthesize imageColorFilter=_imageColorFilter;
@property(retain, nonatomic) UIImageView *shadowImageView; // @synthesize shadowImageView=_shadowImageView;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) _Bool hidesImage; // @synthesize hidesImage=_hidesImage;
@property(nonatomic) double strength; // @synthesize strength=_strength;
@property(retain, nonatomic) UIImage *shadowImage; // @synthesize shadowImage=_shadowImage;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) _UILegibilitySettings *settings; // @synthesize settings=_settings;
- (id)drawingColor;
- (_Bool)usesSecondaryColor;
@property(readonly, nonatomic) _Bool usesColorFilters;
- (void)layoutSubviews;
- (void)updateImage;
- (void)updateForChangedSettings:(id)arg1;
- (void)setSettings:(id)arg1 image:(id)arg2 shadowImage:(id)arg3;
- (void)setStyle:(long long)arg1 image:(id)arg2 shadowImage:(id)arg3;
- (void)setImage:(id)arg1 shadowImage:(id)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(readonly, nonatomic) long long style; // @dynamic style;
- (void)dealloc;
- (id)initWithSettings:(id)arg1 strength:(double)arg2 image:(id)arg3 shadowImage:(id)arg4 options:(long long)arg5;
- (id)initWithSettings:(id)arg1 strength:(double)arg2 image:(id)arg3 shadowImage:(id)arg4;
- (id)initWithSettings:(id)arg1 strength:(double)arg2 image:(id)arg3;
- (id)initWithStyle:(long long)arg1 image:(id)arg2 shadowImage:(id)arg3;
- (id)initWithStyle:(long long)arg1 image:(id)arg2;

@end

@interface _UILegibilityLabel : _UILegibilityView
{
    _Bool _usesSecondaryColor;
    NSString *_string;
    UIFont *_font;
}

@property(readonly, nonatomic) _Bool usesSecondaryColor; // @synthesize usesSecondaryColor=_usesSecondaryColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (void)updateImage;
@property(readonly, nonatomic) double baselineOffset;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithSettings:(id)arg1 strength:(double)arg2 string:(id)arg3 font:(id)arg4 options:(long long)arg5;
- (id)initWithSettings:(id)arg1 strength:(double)arg2 string:(id)arg3 font:(id)arg4;

@end

@interface _UILegibilitySettings : NSObject
{
    long long _style;
    UIColor *_contentColor;
    UIColor *_primaryColor;
    UIColor *_secondaryColor;
    UIColor *_shadowColor;
    double _shadowRadius;
    double _shadowAlpha;
    double _imageOutset;
    double _minFillHeight;
    NSString *_shadowCompositingFilterName;
}

+ (id)sharedInstanceForStyle:(long long)arg1;
@property(copy, nonatomic) NSString *shadowCompositingFilterName; // @synthesize shadowCompositingFilterName=_shadowCompositingFilterName;
@property(nonatomic) double minFillHeight; // @synthesize minFillHeight=_minFillHeight;
@property(nonatomic) double imageOutset; // @synthesize imageOutset=_imageOutset;
@property(nonatomic) double shadowAlpha; // @synthesize shadowAlpha=_shadowAlpha;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius=_shadowRadius;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIColor *secondaryColor; // @synthesize secondaryColor=_secondaryColor;
@property(retain, nonatomic) UIColor *primaryColor; // @synthesize primaryColor=_primaryColor;
@property(retain, nonatomic) UIColor *contentColor; // @synthesize contentColor=_contentColor;
@property(nonatomic) long long style; // @synthesize style=_style;
- (_Bool)isEqual:(id)arg1;
- (void)setPropertiesForStyle:(long long)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 primaryColor:(id)arg2 secondaryColor:(id)arg3 shadowColor:(id)arg4;
- (id)initWithStyle:(long long)arg1 contentColor:(id)arg2;
- (id)initWithContentColor:(id)arg1 contrast:(double)arg2;
- (id)initWithContentColor:(id)arg1;
- (id)initWithStyle:(long long)arg1;

@end

@interface _UILegibilitySettingsProvider : NSObject
{
    _Bool _hasContrast;
    _Bool _accumulatorIsPrimed;
    double _mostRecentSaturation;
    double _accumulatedSaturation;
    double _mostRecentBrightness;
    double _accumulatedBrightness;
    UIColor *_contentColor;
    double _mostRecentContrast;
    double _accumulatedContrast;
    double _mostRecentLuminance;
    double _accumulatedLuminance;
    double _nextChangeBarrier;
    long long _currentStyle;
}

+ (long long)styleForContentColor:(id)arg1 contrast:(double)arg2;
+ (long long)styleForContentColor:(id)arg1;
@property(nonatomic) long long currentStyle; // @synthesize currentStyle=_currentStyle;
@property(nonatomic) double nextChangeBarrier; // @synthesize nextChangeBarrier=_nextChangeBarrier;
@property(nonatomic) _Bool accumulatorIsPrimed; // @synthesize accumulatorIsPrimed=_accumulatorIsPrimed;
@property(nonatomic) _Bool hasContrast; // @synthesize hasContrast=_hasContrast;
@property(nonatomic) double accumulatedLuminance; // @synthesize accumulatedLuminance=_accumulatedLuminance;
@property(nonatomic) double mostRecentLuminance; // @synthesize mostRecentLuminance=_mostRecentLuminance;
@property(nonatomic) double accumulatedContrast; // @synthesize accumulatedContrast=_accumulatedContrast;
@property(nonatomic) double mostRecentContrast; // @synthesize mostRecentContrast=_mostRecentContrast;
@property(retain, nonatomic) UIColor *contentColor; // @synthesize contentColor=_contentColor;
@property(nonatomic) double accumulatedBrightness; // @synthesize accumulatedBrightness=_accumulatedBrightness;
@property(nonatomic) double mostRecentBrightness; // @synthesize mostRecentBrightness=_mostRecentBrightness;
@property(nonatomic) double accumulatedSaturation; // @synthesize accumulatedSaturation=_accumulatedSaturation;
@property(nonatomic) double mostRecentSaturation; // @synthesize mostRecentSaturation=_mostRecentSaturation;
- (id)settings;
- (void)clearContentColorAccumulator;
- (_Bool)accumulateChangesToContentColor:(id)arg1 contrast:(double)arg2;
- (_Bool)accumulateChangesToContentColor:(id)arg1;
- (void)dealloc;

@end

@interface _UILocationResultsTableViewCell : UITableViewCell
{
    long long _locationImageType;
    UIImage *_customLocationImage;
    UILabel *_searchTextLabel;
    UILabel *_searchDetailTextLabel;
    UIImageView *_searchImageView;
    NSLayoutConstraint *_topMarginConstraint;
    NSLayoutConstraint *_interLabelSpaceConstraint;
    NSLayoutConstraint *_bottomMarginConstraint;
    UIView *_cellHeightStrut;
    double _additionalLeftSidePadding;
}

@property(nonatomic) double additionalLeftSidePadding; // @synthesize additionalLeftSidePadding=_additionalLeftSidePadding;
@property(retain, nonatomic) UIView *cellHeightStrut; // @synthesize cellHeightStrut=_cellHeightStrut;
@property(retain, nonatomic) NSLayoutConstraint *bottomMarginConstraint; // @synthesize bottomMarginConstraint=_bottomMarginConstraint;
@property(retain, nonatomic) NSLayoutConstraint *interLabelSpaceConstraint; // @synthesize interLabelSpaceConstraint=_interLabelSpaceConstraint;
@property(retain, nonatomic) NSLayoutConstraint *topMarginConstraint; // @synthesize topMarginConstraint=_topMarginConstraint;
@property(retain, nonatomic) UIImageView *searchImageView; // @synthesize searchImageView=_searchImageView;
@property(retain, nonatomic) UILabel *searchDetailTextLabel; // @synthesize searchDetailTextLabel=_searchDetailTextLabel;
@property(retain, nonatomic) UILabel *searchTextLabel; // @synthesize searchTextLabel=_searchTextLabel;
@property(copy, nonatomic) UIImage *customLocationImage; // @synthesize customLocationImage=_customLocationImage;
@property(nonatomic) long long locationImageType; // @synthesize locationImageType=_locationImageType;
- (double)_subtitleCellBottomMargin;
- (double)_subtitleCellInterLabelSpace;
- (double)_subtitleCellTopMargin;
- (double)_defaultCellBottomMargin;
- (double)_defaultCellTopMargin;
- (void)prepareForReuse;
- (void)_updateLabelFontsAndConstraints;
- (void)layoutSubviews;
- (id)detailTextLabel;
- (id)textLabel;
- (void)_applyLeftAndRightAlignmentConstraints:(id)arg1;
- (id)_searchImageView;
- (id)contentView;
- (id)imageView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _UILocationResultsSubtitleTableViewCell : _UILocationResultsTableViewCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UILongDefinitionViewController : UIViewController
{
    _UIDefinitionValue *_definitionValue;
}

- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithDefinitionValue:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIMappedBitmapImage : UIImage
{
    NSData *_data;
}

+ (_Bool)supportsSecureCoding;
+ (void)initialize;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)_configureImage:(id)arg1;
- (void)_preheatBitmapData;
- (void)dealloc;

@end

@interface _UIModalItem : NSObject
{
    NSString *_title;
    NSString *_message;
    NSString *_cancelButtonTitle;
    NSString *_defaultButtonTitle;
    NSAttributedString *_titleAttributedString;
    NSAttributedString *_messageAttributedString;
    NSString *_subtitleString;
    long long _titleMaxLineNumber;
    long long _messageMaxLineNumber;
    long long _numberOfButtonsRows;
    _Bool _useUndoStyle;
    _Bool _useWifiPickerLayout;
    _Bool _textFieldsHidden;
    _Bool _dontUpdateFrameForKBChanges;
    NSMutableArray *_otherButtonsTitles;
    long long _itemType;
    id <UIModalItemDelegate> _delegate;
    CDUnknownBlockType _completionBlock;
    long long _modalItemInputStyle;
    UIView *_popoverTargetView;
    struct CGRect _popoverTargetRect;
    UIViewController *_contentViewController;
    struct CGSize _contentViewControllerSize;
    long long _presentAnimationType;
    long long _dismissAnimationType;
    _Bool _isPresented;
    _Bool _isVisible;
    _Bool _isBeingDismissed;
    _Bool _isHidden;
    UIViewController *_viewController;
    UIViewController *_hostingViewController;
    UIViewController *_anchorViewController;
    long long _defaultButtonIndex;
    long long _cancelButtonIndex;
    _UIModalItemContentView *_contentView;
    _UIModalItemBackgroundView *_backgroundView;
    _UIModalItemRepresentationView *_representedView;
    NSString *_loginString;
    NSString *_passwordString;
    NSString *_loginPlaceholderString;
    NSString *_passwordPlaceholderString;
    UITextInputTraits *_passwordTraits;
    UITextInputTraits *_loginTraits;
    _Bool _enableFirstOtherButton;
    _Bool _forceVerticalLayout;
    long long _dismissIndex;
    long long cancelButtonIndex;
    NSArray *_buttonTitles;
}

+ (id)modalItemWithType:(long long)arg1 title:(id)arg2 message:(id)arg3 buttonTitles:(id)arg4 completion:(CDUnknownBlockType)arg5;
@property(readonly, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) _Bool forceVerticalLayout; // @synthesize forceVerticalLayout=_forceVerticalLayout;
@property(nonatomic) long long defaultButtonIndex; // @synthesize defaultButtonIndex=_defaultButtonIndex;
@property(copy, nonatomic) NSArray *buttonTitles; // @synthesize buttonTitles=_buttonTitles;
@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
@property(nonatomic) _Bool dontUpdateFrameForKBChanges; // @synthesize dontUpdateFrameForKBChanges=_dontUpdateFrameForKBChanges;
@property(nonatomic) _Bool textFieldsHidden; // @synthesize textFieldsHidden=_textFieldsHidden;
@property(nonatomic) _Bool enableFirstOtherButton; // @synthesize enableFirstOtherButton=_enableFirstOtherButton;
@property(nonatomic) _Bool useWifiPickerLayout; // @synthesize useWifiPickerLayout=_useWifiPickerLayout;
@property(nonatomic) _Bool useUndoStyle; // @synthesize useUndoStyle=_useUndoStyle;
@property(nonatomic) long long numberOfButtonsRows; // @synthesize numberOfButtonsRows=_numberOfButtonsRows;
@property(nonatomic) long long messageMaxLineNumber; // @synthesize messageMaxLineNumber=_messageMaxLineNumber;
@property(nonatomic) long long titleMaxLineNumber; // @synthesize titleMaxLineNumber=_titleMaxLineNumber;
@property(copy, nonatomic) NSString *subtitleString; // @synthesize subtitleString=_subtitleString;
@property(copy, nonatomic) NSAttributedString *messageAttributedString; // @synthesize messageAttributedString=_messageAttributedString;
@property(copy, nonatomic) NSAttributedString *titleAttributedString; // @synthesize titleAttributedString=_titleAttributedString;
@property(nonatomic) struct CGSize contentViewControllerSize; // @synthesize contentViewControllerSize=_contentViewControllerSize;
@property(copy, nonatomic) NSString *passwordPlaceholderString; // @synthesize passwordPlaceholderString=_passwordPlaceholderString;
@property(copy, nonatomic) NSString *loginPlaceholderString; // @synthesize loginPlaceholderString=_loginPlaceholderString;
@property(copy, nonatomic) NSString *passwordString; // @synthesize passwordString=_passwordString;
@property(copy, nonatomic) NSString *loginString; // @synthesize loginString=_loginString;
@property(retain, nonatomic) _UIModalItemBackgroundView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) _UIModalItemContentView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) id <UIModalItemDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long dismissAnimationType; // @synthesize dismissAnimationType=_dismissAnimationType;
@property(nonatomic) long long presentAnimationType; // @synthesize presentAnimationType=_presentAnimationType;
@property(nonatomic) long long cancelButtonIndex; // @synthesize cancelButtonIndex;
@property(nonatomic) struct CGRect targetRect; // @synthesize targetRect=_popoverTargetRect;
@property(nonatomic) UIView *targetView; // @synthesize targetView=_popoverTargetView;
@property(nonatomic) long long dismissIndex; // @synthesize dismissIndex=_dismissIndex;
@property(nonatomic) _Bool isHidden; // @synthesize isHidden=_isHidden;
@property(nonatomic) _Bool isBeingDismissed; // @synthesize isBeingDismissed=_isBeingDismissed;
@property(readonly) _Bool isPresented; // @synthesize isPresented=_isPresented;
@property(nonatomic) long long modalItemInputStyle; // @synthesize modalItemInputStyle=_modalItemInputStyle;
@property(nonatomic) long long type; // @synthesize type=_itemType;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (id)_passwordTraits;
- (id)_loginTraits;
- (void)_loginFieldTextDidChange;
- (void)_passwordFieldTextDidChange;
- (void)_updateContentView;
- (void)refreshButtonTitle;
- (void)dealloc;
- (double)_maxHeight;
- (double)_maxWidth;
- (id)_defaultButtonTitle;
- (id)_cancelButtonTitle;
- (id)_otherButtonsTitles;
- (id)_typeKey;
- (void)_setAnchorViewController:(id)arg1;
- (id)_anchorViewController;
- (void)_setHostingViewController:(id)arg1;
- (id)_hostingViewController;
@property(retain, nonatomic, getter=_viewController, setter=_setViewController:) UIViewController *_viewController;
- (id)_popoverBackgroundView;
- (id)_representedView;
- (void)_setRepresentedView:(id)arg1;
- (id)_contentView;
- (id)_backgroundView;
- (id)initWithTitle:(id)arg1 message:(id)arg2 otherButtonTitles:(id)arg3 completion:(CDUnknownBlockType)arg4 delegate:(id)arg5;
- (id)buttonTitleAtIndex;
- (long long)addButtonWithTitle:(id)arg1;
- (id)textFieldAtIndex:(long long)arg1;

@end

@interface _UIModalItemAccessoryViewControllerForLegacyAlert : UIViewController
{
    UIView *_accessoryView;
}

- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_setAccessoryView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIModalItemBackgroundView : UIView
{
}

@end

@interface _UIModalItemActionSheetBackgroundView : _UIModalItemBackgroundView
{
}

@end

@interface _UIModalItemContentView : UIView <UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
{
    _UIModalItem *_modalItem;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_messageLabel;
    UITextField *_loginTextField;
    UITextField *_passwordTextField;
    UIViewController *_accessoryViewController;
    struct CGSize _accessoryViewControllerSize;
    UIView *_accessoryViewControllerContrainerView;
    struct CGSize _actualViewControllerSize;
    UIButton *_cancelButton;
    UIButton *_defaultButton;
    long long _cancelButtonIndex;
    long long _defaultButtonIndex;
    UITableView *_buttonTable;
    struct CGSize _presentingSize;
    _UIModalItemsPresentingViewController *_presentingViewController;
    struct CGSize _maxSize;
    _Bool _enableFirstOtherButton;
}

@property(readonly, nonatomic) UITableView *buttonTable; // @synthesize buttonTable=_buttonTable;
@property(readonly, nonatomic) long long defaultButtonIndex; // @synthesize defaultButtonIndex=_defaultButtonIndex;
@property(readonly, nonatomic) long long cancelButtonIndex; // @synthesize cancelButtonIndex=_cancelButtonIndex;
@property(retain, nonatomic) UIButton *defaultButton; // @synthesize defaultButton=_defaultButton;
@property(retain, nonatomic) UIButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(readonly, nonatomic) UIView *accessoryViewControllerContrainerView; // @synthesize accessoryViewControllerContrainerView=_accessoryViewControllerContrainerView;
@property(readonly, nonatomic) struct CGSize accessoryViewControllerSize; // @synthesize accessoryViewControllerSize=_accessoryViewControllerSize;
@property(readonly, nonatomic) UIViewController *accessoryViewController; // @synthesize accessoryViewController=_accessoryViewController;
@property(readonly, nonatomic) UITextField *passwordTextField; // @synthesize passwordTextField=_passwordTextField;
@property(readonly, nonatomic) UITextField *loginTextField; // @synthesize loginTextField=_loginTextField;
@property(readonly, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(readonly, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) _Bool enableFirstOtherButton; // @synthesize enableFirstOtherButton=_enableFirstOtherButton;
@property(nonatomic) struct CGSize actualViewControllerSize; // @synthesize actualViewControllerSize=_actualViewControllerSize;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) _UIModalItemsPresentingViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
@property(nonatomic) struct CGSize presentingSize; // @synthesize presentingSize=_presentingSize;
@property(nonatomic) _UIModalItem *modalItem; // @synthesize modalItem=_modalItem;
- (void)_reloadButtons;
- (void)textFieldValueDidChange:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)layout;
- (void)_createViewControllerContentView;
- (void)_createAndConfigureTextFieldsForInputStyle:(long long)arg1;
- (void)_createAndConfigureMessageLabel;
- (void)_createAndConfigureSubtitleLabel;
- (void)_createAndConfigureTitleLabel;
- (void)_createAndConfigureButtonTable;
- (void)setModalItem:(id)arg1 skipLayout:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIModalItemActionSheetContentView : _UIModalItemContentView
{
    UITableView *_otherButtonTableView;
    UITableView *_cancelTableView;
    _UIBackdropView *_effectView;
}

- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)layout;
- (void)_moveAllSubviewsToEffectContentView;
- (double)numberOfOtherButtonTitles;
- (void)_prepareViewIfNeeded;
- (void)_createOtherButtonTableView;
- (void)dealloc;

@end

@interface _UIModalItemAlertBackgroundView : _UIModalItemBackgroundView
{
    _UIBackdropView *_effectView;
    UIImageView *_fillingView;
}

- (id)_gradientImageForBoundsSize:(struct CGSize)arg1 withInnerColor:(id)arg2 outerColor:(id)arg3;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIModalItemAlertContentView : _UIModalItemContentView
{
    _UIModalItemTextFiledBGView *_textFieldBGView;
    _Bool _alertViewIsSetup;
    UITableView *_otherTableView;
    UIView *_2ButtonsSeparators;
    UIView *_tableViewTopSeparator;
    UIScrollView *_labelsScrollView;
    _Bool _itemWantsVerticalButtons;
    _Bool _itemNeedsTwoTableViews;
}

- (void)_reloadButtons;
- (void)setEnableFirstOtherButton:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)layout;
- (void)_prepareViewIfNeeded;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIModalItemAppViewController : UIViewController
{
    UIWindow *_rotationDelegate;
}

@property(retain, nonatomic) UIWindow *rotationDelegate; // @synthesize rotationDelegate=_rotationDelegate;
- (_Bool)shouldAutorotate;
- (long long)preferredInterfaceOrientationForPresentation;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)dealloc;

@end

@interface _UIModalItemHostingWindow : UIWindow
{
}

+ (_Bool)_isSystemWindow;

@end

@interface _UIModalItemRepresentationView : UIView
{
    _Bool _useFakeEffectSource;
    UIView *_fakeEffectSourceView;
}

@property(nonatomic) _Bool useFakeEffectSource; // @synthesize useFakeEffectSource=_useFakeEffectSource;
- (void)layoutSubviews;
- (void)setUseFakeEffectSource:(_Bool)arg1 animated:(_Bool)arg2;

@end

@interface _UIModalItemSBViewController : UIViewController
{
}

- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIModalItemTableViewCell : UITableViewCell
{
    _Bool _showFullWidthSeparator;
    UIColor *_fullWitdhSeparatorColor;
    UIView *_fullWidthSeparatorView;
    UIView *_topSeparatorView;
    _Bool _isEnabled;
}

@property(nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;
@property(retain, nonatomic) UIColor *fullWidthSeparatorColor; // @synthesize fullWidthSeparatorColor=_fullWitdhSeparatorColor;
@property(nonatomic) _Bool showFullWidthSeparator; // @synthesize showFullWidthSeparator=_showFullWidthSeparator;
- (void)dealloc;
@property(readonly, retain, nonatomic) UIView *topSeparatorView; // @synthesize topSeparatorView=_topSeparatorView;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _UITextFieldRoundedRectBackgroundViewNeue : UIImageView
{
    _Bool _disabled;
    UIColor *_strokeColor;
    UIColor *_fillColor;
    double _lineWidth;
    double _cornerRadius;
}

@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
- (void)setActive:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (id)_fillColor:(_Bool)arg1;
- (id)_strokeColor:(_Bool)arg1;
- (void)updateView;
- (void)dealloc;
- (id)_initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2 lineWidth:(double)arg3 updateView:(_Bool)arg4;
- (id)_initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2 lineWidth:(double)arg3;
- (id)initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (double)_pixelAlignment;
- (double)_pathInset;

@end

__attribute__((visibility("hidden")))
@interface _UIModalItemTextFiledBGView : _UITextFieldRoundedRectBackgroundViewNeue
{
    long long _textFieldsCount;
    UIColor *_backgroundColor;
    UIColor *_separatorsColor;
    UIView *_separatorView;
}

@property(retain, nonatomic) UIColor *separatorsColor; // @synthesize separatorsColor=_separatorsColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) long long textFieldsCount; // @synthesize textFieldsCount=_textFieldsCount;
- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIModalItemsCoordinator : NSObject
{
    NSMapTable *_presentingSessionsMapTable;
    NSMapTable *_sessionForItemMapTable;
    _UIModalItemSBViewController *__viewControllerForSBAlerts;
    _UIModalItemHostingWindow *__hostingWindowForSBAlerts;
    _UIModalItemAppViewController *__viewControllerForAlerts;
    _UIModalItemHostingWindow *__hostingWindowForAlerts;
}

+ (void)_resaturateUIForSB;
+ (void)_desaturateUIForSB;
+ (void)noteOrientationChangingTo:(long long)arg1 animated:(_Bool)arg2;
+ (void)_getRidOfViewControllerForAlerts;
+ (void)_getRidOfViewControllerForSBAlerts;
+ (id)sharedModalItemsCoordinator;
@property(retain, nonatomic) _UIModalItemHostingWindow *_hostingWindowForAlerts; // @synthesize _hostingWindowForAlerts=__hostingWindowForAlerts;
@property(retain, nonatomic) _UIModalItemAppViewController *_viewControllerForAlerts; // @synthesize _viewControllerForAlerts=__viewControllerForAlerts;
@property(retain, nonatomic) _UIModalItemHostingWindow *_hostingWindowForSBAlerts; // @synthesize _hostingWindowForSBAlerts=__hostingWindowForSBAlerts;
@property(retain, nonatomic) _UIModalItemSBViewController *_viewControllerForSBAlerts; // @synthesize _viewControllerForSBAlerts=__viewControllerForSBAlerts;
@property(retain, nonatomic) NSMapTable *sessionForItemMapTable; // @synthesize sessionForItemMapTable=_sessionForItemMapTable;
@property(retain, nonatomic) NSMapTable *presentingSessionsMapTable; // @synthesize presentingSessionsMapTable=_presentingSessionsMapTable;
- (void)_addItemToStack:(id)arg1 replacingItem:(id)arg2 forPresentingViewController:(id)arg3;
- (void)showAfterSpringBoardAlert:(_Bool)arg1;
- (void)hideForSpringBoardAlert:(_Bool)arg1;
- (void)_showModalItemsForType:(long long)arg1 presentingViewController:(id)arg2 undimSpotlightView:(_Bool)arg3 animated:(_Bool)arg4;
- (void)_hideModalItemsForType:(long long)arg1 presentingViewController:(id)arg2 dimSpotlightView:(_Bool)arg3 animated:(_Bool)arg4;
- (void)_hidePresentingSessionForModalItem:(id)arg1 keepDimmingView:(_Bool)arg2 animated:(_Bool)arg3;
- (id)_presentingSessionForViewController:(id)arg1 ofItemsType:(long long)arg2;
- (void)noteOrientationChangingTo:(long long)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)init;
- (_Bool)_notifyDelegateModalItem:(id)arg1 tappedButtonAtIndex:(long long)arg2;
- (void)_notifyDelegateDidPresentItem:(id)arg1;
- (void)_notifyDelegateWillPresentItem:(id)arg1;
- (void)_notifyDelegateDidDismissItem:(id)arg1 withIndex:(long long)arg2;
- (void)_notifyDelegateWillDismissItem:(id)arg1 withIndex:(long long)arg2;
- (void)_notifyDissmissedItem:(id)arg1;
- (void)_updateItem:(id)arg1 animated:(_Bool)arg2;
- (void)_dismissItem:(id)arg1 withTappedButtonIndex:(long long)arg2 animated:(_Bool)arg3 notifyDelegate:(_Bool)arg4;
- (void)_showNextModalItemIfNecessaryAfterHidingItem:(id)arg1 showingItem:(id)arg2 animate:(_Bool)arg3;
- (void)_presentItem:(id)arg1 replacingItem:(id)arg2 inViewController:(id)arg3 animated:(_Bool)arg4;
- (id)hostingViewControllerForViewController:(id)arg1 andModalItem:(id)arg2 create:(_Bool)arg3;
- (id)presentingViewControllerForItem:(id)arg1 create:(_Bool)arg2;
- (id)_rootViewControllerForModalItem:(id)arg1;
- (void)_getRidOfViewControllerForAlerts;
- (void)_getRidOfViewControllerForSBAlerts;
- (id)_presentingViewControllerForAlertCompatibilityCreateIfNeeded:(_Bool)arg1;
- (id)_presentingViewControllerForAlertCompatibility;
- (id)_presentingViewControllerForSBCompatibility;

@end

@interface _UIModalItemsPresentingViewController : UIViewController
{
    NSMutableArray *_items;
    NSMutableArray *_itemsViews;
    NSMutableArray *_occludedWindows;
    UIView *_backgroundView;
    _UIModalItem *_currentItem;
    UIView *_currentItemView;
    UIView *_dimmingView;
    struct CGRect _keyboardFrame;
    double _keyboardHeight;
    _Bool _isInTransition;
    _UIModalItem *_itemBeingPresented;
    _UIModalItem *_itemBeingDismissed;
    UIWindow *_rotationDelegate;
    CDUnknownBlockType _itemsTransitionCompletion;
}

@property(copy) CDUnknownBlockType itemsTransitionCompletion; // @synthesize itemsTransitionCompletion=_itemsTransitionCompletion;
@property(retain, nonatomic) UIWindow *rotationDelegate; // @synthesize rotationDelegate=_rotationDelegate;
@property(retain, nonatomic) _UIModalItem *itemBeingPresented; // @synthesize itemBeingPresented=_itemBeingPresented;
@property(retain, nonatomic) _UIModalItem *itemBeingDismissed; // @synthesize itemBeingDismissed=_itemBeingDismissed;
@property(retain, nonatomic) _UIModalItem *currentItem; // @synthesize currentItem=_currentItem;
@property(nonatomic) _Bool isInTransition; // @synthesize isInTransition=_isInTransition;
- (void)_updateItem:(id)arg1 animated:(_Bool)arg2;
- (void)_showItem:(id)arg1 animated:(_Bool)arg2 undimmSpotlight:(_Bool)arg3;
- (void)_showDimmingView:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_hideAnimated:(_Bool)arg1 dimmSpotlight:(_Bool)arg2;
- (void)_hide;
- (void)_showDimmingViewAnimated:(_Bool)arg1;
- (void)_hideDimmingViewAnimated:(_Bool)arg1;
- (void)_enqueueAdditionalTransitionCompletion:(CDUnknownBlockType)arg1;
- (void)_dismissItem:(id)arg1 andPresentItem:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_dismissItem:(id)arg1 andPresentItem:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4 keepDimmingView:(_Bool)arg5;
- (void)_applyPresentingAnimationEndingStateForModalItem:(id)arg1 view:(id)arg2 forceCenter:(_Bool)arg3;
- (void)_applyPresentingAnimationEndingStateForModalItem:(id)arg1 view:(id)arg2;
- (void)_applyDismissingAnimationEndingStateForModalItem:(id)arg1 view:(id)arg2 forceCenter:(_Bool)arg3;
- (void)_applyDismissingAnimationEndingStateForModalItem:(id)arg1 view:(id)arg2;
- (void)_applyPresentingAnimationStartingStateForModalItem:(id)arg1 view:(id)arg2;
- (void)_applyPresentingViewMetricsStateForModalItem:(id)arg1;
- (void)_resaturateUI;
- (void)_desaturateUI;
- (id)_createViewForItem:(id)arg1;
- (void)_dismissMe:(id)arg1 animated:(_Bool)arg2;
- (void)hideModalItem:(id)arg1 animated:(_Bool)arg2;
- (void)displayModalItem:(id)arg1 animated:(_Bool)arg2;
- (void)_hideItem:(id)arg1 animated:(_Bool)arg2;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)preferredInterfaceOrientationForPresentation;
- (void)didReceiveMemoryWarning;
- (void)viewWillLayoutSubviews;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (_Bool)wantsFullScreenLayout;
- (void)keyboardChanged:(id)arg1;
- (void)keyfirstResponderChanged:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)dealloc;
- (id)initWithModalItemType:(long long)arg1;

@end

@interface _UIMonogramView : UIView
{
    NSString *_name;
    NSString *_monogram;
    UILabel *_label;
}

@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(copy, nonatomic) NSString *monogram; // @synthesize monogram=_monogram;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void)layoutSubviews;
- (id)labelForMonogram:(id)arg1;
- (id)monogramForName:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIMoreListTableView : UITableView
{
    UIMoreListController *__listController;
}

@property(nonatomic) UIMoreListController *_listController; // @synthesize _listController=__listController;
- (void)didMoveToWindow;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionAnalyzer : NSObject <_UISettingsKeyObserver>
{
    _UIMotionAnalyzerSettings *_settings;
    double _smoothingDegree;
    double _referenceShiftSpeed;
    double _distanceMultiplier;
    _Bool _hasReferenceQuaternion;
    union _GLKQuaternion _referenceQuaternion;
    union _GLKQuaternion _absoluteQuaternion;
    double _lastUpdate;
    double _idleStartTime;
    struct UIOffset _idleStartOffset;
    double _jumpThreshold;
    double _idleLeeway;
    double _secondsBeforeIdle;
    double _lockValue;
    double _lockStrength;
    UIWindow *_diagnosticsWindow;
    UILabel *_idleIndicator;
    UIView *_horizontalLockIndicator;
    UIView *_verticalLockIndicator;
    _UIViewerRelativeDevicePose *_viewerRelativeDevicePose;
}

@property(readonly, nonatomic) _UIViewerRelativeDevicePose *viewerRelativeDevicePose; // @synthesize viewerRelativeDevicePose=_viewerRelativeDevicePose;
- (void)_tearDownDiagnosticsWindow;
- (void)_createDiagnosticsWindow;
- (void)_tearDownDirectionLockIndicators;
- (void)_createDirectionLockIndicators;
- (void)_tearDownIdleIndicator;
- (void)_createIdleIndicator;
- (void)_updateDirectionalLockIndicators;
- (void)_showIdleUI:(_Bool)arg1;
- (void)_updateSettings;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (_Bool)isIdleGivenTimestamp:(double)arg1;
- (void)_updateIdleStateForRawOffset:(struct UIOffset)arg1 timestamp:(double)arg2;
- (double)_directionLockStrength;
- (long long)_directionLockStatus;
- (void)_resetDirectionalLockWithViewerOffset:(struct UIOffset)arg1;
- (void)_shiftReferenceToYieldRelativeQuaternion:(union _GLKQuaternion)arg1;
- (union _GLKQuaternion)_relativeQuaternion;
- (float)_referenceShiftRadiansPerSecondForAngle:(float)arg1;
- (void)_updateReferenceAttitude:(union _GLKQuaternion)arg1 timestamp:(double)arg2;
- (struct UIOffset)_currentRawOffset:(union _GLKQuaternion)arg1;
- (void)_updateAcceleratedOutputRangeFixingOffset:(struct UIOffset)arg1;
- (void)_updateSmoothedOffsetForRawOffset:(struct UIOffset)arg1;
- (void)reset;
- (void)updateWithDeviceMotionStruct:(const CDStruct_04e8b4cd *)arg1 timestamp:(double)arg2;
- (void)updateWithDeviceMotion:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;
- (id)initWithSettings:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionAnalyzerHistory : NSObject
{
    struct UIOffset _lastAppliedViewerOffset;
    union _GLKQuaternion _lastAppliedRelativeQuaternion;
    _Bool _isApplyingHysteresis;
    union _GLKQuaternion _relativeQuaternionOnHysteresisEntry;
}

@end

@interface _UIMotionAnalyzerSettings : _UISettings
{
    _Bool _showIdleIndicator;
    _Bool _jumpEnabled;
    _Bool _playJumpSound;
    _Bool _directionalLockEnabled;
    _Bool _showDirectionalLockIndicators;
    _Bool _referenceShiftEnabled;
    double _inputSmoothingFactor;
    double _referenceShiftSpeed;
    double _idleLeeway;
    double _delayBeforeIdle;
    double _jumpThreshold;
    double _directionalLockThreshold;
    double _directionalLockStickiness;
    double _directionalLockSharpness;
    double _referenceShiftDistanceDependence;
}

@property double referenceShiftDistanceDependence; // @synthesize referenceShiftDistanceDependence=_referenceShiftDistanceDependence;
@property _Bool referenceShiftEnabled; // @synthesize referenceShiftEnabled=_referenceShiftEnabled;
@property _Bool showDirectionalLockIndicators; // @synthesize showDirectionalLockIndicators=_showDirectionalLockIndicators;
@property double directionalLockSharpness; // @synthesize directionalLockSharpness=_directionalLockSharpness;
@property double directionalLockStickiness; // @synthesize directionalLockStickiness=_directionalLockStickiness;
@property double directionalLockThreshold; // @synthesize directionalLockThreshold=_directionalLockThreshold;
@property _Bool directionalLockEnabled; // @synthesize directionalLockEnabled=_directionalLockEnabled;
@property _Bool playJumpSound; // @synthesize playJumpSound=_playJumpSound;
@property double jumpThreshold; // @synthesize jumpThreshold=_jumpThreshold;
@property _Bool jumpEnabled; // @synthesize jumpEnabled=_jumpEnabled;
@property _Bool showIdleIndicator; // @synthesize showIdleIndicator=_showIdleIndicator;
@property double delayBeforeIdle; // @synthesize delayBeforeIdle=_delayBeforeIdle;
@property double idleLeeway; // @synthesize idleLeeway=_idleLeeway;
@property double referenceShiftSpeed; // @synthesize referenceShiftSpeed=_referenceShiftSpeed;
@property double inputSmoothingFactor; // @synthesize inputSmoothingFactor=_inputSmoothingFactor;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionEffectAcceleratedOutputRange : NSObject <NSCoding, NSCopying>
{
    struct UIOffset _referenceOffset;
    struct CGPoint _referenceAcceleration;
    struct CGPoint _acceleration;
}

@property(readonly, nonatomic) struct CGPoint acceleration; // @synthesize acceleration=_acceleration;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)reset;
- (struct UIOffset)acceleratedOutputForViewerOffset:(struct UIOffset)arg1 accelerationBoostFactor:(struct CGPoint)arg2;
- (void)setAcceleration:(struct CGPoint)arg1 fixingOutputForViewerOffset:(struct UIOffset)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionEffectApplicator : NSObject
{
}

+ (void)unapplyMotionEffect:(id)arg1 toViews:(id)arg2;
+ (void)applyMotionEffect:(id)arg1 toViews:(id)arg2 usingPose:(id)arg3 transformedForTargetInterfaceOrientation:(long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionEffectEngine : NSObject
{
    _UIAssociationTable *_effectViewAssociationTable;
    _UILazyMapTable *_analyzerSettingsToAnalyzers;
    NSMapTable *_analyzersToEffects;
    NSMapTable *_analyzersToHistories;
    NSMapTable *_suspendedViewsToEffectSets;
    CMMotionManager *_motionManager;
    NSOperationQueue *_motionEventQueue;
    _Bool _hasReceivedAtLeastOneMotionEventSinceStarting;
    CDStruct_04e8b4cd _pendingDeviceMotionStruct;
    double _pendingDeviceMotionTimestamp;
    int _pendingDeviceMotionLock;
    CADisplayLink *_displayLink;
    _Bool _generatingUpdates;
    NSMutableSet *_suspendReasons;
    CDStruct_bf7dff04 _lastDeviceQuaternion;
    double _lastUpdateTimestamp;
    _Bool _slowUpdatesEnabled;
    _Bool _pendingSlowDown;
    long long _sensorStatus;
    _Bool _allAnalyzersAreCentered;
    _Bool _hasAppliedAtLeastOneUpdateSinceStarting;
    _Bool _isPendingReset;
    _UIMotionEffectEngineLogger *_motionLogger;
    int _thermalNotificationToken;
    int _screenDimmingNotificationToken;
    long long _targetInterfaceOrientation;
}

+ (_Bool)_motionEffectsSupported;
+ (_Bool)_motionEffectsEnabled;
@property(nonatomic, setter=_setTargetInterfaceOrientation:) long long _targetInterfaceOrientation; // @synthesize _targetInterfaceOrientation;
- (id)debugDescription;
- (void)_unapplyAllEffects;
- (_Bool)_motionEffect:(id)arg1 belongsToView:(id)arg2;
- (_Bool)_hasMotionEffectsForView:(id)arg1;
- (id)_motionEffectsForView:(id)arg1;
- (void)_unregisterAllMotionEffectsForView:(id)arg1;
- (void)endApplyingMotionEffect:(id)arg1 toView:(id)arg2;
- (void)_unregisterMotionEffect:(id)arg1 fromView:(id)arg2;
- (void)beginApplyingMotionEffect:(id)arg1 toView:(id)arg2;
@property(readonly, nonatomic) NSArray *suspensionReasons;
- (_Bool)_motionEffectsAreSuspendedForView:(id)arg1;
- (void)endSuspendingMotionEffectsForView:(id)arg1;
- (void)beginSuspendingMotionEffectsForView:(id)arg1;
- (_Bool)_isSuspended;
- (void)_updateDisplayLinkInterval;
- (void)_stopGeneratingUpdates;
- (void)_startGeneratingUpdates;
- (void)_startOrStopGeneratingUpdates;
- (_Bool)_shouldGenerateUpdates;
- (void)endSuspendingForReason:(id)arg1;
- (void)beginSuspendingForReason:(id)arg1;
- (void)_setMotionManagerSensorStatus:(long long)arg1;
- (void)_scheduleUpdateWithDeviceMotion:(const CDStruct_04e8b4cd *)arg1 timestamp:(double)arg2;
- (void)resetMotionAnalysis;
- (void)_applyEffectsFromAnalyzer:(id)arg1;
- (_Bool)_shouldSuspendApplicationForHysteresisGivenLastAppliedViewerOffset:(struct UIOffset)arg1 newViewerOffset:(struct UIOffset)arg2 wasSuspendingApplicationForHysteresis:(_Bool)arg3;
- (void)_handleLatestDeviceMotion;
- (void)_toggleSlowUpdates;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionEffectEngineClient : NSObject
{
    UIMotionEffect *_effect;
    UIView *_view;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithMotionEffect:(id)arg1 view:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionEffectEngineLogger : NSObject
{
    long long _motionLevelSamples[8];
    long long _sampleCount;
    long long _updateFreqency;
    double _lastUpdateTimeStamp;
}

- (void)_dumpToAggregated;
- (double)lastRecordedTimestamp;
- (void)recordMotionMagnitude:(double)arg1 atTimestamp:(double)arg2;
- (id)initWithFastUpdateInterval:(double)arg1 slowUpdateInterval:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIViewVisitor : NSObject
{
    _Bool _visitMaskViews;
    _Bool _tracksHierarchy;
    _Bool __currentlyVisitingHierarchy;
    unsigned long long _traversalDirection;
}

+ (void)_startTraversalOfVisitor:(id)arg1 withView:(id)arg2;
+ (void)_removeHierarchyTrackingVisitor:(id)arg1;
+ (void)_addHierarchyTrackingVisitor:(id)arg1;
@property(readonly, nonatomic) unsigned long long traversalDirection; // @synthesize traversalDirection=_traversalDirection;
@property(nonatomic) _Bool _currentlyVisitingHierarchy; // @synthesize _currentlyVisitingHierarchy=__currentlyVisitingHierarchy;
@property(nonatomic) _Bool tracksHierarchy; // @synthesize tracksHierarchy=_tracksHierarchy;
@property(nonatomic) _Bool visitMaskViews; // @synthesize visitMaskViews=_visitMaskViews;
- (_Bool)_prepareVisitor:(id)arg1 toVisitView:(id)arg2 changedSubview:(id)arg3 previousWindow:(id)arg4 previousSuperview:(id)arg5;
- (_Bool)_visitView:(id)arg1;
- (id)initWithTraversalDirection:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIMotionEffectsVisitor : _UIViewVisitor
{
    _Bool _subviewAddedToHierarchy;
    unsigned long long _countOfMotionEffectsInSubview;
}

- (_Bool)_prepareVisitor:(id)arg1 toVisitView:(id)arg2 changedSubview:(id)arg3 previousWindow:(id)arg4 previousSuperview:(id)arg5;
- (_Bool)_visitView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UINavigationBarAppearanceStorage : _UIBarAppearanceStorage
{
    NSDictionary *textAttributes;
    NSMutableDictionary *titleVerticalAdjustmentsForBarMetrics;
    UIImage *shadowImage;
    _Bool hidesShadow;
    long long barMetrics;
    UIImage *backIndicatorImage;
    UIImage *backIndicatorTransitionMaskImage;
    NSNumber *backIndicatorLeftMargin;
    _Bool reversesShadowOffset;
    _UIBarButtonItemAppearanceStorage *buttonAppearanceStorage;
    _Bool _deferShadowToSearchBar;
    long long defaultBarMetrics;
    long long activeBarMetrics;
    NSString *_backdropViewGroupName;
}

+ (long long)typicalBarPosition;
@property(retain, nonatomic) NSString *backdropViewGroupName; // @synthesize backdropViewGroupName=_backdropViewGroupName;
@property(nonatomic) _Bool deferShadowToSearchBar; // @synthesize deferShadowToSearchBar=_deferShadowToSearchBar;
@property(retain, nonatomic) NSNumber *backIndicatorLeftMargin; // @synthesize backIndicatorLeftMargin;
@property(retain, nonatomic) UIImage *backIndicatorTransitionMaskImage; // @synthesize backIndicatorTransitionMaskImage;
@property(retain, nonatomic) UIImage *backIndicatorImage; // @synthesize backIndicatorImage;
@property(nonatomic) long long activeBarMetrics; // @synthesize activeBarMetrics;
@property(nonatomic) long long defaultBarMetrics; // @synthesize defaultBarMetrics;
@property(retain, nonatomic) UIImage *shadowImage; // @synthesize shadowImage;
@property(nonatomic) _Bool reversesShadowOffset; // @synthesize reversesShadowOffset;
@property(copy, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes;
@property(nonatomic) _Bool hidesShadow; // @synthesize hidesShadow;
- (id)representativeImageForIdiom:(long long)arg1;
- (void)dealloc;
@property(readonly, nonatomic) _UIBarButtonItemAppearanceStorage *barButtonAppearanceStorage;
@property(readonly, nonatomic) _UIBarButtonItemAppearanceStorage *_barButtonAppearanceStorage;
- (double)titleVerticalAdjustmentForBarMetrics:(long long)arg1;
- (void)setTitleVerticalAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
@property(readonly, nonatomic) UIImage *cardBackgroundImage;
@property(readonly, nonatomic) UIImage *condensedBackgroundImage;
@property(readonly, nonatomic) UIImage *miniPromptBackgroundImage;
@property(readonly, nonatomic) UIImage *promptBackgroundImage;
@property(readonly, nonatomic) UIImage *miniBackgroundImage;
@property(readonly, nonatomic) UIImage *backgroundImage;

@end

__attribute__((visibility("hidden")))
@interface _UINavigationBarBackIndicatorView : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UINavigationBarBackground : _UIBarBackgroundImageView <_UIBackdropViewGraphicsQualityChangeDelegate>
{
    UIColor *_barTintColor;
    _UINavigationBarAppearanceStorage *_appearanceStorage;
    UIImageView *_shadowView;
    _UIBackdropView *_adaptiveBackdrop;
    struct {
        unsigned int barTranslucence:3;
        unsigned int barStyle:3;
        unsigned int backgroundImageNeedsUpdate:1;
        unsigned int isContainedInPopover:1;
        unsigned int barWantsAdaptiveBackdrop:1;
    } _navbarFlags;
}

@property(retain, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;
@property(retain, nonatomic) _UINavigationBarAppearanceStorage *appearanceStorage; // @synthesize appearanceStorage=_appearanceStorage;
- (void)dealloc;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_setFrame:(struct CGRect)arg1 forceUpdateBackgroundImage:(_Bool)arg2;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (id)_customShadowImageForSearchBar;
- (id)_adaptiveBackdrop;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;
- (void)didMoveToSuperview;
- (void)updateBackgroundImage;
- (id)_currentCustomBackground;
- (id)_currentCustomBackgroundDedicatedToBarMetrics:(long long *)arg1 barPosition:(long long *)arg2;
- (id)_currentCustomBackgroundRespectOversize_legacy:(_Bool *)arg1;
- (id)initWithFrame:(struct CGRect)arg1 barStyle:(long long)arg2 barTintColor:(id)arg3 appearance:(id)arg4 barTranslucence:(long long)arg5;
- (void)_setIsContainedInPopover:(_Bool)arg1;
@property(nonatomic) _Bool barWantsAdaptiveBackdrop;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
@property(nonatomic) long long barStyle;
@property(retain, nonatomic) UIColor *barTintColor;

@end

@interface _UINavigationControllerPalette : UIView
{
    struct {
        unsigned int isAttached:1;
        unsigned int attachmentIsChanging:1;
        unsigned int restartPaletteTransitionIfNecessary:1;
        unsigned int pinned:1;
        unsigned int pinningBarShadowIsHidden:1;
        unsigned int paletteShadowIsHidden:1;
    } _paletteFlags;
    _Bool __paletteOverridesPinningBar;
    _Bool _paletteIsAboveBar;
    _Bool _visibleWhenPinningBarIsHidden;
    _Bool __palettePinningBarHidden;
    UIView *__backgroundView;
    UINavigationController *_navController;
    unsigned long long _boundaryEdge;
    UIViewController *__unpinnedController;
    id __pinningBar;
    NSArray *__constraints;
    NSArray *__backgroundConstraints;
    struct CGSize __size;
    struct UIEdgeInsets _preferredContentInsets;
}

@property(nonatomic, getter=_isPalettePinningBarHidden, setter=_setPalettePinningBarHidden:) _Bool _palettePinningBarHidden; // @synthesize _palettePinningBarHidden=__palettePinningBarHidden;
@property(retain, nonatomic, setter=_setBackgroundConstraints:) NSArray *_backgroundConstraints; // @synthesize _backgroundConstraints=__backgroundConstraints;
@property(nonatomic, setter=_setSize:) struct CGSize _size; // @synthesize _size=__size;
@property(retain, nonatomic, setter=_setConstraints:) NSArray *_constraints; // @synthesize _constraints=__constraints;
@property(nonatomic, setter=_setPinningBar:) id _pinningBar; // @synthesize _pinningBar=__pinningBar;
@property(nonatomic) UIViewController *_unpinnedController; // @synthesize _unpinnedController=__unpinnedController;
@property(nonatomic) struct UIEdgeInsets preferredContentInsets; // @synthesize preferredContentInsets=_preferredContentInsets;
@property(nonatomic, getter=isVisibleWhenPinningBarIsHidden) _Bool visibleWhenPinningBarIsHidden; // @synthesize visibleWhenPinningBarIsHidden=_visibleWhenPinningBarIsHidden;
@property(nonatomic) _Bool paletteIsAboveBar; // @synthesize paletteIsAboveBar=_paletteIsAboveBar;
@property(readonly, nonatomic) unsigned long long boundaryEdge; // @synthesize boundaryEdge=_boundaryEdge;
@property(readonly, nonatomic) UINavigationController *navController; // @synthesize navController=_navController;
@property(nonatomic, setter=_setPaletteOverridesPinningBar:) _Bool _paletteOverridesPinningBar; // @synthesize _paletteOverridesPinningBar=__paletteOverridesPinningBar;
@property(retain, nonatomic, setter=_setBackgroundView:) UIView *_backgroundView; // @synthesize _backgroundView=__backgroundView;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (void)didMoveToSuperview;
- (void)_setupBackgroundViewIfNecessary;
- (void)_resetHeightConstraintConstant;
- (void)_setLeftConstraintConstant:(double)arg1;
- (void)_setTopConstraintConstant:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1 isAnimating:(_Bool)arg2;
- (void)_resetConstraintConstants:(double)arg1;
- (void)_enableConstraints;
- (void)_disableConstraints;
- (void)_configurePaletteConstraintsForBoundary;
- (void)_configureConstraintsForBackground:(id)arg1;
- (_Bool)paletteIsHidden;
- (_Bool)isAttached;
@property(nonatomic, getter=isPinned) _Bool pinned;
- (void)_setAttached:(_Bool)arg1 didComplete:(_Bool)arg2;
@property(nonatomic) _Bool paletteShadowIsHidden;
- (void)_updateBackgroundView;
@property(nonatomic) _Bool pinningBarShadowIsHidden;
@property(nonatomic, setter=_setRestartPaletteTransitionIfNecessary:) _Bool _restartPaletteTransitionIfNecessary;
@property(readonly, nonatomic, getter=_attachmentIsChanging) _Bool _attachmentIsChanging;
- (void)_setAttachmentIsChanging:(_Bool)arg1;
- (void)dealloc;
- (id)_initWithNavigationController:(id)arg1 forEdge:(unsigned long long)arg2;

@end

@interface _UINavigationInteractiveTransitionBase : UIPercentDrivenInteractiveTransition <UIGestureRecognizerDelegate>
{
    UIView *_gestureRecognizerView;
    UIPanGestureRecognizer *_gestureRecognizer;
    long long __interactionState;
    _Bool __transitionWasStopped;
    _Bool __stoppedTransitionWasCancelled;
    UIViewController *__parent;
    _Bool __useAugmentedShouldPopDecisionProcedure;
    _Bool __completesTransitionOnEnd;
    CADisplayLink *_displayLink;
    double _timestamps[3];
    double _velocities[3];
    double _accelerations[3];
    _Bool _shouldReverseTranslation;
    _Bool _springAnimationIsPending;
    _Bool _inSpringAnimation;
    _UINavigationParallaxTransition *_animationController;
    id <_UINavigationInteractiveTransitionBaseDelegate> _delegate;
    unsigned long long _sampleCount;
    double _totalDistance;
    double _skipTimeStamp;
    double _previousTimeStamp;
    double _previousDisplacement;
    double _previousVelocity;
    double _previousAcceleration;
    double _averageVelocity;
    double _averageAcceleration;
}

@property(nonatomic) double averageAcceleration; // @synthesize averageAcceleration=_averageAcceleration;
@property(nonatomic) double averageVelocity; // @synthesize averageVelocity=_averageVelocity;
@property(nonatomic) double previousAcceleration; // @synthesize previousAcceleration=_previousAcceleration;
@property(nonatomic) double previousVelocity; // @synthesize previousVelocity=_previousVelocity;
@property(nonatomic) double previousDisplacement; // @synthesize previousDisplacement=_previousDisplacement;
@property(nonatomic) double previousTimeStamp; // @synthesize previousTimeStamp=_previousTimeStamp;
@property(nonatomic) double skipTimeStamp; // @synthesize skipTimeStamp=_skipTimeStamp;
@property(nonatomic) double totalDistance; // @synthesize totalDistance=_totalDistance;
@property(nonatomic) unsigned long long sampleCount; // @synthesize sampleCount=_sampleCount;
@property(nonatomic) _Bool inSpringAnimation; // @synthesize inSpringAnimation=_inSpringAnimation;
@property(nonatomic) _Bool springAnimationIsPending; // @synthesize springAnimationIsPending=_springAnimationIsPending;
@property(nonatomic) id <_UINavigationInteractiveTransitionBaseDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, setter=_setCompletesTransitionOnEnd:) _Bool _completesTransitionOnEnd; // @synthesize _completesTransitionOnEnd=__completesTransitionOnEnd;
@property(nonatomic, setter=_setUseAugmentedShouldPopDecisionProcedure:) _Bool _useAugmentedShouldPopDecisionProcedure; // @synthesize _useAugmentedShouldPopDecisionProcedure=__useAugmentedShouldPopDecisionProcedure;
@property(nonatomic, setter=_setParent:) UIViewController *_parent; // @synthesize _parent=__parent;
@property(nonatomic, setter=_setStoppedTransitionWasCancelled:) _Bool _stoppedTransitionWasCancelled; // @synthesize _stoppedTransitionWasCancelled=__stoppedTransitionWasCancelled;
@property(nonatomic, setter=_setTransitionWasStopped:) _Bool _transitionWasStopped; // @synthesize _transitionWasStopped=__transitionWasStopped;
@property(nonatomic, setter=_setInteractionState:) long long _interactionState; // @synthesize _interactionState=__interactionState;
@property(retain, nonatomic) _UINavigationParallaxTransition *animationController; // @synthesize animationController=_animationController;
@property(nonatomic) _Bool shouldReverseTranslation; // @synthesize shouldReverseTranslation=_shouldReverseTranslation;
@property(nonatomic) UIPanGestureRecognizer *gestureRecognizer; // @synthesize gestureRecognizer=_gestureRecognizer;
- (void)startInteractiveTransition:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleNavigationTransition:(id)arg1;
- (void)setNotInteractiveTransition;
- (void)startInteractiveTransition;
- (_Bool)popGesture:(id)arg1 withRemainingDuration:(double)arg2 shouldPopWithVelocity:(double *)arg3;
- (void)_updateStatistics:(id)arg1 firstSample:(_Bool)arg2 finalSample:(_Bool)arg3;
- (_Bool)_gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (void)_completeStoppedInteractiveTransition;
- (void)_stopInteractiveTransition;
- (void)finishInteractiveTransition;
- (void)cancelInteractiveTransition;
@property(readonly, nonatomic, getter=_navigationGesture) UIGestureRecognizer *navigationGesture;
- (void)_resetInteractionController;
- (void)dealloc;
- (id)initWithGestureRecognizerView:(id)arg1 animator:(id)arg2 delegate:(id)arg3;
- (id)gestureRecognizerView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UINavigationInteractiveTransition : _UINavigationInteractiveTransitionBase
{
    UIScreenEdgePanGestureRecognizer *_edgePanRecognizer;
}

@property(readonly, nonatomic) UIScreenEdgePanGestureRecognizer *screenEdgePanGestureRecognizer;
- (void)setNotInteractiveTransition;
- (void)startInteractiveTransition;
- (id)gestureRecognizerView;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)dealloc;
- (void)_configureNavigationGesture;
- (id)initWithViewController:(id)arg1 animator:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UINavigationPaletteBackground : UIView <_UIBackdropViewGraphicsQualityChangeDelegate>
{
    UIColor *_barTintColor;
    UIImageView *_shadowView;
    _UINavigationControllerPalette *_palette;
    UINavigationBar *_bar;
    _UIBackdropView *_adaptiveBackdrop;
    struct {
        unsigned int barTranslucence:3;
        unsigned int barStyle:3;
        unsigned int paletteWantsAdaptiveBackdrop:1;
    } _navbarFlags;
}

@property(retain, nonatomic, getter=_shadowView, setter=_setShadowView:) UIView *shadowView; // @synthesize shadowView=_shadowView;
- (void)didMoveToSuperview;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;
- (void)updateBackgroundView;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_setFrame:(struct CGRect)arg1 forceUpdateBackgroundImage:(_Bool)arg2;
@property(nonatomic) _Bool paletteWantsAdaptiveBackdrop;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
@property(nonatomic) long long barStyle;
@property(retain, nonatomic) UIColor *barTintColor;
- (void)dealloc;
- (void)_syncWithBarStyles;
- (id)initWithNavigationBar:(id)arg1 forPalette:(id)arg2;

@end

@interface _UINavigationParallaxTransition : NSObject <_UIBasicAnimationFactory, UIViewControllerAnimatedTransitioningEx>
{
    _Bool _interactionAborted;
    _Bool _clipUnderlapWhileTransitioning;
    long long _operation;
    id <UIViewControllerContextTransitioning> _transitionContext;
    _UINavigationInteractiveTransitionBase *_interactionController;
    _UIParallaxDimmingView *_borderDimmingView;
    _UIParallaxDimmingView *_contentDimmingView;
    UIView *_containerFromView;
    UIView *_containerToView;
    UIView *_clipUnderView;
    long long _transitionStyle;
    double _transitionGap;
}

@property(nonatomic) double transitionGap; // @synthesize transitionGap=_transitionGap;
@property(nonatomic) long long transitionStyle; // @synthesize transitionStyle=_transitionStyle;
@property(nonatomic) _Bool clipUnderlapWhileTransitioning; // @synthesize clipUnderlapWhileTransitioning=_clipUnderlapWhileTransitioning;
@property(retain, nonatomic) UIView *clipUnderView; // @synthesize clipUnderView=_clipUnderView;
@property(retain, nonatomic) UIView *containerToView; // @synthesize containerToView=_containerToView;
@property(retain, nonatomic) UIView *containerFromView; // @synthesize containerFromView=_containerFromView;
@property(retain, nonatomic) _UIParallaxDimmingView *contentDimmingView; // @synthesize contentDimmingView=_contentDimmingView;
@property(retain, nonatomic) _UIParallaxDimmingView *borderDimmingView; // @synthesize borderDimmingView=_borderDimmingView;
@property(nonatomic) _UINavigationInteractiveTransitionBase *interactionController; // @synthesize interactionController=_interactionController;
@property(nonatomic) _Bool interactionAborted; // @synthesize interactionAborted=_interactionAborted;
@property(retain, nonatomic) id <UIViewControllerContextTransitioning> transitionContext; // @synthesize transitionContext=_transitionContext;
@property(nonatomic) long long operation; // @synthesize operation=_operation;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (void)completeKeyboard:(id)arg1;
- (void)animateKeyboard:(id)arg1;
- (void)prepareToAnimateKeyboard:(id)arg1;
- (void)resizeShadow:(id)arg1;
- (id)shadowContainerForKeyboardTransition:(id)arg1;
- (void)animateTransition:(id)arg1;
- (double)parallaxOffset;
- (double)gapBetweenViews;
- (void)animationEnded:(_Bool)arg1;
- (double)transitionDuration:(id)arg1;
- (void)dealloc;
- (id)resizedFromContainerView;
- (id)resizedToContainerView;
- (id)initWithCurrentOperation:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UINoDefinitionViewController : UIViewController
{
}

- (void)viewDidLoad;

@end

__attribute__((visibility("hidden")))
@interface _UIObjectIdentifierPathProxy : NSObject
{
    NSString *_identifierPath;
}

- (void)dealloc;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIObjectPerScreen : NSObject
{
}

+ (void)removeObject:(id)arg1;
+ (void)removeObjectsOfClass:(Class)arg1;
+ (id)objectOfClass:(Class)arg1 forScreen:(id)arg2 withOptions:(id)arg3 createIfNecessary:(_Bool)arg4;
+ (void)screenDisconnected:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIOldSliderAnimation : UIAnimation
{
    float _startValue;
    float _endValue;
    _Bool _sendAction;
}

- (void)setProgress:(float)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIOnePartImageView : UIView
{
    UIImage *_image;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIOpenInNavigationController : UINavigationController
{
}

- (id)initWithDocumentInteractionController:(id)arg1;
- (id)initWithRootViewController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIOpenInTableViewController : UITableViewController
{
    UIDocumentInteractionController *_documentInteractionController;
}

- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)initWithDocumentInteractionController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIOpenWithAppActivity : UIActivity
{
    LSApplicationProxy *_appProxy;
    _Bool _defaultApp;
    UIDocumentInteractionController *_documentInteractionController;
    NSString *_activityType;
}

+ (long long)activityCategory;
@property(nonatomic, getter=isDefaultApp) _Bool defaultApp; // @synthesize defaultApp=_defaultApp;
- (void)performActivity;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_activitySettingsImage;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1 documentInteractionController:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIOverCurrentContextPresentationController : _UICurrentContextPresentationController
{
}

- (_Bool)shouldRemovePresentersView;

@end

__attribute__((visibility("hidden")))
@interface _UIOverFullscreenPresentationController : _UIFullscreenPresentationController
{
}

- (_Bool)_shouldChangeStatusBarViewController;
- (_Bool)shouldRemovePresentersView;

@end

@interface _UIPageCurl : NSObject
{
    long long _spineLocation;
    struct CGRect _contentRect;
    UIView *_contentView;
    _UIPageCurlState *_manualPageCurlState;
    NSMutableArray *_pendingStateQueue;
    NSMutableArray *_activeStateQueue;
    NSMutableSet *_completedStates;
    double _delayBetweenSuccessiveAnimations;
    double _pageDiagonalAngle;
    double _pageDiagonalLength;
    double _manualPageCurlMaxDAngle;
}

@property(nonatomic, setter=_setManualPageCurlMaxDAngle:) double _manualPageCurlMaxDAngle; // @synthesize _manualPageCurlMaxDAngle;
@property(readonly, nonatomic) long long _spineLocation; // @synthesize _spineLocation;
- (void)_pageCurlAnimationDidStop:(id)arg1 withState:(id)arg2;
- (void)_abortManualCurlAtLocation:(struct CGPoint)arg1 withSuggestedVelocity:(double)arg2;
- (void)_completeManualCurlAtLocation:(struct CGPoint)arg1 withSuggestedVelocity:(double)arg2;
- (void)_endManualCurlAtLocation:(struct CGPoint)arg1 withSuggestedVelocity:(double)arg2 shouldComplete:(_Bool)arg3;
- (double)_durationForManualCurlEndAnimationWithSuggestedVelocity:(double)arg1 shouldComplete:(_Bool)arg2;
- (void)_updateManualCurlToLocation:(struct CGPoint)arg1;
- (void)_beginCurlWithState:(id)arg1 previousState:(id)arg2;
- (void)_cancelAllActiveTransitionsAndAbandonCallbacks:(_Bool)arg1;
- (void)_cancelTransitionWithState:(id)arg1 invalidatingPageCurl:(_Bool)arg2;
- (void)_forceCleanupState:(id)arg1 finished:(_Bool)arg2 completed:(_Bool)arg3;
- (void)_cleanupState:(id)arg1;
- (void)_enqueueCurlOfType:(long long)arg1 fromLocation:(struct CGPoint)arg2 inDirection:(long long)arg3 withView:(id)arg4 revealingView:(id)arg5 completion:(CDUnknownBlockType)arg6 finally:(CDUnknownBlockType)arg7;
- (_Bool)_isPreviousCurlCompatibleWithCurlOfType:(long long)arg1 inDirection:(long long)arg2;
- (long long)_validatedPageCurlTypeForPageCurlType:(long long)arg1 inDirection:(long long)arg2;
- (struct CGPoint)_referenceLocationForInitialLocation:(struct CGPoint)arg1 direction:(long long)arg2;
- (void)_updateCurlFromState:(id)arg1 withTime:(double)arg2 radius:(double)arg3 angle:(double)arg4 addingAnimations:(id)arg5;
- (id)_animationKeyPaths;
- (void)_updatedInputsFromState:(id)arg1 forLocation:(struct CGPoint)arg2 time:(double *)arg3 radius:(double *)arg4 angle:(double *)arg5;
- (double)_distanceToTravelWithCurrentSpineLocation;
- (double)_inputTimeForProgress:(double)arg1 distanceToTravel:(double)arg2 radius:(double *)arg3 minRadius:(double)arg4 angle:(double)arg5 dAngle:(double)arg6 touchLocation:(struct CGPoint)arg7 state:(id)arg8;
- (void)_ensureCurlFilterOnLayer:(id)arg1;
- (void)_fromValue:(double *)arg1 toValue:(double *)arg2 fromState:(id)arg3 forAnimationWithKeyPath:(id)arg4;
- (_Bool)_populateFromValue:(double *)arg1 toValue:(double *)arg2 fromState:(id)arg3 forAnimationWithKeyPath:(id)arg4;
- (double)_baseAngleOffsetForState:(id)arg1;
- (id)_newAnimationForState:(id)arg1 withKeyPath:(id)arg2 duration:(double)arg3 fromValue:(id)arg4;
- (id)_newCurlFilter;
- (struct CGRect)_pageViewFrame:(_Bool)arg1;
- (void)_setContentRect:(struct CGRect)arg1;
@property(readonly, nonatomic) NSNumber *_wrappedManualPageCurlDirection;
- (_Bool)_areAnimationsInFlightOrPending;
@property(readonly, nonatomic, getter=_isManualPageCurlInProgressAndUncommitted) _Bool _manualPageCurlInProgressAndUncommitted;
- (void)dealloc;
- (id)initWithSpineLocation:(long long)arg1 andContentRect:(struct CGRect)arg2 inContentView:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UITransitionState : NSObject
{
    long long _transitionDirection;
    CDUnknownBlockType _completion;
    NSDate *_beginDate;
}

@property(readonly, nonatomic) NSDate *beginDate; // @synthesize beginDate=_beginDate;
@property(readonly, nonatomic) long long transitionDirection; // @synthesize transitionDirection=_transitionDirection;
- (id)description;
- (_Bool)isCompatibleWithTransitionInDirection:(long long)arg1;
@property(readonly, nonatomic) long long effectiveTransitionDirection;
- (void)cleanupWithFinishedState:(_Bool)arg1 completedState:(_Bool)arg2;
- (void)markBeginDate;
@property(readonly, nonatomic, getter=isActive) _Bool active;
- (void)dealloc;
- (id)initWithTransitionDirection:(long long)arg1 completion:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIPageCurlState : _UITransitionState
{
    _UIPageCurl *_pageCurl;
    long long _curlType;
    struct CGPoint _initialLocation;
    struct CGPoint _referenceLocation;
    UIView *_frontPageView;
    UIView *_backPageView;
    UIView *_frontView;
    UIView *_backView;
    long long _completionCount;
    long long _curlState;
    _Bool _finished;
    _Bool _willComplete;
    CDUnknownBlockType _finally;
}

@property(readonly, nonatomic) long long curlState; // @synthesize curlState=_curlState;
@property(readonly, nonatomic) UIView *backView; // @synthesize backView=_backView;
@property(readonly, nonatomic) UIView *frontView; // @synthesize frontView=_frontView;
@property(readonly, nonatomic) struct CGPoint referenceLocation; // @synthesize referenceLocation=_referenceLocation;
@property(readonly, nonatomic) struct CGPoint initialLocation; // @synthesize initialLocation=_initialLocation;
@property(readonly, nonatomic) long long curlType; // @synthesize curlType=_curlType;
@property(readonly, nonatomic) _UIPageCurl *pageCurl; // @synthesize pageCurl=_pageCurl;
- (_Bool)isCompatibleWithCurlOfType:(long long)arg1 inDirection:(long long)arg2;
- (long long)_effectiveTransitionDirection;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)cleanup;
- (void)cleanupWithFinishedState:(_Bool)arg1 completedState:(_Bool)arg2;
- (void)finally;
- (void)incrementCompletionCount;
@property(readonly, nonatomic, getter=hasPendingAnimations) _Bool pendingAnimations;
- (void)setCurlState:(long long)arg1 willComplete:(_Bool)arg2;
- (void)addBackPageContent;
- (void)addFrontPageContent;
@property(readonly, nonatomic) UIView *backPageView;
@property(readonly, nonatomic) UIView *frontPageView;
- (struct CGRect)_pageViewFrame;
- (void)invalidatePageCurl;
- (void)dealloc;
- (id)initWithPageCurl:(id)arg1 andCurlType:(long long)arg2 fromLocation:(struct CGPoint)arg3 withReferenceLocation:(struct CGPoint)arg4 inDirection:(long long)arg5 withView:(id)arg6 revealingView:(id)arg7 completion:(CDUnknownBlockType)arg8 finally:(CDUnknownBlockType)arg9;

@end

@interface _UIPageSheetPresentationController : _UIFormSheetPresentationController
{
}

- (_Bool)_presentationPotentiallyUnderlapsStatusBar;
- (_Bool)shouldSubscribeToKeyboardNotifications;
- (_Bool)_shouldHideBottomCorner;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (unsigned long long)dropShadowAutoresizingMask;

@end

__attribute__((visibility("hidden")))
@interface _UIPageViewControllerContentView : UIView
{
    UIPageViewController *_pageViewController;
    _UIQueuingScrollView *_scrollView;
    UIPageControl *_pageControl;
}

@property(readonly, nonatomic) UIPageControl *pageControl; // @synthesize pageControl=_pageControl;
@property(readonly, nonatomic) _UIQueuingScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)layoutSubviews;
- (void)_setupPageControl:(id)arg1;
- (struct CGRect)_scrollViewFrame;
- (double)_pageSpacing;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)invalidatePageViewController;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andPageViewController:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIParallaxDimmingView : UIView
{
    UIImageView *leftEdgeFade;
    _Bool _backgroundIsDimmed;
    UIColor *_dimmingColor;
    UIView *_addingSubview;
}

+ (id)newDimmingViewWrappingView:(id)arg1 withLeftBorder:(double)arg2;
+ (id)newDimmingViewWithFrame:(struct CGRect)arg1;
@property(retain, nonatomic) UIView *addingSubview; // @synthesize addingSubview=_addingSubview;
@property(nonatomic) _Bool backgroundIsDimmed; // @synthesize backgroundIsDimmed=_backgroundIsDimmed;
@property(retain, nonatomic) UIColor *dimmingColor; // @synthesize dimmingColor=_dimmingColor;
- (void)crossFade;
- (void)dealloc;
- (id)_basicAnimationWithKeyPath:(id)arg1;
- (void)didMoveToWindow;
- (id)initViewWrappingView:(id)arg1 withLeftBorder:(double)arg2;
- (id)defaultBorderColor;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UIParallaxMotionEffect : UIMotionEffect
{
    UIMotionEffectGroup *_group;
    struct UIOffset _slideMagnitude;
    UIInterpolatingMotionEffect *_horizontalSlideEffect;
    UIInterpolatingMotionEffect *_verticalSlideEffect;
    _UITiltMotionEffect *_tiltEffect;
}

@property(nonatomic) struct UIOffset slideMagnitude; // @synthesize slideMagnitude=_slideMagnitude;
@property(nonatomic) double rotatingSphereRadius;
@property(nonatomic) double maximumVerticalTiltAngle;
@property(nonatomic) double maximumHorizontalTiltAngle;
- (void)_activateTiltEffectIfNecessary;
- (id)keyPathsAndRelativeValuesForViewerOffset:(struct UIOffset)arg1;
- (id)_keyPathsAndRelativeValuesForPose:(id)arg1;
- (void)_updateGroupMotionEffect;
@property(nonatomic) double verticalSlideAccelerationBoostFactor;
@property(nonatomic) double horizontalSlideAccelerationBoostFactor;
- (void)_updateSlideEffectsWithCurrentSlideMagnitude;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIPathLazyImageAsset : UIImageAsset
{
    _Bool _imagesHaveBeenLoaded;
    _Bool _haveCGCacheImages;
    NSArray *_imagePaths;
}

@property(nonatomic) _Bool haveCGCacheImages; // @synthesize haveCGCacheImages=_haveCGCacheImages;
@property(copy, nonatomic) NSArray *imagePaths; // @synthesize imagePaths=_imagePaths;
- (void)_clearResolvedImageResources;
- (id)imageWithTraitCollection:(id)arg1;
- (void)dealloc;

@end

@interface _UIPhysicalButton : NSObject <_UIResponderForwardable>
{
    NSMutableArray *_gestureRecognizers;
    NSMutableArray *_forwardingRecord;
    _Bool _abandonForwardingRecord;
    double _timestamp;
    long long _phase;
    long long _type;
    UIWindow *_window;
    UIResponder *_responder;
}

@property(retain, nonatomic) UIResponder *responder; // @synthesize responder=_responder;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(nonatomic) long long phase; // @synthesize phase=_phase;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic, setter=_setForwardablePhase:) long long _forwardablePhase;
@property(retain, nonatomic, setter=_setResponder:) UIResponder *_responder;
- (SEL)_responderSelectorForPhase:(long long)arg1;
- (id)_forwardingRecord;
- (void)_abandonForwardingRecord;
- (_Bool)_isAbandoningForwardingRecord;
- (id)_mutableForwardingRecord;
- (_Bool)_wantsForwardingFromResponder:(id)arg1 toNextResponder:(id)arg2 withEvent:(id)arg3;
- (void)_removeGestureRecognizer:(id)arg1;
@property(copy, nonatomic) NSArray *gestureRecognizers;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIPickerViewSelectionBar : UIView
{
    UIPickerView *_pickerView;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setPickerView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIPickerViewTestParameters : NSObject
{
    NSString *_testName;
    long long _remainingIterations;
    long long _rowsToScroll;
    long long _componentToScroll;
}

@end

__attribute__((visibility("hidden")))
@interface _UIPickerViewTopFrame : UIView
{
    UIImage *_leftImage;
    UIImage *_middleImage;
    UIImage *_rightImage;
    double _inset;
    double _shift;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setShift:(double)arg1;
- (void)setInset:(double)arg1;
- (void)dealloc;
- (void)setLeftImage:(id)arg1 middleImage:(id)arg2 rightImage:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIPickerWheelView : UIView
{
    UIPickerView *_pickerView;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setPickerView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIPlacardButton : UIButton
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverAnimationController : NSObject <UIViewControllerAnimatedTransitioning>
{
}

- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverLayoutInfo : NSObject <NSCopying>
{
    struct UIEdgeInsets _contentInset;
    double _arrowHeight;
    struct CGSize _preferredContentSize;
    unsigned long long _preferredArrowDirections;
    struct CGRect _containingFrame;
    struct UIEdgeInsets _containingFrameInsets;
    struct CGRect _targetRect;
    _Bool _constrainToTargetRect;
    struct CGRect _frame;
    double _offset;
    unsigned long long _arrowDirection;
    _Bool _preferLandscapeOrientations;
    _Bool _updatesEnabled;
    NSMutableArray *_candidates;
}

+ (id)_observationKeys;
@property(nonatomic) _Bool preferLandscapeOrientations; // @synthesize preferLandscapeOrientations=_preferLandscapeOrientations;
@property(nonatomic, getter=_updatesEnabled, setter=_setUpdatesEnabled:) _Bool updatesEnabled; // @synthesize updatesEnabled=_updatesEnabled;
@property(readonly, nonatomic) unsigned long long arrowDirection; // @synthesize arrowDirection=_arrowDirection;
@property(readonly, nonatomic) double offset; // @synthesize offset=_offset;
@property(readonly, nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) _Bool constrainToTargetRect; // @synthesize constrainToTargetRect=_constrainToTargetRect;
@property(nonatomic) struct CGRect targetRect; // @synthesize targetRect=_targetRect;
@property(nonatomic) struct UIEdgeInsets containingFrameInsets; // @synthesize containingFrameInsets=_containingFrameInsets;
@property(nonatomic) struct CGRect containingFrame; // @synthesize containingFrame=_containingFrame;
@property(nonatomic) unsigned long long preferredArrowDirections; // @synthesize preferredArrowDirections=_preferredArrowDirections;
@property(nonatomic) struct CGSize preferredContentSize; // @synthesize preferredContentSize=_preferredContentSize;
@property(nonatomic) double arrowHeight; // @synthesize arrowHeight=_arrowHeight;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateOutputs;
- (struct CGSize)_popoverViewSizeForContentSize:(struct CGSize)arg1 arrowDirection:(unsigned long long)arg2;
- (id)candidates;
- (void)setProperties:(CDUnknownBlockType)arg1;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverSlidingChromeView : UIPopoverBackgroundView
{
}

+ (struct UIEdgeInsets)contentViewInsets;
+ (double)cornerRadius;
+ (double)arrowBase;
+ (double)arrowHeight;
- (void)layoutSubviews;
- (void)setArrowDirection:(unsigned long long)arg1;
- (unsigned long long)arrowDirection;
- (void)setArrowOffset:(double)arg1;
- (double)arrowOffset;
- (id)_shadowPathForRect:(struct CGRect)arg1 arrowDirection:(unsigned long long)arg2;
- (struct CGSize)_shadowOffset;
- (double)_shadowRadius;
- (double)_shadowOpacity;
- (struct UIEdgeInsets)_shadowInsets;
- (struct UIEdgeInsets)_contentViewInsets;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverShadowlessSlidingChromeView : _UIPopoverSlidingChromeView
{
}

+ (double)cornerRadius;
- (id)_shadowPathForRect:(struct CGRect)arg1 arrowDirection:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverView : UIView
{
    UIView *_contentView;
    UIPopoverBackgroundView *_backgroundView;
    Class _backgroundViewClass;
    UIImageView *_toolbarShine;
    _Bool _showsBackgroundComponentHighlights;
    _Bool _showsBackgroundViewHighlight;
    _Bool _showsContentViewHighlight;
    UIActionSheet *_presentedActionSheet;
    UIPopoverController *_popoverController;
    double __dimmingViewTopEdgeInset;
}

+ (id)popoverViewContainingView:(id)arg1;
@property(nonatomic, setter=_setDimmingViewTopEdgeInset:) double _dimmingViewTopEdgeInset; // @synthesize _dimmingViewTopEdgeInset=__dimmingViewTopEdgeInset;
@property(nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
@property(retain, nonatomic) UIActionSheet *presentedActionSheet; // @synthesize presentedActionSheet=_presentedActionSheet;
@property(nonatomic) _Bool showsContentViewHighlight; // @synthesize showsContentViewHighlight=_showsContentViewHighlight;
@property(nonatomic) _Bool showsBackgroundViewHighlight; // @synthesize showsBackgroundViewHighlight=_showsBackgroundViewHighlight;
@property(nonatomic) _Bool showsBackgroundComponentHighlights; // @synthesize showsBackgroundComponentHighlights=_showsBackgroundComponentHighlights;
- (void)_presentationInPopoverDidEndForViewController:(id)arg1;
- (void)_presentationInPopoverWillBeginForViewController:(id)arg1;
- (void)_presentationInPopoverWillEndForViewController:(id)arg1;
- (void)_presentationInPopoverDidBeginForViewController:(id)arg1;
- (_Bool)toolbarIsVisible;
- (id)viewController;
- (void)_setIgnoreTapsInDimmingView:(_Bool)arg1;
- (_Bool)_isIgnoringTapsInDimmingView;
- (id)_viewForModalPresentationOfViewController:(id)arg1;
- (void)_hideArrow;
- (void)_showArrow;
- (void)_setCornerRadius:(double)arg1;
- (void)_setFrame:(struct CGRect)arg1 arrowOffset:(double)arg2;
- (void)setUseToolbarShine:(_Bool)arg1;
@property(copy, nonatomic) UIColor *popoverBackgroundColor;
@property(nonatomic) long long backgroundStyle;
@property(nonatomic) unsigned long long arrowDirection;
@property(nonatomic) double arrowOffset;
- (_Bool)_allowsCustomizationOfContent;
- (struct CGRect)_snapshotBounds;
- (id)toolbarShine;
- (id)standardChromeView;
- (id)backgroundView;
- (id)contentView;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_needsLayoutOnAnimatedFrameChangeForNewFrame:(struct CGRect)arg1;
- (int)_style;
- (void)layoutSubviews;
- (void)_layoutToolbarShine;
- (void)willMoveToWindow:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 backgroundViewClass:(Class)arg2 embeddedInView:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1 backgroundViewClass:(Class)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverViewArtworkLoader : NSObject
{
    long long _backgroundStyle;
    NSString *_backgroundSelector;
}

+ (id)backgroundSelectorForBackgroundStyle:(long long)arg1;
- (id)shortBottomArrowRightEndCapView;
- (id)shortBottomArrowLeftEndCapView;
- (id)shortBottomArrowPinnedView;
- (id)shortBottomArrowView;
- (id)shortRightArrowView;
- (id)shortTopArrowRightEndCapView;
- (id)shortTopArrowLeftEndCapView;
- (id)shortTopArrowPinnedView;
- (id)shortTopArrowView;
- (id)bottomArrowRightEndCapView;
- (id)bottomArrowLeftEndCapView;
- (id)bottomArrowPinnedView;
- (id)bottomArrowView;
- (id)rightArrowBottomEndCapView;
- (id)rightArrowTopEndCapView;
- (id)rightArrowPinnedBottomView;
- (id)rightArrowPinnedTopView;
- (id)rightArrowView;
- (id)topArrowRightEndCapView;
- (id)topArrowLeftEndCapView;
- (id)topArrowPinnedView;
- (id)topArrowView;
- (double)shortArtRightArrowBase;
- (double)shortArtArrowTopGradientEnd;
- (double)shortArtNoArrowTopGradientEnd;
- (double)bottomEndCapHeight;
- (double)capCornerRadius;
- (double)noArrowTopGradientEnd;
- (double)arrowTopGradientEnd;
- (double)clampArrowBase;
- (double)sideArrowStart;
- (double)topArrowStart;
- (double)arrowBase;
- (double)arrowHeight;
- (id)viewWithContentsImage:(id)arg1 rect:(struct CGRect)arg2 center:(struct CGRect)arg3 antialiasingMask:(unsigned int)arg4 directionSelector:(id)arg5;
- (struct CGRect)contentsCenterForRect:(struct CGRect)arg1 inImageOfSize:(struct CGSize)arg2;
- (struct CGRect)contentRectForRect:(struct CGRect)arg1 inImageOfSize:(struct CGSize)arg2;
- (id)templateImageForDirection:(id)arg1 shortArtwork:(_Bool)arg2;
- (_Bool)modern;
- (void)dealloc;
- (id)initWithBackgroundStyle:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIPopoverViewBackgroundComponentView : UIView
{
    NSString *directionSelector;
}

@property(retain, nonatomic) NSString *directionSelector; // @synthesize directionSelector;
- (id)_generateBackdropMaskViewForFlag:(long long)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIPressedIndicatorView : UIView
{
    UIImage *_image;
    CDStruct_fa4dcde7 _slices;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 withImageName:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIPreviewItemProxy : NSObject
{
    NSURL *_URL;
    NSURL *_previewURLOverride;
    NSString *_name;
    NSURL *_URLsToDeleteOnDealloc;
    NSString *_previewItemContentType;
    NSURL *_URLToDeleteOnDealloc;
}

@property(copy, nonatomic) NSURL *URLToDeleteOnDealloc; // @synthesize URLToDeleteOnDealloc=_URLToDeleteOnDealloc;
@property(copy, nonatomic) NSString *previewItemTitle; // @synthesize previewItemTitle=_name;
@property(copy, nonatomic) NSURL *previewItemURLOverride; // @synthesize previewItemURLOverride=_previewURLOverride;
@property(copy, nonatomic) NSURL *previewItemURL; // @synthesize previewItemURL=_URL;
- (id)previewItemURLForDisplay;
- (id)_primitive_previewItemContentType;
@property(copy, nonatomic) NSString *previewItemContentType;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIPropertyBasedAppearance : _UIAppearance
{
    NSDictionary *_propertiesToMatch;
}

+ (id)_appearanceMatchingProperties:(id)arg1 forClass:(Class)arg2 withContainerList:(id)arg3;
+ (id)_appearanceObjectKeyForProperties:(id)arg1;
@property(retain, nonatomic, setter=_setPropertiesToMatch:) NSDictionary *_propertiesToMatch; // @synthesize _propertiesToMatch;
- (_Bool)_isValidAppearanceForCustomizableObject:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UITargetedProxy : NSProxy
{
    id _target;
}

+ (id)proxyWithTarget:(id)arg1;
- (void)_setTarget:(id)arg1;
- (id)_target;
- (id)description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIQueueingProxy : _UITargetedProxy
{
    int _lock;
    unsigned long long _suspensionCount;
    NSMutableArray *_queuedInvocations;
    CDUnknownBlockType _shouldSuspendInvocationBlock;
}

+ (id)proxyWithTarget:(id)arg1;
+ (id)proxyWithTarget:(id)arg1 shouldSuspendInvocationBlock:(CDUnknownBlockType)arg2;
- (id)description;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)removeAllEnqueuedInvocations;
- (void)resume;
- (void)_dispatchSuspendedMessages;
- (void)suspend;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIQueueingServiceWebViewControllerProxy : NSObject
{
    NSMutableArray *_queuedInvocations;
    id _serviceViewControllerProxy;
    id <_UIQueueingServiceWebViewControllerProxyDelegate> _delegate;
}

@property(nonatomic) id <_UIQueueingServiceWebViewControllerProxyDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) id serviceViewControllerProxy; // @synthesize serviceViewControllerProxy=_serviceViewControllerProxy;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIQueuingScrollView : UIScrollView
{
    id <_UIQueuingScrollViewDelegate> _qDelegate;
    id <_UIQueuingScrollViewDataSource> _qDataSource;
    long long _navigationOrientation;
    NSArray *_views;
    NSArray *_wrapperViews;
    UIView *_pendingVisibleView;
    double _pageSpacing;
    NSMutableArray *_viewStateQueue;
    NSMutableArray *_completionStateQueue;
    _Bool _manualScrollInProgress;
    struct {
        unsigned int delegateInterestedInPendingScrolls:1;
        unsigned int delegateInterestedInCommittedScrolls:1;
        unsigned int delegateInterestedInCompletedScrolls:1;
        unsigned int delegateInterestedInBailedOutScrolls:1;
        unsigned int delegateInterestedFinishedScrolling:1;
        unsigned int delegateCanVetoSubviewLayout:1;
        unsigned int dataSourceSuppliesBeforeView:1;
        unsigned int dataSourceSuppliesAfterView:1;
        unsigned int dataSourceInterestedInFlushedViews:1;
    } _delegateFlags;
    struct CGRect _disabledScrollingRegion;
}

@property(nonatomic) struct CGRect disabledScrollingRegion; // @synthesize disabledScrollingRegion=_disabledScrollingRegion;
@property(nonatomic) double pageSpacing; // @synthesize pageSpacing=_pageSpacing;
@property(nonatomic) id <_UIQueuingScrollViewDataSource> qDataSource; // @synthesize qDataSource=_qDataSource;
@property(nonatomic) id <_UIQueuingScrollViewDelegate> qDelegate; // @synthesize qDelegate=_qDelegate;
- (void)_didEndProgrammaticScroll;
- (void)_didEndManualScroll;
- (void)_didEndScroll:(_Bool)arg1;
- (void)_didEndDraggingManualScroll;
- (void)_didScrollWithAnimation:(_Bool)arg1 force:(_Bool)arg2;
- (_Bool)_isScrollInProgress:(_Bool)arg1;
- (_Bool)_isDeceleratingInOppositionToNavigationDirection:(long long)arg1;
- (void)_commitGestureDrivenScrollRevealingView:(id)arg1 concealingView:(id)arg2 inDirection:(long long)arg3 canComplete:(_Bool)arg4;
- (void)_boundsDidChangeToSize:(struct CGSize)arg1;
- (void)_adjustContentInsets;
- (void)setView:(id)arg1 direction:(long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_notifyDelegateDidFinishScrolling;
- (void)_notifyDelegateDidBailoutOfScrollAndRevealedView:(id)arg1;
- (void)_notifyDelegateDidEndManualScroll:(_Bool)arg1 toRevealView:(id)arg2 direction:(long long)arg3 animated:(_Bool)arg4 didFinish:(_Bool)arg5 didComplete:(_Bool)arg6;
- (void)_notifyDelegateDidCommitManualScroll:(_Bool)arg1 toRevealView:(id)arg2 concealView:(id)arg3 direction:(long long)arg4 animated:(_Bool)arg5 canComplete:(_Bool)arg6;
- (void)_notifyDelegateWillManuallyScroll:(_Bool)arg1 toRevealView:(id)arg2 concealingView:(id)arg3 animated:(_Bool)arg4;
- (void)_enqueueAnimatedScrollInDirection:(long long)arg1 withView:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_cleanUpCompletionState:(id)arg1 didFinish:(_Bool)arg2 didComplete:(_Bool)arg3;
- (void)_enqueueCompletionState:(id)arg1;
- (long long)_navigationDirectionFromCurrentOffset;
- (long long)_navigationDirectionForActiveScroll:(_Bool)arg1;
- (_Bool)isManualScrollInProgress;
- (_Bool)isPreviousScrollCompatibleWithScrollInDirection:(long long)arg1;
- (void)_invalidateOffscreenViews;
- (id)_viewAtIndex:(long long)arg1 loadingIfNecessary:(_Bool)arg2 updatingContents:(_Bool)arg3 animated:(_Bool)arg4;
- (id)_dequeueViewForIndex:(long long)arg1;
- (id)_requestViewForIndex:(long long)arg1;
- (void)_replaceViews:(id)arg1 updatingContents:(_Bool)arg2 adjustContentInsets:(_Bool)arg3 animated:(_Bool)arg4;
- (void)_flushView:(id)arg1 animated:(_Bool)arg2;
- (id)_visibleView;
- (id)_viewAfterView:(id)arg1;
- (id)_viewBeforeView:(id)arg1;
- (id)_viewBefore:(_Bool)arg1 view:(id)arg2;
- (_Bool)_dataSourceProvidesViews;
- (void)_setWrappedViewAtIndex:(long long)arg1 withView:(id)arg2;
- (void)scrollRectToVisible:(struct CGRect)arg1 animated:(_Bool)arg2;
- (unsigned long long)_abuttedPagingEdges;
- (_Bool)_gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)_scrollViewAnimationEnded:(id)arg1 finished:(_Bool)arg2;
- (void)_scrollViewDidEndDecelerating;
- (void)_scrollViewDidEndDraggingWithDeceleration:(_Bool)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_setFrameAndApplyPageSpacing:(struct CGRect)arg1;
@property(readonly, nonatomic) UIView *visibleView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 navigationOrientation:(long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIQueuingScrollViewState : _UITransitionState
{
    UIView *_view;
    UIViewController *_viewController;
    _Bool _manual;
}

@property(readonly, nonatomic, getter=isManual) _Bool manual; // @synthesize manual=_manual;
@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (id)description;
- (_Bool)isCompatibleWithTransitionInDirection:(long long)arg1;
- (void)dealloc;
- (id)initWithTransitionDirection:(long long)arg1 view:(id)arg2 manual:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;

@end

__attribute__((visibility("hidden")))
@interface _UIQuickLookActivity : UIActivity
{
    UIDocumentInteractionController *_documentInteractionController;
}

- (void)_cleanup;
- (void)performActivity;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)activityImage;
- (id)activityTitle;
- (id)activityType;
- (id)initWithDocumentInteractionController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIReflectingContainerView : UIView
{
}

+ (Class)layerClass;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIReflectingGradientView : UIView
{
}

+ (Class)layerClass;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

@interface _UIReflectingView : UIView
{
    UIView *_containerView;
    UIView *_gradientView;
    double _reflectionAlpha;
}

@property(readonly, retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
@property(nonatomic) double reflectionFraction;
@property(nonatomic) double reflectionAlpha;
- (void)_updateGradientColors;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_gradientLayer;

@end

__attribute__((visibility("hidden")))
@interface _UIRefreshControlAnimationDelegate : NSObject
{
    CDUnknownBlockType block;
}

+ (id)delegateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIRefreshControlContentView : UIView
{
    UIRefreshControl *_refreshControl;
    UIColor *_tintColor;
}

@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(nonatomic) UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
- (double)_heightAtWhichNoneOfTheInterfaceElementsAreVisibleEvenIfTheControlIsStillPartiallyOnScreen;
- (void)didTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)willTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)refreshControlInvalidatedSnappingHeight;
@property(readonly, nonatomic) double maximumSnappingHeight;
@property(readonly, nonatomic) double minimumSnappingHeight;
@property(readonly, nonatomic) long long style;
@property(retain, nonatomic) NSAttributedString *attributedTitle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIRefreshControlDefaultContentView : _UIRefreshControlContentView
{
    _Bool _animationsAreValid;
    UIImageView *_imageView;
    UILabel *_textLabel;
    UIImageView *_arrow;
    UIActivityIndicatorView *_spinner;
    NSMutableDictionary *_snappingTextFromValues;
    NSMutableDictionary *_snappingImageFromValues;
    NSMutableDictionary *_snappingArrowFromValues;
    _Bool _areAnimationsValid;
}

@property(readonly, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(readonly, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(readonly, nonatomic) UIImageView *arrow; // @synthesize arrow=_arrow;
@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) _Bool areAnimationsValid; // @synthesize areAnimationsValid=_areAnimationsValid;
- (id)_regenerateArrow;
- (id)_regenerateCircle;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)arg1;
- (void)setTintColor:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)_heightAtWhichNoneOfTheInterfaceElementsAreVisibleEvenIfTheControlIsStillPartiallyOnScreen;
- (double)maximumSnappingHeight;
- (double)minimumSnappingHeight;
- (void)_spinOutMagic;
- (void)_refreshingMagic;
- (void)_snappingMagic;
- (void)_revealingMagic;
- (void)_fadeInMagic;
- (id)_revealingTextAnimations;
- (id)_revealingArrowAnimations;
- (id)_revealingImageAnimations;
- (void)_updateTimeOffsetOfRelevantLayers;
- (double)_currentTimeOffset;
- (double)_snappingTimeOffset;
- (void)didTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)willTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)refreshControlInvalidatedSnappingHeight;
- (long long)style;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRefreshControlModernContentView : _UIRefreshControlContentView
{
    _Bool _animationsAreValid;
    UIView *_replicatorContainer;
    _UIRefreshControlModernReplicatorView *_replicatorView;
    UIView *_seed;
    _Bool _hasFinishedRevealing;
    UILabel *_textLabel;
    _Bool _areAnimationsValid;
    double _currentPopStiffness;
}

@property(nonatomic) double currentPopStiffness; // @synthesize currentPopStiffness=_currentPopStiffness;
@property(readonly, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(nonatomic) _Bool areAnimationsValid; // @synthesize areAnimationsValid=_areAnimationsValid;
- (id)attributedTitle;
- (void)setAttributedTitle:(id)arg1;
- (void)setTintColor:(id)arg1;
- (id)_effectiveTintColorWithAlpha:(double)arg1;
- (id)_effectiveTintColor;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)maximumSnappingHeight;
- (double)_effectiveScrollViewHeight;
- (double)_heightAtWhichNoneOfTheInterfaceElementsAreVisibleEvenIfTheControlIsStillPartiallyOnScreen;
- (double)_currentTimeOffset;
- (void)_updateTimeOffsetOfRelevantLayers;
- (double)_percentageShowing;
- (void)_snappingMagic;
- (void)_goAway;
- (void)_tick;
- (void)_spin;
- (void)_reveal;
- (void)_resetToRevealingState;
- (void)_setSpunAppearance;
- (void)_cleanUpAfterRevealing;
- (void)_tickDueToProgrammaticRefresh;
- (void)didTransitionFromState:(int)arg1 toState:(int)arg2;
- (void)willTransitionFromState:(int)arg1 toState:(int)arg2;
- (long long)style;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRefreshControlModernReplicatorView : UIView
{
}

+ (Class)layerClass;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRelationshipTraitStorage : _UITraitStorage
{
    NSOrderedSet *_relationshipCandidates;
}

- (void)applyRecordsMatchingTraitCollection:(id)arg1;
- (void)addRecordWithTraitCollection:(id)arg1 addedObjects:(id)arg2 removedObjects:(id)arg3;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithObject:(id)arg1 keyPath:(id)arg2 relationshipCandidates:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIRelationshipTraitStorageRecord : NSObject <NSCoding>
{
    UITraitCollection *_traitCollection;
    NSSet *_addedObjects;
    NSSet *_removedObjects;
}

@property(readonly, nonatomic) NSSet *removedObjects; // @synthesize removedObjects=_removedObjects;
@property(readonly, nonatomic) NSSet *addedObjects; // @synthesize addedObjects=_addedObjects;
@property(readonly, nonatomic) UITraitCollection *traitCollection; // @synthesize traitCollection=_traitCollection;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTraitCollection:(id)arg1 addedObjects:(id)arg2 removedObjects:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteDictionaryViewController : UITableViewController
{
    NSArray *_availableDictionaries;
}

- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)_handleDeleteButton:(id)arg1;
- (void)_handleDownloadButton:(id)arg1;
- (id)_downloadOptionsDictionary;
- (id)_downloadButton;
- (id)_downloadImageWithTintColor:(id)arg1;
- (id)_cloudBackgroundImage;
- (id)_downloadArrowImage;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteInputViewController : _UIRemoteViewController
{
}

+ (_Bool)__shouldHostRemoteTextEffectsWindow;
- (void)viewDidInvalidateIntrinsicContentSize;
- (struct CGSize)intrinsicContentSizeForServiceSize:(struct CGSize)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteKeyboardPlaceholderView : UIView <_UIRemoteKeyboardInputViewPlaceholder>
{
    UIView *_mirroredView;
}

+ (id)placeholderWithWidth:(double)arg1 height:(double)arg2;
+ (id)placeholderForView:(id)arg1;
- (_Bool)refreshPlaceholder;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGSize)intrinsicContentSize;
@property(readonly, retain) UIView *placeheldView;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteKeyboards : NSObject <_UIKeyboardArbitrationClient, _UIRemoteKeyboardControllerDelegate>
{
    NSHashTable *_windowControllers;
    _Bool _currentKeyboard;
    NSXPCConnection *_connection;
    _UIKeyboardChangedInformation *_currentState;
}

+ (id)sharedRemoteKeyboards;
+ (_Bool)enabled;
@property _Bool currentKeyboard; // @synthesize currentKeyboard=_currentKeyboard;
@property(retain) _UIKeyboardChangedInformation *currentState; // @synthesize currentState=_currentState;
@property(retain) NSXPCConnection *connection; // @synthesize connection=_connection;
- (void)setHostedWindowView:(id)arg1;
@property(readonly) UIWindow *keyboardWindow;
@property(readonly) _Bool keyboardActive;
@property(readonly) double intersectionHeight;
@property(readonly) _Bool keyboardVisible;
- (id)prepareForHostedWindow;
- (void)performOnControllers:(CDUnknownBlockType)arg1;
- (void)unregisterController:(id)arg1;
- (void)registerController:(id)arg1;
- (void)controllerDidLayoutSubviews:(id)arg1;
- (void)completeMoveKeyboardForScreen:(id)arg1;
- (void)prepareToMoveKeyboard:(struct CGRect)arg1 showing:(_Bool)arg2 forScreen:(id)arg3;
- (void)didActivate:(id)arg1;
- (void)willDeactivate:(id)arg1;
- (void)willResume:(id)arg1;
- (void)didSuspend:(id)arg1;
- (void)setWindowEnabled:(_Bool)arg1;
- (void)stopConnection;
- (void)keyboardChanged:(id)arg1;
- (void)startConnection;
@property(readonly) id <_UIKeyboardArbitration> proxy;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIRemoteView : UIView <UIStatusBarTinting>
{
    _Bool _actsAsTintView;
    UIColor *_statusBarTintColor;
    _UIHostedWindowHostingHandle *_hostedWindowHostingHandle;
    CDUnknownBlockType _tintColorDidChangeHandler;
}

+ (id)viewWithRemoteContextID:(unsigned int)arg1;
+ (id)viewWithHostedWindowHostingHandle:(id)arg1;
+ (_Bool)_requiresWindowTouches;
+ (Class)layerClass;
@property(copy, nonatomic) CDUnknownBlockType tintColorDidChangeHandler; // @synthesize tintColorDidChangeHandler=_tintColorDidChangeHandler;
@property(retain, nonatomic) _UIHostedWindowHostingHandle *hostedWindowHostingHandle; // @synthesize hostedWindowHostingHandle=_hostedWindowHostingHandle;
@property(nonatomic, setter=_setActsAsTintView:) _Bool _actsAsTintView; // @synthesize _actsAsTintView;
@property(retain, nonatomic, setter=_setStatusBarTintColor:) UIColor *_statusBarTintColor; // @synthesize _statusBarTintColor;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_setStatusBarTintColor:(id)arg1 duration:(double)arg2;
@property(nonatomic, setter=_setInheritsSecurity:) _Bool _inheritsSecurity;
- (void)tintColorDidChange;
- (void)setContextID:(unsigned int)arg1;
- (id)_hitTest:(struct CGPoint)arg1 withEvent:(id)arg2 windowServerHitTestWindow:(id)arg3;
- (void)applyTransformUndoingRemoteRootLayerTransform:(struct CGAffineTransform)arg1 frame:(struct CGRect)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteViewControllerConnectionInfo : NSObject
{
    _Bool _prefersStatusBarHidden;
    _UIViewServiceInterface *_interface;
    id _viewControllerOperatorProxy;
    id _serviceViewControllerProxy;
    id _serviceViewControllerControlMessageProxy;
    id _textEffectsOperatorProxy;
    NSArray *_serviceViewControllerSupportedInterfaceOrientations;
    _UIViewServiceXPCMachSendRight *_serviceAccessibilityServerPortWrapper;
    long long _preferredStatusBarStyle;
    _UIHostedWindowHostingHandle *_hostedWindowHostingHandle;
    _UIHostedWindowHostingHandle *_textEffectsWindowHostingHandle;
    _UIHostedWindowHostingHandle *_textEffectsWindowAboveStatusBarHostingHandle;
    _UIHostedWindowHostingHandle *_remoteKeyboardsWindowHostingHandle;
}

@property(retain) _UIHostedWindowHostingHandle *remoteKeyboardsWindowHostingHandle; // @synthesize remoteKeyboardsWindowHostingHandle=_remoteKeyboardsWindowHostingHandle;
@property(retain) _UIHostedWindowHostingHandle *textEffectsWindowAboveStatusBarHostingHandle; // @synthesize textEffectsWindowAboveStatusBarHostingHandle=_textEffectsWindowAboveStatusBarHostingHandle;
@property(retain) _UIHostedWindowHostingHandle *textEffectsWindowHostingHandle; // @synthesize textEffectsWindowHostingHandle=_textEffectsWindowHostingHandle;
@property(retain) _UIHostedWindowHostingHandle *hostedWindowHostingHandle; // @synthesize hostedWindowHostingHandle=_hostedWindowHostingHandle;
@property _Bool prefersStatusBarHidden; // @synthesize prefersStatusBarHidden=_prefersStatusBarHidden;
@property long long preferredStatusBarStyle; // @synthesize preferredStatusBarStyle=_preferredStatusBarStyle;
@property(retain) _UIViewServiceXPCMachSendRight *serviceAccessibilityServerPortWrapper; // @synthesize serviceAccessibilityServerPortWrapper=_serviceAccessibilityServerPortWrapper;
@property(retain) NSArray *serviceViewControllerSupportedInterfaceOrientations; // @synthesize serviceViewControllerSupportedInterfaceOrientations=_serviceViewControllerSupportedInterfaceOrientations;
@property(retain) id textEffectsOperatorProxy; // @synthesize textEffectsOperatorProxy=_textEffectsOperatorProxy;
@property(retain) id serviceViewControllerControlMessageProxy; // @synthesize serviceViewControllerControlMessageProxy=_serviceViewControllerControlMessageProxy;
@property(retain) id serviceViewControllerProxy; // @synthesize serviceViewControllerProxy=_serviceViewControllerProxy;
@property(retain) id viewControllerOperatorProxy; // @synthesize viewControllerOperatorProxy=_viewControllerOperatorProxy;
@property(retain) _UIViewServiceInterface *interface; // @synthesize interface=_interface;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteViewControllerConnectionRequest : NSObject
{
    _UIRemoteViewService *_service;
    CDUnknownBlockType _handler;
    NSString *_viewServiceBundleIdentifier;
    NSString *_viewControllerClassName;
    NSUUID *_contextToken;
    NSArray *_serializedAppearanceCustomizations;
    _Bool _legacyAppearance;
    id _exportedHostingObject;
    Class _remoteViewControllerClass;
    id <_UIViewServiceDeputyXPCInterface> _serviceViewControllerDeputyInterface;
    _UIAsyncInvocation *_cancelInvocationForCurrentOperation;
    _UIRemoteViewControllerConnectionInfo *_connectionInfo;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _isCancelledOrComplete;
    NSError *_error;
    _UIAsyncInvocation *_requestCancellationInvocation;
}

+ (id)requestViewControllerWithService:(id)arg1 serializedAppearanceCustomizations:(id)arg2 legacyAppearance:(_Bool)arg3 exportedHostingObject:(id)arg4 remoteViewControllerClass:(Class)arg5 serviceViewControllerDeputyInterface:(id)arg6 connectionHandler:(CDUnknownBlockType)arg7;
+ (id)requestViewController:(id)arg1 fromServiceWithBundleIdentifier:(id)arg2 serializedAppearanceCustomizations:(id)arg3 legacyAppearance:(_Bool)arg4 exportedHostingObject:(id)arg5 serviceViewControllerDeputyInterface:(id)arg6 connectionHandler:(CDUnknownBlockType)arg7;
+ (id)__requestRemoteViewController:(id)arg1 service:(id)arg2 fromServiceWithBundleIdentifier:(id)arg3 serializedAppearanceCustomizations:(id)arg4 legacyAppearance:(_Bool)arg5 exportedHostingObject:(id)arg6 serviceViewControllerDeputyInterface:(id)arg7 connectionHandler:(CDUnknownBlockType)arg8;
- (id)_cancelWithError:(id)arg1;
- (void)_didFinishEstablishingConnection;
- (void)_connectToViewControllerControlMessageDeputy;
- (void)_connectToServiceViewController;
- (void)_sendServiceTextEffectsRequest;
- (void)_connectToTextEffectsOperator;
- (void)_sendServiceViewControllerRequest;
- (void)_connectToViewControllerOperator;
- (void)_connectToPlugInKitService;
- (void)_connectToViewService;
- (void)_connectToDeputyWithInterface:(id)arg1 fromExportedHostingObject:(id)arg2 successHandler:(CDUnknownBlockType)arg3;
- (void)_cancelUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteViewControllerWeakWrapperProxy : NSObject
{
    id _target;
}

+ (id)wrapperWithTarget:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

@interface _UIRemoteViewService : NSObject
{
    NSExtension *_extension;
    NSUUID *_contextToken;
}

@property(copy, nonatomic) NSUUID *contextToken; // @synthesize contextToken=_contextToken;
@property(retain, nonatomic) NSExtension *extension; // @synthesize extension=_extension;
- (void)dealloc;
@property(retain, nonatomic) id <PKPlugIn> plugin;
- (id)initWithExtension:(id)arg1 andContextToken:(id)arg2;
- (id)initWithPlugIn:(id)arg1 andContextToken:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoteWebViewController : _UIRemoteViewController
{
    _UIWebViewController *_webViewController;
}

+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;
@property(nonatomic) _UIWebViewController *webViewController; // @synthesize webViewController=_webViewController;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIRemoveControlWhiteView : UIView
{
}

- (void)setBackgroundColor:(id)arg1;
- (id)init;

@end

@interface _UIRepeatingPressGestureRecognizer : UIGestureRecognizer
{
    _Bool _timerOn;
    long long _delayIndex;
    unsigned long long _numberOfTouchesRequired;
    long long _buttonType;
}

+ (double)delayForRepeatNumber:(long long)arg1;
@property(nonatomic, setter=_setButtonType:) long long _buttonType; // @synthesize _buttonType;
@property(nonatomic) unsigned long long numberOfTouchesRequired; // @synthesize numberOfTouchesRequired=_numberOfTouchesRequired;
- (void)_finishNextStep:(id)arg1;
- (void)_nextStep:(id)arg1;
- (void)_scheduleNextTimer;
- (void)_clearTapTimer;
- (void)_cancelPress;
- (void)_endPress;
- (void)_beginPress;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_resetGestureRecognizer;
- (void)setView:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIReplicantContentView : UIView
{
}

+ (Class)layerClass;

@end

__attribute__((visibility("hidden")))
@interface _UIReplicantLayer : CALayer
{
    struct {
        unsigned int hasSetContents:1;
    } _layerFlags;
}

- (void)setContents:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIReplicantView : UIView
{
    _UISlotIdWrapper *_slotIdWrapper;
    UIScreen *_screen;
    struct CGSize _snapshotSize;
    _UIReplicantContentView *_contentView;
}

+ (id)_pendingSnapshotOfTarget:(id)arg1 snapshotBlock:(CDUnknownBlockType)arg2;
+ (id)snapshotWithScreen:(id)arg1 defer:(_Bool)arg2;
+ (id)snapshotWithView:(id)arg1 fromRect:(struct CGRect)arg2 capInsets:(struct UIEdgeInsets)arg3 defer:(_Bool)arg4;
+ (id)snapshotWindows:(id)arg1 withRect:(struct CGRect)arg2;
+ (id)snapshotContext;
+ (Class)layerClass;
- (struct CGAffineTransform)_appliedTransform;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)_copyResizableSnapshotViewFromRect:(struct CGRect)arg1 withCapInsets:(struct UIEdgeInsets)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIResizableImage : UIImage
{
    _Bool _alwaysStretches;
    _Bool _isSubimage;
    struct UIEdgeInsets _subimageInsets;
    struct UIEdgeInsets _capInsets;
}

+ (_Bool)supportsSecureCoding;
- (_Bool)isEqual:(id)arg1;
- (id)_resizableImageWithCapMask:(int)arg1;
- (_Bool)_isTiledWhenStretchedToSize:(struct CGSize)arg1;
- (void)_setAlwaysStretches:(_Bool)arg1;
- (_Bool)_isResizable;
- (_Bool)_isSubimage;
- (struct CGRect)_contentRectInPixels;
- (struct CGRect)_contentStretchInPixels;
- (struct CGRect)_contentInsetsInPixels:(struct UIEdgeInsets)arg1 emptySizeFallback:(CDUnknownBlockType)arg2;
- (long long)resizingMode;
- (void)_setSubimageInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)capInsets;
- (void)_setCapInsets:(struct UIEdgeInsets)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithImage:(id)arg1 capInsets:(struct UIEdgeInsets)arg2;
- (void)_configureImage:(id)arg1;
- (_Bool)_suppressesAccessibilityHairlineThickening;

@end

__attribute__((visibility("hidden")))
@interface _UIResponderSelectionCursor : NSObject
{
    UIImageView *_responderSelectionView;
    struct CGPoint _responderSelectionStartLocation;
    UIPanGestureRecognizer *_panResponderSelectionRecognizer;
    NSArray *_remoteGestures;
    _Bool _isFlick;
    double _timeOnTouchDown;
    double _consecutiveWithinRowAccumulator;
    _Bool _isKeepingCompetitiveFarDiagonalResiduals;
    UIResponder *_selectedItemOnTouchDown;
    NSMutableArray *_selectableItems;
    UIScrollView *_scrollingScrollView;
    struct CGPoint _scrollingOffset;
    struct CGPoint _activeFirstResponderScrollViewOffset;
    NSMapTable *_selectionThresholdDictionary;
    NSMapTable *_selectionAccumulationDictionary;
    _Bool _dirtyGeometry;
    UIWindow *_targetWindow;
    UIResponder *_mostLikelyToBeSelectedItem;
    UIScrollView *_activeFirstResponderScrollView;
}

+ (void)initialize;
@property(retain, nonatomic) UIScrollView *activeFirstResponderScrollView; // @synthesize activeFirstResponderScrollView=_activeFirstResponderScrollView;
@property(retain, nonatomic) UIResponder *mostLikelyToBeSelectedItem; // @synthesize mostLikelyToBeSelectedItem=_mostLikelyToBeSelectedItem;
@property(nonatomic) UIWindow *targetWindow; // @synthesize targetWindow=_targetWindow;
- (id)directionalGestureRecognizers;
- (void)moveSelection:(id)arg1;
- (void)accumulateWithDelta:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)panTouchUp;
- (void)longFlick;
- (void)panTouchDown;
- (double)verticalSpacingFromItem:(id)arg1;
- (double)horizontalSpacingFromItem:(id)arg1;
- (id)itemsInDirectionOfVector:(struct CGPoint)arg1 withConeOfDegrees:(double)arg2 fromItem:(id)arg3;
- (void)reset;
- (void)resetIfNecessary;
- (void)setSelectedItem:(id)arg1;
- (void)keepSecondaryResidualsCompetitiveTo:(id)arg1;
- (id)possibleResponders;
- (_Bool)inSelectedRow:(id)arg1;
- (struct CGPoint)centerForResponder:(id)arg1;
- (void)setSelectionAccumulation:(double)arg1 forResponder:(id)arg2;
- (double)selectionAccumulationForResponder:(id)arg1;
- (void)setSelectionThreshold:(double)arg1 forResponder:(id)arg2;
- (double)selectionThresholdForResponder:(id)arg1;
- (void)_responderGeometryDidChange;
- (void)moveResponderSelectionInDirection:(struct CGSize)arg1;
- (id)respondersInDirection:(struct CGSize)arg1 inView:(id)arg2;
- (void)loadFirstResponderScrollViewContentInDirection:(struct CGSize)arg1;
- (void)updateResponderSelectionWithPoint:(struct CGPoint)arg1 possibleResponders:(id)arg2;
- (id)responderForPoint:(struct CGPoint)arg1 possibleResponders:(id)arg2;
- (void)updateResponderSelectionRect;
- (void)panResponderSelection:(id)arg1;
- (void)updateFirstResponder:(id)arg1;
- (void)scrollingToFirstResponderDidFinish:(id)arg1;
- (void)dealloc;

@end

@interface _UIScreenEdgePanRecognizer : NSObject <_UISettingsKeyObserver>
{
    struct CGRect _screenBounds;
    _Bool _useGrapeFlags;
    _Bool _hasRecordedData;
    _Bool _hasDoneInitialBackProjectionTest;
    double _gestureRestrictionFactor;
    struct CGPoint _initialTouchLocation;
    double _initialTouchTimestamp;
    long long _initialInterfaceOrientation;
    unsigned long long _touchedRegion;
    UIDelayedAction *_recognitionTimer;
    struct CGPoint _lastTouchLocation;
    double _lastTouchTimestamp;
    long long _type;
    _Bool _requiresLongPress;
    _Bool _requiresFlatThumb;
    unsigned long long _targetEdges;
    long long _state;
    unsigned long long _recognizedRegion;
    id <_UIScreenEdgePanRecognizerDelegate> _delegate;
    _UIScreenEdgePanRecognizerSettings *_settings;
}

+ (_Bool)_edgeSwipeNavigationGestureEnabled;
@property(retain, nonatomic) _UIScreenEdgePanRecognizerSettings *settings; // @synthesize settings=_settings;
@property id <_UIScreenEdgePanRecognizerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) unsigned long long recognizedRegion; // @synthesize recognizedRegion=_recognizedRegion;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) _Bool requiresFlatThumb; // @synthesize requiresFlatThumb=_requiresFlatThumb;
@property(nonatomic) unsigned long long targetEdges; // @synthesize targetEdges=_targetEdges;
@property(nonatomic) struct CGRect screenBounds; // @synthesize screenBounds=_screenBounds;
@property(nonatomic) _Bool shouldUseGrapeFlags; // @synthesize shouldUseGrapeFlags=_useGrapeFlags;
- (unsigned long long)_targetEdges;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)_createOrDestoryAnalysisWindowIfNeeded;
- (void)_idleTimerElapsed:(id)arg1;
- (void)_longPressTimerElapsed:(id)arg1;
- (void)_incorporateIncrementalSampleAtLocation:(struct CGPoint)arg1 timestamp:(double)arg2 modifier:(long long)arg3 interfaceOrientation:(long long)arg4;
- (void)_incorporateInitialTouchAtLocation:(struct CGPoint)arg1 timestamp:(double)arg2 modifier:(long long)arg3 interfaceOrientation:(long long)arg4;
- (void)incorporateTouchSampleAtLocation:(struct CGPoint)arg1 timestamp:(double)arg2 modifier:(long long)arg3 interfaceOrientation:(long long)arg4;
@property(readonly, nonatomic, getter=isRequiringLongPress) _Bool requiringLongPress;
- (long long)_type;
- (void)_setState:(long long)arg1;
- (void)reset;
- (void)dealloc;
- (id)initWithType:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenEdgePanRecognizerAnalysisWindow : UIWindow
{
    NSMutableArray *_failureMessageLabels;
    UIDelayedAction *_messageFadeAction;
    UIView *_backgroundView;
    _UIScreenEdgePanRecognizer *_recognizer;
    long long _maximumVisibleOverlayItems;
}

@property(nonatomic) long long maximumVisibleOverlayItems; // @synthesize maximumVisibleOverlayItems=_maximumVisibleOverlayItems;
@property(nonatomic) _UIScreenEdgePanRecognizer *recognizer; // @synthesize recognizer=_recognizer;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)dismissMessages;
- (void)fadeOldestMessage;
- (void)pushStatusMessage:(id)arg1 toVisualOverlay:(_Bool)arg2;
- (void)pushFailureMessage:(id)arg1 toVisualOverlay:(_Bool)arg2;
- (void)pushMessage:(id)arg1 toVisualOverlay:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)_isWindowServerHostingManaged;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenEdgePanRecognizerCornerSettings : _UISettings
{
    double _cornerSize;
    double _cornerAngleWindow;
}

+ (id)settingsControllerModule;
+ (id)keyPathsForValuesAffectingCornerAngleWindowDegreees;
@property(nonatomic) double cornerAngleWindow; // @synthesize cornerAngleWindow=_cornerAngleWindow;
@property(nonatomic) double cornerSize; // @synthesize cornerSize=_cornerSize;
@property(nonatomic) double cornerAngleWindowDegreees;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenEdgePanRecognizerDwellSettings : _UISettings
{
    double _longPressFlatPermittedHorizontalMovement;
    double _longPressFlatPermittedVerticalMovement;
    double _longPressTipPermittedHorizontalMovement;
    double _longPressTipPermittedVerticalMovement;
    double _longPressPermittedHorizontalMovement;
    double _longPressPermittedVerticalMovement;
    double _longPressRequiredDuration;
}

+ (id)settingsControllerModule;
@property(nonatomic) double longPressRequiredDuration; // @synthesize longPressRequiredDuration=_longPressRequiredDuration;
@property(nonatomic) double longPressPermittedVerticalMovement; // @synthesize longPressPermittedVerticalMovement=_longPressPermittedVerticalMovement;
@property(nonatomic) double longPressPermittedHorizontalMovement; // @synthesize longPressPermittedHorizontalMovement=_longPressPermittedHorizontalMovement;
@property(nonatomic) double longPressTipPermittedVerticalMovement; // @synthesize longPressTipPermittedVerticalMovement=_longPressTipPermittedVerticalMovement;
@property(nonatomic) double longPressTipPermittedHorizontalMovement; // @synthesize longPressTipPermittedHorizontalMovement=_longPressTipPermittedHorizontalMovement;
@property(nonatomic) double longPressFlatPermittedVerticalMovement; // @synthesize longPressFlatPermittedVerticalMovement=_longPressFlatPermittedVerticalMovement;
@property(nonatomic) double longPressFlatPermittedHorizontalMovement; // @synthesize longPressFlatPermittedHorizontalMovement=_longPressFlatPermittedHorizontalMovement;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenEdgePanRecognizerEdgeSettings : _UISettings
{
    double _hysteresis;
    double _edgeRegionSize;
    double _bottomEdgeRegionSize;
    double _backProjectionTime;
    double _edgeAngleWindow;
    double _edgeAngleWindowDecayTime;
    double _restrictedEdgeRegionTimeInterval;
    double _restrictedEdgeRegionMinimumWeight;
    double _maximumSwipeDuration;
}

+ (id)settingsControllerModule;
+ (id)keyPathsForValuesAffectingEdgeAngleWindowDegreees;
@property(nonatomic) double maximumSwipeDuration; // @synthesize maximumSwipeDuration=_maximumSwipeDuration;
@property(nonatomic) double restrictedEdgeRegionMinimumWeight; // @synthesize restrictedEdgeRegionMinimumWeight=_restrictedEdgeRegionMinimumWeight;
@property(nonatomic) double restrictedEdgeRegionTimeInterval; // @synthesize restrictedEdgeRegionTimeInterval=_restrictedEdgeRegionTimeInterval;
@property(nonatomic) double edgeAngleWindowDecayTime; // @synthesize edgeAngleWindowDecayTime=_edgeAngleWindowDecayTime;
@property(nonatomic) double edgeAngleWindow; // @synthesize edgeAngleWindow=_edgeAngleWindow;
@property(nonatomic) double backProjectionTime; // @synthesize backProjectionTime=_backProjectionTime;
@property(nonatomic) double bottomEdgeRegionSize; // @synthesize bottomEdgeRegionSize=_bottomEdgeRegionSize;
@property(nonatomic) double edgeRegionSize; // @synthesize edgeRegionSize=_edgeRegionSize;
@property(nonatomic) double hysteresis; // @synthesize hysteresis=_hysteresis;
@property(nonatomic) double edgeAngleWindowDegreees;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenEdgePanRecognizerSettings : _UISettings
{
    _Bool _analysisLoggingEnabled;
    _Bool _analysisFailureOverlayVisible;
    _Bool _analysisLoggingOverlayVisible;
    NSString *_multitaskingGestureMode;
    NSString *_navigationGestureMode;
    _UIScreenEdgePanRecognizerEdgeSettings *_edgeSettings;
    _UIScreenEdgePanRecognizerDwellSettings *_dwellSettings;
    _UIScreenEdgePanRecognizerCornerSettings *_cornerSettings;
}

+ (id)settingsControllerModule;
@property(nonatomic) _Bool analysisLoggingOverlayVisible; // @synthesize analysisLoggingOverlayVisible=_analysisLoggingOverlayVisible;
@property(nonatomic) _Bool analysisFailureOverlayVisible; // @synthesize analysisFailureOverlayVisible=_analysisFailureOverlayVisible;
@property(nonatomic) _Bool analysisLoggingEnabled; // @synthesize analysisLoggingEnabled=_analysisLoggingEnabled;
@property(retain, nonatomic) _UIScreenEdgePanRecognizerCornerSettings *cornerSettings; // @synthesize cornerSettings=_cornerSettings;
@property(retain, nonatomic) _UIScreenEdgePanRecognizerDwellSettings *dwellSettings; // @synthesize dwellSettings=_dwellSettings;
@property(retain, nonatomic) _UIScreenEdgePanRecognizerEdgeSettings *edgeSettings; // @synthesize edgeSettings=_edgeSettings;
@property(copy, nonatomic) NSString *navigationGestureMode; // @synthesize navigationGestureMode=_navigationGestureMode;
@property(copy, nonatomic) NSString *multitaskingGestureMode; // @synthesize multitaskingGestureMode=_multitaskingGestureMode;
- (id)navigationGestureModePost351;
- (void)setNavigationGestureModePost351:(id)arg1;
- (id)multitaskingGestureModePost351;
- (void)setMultitaskingGestureModePost351:(id)arg1;
- (void)setDefaultValues;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenFixedCoordinateSpace : NSObject <UICoordinateSpace>
{
    UIScreen *_screen;
}

@property(nonatomic, setter=_setScreen:) UIScreen *_screen; // @synthesize _screen;
@property(readonly, nonatomic) struct CGRect bounds;
- (struct CGRect)convertRect:(struct CGRect)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGRect)convertRect:(struct CGRect)arg1 toCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromCoordinateSpace:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toCoordinateSpace:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIScreenTransparentHitTestWindow : UIWindow
{
    UIView *_hitTestableView;
}

- (void)setHitTestInsets:(struct UIEdgeInsets)arg1;
- (void)_updateTransformLayer;
- (_Bool)pointWithinHitTestInsets:(struct CGPoint)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIScrollViewAutomaticContentSizeConstraint : NSAutoresizingMaskLayoutConstraint
{
}

- (id)description;

@end

__attribute__((visibility("hidden")))
@interface _UISearchBarAppearanceStorage : NSObject
{
    NSMutableDictionary *searchFieldBackgroundImages;
    NSValue *searchFieldPositionAdjustment;
    NSMutableDictionary *iconImages;
    UIImage *separatorImage;
    UIImage *scopeBarBackgroundImage;
}

@property(retain, nonatomic) UIImage *scopeBarBackgroundImage; // @synthesize scopeBarBackgroundImage;
@property(retain, nonatomic) UIImage *separatorImage; // @synthesize separatorImage;
@property(retain, nonatomic) NSValue *searchFieldPositionAdjustment; // @synthesize searchFieldPositionAdjustment;
- (void)dealloc;
- (id)imageForIcon:(long long)arg1 state:(unsigned long long)arg2;
- (void)setImage:(id)arg1 forIcon:(long long)arg2 state:(unsigned long long)arg3;
- (id)searchFieldBackgroundImageForState:(unsigned long long)arg1;
- (void)setSearchFieldBackgroundImage:(id)arg1 forState:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UISearchBarContainerView : UIView
{
    UIView *_subview;
    int _resizingMask;
}

- (void)willRemoveSubview:(id)arg1;
- (void)_didRemoveSubview:(id)arg1;
- (void)_uncontainerSubview:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UISearchBarNavigationItem : UINavigationItem
{
}

- (void)setTitleView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISearchBarScopeBarBackground : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UISearchBarSearchFieldBackgroundView : _UITextFieldRoundedRectBackgroundViewNeue
{
    _Bool _backgroundContainer;
    long long _barStyle;
    unsigned long long _searchBarStyle;
}

@property(nonatomic) _Bool backgroundContainer; // @synthesize backgroundContainer=_backgroundContainer;
@property(nonatomic) unsigned long long searchBarStyle; // @synthesize searchBarStyle=_searchBarStyle;
@property(nonatomic) long long barStyle; // @synthesize barStyle=_barStyle;
- (void)updateView;
- (id)_fillColor:(_Bool)arg1;
- (id)_strokeColor:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2 updateView:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UISearchBarShadowView : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UISearchControllerAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
}

- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISearchControllerDidScrollDelegate : NSObject <_UIScrollNotification>
{
    UIScrollView *_scrollView;
    id <_UIScrollNotification> _controller;
}

@property(nonatomic) id <_UIScrollNotification> controller; // @synthesize controller=_controller;
- (void)_updateBackdropMaskViewsInScrollView:(id)arg1;
- (void)_didScroll;
@property(nonatomic) UIScrollView *scrollView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISearchControllerInPlaceSearchBarAnimator : _UISearchControllerAnimator
{
}

- (void)animateTransition:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISearchControllerOffscreenSearchBarAnimator : _UISearchControllerAnimator
{
}

- (void)animateTransition:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISearchControllerTransplantSearchBarAnimator : _UISearchControllerAnimator
{
}

- (void)animateTransition:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISearchControllerView : UIView
{
}

- (void)sendSubviewToBack:(id)arg1;
- (void)bringSubviewToFront:(id)arg1;
- (void)_addSubview:(id)arg1 positioned:(long long)arg2 relativeTo:(id)arg3;
- (void)_ensureContainerIsOnTop;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UISearchDisplayControllerDimmingView : UIControl
{
}

@end

__attribute__((visibility("hidden")))
@interface _UISearchFormSheetPresentationController : UIPresentationController <_UISearchControllerPresenting>
{
    _UISearchPresentationAssistant *_assistant;
    UIView *_wrapperView;
    struct CGRect finalFrameForContainerView;
}

@property(readonly, nonatomic) struct CGRect finalFrameForContainerView; // @synthesize finalFrameForContainerView;
@property(readonly, nonatomic) UIPresentationController<_UISearchControllerPresenting> *adaptivePresentationController;
@property(readonly, nonatomic) double resultsControllerContentOffset;
@property(readonly, nonatomic) _Bool searchBarToBecomeTopAttached;
- (void)setContentVisible:(_Bool)arg1;
@property(readonly, nonatomic) double statusBarAdjustment;
@property(readonly, nonatomic) _Bool shouldAccountForStatusBar;
@property(readonly, retain, nonatomic) UIView *searchBarContainerView;
- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (id)_presentedViewControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (long long)adaptivePresentationStyle;
- (void)_transitionToPresentationController:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_transitionFromDidEnd;
- (void)_transitionFromWillBegin;
- (void)_transitionToDidEnd;
- (void)_transitionToWillBegin;
- (void)traitCollectionDidChange:(id)arg1;
- (void)_presentedView:(id)arg1 enableFormSheetAccoutrements:(_Bool)arg2;
- (_Bool)_shouldKeepCurrentFirstResponder;
- (_Bool)shouldRemovePresentersView;
- (_Bool)_shouldSubscribeToKeyboardNotifications;
- (_Bool)_shouldRespectDefinesPresentationContext;
- (struct CGRect)_frameOfPresentedViewControllerViewInSuperview;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (id)presentedView;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (void)dealloc;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISearchPopoverPresentationController : UIPopoverPresentationController <_UISearchControllerPresenting>
{
    _UISearchPresentationAssistant *_assistant;
    struct CGRect finalFrameForContainerView;
}

@property(readonly, nonatomic) struct CGRect finalFrameForContainerView; // @synthesize finalFrameForContainerView;
@property(readonly, nonatomic) UIPresentationController<_UISearchControllerPresenting> *adaptivePresentationController;
@property(readonly, nonatomic) double resultsControllerContentOffset;
@property(readonly, nonatomic) _Bool searchBarToBecomeTopAttached;
- (void)setContentVisible:(_Bool)arg1;
@property(readonly, nonatomic) double statusBarAdjustment;
@property(readonly, nonatomic) _Bool shouldAccountForStatusBar;
@property(readonly, retain, nonatomic) UIView *searchBarContainerView;
- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (id)_presentedViewControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (long long)adaptivePresentationStyle;
- (void)_transitionFromDidEnd;
- (void)_transitionFromWillBegin;
- (void)_transitionToDidEnd;
- (void)_transitionToWillBegin;
- (void)presentationTransitionWillBegin;
- (id)_popoverHostingWindow;
- (void)dealloc;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISearchPresentationAssistant : NSObject <UIDimmingViewDelegate>
{
    UIPresentationController *_searchPresentationController;
    UIView *_searchBarContainerView;
    UIDimmingView *_dimmingView;
    _Bool _isFormSheetPresentation;
    _Bool _presentationWasAnimated;
    UIPresentationController<_UISearchControllerPresenting> *_adaptivePresentationController;
    id <UIViewControllerTransitionCoordinator> _transitioningToSizeCoordinator;
}

@property(retain, nonatomic) id <UIViewControllerTransitionCoordinator> transitioningToSizeCoordinator; // @synthesize transitioningToSizeCoordinator=_transitioningToSizeCoordinator;
@property(nonatomic) UIPresentationController<_UISearchControllerPresenting> *adaptivePresentationController; // @synthesize adaptivePresentationController=_adaptivePresentationController;
@property(nonatomic) _Bool presentationWasAnimated; // @synthesize presentationWasAnimated=_presentationWasAnimated;
- (void)dimmingViewWasTapped:(id)arg1;
- (_Bool)searchBarWillResizeForScopeBar;
- (double)resultsControllerContentOffset;
- (_Bool)searchBarToBecomeTopAttached;
- (id)locateNavigationController;
- (_Bool)shouldAccountForStatusBar;
- (double)statusBarAdjustment;
- (_Bool)_statusBarPreferredHidden;
- (id)dimmingView;
- (struct CGSize)updateSearchBarContainerFrame;
- (void)removeContainerViewFromSuperview;
- (id)searchBarContainerView;
- (id)_searchBarContainerSuperview;
- (struct CGRect)_containerFrame;
- (void)ensureAppropriatelySizedSearchBar:(id)arg1;
- (struct CGRect)optimalFrameForSearchBar:(id)arg1;
- (_Bool)presentationIsPopoverToOverFullScreenAdaptation;
- (void)dealloc;
- (id)initWithSearchPresentationController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISearchPresentationController : UIPresentationController <_UISearchControllerPresenting>
{
    _UISearchPresentationAssistant *_assistant;
    UIView *_placeholderView;
    NSMapTable *_excisedSearchBarConstraitMap;
    NSMapTable *_placeholderConstraitMap;
    struct CGRect _finalFrameForContainerView;
    struct {
        unsigned int searchBarWasTableHeaderView:1;
        unsigned int excisedSearchBarDuringPresentation:1;
        unsigned int searchBarWantedAutolayoutBeforeExcision:1;
    } _controllerFlags;
}

+ (_Bool)shouldExciseSearchBar:(id)arg1 duringPresentationWithPresenter:(id)arg2;
@property(readonly, nonatomic) struct CGRect finalFrameForContainerView; // @synthesize finalFrameForContainerView=_finalFrameForContainerView;
@property(readonly, nonatomic) UIPresentationController<_UISearchControllerPresenting> *adaptivePresentationController;
@property(readonly, nonatomic) double resultsControllerContentOffset;
@property(readonly, nonatomic) _Bool searchBarToBecomeTopAttached;
- (void)setContentVisible:(_Bool)arg1;
@property(readonly, nonatomic) double statusBarAdjustment;
@property(readonly, nonatomic) _Bool shouldAccountForStatusBar;
@property(readonly, retain, nonatomic) UIView *searchBarContainerView;
- (id)_presentationControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (id)_presentedViewControllerForSizeClassPair:(CDStruct_d58201db)arg1;
- (long long)adaptivePresentationStyle;
- (void)_updatePresentingViewControllerContentScrollViewWithOffsets:(struct CGSize)arg1 transitionCoordinator:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (_Bool)_shouldKeepCurrentFirstResponder;
- (_Bool)shouldPresentInFullscreen;
- (_Bool)_shouldRespectDefinesPresentationContext;
- (_Bool)shouldRemovePresentersView;
- (double)_visibleRefreshControlHeightForTableView:(id)arg1;
- (void)_placeSearchBarBackIntoOriginalContext;
- (void)_exciseSearchBarFromCurrentContext;
- (void)_transitionToPresentationController:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)_transitionFromDidEnd;
- (void)_transitionFromWillBegin;
- (void)_transitionToDidEnd;
- (void)_transitionToWillBegin;
- (void)dismissalTransitionDidEnd:(_Bool)arg1;
- (void)dismissalTransitionWillBegin;
- (void)presentationTransitionDidEnd:(_Bool)arg1;
- (void)presentationTransitionWillBegin;
- (void)_updateContainerFinalFrameForNonExcisedSearchBar;
- (void)dealloc;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISecureHostedWindow : _UIHostedWindow
{
}

+ (_Bool)_isSecure;

@end

__attribute__((visibility("hidden")))
@interface _UISegmentedControlAppearanceStorage : NSObject
{
    UIImage *_optionsBackgroundImage;
    NSMutableDictionary *_backgroundImages;
    NSMutableDictionary *_miniBackgroundImages;
    NSMutableDictionary *_dividerImages;
    NSMutableDictionary *_miniDividerImages;
    NSMutableDictionary *_textAttributesForState;
    NSMutableDictionary *_backgroundPositionAdjustmentsForBarMetrics;
    NSMutableDictionary *_contentPositionOffsets;
    NSMutableDictionary *_miniContentPositionOffsets;
    _Bool _legacyDontHighlight;
    _Bool _legacySuppressOptionsBackground;
    _Bool _isTiled;
    unsigned long long _leftCapWidth;
    unsigned long long _rightCapWidth;
}

@property(retain, nonatomic) UIImage *optionsBackgroundImage; // @synthesize optionsBackgroundImage=_optionsBackgroundImage;
- (void)setIsTiled:(_Bool)arg1 leftCapWidth:(unsigned long long)arg2 rightCapWidth:(unsigned long long)arg3;
- (void)setDetail:(CDStruct_41b0f204 *)arg1;
- (_Bool)legacySuppressOptionsBackground;
- (void)takeTextAttributesFrom:(CDStruct_0ba2c6ed)arg1 forState:(unsigned long long)arg2;
- (id)init;
- (void)dealloc;
- (id)textAttributesForState:(unsigned long long)arg1;
- (void)setTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2 isMini:(_Bool)arg3;
- (id)anyDividerImage;
- (id)anyDividerImageForMini:(_Bool)arg1;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2 isMini:(_Bool)arg3 withFallback:(_Bool)arg4;
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 isMini:(_Bool)arg4;
- (id)backgroundImageForState:(unsigned long long)arg1 isMini:(_Bool)arg2;
- (id)backgroundImageForState:(unsigned long long)arg1 isMini:(_Bool)arg2 withFallback:(_Bool)arg3;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 isMini:(_Bool)arg3;
- (id)contentPositionOffsetForSegment:(long long)arg1 inMiniBar:(_Bool)arg2;
- (id)contentPositionOffsetForSegment:(long long)arg1 inMiniBar:(_Bool)arg2 noFallback:(_Bool)arg3;
- (void)setContentPositionOffset:(id)arg1 forSegment:(long long)arg2 inMiniBar:(_Bool)arg3;
- (double)backgroundPositionAdjustmentForBarMetrics:(long long)arg1;
- (void)setBackgroundPositionAdjustment:(double)arg1 forBarMetrics:(long long)arg2;
- (_Bool)wantsTrackingSuppressed;

@end

__attribute__((visibility("hidden")))
@interface _UISegmentedControlBackgroundView : UIImageView
{
    UIImageView *_shadowView;
}

@property(nonatomic) UIImageView *shadowView; // @synthesize shadowView=_shadowView;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIServiceWebView : UIWebView
{
    _Bool _shouldDecidePolicyRemotely;
    _UIServiceWebViewController *_serviceWebViewController;
}

@property(nonatomic) _Bool shouldDecidePolicyRemotely; // @synthesize shouldDecidePolicyRemotely=_shouldDecidePolicyRemotely;
@property(nonatomic) _UIServiceWebViewController *serviceWebViewController; // @synthesize serviceWebViewController=_serviceWebViewController;
- (id)_makeAlertView;
- (void)_webView:(id)arg1 dismissViewControllerAnimated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)_webView:(id)arg1 presentViewController:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface _UIServiceWebViewController : UIViewController <_UIServiceWebViewControllerProtocol, WebUIBrowserLoadingControllerDelegate>
{
    _UIServiceWebView *_uiWebView;
    WebUIBrowserLoadingController *_loadingController;
}

+ (id)_exportedInterface;
+ (id)_remoteViewControllerInterface;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)stopLoading;
- (void)reload;
- (void)goForward;
- (void)goBack;
- (void)loadUserTypedAddress:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadEncodedRequest:(id)arg1;
- (void)browserLoadingControllerDidUpdateURLString:(id)arg1;
- (void)browserLoadingControllerDidUpdateTitle:(id)arg1;
- (void)browserLoadingControllerDidUpdateBackForward:(id)arg1;
- (void)browserLoadingController:(id)arg1 didFinishLoadingWithError:(id)arg2 dataSource:(id)arg3;
- (void)browserLoadingControllerDidStartLoading:(id)arg1;
- (void)browserLoadingControllerDidUpdateEstimatedProgress:(id)arg1;
- (void)dealloc;
- (void)loadView;
- (id)_makeAlertView;
- (void)_webContentSizeWithReplyHandler:(CDUnknownBlockType)arg1;
- (void)configureWithEncodedSettings:(id)arg1;
- (void)_remotelyDispatchDidDismissViewController;
- (void)_remotelyDispatchWillPresentViewControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_remotelyDecidePolicyForRequest:(id)arg1 inMainFrame:(_Bool)arg2 navigationType:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (void)setShouldDecidePolicyRemotely:(_Bool)arg1;
- (void)_willAppearInRemoteViewController;
- (_Bool)_isInternalInstall;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UISettingsGroup : _UISettings <NSFastEnumeration>
{
    NSMutableArray *_internal_group;
    NSHashTable *_internal_groupObservers;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)_sendMove:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (void)_sendRemove:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_sendInsert:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)settings:(id)arg1 changedValueForKeyPath:(id)arg2;
- (void)_stopObservingPropertiesAndChildren;
- (void)_startObservingPropertiesAndChildren;
- (_Bool)_hasObservers;
- (void)_addInternalEntriesToArchiveDictionary:(id)arg1;
- (void)setValuesFromModel:(id)arg1;
- (id)archiveDictionary;
- (void)removeGroupObserver:(id)arg1;
- (void)addGroupObserver:(id)arg1;
- (id)valueForUndefinedKey:(id)arg1;
- (void)enumerateSettingsUsingBlock:(CDUnknownBlockType)arg1;
- (void)moveSettingsAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)moveSettings:(id)arg1 toIndex:(unsigned long long)arg2;
- (void)removeSettingsAtIndex:(unsigned long long)arg1;
- (void)removeSettings:(id)arg1;
- (void)insertSettings:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addSettings:(id)arg1;
- (unsigned long long)indexOfSettings:(id)arg1;
- (_Bool)containsSettings:(id)arg1;
- (id)settingsAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (void)_completeInitByApplyingArchiveDictionary:(id)arg1;
- (void)_continueInitBySettingDefaultValues;
- (id)_startInit;

@end

__attribute__((visibility("hidden")))
@interface _UIShortDefinitionView : UIView
{
    _UIDefinitionValue *_definitionValue;
    UITextView *_definitionTextView;
}

@property(retain, nonatomic) _UIDefinitionValue *definitionValue;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIShortPlacardButton : UIButton
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISimulatedApplicationResizeGestureRecognizerDelegate : NSObject <UIGestureRecognizerDelegate>
{
    UISwipeGestureRecognizer *_shrinkGesture;
    UISwipeGestureRecognizer *_growGesture;
}

@property(retain, nonatomic) UISwipeGestureRecognizer *growGesture; // @synthesize growGesture=_growGesture;
@property(retain, nonatomic) UISwipeGestureRecognizer *shrinkGesture; // @synthesize shrinkGesture=_shrinkGesture;
- (void)dealloc;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleGrowGesture:(id)arg1;
- (void)handleShrinkGesture:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISiriStreamingManager : NSObject
{
    UITextView *_textView;
    UIView *_siriItemView;
    NSLayoutManager *_streamingLayoutManager;
    NSTextStorage *_streamingTextStorage;
    NSTextContainer *_streamingTextContainer;
    NSMutableArray *_words;
    NSMutableArray *_wordTokens;
    NSArray *_wordsToSetAfterAnimations;
    unsigned long long _firstIndexToRemoveAfterLineChangeClearingAnimation;
    _Bool _isPerformingLineChangeClearingAnimation;
    _Bool _commitResultsAfterDynamicsFinish;
    _Bool _waitingForDynamicsBehaviorToStop;
}

@property(readonly, nonatomic) NSTextStorage *streamingTextStorage; // @synthesize streamingTextStorage=_streamingTextStorage;
@property(readonly, nonatomic) NSTextContainer *streamingTextContainer; // @synthesize streamingTextContainer=_streamingTextContainer;
@property(readonly, nonatomic) NSLayoutManager *streamingLayoutManager; // @synthesize streamingLayoutManager=_streamingLayoutManager;
@property(copy, nonatomic) NSArray *words; // @synthesize words=_words;
- (void)behaviorDidStop:(id)arg1;
- (void)animateText;
- (void)_commitFinalResults;
- (void)commitFinalResults;
- (void)dealloc;
- (id)initWithTextView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISiriTrackingItem : NSObject
{
    _Bool _deleted;
    _Bool _isABigReplacement;
    _Bool _isASmallReplacement;
    _Bool _isAnIntroduction;
    UIImageView *_animatedView;
    UIColor *_textColor;
    double _offscreenXLocation;
    CDUnknownBlockType _animationCompletionHandler;
    UIImage *_capturedGlyphImage;
    struct _NSRange _textRange;
    struct _NSRange _glyphRange;
    struct CGRect _targetFrame;
}

@property(retain, nonatomic) UIImage *capturedGlyphImage; // @synthesize capturedGlyphImage=_capturedGlyphImage;
@property(nonatomic) _Bool isAnIntroduction; // @synthesize isAnIntroduction=_isAnIntroduction;
@property(nonatomic) _Bool isASmallReplacement; // @synthesize isASmallReplacement=_isASmallReplacement;
@property(nonatomic) _Bool isABigReplacement; // @synthesize isABigReplacement=_isABigReplacement;
@property(copy, nonatomic) CDUnknownBlockType animationCompletionHandler; // @synthesize animationCompletionHandler=_animationCompletionHandler;
@property(nonatomic) struct CGRect targetFrame; // @synthesize targetFrame=_targetFrame;
@property(nonatomic) double offscreenXLocation; // @synthesize offscreenXLocation=_offscreenXLocation;
@property(nonatomic) struct _NSRange glyphRange; // @synthesize glyphRange=_glyphRange;
@property(nonatomic) struct _NSRange textRange; // @synthesize textRange=_textRange;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIImageView *animatedView; // @synthesize animatedView=_animatedView;
- (id)description;
- (void)captureGlyphsInRect:(struct CGRect)arg1 containerOrigin:(struct CGPoint)arg2 fromLayoutManager:(id)arg3;
- (void)animateOut;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)dealloc;
- (id)init;

@end

@interface _UISiriTranscriptTextView : UITextView
{
}

@end

@interface _UISiriWaveyView : UIView
{
    struct {
        CDStruct_23957544 m_axisX;
        CDStruct_23957544 m_axisY;
        CDStruct_23957544 m_axisZ;
        CDStruct_23957544 m_trans;
    } _projection;
    CADisplayLink *_displayLink;
    EAGLContext *_eaglContext;
    unsigned int _framebufferHandle;
    unsigned int _renderbufferHandle;
    unsigned int _vertexBufferHandle;
    unsigned int _textureHandle;
    unsigned int _programHandle;
    int _attribPosition;
    int _uniformProjection;
    int _uniformOpacity;
    int _uniformLineWidth;
    int _uniformPowerLevel;
    int _uniformDisplayWidth;
    int _uniformTimeOffset;
    int _uniformTexture;
    int _viewWidth;
    int _viewHeight;
    float _projection11;
    double _startTime;
    const float *_lineWidth;
    float _runningPowerLevels[5];
    unsigned int _powerPointer;
    _Bool _isInitialized;
    _Bool _justStarted;
    int _state;
    int _mode;
    id <_UISiriWaveyViewDelegate> _delegate;
}

+ (Class)layerClass;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) id <_UISiriWaveyViewDelegate> delegate; // @synthesize delegate=_delegate;
- (float)_currentMicPowerLevel;
- (float)_powerLevelForMicPower:(float)arg1;
- (float)_updateMedianWithNewValue:(float)arg1;
- (void)_updateCurveLayer:(id)arg1;
- (_Bool)inDictationMode;
- (_Bool)inSiriMode;
- (void)startListening;
- (void)start;
- (void)_tearDownDisplayLink;
- (void)layoutSubviews;
- (void)_updateOrthoProjection;
- (_Bool)_resizeFromLayer:(id)arg1;
- (void)_cleanupGL;
- (_Bool)_initGL;
- (_Bool)_setupTexture;
- (_Bool)_setupVertexBuffer;
- (_Bool)_setupShaders;
- (_Bool)_setupFramebuffer;
- (void)_setupDisplayLink;
- (void)setHidden:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISizeTrackingView : UIView <_UIScrollToTopView>
{
    _UIRemoteViewController *_remoteViewController;
    id _viewControllerOperatorProxy;
    id _textEffectsOperatorProxy;
    _Bool _hasIntrinsicContentSize;
    struct CGSize _intrinsicContentSize;
}

+ (id)viewWithRemoteViewController:(id)arg1 viewControllerOperatorProxy:(id)arg2 textEffectsOperatorProxy:(id)arg3;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (void)_scrollToTopFromTouchAtScreenLocation:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (_Bool)isScrollEnabled;
- (void)_geometryChanged:(unsigned long long)arg1 forAncestor:(id)arg2;
- (void)_updateTextEffectsGeometries:(struct CGRect)arg1;
- (void)updateIntrinsicContentSize:(struct CGSize)arg1;
- (struct CGSize)_intrinsicSizeWithinSize:(struct CGSize)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UISlidingPopoverLayoutInfo : _UIPopoverLayoutInfo
{
}

- (void)_updateOutputs;
- (struct CGSize)_popoverViewSizeForContentSize:(struct CGSize)arg1 arrowDirection:(unsigned long long)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UISlotIdWrapper : NSObject
{
    unsigned int _slotId;
}

- (void)dealloc;
- (id)initWithSlotId:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISnapshotWindow : UIWindow
{
}

+ (_Bool)_isSystemWindow;
- (_Bool)_canBecomeKeyWindow;
- (void)_setFirstResponder:(id)arg1;
- (_Bool)_isSettingFirstResponder;

@end

__attribute__((visibility("hidden")))
@interface _UIStateRestorationKeyedArchiverDelegate : NSObject <NSKeyedArchiverDelegate>
{
}

+ (id)sharedDelegate;
- (id)archiver:(id)arg1 willEncodeObject:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIStaticScrollBar : UIView
{
    UIButton *_upButton;
    UIButton *_downButton;
    UIView *_dividerLine;
    NSInvocation *_invocation;
    NSArray *_buttonConstraints;
    _Bool _shouldInsetButtons;
}

@property(nonatomic) _Bool shouldInsetButtons; // @synthesize shouldInsetButtons=_shouldInsetButtons;
- (struct CGRect)centeringBounds;
- (void)_updateButtonConstraints;
- (void)buttonTapped:(id)arg1;
- (void)setTarget:(id)arg1 forAction:(SEL)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIStatusBarCache : NSObject
{
    CPBitmapStore *_store;
}

+ (id)sharedInstance;
- (void)removeImagesInGroup:(id)arg1;
- (void)cacheImage:(id)arg1 named:(id)arg2 forGroup:(id)arg3;
- (_Bool)_canCacheImages;
- (id)imageNamed:(id)arg1 forGroup:(id)arg2 withScale:(double)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIStatusBarStateStackInfo : NSObject
{
    int _hostPID;
    long long _statusBarOrientationWithoutHost;
    double _statusBarHeightWithoutHost;
}

@property int hostPID; // @synthesize hostPID=_hostPID;
@property double statusBarHeightWithoutHost; // @synthesize statusBarHeightWithoutHost=_statusBarHeightWithoutHost;
@property long long statusBarOrientationWithoutHost; // @synthesize statusBarOrientationWithoutHost=_statusBarOrientationWithoutHost;

@end

__attribute__((visibility("hidden")))
@interface _UIStepperButton : UIButton
{
    _Bool _left;
}

@property(nonatomic, getter=isLeft) _Bool left; // @synthesize left=_left;
- (_Bool)_shouldDefaultToTemplatesForImageViewBackground:(_Bool)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIStoryboardProxy : NSObject
{
    UIStoryboard *_storyboard;
}

- (void)dealloc;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithStoryboard:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UISwappableImageViewAnimationProxy : NSObject
{
    id _originalObject;
}

- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UISwitchInfo : NSObject
{
    int imageState;
    UIImage *images[8];
    UIView *rightEdgeView;
    UIView *leftEdgeView;
    double position;
    UIColor *onButtonColor;
    CALayer *maskLayer;
    struct {
        unsigned int on:1;
        unsigned int pressed:1;
        unsigned int useAlternateColors:1;
        unsigned int skipValueChangedAction:1;
    } _switchFlags;
}

- (void)setMinimumTrackImage:(id)arg1 forStates:(unsigned long long)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UISwitchInternalView : UIView <_UISwitchInternalViewProtocol>
{
    UIImage *_colorMask;
    UIImage *_shapeMask;
    UIImage *_shapeShadow;
    UIImage *_thumb;
    UIImage *_thumbPressed;
    double _position;
    _Bool _pressed;
    UIImageView *_colorView;
    UIImageView *_thumbView;
    UIImageView *_labelView;
    UIColor *_onTintColor;
    UIColor *_tintColor;
    UIColor *_thumbTintColor;
    UIColor *_nonAlternateColor;
    UIImage *_onImage;
    UIImage *_offImage;
    _Bool _on;
    _Bool _sendAction;
    _Bool _useAlternateColor;
    _Bool _animating;
    UIImageView *_idleImageView;
    UIView *_interactiveView;
    CALayer *_backgroundLayer;
}

+ (id)_defaultOnTintColor;
@property(retain, nonatomic) UIColor *thumbTintColor; // @synthesize thumbTintColor=_thumbTintColor;
@property(nonatomic) _Bool useAlternateColor; // @synthesize useAlternateColor=_useAlternateColor;
@property(nonatomic) _Bool on; // @synthesize on=_on;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(retain, nonatomic) UIColor *onTintColor; // @synthesize onTintColor=_onTintColor;
@property(retain, nonatomic) UIImage *offImage;
@property(retain, nonatomic) UIImage *onImage;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_buildControl;
- (void)_setupThumbImages;
- (void)_setupBackgroundLayer;
- (id)_labelImage;
- (id)_colorImage;
- (_Bool)sendAction;
- (void)setSendAction:(_Bool)arg1;
- (void)_setPressed:(_Bool)arg1;
- (void)_onAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_sendActions;
- (void)_setOn:(_Bool)arg1 animated:(_Bool)arg2 force:(_Bool)arg3;
- (void)_setProgress:(double)arg1 animated:(_Bool)arg2 withDuration:(double)arg3 force:(_Bool)arg4 sendAction:(_Bool)arg5;
- (void)_setProgress:(double)arg1;
- (void)_cleanUpAfterAnimating;
- (void)_prepareForInteraction;
- (id)_snapshotImage;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_setOnTintColor:(id)arg1;
- (void)_setPressed:(_Bool)arg1 on:(_Bool)arg2 animated:(_Bool)arg3 shouldAnimateLabels:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISwitchInternalViewNeueStyle1 : UIView <_UISwitchInternalViewProtocol>
{
    UIView *_switchWellView;
    UIView *_leftSwitchWellView;
    UIView *_switchWellContainerView;
    UIView *_leftSwitchWellContainerView;
    UIView *_switchWellImageViewContainer;
    UIImageView *_switchWellOffImageView;
    UIImageView *_switchWellOnImageView;
    UIImageView *_knobView;
    UIColor *_onTintColor;
    UIColor *_tintColor;
    _Bool _on;
    _Bool _pressed;
    _Bool _isAlwaysAccessible;
    _Bool _useAlternateColor;
    _Bool _pressedIsHandledByGestureRecognizer;
    UIColor *_thumbTintColor;
    UIImage *_onImage;
    UIImage *_offImage;
}

@property(nonatomic) _Bool pressedIsHandledByGestureRecognizer; // @synthesize pressedIsHandledByGestureRecognizer=_pressedIsHandledByGestureRecognizer;
@property(retain, nonatomic) UIImage *offImage; // @synthesize offImage=_offImage;
@property(retain, nonatomic) UIImage *onImage; // @synthesize onImage=_onImage;
@property(nonatomic) _Bool useAlternateColor; // @synthesize useAlternateColor=_useAlternateColor;
@property(nonatomic) _Bool on; // @synthesize on=_on;
@property(retain, nonatomic) UIColor *thumbTintColor; // @synthesize thumbTintColor=_thumbTintColor;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(retain, nonatomic) UIColor *onTintColor; // @synthesize onTintColor=_onTintColor;
- (void)_setPressed:(_Bool)arg1 on:(_Bool)arg2 animated:(_Bool)arg3 shouldAnimateLabels:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_prepareForInteraction;
- (void)_cleanUpAfterAnimating;
- (void)setSendAction:(_Bool)arg1;
- (void)_setPressed:(_Bool)arg1;
- (void)_setPressed:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setOn:(_Bool)arg1 animated:(_Bool)arg2 force:(_Bool)arg3;
- (void)_setProgress:(double)arg1;
- (void)_setProgress:(double)arg1 animated:(_Bool)arg2 withDuration:(double)arg3 force:(_Bool)arg4 sendAction:(_Bool)arg5;
- (void)_accessibilitySettingChanged;
@property(nonatomic) _Bool isAlwaysAccessible;
- (_Bool)_shouldDrawAccessibly;
- (id)_effectiveOffImageTintColor;
- (id)_effectiveOnImageTintColor;
- (_Bool)_shouldUseLightTintOverColor:(id)arg1;
- (id)_accessibleOffImage;
- (id)_accessibleOnImage;
- (id)_effectiveOffImage;
- (id)_effectiveOnImage;
- (id)_effectiveThumbImage;
- (id)_effectiveOffTextColor;
- (id)_effectiveTintColor;
- (id)_defaultOnTintColor;
- (id)_effectiveOnTintColor;
- (id)_labelOpacityAnimation;
- (id)_switchSpringAnimationWithKeyPath:(id)arg1 fromValue:(id)arg2 toValue:(id)arg3 pressed:(_Bool)arg4;
- (id)_switchTrackColorAnimationWithFromValue:(id)arg1 toValue:(id)arg2;
- (id)_switchTrackAnimationWithFromValue:(id)arg1 toValue:(id)arg2 on:(_Bool)arg3;
- (struct CGPoint)_onImagePosition;
- (struct CGPoint)_offImagePosition;
- (struct CGColor *)_wellColorOn:(_Bool)arg1;
- (double)_wellBorderWidthPressed:(_Bool)arg1 on:(_Bool)arg2;
- (struct CGPoint)_leftSwitchWellContainerPositionOn:(_Bool)arg1 pressed:(_Bool)arg2;
- (struct CGRect)_leftSwitchWellContainerBoundsOn:(_Bool)arg1 pressed:(_Bool)arg2;
- (struct CGPoint)_switchWellPositionOn:(_Bool)arg1 pressed:(_Bool)arg2;
- (struct CGPoint)_switchWellContainerPositionOn:(_Bool)arg1 pressed:(_Bool)arg2;
- (struct CGRect)_switchWellContainerBoundsOn:(_Bool)arg1 pressed:(_Bool)arg2;
- (struct CGPoint)_knobPositionOn:(_Bool)arg1 pressed:(_Bool)arg2 forBounds:(struct CGRect)arg3;
- (struct CGRect)_knobBoundsPressed:(_Bool)arg1;
- (void)_transitionImagesToPressed:(_Bool)arg1 on:(_Bool)arg2 animated:(_Bool)arg3;
- (void)_transitionWellViewToOn:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_transitionWellViewToPressed:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_transitionKnobToOn:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_transitionKnobToPressed:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_transitionKnobToPressed:(_Bool)arg1 on:(_Bool)arg2 animated:(_Bool)arg3;
- (struct CGRect)_frameForLeftAlignmentOfView:(id)arg1;
- (id)_maskLayerForImageViews;
- (void)_orderSubviews;
- (void)_invalidateOnOffImages;
- (void)_invalidateKnob;
- (void)_invalidateWell;
- (void)_invalidateControl;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UISystemGestureGateGestureRecognizer : UIGestureRecognizer
{
    unsigned int _systemGesturesRecognitionPossible:1;
    unsigned int _waitingForSystemGestureStateNotification:1;
    double _lastTouchTime;
    NSTimer *_delayTimeoutTimer;
}

- (id)_gateGestureTypeString;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)canBePreventedByGestureRecognizer:(id)arg1;
- (_Bool)canPreventGestureRecognizer:(id)arg1;
- (_Bool)_shouldBeRequiredToFailByGestureRecognizer:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_timeOut;
- (int)_gateGestureType;
- (void)_systemGestureStateChanged:(id)arg1;
- (void)_resetGestureRecognizer;
- (void)dealloc;
- (id)initWithWindow:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UITabBarAppearanceStorage : NSObject
{
    NSMutableDictionary *_dividerImages;
    UIImage *backgroundImage;
    UIImage *shadowImage;
    UIImage *selectionIndicatorImage;
    UIColor *barTintColor;
    UIColor *selectedImageTintColor;
    _UITabBarItemAppearanceStorage *tabItemAppearanceStorage;
}

@property(retain, nonatomic) UIColor *selectedImageTintColor; // @synthesize selectedImageTintColor;
@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor;
@property(retain, nonatomic) UIImage *selectionIndicatorImage; // @synthesize selectionIndicatorImage;
@property(retain, nonatomic) UIImage *shadowImage; // @synthesize shadowImage;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage;
- (void)dealloc;
@property(readonly, copy, nonatomic) NSDictionary *dividerImagesForCoding;
- (id)_dividerImageForLeftButtonState:(unsigned long long)arg1 rightButtonState:(unsigned long long)arg2;
- (void)_setDividerImage:(id)arg1 forLeftButtonState:(unsigned long long)arg2 rightButtonState:(unsigned long long)arg3;
- (id)_tabItemAppearanceStorage;
@property(retain, nonatomic) _UITabBarItemAppearanceStorage *tabItemAppearanceStorage;

@end

__attribute__((visibility("hidden")))
@interface _UITabBarBackgroundView : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UITabBarItemAppearanceStorage : _UIBarItemAppearanceStorage
{
    NSValue *titleOffset;
}

@property(retain, nonatomic) NSValue *titleOffset; // @synthesize titleOffset;
- (void)dealloc;

@end

@interface _UITableViewCellActionButton : UIButton
{
    UITableViewRowAction *_action;
    unsigned long long _style;
    UIVisualEffect *_backgroundEffect;
}

+ (id)actionButtonWithStyle:(unsigned long long)arg1;
@property(copy, nonatomic) UIVisualEffect *backgroundEffect; // @synthesize backgroundEffect=_backgroundEffect;
@property(nonatomic) unsigned long long style;
@property(retain, nonatomic) UITableViewRowAction *action;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellBadge : UIView
{
    _Bool _isSelected;
    NSString *_text;
    struct CGSize _textSize;
}

@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_isSelected;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void)drawRect:(struct CGRect)arg1;
- (void)setIsSelected:(_Bool)arg1;
- (_Bool)isHighlighted;
- (void)setHighlighted:(_Bool)arg1;
- (void)_sizeToFit;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellDeleteConfirmationControl_Legacy : UIControl
{
    NSString *_title;
}

+ (id)_highlightedBackgroundImage;
+ (id)_backgroundImage;
+ (struct CGSize)defaultSizeForTitle:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) struct CGSize size;
- (void)dealloc;
- (id)initWithTitle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellEditControlMinusView : UIView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellGrabber : UIControl
{
    UITableViewCell *_cell;
    struct CGPoint _downPoint;
}

+ (id)grabberImage;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)shouldTrack;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 tableViewCell:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellOldEditingData : NSObject
{
    UIRemoveControl *_removeControl;
    UIControl *_grabber;
    UIView *_separator;
}

@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separator;
@property(retain, nonatomic) UIControl *reorderControl; // @synthesize reorderControl=_grabber;
- (void)dealloc;
- (_Bool)dataRequired;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellRemoveControl : UIRemoveControl
{
    float _verticalOffset;
}

- (float)_verticalOffsetFromTarget;
- (id)initWithTarget:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewCellSeparatorView : UIView
{
    _Bool _drawsWithVibrantLightMode;
    UIView *_backgroundView;
    UIView *_overlayView;
    UIVisualEffect *_separatorEffect;
    UIVisualEffectView *_effectView;
}

@property(retain, nonatomic) UIVisualEffect *separatorEffect; // @synthesize separatorEffect=_separatorEffect;
@property(nonatomic) _Bool drawsWithVibrantLightMode; // @synthesize drawsWithVibrantLightMode=_drawsWithVibrantLightMode;
- (void)layoutSubviews;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewDeleteAnimationSupport : NSObject
{
    NSMutableArray *_cellsToDeleteAfterAnimation;
    int _deleteCount;
    unsigned int _enabledStateBeforeDeleteAnimation:1;
    unsigned int _reserved:30;
}

@end

__attribute__((visibility("hidden")))
@interface _UITableViewHeaderFooterContentView : UIView
{
}

- (void)updateConstraintsIfNeeded;
- (void)setBackgroundColor:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewHeaderFooterViewBackground : UIView
{
    UIView *_opaqueBackgroundView;
    UIView *_transparentBackgroundView;
}

- (void)setOpaque:(_Bool)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)_updateBackingView;
- (id)_transparentBackgroundView;
- (id)_opaqueBackgroundView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewHeaderFooterViewLabel : UILabel
{
    struct CGSize _patternPhase;
}

- (void)drawRect:(struct CGRect)arg1;
@property(nonatomic) struct CGSize patternPhase;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewIndexEntry : NSObject
{
    UIImage *_image;
    id _line;
    struct CGPoint _baselinePoint;
    struct CGRect _bounds;
    struct CGRect _typeBounds;
}

@property(nonatomic) struct CGPoint baselinePoint; // @synthesize baselinePoint=_baselinePoint;
@property(nonatomic) struct CGRect typeBounds; // @synthesize typeBounds=_typeBounds;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) id line; // @synthesize line=_line;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewReorderingSupport : NSObject
{
    UITableViewCell *_reorderedCell;
    NSIndexPath *_initialIndexPath;
    NSIndexPath *_targetIndexPath;
    unsigned int _oldShowHorizontalScrollIndicator:1;
    unsigned int _oldShowVerticalScrollIndicator:1;
    unsigned int _reloadDataCalled:1;
    unsigned int _reorderingCancelled:1;
    unsigned int _reserved:28;
    NSTimer *_autoscrollTimer;
    UIShadowView *_topShadowView;
    UIShadowView *_bottomShadowView;
    _Bool _wasScrollingEnabled;
}

@end

__attribute__((visibility("hidden")))
@interface _UITableViewSeparatorView : UIView
{
    UITableViewCell *_tableCell;
    UITableView *_table;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 withTable:(id)arg2;
- (id)initWithTableCell:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITableViewUpdateSupport : NSObject
{
    long long oldSection;
    long long newSection;
    long long oldGlobalRow;
    long long newGlobalRow;
    UITableView *tableView;
    struct _NSRange visibleRows;
    NSArray *updateItems;
    UITableViewRowData *oldRowData;
    UITableViewRowData *newRowData;
    struct _NSRange oldRowRange;
    struct _NSRange newRowRange;
    NSMutableIndexSet *rows;
    NSMutableIndexSet *movedRows;
    NSMutableIndexSet *movedSections;
    struct CGRect oldTableViewVisibleBounds;
    struct CGRect newTableViewVisibleBounds;
    struct CGRect tableViewVisibleBoundsUnion;
    double tableViewVisibleBoundsOffset;
    long long oldSectionCount;
    long long newSectionCount;
    long long *oldSectionMap;
    long long *newSectionMap;
    long long oldGlobalRowCount;
    long long newGlobalRowCount;
    long long *oldGlobalRowMap;
    long long *newGlobalRowMap;
    id *animatedCells;
    id *animatedHeaders;
    id *animatedFooters;
    long long globalReorderingRow;
    id _context;
    NSMutableArray *viewAnimations;
    NSMutableArray *deletedSections;
    NSMutableArray *insertedSections;
    NSMutableArray *gaps;
}

- (void)dealloc;
- (void)_setupAnimations;
- (id)initWithTableView:(id)arg1 updateItems:(id)arg2 oldRowData:(id)arg3 newRowData:(id)arg4 oldRowRange:(struct _NSRange)arg5 newRowRange:(struct _NSRange)arg6 context:(id)arg7;
- (void)_setupAnimationForTableFooter;
- (void)_setupAnimationForTableHeader;
- (void)_setupAnimationsForExistingHeadersAndFooters;
- (void)_setupAnimationsForExistingOffscreenCells;
- (void)_setupDeleteAnimationForFooterInSection:(long long)arg1 withTargetRect:(struct CGRect)arg2 forUpdateItem:(id)arg3;
- (void)_setupDeleteAnimationForHeaderInSection:(long long)arg1 withTargetRect:(struct CGRect)arg2 forUpdateItem:(id)arg3;
- (void)_setupAnimationsForDeletedHeadersAndFooters;
- (void)_setupAnimationsForDeletedCells;
- (void)_addBottomShadowViewViewForViewAnimation:(id)arg1;
- (id)_imageViewForView:(id)arg1;
- (void)_setupInsertAnimationForFooterInSection:(long long)arg1 withTargetRect:(struct CGRect)arg2 forUpdateItem:(id)arg3;
- (void)_setupInsertAnimationForHeaderInSection:(long long)arg1 withTargetRect:(struct CGRect)arg2 forUpdateItem:(id)arg3;
- (void)_setupAnimationsForInsertedHeadersAndFooters;
- (void)_setupAnimationsForNewlyInsertedCells;
- (void)_setupAnimationForReorderingRow;
- (void)_setupAnimationsForExistingVisibleCells;
- (void)_computeAutomaticAnimationTypes;
- (void)_computeGaps;
- (void)_setupAnimationStructures;
- (void)_computeRowUpdates;
- (void)_computeSectionUpdates;
- (void)_computeVisibleBounds;
- (_Bool)_isReloadSectionUpdate;
- (void)_validateAnimatedCells;

@end

__attribute__((visibility("hidden")))
@interface _UITextAttachmentImageView : UIImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UITextAttachmentPlaceholderView : UIView
{
}

- (void)dealloc;
- (id)initWithData:(id)arg1 ofType:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UITextContainerView : UIView <NSUITextViewCommonMethods>
{
    struct UIEdgeInsets _textContainerInset;
    struct CGPoint _textContainerOrigin;
    struct CGSize _minSize;
    struct CGSize _maxSize;
    NSTextContainer *_textContainer;
    NSDictionary *_linkTextAttributes;
    struct {
        unsigned int textContainerOriginInvalid:1;
        unsigned int verticalLayout:2;
        unsigned int horizontallyResizable:1;
        unsigned int verticallyResizable:1;
    } _tcvFlags;
}

+ (Class)layerClass;
@property(copy, nonatomic) NSDictionary *linkTextAttributes; // @synthesize linkTextAttributes=_linkTextAttributes;
@property(nonatomic) struct CGSize maxSize; // @synthesize maxSize=_maxSize;
@property(nonatomic) struct CGSize minSize; // @synthesize minSize=_minSize;
@property(nonatomic) NSTextContainer *textContainer; // @synthesize textContainer=_textContainer;
@property(nonatomic) _Bool usesTiledViews;
- (struct CGRect)visibleRect;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct _NSRange markedRange;
@property(nonatomic) long long layoutOrientation;
- (struct _NSRange)_extendedGlyphRangeForRange:(struct _NSRange)arg1 maxGlyphIndex:(unsigned long long)arg2 drawingToScreen:(_Bool)arg3;
- (_Bool)_ensureLayoutCompleteForRect:(struct CGRect)arg1 withExtension:(_Bool)arg2;
- (_Bool)_ensureLayoutCompleteForRect:(struct CGRect)arg1 withExtensionFactor:(double)arg2 minimumExtensionDistance:(double)arg3 repetitions:(unsigned long long)arg4;
- (void)_ensureLayoutCompleteToEndOfCharacterRange:(struct _NSRange)arg1;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1 avoidAdditionalLayout:(_Bool)arg2;
- (void)updateInsertionPointStateAndRestartTimer:(_Bool)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)_didScroll;
- (void)sizeToFit;
@property(nonatomic, getter=isVerticallyResizable) _Bool verticallyResizable;
@property(nonatomic, getter=isHorizontallyResizable) _Bool horizontallyResizable;
- (void)setConstrainedFrameSize:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_ensureMinAndMaxSizesConsistentWithBounds;
- (void)invalidateTextContainerOrigin;
- (struct CGPoint)textContainerOrigin;
@property(nonatomic) struct UIEdgeInsets textContainerInset;
- (void)tintColorDidChange;
- (id)delegate;
- (void)setDelegate:(id)arg1;
@property(readonly, nonatomic) NSTextStorage *textStorage;
@property(readonly, nonatomic) NSLayoutManager *layoutManager;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UITextDocumentInterface : UIInputViewControllerInterface <UITextDocumentProxy>
{
    id <_UITextDocumentInterfaceDelegate> _delegate;
    _UIInputViewControllerState *_controllerState;
    _UIInputViewControllerOutput *_controllerOutput;
}

@property(retain, nonatomic, getter=_controllerOutput) _UIInputViewControllerOutput *controllerOutput; // @synthesize controllerOutput=_controllerOutput;
@property(retain, nonatomic, getter=_controllerState) _UIInputViewControllerState *controllerState; // @synthesize controllerState=_controllerState;
@property(nonatomic, getter=_delegate) id <_UITextDocumentInterfaceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_setShouldAdvanceInputMode;
- (void)_setShouldDismiss;
- (void)_setPrimaryLanguage:(id)arg1;
- (void)_didPerformOutputOperation;
- (void)_willPerformOutputOperation;
- (void)_handleInputViewControllerState:(id)arg1;
- (void)adjustTextPositionByCharacterOffset:(long long)arg1;
@property(readonly, nonatomic) NSString *documentContextAfterInput;
@property(readonly, nonatomic) NSString *documentContextBeforeInput;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@property(readonly, nonatomic, getter=_keyboardOutput) TIKeyboardOutput *keyboardOutput;
@property(readonly, nonatomic, getter=_textInputTraits) TITextInputTraits *textInputTraits;
@property(readonly, nonatomic, getter=_documentState) TIDocumentState *documentState;
- (void)_createControllerOutputIfNecessary;
- (void)setForwardingInterface:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UITextEffectsRemoteView : _UIRemoteView
{
    _UIRemoteViewController *_remoteViewController;
}

+ (_Bool)_requiresWindowTouches;
@property(nonatomic) _UIRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
- (int)textEffectsVisibilityLevel;

@end

__attribute__((visibility("hidden")))
@interface _UITextFieldPasscodeCutoutBackground : UITextFieldBackgroundView
{
    _Bool _customStrokeColor;
    _Bool _customFillColor;
    CAShapeLayer *_lighteningOutline;
    double _outlineAlpha;
    double _cornerRadius;
}

+ (id)_fillColor:(_Bool)arg1;
+ (id)_strokeColor:(_Bool)arg1;
+ (Class)layerClass;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (id)_fillColor:(_Bool)arg1;
- (id)_strokeColor:(_Bool)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)setEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setActive:(_Bool)arg1;
- (void)_updatePath;
- (void)_updateLightingOutlinePath;
@property(readonly, nonatomic) UIBezierPath *customPath;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (double)lineWidth;
- (void)setLineWidth:(double)arg1;
- (void)setLineWidth:(double)arg1 updatePath:(_Bool)arg2;
- (id)fillColor;
- (void)setFillColor:(id)arg1;
- (id)strokeColor;
- (void)setStrokeColor:(id)arg1;
- (void)dealloc;
@property(nonatomic) double outlineAlpha;
- (double)_pixelAlignment;
- (double)_pathInset;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 active:(_Bool)arg2;
- (id)_layer;

@end

__attribute__((visibility("hidden")))
@interface _UITextFieldPasscodeCutoutLabel : UITextFieldLabel
{
}

- (void)drawTextInRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITextInputControllerTokenizer : UITextInputStringTokenizer
{
    UITextInputController *_textInput;
    struct __CFStringTokenizer *_tokenizer;
    int _tokenizerType;
}

- (struct _NSRange)_getClosestTokenRangeForPosition:(id)arg1 granularity:(long long)arg2 downstream:(_Bool)arg3;
- (long long)_indexForTextPosition:(id)arg1;
- (id)_positionFromPosition:(id)arg1 offset:(unsigned long long)arg2 affinity:(long long)arg3;
- (_Bool)_isDownstreamForDirection:(long long)arg1 atPosition:(id)arg2;
- (long long)_writingDirectionAtPosition:(id)arg1;
- (void)invalidateTokenizer;
- (void)dealloc;
- (id)initWithTextInputController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITextKitSelectionRect : UITextSelectionRect
{
    struct CGRect _rect;
    _Bool _containsEnd;
    _Bool _containsStart;
    _Bool _vertical;
}

+ (id)selectionRectWithRect:(struct CGRect)arg1;
@property(nonatomic, getter=isVertical) _Bool vertical; // @synthesize vertical=_vertical;
@property(nonatomic) _Bool containsStart; // @synthesize containsStart=_containsStart;
@property(nonatomic) _Bool containsEnd; // @synthesize containsEnd=_containsEnd;
@property(nonatomic) struct CGRect rect; // @synthesize rect=_rect;
- (id)description;
- (long long)writingDirection;

@end

__attribute__((visibility("hidden")))
@interface _UITextKitTextPosition : UITextPosition
{
    long long _offset;
    long long _affinity;
}

+ (id)positionWithOffset:(long long)arg1 affinity:(long long)arg2;
+ (id)positionWithOffset:(long long)arg1;
@property long long affinity; // @synthesize affinity=_affinity;
@property long long offset; // @synthesize offset=_offset;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UITextKitTextRange : UITextRange <NSCopying>
{
    _UITextKitTextPosition *_start;
    _UITextKitTextPosition *_end;
}

+ (id)defaultRange;
+ (id)rangeWithRange:(struct _NSRange)arg1 affinity:(long long)arg2;
+ (id)rangeWithRange:(struct _NSRange)arg1;
+ (id)rangeWithStart:(id)arg1 end:(id)arg2;
@property(retain, nonatomic) UITextPosition *end; // @synthesize end=_end;
@property(retain, nonatomic) UITextPosition *start; // @synthesize start=_start;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (struct _NSRange)asRange;
- (_Bool)isEmpty;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) long long affinity;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UITextUndoManager : NSUndoManager
{
    UITextInputController *_inputController;
}

@property(nonatomic) UITextInputController *inputController; // @synthesize inputController=_inputController;
- (void)removeAllActions;

@end

__attribute__((visibility("hidden")))
@interface _UITextUndoOperationReplace : NSUndoTextOperation
{
    struct _NSRange _replacementRange;
    NSAttributedString *_attributedString;
}

- (void)undoRedo;
- (void)dealloc;
- (id)initWithAffectedRange:(struct _NSRange)arg1 inputController:(id)arg2 replacementRange:(struct _NSRange)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UITextUndoOperationSetAttributes : NSUndoTextOperation
{
    _NSAttributeRun *_attributes;
}

- (void)undoRedo;
- (void)dealloc;
- (id)initWithAffectedRange:(struct _NSRange)arg1 inputController:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UITextUndoOperationTyping : NSUndoTextOperation
{
    struct _NSRange _replacementRange;
    NSMutableAttributedString *_attributedString;
}

- (_Bool)supportsCoalescing;
- (void)undoRedo;
- (_Bool)coalesceAffectedRange:(struct _NSRange)arg1 replacementRange:(struct _NSRange)arg2 selectedRange:(struct _NSRange)arg3 textStorage:(id)arg4;
- (void)dealloc;
- (id)initWithAffectedRange:(struct _NSRange)arg1 inputController:(id)arg2 replacementRange:(struct _NSRange)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UITextViewInteractableItem : NSObject <_UIRotatingAlertControllerDelegate>
{
    _UIRotatingAlertController *_linkInteractionAlertController;
    _Bool _interactionIsFinished;
    UITextView *_textView;
    NSArray *_actions;
    NSDictionary *_defaultAction;
    UIWindow *_windowForActionSheetPresentation;
    struct _NSRange _range;
}

@property(retain, nonatomic) UIWindow *windowForActionSheetPresentation; // @synthesize windowForActionSheetPresentation=_windowForActionSheetPresentation;
@property(nonatomic) _Bool interactionIsFinished; // @synthesize interactionIsFinished=_interactionIsFinished;
@property(readonly, nonatomic) NSDictionary *defaultAction; // @synthesize defaultAction=_defaultAction;
@property(readonly, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(nonatomic) UITextView *textView; // @synthesize textView=_textView;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (void)_cleanupWindowForActionSheetPresentation;
- (void)_cleanupSheet;
- (void)_handleActionAndFinish:(id)arg1;
- (struct CGRect)presentationRectInHostViewForSheet:(id)arg1;
- (struct CGRect)initialPresentationRectInHostViewForSheet:(id)arg1;
- (id)hostViewForSheet:(id)arg1;
- (void)_showActionSheet;
@property(readonly, nonatomic) NSString *localizedTitle;
- (_Bool)allowHighlight;
- (_Bool)allowInteraction;
- (void)handleLongPress;
- (void)handleTap;
- (id)_actionSheet;

@end

__attribute__((visibility("hidden")))
@interface _UITextViewInteractableAttachment : _UITextViewInteractableItem
{
    NSTextAttachment *_attachment;
}

+ (id)interactableLinkWithAttachment:(id)arg1 range:(struct _NSRange)arg2;
@property(retain, nonatomic) NSTextAttachment *attachment; // @synthesize attachment=_attachment;
- (void)_saveToCameraRoll;
- (void)_copyImage;
- (id)defaultAction;
- (id)actions;
- (_Bool)allowInteraction;
- (id)_image;
- (id)localizedTitle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UITextViewInteractableLink : _UITextViewInteractableItem <DDDetectionControllerInteractionDelegate>
{
    NSURL *_link;
}

+ (id)interactableLinkWithURL:(id)arg1 range:(struct _NSRange)arg2;
@property(retain, nonatomic) NSURL *link; // @synthesize link=_link;
- (void)actionDidFinish:(id)arg1;
- (void)action:(id)arg1 didDismissAlertController:(id)arg2;
- (void)_dataDetectorAction:(id)arg1;
- (void)_linkInteractionCopyLink;
- (void)_linkInteractionAddToReadingList;
- (void)_linkInteractionOpenURL;
- (id)dataDetectorActionsForTextView:(id)arg1;
- (id)linkActions;
- (id)defaultAction;
- (id)actions;
- (_Bool)allowInteraction;
- (id)localizedTitle;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UITextViewRestorableScrollPosition : NSObject <NSCoding>
{
    struct _NSRange _range;
    double _offsetInLine;
}

+ (id)restorableScrollPositionWithDictionary:(id)arg1;
+ (id)restorableScrollPositionWithRange:(struct _NSRange)arg1;
+ (id)restorableScrollPositionForTextView:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithTextView:(id)arg1;
- (double)offsetWithinLine;
- (struct _NSRange)range;
- (id)dictionaryRepresentation;

@end

@interface _UITiltMotionEffect : UIMotionEffect
{
    double _maximumHorizontalTiltAngle;
    double _maximumVerticalTiltAngle;
    double _rotatingSphereRadius;
}

@property(nonatomic) double rotatingSphereRadius; // @synthesize rotatingSphereRadius=_rotatingSphereRadius;
@property(nonatomic) double maximumVerticalTiltAngle; // @synthesize maximumVerticalTiltAngle=_maximumVerticalTiltAngle;
@property(nonatomic) double maximumHorizontalTiltAngle; // @synthesize maximumHorizontalTiltAngle=_maximumHorizontalTiltAngle;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)keyPathsAndRelativeValuesForViewerOffset:(struct UIOffset)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UITintColorVisitor : _UIViewVisitor
{
    unsigned long long _reasons;
    _Bool _visitedViewIsWindow;
    _Bool _viewHasDefinedTintColor;
    _Bool _viewHasNonAutomaticTintAdjustmentMode;
    UIView *_originalVisitedView;
    UIView *_changedSubview;
}

- (_Bool)_prepareVisitor:(id)arg1 toVisitView:(id)arg2 changedSubview:(id)arg3 previousWindow:(id)arg4 previousSuperview:(id)arg5;
- (void)_prepareForView:(id)arg1 trackingHierarchy:(_Bool)arg2;
- (_Bool)_visitView:(id)arg1;
- (id)initWithNotificationReasons:(unsigned long long)arg1;
- (id)initWithTraversalDirection:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIToolbarAppearanceStorage : _UIBarAppearanceStorage
{
    UIImage *shadowImage;
    UIImage *topShadowImage;
    _Bool hidesShadow;
    UIImage *_backgroundImage;
    UIImage *_miniBackgroundImage;
    UIImage *_topBackgroundImage;
    UIImage *_miniTopBackgroundImage;
}

+ (long long)typicalBarPosition;
@property(retain, nonatomic) UIImage *miniTopBackgroundImage; // @synthesize miniTopBackgroundImage=_miniTopBackgroundImage;
@property(retain, nonatomic) UIImage *topBackgroundImage; // @synthesize topBackgroundImage=_topBackgroundImage;
@property(retain, nonatomic) UIImage *miniBackgroundImage; // @synthesize miniBackgroundImage=_miniBackgroundImage;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(nonatomic) _Bool hidesShadow; // @synthesize hidesShadow;
@property(retain, nonatomic) UIImage *topShadowImage; // @synthesize topShadowImage;
@property(retain, nonatomic) UIImage *shadowImage; // @synthesize shadowImage;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIToolbarBackground : _UIBarBackgroundImageView
{
}

@end

__attribute__((visibility("hidden")))
@interface _UIToolbarNavigationButton : UINavigationButton
{
}

- (void)updateImageIfNeededWithTintColor:(id)arg1;
- (void)updateImageIfNeeded;

@end

__attribute__((visibility("hidden")))
@interface _UITouchForwardingRecipient : NSObject
{
    UIResponder *fromResponder;
    UIResponder *responder;
    long long recordedPhase;
    long long autocompletedPhase;
}

@property(nonatomic) long long autocompletedPhase; // @synthesize autocompletedPhase;
@property(nonatomic) long long recordedPhase; // @synthesize recordedPhase;
@property(nonatomic) UIResponder *responder; // @synthesize responder;
@property(nonatomic) UIResponder *fromResponder; // @synthesize fromResponder;
- (id)description;
- (id)initWithResponder:(id)arg1 fromResponder:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UITraitBasedAppearance : _UIAppearance
{
    UITraitCollection *_traitCollection;
}

+ (id)_appearanceForTraitCollection:(id)arg1 forClass:(Class)arg2 withContainerList:(id)arg3;
+ (id)appearancesAtNode:(id)arg1 withObject:(id)arg2;
+ (_Bool)_hasCustomizationsForTraitCollection:(id)arg1 class:(Class)arg2 guideClass:(Class)arg3;
- (void)_invalidateAppearanceInWindow:(id)arg1;
- (_Bool)_isValidAppearanceForCustomizableObject:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UITraitStorageList : NSObject <NSCoding>
{
    id _topLevelObject;
    NSArray *_traitStorages;
    NSSet *_descendants;
}

@property(readonly, nonatomic) NSSet *descendants; // @synthesize descendants=_descendants;
@property(readonly, nonatomic) NSArray *traitStorages; // @synthesize traitStorages=_traitStorages;
@property(readonly, nonatomic) __weak id topLevelObject; // @synthesize topLevelObject=_topLevelObject;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTopLevelObject:(id)arg1 traitStorages:(id)arg2 descendants:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIUserDefaultsActivity : UIActivity
{
    NSArray *_availableActivities;
    _UIActivityUserDefaults *_userDefaults;
    UINavigationController *_navigationController;
    UIViewController *_userDefaultsViewController;
}

@property(retain, nonatomic) UIViewController *userDefaultsViewController; // @synthesize userDefaultsViewController=_userDefaultsViewController;
@property(retain, nonatomic) UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(retain, nonatomic) _UIActivityUserDefaults *userDefaults; // @synthesize userDefaults=_userDefaults;
@property(copy, nonatomic) NSArray *availableActivities; // @synthesize availableActivities=_availableActivities;
- (void)_prepareActivityViewControllerIfNeeded;
- (void)_cleanup;
- (void)_settingsViewControllerDidDismiss:(id)arg1;
- (void)activityDidFinish:(_Bool)arg1 items:(id)arg2 error:(id)arg3;
- (id)activityViewController;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_activityImage;
- (id)activityTitle;
- (id)activityType;
- (void)dealloc;
- (id)initWithUserDefaults:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIUserDefaultsActivityNavigationController : UINavigationController <_UIAppearanceRestriction>
{
}

+ (_Bool)_preventsAppearanceProxyCustomization;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIUserNotificationAlertView : UIAlertView
{
    struct __CFUserNotification *_userNotification;
    struct __CFRunLoopSource *_userNotificationRunLoopSource;
    _Bool _runsModal;
    _Bool _runningModal;
    id _strongDelegate;
}

+ (void)initialize;
- (void)dealloc;
- (void)dismissWithClickedButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)_removeObservervations;
- (void)_cancelUserNotification;
- (void)cancelAlertView;
- (void)setRemoteViewController:(id)arg1;
- (void)setHostedWindow:(id)arg1;
- (long long)addButtonWithTitle:(id)arg1;
- (id)textFieldAtIndex:(long long)arg1;
- (_Bool)isVisible;
- (void)show;
- (void)setRunsModal:(_Bool)arg1;
- (_Bool)runsModal;

@end

__attribute__((visibility("hidden")))
@interface _UIUserNotificationAlertViewRestrictedTextField : _UITargetedProxy
{
}

+ (id)_supportedMethodSelectorNames;
+ (id)restrictedProxyForTextField:(id)arg1;
- (void)forwardInvocation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIUserNotificationRestrictedAlertViewProxy : _UITargetedProxy <UIAlertViewDelegate>
{
    id _delegate;
}

+ (id)restrictedProxyForAlertView:(id)arg1;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIVibrantSettings : NSObject
{
    long long _style;
    UIColor *_referenceColor;
    _UILegibilitySettings *_legibilitySettings;
    double _referenceContrast;
    UIColor *_tintColor;
    UIColor *_shimmerColor;
    UIColor *_chevronShimmerColor;
    UIColor *_highlightColor;
    UIColor *_highlightLimitingColor;
}

+ (id)vibrantSettingsWithReferenceColor:(id)arg1 referenceContrast:(double)arg2 legibilitySettings:(id)arg3;
@property(retain, nonatomic) UIColor *highlightLimitingColor; // @synthesize highlightLimitingColor=_highlightLimitingColor;
@property(retain, nonatomic) UIColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property(retain, nonatomic) UIColor *chevronShimmerColor; // @synthesize chevronShimmerColor=_chevronShimmerColor;
@property(retain, nonatomic) UIColor *shimmerColor; // @synthesize shimmerColor=_shimmerColor;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(readonly, nonatomic) double referenceContrast; // @synthesize referenceContrast=_referenceContrast;
@property(readonly, nonatomic) _UILegibilitySettings *legibilitySettings; // @synthesize legibilitySettings=_legibilitySettings;
@property(readonly, nonatomic) UIColor *referenceColor; // @synthesize referenceColor=_referenceColor;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (id)highlightLimitingViewWithFrame:(struct CGRect)arg1;
- (id)tintViewWithFrame:(struct CGRect)arg1;
- (id)_computeSourceColorDodgeColorForDestinationColor:(id)arg1 producingLuminanceChange:(double)arg2;
- (long long)_style;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithReferenceColor:(id)arg1 referenceContrast:(double)arg2 legibilitySettings:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIViewAdditiveAnimationAction : NSObject <CAAction>
{
    CAAnimation *_pendingAnimation;
}

@property(readonly, retain, nonatomic) CAAnimation *pendingAnimation; // @synthesize pendingAnimation=_pendingAnimation;
- (void)runActionForKey:(id)arg1 object:(id)arg2 arguments:(id)arg3;
- (void)dealloc;
- (id)initWithPendingAnimation:(id)arg1;

@end

@interface _UIViewAnimationAttributes : NSObject <NSSecureCoding>
{
    double _duration;
    double _delay;
    unsigned long long _options;
    long long _curve;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic, getter=_curve) long long curve; // @synthesize curve=_curve;
@property(readonly, nonatomic, getter=_delay) double delay; // @synthesize delay=_delay;
@property(readonly, nonatomic, getter=_duration) double duration; // @synthesize duration=_duration;
- (long long)curve;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewAnimationDelegate : NSObject
{
    CDUnknownBlockType _completionBlock;
}

- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)dealloc;
- (id)initWithCompletionBlock:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewBlockVisitor : _UIViewVisitor
{
    CDUnknownBlockType _visitorBlock;
}

@property(copy, nonatomic) CDUnknownBlockType visitorBlock; // @synthesize visitorBlock=_visitorBlock;
- (_Bool)_visitView:(id)arg1;
- (void)dealloc;
- (id)initWithTraversalDirection:(unsigned long long)arg1 visitorBlock:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIViewCALayerKeyValueMapper : NSObject
{
}

+ (id)CALayerValueForUIViewValue:(id)arg1 forUIViewKey:(id)arg2;
+ (id)CALayerKeyPathForUIViewKeyPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewControllerControlMessageDeputy : _UITargetedProxy <_UIViewServiceDeputy, _UIViewServiceUIBehaviorInterface>
{
}

+ (id)proxyWithTarget:(id)arg1;
+ (id)XPCInterface;
- (id)invalidate;
- (void)__prepareForDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewControllerControlMessageDeputyXPCInterface : NSObject <_UIViewServiceDeputyXPCInterface>
{
}

- (id)connectionInvocation;
- (SEL)connectionSelector;
- (id)connectionProtocol;
- (id)hostObjectInterface;
- (id)exportedInterface;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewControllerKeyboardAnimationStyle : UIInputViewAnimationStyleDirectional
{
    _Bool _disableAlongsideView;
    _Bool _allowCustomTransition;
    _UIViewControllerTransitionContext *_context;
    _UIViewControllerKeyboardAnimationStyleInfo *_info;
}

+ (id)animationStyleWithContext:(id)arg1 useCustomTransition:(_Bool)arg2;
+ (id)animationStyleWithContext:(id)arg1;
@property(nonatomic) _Bool allowCustomTransition; // @synthesize allowCustomTransition=_allowCustomTransition;
@property(readonly, nonatomic) _UIViewControllerKeyboardAnimationStyleInfo *info; // @synthesize info=_info;
@property(nonatomic) _Bool disableAlongsideView; // @synthesize disableAlongsideView=_disableAlongsideView;
@property(readonly, nonatomic) _UIViewControllerTransitionContext *context; // @synthesize context=_context;
- (id)controllerForStartPlacement:(id)arg1 endPlacement:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)canDismissWithScrollView;
- (void)launchAnimation:(CDUnknownBlockType)arg1 afterStarted:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3 forHost:(id)arg4 fromCurrentPosition:(_Bool)arg5;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (_Bool)isAnimationCompleted;

@end

__attribute__((visibility("hidden")))
@interface _UIViewControllerKeyboardAnimationStyleInfo : NSObject
{
    _Bool _isAnimationCompleting;
    CDUnknownBlockType _previousCompleteHandler;
}

@property(nonatomic) _Bool isAnimationCompleting; // @synthesize isAnimationCompleting=_isAnimationCompleting;
@property(copy, nonatomic) CDUnknownBlockType previousCompleteHandler; // @synthesize previousCompleteHandler=_previousCompleteHandler;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIViewControllerNullAnimationTransitionCoordinator : NSObject <UIViewControllerTransitionCoordinator>
{
    _Bool _transitionIsInFlight;
    NSMutableArray *_alongsideAnimations;
    NSMutableArray *_alongsideCompletions;
    UIView *_containerView;
}

@property(nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (void)_applyBlocks:(id)arg1 releaseBlocks:(CDUnknownBlockType)arg2;
- (void)_runAlongsideCompletionsAfterCommit;
- (void)_runAlongsideAnimations;
- (void)notifyWhenInteractionEndsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)animateAlongsideTransitionInView:(id)arg1 animation:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (id)_alongsideCompletions:(_Bool)arg1;
- (id)_alongsideAnimations:(_Bool)arg1;
- (_Bool)animateAlongsideTransition:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (struct CGAffineTransform)targetTransform;
- (_Bool)isRotating;
- (id)viewForKey:(id)arg1;
- (id)viewControllerForKey:(id)arg1;
- (long long)completionCurve;
- (double)completionVelocity;
- (double)percentComplete;
- (double)transitionDuration;
- (_Bool)isCancelled;
- (_Bool)isInteractive;
- (_Bool)initiallyInteractive;
- (long long)presentationStyle;
- (_Bool)isAnimated;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIViewControllerTransitionContext : NSObject <UIViewControllerContextTransitioningEx>
{
    double _previousPercentComplete;
    NSArray *_disabledViews;
    struct {
        unsigned int interactorImplementsCompletionSpeed:1;
        unsigned int interactorImplementsCompletionCurve:1;
        unsigned int transitionWasCancelled:1;
        unsigned int transitionIsCompleting:1;
    } _transitionContextFlags;
    _Bool __allowUserInteraction;
    _Bool _rotating;
    _Bool _initiallyInteractive;
    _Bool _isCurrentlyInteractive;
    _Bool _isAnimated;
    _Bool __isPresentation;
    NSArray *__containerViews;
    double __percentOffset;
    id <UIViewControllerAnimatedTransitioning> __animator;
    id <UIViewControllerInteractiveTransitioning> __interactor;
    UIView *_containerView;
    CDUnknownBlockType __willCompleteHandler;
    CDUnknownBlockType __completionHandler;
    CDUnknownBlockType __didCompleteHandler;
    double __completionVelocity;
    long long __completionCurve;
    _UIViewControllerTransitionCoordinator *__auxContext;
    double __duration;
    long long __state;
    CDUnknownBlockType __interactiveUpdateHandler;
    CDUnknownBlockType __postInteractiveCompletionHandler;
    long long _presentationStyle;
}

+ (id)_associatedTransitionContextForObject:(id)arg1;
@property(nonatomic, setter=_setIsPresentation:) _Bool _isPresentation; // @synthesize _isPresentation=__isPresentation;
@property(nonatomic, setter=_setPresentationStyle:) long long presentationStyle; // @synthesize presentationStyle=_presentationStyle;
@property(copy, nonatomic, setter=_setPostInteractiveCompletionHandler:) CDUnknownBlockType _postInteractiveCompletionHandler; // @synthesize _postInteractiveCompletionHandler=__postInteractiveCompletionHandler;
@property(copy, nonatomic, setter=_setInteractiveUpdateHandler:) CDUnknownBlockType _interactiveUpdateHandler; // @synthesize _interactiveUpdateHandler=__interactiveUpdateHandler;
@property(nonatomic, setter=_setState:) long long _state; // @synthesize _state=__state;
@property(nonatomic, setter=_setDuration:) double _duration; // @synthesize _duration=__duration;
@property(retain, nonatomic, setter=_setAuxContext:) _UIViewControllerTransitionCoordinator *_auxContext; // @synthesize _auxContext=__auxContext;
@property(nonatomic, setter=_setCompletionCurve:) long long _completionCurve; // @synthesize _completionCurve=__completionCurve;
@property(nonatomic, setter=_setCompletionVelocity:) double _completionVelocity; // @synthesize _completionVelocity=__completionVelocity;
@property(nonatomic, setter=_setIsAnimated:) _Bool isAnimated; // @synthesize isAnimated=_isAnimated;
@property(nonatomic, setter=_setIsCurrentlyInteractive:) _Bool isCurrentlyInteractive; // @synthesize isCurrentlyInteractive=_isCurrentlyInteractive;
@property(nonatomic, setter=_setInitiallyInteractive:) _Bool initiallyInteractive; // @synthesize initiallyInteractive=_initiallyInteractive;
@property(copy, nonatomic, setter=_setDidCompleteHandler:) CDUnknownBlockType _didCompleteHandler; // @synthesize _didCompleteHandler=__didCompleteHandler;
@property(copy, nonatomic, setter=_setCompletionHandler:) CDUnknownBlockType _completionHandler; // @synthesize _completionHandler=__completionHandler;
@property(copy, nonatomic, setter=_setWillCompleteHandler:) CDUnknownBlockType _willCompleteHandler; // @synthesize _willCompleteHandler=__willCompleteHandler;
@property(nonatomic, setter=_setContainerView:) UIView *containerView; // @synthesize containerView=_containerView;
@property(nonatomic, getter=_isRotating, setter=_setRotating:) _Bool rotating; // @synthesize rotating=_rotating;
@property(nonatomic, getter=_allowUserInteraction, setter=_setAllowUserInteraction:) _Bool _allowUserInteraction; // @synthesize _allowUserInteraction=__allowUserInteraction;
@property(nonatomic, setter=_setInteractor:) id <UIViewControllerInteractiveTransitioning> _interactor; // @synthesize _interactor=__interactor;
@property(nonatomic, setter=_setAnimator:) id <UIViewControllerAnimatedTransitioning> _animator; // @synthesize _animator=__animator;
@property(nonatomic, setter=_setPercentOffset:) double _percentOffset; // @synthesize _percentOffset=__percentOffset;
@property(retain, nonatomic, setter=_setContainerViews:) NSArray *_containerViews; // @synthesize _containerViews=__containerViews;
- (void)_enableInteractionForDisabledViews;
- (void)_disableInteractionForViews:(id)arg1;
- (void)__runAlongsideAnimations;
- (void)_interactivityDidChange:(_Bool)arg1;
- (void)_runAlongsideCompletions;
@property(nonatomic, setter=_setTransitionIsCompleting:) _Bool _transitionIsCompleting;
- (void)_setTransitionIsInFlight:(_Bool)arg1;
- (_Bool)_transitionIsInFlight;
- (_Bool)transitionWasCancelled;
- (struct CGRect)finalFrameForViewController:(id)arg1;
- (struct CGRect)initialFrameForViewController:(id)arg1;
- (id)viewForKey:(id)arg1;
- (id)viewControllerForKey:(id)arg1;
- (void)completeTransition:(_Bool)arg1;
- (void)cancelInteractiveTransition;
- (void)finishInteractiveTransition;
- (void)updateInteractiveTransition:(double)arg1;
- (void)_updateInteractiveTransitionWithoutTrackingPercentComplete:(double)arg1;
- (void)_setPreviousPercentComplete:(double)arg1;
- (double)_previousPercentComplete;
- (id)_transitionCoordinator;
- (_Bool)isInteractive;
- (struct CGAffineTransform)targetTransform;
@property(readonly, nonatomic, getter=_affineTransform) struct CGAffineTransform affineTransform;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIViewControllerOneToOneTransitionContext : _UIViewControllerTransitionContext
{
    _Bool _isToViewSet;
    _Bool _isFromViewSet;
    UIView *_toView;
    UIView *_fromView;
    UIViewController *_fromViewController;
    UIViewController *_toViewController;
    struct CGRect _fromStartFrame;
    struct CGRect _fromEndFrame;
    struct CGRect _toEndFrame;
    struct CGRect _toStartFrame;
}

@property(nonatomic, setter=_setToStartFrame:) struct CGRect toStartFrame; // @synthesize toStartFrame=_toStartFrame;
@property(nonatomic, setter=_setToEndFrame:) struct CGRect toEndFrame; // @synthesize toEndFrame=_toEndFrame;
@property(nonatomic, setter=_setFromEndFrame:) struct CGRect fromEndFrame; // @synthesize fromEndFrame=_fromEndFrame;
@property(nonatomic, setter=_setFromStartFrame:) struct CGRect fromStartFrame; // @synthesize fromStartFrame=_fromStartFrame;
@property(retain, nonatomic, setter=_setToViewController:) UIViewController *toViewController; // @synthesize toViewController=_toViewController;
@property(retain, nonatomic, setter=_setFromViewController:) UIViewController *fromViewController; // @synthesize fromViewController=_fromViewController;
@property(retain, nonatomic, getter=_fromView, setter=_setFromView:) UIView *fromView;
@property(retain, nonatomic, getter=_toView, setter=_setToView:) UIView *toView;
- (struct CGRect)finalFrameForViewController:(id)arg1;
- (struct CGRect)initialFrameForViewController:(id)arg1;
- (id)viewControllerForKey:(id)arg1;
- (id)viewForKey:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIViewControllerTransitionCoordinator : NSObject <UIViewControllerTransitionCoordinator>
{
    _UIViewControllerTransitionContext *__mainContext;
    NSMutableArray *__alongsideAnimations;
    NSMutableArray *__alongsideAnimationViews;
    NSMutableArray *__alongsideCompletions;
    NSMutableArray *__interactiveChangeHandlers;
}

@property(retain, nonatomic, setter=_setInteractiveChangeHandlers:) NSMutableArray *_interactiveChangeHandlers; // @synthesize _interactiveChangeHandlers=__interactiveChangeHandlers;
@property(retain, nonatomic, setter=_setAlongsideCompletions:) NSMutableArray *_alongsideCompletions; // @synthesize _alongsideCompletions=__alongsideCompletions;
@property(retain, nonatomic, setter=_setAlongsideAnimationViews:) NSMutableArray *_alongsideAnimationViews; // @synthesize _alongsideAnimationViews=__alongsideAnimationViews;
@property(retain, nonatomic, setter=_setAlongsideAnimations:) NSMutableArray *_alongsideAnimations; // @synthesize _alongsideAnimations=__alongsideAnimations;
@property(nonatomic, setter=_setMainContext:) _UIViewControllerTransitionContext *_mainContext; // @synthesize _mainContext=__mainContext;
- (void)handlerToInvokeOnInteractivityChanges:(CDUnknownBlockType)arg1;
- (void)notifyWhenInteractionEndsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)animateAlongsideTransition:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)animateAlongsideTransitionInView:(id)arg1 animation:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_applyBlocks:(id)arg1 releaseBlocks:(CDUnknownBlockType)arg2;
- (id)_alongsideCompletions:(_Bool)arg1;
- (id)_alongsideAnimations:(_Bool)arg1;
- (id)_interactiveChangeHandlers:(_Bool)arg1;
- (struct CGAffineTransform)targetTransform;
- (struct CGAffineTransform)affineTransform;
- (_Bool)isRotating;
- (id)containerView;
- (id)viewForKey:(id)arg1;
- (id)viewControllerForKey:(id)arg1;
- (double)transitionDuration;
- (long long)completionCurve;
- (double)completionVelocity;
- (double)percentComplete;
- (_Bool)isCompleting;
- (_Bool)isCancelled;
- (_Bool)isInteractive;
- (_Bool)initiallyInteractive;
- (long long)presentationStyle;
- (_Bool)isAnimated;
- (void)dealloc;
- (id)initWithMainContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewFittingSizeTargetInfo : NSObject <NSCopying>
{
    float _horizontalPriority;
    float _verticalPriority;
    struct CGSize _targetSize;
}

@property(readonly, nonatomic) float verticalPriority; // @synthesize verticalPriority=_verticalPriority;
@property(readonly, nonatomic) float horizontalPriority; // @synthesize horizontalPriority=_horizontalPriority;
@property(readonly, nonatomic) struct CGSize targetSize; // @synthesize targetSize=_targetSize;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToTargetInfo:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithTargetSize:(struct CGSize)arg1 horizontalPriority:(float)arg2 verticalPriority:(float)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIViewKeyValueAnimationFactory : NSObject
{
}

+ (id)animationsTransitioningFromAnimation:(id)arg1 toAnimation:(id)arg2 onView:(id)arg3;
+ (id)animationForKeyPathsAndRelativeValues:(id)arg1;
+ (id)animationForKeyPathsAndValues:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewKeyValueAnimationFactoryTransition : NSObject
{
    CABasicAnimation *_fromAnimation;
    CABasicAnimation *_toAnimation;
}

@property(retain, nonatomic) CABasicAnimation *toAnimation; // @synthesize toAnimation=_toAnimation;
@property(retain, nonatomic) CABasicAnimation *fromAnimation; // @synthesize fromAnimation=_fromAnimation;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceDeputyManager : NSObject <_UIViewServiceViewControllerOperatorDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    _UIAsyncInvocation *_invalidationInvocation;
    NSMutableDictionary *_connectionHandlers;
    NSLock *_connectionHandlersLock;
    NSMutableSet *_deputies;
    CDUnknownBlockType _terminationHandler;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
    id _delegate;
}

+ (id)exportedInterfaceSupportingDeputyInterfaces:(id)arg1;
@property id delegate; // @synthesize delegate=_delegate;
- (void)viewControllerOperator:(id)arg1 didCreateServiceViewControllerOfClass:(Class)arg2;
- (void)checkDeputyForRotation:(id)arg1;
- (void)unregisterDeputyClass:(Class)arg1;
- (void)registerDeputyClass:(Class)arg1 withConnectionHandler:(CDUnknownBlockType)arg2;
- (void)forwardInvocation:(id)arg1;
- (void)__requestConnectionToDeputyOfClass:(Class)arg1 fromHostObject:(byref id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)__prototype_requestConnectionToDeputyFromHostObject:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (Class)_deputyClassForConnectionSelector:(SEL)arg1;
- (void)_invalidateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)invalidate;
- (void)dealloc;
- (id)init;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceDeputyXPCInterfaceInvocationFactory : NSObject
{
}

+ (id)invocationForConnectionSelector:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceDummyPopoverBackgroundView : UIPopoverBackgroundView
{
    double arrowOffset;
    unsigned long long arrowDirection;
}

+ (_Bool)wantsDefaultContentAppearance;
+ (struct UIEdgeInsets)contentViewInsets;
+ (double)arrowBase;
+ (double)arrowHeight;
- (void)setArrowDirection:(unsigned long long)arg1;
- (unsigned long long)arrowDirection;
- (void)setArrowOffset:(double)arg1;
- (double)arrowOffset;
- (struct CGSize)_shadowOffset;
- (double)_shadowRadius;
- (double)_shadowOpacity;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceDummyPopoverController : UIPopoverController
{
    id <_UIViewServiceDummyPopoverControllerDelegate> _dummyPopoverControllerDelegate;
}

+ (Class)_popoverViewClass;
@property(retain, nonatomic) id <_UIViewServiceDummyPopoverControllerDelegate> dummyPopoverControllerDelegate; // @synthesize dummyPopoverControllerDelegate=_dummyPopoverControllerDelegate;
- (void)_super_setPopoverContentSize:(struct CGSize)arg1;
- (_Bool)_attemptsToAvoidKeyboard;
- (void)setPopoverContentSize:(struct CGSize)arg1 animated:(_Bool)arg2;
- (void)_popoverView:(id)arg1 didSetUseToolbarShine:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceDummyPopoverView : _UIPopoverView
{
}

- (void)setUseToolbarShine:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceFencingControlProxy : _UIQueueingProxy
{
    _UIViewServiceFencingController *_fencingController;
}

+ (id)proxyWithTarget:(id)arg1 fencingController:(id)arg2 exportedProtocol:(id)arg3;
- (void)__endFencingMessagesForSendRight:(id)arg1;
- (void)__beginFencingMessagesWithSendRight:(id)arg1 connectionCount:(unsigned long long)arg2;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceFencingController : NSObject
{
    int _lock;
    NSMutableSet *_pendingFenceSendRights;
    NSMutableArray *_resumeActions;
    unsigned long long _expectedParticipatingFencingProxyCount;
    NSTimer *_fencingControlTimeoutTimer;
}

+ (id)activeFencePort;
- (void)_fencingControlTimedOut;
- (void)fencingControlProxy:(id)arg1 didEndFencingWithSendRight:(id)arg2;
- (void)fencingControlProxy:(id)arg1 didBeginFencingWithSendRight:(id)arg2 expectedParticipatingFencingProxyCount:(unsigned long long)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceImplicitAnimationDecodingProxy : _UITargetedProxy <_UIViewServiceImplicitAnimationDecodingProxy_EncodingProxyInterface>
{
    SEL _implicitAnimationSelector;
    _UIViewAnimationAttributes *_animationAttributes;
}

+ (id)proxyDecodingAnimationsForTarget:(id)arg1;
- (void)__animateNextInvocationOfSelector:(id)arg1 withAnimationAttributes:(id)arg2;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceImplicitAnimationEncodingProxy : _UITargetedProxy
{
    id _controlMessageTarget;
}

+ (id)proxyEncodingAnimationsForTarget:(id)arg1 controlMessageTarget:(id)arg2;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceInterface : NSObject <NSXPCConnectionDelegate>
{
    int _terminationStateLock;
    NSError *_terminationError;
    CDUnknownBlockType _terminationHandler;
    _Bool _isTerminated;
    _UIAsyncInvocation *_terminateInvocation;
    NSString *_serviceBundleIdentifier;
    _UIRemoteViewService *_service;
    BKSProcessAssertion *_serviceProcessAssertion;
    NSXPCConnection *_serviceConnection;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
}

+ (id)connectToViewService:(id)arg1 deputyInterfaces:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
+ (id)connectToViewServiceWithBundleIdentifier:(id)arg1 deputyInterfaces:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) CDStruct_4c969caf serviceAuditToken;
@property(readonly, nonatomic) int servicePID;
- (void)dealloc;
- (id)disconnect;
- (void)setTerminationHandler:(CDUnknownBlockType)arg1;
- (void)_terminateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (id)_terminateWithError:(id)arg1;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(_Bool)arg3;
- (id)connectToDeputyWithInterface:(id)arg1 fromExportedHostingObject:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
- (id)_initWithConnectionInfo:(CDStruct_d58a15aa)arg1 service:(id)arg2 deputyInterfaces:(id)arg3;
- (id)_initWithConnectionInfo:(CDStruct_d58a15aa)arg1 serviceBundleIdentifier:(id)arg2 deputyInterfaces:(id)arg3;
- (id)_initWithConnectionInfo:(CDStruct_d58a15aa)arg1 serviceBundleIdentifier:(id)arg2 service:(id)arg3 deputyInterfaces:(id)arg4;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceInterfaceConnectionRequest : NSObject
{
    CDUnknownBlockType _connectionHandler;
    NSString *_serviceBundleIdentifier;
    _UIRemoteViewService *_service;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _isCancelled;
    NSError *_cancellationError;
    _UIAsyncInvocation *_cancellationInvocation;
    int _sessionRequestNotifyToken;
    BKSProcessAssertion *_serviceProcessAssertion;
    NSXPCConnection *_serviceSessionConnection;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
}

+ (id)connectToViewService:(id)arg1 connectionHandler:(CDUnknownBlockType)arg2;
+ (id)_connectToViewServiceWithBundleIdentifier:(id)arg1 service:(id)arg2 connectionHandler:(CDUnknownBlockType)arg3;
+ (id)connectToViewServiceWithBundleIdentifier:(id)arg1 connectionHandler:(CDUnknownBlockType)arg2;
- (void)_cancelUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)_cancelWithError:(id)arg1;
- (void)_didConnectToService;
- (void)_establishConnection;
- (void)_createAndEstablishConnection;
- (void)_createPlugInProcessAssertion;
- (void)_createProcessAssertionForPID:(int)arg1 aquiredHandler:(CDUnknownBlockType)arg2;
- (void)_createProcessAssertion;
- (void)_launchService;
- (void)dealloc;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceReplyControlTrampoline : _UITargetedProxy
{
}

- (void)forwardInvocation:(id)arg1;
- (void)_forwardInvocation:(id)arg1 withIncomingReplyDispatchBlock:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceReplyAwaitingTrampoline : _UIViewServiceReplyControlTrampoline
{
}

- (void)forwardInvocation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceReplyControlProxy : NSObject <_UIViewServiceProxy_ReplyControl>
{
    id _target;
    _UIViewServiceReplyControlTrampoline *_controlTrampoline;
    _UIViewServiceReplyAwaitingTrampoline *_awaitingTrampoline;
    NSLock *_lock;
}

+ (id)proxyWithTarget:(id)arg1;
- (id)_deliveringRepliesAsynchronously;
- (id)_awaitingReply;
- (void)dealloc;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceSession : NSObject <NSXPCConnectionDelegate, _UIViewServiceDeputyManagerDelegate, _UIViewServiceViewControllerOperatorDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSXPCConnection *_connection;
    _UIViewServiceDeputyManager *_deputyManager;
    _UIAsyncInvocation *_invalidationInvocation;
    CDUnknownBlockType _terminationHandler;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
}

+ (id)sessionWithConnection:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType terminationHandler; // @synthesize terminationHandler=_terminationHandler;
- (void)viewControllerOperator:(id)arg1 didCreateServiceViewControllerOfClass:(Class)arg2;
- (void)unregisterDeputyClass:(Class)arg1;
- (void)registerDeputyClass:(Class)arg1 withConnectionHandler:(CDUnknownBlockType)arg2;
- (void)deputy:(id)arg1 didFailWithError:(id)arg2;
- (void)_invalidateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(_Bool)arg3;
- (void)deputyManager:(id)arg1 didUpdateExportedInterface:(id)arg2;
- (void)dealloc;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIViewServiceSessionManager : NSObject <NSXPCListenerDelegate>
{
    int _lock;
    NSXPCListener *_listener;
    NSMutableArray *_sessions;
    int _connectionNotificationToken;
}

+ (id)__serviceSessionManager;
+ (_Bool)hasActiveSessions;
+ (void)startViewServiceSessionManagerAsPlugin:(_Bool)arg1;
- (void)_startOrStopSystemsForBackgroundRunning;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)_configureSessionForConnection:(id)arg1;
- (_Bool)_hasActiveSessions;
- (void)_registerSessionForDefaultDeputies:(id)arg1;
- (void)_startListenerWithName:(id)arg1;
- (void)_startListener;
- (id)_initAsPlugIn:(_Bool)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceTextEffectsOperator : NSObject <_UIViewServiceTextEffectsOperator_RemoteViewControllerInterface, _UIViewServiceDeputy, _UIViewServiceDeputyRotationDelegate>
{
    id _remoteViewControllerProxy;
    _UIAsyncInvocation *_prepareForDisconnectionInvocation;
    _UIAsyncInvocation *_invalidationInvocation;
    UIWindow *_hostedWindow;
    struct CGPoint _windowOffset;
    _Bool _canRestoreInputViews;
    _Bool _isRestoringInputViews;
    _Bool _didResignForDisappear;
    _Bool _localVCDisablesAutomaticBehaviors;
    NSArray *_allowedNotifications;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
}

+ (id)XPCInterface;
+ (id)operatorWithRemoteViewControllerProxy:(id)arg1 hostPID:(int)arg2;
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)rotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)setHostedWindow:(id)arg1 disableAutomaticBehaviors:(_Bool)arg2;
- (void)forceSyncToStatusBarOrientation;
- (id)invalidate;
- (void)__prepareForDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)__hostViewWillDisappear:(_Bool)arg1;
- (void)__hostViewWillAppear:(_Bool)arg1;
- (void)_viewServiceHostWillEnterForeground:(id)arg1;
- (void)__hostWillEnterForeground;
- (void)_restoreInputViews;
- (void)__hostDidEnterBackground;
- (void)__setHostAllowedNotifications:(id)arg1;
- (void)__setNextAutomaticOrderOutDirection:(int)arg1 duration:(double)arg2;
- (void)__setWindowOffset:(struct CGPoint)arg1;
- (void)__createHostedTextEffectsWithReplyHandler:(CDUnknownBlockType)arg1;
- (void)_sendNotification:(id)arg1;
- (void)windowDidGainFirstResponder:(id)arg1;
- (void)dealloc;
- (void)_invalidateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)_prepareForDisconnectionUnconditionallyThen:(CDUnknownBlockType)arg1;
- (id)_queue;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceTextEffectsOperator_XPCInterface : NSObject <_UIViewServiceDeputyXPCInterface>
{
}

- (id)connectionInvocation;
- (SEL)connectionSelector;
- (id)connectionProtocol;
- (id)hostObjectInterface;
- (id)exportedInterface;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceUIBehaviorProxy : _UITargetedProxy <_UIViewServiceUIBehaviorInterface>
{
    int _remotePID;
    _UIViewServiceFencingControlProxy *_fencingControlProxy;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
}

+ (id)activeFencePort;
+ (id)proxyWrappingExportedObject:(id)arg1 forCommunicationWithPID:(int)arg2 exportedProtocol:(id)arg3;
- (void)dealloc;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceViewControllerDeputy : _UITargetedProxy <_UIViewServiceDeputy>
{
}

+ (id)deputyWithViewController:(id)arg1;
+ (id)XPCInterface;
- (id)invalidate;
- (void)__prepareForDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceViewControllerDeputyXPCInterface : NSObject <_UIViewServiceDeputyXPCInterface>
{
    NSXPCInterface *_exportedInterface;
    NSXPCInterface *_remoteViewControllerInterface;
}

+ (id)interfaceWithExportedInterface:(id)arg1 remoteViewControllerInterface:(id)arg2;
- (id)connectionInvocation;
- (SEL)connectionSelector;
- (id)connectionProtocol;
- (id)hostObjectInterface;
- (id)exportedInterface;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceViewControllerOperator : UIViewController <_UIViewServiceViewControllerOperator_RemoteViewControllerInterface, _UIHostedTextServiceSessionDelegate, _UIViewServiceDummyPopoverControllerDelegate, _UIViewServiceDeputy, _UIViewServiceDeputyRotationSource>
{
    int _hostPID;
    NSString *_hostBundleID;
    CDStruct_4c969caf _hostAuditToken;
    id _remoteViewControllerProxyToOperator;
    id _remoteViewControllerProxyToViewController;
    NSArray *_plugInScenes;
    UIViewController *_localViewController;
    NSString *_presentationControllerClassName;
    _UIHostedWindow *_hostedWindow;
    _Bool _isResigningFirstResponderFromHostNotification;
    _Bool _disableAutomaticKeyboardBehavior;
    UIActionSheet *_hostedActionSheet;
    _Bool _serviceInPopover;
    long long _hostStatusBarOrientation;
    double _hostStatusBarHeight;
    NSMutableArray *_deputyRotationDelegates;
    unsigned int _hostAccessibilityServerPort;
    _UIHostedTextServiceSession *_textServiceSession;
    _UIAsyncInvocation *_prepareForDisconnectionInvocation;
    _UIAsyncInvocation *_invalidationInvocation;
    int __automatic_invalidation_retainCount;
    _Bool __automatic_invalidation_invalidated;
    UIPopoverController *_displayedPopoverController;
    _UIViewServiceDummyPopoverController *_dummyPopoverController;
    unsigned long long _supportedOrientations;
    _Bool _canShowTextServices;
    struct UIEdgeInsets _localViewControllerRequestedInsets;
    id <_UIViewServiceViewControllerOperatorDelegate> _delegate;
}

+ (id)XPCInterface;
+ (id)operatorWithRemoteViewControllerProxy:(id)arg1 hostPID:(int)arg2 hostBundleID:(id)arg3 hostAuditToken:(CDStruct_4c969caf)arg4;
@property(nonatomic) id <_UIViewServiceViewControllerOperatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)__restoreStateForSession:(id)arg1 restorationAnchor:(id)arg2;
- (void)__saveStateForSession:(id)arg1 restorationAnchor:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_validateSessionIdentifier:(id)arg1 restorationAnchor:(id)arg2 functionName:(const char *)arg3;
- (id)_sessionForStateRestoration:(id)arg1;
- (void)__textServiceDidDismiss;
- (void)dismissHostedTextServiceSession:(id)arg1 animated:(_Bool)arg2;
- (id)_showServiceForText:(id)arg1 type:(long long)arg2 fromRect:(struct CGRect)arg3 inView:(id)arg4;
- (_Bool)_canShowTextServices;
- (id)_inputViewsKey;
- (void)setNeedsStatusBarAppearanceUpdate;
- (id)_presentationControllerClassName;
- (void)__hostDidSetPresentationControllerClassName:(id)arg1;
- (struct UIEdgeInsets)_edgeInsetsForChildViewController:(id)arg1 insetsAreAbsolute:(_Bool *)arg2;
- (void)__hostDidSetContentOverlayInsets:(struct UIEdgeInsets)arg1;
- (void)__hostDisablesAutomaticKeyboardBehavior:(_Bool)arg1;
- (void)__hostDidPromoteFirstResponder;
- (void)__setContentSize:(struct CGSize)arg1;
- (void)__exchangeAccessibilityPortInformation:(id)arg1 replyHandler:(CDUnknownBlockType)arg2;
- (void)__createViewController:(id)arg1 withContextToken:(id)arg2 fbsDisplays:(id)arg3 appearanceSerializedRepresentations:(id)arg4 legacyAppearance:(_Bool)arg5 hostAccessibilityServerPort:(id)arg6 canShowTextServices:(_Bool)arg7 replyHandler:(CDUnknownBlockType)arg8;
- (void)__createViewController:(id)arg1 withAppearanceSerializedRepresentations:(id)arg2 legacyAppearance:(_Bool)arg3 hostAccessibilityServerPort:(id)arg4 canShowTextServices:(_Bool)arg5 replyHandler:(CDUnknownBlockType)arg6;
- (id)_supportedInterfaceOrientationsForViewController:(id)arg1;
- (void)__hostDidRotateFromInterfaceOrientation:(long long)arg1 skipSelf:(_Bool)arg2;
- (void)__hostWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2 skipSelf:(_Bool)arg3;
- (void)__hostWillRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2 skipSelf:(_Bool)arg3;
- (id)_viewControllersForRotationCallbacks;
- (void)__hostDidChangeStatusBarHeight:(double)arg1;
- (void)__hostDidChangeStatusBarOrientationToInterfaceOrientation:(long long)arg1;
- (void)__hostWillEnterForeground;
- (void)__hostDidEnterBackground;
- (void)__setServiceInPopover:(_Bool)arg1;
- (void)__hostViewDidMoveToScreenWithIntegerDisplayID:(unsigned int)arg1 newHostingHandleReplyHandler:(CDUnknownBlockType)arg2;
- (void)__hostViewDidDisappear:(_Bool)arg1;
- (void)__hostViewWillDisappear:(_Bool)arg1;
- (void)__hostViewDidAppear:(_Bool)arg1;
- (void)__hostViewWillAppear:(_Bool)arg1 inInterfaceOrientation:(long long)arg2 statusBarHeight:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)__hostReadyToReceiveMessagesFromServiceViewController;
- (id)invalidate;
- (void)dummyPopoverController:(id)arg1 popoverViewDidSetUseToolbarShine:(_Bool)arg2;
- (void)dummyPopoverController:(id)arg1 didChangeContentSize:(struct CGSize)arg2 animated:(_Bool)arg3;
- (void)systemLayoutFittingSizeDidChangeForChildViewController:(id)arg1;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (struct CGSize)preferredContentSize;
- (struct CGSize)contentSizeForViewInPopover;
- (struct CGRect)_frameForContainerViewInSheetForBounds:(struct CGRect)arg1;
- (struct CGRect)_frameForContainerViewInSheetForBounds:(struct CGRect)arg1 displayingTopView:(_Bool)arg2 andBottomView:(_Bool)arg3;
- (void)_didResignContentViewControllerOfPopover:(id)arg1;
- (void)_willResignContentViewControllerOfPopover:(id)arg1;
- (void)_didBecomeContentViewControllerOfPopover:(id)arg1;
- (void)_willBecomeContentViewControllerOfPopover:(id)arg1;
- (void)__dimmingViewWasTapped;
- (void)_popoverDidDismiss:(id)arg1;
- (void)_popoverWillPresent:(id)arg1;
- (void)_viewServiceIsDisplayingPopoverController:(id)arg1;
- (void)__prepareForDisconnectionWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)__hostedActionSheetDidDismissWithClickedButtonIndex:(long long)arg1;
- (void)__hostedActionSheetClickedButtonAtIndex:(long long)arg1;
- (void)__hostedActionSheetDidPresent;
- (void)_dismissActionSheet:(id)arg1 withClickedButtonIndex:(long long)arg2 animated:(_Bool)arg3;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)_presentActionSheet:(id)arg1 asPopoverFromBarButtonItem:(id)arg2 orFromRect:(struct CGRect)arg3 inView:(id)arg4 withPreferredArrowDirections:(unsigned long long)arg5 passthroughViews:(id)arg6 backgroundStyle:(long long)arg7 animated:(_Bool)arg8;
- (_Bool)_presentActionSheet:(id)arg1 inView:(id)arg2 fromYCoordinate:(double)arg3;
- (void)_firstResponderDidChange:(id)arg1;
- (_Bool)becomeFirstResponder;
- (void)__setHostTintColor:(id)arg1 tintAdjustmentMode:(long long)arg2;
- (void)__hostDidUpdateAppearanceWithSerializedRepresentations:(id)arg1 originalSource:(id)arg2 legacyAppearance:(_Bool)arg3;
- (id)_appearanceSource;
- (void)_windowDidUpdateCurrentTintView:(id)arg1;
- (void)_windowDidUnregisterScrollToTopView;
- (void)_windowDidRegisterScrollToTopView;
- (void)__scrollToTopFromTouchAtViewLocation:(struct CGPoint)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)_updateSupportedInterfaceOrientationsIfNecessary;
- (void)addDeputyRotationDelegate:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)_disableAutomaticKeyboardBehavior;
- (_Bool)_isHostedRootViewController;
- (void)viewDidLoad;
- (void)loadView;
- (void)_invalidateUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)_prepareForDisconnectionUnconditionallyThen:(CDUnknownBlockType)arg1;
- (void)establishViewControllerDeputyWithProxy:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)_queue;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (int)__automatic_invalidation_logic;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceViewControllerOperator_XPCInterface : NSObject <_UIViewServiceDeputyXPCInterface>
{
}

- (id)connectionInvocation;
- (SEL)connectionSelector;
- (id)connectionProtocol;
- (id)hostObjectInterface;
- (id)exportedInterface;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIViewServiceXPCMachSendRight : NSObject <NSSecureCoding>
{
    unsigned int _sendRight;
}

+ (_Bool)supportsSecureCoding;
+ (id)wrapSendRight:(unsigned int)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)sendRight;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIViewerRelativeDevicePose : NSObject <NSCopying, NSCoding>
{
    _UIMotionEffectAcceleratedOutputRange *_acceleratedOutputRange;
    double _planarRotationAngle;
    struct UIOffset _viewerOffset;
}

@property(nonatomic) double planarRotationAngle; // @synthesize planarRotationAngle=_planarRotationAngle;
@property(nonatomic) struct UIOffset viewerOffset; // @synthesize viewerOffset=_viewerOffset;
- (struct UIOffset)_acceleratedOutputForViewerOffset:(struct UIOffset)arg1 accelerationBoostFactor:(struct CGPoint)arg2;
- (void)_setAcceleration:(struct CGPoint)arg1 fixingOutputForViewerOffset:(struct UIOffset)arg2;
- (void)_reset;
- (id)_acceleratedOutputRange;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIVisualEffectSubview : UIView
{
}

- (void)_setLayerConfig:(id)arg1;
@property(copy, nonatomic, setter=_setGroupName:) NSString *_groupName;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIVisualEffectBackdropView : _UIVisualEffectSubview
{
    id _statisticsDelegate;
    unsigned long long _blurHardEdges;
    double _blurRadius;
}

+ (Class)layerClass;
@property(nonatomic) double blurRadius; // @synthesize blurRadius=_blurRadius;
@property(nonatomic) unsigned long long blurHardEdges; // @synthesize blurHardEdges=_blurHardEdges;
@property(nonatomic) id statisticsDelegate; // @synthesize statisticsDelegate=_statisticsDelegate;
- (void)_updateInputBounds;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)_setGroupName:(id)arg1;
- (id)_groupName;
- (void)backdropLayerStatisticsDidChange:(id)arg1;
- (id)backdropLayer;
- (void)dealloc;
- (id)_initWithFrame:(struct CGRect)arg1 settings:(id)arg2;

@end

@interface _UIVisualEffectConfig : NSObject
{
    NSMutableArray *_layerConfigs;
    _UIVisualEffectLayerConfig *_contentConfig;
}

+ (id)configWithLayerConfigs:(id)arg1;
+ (id)configWithContentConfig:(id)arg1;
@property(readonly, nonatomic) _UIVisualEffectLayerConfig *contentConfig; // @synthesize contentConfig=_contentConfig;
@property(readonly, nonatomic) NSArray *layerConfigs; // @synthesize layerConfigs=_layerConfigs;
- (void)enumerateLayerConfigs:(CDUnknownBlockType)arg1;
- (void)addLayerConfig:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIVisualEffectContentView : _UIVisualEffectSubview
{
    _Bool _autosetSubviewLabelTintColor;
}

- (void)_descendent:(id)arg1 willMoveFromSuperview:(id)arg2 toSuperview:(id)arg3;
- (void)willMoveToWindow:(id)arg1;
- (void)adjustLabelColorForView:(id)arg1 isInContentView:(_Bool)arg2;
- (void)_setLayerConfig:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIVisualEffectFilterView : _UIVisualEffectSubview
{
}

- (id)_initWithFrame:(struct CGRect)arg1 config:(id)arg2;
- (id)_initWithFrame:(struct CGRect)arg1 settings:(id)arg2 type:(long long)arg3;

@end

@interface _UIVisualEffectLayerConfig : NSObject
{
    double _opacity;
    NSString *_filterType;
    UIColor *_fillColor;
}

+ (id)layerWithFillColor:(id)arg1 opacity:(double)arg2 filterType:(id)arg3;
@property(readonly, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(readonly, nonatomic) NSString *filterType; // @synthesize filterType=_filterType;
@property(readonly, nonatomic) double opacity; // @synthesize opacity=_opacity;
- (void)configureLayerView:(id)arg1;
- (void)dealloc;

@end

@interface _UIVisualEffectTintLayerConfig : _UIVisualEffectLayerConfig
{
    UIColor *_tintColor;
}

+ (id)layerWithTintColor:(id)arg1;
@property(readonly, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
- (void)configureLayerView:(id)arg1;
- (void)dealloc;

@end

@interface _UIVisualEffectVibrantLayerConfig : _UIVisualEffectLayerConfig
{
    UIColor *_vibrantColor;
    UIColor *_tintColor;
}

+ (id)layerWithVibrantColor:(id)arg1 tintColor:(id)arg2 filterType:(id)arg3;
@property(readonly, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(readonly, nonatomic) UIColor *vibrantColor; // @synthesize vibrantColor=_vibrantColor;
- (void)configureLayerView:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIWeakRef : NSObject
{
    id _weakStorage;
    id _weakPointer;
    _Bool _useWeakStorage;
}

+ (id)weakRefWithObject:(id)arg1;
- (id)object;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UIWebDocumentViewRotationLayer : CALayer
{
}

- (id)actionForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIWebFindOnPageHighlightBubbleView : UIView
{
    struct CGImage *_highlightedContent;
    struct CGPoint _highlightedContentOrigin;
}

- (void)dealloc;
- (void)setHighlightedContent:(struct CGImage *)arg1 withOrigin:(struct CGPoint)arg2;
- (void)drawRect:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIWebFormDelegateEditedFormsMap : NSObject
{
    NSMutableDictionary *_map;
    NSMutableArray *_lifetimeHelper;
}

- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)removeAllObjects;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (id)_keyForWebFrame:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIWebGeolocationChallengeData : NSObject
{
    NSString *_token;
    NSURL *_requestingURL;
    UIWindow *_window;
    id <WebAllowDenyPolicyListener> _listener;
}

@property(retain, nonatomic) id <WebAllowDenyPolicyListener> listener; // @synthesize listener=_listener;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(retain, nonatomic) NSURL *requestingURL; // @synthesize requestingURL=_requestingURL;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
- (void)dealloc;

@end

@interface _UIWebHighlightLongPressGestureRecognizer : UILongPressGestureRecognizer
{
}

- (void)cancel;

@end

__attribute__((visibility("hidden")))
@interface _UIWebMediaUploadItem : NSObject
{
    _Bool _video;
    NSString *_filePath;
    UIImage *_originalImage;
}

+ (id)mediaUploadItemWithFilePath:(id)arg1 image:(id)arg2 isVideo:(_Bool)arg3;
@property(nonatomic, getter=isVideo) _Bool video; // @synthesize video=_video;
@property(retain, nonatomic) UIImage *originalImage; // @synthesize originalImage=_originalImage;
@property(retain, nonatomic) NSString *filePath; // @synthesize filePath=_filePath;
- (id)displayImage;
- (id)_imageForVideoFile:(id)arg1;
- (id)_squareImage:(id)arg1;
- (struct CGRect)_squareCropRectForSize:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFilePath:(id)arg1 image:(id)arg2 isVideo:(_Bool)arg3;

@end

@interface _UIWebViewController : UIViewController
{
    _UIAsyncInvocation *_cancelViewServiceRequest;
    _UIRemoteWebViewController *_remoteViewController;
    _UIQueueingServiceWebViewControllerProxy *_serviceProxy;
    _Bool _hasCalledBeginAppearanceTransition;
    _Bool _hasCalledEndAppearanceTransition;
    _Bool _canGoBack;
    _Bool _canGoForward;
    _Bool _loading;
    float _estimatedProgress;
    id <_UIWebViewControllerDelegate> _delegate;
    UIBarButtonItem *_backBarButtonItem;
    UIBarButtonItem *_forwardBarButtonItem;
    NSString *_pageTitle;
    NSString *_URLString;
}

@property(copy, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(readonly, copy, nonatomic) NSString *pageTitle; // @synthesize pageTitle=_pageTitle;
@property(readonly, nonatomic) float estimatedProgress; // @synthesize estimatedProgress=_estimatedProgress;
@property(readonly, nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(readonly, nonatomic) _Bool canGoForward; // @synthesize canGoForward=_canGoForward;
@property(readonly, nonatomic) _Bool canGoBack; // @synthesize canGoBack=_canGoBack;
@property(readonly, retain, nonatomic) UIBarButtonItem *forwardBarButtonItem; // @synthesize forwardBarButtonItem=_forwardBarButtonItem;
@property(readonly, retain, nonatomic) UIBarButtonItem *backBarButtonItem; // @synthesize backBarButtonItem=_backBarButtonItem;
@property(nonatomic) id <_UIWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_sendEndAppearanceTransitionIfReady;
- (void)_sendBeginAppearanceTransitionIfReadyAnimated:(_Bool)arg1;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_dispatchDidDismissViewController;
- (void)_dispatchWillPresentViewControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_decidePolicyForEncodedRequest:(id)arg1 inMainFrame:(_Bool)arg2 navigationType:(id)arg3 replyHandler:(CDUnknownBlockType)arg4;
- (void)_webContentSizeWithReplyHandler:(CDUnknownBlockType)arg1;
- (void)configureWithSettings:(id)arg1;
- (void)loadView;
- (void)stopLoading;
- (void)reload;
- (void)goForward;
- (void)goBack;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadRequest:(id)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)_setURLString:(id)arg1;
- (void)_setTitle:(id)arg1;
- (void)_setCanGoBack:(_Bool)arg1 canGoForward:(_Bool)arg2;
- (void)_setLoading:(_Bool)arg1 error:(id)arg2;
- (void)_setEstimatedProgress:(float)arg1;
- (void)dealloc;
- (void)queueingServiceProxy:(id)arg1 willQueueInvocation:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_connectToService;
- (void)_updateBarButtonItems;
- (void)_addRemoteView;

@end

__attribute__((visibility("hidden")))
@interface _UIWebViewScrollView : UIWebScrollView
{
    _UIWebViewScrollViewDelegateForwarder *_forwarder;
    _Bool _bouncesSetExplicitly;
    UIWebBrowserView *_browserView;
}

- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)_setWebView:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)setBouncesHorizontally:(_Bool)arg1;
- (void)setBouncesVertically:(_Bool)arg1;
- (void)setBounces:(_Bool)arg1;
- (void)_weaklySetBouncesHorizontally:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _UIWebViewScrollViewDelegateForwarder : NSObject <UIScrollViewDelegate>
{
    id <UIScrollViewDelegate> _delegate;
    UIWebView *_webView;
}

@property(nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) id <UIScrollViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _UIWebViewSettings : NSObject <NSCopying>
{
    _Bool _allowsInlineMediaPlayback;
    _Bool _mediaPlaybackRequiresUserAction;
    _Bool _mediaPlaybackAllowsAirPlay;
    _Bool _suppressesIncrementalRendering;
    unsigned long long _dataDetectorTypes;
    NSString *_customUserAgent;
}

+ (id)defaultSettings;
@property(copy, nonatomic) NSString *customUserAgent; // @synthesize customUserAgent=_customUserAgent;
@property(nonatomic) _Bool suppressesIncrementalRendering; // @synthesize suppressesIncrementalRendering=_suppressesIncrementalRendering;
@property(nonatomic) _Bool mediaPlaybackAllowsAirPlay; // @synthesize mediaPlaybackAllowsAirPlay=_mediaPlaybackAllowsAirPlay;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction; // @synthesize mediaPlaybackRequiresUserAction=_mediaPlaybackRequiresUserAction;
@property(nonatomic) _Bool allowsInlineMediaPlayback; // @synthesize allowsInlineMediaPlayback=_allowsInlineMediaPlayback;
@property(nonatomic) unsigned long long dataDetectorTypes; // @synthesize dataDetectorTypes=_dataDetectorTypes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_encodeAsDictionary;
- (id)_initWithDictionary:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface _UIWebViewportHandler : NSObject
{
    _Bool _initialConfigurationHasBeenSentToDelegate;
    struct _UIWebViewportConfiguration _defaultConfiguration;
    struct _UIWebViewportConfiguration _configuration;
    unsigned int _webkitDefinedConfigurationFlags;
    struct CGSize _availableViewSize;
    _Bool _classicViewportMode;
    id <_UIWebViewportHandlerDelegate> _delegate;
    struct CGRect _documentBounds;
}

@property(readonly, nonatomic, getter=isClassicViewportMode) _Bool classicViewportMode; // @synthesize classicViewportMode=_classicViewportMode;
@property(readonly, nonatomic) unsigned int webkitDefinedConfigurationFlags; // @synthesize webkitDefinedConfigurationFlags=_webkitDefinedConfigurationFlags;
@property(readonly, nonatomic) struct CGSize availableViewSize; // @synthesize availableViewSize=_availableViewSize;
@property(readonly, nonatomic) struct CGRect documentBounds; // @synthesize documentBounds=_documentBounds;
@property(nonatomic) id <_UIWebViewportHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (float)minimumScaleForViewSize:(struct CGSize)arg1;
- (double)integralScaleForScale:(double)arg1 keepingPointFixed:(struct CGPoint *)arg2;
- (double)integralInitialScale;
- (float)viewportHeight;
- (float)viewportWidth;
- (void)resetViewportConfiguration:(const struct _UIWebViewportConfiguration *)arg1;
- (void)overrideViewportConfiguration:(const struct _UIWebViewportConfiguration *)arg1;
- (void)clearWebKitViewportConfigurationFlags;
- (void)applyWebKitViewportArgumentsSize:(struct CGSize)arg1 initialScale:(float)arg2 minimumScale:(float)arg3 maximumScale:(float)arg4 allowsUserScaling:(float)arg5;
- (void)setAvailableViewSize:(struct CGSize)arg1;
- (void)setDocumentBounds:(struct CGRect)arg1;
- (void)update:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) struct _UIWebViewportConfiguration rawViewConfiguration;
@property(readonly, nonatomic) _Bool allowsUserScaling;
@property(readonly, nonatomic) float maximumScale;
@property(readonly, nonatomic) float minimumScale;
@property(readonly, nonatomic) float initialScale;

@end

__attribute__((visibility("hidden")))
@interface _UIWindowAnchoringConstraint : NSAutoresizingMaskLayoutConstraint
{
    UIWindow *_window;
}

@property(nonatomic) UIWindow *window; // @synthesize window=_window;
- (_Bool)_addToEngine:(id)arg1 integralizationAdjustment:(double)arg2 mutuallyExclusiveConstraints:(id *)arg3;

@end

__attribute__((visibility("hidden")))
@interface _UIWindowAnimationController : NSObject <UIViewControllerAnimatedTransitioning>
{
    _Bool _shouldCrossfade;
    UIWindow *_window;
}

+ (id)animationControllerWithWindow:(id)arg1;
@property(nonatomic) _Bool shouldCrossfade; // @synthesize shouldCrossfade=_shouldCrossfade;
@property(nonatomic) UIWindow *window; // @synthesize window=_window;
- (void)animateTransition:(id)arg1;
- (void)_performLayoutAnimationWithContext:(id)arg1 windowGeometryUpdatingBlock:(CDUnknownBlockType)arg2;
- (void)_performCrossfadeAnimationWithContext:(id)arg1 windowGeometryUpdatingBlock:(CDUnknownBlockType)arg2;
- (double)transitionDuration:(id)arg1;
- (id)initWithWindow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _UIWindowAutoresizingConstraint : NSAutoresizingMaskLayoutConstraint
{
}

@end

__attribute__((visibility("hidden")))
@interface _UIWindowRotationAnimationController : _UIWindowAnimationController
{
    _Bool _skipCallbacks;
    _Bool _earlyLayoutIsNeeded;
    _Bool _updateStatusBarIfNecessary;
    CDUnknownBlockType _animations;
    double _duration;
}

@property(nonatomic) _Bool updateStatusBarIfNecessary; // @synthesize updateStatusBarIfNecessary=_updateStatusBarIfNecessary;
@property(nonatomic) _Bool earlyLayoutIsNeeded; // @synthesize earlyLayoutIsNeeded=_earlyLayoutIsNeeded;
@property(nonatomic) _Bool skipCallbacks; // @synthesize skipCallbacks=_skipCallbacks;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(copy, nonatomic) CDUnknownBlockType animations; // @synthesize animations=_animations;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (void)dealloc;

@end

