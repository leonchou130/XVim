//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CC_SHA256state_st {
    unsigned int count[2];
    unsigned int hash[8];
    unsigned int wbuf[16];
};

struct internal_state;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1[8];
} CDStruct_6ad76789;

// Ambiguous groups
typedef struct {
    unsigned int limit:1;
} CDStruct_88fc3008;

typedef struct {
    unsigned int maxChanges:1;
} CDStruct_f8809e99;

typedef struct {
    unsigned int status:1;
} CDStruct_47fe53f2;

typedef struct {
    unsigned int type:1;
} CDStruct_f953fb60;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
// UUID: CA93F3DE-9A0F-3048-8B93-6EAD23F1E711
//
//                           Arch: x86_64
//                Current version: 244.2.0
//          Compatibility version: 1.0.0
//                 Source version: 244.2.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol APSConnectionDelegate <NSObject>
- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;

@optional
- (void)connectionDidReconnect:(APSConnection *)arg1;
- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;
- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;
- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;
- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;
@end

@protocol CKBXPCClient <NSObject>
- (void)handleOperationCompletion:(CKOperationResult *)arg1 forOperationWithID:(NSString *)arg2;
- (void)handleOperationProgress:(NSDictionary *)arg1 forOperationWithID:(NSString *)arg2;
@end

@protocol CKDAccountInfoProvider <NSObject>
- (NSString *)trafficContainerIdentifier;
- (_Bool)shouldFailAllTasks;
- (void)renewAuthTokenWithCompletionHandler:(void (^)(_Bool, NSError *))arg1;
- (NSString *)cloudKitAuthToken;
- (NSString *)iCloudAuthToken;
- (_Bool)canAccessAccount;
- (_Bool)accountWantsPushRegistration;
- (_Bool)isUnitTestingAccount;
- (_Bool)isAnonymousAccount;
- (NSArray *)enabledKeyboards;
- (NSString *)regionCode;
- (NSString *)languageCode;
- (NSString *)serverPreferredPushEnvironment;
- (NSString *)deviceName;
- (NSString *)hardwareID;
- (NSBundle *)applicationBundle;
- (NSString *)bundleID;
- (CKContainerID *)containerID;
- (NSString *)containerScopedUserID;
- (NSString *)dsid;
- (void)renewMescalSessionForRequest:(CKDURLRequest *)arg1 withCompletionHandler:(void (^)(_Bool))arg2;
- (void)resetMescalSession;
- (CKDMescalSession *)mescalSession;
- (void)fetchDeviceIDUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 withCompletionHandler:(void (^)(NSString *, NSError *))arg3;
- (void)fetchContainerScopedUserIDUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 withCompletionHandler:(void (^)(NSString *, NSError *))arg3;
- (void)fetchPublicURLUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 serverType:(long long)arg3 completionHandler:(void (^)(NSURL *, NSError *))arg4;
- (void)fetchConfigurationUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 withCompletionHandler:(void (^)(CKDServerConfiguration *, NSError *))arg3;
- (CKDServerConfiguration *)config;
- (NSURL *)baseURLForServerType:(long long)arg1 partitionType:(long long)arg2;

@optional
- (void)noteTimeSpentInNetworking:(double)arg1;
- (void)noteFailedProtocolRequest;
- (void)noteFailedNetworkRequest;
- (void)noteSuccessfulRequestWithNumDownloadedElements:(long long)arg1;
- (NSDictionary *)additionalHeaderValues;
@end

@protocol CKDCancelling
- (void)cancel;
@end

@protocol CKDFlowControllable
@property(readonly, nonatomic) NSString *sectionID;
@property(readonly, nonatomic) NSString *flowControlKey;
@end

@protocol CKDProtobufMessageSigningDelegate <NSObject>
- (void)generateSignature:(void (^)(NSData *, NSError *))arg1;
- (void)updateSignatureWithTransmittedBytes:(NSData *)arg1;
@end

@protocol CKDResponseBodyParser <NSObject>
@property(copy, nonatomic) CDUnknownBlockType objectParsedBlock;
@property(readonly, nonatomic) NSError *parserError;
- (void)finishWithCompletion:(void (^)(NSError *))arg1;
- (void)processData:(NSData *)arg1;
@end

@protocol CKDSystemAvailabilityWatcher <NSObject>
- (void)systemAvailabilityChanged:(_Bool)arg1;
@end

@protocol CKDURLSessionTaskDelegate <NSObject>
@property(readonly, nonatomic) NSString *sectionID;
@property(readonly, nonatomic) NSOperationQueue *delegateQueue;
- (void)URLSessionTask:(NSURLSessionTask *)arg1 conditionalRequirementsChanged:(_Bool)arg2;
- (void)URLSessionTaskIsWaitingForConnection:(NSURLSessionTask *)arg1;
- (NSURLRequest *)URLSessionTask:(NSURLSessionTask *)arg1 requestForEstablishedConnection:(NSURLRequest *)arg2;
- (void)URLSessionDataTask:(NSURLSessionDataTask *)arg1 didReceiveData:(NSData *)arg2;
- (void)URLSessionDataTask:(NSURLSessionDataTask *)arg1 didReceiveResponse:(NSURLResponse *)arg2 completionHandler:(void (^)(long long))arg3;
- (void)URLSessionTask:(NSURLSessionTask *)arg1 didCompleteWithError:(NSError *)arg2;
- (void)URLSessionTask:(NSURLSessionTask *)arg1 didSendBodyData:(long long)arg2 totalBytesSent:(long long)arg3 totalBytesExpectedToSend:(long long)arg4;
- (void)URLSessionTask:(NSURLSessionTask *)arg1 needNewBodyStream:(void (^)(NSInputStream *))arg2;
- (void)URLSessionTask:(NSURLSessionTask *)arg1 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg2 newRequest:(NSURLRequest *)arg3 completionHandler:(void (^)(NSURLRequest *))arg4;
@end

@protocol CKLoggingProtocol <NSObject>
- (void)logWithFile:(const char *)arg1 function:(const char *)arg2 line:(int)arg3 level:(int)arg4 section:(NSString *)arg5 format:(NSString *)arg6;
@end

@protocol CKPropertyCoding <NSObject>
- (NSDictionary *)dictionaryPropertyEncoding;
- (id)initWithPropertyDictionary:(NSDictionary *)arg1;
@end

@protocol CKXPCDaemon <NSObject>
- (void)tossConfigWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)repairZonePCSWithInfo:(CKRepairZonePCSOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)getPCSDiagnosticsForZonesWithCompletionHandler:(void (^)(CKPCSDiagnosticInformation *))arg1;
- (void)updatePushTokens;
- (void)wipeAllCachesAndDie;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(void (^)(NSArray *, NSError *))arg2;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(void (^)(long long, NSError *))arg3;
- (void)accountChangedWithID:(NSString *)arg1;
- (void)accountsWillDeleteAccount:(NSString *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)accountsDidRevokeAccessToBundleID:(NSString *)arg1 containerIdentifiers:(NSArray *)arg2;
- (void)accountsDidGrantAccessToBundleID:(NSString *)arg1 containerIdentifiers:(NSArray *)arg2;
- (void)getBehaviorOptionForKey:(NSString *)arg1 isContainerOption:(_Bool)arg2 completionHandler:(void (^)(id))arg3;
- (void)clearAuthTokensForRecordWithID:(CKRecordID *)arg1 inScope:(long long)arg2;
- (void)clearRecordCacheWithDatabaseScope:(long long)arg1;
- (void)clearAssetCacheWithDatabaseScope:(long long)arg1;
- (void)setFakeError:(NSError *)arg1 forNextRequestOfClassName:(NSString *)arg2;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(void (^)(NSString *, NSError *))arg1;
- (void)performFetchUserQuotaOperation:(CKDatabaseOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performUpdateUserPresenceOperation:(CKUpdateUserPresenceOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchLikesOperation:(CKFetchLikesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performLikeItemsOperation:(CKLikeItemsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performModifyShareCommentsOperation:(CKModifyShareCommentsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchShareCommentsOperation:(CKFetchShareCommentsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performShareInvitationResponseOperation:(CKShareInvitationResponseOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchShareInvitationsOperation:(CKFetchShareInvitationsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performModifySharesOperation:(CKModifySharesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchSharesOperation:(CKFetchSharesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performMarkNotificationsReadOperation:(CKMarkNotificationsReadOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchNotificationChangesOperation:(CKFetchNotificationChangesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performModifyBadgeOperation:(CKModifyBadgeOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchRecordZonesOperation:(CKFetchRecordZonesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performModifyRecordZonesOperation:(CKModifyRecordZonesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchSubscriptionsOperation:(CKFetchSubscriptionsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performModifySubscriptionsOperation:(CKModifySubscriptionsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performQueryOperation:(CKQueryOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)getNewWebSharingIdentity:(void (^)(CKEncryptedData *, NSError *))arg1;
- (void)performModifyWebSharingOperation:(CKModifyWebSharingOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performPublishAssetsOperation:(CKPublishAssetsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchRecordVersionsOperation:(CKFetchRecordVersionsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchRecordChangesOperation:(CKFetchRecordChangesOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performModifyRecordsOperation:(CKModifyRecordsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performFetchRecordsOperation:(CKFetchRecordsOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performDiscoverAllContactsOperation:(CKDiscoverUserInfosOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)performDiscoverUserInfosOperation:(CKDiscoverUserInfosOperationInfo *)arg1 withBlock:(void (^)(void))arg2;
- (void)setContainerID:(CKContainerID *)arg1 bundleID:(NSString *)arg2 accountInfoOverride:(CKAccountInfo *)arg3 withBlock:(void (^)(NSArray *, NSError *))arg4;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(void (^)(long long, NSError *))arg2;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(void (^)(long long, NSError *))arg2;
- (void)currentUserIDWithCompletionHandler:(void (^)(NSString *, NSError *))arg1;
- (void)accountStatusWithCompletionHandler:(void (^)(long long, NSError *))arg1;
- (void)cancelOperationWithIdentifier:(NSString *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol NSURLSessionTaskDelegatePrivate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _conditionalRequirementsChanged:(_Bool)arg3;
- (void)URLSession:(NSURLSession *)arg1 _taskIsWaitingForConnection:(NSURLSessionTask *)arg2;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 _willSendRequestForEstablishedConnection:(NSURLRequest *)arg3 completionHandler:(void (^)(NSURLRequest *))arg4;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@interface ACAccount (CloudKitAdditions)
@property(readonly, nonatomic) ACAccount *ck_cloudKitAccount;
@end

__attribute__((visibility("hidden")))
@interface CKAssetHandle : CKObject
{
    NSNumber *_itemID;
    NSString *_UUID;
    NSURL *_fileURL;
    NSNumber *_deviceID;
    NSNumber *_fileID;
    NSNumber *_generationID;
    NSDate *_lastUsedDate;
}

+ (_Bool)getDeviceID:(id *)arg1 fileID:(id *)arg2 generationID:(id *)arg3 forFileURL:(id)arg4 erorr:(id *)arg5;
@property(retain, nonatomic) NSDate *lastUsedDate; // @synthesize lastUsedDate=_lastUsedDate;
@property(retain, nonatomic) NSNumber *generationID; // @synthesize generationID=_generationID;
@property(retain, nonatomic) NSNumber *fileID; // @synthesize fileID=_fileID;
@property(retain, nonatomic) NSNumber *deviceID; // @synthesize deviceID=_deviceID;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(retain, nonatomic) NSNumber *itemID; // @synthesize itemID=_itemID;
- (void).cxx_destruct;
- (int)openFileDescriptorWithError:(id *)arg1;
- (id)initWithItemID:(id)arg1 UUID:(id)arg2 fileURL:(id)arg3;
- (id)description;
- (id)CKPropertiesDescription;

@end

__attribute__((visibility("hidden")))
@interface CKDAccount : NSObject <CKDAccountInfoProvider>
{
    _Bool _isUnitTestingAccount;
    _Bool _accountWantsPushRegistration;
    _Bool _isAnonymousAccount;
    _Bool _haveWarnedAboutServerPreferredPushEnvironment;
    ACAccountStore *_accountStore;
    ACAccountType *_acAccountType;
    CKDBackingAccount *_backingAccount;
    CKDClientContext *_context;
}

@property(nonatomic) _Bool haveWarnedAboutServerPreferredPushEnvironment; // @synthesize haveWarnedAboutServerPreferredPushEnvironment=_haveWarnedAboutServerPreferredPushEnvironment;
@property(nonatomic) _Bool isAnonymousAccount; // @synthesize isAnonymousAccount=_isAnonymousAccount;
@property(nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) CKDBackingAccount *backingAccount; // @synthesize backingAccount=_backingAccount;
@property(retain, nonatomic) ACAccountType *acAccountType; // @synthesize acAccountType=_acAccountType;
@property(retain, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
@property(nonatomic) _Bool accountWantsPushRegistration; // @synthesize accountWantsPushRegistration=_accountWantsPushRegistration;
@property(nonatomic) _Bool isUnitTestingAccount; // @synthesize isUnitTestingAccount=_isUnitTestingAccount;
- (void).cxx_destruct;
- (void)noteTimeSpentInNetworking:(double)arg1;
- (void)noteFailedProtocolRequest;
- (void)noteFailedNetworkRequest;
- (void)noteSuccessfulRequestWithNumDownloadedElements:(long long)arg1;
- (id)enabledKeyboards;
- (id)regionCode;
- (id)languageCode;
- (_Bool)shouldFailAllTasks;
- (void)renewAuthTokenWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)deviceName;
- (id)hardwareID;
@property(readonly, nonatomic) _Bool cloudPhotosIsEnabled;
@property(readonly, nonatomic) _Bool cloudKitIsEnabled;
- (_Bool)canAccessAccount;
@property(readonly, nonatomic) _Bool allowsCellularAccess;
- (id)iCloudAuthToken;
- (id)cloudKitAuthToken;
- (id)containerScopedUserID;
- (id)dsid;
- (id)baseURLForServerType:(long long)arg1 partitionType:(long long)arg2;
- (id)_urlBySettingCustomBaseURL:(id)arg1 onURL:(id)arg2;
@property(readonly, copy) NSString *description;
- (id)serverPreferredPushEnvironment;
- (id)trafficContainerIdentifier;
- (id)applicationBundle;
- (id)bundleID;
- (id)containerID;
@property(readonly, nonatomic) NSString *accountID;
@property(readonly, nonatomic) _Bool isFakeAccount;
- (void)renewMescalSessionForRequest:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)resetMescalSession;
- (id)mescalSession;
- (void)fetchDeviceIDUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)fetchContainerScopedUserIDUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)fetchPublicURLUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 serverType:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)fetchConfigurationUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)config;
@property(readonly, nonatomic) NSString *accountIdentifier;
- (id)initFakeAccountWithEmail:(id)arg1 password:(id)arg2 context:(id)arg3;
- (id)initWithAccountID:(id)arg1 context:(id)arg2;
- (id)initAnonymousAccountWithContext:(id)arg1;
- (id)initPrimaryAccountWithContext:(id)arg1;
- (id)_initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDAccountNotifier : NSObject
{
    int _accountChangedToken;
    NSMapTable *_notificationObservers;
}

+ (id)sharedNotifier;
@property(retain, nonatomic) NSMapTable *notificationObservers; // @synthesize notificationObservers=_notificationObservers;
@property(nonatomic) int accountChangedToken; // @synthesize accountChangedToken=_accountChangedToken;
- (void).cxx_destruct;
- (void)unregisterObserverForAccountChangeNotification:(id)arg1;
- (void)registerObserver:(id)arg1 forAccountChangeNotification:(CDUnknownBlockType)arg2;
- (void)postAccountChangedNotification:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDAppContainerIntersectionMetadata : NSObject
{
    long long _tokenRegistered;
    long long _usesAPSPublicToken;
}

@property(nonatomic) long long usesAPSPublicToken; // @synthesize usesAPSPublicToken=_usesAPSPublicToken;
@property(nonatomic) long long tokenRegistered; // @synthesize tokenRegistered=_tokenRegistered;
- (id)init;

@end

@interface CKDAppContainerTuple : NSObject <NSCopying>
{
    NSString *_applicationBundleID;
    CKContainerID *_containerID;
}

@property(retain, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
- (void).cxx_destruct;
- (id)description;
- (id)CKPropertiesDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithApplicationBundleID:(id)arg1 containerID:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDApplicationMetadata : NSObject
{
    NSString *_apsEnvironmentString;
    long long _isApplication;
}

@property(nonatomic) long long isApplication; // @synthesize isApplication=_isApplication;
@property(retain, nonatomic) NSString *apsEnvironmentString; // @synthesize apsEnvironmentString=_apsEnvironmentString;
- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDAssetCache : NSObject
{
    _Bool _isUnitTestingAccount;
    _Bool _isEvictionScheduled;
    int _fileDownloadPathFd;
    CKDMMCS *_MMCS;
    CKSQLitePool *_dbPool;
    NSString *_applicationBundleID;
    NSString *_dbPath;
    NSString *_fileDownloadPath;
    NSString *_packageDownloadPath;
    NSString *_packageUploadPath;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_expiryTimer;
}

+ (int)openFdForDownloadPath:(id)arg1 error:(id *)arg2;
+ (id)assetCacheWithApplicationBundleID:(id)arg1 dbPath:(id)arg2 fileDownloadPath:(id)arg3 packageDownloadPath:(id)arg4 packageUploadPath:(id)arg5;
+ (id)_sharedCachesByBundleID;
+ (id)_sharedCachesQueue;
@property _Bool isEvictionScheduled; // @synthesize isEvictionScheduled=_isEvictionScheduled;
@property(nonatomic) int fileDownloadPathFd; // @synthesize fileDownloadPathFd=_fileDownloadPathFd;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *expiryTimer; // @synthesize expiryTimer=_expiryTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSString *packageUploadPath; // @synthesize packageUploadPath=_packageUploadPath;
@property(retain, nonatomic) NSString *packageDownloadPath; // @synthesize packageDownloadPath=_packageDownloadPath;
@property(retain, nonatomic) NSString *fileDownloadPath; // @synthesize fileDownloadPath=_fileDownloadPath;
@property(retain, nonatomic) NSString *dbPath; // @synthesize dbPath=_dbPath;
@property(retain, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(nonatomic) _Bool isUnitTestingAccount; // @synthesize isUnitTestingAccount=_isUnitTestingAccount;
@property(readonly, nonatomic) CKSQLitePool *dbPool; // @synthesize dbPool=_dbPool;
@property(nonatomic) __weak CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
- (void).cxx_destruct;
- (void)expireAssetHandlesIfNecessary;
- (void)_scheduleExpirationForAssetHandles;
- (void)_expireAssetHandles;
- (void)evictAllFilesForced:(_Bool)arg1;
- (void)_evictFilesForced:(_Bool)arg1;
- (void)_evictPackagesForced:(_Bool)arg1;
- (void)_evictDownloadedFilesWithDatabase:(id)arg1 forced:(_Bool)arg2;
- (void)_evictDownloadedFilesForced:(_Bool)arg1;
- (void)_scheduleEvictionForDownloadedFiles;
- (int)openFileDescriptorForItemID:(unsigned long long)arg1 itemType:(id *)arg2 error:(id *)arg3;
- (void)stopTrackingAssetHandlesByItemIDs:(id)arg1;
- (_Bool)startTrackingAssetHandles:(id)arg1 error:(id *)arg2;
- (id)addAssetHandleForDownloadedFileURL:(id)arg1 itemID:(unsigned long long)arg2 signature:(id)arg3 error:(id *)arg4;
- (id)addAssetHandleForData:(id)arg1 signature:(id)arg2 error:(id *)arg3;
- (id)_addAssetHandleForFileURL:(id)arg1 signature:(id)arg2 itemID:(id)arg3 error:(id *)arg4;
- (void)_unregisterItemIDs:(id)arg1;
- (void)cancelExpiryTimer;
- (void)clearForced:(_Bool)arg1;
- (void)dealloc;
- (id)initWithApplicationBundleID:(id)arg1 dbPath:(id)arg2 fileDownloadPath:(id)arg3 packageDownloadPath:(id)arg4 packageUploadPath:(id)arg5;

@end

@interface CKDBackingAccount : NSObject
{
}

+ (_Bool)ensureCloudKitChildAccountOnParentAccount:(id)arg1 inStore:(id)arg2;
+ (id)fakeAccountWithEmail:(id)arg1 password:(id)arg2;
+ (id)primaryAccountInStore:(id)arg1;
+ (id)accountWithIdentifier:(id)arg1 inStore:(id)arg2;
+ (Class)_platformBackingAccountClass;
@property(readonly, nonatomic) NSURL *privateDeviceServiceURL;
@property(readonly, nonatomic) NSURL *privateShareServiceURL;
@property(readonly, nonatomic) NSURL *privateCloudDBURL;
- (id)accountPropertiesForDataclass:(id)arg1;
- (void)renewAuthTokenInStore:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool cloudPhotosIsEnabled;
@property(readonly, nonatomic) _Bool cloudKitIsEnabled;
@property(readonly, nonatomic) _Bool allowsCellularAccess;
@property(readonly, nonatomic) _Bool isFakeAccount;
@property(readonly, nonatomic) NSString *serverPreferredPushEnvironment;
@property(readonly, nonatomic) NSString *iCloudAuthToken;
@property(readonly, nonatomic) NSString *cloudKitAuthToken;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic) NSString *dsid;
@property(readonly, nonatomic) NSString *primaryEmail;
- (id)ckAccount;
- (id)init;
- (id)_init;

@end

__attribute__((visibility("hidden")))
@interface CKDBackingFakeAccount : CKDBackingAccount
{
    NSString *_dsid;
    NSString *_identifier;
    NSString *_primaryEmail;
    NSString *_password;
    NSDictionary *_accountBag;
    NSObject<OS_dispatch_queue> *_fakeAccountInfoQueue;
}

+ (id)fakeAccountWithEmail:(id)arg1 password:(id)arg2;
+ (Class)_platformBackingAccountClass;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *fakeAccountInfoQueue; // @synthesize fakeAccountInfoQueue=_fakeAccountInfoQueue;
@property(retain, nonatomic) NSDictionary *accountBag; // @synthesize accountBag=_accountBag;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *primaryEmail; // @synthesize primaryEmail=_primaryEmail;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *dsid; // @synthesize dsid=_dsid;
- (void).cxx_destruct;
- (void)renewAuthTokenInStore:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)accountPropertiesForDataclass:(id)arg1;
- (_Bool)allowsCellularAccess;
- (_Bool)isFakeAccount;
- (_Bool)cloudPhotosIsEnabled;
- (_Bool)cloudKitIsEnabled;
- (id)iCloudAuthToken;
- (id)cloudKitAuthToken;
- (id)ckAccount;
- (id)_initFakeAccountWithEmail:(id)arg1 password:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDBackingiOSAccount : CKDBackingAccount
{
    ACAccountStore *_accountStore;
    ACAccount *_parentAppleAccount;
}

+ (void)determineCloudKitInfoFromEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)primaryAccountInStore:(id)arg1;
+ (id)accountWithIdentifier:(id)arg1 inStore:(id)arg2;
@property(retain, nonatomic) ACAccount *parentAppleAccount; // @synthesize parentAppleAccount=_parentAppleAccount;
@property(readonly, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
- (void).cxx_destruct;
- (id)accountPropertiesForDataclass:(id)arg1;
- (_Bool)allowsCellularAccess;
- (id)iCloudAuthToken;
- (id)cloudKitAuthToken;
- (_Bool)cloudPhotosIsEnabled;
- (_Bool)cloudKitIsEnabled;
- (id)identifier;
- (id)dsid;
- (id)primaryEmail;
@property(readonly, nonatomic) ACAccount *ckAccount;
- (id)_initWithParentAccount:(id)arg1 inStore:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDOperation : NSOperation <CKDFlowControllable>
{
    _Bool _isFinished;
    _Bool _isExecuting;
    _Bool _useEncryption;
    _Bool _usesBackgroundSession;
    _Bool _allowsCellularAccess;
    CKDURLRequest *_request;
    NSString *_operationID;
    NSDate *_startDate;
    CKDOperation *_parentOperation;
    CKDClientContext *_context;
    CKDClientProxy *_proxy;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSString *_deviceIdentifier;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSError *_error;
    unsigned long long _state;
    NSObject<OS_dispatch_group> *_stateTransitionGroup;
    NSMutableArray *_requestUUIDs;
    NSString *_parentSectionID;
    NSMutableArray *_childOperations;
    NSMutableArray *_finishedChildOperationIDs;
    id <NSObject> _powerAssertion;
}

+ (id)_globalOperationCallbackQueueForQOS:(long long)arg1;
@property(retain, nonatomic) id <NSObject> powerAssertion; // @synthesize powerAssertion=_powerAssertion;
@property(retain, nonatomic) NSMutableArray *finishedChildOperationIDs; // @synthesize finishedChildOperationIDs=_finishedChildOperationIDs;
@property(retain, nonatomic) NSMutableArray *childOperations; // @synthesize childOperations=_childOperations;
@property(retain, nonatomic) NSString *parentSectionID; // @synthesize parentSectionID=_parentSectionID;
@property(retain, nonatomic) NSMutableArray *requestUUIDs; // @synthesize requestUUIDs=_requestUUIDs;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *stateTransitionGroup; // @synthesize stateTransitionGroup=_stateTransitionGroup;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(retain, nonatomic) NSString *sourceApplicationSecondaryIdentifier; // @synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier;
@property(retain, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) _Bool usesBackgroundSession; // @synthesize usesBackgroundSession=_usesBackgroundSession;
@property(nonatomic) _Bool useEncryption; // @synthesize useEncryption=_useEncryption;
@property(nonatomic) __weak CKDClientProxy *proxy; // @synthesize proxy=_proxy;
@property(readonly, nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
@property(nonatomic) __weak CKDOperation *parentOperation; // @synthesize parentOperation=_parentOperation;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(readonly, nonatomic) NSString *operationID; // @synthesize operationID=_operationID;
@property(nonatomic) _Bool isExecuting; // @synthesize isExecuting=_isExecuting;
@property(nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
- (void).cxx_destruct;
@property(readonly, nonatomic) CKOperationResult *operationResult;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (void)configureRequest:(id)arg1;
@property(retain, nonatomic) CKDURLRequest *request; // @synthesize request=_request;
- (_Bool)isConcurrent;
@property(readonly, nonatomic) unsigned int QOSClass;
@property(readonly, nonatomic) NSString *flowControlKey;
@property(readonly, nonatomic) _Bool shouldCheckAppVersion;
- (_Bool)_errorShouldImpactFlowControl:(id)arg1;
- (id)nameForState:(unsigned long long)arg1;
- (void)makeStateTransition:(_Bool)arg1;
- (_Bool)makeStateTransition;
- (void)cancel;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)finishWithError:(id)arg1;
- (void)_finishInternalOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)start;
- (_Bool)operationShouldBeFlowControlled;
- (_Bool)_checkAppVersion;
- (void)_continueOperationStart;
- (void)addAndRunChildOperation:(id)arg1;
- (id)newChildOperationInfoOfClass:(Class)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)CKPropertiesDescription;
@property(readonly, nonatomic) NSString *sectionID;
- (void)dealloc;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

@interface CKDBatchGetUserPrivacySettingsOperation : CKDOperation
{
    NSArray *_containerPrivacySettings;
}

+ (id)appPermissionGroupsFromContainerPrivacySettings:(id)arg1;
@property(copy, nonatomic) NSArray *containerPrivacySettings; // @synthesize containerPrivacySettings=_containerPrivacySettings;
- (void).cxx_destruct;
- (void)main;
- (_Bool)shouldCheckAppVersion;

@end

__attribute__((visibility("hidden")))
@interface CKDURLRequest : NSObject <CKDURLSessionTaskDelegate, CKDProtobufMessageSigningDelegate, CKDFlowControllable>
{
    id <CKDAccountInfoProvider> _accountInfoProvider;
    double _timeoutInterval;
    long long _responseStatusCode;
    NSRunLoop *_runLoopToFireOn;
    NSString *_requestUUID;
    _Bool _didSendRequest;
    _Bool _didFinishLoading;
    _Bool _finished;
    _Bool _didRetryAuth;
    _Bool _didRetrySignature;
    id <CKDResponseBodyParser> _responseBodyParser;
    _Bool _allowAutomaticRedirects;
    CDUnknownBlockType _requestProgressBlock;
    CDUnknownBlockType _responseProgressBlock;
    CDUnknownBlockType _completionBlock;
    NSMutableDictionary *_overriddenHeaders;
    NSMutableArray *_redirectHistory;
    NSData *_fakeResponseData;
    _Bool _haveParsedFakeResponseData;
    CKDProtobufStreamWriter *_streamWriter;
    struct CC_SHA256state_st _mescalTxSignature;
    struct CC_SHA256state_st _mescalRxSignature;
    NSMutableData *_receivedMescalData;
    _Bool _usesBackgroundSession;
    _Bool _allowsCellularAccess;
    _Bool _cancelled;
    _Bool _haveCachedServerType;
    _Bool _haveCachedPartitionType;
    NSDictionary *_requestProperties;
    CKDClientContext *_context;
    long long _databaseScope;
    CKDProtocolTranslator *_translator;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSArray *_requestOperations;
    NSString *_flowControlKey;
    NSString *_hardwareIDOverride;
    NSError *_error;
    NSOperationQueue *_delegateQueue;
    NSURLSessionConfiguration *_sessionConfiguration;
    NSURLSessionDataTask *_urlSessionTask;
    NSURLRequest *_request;
    NSHTTPURLResponse *_response;
    NSFileHandle *_responseFileHandle;
    NSFileHandle *_requestFileHandle;
    NSFileHandle *_binaryResponseFileHandle;
    NSFileHandle *_binaryRequestFileHandle;
    NSString *_responseLogFilePath;
    NSString *_requestLogFilePath;
    NSString *_binaryResponseLogFilePath;
    NSString *_binaryRequestLogFilePath;
    NSString *_deviceID;
    unsigned long long _numDownloadedElements;
    long long _cachedServerType;
    long long _cachedPartitionType;
    NSDate *_dateRequestWentOut;
}

+ (id)_sharedCookieStorage;
+ (id)_logQueue;
@property(retain) NSDate *dateRequestWentOut; // @synthesize dateRequestWentOut=_dateRequestWentOut;
@property(nonatomic) long long cachedPartitionType; // @synthesize cachedPartitionType=_cachedPartitionType;
@property(nonatomic) long long cachedServerType; // @synthesize cachedServerType=_cachedServerType;
@property(nonatomic) _Bool haveCachedPartitionType; // @synthesize haveCachedPartitionType=_haveCachedPartitionType;
@property(nonatomic) _Bool haveCachedServerType; // @synthesize haveCachedServerType=_haveCachedServerType;
@property(getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) unsigned long long numDownloadedElements; // @synthesize numDownloadedElements=_numDownloadedElements;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(retain, nonatomic) NSString *binaryRequestLogFilePath; // @synthesize binaryRequestLogFilePath=_binaryRequestLogFilePath;
@property(retain, nonatomic) NSString *binaryResponseLogFilePath; // @synthesize binaryResponseLogFilePath=_binaryResponseLogFilePath;
@property(retain, nonatomic) NSString *requestLogFilePath; // @synthesize requestLogFilePath=_requestLogFilePath;
@property(retain, nonatomic) NSString *responseLogFilePath; // @synthesize responseLogFilePath=_responseLogFilePath;
@property(retain, nonatomic) NSFileHandle *binaryRequestFileHandle; // @synthesize binaryRequestFileHandle=_binaryRequestFileHandle;
@property(retain, nonatomic) NSFileHandle *binaryResponseFileHandle; // @synthesize binaryResponseFileHandle=_binaryResponseFileHandle;
@property(retain, nonatomic) NSFileHandle *requestFileHandle; // @synthesize requestFileHandle=_requestFileHandle;
@property(retain, nonatomic) NSFileHandle *responseFileHandle; // @synthesize responseFileHandle=_responseFileHandle;
@property(retain) NSHTTPURLResponse *response; // @synthesize response=_response;
@property(retain) NSURLRequest *request; // @synthesize request=_request;
@property(retain) NSURLSessionDataTask *urlSessionTask; // @synthesize urlSessionTask=_urlSessionTask;
@property(retain) NSURLSessionConfiguration *sessionConfiguration; // @synthesize sessionConfiguration=_sessionConfiguration;
@property(retain, nonatomic) NSOperationQueue *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSString *hardwareIDOverride; // @synthesize hardwareIDOverride=_hardwareIDOverride;
@property(retain, nonatomic) NSString *flowControlKey; // @synthesize flowControlKey=_flowControlKey;
@property(readonly, nonatomic) NSArray *requestOperations; // @synthesize requestOperations=_requestOperations;
@property(retain, nonatomic) NSString *sourceApplicationSecondaryIdentifier; // @synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier;
@property(retain, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) _Bool usesBackgroundSession; // @synthesize usesBackgroundSession=_usesBackgroundSession;
@property(retain, nonatomic) CKDProtocolTranslator *translator; // @synthesize translator=_translator;
@property(nonatomic) long long databaseScope; // @synthesize databaseScope=_databaseScope;
@property(retain, nonatomic) CKDClientContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *requestUUID; // @synthesize requestUUID=_requestUUID;
@property(retain, nonatomic) NSDictionary *requestProperties; // @synthesize requestProperties=_requestProperties;
@property(nonatomic) _Bool allowAutomaticRedirects; // @synthesize allowAutomaticRedirects=_allowAutomaticRedirects;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy, nonatomic) CDUnknownBlockType responseProgressBlock; // @synthesize responseProgressBlock=_responseProgressBlock;
@property(copy, nonatomic) CDUnknownBlockType requestProgressBlock; // @synthesize requestProgressBlock=_requestProgressBlock;
@property(readonly, nonatomic) long long responseStatusCode; // @synthesize responseStatusCode=_responseStatusCode;
@property(retain, nonatomic) id <CKDResponseBodyParser> responseBodyParser; // @synthesize responseBodyParser=_responseBodyParser;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(retain, nonatomic) id <CKDAccountInfoProvider> accountInfoProvider; // @synthesize accountInfoProvider=_accountInfoProvider;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *sectionID;
@property(readonly, nonatomic) int isolationLevel;
@property(readonly, nonatomic) NSURL *lastRedirectURL;
@property(readonly, nonatomic) NSDictionary *responseHeaders;
- (void)_handleMescalSignatureResponse:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_addResponseHeadersToReceivedSignature:(id)arg1;
- (void)updateSignatureWithReceivedBytes:(id)arg1;
- (void)generateSignature:(CDUnknownBlockType)arg1;
- (void)_addRequestHeadersToTransmittedSignature:(id)arg1;
- (void)updateSignatureWithTransmittedBytes:(id)arg1;
- (void)reportStatusWithError:(id)arg1;
- (void)_handleBadPasswordResponse;
- (id)_errorFromHTTPResponse:(id)arg1;
- (void)URLSessionTask:(id)arg1 conditionalRequirementsChanged:(_Bool)arg2;
- (void)URLSessionTaskIsWaitingForConnection:(id)arg1;
- (id)URLSessionTask:(id)arg1 requestForEstablishedConnection:(id)arg2;
- (void)URLSessionTask:(id)arg1 didCompleteWithError:(id)arg2;
- (void)URLSessionTask:(id)arg1 didSendBodyData:(long long)arg2 totalBytesSent:(long long)arg3 totalBytesExpectedToSend:(long long)arg4;
- (void)URLSessionTask:(id)arg1 needNewBodyStream:(CDUnknownBlockType)arg2;
- (void)URLSessionDataTask:(id)arg1 didReceiveData:(id)arg2;
- (void)URLSessionDataTask:(id)arg1 didReceiveResponse:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSessionTask:(id)arg1 willPerformHTTPRedirection:(id)arg2 newRequest:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)tearDownResourcesAndReleaseTheZoneLocks;
- (void)tearDownResources;
- (_Bool)markAsFinished;
@property(readonly) _Bool isFinished;
- (void)finishWithError:(id)arg1;
- (void)cancel;
- (void)_populateURLSessionConfiguration;
- (void)_loadRequest:(id)arg1;
- (void)_performRequest;
- (id)_versionHeader;
- (void)_acquireZoneGates;
- (void)_registerPushTokens;
- (void)_fetchDeviceID;
- (void)_fetchContainerScopedUserID;
- (void)_setupMescal;
- (void)_setupConfiguration;
- (void)_setupPublicDatabaseURL;
- (void)performRequest;
- (id)zoneIDsToLock;
- (_Bool)allowsAnonymousAccount;
- (_Bool)allowsAuthedAccount;
- (_Bool)includeContainerInfo;
- (_Bool)requiresTokenRegistration;
- (_Bool)requiresSignature;
- (_Bool)requiresDeviceID;
- (_Bool)requiresConfiguration;
- (_Bool)requiresAppPartitionURL;
@property(readonly, nonatomic) CKDProtobufStreamWriter *streamWriter; // @synthesize streamWriter=_streamWriter;
- (id)operationRequestWithType:(int)arg1;
@property(readonly, nonatomic) NSString *requestContentType;
@property(readonly, nonatomic) NSString *protobufOperationName;
@property(readonly, nonatomic) NSString *acceptContentType;
@property(readonly, nonatomic) _Bool shouldCompressBody;
@property(readonly, nonatomic) NSString *path;
@property(readonly, nonatomic) NSArray *requestOperationClasses;
@property(readonly, nonatomic) int operationType;
- (Class)expectedResponseClass;
@property(readonly, nonatomic) NSURL *url;
@property(readonly, nonatomic) long long partitionType;
@property(readonly, nonatomic) long long serverType;
- (void)overrideRequestHeader:(id)arg1 withValue:(id)arg2;
- (_Bool)validate:(id *)arg1;
- (unsigned long long)cachePolicy;
- (void)requestDidParseNodeFailure:(id)arg1;
- (void)requestDidParsePlaintextObject:(id)arg1;
- (void)requestDidParsePlistObject:(id)arg1;
- (void)requestDidParseJSONObject:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (_Bool)expectsSingleObject;
@property(readonly, nonatomic) NSDictionary *additionalHeaderValues;
- (_Bool)shouldLogResponseBody;
- (id)defaultParserForContentType:(id)arg1;
- (long long)_handlePlistResult:(id)arg1;
- (long long)_handleServerJSONResult:(id)arg1;
- (long long)_handleServerProtobufResult:(id)arg1 rawData:(id)arg2;
- (void)_handleAuthFailure;
@property(readonly, nonatomic) _Bool hasRequestBody;
@property(readonly, nonatomic) NSInputStream *requestBodyStream;
@property(readonly, nonatomic) NSString *httpMethod;
- (void)_flushRequestResponseLogs;
- (void)_logParsedObject:(id)arg1;
- (void)_logRequest:(id)arg1;
- (void)_logHTTPResponse:(id)arg1;
- (id)_binaryRequestFileHandle;
- (id)_binaryResponseFileHandle;
- (id)_requestFileHandle;
- (id)_responseFileHandle;
- (void)_makeTrafficFileHandleWithPrefix:(id)arg1 outPath:(id *)arg2 outHandle:(id *)arg3;
@property(readonly, copy) NSString *description;
- (id)CKPropertiesDescription;
- (id)ckShortDescription;
- (void)inheritParentSectionID:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDBatchGetUserPrivacySettingsURLRequest : CKDURLRequest
{
    NSArray *_containerPrivacySettings;
}

@property(retain, nonatomic) NSArray *containerPrivacySettings; // @synthesize containerPrivacySettings=_containerPrivacySettings;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (_Bool)requiresTokenRegistration;
- (id)requestOperationClasses;
- (int)operationType;

@end

@interface CKDClientContext : NSObject <CKLoggingProtocol>
{
    _Bool _hasDataContainer;
    _Bool _canAccessProtectionData;
    _Bool _canSetDeviceIdentifier;
    _Bool _accountRefreshInProgress;
    _Bool _accountReloadRequired;
    _Bool _sandboxed;
    _Bool _finishedAppProxySetup;
    CKDServerConfiguration *_config;
    NSURL *_publicCloudDBURL;
    NSURL *_publicShareServiceURL;
    NSURL *_publicDeviceServiceURL;
    NSString *_containerScopedUserID;
    CKContainerID *_containerID;
    NSBundle *_applicationBundle;
    NSString *_applicationBundleID;
    NSString *_applicationVersion;
    NSURL *_applicationIcon;
    NSString *_applicationDisplayName;
    NSString *_applicationContainerPath;
    NSString *_applicationContainerCloudKitDirectory;
    NSString *_applicationCachesDirectory;
    NSString *_applicationMMCSDirectory;
    NSString *_applicationAssetDbDirectory;
    NSString *_applicationFileDownloadDirectory;
    NSString *_applicationPackageUploadDirectory;
    NSString *_applicationPackageDownloadDirectory;
    NSString *_applicationRecordCacheDirectory;
    NSString *_containerHardwareIDHash;
    long long _type;
    long long _usesAPSPublicToken;
    CKDAccount *_account;
    CKAccountInfo *_accountInfoOverride;
    CKDFlowControlManager *_flowControlManager;
    CKDMMCS *_MMCS;
    CKDPCSManager *_pcsManager;
    CKDZoneGatekeeper *_foregroundZoneGatekeeper;
    CKDZoneGatekeeper *_backgroundZoneGatekeeper;
    CKDMescalSession *_mescalSession;
    NSMutableDictionary *_fakeErrorByClassName;
    NSObject<OS_dispatch_semaphore> *_sema;
    NSObject<OS_dispatch_queue> *_setupQueue;
    NSString *_contextID;
    NSMutableArray *_oldApplicationCaches;
}

+ (id)contextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContextWithAppContainerTuple:(id)arg1;
+ (id)sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)_sharedContextWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;
+ (id)sharedContexts;
+ (id)applicationContainerPathForBundleID:(id)arg1 bundleURL:(id *)arg2 type:(long long *)arg3;
@property(retain, nonatomic) NSMutableArray *oldApplicationCaches; // @synthesize oldApplicationCaches=_oldApplicationCaches;
@property(readonly, nonatomic) NSString *contextID; // @synthesize contextID=_contextID;
@property(nonatomic) _Bool finishedAppProxySetup; // @synthesize finishedAppProxySetup=_finishedAppProxySetup;
@property(nonatomic, getter=isSandboxed) _Bool sandboxed; // @synthesize sandboxed=_sandboxed;
@property _Bool accountReloadRequired; // @synthesize accountReloadRequired=_accountReloadRequired;
@property _Bool accountRefreshInProgress; // @synthesize accountRefreshInProgress=_accountRefreshInProgress;
@property(retain) NSObject<OS_dispatch_queue> *setupQueue; // @synthesize setupQueue=_setupQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *sema; // @synthesize sema=_sema;
@property(retain, nonatomic) NSMutableDictionary *fakeErrorByClassName; // @synthesize fakeErrorByClassName=_fakeErrorByClassName;
@property(retain, nonatomic) CKDMescalSession *mescalSession; // @synthesize mescalSession=_mescalSession;
@property(retain, nonatomic) CKDZoneGatekeeper *backgroundZoneGatekeeper; // @synthesize backgroundZoneGatekeeper=_backgroundZoneGatekeeper;
@property(retain, nonatomic) CKDZoneGatekeeper *foregroundZoneGatekeeper; // @synthesize foregroundZoneGatekeeper=_foregroundZoneGatekeeper;
@property(retain, nonatomic) CKDPCSManager *pcsManager; // @synthesize pcsManager=_pcsManager;
@property(retain) CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
@property(retain, nonatomic) CKDFlowControlManager *flowControlManager; // @synthesize flowControlManager=_flowControlManager;
@property(nonatomic) _Bool canSetDeviceIdentifier; // @synthesize canSetDeviceIdentifier=_canSetDeviceIdentifier;
@property(nonatomic) _Bool canAccessProtectionData; // @synthesize canAccessProtectionData=_canAccessProtectionData;
@property(nonatomic) _Bool hasDataContainer; // @synthesize hasDataContainer=_hasDataContainer;
@property(readonly, nonatomic) CKAccountInfo *accountInfoOverride; // @synthesize accountInfoOverride=_accountInfoOverride;
@property(retain) CKDAccount *account; // @synthesize account=_account;
@property(nonatomic) long long usesAPSPublicToken; // @synthesize usesAPSPublicToken=_usesAPSPublicToken;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *containerHardwareIDHash; // @synthesize containerHardwareIDHash=_containerHardwareIDHash;
@property(retain, nonatomic) NSString *applicationRecordCacheDirectory; // @synthesize applicationRecordCacheDirectory=_applicationRecordCacheDirectory;
@property(retain, nonatomic) NSString *applicationPackageDownloadDirectory; // @synthesize applicationPackageDownloadDirectory=_applicationPackageDownloadDirectory;
@property(retain, nonatomic) NSString *applicationPackageUploadDirectory; // @synthesize applicationPackageUploadDirectory=_applicationPackageUploadDirectory;
@property(retain, nonatomic) NSString *applicationFileDownloadDirectory; // @synthesize applicationFileDownloadDirectory=_applicationFileDownloadDirectory;
@property(retain, nonatomic) NSString *applicationAssetDbDirectory; // @synthesize applicationAssetDbDirectory=_applicationAssetDbDirectory;
@property(retain, nonatomic) NSString *applicationMMCSDirectory; // @synthesize applicationMMCSDirectory=_applicationMMCSDirectory;
@property(retain, nonatomic) NSString *applicationCachesDirectory; // @synthesize applicationCachesDirectory=_applicationCachesDirectory;
@property(retain, nonatomic) NSString *applicationContainerCloudKitDirectory; // @synthesize applicationContainerCloudKitDirectory=_applicationContainerCloudKitDirectory;
@property(retain, nonatomic) NSString *applicationContainerPath; // @synthesize applicationContainerPath=_applicationContainerPath;
@property(readonly, nonatomic) NSString *applicationDisplayName; // @synthesize applicationDisplayName=_applicationDisplayName;
@property(readonly, nonatomic) NSURL *applicationIcon; // @synthesize applicationIcon=_applicationIcon;
@property(retain, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(readonly, nonatomic) NSBundle *applicationBundle; // @synthesize applicationBundle=_applicationBundle;
@property(readonly, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) NSString *containerScopedUserID; // @synthesize containerScopedUserID=_containerScopedUserID;
@property(retain, nonatomic) NSURL *publicDeviceServiceURL; // @synthesize publicDeviceServiceURL=_publicDeviceServiceURL;
@property(retain, nonatomic) NSURL *publicShareServiceURL; // @synthesize publicShareServiceURL=_publicShareServiceURL;
@property(retain, nonatomic) NSURL *publicCloudDBURL; // @synthesize publicCloudDBURL=_publicCloudDBURL;
@property(retain, nonatomic) CKDServerConfiguration *config; // @synthesize config=_config;
- (void).cxx_destruct;
- (void)clearAuthTokensForRecordWithID:(id)arg1 inScope:(long long)arg2;
- (void)clearRecordCacheWithDatabaseScope:(long long)arg1;
- (void)clearAssetCacheWithDatabaseScope:(long long)arg1;
- (void)clearAssetCache;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)finishSetupWithClientProxy:(id)arg1;
- (id)startSetupWithClientProxy:(id)arg1;
@property(retain, nonatomic, setter=setAPSEnvironmentString:) NSString *apsEnvironmentString;
@property(readonly, copy) NSString *description;
- (id)CKPropertiesDescription;
- (void)logWithFile:(const char *)arg1 function:(const char *)arg2 line:(int)arg3 level:(int)arg4 section:(id)arg5 format:(id)arg6;
- (void)showUserNotification:(struct __CFUserNotification *)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)performRequest:(id)arg1;
- (void)tearDownAssetTransfers;
- (_Bool)setupAssetTransfersWithClientProxy:(id)arg1 error:(id *)arg2;
- (_Bool)setupMMCSWrapperWithError:(id *)arg1;
- (id)_issueSandboxExtensionForPath:(id)arg1 error:(id *)arg2;
- (_Bool)_setupDirectoriesWithClientProxy:(id)arg1 sandboxExtensions:(id *)arg2 error:(id *)arg3;
- (void)_purgeOldCacheDirectories;
- (void)_determineHardwareInfo;
- (void)_loadApplicationContainerPathAndType;
@property(readonly, nonatomic) _Bool canAccessAccount;
- (void)reloadAccount;
- (void)dealloc;
- (id)initWithAppContainerTuple:(id)arg1 accountInfoOverride:(id)arg2 proxy:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDClientProxy : NSObject <CKDSystemAvailabilityWatcher, CKXPCDaemon>
{
    _Bool _sandboxed;
    _Bool _canUsePackages;
    _Bool _canOpenByID;
    _Bool _finishedSetup;
    int _pid;
    CKDClientContext *_context;
    NSOperationQueue *_operationQueue;
    NSOperationQueue *_backgroundOperationThrottleQueue;
    NSString *_procName;
    NSXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_setupQueue;
    NSString *_bundleIdentifier;
    CKWatchdog *_watchdog;
}

+ (id)sharedClientThrottlingOperationQueue;
@property(nonatomic) _Bool finishedSetup; // @synthesize finishedSetup=_finishedSetup;
@property(nonatomic) _Bool canOpenByID; // @synthesize canOpenByID=_canOpenByID;
@property(nonatomic) _Bool canUsePackages; // @synthesize canUsePackages=_canUsePackages;
@property(retain, nonatomic) CKWatchdog *watchdog; // @synthesize watchdog=_watchdog;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *setupQueue; // @synthesize setupQueue=_setupQueue;
@property(nonatomic) __weak NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic, getter=isSandboxed) _Bool sandboxed; // @synthesize sandboxed=_sandboxed;
@property(readonly, nonatomic) NSString *procName; // @synthesize procName=_procName;
@property(readonly, nonatomic) int pid; // @synthesize pid=_pid;
@property(retain, nonatomic) NSOperationQueue *backgroundOperationThrottleQueue; // @synthesize backgroundOperationThrottleQueue=_backgroundOperationThrottleQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) CKDClientContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (_Bool)canUsePackagesWithError:(id *)arg1;
- (_Bool)canReadMMCSItem:(id)arg1 error:(id *)arg2;
- (void)updatePushTokens;
- (void)wipeAllCachesAndDie;
- (id)statusReport;
- (void)repairZonePCSWithInfo:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)getPCSDiagnosticsForZonesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)clearRecordCache;
- (void)clearAuthTokensForRecordWithID:(id)arg1 inScope:(long long)arg2;
- (void)clearRecordCacheWithDatabaseScope:(long long)arg1;
- (void)clearAssetCacheWithDatabaseScope:(long long)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2;
- (void)forceFinishSetup;
- (void)_finishSetup;
- (id)_startSetup;
- (void)setContainerID:(id)arg1 bundleID:(id)arg2 accountInfoOverride:(id)arg3 withBlock:(CDUnknownBlockType)arg4;
- (void)cancelOperationWithIdentifier:(id)arg1;
- (void)getBehaviorOptionForKey:(id)arg1 isContainerOption:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)tossConfigWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)accountChangedWithID:(id)arg1;
- (void)accountsWillDeleteAccount:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)accountsDidRevokeAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2;
- (void)accountsDidGrantAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2;
- (void)performFetchUserQuotaOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performUpdateUserPresenceOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchLikesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performLikeItemsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performModifyShareCommentsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchShareCommentsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performShareInvitationResponseOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchShareInvitationsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performModifySharesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchSharesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performMarkNotificationsReadOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchNotificationChangesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performModifyBadgeOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchSubscriptionsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performModifySubscriptionsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performQueryOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)getNewWebSharingIdentity:(CDUnknownBlockType)arg1;
- (void)performModifyWebSharingOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performPublishAssetsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchRecordVersionsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchRecordChangesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchRecordsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performModifyRecordsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performFetchRecordZonesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performModifyRecordZonesOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performDiscoverAllContactsOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)performDiscoverUserInfosOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_handleCompletionForOperation:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_handleProgressForOperation:(id)arg1 withArguments:(id)arg2;
- (void)requestApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setApplicationPermission:(unsigned long long)arg1 enabled:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_globalStatusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)statusForApplicationPermission:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)currentUserIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)accountStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (long long)_currentAccountStatus;
- (long long)_applicationPermissionStatusFromUserPrivacySetting:(long long)arg1;
- (void)_checkAndAddOperation:(id)arg1;
- (id)_connectionIsAuthorizedForOperation:(id)arg1;
- (_Bool)usePublicTokenEntitlement;
- (id)apsEnvironmentEntitlement;
- (id)_clientPrefixEntitlement;
- (_Bool)hasDeviceIdentifierEntitlement;
- (_Bool)hasProtectionDataEntitlement;
- (_Bool)_hasCustomAccountsEntitlement;
- (_Bool)_hasEnvironmentEntitlement;
- (_Bool)_hasMasqueradingEntitlement;
- (_Bool)_hasEntitlementForKey:(id)arg1;
@property(readonly, nonatomic) CDStruct_6ad76789 auditToken;
- (void)tearDown;
- (void)systemAvailabilityChanged:(_Bool)arg1;
- (void)dealloc;
- (id)initWithConnection:(id)arg1;
- (void)_setupOperationQueues;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDCloudDatabaseServer : NSObject <NSXPCListenerDelegate>
{
    NSXPCListener *_xpcListener;
    NSMutableArray *_connectedClients;
    NSObject<OS_dispatch_source> *_sighandlerSource;
    NSObject<OS_dispatch_source> *_lowDiskSource;
    NSObject<OS_dispatch_source> *_lowDiskTimer;
    NSObject<OS_dispatch_queue> *_lowDiskQueue;
}

+ (id)sharedServer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *lowDiskQueue; // @synthesize lowDiskQueue=_lowDiskQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *lowDiskTimer; // @synthesize lowDiskTimer=_lowDiskTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *lowDiskSource; // @synthesize lowDiskSource=_lowDiskSource;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *sighandlerSource; // @synthesize sighandlerSource=_sighandlerSource;
@property(retain, nonatomic) NSMutableArray *connectedClients; // @synthesize connectedClients=_connectedClients;
@property(retain, nonatomic) NSXPCListener *xpcListener; // @synthesize xpcListener=_xpcListener;
- (void).cxx_destruct;
- (void)_didReceiveLowDiskNotification;
- (void)statusReport;
- (id)allClients;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (void)resume;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDContainerInfo : NSObject <NSCopying, NSSecureCoding>
{
    NSURL *_publicCloudDBURL;
    NSURL *_publicShareServiceURL;
    NSURL *_publicDeviceServiceURL;
    NSString *_containerScopedUserID;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *containerScopedUserID; // @synthesize containerScopedUserID=_containerScopedUserID;
@property(copy, nonatomic) NSURL *publicDeviceServiceURL; // @synthesize publicDeviceServiceURL=_publicDeviceServiceURL;
@property(copy, nonatomic) NSURL *publicShareServiceURL; // @synthesize publicShareServiceURL=_publicShareServiceURL;
@property(copy, nonatomic) NSURL *publicCloudDBURL; // @synthesize publicCloudDBURL=_publicCloudDBURL;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)CKPropertiesDescription;

@end

@interface CKDContainerPrivacySettings : NSObject
{
    CKContainerID *_containerID;
    NSSet *_applicationBundleIDs;
    long long _discoverable;
}

@property(nonatomic) long long discoverable; // @synthesize discoverable=_discoverable;
@property(copy, nonatomic) NSSet *applicationBundleIDs; // @synthesize applicationBundleIDs=_applicationBundleIDs;
@property(copy, nonatomic) CKContainerID *containerID; // @synthesize containerID=_containerID;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)CKPropertiesDescription;

@end

__attribute__((visibility("hidden")))
@interface CKDContainerSpecificInfoOperation : CKDOperation
{
    _Bool _needUserID;
    CKDContainerInfo *_containerInfo;
    NSObject<OS_dispatch_group> *_infoFetchedGroup;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_group> *infoFetchedGroup; // @synthesize infoFetchedGroup=_infoFetchedGroup;
@property(copy, nonatomic) CKDContainerInfo *containerInfo; // @synthesize containerInfo=_containerInfo;
@property(nonatomic) _Bool needUserID; // @synthesize needUserID=_needUserID;
- (void).cxx_destruct;
- (void)main;
- (void)setCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)shouldCheckAppVersion;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDContainerSpecificInfoURLRequest : CKDURLRequest
{
    _Bool _needUserID;
    NSString *_containerIdentifier;
    CKDContainerInfo *_containerInfo;
}

@property(copy, nonatomic) CKDContainerInfo *containerInfo; // @synthesize containerInfo=_containerInfo;
@property(nonatomic) NSString *containerIdentifier; // @synthesize containerIdentifier=_containerIdentifier;
@property(nonatomic) _Bool needUserID; // @synthesize needUserID=_needUserID;
- (void).cxx_destruct;
- (void)requestDidParseJSONObject:(id)arg1;
- (id)additionalHeaderValues;
- (_Bool)hasRequestBody;
- (id)url;
- (long long)partitionType;
- (long long)serverType;
- (_Bool)allowsAuthedAccount;
- (_Bool)allowsAnonymousAccount;
- (_Bool)requiresSignature;
- (_Bool)requiresDeviceID;
- (_Bool)requiresConfiguration;
- (id)initWithContainerIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDDatabaseOperation : CKDOperation
{
    long long _databaseScope;
}

@property(nonatomic) long long databaseScope; // @synthesize databaseScope=_databaseScope;
- (void)configureRequest:(id)arg1;
- (id)newChildOperationInfoOfClass:(Class)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDDecryptRecordsOperation : CKDDatabaseOperation
{
    CDUnknownBlockType _recordDecryptedBlock;
    NSArray *_recordsToDecrypt;
    NSObject<OS_dispatch_group> *_recordDecryptGroup;
    NSDictionary *_webSharingIdentityDataByRecordID;
}

@property(retain, nonatomic) NSDictionary *webSharingIdentityDataByRecordID; // @synthesize webSharingIdentityDataByRecordID=_webSharingIdentityDataByRecordID;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *recordDecryptGroup; // @synthesize recordDecryptGroup=_recordDecryptGroup;
@property(retain, nonatomic) NSArray *recordsToDecrypt; // @synthesize recordsToDecrypt=_recordsToDecrypt;
@property(copy, nonatomic) CDUnknownBlockType recordDecryptedBlock; // @synthesize recordDecryptedBlock=_recordDecryptedBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (id)_unwrapEncryptedPropertiesOnRecord:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2;
- (id)_unwrapPackageAssets:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2;
- (id)_unwrapAssetKey:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2;
- (id)_unwrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2 forField:(id)arg3;
- (void)_handleProtectionDataForRecord:(id)arg1;
- (void)_decryptRecord:(id)arg1 usingWebSharingIdentityData:(id)arg2;
- (void)_decryptRecord:(id)arg1;
- (void)main;
- (_Bool)operationShouldBeFlowControlled;
- (_Bool)shouldCheckAppVersion;
- (void)_recordWasDecrypted:(id)arg1 withError:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDDecryptRecordsOperationInfo : CKDatabaseOperationInfo
{
    NSArray *_recordsToDecrypt;
    NSDictionary *_webSharingIdentityDataByRecordID;
}

@property(retain, nonatomic) NSDictionary *webSharingIdentityDataByRecordID; // @synthesize webSharingIdentityDataByRecordID=_webSharingIdentityDataByRecordID;
@property(retain, nonatomic) NSArray *recordsToDecrypt; // @synthesize recordsToDecrypt=_recordsToDecrypt;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface CKDDefaults : NSObject
{
}

+ (id)sharedDefaults;
- (void)synchronize;
- (long long)integerForKey:(id)arg1 defaultValue:(long long)arg2;
- (_Bool)boolForKey:(id)arg1 defaultValue:(_Bool)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDDeviceManager : NSObject
{
    NSString *_deviceIdentifier;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_requests;
    NSMutableDictionary *_callbackGroups;
    NSMutableDictionary *_deviceIDs;
}

+ (id)sharedManager;
@property(retain, nonatomic) NSMutableDictionary *deviceIDs; // @synthesize deviceIDs=_deviceIDs;
@property(retain, nonatomic) NSMutableDictionary *callbackGroups; // @synthesize callbackGroups=_callbackGroups;
@property(retain, nonatomic) NSMutableDictionary *requests; // @synthesize requests=_requests;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
- (void).cxx_destruct;
- (void)fetchDeviceIdentifierForContext:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_saveDeviceIdentifier:(id)arg1 forContext:(id)arg2;
- (id)_savedDeviceIdentifierForContext:(id)arg1;
- (id)_lookupKeyForContext:(id)arg1;
- (id)_serviceForContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDDiscoverUserInfosOperation : CKDOperation
{
    CDUnknownBlockType _discoverUserInfosProgressBlock;
    NSArray *_emailsToDiscover;
    NSArray *_userRecordIDsToDiscover;
}

@property(retain, nonatomic) NSArray *userRecordIDsToDiscover; // @synthesize userRecordIDsToDiscover=_userRecordIDsToDiscover;
@property(retain, nonatomic) NSArray *emailsToDiscover; // @synthesize emailsToDiscover=_emailsToDiscover;
@property(copy, nonatomic) CDUnknownBlockType discoverUserInfosProgressBlock; // @synthesize discoverUserInfosProgressBlock=_discoverUserInfosProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_discoverEmails:(id)arg1 userRecordIDs:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_handleDiscoveredInfo:(id)arg1 emailToDiscover:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDDiscoverAllContactsOperation : CKDDiscoverUserInfosOperation
{
}

- (void)_handleDiscoveredInfo:(id)arg1 emailToDiscover:(id)arg2;
- (void)main;
- (void)_discoverEmailsByBatch:(id)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDDiscoverUserInfosURLRequest : CKDURLRequest
{
    CDUnknownBlockType _progressBlock;
    NSArray *_emailsToDiscover;
    NSArray *_userRecordIDsToDiscover;
    NSMutableDictionary *_emailAliasToEmailAddress;
    NSMutableDictionary *_hashedEmailByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *hashedEmailByRequestID; // @synthesize hashedEmailByRequestID=_hashedEmailByRequestID;
@property(retain, nonatomic) NSMutableDictionary *emailAliasToEmailAddress; // @synthesize emailAliasToEmailAddress=_emailAliasToEmailAddress;
@property(retain, nonatomic) NSArray *userRecordIDsToDiscover; // @synthesize userRecordIDsToDiscover=_userRecordIDsToDiscover;
@property(retain, nonatomic) NSArray *emailsToDiscover; // @synthesize emailsToDiscover=_emailsToDiscover;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithEmailAddresses:(id)arg1 userRecordIDs:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchAssetPackagesOperation : CKDOperation
{
    NSArray *_packages;
    NSArray *_indexSets;
    CDUnknownBlockType _progressBlock;
    NSMutableArray *_packagesToFetch;
    NSMutableArray *_remainingIndexSets;
    id <CKDCancelling> _cancelToken;
}

@property(retain, nonatomic) id <CKDCancelling> cancelToken; // @synthesize cancelToken=_cancelToken;
@property(retain, nonatomic) NSMutableArray *remainingIndexSets; // @synthesize remainingIndexSets=_remainingIndexSets;
@property(retain, nonatomic) NSMutableArray *packagesToFetch; // @synthesize packagesToFetch=_packagesToFetch;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(copy, nonatomic) NSArray *indexSets; // @synthesize indexSets=_indexSets;
@property(copy, nonatomic) NSArray *packages; // @synthesize packages=_packages;
- (void).cxx_destruct;
- (void)main;
- (void)cancel;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (_Bool)_handleSectionItemFetched:(id)arg1 package:(id)arg2 error:(id *)arg3;
- (void)_fetchNextAssetPackage;
- (void)_finishPackage:(id)arg1 error:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchAssetsOperation : CKDDatabaseOperation
{
    _Bool _shouldAutomaticallyRetryNetworkErrors;
    CDUnknownBlockType _progressBlock;
    NSMutableArray *_assetsToFetch;
    NSMutableArray *_assetsToRetry;
    CKDMMCSItemGroupSetContext *_MMCSContext;
}

+ (_Bool)_isTransientError:(id)arg1;
@property(retain) CKDMMCSItemGroupSetContext *MMCSContext; // @synthesize MMCSContext=_MMCSContext;
@property(retain, nonatomic) NSMutableArray *assetsToRetry; // @synthesize assetsToRetry=_assetsToRetry;
@property(retain, nonatomic) NSMutableArray *assetsToFetch; // @synthesize assetsToFetch=_assetsToFetch;
@property(nonatomic) _Bool shouldAutomaticallyRetryNetworkErrors; // @synthesize shouldAutomaticallyRetryNetworkErrors=_shouldAutomaticallyRetryNetworkErrors;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void).cxx_destruct;
- (void)main;
- (void)cancel;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_handleError:(id)arg1 forItem:(id)arg2;
- (_Bool)_shouldRetryError:(id)arg1;
- (void)_retryOrFinishWithError:(id)arg1;
- (void)_fetchAssets;
- (void)_sendMMCSItemGetForGroupSet:(id)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2 assetsToFetch:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchLikesOperation : CKDOperation
{
    CDUnknownBlockType _likesFetchedProgressBlock;
    NSArray *_likeIDsToFetch;
    CKShareID *_shareID;
    unsigned long long _resultsLimit;
}

@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(retain, nonatomic) NSArray *likeIDsToFetch; // @synthesize likeIDsToFetch=_likeIDsToFetch;
@property(copy, nonatomic) CDUnknownBlockType likesFetchedProgressBlock; // @synthesize likesFetchedProgressBlock=_likesFetchedProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleLikesFetched:(id)arg1 count:(unsigned long long)arg2 likes:(id)arg3 response:(id)arg4;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchLikesURLRequest : CKDURLRequest
{
    unsigned long long _resultsLimit;
    CDUnknownBlockType _likesFetchedBlock;
    NSArray *_itemIDsToFetch;
    CKShareID *_shareID;
    NSMutableDictionary *_itemIDsByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *itemIDsByRequestID; // @synthesize itemIDsByRequestID=_itemIDsByRequestID;
@property(copy, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(copy, nonatomic) NSArray *itemIDsToFetch; // @synthesize itemIDsToFetch=_itemIDsToFetch;
@property(copy, nonatomic) CDUnknownBlockType likesFetchedBlock; // @synthesize likesFetchedBlock=_likesFetchedBlock;
@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithItemIDsToFetch:(id)arg1 inShareID:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchNotificationChangesOperation : CKDOperation
{
    _Bool _moreComing;
    CDUnknownBlockType _notificationChangedBlock;
    CKServerChangeToken *_previousServerChangeToken;
    unsigned long long _resultsLimit;
    CKServerChangeToken *_resultServerChangeToken;
}

@property(nonatomic) _Bool moreComing; // @synthesize moreComing=_moreComing;
@property(retain, nonatomic) CKServerChangeToken *resultServerChangeToken; // @synthesize resultServerChangeToken=_resultServerChangeToken;
@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(retain, nonatomic) CKServerChangeToken *previousServerChangeToken; // @synthesize previousServerChangeToken=_previousServerChangeToken;
@property(copy, nonatomic) CDUnknownBlockType notificationChangedBlock; // @synthesize notificationChangedBlock=_notificationChangedBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (void)main;
- (void)_handleFetchChangesRequestFinished:(id)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchNotificationChangesURLRequest : CKDURLRequest
{
    NSMutableArray *_resultChangedNotifications;
    _Bool _moreComing;
    unsigned long long _resultsLimit;
    NSData *_resultServerChangeTokenData;
    NSData *_serverChangeTokenData;
}

@property(retain, nonatomic) NSData *serverChangeTokenData; // @synthesize serverChangeTokenData=_serverChangeTokenData;
@property(nonatomic) _Bool moreComing; // @synthesize moreComing=_moreComing;
@property(retain, nonatomic) NSData *resultServerChangeTokenData; // @synthesize resultServerChangeTokenData=_resultServerChangeTokenData;
@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(readonly, nonatomic) NSArray *resultChangedNotifications; // @synthesize resultChangedNotifications=_resultChangedNotifications;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithServerChangeTokenData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordChangesOperation : CKDDatabaseOperation
{
    _Bool _shouldFetchAssetContents;
    CDUnknownBlockType _recordChangedBlock;
    CKServerChangeToken *_resultServerChangeToken;
    NSData *_resultClientChangeToken;
    long long _status;
    CKRecordZoneID *_recordZoneID;
    CKServerChangeToken *_previousServerChangeToken;
    CKServerChangeToken *_clientChangeToken;
    NSArray *_desiredKeys;
    unsigned long long _resultsLimit;
    NSData *_resultClientChangeTokenData;
}

@property(retain, nonatomic) NSData *resultClientChangeTokenData; // @synthesize resultClientChangeTokenData=_resultClientChangeTokenData;
@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(nonatomic) _Bool shouldFetchAssetContents; // @synthesize shouldFetchAssetContents=_shouldFetchAssetContents;
@property(retain, nonatomic) NSArray *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property(retain, nonatomic) CKServerChangeToken *clientChangeToken; // @synthesize clientChangeToken=_clientChangeToken;
@property(retain, nonatomic) CKServerChangeToken *previousServerChangeToken; // @synthesize previousServerChangeToken=_previousServerChangeToken;
@property(retain, nonatomic) CKRecordZoneID *recordZoneID; // @synthesize recordZoneID=_recordZoneID;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(readonly, nonatomic) NSData *resultClientChangeToken; // @synthesize resultClientChangeToken=_resultClientChangeToken;
@property(retain, nonatomic) CKServerChangeToken *resultServerChangeToken; // @synthesize resultServerChangeToken=_resultServerChangeToken;
@property(copy, nonatomic) CDUnknownBlockType recordChangedBlock; // @synthesize recordChangedBlock=_recordChangedBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (void)main;
- (void)_handleFetchChangesRequestFinished:(id)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordChangesURLRequest : CKDURLRequest
{
    NSMutableArray *_resultChangedRecords;
    NSMutableArray *_resultDeletedRecordIdentifiers;
    unsigned long long _resultsLimit;
    NSData *_resultServerChangeTokenData;
    NSData *_resultClientChangeTokenData;
    long long _status;
    CKRecordZoneID *_recordZoneID;
    NSData *_serverChangeTokenData;
    NSArray *_requestedFields;
}

@property(retain, nonatomic) NSArray *requestedFields; // @synthesize requestedFields=_requestedFields;
@property(retain, nonatomic) NSData *serverChangeTokenData; // @synthesize serverChangeTokenData=_serverChangeTokenData;
@property(retain, nonatomic) CKRecordZoneID *recordZoneID; // @synthesize recordZoneID=_recordZoneID;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(retain, nonatomic) NSData *resultClientChangeTokenData; // @synthesize resultClientChangeTokenData=_resultClientChangeTokenData;
@property(retain, nonatomic) NSData *resultServerChangeTokenData; // @synthesize resultServerChangeTokenData=_resultServerChangeTokenData;
@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(readonly, nonatomic) NSArray *resultDeletedRecordIdentifiers; // @synthesize resultDeletedRecordIdentifiers=_resultDeletedRecordIdentifiers;
@property(readonly, nonatomic) NSArray *resultChangedRecords; // @synthesize resultChangedRecords=_resultChangedRecords;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (id)zoneIDsToLock;
- (int)operationType;
- (id)initWithRecordZoneID:(id)arg1 serverChangeTokenData:(id)arg2 requestedFields:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordVersionsOperation : CKDDatabaseOperation
{
    _Bool _isDeleted;
    CDUnknownBlockType _recordVersionFetchedBlock;
    NSArray *_recordIDs;
    NSArray *_desiredKeys;
    NSString *_minimumVersionETag;
    NSObject<OS_dispatch_group> *_fetchVersionsGroup;
}

@property(retain, nonatomic) NSObject<OS_dispatch_group> *fetchVersionsGroup; // @synthesize fetchVersionsGroup=_fetchVersionsGroup;
@property(nonatomic) _Bool isDeleted; // @synthesize isDeleted=_isDeleted;
@property(retain, nonatomic) NSString *minimumVersionETag; // @synthesize minimumVersionETag=_minimumVersionETag;
@property(retain, nonatomic) NSArray *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property(retain, nonatomic) NSArray *recordIDs; // @synthesize recordIDs=_recordIDs;
@property(copy, nonatomic) CDUnknownBlockType recordVersionFetchedBlock; // @synthesize recordVersionFetchedBlock=_recordVersionFetchedBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleRecordVersionsFecthedForID:(id)arg1 isDeleted:(_Bool)arg2 versions:(id)arg3 responseCode:(id)arg4;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordVersionsRequest : CKDURLRequest
{
    _Bool _isDeleted;
    CDUnknownBlockType _recordVersionsFetchedBlock;
    NSArray *_recordIDs;
    NSArray *_desiredKeys;
    NSString *_minimumVersionETag;
    NSMutableDictionary *_recordIDByRequestID;
}

@property(nonatomic) _Bool isDeleted; // @synthesize isDeleted=_isDeleted;
@property(retain, nonatomic) NSMutableDictionary *recordIDByRequestID; // @synthesize recordIDByRequestID=_recordIDByRequestID;
@property(retain, nonatomic) NSString *minimumVersionETag; // @synthesize minimumVersionETag=_minimumVersionETag;
@property(retain, nonatomic) NSArray *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property(retain, nonatomic) NSArray *recordIDs; // @synthesize recordIDs=_recordIDs;
@property(copy, nonatomic) CDUnknownBlockType recordVersionsFetchedBlock; // @synthesize recordVersionsFetchedBlock=_recordVersionsFetchedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (id)zoneIDsToLock;
- (int)operationType;
- (id)initWithRecordIDs:(id)arg1 desiredKeys:(id)arg2 minimumVersionETag:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordZonePCSDiagnosticsOperation : CKDDatabaseOperation
{
    CKPCSDiagnosticInformation *_pcsDiagnosticInfo;
    NSString *_identityStatus;
    NSDictionary *_invalidPCSByZoneID;
    NSDictionary *_validPCSByZoneID;
    NSArray *_recordZoneIDs;
}

@property(retain, nonatomic) NSArray *recordZoneIDs; // @synthesize recordZoneIDs=_recordZoneIDs;
@property(retain, nonatomic) NSDictionary *validPCSByZoneID; // @synthesize validPCSByZoneID=_validPCSByZoneID;
@property(retain, nonatomic) NSDictionary *invalidPCSByZoneID; // @synthesize invalidPCSByZoneID=_invalidPCSByZoneID;
@property(retain, nonatomic) NSString *identityStatus; // @synthesize identityStatus=_identityStatus;
@property(retain, nonatomic) CKPCSDiagnosticInformation *pcsDiagnosticInfo; // @synthesize pcsDiagnosticInfo=_pcsDiagnosticInfo;
- (void).cxx_destruct;
- (void)main;
- (void)_handleRecordZoneFetch:(id)arg1 zoneID:(id)arg2 responseCode:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordZonePCSDiagnosticsOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
{
    NSArray *_recordZoneIDs;
}

@property(retain, nonatomic) NSArray *recordZoneIDs; // @synthesize recordZoneIDs=_recordZoneIDs;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordZonesOperation : CKDDatabaseOperation
{
    _Bool _isFetchAllRecordZonesOperation;
    _Bool _ignorePCSFailures;
    CDUnknownBlockType _recordZoneFetchedProgressBlock;
    NSArray *_recordZoneIDs;
}

@property(nonatomic) _Bool ignorePCSFailures; // @synthesize ignorePCSFailures=_ignorePCSFailures;
@property(nonatomic) _Bool isFetchAllRecordZonesOperation; // @synthesize isFetchAllRecordZonesOperation=_isFetchAllRecordZonesOperation;
@property(retain, nonatomic) NSArray *recordZoneIDs; // @synthesize recordZoneIDs=_recordZoneIDs;
@property(copy, nonatomic) CDUnknownBlockType recordZoneFetchedProgressBlock; // @synthesize recordZoneFetchedProgressBlock=_recordZoneFetchedProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleRecordZoneFetch:(id)arg1 zoneID:(id)arg2 responseCode:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchRecordsOperation : CKDDatabaseOperation
{
    _Bool _useCachedEtags;
    _Bool _shouldFetchAssetContent;
    NSArray *_fullRecordsToFetch;
    CDUnknownBlockType _recordFetchProgressBlock;
    CDUnknownBlockType _recordFetchCompletionBlock;
    NSArray *_recordIDsToFetch;
    NSMutableDictionary *_cachedRecords;
    NSSet *_desiredKeySet;
    NSDictionary *_recordIDsToVersionETags;
    NSDictionary *_desiredPackageFileIndices;
    NSObject<OS_dispatch_group> *_fetchRecordsGroup;
    NSMutableDictionary *_assetFetchGroupsByRecord;
    NSMutableDictionary *_errorsByRecordID;
    NSMutableArray *_assetsToFetch;
    NSMutableArray *_packagesToFetch;
    NSMapTable *_desiredPackageFileIndexSetsByPackage;
    NSDictionary *_signaturesOfAssetsByRecordIDAndKey;
    NSSet *_assetFieldNamesToPublishURLs;
    unsigned long long _requestedTTL;
    unsigned long long _URLOptions;
    CKDRecordCache *_cache;
    NSDictionary *_webSharingIdentityDataByRecordID;
}

@property(retain, nonatomic) NSDictionary *webSharingIdentityDataByRecordID; // @synthesize webSharingIdentityDataByRecordID=_webSharingIdentityDataByRecordID;
@property(retain, nonatomic) CKDRecordCache *cache; // @synthesize cache=_cache;
@property(nonatomic) unsigned long long URLOptions; // @synthesize URLOptions=_URLOptions;
@property(nonatomic) unsigned long long requestedTTL; // @synthesize requestedTTL=_requestedTTL;
@property(retain, nonatomic) NSSet *assetFieldNamesToPublishURLs; // @synthesize assetFieldNamesToPublishURLs=_assetFieldNamesToPublishURLs;
@property(nonatomic) _Bool shouldFetchAssetContent; // @synthesize shouldFetchAssetContent=_shouldFetchAssetContent;
@property(retain, nonatomic) NSDictionary *signaturesOfAssetsByRecordIDAndKey; // @synthesize signaturesOfAssetsByRecordIDAndKey=_signaturesOfAssetsByRecordIDAndKey;
@property(retain, nonatomic) NSMapTable *desiredPackageFileIndexSetsByPackage; // @synthesize desiredPackageFileIndexSetsByPackage=_desiredPackageFileIndexSetsByPackage;
@property(retain, nonatomic) NSMutableArray *packagesToFetch; // @synthesize packagesToFetch=_packagesToFetch;
@property(retain, nonatomic) NSMutableArray *assetsToFetch; // @synthesize assetsToFetch=_assetsToFetch;
@property(retain, nonatomic) NSMutableDictionary *errorsByRecordID; // @synthesize errorsByRecordID=_errorsByRecordID;
@property(retain, nonatomic) NSMutableDictionary *assetFetchGroupsByRecord; // @synthesize assetFetchGroupsByRecord=_assetFetchGroupsByRecord;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *fetchRecordsGroup; // @synthesize fetchRecordsGroup=_fetchRecordsGroup;
@property(retain, nonatomic) NSDictionary *desiredPackageFileIndices; // @synthesize desiredPackageFileIndices=_desiredPackageFileIndices;
@property(retain, nonatomic) NSDictionary *recordIDsToVersionETags; // @synthesize recordIDsToVersionETags=_recordIDsToVersionETags;
@property(retain, nonatomic) NSSet *desiredKeySet; // @synthesize desiredKeySet=_desiredKeySet;
@property(retain, nonatomic) NSMutableDictionary *cachedRecords; // @synthesize cachedRecords=_cachedRecords;
@property(retain, nonatomic) NSArray *recordIDsToFetch; // @synthesize recordIDsToFetch=_recordIDsToFetch;
@property(copy, nonatomic) CDUnknownBlockType recordFetchCompletionBlock; // @synthesize recordFetchCompletionBlock=_recordFetchCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType recordFetchProgressBlock; // @synthesize recordFetchProgressBlock=_recordFetchProgressBlock;
@property(retain, nonatomic) NSArray *fullRecordsToFetch; // @synthesize fullRecordsToFetch=_fullRecordsToFetch;
@property(nonatomic) _Bool useCachedEtags; // @synthesize useCachedEtags=_useCachedEtags;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_enqueuePackage:(id)arg1 forRecord:(id)arg2;
- (void)_didFetchPackage:(id)arg1 withError:(id)arg2;
- (void)_fetchPackages;
- (void)_didFetchAsset:(id)arg1 withError:(id)arg2;
- (void)_fetchAssets;
- (void)_enqueueAsset:(id)arg1 forRecord:(id)arg2 ifSignatureMatches:(id)arg3;
- (void)_enqueueAssetContentFetchesForRecord:(id)arg1;
- (void)_handleRecordFetch:(id)arg1 recordID:(id)arg2 etagMatched:(_Bool)arg3 responseCode:(id)arg4;
- (void)_decryptPropertiesOnRecord:(id)arg1;
- (void)_continueHandleFetchedRecord:(id)arg1;
- (id)_assetFetchGroupForRecord:(id)arg1;
- (void)setError:(id)arg1 forRecordID:(id)arg2;
- (id)errorForRecordID:(id)arg1;
- (void)_fetchRecords;
- (id)nameForState:(unsigned long long)arg1;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchShareCommentsOperation : CKDOperation
{
    CDUnknownBlockType _commentFetchedProgressBlock;
    CKCommentCursor *_nextCursor;
    CKCommentQuery *_query;
    CKCommentCursor *_cursor;
    unsigned long long _resultsLimit;
}

@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(retain, nonatomic) CKCommentCursor *cursor; // @synthesize cursor=_cursor;
@property(retain, nonatomic) CKCommentQuery *query; // @synthesize query=_query;
@property(retain, nonatomic) CKCommentCursor *nextCursor; // @synthesize nextCursor=_nextCursor;
@property(copy, nonatomic) CDUnknownBlockType commentFetchedProgressBlock; // @synthesize commentFetchedProgressBlock=_commentFetchedProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (void)main;
- (void)_handleCommentFetched:(id)arg1 responseCode:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchShareInvitationsOperation : CKDOperation
{
    _Bool _queryAllContainers;
    NSArray *_shareInvitations;
    CDUnknownBlockType _shareInvitationFetchedProgressBlock;
    long long _fetchType;
}

@property(nonatomic) _Bool queryAllContainers; // @synthesize queryAllContainers=_queryAllContainers;
@property(nonatomic) long long fetchType; // @synthesize fetchType=_fetchType;
@property(copy, nonatomic) CDUnknownBlockType shareInvitationFetchedProgressBlock; // @synthesize shareInvitationFetchedProgressBlock=_shareInvitationFetchedProgressBlock;
@property(retain, nonatomic) NSArray *shareInvitations; // @synthesize shareInvitations=_shareInvitations;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleShareInvitationFetched:(id)arg1 responseCode:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchSharesOperation : CKDOperation
{
    _Bool _isFetchAllSharesOperation;
    NSArray *_shares;
    CDUnknownBlockType _shareFetchedProgressBlock;
    NSArray *_shareIDsToFetch;
}

@property(nonatomic) _Bool isFetchAllSharesOperation; // @synthesize isFetchAllSharesOperation=_isFetchAllSharesOperation;
@property(retain, nonatomic) NSArray *shareIDsToFetch; // @synthesize shareIDsToFetch=_shareIDsToFetch;
@property(copy, nonatomic) CDUnknownBlockType shareFetchedProgressBlock; // @synthesize shareFetchedProgressBlock=_shareFetchedProgressBlock;
@property(retain, nonatomic) NSArray *shares; // @synthesize shares=_shares;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleShareFetched:(id)arg1 withID:(id)arg2 responseCode:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchSubscriptionsOperation : CKDDatabaseOperation
{
    _Bool _isFetchAllSubscriptionsOperation;
    NSArray *_subscriptions;
    CDUnknownBlockType _subscriptionFetchedProgressBlock;
    NSArray *_subscriptionIDs;
}

@property(nonatomic) _Bool isFetchAllSubscriptionsOperation; // @synthesize isFetchAllSubscriptionsOperation=_isFetchAllSubscriptionsOperation;
@property(retain, nonatomic) NSArray *subscriptionIDs; // @synthesize subscriptionIDs=_subscriptionIDs;
@property(copy, nonatomic) CDUnknownBlockType subscriptionFetchedProgressBlock; // @synthesize subscriptionFetchedProgressBlock=_subscriptionFetchedProgressBlock;
@property(retain, nonatomic) NSArray *subscriptions; // @synthesize subscriptions=_subscriptions;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleSubscriptionFetched:(id)arg1 withID:(id)arg2 responseCode:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchUserQuotaOperation : CKDDatabaseOperation
{
    unsigned long long _quotaAvailable;
}

@property(nonatomic) unsigned long long quotaAvailable; // @synthesize quotaAvailable=_quotaAvailable;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (void)main;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchUserQuotaURLRequest : CKDURLRequest
{
    CDUnknownBlockType _quotaFetchedBlock;
}

@property(copy, nonatomic) CDUnknownBlockType quotaFetchedBlock; // @synthesize quotaFetchedBlock=_quotaFetchedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;

@end

__attribute__((visibility("hidden")))
@interface CKDFetchedRecordInfo : NSObject
{
    CKRecord *_record;
    NSError *_error;
}

+ (id)infoWithRecord:(id)arg1;
+ (id)infoWithRecord:(id)arg1 error:(id)arg2;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface CKDFlowControlManager : NSObject
{
    unsigned long long _defaultBudget;
    double _defaultRegeneration;
    NSMutableDictionary *_operationFlowControls;
}

@property(retain, nonatomic) NSMutableDictionary *operationFlowControls; // @synthesize operationFlowControls=_operationFlowControls;
- (void).cxx_destruct;
- (double)currentRegeneration:(id)arg1;
- (unsigned long long)currentBudgetCap:(id)arg1;
- (unsigned long long)currentBudget:(id)arg1;
@property(nonatomic) double defaultRegeneration;
@property(nonatomic) unsigned long long defaultBudget;
- (void)updateFlowControlWithLocalErrorForOperation:(id)arg1;
- (void)updateFlowControl:(id)arg1 withRetryAfter:(unsigned long long)arg2;
- (void)updateFlowControl:(id)arg1 withCost:(unsigned long long)arg2;
- (id)_flowControlForOperation:(id)arg1;
- (id)_flowControlForOperation:(id)arg1 createIfNecessary:(_Bool)arg2;
- (_Bool)checkFlowControlIsLimited:(id)arg1;
- (double)secondsUntilFlowControlNotLimited:(id)arg1;
- (id)statusReport;
- (id)description;
- (id)CKPropertiesDescription;
- (id)initWithDefaultBudget:(unsigned long long)arg1 andDefaultRegeneration:(double)arg2;

@end

@interface CKDGetAuthTokensForPutURLRequest : CKDURLRequest
{
    NSMapTable *_MMCSItemsByRecordIDs;
    NSMapTable *_recordIDsByRequestIDs;
}

@property(retain, nonatomic) NSMapTable *recordIDsByRequestIDs; // @synthesize recordIDsByRequestIDs=_recordIDsByRequestIDs;
@property(readonly, nonatomic) NSMapTable *MMCSItemsByRecordIDs; // @synthesize MMCSItemsByRecordIDs=_MMCSItemsByRecordIDs;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithMMCSItems:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDGetCommentsURLRequest : CKDURLRequest
{
    CDUnknownBlockType _commentFetchedBlock;
    NSData *_nextCursor;
    CKCommentQuery *_query;
    NSData *_cursor;
    unsigned long long _resultsLimit;
}

@property(nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(retain, nonatomic) NSData *cursor; // @synthesize cursor=_cursor;
@property(retain, nonatomic) CKCommentQuery *query; // @synthesize query=_query;
@property(retain, nonatomic) NSData *nextCursor; // @synthesize nextCursor=_nextCursor;
@property(copy, nonatomic) CDUnknownBlockType commentFetchedBlock; // @synthesize commentFetchedBlock=_commentFetchedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithQuery:(id)arg1 cursor:(id)arg2 resultsLimit:(unsigned long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDGetRecordZonesURLRequest : CKDURLRequest
{
    NSArray *_recordZones;
    CDUnknownBlockType _recordZoneFetchedBlock;
    NSArray *_zoneIDs;
    NSMutableDictionary *_zoneIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *zoneIDByRequestID; // @synthesize zoneIDByRequestID=_zoneIDByRequestID;
@property(retain, nonatomic) NSArray *zoneIDs; // @synthesize zoneIDs=_zoneIDs;
@property(copy, nonatomic) CDUnknownBlockType recordZoneFetchedBlock; // @synthesize recordZoneFetchedBlock=_recordZoneFetchedBlock;
@property(readonly, nonatomic) NSArray *recordZones; // @synthesize recordZones=_recordZones;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (id)zoneIDsToLock;
- (int)operationType;
- (id)initWithRecordZoneIDs:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDGetRecordsURLRequest : CKDURLRequest
{
    NSSet *_assetFieldNamesToPublishURLs;
    unsigned long long _requestedTTL;
    unsigned long long _URLOptions;
    CDUnknownBlockType _recordFetchedBlock;
    NSArray *_recordIDs;
    NSDictionary *_recordIDsToETags;
    NSDictionary *_recordIDsToVersionETags;
    unsigned long long _recordCount;
    NSMutableDictionary *_recordIDByRequestID;
    NSSet *_desiredKeys;
}

@property(retain, nonatomic) NSSet *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property(retain, nonatomic) NSMutableDictionary *recordIDByRequestID; // @synthesize recordIDByRequestID=_recordIDByRequestID;
@property(nonatomic) unsigned long long recordCount; // @synthesize recordCount=_recordCount;
@property(retain, nonatomic) NSDictionary *recordIDsToVersionETags; // @synthesize recordIDsToVersionETags=_recordIDsToVersionETags;
@property(retain, nonatomic) NSDictionary *recordIDsToETags; // @synthesize recordIDsToETags=_recordIDsToETags;
@property(retain, nonatomic) NSArray *recordIDs; // @synthesize recordIDs=_recordIDs;
@property(copy, nonatomic) CDUnknownBlockType recordFetchedBlock; // @synthesize recordFetchedBlock=_recordFetchedBlock;
@property(nonatomic) unsigned long long URLOptions; // @synthesize URLOptions=_URLOptions;
@property(nonatomic) unsigned long long requestedTTL; // @synthesize requestedTTL=_requestedTTL;
@property(retain, nonatomic) NSSet *assetFieldNamesToPublishURLs; // @synthesize assetFieldNamesToPublishURLs=_assetFieldNamesToPublishURLs;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (id)zoneIDsToLock;
- (int)operationType;
- (_Bool)allowsAnonymousAccount;
- (id)initWithRecordIDs:(id)arg1 recordIDsToEtags:(id)arg2 recordIDsToVersionETags:(id)arg3 desiredKeys:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface CKDGetShareInvitationsURLRequest : CKDURLRequest
{
    _Bool _shouldGetReceived;
    _Bool _queryAllContainers;
    CDUnknownBlockType _shareInvitationFetchedBlock;
}

@property(nonatomic) _Bool queryAllContainers; // @synthesize queryAllContainers=_queryAllContainers;
@property(nonatomic) _Bool shouldGetReceived; // @synthesize shouldGetReceived=_shouldGetReceived;
@property(copy, nonatomic) CDUnknownBlockType shareInvitationFetchedBlock; // @synthesize shareInvitationFetchedBlock=_shareInvitationFetchedBlock;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithShouldGetReceived:(_Bool)arg1 queryAllContainers:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDGetSharesURLRequest : CKDURLRequest
{
    CDUnknownBlockType _shareFetchedBlock;
    NSArray *_shareIDsToFetch;
    NSMutableDictionary *_shareIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *shareIDByRequestID; // @synthesize shareIDByRequestID=_shareIDByRequestID;
@property(retain, nonatomic) NSArray *shareIDsToFetch; // @synthesize shareIDsToFetch=_shareIDsToFetch;
@property(copy, nonatomic) CDUnknownBlockType shareFetchedBlock; // @synthesize shareFetchedBlock=_shareFetchedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithShareIDs:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDGetSubscriptionsURLRequest : CKDURLRequest
{
    NSMutableArray *_subscriptions;
    CDUnknownBlockType _subscriptionFetchedBlock;
    NSArray *_subscriptionIDs;
    NSMutableDictionary *_subscriptionIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *subscriptionIDByRequestID; // @synthesize subscriptionIDByRequestID=_subscriptionIDByRequestID;
@property(retain, nonatomic) NSArray *subscriptionIDs; // @synthesize subscriptionIDs=_subscriptionIDs;
@property(copy, nonatomic) CDUnknownBlockType subscriptionFetchedBlock; // @synthesize subscriptionFetchedBlock=_subscriptionFetchedBlock;
@property(retain, nonatomic) NSArray *subscriptions; // @synthesize subscriptions=_subscriptions;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithSubscriptionIDs:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDGetUserPrivacySettingsOperation : CKDOperation
{
    long long _discoverable;
}

@property(nonatomic) long long discoverable; // @synthesize discoverable=_discoverable;
- (void)main;
- (void)_handleRetrievedPrivacySettings:(id)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDGetUserPrivacySettingsURLRequest : CKDURLRequest
{
    CKDPUserPrivacySettings *_userPrivacySettings;
}

@property(retain, nonatomic) CKDPUserPrivacySettings *userPrivacySettings; // @synthesize userPrivacySettings=_userPrivacySettings;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;

@end

__attribute__((visibility("hidden")))
@interface CKDGetUserRecordOperation : CKDFetchRecordsOperation
{
    CKRecord *_userRecord;
}

@property(retain, nonatomic) CKRecord *userRecord; // @synthesize userRecord=_userRecord;
- (void).cxx_destruct;
- (void)main;
- (void)_fetchRecords;

@end

__attribute__((visibility("hidden")))
@interface CKDGetUserRecordURLRequest : CKDURLRequest
{
    CDUnknownBlockType _recordFetchedBlock;
    CKRecord *_userRecord;
}

@property(retain, nonatomic) CKRecord *userRecord; // @synthesize userRecord=_userRecord;
@property(copy, nonatomic) CDUnknownBlockType recordFetchedBlock; // @synthesize recordFetchedBlock=_recordFetchedBlock;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;

@end

@interface CKDGlobalConfigurationOperation : CKDOperation
{
    CKDServerConfiguration *_configuration;
    NSObject<OS_dispatch_group> *_configurationFetchedGroup;
}

@property(retain, nonatomic) NSObject<OS_dispatch_group> *configurationFetchedGroup; // @synthesize configurationFetchedGroup=_configurationFetchedGroup;
@property(retain, nonatomic) CKDServerConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (void)main;
- (_Bool)shouldCheckAppVersion;

@end

__attribute__((visibility("hidden")))
@interface CKDGlobalConfigurationURLRequest : CKDURLRequest
{
    CKDServerConfiguration *_configuration;
}

@property(retain, nonatomic) CKDServerConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (void)requestDidParsePlistObject:(id)arg1;
- (Class)expectedResponseClass;
- (_Bool)hasRequestBody;
- (id)httpMethod;
- (id)url;
- (long long)partitionType;
- (long long)serverType;
- (id)additionalHeaderValues;
- (_Bool)allowsAnonymousAccount;
- (_Bool)requiresSignature;
- (_Bool)requiresDeviceID;
- (_Bool)requiresConfiguration;

@end

__attribute__((visibility("hidden")))
@interface CKDJSONResponseBodyParser : NSObject <CKDResponseBodyParser>
{
    CDUnknownBlockType _objectParsedBlock;
    NSError *_parserError;
    NSObject<OS_dispatch_queue> *_parseQueue;
    NSMutableData *_parserData;
}

@property(retain, nonatomic) NSMutableData *parserData; // @synthesize parserData=_parserData;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *parseQueue; // @synthesize parseQueue=_parseQueue;
@property(retain, nonatomic) NSError *parserError; // @synthesize parserError=_parserError;
@property(copy, nonatomic) CDUnknownBlockType objectParsedBlock; // @synthesize objectParsedBlock=_objectParsedBlock;
- (void).cxx_destruct;
- (void)finishWithCompletion:(CDUnknownBlockType)arg1;
- (void)processData:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDKeyboardTracker : NSObject
{
    NSArray *_enabledKeyboards;
    Class _CKDUITextInputModeClass;
}

+ (id)sharedTracker;
@property(nonatomic) Class CKDUITextInputModeClass; // @synthesize CKDUITextInputModeClass=_CKDUITextInputModeClass;
- (void).cxx_destruct;
@property(readonly) NSArray *enabledKeyboards;
- (void)_inputModeChanged;
- (void)_refreshEnabledKeyboards;
- (id)_init;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDLikeItemsOperation : CKDOperation
{
    CDUnknownBlockType _itemLikedProgressBlock;
    NSArray *_itemIDsToLike;
    NSArray *_itemIDsToUnlike;
    CKShareID *_shareID;
}

@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(retain, nonatomic) NSArray *itemIDsToUnlike; // @synthesize itemIDsToUnlike=_itemIDsToUnlike;
@property(retain, nonatomic) NSArray *itemIDsToLike; // @synthesize itemIDsToLike=_itemIDsToLike;
@property(copy, nonatomic) CDUnknownBlockType itemLikedProgressBlock; // @synthesize itemLikedProgressBlock=_itemLikedProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleLike:(id)arg1 withResponse:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDLikeItemsURLRequest : CKDURLRequest
{
    CDUnknownBlockType _itemLikedProgressBlock;
    NSArray *_itemIDsToLike;
    NSArray *_itemIDsToUnlike;
    CKShareID *_shareID;
    NSMutableDictionary *_itemIDsByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *itemIDsByRequestID; // @synthesize itemIDsByRequestID=_itemIDsByRequestID;
@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(retain, nonatomic) NSArray *itemIDsToUnlike; // @synthesize itemIDsToUnlike=_itemIDsToUnlike;
@property(retain, nonatomic) NSArray *itemIDsToLike; // @synthesize itemIDsToLike=_itemIDsToLike;
@property(copy, nonatomic) CDUnknownBlockType itemLikedProgressBlock; // @synthesize itemLikedProgressBlock=_itemLikedProgressBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithItemIDsToLike:(id)arg1 itemIDsToUnlike:(id)arg2 inShare:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCS : NSObject
{
    NSString *_path;
    CKDAssetCache *_assetCache;
    CKDMMCSEngineContext *_MMCSEngineContext;
}

+ (id)MMCSWrapperForApplicationBundleID:(id)arg1 path:(id)arg2 assetDbPath:(id)arg3 fileDownloadPath:(id)arg4 packageDownloadPath:(id)arg5 packageUploadPath:(id)arg6 isUTAccount:(_Bool)arg7 error:(id *)arg8;
+ (id)sharedWrappersByBundleID;
+ (id)_errorWithMMCSError:(id)arg1 description:(id)arg2 isGet:(_Bool)arg3;
+ (id)_errorWithMMCSError:(id)arg1 path:(id)arg2 description:(id)arg3 isGet:(_Bool)arg4;
+ (long long)_errorCodeWithMMCSPutError:(id)arg1;
+ (long long)_errorCodeWithMMCSGetError:(id)arg1;
+ (long long)_commonErrorCodeWithMMCSError:(id)arg1;
+ (id)_userInfoFromMMCSRetryableError:(id)arg1;
+ (id)emptyFileSignature;
@property(retain, nonatomic) CKDMMCSEngineContext *MMCSEngineContext; // @synthesize MMCSEngineContext=_MMCSEngineContext;
@property(retain, nonatomic) CKDAssetCache *assetCache; // @synthesize assetCache=_assetCache;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (id)getSectionItem:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_contextToGetSectionItem:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)putSectionItem:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_contextToPutSectionItem:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)unregisterItemIDs:(id)arg1;
- (id)statusReport;
- (id)putItemGroupSet:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_contextToPutItemGroup:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)getItemGroupSet:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_contextToGetItemGroup:(id)arg1 options:(id)arg2 progress:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_referenceSignatureFromReferenceIdentifier:(id)arg1 containerID:(id)arg2;
- (id)registerItemGroupSet:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)registerItemGroupSet:(id)arg1 shouldChunk:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_contextToRegisterItemGroup:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_logMMCSOptions:(id)arg1;
- (id)_referenceIdentifierFromAssetKey:(id)arg1;
@property(readonly, nonatomic, getter=getMaxChunkCountForSection) unsigned int maxChunkCountForSection;
@property(readonly, nonatomic, getter=getProtocolVersion) NSString *protocolVersion;
@property(readonly, nonatomic, getter=getMMCSEngine) struct __MMCSEngine *MMCSEngine;
- (void)dealloc;
- (id)initWithMMCSEngineContext:(id)arg1 path:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSEngineContext : NSObject
{
    _Bool _stopMMCSThread;
    unsigned int _maxChunkCountForSection;
    long long _refCount;
    long long _state;
    CKDMMCS *_MMCS;
    struct __MMCSEngine *_MMCSEngine;
    NSString *_applicationBundleID;
    NSString *_path;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSRunLoop *_runLoop;
    NSString *_runLoopMode;
    NSString *_protocolVersion;
}

+ (void)tearDownMMCSEngineWithContext:(id)arg1;
+ (id)setupMMCSEngineWithApplicationBundleID:(id)arg1 path:(id)arg2 error:(id *)arg3;
+ (id)sharedContextsByBundleID;
+ (id)sharedContextsQueue;
+ (id)_appID;
@property(nonatomic) unsigned int maxChunkCountForSection; // @synthesize maxChunkCountForSection=_maxChunkCountForSection;
@property(retain, nonatomic) NSString *protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property(retain, nonatomic) NSString *runLoopMode; // @synthesize runLoopMode=_runLoopMode;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore; // @synthesize semaphore=_semaphore;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(nonatomic) struct __MMCSEngine *MMCSEngine; // @synthesize MMCSEngine=_MMCSEngine;
@property(nonatomic) __weak CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
@property(nonatomic) _Bool stopMMCSThread; // @synthesize stopMMCSThread=_stopMMCSThread;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) long long refCount; // @synthesize refCount=_refCount;
- (void).cxx_destruct;
- (int)fdForItemID:(unsigned long long)arg1 itemType:(id *)arg2 error:(id *)arg3;
- (void)performOnRunLoop:(CDUnknownBlockType)arg1;
- (void)cancelRequestWithContext:(void *)arg1;
- (void)_tearDownMMCSEngine;
- (_Bool)_setupMMCSEngineWithRetryCount:(unsigned long long)arg1 error:(id *)arg2;
- (_Bool)_setupMMCSEngineWithError:(id *)arg1;
- (void)_MMCSThread;
- (void)_MMCSTreadAbort;
- (long long)decRefCount;
- (long long)incRefCount;
- (id)description;
- (id)CKPropertiesDescription;
- (void)dealloc;
- (id)initWithApplicationBundleID:(id)arg1 path:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSItem : NSObject
{
    _Bool _finished;
    _Bool _hasSize;
    _Bool _hasOffset;
    unsigned int _chunkCount;
    unsigned int _packageIndex;
    unsigned long long _itemID;
    NSString *_path;
    NSNumber *_deviceID;
    NSNumber *_fileID;
    NSNumber *_generationID;
    CKAsset *_asset;
    CKRecordID *_recordID;
    NSString *_recordType;
    NSString *_recordKey;
    NSData *_signature;
    NSURL *_contentBaseURL;
    NSString *_owner;
    NSString *_requestor;
    unsigned long long _size;
    unsigned long long _offset;
    NSString *_authToken;
    NSData *_authRequest;
    NSString *_uploadReceipt;
    NSMutableArray *_sectionItems;
    double _progress;
    NSError *_error;
    NSData *_assetKey;
    NSData *_wrappedAssetKey;
    NSData *_referenceSignature;
    NSString *_referenceIdentifierString;
}

+ (int)openFileDescriptorForDeviceID:(id)arg1 fileID:(id)arg2 generationID:(id)arg3 path:(id)arg4 error:(id *)arg5;
@property(nonatomic) _Bool hasOffset; // @synthesize hasOffset=_hasOffset;
@property(nonatomic) _Bool hasSize; // @synthesize hasSize=_hasSize;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(retain, nonatomic) NSString *referenceIdentifierString; // @synthesize referenceIdentifierString=_referenceIdentifierString;
@property(retain, nonatomic) NSData *referenceSignature; // @synthesize referenceSignature=_referenceSignature;
@property(retain, nonatomic) NSData *wrappedAssetKey; // @synthesize wrappedAssetKey=_wrappedAssetKey;
@property(retain, nonatomic) NSData *assetKey; // @synthesize assetKey=_assetKey;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSMutableArray *sectionItems; // @synthesize sectionItems=_sectionItems;
@property(nonatomic) unsigned int packageIndex; // @synthesize packageIndex=_packageIndex;
@property(retain, nonatomic) NSString *uploadReceipt; // @synthesize uploadReceipt=_uploadReceipt;
@property(retain, nonatomic) NSData *authRequest; // @synthesize authRequest=_authRequest;
@property(retain, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(nonatomic) unsigned int chunkCount; // @synthesize chunkCount=_chunkCount;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *requestor; // @synthesize requestor=_requestor;
@property(retain, nonatomic) NSString *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) NSURL *contentBaseURL; // @synthesize contentBaseURL=_contentBaseURL;
@property(retain, nonatomic) NSData *signature; // @synthesize signature=_signature;
@property(retain, nonatomic) NSString *recordKey; // @synthesize recordKey=_recordKey;
@property(retain, nonatomic) NSString *recordType; // @synthesize recordType=_recordType;
@property(retain, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property(readonly, nonatomic) CKAsset *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) NSNumber *generationID; // @synthesize generationID=_generationID;
@property(retain, nonatomic) NSNumber *fileID; // @synthesize fileID=_fileID;
@property(retain, nonatomic) NSNumber *deviceID; // @synthesize deviceID=_deviceID;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(nonatomic) unsigned long long itemID; // @synthesize itemID=_itemID;
- (void).cxx_destruct;
- (int)openFileDescriptorWithError:(id *)arg1;
- (_Bool)getFileSize:(unsigned long long *)arg1 withError:(id *)arg2;
- (id)description;
- (id)CKPropertiesDescription;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
@property(readonly, nonatomic) NSURL *fileURL;
- (id)initWithPackage:(id)arg1;
- (id)initWithAsset:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSItemGroup : NSObject
{
    NSMutableArray *_items;
    _Bool _complete;
    NSError *_error;
    NSArray *_tuple;
}

+ (id)tupleForItem:(id)arg1;
@property(nonatomic) _Bool complete; // @synthesize complete=_complete;
@property(retain, nonatomic) NSArray *tuple; // @synthesize tuple=_tuple;
@property(readonly, nonatomic) NSArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (void)addItem:(id)arg1;
@property(readonly, nonatomic) _Bool useAuthRequests;
@property(readonly, nonatomic) NSString *requestor;
@property(readonly, nonatomic) NSString *owner;
@property(readonly, nonatomic) NSURL *contentBaseURL;
- (id)description;
- (id)CKPropertiesDescription;
- (id)initWithTuple:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSItemGroupContext : NSObject <CKDCancelling>
{
    CKDMMCS *_MMCS;
    CKDMMCSItemGroup *_itemGroup;
    CDUnknownBlockType _progressBlock;
    CDUnknownBlockType _startBlock;
    CDUnknownBlockType _completionBlock;
    NSMutableDictionary *_itemsByID;
}

@property(retain, nonatomic) NSMutableDictionary *itemsByID; // @synthesize itemsByID=_itemsByID;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(copy, nonatomic) CDUnknownBlockType startBlock; // @synthesize startBlock=_startBlock;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(retain, nonatomic) CKDMMCSItemGroup *itemGroup; // @synthesize itemGroup=_itemGroup;
@property(retain, nonatomic) CKDMMCS *MMCS; // @synthesize MMCS=_MMCS;
- (void).cxx_destruct;
- (void)didPutSectionWithItemID:(unsigned long long)arg1 signature:(id)arg2 receipt:(id)arg3 error:(id)arg4;
- (void)didPutItemID:(unsigned long long)arg1 signature:(id)arg2 receipt:(id)arg3 error:(id)arg4;
- (void)didGetItemID:(unsigned long long)arg1 signature:(id)arg2 path:(id)arg3 error:(id)arg4;
- (void)updateProgressForItemID:(unsigned long long)arg1 state:(int)arg2 progress:(double)arg3 error:(id)arg4;
- (void)didCompleteRequestWithError:(id)arg1;
- (void)_cleanupItems;
- (_Bool)_setupItemsWithError:(id *)arg1;
- (void)start;
- (void)cancel;
- (id)initWithMMCS:(id)arg1 itemGroup:(id)arg2 progress:(CDUnknownBlockType)arg3 start:(CDUnknownBlockType)arg4 completionHandler:(CDUnknownBlockType)arg5;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSItemGroupSet : NSObject
{
    NSMutableDictionary *_itemsByGroupTuple;
}

@property(retain, nonatomic) NSMutableDictionary *itemsByGroupTuple; // @synthesize itemsByGroupTuple=_itemsByGroupTuple;
- (void).cxx_destruct;
- (void)addItem:(id)arg1;
- (id)allItemGroups;
@property(readonly, nonatomic) NSError *error;
- (id)description;
- (id)CKPropertiesDescription;
- (id)initWithItems:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSItemGroupSetContext : NSObject <CKDCancelling>
{
    CKDMMCSItemGroupSet *_itemGroupSet;
    NSMutableArray *_itemGroupContexts;
    CDUnknownBlockType _itemGroupCompletionBlock;
    CDUnknownBlockType _itemGroupSetCompletionBlock;
    NSObject<OS_dispatch_group> *_itemGroupSetCompletionGroup;
}

@property(retain, nonatomic) NSObject<OS_dispatch_group> *itemGroupSetCompletionGroup; // @synthesize itemGroupSetCompletionGroup=_itemGroupSetCompletionGroup;
@property(copy, nonatomic) CDUnknownBlockType itemGroupSetCompletionBlock; // @synthesize itemGroupSetCompletionBlock=_itemGroupSetCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType itemGroupCompletionBlock; // @synthesize itemGroupCompletionBlock=_itemGroupCompletionBlock;
@property(retain, nonatomic) NSMutableArray *itemGroupContexts; // @synthesize itemGroupContexts=_itemGroupContexts;
@property(retain, nonatomic) CKDMMCSItemGroupSet *itemGroupSet; // @synthesize itemGroupSet=_itemGroupSet;
- (void).cxx_destruct;
- (void)start;
- (void)_addItemGroupContext:(id)arg1;
- (void)cancel;
- (id)initWithItemGroupSet:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSPackageSignatureGenerator : NSObject
{
    _Bool _valid;
    void *_generator;
}

@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(nonatomic) void *generator; // @synthesize generator=_generator;
- (id)dataByFinishingSignature;
- (void)updateWithData:(id)arg1;
- (char *)_finishGenerator;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDMMCSRequestOptions : NSObject
{
    _Bool _usesBackgroundSession;
    _Bool _allowsCellularAccess;
    NSString *_applicationBundleID;
    NSString *_applicationSecondaryID;
    NSString *_containerID;
    NSArray *_zoneNames;
}

@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) _Bool usesBackgroundSession; // @synthesize usesBackgroundSession=_usesBackgroundSession;
@property(retain, nonatomic) NSArray *zoneNames; // @synthesize zoneNames=_zoneNames;
@property(retain, nonatomic) NSString *containerID; // @synthesize containerID=_containerID;
@property(retain, nonatomic) NSString *applicationSecondaryID; // @synthesize applicationSecondaryID=_applicationSecondaryID;
@property(retain, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
- (void).cxx_destruct;
- (id)MMCSOptions;
- (id)description;
- (id)CKPropertiesDescription;
- (id)initWithOperation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDMarkNotificationsReadOperation : CKDOperation
{
    CDUnknownBlockType _notificationMarkedRead;
    NSArray *_notificationIDs;
    NSMutableDictionary *_errorByNotificationID;
    NSMutableSet *_successfulNotificationIDs;
}

@property(retain, nonatomic) NSMutableSet *successfulNotificationIDs; // @synthesize successfulNotificationIDs=_successfulNotificationIDs;
@property(retain, nonatomic) NSMutableDictionary *errorByNotificationID; // @synthesize errorByNotificationID=_errorByNotificationID;
@property(retain, nonatomic) NSArray *notificationIDs; // @synthesize notificationIDs=_notificationIDs;
@property(copy, nonatomic) CDUnknownBlockType notificationMarkedRead; // @synthesize notificationMarkedRead=_notificationMarkedRead;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleNotificationID:(id)arg1 withResponse:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDMarkNotificationsReadURLRequest : CKDURLRequest
{
    CDUnknownBlockType _notificationMarkedReadProgressBlock;
    NSArray *_notificationIDs;
    NSMutableDictionary *_notificationIDsByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *notificationIDsByRequestID; // @synthesize notificationIDsByRequestID=_notificationIDsByRequestID;
@property(retain, nonatomic) NSArray *notificationIDs; // @synthesize notificationIDs=_notificationIDs;
@property(copy, nonatomic) CDUnknownBlockType notificationMarkedReadProgressBlock; // @synthesize notificationMarkedReadProgressBlock=_notificationMarkedReadProgressBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithNotificationIDsToMarkRead:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDMescalCertURLRequest : CKDURLRequest
{
    NSData *_mescalCert;
}

@property(retain, nonatomic) NSData *mescalCert; // @synthesize mescalCert=_mescalCert;
- (void).cxx_destruct;
- (void)requestDidParsePlaintextObject:(id)arg1;
- (_Bool)allowsAnonymousAccount;
- (_Bool)requiresDeviceID;
- (_Bool)requiresSignature;
- (id)url;
- (long long)partitionType;
- (long long)serverType;
- (_Bool)hasRequestBody;
- (id)httpMethod;

@end

__attribute__((visibility("hidden")))
@interface CKDMescalSession : NSObject
{
    _Bool _isSetup;
    _Bool _renewing;
    _Bool _didCheckGoldenTicket;
    CKDClientContext *_context;
    NSObject<OS_dispatch_queue> *_opQueue;
    NSObject<OS_dispatch_group> *_renewalGroup;
    NSOperationQueue *_renewQueue;
    NSData *_goldenTicket;
}

@property(nonatomic) _Bool didCheckGoldenTicket; // @synthesize didCheckGoldenTicket=_didCheckGoldenTicket;
@property(retain, nonatomic) NSData *goldenTicket; // @synthesize goldenTicket=_goldenTicket;
@property(retain, nonatomic) NSOperationQueue *renewQueue; // @synthesize renewQueue=_renewQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *renewalGroup; // @synthesize renewalGroup=_renewalGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *opQueue; // @synthesize opQueue=_opQueue;
@property _Bool renewing; // @synthesize renewing=_renewing;
@property(nonatomic) _Bool isSetup; // @synthesize isSetup=_isSetup;
@property(readonly, nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)processSignedData:(id)arg1 signature:(id)arg2 forRequest:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)signData:(id)arg1 forRequest:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)renewMescalSessionForRequest:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)resetMescalSession;
- (void)exchangeData:(id)arg1 serverVersion:(int)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_setUpWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_teardown;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDMescalSessionOperation : CKDDatabaseOperation
{
    int _serverVersion;
    CKDMescalSession *_mescalSession;
}

@property(retain, nonatomic) CKDMescalSession *mescalSession; // @synthesize mescalSession=_mescalSession;
@property(nonatomic) int serverVersion; // @synthesize serverVersion=_serverVersion;
- (void).cxx_destruct;
- (void)_handleCertRequestFinished:(id)arg1;
- (void)_handleSessionRequestFinished:(id)arg1;
- (void)_exchangeDataAndSendRequest:(id)arg1;
- (void)_handleDataExchanged:(id)arg1 withError:(id)arg2;
- (void)main;
- (_Bool)shouldCheckAppVersion;
- (id)flowControlKey;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDMescalSessionOperationInfo : CKDatabaseOperationInfo <NSSecureCoding>
{
    int _serverVersion;
    CKDMescalSession *_session;
}

@property(retain, nonatomic) CKDMescalSession *session; // @synthesize session=_session;
@property(nonatomic) int serverVersion; // @synthesize serverVersion=_serverVersion;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface CKDMescalSessionURLRequest : CKDURLRequest
{
    NSData *_mescalData;
    NSData *_sessionData;
}

@property(retain, nonatomic) NSData *sessionData; // @synthesize sessionData=_sessionData;
@property(retain, nonatomic) NSData *mescalData; // @synthesize mescalData=_mescalData;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (_Bool)allowsAnonymousAccount;
- (_Bool)requiresDeviceID;
- (_Bool)requiresSignature;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithSessionData:(id)arg1;

@end

@interface CKDMetadataCache : CKSQLite
{
    NSObject<OS_dispatch_queue> *_cacheQueue;
}

+ (id)sharedCache;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cacheQueue; // @synthesize cacheQueue=_cacheQueue;
- (void).cxx_destruct;
- (void)setContainerInfo:(id)arg1 forContainerID:(id)arg2;
- (id)containerInfoForContainerID:(id)arg1;
- (id)inlock_containerInfoForContainerID:(id)arg1;
- (void)setGlobalConfiguration:(id)arg1;
- (id)globalConfiguration;
- (void)removeKnownApplicationBundleID:(id)arg1;
- (id)knownApplicationBundleIDs;
- (void)setApplicationMetadata:(id)arg1 forApplicationBundleID:(id)arg2;
- (id)applicationMetadataForApplicationBundleID:(id)arg1;
- (id)inlock_applicationMetadataForApplicationBundleID:(id)arg1;
- (void)setDateOfLastTokenUpdate:(id)arg1;
- (void)inlock_setDateOfLastTokenUpdate:(id)arg1;
- (id)dateOfLastTokenUpdate;
- (void)setAppContainerIntersectionMetadata:(id)arg1 forAppContainerTuple:(id)arg2;
- (id)appContainerIntersectionMetadataForAppContainerTuple:(id)arg1;
- (id)knownAppContainerTuples;
- (void)setPushToken:(id)arg1 forAppContainerTuple:(id)arg2;
- (id)pushTokenForAppContainerTuple:(id)arg1;
- (void)expungeWithCurrentAccountIdentifier:(id)arg1 forceRemove:(_Bool)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyBadgeOperation : CKDDatabaseOperation
{
    unsigned long long _badgeValue;
}

@property(readonly, nonatomic) unsigned long long badgeValue; // @synthesize badgeValue=_badgeValue;
- (void)main;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyBadgeURLRequest : CKDURLRequest
{
    unsigned long long _badgeValue;
}

@property(readonly, nonatomic) unsigned long long badgeValue; // @synthesize badgeValue=_badgeValue;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithBadgeValue:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyRecordMetadata : NSObject
{
    _Bool _isDelete;
    CKRecord *_record;
    CKRecordID *_recordID;
    CKRecord *_serverRecord;
    NSString *_etag;
    unsigned long long _uploadState;
    NSError *_error;
}

+ (id)_stringForUploadState:(unsigned long long)arg1;
+ (id)modifyMetadataForDeleteWithRecordID:(id)arg1;
+ (id)modifyMetadataWithRecord:(id)arg1;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) unsigned long long uploadState; // @synthesize uploadState=_uploadState;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(nonatomic) _Bool isDelete; // @synthesize isDelete=_isDelete;
@property(retain, nonatomic) CKRecord *serverRecord; // @synthesize serverRecord=_serverRecord;
@property(retain, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
- (void).cxx_destruct;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyRecordZonesOperation : CKDDatabaseOperation
{
    _Bool _allowDefaultZoneSave;
    int _numZoneSaveAttempts;
    CDUnknownBlockType _saveCompletionBlock;
    CDUnknownBlockType _deleteCompletionBlock;
    NSMutableArray *_recordZonesToSave;
    NSArray *_recordZoneIDsToDelete;
    NSMutableDictionary *_recordZonesByZoneID;
    NSMutableDictionary *_pcsOplockFailureCountByZoneID;
}

@property(nonatomic) int numZoneSaveAttempts; // @synthesize numZoneSaveAttempts=_numZoneSaveAttempts;
@property(nonatomic) _Bool allowDefaultZoneSave; // @synthesize allowDefaultZoneSave=_allowDefaultZoneSave;
@property(retain, nonatomic) NSMutableDictionary *pcsOplockFailureCountByZoneID; // @synthesize pcsOplockFailureCountByZoneID=_pcsOplockFailureCountByZoneID;
@property(retain, nonatomic) NSMutableDictionary *recordZonesByZoneID; // @synthesize recordZonesByZoneID=_recordZonesByZoneID;
@property(retain, nonatomic) NSArray *recordZoneIDsToDelete; // @synthesize recordZoneIDsToDelete=_recordZoneIDsToDelete;
@property(retain, nonatomic) NSMutableArray *recordZonesToSave; // @synthesize recordZonesToSave=_recordZonesToSave;
@property(copy, nonatomic) CDUnknownBlockType deleteCompletionBlock; // @synthesize deleteCompletionBlock=_deleteCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType saveCompletionBlock; // @synthesize saveCompletionBlock=_saveCompletionBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_checkAndPrepareZones;
- (void)_fetchPCSDataForZonesFromServer:(_Bool)arg1;
- (void)_fetchPCSDataForZone:(id)arg1 fromServer:(_Bool)arg2;
- (_Bool)_saveZonesToServer;
- (void)_handleRecordZoneDeleted:(id)arg1 responseCode:(id)arg2;
- (void)_handleRecordZoneSaved:(id)arg1 responseCode:(id)arg2;
- (id)nameForState:(unsigned long long)arg1;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyRecordZonesURLRequest : CKDURLRequest
{
    CDUnknownBlockType _recordZoneModifiedBlock;
    NSArray *_recordZonesToSave;
    NSArray *_recordZoneIDsToDelete;
    NSMutableDictionary *_recordZoneIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *recordZoneIDByRequestID; // @synthesize recordZoneIDByRequestID=_recordZoneIDByRequestID;
@property(retain, nonatomic) NSArray *recordZoneIDsToDelete; // @synthesize recordZoneIDsToDelete=_recordZoneIDsToDelete;
@property(retain, nonatomic) NSArray *recordZonesToSave; // @synthesize recordZonesToSave=_recordZonesToSave;
@property(copy, nonatomic) CDUnknownBlockType recordZoneModifiedBlock; // @synthesize recordZoneModifiedBlock=_recordZoneModifiedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (id)zoneIDsToLock;
- (int)operationType;
- (id)initWithRecordZonesToSave:(id)arg1 recordZoneIDsToDelete:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyRecordsOperation : CKDDatabaseOperation
{
    CKDProtocolTranslator *_translator;
    _Bool _retryPCSFailures;
    _Bool _canSetPreviousProtectionEtag;
    _Bool _retriedRecords;
    _Bool _shouldOnlySaveAssetContent;
    _Bool _haveOutstandingMetadatas;
    _Bool _atomic;
    int _numPCSRetries;
    CDUnknownBlockType _saveProgressBlock;
    CDUnknownBlockType _saveCompletionBlock;
    CDUnknownBlockType _deleteCompletionBlock;
    NSArray *_recordsToSave;
    NSArray *_recordIDsToDelete;
    NSDictionary *_recordIDsToDeleteToEtags;
    NSDictionary *_conflictLosersToResolveByRecordID;
    NSDictionary *_metadatasByRecordID;
    NSMutableDictionary *_modifyMetadatasByZoneID;
    long long _savePolicy;
    NSData *_clientChangeTokenData;
    NSMutableDictionary *_recordsByServerID;
    CKDRecordCache *_cache;
}

@property(nonatomic) _Bool atomic; // @synthesize atomic=_atomic;
@property(nonatomic) _Bool haveOutstandingMetadatas; // @synthesize haveOutstandingMetadatas=_haveOutstandingMetadatas;
@property(nonatomic) _Bool shouldOnlySaveAssetContent; // @synthesize shouldOnlySaveAssetContent=_shouldOnlySaveAssetContent;
@property(nonatomic) _Bool retriedRecords; // @synthesize retriedRecords=_retriedRecords;
@property(retain, nonatomic) CKDRecordCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) NSMutableDictionary *recordsByServerID; // @synthesize recordsByServerID=_recordsByServerID;
@property(copy, nonatomic) NSData *clientChangeTokenData; // @synthesize clientChangeTokenData=_clientChangeTokenData;
@property(nonatomic) long long savePolicy; // @synthesize savePolicy=_savePolicy;
@property(nonatomic) int numPCSRetries; // @synthesize numPCSRetries=_numPCSRetries;
@property(retain, nonatomic) NSMutableDictionary *modifyMetadatasByZoneID; // @synthesize modifyMetadatasByZoneID=_modifyMetadatasByZoneID;
@property(retain, nonatomic) NSDictionary *metadatasByRecordID; // @synthesize metadatasByRecordID=_metadatasByRecordID;
@property(retain, nonatomic) NSDictionary *conflictLosersToResolveByRecordID; // @synthesize conflictLosersToResolveByRecordID=_conflictLosersToResolveByRecordID;
@property(retain, nonatomic) NSDictionary *recordIDsToDeleteToEtags; // @synthesize recordIDsToDeleteToEtags=_recordIDsToDeleteToEtags;
@property(retain, nonatomic) NSArray *recordIDsToDelete; // @synthesize recordIDsToDelete=_recordIDsToDelete;
@property(retain, nonatomic) NSArray *recordsToSave; // @synthesize recordsToSave=_recordsToSave;
@property(copy, nonatomic) CDUnknownBlockType deleteCompletionBlock; // @synthesize deleteCompletionBlock=_deleteCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType saveCompletionBlock; // @synthesize saveCompletionBlock=_saveCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType saveProgressBlock; // @synthesize saveProgressBlock=_saveProgressBlock;
@property(nonatomic) _Bool canSetPreviousProtectionEtag; // @synthesize canSetPreviousProtectionEtag=_canSetPreviousProtectionEtag;
@property(nonatomic) _Bool retryPCSFailures; // @synthesize retryPCSFailures=_retryPCSFailures;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (_Bool)_topoSortRecords;
- (void)_fetchRecordPCSData;
- (void)_loadPCSDataForMetadata:(id)arg1;
- (void)_fetchExistingPCSForProvidedPCSData:(id)arg1 zonePCS:(id)arg2 metadata:(id)arg3;
- (void)_fetchPCSDataForMetadata:(id)arg1;
- (void)_createAndSavePCSForMetadata:(id)arg1 withZonePCSData:(id)arg2;
- (void)_handlePCSData:(id)arg1 forMetadata:(id)arg2 withError:(id)arg3;
- (_Bool)_canSetPreviousProtectionEtag;
- (void)_savePackages;
- (void)_performSavePackages:(id)arg1;
- (_Bool)_saveAssets;
- (_Bool)_addAssetToSave:(id)arg1 withRecordKey:(id)arg2 record:(id)arg3 error:(id *)arg4;
- (id)_wrapAssetKey:(id)arg1 forRecord:(id)arg2 withError:(id *)arg3;
- (void)_performSaveAssets:(id)arg1;
- (void)_saveOnlyAssetContent;
- (_Bool)_prepareRecordsForSave;
- (_Bool)_wrapEncryptedDataOnRecord:(id)arg1;
- (_Bool)_wrapEncryptedData:(id)arg1 withPCS:(struct _OpaquePCSShareProtection *)arg2 forField:(id)arg3;
- (void)_verifyRecordEncryption;
- (void)_handleDecryptionFailure:(id)arg1 forRecordID:(id)arg2;
@property(readonly, nonatomic) CKDProtocolTranslator *translator;
- (void)_continueRecordsModify;
- (id)_createModifyRequestWithRecordsToSave:(id)arg1 recordsToDelete:(id)arg2 recordsToDeleteToEtags:(id)arg3 metadatasByRecordID:(id)arg4;
- (void)_handleRecordDeleted:(id)arg1 metadata:(id)arg2 responseCode:(id)arg3;
- (void)_handleRecordSaved:(id)arg1 metadata:(id)arg2 etag:(id)arg3 dateStatistics:(id)arg4 responseCode:(id)arg5 keysAssociatedWithETag:(id)arg6 recordForOplockFailure:(id)arg7 serverRecord:(id)arg8;
- (void)_clearProtectionDataForRecord:(id)arg1;
- (void)_performMetadataCallbacks;
- (void)_performCallbacksForAtomicZoneMetadatas:(id)arg1;
- (void)_performCallbacksForNonAtomicZoneMetadatas:(id)arg1;
- (id)nameForState:(unsigned long long)arg1;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(nonatomic) unsigned long long state;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *stateTransitionGroup;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyRecordsURLRequest : CKDURLRequest
{
    _Bool _atomic;
    _Bool _oplock;
    _Bool _sendAllFields;
    NSDictionary *_recordIDsToDeleteToEtags;
    NSDictionary *_conflictLosersToResolveByRecordID;
    CDUnknownBlockType _recordPostedBlock;
    NSArray *_records;
    NSArray *_recordIDsToDelete;
    NSData *_clientChangeTokenData;
    NSMutableDictionary *_recordIDByRequestID;
    NSMutableDictionary *_recordByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *recordByRequestID; // @synthesize recordByRequestID=_recordByRequestID;
@property(retain, nonatomic) NSMutableDictionary *recordIDByRequestID; // @synthesize recordIDByRequestID=_recordIDByRequestID;
@property(retain, nonatomic) NSData *clientChangeTokenData; // @synthesize clientChangeTokenData=_clientChangeTokenData;
@property(nonatomic) _Bool sendAllFields; // @synthesize sendAllFields=_sendAllFields;
@property(nonatomic) _Bool oplock; // @synthesize oplock=_oplock;
@property(retain, nonatomic) NSArray *recordIDsToDelete; // @synthesize recordIDsToDelete=_recordIDsToDelete;
@property(retain, nonatomic) NSArray *records; // @synthesize records=_records;
@property(copy, nonatomic) CDUnknownBlockType recordPostedBlock; // @synthesize recordPostedBlock=_recordPostedBlock;
@property(nonatomic) _Bool atomic; // @synthesize atomic=_atomic;
@property(retain, nonatomic) NSDictionary *conflictLosersToResolveByRecordID; // @synthesize conflictLosersToResolveByRecordID=_conflictLosersToResolveByRecordID;
@property(retain, nonatomic) NSDictionary *recordIDsToDeleteToEtags; // @synthesize recordIDsToDeleteToEtags=_recordIDsToDeleteToEtags;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (int)isolationLevel;
- (id)requestOperationClasses;
- (id)zoneIDsToLock;
- (int)operationType;
- (id)initWithRecordsToSave:(id)arg1 recordIDsToDelete:(id)arg2 oplock:(_Bool)arg3 sendAllFields:(_Bool)arg4 clientChangeTokenData:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyShareCommentsOperation : CKDOperation
{
    CDUnknownBlockType _saveCompletionBlock;
    CDUnknownBlockType _deleteCompletionBlock;
    CKShareID *_shareID;
    NSArray *_commentsToSave;
    NSArray *_commentIDsToDelete;
}

@property(retain, nonatomic) NSArray *commentIDsToDelete; // @synthesize commentIDsToDelete=_commentIDsToDelete;
@property(retain, nonatomic) NSArray *commentsToSave; // @synthesize commentsToSave=_commentsToSave;
@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(copy, nonatomic) CDUnknownBlockType deleteCompletionBlock; // @synthesize deleteCompletionBlock=_deleteCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType saveCompletionBlock; // @synthesize saveCompletionBlock=_saveCompletionBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleDeleteProgressWithCommentID:(id)arg1 result:(id)arg2;
- (void)_handleSaveProgressWithComment:(id)arg1 result:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyShareCommentsURLRequest : CKDURLRequest
{
    CDUnknownBlockType _shareCommentSavedBlock;
    CDUnknownBlockType _shareCommentDeletedBlock;
    NSArray *_commentsToSave;
    NSArray *_commentIDsToDelete;
    CKShareID *_shareID;
    NSMutableDictionary *_requestIDToComment;
    NSMutableDictionary *_requestIDToCommentID;
}

@property(retain, nonatomic) NSMutableDictionary *requestIDToCommentID; // @synthesize requestIDToCommentID=_requestIDToCommentID;
@property(retain, nonatomic) NSMutableDictionary *requestIDToComment; // @synthesize requestIDToComment=_requestIDToComment;
@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(retain, nonatomic) NSArray *commentIDsToDelete; // @synthesize commentIDsToDelete=_commentIDsToDelete;
@property(retain, nonatomic) NSArray *commentsToSave; // @synthesize commentsToSave=_commentsToSave;
@property(copy, nonatomic) CDUnknownBlockType shareCommentDeletedBlock; // @synthesize shareCommentDeletedBlock=_shareCommentDeletedBlock;
@property(copy, nonatomic) CDUnknownBlockType shareCommentSavedBlock; // @synthesize shareCommentSavedBlock=_shareCommentSavedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithCommentsToSave:(id)arg1 commentIDsToDelete:(id)arg2 inShareWithID:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDModifySharesOperation : CKDOperation
{
    CDUnknownBlockType _saveCompletionBlock;
    CDUnknownBlockType _deleteCompletionBlock;
    NSArray *_sharesToSave;
    NSArray *_shareIDsToDelete;
    NSMutableDictionary *_sharesByShareID;
}

@property(retain, nonatomic) NSMutableDictionary *sharesByShareID; // @synthesize sharesByShareID=_sharesByShareID;
@property(retain, nonatomic) NSArray *shareIDsToDelete; // @synthesize shareIDsToDelete=_shareIDsToDelete;
@property(retain, nonatomic) NSArray *sharesToSave; // @synthesize sharesToSave=_sharesToSave;
@property(copy, nonatomic) CDUnknownBlockType deleteCompletionBlock; // @synthesize deleteCompletionBlock=_deleteCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType saveCompletionBlock; // @synthesize saveCompletionBlock=_saveCompletionBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleShareDeleted:(id)arg1 responseCode:(id)arg2;
- (void)_handleShareSaved:(id)arg1 shareID:(id)arg2 responseCode:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifySharesURLRequest : CKDURLRequest
{
    CDUnknownBlockType _shareModifiedBlock;
    NSArray *_sharesToSave;
    NSArray *_shareIDsToDelete;
    NSMutableDictionary *_shareIDByRequestID;
    NSMutableDictionary *_participantIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *participantIDByRequestID; // @synthesize participantIDByRequestID=_participantIDByRequestID;
@property(retain, nonatomic) NSMutableDictionary *shareIDByRequestID; // @synthesize shareIDByRequestID=_shareIDByRequestID;
@property(retain, nonatomic) NSArray *shareIDsToDelete; // @synthesize shareIDsToDelete=_shareIDsToDelete;
@property(retain, nonatomic) NSArray *sharesToSave; // @synthesize sharesToSave=_sharesToSave;
@property(copy, nonatomic) CDUnknownBlockType shareModifiedBlock; // @synthesize shareModifiedBlock=_shareModifiedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithSharesToSave:(id)arg1 shareIDsToDelete:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifySubscriptionsOperation : CKDDatabaseOperation
{
    CDUnknownBlockType _saveCompletionBlock;
    CDUnknownBlockType _deleteCompletionBlock;
    NSArray *_subscriptionsToSave;
    NSArray *_subscriptionIDsToDelete;
    NSMutableDictionary *_subscriptionsByServerID;
}

@property(retain, nonatomic) NSMutableDictionary *subscriptionsByServerID; // @synthesize subscriptionsByServerID=_subscriptionsByServerID;
@property(retain, nonatomic) NSArray *subscriptionIDsToDelete; // @synthesize subscriptionIDsToDelete=_subscriptionIDsToDelete;
@property(retain, nonatomic) NSArray *subscriptionsToSave; // @synthesize subscriptionsToSave=_subscriptionsToSave;
@property(copy, nonatomic) CDUnknownBlockType deleteCompletionBlock; // @synthesize deleteCompletionBlock=_deleteCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType saveCompletionBlock; // @synthesize saveCompletionBlock=_saveCompletionBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleSubscriptionDeleted:(id)arg1 responseCode:(id)arg2;
- (void)_handleSubscriptionSaved:(id)arg1 error:(id)arg2;
- (void)_handleSubscriptionSaved:(id)arg1 responseCode:(id)arg2;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifySubscriptionsURLRequest : CKDURLRequest
{
    CKRecordZoneID *_zoneID;
    CDUnknownBlockType _subscriptionModifiedBlock;
    NSArray *_subscriptionsToSave;
    NSArray *_subscriptionIDsToDelete;
    NSMutableDictionary *_subscriptionIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *subscriptionIDByRequestID; // @synthesize subscriptionIDByRequestID=_subscriptionIDByRequestID;
@property(retain, nonatomic) NSArray *subscriptionIDsToDelete; // @synthesize subscriptionIDsToDelete=_subscriptionIDsToDelete;
@property(retain, nonatomic) NSArray *subscriptionsToSave; // @synthesize subscriptionsToSave=_subscriptionsToSave;
@property(copy, nonatomic) CDUnknownBlockType subscriptionModifiedBlock; // @synthesize subscriptionModifiedBlock=_subscriptionModifiedBlock;
@property(copy, nonatomic) CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithSubscriptionsToSave:(id)arg1 subscriptionIDsToDelete:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDModifyWebSharingOperation : CKDDatabaseOperation
{
    CDUnknownBlockType _recordWebSharedBlock;
    CDUnknownBlockType _recordWebUnsharedBlock;
    NSArray *_recordIDsToShare;
    NSArray *_recordIDsToUnshare;
    NSArray *_recordIDsToShareReadWrite;
    NSMutableDictionary *_recordsToSaveByID;
}

@property(retain, nonatomic) NSMutableDictionary *recordsToSaveByID; // @synthesize recordsToSaveByID=_recordsToSaveByID;
@property(retain, nonatomic) NSArray *recordIDsToShareReadWrite; // @synthesize recordIDsToShareReadWrite=_recordIDsToShareReadWrite;
@property(retain, nonatomic) NSArray *recordIDsToUnshare; // @synthesize recordIDsToUnshare=_recordIDsToUnshare;
@property(retain, nonatomic) NSArray *recordIDsToShare; // @synthesize recordIDsToShare=_recordIDsToShare;
@property(copy, nonatomic) CDUnknownBlockType recordWebUnsharedBlock; // @synthesize recordWebUnsharedBlock=_recordWebUnsharedBlock;
@property(copy, nonatomic) CDUnknownBlockType recordWebSharedBlock; // @synthesize recordWebSharedBlock=_recordWebSharedBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_fetchRecords;
- (void)_handleRecordFetched:(id)arg1 recordID:(id)arg2 error:(id)arg3;
- (struct _PCSIdentityData *)_copyShareProtectionFromRecord:(id)arg1 error:(id *)arg2;
- (void)_saveRecords;
- (void)_handleRecordSaved:(id)arg1 error:(id)arg2;
- (id)nameForState:(unsigned long long)arg1;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDPAsset : PBCodable <NSCopying>
{
    long long _downloadURLExpiration;
    long long _size;
    NSString *_contentBaseURL;
    NSData *_data;
    NSString *_derivedContentType;
    NSString *_downloadBaseURL;
    NSData *_downloadRequest;
    NSString *_downloadToken;
    NSData *_header;
    NSString *_owner;
    CKDPProtectionInfo *_protectionInfo;
    CKDPRecordIdentifier *_recordId;
    NSString *_referenceIdentifier;
    NSData *_referenceSignature;
    NSString *_requestor;
    NSData *_signature;
    NSString *_uploadReceipt;
    struct {
        unsigned int downloadURLExpiration:1;
        unsigned int size:1;
    } _has;
}

@property(retain, nonatomic) NSData *referenceSignature; // @synthesize referenceSignature=_referenceSignature;
@property(retain, nonatomic) NSString *referenceIdentifier; // @synthesize referenceIdentifier=_referenceIdentifier;
@property(retain, nonatomic) CKDPProtectionInfo *protectionInfo; // @synthesize protectionInfo=_protectionInfo;
@property(nonatomic) long long downloadURLExpiration; // @synthesize downloadURLExpiration=_downloadURLExpiration;
@property(retain, nonatomic) NSString *downloadBaseURL; // @synthesize downloadBaseURL=_downloadBaseURL;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSString *uploadReceipt; // @synthesize uploadReceipt=_uploadReceipt;
@property(retain, nonatomic) CKDPRecordIdentifier *recordId; // @synthesize recordId=_recordId;
@property(retain, nonatomic) NSString *requestor; // @synthesize requestor=_requestor;
@property(retain, nonatomic) NSString *contentBaseURL; // @synthesize contentBaseURL=_contentBaseURL;
@property(retain, nonatomic) NSString *derivedContentType; // @synthesize derivedContentType=_derivedContentType;
@property(retain, nonatomic) NSData *downloadRequest; // @synthesize downloadRequest=_downloadRequest;
@property(retain, nonatomic) NSString *downloadToken; // @synthesize downloadToken=_downloadToken;
@property(nonatomic) long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSData *header; // @synthesize header=_header;
@property(retain, nonatomic) NSData *signature; // @synthesize signature=_signature;
@property(retain, nonatomic) NSString *owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasReferenceSignature;
@property(readonly, nonatomic) _Bool hasReferenceIdentifier;
@property(readonly, nonatomic) _Bool hasProtectionInfo;
@property(nonatomic) _Bool hasDownloadURLExpiration;
@property(readonly, nonatomic) _Bool hasDownloadBaseURL;
@property(readonly, nonatomic) _Bool hasData;
@property(readonly, nonatomic) _Bool hasUploadReceipt;
@property(readonly, nonatomic) _Bool hasRecordId;
@property(readonly, nonatomic) _Bool hasRequestor;
@property(readonly, nonatomic) _Bool hasContentBaseURL;
@property(readonly, nonatomic) _Bool hasDerivedContentType;
@property(readonly, nonatomic) _Bool hasDownloadRequest;
@property(readonly, nonatomic) _Bool hasDownloadToken;
@property(nonatomic) _Bool hasSize;
@property(readonly, nonatomic) _Bool hasHeader;
@property(readonly, nonatomic) _Bool hasSignature;
@property(readonly, nonatomic) _Bool hasOwner;

@end

__attribute__((visibility("hidden")))
@interface CKDPAssetUploadTokenRetrieveRequest : PBRequest <NSCopying>
{
    NSMutableArray *_assets;
    CKDPRecordFieldIdentifier *_field;
    CKDPRecordType *_type;
    NSMutableArray *_uploads;
}

+ (id)options;
@property(retain, nonatomic) NSMutableArray *uploads; // @synthesize uploads=_uploads;
@property(retain, nonatomic) NSMutableArray *assets; // @synthesize assets=_assets;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *field; // @synthesize field=_field;
@property(retain, nonatomic) CKDPRecordType *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)uploadsAtIndex:(unsigned long long)arg1;
- (unsigned long long)uploadsCount;
- (void)addUploads:(id)arg1;
- (void)clearUploads;
- (id)assetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)assetsCount;
- (void)addAssets:(id)arg1;
- (void)clearAssets;
@property(readonly, nonatomic) _Bool hasField;
@property(readonly, nonatomic) _Bool hasType;

@end

__attribute__((visibility("hidden")))
@interface CKDPAssetUploadTokenRetrieveRequestAssetField : PBCodable <NSCopying>
{
    NSMutableArray *_assets;
    CKDPRecordFieldIdentifier *_field;
}

@property(retain, nonatomic) NSMutableArray *assets; // @synthesize assets=_assets;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *field; // @synthesize field=_field;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)assetsAtIndex:(unsigned long long)arg1;
- (unsigned long long)assetsCount;
- (void)addAssets:(id)arg1;
- (void)clearAssets;
@property(readonly, nonatomic) _Bool hasField;

@end

__attribute__((visibility("hidden")))
@interface CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload : PBCodable <NSCopying>
{
    NSMutableArray *_assetFields;
    CKDPRecordIdentifier *_recordId;
    CKDPRecordType *_type;
}

@property(retain, nonatomic) NSMutableArray *assetFields; // @synthesize assetFields=_assetFields;
@property(retain, nonatomic) CKDPRecordType *type; // @synthesize type=_type;
@property(retain, nonatomic) CKDPRecordIdentifier *recordId; // @synthesize recordId=_recordId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)assetFieldsAtIndex:(unsigned long long)arg1;
- (unsigned long long)assetFieldsCount;
- (void)addAssetFields:(id)arg1;
- (void)clearAssetFields;
@property(readonly, nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasRecordId;

@end

__attribute__((visibility("hidden")))
@interface CKDPAssetUploadTokenRetrieveResponse : PBCodable <NSCopying>
{
    NSMutableArray *_uploadTokens;
}

@property(retain, nonatomic) NSMutableArray *uploadTokens; // @synthesize uploadTokens=_uploadTokens;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)uploadTokensAtIndex:(unsigned long long)arg1;
- (unsigned long long)uploadTokensCount;
- (void)addUploadTokens:(id)arg1;
- (void)clearUploadTokens;

@end

__attribute__((visibility("hidden")))
@interface CKDPAssetUploadTokenRetrieveResponseUploadToken : PBCodable <NSCopying>
{
    CKDPAsset *_asset;
    NSString *_token;
}

@property(retain, nonatomic) CKDPAsset *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasAsset;
@property(readonly, nonatomic) _Bool hasToken;

@end

__attribute__((visibility("hidden")))
@interface CKDPCSCache : NSObject
{
    CDUnknownBlockType _fetchPCSItemForCacheBlock;
    NSMutableDictionary *_itemIDToPCSCacheItem;
    NSObject<OS_dispatch_queue> *_itemPCSFetchQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *itemPCSFetchQueue; // @synthesize itemPCSFetchQueue=_itemPCSFetchQueue;
@property(retain, nonatomic) NSMutableDictionary *itemIDToPCSCacheItem; // @synthesize itemIDToPCSCacheItem=_itemIDToPCSCacheItem;
@property(copy, nonatomic) CDUnknownBlockType fetchPCSItemForCacheBlock; // @synthesize fetchPCSItemForCacheBlock=_fetchPCSItemForCacheBlock;
- (void).cxx_destruct;
- (void)clearCache;
- (void)fetchPCSForItemWithID:(id)arg1 operation:(id)arg2 fetchFromServer:(_Bool)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)pcsDataFetched:(id)arg1 forItemWithID:(id)arg2 error:(id)arg3;
- (void)setPCSData:(id)arg1 forItemWithID:(id)arg2;
- (id)init;
- (void)_initCache;

@end

__attribute__((visibility("hidden")))
@interface CKDPCSCacheItem : NSObject
{
    CKDPCSData *_pcsData;
    NSObject<OS_dispatch_group> *_fetchGroup;
    NSError *_fetchError;
}

@property(retain, nonatomic) NSError *fetchError; // @synthesize fetchError=_fetchError;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *fetchGroup; // @synthesize fetchGroup=_fetchGroup;
@property(retain, nonatomic) CKDPCSData *pcsData; // @synthesize pcsData=_pcsData;
- (void).cxx_destruct;
- (id)initWithFetchGroup:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDPCSData : NSObject
{
    struct _OpaquePCSShareProtection *_pcs;
    id _itemID;
    NSString *_etag;
    CKDPCSData *_zonePCSData;
    CKDPCSData *_sharePCSData;
}

+ (id)dataWithItemID:(id)arg1;
@property(retain, nonatomic) CKDPCSData *sharePCSData; // @synthesize sharePCSData=_sharePCSData;
@property(retain, nonatomic) CKDPCSData *zonePCSData; // @synthesize zonePCSData=_zonePCSData;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(readonly, nonatomic) id itemID; // @synthesize itemID=_itemID;
- (void).cxx_destruct;
- (id)description;
- (id)CKPropertiesDescription;
@property(nonatomic) struct _OpaquePCSShareProtection *pcs; // @synthesize pcs=_pcs;
- (void)dealloc;
- (id)initWithItemID:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDPCSFetchAggregator : NSObject
{
    CKDClientContext *_context;
    NSObject<OS_dispatch_queue> *_opQueue;
    NSOperationQueue *_queue;
    NSMutableArray *_queuedFetches;
    NSMutableArray *_runningFetches;
    NSObject<OS_dispatch_source> *_timerSource;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(retain, nonatomic) NSMutableArray *runningFetches; // @synthesize runningFetches=_runningFetches;
@property(retain, nonatomic) NSMutableArray *queuedFetches; // @synthesize queuedFetches=_queuedFetches;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *opQueue; // @synthesize opQueue=_opQueue;
@property(nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)requestFetchOfRecordWithID:(id)arg1 forOperation:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)_lockedGetQueuedFetchForOperation:(id)arg1;
- (void)_lockedFireReadyQueuedFetches;
- (void)_lockedRescheduleQueuedFetchesTimer;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDPCSManager : NSObject
{
    struct _PCSIdentityData *_publicZoneIdentity;
    CKDClientContext *_context;
    NSString *_currentAccountIdentifier;
    NSOperationQueue *_operationQueue;
    CKDPCSFetchAggregator *_recordFetchAggregator;
    CKDPCSCache *_zoneCache;
    CKDPCSCache *_backgroundZoneCache;
    NSMutableDictionary *_recordCacheByPrivateZoneID;
    NSMutableDictionary *_backgroundRecordCacheByPrivateZoneID;
    CKDPCSCache *_shareCache;
    struct _PCSIdentityData *_myPCSIdentity;
    NSString *_serviceName;
}

@property(retain, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(nonatomic) struct _PCSIdentityData *myPCSIdentity; // @synthesize myPCSIdentity=_myPCSIdentity;
@property(retain, nonatomic) CKDPCSCache *shareCache; // @synthesize shareCache=_shareCache;
@property(retain, nonatomic) NSMutableDictionary *backgroundRecordCacheByPrivateZoneID; // @synthesize backgroundRecordCacheByPrivateZoneID=_backgroundRecordCacheByPrivateZoneID;
@property(retain, nonatomic) NSMutableDictionary *recordCacheByPrivateZoneID; // @synthesize recordCacheByPrivateZoneID=_recordCacheByPrivateZoneID;
@property(retain, nonatomic) CKDPCSCache *backgroundZoneCache; // @synthesize backgroundZoneCache=_backgroundZoneCache;
@property(retain, nonatomic) CKDPCSCache *zoneCache; // @synthesize zoneCache=_zoneCache;
@property(retain, nonatomic) CKDPCSFetchAggregator *recordFetchAggregator; // @synthesize recordFetchAggregator=_recordFetchAggregator;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) NSString *currentAccountIdentifier; // @synthesize currentAccountIdentifier=_currentAccountIdentifier;
@property(readonly, nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (id)referenceSignatureFromAssetKey:(id)arg1;
- (id)referenceIdentifierStringFromAssetKey:(id)arg1;
- (id)newAssetKey;
- (id)wrapAssetKey:(id)arg1 withRecordPCS:(struct _OpaquePCSShareProtection *)arg2 withError:(id *)arg3;
- (id)unwrapAssetKey:(id)arg1 withRecordPCS:(struct _OpaquePCSShareProtection *)arg2 withError:(id *)arg3;
- (void)setPCSData:(id)arg1 forFetchedShareID:(id)arg2;
- (void)setPCSData:(id)arg1 forFetchedRecordID:(id)arg2 withScope:(long long)arg3;
- (void)setPCSData:(id)arg1 forFetchedZoneID:(id)arg2 withScope:(long long)arg3;
- (void)fetchPCSForShareWithID:(id)arg1 operation:(id)arg2 fetchFromServer:(_Bool)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)_fetchPCSForShareWithIDFromServer:(id)arg1 operation:(id)arg2 forCache:(id)arg3;
- (void)fetchPCSForRecordWithID:(id)arg1 operation:(id)arg2 fetchFromServer:(_Bool)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (id)_newPCSRecordCache;
- (void)_fetchPCSForRecordWithIDFromServer:(id)arg1 operation:(id)arg2 forCache:(id)arg3;
- (void)_handleRecordFetchedFromServer:(id)arg1 withID:(id)arg2 forCache:(id)arg3 operation:(id)arg4 error:(id)arg5;
- (void)fetchPCSForZoneWithID:(id)arg1 operation:(id)arg2 fetchFromServer:(_Bool)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)_fetchPCSForZoneWithIDFromServer:(id)arg1 operation:(id)arg2 forCache:(id)arg3;
- (void)_saveNewPCSOnDefaultZone:(id)arg1 operation:(id)arg2 cache:(id)arg3;
- (id)removeWebSharingIdentity:(struct _PCSIdentityData *)arg1 fromRecordPCS:(struct _OpaquePCSShareProtection *)arg2;
- (id)addWebSharingIdentity:(struct _PCSIdentityData *)arg1 toRecordPCS:(struct _OpaquePCSShareProtection *)arg2;
- (struct _OpaquePCSShareProtection *)createRecordPCSFromData:(id)arg1 webSharingIdentity:(struct _PCSIdentityData *)arg2 error:(id *)arg3;
- (struct _PCSIdentityData *)createWebSharingIdentityFromData:(id)arg1 error:(id *)arg2;
- (id)dataFromWebSharingIdentity:(struct _PCSIdentityData *)arg1 error:(id *)arg2;
- (struct _PCSIdentityData *)createWebSharingIdentityWithError:(id *)arg1;
- (id)etagFromRecordPCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;
- (struct _OpaquePCSShareProtection *)createRecordPCSFromData:(id)arg1 zonePCS:(struct _OpaquePCSShareProtection *)arg2 error:(id *)arg3;
- (id)dataFromRecordPCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;
- (struct _OpaquePCSShareProtection *)createRecordPCSWithZonePCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;
- (id)repairZonePCSData:(id)arg1 error:(id *)arg2;
- (id)etagFromZonePCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;
- (struct _OpaquePCSShareProtection *)createZonePCSFromData:(id)arg1 error:(id *)arg2;
- (id)dataFromZonePCS:(struct _OpaquePCSShareProtection *)arg1 error:(id *)arg2;
- (struct _OpaquePCSShareProtection *)createZonePCSWithError:(id *)arg1;
- (id)protectionIdentifierFromShareProtection:(struct _OpaquePCSShareProtection *)arg1;
- (id)etagFromPCSData:(id)arg1;
- (struct _PCSIdentityData *)copyServiceIdentityWithError:(id *)arg1;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;
- (id)_serviceNameForContainerID:(id)arg1;
- (void)clearPCSCaches;

@end

__attribute__((visibility("hidden")))
@interface CKDPCloudDBSharingParams : PBCodable <NSCopying>
{
    CKDPResource *_destination;
}

@property(retain, nonatomic) CKDPResource *destination; // @synthesize destination=_destination;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasDestination;

@end

__attribute__((visibility("hidden")))
@interface CKDPComment : PBCodable <NSCopying>
{
    CKDPCommentContent *_commentContent;
    CKDPIdentifier *_commentId;
    CKDPDate *_createdAt;
    CKDPIdentifier *_from;
    CKDPLikeInfo *_likeInfo;
    NSString *_path;
}

@property(retain, nonatomic) CKDPLikeInfo *likeInfo; // @synthesize likeInfo=_likeInfo;
@property(retain, nonatomic) CKDPCommentContent *commentContent; // @synthesize commentContent=_commentContent;
@property(retain, nonatomic) CKDPIdentifier *from; // @synthesize from=_from;
@property(retain, nonatomic) CKDPDate *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) CKDPIdentifier *commentId; // @synthesize commentId=_commentId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLikeInfo;
@property(readonly, nonatomic) _Bool hasCommentContent;
@property(readonly, nonatomic) _Bool hasFrom;
@property(readonly, nonatomic) _Bool hasCreatedAt;
@property(readonly, nonatomic) _Bool hasPath;
@property(readonly, nonatomic) _Bool hasCommentId;

@end

__attribute__((visibility("hidden")))
@interface CKDPCommentContent : PBCodable <NSCopying>
{
    NSData *_comment;
    _Bool _encrypted;
    struct {
        unsigned int encrypted:1;
    } _has;
}

@property(retain, nonatomic) NSData *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasComment;
@property(nonatomic) _Bool hasEncrypted;
@property(nonatomic) _Bool encrypted; // @synthesize encrypted=_encrypted;

@end

__attribute__((visibility("hidden")))
@interface CKDPCommentSummary : PBCodable <NSCopying>
{
    CKDPCommentedOnId *_identifier;
    CKDPLikeInfo *_likeInfo;
}

@property(retain, nonatomic) CKDPLikeInfo *likeInfo; // @synthesize likeInfo=_likeInfo;
@property(retain, nonatomic) CKDPCommentedOnId *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLikeInfo;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPCommentedOnId : PBCodable <NSCopying>
{
    NSData *_itemId;
    CKDPShareIdentifier *_shareIdentifier;
}

@property(retain, nonatomic) NSData *itemId; // @synthesize itemId=_itemId;
@property(retain, nonatomic) CKDPShareIdentifier *shareIdentifier; // @synthesize shareIdentifier=_shareIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasItemId;
@property(readonly, nonatomic) _Bool hasShareIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPConfiguration : PBCodable <NSCopying>
{
    unsigned long long _created;
    unsigned long long _expires;
    NSMutableArray *_fields;
    struct {
        unsigned int created:1;
        unsigned int expires:1;
    } _has;
}

@property(nonatomic) unsigned long long expires; // @synthesize expires=_expires;
@property(nonatomic) unsigned long long created; // @synthesize created=_created;
@property(retain, nonatomic) NSMutableArray *fields; // @synthesize fields=_fields;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasExpires;
@property(nonatomic) _Bool hasCreated;
- (id)fieldsAtIndex:(unsigned long long)arg1;
- (unsigned long long)fieldsCount;
- (void)addFields:(id)arg1;
- (void)clearFields;

@end

__attribute__((visibility("hidden")))
@interface CKDPConfigurationField : PBCodable <NSCopying>
{
    NSString *_name;
    CKDPConfigurationFieldValue *_value;
}

@property(retain, nonatomic) CKDPConfigurationFieldValue *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasValue;
@property(readonly, nonatomic) _Bool hasName;

@end

__attribute__((visibility("hidden")))
@interface CKDPConfigurationFieldValue : PBCodable <NSCopying>
{
    double _doubleValue;
    long long _longValue;
    NSData *_bytesValue;
    NSMutableArray *_fieldValues;
    NSMutableArray *_listValues;
    NSString *_stringValue;
    int _type;
    _Bool _boolValue;
    struct {
        unsigned int doubleValue:1;
        unsigned int longValue:1;
        unsigned int type:1;
        unsigned int boolValue:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *listValues; // @synthesize listValues=_listValues;
@property(retain, nonatomic) NSMutableArray *fieldValues; // @synthesize fieldValues=_fieldValues;
@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(nonatomic) double doubleValue; // @synthesize doubleValue=_doubleValue;
@property(nonatomic) long long longValue; // @synthesize longValue=_longValue;
@property(nonatomic) _Bool boolValue; // @synthesize boolValue=_boolValue;
@property(retain, nonatomic) NSData *bytesValue; // @synthesize bytesValue=_bytesValue;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)listValuesAtIndex:(unsigned long long)arg1;
- (unsigned long long)listValuesCount;
- (void)addListValues:(id)arg1;
- (void)clearListValues;
- (id)fieldValuesAtIndex:(unsigned long long)arg1;
- (unsigned long long)fieldValuesCount;
- (void)addFieldValues:(id)arg1;
- (void)clearFieldValues;
@property(readonly, nonatomic) _Bool hasStringValue;
@property(nonatomic) _Bool hasDoubleValue;
@property(nonatomic) _Bool hasLongValue;
@property(nonatomic) _Bool hasBoolValue;
@property(readonly, nonatomic) _Bool hasBytesValue;
@property(nonatomic) _Bool hasType;

@end

__attribute__((visibility("hidden")))
@interface CKDPDate : PBCodable <NSCopying>
{
    double _time;
    struct {
        unsigned int time:1;
    } _has;
}

@property(nonatomic) double time; // @synthesize time=_time;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTime;
- (id)_prettyDictionaryRepresentation;

@end

__attribute__((visibility("hidden")))
@interface CKDPDateStatistics : PBCodable <NSCopying>
{
    CKDPDate *_creation;
    CKDPDate *_modification;
}

@property(retain, nonatomic) CKDPDate *modification; // @synthesize modification=_modification;
@property(retain, nonatomic) CKDPDate *creation; // @synthesize creation=_creation;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasModification;
@property(readonly, nonatomic) _Bool hasCreation;

@end

__attribute__((visibility("hidden")))
@interface CKDPDeleteCommentRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_commentId;
}

+ (id)options;
@property(retain, nonatomic) CKDPIdentifier *commentId; // @synthesize commentId=_commentId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCommentId;

@end

__attribute__((visibility("hidden")))
@interface CKDPDeleteCommentResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPDeleteContainerRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPDeleteContainerResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPGetCommentRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_commentId;
}

+ (id)options;
@property(retain, nonatomic) CKDPIdentifier *commentId; // @synthesize commentId=_commentId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCommentId;

@end

__attribute__((visibility("hidden")))
@interface CKDPGetCommentResponse : PBCodable <NSCopying>
{
    CKDPComment *_comment;
}

@property(retain, nonatomic) CKDPComment *comment; // @synthesize comment=_comment;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasComment;

@end

__attribute__((visibility("hidden")))
@interface CKDPGetCommentsRequest : PBRequest <NSCopying>
{
    NSData *_continuationMarker;
    CKDPCommentedOnId *_identifier;
    unsigned int _limit;
    CKDPQuerySort *_orderBy;
    NSString *_path;
    CDStruct_88fc3008 _has;
}

+ (id)options;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) CKDPQuerySort *orderBy; // @synthesize orderBy=_orderBy;
@property(nonatomic) unsigned int limit; // @synthesize limit=_limit;
@property(retain, nonatomic) NSData *continuationMarker; // @synthesize continuationMarker=_continuationMarker;
@property(retain, nonatomic) CKDPCommentedOnId *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPath;
@property(readonly, nonatomic) _Bool hasOrderBy;
@property(nonatomic) _Bool hasLimit;
@property(readonly, nonatomic) _Bool hasContinuationMarker;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPGetCommentsResponse : PBCodable <NSCopying>
{
    NSMutableArray *_comments;
    NSData *_continuationMarker;
    CKDPCommentSummary *_summary;
    int _totalCount;
    struct {
        unsigned int totalCount:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *comments; // @synthesize comments=_comments;
@property(retain, nonatomic) CKDPCommentSummary *summary; // @synthesize summary=_summary;
@property(retain, nonatomic) NSData *continuationMarker; // @synthesize continuationMarker=_continuationMarker;
@property(nonatomic) int totalCount; // @synthesize totalCount=_totalCount;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)commentsAtIndex:(unsigned long long)arg1;
- (unsigned long long)commentsCount;
- (void)addComments:(id)arg1;
- (void)clearComments;
@property(readonly, nonatomic) _Bool hasSummary;
@property(readonly, nonatomic) _Bool hasContinuationMarker;
@property(nonatomic) _Bool hasTotalCount;

@end

__attribute__((visibility("hidden")))
@interface CKDPGetLikesRequest : PBRequest <NSCopying>
{
    CKDPLikedId *_identifier;
    unsigned int _limit;
    CDStruct_88fc3008 _has;
}

+ (id)options;
@property(nonatomic) unsigned int limit; // @synthesize limit=_limit;
@property(retain, nonatomic) CKDPLikedId *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLimit;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPGetLikesResponse : PBCodable <NSCopying>
{
    CKDPLikeInfo *_likeInfo;
    NSMutableArray *_likes;
}

@property(retain, nonatomic) NSMutableArray *likes; // @synthesize likes=_likes;
@property(retain, nonatomic) CKDPLikeInfo *likeInfo; // @synthesize likeInfo=_likeInfo;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)likeAtIndex:(unsigned long long)arg1;
- (unsigned long long)likesCount;
- (void)addLike:(id)arg1;
- (void)clearLikes;
@property(readonly, nonatomic) _Bool hasLikeInfo;

@end

__attribute__((visibility("hidden")))
@interface CKDPIdentifier : PBCodable <NSCopying>
{
    NSString *_name;
    int _type;
    CDStruct_f953fb60 _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasName;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitation : PBCodable <NSCopying>
{
    NSString *_applicationContainer;
    int _applicationContainerEnvironment;
    CKDPDate *_createdAt;
    CKDPIdentifier *_invitationId;
    NSString *_invitationImageUrl;
    NSString *_invitationMessage;
    NSData *_payload;
    CKDPInvitationRecipient *_recipient;
    CKDPIdentifier *_senderId;
    CKDPShareIdentifier *_shareId;
    NSData *_signature;
    int _state;
    struct {
        unsigned int applicationContainerEnvironment:1;
        unsigned int state:1;
    } _has;
}

@property(retain, nonatomic) NSData *signature; // @synthesize signature=_signature;
@property(retain, nonatomic) NSData *payload; // @synthesize payload=_payload;
@property(retain, nonatomic) NSString *applicationContainer; // @synthesize applicationContainer=_applicationContainer;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
@property(retain, nonatomic) CKDPInvitationRecipient *recipient; // @synthesize recipient=_recipient;
@property(retain, nonatomic) NSString *invitationImageUrl; // @synthesize invitationImageUrl=_invitationImageUrl;
@property(retain, nonatomic) NSString *invitationMessage; // @synthesize invitationMessage=_invitationMessage;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) CKDPDate *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) CKDPIdentifier *senderId; // @synthesize senderId=_senderId;
@property(retain, nonatomic) CKDPIdentifier *invitationId; // @synthesize invitationId=_invitationId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSignature;
@property(readonly, nonatomic) _Bool hasPayload;
@property(nonatomic) _Bool hasApplicationContainerEnvironment;
@property(nonatomic) int applicationContainerEnvironment; // @synthesize applicationContainerEnvironment=_applicationContainerEnvironment;
@property(readonly, nonatomic) _Bool hasApplicationContainer;
@property(readonly, nonatomic) _Bool hasShareId;
@property(readonly, nonatomic) _Bool hasRecipient;
@property(readonly, nonatomic) _Bool hasInvitationImageUrl;
@property(readonly, nonatomic) _Bool hasInvitationMessage;
@property(nonatomic) _Bool hasState;
@property(readonly, nonatomic) _Bool hasCreatedAt;
@property(readonly, nonatomic) _Bool hasSenderId;
@property(readonly, nonatomic) _Bool hasInvitationId;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationAcceptRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_invitationId;
    NSData *_parameters;
}

+ (id)options;
@property(retain, nonatomic) NSData *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) CKDPIdentifier *invitationId; // @synthesize invitationId=_invitationId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasParameters;
@property(readonly, nonatomic) _Bool hasInvitationId;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationAcceptResponse : PBCodable <NSCopying>
{
    CKDPInvitation *_invitation;
}

@property(retain, nonatomic) CKDPInvitation *invitation; // @synthesize invitation=_invitation;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasInvitation;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationDeclineRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_invitationId;
}

+ (id)options;
@property(retain, nonatomic) CKDPIdentifier *invitationId; // @synthesize invitationId=_invitationId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasInvitationId;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationDeclineResponse : PBCodable <NSCopying>
{
    CKDPInvitation *_invitation;
}

@property(retain, nonatomic) CKDPInvitation *invitation; // @synthesize invitation=_invitation;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasInvitation;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationQueryRequest : PBRequest <NSCopying>
{
    int _queryType;
    _Bool _queryAllContainers;
    struct {
        unsigned int queryType:1;
        unsigned int queryAllContainers:1;
    } _has;
}

+ (id)options;
@property(nonatomic) int queryType; // @synthesize queryType=_queryType;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasQueryAllContainers;
@property(nonatomic) _Bool queryAllContainers; // @synthesize queryAllContainers=_queryAllContainers;
@property(nonatomic) _Bool hasQueryType;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationQueryResponse : PBCodable <NSCopying>
{
    NSMutableArray *_invitations;
}

@property(retain, nonatomic) NSMutableArray *invitations; // @synthesize invitations=_invitations;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)invitationAtIndex:(unsigned long long)arg1;
- (unsigned long long)invitationsCount;
- (void)addInvitation:(id)arg1;
- (void)clearInvitations;

@end

__attribute__((visibility("hidden")))
@interface CKDPInvitationRecipient : PBCodable <NSCopying>
{
    NSString *_emailAddress;
    CKDPIdentifier *_userId;
}

@property(retain, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(retain, nonatomic) CKDPIdentifier *userId; // @synthesize userId=_userId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasEmailAddress;
@property(readonly, nonatomic) _Bool hasUserId;

@end

__attribute__((visibility("hidden")))
@interface CKDPLikeInfo : PBCodable <NSCopying>
{
    int _likeCount;
    _Bool _likedByCurrentUser;
    struct {
        unsigned int likeCount:1;
        unsigned int likedByCurrentUser:1;
    } _has;
}

@property(nonatomic) _Bool likedByCurrentUser; // @synthesize likedByCurrentUser=_likedByCurrentUser;
@property(nonatomic) int likeCount; // @synthesize likeCount=_likeCount;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLikedByCurrentUser;
@property(nonatomic) _Bool hasLikeCount;

@end

__attribute__((visibility("hidden")))
@interface CKDPLikeRequest : PBRequest <NSCopying>
{
    CKDPLikedId *_identifier;
}

+ (id)options;
@property(retain, nonatomic) CKDPLikedId *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPLikeResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPLikedId : PBCodable <NSCopying>
{
    CKDPIdentifier *_commentIdentifier;
    NSData *_itemId;
    CKDPShareIdentifier *_shareIdentifier;
}

@property(retain, nonatomic) NSData *itemId; // @synthesize itemId=_itemId;
@property(retain, nonatomic) CKDPIdentifier *commentIdentifier; // @synthesize commentIdentifier=_commentIdentifier;
@property(retain, nonatomic) CKDPShareIdentifier *shareIdentifier; // @synthesize shareIdentifier=_shareIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasItemId;
@property(readonly, nonatomic) _Bool hasCommentIdentifier;
@property(readonly, nonatomic) _Bool hasShareIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPLocale : PBCodable <NSCopying>
{
    NSString *_activeKeyboard;
    NSMutableArray *_enabledKeyboards;
    NSString *_languageCode;
    NSString *_regionCode;
}

@property(retain, nonatomic) NSString *activeKeyboard; // @synthesize activeKeyboard=_activeKeyboard;
@property(retain, nonatomic) NSMutableArray *enabledKeyboards; // @synthesize enabledKeyboards=_enabledKeyboards;
@property(retain, nonatomic) NSString *regionCode; // @synthesize regionCode=_regionCode;
@property(retain, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasActiveKeyboard;
- (id)enabledKeyboardsAtIndex:(unsigned long long)arg1;
- (unsigned long long)enabledKeyboardsCount;
- (void)addEnabledKeyboards:(id)arg1;
- (void)clearEnabledKeyboards;
@property(readonly, nonatomic) _Bool hasRegionCode;
@property(readonly, nonatomic) _Bool hasLanguageCode;

@end

__attribute__((visibility("hidden")))
@interface CKDPLocation : PBCodable <NSCopying>
{
    CKDPLocationBound *_bounds;
    CKDPLocationCoordinate *_coordinate;
}

@property(retain, nonatomic) CKDPLocationBound *bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) CKDPLocationCoordinate *coordinate; // @synthesize coordinate=_coordinate;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasBounds;
@property(readonly, nonatomic) _Bool hasCoordinate;

@end

__attribute__((visibility("hidden")))
@interface CKDPLocationBound : PBCodable <NSCopying>
{
    double _radius;
    struct {
        unsigned int radius:1;
    } _has;
}

@property(nonatomic) double radius; // @synthesize radius=_radius;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasRadius;

@end

__attribute__((visibility("hidden")))
@interface CKDPLocationCoordinate : PBCodable <NSCopying>
{
    double _altitude;
    double _course;
    double _horizontalAccuracy;
    double _latitude;
    double _longitude;
    double _speed;
    double _verticalAccuracy;
    CKDPDate *_timestamp;
    struct {
        unsigned int altitude:1;
        unsigned int course:1;
        unsigned int horizontalAccuracy:1;
        unsigned int latitude:1;
        unsigned int longitude:1;
        unsigned int speed:1;
        unsigned int verticalAccuracy:1;
    } _has;
}

@property(retain, nonatomic) CKDPDate *timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) double speed; // @synthesize speed=_speed;
@property(nonatomic) double course; // @synthesize course=_course;
@property(nonatomic) double verticalAccuracy; // @synthesize verticalAccuracy=_verticalAccuracy;
@property(nonatomic) double altitude; // @synthesize altitude=_altitude;
@property(nonatomic) double horizontalAccuracy; // @synthesize horizontalAccuracy=_horizontalAccuracy;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasTimestamp;
@property(nonatomic) _Bool hasSpeed;
@property(nonatomic) _Bool hasCourse;
@property(nonatomic) _Bool hasVerticalAccuracy;
@property(nonatomic) _Bool hasAltitude;
@property(nonatomic) _Bool hasHorizontalAccuracy;
@property(nonatomic) _Bool hasLongitude;
@property(nonatomic) _Bool hasLatitude;

@end

__attribute__((visibility("hidden")))
@interface CKDPMescalCertificateRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPMescalCertificateResponse : PBCodable <NSCopying>
{
    NSData *_certificate;
}

@property(retain, nonatomic) NSData *certificate; // @synthesize certificate=_certificate;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCertificate;

@end

__attribute__((visibility("hidden")))
@interface CKDPMescalSessionInfoRequest : PBRequest <NSCopying>
{
    NSData *_requestData;
}

+ (id)options;
@property(retain, nonatomic) NSData *requestData; // @synthesize requestData=_requestData;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRequestData;

@end

__attribute__((visibility("hidden")))
@interface CKDPMescalSessionInfoResponse : PBCodable <NSCopying>
{
    NSData *_sessionInfo;
    int _status;
    CDStruct_47fe53f2 _has;
}

@property(nonatomic) int status; // @synthesize status=_status;
@property(retain, nonatomic) NSData *sessionInfo; // @synthesize sessionInfo=_sessionInfo;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasStatus;
@property(readonly, nonatomic) _Bool hasSessionInfo;

@end

__attribute__((visibility("hidden")))
@interface CKDPMescalSignatureRequest : PBRequest <NSCopying>
{
    NSData *_mescalData;
}

+ (id)options;
@property(retain, nonatomic) NSData *mescalData; // @synthesize mescalData=_mescalData;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasMescalData;

@end

__attribute__((visibility("hidden")))
@interface CKDPMescalSignatureResponse : PBCodable <NSCopying>
{
    NSData *_mescalHeaderData;
    int _status;
    CDStruct_47fe53f2 _has;
}

@property(nonatomic) int status; // @synthesize status=_status;
@property(retain, nonatomic) NSData *mescalHeaderData; // @synthesize mescalHeaderData=_mescalHeaderData;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasStatus;
@property(readonly, nonatomic) _Bool hasMescalHeaderData;

@end

__attribute__((visibility("hidden")))
@interface CKDPNotificationMarkReadRequest : PBRequest <NSCopying>
{
    NSString *_uuid;
}

+ (id)options;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUuid;

@end

__attribute__((visibility("hidden")))
@interface CKDPNotificationMarkReadResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPNotificationSyncRequest : PBRequest <NSCopying>
{
    unsigned int _maxChanges;
    NSData *_serverChangeToken;
    CDStruct_f8809e99 _has;
}

+ (id)options;
@property(nonatomic) unsigned int maxChanges; // @synthesize maxChanges=_maxChanges;
@property(retain, nonatomic) NSData *serverChangeToken; // @synthesize serverChangeToken=_serverChangeToken;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMaxChanges;
@property(readonly, nonatomic) _Bool hasServerChangeToken;

@end

__attribute__((visibility("hidden")))
@interface CKDPNotificationSyncResponse : PBCodable <NSCopying>
{
    NSData *_changeID;
    NSMutableArray *_pushMessages;
    _Bool _moreAvailable;
    struct {
        unsigned int moreAvailable:1;
    } _has;
}

@property(nonatomic) _Bool moreAvailable; // @synthesize moreAvailable=_moreAvailable;
@property(retain, nonatomic) NSMutableArray *pushMessages; // @synthesize pushMessages=_pushMessages;
@property(retain, nonatomic) NSData *changeID; // @synthesize changeID=_changeID;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMoreAvailable;
- (id)pushMessageAtIndex:(unsigned long long)arg1;
- (unsigned long long)pushMessagesCount;
- (void)addPushMessage:(id)arg1;
- (void)clearPushMessages;
@property(readonly, nonatomic) _Bool hasChangeID;

@end

@interface CKDPNotificationSyncResponsePushMessage : PBCodable <NSCopying>
{
    int _badgeCount;
    NSString *_dialog;
    NSData *_payload;
    NSString *_sound;
    int _source;
    NSString *_uuid;
    _Bool _isRead;
    struct {
        unsigned int badgeCount:1;
        unsigned int source:1;
        unsigned int isRead:1;
    } _has;
}

@property(retain, nonatomic) NSData *payload; // @synthesize payload=_payload;
@property(nonatomic) int badgeCount; // @synthesize badgeCount=_badgeCount;
@property(retain, nonatomic) NSString *sound; // @synthesize sound=_sound;
@property(retain, nonatomic) NSString *dialog; // @synthesize dialog=_dialog;
@property(nonatomic) int source; // @synthesize source=_source;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(nonatomic) _Bool isRead; // @synthesize isRead=_isRead;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPayload;
@property(nonatomic) _Bool hasBadgeCount;
@property(readonly, nonatomic) _Bool hasSound;
@property(readonly, nonatomic) _Bool hasDialog;
@property(nonatomic) _Bool hasSource;
@property(readonly, nonatomic) _Bool hasUuid;
@property(nonatomic) _Bool hasIsRead;

@end

__attribute__((visibility("hidden")))
@interface CKDPOperation : PBCodable <NSCopying>
{
    NSString *_operationUUID;
    int _type;
    _Bool _last;
    _Bool _synchronousMode;
    struct {
        unsigned int type:1;
        unsigned int last:1;
        unsigned int synchronousMode:1;
    } _has;
}

@property(nonatomic) _Bool last; // @synthesize last=_last;
@property(nonatomic) _Bool synchronousMode; // @synthesize synchronousMode=_synchronousMode;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *operationUUID; // @synthesize operationUUID=_operationUUID;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLast;
@property(nonatomic) _Bool hasSynchronousMode;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasOperationUUID;

@end

__attribute__((visibility("hidden")))
@interface CKDPOplockFailure : PBCodable <NSCopying>
{
    CKDPRecord *_recordForOplockFailure;
}

@property(retain, nonatomic) CKDPRecord *recordForOplockFailure; // @synthesize recordForOplockFailure=_recordForOplockFailure;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRecordForOplockFailure;

@end

__attribute__((visibility("hidden")))
@interface CKDPPackage : PBCodable <NSCopying>
{
    CKDPAsset *_manifest;
    NSMutableArray *_sections;
}

@property(retain, nonatomic) NSMutableArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) CKDPAsset *manifest; // @synthesize manifest=_manifest;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)sectionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)sectionsCount;
- (void)addSections:(id)arg1;
- (void)clearSections;
@property(readonly, nonatomic) _Bool hasManifest;

@end

__attribute__((visibility("hidden")))
@interface CKDPPackageManifestHeader : PBCodable <NSCopying>
{
    NSData *_signature;
    int _version;
    struct {
        unsigned int version:1;
    } _has;
}

@property(retain, nonatomic) NSData *signature; // @synthesize signature=_signature;
@property(nonatomic) int version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSignature;
@property(nonatomic) _Bool hasVersion;

@end

__attribute__((visibility("hidden")))
@interface CKDPPackageManifestItem : PBCodable <NSCopying>
{
    long long _size;
    NSData *_signature;
    _Bool _lastItem;
    struct {
        unsigned int size:1;
        unsigned int lastItem:1;
    } _has;
}

@property(nonatomic) _Bool lastItem; // @synthesize lastItem=_lastItem;
@property(nonatomic) long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSData *signature; // @synthesize signature=_signature;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLastItem;
@property(nonatomic) _Bool hasSize;
@property(readonly, nonatomic) _Bool hasSignature;

@end

__attribute__((visibility("hidden")))
@interface CKDPPackageManifestSection : PBCodable <NSCopying>
{
    long long _size;
    NSData *_signature;
    _Bool _lastSection;
    struct {
        unsigned int size:1;
        unsigned int lastSection:1;
    } _has;
}

@property(nonatomic) _Bool lastSection; // @synthesize lastSection=_lastSection;
@property(nonatomic) long long size; // @synthesize size=_size;
@property(retain, nonatomic) NSData *signature; // @synthesize signature=_signature;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasLastSection;
@property(nonatomic) _Bool hasSize;
@property(readonly, nonatomic) _Bool hasSignature;

@end

__attribute__((visibility("hidden")))
@interface CKDPParticipant : PBCodable <NSCopying>
{
    NSString *_emailAddress;
    NSData *_invitationSignature;
    CKDPIdentifier *_inviterId;
    CKDPIdentifier *_participantId;
    int _participantType;
    int _permission;
    int _state;
    CKDPIdentifier *_userId;
    _Bool _createdOutOfProcess;
    struct {
        unsigned int participantType:1;
        unsigned int permission:1;
        unsigned int state:1;
        unsigned int createdOutOfProcess:1;
    } _has;
}

@property(retain, nonatomic) NSData *invitationSignature; // @synthesize invitationSignature=_invitationSignature;
@property(nonatomic) _Bool createdOutOfProcess; // @synthesize createdOutOfProcess=_createdOutOfProcess;
@property(retain, nonatomic) CKDPIdentifier *inviterId; // @synthesize inviterId=_inviterId;
@property(nonatomic) int permission; // @synthesize permission=_permission;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(retain, nonatomic) CKDPIdentifier *userId; // @synthesize userId=_userId;
@property(retain, nonatomic) CKDPIdentifier *participantId; // @synthesize participantId=_participantId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasInvitationSignature;
@property(nonatomic) _Bool hasParticipantType;
@property(nonatomic) int participantType; // @synthesize participantType=_participantType;
@property(nonatomic) _Bool hasCreatedOutOfProcess;
@property(readonly, nonatomic) _Bool hasInviterId;
@property(nonatomic) _Bool hasPermission;
@property(nonatomic) _Bool hasState;
@property(readonly, nonatomic) _Bool hasEmailAddress;
@property(readonly, nonatomic) _Bool hasUserId;
@property(readonly, nonatomic) _Bool hasParticipantId;

@end

__attribute__((visibility("hidden")))
@interface CKDPPkiRegisterRequest : PBRequest <NSCopying>
{
    NSString *_currentKeyHash;
    CKDPPublicKey *_publicKey;
}

+ (id)options;
@property(retain, nonatomic) CKDPPublicKey *publicKey; // @synthesize publicKey=_publicKey;
@property(retain, nonatomic) NSString *currentKeyHash; // @synthesize currentKeyHash=_currentKeyHash;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPublicKey;
@property(readonly, nonatomic) _Bool hasCurrentKeyHash;

@end

__attribute__((visibility("hidden")))
@interface CKDPPkiRegisterResponse : PBCodable <NSCopying>
{
    CKDPPublicKey *_publicKey;
}

@property(retain, nonatomic) CKDPPublicKey *publicKey; // @synthesize publicKey=_publicKey;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPublicKey;

@end

__attribute__((visibility("hidden")))
@interface CKDPPkiRetrieveRequest : PBRequest <NSCopying>
{
    NSMutableArray *_userIds;
}

+ (id)options;
@property(retain, nonatomic) NSMutableArray *userIds; // @synthesize userIds=_userIds;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)userIdAtIndex:(unsigned long long)arg1;
- (unsigned long long)userIdsCount;
- (void)addUserId:(id)arg1;
- (void)clearUserIds;

@end

__attribute__((visibility("hidden")))
@interface CKDPPkiRetrieveResponse : PBCodable <NSCopying>
{
    NSMutableArray *_publicKeys;
}

@property(retain, nonatomic) NSMutableArray *publicKeys; // @synthesize publicKeys=_publicKeys;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)publicKeyAtIndex:(unsigned long long)arg1;
- (unsigned long long)publicKeysCount;
- (void)addPublicKey:(id)arg1;
- (void)clearPublicKeys;

@end

__attribute__((visibility("hidden")))
@interface CKDPPostCommentRequest : PBRequest <NSCopying>
{
    CKDPCommentContent *_commentContent;
    CKDPCommentedOnId *_identifier;
    NSString *_path;
}

+ (id)options;
@property(retain, nonatomic) CKDPCommentContent *commentContent; // @synthesize commentContent=_commentContent;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(retain, nonatomic) CKDPCommentedOnId *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCommentContent;
@property(readonly, nonatomic) _Bool hasPath;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPPostCommentResponse : PBCodable <NSCopying>
{
    CKDPIdentifier *_commentId;
}

@property(retain, nonatomic) CKDPIdentifier *commentId; // @synthesize commentId=_commentId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCommentId;

@end

__attribute__((visibility("hidden")))
@interface CKDPPromoteContainerSchemaRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPPromoteContainerSchemaResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPProtectionInfo : PBCodable <NSCopying>
{
    NSData *_protectionInfo;
    NSString *_protectionInfoTag;
}

@property(retain, nonatomic) NSString *protectionInfoTag; // @synthesize protectionInfoTag=_protectionInfoTag;
@property(retain, nonatomic) NSData *protectionInfo; // @synthesize protectionInfo=_protectionInfo;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasProtectionInfoTag;
@property(readonly, nonatomic) _Bool hasProtectionInfo;

@end

__attribute__((visibility("hidden")))
@interface CKDPPublicKey : PBCodable <NSCopying>
{
    NSData *_keyData;
    NSString *_keyHash;
    CKDPIdentifier *_userId;
}

@property(retain, nonatomic) NSString *keyHash; // @synthesize keyHash=_keyHash;
@property(retain, nonatomic) NSData *keyData; // @synthesize keyData=_keyData;
@property(retain, nonatomic) CKDPIdentifier *userId; // @synthesize userId=_userId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasKeyHash;
@property(readonly, nonatomic) _Bool hasKeyData;
@property(readonly, nonatomic) _Bool hasUserId;

@end

__attribute__((visibility("hidden")))
@interface CKDPPulseData : PBCodable <NSCopying>
{
    long long _customState;
    long long _stateTTLMillis;
    CKDPDate *_lastCustom;
    CKDPDate *_lastEdited;
    CKDPDate *_lastInvisible;
    CKDPDate *_lastViewed;
    int _state;
    CKDPIdentifier *_user;
    struct {
        unsigned int customState:1;
        unsigned int stateTTLMillis:1;
        unsigned int state:1;
    } _has;
}

@property(retain, nonatomic) CKDPDate *lastInvisible; // @synthesize lastInvisible=_lastInvisible;
@property(retain, nonatomic) CKDPDate *lastCustom; // @synthesize lastCustom=_lastCustom;
@property(retain, nonatomic) CKDPDate *lastEdited; // @synthesize lastEdited=_lastEdited;
@property(retain, nonatomic) CKDPDate *lastViewed; // @synthesize lastViewed=_lastViewed;
@property(nonatomic) int state; // @synthesize state=_state;
@property(retain, nonatomic) CKDPIdentifier *user; // @synthesize user=_user;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLastInvisible;
@property(readonly, nonatomic) _Bool hasLastCustom;
@property(readonly, nonatomic) _Bool hasLastEdited;
@property(readonly, nonatomic) _Bool hasLastViewed;
@property(nonatomic) _Bool hasStateTTLMillis;
@property(nonatomic) long long stateTTLMillis; // @synthesize stateTTLMillis=_stateTTLMillis;
@property(nonatomic) _Bool hasCustomState;
@property(nonatomic) long long customState; // @synthesize customState=_customState;
@property(nonatomic) _Bool hasState;
@property(readonly, nonatomic) _Bool hasUser;

@end

__attribute__((visibility("hidden")))
@interface CKDPPulseRequest : PBRequest <NSCopying>
{
    long long _lookbackWindowMillis;
    int _apnsEnv;
    NSString *_etag;
    CKDPPulseData *_pulseData;
    NSData *_pushToken;
    CKDPResource *_resource;
    CKDPShareIdentifier *_shareId;
    _Bool _reset;
    struct {
        unsigned int lookbackWindowMillis:1;
        unsigned int apnsEnv:1;
        unsigned int reset:1;
    } _has;
}

+ (id)options;
@property(nonatomic) int apnsEnv; // @synthesize apnsEnv=_apnsEnv;
@property(retain, nonatomic) CKDPPulseData *pulseData; // @synthesize pulseData=_pulseData;
@property(retain, nonatomic) NSData *pushToken; // @synthesize pushToken=_pushToken;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPResource *resource; // @synthesize resource=_resource;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasApnsEnv;
@property(nonatomic) _Bool hasLookbackWindowMillis;
@property(nonatomic) long long lookbackWindowMillis; // @synthesize lookbackWindowMillis=_lookbackWindowMillis;
@property(nonatomic) _Bool hasReset;
@property(nonatomic) _Bool reset; // @synthesize reset=_reset;
@property(readonly, nonatomic) _Bool hasPulseData;
@property(readonly, nonatomic) _Bool hasPushToken;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasResource;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPPulseResponse : PBCodable <NSCopying>
{
    NSString *_currentEtag;
    NSMutableArray *_userDatas;
}

@property(retain, nonatomic) NSMutableArray *userDatas; // @synthesize userDatas=_userDatas;
@property(retain, nonatomic) NSString *currentEtag; // @synthesize currentEtag=_currentEtag;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)userDataAtIndex:(unsigned long long)arg1;
- (unsigned long long)userDatasCount;
- (void)addUserData:(id)arg1;
- (void)clearUserDatas;
@property(readonly, nonatomic) _Bool hasCurrentEtag;

@end

__attribute__((visibility("hidden")))
@interface CKDPQuery : PBCodable <NSCopying>
{
    NSMutableArray *_filters;
    int _queryOperator;
    NSMutableArray *_sorts;
    NSMutableArray *_types;
    _Bool _distinct;
    struct {
        unsigned int queryOperator:1;
        unsigned int distinct:1;
    } _has;
}

@property(nonatomic) _Bool distinct; // @synthesize distinct=_distinct;
@property(retain, nonatomic) NSMutableArray *sorts; // @synthesize sorts=_sorts;
@property(retain, nonatomic) NSMutableArray *filters; // @synthesize filters=_filters;
@property(retain, nonatomic) NSMutableArray *types; // @synthesize types=_types;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasQueryOperator;
@property(nonatomic) int queryOperator; // @synthesize queryOperator=_queryOperator;
@property(nonatomic) _Bool hasDistinct;
- (id)sortsAtIndex:(unsigned long long)arg1;
- (unsigned long long)sortsCount;
- (void)addSorts:(id)arg1;
- (void)clearSorts;
- (id)filtersAtIndex:(unsigned long long)arg1;
- (unsigned long long)filtersCount;
- (void)addFilters:(id)arg1;
- (void)clearFilters;
- (id)typesAtIndex:(unsigned long long)arg1;
- (unsigned long long)typesCount;
- (void)addTypes:(id)arg1;
- (void)clearTypes;

@end

__attribute__((visibility("hidden")))
@interface CKDPQueryFilter : PBCodable <NSCopying>
{
    CKDPLocationBound *_bounds;
    CKDPRecordFieldIdentifier *_fieldName;
    CKDPRecordFieldValue *_fieldValue;
    int _type;
    CDStruct_f953fb60 _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) CKDPLocationBound *bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) CKDPRecordFieldValue *fieldValue; // @synthesize fieldValue=_fieldValue;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *fieldName; // @synthesize fieldName=_fieldName;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasBounds;
@property(readonly, nonatomic) _Bool hasFieldValue;
@property(readonly, nonatomic) _Bool hasFieldName;

@end

__attribute__((visibility("hidden")))
@interface CKDPQueryRetrieveRequest : PBRequest <NSCopying>
{
    NSData *_continuationMarker;
    unsigned int _limit;
    CKDPQuery *_query;
    CKDPRequestedFields *_requestedFields;
    CKDPRecordZoneIdentifier *_zoneIdentifier;
    CDStruct_88fc3008 _has;
}

+ (id)options;
@property(retain, nonatomic) CKDPRequestedFields *requestedFields; // @synthesize requestedFields=_requestedFields;
@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
@property(nonatomic) unsigned int limit; // @synthesize limit=_limit;
@property(retain, nonatomic) NSData *continuationMarker; // @synthesize continuationMarker=_continuationMarker;
@property(retain, nonatomic) CKDPQuery *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRequestedFields;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;
@property(nonatomic) _Bool hasLimit;
@property(readonly, nonatomic) _Bool hasContinuationMarker;
@property(readonly, nonatomic) _Bool hasQuery;

@end

__attribute__((visibility("hidden")))
@interface CKDPQueryRetrieveResponse : PBCodable <NSCopying>
{
    NSData *_continuationMarker;
    NSMutableArray *_queryResults;
}

@property(retain, nonatomic) NSData *continuationMarker; // @synthesize continuationMarker=_continuationMarker;
@property(retain, nonatomic) NSMutableArray *queryResults; // @synthesize queryResults=_queryResults;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasContinuationMarker;
- (id)queryResultsAtIndex:(unsigned long long)arg1;
- (unsigned long long)queryResultsCount;
- (void)addQueryResults:(id)arg1;
- (void)clearQueryResults;

@end

__attribute__((visibility("hidden")))
@interface CKDPQueryRetrieveResponseQueryResult : PBCodable <NSCopying>
{
    NSString *_etag;
    CKDPRecordIdentifier *_identifier;
    CKDPRecord *_record;
    int _type;
    CDStruct_f953fb60 _has;
}

@property(retain, nonatomic) CKDPRecord *record; // @synthesize record=_record;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPRecordIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRecord;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPQuerySort : PBCodable <NSCopying>
{
    CKDPLocationCoordinate *_coordinate;
    CKDPRecordFieldIdentifier *_fieldName;
    int _order;
    struct {
        unsigned int order:1;
    } _has;
}

@property(retain, nonatomic) CKDPLocationCoordinate *coordinate; // @synthesize coordinate=_coordinate;
@property(nonatomic) int order; // @synthesize order=_order;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *fieldName; // @synthesize fieldName=_fieldName;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasCoordinate;
@property(nonatomic) _Bool hasOrder;
@property(readonly, nonatomic) _Bool hasFieldName;

@end

@interface CKDPRecord : PBCodable <NSCopying>
{
    NSMutableArray *_conflictLoserEtags;
    CKDPIdentifier *_createdBy;
    NSString *_etag;
    NSMutableArray *_fields;
    CKDPIdentifier *_modifiedBy;
    NSString *_modifiedByDevice;
    NSMutableArray *_pluginFields;
    CKDPProtectionInfo *_protectionInfo;
    NSString *_protectionInfoTag;
    CKDPRecordIdentifier *_recordIdentifier;
    CKDPShareIdentifier *_shareId;
    CKDPDateStatistics *_timeStatistics;
    CKDPRecordType *_type;
}

+ (id)recordFromData:(id)arg1;
@property(retain, nonatomic) NSString *protectionInfoTag; // @synthesize protectionInfoTag=_protectionInfoTag;
@property(retain, nonatomic) CKDPProtectionInfo *protectionInfo; // @synthesize protectionInfo=_protectionInfo;
@property(retain, nonatomic) NSMutableArray *pluginFields; // @synthesize pluginFields=_pluginFields;
@property(retain, nonatomic) NSString *modifiedByDevice; // @synthesize modifiedByDevice=_modifiedByDevice;
@property(retain, nonatomic) NSMutableArray *conflictLoserEtags; // @synthesize conflictLoserEtags=_conflictLoserEtags;
@property(retain, nonatomic) CKDPIdentifier *modifiedBy; // @synthesize modifiedBy=_modifiedBy;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
@property(retain, nonatomic) NSMutableArray *fields; // @synthesize fields=_fields;
@property(retain, nonatomic) CKDPDateStatistics *timeStatistics; // @synthesize timeStatistics=_timeStatistics;
@property(retain, nonatomic) CKDPIdentifier *createdBy; // @synthesize createdBy=_createdBy;
@property(retain, nonatomic) CKDPRecordType *type; // @synthesize type=_type;
@property(retain, nonatomic) CKDPRecordIdentifier *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasProtectionInfoTag;
@property(readonly, nonatomic) _Bool hasProtectionInfo;
- (id)pluginFieldsAtIndex:(unsigned long long)arg1;
- (unsigned long long)pluginFieldsCount;
- (void)addPluginFields:(id)arg1;
- (void)clearPluginFields;
@property(readonly, nonatomic) _Bool hasModifiedByDevice;
- (id)conflictLoserEtagsAtIndex:(unsigned long long)arg1;
- (unsigned long long)conflictLoserEtagsCount;
- (void)addConflictLoserEtags:(id)arg1;
- (void)clearConflictLoserEtags;
@property(readonly, nonatomic) _Bool hasModifiedBy;
@property(readonly, nonatomic) _Bool hasShareId;
- (id)fieldsAtIndex:(unsigned long long)arg1;
- (unsigned long long)fieldsCount;
- (void)addFields:(id)arg1;
- (void)clearFields;
@property(readonly, nonatomic) _Bool hasTimeStatistics;
@property(readonly, nonatomic) _Bool hasCreatedBy;
@property(readonly, nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasRecordIdentifier;
@property(readonly, nonatomic) _Bool hasEtag;
- (id)dataRepresentation;
- (id)fieldForKey:(id)arg1;
- (id)fieldData;
- (void)_inflateFieldsFromData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordDeleteRequest : PBRequest <NSCopying>
{
    NSString *_etag;
    CKDPRecordIdentifier *_recordIdentifier;
}

+ (id)options;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPRecordIdentifier *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasRecordIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordDeleteResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

@interface CKDPRecordField : PBCodable <NSCopying>
{
    CKDPRecordFieldIdentifier *_identifier;
    CKDPRecordFieldValue *_value;
}

+ (id)emptyFieldWithKey:(id)arg1;
@property(retain, nonatomic) CKDPRecordFieldValue *value; // @synthesize value=_value;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasValue;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

@interface CKDPRecordFieldDerivedField : PBCodable <NSCopying>
{
    CKDPRecordFieldIdentifier *_aggregatedField;
    NSMutableArray *_aggregatedTypes;
    int _aggregationFunction;
    NSMutableArray *_filters;
    CKDPRecordFieldIdentifier *_groupByField;
    CKDPRecordFieldIdentifier *_identifier;
    NSMutableArray *_targetTypes;
    struct {
        unsigned int aggregationFunction:1;
    } _has;
}

@property(nonatomic) int aggregationFunction; // @synthesize aggregationFunction=_aggregationFunction;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *groupByField; // @synthesize groupByField=_groupByField;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *aggregatedField; // @synthesize aggregatedField=_aggregatedField;
@property(retain, nonatomic) NSMutableArray *filters; // @synthesize filters=_filters;
@property(retain, nonatomic) NSMutableArray *targetTypes; // @synthesize targetTypes=_targetTypes;
@property(retain, nonatomic) NSMutableArray *aggregatedTypes; // @synthesize aggregatedTypes=_aggregatedTypes;
@property(retain, nonatomic) CKDPRecordFieldIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasAggregationFunction;
@property(readonly, nonatomic) _Bool hasGroupByField;
@property(readonly, nonatomic) _Bool hasAggregatedField;
- (id)filtersAtIndex:(unsigned long long)arg1;
- (unsigned long long)filtersCount;
- (void)addFilters:(id)arg1;
- (void)clearFilters;
- (id)targetTypesAtIndex:(unsigned long long)arg1;
- (unsigned long long)targetTypesCount;
- (void)addTargetTypes:(id)arg1;
- (void)clearTargetTypes;
- (id)aggregatedTypesAtIndex:(unsigned long long)arg1;
- (unsigned long long)aggregatedTypesCount;
- (void)addAggregatedTypes:(id)arg1;
- (void)clearAggregatedTypes;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

@interface CKDPRecordFieldIdentifier : PBCodable <NSCopying>
{
    NSString *_name;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasName;

@end

@interface CKDPRecordFieldValue : PBCodable <NSCopying>
{
    double _doubleValue;
    long long _signedValue;
    CKDPAsset *_assetValue;
    NSData *_bytesValue;
    CKDPDate *_dateValue;
    NSMutableArray *_listValues;
    CKDPLocationCoordinate *_locationValue;
    CKDPPackage *_packageValue;
    CKDPRecordReference *_referenceValue;
    NSString *_stringValue;
    int _type;
    struct {
        unsigned int doubleValue:1;
        unsigned int signedValue:1;
        unsigned int type:1;
    } _has;
}

@property(retain, nonatomic) CKDPPackage *packageValue; // @synthesize packageValue=_packageValue;
@property(retain, nonatomic) NSMutableArray *listValues; // @synthesize listValues=_listValues;
@property(retain, nonatomic) CKDPAsset *assetValue; // @synthesize assetValue=_assetValue;
@property(retain, nonatomic) CKDPRecordReference *referenceValue; // @synthesize referenceValue=_referenceValue;
@property(retain, nonatomic) CKDPLocationCoordinate *locationValue; // @synthesize locationValue=_locationValue;
@property(retain, nonatomic) NSString *stringValue; // @synthesize stringValue=_stringValue;
@property(retain, nonatomic) CKDPDate *dateValue; // @synthesize dateValue=_dateValue;
@property(nonatomic) double doubleValue; // @synthesize doubleValue=_doubleValue;
@property(nonatomic) long long signedValue; // @synthesize signedValue=_signedValue;
@property(retain, nonatomic) NSData *bytesValue; // @synthesize bytesValue=_bytesValue;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasPackageValue;
- (id)listValueAtIndex:(unsigned long long)arg1;
- (unsigned long long)listValuesCount;
- (void)addListValue:(id)arg1;
- (void)clearListValues;
@property(readonly, nonatomic) _Bool hasAssetValue;
@property(readonly, nonatomic) _Bool hasReferenceValue;
@property(readonly, nonatomic) _Bool hasLocationValue;
@property(readonly, nonatomic) _Bool hasStringValue;
@property(readonly, nonatomic) _Bool hasDateValue;
@property(nonatomic) _Bool hasDoubleValue;
@property(nonatomic) _Bool hasSignedValue;
@property(readonly, nonatomic) _Bool hasBytesValue;
@property(nonatomic) _Bool hasType;
- (id)_prettyDictionaryRepresentation;
- (id)_prettyRepresentationFromObject:(id)arg1;
- (id)_descriptionForType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordIdentifier : PBCodable <NSCopying>
{
    CKDPIdentifier *_value;
    CKDPRecordZoneIdentifier *_zoneIdentifier;
}

@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
@property(retain, nonatomic) CKDPIdentifier *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;
@property(readonly, nonatomic) _Bool hasValue;

@end

@interface CKDPRecordReference : PBCodable <NSCopying>
{
    CKDPRecordIdentifier *_recordIdentifier;
    int _type;
    CDStruct_f953fb60 _has;
}

@property(retain, nonatomic) CKDPRecordIdentifier *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRecordIdentifier;
@property(nonatomic) _Bool hasType;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveChangesRequest : PBRequest <NSCopying>
{
    unsigned int _maxChanges;
    CKDPRequestedFields *_requestedFields;
    NSData *_syncContinuationToken;
    CKDPRecordZoneIdentifier *_zoneIdentifier;
    CDStruct_f8809e99 _has;
}

+ (id)options;
@property(nonatomic) unsigned int maxChanges; // @synthesize maxChanges=_maxChanges;
@property(retain, nonatomic) CKDPRequestedFields *requestedFields; // @synthesize requestedFields=_requestedFields;
@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
@property(retain, nonatomic) NSData *syncContinuationToken; // @synthesize syncContinuationToken=_syncContinuationToken;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMaxChanges;
@property(readonly, nonatomic) _Bool hasRequestedFields;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;
@property(readonly, nonatomic) _Bool hasSyncContinuationToken;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveChangesResponse : PBCodable <NSCopying>
{
    NSMutableArray *_changedRecords;
    NSData *_clientChangeToken;
    int _status;
    NSData *_syncContinuationToken;
    CDStruct_47fe53f2 _has;
}

@property(nonatomic) int status; // @synthesize status=_status;
@property(retain, nonatomic) NSData *clientChangeToken; // @synthesize clientChangeToken=_clientChangeToken;
@property(retain, nonatomic) NSData *syncContinuationToken; // @synthesize syncContinuationToken=_syncContinuationToken;
@property(retain, nonatomic) NSMutableArray *changedRecords; // @synthesize changedRecords=_changedRecords;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasStatus;
@property(readonly, nonatomic) _Bool hasClientChangeToken;
@property(readonly, nonatomic) _Bool hasSyncContinuationToken;
- (id)changedRecordAtIndex:(unsigned long long)arg1;
- (unsigned long long)changedRecordsCount;
- (void)addChangedRecord:(id)arg1;
- (void)clearChangedRecords;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveChangesResponseRecordChange : PBCodable <NSCopying>
{
    NSString *_etag;
    CKDPRecord *_record;
    CKDPRecordIdentifier *_recordIdentifier;
    CKDPRecordType *_recordType;
    int _type;
    CDStruct_f953fb60 _has;
}

@property(retain, nonatomic) CKDPRecord *record; // @synthesize record=_record;
@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) CKDPRecordType *recordType; // @synthesize recordType=_recordType;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPRecordIdentifier *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRecord;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasRecordType;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasRecordIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveRequest : PBRequest <NSCopying>
{
    NSString *_clientVersionETag;
    CKDPRecordRetrieveRequestRetrieveAssetURL *_getAssetURL;
    CKDPRecordIdentifier *_recordIdentifier;
    CKDPRequestedFields *_requestedFields;
    NSString *_versionETag;
}

+ (id)options;
@property(retain, nonatomic) CKDPRecordRetrieveRequestRetrieveAssetURL *getAssetURL; // @synthesize getAssetURL=_getAssetURL;
@property(retain, nonatomic) NSString *clientVersionETag; // @synthesize clientVersionETag=_clientVersionETag;
@property(retain, nonatomic) NSString *versionETag; // @synthesize versionETag=_versionETag;
@property(retain, nonatomic) CKDPRequestedFields *requestedFields; // @synthesize requestedFields=_requestedFields;
@property(retain, nonatomic) CKDPRecordIdentifier *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasGetAssetURL;
@property(readonly, nonatomic) _Bool hasClientVersionETag;
@property(readonly, nonatomic) _Bool hasVersionETag;
@property(readonly, nonatomic) _Bool hasRequestedFields;
@property(readonly, nonatomic) _Bool hasRecordIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveRequestRetrieveAssetURL : PBCodable <NSCopying>
{
    long long _requestedTTL;
    CKDPRequestedFields *_assetFields;
    int _type;
    struct {
        unsigned int requestedTTL:1;
        unsigned int type:1;
    } _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) long long requestedTTL; // @synthesize requestedTTL=_requestedTTL;
@property(retain, nonatomic) CKDPRequestedFields *assetFields; // @synthesize assetFields=_assetFields;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
@property(nonatomic) _Bool hasRequestedTTL;
@property(readonly, nonatomic) _Bool hasAssetFields;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveResponse : PBCodable <NSCopying>
{
    CKDPRecord *_record;
    _Bool _clientVersionETagMatch;
    struct {
        unsigned int clientVersionETagMatch:1;
    } _has;
}

@property(nonatomic) _Bool clientVersionETagMatch; // @synthesize clientVersionETagMatch=_clientVersionETagMatch;
@property(retain, nonatomic) CKDPRecord *record; // @synthesize record=_record;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasClientVersionETagMatch;
@property(readonly, nonatomic) _Bool hasRecord;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveVersionsRequest : PBRequest <NSCopying>
{
    NSString *_minimumVersionEtag;
    CKDPRecordIdentifier *_recordIdentifier;
    CKDPRequestedFields *_requestedFields;
}

+ (id)options;
@property(retain, nonatomic) NSString *minimumVersionEtag; // @synthesize minimumVersionEtag=_minimumVersionEtag;
@property(retain, nonatomic) CKDPRequestedFields *requestedFields; // @synthesize requestedFields=_requestedFields;
@property(retain, nonatomic) CKDPRecordIdentifier *recordIdentifier; // @synthesize recordIdentifier=_recordIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasMinimumVersionEtag;
@property(readonly, nonatomic) _Bool hasRequestedFields;
@property(readonly, nonatomic) _Bool hasRecordIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordRetrieveVersionsResponse : PBCodable <NSCopying>
{
    NSMutableArray *_recordVersions;
    _Bool _isDeleted;
    struct {
        unsigned int isDeleted:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *recordVersions; // @synthesize recordVersions=_recordVersions;
@property(nonatomic) _Bool isDeleted; // @synthesize isDeleted=_isDeleted;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)recordVersionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)recordVersionsCount;
- (void)addRecordVersions:(id)arg1;
- (void)clearRecordVersions;
@property(nonatomic) _Bool hasIsDeleted;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordSaveRequest : PBRequest <NSCopying>
{
    CKDPRecordSaveRequestConflictLoserUpdate *_conflictLoserUpdate;
    NSMutableArray *_conflictLosersToResolves;
    NSString *_etag;
    NSMutableArray *_fieldsToDeleteIfExistOnMerges;
    CKDPRecord *_record;
    NSString *_recordProtectionInfoTag;
    int _saveSemantics;
    NSString *_zoneProtectionInfoTag;
    _Bool _merge;
    struct {
        unsigned int saveSemantics:1;
        unsigned int merge:1;
    } _has;
}

+ (id)options;
@property(retain, nonatomic) NSMutableArray *conflictLosersToResolves; // @synthesize conflictLosersToResolves=_conflictLosersToResolves;
@property(retain, nonatomic) NSString *recordProtectionInfoTag; // @synthesize recordProtectionInfoTag=_recordProtectionInfoTag;
@property(retain, nonatomic) NSString *zoneProtectionInfoTag; // @synthesize zoneProtectionInfoTag=_zoneProtectionInfoTag;
@property(retain, nonatomic) CKDPRecordSaveRequestConflictLoserUpdate *conflictLoserUpdate; // @synthesize conflictLoserUpdate=_conflictLoserUpdate;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) NSMutableArray *fieldsToDeleteIfExistOnMerges; // @synthesize fieldsToDeleteIfExistOnMerges=_fieldsToDeleteIfExistOnMerges;
@property(nonatomic) _Bool merge; // @synthesize merge=_merge;
@property(retain, nonatomic) CKDPRecord *record; // @synthesize record=_record;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)conflictLosersToResolveAtIndex:(unsigned long long)arg1;
- (unsigned long long)conflictLosersToResolvesCount;
- (void)addConflictLosersToResolve:(id)arg1;
- (void)clearConflictLosersToResolves;
@property(readonly, nonatomic) _Bool hasRecordProtectionInfoTag;
@property(readonly, nonatomic) _Bool hasZoneProtectionInfoTag;
@property(nonatomic) _Bool hasSaveSemantics;
@property(nonatomic) int saveSemantics; // @synthesize saveSemantics=_saveSemantics;
@property(readonly, nonatomic) _Bool hasConflictLoserUpdate;
@property(readonly, nonatomic) _Bool hasEtag;
- (id)fieldsToDeleteIfExistOnMergeAtIndex:(unsigned long long)arg1;
- (unsigned long long)fieldsToDeleteIfExistOnMergesCount;
- (void)addFieldsToDeleteIfExistOnMerge:(id)arg1;
- (void)clearFieldsToDeleteIfExistOnMerges;
@property(nonatomic) _Bool hasMerge;
@property(readonly, nonatomic) _Bool hasRecord;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordSaveRequestConflictLoserUpdate : PBCodable <NSCopying>
{
    NSMutableArray *_conflictLoserEtags;
}

@property(retain, nonatomic) NSMutableArray *conflictLoserEtags; // @synthesize conflictLoserEtags=_conflictLoserEtags;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)conflictLoserEtagsAtIndex:(unsigned long long)arg1;
- (unsigned long long)conflictLoserEtagsCount;
- (void)addConflictLoserEtags:(id)arg1;
- (void)clearConflictLoserEtags;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordSaveResponse : PBCodable <NSCopying>
{
    NSString *_etag;
    CKDPRecord *_serverFields;
    CKDPDateStatistics *_timeStatistics;
}

@property(retain, nonatomic) CKDPRecord *serverFields; // @synthesize serverFields=_serverFields;
@property(retain, nonatomic) CKDPDateStatistics *timeStatistics; // @synthesize timeStatistics=_timeStatistics;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasServerFields;
@property(readonly, nonatomic) _Bool hasTimeStatistics;
@property(readonly, nonatomic) _Bool hasEtag;

@end

@interface CKDPRecordType : PBCodable <NSCopying>
{
    NSString *_name;
}

@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasName;

@end

__attribute__((visibility("hidden")))
@interface CKDPRecordZoneIdentifier : PBCodable <NSCopying>
{
    CKDPIdentifier *_ownerIdentifier;
    CKDPIdentifier *_value;
}

@property(retain, nonatomic) CKDPIdentifier *ownerIdentifier; // @synthesize ownerIdentifier=_ownerIdentifier;
@property(retain, nonatomic) CKDPIdentifier *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasOwnerIdentifier;
@property(readonly, nonatomic) _Bool hasValue;

@end

@interface CKDPRequestOperation : PBCodable <NSCopying>
{
    CKDPAssetUploadTokenRetrieveRequest *_assetUploadTokenRetrieveRequest;
    CKDPDeleteCommentRequest *_deleteCommentRequest;
    CKDPDeleteContainerRequest *_deleteContainerRequest;
    CKDPGetCommentRequest *_getCommentRequest;
    CKDPGetCommentsRequest *_getCommentsRequest;
    CKDPGetLikesRequest *_getLikesRequest;
    CKDPRequestOperationHeader *_header;
    CKDPInvitationAcceptRequest *_invitationAcceptRequest;
    CKDPInvitationDeclineRequest *_invitationDeclineRequest;
    CKDPInvitationQueryRequest *_invitationQueryRequest;
    CKDPLikeRequest *_likeRequest;
    CKDPMescalCertificateRequest *_mescalCertificateRequest;
    CKDPMescalSessionInfoRequest *_mescalSessionInfoRequest;
    CKDPMescalSignatureRequest *_mescalSignatureRequest;
    CKDPNotificationMarkReadRequest *_notificationMarkReadRequest;
    CKDPNotificationSyncRequest *_notificationSyncRequest;
    CKDPPkiRegisterRequest *_pkiRegisterRequest;
    CKDPPkiRetrieveRequest *_pkiRetrieveRequest;
    CKDPPostCommentRequest *_postCommentRequest;
    CKDPPromoteContainerSchemaRequest *_promoteContainerSchemaRequest;
    CKDPPulseRequest *_pulseRequest;
    CKDPQueryRetrieveRequest *_queryRetrieveRequest;
    CKDPRecordDeleteRequest *_recordDeleteRequest;
    CKDPRecordRetrieveChangesRequest *_recordRetrieveChangesRequest;
    CKDPRecordRetrieveRequest *_recordRetrieveRequest;
    CKDPRecordRetrieveVersionsRequest *_recordRetrieveVersionsRequest;
    CKDPRecordSaveRequest *_recordSaveRequest;
    CKDPOperation *_request;
    CKDPResetContainerRequest *_resetContainerRequest;
    CKDPSetBadgeCountRequest *_setBadgeCountRequest;
    CKDPShareCreateRequest *_shareCreateRequest;
    CKDPShareDeleteRequest *_shareDeleteRequest;
    CKDPShareParticipantCreateRequest *_shareParticipantCreateRequest;
    CKDPShareParticipantDeleteRequest *_shareParticipantDeleteRequest;
    CKDPShareParticipantUpdateRequest *_shareParticipantUpdateRequest;
    CKDPShareRetrieveRequest *_shareRetrieveRequest;
    CKDPShareSetKeyRequest *_shareSetKeyRequest;
    CKDPSubscriptionCreateRequest *_subscriptionCreateRequest;
    CKDPSubscriptionDeleteRequest *_subscriptionDeleteRequest;
    CKDPSubscriptionRetrieveRequest *_subscriptionRetrieveRequest;
    CKDPTokenRegistrationRequest *_tokenRegistrationRequest;
    CKDPTokenUnregistrationRequest *_tokenUnregistrationRequest;
    CKDPUnlikeRequest *_unlikeRequest;
    CKDPUserAvailableQuotaRequest *_userAvailableQuotaRequest;
    CKDPUserPrivacySettingsBatchLookupRequest *_userPrivacySettingsBatchLookupRequest;
    CKDPUserPrivacySettingsResetRequest *_userPrivacySettingsResetRequest;
    CKDPUserPrivacySettingsRetrieveRequest *_userPrivacySettingsRetrieveRequest;
    CKDPUserPrivacySettingsUpdateRequest *_userPrivacySettingsUpdateRequest;
    CKDPUserQueryRequest *_userQueryRequest;
    CKDPUserRetrieveRequest *_userRetrieveRequest;
    CKDPZoneDeleteRequest *_zoneDeleteRequest;
    CKDPZoneRetrieveRequest *_zoneRetrieveRequest;
    CKDPZoneSaveRequest *_zoneSaveRequest;
}

@property(retain, nonatomic) CKDPOperation *request; // @synthesize request=_request;
@property(retain, nonatomic) CKDPRequestOperationHeader *header; // @synthesize header=_header;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasRequest;
@property(readonly, nonatomic) _Bool hasHeader;
@property(retain, nonatomic) CKDPZoneSaveRequest *zoneSaveRequest;
@property(readonly, nonatomic) _Bool hasZoneSaveRequest;
@property(retain, nonatomic) CKDPZoneRetrieveRequest *zoneRetrieveRequest;
@property(readonly, nonatomic) _Bool hasZoneRetrieveRequest;
@property(retain, nonatomic) CKDPZoneDeleteRequest *zoneDeleteRequest;
@property(readonly, nonatomic) _Bool hasZoneDeleteRequest;
@property(retain, nonatomic) CKDPRecordSaveRequest *recordSaveRequest;
@property(readonly, nonatomic) _Bool hasRecordSaveRequest;
@property(retain, nonatomic) CKDPRecordRetrieveRequest *recordRetrieveRequest;
@property(readonly, nonatomic) _Bool hasRecordRetrieveRequest;
@property(retain, nonatomic) CKDPRecordRetrieveVersionsRequest *recordRetrieveVersionsRequest;
@property(readonly, nonatomic) _Bool hasRecordRetrieveVersionsRequest;
@property(retain, nonatomic) CKDPRecordRetrieveChangesRequest *recordRetrieveChangesRequest;
@property(readonly, nonatomic) _Bool hasRecordRetrieveChangesRequest;
@property(retain, nonatomic) CKDPRecordDeleteRequest *recordDeleteRequest;
@property(readonly, nonatomic) _Bool hasRecordDeleteRequest;
@property(retain, nonatomic) CKDPUserAvailableQuotaRequest *userAvailableQuotaRequest;
@property(readonly, nonatomic) _Bool hasUserAvailableQuotaRequest;
@property(retain, nonatomic) CKDPUserRetrieveRequest *userRetrieveRequest;
@property(readonly, nonatomic) _Bool hasUserRetrieveRequest;
@property(retain, nonatomic) CKDPQueryRetrieveRequest *queryRetrieveRequest;
@property(readonly, nonatomic) _Bool hasQueryRetrieveRequest;
@property(retain, nonatomic) CKDPAssetUploadTokenRetrieveRequest *assetUploadTokenRetrieveRequest;
@property(readonly, nonatomic) _Bool hasAssetUploadTokenRetrieveRequest;
@property(retain, nonatomic) CKDPDeleteContainerRequest *deleteContainerRequest;
@property(readonly, nonatomic) _Bool hasDeleteContainerRequest;
@property(retain, nonatomic) CKDPResetContainerRequest *resetContainerRequest;
@property(readonly, nonatomic) _Bool hasResetContainerRequest;
@property(retain, nonatomic) CKDPPromoteContainerSchemaRequest *promoteContainerSchemaRequest;
@property(readonly, nonatomic) _Bool hasPromoteContainerSchemaRequest;
@property(retain, nonatomic) CKDPPostCommentRequest *postCommentRequest;
@property(readonly, nonatomic) _Bool hasPostCommentRequest;
@property(retain, nonatomic) CKDPGetCommentsRequest *getCommentsRequest;
@property(readonly, nonatomic) _Bool hasGetCommentsRequest;
@property(retain, nonatomic) CKDPGetCommentRequest *getCommentRequest;
@property(readonly, nonatomic) _Bool hasGetCommentRequest;
@property(retain, nonatomic) CKDPDeleteCommentRequest *deleteCommentRequest;
@property(readonly, nonatomic) _Bool hasDeleteCommentRequest;
@property(retain, nonatomic) CKDPLikeRequest *likeRequest;
@property(readonly, nonatomic) _Bool hasLikeRequest;
@property(retain, nonatomic) CKDPUnlikeRequest *unlikeRequest;
@property(readonly, nonatomic) _Bool hasUnlikeRequest;
@property(retain, nonatomic) CKDPGetLikesRequest *getLikesRequest;
@property(readonly, nonatomic) _Bool hasGetLikesRequest;
@property(retain, nonatomic) CKDPPulseRequest *pulseRequest;
@property(readonly, nonatomic) _Bool hasPulseRequest;
@property(retain, nonatomic) CKDPShareCreateRequest *shareCreateRequest;
@property(readonly, nonatomic) _Bool hasShareCreateRequest;
@property(retain, nonatomic) CKDPShareRetrieveRequest *shareRetrieveRequest;
@property(readonly, nonatomic) _Bool hasShareRetrieveRequest;
@property(retain, nonatomic) CKDPShareDeleteRequest *shareDeleteRequest;
@property(readonly, nonatomic) _Bool hasShareDeleteRequest;
@property(retain, nonatomic) CKDPShareSetKeyRequest *shareSetKeyRequest;
@property(readonly, nonatomic) _Bool hasShareSetKeyRequest;
@property(retain, nonatomic) CKDPShareParticipantCreateRequest *shareParticipantCreateRequest;
@property(readonly, nonatomic) _Bool hasShareParticipantCreateRequest;
@property(retain, nonatomic) CKDPShareParticipantUpdateRequest *shareParticipantUpdateRequest;
@property(readonly, nonatomic) _Bool hasShareParticipantUpdateRequest;
@property(retain, nonatomic) CKDPShareParticipantDeleteRequest *shareParticipantDeleteRequest;
@property(readonly, nonatomic) _Bool hasShareParticipantDeleteRequest;
@property(retain, nonatomic) CKDPInvitationAcceptRequest *invitationAcceptRequest;
@property(readonly, nonatomic) _Bool hasInvitationAcceptRequest;
@property(retain, nonatomic) CKDPInvitationDeclineRequest *invitationDeclineRequest;
@property(readonly, nonatomic) _Bool hasInvitationDeclineRequest;
@property(retain, nonatomic) CKDPInvitationQueryRequest *invitationQueryRequest;
@property(readonly, nonatomic) _Bool hasInvitationQueryRequest;
@property(retain, nonatomic) CKDPSubscriptionCreateRequest *subscriptionCreateRequest;
@property(readonly, nonatomic) _Bool hasSubscriptionCreateRequest;
@property(retain, nonatomic) CKDPSubscriptionRetrieveRequest *subscriptionRetrieveRequest;
@property(readonly, nonatomic) _Bool hasSubscriptionRetrieveRequest;
@property(retain, nonatomic) CKDPSubscriptionDeleteRequest *subscriptionDeleteRequest;
@property(readonly, nonatomic) _Bool hasSubscriptionDeleteRequest;
@property(retain, nonatomic) CKDPUserQueryRequest *userQueryRequest;
@property(readonly, nonatomic) _Bool hasUserQueryRequest;
@property(retain, nonatomic) CKDPUserPrivacySettingsUpdateRequest *userPrivacySettingsUpdateRequest;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsUpdateRequest;
@property(retain, nonatomic) CKDPUserPrivacySettingsResetRequest *userPrivacySettingsResetRequest;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsResetRequest;
@property(retain, nonatomic) CKDPUserPrivacySettingsBatchLookupRequest *userPrivacySettingsBatchLookupRequest;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsBatchLookupRequest;
@property(retain, nonatomic) CKDPUserPrivacySettingsRetrieveRequest *userPrivacySettingsRetrieveRequest;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsRetrieveRequest;
@property(retain, nonatomic) CKDPTokenRegistrationRequest *tokenRegistrationRequest;
@property(readonly, nonatomic) _Bool hasTokenRegistrationRequest;
@property(retain, nonatomic) CKDPTokenUnregistrationRequest *tokenUnregistrationRequest;
@property(readonly, nonatomic) _Bool hasTokenUnregistrationRequest;
@property(retain, nonatomic) CKDPSetBadgeCountRequest *setBadgeCountRequest;
@property(readonly, nonatomic) _Bool hasSetBadgeCountRequest;
@property(retain, nonatomic) CKDPNotificationSyncRequest *notificationSyncRequest;
@property(readonly, nonatomic) _Bool hasNotificationSyncRequest;
@property(retain, nonatomic) CKDPNotificationMarkReadRequest *notificationMarkReadRequest;
@property(readonly, nonatomic) _Bool hasNotificationMarkReadRequest;
@property(retain, nonatomic) CKDPPkiRegisterRequest *pkiRegisterRequest;
@property(readonly, nonatomic) _Bool hasPkiRegisterRequest;
@property(retain, nonatomic) CKDPPkiRetrieveRequest *pkiRetrieveRequest;
@property(readonly, nonatomic) _Bool hasPkiRetrieveRequest;
@property(retain, nonatomic) CKDPMescalCertificateRequest *mescalCertificateRequest;
@property(readonly, nonatomic) _Bool hasMescalCertificateRequest;
@property(retain, nonatomic) CKDPMescalSessionInfoRequest *mescalSessionInfoRequest;
@property(readonly, nonatomic) _Bool hasMescalSessionInfoRequest;
@property(retain, nonatomic) CKDPMescalSignatureRequest *mescalSignatureRequest;
@property(readonly, nonatomic) _Bool hasMescalSignatureRequest;

@end

@interface CKDPRequestOperationHeader : PBCodable <NSCopying>
{
    unsigned long long _applicationConfigVersion;
    unsigned long long _deviceFlowControlBudget;
    unsigned long long _deviceFlowControlBudgetCap;
    unsigned long long _deviceProtocolVersion;
    unsigned long long _globalConfigVersion;
    NSString *_applicationBundle;
    NSString *_applicationContainer;
    int _applicationContainerEnvironment;
    NSString *_applicationVersion;
    NSData *_clientChangeToken;
    NSString *_deviceAssignedName;
    NSString *_deviceFlowControlKey;
    float _deviceFlowControlRegeneration;
    NSString *_deviceHardwareID;
    NSString *_deviceHardwareVersion;
    CKDPIdentifier *_deviceIdentifier;
    NSString *_deviceLibraryName;
    NSString *_deviceLibraryVersion;
    NSString *_deviceSoftwareVersion;
    int _isolationLevel;
    CKDPLocale *_locale;
    NSString *_mmcsProtocolVersion;
    int _targetDatabase;
    NSString *_userIDContainerID;
    NSString *_userToken;
    struct {
        unsigned int applicationConfigVersion:1;
        unsigned int deviceFlowControlBudget:1;
        unsigned int deviceFlowControlBudgetCap:1;
        unsigned int deviceProtocolVersion:1;
        unsigned int globalConfigVersion:1;
        unsigned int applicationContainerEnvironment:1;
        unsigned int deviceFlowControlRegeneration:1;
        unsigned int isolationLevel:1;
        unsigned int targetDatabase:1;
    } _has;
}

@property(retain, nonatomic) NSString *userIDContainerID; // @synthesize userIDContainerID=_userIDContainerID;
@property(retain, nonatomic) NSString *deviceHardwareID; // @synthesize deviceHardwareID=_deviceHardwareID;
@property(retain, nonatomic) NSString *deviceAssignedName; // @synthesize deviceAssignedName=_deviceAssignedName;
@property(retain, nonatomic) NSData *clientChangeToken; // @synthesize clientChangeToken=_clientChangeToken;
@property(retain, nonatomic) NSString *mmcsProtocolVersion; // @synthesize mmcsProtocolVersion=_mmcsProtocolVersion;
@property(retain, nonatomic) CKDPLocale *locale; // @synthesize locale=_locale;
@property(nonatomic) unsigned long long deviceProtocolVersion; // @synthesize deviceProtocolVersion=_deviceProtocolVersion;
@property(nonatomic) float deviceFlowControlRegeneration; // @synthesize deviceFlowControlRegeneration=_deviceFlowControlRegeneration;
@property(nonatomic) unsigned long long deviceFlowControlBudgetCap; // @synthesize deviceFlowControlBudgetCap=_deviceFlowControlBudgetCap;
@property(nonatomic) unsigned long long deviceFlowControlBudget; // @synthesize deviceFlowControlBudget=_deviceFlowControlBudget;
@property(retain, nonatomic) NSString *deviceFlowControlKey; // @synthesize deviceFlowControlKey=_deviceFlowControlKey;
@property(retain, nonatomic) NSString *deviceLibraryVersion; // @synthesize deviceLibraryVersion=_deviceLibraryVersion;
@property(retain, nonatomic) NSString *deviceLibraryName; // @synthesize deviceLibraryName=_deviceLibraryName;
@property(retain, nonatomic) NSString *deviceHardwareVersion; // @synthesize deviceHardwareVersion=_deviceHardwareVersion;
@property(retain, nonatomic) NSString *deviceSoftwareVersion; // @synthesize deviceSoftwareVersion=_deviceSoftwareVersion;
@property(retain, nonatomic) CKDPIdentifier *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(nonatomic) unsigned long long globalConfigVersion; // @synthesize globalConfigVersion=_globalConfigVersion;
@property(nonatomic) unsigned long long applicationConfigVersion; // @synthesize applicationConfigVersion=_applicationConfigVersion;
@property(retain, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(retain, nonatomic) NSString *applicationBundle; // @synthesize applicationBundle=_applicationBundle;
@property(retain, nonatomic) NSString *applicationContainer; // @synthesize applicationContainer=_applicationContainer;
@property(retain, nonatomic) NSString *userToken; // @synthesize userToken=_userToken;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasIsolationLevel;
@property(nonatomic) int isolationLevel; // @synthesize isolationLevel=_isolationLevel;
@property(readonly, nonatomic) _Bool hasUserIDContainerID;
@property(nonatomic) _Bool hasTargetDatabase;
@property(nonatomic) int targetDatabase; // @synthesize targetDatabase=_targetDatabase;
@property(readonly, nonatomic) _Bool hasDeviceHardwareID;
@property(readonly, nonatomic) _Bool hasDeviceAssignedName;
@property(readonly, nonatomic) _Bool hasClientChangeToken;
@property(nonatomic) _Bool hasApplicationContainerEnvironment;
@property(nonatomic) int applicationContainerEnvironment; // @synthesize applicationContainerEnvironment=_applicationContainerEnvironment;
@property(readonly, nonatomic) _Bool hasMmcsProtocolVersion;
@property(readonly, nonatomic) _Bool hasLocale;
@property(nonatomic) _Bool hasDeviceProtocolVersion;
@property(nonatomic) _Bool hasDeviceFlowControlRegeneration;
@property(nonatomic) _Bool hasDeviceFlowControlBudgetCap;
@property(nonatomic) _Bool hasDeviceFlowControlBudget;
@property(readonly, nonatomic) _Bool hasDeviceFlowControlKey;
@property(readonly, nonatomic) _Bool hasDeviceLibraryVersion;
@property(readonly, nonatomic) _Bool hasDeviceLibraryName;
@property(readonly, nonatomic) _Bool hasDeviceHardwareVersion;
@property(readonly, nonatomic) _Bool hasDeviceSoftwareVersion;
@property(readonly, nonatomic) _Bool hasDeviceIdentifier;
@property(nonatomic) _Bool hasGlobalConfigVersion;
@property(nonatomic) _Bool hasApplicationConfigVersion;
@property(readonly, nonatomic) _Bool hasApplicationVersion;
@property(readonly, nonatomic) _Bool hasApplicationBundle;
@property(readonly, nonatomic) _Bool hasApplicationContainer;
@property(readonly, nonatomic) _Bool hasUserToken;
- (id)_prettyDictionaryRepresentation;

@end

__attribute__((visibility("hidden")))
@interface CKDPRequestedFields : PBCodable <NSCopying>
{
    NSMutableArray *_fields;
}

@property(retain, nonatomic) NSMutableArray *fields; // @synthesize fields=_fields;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)fieldsAtIndex:(unsigned long long)arg1;
- (unsigned long long)fieldsCount;
- (void)addFields:(id)arg1;
- (void)clearFields;

@end

__attribute__((visibility("hidden")))
@interface CKDPResetContainerRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPResetContainerResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPResource : PBCodable <NSCopying>
{
    long long _customClientResourceType;
    CKDPRecordIdentifier *_recordId;
    int _targetDatabase;
    CKDPRecordZoneIdentifier *_zoneId;
    struct {
        unsigned int customClientResourceType:1;
        unsigned int targetDatabase:1;
    } _has;
}

@property(nonatomic) long long customClientResourceType; // @synthesize customClientResourceType=_customClientResourceType;
@property(retain, nonatomic) CKDPRecordIdentifier *recordId; // @synthesize recordId=_recordId;
@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneId; // @synthesize zoneId=_zoneId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasCustomClientResourceType;
@property(readonly, nonatomic) _Bool hasRecordId;
@property(nonatomic) _Bool hasTargetDatabase;
@property(nonatomic) int targetDatabase; // @synthesize targetDatabase=_targetDatabase;
@property(readonly, nonatomic) _Bool hasZoneId;

@end

@interface CKDPResponseOperation : PBCodable <NSCopying>
{
    CKDPAssetUploadTokenRetrieveResponse *_assetUploadTokenRetrieveResponse;
    CKDPDeleteCommentResponse *_deleteCommentResponse;
    CKDPDeleteContainerResponse *_deleteContainerResponse;
    CKDPGetCommentResponse *_getCommentResponse;
    CKDPGetCommentsResponse *_getCommentsResponse;
    CKDPGetLikesResponse *_getLikesResponse;
    CKDPInvitationAcceptResponse *_invitationAcceptResponse;
    CKDPInvitationDeclineResponse *_invitationDeclineResponse;
    CKDPInvitationQueryResponse *_invitationQueryResponse;
    CKDPLikeResponse *_likeResponse;
    CKDPMescalCertificateResponse *_mescalCertificateResponse;
    CKDPMescalSessionInfoResponse *_mescalSessionInfoResponse;
    CKDPMescalSignatureResponse *_mescalSignatureResponse;
    CKDPNotificationMarkReadResponse *_notificationMarkReadResponse;
    CKDPNotificationSyncResponse *_notificationSyncResponse;
    unsigned int _operationCost;
    CKDPPkiRegisterResponse *_pkiRegisterResponse;
    CKDPPkiRetrieveResponse *_pkiRetrieveResponse;
    CKDPPostCommentResponse *_postCommentResponse;
    CKDPPromoteContainerSchemaResponse *_promoteContainerSchemaResponse;
    CKDPPulseResponse *_pulseResponse;
    CKDPQueryRetrieveResponse *_queryRetrieveResponse;
    CKDPRecordDeleteResponse *_recordDeleteResponse;
    CKDPRecordRetrieveChangesResponse *_recordRetrieveChangesResponse;
    CKDPRecordRetrieveResponse *_recordRetrieveResponse;
    CKDPRecordRetrieveVersionsResponse *_recordRetrieveVersionsResponse;
    CKDPRecordSaveResponse *_recordSaveResponse;
    CKDPResetContainerResponse *_resetContainerResponse;
    CKDPOperation *_response;
    CKDPResponseOperationResult *_result;
    CKDPSetBadgeCountResponse *_setBadgeCountResponse;
    CKDPShareCreateResponse *_shareCreateResponse;
    CKDPShareDeleteResponse *_shareDeleteResponse;
    CKDPShareParticipantCreateResponse *_shareParticipantCreateResponse;
    CKDPShareParticipantDeleteResponse *_shareParticipantDeleteResponse;
    CKDPShareParticipantUpdateResponse *_shareParticipantUpdateResponse;
    CKDPShareRetrieveResponse *_shareRetrieveResponse;
    CKDPShareCreateResponse *_shareSetKeyResponse;
    CKDPSubscriptionCreateResponse *_subscriptionCreateResponse;
    CKDPSubscriptionDeleteResponse *_subscriptionDeleteResponse;
    CKDPSubscriptionRetrieveResponse *_subscriptionRetrieveResponse;
    CKDPTokenRegistrationResponse *_tokenRegistrationResponse;
    CKDPTokenUnregistrationResponse *_tokenUnregistrationResponse;
    CKDPUnlikeResponse *_unlikeResponse;
    CKDPUserAvailableQuotaResponse *_userAvailableQuotaResponse;
    CKDPUserPrivacySettingsBatchLookupResponse *_userPrivacySettingsBatchLookupResponse;
    CKDPUserPrivacySettingsResetResponse *_userPrivacySettingsResetResponse;
    CKDPUserPrivacySettingsRetrieveResponse *_userPrivacySettingsRetrieveResponse;
    CKDPUserPrivacySettingsUpdateResponse *_userPrivacySettingsUpdateResponse;
    CKDPUserQueryResponse *_userQueryResponse;
    CKDPUserRetrieveResponse *_userRetrieveResponse;
    CKDPZoneDeleteResponse *_zoneDeleteResponse;
    CKDPZoneRetrieveResponse *_zoneRetrieveResponse;
    CKDPZoneSaveResponse *_zoneSaveResponse;
    struct {
        unsigned int operationCost:1;
    } _has;
}

@property(retain, nonatomic) CKDPResponseOperationResult *result; // @synthesize result=_result;
@property(retain, nonatomic) CKDPOperation *response; // @synthesize response=_response;
@property(nonatomic) unsigned int operationCost; // @synthesize operationCost=_operationCost;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasResult;
@property(readonly, nonatomic) _Bool hasResponse;
@property(nonatomic) _Bool hasOperationCost;
@property(retain, nonatomic) CKDPZoneSaveResponse *zoneSaveResponse;
@property(readonly, nonatomic) _Bool hasZoneSaveResponse;
@property(retain, nonatomic) CKDPZoneRetrieveResponse *zoneRetrieveResponse;
@property(readonly, nonatomic) _Bool hasZoneRetrieveResponse;
@property(retain, nonatomic) CKDPZoneDeleteResponse *zoneDeleteResponse;
@property(readonly, nonatomic) _Bool hasZoneDeleteResponse;
@property(retain, nonatomic) CKDPRecordSaveResponse *recordSaveResponse;
@property(readonly, nonatomic) _Bool hasRecordSaveResponse;
@property(retain, nonatomic) CKDPRecordRetrieveResponse *recordRetrieveResponse;
@property(readonly, nonatomic) _Bool hasRecordRetrieveResponse;
@property(retain, nonatomic) CKDPRecordRetrieveVersionsResponse *recordRetrieveVersionsResponse;
@property(readonly, nonatomic) _Bool hasRecordRetrieveVersionsResponse;
@property(retain, nonatomic) CKDPRecordRetrieveChangesResponse *recordRetrieveChangesResponse;
@property(readonly, nonatomic) _Bool hasRecordRetrieveChangesResponse;
@property(retain, nonatomic) CKDPRecordDeleteResponse *recordDeleteResponse;
@property(readonly, nonatomic) _Bool hasRecordDeleteResponse;
@property(retain, nonatomic) CKDPUserAvailableQuotaResponse *userAvailableQuotaResponse;
@property(readonly, nonatomic) _Bool hasUserAvailableQuotaResponse;
@property(retain, nonatomic) CKDPUserRetrieveResponse *userRetrieveResponse;
@property(readonly, nonatomic) _Bool hasUserRetrieveResponse;
@property(retain, nonatomic) CKDPQueryRetrieveResponse *queryRetrieveResponse;
@property(readonly, nonatomic) _Bool hasQueryRetrieveResponse;
@property(retain, nonatomic) CKDPAssetUploadTokenRetrieveResponse *assetUploadTokenRetrieveResponse;
@property(readonly, nonatomic) _Bool hasAssetUploadTokenRetrieveResponse;
@property(retain, nonatomic) CKDPDeleteContainerResponse *deleteContainerResponse;
@property(readonly, nonatomic) _Bool hasDeleteContainerResponse;
@property(retain, nonatomic) CKDPResetContainerResponse *resetContainerResponse;
@property(readonly, nonatomic) _Bool hasResetContainerResponse;
@property(retain, nonatomic) CKDPPromoteContainerSchemaResponse *promoteContainerSchemaResponse;
@property(readonly, nonatomic) _Bool hasPromoteContainerSchemaResponse;
@property(retain, nonatomic) CKDPPostCommentResponse *postCommentResponse;
@property(readonly, nonatomic) _Bool hasPostCommentResponse;
@property(retain, nonatomic) CKDPGetCommentsResponse *getCommentsResponse;
@property(readonly, nonatomic) _Bool hasGetCommentsResponse;
@property(retain, nonatomic) CKDPGetCommentResponse *getCommentResponse;
@property(readonly, nonatomic) _Bool hasGetCommentResponse;
@property(retain, nonatomic) CKDPDeleteCommentResponse *deleteCommentResponse;
@property(readonly, nonatomic) _Bool hasDeleteCommentResponse;
@property(retain, nonatomic) CKDPLikeResponse *likeResponse;
@property(readonly, nonatomic) _Bool hasLikeResponse;
@property(retain, nonatomic) CKDPUnlikeResponse *unlikeResponse;
@property(readonly, nonatomic) _Bool hasUnlikeResponse;
@property(retain, nonatomic) CKDPGetLikesResponse *getLikesResponse;
@property(readonly, nonatomic) _Bool hasGetLikesResponse;
@property(retain, nonatomic) CKDPPulseResponse *pulseResponse;
@property(readonly, nonatomic) _Bool hasPulseResponse;
@property(retain, nonatomic) CKDPShareCreateResponse *shareCreateResponse;
@property(readonly, nonatomic) _Bool hasShareCreateResponse;
@property(retain, nonatomic) CKDPShareRetrieveResponse *shareRetrieveResponse;
@property(readonly, nonatomic) _Bool hasShareRetrieveResponse;
@property(retain, nonatomic) CKDPShareDeleteResponse *shareDeleteResponse;
@property(readonly, nonatomic) _Bool hasShareDeleteResponse;
@property(retain, nonatomic) CKDPShareCreateResponse *shareSetKeyResponse;
@property(readonly, nonatomic) _Bool hasShareSetKeyResponse;
@property(retain, nonatomic) CKDPShareParticipantCreateResponse *shareParticipantCreateResponse;
@property(readonly, nonatomic) _Bool hasShareParticipantCreateResponse;
@property(retain, nonatomic) CKDPShareParticipantUpdateResponse *shareParticipantUpdateResponse;
@property(readonly, nonatomic) _Bool hasShareParticipantUpdateResponse;
@property(retain, nonatomic) CKDPShareParticipantDeleteResponse *shareParticipantDeleteResponse;
@property(readonly, nonatomic) _Bool hasShareParticipantDeleteResponse;
@property(retain, nonatomic) CKDPInvitationAcceptResponse *invitationAcceptResponse;
@property(readonly, nonatomic) _Bool hasInvitationAcceptResponse;
@property(retain, nonatomic) CKDPInvitationDeclineResponse *invitationDeclineResponse;
@property(readonly, nonatomic) _Bool hasInvitationDeclineResponse;
@property(retain, nonatomic) CKDPInvitationQueryResponse *invitationQueryResponse;
@property(readonly, nonatomic) _Bool hasInvitationQueryResponse;
@property(retain, nonatomic) CKDPSubscriptionCreateResponse *subscriptionCreateResponse;
@property(readonly, nonatomic) _Bool hasSubscriptionCreateResponse;
@property(retain, nonatomic) CKDPSubscriptionRetrieveResponse *subscriptionRetrieveResponse;
@property(readonly, nonatomic) _Bool hasSubscriptionRetrieveResponse;
@property(retain, nonatomic) CKDPSubscriptionDeleteResponse *subscriptionDeleteResponse;
@property(readonly, nonatomic) _Bool hasSubscriptionDeleteResponse;
@property(retain, nonatomic) CKDPUserQueryResponse *userQueryResponse;
@property(readonly, nonatomic) _Bool hasUserQueryResponse;
@property(retain, nonatomic) CKDPUserPrivacySettingsUpdateResponse *userPrivacySettingsUpdateResponse;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsUpdateResponse;
@property(retain, nonatomic) CKDPUserPrivacySettingsResetResponse *userPrivacySettingsResetResponse;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsResetResponse;
@property(retain, nonatomic) CKDPUserPrivacySettingsBatchLookupResponse *userPrivacySettingsBatchLookupResponse;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsBatchLookupResponse;
@property(retain, nonatomic) CKDPUserPrivacySettingsRetrieveResponse *userPrivacySettingsRetrieveResponse;
@property(readonly, nonatomic) _Bool hasUserPrivacySettingsRetrieveResponse;
@property(retain, nonatomic) CKDPTokenRegistrationResponse *tokenRegistrationResponse;
@property(readonly, nonatomic) _Bool hasTokenRegistrationResponse;
@property(retain, nonatomic) CKDPTokenUnregistrationResponse *tokenUnregistrationResponse;
@property(readonly, nonatomic) _Bool hasTokenUnregistrationResponse;
@property(retain, nonatomic) CKDPSetBadgeCountResponse *setBadgeCountResponse;
@property(readonly, nonatomic) _Bool hasSetBadgeCountResponse;
@property(retain, nonatomic) CKDPNotificationSyncResponse *notificationSyncResponse;
@property(readonly, nonatomic) _Bool hasNotificationSyncResponse;
@property(retain, nonatomic) CKDPNotificationMarkReadResponse *notificationMarkReadResponse;
@property(readonly, nonatomic) _Bool hasNotificationMarkReadResponse;
@property(retain, nonatomic) CKDPPkiRegisterResponse *pkiRegisterResponse;
@property(readonly, nonatomic) _Bool hasPkiRegisterResponse;
@property(retain, nonatomic) CKDPPkiRetrieveResponse *pkiRetrieveResponse;
@property(readonly, nonatomic) _Bool hasPkiRetrieveResponse;
@property(retain, nonatomic) CKDPMescalCertificateResponse *mescalCertificateResponse;
@property(readonly, nonatomic) _Bool hasMescalCertificateResponse;
@property(retain, nonatomic) CKDPMescalSessionInfoResponse *mescalSessionInfoResponse;
@property(readonly, nonatomic) _Bool hasMescalSessionInfoResponse;
@property(retain, nonatomic) CKDPMescalSignatureResponse *mescalSignatureResponse;
@property(readonly, nonatomic) _Bool hasMescalSignatureResponse;

@end

@interface CKDPResponseOperationResult : PBCodable <NSCopying>
{
    int _code;
    CKDPResponseOperationResultError *_error;
    struct {
        unsigned int code:1;
    } _has;
}

@property(retain, nonatomic) CKDPResponseOperationResultError *error; // @synthesize error=_error;
@property(nonatomic) int code; // @synthesize code=_code;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasError;
@property(nonatomic) _Bool hasCode;

@end

@interface CKDPResponseOperationResultError : PBCodable <NSCopying>
{
    CKDPResponseOperationResultErrorClient *_clientError;
    NSString *_errorDescription;
    NSString *_errorInternal;
    NSString *_errorKey;
    CKDPResponseOperationResultErrorExtension *_extensionError;
    int _retryAfterSeconds;
    CKDPResponseOperationResultErrorServer *_serverError;
    struct {
        unsigned int retryAfterSeconds:1;
    } _has;
}

@property(retain, nonatomic) NSString *errorInternal; // @synthesize errorInternal=_errorInternal;
@property(retain, nonatomic) NSString *errorKey; // @synthesize errorKey=_errorKey;
@property(retain, nonatomic) NSString *errorDescription; // @synthesize errorDescription=_errorDescription;
@property(nonatomic) int retryAfterSeconds; // @synthesize retryAfterSeconds=_retryAfterSeconds;
@property(retain, nonatomic) CKDPResponseOperationResultErrorExtension *extensionError; // @synthesize extensionError=_extensionError;
@property(retain, nonatomic) CKDPResponseOperationResultErrorServer *serverError; // @synthesize serverError=_serverError;
@property(retain, nonatomic) CKDPResponseOperationResultErrorClient *clientError; // @synthesize clientError=_clientError;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasErrorInternal;
@property(readonly, nonatomic) _Bool hasErrorKey;
@property(readonly, nonatomic) _Bool hasErrorDescription;
@property(nonatomic) _Bool hasRetryAfterSeconds;
@property(readonly, nonatomic) _Bool hasExtensionError;
@property(readonly, nonatomic) _Bool hasServerError;
@property(readonly, nonatomic) _Bool hasClientError;

@end

@interface CKDPResponseOperationResultErrorClient : PBCodable <NSCopying>
{
    CKDPOplockFailure *_oplockFailure;
    int _type;
    CKDPUniqueFieldFailure *_uniqueFieldFailure;
    CDStruct_f953fb60 _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
@property(retain, nonatomic) CKDPOplockFailure *oplockFailure;
@property(readonly, nonatomic) _Bool hasOplockFailure;
@property(retain, nonatomic) CKDPUniqueFieldFailure *uniqueFieldFailure;
@property(readonly, nonatomic) _Bool hasUniqueFieldFailure;
- (id)_prettyDictionaryRepresentation;

@end

@interface CKDPResponseOperationResultErrorExtension : PBCodable <NSCopying>
{
    NSString *_extensionName;
    unsigned int _typeCode;
    struct {
        unsigned int typeCode:1;
    } _has;
}

@property(nonatomic) unsigned int typeCode; // @synthesize typeCode=_typeCode;
@property(retain, nonatomic) NSString *extensionName; // @synthesize extensionName=_extensionName;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasTypeCode;
@property(readonly, nonatomic) _Bool hasExtensionName;

@end

@interface CKDPResponseOperationResultErrorServer : PBCodable <NSCopying>
{
    int _type;
    CDStruct_f953fb60 _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
- (id)_prettyDictionaryRepresentation;

@end

__attribute__((visibility("hidden")))
@interface CKDPSetBadgeCountRequest : PBRequest <NSCopying>
{
    unsigned int _badgeCount;
    _Bool _forDevice;
    struct {
        unsigned int badgeCount:1;
        unsigned int forDevice:1;
    } _has;
}

+ (id)options;
@property(nonatomic) _Bool forDevice; // @synthesize forDevice=_forDevice;
@property(nonatomic) unsigned int badgeCount; // @synthesize badgeCount=_badgeCount;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasForDevice;
@property(nonatomic) _Bool hasBadgeCount;

@end

__attribute__((visibility("hidden")))
@interface CKDPSetBadgeCountResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPShare : PBCodable <NSCopying>
{
    NSData *_keyData;
    NSString *_keyVersion;
    NSMutableArray *_participants;
    NSData *_resource;
    NSString *_resourceProvider;
    int _resourceState;
    CKDPShareIdentifier *_shareId;
    struct {
        unsigned int resourceState:1;
    } _has;
}

@property(retain, nonatomic) NSData *keyData; // @synthesize keyData=_keyData;
@property(retain, nonatomic) NSString *keyVersion; // @synthesize keyVersion=_keyVersion;
@property(nonatomic) int resourceState; // @synthesize resourceState=_resourceState;
@property(retain, nonatomic) NSData *resource; // @synthesize resource=_resource;
@property(retain, nonatomic) NSString *resourceProvider; // @synthesize resourceProvider=_resourceProvider;
@property(retain, nonatomic) NSMutableArray *participants; // @synthesize participants=_participants;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasKeyData;
@property(readonly, nonatomic) _Bool hasKeyVersion;
@property(nonatomic) _Bool hasResourceState;
@property(readonly, nonatomic) _Bool hasResource;
@property(readonly, nonatomic) _Bool hasResourceProvider;
- (id)participantAtIndex:(unsigned long long)arg1;
- (unsigned long long)participantsCount;
- (void)addParticipant:(id)arg1;
- (void)clearParticipants;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareCreateRequest : PBRequest <NSCopying>
{
    NSString *_invitationImageUrl;
    NSString *_invitationMessage;
    CKDPShare *_share;
}

+ (id)options;
@property(retain, nonatomic) NSString *invitationImageUrl; // @synthesize invitationImageUrl=_invitationImageUrl;
@property(retain, nonatomic) NSString *invitationMessage; // @synthesize invitationMessage=_invitationMessage;
@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasInvitationImageUrl;
@property(readonly, nonatomic) _Bool hasInvitationMessage;
@property(readonly, nonatomic) _Bool hasShare;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareCreateResponse : PBCodable <NSCopying>
{
    CKDPShare *_share;
}

@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShare;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareDeleteRequest : PBRequest <NSCopying>
{
    CKDPShareIdentifier *_shareId;
}

+ (id)options;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareDeleteResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareIdentifier : PBCodable <NSCopying>
{
    CKDPIdentifier *_ownerIdentifier;
    CKDPIdentifier *_value;
}

@property(retain, nonatomic) CKDPIdentifier *ownerIdentifier; // @synthesize ownerIdentifier=_ownerIdentifier;
@property(retain, nonatomic) CKDPIdentifier *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasOwnerIdentifier;
@property(readonly, nonatomic) _Bool hasValue;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareParticipantCreateRequest : PBRequest <NSCopying>
{
    NSString *_invitationImageUrl;
    NSString *_invitationMessage;
    NSMutableArray *_participants;
    CKDPShareIdentifier *_shareId;
}

+ (id)options;
@property(retain, nonatomic) NSString *invitationImageUrl; // @synthesize invitationImageUrl=_invitationImageUrl;
@property(retain, nonatomic) NSString *invitationMessage; // @synthesize invitationMessage=_invitationMessage;
@property(retain, nonatomic) NSMutableArray *participants; // @synthesize participants=_participants;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasInvitationImageUrl;
@property(readonly, nonatomic) _Bool hasInvitationMessage;
- (id)participantAtIndex:(unsigned long long)arg1;
- (unsigned long long)participantsCount;
- (void)addParticipant:(id)arg1;
- (void)clearParticipants;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareParticipantCreateResponse : PBCodable <NSCopying>
{
    CKDPShare *_share;
}

@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShare;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareParticipantDeleteRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_participantId;
    CKDPShareIdentifier *_shareId;
}

+ (id)options;
@property(retain, nonatomic) CKDPIdentifier *participantId; // @synthesize participantId=_participantId;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasParticipantId;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareParticipantDeleteResponse : PBCodable <NSCopying>
{
    CKDPShare *_share;
}

@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShare;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareParticipantUpdateRequest : PBRequest <NSCopying>
{
    NSMutableArray *_participants;
    CKDPShareIdentifier *_shareId;
}

+ (id)options;
@property(retain, nonatomic) NSMutableArray *participants; // @synthesize participants=_participants;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)participantAtIndex:(unsigned long long)arg1;
- (unsigned long long)participantsCount;
- (void)addParticipant:(id)arg1;
- (void)clearParticipants;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareParticipantUpdateResponse : PBCodable <NSCopying>
{
    CKDPShare *_share;
}

@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShare;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareRetrieveRequest : PBRequest <NSCopying>
{
    CKDPShareIdentifier *_shareId;
}

+ (id)options;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareRetrieveResponse : PBCodable <NSCopying>
{
    NSMutableArray *_shares;
}

@property(retain, nonatomic) NSMutableArray *shares; // @synthesize shares=_shares;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)shareAtIndex:(unsigned long long)arg1;
- (unsigned long long)sharesCount;
- (void)addShare:(id)arg1;
- (void)clearShares;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareSetKeyRequest : PBRequest <NSCopying>
{
    NSString *_currentKeyVersion;
    NSData *_keyData;
    NSMutableArray *_participantIds;
    CKDPShareIdentifier *_shareId;
}

+ (id)options;
@property(retain, nonatomic) NSMutableArray *participantIds; // @synthesize participantIds=_participantIds;
@property(retain, nonatomic) NSData *keyData; // @synthesize keyData=_keyData;
@property(retain, nonatomic) NSString *currentKeyVersion; // @synthesize currentKeyVersion=_currentKeyVersion;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)participantIdAtIndex:(unsigned long long)arg1;
- (unsigned long long)participantIdsCount;
- (void)addParticipantId:(id)arg1;
- (void)clearParticipantIds;
@property(readonly, nonatomic) _Bool hasKeyData;
@property(readonly, nonatomic) _Bool hasCurrentKeyVersion;
@property(readonly, nonatomic) _Bool hasShareId;

@end

__attribute__((visibility("hidden")))
@interface CKDPShareSetKeyResponse : PBCodable <NSCopying>
{
    CKDPShare *_share;
}

@property(retain, nonatomic) CKDPShare *share; // @synthesize share=_share;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasShare;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscription : PBCodable <NSCopying>
{
    struct {
        int *list;
        unsigned long long count;
        unsigned long long size;
    } _mutationTriggers;
    int _evaluationType;
    NSMutableArray *_filters;
    CKDPIdentifier *_identifier;
    CKDPSubscriptionNotification *_notification;
    int _owner;
    NSMutableArray *_recordTypes;
    CKDPRecordZoneIdentifier *_zoneIdentifier;
    _Bool _fireOnce;
    struct {
        unsigned int evaluationType:1;
        unsigned int owner:1;
        unsigned int fireOnce:1;
    } _has;
}

@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
@property(nonatomic) _Bool fireOnce; // @synthesize fireOnce=_fireOnce;
@property(retain, nonatomic) NSMutableArray *recordTypes; // @synthesize recordTypes=_recordTypes;
@property(retain, nonatomic) NSMutableArray *filters; // @synthesize filters=_filters;
@property(retain, nonatomic) CKDPSubscriptionNotification *notification; // @synthesize notification=_notification;
@property(nonatomic) int owner; // @synthesize owner=_owner;
@property(nonatomic) int evaluationType; // @synthesize evaluationType=_evaluationType;
@property(retain, nonatomic) CKDPIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;
@property(nonatomic) _Bool hasFireOnce;
- (id)recordTypesAtIndex:(unsigned long long)arg1;
- (unsigned long long)recordTypesCount;
- (void)addRecordTypes:(id)arg1;
- (void)clearRecordTypes;
- (id)filtersAtIndex:(unsigned long long)arg1;
- (unsigned long long)filtersCount;
- (void)addFilters:(id)arg1;
- (void)clearFilters;
@property(readonly, nonatomic) _Bool hasNotification;
- (void)setMutationTriggers:(int *)arg1 count:(unsigned long long)arg2;
- (int)mutationTriggersAtIndex:(unsigned long long)arg1;
- (void)addMutationTriggers:(int)arg1;
- (void)clearMutationTriggers;
@property(readonly, nonatomic) int *mutationTriggers;
@property(readonly, nonatomic) unsigned long long mutationTriggersCount;
@property(nonatomic) _Bool hasOwner;
@property(nonatomic) _Bool hasEvaluationType;
@property(readonly, nonatomic) _Bool hasIdentifier;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionCreateRequest : PBRequest <NSCopying>
{
    CKDPSubscription *_subscription;
}

+ (id)options;
@property(retain, nonatomic) CKDPSubscription *subscription; // @synthesize subscription=_subscription;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSubscription;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionCreateResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionDeleteRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_identifier;
}

+ (id)options;
@property(retain, nonatomic) CKDPIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionDeleteResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionNotification : PBCodable <NSCopying>
{
    NSMutableArray *_additionalFields;
    CKDPSubscriptionNotificationAlert *_alert;
    _Bool _shouldBadge;
    _Bool _shouldSendContentAvailable;
    struct {
        unsigned int shouldBadge:1;
        unsigned int shouldSendContentAvailable:1;
    } _has;
}

@property(nonatomic) _Bool shouldSendContentAvailable; // @synthesize shouldSendContentAvailable=_shouldSendContentAvailable;
@property(retain, nonatomic) NSMutableArray *additionalFields; // @synthesize additionalFields=_additionalFields;
@property(nonatomic) _Bool shouldBadge; // @synthesize shouldBadge=_shouldBadge;
@property(retain, nonatomic) CKDPSubscriptionNotificationAlert *alert; // @synthesize alert=_alert;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasShouldSendContentAvailable;
- (id)additionalFieldsAtIndex:(unsigned long long)arg1;
- (unsigned long long)additionalFieldsCount;
- (void)addAdditionalFields:(id)arg1;
- (void)clearAdditionalFields;
@property(nonatomic) _Bool hasShouldBadge;
@property(readonly, nonatomic) _Bool hasAlert;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionNotificationAlert : PBCodable <NSCopying>
{
    NSString *_actionLocKey;
    NSString *_launchImage;
    NSMutableArray *_localizedArguments;
    NSString *_localizedKey;
    NSString *_soundName;
    NSString *_text;
}

@property(retain, nonatomic) NSString *soundName; // @synthesize soundName=_soundName;
@property(retain, nonatomic) NSString *launchImage; // @synthesize launchImage=_launchImage;
@property(retain, nonatomic) NSString *actionLocKey; // @synthesize actionLocKey=_actionLocKey;
@property(retain, nonatomic) NSMutableArray *localizedArguments; // @synthesize localizedArguments=_localizedArguments;
@property(retain, nonatomic) NSString *localizedKey; // @synthesize localizedKey=_localizedKey;
@property(retain, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasSoundName;
@property(readonly, nonatomic) _Bool hasLaunchImage;
@property(readonly, nonatomic) _Bool hasActionLocKey;
- (id)localizedArgumentsAtIndex:(unsigned long long)arg1;
- (unsigned long long)localizedArgumentsCount;
- (void)addLocalizedArguments:(id)arg1;
- (void)clearLocalizedArguments;
@property(readonly, nonatomic) _Bool hasLocalizedKey;
@property(readonly, nonatomic) _Bool hasText;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionRetrieveRequest : PBRequest <NSCopying>
{
    CKDPIdentifier *_identifier;
}

+ (id)options;
@property(retain, nonatomic) CKDPIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPSubscriptionRetrieveResponse : PBCodable <NSCopying>
{
    NSMutableArray *_subscriptions;
}

@property(retain, nonatomic) NSMutableArray *subscriptions; // @synthesize subscriptions=_subscriptions;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)subscriptionsAtIndex:(unsigned long long)arg1;
- (unsigned long long)subscriptionsCount;
- (void)addSubscriptions:(id)arg1;
- (void)clearSubscriptions;

@end

__attribute__((visibility("hidden")))
@interface CKDPTokenRegistrationBody : PBCodable <NSCopying>
{
    int _apnsEnv;
    NSString *_bundleIdentifier;
    NSData *_token;
    struct {
        unsigned int apnsEnv:1;
    } _has;
}

@property(nonatomic) int apnsEnv; // @synthesize apnsEnv=_apnsEnv;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) NSData *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasApnsEnv;
@property(readonly, nonatomic) _Bool hasBundleIdentifier;
@property(readonly, nonatomic) _Bool hasToken;

@end

__attribute__((visibility("hidden")))
@interface CKDPTokenRegistrationRequest : PBRequest <NSCopying>
{
    CKDPTokenRegistrationBody *_tokenRegistrationBody;
}

+ (id)options;
@property(retain, nonatomic) CKDPTokenRegistrationBody *tokenRegistrationBody; // @synthesize tokenRegistrationBody=_tokenRegistrationBody;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasTokenRegistrationBody;

@end

__attribute__((visibility("hidden")))
@interface CKDPTokenRegistrationResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPTokenUnregistrationRequest : PBRequest <NSCopying>
{
    CKDPTokenRegistrationBody *_tokenRegistrationBody;
}

+ (id)options;
@property(retain, nonatomic) CKDPTokenRegistrationBody *tokenRegistrationBody; // @synthesize tokenRegistrationBody=_tokenRegistrationBody;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasTokenRegistrationBody;

@end

__attribute__((visibility("hidden")))
@interface CKDPTokenUnregistrationResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUniqueFieldFailure : PBCodable <NSCopying>
{
    CKDPIdentifier *_identifierForConstraintFailure;
}

@property(retain, nonatomic) CKDPIdentifier *identifierForConstraintFailure; // @synthesize identifierForConstraintFailure=_identifierForConstraintFailure;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIdentifierForConstraintFailure;

@end

__attribute__((visibility("hidden")))
@interface CKDPUnlikeRequest : PBRequest <NSCopying>
{
    CKDPLikedId *_identifier;
}

+ (id)options;
@property(retain, nonatomic) CKDPLikedId *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPUnlikeResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUser : PBCodable <NSCopying>
{
    CKDPUserAlias *_alias;
    NSString *_firstName;
    CKDPIdentifier *_identifier;
    NSString *_lastName;
}

@property(retain, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(retain, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(retain, nonatomic) CKDPUserAlias *alias; // @synthesize alias=_alias;
@property(retain, nonatomic) CKDPIdentifier *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasLastName;
@property(readonly, nonatomic) _Bool hasFirstName;
@property(readonly, nonatomic) _Bool hasAlias;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserAlias : PBCodable <NSCopying>
{
    NSString *_identifier;
    int _type;
    CDStruct_f953fb60 _has;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasType;
@property(readonly, nonatomic) _Bool hasIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserAvailableQuotaRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserAvailableQuotaResponse : PBCodable <NSCopying>
{
    unsigned long long _storageAvailableBytes;
    struct {
        unsigned int storageAvailableBytes:1;
    } _has;
}

@property(nonatomic) unsigned long long storageAvailableBytes; // @synthesize storageAvailableBytes=_storageAvailableBytes;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasStorageAvailableBytes;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettings : PBCodable <NSCopying>
{
    _Bool _discoverable;
    struct {
        unsigned int discoverable:1;
    } _has;
}

@property(nonatomic) _Bool discoverable; // @synthesize discoverable=_discoverable;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasDiscoverable;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsBatchLookupRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsBatchLookupResponse : PBCodable <NSCopying>
{
    NSMutableArray *_containerPrivacySettings;
}

@property(retain, nonatomic) NSMutableArray *containerPrivacySettings; // @synthesize containerPrivacySettings=_containerPrivacySettings;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)containerPrivacySettingsAtIndex:(unsigned long long)arg1;
- (unsigned long long)containerPrivacySettingsCount;
- (void)addContainerPrivacySettings:(id)arg1;
- (void)clearContainerPrivacySettings;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings : PBCodable <NSCopying>
{
    NSMutableArray *_applicationBundles;
    NSString *_applicationContainer;
    int _applicationContainerEnvironment;
    CKDPUserPrivacySettings *_userPrivacySettings;
    struct {
        unsigned int applicationContainerEnvironment:1;
    } _has;
}

@property(retain, nonatomic) CKDPUserPrivacySettings *userPrivacySettings; // @synthesize userPrivacySettings=_userPrivacySettings;
@property(retain, nonatomic) NSMutableArray *applicationBundles; // @synthesize applicationBundles=_applicationBundles;
@property(retain, nonatomic) NSString *applicationContainer; // @synthesize applicationContainer=_applicationContainer;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUserPrivacySettings;
- (id)applicationBundleAtIndex:(unsigned long long)arg1;
- (unsigned long long)applicationBundlesCount;
- (void)addApplicationBundle:(id)arg1;
- (void)clearApplicationBundles;
@property(nonatomic) _Bool hasApplicationContainerEnvironment;
@property(nonatomic) int applicationContainerEnvironment; // @synthesize applicationContainerEnvironment=_applicationContainerEnvironment;
@property(readonly, nonatomic) _Bool hasApplicationContainer;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsResetRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsResetResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsRetrieveRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsRetrieveResponse : PBCodable <NSCopying>
{
    NSMutableArray *_applicationBundles;
    CKDPUserPrivacySettings *_userPrivacySettings;
}

@property(retain, nonatomic) NSMutableArray *applicationBundles; // @synthesize applicationBundles=_applicationBundles;
@property(retain, nonatomic) CKDPUserPrivacySettings *userPrivacySettings; // @synthesize userPrivacySettings=_userPrivacySettings;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)applicationBundleAtIndex:(unsigned long long)arg1;
- (unsigned long long)applicationBundlesCount;
- (void)addApplicationBundle:(id)arg1;
- (void)clearApplicationBundles;
@property(readonly, nonatomic) _Bool hasUserPrivacySettings;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsUpdateRequest : PBRequest <NSCopying>
{
    NSString *_bundleIdentifier;
    CKDPUserPrivacySettings *_userPrivacySettings;
}

+ (id)options;
@property(retain, nonatomic) CKDPUserPrivacySettings *userPrivacySettings; // @synthesize userPrivacySettings=_userPrivacySettings;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUserPrivacySettings;
@property(readonly, nonatomic) _Bool hasBundleIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserPrivacySettingsUpdateResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserQueryRequest : PBRequest <NSCopying>
{
    CKDPUserAlias *_alias;
    NSMutableArray *_sortedBys;
}

+ (id)options;
@property(retain, nonatomic) NSMutableArray *sortedBys; // @synthesize sortedBys=_sortedBys;
@property(retain, nonatomic) CKDPUserAlias *alias; // @synthesize alias=_alias;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)sortedByAtIndex:(unsigned long long)arg1;
- (unsigned long long)sortedBysCount;
- (void)addSortedBy:(id)arg1;
- (void)clearSortedBys;
@property(readonly, nonatomic) _Bool hasAlias;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserQueryResponse : PBCodable <NSCopying>
{
    CKDPUser *_user;
}

@property(retain, nonatomic) CKDPUser *user; // @synthesize user=_user;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUser;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserRetrieveRequest : PBRequest <NSCopying>
{
}

+ (id)options;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPUserRetrieveResponse : PBCodable <NSCopying>
{
    CKDPRecord *_user;
}

@property(retain, nonatomic) CKDPRecord *user; // @synthesize user=_user;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasUser;

@end

__attribute__((visibility("hidden")))
@interface CKDPZone : PBCodable <NSCopying>
{
    NSString *_etag;
    CKDPProtectionInfo *_protectionInfo;
    CKDPShareIdentifier *_shareId;
    CKDPRecordZoneIdentifier *_zoneIdentifier;
    NSString *_zoneProtectionInfoTag;
}

@property(retain, nonatomic) NSString *zoneProtectionInfoTag; // @synthesize zoneProtectionInfoTag=_zoneProtectionInfoTag;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPProtectionInfo *protectionInfo; // @synthesize protectionInfo=_protectionInfo;
@property(retain, nonatomic) CKDPShareIdentifier *shareId; // @synthesize shareId=_shareId;
@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZoneProtectionInfoTag;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasProtectionInfo;
@property(readonly, nonatomic) _Bool hasShareId;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneDeleteRequest : PBRequest <NSCopying>
{
    CKDPRecordZoneIdentifier *_zoneIdentifier;
}

+ (id)options;
@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneDeleteResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneRetrieveRequest : PBRequest <NSCopying>
{
    CKDPRecordZoneIdentifier *_zoneIdentifier;
}

+ (id)options;
@property(retain, nonatomic) CKDPRecordZoneIdentifier *zoneIdentifier; // @synthesize zoneIdentifier=_zoneIdentifier;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZoneIdentifier;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneRetrieveResponse : PBCodable <NSCopying>
{
    NSMutableArray *_zoneSummarys;
}

@property(retain, nonatomic) NSMutableArray *zoneSummarys; // @synthesize zoneSummarys=_zoneSummarys;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)zoneSummaryAtIndex:(unsigned long long)arg1;
- (unsigned long long)zoneSummarysCount;
- (void)addZoneSummary:(id)arg1;
- (void)clearZoneSummarys;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneRetrieveResponseZoneSummary : PBCodable <NSCopying>
{
    long long _assetQuotaUsage;
    long long _metadataQuotaUsage;
    NSData *_clientChangeToken;
    NSData *_currentServerContinuationToken;
    int _deviceCount;
    CKDPZone *_targetZone;
    struct {
        unsigned int assetQuotaUsage:1;
        unsigned int metadataQuotaUsage:1;
        unsigned int deviceCount:1;
    } _has;
}

@property(nonatomic) long long metadataQuotaUsage; // @synthesize metadataQuotaUsage=_metadataQuotaUsage;
@property(nonatomic) long long assetQuotaUsage; // @synthesize assetQuotaUsage=_assetQuotaUsage;
@property(nonatomic) int deviceCount; // @synthesize deviceCount=_deviceCount;
@property(retain, nonatomic) NSData *clientChangeToken; // @synthesize clientChangeToken=_clientChangeToken;
@property(retain, nonatomic) NSData *currentServerContinuationToken; // @synthesize currentServerContinuationToken=_currentServerContinuationToken;
@property(retain, nonatomic) CKDPZone *targetZone; // @synthesize targetZone=_targetZone;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(nonatomic) _Bool hasMetadataQuotaUsage;
@property(nonatomic) _Bool hasAssetQuotaUsage;
@property(nonatomic) _Bool hasDeviceCount;
@property(readonly, nonatomic) _Bool hasClientChangeToken;
@property(readonly, nonatomic) _Bool hasCurrentServerContinuationToken;
@property(readonly, nonatomic) _Bool hasTargetZone;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneSaveRequest : PBRequest <NSCopying>
{
    NSString *_etag;
    CKDPZone *_recordZone;
    NSString *_zoneProtectionInfoTag;
}

+ (id)options;
@property(retain, nonatomic) NSString *zoneProtectionInfoTag; // @synthesize zoneProtectionInfoTag=_zoneProtectionInfoTag;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKDPZone *recordZone; // @synthesize recordZone=_recordZone;
- (void).cxx_destruct;
- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (Class)responseClass;
- (unsigned int)requestTypeCode;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
@property(readonly, nonatomic) _Bool hasZoneProtectionInfoTag;
@property(readonly, nonatomic) _Bool hasEtag;
@property(readonly, nonatomic) _Bool hasRecordZone;

@end

__attribute__((visibility("hidden")))
@interface CKDPZoneSaveResponse : PBCodable <NSCopying>
{
}

- (void)mergeFrom:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKDPlaceholderOperation : NSOperation
{
    NSObject<OS_dispatch_group> *_group;
    _Bool _isFinished;
    _Bool _isExecuting;
    NSDate *_startDate;
    CKDOperation *_realOperation;
    NSOperationQueue *_targetOperationQueue;
}

@property(readonly, nonatomic) NSOperationQueue *targetOperationQueue; // @synthesize targetOperationQueue=_targetOperationQueue;
@property(readonly, nonatomic) CKDOperation *realOperation; // @synthesize realOperation=_realOperation;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) _Bool isExecuting; // @synthesize isExecuting=_isExecuting;
@property(nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
- (void).cxx_destruct;
- (id)description;
- (id)CKPropertiesDescription;
- (id)ckShortDescription;
- (void)cancel;
- (_Bool)isConcurrent;
- (void)main;
- (void)start;
@property(readonly, nonatomic) NSString *operationID;
@property(readonly, nonatomic) NSString *sectionID;
@property(readonly, nonatomic) CKDClientContext *context;
- (id)initWithOperation:(id)arg1 targetOperationQueue:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDPlaintextResponseBodyParser : NSObject <CKDResponseBodyParser>
{
    NSError *_parserError;
    CDUnknownBlockType _objectParsedBlock;
    NSMutableData *_parserData;
}

@property(retain, nonatomic) NSMutableData *parserData; // @synthesize parserData=_parserData;
@property(copy, nonatomic) CDUnknownBlockType objectParsedBlock; // @synthesize objectParsedBlock=_objectParsedBlock;
@property(retain, nonatomic) NSError *parserError; // @synthesize parserError=_parserError;
- (void).cxx_destruct;
- (void)finishWithCompletion:(CDUnknownBlockType)arg1;
- (void)processData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDPlistResponseBodyParser : NSObject <CKDResponseBodyParser>
{
    NSError *_parserError;
    CDUnknownBlockType _objectParsedBlock;
    NSMutableData *_parserData;
}

@property(retain, nonatomic) NSMutableData *parserData; // @synthesize parserData=_parserData;
@property(copy, nonatomic) CDUnknownBlockType objectParsedBlock; // @synthesize objectParsedBlock=_objectParsedBlock;
@property(retain, nonatomic) NSError *parserError; // @synthesize parserError=_parserError;
- (void).cxx_destruct;
- (void)finishWithCompletion:(CDUnknownBlockType)arg1;
- (void)processData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDProtobufResponseBodyParser : NSObject <CKDResponseBodyParser>
{
    _Bool _isParsing;
    Class _messageClass;
    CDUnknownBlockType _objectParsedBlock;
    NSError *_parserError;
    NSObject<OS_dispatch_queue> *_parseQueue;
    NSData *_parserData;
    NSMutableData *_tailParserData;
    unsigned long long _curObjectLength;
    struct CC_SHA256state_st _mescalSignature;
}

@property(nonatomic) struct CC_SHA256state_st mescalSignature; // @synthesize mescalSignature=_mescalSignature;
@property(nonatomic) _Bool isParsing; // @synthesize isParsing=_isParsing;
@property(nonatomic) unsigned long long curObjectLength; // @synthesize curObjectLength=_curObjectLength;
@property(retain, nonatomic) NSMutableData *tailParserData; // @synthesize tailParserData=_tailParserData;
@property(retain, nonatomic) NSData *parserData; // @synthesize parserData=_parserData;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *parseQueue; // @synthesize parseQueue=_parseQueue;
@property(retain, nonatomic) NSError *parserError; // @synthesize parserError=_parserError;
@property(copy, nonatomic) CDUnknownBlockType objectParsedBlock; // @synthesize objectParsedBlock=_objectParsedBlock;
@property(nonatomic) Class messageClass; // @synthesize messageClass=_messageClass;
- (void).cxx_destruct;
- (void)finishWithCompletion:(CDUnknownBlockType)arg1;
- (void)processData:(id)arg1;
- (_Bool)_parseObjects:(_Bool)arg1;
- (_Bool)_parseObjectFromData:(id)arg1 rawData:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDProtobufStreamWriter : NSObject <NSStreamDelegate>
{
    NSMutableArray *_allObjects;
    NSData *_curData;
    unsigned long long _curDataPos;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    struct z_stream_s _zlibStream;
    _Bool _haveFlushedZlib;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _shouldCompress;
    _Bool _haveFinishedCompression;
    _Bool _haveFinishedStreaming;
    unsigned long long _bufferSize;
    id <CKDProtobufMessageSigningDelegate> _signingDelegate;
    NSFileHandle *_humanLogFileHandle;
    NSFileHandle *_binaryLogFileHandle;
}

@property(nonatomic) _Bool haveFinishedStreaming; // @synthesize haveFinishedStreaming=_haveFinishedStreaming;
@property(nonatomic) _Bool haveFinishedCompression; // @synthesize haveFinishedCompression=_haveFinishedCompression;
@property(retain, nonatomic) NSFileHandle *binaryLogFileHandle; // @synthesize binaryLogFileHandle=_binaryLogFileHandle;
@property(retain, nonatomic) NSFileHandle *humanLogFileHandle; // @synthesize humanLogFileHandle=_humanLogFileHandle;
@property(nonatomic) __weak id <CKDProtobufMessageSigningDelegate> signingDelegate; // @synthesize signingDelegate=_signingDelegate;
@property(nonatomic) unsigned long long bufferSize; // @synthesize bufferSize=_bufferSize;
@property(nonatomic) _Bool shouldCompress; // @synthesize shouldCompress=_shouldCompress;
@property(readonly, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (long long)_streamNextObject:(id)arg1;
- (void)_prepareObjectForStreaming:(id)arg1 shouldSign:(_Bool)arg2;
- (id)_dataForMessage:(id)arg1;
- (long long)_writeDataToStream:(id)arg1;
- (id)_prepareMescalSignature:(id)arg1;
- (_Bool)_finishStreaming:(id)arg1;
- (id)_compressBodyData:(id)arg1 shouldFlush:(_Bool)arg2;
- (void)open;
- (void)setStreamedObjects:(id)arg1;
- (void)dealloc;
- (void)_tearDownOutputStream;
- (id)initWithCompression:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDProtocolTranslator : NSObject
{
    NSString *_bundleIdentifier;
    NSString *_containerScopedUserID;
    NSString *_overriddenContainerScopedUserID;
}

+ (id)translatorIgnoringUserIDs;
@property(copy, nonatomic) NSString *overriddenContainerScopedUserID; // @synthesize overriddenContainerScopedUserID=_overriddenContainerScopedUserID;
@property(copy, nonatomic) NSString *containerScopedUserID; // @synthesize containerScopedUserID=_containerScopedUserID;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (void).cxx_destruct;
- (id)notificationFromPPushMessage:(id)arg1;
- (id)pPulseDataFromUserPresence:(id)arg1;
- (id)userPresenceFromPPulseData:(id)arg1 error:(id *)arg2;
- (id)pCommentFromComment:(id)arg1;
- (id)commentFromPComment:(id)arg1;
- (id)shareInvitationFromPInvitation:(id)arg1 error:(id *)arg2;
- (id)pInvitationRecipientFromShareParticipant:(id)arg1;
- (id)pParticipantFromShareParticipant:(id)arg1;
- (id)shareParticipantFromPInvitationRecipient:(id)arg1 error:(id *)arg2;
- (id)shareParticipantFromPParticipant:(id)arg1 error:(id *)arg2;
- (id)pShareFromShare:(id)arg1;
- (id)shareFromPShare:(id)arg1 error:(id *)arg2;
- (id)containerPrivacySettingsFromPContainerPrivacySettings:(id)arg1;
- (id)pRecordZoneFromRecordZone:(id)arg1;
- (id)recordZoneFromPRecordZone:(id)arg1 withDatabaseScope:(long long)arg2 error:(id *)arg3;
- (id)pSubscriptionFromSubscription:(id)arg1 error:(id *)arg2;
- (id)subscriptionFromPSubscription:(id)arg1 error:(id *)arg2;
- (id)pQueryFromQuery:(id)arg1 error:(id *)arg2;
- (id)pPackageFromPackage:(id)arg1;
- (id)packageFromPPackage:(id)arg1 error:(id *)arg2;
- (id)pAssetFromAsset:(id)arg1;
- (id)assetFromPAsset:(id)arg1 error:(id *)arg2;
- (id)deltaPRecordFromRecord:(id)arg1 withAllFields:(_Bool)arg2 outDeletedMergeFields:(id *)arg3 outKeysToSend:(id *)arg4;
- (id)pRecordFromRecord:(id)arg1;
- (id)pRecordFromRecord:(id)arg1 forCache:(_Bool)arg2;
- (id)_pRecordFromRecordSansValues:(id)arg1 forCache:(_Bool)arg2;
- (id)recordFromPRecord:(id)arg1 error:(id *)arg2;
- (id)pLikedIdFromSharedItemID:(id)arg1;
- (id)pCommentedOnIdFromSharedItemID:(id)arg1;
- (id)pResourceFromSharedItemID:(id)arg1;
- (id)sharedItemIDFromPLikedId:(id)arg1 error:(id *)arg2;
- (id)sharedItemIDFromPCommentedOnId:(id)arg1 error:(id *)arg2;
- (id)sharedItemIDFromPResource:(id)arg1 error:(id *)arg2;
- (id)pShareIdentifierFromShareID:(id)arg1;
- (id)shareIDFromPShareIdentifier:(id)arg1 error:(id *)arg2;
- (id)pRecordZoneIdentifierFromRecordZoneID:(id)arg1;
- (id)recordZoneIDFromPRecordZoneIdentifier:(id)arg1 error:(id *)arg2;
- (id)pRecordIdentifierFromRecordID:(id)arg1;
- (id)recordIDFromPRecordIdentifier:(id)arg1 error:(id *)arg2;
- (id)userNameFromPIdentifier:(id)arg1 error:(id *)arg2;
- (id)pIdentifierFromUserRecordName:(id)arg1;
- (id)pIdentifierFromUserRecordID:(id)arg1;
- (id)recordIDFromPUserName:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) CKDPIdentifier *pUserID;
- (_Bool)_isDefaultUserNameFromClient:(id)arg1;
- (_Bool)_isDefaultUserNameFromServer:(id)arg1;
- (id)initWithContainerScopedUserID:(id)arg1 bundleIdentifier:(id)arg2;
- (id)_initWithContainerScopedUserID:(id)arg1 bundleIdentifier:(id)arg2;
- (id)pFieldWithKey:(id)arg1 value:(id)arg2;
- (id)objectRepresentationFromFieldValue:(id)arg1;
- (id)fieldValueListOfType:(int)arg1 withList:(id)arg2;
- (id)locationFieldValueWithLatitude:(double)arg1 longitude:(double)arg2;
- (id)fieldValueOfType:(int)arg1 withObject:(id)arg2;
- (id)fieldValueFromObject:(id)arg1;
- (int)fieldValueTypeFromObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDProxyOperationQueue : NSOperationQueue
{
    CKDClientProxy *_proxy;
}

@property(nonatomic) __weak CKDClientProxy *proxy; // @synthesize proxy=_proxy;
- (void).cxx_destruct;
- (void)addOperation:(id)arg1;
- (id)initWithProxy:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDPublishAssetsOperation : CKDDatabaseOperation
{
    CDUnknownBlockType _assetPublishedBlock;
    NSArray *_recordIDs;
    NSDictionary *_fileNamesByAssetFieldNames;
    unsigned long long _requestedTTL;
    unsigned long long _URLOptions;
    NSOperation *_fetchRecordsOperation;
    NSMutableDictionary *_fetchedRecordsByID;
}

@property(retain, nonatomic) NSMutableDictionary *fetchedRecordsByID; // @synthesize fetchedRecordsByID=_fetchedRecordsByID;
@property(retain) NSOperation *fetchRecordsOperation; // @synthesize fetchRecordsOperation=_fetchRecordsOperation;
@property(nonatomic) unsigned long long URLOptions; // @synthesize URLOptions=_URLOptions;
@property(nonatomic) unsigned long long requestedTTL; // @synthesize requestedTTL=_requestedTTL;
@property(retain, nonatomic) NSDictionary *fileNamesByAssetFieldNames; // @synthesize fileNamesByAssetFieldNames=_fileNamesByAssetFieldNames;
@property(retain, nonatomic) NSArray *recordIDs; // @synthesize recordIDs=_recordIDs;
@property(copy, nonatomic) CDUnknownBlockType assetPublishedBlock; // @synthesize assetPublishedBlock=_assetPublishedBlock;
- (void).cxx_destruct;
- (void)cancel;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_fetchRecords;
- (void)_fetchPCSForRecords;
- (void)_dispatchAssetURLsForRecord:(id)arg1 recordID:(id)arg2 pcs:(struct _OpaquePCSShareProtection *)arg3 error:(id)arg4;
- (id)_expandTemplateURL:(id)arg1 fieldValues:(id)arg2;
- (id)nameForState:(unsigned long long)arg1;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

@interface CKDPushConnection : NSObject <APSConnectionDelegate>
{
    NSString *_apsEnvironmentString;
    APSConnection *_apsConnection;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_tokensCache;
    NSMapTable *_callbacks;
    NSMutableSet *_enabledTopics;
    NSMutableDictionary *_topicsToWaitingAppContainerTuples;
    NSMutableSet *_topicsAwaitingPublicToken;
}

+ (id)sharedConnectionForAPSEnvironmentString:(id)arg1;
@property(retain, nonatomic) NSMutableSet *topicsAwaitingPublicToken; // @synthesize topicsAwaitingPublicToken=_topicsAwaitingPublicToken;
@property(retain, nonatomic) NSMutableDictionary *topicsToWaitingAppContainerTuples; // @synthesize topicsToWaitingAppContainerTuples=_topicsToWaitingAppContainerTuples;
@property(retain, nonatomic) NSMutableSet *enabledTopics; // @synthesize enabledTopics=_enabledTopics;
@property(retain, nonatomic) NSMapTable *callbacks; // @synthesize callbacks=_callbacks;
@property(retain, nonatomic) NSMutableDictionary *tokensCache; // @synthesize tokensCache=_tokensCache;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) APSConnection *apsConnection; // @synthesize apsConnection=_apsConnection;
- (void)setAPSEnvironmentString:(id)arg1;
@property(retain, nonatomic) NSString *apsEnvironmentString; // @synthesize apsEnvironmentString=_apsEnvironmentString;
- (void).cxx_destruct;
- (void)connectionDidReconnect:(id)arg1;
- (void)connection:(id)arg1 didChangeConnectedStatus:(_Bool)arg2;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)revokeTokenForAppContainerTuple:(id)arg1;
- (void)requestTokenForAppContainerTuple:(id)arg1 useAPSPublicToken:(_Bool)arg2;
- (id)_waitingAppContainerTuplesForTopic:(id)arg1;
- (void)_removeWaitingAppContainerTuplesForTopic:(id)arg1;
- (void)_addWaitingAppContainerTuple:(id)arg1 forTopic:(id)arg2;
- (void)dealloc;
- (id)initWithEnvironment:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDQueryOperation : CKDDatabaseOperation
{
    _Bool _shouldFetchAssetContent;
    CKQuery *_query;
    CKQueryCursor *_cursor;
    unsigned long long _resultsLimit;
    CKQueryCursor *_resultsCursor;
    CDUnknownBlockType _recordFetchedBlock;
    NSSet *_desiredKeySet;
    CKRecordZoneID *_zoneID;
}

@property(retain, nonatomic) CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;
@property(nonatomic) _Bool shouldFetchAssetContent; // @synthesize shouldFetchAssetContent=_shouldFetchAssetContent;
@property(retain, nonatomic) NSSet *desiredKeySet; // @synthesize desiredKeySet=_desiredKeySet;
@property(copy, nonatomic) CDUnknownBlockType recordFetchedBlock; // @synthesize recordFetchedBlock=_recordFetchedBlock;
@property(retain, nonatomic) CKQueryCursor *resultsCursor; // @synthesize resultsCursor=_resultsCursor;
@property(readonly, nonatomic) unsigned long long resultsLimit; // @synthesize resultsLimit=_resultsLimit;
@property(readonly, nonatomic) CKQueryCursor *cursor; // @synthesize cursor=_cursor;
@property(readonly, nonatomic) CKQuery *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (void)fillOutOperationResult:(id)arg1;
- (Class)operationResultClass;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleQueryRequestFinished:(id)arg1;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDQueryURLRequest : CKDURLRequest
{
    NSMutableArray *_queryResponses;
    CKQuery *_query;
    NSData *_cursor;
    unsigned long long _limit;
    CKRecordZoneID *_zoneID;
    NSArray *_requestedFields;
    NSData *_resultsCursor;
}

@property(retain, nonatomic) NSData *resultsCursor; // @synthesize resultsCursor=_resultsCursor;
@property(retain, nonatomic) NSArray *requestedFields; // @synthesize requestedFields=_requestedFields;
@property(retain, nonatomic) CKRecordZoneID *zoneID; // @synthesize zoneID=_zoneID;
@property(nonatomic) unsigned long long limit; // @synthesize limit=_limit;
@property(retain, nonatomic) NSData *cursor; // @synthesize cursor=_cursor;
@property(retain, nonatomic) CKQuery *query; // @synthesize query=_query;
@property(retain, nonatomic) NSArray *queryResponses; // @synthesize queryResponses=_queryResponses;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)zoneIDsToLock;
- (_Bool)allowsAnonymousAccount;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithQuery:(id)arg1 cursor:(id)arg2 limit:(unsigned long long)arg3 requestedFields:(id)arg4 zoneID:(id)arg5;

@end

@interface CKDRecordCache : CKSQLite
{
    CKDClientContext *_context;
    long long _scope;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) long long scope; // @synthesize scope=_scope;
@property(retain, nonatomic) CKDClientContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)clearAssetAuthTokensForRecordWithID:(id)arg1;
- (void)clearAllRecordsForZoneWithID:(id)arg1;
- (void)clearAllRecords;
- (void)deleteRecordWithID:(id)arg1;
- (id)etagForRecordID:(id)arg1 requiredKeys:(id)arg2;
- (void)addRecord:(id)arg1 knownUserKeys:(id)arg2;
- (id)recordsWithIDs:(id)arg1 requiredKeys:(id)arg2;
- (id)recordWithID:(id)arg1 requiredKeys:(id)arg2;
- (id)_trimRecord:(id)arg1 toRequiredKeys:(id)arg2;
- (id)_recordWithID:(id)arg1 requiredKeys:(id)arg2;
- (_Bool)_cachedRecordHasValidAssets:(id)arg1 forRequiredKeys:(id)arg2;
- (_Bool)_cachedRecordKnownUserKeyData:(id)arg1 satisfiesRequiredKeys:(id)arg2;
- (id)initWithPath:(id)arg1 queue:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDRecordCachePool : NSObject
{
    NSMutableDictionary *_pools;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_expiryTimer;
}

+ (id)sharedPool;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *expiryTimer; // @synthesize expiryTimer=_expiryTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSMutableDictionary *pools; // @synthesize pools=_pools;
- (void).cxx_destruct;
- (void)clearAllCachesForContext:(id)arg1;
- (void)releaseCache:(id)arg1;
- (id)acquireCacheWithContext:(id)arg1 scope:(long long)arg2;
- (id)_poolForContext:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDRecordFetcher : CKDDatabaseOperation
{
    _Bool _fetchAssetContents;
    _Bool _preserveOrdering;
    NSArray *_recordResponsesToFetch;
    NSSet *_desiredKeys;
    CDUnknownBlockType _recordFetchedBlock;
    NSObject<OS_dispatch_group> *_fetchGroup;
    NSMutableDictionary *_fetchedRecordInfoByRecordID;
    NSMutableArray *_recordIDsToFetch;
}

@property(retain, nonatomic) NSMutableArray *recordIDsToFetch; // @synthesize recordIDsToFetch=_recordIDsToFetch;
@property(retain, nonatomic) NSMutableDictionary *fetchedRecordInfoByRecordID; // @synthesize fetchedRecordInfoByRecordID=_fetchedRecordInfoByRecordID;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *fetchGroup; // @synthesize fetchGroup=_fetchGroup;
@property(copy, nonatomic) CDUnknownBlockType recordFetchedBlock; // @synthesize recordFetchedBlock=_recordFetchedBlock;
@property(retain, nonatomic) NSSet *desiredKeys; // @synthesize desiredKeys=_desiredKeys;
@property(nonatomic) _Bool preserveOrdering; // @synthesize preserveOrdering=_preserveOrdering;
@property(nonatomic) _Bool fetchAssetContents; // @synthesize fetchAssetContents=_fetchAssetContents;
@property(retain, nonatomic) NSArray *recordResponsesToFetch; // @synthesize recordResponsesToFetch=_recordResponsesToFetch;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_flushFetchedRecordsToConsumer;
- (void)_fetchRecordsFromServer:(id)arg1 fullRecords:(id)arg2;
- (_Bool)shouldCheckAppVersion;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDRecordResponse : NSObject
{
    CKRecordID *_recordID;
    NSString *_etag;
    CKRecord *_record;
}

@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
@property(retain, nonatomic) NSString *etag; // @synthesize etag=_etag;
@property(retain, nonatomic) CKRecordID *recordID; // @synthesize recordID=_recordID;
- (void).cxx_destruct;
- (id)description;
- (id)CKPropertiesDescription;

@end

__attribute__((visibility("hidden")))
@interface CKDRepairZonePCSOperation : CKDDatabaseOperation
{
    CDUnknownBlockType _zonePCSRepairProgressBlock;
    NSArray *_zoneIDs;
    NSMutableArray *_fetchedZones;
    NSMutableArray *_fixedZones;
    NSMutableDictionary *_pcsInfoByZoneID;
}

@property(retain, nonatomic) NSMutableDictionary *pcsInfoByZoneID; // @synthesize pcsInfoByZoneID=_pcsInfoByZoneID;
@property(retain, nonatomic) NSMutableArray *fixedZones; // @synthesize fixedZones=_fixedZones;
@property(retain, nonatomic) NSMutableArray *fetchedZones; // @synthesize fetchedZones=_fetchedZones;
@property(retain, nonatomic) NSArray *zoneIDs; // @synthesize zoneIDs=_zoneIDs;
@property(copy, nonatomic) CDUnknownBlockType zonePCSRepairProgressBlock; // @synthesize zonePCSRepairProgressBlock=_zonePCSRepairProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_fetchZones;
- (void)_checkZonePCS;
- (id)_checkPCSDataForZone:(id)arg1;
- (void)_uploadRepairedZones;
- (id)nameForState:(unsigned long long)arg1;
- (_Bool)makeStateTransition;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDRequestHeader : NSObject <NSSecureCoding>
{
    NSDictionary *_headerDict;
    NSString *_method;
    NSURL *_url;
    NSString *_sessionConfigurationIdentifier;
    unsigned long long _urlSessionTaskIdentifier;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) unsigned long long urlSessionTaskIdentifier; // @synthesize urlSessionTaskIdentifier=_urlSessionTaskIdentifier;
@property(retain, nonatomic) NSString *sessionConfigurationIdentifier; // @synthesize sessionConfigurationIdentifier=_sessionConfigurationIdentifier;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) NSString *method; // @synthesize method=_method;
@property(retain, nonatomic) NSDictionary *headerDict; // @synthesize headerDict=_headerDict;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDResetUserPrivacySettingsOperation : CKDOperation
{
}

- (void)main;
- (_Bool)shouldCheckAppVersion;

@end

__attribute__((visibility("hidden")))
@interface CKDResetUserPrivacySettingsURLRequest : CKDURLRequest
{
}

- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;

@end

__attribute__((visibility("hidden")))
@interface CKDSaveAssetPackagesOperation : CKDDatabaseOperation
{
    NSArray *_packages;
    CDUnknownBlockType _assetPackageSavedProgressBlock;
    NSMutableArray *_packagesToSave;
    NSOperationQueue *_operationQueue;
    NSMutableArray *_manifestsToRemove;
    id <CKDCancelling> _cancelToken;
}

@property(retain) id <CKDCancelling> cancelToken; // @synthesize cancelToken=_cancelToken;
@property(retain, nonatomic) NSMutableArray *manifestsToRemove; // @synthesize manifestsToRemove=_manifestsToRemove;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSMutableArray *packagesToSave; // @synthesize packagesToSave=_packagesToSave;
@property(copy, nonatomic) CDUnknownBlockType assetPackageSavedProgressBlock; // @synthesize assetPackageSavedProgressBlock=_assetPackageSavedProgressBlock;
@property(copy, nonatomic) NSArray *packages; // @synthesize packages=_packages;
- (void).cxx_destruct;
- (void)main;
- (void)cancel;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_saveNextAssetPackage;
- (void)_removeManifests;
- (void)_planSectionsForPackage:(id)arg1;
- (id)_MMCSItemsFromPackageItems:(id)arg1 package:(id)arg2;
- (_Bool)_handleSectionItemSaved:(id)arg1 package:(id)arg2 error:(id *)arg3;
- (void)_saveMMCSManifestItem:(id)arg1 andMMCSSectionItems:(id)arg2 forPackage:(id)arg3;
- (void)_fetchAuthTokensForPackage:(id)arg1;
- (void)_finishPackage:(id)arg1 assets:(id)arg2 error:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDSaveAssetsOperation : CKDDatabaseOperation
{
    _Bool _shouldAutomaticallyRetryNetworkErrors;
    CDUnknownBlockType _progressBlock;
    NSArray *_assetsToSave;
    NSMutableArray *_assetsToRetry;
    CKDMMCSItemGroupSetContext *_MMCSContext;
}

+ (_Bool)_isTransientError:(id)arg1;
@property(retain) CKDMMCSItemGroupSetContext *MMCSContext; // @synthesize MMCSContext=_MMCSContext;
@property(retain, nonatomic) NSMutableArray *assetsToRetry; // @synthesize assetsToRetry=_assetsToRetry;
@property(retain, nonatomic) NSArray *assetsToSave; // @synthesize assetsToSave=_assetsToSave;
@property(nonatomic) _Bool shouldAutomaticallyRetryNetworkErrors; // @synthesize shouldAutomaticallyRetryNetworkErrors=_shouldAutomaticallyRetryNetworkErrors;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (void).cxx_destruct;
- (void)main;
- (void)_handleError:(id)arg1 forMMCSItems:(id)arg2;
- (void)_handleError:(id)arg1 forAsset:(id)arg2;
- (_Bool)_shouldRetryError:(id)arg1;
- (void)_retryOrFinishWithError:(id)arg1;
- (void)cancel;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)_handleProgressForMMCSItem:(id)arg1;
- (void)_handleAuthTokensForPutRequest:(id)arg1 items:(id)arg2;
- (void)_handleItemGroupSetRegistered:(id)arg1 items:(id)arg2;
- (id)_getMMCSItemsFromItemsToSave;
- (void)_saveAssets;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2 assetsToSave:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKDSaveUserPrivacySettingsOperation : CKDOperation
{
    long long _discoverable;
    NSString *_applicationBundleID;
}

@property(copy, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(nonatomic) long long discoverable; // @synthesize discoverable=_discoverable;
- (void).cxx_destruct;
- (void)main;
- (_Bool)shouldCheckAppVersion;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDSaveUserPrivacySettingsOperationInfo : CKOperationInfo
{
    long long _discoverable;
    NSString *_applicationBundleID;
}

@property(copy, nonatomic) NSString *applicationBundleID; // @synthesize applicationBundleID=_applicationBundleID;
@property(nonatomic) long long discoverable; // @synthesize discoverable=_discoverable;
- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDSaveUserPrivacySettingsURLRequest : CKDURLRequest
{
    NSString *_bundleID;
    long long _discoverableTrinary;
}

@property(nonatomic) long long discoverableTrinary; // @synthesize discoverableTrinary=_discoverableTrinary;
@property(copy, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (void)setDiscoverable:(_Bool)arg1;
- (id)init;

@end

@interface CKDServerConfiguration : NSObject <CKPropertyCoding>
{
    NSDate *_expiry;
    NSMutableDictionary *_values;
    NSMutableDictionary *_allowedAppVersionsCache;
}

@property(retain, nonatomic) NSMutableDictionary *allowedAppVersionsCache; // @synthesize allowedAppVersionsCache=_allowedAppVersionsCache;
@property(retain, nonatomic) NSMutableDictionary *values; // @synthesize values=_values;
@property(retain, nonatomic) NSDate *expiry; // @synthesize expiry=_expiry;
- (void).cxx_destruct;
- (id)dictionaryPropertyEncoding;
- (id)initWithPropertyDictionary:(id)arg1;
- (unsigned long long)maxBatchSizeForContainer:(id)arg1;
- (id)flowControlRegenerationForContainer:(id)arg1;
- (id)flowControlBudgetForContainer:(id)arg1;
- (long long)tokenRegisterDaysForContainer:(id)arg1;
- (_Bool)shouldSignForMessageType:(int)arg1 inDatabaseScope:(long long)arg2 forContainer:(id)arg3;
- (id)mescalSessionURLForContainer:(id)arg1;
- (id)mescalCertURLForContainer:(id)arg1;
- (unsigned int)mescalServerVersionForContainer:(id)arg1;
- (_Bool)applicationWithBundleID:(id)arg1 canSyncUsingVersion:(id)arg2 forContainer:(id)arg3;
- (id)valueForKeyPath:(id)arg1 forContainer:(id)arg2;
- (_Bool)isExpired;
@property(readonly, copy) NSString *description;
- (id)initWithValues:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDServerConfigurationManager : NSObject
{
    _Bool _usesBackgroundSession;
    _Bool _allowsCellularAccess;
    int _iCloudEnvNotifToken;
    NSObject<OS_dispatch_source> *_switchNotifSource;
    NSOperationQueue *_configurationQueue;
    NSMutableDictionary *_containerOperations;
    CKDServerConfiguration *_globalConfiguration;
    CKDGlobalConfigurationOperation *_globalConfigurationOp;
    NSOperationQueue *_containerSpecificInfoQueue;
    NSMutableDictionary *_containerSpecificInfos;
    NSMutableDictionary *_containerSpecificInfoOperations;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)expireConfigurationForContext:(id)arg1;
+ (void)expireGlobalConfiguration;
+ (id)sharedManagerUsingBackgroundSession:(_Bool)arg1 allowsCellularAccess:(_Bool)arg2;
@property(nonatomic) int iCloudEnvNotifToken; // @synthesize iCloudEnvNotifToken=_iCloudEnvNotifToken;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSMutableDictionary *containerSpecificInfoOperations; // @synthesize containerSpecificInfoOperations=_containerSpecificInfoOperations;
@property(retain, nonatomic) NSMutableDictionary *containerSpecificInfos; // @synthesize containerSpecificInfos=_containerSpecificInfos;
@property(retain, nonatomic) NSOperationQueue *containerSpecificInfoQueue; // @synthesize containerSpecificInfoQueue=_containerSpecificInfoQueue;
@property(retain, nonatomic) CKDGlobalConfigurationOperation *globalConfigurationOp; // @synthesize globalConfigurationOp=_globalConfigurationOp;
@property(retain, nonatomic) CKDServerConfiguration *globalConfiguration; // @synthesize globalConfiguration=_globalConfiguration;
@property(retain, nonatomic) NSMutableDictionary *containerOperations; // @synthesize containerOperations=_containerOperations;
@property(retain, nonatomic) NSOperationQueue *configurationQueue; // @synthesize configurationQueue=_configurationQueue;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) _Bool usesBackgroundSession; // @synthesize usesBackgroundSession=_usesBackgroundSession;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *switchNotifSource; // @synthesize switchNotifSource=_switchNotifSource;
- (void).cxx_destruct;
- (void)_expireConfigurationForContext:(id)arg1;
- (void)_expireGlobalConfiguration;
- (void)_behaviorOptionsChanged:(id)arg1;
- (void)_dropAllConfigurations;
- (void)containerScopedUserIDForContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)publicURLForServerType:(long long)arg1 context:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)configurationForContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)fetchContainerSpecificInfoForContext:(id)arg1 needUserID:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)fetchGlobalConfigWithContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
- (void)_watchForSwitchPrefFileChanges;
- (id)_uniqueStringForContainerAndAccount:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CKDShareInvitationResponseOperation : CKDOperation
{
    CDUnknownBlockType _shareInvitationResponseProgressBlock;
    NSArray *_invitationsToAccept;
    NSArray *_invitationsToDecline;
    NSMutableDictionary *_invitationsByInvitationID;
}

@property(retain, nonatomic) NSMutableDictionary *invitationsByInvitationID; // @synthesize invitationsByInvitationID=_invitationsByInvitationID;
@property(retain, nonatomic) NSArray *invitationsToDecline; // @synthesize invitationsToDecline=_invitationsToDecline;
@property(retain, nonatomic) NSArray *invitationsToAccept; // @synthesize invitationsToAccept=_invitationsToAccept;
@property(copy, nonatomic) CDUnknownBlockType shareInvitationResponseProgressBlock; // @synthesize shareInvitationResponseProgressBlock=_shareInvitationResponseProgressBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleInvitationRespondedTo:(id)arg1 invitationID:(id)arg2 responseCode:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDShareInvitationResponseURLRequest : CKDURLRequest
{
    CDUnknownBlockType _invitationResponsePostedBlock;
    NSArray *_invitationsToAccept;
    NSArray *_invitationsToDecline;
    NSMutableDictionary *_invitationIDByRequestID;
}

@property(retain, nonatomic) NSMutableDictionary *invitationIDByRequestID; // @synthesize invitationIDByRequestID=_invitationIDByRequestID;
@property(retain, nonatomic) NSArray *invitationsToDecline; // @synthesize invitationsToDecline=_invitationsToDecline;
@property(retain, nonatomic) NSArray *invitationsToAccept; // @synthesize invitationsToAccept=_invitationsToAccept;
@property(copy, nonatomic) CDUnknownBlockType invitationResponsePostedBlock; // @synthesize invitationResponsePostedBlock=_invitationResponsePostedBlock;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithInvitationsToAccept:(id)arg1 invitationsToDecline:(id)arg2;

@end

@interface CKDSystemAvailabilityMonitor : NSObject
{
    _Bool _systemIsAvailable;
    NSMutableSet *_watchers;
    NSObject<OS_dispatch_queue> *_availabilityQueue;
}

+ (id)sharedMonitor;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *availabilityQueue; // @synthesize availabilityQueue=_availabilityQueue;
@property(retain, nonatomic) NSMutableSet *watchers; // @synthesize watchers=_watchers;
@property _Bool systemIsAvailable; // @synthesize systemIsAvailable=_systemIsAvailable;
- (void).cxx_destruct;
- (void)unregisterWatcher:(id)arg1;
- (void)registerWatcher:(id)arg1;
- (_Bool)_systemMayNowBeReady;
- (void)_notifyWatchersOfStateChange;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKDTokenDeletionURLRequest : CKDURLRequest
{
    NSData *_token;
    NSString *_bundleID;
}

@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) NSData *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (_Bool)requiresTokenRegistration;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithToken:(id)arg1 bundleID:(id)arg2;

@end

@interface CKDTokenRegistrationScheduler : NSObject <CKDSystemAvailabilityWatcher>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_callbackBlocks;
    NSMutableDictionary *_callbackTimers;
    NSObject<OS_dispatch_source> *_scheduleTimer;
    CKDURLRequest *_request;
}

+ (id)sharedScheduler;
@property(retain, nonatomic) CKDURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *scheduleTimer; // @synthesize scheduleTimer=_scheduleTimer;
@property(retain, nonatomic) NSMutableDictionary *callbackTimers; // @synthesize callbackTimers=_callbackTimers;
@property(retain, nonatomic) NSMutableDictionary *callbackBlocks; // @synthesize callbackBlocks=_callbackBlocks;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)ensureTokenRefreshForAppContainerTuple:(id)arg1 apsEnvironmentString:(id)arg2 useAPSPublicToken:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)forceTokenRefreshForAllClients;
- (void)unregisterAllTokensWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)unregisterTokenForAppContainerTuple:(id)arg1;
- (void)handlePushTokenDidUpdate:(id)arg1;
- (void)handlePublicPushTokenDidUpdate:(id)arg1;
- (void)refreshAllClientsNow;
- (void)scheduleTokenRefresh;
- (void)_scheduleTokenRefresh;
- (void)_removeToken:(id)arg1 appContainerTuple:(id)arg2 apsEnvironmentString:(id)arg3 usesAPSPublicToken:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_refreshToken:(id)arg1 appContainerTuple:(id)arg2 apsEnvironmentString:(id)arg3 usesAPSPublicToken:(long long)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)tokenRefreshChanged;
- (void)systemAvailabilityChanged:(_Bool)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDTokenRegistrationURLRequest : CKDURLRequest
{
    NSData *_token;
    NSString *_bundleID;
    NSString *_apsEnvironmentString;
}

@property(retain, nonatomic) NSString *apsEnvironmentString; // @synthesize apsEnvironmentString=_apsEnvironmentString;
@property(retain, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) NSData *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (_Bool)requiresTokenRegistration;
- (id)flowControlKey;
- (id)initWithToken:(id)arg1 bundleID:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDURLSessionPool : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegatePrivate, NSURLSessionDataDelegate>
{
    NSMutableDictionary *_delegateByTaskDescription;
    NSMutableDictionary *_sessionByIdentifier;
    NSMutableDictionary *_ephemeralSessionByTaskDescription;
    NSMutableDictionary *_sessionConfigurationReferenceByName;
    NSMutableDictionary *_sessionConfigurationReferenceByIdentifier;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)sharedURLSessionPool;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 _conditionalRequirementsChanged:(_Bool)arg3;
- (void)URLSession:(id)arg1 _taskIsWaitingForConnection:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 _willSendRequestForEstablishedConnection:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)_performAsyncOnDelegateOfSession:(id)arg1 task:(id)arg2 fromSelector:(SEL)arg3 block:(CDUnknownBlockType)arg4;
- (void)invalidateDataTask:(id)arg1;
- (id)dataTaskWithTaskDescription:(id)arg1 configuration:(id)arg2 request:(id)arg3 delegate:(id)arg4;
- (id)_URLSessionWithConfiguration:(id)arg1 forDelegate:(id)arg2;
- (void)checkinSessionConfiguration:(id)arg1;
- (void)setSessionConfiguration:(id)arg1 forName:(id)arg2;
- (id)checkoutSessionConfigurationWithName:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CKDUpdatePulseURLRequest : CKDURLRequest
{
    int _state;
    unsigned long long _customStatusFlags;
    NSString *_lastETag;
    NSData *_pushToken;
    NSString *_apsEnvironmentString;
    double _ttl;
    CDUnknownBlockType _updatePulseProgressBlock;
    CKShareID *_shareID;
}

@property(nonatomic) int state; // @synthesize state=_state;
@property(copy, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(copy, nonatomic) CDUnknownBlockType updatePulseProgressBlock; // @synthesize updatePulseProgressBlock=_updatePulseProgressBlock;
@property(nonatomic) double ttl; // @synthesize ttl=_ttl;
@property(copy, nonatomic) NSString *apsEnvironmentString; // @synthesize apsEnvironmentString=_apsEnvironmentString;
@property(copy, nonatomic) NSData *pushToken; // @synthesize pushToken=_pushToken;
@property(copy, nonatomic) NSString *lastETag; // @synthesize lastETag=_lastETag;
@property(nonatomic) unsigned long long customStatusFlags; // @synthesize customStatusFlags=_customStatusFlags;
- (void).cxx_destruct;
- (void)requestDidParseNodeFailure:(id)arg1;
- (id)requestDidParseProtobufObject:(id)arg1;
- (id)requestOperations;
- (id)requestOperationClasses;
- (int)operationType;
- (id)initWithShareID:(id)arg1 state:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDUpdateUserPresenceOperation : CKDOperation
{
    _Bool _isLurk;
    CDUnknownBlockType _updateCompletionBlock;
    CKShareID *_shareID;
    long long _status;
    long long _customStatusFlags;
    NSString *_lastETag;
    double _ttl;
}

@property(nonatomic) double ttl; // @synthesize ttl=_ttl;
@property(nonatomic) _Bool isLurk; // @synthesize isLurk=_isLurk;
@property(retain, nonatomic) NSString *lastETag; // @synthesize lastETag=_lastETag;
@property(nonatomic) long long customStatusFlags; // @synthesize customStatusFlags=_customStatusFlags;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(retain, nonatomic) CKShareID *shareID; // @synthesize shareID=_shareID;
@property(copy, nonatomic) CDUnknownBlockType updateCompletionBlock; // @synthesize updateCompletionBlock=_updateCompletionBlock;
- (void).cxx_destruct;
- (void)_finishOnCallbackQueueWithError:(id)arg1;
- (void)main;
- (void)_handleUserPresences:(id)arg1 etag:(id)arg2 response:(id)arg3;
- (id)initWithOperationInfo:(id)arg1 clientContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKDZoneGatekeeper : NSObject
{
    NSMutableDictionary *_zoneIDsToGateHolders;
    NSMutableArray *_waiterWrappers;
}

@property(retain, nonatomic) NSMutableArray *waiterWrappers; // @synthesize waiterWrappers=_waiterWrappers;
@property(retain, nonatomic) NSMutableDictionary *zoneIDsToGateHolders; // @synthesize zoneIDsToGateHolders=_zoneIDsToGateHolders;
- (void).cxx_destruct;
- (id)statusReport;
- (_Bool)hasStatusToReport;
- (void)relinquishLocksForWaiter:(id)arg1;
- (void)registerWaiter:(id)arg1 forZoneIDs:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface CKEncryptedData (Logging)
- (id)_prettyDictionaryRepresentation;
@end

@interface CKLocationSortDescriptor (Conversion)
- (id)CKDPQuerySort;
@end

@interface CKPackage (Logging)
- (id)_prettyDictionaryRepresentation;
@end

@interface CKPackageManifest : NSObject
{
}

+ (_Bool)writePackage:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
+ (id)packageWithContentsOfFile:(id)arg1 error:(id *)arg2;
+ (_Bool)readContentsOfFile:(id)arg1 intoPackage:(id)arg2 error:(id *)arg3;

@end

__attribute__((visibility("hidden")))
@interface CKQueuedFetch : NSObject
{
    _Bool _allowsCellularAccess;
    _Bool _isFinished;
    NSDate *_startDate;
    NSDate *_lastRequestDate;
    CKDClientContext *_context;
    NSOperationQueue *_operationQueue;
    long long _scope;
    long long _usesBackgroundSession;
    long long _qos;
    NSMutableDictionary *_completionHandlersByRecordID;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSString *_deviceIdentifier;
    CKDFetchRecordsOperation *_fetchOp;
    NSObject<OS_dispatch_queue> *_callbackQueue;
}

@property(nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) CKDFetchRecordsOperation *fetchOp; // @synthesize fetchOp=_fetchOp;
@property(retain, nonatomic) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(retain, nonatomic) NSString *sourceApplicationSecondaryIdentifier; // @synthesize sourceApplicationSecondaryIdentifier=_sourceApplicationSecondaryIdentifier;
@property(retain, nonatomic) NSString *sourceApplicationBundleIdentifier; // @synthesize sourceApplicationBundleIdentifier=_sourceApplicationBundleIdentifier;
@property(retain, nonatomic) NSMutableDictionary *completionHandlersByRecordID; // @synthesize completionHandlersByRecordID=_completionHandlersByRecordID;
@property(nonatomic) long long qos; // @synthesize qos=_qos;
@property(nonatomic) long long usesBackgroundSession; // @synthesize usesBackgroundSession=_usesBackgroundSession;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) long long scope; // @synthesize scope=_scope;
@property(nonatomic) __weak NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak CKDClientContext *context; // @synthesize context=_context;
@property(retain, nonatomic) NSDate *lastRequestDate; // @synthesize lastRequestDate=_lastRequestDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (void)start;
- (void)addRequestForRecordID:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)canBeUsedForOperation:(id)arg1;
- (id)description;
- (id)CKPropertiesDescription;
- (int)numberOfCallbacks;
- (id)initWithOperation:(id)arg1 context:(id)arg2 operationQueue:(id)arg3;

@end

@interface CKRecordGraph : NSObject
{
    NSMutableSet *_nodes;
    NSArray *_sortedRecords;
}

@property(retain, nonatomic) NSArray *sortedRecords; // @synthesize sortedRecords=_sortedRecords;
@property(copy, nonatomic) NSMutableSet *nodes; // @synthesize nodes=_nodes;
- (void).cxx_destruct;
- (id)description;
- (id)recordsByTopologicalSortWithError:(id *)arg1;
- (id)init;
- (_Bool)addRecords:(id)arg1 error:(id *)arg2;

@end

__attribute__((visibility("hidden")))
@interface CKRecordGraphNode : NSObject
{
    NSMutableSet *_edges;
    long long _indegree;
    CKRecord *_record;
}

@property(retain, nonatomic) CKRecord *record; // @synthesize record=_record;
@property(nonatomic) long long indegree; // @synthesize indegree=_indegree;
@property(copy, nonatomic) NSMutableSet *edges; // @synthesize edges=_edges;
- (void).cxx_destruct;
- (id)description;
- (id)CKPropertiesDescription;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CKWaiterWrapper : NSObject
{
    id _waiter;
    NSArray *_zoneIDs;
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSArray *zoneIDs; // @synthesize zoneIDs=_zoneIDs;
@property(retain, nonatomic) id waiter; // @synthesize waiter=_waiter;
- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface CKWatchdog : NSObject
{
    _Bool _scheduled;
    _Bool _running;
    double _interval;
    double _timeoutInterval;
    CDUnknownBlockType _timeoutCallback;
    NSString *_mode;
    NSOperationQueue *_operationQueue;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSRunLoop *_runLoop;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_timer;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(nonatomic) _Bool scheduled; // @synthesize scheduled=_scheduled;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSString *mode; // @synthesize mode=_mode;
@property(copy, nonatomic) CDUnknownBlockType timeoutCallback; // @synthesize timeoutCallback=_timeoutCallback;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) double interval; // @synthesize interval=_interval;
- (void).cxx_destruct;
- (void)scheduleInRunLoop:(id)arg1;
- (void)scheduleInDispatchQueue:(id)arg1;
- (void)scheduleInOperationQueue:(id)arg1;
- (void)_scheduleTest;
- (void)_scheduleTimeout;
- (void)_invokeCallback;
- (void)_cancelTimeout;
- (void)resume;
- (void)suspend;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CountedReference : NSObject
{
    _Bool _didScheduleDealloc;
    id _referencedObject;
    NSString *_name;
    unsigned long long _referenceCount;
}

@property(nonatomic) _Bool didScheduleDealloc; // @synthesize didScheduleDealloc=_didScheduleDealloc;
@property(nonatomic) unsigned long long referenceCount; // @synthesize referenceCount=_referenceCount;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) id referencedObject; // @synthesize referencedObject=_referencedObject;
- (void).cxx_destruct;

@end

@interface NSComparisonPredicate (Conversion)
- (id)CKDPQueryFiltersWithTranslator:(id)arg1 error:(id *)arg2;
- (id)_parseBasicOperatorFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseFullTextSearchFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (unsigned long long)_comparisonOptionForString:(id)arg1;
- (id)_parseBetweenFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseBeginsWithFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseListContainsAllFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseListContainsAnyFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseInFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseListContainsFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_parseNearFiltersWithTranslator:(id)arg1 withError:(id *)arg2;
- (id)_nearFilterWithKey:(id)arg1 location:(id)arg2 radius:(double)arg3 translator:(id)arg4;
@end

@interface NSCompoundPredicate (Conversion)
- (id)CKDPQueryFiltersWithTranslator:(id)arg1 error:(id *)arg2;
@end

@interface NSDictionary (CloudKitExtensions)
- (id)CKObjectForKeyCaseInsensitive:(id)arg1;
@end

@interface NSDictionary (QueryString)
- (id)CKPercentEscapedQueryString;
@end

@interface NSExpression (Conversion)
+ (id)expressionWithCKDPRecordFieldValue:(id)arg1 translator:(id)arg2;
@end

@interface NSPredicate (Conversion)
+ (id)predicateWithCKDPQueryFilters:(id)arg1 translator:(id)arg2;
+ (id)predicateWithSortedCKDPQueryFilters:(id)arg1 translator:(id)arg2;
- (id)CKDPQueryFiltersWithTranslator:(id)arg1 error:(id *)arg2;
@end

@interface NSSortDescriptor (Conversion)
- (id)CKDPQuerySort;
@end

@interface NSStream (BoundPairAdditions)
+ (void)createBoundInputStream:(id *)arg1 outputStream:(id *)arg2 bufferSize:(unsigned long long)arg3;
@end

@interface NSString (CKConversion)
- (id)CKDPIdentifier_Zone;
- (id)CKDPIdentifier_CommentId;
- (id)CKDPIdentifier_ShareId;
- (id)CKDPIdentifier_Subscription;
- (id)CKDPIdentifier_Device;
- (id)CKDPIdentifier_User;
- (id)CKDPIdentifier_Record;
- (id)CKDPIdentifier_Raw;
- (id)_CKDPIdentifierWithType:(int)arg1;
@end

