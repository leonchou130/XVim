//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct HSVColor {
    double _field1;
    double _field2;
    double _field3;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
} CDStruct_b31ca263;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
// UUID: DBE28146-0853-35E4-977E-3254A4109164
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 194.14.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ChallengeIssueServiceViewControllerDelegate <GKServiceViewControllerDelegate>
- (void)didFinishWithPlayerInternals:(NSArray *)arg1 message:(NSString *)arg2;
@end

@protocol GKAuthenticateViewController <NSObject>
@property(nonatomic) _Bool disablesSignIn;
@property(copy, nonatomic) CDUnknownBlockType completionHandler;
- (void)showPasswordChangeAlertWithURL:(NSURL *)arg1;
@end

@protocol GKBrushIdentification <NSObject>
- (NSString *)renderedImageIdentifier;
@end

@protocol GKChallengeEventHandlerUIDelegate <NSObject>

@optional
- (void)showLocallyCompletedBannerForIssuingPlayer:(GKPlayer *)arg1 challenge:(GKChallenge *)arg2 handler:(void (^)(void))arg3;
- (void)showRemotelyCompletedBannerForReceivingPlayer:(GKPlayer *)arg1 challenge:(GKChallenge *)arg2 handler:(void (^)(void))arg3;
- (void)showReceivedBannerForIssuingPlayer:(GKPlayer *)arg1 challenge:(GKChallenge *)arg2 handler:(void (^)(void))arg3;
@end

@protocol GKContentRefresh <NSObject>
- (_Bool)_gkShouldRefreshContentsForDataType:(unsigned int)arg1 userInfo:(NSDictionary *)arg2;
- (void)_gkRefreshContentsForDataType:(unsigned int)arg1 userInfo:(NSDictionary *)arg2;
- (void)_gkResetContents;
- (void)_gkUpdateContentsWithCompletionHandlerAndError:(void (^)(NSError *))arg1;

@optional
- (void)_gkForceNextContentUpdate;
- (void)_gkSetContentsNeedUpdateWithHandler:(void (^)(void))arg1;
@end

@protocol GKFriendRequestComposeViewControllerDelegateClientSide <GKServiceViewControllerDelegate>
- (void)didRequestFriends:(NSArray *)arg1;
@end

@protocol GKFriendRequestComposeViewControllerDelegateServiceSide <GKRemoteViewControllerDelegate>
- (void)addRecipientsWithEmailAddresses:(NSArray *)arg1;
- (void)addRecipientPlayerInternals:(NSArray *)arg1;
@end

@protocol GKGameCenterViewControllerDelegate <GKRemoteViewControllerDelegate>
- (void)setAPIControllerFlags:(CDStruct_b31ca263)arg1;
@end

@protocol GKMatchDelegate <NSObject>

@optional
- (_Bool)match:(GKMatch *)arg1 shouldReinvitePlayer:(NSString *)arg2;
- (_Bool)match:(GKMatch *)arg1 shouldReinviteDisconnectedPlayer:(GKPlayer *)arg2;
- (void)match:(GKMatch *)arg1 didFailWithError:(NSError *)arg2;
- (void)match:(GKMatch *)arg1 player:(NSString *)arg2 didChangeState:(long long)arg3;
- (void)match:(GKMatch *)arg1 player:(GKPlayer *)arg2 didChangeConnectionState:(long long)arg3;
- (void)match:(GKMatch *)arg1 didReceiveData:(NSData *)arg2 fromPlayer:(NSString *)arg3;
- (void)match:(GKMatch *)arg1 didReceiveData:(NSData *)arg2 fromRemotePlayer:(GKPlayer *)arg3;
@end

@protocol GKMatchmakerRemoteDelegate
- (void)applicationWillEnterForeground;
- (void)setNearbyPlayer:(NSString *)arg1 reachable:(_Bool)arg2;
- (void)inviterCancelled;
- (void)setAutomatchFailedWithError:(NSError *)arg1;
- (void)setInvitesFailedWithError:(NSError *)arg1;
- (void)setPlayer:(GKPlayerInternal *)arg1 sentData:(NSData *)arg2;
- (void)setPlayer:(GKPlayerInternal *)arg1 connected:(_Bool)arg2;
- (void)setPlayer:(GKPlayerInternal *)arg1 responded:(long long)arg2;
- (void)setAutomatchPlayerCount:(long long)arg1;
- (void)setDefaultInvitationMessage:(NSString *)arg1;
- (void)setExistingPlayers:(NSArray *)arg1;
- (void)setAcceptedInviteInternal:(GKInviteInternal *)arg1;
- (void)setMatchRequestInternal:(GKMatchRequestInternal *)arg1;
- (void)setHosted:(_Bool)arg1;
@end

@protocol GKMatchmakerRemoteViewControllerDelegate <GKMatchmakerRemoteDelegate, GKRemoteViewControllerDelegate>
@end

@protocol GKMatchmakerServiceViewControllerDelegate <GKServiceViewControllerDelegate>
- (void)setBrowsingForNearbyPlayers:(_Bool)arg1;
- (void)sendData:(NSData *)arg1;
- (void)cancelInviteToPlayer:(GKPlayerInternal *)arg1;
- (void)startMatchingWithRequest:(GKMatchRequestInternal *)arg1;
- (void)finishWithError:(NSError *)arg1;
@end

@protocol GKPlayerPhotoContainer <NSObject>
@property(retain, nonatomic) GKPlayer *player;
- (void)refreshPhotoWithCompletionHandler:(void (^)(_Bool))arg1;
- (void)refreshPhoto;
@end

@protocol GKRemoteSignInViewControllerDelegate <GKRemoteViewControllerDelegate>
@end

@protocol GKRemoteViewControllerDelegate <NSObject>
@property(retain, nonatomic) GKGame *game;
- (void)setIntialState:(NSDictionary *)arg1 withReply:(void (^)(_Bool))arg2;
- (void)setValue:(NSObject *)arg1 forKeyPath:(NSString *)arg2 withReply:(void (^)(_Bool))arg3;
- (void)remoteViewControllerDidCancel;
- (void)remoteViewControllerDidFinish;

@optional
- (void)nudge;
@end

@protocol GKScreenConfigurationListener <NSObject>
- (void)greatestScreenScaleDidChange:(double)arg1;
@end

@protocol GKServiceViewControllerDelegate <NSObject>
@property(retain, nonatomic) GKGame *game;
- (void)remoteViewControllerIsFinishing;
- (void)remoteViewControllerIsCanceling;

@optional
- (void)performActivityType:(NSString *)arg1 withActivityItemsAndSharingInfo:(NSDictionary *)arg2;
@end

@protocol GKTextStyleReplay <NSObject>
@property(retain, nonatomic) GKTextStyle *baseStyle;
- (void)replayAndApplyStyleWithSystemContentChange:(_Bool)arg1;
@end

@protocol GKTurnBasedRemoteViewControllerDelegate <GKRemoteViewControllerDelegate>
- (void)setShowExistingMatches:(_Bool)arg1;
- (void)setMatchRequestInternal:(GKMatchRequestInternal *)arg1;
@end

@protocol GKTurnBasedServiceViewControllerDelegate <GKServiceViewControllerDelegate>
- (void)playerQuitMatch:(GKTurnBasedMatchInternal *)arg1;
- (void)finishWithError:(NSError *)arg1;
- (void)finishWithMatch:(GKTurnBasedMatchInternal *)arg1;
@end

@protocol GKURLHandling <NSObject>

@optional
- (void)_gkHandleURLPathComponents:(NSArray *)arg1 query:(NSDictionary *)arg2;
@end

@protocol GameCenterUIServiceViewControllerDelegate <GKServiceViewControllerDelegate>
- (void)getMethodsImplementedByChallengeEventHandlerDelegate:(void (^)(NSArray *, NSError *))arg1;
- (void)playPressedForChallenge:(GKChallengeInternal *)arg1;
- (void)remoteControllerDidSelectLeaderboardTimeScope:(NSNumber *)arg1;
- (void)remoteControllerDidSelectLeaderboardIdentifier:(NSString *)arg1;
- (void)remoteControllerDidChangeViewState:(NSNumber *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol RemoteChallengeIssueViewControllerDelegate <GKRemoteViewControllerDelegate>
- (void)setChallenge:(GKChallenge *)arg1 playerInternals:(NSArray *)arg2 defaultMessage:(NSString *)arg3 forcePicker:(_Bool)arg4;
@end

@protocol SignInServiceViewControllerDelegate <GKServiceViewControllerDelegate>
- (void)unlockRotation;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@interface CALayer (GKAdditions)
- (struct CATransform3D)_gkParentSublayerTransform;
- (id)_gkRecursiveDescription;
- (id)_gkDescriptionWithChildren:(int)arg1;
@end

@interface GKAbbreviatedNumberFormatter : NSNumberFormatter
{
}

- (id)stringForObjectValue:(id)arg1;
- (id)formatForNumberWithAbbreviation;
- (id)abbreviationForThousands;
- (id)abbreviationForMillions;
- (id)abbreviationForBillions;
- (id)bundle;

@end

@interface GKAchievement (GKChallenge)
+ (void)reportAchievements:(id)arg1 withEligibleChallenges:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)selectChallengeablePlayers:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)selectChallengeablePlayerIDs:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)issueChallengeToPlayers:(id)arg1 message:(id)arg2;
- (id)challengeComposeControllerWithPlayers:(id)arg1 message:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)challengeComposeControllerWithMessage:(id)arg1 players:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@end

@interface GKAchievement (Sharing)
- (void)_gkSetSharingInfo:(id)arg1;
- (id)_gkSharingInfo;
- (id)activityViewControllerOperation:(id)arg1;
- (id)activityViewControllerSubject:(id)arg1;
- (long long)activityViewController:(id)arg1 attachmentULRTypeForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemsForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItems:(id)arg1;
- (id)fetchSharingInfo;
- (_Bool)canBeShared;
@end

@interface GKAchievement (UIPrivate)
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showBanner;
- (id)imageURL;
@end

@interface GKAchievementChallenge (UI)
- (id)smallIconURLString;
- (id)iconURLString;
- (id)iconSource;
- (id)detailGoalText;
- (id)composeGoalText;
- (id)listGoalText;
- (id)listTitleText;
- (id)alertGoalText;
@end

@interface GKAchievementDescription (UI)
+ (id)placeholderCompletedAchievementImage;
+ (id)incompleteAchievementImage;
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface GKAchievementDescription (UIPrivate)
- (void)showBanner;
- (id)imageURL;
@end

@interface GKAchievementSharingInfo : NSObject <NSCoding, NSSecureCoding>
{
    _Bool _complete;
    GKAchievement *_achievement;
    GKPlayer *_player;
    GKGame *_game;
    UIImage *_iconImage;
    UIImage *_badgeImage;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool complete; // @synthesize complete=_complete;
@property(retain, nonatomic) UIImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain, nonatomic) UIImage *iconImage; // @synthesize iconImage=_iconImage;
@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;
@property(retain, nonatomic) GKPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) GKAchievement *achievement; // @synthesize achievement=_achievement;
- (id)subjectForEmailActivity;
- (id)thumbnailForActivityType:(id)arg1;
- (id)itemsForActivityType:(id)arg1;
- (id)operationThatBlocksUntilLoaded;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAchievement:(id)arg1 forGame:(id)arg2;
- (void)dealloc;

@end

@interface GKGameCenterViewController : UINavigationController
{
    id <GKGameCenterControllerDelegate> _gameCenterDelegateWeak;
    GKHostedGameCenterViewController *_privateViewController;
    GKRemoteGameCenterViewController *_remoteViewController;
    NSMutableDictionary *_volatileProperties;
    UIAlertController *_alertController;
}

+ (_Bool)accessInstanceVariablesDirectly;
+ (_Bool)_preventsAppearanceProxyCustomization;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) NSMutableDictionary *volatileProperties; // @synthesize volatileProperties=_volatileProperties;
@property(retain, nonatomic) GKRemoteGameCenterViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) GKHostedGameCenterViewController *privateViewController; // @synthesize privateViewController=_privateViewController;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
@property(retain, nonatomic) NSString *leaderboardCategory; // @dynamic leaderboardCategory;
@property(nonatomic) long long leaderboardTimeScope; // @dynamic leaderboardTimeScope;
@property(retain, nonatomic) NSString *leaderboardIdentifier; // @dynamic leaderboardIdentifier;
@property(nonatomic) long long viewState; // @dynamic viewState;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)valueForKey:(id)arg1;
- (void)_flushVolatileProperties;
- (_Bool)_canSetPropertiesOnRemoteViewController;
- (_Bool)_remoteControllerIsPresented;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)_setupChildViewController;
@property(nonatomic) id <GKGameCenterControllerDelegate> gameCenterDelegate; // @synthesize gameCenterDelegate=_gameCenterDelegateWeak;
- (void)dealloc;
- (id)init;
- (void)notifyDelegateOnWillFinish;

@end

@interface GKAchievementViewController : GKGameCenterViewController
{
    id <GKAchievementViewControllerDelegate> _achievementDelegate;
}

@property(nonatomic) id <GKAchievementViewControllerDelegate> achievementDelegate; // @synthesize achievementDelegate=_achievementDelegate;
- (void)notifyDelegateOnWillFinish;
- (void)dealloc;
- (id)init;

@end

@interface GKRemoteViewController : _UIRemoteViewController <GKServiceViewControllerDelegate>
{
    _Bool _didSetRemoteGame;
    _Bool _viewDidAppear;
    GKHostedViewController *_managingViewControllerWeak;
    GKGame *_game;
    NSMutableDictionary *_dirtyProperties;
    UIColor *_previousStatusBarColor;
    CDUnknownBlockType _blockToPerformAfterViewDidAppear;
}

+ (_Bool)shouldPropagateAppearanceCustomizations;
+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
@property(copy, nonatomic) CDUnknownBlockType blockToPerformAfterViewDidAppear; // @synthesize blockToPerformAfterViewDidAppear=_blockToPerformAfterViewDidAppear;
@property(retain, nonatomic) UIColor *previousStatusBarColor; // @synthesize previousStatusBarColor=_previousStatusBarColor;
@property(nonatomic) _Bool viewDidAppear; // @synthesize viewDidAppear=_viewDidAppear;
@property(retain, nonatomic) NSMutableDictionary *dirtyProperties; // @synthesize dirtyProperties=_dirtyProperties;
@property(nonatomic) _Bool didSetRemoteGame; // @synthesize didSetRemoteGame=_didSetRemoteGame;
@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)remoteViewControllerIsCanceling;
- (void)remoteViewControllerIsFinishing;
- (_Bool)_dismissSelfAfterGettingShouldCancel;
- (_Bool)_dismissSelfAfterGettingShouldFinish;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)_performSelectorAfterAppearingOrTimeOut:(SEL)arg1;
- (void)_performBlockAfterViewDidAppearIfNeeded;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)_desiredStatusBarStyle;
- (void)readyToPresentInController:(id)arg1;
- (void)setValue:(id)arg1 forKeyPath:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setupRemoteView;
- (void)nudge;
- (void)populateInitialStateForRemoteView:(id)arg1;
@property(readonly, nonatomic) _Bool serviceNeedsLocalPlayer;
@property(readonly, nonatomic) _Bool serviceNeedsCurrentGame;
@property(nonatomic) GKHostedViewController *managingViewController; // @synthesize managingViewController=_managingViewControllerWeak;
- (id)observedKeyPaths;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKActivityProxyRemoteViewController : GKRemoteViewController
{
}

- (void)performActivityType:(id)arg1 withActivityItemsAndSharingInfo:(id)arg2;

@end

@interface GKBackgroundTileImageView : UIImageView
{
}

@end

@interface GKBrush : NSObject <NSCopying>
{
}

+ (id)brush;
- (id)drawnImageForSize:(struct CGSize)arg1 opaque:(_Bool)arg2 input:(id)arg3;
- (double)scaleForInput:(id)arg1;
- (struct CGSize)sizeForInput:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GKThemeBrush : GKBrush
{
    GKUITheme *_theme;
}

@property(retain, nonatomic) GKUITheme *theme; // @synthesize theme=_theme;
- (id)initWithTheme:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface GKBadgedGameIconBrush : GKThemeBrush
{
    GKThemeBrush *_badgeBrush;
}

@property(retain, nonatomic) GKThemeBrush *badgeBrush; // @synthesize badgeBrush=_badgeBrush;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (double)scaleForInput:(id)arg1;
- (struct CGSize)sizeForInput:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GKBrushList : GKThemeBrush
{
    NSArray *_brushList;
}

+ (id)brushListWithBrushes:(id)arg1;
@property(retain, nonatomic) NSArray *brushList; // @synthesize brushList=_brushList;
- (void)didDrawRect:(struct CGRect)arg1 withBrushAtIndex:(unsigned long long)arg2 input:(id)arg3;
- (void)willDrawRect:(struct CGRect)arg1 withBrushAtIndex:(unsigned long long)arg2 input:(id)arg3;
- (struct CGRect)drawRectForBrushAtIndex:(unsigned long long)arg1 fromRect:(struct CGRect)arg2 input:(id)arg3;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GKButton : UIButton <GKTextStyleReplay>
{
    GKTextStyle *_baseStyle;
    GKTextStyle *_appliedStyle;
}

+ (void)initialize;
@property(retain, nonatomic) GKTextStyle *appliedStyle; // @synthesize appliedStyle=_appliedStyle;
- (void)setAttributedTitle:(id)arg1 forState:(unsigned long long)arg2;
- (void)applyTextStyle:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
@property(retain, nonatomic) GKTextStyle *baseStyle;
- (void)replayAndApplyStyleWithSystemContentChange:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKChallenge (UI)
- (id)iconURLString;
- (id)smallIconURLString;
- (id)iconSource;
- (id)detailFromText;
- (id)detailGoalText;
- (id)composeGoalText;
- (id)listGoalText;
- (id)listTitleText;
- (id)alertGoalText;
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadBannerImageWithHandler:(CDUnknownBlockType)arg1;
- (void)loadImageWithSource:(id)arg1 URLString:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
@end

@interface GKChallengeEventHandler (UI)
+ (Class)uiDelegateClass;
@end

@interface GKChallengeEventHandlerUIDelegate : NSObject <GKChallengeEventHandlerUIDelegate>
{
}

- (void)showLocallyCompletedBannerForIssuingPlayer:(id)arg1 challenge:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)showRemotelyCompletedBannerForReceivingPlayer:(id)arg1 challenge:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)showReceivedBannerForIssuingPlayer:(id)arg1 challenge:(id)arg2 handler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKImageBrush : GKThemeBrush
{
    CDUnknownBlockType _inputTransform;
}

@property(copy, nonatomic) CDUnknownBlockType inputTransform; // @synthesize inputTransform=_inputTransform;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (double)scaleForInput:(id)arg1;
- (struct CGSize)sizeForInput:(id)arg1;
- (void)dealloc;

@end

@interface GKCircleImageBrush : GKImageBrush <GKBrushIdentification>
{
    struct CGSize _sizeOverride;
}

@property(nonatomic) struct CGSize sizeOverride; // @synthesize sizeOverride=_sizeOverride;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (double)scaleForInput:(id)arg1;
- (struct CGSize)sizeForInput:(id)arg1;
- (id)renderedImageIdentifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKColorPalette : NSObject
{
}

+ (id)paletteFromImage:(id)arg1;
+ (id)sharedPalette;
@property(readonly) UIColor *cellActionColor;
@property(readonly) UIColor *cellActionDestructiveColor;
@property(readonly) UIColor *monogramBackgroundColor;
@property(readonly) UIColor *shareTintColor;
@property(readonly) UIColor *challengesTintColor;
@property(readonly) UIColor *friendRequestCaptionTintColor;
@property(readonly) UIColor *friendRequestTintColor;
@property(readonly) UIColor *localPlayerTintColor;
@property(readonly) UIColor *friendTintColor;
@property(readonly) UIColor *separatorLineColor;
@property(readonly) UIColor *selectedCellBackgroundColor;
@property(readonly) UIColor *removeItemTextColor;
@property(readonly) UIColor *activityIndicatorColor;
@property(readonly) UIColor *pinnedHeaderViewBackgroundColor;
@property(readonly) UIColor *floatingHeaderViewBackgroundColor;
@property(readonly) UIColor *viewBackgroundColor;
@property(readonly) UIColor *windowBackgroundColor;
@property(readonly) UIColor *bubbleTextColor;
@property(readonly) UIColor *disabledButtonTitleColor;
@property(readonly) UIColor *systemInteractionColor;
@property(readonly) UIColor *emphasizedTextColor;
@property(readonly) UIColor *emphasizedTextOnDarkBackgroundColor;
@property(readonly) UIColor *textOnDarkBackgroundColor;
@property(readonly) UIColor *selectedTextColor;
@property(readonly) UIColor *standardTextColor;

@end

@interface GKHostedViewController : UIViewController
{
    _Bool _presentingRemoteViewController;
    _Bool _shouldPresentRemoteViewController;
    _Bool _isRequestingRemoteViewController;
    _Bool _gkIsDisappearing;
    GKGame *_game;
    GKRemoteViewController *_remoteViewController;
    CDUnknownBlockType _remoteViewReadyHandler;
}

@property(nonatomic) _Bool gkIsDisappearing; // @synthesize gkIsDisappearing=_gkIsDisappearing;
@property(nonatomic) _Bool isRequestingRemoteViewController; // @synthesize isRequestingRemoteViewController=_isRequestingRemoteViewController;
@property(copy, nonatomic) CDUnknownBlockType remoteViewReadyHandler; // @synthesize remoteViewReadyHandler=_remoteViewReadyHandler;
@property(nonatomic) _Bool shouldPresentRemoteViewController; // @synthesize shouldPresentRemoteViewController=_shouldPresentRemoteViewController;
@property(nonatomic) _Bool presentingRemoteViewController; // @synthesize presentingRemoteViewController=_presentingRemoteViewController;
@property(retain, nonatomic) GKRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissModalViewControllerAnimated:(_Bool)arg1;
- (void)presentRemoteViewControllerIfNeeded;
- (void)resetRemoteViewController;
- (void)requestRemoteViewControllerIfNeeded;
- (id)_presentingViewController;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)didGetRemoteViewController;
- (void)donePressed:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)init;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;

@end

@interface GKComposeHostedViewController : GKHostedViewController
{
    unsigned int _rid;
    GKUITheme *_theme;
    NSMutableArray *_playerInternalsToAddAsRecipients;
    NSMutableArray *_emailsToAddAsRecipients;
}

@property(retain, nonatomic) NSMutableArray *emailsToAddAsRecipients; // @synthesize emailsToAddAsRecipients=_emailsToAddAsRecipients;
@property(retain, nonatomic) NSMutableArray *playerInternalsToAddAsRecipients; // @synthesize playerInternalsToAddAsRecipients=_playerInternalsToAddAsRecipients;
@property(nonatomic) unsigned int rid; // @synthesize rid=_rid;
@property(retain, nonatomic) GKUITheme *theme; // @synthesize theme=_theme;
- (id)_presentingViewController;
@property(copy, nonatomic) NSString *defaultMessage;
- (void)addRecipientsWithEmailAddresses:(id)arg1;
- (void)addRecipientsWithPlayerIDs:(id)arg1;
- (void)addRecipientPlayers:(id)arg1;
- (void)_addRecipientInternals:(id)arg1;
- (void)didGetRemoteViewController;
@property(readonly, nonatomic) GKComposeRemoteViewController *_remote;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;
- (void)dealloc;

@end

@interface GKComposeRemoteViewController : GKRemoteViewController
{
    unsigned int _rid;
    GKUITheme *_theme;
    NSString *_defaultMessage;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
@property(copy, nonatomic) NSString *defaultMessage; // @synthesize defaultMessage=_defaultMessage;
@property(nonatomic) unsigned int rid; // @synthesize rid=_rid;
@property(retain, nonatomic) GKUITheme *theme; // @synthesize theme=_theme;
- (void)sendFinishedMessageToDelegateCancelled:(_Bool)arg1;
- (void)remoteViewControllerIsCanceling;
- (void)remoteViewControllerIsFinishing;
- (void)addRecipientPlayerInternals:(id)arg1;
- (void)addRecipientsWithEmailAddresses:(id)arg1;
- (void)didRequestFriends:(id)arg1;
- (id)observedKeyPaths;
- (void)dealloc;

@end

@interface GKComposedImageBrush : GKImageBrush
{
    UIImage *_maskImage;
    UIImage *_backgroundImage;
    UIImage *_overlayImage;
    struct UIEdgeInsets _maskInsets;
}

@property(nonatomic) struct UIEdgeInsets maskInsets; // @synthesize maskInsets=_maskInsets;
@property(retain, nonatomic) UIImage *overlayImage; // @synthesize overlayImage=_overlayImage;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
@property(retain, nonatomic) UIImage *maskImage; // @synthesize maskImage=_maskImage;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (double)scaleForInput:(id)arg1;
- (struct CGSize)sizeForInput:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GKConditionBrush : GKBrush
{
    NSPredicate *_predicate;
    GKBrush *_yesBrush;
    GKBrush *_noBrush;
}

@property(retain, nonatomic) GKBrush *noBrush; // @synthesize noBrush=_noBrush;
@property(retain, nonatomic) GKBrush *yesBrush; // @synthesize yesBrush=_yesBrush;
@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate=_predicate;
- (struct CGSize)sizeForInput:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GKConstraintLeadingInfo : NSObject
{
    NSString *_fontTextStyle;
    double _leading;
}

@property(nonatomic) double leading; // @synthesize leading=_leading;
@property(retain, nonatomic) NSString *fontTextStyle; // @synthesize fontTextStyle=_fontTextStyle;
- (void)dealloc;

@end

@interface GKConstraintUpdateController : NSObject
{
    NSPointerArray *_constraintsToUpdate;
}

+ (id)sharedController;
@property(retain, nonatomic) NSPointerArray *constraintsToUpdate; // @synthesize constraintsToUpdate=_constraintsToUpdate;
- (void)registerConstraint:(id)arg1 leading:(double)arg2 forFontTextStyle:(id)arg3;
- (void)_updateConstraints;
- (void)updateConstraint:(id)arg1;
- (void)dealloc;

@end

@interface GKContiguousContainerView : UIView
{
    _Bool _vertical;
    _Bool _applyOrthogonalConstraints;
    UIView *_baselineView;
    double _overlap;
    NSArray *_replaceableConstraints;
    struct UIEdgeInsets _insets;
}

+ (id)containerForViewsFontsLeadings:(id)arg1 options:(long long)arg2;
+ (id)containerViewForViews:(id)arg1 overlap:(double)arg2 vertical:(_Bool)arg3 applyOrthogonalConstraints:(_Bool)arg4;
+ (id)containerViewForViews:(id)arg1 overlap:(double)arg2 vertical:(_Bool)arg3;
@property(retain, nonatomic) NSArray *replaceableConstraints; // @synthesize replaceableConstraints=_replaceableConstraints;
@property(nonatomic) _Bool applyOrthogonalConstraints; // @synthesize applyOrthogonalConstraints=_applyOrthogonalConstraints;
@property(nonatomic) _Bool vertical; // @synthesize vertical=_vertical;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) double overlap; // @synthesize overlap=_overlap;
@property(nonatomic) UIView *baselineView; // @synthesize baselineView=_baselineView;
- (id)viewForBaselineLayout;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)replaceSubviews:(id)arg1;
- (void)_addContiguousSubviews:(id)arg1;
- (void)dealloc;

@end

@interface GKContiguousContainerWithLeadingView : GKContiguousContainerView
{
}

- (struct CGSize)intrinsicContentSize;

@end

@interface GKDebugHighlightView : UIView
{
    _Bool _isOval;
    UIColor *_color;
    NSString *_caption;
}

@property(nonatomic) _Bool isOval; // @synthesize isOval=_isOval;
@property(retain, nonatomic) NSString *caption; // @synthesize caption=_caption;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GKFacebookLikeButton : UIView
{
    GKStoreItemInternal *_storeItem;
    GKButton *_button;
    GKLabel *_labelView;
    UIImageView *_logoView;
    UIActivityIndicatorView *_spinner;
    UIView *_containerView;
    GKOpenGraphNode *_openGraphNode;
    NSArray *_replaceableConstraints;
    UIView *_containerSpacerLeft;
    UIView *_containerSpacerRight;
}

@property(retain, nonatomic) UIView *containerSpacerRight; // @synthesize containerSpacerRight=_containerSpacerRight;
@property(retain, nonatomic) UIView *containerSpacerLeft; // @synthesize containerSpacerLeft=_containerSpacerLeft;
@property(retain, nonatomic) NSArray *replaceableConstraints; // @synthesize replaceableConstraints=_replaceableConstraints;
@property(retain, nonatomic) GKOpenGraphNode *openGraphNode; // @synthesize openGraphNode=_openGraphNode;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIImageView *logoView; // @synthesize logoView=_logoView;
@property(retain, nonatomic) GKLabel *labelView; // @synthesize labelView=_labelView;
@property(retain, nonatomic) GKButton *button; // @synthesize button=_button;
@property(retain, nonatomic) GKStoreItemInternal *storeItem; // @synthesize storeItem=_storeItem;
- (void)buttonPressed:(id)arg1;
- (_Bool)isEnabled;
- (id)viewForBaselineLayout;
- (void)applyConstraints;
- (void)updateContent;
- (void)observeEnterForegroundNotification:(id)arg1;
- (void)configureButtonWithTitle:(id)arg1 state:(unsigned long long)arg2 imageName:(id)arg3;
- (void)createButton;
- (void)createLogoView;
- (void)createLabelView;
- (void)createSpinner;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GKFriendRequestComposeViewController : UINavigationController
{
    id <GKFriendRequestComposeViewControllerDelegate> _composeViewDelegateWeak;
    GKComposeHostedViewController *_composeController;
    NSString *_message;
    unsigned long long _recipientCount;
    UIAlertController *_alertController;
}

+ (unsigned long long)maxNumberOfRecipients;
+ (_Bool)_preventsAppearanceProxyCustomization;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(nonatomic) unsigned long long recipientCount; // @synthesize recipientCount=_recipientCount;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) GKComposeHostedViewController *composeController; // @synthesize composeController=_composeController;
- (void)sendFinishedMessageToDelegateCancelled:(_Bool)arg1;
- (void)addRecipientsWithEmailAddresses:(id)arg1;
- (void)addRecipientsWithPlayerIDs:(id)arg1;
- (void)addRecipientPlayers:(id)arg1;
- (void)prepareForNewRecipients:(id)arg1;
@property(nonatomic) id <GKFriendRequestComposeViewControllerDelegate> composeViewDelegate; // @synthesize composeViewDelegate=_composeViewDelegateWeak;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)__viewControllerWillBePresented:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic) unsigned int rid;
- (_Bool)navigationBarHidden;
- (void)dealloc;
- (id)init;

@end

@interface GKGame (AppStoreUI)
+ (void)launchAppStoreWithGameCenterGames;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)presentStoreSheetFromViewController:(id)arg1 context:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@end

@interface GKGame (GKSpringboardSupport)
+ (void)removeHistoryForGameWithBundleIdentifier:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@end

@interface GKGame (GKStoreKitSupport)
+ (void)gameCenterGamePurchasedWithBundleIdentifier:(id)arg1;
@end

@interface GKGame (Sharing)
- (void)_gkSetSharingInfo:(id)arg1;
- (id)_gkSharingInfo;
- (id)activityViewControllerOperation:(id)arg1;
- (id)activityViewControllerSubject:(id)arg1;
- (long long)activityViewController:(id)arg1 attachmentULRTypeForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemsForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItems:(id)arg1;
- (id)fetchSharingInfo;
@end

@interface GKGame (UI)
+ (void)preloadIconsForGames:(id)arg1 style:(long long)arg2 handler:(CDUnknownBlockType)arg3;
+ (struct CGSize)serverImageSizeForIconStyle:(long long)arg1;
- (void)uninstallApplicationWithBundleIdentifier:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)removeGameWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)loadIconForStyle:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)URLStringForImageWithShineIfNeeded;
- (id)cachedIconForStyle:(long long)arg1;
- (id)iconForStyle:(long long)arg1;
- (id)imageSourceForIconStyle:(long long)arg1;
- (id)macBrushForIconStyle:(long long)arg1;
- (id)imageSourceForiOSIconStyle:(long long)arg1;
- (id)_imageURLForIconStyle:(long long)arg1;
@end

@interface GKGameSharingInfo : NSObject
{
    _Bool _complete;
    NSString *_gameName;
    NSString *_developerName;
    NSURL *_viewItemURL;
    NSURL *_shortViewItemURL;
    UIImage *_iconImage;
    NSString *_emailSubject;
    NSString *_emailBody;
}

@property(nonatomic) _Bool complete; // @synthesize complete=_complete;
@property(retain, nonatomic) NSString *emailBody; // @synthesize emailBody=_emailBody;
@property(retain, nonatomic) NSString *emailSubject; // @synthesize emailSubject=_emailSubject;
@property(retain, nonatomic) UIImage *iconImage; // @synthesize iconImage=_iconImage;
@property(retain, nonatomic) NSURL *shortViewItemURL; // @synthesize shortViewItemURL=_shortViewItemURL;
@property(retain, nonatomic) NSURL *viewItemURL; // @synthesize viewItemURL=_viewItemURL;
@property(retain, nonatomic) NSString *developerName; // @synthesize developerName=_developerName;
@property(retain, nonatomic) NSString *gameName; // @synthesize gameName=_gameName;
- (id)subjectForEmailActivity;
- (id)itemsForActivityType:(id)arg1;
- (id)thumbnailForActivityType:(id)arg1;
- (id)operationThatBlocksUntilLoaded;
- (id)initWithGame:(id)arg1;
- (void)dealloc;

@end

@interface GKGradient : NSObject
{
    struct CGGradient *_CGGradient;
}

+ (id)gradientWithColors:(id)arg1 atLocations:(const double *)arg2;
- (struct CGGradient *)CGGradient;
- (void)dealloc;
- (id)initWithColors:(id)arg1 atLocations:(const double *)arg2;

@end

@interface GKHostedAuthenticateViewController : GKHostedViewController <GKAuthenticateViewController>
{
    _Bool _disablesSignIn;
    _Bool _rotationLocked;
    CDUnknownBlockType _completionHandler;
    NSError *_error;
    long long _mode;
    CDUnknownBlockType _dismissCompletionHandler;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
@property(copy, nonatomic) CDUnknownBlockType dismissCompletionHandler; // @synthesize dismissCompletionHandler=_dismissCompletionHandler;
@property(nonatomic) long long mode; // @synthesize mode=_mode;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic, getter=isRotationLocked) _Bool rotationLocked; // @synthesize rotationLocked=_rotationLocked;
@property(nonatomic) _Bool disablesSignIn; // @synthesize disablesSignIn=_disablesSignIn;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void)showPasswordChangeAlertWithURL:(id)arg1;
- (_Bool)shouldAutorotate;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)finishAuthenticationWithError:(id)arg1;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;
- (void)dealloc;
- (id)initWithMode:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKHostedChallengeIssueController : GKHostedViewController
{
    _Bool _forcePicker;
    NSArray *_players;
    NSString *_defaultMessage;
    GKChallenge *_challenge;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _dismissCompletionHandler;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
+ (void)presentHostedIssueControllerWithChallenge:(id)arg1 players:(id)arg2 defaultMessage:(id)arg3;
+ (id)presentationQueue;
+ (id)hostedIssueControllerWithChallenge:(id)arg1 players:(id)arg2 defaultMessage:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
@property(copy, nonatomic) CDUnknownBlockType dismissCompletionHandler; // @synthesize dismissCompletionHandler=_dismissCompletionHandler;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) _Bool forcePicker; // @synthesize forcePicker=_forcePicker;
@property(retain, nonatomic) GKChallenge *challenge; // @synthesize challenge=_challenge;
@property(copy, nonatomic) NSString *defaultMessage; // @synthesize defaultMessage=_defaultMessage;
@property(retain, nonatomic) NSArray *players; // @synthesize players=_players;
- (void)doneWithPlayers:(id)arg1 message:(id)arg2;
- (id)_remote;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;
- (void)dealloc;
- (id)initWithChallenge:(id)arg1 players:(id)arg2 defaultMessage:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

@end

@interface GKHostedGameCenterViewController : GKHostedViewController
{
}

- (void)didGetRemoteViewController;
- (id)_presentingViewController;
- (void)presentRemoteViewControllerIfNeeded;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;
@property(readonly, nonatomic) GKRemoteGameCenterViewController *_remoteController;
@property(readonly, nonatomic) GKGameCenterViewController *_parentController;

@end

@interface GKHostedMatchmakerViewController : GKHostedViewController
{
}

- (void)didGetRemoteViewController;
- (id)_presentingViewController;
- (void)presentRemoteViewControllerIfNeeded;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;
- (id)remoteMatchmakerViewController;
- (id)matchmakerViewController;

@end

@interface GKHostedTurnBasedViewController : GKHostedViewController
{
}

- (void)didGetRemoteViewController;
- (id)_presentingViewController;
- (void)presentRemoteViewControllerIfNeeded;
- (id)hostSideViewControllerClassName;
- (id)serviceSideViewControllerClassName;
- (id)remoteTurnBasedViewController;
- (id)turnBasedViewController;

@end

@interface GKImageColorPalette : GKColorPalette
{
    unsigned int _hueSpread;
    unsigned int _saturationSpread;
    unsigned int _brightnessSpread;
    unsigned int _grayscaleSpread;
    struct HSVColor *_imageHSVMap;
    struct CGSize _imageSize;
    double _borderPercentageForBorderDetection;
    unsigned int _hueHistogram[360];
    unsigned int _saturationHistogram[256];
    unsigned int _brightnessHistogram[256];
    NSArray *_bubbleColors;
}

@property(retain) NSArray *bubbleColors; // @synthesize bubbleColors=_bubbleColors;
- (id)initWithImage:(id)arg1;
- (_Bool)analyzeImage:(struct CGImage *)arg1;
- (void)findBrightColors;
- (void)iterateOverPixelsWithBlock:(CDUnknownBlockType)arg1 forHue:(unsigned int)arg2;
- (unsigned int)weightHistogram:(unsigned int *)arg1 size:(unsigned int)arg2 spread:(unsigned int)arg3;
- (void)printHistogram:(unsigned int *)arg1 ofSize:(unsigned int)arg2;
- (void)generateHSVMapWithContext:(struct CGContext *)arg1;
- (void)clearSaturationAndBrightnessHistograms;
- (void)clearMainHistograms;
- (void)reset;

@end

@interface GKImageContext : NSObject
{
    double _scale;
    struct CGContext *_CGContext;
    struct CGSize _size;
}

+ (id)imageFromRawPixelsAtURL:(id)arg1;
+ (id)drawWithSize:(struct CGSize)arg1 scale:(double)arg2 options:(unsigned int)arg3 usingBlock:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) struct CGContext *CGContext; // @synthesize CGContext=_CGContext;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (_Bool)writeRawPixelsToURL:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) UIImage *image;
- (void)dealloc;
- (id)initWithSize:(struct CGSize)arg1 scale:(double)arg2 options:(unsigned int)arg3;
- (id)initWithSize:(struct CGSize)arg1 scale:(double)arg2 options:(unsigned int)arg3 data:(void *)arg4;

@end

@interface GKImageKey : NSObject
{
    NSString *_filePath;
    NSString *_cacheKey;
    NSString *_imageID;
    NSString *_basename;
    struct CGSize _size;
}

+ (id)keyForImageIdentifier:(id)arg1 withImageSource:(id)arg2;
+ (id)fileNameWithIdentifierInImageSource:(id)arg1;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(retain, nonatomic) NSString *basename; // @synthesize basename=_basename;
@property(retain, nonatomic) NSString *imageID; // @synthesize imageID=_imageID;
@property(readonly, nonatomic) NSString *cacheKey;
@property(readonly, nonatomic) NSString *filePath;
- (void)dealloc;

@end

@interface GKImageSource : NSObject
{
    _Bool _shouldRenderDefaultImageWithBrush;
    GKThreadsafeCache *_cache;
    NSString *_name;
    GKImageBrush *_imageBrush;
    UIImage *_defaultImage;
    UIImage *_renderedDefaultImage;
}

+ (id)cacheDirectoryForImageID:(id)arg1;
+ (void)clearCache;
+ (id)sharedCache;
+ (id)syncQueue;
@property(nonatomic) _Bool shouldRenderDefaultImageWithBrush; // @synthesize shouldRenderDefaultImageWithBrush=_shouldRenderDefaultImageWithBrush;
@property(retain, nonatomic) UIImage *renderedDefaultImage; // @synthesize renderedDefaultImage=_renderedDefaultImage;
@property(retain, nonatomic) UIImage *defaultImage; // @synthesize defaultImage=_defaultImage;
@property(readonly, nonatomic) GKImageBrush *imageBrush; // @synthesize imageBrush=_imageBrush;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) GKThreadsafeCache *cache; // @synthesize cache=_cache;
- (void)clearCachedImageForIdentifier:(id)arg1;
- (id)processAndCacheImageDataInContext:(id)arg1 withImage:(id)arg2 forIdentifier:(id)arg3;
- (id)processAndCacheImageDataInContext:(id)arg1 withImage:(id)arg2 forKey:(id)arg3;
- (id)processAndCacheImage:(id)arg1 forIdentifier:(id)arg2;
- (id)processAndCacheImage:(id)arg1 forKey:(id)arg2;
- (id)renderedTestImage;
- (_Bool)shouldUseTestImage;
- (id)cachedImageForIdentifier:(id)arg1;
- (id)cachedImageForKey:(id)arg1;
- (id)fastCachedOrDefaultImageForIdentifier:(id)arg1;
- (id)fastCachedOrDefaultImageForForKey:(id)arg1;
- (id)fastCachedImageForIdentifier:(id)arg1;
- (id)fastCachedImageForKey:(id)arg1;
- (void)validateFileSystemCache;
- (unsigned long long)cacheCostForImage:(id)arg1;
- (id)renderedImageWithImage:(id)arg1;
- (id)renderedImageWithImage:(id)arg1 returnContext:(id *)arg2;
- (id)renderedImageWithImage:(id)arg1 defaultSize:(struct CGSize)arg2 returnContext:(id *)arg3;
- (id)keyForImageIdentifier:(id)arg1;
- (id)subsourceWithBrush:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 imageBrush:(id)arg2;

@end

@interface GKInGameColorPalette : GKColorPalette
{
}

- (id)monogramBackgroundColor;
- (id)floatingHeaderViewBackgroundColor;
- (id)viewBackgroundColor;
- (id)textOnDarkBackgroundColor;
- (id)windowBackgroundColor;

@end

@interface GKLabel : UILabel <GKTextStyleReplay>
{
    GKTextStyle *_baseStyle;
    GKTextStyle *_appliedStyle;
    _Bool _usingAttributedText;
    _Bool _shouldInhibitReplay;
    double _actualFontShrinkageFactor;
}

+ (void)initialize;
@property(retain, nonatomic) GKTextStyle *appliedStyle; // @synthesize appliedStyle=_appliedStyle;
@property(nonatomic) double actualFontShrinkageFactor; // @synthesize actualFontShrinkageFactor=_actualFontShrinkageFactor;
@property(nonatomic) _Bool shouldInhibitReplay; // @synthesize shouldInhibitReplay=_shouldInhibitReplay;
@property(readonly, nonatomic) _Bool usingAttributedText; // @synthesize usingAttributedText=_usingAttributedText;
- (struct CGSize)shrinkFontToFitSize:(struct CGSize)arg1;
- (void)shrinkFontToFitWidth;
- (void)applyTextStyle:(id)arg1;
- (void)setText:(id)arg1;
- (void)setAttributedText:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
@property(retain, nonatomic) GKTextStyle *baseStyle;
- (void)replayAndApplyStyleWithSystemContentChange:(_Bool)arg1;
- (void)replayAndApplyStyleUnlessInhibited;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(nonatomic) double minimumScaleFactor;
@property(readonly) Class superclass;

@end

@interface GKLeaderboard (UI)
+ (id)localizedStringForTimeScope:(long long)arg1;
- (id)miniImageURL;
- (id)imageURL;
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface GKLeaderboardSet (UI)
- (id)miniImageURL;
- (id)imageURL;
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface GKLeaderboardViewController : GKGameCenterViewController
{
    id <GKLeaderboardViewControllerDelegate> _leaderboardDelegate;
}

@property(nonatomic) id <GKLeaderboardViewControllerDelegate> leaderboardDelegate; // @synthesize leaderboardDelegate=_leaderboardDelegate;
- (void)notifyDelegateOnWillFinish;
@property(copy, nonatomic) NSString *category;
@property(nonatomic) long long timeScope;
- (id)init;

@end

@interface GKLocalImageSource : GKImageSource
{
    NSMapTable *_keysForSizes;
}

@property(retain, nonatomic) NSMapTable *keysForSizes; // @synthesize keysForSizes=_keysForSizes;
- (id)imageForImageSize:(struct CGSize)arg1;
- (id)keyForImageSize:(struct CGSize)arg1;
- (void)dealloc;

@end

@interface GKLocalPlayer (Alerts)
- (_Bool)alertUserInStoreDemoModeEnabled;
- (void)alertAndSendFriendRequest:(id)arg1 destination:(id)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)showAlertForTag:(unsigned long long)arg1;
- (void)showLoginFailedAlert;
- (void)showSignInAccountRestrictedAlert;
- (void)showEditAccountRestrictedAlert;
- (void)showCreateAccountRestrictedAlert;
- (void)_showActionRestrictedAlertWithTitle:(id)arg1 message:(id)arg2;
- (void)showCancelledAlertForPlayer:(id)arg1;
@end

@interface GKLocalPlayer (AuthenticationPrivate)
- (void)startLegacyAuthenticationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_showViewControllerForLegacyApps:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)signOutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)showAuthenticateViewControllerForGameCenter;
- (void)validateAccountWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancelAuthentication;
- (void)finishAuthenticationWithError:(id)arg1;
- (void)showAuthenticateViewController;
- (void)showAuthorizeViewController;
- (void)presentError:(id)arg1 forMode:(long long)arg2;
- (void)removeActiveViewControllerAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)showViewController:(id)arg1 wrapInNavController:(_Bool)arg2;
- (void)handleUnderlyingErrorForAuthenticateError:(id)arg1;
- (void)completeAuthenticationWithResponse:(id)arg1 error:(id)arg2;
- (void)startAuthentication;
- (void)callAuthHandlerWithError:(id)arg1;
- (void)_showWelcomeBanner;
@end

@interface GKLocalPlayer (GKFaceTimeSupport)
+ (id)accountName;
@end

@interface GKLocalPlayer (GKSpringboardSupport)
+ (_Bool)hasAuthenticatedAccount;
@end

@interface GKLocalPlayer (Photos)
- (void)setPhoto:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)deletePhoto;
@end

@interface GKLoginAlertView : UIAlertView <UITextFieldDelegate>
{
    NSString *_username;
    unsigned long long _passwordFieldIndex;
}

@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
- (void)_updateFrameForDisplay;
- (_Bool)textFieldShouldReturn:(id)arg1;
@property(copy, nonatomic) NSString *password; // @dynamic password;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 uneditableUsername:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKMacGameIconBrush : GKImageBrush <GKBrushIdentification>
{
    struct CGSize _outputSize;
}

@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
- (id)renderedImageIdentifier;
- (struct CGSize)sizeForInput:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKMatchmakerViewController : UINavigationController <GKMatchDelegate>
{
    _Bool _hosted;
    id <GKMatchmakerViewControllerDelegate> _matchmakerDelegateWeak;
    GKMatchRequest *_matchRequest;
    GKHostedMatchmakerViewController *_hostedViewController;
    GKRemoteMatchmakerViewController *_remoteViewController;
    GKInvite *_acceptedInvite;
    GKMatch *_match;
    NSMutableArray *_hostedPlayers;
    UIAlertController *_alertController;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) NSMutableArray *hostedPlayers; // @synthesize hostedPlayers=_hostedPlayers;
@property(retain, nonatomic) GKMatch *match; // @synthesize match=_match;
@property(retain, nonatomic) GKInvite *acceptedInvite; // @synthesize acceptedInvite=_acceptedInvite;
@property(retain, nonatomic) GKRemoteMatchmakerViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) GKHostedMatchmakerViewController *hostedViewController; // @synthesize hostedViewController=_hostedViewController;
@property(nonatomic, getter=isHosted) _Bool hosted; // @synthesize hosted=_hosted;
@property(readonly, retain, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)authenticationChanged:(id)arg1;
- (void)playersToInvite:(id)arg1;
- (void)localPlayerAcceptedGameInvite:(id)arg1;
- (void)inviterCancelledNotification:(id)arg1;
- (void)setBrowsingForNearbyPlayers:(_Bool)arg1;
- (void)sendData:(id)arg1;
- (void)match:(id)arg1 player:(id)arg2 didChangeConnectionState:(long long)arg3;
- (void)match:(id)arg1 didReceiveData:(id)arg2 fromRemotePlayer:(id)arg3;
- (void)match:(id)arg1 didFailWithError:(id)arg2;
- (void)invitedPlayer:(id)arg1 responded:(long long)arg2;
- (void)cancelInviteToPlayer:(id)arg1;
- (void)startMatchingWithRequest:(id)arg1;
- (void)createMatchForAcceptedInvite;
- (void)finishWithPlayers;
- (void)finishWithMatch;
- (void)finishWithError:(id)arg1;
- (void)cancel;
- (void)setHostedPlayerReady:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
@property(copy, nonatomic) NSString *defaultInvitationMessage;
- (void)addPlayersToMatch:(id)arg1;
- (void)setHostedPlayer:(id)arg1 connected:(_Bool)arg2;
- (void)setHostedPlayer:(id)arg1 didConnect:(_Bool)arg2;
@property(nonatomic) id <GKMatchmakerViewControllerDelegate> matchmakerDelegate; // @synthesize matchmakerDelegate=_matchmakerDelegateWeak;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)_setupChildViewController;
- (void)setupNotifications;
- (void)dealloc;
- (id)init;
- (id)initWithInvite:(id)arg1;
- (id)initWithMatchRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKMultiCircleImageBrush : GKThemeBrush
{
}

- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;
- (struct CGSize)sizeForInput:(id)arg1;

@end

@interface GKNetworkImageSource : GKImageSource
{
    NSMutableDictionary *_loadingGroups;
}

@property(nonatomic) NSMutableDictionary *loadingGroups; // @synthesize loadingGroups=_loadingGroups;
- (void)loadImageForURLString:(id)arg1 reference:(id)arg2 queue:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (_Bool)imageNeedsRefresh:(id)arg1;
- (void)dealloc;

@end

@interface GKNotificationBanner : NSObject
{
}

+ (void)showBannerWithTitle:(id)arg1 player:(id)arg2 message:(id)arg3 touchHandler:(CDUnknownBlockType)arg4;
+ (void)showBannerWithTitle:(id)arg1 player:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showBannerWithTitle:(id)arg1 image:(id)arg2 message:(id)arg3 touchHandler:(CDUnknownBlockType)arg4;
+ (void)showBannerWithTitle:(id)arg1 image:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showBannerWithTitle:(id)arg1 message:(id)arg2 duration:(double)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (void)showBannerWithTitle:(id)arg1 message:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GKNotificationBannerView : UIView
{
    UIImageView *_imageView;
    GKLabel *_titleLabel;
    GKLabel *_messageLabel;
    double _duration;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _touchHandler;
    double _preferredWidthPad;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
@property(readonly, nonatomic) double preferredWidthPad; // @synthesize preferredWidthPad=_preferredWidthPad;
@property(copy, nonatomic) CDUnknownBlockType touchHandler; // @synthesize touchHandler=_touchHandler;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) GKLabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(readonly, nonatomic) GKLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (void)callCompletionHandler;
- (void)_wasTouched:(id)arg1;
- (void)showWithTouchHandler:(CDUnknownBlockType)arg1;
- (void)showWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 player:(id)arg2 message:(id)arg3;
- (id)initWithTitle:(id)arg1 message:(id)arg2;
- (id)initWithTitle:(id)arg1 image:(id)arg2 message:(id)arg3;
- (id)initWithTitle:(id)arg1 imageView:(id)arg2 message:(id)arg3;

@end

@interface GKNotificationBannerWindow : UIWindow
{
    NSObject<OS_dispatch_semaphore> *_bannerSemaphore;
    _Bool _bannerAnimating;
    _Bool _bannerVisible;
    GKNotificationBannerView *_currentBanner;
    long long _initialInterfaceOrientation;
}

+ (void)enqueBanner:(id)arg1;
+ (id)queue;
+ (id)bannerWindow;
@property(readonly, nonatomic) NSObject<OS_dispatch_semaphore> *bannerSemaphore; // @synthesize bannerSemaphore=_bannerSemaphore;
@property(nonatomic) _Bool bannerVisible; // @synthesize bannerVisible=_bannerVisible;
@property(nonatomic) _Bool bannerAnimating; // @synthesize bannerAnimating=_bannerAnimating;
@property(nonatomic) long long initialInterfaceOrientation; // @synthesize initialInterfaceOrientation=_initialInterfaceOrientation;
@property(retain, nonatomic) GKNotificationBannerView *currentBanner; // @synthesize currentBanner=_currentBanner;
- (void)_layoutBanner:(id)arg1 orientation:(long long)arg2 animated:(_Bool)arg3;
- (void)orientationChanged:(id)arg1;
- (void)_hideBanner:(id)arg1 quickly:(_Bool)arg2;
- (void)_showBanner:(id)arg1 showDimmingView:(_Bool)arg2;
- (struct CGPoint)_visibleBannerPosition;
- (struct CGPoint)_hiddenBannerPosition;
- (void)handlePan:(id)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)init;
- (_Bool)_canAffectStatusBarAppearance;

@end

@interface GKOpenGraphNode : NSObject
{
    unsigned long long _numberOfLikes;
    unsigned long long _numberOfFriendLikes;
    _Bool _liked;
    NSError *_error;
    NSURL *_url;
}

+ (void)openGraphNodeForURL:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)openGraphNodeAccessQueue;
@property(readonly) NSURL *url; // @synthesize url=_url;
@property(retain) NSError *error; // @synthesize error=_error;
@property unsigned long long numberOfLikes; // @synthesize numberOfLikes=_numberOfLikes;
@property unsigned long long numberOfFriendLikes; // @synthesize numberOfFriendLikes=_numberOfFriendLikes;
@property _Bool liked; // @synthesize liked=_liked;
- (void)toggleLikeStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)sendDislikeEventWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)sendLikeEventWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)fetchLikeStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)clearErrorAndRefetchLikeStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithOpenGraphURL:(id)arg1;

@end

@interface GKPlayer (UI)
- (void)_loadPhotoForSize:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)loadPhotoForSize:(long long)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@end

@interface GKPlayer (UIPrivate)
+ (void)preloadImagesForPlayers:(id)arg1 size:(long long)arg2;
+ (long long)sizeForPhotoSize:(long long)arg1;
- (id)placeholderImageForType:(unsigned char)arg1;
- (id)imageSourceForPlaceholders;
- (id)placeholderImage;
- (id)photoURLForSize:(long long)arg1;
- (id)imageURLForPhotoSizeList;
@end

@interface GKPlayerMultiPhotoView : UIImageView
{
    NSArray *_players;
    NSMutableDictionary *_photoImages;
}

@property(retain, nonatomic) NSMutableDictionary *photoImages; // @synthesize photoImages=_photoImages;
@property(retain, nonatomic) NSArray *players; // @synthesize players=_players;
- (void)refreshPhotos;
- (void)updateImage;
- (void)dealloc;

@end

@interface GKRoundButton : GKButton
{
}

- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)_highlightBounds;
@property(retain, nonatomic) UIImage *backgroundImage;
- (void)tintColorDidChange;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GKPlayerPhotoButton : GKRoundButton <GKPlayerPhotoContainer>
{
    GKPlayer *_player;
}

@property(retain, nonatomic) GKPlayer *player; // @synthesize player=_player;
- (void)refreshPhotoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)refreshPhoto;
- (void)setBackgroundImage:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKPlayerPhotoView : UIImageView <GKPlayerPhotoContainer>
{
    _Bool _selected;
    GKPlayer *_player;
    UIImage *_actualImage;
    long long _onAdaptiveBackground;
}

+ (void)initialize;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(nonatomic, getter=isOnAdaptiveBackground) long long onAdaptiveBackground; // @synthesize onAdaptiveBackground=_onAdaptiveBackground;
@property(retain, nonatomic) UIImage *actualImage; // @synthesize actualImage=_actualImage;
@property(retain, nonatomic) GKPlayer *player; // @synthesize player=_player;
- (void)setHighlighted:(_Bool)arg1;
- (void)setImage:(id)arg1;
- (id)image;
- (void)invalidateIntrinsicContentSize;
- (void)refreshPhotoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)refreshPhoto;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKRemoteChallengeIssueViewController : GKRemoteViewController <ChallengeIssueServiceViewControllerDelegate>
{
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
- (void)setChallenge:(id)arg1 withPlayers:(id)arg2 defaultMessage:(id)arg3 forcePicker:(_Bool)arg4;
- (void)setupRemoteView;
- (void)didFinishWithPlayerInternals:(id)arg1 message:(id)arg2;
- (void)remoteViewControllerIsCanceling;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) GKGame *game;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKRemoteGameCenterViewController : GKActivityProxyRemoteViewController <GameCenterUIServiceViewControllerDelegate>
{
    _Bool _shouldDisplayChallengePlayButton;
    GKGameCenterViewController *_delegateWeak;
    long long _viewState;
    NSString *_leaderboardIdentifier;
    long long _leaderboardTimeScope;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
@property(nonatomic) _Bool shouldDisplayChallengePlayButton; // @synthesize shouldDisplayChallengePlayButton=_shouldDisplayChallengePlayButton;
@property(nonatomic) long long leaderboardTimeScope; // @synthesize leaderboardTimeScope=_leaderboardTimeScope;
@property(retain, nonatomic) NSString *leaderboardIdentifier; // @synthesize leaderboardIdentifier=_leaderboardIdentifier;
@property(nonatomic) long long viewState; // @synthesize viewState=_viewState;
- (void)getMethodsImplementedByChallengeEventHandlerDelegate:(CDUnknownBlockType)arg1;
- (void)playPressedForChallenge:(id)arg1;
- (void)remoteControllerDidSelectLeaderboardTimeScope:(id)arg1;
- (void)remoteControllerDidSelectLeaderboardIdentifier:(id)arg1;
- (void)remoteControllerDidChangeViewState:(id)arg1;
- (void)remoteViewControllerIsCanceling;
- (void)remoteViewControllerIsFinishing;
- (_Bool)_dismissSelfAfterGettingShouldFinish;
- (void)setAPIControllerFlags:(CDStruct_b31ca263)arg1;
- (void)setNilValueForKey:(id)arg1;
- (id)observedKeyPaths;
@property(nonatomic) GKGameCenterViewController *delegate; // @synthesize delegate=_delegateWeak;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) GKGame *game;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKRemoteMatchmakerViewController : GKRemoteViewController <GKMatchmakerRemoteDelegate, GKMatchmakerServiceViewControllerDelegate>
{
    GKMatchmakerViewController *_delegateWeak;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
- (void)setBrowsingForNearbyPlayers:(_Bool)arg1;
- (void)sendData:(id)arg1;
- (void)cancelInviteToPlayer:(id)arg1;
- (void)startMatchingWithRequest:(id)arg1;
- (void)remoteViewControllerIsCanceling;
- (void)finishWithError:(id)arg1;
- (_Bool)_dismissSelfAfterGettingShouldFinish;
- (void)applicationWillEnterForeground;
- (void)setNearbyPlayer:(id)arg1 reachable:(_Bool)arg2;
- (void)inviterCancelled;
- (void)setFailedWithError:(id)arg1;
- (void)setAutomatchFailedWithError:(id)arg1;
- (void)setInvitesFailedWithError:(id)arg1;
- (void)setPlayer:(id)arg1 sentData:(id)arg2;
- (void)setPlayer:(id)arg1 connected:(_Bool)arg2;
- (void)setPlayer:(id)arg1 responded:(long long)arg2;
- (void)setAutomatchPlayerCount:(long long)arg1;
- (void)setDefaultInvitationMessage:(id)arg1;
- (void)setExistingPlayers:(id)arg1;
- (void)setHosted:(_Bool)arg1;
- (void)setAcceptedInviteInternal:(id)arg1;
- (void)setMatchRequestInternal:(id)arg1;
- (void)setupRemoteView;
@property(nonatomic) GKMatchmakerViewController *delegate; // @synthesize delegate=_delegateWeak;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) GKGame *game;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKRemoteSignInViewController : GKRemoteViewController <SignInServiceViewControllerDelegate>
{
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
- (void)remoteViewControllerIsCanceling;
- (void)unlockRotation;
- (id)_managingHostedAuthenticateViewController;
- (_Bool)serviceNeedsLocalPlayer;
- (void)populateInitialStateForRemoteView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) GKGame *game;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKRemoteTurnBasedViewController : GKRemoteViewController <GKTurnBasedServiceViewControllerDelegate>
{
    GKTurnBasedMatchmakerViewController *_delegateWeak;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
- (void)playerQuitMatch:(id)arg1;
- (void)remoteViewControllerIsCanceling;
- (void)finishWithError:(id)arg1;
- (void)finishWithMatch:(id)arg1;
- (_Bool)_dismissSelfAfterGettingShouldFinish;
- (void)setShowExistingMatches:(_Bool)arg1;
- (void)setMatchRequestInternal:(id)arg1;
- (void)setupRemoteView;
@property(nonatomic) GKTurnBasedMatchmakerViewController *delegate; // @synthesize delegate=_delegateWeak;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) GKGame *game;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKRootlessActivityViewController : UIActivityViewController
{
}

- (void)viewDidAppear:(_Bool)arg1;

@end

@interface GKScore (GKChallenge)
+ (void)reportScores:(id)arg1 withEligibleChallenges:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)issueChallengeToPlayers:(id)arg1 message:(id)arg2;
- (id)challengeComposeControllerWithPlayers:(id)arg1 message:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)challengeComposeControllerWithMessage:(id)arg1 players:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@end

@interface GKScore (Sharing)
- (void)_gkSetSharingInfo:(id)arg1;
- (id)_gkSharingInfo;
- (id)activityViewControllerOperation:(id)arg1;
- (id)activityViewControllerSubject:(id)arg1;
- (long long)activityViewController:(id)arg1 attachmentULRTypeForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemsForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItems:(id)arg1;
- (_Bool)canBeShared;
- (id)fetchSharingInfo;
@end

@interface GKScoreChallenge (UI)
- (id)iconURLString;
- (id)smallIconURLString;
- (id)iconSource;
- (id)detailGoalText;
- (id)composeGoalText;
- (id)listGoalText;
- (id)listTitleText;
- (id)alertGoalText;
@end

@interface GKScoreSharingInfo : NSObject <NSCoding, NSSecureCoding>
{
    _Bool _complete;
    GKLeaderboard *_leaderboardCategory;
    GKPlayer *_player;
    GKGame *_game;
    UIImage *_badgeImage;
    UIImage *_iconImage;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool complete; // @synthesize complete=_complete;
@property(retain, nonatomic) UIImage *iconImage; // @synthesize iconImage=_iconImage;
@property(retain, nonatomic) UIImage *badgeImage; // @synthesize badgeImage=_badgeImage;
@property(retain, nonatomic) GKGame *game; // @synthesize game=_game;
@property(retain, nonatomic) GKPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) GKLeaderboard *leaderboardCategory; // @synthesize leaderboardCategory=_leaderboardCategory;
- (id)subjectForEmailActivity;
- (id)itemsForActivityType:(id)arg1;
- (id)thumbnailForActivityType:(id)arg1;
- (id)operationThatBlocksUntilLoaded;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCategoryID:(id)arg1 forGame:(id)arg2 player:(id)arg3;
- (void)dealloc;

@end

@interface GKScreenConfigurationController : NSObject
{
    double _greatestScreenScale;
    GKEventEmitter *_emitter;
}

+ (double)_scaleForCurrentDisplayConfiguration;
+ (id)sharedController;
@property(readonly) double greatestScreenScale; // @synthesize greatestScreenScale=_greatestScreenScale;
@property(retain, nonatomic) GKEventEmitter *emitter; // @synthesize emitter=_emitter;
- (void)_screensDidChange:(id)arg1;
- (void)unregisterListener:(id)arg1;
- (void)registerListener:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GKTextField : UITextField <GKTextStyleReplay>
{
    GKTextStyle *_baseStyle;
    GKTextStyle *_appliedStyle;
}

+ (void)initialize;
@property(retain, nonatomic) GKTextStyle *appliedStyle; // @synthesize appliedStyle=_appliedStyle;
- (void)applyTextStyle:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
@property(retain, nonatomic) GKTextStyle *baseStyle;
- (void)replayAndApplyStyleWithSystemContentChange:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKTextStyle : NSObject
{
    double _UIKitFontLeading;
    _Bool _needsParagraphStyle;
    _Bool _overrideUIKitFontSize;
    GKColorPalette *_palette;
    NSString *_fontName;
    NSString *_UIKitFontTextStyleName;
    double _fontSize;
    UIColor *_color;
    long long _textAlignment;
    long long _lineBreakMode;
    double _minimumLineHeight;
    double _m34;
    double _zPosition;
    SEL _fontSizeRebaseSelector;
    SEL _fontNameRebaseSelector;
}

+ (double)scaledValueFromHISpecLeading:(double)arg1 forFontTextStyle:(id)arg2;
+ (double)standardLeadingForFontTextStyle:(id)arg1;
+ (double)bubbleTextScale;
+ (double)standardFontSize;
+ (id)attributedString:(id)arg1 byReplayingFromBaseStyle:(id)arg2 systemContentSizeDidChange:(_Bool)arg3;
+ (id)textStyle;
@property(nonatomic) SEL fontNameRebaseSelector; // @synthesize fontNameRebaseSelector=_fontNameRebaseSelector;
@property(nonatomic) SEL fontSizeRebaseSelector; // @synthesize fontSizeRebaseSelector=_fontSizeRebaseSelector;
@property(nonatomic) _Bool overrideUIKitFontSize; // @synthesize overrideUIKitFontSize=_overrideUIKitFontSize;
@property(nonatomic) _Bool needsParagraphStyle; // @synthesize needsParagraphStyle=_needsParagraphStyle;
@property(nonatomic) double zPosition; // @synthesize zPosition=_zPosition;
@property(nonatomic) double m34; // @synthesize m34=_m34;
@property(nonatomic) double minimumLineHeight; // @synthesize minimumLineHeight=_minimumLineHeight;
@property(nonatomic) long long lineBreakMode; // @synthesize lineBreakMode=_lineBreakMode;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(readonly, nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(readonly, nonatomic) NSString *UIKitFontTextStyleName; // @synthesize UIKitFontTextStyleName=_UIKitFontTextStyleName;
@property(readonly, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(retain, nonatomic) GKColorPalette *palette; // @synthesize palette=_palette;
- (id)styleWithName:(id)arg1 fallback:(id)arg2 layoutMode:(int)arg3;
- (id)bubbleTextSmall;
- (id)bubbleText;
- (id)settingsFooter;
- (id)settingsHeader;
- (id)settingsLabel;
- (id)settingsBoldButton;
- (id)settingsButton;
- (id)settingsLinkText;
- (id)remoteUINickNameLabel:(int)arg1;
- (id)remoteUINickNameField:(int)arg1;
- (id)remoteUISelectField:(int)arg1;
- (id)remoteUISelectLabel:(int)arg1;
- (id)remoteUIEditLabel:(int)arg1;
- (id)remoteUIEditField:(int)arg1;
- (id)remoteUITableHeaderButton:(int)arg1;
- (id)remoteUITableFooterButton:(int)arg1;
- (id)remoteUITableHeaderSubLabel:(int)arg1;
- (id)remoteUITableHeaderLabel:(int)arg1;
- (id)remoteUIDetailLabel:(int)arg1;
- (id)remoteUILabel:(int)arg1;
- (id)remoteUISectionFooter:(int)arg1;
- (id)remoteUISectionHeader:(int)arg1;
- (id)lineHeight:(double)arg1;
- (id)lineBreakMode:(long long)arg1;
- (id)alignment:(long long)arg1 lineBreakMode:(long long)arg2;
- (id)removeButtonTitle;
- (id)tabIconCaption;
- (id)tableFooterStyle;
- (id)tableCellSubtitle;
- (id)tableCellTitle;
- (id)buttonTitle;
- (id)cellActionItem;
- (id)sectionCaptionSmall;
- (id)sectionCaption;
- (id)sectionHeader;
- (id)achievementValueText;
- (id)achievementLeaderboardPointsText;
- (id)achievementLeaderboardRank;
- (id)leaderboardRankLarge;
- (id)leaderboardRankMedium;
- (id)leaderboardRankSmall;
- (id)signInLink;
- (id)signInFieldLabel;
- (id)signInField;
- (id)signInSubtitle;
- (id)signInTitle;
- (id)bubbleHeadline;
- (id)challengeBubbleValue;
- (id)meBubbleValue;
- (id)meBubbleCaption;
- (id)segmentBubbleValue;
- (id)segmentBubbleCaption;
- (id)bubbleValue;
- (id)bubbleCaption;
- (id)bubbleValueSmall;
- (id)bubbleCaptionSmall;
- (id)detailSecondaryHeaderText;
- (id)gameDetailNameText;
- (id)thinNumberText;
- (id)multiplayerFooterText;
- (id)multiplayerHeaderText;
- (id)multiplayerStatusText;
- (id)multiplayerAddText;
- (id)multiplayerNameText;
- (id)headerViewSubText1;
- (id)composeMessage;
- (id)composeFields;
- (id)centered;
- (id)medium;
- (id)light;
- (id)regular;
- (id)thin;
- (id)strong;
- (id)bold;
- (id)friendCaptionColor;
- (id)friendColor;
- (id)localPlayerColor;
- (id)scaled:(double)arg1;
- (id)scaledForM34:(double)arg1 zPosition:(double)arg2;
- (void)applyScaleForMesh;
- (id)emphasizedOnDarkBackground;
- (id)emphasized;
- (id)viewBackground;
- (id)smallInfo;
- (id)info;
- (id)small;
- (id)selectedBuyButtonTitle;
- (id)buyButtonTitle;
- (id)roundButtonTitle;
- (id)caption;
- (id)bannerMessage;
- (id)bannerTitle;
- (id)caption2;
- (id)caption1;
- (id)footnote;
- (id)body;
- (id)headline;
- (id)header4;
- (id)header3;
- (id)header2;
- (id)header1;
- (id)header0;
- (id)baseFontRebaseSelector;
- (void)applyToEditField:(id)arg1;
- (void)applyToLabel:(id)arg1;
- (id)attributes;
- (void)setFontName:(id)arg1 kitTextStyleName:(id)arg2 leadingOverrideFromHISpec:(double)arg3 shouldOverrideSize:(_Bool)arg4 rebaseSelector:(SEL)arg5;
- (void)setFontName:(id)arg1 kitTextStyleName:(id)arg2 shouldOverrideSize:(_Bool)arg3 rebaseSelector:(SEL)arg4;
- (void)setFontName:(id)arg1 rebaseSelector:(SEL)arg2;
- (void)setFontSize:(double)arg1 rebaseSelector:(SEL)arg2;
- (id)resolveFontAndLineSpacing:(double *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)copyWithBaseClass:(Class)arg1;
- (id)copy;
- (id)replayOnBaseStyle:(id)arg1 systemContentSizeDidChange:(_Bool)arg2;
- (id)initEmpty;
- (id)init;

@end

@interface GKTextStylePad : GKTextStyle
{
}

+ (double)bubbleTextScale;
+ (double)standardFontSize;
- (id)cellActionItem;
- (id)sectionCaptionSmall;
- (id)bubbleTextSmall;
- (id)bubbleText;
- (id)signInTitle;
- (id)bubbleHeadline;
- (id)smallInfo;
- (id)header4;
- (id)header2;
- (id)header1;

@end

@interface GKTextStylePhone : GKTextStyle
{
}

+ (double)bubbleTextScale;
+ (double)standardFontSize;
- (id)cellActionItem;
- (id)sectionCaptionSmall;
- (id)bubbleTextSmall;
- (id)bubbleText;
- (id)signInTitle;
- (id)bubbleHeadline;
- (id)smallInfo;
- (id)header4;
- (id)header2;
- (id)header1;

@end

@interface GKTextStylePhoneInBubbleDetail : GKTextStylePhone
{
}

+ (double)bubbleTextScale;

@end

@interface GKThreadsafeImageCache : GKThreadsafeCache <GKScreenConfigurationListener>
{
}

- (void)greatestScreenScaleDidChange:(double)arg1;
- (id)initWithName:(id)arg1 maxCount:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GKTurnBasedMatchmakerViewController : UINavigationController
{
    _Bool _showExistingMatches;
    id <GKTurnBasedMatchmakerViewControllerDelegate> _turnBasedMatchmakerDelegateWeak;
    GKHostedTurnBasedViewController *_hostedViewController;
    GKRemoteTurnBasedViewController *_remoteViewController;
    GKMatchRequest *_matchRequest;
    UIAlertController *_alertController;
}

+ (_Bool)_preventsAppearanceProxyCustomization;
@property(retain, nonatomic) UIAlertController *alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) GKMatchRequest *matchRequest; // @synthesize matchRequest=_matchRequest;
@property(retain, nonatomic) GKRemoteTurnBasedViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain, nonatomic) GKHostedTurnBasedViewController *hostedViewController; // @synthesize hostedViewController=_hostedViewController;
@property(nonatomic) _Bool showExistingMatches; // @synthesize showExistingMatches=_showExistingMatches;
- (void)authenticationChanged:(id)arg1;
- (void)playerQuitMatch:(id)arg1;
- (void)finishWithMatch:(id)arg1;
- (void)finishWithError:(id)arg1;
- (void)cancel;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
@property(nonatomic) id <GKTurnBasedMatchmakerViewControllerDelegate> turnBasedMatchmakerDelegate; // @synthesize turnBasedMatchmakerDelegate=_turnBasedMatchmakerDelegateWeak;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_setupChildViewController;
- (void)loadView;
- (void)dealloc;
- (id)init;
- (id)initWithMatchRequest:(id)arg1;

@end

@interface GKUITheme : NSObject
{
    NSCache *_resourceCache;
}

+ (id)sharedTheme;
@property(retain, nonatomic) NSCache *resourceCache; // @synthesize resourceCache=_resourceCache;
- (id)statusDotImage;
- (id)navbarActionButtonIcon;
- (id)bubbleHighlight;
- (id)bubbleTurns;
- (id)bubbleSignin;
- (id)bubbleShare;
- (id)bubbleRequests;
- (id)bubblePoints;
- (id)bubblePlay;
- (id)bubbleInvite;
- (id)bubbleGames;
- (id)bubbleFriends;
- (id)bubbleDecline;
- (id)bubbleChallenges;
- (id)bubbleAccept;
- (id)playerPickerSelectedImage;
- (id)playerPickerUnselectedImage;
- (id)removePlayerButtonImage;
- (id)addPlayerButtonImage;
- (id)defaultPlayerPhoto;
- (id)defaultLeaderboardIcon;
@property(readonly, retain, nonatomic) GKNetworkImageSource *iconLeaderboardSetListSource;
@property(readonly, retain, nonatomic) GKNetworkImageSource *iconLeaderboardListSource;
@property(readonly, retain, nonatomic) GKNetworkImageSource *photoDetailSource;
@property(readonly, retain, nonatomic) GKNetworkImageSource *photoListSource;
@property(readonly, nonatomic) GKNetworkImageSource *untreatedAchievementImageSource;
@property(readonly, retain, nonatomic) GKNetworkImageSource *macGameIconSource;
- (id)resourceWithName:(id)arg1 missingHandler:(CDUnknownBlockType)arg2;
- (id)resourceForSelector:(SEL)arg1 missingHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) double formSheetCornerRadius;
@property(readonly, nonatomic) struct CGSize formSheetSize;
- (id)tabbarIconTurnsSelected:(_Bool)arg1;
- (id)tabbarIconChallengesSelected:(_Bool)arg1;
- (id)tabbarIconMeSelected:(_Bool)arg1;
- (id)tabbarIconGamesSelected:(_Bool)arg1;
- (id)tabbarIconFriendsSelected:(_Bool)arg1;
- (id)_tabBarIconImageNamed:(id)arg1 selectedName:(id)arg2 selected:(_Bool)arg3;
- (id)achievementsDefaultIcon;
- (id)achievementsNotStartedIcon;
- (id)eventIconImage;
@property(readonly, retain, nonatomic) UIImage *interactiveRatingStarsBackground;
@property(readonly, retain, nonatomic) UIImage *interactiveRatingStarsForeground;
@property(readonly, retain, nonatomic) UIImage *ratingStarsForegroundImage;
@property(readonly, retain, nonatomic) UIImage *ratingStarsBackgroundImage;
- (id)imageNamed:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)clearResourceCache;

@end

@interface GKViewServiceInterface : NSXPCInterface
{
}

+ (void)_configureKVOTypes:(id)arg1;
+ (id)turnBasedServiceViewControllerInterface;
+ (id)turnBasedRemoteViewControllerInterface;
+ (id)matchmakerServiceViewControllerInterface;
+ (id)matchmakerRemoteViewControllerInterface;
+ (id)challengeIssueServiceViewControllerInterface;
+ (id)remoteChallengeIssueViewControllerInterface;
+ (id)serviceFriendRequestViewControllerInterface;
+ (id)remoteFriendRequestViewControllerInterface;
+ (id)signInServiceViewControllerInterface;
+ (id)remoteSignInViewControllerInterface;
+ (id)gameCenterServiceViewControllerInterface;
+ (id)gameCenterViewControllerInterface;
+ (id)serviceViewControllerInterface;
+ (id)remoteViewControllerInterface;

@end

@interface GKiOSAppIconBrush : GKImageBrush
{
}

- (void)drawInRect:(struct CGRect)arg1 withContext:(struct CGContext *)arg2 input:(id)arg3;

@end

@interface GKiOSAppIconBrushShare : GKiOSAppIconBrush
{
    struct CGSize _outputSize;
}

@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
- (struct CGSize)sizeForInput:(id)arg1;

@end

@interface NSLayoutConstraint (GKAdditions)
+ (id)_gkConstraintsForViews:(id)arg1 contiguouslyLaidOutVertically:(_Bool)arg2 overlap:(double)arg3 withinView:(id)arg4 insets:(struct UIEdgeInsets)arg5 applyOrthogonalConstraints:(_Bool)arg6;
+ (id)_gkConstraintsForViews:(id)arg1 contiguouslyLaidOutVertically:(_Bool)arg2 overlap:(double)arg3 withinView:(id)arg4 insets:(struct UIEdgeInsets)arg5;
+ (id)_gkConstraintsForViews:(id)arg1 alignedByAttribute:(long long)arg2;
+ (id)_gkConstraintsForView:(id)arg1 withinView:(id)arg2 insets:(struct UIEdgeInsets)arg3;
+ (id)_gkConstraintForView:(id)arg1 withHeightDerivedFromView:(id)arg2 insetBy:(double)arg3;
+ (id)_gkConstraintForView:(id)arg1 withWidthDerivedFromView:(id)arg2 insetBy:(double)arg3;
+ (id)_gkConstraintForView:(id)arg1 baselineAlignedUnderView:(id)arg2 offsetBy:(double)arg3;
+ (id)_gkConstraintForView:(id)arg1 withConstantHeight:(double)arg2;
+ (id)_gkConstraintForView:(id)arg1 withConstantWidth:(double)arg2;
+ (id)_gkConstraintsForView:(id)arg1 centeredXInView:(id)arg2 enforceMargin:(double)arg3;
+ (id)_gkConstraintForView:(id)arg1 centeredXInView:(id)arg2;
+ (id)_gkConstraintForView:(id)arg1 centeredYInView:(id)arg2;
+ (id)_gkConstraintForView:(id)arg1 equalsAttribute:(long long)arg2 ofView:(id)arg3;
+ (id)_gkConstraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 leading:(double)arg7 fontTextStyle:(id)arg8;
@end

@interface NSLayoutConstraint (GKBaselineLayout)
+ (id)_gkBaselineConstraintsForViewsFontsLeadings:(id)arg1 superview:(id)arg2 options:(long long)arg3;
@end

@interface NSObject (GKPhotoViewExtensions)
- (void)_gkRefreshPhotoForPlayer:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@end

@interface NSObject (GKSetupAssistantSupport)
- (void)_gkSetupAccountWithParamaters:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)_gkAuthenticatedPlayerID;
@end

@interface NSString (GKTextStyle)
- (id)_gkAttributedStringByApplyingStylesForTags:(id)arg1 untaggedStyle:(id)arg2;
- (id)_gkAttributedStringByApplyingStyle:(id)arg1;
@end

@interface SKStoreProductViewController (GKGame)
@property(copy, nonatomic) CDUnknownBlockType _gkCompletionHandler;
@property(retain, nonatomic) GKGame *_gkGame;
@end

@interface SortHueEntry : NSObject
{
    long long _hue;
    long long _count;
}

@property(nonatomic) long long count; // @synthesize count=_count;
@property(nonatomic) long long hue; // @synthesize hue=_hue;
- (id)description;
- (id)initWithHue:(unsigned int)arg1 count:(unsigned int)arg2;

@end

@interface UIActivityViewController (ContainmentHacks)
- (void)_gkCallOnSuperSkippingSelf_viewDidAppear:(_Bool)arg1;
@end

@interface UIAlertController (GKAlerts)
- (void)_gkAddCancelButtonWithNoAction;
@end

@interface UIApplication (GKAdditions)
- (_Bool)_gkSendAction:(SEL)arg1 viaResponder:(id)arg2 withObject:(id)arg3;
- (id)_gkTargetForAction:(SEL)arg1 viaResponder:(id)arg2;
@end

@interface UIColor (GKColorAdditions)
- (double)_gkLuminance;
@end

@interface UIImage (GKAdditions)
+ (void)_gkloadRemoteImageForURL:(id)arg1 queue:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)_gkImageByTintingWithColor:(id)arg1;
- (id)_gkImageByAddingAlpha;
- (id)_gkImageByScalingToSize:(struct CGSize)arg1;
- (id)_gkImageByScalingToSize:(struct CGSize)arg1 scale:(double)arg2;
- (id)_gkImageByScalingToSize:(struct CGSize)arg1 scale:(double)arg2 padColor:(id)arg3;
- (id)_gkImageByScalingAndCroppingToSize:(struct CGSize)arg1 scale:(double)arg2;
@end

@interface UIImage (GKAdditions_UIKitShim_Parity)
+ (id)_gkImageWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
@property(readonly) long long _gkImageOrientation;
@property(readonly) struct CGImage *_gkCGImage;
@property(readonly) double _gkScale;
@end

@interface UIImage (GKTransferFunction)
+ (id)_gkImageWithRawData:(id)arg1 size:(struct CGSize)arg2 scale:(double)arg3 rowBytes:(unsigned long long)arg4 bitmapInfo:(unsigned int)arg5;
- (void)_gkReadAtSize:(struct CGSize)arg1 ARGBHostEndianBytes:(CDUnknownBlockType)arg2;
@end

@interface UINavigationBar (GKUITheme)
- (void)_gkApplyTheme:(id)arg1;
- (void)_gkApplyTheme:(id)arg1 navbarStyle:(long long)arg2;
@end

@interface UINavigationController (GKAdditions) <GKContentRefresh, GKURLHandling>
- (_Bool)_gkShouldRefreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_gkRefreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_gkHandleURLPathComponents:(id)arg1 query:(id)arg2;
- (void)_gkForceNextContentUpdate;
- (void)_gkUpdateContentsWithCompletionHandlerAndError:(CDUnknownBlockType)arg1;
- (void)_gkResetContents;
- (void)_gkSetContentsNeedUpdateWithHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIScreen (GKAdditions_UIKitShim_Parity)
@property(readonly) struct CGRect _gkBounds;
@property(readonly) double _gkScale;
@end

@interface UISplitViewController (GKAdditions) <GKContentRefresh, GKURLHandling>
- (void)_gkHandleURLPathComponents:(id)arg1 query:(id)arg2;
- (void)_gkForceNextContentUpdate;
- (void)_gkUpdateContentsWithCompletionHandlerAndError:(CDUnknownBlockType)arg1;
- (void)_gkResetContents;
- (void)_gkSetContentsNeedUpdateWithHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITabBarController (GKAdditions) <GKContentRefresh, GKURLHandling>
- (_Bool)_gkShouldRefreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_gkRefreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_gkHandleURLPathComponents:(id)arg1 query:(id)arg2;
- (void)_gkForceNextContentUpdate;
- (void)_gkUpdateContentsWithCompletionHandlerAndError:(CDUnknownBlockType)arg1;
- (void)_gkResetContents;
- (void)_gkSetContentsNeedUpdateWithHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UITextField (GKAdditions)
- (_Bool)isReallyFirstResponder;
@end

@interface UIView (GKAdditions)
- (void)_gkPerformWithoutAnimationWhenRotating:(CDUnknownBlockType)arg1;
- (struct UIEdgeInsets)_gkPopoverPresentationInsets;
- (struct CGRect)_gkPopoverPresentationRect;
- (struct CGRect)_gkPopoverPresentationArea;
- (void)_gkAddStandardFadeTransition;
- (void)_gkEnumerateSubviewsUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface UIView (GKAdditionsAdditional)
- (id)_gkAncestryAffectingVisualLayout;
- (id)_gkAncestryDescription;
- (id)_gkRecursiveDescriptionForValue:(id)arg1 forKey:(id)arg2;
- (id)_gkRecursiveDescriptionForValue:(id)arg1 forKey:(id)arg2 depth:(long long)arg3;
- (id)_gkRecursiveDescriptionForKey:(id)arg1 depth:(long long)arg2;
- (id)_gkRecursiveDescriptionForKey:(id)arg1;
- (void)_gkRecursivelyApplyBlock:(CDUnknownBlockType)arg1 depth:(long long)arg2;
- (_Bool)_gkSuperviewHasPerspectiveTransform;
- (double)_gkPerspectiveTransformEZ;
- (void)_gkClearPerspectiveTransform;
- (void)_gkApplyPerspectiveTransform;
@property(nonatomic) struct CGPoint integralCenter;
@end

@interface UIView (GKUIBackdropView)
+ (id)_gkStandardBackdropView;
- (void)_gkUseAsModalSheetBackgroundWithGroupName:(id)arg1;
- (void)_gkApplyBackdropViewIfNeededWithGroupName:(id)arg1;
- (void)_gkApplyBackdropViewWithGroupName:(id)arg1;
- (id)_gkBackdropView;
- (id)_gkApplyFakeStatusBarView;
- (void)_gkSetDrawsAsKnockout:(_Bool)arg1 inBackdrop:(id)arg2;
@end

@interface UIViewController (GKAdditions) <GKContentRefresh, GKURLHandling>
- (_Bool)_gkShouldRefreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_gkRefreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;
- (void)_gkPresentActivityViewControllerForActivityItems:(id)arg1 fromView:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_gkPresentActivityViewController:(id)arg1 fromView:(id)arg2;
- (void)_gkDismissActivityViewControllerAnimated:(_Bool)arg1;
@property(nonatomic) UIPopoverController *gkPopoverController;
- (void)_gkHandleURLPathComponents:(id)arg1 query:(id)arg2;
- (void)_gkSetContentsNeedUpdateWithHandler:(CDUnknownBlockType)arg1;
- (void)_gkForceNextContentUpdate;
- (void)_gkResetContents;
- (void)_gkUpdateContentsWithCompletionHandlerAndError:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIViewController (GKAlerts)
+ (id)_gkKeyWindowRootViewController;
- (id)_gkInGameUIUnavailableAlertWithRestrictionMode:(long long)arg1 dismissHandler:(CDUnknownBlockType)arg2;
- (id)_gkAlertControllerForBarButtonItem:(id)arg1;
- (id)_gkPresentAlertForError:(id)arg1 title:(id)arg2 defaultMessage:(id)arg3;
- (id)_gkPresentConfirmationAlertWithTitle:(id)arg1 message:(id)arg2 buttonTitle:(id)arg3 block:(CDUnknownBlockType)arg4;
- (id)_gkPresentAlertWithTitle:(id)arg1 message:(id)arg2 buttonTitle:(id)arg3 dismissHandler:(CDUnknownBlockType)arg4;
- (id)_gkPresentAlertWithTitle:(id)arg1 message:(id)arg2 buttonTitle:(id)arg3;
@end

@interface UIViewController (IdiomUsage)
- (long long)_gkDesiredUserInterfaceIdiom;
- (_Bool)_gkShouldUsePadUI;
@end

@interface UIViewController (StatusBarState)
- (void)_gkRestoreStatusBarStyle:(_Bool)arg1;
- (void)_gkSaveStatusBarStyle:(_Bool)arg1;
- (void)_gkSaveStatusBarStyleAnimated:(_Bool)arg1 setToStyle:(long long)arg2;
@end

