//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIImage {
    Class _field1;
    void *_field2;
    double _field3;
    struct {
        unsigned int :1;
        unsigned int :3;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :2;
        unsigned int :1;
        unsigned int :1;
    } _field4;
};

struct UILabel {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    float _field6;
    long long _field7;
    id _field8;
    id _field9;
    unsigned long long _field10;
    CDStruct_7eae0dec _field11;
};

struct UIView {
    Class _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    float _field6;
    long long _field7;
    id _field8;
    id _field9;
    unsigned long long _field10;
    CDStruct_7eae0dec _field11;
};

struct _GEOTileKey {
    unsigned int z:6;
    unsigned int x:26;
    unsigned int y:26;
    unsigned int type:6;
    unsigned int pixelSize:8;
    unsigned int textScale:8;
    unsigned int provider:8;
    unsigned int expires:1;
    unsigned int reserved1:7;
    unsigned char reserved2[4];
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct deque<double, std::__1::allocator<double>> {
    struct __split_buffer<double *, std::__1::allocator<double *>> {
        double **__first_;
        double **__begin_;
        double **__end_;
        struct __compressed_pair<double **, std::__1::allocator<double *>> {
            double **__first_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<double>> {
        unsigned long long __first_;
    } __size_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int hasMultiplePhotos;
    unsigned int isFirstImageRequested;
    unsigned int isFirstImagePreloaded;
} CDStruct_0e9d808f;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :6;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :5;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :2;
    unsigned int :2;
    unsigned int :1;
    unsigned int :2;
    unsigned int :1;
    unsigned int :3;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_7eae0dec;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
} CDStruct_39925896;

typedef struct {
    long long x;
    long long y;
    long long z;
    double contentScaleFactor;
} CDStruct_cbb88d5e;

typedef struct {
    double _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_46f4fb6f;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field4;
} CDStruct_e02beb0c;

typedef struct {
    int _field1;
    int _field2;
    struct {
        unsigned int :1;
        unsigned int :1;
    } _field3;
} CDStruct_c55e649d;

typedef struct {
    long long _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    id _field5;
    _Bool _field6;
} CDStruct_e1db73fe;

typedef struct {
    struct CGSize _field1;
    double _field2;
    double _field3;
    double _field4;
    struct CGSize _field5;
    double _field6;
    double _field7;
    double _field8;
    long long _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
    double _field17;
    double _field18;
    double _field19;
    double _field20;
    double _field21;
    double _field22;
    double _field23;
    double _field24;
    double _field25;
    _Bool _field26;
    double _field27;
    double _field28;
    double _field29;
    _Bool _field30;
    _Bool _field31;
} CDStruct_715e5093;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    double width;
    double height;
} CDStruct_8caa76fc;

typedef struct {
    struct {
        double _field1;
        double _field2;
    } _field1;
    struct {
        double _field1;
        double _field2;
    } _field2;
} CDStruct_90e2a262;

typedef struct {
    CDStruct_2c43369c center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_feeb6407;

typedef struct {
    struct {
        double x;
        double y;
    } origin;
    CDStruct_8caa76fc size;
} CDStruct_02837cd9;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/MapKit.framework/MapKit
// UUID: 7F6312F3-46D9-3B62-9B97-E7573B4C33D6
//
//                           Arch: x86_64
//                Current version: 14.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1464.16.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ABContactViewControllerDelegate <NSObject>

@optional
- (void)contactViewController:(ABContactViewController *)arg1 didDeleteContact:(CNContact *)arg2;
- (void)contactViewController:(ABContactViewController *)arg1 didChangeToEditMode:(_Bool)arg2;
- (void)contactViewController:(ABContactViewController *)arg1 didCompleteWithContact:(CNContact *)arg2;
- (UIColor *)contactViewController:(ABContactViewController *)arg1 highlightColorForPropertyItem:(ABPropertyGroupItem *)arg2 contact:(CNContact *)arg3;
- (_Bool)contactViewController:(ABContactViewController *)arg1 shouldPerformDefaultActionForContact:(CNContact *)arg2 property:(NSString *)arg3 labeledValue:(CNLabeledValue *)arg4;
@end

@protocol ABNewPersonViewControllerDelegate <NSObject>
- (void)newPersonViewController:(ABNewPersonViewController *)arg1 didCompleteWithNewPerson:(void *)arg2;
@end

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CLLocationManagerVehicleDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didUpdateVehicleHeading:(CLVehicleHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateVehicleSpeed:(CLVehicleSpeed *)arg2;
@end

@protocol CalloutViewControllerProtocol <NSObject>
@property(retain, nonatomic) UIView *detailView;
@property(retain, nonatomic) UIView *rightView;
@property(retain, nonatomic) UIView *leftView;
@property(copy, nonatomic) NSString *calloutSubtitle;
@property(copy, nonatomic) NSString *calloutTitle;
- (void)beginMapsTransitionMovingSideways;
- (_Bool)canDisplayCompleteTitleWhenExpanded;
- (void)setDetailView:(UIView *)arg1 animated:(_Bool)arg2;
- (void)setRightView:(UIView *)arg1 animated:(_Bool)arg2;
- (void)setLeftView:(UIView *)arg1 animated:(_Bool)arg2;
- (void)setCalloutSubtitle:(NSString *)arg1 animated:(_Bool)arg2;
@end

@protocol GEOMapItem <NSObject>
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
@property(readonly, nonatomic) NSString *name;
- (NSString *)spokenNameForLocale:(NSString *)arg1;
@end

@protocol GEOMapItemPrivate <GEOMapItem>
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_4bcfbbae sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
- (id <GEOMapItemPrivate>)_mapItemByStrippingOptionalData;
- (NSURL *)_urlForWritingAReview;
- (NSURL *)_urlForReviewWithUID:(NSString *)arg1;
- (NSURL *)_urlForPhotoWithUID:(NSString *)arg1;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (NSArray *)_localizedCategoryNamesForType:(unsigned int)arg1;
- (GEOMapRegion *)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (NSString *)_spokenAddressForLocale:(NSString *)arg1;
@end

@protocol GEOResourceManifestTileGroupObserver <NSObject>

@optional
- (void)resourceManifestManager:(GEOResourceManifestManager *)arg1 didChangeActiveTileGroup:(GEOActiveTileGroup *)arg2 fromOldTileGroup:(GEOActiveTileGroup *)arg3;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(GEOResourceManifestManager *)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(GEOResourceManifestManager *)arg1;
@end

@protocol GEOURLSerializable <NSObject>
- (id)initWithUrlRepresentation:(id)arg1;
- (id)urlRepresentation;
@end

@protocol MKActivityItemSocialSource <UIActivityItemSocialSource>
@end

@protocol MKActivityItemSource <UIActivityItemSource>
@end

@protocol MKActivityViewControllerDelegate <NSObject>
- (void)mapkitActivityViewController:(MKActivityViewController *)arg1 postCompletedActivityOfType:(NSString *)arg2 completed:(_Bool)arg3;
- (void)mapkitActivityViewController:(MKActivityViewController *)arg1 preCompletedActivityOfType:(NSString *)arg2 completed:(_Bool)arg3;
@end

@protocol MKAnnotation <NSObject>
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;

@optional
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly, copy, nonatomic) NSString *title;
- (void)setCoordinate:(CDStruct_c3b9c2ee)arg1;
@end

@protocol MKAnnotationCalloutControllerDelegate <NSObject>
- (void)calloutDidAppearForAnnotationView:(MKAnnotationView *)arg1 inCalloutController:(MKAnnotationCalloutController *)arg2;
- (void)calloutController:(MKAnnotationCalloutController *)arg1 annotationView:(MKAnnotationView *)arg2 calloutAccessoryControlTapped:(UIControl *)arg3;
- (void)calloutController:(MKAnnotationCalloutController *)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(CDStruct_c3b9c2ee)arg3 completionHandler:(void (^)(void))arg4;
- (struct CGRect)calloutController:(MKAnnotationCalloutController *)arg1 visibleCenteringRectInAnnotationView:(MKAnnotationView *)arg2;

@optional
- (void)calloutControllerDidFinishMapsTransitionExpanding:(MKAnnotationCalloutController *)arg1;
@end

@protocol MKAnnotationContainerViewDelegate <NSObject>
- (struct CGRect)annotationContainerVisibleRect:(MKAnnotationContainerView *)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(UIView *)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(UIView *)arg2;
- (double)_zoomScale;
- (struct CGRect)visibleRectInView:(UIView *)arg1;
- (struct CGRect)visibleCenteringRectInView:(UIView *)arg1;
- (void)annotationContainerDidDropPins:(MKAnnotationContainerView *)arg1;
- (void)annotationContainerWillDropPins:(MKAnnotationContainerView *)arg1;
- (void)annotationContainerDidAnimateBubble:(MKAnnotationContainerView *)arg1;
- (void)annotationContainerWillAnimateBubble:(MKAnnotationContainerView *)arg1;
- (double)annotationContainer:(MKAnnotationContainerView *)arg1 pinDropDistanceForCoordinate:(CDStruct_c3b9c2ee)arg2 maxDistance:(double *)arg3 startPoint:(struct CGPoint *)arg4 shadowStartPoint:(struct CGPoint *)arg5;
- (void)annotationContainer:(MKAnnotationContainerView *)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(CDStruct_c3b9c2ee)arg3 completionHandler:(void (^)(void))arg4;
- (void)calloutDidAppearForAnnotationView:(MKAnnotationView *)arg1 inContainer:(MKAnnotationContainerView *)arg2;
- (void)annotationContainer:(MKAnnotationContainerView *)arg1 annotationView:(MKAnnotationView *)arg2 calloutAccessoryControlTapped:(UIControl *)arg3;
- (_Bool)annotationContainerIsRotated:(MKAnnotationContainerView *)arg1;
- (_Bool)annotationContainerShouldAlignToPixels:(MKAnnotationContainerView *)arg1;

@optional
- (void)annotationContainerDidFinishMapsTransitionExpanding:(MKAnnotationContainerView *)arg1;
@end

@protocol MKAnnotationManagerDelegate <NSObject>
- (void)annotationManager:(MKAnnotationManager *)arg1 didDeselectAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg2;
- (void)annotationManager:(MKAnnotationManager *)arg1 didSelectAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg2;
- (id <MKAnnotationRepresentation>)annotationManager:(MKAnnotationManager *)arg1 representationForAnnotation:(id <MKAnnotation>)arg2;
- (void)annotationManager:(MKAnnotationManager *)arg1 didAddAnnotationRepresentations:(NSArray *)arg2;

@optional
- (void)annotationManager:(MKAnnotationManager *)arg1 willDeselectAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg2;
@end

@protocol MKAnnotationMarkerContainer <MKAnnotationSelector, MKAnnotationModel>
@end

@protocol MKAnnotationModel <NSObject>
- (void)moveAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg1 fromCoordinate:(CDStruct_c3b9c2ee)arg2 animated:(_Bool)arg3 duration:(double)arg4;
- (void)deselectAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg1 animated:(_Bool)arg2;
- (void)selectAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)removeAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg1;
- (void)addAnnotationRepresentation:(id <MKAnnotationRepresentation>)arg1 allowAnimation:(_Bool)arg2;
@end

@protocol MKAnnotationRepresentation <NSObject>
- (void)_setHiddenForOffscreen:(_Bool)arg1;
- (_Bool)isPersistent;
- (void)prepareForReuse;
- (NSString *)reuseIdentifier;
@end

@protocol MKAnnotationSelector <NSObject>
- (_Bool)shouldHideOffscreenSelectedAnnotation;
- (_Bool (^)(struct))annotationCoordinateTest;
- (long long (^)(struct))annotationRectTest;
@end

@protocol MKCalloutSource <NSObject>
- (NSString *)debugAnchorPointString;
- (struct CGPoint)screenPointToScrollRelativeToWithCanvasSize:(struct CGSize)arg1 canvasScale:(double)arg2;
- (struct CGPoint)calloutAnchorPointWithCanvasSize:(struct CGSize)arg1 canvasScale:(double)arg2 snapToPixels:(_Bool)arg3;
- (NSString *)title;

@optional
@property(readonly, retain, nonatomic) UIView *detailCalloutAccessoryView;
@property(readonly, retain, nonatomic) UIView *rightCalloutAccessoryView;
@property(readonly, retain, nonatomic) UIView *leftCalloutAccessoryView;
@property(readonly, copy, nonatomic) NSString *subtitle;
@end

@protocol MKLocatableObject <NSObject>
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@end

@protocol MKLocationManagerObserver <NSObject>
- (void)locationManager:(MKLocationManager *)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(NSDate *)arg3;
- (void)locationManager:(MKLocationManager *)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(NSDate *)arg3;
- (void)locationManagerDidResumeLocationUpdates:(MKLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(MKLocationManager *)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(MKLocationManager *)arg1;
- (void)locationManagerDidReset:(MKLocationManager *)arg1;
- (void)locationManagerFailedToUpdateLocation:(MKLocationManager *)arg1 withError:(NSError *)arg2;
- (void)locationManagerUpdatedLocation:(MKLocationManager *)arg1;
@end

@protocol MKLocationManagerOperation <NSObject>
- (void)cancel;
- (void)start;
@end

@protocol MKLocationProvider <NSObject>
@property(readonly, nonatomic) _Bool isSimulation;
@property(readonly, nonatomic) _Bool usesCLMapCorrection;
@property(nonatomic) long long activityType;
@property(readonly, nonatomic) _Bool airplaneModeBlocksLocation;
@property(readonly, nonatomic) int authorizationStatus;
@property(readonly, nonatomic) double expectedGpsUpdateInterval;
@property(copy, nonatomic) CDUnknownBlockType authorizationRequestBlock;
@property(nonatomic) int headingOrientation;
@property(nonatomic) _Bool matchInfoEnabled;
@property(nonatomic) double distanceFilter;
@property(nonatomic, getter=isLocationServicesPreferencesDialogEnabled) _Bool locationServicesPreferencesDialogEnabled;
@property(nonatomic) double desiredAccuracy;
@property(copy, nonatomic) NSString *effectiveBundleIdentifier;
@property(retain, nonatomic) NSBundle *effectiveBundle;
@property(nonatomic) __weak id <MKLocationProviderDelegate> delegate;
- (void)dismissHeadingCalibrationDisplay;
- (void)stopUpdatingVehicleHeading;
- (void)startUpdatingVehicleHeading;
- (void)stopUpdatingVehicleSpeed;
- (void)startUpdatingVehicleSpeed;
- (void)stopUpdatingHeading;
- (void)startUpdatingHeading;
- (void)stopUpdatingLocation;
- (void)startUpdatingLocation;
@end

@protocol MKLocationProviderDelegate <NSObject>
- (void)locationProvider:(id <MKLocationProvider>)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(NSDate *)arg3;
- (void)locationProvider:(id <MKLocationProvider>)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(NSDate *)arg3;
- (void)locationProviderDidResumeLocationUpdates:(id <MKLocationProvider>)arg1;
- (void)locationProviderDidPauseLocationUpdates:(id <MKLocationProvider>)arg1;
- (_Bool)locationProviderShouldPauseLocationUpdates:(id <MKLocationProvider>)arg1;
- (void)locationProviderDidChangeAuthorizationStatus:(id <MKLocationProvider>)arg1;
- (void)locationProvider:(id <MKLocationProvider>)arg1 didReceiveError:(NSError *)arg2;
- (void)locationProvider:(id <MKLocationProvider>)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationProvider:(id <MKLocationProvider>)arg1 didUpdateLocation:(CLLocation *)arg2 lastKnownNavCourse:(double)arg3;
- (void)locationProvider:(id <MKLocationProvider>)arg1 didUpdateLocation:(CLLocation *)arg2;
@end

@protocol MKMapGestureControllerDelegate <NSObject>
- (void)gestureControllerDidStopTiltingDecelerating:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopTilting:(MKMapGestureController *)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartTilting:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopRotatingDecelerating:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopRotating:(MKMapGestureController *)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartRotating:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(MKMapGestureController *)arg1;
- (void)gestureControllerWillStartTwoFingerLongPress:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(MKMapGestureController *)arg1 direction:(long long)arg2;
- (void)gestureControllerDidStopZooming:(MKMapGestureController *)arg1 direction:(long long)arg2 willDecelerate:(_Bool)arg3;
- (void)gestureControllerWillStartZooming:(MKMapGestureController *)arg1 animated:(_Bool)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopPanning:(MKMapGestureController *)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartPanning:(MKMapGestureController *)arg1;
- (void)gestureControllerDidStopUserInteraction:(MKMapGestureController *)arg1;
- (void)gestureControllerWillStartUserInteraction:(MKMapGestureController *)arg1;

@optional
- (double)gestureController:(MKMapGestureController *)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(UITouch *)arg3;
@end

@protocol MKMapServiceProblemReportTicket <NSObject>
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)cancel;
- (void)submitWithHandler:(void (^)(NSString *, _Bool, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
@end

@protocol MKMapServiceSearchTicket <MKMapServiceTicket>
@property(readonly, nonatomic) NSString *searchQuery;
@end

@protocol MKMapServiceTicket <NSObject>
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) GEOMapRegion *boundingRegion;
@property(readonly, nonatomic) NSArray *refinedMapItems;
@property(readonly, nonatomic) NSArray *exactMapItems;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)applyToCorrectedSearch:(GEORPCorrectedSearch *)arg1;
- (void)submitWithHandler:(void (^)(NSArray *, NSError *))arg1 queue:(NSObject<OS_dispatch_queue> *)arg2 networkActivity:(void (^)(_Bool))arg3;
- (void)cancel;
- (void)submitWithRefinedHandler:(void (^)(NSArray *, NSArray *, NSError *))arg1 timeout:(long long)arg2 networkActivity:(void (^)(_Bool))arg3;
- (void)submitWithHandler:(void (^)(NSArray *, NSError *))arg1 timeout:(long long)arg2 networkActivity:(void (^)(_Bool))arg3;
- (void)submitWithRefinedHandler:(void (^)(NSArray *, NSArray *, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
- (void)submitWithHandler:(void (^)(NSArray *, NSError *))arg1 networkActivity:(void (^)(_Bool))arg2;
@end

@protocol MKMapSnapshotCreatorRequester <NSObject>
- (void)mapSnapshotCreator:(MKMapSnapshotCreator *)arg1 didCreateSnapshot:(UIImage *)arg2 attributionString:(NSString *)arg3 context:(id)arg4;

@optional
- (UIView *)mapSnapshotCreator:(MKMapSnapshotCreator *)arg1 viewForContext:(id)arg2;
@end

@protocol MKMapViewDelegate <NSObject>

@optional
- (void)mapView:(MKMapView *)arg1 didAddOverlayViews:(NSArray *)arg2;
- (MKOverlayView *)mapView:(MKMapView *)arg1 viewForOverlay:(id <MKOverlay>)arg2;
- (void)mapView:(MKMapView *)arg1 didAddOverlayRenderers:(NSArray *)arg2;
- (MKOverlayRenderer *)mapView:(MKMapView *)arg1 rendererForOverlay:(id <MKOverlay>)arg2;
- (void)mapView:(MKMapView *)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3;
- (void)mapView:(MKMapView *)arg1 annotationView:(MKAnnotationView *)arg2 didChangeDragState:(unsigned long long)arg3 fromOldState:(unsigned long long)arg4;
- (void)mapView:(MKMapView *)arg1 didFailToLocateUserWithError:(NSError *)arg2;
- (void)mapView:(MKMapView *)arg1 didUpdateUserLocation:(MKUserLocation *)arg2;
- (void)mapViewDidStopLocatingUser:(MKMapView *)arg1;
- (void)mapViewWillStartLocatingUser:(MKMapView *)arg1;
- (void)mapView:(MKMapView *)arg1 didDeselectAnnotationView:(MKAnnotationView *)arg2;
- (void)mapView:(MKMapView *)arg1 didSelectAnnotationView:(MKAnnotationView *)arg2;
- (void)mapView:(MKMapView *)arg1 annotationView:(MKAnnotationView *)arg2 calloutAccessoryControlTapped:(UIControl *)arg3;
- (void)mapView:(MKMapView *)arg1 didAddAnnotationViews:(NSArray *)arg2;
- (MKAnnotationView *)mapView:(MKMapView *)arg1 viewForAnnotation:(id <MKAnnotation>)arg2;
- (void)mapViewDidFinishRenderingMap:(MKMapView *)arg1 fullyRendered:(_Bool)arg2;
- (void)mapViewWillStartRenderingMap:(MKMapView *)arg1;
- (void)mapViewDidFailLoadingMap:(MKMapView *)arg1 withError:(NSError *)arg2;
- (void)mapViewDidFinishLoadingMap:(MKMapView *)arg1;
- (void)mapViewWillStartLoadingMap:(MKMapView *)arg1;
- (void)mapView:(MKMapView *)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(MKMapView *)arg1 regionWillChangeAnimated:(_Bool)arg2;
@end

@protocol MKOrientable
@property(nonatomic) int _orientation;
@end

@protocol MKOverlay <MKAnnotation>
@property(readonly, nonatomic) CDStruct_90e2a262 boundingMapRect;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;

@optional
- (_Bool)canReplaceMapContent;
- (_Bool)intersectsMapRect:(CDStruct_90e2a262)arg1;
@end

@protocol MKOverlayContainerViewDelegate
- (VKMapView *)vk_mapLayer;
- (CDStruct_90e2a262)visibleMapRect;
- (id <MKOverlayDrawable>)createDrawableForOverlay:(id <MKOverlay>)arg1;
- (void)overlayContainerAddedDrawables:(NSArray *)arg1;
@end

@protocol MKPlaceActionsViewControllerDelegate <NSObject>
- (void)actionsViewControllerOpenInSkyline:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerSimulateLocation:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerCreateReminder:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerShare:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerReportAProblem:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerRemovePin:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerAddContactToExistingContact:(MKPlaceActionsViewController *)arg1;
- (void)actionsViewControllerCreateNewContact:(MKPlaceActionsViewController *)arg1;
@end

@protocol MKPlaceAttributionCellProvider <NSObject>
@property(nonatomic) _Bool showAttribution;
@end

@protocol MKPlaceCardPhotosControllerDelegate <NSObject>

@optional
- (_Bool)shouldUseSmallPhotosWithPhotosController:(MKPlacePhotosViewController *)arg1;
- (void)placeCardPhotosControllerDidSelectViewAllPhotos:(MKPlacePhotosViewController *)arg1;
- (void)placeCardPhotosControllerDidSelectAddPhoto:(MKPlacePhotosViewController *)arg1;
- (void)placeCardPhotosController:(MKPlacePhotosViewController *)arg1 didSelectViewPhotoWithID:(NSString *)arg2;
@end

@protocol MKPlaceCardReviewsControllerDelegate <NSObject>

@optional
- (void)placeCardReviewsController:(MKPlaceReviewsViewController *)arg1 didSelectViewReviewWithID:(NSString *)arg2;
- (void)placeCardReviewsControllerDidSelectViewAllReviews:(MKPlaceReviewsViewController *)arg1;
- (void)placeCardReviewsControllerDidSelectWriteReview:(MKPlaceReviewsViewController *)arg1;
- (void)placeCardReviewsControllerDidSelectCheckIn:(MKPlaceReviewsViewController *)arg1;
@end

@protocol MKPlaceHeaderBackgroundViewDelegate <NSObject>
- (void)headerViewBackground:(MKPlaceHeaderBackgroundView *)arg1 willShowBackground:(UIImage *)arg2;
- (void)headerViewBackgroundDidFinishLoading:(MKPlaceHeaderBackgroundView *)arg1;
@end

@protocol MKPlaceHeaderViewCinematics <NSObject>
- (void)resume;
- (void)pause;
- (void)reset;
- (void)present;
- (void)prepareForPresentation;
@end

@protocol MKPlaceHeaderViewDelegate <NSObject>

@optional
- (void)headerViewWasSingleClicked:(MKPlaceHeaderView *)arg1;
- (void)headerViewWasDoubleClicked:(MKPlaceHeaderView *)arg1;
- (_Bool)headerViewshouldShowTitleSubtitleAndStarRatings:(MKPlaceHeaderView *)arg1;
- (void)headerView:(MKPlaceHeaderView *)arg1 didFinishLoadingBackgroundViewOfType:(long long)arg2;
@end

@protocol MKPlaceInfoViewControllerDelegate <NSObject>
- (void)infoViewController:(MKPlaceInfoViewController *)arg1 didSelectDeal:(MKYelpDeal *)arg2;
- (_Bool)shouldShowFlyoverTourForInfoViewController:(MKPlaceInfoViewController *)arg1;
- (_Bool)shouldShowReroutingForInfoViewController:(MKPlaceInfoViewController *)arg1;
- (_Bool)shouldShowDirectionsForInfoViewController:(MKPlaceInfoViewController *)arg1;
- (_Bool)shouldShowInlineMapForInfoViewController:(MKPlaceInfoViewController *)arg1;
@end

@protocol MKPlaceNearbyAppsViewControllerDelegate <NSObject>
- (void)nearbyAppsController:(MKPlaceNearbyAppsViewController *)arg1 showStorePageWithURL:(NSString *)arg2 storeID:(NSNumber *)arg3;
- (void)nearbyAppsController:(MKPlaceNearbyAppsViewController *)arg1 openAppWithBundleID:(NSString *)arg2 storeID:(NSNumber *)arg3;
@end

@protocol MKPlaceReviewsViewCheckInWriteCellDelegate <NSObject>
- (void)checkInWriteReviewCellDidSelectWriteReview:(MKPlaceReviewsViewCheckInWriteCell *)arg1;
- (void)checkInWriteReviewCellDidSelectCheckIn:(MKPlaceReviewsViewCheckInWriteCell *)arg1;
@end

@protocol MKPlaceSharedAttributionDelegate
- (void)openInfoAttribution;
@end

@protocol MKPlaceViewNearbyAppsCellDelegate <NSObject>
- (void)nearbyAppsCell:(MKPlaceViewNearbyAppsCell *)arg1 showStorePageWithURL:(NSString *)arg2 storeID:(NSNumber *)arg3;
- (void)nearbyAppsCell:(MKPlaceViewNearbyAppsCell *)arg1 openAppWithBundleID:(NSString *)arg2 storeID:(NSNumber *)arg3;
@end

@protocol MKSmallCalloutViewControllerDelegate <NSObject>
- (void)smallCalloutViewControllerDidAppear:(MKSmallCalloutViewController *)arg1;
@end

@protocol MKStackingViewControllerDelegate <NSObject>

@optional
- (void)stackingViewControllerDidEndScroll:(MKStackingViewController *)arg1;
- (void)stackingViewControllerWillBeginScroll:(MKStackingViewController *)arg1;
- (void)stackingViewController:(MKStackingViewController *)arg1 willSelectViewController:(UIViewController *)arg2;
- (_Bool)stackingViewController:(MKStackingViewController *)arg1 showsTitleForViewController:(UIViewController *)arg2;
- (void)stackingViewController:(MKStackingViewController *)arg1 calculatedTransformForHeaderView:(struct CATransform3D)arg2;
- (double)stackingViewControllerTopLayoutGuideLength:(MKStackingViewController *)arg1;
- (double)stackingViewControllerHeightForSelectorView:(MKStackingViewController *)arg1;
- (double)stackingViewControllerHeightForHeaderView:(MKStackingViewController *)arg1;
- (double)stackingViewControllerHeightForTitleView:(MKStackingViewController *)arg1;
- (void)stackingViewControllerUpdateSelectorView:(MKStackingViewController *)arg1;
@end

@protocol MKStackingViewControllerPreferredSizeUse <NSObject>
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
@end

@protocol MKStackingViewControllerSelectorView <NSObject>
@property(nonatomic) _Bool isBlurred;
- (void)updateSelectorView:(MKStackingViewController *)arg1;
@end

@protocol MKStackingViewControllerSizableView <NSObject>
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@end

@protocol MKUserLocationAnnotation <MKAnnotation>
- (void)setAccuracy:(double)arg1;
@end

@protocol MKUserTrackingButtonTarget <NSObject>
+ (Class)_activityIndicatorClass;
- (long long)_activityIndicatorStyle;
- (UIImage *)_imageForState:(long long)arg1 controlState:(unsigned long long)arg2;
- (void)_repositionViews;
- (_Bool)_isHighlightedForState:(long long)arg1;
- (void)_updateForState:(long long)arg1;
- (void)setEnabled:(_Bool)arg1;
@end

@protocol MKVariableDelayTapRecognizerDelegate <NSObject>

@optional
- (double)variableDelayTapRecognizer:(MKVariableDelayTapRecognizer *)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(UITouch *)arg3;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol SKProductPageViewControllerDelegate <NSObject>

@optional
- (void)productPage:(SKProductPageViewController *)arg1 willMakePurchases:(NSArray *)arg2;
- (void)productPage:(SKProductPageViewController *)arg1 purchaseBatchFailedWithError:(NSError *)arg2;
- (void)productPage:(SKProductPageViewController *)arg1 didFinishPurchase:(SSPurchase *)arg2 withError:(NSError *)arg3;
- (void)productPage:(SKProductPageViewController *)arg1 presentProductPage:(SKProductPageViewController *)arg2 animated:(_Bool)arg3;
- (void)productPage:(SKProductPageViewController *)arg1 didReceiveTitle:(NSString *)arg2;
- (void)productPage:(SKProductPageViewController *)arg1 didFinishWithResult:(long long)arg2;
- (void)productPageDidFinishLoad:(SKProductPageViewController *)arg1;
- (void)productPage:(SKProductPageViewController *)arg1 didFailLoadWithError:(NSError *)arg2;
@end

@protocol UIActivityItemSocialSource <NSObject>

@optional
- (long long)activityViewController:(UIActivityViewController *)arg1 attachmentULRTypeForActivityType:(NSString *)arg2;
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailForActivityType:(NSString *)arg2;
@end

@protocol UIActivityItemSource <NSObject>
- (id)activityViewController:(UIActivityViewController *)arg1 itemForActivityType:(NSString *)arg2;
- (id)activityViewControllerPlaceholderItem:(UIActivityViewController *)arg1;

@optional
- (UIImage *)activityViewController:(UIActivityViewController *)arg1 thumbnailImageForActivityType:(NSString *)arg2 suggestedSize:(struct CGSize)arg3;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 dataTypeIdentifierForActivityType:(NSString *)arg2;
- (NSString *)activityViewController:(UIActivityViewController *)arg1 subjectForActivityType:(NSString *)arg2;
@end

@protocol UIActivityViewControllerDelegate <NSObject>

@optional
- (void)activityViewControllerDidFinishAirdropTransfer:(UIActivityViewController *)arg1;
- (void)activityViewControllerWillStartAirdropTransfer:(UIActivityViewController *)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIPopoverControllerDelegatePrivate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 animationCompleted:(long long)arg2;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol VKMapViewDelegate <NSObject>

@optional
- (void)mapLayer:(VKMapView *)arg1 didUpdateVerticalYawTo:(double)arg2;
- (void)mapLayer:(VKMapView *)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;
- (void)mapLayer:(VKMapView *)arg1 selectedLabelMarkerWillDisappear:(VKLabelMarker *)arg2;
- (void)mapLayer:(VKMapView *)arg1 didFinishChangingMapDisplayStyle:(unsigned long long)arg2;
- (void)mapLayer:(VKMapView *)arg1 flyoverTourLabelDidChange:(NSString *)arg2;
- (void)mapLayer:(VKMapView *)arg1 didStopFlyoverTourCompleted:(_Bool)arg2;
- (void)mapLayerWillStartFlyoverTour:(VKMapView *)arg1;
- (void)mapLayer:(VKMapView *)arg1 canShowFlyoverDidChange:(_Bool)arg2;
- (void)mapLayer:(VKMapView *)arg1 showingFlyoverDidChange:(_Bool)arg2;
- (void)mapLayer:(VKMapView *)arg1 canZoomOutDidChange:(_Bool)arg2;
- (void)mapLayer:(VKMapView *)arg1 canZoomInDidChange:(_Bool)arg2;
- (void)mapLayer:(VKMapView *)arg1 canEnter3DModeDidChange:(_Bool)arg2;
- (void)mapLayer:(VKMapView *)arg1 didBecomePitched:(_Bool)arg2;
- (VKOverlayPainter *)mapLayer:(VKMapView *)arg1 painterForOverlay:(id <VKOverlay>)arg2;
- (void)mapLayer:(VKMapView *)arg1 annotationMarker:(VKAnnotationMarker *)arg2 didChangeDragState:(long long)arg3 fromOldState:(long long)arg4;
- (id <VKTrackableAnnotationPresentation>)mapLayer:(VKMapView *)arg1 presentationForAnnotation:(id <VKTrackableAnnotation>)arg2;
- (void)mapLayerDidBecomeFullyDrawn:(VKMapView *)arg1 hasFailedTiles:(_Bool)arg2;
- (void)mapLayerDidBecomePartiallyDrawn:(VKMapView *)arg1;
- (void)mapLayer:(VKMapView *)arg1 didChangeRegionAnimated:(_Bool)arg2;
- (void)mapLayer:(VKMapView *)arg1 willChangeRegionAnimated:(_Bool)arg2;
- (void)mapLayerDidDraw:(VKMapView *)arg1;
- (void)mapLayerDidChangeVisibleRegion:(VKMapView *)arg1;
- (void)mapLayerDidFailLoadingTiles:(VKMapView *)arg1 withError:(NSError *)arg2;
- (void)mapLayerDidFinishLoadingTiles:(VKMapView *)arg1;
- (void)mapLayerDidStartLoadingTiles:(VKMapView *)arg1;
@end

@protocol VKPuckAnimatorDelegate <NSObject>
- (void)puckAnimator:(VKPuckAnimator *)arg1 updatedTargetPosition:(CDStruct_39925896)arg2;
- (void)puckAnimatorDidStop:(VKPuckAnimator *)arg1;
- (void)puckAnimator:(VKPuckAnimator *)arg1 updatedPosition:(CDStruct_39925896)arg2 course:(double)arg3;
- (void)puckAnimator:(VKPuckAnimator *)arg1 runAnimation:(VKAnimation *)arg2;
@end

@protocol VKPuckAnimatorTarget <NSObject>
@property(nonatomic) double presentationCourse;
- (void)setAnimatingToCoordinate:(_Bool)arg1;
- (void)setPresentationCoordinate:(CDStruct_c3b9c2ee)arg1;
@end

@protocol VKRouteMatchedAnnotationPresentation <VKTrackableAnnotationPresentation>
@property(retain, nonatomic) GEORouteMatch *routeMatch;
- (void)removePresentationCoordinateChangedObserver:(id <VKRouteMatchedAnnotationPresentationObserver>)arg1;
- (void)addPresentationCoordinateChangedObserver:(id <VKRouteMatchedAnnotationPresentationObserver>)arg1;
@end

@protocol VKTrackableAnnotationPresentation <NSObject>
@property(nonatomic, getter=isTracking) _Bool tracking;
@property(nonatomic) CDStruct_c3b9c2ee presentationCoordinate;
@end

@protocol _MKCalloutAccessoryView <NSObject>

@optional
- (_Bool)_mapkit_calloutShouldAlignToDetailBaseline;
- (_Bool)_mapkit_calloutShouldUseIntrinsicContentSize;
- (_Bool)_mapkit_shouldFillCalloutHeight;
- (void)_mapkit_setCalloutAlignedToDetailView:(_Bool)arg1;
- (void)_mapkit_setCalloutTextColor:(UIColor *)arg1;
- (void)_mapkit_setCalloutBackgroundColor:(UIColor *)arg1;
@end

@protocol _MKPopoverEmbeddingViewWindowDelegate <NSObject>
- (void)embeddingView:(_MKPopoverEmbeddingView *)arg1 didMoveToWindow:(UIWindow *)arg2;
- (void)embeddingView:(_MKPopoverEmbeddingView *)arg1 willMoveToWindow:(UIWindow *)arg2;
@end

@protocol _MKUserInteractionGestureRecognizerTouchObserver <NSObject>
- (void)gestureRecognizerTouchesCanceled:(_MKUserInteractionGestureRecognizer *)arg1;
- (void)gestureRecognizerTouchesEnded:(_MKUserInteractionGestureRecognizer *)arg1;
- (void)gestureRecognizerTouchesBegan:(_MKUserInteractionGestureRecognizer *)arg1;
@end

@protocol _MKWiFiObserverDelegate <NSObject>
- (void)wiFiObserverDidChangeEnabled:(_MKWiFiObserver *)arg1;
@end

@protocol _UIPopoverControllerMapsTransitionDelegate <NSObject>

@optional
- (void)_popoverControllerDidFinishMapsTransitionExpanding:(UIPopoverController *)arg1;
- (void)_popoverControllerWillBeginMapsTransitionExpanding:(UIPopoverController *)arg1;
- (void)_popoverControllerDidFinishMapsTransitionMovingSideways:(UIPopoverController *)arg1;
- (void)_popoverControllerWillBeginMapsTransitionMovingSideways:(UIPopoverController *)arg1;
@end

@interface CAAnimation (MKAdditions)
@property long long _mapkit_ID;
@end

@interface CABasicAnimation (MKAdditions)
@end

@interface CALayer (MKAdditions)
- (void)_mapkit_addAnimation:(id)arg1 forKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_mapkit_removeAnimationImmediatelyForKey:(id)arg1;
@property(readonly, retain, nonatomic) CALayer *_mapKit_mapLayer;
- (_Bool)getPresentationValue:(id *)arg1 forValueKey:(id)arg2 animationKey:(id)arg3 removeAnimation:(_Bool)arg4;
- (_Bool)getPresentationValue:(id *)arg1 forKey:(id)arg2 removeAnimation:(_Bool)arg3;
@property(readonly, retain, nonatomic) CALayer *currentLayer;
@end

@interface CALayer (MKDoubleLayer)
- (struct CGRect)convertDoubleRect:(struct CGRect)arg1 toLayer:(id)arg2;
- (struct CGRect)convertDoubleRect:(struct CGRect)arg1 fromLayer:(id)arg2;
- (struct CGPoint)convertDoublePoint:(struct CGPoint)arg1 toLayer:(id)arg2;
- (struct CGPoint)convertDoublePoint:(struct CGPoint)arg1 fromLayer:(id)arg2;
- (void)setDoubleBounds:(struct CGRect)arg1;
- (struct CGRect)doubleBounds;
- (void)setDoublePosition:(struct CGPoint)arg1;
- (struct CGPoint)doublePosition;
@end

@interface CAMediaTimingFunction (MKAdditions)
+ (id)sigmoidFunction;
@end

@interface CLCircularRegion (MKMapItemAdditions)
+ (id)circularRegionFromMapRegion:(id)arg1;
@end

@interface CLHeading (MapKitAdditions)
@property(readonly, retain, nonatomic) NSString *compactDescription;
@property(readonly, nonatomic) _Bool hasGeomagneticVector;
@property(readonly, nonatomic) double heading;
- (id)initWithHeading:(double)arg1 accuracy:(double)arg2;
@end

@interface CLLocation (MKAdditions)
+ (id)_mapKit_locationWithPlace:(id)arg1;
@end

@interface CLLocation (MKLocationManagerExtras)
@property(readonly, nonatomic) int _mapkit_source;
@end

@interface CLLocation (MapKitAdditions)
+ (id)_mapkit_stringWithType:(int)arg1;
@property(readonly, nonatomic) _Bool legacyHasMatch;
@property(readonly, nonatomic) _Bool hasMatch;
@property(readonly, nonatomic) double speedAccuracy;
@property(readonly, nonatomic) double courseAccuracy;
- (_Bool)isEqualToLocationCoordinate:(CDStruct_c3b9c2ee)arg1;
- (id)locationDescription;
- (id)routeMatch;
- (_Bool)hasValidCourse;
- (_Bool)isStale;
- (id)initWithCoordinate:(CDStruct_c3b9c2ee)arg1 rawCoordinate:(CDStruct_c3b9c2ee)arg2 course:(double)arg3 rawCourse:(double)arg4 courseAccuracy:(double)arg5 speed:(double)arg6 speedAccuracy:(double)arg7 altitude:(double)arg8 timestamp:(double)arg9 horizontalAccuracy:(double)arg10 verticalAccuracy:(double)arg11 type:(int)arg12 matchInfo:(id)arg13;
@end

@interface GEOAddress (MKGeoServicesExtras)
- (id)singleLineAddress;
@end

@interface GEOComposedRoute (MKGeoServicesExtras)
- (struct CGImage *)_mapKitImage;
@end

@interface GEOComposedRoute (MKInstructions)
- (id)instructionsForStep:(id)arg1;
@end

@interface GEOComposedWaypoint (MKGeoServicesExtras)
+ (void)composedWaypointForMapItem:(id)arg1 forQuickETA:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3 networkActivityHandler:(CDUnknownBlockType)arg4;
@end

@interface GEODirectionsRouteRequest (MKDirections)
- (id)initWithDirectionsRequest:(id)arg1 origin:(id)arg2 destination:(id)arg3 withFeedback:(id)arg4;
- (void)_commonSetup:(id)arg1;
@end

@interface GEOLocation (MKGeoServicesExtras)
+ (id)locationWithCLLocation:(id)arg1 course:(double)arg2;
- (id)initWithCLLocation:(id)arg1 useMatchInfo:(_Bool)arg2;
- (id)initWithCLLocation:(id)arg1 course:(double)arg2;
- (id)initWithCLLocation:(id)arg1;
@end

@interface GEOMapRegion (MKAdditions)
+ (id)_mapkit_mapRegionForLatitude:(double)arg1 longitude:(double)arg2 latSpan:(double)arg3 longSpan:(double)arg4;
+ (id)_mapkit_mapRegionForCoordinateRegion:(CDStruct_90e2a262)arg1;
+ (id)_mapkit_mapRegionForGEOCoordinateRegion:(CDStruct_90e2a262)arg1;
+ (id)_mapkit_mapRegionEnclosingAnnotations:(id)arg1;
@end

@interface GEOPhoto (GEOSearchExtras)
+ (id)photoWithYelpUserJSON:(id)arg1;
@end

@interface GEOPlace (MKGeoServicesExtras)
@property(readonly, retain, nonatomic) NSString *yelpID;
- (unsigned long long)businessID;
- (id)initWithPlacemark:(id)arg1;
@end

@interface GEOPlace (MKMapItemAdditions)
- (id)clRegion;
- (id)clLocation;
- (id)initWithCLLocation:(id)arg1;
@end

@interface GEOPlaceSearchRequest (MKAdditions)
- (void)_applyDisplayableSearchProperties;
- (void)_applyBasicSearchProperties;
@end

@interface GEOQuickETARequest (MKDirections)
- (id)initWithDirectionsRequest:(id)arg1 origin:(id)arg2 destination:(id)arg3;
@end

@interface GEOReview (GEOSearchExtras)
+ (id)reviewWithYelpJSON:(id)arg1;
@end

@interface GEORoute (MKArrowDrawing)
- (id)maneuverImageForStep:(id)arg1 size:(struct CGSize)arg2 scale:(double)arg3;
@end

@interface GEORoute (MKGeoServicesExtras)
- (struct CGImage *)_mapKitImage;
@end

@interface GEORoute (MKInstructions)
- (id)instructionsForStep:(id)arg1;
@end

@interface GEORouteIncident (MKGeoServicesExtras)
- (struct CGImage *)_mapKitImage;
@end

@interface GEORouteName (MKGeoServicesExtras)
- (struct CGImage *)_mapKitImage;
@end

@interface GEOSearchResponse (MKAdditions)
- (void)_mapItemsWithTraits:(id)arg1 handler:(CDUnknownBlockType)arg2;
@end

@interface GEOURLOptions (MKURLSerializerExtras)
- (id)launchOptions;
- (id)initWithLaunchOptions:(id)arg1;
@end

@interface GEOUser (GEOSearchExtras)
+ (id)userWithYelpJSON:(id)arg1;
@end

@interface MKActivityViewController : UIActivityViewController <UIActivityViewControllerDelegate>
{
    id <MKActivityViewControllerDelegate> _activityControllerDelegate;
}

@property(nonatomic) __weak id <MKActivityViewControllerDelegate> activityControllerDelegate; // @synthesize activityControllerDelegate=_activityControllerDelegate;
- (void).cxx_destruct;
- (void)activityViewControllerDidFinishAirdropTransfer:(id)arg1;
- (CDUnknownBlockType)_activityHandler;
- (CDUnknownBlockType)_completionHandler;
- (id)initWithSource:(id)arg1 destination:(id)arg2 applicationActivities:(id)arg3 routeProviderDelegate:(id)arg4;
- (id)initWithSource:(id)arg1 destination:(id)arg2 applicationActivities:(id)arg3;
- (id)initWithMapItem:(id)arg1 contact:(id)arg2 applicationActivities:(id)arg3 activityProviderDelegate:(id)arg4;
- (id)initWithMapItem:(id)arg1 contact:(id)arg2 applicationActivities:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKAmbientLightMonitor : NSObject
{
    NSHashTable *_observers;
    _Bool _monitoring;
    long long _ambientLightLevel;
    _Bool _debugLogLux;
    struct __IOHIDEventSystemClient *_client;
    struct deque<double, std::__1::allocator<double>> _runningStatBuffer;
    double _runningStatSum;
    double _lightLevelNoneThreshold;
    double _lightLevelLowThreshold;
    double _lightLevelMediumThreshold;
    unsigned int _runningStatSize;
}

+ (id)sharedAmbientLightMonitor;
@property(nonatomic) _Bool debugLogLux; // @synthesize debugLogLux=_debugLogLux;
@property(readonly, nonatomic) long long ambientLightLevel; // @synthesize ambientLightLevel=_ambientLightLevel;
@property(readonly, nonatomic, getter=isMonitoring) _Bool monitoring; // @synthesize monitoring=_monitoring;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)handleIOHIDEvent:(struct __IOHIDEvent *)arg1;
- (void)stopMonitoringWithObserver:(id)arg1;
- (void)startMonitoringWithObserver:(id)arg1;
- (void)_stopMonitoring;
- (void)_startMonitoring;
- (double)_addSampleAndComputeMean:(const double *)arg1;
- (void)_updateThresholds;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MKAnnotationCalloutController : NSObject
{
    id <MKAnnotationCalloutControllerDelegate> _delegate;
    MKAnnotationView *_annotationView;
    unsigned long long _mapDisplayStyle;
}

@property(nonatomic) unsigned long long mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
@property(nonatomic) __weak id <MKAnnotationCalloutControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MKAnnotationView *annotationView; // @synthesize annotationView=_annotationView;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)hideCalloutAnimated:(_Bool)arg1;
- (void)showCalloutForAnnotationView:(id)arg1 animated:(_Bool)arg2 scrollToFit:(_Bool)arg3 avoid:(struct CGRect)arg4;
- (struct CGRect)_visibleCenteringRectInView:(id)arg1;
- (void)_updateCalloutAnimated:(_Bool)arg1;
- (void)_removeAccessoryTargets;
- (void)_removeAccessoryTargetForView:(id)arg1;
- (void)_addAccessoryTargetForView:(id)arg1;
- (void)_calloutAccessoryControlTapped:(id)arg1;
- (void)_setDetailAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setRightAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setLeftAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setSubtitle:(id)arg1 animated:(_Bool)arg2;
- (id)_subtitle;
- (void)_setTitle:(id)arg1;
- (_Bool)_isShowingCallout;
- (void)_updateCallout;
- (double)defaultCalloutHeight;
- (_Bool)isCalloutExpanded;
- (_Bool)calloutContainsPoint:(struct CGPoint)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MKAnnotationContainerView : UIView <MKAnnotationCalloutControllerDelegate>
{
    NSMutableArray *_annotationViews;
    NSMutableArray *_awaitingDropPins;
    MKAnnotationView *_selectedAnnotationView;
    MKAnnotationView *_annotationViewToSelect;
    id <MKAnnotationContainerViewDelegate> _delegate;
    MKAnnotationView *_draggingAnnotationView;
    struct CGPoint _mouseDownPoint;
    struct CGPoint _draggingAnnotationViewCenter;
    unsigned long long _mapType;
    _Bool _clickedOnAnnotationView;
    _Bool _didDragAnnotationView;
    MKAnnotationView *_userLocationView;
    double _annotationViewsRotationRadians;
    struct CGAffineTransform _mapTransform;
    _Bool _addingSubview;
    NSMutableSet *_viewsToAnimate;
    MKAnnotationCalloutController *_calloutController;
    double _mapPitchRadians;
    unsigned long long _mapDisplayStyle;
}

- (void).cxx_destruct;
- (CDStruct_90e2a262)_mapRectWithFraction:(double)arg1 ofVisible:(CDStruct_90e2a262)arg2;
- (void)calloutControllerDidFinishMapsTransitionExpanding:(id)arg1;
- (void)calloutDidAppearForAnnotationView:(id)arg1 inCalloutController:(id)arg2;
- (void)calloutController:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)calloutController:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(CDStruct_c3b9c2ee)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (struct CGRect)calloutController:(id)arg1 visibleCenteringRectInAnnotationView:(id)arg2;
- (void)transitionFrom:(long long)arg1 to:(long long)arg2 duration:(double)arg3;
- (void)stopSuppressingUpdates;
- (void)suppressUpdates;
- (void)annotationViewDidChangeCenterOffset:(id)arg1;
- (void)annotationViewDidChangeZIndex:(id)arg1;
- (unsigned long long)indexForAnnotationView:(id)arg1;
@property(readonly, nonatomic) CDStruct_e1db73fe currentComparisonContext;
- (void)selectAnnotationView:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)addSubview:(id)arg1;
- (void)dropPinsIfNeeded;
- (void)removeAnnotationView:(id)arg1;
- (void)finishAddingAnnotationViews;
- (void)addAnnotationView:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)_updateAddedAnnotationRotation:(id)arg1;
- (void)_willRemoveInternalAnnotationView:(id)arg1;
- (void)_dropPinsIfNeeded:(_Bool)arg1;
- (void)setUserLocationView:(id)arg1;
@property(readonly, nonatomic) MKAnnotationView *userLocationView;
@property(readonly, nonatomic) _Bool hasPendingAnimations;
@property(readonly, nonatomic) _Bool hasDroppingPins;
- (struct UIEdgeInsets)accessoryPadding;
- (void)pinDidDrop:(id)arg1 animated:(_Bool)arg2;
- (void)_dropDraggingAnnotationViewAnimated:(_Bool)arg1;
- (struct CGPoint)draggingAnnotationViewDropPointForPoint:(struct CGPoint)arg1;
- (struct CGPoint)draggingAnnotationViewDropPoint;
- (void)draggingTouchMovedToPoint:(struct CGPoint)arg1;
- (void)_liftForDragging:(id)arg1 mouseDownPoint:(struct CGPoint)arg2;
- (id)annotationViewForPoint:(struct CGPoint)arg1;
- (id)_annotationViewForSelectionAtPoint:(struct CGPoint)arg1 avoidCurrent:(_Bool)arg2;
- (void)updateAnnotationLocationsDuringAnimation:(_Bool)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(struct UIView *)arg2;
- (void)_updateOrientationOfViews:(id)arg1;
- (void)_updateOrientationOfViews:(id)arg1 relative:(id)arg2 projectionView:(struct UIView *)arg3;
- (void)_updateOrientationOfViewsFast:(id)arg1 relative:(id)arg2 projectionView:(struct UIView *)arg3;
- (void)_updateOrientationOfViewsCorrect:(id)arg1 relative:(id)arg2 projectionView:(struct UIView *)arg3;
- (void)_findNextView:(id *)arg1 orientation:(int *)arg2 context:(id)arg3;
@property(readonly, nonatomic) NSMutableArray *annotationViews;
- (void)updateUserLocationView;
- (void)updateAnnotationView:(id)arg1;
- (void)_updateAnnotationView:(id)arg1;
- (struct CGPoint)pointForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_c3b9c2ee)coordinateForAnnotationView:(id)arg1;
- (void)_updateAnnotationViewPerspective;
- (void)deselectAnnotationView:(id)arg1 animated:(_Bool)arg2;
- (void)_setSelectedAnnotationView:(id)arg1 bounce:(_Bool)arg2 pressed:(_Bool)arg3 scrollToFit:(_Bool)arg4;
- (void)_setSelectedAnnotationView:(id)arg1 bounce:(_Bool)arg2 pressed:(_Bool)arg3 scrollToFit:(_Bool)arg4 avoid:(struct CGRect)arg5;
- (void)_showBubbleForAnnotationView:(id)arg1 bounce:(_Bool)arg2 scrollToFit:(_Bool)arg3;
- (void)_showBubbleForAnnotationView:(id)arg1 bounce:(_Bool)arg2 scrollToFit:(_Bool)arg3 avoid:(struct CGRect)arg4;
- (void)removeAnnotationViewsRotationAnimations;
- (void)setAnnotationViewsRotationRadians:(double)arg1 animation:(id)arg2;
@property(readonly, nonatomic) MKPinAnnotationView *bubblePin;
@property(readonly, nonatomic) MKAnnotationView *calloutAnnotationView;
- (struct CGRect)_visibleRect;
- (struct CGRect)_visibleCenteringRectInView:(struct UIView *)arg1;
- (struct CGRect)_visibleCenteringRect;
- (_Bool)isCalloutExpanded;
- (_Bool)calloutContainsPoint:(struct CGPoint)arg1;
- (void)setMapDisplayStyle:(unsigned long long)arg1;
@property(nonatomic) unsigned long long mapType;
@property(nonatomic) _Bool allowsPopoverWhenNotInWindow;
@property(readonly, nonatomic) UIPopoverController *popoverController;
- (void)setMapPitchRadians:(double)arg1;
@property(nonatomic) __weak id <MKAnnotationContainerViewDelegate> delegate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKAnnotationManager : NSObject
{
    id <MKAnnotationMarkerContainer> _container;
    id <MKAnnotationManagerDelegate> _delegate;
    _Bool _annotationRepresentationsAreAddedImmediately;
    NSTimer *_updateVisibleTimer;
    MKQuadTrie *_annotations;
    NSMutableSet *_visibleAnnotations;
    NSMutableSet *_pendingAnnotations;
    NSMutableSet *_disallowAnimationAnnotations;
    NSMutableSet *_invalidCoordinateAnnotations;
    id <MKAnnotation> _selectedAnnotation;
    id <MKAnnotation> _draggedAnnotation;
    NSMapTable *_annotationsToRepresentations;
    NSMutableSet *_annotationRepresentations;
    NSMapTable *_reusableAnnotationRepresentations;
    NSMutableSet *_managedAnnotations;
    NSMutableSet *_managedAnnotationsObservingCoordinate;
    _Bool _isChangingCoordinate;
}

@property(nonatomic) __weak id <MKAnnotation> draggedAnnotation; // @synthesize draggedAnnotation=_draggedAnnotation;
@property(nonatomic) _Bool annotationRepresentationsAreAddedImmediately; // @synthesize annotationRepresentationsAreAddedImmediately=_annotationRepresentationsAreAddedImmediately;
@property(nonatomic) __weak id <MKAnnotationManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <MKAnnotationMarkerContainer> container; // @synthesize container=_container;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_removeRepresentationForAnnotation:(id)arg1 fromCull:(_Bool)arg2;
- (void)cleanUpAnnotationRepresentationForRemoval:(id)arg1;
- (id)_addRepresentationForAnnotation:(id)arg1;
- (void)configureDefaultAnnotationRepresentation:(id)arg1 forAnnotation:(id)arg2;
- (void)configureAnnotationRepresentation:(id)arg1 forAnnotation:(id)arg2;
- (id)newInternalAnnotationRepresentationForInternalAnnotation:(id)arg1;
- (_Bool)internalAnnotationAllowsCustomRepresentation:(id)arg1;
- (_Bool)annotationIsInternal:(id)arg1;
- (id)newDefaultAnnotationRepresentationForAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (id)representationForAnnotation:(id)arg1;
@property(readonly, nonatomic) __weak id <MKAnnotationRepresentation> selectedAnnotationRepresentation;
- (void)deselectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) NSArray *annotationRepresentations;
@property(readonly, nonatomic) NSArray *annotations;
- (void)updateVisibleAnnotations;
- (void)showAnnotationsInMapRect:(CDStruct_90e2a262)arg1;
- (id)annotationsInMapRect:(CDStruct_90e2a262)arg1;
- (_Bool)containsAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationRepresentationWithIdentifier:(id)arg1;
- (void)removeRepresentationForManagedAnnotation:(id)arg1;
- (id)addRepresentationForManagedAnnotation:(id)arg1 notifyDelegate:(_Bool)arg2;
- (void)addRepresentationsForAnnotations:(id)arg1;
- (void)replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)_removeAnnotation:(id)arg1 updateVisible:(_Bool)arg2 removeFromContainer:(_Bool)arg3;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)addAnnotation:(id)arg1;
- (void)_addAnnotation:(id)arg1 updateVisible:(_Bool)arg2;
- (void)addManagedAnnotation:(id)arg1;
- (void)addManagedAnnotation:(id)arg1 observeCoordinateChanges:(_Bool)arg2;
- (void)_setupUpdateVisibleAnnotationsTimer;
- (void)dealloc;
- (id)init;

@end

@interface MKAnnotationView : UIView <MKAnnotationRepresentation, MKLocatableObject>
{
    _Bool _customTransformApplied;
    _Bool _internalTransformApplied;
    _Bool _animatingToCoordinate;
    _Bool _tracking;
    CDStruct_2c43369c _presentationCoordinate;
    double _presentationCourse;
    CDUnknownBlockType _presentationCoordinateChangedCallback;
    MKUserLocationAnnotationViewProxy *_userLocationProxy;
    double _rotationRadians;
    _MKAnnotationViewAnchor *_anchor;
    GEORouteMatch *_routeMatch;
    double _mapRotationRadians;
    _Bool _explicitlyHidden;
    _Bool _hiddenForOffscreen;
    _Bool _hiddenForInvalidPoint;
    double _mapPitchRadians;
    unsigned long long _mapDisplayStyle;
    MKAnnotationManager *_annotationManager;
    id <MKAnnotation> _annotation;
    UICalloutView *_calloutView;
    UIView *_leftCalloutAccessoryView;
    UIView *_rightCalloutAccessoryView;
    UIView *_detailCalloutAccessoryView;
    NSString *_reuseIdentifier;
    UIImage *_image;
    unsigned long long _mapType;
    unsigned long long _zIndex;
    struct CGPoint _centerOffset;
    struct CGPoint _calloutOffset;
    unsigned long long _dragState;
    CDUnknownBlockType _calloutHitTest;
    struct {
        unsigned int disabled:1;
        unsigned int selected:1;
        unsigned int canShowCallout:1;
        unsigned int isHighlighted:1;
        unsigned int canDisplayDisclosureInCallout:1;
        unsigned int canDisplayPlacemarkInCallout:1;
        unsigned int draggable:1;
    } _flags;
    struct CGPoint _leftCalloutOffset;
    struct CGPoint _rightCalloutOffset;
}

+ (_Bool)_followsTerrain;
+ (id)_disclosureCalloutButton;
+ (unsigned long long)_selectedZIndex;
+ (unsigned long long)_zIndex;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)droppedPinTitle;
+ (id)currentLocationTitle;
@property(nonatomic, getter=_isHiddenForInvalidPoint, setter=_setHiddenForInvalidPoint:) _Bool hiddenForInvalidPoint; // @synthesize hiddenForInvalidPoint=_hiddenForInvalidPoint;
@property(nonatomic, getter=_mapDisplayStyle, setter=_setMapDisplayStyle:) unsigned long long mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
@property(nonatomic, getter=_mapPitchRadians, setter=_setMapPitchRadians:) double mapPitchRadians; // @synthesize mapPitchRadians=_mapPitchRadians;
@property(nonatomic, getter=_mapRotationRadians, setter=_setMapRotationRadians:) double mapRotationRadians; // @synthesize mapRotationRadians=_mapRotationRadians;
@property(retain, nonatomic, setter=_setRouteMatch:) GEORouteMatch *_routeMatch; // @synthesize _routeMatch;
@property(retain, nonatomic) UIView *detailCalloutAccessoryView; // @synthesize detailCalloutAccessoryView=_detailCalloutAccessoryView;
@property(retain, nonatomic) UIView *rightCalloutAccessoryView; // @synthesize rightCalloutAccessoryView=_rightCalloutAccessoryView;
@property(retain, nonatomic) UIView *leftCalloutAccessoryView; // @synthesize leftCalloutAccessoryView=_leftCalloutAccessoryView;
@property(nonatomic) struct CGPoint rightCalloutOffset; // @synthesize rightCalloutOffset=_rightCalloutOffset;
@property(nonatomic) struct CGPoint leftCalloutOffset; // @synthesize leftCalloutOffset=_leftCalloutOffset;
@property(copy, nonatomic) CDUnknownBlockType _calloutHitTest; // @synthesize _calloutHitTest;
@property(nonatomic, getter=_isTracking, setter=_setTracking:) _Bool _tracking; // @synthesize _tracking;
@property(nonatomic, getter=_isAnimatingToCoordinate, setter=_setAnimatingToCoordinate:) _Bool _animatingToCoordinate; // @synthesize _animatingToCoordinate;
@property(nonatomic, setter=_setPresentationCourse:) double _presentationCourse; // @synthesize _presentationCourse;
@property(copy, nonatomic, setter=_setPresentationCoordinateChangedCallback:) CDUnknownBlockType _presentationCoordinateChangedCallback; // @synthesize _presentationCoordinateChangedCallback;
@property(nonatomic, setter=_setAnnotationManager:) __weak MKAnnotationManager *_annotationManager; // @synthesize _annotationManager;
- (void).cxx_destruct;
- (void)_didUpdatePosition;
- (void)_updateFromMap;
- (double)_pointsForDistance:(double)arg1;
- (id)_vkMarker;
- (id)_containerView;
- (_Bool)_canChangeOrientation;
- (unsigned long long)_orientationCount;
- (_Bool)_hasAlternateOrientation;
- (void)_transitionFrom:(long long)arg1 to:(long long)arg2 duration:(double)arg3;
- (void)_setRotationRadians:(double)arg1 withAnimation:(id)arg2;
- (void)_userTrackingModeDidChange:(id)arg1;
- (void)_enableRotationForHeadingMode:(double)arg1;
- (id)_annotationContainer;
- (void)setHidden:(_Bool)arg1;
- (void)_setHiddenForOffscreen:(_Bool)arg1;
- (void)_resetZIndexNotify:(_Bool)arg1;
- (void)_resetZIndex;
- (void)_setZIndex:(unsigned long long)arg1;
- (void)_setZIndex:(unsigned long long)arg1 notify:(_Bool)arg2;
- (unsigned long long)_zIndex;
- (void)_setMapType:(unsigned long long)arg1;
- (unsigned long long)_mapType;
- (_Bool)isPersistent;
- (void)_setCanDisplayPlacemarkInCallout:(_Bool)arg1;
- (_Bool)_canDisplayPlacemarkInCallout;
- (void)_setCanDisplayDisclosureInCallout:(_Bool)arg1;
- (_Bool)_canDisplayDisclosureInCallout;
- (void)setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long dragState;
@property(nonatomic, getter=isDraggable) _Bool draggable;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(nonatomic, getter=isEnabled) _Bool enabled;
@property(readonly, nonatomic) struct CGRect _significantFrame;
@property(readonly, nonatomic, getter=_significantBounds) struct CGRect significantBounds;
- (struct CGRect)_mapkit_visibleRect;
@property(readonly, nonatomic) MKUserLocationAnnotationViewProxy *_userLocationProxy;
@property(readonly, nonatomic) VKAnchorWrapper *anchor;
@property(nonatomic, setter=_setPresentationCoordinate:) CDStruct_c3b9c2ee _presentationCoordinate; // @synthesize _presentationCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(nonatomic) struct CGPoint calloutOffset;
@property(nonatomic) struct CGPoint centerOffset;
- (struct CGPoint)_draggingDropOffset;
@property(nonatomic) _Bool canShowCallout;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isSelected) _Bool selected;
@property(retain, nonatomic) UIImage *image;
- (id)_contentLayer;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_setCalloutView:(id)arg1;
- (id)_calloutView;
@property(retain, nonatomic) id <MKAnnotation> annotation;
- (void)prepareForReuse;
@property(readonly, nonatomic) NSString *reuseIdentifier;
- (void)dealloc;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKAnnotationViewInternal : NSObject
{
}

@end

@interface MKAppImageManager : NSObject <NSURLConnectionDataDelegate>
{
    NSCache *_iconCache;
    NSMapTable *_containers;
    NSMutableDictionary *_urlConnections;
}

+ (id)sharedImageManager;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)cancelLoadAppImageAtURL:(id)arg1;
- (void)loadAppImageAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)clearImageCache;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKAppLaunchController : NSObject
{
    SSLookupRequest *_request;
    NSString *_webURLString;
    NSURL *webURL;
}

+ (void)launchAttributionURLs:(id)arg1 withAttributionApps:(id)arg2;
+ (id)sharedController;
@property(retain, nonatomic) NSURL *webURL; // @synthesize webURL;
@property(retain, nonatomic) SSLookupRequest *storeRequest; // @synthesize storeRequest=_request;
- (void).cxx_destruct;
- (void)lookUpAppStoreURLForBundle:(id)arg1;
- (void)dealloc;

@end

@interface MKApplicationStateMonitor : NSObject
{
    BKSApplicationStateMonitor *_appStateMonitor;
    _Bool _inBackground;
    _Bool _active;
    unsigned long long _observerCount;
    _Bool _forceBackboardServicesMonitoring;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool forceBackboardServicesMonitoring; // @synthesize forceBackboardServicesMonitoring=_forceBackboardServicesMonitoring;
@property(readonly, nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(readonly, nonatomic, getter=isInBackground) _Bool inBackground; // @synthesize inBackground=_inBackground;
- (void).cxx_destruct;
- (void)stopObserving;
- (void)startObserving;
- (void)_resignActive;
- (void)_becomeActive;
- (void)_exitBackground;
- (void)_enterBackground;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MKAttributionLabel : UILabel
{
    unsigned long long _mapType;
    _Bool _useDarkText;
}

@property(nonatomic) unsigned long long mapType; // @synthesize mapType=_mapType;
- (void)drawRect:(struct CGRect)arg1;
- (void)_prepareLabel;
- (id)_attributesWithStroke:(_Bool)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MKBasicMapView : UIView
{
    UIView *_hostView;
    VKMapView *_mapView;
    double _mapModeStartTime;
    double _trafficStartTime;
    _Bool _changingViewSize;
}

@property(readonly, nonatomic, getter=isChangingViewSize) _Bool changingViewSize; // @synthesize changingViewSize=_changingViewSize;
@property(nonatomic) double trafficStartTime; // @synthesize trafficStartTime=_trafficStartTime;
@property(nonatomic) double mapModeStartTime; // @synthesize mapModeStartTime=_mapModeStartTime;
@property(readonly, nonatomic) VKMapView *mapView; // @synthesize mapView=_mapView;
- (void).cxx_destruct;
- (void)_updateStatsForTimeSpentInCurrentMapTypeIsShowingFlyover:(_Bool)arg1 ignoreIfViewInWindow:(_Bool)arg2;
- (void)updateStatsForTimeSpentInCurrentMapTypeIsShowingFlyover:(_Bool)arg1;
- (void)updateStatsForSwitchingToMapType:(long long)arg1;
- (void)updateStatsForTrafficEnabledTime;
- (void)_updateStatsForTrafficEnabledTime:(_Bool)arg1;
- (void)updateStatsForEnablingTraffic:(_Bool)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)_updateForCurrentScreen;
- (void)_updateMapViewHidden;
- (_Bool)isPointValidForGesturing:(struct CGPoint)arg1;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toCameraModelPointToView:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_animateCanvasForBounds:(struct CGRect)arg1;
@property(nonatomic) _Bool rendersInBackground;
- (double)calloutContainerCanvasScale;
- (struct CGSize)calloutContainerCanvasSize;
- (void)addCalloutSubview:(id)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets edgeInsets;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andGlobe:(_Bool)arg2 shouldRasterize:(_Bool)arg3;
- (void)_enterBackground:(id)arg1;
- (void)_enterForeground:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKBlockBasedSnapshotRequester : NSObject <MKMapSnapshotCreatorRequester>
{
    CDUnknownBlockType handler;
}

+ (id)snapshotRequesterWitHandler:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler;
- (void).cxx_destruct;
- (void)mapSnapshotCreator:(id)arg1 didCreateSnapshot:(id)arg2 attributionString:(id)arg3 context:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKCALayerCompletionDelegate : NSObject
{
    CDUnknownBlockType _completion;
}

+ (id)delegateWithCompletion:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;

@end

@interface MKCalloutBackgroundView : UIPopoverBackgroundView
{
    double _arrowOffset;
    unsigned long long _arrowDirection;
    UIView *_containerView;
    UIView *_baseBorderView;
    _MKCalloutBackgroundMaskView *_mainMaskView;
    NSMutableArray *_vendedMaskViews;
    unsigned long long _mapDisplayStyle;
    UIImageView *_currentArrowShadow;
}

+ (struct UIEdgeInsets)contentViewInsets;
+ (double)arrowHeight;
+ (double)arrowBase;
+ (_Bool)wantsDefaultContentAppearance;
+ (double)_contentViewCornerRadiusForArrowDirection:(unsigned long long)arg1;
+ (void)setBeingCreatedForSmallCalloutController:(id)arg1;
@property(nonatomic) unsigned long long mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIColor *calloutBackgroundColor;
- (void)_extendLeftRightArrow;
- (void)_retractUpDownArrow;
- (void)_showArrow;
- (void)_hideArrow;
- (void)setArrowDirection:(unsigned long long)arg1;
- (unsigned long long)arrowDirection;
- (void)setArrowOffset:(double)arg1;
- (double)arrowOffset;
- (id)_shadowPath;
- (void)layoutSubviews;
- (void)_layoutMaskView:(id)arg1 withArrowShadow:(_Bool)arg2;
- (id)newMaskLayer;
- (void)_setupViews;
- (struct UIEdgeInsets)_contentViewInsets;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKCalloutBasedAnnotationCalloutController : MKAnnotationCalloutController
{
    UICalloutView *_calloutView;
}

- (void).cxx_destruct;
- (void)hideCalloutAnimated:(_Bool)arg1;
- (void)showCalloutForAnnotationView:(id)arg1 animated:(_Bool)arg2 scrollToFit:(_Bool)arg3 avoid:(struct CGRect)arg4;
- (void)_addCallout:(id)arg1 forAnnotationView:(id)arg2 anchorPoint:(struct CGPoint)arg3 boundaryRect:(struct CGRect)arg4 animated:(_Bool)arg5;
- (void)_setDetailAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setRightAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setLeftAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setSubtitle:(id)arg1 animated:(_Bool)arg2;
- (id)_subtitle;
- (void)_setTitle:(id)arg1;
- (_Bool)_isShowingCallout;
- (_Bool)isCalloutExpanded;
- (_Bool)calloutContainsPoint:(struct CGPoint)arg1;
- (void)calloutView:(id)arg1 didMoveToAnchorPoint:(struct CGPoint)arg2 animated:(_Bool)arg3;
- (void)calloutView:(id)arg1 willMoveToAnchorPoint:(struct CGPoint)arg2 animated:(_Bool)arg3;
- (double)defaultCalloutHeight;
- (id)init;

@end

@interface MKShape : NSObject <MKAnnotation>
{
    NSString *_title;
    NSString *_subtitle;
}

@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKCircle : MKShape <MKOverlay>
{
    CDStruct_2c43369c _coordinate;
    double _radius;
    CDStruct_02837cd9 _boundingMapRect;
}

+ (id)circleWithMapRect:(CDStruct_90e2a262)arg1;
+ (id)circleWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 radius:(double)arg2;
@property(readonly, nonatomic) CDStruct_90e2a262 boundingMapRect; // @synthesize boundingMapRect=_boundingMapRect;
@property(readonly, nonatomic) double radius; // @synthesize radius=_radius;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate; // @synthesize coordinate=_coordinate;
- (_Bool)intersectsMapRect:(CDStruct_90e2a262)arg1;
- (id)_initWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 radius:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

@interface MKOverlayRenderer : NSObject
{
    id <MKOverlay> _overlay;
    CDStruct_02837cd9 _boundingMapRect;
    id _renderer;
    double _contentScaleFactor;
    double _alpha;
}

@property(readonly, nonatomic) id <MKOverlay> overlay; // @synthesize overlay=_overlay;
- (void).cxx_destruct;
- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (_Bool)canDrawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2;
- (void)overlay:(id)arg1 drawKey:(const CDStruct_0e9d808f *)arg2 inContext:(struct CGContext *)arg3;
- (_Bool)overlay:(id)arg1 canDrawKey:(const CDStruct_0e9d808f *)arg2;
- (void)set_renderer:(id)arg1;
- (id)_renderer;
- (CDStruct_90e2a262)_boundingMapRect;
- (void)set_boundingMapRect:(CDStruct_90e2a262)arg1;
- (void)setNeedsDisplayInMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2;
- (void)setNeedsDisplayInMapRect:(CDStruct_90e2a262)arg1;
- (void)setNeedsDisplay;
- (CDStruct_90e2a262)mapRectForRect:(struct CGRect)arg1;
- (struct CGRect)rectForMapRect:(CDStruct_90e2a262)arg1;
- (CDStruct_c3b9c2ee)mapPointForPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointForMapPoint:(CDStruct_c3b9c2ee)arg1;
- (id)_mk_overlayLayer;
- (id)_mk_overlayView;
- (CDStruct_c3b9c2ee)_originMapPoint;
@property(readonly) double contentScaleFactor;
- (void)setContentScaleFactor:(double)arg1;
@property double alpha; // @synthesize alpha=_alpha;
- (id)initWithOverlay:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface MKOverlayPathRenderer : MKOverlayRenderer
{
    UIColor *_fillColor;
    UIColor *_strokeColor;
    double _lineWidth;
    int _lineJoin;
    int _lineCap;
    double _miterLimit;
    double _lineDashPhase;
    NSArray *_lineDashPattern;
    struct CGPath *_path;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (void)fillPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)strokePath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)applyFillPropertiesToContext:(struct CGContext *)arg1 atZoomScale:(double)arg2;
- (void)applyStrokePropertiesToContext:(struct CGContext *)arg1 atZoomScale:(double)arg2;
@property(copy) NSArray *lineDashPattern;
- (void)invalidatePath;
@property struct CGPath *path;
- (void)createPath;
- (id)initWithOverlay:(id)arg1;
@property double lineDashPhase;
@property double miterLimit;
@property int lineCap;
@property int lineJoin;
@property double lineWidth;
@property(retain) UIColor *strokeColor;
@property(retain) UIColor *fillColor;

@end

@interface MKCircleRenderer : MKOverlayPathRenderer
{
}

- (void)createPath;
@property(readonly, nonatomic) MKCircle *circle;
- (id)initWithCircle:(id)arg1;

@end

@interface MKOverlayView : UIView
{
    id <MKOverlay> _overlay;
    CDStruct_02837cd9 _boundingMapRect;
    id _renderer;
}

@property(readonly, nonatomic) id <MKOverlay> overlay; // @synthesize overlay=_overlay;
- (void).cxx_destruct;
- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (_Bool)canDrawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2;
- (void)overlay:(id)arg1 drawKey:(const CDStruct_0e9d808f *)arg2 inContext:(struct CGContext *)arg3;
- (_Bool)overlay:(id)arg1 canDrawKey:(const CDStruct_0e9d808f *)arg2;
- (void)set_renderer:(id)arg1;
- (id)_renderer;
- (CDStruct_90e2a262)_boundingMapRect;
- (void)set_boundingMapRect:(CDStruct_90e2a262)arg1;
- (void)setNeedsDisplayInMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2;
- (void)setNeedsDisplayInMapRect:(CDStruct_90e2a262)arg1;
- (void)setNeedsDisplay;
- (CDStruct_90e2a262)mapRectForRect:(struct CGRect)arg1;
- (struct CGRect)rectForMapRect:(CDStruct_90e2a262)arg1;
- (CDStruct_c3b9c2ee)mapPointForPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointForMapPoint:(CDStruct_c3b9c2ee)arg1;
- (id)_mk_overlayLayer;
- (id)_mk_overlayView;
- (void)setContentScaleFactor:(double)arg1;
- (_Bool)_canDrawContent;
- (CDStruct_c3b9c2ee)_originMapPoint;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
- (id)initWithOverlay:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface MKOverlayPathView : MKOverlayView
{
    UIColor *_fillColor;
    UIColor *_strokeColor;
    double _lineWidth;
    int _lineJoin;
    int _lineCap;
    double _miterLimit;
    double _lineDashPhase;
    NSArray *_lineDashPattern;
    struct CGPath *_path;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (void)fillPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)strokePath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)applyFillPropertiesToContext:(struct CGContext *)arg1 atZoomScale:(double)arg2;
- (void)applyStrokePropertiesToContext:(struct CGContext *)arg1 atZoomScale:(double)arg2;
@property(copy) NSArray *lineDashPattern;
- (void)invalidatePath;
@property struct CGPath *path;
- (void)createPath;
- (id)initWithOverlay:(id)arg1;
@property double lineDashPhase;
@property double miterLimit;
@property int lineCap;
@property int lineJoin;
@property double lineWidth;
@property(retain) UIColor *strokeColor;
@property(retain) UIColor *fillColor;

@end

@interface MKCircleView : MKOverlayPathView
{
}

- (void)createPath;
@property(readonly, nonatomic) MKCircle *circle;
- (id)initWithCircle:(id)arg1;

@end

@interface MKCompassView : UIView
{
    CALayer *_imageLayer;
}

- (void).cxx_destruct;
- (void)layoutSublayersOfLayer:(id)arg1;
@property(nonatomic) double yaw; // @dynamic yaw;
- (void)layoutSubviews;
- (void)updateLocale:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKCoreLocationProvider : NSObject <CLLocationManagerDelegate, CLLocationManagerVehicleDelegate, MKLocationProvider>
{
    CLLocationManager *_clLocationManager;
    id <MKLocationProviderDelegate> _delegate;
    _Bool _locationServicesPreferencesDialogEnabled;
    int _authorizationStatus;
    NSBundle *_effectiveBundle;
    NSString *_effectiveBundleIdentifier;
    CDUnknownBlockType _authorizationRequestBlock;
    _Bool _waitingForAuthorization;
    _Bool _hasQueriedAuthorization;
    NSLock *_authorizationLock;
}

@property(nonatomic) __weak id <MKLocationProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(id)arg2;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
@property(copy, nonatomic) CDUnknownBlockType authorizationRequestBlock;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)dismissHeadingCalibrationDisplay;
@property(readonly, nonatomic) _Bool isSimulation;
@property(readonly, nonatomic) _Bool airplaneModeBlocksLocation;
@property(readonly, nonatomic) int authorizationStatus;
@property(readonly, nonatomic) double expectedGpsUpdateInterval;
@property(nonatomic) int headingOrientation;
@property(nonatomic) _Bool matchInfoEnabled;
@property(nonatomic) double distanceFilter;
@property(nonatomic) long long activityType;
@property(nonatomic, getter=isLocationServicesPreferencesDialogEnabled) _Bool locationServicesPreferencesDialogEnabled;
@property(nonatomic) double desiredAccuracy;
@property(copy, nonatomic) NSString *effectiveBundleIdentifier;
@property(retain, nonatomic) NSBundle *effectiveBundle;
- (void)_resetForNewEffectiveBundle;
- (void)stopUpdatingVehicleHeading;
- (void)startUpdatingVehicleHeading;
- (void)stopUpdatingVehicleSpeed;
- (void)startUpdatingVehicleSpeed;
- (void)stopUpdatingHeading;
- (void)startUpdatingHeading;
- (void)stopUpdatingLocation;
- (void)startUpdatingLocation;
- (void)_updateAuthorizationStatus;
@property(readonly, nonatomic) _Bool usesCLMapCorrection;
@property(readonly, nonatomic) CLLocationManager *_clLocationManager;
- (void)_createCLLocationManager;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKCustomSeparatorTableViewCell : UITableViewCell
{
    MKViewWithHairline *_separatorView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) UIColor *separatorColor;
@property(nonatomic) double leftSeparatorInset;
@property(nonatomic, getter=isSeparatorHidden) _Bool separatorHidden;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface MKDate : NSDate
{
    NSDate *_date;
    NSTimeZone *_tz;
}

+ (id)dateWithNSDate:(id)arg1;
@property(readonly, nonatomic) NSDate *nsDate; // @synthesize nsDate=_date;
@property(retain, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_tz;
- (void).cxx_destruct;
- (id)description;
- (id)descriptionWithLocale:(id)arg1;
- (double)timeIntervalSinceReferenceDate;
- (id)initWithTimeIntervalSinceReferenceDate:(double)arg1;
- (id)initWithNSDate:(id)arg1;
- (long long)dayOfCommonEra;

@end

@interface MKDirections : NSObject
{
    MKDirectionsRequest *_request;
    GEODirectionsRouteRequest *_geoRequest;
    GEOQuickETARequest *_etaRequest;
    GEOQuickETARequester *_etaRequester;
    id <MKLocationManagerOperation> _locationOperation;
    NSObject<OS_dispatch_group> *_waypointsDispatchGroup;
}

- (void).cxx_destruct;
- (void)calculateETAWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_calculateETAWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)calculateDirectionsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_performWithValidCurrentLocationAndWaypointsForQuickETA:(_Bool)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_establishCurrentLocationAndThen:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isCalculating) _Bool calculating;
- (void)cancel;
- (void)dealloc;
- (void)_cleanupLocationOperation;
- (id)initWithRequest:(id)arg1;

@end

@interface MKDirectionsRequest : NSObject <NSCopying>
{
    MKMapItem *_source;
    MKMapItem *_destination;
    unsigned long long _transportType;
    _Bool _requestsAlternateRoutes;
    _Bool _includeTravelTimes;
    _Bool _includeTrafficIncidents;
    _Bool _includeZilchRoutePoints;
    _Bool _includeBasicRoutePoints;
    _Bool _includeEntryPoints;
    _Bool _includeDistanceInETA;
    NSDate *_departureDate;
    NSDate *_arrivalDate;
    NSArray *_additionalTransportTypesRequested;
}

+ (_Bool)isDirectionsRequestURL:(id)arg1;
@property(retain, nonatomic, getter=_additionalTransportTypesRequested, setter=_setAdditionalTransportTypesRequested:) NSArray *additionalTransportTypesRequested; // @synthesize additionalTransportTypesRequested=_additionalTransportTypesRequested;
@property(nonatomic, getter=_includeDistanceInETA, setter=_setIncludeDistanceInETA:) _Bool includeDistanceInETA; // @synthesize includeDistanceInETA=_includeDistanceInETA;
@property(readonly, nonatomic) _Bool _includeEntryPoints; // @synthesize _includeEntryPoints;
@property(readonly, nonatomic) _Bool _includeBasicRoutePoints; // @synthesize _includeBasicRoutePoints;
@property(readonly, nonatomic) _Bool _includeZilchRoutePoints; // @synthesize _includeZilchRoutePoints;
@property(readonly, nonatomic) _Bool _includeTrafficIncidents; // @synthesize _includeTrafficIncidents;
@property(readonly, nonatomic) _Bool _includeTravelTimes; // @synthesize _includeTravelTimes;
@property(retain, nonatomic) MKMapItem *destination; // @synthesize destination=_destination;
@property(retain, nonatomic) MKMapItem *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (_Bool)writeToURL:(id)arg1 error:(id *)arg2;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithContentsOfURL:(id)arg1;
- (id)_mapkit_initWithAllTransportTypesSource:(id)arg1 destination:(id)arg2 arrivalDate:(id)arg3;
- (id)_mapkit_initWithSource:(id)arg1 destination:(id)arg2 transportType:(unsigned long long)arg3 arrivalDate:(id)arg4;
- (id)_mapkit_initWithAllTransportTypesSource:(id)arg1 destination:(id)arg2 departureDate:(id)arg3;
- (id)_mapkit_initWithSource:(id)arg1 destination:(id)arg2 transportType:(unsigned long long)arg3 departureDate:(id)arg4;
- (id)_mapkit_initWithSource:(id)arg1 destination:(id)arg2 transportType:(unsigned long long)arg3 arrivalDate:(id)arg4 includeTravelTimes:(_Bool)arg5 includeTrafficIncidents:(_Bool)arg6 includeEntryPoints:(_Bool)arg7 includeRoutePoints:(_Bool)arg8;
- (id)_mapkit_initWithSource:(id)arg1 destination:(id)arg2 transportType:(unsigned long long)arg3 departureDate:(id)arg4 includeTravelTimes:(_Bool)arg5 includeTrafficIncidents:(_Bool)arg6 includeEntryPoints:(_Bool)arg7 includeRoutePoints:(_Bool)arg8;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (void)setArrivalDate:(id)arg1;
- (id)arrivalDate;
- (void)setDepartureDate:(id)arg1;
- (id)departureDate;
- (id)_arrivalDate;
- (id)_departureDate;
- (void)setRequestsAlternateRoutes:(_Bool)arg1;
- (_Bool)requestsAlternateRoutes;
- (void)setTransportType:(unsigned long long)arg1;
- (unsigned long long)transportType;
- (unsigned long long)_transportType;
@property(readonly, nonatomic) _Bool _includeTypicalRouteDuration;

@end

@interface MKDirectionsResponse : NSObject
{
    GEODirectionsResponse *_geoResponse;
    MKMapItem *_source;
    MKMapItem *_destination;
    NSArray *_routes;
    struct CGImage *_routeImage;
    struct CGImage *_incidentImage;
}

+ (id)_responseWithGEOResponse:(id)arg1 request:(id)arg2 origin:(id)arg3 destination:(id)arg4 error:(id *)arg5;
@property(readonly, nonatomic) NSArray *routes; // @synthesize routes=_routes;
@property(readonly, nonatomic) MKMapItem *destination; // @synthesize destination=_destination;
@property(readonly, nonatomic) MKMapItem *source; // @synthesize source=_source;
- (void).cxx_destruct;
@property(readonly, retain, nonatomic) GEODirectionsResponse *_geoResponse;
@property(readonly, retain, nonatomic) NSURL *_mapsURL;
@property(readonly, retain, nonatomic) NSString *_incidentDescription;
@property(readonly, nonatomic) struct CGImage *_incidentImage;
- (struct CGImage *)_routeImage;
@property(readonly, retain, nonatomic) GEORoute *_route;
@property(readonly, nonatomic) double _typicalTrafficRatio;
- (id)_completeRoutesFrom:(id)arg1;
- (id)_stitchRoute:(id)arg1 routesDict:(id)arg2;
- (id)_initWithGEOResponse:(id)arg1 request:(id)arg2 origin:(id)arg3 destination:(id)arg4;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MKDistanceDetailProvider : NSObject <MKLocationManagerObserver>
{
    GEOPlace *_place;
    NSString *_distanceToPlace;
    _Bool _useMetric;
    _Bool _useYardsForShortDistances;
    CDUnknownBlockType _updateHandler;
}

+ (_Bool)infoAvailable;
@property(retain) GEOPlace *place; // @synthesize place=_place;
@property(copy) CDUnknownBlockType updateHandler; // @synthesize updateHandler=_updateHandler;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_updateDistanceToPlace;
- (void)_handleLocaleChangeNotification:(id)arg1;
- (void)dealloc;
- (void)endUpdates;
- (void)beginUpdateWithHandler:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKDistanceFormatter : NSFormatter
{
    NSLocale *_locale;
    unsigned long long _units;
    unsigned long long _unitStyle;
}

@property(nonatomic) unsigned long long unitStyle; // @synthesize unitStyle=_unitStyle;
@property(nonatomic) unsigned long long units; // @synthesize units=_units;
@property(copy, nonatomic) NSLocale *locale; // @synthesize locale=_locale;
- (void).cxx_destruct;
- (_Bool)isPartialStringValid:(id *)arg1 proposedSelectedRange:(struct _NSRange *)arg2 originalString:(id)arg3 originalSelectedRange:(struct _NSRange)arg4 errorDescription:(id *)arg5;
- (_Bool)getObjectValue:(id *)arg1 forString:(id)arg2 errorDescription:(id *)arg3;
- (double)distanceFromString:(id)arg1;
- (id)stringForObjectValue:(id)arg1;
- (id)stringFromDistance:(double)arg1;
- (_Bool)_useMetric;
- (id)description;
- (id)init;

@end

@interface MKETAResponse : NSObject
{
    MKMapItem *_source;
    MKMapItem *_destination;
    double _expectedTravelTime;
    double _distance;
    NSArray *_sortedETAs;
}

@property(readonly, nonatomic, getter=_sortedETAs) NSArray *sortedETAs; // @synthesize sortedETAs=_sortedETAs;
@property(readonly, nonatomic, getter=_distance) double distance; // @synthesize distance=_distance;
@property(readonly, nonatomic) double expectedTravelTime; // @synthesize expectedTravelTime=_expectedTravelTime;
@property(readonly, nonatomic) MKMapItem *destination; // @synthesize destination=_destination;
@property(readonly, nonatomic) MKMapItem *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (id)initWithSource:(id)arg1 destination:(id)arg2 expectedTravelTime:(double)arg3 distance:(double)arg4 sortedETAs:(id)arg5;

@end

@interface MKMultiPoint : MKShape
{
    CDStruct_c3b9c2ee *_points;
    unsigned long long _pointCount;
    CDStruct_02837cd9 _boundingRect;
}

@property(readonly, nonatomic) unsigned long long pointCount; // @synthesize pointCount=_pointCount;
- (_Bool)intersectsMapRect:(CDStruct_90e2a262)arg1;
- (CDStruct_c3b9c2ee)coordinate;
- (void)getCoordinates:(CDStruct_c3b9c2ee *)arg1 range:(struct _NSRange)arg2;
- (void)_assignPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
- (void)_setPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
- (void)_setCoordinates:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
- (void)_calculateBounds;
- (void)_setBounds:(CDStruct_90e2a262)arg1;
- (CDStruct_90e2a262)boundingMapRect;
- (CDStruct_c3b9c2ee *)points;
- (void)dealloc;

@end

@interface MKPolyline : MKMultiPoint <MKOverlay>
{
}

+ (id)polylineWithCoordinates:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
+ (id)polylineWithPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
@property(readonly, nonatomic) CDStruct_90e2a262 boundingMapRect;
- (_Bool)intersectsMapRect:(CDStruct_90e2a262)arg1;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
- (void)_calculateBounds;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

@interface MKGeodesicPolyline : MKPolyline
{
}

+ (id)polylineWithCoordinates:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
+ (id)polylineWithPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;

@end

@interface MKIconManager : NSObject
{
}

+ (id)imageForMapItem:(id)arg1 size:(unsigned long long)arg2 forScale:(double)arg3 format:(int)arg4;
+ (id)imageForMapItem:(id)arg1 forScale:(double)arg2;

@end

@interface MKInstructionContents : NSObject
{
    int _maneuverType;
    int _transportType;
    NSString *_intersectionName;
    NSString *_destinationName;
    NSString *_exitNumber;
    NSArray *_branchNames;
    NSArray *_towardNames;
    int _junctionAngle;
    _Bool _toFreeway;
}

+ (id)contentsWithManeuverType:(int)arg1 transportType:(int)arg2;
+ (id)contentsWithSubstep:(id)arg1 transportType:(int)arg2;
+ (id)contentsWithStep:(id)arg1 transportType:(int)arg2;
@property(nonatomic) int junctionAngle; // @synthesize junctionAngle=_junctionAngle;
@property(nonatomic) _Bool toFreeway; // @synthesize toFreeway=_toFreeway;
@property(retain, nonatomic) NSArray *towardNames; // @synthesize towardNames=_towardNames;
@property(retain, nonatomic) NSArray *branchNames; // @synthesize branchNames=_branchNames;
@property(retain, nonatomic) NSString *exitNumber; // @synthesize exitNumber=_exitNumber;
@property(retain, nonatomic) NSString *destinationName; // @synthesize destinationName=_destinationName;
@property(retain, nonatomic) NSString *intersectionName; // @synthesize intersectionName=_intersectionName;
@property(nonatomic) int transportType; // @synthesize transportType=_transportType;
@property(nonatomic) int maneuverType; // @synthesize maneuverType=_maneuverType;
- (void).cxx_destruct;
- (id)instruction;
- (id)_walkingInstructionForStart;
- (id)_walkingInstructionForRoundabout;
- (id)_walkingInstructionForUTurn;
- (id)_walkingInstructionForContinue;
- (id)_walkingInstructionForTurn;
- (id)_instructionForChangeHighway;
- (id)_instructionForExit;
- (id)_instructionForStart;
- (id)_instructionForArrival;
- (id)_instructionForFerry;
- (id)_instructionForRoundabout;
- (id)_instructionForUTurn;
- (id)_instructionForContinue;
- (id)_instructionForBranch;
- (id)_instructionForTurn;
- (id)_instructionsForSigns;
- (id)description;
@property(readonly, nonatomic) NSString *primaryName;
@property(readonly, nonatomic) _Bool hasName;
@property(readonly, nonatomic) _Bool useTowardNames;
@property(readonly, nonatomic) _Bool useDestinationName;
@property(readonly, nonatomic) _Bool useIntersectionName;
@property(readonly, nonatomic) _Bool useRoadName;
@property(readonly, nonatomic) _Bool isExitManeuver;
@property(retain, nonatomic) NSString *roadName;
- (void)_populateFromSubstep:(id)arg1;
- (void)_populateFromStep:(id)arg1;
- (id)_exitNumberFromNameInfo:(id)arg1;
- (id)_stringFromNameInfo:(id)arg1;
- (void)setName:(id)arg1 signposts:(id)arg2;
- (id)init;

@end

@interface MKJunction : NSObject
{
    CDStruct_e02beb0c *_elements;
    unsigned long long _count;
    int _type;
    struct *_snapped[8];
}

@property(readonly, nonatomic) int type; // @synthesize type=_type;
- (void)getRoundaboutArrowPath:(id *)arg1 intersectionBackgroundPath:(id *)arg2 strokePath:(id *)arg3 withSize:(struct CGSize)arg4 metrics:(CDStruct_715e5093)arg5 drivingSide:(int)arg6;
- (id)roundaboutArrowWithSize:(struct CGSize)arg1 metrics:(CDStruct_715e5093)arg2 outerRadius:(double)arg3 endAngle:(double)arg4 pivot:(struct CGPoint *)arg5;
- (void)getArrowPath:(id *)arg1 arrowStrokePath:(id *)arg2 pivot:(struct CGPoint *)arg3 withSize:(struct CGSize)arg4 metrics:(CDStruct_715e5093)arg5;
- (void)getArrowPath:(id *)arg1 arrowStrokePath:(id *)arg2 intersectionBackgroundPath:(id *)arg3 strokePath:(id *)arg4 withSize:(struct CGSize)arg5 metrics:(CDStruct_715e5093)arg6 drivingSide:(int)arg7;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithType:(int)arg1 maneuver:(int)arg2 drivingSide:(int)arg3 elements:(CDStruct_e02beb0c *)arg4 count:(unsigned long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface MKLabelMarkerView : MKAnnotationView
{
}

+ (_Bool)_followsTerrain;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)setAnnotation:(id)arg1;
- (void)_deregisterObserver;
- (void)_registerObserver;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKLayer : CALayer
{
    struct CGRect _hitBounds;
    struct CGPoint _hitOffset;
    struct CGPoint _hitOutset;
}

@property(readonly, nonatomic) struct CGRect hitBounds; // @synthesize hitBounds=_hitBounds;
@property(nonatomic) struct CGPoint hitOutset; // @synthesize hitOutset=_hitOutset;
@property(nonatomic) struct CGPoint hitOffset; // @synthesize hitOffset=_hitOffset;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)setBounds:(struct CGRect)arg1;

@end

@interface MKLocalSearch : NSObject
{
    MKLocalSearchRequest *_request;
    id <MKMapServiceTicket> _ticket;
}

- (void).cxx_destruct;
- (void)_handleMapItems:(id)arg1 boundingRegion:(id)arg2 error:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4 queue:(id)arg5;
@property(readonly, nonatomic, getter=isSearching) _Bool searching;
- (void)cancel;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_startWithCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;
- (id)initWithRequest:(id)arg1;
- (id)init;
- (void)_phoneOnlyStartWithCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;

@end

@interface MKSearchCompleter : NSObject
{
    NSString *_fragment;
    CDStruct_feeb6407 _boundingRegion;
    id <MKSearchCompleterDelegate> _delegate;
    id _context;
    NSString *_identifier;
    long long _entriesType;
    long long _listType;
    double _timeSinceLastInBoundingRegion;
    CLLocation *_deviceLocation;
}

+ (id)alloc;
@property(retain, nonatomic) CLLocation *deviceLocation; // @synthesize deviceLocation=_deviceLocation;
@property(nonatomic) double timeSinceLastInBoundingRegion; // @synthesize timeSinceLastInBoundingRegion=_timeSinceLastInBoundingRegion;
@property(nonatomic) long long listType; // @synthesize listType=_listType;
@property(nonatomic) long long entriesType; // @synthesize entriesType=_entriesType;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) __weak id context; // @synthesize context=_context;
@property(nonatomic) __weak id <MKSearchCompleterDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) CDStruct_90e2a262 boundingRegion; // @synthesize boundingRegion=_boundingRegion;
@property(copy, nonatomic) NSString *fragment; // @synthesize fragment=_fragment;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *results;
- (void)retry;
- (void)cancel;
- (_Bool)isSearching;
- (_Bool)resultsAreCurrent;
- (id)init;

@end

@interface MKLocalSearchCompleter : MKSearchCompleter
{
    double _lastRequestTime;
    _Bool _dirty;
    NSArray *_results;
    NSTimer *_timer;
    id <GEOMapServiceCompletionTicket> _ticket;
    int _source;
}

- (void).cxx_destruct;
- (id)results;
- (void)retry;
- (void)cancel;
- (void)_cancelTimer;
- (_Bool)resultsAreCurrent;
- (_Bool)isSearching;
- (void)setBoundingRegion:(CDStruct_90e2a262)arg1;
- (int)source;
- (void)setSource:(int)arg1;
- (void)setFragment:(id)arg1;
- (void)_scheduleRequest;
- (void)_markDirty;
- (void)_schedulePendingRequest;
- (void)_fireRequest;
- (void)_handleError:(id)arg1 forTicket:(id)arg2;
- (void)_handleCompletion:(id)arg1 forTicket:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface MKLocalSearchRequest : NSObject <NSCopying>
{
    NSString *_naturalLanguageQuery;
    _Bool _hasRegion;
    CDStruct_feeb6407 _region;
    _Bool _allowPhoneNumberLookupUsingCellular;
    id <GEOCompletionItem> _geoCompletionItem;
    CLLocation *_deviceLocation;
    _MKLocalSearchMerchantParameters *_merchantParameters;
    NSArray *_phoneNumbers;
    NSArray *_muids;
    NSString *_contactsDataString;
    NSString *_canonicalSearchString;
}

+ (id)searchRequestWithCompletion:(id)arg1;
@property(nonatomic, getter=_allowPhoneNumberLookupUsingCellular, setter=_setAllowPhoneNumberLookupUsingCellular:) _Bool allowPhoneNumberLookupUsingCellular; // @synthesize allowPhoneNumberLookupUsingCellular=_allowPhoneNumberLookupUsingCellular;
@property(retain, nonatomic, getter=_canonicalSearchString, setter=_setCanonicalSearchString:) NSString *canonicalSearchString; // @synthesize canonicalSearchString=_canonicalSearchString;
@property(retain, nonatomic, getter=_contactsDataString, setter=_setContactsDataString:) NSString *contactsDataString; // @synthesize contactsDataString=_contactsDataString;
@property(retain, nonatomic, getter=_muids, setter=_setMuids:) NSArray *muids; // @synthesize muids=_muids;
@property(retain, nonatomic, getter=_phoneNumbers, setter=_setPhoneNumbers:) NSArray *phoneNumbers; // @synthesize phoneNumbers=_phoneNumbers;
@property(retain, nonatomic, getter=_merchantParameters, setter=_setMerchantParameters:) _MKLocalSearchMerchantParameters *merchantParameters; // @synthesize merchantParameters=_merchantParameters;
@property(retain, nonatomic, getter=_deviceLocation, setter=_setDeviceLocation:) CLLocation *deviceLocation; // @synthesize deviceLocation=_deviceLocation;
@property(readonly, nonatomic) id <GEOCompletionItem> geoCompletionItem; // @synthesize geoCompletionItem=_geoCompletionItem;
@property(readonly, nonatomic) _Bool _hasRegion; // @synthesize _hasRegion;
@property(nonatomic) CDStruct_90e2a262 region; // @synthesize region=_region;
@property(copy, nonatomic) NSString *naturalLanguageQuery; // @synthesize naturalLanguageQuery=_naturalLanguageQuery;
- (void).cxx_destruct;
- (id)description;
- (id)_dictionaryRepresentation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCompletion:(id)arg1;

@end

@interface MKLocalSearchResponse : NSObject
{
    NSArray *_mapItems;
    CDStruct_feeb6407 _boundingRegion;
}

@property(readonly, nonatomic) CDStruct_90e2a262 boundingRegion; // @synthesize boundingRegion=_boundingRegion;
@property(readonly, nonatomic) NSArray *mapItems; // @synthesize mapItems=_mapItems;
- (void).cxx_destruct;
- (id)description;
- (id)_dictionaryRepresentation;
- (id)_initWithMapItems:(id)arg1 boundingRegion:(id)arg2;

@end

@interface MKLocationManager : NSObject <_MKWiFiObserverDelegate, MKLocationProviderDelegate>
{
    id <MKLocationProvider> _locationProvider;
    NSHashTable *_locationObservers;
    NSHashTable *_locationListeners;
    NSHashTable *_headingObservers;
    CLLocation *_lastLocation;
    double _lastLocationUpdateTime;
    _Bool _isLastLocationStale;
    _Bool _lastLocationPushed;
    _Bool _trackingLocation;
    _Bool _trackingHeading;
    id <MKLocationRecorder> _locationRecorder;
    double _applicationResumeTime;
    double _applicationSuspendTime;
    double _headingUpdateTime;
    double _locationAccuracyUpdateTime;
    _Bool _allowUpdateCoalescing;
    NSTimer *_coalesceTimer;
    double _lastLocationReportTime;
    GEOLocationShifter *_locationShifter;
    CLHeading *_throttledHeading;
    CLHeading *_heading;
    CDUnknownBlockType _networkActivity;
    _Bool _enabled;
    _Bool _useCourseForHeading;
    _Bool _logStartStopLocationUpdates;
    double _lastVehicleHeading;
    double _lastVehicleSpeed;
    double _lastVehicleHeadingUpdateTime;
    double _lastVehicleSpeedUpdateTime;
    int _consecutiveOutOfCourseCount;
    double _navCourse;
    CDUnknownBlockType _locationCorrector;
    double _minimumLocationUpdateInterval;
    _Bool _continuedAfterBecomingInactive;
    _Bool _suspended;
    NSMutableArray *_recentLocationUpdateIntervals;
    _MKWiFiObserver *_wifiObserver;
    _Bool _hasCustomDesiredAccuracy;
    _Bool _continuesWhileInactive;
    NSError *_locationError;
}

+ (id)sharedLocationManager;
+ (void)setCanMonitorWiFiStatus:(_Bool)arg1;
@property(nonatomic) double minimumLocationUpdateInterval; // @synthesize minimumLocationUpdateInterval=_minimumLocationUpdateInterval;
@property(nonatomic) _Bool logStartStopLocationUpdates; // @synthesize logStartStopLocationUpdates=_logStartStopLocationUpdates;
@property(nonatomic) _Bool allowUpdateCoalescing; // @synthesize allowUpdateCoalescing=_allowUpdateCoalescing;
@property(readonly, nonatomic, getter=wasLastLocationPushed) _Bool lastLocationPushed; // @synthesize lastLocationPushed=_lastLocationPushed;
@property(copy, nonatomic) CDUnknownBlockType locationCorrector; // @synthesize locationCorrector=_locationCorrector;
@property(readonly, nonatomic) double navigationCourse; // @synthesize navigationCourse=_navCourse;
@property(nonatomic) _Bool continuesWhileInactive; // @synthesize continuesWhileInactive=_continuesWhileInactive;
@property(nonatomic) _Bool useCourseForHeading; // @synthesize useCourseForHeading=_useCourseForHeading;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(retain, nonatomic) id <MKLocationRecorder> locationRecorder; // @synthesize locationRecorder=_locationRecorder;
@property(retain, nonatomic) CLHeading *throttledHeading; // @synthesize throttledHeading=_throttledHeading;
@property(readonly, nonatomic) CLHeading *heading; // @synthesize heading=_heading;
@property(copy, nonatomic) CDUnknownBlockType networkActivity; // @synthesize networkActivity=_networkActivity;
@property(readonly, nonatomic) NSError *locationError; // @synthesize locationError=_locationError;
@property(readonly, nonatomic) _Bool isLastLocationStale; // @synthesize isLastLocationStale=_isLastLocationStale;
- (void).cxx_destruct;
- (void)stopVehicleHeadingUpdate;
- (void)startVehicleHeadingUpdate;
- (void)stopVehicleSpeedUpdate;
- (void)startVehicleSpeedUpdate;
- (void)stopHeadingUpdateWithObserver:(id)arg1;
- (void)startHeadingUpdateWithObserver:(id)arg1;
- (void)_setTrackingHeading:(_Bool)arg1;
- (id)singleLocationUpdateWithDesiredAccuracy:(double)arg1 handler:(CDUnknownBlockType)arg2;
- (id)singleLocationUpdateWithHandler:(CDUnknownBlockType)arg1;
- (void)stopLocationUpdateWithObserver:(id)arg1;
- (void)startLocationUpdateWithObserver:(id)arg1;
- (void)_startLocationUpdateWithObserver:(id)arg1 desiredAccuracy:(double)arg2;
- (void)listenForLocationUpdates:(id)arg1;
- (void)locationProvider:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationProvider:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationProviderDidResumeLocationUpdates:(id)arg1;
- (void)locationProviderDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationProviderShouldPauseLocationUpdates:(id)arg1;
- (void)locationProviderDidChangeAuthorizationStatus:(id)arg1;
- (void)locationProvider:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationProvider:(id)arg1 didReceiveError:(id)arg2;
- (void)_locationProvider:(id)arg1 didUpdateLocation:(id)arg2 lastKnownNavCourse:(double)arg3;
- (void)locationProvider:(id)arg1 didUpdateLocation:(id)arg2 lastKnownNavCourse:(double)arg3;
- (void)locationProvider:(id)arg1 didUpdateLocation:(id)arg2;
- (void)pushLocation:(id)arg1;
- (_Bool)_shouldAllowLocationUpdateInterval:(double)arg1;
- (void)dismissHeadingCalibrationDisplay;
- (void)dampenGPSLocationAccuracy:(id *)arg1 oldLocationSource:(int)arg2;
- (void)reportCoalescedUpdated;
- (void)_stopCoalescingUpdates;
- (void)_startCoalescingUpdates:(int)arg1;
- (_Bool)shouldStopCoalescingLocation:(id)arg1;
- (_Bool)shouldStartCoalescingLocation:(id)arg1;
- (_Bool)shouldCoalesceUpdates;
- (void)setCoalesceTimer:(id)arg1;
@property(readonly, nonatomic) double expectedGpsUpdateInterval;
@property(nonatomic) long long activityType;
@property(nonatomic) _Bool matchInfoEnabled;
@property(nonatomic) double distanceFilter;
@property(nonatomic) double desiredAccuracy;
- (_Bool)isLocationServicesPossiblyAvailable:(id *)arg1;
- (void)_setTrackingLocation:(_Bool)arg1;
- (void)_syncLocationProviderWithTracking;
- (void)reset;
- (void)_reportHeadingFailureWithError:(id)arg1;
- (void)_reportHeadingSuccess;
- (void)_reportLocationReset;
- (void)_reportLocationSuccess;
- (void)_reportLocationFailureWithError:(id)arg1;
- (void)_reportLocationStatus:(SEL)arg1;
- (void)_suspend;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)resetAfterResumeIfNecessary;
- (_Bool)_isTimeToResetOnResume;
@property(readonly, nonatomic) _Bool locationShiftEnabled;
@property(readonly, nonatomic) _Bool hasLocation;
- (void)setHeading:(id)arg1;
@property(readonly, nonatomic) double vehicleHeadingOrCourse;
@property(readonly, nonatomic) double currentVehicleSpeed;
@property(readonly, nonatomic) double currentVehicleHeading;
@property(copy, nonatomic) CDUnknownBlockType authorizationRequestBlock;
@property(nonatomic) long long headingOrientation;
@property(readonly, nonatomic) GEOLocation *courseCorrectedLocation;
@property(readonly, nonatomic) GEOLocation *gridSnappedCurrentLocation;
@property(readonly, nonatomic) GEOLocation *currentLocation;
@property(readonly, nonatomic) double headingUpdateTimeInterval;
- (void)setLastLocation:(id)arg1;
@property(readonly, nonatomic) CLLocation *lastLocation;
@property(readonly, nonatomic) int lastLocationSource;
@property(retain, nonatomic) id <MKLocationProvider> locationProvider;
@property(copy, nonatomic) NSString *effectiveBundleIdentifier;
@property(retain, nonatomic) NSBundle *effectiveBundle;
@property(nonatomic, getter=isLocationServicesPreferencesDialogEnabled) _Bool locationServicesPreferencesDialogEnabled;
- (void)wiFiObserverDidChangeEnabled:(id)arg1;
- (void)_airplaneModeChanged;
- (void)_refreshAirplaneMode;
@property(readonly, nonatomic) _Bool isAirplaneModeBlockingLocation;
@property(readonly, nonatomic) _Bool isHeadingServicesAvailable;
@property(readonly, nonatomic) _Bool isLocationServicesPossiblyAvailable;
@property(readonly, nonatomic) _Bool isLocationServicesAvailable;
@property(readonly, nonatomic) _Bool isLocationServicesRestricted;
@property(readonly, nonatomic) _Bool isLocationServicesDenied;
@property(readonly, nonatomic) _Bool isLocationServicesApproved;
@property(readonly, nonatomic, getter=isLocationServicesAuthorizationNeeded) _Bool locationServicesAuthorizationNeeded;
@property(readonly, nonatomic) _Bool isWiFiEnabled;
@property(readonly, nonatomic) _Bool isLocationServicesEnabled;
- (void)dealloc;
- (id)init;
- (void)_useCoreLocationProvider;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKLocationManagerSingleUpdater : NSObject <MKLocationManagerObserver, MKLocationManagerOperation>
{
    CDUnknownBlockType _handler;
    _Bool _active;
    double _desiredAccuracy;
    MKLocationManagerSingleUpdater *_selfReference;
    MKLocationManager *_locationManager;
}

@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)cancel;
- (void)start;
- (void)dealloc;
- (id)initWithLocationManager:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithLocationManager:(id)arg1 desiredAccuracy:(double)arg2 handler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKMapAnnotationManager : MKAnnotationManager
{
    MKAnnotationView *_userLocationView;
    _Bool _addedUserLocationAnnotation;
}

- (void).cxx_destruct;
- (id)newInternalAnnotationRepresentationForInternalAnnotation:(id)arg1;
- (_Bool)internalAnnotationAllowsCustomRepresentation:(id)arg1;
- (_Bool)annotationIsInternal:(id)arg1;
- (void)cleanUpAnnotationRepresentationForRemoval:(id)arg1;
- (void)configureAnnotationRepresentation:(id)arg1 forAnnotation:(id)arg2;
- (void)configureDefaultAnnotationRepresentation:(id)arg1 forAnnotation:(id)arg2;
- (id)newDefaultAnnotationRepresentationForAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (id)_defaultUserLocationAnnotationView:(id)arg1;

@end

@interface MKMapAttribution : NSObject
{
    NSAttributedString *_string;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
@property(readonly, nonatomic) NSAttributedString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (id)initWithStringAttributes:(id)arg1 regionalAttributions:(id)arg2 globalAttributions:(id)arg3;
@property(readonly, nonatomic) NSAttributedString *disclosureArrow;
- (id)attributedStringWithImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKMapAttributionImage : NSObject
{
    NSDictionary *_imageNameForScale;
}

- (void).cxx_destruct;
- (id)imageNameForScale:(double)arg1;
- (id)initWithAttributions:(id)arg1 type:(long long)arg2;

@end

@interface MKMapCamera : NSObject <NSSecureCoding, NSCopying>
{
    CDStruct_2c43369c _centerCoordinate;
    double _heading;
    double _pitch;
    double _altitude;
    MKMapView *_mapView;
}

+ (_Bool)supportsSecureCoding;
+ (id)_cameraLookingAtMapRect:(CDStruct_90e2a262)arg1 forViewSize:(struct CGSize)arg2;
+ (id)_cameraLookingAtGEOMapRect:(const CDStruct_90e2a262 *)arg1 aspectRatio:(float)arg2;
+ (id)cameraLookingAtCenterCoordinate:(CDStruct_c3b9c2ee)arg1 fromEyeCoordinate:(CDStruct_c3b9c2ee)arg2 eyeAltitude:(double)arg3;
+ (id)camera;
@property(nonatomic) double altitude; // @synthesize altitude=_altitude;
@property(nonatomic, getter=_precisePitch, setter=_setPrecisePitch:) double precisePitch; // @synthesize precisePitch=_pitch;
@property(nonatomic) double heading; // @synthesize heading=_heading;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate; // @synthesize centerCoordinate=_centerCoordinate;
- (void).cxx_destruct;
- (_Bool)_validate;
- (id)description;
- (void)_updateState;
@property(nonatomic) double pitch;
- (void)_setMapView:(id)arg1;
- (id)_mapView;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (CDStruct_90e2a262)_enclosingGEOMapRectForAspectRatio:(float)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKMapGestureController : NSObject <MKVariableDelayTapRecognizerDelegate, _MKUserInteractionGestureRecognizerTouchObserver, UIGestureRecognizerDelegate>
{
    MKBasicMapView *_mapView;
    id <MKMapGestureControllerDelegate> _delegate;
    MKVariableDelayTapRecognizer *_doubleTapGestureRecognizer;
    UITapGestureRecognizer *_twoFingerTapGestureRecognizer;
    UILongPressGestureRecognizer *_twoFingerLongPressGestureRecognizer;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    UIPanGestureRecognizer *_panGestureRecognizer;
    double _lastScale;
    _UIDynamicValueAnimation *_pinchDecelerationAnimation;
    _UIDynamicAnimationGroup *_panDecelerationAnimationGroup;
    long long _gestureCount;
    _Bool _panWithMomentum;
    _MKUserInteractionGestureRecognizer *_touchGestureRecognizer;
    UIRotationGestureRecognizer *_rotationGestureRecognizer;
    _UIDynamicValueAnimation *_rotationDecelerationAnimation;
    MKTiltGestureRecognizer *_tiltGestureRecognizer;
    _UIDynamicValueAnimation *_tiltDecelerationAnimation;
    _Bool _didStartLongPress;
}

@property(nonatomic) _Bool panWithMomentum; // @synthesize panWithMomentum=_panWithMomentum;
@property(readonly, nonatomic) MKBasicMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak id <MKMapGestureControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
@property(readonly, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(readonly, nonatomic) UILongPressGestureRecognizer *twoFingerLongPressGestureRecognizer; // @synthesize twoFingerLongPressGestureRecognizer=_twoFingerLongPressGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *twoFingerTapGestureRecognizer; // @synthesize twoFingerTapGestureRecognizer=_twoFingerTapGestureRecognizer;
@property(readonly, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (double)variableDelayTapRecognizer:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (void)gestureRecognizerTouchesCanceled:(id)arg1;
- (void)gestureRecognizerTouchesEnded:(id)arg1;
- (void)gestureRecognizerTouchesBegan:(id)arg1;
- (void)handleTouch:(id)arg1;
- (void)handlePan:(id)arg1;
- (struct CGPoint)_snapPointToDevicePixels:(struct CGPoint)arg1;
- (void)handlePinch:(id)arg1;
- (void)handleTwoFingerLongPress:(id)arg1;
- (void)handleTwoFingerTap:(id)arg1;
- (void)handleDoubleTap:(id)arg1;
- (void)handleRotation:(id)arg1;
- (void)handleTilt:(id)arg1;
- (void)clearGestureRecognizersInFlight;
- (void)_clearGesture:(id)arg1;
- (void)stopUserInteractionFromExternalGesture;
- (void)startUserInteractionFromExternalGesture;
- (void)endGesturing;
- (void)beginGesturing;
- (void)stopDynamicAnimations;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
- (void)dealloc;
@property(nonatomic, getter=isTiltEnabled) _Bool tiltEnabled;
@property(nonatomic, getter=isRotationEnabled) _Bool rotationEnabled;
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2;
- (id)initWithMapView:(id)arg1 gestureTargetView:(id)arg2 doubleTapTargetView:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKMapItem : NSObject <GEOURLSerializable>
{
    _Bool _isCurrentLocation;
    NSString *_extSessionGuid;
    _Bool _isPlaceHolder;
    id <GEOMapItemPrivate> _geoMapItem;
    _MKMapItemPlaceAttribution *_attribution;
    _MKMapItemPhotosAttribution *_photosAttribution;
    _MKMapItemReviewsAttribution *_reviewsAttribution;
    MKMapItemMetadata *_metadata;
    GEOPlace *_place;
}

+ (id)urlForMapItems:(id)arg1 options:(id)arg2;
+ (id)urlForMapItem:(id)arg1 options:(id)arg2;
+ (id)mapItemsFromURL:(id)arg1 options:(id *)arg2;
+ (id)mapItemWithDictionary:(id)arg1;
+ (id)standardOptionsFromPlistCompatibleDictionary:(id)arg1;
+ (id)plistCompatibleDictionaryFromStandardOptions:(id)arg1;
+ (_Bool)openMapsWithItems:(id)arg1 launchOptions:(id)arg2;
+ (id)mapItemForCurrentLocation;
+ (void)_mapItemsWithSerializedPlaceDataResponse:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)mapItemWithSerializedPlaceData:(id)arg1;
+ (id)_itemWithAddressBookRef:(void *)arg1 geoMapItem:(id)arg2;
+ (id)_itemWithGeoMapItem:(id)arg1;
+ (id)_mapItemWithWithLocation:(id)arg1 addressDictionary:(id)arg2 name:(id)arg3 businessURL:(id)arg4 phoneNumber:(id)arg5 sessionID:(id)arg6 muid:(unsigned long long)arg7 attributionID:(id)arg8 sampleSizeForUserRatingScore:(unsigned int)arg9 normalizedUserRatingScore:(float)arg10;
+ (unsigned long long)_placeCardIDForMapsDataString:(id)arg1;
@property(readonly, nonatomic, getter=_reviewsAttribution) _MKMapItemReviewsAttribution *reviewsAttribution; // @synthesize reviewsAttribution=_reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) _MKMapItemPhotosAttribution *photosAttribution; // @synthesize photosAttribution=_photosAttribution;
@property(readonly, nonatomic, getter=_attribution) _MKMapItemPlaceAttribution *attribution; // @synthesize attribution=_attribution;
@property(readonly, nonatomic) _Bool isPlaceHolder; // @synthesize isPlaceHolder=_isPlaceHolder;
@property(copy, nonatomic) NSString *extSessionGuid; // @synthesize extSessionGuid=_extSessionGuid;
@property(readonly, nonatomic) GEOPlace *place; // @synthesize place=_place;
@property(readonly, nonatomic) MKMapItemMetadata *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) _Bool isCurrentLocation; // @synthesize isCurrentLocation=_isCurrentLocation;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
- (id)_reviewsAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2;
- (id)_photoAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2;
- (id)_infoAttributionWithSourceStringFormat:(id)arg1 moreSourceStringFormat:(id)arg2;
- (id)_attributionWithDisplayName:(id)arg1 attributionFormat:(id)arg2 logo:(id)arg3;
@property(readonly, nonatomic, getter=_reviewsDisplayName) NSString *reviewsDisplayName;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
- (id)_urlForWritingAReview;
- (id)_urlForReviewWithUID:(id)arg1;
- (id)_urlForPhotoWithUID:(id)arg1;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
- (_Bool)_isEquivalentURLRepresentationTo:(id)arg1;
- (id)initWithUrlRepresentation:(id)arg1;
- (id)urlRepresentation;
- (id)dictionaryRepresentation;
- (_Bool)openInMapsWithLaunchOptions:(id)arg1;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_4bcfbbae sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_localizedOperatingHours) NSString *localizedOperatingHours;
@property(readonly, nonatomic, getter=_hasLocalizedOperatingHours) _Bool hasLocalizedOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
@property(readonly, nonatomic, getter=_firstLocalizedCategoryName) NSString *firstLocalizedCategoryName;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (id)_localizedCategoryNamesForType:(unsigned int)arg1;
@property(readonly, nonatomic, getter=_shortAddress) NSString *shortAddress;
@property(readonly, nonatomic, getter=_geoAddress) GEOAddress *geoAddress;
@property(readonly, nonatomic, getter=_formattedTelephone) NSString *formattedTelephone;
@property(readonly, nonatomic, getter=_hasFormattedTelephone) _Bool hasFormattedTelephone;
@property(readonly, nonatomic, getter=_priceRangeString) NSString *priceRangeString;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_geoFenceMapRegion) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic, getter=_displayMapRegion) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic, getter=_coordinate) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic) NSString *yelpID;
@property(retain, nonatomic) NSURL *url;
@property(copy, nonatomic) NSString *phoneNumber;
- (id)_getBusiness;
@property(copy, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=_geoMapItem) id <GEOMapItemPrivate> geoMapItem;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) MKPlacemark *placemark;
- (id)initWithPlace:(id)arg1 sessionGuid:(id)arg2;
- (id)initWithPlacemark:(id)arg1;
- (id)initWithCLLocation:(id)arg1;
- (id)initWithAddressDictionary:(id)arg1;
- (id)initWithPlace:(id)arg1 isPlaceHolderPlace:(_Bool)arg2;
- (id)initWithPlace:(id)arg1;
- (id)initWithGeoMapItem:(id)arg1 isPlaceHolderPlace:(_Bool)arg2;
- (id)thumbnailWithSize:(struct CGSize)arg1 annotationView:(id)arg2;
- (id)sharingURL;
@property(readonly, nonatomic) NSString *formattedNumberOfReviewsIncludingProvider;
@property(readonly, nonatomic) NSString *formattedNumberOfReviews;
@property(readonly, getter=_hasDisplayableAmenities) _Bool hasDisplayableAmenities;
- (id)_mapsDataString;
- (void)_setRecord:(void *)arg1 property:(int)arg2 stringValue:(id)arg3 label:(id)arg4;
- (id)_placeCardContact;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface MKMapItemMetadata : NSObject
{
    _Bool _hasCheckedForYelpDeal;
    GEOBusiness *_business;
    MKYelpDeal *_yelpDeal;
    NSMutableDictionary *_imageCache;
}

@property(retain, nonatomic) NSMutableDictionary *imageCache; // @synthesize imageCache=_imageCache;
@property(nonatomic) _Bool hasCheckedForYelpDeal; // @synthesize hasCheckedForYelpDeal=_hasCheckedForYelpDeal;
@property(retain, nonatomic) MKYelpDeal *yelpDeal; // @synthesize yelpDeal=_yelpDeal;
@property(readonly, nonatomic) GEOBusiness *business; // @synthesize business=_business;
- (void).cxx_destruct;
- (id)imageForURL:(id)arg1;
- (void)addImage:(id)arg1 forURL:(id)arg2;
@property(readonly, nonatomic) NSString *yelpID;
- (id)initWithBusiness:(id)arg1;

@end

@interface MKMapItemMetadataRequest : NSObject
{
    MKMapItemMetadata *_businessMetadata;
}

@property(retain, nonatomic) MKMapItemMetadata *businessMetadata; // @synthesize businessMetadata=_businessMetadata;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURLRequest *urlRequest;
@property(readonly, nonatomic) NSURL *url;
- (void)handleError:(id)arg1;
- (void)handleData:(id)arg1;

@end

@interface MKMapItemMetadataDealRequest : MKMapItemMetadataRequest
{
    CDUnknownBlockType _dealHandler;
}

+ (id)requestWithBusinesMetadata:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType dealHandler; // @synthesize dealHandler=_dealHandler;
- (void).cxx_destruct;
- (void)handleError:(id)arg1;
- (void)handleData:(id)arg1;
- (id)urlRequest;
- (id)url;

@end

@interface MKMapItemMetadataImageRequest : MKMapItemMetadataRequest
{
    GEOPhotoInfo *_info;
    CDUnknownBlockType _imageHandler;
}

+ (id)requestWithBusinessMetadata:(id)arg1 info:(id)arg2;
@property(copy, nonatomic) CDUnknownBlockType imageHandler; // @synthesize imageHandler=_imageHandler;
@property(retain) GEOPhotoInfo *info; // @synthesize info=_info;
- (void).cxx_destruct;
- (void)handleError:(id)arg1;
- (void)handleData:(id)arg1;
- (id)url;

@end

@interface MKMapItemMetadataRequester : NSObject <NSURLConnectionDelegate>
{
    NSMapTable *_requestsForURLs;
    NSMapTable *_connectionsForURLs;
    NSMapTable *_dataForConnections;
    _Bool _hasCheckedYelpAccountCredentials;
    ACAccountStore *_accountStore;
    ACAccountCredential *_yelpAccountCredentials;
    OAURLRequestSigner *_signer;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(readonly, nonatomic) ACAccountCredential *yelpAccountCredentials;
- (void)accountStoreDidChange:(id)arg1;
- (id)accountStore;
@property(readonly, nonatomic) OAURLRequestSigner *signer;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)handleConnection:(id)arg1 withData:(id)arg2 error:(id)arg3;
- (void)cancelRequestsForBusinessMetadata:(id)arg1;
- (void)sendRequest:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKMapService : NSObject
{
    NSArray *_activeInputModeLanguages;
    NSLock *_activeInputModesLock;
}

+ (id)sharedService;
- (void).cxx_destruct;
- (id)mapItemsForUpdatedPlacesInResolution:(id)arg1;
- (id)ticketForProblem:(id)arg1 mapItemForProblemContext:(id)arg2 traits:(id)arg3;
- (void)_mapItemsForResponseData:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)submitUsageForTraits:(id)arg1 mapItem:(id)arg2 timestamp:(double)arg3 resultIndex:(int)arg4;
- (void)submitUsageForTraits:(id)arg1;
- (void)submitUsageForTraitsWithAction:(int)arg1 mapRegion:(id)arg2 zoomLevel:(double)arg3;
- (void)submitUsageForTraitsWithAction:(int)arg1 flyoverAnimationID:(unsigned long long)arg2;
- (void)submitUsageForTraitsWithAction:(int)arg1 mapItem:(id)arg2;
- (void)submitUsageForTraitsWithAction:(int)arg1;
- (id)_mk_ticketForSearchQuery:(id)arg1 completionItem:(id)arg2 traits:(id)arg3;
- (id)ticketForURLQuery:(id)arg1 coordinate:(CDStruct_c3b9c2ee)arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4 maxResults:(unsigned int)arg5 traits:(id)arg6;
- (id)ticketForSearchQuery:(id)arg1 completionItem:(id)arg2 maxResults:(unsigned int)arg3 includeETA:(_Bool)arg4 traits:(id)arg5;
- (id)ticketForMerchantCode:(id)arg1 paymentNetwork:(id)arg2 transactionDate:(id)arg3 transactionLocation:(id)arg4 traits:(id)arg5;
- (id)ticketForCanonicalLocationSearchQueryString:(id)arg1 traits:(id)arg2;
- (id)ticketForMapItemToRefine:(id)arg1 traits:(id)arg2;
- (id)ticketForReverseGeocodeDroppedPinCoordinate:(CDStruct_c3b9c2ee)arg1 traits:(id)arg2;
- (id)ticketForReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeETA:(_Bool)arg2 traits:(id)arg3;
- (id)_ticketForReverseGeocodeCoordinate:(CDStruct_c3b9c2ee)arg1 includeEntryPoints:(_Bool)arg2 includeETA:(_Bool)arg3 traits:(id)arg4;
- (id)ticketForForwardGeocodeString:(id)arg1 traits:(id)arg2;
- (id)ticketForForwardGeocodeAddress:(id)arg1 traits:(id)arg2;
- (id)ticketForPhoneNumbers:(id)arg1 allowCellularDataForLookup:(_Bool)arg2 traits:(id)arg3;
- (id)ticketForMUIDs:(id)arg1 includeETA:(_Bool)arg2 traits:(id)arg3;
- (id)defaultTraitsWithTraits:(id)arg1;
- (id)defaultTraits;
- (void)_invalidateActiveInputModeLanguages;
- (id)_activeInputModeLanguages;
- (void)dealloc;
- (id)init;

@end

@interface MKMapSnapshot : NSObject
{
    VKMapSnapshot *_snapshot;
    UIImage *_image;
}

@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (CDStruct_c3b9c2ee)_coordinateForPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (id)_initWithSnapshot:(id)arg1;
- (id)snapshotWithAnnotationView:(id)arg1 atPoint:(struct CGPoint)arg2;
- (id)snapshotWithAnnotationView:(id)arg1 atCoordinate:(CDStruct_c3b9c2ee)arg2;

@end

@interface MKMapSnapshotCreator : NSObject <MKMapViewDelegate>
{
    UIImage *_lastSnapshot;
    NSString *_lastAttributionString;
    NSLock *_requestLock;
    NSMutableArray *_requests;
    MKMapSnapshotRequest *_servingRequest;
}

+ (_Bool)supportsSharingThumbnails;
+ (_Bool)supportsHighResolutionSnapshots;
@property(retain, nonatomic) MKMapSnapshotRequest *servingRequest; // @synthesize servingRequest=_servingRequest;
- (void).cxx_destruct;
- (void)createSnapShotWithCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(unsigned long long)arg2 size:(struct CGSize)arg3 handler:(CDUnknownBlockType)arg4;
- (void)flushRequestQueue;
- (id)recreateCurrentSnapshotWithRequester:(id)arg1 context:(id)arg2;
- (void)createSnapShotWithCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(unsigned long long)arg2 size:(struct CGSize)arg3 requester:(id)arg4 context:(id)arg5;
- (void)_respondWithSnapshot;
- (id)_newSnapshotWithView:(id)arg1;
- (void)_processRequest;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKMapSnapshotOptions : NSObject <NSCopying>
{
    MKMapCamera *_camera;
    CDStruct_02837cd9 _mapRect;
    CDStruct_feeb6407 _region;
    unsigned long long _mapType;
    int _mode;
    _Bool _showsPointsOfInterest;
    _Bool _showsBuildings;
    _Bool _rendersInBackground;
    struct CGSize _size;
    double _scale;
    _Bool _usingRect;
}

@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic, getter=_rendersInBackground, setter=_setRendersInBackground:) _Bool rendersInBackground; // @synthesize rendersInBackground=_rendersInBackground;
@property(nonatomic) _Bool showsBuildings; // @synthesize showsBuildings=_showsBuildings;
@property(nonatomic) _Bool showsPointsOfInterest; // @synthesize showsPointsOfInterest=_showsPointsOfInterest;
@property(readonly, nonatomic) _Bool usingRect; // @synthesize usingRect=_usingRect;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) unsigned long long mapType; // @synthesize mapType=_mapType;
@property(nonatomic) CDStruct_90e2a262 region; // @synthesize region=_region;
@property(nonatomic) CDStruct_90e2a262 mapRect; // @synthesize mapRect=_mapRect;
@property(copy, nonatomic) MKMapCamera *camera; // @synthesize camera=_camera;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MKMapSnapshotRequest : NSObject
{
    id _requester;
    id _context;
    CDStruct_2c43369c _coordinate;
    unsigned long long _zoomLevel;
    struct CGSize _size;
    UIImage *_image;
    NSString *_attributionString;
    MKMapSnapshotCreator *_delegate;
    VKMapSnapshotCreator *_snapshotCreator;
}

@property(retain, nonatomic) NSString *attributionString; // @synthesize attributionString=_attributionString;
@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
@property(nonatomic) __weak MKMapSnapshotCreator *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) unsigned long long zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(nonatomic) CDStruct_c3b9c2ee coordinate; // @synthesize coordinate=_coordinate;
@property(retain, nonatomic) id requester; // @synthesize requester=_requester;
@property(retain, nonatomic) id context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (id)description;

@end

@interface MKMapSnapshotter : NSObject
{
    MKMapSnapshotOptions *_options;
    int _loadingFlag;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    CDUnknownBlockType _completionHandler;
    VKMapSnapshotCreator *_snapshotCreator;
    _Bool _needsResume;
}

- (void).cxx_destruct;
- (void)cancel;
- (void)_performSnapshot;
- (void)startWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_succeedWithSnapshot:(id)arg1;
- (void)_failWithError:(id)arg1;
- (void)_cleanupSnapshotCreator;
- (void)_cancel;
- (void)_exitBackground:(id)arg1;
- (void)_enterBackground:(id)arg1;
- (void)dealloc;
- (id)initWithOptions:(id)arg1;
- (id)init;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;

@end

@interface MKMapView : UIView <VKPuckAnimatorDelegate, MKOverlayContainerViewDelegate, UIGestureRecognizerDelegate, MKVariableDelayTapRecognizerDelegate, MKAnnotationContainerViewDelegate, VKMapViewDelegate, MKMapGestureControllerDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOResourceManifestTileGroupObserver, NSCoding>
{
    MKMapViewInternal *_internal;
    UIView *_contentView;
    MKMapAnnotationManager *_annotationManager;
    MKAnnotationContainerView *_annotationContainer;
    MKAttributionLabel *_attributionLabel;
    CDUnknownBlockType _annotationRectTest;
    CDUnknownBlockType _annotationCoordinateTest;
    UIImageView *_attributionBadgeView;
    NSTimer *_startEffectsTimer;
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _safeDelegate;
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _unsafeDelegate;
    unsigned long long _suspendedEffectsCount;
    unsigned long long _userInteractionDisabledCount;
    unsigned long long _mapType;
    NSTimer *_defaultLocationTimer;
    UILabel *_debugView;
    NSTimer *_debugTimer;
    unsigned long long _debugViewIndex;
    _MKEnvironmentLabel *_debugCurrentEnvironmentLabel;
    double _heading;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UITapGestureRecognizer *_selectingTapGestureRecognizer;
    UITapGestureRecognizer *_nonselectingTapGestureRecognizer;
    UIGestureRecognizer *_locationConsoleGesture;
    MKMapGestureController *_gestureController;
    MKOverlayContainerView *_overlayContainer;
    long long _userTrackingMode;
    MKBasicMapView *_basicMapView;
    VKMapView *_mapView;
    VKLabelMarker *_pressedLabelMarker;
    MKScaleView *_scaleView;
    MKCompassView *_compassView;
    _Bool _scaleVisible;
    _Bool _compassVisible;
    NSTimer *_compassHideTimer;
    _Bool _scaleEnabled;
    _Bool _compassEnabled;
    UIView *_scrollContainerView;
    CDUnknownBlockType _regionSetterWhenSized;
    MKUserLocation *_userLocation;
    VKPuckAnimator *_userLocationAnimator;
    MKMapCamera *_camera;
    id _topLayoutGuide;
    id _bottomLayoutGuide;
    CDUnknownBlockType _showCalloutAfterRegionChangeBlock;
    CDUnknownBlockType _selectAnnotationViewAfterRedrawBlock;
    CDUnknownBlockType _debugConsoleAdditionalInfoProvider;
    UITextView *_vectorKitDebugView;
    struct UIEdgeInsets _edgeInsets;
    UIPanGestureRecognizer *_vectorKitStyleDebugGestureRecognizer;
    double _verticalYawOverride;
    struct {
        unsigned int callsDelegateForAllRegionChanges:1;
        unsigned int changingRegion:1;
        unsigned int debugViewHeading:1;
        unsigned int didStartDragging:1;
        unsigned int draggingInterrupted:1;
        unsigned int didStartSmoothScrolling:1;
        unsigned int hasRenderedSomething:1;
        unsigned int ignoreHeadingUpdates:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int isSuspended:1;
        unsigned int longPressing:1;
        unsigned int persistFixedUserLocation:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int rotationSupported:1;
        unsigned int scrollEnabled:1;
        unsigned int scrolling:1;
        unsigned int shouldRotateForHeading:1;
        unsigned int useVehicleHeading:1;
        unsigned int showsUserLocation:1;
        unsigned int zoomEnabled:1;
        unsigned int zoomIsAnimated:1;
        unsigned int zooming:1;
        unsigned int isChangingViewSize:1;
        unsigned int isChangingEdgeInsets:1;
        unsigned int showsAttribution:1;
        unsigned int showsAttributionBadge:1;
        unsigned int useOld2DAnnotationContainer:1;
        unsigned int rotating:1;
        unsigned int pitching:1;
        unsigned int rotateEnabled:1;
        unsigned int pitchEnabled:1;
        unsigned int showsBuildings:1;
        unsigned int showsPointsOfInterest:1;
        unsigned int allowsRotation:1;
        unsigned int hasPendingCameraChange:1;
        unsigned int backdropViewQualityChangingDisabled:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int vectorKitConsoleEnabled:1;
        unsigned int edgeInsetsAreExplicit:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPulseEnabled:1;
        unsigned int shouldSplitRouteLine:1;
        unsigned int shouldAnimatePositionWithRouteMatch:1;
        unsigned int showsCurrentEnvironmentName:1;
        unsigned int processingUserLocationUpdate:1;
        unsigned int changingMapType:1;
        unsigned int userRotatedAwayFromVerticalYaw:1;
        unsigned int goingToDefaultLocation:1;
        unsigned int delayLocationUpdatesUntilInitialRendering:1;
        unsigned int isDraggingAnnotationView:1;
        unsigned int showsPressedLabelMarkerEffect:1;
        unsigned int delegateShouldReceiveTouch:1;
        unsigned int delegateShouldDelayTapResponse:1;
        unsigned int delegateDidUpdateUserLocation:1;
        unsigned int delegateDidFailToLocateUser:1;
        unsigned int delegateWillChangeRegion:1;
        unsigned int delegateDidChangeRegion:1;
        unsigned int delegateDidStartMapRendering:1;
        unsigned int delegateDidFinishMapRendering:1;
        unsigned int delegateDidChangeUserTrackingMode:1;
        unsigned int delegateDidChangeUserTrackingModeButton:1;
        unsigned int delegateDidChangeMapType:1;
    } _flags;
    _Bool _hasSetLayoutMargins;
    unsigned long long _currentFlyoverAnimationID;
}

+ (void)setRendersInBackgroundByDefault:(_Bool)arg1;
+ (CDStruct_90e2a262)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 region:(CDStruct_90e2a262)arg3;
+ (CDStruct_90e2a262)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 edgeInsets:(struct UIEdgeInsets)arg3 region:(CDStruct_90e2a262)arg4;
+ (unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2;
+ (CDStruct_90e2a262)_mapRectThatFitsViewBounds:(struct CGRect)arg1 mapRect:(CDStruct_90e2a262)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 snapToZoomLevel:(_Bool)arg7;
+ (CDStruct_90e2a262)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 viewInsets:(struct UIEdgeInsets)arg3 edgePadding:(struct UIEdgeInsets)arg4 region:(CDStruct_90e2a262)arg5 minZoomLevel:(double)arg6 maxZoomLevel:(double)arg7 snapToZoomLevel:(_Bool)arg8;
@property(nonatomic, getter=_currentFlyoverAnimationID, setter=_setCurrentFlyoverAnimationID:) unsigned long long currentFlyoverAnimationID; // @synthesize currentFlyoverAnimationID=_currentFlyoverAnimationID;
- (void).cxx_destruct;
- (void)_stopPanningAtPoint:(struct CGPoint)arg1;
- (void)_updatePanWithTranslation:(struct CGPoint)arg1;
- (void)_startPanningAtPoint:(struct CGPoint)arg1;
- (void)_zoomOut;
- (void)_zoomIn;
- (void)_zoomWithAmount:(double)arg1;
- (void)setCamera:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) MKMapCamera *camera;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 willDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (_Bool)shouldHideOffscreenSelectedAnnotation;
- (CDUnknownBlockType)annotationCoordinateTest;
- (CDUnknownBlockType)annotationRectTest;
- (CDStruct_90e2a262)_mapRectWithFraction:(double)arg1 ofVisible:(CDStruct_90e2a262)arg2;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(CDStruct_c3b9c2ee)arg2 animated:(_Bool)arg3 duration:(double)arg4;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)_showAnimationAtCoordinate:(CDStruct_c3b9c2ee)arg1 withMapRegion:(id)arg2;
- (_Bool)_canShowAnimationForSearchResultWithMapRegion:(id)arg1;
- (void)_resumeFlyoverAnimation;
- (void)_pauseFlyoverAnimation;
- (void)_stopFlyoverAnimation;
- (void)_startFlyoverTourAnimation:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_performFlyoverAnimation:(id)arg1 animateToStart:(_Bool)arg2;
- (void)_performFlyoverAnimation:(id)arg1;
- (void)_prepareFlyoverAnimation:(id)arg1 inBackground:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setVisibleMapRect:(CDStruct_90e2a262)arg1 animated:(_Bool)arg2;
@property(nonatomic) CDStruct_90e2a262 visibleMapRect;
- (void)_setVisibleMapRect:(CDStruct_90e2a262)arg1 duration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setVisibleMapRect:(CDStruct_90e2a262)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setVisibleMapRect:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2 animated:(_Bool)arg3;
- (CDStruct_90e2a262)mapRectThatFits:(CDStruct_90e2a262)arg1;
- (CDStruct_90e2a262)mapRectThatFits:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2;
- (CDStruct_46f4fb6f)_zoomRegionForMapRect:(CDStruct_90e2a262)arg1 edgePadding:(struct UIEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4;
- (void)drawRect:(struct CGRect)arg1 forViewPrintFormatter:(id)arg2;
- (void)setHidden:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)updateLayoutGuides;
- (void)_clearLayoutGuides;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setLayoutMargins:(struct UIEdgeInsets)arg1;
- (void)layoutMarginsDidChange;
- (void)layoutSubviews;
- (void)_willChangeStatusBarFrame:(id)arg1;
- (void)_updateInsets;
- (id)_findLayoutGuideVC;
- (void)_removePersistentVectorOverlay:(id)arg1;
- (void)_addPersistentVectorOverlay:(id)arg1;
- (void)_removeVectorOverlay:(id)arg1;
- (void)_addVectorOverlay:(id)arg1;
- (void)_setApplicationState:(int)arg1;
- (int)_applicationState;
- (void)_setUserTrackingZoomStyle:(long long)arg1;
- (long long)_userTrackingZoomStyle;
- (_Bool)_canEnterNightMode;
- (_Bool)_canEnter3DMode;
- (_Bool)_isPitched;
- (void)_exit3DMode;
- (void)_enter3DMode;
- (id)viewForAnnotation:(id)arg1;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (void)_addViewsForAnnotations:(id)arg1;
- (void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)_addAnnotations:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (void)_addAnnotation:(id)arg1 allowAnimation:(_Bool)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)selectAnnotation:(id)arg1 animated:(_Bool)arg2;
- (void)_selectAnnotation:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)_selectLabelMarker:(id)arg1 animated:(_Bool)arg2;
- (void)_selectLabelMarker:(id)arg1 animated:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)_deselectLabelMarkerAnimated:(_Bool)arg1;
- (id)_selectedLabelMarker;
- (void)_setCanSelectAllLabels:(_Bool)arg1;
- (_Bool)_canSelectAllLabels;
- (void)_setCanSelectPOIs:(_Bool)arg1;
- (_Bool)_canSelectPOIs;
- (CDStruct_90e2a262)convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)convertRegion:(CDStruct_90e2a262)arg1 toRectToView:(id)arg2;
- (CDStruct_c3b9c2ee)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint)convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
@property(copy, nonatomic) NSArray *selectedAnnotations;
- (id)_annotationViews;
- (id)annotationsInMapRect:(CDStruct_90e2a262)arg1;
@property(readonly, nonatomic) NSArray *annotations;
@property(nonatomic) CDStruct_90e2a262 region;
- (void)setRegion:(CDStruct_90e2a262)arg1 animated:(_Bool)arg2;
- (CDStruct_c3b9c2ee)_centerMapPoint;
@property(nonatomic) CDStruct_c3b9c2ee centerCoordinate;
- (void)setCenterCoordinate:(CDStruct_c3b9c2ee)arg1 animated:(_Bool)arg2;
- (void)goToDefaultLocation;
- (void)_displayWorld;
- (void)calloutDidAppearForAnnotationView:(id)arg1 inContainer:(id)arg2;
- (void)annotationContainer:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(CDStruct_c3b9c2ee)arg2 maxDistance:(double *)arg3 startPoint:(struct CGPoint *)arg4 shadowStartPoint:(struct CGPoint *)arg5;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(CDStruct_c3b9c2ee)arg3 completionHandler:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) struct CGRect annotationVisibleRect;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)mapLayer:(id)arg1 showingFlyoverDidChange:(_Bool)arg2;
- (void)mapLayer:(id)arg1 canShowFlyoverDidChange:(_Bool)arg2;
- (void)mapLayer:(id)arg1 canEnter3DModeDidChange:(_Bool)arg2;
- (void)mapLayer:(id)arg1 canZoomOutDidChange:(_Bool)arg2;
- (void)mapLayer:(id)arg1 canZoomInDidChange:(_Bool)arg2;
- (void)mapLayer:(id)arg1 didBecomePitched:(_Bool)arg2;
- (void)mapLayer:(id)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;
- (void)mapLayer:(id)arg1 didChangeRegionAnimated:(_Bool)arg2;
- (void)mapLayer:(id)arg1 willChangeRegionAnimated:(_Bool)arg2;
- (void)mapLayerDidDraw:(id)arg1;
- (void)mapLayerDidChangeVisibleRegion:(id)arg1;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopTwoFingerLongPress:(id)arg1;
- (void)gestureControllerWillStartTwoFingerLongPress:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(_Bool)arg3;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(_Bool)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
- (void)mapLayer:(id)arg1 flyoverTourLabelDidChange:(id)arg2;
- (void)mapLayer:(id)arg1 didStopFlyoverTourCompleted:(_Bool)arg2;
- (void)mapLayerWillStartFlyoverTour:(id)arg1;
- (void)mapLayer:(id)arg1 didUpdateVerticalYawTo:(double)arg2;
- (id)mapLayer:(id)arg1 painterForOverlay:(id)arg2;
- (void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (id)mapLayer:(id)arg1 presentationForAnnotation:(id)arg2;
- (void)mapLayerDidBecomeFullyDrawn:(id)arg1 hasFailedTiles:(_Bool)arg2;
- (void)mapLayerDidBecomePartiallyDrawn:(id)arg1;
- (void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapLayerDidFinishLoadingTiles:(id)arg1;
- (void)mapLayerDidStartLoadingTiles:(id)arg1;
- (id)compassVisibilityAnimation;
- (_Bool)compassVisible;
- (void)_setCompassVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_hideCompassFromTimer:(id)arg1;
- (void)snapToNorth:(id)arg1;
- (void)handleCompassTap:(id)arg1;
- (void)_updateCompassPosition;
- (void)_updateCompassVisibility;
- (id)compassView;
- (_Bool)_roomForCompass;
- (void)_updateScalePosition;
- (void)_setScaleVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_updateScaleVisibility;
- (_Bool)_shouldDisplayScaleForCurrentRegion;
- (id)scaleView;
- (void)_sizeDidChangeWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_sizeWillChange;
- (void)_updateRotationAttributes;
- (void)_userScrollingEnded;
- (_Bool)_isChangingRegionForGesture;
- (void)_selectUserLocationTypeWithDeltaZoomLevel:(double)arg1;
- (void)resumeUserLocationUpdates;
- (void)pauseUserLocationUpdates;
- (double)_goToCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomLevel:(double)arg2 animated:(_Bool)arg3;
- (double)_zoomScaleForMapRegion:(id)arg1;
- (id)_mapRegionWithCenterCoordinate:(CDStruct_c3b9c2ee)arg1 zoomScale:(double)arg2;
- (double)_zoomLevelForRegion:(CDStruct_90e2a262)arg1 includeAccessoryPadding:(_Bool)arg2;
- (double)_zoomLevelForMapRect:(CDStruct_90e2a262)arg1 includeAccessoryPadding:(_Bool)arg2;
- (double)_panDurationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_updateContentBounds;
- (void)_insertSubview:(id)arg1;
- (int)_viewIndexForSubview:(id)arg1;
- (void)_fixUserLocationFromPresentationValue;
- (void)_clearFixedUserLocation;
- (void)setCallsDelegateForAllRegionChanges:(_Bool)arg1;
- (_Bool)callsDelegateForAllRegionChanges;
- (void)startEffects;
- (void)stopEffects;
- (_Bool)annotationContainerShouldAlignToPixels:(id)arg1;
- (_Bool)annotationContainerIsRotated:(id)arg1;
- (void)_setZoomScale:(double)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animated:(_Bool)arg4;
- (void)_addSetRegionBlockWhenSized:(CDUnknownBlockType)arg1;
- (void)showAnnotations:(id)arg1 animated:(_Bool)arg2;
- (void)_setEdgeInsets:(struct UIEdgeInsets)arg1;
- (void)_setEdgeInsets:(struct UIEdgeInsets)arg1 explicit:(_Bool)arg2;
- (struct UIEdgeInsets)_edgeInsets;
- (void)_setLabelEdgeInsets:(struct UIEdgeInsets)arg1;
- (struct UIEdgeInsets)_labelEdgeInsets;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(_Bool)arg3;
- (void)_setZoomScale:(double)arg1 centerCoordinate:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animated:(_Bool)arg4;
- (void)_updateEffects;
- (void)_updateShouldDisplayEffects;
- (void)_updateScrollContainerView:(_Bool)arg1;
- (void)_updateScrollingAndGestures;
- (double)_boundedZoomLevel:(double)arg1 coordinate:(CDStruct_c3b9c2ee)arg2;
- (double)_boundedZoomLevel:(double)arg1;
- (double)_maxZoomLevelForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_annotationViewDragStateChanged:(id)arg1;
- (void)_setShouldAnimatePositionWithRouteMatch:(_Bool)arg1;
- (_Bool)_shouldAnimatePositionWithRouteMatch;
- (void)_setShouldSplitRouteLine:(_Bool)arg1;
- (_Bool)_shouldSplitRouteLine;
- (void)_setLocationPulseEnabled:(_Bool)arg1;
- (_Bool)_isLocationPulseEnabled;
- (void)_setUserInteractionPausesLocationUpdates:(_Bool)arg1;
- (_Bool)_userInteractionPausesLocationUpdates;
- (void)_didEndUserInteraction;
- (void)_willStartUserInteraction;
- (void)_didEndScroll;
- (void)_willStartScroll;
- (void)_didEndZoom;
- (void)_willStartZoom:(_Bool)arg1;
- (void)_didChangeRegionMidstream:(_Bool)arg1;
- (void)_clearGestureRecognizers;
- (void)_willChangeRegionAnimated:(_Bool)arg1;
- (void)_updateIconsShouldAlignToPixels;
- (_Bool)_iconsShouldAlignToPixels;
- (void)toggleLocationConsole:(id)arg1;
- (void)_setShowsCurrentEnvironmentName:(_Bool)arg1;
- (_Bool)_showsCurrentEnvironmentName;
- (_Bool)_isUsingDevResourceStyleSheet;
- (void)_updateEnvironmentLabelText;
- (struct CGRect)_currentEnvironmentNameFrame;
- (void)_setDebugConsoleAdditionalInfoProvider:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)_debugConsoleAdditionalInfoProvider;
- (void)_handleTapToDeselect:(id)arg1;
- (void)_handleTapToSelect:(id)arg1;
- (struct CGRect)_calloutContentRect;
- (_Bool)_isCalloutExpanded;
- (id)_calloutPopoverController;
- (_Bool)calloutViewContainsPoint:(struct CGPoint)arg1;
- (void)handleLongPress:(id)arg1;
- (void)_handleLongPressDidEnd;
- (void)_dropDraggingAnnotationView:(_Bool)arg1;
- (double)gestureController:(id)arg1 shouldWaitForNextTapForDuration:(double)arg2 afterTouch:(id)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)_hitSomethingAtTouch:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_configureGestureRecognizers:(id)arg1;
- (void)_addDebugGesture;
- (void)_setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2 fromTrackingButton:(_Bool)arg3;
- (void)setUserTrackingMode:(long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) long long userTrackingMode;
- (_Bool)canRotateForHeading;
- (_Bool)hasUserLocation;
@property(readonly, nonatomic) MKUserLocation *userLocation;
- (_Bool)hasRenderedSomething;
@property(readonly, nonatomic, getter=isUserLocationVisible) _Bool userLocationVisible;
- (_Bool)_shouldDelayLocationUpdatesUntilInitialRendering;
- (void)_setShouldDelayLocationUpdatesUntilInitialRendering:(_Bool)arg1;
@property(nonatomic) _Bool showsUserLocation;
- (void)_setTracePlaybackSpeedMultiplier:(double)arg1;
- (void)_setPanWithMomentum:(_Bool)arg1;
- (_Bool)_panWithMomentum;
@property(nonatomic, getter=isPitchEnabled) _Bool pitchEnabled;
@property(nonatomic, getter=isRotateEnabled) _Bool rotateEnabled;
@property(nonatomic, getter=isZoomEnabled) _Bool zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (_Bool)_canZoomOut;
- (_Bool)_canZoomIn;
- (double)_maximumZoomLevel;
- (double)_minimumZoomLevel;
- (double)_zoomLevel;
- (double)_zoomScale;
- (void)_updateVectorKitConsoleFrameWithEdgeInsets;
- (void)_updateDebugViewFrameWithEdgeInsets;
- (id)debugView;
- (id)_mapRegionOfInterest;
- (id)mapRegion;
- (_Bool)_isHandlingUserEvent;
- (long long)_roundedZoomLevel;
- (struct CGPoint)_centerPoint;
- (void)_setScrolling:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setScrolling:(_Bool)arg1;
- (_Bool)_isVisible;
- (_Bool)isRegionChanging;
- (void)set_compassHideTimer:(id)arg1;
- (id)_compassHideTimer;
- (_Bool)isCompassEnabled;
- (void)setCompassEnabled:(_Bool)arg1;
- (_Bool)isScaleEnabled;
- (void)setScaleEnabled:(_Bool)arg1;
- (_Bool)isSuspended;
- (void)setSuspended:(_Bool)arg1;
- (_Bool)effectsEnabled;
- (void)set_startEffectsTimer:(id)arg1;
- (id)_startEffectsTimer;
- (void)_resumeUserInteraction;
- (void)_suspendUserInteraction;
- (void)_handleStyleDebugGesture:(id)arg1;
- (void)_setVectorKitStyleDebugEnabled:(_Bool)arg1;
- (_Bool)_isVectorKitStyleDebugEnabled;
- (void)_setMapDisplayStyle:(unsigned long long)arg1;
- (unsigned long long)_mapDisplayStyle;
- (void)_setMapType:(unsigned long long)arg1 onInit:(_Bool)arg2;
- (_Bool)_supportsVKMapType:(long long)arg1;
@property(nonatomic) unsigned long long mapType;
- (_Bool)_canShowFlyover;
- (_Bool)_isShowingFlyover;
- (long long)_interfaceOrientation;
- (void)_updateHeadingOrientation;
- (void)set_defaultLocationTimer:(id)arg1;
- (id)_defaultLocationTimer;
- (void)_setAllowsPopoverWhenNotInWindow:(_Bool)arg1;
- (_Bool)_allowsPopoverWhenNotInWindow;
- (void)set_annotationViewsAreAddedImmediately:(_Bool)arg1;
- (_Bool)_annotationViewsAreAddedImmediately;
- (void)setRendersInBackground:(_Bool)arg1;
- (_Bool)rendersInBackground;
- (_Bool)_isHandlingNonselectingTap;
- (id)_longPressGestureRecognizer;
- (id)_nonselectingTapGestureRecognizer;
- (id)_selectingTapGestureRecognizer;
- (id)_panningGestureRecognizer;
- (void)_setShowsPressedLabelMarkerEffect:(_Bool)arg1;
- (_Bool)_showsPressedLabelMarkerEffect;
- (_Bool)isShowingNoDataPlaceholders;
- (void)setShowsAttributionBadge:(_Bool)arg1;
- (_Bool)showsAttributionBadge;
- (void)setShowsAttribution:(_Bool)arg1;
- (_Bool)showsAttribution;
@property(nonatomic) _Bool showsBuildings;
@property(nonatomic) _Bool showsPointsOfInterest;
- (void)_setShowsTraffic:(_Bool)arg1;
- (_Bool)_showsTraffic;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)geoDefaultsDidChange:(id)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (void)_updatePitchAllowed:(_Bool)arg1;
- (void)_updateRotateAllowed:(_Bool)arg1;
- (void)_setVectorKitConsoleEnabled:(_Bool)arg1;
- (_Bool)_isVectorKitConsoleEnabled;
- (id)mapAttributionWithStringAttributes:(id)arg1;
- (struct CGRect)attributionFrame;
- (void)_updateAttribution;
- (void)_layoutAttribution;
- (void)_restoreViewportFromDictionary:(id)arg1;
- (id)_viewportDictionary;
- (id)_mapLayer;
- (void)setBackdropViewQualityChangingDisabled:(_Bool)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)_setSafeDelegate:(id)arg1;
- (void)dealloc;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initFromIBWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(_Bool)arg3;
- (id)_commonInitFromIB:(_Bool)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(_Bool)arg3;
- (CDStruct_90e2a262)regionThatFits:(CDStruct_90e2a262)arg1;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)stopUpdatingUserLocation;
- (void)startUpdatingUserLocation;
- (void)puckAnimator:(id)arg1 updatedTargetPosition:(CDStruct_39925896)arg2;
- (void)puckAnimatorDidStop:(id)arg1;
- (void)puckAnimator:(id)arg1 updatedPosition:(CDStruct_39925896)arg2 course:(double)arg3;
- (void)puckAnimator:(id)arg1 runAnimation:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
@property(readonly, retain, nonatomic) MKAnnotationView *userLocationView;
- (void)_resumeUserLocationUpdates:(_Bool)arg1;
- (void)_pauseUserLocationUpdates;
@property(nonatomic) _Bool ignoreLocationUpdates;
- (void)removeUserLocation;
@property(retain, nonatomic) CLLocation *predictedUserLocation;
- (_Bool)_isUserLocationViewCentered:(double)arg1;
- (_Bool)_isUserLocationInView:(_Bool)arg1;
- (void)_setLocationPropagationEnabled:(_Bool)arg1;
- (_Bool)_isLocationPropagationEnabled;
- (void)_toggleLocationConsole:(id)arg1;
- (void)_updateLocationConsole;
- (id)descriptionForLocation:(id)arg1 compact:(_Bool)arg2;
- (void)setLocationConsoleEnabled:(_Bool)arg1;
- (_Bool)isLocationConsoleEnabled;
- (struct CGRect)_debugViewFrame;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerFailedToUpdateHeading:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedHeading:(id)arg1;
- (void)_updateCourseForMapViewHeading:(id)arg1;
- (void)_updateHeading:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_updateRotationSupported;
- (_Bool)_rotationPossible;
- (void)_stopTrackingHeading;
- (void)_startTrackingHeading;
- (void)enableMapRotationIfNeeded;
- (void)resumeUserHeadingUpdates;
- (void)pauseUserHeadingUpdates;
- (void)_setUseVehicleHeading:(_Bool)arg1;
- (_Bool)_useVehicleHeading;
- (void)setShouldRotateForHeading:(_Bool)arg1;
- (_Bool)shouldRotateForHeading;
- (void)_snapToNorthIfNecessary;
- (void)_updateCameraState;
- (void)_updateFromCamera:(id)arg1;
- (void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timingCurve:(long long)arg3;
- (void)_setCamera:(id)arg1 animated:(_Bool)arg2;
- (void)_setCamera:(id)arg1;
- (id)_camera;
- (id)vk_mapLayer;
- (void)overlayContainerAddedDrawables:(id)arg1;
- (id)createDrawableForOverlay:(id)arg1;
- (id)overlayContainer;
- (id)overlaysInLevel:(long long)arg1;
@property(readonly, nonatomic) NSArray *overlays;
- (id)rendererForOverlay:(id)arg1;
- (id)viewForOverlay:(id)arg1;
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeOverlays:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;
- (void)addOverlays:(id)arg1 level:(long long)arg2;
- (void)addOverlay:(id)arg1 level:(long long)arg2;
- (void)addOverlays:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)_resetMaximumZoomLevel;
- (void)_setMaximumZoomLevel:(double)arg1;
@property(readonly, nonatomic, getter=_detailedDescription) NSString *detailedDescription;
@property(readonly, nonatomic, getter=_visibleTileSets) NSArray *visibleTileSets;
@property(nonatomic) __weak id <MKMapViewDelegate> delegate; // @dynamic delegate;
- (struct CGRect)_convertMapRect:(CDStruct_90e2a262)arg1 toRectToView:(id)arg2;
- (CDStruct_90e2a262)_convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (CDStruct_90e2a262)_convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)_convertRegion:(CDStruct_90e2a262)arg1 toRectToView:(id)arg2;
- (CDStruct_c3b9c2ee)_convertPoint:(struct CGPoint)arg1 toMapPointFromView:(id)arg2;
- (struct CGPoint)_convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (CDStruct_c3b9c2ee)_convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint)_convertCoordinate:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKMapViewInternal : NSObject
{
    MKMapView *view;
}

- (void).cxx_destruct;
- (void)startEffects;

@end

@interface MKUserLocationView : MKAnnotationView <VKPuckAnimatorTarget>
{
    VKAnnotationMarker *_marker;
    long long _zoomDirection;
    CALayer *_pulseLayer;
    CALayer *_accuracyLayer;
    _Bool _allowsPulse;
    _Bool _shouldPulse;
    _Bool _allowsHeadingIndicator;
    _Bool _shouldDisplayHeading;
    double _headingAccuracy;
    CALayer *_headingLayer;
    _Bool _allowsAccuracyRing;
    _Bool _stale;
    _Bool _effectsEnabled;
    double _presentationCourse;
    double _locationAccuracy;
    CLLocation *_lastLocation;
}

+ (unsigned long long)_selectedZIndex;
+ (unsigned long long)_zIndex;
+ (double)accuracyDiameter:(double)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) double locationAccuracy; // @synthesize locationAccuracy=_locationAccuracy;
@property(nonatomic) double presentationCourse; // @synthesize presentationCourse=_presentationCourse;
@property(nonatomic, getter=isEffectsEnabled) _Bool effectsEnabled; // @synthesize effectsEnabled=_effectsEnabled;
@property(readonly, nonatomic, getter=isStale) _Bool stale; // @synthesize stale=_stale;
@property(nonatomic) _Bool allowsAccuracyRing; // @synthesize allowsAccuracyRing=_allowsAccuracyRing;
@property(nonatomic) double headingAccuracy; // @synthesize headingAccuracy=_headingAccuracy;
@property(nonatomic) _Bool shouldDisplayHeading; // @synthesize shouldDisplayHeading=_shouldDisplayHeading;
@property(nonatomic) _Bool allowsHeadingIndicator; // @synthesize allowsHeadingIndicator=_allowsHeadingIndicator;
@property(nonatomic) _Bool allowsPulse; // @synthesize allowsPulse=_allowsPulse;
@property(nonatomic) long long zoomDirection; // @synthesize zoomDirection=_zoomDirection;
- (void).cxx_destruct;
- (void)setAnimatingToCoordinate:(_Bool)arg1;
- (void)setPresentationCoordinate:(CDStruct_c3b9c2ee)arg1;
- (_Bool)_tracking;
- (void)_setTracking:(_Bool)arg1;
- (void)setZoomDirection:(long long)arg1 deltaScale:(double)arg2;
- (void)_setPresentationCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_setAnimatingToCoordinate:(_Bool)arg1;
- (id)_vkMarker;
- (void)_updateLayers;
- (void)locationManagerFailedToUpdateLocation;
- (void)updateStateFromLocation:(id)arg1 duration:(double)arg2;
- (void)setLocationAccuracy:(double)arg1 duration:(double)arg2;
- (void)_resetLayerToMatchAccuracyRing;
- (id)_layerToMatchAccuracyRing;
- (id)_accuracyAnimation:(double)arg1;
@property(nonatomic) float opacity;
- (void)_updateHeadingLayer;
- (struct UIImage *)_headingImageForAccuracy:(double)arg1 anchorPoint:(struct CGPoint *)arg2;
- (id)_baseLayer;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (struct CGRect)_mapkit_visibleRect;
- (void)didMoveToWindow;
- (void)_updatePulse;
- (void)_pausePulse;
- (void)_resumePulse;
- (id)_pulseAnimation;
- (id)_animationToSynchronizePulse:(id *)arg1;
- (id)_pulseLayer;
- (id)_pulseTintColor;
- (void)_setMapPitchRadians:(double)arg1;
- (void)_updateFromMap;
- (void)layoutSubviews;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKModernUserLocationView : MKUserLocationView
{
    CALayer *_innerCircleLayer;
    _Bool _shouldInnerPulse;
    struct UIImage *_innerImageMask;
    _Bool _rotateInnerImageToMatchCourse;
    CALayer *_baseLayer;
    CALayer *_baseDimmingLayer;
}

+ (double)innerDiameter;
+ (double)baseDiameter;
@property(nonatomic) _Bool rotateInnerImageToMatchCourse; // @synthesize rotateInnerImageToMatchCourse=_rotateInnerImageToMatchCourse;
@property(retain, nonatomic) UIImage *innerImageMask; // @synthesize innerImageMask=_innerImageMask;
@property(nonatomic) _Bool shouldInnerPulse; // @synthesize shouldInnerPulse=_shouldInnerPulse;
- (void).cxx_destruct;
- (void)_setPresentationCourse:(double)arg1;
- (void)_setMapRotationRadians:(double)arg1;
- (void)_updateInnerCourseRotation;
- (void)tintColorDidChange;
- (void)_updateAccuracyColors;
- (void)_updateLayers;
- (void)setEffectsEnabled:(_Bool)arg1;
- (struct UIImage *)_headingImageForAccuracy:(double)arg1 anchorPoint:(struct CGPoint *)arg2;
- (void)_setupLayers;
- (void)_updateInnerImage;
- (void)_updateBaseImage;
- (void)_resetLayerToMatchAccuracyRing;
- (id)_layerToMatchAccuracyRing;
- (id)_pulseAnimation;
- (void)_setMapDisplayStyle:(unsigned long long)arg1;
- (void)_setMapType:(unsigned long long)arg1;
- (id)_pulseLayer;
- (void)_updatePulseColor;
- (void)_updateInnerMaskLayer;
- (void)didMoveToWindow;
- (id)_animationToSynchronizePulse:(id *)arg1;
- (void)_updatePulseAnimation;
- (id)_innerPulseAnimation;
- (id)_baseDimmingLayer;
- (id)_baseLayer;
- (void)_dealloc;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (struct CGColor *)_accuracyFillColor;

@end

__attribute__((visibility("hidden")))
@interface MKNewAnnotationContainerView : MKAnnotationContainerView
{
    _Bool _suppress;
}

- (void)setAnnotationViewsRotationRadians:(double)arg1 animation:(id)arg2;
- (void)_updateAddedAnnotationRotation:(id)arg1;
- (void)_updateAnnotationViewPerspective;
- (void)_updateAnnotationViewPositions;
- (void)stopSuppressingUpdates;
- (void)suppressUpdates;
- (void)_updateAnnotationView:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKOldAnnotationContainerView : MKAnnotationContainerView
{
}

@end

__attribute__((visibility("hidden")))
@interface MKOrientationContext : NSObject
{
    NSMutableArray *orientViews;
    NSArray *relativeViews;
    struct UIView *projectionView;
    struct CGRect *relativeViewFrames;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)invalidateView:(id)arg1;
- (void)_computeRelativeViewFrame:(id)arg1;
- (void)_computeRelativeViewFrames;
- (id)initWithViewsToOrient:(id)arg1 relativeViews:(id)arg2 projectionView:(struct UIView *)arg3;

@end

__attribute__((visibility("hidden")))
@interface MKOverlayContainerView : UIView
{
    NSMutableOrderedSet *_overlays[2];
    NSMapTable *_overlayToDrawable[2];
    NSMutableArray *_drawables[2];
    NSMutableArray *_vkOverlays[2];
    UIView *_viewContainers[2];
    id <MKOverlayContainerViewDelegate> _delegate;
    double _mapZoomScale;
}

@property(nonatomic) double mapZoomScale; // @synthesize mapZoomScale=_mapZoomScale;
@property(nonatomic) __weak id <MKOverlayContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (void)_insertDrawable:(id)arg1 forOverlay:(id)arg2 atIndex:(long long)arg3 level:(long long)arg4;
- (void)_updateContentScale:(id)arg1;
- (void)_removeDrawable:(id)arg1 forOverlay:(id)arg2 level:(long long)arg3;
- (id)drawableForOverlay:(id)arg1;
- (id)overlaysInLevel:(long long)arg1;
@property(readonly, nonatomic) NSArray *overlays;
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;
- (void)_exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2 level:(long long)arg3;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;
- (void)removeOverlays:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (long long)_levelForOverlay:(id)arg1 exists:(_Bool *)arg2;
- (void)addOverlays:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)addOverlays:(id)arg1 level:(long long)arg2;
- (void)addOverlay:(id)arg1 level:(long long)arg2;
- (void)addAndRemoveOverlayViews;
- (id)_considerAddingDrawable:(id)arg1 inAddRect:(CDStruct_90e2a262)arg2 level:(long long)arg3;
- (void)_configureAndAddDrawable:(id)arg1 forOverlay:(id)arg2 level:(long long)arg3;
- (CDStruct_90e2a262)_mapRectWithFractionOfVisible:(double)arg1;
- (long long)_drawableIndexForDrawable:(id)arg1 level:(long long)arg2;
- (id)_viewContainerForLevel:(long long)arg1;
- (void)visibleRectChanged;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MKPinAnnotationView : MKAnnotationView
{
    UIImageView *_shadowView;
    id _delegate;
    int _pinType;
    int _state;
    _Bool _animatesDrop;
}

+ (struct CGPoint)_rightCalloutOffset;
+ (struct CGPoint)_leftCalloutOffset;
+ (struct CGPoint)_calloutOffset;
+ (struct CGPoint)_shadowAnchorPoint;
+ (struct CGPoint)_perceivedAnchorPoint;
+ (struct UIImage *)_shadowImage;
+ (id)_reuseIdentifier;
+ (id)_pinsWithType:(int)arg1 mapDisplayStyle:(unsigned long long)arg2;
+ (id)_dropBounceAnimation;
+ (id)_bounceAnimation;
+ (struct CGRect)_pinFrameForPosition:(struct CGPoint)arg1;
+ (struct CGRect)_desiredBounds;
+ (struct CGSize)_perceivedSize;
+ (Class)layerClass;
- (void).cxx_destruct;
- (int)_state;
- (_Bool)isHighlighted;
- (void)setHighlighted:(_Bool)arg1;
- (void)animationDidStart:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)_liftDidEnd:(id)arg1;
- (void)_liftBeforeDropDidEnd:(id)arg1;
- (void)_dropAfterDraggingDidEnd:(id)arg1;
- (void)_liftForDraggingAfterBounceAnimated:(_Bool)arg1;
- (void)_liftForDraggingAnimated:(_Bool)arg1;
- (void)setDragState:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)setDragState:(unsigned long long)arg1;
- (void)_dropAfterDraggingAndRevertPosition:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_dropFromPoint:(struct CGPoint)arg1 shadowStartPoint:(struct CGPoint)arg2 distance:(double)arg3 maxDistance:(double)arg4 withDelay:(double)arg5;
- (id)_bounceAnimation:(_Bool)arg1 withBeginTime:(double)arg2 addToLayer:(_Bool)arg3;
- (void)_stopDropAnimationAndDropToPosition;
- (void)_cleanupAfterPinDropAnimation;
- (void)_stopDrop;
- (void)_removeAllAnimations;
- (void)_didUpdatePosition;
- (void)setCenter:(struct CGPoint)arg1;
- (void)_updateShadowLayer;
- (void)_setRotationRadians:(double)arg1 withAnimation:(id)arg2;
- (void)_updatePinType;
- (void)_reset;
- (int)_pinType;
- (void)_invalidateImage;
- (void)_setPinType:(int)arg1;
- (id)_pinJumpImages;
- (id)_pinBounceImages;
- (struct UIImage *)_floatingImage;
- (struct UIImage *)_highlightedImage;
- (struct UIImage *)_image;
- (id)_pins;
- (id)description;
- (void)_setMapDisplayStyle:(unsigned long long)arg1;
- (void)_setMapType:(unsigned long long)arg1;
- (struct CGRect)_significantBounds;
- (void)setAnnotation:(id)arg1;
@property(nonatomic) _Bool animatesDrop;
@property(nonatomic) unsigned long long pinColor;
- (id)_delegate;
- (void)_setDelegate:(id)arg1;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;
- (struct CGPoint)_draggingDropOffset;
- (struct CGPoint)centerOffset;

@end

@interface MKPlaceActionsViewController : UITableViewController <MKStackingViewControllerPreferredSizeUse>
{
    _Bool _showContactActions;
    _Bool _showRemovePin;
    _Bool _showReportAProblem;
    _Bool _showSharing;
    _Bool _showCreateReminder;
    _Bool _showSimulateLocation;
    _Bool _showOpenInSkyline;
    NSArray *_actions;
    id <MKPlaceActionsViewControllerDelegate> _actionDelegate;
    MKMapItem *_mapItem;
}

@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(nonatomic) _Bool showOpenInSkyline; // @synthesize showOpenInSkyline=_showOpenInSkyline;
@property(nonatomic) _Bool showSimulateLocation; // @synthesize showSimulateLocation=_showSimulateLocation;
@property(nonatomic) _Bool showCreateReminder; // @synthesize showCreateReminder=_showCreateReminder;
@property(nonatomic) _Bool showSharing; // @synthesize showSharing=_showSharing;
@property(nonatomic) _Bool showReportAProblem; // @synthesize showReportAProblem=_showReportAProblem;
@property(nonatomic) _Bool showRemovePin; // @synthesize showRemovePin=_showRemovePin;
@property(nonatomic) _Bool showContactActions; // @synthesize showContactActions=_showContactActions;
@property(nonatomic) __weak id <MKPlaceActionsViewControllerDelegate> actionDelegate; // @synthesize actionDelegate=_actionDelegate;
@property(retain, nonatomic) NSArray *actions; // @synthesize actions=_actions;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)updateActions;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKPlaceActivityProvider : NSObject
{
    id <MKPlaceActivityProviderDelegate> _delegate;
    MKMapItem *_mapItem;
}

@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(nonatomic) __weak id <MKPlaceActivityProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)activityAnnotationView;
- (id)appleActivityURL;
- (id)activityURL;
- (id)activityTitle;
- (id)initWithMapItem:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceAttributionCell : ABContactCell
{
    UILabel *_label;
    NSMutableArray *_scaledConstraints;
}

+ (double)intrinsicContentHeight;
+ (id)fontForLabel;
@property(retain, nonatomic) NSMutableArray *scaledConstraints; // @synthesize scaledConstraints=_scaledConstraints;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (void)tintColorDidChange;
@property(retain, nonatomic) NSAttributedString *attributionString;
- (id)updatedAttributionStringFromString:(id)arg1 updateColorOnly:(_Bool)arg2;
- (void)contentSizeDidChange;
- (void)updateConstraints;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceDealCell : ABContactCell
{
}

+ (id)reuseIdentifier;
@property(retain, nonatomic) NSString *dealTitle;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface MKPlaceHeaderBackgroundView : UIView <MKPlaceHeaderViewCinematics>
{
    long long _backgroundType;
    MKMapItem *_mapItem;
    id <MKPlaceHeaderBackgroundViewDelegate> _delegate;
    long long _preparationState;
}

+ (id)backgroundViewForMapItem:(id)arg1 headerView:(id)arg2;
+ (id)backgroundViewForBackgroundType:(long long)arg1 mapItem:(id)arg2 headerView:(id)arg3;
+ (Class)classForBackgroundType:(long long)arg1;
+ (long long)backgroundTypeForMapItem:(id)arg1;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(nonatomic) long long backgroundType; // @synthesize backgroundType=_backgroundType;
@property(nonatomic) long long preparationState; // @synthesize preparationState=_preparationState;
@property(nonatomic) __weak id <MKPlaceHeaderBackgroundViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)resume;
- (void)pause;
- (void)reset;
- (void)present;
- (void)prepareForPresentation;
- (id)initWithFrame:(struct CGRect)arg1 mapItem:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceHeaderBackgroundView_Flyover : MKPlaceHeaderBackgroundView
{
    _Bool _animationPaused;
    UITapGestureRecognizer *_interactionTapRecognizer;
    MKMapView *_mapView;
    GEOPDFlyover *_flyover;
}

- (void)setFlyover:(id)arg1;
- (id)flyover;
- (void)setMapView:(id)arg1;
- (id)mapView;
- (void).cxx_destruct;
- (void)resume;
- (void)pause;
- (void)reset;
- (void)present;
- (void)_pauseTour;
- (void)setFrame:(struct CGRect)arg1;
- (void)prepareForPresentation;
- (id)initWithFrame:(struct CGRect)arg1 mapItem:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceHeaderBackgroundView_Slideshow : MKPlaceHeaderBackgroundView
{
    NSTimer *_timer;
    NSMutableArray *_images;
    long long _nextImageIndex;
    unsigned long long _iteration;
    NSArray *_slides;
    CDStruct_0e9d808f _slideShowFlags;
}

+ (_Bool)canDisplayImagesForMapItem:(id)arg1;
- (void).cxx_destruct;
- (void)showNextImage;
- (id)currentSlide;
- (id)nextSlide;
- (void)setFrame:(struct CGRect)arg1;
- (void)reset;
- (void)present;
- (void)prepareForPresentation;
- (void)pauseBackgroundAnimation;
- (void)resume;
- (void)pause;
- (void)startBackgroundAnimation;
- (void)loadBackgroundContent;
- (void)preloadBackgroundContent;
- (void)loadBusinessImages:(unsigned long long)arg1;
- (void)clearSlideShowImages;
- (void)addSlideShowImage:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceHeaderBackgroundView_Snapshot : MKPlaceHeaderBackgroundView <MKMapViewDelegate>
{
    MKMapView *_mapView;
    _Bool _orbiting;
    _Bool _showsPin;
    _Bool _useSatellite;
    MKMapCamera *_orbitCamera;
    double _zoomLevel;
    unsigned long long _pinColor;
    CLLocation *_location;
}

@property(retain, nonatomic) CLLocation *location; // @synthesize location=_location;
@property(nonatomic) unsigned long long pinColor; // @synthesize pinColor=_pinColor;
@property(nonatomic) double zoomLevel; // @synthesize zoomLevel=_zoomLevel;
@property(nonatomic) _Bool useSatellite; // @synthesize useSatellite=_useSatellite;
@property(nonatomic) _Bool showsPin; // @synthesize showsPin=_showsPin;
@property(nonatomic) _Bool orbiting; // @synthesize orbiting=_orbiting;
@property(retain, nonatomic) MKMapCamera *orbitCamera; // @synthesize orbitCamera=_orbitCamera;
- (void).cxx_destruct;
- (void)resume;
- (void)pause;
- (void)reset;
- (void)present;
- (void)prepareForPresentation;
- (void)pauseOrbit;
- (void)_orbitNextThird;
- (void)beginOrbit;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapViewDidFinishLoadingMap:(id)arg1;
- (void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(_Bool)arg2;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapFinishedLoading:(_Bool)arg1;
- (void)requestSnapshot;
- (void)setBackgroundType:(long long)arg1;
- (void)setMapItem:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 mapItem:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceHeaderView : UIView <MKStackingViewControllerSizableView, MKPlaceHeaderViewCinematics, MKPlaceHeaderBackgroundViewDelegate>
{
    MKPlaceHeaderBackgroundView *_background;
    UIView *_screen;
    UIImageView *_vignette;
    MKDistanceDetailProvider *_distanceMonitor;
    _Bool _showBusinessDetails;
    MKStarRatingView *_ratingView;
    struct UILabel *_titleLabel;
    struct UILabel *_distanceToPlaceLabel;
    struct {
        unsigned int isPresenting;
    } _headerViewFlags;
    _Bool _needsToUpdateTitleLabel;
    MKMapItem *_mapItem;
    long long _backgroundTypeOverride;
    id <MKPlaceHeaderViewDelegate> _delegate;
    NSLayoutConstraint *_titleLabelBaselineConstraint;
    NSArray *_labelWidthConstraints;
}

@property(retain, nonatomic) NSArray *labelWidthConstraints; // @synthesize labelWidthConstraints=_labelWidthConstraints;
@property(retain, nonatomic) NSLayoutConstraint *titleLabelBaselineConstraint; // @synthesize titleLabelBaselineConstraint=_titleLabelBaselineConstraint;
@property(nonatomic) _Bool needsToUpdateTitleLabel; // @synthesize needsToUpdateTitleLabel=_needsToUpdateTitleLabel;
@property(nonatomic) __weak id <MKPlaceHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long backgroundTypeOverride; // @synthesize backgroundTypeOverride=_backgroundTypeOverride;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
- (void).cxx_destruct;
- (void)resume;
- (void)pause;
- (void)reset;
- (void)present;
- (void)fadeOutScreen;
- (void)prepareForPresentation;
- (void)resetVignette;
- (id)viewsForPresentation;
- (void)layoutSubviews;
- (void)refreshContent;
- (void)headerViewBackground:(id)arg1 willShowBackground:(id)arg2;
- (void)headerViewBackgroundDidFinishLoading:(id)arg1;
- (void)presentBackgroundIfNeeded;
- (void)resetAnimations;
- (void)restartAnimations;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)addConstraints;
- (void)addContent;
- (void)_configureLabelForHeader:(id)arg1;
- (struct UILabel *)newInfoLabel;
- (struct CATransform3D)perspectiveTransform;
@property(nonatomic) double rating;
@property(copy, nonatomic) NSString *subTitle;
@property(copy, nonatomic) NSString *title;
- (void)updateTitleLabel;
- (void)dealloc;
- (void)resumeAnimations;
- (void)pauseAnimations;
- (void)setBackgroundViewTransform:(struct CATransform3D)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceInfoViewAmenitiesCell : ABContactCell
{
    NSMutableArray *_labels;
    NSMutableArray *_values;
    NSArray *_keyValues;
    NSMutableArray *_labelConstraints;
    UIView *_dummyContentView;
}

+ (double)intrinsicContentHeight;
+ (id)reuseIdentifier;
@property(retain, nonatomic) UIView *dummyContentView; // @synthesize dummyContentView=_dummyContentView;
@property(retain, nonatomic) NSMutableArray *labelConstraints; // @synthesize labelConstraints=_labelConstraints;
@property(retain, nonatomic) NSArray *keyValues; // @synthesize keyValues=_keyValues;
- (void).cxx_destruct;
- (void)refreshContent;
- (void)addWidthAndSideSpacingConstraintsForLabels:(id)arg1;
- (void)addConstraintsForKeyLabel:(id)arg1 andMatchingValueLabel:(id)arg2;
- (void)tintColorDidChange;
- (id)attributeValueWithString:(id)arg1;
- (id)attributeLabelWithString:(id)arg1;
- (void)contentSizeDidChange;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceInfoViewController : ABContactViewController <ABContactViewControllerDelegate, MKStackingViewControllerPreferredSizeUse, MKPlaceAttributionCellProvider>
{
    ABCardGroup *_dealsGroup;
    ABCardGroup *_businessInfoGroup;
    ABCardGroup *_inlineMapGroup;
    _Bool _showAttribution;
    _MKPlaceViewController *_owner;
    id <MKPlaceInfoViewControllerDelegate> _infoDelegate;
    MKMapItem *_mapItem;
    NSArray *_businessInfoOrder;
    UIImage *_inlineMap;
    MKYelpDeal *_deal;
}

@property(nonatomic) _Bool showAttribution; // @synthesize showAttribution=_showAttribution;
@property(retain, nonatomic) MKYelpDeal *deal; // @synthesize deal=_deal;
@property(retain, nonatomic) UIImage *inlineMap; // @synthesize inlineMap=_inlineMap;
@property(retain, nonatomic) NSArray *businessInfoOrder; // @synthesize businessInfoOrder=_businessInfoOrder;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(nonatomic) __weak id <MKPlaceInfoViewControllerDelegate> infoDelegate; // @synthesize infoDelegate=_infoDelegate;
@property(nonatomic) __weak _MKPlaceViewController *owner; // @synthesize owner=_owner;
- (void).cxx_destruct;
- (void)_flyoverTour:(id)arg1;
- (void)_showDeal;
- (void)_directionsFromAddress:(id)arg1;
- (void)_directionsToAddress:(id)arg1;
- (void)_launchMaps;
- (void)_launchMapsDirectionsWithSource:(id)arg1 destination:(id)arg2 directionsMode:(id)arg3;
- (void)_handleBusinessAttributionRequest;
- (_Bool)contactViewController:(id)arg1 shouldPerformDefaultActionForContact:(id)arg2 property:(id)arg3 labeledValue:(id)arg4;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)contactView:(id)arg1 heightForItemAtIndex:(long long)arg2 inGroup:(id)arg3;
- (void)_updatePreferredContentSize;
- (void)tableViewDidFinishReload:(id)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)contactView:(id)arg1 cellForItemAtIndex:(long long)arg2 inGroup:(id)arg3;
- (long long)contactView:(id)arg1 numberOfItemsInGroup:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)updateInlineMapWithRefinedMapItem:(id)arg1;
- (void)_setupActions;
- (void)_setupBusinessInfo;
- (id)contactHeaderView;
- (void)viewDidLoad;
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
@property(readonly, nonatomic) NSAttributedString *infoAttributionString;
- (id)initWithContact:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceInfoViewInlineMapCell : ABContactCell
{
    UIImage *_inlineMap;
    UIImageView *_inlineMapView;
}

+ (id)reuseIdentifier;
+ (_Bool)requiresConstraintBasedLayout;
@property(retain, nonatomic) UIImageView *inlineMapView; // @synthesize inlineMapView=_inlineMapView;
@property(retain, nonatomic) UIImage *inlineMap; // @synthesize inlineMap=_inlineMap;
- (void).cxx_destruct;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface MKPlaceLocVCardActivityProvider : MKPlaceActivityProvider
{
    CNContact *_contact;
}

@property(retain, nonatomic) CNContact *contact; // @synthesize contact=_contact;
- (void).cxx_destruct;
- (void)_setRecord:(void *)arg1 property:(int)arg2 stringValue:(id)arg3 label:(id)arg4;
- (id)activityViewController:(id)arg1 attachmentNameForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 dataTypeIdentifierForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;
- (id)initWithMapItem:(id)arg1 contact:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceNearbyAppsMetricsCoordinator : NSObject
{
    SSMetricsController *_metricsController;
    _Bool _controllerReady;
    NSMutableArray *_callbacks;
    SSURLBag *_urlBag;
    NSString *_pageContext;
    NSString *_topic;
}

@property(copy, nonatomic) NSString *topic; // @synthesize topic=_topic;
@property(copy, nonatomic) NSString *pageContext; // @synthesize pageContext=_pageContext;
@property(nonatomic) _Bool controllerReady; // @synthesize controllerReady=_controllerReady;
@property(readonly, nonatomic) NSMutableArray *callbacks; // @synthesize callbacks=_callbacks;
- (void).cxx_destruct;
@property(readonly, nonatomic) SSURLBag *urlBag; // @synthesize urlBag=_urlBag;
- (void)performCallbacks;
- (void)setPageConfiguration:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)getMetricsControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithConfigurationIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceNearbyAppsViewController : UITableViewController <MKStackingViewControllerPreferredSizeUse, MKPlaceViewNearbyAppsCellDelegate>
{
    id <MKPlaceNearbyAppsViewControllerDelegate> _nearbyAppsDelegate;
    NSArray *_storeItems;
}

@property(retain, nonatomic) NSArray *storeItems; // @synthesize storeItems=_storeItems;
@property(nonatomic) __weak id <MKPlaceNearbyAppsViewControllerDelegate> nearbyAppsDelegate; // @synthesize nearbyAppsDelegate=_nearbyAppsDelegate;
- (void).cxx_destruct;
- (void)nearbyAppsCell:(id)arg1 showStorePageWithURL:(id)arg2 storeID:(id)arg3;
- (void)nearbyAppsCell:(id)arg1 openAppWithBundleID:(id)arg2 storeID:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLayoutSubviews;
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
- (void)contentSizeDidChange;
- (void)viewDidLoad;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlacePhotosViewController : UITableViewController <UICollectionViewDataSource, UICollectionViewDelegate, MKStackingViewControllerPreferredSizeUse, MKPlaceAttributionCellProvider>
{
    _Bool _showAddPhotoButton;
    _Bool _showMorePhotosButton;
    _Bool _hasAttribution;
    _Bool _showAttribution;
    MKMapItem *_mapItem;
    id <MKPlaceCardPhotosControllerDelegate> _photosControllerDelegate;
    unsigned long long _photosCount;
    double _photoWidth;
    _MKPlacePhotosCollectionView *_photoGrid;
}

@property(nonatomic) _Bool showAttribution; // @synthesize showAttribution=_showAttribution;
@property(retain, nonatomic) _MKPlacePhotosCollectionView *photoGrid; // @synthesize photoGrid=_photoGrid;
@property(nonatomic) double photoWidth; // @synthesize photoWidth=_photoWidth;
@property(nonatomic) unsigned long long photosCount; // @synthesize photosCount=_photosCount;
@property(nonatomic) _Bool hasAttribution; // @synthesize hasAttribution=_hasAttribution;
@property(nonatomic) _Bool showMorePhotosButton; // @synthesize showMorePhotosButton=_showMorePhotosButton;
@property(nonatomic) _Bool showAddPhotoButton; // @synthesize showAddPhotoButton=_showAddPhotoButton;
@property(nonatomic) __weak id <MKPlaceCardPhotosControllerDelegate> photosControllerDelegate; // @synthesize photosControllerDelegate=_photosControllerDelegate;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
- (void).cxx_destruct;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)photos;
- (double)_photoCellHeight;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)_calculatePhotoSizeForSize:(struct CGSize)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)_morePhotos;
- (void)_addPhoto;
@property(readonly, nonatomic) _Bool showAttributionButtons;
- (void)viewDidLoad;
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceReviewsViewCell : UITableViewCell
{
    UIImageView *_pictureView;
    MKStarRatingAndLabelView *_starView;
    UILabel *_authorLabel;
    UILabel *_dateLabel;
    UILabel *_reviewLabel;
    NSMutableArray *_scaledConstraints;
}

+ (id)reuseIdentifier;
+ (double)intrinsicContentHeight;
@property(retain, nonatomic) NSMutableArray *scaledConstraints; // @synthesize scaledConstraints=_scaledConstraints;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long rating; // @dynamic rating;
@property(nonatomic) __weak NSString *reviewText; // @dynamic reviewText;
@property(nonatomic) __weak NSDate *date; // @dynamic date;
@property(nonatomic) __weak NSString *author; // @dynamic author;
@property(nonatomic) __weak UIImage *picture; // @dynamic picture;
- (void)prepareForReuse;
- (void)updateConstraints;
- (id)fontForAuthor;
- (void)contentSizeDidChange;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceReviewsViewCheckInWriteCell : UITableViewCell
{
    UILabel *_checkInLabel;
    UILabel *_writeReviewLabel;
    id <MKPlaceReviewsViewCheckInWriteCellDelegate> _delegate;
    NSMutableArray *_scaledConstraints;
}

+ (id)reuseIdentifier;
+ (double)intrinsicContentHeight;
@property(retain, nonatomic) NSMutableArray *scaledConstraints; // @synthesize scaledConstraints=_scaledConstraints;
@property(nonatomic) __weak id <MKPlaceReviewsViewCheckInWriteCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)tintColorDidChange;
- (void)cellTapped:(id)arg1;
@property(retain, nonatomic) NSAttributedString *writeReviewTitle;
@property(retain, nonatomic) NSAttributedString *checkInTitle;
- (id)updatedAttributedString:(id)arg1 onlyUpdateColor:(_Bool)arg2;
- (id)newLabel;
- (void)updateConstraints;
- (void)contentSizeDidChange;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceReviewsViewController : UITableViewController <MKPlaceReviewsViewCheckInWriteCellDelegate, MKStackingViewControllerPreferredSizeUse, MKPlaceAttributionCellProvider>
{
    _Bool _hasAttribution;
    _Bool _showCheckInAndWriteReviewButtons;
    _Bool _showMoreReviewsButton;
    _Bool _showAttribution;
    MKMapItem *_mapItem;
    GEORating *_rating;
    id <MKPlaceCardReviewsControllerDelegate> _reviewsControllerDelegate;
    ABMonogrammer *_monogrammer;
    _MKPlaceViewController *_owner;
}

@property(nonatomic) _Bool showAttribution; // @synthesize showAttribution=_showAttribution;
@property(nonatomic) __weak _MKPlaceViewController *owner; // @synthesize owner=_owner;
@property(retain, nonatomic) ABMonogrammer *monogrammer; // @synthesize monogrammer=_monogrammer;
@property(nonatomic) _Bool showMoreReviewsButton; // @synthesize showMoreReviewsButton=_showMoreReviewsButton;
@property(nonatomic) _Bool showCheckInAndWriteReviewButtons; // @synthesize showCheckInAndWriteReviewButtons=_showCheckInAndWriteReviewButtons;
@property(nonatomic) _Bool hasAttribution; // @synthesize hasAttribution=_hasAttribution;
@property(nonatomic) __weak id <MKPlaceCardReviewsControllerDelegate> reviewsControllerDelegate; // @synthesize reviewsControllerDelegate=_reviewsControllerDelegate;
@property(retain, nonatomic) GEORating *rating; // @synthesize rating=_rating;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)_showReviewWithID:(id)arg1;
- (void)_viewAllReviews;
- (void)checkInWriteReviewCellDidSelectWriteReview:(id)arg1;
- (void)checkInWriteReviewCellDidSelectCheckIn:(id)arg1;
@property(readonly, nonatomic) _Bool showAttributionButtons;
- (void)viewDidLoad;
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceSectionHeaderView : UIView
{
    _Bool _showSeeMoreButton;
    NSString *_sectionHeaderText;
    UILabel *_sectionHeaderLabel;
    _MKRightImageButton *_seeMoreButton;
    NSArray *_seeMoreButtonConstraints;
    NSArray *_noSeeMoreButtonConstraints;
    NSMutableArray *_scaledConstraints;
    SEL _action;
    id _target;
}

+ (double)intrinsicContentHeight;
@property(nonatomic) __weak id target; // @synthesize target=_target;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(retain, nonatomic) NSMutableArray *scaledConstraints; // @synthesize scaledConstraints=_scaledConstraints;
@property(retain, nonatomic) NSArray *noSeeMoreButtonConstraints; // @synthesize noSeeMoreButtonConstraints=_noSeeMoreButtonConstraints;
@property(retain, nonatomic) NSArray *seeMoreButtonConstraints; // @synthesize seeMoreButtonConstraints=_seeMoreButtonConstraints;
@property(retain, nonatomic) _MKRightImageButton *seeMoreButton; // @synthesize seeMoreButton=_seeMoreButton;
@property(retain, nonatomic) UILabel *sectionHeaderLabel; // @synthesize sectionHeaderLabel=_sectionHeaderLabel;
@property(copy, nonatomic) NSString *sectionHeaderText; // @synthesize sectionHeaderText=_sectionHeaderText;
@property(nonatomic) _Bool showSeeMoreButton; // @synthesize showSeeMoreButton=_showSeeMoreButton;
- (void).cxx_destruct;
- (void)setTarget:(id)arg1 action:(SEL)arg2;
- (id)chevronImage;
- (void)updateConstraints;
- (void)contentSizeDidChange;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MKPlaceTextActivityProvider : MKPlaceActivityProvider <MKActivityItemSource>
{
}

- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKPlaceURLActivityProvider : MKPlaceActivityProvider <MKActivityItemSource, MKActivityItemSocialSource>
{
}

- (long long)activityViewController:(id)arg1 attachmentULRTypeForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceViewNearbyAppCollectionViewCell : UICollectionViewCell
{
    UILabel *_titleLabel;
    UILabel *_categoryLabel;
    UILabel *_priceLabel;
    UIImageView *_icon;
    NSDictionary *_storeData;
}

+ (double)heightWithIconSize:(struct CGSize)arg1;
+ (id)reuseIdentifier;
@property(retain, nonatomic) NSDictionary *storeData; // @synthesize storeData=_storeData;
- (void).cxx_destruct;
- (void)setImage:(id)arg1 animated:(_Bool)arg2;
- (void)tintColorDidChange;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKPlaceViewNearbyAppsCell : ABContactCell <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    UILabel *_headerLabel;
    UICollectionView *_collectionView;
    _MKNearbyAppsFlowLayout *_flowLayout;
    NSLayoutConstraint *_headerBaselineConstraint;
    NSLayoutConstraint *_collectionHeightConstraint;
    struct CGSize _iconSize;
    NSArray *_storeItems;
    id <MKPlaceViewNearbyAppsCellDelegate> _delegate;
}

+ (double)contentHeight;
+ (id)reuseIdentifier;
+ (double)_headerBaselineOffsetFromTop;
+ (id)_headerLabelFont;
+ (struct CGSize)_iconSize;
+ (_Bool)requiresConstraintBasedLayout;
@property(nonatomic) __weak id <MKPlaceViewNearbyAppsCellDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *storeItems; // @synthesize storeItems=_storeItems;
- (void).cxx_destruct;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)tintColorDidChange;
- (void)contentSizeDidChange;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKPlaceViewStyleProvider : NSObject
{
}

+ (id)attributionStringWithText:(id)arg1 image:(id)arg2 placeholder:(id)arg3 textBaselineOffset:(double)arg4;
+ (id)attributionStringWithTitle:(id)arg1 displayName:(id)arg2 logo:(id)arg3;

@end

@interface MKPlacemark : CLPlacemark <MKAnnotation>
{
}

@property(readonly, nonatomic) NSString *countryCode;
- (id)thoroughfare;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, copy, nonatomic) NSString *title;
- (id)initWithCoordinate:(CDStruct_c3b9c2ee)arg1 addressDictionary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;

@end

@interface MKPointAnnotation : MKShape
{
    CDStruct_2c43369c _coordinate;
}

@property(nonatomic) CDStruct_c3b9c2ee coordinate; // @synthesize coordinate=_coordinate;

@end

@interface MKPolygon : MKMultiPoint <MKOverlay>
{
    CDStruct_2c43369c _centroid;
    NSArray *_interiorPolygons;
    _Bool _isDefinitelyConvex;
}

+ (id)_polygonWithMapRect:(CDStruct_90e2a262)arg1;
+ (id)polygonEnclosingMapPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
+ (id)polygonWithCoordinates:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2 interiorPolygons:(id)arg3;
+ (id)polygonWithCoordinates:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
+ (id)polygonWithPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2 interiorPolygons:(id)arg3;
+ (id)polygonWithPoints:(CDStruct_c3b9c2ee *)arg1 count:(unsigned long long)arg2;
@property(nonatomic) _Bool _isDefinitelyConvex; // @synthesize _isDefinitelyConvex;
@property(readonly) NSArray *interiorPolygons; // @synthesize interiorPolygons=_interiorPolygons;
- (void).cxx_destruct;
@property(readonly, nonatomic) CDStruct_90e2a262 boundingMapRect;
- (_Bool)intersectsMapRect:(CDStruct_90e2a262)arg1;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

@interface MKPolygonRenderer : MKOverlayPathRenderer
{
}

- (void)fillPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)createPath;
@property(readonly, nonatomic) MKPolygon *polygon;
- (id)initWithPolygon:(id)arg1;

@end

@interface MKPolygonView : MKOverlayPathView
{
}

- (void)fillPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)createPath;
@property(readonly, nonatomic) MKPolygon *polygon;
- (id)initWithPolygon:(id)arg1;

@end

@interface MKPolylineRenderer : MKOverlayPathRenderer
{
}

- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (void)createPath;
@property(readonly, nonatomic) MKPolyline *polyline;
- (id)initWithPolyline:(id)arg1;

@end

@interface MKPolylineView : MKOverlayPathView
{
}

- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (void)createPath;
@property(readonly, nonatomic) MKPolyline *polyline;
- (id)initWithPolyline:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKPopoverBasedAnnotationCalloutController : MKAnnotationCalloutController <_MKPopoverEmbeddingViewWindowDelegate, _UIPopoverControllerMapsTransitionDelegate, UIPopoverControllerDelegate, UIPopoverControllerDelegatePrivate, MKSmallCalloutViewControllerDelegate>
{
    UIPopoverController *_popoverController;
    MKSmallCalloutViewController *_calloutViewController;
    CDUnknownBlockType _afterMoveToWindowBlock;
    UIView *_layoutConstraintsView;
    _MKPopoverEmbeddingView *_embeddingView;
    _Bool _isHidingForImplementationReasons;
    _Bool _allowsPopoverWhenNotInWindow;
    _Bool _animatingIn;
    _Bool _isShowingPopover;
    _Bool _isCalloutExpanded;
}

@property(nonatomic) _Bool allowsPopoverWhenNotInWindow; // @synthesize allowsPopoverWhenNotInWindow=_allowsPopoverWhenNotInWindow;
@property(readonly, nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
- (void).cxx_destruct;
- (void)embeddingView:(id)arg1 didMoveToWindow:(id)arg2;
- (void)embeddingView:(id)arg1 willMoveToWindow:(id)arg2;
- (void)_popoverControllerDidFinishMapsTransitionExpanding:(id)arg1;
- (void)_popoverControllerWillBeginMapsTransitionMovingSideways:(id)arg1;
- (void)popoverController:(id)arg1 animationCompleted:(long long)arg2;
- (void)setMapDisplayStyle:(unsigned long long)arg1;
- (void)_setDetailAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setRightAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setLeftAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)_setSubtitle:(id)arg1 animated:(_Bool)arg2;
- (id)_subtitle;
- (void)_setTitle:(id)arg1;
- (_Bool)_isShowingCallout;
- (_Bool)isCalloutExpanded;
- (_Bool)calloutContainsPoint:(struct CGPoint)arg1;
- (void)_updateCalloutAnimated:(_Bool)arg1;
- (void)_updatePopoverContentSize:(_Bool)arg1;
- (void)hideCalloutAnimated:(_Bool)arg1;
- (void)_showCalloutAnimated:(_Bool)arg1 scrollToFit:(_Bool)arg2 avoid:(struct CGRect)arg3;
- (void)smallCalloutViewControllerDidAppear:(id)arg1;
- (void)showCalloutForAnnotationView:(id)arg1 animated:(_Bool)arg2 scrollToFit:(_Bool)arg3 avoid:(struct CGRect)arg4;
- (void)_snapLayoutConstraintsViewToContainerBounds;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKQuadTrie : NSObject
{
    unsigned int _maxItems;
    CDStruct_8caa76fc _minSize;
    CDStruct_02837cd9 _initialRegion;
    void *__root;
}

- (id).cxx_construct;
- (id)itemDescriptions;
- (id)description;
- (id)breadthFirstDescription;
- (id)depthFirstDescription;
- (void)clearAllItemsPerforming:(CDUnknownBlockType)arg1;
- (id)allItems;
- (unsigned long long)count;
- (void)foreach:(CDUnknownBlockType)arg1;
- (id)itemsPassingRectTest:(CDUnknownBlockType)arg1 coordinateTest:(CDUnknownBlockType)arg2;
- (id)itemsInMapRect:(CDStruct_90e2a262)arg1;
- (id)_itemsInMapRect:(CDStruct_90e2a262)arg1;
- (_Bool)contains:(id)arg1;
- (_Bool)remove:(id)arg1;
- (void)insert:(id)arg1;
- (void)dealloc;
- (id)initWithInitialRegion:(CDStruct_90e2a262)arg1 minimumSize:(CDStruct_c3b9c2ee)arg2 maximumItems:(unsigned int)arg3;

@end

@interface MKReverseGeocoder : NSObject
{
    MKReverseGeocoderInternal *_internal;
}

- (void).cxx_destruct;
- (void)cancel;
- (void)start;
- (void)_notifyResult:(id)arg1;
- (void)_notifyNoResults;
- (void)_notifyError:(id)arg1;
@property(readonly, nonatomic, getter=isQuerying) _Bool querying;
@property(readonly, nonatomic) MKPlacemark *placemark;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
- (void)setCoordinate:(CDStruct_c3b9c2ee)arg1;
@property(nonatomic) __weak id <MKReverseGeocoderDelegate> delegate;
- (id)initWithCoordinate:(CDStruct_c3b9c2ee)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKReverseGeocoderInternal : NSObject
{
    CDStruct_2c43369c coordinate;
    id <MKReverseGeocoderDelegate> delegate;
    MKMapItem *mapItem;
    id <MKMapServiceTicket> ticket;
    _Bool querying;
}

- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface MKRightPaddedTextAttachment : NSTextAttachment
{
    double _padding;
}

@property(nonatomic) double padding; // @synthesize padding=_padding;
- (void)setImage:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (id)_contentViewForImage:(id)arg1;

@end

@interface MKRoute : NSObject
{
    GEORoute *_geoRoute;
    MKRoutePolyline *_polyline;
    NSArray *_steps;
}

@property(readonly, nonatomic, getter=_geoRoute) GEORoute *geoRoute; // @synthesize geoRoute=_geoRoute;
@property(readonly, nonatomic) NSArray *steps; // @synthesize steps=_steps;
@property(readonly, nonatomic) MKPolyline *polyline; // @synthesize polyline=_polyline;
- (void).cxx_destruct;
@property(readonly, nonatomic) double expectedTravelTime;
@property(readonly, nonatomic) double distance;
@property(readonly, nonatomic) NSArray *advisoryNotices;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) unsigned long long transportType;
- (id)_initWithGEORoute:(id)arg1;
- (id)_maneuverImageForStep:(id)arg1 size:(struct CGSize)arg2 scale:(double)arg3;

@end

@interface MKRouteActivityProvider : MKPlaceActivityProvider
{
    MKMapItem *_sourceMapItem;
}

@property(retain, nonatomic) MKMapItem *sourceMapItem; // @synthesize sourceMapItem=_sourceMapItem;
- (void).cxx_destruct;
@property(retain, nonatomic) MKMapItem *destinationMapItem;
- (id)activitySourceTitle;
- (id)activityURL;
- (id)initWithSource:(id)arg1 destination:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MKRoutePolyline : MKPolyline
{
}

- (id)_stepWithRange:(struct _NSRange)arg1;

@end

@interface MKRouteStep : NSObject
{
    GEOStep *_geoStep;
    NSString *_instructions;
    unsigned long long _transportType;
    MKRouteStepPolyline *_polyline;
}

@property(readonly, nonatomic, getter=_geoStep) GEOStep *geoStep; // @synthesize geoStep=_geoStep;
@property(readonly, nonatomic) unsigned long long transportType; // @synthesize transportType=_transportType;
@property(readonly, nonatomic) NSString *instructions; // @synthesize instructions=_instructions;
@property(readonly, nonatomic) MKPolyline *polyline; // @synthesize polyline=_polyline;
- (void).cxx_destruct;
@property(readonly, nonatomic) double distance;
@property(readonly, nonatomic) NSString *notice;
- (id)_initWithGEOStep:(id)arg1 instructions:(id)arg2 transportType:(unsigned long long)arg3 polyline:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface MKRouteStepPolyline : MKPolyline
{
    MKRoutePolyline *_fullRoute;
}

- (void).cxx_destruct;
- (CDStruct_c3b9c2ee)coordinate;
- (void)dealloc;
- (id)_initWithRoute:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface MKRouteTextActivityProvider : MKRouteActivityProvider
{
}

- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

@end

@interface MKRouteURLActivityProvider : MKRouteActivityProvider
{
}

- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItem:(id)arg1;

@end

@interface MKScaleView : UIView
{
    double _distanceInMeters;
    _Bool _useMetric;
    _Bool _useYardsForShortDistances;
    NSNumberFormatter *_floatNumberFormatter;
    double _magicNumbers[3];
    UIColor *_lightSegmentColorRegular;
    UIColor *_darkSegmentColorRegular;
    UIColor *_borderColorRegular;
    UIColor *_lightSegmentColorSatellite;
    UIColor *_darkSegmentColorSatellite;
    UIColor *_borderColorSatellite;
    NSMutableArray *_segments;
    _MKScaleUnitsView *_unitsView;
    long long _oldNumberOfSegments;
    UIView *_outlineViewA;
    UIView *_outlineViewB;
    UIView *_displayedOutline;
    double _segmentLengthInPixels;
    double _resultSegmentLength;
    double _resultSegmentLengthInMeters;
    NSMutableDictionary *_formattedNumberCache;
    NSString *_feetAbbreviation;
    NSString *_yardAbbreviation;
    NSString *_milesAbbreviation;
    NSString *_metersAbbreviation;
    NSString *_kilometersAbbreviation;
    long long _grQuality;
    int _layoutCounter;
    _Bool _useLightText;
}

- (void).cxx_destruct;
- (void)_localizedDistanceStringsWithMeters:(unsigned int)arg1 imperial:(double)arg2 useFeet:(_Bool)arg3 inMetric:(_Bool)arg4 displaysYardsForShortDistances:(_Bool)arg5 strings:(id)arg6;
- (id)_scaleViewFormattedStringForInteger:(long long)arg1;
- (id)_scaleViewFormattedStringForFloat:(double)arg1;
- (id)_formattedStringForFloat:(double)arg1;
- (void)layoutSubviews;
- (void)_calculateSegments;
- (void)_updateSegmentStrokes;
- (void)didMoveToWindow;
@property(nonatomic) _Bool useLightText; // @dynamic useLightText;
@property(nonatomic) double distanceInMeters; // @dynamic distanceInMeters;
- (void)setFrame:(struct CGRect)arg1;
- (void)memoryWarning:(id)arg1;
- (void)updateLocale:(id)arg1;
- (void)_updateStrings;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MKScrollContainerView : UIView
{
}

@end

@interface MKSearchCompletion : NSObject
{
    id <GEOCompletionItem> _item;
    NSString *_sourceID;
    NSString *_localizedSectionHeader;
}

@property(copy, nonatomic) NSString *localizedSectionHeader; // @synthesize localizedSectionHeader=_localizedSectionHeader;
@property(copy, nonatomic) NSString *sourceID; // @synthesize sourceID=_sourceID;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
@property(readonly, nonatomic) MKMapItem *mapItem;
- (void)sendFeedback;
- (id)calloutTitle;
- (id)queryLine;
- (_Bool)getCoordinate:(CDStruct_c3b9c2ee *)arg1;
- (id)iconWithScale:(double)arg1;
- (id)highlightsForLine:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *displayLines;
- (id)initWithGeoCompletionItem:(id)arg1;
@property(readonly, nonatomic) id <GEOCompletionItem> geoCompletionItem;
- (void)applyToLegacySearch:(id)arg1;

@end

@interface MKSegmentedControlTabBarView : UIView <MKStackingViewControllerSelectorView>
{
    MKViewWithHairline *_separator;
    UIVisualEffectView *_blurView;
    _Bool _isBlurred;
    CDUnknownBlockType _didChangeSelectedSegmentIndex;
    UISegmentedControl *_segmentedControl;
}

@property(copy, nonatomic) CDUnknownBlockType didChangeSelectedSegmentIndex; // @synthesize didChangeSelectedSegmentIndex=_didChangeSelectedSegmentIndex;
@property(nonatomic) _Bool isBlurred; // @synthesize isBlurred=_isBlurred;
- (void).cxx_destruct;
- (void)_segmentSelectionDidChange;
@property(readonly, nonatomic) UISegmentedControl *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
- (void)setContentFromViewController:(id)arg1;
- (void)didMoveToWindow;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)updateSelectorView:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKSharedAttributionViewController : UITableViewController <MKStackingViewControllerPreferredSizeUse>
{
    NSAttributedString *_attribution;
    id <MKPlaceSharedAttributionDelegate> _delegate;
}

@property(nonatomic) __weak id <MKPlaceSharedAttributionDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSAttributedString *attribution; // @synthesize attribution=_attribution;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLayoutSubviews;
@property(readonly, nonatomic) _Bool requiresPreferredContentSizeInStackingView;
- (void)contentSizeDidChange;
- (void)viewDidLoad;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKSmallCalloutView : UIView <CalloutViewControllerProtocol>
{
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIView<_MKCalloutAccessoryView> *_leftView;
    UIView<_MKCalloutAccessoryView> *_rightView;
    UIView<_MKCalloutAccessoryView> *_externalLeftView;
    UIView<_MKCalloutAccessoryView> *_externalRightView;
    UIView<_MKCalloutAccessoryView> *_detailView;
    struct CGSize _preferredContentSize;
    double _maxWidth;
    _Bool _shouldPositionTitleForMapsTransitionMovingSideways;
    _MKSmallCalloutPassthroughButton *_maskedContainerView;
    UIView *_unmaskedContainerView;
    MKCalloutBackgroundView *_calloutBackgroundView;
    unsigned long long _mapDisplayStyle;
    UIView *_leftSpacerView;
    UIView *_rightSpacerView;
    NSMutableArray *_lastConstraints;
    _Bool _initialDetailViewPositioning;
    _Bool _initialLeftViewPositioning;
    _Bool _initialRightViewPositioning;
}

@property(nonatomic) double maximumWidth; // @synthesize maximumWidth=_maxWidth;
@property(nonatomic) unsigned long long mapDisplayStyle; // @synthesize mapDisplayStyle=_mapDisplayStyle;
@property(retain, nonatomic) MKCalloutBackgroundView *calloutBackgroundView; // @synthesize calloutBackgroundView=_calloutBackgroundView;
@property(readonly, nonatomic) struct CGSize _preferredContentSize; // @synthesize _preferredContentSize;
- (void).cxx_destruct;
- (void)_updateAccessoryViewStyles;
- (_Bool)canDisplayCompleteTitleWhenExpanded;
- (void)setDetailView:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIView *detailView;
- (void)setRightView:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftView:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIView *rightView;
@property(retain, nonatomic) UIView *leftView;
@property(copy, nonatomic) NSString *calloutSubtitle;
- (void)setCalloutSubtitle:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *calloutTitle;
- (void)updateConstraints;
- (void)_updatePreferredContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)beginMapsTransitionMovingSideways;
- (void)reset;
- (void)dealloc;
- (id)_subtitleLabel;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKSmallCalloutViewController : UIViewController <CalloutViewControllerProtocol>
{
    MKSmallCalloutView *_smallCalloutView;
    id <MKSmallCalloutViewControllerDelegate> _delegate;
}

+ (struct CGSize)defaultSize;
@property(nonatomic) __weak id <MKSmallCalloutViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)viewDidLoad;
@property(nonatomic) unsigned long long mapDisplayStyle;
@property(retain, nonatomic) MKCalloutBackgroundView *calloutBackgroundView;
- (_Bool)canDisplayCompleteTitleWhenExpanded;
- (void)setDetailView:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIView *detailView;
- (void)setRightView:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftView:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIView *rightView;
@property(retain, nonatomic) UIView *leftView;
@property(copy, nonatomic) NSString *calloutSubtitle;
- (void)setCalloutSubtitle:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *calloutTitle;
- (struct CGSize)preferredContentSize;
- (id)_smallCalloutView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)beginMapsTransitionMovingSideways;
- (void)loadView;
- (void)reset;
- (void)updatePreferredContentSize;
@property(nonatomic) double maximumWidth;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKStackingViewController : UIViewController <UIScrollViewDelegate>
{
    _MKStackView *_stackView;
    _MKStackingPlaceholderView *_headerPlaceholderView;
    _MKStackingPlaceholderView *_selectorPlaceholderView;
    _MKStackingContentView *_contentView;
    NSLayoutConstraint *_heightCompressionResistanceConstraint;
    NSLayoutConstraint *_heightHuggingConstraint;
    _Bool _isScrollingProgrammaticallyToViewController;
    UIScrollView *_scrollView;
    NSMapTable *_viewControllersToPreferredHeightConstraints;
    NSArray *_titleViewConstraints;
    NSMutableSet *_viewControllersWithObservedTitles;
    NSMapTable *_titleHeaderViewsByViewController;
    _Bool _willRelayoutForPreferredContentSizeChange;
    _Bool _isComputingInitialViewControllerPreferredHeight;
    UIView *_titleView;
    UIView *_headerView;
    UIView *_selectorView;
    NSArray *_viewControllers;
    UIViewController *_selectedViewController;
    id <MKStackingViewControllerDelegate> _stackingDelegate;
}

@property(nonatomic) __weak id <MKStackingViewControllerDelegate> stackingDelegate; // @synthesize stackingDelegate=_stackingDelegate;
@property(nonatomic) __weak UIViewController *selectedViewController; // @synthesize selectedViewController=_selectedViewController;
@property(copy, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
@property(retain, nonatomic) UIView *selectorView; // @synthesize selectorView=_selectorView;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) UIView *titleView; // @synthesize titleView=_titleView;
- (void).cxx_destruct;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_updateSelectedViewControllerAfterPositionChange;
- (void)performUserSelectionForViewControllerAtIndex:(unsigned long long)arg1;
- (void)_setSelectedViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setSelectedViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_updateSelectorView;
- (void)setSelectorViewNeedsUpdate;
- (void)_didScroll;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)_scrollToViewControllerAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_repositionNonstackedSubviews;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)updateViewConstraints;
- (double)_topLayoutGuide;
- (void)_removePreferredHeightConstraintFromViewController:(id)arg1;
- (void)_addPreferredHeightConstraintForViewControllerIfNeeded:(id)arg1;
- (void)_setPreferredHeight:(double)arg1 forViewController:(id)arg2;
- (void)preferredContentSizeDidChangeForChildContentContainer:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_tearDownExitingViewController:(id)arg1;
- (void)_setUpEnteringViewController:(id)arg1;
- (void)_updateStackViewSubviewsAndChildVCsEntering:(id)arg1 exiting:(id)arg2;
- (double)_fittingHeightForView:(id)arg1;
- (double)_titleHeight;
- (double)_selectorHeight;
- (double)_headerHeight;
- (void)_addTitleViewToHierarchyIfPossible;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKStarRatingAndLabelView : UIView
{
    MKStarRatingView *_starRatingView;
    UILabel *_reviewsLabel;
    NSString *_sourceName;
    unsigned long long _numberOfReviews;
    _Bool _displaysSourceOfReviews;
    NSArray *_reviewsLabelConstraints;
}

@property(retain, nonatomic) NSString *sourceName; // @synthesize sourceName=_sourceName;
@property(nonatomic) unsigned long long numberOfReviews; // @synthesize numberOfReviews=_numberOfReviews;
@property(readonly, nonatomic) UILabel *reviewsLabel; // @synthesize reviewsLabel=_reviewsLabel;
@property(readonly, nonatomic) MKStarRatingView *starRatingView; // @synthesize starRatingView=_starRatingView;
- (void).cxx_destruct;
- (id)viewForBaselineLayout;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)_updateFonts;
- (void)setDisplaysSourceOfReviews:(_Bool)arg1;
- (void)_mapkit_setCalloutTextColor:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;

@end

@interface MKStarRatingView : UIView
{
    double _rating;
    long long _numLevels;
    double _padding;
    _Bool _highlighted;
    UIImage *_fullStarImage;
    UIImage *_halfStarImage;
    UIImage *_emptyStarImage;
    UIImage *_fullStarHighlightedImage;
    UIImage *_halfStarHighlightedImage;
    UIImage *_emptyStarHighlightedImage;
    NSMutableArray *_ratingViews;
    long long _numReviews;
}

@property(retain, nonatomic) UIImage *emptyStarHighlightedImage; // @synthesize emptyStarHighlightedImage=_emptyStarHighlightedImage;
@property(retain, nonatomic) UIImage *halfStarHighlightedImage; // @synthesize halfStarHighlightedImage=_halfStarHighlightedImage;
@property(retain, nonatomic) UIImage *fullStarHighlightedImage; // @synthesize fullStarHighlightedImage=_fullStarHighlightedImage;
@property(retain, nonatomic) UIImage *emptyStarImage; // @synthesize emptyStarImage=_emptyStarImage;
@property(retain, nonatomic) UIImage *halfStarImage; // @synthesize halfStarImage=_halfStarImage;
@property(retain, nonatomic) UIImage *fullStarImage; // @synthesize fullStarImage=_fullStarImage;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) double rating; // @synthesize rating=_rating;
@property(nonatomic) long long numberOfRatingLevels; // @synthesize numberOfRatingLevels=_numLevels;
- (void).cxx_destruct;
- (void)setPadding:(double)arg1;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (void)_layoutStarViewsCreatingIfNeeded:(_Bool)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)_setStarStyle:(long long)arg1;
- (void)commonInit;
- (id)initWithStyle:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MKStarkCompassView : UIView <MKLocationManagerObserver>
{
    UIView *_contentsView;
    _Bool _monitoringCourse;
    UILabel *_label;
    MKLocationManager *_locationManager;
    int _compassPoint;
    double _heading;
}

@property(nonatomic) double heading; // @synthesize heading=_heading;
@property(nonatomic) int compassPoint; // @synthesize compassPoint=_compassPoint;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerDidReset:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_updateDisplayedHeadingWithHeading:(double)arg1;
- (void)didMoveToWindow;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)_startLocationUpdates;
- (void)_updateContents;
- (void)_updateStyling;
- (void)layoutSubviews;
- (void)_createSubviews;
- (void)dealloc;
- (id)initWithEffectiveBundleIdentifier:(id)arg1;
- (id)initWithSharedMKLocationManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MKSystemController : NSObject
{
}

+ (id)sharedInstance;
- (_Bool)overrideBlurStyle;
- (_Bool)openURL:(id)arg1 bundleIdentifier:(id)arg2;
- (_Bool)openURL:(id)arg1;
- (_Bool)shouldRateLimitSearchCompletions;
- (_Bool)supports3DImagery;
- (_Bool)supportsPitchAPI;
- (_Bool)supports3DMaps;
- (_Bool)isInternalInstall;
- (int)userInterfaceIdiom;
- (_Bool)isHiDPI;
- (struct CGSize)screenSize;
- (double)screenScale;
- (_Bool)isDevicePluggedIn;
- (_Bool)isWifiEnabled;

@end

__attribute__((visibility("hidden")))
@interface MKThreadContext : NSObject
{
    long long _CA_disableActionsCounter;
}

+ (id)currentContext;
- (void)_CA_setDisableActions:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKThrottledGate : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    int _maxAvailableTickets;
    double _availableTickets;
    double _refreshRate;
    NSMutableArray *_waitingJobs;
    VKTimer *_timer;
}

- (void).cxx_destruct;
- (_Bool)_dispatchWaitingJobsIfNecessary;
- (_Bool)_replenishAvailableJobsIfNecessary;
- (void)_timerFired:(id)arg1;
- (void)dispatch:(CDUnknownBlockType)arg1;
- (void)_ensureTimer;
- (id)description;
- (void)dealloc;
- (id)initWithMax:(int)arg1 refreshRate:(double)arg2 queue:(id)arg3;

@end

@interface MKTileOverlay : NSObject <MKOverlay>
{
    NSString *_URLTemplate;
    struct CGSize _tileSize;
    _Bool _geometryFlipped;
    long long _minimumZ;
    long long _maximumZ;
    _Bool _canReplaceMapContent;
    unsigned int _providerID;
    GEOTileCache *_tileCache;
}

@property(nonatomic) _Bool canReplaceMapContent; // @synthesize canReplaceMapContent=_canReplaceMapContent;
@property long long maximumZ; // @synthesize maximumZ=_maximumZ;
@property long long minimumZ; // @synthesize minimumZ=_minimumZ;
@property(getter=isGeometryFlipped) _Bool geometryFlipped; // @synthesize geometryFlipped=_geometryFlipped;
@property(readonly) NSString *URLTemplate; // @synthesize URLTemplate=_URLTemplate;
@property struct CGSize tileSize; // @synthesize tileSize=_tileSize;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_flushCaches;
- (id)_tilesInMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 contentScale:(double)arg3;
- (int)_zoomLevelForScale:(double)arg1;
- (void)_loadTile:(id)arg1 result:(CDUnknownBlockType)arg2;
- (struct _GEOTileKey)_keyForPath:(CDStruct_cbb88d5e)arg1;
- (void)loadTileAtPath:(CDStruct_cbb88d5e)arg1 result:(CDUnknownBlockType)arg2;
- (id)URLForTilePath:(CDStruct_cbb88d5e)arg1;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic) CDStruct_90e2a262 boundingMapRect;
- (void)dealloc;
- (id)initWithURLTemplate:(id)arg1;
- (id)init;
- (void)_assignProviderID;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

@interface MKTileOverlayRenderer : MKOverlayRenderer
{
}

- (void)reloadData;
- (void)drawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2 inContext:(struct CGContext *)arg3;
- (_Bool)canDrawMapRect:(CDStruct_90e2a262)arg1 zoomScale:(double)arg2;
- (id)initWithTileOverlay:(id)arg1;
- (id)initWithOverlay:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKTileOverlayRequester : GEOTileRequester
{
    _Bool _cancelled;
    NSMutableArray *_waiting;
    NSMutableSet *_running;
    NSMutableArray *_errors;
}

+ (void)unregisterOverlay:(unsigned int)arg1;
+ (unsigned int)registerOverlay:(id)arg1;
+ (unsigned char)tileProviderIdentifier;
- (void).cxx_destruct;
- (void)dealloc;
- (void)cancel;
- (_Bool)isRunning;
- (void)start;
- (void)_operationFailed:(id)arg1 error:(id)arg2;
- (void)_operationFinished:(id)arg1;
- (void)_cleanup;
- (void)_doWorkOrFinish;

@end

__attribute__((visibility("hidden")))
@interface MKTileOverlayRequesterOp : NSObject
{
    struct _GEOTileKey _key;
    MKTileOverlayRequester *_delegate;
    NSData *_data;
}

@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) __weak MKTileOverlayRequester *delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct _GEOTileKey key; // @synthesize key=_key;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)cancel;
- (void)start;

@end

__attribute__((visibility("hidden")))
@interface MKTileOverlayTile : NSObject
{
    CDStruct_cbb88d5e _path;
    CDStruct_02837cd9 _frame;
    double _scale;
    NSData *_image;
}

@property(retain, nonatomic) NSData *image; // @synthesize image=_image;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) CDStruct_90e2a262 frame; // @synthesize frame=_frame;
@property(nonatomic) CDStruct_cbb88d5e path; // @synthesize path=_path;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface MKTiltGestureRecognizer : UIPanGestureRecognizer
{
    UITouch *_touch1;
    UITouch *_touch2;
    struct CGPoint _initialTouch1Point;
    struct CGPoint _initialTouch2Point;
    double _initialDistance;
}

- (void).cxx_destruct;
- (void)reset;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (double)_distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (id)_activeTouchesForEvent:(id)arg1;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MKTrafficSupport : NSObject
{
}

+ (id)sharedTrafficSupport;
- (struct CGImage *)imageForIncidentType:(long long)arg1 contentScale:(double)arg2;
- (struct CGImage *)imageForGEOIncidentType:(int)arg1 contentScale:(double)arg2;
- (id)localizedSubtitleForStreet:(id)arg1 crossStreet:(id)arg2;
- (id)localizedTitleForIncidentType:(long long)arg1 laneType:(long long)arg2 laneCount:(unsigned long long)arg3;
- (id)localizedTitleForGEOIncidentType:(int)arg1 laneType:(int)arg2 laneCount:(unsigned long long)arg3;
- (long long)_convertType:(int)arg1;
- (void)setupTrafficIncidents;

@end

@interface MKURLSerializer : NSObject
{
}

- (id)mapItemsFromUrl:(id)arg1 options:(id *)arg2;
- (id)urlToPresentDirectionsFromMapItem:(id)arg1 toMapItem:(id)arg2 transportType:(unsigned long long)arg3 options:(id)arg4;
- (id)urlForDirectionsFromMapItem:(id)arg1 toMapItem:(id)arg2 transportType:(unsigned long long)arg3 options:(id)arg4;
- (id)_urlForDirectionsFromMapItem:(id)arg1 toMapItem:(id)arg2 transportType:(unsigned long long)arg3 options:(id)arg4 precision:(_Bool)arg5;
- (id)urlToPresentMapItems:(id)arg1 options:(id)arg2;
- (id)urlForOpeningMapItems:(id)arg1 options:(id)arg2;
- (id)_urlForOpeningMapItems:(id)arg1 options:(id)arg2 precision:(_Bool)arg3;

@end

@interface MKUserLocation : NSObject <MKAnnotation>
{
    MKUserLocationInternal *_internal;
    double _expectedCoordinateUpdateInterval;
    double _expectedHeadingUpdateInterval;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)_setAnnotationClass:(Class)arg1;
+ (id)title;
@property(nonatomic) double expectedHeadingUpdateInterval; // @synthesize expectedHeadingUpdateInterval=_expectedHeadingUpdateInterval;
@property(nonatomic) double expectedCoordinateUpdateInterval; // @synthesize expectedCoordinateUpdateInterval=_expectedCoordinateUpdateInterval;
- (void).cxx_destruct;
- (void)reset;
@property(readonly, nonatomic) NSString *shortDescription;
- (void)_updateCoordinate;
- (id)annotation;
@property(readonly, nonatomic) double headingDegrees;
@property(nonatomic) CDStruct_c3b9c2ee coordinate;
- (_Bool)isEqualToLocation:(id)arg1;
@property(readonly, nonatomic) double accuracy;
@property(retain, nonatomic) CLLocation *location;
@property(copy, nonatomic) NSString *subtitle;
- (void)setCourse:(double)arg1;
- (double)course;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) double timestamp;
@property(retain, nonatomic) CLHeading *heading;
@property(retain, nonatomic) CLLocation *predictedLocation;
@property(retain, nonatomic) CLLocation *fixedLocation;
@property(nonatomic, getter=isUpdating) _Bool updating;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKUserLocationAnnotation : NSObject <MKUserLocationAnnotation>
{
    CDStruct_2c43369c _coordinate;
    double _accuracy;
}

@property(nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
- (void)setCoordinate:(CDStruct_c3b9c2ee)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

__attribute__((visibility("hidden")))
@interface MKUserLocationAnnotationViewProxy : NSObject <VKPuckAnimatorTarget, VKTrackableAnnotationPresentation, VKRouteMatchedAnnotationPresentation>
{
    MKAnnotationView *_annotationView;
    NSHashTable *_presentationCoordinateObservers;
}

@property(nonatomic) __weak MKAnnotationView *annotationView; // @synthesize annotationView=_annotationView;
- (void).cxx_destruct;
- (void)removePresentationCoordinateChangedObserver:(id)arg1;
- (void)addPresentationCoordinateChangedObserver:(id)arg1;
@property(retain, nonatomic) GEORouteMatch *routeMatch;
@property(nonatomic, getter=isTracking) _Bool tracking;
- (void)setAnimatingToCoordinate:(_Bool)arg1;
@property(nonatomic) double presentationCourse;
@property(nonatomic) CDStruct_c3b9c2ee presentationCoordinate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKUserLocationInternal : NSObject
{
    CLLocation *location;
    CLLocation *fixedLocation;
    CLLocation *predictedLocation;
    CLHeading *heading;
    NSString *title;
    NSString *subtitle;
    id <MKUserLocationAnnotation> _annotation;
    double timestamp;
    _Bool updating;
    double course;
    id <MKAnnotation> annotation;
}

@property(nonatomic) double course; // @synthesize course;
@property(retain, nonatomic) NSString *subtitle; // @synthesize subtitle;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(nonatomic) double timestamp; // @synthesize timestamp;
@property(readonly, nonatomic) id <MKAnnotation> annotation; // @synthesize annotation;
@property(retain, nonatomic) CLHeading *heading; // @synthesize heading;
@property(retain, nonatomic) CLLocation *predictedLocation; // @synthesize predictedLocation;
@property(retain, nonatomic) CLLocation *location; // @synthesize location;
@property(retain, nonatomic) CLLocation *fixedLocation; // @synthesize fixedLocation;
@property(nonatomic, getter=isUpdating) _Bool updating; // @synthesize updating;
- (void).cxx_destruct;

@end

@interface MKUserTrackingBarButtonItem : UIBarButtonItem <MKUserTrackingButtonTarget>
{
    _Bool _hasCustomAssociatedView;
    UIButton *_customButton;
    _MKUserTrackingButtonController *_controller;
    _MKUserTrackingButton *_userTrackingButton;
    _Bool _isLegacy;
    UIImage *_trackingEmptyImage;
    UIImage *_trackingNoneImage;
    UIImage *_trackingFollowImage;
    UIImage *_trackingFollowWithHeadingImage;
    UIToolbar *_toolbar;
    UINavigationBar *_navigationBar;
    UIView *_associatedView;
}

+ (Class)_activityIndicatorClass;
@property(retain, nonatomic) UIView *_associatedView; // @synthesize _associatedView;
@property(retain, nonatomic) UINavigationBar *_navigationBar; // @synthesize _navigationBar;
@property(retain, nonatomic) UIToolbar *_toolbar; // @synthesize _toolbar;
- (void).cxx_destruct;
- (void)_goToNextMode:(id)arg1;
@property(nonatomic, setter=_setState:) long long _state;
- (void)_updateForState:(long long)arg1;
- (_Bool)_isHighlightedForState:(long long)arg1;
- (long long)_styleForState:(long long)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)createViewForNavigationItem:(id)arg1;
- (id)createViewForToolbar:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
@property(retain, nonatomic) MKMapView *mapView;
@property(retain, nonatomic, setter=_setUserTrackingView:) id <MKUserTrackingView> _userTrackingView;
- (void)_repositionViews;
- (_Bool)_isInMiniBar;
- (long long)_activityIndicatorStyle;
- (id)_trackingFollowWithHeadingImage;
- (id)_trackingFollowImage;
- (id)_trackingNoneImage;
- (id)_trackingEmptyImage;
- (void)_setLandscapeImagePhone:(id)arg1 forUserTrackingMode:(long long)arg2;
- (id)_landscapeImagePhoneForUserTrackingMode:(long long)arg1;
- (void)_setImage:(id)arg1 forUserTrackingMode:(long long)arg2;
- (id)_imageForUserTrackingMode:(long long)arg1;
- (id)_imageForState:(long long)arg1 controlState:(unsigned long long)arg2;
@property(nonatomic, getter=_selectsWhenTracking, setter=_setSelectsWhenTracking:) _Bool selectsWhenTracking;
- (void)dealloc;
- (id)init;
- (id)initWithMapView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface MKVariableDelayTapRecognizer : UITapGestureRecognizer
{
    double originalMaximumIntervalBetweenSuccessiveTaps;
    id <MKVariableDelayTapRecognizerDelegate> tapDelayDelegate;
}

@property(nonatomic) __weak id <MKVariableDelayTapRecognizerDelegate> tapDelayDelegate; // @synthesize tapDelayDelegate;
- (void).cxx_destruct;
- (void)reset;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;

@end

@interface MKViewWithHairline : UIView
{
    UIView *_bottomHairline;
    UIView *_topHairline;
    UIColor *_hairlineColor;
    double _leftHairlineInset;
}

@property(nonatomic) double leftHairlineInset; // @synthesize leftHairlineInset=_leftHairlineInset;
@property(retain, nonatomic) UIColor *hairlineColor; // @synthesize hairlineColor=_hairlineColor;
- (void).cxx_destruct;
- (void)layoutSubviews;
@property(nonatomic, getter=isBottomHairlineHidden) _Bool bottomHairlineHidden;
@property(nonatomic, getter=isTopHairlineHidden) _Bool topHairlineHidden;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MKYelpDeal : NSObject <NSCopying>
{
    NSString *dealID;
    NSString *title;
    NSDate *startDate;
    NSDate *endDate;
    NSURL *url;
}

+ (id)dealWithJSONObject:(id)arg1;
@property(retain, nonatomic) NSURL *url; // @synthesize url;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(retain, nonatomic) NSString *dealID; // @synthesize dealID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSArray (MKAdditions)
- (unsigned long long)_mapkit_indexForObject:(id)arg1 usingSortFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (id)_mapkit_arrayByRemovingObject:(id)arg1;
@end

@interface NSArray (MKOverlayAdditions)
- (void)_mapkit_orientableAnnotationViewsFixed:(id *)arg1 notFixed:(id *)arg2;
@end

@interface NSAttributedString (MKAttributedFormat)
+ (id)_mapkit_attributedStringWithBindingFormat:(id)arg1 replacements:(id)arg2 attributes:(id)arg3;
- (id)_mapkit_attributedStringByApplyingBindingFormatReplacements:(id)arg1 defaultReplacementAttributes:(id)arg2;
- (id)_mapkit_attributedStringByApplyingBindingFormatReplacements:(id)arg1;
@end

@interface NSBundle (MKAdditions)
+ (id)_mapkitBundle;
@end

@interface NSCalendar (MKExtras)
- (_Bool)_maps_isDateInToday:(id)arg1 inTimeZone:(id)arg2;
- (id)_maps_offsetDate:(id)arg1 toTimeZone:(id)arg2;
@end

@interface NSCalendar (MapKitExtension)
+ (id)_mapkit_gregorianCalendar;
@end

@interface NSDate (BusinessHourExtras)
- (_Bool)isWholeHour;
@end

@interface NSDictionary (MKAdditions)
- (_Bool)_mapkit_writeBinaryPlist:(id)arg1 atomically:(_Bool)arg2;
@end

@interface NSDictionary (MKAppStoreDictionary)
@property(readonly, nonatomic) _Bool isInstalled;
@property(readonly, nonatomic) _Bool isOfficialApp;
@property(readonly, nonatomic) NSArray *categories;
@property(readonly, nonatomic) NSArray *transitModeKeys;
- (id)bestImageURLForWidth:(double)arg1;
@property(readonly, nonatomic) NSString *priceFormatted;
- (id)_defaultOffer;
@property(readonly, nonatomic) NSString *url;
@property(readonly, nonatomic) unsigned long long ratingCount;
@property(readonly, nonatomic) float averageRating;
@property(readonly, nonatomic) NSNumber *storeID;
- (id)_ratingData;
@property(readonly, nonatomic) NSString *creator;
@property(readonly, nonatomic) NSString *bundleId;
@property(readonly, nonatomic) NSString *title;
@end

@interface NSError (MKErrorInternal)
- (id)_mapkit_error;
@end

@interface NSError (MKErrorPrivate)
- (long long)_mapkit_underlyingGEOError;
- (long long)_mapkit_directionsErrorCode;
- (_Bool)_mapkit_isDirectionsError;
- (id)_mapkit_directionsErrorWithDetail:(CDStruct_c55e649d *)arg1;
@end

@interface NSError (MapKitAdditions)
@property(readonly, retain, nonatomic) NSURL *_mapkit_locationErrorSettingsURL;
@property(readonly, nonatomic, getter=_mapkit_isCLErrorNetwork) _Bool _mapkit_CLErrorNetwork;
@property(readonly, nonatomic, getter=_mapkit_isCLHeadingFailure) _Bool _mapkit_CLHeadingFailure;
@property(readonly, nonatomic, getter=_mapkit_isCLLocationUnknown) _Bool _mapkit_CLLocationUnknown;
@property(readonly, nonatomic, getter=_mapkit_isCLDenied) _Bool _mapkit_CLDenied;
@end

@interface NSHashTable (MKAdditions)
- (void)_mapkit_removeObjects:(id)arg1;
@end

@interface NSInvocation (MKAdditions)
+ (id)_mapkit_invocationWithSelector:(SEL)arg1 target:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
+ (id)_mapkit_invocationWithSelector:(SEL)arg1 target:(id)arg2;
@end

@interface NSKeyedUnarchiver (MKAdditions)
+ (id)_mapkit_safeUnarchiveObjectWithData:(id)arg1;
@end

@interface NSLocale (MKLocale)
+ (void)_mapkit_overrideDistanceUnit:(long long)arg1;
+ (void)_mapkit_overrideGuidanceUnit:(long long)arg1;
+ (id)_localeOverridesForLocaleWithIdentifier:(id)arg1;
- (_Bool)_mapkit_useYardsForShortDistances;
- (_Bool)_mapkit_distanceUsesMetricSystem;
- (_Bool)_mapkit_guidanceUsesMetricSystem;
- (id)_mapkit_objectForKey:(id)arg1;
@end

@interface NSMutableArray (MKLocatableAdditions)
- (void)_mapkit_makeObjectsPerformSelector:(SEL)arg1;
- (void)_mapkit_sortUsingDistanceFromCoordinate:(CDStruct_c3b9c2ee)arg1 ascending:(_Bool)arg2;
- (void)_mapkit_sortUsingDistanceFromCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_mapkit_sortUsingLongitudeAscending:(_Bool)arg1;
- (void)_mapkit_sortUsingLongitude;
- (void)_mapkit_sortUsingLatitudeAscending:(_Bool)arg1;
- (void)_mapkit_sortUsingLatitude;
- (id)_mapkit_popLastObject;
@end

@interface NSMutableArray (MKSortedAnnotationsInsertion)
- (unsigned long long)_mapkit_insertSortedAnnotationView:(id)arg1 reverse:(_Bool)arg2;
- (unsigned long long)_mapkit_insertSortedAnnotationView:(id)arg1;
@end

@interface NSNumber (CGFloat)
+ (id)numberWithCGFloat:(double)arg1;
- (double)cgFloatValue;
- (id)initWithCGFloat:(double)arg1;
@end

@interface NSObject (MKAbstractAnnotationContainerViewExtras)
- (_Bool)_mapkit_isInternalAnnotationView;
- (_Bool)_mapkit_isInternalAnnotation;
- (_Bool)_mapkit_internalAnnotationAllowsCustomView;
@end

@interface NSRunLoop (MKAdditions)
+ (void)set_mapkit_networkIORunLoop:(id)arg1;
+ (id)_mapkit_networkIORunLoop;
@end

@interface NSString (CGFloat)
- (double)_mapkit_cgFloatValue;
@end

@interface NSString (HTMLEncoding)
- (id)_mapkit_sanitizedStringForDisplayInHTML;
- (id)_mapkit_stringByReplacingNewLinesWithString:(id)arg1;
- (id)_mapkit_stringByEscapingHTML;
@end

@interface NSString (MKAdditions)
+ (id)_mapkit_formattedStringForCoordinate:(CDStruct_c3b9c2ee)arg1;
+ (id)_mapkit_voiceOverLocalizedDistanceStringWithMeters:(unsigned int)arg1 inMetric:(_Bool)arg2 displaysYardsForShortDistances:(_Bool)arg3 includeTrip:(_Bool)arg4;
+ (id)_mapkit_localizedDistanceStringWithMeters:(unsigned int)arg1 inMetric:(_Bool)arg2 displaysYardsForShortDistances:(_Bool)arg3 includeTrip:(_Bool)arg4;
+ (id)_mapkit_formattedStringForFloatingPointNumber:(id)arg1;
+ (id)_mapkit_formattedStringForFloat:(double)arg1;
+ (id)_mapkit_formattedStringForInteger:(long long)arg1;
- (_Bool)_mapkit_isCJK;
@end

@interface NSThread (MKAdditions)
+ (void)_mapkit_runThread:(id)arg1;
+ (id)_mapkit_networkIOThread;
@end

@interface NSValue (MKAdditions)
- (CDStruct_90e2a262)MKMapRectValue;
- (id)_mapkit_initWithMKMapRect:(CDStruct_90e2a262)arg1;
- (CDStruct_46f4fb6f)_mapkit_zoomRegionValue;
- (id)_mapkit_initWithZoomRegion:(CDStruct_46f4fb6f)arg1;
- (id)_mapkit_initWithCGRect:(struct CGRect)arg1;
- (struct CGRect)CADoubleRectValue;
- (id)_mapkit_initWithCADoubleRect:(struct CGRect)arg1;
- (struct CGPoint)CADoublePointValue;
- (id)_mapkit_initWithCADoublePoint:(struct CGPoint)arg1;
- (id)_mapkit_initWithCGPoint:(struct CGPoint)arg1;
@end

@interface NSValue (MKCAExtrasAdditions)
+ (id)_mapkit_valueWithCGAffineTransform:(struct CGAffineTransform)arg1;
+ (id)_mapkit_valueWithCGPoint:(struct CGPoint)arg1;
- (struct CGAffineTransform)_mapkit_CGAffineTransformValue;
- (struct CGPoint)_mapkit_CGPointValue;
- (struct CGRect)_mapkit_CGRectValue;
@end

@interface NSValue (NSValueMapKitGeometryExtensions)
+ (id)valueWithMKCoordinateSpan:(CDStruct_c3b9c2ee)arg1;
+ (id)valueWithMKCoordinate:(CDStruct_c3b9c2ee)arg1;
@property(readonly) CDStruct_c3b9c2ee MKCoordinateSpanValue;
@property(readonly) CDStruct_c3b9c2ee MKCoordinateValue;
@end

@interface UIButton (MapKitAccessoryButtonAdditions)
- (id)_mapkit_accessoryControlToExtendWithCallout;
@end

@interface UICalloutView (MKAdditions)
- (_Bool)isExpanded;
@end

@interface UIColor (MKAdditions)
+ (id)_mapkit_userLocationAccuracyRingFillColor;
+ (id)_mapkit_userLocationAccuracyRingStrokeColorSatellite;
+ (id)_mapkit_userLocationAccuracyRingStrokeColor;
- (id)_mapkit_blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (_Bool)_mapkit_getRed:(double *)arg1 green:(double *)arg2 blue:(double *)arg3 alpha:(double *)arg4;
- (_Bool)_mapkit_isWhite;
@end

@interface UIFont (MKCrossPlatformOperations)
- (double)_mapkit_lineHeight;
@end

@interface UIImage (MapKitExtras)
+ (id)_mapkit_imageNamed:(id)arg1;
- (id)_mapkit_dimmedImage;
@end

@interface UIScreen (MKBasicMapViewAdditions)
- (id)_mapkit_display;
@end

@interface UISegmentedControl (Shared)
- (void)_mk_setItems:(id)arg1;
@end

@interface UITableView (CrossPlatformDefinitions)
- (id)_mapkit_dequeueReusableCellWithIdentifier:(id)arg1;
@end

@interface UIView (MKAdditions)
+ (id)_mapkit_currentAnimationTimingFunction;
+ (_Bool)_mapkit_shouldAdoptImplicitAnimationParameters;
@end

@interface UIView (MKCrossPlatformOperations)
- (_Bool)_mapkit_YCoordinate:(double)arg1 liesInDirection:(long long)arg2 startingFromYCoordinate:(double)arg3;
- (double)_mapkit_YCoordinateAtDistance:(double)arg1 inDirection:(long long)arg2 fromYCoordinate:(double)arg3;
- (struct CGRect)_mapkit_rectWithSize:(struct CGSize)arg1 XCoordinate:(double)arg2 atDistance:(double)arg3 inDirection:(long long)arg4 fromEdge:(long long)arg5;
- (double)_mapkit_YCoordinateAtDistance:(double)arg1 inDirection:(long long)arg2 fromEdge:(long long)arg3;
- (void)_mapkit_setContentCompressionResistancePriority:(float)arg1 forAxis:(long long)arg2;
- (struct CGSize)_mapkit_sizeThatFits:(struct CGSize)arg1;
- (void)_mapkit_sizeToFit;
- (void)_mapkit_insertSubviewBelowAllOtherSubviews:(id)arg1;
- (void)_mapKit_setNeedsDisplay;
- (struct CGSize)_mapkit_fittingSize;
- (void)_mapkit_layoutIfNeeded;
- (void)_mapkit_setNeedsLayout;
- (void)_mapkit_setNeedsUpdateConstraints;
@end

@interface UIView (MKStackingViewControllerSizableView) <MKStackingViewControllerSizableView>

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIView (MapKitAccessoryButtonAdditions)
- (id)_mapkit_accessoryControlToExtendWithCallout;
@end

@interface UIView (MapKitExtras)
@property(readonly, nonatomic) struct CGRect _mapkit_doubleFrame;
- (unsigned long long)_mapkit_countOfSet:(id)arg1 minusSubset:(id)arg2;
@property(readonly, retain, nonatomic) MKMapView *_mapKit_mapView;
@property(readonly, retain, nonatomic) CALayer *_mapkit_currentLayer;
@end

@interface VKAnnotationMarker (MapKitAdditions) <MKCalloutSource>
- (void)_setHiddenForOffscreen:(_Bool)arg1;
@property(retain, nonatomic) UIView *detailCalloutAccessoryView;
@property(retain, nonatomic) UIView *rightCalloutAccessoryView;
@property(retain, nonatomic) UIView *leftCalloutAccessoryView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@end

@interface VKLabelMarker (MapKitAdditions) <MKCalloutSource>
@property(retain, nonatomic) UIView *detailCalloutAccessoryView;
@property(retain, nonatomic) UIView *rightCalloutAccessoryView;
@property(retain, nonatomic) UIView *leftCalloutAccessoryView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@end

@interface VKMapSnapshotCreator (MapKitAdditions)
- (void)_mapkit_configureFromDefaults;
@end

@interface VKMapView (MapKitAdditions)
- (void)_mapkit_configureFromDefaults:(_Bool)arg1;
@end

__attribute__((visibility("hidden")))
@interface _MKAnnotationViewAnchor : VKAnchorWrapper
{
    MKAnnotationView *_annotationView;
}

@property(nonatomic) __weak MKAnnotationView *annotationView; // @synthesize annotationView=_annotationView;
- (void).cxx_destruct;
- (CDStruct_c3b9c2ee)coordinate;

@end

__attribute__((visibility("hidden")))
@interface _MKAppImageManagerContainer : NSObject
{
    CDUnknownBlockType _completionHandler;
    NSMutableData *_data;
    NSString *_urlString;
}

@property(copy, nonatomic) NSString *urlString; // @synthesize urlString=_urlString;
@property(retain, nonatomic) NSMutableData *data; // @synthesize data=_data;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface _MKAspectFillImageLayer : CALayer
{
    UIImage *_image;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _MKCalloutAccessoryWrapperView : UIView <_MKCalloutAccessoryView>
{
    UIView<_MKCalloutAccessoryView> *_view;
}

- (void).cxx_destruct;
- (void)_mapkit_setCalloutTextColor:(id)arg1;
- (void)_mapkit_setCalloutBackgroundColor:(id)arg1;
- (id)_mapkit_accessoryControlToExtendWithCallout;
- (struct CGSize)intrinsicContentSize;
- (id)initWithView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _MKCalloutBackgroundMaskView : UIView
{
    UIView *_baseView;
    UIImageView *_topArrow;
    UIImageView *_bottomArrow;
    UIImageView *_leftArrow;
    UIImageView *_rightArrow;
    UIView *_currentArrowContainer;
}

@property(readonly, nonatomic) UIView *currentArrowContainer; // @synthesize currentArrowContainer=_currentArrowContainer;
@property(readonly, nonatomic) UIImageView *rightArrow; // @synthesize rightArrow=_rightArrow;
@property(readonly, nonatomic) UIImageView *leftArrow; // @synthesize leftArrow=_leftArrow;
@property(readonly, nonatomic) UIImageView *bottomArrow; // @synthesize bottomArrow=_bottomArrow;
@property(readonly, nonatomic) UIImageView *topArrow; // @synthesize topArrow=_topArrow;
@property(readonly, nonatomic) UIView *baseView; // @synthesize baseView=_baseView;
- (void).cxx_destruct;
- (void)_removeArrows;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_setupViews;

@end

__attribute__((visibility("hidden")))
@interface _MKEnvironmentLabel : UIView
{
    UILabel *_label;
    CAShapeLayer *_roundedCorner;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *text;
- (void)layoutSubviews;
- (void)sizeToFit;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKGemUserLocationView : MKUserLocationView
{
    CALayer *_gemLayer;
}

- (void).cxx_destruct;
- (void)_setMapType:(unsigned long long)arg1;
- (void)_updateLayers;
- (struct UIImage *)staleImage;
- (struct UIImage *)normalImage;
- (id)_baseLayer;
- (id)_pulseAnimation;
- (id)_pulseLayer;
- (struct UIImage *)_headingImageForAccuracy:(double)arg1 anchorPoint:(struct CGPoint *)arg2;
- (void)_setupLayers;
- (id)initWithAnnotation:(id)arg1 reuseIdentifier:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _MKJunctionElement : NSObject
{
    struct CGPoint _leftBasePoint;
    struct CGPoint _rightBasePoint;
    double _angle;
}

@property double angle; // @synthesize angle=_angle;
@property struct CGPoint rightBasePoint; // @synthesize rightBasePoint=_rightBasePoint;
@property struct CGPoint leftBasePoint; // @synthesize leftBasePoint=_leftBasePoint;
- (struct CGPoint)rightEdgePointAtDistanceFromBase:(double)arg1;
- (struct CGPoint)leftEdgePointAtDistanceFromBase:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKLegendString : CALayer
{
    NSAttributedString *string;
    double halfWidth;
}

@property(nonatomic) double halfWidth; // @synthesize halfWidth;
@property(retain, nonatomic) NSAttributedString *string; // @synthesize string;
- (void).cxx_destruct;
- (id)actionForKey:(id)arg1;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)init;

@end

@interface _MKLocalSearchMerchantParameters : NSObject <NSCopying>
{
    NSString *_merchantCode;
    NSString *_paymentNetwork;
    NSDate *_transactionDate;
    CLLocation *_transactionLocation;
}

@property(retain, nonatomic) CLLocation *transactionLocation; // @synthesize transactionLocation=_transactionLocation;
@property(retain, nonatomic) NSDate *transactionDate; // @synthesize transactionDate=_transactionDate;
@property(copy, nonatomic) NSString *paymentNetwork; // @synthesize paymentNetwork=_paymentNetwork;
@property(copy, nonatomic) NSString *merchantCode; // @synthesize merchantCode=_merchantCode;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface _MKLocationShifter : NSObject
{
    GEOLocationShifter *_locationShifter;
}

- (void).cxx_destruct;
- (void)_prepareShiftForLocation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2 withShiftRequestBlock:(CDUnknownBlockType)arg3;
- (void)shiftLocation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2 callbackQueue:(id)arg3;
- (void)shiftLocation:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isLocationShiftEnabled) _Bool locationShiftEnabled;
- (id)init;

@end

@interface _MKMapItemAttribution : NSObject
{
    GEOMapItemAttribution *_geoAttribution;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool requiresAttributionInCallout;
- (id)providerSnippetLogoImageForScale:(double)arg1;
- (id)providerLogoImageForScale:(double)arg1;
@property(readonly, nonatomic) NSArray *attributionApps;
@property(readonly, nonatomic) NSArray *attributionURLs;
@property(readonly, nonatomic) NSString *providerName;
- (id)initWithGEOMapItemAttribution:(id)arg1;

@end

@interface _MKMapItemPhotosAttribution : _MKMapItemAttribution
{
    GEOMapItemPhotosAttribution *_geoPhotosAttribution;
}

- (void).cxx_destruct;
- (id)urlsForPhotoWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *addPhotoURLs;
- (id)initWithGEOMapItemAttribution:(id)arg1;

@end

@interface _MKMapItemPlaceAttribution : _MKMapItemAttribution
{
    GEOMapItemPlaceAttribution *_geoPlaceAttribution;
}

- (void).cxx_destruct;
- (id)urlsForDealWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *checkInURLs;
- (id)initWithGEOMapItemAttribution:(id)arg1;

@end

@interface _MKMapItemReviewsAttribution : _MKMapItemAttribution
{
    GEOMapItemReviewsAttribution *_geoReviewsAttribution;
}

- (void).cxx_destruct;
- (id)urlsForSelectedItemWithItems:(id)arg1;
- (id)urlsForReviewWithIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *addReviewURLs;
- (id)initWithGEOMapItemAttribution:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKMapLayerHostingLayer : CALayer
{
    _MKMapLayerHostingView *_hostView;
}

@property(nonatomic) __weak _MKMapLayerHostingView *hostView; // @synthesize hostView=_hostView;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface _MKMapLayerHostingView : UIView
{
    VKMapView *_mapView;
}

+ (Class)layerClass;
@property(retain, nonatomic) VKMapView *mapView; // @synthesize mapView=_mapView;
- (void).cxx_destruct;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKNearbyAppsFlowLayout : UICollectionViewFlowLayout
{
    _Bool _snapsToItemBoundaries;
    _Bool _snapsToItemCenters;
}

+ (double)snapToBoundariesDecelerationRate;
@property(nonatomic) _Bool snapsToItemCenters; // @synthesize snapsToItemCenters=_snapsToItemCenters;
@property(nonatomic) _Bool snapsToItemBoundaries; // @synthesize snapsToItemBoundaries=_snapsToItemBoundaries;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _MKNoFullLengthBottomSeparatorAttributionCell : MKPlaceAttributionCell
{
}

- (void)_setShouldHaveFullLengthBottomSeparator:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKPlaceAction : NSObject
{
    NSString *_title;
    SEL _action;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;

@end

__attribute__((visibility("hidden")))
@interface _MKPlaceActionCell : UITableViewCell
{
    UILabel *_titleLabel;
    NSMutableArray *_scaledConstraints;
}

+ (double)intrinsicContentHeight;
+ (id)fontForLabel;
@property(retain, nonatomic) NSMutableArray *scaledConstraints; // @synthesize scaledConstraints=_scaledConstraints;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)tintColorDidChange;
- (void)updateConstraints;
- (void)contentSizeDidChange;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _MKPlaceAttributionLabel : NSObject
{
    UIImage *image;
    double textBaselineOffset;
    double imageBaselineOffset;
    NSString *imagePlaceholder;
}

@property(retain) NSString *imagePlaceholder; // @synthesize imagePlaceholder;
@property double imageBaselineOffset; // @synthesize imageBaselineOffset;
@property double textBaselineOffset; // @synthesize textBaselineOffset;
@property(retain) UIImage *image; // @synthesize image;
- (void).cxx_destruct;
- (id)attributionWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKPlacePhotosCell : UICollectionViewCell
{
}

@property(readonly, nonatomic) UIImageView *imageView;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKPlacePhotosCollectionView : UICollectionView
{
}

- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _MKPlacePhotosCollectionViewCell : UITableViewCell
{
    _MKPlacePhotosCollectionView *_photoGrid;
}

+ (id)reuseIdentifier;
@property(readonly, nonatomic) _MKPlacePhotosCollectionView *photoGrid; // @synthesize photoGrid=_photoGrid;
- (void).cxx_destruct;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _MKPlaceViewController : MKStackingViewController <MKStackingViewControllerDelegate, MKActivityViewControllerDelegate, ABContactViewControllerDelegate, ABNewPersonViewControllerDelegate, ABPeoplePickerNavigationControllerDelegate, SKProductPageViewControllerDelegate, MKPlaceNearbyAppsViewControllerDelegate, MKPlaceSharedAttributionDelegate, MKPlaceHeaderViewDelegate, MKPlaceCardPhotosControllerDelegate, MKPlaceCardReviewsControllerDelegate, MKPlaceInfoViewControllerDelegate, MKPlaceActionsViewControllerDelegate>
{
    MKPlaceInfoViewController *_infoViewController;
    MKPlaceActionsViewController *_actionsViewController;
    UITapGestureRecognizer *_flyoverTourTapRecognizer;
    _Bool _isSearchingForNearbyApps;
    SKProductPageViewController *_storePageViewController;
    NSArray *_storeItems;
    void *_addressBook;
    void *_originalContactRecordCopy;
    NSMapTable *_additionalViewControllers;
    _Bool _overrideDefaultShowRAP;
    _Bool _hasCheckedDistanceAvailability;
    _Bool _showEditButton;
    _Bool _hideInlineMap;
    _Bool _showInlineMapInHeader;
    _Bool _hideDirectionsButtons;
    _Bool _showContactActions;
    _Bool _showTitleBar;
    _Bool _showShareActionsButton;
    _Bool _showRemovePin;
    _Bool _showReportAProblem;
    _Bool _disableReportAProblem;
    _Bool _showRerouting;
    _Bool _showNearbyApps;
    _Bool _showFlyoverTour;
    _Bool _showCreateReminder;
    _Bool _showOpenInSkyline;
    _Bool _showSimulateLocation;
    NSString *_headerTitle;
    MKPlaceHeaderView *_placeHeaderView;
    MKSegmentedControlTabBarView *_tabBar;
    MKDistanceDetailProvider *_distanceMonitor;
    MKMapItem *_mapItem;
    CNContact *_contact;
    CNContact *_originalContact;
    id <_MKPlaceViewControllerDelegate> _placeViewControllerDelegate;
    double _headerHeight;
    MKPlaceNearbyAppsMetricsCoordinator *_metricsCoordinator;
    ABPeoplePickerNavigationController *_contactsNavigationController;
}

@property(nonatomic) __weak ABPeoplePickerNavigationController *contactsNavigationController; // @synthesize contactsNavigationController=_contactsNavigationController;
@property(nonatomic) _Bool showSimulateLocation; // @synthesize showSimulateLocation=_showSimulateLocation;
@property(nonatomic) _Bool showOpenInSkyline; // @synthesize showOpenInSkyline=_showOpenInSkyline;
@property(nonatomic) _Bool showCreateReminder; // @synthesize showCreateReminder=_showCreateReminder;
@property(nonatomic) _Bool showFlyoverTour; // @synthesize showFlyoverTour=_showFlyoverTour;
@property(nonatomic) _Bool showNearbyApps; // @synthesize showNearbyApps=_showNearbyApps;
@property(nonatomic) _Bool showRerouting; // @synthesize showRerouting=_showRerouting;
@property(nonatomic) double headerHeight; // @synthesize headerHeight=_headerHeight;
@property(nonatomic) _Bool disableReportAProblem; // @synthesize disableReportAProblem=_disableReportAProblem;
@property(nonatomic) _Bool showRemovePin; // @synthesize showRemovePin=_showRemovePin;
@property(nonatomic) _Bool showShareActionsButton; // @synthesize showShareActionsButton=_showShareActionsButton;
@property(nonatomic) _Bool showTitleBar; // @synthesize showTitleBar=_showTitleBar;
@property(nonatomic) _Bool showContactActions; // @synthesize showContactActions=_showContactActions;
@property(nonatomic) _Bool hideDirectionsButtons; // @synthesize hideDirectionsButtons=_hideDirectionsButtons;
@property(nonatomic) _Bool showInlineMapInHeader; // @synthesize showInlineMapInHeader=_showInlineMapInHeader;
@property(nonatomic) _Bool hideInlineMap; // @synthesize hideInlineMap=_hideInlineMap;
@property(nonatomic) _Bool showEditButton; // @synthesize showEditButton=_showEditButton;
@property(nonatomic) __weak id <_MKPlaceViewControllerDelegate> placeViewControllerDelegate; // @synthesize placeViewControllerDelegate=_placeViewControllerDelegate;
@property(retain, nonatomic) CNContact *originalContact; // @synthesize originalContact=_originalContact;
@property(readonly, nonatomic) CNContact *contact; // @synthesize contact=_contact;
@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(nonatomic) _Bool hasCheckedDistanceAvailability; // @synthesize hasCheckedDistanceAvailability=_hasCheckedDistanceAvailability;
@property(retain, nonatomic) MKDistanceDetailProvider *distanceMonitor; // @synthesize distanceMonitor=_distanceMonitor;
@property(retain, nonatomic) MKSegmentedControlTabBarView *tabBar; // @synthesize tabBar=_tabBar;
@property(retain, nonatomic) MKPlaceHeaderView *placeHeaderView; // @synthesize placeHeaderView=_placeHeaderView;
@property(copy, nonatomic) NSString *headerTitle; // @synthesize headerTitle=_headerTitle;
- (void).cxx_destruct;
- (void)_openAppWithBundleID:(id)arg1;
- (void)_displayAppWithMetadata:(id)arg1;
- (void)nearbyAppsController:(id)arg1 showStorePageWithURL:(id)arg2 storeID:(id)arg3;
- (void)nearbyAppsController:(id)arg1 openAppWithBundleID:(id)arg2 storeID:(id)arg3;
@property(readonly, nonatomic) MKPlaceNearbyAppsMetricsCoordinator *metricsCoordinator; // @synthesize metricsCoordinator=_metricsCoordinator;
- (void)_findNearbyAppsAtCoordinate:(CDStruct_c3b9c2ee)arg1;
- (void)_searchForNearbyApps;
- (void)_searchForNearbyAppsIfNecessary;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)newPersonViewController:(id)arg1 didCompleteWithNewPerson:(void *)arg2;
- (void)contactViewController:(id)arg1 didDeleteContact:(id)arg2;
- (void)contactViewController:(id)arg1 didCompleteWithContact:(id)arg2;
- (_Bool)_removeMapsDataFromContactWithRecordID:(int)arg1;
- (void)actionsViewControllerSimulateLocation:(id)arg1;
- (void)actionsViewControllerOpenInSkyline:(id)arg1;
- (void)actionsViewControllerCreateReminder:(id)arg1;
- (void)actionsViewControllerShare:(id)arg1;
- (void)actionsViewControllerRemovePin:(id)arg1;
- (void)actionsViewControllerReportAProblem:(id)arg1;
- (void)actionsViewControllerAddContactToExistingContact:(id)arg1;
- (void)actionsViewControllerCreateNewContact:(id)arg1;
- (void)updateActionVisibility;
- (_Bool)shouldShowReroutingForInfoViewController:(id)arg1;
- (_Bool)shouldShowFlyoverTourForInfoViewController:(id)arg1;
- (_Bool)shouldShowDirectionsForInfoViewController:(id)arg1;
- (_Bool)shouldShowInlineMapForInfoViewController:(id)arg1;
- (void)_showShareSheet:(id)arg1;
- (void)_showEditSheet:(id)arg1;
- (void)mapkitActivityViewController:(id)arg1 postCompletedActivityOfType:(id)arg2 completed:(_Bool)arg3;
- (void)mapkitActivityViewController:(id)arg1 preCompletedActivityOfType:(id)arg2 completed:(_Bool)arg3;
- (void)_openInfoAttribution;
- (void)openInfoAttribution;
- (void)placeCardReviewsController:(id)arg1 didSelectViewReviewWithID:(id)arg2;
- (void)placeCardReviewsControllerDidSelectViewAllReviews:(id)arg1;
- (void)placeCardReviewsControllerDidSelectWriteReview:(id)arg1;
- (void)placeCardReviewsControllerDidSelectCheckIn:(id)arg1;
- (void)placeCardPhotosControllerDidSelectViewAllPhotos:(id)arg1;
- (void)placeCardPhotosControllerDidSelectAddPhoto:(id)arg1;
- (void)infoViewController:(id)arg1 didSelectDeal:(id)arg2;
- (void)placeCardPhotosController:(id)arg1 didSelectViewPhotoWithID:(id)arg2;
- (_Bool)stackingViewController:(id)arg1 showsTitleForViewController:(id)arg2;
- (void)stackingViewController:(id)arg1 willSelectViewController:(id)arg2;
- (id)stackingViewController:(id)arg1 scrollViewForViewController:(id)arg2;
- (void)restartHeaderViewAnimations;
- (void)resetHeaderViewAnimations;
- (void)resetHeaderView;
- (void)presentHeaderView;
- (void)stackingViewControllerDidEndScroll:(id)arg1;
- (void)stackingViewControllerWillBeginScroll:(id)arg1;
- (void)stackingViewController:(id)arg1 calculatedTransformForHeaderView:(struct CATransform3D)arg2;
- (double)stackingViewControllerHeightForHeaderView:(id)arg1;
- (void)_switchToTabAtIndex:(long long)arg1;
- (_Bool)headerViewshouldShowTitleSubtitleAndStarRatings:(id)arg1;
- (void)headerView:(id)arg1 didFinishLoadingBackgroundViewOfType:(long long)arg2;
- (void)_setupHeaderView;
- (void)_tappedForFlyoverTour;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStart:(id)arg1;
- (void)removeAdditionalViewController:(id)arg1;
- (void)addAdditionalViewController:(id)arg1 atPosition:(long long)arg2;
- (long long)_sectionPositionForMapTableKey:(id)arg1;
- (id)_mapTableKeyForSectionPosition:(long long)arg1;
- (id)additionalViewControllersAtPosition:(long long)arg1;
- (void)setContact:(id)arg1;
- (void)setMapItem:(id)arg1 contact:(id)arg2 updateOriginalContact:(_Bool)arg3;
- (void)_updateViewControllers;
- (void)_setViewControllersWithInformationViewControllers:(id)arg1;
- (_Bool)_defaultShowReportAProblem;
@property(nonatomic) _Bool showReportAProblem; // @synthesize showReportAProblem=_showReportAProblem;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)_setHeaderSubtitleWithDistanceInfo:(id)arg1 numberOfReviews:(unsigned long long)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredStatusBarStyle;
- (void)dealloc;
- (void)_commonInit;
- (id)initWithMapItem:(id)arg1;
- (id)initWithContact:(id)arg1 mapItem:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _MKPopoverController : UIPopoverController
{
}

+ (_Bool)_popoversDisabled;
- (_Bool)_shimPopoverPresentationController;

@end

__attribute__((visibility("hidden")))
@interface _MKPopoverEmbeddingView : UIView
{
    id <_MKPopoverEmbeddingViewWindowDelegate> _windowDelegate;
}

@property(nonatomic) __weak id <_MKPopoverEmbeddingViewWindowDelegate> windowDelegate; // @synthesize windowDelegate=_windowDelegate;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)willMoveToWindow:(id)arg1;
- (void)didMoveToWindow;

@end

__attribute__((visibility("hidden")))
@interface _MKProblemReportTicket : NSObject <MKMapServiceProblemReportTicket>
{
    id <GEOMapServiceProblemReportTicket> _ticket;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)cancel;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (id)initWithProblemReportTicket:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MKResultView : UIView <MKLocationManagerObserver>
{
    NSArray *_mapItems;
    CLLocation *_referenceLocation;
    _Bool _alwaysUsesBusinessLayout;
    int _layoutType;
    id <_MKResultViewDelegate> delegate;
    _Bool _selected;
    _Bool _showsDistance;
    NSMutableArray *_resultConstraints;
    MKLocationManager *_locManager;
    NSString *_primaryLabelText;
    NSString *_secondaryLabelText;
    NSTimer *_refLocationTimer;
    _Bool _useSpotlightVibrancy;
    int _iconFormat;
    UILabel *_nameLabel;
    UILabel *_secondaryLabel;
    UILabel *_tertiaryLabel;
    id <_MKResultViewDelegate> _delegate;
    double _fallbackDistance;
    UIColor *_primaryTextColor;
    UIColor *_secondaryTextColor;
    UIImageView *_imageView;
}

+ (_Bool)requiresConstraintBasedLayout;
@property(nonatomic) int iconFormat; // @synthesize iconFormat=_iconFormat;
@property(nonatomic) _Bool useSpotlightVibrancy; // @synthesize useSpotlightVibrancy=_useSpotlightVibrancy;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIColor *secondaryTextColor; // @synthesize secondaryTextColor=_secondaryTextColor;
@property(retain, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(nonatomic) double fallbackDistance; // @synthesize fallbackDistance=_fallbackDistance;
@property(nonatomic) __weak id <_MKResultViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool alwaysUsesBusinessLayout; // @synthesize alwaysUsesBusinessLayout=_alwaysUsesBusinessLayout;
@property(retain, nonatomic) UILabel *tertiaryLabel; // @synthesize tertiaryLabel=_tertiaryLabel;
@property(retain, nonatomic) UILabel *secondaryLabel; // @synthesize secondaryLabel=_secondaryLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (_Bool)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)handleTap:(id)arg1;
@property(retain, nonatomic) CLLocation *referenceLocation; // @synthesize referenceLocation=_referenceLocation;
- (void)_cancelReferenceLocationTimer;
- (void)_fireReferenceLocationTimer;
@property(retain, nonatomic) NSString *secondaryLabelText;
@property(retain, nonatomic) NSString *primaryLabelText;
@property(retain, nonatomic) NSArray *mapItems;
@property(retain, nonatomic) MKMapItem *mapItem;
- (void)updateLayout;
- (void)updateSubviews;
- (double)_expectedHeightForLabels;
- (id)_defaultSecondaryCategoryLabel;
- (unsigned long long)_maxNameLengthForEndingString:(id)arg1;
- (unsigned long long)_maxSecondaryStringLengthForEndingString:(id)arg1;
- (id)_defaultPrimaryLabel;
- (void)_updateLayoutForAddress;
- (void)_updateLayoutForBusinessOrCategory;
- (void)addLabelIfNecessary:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
@property(readonly, nonatomic) double preferredHeight;
- (struct CGSize)_imageSize;
- (void)layoutSubviews;
- (void)updateConstraints;
- (void)setNeedsUpdateConstraints;
- (void)updateImageView;
- (void)_contentSizeCategoryDidChange;
- (void)_updateFontSizing;
- (void)dealloc;
- (void)_updateSecondaryColors;
- (void)_updatePrimaryColors;
- (void)_updateColors;
@property(nonatomic) _Bool showsDistance;
@property(nonatomic) _Bool selected;
- (id)_labelWithFontSize:(double)arg1;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1 highlightsOnTouch:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithMapItems:(id)arg1 primaryLabelText:(id)arg2;
- (id)initWithMapItem:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _MKRightImageButton : UIControl
{
    UILabel *_titleLabel;
    UIImageView *_imageView;
}

@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (id)viewForBaselineLayout;
- (void)tintColorDidChange;
@property(retain, nonatomic) UIImage *image;
@property(retain, nonatomic) NSString *title;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKScaleUnitsView : UIView
{
    _Bool _useLightText;
    double _segmentLengthInPixels;
    double _unitsWidth;
    double _justUnitsWidth;
    NSDictionary *_legendAttributes;
    NSMutableArray *_strings;
    NSString *_legendBaseString;
    NSString *_unitsString;
    NSString *_unpaddedUnitsString;
    NSMapTable *_legendStringWidthCache;
    NSMutableDictionary *_legendStringForDistanceStringCache;
    NSNumberFormatter *_floatNumberFormatter;
}

@property(retain, nonatomic) NSNumberFormatter *floatNumberFormatter; // @synthesize floatNumberFormatter=_floatNumberFormatter;
@property(retain, nonatomic) NSString *legendBaseString; // @synthesize legendBaseString=_legendBaseString;
@property(copy, nonatomic) NSString *unpaddedUnitsString; // @synthesize unpaddedUnitsString=_unpaddedUnitsString;
@property(retain, nonatomic) NSString *unitsString; // @synthesize unitsString=_unitsString;
@property(readonly, nonatomic) double unitsWidth; // @synthesize unitsWidth=_unitsWidth;
- (void).cxx_destruct;
- (id)_legendStringForDistanceString:(id)arg1 appendUnits:(_Bool)arg2 index:(int)arg3;
- (id)_uncachedLegendStringsForDistanceString:(id)arg1;
@property(nonatomic) _Bool useLightText; // @dynamic useLightText;
@property(nonatomic) double segmentLengthInPixels; // @dynamic segmentLengthInPixels;
- (_Bool)canDisplaySegment:(unsigned long long)arg1;
- (void)_calculateLegend:(_Bool)arg1;
- (void)setUnits:(id)arg1;
- (double)_widthForString:(id)arg1 attributes:(id)arg2;
- (void)clearCaches:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _MKTicket : NSObject <MKMapServiceTicket>
{
    id <GEOMapServiceTicket> _ticket;
    NSArray *_exactMapItems;
    NSArray *_refinedMapItems;
    NSError *_error;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) GEOMapRegion *boundingRegion;
@property(readonly, nonatomic) NSArray *refinedMapItems;
@property(readonly, nonatomic) NSArray *exactMapItems;
- (void)applyToCorrectedSearch:(id)arg1;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;
- (void)cancel;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 queue:(id)arg3 networkActivity:(CDUnknownBlockType)arg4;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 queue:(id)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 networkActivity:(CDUnknownBlockType)arg2;
- (void)submitWithRefinedHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
- (void)submitWithHandler:(CDUnknownBlockType)arg1 timeout:(long long)arg2 networkActivity:(CDUnknownBlockType)arg3;
@property(readonly, copy) NSString *description;
- (id)initWithTicket:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _MKSearchTicket : _MKTicket <MKMapServiceSearchTicket>
{
}

@property(readonly, nonatomic) NSString *searchQuery;
- (id)initWithSearchTicket:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) GEOMapRegion *boundingRegion;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) NSArray *exactMapItems;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSArray *refinedMapItems;
@property(readonly) Class superclass;
@property(readonly, nonatomic) GEOMapServiceTraits *traits;

@end

__attribute__((visibility("hidden")))
@interface _MKSegmentView : UIView
{
}

- (id)initWithFillColor:(struct CGColor *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKSmallCalloutContainerView : UIView
{
}

- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _MKSmallCalloutPassthroughButton : UIControl
{
    UIControl *_targetControl;
    UIView *_highlightView;
    double _leftHighlightInset;
}

@property(nonatomic) double leftHighlightInset; // @synthesize leftHighlightInset=_leftHighlightInset;
@property(retain, nonatomic) UIControl *targetControl; // @synthesize targetControl=_targetControl;
- (void).cxx_destruct;
- (void)setHighlighted:(_Bool)arg1;
- (void)handleTap:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKStackView : UIView
{
    NSArray *_stackConstraints;
    NSArray *_stackedSubviews;
}

@property(copy, nonatomic) NSArray *stackedSubviews; // @synthesize stackedSubviews=_stackedSubviews;
- (void).cxx_destruct;

@end

@interface _MKUIViewControllerRootView : UIView
{
    UIViewController *_viewController;
}

@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithViewController:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKStackingContentView : _MKUIViewControllerRootView
{
    UIView *_referenceView;
    NSLayoutConstraint *_heightConstraint;
}

- (void).cxx_destruct;
- (id)initWithViewController:(id)arg1 referenceView:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface _MKStackingPlaceholderView : UIView
{
    NSLayoutConstraint *_contentHeightConstraint;
}

- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic) double contentHeight;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKStackingViewControllerHeaderView : UIView
{
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *title;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface _MKUserInteractionGestureRecognizer : UIGestureRecognizer
{
    NSMutableSet *_activeTouches;
    id <_MKUserInteractionGestureRecognizerTouchObserver> _touchObserver;
}

@property(nonatomic) __weak id <_MKUserInteractionGestureRecognizerTouchObserver> touchObserver; // @synthesize touchObserver=_touchObserver;
- (void).cxx_destruct;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface _MKUserTrackingButton : UIButton <MKUserTrackingButtonTarget>
{
    _MKUserTrackingButtonController *_controller;
    _Bool _inMiniBar;
    NSMutableDictionary *_customImages;
    NSMutableDictionary *_customLandscapeImagePhones;
    _Bool _selectsWhenTracking;
}

+ (Class)_activityIndicatorClass;
+ (id)buttonWithMapView:(id)arg1;
+ (id)buttonWithUserTrackingView:(id)arg1;
@property(nonatomic, getter=_selectsWhenTracking, setter=_setSelectsWhenTracking:) _Bool selectsWhenTracking; // @synthesize selectsWhenTracking=_selectsWhenTracking;
@property(readonly, nonatomic) _MKUserTrackingButtonController *controller; // @synthesize controller=_controller;
- (void).cxx_destruct;
- (struct CGRect)_selectedIndicatorBounds;
- (void)updateForMiniBarState:(_Bool)arg1;
- (void)sizeToFit;
- (void)_repositionViews;
- (void)_setState:(long long)arg1;
- (long long)_state;
- (void)_updateForState:(long long)arg1;
- (_Bool)_isHighlightedForState:(long long)arg1;
- (long long)_activityIndicatorStyle;
- (void)_setLandscapeImagePhone:(id)arg1 forUserTrackingMode:(long long)arg2 controlState:(unsigned long long)arg3;
- (id)_landscapeImagePhoneForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (id)_defaultLandscapeImagePhoneForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (void)_setImage:(id)arg1 forUserTrackingMode:(long long)arg2 controlState:(unsigned long long)arg3;
- (id)_imageForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (id)_defaultImageForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (id)_imageForState:(long long)arg1 controlState:(unsigned long long)arg2;
@property(retain, nonatomic) id <MKUserTrackingView> userTrackingView;
@property(retain, nonatomic) MKMapView *mapView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _MKUserTrackingButtonController : NSObject
{
    id <MKUserTrackingButtonTarget> _target;
    id <MKUserTrackingView> _userTrackingView;
    long long _state;
    UIImageView *_imageView;
    UIButton *_button;
    UIActivityIndicatorView *_activityIndicatorView;
}

@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) id <MKUserTrackingView> userTrackingView; // @synthesize userTrackingView=_userTrackingView;
- (void).cxx_destruct;
- (void)_updateLoading;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)_contentAnimation;
- (id)_expandAnimation;
- (id)_shrinkAnimation;
- (void)_goToNextMode:(id)arg1;
- (void)_updateState;
- (void)_reloadState;
- (id)_imageForState:(long long)arg1 controlState:(unsigned long long)arg2;
- (_Bool)_shouldAnimateFromState:(long long)arg1 toState:(long long)arg2;
- (void)_authorizationStatusChanged:(id)arg1;
- (id)_activityIndicatorView;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 userTrackingView:(id)arg2 imageView:(id)arg3 button:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface _MKWiFiObserver : NSObject
{
    _Bool _wifiEnabled;
    id <_MKWiFiObserverDelegate> _delegate;
}

@property(nonatomic) __weak id <_MKWiFiObserverDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic, getter=isWifiEnabled) _Bool wifiEnabled; // @synthesize wifiEnabled=_wifiEnabled;
- (void).cxx_destruct;
- (void)_updateWiFiState:(_Bool)arg1;
- (id)init;

@end

