//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MobileContainerManager.framework/MobileContainerManager
// UUID: ABE30D02-4690-356E-B387-B985496061E7
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 29.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ContainerManagerDelegateProtocol
@end

@protocol ContainerManagerProtocol
- (void)regenerateDirectoryUUIDWithInternalUUID:(NSUUID *)arg1 identifier:(NSString *)arg2 containerClass:(long long)arg3 withReply:(void (^)(NSError *))arg4;
- (void)recreateDefaultStructureWithUUID:(NSUUID *)arg1 identifier:(NSString *)arg2 containerClass:(long long)arg3 withReply:(void (^)(NSError *))arg4;
- (void)restoreContainerAtUrl:(NSURL *)arg1 containerClass:(long long)arg2 identifier:(NSString *)arg3 info:(NSDictionary *)arg4 withReply:(void (^)(NSError *))arg5;
- (void)restoreContainerAtUrl:(NSURL *)arg1 withReply:(void (^)(NSError *))arg2;
- (void)metadataWithUUID:(NSUUID *)arg1 identifier:(NSString *)arg2 containerClass:(long long)arg3 withReply:(void (^)(NSDictionary *, NSError *))arg4;
- (void)infoValueForKey:(NSString *)arg1 uuid:(NSUUID *)arg2 identifier:(NSString *)arg3 containerClass:(long long)arg4 withReply:(void (^)(id, NSError *))arg5;
- (void)setInfoValue:(id)arg1 forKey:(NSString *)arg2 uuid:(NSUUID *)arg3 identifier:(NSString *)arg4 containerClass:(long long)arg5 withReply:(void (^)(NSError *))arg6;
- (void)deleteContainersOnDeathRowWithReply:(void (^)(NSError *))arg1;
- (void)stageForDeleteContainersWithUUIDStrings:(NSArray *)arg1 identifiers:(NSArray *)arg2 classes:(NSArray *)arg3 withReply:(void (^)(NSError *))arg4;
- (void)replaceContainer:(NSUUID *)arg1 withContainer:(NSUUID *)arg2 identifierOld:(NSString *)arg3 identifierNew:(NSString *)arg4 containerClassOld:(long long)arg5 containerClassNew:(long long)arg6 withReply:(void (^)(NSError *))arg7;
- (void)containersWithClass:(long long)arg1 temporary:(_Bool)arg2 withReply:(void (^)(NSArray *, NSError *))arg3;
- (void)createOrLookupContainerWithId:(NSString *)arg1 createIfNecessary:(_Bool)arg2 containerClass:(long long)arg3 temporary:(_Bool)arg4 withReply:(void (^)(NSDictionary *, NSError *))arg5;
@end

@interface MCMContainer : NSObject
{
    NSXPCConnection *_xpcConnection;
    NSString *_identifier;
    NSUUID *_uuid;
    long long _containerClass;
}

+ (id)temporaryContainerWithIdentifier:(id)arg1 existed:(_Bool *)arg2 error:(id *)arg3;
+ (id)containerWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 existed:(_Bool *)arg3 error:(id *)arg4;
+ (id)containerWithIdentifier:(id)arg1 error:(id *)arg2;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) long long containerClass;
@property(readonly, nonatomic) NSUUID *uuid; // @dynamic uuid;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic, getter=isTemporary) _Bool temporary;
@property(readonly, nonatomic) NSDictionary *info;
@property(readonly, nonatomic) NSURL *url;
- (_Bool)regenerateDirectoryUUIDWithError:(id *)arg1;
- (_Bool)recreateDefaultStructureWithError:(id *)arg1;
- (id)infoValueForKey:(id)arg1 error:(id *)arg2;
- (_Bool)setInfoValue:(id)arg1 forKey:(id)arg2 error:(id *)arg3;
- (void)destroyContainerWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithIdentifier:(id)arg1 createIfNecessary:(_Bool)arg2 existed:(_Bool *)arg3 temp:(_Bool)arg4 error:(id *)arg5;
- (id)init;
- (void)markDeleted;
- (id)initWithIdentifier:(id)arg1 uuid:(id)arg2 containerClass:(long long)arg3 error:(id *)arg4;
- (id)_getMetadataInfoFromServer;
- (long long)_getContainerClass;
- (void)dealloc;
- (_Bool)_setupXpcCnnection;
- (void)_invalidateObject;
- (void)_errorOccurred;

@end

@interface MCMAppContainer : MCMContainer
{
}

@end

@interface MCMAppDataContainer : MCMContainer
{
}

@end

@interface MCMContainerManager : NSObject
{
    NSXPCConnection *_xpcConnection;
}

+ (id)defaultManager;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void).cxx_destruct;
- (_Bool)restoreContainer:(id)arg1 contentClass:(long long)arg2 identifier:(id)arg3 info:(id)arg4 error:(id *)arg5;
- (_Bool)restoreContainer:(id)arg1 error:(id *)arg2;
- (_Bool)replaceContainer:(id)arg1 withContainer:(id)arg2 error:(id *)arg3;
- (void)deleteContainers:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)temporaryContainersWithClass:(long long)arg1 error:(id *)arg2;
- (id)containersWithClass:(long long)arg1 error:(id *)arg2;
- (id)temporaryContainerWithContentClass:(long long)arg1 identifier:(id)arg2 existed:(_Bool *)arg3 error:(id *)arg4;
- (id)containerWithContentClass:(long long)arg1 identifier:(id)arg2 createIfNecessary:(_Bool)arg3 existed:(_Bool *)arg4 error:(id *)arg5;
- (id)containerWithContentClass:(long long)arg1 identifier:(id)arg2 error:(id *)arg3;
- (id)init;
- (id)_containersWithClass:(long long)arg1 temporary:(_Bool)arg2 error:(id *)arg3;

@end

@interface MCMFrameworkContainer : MCMContainer
{
}

@end

@interface MCMPluginKitPluginContainer : MCMContainer
{
}

@end

@interface MCMPluginKitPluginDataContainer : MCMContainer
{
}

@end

@interface MCMSharedDataContainer : MCMContainer
{
}

@end

@interface MCMVPNPluginContainer : MCMContainer
{
}

@end

@interface MCMVPNPluginDataContainer : MCMContainer
{
}

@end

