//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _FZChatRoomValidity {
    int _field1;
    unsigned short _field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/IMCore.framework/IMCore
// UUID: A0A5A468-27CF-33F3-A829-29B595779D36
//
//                           Arch: x86_64
//                Current version: 800.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1323.3.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol FMFSessionDelegate <NSObject>

@optional
- (void)didReceiveServerError:(NSError *)arg1;
- (void)didUpdatePendingOffersForHandles:(NSSet *)arg1;
- (void)didUpdateActiveDeviceList:(NSSet *)arg1;
- (void)didChangeActiveLocationSharingDevice:(FMFDevice *)arg1;
- (void)didFailToHandleMappingPacket:(NSString *)arg1 error:(NSError *)arg2;
- (void)mappingPacketProcessingCompleted:(NSString *)arg1;
- (void)sendMappingPacket:(NSString *)arg1 toHandle:(FMFHandle *)arg2;
- (void)didUpdateHidingStatus:(_Bool)arg1;
- (void)didStopAbilityToGetLocationForHandle:(FMFHandle *)arg1;
- (void)didStartAbilityToGetLocationForHandle:(FMFHandle *)arg1;
- (void)didStopSharingMyLocationWithHandle:(FMFHandle *)arg1;
- (void)didStartSharingMyLocationWithHandle:(FMFHandle *)arg1;
- (void)didReceiveFriendshipRequest:(FMFFriendshipRequest *)arg1;
- (void)connectionError:(NSError *)arg1;
- (void)didFailToFetchLocationForHandle:(FMFHandle *)arg1 withError:(NSError *)arg2;
- (void)didReceiveLocation:(FMFLocation *)arg1;
@end

@protocol IDSIDQueryControllerDelegate <NSObject>

@optional
- (void)idStatusUpdatedForDestinations:(NSDictionary *)arg1 service:(NSString *)arg2;
@end

@protocol IMChatItemRules <NSObject>
- (IMItem *)_itemWithChatItemsDeleted:(NSArray *)arg1 fromItem:(IMItem *)arg2;
- (_Bool)_shouldReloadChatItem:(IMChatItem *)arg1 oldChatItem:(IMChatItem *)arg2;
- (void)_didProcessChatItems:(NSMutableArray *)arg1;
- (_Bool)_shouldRegenerateChatItemsForItem:(IMItem *)arg1 previousItem:(IMItem *)arg2 oldPreviousItem:(IMItem *)arg3;
- (NSArray *)_chatItemsForItem:(IMItem *)arg1 previousItem:(IMItem *)arg2;
- (void)_invalidate;
- (id)_initWithChat:(IMChat *)arg1;
@end

@protocol IMDaemonListenerProtocol <NSObject>
- (void)lastFailedMessageIDChanged:(long long)arg1;
- (void)unreadCountChanged:(long long)arg1;
- (void)databaseNoLongerFull;
- (void)databaseFull;
- (void)databaseUpdated:(NSString *)arg1;
- (void)databaseUpdated;
- (void)account:(NSString *)arg1 relay:(NSString *)arg2 handleCancel:(NSDictionary *)arg3 fromPerson:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 relay:(NSString *)arg2 handleUpdate:(NSDictionary *)arg3 fromPerson:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 relay:(NSString *)arg2 handleInitate:(NSDictionary *)arg3 fromPerson:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 postedError:(NSError *)arg2;
- (void)account:(NSString *)arg1 statusChanged:(NSDictionary *)arg2;
- (void)persistentProperty:(NSString *)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)property:(NSString *)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)showForgotPasswordNotificationForAccount:(NSString *)arg1;
- (void)showInvalidCertNotificationForAccount:(NSString *)arg1;
- (void)account:(NSString *)arg1 avAction:(unsigned int)arg2 withArguments:(NSDictionary *)arg3 toAVChat:(NSString *)arg4 isVideo:(_Bool)arg5;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 invitationSentSuccessfully:(_Bool)arg3;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 peerID:(NSString *)arg3 propertiesUpdated:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 peerIDChangedFromID:(NSString *)arg3 toID:(NSString *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 changedToNewConferenceID:(NSString *)arg3;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedAVMessage:(unsigned int)arg3 from:(NSDictionary *)arg4 sessionID:(unsigned int)arg5 userInfo:(NSDictionary *)arg6;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedUpdateFrom:(NSDictionary *)arg3 data:(NSData *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedCounterProposalFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedCancelInvitationFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedResponseToInvitationFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 conference:(NSString *)arg2 receivedInvitationFrom:(NSDictionary *)arg3 properties:(NSDictionary *)arg4;
- (void)fileTransfer:(NSString *)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;
- (void)fileTransfer:(NSString *)arg1 updatedWithProperties:(NSDictionary *)arg2;
- (void)fileTransfer:(NSString *)arg1 createdWithProperties:(NSDictionary *)arg2;
- (void)standaloneFileTransferRegistered:(NSString *)arg1;
- (void)frequentRepliesQuery:(NSString *)arg1 chatID:(NSString *)arg2 services:(NSArray *)arg3 finishedWithResult:(NSArray *)arg4 limit:(unsigned long long)arg5;
- (void)historicalMessageGUIDsDeleted:(NSArray *)arg1 chatGUIDs:(NSArray *)arg2 queryID:(NSString *)arg3;
- (void)attachmentQuery:(NSString *)arg1 chatID:(NSString *)arg2 services:(NSArray *)arg3 finishedWithResult:(NSArray *)arg4;
- (void)historyQuery:(NSString *)arg1 chatID:(NSString *)arg2 services:(NSArray *)arg3 finishedWithResult:(NSArray *)arg4 limit:(unsigned long long)arg5;
- (void)messageQuery:(NSString *)arg1 finishedWithResult:(IMMessageItem *)arg2 chatGUIDs:(NSArray *)arg3;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 member:(NSDictionary *)arg5 statusChanged:(int)arg6;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 statusChanged:(int)arg5 handleInfo:(NSArray *)arg6;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 error:(NSError *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messagesUpdated:(NSArray *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 notifySentMessage:(IMMessageItem *)arg5 sendTime:(NSNumber *)arg6;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messageUpdated:(IMItem *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messageReceived:(IMItem *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 messageSent:(IMMessageItem *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 updateProperties:(NSDictionary *)arg5;
- (void)account:(NSString *)arg1 chat:(NSString *)arg2 style:(unsigned char)arg3 chatProperties:(NSDictionary *)arg4 invitationReceived:(IMMessageItem *)arg5;
- (void)leftChat:(NSString *)arg1;
- (void)chat:(NSString *)arg1 displayNameUpdated:(NSString *)arg2;
- (void)chat:(NSString *)arg1 propertiesUpdated:(NSDictionary *)arg2;
- (void)chat:(NSString *)arg1 updated:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 buddyInfo:(NSDictionary *)arg2 commandDelivered:(NSNumber *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 buddyInfo:(NSDictionary *)arg2 commandReceived:(NSNumber *)arg3 properties:(NSDictionary *)arg4;
- (void)account:(NSString *)arg1 handleSubscriptionRequestFrom:(NSDictionary *)arg2 withMessage:(NSString *)arg3;
- (void)account:(NSString *)arg1 buddyProperties:(NSDictionary *)arg2 buddyPictures:(NSDictionary *)arg3;
- (void)account:(NSString *)arg1 groupsChanged:(NSArray *)arg2 error:(NSError *)arg3;
- (void)account:(NSString *)arg1 buddyPictureChanged:(NSString *)arg2 imageData:(NSData *)arg3 imageHash:(NSString *)arg4;
- (void)account:(NSString *)arg1 blockIdleStatusChanged:(_Bool)arg2;
- (void)account:(NSString *)arg1 blockingModeChanged:(unsigned int)arg2;
- (void)account:(NSString *)arg1 allowListChanged:(NSArray *)arg2;
- (void)account:(NSString *)arg1 blockListChanged:(NSArray *)arg2;
- (void)account:(NSString *)arg1 buddyPropertiesChanged:(NSArray *)arg2;
- (void)accountRemoved:(NSString *)arg1;
- (void)accountAdded:(NSString *)arg1 defaults:(NSDictionary *)arg2 service:(NSString *)arg3;
- (void)account:(NSString *)arg1 capabilitiesChanged:(unsigned long long)arg2;
- (void)account:(NSString *)arg1 defaultsChanged:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 loginStatusChanged:(unsigned int)arg2 message:(NSString *)arg3 reason:(int)arg4 properties:(NSDictionary *)arg5;
- (void)account:(NSString *)arg1 defaults:(NSDictionary *)arg2 blockList:(NSArray *)arg3 allowList:(NSArray *)arg4 blockingMode:(unsigned int)arg5 blockIdleStatus:(_Bool)arg6 status:(NSDictionary *)arg7 capabilities:(unsigned long long)arg8 serviceLoginStatus:(unsigned int)arg9 loginStatusMessage:(NSString *)arg10;
- (void)activeAccountsChanged:(NSArray *)arg1 forService:(NSString *)arg2;
- (void)defaultsChanged:(NSDictionary *)arg1 forService:(NSString *)arg2;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)pendingACRequestComplete;
- (void)pendingVCRequestComplete;
- (void)setupComplete;
- (void)setupComplete:(_Bool)arg1 info:(NSDictionary *)arg2;
@end

@protocol IMLocationManager <NSObject>
@property(readonly, retain, nonatomic) NSError *error;
@property(readonly, retain, nonatomic) CLLocation *location;
@property(readonly, nonatomic) _Bool locationAuthorizationDenied;
- (void)startUpdatingCurrentLocationWithHandler:(void (^)(CLLocation *, NSError *))arg1;
@end

@protocol IMMessageChatItem <NSObject>
@property(readonly, retain, nonatomic) IMHandle *sender;
@property(readonly, retain, nonatomic) NSDate *time;
@property(readonly, nonatomic) _Bool failed;
@property(readonly, nonatomic) _Bool isFromMe;
@end

@protocol IMRemoteDaemonProtocol <NSObject>
- (void)validateProfileAccount:(NSString *)arg1;
- (void)unvalidateAliases:(NSArray *)arg1 account:(NSString *)arg2;
- (void)validateAliases:(NSArray *)arg1 account:(NSString *)arg2;
- (void)removeAliases:(NSArray *)arg1 account:(NSString *)arg2;
- (void)addAliases:(NSArray *)arg1 account:(NSString *)arg2;
- (void)relay:(NSString *)arg1 sendCancel:(NSDictionary *)arg2 toPerson:(NSString *)arg3 account:(NSString *)arg4;
- (void)relay:(NSString *)arg1 sendUpdate:(NSDictionary *)arg2 toPerson:(NSString *)arg3 account:(NSString *)arg4;
- (void)relay:(NSString *)arg1 sendInitateRequest:(NSDictionary *)arg2 toPerson:(NSString *)arg3 account:(NSString *)arg4;
- (void)sendAVMessageToPerson:(NSString *)arg1 sessionID:(unsigned int)arg2 type:(unsigned int)arg3 userInfo:(NSDictionary *)arg4 conference:(NSString *)arg5 account:(NSString *)arg6;
- (void)sendVCUpdate:(NSData *)arg1 toPerson:(NSString *)arg2 conference:(NSString *)arg3 account:(NSString *)arg4;
- (void)sendCounterProposalToPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3 account:(NSString *)arg4;
- (void)cancelVCRequestWithPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3 account:(NSString *)arg4;
- (void)respondToVCInvitationWithPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3 account:(NSString *)arg4;
- (void)requestVCWithPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3 account:(NSString *)arg4;
- (void)sendCommand:(NSNumber *)arg1 withProperties:(NSDictionary *)arg2 toPerson:(NSString *)arg3 account:(NSString *)arg4;
- (void)passwordUpdatedAccount:(NSString *)arg1;
- (void)setBlockIdleStatus:(_Bool)arg1 account:(NSString *)arg2;
- (void)setBlockList:(NSArray *)arg1 account:(NSString *)arg2;
- (void)setAllowList:(NSArray *)arg1 account:(NSString *)arg2;
- (void)setBlockingMode:(unsigned int)arg1 account:(NSString *)arg2;
- (void)setProperties:(NSDictionary *)arg1 ofParticipant:(NSString *)arg2 inChatID:(NSString *)arg3 identifier:(NSString *)arg4 style:(unsigned char)arg5 account:(NSString *)arg6;
- (void)sendSavedReceiptForMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 account:(NSString *)arg5;
- (void)sendPlayedReceiptForMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 account:(NSString *)arg5;
- (void)sendReadReceiptForMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 account:(NSString *)arg5;
- (void)sendMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 account:(NSString *)arg5;
- (void)declineInvitationToChatID:(NSString *)arg1 identifier:(NSString *)arg2 style:(unsigned char)arg3 account:(NSString *)arg4;
- (void)removePersonInfo:(NSDictionary *)arg1 chatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 account:(NSString *)arg5;
- (void)invitePersonInfo:(NSDictionary *)arg1 withMessage:(IMMessageItem *)arg2 toChatID:(NSString *)arg3 identifier:(NSString *)arg4 style:(unsigned char)arg5 account:(NSString *)arg6;
- (void)removeChatID:(NSString *)arg1 identifier:(NSString *)arg2 style:(unsigned char)arg3 account:(NSString *)arg4;
- (void)leaveChatID:(NSString *)arg1 identifier:(NSString *)arg2 style:(unsigned char)arg3 account:(NSString *)arg4;
- (void)joinChatID:(NSString *)arg1 handleInfo:(NSArray *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 joinProperties:(NSDictionary *)arg5 account:(NSString *)arg6;
- (void)updateAuthorizationCredentials:(NSString *)arg1 token:(NSString *)arg2 account:(NSString *)arg3;
- (void)setValue:(id)arg1 ofProperty:(NSString *)arg2 ofPerson:(NSString *)arg3 account:(NSString *)arg4;
- (void)requestProperty:(NSString *)arg1 ofPerson:(NSString *)arg2 account:(NSString *)arg3;
- (void)stopWatchingBuddy:(NSString *)arg1 account:(NSString *)arg2;
- (void)startWatchingBuddy:(NSString *)arg1 account:(NSString *)arg2;
- (void)requestSubscriptionTo:(NSString *)arg1 account:(NSString *)arg2;
- (void)acceptSubscriptionRequest:(_Bool)arg1 from:(NSString *)arg2 account:(NSString *)arg3;
- (void)renameGroup:(NSString *)arg1 to:(NSString *)arg2 account:(NSString *)arg3;
- (void)changeGroup:(NSString *)arg1 changes:(NSDictionary *)arg2 account:(NSString *)arg3;
- (void)changeGroups:(NSDictionary *)arg1 account:(NSString *)arg2;
- (void)requestGroupsAccount:(NSString *)arg1;
- (void)unregisterAccount:(NSString *)arg1;
- (void)registerAccount:(NSString *)arg1;
- (void)authenticateAccount:(NSString *)arg1;
- (void)resumeBuddyUpdatesAccount:(NSString *)arg1;
- (void)holdBuddyUpdatesAccount:(NSString *)arg1;
- (void)sendMappingPacket:(NSString *)arg1 toHandle:(NSString *)arg2 account:(NSString *)arg3;
- (void)logoutAccount:(NSString *)arg1;
- (void)loginAccount:(NSString *)arg1;
- (void)autoReconnectAccount:(NSString *)arg1;
- (void)autoLoginAccount:(NSString *)arg1;
- (void)removeChat:(NSString *)arg1;
- (void)silenceChat:(NSString *)arg1 untilDate:(NSDate *)arg2;
- (void)chat:(NSString *)arg1 updateDisplayName:(NSString *)arg2;
- (void)chat:(NSString *)arg1 updateProperties:(NSDictionary *)arg2;
- (void)cleanupAttachments;
- (void)loadAttachmentsForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 chatID:(NSString *)arg4 queryID:(NSString *)arg5;
- (void)loadFrequentRepliesForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 limit:(unsigned long long)arg4 chatID:(NSString *)arg5 queryID:(NSString *)arg6;
- (void)updateUnformattedID:(NSString *)arg1 forBuddyID:(NSString *)arg2 onService:(NSString *)arg3;
- (void)markSavedForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 message:(IMMessageItem *)arg4;
- (void)markSavedForMessageGUID:(NSString *)arg1;
- (void)markPlayedForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 message:(IMMessageItem *)arg4;
- (void)markPlayedForMessageGUID:(NSString *)arg1;
- (void)storeItem:(IMItem *)arg1 inChatGUID:(NSString *)arg2;
- (void)markReadForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 messages:(NSArray *)arg4;
- (void)markReadForMessageGUID:(NSString *)arg1;
- (void)updateMessage:(IMMessageItem *)arg1;
- (void)clearHistoryForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 beforeGUID:(NSString *)arg4 afterGUID:(NSString *)arg5 chatID:(NSString *)arg6 queryID:(NSString *)arg7;
- (void)deleteMessageWithGUIDs:(NSArray *)arg1 queryID:(NSString *)arg2;
- (void)requestPendingMessages;
- (void)loadHistoryForIDs:(NSArray *)arg1 style:(unsigned char)arg2 onServices:(NSArray *)arg3 limit:(unsigned long long)arg4 beforeGUID:(NSString *)arg5 afterGUID:(NSString *)arg6 chatID:(NSString *)arg7 queryID:(NSString *)arg8;
- (void)loadMessageWithGUID:(NSString *)arg1 queryID:(NSString *)arg2;
- (void)setListenerCapabilities:(unsigned int)arg1;
- (void)account:(NSString *)arg1 avAction:(unsigned int)arg2 withArguments:(NSDictionary *)arg3 toAVChat:(NSString *)arg4 isVideo:(_Bool)arg5;
- (void)fileTransferRemoved:(NSString *)arg1;
- (void)fileTransferStopped:(NSString *)arg1;
- (void)fileTransfer:(NSString *)arg1 acceptedWithPath:(NSString *)arg2 autoRename:(_Bool)arg3 overwrite:(_Bool)arg4;
- (void)fileTransfer:(NSString *)arg1 updatedWithProperties:(NSDictionary *)arg2;
- (void)fileTransfer:(NSString *)arg1 createdWithProperties:(NSDictionary *)arg2;
- (void)deleteFileTransferWithGUID:(NSString *)arg1;
- (void)sendStandaloneFileTransfer:(NSString *)arg1;
- (void)requestBuddyPicturesAndPropertiesForAccount:(NSString *)arg1;
- (void)writeAccount:(NSString *)arg1 defaults:(NSDictionary *)arg2;
- (void)removeAccount:(NSString *)arg1;
- (void)addAccount:(NSString *)arg1 defaults:(NSDictionary *)arg2 service:(NSString *)arg3;
- (void)deactivateAccounts:(NSArray *)arg1;
- (void)activateAccounts:(NSArray *)arg1;
- (void)requestPendingACInvites;
- (void)requestPendingVCInvites;
- (void)setVCCapabilities:(unsigned long long)arg1;
- (void)setValue:(id)arg1 ofPersistentProperty:(NSString *)arg2;
- (void)setValue:(id)arg1 ofProperty:(NSString *)arg2;
- (void)changeMyStatus:(NSDictionary *)arg1 forAccount:(NSString *)arg2;
- (void)terminate;
- (void)logoutAllAccounts;
- (void)loginAllAccounts;
- (void)autoLoginActiveAccountsIfNecessary;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidEnterDataProtectionLock;
- (void)systemDidLeaveDataProtectionLock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)systemDidLogout;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidFastUserSwitchOut;
- (void)systemRestoreStateDidChange;
- (void)systemDidFinishMigration;
- (void)systemDidStopBackup;
- (void)systemDidStartBackup;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillResignActive;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemWillShutdown;
- (void)systemDidLeaveMemoryPressure;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface IDSIDQueryController (IMCoreIDSLookupAdditions)
- (void)__imQueryKnownIDStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)__imQueryKnownIDStatusForPerson:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)__imQueryKnownIDStatusForHandles:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (id)__imBlockingCurrrentIDStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4;
- (void)__imQueryIDStatusForDestinations:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)__imQueryIDStatusForPerson:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)__imQueryIDStatusForHandles:(id)arg1 service:(id)arg2 listenerID:(id)arg3 queue:(id)arg4 completionBlock:(CDUnknownBlockType)arg5;
@end

@interface IMAccount : NSObject <IMSystemMonitorListener>
{
    IMServiceImpl *_service;
    IMPeople *_buddyList;
    NSRecursiveLock *_lock;
    NSMutableDictionary *_imHandles;
    NSMutableDictionary *_inlineTransfers;
    IMHandle *_loginIMHandle;
    NSArray *_cachedAllowList;
    NSArray *_cachedBlockList;
    NSString *_loginID;
    NSString *_displayName;
    NSString *_uniqueID;
    long long _accountType;
    NSDictionary *_data;
    NSMutableDictionary *_dataChanges;
    NSMutableDictionary *_localCache;
    NSDictionary *_profile;
    NSMutableDictionary *_profileChanges;
    NSString *_countryCode;
    long long _profileStatus;
    NSDictionary *_accountPreferences;
    NSMutableDictionary *_accountPreferencesChanges;
    NSDictionary *_accountPersistentProperties;
    NSMutableDictionary *_accountPersistentPropertiesChanges;
    NSArray *_groups;
    NSMutableDictionary *_sortOrders;
    NSDictionary *_members;
    NSMutableDictionary *_coalescedChanges;
    NSArray *_targetGroupState;
    NSArray *_lastReceivedGroupState;
    NSDictionary *_subtypeInfo;
    NSArray *_vettedAliases;
    unsigned long long _myStatus;
    NSMutableDictionary *_currentAccountStatus;
    NSString *_myStatusMessage;
    NSDictionary *_myNowPlaying;
    NSDate *_myIdleSince;
    NSData *_myPictureData;
    NSData *_accountImageData;
    unsigned long long _capabilities;
    unsigned long long _defaultHandleCapabilities;
    _Bool _hasCheckedDefaultHandleCapabilities;
    NSAttributedString *_myProfile;
    long long _registrationStatus;
    long long _registrationFailureReason;
    NSDictionary *_registrationAlertInfo;
    unsigned long long _loginStatus;
    _Bool _isActive;
    _Bool _hasPostedOfflineNotification;
    _Bool _justLoggedIn;
    _Bool _useMeCardName;
    unsigned int _cachedBlockingMode;
    _Bool _blockIdleStatus;
    _Bool _syncedWithRemoteBuddyList;
    _Bool _hasReceivedSync;
    int _numHolding;
    int _coalesceCount;
    _Bool _needToCheckForWatchedIMHandles;
    _Bool _iconChecked;
    _Bool _hasBeenRemoved;
    id _smallImage;
    id _accountImage;
    _Bool _asleep;
}

+ (id)allBuddyListIMHandles;
+ (id)arrayOfAllIMHandles;
+ (id)nameOfLoginStatus:(unsigned long long)arg1;
+ (id)_groupSummaryFromGroupList:(id)arg1;
+ (void)removeTemporaryPasswordForAccount:(id)arg1 forServiceName:(id)arg2;
+ (void)setTemporaryPassword:(id)arg1 forAccount:(id)arg2 forServiceName:(id)arg3;
+ (id)temporaryPasswordForAccount:(id)arg1 forServiceName:(id)arg2;
+ (void)removePasswordForAccount:(id)arg1 forServiceName:(id)arg2;
+ (void)setPassword:(id)arg1 forAccount:(id)arg2 forServiceName:(id)arg3;
+ (id)passwordForAccount:(id)arg1 forServiceName:(id)arg2;
@property(readonly, nonatomic) _Bool justLoggedIn; // @synthesize justLoggedIn=_justLoggedIn;
@property(readonly, nonatomic) IMPeople *buddyList; // @synthesize buddyList=_buddyList;
@property(readonly, nonatomic) id loginIMHandle; // @synthesize loginIMHandle=_loginIMHandle;
@property(readonly, nonatomic) NSDictionary *accountSubtypeInfo; // @synthesize accountSubtypeInfo=_subtypeInfo;
@property(readonly, nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(nonatomic) unsigned int blockingMode; // @synthesize blockingMode=_cachedBlockingMode;
@property(nonatomic) _Bool blockIdleStatus; // @synthesize blockIdleStatus=_blockIdleStatus;
@property(readonly, nonatomic) unsigned long long loginStatus; // @synthesize loginStatus=_loginStatus;
@property(readonly, nonatomic) unsigned long long capabilities; // @synthesize capabilities=_capabilities;
@property(readonly, nonatomic) NSDate *myIdleSince; // @synthesize myIdleSince=_myIdleSince;
@property(readonly, nonatomic) NSData *myPictureData; // @synthesize myPictureData=_myPictureData;
@property(readonly, nonatomic) NSString *myStatusMessage; // @synthesize myStatusMessage=_myStatusMessage;
@property(readonly, nonatomic) unsigned long long myStatus; // @synthesize myStatus=_myStatus;
@property(readonly, nonatomic) NSAttributedString *myProfile; // @synthesize myProfile=_myProfile;
@property(readonly, nonatomic) NSDictionary *myStatusDictionary; // @synthesize myStatusDictionary=_currentAccountStatus;
@property(readonly, nonatomic) IMServiceImpl *service; // @synthesize service=_service;
@property(retain, nonatomic) NSString *login; // @synthesize login=_loginID;
- (void)_handleIncomingCommand:(id)arg1 withProperties:(id)arg2 fromBuddyInfo:(id)arg3;
- (void)_handleDeliveredCommand:(id)arg1 withProperties:(id)arg2 fromBuddyInfo:(id)arg3;
- (_Bool)_updateDisplayName:(id)arg1;
@property(copy, nonatomic) NSString *displayName;
- (void)setInteger:(int)arg1 forPreferenceKey:(id)arg2;
- (int)integerForPreferenceKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forPreferenceKey:(id)arg2;
- (_Bool)boolForPreferenceKey:(id)arg1;
- (void)setString:(id)arg1 forPreferenceKey:(id)arg2;
- (id)stringForPreferenceKey:(id)arg1;
- (id)dictionaryDataForPreferenceKey:(id)arg1;
- (void)setDictionaryData:(id)arg1 forPreferenceKey:(id)arg2;
- (void)removeObjectForPreferenceKey:(id)arg1;
- (void)setObject:(id)arg1 forPreferenceKey:(id)arg2;
- (id)objectForPreferenceKey:(id)arg1;
@property(readonly, nonatomic) NSDictionary *accountPreferences;
- (void)_removePersistentPropertyForKey:(id)arg1;
- (void)_setPersistentPropertyObject:(id)arg1 forKey:(id)arg2;
- (id)_persistentPropertyForKey:(id)arg1;
@property(readonly, nonatomic) NSDictionary *_persistentProperties;
@property(readonly, nonatomic) _Bool isAsleep;
- (void)systemWillSleep;
- (void)systemDidWake;
- (void)_setInteger:(int)arg1 forKey:(id)arg2;
- (void)setInteger:(int)arg1 forKey:(id)arg2;
- (int)integerForKey:(id)arg1;
- (void)_setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)boolForKey:(id)arg1;
- (void)_setString:(id)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (id)dictionaryDataForKey:(id)arg1;
- (void)_setDictionaryData:(id)arg1 forKey:(id)arg2;
- (void)setDictionaryData:(id)arg1 forKey:(id)arg2;
- (void)_removeObjectForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)_setLocalCachedObject:(id)arg1 forKey:(id)arg2;
- (void)_setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (long long)validationErrorReasonForAlias:(id)arg1 type:(long long)arg2;
- (long long)validationErrorReasonForAlias:(id)arg1;
- (long long)validationStatusForAlias:(id)arg1 type:(long long)arg2;
- (long long)validationStatusForAlias:(id)arg1;
- (_Bool)validateAlias:(id)arg1 type:(long long)arg2;
- (_Bool)validateAliases:(id)arg1;
- (_Bool)validateAlias:(id)arg1;
- (_Bool)unvalidateAliases:(id)arg1;
- (_Bool)unvalidateAlias:(id)arg1;
- (long long)typeForAlias:(id)arg1;
- (_Bool)removeAlias:(id)arg1 type:(long long)arg2;
- (_Bool)removeAliases:(id)arg1;
- (_Bool)removeAlias:(id)arg1;
- (_Bool)addAlias:(id)arg1 type:(long long)arg2;
- (_Bool)addAliases:(id)arg1;
- (_Bool)addAlias:(id)arg1;
- (id)aliasesForType:(long long)arg1;
- (_Bool)hasAlias:(id)arg1 type:(long long)arg2;
- (_Bool)hasAlias:(id)arg1;
@property(readonly, nonatomic) NSArray *aliases;
- (id)_statuses;
- (id)_aliasInfoForAlias:(id)arg1;
- (id)_aliases;
@property(readonly, nonatomic) NSArray *vettedAliases;
- (void)_updateProfileInfo:(id)arg1;
- (long long)profileValidationErrorReason;
- (long long)profileValidationStatus;
- (_Bool)validateProfile;
- (_Bool)setProfileString:(id)arg1 forKey:(id)arg2;
- (_Bool)setProfileValue:(id)arg1 forKey:(id)arg2;
- (_Bool)removeProfileValueForKey:(id)arg1;
- (id)profileStringForKey:(id)arg1;
- (id)profileValueForKey:(id)arg1;
@property(readonly, retain, nonatomic) NSDictionary *profileInfo;
@property(readonly, retain, nonatomic) NSString *countryCode;
- (_Bool)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;
- (_Bool)authenticateAccount;
- (_Bool)requestNewAuthorizationCredentials;
@property(readonly, nonatomic) NSString *authorizationToken;
@property(readonly, nonatomic) NSString *authorizationID;
@property(readonly, nonatomic) _Bool supportsAuthorization;
- (struct _FZChatRoomValidity)validityOfChatRoomName:(id)arg1;
- (id)defaultChatSuffix;
- (id)chatIDForRoomName:(id)arg1;
- (void)nowLoggedOut;
- (void)nowLoggedIn;
- (void)handleSubscriptionRequestFrom:(id)arg1 withMessage:(id)arg2;
- (void)imHandle:(id)arg1 buddyStatusChanged:(_Bool)arg2;
- (void)disconnectAllIMHandles;
- (void)unregisterIMHandle:(id)arg1;
- (void)registerIMHandle:(id)arg1;
- (void)_refreshLoginIMHandle;
- (void)forgetAllWatches;
- (void)stopWatchingIMHandle:(id)arg1;
- (void)startWatchingIMHandle:(id)arg1;
- (void)watchBuddiesIfNecessary;
- (void)_watchBuddiesIfNecessary;
- (_Bool)removeIMHandle:(id)arg1 fromIMPerson:(id)arg2;
- (_Bool)addIMHandle:(id)arg1 toIMPerson:(id)arg2;
- (id)imHandlesForIMPerson:(id)arg1;
- (void)requestBuddyListAuthorizationFromIMHandle:(id)arg1;
- (void)setBuddyListAuthorization:(_Bool)arg1 forIMHandle:(id)arg2;
- (unsigned long long)sortOrderForIMHandle:(id)arg1 inGroup:(id)arg2;
- (id)personSibsForIMHandle:(id)arg1;
- (id)personForIMHandle:(id)arg1 identifier:(int *)arg2;
- (id)personForIMHandle:(id)arg1;
- (id)imHandleWithID:(id)arg1;
- (id)existingIMHandleWithID:(id)arg1 countryCode:(id)arg2;
- (id)imHandleWithID:(id)arg1 countryCode:(id)arg2;
- (id)_imHandleWithID:(id)arg1 alreadyCanonical:(_Bool)arg2 knownIDStatus:(int)arg3 originalID:(id)arg4 countryCode:(id)arg5;
- (id)imHandleWithID:(id)arg1 alreadyCanonical:(_Bool)arg2;
- (unsigned long long)defaultHandleCapabilities;
- (id)existingIMHandleWithID:(id)arg1;
- (id)existingIMHandleWithID:(id)arg1 alreadyCanonical:(_Bool)arg2;
- (id)existingIMHandleWithInfo:(id)arg1 alreadyCanonical:(_Bool)arg2;
- (id)imHandleWithInfo:(id)arg1 alreadyCanonical:(_Bool)arg2;
- (id)existingIMHandleWithInfo:(id)arg1;
- (id)imHandleWithInfo:(id)arg1;
- (Class)imHandleClass;
@property(readonly, nonatomic) NSArray *arrayOfAllIMHandles;
- (void)recalculateSubtypeInfo;
- (void)_clearImageCache;
- (id)recalculatedSubtypeInfo;
- (long long)compareNames:(id)arg1;
- (void)groupsChanged:(id)arg1 error:(id)arg2;
- (void)_syncWithRemoteBuddies;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2 reason:(int)arg3;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1 errorMessage:(id)arg2;
- (void)setIMAccountLoginStatus:(unsigned long long)arg1;
- (void)setIsActive:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) _Bool isConnecting;
@property(readonly, nonatomic) NSString *loginStatusMessage;
- (void)_notJustLoggedIn;
- (_Bool)unregisterAccount;
- (_Bool)registerAccount;
@property(readonly, nonatomic) long long registrationFailureReason;
@property(readonly, nonatomic) long long registrationStatus;
- (void)_updateRegistrationStatus:(int)arg1 error:(int)arg2 info:(id)arg3;
@property(readonly, nonatomic) _Bool supportsRegistration;
@property(readonly, retain, nonatomic) NSDictionary *registrationFailureAlertInfo;
@property(readonly, nonatomic) _Bool isOperational;
@property(readonly, nonatomic) _Bool isRegistered;
@property(readonly, nonatomic) _Bool _isUsableForSending;
- (void)accountDidDeactivate;
- (void)accountDidBecomeActive;
- (void)accountWillBeRemoved;
- (void)_serviceDidDisconnect:(id)arg1;
- (void)_serviceDidReconnect:(id)arg1;
- (void)_serviceDidConnect:(id)arg1;
- (void)_registrationStatusChanged:(id)arg1;
- (void)setBuddyProperties:(id)arg1 buddyPictures:(id)arg2;
- (void)buddyPictureChanged:(id)arg1 imageData:(id)arg2 imageHash:(id)arg3;
- (void)buddyPropertiesChanged:(id)arg1;
- (void)resumeBuddyUpdates;
- (void)_resumeBuddyUpdatesNow;
- (void)holdBuddyUpdates;
@property(readonly, nonatomic) _Bool makingChanges;
- (void)endChanges;
- (id)memberGroups:(id)arg1;
@property(readonly, nonatomic) NSArray *groupList;
- (id)groupMembers:(id)arg1;
- (id)propertiesForGroup:(id)arg1;
- (void)reorderGroups:(id)arg1;
- (void)reorderGroup:(id)arg1 order:(id)arg2;
- (void)renameGroup:(id)arg1 to:(id)arg2;
- (void)changeBuddyList:(id)arg1 add:(_Bool)arg2 groups:(id)arg3 atLocation:(int)arg4;
- (void)addBuddyToBuddyList:(id)arg1;
- (_Bool)removeIMHandle:(id)arg1 fromGroups:(id)arg2;
- (_Bool)addIMHandle:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (_Bool)removePeople:(id)arg1 fromGroups:(id)arg2;
- (_Bool)addPeople:(id)arg1 toGroups:(id)arg2 atLocation:(long long)arg3;
- (void)_ensureGroupsExists:(id)arg1;
- (void)syncWithRemoteBuddies;
- (void)_markHasSyncedWithRemoteBuddies;
@property(readonly, nonatomic) _Bool hasSyncedWithRemoteBuddies;
- (void)requestGroups;
- (void)hookupToDaemon;
- (void)beginChanges;
- (void)_applyChangesToTemporaryCache:(id)arg1;
- (void)setTargetGroupsState:(id)arg1;
- (void)updateWithTargetGroups;
- (void)setWaitForTargetState;
- (void)targetGroupStateTimeout;
@property(readonly, nonatomic) _Bool hasTargetGroupStateBeenMet;
@property(readonly, nonatomic) _Bool isAwaitingTargetGroupState;
- (void)clearTargetState;
@property(nonatomic) _Bool blockOtherAddresses;
@property(retain, nonatomic) NSArray *allowList;
@property(retain, nonatomic) NSArray *blockList;
- (void)blockMessages:(_Bool)arg1 fromID:(id)arg2;
- (void)setCachedBlockIdleStatus:(_Bool)arg1;
- (void)setCachedBlockingMode:(unsigned int)arg1;
- (void)setCachedBlockList:(id)arg1;
- (void)setCachedAllowList:(id)arg1;
@property(readonly, nonatomic) NSArray *emailDomains;
@property(readonly, nonatomic) NSString *addressBookProperty;
@property(readonly, nonatomic) NSArray *addressBookProperties;
@property(readonly, nonatomic) NSDictionary *dictionary;
- (void)loadFromDictionary:(id)arg1;
- (void)_loadFromDictionary:(id)arg1 force:(_Bool)arg2;
- (void)setValue:(id)arg1 ofExtraProperty:(id)arg2 ofIMHandle:(id)arg3;
- (void)requestProperty:(id)arg1 ofIMHandle:(id)arg2;
@property(readonly, nonatomic) long long invalidSettings;
@property(readonly, nonatomic) _Bool isManaged;
@property(readonly, nonatomic) _Bool validServer;
@property(readonly, nonatomic) _Bool validPort;
@property(readonly, nonatomic) _Bool validLogin;
@property(readonly, nonatomic) _Bool canActivate;
@property(readonly, nonatomic) _Bool allowsMMSRelay;
@property(readonly, nonatomic) _Bool allowsSMSRelay;
@property(nonatomic) _Bool allowsVCRelay;
@property(nonatomic) _Bool goIdle;
@property(readonly, nonatomic) long long port;
@property(readonly, nonatomic) NSString *server;
- (id)_serverWithSSL:(_Bool)arg1;
- (id)description;
@property(readonly, nonatomic) _Bool useSSL;
@property(nonatomic) _Bool autoLogin;
@property(readonly, nonatomic) _Bool hasCustomDescription;
@property(retain, nonatomic) NSString *accountDescription;
@property(nonatomic, getter=isInvisible) _Bool invisible;
- (void)removeTemporaryPassword;
- (void)setTemporaryPassword:(id)arg1;
@property(readonly, nonatomic) NSString *temporaryPassword;
- (void)removePassword;
- (void)setPassword:(id)arg1;
@property(readonly, nonatomic) NSString *password;
@property(readonly, nonatomic) _Bool handlesChatInvites;
- (void)updateCapabilities:(unsigned long long)arg1;
- (_Bool)hasCapability:(unsigned long long)arg1;
- (long long)compareServices:(id)arg1;
- (long long)compareIDs:(id)arg1;
- (long long)compareStatus:(id)arg1;
- (long long)compareAccountNames:(id)arg1;
- (long long)compareLoginStatus:(id)arg1;
- (_Bool)emailAddressIsID:(id)arg1;
- (void)resetToDefaults;
- (void)writeSettings;
- (_Bool)equalID:(id)arg1 andID:(id)arg2;
- (id)canonicalFormOfID:(id)arg1 countryCode:(id)arg2;
- (id)canonicalFormOfID:(id)arg1;
@property(readonly, nonatomic) NSData *accountImageData;
@property(readonly, nonatomic) NSString *serviceName;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) NSString *internalName;
@property(readonly, nonatomic) NSString *shortName;
- (void)setUniqueID:(id)arg1;
@property(readonly, nonatomic) NSString *uniqueID;
@property(readonly, nonatomic) NSString *myNowPlayingString;
- (void)setCurrentAccountStatus:(id)arg1;
- (void)_updateMyStatus:(unsigned long long)arg1 message:(id)arg2;
@property(readonly, nonatomic) long long accountType;
- (void)_updateLogin:(id)arg1;
- (void)loginStatusChanged:(unsigned int)arg1 message:(id)arg2 reason:(int)arg3 properties:(id)arg4;
- (void)logoutAccount;
- (void)loginAccount;
- (void)autoLoginAccount;
- (void)_loginWithAutoLogin:(_Bool)arg1;
- (id)initWithUniqueID:(id)arg1 service:(id)arg2;
- (id)initWithService:(id)arg1;
- (void)clearServiceCaches;
- (void)dealloc;
- (void)finalize;

@end

@interface IMAccountController : NSObject
{
    NSMutableArray *_accounts;
    NSMutableDictionary *_accountMap;
    _Bool _isReadOnly;
    _Bool _cachesEnabled;
    NSArray *_operationalAccountsCache;
    NSMutableDictionary *_serviceToActiveAccountsMap;
    NSMutableDictionary *_serviceToAccountsMap;
    NSMutableDictionary *_serviceToConnectedAccountsMap;
    NSMutableDictionary *_serviceToOperationalAccountsMap;
}

+ (id)bestAccountFromAccounts:(id)arg1;
+ (id)sharedInstance;
@property(readonly, nonatomic) NSArray *accounts; // @synthesize accounts=_accounts;
- (void)_rebuildOperationalAccountsCache:(_Bool)arg1;
- (void)_disableCache;
- (void)_enableCache;
- (id)jabberAccount;
- (id)aimAccount;
- (id)mostLoggedInAccount;
- (id)bestAccountWithCapability:(unsigned long long)arg1;
- (id)bestConnectedAccountForService:(id)arg1;
- (id)bestActiveAccountForService:(id)arg1;
- (id)bestOperationalAccountForService:(id)arg1;
- (id)bestAccountForService:(id)arg1;
- (id)bestConnectedAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)bestActiveAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)bestOperationalAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)bestAccountForService:(id)arg1 withLogin:(id)arg2;
- (id)bestAccountForService:(id)arg1 login:(id)arg2 guid:(id)arg3;
@property(readonly, nonatomic) id bestAccountForStatus;
- (_Bool)canActivateAccounts:(id)arg1;
- (_Bool)canActivateAccount:(id)arg1;
- (_Bool)accountConnected:(id)arg1;
- (_Bool)accountConnecting:(id)arg1;
- (_Bool)activateAndHandleReconnectAccount:(id)arg1;
- (_Bool)activateAndHandleReconnectAccounts:(id)arg1;
- (_Bool)activateAccount:(id)arg1 force:(_Bool)arg2 locally:(_Bool)arg3;
- (_Bool)activateAccount:(id)arg1 force:(_Bool)arg2;
- (_Bool)activateAccount:(id)arg1;
- (_Bool)activateAccount:(id)arg1 locally:(_Bool)arg2;
- (_Bool)activateAccounts:(id)arg1;
- (_Bool)activateAccounts:(id)arg1 force:(_Bool)arg2 locally:(_Bool)arg3;
- (_Bool)deactivateAccount:(id)arg1 withDisable:(_Bool)arg2;
- (_Bool)deactivateAccounts:(id)arg1;
- (_Bool)_deactivateAccounts:(id)arg1;
- (_Bool)deactivateAccount:(id)arg1;
- (_Bool)_deactivateAccount:(id)arg1;
- (_Bool)deactivateAccounts:(id)arg1 withDisable:(_Bool)arg2;
- (_Bool)deleteAccount:(id)arg1 locally:(_Bool)arg2;
- (_Bool)deleteAccount:(id)arg1;
- (_Bool)addAccount:(id)arg1 locally:(_Bool)arg2;
- (_Bool)addAccount:(id)arg1 atIndex:(int)arg2 locally:(_Bool)arg3;
- (_Bool)addAccount:(id)arg1 atIndex:(int)arg2;
- (_Bool)addAccount:(id)arg1;
- (void)_accountRegistrationStatusChanged:(id)arg1;
- (void)_activeAccountChanged:(id)arg1;
- (void)setReadOnly:(_Bool)arg1;
- (_Bool)readOnly;
- (_Bool)accountActive:(id)arg1;
- (_Bool)canDeleteAccount:(id)arg1;
- (id)connectedAccountsWithCapability:(unsigned long long)arg1;
- (id)operationalAccountsWithCapability:(unsigned long long)arg1;
- (id)accountsWithCapability:(unsigned long long)arg1;
- (id)connectedAccountsForService:(id)arg1;
- (id)operationalAccountsForService:(id)arg1;
- (id)activeAccountsForService:(id)arg1;
- (id)accountsForService:(id)arg1;
@property(readonly, nonatomic) NSArray *operationalAccounts;
@property(readonly, nonatomic) NSArray *connectedAccounts;
@property(readonly, nonatomic) NSArray *activeAccounts;
@property(readonly, nonatomic) NSMutableArray *_accounts;
@property(readonly, nonatomic) int numberOfAccounts;
- (id)accountAtIndex:(int)arg1;
- (id)accountForUniqueID:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)autoLogin;
- (id)_bestOperationalAccountForSendingForService:(id)arg1;
- (id)__iCloudSystemAccountForService:(id)arg1;
- (id)_bestAccountForAddresses:(id)arg1;
- (id)_operationalPhoneAccountForService:(id)arg1;

@end

@interface IMAddressBook : NSObject
{
}

+ (_Bool)addressBookEnabled;
+ (void)setAddressBookEnabled:(_Bool)arg1;
+ (void)performBlock:(CDUnknownBlockType)arg1;
+ (id)_threadedABAddressBookLock;
+ (void *)_threadedABAddressBookRef;
+ (void *)abAddressBookRef;
+ (void *)_abAddressBookRef;
+ (id *)abAddressBook;
+ (void)_watchLocaleChanges;

@end

@interface IMChatItem : NSObject <NSCopying>
{
    IMItem *_item;
}

- (void)_setTimeAdded:(id)arg1;
- (id)_timeAdded;
- (id)_timeStale;
- (id)_item;
- (id)_initWithItem:(id)arg1;
@property(readonly, nonatomic) _Bool canDelete;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMTranscriptChatItem : IMChatItem
{
    NSString *_guid;
    unsigned char _contiguousType;
    unsigned char _attachmentContiguousType;
    unsigned int _contiguousLoaded:1;
}

@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
- (void)_setGUID:(id)arg1;
- (void)_setAttachmentContiguousType:(unsigned char)arg1;
- (void)_setContiguousType:(unsigned char)arg1;
- (void)_setContiguousLoaded:(_Bool)arg1;
- (_Bool)_isContiguousLoaded;
@property(readonly, nonatomic, getter=isContiguous) _Bool contiguous;
@property(readonly, nonatomic) unsigned char attachmentContiguousType;
@property(readonly, nonatomic) unsigned char contiguousType;
- (_Bool)isAttachmentContiguousWithChatItem:(id)arg1;
- (_Bool)isContiguousWithChatItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)dealloc;

@end

@interface IMMessageChatItem : IMTranscriptChatItem <IMMessageChatItem>
{
}

@property(readonly, retain, nonatomic) IMHandle *sender;
@property(readonly, retain, nonatomic) NSDate *time;
@property(readonly, nonatomic) _Bool failed;
@property(readonly, nonatomic) _Bool isFromMe;
@property(readonly, retain, nonatomic) IMMessage *message;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMMessagePartChatItem : IMMessageChatItem
{
    NSAttributedString *_text;
    long long _index;
}

+ (id)_messageItemWithPartsDeleted:(id)arg1 fromMessageItem:(id)arg2;
+ (id)_newMessagePartsForMessageItem:(id)arg1;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(readonly, copy, nonatomic) NSAttributedString *text; // @synthesize text=_text;
- (id)_initWithItem:(id)arg1 text:(id)arg2 index:(long long)arg3;
- (_Bool)canDelete;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMTextMessagePartChatItem : IMMessagePartChatItem
{
    NSAttributedString *_subject;
}

@property(readonly, copy, nonatomic) NSAttributedString *subject; // @synthesize subject=_subject;
- (id)_initWithItem:(id)arg1 text:(id)arg2 index:(long long)arg3 subject:(id)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMAggregateMessagePartChatItem : IMTextMessagePartChatItem
{
    NSArray *_subparts;
}

@property(readonly, copy, nonatomic) NSArray *subparts; // @synthesize subparts=_subparts;
- (id)_initWithItem:(id)arg1 subparts:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMAttachment : NSObject
{
    NSString *_guid;
    NSString *_path;
}

- (id)fileTransfer;
- (id)path;
- (id)guid;
- (id)description;
- (void)dealloc;
- (id)initWithPath:(id)arg1 guid:(id)arg2;

@end

@interface IMAttachmentMessagePartChatItem : IMMessagePartChatItem
{
    NSString *_transferGUID;
    unsigned int _wantsAttachmentContiguous:1;
}

@property(readonly, copy, nonatomic) NSString *transferGUID; // @synthesize transferGUID=_transferGUID;
- (id)_initWithItem:(id)arg1 text:(id)arg2 index:(long long)arg3 transferGUID:(id)arg4;
- (_Bool)isAttachmentContiguousWithChatItem:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMExpirableMessageChatItem : IMAttachmentMessagePartChatItem
{
}

@property(readonly, nonatomic) _Bool isSaved;
@property(readonly, nonatomic) _Bool isPlayed;

@end

@interface IMAudioMessageChatItem : IMExpirableMessageChatItem
{
}

- (_Bool)isAttachmentContiguousWithChatItem:(id)arg1;

@end

@interface IMBatchIDStatusQueryController : NSObject
{
    NSMutableArray *_imHandles;
    NSMutableArray *_imHandlesQueried;
    NSTimer *_nextQueryTimer;
    NSDate *_timeOfDeath;
    int _numberOfQueriesDone;
    _Bool _isDead;
}

- (void)_invalidateNextQueryTimer;
- (void)_nextQuery:(id)arg1;
- (void)invalidate;
- (void)setIMHandles:(id)arg1;
- (void)_scheduleNextQuery:(double)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMChat : NSObject
{
    NSString *_guid;
    NSString *_typingGUID;
    NSString *_currentLocationGUID;
    NSString *_identifier;
    IMAccount *_account;
    NSString *_displayName;
    NSString *_roomName;
    NSString *_roomNameWithoutSuffix;
    NSString *_lastAddressedHandleID;
    NSString *_groupID;
    NSDate *_dateCreated;
    NSDate *_dateModified;
    NSMutableDictionary *_unfinishedMessageMap;
    NSArray *_participants;
    NSMutableDictionary *_participantStates;
    id _typingIndicatorTimer;
    IMMessage *_invitationForPendingParticipants;
    NSMutableArray *_messagesPendingJoin;
    NSMutableSet *_guids;
    NSMutableDictionary *_itemMap;
    NSMutableDictionary *_chatProperties;
    NSMutableDictionary *_participantProperties;
    NSArray *_frequentReplies;
    NSArray *_attachments;
    IMTimingCollection *_timingCollection;
    NSMutableArray *_chatItems;
    NSMutableArray *_chatItemsUpdates;
    id <IMChatItemRules> _chatItemRules;
    IMScheduledUpdater *_chatItemsUpdater;
    IMChatItem *_nextStaleChatItem;
    IMMultiDict *_messageActionsMap;
    id <IMChatSendProgressDelegate> _sendProgressDelegate;
    NSTimer *_sendProgressTimer;
    NSMutableDictionary *_sendingItems;
    float _cachedSendProgress;
    long long _joinState;
    unsigned char _style;
    unsigned long long _numberOfMessagesToKeepLoaded;
    unsigned long long _dbFailedCount;
    unsigned long long _dbUnreadCount;
    void *_context;
    unsigned int _hasBeenConfigured:1;
    unsigned int _isFirstMessageInvitation:1;
    unsigned int _wasInvitationHandled:1;
    unsigned int _didSendAFinishedMessage:1;
    unsigned int _hasPendingMarkRead:1;
    unsigned int _isUpdatingChatItems:1;
    unsigned int _isRecording:1;
    BOOL _downgradeState;
    _Bool _ignoreDowngradeStatusUpdates;
    _Bool _forceMMS;
    IMScheduledUpdater *_downgradeStateUpdater;
}

+ (Class)chatItemRulesClass;
+ (void)setChatItemRulesClass:(Class)arg1;
+ (void)_initializeFMF;
@property(retain, nonatomic) IMMessage *invitationForPendingParticipants; // @synthesize invitationForPendingParticipants=_invitationForPendingParticipants;
@property(readonly, nonatomic) long long joinState; // @synthesize joinState=_joinState;
@property(readonly, nonatomic) NSDate *dateModified; // @synthesize dateModified=_dateModified;
@property(readonly, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *roomName; // @synthesize roomName=_roomName;
@property(nonatomic) void *contextInfo; // @synthesize contextInfo=_context;
@property(readonly, nonatomic) unsigned char chatStyle; // @synthesize chatStyle=_style;
@property(readonly, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(readonly, nonatomic) IMAccount *account; // @synthesize account=_account;
@property(readonly, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(retain, nonatomic, setter=_setGUIDs:) NSMutableSet *_guids; // @synthesize _guids;
@property(readonly, retain, nonatomic) NSString *groupID; // @synthesize groupID=_groupID;
@property(readonly, retain, nonatomic) NSString *lastAddressedHandleID; // @synthesize lastAddressedHandleID=_lastAddressedHandleID;
@property(retain, nonatomic, getter=_nextStaleChatItem, setter=_setNextStaleChatItem:) IMChatItem *nextStaleChatItem; // @synthesize nextStaleChatItem=_nextStaleChatItem;
@property(retain, nonatomic) NSArray *frequentReplies; // @synthesize frequentReplies=_frequentReplies;
- (id)_initWithDictionaryRepresentation:(id)arg1 items:(id)arg2 participantsHint:(id)arg3 accountHint:(id)arg4;
- (id)description;
- (void)_daemonDied:(id)arg1;
- (void)_daemonAlive:(id)arg1;
- (void)_accountControllerUpdated:(id)arg1;
- (_Bool)_sanityCheckAccounts;
- (void)addPendingParticipants:(id)arg1;
- (void)removeParticipants:(id)arg1 reason:(id)arg2;
- (void)inviteParticipants:(id)arg1 reason:(id)arg2;
- (void)_invitePendingParticipants;
- (void)_inviteParticipants:(id)arg1 reason:(id)arg2;
- (id)_pendingParticipants;
- (_Bool)canAddParticipants:(id)arg1;
- (_Bool)canAddParticipant:(id)arg1;
@property(readonly, nonatomic) _Bool canLeaveChat;
- (void)_addParticipant:(id)arg1;
- (void)remove;
- (void)leave;
- (void)join;
@property(retain, nonatomic) IMHandle *recipient;
- (void)setRecipient:(id)arg1 locally:(_Bool)arg2;
- (void)_setAccount:(id)arg1 locally:(_Bool)arg2;
- (void)_setAccount:(id)arg1;
- (_Bool)_hasCommunicatedOnService:(id)arg1;
- (void)setValue:(id)arg1 forProperty:(id)arg2 ofParticipant:(id)arg3;
- (id)valueForProperty:(id)arg1 ofParticipant:(id)arg2;
- (id)allPropertiesOfParticipant:(id)arg1;
- (void)setValue:(id)arg1 forChatProperty:(id)arg2;
- (id)valueForChatProperty:(id)arg1;
- (id)allChatProperties;
- (void)_setChatProperties:(id)arg1;
- (_Bool)_isDuplicate:(id)arg1;
- (void)markAllMessagesAsRead;
- (void)markMessagesAsRead:(id)arg1;
- (void)markMessageAsRead:(id)arg1;
- (void)_markItemsAsRead:(id)arg1;
- (void)_setTimerForReadMessageCache;
- (void)__clearReadMessageCache;
- (void)updateMessage:(id)arg1 flags:(unsigned long long)arg2;
- (void)updateMessage:(id)arg1;
- (_Bool)authorizedToSendCurrentLocationMessage;
- (_Bool)canSendCurrentLocationMessage;
- (_Bool)canSendTransfer:(id)arg1;
- (_Bool)canSendMessage:(id)arg1;
@property(nonatomic) _Bool localUserIsRecording;
@property(nonatomic) _Bool localUserIsTyping;
- (void)_setLocalUserIsTyping:(_Bool)arg1 recording:(_Bool)arg2 suppliedGUID:(id)arg3;
@property(readonly, nonatomic) NSString *localTypingMessageGUID;
- (void)_sendCurrentLocationMessageUsingLocationManager:(id)arg1;
- (void)sendCurrentLocationMessage;
- (void)sendMessage:(id)arg1;
- (void)_sendMessage:(id)arg1 adjustingSender:(_Bool)arg2 shouldQueue:(_Bool)arg3;
- (void)cancelMessage:(id)arg1;
- (void)declineInvitation;
- (void)acceptInvitation;
@property(readonly, nonatomic) _Bool hasUnhandledInvitation;
@property(readonly, nonatomic) NSString *roomNameWithoutSuffix;
@property(readonly, retain, nonatomic) NSString *persistentID;
- (void)_updateDisplayName:(id)arg1;
- (void)_setDisplayName:(id)arg1;
- (void)setRoomName:(id)arg1;
@property(readonly, nonatomic) unsigned long long overallChatStatus;
@property(readonly, nonatomic) _Bool canHaveMultipleParticipants;
@property(readonly, nonatomic) NSString *chatIdentifier;
- (void)_clearCachedIdentifier;
- (unsigned long long)stateForParticipant:(id)arg1;
- (id)participantsWithState:(unsigned long long)arg1;
- (id)_performQueryWithKey:(id)arg1 loadImmediately:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (void)_remapHandle:(id)arg1 toHandle:(id)arg2;
- (void)_showErrorMessage:(id)arg1;
- (void)_participant:(id)arg1 statusChanged:(int)arg2;
- (void)_setJoinState:(long long)arg1 quietly:(_Bool)arg2;
- (void)_setJoinState:(long long)arg1;
- (_Bool)_handleIncomingItem:(id)arg1 shouldQueue:(_Bool)arg2;
- (_Bool)_handleIncomingItem:(id)arg1;
- (void)_handleMessageGUIDDeletions:(id)arg1;
- (void)_setParticipantState:(unsigned long long)arg1 forHandle:(id)arg2 quietly:(_Bool)arg3;
- (void)_postNotification:(id)arg1 userInfo:(id)arg2 shouldLog:(_Bool)arg3;
- (void)_postNotification:(id)arg1 userInfo:(id)arg2;
- (void)_endTiming;
- (void)_startTiming:(id)arg1;
- (id)_timingCollection;
- (void)_accountLoggedOut:(id)arg1;
- (void)_unwatchHandleStatusChangedForHandle:(id)arg1;
- (void)_watchHandleStatusChangedForHandle:(id)arg1;
- (void)_handleHandleStatusChanged:(id)arg1;
- (void)_recomputeOverallChatStatusQuietly:(_Bool)arg1;
- (void)clear;
- (_Bool)deleteAllHistory;
@property(readonly, nonatomic) unsigned long long messageFailureCount;
@property(readonly, nonatomic) unsigned long long unreadMessageCount;
@property(readonly, nonatomic) unsigned long long messageCount;
@property(readonly, nonatomic) IMMessage *lastMessage;
@property(readonly, nonatomic) IMMessage *lastIncomingFinishedMessage;
@property(readonly, nonatomic) IMMessage *lastIncomingMessage;
@property(readonly, nonatomic) IMMessage *lastFinishedMessage;
- (id)messageForGUID:(id)arg1;
- (id)_itemForGUID:(id)arg1;
- (id)_itemsForGUIDs:(id)arg1;
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(_Bool)arg3 isHistoryQuery:(_Bool)arg4 limit:(unsigned long long)arg5;
- (void)_insertHistoricalMessages:(id)arg1 queryID:(id)arg2 isRefresh:(_Bool)arg3 isHistoryQuery:(_Bool)arg4;
- (void)_buildInitialChatItems:(id)arg1;
- (_Bool)_shouldAnnouncePeopleJoin;
- (id)_IMUnfinishedMapSenderGUIDToRemove:(id)arg1 requireFinished:(_Bool)arg2;
- (void)_setDBFailedCount:(unsigned long long)arg1;
- (void)_setDBUnreadCount:(unsigned long long)arg1;
- (void)_clearUnreadCount;
- (id)_messageActionsMap;
- (void)_unmapItem:(id)arg1;
- (void)_mapItem:(id)arg1;
@property(readonly, nonatomic) _Bool _shouldRegisterChat;
- (void)dealloc;
- (id)init;
- (void)_initialize;
- (id)_initWithGUID:(id)arg1 account:(id)arg2 style:(unsigned char)arg3 roomName:(id)arg4 displayName:(id)arg5 items:(id)arg6 participants:(id)arg7;
- (void)_setupObservation;
@property(nonatomic) _Bool forceMMS;
@property(readonly, nonatomic) _Bool suppressAccountRetargetingForGroupConversation;
- (void)_calculateDowngradeState;
- (void)_setAndIncrementDowngradeMarkersForManual:(_Bool)arg1;
- (void)_clearDowngradeMarkers;
- (id)_consecutiveDowngradeAttemptsViaManualDowngrades:(_Bool)arg1;
- (void)_calculateDowngradeStateTimerFired;
- (void)_updateDowngradeState:(BOOL)arg1 checkAgainInterval:(double)arg2;
- (void)_invalidateDowngradeState;
- (_Bool)isDowngraded;
- (void)_targetToService:(id)arg1 newComposition:(_Bool)arg2;
- (void)_setPreviousAccount:(id)arg1 forService:(id)arg2;
- (id)_previousAccountForService:(id)arg1;
- (_Bool)_chatHasValidAccount:(id)arg1 forService:(id)arg2;
- (_Bool)_accountIsOperational:(id)arg1 forService:(id)arg2;
- (void)_delayedInvalidateDowngradeState;
- (void)_handleIncomingCommand:(id)arg1;
- (void)_handleDeliveredCommand:(id)arg1;
- (_Bool)sendDowngradeNotificationTo:(id)arg1;
- (void)sendDowngradePingForMessage:(id)arg1 manualDowngrade:(_Bool)arg2;
- (void)refreshServiceForSending;
- (id)_privateInitWithAccount:(id)arg1 style:(unsigned char)arg2 roomName:(id)arg3 messages:(id)arg4 participants:(id)arg5;
- (void)deleteTransfers:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *attachments;
- (void)_setAttachments:(id)arg1;
- (id)loadFrequentRepliesLimit:(unsigned long long)arg1 loadImmediately:(_Bool)arg2;
- (id)loadMessagesUpToGUID:(id)arg1 date:(id)arg2 limit:(unsigned long long)arg3 loadImmediately:(_Bool)arg4;
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2 loadImmediately:(_Bool)arg3;
- (id)loadMessagesBeforeDate:(id)arg1 limit:(unsigned long long)arg2;
- (id)loadMessagesUpToGUID:(id)arg1 limit:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool hasMoreMessagesToLoad;
@property(nonatomic) unsigned long long numberOfMessagesToKeepLoaded;
- (void)_trimMessagesAsNeeded;
- (void)_trimItemsLeavingNumber:(unsigned long long)arg1;
- (void)_setTypingIndicatorTimeout;
- (void)_typingIndicatorTimedOut:(id)arg1;
- (void)_clearIncomingTypingIndicators;
- (void)_clearTypingIndicatorTimeout;
- (void)_updateTypingIndicatorTimeout;
- (id)chatItemsForItems:(id)arg1;
- (id)chatItemsForMessages:(id)arg1;
- (void)markChatItemAsPlayed:(id)arg1;
- (void)markChatItemAsSaved:(id)arg1;
- (void)deleteChatItems:(id)arg1;
- (void)_queueReplaceStaleChatItems;
- (void)_replaceStaleChatItems;
- (void)_removeChatItemsInRange:(struct _NSRange)arg1;
- (void)_replaceChatItemsWithChatItemsForItems:(id)arg1 isRefresh:(_Bool)arg2;
- (void)_replaceChatItemsForItem:(id)arg1 withChatItemsForItem:(id)arg2;
- (void)_removeChatItemsForItem:(id)arg1;
- (void)_insertChatItemsForItem:(id)arg1;
- (void)_appendChatItemsForItem:(id)arg1;
- (void)_updateChatItemsWithReason:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)updateChatItemsIfNeeded;
- (void)endHoldingUpdatesForAllKeys;
- (void)endHoldingUpdatesForKey:(id)arg1;
- (void)beginHoldingUpdatesForKey:(id)arg1;
- (void)_queueChatItemsUpdate:(CDUnknownBlockType)arg1;
- (void)_updateChatItems;
- (id)chatItems;
- (void)_sendProgressTimerFired:(id)arg1;
- (void)_scheduleSendProgressTimerIfNeeded;
- (void)_updateSendProgress;
- (void)_resetSendProgress;
- (float)_progressSending:(unsigned long long *)arg1 of:(unsigned long long *)arg2;
- (void)_unmapSendingItem:(id)arg1;
- (void)_mapSendingItem:(id)arg1;
- (_Bool)_hasSendingMessages;
@property(nonatomic) id <IMChatSendProgressDelegate> sendProgressDelegate;
- (void)_configureLocationShareItem:(id)arg1;
- (void)markAllLocationShareItemsAsUnactionable;
- (void)stopTrackingParticipantLocations;
- (void)startTrackingParticipantLocations;
- (void)stopSharingLocation;
- (void)shareLocationUntilDate:(id)arg1;
@property(readonly, nonatomic) _Bool allRecipientsSharingLocation;
@property(readonly, nonatomic) _Bool hasSiblingRecipientsSharingLocation;
@property(readonly, nonatomic) _Bool hasRecipientsSharingLocation;
@property(readonly, nonatomic) _Bool allRecipientsFollowingLocation;
@property(readonly, nonatomic) _Bool hasRecipientsFollowingLocation;
@property(readonly, retain, nonatomic) NSSet *allSiblingFMFHandles;
@property(readonly, retain, nonatomic) NSSet *fmfHandles;
@property(readonly, retain, nonatomic) IMChatRegistry *chatRegistry;
- (id)testChatItems;

@end

@interface IMChatHistoryController : NSObject
{
    NSMutableDictionary *_runningQueries;
}

+ (id)sharedInstance;
@property(retain) NSMutableDictionary *_runningQueries; // @synthesize _runningQueries;
- (void)databaseNoLongerFull;
- (void)databaseFull;
- (void)messageQuery:(id)arg1 finishedWithResult:(id)arg2 chatGUIDs:(id)arg3;
- (void)loadMessageWithGUID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface IMChatRegistry : NSObject <NSFastEnumeration>
{
    NSMutableArray *_allChats;
    NSMutableDictionary *_chatGUIDToCurrentThreadMap;
    NSMutableDictionary *_chatGUIDToInfoMap;
    NSMutableDictionary *_chatGUIDToChatMap;
    NSMutableDictionary *_threadNameToChatMap;
    NSMutableDictionary *_chatGUIDToiMessageSentOrReceivedMap;
    NSMutableArray *_allChatsInThreadNameMap;
    NSMutableArray *_pendingQueries;
    NSMutableArray *_waitingForQueries;
    NSString *_historyModificationStamp;
    IMTimer *_markAsReadTimer;
    double _timerStartTimeInterval;
    _Bool _firstLoad;
    _Bool _loading;
    _Bool _daemonHadTerminated;
    _Bool _wantsHistoryReload;
    _Bool _postMessageSentNotifications;
    unsigned long long _defaultNumberOfMessagesToLoad;
    unsigned long long _daemonUnreadCount;
    long long _daemonLastFailedMessageID;
    NSUserActivity *_userActivity;
}

+ (Class)messageClass;
+ (void)setMessageClass:(Class)arg1;
+ (Class)chatClass;
+ (void)setChatClass:(Class)arg1;
+ (Class)chatRegistryClass;
+ (void)setChatRegistryClass:(Class)arg1;
+ (id)sharedInstance;
@property(nonatomic, setter=_setPostMessageSentNotifications:) _Bool _postMessageSentNotifications; // @synthesize _postMessageSentNotifications;
@property(readonly, nonatomic) _Bool _isLoading; // @synthesize _isLoading=_loading;
@property(nonatomic, setter=_setDefaultNumberOfMessagesToLoad:) unsigned long long _defaultNumberOfMessagesToLoad; // @synthesize _defaultNumberOfMessagesToLoad;
- (_Bool)_firstLoad;
- (void)systemApplicationDidResume;
- (void)_clearMarkAsReadTimerIfNecessary;
- (void)_startMarkAsReadTimerIfNecessary;
- (void)_blockUntilQueriesComplete:(id)arg1;
- (void)__blockUntilQueriesComplete;
- (id)_chatsWithMessage:(id)arg1;
- (id)_allGUIDsForChat:(id)arg1;
- (void)handleIMChatParticipantsDidChange:(id)arg1;
- (id)_chatForChatDictionary:(id)arg1 items:(id)arg2 allowCreate:(_Bool)arg3 createdChat:(_Bool *)arg4 outGUID:(id *)arg5;
- (id)existingChatForRoom:(id)arg1 onAccount:(id)arg2 allowRetargeting:(_Bool)arg3;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(_Bool)arg2;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(_Bool)arg2 groupID:(id)arg3 displayName:(id)arg4 joinedChatsOnly:(_Bool)arg5;
- (id)existingChatForIMHandles:(id)arg1 allowRetargeting:(_Bool)arg2 groupID:(id)arg3;
- (id)existingChatForIMHandle:(id)arg1 allowRetargeting:(_Bool)arg2;
- (id)existingChatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)existingChatForIMHandles:(id)arg1;
- (id)existingChatForIMHandle:(id)arg1;
- (id)existingChatWithGUID:(id)arg1;
- (id)existingChatWithChatIdentifier:(id)arg1;
- (id)existingChatWithGroupID:(id)arg1;
- (id)_lookupExistingChatWithIMHandle:(id)arg1;
- (id)_existingChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (id)_existingChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 service:(id)arg3;
@property(readonly, nonatomic) NSArray *allExistingChats;
@property(readonly, nonatomic) unsigned long long numberOfExistingChats;
- (void)_setChatHasCommunicatedOveriMessage:(id)arg1;
- (_Bool)_hasChat:(id)arg1 forService:(id)arg2;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (long long)lastFailedMessageID;
- (unsigned long long)unreadCount;
- (id)_createdChatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)_createdChatForIMHandles:(id)arg1 style:(unsigned char)arg2 groupID:(id)arg3 displayName:(id)arg4 joinedChatsOnly:(_Bool)arg5;
- (id)_createdChatForIMHandle:(id)arg1;
- (id)_createdChatWithIdentifier:(id)arg1 style:(unsigned char)arg2 account:(id)arg3;
- (id)_allCreatedChats;
- (void)setActiveChatURL:(id)arg1;
- (id)chatForURL:(id)arg1 outMessageText:(id *)arg2 outRecipientIDs:(id *)arg3 outService:(id *)arg4 outMessageGUID:(id *)arg5;
- (id)messagesURLWithChat:(id)arg1 orHandles:(id)arg2 withMessageText:(id)arg3;
- (id)chatForRoom:(id)arg1 onAccount:(id)arg2;
- (id)chatForIMHandles:(id)arg1 chatName:(id)arg2;
- (id)chatForIMHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(_Bool)arg3;
- (id)chatForIMHandles:(id)arg1;
- (id)chatForIMHandle:(id)arg1;
- (void)_unregisterChatWithGUID:(id)arg1;
- (void)_unregisterChat:(id)arg1;
- (void)unregisterChatWithGUID:(id)arg1;
- (void)unregisterChat:(id)arg1;
- (void)_registerChat:(id)arg1 isIncoming:(_Bool)arg2 guid:(id)arg3;
- (void)_registerChatDictionary:(id)arg1 forChat:(id)arg2 isIncoming:(_Bool)arg3 newGUID:(id)arg4;
- (void)dealloc;
- (id)init;
- (id)_chatInstanceForGUID:(id)arg1;
- (void)_noteChatDealloc:(id)arg1;
- (void)_noteChatInit:(id)arg1;
- (void)_chat_loadAttachments:(id)arg1 queryID:(id)arg2;
- (void)_chat_loadFrequentReplies:(id)arg1 limit:(unsigned long long)arg2 queryID:(id)arg3;
- (void)_chat_clearHistory:(id)arg1 beforeGUID:(id)arg2 afterGUID:(id)arg3 queryID:(id)arg4;
- (void)_chat_loadHistory:(id)arg1 limit:(unsigned long long)arg2 beforeGUID:(id)arg3 afterGUID:(id)arg4 queryID:(id)arg5;
- (void)_chat:(id)arg1 updateDisplayName:(id)arg2;
- (void)_chat:(id)arg1 setValue:(id)arg2 forChatProperty:(id)arg3;
- (void)_chat:(id)arg1 setProperties:(id)arg2 ofParticipant:(id)arg3;
- (void)_chat_declineInvitation:(id)arg1;
- (void)_chat_remove:(id)arg1;
- (void)_chat_leave:(id)arg1;
- (void)_chat:(id)arg1 joinWithProperties:(id)arg2;
- (void)_chat:(id)arg1 removeParticipants:(id)arg2 reason:(id)arg3;
- (void)_chat:(id)arg1 inviteParticipants:(id)arg2 reason:(id)arg3;
- (void)_chat:(id)arg1 sendMessage:(id)arg2;
- (void)_chat:(id)arg1 sendSavedReceiptForMessage:(id)arg2;
- (void)_chat:(id)arg1 sendPlayedReceiptForMessage:(id)arg2;
- (void)_chat_storeItem:(id)arg1 inChat:(id)arg2;
- (void)_chat_sendReadReceiptForAllMessages:(id)arg1;
- (void)_chat:(id)arg1 sendReadReceiptForMessages:(id)arg2;
- (void)setupComplete;
- (void)_daemonReallyDied:(id)arg1;
- (void)setupComplete:(_Bool)arg1 info:(id)arg2;
- (void)_handleChatReconstructions:(id)arg1;
- (void)frequentRepliesQuery:(id)arg1 finishedWithResult:(id)arg2 limit:(unsigned long long)arg3;
- (void)frequentRepliesQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4 limit:(unsigned long long)arg5;
- (void)attachmentQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4;
- (void)historyQuery:(id)arg1 chatID:(id)arg2 services:(id)arg3 finishedWithResult:(id)arg4 limit:(unsigned long long)arg5;
- (void)historicalMessageGUIDsDeleted:(id)arg1 chatGUIDs:(id)arg2 queryID:(id)arg3;
- (void)lastFailedMessageIDChanged:(long long)arg1;
- (void)unreadCountChanged:(long long)arg1;
- (void)chat:(id)arg1 updated:(id)arg2;
- (void)_updateInfo:(id)arg1 forGUID:(id)arg2 updatingUnreadCount:(_Bool)arg3;
- (void)_updateUnreadCountForChat:(id)arg1;
- (void)chat:(id)arg1 displayNameUpdated:(id)arg2;
- (void)chat:(id)arg1 propertiesUpdated:(id)arg2;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 member:(id)arg5 statusChanged:(int)arg6;
- (void)leftChat:(id)arg1;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 statusChanged:(int)arg5 handleInfo:(id)arg6;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 error:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 updateProperties:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 invitationReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 notifySentMessage:(id)arg5 sendTime:(id)arg6;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageSent:(id)arg5;
- (void)_processMessageForAccount:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 message:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageUpdated:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5;
- (void)_account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messagesUpdated:(id)arg5;

@end

@interface IMDDController : NSObject
{
    NSObject<OS_dispatch_queue> *_scannerQueue;
}

+ (id)sharedInstance;
- (void)scanMessage:(id)arg1 waitUntilDone:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)_scanMessageUsingScanner:(id)arg1 attributedString:(id)arg2;
- (void)scanMessage:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)scannerQueue;
- (struct __DDScanner *)sharedScanner;
- (void)dealloc;
- (id)init;

@end

@interface IMDaemonController : NSObject
{
    id _delegate;
    IMRemoteObject<IMRemoteDaemonProtocol> *_remoteObject;
    NSMutableDictionary *_listenerMap;
    IMLocalObject *_localObject;
    IMDaemonListener *_daemonListener;
    NSMutableArray *_services;
    NSProtocolChecker *_protocol;
    NSString *_listenerID;
    NSObject<OS_dispatch_queue> *_listenerLockQueue;
    NSObject<OS_dispatch_queue> *_remoteDaemonLockQueue;
    NSObject<OS_dispatch_queue> *_localObjectLockQueue;
    NSObject<OS_dispatch_queue> *_remoteMessageQueue;
    NSRecursiveLock *_connectionLock;
    NSArray *_servicesToAllow;
    NSArray *_servicesToDeny;
    struct __CFRunLoopSource *_runLoopSource;
    NSLock *_blockingLock;
    _Bool _hasCheckedForDaemon;
    _Bool _preventReconnect;
    _Bool _inBlockingConnect;
    _Bool _acquiringDaemonConnection;
    _Bool _autoReconnect;
    _Bool _blocksConnectionAtResume;
    _Bool _hasBeenSuspended;
    unsigned int _gMyFZListenerCapabilities;
    unsigned int _cachedCapabilities;
    unsigned int _lastUpdatedCapabilities;
}

+ (void)_setApplicationWillTerminate;
+ (void)_blockUntilSendQueueIsEmpty;
+ (_Bool)_applicationWillTerminate;
+ (id)sharedController;
+ (id)sharedInstance;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *_remoteMessageQueue; // @synthesize _remoteMessageQueue;
@property(retain, setter=_setServicesToDeny:) NSArray *_servicesToDeny; // @synthesize _servicesToDeny;
@property(retain, setter=_setServicesToAllow:) NSArray *_servicesToAllow; // @synthesize _servicesToAllow;
@property(setter=__setCapabilities:) unsigned int _capabilities; // @synthesize _capabilities=_gMyFZListenerCapabilities;
@property(setter=_setAutoReconnect:) _Bool _autoReconnect; // @synthesize _autoReconnect;
@property(retain, nonatomic, setter=_setListenerID:) NSString *_listenerID; // @synthesize _listenerID;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(nonatomic, setter=_setBlocksConnectionAtResume:) _Bool _blocksConnectionAtResume; // @synthesize _blocksConnectionAtResume;
@property(readonly, nonatomic) IMDaemonListener *listener; // @synthesize listener=_daemonListener;
- (void)systemApplicationDidResume;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemApplicationDidSuspend;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)setDaemonLogsOutWithoutStatusListeners:(_Bool)arg1;
- (void)setDaemonTerminatesWithoutListeners:(_Bool)arg1;
- (void)listener:(id)arg1 setValue:(id)arg2 ofPersistentProperty:(id)arg3;
- (void)listener:(id)arg1 setValue:(id)arg2 ofProperty:(id)arg3;
- (void)remoteObjectDiedNotification:(id)arg1;
- (void)localObjectDiedNotification:(id)arg1;
- (void)_setCapabilities:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int capabilities;
- (void)listener:(id)arg1 setListenerCapabilities:(unsigned int)arg2;
- (void)_remoteObjectCleanup;
- (void)_localObjectCleanup;
- (_Bool)localObjectExists;
- (_Bool)remoteObjectExists;
- (_Bool)__isRemoteObjectValidOnQueue:(id)arg1;
- (_Bool)__isLocalObjectValidOnQueue:(id)arg1;
- (void)_noteSetupComplete;
- (void)blockUntilConnected;
@property(readonly, nonatomic) _Bool isConnected;
@property(readonly, nonatomic) _Bool isConnecting;
- (_Bool)_acquiringDaemonConnection;
- (void)_addressBookChanged:(id)arg1;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2 forAccount:(id)arg3;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2;
- (void)setMyProfile:(id)arg1;
- (void)setMyPicture:(id)arg1 smallPictureData:(id)arg2;
- (id)_remoteObject;
- (_Bool)setCapabilities:(unsigned int)arg1 forListenerID:(id)arg2;
- (unsigned int)capabilitiesForListenerID:(id)arg1;
- (_Bool)removeListenerID:(id)arg1;
- (_Bool)hasListenerForID:(id)arg1;
- (_Bool)addListenerID:(id)arg1 capabilities:(unsigned int)arg2;
- (void)_listenerSetUpdated;
- (void)sendABInformationToDaemon;
- (_Bool)connectToDaemonWithLaunch:(_Bool)arg1 capabilities:(unsigned int)arg2 blockUntilConnected:(_Bool)arg3;
- (_Bool)connectToDaemon;
- (_Bool)connectToDaemonWithLaunch:(_Bool)arg1;
- (void)_connectToDaemonWithLaunch:(_Bool)arg1 capabilities:(unsigned int)arg2;
- (void)disconnectFromDaemon;
- (void)_disconnectFromDaemonWithForce:(_Bool)arg1;
- (void)disconnectFromDaemonWithForce:(_Bool)arg1;
- (void)_blockUntilSendQueueIsEmpty;
- (_Bool)_makeConnectionWithLaunch:(_Bool)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_handleDaemonException:(id)arg1;
- (void)_agentDidLaunchNotification:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMDaemonListener : NSObject
{
    NSMutableDictionary *_properties;
    NSMutableDictionary *_persistentProperties;
    NSMutableArray *_deferredChatMessages;
    NSMutableArray *_handlers;
    NSProtocolChecker *_protocol;
    NSMutableDictionary *_services;
    NSDate *_myIdleSince;
    NSData *_myPicture;
    NSMutableDictionary *_contexts;
    NSString *_myStatusMessage;
    NSString *_myNowPlayingString;
    unsigned long long _myStatus;
    unsigned long long _vcCapabilities;
    _Bool _setupComplete;
    _Bool _postedSetupComplete;
    _Bool _holdingChatMessages;
    _Bool _hidingDisconnect;
    _Bool _hasPendingProcessChange;
}

@property(readonly, nonatomic) NSDictionary *persistentProperties; // @synthesize persistentProperties=_persistentProperties;
@property(readonly, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
@property(readonly, nonatomic) _Bool hasPostedSetupComplete; // @synthesize hasPostedSetupComplete=_postedSetupComplete;
@property(readonly, nonatomic) _Bool shouldHoldChatMessages; // @synthesize shouldHoldChatMessages=_holdingChatMessages;
@property(readonly, nonatomic) unsigned long long vcCapabilities; // @synthesize vcCapabilities=_vcCapabilities;
@property(readonly, nonatomic) NSString *myStatusMessage; // @synthesize myStatusMessage=_myStatusMessage;
@property(readonly, nonatomic) _Bool isSetupComplete; // @synthesize isSetupComplete=_setupComplete;
@property(readonly, nonatomic) NSArray *handlers; // @synthesize handlers=_handlers;
@property(nonatomic, setter=_setHidingDisconnect:) _Bool _hidingDisconnect; // @synthesize _hidingDisconnect;
@property(readonly, retain, nonatomic) NSMutableDictionary *_contexts; // @synthesize _contexts;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)databaseNoLongerFull;
- (void)databaseFull;
- (void)databaseUpdated:(id)arg1;
- (void)_deferredSetup:(id)arg1;
- (void)setupComplete:(_Bool)arg1 info:(id)arg2;
- (void)account:(id)arg1 defaults:(id)arg2 blockList:(id)arg3 allowList:(id)arg4 blockingMode:(unsigned int)arg5 blockIdleStatus:(_Bool)arg6 status:(id)arg7 capabilities:(unsigned long long)arg8 serviceLoginStatus:(unsigned int)arg9 loginStatusMessage:(id)arg10;
- (void)service:(id)arg1 properties:(id)arg2 defaults:(id)arg3 defaultAccountSettings:(id)arg4 allAccounts:(id)arg5 activeAccounts:(id)arg6;
- (void)services:(id)arg1 properties:(id)arg2 persistentProperties:(id)arg3;
- (void)account:(id)arg1 status:(id)arg2 capabilities:(unsigned long long)arg3 serviceLoginStatus:(unsigned int)arg4 loginStatusMessage:(id)arg5;
- (void)persistentProperty:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)_cacheValue:(id)arg1 forPersistentProperty:(id)arg2;
- (id)valueOfPersistentProperty:(id)arg1;
- (void)property:(id)arg1 changedTo:(id)arg2 from:(id)arg3;
- (void)_cacheValue:(id)arg1 forProperty:(id)arg2;
- (id)valueOfProperty:(id)arg1;
- (id)_stampForContext:(id)arg1;
- (void)_setStamp:(id)arg1 forContext:(id)arg2;
- (void)account:(id)arg1 postedError:(id)arg2;
- (void)account:(id)arg1 blockIdleStatusChanged:(_Bool)arg2;
- (void)account:(id)arg1 blockingModeChanged:(unsigned int)arg2;
- (void)account:(id)arg1 allowListChanged:(id)arg2;
- (void)account:(id)arg1 blockListChanged:(id)arg2;
- (void)account:(id)arg1 handleSubscriptionRequestFrom:(id)arg2 withMessage:(id)arg3;
- (void)account:(id)arg1 groupsChanged:(id)arg2 error:(id)arg3;
- (void)fileTransfer:(id)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;
- (void)fileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)fileTransfer:(id)arg1 createdWithProperties:(id)arg2;
- (void)standaloneFileTransferRegistered:(id)arg1;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 messageReceived:(id)arg5;
- (void)account:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3 chatProperties:(id)arg4 invitationReceived:(id)arg5;
- (void)account:(id)arg1 buddyInfo:(id)arg2 commandDelivered:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 buddyInfo:(id)arg2 commandReceived:(id)arg3 properties:(id)arg4;
- (void)account:(id)arg1 buddyProperties:(id)arg2 buddyPictures:(id)arg3;
- (void)account:(id)arg1 buddyPictureChanged:(id)arg2 imageData:(id)arg3 imageHash:(id)arg4;
- (void)account:(id)arg1 buddyPropertiesChanged:(id)arg2;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)account:(id)arg1 capabilitiesChanged:(unsigned long long)arg2;
- (void)account:(id)arg1 statusChanged:(id)arg2;
- (void)account:(id)arg1 loginStatusChanged:(unsigned int)arg2 message:(id)arg3 reason:(int)arg4 properties:(id)arg5;
- (void)accountRemoved:(id)arg1;
- (void)accountAdded:(id)arg1 defaults:(id)arg2 service:(id)arg3;
- (void)account:(id)arg1 defaultsChanged:(id)arg2;
- (void)activeAccountsChanged:(id)arg1 forService:(id)arg2;
- (void)defaultsChanged:(id)arg1 forService:(id)arg2;
- (void)releaseHeldChatMessages;
- (void)holdChatMessages;
@property(readonly, nonatomic) _Bool isHoldingChatMessages;
- (void)_deferNotification:(id)arg1;
- (void)_processDeferredInvitationDictionary:(id)arg1;
@property(readonly, nonatomic) unsigned int myIdleTime;
@property(readonly, nonatomic) unsigned long long myStatus;
- (void)_processMyStatusChanged;
- (void)_reallyProcessMyStatusChanged;
- (id)serviceWithName:(id)arg1;
@property(readonly, nonatomic) NSArray *allServices;
- (void)removeHandler:(id)arg1;
- (void)addHandler:(id)arg1;
- (void)_noteDisconnected;
- (void)dealloc;
- (id)init;

@end

@interface IMDateChatItem : IMTranscriptChatItem
{
}

- (id)_initWithItem:(id)arg1;
@property(readonly, retain, nonatomic) NSDate *date;

@end

@interface IMEmoteMessageChatItem : IMMessageChatItem
{
}

- (id)_initWithItem:(id)arg1;
@property(readonly, copy, nonatomic) NSAttributedString *text;

@end

@interface IMErrorMessagePartChatItem : IMAttachmentMessagePartChatItem
{
}

@end

@interface IMFMFSession : NSObject <FMFSessionDelegate>
{
    FMFSession *_session;
    NSString *_establishingAccountID;
    FMFDevice *_activeDevice;
}

+ (id)sharedInstance;
@property(retain, nonatomic) FMFDevice *activeDevice; // @synthesize activeDevice=_activeDevice;
@property(retain, nonatomic) NSString *establishingAccountID; // @synthesize establishingAccountID=_establishingAccountID;
@property(retain, nonatomic) FMFSession *session; // @synthesize session=_session;
- (id)fmfGroupIdGroup;
- (id)fmfGroupIdOneToOne;
- (Class)__FMFSessionClass;
- (void)_postNotification:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)_postRelationshipStatusDidChangeNotificationWithHandle:(id)arg1;
- (id)_callerIDForChat:(id)arg1;
- (id)_bestAccountForAddresses:(id)arg1;
- (void)didUpdateHidingStatus:(_Bool)arg1;
- (void)didChangeActiveLocationSharingDevice:(id)arg1;
- (void)didStopAbilityToGetLocationForHandle:(id)arg1;
- (void)didStartAbilityToGetLocationForHandle:(id)arg1;
- (void)didStopSharingMyLocationWithHandle:(id)arg1;
- (void)didStartSharingMyLocationWithHandle:(id)arg1;
- (void)friendshipWasRemoved:(id)arg1;
- (void)friendshipRequestReceived:(id)arg1;
- (void)didReceiveLocation:(id)arg1;
- (void)makeThisDeviceActiveDevice;
- (void)_updateActiveDevice;
- (id)timedOfferExpirationForChat:(id)arg1;
- (_Bool)allChatParticipantsFollowingMyLocation:(id)arg1;
- (_Bool)chatHasParticipantsFollowingMyLocation:(id)arg1;
- (_Bool)fmfHandleIsFollowingMyLocation:(id)arg1;
- (_Bool)handleIsFollowingMyLocation:(id)arg1;
- (_Bool)allChatParticipantsSharingLocationWithMe:(id)arg1;
- (_Bool)chatHasSiblingParticipantsSharingLocationWithMe:(id)arg1;
- (_Bool)chatHasParticipantsSharingLocationWithMe:(id)arg1;
- (_Bool)fmfHandleIsSharingLocationWithMe:(id)arg1;
- (_Bool)handleIsSharingLocationWithMe:(id)arg1;
- (void)refreshLocationForChat:(id)arg1;
- (void)refreshLocationForHandle:(id)arg1 inChat:(id)arg2;
- (id)locationForHandleOrSibling:(id)arg1;
- (id)locationForFMFHandle:(id)arg1;
- (id)locationForHandle:(id)arg1;
- (void)stopSharingWithChat:(id)arg1;
- (void)startSharingWithChat:(id)arg1 untilDate:(id)arg2;
- (void)stopTrackingLocationForChat:(id)arg1;
- (void)stopTrackingLocationForHandle:(id)arg1;
- (void)startTrackingLocationForChat:(id)arg1;
- (void)startTrackingLocationForHandle:(id)arg1;
- (void)sendMappingPacket:(id)arg1 toHandle:(id)arg2;
- (id)allSiblingFMFHandlesForChat:(id)arg1;
- (id)fmfHandlesForChat:(id)arg1;
@property(readonly, nonatomic) _Bool disableLocationSharing;
@property(readonly, nonatomic) _Bool restrictLocationSharing;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMFileTransferCenter : NSObject
{
    NSMutableDictionary *_guidToTransferMap;
    NSMutableDictionary *_guidToRemovedTransferMap;
    NSMutableDictionary *_accountIDToTransferGUIDsMap;
    NSMutableArray *_preauthorizedInfos;
    NSMutableArray *_preauthorizedGUIDs;
    NSMutableSet *_activeTransfers;
    NSMutableSet *_pendingTransfers;
}

+ (Class)fileTransferClass;
+ (Class)transferCenterClass;
+ (void)setTransferCenterClass:(Class)arg1;
+ (id)sharedInstance;
- (void)_handleFileTransfer:(id)arg1 updatedWithCurrentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3 averageTransferRate:(unsigned long long)arg4;
- (void)_handleFileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)_handleFileTransfer:(id)arg1 createdWithProperties:(id)arg2;
- (void)_handleAllFileTransfers:(id)arg1;
- (void)_handleStandaloneFileTransferRegistered:(id)arg1;
- (void)acceptFileTransferIfPreauthorzed:(id)arg1;
- (_Bool)wasFileTransferPreauthorized:(id)arg1;
- (void)preauthorizeFileTransferFromOtherPerson:(id)arg1 account:(id)arg2 filename:(id)arg3 saveToPath:(id)arg4;
- (_Bool)isFileTransfer:(id)arg1 preauthorizedWithDictionary:(id)arg2;
- (void)clearFinishedTransfers;
@property(readonly, nonatomic) NSArray *orderedTransfersGUIDs;
@property(readonly, nonatomic) NSArray *orderedTransfers;
@property(readonly, nonatomic) NSArray *activeTransferGUIDs;
@property(readonly, nonatomic) NSArray *activeTransfers;
@property(readonly, nonatomic) NSDictionary *transfers;
- (id)transfersForAccount:(id)arg1;
- (void)retargetTransfer:(id)arg1 toPath:(id)arg2;
- (void)deleteTransfer:(id)arg1;
- (void)removeTransfer:(id)arg1;
- (void)stopTransfer:(id)arg1;
- (void)acceptTransfer:(id)arg1;
- (void)acceptTransfer:(id)arg1 withPath:(id)arg2 autoRename:(_Bool)arg3 overwrite:(_Bool)arg4;
- (void)sendTransfer:(id)arg1;
- (id)transferForGUID:(id)arg1 includeRemoved:(_Bool)arg2;
- (id)transferForGUID:(id)arg1;
- (id)chatForTransfer:(id)arg1;
- (void)assignTransfer:(id)arg1 toHandle:(id)arg2;
- (void)assignTransfer:(id)arg1 toMessage:(id)arg2 account:(id)arg3;
- (_Bool)registerGUID:(id)arg1 forNewOutgoingTransferWithLocalURL:(id)arg2;
- (id)guidForNewOutgoingTransferWithLocalURL:(id)arg1;
- (_Bool)doesLocalURLRequireArchiving:(id)arg1 toHandle:(id)arg2;
- (void)_addTransfer:(id)arg1;
- (void)_addTransfer:(id)arg1 toAccount:(id)arg2;
- (void)_clearTransfers;
- (void)_removeAllActiveTransfers;
- (void)_removeActiveTransfer:(id)arg1;
- (void)_addActiveTransfer:(id)arg1;
@property(readonly, nonatomic) _Bool hasActiveFileTransfers;
- (void)acknowledgeAllPendingTransfers;
- (void)acknowledgePendingTransfer:(id)arg1;
- (void)_removePendingTransfer:(id)arg1;
- (void)_addPendingTransfer:(id)arg1;
@property(readonly, nonatomic) _Bool hasPendingFileTransfers;
- (void)dealloc;

@end

@interface IMGroupActionChatItem : IMTranscriptChatItem
{
    IMHandle *_sender;
}

@property(readonly, retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
- (id)_initWithItem:(id)arg1 sender:(id)arg2;
@property(readonly, nonatomic) long long actionType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMGroupActionItem (IMTranscriptChatItemRules)
- (id)_newChatItems;
@end

@interface IMGroupTitleChangeChatItem : IMTranscriptChatItem
{
    IMHandle *_sender;
}

@property(readonly, retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
- (id)_initWithItem:(id)arg1 sender:(id)arg2;
@property(readonly, copy, nonatomic) NSString *title;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMGroupTitleChangeItem (IMTranscriptChatItemRules)
- (id)_newChatItems;
@end

@interface IMHandle : IMDirectlyObservableObject <NSCoding>
{
    NSString *_guid;
    IMAccount *_account;
    NSString *_id;
    NSString *_uncanonicalID;
    NSString *_countryCode;
    NSDictionary *_otherServiceIDs;
    NSDate *_idleSince;
    NSDate *_feedUpdatedDate;
    NSDictionary *_extraProps;
    NSDictionary *_certs;
    NSSet *_groups;
    IMPerson *_person;
    NSString *_abFirstName;
    NSString *_abLastName;
    NSString *_abFullName;
    NSString *_abNickname;
    NSString *_displayID;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_fullName;
    NSString *_nickname;
    NSArray *_emails;
    NSString *_normalizedFormOfID;
    NSString *_IDWithoutResource;
    NSString *_IDWithTrimmedServer;
    NSString *_uniqueName;
    NSData *_pictureData;
    NSString *_statusMsg;
    NSString *_processedStatusMsg;
    NSAttributedString *_richStatusMsg;
    NSDate *_whenWentOffline;
    NSDate *_whenStatusChanged;
    NSString *_prevStatusMsg;
    NSMutableArray *_notificationNameQueue;
    NSMutableArray *_notificationQueue;
    NSURL *_statusURL;
    struct __CFPhoneNumber *_phoneNumberRef;
    NSString *_formattedNumber;
    _Bool _hasCheckedPhoneNumber;
    unsigned long long _status;
    unsigned long long _prevStatus;
    unsigned long long _capabilities;
    unsigned int _authRequestStatus;
    unsigned long long _resourceIndex;
    long long _IDStatus;
    _Bool _isRetainingAccount;
    _Bool _blockNotifications;
    _Bool _hasTemporaryWatch;
    _Bool _isMobile;
    _Bool _isBot;
    _Bool _isAnonymous;
    _Bool _beingTornDown;
    _Bool _hasCheckedCardMap;
    _Bool _isRegistered;
    long long _priority;
    int _addressBookIdentifier;
    int _notificationQueueCount;
    NSURL *_statusMessageURL;
}

+ (id)filterIMHandlesForBestAccountSiblings:(id)arg1;
+ (id)filterIMHandlesForAccountSiblings:(id)arg1 onAccount:(id)arg2;
+ (id)bestIMHandleInArray:(id)arg1;
+ (id)imHandlesForIMPerson:(id)arg1;
+ (id)nameOfStatus:(unsigned long long)arg1;
+ (void)_loadStatusNames;
+ (_Bool)notificationsEnabled;
+ (void)setNotificationsEnabled:(_Bool)arg1;
@property(readonly, nonatomic) int addressBookIdentifier; // @synthesize addressBookIdentifier=_addressBookIdentifier;
@property(retain, nonatomic) NSURL *statusMessageAsURL; // @synthesize statusMessageAsURL=_statusMessageURL;
@property(nonatomic) long long IDStatus; // @synthesize IDStatus=_IDStatus;
@property(readonly, nonatomic) _Bool isBot; // @synthesize isBot=_isBot;
@property(readonly, nonatomic) _Bool isMobile; // @synthesize isMobile=_isMobile;
@property(retain, nonatomic) NSDictionary *otherServiceIDs; // @synthesize otherServiceIDs=_otherServiceIDs;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
@property(readonly, retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, retain, nonatomic) IMAccount *account; // @synthesize account=_account;
@property(readonly, retain, nonatomic) NSString *uniqueName; // @synthesize uniqueName=_uniqueName;
@property(readonly, retain, nonatomic) NSString *ID; // @synthesize ID=_id;
@property(readonly, retain, nonatomic) NSData *pictureData; // @synthesize pictureData=_pictureData;
@property(readonly, retain, nonatomic) NSAttributedString *richStatusMessage; // @synthesize richStatusMessage=_richStatusMsg;
@property(readonly, retain, nonatomic) NSString *previousStatusMessage; // @synthesize previousStatusMessage=_prevStatusMsg;
@property(readonly, retain, nonatomic) NSDate *feedUpdatedDate; // @synthesize feedUpdatedDate=_feedUpdatedDate;
@property(readonly, nonatomic) unsigned long long previousStatus; // @synthesize previousStatus=_prevStatus;
@property(readonly, nonatomic) unsigned int authRequestStatus; // @synthesize authRequestStatus=_authRequestStatus;
@property(readonly, retain, nonatomic) NSDictionary *extraProperties; // @synthesize extraProperties=_extraProps;
@property(readonly, retain, nonatomic) NSURL *statusURL; // @synthesize statusURL=_statusURL;
@property(setter=_setIsRegisteredWithRegistrar:) _Bool _isRegisteredWithRegistrar; // @synthesize _isRegisteredWithRegistrar=_isRegistered;
@property(retain, nonatomic) NSString *originalID; // @synthesize originalID=_uncanonicalID;
- (void)sendNotificationABPersonChanged;
- (id)description;
- (void)setCustomPictureData:(id)arg1 key:(id)arg2;
@property(retain, nonatomic) NSData *customPictureData;
- (void)customPictureDataChanged:(id)arg1 key:(id)arg2;
- (void)_imPersonPictureChanged:(id)arg1;
- (void)_sendCommand:(id)arg1 properties:(id)arg2;
- (void)_sendAutomationData:(id)arg1 properties:(id)arg2;
@property(readonly, nonatomic) _Bool hasMultiwayAudio;
@property(readonly, nonatomic) _Bool hasAudio;
@property(readonly, nonatomic) _Bool hasMultiwayVideo;
@property(readonly, nonatomic) _Bool hasVideo;
@property(readonly, nonatomic) _Bool isConferenceAvailable;
@property(readonly, nonatomic) _Bool hasConferencing;
@property(readonly, nonatomic) _Bool supportsARDMuxing;
- (_Bool)hasCapability:(unsigned long long)arg1;
- (_Bool)_setCapabilities:(unsigned long long)arg1;
- (void)setCapabilities:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long capabilities;
- (id)_bestChatSibling;
- (id)_chatSiblingsArray;
- (id)_chatSiblings;
- (_Bool)_isChatSiblingOf:(id)arg1;
- (_Bool)isSiblingOf:(id)arg1;
- (_Bool)isAccountSiblingOf:(id)arg1;
@property(readonly, retain, nonatomic) NSSet *siblings;
- (id)chatSiblingsArray;
- (id)existingChatSiblingsArray;
@property(readonly, retain, nonatomic) NSArray *accountSiblingsArray;
@property(readonly, retain, nonatomic) NSArray *existingAccountSiblingsArray;
@property(readonly, retain, nonatomic) NSArray *siblingsArray;
@property(readonly, nonatomic) _Bool hasOtherSiblings;
- (_Bool)matchesIMHandle:(id)arg1;
- (long long)compareAccountNames:(id)arg1;
- (long long)compareNormalizedIDs:(id)arg1;
- (long long)compareIDs:(id)arg1;
- (long long)compareStatus:(id)arg1;
- (long long)compareLastNames:(id)arg1;
- (long long)compareFirstNames:(id)arg1;
- (id)_nameForComparisonPreferFirst:(_Bool)arg1;
@property(readonly, nonatomic) double timeSinceStatusChanged;
@property(readonly, nonatomic) double timeSinceWentOffline;
- (void)setStatus:(unsigned long long)arg1 message:(id)arg2 richMessage:(id)arg3;
- (void)_clearStatusMessageURLCache;
@property(readonly, retain, nonatomic) NSString *statusMessage;
- (void)_filterStatusMessage;
@property(readonly, retain, nonatomic) NSString *idleString;
@property(readonly, retain, nonatomic) NSString *offlineString;
- (void)setStatusURLFromString:(id)arg1;
- (void)setFeedUpdatedDate:(id)arg1;
- (void)setIdleSince:(id)arg1;
- (void)_setIDStatus:(long long)arg1;
- (void)requestIDStatus;
@property(readonly, nonatomic) double idleTime;
@property(readonly, retain, nonatomic) NSString *nameOfStatus;
- (void)statusChanged:(unsigned long long)arg1;
- (void)statusMessageChanged:(id)arg1;
- (void)statusChanged:(unsigned long long)arg1 message:(id)arg2;
- (void)setPersonStatus:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long status;
- (void)setAuthRequestStatus:(unsigned int)arg1;
- (void)_updateStatusBasedOnAuthRequestStatus;
- (void)_stopRetainingAccount:(id)arg1;
- (void)_removeAccountReference:(id)arg1;
@property(readonly, nonatomic) NSArray *dependentIMHandles;
@property(readonly, nonatomic) id existingIMHandleWithoutResource;
@property(readonly, nonatomic) id imHandleWithoutResource;
@property(readonly, retain, nonatomic) NSString *IDWithoutResource;
@property(readonly, retain, nonatomic) NSString *resource;
@property(readonly, retain, nonatomic) NSString *accountTypeName;
- (unsigned int)sortOrderInGroup:(id)arg1;
@property(nonatomic, setter=setBlocked:) _Bool isBlocked;
@property(readonly, nonatomic) _Bool isVisiblyBlocked;
- (_Bool)_isMyIDInList:(id)arg1;
- (void)propertiesChanged:(id)arg1;
- (void)_setExtraProperties:(id)arg1;
@property(readonly, nonatomic) id bestSibling;
- (id)bestIMHandleForAccount:(id)arg1 onService:(id)arg2 inGroup:(id)arg3 otherThan:(id)arg4;
@property(readonly, retain, nonatomic) id bestAccountSibling;
- (id)bestIMHandleForAccount:(id)arg1;
- (id)bestIMHandleForService:(id)arg1;
- (_Bool)isBetterThanIMHandle:(id)arg1;
- (void)setHasTemporaryWatch:(_Bool)arg1;
@property(readonly, nonatomic) _Bool watchingIMHandle;
- (void)setValue:(id)arg1 ofExtraProperty:(id)arg2;
- (void)requestValueOfProperty:(id)arg1;
- (id)_formattedPhoneNumber;
- (void)_updateOriginalID:(id)arg1;
- (struct __CFPhoneNumber *)phoneNumberRef;
- (void)_createPhoneNumberRefIfNeeded;
@property(readonly, nonatomic) _Bool isLoginIMHandle;
@property(readonly, nonatomic) _Bool isLoginIMHandleForAnyAccount;
@property(readonly, nonatomic) _Bool isBuddy;
@property(readonly, retain, nonatomic) NSString *server;
@property(readonly, nonatomic) _Bool hasResource;
@property(readonly, nonatomic) _Bool hasLocation;
@property(readonly, nonatomic) _Bool hasServer;
@property(readonly, retain, nonatomic) NSString *mobileDeviceName;
- (void)setIsBot:(_Bool)arg1;
- (void)setIsMobile:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isSystemUser;
@property(readonly, nonatomic) _Bool canBeAdded;
- (void)setEmails:(id)arg1;
- (void)setEmail:(id)arg1;
- (void)setFirstName:(id)arg1 lastName:(id)arg2;
@property(readonly, retain, nonatomic) NSArray *emails;
- (void)setEmails:(id)arg1 andUpdateABPerson:(_Bool)arg2;
@property(readonly, retain, nonatomic) NSString *email;
- (void)setEmail:(id)arg1 andUpdateABPerson:(_Bool)arg2;
- (void)setFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3 andUpdateABPerson:(_Bool)arg4;
- (void)setLocalNickname:(id)arg1;
- (void)setImageData:(id)arg1;
- (void)_setBaseFirstName:(id)arg1 lastName:(id)arg2 fullName:(id)arg3;
- (void)_setABPersonFirstName:(id)arg1 lastName:(id)arg2;
@property(readonly, retain, nonatomic) NSString *lastName;
@property(readonly, retain, nonatomic) NSString *firstName;
@property(readonly, retain, nonatomic) NSString *nickname;
@property(readonly, nonatomic) _Bool hasName;
- (void)resetUniqueName;
@property(readonly, retain, nonatomic) NSString *nameAndID;
@property(readonly, retain, nonatomic) NSString *fullName;
@property(readonly, retain, nonatomic) NSString *_displayNameWithAbbreviation;
- (id)displayNameForChat:(id)arg1;
@property(readonly, retain, nonatomic) NSString *name;
@property(readonly, retain, nonatomic) NSString *normalizedID;
@property(readonly, retain, nonatomic) NSString *displayID;
- (id)_nameUsingUnique:(_Bool)arg1;
- (_Bool)_hasABName;
- (_Bool)_hasServiceNameProperties;
- (id)_IDWithTrimmedServer;
@property(retain, nonatomic, setter=setIMPerson:) IMPerson *person; // @synthesize person=_person;
@property(readonly, retain, nonatomic) IMPerson *_cachedPerson;
- (void)_clearABPersonLookup;
- (void)resetABProperties;
- (void)_clearABProperties;
@property(readonly, nonatomic) _Bool areABPropertiesRecent;
- (id)_abPersonCreateIfNeeded;
- (_Bool)resetABPerson;
- (void)clearABPerson;
- (unsigned long long)hash;
@property(readonly, retain, nonatomic) IMServiceImpl *service;
@property(readonly, retain, nonatomic) NSString *nameAndEmail;
- (void)setUniqueName:(id)arg1;
- (void)postNotificationName:(id)arg1;
- (void)_postNotificationName:(id)arg1 userInfo:(id)arg2;
- (void)_postNotification:(id)arg1;
- (void)_registerForNotifications;
@property(readonly, nonatomic) _Bool isAnonymous;
- (void)setAnonymous:(_Bool)arg1;
@property(readonly, retain, nonatomic) NSSet *groups;
@property(readonly, retain, nonatomic) NSArray *groupsArray;
- (id)imHandleForOtherAccount:(id)arg1;
@property(readonly, nonatomic) _Bool canBeDeleted;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)_setOriginalID:(id)arg1;
- (void)_setCountryCode:(id)arg1;
- (void)_setOriginalID:(id)arg1 updateSiblings:(_Bool)arg2;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
- (void)_setOriginalID:(id)arg1 countryCode:(id)arg2 updateSiblings:(_Bool)arg3;
- (id)_handleInfo;
- (void)dealloc;
- (void)finalize;
- (oneway void)release;
- (id)initWithAccount:(id)arg1 ID:(id)arg2;
- (id)initWithAccount:(id)arg1 ID:(id)arg2 alreadyCanonical:(_Bool)arg3 knownIDStatus:(int)arg4;
- (id)initWithAccount:(id)arg1 ID:(id)arg2 alreadyCanonical:(_Bool)arg3;
- (id)init;
- (void)_registerForIMPersonPictureChanges;
- (void)_unregisterFromIMPersonPictureChanges;
- (void)releaseNotificationQueue;
- (void)beginNotificationQueue;
- (_Bool)shouldQueueNotifications;
- (id)publicAPIPropertiesDictionary;
- (void)_sendRemoteLogDumpRequest;
- (void)_sendRemoteLogDumpRequest:(id)arg1;
- (id)imHandleRegistrarGUID;
- (id)fmfSiblingHandles;
- (id)fmfHandle;

@end

@interface IMHandleRegistrar : NSObject
{
    id _internal;
}

+ (id)sharedInstance;
- (void)_clearChatSiblingsForGUID:(id)arg1 handle:(id)arg2;
- (id)_existingChatSiblingsForHandle:(id)arg1;
- (_Bool)_buildingChatSiblings;
- (id)_chatSiblingsForHandle:(id)arg1;
- (void)_clearAccountSiblingsForGUID:(id)arg1 handle:(id)arg2;
- (id)_existingAccountSiblingsForHandle:(id)arg1;
- (id)_accountSiblingsForHandle:(id)arg1;
- (void)_accountsChanged:(id)arg1;
- (void)_dumpOutAllIMHandlesForAccount:(id)arg1;
- (void)_dumpOutAllIMHandles;
- (id)allIMHandles;
- (id)siblingsForIMHandle:(id)arg1;
- (void)clearSiblingCacheForIMHandle:(id)arg1;
- (void)unregisterIMHandle:(id)arg1;
- (void)registerIMHandle:(id)arg1;
- (void)_clearSiblingsCacheForIMHandle:(id)arg1 rebuildAfter:(_Bool)arg2;
- (void)_buildSiblingsForIMHandle:(id)arg1;
- (void)_emptySiblingCacheForIMHandleGUID:(id)arg1;
@property(nonatomic) long long nameStyle;
- (void)dealloc;
- (id)init;
- (void)_addressBookChanged;

@end

@interface IMHandleRegistrarInternal : NSObject
{
    NSMutableDictionary *_siblingsMap;
    NSMutableDictionary *_accountSiblingsMap;
    NSMutableDictionary *_existingAccountSiblingsMap;
    NSMutableDictionary *_chatSiblingsMap;
    NSMutableDictionary *_existingChatSiblingsMap;
    NSMutableArray *_allIMHandles;
    _Bool _buildingChatSiblings;
}

- (void)dealloc;

@end

@interface IMIDStatusController : NSObject
{
    NSRecursiveLock *_servicesLock;
    NSMutableSet *_servicesRegistered;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableSet *_servicesRegistered; // @synthesize _servicesRegistered;
@property(retain, nonatomic) NSRecursiveLock *_servicesLock; // @synthesize _servicesLock;
- (long long)statusForID:(id)arg1 onService:(id)arg2;
- (void)requestStatusForID:(id)arg1 onAccount:(id)arg2;
- (void)requestStatusForID:(id)arg1 onService:(id)arg2;
- (void)_requestStatusForID:(id)arg1 onService:(id)arg2 onAccount:(id)arg3;
- (long long)_idStatusForID:(id)arg1 onAccount:(id)arg2;
- (long long)_statusForCanonicalizedID:(id)arg1 onService:(id)arg2;
- (long long)_idStatusForID:(id)arg1 onService:(id)arg2;
- (long long)__statusForID:(id)arg1 onService:(id)arg2 isCanonicalized:(_Bool)arg3;
- (void)_processIDStatusResponseForURI:(id)arg1 resultStatus:(long long)arg2 forService:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface IMItem (IMChat_Internal)
- (id)_otherHandle;
- (id)_senderHandle;
- (void)_updateContextWithSenderHandle:(id)arg1 otherHandle:(id)arg2;
- (id)message;
@end

@interface IMItem (IMTranscriptChatItemRules)
- (id)_serviceHandle;
- (id)_service;
- (id)_newChatItems;
- (_Bool)_hasMessageChatItem;
@end

@interface IMItemChatContext : NSObject
{
    IMHandle *_senderHandle;
    IMHandle *_otherHandle;
}

- (id)subject;
- (id)sender;
- (void)dealloc;

@end

@interface IMLoadMoreChatItem : IMTranscriptChatItem
{
}

- (id)_initWithItem:(id)arg1;

@end

@interface IMLocatingChatItem : IMMessageChatItem
{
}

- (id)_initWithItem:(id)arg1;

@end

@interface IMLocationManager : IMChat <CLLocationManagerDelegate, IMLocationManager>
{
    CLLocationManager *_locationManager;
    NSMutableArray *_handlers;
    NSTimer *_timeoutHandler;
    CLLocation *_location;
    NSError *_error;
    NSDate *_locateStartTime;
    NSTimer *_locationUpdateTimer;
}

+ (Class)__CLLocationManagerClass;
+ (id)sharedInstance;
@property(retain, nonatomic) CLLocation *location; // @synthesize location=_location;
@property(retain, nonatomic) NSTimer *locationUpdateTimer; // @synthesize locationUpdateTimer=_locationUpdateTimer;
@property(retain, nonatomic) NSDate *locateStartTime; // @synthesize locateStartTime=_locateStartTime;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(retain, nonatomic) NSMutableArray *handlers; // @synthesize handlers=_handlers;
- (void)_fireCompletionHandlers;
- (void)_locationManagerTimedOut;
- (void)_locationUpdateTimerFired:(id)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
@property(readonly, nonatomic) _Bool locationAuthorizationDenied;
- (void)startUpdatingCurrentLocationWithHandler:(CDUnknownBlockType)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMLocationShareActionChatItem : IMTranscriptChatItem
{
    IMHandle *_sender;
    IMHandle *_otherHandle;
}

@property(readonly, retain, nonatomic) IMHandle *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(readonly, retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
- (id)_initWithItem:(id)arg1 sender:(id)arg2 otherHandle:(id)arg3;
@property(readonly, nonatomic) long long direction;
@property(readonly, nonatomic) long long actionType;
@property(readonly, nonatomic) _Bool isFromMe;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMLocationShareOfferChatItem : IMTranscriptChatItem <IMMessageChatItem>
{
    IMHandle *_sender;
    _Bool _actionableEclipsed;
}

- (void)_setActionableEclipsed:(_Bool)arg1;
- (_Bool)_isActionableEclipsed;
- (id)_initWithItem:(id)arg1 sender:(id)arg2;
@property(readonly, nonatomic) long long offerState;
@property(readonly, retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
@property(readonly, retain, nonatomic) NSDate *time;
@property(readonly, nonatomic) _Bool failed;
@property(readonly, nonatomic) _Bool isFromMe;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMLocationShareStatusChangeItem (IMTranscriptChatItemRules)
- (id)_newChatItems;
- (_Bool)_hasMessageChatItem;
@end

@interface IMMe : NSObject
{
    IMPerson *_person;
    NSString *_abNickname;
    NSString *_abFirstName;
    NSString *_abFullName;
    NSString *_abLastName;
    NSArray *_abEmails;
    NSMutableArray *_abIMHandles;
    NSMutableArray *_loginIMHandles;
}

+ (id)imHandleForService:(id)arg1;
+ (id)me;
+ (id)fallbackUserName;
- (id)description;
- (void)myPictureChanged;
@property(readonly, nonatomic) NSArray *imHandles;
@property(readonly, nonatomic) IMHandle *bestIMHandle;
@property(readonly, nonatomic) NSString *fullName;
@property(readonly, nonatomic) NSString *lastName;
@property(readonly, nonatomic) NSString *email;
@property(readonly, nonatomic) NSArray *emails;
@property(readonly, nonatomic) NSString *firstName;
@property(readonly, nonatomic) NSString *nickname;
- (void)setFirstName:(id)arg1 lastName:(id)arg2;
- (_Bool)removeIMHandle:(id)arg1;
- (_Bool)isIMHandleLoginIMHandle:(id)arg1;
- (_Bool)addIMHandle:(id)arg1;
- (id)loginIMHandles;
- (_Bool)removeLoginIMHandle:(id)arg1;
- (_Bool)addLoginIMHandle:(id)arg1;
@property(readonly, nonatomic) IMPerson *person;
- (void)setIMPerson:(id)arg1;
- (void)resetABPerson;
- (void)rebuildIMHandles;
- (id)_imHandlesWithIDs:(id)arg1 onAccount:(id)arg2;
- (void)dealloc;
@property(readonly, nonatomic) NSString *guid;
- (id)init;

@end

@interface IMMessage : NSObject <NSCopying>
{
    IMHandle *_sender;
    IMHandle *_subject;
    NSAttributedString *_text;
    NSString *_plainBody;
    NSDate *_time;
    NSDate *_timeDelivered;
    NSDate *_timeRead;
    NSDate *_timePlayed;
    NSString *_guid;
    NSAttributedString *_messageSubject;
    NSArray *_fileTransferGUIDs;
    NSError *_error;
    unsigned long long _flags;
    _Bool _isInvitationMessage;
    long long _messageID;
}

+ (id)messageFromIMMessageItemDictionary:(id)arg1 sender:(id)arg2 subject:(id)arg3;
+ (id)messageFromIMMessageItem:(id)arg1 sender:(id)arg2 subject:(id)arg3;
+ (id)fromMeIMHandle:(id)arg1 withText:(id)arg2 fileTransferGUIDs:(id)arg3 flags:(unsigned long long)arg4;
+ (id)instantMessageWithText:(id)arg1 messageSubject:(id)arg2 fileTransferGUIDs:(id)arg3 flags:(unsigned long long)arg4;
+ (id)instantMessageWithText:(id)arg1 messageSubject:(id)arg2 flags:(unsigned long long)arg3;
+ (id)instantMessageWithText:(id)arg1 flags:(unsigned long long)arg2;
+ (id)defaultInvitationMessageFromSender:(id)arg1 flags:(unsigned long long)arg2;
+ (id)locatingMessageWithGuid:(id)arg1 error:(id)arg2;
+ (id)messageWithLocation:(id)arg1 flags:(unsigned long long)arg2 error:(id)arg3 guid:(id)arg4;
+ (id)_vCardDataWithCLLocation:(id)arg1;
- (void)_updateTimePlayed:(id)arg1;
@property(retain, nonatomic) NSDate *timePlayed; // @synthesize timePlayed=_timePlayed;
- (void)_updateTimeRead:(id)arg1;
@property(retain, nonatomic) NSDate *timeRead; // @synthesize timeRead=_timeRead;
- (void)_updateTimeDelivered:(id)arg1;
@property(retain, nonatomic) NSDate *timeDelivered; // @synthesize timeDelivered=_timeDelivered;
- (void)_updateFileTransferGUIDs:(id)arg1;
@property(copy, nonatomic) NSArray *fileTransferGUIDs; // @synthesize fileTransferGUIDs=_fileTransferGUIDs;
@property(nonatomic) _Bool isInvitationMessage; // @synthesize isInvitationMessage=_isInvitationMessage;
- (void)_updateError:(id)arg1;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void)_updateFlags:(unsigned long long)arg1;
@property(nonatomic) unsigned long long flags; // @synthesize flags=_flags;
- (void)_updateMessageID:(long long)arg1;
@property(nonatomic) long long messageID; // @synthesize messageID=_messageID;
- (void)_updateGUID:(id)arg1;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
- (void)_updateText:(id)arg1;
@property(retain, nonatomic) NSAttributedString *text; // @synthesize text=_text;
- (void)_updateTime:(id)arg1;
@property(retain, nonatomic) NSDate *time; // @synthesize time=_time;
@property(readonly, retain, nonatomic) NSAttributedString *messageSubject; // @synthesize messageSubject=_messageSubject;
@property(readonly, retain, nonatomic) IMHandle *subject; // @synthesize subject=_subject;
- (void)_updateSender:(id)arg1;
@property(retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
- (id)description;
- (_Bool)isEqual:(id)arg1;
@property(readonly, retain, nonatomic) IMMessageItem *_imMessageItem;
- (long long)compare:(id)arg1 comparisonType:(long long)arg2;
- (long long)compare:(id)arg1;
@property(readonly, nonatomic) _Bool wasDataDetected;
@property(readonly, nonatomic) _Bool wasDowngraded;
@property(readonly, nonatomic) _Bool isAlert;
@property(readonly, nonatomic) _Bool isAddressedToMe;
- (void)setIsAddressedToMe:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isSystemMessage;
@property(readonly, nonatomic) _Bool isPlayed;
@property(readonly, nonatomic) _Bool isAudioMessage;
@property(readonly, nonatomic) _Bool isRead;
@property(readonly, nonatomic) _Bool isDelivered;
@property(readonly, nonatomic) _Bool isAutoReply;
@property(readonly, nonatomic) _Bool isDelayed;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool isFromMe;
@property(readonly, nonatomic) _Bool isEmote;
@property(readonly, retain, nonatomic) NSArray *inlineAttachmentAttributesArray;
@property(readonly, nonatomic) _Bool hasInlineAttachments;
@property(readonly, nonatomic) _Bool isSent;
@property(readonly, nonatomic) _Bool isLocatingMessage;
@property(readonly, nonatomic) _Bool isTypingMessage;
@property(readonly, nonatomic) _Bool isFinished;
@property(readonly, nonatomic) _Bool hasDataDetectorResults;
@property(readonly, retain, nonatomic) NSString *summaryString;
@property(readonly, retain, nonatomic) NSString *senderName;
@property(readonly, retain, nonatomic) NSString *plainBody;
- (void)dealloc;
- (id)initWithSender:(id)arg1 fileTransfer:(id)arg2;
- (id)initWithSender:(id)arg1 time:(id)arg2 text:(id)arg3 fileTransferGUIDs:(id)arg4 flags:(unsigned long long)arg5 error:(id)arg6 guid:(id)arg7 subject:(id)arg8;
- (id)initWithSender:(id)arg1 time:(id)arg2 text:(id)arg3 messageSubject:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 error:(id)arg7 guid:(id)arg8 subject:(id)arg9;
- (id)_initWithSender:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 timePlayed:(id)arg5 plainText:(id)arg6 text:(id)arg7 messageSubject:(id)arg8 fileTransferGUIDs:(id)arg9 flags:(unsigned long long)arg10 error:(id)arg11 guid:(id)arg12 messageID:(long long)arg13 subject:(id)arg14;
- (id)_copyWithFlags:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IMMessageActionChatItem : IMTranscriptChatItem
{
    IMHandle *_sender;
    IMHandle *_otherHandle;
}

@property(readonly, retain, nonatomic) IMHandle *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(readonly, retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
- (id)_initWithItem:(id)arg1 sender:(id)arg2 otherHandle:(id)arg3;
@property(readonly, nonatomic) long long actionType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMMessageActionItem (IMTranscriptChatItemRules)
- (id)_newChatItems;
@end

@interface IMMessageItem (IMChat_Internal)
- (id)_otherHandle;
- (id)_senderHandle;
- (id)message;
@end

@interface IMMessageItem (IMTranscriptChatItemRules)
- (id)_service;
- (id)_newChatItems;
- (_Bool)_hasMessageChatItem;
@end

@interface IMMessageStatusChatItem : IMTranscriptChatItem
{
    long long _statusType;
    NSDate *_time;
    long long _expireStatusType;
    NSDate *_timeAdded;
    NSDate *_timeStale;
    unsigned long long _count;
}

@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
@property(readonly, nonatomic) long long expireStatusType; // @synthesize expireStatusType=_expireStatusType;
@property(readonly, retain, nonatomic) NSDate *time; // @synthesize time=_time;
@property(readonly, nonatomic) long long statusType; // @synthesize statusType=_statusType;
- (id)_initWithItem:(id)arg1 statusType:(long long)arg2 time:(id)arg3 count:(unsigned long long)arg4 expireStatusType:(long long)arg5;
- (id)_initWithItem:(id)arg1 expireStatusType:(long long)arg2 count:(unsigned long long)arg3;
- (id)_initWithItem:(id)arg1 statusType:(long long)arg2 time:(id)arg3 count:(unsigned long long)arg4;
@property(readonly, nonatomic) long long messageStatusType;
@property(readonly, retain, nonatomic) NSString *errorText;
@property(readonly, nonatomic) _Bool isFromMe;
- (void)_setTimeAdded:(id)arg1;
- (id)_timeAdded;
- (id)_timeStale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMParentalControls : NSObject
{
    _Bool _shouldPostNotifications;
    _Bool _active;
    _Bool _disableAV;
    _Bool _forceChatLogging;
    NSMutableDictionary *_parentalControls;
}

+ (id)standardControls;
+ (id)objectForKey:(id)arg1;
@property(readonly, nonatomic) _Bool _forceChatLogging; // @synthesize _forceChatLogging;
@property(readonly, nonatomic) _Bool _disableAV; // @synthesize _disableAV;
@property(readonly, retain, nonatomic) NSMutableDictionary *_parentalControls; // @synthesize _parentalControls;
@property(readonly, nonatomic) _Bool active; // @synthesize active=_active;
@property(nonatomic) _Bool shouldPostNotifications; // @synthesize shouldPostNotifications=_shouldPostNotifications;
- (_Bool)accountHasWhitelist:(id)arg1;
- (_Bool)accountIsEnabled:(id)arg1;
- (_Bool)okToConnectAccount:(id)arg1;
- (_Bool)forceWhitelistForAccount:(id)arg1;
- (id)whitelistForAccount:(id)arg1;
- (_Bool)forceWhitelistForService:(id)arg1;
- (id)whitelistForService:(id)arg1;
- (_Bool)disableAccount:(id)arg1;
- (_Bool)disableService:(id)arg1;
@property(readonly, nonatomic) _Bool forceChatLogging;
@property(readonly, nonatomic) _Bool disableAV;
- (void)_managedPrefsNotification:(id)arg1;
- (void)_updateParentalSettings;
- (id)_serviceWithName:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMParentalControlsService : NSObject
{
    _Bool _disableService;
    _Bool _forceWhiteList;
    NSSet *_whitelist;
    NSString *_name;
}

@property(retain) NSString *name; // @synthesize name=_name;
@property(retain) NSSet *whitelist; // @synthesize whitelist=_whitelist;
@property _Bool forceWhiteList; // @synthesize forceWhiteList=_forceWhiteList;
@property _Bool disableService; // @synthesize disableService=_disableService;
- (void)dealloc;

@end

@interface IMParticipantChangeChatItem : IMTranscriptChatItem
{
    IMHandle *_sender;
    IMHandle *_otherHandle;
    IMHandle *_handle;
}

@property(readonly, retain, nonatomic) IMHandle *handle; // @synthesize handle=_handle;
@property(readonly, retain, nonatomic) IMHandle *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(readonly, retain, nonatomic) IMHandle *sender; // @synthesize sender=_sender;
- (id)_initWithItem:(id)arg1 sender:(id)arg2 otherHandle:(id)arg3;
@property(readonly, nonatomic) long long changeType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMParticipantChangeItem (IMTranscriptChatItemRules)
- (id)_newChatItems;
@end

@interface IMPeople : NSObject
{
    NSMutableArray *_people;
    int _coalesceCount;
    _Bool _hidePeople;
}

@property(nonatomic, setter=setShouldHidePeople:) _Bool hidePeople; // @synthesize hidePeople=_hidePeople;
- (void)imHandle:(id)arg1 buddyStatusChanged:(_Bool)arg2;
- (_Bool)addPeopleFromArray:(id)arg1;
- (_Bool)addPeopleFromArray:(id)arg1 skipMe:(_Bool)arg2;
- (_Bool)removePeopleFromArray:(id)arg1;
- (_Bool)removeIMHandle:(id)arg1;
- (_Bool)addIMHandle:(id)arg1;
@property(readonly, nonatomic) _Bool coalescingChanges;
- (void)endCoalescedChanges;
- (void)beginCoalescedChanges;
- (void)removedIMHandle:(id)arg1;
- (void)_addedPeople:(id)arg1;
- (void)addedIMHandle:(id)arg1;
@property(readonly, nonatomic) NSArray *people;
@property(readonly, nonatomic) NSArray *groups;
- (_Bool)containsIMHandle:(id)arg1;
@property(readonly, nonatomic) unsigned long long count;
- (void)addNotificationObserver:(id)arg1 selector:(SEL)arg2;
- (void)removeNotificationObserver:(id)arg1;
- (void)dealloc;

@end

@interface IMPerson : NSObject
{
    _Bool _registered;
    int _recordID;
}

+ (void)_setCachedQueriesEnabled:(_Bool)arg1;
+ (id)existingABPeopleWithInstantMessageAddress:(id)arg1 onServices:(id)arg2 allowSubstringMatch:(_Bool)arg3;
+ (id)existingABPersonWithInstantMessageAddress:(id)arg1 onServices:(id)arg2 allowSubstringMatch:(_Bool)arg3;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 andNickName:(id)arg3 orEmail:(id)arg4 orNumber:(id)arg5;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 andNickName:(id)arg3 orEmail:(id)arg4 orNumber:(id)arg5 countryCode:(id)arg6 identifier:(int *)arg7;
+ (void)_setCachedRecordResult:(int)arg1 identifier:(int)arg2 forQuery:(id)arg3 addressBook:(void *)arg4;
+ (id)_cachedRecordResultForQuery:(id)arg1 addressBook:(void *)arg2;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 andNickName:(id)arg3 orEmail:(id)arg4 orNumber:(id)arg5 identifier:(int *)arg6;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 orEmail:(id)arg3 orNumber:(id)arg4;
+ (id)existingABPersonForPerson:(id)arg1;
+ (id)existingABPersonWithFirstName:(id)arg1 andLastName:(id)arg2 orEmail:(id)arg3;
+ (id)existingABPersonWithFirstName:(id)arg1 lastName:(id)arg2;
+ (id)allPeople;
@property(readonly, nonatomic) _Bool _registered; // @synthesize _registered;
@property(readonly, nonatomic) int _recordID; // @synthesize _recordID;
- (unsigned long long)hash;
@property(readonly, nonatomic) unsigned long long status;
@property(readonly, nonatomic) NSData *imageDataWithoutLoading;
@property(retain, nonatomic) NSData *imageData;
- (void)_abPersonChanged:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *groups;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToIMPerson:(id)arg1;
@property(readonly, retain, nonatomic) NSString *uniqueID;
- (_Bool)containsHandle:(id)arg1 forServiceProperty:(id)arg2;
- (void)appendID:(id)arg1 toProperty:(id)arg2;
- (void)save;
@property(readonly, nonatomic) NSArray *mobileNumbers;
@property(nonatomic) NSArray *phoneNumbers;
- (id)allHandlesForProperty:(id)arg1;
- (void)setValues:(id)arg1 forProperty:(id)arg2;
- (void)setValues:(id)arg1 forIMProperty:(id)arg2;
- (id)valuesForProperty:(id)arg1;
- (id)valuesForIMProperty:(id)arg1;
@property(readonly, nonatomic) _Bool isInAddressBook;
@property(copy, nonatomic) NSArray *emails;
@property(readonly, nonatomic) NSArray *allEmails;
- (id)emailHandlesForService:(id)arg1;
- (id)emailHandlesForService:(id)arg1 includeBaseEmail:(_Bool)arg2;
- (void)setFirstName:(id)arg1 lastName:(id)arg2;
@property(copy, nonatomic) NSString *lastName;
@property(copy, nonatomic) NSString *firstName;
@property(readonly, retain, nonatomic) NSString *fullName;
@property(copy, nonatomic) NSString *nickname;
@property(readonly, retain, nonatomic) NSString *name;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *abbreviatedName;
@property(readonly, nonatomic) NSString *companyName;
@property(readonly, nonatomic) _Bool isCompany;
- (void)dealloc;
- (void)finalize;
@property(readonly, nonatomic) void *_recordRef;
@property(readonly, nonatomic) int recordID;
- (id)initWithABRecordID:(int)arg1;
- (id)init;
- (id)idsAddresses;
- (id)imHandleRegistrarGUID;

@end

@interface IMPersonRegistrar : NSObject
{
    NSMutableDictionary *_personMap;
}

+ (id)sharedInstance;
@property(retain) NSMutableDictionary *_personMap; // @synthesize _personMap;
- (void)_dumpAllPersons;
- (id)personForUniqueID:(id)arg1;
- (void)unregisterPerson:(id)arg1;
- (void)registerPerson:(id)arg1;
- (void)dealloc;

@end

@interface IMPreferredServiceManager : NSObject <IDSIDQueryControllerDelegate>
{
}

+ (_Bool)isiMessageAvailable;
+ (_Bool)hasActiveiMessageAccount;
+ (_Bool)mmsEnabled;
+ (_Bool)smsEnabled;
+ (id)sharedPreferredServiceManager;
- (void)_handleOperationalAccountsChanged:(id)arg1;
- (void)_handleLoginStatusChange:(id)arg1;
- (void)_handleConnectionChanged:(id)arg1;
- (void)notifyOfServiceAvailabilityChange;
- (id)preferredServiceForHandles:(id)arg1 newComposition:(_Bool)arg2 error:(char *)arg3 serverCheckCompletionBlock:(CDUnknownBlockType)arg4;
- (id)preferredServiceForHandles:(id)arg1 inChat:(id)arg2 newComposition:(_Bool)arg3 error:(char *)arg4 serverCheckCompletionBlock:(CDUnknownBlockType)arg5;
- (unsigned long long)__preferrediMessageFallbackServiceForRecipientCount:(long long)arg1 iMessageAvailable:(_Bool)arg2 options:(unsigned long long)arg3 error:(char *)arg4;
- (unsigned long long)__preferredServiceTypeForRecipientCount:(long long)arg1 options:(unsigned long long)arg2 error:(char *)arg3;
- (id)_preferredServiceForHandles:(id)arg1 options:(unsigned long long)arg2 error:(char *)arg3 serverCheckCompletionBlock:(CDUnknownBlockType)arg4;
- (id)_preferredServiceForHandles:(id)arg1 inChat:(id)arg2 newComposition:(_Bool)arg3 error:(char *)arg4 serverCheckCompletionBlock:(CDUnknownBlockType)arg5;
- (unsigned long long)_optionsForRecipients:(id)arg1 inChat:(id)arg2;
- (unsigned long long)__optionsForChat:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMSPIHandle : NSObject
{
    NSString *_address;
    NSString *_displayName;
    NSString *_identifier;
}

@property(retain) NSString *address; // @synthesize address=_address;
@property(retain) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
- (id)description;
- (void)dealloc;

@end

@interface IMSPIMessage : NSObject
{
    NSString *_guid;
    NSString *_text;
    NSAttributedString *_attributedText;
    NSString *_subject;
    NSArray *_recipients;
    NSURL *_url;
    NSDate *_date;
    IMSPIHandle *_sender;
    long long _messageID;
    _Bool _isOutgoing;
    _Bool _isRead;
}

@property(retain) NSDate *date; // @synthesize date=_date;
@property(retain) NSURL *url; // @synthesize url=_url;
@property(retain) NSString *subject; // @synthesize subject=_subject;
@property(retain) NSArray *recipients; // @synthesize recipients=_recipients;
@property(retain) IMSPIHandle *sender; // @synthesize sender=_sender;
@property(retain) NSString *text; // @synthesize text=_text;
@property _Bool isOutgoing; // @synthesize isOutgoing=_isOutgoing;
@property _Bool isRead; // @synthesize isRead=_isRead;
@property(retain) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property long long messageID; // @synthesize messageID=_messageID;
@property(retain) NSString *guid; // @synthesize guid=_guid;
- (id)description;
- (void)dealloc;

@end

@interface IMSenderChatItem : IMTranscriptChatItem
{
    IMHandle *_handle;
}

@property(readonly, retain, nonatomic) IMHandle *handle; // @synthesize handle=_handle;
- (id)_initWithItem:(id)arg1 handle:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMService : NSObject
{
}

+ (id)canonicalFormOfID:(id)arg1 withIDSensitivity:(int)arg2;
+ (unsigned long long)statusForABPerson:(id)arg1;
+ (unsigned long long)statusForIMPerson:(id)arg1;
+ (_Bool)isEmailAddress:(id)arg1 inDomains:(id)arg2;
+ (id)myIdleTime;
+ (unsigned long long)myStatus;
+ (id)notificationCenter;
+ (id)serviceWithName:(id)arg1;
+ (id)allServicesNonBlocking;
+ (id)allServices;
+ (id)imageURLForStatus:(unsigned long long)arg1;
+ (id)imageNameForStatus:(unsigned long long)arg1;
+ (void)forgetStatusImageAppearance;
+ (id)smsService;
+ (id)iMessageService;
+ (id)facetimeService;
+ (id)callService;
+ (id)jabberService;
+ (id)subnetService;
+ (id)aimService;
- (id)myScreenNames;
- (id)screenNamesForPerson:(id)arg1;
- (id)peopleWithScreenName:(id)arg1;
- (id)canonicalFormOfID:(id)arg1;
- (id)infoForPreferredScreenNames;
- (id)infoForAllScreenNames;
- (id)infoForScreenName:(id)arg1;
- (unsigned long long)status;
- (id)name;
- (id)localizedShortName;
- (id)localizedName;
- (_Bool)initialSyncPerformed;
- (void)logout;
- (void)login;
- (_Bool)isEnabled;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)infoForDisplayedPeople;
- (id)infoForAllPeople;
- (id)infoForPerson:(id)arg1;

@end

@interface IMServiceAgent : NSObject
{
    NSDictionary *_currentAVChatInfo;
}

+ (id)notificationCenter;
+ (void)forgetStatusImageAppearance;
+ (id)imageNameForStatus:(unsigned long long)arg1;
+ (id)imageURLForStatus:(unsigned long long)arg1;
+ (id)sharedAgent;
+ (long long)serviceAgentCapabilities;
+ (void)setServiceAgentCapabilities:(long long)arg1;
- (id)myPictureData;
- (void)launchIfNecessary;
@property(readonly, nonatomic) unsigned long long vcCapabilities;
- (unsigned long long)requestVideoStillForPerson:(id)arg1;
@property(readonly, nonatomic) unsigned long long requestAudioReflectorStop;
@property(readonly, nonatomic) unsigned long long requestAudioReflectorStart;
@property(readonly, nonatomic) NSDictionary *currentAVChatInfo;
@property(retain, nonatomic) NSArray *myAwayMessages;
@property(retain, nonatomic) NSArray *myAvailableMessages;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2;
- (id)notificationCenter;
- (id)serviceWithNameNonBlocking:(id)arg1;
- (id)serviceWithName:(id)arg1;

@end

@interface IMServiceAgentImpl : IMServiceAgent
{
}

+ (id)imageURLForStatus:(unsigned long long)arg1;
+ (id)imageNameForStatus:(unsigned long long)arg1;
+ (void)_determineStatusImageAppearance;
+ (void)_statusImageAppearanceChanged:(id)arg1;
+ (void)forgetStatusImageAppearance;
+ (id)notificationCenter;
+ (void)initialize;
+ (id)sharedAgent;
- (unsigned long long)vcCapabilities;
- (void)vcCapabilitiesChanged:(unsigned long long)arg1;
- (void)setupComplete;
- (void)setMyAwayMessages:(id)arg1;
- (void)setMyAvailableMessages:(id)arg1;
- (id)myAwayMessages;
- (id)myAvailableMessages;
- (void)_customMessagesChanged:(id)arg1;
- (void)setMyStatus:(unsigned long long)arg1 message:(id)arg2;
- (void)_statusImageAppearanceChanged:(id)arg1;
- (id)notificationCenter;
- (id)serviceWithName:(id)arg1;
- (void)launchIfNecessary;
- (void)_daemonDisconnected:(id)arg1;
- (void)_daemonConnected:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface IMServiceChatItem : IMTranscriptChatItem
{
    IMHandle *_handle;
    IMServiceImpl *_service;
}

@property(readonly, retain, nonatomic) IMHandle *handle; // @synthesize handle=_handle;
@property(readonly, retain, nonatomic) IMServiceImpl *service; // @synthesize service=_service;
- (id)_initWithItem:(id)arg1 service:(id)arg2 handle:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMServiceImpl : IMService
{
    NSString *_name;
    NSString *_localizedName;
    NSString *_localizedShortName;
    NSMutableDictionary *_cardMap;
    NSDictionary *_personToIDMap;
    NSString *_countryCode;
    IMAccount *_bestAccount;
    NSDictionary *_serviceDefaults;
    NSDictionary *_serviceProps;
    NSDictionary *_defaultSettings;
    NSData *_imageData;
    NSArray *_abProperties;
    NSArray *_emailDomains;
    NSArray *_siblingServiceNames;
    unsigned int _screenNameSensitivity;
    _Bool _hasLoadedServiceProperties;
    _Bool _handlesChatInvites;
    _Bool _supportsSMS;
    _Bool _supportsPhoneNumberMapping;
    _Bool _supportsGroupAttachments;
    _Bool _supportsMutatingGroupMembers;
    _Bool _supportsAuthorization;
    _Bool _supportsRegistration;
    _Bool _supportsAdding;
    _Bool _supportsPresence;
    _Bool _supportsIDStatusLookup;
    _Bool _supportsDatabaseStorage;
    _Bool _supportsAudioMessages;
    _Bool _shouldInternationalizeNumbers;
    _Bool _supportsOfflineTransfers;
    _Bool _shouldDisableDeactivation;
    _Bool _ignoresNetworkConnectivity;
    _Bool _isPersistent;
    _Bool _isPlugInService;
    _Bool _allowsMultipleConnections;
}

+ (_Bool)systemSupportsSendingAttachmentsOfTypes:(id)arg1 error:(long long *)arg2;
+ (_Bool)systemSupportsSMSSending;
+ (id)supportedCountryCodes;
+ (id)operationalServicesWithCapability:(unsigned long long)arg1;
+ (id)connectedServicesWithCapability:(unsigned long long)arg1;
+ (id)servicesWithCapability:(unsigned long long)arg1;
+ (id)connectedServices;
+ (id)activeServices;
+ (id)serviceWithInternalName:(id)arg1;
+ (id)serviceWithName:(id)arg1;
+ (id)allServicesNonBlocking;
+ (id)allServices;
+ (void)setServiceClass:(Class)arg1;
+ (Class)serviceClass;
@property(readonly, retain, nonatomic) NSString *shortName; // @synthesize shortName=_localizedShortName;
@property(readonly, retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, retain, nonatomic) NSArray *emailDomains; // @synthesize emailDomains=_emailDomains;
@property(readonly, retain, nonatomic) NSArray *addressBookProperties; // @synthesize addressBookProperties=_abProperties;
@property(readonly, nonatomic) unsigned int IDSensitivity; // @synthesize IDSensitivity=_screenNameSensitivity;
@property(readonly, nonatomic) _Bool shouldDisableDeactivation; // @synthesize shouldDisableDeactivation=_shouldDisableDeactivation;
@property(readonly, nonatomic) _Bool allowsMultipleConnections; // @synthesize allowsMultipleConnections=_allowsMultipleConnections;
@property(readonly, nonatomic) _Bool isPlugInService; // @synthesize isPlugInService=_isPlugInService;
@property(readonly, nonatomic) _Bool supportsAdding; // @synthesize supportsAdding=_supportsAdding;
@property(readonly, nonatomic) _Bool supportsGroupAttachments; // @synthesize supportsGroupAttachments=_supportsGroupAttachments;
@property(readonly, nonatomic) _Bool supportsMutatingGroupMembers; // @synthesize supportsMutatingGroupMembers=_supportsMutatingGroupMembers;
@property(readonly, nonatomic) _Bool supportsPresence; // @synthesize supportsPresence=_supportsPresence;
@property(readonly, nonatomic) _Bool supportsOfflineTransfers; // @synthesize supportsOfflineTransfers=_supportsOfflineTransfers;
@property(readonly, nonatomic) _Bool ignoresNetworkConnectivity; // @synthesize ignoresNetworkConnectivity=_ignoresNetworkConnectivity;
@property(readonly, nonatomic) _Bool supportsRegistration; // @synthesize supportsRegistration=_supportsRegistration;
@property(readonly, nonatomic) _Bool handlesChatInvites; // @synthesize handlesChatInvites=_handlesChatInvites;
@property(readonly, nonatomic) _Bool isPersistent; // @synthesize isPersistent=_isPersistent;
@property(readonly, nonatomic) _Bool supportsAuthorization; // @synthesize supportsAuthorization=_supportsAuthorization;
@property(readonly, nonatomic) _Bool supportsPhoneNumberMapping; // @synthesize supportsPhoneNumberMapping=_supportsPhoneNumberMapping;
@property(readonly, nonatomic) _Bool supportsAudioMessages; // @synthesize supportsAudioMessages=_supportsAudioMessages;
@property(readonly, nonatomic) _Bool supportsIDStatusLookup; // @synthesize supportsIDStatusLookup=_supportsIDStatusLookup;
@property(retain, nonatomic) NSDictionary *defaultAccountSettings; // @synthesize defaultAccountSettings=_defaultSettings;
@property(retain, nonatomic) NSDictionary *serviceDefaults; // @synthesize serviceDefaults=_serviceDefaults;
@property(readonly, nonatomic) Class accountClass;
- (void)activeAccountsChanged:(id)arg1;
- (void)defaultsChanged:(id)arg1;
- (id)screenNamesForPerson:(id)arg1;
- (id)screenNamesForIMPerson:(id)arg1;
- (id)_personToIDMap;
- (id)peopleWithScreenName:(id)arg1;
- (id)imABPeopleWithScreenName:(id)arg1 options:(unsigned long long)arg2;
- (id)imABPeopleWithScreenName:(id)arg1;
- (id)imABPeopleWithScreenName:(id)arg1 identifier:(int *)arg2;
- (id)imABPeopleWithScreenName:(id)arg1 countryCode:(id)arg2 identifier:(int *)arg3;
@property(readonly, retain, nonatomic) NSDictionary *cardMap;
- (void)clearIDToCardMap;
@property(retain, nonatomic) NSString *countryCode;
- (void)updateIDToCardMapWithNotification:(id)arg1;
- (id)_newIDToCardMap;
- (void)_dumpCardMap;
- (void)_addAddressBookCards:(id)arg1 toMap:(id)arg2;
- (id)_IDsToMapForIMPerson:(id)arg1;
- (id)description;
@property(readonly, retain, nonatomic) NSArray *accountIDs;
@property(readonly, nonatomic) long long buddyNotesMaxByteLength;
@property(readonly, retain, nonatomic) NSString *internalName;
@property(readonly, retain, nonatomic) NSArray *siblingServices;
@property(readonly, retain, nonatomic) NSString *addressBookProperty;
- (id)localizedShortName;
- (id)localizedName;
@property(readonly, nonatomic) _Bool _wantsInternationizedNumbers;
@property(readonly, nonatomic) _Bool _supportsDatabaseStorage;
- (_Bool)isEnabled;
@property(readonly, nonatomic) long long maxAttachmentSize;
@property(readonly, nonatomic) long long maxChatParticipants;
@property(readonly, retain, nonatomic) NSData *serviceImageData;
- (id)subtypeInformationForAccount:(id)arg1;
@property(retain, nonatomic) NSDictionary *serviceProperties;
- (void)_loadPropertiesIfNeeded;
- (id)_abPropertiesBySanitizingABProperties:(id)arg1;
- (id)myScreenNames;
- (id)infoForPreferredScreenNames;
- (id)infoForAllScreenNames;
- (id)infoForScreenName:(id)arg1;
- (unsigned long long)status;
- (void)_blockUntilInitialSyncPerformed;
- (long long)compareNames:(id)arg1;
- (id)canonicalFormOfID:(id)arg1;
- (id)normalizedFormOfID:(id)arg1;
- (_Bool)equalID:(id)arg1 andID:(id)arg2;
- (void)statusChangedForAccount:(id)arg1 from:(unsigned long long)arg2 to:(unsigned long long)arg3;
- (void)disconnect;
- (void)doneSetup;
- (_Bool)initialSyncPerformed;
- (void)_calculateBestAccount;
- (void)_syncWithRemoteBuddies;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface IMTranscriptChatItemRules : NSObject <IMChatItemRules>
{
    IMChat *_chat;
}

- (void)_invalidate;
- (id)_initWithChat:(id)arg1;
- (id)_itemWithChatItemsDeleted:(id)arg1 fromItem:(id)arg2;
- (_Bool)_shouldReloadChatItem:(id)arg1 oldChatItem:(id)arg2;
- (void)_didProcessChatItems:(id)arg1;
- (_Bool)_shouldRegenerateChatItemsForItem:(id)arg1 previousItem:(id)arg2 oldPreviousItem:(id)arg3;
- (id)_chatItemsForItem:(id)arg1 previousItem:(id)arg2;
- (_Bool)shouldShowRaiseMessageStatus;
- (id)chatItemForIMChatItem:(id)arg1;
- (id)testChatItems;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMTypingChatItem : IMMessageChatItem
{
}

- (id)_initWithItem:(id)arg1;

@end

@interface NSArray (IMChatItems)
- (id)__imItems;
- (void)__enumerateItemsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)__itemForChatItemAtIndex:(unsigned long long)arg1;
@property(readonly, retain, nonatomic) IMMessageItem *__imLastMessageItem;
- (id)messages;
- (void)enumerateMessagesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)messageForChatItemAtIndex:(unsigned long long)arg1;
@property(readonly, retain, nonatomic) IMMessage *lastIncomingFinishedMessage;
@property(readonly, retain, nonatomic) IMMessage *lastIncomingMessage;
@property(readonly, retain, nonatomic) IMMessage *lastFinishedMessage;
@property(readonly, retain, nonatomic) IMMessage *lastMessage;
@end

@interface NSArray (IMTranscriptChatItems)
- (id)indexesOfPartsOfMessageItem:(id)arg1;
- (id)indexesOfPartsOfMessage:(id)arg1;
@end

@interface NSString (IMCoreIDSLookupAdditions)
- (id)idsFormat;
@end

