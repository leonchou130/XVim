//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/TelephonyUI.framework/TelephonyUI
// UUID: 923C2F97-8D25-3EDF-B06D-BB153A23EF1C
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 659.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol TPDialerKeypadProtocol <NSObject>
- (void)setPlaysSounds:(_Bool)arg1;
- (long long)indexForHighlightedKey;
- (void)highlightKeyAtIndex:(long long)arg1;
- (void)setDelegate:(id <TPDialerKeypadDelegate>)arg1;
- (void)setSupportsHardPause:(_Bool)arg1;
- (_Bool)supportsHardPause;

@optional
- (void)replaceButton:(UIView<TPNumberPadButtonProtocol> *)arg1 atIndex:(unsigned long long)arg2;
- (void)performTapActionEndForHighlightedKey;
- (void)performTapActionDownForHighlightedKey;
@end

@protocol TPNumberPadButtonProtocol <NSObject>
@property unsigned int character;
- (id)initForCharacter:(unsigned int)arg1;
@end

@protocol TPSimpleNumberPadDelegate
- (void)simpleNumberPadDeletePressed:(TPSimpleNumberPad *)arg1;
- (void)simpleNumberPad:(TPSimpleNumberPad *)arg1 buttonPressedWithCharacter:(NSString *)arg2;
@end

@protocol TPSlidingButtonDelegateProtocol <NSObject>
- (void)slidingButton:(TPSlidingButton *)arg1 didSlideToProportion:(double)arg2;
- (void)slidingButtonDidFinishSlide;
- (void)slidingButtonWillFinishSlide;
@end

@protocol TPStarkHardPauseButtonDelegate <NSObject>
- (void)hardPauseButtonDidChangeVisibility:(TPStarkInCallHardPauseButton *)arg1;
@end

@protocol TPStarkInCallButtonsViewDelegate <NSObject>
- (_Bool)canSendMessage;
- (_Bool)isKeypadAllowed;
- (_Bool)isSwapCallsAllowed;
- (_Bool)isMergeCallsAllowed;
- (_Bool)isAddCallAllowed;
- (_Bool)isMuted;
- (void)inCallButtonWasTapped:(id)arg1;
@end

@protocol TPStarkPhoneCallContainerDataSource <NSObject>
- (_Bool)phoneCallContainer:(TPStarkPhoneCallContainer *)arg1 cellIsDimmedAtIndex:(unsigned long long)arg2;
- (NSString *)phoneCallContainer:(TPStarkPhoneCallContainer *)arg1 subtitleForViewCellAtIndex:(unsigned long long)arg2;
- (NSString *)phoneCallContainer:(TPStarkPhoneCallContainer *)arg1 titleForViewCellAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfViewCellsForPhoneCallContainer:(TPStarkPhoneCallContainer *)arg1;
@end

@protocol TPStarkPhoneCallContainerDelegate <NSObject>

@optional
- (void)phoneCallContainer:(TPStarkPhoneCallContainer *)arg1 phoneCallViewTappedAtIndex:(unsigned long long)arg2;
@end

@protocol TPStarkPhoneCallGalleryViewDelegate <NSObject>
- (TUCall *)representativePhoneCallForConferenceForGalleryView:(TPStarkPhoneCallGalleryView *)arg1;
- (NSArray *)allConferenceParticipantCalls;
- (NSArray *)conferenceParticipantCallsForPhoneCall:(TUCall *)arg1;
- (NSArray *)primaryPhoneCallsForGalleryView:(TPStarkPhoneCallGalleryView *)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol _UIActionSliderDelegate <NSObject>

@optional
- (void)actionSliderDidCancelSlide:(_UIActionSlider *)arg1;
- (void)actionSliderDidCompleteSlide:(_UIActionSlider *)arg1;
- (void)actionSlider:(_UIActionSlider *)arg1 didUpdateSlideWithValue:(double)arg2;
- (void)actionSliderDidBeginSlide:(_UIActionSlider *)arg1;
@end

@interface NSLayoutConstraint (TelephonyUI)
+ (id)constraintWithItem:(id)arg1 attribute:(long long)arg2 relatedBy:(long long)arg3 toItem:(id)arg4 attribute:(long long)arg5 multiplier:(double)arg6 constant:(double)arg7 priority:(float)arg8;
@end

@interface TPAlertViewHelper : NSObject <UIAlertViewDelegate>
{
    CDUnknownBlockType _completionHandler;
    UIAlertView *_alertView;
}

+ (id)alertHelperWithHandler:(CDUnknownBlockType)arg1 style:(long long)arg2 title:(id)arg3 message:(id)arg4 cancelButtonTitle:(id)arg5 otherButtonTitles:(id)arg6;
+ (id)_allHelpersArray;
+ (id)_workQueue;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)_underlyingAlertView;
- (void)show;
@property(readonly) long long firstOtherButtonIndex;
- (void)dismissWithCancelAnimated:(_Bool)arg1;
- (void)dismissWithClickedButtonIndexAnimated:(long long)arg1;
- (void)setCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)_initWithTitle:(id)arg1 style:(long long)arg2 message:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPBackgroundRoundedRectView : UIView
{
    TPRevealingRingView *_ringView;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithRingView:(id)arg1;

@end

@interface TPBottomBar : UIView
{
    long long _orientation;
    long long _style;
}

+ (long long)overlayStyle;
+ (long long)fullscreenStyle;
+ (double)defaultHeight;
+ (double)defaultHeightForOrientation:(long long)arg1;
+ (double)defaultHeightForStyle:(long long)arg1;
+ (double)defaultHeightForStyle:(long long)arg1 orientation:(long long)arg2;
- (long long)orientation;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 updateFrame:(_Bool)arg2;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithDefaultSizeForOrientation:(long long)arg1;
- (id)initWithDefaultSize;

@end

@interface TPBottomSingleButtonBar : TPBottomBar
{
    id _delegate;
    TPButton *_button;
}

+ (id)_backgroundImage;
- (id)button;
- (void)setButton:(id)arg1 andStyle:(_Bool)arg2;
- (void)dealloc;
- (double)buttonWidth;

@end

@interface TPBottomDoubleButtonBar : TPBottomSingleButtonBar
{
    TPButton *_button2;
}

- (void)layoutSubviews;
- (void)_layoutButtons;
- (id)button2;
- (void)setButton2:(id)arg1 andStyle:(_Bool)arg2;
- (void)setButton:(id)arg1 andStyle:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (double)_buttonWidth;

@end

@interface TPButton : UIButton
{
    int _color;
    _UIBackdropView *_backdropView;
    _Bool _blursBackground;
    _Bool _roundsCorners;
    _Bool _usesOverlayBlendingForContents;
}

+ (double)maxWidthForCenterButton;
+ (double)defaultWidthForCenterButton;
+ (double)defaultWidthForSideButton;
+ (double)defaultHeightForColor:(int)arg1;
+ (double)defaultHeight;
+ (id)defaultStandardFont;
@property(nonatomic) _Bool usesOverlayBlendingForContents; // @synthesize usesOverlayBlendingForContents=_usesOverlayBlendingForContents;
@property(nonatomic) _Bool roundsCorners; // @synthesize roundsCorners=_roundsCorners;
@property(nonatomic) _Bool blursBackground; // @synthesize blursBackground=_blursBackground;
- (void)setDisabledButtonColor:(int)arg1;
- (void)setTitleVerticalOffset:(double)arg1;
- (void)setIconVerticalOffset:(double)arg1;
- (void)setTitleImagePadding:(double)arg1;
- (void)setMinimumTitleFontSize:(double)arg1 maximumTitleFontSize:(double)arg2;
- (void)setMinimumTitleFontSize:(double)arg1;
- (void)setPlusSeparatedTitle:(id)arg1;
- (void)_animationDidEnd;
- (void)_animationWillBegin;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (int)buttonColor;
- (struct CGSize)intrinsicContentSize;
- (void)drawRect:(struct CGRect)arg1;
- (void)setBackgroundColor:(id)arg1;
- (id)initWithTitle:(id)arg1 icon:(id)arg2 color:(int)arg3 frame:(struct CGRect)arg4;
- (void)setButtonColor:(int)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;

@end

@interface TPNumberPad : UIControl
{
    NSMutableArray *_buttons;
    _Bool _numberButtonsEnabled;
}

@property(nonatomic) _Bool numberButtonsEnabled; // @synthesize numberButtonsEnabled=_numberButtonsEnabled;
- (void)buttonLongPressed:(id)arg1;
- (void)buttonCancelled:(id)arg1;
- (void)buttonDown:(id)arg1;
- (void)buttonUp:(id)arg1;
- (void)buttonTapped:(id)arg1;
- (void)buttonLongPressedViaGesture:(id)arg1;
- (void)_addButton:(id)arg1;
- (void)_layoutGrid;
- (void)_setBackgroundAlphaOnButton:(id)arg1 alpha:(double)arg2;
- (double)_backgroundAlphaOfButton:(id)arg1;
@property(nonatomic) double buttonBackgroundAlpha;
- (void)replaceButton:(id)arg1 atIndex:(unsigned long long)arg2;
@property(retain) NSArray *buttons; // @dynamic buttons;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithButtons:(id)arg1;

@end

@interface TPDialerNumberPad : TPNumberPad <TPDialerKeypadProtocol>
{
    _Bool _playsSounds;
    id <TPDialerKeypadDelegate> _delegate;
    TPDialerSoundController *_soundController;
}

+ (id)dialerNumberPadNumericCharacters;
+ (id)dialerNumberPadFullCharacters;
@property(retain) TPDialerSoundController *soundController; // @synthesize soundController=_soundController;
@property id <TPDialerKeypadDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool playsSounds; // @synthesize playsSounds=_playsSounds;
- (void)setSupportsHardPause:(_Bool)arg1;
- (_Bool)supportsHardPause;
- (long long)indexForHighlightedKey;
- (void)highlightKeyAtIndex:(long long)arg1;
- (void)buttonLongPressed:(id)arg1;
- (void)buttonDown:(id)arg1;
- (void)buttonUp:(id)arg1;
- (void)buttonTapped:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPDialerSoundController : NSObject
{
    struct __CFSet *_inflightSounds;
    unsigned int _soundsActivated:1;
    unsigned long long _incompleteSoundCount;
}

+ (void)_delayedDeactivate;
@property unsigned long long incompleteSoundCount; // @synthesize incompleteSoundCount=_incompleteSoundCount;
- (void)_stopAllSoundsForcingCallbacks:(_Bool)arg1;
- (void)setSoundsActivated:(_Bool)arg1;
- (void)soundCompletedPlaying:(unsigned int)arg1;
- (void)stopSoundForDialerCharacter:(unsigned int)arg1;
- (void)playSoundForDialerCharacter:(unsigned int)arg1;
- (void)applicationSuspendedNotification:(id)arg1;
- (void)applicationResumedNotification:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TPFakeSixSquareButton : UIButton
{
    struct UIEdgeInsets _contentInsets;
    TPRingView *_ringView;
}

@property(retain) TPRingView *ringView; // @synthesize ringView=_ringView;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (void)setContentRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 andIcon:(id)arg2;

@end

@interface TPFakeSixSquareButtonView : UIView
{
    _Bool _onlyShowsFourButtons;
}

@property(nonatomic) _Bool onlyShowsFourButtons; // @synthesize onlyShowsFourButtons=_onlyShowsFourButtons;
- (void)_addButtonAtPosition:(long long)arg1 withIcon:(id)arg2 title:(id)arg3;
- (void)addButtons;
- (struct CGSize)totalSize;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPLCDBar : UIView
{
    UIImageView *_shadowView;
}

+ (id)backgroundImage;
+ (double)defaultHeightForOrientation:(long long)arg1;
+ (double)defaultHeight;
@property(readonly) UIImageView *shadowView; // @synthesize shadowView=_shadowView;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 updateFrame:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithDefaultSize;
- (id)initWithDefaultSizeForOrientation:(long long)arg1;

@end

@interface TPLCDSubImageView : UIView
{
    UIImage *_image;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithDefaultSize;

@end

@interface TPLCDTextView : UIView
{
    NSString *_text;
    UIFont *_font;
    UIColor *_shadowColor;
    UIColor *_textColor;
    TPLCDTextViewScrollingView *_scrollingView;
    double _fontSize;
    struct CGRect _textRect;
    UIFrameAnimation *_animation;
    id _delegate;
    double _minFontSize;
    unsigned int _textRectIsValid:1;
    unsigned int _centerText:1;
    unsigned int _animates:1;
    unsigned int _isAnimating:1;
    unsigned int _leftTruncates:1;
}

+ (double)defaultMinimumFontSize;
- (void)setDelegate:(id)arg1;
- (void)resetAnimation;
- (_Bool)animates;
- (void)stopAnimating;
- (void)_finishedScrolling;
- (void)startAnimating;
- (void)_startScrolling;
- (void)setAnimatesIfTruncated:(_Bool)arg1;
- (void)_setupForAnimationIfNecessary;
- (void)_scheduleStartScrolling;
- (void)_tearDownAnimation;
- (void)drawRect:(struct CGRect)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)_drawTextInRect:(struct CGRect)arg1 verticallyOffset:(_Bool)arg2;
- (struct CGSize)sizeToFit;
- (id)text;
- (void)setText:(id)arg1;
- (void)setMinimumFontSize:(double)arg1;
- (void)setFont:(id)arg1;
- (void)setLCDTextFont:(id)arg1;
- (void)setLeftTruncatesText:(_Bool)arg1;
- (void)setCenterText:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)textRect;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_automationID;

@end

@interface TPLCDTextViewScrollingView : UIView
{
    TPLCDTextView *_owner;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setOwner:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 owner:(id)arg2;

@end

@interface TPLCDView : TPLCDBar
{
    UIView *_contentView;
    TPLCDTextView *_textView;
    TPLCDTextView *_labelView;
    TPLCDSubImageView *_imageView;
    unsigned int _layoutAsLabelled:1;
    _Bool _verticallyCenterTextViewIfLabelless;
}

+ (double)defaultLabelFontSize;
+ (double)defaultTextFontSize;
@property _Bool verticallyCenterTextViewIfLabelless; // @synthesize verticallyCenterTextViewIfLabelless=_verticallyCenterTextViewIfLabelless;
- (id)secondLineText;
- (void)setSecondLineText:(id)arg1;
- (void)setLayoutAsLabelled:(_Bool)arg1;
- (void)setShadowColor:(id)arg1;
- (id)subImage;
- (void)setSubImage:(id)arg1;
- (void)blinkLabel;
- (id)label;
- (void)setLabel:(id)arg1 animate:(_Bool)arg2;
- (void)setLabel:(id)arg1;
- (void)setLabelFontSize:(double)arg1;
- (void)didFinishAnimatingLCDLabelFadeOut:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (struct CGRect)_imageViewFrame;
- (struct CGRect)_labelFrame;
- (struct CGRect)textFrame;
- (struct CGRect)_text1Frame;
- (id)text;
- (void)setText:(id)arg1;
- (void)setTextFontSize:(double)arg1;
- (double)_textVInset;
- (double)_labelVInset;
- (void)setContentsAlpha:(double)arg1;
- (_Bool)shouldCenterContentView;
- (_Bool)shouldCenterText;
- (void)dealloc;
- (id)initWithDefaultSizeForOrientation:(long long)arg1;
- (void)_resetContentViewFrame;
- (struct CGRect)fullSizedContentViewFrame;

@end

@interface TPLegacyBottomBar : UIView
{
    long long _orientation;
    long long _style;
    _Bool _suppressDrawingBackground;
    UIImageView *_shadowView;
}

+ (long long)overlayStyle;
+ (long long)fullscreenStyle;
+ (double)defaultHeight;
+ (double)defaultHeightForOrientation:(long long)arg1;
+ (double)defaultHeightForStyle:(long long)arg1;
+ (double)defaultHeightForStyle:(long long)arg1 orientation:(long long)arg2;
+ (id)upsideDownShadowImage;
+ (id)_backgroundImage;
@property(readonly) UIImageView *shadowView; // @synthesize shadowView=_shadowView;
@property(nonatomic) _Bool suppressDrawingBackground; // @synthesize suppressDrawingBackground=_suppressDrawingBackground;
- (void)setWellAlpha:(double)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (long long)orientation;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 updateFrame:(_Bool)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithDefaultSizeForOrientation:(long long)arg1;
- (id)initWithDefaultSize;

@end

@interface TPLegacyBottomSingleButtonBar : TPLegacyBottomBar
{
    id _delegate;
    UIImageView *_backgroundView;
    UIView *_well;
    TPLegacyButton *_button;
    _Bool _allowsDroppingIcons;
}

+ (id)_backgroundImage;
- (void)setSuppressDrawingBackground:(_Bool)arg1;
- (void)setWellAlpha:(double)arg1;
- (void)layoutSubviews;
- (id)button;
- (void)setButton:(id)arg1 andStyle:(_Bool)arg2;
- (void)dealloc;
- (id)initForVoiceControlWithFrame:(struct CGRect)arg1;
- (id)initForTTYWithFrame:(struct CGRect)arg1;
- (id)initForEndVideoWithFrame:(struct CGRect)arg1;
- (id)initForEndCallWithFrame:(struct CGRect)arg1;
- (id)initForIncomingCallWaitingWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (double)buttonWidth;

@end

@interface TPLegacyBottomDoubleButtonBar : TPLegacyBottomSingleButtonBar
{
    TPLegacyButton *_button2;
    UIView *_well1;
    UIView *_well2;
    UIView *_wellContainer;
}

+ (double)_wellPadding;
- (void)setWellAlpha:(double)arg1;
- (void)layoutSubviews;
- (void)_layoutButtons;
- (void)_layoutWells;
- (void)setDrawsSeparateWells:(_Bool)arg1;
- (id)button2;
- (void)setButton2:(id)arg1 andStyle:(_Bool)arg2;
- (void)setButton:(id)arg1 andStyle:(_Bool)arg2;
- (void)_updateButtonSettings:(id)arg1;
- (void)dealloc;
- (id)initForVideoChatWithFrame:(struct CGRect)arg1;
- (id)initForEmergencyCallWithFrame:(struct CGRect)arg1;
- (id)initForCallFailureWithFrame:(struct CGRect)arg1;
- (id)initForIncomingCallWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (double)_buttonWidth;

@end

@interface TPLegacyBottomLockBar : TPLegacyBottomBar
{
    NSArray *_labels;
    int _currentLabelIndex;
    NSTimer *_cycleLabelTimer;
    id _delegate;
    id _representedObject;
    TPLegacyLockKnobView *_knobView;
    UIView *_trackArrow;
    TPLegacyLockTextView *_labelView;
    TPLegacyWell *_well;
    double _knobTrackInsetLeft;
    double _fontSize;
    double _deltaFromDefaultLabelWidth;
    UIImageView *_backgroundView;
}

+ (double)defaultLabelFontSize;
+ (struct CGSize)defaultSize;
- (void)setWellAlpha:(double)arg1;
- (void)setTextAlpha:(double)arg1;
- (void)setSuppressDrawingBackground:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)_canDrawContent;
- (id)labelView;
- (void)setKnobWellWidthToDefault;
- (void)setKnobWellWidth:(double)arg1;
- (id)well;
- (double)knobTrackInsetRight;
- (double)knobTrackInsetLeft;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)representedObject;
- (void)setRepresentedObject:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)unlock;
- (void)freezeKnobInUnlockedPosition;
- (void)relock;
- (void)slideBack:(_Bool)arg1;
- (void)knobDragged:(double)arg1;
- (double)fontSize;
- (void)setFontSize:(double)arg1;
- (id)labels;
- (void)setLabels:(id)arg1;
- (void)cycleToLabelAtIndex:(int)arg1;
- (void)finishedCyclingLabelOut;
- (int)currentLabelIndex;
- (void)cycleToNextLabel;
- (void)stopCyclingLabels;
- (void)startCyclingLabels;
- (void)_setLabel:(id)arg1;
- (void)_adjustLabelOrigin;
- (void)_adjustKnobOrigin;
- (double)_calcKnobYOffset;
- (void)setLabel:(id)arg1;
- (void)upInKnob;
- (void)downInKnob;
- (_Bool)isAnimating;
- (void)stopAnimating;
- (void)startAnimating;
- (id)knob;
- (void)dealloc;
- (id)initForIncomingCallWithFrame:(struct CGRect)arg1;
- (void)setKnobImage:(id)arg1;
- (void)setKnobColor:(int)arg1;
- (id)initWithFrame:(struct CGRect)arg1 knobColor:(int)arg2;
- (id)_knobImageForColor:(int)arg1;
- (id)initWithFrame:(struct CGRect)arg1 knobImage:(id)arg2;
- (_Bool)_shouldStopLabelAnimationForGrab;
- (_Bool)usesBackgroundImage;
- (_Bool)allowsTouchTrackingBeyondVerticalThreshold;
- (id)wellImageName;
- (double)defaultWellWidth;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface TPLegacyButton : UIButton
{
    UIImageView *_plusSeparator;
    int _color;
    NSString *_plusSeparatedTitle;
    _Bool _forceReLayout;
    _Bool _currentlyLayingOut;
    _Bool _useStandardSizing;
}

+ (id)acceptVideoButtonImage;
+ (id)declineVideoButtonImage;
+ (id)declineButtonImage;
+ (id)answerButtonImage;
+ (double)defaultHeightForColor:(int)arg1;
+ (double)defaultHeight;
@property _Bool useStandardSizing; // @synthesize useStandardSizing=_useStandardSizing;
- (void)layoutSubviews;
- (void)setMinimumTitleFontSize:(double)arg1 maximumTitleFontSize:(double)arg2;
- (void)setMinimumTitleFontSize:(double)arg1;
- (void)setIconVerticalOffset:(double)arg1;
- (void)setTitleVerticalOffset:(double)arg1;
- (void)setPlusSeparatedTitle:(id)arg1;
- (void)dealloc;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (void)setTitleImagePadding:(double)arg1;
- (int)buttonColor;
- (void)setDisabledButtonColor:(int)arg1;
- (void)setButtonColor:(int)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)_adjustIconColor;
- (id)initWithTitle:(id)arg1 icon:(id)arg2 color:(int)arg3 frame:(struct CGRect)arg4;
- (void)_setDisabledButtonColor:(int)arg1;
- (void)_setButtonColor:(int)arg1;

@end

@interface TPLegacyCallWaitingButton : UIImageView
{
    TPLegacyButton *_innerButton;
    unsigned int _type:1;
}

+ (double)defaultVerticalCenteringOffset;
+ (struct CGSize)defaultSizeForType:(int)arg1;
+ (id)_buttonForType:(int)arg1;
- (_Bool)isEnabled;
- (void)setEnabled:(_Bool)arg1;
- (void)removeTarget:(id)arg1 forEvents:(int)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forEvents:(int)arg3;
- (void)removeTarget:(id)arg1 forControlEvents:(unsigned long long)arg2;
- (void)addTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (void)dealloc;
- (id)initBottomForTTYWithTitle:(id)arg1;
- (id)initBottomForSecondIncomingCallWaiting;
- (id)initBottomForIncomingCallWaiting;
- (id)initTopForTTY;
- (id)initTopForIncomingCallWaiting;
- (id)initWithFrame:(struct CGRect)arg1 type:(int)arg2;

@end

@interface TPLegacyLCDBar : UIImageView
{
    UIImage *_barBackground;
    UIImageView *_shadowView;
}

+ (double)defaultHeightForOrientation:(long long)arg1;
+ (double)defaultHeight;
+ (id)shadowImage;
+ (id)backgroundImage;
@property(readonly) UIImageView *shadowView; // @synthesize shadowView=_shadowView;
@property(retain, nonatomic) UIImage *barBackground; // @synthesize barBackground=_barBackground;
- (struct CGRect)contentStretchRect;
- (void)setOrientation:(long long)arg1;
- (void)setOrientation:(long long)arg1 updateFrame:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithDefaultSize;
- (id)initWithDefaultSizeForOrientation:(long long)arg1;

@end

@interface TPLegacyLCDSubImageView : UIView
{
    UIImage *_image;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithDefaultSize;

@end

@interface TPLegacyLCDTextView : UIView
{
    NSString *_text;
    UIFont *_font;
    UIColor *_shadowColor;
    UIColor *_textColor;
    TPLegacyLCDTextViewScrollingView *_scrollingView;
    double _fontSize;
    struct CGRect _textRect;
    UIFrameAnimation *_animation;
    id _delegate;
    double _minFontSize;
    unsigned int _textRectIsValid:1;
    unsigned int _centerText:1;
    unsigned int _animates:1;
    unsigned int _isAnimating:1;
    unsigned int _leftTruncates:1;
}

+ (double)defaultMinimumFontSize;
- (void)setDelegate:(id)arg1;
- (void)resetAnimation;
- (_Bool)animates;
- (void)stopAnimating;
- (void)_finishedScrolling;
- (void)startAnimating;
- (void)_startScrolling;
- (void)setAnimatesIfTruncated:(_Bool)arg1;
- (void)_setupForAnimationIfNecessary;
- (void)_scheduleStartScrolling;
- (void)_tearDownAnimation;
- (void)drawRect:(struct CGRect)arg1;
- (void)setShadowColor:(id)arg1;
- (void)setTextColor:(id)arg1;
- (void)_drawTextInRect:(struct CGRect)arg1 verticallyOffset:(_Bool)arg2;
- (struct CGSize)sizeToFit;
- (id)text;
- (void)setText:(id)arg1;
- (void)setMinimumFontSize:(double)arg1;
- (void)setFont:(id)arg1;
- (void)setLCDTextFont:(id)arg1;
- (void)setLeftTruncatesText:(_Bool)arg1;
- (void)setCenterText:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)textRect;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_automationID;

@end

@interface TPLegacyLCDTextViewScrollingView : UIView
{
    TPLegacyLCDTextView *_owner;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setOwner:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 owner:(id)arg2;

@end

@interface TPLegacyLCDView : TPLegacyLCDBar
{
    UIView *_contentView;
    TPLegacyLCDTextView *_textView;
    TPLegacyLCDTextView *_secondLineTextView;
    TPLegacyLCDTextView *_labelView;
    TPLegacyLCDSubImageView *_imageView;
    unsigned int _layoutAsLabelled:1;
    _Bool _hasBackgroundGradient;
    UIView *_backgroundGradientView;
}

+ (double)labelFontSize;
+ (double)textFontSize;
@property(nonatomic) _Bool hasBackgroundGradient; // @synthesize hasBackgroundGradient=_hasBackgroundGradient;
@property(retain, nonatomic) UIView *backgroundGradientView; // @synthesize backgroundGradientView=_backgroundGradientView;
- (void)setLayoutAsLabelled:(_Bool)arg1;
- (void)setShadowColor:(id)arg1;
- (id)subImage;
- (void)setSubImage:(id)arg1;
- (void)blinkLabel;
- (id)label;
- (void)setLabel:(id)arg1 animate:(_Bool)arg2;
- (void)setLabel:(id)arg1;
- (void)didFinishAnimatingLCDLabelFadeOut:(id)arg1 finished:(id)arg2 context:(id)arg3;
- (void)setSecondLineText:(id)arg1;
- (void)layoutSubviews;
- (struct CGRect)_imageViewFrame;
- (struct CGRect)_labelFrame;
- (id)secondLineText;
- (struct CGRect)_text2Frame;
- (struct CGRect)textFrame;
- (struct CGRect)_text1Frame;
- (id)text;
- (void)setText:(id)arg1;
- (double)_textVInset;
- (double)_labelVInset;
- (void)setContentsAlpha:(double)arg1;
- (_Bool)shouldCenterContentView;
- (_Bool)shouldCenterText;
- (void)dealloc;
- (id)initWithDefaultSizeForOrientation:(long long)arg1;
- (void)_resetContentViewFrame;
- (struct CGRect)fullSizedContentViewFrame;

@end

@interface TPLegacyLockKnobView : UIImageView
{
    TPLegacyBottomLockBar *_track;
    UIAlphaAnimation *_animation;
    double _centerDelta;
    _Bool _tracking;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)beginTracking:(id)arg1;
- (_Bool)shouldBeginTracking:(id)arg1;
- (_Bool)isTracking;
- (void)dealloc;
- (void)setLockView:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithImage:(id)arg1;

@end

@interface TPLegacyLockTextView : UIView
{
    NSString *_label;
    struct CGImage *_textCache;
    char *_textData;
    NSTimer *_maskTimer;
    double _maskStartTime;
    UIFont *_labelFont;
    double _deltaFromDefaultTrackWidth;
    UIImage *_maskImage;
    double _fps;
}

@property(readonly) double deltaFromDefaultTrackWidth; // @synthesize deltaFromDefaultTrackWidth=_deltaFromDefaultTrackWidth;
- (void)movedFromWindow:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)isAnimating;
- (double)fps;
- (void)setFPS:(double)arg1;
- (void)stopAnimation;
- (void)startAnimation;
- (id)label;
- (id)initWithLabel:(id)arg1 fontSize:(double)arg2 trackWidthDelta:(double)arg3;
- (void)_cacheLabel:(id)arg1 size:(struct CGSize)arg2;
- (void)dealloc;

@end

@interface TPLegacyPhonePad : UIControl
{
    long long _downKey;
    long long _highlightKey;
    id _delegate;
    _Bool _playsSounds;
    _Bool _supportsHardPause;
    double _topHeight;
    double _midHeight;
    double _bottomHeight;
    double _leftWidth;
    double _midWidth;
    double _rightWidth;
    struct __CFSet *_inflightSounds;
    struct __CFDictionary *_keyToButtonMap;
    unsigned int _incompleteSounds;
    unsigned int _delegateSoundCallbacks:1;
    unsigned int _soundsActivated:1;
}

+ (void)_delayedDeactivate;
+ (_Bool)launchFieldTestIfNeeded:(id)arg1;
+ (_Bool)shouldStringAutoDial:(id)arg1 givenLastChar:(BOOL)arg2;
@property _Bool supportsHardPause; // @synthesize supportsHardPause=_supportsHardPause;
- (void)_stopAllSoundsForcingCallbacks:(_Bool)arg1;
- (void)_stopSoundForKey:(unsigned long long)arg1;
- (void)_playSoundForKey:(unsigned long long)arg1;
- (void)_notifySoundCompletionIfNecessary:(unsigned int)arg1;
- (struct CGRect)_rectForKey:(unsigned long long)arg1;
- (int)_keyForPoint:(struct CGPoint)arg1;
- (void)_handleKeyPressAndHold:(id)arg1;
- (void)_handleKey:(id)arg1 forUIEvent:(id)arg2;
- (_Bool)cancelTouchTracking;
- (void)setHighlighted:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)_imageByCroppingImage:(id)arg1 toRect:(struct CGRect)arg2;
- (struct CGRect)_updateRect:(struct CGRect)arg1 withScale:(double)arg2;
- (double)_yFudge;
- (id)_highlightedImage;
- (id)_keypadImage;
- (id)_pressedImage;
- (struct CGPoint)_keypadOrigin;
- (void)setNeedsDisplayForKey:(int)arg1;
- (id)_buttonForKeyAtIndex:(unsigned long long)arg1;
- (void)setButton:(id)arg1 forKeyAtIndex:(unsigned long long)arg2;
- (void)setPlaysSounds:(_Bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)_appResumed;
- (void)_appSuspended;
- (void)removeFromSuperview;
- (void)_activateSounds:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (long long)indexForHighlightedKey;
- (void)highlightKeyAtIndex:(long long)arg1;
- (id)scriptingInfoWithChildren;

@end

@interface TPLegacyWell : UIImageView
{
}

- (id)initWithImage:(id)arg1;

@end

@interface TPNumberPadButton : UIControl <TPNumberPadButtonProtocol>
{
    TPRevealingRingView *_revealingRingView;
    unsigned int character;
    UIColor *_color;
    CALayer *_glyphLayer;
    CALayer *_highlightedGlyphLayer;
}

+ (double)unhighlightCrossfadeHighlightFadeDuration;
+ (double)unhighlightCrossfadeNormalFadeDuration;
+ (double)unhighlightCrossfadeHighlightBeginTime;
+ (double)unhighlightCrossfadeNormalBeginTime;
+ (double)highlightCrossfadeHighlightFadeDuration;
+ (double)highlightCrossfadeNormalFadeDuration;
+ (double)highlightCrossfadeHighlightBeginTime;
+ (double)highlightCrossfadeNormalBeginTime;
+ (double)horizontalPadding;
+ (double)verticalPadding;
+ (id)imageForCharacter:(unsigned int)arg1 highlighted:(_Bool)arg2 whiteVersion:(_Bool)arg3;
+ (_Bool)usesBoldAssets;
+ (_Bool)usesTelephonyGlyphsWhereAvailable;
+ (id)imageForCharacter:(unsigned int)arg1 highlighted:(_Bool)arg2;
+ (id)imageForCharacter:(unsigned int)arg1;
+ (double)outerCircleDiameter;
+ (struct UIEdgeInsets)paddingOutsideRing;
+ (struct CGSize)defaultSize;
@property(retain) CALayer *highlightedGlyphLayer; // @synthesize highlightedGlyphLayer=_highlightedGlyphLayer;
@property(retain) CALayer *glyphLayer; // @synthesize glyphLayer=_glyphLayer;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(readonly, nonatomic) TPRevealingRingView *revealingRingView; // @synthesize revealingRingView=_revealingRingView;
@property unsigned int character; // @synthesize character;
- (void)touchCancelled;
- (void)touchUp;
- (void)touchDown;
- (id)defaultColor;
- (void)setHighlighted:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(nonatomic) double alphaOutsideAndInsideRing; // @dynamic alphaOutsideAndInsideRing;
- (void)setUsesColorBurnBlending;
- (void)setUsesColorDodgeBlending;
- (void)dealloc;
- (id)initForCharacter:(unsigned int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPNumberPadDarkStyleButton : TPNumberPadButton
{
}

+ (double)unhighlightCrossfadeHighlightFadeDuration;
+ (double)unhighlightCrossfadeNormalFadeDuration;
+ (double)unhighlightCrossfadeHighlightBeginTime;
+ (double)unhighlightCrossfadeNormalBeginTime;
+ (double)highlightCrossfadeHighlightFadeDuration;
+ (double)highlightCrossfadeNormalFadeDuration;
+ (double)highlightCrossfadeHighlightBeginTime;
+ (double)highlightCrossfadeNormalBeginTime;
+ (id)imageForCharacter:(unsigned int)arg1 highlighted:(_Bool)arg2;
+ (id)imageForCharacter:(unsigned int)arg1;
- (id)defaultColor;

@end

@interface TPNumberPadLightStyleButton : TPNumberPadButton
{
}

+ (_Bool)usesTelephonyGlyphsWhereAvailable;
+ (double)unhighlightCrossfadeHighlightFadeDuration;
+ (double)unhighlightCrossfadeNormalFadeDuration;
+ (double)unhighlightCrossfadeHighlightBeginTime;
+ (double)unhighlightCrossfadeNormalBeginTime;
+ (double)highlightCrossfadeHighlightFadeDuration;
+ (double)highlightCrossfadeNormalFadeDuration;
+ (double)highlightCrossfadeHighlightBeginTime;
+ (double)highlightCrossfadeNormalBeginTime;
+ (double)horizontalPadding;
+ (double)verticalPadding;
+ (id)imageForCharacter:(unsigned int)arg1 highlighted:(_Bool)arg2;
+ (id)imageForCharacter:(unsigned int)arg1;
- (id)initForCharacter:(unsigned int)arg1;
- (id)defaultColor;

@end

@interface TPPasscodeView : UIView
{
    NSMutableString *_passcodeMutableString;
}

@property(retain) NSMutableString *passcodeMutableString; // @synthesize passcodeMutableString=_passcodeMutableString;
- (void)clear;
- (void)deleteLastCharacter;
- (void)appendCharacter:(id)arg1;
@property(readonly) NSString *passcodeString; // @dynamic passcodeString;
- (struct CGSize)intrinsicContentSize;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPPathView : UIView
{
    UIBezierPath *_path;
    UIColor *_fillColor;
}

@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(retain, nonatomic) UIBezierPath *path; // @synthesize path=_path;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface TPPhonePad : UIControl <TPDialerKeypadProtocol>
{
    long long _downKey;
    long long _highlightKey;
    id <TPDialerKeypadDelegate> _delegate;
    _Bool _playsSounds;
    _Bool _supportsHardPause;
    double _topHeight;
    double _midHeight;
    double _bottomHeight;
    double _leftWidth;
    double _midWidth;
    double _rightWidth;
    struct __CFSet *_inflightSounds;
    struct __CFDictionary *_keyToButtonMap;
    unsigned int _incompleteSounds;
    unsigned int _delegateSoundCallbacks:1;
    unsigned int _soundsActivated:1;
}

+ (void)_delayedDeactivate;
+ (_Bool)launchFieldTestIfNeeded:(id)arg1;
+ (_Bool)shouldStringAutoDial:(id)arg1 givenLastChar:(BOOL)arg2;
@property _Bool supportsHardPause; // @synthesize supportsHardPause=_supportsHardPause;
- (void)_stopAllSoundsForcingCallbacks:(_Bool)arg1;
- (void)_stopSoundForKey:(unsigned long long)arg1;
- (void)_playSoundForKey:(unsigned long long)arg1;
- (void)_notifySoundCompletionIfNecessary:(unsigned int)arg1;
- (struct CGRect)_rectForKey:(unsigned long long)arg1;
- (int)_keyForPoint:(struct CGPoint)arg1;
- (void)_handleKeyPressAndHoldForKey:(long long)arg1;
- (void)_handleKeyPressAndHoldForDownKey:(id)arg1;
- (void)_handleKeyPressAndHoldForHighlightedKey:(id)arg1;
- (void)_handleKey:(id)arg1 forUIEvent:(id)arg2;
- (_Bool)cancelTouchTracking;
- (void)setHighlighted:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)_imageByCroppingImage:(id)arg1 toRect:(struct CGRect)arg2;
- (struct CGRect)_updateRect:(struct CGRect)arg1 withScale:(double)arg2;
- (double)_yFudge;
- (id)_highlightedImage;
- (id)_keypadImage;
- (id)_pressedImage;
- (struct CGPoint)_keypadOrigin;
- (void)setNeedsDisplayForKey:(int)arg1;
- (id)_buttonForKeyAtIndex:(unsigned long long)arg1;
- (void)setButton:(id)arg1 forKeyAtIndex:(unsigned long long)arg2;
- (void)setPlaysSounds:(_Bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)movedToWindow:(id)arg1;
- (void)movedFromWindow:(id)arg1;
- (void)_appResumed;
- (void)_appSuspended;
- (void)removeFromSuperview;
- (void)_activateSounds:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (long long)indexForHighlightedKey;
- (void)highlightKeyAtIndex:(long long)arg1;
- (void)performTapActionEndForHighlightedKey;
- (void)performTapActionDownForHighlightedKey;
- (id)scriptingInfoWithChildren;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPPortraitOnlyNavigationController : UINavigationController
{
}

- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;

@end

@interface TPRevealingRingView : UIView
{
    _Bool _revealed;
    TPBackgroundRoundedRectView *_outerView;
    TPPathView *_outerGammaView;
    TPPathView *_innerGammaView;
    TPPathView *_innerView;
    UIColor *_colorOutsideRing;
    UIColor *_colorInsideRing;
    struct UIEdgeInsets _paddingOutsideRing;
    double _defaultRingStrokeWidth;
    double _gammaBoost;
    double _revealAnimationDuration;
    double _unrevealAnimationDuration;
    double _minimumRevealingScale;
    double _cornerRadius;
    int _animationStyle;
    _Bool _isCircularRing;
    _Bool _innerGammaAlpha;
    _Bool _gammaBoostOuterRing;
    _Bool _gammaBoostInside;
    double _alphaInsideRing;
    double _alphaOutsideRing;
}

@property(nonatomic) _Bool gammaBoostInside; // @synthesize gammaBoostInside=_gammaBoostInside;
@property(nonatomic) _Bool gammaBoostOuterRing; // @synthesize gammaBoostOuterRing=_gammaBoostOuterRing;
@property(nonatomic) int animationStyle; // @synthesize animationStyle=_animationStyle;
@property(retain, nonatomic) UIColor *colorInsideRing; // @synthesize colorInsideRing=_colorInsideRing;
@property(retain, nonatomic) UIColor *colorOutsideRing; // @synthesize colorOutsideRing=_colorOutsideRing;
@property(nonatomic) double minimumRevealingScale; // @synthesize minimumRevealingScale=_minimumRevealingScale;
@property(nonatomic) double unrevealAnimationDuration; // @synthesize unrevealAnimationDuration=_unrevealAnimationDuration;
@property(nonatomic) double revealAnimationDuration; // @synthesize revealAnimationDuration=_revealAnimationDuration;
@property(nonatomic) double gammaBoost; // @synthesize gammaBoost=_gammaBoost;
@property(nonatomic) double defaultRingStrokeWidth; // @synthesize defaultRingStrokeWidth=_defaultRingStrokeWidth;
@property(readonly, nonatomic) struct UIEdgeInsets paddingOutsideRing; // @synthesize paddingOutsideRing=_paddingOutsideRing;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double alphaOutsideRing; // @synthesize alphaOutsideRing=_alphaOutsideRing;
@property(nonatomic) double alphaInsideRing; // @synthesize alphaInsideRing=_alphaInsideRing;
- (void)_animateForReveal:(_Bool)arg1 withDuration:(float)arg2 delay:(double)arg3;
- (id)_bezierPathForRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
- (_Bool)_shouldDrawAsCircle:(struct CGSize)arg1 cornerRadius:(double)arg2;
- (_Bool)_isSquare:(struct CGSize)arg1;
- (void)_evaluateCircularness;
- (void)_setInnerGammaScale:(double)arg1;
- (void)_setOuterGammaScale:(double)arg1;
- (void)_setInnerCircleScale:(double)arg1;
- (void)_calculateOuter:(struct CGRect *)arg1 inner:(struct CGRect *)arg2 newXOffset:(double *)arg3 newYOffset:(double *)arg4 withScale:(double)arg5;
- (void)_adjustGammaBoostIfNecessary;
- (void)layoutSubviews;
- (void)setUsesColorBurnBlending:(_Bool)arg1;
- (void)setUsesColorDodgeBlending:(_Bool)arg1;
- (void)setRevealed:(_Bool)arg1 animated:(_Bool)arg2 delay:(double)arg3;
- (void)setRevealed:(_Bool)arg1 animated:(_Bool)arg2;
- (struct CGSize)intrinsicContentSize;
- (void)setFrame:(struct CGRect)arg1;
- (void)setPaddingOutsideRing:(struct UIEdgeInsets)arg1;
- (void)setRingGammaBoost:(double)arg1;
@property(readonly, nonatomic) struct CGSize ringSize; // @dynamic ringSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 paddingOutsideRing:(struct UIEdgeInsets)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPRingView : UIView
{
    CALayer *_luminanceRingLayer;
    CALayer *_dodgeRingLayer;
    CALayer *_highlightDodgeLayer;
    CALayer *_highlightLuminanceLayer;
    CALayer *_selectionLayer;
}

+ (id)createRingImageWithSize:(struct CGSize)arg1 strokeWidth:(double)arg2 color:(id)arg3;
+ (id)ringImageForDodge;
+ (id)ringImageForLuminance;
+ (id)colorForDodge;
+ (id)colorForLuminance;
+ (double)ringCornerRadius;
+ (double)ringStroke;
+ (struct CGSize)ringSize;
@property(retain) CALayer *selectionLayer; // @synthesize selectionLayer=_selectionLayer;
@property(retain) CALayer *highlightLuminanceLayer; // @synthesize highlightLuminanceLayer=_highlightLuminanceLayer;
@property(retain) CALayer *highlightDodgeLayer; // @synthesize highlightDodgeLayer=_highlightDodgeLayer;
@property(retain) CALayer *dodgeRingLayer; // @synthesize dodgeRingLayer=_dodgeRingLayer;
@property(retain) CALayer *luminanceRingLayer; // @synthesize luminanceRingLayer=_luminanceRingLayer;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;

@end

@interface TPSetPINViewController : UIViewController <TPSimpleNumberPadDelegate>
{
    _Bool _confirmPIN;
    int _initialState;
    int _state;
    unsigned int _minPINLength;
    unsigned int _maxPINLength;
    id <TPSetPINViewControllerDelegate> _delegate;
    NSString *_promptTextForOldPIN;
    NSString *_promptTextForNewPIN;
    NSString *_promptTextForConfirmingNewPIN;
    NSString *_promptTextForSavingPIN;
    UIView *_customBackgroundView;
    UILabel *_statusLabel;
    TPPasscodeView *_passcodeView;
    TPSimpleNumberPad *_numberPad;
    NSString *_oldPIN;
    NSString *_unconfirmedPIN;
}

@property(retain) NSString *unconfirmedPIN; // @synthesize unconfirmedPIN=_unconfirmedPIN;
@property(retain) NSString *oldPIN; // @synthesize oldPIN=_oldPIN;
@property(retain) TPSimpleNumberPad *numberPad; // @synthesize numberPad=_numberPad;
@property(retain) TPPasscodeView *passcodeView; // @synthesize passcodeView=_passcodeView;
@property(retain) UILabel *statusLabel; // @synthesize statusLabel=_statusLabel;
@property _Bool confirmPIN; // @synthesize confirmPIN=_confirmPIN;
@property unsigned int maxPINLength; // @synthesize maxPINLength=_maxPINLength;
@property unsigned int minPINLength; // @synthesize minPINLength=_minPINLength;
@property(nonatomic) int state; // @synthesize state=_state;
@property int initialState; // @synthesize initialState=_initialState;
@property(retain) UIView *customBackgroundView; // @synthesize customBackgroundView=_customBackgroundView;
@property(retain, nonatomic) NSString *promptTextForSavingPIN; // @synthesize promptTextForSavingPIN=_promptTextForSavingPIN;
@property(retain, nonatomic) NSString *promptTextForConfirmingNewPIN; // @synthesize promptTextForConfirmingNewPIN=_promptTextForConfirmingNewPIN;
@property(retain, nonatomic) NSString *promptTextForNewPIN; // @synthesize promptTextForNewPIN=_promptTextForNewPIN;
@property(retain, nonatomic) NSString *promptTextForOldPIN; // @synthesize promptTextForOldPIN=_promptTextForOldPIN;
@property id <TPSetPINViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_updateUIForStateChange;
- (void)_updateStatusLabel;
- (void)_updateNavBarButtons;
- (void)_updateDeleteAllowed;
- (void)_setPromptText:(id)arg1 oldPromptTextPointer:(id *)arg2;
- (void)simpleNumberPadDeletePressed:(id)arg1;
- (void)simpleNumberPad:(id)arg1 buttonPressedWithCharacter:(id)arg2;
- (void)_cancelButtonTapped;
- (void)_doneButtonTapped;
- (void)resetWithErrorPrompt:(id)arg1 title:(id)arg2;
- (void)resetWithErrorPrompt:(id)arg1;
- (_Bool)wantsFullScreenLayout;
- (void)loadView;
- (void)dealloc;
- (id)initForChangePINWithMinLength:(unsigned int)arg1 maxLength:(unsigned int)arg2 confirmPIN:(_Bool)arg3;
- (id)initForNewPINWithMinLength:(unsigned int)arg1 maxLength:(unsigned int)arg2 confirmPIN:(_Bool)arg3;
- (id)_initForMinLength:(unsigned int)arg1 maxLength:(unsigned int)arg2 confirmPIN:(_Bool)arg3;
- (id)init;

@end

@interface TPSimpleNumberPad : TPNumberPad
{
    UIButton *_deleteButton;
    _Bool _showsDeleteButton;
    id <TPSimpleNumberPadDelegate> _delegate;
}

+ (id)_numberPadCharacters;
@property(nonatomic) _Bool showsDeleteButton; // @synthesize showsDeleteButton=_showsDeleteButton;
@property id <TPSimpleNumberPadDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setNumberButtonsEnabled:(_Bool)arg1;
- (void)_updateDeleteButton;
- (void)_deleteButtonClicked:(id)arg1 withEvent:(id)arg2;
- (void)buttonUp:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithButtons:(id)arg1;

@end

@interface TPSimpleNumberPadButton : TPNumberPadLightStyleButton
{
}

+ (id)disabledImageForCharacter:(unsigned int)arg1;
+ (double)verticalPadding;
- (void)setGreyedOut:(_Bool)arg1;

@end

@interface TPSlidingButton : UIView <_UIActionSliderDelegate>
{
    int _type;
    _UIActionSlider *_acceptButton;
    UIButton *_sideButtonRight;
    id <TPSlidingButtonDelegateProtocol> _delegate;
    UIImageView *_dialImageView;
}

@property(retain) UIImageView *dialImageView; // @synthesize dialImageView=_dialImageView;
@property id <TPSlidingButtonDelegateProtocol> delegate; // @synthesize delegate=_delegate;
@property int type; // @synthesize type=_type;
@property(retain) UIButton *sideButtonRight; // @synthesize sideButtonRight=_sideButtonRight;
@property(retain) _UIActionSlider *acceptButton; // @synthesize acceptButton=_acceptButton;
- (void)actionSliderDidCompleteSlide:(id)arg1;
- (void)actionSlider:(id)arg1 didUpdateSlideWithValue:(double)arg2;
- (struct CGSize)_knobSize;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithSlidingButtonType:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPStarkDividerView : UIView
{
    NSLayoutConstraint *_horizontalPositioningConstraint;
}

@property(retain) NSLayoutConstraint *horizontalPositioningConstraint; // @synthesize horizontalPositioningConstraint=_horizontalPositioningConstraint;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;

@end

@interface TPStarkInCallButton : UIButton
{
    _Bool _toggledOn;
    int _inCallButtonType;
    int _specialLayoutType;
    UILabel *_buttonLabel;
    NSLayoutConstraint *_horizontalPositioningConstraint;
    UIColor *_unhighlightedBackgroundColor;
    TPStarkInCallButtonRing *_ringView;
}

@property(retain) TPStarkInCallButtonRing *ringView; // @synthesize ringView=_ringView;
@property(retain) UIColor *unhighlightedBackgroundColor; // @synthesize unhighlightedBackgroundColor=_unhighlightedBackgroundColor;
@property(nonatomic) int specialLayoutType; // @synthesize specialLayoutType=_specialLayoutType;
@property(nonatomic) _Bool toggledOn; // @synthesize toggledOn=_toggledOn;
@property(readonly) int inCallButtonType; // @synthesize inCallButtonType=_inCallButtonType;
@property(retain) NSLayoutConstraint *horizontalPositioningConstraint; // @synthesize horizontalPositioningConstraint=_horizontalPositioningConstraint;
@property(retain) UILabel *buttonLabel; // @synthesize buttonLabel=_buttonLabel;
- (void)dealloc;
- (void)updateToProperIconColor;
- (void)setHasRingView:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initForButtonType:(int)arg1;

@end

@interface TPStarkInCallButtonRing : UIView
{
    _Bool _selected;
    _Bool _highlighted;
    _Bool _toggledOn;
    UIColor *_fillColor;
}

@property(nonatomic) _Bool toggledOn; // @synthesize toggledOn=_toggledOn;
@property(nonatomic) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
- (struct CGSize)intrinsicContentSize;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface TPStarkInCallButtonsView : UIView
{
    long long _highlightedControlIndex;
    int _buttonsMode;
    float _buttonDistributionScalingFactor;
    id <TPStarkInCallButtonsViewDelegate> _delegate;
    NSMutableDictionary *_buttonsDictionary;
    NSArray *_buttonsArray;
    NSMutableArray *_buttonDividerViews;
}

@property(retain) NSMutableArray *buttonDividerViews; // @synthesize buttonDividerViews=_buttonDividerViews;
@property(retain) NSArray *buttonsArray; // @synthesize buttonsArray=_buttonsArray;
@property(retain) NSMutableDictionary *buttonsDictionary; // @synthesize buttonsDictionary=_buttonsDictionary;
@property float buttonDistributionScalingFactor; // @synthesize buttonDistributionScalingFactor=_buttonDistributionScalingFactor;
@property id <TPStarkInCallButtonsViewDelegate> delegate; // @synthesize delegate=_delegate;
@property int buttonsMode; // @synthesize buttonsMode=_buttonsMode;
- (void)phoneCallStatusChangedNotification:(id)arg1;
- (void)callCenterModelStateChangedNotification:(id)arg1;
- (void)buttonWasTapped:(id)arg1;
- (_Bool)shouldShowActionTypeSendToVoicemail;
- (id)keyForButtonType:(int)arg1;
- (id)existingButtonsNotInArray:(id)arg1;
- (id)buttonForButtonType:(int)arg1 createIfNecessary:(_Bool)arg2 createWithHorizontalPositionFraction:(float)arg3;
- (void)updateButtonsForCallModelState;
- (float)distributedFractionForUndistributedFraction:(float)arg1;
- (void)applyHorizontalPositioningConstraintWithFraction:(float)arg1 forDividerView:(id)arg2;
- (void)applyHorizontalPositioningConstraintWithFraction:(float)arg1 forButton:(id)arg2;
- (void)removeButtons:(id)arg1;
- (void)setButtonsMode:(int)arg1 animated:(_Bool)arg2;
- (void)setMuted:(_Bool)arg1;
- (_Bool)canBecomeFirstResponder;
- (void)performActionForHighlightedControl;
@property(readonly) long long numberOfControls;
@property(nonatomic) long long highlightedControlIndex;
- (long long)nextHighlightableControlFromIndex:(long long)arg1 ascending:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPStarkInCallHardPauseButton : UIButton
{
    id <TPStarkHardPauseButtonDelegate> _delegate;
}

@property id <TPStarkHardPauseButtonDelegate> delegate; // @synthesize delegate=_delegate;
- (void)hardPauseControllerChangedNotification:(id)arg1;
- (void)updateHardPauseButtonState;
- (void)hardPausePressed;
- (void)setHighlighted:(_Bool)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TPStarkInCallViewController : UIViewController <TPStarkPhoneCallGalleryViewDelegate, TPStarkHardPauseButtonDelegate, TPStarkInCallButtonsViewDelegate, UIActionSheetDelegate>
{
    TUReplyWithMessageStore *_replyWithMessageStore;
    unsigned short _currentMode;
    id <TPStarkInCallViewControllerDelegate> _delegate;
    NSArray *_primaryPhoneCalls;
    NSArray *_conferenceParticipants;
    TUCall *_incomingPhoneCall;
    UIView *_flippyView;
    TPStarkPhoneCallGalleryView *_galleryView;
    TPStarkInCallButtonsView *_buttonsView;
    TPStarkInCallHardPauseButton *_hardPauseButton;
    NSTimer *_viewUpdateClockTickTimer;
    TUCall *_callToDecline;
    TUCall *_failedCall;
}

@property(retain) TUCall *failedCall; // @synthesize failedCall=_failedCall;
@property unsigned short currentMode; // @synthesize currentMode=_currentMode;
@property(retain) TUCall *callToDecline; // @synthesize callToDecline=_callToDecline;
@property(retain) NSTimer *viewUpdateClockTickTimer; // @synthesize viewUpdateClockTickTimer=_viewUpdateClockTickTimer;
@property(retain) TPStarkInCallHardPauseButton *hardPauseButton; // @synthesize hardPauseButton=_hardPauseButton;
@property(retain) TPStarkInCallButtonsView *buttonsView; // @synthesize buttonsView=_buttonsView;
@property(retain) TPStarkPhoneCallGalleryView *galleryView; // @synthesize galleryView=_galleryView;
@property(retain) UIView *flippyView; // @synthesize flippyView=_flippyView;
@property(retain) TUCall *incomingPhoneCall; // @synthesize incomingPhoneCall=_incomingPhoneCall;
@property(copy) NSArray *conferenceParticipants; // @synthesize conferenceParticipants=_conferenceParticipants;
@property(copy) NSArray *primaryPhoneCalls; // @synthesize primaryPhoneCalls=_primaryPhoneCalls;
@property id <TPStarkInCallViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_physicalButtonsCancelled:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsEnded:(id)arg1 withEvent:(id)arg2;
- (void)_physicalButtonsBegan:(id)arg1 withEvent:(id)arg2;
- (void)_wheelChangedWithEvent:(id)arg1;
- (void)selectNextHighlightableControlAscending:(_Bool)arg1;
- (void)hardPauseButtonDidChangeVisibility:(id)arg1;
- (void)highlightHardPauseButton;
- (_Bool)currentCallStateWarrantsCallWaitingMode;
- (void)callFailedNotification:(id)arg1;
- (void)muteStateChangedNotification:(id)arg1;
- (void)viewUpdateClockTickTimerFired:(id)arg1;
- (void)updateButtonsViewState;
- (_Bool)canSendMessageToCall:(id)arg1;
- (_Bool)isSpringBoardPasscodeLocked;
- (_Bool)areIncomingCallOptionsAllowed;
- (void)handleAlertControllerSendMessageResponse:(id)arg1;
- (id)replyWithMessageStore;
- (void)inCallButtonWasTapped:(id)arg1;
- (void)_sendMessageResponse:(id)arg1 toCall:(id)arg2;
- (_Bool)canSendMessage;
- (_Bool)isKeypadAllowed;
- (_Bool)isSwapCallsAllowed;
- (_Bool)isMergeCallsAllowed;
- (_Bool)isAddCallAllowed;
- (id)representativePhoneCallForConferenceForGalleryView:(id)arg1;
- (id)allConferenceParticipantCalls;
- (id)conferenceParticipantCallsForPhoneCall:(id)arg1;
- (id)primaryPhoneCallsForGalleryView:(id)arg1;
- (_Bool)isMuted;
- (void)setIsMuted:(_Bool)arg1;
@property(readonly) _Bool isDismissable;
- (id)currentActivePhoneCall;
- (id)__sanitizedPrimaryPhoneCallOrdering:(id)arg1;
- (void)setPrimaryPhoneCalls:(id)arg1 conferencePhoneCalls:(id)arg2 incomingPhoneCall:(id)arg3;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPStarkPhoneCallContainer : UIView
{
    _Bool _shouldMerge;
    _Bool _merging;
    id <TPStarkPhoneCallContainerDataSource> _dataSource;
    id <TPStarkPhoneCallContainerDelegate> _delegate;
    NSMutableArray *_visibleCells;
}

@property(getter=isMerging) _Bool merging; // @synthesize merging=_merging;
@property _Bool shouldMerge; // @synthesize shouldMerge=_shouldMerge;
@property(retain) NSMutableArray *visibleCells; // @synthesize visibleCells=_visibleCells;
@property(nonatomic) id <TPStarkPhoneCallContainerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) id <TPStarkPhoneCallContainerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (id)constraintToFillContainerWithLeftOfCell:(id)arg1;
- (void)addRelationForLeftOfCell:(id)arg1;
- (id)constraintToFillContainerWithRightOfCell:(id)arg1;
- (void)addRelationForRightOfCell:(id)arg1;
- (void)addRelationForWidthOfCell:(id)arg1;
- (void)updateAllCellConstraints;
- (void)mergeAllCellConstraints;
- (void)addConstraintsForNewCell:(id)arg1;
- (void)removeAllConstraintsForCell:(id)arg1;
- (void)removeVisibleCells:(unsigned long long)arg1;
- (void)createVisibleCells:(unsigned long long)arg1;
- (void)mergeVisibleCells;
- (void)phoneCallViewCellTapped:(id)arg1;
- (void)animateLayoutOfViewWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateLayoutAnimated:(_Bool)arg1;
- (void)updateNumberOfCellsWithNewValue:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)setNeedsMerge;
- (void)updateCell:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)reloadDataAnimated:(_Bool)arg1;
- (_Bool)shouldReloadCellsWithNumberOfCells:(unsigned long long)arg1;
- (void)reloadData;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_reloadQueue;

@end

@interface TPStarkPhoneCallGalleryView : UIView <TPStarkPhoneCallContainerDataSource, TPStarkPhoneCallContainerDelegate>
{
    id <TPStarkPhoneCallGalleryViewDelegate> _delegate;
    TPStarkPhoneCallContainer *_container;
}

+ (id)statusStringForDisplayForCall:(id)arg1;
@property(retain) TPStarkPhoneCallContainer *container; // @synthesize container=_container;
@property id <TPStarkPhoneCallGalleryViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)phoneCallDataDidChange:(id)arg1;
- (void)setIsShowingCallFailure:(_Bool)arg1;
- (void)endPhoneCall:(id)arg1 animated:(_Bool)arg2;
- (void)mergePrimaryPhoneCallsAnimated:(_Bool)arg1;
- (void)addPrimaryPhoneCall:(id)arg1 animated:(_Bool)arg2;
- (id)phoneCallForIndex:(unsigned long long)arg1 isMerged:(_Bool *)arg2;
- (id)mergedStringForMergedCalls;
- (void)phoneCallContainer:(id)arg1 phoneCallViewTappedAtIndex:(unsigned long long)arg2;
- (_Bool)phoneCallContainer:(id)arg1 cellIsDimmedAtIndex:(unsigned long long)arg2;
- (id)phoneCallContainer:(id)arg1 subtitleForViewCellAtIndex:(unsigned long long)arg2;
- (id)phoneCallContainer:(id)arg1 titleForViewCellAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfViewCellsForPhoneCallContainer:(id)arg1;
- (void)reloadPhoneCallData;
- (id)primaryCalls;
- (id)mergedCalls;
- (void)stopListeningForCallNotifications;
- (void)startListeningForCallNotifications;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPStarkPhoneCallViewCell : UIControl
{
    NSLayoutConstraint *_containerSpecificLeftConstraint;
    NSLayoutConstraint *_containerSpecificRightConstraint;
    UILabel *_mainLabel;
    UILabel *_subtitleLabel;
}

@property(retain) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain) UILabel *mainLabel; // @synthesize mainLabel=_mainLabel;
@property(retain) NSLayoutConstraint *containerSpecificRightConstraint; // @synthesize containerSpecificRightConstraint=_containerSpecificRightConstraint;
@property(retain) NSLayoutConstraint *containerSpecificLeftConstraint; // @synthesize containerSpecificLeftConstraint=_containerSpecificLeftConstraint;
- (void)setTitle:(id)arg1 subtitle:(id)arg2 animated:(_Bool)arg3;
- (void)setDimmed:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setEnabled:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPStarkUtilities : NSObject
{
}

+ (_Bool)activeInterfaceMechanismIsTouchOnly;
+ (_Bool)activeInterfaceMechanismIsHardware;
+ (id)starkScreen;

@end

@interface TPSuperBottomBar : UIView <TPSlidingButtonDelegateProtocol>
{
    _Bool _declineAndRemindIsAvailable;
    _Bool _declineAndMessageIsAvailable;
    _Bool _enabled;
    _Bool _blursBackground;
    _Bool _usesLowerButtons;
    int _currentState;
    id <TPSuperBottomBarDelegateProtocol> _delegate;
    long long _orientation;
    double _bottomMargin;
    double _yOffsetForLoweredButtons;
    UIView *_topLayoutGuide;
    NSArray *_buttonLayoutConstraints;
    NSArray *_horizontalConstraintsForSupplementalButtons;
    UIButton *_supplementalTopLeftButton;
    UIButton *_supplementalTopRightButton;
    UIButton *_mainLeftButton;
    UIButton *_mainRightButton;
    UIButton *_sideButtonLeft;
    UIButton *_sideButtonRight;
    UIButton *_supplementalBottomRightButton;
    UIButton *_supplementalBottomLeftButton;
    TPSlidingButton *_slidingButton;
    NSMutableArray *_hijackedGestureRecognizers;
    NSMutableArray *_stateStack;
}

+ (double)defaultYOffsetForBottomButtons;
+ (double)defaultBottomSupplementalButtonSpacing;
+ (double)defaultBottomMargin;
+ (double)defaultWidth;
+ (double)defaultInterButtonSpacing;
+ (double)defaultSideMarginForDoubleButton;
+ (double)defaultSideMarginForSingleButton;
@property(retain) NSMutableArray *stateStack; // @synthesize stateStack=_stateStack;
@property(retain, nonatomic) NSMutableArray *hijackedGestureRecognizers; // @synthesize hijackedGestureRecognizers=_hijackedGestureRecognizers;
@property(retain, nonatomic) TPSlidingButton *slidingButton; // @synthesize slidingButton=_slidingButton;
@property(retain, nonatomic) UIButton *supplementalBottomLeftButton; // @synthesize supplementalBottomLeftButton=_supplementalBottomLeftButton;
@property(retain, nonatomic) UIButton *supplementalBottomRightButton; // @synthesize supplementalBottomRightButton=_supplementalBottomRightButton;
@property(retain, nonatomic) UIButton *sideButtonRight; // @synthesize sideButtonRight=_sideButtonRight;
@property(retain, nonatomic) UIButton *sideButtonLeft; // @synthesize sideButtonLeft=_sideButtonLeft;
@property(retain, nonatomic) UIButton *mainRightButton; // @synthesize mainRightButton=_mainRightButton;
@property(retain, nonatomic) UIButton *mainLeftButton; // @synthesize mainLeftButton=_mainLeftButton;
@property(retain, nonatomic) UIButton *supplementalTopRightButton; // @synthesize supplementalTopRightButton=_supplementalTopRightButton;
@property(retain, nonatomic) UIButton *supplementalTopLeftButton; // @synthesize supplementalTopLeftButton=_supplementalTopLeftButton;
@property(retain) NSArray *horizontalConstraintsForSupplementalButtons; // @synthesize horizontalConstraintsForSupplementalButtons=_horizontalConstraintsForSupplementalButtons;
@property(retain) NSArray *buttonLayoutConstraints; // @synthesize buttonLayoutConstraints=_buttonLayoutConstraints;
@property(retain, nonatomic) UIView *topLayoutGuide; // @synthesize topLayoutGuide=_topLayoutGuide;
@property(nonatomic) double yOffsetForLoweredButtons; // @synthesize yOffsetForLoweredButtons=_yOffsetForLoweredButtons;
@property(nonatomic) double bottomMargin; // @synthesize bottomMargin=_bottomMargin;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) int currentState; // @synthesize currentState=_currentState;
@property(nonatomic) _Bool usesLowerButtons; // @synthesize usesLowerButtons=_usesLowerButtons;
@property(nonatomic) _Bool blursBackground; // @synthesize blursBackground=_blursBackground;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool declineAndMessageIsAvailable; // @synthesize declineAndMessageIsAvailable=_declineAndMessageIsAvailable;
@property(nonatomic) _Bool declineAndRemindIsAvailable; // @synthesize declineAndRemindIsAvailable=_declineAndRemindIsAvailable;
@property id <TPSuperBottomBarDelegateProtocol> delegate; // @synthesize delegate=_delegate;
- (id)nameForActionType:(int)arg1;
- (void)_startShopDemoMode;
- (void)animateFromIncomingCallStateToFaceTimeInCallState:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)animateFromIncomingCallStateToInCallState:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)animateFromOutgoingStateToCallbackAndMessageUIToState:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)animateOutSupplementalBottomLeftButtonToState:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)animateOutSupplementalBottomRightButtonToState:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)animateInSupplementalBottomRightButton:(id)arg1 WithCompletion:(CDUnknownBlockType)arg2;
- (void)animateFromOutgoingStateToInCallStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)layoutSubviews;
- (_Bool)animateFromState:(int)arg1 toState:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)prepareButtonsForAnimationEnd;
- (void)prepareButtonsForAnimationBegin;
- (void)refreshCustomizedActionTypeTitleForButton:(id)arg1;
- (void)refreshCustomizedActionTypeTitles;
- (int)updatedActionTypeForActionType:(int)arg1;
- (id)updatedSelectedImageForActionType:(int)arg1 givenDefaultSelectedImage:(id)arg2;
- (id)updatedImageForActionType:(int)arg1 givenDefaultImage:(id)arg2;
- (id)customTitleStringForActionType:(int)arg1 givenDefaultTitle:(id)arg2;
- (id)controlForActionType:(int)arg1;
- (struct CGRect)frameForControlWithActionType:(int)arg1;
- (id)viewLabels;
- (void)slidingButton:(id)arg1 didSlideToProportion:(double)arg2;
- (void)slidingButtonDidFinishSlide;
- (void)slidingButtonWillFinishSlide;
- (void)buttonLongPressed:(id)arg1;
- (void)buttonPressed:(id)arg1;
- (void)shrinkButtonFontSizesIfNecessary;
- (void)removeAllButtons;
- (void)addSubview:(id)arg1;
- (id)makeSlidingButtonWithType:(int)arg1;
- (id)makeButtonWithType:(int)arg1 title:(id)arg2 image:(id)arg3 color:(id)arg4 font:(id)arg5 fontColor:(id)arg6;
- (_Bool)shouldShowActionTypeSendToVoicemail;
- (_Bool)shouldShowActionTypeAudioRoute;
- (_Bool)shouldShowActionTypeCameraFlip;
- (id)_horizontalConstraintsForSupplementalButtonsUsingLabels:(id)arg1;
- (void)_updateHorizontalConstraintsForSupplementalButtons;
- (id)constraintsForState:(int)arg1;
- (void)setCurrentState:(int)arg1 animated:(_Bool)arg2 animationCompletionBlock:(CDUnknownBlockType)arg3;
- (void)setAction:(int)arg1 enabled:(_Bool)arg2;
- (void)setAction:(int)arg1 selected:(_Bool)arg2;
- (void)resetPoppedStates;
- (_Bool)popStateAnimated:(_Bool)arg1 animationCompletionBlock:(CDUnknownBlockType)arg2;
- (void)pushState:(int)arg1 animated:(_Bool)arg2 animationCompletionBlock:(CDUnknownBlockType)arg3;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)updateTopLayoutGuide;
@property(readonly, nonatomic) struct CGSize effectiveSize;
- (struct CGSize)intrinsicContentSize;
- (void)_clearHijackedGestureRecognizers;
- (void)dealloc;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TPSuperBottomBarButton : UIButton
{
    UIView *_overlayView;
    TPRingView *_ringView;
    _Bool _usesSmallerFontSize;
    long long _orientation;
    UIColor *_originalBackgroundColor;
    struct CGSize _buttonSize;
}

+ (double)defaultWidth;
+ (id)defaultFont;
+ (double)defaultHeight;
@property(nonatomic) struct CGSize buttonSize; // @synthesize buttonSize=_buttonSize;
@property(retain, nonatomic) UIColor *originalBackgroundColor; // @synthesize originalBackgroundColor=_originalBackgroundColor;
@property(nonatomic) _Bool usesSmallerFontSize; // @synthesize usesSmallerFontSize=_usesSmallerFontSize;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (id)newOverlayView;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithAction:(int)arg1;
- (void)configureForCancelAction;
- (id)initWithTitle:(id)arg1 icon:(id)arg2 color:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TPSuperBottomBarSupplementalButton : UIButton
{
}

- (void)setEnabled:(_Bool)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithAction:(int)arg1;
- (id)initWithText:(id)arg1 image:(id)arg2;

@end

@interface TPWallpaperView : UIView
{
    _Bool _blursBackground;
    _Bool _hidesContactImage;
    _Bool _shouldLockContactImage;
    _Bool _shouldBindBlurringWithPresenceOfContactImage;
    UIImage *_contactImage;
    double _blurProportion;
    UIImageView *_contactImageView;
    _UIBackdropView *_backdropEffectView;
}

@property(retain) _UIBackdropView *backdropEffectView; // @synthesize backdropEffectView=_backdropEffectView;
@property(retain) UIImageView *contactImageView; // @synthesize contactImageView=_contactImageView;
@property(nonatomic) _Bool shouldBindBlurringWithPresenceOfContactImage; // @synthesize shouldBindBlurringWithPresenceOfContactImage=_shouldBindBlurringWithPresenceOfContactImage;
@property _Bool shouldLockContactImage; // @synthesize shouldLockContactImage=_shouldLockContactImage;
@property(nonatomic) _Bool hidesContactImage; // @synthesize hidesContactImage=_hidesContactImage;
@property(nonatomic) double blurProportion; // @synthesize blurProportion=_blurProportion;
@property(nonatomic) _Bool blursBackground; // @synthesize blursBackground=_blursBackground;
@property(retain, nonatomic) UIImage *contactImage; // @synthesize contactImage=_contactImage;
- (void)updateBindBlurringWithPresenceOfContactImage;
- (void)setContactImage:(id)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TUCall (UI)
- (id)smallImage;
- (id)desktopImage;
- (id)image;
- (id)_image;
@end

@interface UIColor (DarkeningColor)
- (id)colorByAlteringOpacityToPercentage:(float)arg1;
- (id)darkerColorByPercentage:(float)arg1;
@end

@interface UIColor (TPTelephonyUIUtilities)
- (id)tpImageFromColor;
@end

@interface UIImage (TPTelephonyUIUtilities)
+ (id)tpImageNamed:(id)arg1 inBundle:(id)arg2;
@end

@interface UILabel (TPLegacyBottomBar)
- (_Bool)labelTextIsTruncated;
@end

@interface UIView (TPAdditions)
@property(nonatomic) int action;
@end

