//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct SUGradientPoint {
    struct CGPoint point;
    double radius;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long localIndex;
    unsigned long long localCount;
    unsigned long long globalIndex;
    unsigned long long globalCount;
} CDStruct_3e55db63;

typedef struct {
    long long version;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
    CDUnknownFunctionPointerType equal;
    CDUnknownFunctionPointerType hash;
} CDStruct_f2932e27;

typedef struct {
    id _field1;
    long long _field2;
    long long _field3;
    struct UIEdgeInsets _field4;
    id _field5;
    id _field6;
} CDStruct_f9159201;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/iTunesStoreUI.framework/iTunesStoreUI
// UUID: 67F8B9E1-6E08-367B-BD3F-6AA7C116B8D6
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1132.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AAUIFamilySetupDelegate <UINavigationControllerDelegate>
- (void)familySetupViewController:(AAUIFamilySetupViewController *)arg1 didCompleteWithSuccess:(_Bool)arg2;
@end

@protocol AVAssetResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)arg2;
@end

@protocol ISOperationDelegate <NSObject>

@optional
- (void)operationWillStart:(ISOperation *)arg1;
- (void)operationFinished:(ISOperation *)arg1;
- (void)operation:(ISOperation *)arg1 updatedProgress:(SSOperationProgress *)arg2;
- (void)operation:(ISOperation *)arg1 failedWithError:(NSError *)arg2;
@end

@protocol ISSingleton <NSObject>
+ (void)setSharedInstance:(id)arg1;
+ (id)sharedInstance;
@end

@protocol ISStoreURLOperationDelegate <ISURLOperationDelegate>

@optional
- (_Bool)operation:(ISStoreURLOperation *)arg1 shouldSetStoreFrontID:(NSString *)arg2;
- (void)operation:(ISStoreURLOperation *)arg1 didAuthenticateWithDSID:(NSNumber *)arg2;
@end

@protocol ISURLOperationDelegate <ISOperationDelegate>

@optional
- (NSString *)operation:(ISURLOperation *)arg1 sanitizedStringForString:(NSString *)arg2;
- (_Bool)operation:(ISURLOperation *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)operation:(ISURLOperation *)arg1 willSendRequest:(NSMutableURLRequest *)arg2;
- (_Bool)operation:(ISURLOperation *)arg1 processData:(NSMutableData *)arg2 error:(id *)arg3;
- (NSInputStream *)operation:(ISURLOperation *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)operation:(ISURLOperation *)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(ISURLOperation *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (void)operation:(ISURLOperation *)arg1 didDiscoverContentLength:(NSNumber *)arg2;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(int)arg2 error:(NSError *)arg3;
@end

@protocol MPMediaPickerControllerDelegate <NSObject>

@optional
- (void)mediaPickerDidCancel:(MPMediaPickerController *)arg1;
- (void)mediaPicker:(MPMediaPickerController *)arg1 didPickMediaItems:(MPMediaItemCollection *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol SKComposeReviewDelegate <NSObject>

@optional
- (void)reviewComposeViewControllerDidFinish:(SKComposeReviewViewController *)arg1;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol SKStoreProductViewControllerDelegatePrivate <SKStoreProductViewControllerDelegate>

@optional
- (void)productViewController:(SKStoreProductViewController *)arg1 presentProductWithRequest:(SKStorePageRequest *)arg2 animated:(_Bool)arg3;
- (void)productViewController:(SKStoreProductViewController *)arg1 didFinishWithResult:(long long)arg2;
@end

@protocol SKUIIPhoneProductPageDelegate <NSObject>

@optional
- (_Bool)iPhoneProductPage:(SKUIIPhoneProductPageViewController *)arg1 shouldOpenURL:(NSURL *)arg2;
- (_Bool)iPhoneProductPage:(SKUIIPhoneProductPageViewController *)arg1 shouldOpenItem:(SKUIItem *)arg2;
@end

@protocol SKUIPassbookLoaderDelegate <NSObject>
- (UIViewController *)presentationViewControllerForPassbookLoader:(SKUIPassbookLoader *)arg1;

@optional
- (void)passbookLoaderDidFinish:(SKUIPassbookLoader *)arg1;
@end

@protocol SKUITabBarItemRootViewController <NSObject>
- (id)initWithTabBarItem:(SKUITabBarItem *)arg1;

@optional
- (void)showExternalURL:(SKUIURL *)arg1;
- (void)setClientContext:(SKUIClientContext *)arg1;
@end

@protocol SSDownloadManagerObserver <NSObject>

@optional
- (void)downloadManagerNetworkUsageDidChange:(SSDownloadManager *)arg1;
- (void)downloadManagerDownloadsDidChange:(SSDownloadManager *)arg1;
- (void)downloadManagerActiveDownloadsDidChange:(SSDownloadManager *)arg1;
- (void)downloadManager:(SSDownloadManager *)arg1 downloadStatesDidChange:(NSArray *)arg2;
@end

@protocol SSPreorderManagerObserver <NSObject>

@optional
- (void)preorderManagerPreordersDidChange:(SSPreorderManager *)arg1;
@end

@protocol SSPurchaseRequestDelegate <SSRequestDelegate>

@optional
- (void)purchaseRequest:(SSPurchaseRequest *)arg1 purchaseDidSucceed:(SSPurchase *)arg2;
- (void)purchaseRequest:(SSPurchaseRequest *)arg1 purchaseDidFail:(SSPurchase *)arg2 withError:(NSError *)arg3;
@end

@protocol SSPurchaseRequestDelegatePrivate <SSPurchaseRequestDelegate>

@optional
- (void)purchaseRequest:(SSPurchaseRequest *)arg1 purchaseDidSucceedWithResponse:(SSPurchaseResponse *)arg2;
@end

@protocol SSRequestDelegate <NSObject>

@optional
- (void)requestDidFinish:(SSRequest *)arg1;
- (void)request:(SSRequest *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol SUActivityDelegate <NSObject>

@optional
- (void)performActionForActivity:(SUActivity *)arg1;
- (void)activity:(SUActivity *)arg1 prepareWithActivityItems:(NSArray *)arg2;
- (_Bool)activity:(SUActivity *)arg1 canPerformWithActivityItems:(NSArray *)arg2;
@end

@protocol SUActivityItemProviderDelegate <NSObject>

@optional
- (void)activityItemProvider:(SUActivityItemProvider *)arg1 provideItemUsingBlock:(void (^)(id))arg2;
@end

@protocol SUCellConfigurationView <NSObject>
- (void)reloadView;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isHighlighted;
- (_Bool)highlightsOnlyContentView;
@end

@protocol SUClientDelegate <NSObject>
- (_Bool)client:(SUClient *)arg1 presentModalViewController:(UIViewController *)arg2 animated:(_Bool)arg3;

@optional
- (UIViewController *)topViewControllerForClient:(SUClient *)arg1;
- (_Bool)client:(SUClient *)arg1 openInternalURL:(NSURL *)arg2;
- (SSDownloadQueue *)downloadQueueForClient:(SUClient *)arg1 downloadKinds:(NSSet *)arg2;
- (SSDownloadManager *)downloadManagerForClient:(SUClient *)arg1 downloadKinds:(NSArray *)arg2;
- (_Bool)client:(SUClient *)arg1 presentComposeReviewViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (_Bool)client:(SUClient *)arg1 presentAccountViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol SUClientInterfaceDelegate <NSObject>

@optional
- (SUTabBarController *)tabBarControllerForClientInterface:(SUClientInterface *)arg1;
- (SUScriptInterface *)scriptInterfaceForClientInterface:(SUClientInterface *)arg1;
- (SUPreviewOverlayViewController *)previewOverlayForClientInterface:(SUClientInterface *)arg1;
- (void)returnToLibraryForClientInterface:(SUClientInterface *)arg1;
- (void)clientInterface:(SUClientInterface *)arg1 setStatusBarStyle:(long long)arg2 animated:(_Bool)arg3;
- (void)clientInterface:(SUClientInterface *)arg1 setStatusBarHidden:(_Bool)arg2 withAnimation:(long long)arg3;
- (void)clientInterface:(SUClientInterface *)arg1 showPreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 hidePreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 presentDialog:(ISDialog *)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 exitStoreWithReason:(long long)arg2;
@end

@protocol SUContinuationDelegate <NSObject>
- (void)continuationFinished:(SUContinuation *)arg1;
- (void)continuation:(SUContinuation *)arg1 failedWithError:(NSError *)arg2;
@end

@protocol SUDeferredUIView <NSObject>
@property(nonatomic, getter=isDeferringInterfaceUpdates) _Bool deferringInterfaceUpdates;
@end

@protocol SUDialogDelegate <NSObject>

@optional
- (void)dialogDidCancel:(SUDialog *)arg1;
- (void)dialog:(SUDialog *)arg1 didDismissWithButtonIndex:(long long)arg2;
@end

@protocol SUMenuViewControllerDelegate <NSObject>

@optional
- (void)menuViewControllerDidCancel:(SUMenuViewController *)arg1;
- (void)menuViewController:(SUMenuViewController *)arg1 didTapButton:(SUProtocolButton *)arg2;
- (void)menuViewController:(SUMenuViewController *)arg1 didSelectItemAtIndex:(long long)arg2;
@end

@protocol SUOverlayBackgroundDelegate <NSObject>
- (void)scriptOverlayBackgroundDidDismiss:(SUOverlayBackgroundViewController *)arg1;
@end

@protocol SUPreviewOverlayContainer <NSObject>

@optional
- (_Bool)showPreviewOverlay:(SUPreviewOverlayViewController *)arg1 animated:(_Bool)arg2 completionBlock:(void (^)(void))arg3;
- (void)hidePreviewOverlay:(SUPreviewOverlayViewController *)arg1 animated:(_Bool)arg2 completionBlock:(void (^)(void))arg3;
- (_Bool)isShowingPreviewOverlay;
@end

@protocol SUPurchaseManagerDelegate <NSObject>

@optional
- (SUPurchaseBatch *)purchaseManager:(SUPurchaseManager *)arg1 purchaseBatchForPurchases:(NSArray *)arg2;
- (SUPurchaseBatch *)purchaseManager:(SUPurchaseManager *)arg1 purchaseBatchForItems:(NSArray *)arg2;
- (void)purchaseManagerWillBeginUpdates:(SUPurchaseManager *)arg1;
- (void)purchaseManagerDidEndUpdates:(SUPurchaseManager *)arg1;
- (void)purchaseManager:(SUPurchaseManager *)arg1 didFinishPurchaseRequest:(SSPurchaseRequest *)arg2 withError:(NSError *)arg3;
- (void)purchaseManager:(SUPurchaseManager *)arg1 willAddPurchases:(NSArray *)arg2;
- (void)purchaseManager:(SUPurchaseManager *)arg1 failedToAddPurchases:(NSArray *)arg2;
- (void)purchaseManager:(SUPurchaseManager *)arg1 didAddPurchases:(NSArray *)arg2;
@end

@protocol SUScalingFlipViewDelegate <NSObject>

@optional
- (void)scalingFlipViewDidFinish:(SUScalingFlipView *)arg1;
@end

@protocol SUScriptInterfaceDelegate <NSObject>

@optional
- (ISURLRequestPerformance *)performanceMetricsForScriptInterface:(SUScriptInterface *)arg1;
- (SUViewController *)parentViewControllerForScriptInterface:(SUScriptInterface *)arg1;
- (SUDOMElement *)DOMElementForScriptInterface:(SUScriptInterface *)arg1 element:(DOMElement *)arg2;
@end

@protocol SUScriptNativeObject <NSObject>

@optional
- (_Bool)clearsWeakScriptReferences;
@end

@protocol SUScriptNavigationItem <NSObject>
- (SUBarButtonItem *)buttonItem;
@end

@protocol SUScriptTextFieldDelegate <SUSearchBarDelegate, UITextFieldDelegate>

@optional
- (void)scriptDidChangeTextForField:(id)arg1;
@end

@protocol SUSearchBarDelegate <UISearchBarDelegate>

@optional
- (void)searchBarWillRemoveFromSuperview:(UISearchBar *)arg1;
@end

@protocol SUStorePageViewControllerResponder <NSObject>
- (void)storePage:(id)arg1 finishedWithSuccess:(_Bool)arg2;
@end

@protocol SUTabBarControllerDelegate <UITabBarControllerDelegate>

@optional
- (SUViewController *)tabBarController:(SUTabBarController *)arg1 viewControllerForContext:(SUViewControllerContext *)arg2;
- (_Bool)tabBarController:(SUTabBarController *)arg1 shouldShowSection:(SUSection *)arg2;
- (SUViewController *)tabBarController:(SUTabBarController *)arg1 rootViewControllerForSection:(SUSection *)arg2;
@end

@protocol SUWebViewDelegate <UIWebViewDelegate>

@optional
- (void)webView:(SUWebView *)arg1 documentViewDidSetFrame:(struct CGRect)arg2;
@end

@protocol SUWebViewManagerDelegate <NSObject>

@optional
- (void)webViewManager:(SUWebViewManager *)arg1 webDocumentViewDidSetFrame:(struct CGRect)arg2;
- (void)webViewManagerDidStartLoad:(SUWebViewManager *)arg1;
- (void)webViewManagerDidFinishLoad:(SUWebViewManager *)arg1;
- (void)webViewManager:(SUWebViewManager *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewManager:(SUWebViewManager *)arg1 willInjectScriptInterface:(SUScriptInterface *)arg2;
- (void)webViewManager:(SUWebViewManager *)arg1 didReceivePrimaryResponse:(NSHTTPURLResponse *)arg2;
- (void)webViewManager:(SUWebViewManager *)arg1 didRejectInvalidRequest:(NSURLRequest *)arg2;
- (void)webViewManager:(SUWebViewManager *)arg1 didReceiveTitle:(NSString *)arg2;
- (SUViewController *)viewControllerForWebViewManager:(SUWebViewManager *)arg1;
- (SUScriptInterface *)newScriptInterfaceForWebViewManager:(SUWebViewManager *)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UIDocumentInteractionControllerDelegate <NSObject>

@optional
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 performAction:(SEL)arg2;
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 canPerformAction:(SEL)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 didEndSendingToApplication:(NSString *)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 willBeginSendingToApplication:(NSString *)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)arg1;
- (UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)arg1;
- (struct CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)arg1;
- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)arg1;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UITabBarControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)arg1 animationControllerForTransitionFromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)arg1;
- (void)tabBarController:(UITabBarController *)arg1 didEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willBeginCustomizingViewControllers:(NSArray *)arg2;
- (void)tabBarController:(UITabBarController *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabBarController:(UITabBarController *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextContentViewDelegate <NSObject>

@optional
- (void)textContentView:(UITextContentView *)arg1 didChangeSize:(struct CGSize)arg2;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldChangeSizeForContentSize:(struct CGSize)arg2;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldScrollForPendingContentSize:(struct CGSize)arg2;
- (void)textContentViewDidChangeSelection:(UITextContentView *)arg1;
- (void)textContentViewDidChange:(UITextContentView *)arg1;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textContentViewDidEndEditing:(UITextContentView *)arg1;
- (void)textContentViewDidBeginEditing:(UITextContentView *)arg1;
- (_Bool)textContentViewShouldEndEditing:(UITextContentView *)arg1;
- (_Bool)textContentViewShouldBeginEditing:(UITextContentView *)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol _UIBasicAnimationFactory <NSObject>
- (CABasicAnimation *)_basicAnimationForView:(UIView *)arg1 withKeyPath:(NSString *)arg2;

@optional
- (CAMediaTimingFunction *)_timingFunctionForAnimationInView:(UIView *)arg1 withKeyPath:(NSString *)arg2;
- (CAMediaTimingFunction *)_timingFunctionForAnimation;
@end

@interface ISDialog (SUDialogAdditions)
+ (id)ITunesStoreNotAvailableDialog;
@end

@interface ISOperation (SUScriptPost)
- (void)setScriptOptions:(id)arg1;
- (void)sendCompletionCallback:(id)arg1;
@end

@interface ISUDownload : NSObject
{
    SSDownload *_download;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
}

+ (void)initialize;
+ (id)downloadProperties;
+ (id)downloadExternalProperties;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) NSURL *thumbnailImageURL;
@property(readonly, nonatomic) NSNumber *storePreorderIdentifier;
@property(readonly, nonatomic) NSNumber *storeItemIdentifier;
@property(readonly, nonatomic) NSString *statusDescription;
@property(retain, nonatomic) SSDownload *managedDownload;
- (void)resetPreorderState;
@property(readonly, nonatomic) NSString *phaseIdentifier;
@property(readonly, nonatomic) double percentComplete;
@property(readonly, nonatomic, getter=isPurchase) _Bool purchase;
@property(readonly, nonatomic, getter=isPausable) _Bool pausable;
@property(readonly, nonatomic, getter=isContentRestricted) _Bool contentRestricted;
@property(readonly, nonatomic) double estimatedSecondsRemaining;
- (id)copyLocalizedStatusString;
@property(readonly, nonatomic) long long bytesTotal;
@property(readonly, nonatomic) long long bytesDownloaded;
@property(readonly, nonatomic) NSString *artistName;
- (void)dealloc;
- (id)initWithManagedDownload:(id)arg1;

@end

@interface MSPlaceholderAVItem : MPAVItem
{
    unsigned long long _itemType;
}

- (unsigned long long)type;
- (id)initWithAVItemType:(unsigned long long)arg1;

@end

@interface NSBundle (SUAdditions)
+ (id)pathForITunesResource:(id)arg1 ofType:(id)arg2;
- (id)newDataURLForResource:(id)arg1 ofType:(id)arg2 withMIMEType:(id)arg3;
@end

@interface NSCoder (SUAdditions)
- (void)safeEncodeUIColor:(id)arg1 forKey:(id)arg2;
@end

@interface NSDictionary (SUPPT)
- (id)scriptEntry;
- (id)scriptPath;
- (SEL)testSelector;
- (SEL)setupSelector;
- (float)offset;
- (int)iterations;
@end

@interface NSObject (SUInvocationAdditions)
- (id)responderChainProxy:(id)arg1;
@end

@interface NSURL (SUAdditions)
+ (id)termsAndConditionsURL;
- (long long)storeURLType;
@end

@interface SUViewController : UIViewController <SUScriptNativeObject, ISOperationDelegate>
{
    SUViewControllerScriptProperties *_cachedScriptProperties;
    _Bool _canBeWeakScriptReference;
    NSMutableArray *_cancelOnDeallocOperations;
    SUClientInterface *_clientInterface;
    _Bool _excludeFromNavigationHistory;
    UIBarButtonItem *_exitStoreButton;
    UIViewController *_footerViewController;
    UIViewController *_inputAccessoryViewController;
    _Bool _isEnteringForeground;
    _Bool _loading;
    SUViewControllerContext *_memoryPurgeContext;
    NSMutableArray *_operations;
    NSMutableArray *_pendingDialogs;
    SUViewControllerContext *_restoredContext;
    SURotationController *_rotationController;
    long long _rotationState;
    _Bool _shouldInvalidateForMemoryPurge;
    _Bool _showsLibraryButton;
    long long _transitionSafetyCount;
    _Bool _shouldAdjustContentOffsets;
}

@property(nonatomic) _Bool shouldAdjustContentOffsets; // @synthesize shouldAdjustContentOffsets=_shouldAdjustContentOffsets;
@property(nonatomic) _Bool showsLibraryButton; // @synthesize showsLibraryButton=_showsLibraryButton;
@property(nonatomic) _Bool shouldInvalidateForMemoryPurge; // @synthesize shouldInvalidateForMemoryPurge=_shouldInvalidateForMemoryPurge;
@property(nonatomic) _Bool shouldExcludeFromNavigationHistory; // @synthesize shouldExcludeFromNavigationHistory=_excludeFromNavigationHistory;
@property(readonly, nonatomic, getter=_restoredContext) SUViewControllerContext *_restoredContext; // @synthesize _restoredContext;
@property(readonly, nonatomic, getter=_pendingDialogs) NSArray *_pendingDialogs; // @synthesize _pendingDialogs;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) UIViewController *inputAccessoryViewController; // @synthesize inputAccessoryViewController=_inputAccessoryViewController;
@property(readonly, nonatomic) UIViewController *footerViewController; // @synthesize footerViewController=_footerViewController;
@property(retain, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
@property(readonly, nonatomic, getter=_isEnteringForeground) _Bool _enteringForeground; // @synthesize _enteringForeground=_isEnteringForeground;
@property(readonly, nonatomic, getter=_cachedScriptProperties) SUViewControllerScriptProperties *_cachedScriptProperties; // @synthesize _cachedScriptProperties;
- (void)_reloadExitStoreButtonWithParentViewController:(id)arg1;
- (void)_invalidateForMemoryPurge;
- (void)_reloadLibraryButton;
- (void)_keyboardWillShowNotification:(id)arg1;
- (void)_keyboardWillHideNotification:(id)arg1;
- (void)_keyboardDidShowNotification:(id)arg1;
- (void)_keyboardDidHideNotification:(id)arg1;
- (void)_exitStoreButtonDidChangeNotification:(id)arg1;
- (void)_dialogFinishedNotification:(id)arg1;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)operationFinished:(id)arg1;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)_presentFooterAnimationDidStop;
- (void)_dismissFooterAnimationDidStop:(id)arg1;
- (void)_exitStoreButtonAction:(id)arg1;
- (_Bool)clearsWeakScriptReferences;
- (void)remoteControlReceivedWithEvent:(id)arg1;
- (id)inputAccessoryView;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(long long)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_rotationController;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (id)viewControllerFactory;
- (id)tabBarItem;
- (void)storePageProtocolDidChange;
- (void)setTitle:(id)arg1;
- (void)setParentViewController:(id)arg1;
- (void)_setExistingNavigationItem:(id)arg1;
- (void)restoreArchivableContext:(id)arg1;
- (void)resetRestoredContext;
@property(readonly, retain, nonatomic) SUNavigationItem *navigationItem; // @dynamic navigationItem;
- (id)moreListSelectedImage;
- (id)moreListImage;
- (void)loadView;
- (long long)ITunesStoreUIBarStyle;
- (long long)interfaceOrientation;
- (id)_existingNavigationItem;
- (void)didReceiveMemoryWarning;
- (id)copyArchivableContext;
- (_Bool)_canReloadView;
- (void)applicationWillSuspend;
- (void)applicationDidResume;
- (void)trackOperation:(id)arg1 cancelOnDealloc:(_Bool)arg2;
- (void)setTitle:(id)arg1 changeTabBarItem:(_Bool)arg2;
- (void)setScriptProperties:(id)arg1;
- (void)setSection:(id)arg1;
- (void)reloadContentSizeForViewInPopover;
- (void)reload;
- (void)presentFooterViewController:(id)arg1 animated:(_Bool)arg2;
- (_Bool)presentDialogForError:(id)arg1 pendUntilVisible:(_Bool)arg2;
- (_Bool)presentDialog:(id)arg1 pendUntilVisible:(_Bool)arg2;
- (id)newRotationController;
@property(readonly, nonatomic, getter=isVisibleAndFrontmost) _Bool visibleAndFrontmost;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
- (void)invalidateForMemoryPurge;
- (void)invalidate;
- (void)handleApplicationURL:(id)arg1 withSourceApplication:(id)arg2 sourceURL:(id)arg3;
- (void)handleApplicationURL:(id)arg1;
- (void)enqueueOperation:(id)arg1 cancelOnDealloc:(_Bool)arg2;
- (void)dismissFooterViewControllerAnimated:(_Bool)arg1;
- (void)dismissAfterDialogs;
@property(readonly, nonatomic) NSString *defaultPNGName;
@property(readonly, nonatomic) double defaultPNGExpirationTime;
- (id)copyScriptProperties;
- (id)copyDefaultScriptProperties;
- (void)cancelOperations;
- (id)copyChildViewControllersForReason:(long long)arg1;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)dealloc;
- (id)initWithSection:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUStorePageViewController : SUViewController <SKUITabBarItemRootViewController, SUMenuViewControllerDelegate, SUPreviewOverlayContainer, UIPopoverControllerDelegate, ISURLOperationDelegate>
{
    SUViewController *_activeChildViewController;
    struct __CFSet *_allowedInterfaceOrientations;
    double _expirationTime;
    long long _pageType;
    SUViewController *_pendingChildViewController;
    NSString *_scriptUserInfo;
    SUStorePageProtocol *_lastValidProtocol;
    UIPopoverController *_navigationMenuPopover;
    SUNavigationMenuViewController *_navigationMenuViewController;
    SUSearchFieldController *_searchFieldController;
    _Bool _canMoveToOverlay;
    _Bool _externalRequest;
    _Bool _loadingForSectionChange;
    _Bool _loadsWhenHidden;
    _Bool _reloadOnAppear;
    _Bool _reloadsWhenCacheExpired;
    SSAuthenticationContext *_authContext;
    SSMutableURLRequestProperties *_urlRequestProperties;
    _Bool _needsAuthentication;
    long long _activeSectionIndex;
    SUPageSectionGroup *_sectionsGroup;
    SUSegmentedControl *_segmentedControl;
    _UIBackdropView *_backdropView;
    id <SUStorePageViewControllerDelegate> _delegate;
    _Bool _lastLoadDidFail;
    CDUnknownBlockType _loadBlock;
    ISURLRequestPerformance *_performanceMetrics;
    _Bool _useWebViewFastPath;
    _Bool _shouldAdjustContentOffsets;
}

@property(nonatomic) _Bool canMoveToOverlay; // @synthesize canMoveToOverlay=_canMoveToOverlay;
@property(readonly, nonatomic) SUSegmentedControl *sectionSegmentedControl; // @synthesize sectionSegmentedControl=_segmentedControl;
@property(readonly, nonatomic) SUPageSectionGroup *sectionGroup; // @synthesize sectionGroup=_sectionsGroup;
@property(readonly, nonatomic) SUSearchFieldController *searchFieldController; // @synthesize searchFieldController=_searchFieldController;
@property(copy, nonatomic) NSString *scriptUserInfo; // @synthesize scriptUserInfo=_scriptUserInfo;
@property(nonatomic, getter=_reloadsWhenCacheExpired, setter=_setReloadsWhenCacheExpired:) _Bool _reloadsWhenCacheExpired; // @synthesize _reloadsWhenCacheExpired;
@property(nonatomic) _Bool needsAuthentication; // @synthesize needsAuthentication=_needsAuthentication;
@property(nonatomic) _Bool loadsWhenHidden; // @synthesize loadsWhenHidden=_loadsWhenHidden;
@property(nonatomic, getter=isExternalRequest) _Bool externalRequest; // @synthesize externalRequest=_externalRequest;
@property(nonatomic) id <SUStorePageViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SSAuthenticationContext *authenticationContext; // @synthesize authenticationContext=_authContext;
- (void)setShouldAdjustContentOffsets:(_Bool)arg1;
- (_Bool)shouldAdjustContentOffsets;
@property(readonly, nonatomic) SUViewController *activeChildViewController; // @synthesize activeChildViewController=_activeChildViewController;
- (void)_reloadContentInsets;
- (void)_verifyStorePageProtocol:(id)arg1;
- (void)_tearDownNavigationMenu;
- (void)_showPlaceholderViewControllerWithTearDown:(_Bool)arg1;
- (_Bool)_shouldReloadForAppearance;
- (_Bool)_shouldDisplayControlsInNavigationBar;
- (_Bool)_shouldFetchAutomatically;
- (void)_setRightNavigationItem:(id)arg1 forTag:(long long)arg2;
- (void)_setPendingChildViewController:(id)arg1;
- (void)_setLeftNavigationItem:(id)arg1 forTag:(long long)arg2;
- (void)_setActiveChildViewController:(id)arg1 shouldTearDown:(_Bool)arg2;
- (_Bool)_sectionIsNetworkConstrained;
- (void)_repositionForChildViewController:(id)arg1;
- (void)_renderStorePage:(id)arg1 withType:(long long)arg2 viewController:(id)arg3 block:(CDUnknownBlockType)arg4;
- (_Bool)_reloadWithURLRequestProperties:(id)arg1 preserveSectionControl:(_Bool)arg2;
- (void)_reloadSectionsControlWithGroup:(id)arg1;
- (void)_reloadSectionButtons;
- (void)_reloadSearchFieldWithSection:(id)arg1;
- (void)_reloadPreviewOverlayVisibility;
- (void)_reloadNavigationMenus;
- (void)_reloadNavigationButtons;
- (void)_reloadNavigationBar;
- (void)_reloadForAppearance:(_Bool)arg1;
- (void)_reloadBackgroundViewProperties;
- (void)_performActionForProtocolButton:(id)arg1;
- (id)_newSegmentedControlWithItems:(id)arg1;
- (id)_newBarButtonItemsWithButtonItems:(id)arg1 replacingItemWithTag:(long long)arg2 withButtonItem:(id)arg3;
- (void)_moveToRootSectionForChildViewController:(id)arg1 protocol:(id)arg2;
- (void)_moveChildViewController:(id)arg1 toOverlayForProtocol:(id)arg2;
- (_Bool)_isInTransientViewController;
- (void)_handleViewControllerBecameReady:(id)arg1;
- (void)_handleFailureWithError:(id)arg1;
- (struct CGRect)_frameForActiveViewController;
- (void)_finishSuccessfulLoad;
- (void)_finishHandlingFailure;
- (void)_fetchPage:(_Bool)arg1;
- (double)_expirationTime;
- (void)_displaySegmentedControl:(id)arg1;
- (void)_dismissNavigationMenuViewController;
- (void)_applyPropertiesToViewController:(id)arg1;
- (id)_activePageSection;
- (id)_activeChildViewController;
- (_Bool)_shouldDisplaySegmentedControlInNavigationBar:(id)arg1;
- (void)_setSegmentedControl:(id)arg1;
- (void)_setHeaderView:(id)arg1;
- (_Bool)_reloadWithURLRequestProperties:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=_isCacheExpired) _Bool _cacheExpired;
- (void)_sectionControlAction:(id)arg1;
- (void)_navigationMenuButtonAction:(id)arg1;
- (void)_navigationButtonAction:(id)arg1;
- (void)_tabConfigurationChanged:(id)arg1;
- (void)_sendFailureAfterDialogsFinished:(id)arg1;
- (void)_scriptEventNotification:(id)arg1;
- (void)_reloadForNetworkTypeChange:(id)arg1;
- (void)_documentBoundsChangeNotification:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (_Bool)showPreviewOverlay:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)isShowingPreviewOverlay;
- (void)hidePreviewOverlay:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)menuViewControllerDidCancel:(id)arg1;
- (void)menuViewController:(id)arg1 didTapButton:(id)arg2;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (void)showExternalURL:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (_Bool)viewIsReady;
- (void)tabBarControllerDidReselectTabBarItem:(id)arg1;
- (void)tabBarControllerDidLongPressTabBarItem:(id)arg1;
- (void)storePageProtocolDidChange;
- (id)storePageProtocol;
- (_Bool)shouldExcludeFromNavigationHistory;
- (void)setScriptProperties:(id)arg1;
- (void)setSection:(id)arg1;
- (void)setParentViewController:(id)arg1;
- (void)setLoading:(_Bool)arg1;
- (id)setDisplayedSectionGroup:(id)arg1;
- (void)restoreArchivableContext:(id)arg1;
- (_Bool)reloadWithURLRequestProperties:(id)arg1;
- (void)reload;
- (_Bool)reloadForSectionsWithGroup:(id)arg1;
- (_Bool)pushStorePage:(id)arg1 withTarget:(long long)arg2 animated:(_Bool)arg3;
- (id)newRotationController;
- (id)navigationItemForScriptInterface;
- (void)loadView;
- (_Bool)loadMoreWithURL:(id)arg1;
- (void)iTunesStoreUI_searchFieldControllerDidChange:(id)arg1;
- (id)iTunesStoreUI_searchFieldController;
- (void)invalidateForMemoryPurge;
- (void)invalidate;
- (void)handleStoreFailureWithError:(id)arg1;
- (void)handleApplicationURL:(id)arg1 withSourceApplication:(id)arg2 sourceURL:(id)arg3;
@property(readonly, nonatomic) struct CGRect documentBounds;
- (id)displayedURL;
- (void)didMoveToParentViewController:(id)arg1;
- (double)defaultPNGExpirationTime;
- (id)copyScriptViewController;
- (id)copyScriptProperties;
- (id)copyObjectForScriptFromPoolWithClass:(Class)arg1;
- (id)copyDefaultScriptProperties;
- (id)copyArchivableContext;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (id)URLRequest;
- (id)urlBagKey;
- (void)setURLRequest:(id)arg1;
- (void)setUrlBagKey:(id)arg1;
@property(copy, nonatomic) SSURLRequestProperties *URLRequestProperties;
- (void)showPlaceholderViewController;
- (void)resetNavigationItem:(id)arg1;
- (void)reloadWithStorePage:(id)arg1 ofType:(long long)arg2 forURL:(id)arg3;
- (_Bool)isLoaded;
- (void)handleFailureWithError:(id)arg1;
- (id)newViewControllerForPage:(id)arg1 ofType:(long long)arg2 returningError:(id *)arg3;
- (id)newPlaceholderViewController;
- (id)newFetchOperation;
- (void)enqueueFetchOperationForPageSection:(id)arg1;
- (void)enqueueFetchOperation;
- (void)_finishWebViewLoadWithResult:(_Bool)arg1 error:(id)arg2;
- (_Bool)decidePolicyForWebNavigationAction:(id)arg1 request:(id)arg2 decisionListener:(id)arg3;
@property(readonly, nonatomic) _Bool canBeResolved;
- (void)dealloc;
- (id)initWithTabBarItem:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUAccountViewController : SUStorePageViewController
{
    _Bool _failed;
    long long _style;
    SUMescalSession *_mescalSession;
    long long _mescalState;
    NSString *_primingSignature;
}

+ (id)_latestAccountViewController;
@property(nonatomic) long long style; // @synthesize style=_style;
@property(readonly, nonatomic, getter=_mescalSession) SUMescalSession *_mescalSession; // @synthesize _mescalSession;
- (void)_mescalDidOpenWithSession:(id)arg1 error:(id)arg2;
- (void)_forceOrientationBackToSupportedOrientation;
- (id)_bagKeyForStyle:(long long)arg1;
- (id)_authenticationQueryParametersForStyle:(long long)arg1;
- (void)_closeMescalSession;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (id)newViewControllerForPage:(id)arg1 ofType:(long long)arg2 returningError:(id *)arg3;
- (id)newFetchOperation;
- (void)handleFailureWithError:(id)arg1;
- (void)enqueueFetchOperation;
- (id)copyArchivableContext;
- (void)dealloc;
- (id)initWithExternalAccountURL:(id)arg1;
- (id)init;

@end

@interface SUActivity : UIActivity
{
    id <SUActivityDelegate> _delegate;
    UIImage *_suActivityImage;
    NSString *_suActivityTitle;
    NSString *_suActivityType;
    UIViewController *_suActivityViewController;
}

@property(nonatomic) __weak id <SUActivityDelegate> ITunesStoreDelegate; // @synthesize ITunesStoreDelegate=_delegate;
- (void)prepareWithActivityItems:(id)arg1;
- (void)performActivity;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)activityViewController;
- (id)activityType;
- (id)activityTitle;
- (id)activityImage;
- (void)setActivityViewController:(id)arg1;
- (void)setActivityType:(id)arg1;
- (void)setActivityTitle:(id)arg1;
- (void)setActivityImage:(id)arg1;
- (void)dealloc;

@end

@interface SUActivityItemProvider : UIActivityItemProvider
{
    UIActivity *_activity;
    id <SUActivityItemProviderDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    id _lastProvidedItem;
    UIImage *_previewImage;
}

- (id)item;
@property(retain, setter=setSUPreviewImage:) UIImage *suPreviewImage;
@property(readonly) id suLastProvidedItem;
@property(retain, setter=setSUActivity:) UIActivity *suActivity;
@property __weak id <SUActivityItemProviderDelegate> delegate;
- (void)dealloc;
- (id)initWithPlaceholderItem:(id)arg1;

@end

@interface SUActivityViewController : UIActivityViewController
{
    NSMutableDictionary *_customTitles;
    NSArray *_suActivityItems;
    long long _transitionSafetyCount;
}

- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (id)_titleForActivity:(id)arg1;
- (void)_prepareActivity:(id)arg1;
- (void)_performActivity:(id)arg1;
- (void)setTitle:(id)arg1 forActivityType:(id)arg2;
- (void)dealloc;
- (id)initWithActivityItems:(id)arg1 applicationActivities:(id)arg2;

@end

@interface SUApplication : UIApplication <UIApplicationDelegate>
{
    _Bool _terminateOnNextSuspend;
    UIWindow *_window;
    UIColor *_interactionTintColor;
}

@property(copy, nonatomic) UIColor *interactionTintColor; // @synthesize interactionTintColor=_interactionTintColor;
- (void)_teardownUI;
- (void)_setupUI;
- (void)_exitIfStoreNotAvailable;
- (void)_exitForStoreNotAvailable;
- (void)_applicationDidFinishLaunching:(id)arg1;
- (void)_storeEnabledChangeNotification:(id)arg1;
- (double)defaultImageSnapshotExpiration;
- (void)applicationWillEnterForeground:(id)arg1;
- (_Bool)applicationSuspendWithSettings:(id)arg1;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)_runScriptTestWithOptions:(id)arg1;
- (_Bool)runTest:(id)arg1 options:(id)arg2;
- (void)runTestInvocation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

@interface SUCellConfiguration : NSObject
{
    id _context;
    unsigned int _isDeleteConfirmationVisible:1;
    struct CGSize _layoutSize;
    unsigned int _needsDisplay:1;
    id _representedObject;
    UIView<SUCellConfigurationView> *_view;
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (double)minimumRowHeight;
+ (id)copyDefaultContext;
@property(nonatomic) struct CGSize layoutSize; // @synthesize layoutSize=_layoutSize;
@property(nonatomic) UIView<SUCellConfigurationView> *view; // @synthesize view=_view;
@property(retain, nonatomic) id representedObject; // @synthesize representedObject=_representedObject;
- (long long)textAlignmentForLabelAtIndex:(unsigned long long)arg1;
@property(nonatomic) _Bool isDeleteConfirmationVisible;
- (id)stringForLabelAtIndex:(unsigned long long)arg1;
@property(nonatomic) _Bool needsDisplay;
@property(retain, nonatomic) id context;
- (void)reloadData;
@property(readonly, nonatomic) unsigned long long numberOfLabels;
@property(readonly, nonatomic) unsigned long long numberOfImages;
- (unsigned long long)indexOfLabelForPurchaseAnimation;
- (id)imageAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (_Bool)getShadowColor:(id *)arg1 offset:(struct CGSize *)arg2 forLabelAtIndex:(unsigned long long)arg3 withModifiers:(unsigned long long)arg4;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (struct CGRect)frameForLabelAtIndex:(unsigned long long)arg1;
- (struct CGRect)frameForImageAtIndex:(unsigned long long)arg1;
- (struct CGRect)frameForAccessoryViewWithFrame:(struct CGRect)arg1;
- (void)drawWithModifiers:(unsigned long long)arg1;
- (void)drawBackgroundWithModifiers:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (void)dealloc;

@end

@interface SUArrayCellConfiguration : SUCellConfiguration
{
    unsigned long long _numberOfStrings;
    struct CGRect *_stringFrames;
    id *_strings;
    unsigned long long _numberOfImages;
    struct CGRect *_imageFrames;
    id *_images;
    id *_selectedImages;
}

- (id)_accessibilityStringsArrayPointer;
- (id)stringForLabelAtIndex:(unsigned long long)arg1;
- (void)setLayoutSize:(struct CGSize)arg1;
- (void)reloadData;
- (unsigned long long)numberOfLabels;
- (unsigned long long)numberOfImages;
- (id)imageAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (struct CGRect)frameForLabelAtIndex:(unsigned long long)arg1;
- (struct CGRect)frameForImageAtIndex:(unsigned long long)arg1;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (void)dealloc;
- (id)initWithStringCount:(unsigned long long)arg1 imageCount:(unsigned long long)arg2;

@end

@interface SUImageModifier : NSObject
{
}

@property(readonly, nonatomic) _Bool scalesImage;
- (id)newImageForImage:(id)arg1;
- (struct CGRect)imageFrameForImage:(id)arg1 currentFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (struct CGSize)finalSizeForSize:(struct CGSize)arg1 originalSize:(struct CGSize)arg2;
- (void)drawBeforeImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (void)drawAfterImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;

@end

@interface SUArrayImageModifier : SUImageModifier
{
    NSArray *_modifiers;
}

@property(retain, nonatomic) NSArray *modifiers; // @synthesize modifiers=_modifiers;
- (_Bool)scalesImage;
- (struct CGRect)imageFrameForImage:(id)arg1 currentFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (struct CGSize)finalSizeForSize:(struct CGSize)arg1 originalSize:(struct CGSize)arg2;
- (void)drawBeforeImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (void)drawAfterImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface SUArtworkCellConfiguration : SUArrayCellConfiguration <ISStoreURLOperationDelegate>
{
    NSMutableDictionary *_artworkByURL;
    NSMutableArray *_artworkLoadOperations;
}

+ (id)copyDefaultContext;
- (id)_artworkImageForURL:(id)arg1 dataProvider:(id)arg2;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)setRepresentedObject:(id)arg1;
- (void)reloadAfterArtworkLoad;
- (id)copyImageDataProvider;
- (void)cancelArtworkRequests;
- (id)artworkImageForURL:(id)arg1;
- (id)artworkImageForItemImage:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUCellConfigurationContext : NSObject
{
    long long _tableViewStyle;
}

@property(nonatomic) long long tableViewStyle; // @synthesize tableViewStyle=_tableViewStyle;
- (void)resetLayoutCaches;

@end

@interface SUArtworkCellContext : SUCellConfigurationContext
{
    SUImageCache *_imageCache;
    ISURLOperationPool *_imagePool;
    SUImageDataProvider *_imageProvider;
    UIImage *_placeholderImage;
}

@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(retain, nonatomic) SUImageDataProvider *imageProvider; // @synthesize imageProvider=_imageProvider;
@property(retain, nonatomic) ISURLOperationPool *imagePool; // @synthesize imagePool=_imagePool;
@property(retain, nonatomic) SUImageCache *imageCache; // @synthesize imageCache=_imageCache;
- (void)dealloc;

@end

@interface SUAudioPlayer : NSObject <AVAssetResourceLoaderDelegate>
{
    AVURLAsset *_asset;
    NSURL *_certificateUrl;
    _Bool _didPostForPreviewHistory;
    NSURL *_keyUrl;
    NSMutableDictionary *_nowPlayingInfo;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    long long _storeItemIdentifier;
    SUPlayerStatus *_status;
    id _timeObserver;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(nonatomic) long long storeItemIdentifier; // @synthesize storeItemIdentifier=_storeItemIdentifier;
@property(retain, nonatomic) NSURL *keyURL; // @synthesize keyURL=_keyUrl;
@property(retain, nonatomic) NSURL *certificateURL; // @synthesize certificateURL=_certificateUrl;
- (void)_updateForPeriodicTickWithTime:(double)arg1;
- (void)_setPlayerState:(long long)arg1;
- (void)_postStatusChangeNotification;
- (id)_newFadeInAudioMixForAsset:(id)arg1;
- (void)_handleAssetValuesDidLoad;
- (void)_failWithError:(id)arg1;
- (void)_destroyPlayerItem;
- (void)_destroyPlayer;
- (void)_applyNowPlayingInfo;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)_itemPlayedToEndNotification:(id)arg1;
- (void)_itemFailedToPlayToEndNotification:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)valueForNowPlayingKey:(id)arg1;
- (void)stop;
- (void)setValue:(id)arg1 forNowPlayingKey:(id)arg2;
- (void)seekToTime:(double)arg1;
- (void)pause;
- (void)play;
@property(readonly, nonatomic) SUPlayerStatus *playerStatus;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUAudioPlayerSessionManager : NSObject
{
    NSMutableDictionary *_sessions;
}

+ (id)sessionManager;
- (void)_audioPlayerStatusChangeNotification:(id)arg1;
- (id)stopAllAudioPlayerSessions;
- (id)startSessionWithURL:(id)arg1;
- (id)endSessionForURL:(id)arg1;
- (id)audioPlayerForURL:(id)arg1;
@property(readonly, nonatomic) NSArray *allSessionURLs;
- (void)dealloc;
- (id)init;

@end

@interface SUBackgroundTaskOperation : ISOperation
{
    ISOperation *_operation;
    NSString *_permissionIdentifier;
    unsigned long long _taskIdentifier;
}

- (void)_takeBackgroundAssertion;
- (void)_removeBackgroundAssertion;
- (void)_cancelBackgroundAssertion;
- (void)run;
@property(readonly) NSString *permissionIdentifier;
@property(readonly) ISOperation *operation;
- (void)dealloc;
- (id)initWithOperation:(id)arg1 identifier:(id)arg2;

@end

@interface SUTableCell : UITableViewCell
{
    UIColor *_bottomBorderColor;
    SUTableCellContentView *_configurationView;
    unsigned int _hideHighlight:1;
    SUItemOfferButton *_itemOfferButton;
    CDStruct_3e55db63 _position;
    UIColor *_topBorderColor;
    long long _editState;
}

@property(nonatomic) long long editState; // @synthesize editState=_editState;
@property(retain, nonatomic) UIColor *topBorderColor; // @synthesize topBorderColor=_topBorderColor;
@property(nonatomic) CDStruct_3e55db63 position; // @synthesize position=_position;
@property(retain, nonatomic) UIColor *bottomBorderColor; // @synthesize bottomBorderColor=_bottomBorderColor;
@property(nonatomic) _Bool usesSubviews;
@property(nonatomic) _Bool showHighlight;
@property(nonatomic) _Bool highlightsOnlyContentView;
@property(nonatomic) _Bool drawAsDisabled;
@property(retain, nonatomic) SUCellConfiguration *configuration;
@property(nonatomic) int clipCorners;
@property(readonly, retain, nonatomic) SUItemOfferButton *itemOfferButton;
@property(readonly, nonatomic) UIBezierPath *clippingPath;
- (void)setShowingDeleteConfirmation:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)_canDrawContent;
- (id)copyPurchaseAnimationView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SUBannerCell : SUTableCell <SUCellConfigurationView>
{
    UIButton *_leftButton;
    UIButton *_rightButton;
}

- (void)_reloadButtons;
- (id)_newButton;
- (void)_buttonAction:(id)arg1;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setConfiguration:(id)arg1;
- (void)layoutSubviews;
- (void)reloadView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUItemCellConfiguration : SUArtworkCellConfiguration
{
}

+ (id)copyDefaultContext;

@end

@interface SUBannerCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (double)minimumRowHeight;
+ (id)copyDefaultContext;
- (struct CGSize)_imageSizeForLayoutSize:(struct CGSize)arg1;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (void)reloadData;
- (void)reloadAfterArtworkLoad;
- (id)copyImageDataProvider;
- (id)init;

@end

@interface SUBarButtonItem : UIBarButtonItem
{
    UIView *_accessoryView;
    struct UIEdgeInsets _accessoryViewInsets;
    SUUIAppearance *_confirmationAppearance;
    UINavigationItem *_lastNavigationItem;
    NSString *_preConfirmationTitle;
    SUTouchCaptureView *_touchCaptureView;
}

+ (Class)classForNavigationButton;
@property(nonatomic) struct UIEdgeInsets accessoryViewInsets; // @synthesize accessoryViewInsets=_accessoryViewInsets;
@property(retain, nonatomic) UIView *accessoryView; // @synthesize accessoryView=_accessoryView;
- (void)_updateViewForAccessoryChange;
- (void)_setTitle:(id)arg1 isConfirmation:(_Bool)arg2 appearance:(id)arg3 animated:(_Bool)arg4;
- (void)_removeTouchCaptureView;
- (id)_navigationButton;
- (void)_addTouchCaptureViewForNavigationButton:(id)arg1;
- (void)_touchCaptureAction:(id)arg1;
- (id)createViewForNavigationItem:(id)arg1;
- (void)configureFromScriptButton:(id)arg1;
- (void)showConfirmationWithTitle:(id)arg1 appearance:(id)arg2 animated:(_Bool)arg3;
@property(nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic, getter=isShowingConfirmation) _Bool showingConfirmation;
- (void)hideConfirmationWithAppearance:(id)arg1 animated:(_Bool)arg2;
- (void)dealloc;

@end

@interface SUMaskProvider : NSObject
{
}

- (struct CGPath *)copyPathForMaskWithSize:(struct CGSize)arg1;
- (id)copyMaskImageWithSize:(struct CGSize)arg1;

@end

@interface SUBezierPathMaskProvider : SUMaskProvider
{
    UIBezierPath *_bezierPath;
}

@property(retain, nonatomic) UIBezierPath *bezierPath; // @synthesize bezierPath=_bezierPath;
- (struct CGPath *)copyPathForMaskWithSize:(struct CGSize)arg1;
- (void)dealloc;

@end

@interface SUButtonAccessoryView : UIView
{
    SUGradientButton *_button;
}

- (void)layoutSubviews;
@property(readonly, nonatomic) SUGradientButton *button;
- (void)dealloc;
- (id)initWithDefaultSize;
- (id)init;

@end

@interface SUButtonAction : NSObject
{
    _Bool _activated;
}

@property(readonly, nonatomic, getter=isActivated) _Bool activated; // @synthesize activated=_activated;
- (void)_setActivated:(_Bool)arg1;
- (void)_buttonAction:(id)arg1;

@end

@interface SUButtonCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUCanvasMaskProvider : SUMaskProvider
{
    SUScriptCanvasFunction *_function;
}

- (struct CGPath *)copyPathForMaskWithSize:(struct CGSize)arg1;
- (id)copyMaskImageWithSize:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFunction:(id)arg1;

@end

@interface SUCellConfigurationCache : NSObject
{
    id _cellContext;
    NSMutableArray *_configurations;
}

@property(retain, nonatomic) id cellContext; // @synthesize cellContext=_cellContext;
- (void)resetLayoutCaches;
- (void)reset;
- (id)configurationForRow:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithClass:(Class)arg1 tableHeight:(double)arg2;

@end

@interface SUClient : NSObject
{
    struct __CFArray *_assetTypes;
    SUClientInterface *_clientInterface;
    id <SUClientDelegate> _delegate;
    _Bool _dontSaveNavigationPath;
    SUImageCache *_imageCache;
    ISURLOperationPool *_imagePool;
    NSLock *_lock;
    SUScriptExecutionContext *_scriptExecutionContext;
}

+ (id)viewControllerFactory;
+ (id)imagePool;
+ (id)sharedClient;
+ (void)setSharedClient:(id)arg1;
@property(retain, nonatomic) ISURLOperationPool *imagePool; // @synthesize imagePool=_imagePool;
@property(retain, nonatomic) SUImageCache *imageCache; // @synthesize imageCache=_imageCache;
@property(nonatomic) _Bool dontSaveNavigationPath; // @synthesize dontSaveNavigationPath=_dontSaveNavigationPath;
@property(nonatomic) id <SUClientDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_reloadScriptExecutionContext;
- (void)_purgeCaches;
- (_Bool)_presentModalViewController:(id)arg1 animated:(_Bool)arg2;
- (id)_newComposeReviewViewControllerForButtonAction:(id)arg1;
- (id)_newAccountViewControllerForButtonAction:(id)arg1;
- (void)_memoryWarningNotification:(id)arg1;
- (void)_bagDidLoadNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (id)viewControllerFactory;
- (void)setViewControllerFactory:(id)arg1;
@property(retain, nonatomic) NSString *searchURLBagKey;
@property(retain, nonatomic) NSString *searchHintsURLBagKey;
- (void)setQueueSessionManager:(id)arg1;
- (void)setClientIdentifier:(id)arg1;
- (void)setAssetTypes:(struct __CFArray *)arg1;
- (_Bool)sendActionForDialog:(id)arg1 button:(id)arg2;
@property(readonly, nonatomic) SUScriptExecutionContext *scriptExecutionContext; // @synthesize scriptExecutionContext=_scriptExecutionContext;
- (id)queueSessionManager;
- (_Bool)openURL:(id)arg1 inClientApplication:(id)arg2;
- (_Bool)openInternalURL:(id)arg1;
- (_Bool)openExternalURL:(id)arg1;
- (_Bool)enterAccountFlowWithViewController:(id)arg1 animated:(_Bool)arg2;
- (_Bool)dismissTopViewControllerAnimated:(_Bool)arg1;
- (_Bool)composeReviewWithViewController:(id)arg1 animated:(_Bool)arg2;
- (id)clientIdentifier;
@property(readonly) SUClientInterface *clientInterface;
- (struct __CFArray *)assetTypes;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;
- (id)init;

@end

@interface SUClientController : NSObject <SUClientInterfaceDelegate, MFMailComposeViewControllerDelegate, SUPurchaseManagerDelegate>
{
    _Bool _active;
    SUClientInterface *_clientInterface;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    SUImageCache *_imageCache;
    ISURLOperationPool *_imagePool;
    NSString *_localStoreFrontAtLastSuspend;
    MFMailComposeViewController *_mailComposeViewController;
    struct __CFArray *_offeredAssetTypes;
    NSArray *_overlayConfigurations;
    UIViewController *_rootViewController;
    SUScriptExecutionContext *_scriptExecutionContext;
    NSString *_synchedStoreFrontAtLastSuspend;
    NSMutableDictionary *_urlBagKeys;
}

+ (id)sharedController;
+ (void)setSharedController:(id)arg1;
@property(retain, nonatomic) ISURLOperationPool *imageOperationPool; // @synthesize imageOperationPool=_imagePool;
@property(retain, nonatomic) SUImageCache *imageCache; // @synthesize imageCache=_imageCache;
@property(retain, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
- (void)_reloadUserDefaultsFromURLBag;
- (void)_reloadScriptExecutionContextFromURLBag;
- (void)_reloadOverlayConfigurationsFromURLBag;
- (void)_purgeCaches;
- (void)_presentDialog:(id)arg1;
- (id)_newComposeReviewViewControllerForButtonAction:(id)arg1;
- (id)_newAccountViewControllerForButtonAction:(id)arg1;
- (void)_memoryWarningNotification:(id)arg1;
- (void)bagDidLoadNotification:(id)arg1;
- (void)_dialogNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)purchaseManagerWillBeginUpdates:(id)arg1;
- (void)purchaseManagerDidEndUpdates:(id)arg1;
- (void)purchaseManager:(id)arg1 willAddPurchases:(id)arg2;
- (void)purchaseManager:(id)arg1 failedToAddPurchases:(id)arg2;
- (void)purchaseManager:(id)arg1 didAddPurchases:(id)arg2;
- (id)scriptInterfaceForClientInterface:(id)arg1;
- (void)clientInterface:(id)arg1 setStatusBarStyle:(long long)arg2 animated:(_Bool)arg3;
- (void)clientInterface:(id)arg1 setStatusBarHidden:(_Bool)arg2 withAnimation:(long long)arg3;
- (void)clientInterface:(id)arg1 presentDialog:(id)arg2;
- (void)clientInterface:(id)arg1 exitStoreWithReason:(long long)arg2;
- (id)viewControllerFactory;
- (id)userAgent;
- (void)setViewControllerFactory:(id)arg1;
- (void)setUserAgent:(id)arg1;
- (id)clientIdentifier;
- (id)initWithClientIdentifier:(id)arg1;
@property(readonly, nonatomic) _Bool storeFrontDidChangeSinceLastSuspend;
@property(readonly, nonatomic) NSString *storeContentLanguage;
@property(readonly, nonatomic) SUScriptExecutionContext *scriptExecutionContext; // @synthesize scriptExecutionContext=_scriptExecutionContext;
- (_Bool)performActionForDialog:(id)arg1 button:(id)arg2;
- (void)presentMailComposeViewController:(id)arg1 animated:(_Bool)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (_Bool)isComposingEmail;
- (void)dismissMailComposeViewControllerAnimated:(_Bool)arg1;
- (void)composeEmailWithSubject:(id)arg1 body:(id)arg2 animated:(_Bool)arg3;
- (void)composeEmailWithSubject:(id)arg1 body:(id)arg2;
- (void)composeEmailByRestoringAutosavedMessage;
- (void)autosaveMessageWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)URLBagKeyForIdentifier:(id)arg1;
- (void)setURLBagKey:(id)arg1 forIdentifier:(id)arg2;
- (void)setOfferedAssetTypes:(struct __CFArray *)arg1;
- (void)setIgnoresExpectedClientsProtocol:(_Bool)arg1;
@property(copy) SUClientInterface *clientInterface;
- (void)resignActive;
- (_Bool)presentOverlayBackgroundViewController:(id)arg1;
- (void)presentExternalURLViewController:(id)arg1;
- (_Bool)presentAccountViewController:(id)arg1 showNavigationBar:(_Bool)arg2 animated:(_Bool)arg3;
- (_Bool)presentAccountViewController:(id)arg1 animated:(_Bool)arg2;
- (id)overlayConfigurationForStorePage:(id)arg1;
- (id)overlayBackgroundViewController;
- (_Bool)openURL:(id)arg1 inClientWithIdentifier:(id)arg2;
- (_Bool)openURL:(id)arg1;
- (_Bool)openClientURL:(id)arg1 withSourceApplication:(id)arg2 sourceURLString:(id)arg3;
- (_Bool)openClientURL:(id)arg1;
- (struct __CFArray *)offeredAssetTypes;
- (id)newScriptInterface;
- (_Bool)libraryContainsItemIdentifier:(unsigned long long)arg1;
@property(readonly, nonatomic, getter=isStoreEnabled) _Bool storeEnabled;
- (_Bool)ignoresExpectedClientsProtocol;
- (void)exitStoreWithReason:(long long)arg1;
- (_Bool)displayClientURL:(id)arg1 withSourceApplication:(id)arg2 sourceURLString:(id)arg3;
- (_Bool)displayClientURL:(id)arg1;
- (_Bool)dismissTopViewControllerAnimated:(_Bool)arg1;
- (void)dismissOverlayBackgroundViewController;
- (_Bool)composeReviewWithViewController:(id)arg1 animated:(_Bool)arg2;
- (void)cancelAllOperations;
- (void)becomeActive;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUClientApplicationController : SUClientController <SKUIPassbookLoaderDelegate, SUTabBarControllerDelegate>
{
    SUMediaPlayerViewController *_activeMediaPlayer;
    NSString *_exitStoreButtonTitle;
    SUPlaceholderViewController *_fetchSectionsPlaceholder;
    long long _ignoreDownloadQueueChangeCount;
    SKUIURL *_launchURL;
    SUSectionsResponse *_lastBackgroundSectionsResponse;
    SUSectionsResponse *_lastSectionsResponse;
    ISOperation *_loadSectionsOperation;
    id _locationObserver;
    SKUIPassbookLoader *_passbookLoader;
    NSString *_preMediaDefaultPNG;
    SUPreviewOverlayViewController *_previewOverlay;
    _Bool _reloadForStorefrontChangeAfterAccountSetup;
    _Bool _reloadSectionsOnNextLaunch;
    _Bool _shouldPrepareUserInterfaceWhenActivated;
    SUTabBarController *_tabBarController;
}

+ (id)sharedController;
+ (void)setSharedController:(id)arg1;
@property(nonatomic) _Bool shouldPrepareUserInterfaceWhenActivated; // @synthesize shouldPrepareUserInterfaceWhenActivated=_shouldPrepareUserInterfaceWhenActivated;
@property(copy, nonatomic) NSString *exitStoreButtonTitle; // @synthesize exitStoreButtonTitle=_exitStoreButtonTitle;
@property(retain, nonatomic, getter=_activeMediaPlayer, setter=_setActiveMediaPlayer:) SUMediaPlayerViewController *_activeMediaPlayer; // @synthesize _activeMediaPlayer;
- (_Bool)_showWildcatAccountViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_showPreviewOverlayAnimated:(_Bool)arg1;
- (void)_setupTabBarController;
- (id)_resumableViewController;
- (id)_previewOverlayViewController;
- (void)_openClientURL:(id)arg1;
- (_Bool)_displayClientURL:(id)arg1;
- (void)_cancelSuspendAfterDialogsDismissed;
- (id)_accountViewController;
- (void)_handleSearchURL:(id)arg1 withSourceApplication:(id)arg2 sourceURL:(id)arg3;
- (void)_handleDonationURL:(id)arg1;
- (void)_handleAddPassbookPassURL:(id)arg1;
- (void)_handleAccountURL:(id)arg1;
- (void)_defaultHandleApplicationURLRequestProperties:(id)arg1;
- (void)_retrySectionsAfterNetworkTransition;
- (void)_reloadWithSectionsResponse:(id)arg1;
- (_Bool)_reloadForStorefrontChange;
- (void)_presentSectionFetchUI;
- (_Bool)_loadSectionsAllowingCache:(_Bool)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_handleSectionsLoadFailedWithError:(id)arg1;
- (void)_handleFinishedLoadSectionsOperation:(id)arg1;
- (void)_handleFinishedBackgroundLoadSectionsOperation:(id)arg1;
- (void)_cancelSectionFetchPlaceholder;
- (void)_cancelLoadSectionsOperation;
- (void)_storeFrontChangedNotification:(id)arg1;
- (void)_selectFooterSectionNotification:(id)arg1;
- (void)_restrictionsChangedNotification:(id)arg1;
- (void)_reloadForNetworkTypeChange:(id)arg1;
- (void)_dialogDidFinishNotification:(id)arg1;
- (void)bagDidLoadNotification:(id)arg1;
- (void)_accountControllerDisappearedNotification:(id)arg1;
- (_Bool)tabBarController:(id)arg1 shouldShowSection:(id)arg2;
- (id)presentationViewControllerForPassbookLoader:(id)arg1;
- (void)passbookLoaderDidFinish:(id)arg1;
- (id)tabBarControllerForClientInterface:(id)arg1;
- (void)returnToLibraryForClientInterface:(id)arg1;
- (id)previewOverlayForClientInterface:(id)arg1;
- (void)clientInterface:(id)arg1 showPreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(id)arg1 hidePreviewOverlayAnimated:(_Bool)arg2;
- (id)_showPageForExternalOriginatedURLBagKey:(id)arg1;
- (void)_restorePreMediaPlayerSettings;
- (id)_newTabBarController;
- (void)resignActive;
- (_Bool)presentOverlayBackgroundViewController:(id)arg1;
- (void)presentExternalURLViewController:(id)arg1;
- (_Bool)presentAccountViewController:(id)arg1 showNavigationBar:(_Bool)arg2 animated:(_Bool)arg3;
- (id)overlayBackgroundViewController;
- (_Bool)openClientURL:(id)arg1 withSourceApplication:(id)arg2 sourceURLString:(id)arg3;
- (_Bool)displayClientURL:(id)arg1 withSourceApplication:(id)arg2 sourceURLString:(id)arg3;
- (_Bool)dismissTopViewControllerAnimated:(_Bool)arg1;
- (void)dismissOverlayBackgroundViewController;
- (void)cancelAllOperations;
- (void)becomeActive;
@property(readonly, nonatomic, getter=wasLaunchedFromLibrary) _Bool launchedFromLibrary;
@property(readonly, nonatomic) UINavigationController *topNavigationController;
- (void)tearDownUI;
@property(readonly, nonatomic) SUTabBarController *tabBarController;
- (id)showMainPageForItemKind:(id)arg1 sectionIdentifiers:(id)arg2;
- (void)setupUI;
- (_Bool)selectSectionWithIdentifier:(id)arg1;
- (void)returnToLibrary;
- (_Bool)reloadSectionWithIdentifier:(id)arg1 url:(id)arg2;
- (void)prepareUserInterface;
@property(readonly, nonatomic) NSURL *launchURL;
@property(readonly, nonatomic, getter=isTabBarControllerLoaded) _Bool tabBarControllerLoaded;
@property(readonly, nonatomic, getter=isIgnoringDownloadQueueChanges) _Bool ignoringDownloadQueueChanges;
- (void)exitStoreAfterDialogsDismiss;
- (void)endIgnoringDownloadQueueChanges;
@property(readonly, nonatomic) NSString *defaultPNGNameForSuspend;
- (double)defaultImageSnapshotExpiration;
- (id)copySuspendSettings;
- (void)beginIgnoringDownloadQueueChanges;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUClientDispatch : NSObject
{
}

+ (_Bool)wasLaunchedFromLibrary;
+ (id)tabBarController;
+ (_Bool)showPreviewOverlayAnimated:(_Bool)arg1;
+ (void)setClientBridge:(id)arg1;
+ (_Bool)sendActionForDialog:(id)arg1 button:(id)arg2;
+ (id)scriptExecutionContext;
+ (id)previewOverlayViewController;
+ (_Bool)presentOverlayBackgroundViewController:(id)arg1;
+ (id)overlayConfigurationForStorePage:(id)arg1;
+ (id)overlayBackgroundViewController;
+ (id)newScriptInterface;
+ (_Bool)matchesClientApplication:(id)arg1;
+ (_Bool)isTabBarControllerLoaded;
+ (id)imagePool;
+ (id)imageCache;
+ (_Bool)hidePreviewOverlayAnimated:(_Bool)arg1;
+ (id)exitStoreButtonTitle;
+ (_Bool)enterAccountFlowWithViewController:(id)arg1 animated:(_Bool)arg2;
+ (void)dismissOverlayBackgroundViewController;
+ (_Bool)composeReviewWithViewController:(id)arg1 animated:(_Bool)arg2;
+ (void)composeEmailWithSubject:(id)arg1 body:(id)arg2;
+ (id)clientInterface;

@end

@interface SUClientInterface : NSObject
{
    NSString *_askToBuyApprovalPrompt;
    SUUIAppearance *_appearance;
    _Bool _inAskToBuyApprovalFlow;
    NSString *_clientIdentifier;
    UIColor *_darkKeyColor;
    id <SUClientInterfaceDelegatePrivate> _delegate;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _ignoresExpectedClientsProtocol;
    UIColor *_lightKeyColor;
    NSString *_localStoragePath;
    SUPurchaseManager *_purchaseManager;
    SUQueueSessionManager *_queueSessionManager;
    NSMutableDictionary *_urlBagKeys;
    NSString *_userAgent;
    SUViewControllerFactory *_viewControllerFactory;
    _Bool _wasLaunchedFromLibrary;
    _Bool inAskToBuyApprovalFlow;
}

@property(retain) SUViewControllerFactory *viewControllerFactory; // @synthesize viewControllerFactory=_viewControllerFactory;
@property(copy, nonatomic) UIColor *lightKeyColor; // @synthesize lightKeyColor=_lightKeyColor;
@property(nonatomic) id <SUClientInterfaceDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) UIColor *darkKeyColor; // @synthesize darkKeyColor=_darkKeyColor;
@property _Bool inAskToBuyApprovalFlow; // @synthesize inAskToBuyApprovalFlow;
@property(copy, nonatomic) NSString *askToBuyApprovalPrompt; // @synthesize askToBuyApprovalPrompt=_askToBuyApprovalPrompt;
- (void)_showPreviewOverlayAnimated:(_Bool)arg1;
@property(getter=_ignoresExpectedClientsProtocol, setter=_setIgnoresExpectedClientsProtocol:) _Bool _ignoresExpectedClientsProtocol;
- (void)_setStatusBarStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)_setStatusBarHidden:(_Bool)arg1 withAnimation:(long long)arg2;
- (void)_returnToLibrary;
- (id)_newScriptInterface;
- (id)_newUIAlertView;
- (void)_presentViewController:(id)arg1 fromViewController:(id)arg2 withTransition:(int)arg3;
- (void)_presentDialog:(id)arg1;
- (void)_mediaPlayerViewControllerWillDismiss:(id)arg1 animated:(_Bool)arg2;
- (void)_hidePreviewOverlayAnimated:(_Bool)arg1;
- (void)_exitStoreWithReason:(long long)arg1;
- (void)_dispatchXEvent:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_dispatchOnPageResponseWithData:(id)arg1 response:(id)arg2;
- (void)_dismissViewControllerFromViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_dismissModalViewControllerFromViewController:(id)arg1 withTransition:(int)arg2;
@property _Bool wasLaunchedFromLibrary;
@property(copy) NSString *userAgent;
- (id)URLBagKeyForIdentifier:(id)arg1;
@property(readonly, nonatomic) SUTabBarController *tabBarController;
- (void)setURLBagKey:(id)arg1 forIdentifier:(id)arg2;
@property(retain) SUQueueSessionManager *queueSessionManager;
@property(retain) SUPurchaseManager *purchaseManager;
@property(copy) NSString *localStoragePath;
@property(copy) NSString *clientIdentifier;
@property(copy) SUUIAppearance *appearance;
@property(readonly, nonatomic) SUPreviewOverlayViewController *previewOverlay;
- (void)dealloc;
- (id)init;

@end

@interface SUClientQueueSession : NSObject
{
    long long _count;
    NSArray *_downloadKinds;
    SSDownloadManagerOptions *_managerOptions;
    id _queue;
}

@property(retain, nonatomic) id queue; // @synthesize queue=_queue;
@property(copy, nonatomic) SSDownloadManagerOptions *managerOptions; // @synthesize managerOptions=_managerOptions;
@property(copy, nonatomic) NSArray *downloadKinds; // @synthesize downloadKinds=_downloadKinds;
@property(nonatomic) long long count; // @synthesize count=_count;
- (void)dealloc;
- (id)initWithQueue:(id)arg1;

@end

@interface SUClipCornersImageModifier : SUImageModifier
{
    double _cornerRadius;
    int _corners;
}

@property(nonatomic) int corners; // @synthesize corners=_corners;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (struct CGPath *)_copyClippingPathForRect:(struct CGRect)arg1;
- (void)drawBeforeImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (void)drawAfterImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (_Bool)isEqual:(id)arg1;

@end

@interface SUCompletionCellConfiguration : SUArrayCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUCompletionDataProvider : ISDataProvider
{
}

- (_Bool)parseData:(id)arg1 returningError:(id *)arg2;

@end

@interface SUCompletionItem : NSObject
{
    NSString *_alternateTitle;
    NSString *_title;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *alternateTitle; // @synthesize alternateTitle=_alternateTitle;
- (void)dealloc;
- (id)initWithPropertyList:(id)arg1;
- (id)init;

@end

@interface SUCompletionsResponse : NSObject
{
    NSArray *_completionItems;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSArray *completionItems; // @synthesize completionItems=_completionItems;
- (void)dealloc;
- (id)initWithPropertyList:(id)arg1;
- (id)init;

@end

@interface SUComposeReviewViewController : SUViewController <SKComposeReviewDelegate>
{
    NSURL *_compositionURL;
    SKComposeReviewViewController *_remoteViewController;
}

@property(readonly, nonatomic) NSURL *compositionURL; // @synthesize compositionURL=_compositionURL;
- (void)_showRemoteView;
- (void)reviewComposeViewControllerDidFinish:(id)arg1;
- (void)loadView;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (void)prepareWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)copyScriptViewController;
- (void)dealloc;
- (id)initWithCompositionURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUComposeTextFieldConfiguration : NSObject
{
    struct UIEdgeInsets _borderInsets;
    _Bool _isRequired;
    NSString *_label;
    unsigned long long _maxLength;
    NSString *_placeholder;
    NSString *_value;
}

@property(retain, nonatomic) NSString *value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(nonatomic) unsigned long long maxLength; // @synthesize maxLength=_maxLength;
@property(retain, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic, getter=isRequired) _Bool required; // @synthesize required=_isRequired;
@property(nonatomic) struct UIEdgeInsets borderInsets; // @synthesize borderInsets=_borderInsets;
- (void)dealloc;

@end

@interface SUConcernItem : NSObject
{
    _Bool _default;
    NSString *_identifier;
    NSString *_title;
}

@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic, getter=isDefaultConcern) _Bool defaultConcern; // @synthesize defaultConcern=_default;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface SUConcernListDataProvider : ISDataProvider
{
}

- (id)_concernsForArray:(id)arg1;
- (_Bool)parseData:(id)arg1 returningError:(id *)arg2;

@end

@interface SUTableDataSource : NSObject
{
    id _cellReuseSource;
    long long _columnCount;
    SUVariableCellConfigurationCache *_configurationCache;
    long long _preferringUserInteractionCount;
}

@property(nonatomic) long long columnCount; // @synthesize columnCount=_columnCount;
@property(nonatomic) id cellReuseSource; // @synthesize cellReuseSource=_cellReuseSource;
- (id)titleForHeaderInSection:(long long)arg1;
- (id)titleForDeleteConfirmationForIndexPath:(id)arg1;
@property(readonly, nonatomic) long long tableViewStyle;
@property(readonly, nonatomic) NSArray *sectionIndexTitles;
- (long long)sectionIndexForIndexTitle:(id)arg1 atIndex:(long long)arg2;
- (void)resetLayoutCaches;
- (void)resetCaches;
- (void)reloadData;
- (void)reloadCellContexts;
- (id)placeholderCellForIndexPath:(id)arg1;
@property(readonly, nonatomic) long long numberOfSections;
- (long long)numberOfRowsInSection:(long long)arg1;
- (long long)numberOfColumnsInSection:(long long)arg1;
@property(readonly, nonatomic, getter=isPreferringUserInteraction) _Bool preferringUserInteraction;
@property(readonly, nonatomic) ISURLOperationPool *imagePool;
@property(readonly, nonatomic) SUImageCache *imageCache;
- (double)heightForPlaceholderCells;
- (double)heightForFooterInSection:(long long)arg1;
- (id)headerViewForSection:(long long)arg1;
- (void)endPreferringUserInteraction;
- (void)didEndPreferringUserInteraction;
- (void)didBeginPreferringUserInteraction;
- (_Bool)deleteIndexPath:(id)arg1;
- (void)configurePlaceholderCell:(id)arg1 forIndexPath:(id)arg2;
- (void)configureCell:(id)arg1 forIndexPath:(id)arg2;
- (double)cellHeightForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)cellContextForConfigurationClass:(Class)arg1;
- (_Bool)canSelectIndexPath:(id)arg1;
- (_Bool)canDoubleTapIndexPath:(id)arg1;
- (_Bool)canDeleteIndexPath:(id)arg1;
- (id)cachedConfigurationForClass:(Class)arg1 index:(long long)arg2;
- (void)beginPreferringUserInteraction;
- (void)dealloc;
- (id)init;

@end

@interface SUConcernListDataSource : SUTableDataSource
{
    NSArray *_concerns;
    long long _selectedConcernIndex;
    SUTextViewCell *_textViewCell;
}

@property(nonatomic) long long selectedConcernIndex; // @synthesize selectedConcernIndex=_selectedConcernIndex;
@property(retain, nonatomic) NSArray *concerns; // @synthesize concerns=_concerns;
- (id)_titleCellForIndexPath:(id)arg1;
- (long long)tableViewStyle;
- (long long)numberOfRowsInSection:(long long)arg1;
- (long long)numberOfSections;
- (double)cellHeightForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
@property(readonly, nonatomic) SUTextViewCell *textViewCell; // @synthesize textViewCell=_textViewCell;
- (void)dealloc;
- (id)init;

@end

@interface SUContinuation : NSObject
{
    id <SUContinuationDelegate> _delegate;
}

@property(nonatomic) id <SUContinuationDelegate> delegate; // @synthesize delegate=_delegate;
- (void)sendFinishToDelegate;
- (void)sendErrorToDelegate:(id)arg1;
- (void)start;
- (void)cancel;

@end

@interface SUControlAppearance : NSObject <NSCopying>
{
    NSMutableDictionary *_images;
    NSMutableDictionary *_textAttributes;
    NSMutableDictionary *_titlePositions;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copyKeyForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (struct UIOffset)titlePositionAdjustmentForBarMetrics:(long long)arg1;
- (id)textAttributesForState:(unsigned long long)arg1;
- (void)styleButton:(id)arg1;
- (void)styleBarButtonItem:(id)arg1;
- (void)setTitlePositionAdjustment:(struct UIOffset)arg1 forBarMetrics:(long long)arg2;
- (void)setTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
@property(readonly, nonatomic) long long numberOfImages;
- (id)imageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)enumerateTitlePositionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateTextAttributesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateImagesUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface SUDOMElement : NSObject
{
    DOMElement *_element;
    UIImage *_image;
    UIWebView *_webView;
}

+ (struct CGRect)frameForDOMElement:(id)arg1;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(readonly, nonatomic) DOMElement *element; // @synthesize element=_element;
- (struct CGRect)_frame;
- (void)setProperty:(id)arg1 value:(id)arg2;
- (id)newLabelForElementWithText:(id)arg1;
- (id)newImageView;
@property(readonly, nonatomic) NSString *innerText;
@property(readonly, nonatomic) UIImage *imageRepresentation;
@property(readonly, nonatomic) struct CGRect frame;
- (void)dealloc;
- (id)initWithDOMElement:(id)arg1;

@end

@interface SUDeferredUIButton : UIButton <SUDeferredUIView>
{
    _Bool _deferredEnabled;
    struct CGRect _deferredFrame;
    NSMutableDictionary *_deferredImages;
    NSMutableDictionary *_deferredTitles;
    _Bool _isDeferringInterfaceUpdates;
}

- (void)_saveTitlesAsDeferred;
- (void)_saveImagesAsDeferred;
- (void)_saveCurrentStateAsDeferred;
- (void)_commitDeferredInterfaceUpdates;
- (id)titleForState:(unsigned long long)arg1;
- (void)setTitle:(id)arg1 forState:(unsigned long long)arg2;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setEnabled:(_Bool)arg1;
- (id)imageForState:(unsigned long long)arg1;
- (_Bool)isEnabled;
- (struct CGRect)frame;
@property(nonatomic, getter=isDeferringInterfaceUpdates) _Bool deferringInterfaceUpdates;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUDeferredUISearchField : UISearchField <SUDeferredUIView>
{
    long long _deferredClearButtonMode;
    id _deferredFont;
    struct CGRect _deferredFrame;
    float _deferredPaddingLeft;
    float _deferredPaddingTop;
    NSString *_deferredPlaceholder;
    NSString *_deferredText;
    _Bool _isDeferringInterfaceUpdates;
}

- (void)_saveCurrentStateAsDeferred;
- (void)_commitDeferredInterfaceUpdates;
- (id)text;
- (void)setText:(id)arg1;
- (void)setPlaceholder:(id)arg1;
- (void)setPaddingTop:(float)arg1 paddingLeft:(float)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setFont:(id)arg1;
- (void)setClearButtonMode:(long long)arg1;
- (id)placeholder;
- (float)paddingTop;
- (float)paddingLeft;
- (struct CGRect)frame;
- (id)font;
- (long long)clearButtonMode;
@property(nonatomic, getter=isDeferringInterfaceUpdates) _Bool deferringInterfaceUpdates;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUDeferredUISegmentedControl : UISegmentedControl <SUDeferredUIView>
{
    struct CGRect _deferredFrame;
    double _deferredMaxTotalWidth;
    double _deferredMinSegmentWidth;
    NSMutableArray *_deferredSegments;
    long long _deferredSegmentedControlStyle;
    unsigned long long _deferredSelectedSegmentIndex;
    _Bool _deferredSizeToFit;
    _Bool _isDeferringInterfaceUpdates;
}

- (void)_saveSegmentsAsDeferred;
- (void)_saveCurrentStateAsDeferred;
- (void)_insertSegmentWithValue:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)_commitDeferredInterfaceUpdates;
- (id)titleForSegmentAtIndex:(unsigned long long)arg1;
- (void)sizeToFitWithMinimumSegmentWidth:(double)arg1 maximumTotalWidth:(double)arg2;
- (void)sizeToFit;
- (void)setTitle:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (void)setSelectedSegmentIndex:(long long)arg1;
- (void)setSegmentedControlStyle:(long long)arg1;
- (void)setImage:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (long long)selectedSegmentIndex;
- (long long)segmentedControlStyle;
- (void)removeSegmentAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)removeAllSegments;
- (unsigned long long)numberOfSegments;
- (void)insertSegmentWithTitle:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)insertSegmentWithImage:(id)arg1 atIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (id)imageForSegmentAtIndex:(unsigned long long)arg1;
- (struct CGRect)frame;
@property(nonatomic, getter=isDeferringInterfaceUpdates) _Bool deferringInterfaceUpdates;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUNavigationItem : UINavigationItem
{
}

- (void)setSecondaryLeftBarButtonItem:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIBarButtonItem *secondaryLeftBarButtonItem;

@end

@interface SUDelayedNavigationItem : SUNavigationItem
{
    id _delayedBackButtonTitle;
    id _delayedLeftBarButtonItems;
    NSNumber *_delayedLeftItemsSupplementBackButton;
    id _delayedTitle;
    id _delayedTitleView;
    id _delayedRightBarButtonItems;
    _Bool _shouldDelayChanges;
    SUNavigationItem *_wrappedNavigationItem;
}

@property(retain, nonatomic) SUNavigationItem *wrappedNavigationItem; // @synthesize wrappedNavigationItem=_wrappedNavigationItem;
@property(nonatomic) _Bool shouldDelayChanges; // @synthesize shouldDelayChanges=_shouldDelayChanges;
- (void)_scheduleCommit;
- (void)_prepareButtonItemForDisplay:(id)arg1;
- (id)titleView;
- (id)title;
- (void)setTitleView:(id)arg1 animated:(_Bool)arg2;
- (void)setTitleView:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setRightBarButtonItems:(id)arg1 animated:(_Bool)arg2;
- (void)setRightBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftItemsSupplementBackButton:(_Bool)arg1;
- (void)setLeftBarButtonItems:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (void)setBackButtonTitle:(id)arg1;
- (id)rightBarButtonItems;
- (id)rightBarButtonItem;
- (id)navigationBar;
- (_Bool)leftItemsSupplementBackButton;
- (id)leftBarButtonItems;
- (id)leftBarButtonItem;
- (id)backButtonTitle;
- (void)commitDelayedChanges;
- (void)dealloc;
- (id)initWithNavigationItem:(id)arg1;

@end

@interface SUDelayedQuitController : NSObject
{
    long long _delayTerminateCount;
    NSMutableArray *_longLivedViewControllers;
}

+ (void)endDelayingTerminate;
+ (void)beginDelayingTerminate;
+ (_Bool)isDelayingTerminate;
+ (id)checkedInViewControllerOfClass:(Class)arg1;
+ (_Bool)viewControllerIsLongLived:(id)arg1;
+ (void)checkOutLongLivedViewController:(id)arg1;
+ (void)checkInLongLivedViewController:(id)arg1;
+ (id)sharedInstance;
- (_Bool)_viewControllerIsLongLived:(id)arg1;
- (_Bool)_isDelayingTerminate;
- (void)_endDelayingTerminate;
- (id)_checkedInViewControllerOfClass:(Class)arg1;
- (void)_checkOutLongLivedViewController:(id)arg1;
- (void)_checkInLongLivedViewController:(id)arg1;
- (void)_beginDelayingTerminate;
- (void)dealloc;

@end

@interface SUDialog : NSObject <UIAlertViewDelegate>
{
    UIAlertView *_alertView;
    CDUnknownBlockType _completionBlock;
    ISDialog *_dialog;
}

@property(readonly, nonatomic) ISDialog *dialog; // @synthesize dialog=_dialog;
- (void)_completeWithButtonIndex:(long long)arg1;
- (id)_alertView;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showWithCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)isEquivalent:(id)arg1;
- (void)dealloc;
- (id)initWithDialog:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUDialogManager : NSObject <ISSingleton, SUDialogDelegate>
{
    NSMutableArray *_dialogs;
}

+ (id)newDialogWithError:(id)arg1;
+ (id)sharedInstance;
+ (void)setSharedInstance:(id)arg1;
- (void)_performDefaultActionForDialog:(id)arg1 buttonIndex:(long long)arg2;
- (_Bool)_haveEquivalentDialog:(id)arg1;
- (void)_finishDialog:(id)arg1 withButtonIndex:(long long)arg2;
- (void)dialogDidCancel:(id)arg1;
- (void)dialog:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (_Bool)presentDialogForError:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (_Bool)presentDialogForError:(id)arg1;
- (_Bool)presentDialog:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (_Bool)presentDialog:(id)arg1;
@property(readonly, nonatomic) long long numberOfPendingDialogs;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUDocumentInteractionSession : NSObject <UIDocumentInteractionControllerDelegate>
{
    CDUnknownBlockType _completionHandler;
    UIDocumentInteractionController *_documentInteractionController;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void)documentInteractionController:(id)arg1 willBeginSendingToApplication:(id)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(id)arg1;
- (void)cancel;
- (void)dealloc;
- (id)initWithDocumentInteractionController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUDownloadManager : NSObject
{
    NSArray *_cachedDownloads;
    SUClientInterface *_clientInterface;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    SSDownloadManager *_downloadManager;
    NSMutableDictionary *_downloadsByID;
}

- (void)_removeObject:(id)arg1 fromArray:(id *)arg2;
- (void)_reloadDownloadManager;
- (void)_finishPreflightWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)reloadDownloadManager;
- (void)preflightWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *downloads;
@property(readonly, nonatomic) SSDownloadManager *downloadManager;
- (id)downloadForDownloadIdentifier:(long long)arg1;
- (_Bool)deleteDownload:(id)arg1;
- (void)dealloc;
- (id)initWithDownloadManager:(id)arg1 clientInterface:(id)arg2;
- (id)initWithDownloadManager:(id)arg1;

@end

@interface SUFooterContainerView : UIView
{
    UIView *_contentView;
    UIView *_footerView;
    _Bool _footerVisible;
}

@property(nonatomic, getter=isFooterVisible) _Bool footerVisible; // @synthesize footerVisible=_footerVisible;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface SUFrameAdjustmentImageModifier : SUImageModifier
{
    _Bool _shouldSizeDownToFit;
    unsigned long long _sizingMask;
}

@property(nonatomic) _Bool shouldSizeDownToFit; // @synthesize shouldSizeDownToFit=_shouldSizeDownToFit;
@property(nonatomic) unsigned long long sizingMask; // @synthesize sizingMask=_sizingMask;
- (_Bool)scalesImage;
- (struct CGRect)imageFrameForImage:(id)arg1 currentFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (_Bool)isEqual:(id)arg1;

@end

@interface SUGradient : NSObject <NSCoding, NSCopying>
{
    NSMutableArray *_colorStops;
    NSLock *_lock;
    struct SUGradientPoint _p0;
    struct SUGradientPoint _p1;
    _Bool _sorted;
    long long _type;
}

+ (id)gradientWithColor:(id)arg1;
- (id)description;
@property(readonly) struct SUGradientPoint p1;
@property(readonly) struct SUGradientPoint p0;
@property(readonly) long long numberOfColorStops;
- (id)newPatternColorWithSize:(struct CGSize)arg1 opaque:(_Bool)arg2;
@property(readonly) long long gradientType;
- (struct CGShading *)copyShading;
- (struct CGGradient *)copyCGGradient;
@property(readonly) NSArray *colorStopOffsets;
@property(readonly) NSArray *colorStopColors;
- (void)addColorStopWithOffset:(double)arg1 color:(struct CGColor *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithType:(long long)arg1;
- (id)initWithPropertyList:(id)arg1;
- (id)initWithPoint0:(struct SUGradientPoint)arg1 point1:(struct SUGradientPoint)arg2 type:(long long)arg3;

@end

@interface SUGradientButton : UIButton
{
}

- (void)sizeToFit;
- (void)sendAction:(SEL)arg1 to:(id)arg2 forEvent:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUGradientColorStop : NSObject <NSCoding>
{
    double _r;
    double _g;
    double _b;
    double _a;
    double _offset;
    struct CGColor *_rawColor;
}

- (id)description;
@property(readonly, nonatomic) double offset;
- (struct CGColor *)copyCGColor;
- (long long)compare:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithColor:(struct CGColor *)arg1 offset:(double)arg2;
- (id)init;

@end

@interface SUGradientView : UIView
{
    struct CGGradient *_cgGradient;
    SUGradient *_gradient;
}

@property(copy, nonatomic) SUGradient *gradient; // @synthesize gradient=_gradient;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface SUHitTestView : UIView
{
    NSMutableArray *_hitTestTargets;
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)removeHitTestTarget:(id)arg1;
- (void)addHitTestTarget:(id)arg1;
- (void)dealloc;

@end

@interface SUImageCache : NSObject
{
    CPLRUDictionary *_dictionary;
}

- (void)removeAllCachedImages;
- (id)imageForURL:(id)arg1 dataProvider:(id)arg2;
- (void)addImage:(id)arg1 forURL:(id)arg2 dataProvider:(id)arg3;
- (void)dealloc;
- (id)initWithMaximumCapacity:(long long)arg1;
- (id)init;

@end

@interface SUImageCacheKey : NSObject <NSCopying>
{
    SUImageDataProvider *_dataProvider;
    NSURL *_url;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface SUImageDataProvider : ISDataProvider <NSCopying>
{
    UIColor *_fillColor;
    struct CGSize _finalSize;
    double _inputImageScale;
    SUImageModifier *_modifier;
}

@property(retain) SUImageModifier *modifier; // @synthesize modifier=_modifier;
@property double inputImageScale; // @synthesize inputImageScale=_inputImageScale;
@property struct CGSize finalSize; // @synthesize finalSize=_finalSize;
@property(retain) UIColor *fillColor; // @synthesize fillColor=_fillColor;
- (void)_getFinalSize:(struct CGSize *)arg1 imageFrame:(struct CGRect *)arg2 forImage:(id)arg3 withModifier:(id)arg4;
- (_Bool)parseData:(id)arg1 returningError:(id *)arg2;
- (id)newImageFromImage:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface SUImageViewController : SUViewController
{
    SUTouchCaptureView *_backstopView;
    UIImageView *_imageView;
}

- (id)_imageView;
- (void)_backstopAction:(id)arg1;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
- (void)loadView;
- (void)dealloc;

@end

@interface SUInnerShadowLabel : UILabel
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface SUItem : NSObject <NSCopying>
{
    NSString *_artistName;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    NSString *_collectionName;
    SUItem *_containerItem;
    NSString *_containerName;
    SUItemContentRating *_contentRating;
    NSString *_copyrightString;
    SSItemOffer *_defaultStoreOffer;
    NSDictionary *_dictionary;
    NSString *_disclaimerString;
    _Bool _gameCenterEnabled;
    NSString *_genreName;
    NSString *_humanReadableDescription;
    BOOL _isInstalled;
    long long _itemDisplayType;
    unsigned long long _itemIdentifier;
    SSItemImageCollection *_itemImageCollection;
    NSArray *_itemLinks;
    NSString *_itemMediaKind;
    long long _itemType;
    NSDate *_releaseDate;
    NSString *_releaseDateString;
    long long _representedItemCount;
    SUItemReviewStatistics *_reviewStatistics;
    NSString *_secondaryTitle;
    NSString *_softwareType;
    NSArray *_storeOffers;
    NSDictionary *_tellAFriendDictionary;
    NSString *_title;
    NSDictionary *_tweetDictionary;
    NSString *_unmodifiedTitle;
    NSNumber *_versionIdentifier;
    NSArray *_versionOrdering;
}

@property(copy, nonatomic) NSArray *versionOrdering; // @synthesize versionOrdering=_versionOrdering;
@property(retain, nonatomic) NSNumber *versionIdentifier; // @synthesize versionIdentifier=_versionIdentifier;
@property(copy, nonatomic) NSString *unmodifiedTitle; // @synthesize unmodifiedTitle=_unmodifiedTitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSArray *storeOffers; // @synthesize storeOffers=_storeOffers;
@property(copy, nonatomic) NSString *softwareType; // @synthesize softwareType=_softwareType;
@property(copy, nonatomic) NSString *secondaryTitle; // @synthesize secondaryTitle=_secondaryTitle;
@property(copy, nonatomic) SUItemReviewStatistics *reviewStatistics; // @synthesize reviewStatistics=_reviewStatistics;
@property(nonatomic) long long representedItemCount; // @synthesize representedItemCount=_representedItemCount;
@property(retain, nonatomic) NSDate *releaseDate; // @synthesize releaseDate=_releaseDate;
@property(nonatomic) long long itemType; // @synthesize itemType=_itemType;
@property(copy, nonatomic) NSString *itemMediaKind; // @synthesize itemMediaKind=_itemMediaKind;
@property(copy, nonatomic) NSArray *itemLinks; // @synthesize itemLinks=_itemLinks;
@property(copy, nonatomic) SSItemImageCollection *itemImageCollection; // @synthesize itemImageCollection=_itemImageCollection;
@property(nonatomic) unsigned long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(nonatomic) long long itemDisplayType; // @synthesize itemDisplayType=_itemDisplayType;
@property(readonly, nonatomic) NSDictionary *itemDictionary; // @synthesize itemDictionary=_dictionary;
@property(copy, nonatomic) NSString *humanReadableDescription; // @synthesize humanReadableDescription=_humanReadableDescription;
@property(copy, nonatomic) NSString *genreName; // @synthesize genreName=_genreName;
@property(nonatomic, getter=isGameCenterEnabled) _Bool gameCenterEnabled; // @synthesize gameCenterEnabled=_gameCenterEnabled;
@property(copy, nonatomic) NSString *disclaimerString; // @synthesize disclaimerString=_disclaimerString;
@property(readonly, nonatomic) SSItemOffer *defaultStoreOffer; // @synthesize defaultStoreOffer=_defaultStoreOffer;
@property(copy, nonatomic) NSString *copyrightString; // @synthesize copyrightString=_copyrightString;
@property(copy, nonatomic) SUItemContentRating *contentRating; // @synthesize contentRating=_contentRating;
@property(copy, nonatomic) NSString *containerName; // @synthesize containerName=_containerName;
@property(retain, nonatomic) SUItem *containerItem; // @synthesize containerItem=_containerItem;
@property(copy, nonatomic) NSString *collectionName; // @synthesize collectionName=_collectionName;
@property(copy, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(copy, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
- (id)_valueForFirstAvailableKey:(id)arg1;
- (id)_squishImageForSquishDictionary:(id)arg1;
- (void)_reloadStoreOffers;
- (void)_reloadProperties;
- (void)_reloadItemLinks;
- (void)_reloadItemImages;
- (void)_reloadImagesAndLinksFromSquishes:(id)arg1;
- (void)_reloadDefaultStoreOffer;
- (id)_newPrimaryItemLink;
- (id)_newItemLinkWithType:(long long)arg1 URLKey:(id)arg2 titleKey:(id)arg3;
- (id)_newItemLinkWithType:(long long)arg1 dictionary:(id)arg2;
- (long long)_linkTypeForString:(id)arg1;
- (long long)_linkTargetForTargetString:(id)arg1 typeString:(id)arg2;
@property(readonly, nonatomic) NSString *itemTypeString;
- (id)valueForProperty:(id)arg1;
@property(readonly, nonatomic) NSURL *tweetURL;
@property(readonly, nonatomic) NSString *tweetInitialText;
@property(readonly, nonatomic) NSString *tellAFriendSubject;
@property(readonly, nonatomic) NSURL *tellAFriendBodyURL;
@property(readonly, nonatomic) NSString *tellAFriendBodyMIMEType;
@property(readonly, nonatomic) NSString *tellAFriendBody;
- (id)stringValueForProperty:(id)arg1;
- (id)storeOfferForIdentifier:(id)arg1;
- (id)relatedItemsForRelationType:(id)arg1;
- (id)itemLinksForType:(long long)arg1;
@property(readonly, nonatomic, getter=isInstalled) _Bool installed;
@property(readonly, nonatomic, getter=isDownloadable) _Bool downloadable;
- (_Bool)isDisplayable:(id *)arg1;
- (long long)integerValueForProperty:(id)arg1;
- (id)firstItemLinkForType:(long long)arg1;
@property(readonly, nonatomic) SUItemLink *externalArtistPageLink;
- (id)dateValueForProperty:(id)arg1;
- (id)copyReleaseDateStringWithStyle:(long long)arg1;
- (_Bool)boolValueForProperty:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface SUItemCellContext : SUArtworkCellContext
{
    struct __CFDictionary *_cachedRatingImages;
    CDStruct_f2932e27 _stringSizeCacheKeyCallBacks;
    struct __CFDictionary *_stringSizes;
}

@property(nonatomic) CDStruct_f2932e27 stringSizeCacheKeyCallBacks; // @synthesize stringSizeCacheKeyCallBacks=_stringSizeCacheKeyCallBacks;
- (void)resetLayoutCaches;
- (struct CGSize)sizeForString:(id)arg1 font:(id)arg2 constrainedToSize:(struct CGSize)arg3;
- (id)ratingImageForRating:(float)arg1 style:(long long)arg2;
- (void)dealloc;
- (id)init;

@end

@interface SUItemContentRating : NSObject <NSCopying>
{
    NSDictionary *_dictionary;
    long long _rank;
    NSString *_ratingDescription;
    NSString *_ratingLabel;
    long long _ratingSystem;
    SSItemArtworkImage *_ratingSystemLogo;
    _Bool _shouldHideWhenRestricted;
}

+ (long long)ratingSystemFromString:(id)arg1;
@property(nonatomic) _Bool shouldHideWhenRestricted; // @synthesize shouldHideWhenRestricted=_shouldHideWhenRestricted;
@property(copy, nonatomic) SSItemArtworkImage *ratingSystemLogo; // @synthesize ratingSystemLogo=_ratingSystemLogo;
@property(nonatomic) long long ratingSystem; // @synthesize ratingSystem=_ratingSystem;
@property(copy, nonatomic) NSString *ratingLabel; // @synthesize ratingLabel=_ratingLabel;
@property(copy, nonatomic) NSString *ratingDescription; // @synthesize ratingDescription=_ratingDescription;
@property(nonatomic) long long rank; // @synthesize rank=_rank;
- (_Bool)_isRatingSystemForTV:(long long)arg1;
- (_Bool)_isRatingSystemForMusic:(long long)arg1;
- (_Bool)_isRatingSystemForMovies:(long long)arg1;
- (_Bool)_isRatingSystemForApps:(long long)arg1;
- (id)valueForProperty:(id)arg1;
@property(readonly, nonatomic, getter=isRestricted) _Bool restricted;
@property(readonly, nonatomic, getter=isExplicitContent) _Bool explicitContent;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface SUItemDataSource : NSObject
{
}

+ (id)sharedDataSource;
+ (void)setSharedDataSource:(id)arg1;
- (id)_thumbnailImageForItem:(id)arg1;
- (id)_newTonePurchaseWithPurchase:(id)arg1;
- (id)_newDownloadMetadataForPodcastEpisode:(id)arg1 storeOffer:(id)arg2;
- (id)_newDownloadForPodcastEpisode:(id)arg1 storeOffer:(id)arg2;
- (id)_newDownloadForDocumentItem:(id)arg1 storeOffer:(id)arg2;
- (id)typeStringForItemType:(long long)arg1;
- (id)newPurchaseWithItem:(id)arg1 storeOffer:(id)arg2;
- (id)newItemWithItemDictionary:(id)arg1;
- (id)newExternalDownloadWithItem:(id)arg1 storeOffer:(id)arg2;
- (id)newDisplayItemValidationTestsForItem:(id)arg1;
- (long long)itemTypeForTypeString:(id)arg1;
- (long long)itemTypeForItem:(id)arg1;
- (long long)estimatedDiskSpaceNeededForItem:(id)arg1 storeOffer:(id)arg2;

@end

@interface SUItemLink : NSObject <NSCopying>
{
    long long _linkTarget;
    long long _linkType;
    NSString *_title;
    NSURL *_url;
}

@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) long long linkType; // @synthesize linkType=_linkType;
@property(nonatomic) long long linkTarget; // @synthesize linkTarget=_linkTarget;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface SUItemList : NSObject <NSCopying>
{
    NSMutableArray *_groups;
    NSDictionary *_hintText;
    _Bool _ignoresEmptySections;
}

@property(nonatomic) _Bool ignoresEmptySections; // @synthesize ignoresEmptySections=_ignoresEmptySections;
- (void)_removeHiddenItemsFromArray:(id)arg1;
- (id)_groupAtExternalIndex:(long long)arg1;
- (void)setHintText:(id)arg1;
- (id)hintTextForKey:(id)arg1;
- (void)setItemsFromPropertyList:(id)arg1;
- (void)setItems:(id)arg1;
- (void)replaceItemAtIndexPath:(id)arg1 withItems:(id)arg2;
- (void)removeItemAtIndexPath:(id)arg1;
- (void)insertItems:(id)arg1 atIndexPath:(id)arg2;
- (id)sectionItemForSectionAtIndex:(long long)arg1;
@property(readonly, nonatomic) NSArray *sectionIndexTitles;
- (long long)sectionIndexForIndexTitle:(id)arg1 atIndex:(long long)arg2;
@property(readonly, nonatomic) long long numberOfSections;
@property(readonly, nonatomic) long long numberOfItems;
- (id)itemsForSectionAtIndex:(long long)arg1;
- (id)itemAtIndexPath:(id)arg1;
- (id)indexPathOfItemWithIdentifier:(unsigned long long)arg1;
- (id)indexPathOfItem:(id)arg1;
- (void)enumerateItemsUsingBlock:(CDUnknownBlockType)arg1;
- (id)copyItems;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface SUItemListGroup : NSObject
{
    NSMutableArray *_items;
    SUItem *_separatorItem;
}

@property(retain, nonatomic) SUItem *separatorItem; // @synthesize separatorItem=_separatorItem;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(readonly, nonatomic) NSString *indexBarTitle;
- (id)description;
- (void)dealloc;

@end

@interface SUItemOfferButton : UIButton
{
    long long _animationHorizontalAlignment;
    NSString *_buttonStyle;
    NSString *_confirmationTitle;
    _Bool _isShowingConfirmation;
    NSString *_offerTitle;
    _Bool _shouldShowConfirmation;
}

+ (id)itemOfferButtonStyleForItem:(id)arg1 offer:(id)arg2;
+ (double)defaultAnimationDuration;
@property(nonatomic, getter=isShowingConfirmation) _Bool showingConfirmation; // @synthesize showingConfirmation=_isShowingConfirmation;
@property(nonatomic) _Bool shouldShowConfirmation; // @synthesize shouldShowConfirmation=_shouldShowConfirmation;
@property(copy, nonatomic) NSString *offerTitle; // @synthesize offerTitle=_offerTitle;
@property(copy, nonatomic) NSString *itemOfferButtonStyle; // @synthesize itemOfferButtonStyle=_buttonStyle;
@property(copy, nonatomic) NSString *confirmationTitle; // @synthesize confirmationTitle=_confirmationTitle;
@property(nonatomic) long long animationHorizontalAlignment; // @synthesize animationHorizontalAlignment=_animationHorizontalAlignment;
- (void)_reloadButton;
- (CDStruct_f9159201)_configurationForStyle:(id)arg1;
- (void)_applyConfiguration:(CDStruct_f9159201)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)setShowingConfirmation:(_Bool)arg1 duration:(double)arg2;
- (_Bool)configureForItem:(id)arg1 offer:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUItemReviewStatistics : NSObject <NSCopying>
{
    float _averageUserRating;
    long long _numberOfUserRatings;
    NSString *_numberOfUserRatingsString;
    long long _numberOfUserReviews;
    NSString *_numberOfUserReviewsString;
}

@property(copy, nonatomic) NSString *numberOfUserReviewsString; // @synthesize numberOfUserReviewsString=_numberOfUserReviewsString;
@property(nonatomic) long long numberOfUserReviews; // @synthesize numberOfUserReviews=_numberOfUserReviews;
@property(copy, nonatomic) NSString *numberOfUserRatingsString; // @synthesize numberOfUserRatingsString=_numberOfUserRatingsString;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(nonatomic) float averageUserRating; // @synthesize averageUserRating=_averageUserRating;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface SUTableViewController : SUViewController <UITableViewDataSource, UITableViewDelegate>
{
    SUTableDataSource *_dataSource;
    long long _disappearOrientation;
    NSIndexPath *_firstTapIndexPath;
    long long _placeholderRowCount;
    _Bool _preferUserInteractionWhileScrolling;
    SUTableView *_tableView;
    long long _tableViewStyle;
}

@property(nonatomic) long long tableViewStyle; // @synthesize tableViewStyle=_tableViewStyle;
@property(readonly, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) SUTableDataSource *dataSource; // @synthesize dataSource=_dataSource;
- (void)_resetTableView;
- (void)_reloadPlaceholderCells;
- (void)_deliverTapCount:(long long)arg1 forIndexPath:(id)arg2;
- (void)_doubleTapTimeout;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 sectionForSectionIndexTitle:(id)arg2 atIndex:(long long)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
@property(readonly, nonatomic) unsigned long long numberOfRows;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)setScriptProperties:(id)arg1;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (id)copyScriptProperties;
- (id)copyDefaultScriptProperties;
- (id)copyArchivableContext;
- (void)scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2 animated:(_Bool)arg3;
- (void)reloadData;
- (void)reloadForChangedRowCount:(long long)arg1;
- (id)newTableView;
- (_Bool)indexPathIsPlaceholder:(id)arg1;
- (_Bool)handleSelectionForIndexPath:(id)arg1 tapCount:(long long)arg2;
- (_Bool)deleteRowAtIndexPath:(id)arg1;
- (int)clippedCornersForIndexPath:(id)arg1;
- (_Bool)canSelectRowAtIndexPath:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUItemTableViewController : SUTableViewController
{
    SUDocumentInteractionSession *_documentInteractionSession;
}

- (id)_tableCellForButton:(id)arg1;
- (void)_showPurchaseConfirmationForButton:(id)arg1;
- (void)_removeTouchCaptureView;
- (void)_promptToOpenUTI:(id)arg1 fromIndexPath:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)_preferredApplicationFromCandidates:(id)arg1;
- (void)_hidePurchaseConfirmationForButton:(id)arg1;
- (void)_chooseApplicationToOpenDocumentAtIndexPath:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_restrictionsChangedNotification:(id)arg1;
- (void)_purchasedItemSetChangedNotification:(id)arg1;
- (void)_touchCaptureAction:(id)arg1;
- (void)itemOfferButtonAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)reloadData;
- (_Bool)purchaseItemAtIndexPath:(id)arg1;
- (_Bool)openDocumentForItemAtIndexPath:(id)arg1 withApplication:(id)arg2;
- (id)itemAtIndexPath:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUItemValidator : NSObject
{
    NSMutableArray *_collectionTests;
    NSMutableArray *_itemTests;
}

@property(readonly, nonatomic) NSArray *validationTests;
- (_Bool)validateItems:(id)arg1 offers:(id)arg2 error:(id *)arg3;
- (_Bool)validateItems:(id)arg1 error:(id *)arg2;
- (void)removeValidationTest:(id)arg1;
- (void)addItemValidationTests:(id)arg1;
- (void)addCollectionValidationTests:(id)arg1;
- (void)dealloc;

@end

@interface SUItemValidatorTest : NSObject <NSCopying>
{
}

+ (id)defaultTest;
- (_Bool)isEqual:(id)arg1;
- (_Bool)validateItems:(id)arg1 offers:(id)arg2 error:(id *)arg3;
- (_Bool)validateItem:(id)arg1 offer:(id)arg2 error:(id *)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SUItemValidatorRatingTest : SUItemValidatorTest <NSCopying>
{
}

- (_Bool)validateItems:(id)arg1 error:(id *)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SULegacyClientBridge : NSObject <MFMailComposeViewControllerDelegate, SUOverlayBackgroundDelegate>
{
    SUClientInterface *_clientInterface;
    SUOverlayBackgroundViewController *_overlayBackgroundViewController;
    SUPreviewOverlayViewController *_previewOverlayViewController;
    UITabBarController *_rootViewController;
}

@property(retain, nonatomic) UITabBarController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic) SUOverlayBackgroundViewController *overlayBackgroundViewController; // @synthesize overlayBackgroundViewController=_overlayBackgroundViewController;
@property(readonly, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
- (void).cxx_destruct;
- (void)_showPreviewOverlayAnimated:(_Bool)arg1;
- (void)_removePreviewOverlayViewController;
- (id)_previewOverlayViewController;
- (void)scriptOverlayBackgroundDidDismiss:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)showPreviewOverlayAnimated:(_Bool)arg1;
@property(readonly, nonatomic) SUPreviewOverlayViewController *previewOverlayViewController;
- (_Bool)presentOverlayBackgroundViewController:(id)arg1;
- (_Bool)performActionForDialog:(id)arg1 button:(id)arg2;
- (void)hidePreviewOverlayAnimated:(_Bool)arg1;
- (_Bool)enterAccountFlowWithViewController:(id)arg1 animated:(_Bool)arg2;
- (void)dismissOverlayBackgroundViewController;
- (_Bool)composeReviewWithViewController:(id)arg1 animated:(_Bool)arg2;
- (void)composeEmailWithSubject:(id)arg1 body:(id)arg2;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SULinkControl : UIControl
{
    UILabel *_label;
    _Bool _shouldDrawUnderline;
    unsigned int _sizeIsDirty:1;
    long long _style;
}

@property(nonatomic) _Bool shouldDrawUnderline; // @synthesize shouldDrawUnderline=_shouldDrawUnderline;
- (void)_updateLabel;
- (id)_label;
- (void)sizeToFit;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)setText:(id)arg1;
- (void)setStyle:(long long)arg1;
- (void)dealloc;

@end

@interface SULoadMoreCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SULoadMoreMediaCellConfiguration : SUItemCellConfiguration
{
    double _previousCellHeight;
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
@property(nonatomic) double previousCellHeight; // @synthesize previousCellHeight=_previousCellHeight;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SULoadNetworkSectionsOperation : ISOperation
{
    ISStoreURLOperation *_baseOperation;
    SUClientInterface *_clientInterface;
    NSString *_expectedVersionString;
    SUSectionsResponse *_sectionsResponse;
}

- (void)_setSectionsResponse:(id)arg1;
- (_Bool)_loadArtworkForResponse:(id)arg1;
- (id)_copyLoadedItemImage:(id)arg1 error:(id *)arg2;
- (id)_copyImageWithURL:(id)arg1 scale:(float)arg2 error:(id *)arg3;
- (id)_bestItemImageForImages:(id)arg1 withImageKind:(id)arg2;
- (void)run;
@property(retain) NSString *expectedVersionString;
@property(retain) ISStoreURLOperation *baseOperation;
@property(readonly) SUSectionsResponse *sectionsResponse;
- (void)dealloc;
- (id)initWithURL:(id)arg1 clientInterface:(id)arg2;

@end

@interface SULoadSectionsOperation : ISOperation <ISURLOperationDelegate>
{
    NSString *_activeSectionVersionString;
    SUClientInterface *_clientInterface;
    SUSectionsResponse *_sectionsResponse;
    _Bool _shouldUseCache;
}

- (void)_writeSectionsResponseToCache:(id)arg1 forVersion:(id)arg2;
- (void)_setSectionsResponse:(id)arg1;
- (_Bool)_loadSectionsFromNetworkWithDictionary:(id)arg1;
- (_Bool)_loadSectionsFromCacheForVersion:(id)arg1;
- (id)_cachePathForVersion:(id)arg1 create:(_Bool)arg2;
- (void)run;
@property _Bool shouldUseCache;
@property(copy) NSString *activeSectionVersionString;
@property(readonly) SUSectionsResponse *sectionsResponse;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SULoadingView : UIView
{
    long long _activityIndicatorStyle;
    UIColor *_activityIndicatorColor;
    UILabel *_label;
    UIActivityIndicatorView *_progressIndicator;
    unsigned long long _style;
    UIColor *_textColor;
    UIColor *_textShadowColor;
}

@property(retain, nonatomic) UIColor *textShadowColor; // @synthesize textShadowColor=_textShadowColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) long long activityIndicatorStyle; // @synthesize activityIndicatorStyle=_activityIndicatorStyle;
@property(retain, nonatomic) UIColor *activityIndicatorColor; // @synthesize activityIndicatorColor=_activityIndicatorColor;
- (void)_setupSubviews;
- (void)setStyle:(unsigned long long)arg1;
- (id)newTextLabel;
- (id)newProgressIndicator;
- (void)sizeToFit;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SULockoutView : UIView
{
    UIImageView *_backgroundImageView;
    UILabel *_bodyLabel;
    UIImageView *_glowImageView;
    UIImageView *_imageView;
    long long _layoutPreset;
    UILabel *_titleLabel;
}

@property(nonatomic) long long layoutPreset; // @synthesize layoutPreset=_layoutPreset;
- (id)_titleLabel;
- (id)_newLabel;
- (id)_imageView;
- (id)_bodyLabel;
- (void)_layoutForSlowNetwork;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *image;
@property(retain, nonatomic) UIImage *glowImage;
@property(copy, nonatomic) NSString *body;
@property(retain, nonatomic) UIImage *backgroundImage;
- (void)dealloc;

@end

@interface SULockoutViewController : SUViewController
{
    UIImage *_image;
    NSBundle *_localizationBundle;
    NSString *_messageBody;
    NSString *_messageTitle;
}

@property(retain, nonatomic) NSString *messageTitle; // @synthesize messageTitle=_messageTitle;
@property(retain, nonatomic) NSString *messageBody; // @synthesize messageBody=_messageBody;
@property(retain, nonatomic) NSBundle *localizationBundle; // @synthesize localizationBundle=_localizationBundle;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)loadView;
- (id)copyArchivableContext;
- (void)dealloc;
- (id)init;

@end

@interface SUMarkupCell : SUTableCell
{
    SUWebDocumentView *_webView;
}

- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setConfiguration:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SUMarkupCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (id)copyDefaultContext;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;

@end

@interface SUMarkupCellContext : SUItemCellContext
{
    long long _pendingWebViewLoads;
    NSString *_stylesheet;
    struct __CFDictionary *_webViewCache;
    double _webViewWidth;
}

@property(nonatomic) double webViewWidth; // @synthesize webViewWidth=_webViewWidth;
@property(retain, nonatomic) NSString *stylesheet; // @synthesize stylesheet=_stylesheet;
- (void)webViewDidFinishLoading:(id)arg1;
- (id)webViewForMarkup:(id)arg1;
- (void)dealloc;

@end

@interface SUMaskedView : UIView
{
    SUMaskProvider *_maskProvider;
}

@property(retain, nonatomic) SUMaskProvider *maskProvider; // @synthesize maskProvider=_maskProvider;
- (void)_reloadMask;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGPath *)copyMaskPath;
- (void)dealloc;

@end

@interface SUMediaItemCellConfiguration : SUItemCellConfiguration
{
}

+ (id)copyDefaultContext;
- (struct UIEdgeInsets)_ratingBorderInsets;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (void)drawWithModifiers:(unsigned long long)arg1;
- (double)alphaForImageAtIndex:(unsigned long long)arg1 fromAlpha:(double *)arg2 withModifiers:(unsigned long long)arg3;
- (double)alphaForLabelAtIndex:(unsigned long long)arg1 fromAlpha:(double *)arg2 withModifiers:(unsigned long long)arg3;
@property(readonly, nonatomic) _Bool showContentRating;
@property(readonly, nonatomic) long long mediaIconType;
- (id)copyImageDataProvider;
@property(readonly, nonatomic) struct CGSize artworkSize;
- (id)initWithStringCount:(unsigned long long)arg1 imageCount:(unsigned long long)arg2;

@end

@interface SUMediaItemCellContext : SUItemCellContext
{
    double _artworkWidth;
    long long _hiddenMediaIconTypes;
    _Bool _itemsHaveArtwork;
}

@property(nonatomic) _Bool itemsHaveArtwork; // @synthesize itemsHaveArtwork=_itemsHaveArtwork;
@property(nonatomic) long long hiddenMediaIconTypes; // @synthesize hiddenMediaIconTypes=_hiddenMediaIconTypes;
@property(nonatomic) double artworkWidth; // @synthesize artworkWidth=_artworkWidth;
- (id)init;

@end

@interface SUMediaLibraryAdamIDCache : NSObject
{
    NSMutableSet *_adamIDs;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _isPopulated;
}

+ (id)sharedCache;
- (void)_populateCache;
- (void)_libraryChangedNotification:(id)arg1;
- (void)populateCache;
- (void)getProperties:(id)arg1 ofAdamIDs:(id)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;
- (void)getIntersectionWithSet:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)getContainsAdamID:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface SUMediaPlayerItem : NSObject <NSCopying>
{
    NSURL *_backgroundImageURL;
    NSString *_bookmarkIdentifier;
    NSArray *_downloadPingURLs;
    long long _initialOrientation;
    unsigned long long _itemIdentifier;
    long long _itemType;
    NSArray *_playbackPingURLs;
    double _playableDuration;
    NSString *_subtitle;
    NSString *_title;
    NSURL *_url;
}

@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(copy, nonatomic) NSArray *playbackPingURLs; // @synthesize playbackPingURLs=_playbackPingURLs;
@property(nonatomic) double playableDuration; // @synthesize playableDuration=_playableDuration;
@property(nonatomic) long long itemType; // @synthesize itemType=_itemType;
@property(nonatomic) unsigned long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(nonatomic) long long initialOrientation; // @synthesize initialOrientation=_initialOrientation;
@property(copy, nonatomic) NSArray *downloadPingURLs; // @synthesize downloadPingURLs=_downloadPingURLs;
@property(copy, nonatomic) NSString *bookmarkIdentifier; // @synthesize bookmarkIdentifier=_bookmarkIdentifier;
@property(retain, nonatomic) NSURL *backgroundImageURL; // @synthesize backgroundImageURL=_backgroundImageURL;
- (id)_newPingURLsWithArray:(id)arg1;
@property(nonatomic) double bookmarkedStartTime;
- (void)resetBookmarkedStartTime;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithItem:(id)arg1;

@end

@interface SUMediaPlayerViewController : MPMoviePlayerViewController <ISOperationDelegate>
{
    UIView *_backgroundContainerView;
    SUClientInterface *_clientInterface;
    SUMediaPlayerItem *_mediaItem;
    NSMutableArray *_operations;
    long long _playerState;
}

+ (_Bool)_URLIsITunesU:(id)arg1;
+ (void)_sendPingRequestsForURLs:(id)arg1 URLBagKey:(id)arg2 playerItem:(id)arg3;
+ (void)sendPlaybackPingRequestsForMediaPlayerItem:(id)arg1;
+ (void)sendDownloadPingRequestsForMediaPlayerItem:(id)arg1;
@property(readonly, copy, nonatomic) SUMediaPlayerItem *mediaPlayerItem; // @synthesize mediaPlayerItem=_mediaItem;
@property(retain, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
- (void)_showBackgroundImage:(id)arg1;
- (void)_setIsActivePlayer:(_Bool)arg1;
- (void)_prepareMediaItem;
- (void)_insertBackgroundContainerView;
- (void)_loadBackgroundImage;
- (void)_enqueueOperation:(id)arg1;
- (void)_dequeueOperation:(id)arg1;
- (void)_bookmarkCurrentTime;
- (id)_backgroundContainerView;
- (void)_playbackFinishedNotification:(id)arg1;
- (void)_mediaTypesAvailableNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)operationFinished:(id)arg1;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (id)copyScriptViewController;
- (void)dealloc;
- (id)initWithMediaPlayerItem:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUMenuViewController : SUViewController <UITableViewDataSource, UITableViewDelegate>
{
    id <SUMenuViewControllerDelegate> _delegate;
    long long _selectedIndex;
    UITableView *_tableView;
}

@property(nonatomic) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(nonatomic) id <SUMenuViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_tableView;
- (_Bool)_sendDidCancel;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)reload;
- (struct CGSize)minimumViewSize;
- (struct CGSize)maximumViewSize;
- (void)loadView;
- (id)titleOfMenuItemAtIndex:(long long)arg1;
- (void)performActionForMenuItemAtIndex:(long long)arg1;
- (long long)numberOfMenuItems;
- (_Bool)isMenuItemEnabledAtIndex:(long long)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUMescalSession : NSObject
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _complete;
}

- (void)_teardownSession;
- (id)_newDataWithBytes:(char *)arg1 length:(unsigned int)arg2;
- (_Bool)verifyPrimeSignature:(id)arg1 error:(id *)arg2;
- (id)signData:(id)arg1 error:(id *)arg2;
- (id)primeForAccountCreationWithData:(id)arg1 error:(id *)arg2;
@property(readonly, getter=isComplete) _Bool complete;
- (id)exchangeData:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface SUMoreListController : UIMoreListController
{
    UITabBarItem *_tabBarItem;
}

- (void)_reloadPreviewOverlayVisibility;
- (void)_badgeDidChangeNotification:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tabBarItem;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (long long)ITunesStoreUIBarStyle;
- (void)didMoveToParentViewController:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SUMoreListTableViewCell : UITableViewCell
{
}

- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SUMoreNavigationController : UIMoreNavigationController
{
}

+ (Class)_moreListControllerClass;
- (_Bool)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (long long)ITunesStoreUIBarStyle;
- (id)copyScriptViewController;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SUNativeScriptMenuViewController : SUMenuViewController
{
    SUScriptFunction *_action;
    NSArray *_menuItems;
}

@property(retain, nonatomic) NSArray *menuItems; // @synthesize menuItems=_menuItems;
@property(retain, nonatomic) SUScriptFunction *action; // @synthesize action=_action;
- (id)titleOfMenuItemAtIndex:(long long)arg1;
- (void)performActionForMenuItemAtIndex:(long long)arg1;
- (long long)numberOfMenuItems;
- (_Bool)isMenuItemEnabledAtIndex:(long long)arg1;
- (id)copyScriptViewController;
- (void)dealloc;

@end

@interface SUNavigationBar : UINavigationBar
{
}

@end

@interface SUNavigationBarBackgroundView : UIView
{
    _UIBackdropView *_backdropView;
    UIView *_borderView;
    _Bool _separatorOnTop;
    _Bool translucent;
    _Bool barWantsAdaptiveBackdrop;
    long long barStyle;
    UIColor *barTintColor;
    _UINavigationBarAppearanceStorage *appearanceStorage;
    UIView *_shadowView;
}

@property(nonatomic) _Bool barWantsAdaptiveBackdrop; // @synthesize barWantsAdaptiveBackdrop;
@property(nonatomic, getter=isTranslucent) _Bool translucent; // @synthesize translucent;
@property(retain, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;
@property(retain, nonatomic) _UINavigationBarAppearanceStorage *appearanceStorage; // @synthesize appearanceStorage;
@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor;
@property(nonatomic) long long barStyle; // @synthesize barStyle;
@property(nonatomic) _Bool separatorOnTop; // @synthesize separatorOnTop=_separatorOnTop;
@property(readonly) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
- (id)_currentCustomBackground;
- (id)_currentCustomBackgroundRespectOversize_legacy:(_Bool *)arg1;
- (void)_setFrame:(struct CGRect)arg1 forceUpdateBackgroundImage:(_Bool)arg2;
- (void)updateBackgroundImage;
- (void)_setIsContainedInPopover:(_Bool)arg1;
- (void)layoutSubviews;
@property(nonatomic) long long backdropStyle;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUNavigationButton : UINavigationButton
{
    UIView *_accessoryView;
    struct UIEdgeInsets _accessoryViewInsets;
}

@property(nonatomic) struct UIEdgeInsets accessoryViewInsets; // @synthesize accessoryViewInsets=_accessoryViewInsets;
@property(retain, nonatomic) UIView *accessoryView; // @synthesize accessoryView=_accessoryView;
- (struct CGRect)_accessoryViewRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface SUNavigationController : UINavigationController <SUScriptNativeObject>
{
    _Bool _canBeWeakScriptReference;
    SUClientInterface *_clientInterface;
    _Bool _loading;
    SUSection *_section;
    long long _storeBarStyle;
}

@property(retain, nonatomic) SUSection *section; // @synthesize section=_section;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
- (void)_loadingDidChangeNotification:(id)arg1;
- (_Bool)clearsWeakScriptReferences;
- (_Bool)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(long long)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_sectionForViewController:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setViewControllers:(id)arg1;
- (void)setToolbarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setToolbarHidden:(_Bool)arg1;
- (void)_setStoreBarStyle:(long long)arg1 clientInterface:(id)arg2;
- (void)setParentViewController:(id)arg1;
- (void)restoreArchivableContext:(id)arg1;
- (void)removeChildViewController:(id)arg1;
- (id)moreListSelectedImage;
- (id)moreListImage;
- (void)loadView;
- (long long)ITunesStoreUIBarStyle;
@property(readonly, copy) NSString *description;
- (id)copyScriptViewController;
- (id)copyArchivableContext;
- (void)addChildViewController:(id)arg1;
- (void)dealloc;
- (id)initWithSection:(id)arg1 rootViewController:(id)arg2;
- (id)initWithSection:(id)arg1;
- (id)initWithRootViewController:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUNavigationHistoryItem : NSObject <NSCopying>
{
    NSString *_title;
    SSURLRequestProperties *_urlRequestProperties;
}

@property(readonly, nonatomic) SSURLRequestProperties *URLRequestProperties; // @synthesize URLRequestProperties=_urlRequestProperties;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface SUNavigationMenu : NSObject <NSCopying>
{
    NSString *_cancelTitle;
    NSString *_closedTitle;
    long long _initialSelectedIndex;
    long long _location;
    NSArray *_menuItems;
    NSArray *_navigationButtons;
    NSString *_openTitle;
}

@property(readonly, nonatomic) NSString *openTitle; // @synthesize openTitle=_openTitle;
@property(readonly, nonatomic) NSArray *navigationButtons; // @synthesize navigationButtons=_navigationButtons;
@property(readonly, nonatomic) NSArray *menuItems; // @synthesize menuItems=_menuItems;
@property(nonatomic) long long location; // @synthesize location=_location;
@property(readonly, nonatomic) long long initialSelectedIndex; // @synthesize initialSelectedIndex=_initialSelectedIndex;
@property(readonly, nonatomic) NSString *closedTitle; // @synthesize closedTitle=_closedTitle;
@property(readonly, nonatomic) NSString *cancelTitle; // @synthesize cancelTitle=_cancelTitle;
- (id)_newNavigationButtonsFromArray:(id)arg1;
- (id)_newMenuItemsFromArray:(id)arg1;
- (long long)_locationForString:(id)arg1;
- (void)_loadFromDictionary:(id)arg1;
- (id)navigationButtonForLocation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface SUNavigationMenuItem : NSObject <NSCopying>
{
    SUItemContentRating *_contentRating;
    NSString *_title;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) SUItemContentRating *contentRating; // @synthesize contentRating=_contentRating;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface SUNavigationMenuViewController : SUMenuViewController
{
    SUNavigationMenu *_navigationMenu;
}

@property(readonly, nonatomic) SUNavigationMenu *navigationMenu; // @synthesize navigationMenu=_navigationMenu;
- (void)_protocolButtonAction:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)titleOfMenuItemAtIndex:(long long)arg1;
- (long long)numberOfMenuItems;
- (void)dealloc;
- (id)initWithNavigationMenu:(id)arg1;
- (id)init;

@end

@interface SUNetworkLockoutViewController : SULockoutViewController
{
}

- (void)_reloadUserInterface;
- (void)loadView;
- (void)setSection:(id)arg1;
- (void)setLocalizationBundle:(id)arg1;
- (id)init;

@end

@interface SUNetworkObserver : NSObject <ISSingleton, ISStoreURLOperationDelegate>
{
    ISStoreURLOperation *_partnerDetectOperation;
    _Bool _partnersEnabled;
    NSString *_partnerIdentifier;
    NSTimer *_startupTimer;
    long long _storeServicesNetworkUsageCount;
}

+ (id)sharedInstance;
+ (void)setSharedInstance:(id)arg1;
- (void)_updateNetworkActivityIndicator;
- (void)_startupTimer:(id)arg1;
- (void)_mainThreadSetPartnerIdentifier:(id)arg1;
- (void)_mainThreadScheduleNetworkActivityUpdate;
- (void)_mainThreadHandleNetworkTypeChange:(id)arg1;
- (void)_handleUsingNetworkChange:(id)arg1;
- (void)_handleNetworkTypeChange:(id)arg1;
- (void)_cancelStartupTimer;
- (void)_storeServicesNetworkStopNotification:(id)arg1;
- (void)_storeServicesNetworkStartNotification:(id)arg1;
- (void)_partnerHeaderChanged:(id)arg1;
- (void)_networkUsageStateChanged:(id)arg1;
- (void)_networkTypeChanged:(id)arg1;
- (void)startNetworkAvailabilityTimer;
- (void)setPartnersEnabled:(_Bool)arg1;
@property(retain, nonatomic) NSString *partnerIdentifier; // @synthesize partnerIdentifier=_partnerIdentifier;
- (void)checkPartnerAvailability;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUNowPlayingCell : SUTableCell
{
}

- (void)setHighlightsOnlyContentView:(_Bool)arg1;
- (void)setAccessoryView:(id)arg1;
- (void)setAccessoryType:(long long)arg1;
- (void)layoutSubviews;

@end

@interface SUNowPlayingTrackCellConfiguration : SUMediaItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (id)copyDefaultContext;
- (long long)mediaIconType;
- (_Bool)showContentRating;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUObjectPool : NSObject
{
    NSMutableDictionary *_poolObjects;
    NSMutableArray *_vendedObjects;
}

@property(readonly, nonatomic) NSArray *vendedObjects; // @synthesize vendedObjects=_vendedObjects;
- (id)copyPoppedObjectForClass:(Class)arg1;
- (id)addObjectsOfClass:(Class)arg1 count:(long long)arg2 forClass:(Class)arg3;
- (void)addObjects:(id)arg1 forClass:(Class)arg2;
- (void)dealloc;

@end

@interface SUOverlayAction : NSObject
{
    long long _animationCount;
    UIViewController *_otherViewController;
    SUOverlayTransition *_transition;
    int _type;
    UIViewController *_viewController;
}

@property(retain, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) SUOverlayTransition *transition; // @synthesize transition=_transition;
@property(retain, nonatomic) UIViewController *otherViewController; // @synthesize otherViewController=_otherViewController;
@property(nonatomic) long long animationCount; // @synthesize animationCount=_animationCount;
@property(nonatomic) int actionType; // @synthesize actionType=_type;
- (void)dealloc;

@end

@interface SUOverlayBackgroundViewController : SUViewController <SUScalingFlipViewDelegate, UIGestureRecognizerDelegate>
{
    NSMutableArray *_actionQueue;
    SUScalingFlipView *_activeFlipView;
    _Bool _askingToDismissEverything;
    _Bool _askingToDismissSelection;
    SUTouchCaptureView *_captureView;
    id <SUOverlayBackgroundDelegate> _delegate;
    struct CGRect _keyboardFrame;
    long long _selectedViewControllerIndex;
    UISwipeGestureRecognizer *_swipeGestureRecognizer;
    NSMutableArray *_viewControllers;
}

@property(readonly, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
@property(nonatomic) id <SUOverlayBackgroundDelegate> delegate; // @synthesize delegate=_delegate;
- (double)_viewControllerKeyboardOffset;
- (double)_viewControllerHorizontalPadding;
- (void)_tearDownFlipView;
- (void)_shouldDismissFinishedWithValue:(id)arg1;
- (void)_sendDidDismiss;
- (id)_selectedViewController;
- (void)_removeViewController:(id)arg1;
- (void)_reloadGestureRecognizers;
- (void)_performFlipForAction:(id)arg1;
- (void)_layoutForKeyboardChangeWithInfo:(id)arg1;
- (struct CGRect)_frameForSlideFromBottomForViewController:(id)arg1;
- (id)_copyTransitionForTransition:(id)arg1 action:(id)arg2;
- (struct CGRect)_centeredFrameForViewController:(id)arg1;
- (void)_addViewController:(id)arg1;
- (void)_performPresentAction:(id)arg1;
- (void)_performNextAction;
- (void)_performDismissEverythingAction:(id)arg1;
- (void)_performDismissAction:(id)arg1;
- (void)_overlayAnimationDidFinish;
- (void)_overlayActionDidFinish;
- (void)_finishPresentAction:(id)arg1;
- (void)_finishDismissOfViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_finishDismissEverythingAction:(id)arg1;
- (void)_finishDismissAction:(id)arg1;
- (void)_enqueueAction:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)scalingFlipViewDidFinish:(id)arg1;
- (void)_backgroundAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_swipe:(id)arg1;
- (void)_captureViewAction:(id)arg1;
- (void)storePage:(id)arg1 finishedWithSuccess:(_Bool)arg2;
- (void)overlayPageViewTapped:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (_Bool)shouldExcludeFromNavigationHistory;
- (void)restoreArchivableContext:(id)arg1;
- (void)loadView;
- (void)keyboardWillShowWithInfo:(id)arg1;
- (void)keyboardWillHideWithInfo:(id)arg1;
- (id)copyArchivableJetsamContext;
- (id)copyArchivableContext;
- (id)copyChildViewControllersForReason:(long long)arg1;
- (id)viewControllerForScriptWindowContext:(id)arg1;
@property(readonly, nonatomic) SUOverlayViewController *selectedViewController;
- (void)presentOverlay:(id)arg1 withTransition:(id)arg2;
- (void)populateNavigationHistoryWithItems:(id)arg1;
- (void)layoutViewControllers;
- (void)dismissOverlay:(id)arg1 animated:(_Bool)arg2;
- (void)dismissAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUOverlayConfiguration : NSObject
{
    NSRegularExpression *_bagKeyPattern;
    long long _cornerRadius;
    _Bool _shouldShowNavigationBar;
    struct CGSize _size;
    NSString *_transitionName;
    NSRegularExpression *_urlPattern;
}

@property(readonly, nonatomic) NSString *transitionName; // @synthesize transitionName=_transitionName;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) _Bool shouldShowNavigationBar; // @synthesize shouldShowNavigationBar=_shouldShowNavigationBar;
@property(readonly, nonatomic) long long cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (_Bool)matchesURLBagKey:(id)arg1;
- (_Bool)matchesURL:(id)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface SUOverlayTransition : NSObject <NSCoding, NSCopying>
{
    double _duration;
    SUDOMElement *_sourceElement;
    long long _type;
}

+ (long long)transitionTypeFromString:(id)arg1;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) SUDOMElement *sourceElement; // @synthesize sourceElement=_sourceElement;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface SUOverlayViewController : SUViewController
{
    NSMutableArray *_actionQueue;
    UIViewController *_activeViewController;
    UIViewController *_backViewController;
    _Bool _canSwipeToDismiss;
    UIViewController *_frontViewController;
    SUOverlayTransition *_lastFlipTransition;
    struct CGSize _overlaySize;
    SUOverlayTransition *_presentationTransition;
    SUScriptWindowContext *_scriptWindowContext;
    double _shadowOpacity;
    double _shadowRadius;
    SUScriptFunction *_shouldDismissFunction;
    long long _state;
    SUMaskedView *_subviewContainerView;
    SUTouchCaptureView *_touchCaptureView;
}

+ (struct CGSize)defaultOverlaySize;
@property(retain, nonatomic) SUScriptFunction *shouldDismissFunction; // @synthesize shouldDismissFunction=_shouldDismissFunction;
@property(nonatomic) double shadowRadius; // @synthesize shadowRadius=_shadowRadius;
@property(nonatomic) double shadowOpacity; // @synthesize shadowOpacity=_shadowOpacity;
@property(retain, nonatomic) SUOverlayTransition *presentationTransition; // @synthesize presentationTransition=_presentationTransition;
@property(nonatomic) struct CGSize overlaySize; // @synthesize overlaySize=_overlaySize;
@property(retain, nonatomic) UIViewController *frontViewController; // @synthesize frontViewController=_frontViewController;
@property(nonatomic) _Bool canSwipeToDismiss; // @synthesize canSwipeToDismiss=_canSwipeToDismiss;
@property(retain, nonatomic) UIViewController *backViewController; // @synthesize backViewController=_backViewController;
- (void)_tearDownTouchCaptureView;
- (id)_subviewContainerView;
- (void)_setShadowVisible:(_Bool)arg1;
- (void)_setActiveViewController:(id)arg1 updateInterface:(_Bool)arg2;
- (_Bool)_isControllerLoaded:(id)arg1;
- (id)_flipTransition;
- (void)_applyOverlayConfiguration:(id)arg1;
- (void)_applyDisplayProperties;
- (id)_activeViewController;
- (void)_performNextAction;
- (void)_performFlipTransitionAction:(id)arg1;
- (void)_performFlipAction:(id)arg1;
- (void)_overlayAnimationDidFinish;
- (void)_overlayActionDidFinish;
- (void)_finishFlipAction:(id)arg1;
- (void)_enqueueAction:(id)arg1;
- (void)_touchCaptureAction:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)storePage:(id)arg1 finishedWithSuccess:(_Bool)arg2;
- (void)imagePageViewTapped:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (_Bool)shouldExcludeFromNavigationHistory;
- (id)scriptWindowContext;
- (void)restoreArchivableContext:(id)arg1;
- (void)loadView;
- (void)invalidateForMemoryPurge;
- (id)copyArchivableContext;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)viewWillDismissWithTransition:(id)arg1;
- (void)setScriptWindowContext:(id)arg1;
@property(retain, nonatomic) SUMaskProvider *maskProvider;
@property(readonly, nonatomic, getter=isOnFront) _Bool onFront;
@property(readonly, nonatomic, getter=isActiveOverlay) _Bool activeOverlay;
- (void)flipWithTransition:(id)arg1;
@property(readonly, nonatomic) UIViewController *activeViewController;
- (void)dealloc;
- (id)initWithOverlayConfiguration:(id)arg1;
- (id)init;

@end

@interface SUPageSection : NSObject
{
    double _expirationTime;
    NSString *_identifier;
    UIImage *_image;
    long long _structuredPageType;
    NSString *_title;
    SSMutableURLRequestProperties *_urlRequestProperties;
    id _userInfo;
}

@property(retain, nonatomic) id userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) SSURLRequestProperties *URLRequestProperties; // @synthesize URLRequestProperties=_urlRequestProperties;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) long long structuredPageType; // @synthesize structuredPageType=_structuredPageType;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) double expirationTime; // @synthesize expirationTime=_expirationTime;
- (void)_setURLBagKey:(id)arg1;
- (void)_setURL:(id)arg1;
@property(readonly, nonatomic) id segmentedControlItem;
- (_Bool)loadFromDictionary:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUPageSectionGroup : NSObject <NSCopying>
{
    long long _defaultSectionIndex;
    NSArray *_sections;
    long long _style;
    UIColor *_tintColor;
    long long _tintStyle;
}

@property(nonatomic) long long tintStyle; // @synthesize tintStyle=_tintStyle;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(nonatomic) long long style; // @synthesize style=_style;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(nonatomic) long long defaultSectionIndex; // @synthesize defaultSectionIndex=_defaultSectionIndex;
- (long long)_sectionStyleForString:(id)arg1;
- (_Bool)loadFromDictionary:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSectionsDictionary:(id)arg1;

@end

@interface SUPastisOperation : ISOperation
{
    NSURL *_certificateUrl;
    NSURL *_keyUrl;
    AVAssetResourceLoadingRequest *_loadingRequest;
}

@property(retain, nonatomic) AVAssetResourceLoadingRequest *loadingRequest; // @synthesize loadingRequest=_loadingRequest;
@property(retain, nonatomic) NSURL *keyURL; // @synthesize keyURL=_keyUrl;
@property(retain, nonatomic) NSURL *certificateURL; // @synthesize certificateURL=_certificateUrl;
- (id)_getCKCForSPC:(id)arg1 URI:(id)arg2 error:(id *)arg3;
- (id)_getURIWithError:(id *)arg1;
- (id)_getAppCertWithError:(id *)arg1;
- (void)run;
- (void)dealloc;

@end

@interface SUPlaceholderViewController : SUViewController
{
    SUGradient *_backgroundGradient;
    SUGradient *_defaultBackgroundGradient;
    _Bool _hideLoadingView;
    SULoadingView *_loadingView;
    SUGradientView *_gradientView;
}

@property(copy, nonatomic) SUGradient *defaultBackgroundGradient; // @synthesize defaultBackgroundGradient=_defaultBackgroundGradient;
@property(copy, nonatomic) SUGradient *backgroundGradient; // @synthesize backgroundGradient=_backgroundGradient;
- (void)_reloadLoadingView;
- (void)_reloadBackgroundGradient;
- (id)_newURLBagBackgroundGradient;
- (id)_copyActiveGradient;
- (void)_bagDidLoadNotification:(id)arg1;
- (void)setScriptProperties:(id)arg1;
- (void)setLoading:(_Bool)arg1;
- (void)parentViewControllerHierarchyDidChange;
- (void)loadView;
- (id)copyDefaultScriptProperties;
- (id)copyArchivableContext;
@property(nonatomic) _Bool shouldShowLoadingView;
@property(readonly, nonatomic) SULoadingView *loadingView;
- (void)dealloc;
- (id)init;

@end

@interface SUPlainTextCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
- (long long)textAlignmentForLabelAtIndex:(unsigned long long)arg1;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (_Bool)getShadowColor:(id *)arg1 offset:(struct CGSize *)arg2 forLabelAtIndex:(unsigned long long)arg3 withModifiers:(unsigned long long)arg4;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUPlayerStatus : NSObject <NSCopying>
{
    double _currentTime;
    double _duration;
    NSError *_error;
    long long _state;
}

@property(nonatomic) long long playerState; // @synthesize playerState=_state;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface SUPostConcernOperation : ISOperation <ISStoreURLOperationDelegate>
{
    NSString *_commentText;
    SUConcernItem *_concern;
    unsigned long long _itemIdentifier;
}

@property unsigned long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(retain) SUConcernItem *concern; // @synthesize concern=_concern;
@property(retain) NSString *commentText; // @synthesize commentText=_commentText;
- (id)_httpBody;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)run;
- (void)dealloc;
- (id)initWithConcern:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUPrepareMediaItemOperation : ISOperation
{
    SUMediaPlayerItem *_mediaItem;
}

@property(readonly, copy, nonatomic) SUMediaPlayerItem *mediaPlayerItem; // @synthesize mediaPlayerItem=_mediaItem;
- (_Bool)_runHEADRequest:(id *)arg1;
- (void)run;
- (void)dealloc;
- (id)initWithMediaPlayerItem:(id)arg1;
- (id)init;

@end

@interface SUPreviewOverlayStorePageViewController : SUStorePageViewController
{
}

- (void)handleFailureWithError:(id)arg1;

@end

@interface SUPreviewOverlayView : UIView
{
    UIView *_borderView;
    UIView *_storePageView;
}

@property(retain, nonatomic) UIView *storePageView; // @synthesize storePageView=_storePageView;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUPreviewOverlayViewController : SUViewController
{
    struct CGSize _contentSize;
    CDUnknownBlockType _loadBlock;
    _Bool _loaded;
    double _paddingRight;
    double _paddingTop;
    SUPreviewOverlayStorePageViewController *_storePageViewController;
    NSString *_userInfoString;
    _Bool _visible;
}

+ (void)_setContentInsetsForScrollView:(id)arg1 viewController:(id)arg2;
+ (void)offsetScrollView:(id)arg1 forViewController:(id)arg2;
+ (id)defaultRequestProperties;
+ (double)defaultAnimationDuration;
@property(copy, nonatomic) NSString *userInfoString; // @synthesize userInfoString=_userInfoString;
@property(nonatomic) double paddingTop; // @synthesize paddingTop=_paddingTop;
@property(nonatomic) double paddingRight; // @synthesize paddingRight=_paddingRight;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
- (id)_storePageViewController;
- (id)_scrollViewForViewController:(id)arg1;
- (id)_previewOverlayContainerForViewController:(id)arg1;
- (void)loadView;
- (void)storePage:(id)arg1 finishedWithSuccess:(_Bool)arg2;
- (void)invalidateForMemoryPurge;
- (void)showInViewController:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)showInNavigationController:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)loadWithRequestProperties:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)loadWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isContentLoaded) _Bool contentLoaded;
- (void)hideInViewController:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)hideInNavigationController:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)dealloc;

@end

@interface SUProtocolButton : NSObject <NSCopying>
{
    NSDictionary *_buttonDictionary;
}

@property(readonly, nonatomic) NSDictionary *buttonDictionary; // @synthesize buttonDictionary=_buttonDictionary;
@property(readonly, nonatomic) NSURL *URL;
@property(readonly, nonatomic) NSString *buttonTitle;
@property(readonly, nonatomic) NSString *buttonTarget;
@property(readonly, nonatomic) NSString *buttonLocation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithButtonDictionary:(id)arg1;
- (id)init;

@end

@interface SUPurchaseAnimationDelegate : NSObject
{
    UIView *_view;
}

- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)dealloc;
- (id)initWithView:(id)arg1;

@end

@interface SUPurchaseAnimator : NSObject
{
}

+ (void)performHopAnimationForView:(id)arg1 relativeToView:(id)arg2 tabBarController:(id)arg3 finalAlpha:(float)arg4 scale:(float)arg5;
+ (void)performHopAnimationForView:(id)arg1 relativeToView:(id)arg2 finalAlpha:(float)arg3 scale:(float)arg4;

@end

@interface SUPurchaseBatch : NSObject
{
    NSArray *_continuations;
    NSArray *_errors;
    NSArray *_items;
    NSArray *_offers;
    SUPurchaseManager *_purchaseManager;
    _Bool _shouldSuspendWhenFinished;
    NSArray *_validPurchases;
}

@property(retain, nonatomic) NSArray *validPurchases; // @synthesize validPurchases=_validPurchases;
@property(nonatomic) __weak SUPurchaseManager *purchaseManager; // @synthesize purchaseManager=_purchaseManager;
@property(readonly, nonatomic) NSArray *offers; // @synthesize offers=_offers;
@property(readonly, nonatomic) NSArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSArray *errors; // @synthesize errors=_errors;
@property(retain, nonatomic) NSArray *continuations; // @synthesize continuations=_continuations;
- (void)_validateItems;
- (id)_copyValidPurchasesForItems:(id)arg1;
- (id)_copyUniqueErrorsFromErrors:(id)arg1;
- (id)_copyModifiedErrorsFromDictionary:(struct __CFDictionary *)arg1;
- (id)mergedErrorForError:(id)arg1 withCount:(long long)arg2;
- (id)everythingFailedErrorForError:(id)arg1;
- (CDUnknownFunctionPointerType)errorEqualCallback;
- (id)copyFilteredItemsFromItems:(id)arg1;
- (id)copyContinuationsForPurchases:(id)arg1;
- (void)setPurchasesAndContinuationsFromPurchases:(id)arg1;
- (void)setDocumentTargetIdentifier:(id)arg1;
- (void)dealloc;
- (id)initWithItems:(id)arg1 offers:(id)arg2;
- (id)initWithItems:(id)arg1;

@end

@interface SUPurchaseContinuation : SUContinuation
{
    id _purchase;
    SUPurchaseManager *_purchaseManager;
}

@property(nonatomic) __weak SUPurchaseManager *purchaseManager; // @synthesize purchaseManager=_purchaseManager;
@property(readonly, nonatomic) id purchase; // @synthesize purchase=_purchase;
- (void)start;
- (void)cancel;
- (void)dealloc;
- (id)initWithPurchase:(id)arg1;

@end

@interface SUPurchaseManager : NSObject <SSPurchaseRequestDelegatePrivate, SUContinuationDelegate, SSDownloadManagerObserver, SSPurchaseRequestDelegate>
{
    id <SUPurchaseManagerDelegate> _delegate;
    NSMutableSet *_futurePurchases;
    NSMutableSet *_inflightContinuations;
    NSMutableArray *_observedDownloadManagers;
    NSMutableArray *_pendingContinuations;
    NSMutableArray *_pendingPurchases;
    NSMutableSet *_purchasedIdentifiers;
    NSMutableArray *_purchaseRequests;
    SUQueueSessionManager *_queueSessionManager;
    _Bool _showingErrorDialogs;
    long long _updatesCount;
    NSString *_userAgent;
    _Bool _waitingForAuthentication;
}

@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(retain, nonatomic) SUQueueSessionManager *queueSessionManager; // @synthesize queueSessionManager=_queueSessionManager;
@property(readonly, nonatomic) NSSet *purchasedItemIdentifiers; // @synthesize purchasedItemIdentifiers=_purchasedIdentifiers;
@property(readonly, nonatomic) NSSet *futurePurchases; // @synthesize futurePurchases=_futurePurchases;
@property(nonatomic) id <SUPurchaseManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_startPurchases:(id)arg1;
- (void)_startContinuations:(id)arg1;
- (void)_showDialogsForErrors:(id)arg1;
- (void)_removePurchaseRequest:(id)arg1;
- (void)_removePlaceholdersForPurchase:(id)arg1;
- (void)_performNextAction;
- (_Bool)_needsAuthenticationForPurchases:(id)arg1;
- (_Bool)_issuePurchaseRequestForPurchases:(id)arg1;
- (void)_enqueuePurchases:(id)arg1;
- (void)_enqueueExternalDownload:(id)arg1;
- (void)_enqueueContinuations:(id)arg1;
- (id)_downloadManagerForDownloadKind:(id)arg1;
- (void)_addDownloadingIconForPurchases:(id)arg1;
- (id)_accountForPurchase:(id)arg1;
- (void)requestDidFinish:(id)arg1;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)purchaseRequest:(id)arg1 purchaseDidSucceedWithResponse:(id)arg2;
- (void)purchaseRequest:(id)arg1 purchaseDidSucceed:(id)arg2;
- (void)purchaseRequest:(id)arg1 purchaseDidFail:(id)arg2 withError:(id)arg3;
- (void)continuationFinished:(id)arg1;
- (void)continuation:(id)arg1 failedWithError:(id)arg2;
- (void)_dialogDidFinish:(id)arg1;
- (void)removePurchasedItemIdentifier:(unsigned long long)arg1;
@property(readonly, nonatomic) long long numberOfPendingPurchases;
- (id)newPurchaseBatchForItems:(id)arg1 offers:(id)arg2;
- (_Bool)itemIdentifierIsPurchasing:(unsigned long long)arg1;
- (_Bool)itemIdentifierIsPurchased:(unsigned long long)arg1;
- (void)endUpdates;
- (void)cancelFuturePurchase:(id)arg1;
- (void)beginUpdates;
- (void)addPurchasedItemIdentifiers:(id)arg1;
- (void)addPurchasedItemIdentifier:(unsigned long long)arg1;
- (_Bool)addPurchaseBatch:(id)arg1;
- (void)addFuturePurchase:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_schedulePurchaseCallback:(id)arg1 forPurchases:(id)arg2;
- (id)_newPurchaseBatchForPurchases:(id)arg1;
- (id)_newExternalDownloadWithItemDictionary:(id)arg1;
- (id)_newExternalDownloadWithDownloadDictionary:(id)arg1;
- (id)_newExternalDownloadWithDictionary:(id)arg1;
- (id)_newDictionaryForWebScriptValue:(id)arg1 inContext:(struct OpaqueJSContext *)arg2;
- (void)_addBatchForPurchases:(id)arg1 options:(id)arg2;
- (void)purchaseScriptObject:(id)arg1 withOptions:(id)arg2 inContext:(struct OpaqueJSContext *)arg3;
- (void)purchaseScriptObject:(id)arg1;
- (void)enqueueScriptPurchases:(id)arg1;
- (id)copyPurchaseForScriptObject:(id)arg1 inContext:(struct OpaqueJSContext *)arg2;
- (id)copyPurchaseForScriptObject:(id)arg1;
- (void)addExternalDownloads:(id)arg1 withOptions:(id)arg2 inContext:(struct OpaqueJSContext *)arg3;
- (void)addExternalDownloads:(id)arg1 inContext:(struct OpaqueJSContext *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUQueueSessionManager : NSObject
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSMutableArray *_downloadManagers;
    NSMutableArray *_preorderManagers;
}

- (id)_queueSessionWithQueue:(id)arg1 fromArray:(id)arg2;
- (id)_queueSessionWithManagerOptions:(id)arg1 fromArray:(id)arg2;
- (id)_queueSessionWithDownloadKinds:(id)arg1 fromArray:(id)arg2;
- (void)_endQueueSession:(id)arg1 fromArray:(id)arg2;
- (void)endPreorderManagerSessionWithManager:(id)arg1;
- (void)endDownloadManagerSessionForManager:(id)arg1;
- (id)beginPreorderManagerSessionWithItemKinds:(id)arg1;
- (id)beginDownloadManagerSessionWithManagerOptions:(id)arg1;
- (id)beginDownloadManagerSessionWithDownloadKinds:(id)arg1;
- (id)beginDownloadManagerSessionForDownloadKind:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUReflectionImageModifier : SUImageModifier
{
    UIGradient *_gradient;
    double _reflectionHeight;
}

@property(nonatomic) double reflectionHeight; // @synthesize reflectionHeight=_reflectionHeight;
@property(retain, nonatomic) UIGradient *gradient; // @synthesize gradient=_gradient;
- (void)drawAfterImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (struct CGRect)imageFrameForImage:(id)arg1 currentFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (struct CGSize)finalSizeForSize:(struct CGSize)arg1 originalSize:(struct CGSize)arg2;
- (void)dealloc;

@end

@interface SUReflectionImageView : UIView
{
    double _reflectionHeight;
    double _spacing;
    double _reflectionAlpha;
    _Bool _useImageSize;
    unsigned int _nonSquareImage:1;
    UIImageView *_imageView;
    SUReflectionView *_reflection;
}

@property(nonatomic) double reflectionSpacing; // @synthesize reflectionSpacing=_spacing;
- (void)setUseImageSize:(_Bool)arg1;
- (void)setReflectionVisible:(_Bool)arg1;
- (void)setReflectionAlphaWhenVisible:(double)arg1;
@property(nonatomic) _Bool nonSquareImage;
- (void)setImage:(id)arg1;
- (void)dealloc;
- (id)initWithReflectionHeight:(double)arg1 spacing:(double)arg2;
- (id)init;

@end

@interface SUReflectionView : UIView
{
    UIImage *_image;
}

- (void)drawRect:(struct CGRect)arg1;
- (void)setImage:(id)arg1;
- (void)dealloc;

@end

@interface SURemoteNotificationController : NSObject
{
}

+ (id)sharedInstance;
- (void)handleNotificationDictionary:(id)arg1;
- (void)handleRegistrationSuccessWithToken:(id)arg1;
- (void)handleRegistrationFailureWithError:(id)arg1;
@property(readonly, nonatomic) unsigned long long enabledNotificationTypes;
- (id)init;

@end

@interface SUReportConcernViewController : SUTableViewController
{
    _Bool _animatingKeyboard;
    unsigned long long _itemIdentifier;
    struct UIEdgeInsets _originalTableInsets;
}

@property(readonly, nonatomic) unsigned long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
- (void)_fetchConcerns;
- (void)_submit:(id)arg1;
- (void)_cancel:(id)arg1;
- (void)_showKeyboardDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_hideKeyboardDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)keyboardWillShowWithInfo:(id)arg1;
- (void)keyboardWillHideWithInfo:(id)arg1;
- (_Bool)handleSelectionForIndexPath:(id)arg1 tapCount:(long long)arg2;
- (id)initWithItemIdentifier:(unsigned long long)arg1;

@end

@interface SUResponderChainInvocationRecorder : ISInvocationRecorder
{
    Protocol *_protocol;
}

- (id)methodSignatureForSelector:(SEL)arg1;
- (void)invokeInvocation:(id)arg1;
- (id)adjustedTargetForSelector:(SEL)arg1;
- (id)_targetForSelector:(SEL)arg1 sender:(id)arg2;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;

@end

@interface SUReviewCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (_Bool)getShadowColor:(id *)arg1 offset:(struct CGSize *)arg2 forLabelAtIndex:(unsigned long long)arg3 withModifiers:(unsigned long long)arg4;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUReviewsButton : SUGradientButton
{
    UIImageView *_disclosureView;
    float _userRating;
    long long _userRatingCount;
    NSString *_userRatingCountString;
}

@property(retain, nonatomic) NSString *userRatingCountString; // @synthesize userRatingCountString=_userRatingCountString;
@property(nonatomic) long long userRatingCount; // @synthesize userRatingCount=_userRatingCount;
@property(nonatomic) float userRating; // @synthesize userRating=_userRating;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)imageRectForContentRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (struct CGRect)contentRectForBounds:(struct CGRect)arg1;
- (void)reloadView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUReviewsHeaderCellConfiguration : SUItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (_Bool)getShadowColor:(id *)arg1 offset:(struct CGSize *)arg2 forLabelAtIndex:(unsigned long long)arg3 withModifiers:(unsigned long long)arg4;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUStructuredPageViewController : SUItemTableViewController <ISURLOperationDelegate>
{
    Class _dataSourceClass;
    UILabel *_noItemsLabel;
    SUStructuredPage *_structuredPage;
}

@property(retain, nonatomic) SUStructuredPage *structuredPage; // @synthesize structuredPage=_structuredPage;
@property(retain, nonatomic) Class dataSourceClass; // @synthesize dataSourceClass=_dataSourceClass;
- (void)_reloadTermsAndConditions;
- (void)_reloadNoItemsLabel;
- (void)_reloadLoadMoreCellAtIndexPath:(id)arg1;
- (void)_loadMoreWithURL:(id)arg1;
- (void)_loadMoreOperation:(id)arg1 finishedWithOutput:(id)arg2;
- (_Bool)_gotoURLForItem:(id)arg1 withURLIndex:(long long)arg2;
- (_Bool)_handleLoadMoreForIndexPath:(id)arg1;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)bannerCell:(id)arg1 tappedButtonAtIndex:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (id)storePageProtocol;
- (void)setLoading:(_Bool)arg1;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
- (void)reloadData;
- (_Bool)loadMoreWithURL:(id)arg1;
- (_Bool)hasDisplayableContent;
- (_Bool)handleSelectionForIndexPath:(id)arg1 tapCount:(long long)arg2;
- (struct CGRect)documentBounds;
- (_Bool)canSelectRowAtIndexPath:(id)arg1;
- (id)newTermsAndConditionsFooter;
- (id)newNoItemsOverlayLabel;
- (id)newDataSource;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUReviewsListingViewController : SUStructuredPageViewController
{
    SUButtonAccessoryView *_accessoryView;
}

- (void)_reloadHeaderView;
- (id)_headerItem;
- (_Bool)_canWriteReview;
- (id)_accessoryView;
- (void)_writeAReview:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)newTermsAndConditionsFooter;
- (void)reloadForChangedRowCount:(long long)arg1;
- (void)reloadData;
- (void)loadView;
- (void)dealloc;

@end

@interface SURotationController : NSObject
{
    SUViewController *_viewController;
}

@property(nonatomic) SUViewController *viewController; // @synthesize viewController=_viewController;
- (struct CGRect)viewFrameForInterfaceOrientation:(long long)arg1;
- (void)prepareToRotateToInterfaceOrientation:(long long)arg1;
- (_Bool)orientationAffectsViewFrame;
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)animateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;
- (id)initWithViewController:(id)arg1;
- (id)init;

@end

@interface SURotationImageModifier : SUImageModifier
{
    float _degrees;
    long long _orientation;
}

@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) float degrees; // @synthesize degrees=_degrees;
- (struct CGRect)imageFrameForImage:(id)arg1 currentFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (void)drawBeforeImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (_Bool)isEqual:(id)arg1;

@end

@interface SUSubtitledButton : UIButton
{
    struct __CFDictionary *_subtitleContentLookup;
    UILabel *_subtitleView;
}

- (long long)_subtitleLineBreakMode;
- (id)_subtitleFont;
- (id)_subtitledContentForState:(unsigned long long)arg1;
- (void)_setupSubtitleView;
- (id)subtitleShadowColorForState:(unsigned long long)arg1;
- (struct CGRect)subtitleRectForContentRect:(struct CGRect)arg1;
@property(readonly, retain, nonatomic) UILabel *subtitleLabel;
- (id)subtitleForState:(unsigned long long)arg1;
- (id)subtitleColorForState:(unsigned long long)arg1;
- (void)setSubtitleShadowColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setSubtitleColor:(id)arg1 forState:(unsigned long long)arg2;
- (void)setSubtitle:(id)arg1 forState:(unsigned long long)arg2;
@property(readonly, retain, nonatomic) UIColor *currentSubtitleShadowColor;
@property(readonly, retain, nonatomic) UIColor *currentSubtitleColor;
@property(readonly, retain, nonatomic) NSString *currentSubtitle;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (void)configureFromScriptButton:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface SURoundedCornersButton : SUSubtitledButton
{
    UIBezierPath *_bezierPath;
    UIView *_highlightedBackgroundView;
    UIBezierPath *_shadowPath;
}

- (id)_highlightedBackgroundView;
- (void)setFrame:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SURoundedCornersMaskProvider : SUMaskProvider
{
    double _cornerRadius;
}

@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
- (struct CGPath *)copyPathForMaskWithSize:(struct CGSize)arg1;

@end

@interface SUSKUIStorePageViewController : SUViewController <SKUIIPhoneProductPageDelegate, SKStoreProductViewControllerDelegatePrivate>
{
    UIViewController *_activeChildViewController;
    SKUIIPhoneProductPageViewController *_iphoneProductPageViewController;
    SKStoreProductViewController *_remoteProductViewController;
    SKUIStorePageViewController *_storePageViewController;
}

- (void)_showStorePageWithPageDictionary:(id)arg1;
- (void)_showRemoteViewControllerWithPageDictionary:(id)arg1;
- (void)_showProductPageWithPageDictionary:(id)arg1;
- (void)_showIPhoneProductPageWithPage:(id)arg1 clientContext:(id)arg2;
- (void)_setActiveChildViewController:(id)arg1;
- (void)_loadClientContextWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)productViewController:(id)arg1 presentProductWithRequest:(id)arg2 animated:(_Bool)arg3;
- (void)productViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (_Bool)iPhoneProductPage:(id)arg1 shouldOpenURL:(id)arg2;
- (_Bool)iPhoneProductPage:(id)arg1 shouldOpenItem:(id)arg2;
- (void)loadView;
- (void)dismissAnimated:(_Bool)arg1;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
- (void)dealloc;
- (id)initWithSection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScalingFlipView : UIView
{
    UIView *_backView;
    id <SUScalingFlipViewDelegate> _delegate;
    long long _direction;
    double _duration;
    struct CGRect _fromFrame;
    UIView *_frontView;
    struct CGRect _toFrame;
}

@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) long long direction; // @synthesize direction=_direction;
@property(nonatomic) id <SUScalingFlipViewDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_transformAnimationWithStart:(struct CATransform3D)arg1 middle:(struct CATransform3D)arg2 end:(struct CATransform3D)arg3;
- (id)_positionAnimation;
- (id)_inputColorAnimation;
- (id)_frontLayerAnimation;
- (id)_fixedAnimationForAnimation:(id)arg1;
- (id)_backLayerAnimation;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)performFlip;
- (void)dealloc;
- (id)initWithFrontView:(id)arg1 backView:(id)arg2;

@end

@interface SUScriptObject : NSObject
{
    NSMutableArray *_eventListeners;
    SUScriptObjectInvocationBatch *_invocationBatch;
    NSLock *_lock;
    SUScriptNativeObject *_nativeObject;
    SUScriptObject *_parentScriptObject;
    NSMutableSet *_scriptObjects;
    unsigned int _checkOutWhenHidden:1;
    unsigned int _isVisible:1;
    NSString *_className;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (id)webScriptNameForKey:(const char *)arg1;
+ (_Bool)isSelectorExcludedFromWebScript:(SEL)arg1;
+ (_Bool)isKeyExcludedFromWebScript:(const char *)arg1;
- (void)finalizeForWebScript;
@property(readonly) NSMutableArray *scriptAttributeKeys;
- (id)_copyListenersForName:(id)arg1;
- (void)_checkOutAfterVisibilityChange;
@property(readonly, getter=_className) NSString *className;
- (id)stringRepresentation;
- (void)removeListenerForEventWithName:(id)arg1 callback:(id)arg2 useCapture:(_Bool)arg3;
- (_Bool)equals:(id)arg1;
- (void)addListenerForEventWithName:(id)arg1 callback:(id)arg2 useCapture:(_Bool)arg3;
@property(readonly, retain) WebFrame *webFrame;
- (id)viewControllerFactory;
- (void)unlock;
- (void)tearDownUserInterface;
@property(readonly) _Bool sourceIsTrusted;
- (void)setVisible:(_Bool)arg1;
@property SUScriptObject *parentScriptObject;
@property(retain) SUScriptNativeObject *nativeObject;
- (_Bool)scriptObjectIsCheckedIn:(id)arg1;
- (id)parentViewController;
- (id)newImageWithURL:(id)arg1 scale:(double)arg2;
- (id)newImageWithURL:(id)arg1;
- (void)lock;
- (void)loadImageWithURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)isVisible;
- (id)DOMElementWithElement:(id)arg1;
- (void)dispatchEvent:(id)arg1 forName:(id)arg2 synchronously:(_Bool)arg3;
- (void)dispatchEvent:(id)arg1 forName:(id)arg2;
- (id)copyObjectForScriptFromPoolWithClass:(Class)arg1;
@property(readonly) struct OpaqueJSContext *copyJavaScriptContext;
@property(readonly, retain) SUClientInterface *clientInterface;
- (void)checkOutScriptObjects:(id)arg1;
- (void)checkOutScriptObject:(id)arg1;
- (void)checkInScriptObjects:(id)arg1;
- (void)checkInScriptObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)willPerformBatchedInvocations;
- (id)webThreadMainThreadBatchProxy;
- (id)invocationBatch:(_Bool)arg1;
- (void)didPerformBatchedInvocations;
- (void)checkOutBatchTarget:(id)arg1;

@end

@interface SUScriptACClientAccessInfo : SUScriptObject
{
    SUScriptAppleAccountType *_accountType;
    NSMutableDictionary *_dictionary;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *accessKeyPurposeStatement;
@property(readonly) NSString *accessKeyFacebookPermissions;
@property(readonly) NSString *accessKeyFacebookAppID;
- (id)_className;
- (id)valueForAccessKey:(id)arg1;
- (void)setValue:(id)arg1 forAccessKey:(id)arg2;
@property(retain) SUScriptAppleAccountType *accountType;
@property(readonly) NSDictionary *accessInfoDictionary;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptAccessSecurity : NSObject
{
}

- (_Bool)_urls:(id)arg1 matchPatternStrings:(id)arg2;
- (_Bool)_url:(id)arg1 matchesExpressions:(id)arg2;
- (id)_copyResourceURLsForWebFrame:(id)arg1;
- (id)_accessDictionaryForType:(id)arg1;
- (_Bool)canAccessFacebookWithURL:(id)arg1 inFrame:(id)arg2 error:(id *)arg3;
- (_Bool)canAccessFacebookInFrame:(id)arg1 error:(id *)arg2;

@end

@interface SUScriptAccount : SUScriptObject
{
    SSAccount *_account;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_setServiceType:(long long)arg1 enabled:(id)arg2;
- (void)_commitChanges;
@property(retain) id socialEnabled;
@property(retain) id purchaseHistoryEnabled;
@property(retain) id lockerEnabled;
@property(copy) NSString *kind;
@property(copy) NSString *identifier;
@property(retain) NSNumber *dsID;
@property(copy) NSString *credits;
@property(readonly) NSString *ITunesPassSerialNumber;
@property(readonly, getter=isPrimaryLockerAccount) id primaryLockerAccount;
- (id)_className;
- (void)setSecureToken:(id)arg1;
- (_Bool)isSecureTokenValid;
- (_Bool)isPrimaryAccount;
@property(retain) SSAccount *account;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptAccountManager : NSObject
{
    NSMutableArray *_accounts;
    NSLock *_lock;
}

+ (void)endAccountManagerSessionForObject:(id)arg1;
+ (id)beginAccountManagerSessionForObject:(id)arg1;
- (void)_ntsReloadAccounts;
- (void)_dispatchEvent:(id)arg1 forName:(id)arg2;
- (void)_accountsChangedNotification:(id)arg1;
@property(readonly, retain) NSArray *accounts;
- (id)accountForDSID:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptViewController : SUScriptObject
{
    NSArray *_scriptToolbarItems;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (int)_transitionForString:(id)arg1;
- (void)_presentModalViewController:(id)arg1 withTransition:(id)arg2;
- (void)_dismissModalViewControllerWithTransition:(id)arg1;
- (void)_dismissModalViewControllerAnimated:(_Bool)arg1;
@property(readonly) NSString *modalPresentationStyleNameFullScreen;
@property(readonly) NSString *modalPresentationStyleNameFormSheet;
@property id wantsFullScreenLayout;
@property id usesBlurredBackground;
@property(retain) SUScriptViewController *transientViewController;
@property(retain) id topBackgroundColor;
@property(copy) id toolbarItems;
@property(readonly) SUScriptSplitViewController *splitViewController;
@property id showsLibraryButton;
@property(retain) SUScriptSection *section;
@property(retain) NSString *modalPresentationStyle;
@property(retain) SUScriptViewController *inputAccessoryViewController;
@property(retain) id backgroundColor;
@property(readonly) SUScriptViewController *presentingViewController;
@property(readonly) SUScriptPopOver *popOver;
@property(readonly) SUScriptNavigationItem *navigationItem;
@property(readonly) SUScriptNavigationController *navigationController;
@property(readonly) SUScriptViewController *modalViewController;
- (id)_className;
@property(readonly) NSString *contextDictionary;
- (void)setToolbarItems:(id)arg1 animated:(_Bool)arg2;
- (void)runScrollTest:(id)arg1 withDelta:(float)arg2 forIterations:(int)arg3;
- (void)presentModalViewController:(id)arg1 withTransition:(id)arg2;
- (void)dismissModalViewControllerWithTransition:(id)arg1;
- (void)dismissModalViewControllerAnimated:(_Bool)arg1;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addPassbookPassWithURL:(id)arg1;
- (void)tearDownUserInterface;
- (_Bool)equals:(id)arg1;
@property(retain, nonatomic) UIViewController *nativeViewController;
- (id)newNativeViewController;
- (id)newScriptColorWithValue:(id)arg1;
- (void)dealloc;
- (id)_parentViewControllerForVolumeViewController;
- (void)presentVolumeViewController:(id)arg1 animated:(id)arg2;
- (void)dismissVolumeViewControllerAnimated:(id)arg1;
@property(readonly) SUScriptViewController *volumeViewController;

@end

@interface SUScriptStorePageViewController : SUScriptViewController
{
    NSArray *_initialURLStrings;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (_Bool)copyURLStrings:(id *)arg1 forValue:(id)arg2;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_storePageViewController;
- (void)_setValue:(id)arg1 forScriptPropertyKey:(id)arg2;
- (id)_pathForWebArchiveWithIdentifier:(id)arg1 inDirectory:(id)arg2;
- (_Bool)_isSegmentedControlValid:(id)arg1;
- (id)_copyURLsFromURLStrings:(id)arg1;
- (void)_setURLs:(id)arg1;
@property(readonly) long long indicatorStyleWhite;
@property(readonly) long long indicatorStyleGray;
@property(retain) NSString *userInfo;
@property(retain) id URLs;
@property(retain) NSNumber *timeoutInterval;
@property id showsVerticalScrollIndicator;
@property id showsHorizontalScrollIndicator;
@property _Bool showsBackgroundShadow;
@property id shouldShowFormAccessory;
@property _Bool shouldInvalidateForLowMemory;
@property _Bool shouldLoadProgressively;
@property(retain) SUScriptSegmentedControl *segmentedControl;
@property _Bool scrollingEnabled;
@property(retain) id placeholderBackgroundStyle;
@property id loadsWhenHidden;
@property(retain) id loadingTextShadowColor;
@property(retain) id loadingTextColor;
@property long long loadingIndicatorStyle;
@property id inputViewObeysDOMFocus;
@property _Bool flashesScrollIndicators;
@property _Bool doubleTapEnabled;
@property id alwaysDispatchesScrollEvents;
@property(readonly) id rootObject;
- (id)_className;
- (void)setScrollEdgeInsetsWithTop:(double)arg1 left:(double)arg2 bottom:(double)arg3 right:(double)arg4;
- (id)saveWebArchiveWithIdentifier:(id)arg1 toDirectory:(id)arg2;
- (void)reloadWithCallback:(id)arg1;
- (id)loadWebArchiveWithIdentifier:(id)arg1 fromDirectory:(id)arg2;
- (void)setNativeViewController:(id)arg1;
- (id)newNativeViewController;
@property(readonly) NSArray *URLStrings;
- (void)applyURLStrings:(id)arg1 toViewController:(id)arg2;
- (void)dealloc;
- (id)initWithURLStrings:(id)arg1;
- (id)init;

@end

@interface SUScriptAccountPageViewController : SUScriptStorePageViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *styleNameViewAccount;
@property(readonly) NSString *styleNameSignUp;
@property(readonly) NSString *styleNameDefault;
@property(retain) NSString *style;
- (id)_className;
- (id)newNativeViewController;

@end

@interface SUScriptAction : SUScriptObject <NSCopying>
{
    NSString *_actionType;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(copy) NSString *actionType;
- (id)_className;
- (void)performAction;
- (void)dealloc;
- (id)initWithActionType:(id)arg1;

@end

@interface SUScriptActivity : SUScriptObject
{
    SUScriptFunction *_actionFunction;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_performActionFunctionWithItems:(id)arg1;
- (id)_nativeActivity;
@property(readonly) NSString *activityImageNameWishlistMusicStore;
@property(readonly) NSString *activityImageNameWishlistAppStore;
@property(readonly) NSString *activityImageNamePingMusicStore;
@property(readonly) NSString *activityImageNamePingAppStore;
@property(readonly) NSString *activityImageNameGiftMusicStore;
@property(readonly) NSString *activityImageNameGiftAppStore;
- (void)setActivityImageWithURL:(id)arg1 scale:(id)arg2;
- (void)setActivityImageWithName:(id)arg1;
@property(copy) NSString *activityType;
@property(copy) NSString *activityTitle;
@property(retain) WebScriptObject *actionFunction;
- (id)_className;
@property(readonly, nonatomic) SUActivity *nativeActivity;
- (void)dealloc;

@end

@interface SUScriptActivityItemProvider : SUScriptObject <SUActivityItemProviderDelegate>
{
    id _item;
    CDUnknownBlockType _itemBlock;
    SUScriptFunction *_itemFunction;
    int _loadState;
    NSString *_mimeType;
    SUActivityItemProvider *_nativeProvider;
    int _previewLoadState;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_newPlaceholderWithMIMEType:(id)arg1;
- (void)_finishPreviewWithImage:(id)arg1;
- (void)_finishItemWithItem:(id)arg1;
- (void)activityItemProvider:(id)arg1 provideItemUsingBlock:(CDUnknownBlockType)arg2;
@property(copy) NSString *status;
@property double progress;
@property(retain) WebScriptObject *itemFunction;
@property(readonly) NSString *MIMEType;
- (id)_className;
@property(readonly) NSString *activityType;
- (void)setPreviewImageWithURLString:(id)arg1;
- (void)setItem:(id)arg1;
- (id)activitySupportsMIMEType:(id)arg1;
@property(readonly) SUActivityItemProvider *nativeActivityItemProvider;
- (void)dealloc;
- (id)initWithMIMEType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptNativeObject : NSObject
{
    NSLock *_lock;
    id _nativeObject;
    SUScriptObject *_scriptObject;
    _Bool _weak;
}

+ (id)objectWithNativeObject:(id)arg1;
+ (void)makeReferencesToObjectWeak:(id)arg1;
+ (void)clearWeakReferencesToObject:(id)arg1;
- (void)_nativeObjectBecameWeakNotification:(id)arg1;
- (void)unlock;
- (void)setupNativeObject;
@property SUScriptObject *scriptObject;
@property(nonatomic) id object;
- (void)lock;
- (void)destroyNativeObject;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptActivityNativeObject : SUScriptNativeObject <SUActivityDelegate>
{
}

- (void)performActionForActivity:(id)arg1;
- (void)activity:(id)arg1 prepareWithActivityItems:(id)arg2;
- (_Bool)activity:(id)arg1 canPerformWithActivityItems:(id)arg2;
- (void)setupNativeObject;
- (void)destroyNativeObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptActivityViewController : SUScriptViewController
{
    NSArray *_applicationActivities;
    NSArray *_providers;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *activityTypeSaveToCameraRoll;
@property(readonly) NSString *activityTypePrint;
@property(readonly) NSString *activityTypePostToWeibo;
@property(readonly) NSString *activityTypePostToVimeo;
@property(readonly) NSString *activityTypePostToTwitter;
@property(readonly) NSString *activityTypePostToFlickr;
@property(readonly) NSString *activityTypePostToFacebook;
@property(readonly) NSString *activityTypeMessage;
@property(readonly) NSString *activityTypeMail;
@property(readonly) NSString *activityTypeCopyToPasteboard;
@property(readonly) NSString *activityTypeAssignToContact;
@property(readonly) NSString *activityTypeAddToReadingList;
@property(copy) id excludedActivityTypes;
- (id)_className;
- (void)setTitle:(id)arg1 forActivityType:(id)arg2;
- (id)newNativeViewController;
- (void)dealloc;
- (id)initWithScriptItemProviders:(id)arg1 applicationActivities:(id)arg2;

@end

@interface SUScriptAppleAccount : SUScriptObject
{
    ACAccount *_account;
    ACAccountStore *_accountStore;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *username;
@property(readonly) NSString *identifier;
@property(readonly) NSString *dsID;
@property(readonly) SUScriptAppleAccountCredential *credential;
- (id)_className;
@property(readonly) SUScriptAppleAccountType *accountType;
@property(readonly) NSString *accountDescription;
- (void)reload;
@property(readonly) ACAccountStore *nativeAccountStore;
@property(readonly) ACAccount *nativeAccount;
- (void)dealloc;
- (id)initWithACAccount:(id)arg1 accountStore:(id)arg2;

@end

@interface SUScriptAppleAccountCredential : SUScriptObject
{
    ACAccountCredential *_credential;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *oauthToken;
- (id)_className;
- (void)dealloc;
- (id)initWithACAccountCredential:(id)arg1;

@end

@interface SUScriptAppleAccountStore : SUScriptObject
{
    ACAccountStore *_accountStore;
    NSString *_effectiveBundleID;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_accountStore;
- (void)_accountStoreChangeNotification:(id)arg1;
@property(readonly) long long renewResultRenewed;
@property(readonly) long long renewResultRejected;
@property(readonly) long long renewResultFailed;
@property(readonly) NSString *accountTypeIdentifierTwitter;
@property(readonly) NSString *accountTypeIdentifierSinaWeibo;
@property(readonly) NSString *accountTypeIdentifierFacebook;
@property(readonly) NSString *accessPurposeWrite;
@property(readonly) NSString *accessPurposeReadWrite;
@property(readonly) NSString *accessPurposeRead;
- (void)setEffectiveBundleID:(id)arg1;
@property(readonly) NSString *effectiveBundleID;
@property(readonly) SUScriptAppleAccount *primaryAppleAccount;
- (id)_className;
- (void)requestAccessWithInfo:(id)arg1 completionHandler:(id)arg2;
- (void)renewCredentialsForAccount:(id)arg1 completionHandler:(id)arg2;
- (id)makeClientAccessInfoWithAccountType:(id)arg1;
- (id)accountTypeWithIdentifier:(id)arg1;
- (id)accountsWithAccountType:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptAppleAccountType : SUScriptObject
{
    ACAccountType *_accountType;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
@property(readonly, nonatomic) ACAccountType *nativeAccountType; // @synthesize nativeAccountType=_accountType;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *identifier;
- (id)_className;
@property(readonly) NSString *accountTypeDescription;
@property(readonly) id accessGranted;
- (void)dealloc;
- (id)initWithACAccountType:(id)arg1;

@end

@interface SUScriptApplication : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) long long statusBarStyleBlackTranslucent;
@property(readonly) long long statusBarStyleBlackOpaque;
@property(readonly) long long statusBarStyleDefault;
@property(readonly) long long statusBarAnimationSlide;
@property(readonly) long long statusBarAnimationNone;
@property(readonly) long long statusBarAnimationFade;
@property(readonly) NSNumber *exitStoreReasonPurchase;
@property(readonly) NSNumber *exitStoreReasonOther;
@property(readonly) NSNumber *exitStoreReasonGotoMainStore;
@property(readonly) NSNumber *exitStoreReasonFatalError;
@property(readonly) NSNumber *exitStoreReasonDownloadComplete;
@property(readonly) NSNumber *exitStoreReasonButton;
@property(readonly, getter=wasLaunchedFromLibrary) id launchedFromLibrary;
@property long long statusBarStyle;
@property id statusBarHidden;
@property(retain) id iconBadgeNumber;
@property(readonly) id screenWidth;
@property(readonly) id screenHeight;
@property(readonly, getter=isRunningInStoreDemoMode) id runningInStoreDemoMode;
@property(readonly, getter=isDelayingTerminate) id delayingTerminate;
- (void)showNewsstand;
- (void)setStatusBarStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)setStatusBarHidden:(_Bool)arg1 withAnimation:(long long)arg2;
- (void)scrollIconToVisible:(id)arg1 shouldSuspend:(_Bool)arg2;
- (void)returnToLibrary;
- (void)exitStoreWithReason:(id)arg1;
- (void)endDelayingTerminate;
- (void)beginDelayingTerminate;

@end

@interface SUScriptAudioPlayer : SUScriptObject
{
    SUPlayerStatus *_playerStatus;
    NSURL *_url;
    NSURL *_keyUrl;
    NSURL *_certificateUrl;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_audioPlayerStateChangeNotification:(id)arg1;
@property(readonly) long long playerStateUnplayed;
@property(readonly) long long playerStatePaused;
@property(readonly) long long playerStateFinished;
@property(readonly) long long playerStateFailed;
@property(readonly) long long playerStateBuffering;
@property(readonly) long long playerStateActive;
@property(readonly) NSString *nowPlayingKeyTitle;
@property(readonly) NSString *nowPlayingKeyPlaybackDuration;
@property(readonly) NSString *nowPlayingKeyPersistentID;
@property(readonly) NSString *nowPlayingKeyGenre;
@property(readonly) NSString *nowPlayingKeyDiscNumber;
@property(readonly) NSString *nowPlayingKeyDiscCount;
@property(readonly) NSString *nowPlayingKeyComposer;
@property(readonly) NSString *nowPlayingKeyArtwork;
@property(readonly) NSString *nowPlayingKeyArtist;
@property(readonly) NSString *nowPlayingKeyAlbumTrackNumber;
@property(readonly) NSString *nowPlayingKeyAlbumTrackCount;
@property(readonly) NSString *nowPlayingKeyAlbumTitle;
@property(readonly) NSString *URL;
@property(readonly) long long state;
@property(readonly) NSString *keyURL;
@property(readonly) double duration;
@property(readonly) double currentTime;
@property(readonly) NSString *certificateURL;
- (id)_className;
- (void)stop;
- (void)setValue:(id)arg1 forNowPlayingKey:(id)arg2;
- (void)pause;
- (void)play;
- (void)dealloc;
- (id)initWithURL:(id)arg1 keyURL:(id)arg2 certificateURL:(id)arg3;

@end

@interface SUScriptAuthenticationOperation : ISOperation
{
    NSNumber *_authenticatedDSID;
    SSMutableAuthenticationContext *_authenticationContext;
}

@property(retain) NSNumber *authenticatedDSID; // @synthesize authenticatedDSID=_authenticatedDSID;
- (void)setScriptOptions:(id)arg1;
- (void)sendCompletionCallback:(id)arg1;
- (void)run;
- (id)authenticatedAccountDSID;
- (void)dealloc;
- (id)initWithAccountIdentifier:(id)arg1;
- (id)init;

@end

@interface SUScriptButton : SUScriptObject <SUScriptNavigationItem>
{
    id _action;
    SUScriptCanvasContext *_canvas;
    _Bool _shouldPerformDefaultAction;
    WebScriptObject *_target;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
@property(nonatomic) _Bool shouldPerformDefaultAction; // @synthesize shouldPerformDefaultAction=_shouldPerformDefaultAction;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_systemItemString;
- (id)_nativeButton;
- (id)_boxedNativeButton;
- (id)_action;
@property(retain) WebScriptObject *target;
@property(retain) NSString *title;
@property long long tag;
@property(retain) NSString *subtitle;
@property(retain) NSString *style;
@property(readonly) id showingConfirmation;
- (void)showConfirmationWithTitle:(id)arg1 animated:(_Bool)arg2;
@property _Bool loading;
- (void)setImageWithURLString:(id)arg1 scale:(id)arg2;
- (void)setImageInsetsTop:(float)arg1 left:(float)arg2 bottom:(float)arg3 right:(float)arg4;
@property _Bool enabled;
@property(retain) SUScriptCanvasContext *canvas;
@property(retain) id action;
- (void)hideConfirmationAnimated:(_Bool)arg1;
- (id)_className;
- (id)buttonItem;
- (void)setNativeButton:(id)arg1;
@property(retain, nonatomic) UIImage *image;
- (void)performActionWithArguments:(id)arg1;
- (id)nativeButtonOfType:(int)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets imageEdgeInsets;
- (void)dealloc;
- (id)initWithSystemItemString:(id)arg1;
- (id)init;
- (id)_initSUScriptButton;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptButtonNativeObject : SUScriptNativeObject
{
    _Bool _loading;
    NSString *_subtitle;
    NSString *_styleString;
    NSString *_systemItemString;
}

+ (id)objectWithDefaultButtonForScriptButton:(id)arg1;
@property(readonly, nonatomic) NSString *systemItemString; // @synthesize systemItemString=_systemItemString;
@property(nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(retain, nonatomic) NSString *subtitle;
@property(readonly, nonatomic) NSString *styleString;
- (void)showConfirmationWithTitle:(id)arg1 animated:(_Bool)arg2;
- (void)setStyleFromString:(id)arg1;
@property(nonatomic) struct UIEdgeInsets imageInsets;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @dynamic enabled;
@property(readonly, nonatomic, getter=isShowingConfirmation) _Bool showingConfirmation;
@property(readonly, nonatomic, getter=isBackButton) _Bool backButton;
- (void)hideConfirmationAnimated:(_Bool)arg1;
- (void)disconnectButtonAction;
- (void)connectButtonAction;
- (void)configureFromScriptButtonNativeObject:(id)arg1;
@property(readonly, nonatomic) int buttonType;
- (void)buttonAction:(id)arg1;
- (void)dealloc;
- (id)initWithSystemItemString:(id)arg1;

// Remaining properties
@property(retain, nonatomic) UIImage *image; // @dynamic image;
@property(nonatomic) long long tag; // @dynamic tag;
@property(retain, nonatomic) NSString *title; // @dynamic title;

@end

@interface SUScriptCalloutView : SUScriptObject
{
    _Bool _isVisible;
    NSString *_subtitle;
    NSString *_title;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_setupCalloutBar;
- (void)_resetCalloutBar;
- (void)_reloadUntructedString;
- (void)_menuDidHideNotification:(id)arg1;
@property(copy) NSString *title;
@property(copy) NSString *subtitle;
- (id)_className;
- (void)setVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setTitle:(id)arg1 subtitle:(id)arg2;
- (void)setTargetX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptCanvasContext : SUScriptObject
{
    struct CGContext *_context;
    struct CGPath *_contextPath;
    id _fillStyle;
    long long _fillStyleType;
    double _height;
    double _scale;
    double _shadowBlur;
    SUScriptColor *_shadowColor;
    double _shadowOffsetX;
    double _shadowOffsetY;
    id _strokeStyle;
    long long _strokeStyleType;
    double _width;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_ntsApplyShadow;
@property(readonly) double width;
@property(retain) id strokeStyle;
@property double shadowOffsetY;
@property double shadowOffsetX;
@property(retain) id shadowColor;
@property double shadowBlur;
@property double miterLimit;
@property double lineWidth;
@property(retain) id lineJoin;
@property(retain) id lineCap;
@property(retain) NSString *globalCompositeOperation;
@property double globalAlpha;
@property(retain) id fillStyle;
@property(readonly) double height;
- (id)_className;
- (void)strokeRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (void)stroke;
- (void)translateWithX:(double)arg1 y:(double)arg2;
- (void)transformWithM11:(double)arg1 m12:(double)arg2 m21:(double)arg3 m22:(double)arg4 dx:(double)arg5 dy:(double)arg6;
- (void)setTransformWithM11:(double)arg1 m12:(double)arg2 m21:(double)arg3 m22:(double)arg4 dx:(double)arg5 dy:(double)arg6;
- (void)scaleWithX:(double)arg1 y:(double)arg2;
- (void)saveState;
- (void)rotateWithAngle:(double)arg1;
- (void)restoreState;
- (void)quadraticCurveToCPX:(double)arg1 cpy:(double)arg2 x:(double)arg3 y:(double)arg4;
- (void)moveToX:(double)arg1 y:(double)arg2;
- (id)makeRadialGradientWithX0:(double)arg1 y0:(double)arg2 r0:(double)arg3 x1:(double)arg4 y1:(double)arg5 r1:(double)arg6;
- (id)makeLinearGradientWithX0:(double)arg1 y0:(double)arg2 x1:(double)arg3 y1:(double)arg4;
- (void)lineToX:(double)arg1 y:(double)arg2;
- (_Bool)isPointInPathWithX:(double)arg1 y:(double)arg2;
- (void)fillRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (void)fill;
- (void)closePath;
- (void)clip;
- (void)clearRectWithX:(double)arg1 y:(double)arg2 width:(double)arg3 height:(double)arg4;
- (struct CGPath *)copyCanvasPath;
- (id)copyCanvasImage;
- (void)bezierCurveToCP1X:(double)arg1 cp1y:(double)arg2 cp2x:(double)arg3 cp2y:(double)arg4 x:(double)arg5 y:(double)arg6;
- (void)beginPath;
- (void)arcWithX:(double)arg1 y:(double)arg2 radius:(double)arg3 startAngle:(double)arg4 endAngle:(double)arg5 antiClockwise:(_Bool)arg6;
- (void)arcToX1:(double)arg1 y1:(double)arg2 x2:(double)arg3 y2:(double)arg4 radius:(double)arg5;
- (void)dealloc;
- (id)initWithWidth:(double)arg1 height:(double)arg2;

@end

@interface SUScriptFunction : NSObject
{
    WebScriptObject *_function;
    NSLock *_lock;
    SUScriptObject *_thisObject;
}

- (id)_copyAdjustedArgumentsForArguments:(id)arg1;
- (void)unlock;
@property __weak id thisObject;
@property(retain) WebScriptObject *scriptObject;
- (void)lock;
- (id)callSynchronouslyWithArguments:(id)arg1;
- (_Bool)callWithArguments:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)callWithArguments:(id)arg1;
- (void)dealloc;
- (id)initWithScriptObject:(id)arg1;
- (id)init;

@end

@interface SUScriptCanvasFunction : SUScriptFunction
{
    SUScriptCanvasResult *_lastResult;
}

- (id)copyResultForSize:(struct CGSize)arg1;
- (void)dealloc;

@end

@interface SUScriptCanvasResult : NSObject
{
    UIImage *_image;
    struct CGPath *_path;
}

@property(readonly, nonatomic) struct CGPath *canvasPath; // @synthesize canvasPath=_path;
@property(readonly, nonatomic) UIImage *canvasImage; // @synthesize canvasImage=_image;
- (void)dealloc;
- (id)_initWithCanvas:(id)arg1;

@end

@interface SUScriptColor : SUScriptObject
{
    UIColor *_color;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) double red;
@property(readonly) double green;
- (id)_className;
@property(readonly) double blue;
@property(readonly) double alpha;
- (void)setWhite:(double)arg1 alpha:(double)arg2;
- (void)setRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (void)setHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
- (id)stringRepresentation;
@property(readonly) UIColor *nativeColor;
- (struct CGColor *)copyCGColor;
- (void)dealloc;
- (id)initWithStyleString:(id)arg1;
- (id)initWithUIColor:(id)arg1;

@end

@interface SUScriptComposeReviewViewController : SUScriptViewController
{
}

+ (id)webScriptNameForKey:(const char *)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)setReview:(id)arg1;
@property(readonly) SUScriptReview *review;
- (id)_className;
- (id)newNativeViewController;
- (id)initWithScriptReview:(id)arg1 clientInterface:(id)arg2;
- (id)init;

@end

@interface SUScriptDateFormatter : SUScriptObject
{
    NSDateFormatter *_dateFormatter;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) unsigned long long dateFormatterShortStyle;
@property(readonly) unsigned long long dateFormatterNoStyle;
@property(readonly) unsigned long long dateFormatterMediumStyle;
@property(readonly) unsigned long long dateFormatterLongStyle;
@property(readonly) unsigned long long dateFormatterFullStyle;
@property unsigned long long timeStyle;
@property(copy) NSString *localeIdentifier;
@property unsigned long long dateStyle;
@property(copy) NSString *dateFormat;
- (id)_className;
- (id)stringFromDate:(id)arg1;
- (double)dateFromString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptDevice : SUScriptObject
{
    NSMutableArray *_scriptFunctions;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_removeScriptFunction:(id)arg1;
- (long long)_deviceCapabilityForString:(id)arg1;
- (void)_addScriptFunction:(id)arg1;
- (void)_autoDownloadKindsChangedNotification:(id)arg1;
- (void)_accessibilitySettingsChangedNotification:(id)arg1;
@property(readonly) NSString *UTIText;
@property(readonly) NSString *UTIMovie;
@property(readonly) NSString *UTIImage;
@property(readonly) NSString *restrictionYouTubeAllowed;
@property(readonly) NSString *restrictionVideoConferencingAllowed;
@property(readonly) NSString *restrictionTypeTelevision;
@property(readonly) NSString *restrictionTypeMovies;
@property(readonly) NSString *restrictionTypeApplications;
@property(readonly) NSString *restrictionScreenShotAllowed;
@property(readonly) NSString *restrictionSafariAllowed;
@property(readonly) NSString *restrictionMultiplayerGamingAllowed;
@property(readonly) NSString *restrictionITunesSocialAllowed;
@property(readonly) NSString *restrictionITunesAllowed;
@property(readonly) NSString *restrictionCellularHDUploadsAllowed;
@property(readonly) NSString *restrictionCameraAllowed;
@property(readonly) NSString *restrictionBookStoreEroticaAllowed;
@property(readonly) NSString *restrictionBookStoreAllowed;
@property(readonly) NSString *restrictionAppRemovalAllowed;
@property(readonly) NSString *restrictionAppInstallationAllowed;
@property(readonly) NSString *restrictionAllowVoiceDialing;
@property(readonly) NSString *restrictionAllowGlobalBackgroundFetchWhenRoaming;
@property(readonly) NSString *restrictionAccountModificationAllowed;
@property(readonly) long long restrictionBoolYes;
@property(readonly) long long restrictionBoolNoData;
@property(readonly) long long restrictionBoolNo;
@property(readonly) NSString *freeSpaceOptionEffortLevel;
@property(readonly) long long freeSpaceEffortLevelPromptUser;
@property(readonly) long long freeSpaceEffortLevelManualSpaceManagement;
@property(readonly) long long freeSpaceEffortLevelAutomaticOnly;
@property(readonly) long long freeSpaceEffortLevelDoNothing;
@property(readonly) NSString *orientationStringPortraitUpsideDown;
@property(readonly) NSString *orientationStringPortrait;
@property(readonly) NSString *orientationStringLandscapeRight;
@property(readonly) NSString *orientationStringLandscapeLeft;
@property(readonly) long long networkTypeWiFi;
@property(readonly) long long networkType9G;
@property(readonly) long long networkType8G;
@property(readonly) long long networkType7G;
@property(readonly) long long networkType6G;
@property(readonly) long long networkType5G;
@property(readonly) long long networkType4G;
@property(readonly) long long networkType3G;
@property(readonly) long long networkType2G;
@property(readonly) long long networkTypeNone;
@property(readonly) long long hardwareTypeWildcatK48;
@property(readonly) long long hardwareTypeUnknown;
@property(readonly) long long hardwareTypeIPodTouchN81a;
@property(readonly) long long hardwareTypeIPodTouchN81;
@property(readonly) long long hardwareTypeIPodTouchN18;
@property(readonly) long long hardwareTypeIPodTouchN72;
@property(readonly) long long hardwareTypeIPodTouchN45;
@property(readonly) long long hardwareTypeIPhoneN94;
@property(readonly) long long hardwareTypeIPhoneN92;
@property(readonly) long long hardwareTypeIPhoneN90;
@property(readonly) long long hardwareTypeIPhoneN88;
@property(readonly) long long hardwareTypeIPhoneN82;
@property(readonly) long long hardwareTypeIPhoneM68;
@property(readonly) long long hardwareTypeIPadK95;
@property(readonly) long long hardwareTypeIPadK94;
@property(readonly) long long hardwareTypeIPadK93a;
@property(readonly) long long hardwareTypeIPadK93;
@property(readonly) long long hardwareTypeIPadJ2a;
@property(readonly) long long hardwareTypeIPadJ2;
@property(readonly) long long hardwareTypeIPadJ1;
@property(readonly) long long hardwareTypeAppleTVK66;
@property(readonly) long long hardwareTypeAppleTVJ33;
@property(readonly) NSString *capabilityNameWiFi;
@property(readonly) NSString *capabilityNamePodcasts;
@property(readonly) NSString *capabilityNameHDVideo720p;
@property(readonly) NSString *capabilityNameHDVideo1080p;
@property(readonly) NSString *capabilityNameHDVideo;
@property(readonly) NSString *capabilityNameExplicitMedia;
@property(readonly) NSString *capabilityNameEmail;
@property(readonly) NSNumber *metricsPostFrequencyOverride;
@property(readonly) NSNumber *mainScreenScale;
@property(readonly) long long hardwareType;
@property(readonly) NSNumber *diskSpaceAvailable;
@property(readonly) unsigned int deviceTypeIdentifier;
- (id)_className;
@property(readonly) NSArray *automaticDownloadMediaTypes;
@property(readonly) long long activeNetworkType;
@property(readonly) id accessibilityUseDarkerKeyboard;
@property(readonly) SUScriptColor *accessibilitySingleColor;
@property(readonly) id accessibilitySingleColorSelected;
@property(readonly) id accessibilityReduceMotion;
@property(readonly) id accessibilityEnhanceBackgroundContrast;
@property(readonly) id accessibilityDarkenSystemColors;
@property(readonly) id accessibilityButtonShapesEnabled;
@property(readonly) id accessibilityBoldTextEnabled;
- (id)valueForRestriction:(id)arg1;
- (id)UTIForURL:(id)arg1;
- (void)setAutomaticDownloadKinds:(id)arg1 withCompletionHandler:(id)arg2;
- (id)restrictionLevelForType:(id)arg1;
- (void)requestFreeSpaceWithBytes:(id)arg1 options:(id)arg2 completionHandler:(id)arg3;
- (id)hasCapability:(id)arg1;
- (id)checkCapabilitiesPropertyListString:(id)arg1 showFailureDialog:(_Bool)arg2;
- (long long)boolValueForRestriction:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptDialog : SUScriptObject
{
    NSString *_body;
    id _buttons;
    NSNumber *_cancelButtonIndex;
    NSNumber *_destructiveButtonIndex;
    id _textFields;
    NSString *_title;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_nativeDialog;
- (void)_logSheetWarnings;
@property(retain) NSString *title;
@property(retain) id textFields;
@property(retain) NSNumber *destructiveButtonIndex;
@property(retain) NSNumber *cancelButtonIndex;
@property(retain) id buttons;
@property(retain) NSString *body;
- (id)_className;
- (void)showFromDOMElement:(id)arg1;
- (void)showSheetInPopOver:(id)arg1;
- (void)showSheet;
- (void)show;
- (void)dismiss;
- (void)dealloc;

@end

@interface SUScriptDialogActionSheet : UIActionSheet <SUScriptNativeObject>
{
}

- (_Bool)clearsWeakScriptReferences;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptDialogAlertView : UIAlertView <SUScriptNativeObject>
{
}

- (_Bool)clearsWeakScriptReferences;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptDialogNativeObject : SUScriptNativeObject <UIActionSheetDelegate, UIAlertViewDelegate>
{
}

- (void)_tearDownForDismissWithButtonIndex:(long long)arg1;
- (id)_newActionSheetForDialog:(id)arg1;
- (void)_addScriptButton:(id)arg1 toAlert:(id)arg2 atIndex:(long long)arg3;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)destroyNativeObject;
- (void)showSheetInViewController:(id)arg1;
- (void)showSheet;
- (void)showFromRect:(struct CGRect)arg1 inView:(id)arg2;
- (void)show;
- (void)dismiss;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptDictionary : NSObject
{
    NSDictionary *_dictionary;
}

+ (_Bool)isKeyExcludedFromWebScript:(const char *)arg1;
@property(readonly) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (id)attributeKeys;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface SUScriptDocumentInteractionController : SUScriptObject
{
    SUScriptFunction *_cancelFunction;
    SUScriptFunction *_openWithFunction;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_openWithFunction;
- (id)_nativeObject;
- (id)_nativeDocumentInteractionController;
- (id)_cancelFunction;
@property(copy) NSString *UTI;
@property(retain) WebScriptObject *openWithFunction;
@property(retain) WebScriptObject *cancelFunction;
- (id)_className;
- (void)showOpenWithMenuFromNavigationItem:(id)arg1;
- (void)showOpenWithMenuFromDOMElement:(id)arg1;
- (void)dismissMenuAnimated:(id)arg1;
- (void)dealloc;

@end

@interface SUScriptDocumentInteractionControllerNativeObject : SUScriptNativeObject <UIDocumentInteractionControllerDelegate>
{
    _Bool _didPickApplication;
    _Bool _isVisible;
    CDUnknownBlockType _presentationBlock;
    _Bool _redisplayAfterRotation;
}

- (_Bool)_isAffectedByWindowNotification:(id)arg1;
- (void)_windowWillRotateNotification:(id)arg1;
- (void)_windowDidRotateNotification:(id)arg1;
- (void)documentInteractionController:(id)arg1 willBeginSendingToApplication:(id)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(id)arg1;
- (void)documentInteractionControllerWillPresentOpenInMenu:(id)arg1;
- (void)setupNativeObject;
- (void)destroyNativeObject;
- (void)presentUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptDonationViewController : SUScriptViewController
{
    NSString *_charityIdentifier;
}

- (id)_className;
- (id)newNativeViewController;
- (id)initWithCharityIdentifier:(id)arg1;

@end

@interface SUScriptDownload : SUScriptObject
{
    ISUDownload *_download;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (id)phaseStringForDownload:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) float progress;
@property(readonly) NSString *phase;
- (id)_className;
@property(readonly) NSNumber *adamID;
- (void)dealloc;
- (id)initWithSSDownload:(id)arg1;
- (id)initWithISUDownload:(id)arg1;

@end

@interface SUScriptDownloadQueue : SUScriptObject <SSDownloadManagerObserver, SSPreorderManagerObserver>
{
    SUClientInterface *_clientInterface;
    SUDownloadManager *_downloadManager;
    SSPreorderManager *_preorderManager;
    NSString *_queueType;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (void)finalizeForWebScript;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_tearDownQueues;
- (void)_setupManagersWithClientInterface:(id)arg1 queueType:(id)arg2;
- (void)preorderManagerPreordersDidChange:(id)arg1;
- (void)downloadManagerDownloadsDidChange:(id)arg1;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
@property(readonly) NSString *queueType;
@property(readonly) NSArray *downloads;
- (id)_className;
- (void)checkQueue;
- (void)dealloc;
- (id)initWithQueueType:(id)arg1 clientInterface:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptDownloadsViewController : SUScriptViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_nativeViewController;
@property(retain) id buttons;
- (id)_className;
- (id)newNativeViewController;

@end

@interface SUScriptError : SUScriptObject
{
    NSError *_error;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *localizedRecoverySuggestion;
@property(readonly) NSString *localizedFailureReason;
@property(readonly) NSString *localizedDescription;
@property(readonly) NSString *domain;
@property(readonly) long long code;
- (id)_className;
- (void)dealloc;
- (id)initWithError:(id)arg1;

@end

@interface SUScriptEventListener : NSObject
{
    WebScriptObject *_callback;
    NSLock *_lock;
    NSString *_name;
    _Bool _useCapture;
}

@property _Bool shouldUseCapture; // @synthesize shouldUseCapture=_useCapture;
@property(copy) NSString *name; // @synthesize name=_name;
@property(retain) WebScriptObject *callback; // @synthesize callback=_callback;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptExecutionContext : NSObject <ISStoreURLOperationDelegate, SUWebViewDelegate>
{
    ISStoreURLOperation *_loadOperation;
    SUWebView *_webView;
}

- (id)_webView;
- (id)_newLoadOperation;
- (void)_cancelLoadOperation;
- (id)parentViewControllerForWebView:(id)arg1;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
@property(readonly, nonatomic) id windowScriptObject;
@property(readonly, nonatomic) struct OpaqueJSContext *globalExecutionContext;
- (void)evaluateScriptWithURLBagKey:(id)arg1;
- (void)evaluateScriptAtURL:(id)arg1;
- (void)callWebScriptMethod:(id)arg1 withArguments:(id)arg2;
- (_Bool)evaluateData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptFacebookFriend : SUScriptObject
{
    NSDictionary *_dictionary;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *name;
@property(readonly) NSString *identifier;
- (id)_className;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)initWithFriendDictionary:(id)arg1;

@end

@interface SUScriptFacebookLikeStatus : SUScriptObject
{
    NSDictionary *_dictionary;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly, getter=isLikedByMe) id likedByMe;
@property(readonly) unsigned long long globalLikeCount;
@property(readonly) NSArray *friends;
@property(readonly) unsigned long long friendLikeCount;
- (id)_className;
- (void)dealloc;
- (id)initWithLikeStatusDictionary:(id)arg1;

@end

@interface SUScriptFacebookRequest : SUScriptObject
{
    SLRequest *_request;
    long long _requestMethod;
    SUScriptAppleAccount *_scriptAccount;
    NSURL *_url;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_performRequest:(id)arg1 withScriptFunction:(id)arg2;
- (_Bool)_isRequestAllowed:(id *)arg1;
@property(readonly) long long requestMethodPost;
@property(readonly) long long requestMethodGet;
@property(readonly) long long requestMethodDelete;
- (void)setParameters:(id)arg1;
- (void)performRequestWithFunction:(id)arg1;
- (void)addParameterWithKey:(id)arg1 value:(id)arg2;
- (void)addMultiPartData:(id)arg1 withName:(id)arg2 type:(id)arg3;
@property(readonly, copy) NSURL *URL;
@property(retain) SUScriptAppleAccount *account;
@property(readonly) long long requestMethod;
- (id)_className;
- (void)dealloc;
- (id)initWithURL:(id)arg1 requestMethod:(id)arg2;

@end

@interface SUScriptFacebookResponse : SUScriptObject
{
    NSString *_bodyData;
    SUScriptError *_error;
    long long _statusCode;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) long long HTTPStatusCode;
@property(readonly) SUScriptError *error;
- (id)_className;
@property(readonly) NSString *bodyData;
- (void)dealloc;
- (id)initWithData:(id)arg1 response:(id)arg2 error:(id)arg3;

@end

@interface SUScriptFacebookSession : SUScriptObject
{
    SUScriptAppleAccount *_account;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) unsigned long long likeStatusFlagMe;
@property(readonly) unsigned long long likeStatusFlagGlobalCount;
@property(readonly) unsigned long long likeStatusFlagFriends;
@property(readonly) unsigned long long likeStatusFlagFriendCount;
@property(readonly) id hasAccounts;
- (id)_className;
- (void)unlikeURL:(id)arg1 completionFunction:(id)arg2;
- (void)likeURL:(id)arg1 completionFunction:(id)arg2;
- (void)fetchLikeStatusForURL:(id)arg1 flags:(id)arg2 completionFunction:(id)arg3;
- (void)dealloc;
- (id)initWithAppleAccount:(id)arg1;

@end

@interface SUScriptFairPlayContext : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
- (id)_accountViewController;
- (id)signData:(id)arg1;
- (void)close;
- (_Bool)isOpen;
- (id)_className;

@end

@interface SUScriptFamilySetupDelegate : NSObject <AAUIFamilySetupDelegate>
{
}

- (void)familySetupViewController:(id)arg1 didCompleteWithSuccess:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptFamilySetupViewController : SUScriptViewController
{
}

- (id)newNativeViewController;

@end

@interface SUScriptGiftViewController : SUScriptViewController
{
    long long _giftCategory;
    SKUIItem *_item;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly, nonatomic) long long giftCategoryMedia;
@property(readonly, nonatomic) long long giftCategoryBooks;
@property(readonly, nonatomic) long long giftCategoryApps;
- (id)_className;
- (void)setProductGiftItem:(id)arg1;
- (void)setCreditGiftStyle:(long long)arg1;
- (id)newNativeViewController;

@end

@interface SUScriptGradient : SUScriptObject
{
    SUGradient *_nativeGradient;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *type;
- (id)_className;
- (id)patternColorWithWidth:(double)arg1 height:(double)arg2 opaque:(_Bool)arg3;
- (void)addColorStopWithOffset:(double)arg1 color:(id)arg2;
- (id)copyNativeGradient;
- (void)dealloc;
- (id)initWithGradient:(id)arg1;
- (id)initRadialGraidentWithX0:(double)arg1 y0:(double)arg2 r0:(double)arg3 x1:(double)arg4 y1:(double)arg5 r1:(double)arg6;
- (id)initLinearGradientWithX0:(double)arg1 y0:(double)arg2 x1:(double)arg3 y1:(double)arg4;
- (id)init;

@end

@interface SUScriptInterface : SUScriptObject
{
    SUScriptAccountManager *_accountManager;
    SUScriptKeyValueStore *_applicationLocalStorage;
    SSAuthenticationContext *_authenticationContext;
    SUClientInterface *_clientInterface;
    id <SUScriptInterfaceDelegate> _delegate;
    SUScriptKeyValueStore *_deviceLocalStorage;
    NSMutableDictionary *_downloadQueues;
    WebFrame *_frame;
    SUScriptMediaLibrary *_mediaLibrary;
    SUScriptNotificationObserver *_notificationObserver;
    SUScriptPreviewOverlay *_previewOverlay;
    SUScriptPurchaseManager *_purchaseManager;
    SUScriptOperationDelegate *_scriptOperationDelegate;
    SUScriptWindowContext *_scriptWindowContext;
    id _threadSafeDelegate;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (long long)purchaseAnimationStyleFromString:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_copyDialogWithMessage:(id)arg1 title:(id)arg2 cancelButtonTitle:(id)arg3 okButtonTitle:(id)arg4;
- (void)_scriptUserInfoDidChangeNotification:(id)arg1;
- (void)_globalEventNotification:(id)arg1;
- (id)showPromptWithMessage:(id)arg1 initialValue:(id)arg2 title:(id)arg3 okButtonTitle:(id)arg4 cancelButtonTitle:(id)arg5;
- (_Bool)showConfirmWithMessage:(id)arg1 title:(id)arg2 okButtonTitle:(id)arg3 cancelButtonTitle:(id)arg4;
- (void)showAlertWithMessage:(id)arg1 title:(id)arg2 buttonTitle:(id)arg3;
- (_Bool)isExplicitContentDisabled;
- (id)hardwareType;
- (id)diskSpaceAvailable;
- (_Bool)canSendEmail;
- (_Bool)arePodcastsDisabled;
- (id)activeNetworkType;
- (void)selectTrackListItemWithIdentifier:(id)arg1;
- (void)handleTrackListWithPropertyListString:(id)arg1;
- (void)handleRootObjectWithPropertyListString:(id)arg1;
- (_Bool)checkCapabilitiesPropertyListString:(id)arg1 showFailureDialog:(_Bool)arg2;
- (id)systemVersion;
- (_Bool)shouldRestrictContentOfSystem:(id)arg1 level:(id)arg2;
- (_Bool)haveAccount;
- (id)accountName;
- (id)accountDSID;
@property(readonly) long long storeSheetTypeAskToBuy;
@property(readonly) long long storeSheetTypeDefault;
@property(readonly) NSString *askToBuyPrompt;
@property(readonly) long long storeSheetType;
- (void)setNavigationBar:(id)arg1;
- (void)setReferringUserAgent:(id)arg1;
- (void)setOrientation:(id)arg1;
- (void)setLoggingEnabled:(id)arg1;
- (void)setGlobalRootObject:(id)arg1;
@property(copy) NSString *cookie;
@property(readonly) id screenReaderRunning;
@property(readonly) SUScriptPreviewOverlay *previewOverlay;
- (id)requestInfo;
@property(readonly) NSString *referringUserAgent;
@property(readonly) NSNumber *orientation;
@property(readonly) SUScriptNavigationBar *navigationBar;
@property(readonly) id loggingEnabled;
@property(readonly) id globalRootObject;
@property(readonly) NSString *clientIdentifier;
- (id)_className;
@property(readonly) SUScriptKeyValueStore *applicationLocalStorage;
@property(readonly) id applicationAccessibilityEnabled;
- (void)accessibilityPostScreenChange;
- (void)accessibilityPostLayoutChange;
- (void)_accessibilityPostLayoutChange;
- (void)signOutPrimaryAccount;
- (void)setLibraryIdentifierWithType:(id)arg1 value:(id)arg2;
- (void)sendPostOfType:(id)arg1 withOptions:(id)arg2;
- (void)reportAProblemForIdentifier:(id)arg1;
- (void)registerNavBarButtonWithTitle:(id)arg1 side:(id)arg2 function:(id)arg3;
- (void)performPurchaseAnimationForIdentifier:(id)arg1 style:(id)arg2;
- (void)perfLog:(id)arg1;
- (id)machineGUID;
- (void)log:(id)arg1;
- (void)handleDialogPropertyListString:(id)arg1;
- (void)dispatchXEvent:(id)arg1;
- (void)dispatchGlobalEventWithName:(id)arg1 payload:(id)arg2;
- (id)parentViewController;
- (id)DOMElementWithElement:(id)arg1;
@property(retain) WebFrame *webFrame;
@property(readonly) id <SUScriptInterfaceDelegate> threadSafeDelegate;
@property(retain) SUScriptWindowContext *scriptWindowContext;
@property id <SUScriptInterfaceDelegate> delegate;
@property(retain) SUClientInterface *clientInterface;
@property(copy) SSAuthenticationContext *authenticationContext;
@property(readonly) SUScriptKeyValueStore *deviceLocalStorage;
- (struct OpaqueJSContext *)copyJavaScriptContext;
- (void)dealloc;
- (id)init;
- (void)finishedTest:(id)arg1 extraResults:(id)arg2;
- (void)startedTest:(id)arg1;
- (_Bool)isRunningTest;
- (_Bool)launchedToTest;
- (void)_getSoftwareApplicationWithCompletionFunction:(id)arg1 lookupBlock:(CDUnknownBlockType)arg2;
@property(readonly) NSArray *installedSoftwareApplications;
- (id)softwareApplicationWithBundleID:(id)arg1;
- (id)softwareApplicationWithAdamID:(id)arg1;
- (void)getSoftwareApplicationWithBundleID:(id)arg1 completionFunction:(id)arg2;
- (void)getSoftwareApplicationWithAdamID:(id)arg1 completionFunction:(id)arg2;
- (void)getInstalledSoftwareApplicationsWithCompletionFunction:(id)arg1;
- (id)makePopOverWithViewController:(id)arg1;
- (id)makeTextFieldWithStyle:(id)arg1 placeholder:(id)arg2 value:(id)arg3 width:(id)arg4;
- (id)systemItemUndo;
- (id)systemItemTrash;
- (id)systemItemStop;
- (id)systemItemSearch;
- (id)systemItemRewind;
- (id)systemItemReplay;
- (id)systemItemRefresh;
- (id)systemItemRedo;
- (id)systemItemPlay;
- (id)systemItemPause;
- (id)systemItemPageCurl;
- (id)systemItemOrganize;
- (id)systemItemFlexibleSpace;
- (id)systemItemFixedSpace;
- (id)systemItemFastForward;
- (id)systemItemEdit;
- (id)systemItemDone;
- (id)systemItemCompose;
- (id)systemItemCancel;
- (id)systemItemCamera;
- (id)systemItemBookmarks;
- (id)systemItemAdd;
- (id)systemItemAction;
- (id)makeButtonWithTitle:(id)arg1 action:(id)arg2;
- (id)makeButtonWithSystemItemString:(id)arg1 action:(id)arg2;
- (id)makeDialog;
- (long long)dialogDisplayCountForKey:(id)arg1;
@property(retain) SUScriptAccount *primaryLockerAccount;
@property(retain) SUScriptAccount *primaryAccount;
- (void)setAccounts:(id)arg1;
@property(readonly) NSArray *accounts;
- (id)makeAccount;
- (void)authenticateForAccount:(id)arg1 withOptions:(id)arg2;
- (id)accountForDSID:(id)arg1;
- (void)initAuthentication;
- (void)deallocAuthentication;
- (id)makeFamilySetupViewController;
- (id)getDownloadQueueWithQueueType:(id)arg1;
- (void)gotoStoreURL:(id)arg1 ofType:(id)arg2 withAuthentication:(_Bool)arg3 forceAuthentication:(_Bool)arg4;
- (void)gotoStoreURL:(id)arg1;
- (void)goBack;
- (void)dismissSheet;
@property(readonly) SUScriptViewController *viewController;
@property(readonly) SUScriptSectionsController *sectionsController;
- (void)selectSectionWithIdentifier:(id)arg1;
- (void)reloadFooterSection:(id)arg1 withURL:(id)arg2;
- (void)redeemCode:(id)arg1;
- (void)openURL:(id)arg1;
- (id)makeStorePageWithURLs:(id)arg1;
- (id)makeNavigationControllerWithRootViewController:(id)arg1;
- (void)dismissWindowsWithOptions:(id)arg1;
- (void)composeEmailWithSubject:(id)arg1 body:(id)arg2;
- (void)handleProtocolPropertyListString:(id)arg1;
@property(readonly) SUScriptProtocol *protocol;
- (void)retryAllRestoreDownloads;
- (void)pingURL:(id)arg1;
@property(readonly) SUScriptWindow *window;
- (void)setWindow:(id)arg1;
- (id)makeWindow;
- (id)makeNumberFormatterWithStyle:(id)arg1;
- (id)makeSplitViewController;
- (id)makeMenuViewController;
- (id)makeCanvasWithWidth:(id)arg1 height:(id)arg2;
- (id)makeColorWithWhite:(id)arg1 alpha:(id)arg2;
- (id)makeColorWithRed:(id)arg1 green:(id)arg2 blue:(id)arg3 alpha:(id)arg4;
- (id)makeColorWithHue:(id)arg1 saturation:(id)arg2 brightness:(id)arg3 alpha:(id)arg4;
- (id)makeRadialGradientWithX0:(double)arg1 y0:(double)arg2 r0:(double)arg3 x1:(double)arg4 y1:(double)arg5 r1:(double)arg6;
- (id)makeLinearGradientWithX0:(double)arg1 y0:(double)arg2 x1:(double)arg3 y1:(double)arg4;
- (void)setMediaLibrary:(id)arg1;
@property(readonly) SUScriptMediaLibrary *mediaLibrary;
- (void)deallocMediaLibrary;
- (void)addPurchaseWithInfo:(id)arg1;
- (void)addExternalDownloads:(id)arg1;
- (void)approveInPerson:(id)arg1;
- (void)addPurchaseWithInfo:(id)arg1 options:(id)arg2;
- (void)addExternalDownloadsFromManifestURL:(id)arg1;
- (void)addExternalDownloads:(id)arg1 options:(id)arg2;
- (id)makeReviewWithAdamID:(id)arg1;
- (void)composeReviewWithURL:(id)arg1 itemIdentifier:(id)arg2 type:(id)arg3;
- (id)makeComposeReviewViewControllerWithReview:(id)arg1;
@property(readonly) SUScriptPassbookLibrary *passbookLibrary;
@property(readonly) SUScriptApplication *application;
- (id)makeVolumeViewController;
- (id)makeSegmentedControl;
- (id)makeURLRequestWithURLs:(id)arg1 timeoutInterval:(id)arg2;
- (id)makeReportAProblemViewControllerWithAdamID:(id)arg1;
- (void)setDevice:(id)arg1;
@property(readonly) SUScriptDevice *device;
- (id)makeAccountPageWithURLs:(id)arg1;
- (id)makeDocumentInteractionController;
@property(readonly) NSString *actionTypeDismissSheet;
@property(readonly) NSString *actionTypeDismissWindows;
@property(readonly) NSString *actionTypeReturnToLibrary;
- (id)makeScriptActionWithType:(id)arg1;
- (id)makeDateFormatter;
@property(readonly) SUScriptPurchaseManager *purchaseManager;
- (id)makeTweetComposeViewController;
- (id)makeMediaPlayerItemWithProperties:(id)arg1;
- (void)showMediaPreviewWithURLString:(id)arg1;
- (void)showMediaPlayerWithURLString:(id)arg1 orientation:(id)arg2 title:(id)arg3 subtitle:(id)arg4 bookmarkID:(id)arg5 duration:(id)arg6 type:(id)arg7 imageURL:(id)arg8;
- (id)makeMediaPlayerViewControllerWithMediaPlayerItem:(id)arg1;
- (id)getAudioPlayerForURL:(id)arg1 keyURL:(id)arg2 certificateURL:(id)arg3;
- (id)activeAudioPlayers;
- (id)makeActivityViewControllerWithProviders:(id)arg1 activities:(id)arg2;
- (id)makeFacebookRequestWithURL:(id)arg1 requestMethod:(id)arg2;
- (id)makeActivity;
@property(readonly) SUScriptAppleAccountStore *appleAccountStore;
- (id)makeActivityItemProviderWithMIMEType:(id)arg1;
- (id)makeLookupRequest;
- (id)makeFacebookSessionWithAccount:(id)arg1;
- (id)makeCalloutView;
@property(readonly) SUScriptFairPlayContext *accountCreationSecureContext;
- (id)makeGiftViewController;
- (id)makeRedeemViewController;
- (id)makeDonationViewControllerWithCharityIdentifier:(id)arg1;
- (id)makeStoreSheetViewController;

@end

@interface SUScriptKeyValueStore : SUScriptObject
{
    NSString *_domain;
    SSKeyValueStore *_keyValueStore;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (void)_popStoreWithDomain:(id)arg1;
+ (id)_checkOutStoreWithDomain:(id)arg1;
- (id)_className;
- (id)valueForKey:(id)arg1;
- (void)setValueForKey:(id)arg1 value:(id)arg2;
- (void)removeValueForKey:(id)arg1;
- (void)removeAllValues;
- (void)getValueForKey:(id)arg1 usingFunction:(id)arg2;
- (void)dealloc;
- (id)initWithDomain:(id)arg1;

@end

@interface SUScriptLookupRequest : SUScriptObject
{
    SSLookupRequest *_request;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) long long localizationStyleServer;
@property(readonly) long long localizationStyleDevice;
@property long long localizationStyle;
@property(copy) NSString *keyProfile;
@property(retain) id authenticatesIfNeeded;
- (id)_className;
- (id)valueForRequestParameter:(id)arg1;
- (void)startWithLookupFunction:(id)arg1;
- (void)setValue:(id)arg1 forRequestParameter:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptMediaItem : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)scriptMediaTypeForNativeMediaType:(unsigned long long)arg1;
+ (unsigned long long)nativeMediaTypesForScriptMediaTypes:(id)arg1;
+ (id)copyScriptMediaTypesForNativeMediaTypes:(unsigned long long)arg1;
- (id)_className;
- (id)valueForProperty:(id)arg1;
- (id)imageURLWithWidth:(id)arg1 height:(id)arg2;
@property(readonly, nonatomic) MPMediaItem *nativeItem;

@end

@interface SUScriptMediaItemCollection : SUScriptObject
{
    NSArray *_items;
    SUScriptMediaItem *_representativeItem;
    _Bool _watchingLibrary;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_beginWatchingLibraryIfNecessary;
- (void)_libraryChangedNotification:(id)arg1;
@property(readonly) SUScriptMediaItem *representativeItem;
@property(readonly) NSArray *mediaTypes;
@property(readonly) NSArray *items;
@property(readonly) long long count;
- (id)_className;
@property(readonly, nonatomic) MPMediaItemCollection *nativeCollection;
- (void)dealloc;
- (id)initWithItems:(id)arg1;

@end

@interface SUScriptMediaLibrary : SUScriptObject
{
    NSMutableArray *_musicPlayers;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_launchMusicAppAfterPlayback:(id)arg1 firstItem:(id)arg2;
- (void)_launchMusicApp;
- (_Bool)_isRestricted;
- (void)_connectNativeObject;
@property(readonly) NSString *queryPresetVideoPodcasts;
@property(readonly) NSString *queryPresetTVShows;
@property(readonly) NSString *queryPresetSongs;
@property(readonly) NSString *queryPresetPodcasts;
@property(readonly) NSString *queryPresetPlaylists;
@property(readonly) NSString *queryPresetMusicVideos;
@property(readonly) NSString *queryPresetMovies;
@property(readonly) NSString *queryPresetGenres;
@property(readonly) NSString *queryPresetComposers;
@property(readonly) NSString *queryPresetCompilations;
@property(readonly) NSString *queryPresetAudiobooks;
@property(readonly) NSString *queryPresetArtists;
@property(readonly) NSString *queryPresetAlbums;
@property(readonly) NSString *playerTypeIPod;
@property(readonly) NSString *playerTypeApplication;
@property(readonly) NSString *mediaTypeVideoPodcast;
@property(readonly) NSString *mediaTypeTVShow;
@property(readonly) NSString *mediaTypePodcast;
@property(readonly) NSString *mediaTypeMusicVideo;
@property(readonly) NSString *mediaTypeMusic;
@property(readonly) NSString *mediaTypeMovie;
@property(readonly) NSString *mediaTypeAudiobook;
@property(readonly) NSString *mediaTypeAnyVideo;
@property(readonly) NSString *mediaTypeAnyAudio;
@property(readonly) NSString *mediaTypeAny;
@property(readonly) NSString *itemPropertyTrackNumber;
@property(readonly) NSString *itemPropertyTrackCount;
@property(readonly) NSString *itemPropertyTitle;
@property(readonly) NSString *itemPropertyStoreID;
@property(readonly) NSString *itemPropertySkipCount;
@property(readonly) NSString *itemPropertyRating;
@property(readonly) NSString *itemPropertyPodcastTitle;
@property(readonly) NSString *itemPropertyPlaybackDuration;
@property(readonly) NSString *itemPropertyPlayCount;
@property(readonly) NSString *itemPropertyPersistentID;
@property(readonly) NSString *itemPropertyMediaType;
@property(readonly) NSString *itemPropertyLyrics;
@property(readonly) NSString *itemPropertyLastPlayedDate;
@property(readonly) NSString *itemPropertyIsRental;
@property(readonly) NSString *itemPropertyIsHD;
@property(readonly) NSString *itemPropertyIsCompilation;
@property(readonly) NSString *itemPropertyGenre;
@property(readonly) NSString *itemPropertyDiscNumber;
@property(readonly) NSString *itemPropertyDiscCount;
@property(readonly) NSString *itemPropertyComposer;
@property(readonly) NSString *itemPropertyArtist;
@property(readonly) NSString *itemPropertyAlbumTitle;
@property(readonly) NSString *itemPropertyAlbumArtist;
- (id)_className;
- (id)playVideoWithAdamID:(id)arg1;
- (id)playSongsWithAdamIDs:(id)arg1;
- (id)playSongsInCollectionWithAdamID:(id)arg1 firstItemID:(id)arg2;
- (id)musicPlayerForType:(id)arg1;
- (id)makeQueryWithPreset:(id)arg1;
- (id)makePickerWithMediaTypes:(id)arg1;
- (id)makeCollectionWithItems:(id)arg1;
- (void)getProperties:(id)arg1 ofAdamIDs:(id)arg2 withCompletionFunction:(id)arg3;
- (id)containsAdamIDs:(id)arg1;
- (id)containsAdamID:(id)arg1;
- (void)dealloc;

@end

@interface SUScriptMediaLibraryNativeObject : SUScriptNativeObject
{
}

- (void)_libraryChangedNotification:(id)arg1;
- (void)setupNativeObject;
- (void)destroyNativeObject;

@end

@interface SUScriptMediaPickerController : SUScriptViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(retain) NSString *prompt;
@property _Bool allowsPickingMultipleItems;
@property(readonly) NSArray *mediaTypes;
- (id)_className;
- (void)setNativeViewController:(id)arg1;
- (id)newNativeViewController;
- (id)initWithMediaTypes:(id)arg1;

@end

@interface SUScriptMediaPickerEvent : SUScriptObject
{
    SUScriptMediaItemCollection *_collection;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) SUScriptMediaItemCollection *collection;
- (id)_className;
- (void)dealloc;
- (id)initWithCollection:(id)arg1;

@end

@interface SUScriptViewControllerNativeObject : SUScriptNativeObject <SKUIPassbookLoaderDelegate>
{
    SKUIPassbookLoader *_passbookLoader;
}

- (void)_reloadVisibility;
- (void)_loadPassbookPassWithURL:(id)arg1;
- (void)_parentViewControllerChangeNotification:(id)arg1;
- (id)presentationViewControllerForPassbookLoader:(id)arg1;
- (void)passbookLoaderDidFinish:(id)arg1;
- (void)setupNativeObject;
- (void)setScriptObject:(id)arg1;
- (void)destroyNativeObject;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptMediaPickerNativeObject : SUScriptViewControllerNativeObject <MPMediaPickerControllerDelegate>
{
}

- (void)mediaPickerDidCancel:(id)arg1;
- (void)mediaPicker:(id)arg1 didPickMediaItems:(id)arg2;
- (void)setupNativeObject;
- (void)destroyNativeObject;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptMediaPlayerItem : SUScriptObject
{
    SUMediaPlayerItem *_mediaItem;
}

+ (id)webScriptNameForKey:(const char *)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(copy) NSString *URL;
@property(copy) NSString *title;
@property(copy) NSString *subtitle;
@property(retain) NSNumber *playableDuration;
@property(copy) NSString *itemType;
@property(retain) NSNumber *itemIdentifier;
@property(copy) NSString *initialOrientation;
@property(copy) NSString *bookmarkIdentifier;
@property(copy) NSString *backgroundImageURL;
- (id)_className;
- (id)copyNativeMediaPlayerItem;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface SUScriptMediaPlayerViewController : SUScriptViewController
{
}

- (id)_className;
- (id)initWithMediaPlayerItem:(id)arg1;

@end

@interface SUScriptMediaPlaylist : SUScriptMediaItemCollection
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)scriptPlaylistAttributesForNativePlaylistAttributes:(unsigned long long)arg1;
+ (unsigned long long)nativePlaylistAttributesForScriptPlaylistAttributes:(id)arg1;
- (id)_className;
- (id)valueForProperty:(id)arg1;
@property(readonly, nonatomic) MPMediaPlaylist *nativePlaylist;

@end

@interface SUScriptMediaPropertyPredicate : SUScriptObject
{
    NSString *_comparisonType;
    NSString *_property;
    id _value;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_playlistAttributesForScriptArray:(id)arg1;
@property(readonly) id value;
@property(readonly) NSString *property;
@property(readonly) NSString *comparisonType;
- (id)_className;
@property(readonly, nonatomic) MPMediaPropertyPredicate *nativePredicate;
- (void)dealloc;
- (id)initWithProperty:(id)arg1 value:(id)arg2 comparisonType:(id)arg3;

@end

@interface SUScriptMediaQuery : SUScriptObject
{
    NSArray *_collections;
    NSArray *_filterPredicates;
    NSArray *_items;
    _Bool _watchingLibrary;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_resetCaches;
- (void)_beginWatchingLibraryIfNecessary;
- (void)_libraryChangedNotification:(id)arg1;
@property(readonly) NSString *groupingTypeTitle;
@property(readonly) NSString *groupingTypePodcastTitle;
@property(readonly) NSString *groupingTypePlaylist;
@property(readonly) NSString *groupingTypeGenre;
@property(readonly) NSString *groupingTypeComposer;
@property(readonly) NSString *groupingTypeArtist;
@property(readonly) NSString *groupingTypeAlbumArtist;
@property(readonly) NSString *groupingTypeAlbum;
@property(readonly) NSString *comparisonTypeEquals;
@property(readonly) NSString *comparisonTypeContains;
@property(copy) NSString *groupingType;
@property(copy) id filterPredicates;
@property(readonly) NSArray *items;
@property(readonly) NSArray *collections;
- (id)_className;
- (void)removeFilterPredicate:(id)arg1;
- (id)makeFilterPredicateWithProperty:(id)arg1 value:(id)arg2 comparisonType:(id)arg3;
- (id)canFilterByProperty:(id)arg1;
- (void)addFilterPredicate:(id)arg1;
@property(readonly, nonatomic) MPMediaQuery *nativeQuery;
- (void)dealloc;

@end

@interface SUScriptMenuItem : SUScriptObject
{
    _Bool _enabled;
    NSString *_title;
    id _userInfo;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_sendDidChange;
@property(retain) id userInfo;
@property(retain) NSString *title;
@property _Bool enabled;
- (id)_className;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptMenuViewController : SUScriptViewController
{
    SUScriptFunction *_action;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_viewController;
@property(retain) NSString *title;
@property(retain) NSNumber *selectedIndex;
@property(retain) id items;
@property(retain) WebScriptObject *action;
- (id)_className;
- (id)itemWithTitle:(id)arg1 userInfo:(id)arg2;
- (id)newNativeViewController;
- (void)dealloc;

@end

@interface SUScriptModalDialog : NSObject
{
    UIAlertView *_alert;
    long long _buttonIndex;
    ISDialog *_dialog;
}

+ (id)titleForURL:(id)arg1;
- (id)_copyResponseByRunningModal;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)copyResponseByRunningModal;
- (void)dealloc;
- (id)initWithDialog:(id)arg1;

@end

@interface SUScriptModalDialogResponse : NSObject
{
    long long _buttonIndex;
    NSString *_textFieldValue;
}

@property(retain, nonatomic) NSString *textFieldValue; // @synthesize textFieldValue=_textFieldValue;
@property(nonatomic) long long buttonIndex; // @synthesize buttonIndex=_buttonIndex;
- (void)dealloc;

@end

@interface SUScriptMusicPlayerController : SUScriptObject
{
    NSString *_playerType;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (id)scriptPlaybackStateForNativePlaybackState:(long long)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *shuffleModeSongs;
@property(readonly) NSString *shuffleModeOff;
@property(readonly) NSString *shuffleModeDefault;
@property(readonly) NSString *shuffleModeAlbums;
@property(readonly) NSString *repeatModeOne;
@property(readonly) NSString *repeatModeNone;
@property(readonly) NSString *repeatModeDefault;
@property(readonly) NSString *repeatModeAll;
@property(readonly) NSString *playbackStateStopped;
@property(readonly) NSString *playbackStateSeekingForward;
@property(readonly) NSString *playbackStateSeekingBackward;
@property(readonly) NSString *playbackStatePlaying;
@property(readonly) NSString *playbackStatePaused;
@property(readonly) NSString *playbackStateInterrupted;
@property(retain) NSNumber *volume;
@property(copy) NSString *shuffleMode;
@property(copy) NSString *repeatMode;
@property(readonly) NSString *playerType;
@property(readonly) NSString *playbackState;
@property(readonly) SUScriptMediaItem *nowPlayingItem;
@property(readonly) double currentPlaybackTime;
- (id)_className;
- (void)stop;
- (void)skipToPreviousItem;
- (void)skipToNextItem;
- (void)skipToBeginning;
- (void)setQueueWithQuery:(id)arg1;
- (void)setQueueWithItemCollection:(id)arg1;
- (void)play;
- (void)pause;
- (void)endSeeking;
- (void)beginSeekingForward;
- (void)beginSeekingBackward;
- (void)dealloc;
- (id)initWithPlayerType:(id)arg1;

@end

@interface SUScriptMusicPlayerNativeObject : SUScriptNativeObject
{
}

- (void)_volumeChangeNotification:(id)arg1;
- (void)_playbackStateChangeNotification:(id)arg1;
- (void)_nowPlayingChangeNotification:(id)arg1;
- (void)setupNativeObject;
- (void)destroyNativeObject;

@end

@interface SUScriptNativeUIBarButtonItem : SUScriptButtonNativeObject
{
    _Bool _isBackButton;
}

+ (id)objectWithDefaultButtonForScriptButton:(id)arg1;
- (id)systemItemString;
- (id)styleString;
- (void)showConfirmationWithTitle:(id)arg1 animated:(_Bool)arg2;
- (void)setupNativeObject;
- (void)setStyleFromString:(id)arg1;
- (void)setLoading:(_Bool)arg1;
- (_Bool)isShowingConfirmation;
- (_Bool)isLoading;
- (_Bool)isBackButton;
- (void)hideConfirmationAnimated:(_Bool)arg1;
- (void)disconnectButtonAction;
- (void)destroyNativeObject;
- (void)connectButtonAction;
- (int)buttonType;
- (id)title;
- (long long)tag;
- (void)setTitle:(id)arg1;
- (void)setTag:(long long)arg1;
- (void)setImageInsets:(struct UIEdgeInsets)arg1;
- (void)setImage:(id)arg1;
- (struct UIEdgeInsets)imageInsets;
- (id)image;

@end

@interface SUScriptNativeUIButton : SUScriptButtonNativeObject
{
}

+ (id)objectWithDefaultButtonForScriptButton:(id)arg1;
- (void)setupNativeObject;
- (void)disconnectButtonAction;
- (void)destroyNativeObject;
- (void)connectButtonAction;
- (id)title;
- (long long)tag;
- (void)setTitle:(id)arg1;
- (void)setTag:(long long)arg1;
- (void)setImageInsets:(struct UIEdgeInsets)arg1;
- (void)setImage:(id)arg1;
- (struct UIEdgeInsets)imageInsets;
- (id)image;

@end

@interface SUScriptNavigationBar : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_topNavigationItem;
- (id)_nativeNavigationBar;
- (id)_copyTopNavigationItem;
- (void)setRightButton:(id)arg1 animated:(_Bool)arg2;
@property(retain) SUScriptButton *rightButton;
- (void)setLeftButton:(id)arg1 animated:(_Bool)arg2;
@property(retain) SUScriptButton *leftButton;
- (id)buttonWithTitle:(id)arg1 style:(id)arg2 target:(id)arg3 action:(id)arg4;
@property(readonly) long long barStyleDefault;
@property(readonly) long long barStyleBlack;
@property(copy) id translucent;
@property(readonly) SUScriptNavigationItem *topNavigationItem;
- (void)setTopNavigationItem:(id)arg1;
- (void)setRightItem:(id)arg1 animated:(_Bool)arg2;
@property(retain) id <SUScriptNavigationItem> rightItem;
@property(retain) NSString *prompt;
- (void)setNavigationItems:(id)arg1;
- (void)setLeftItem:(id)arg1 animated:(_Bool)arg2;
@property(retain) id <SUScriptNavigationItem> leftItem;
@property long long barStyle;
- (void)setBackNavigationItem:(id)arg1;
@property(readonly) NSArray *navigationItems;
- (id)_className;
@property(readonly) SUScriptNavigationItem *backNavigationItem;
- (void)tearDownUserInterface;
- (id)initWithNativeNavigationBar:(id)arg1;
- (id)init;

@end

@interface SUScriptNavigationController : SUScriptViewController
{
    UINavigationController *_navController;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_navigationController;
- (id)_filteredViewControllers;
- (id)_copyNativeViewControllersFromScriptViewControllers:(id)arg1;
- (void)_setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)_pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_popViewControllerAnimated:(_Bool)arg1;
- (void)_popToRootViewControllerAnimated:(_Bool)arg1;
@property(retain) id viewControllers;
@property(readonly) SUScriptViewController *topViewController;
@property(copy) id toolbarHidden;
- (void)setTopViewController:(id)arg1;
@property _Bool navigationBarHidden;
- (void)setNavigationBar:(id)arg1;
@property(readonly) SUScriptNavigationBar *navigationBar;
- (id)_className;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)setToolbarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setNavigationBarHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)popViewControllerAnimated:(_Bool)arg1;
- (void)popToRootViewControllerAnimated:(_Bool)arg1;
- (void)willPerformBatchedInvocations;
- (void)didPerformBatchedInvocations;
- (id)newNativeViewController;
- (void)dealloc;
- (id)initWithRootScriptViewController:(id)arg1 clientInterface:(id)arg2;

@end

@interface SUScriptNavigationItem : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (id)_rootScriptObjectForObject:(id)arg1;
+ (void)_disconnectNavigationItem:(id)arg1 scriptObject:(id)arg2;
+ (void)disconnectNavigationItem:(id)arg1 forScriptObject:(id)arg2;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_copyScriptObjectForButtonItem:(id)arg1;
- (id)_copyScriptButtonForButtonItem:(id)arg1;
- (void)setTitleView:(id)arg1 animated:(_Bool)arg2;
- (void)setRightItems:(id)arg1 animated:(_Bool)arg2;
- (void)setRightItem:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftMostItem:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftItems:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftItem:(id)arg1 animated:(_Bool)arg2;
@property(retain) id titleView;
@property(retain) NSString *title;
- (void)setRightItems:(id)arg1;
@property(retain) id <SUScriptNavigationItem> rightItem;
@property(retain) NSString *prompt;
@property(retain) id <SUScriptNavigationItem> leftMostItem;
@property id leftItemsSupplementBackButton;
- (void)setLeftItems:(id)arg1;
@property(retain) id <SUScriptNavigationItem> leftItem;
- (void)setHidesBackButton:(_Bool)arg1 animated:(_Bool)arg2;
@property id hidesBackButton;
@property(copy) NSString *backButtonTitle;
- (id)rightItems;
- (id)leftItems;
- (id)_className;
- (void)tearDownUserInterface;
@property(readonly, nonatomic) UINavigationItem *nativeNavigationItem;
- (id)initWithNativeNavigationItem:(id)arg1;
- (id)init;

@end

@interface SUScriptNotificationObserver : NSObject
{
    NSLock *_lock;
    struct __CFSet *_receivers;
}

- (void)_enumerateReceiversUsingBlock:(CDUnknownBlockType)arg1;
- (void)_endObservingNotifications;
- (void)_dispatchEventWithDictionary:(id)arg1 forName:(id)arg2;
- (void)_dispatchEvent:(id)arg1 forName:(id)arg2;
- (void)_beginObservingNotifications;
- (void)_accessibilityPerformEscape;
- (void)_accessibilityPerformScrollRight;
- (void)_accessibilityPerformScrollLeft;
- (void)_accessibilityPerformScrollDown;
- (void)_accessibilityPerformScrollUp;
- (void)_softwareMapChangedNotification:(id)arg1;
- (void)_restrictionsChangedNotification:(id)arg1;
- (void)_purchaseRequestDidSucceedNotification:(id)arg1;
- (void)_networkTypeChangedNotification:(id)arg1;
- (void)_memoryWarningNotification:(id)arg1;
- (void)_audioSessionsChangedNotification:(id)arg1;
- (void)removeEventReceiver:(id)arg1;
- (void)addEventReceiver:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptNumberFormatter : SUScriptObject
{
    NSNumberFormatter *_numberFormatter;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(retain) NSString *style;
@property(retain) NSString *localeIdentifier;
- (id)stringFromNumber:(id)arg1;
- (id)numberFromString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptObjectBatchProxy : NSObject
{
    SUScriptObjectInvocationBatch *_invocationBatch;
    id _target;
}

@property id target; // @synthesize target=_target;
@property SUScriptObjectInvocationBatch *invocationBatch; // @synthesize invocationBatch=_invocationBatch;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;

@end

@interface SUScriptObjectInvocationBatch : NSObject
{
    NSMutableArray *_invocationQueue;
    NSLock *_lock;
    struct __CFDictionary *_proxies;
    SUScriptObject *_rootObject;
}

@property SUScriptObject *rootObject;
- (void)enqueueInvocation:(id)arg1;
- (void)_delayedDequeueInvocations;
- (void)dequeueInvocations;
- (id)copyQueuedInvocationsForObject:(id)arg1;
- (void)checkOutBatchTarget:(id)arg1;
- (id)batchProxyForObject:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptOperation : ISOperation
{
    id _options;
    ISOperation *_wrappedOperation;
}

+ (void)registerPostOperationClass:(Class)arg1 forType:(id)arg2;
+ (Class)postOperationClassForType:(id)arg1;
- (void)_sendCompletionCallback;
- (id)_scriptOptions;
- (void)setScriptOptions:(id)arg1;
- (void)run;
- (void)dealloc;
- (id)initWithPostType:(id)arg1 options:(id)arg2;
- (id)initWithOperation:(id)arg1 options:(id)arg2;

@end

@interface SUScriptOperationDelegate : NSObject <ISOperationDelegate>
{
    NSMutableArray *_operations;
    NSLock *_lock;
}

- (void)_removeOperation:(id)arg1;
- (void)operationFinished:(id)arg1;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)enqueueOperation:(id)arg1;
- (void)cancelAllOperations;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptPassbookLibrary : SUScriptObject
{
    PKPassLibrary *_passLibrary;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSArray *passes;
- (id)_className;
- (id)passWithPassTypeIdentifier:(id)arg1 serialNumber:(id)arg2;
- (void)dealloc;
- (id)initWithPassLibrary:(id)arg1;

@end

@interface SUScriptPassbookPass : SUScriptObject
{
    PKPass *_pass;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *serialNumber;
@property(readonly) NSString *passURL;
@property(readonly) NSString *passTypeIdentifier;
- (id)_className;
- (void)dealloc;
- (id)initWithPass:(id)arg1;

@end

@interface SUScriptPopOver : SUScriptObject
{
    UIViewController *_contentViewController;
    _Bool _ignoreDismiss;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_showAsModalViewController;
- (_Bool)_shouldDisplayAsPopover;
- (void)_setNativeViewController:(id)arg1;
- (void)_setIgnoresDismiss:(_Bool)arg1;
- (id)_presentablePopoverController;
- (id)_popOverController;
- (_Bool)_isViewControllerVisible;
- (id)_nativeViewController;
- (void)_dismissAnimated:(_Bool)arg1;
- (void)_viewControllerDidDismiss:(id)arg1;
- (void)_overlayWillShowNotification:(id)arg1;
@property(readonly) long long backgroundStyleShare;
@property(readonly) long long backgroundStyleDefault;
@property(readonly) long long backgroundStyleCream;
@property(readonly) long long backgroundStyleClear;
@property(readonly) long long backgroundStyleBlack;
@property(retain) SUScriptViewController *viewController;
@property double contentWidth;
@property double contentHeight;
@property long long backgroundStyle;
@property(readonly) SUScriptViewController *presentingViewController;
- (id)_className;
- (_Bool)showFromNavigationItem:(id)arg1;
- (_Bool)showFromElement:(id)arg1;
- (void)setContentWidth:(double)arg1 height:(double)arg2 animated:(_Bool)arg3;
- (void)dismissAnimated:(id)arg1;
- (void)tearDownUserInterface;
- (_Bool)isVisible;
@property(retain, nonatomic) UIPopoverController *nativePopoverController;
@property(readonly, nonatomic) UIPopoverController *presentablePopoverController;
@property(readonly) UIViewController *activeViewController;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptPopOverNativeObject : SUScriptNativeObject
{
    _Bool _redisplayAfterRotation;
    UIBarButtonItem *_sourceButtonItem;
    SUDOMElement *_sourceDOMElement;
}

@property(retain, nonatomic) SUDOMElement *sourceDOMElement; // @synthesize sourceDOMElement=_sourceDOMElement;
@property(retain, nonatomic) UIBarButtonItem *sourceButtonItem; // @synthesize sourceButtonItem=_sourceButtonItem;
- (_Bool)_isAffectedByWindowNotification:(id)arg1;
- (void)_windowWillRotateNotification:(id)arg1;
- (void)_windowDidRotateNotification:(id)arg1;
- (void)setupNativeObject;
- (void)destroyNativeObject;
- (void)dealloc;

@end

@interface SUScriptPreviewOverlay : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(copy) id width;
@property(copy) NSString *userInfo;
@property(copy) id top;
@property(copy) id right;
@property(copy) id height;
@property(readonly, getter=isVisible) id visible;
- (id)_className;
- (void)show:(id)arg1;
- (void)loadURLRequest:(id)arg1;
- (void)hide:(id)arg1;

@end

@interface SUScriptProtocol : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_webThreadValueForProtocolKey:(id)arg1;
- (void)_setValue:(id)arg1 forProtocolKey:(id)arg2;
- (void)_setProtocol:(id)arg1;
- (id)_copyProtocol;
@property _Bool shouldShowInOverlay;
@property(retain) SUScriptURLRequest *overlayBackgroundURLRequest;
@property _Bool excludeFromNavigationHistory;
@property(retain) NSString *copyright;
@property(retain) NSArray *allowedOrientations;
@property(readonly) NSString *protocolVersion;
@property(readonly) NSString *clientIdentifier;
- (id)_className;
- (void)setValuesFromDictionary:(id)arg1;

@end

@interface SUScriptPurchaseManager : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
- (void)_purchaseRequestsChangedNotification:(id)arg1;
- (id)_className;
- (id)isPurchasingItemIdentifier:(id)arg1;
- (id)isPurchasedItemIdentifier:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptRedeemViewController : SUScriptViewController
{
    long long _category;
    NSString *_initialCode;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly, nonatomic) long long redeemCategoryMedia;
@property(readonly, nonatomic) long long redeemCategoryBooks;
@property(readonly, nonatomic) long long redeemCategoryApps;
@property(copy, nonatomic) NSString *initialCode;
- (id)_className;
- (void)setRedeemStyle:(long long)arg1;
- (id)newNativeViewController;

@end

@interface SUScriptReportAProblemViewController : SUScriptViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)setAdamID:(id)arg1;
- (id)_className;
@property(readonly) NSNumber *adamID;
- (id)newNativeViewController;
- (id)initWithAdamID:(id)arg1 clientInterface:(id)arg2;
- (id)init;

@end

@interface SUScriptRequestPerformance : SUScriptObject
{
    ISURLRequestPerformance *_performance;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) double renderEndInterval;
@property(readonly) double renderBeginInterval;
@property(readonly) double receivedResponseInterval;
@property(readonly) NSString *JSONHeaders;
@property(readonly) double finishInterval;
- (id)_className;
- (void)dealloc;
- (id)initWithRequestPerformance:(id)arg1;

@end

@interface SUScriptReview : SUScriptObject
{
    NSURL *_infoURL;
    SKUIReviewMetadata *_review;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(retain) NSString *title;
@property(retain) NSNumber *rating;
@property(retain) id nicknameIsConfirmed;
@property(retain) NSString *nickname;
@property(retain) NSString *itemType;
@property(retain) NSString *infoURL;
@property(retain) NSString *body;
@property(readonly) id hasSavedDraft;
- (id)_className;
@property(readonly) NSNumber *adamID;
- (id)saveAsDraft;
- (id)restoreFromDraft;
- (id)removeDraft;
- (id)copyReview;
- (void)dealloc;
- (id)initWithReview:(id)arg1;
- (id)init;

@end

@interface SUScriptSection : SUScriptObject
{
    NSString *_badgeValue;
    NSString *_identifier;
    _Bool _transient;
    SUScriptViewController *_viewController;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) SUScriptViewController *viewController;
@property(readonly) _Bool transient;
@property(retain) NSString *badgeValue;
@property(readonly) NSString *identifier;
- (id)_className;
- (void)setBadgeValue:(id)arg1 animated:(_Bool)arg2 blink:(_Bool)arg3;
- (void)dealloc;
- (id)initWithNativeSection:(id)arg1;

@end

@interface SUScriptSectionsController : SUScriptObject
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_setSelectedIdentifier:(id)arg1;
- (id)_fixedSelectedIdentifier;
- (id)_copySectionWithIdentifier:(id)arg1;
- (void)_tabBarConfigurationChangedNotification:(id)arg1;
- (void)setRootViewController:(id)arg1 forSection:(id)arg2;
@property(retain) SUScriptSection *selectedSection;
@property(readonly) id sections;
- (id)_className;
- (id)sectionWithIdentifier:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUScriptSegmentedControl : SUScriptObject
{
    NSArray *_segments;
    long long _style;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_setRawSegments:(id)arg1;
- (void)_setColor:(id)arg1 forTitleTextAttribute:(id)arg2 controlState:(unsigned long long)arg3;
- (long long)_sectionsStyleForString:(id)arg1;
- (void)_reloadViewControllerPageSectionGroup;
- (void)_reloadSegmentedControl:(id)arg1 withSegments:(id)arg2;
- (id)_newSegmentsFromPageSectionGroup:(id)arg1;
- (id)_newPageSectionGroupWithSegments:(id)arg1;
- (id)_newNativeSegmentedControl;
@property(readonly, nonatomic) SUStorePageViewController *storePageViewController;
@property(readonly, nonatomic) NSArray *rawSegments;
@property(readonly, nonatomic) SUSegmentedControl *activeSegmentedControl;
@property(readonly) long long tintStyleDefault;
@property(readonly) long long tintStyleDark;
@property(readonly) NSNumber *noSegmentIndex;
@property(readonly) unsigned long long controlStateSelected;
@property(readonly) unsigned long long controlStateNormal;
@property(readonly) unsigned long long controlStateHighlighted;
@property(readonly) unsigned long long controlStateDisabled;
@property long long tintStyle;
@property(copy) id tintColor;
@property(retain) NSString *style;
@property(copy) id showsMoreListAutomatically;
@property(retain) NSNumber *selectedIndex;
@property(retain) id segments;
@property(copy) NSString *moreListTitle;
@property double maximumWidth;
@property long long maximumNumberOfItems;
@property(copy) NSString *cancelButtonTitle;
@property(readonly) NSNumber *selectedSegmentIndex;
- (id)_className;
- (id)titleShadowColorForControlState:(unsigned long long)arg1;
- (id)titleColorForControlState:(unsigned long long)arg1;
- (void)showPopoverController:(id)arg1 fromSegmentIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)showMoreListAnimated:(_Bool)arg1;
- (void)setTitleShadowColor:(id)arg1 forControlState:(unsigned long long)arg2;
- (void)setTitleColor:(id)arg1 forControlState:(unsigned long long)arg2;
- (id)makeSegmentWithTitle:(id)arg1 userInfo:(id)arg2;
- (void)hideMoreListAnimated:(_Bool)arg1;
@property(retain, nonatomic) SUSegmentedControl *nativeSegmentedControl;
- (id)newPageSectionGroup;
@property(readonly, nonatomic) long long nativeSelectedIndex;
- (void)dealloc;
- (id)initWithPageSectionGroup:(id)arg1;

@end

@interface SUScriptSegmentedControlItem : SUScriptObject
{
    SUScriptCanvasContext *_canvas;
    NSString *_identifier;
    UIImage *_image;
    NSString *_imageURLString;
    NSString *_title;
    id _userInfo;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_setImage:(id)arg1;
- (id)_segmentedControl;
- (void)_reloadUserInterface;
@property(retain) id userInfo;
@property(retain) NSString *title;
@property(retain) NSString *imageURL;
@property(retain) NSString *identifier;
@property(retain) SUScriptCanvasContext *canvas;
- (id)_className;
- (id)newPageSection;
- (void)dealloc;
- (id)initWithPageSection:(id)arg1;

@end

@interface SUScriptSegmentedControlNativeObject : SUScriptNativeObject
{
}

- (void)_valueChanged:(id)arg1;
- (void)setupNativeObject;
- (void)destroyNativeObject;

@end

@interface SUScriptSoftwareApplication : SUScriptObject
{
    ISSoftwareApplication *_application;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) NSString *softwareTypeNewsstand;
@property(readonly) long long launchResultSyncing;
@property(readonly) long long launchResultSuccess;
@property(readonly) long long launchResultSpringBoardUnavailable;
@property(readonly) long long launchResultSecurityPolicy;
@property(readonly) long long launchResultLockedOut;
@property(readonly) long long launchResultLocked;
@property(readonly) long long launchResultLaunchOrSuspendInProgress;
@property(readonly) long long launchResultInvalidArgument;
@property(readonly) long long launchResultApplicationNotFound;
@property(readonly) long long launchResultApplicationDisabled;
@property(readonly) NSString *environmentSandbox;
@property(readonly) NSString *environmentProduction;
@property(readonly) NSNumber *versionID;
@property(readonly) NSString *storeFrontID;
@property(readonly) NSString *softwareType;
@property(readonly) NSString *ratingSystem;
@property(readonly) NSNumber *ratingRank;
@property(readonly) NSNumber *dsID;
- (id)_className;
@property(readonly) NSString *bundleVersion;
@property(readonly) NSString *bundleShortVersionString;
@property(readonly) NSString *bundleID;
@property(readonly) NSNumber *adamID;
- (long long)launchWithURL:(id)arg1 options:(id)arg2 suspended:(id)arg3;
- (void)checkInAppPurchaseQueueWithAccountID:(id)arg1 environment:(id)arg2;
- (void)dealloc;
- (id)initWithApplication:(id)arg1;

@end

@interface SUScriptSplitViewController : SUScriptViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_splitViewController;
@property _Bool usesSharedPlaceholder;
@property(retain) NSString *title;
@property(retain) NSString *splitType;
@property(retain) NSNumber *splitShadowRadius;
@property(retain) NSNumber *splitShadowOpacity;
@property(retain) id splitShadowColor;
@property(retain) id splitPosition;
@property(retain) SUScriptViewController *secondViewController;
@property(retain) id minimumPaneSize;
@property(retain) SUScriptViewController *firstViewController;
- (id)_className;
- (id)newNativeViewController;

@end

@interface SUScriptStorePageNativeObject : SUScriptViewControllerNativeObject
{
}

- (id)_eventNameForNote:(id)arg1;
- (void)_webViewControllerNote:(id)arg1;
- (void)destroyNativeObject;
- (void)setupNativeObject;

@end

@interface SUScriptStoreSheetViewController : SUScriptViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(readonly) long long productPageStylePhone;
@property(readonly) long long productPageStylePad;
@property(readonly) long long productPageStyleAutomatic;
@property long long productPageStyle;
- (id)_className;
- (void)loadWithProductURL:(id)arg1;
- (void)loadWithProductParameters:(id)arg1;
- (id)newNativeViewController;

@end

@interface SUScriptTextField : SUScriptObject <SUScriptNavigationItem>
{
    SUScriptFunction *_shouldFocusFunction;
    NSString *_style;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (_Bool)_styleIsValid:(id)arg1;
- (id)_newTextField;
- (double)_defaultWidth;
- (id)_boxedNativeTextField;
- (id)_keyboardType;
- (id)_copyValue;
- (id)_copyPlaceholder;
- (id)_autocorrectionType;
- (id)_autocapitalizationType;
@property(retain) NSNumber *width;
@property(retain) NSString *value;
@property(readonly) NSString *style;
@property(retain) WebScriptObject *shouldFocusFunction;
@property(retain) NSString *placeholder;
@property(retain) NSString *keyboardType;
@property(retain) NSString *autocorrectionType;
@property(retain) NSString *autocapitalizationType;
- (id)_className;
- (_Bool)focus;
- (_Bool)blur;
- (id)buttonItem;
- (void)setNativeObjectWithTextField:(id)arg1;
- (void)setNativeObjectWithSearchBar:(id)arg1;
- (void)setNativeObjectWithBarButtonItem:(id)arg1;
@property(readonly, nonatomic) _Bool canBecomeFirstResponder;
- (void)dealloc;
- (id)initWithTextFieldStyle:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptTextFieldDelegate : NSObject <SUScriptTextFieldDelegate>
{
    NSHashTable *_delegates;
}

- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)removeDelegate:(id)arg1;
@property(readonly, nonatomic) long long numberOfDelegates;
- (void)addDelegate:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptTextFieldNativeObject : SUScriptNativeObject <SUScriptTextFieldDelegate>
{
    SUScriptTextFieldDelegate *_textFieldDelegate;
}

- (void)_setNativeObjectDelegate:(id)arg1;
- (void)_sendScriptDidChange;
- (id)_nativeObjectDelegate;
- (void)_textDidEndEditingOnExit:(id)arg1;
- (void)_textDidChange:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (_Bool)searchBarShouldBeginEditing:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)setupNativeObject;
- (void)destroyNativeObject;
@property(nonatomic) double width;
@property(copy, nonatomic) NSString *value;
@property(copy, nonatomic) NSString *placeholder;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUScriptTextFieldNativeObjectUIBarButtonItem : SUScriptTextFieldNativeObject
{
}

- (double)width;
- (id)value;
- (void)setWidth:(double)arg1;
- (void)setValue:(id)arg1;
- (void)setupNativeObject;
- (void)setPlaceholder:(id)arg1;
- (void)_setNativeObjectDelegate:(id)arg1;
- (void)setKeyboardType:(long long)arg1;
- (void)setAutocorrectionType:(long long)arg1;
- (void)setAutocapitalizationType:(long long)arg1;
- (_Bool)resignFirstResponder;
- (id)placeholder;
- (id)_nativeObjectDelegate;
- (long long)keyboardType;
- (void)destroyNativeObject;
- (_Bool)becomeFirstResponder;
- (long long)autocorrectionType;
- (long long)autocapitalizationType;
- (id)_textField;

@end

@interface SUScriptTextFieldNativeObjectUISearchBar : SUScriptTextFieldNativeObject
{
}

- (double)width;
- (id)value;
- (void)setWidth:(double)arg1;
- (void)setValue:(id)arg1;
- (void)setPlaceholder:(id)arg1;
- (void)_setNativeObjectDelegate:(id)arg1;
- (void)setKeyboardType:(long long)arg1;
- (void)setAutocorrectionType:(long long)arg1;
- (void)setAutocapitalizationType:(long long)arg1;
- (_Bool)resignFirstResponder;
- (id)placeholder;
- (id)_nativeObjectDelegate;
- (long long)keyboardType;
- (_Bool)becomeFirstResponder;
- (long long)autocorrectionType;
- (long long)autocapitalizationType;

@end

@interface SUScriptTextFieldNativeObjectUITextField : SUScriptTextFieldNativeObject
{
}

- (double)width;
- (id)value;
- (void)setWidth:(double)arg1;
- (void)setValue:(id)arg1;
- (void)setupNativeObject;
- (void)setPlaceholder:(id)arg1;
- (void)_setNativeObjectDelegate:(id)arg1;
- (void)setKeyboardType:(long long)arg1;
- (void)setAutocorrectionType:(long long)arg1;
- (void)setAutocapitalizationType:(long long)arg1;
- (_Bool)resignFirstResponder;
- (id)_nativeObjectDelegate;
- (long long)keyboardType;
- (void)destroyNativeObject;
- (_Bool)becomeFirstResponder;
- (long long)autocorrectionType;
- (long long)autocapitalizationType;

@end

@interface SUScriptTweetComposeViewController : SUScriptViewController
{
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)setNativeViewController:(id)arg1;
- (id)newNativeViewController;
@property(readonly) id canSendTweet;
- (id)_className;
- (void)setInitialText:(id)arg1;
- (id)removeAllURLs;
- (id)removeAllImages;
- (id)addURL:(id)arg1;
- (id)addImageWithURL:(id)arg1;

@end

@interface SUScriptTweetComposeViewControllerNativeObject : SUScriptViewControllerNativeObject
{
}

- (void)setupNativeObject;
- (void)destroyNativeObject;

@end

@interface SUScriptURLRequest : SUScriptObject
{
    SSMutableURLRequestProperties *_requestProperties;
}

+ (void)initialize;
+ (id)webScriptNameForKeyName:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
@property(copy) id URLs;
@property(copy) NSString *URLBagKey;
@property(copy) NSNumber *timeoutInterval;
- (id)_className;
- (id)copyNativeRequestProperties;
- (void)dealloc;
- (id)initWithNativeRequestProperties:(id)arg1;
- (id)init;

@end

@interface SUScriptVolumeViewController : SUScriptViewController
{
}

- (id)newNativeViewController;

@end

@interface SUScriptWindow : SUScriptObject
{
    SUScriptViewController *_backViewController;
    _Bool _canSwipeToDismiss;
    SUScriptWindowContext *_context;
    SUScriptViewController *_frontViewController;
    id _height;
    SUScriptCanvasFunction *_maskFunction;
    id _shadowOpacity;
    id _shadowRadius;
    SUScriptFunction *_shouldDismissFunction;
    id _width;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKeyName:(id)arg1;
+ (void)dismissWindowsWithOptions:(id)arg1;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (void)_registerForOverlayNotifications;
- (id)_overlayViewController:(_Bool)arg1;
- (id)_newOverlayTransitionWithOptions:(id)arg1;
- (id)_copySafeTransitionOptionsFromOptions:(id)arg1;
- (id)_backgroundViewController:(_Bool)arg1;
- (struct CGSize)_overlaySize;
- (void)_overlayDidShowNotification:(id)arg1;
- (void)_overlayDidFlipNotification:(id)arg1;
- (void)_overlayDidDismissNotification:(id)arg1;
@property(readonly) SUScriptViewController *windowParentViewController;
@property(retain) NSNumber *width;
@property(readonly) NSString *style;
@property(retain) WebScriptObject *shouldDismissFunction;
@property(retain) NSNumber *shadowRadius;
@property(retain) NSNumber *shadowOpacity;
@property(retain) SUScriptViewController *frontViewController;
@property(retain) WebScriptObject *maskFunction;
@property(retain) NSNumber *height;
@property(copy) id canSwipeToDismiss;
@property(retain) SUScriptViewController *backViewController;
- (id)_className;
- (void)show:(id)arg1;
- (void)flip:(id)arg1;
- (void)dismiss:(id)arg1;
@property(readonly) SUScriptWindowContext *context; // @synthesize context=_context;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (id)init;

@end

@interface SUScriptWindowContext : NSObject
{
    int _tag;
}

@property(readonly) int tag; // @synthesize tag=_tag;
- (id)init;

@end

@interface SUScrollRequest : NSObject
{
    _Bool _animated;
    CDUnknownBlockType _completionHandler;
    NSValue *_contentOffsetValue;
    NSValue *_frameValue;
}

@property(retain) NSValue *frameValue; // @synthesize frameValue=_frameValue;
@property(retain) NSValue *contentOffsetValue; // @synthesize contentOffsetValue=_contentOffsetValue;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic, getter=isAnimated) _Bool animated; // @synthesize animated=_animated;
- (void)dealloc;

@end

@interface SUScrollViewScroller : NSObject <UIScrollViewDelegate>
{
    NSObject<UIScrollViewDelegate> *_originalDelegate;
    NSMutableArray *_scrollRequests;
    UIScrollView *_scrollView;
}

@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void)_performScrollRectRequest:(id)arg1;
- (void)_performNextScrollRequest;
- (void)_performContentOffsetRequest:(id)arg1;
- (void)_finishActiveScrollRequest;
- (void)_addScrollRequest:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)scrollFrameToVisible:(struct CGRect)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)detachFromScrollView;
- (void)attachToScrollView:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUSearchBar : UISearchBar
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)_setupCancelButtonWithAppearance:(id)arg1;
- (void)removeFromSuperview;

@end

@interface SUSearchDisplayController : UISearchDisplayController
{
    _Bool _store_navigationBarHidingEnabled;
}

- (void)setNavigationBarHidingEnabled:(_Bool)arg1;
- (void)setActive:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)isNavigationBarHidingEnabled;
- (id)_createPopoverController;
- (void)_updateSearchBarMaskIfNecessary;
- (void)_noEventSetSearchFieldText:(id)arg1;

@end

@interface SUSearchFieldConfiguration : NSObject <NSCopying>
{
    NSString *_cancelString;
    SUClientInterface *_clientInterface;
    struct __CFDictionary *_hintURLs;
    long long _location;
    NSString *_placeholder;
    _Bool _rootViewOnly;
    struct __CFDictionary *_searchURLs;
    NSString *_userDefaultsKey;
    double _width;
    double _widthLandscape;
    double _widthPortrait;
}

+ (id)defaultConfigurationWithClientInterface:(id)arg1;
+ (id)defaultConfiguration;
@property(readonly, nonatomic) double width; // @synthesize width=_width;
@property(readonly, nonatomic) NSString *userDefaultsKey; // @synthesize userDefaultsKey=_userDefaultsKey;
@property(readonly, nonatomic, getter=isRootViewOnly) _Bool rootViewOnly; // @synthesize rootViewOnly=_rootViewOnly;
@property(readonly, nonatomic) NSString *placeholderString; // @synthesize placeholderString=_placeholder;
@property(readonly, nonatomic) long long location; // @synthesize location=_location;
@property(readonly, nonatomic) NSString *cancelString; // @synthesize cancelString=_cancelString;
- (id)_urlRequestPropertiesForURLBagKey:(id)arg1 networkType:(long long)arg2;
- (void)_setSearchURLsFromDictionary:(id)arg1;
- (void)_setHintURLsFromDictionary:(id)arg1;
- (struct __CFDictionary *)_newURLsDictionaryWithDictionary:(id)arg1;
- (id)_newQueryStringDictionaryForNetworkType:(long long)arg1;
- (long long)_locationForString:(id)arg1;
- (id)_initWithClientInterface:(id)arg1;
- (double)widthForOrientation:(long long)arg1;
- (id)URLRequestPropertiesWithBaseURL:(id)arg1 forNetworkType:(long long)arg2;
- (id)searchURLRequestPropertiesForNetworkType:(long long)arg1;
- (void)loadFromDictionary:(id)arg1;
- (id)hintsURLRequestPropertiesForNetworkType:(long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1 clientInterface:(id)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface SUSearchFieldController : NSObject <ISStoreURLOperationDelegate, SUScriptTextFieldDelegate, UISearchDisplayDelegate, UITableViewDataSource, UITableViewDelegate>
{
    SUClientInterface *_clientInterface;
    NSArray *_completions;
    ISStoreURLOperation *_completionsOperation;
    SUSearchFieldConfiguration *_configuration;
    UIControl *_dimmerView;
    UISearchBar *_searchBar;
    SUSearchDisplayController *_searchController;
    long long _searchFieldStyle;
    SUScriptTextFieldDelegate *_textFieldDelegate;
}

@property(nonatomic) long long searchFieldStyle; // @synthesize searchFieldStyle=_searchFieldStyle;
@property(copy, nonatomic) SUSearchFieldConfiguration *searchFieldConfiguration; // @synthesize searchFieldConfiguration=_configuration;
- (void)_tearDownDimmerView;
- (id)_targetViewController;
- (void)_showDimmerView;
- (void)_sendOnXEventWithTerm:(id)arg1 URL:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)_searchGroupForSearchKind:(id)arg1;
- (void)_saveSearchTermToDefaults:(id)arg1;
- (void)_resizeSearchBarForOrientation:(long long)arg1;
- (void)_reloadSearchBar;
- (void)_reloadCompletionsForSearchString:(id)arg1;
- (id)_newTransientViewController;
- (id)_newSearchDisplayControllerWithContentsController:(id)arg1;
- (id)_newSearchBar;
- (id)_newBlankStorePageViewController;
- (_Bool)_focusTransientViewController;
- (void)_fetchResultsForURLRequestProperties:(id)arg1;
- (void)_fetchResultsForTerm:(id)arg1 URL:(id)arg2;
- (void)_fetchCompletions;
- (id)_defaultSearchTerm;
- (void)_cancelCompletionsOperation;
- (id)_cancelButtonView;
- (void)_savedSearchTermChangedNotification:(id)arg1;
- (void)_dimmerViewAction:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchBarWillRemoveFromSuperview:(id)arg1;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (_Bool)searchBarShouldEndEditing:(id)arg1;
- (_Bool)searchBarShouldBeginEditing:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)scriptDidChangeTextForField:(id)arg1;
- (void)operationDidFinish:(id)arg1;
- (void)operation:(id)arg1 finishedWithOutput:(id)arg2;
- (void)operation:(id)arg1 failedWithError:(id)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1;
@property(readonly, nonatomic) UISearchBar *searchBar;
- (id)newRequestPropertiesWithSearchTerm:(id)arg1 kind:(id)arg2;
- (id)newRequestPropertiesWithSearchTerm:(id)arg1;
@property(readonly, nonatomic, getter=isActive) _Bool active;
- (void)handleSearchURL:(id)arg1 withSourceApplication:(id)arg2 sourceURL:(id)arg3;
- (void)dealloc;
- (id)initWithContentsController:(id)arg1 clientInterface:(id)arg2 style:(long long)arg3;
- (id)initWithContentsController:(id)arg1 clientInterface:(id)arg2;
- (id)initWithContentsController:(id)arg1 style:(long long)arg2;
- (id)initWithContentsController:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUSearchRootStorePageViewController : SUStorePageViewController
{
}

- (void)viewWillDisappear:(_Bool)arg1;
- (void)setSection:(id)arg1;
- (void)setParentViewController:(id)arg1;
- (void)resetNavigationItem:(id)arg1;
- (id)copyArchivableContext;
- (void)reloadCancelBarButtonItem;

@end

@interface SUSection : NSObject
{
    SUClientInterface *_clientInterface;
    NSMutableDictionary *_dictionary;
    UIImage *_image;
    UIImage *_moreListImage;
    SUSearchFieldConfiguration *_searchFieldConfiguration;
    NSMutableDictionary *_sectionButtonImages;
    UIImage *_selectedImage;
    UIImage *_selectedMoreListImage;
}

@property(retain, nonatomic) UIImage *selectedMoreListImage; // @synthesize selectedMoreListImage=_selectedMoreListImage;
@property(retain, nonatomic) UIImage *selectedImage; // @synthesize selectedImage=_selectedImage;
@property(retain, nonatomic) SUSearchFieldConfiguration *searchFieldConfiguration; // @synthesize searchFieldConfiguration=_searchFieldConfiguration;
@property(retain, nonatomic) UIImage *moreListImage; // @synthesize moreListImage=_moreListImage;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (long long)_typeForString:(id)arg1;
- (id)_sectionButtonsForKey:(id)arg1;
- (long long)_minimumNetworkTypeFromDictionary:(id)arg1;
- (id)_imageBaseName;
- (id)_colorForKey:(id)arg1;
- (id)valueForProperty:(id)arg1;
@property(readonly, nonatomic) NSString *urlBagKey;
@property(readonly, nonatomic) NSURL *url;
@property(readonly, nonatomic) long long type;
@property(readonly, nonatomic) NSString *title;
- (void)setSectionButtonImage:(id)arg1 forTag:(long long)arg2;
@property(readonly, nonatomic) NSArray *rightSectionButtons;
@property(readonly, nonatomic) NSString *partnerHeader;
@property(readonly, nonatomic) SUPageSectionGroup *pageSectionGroup;
@property(readonly, nonatomic) long long minimumNetworkType;
@property(readonly, nonatomic) UIColor *loadingTextShadowColor;
@property(readonly, nonatomic) UIColor *loadingTextColor;
@property(readonly, nonatomic) UIColor *loadingIndicatorColor;
- (_Bool)loadFromDictionary:(id)arg1 searchField:(id)arg2;
@property(readonly, nonatomic) NSArray *leftSectionButtons;
@property(readonly, nonatomic) NSArray *itemImages;
@property(readonly, nonatomic, getter=isUsingLocalArtwork) _Bool usingLocalArtwork;
@property(readonly, nonatomic, getter=isTransient) _Bool transient;
@property(readonly, nonatomic, getter=isDefaultSection) _Bool defaultSection;
- (id)imageForSectionButtonWithTag:(long long)arg1;
@property(readonly, nonatomic) NSString *identifier;
@property(readonly, nonatomic) long long defaultPNGStyle;
@property(readonly, nonatomic) SUGradient *backgroundGradient;
- (id)description;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1 sectionType:(long long)arg2 defaultPNGStyle:(long long)arg3;
- (id)initWithClientInterface:(id)arg1;

@end

@interface SUSectionButton : NSObject <NSCopying>
{
    NSString *_accessibilityTitle;
    NSString *_displayTitle;
    UIImage *_image;
    struct UIEdgeInsets _imageInsets;
    NSURL *_imageURL;
    float _imageURLScale;
    long long _tag;
}

@property(nonatomic) long long tag; // @synthesize tag=_tag;
@property(nonatomic) float imageURLScale; // @synthesize imageURLScale=_imageURLScale;
@property(copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(nonatomic) struct UIEdgeInsets imageInsets; // @synthesize imageInsets=_imageInsets;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *displayTitle; // @synthesize displayTitle=_displayTitle;
@property(copy, nonatomic) NSString *accessibilityTitle; // @synthesize accessibilityTitle=_accessibilityTitle;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)applyToBarButtonItem:(id)arg1;
- (void)dealloc;
- (id)initWithSectionButtonDictionary:(id)arg1;

@end

@interface SUSectionsResponse : NSObject
{
    _Bool _cacheable;
    SUClientInterface *_clientInterface;
    UIImage *_moreListImage;
    UIImage *_moreListSelectedImage;
    NSMutableDictionary *_rawResponseDictionary;
    long long _responseType;
    NSMutableDictionary *_sectionsCache;
    NSNumber *_shouldResetUserOrdering;
}

+ (void)setLastCachedVersionIdentifier:(id)arg1;
+ (id)sectionsCacheDirectory;
+ (id)lastCachedVersionIdentifier;
@property(readonly, nonatomic) long long responseType; // @synthesize responseType=_responseType;
@property(readonly, copy, nonatomic) NSDictionary *rawResponseDictionary; // @synthesize rawResponseDictionary=_rawResponseDictionary;
@property(retain, nonatomic) UIImage *moreListSelectedImage; // @synthesize moreListSelectedImage=_moreListSelectedImage;
@property(retain, nonatomic) UIImage *moreListImage; // @synthesize moreListImage=_moreListImage;
@property(nonatomic, getter=isCacheable) _Bool cacheable; // @synthesize cacheable=_cacheable;
- (void)_writeImage:(id)arg1 toCachePath:(id)arg2 forIdentifier:(id)arg3 variant:(id)arg4;
- (void)_writeButtonImagesForSection:(id)arg1 buttons:(id)arg2 cachePath:(id)arg3;
- (id)_newVariantStringForButton:(id)arg1;
- (id)_newSectionsFromDictionary:(id)arg1;
- (id)_newImageForIdentifier:(id)arg1 variant:(id)arg2 cacheDirectory:(id)arg3;
- (void)_loadButtonArtworkForSection:(id)arg1 buttons:(id)arg2 cachePath:(id)arg3;
- (_Bool)_loadArtworkFromCacheDirectory:(id)arg1;
- (void)_dropImageKeysFromDictionary:(id)arg1;
- (void)_dropImageKeysFromArray:(id)arg1;
- (void)_applyDefaultSearchFieldConfigurationsToSections:(id)arg1;
- (_Bool)writeToCacheDirectory:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSString *versionString;
@property(copy, nonatomic) NSString *storeFrontIdentifier;
@property(nonatomic) _Bool shouldResetUserOrdering;
@property(readonly, nonatomic) NSDictionary *sectionsDictionary;
@property(readonly, nonatomic) NSArray *sections;
@property(readonly, nonatomic) NSString *moreListTitle;
@property(readonly, nonatomic) SSItemImageCollection *moreListImageCollection;
- (void)dropEmbeddedImages;
@property(readonly, nonatomic) NSArray *allSections;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1 sectionsDictionary:(id)arg2 responseType:(long long)arg3;
- (id)initWithClientInterface:(id)arg1 cacheDirectory:(id)arg2;
- (id)init;

@end

@interface SUSegmentedControl : UIControl <SUMenuViewControllerDelegate, UIPopoverControllerDelegate>
{
    _Bool _autosizesText;
    NSString *_cancelButtonTitle;
    SUClientInterface *_clientInterface;
    _Bool _hidingPopoverForRotation;
    NSMutableArray *_items;
    long long _maximumNumberOfItems;
    double _maximumWidth;
    SUSimpleMenuViewController *_menuViewController;
    NSString *_moreListTitle;
    UIPopoverController *_popoverController;
    UISegmentedControl *_segmentedControl;
    long long _selectionIndex;
    _Bool _showsMoreListAutomatically;
    long long _tintStyle;
}

@property(nonatomic) long long tintStyle; // @synthesize tintStyle=_tintStyle;
@property(nonatomic) _Bool showsMoreListAutomatically; // @synthesize showsMoreListAutomatically=_showsMoreListAutomatically;
@property(copy, nonatomic) NSString *moreListTitle; // @synthesize moreListTitle=_moreListTitle;
@property(nonatomic) double maximumWidth; // @synthesize maximumWidth=_maximumWidth;
@property(nonatomic) long long maximumNumberOfItems; // @synthesize maximumNumberOfItems=_maximumNumberOfItems;
@property(retain, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
- (id)_titlesForMoreList;
- (void)_showMoreList:(_Bool)arg1;
- (void)_setValue:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (void)_reloadData;
- (void)_presentPopoverAnimated:(_Bool)arg1;
- (void)_destroyPopoverController;
- (void)_destroyMenuViewController;
- (void)_applyStyling;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (void)menuViewControllerDidCancel:(id)arg1;
- (void)_windowWillRotateNotification:(id)arg1;
- (void)_windowDidRotateNotification:(id)arg1;
- (void)_valueChangedEvent:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
@property(retain, nonatomic) UIColor *tintColor;
- (void)sizeToFitWithMinimumSegmentWidth:(double)arg1 maximumTotalWidth:(double)arg2;
- (void)sizeToFitUserInterfaceIdiom;
- (void)showPopover:(id)arg1 fromSegmentIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)showMoreList:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)setTitle:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
@property(nonatomic) long long selectedItemIndex;
@property(nonatomic) long long segmentedControlStyle;
@property(copy, nonatomic) NSArray *items;
- (void)setImage:(id)arg1 forSegmentAtIndex:(unsigned long long)arg2;
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 barMetrics:(long long)arg4;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
@property(readonly, nonatomic) long long selectedSegmentIndex;
@property(readonly, nonatomic) long long numberOfVisibleSegments;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUSegmentedControlAppearance : NSObject <NSCopying>
{
    SUControlAppearance *_backgroundImages;
    NSMutableDictionary *_dividerImages;
    UIImage *_optionsBackgroundImage;
    NSMutableDictionary *_titleTextAttributes;
}

+ (id)defaultOptionsAppearanceForTintStyle:(long long)arg1;
+ (id)defaultBarAppearance;
@property(retain, nonatomic) UIImage *optionsBackgroundImage; // @synthesize optionsBackgroundImage=_optionsBackgroundImage;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_newDividerImageKeyWithLeftState:(unsigned long long)arg1 rightState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)styleSegmentedControl:(id)arg1;
- (void)setDividerImage:(id)arg1 forLeftSegmentState:(unsigned long long)arg2 rightSegmentState:(unsigned long long)arg3 barMetrics:(long long)arg4;
- (void)setBackgroundImage:(id)arg1 forState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)dividerImageForLeftSegmentState:(unsigned long long)arg1 rightSegmentState:(unsigned long long)arg2 barMetrics:(long long)arg3;
- (id)backgroundImageForState:(unsigned long long)arg1 barMetrics:(long long)arg2;
- (void)dealloc;

@end

@interface SUSegmentedControlBar : UIView
{
    UIControl *_control;
    _UIBackdropView *_backdropView;
    UIView *_separatorView;
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithSegmentedControl:(id)arg1;

@end

@interface SUSetupMescalSessionOperation : ISOperation
{
    SSURLRequestProperties *_requestProperties;
    SUMescalSession *_session;
}

- (id)_setupSAPWithData:(id)arg1 error:(id *)arg2;
- (id)_setupSAPCertificate:(id *)arg1;
- (_Bool)_isMescalEnabled;
- (void)run;
@property(readonly) SUMescalSession *mescalSession;
- (void)dealloc;
- (id)initWithURLRequestProperties:(id)arg1;

@end

@interface SUShadow : NSObject <NSCoding, NSCopying>
{
    UIColor *_color;
    struct CGSize _offset;
    double _opacity;
    double _radius;
}

@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double opacity; // @synthesize opacity=_opacity;
@property(nonatomic) struct CGSize offset; // @synthesize offset=_offset;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
- (void)applyToLayer:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

@interface SUShortLinkCellConfiguration : SUMediaItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (id)copyDefaultContext;
- (_Bool)showContentRating;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)copyImageDataProvider;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUSimpleMenuViewController : SUMenuViewController
{
    NSString *_cancelButtonTitle;
    NSArray *_titles;
}

@property(copy, nonatomic) NSArray *titles; // @synthesize titles=_titles;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
- (void)_cancelAction:(id)arg1;
- (void)reloadContentSizeForViewInPopover;
- (id)titleOfMenuItemAtIndex:(long long)arg1;
- (long long)numberOfMenuItems;
- (_Bool)isMenuItemEnabledAtIndex:(long long)arg1;
- (void)dealloc;
- (id)initWithTitles:(id)arg1;

@end

@interface SUSimpleTableDataSource : SUTableDataSource
{
    Class _cellConfigurationClass;
    NSArray *_objects;
}

@property(retain, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(retain, nonatomic) Class cellConfigurationClass; // @synthesize cellConfigurationClass=_cellConfigurationClass;
- (void)reloadCellContexts;
- (long long)numberOfRowsInSection:(long long)arg1;
- (long long)numberOfSections;
- (void)configureCell:(id)arg1 forIndexPath:(id)arg2;
- (double)cellHeightForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)objectForIndexPath:(id)arg1;
- (void)dealloc;

@end

@interface SUSnapshotView : UIView
{
    UIView *_imageView;
}

- (void)_takeIOSurfaceSnapshotOfView:(id)arg1;
- (void)_takeCGSnapshotOfView:(id)arg1;
- (void)layoutSubviews;
- (void)snapshotView:(id)arg1 usingIOSurface:(_Bool)arg2;
- (void)dealloc;

@end

@interface SUSplitView : UIView
{
    UIView *_firstView;
    long long _layoutType;
    double _minimumPaneSize;
    UIView *_secondView;
    double _splitPosition;
    _Bool _vertical;
}

@property(nonatomic, getter=isVertical) _Bool vertical; // @synthesize vertical=_vertical;
@property(nonatomic) double splitPosition; // @synthesize splitPosition=_splitPosition;
@property(retain, nonatomic) UIView *secondView; // @synthesize secondView=_secondView;
@property(nonatomic) double minimumPaneSize; // @synthesize minimumPaneSize=_minimumPaneSize;
@property(nonatomic) long long layoutType; // @synthesize layoutType=_layoutType;
@property(retain, nonatomic) UIView *firstView; // @synthesize firstView=_firstView;
- (double)_minimumPaneSizeForLayout;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUSplitViewController : SUViewController
{
    NSURL *_displayedURL;
    UIViewController *_firstViewController;
    NSString *_mainTitle;
    SUGradient *_placeholderGradient;
    SUPlaceholderViewController *_placeholderViewController;
    UIViewController *_secondViewController;
    SUShadow *_splitShadow;
    SUSplitView *_splitView;
    SUStructuredPage *_structuredPage;
    _Bool _usesSharedPlaceholder;
    _Bool _viewIsReady;
}

+ (_Bool)isValidSplitTypeString:(id)arg1;
+ (_Bool)isValidSplitPositionValue:(id)arg1;
@property(nonatomic) _Bool usesSharedPlaceholder; // @synthesize usesSharedPlaceholder=_usesSharedPlaceholder;
@property(copy, nonatomic) SUShadow *splitShadow; // @synthesize splitShadow=_splitShadow;
@property(retain, nonatomic) UIViewController *secondViewController; // @synthesize secondViewController=_secondViewController;
@property(retain, nonatomic) NSString *mainTitle; // @synthesize mainTitle=_mainTitle;
@property(retain, nonatomic) UIViewController *firstViewController; // @synthesize firstViewController=_firstViewController;
@property(nonatomic) _Bool viewIsReady; // @synthesize viewIsReady=_viewIsReady;
@property(retain, nonatomic) NSURL *displayedURL; // @synthesize displayedURL=_displayedURL;
- (id)_splitView;
- (void)_setViewController:(id *)arg1 toValue:(id)arg2;
- (void)_setStructuredPage:(id)arg1;
- (void)_setPlaceholderVisible:(_Bool)arg1;
- (void)_reloadWithStorePageDictionary:(id)arg1;
- (void)_reloadViewController:(id)arg1 fromDictionary:(id)arg2;
- (void)_reloadView;
- (void)_reloadTitle;
- (void)_reloadLoadingState;
- (id)_newViewControllerFromDictionary:(id)arg1;
- (id)_newGradientWithValue:(id)arg1;
- (void)_navigationItemDidChangeNotification:(id)arg1;
- (void)_loadingDidChangeNotification:(id)arg1;
- (void)storePage:(id)arg1 finishedWithSuccess:(_Bool)arg2;
@property(nonatomic) double splitPosition;
@property(nonatomic, getter=isVertical) _Bool vertical;
@property(nonatomic) double minimumPaneSize;
@property(nonatomic) long long layoutType;
- (id)splitTypeString;
- (id)splitPositionString;
- (void)setSplitTypeString:(id)arg1;
- (void)setSplitPositionAndLayoutTypeFromValue:(id)arg1;
- (id)storePageProtocol;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
- (id)newRotationController;
- (_Bool)shouldExcludeFromNavigationHistory;
- (void)setLoading:(_Bool)arg1;
- (void)restoreArchivableContext:(id)arg1;
- (void)removeChildViewController:(id)arg1;
- (void)loadView;
- (_Bool)isLoaded;
- (id)copyScriptViewController;
- (id)copyChildViewControllersForReason:(long long)arg1;
- (id)copyArchivableContext;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)addChildViewController:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUSplitViewRotationController : SURotationController
{
    SURotationController *_firstRotationController;
    UIViewController *_firstViewController;
    SURotationController *_secondRotationController;
    UIViewController *_secondViewController;
}

- (id)_secondRotationController;
- (id)_firstRotationController;
- (void)prepareToRotateToInterfaceOrientation:(long long)arg1;
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)animateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;

@end

@interface SUStoreController : NSObject <SUClientDelegate, SUPurchaseManagerDelegate, SUTabBarControllerDelegate, UIApplicationDelegate, MFMailComposeViewControllerDelegate>
{
    SUClient *_client;
    SUSectionsResponse *_lastBackgroundSectionsResponse;
    SUSectionsResponse *_lastSectionsResponse;
    NSURL *_launchURL;
    ISOperation *_loadSectionsOperation;
    NSString *_localStoreFrontAtLastSuspend;
    id _locationObserver;
    NSArray *_overlayConfigurations;
    _Bool _reloadForStorefrontChangeAfterAccountSetup;
    _Bool _reloadSectionsOnNextLaunch;
    NSString *_synchedStoreFrontAtLastSuspend;
    SUTabBarController *_tabBarController;
    MFMailComposeViewController *_mailComposeViewController;
    NSDictionary *_storeFrontLanguages;
}

+ (void)setSharedInstance:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSURL *launchURL; // @synthesize launchURL=_launchURL;
- (void)presentMailComposeViewController:(id)arg1 animated:(_Bool)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (_Bool)isComposingEmail;
- (void)dismissMailComposeViewControllerAnimated:(_Bool)arg1;
- (void)composeEmailWithSubject:(id)arg1 body:(id)arg2;
- (void)composeEmailByRestoringAutosavedMessage;
- (_Bool)_showWildcatAccountViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_saveArchivedNavigationPath;
- (id)_resumableViewController;
- (void)_reloadWithSectionsResponse:(id)arg1;
- (void)_reloadOverlayConfigurations;
- (_Bool)_isAccountViewControllerVisible;
- (void)_handleSearchURL:(id)arg1;
- (void)_handleAccountURL:(id)arg1;
- (void)_defaultHandleApplicationURLRequestProperties:(id)arg1;
- (void)_cancelSuspendAfterDialogsDismissed;
- (void)_retrySectionsAfterNetworkTransition;
- (_Bool)_reloadForStorefrontChange;
- (void)_presentSectionFetchUI;
- (_Bool)_loadSectionsAllowingCache:(_Bool)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_handleSectionsLoadFailedWithError:(id)arg1;
- (void)_handleFinishedLoadSectionsOperation:(id)arg1;
- (void)_handleFinishedBackgroundLoadSectionsOperation:(id)arg1;
- (void)_cancelLoadSectionsOperation;
- (void)setupUI;
- (void)handleApplicationURL:(id)arg1;
- (void)tabBarController:(id)arg1 didEndCustomizingViewControllers:(id)arg2 changed:(_Bool)arg3;
- (void)purchaseManagerWillBeginUpdates:(id)arg1;
- (void)purchaseManagerDidEndUpdates:(id)arg1;
- (void)purchaseManager:(id)arg1 willAddPurchases:(id)arg2;
- (void)purchaseManager:(id)arg1 failedToAddPurchases:(id)arg2;
- (void)purchaseManager:(id)arg1 didAddPurchases:(id)arg2;
- (id)topViewControllerForClient:(id)arg1;
- (id)downloadQueueForClient:(id)arg1 downloadKinds:(id)arg2;
- (_Bool)client:(id)arg1 presentModalViewController:(id)arg2 animated:(_Bool)arg3;
- (_Bool)client:(id)arg1 presentAccountViewController:(id)arg2 animated:(_Bool)arg3;
- (_Bool)client:(id)arg1 openInternalURL:(id)arg2;
- (void)_storeFrontChangedNotification:(id)arg1;
- (void)_selectFooterSectionNotification:(id)arg1;
- (void)_mainThreadStoreFrontChangedNotification:(id)arg1;
- (void)_restrictionsChangedNotification:(id)arg1;
- (void)_reloadForNetworkTypeChange:(id)arg1;
- (void)_dialogDidFinishNotification:(id)arg1;
- (void)_bagDidLoadNotification:(id)arg1;
- (void)_accountControllerDisappearedNotification:(id)arg1;
- (id)newScriptInterface;
@property(readonly, nonatomic) UINavigationController *topNavigationController;
@property(readonly, nonatomic) SUTabBarController *tabBarController; // @synthesize tabBarController=_tabBarController;
- (id)storeContentLanguage;
@property(readonly, nonatomic) NSString *defaultPNGNameForSuspend;
- (void)tearDownUI;
- (_Bool)showDialogForCapabilities:(id)arg1 mismatches:(id)arg2;
- (_Bool)selectSectionWithIdentifier:(id)arg1;
- (_Bool)reloadSectionWithIdentifier:(id)arg1 url:(id)arg2;
- (_Bool)presentOverlayBackgroundViewController:(id)arg1;
- (void)presentExternalURLViewController:(id)arg1;
- (void)prepareForSuspend;
- (id)overlayConfigurationForStorePage:(id)arg1;
- (id)overlayBackgroundViewController;
- (_Bool)matchesClientApplication:(id)arg1;
- (_Bool)libraryContainsItemIdentifier:(unsigned long long)arg1;
@property(readonly, nonatomic, getter=isTabBarControllerLoaded) _Bool tabBarControllerLoaded;
@property(readonly, nonatomic, getter=isStoreEnabled) _Bool storeEnabled;
- (void)exitStoreWithReason:(long long)arg1;
- (void)exitStoreAfterDialogsDismiss;
- (void)endPurchaseBatch;
- (void)dismissOverlayBackgroundViewController;
- (double)defaultImageSnapshotExpiration;
- (id)copySuspendSettings;
- (void)connect;
- (void)cancelAllOperations;
- (void)beginPurchaseBatch;
- (_Bool)application:(id)arg1 handleOpenURL:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

@interface SUStorePageDataProvider : ISDataProvider
{
    SUClientInterface *_clientInterface;
    long long _outputType;
    ISPropertyListProvider *_propertyListDataProvider;
}

@property(copy) ISPropertyListProvider *propertyListDataProvider; // @synthesize propertyListDataProvider=_propertyListDataProvider;
@property long long outputType; // @synthesize outputType=_outputType;
@property(retain) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
- (void)_loadPersonalizedStoreOffersForPage:(id)arg1;
- (_Bool)parseData:(id)arg1 returningError:(id *)arg2;
- (void)dealloc;

@end

@interface SUStorePageProtocol : NSObject <NSCopying>
{
    NSArray *_allowedOrientations;
    NSString *_copyright;
    NSArray *_expectedClientIdentifiers;
    NSNumber *_focusedItemIdentifier;
    NSArray *_navigationButtons;
    NSArray *_navigationHistoryItems;
    NSArray *_navigationMenus;
    SSURLRequestProperties *_overlayBackgroundURLRequestProperties;
    NSString *_rootSectionIdentifier;
    _Bool _shouldDisplayInOverlay;
    _Bool _shouldExcludeFromNavigationHistory;
    _Bool _shouldReplaceRootViewController;
}

@property(nonatomic) _Bool shouldReplaceRootViewController; // @synthesize shouldReplaceRootViewController=_shouldReplaceRootViewController;
@property(nonatomic) _Bool shouldExcludeFromNavigationHistory; // @synthesize shouldExcludeFromNavigationHistory=_shouldExcludeFromNavigationHistory;
@property(nonatomic) _Bool shouldDisplayInOverlay; // @synthesize shouldDisplayInOverlay=_shouldDisplayInOverlay;
@property(retain, nonatomic) NSString *rootSectionIdentifier; // @synthesize rootSectionIdentifier=_rootSectionIdentifier;
@property(retain, nonatomic) SSURLRequestProperties *overlayBackgroundURLRequestProperties; // @synthesize overlayBackgroundURLRequestProperties=_overlayBackgroundURLRequestProperties;
@property(copy, nonatomic) NSArray *navigationMenus; // @synthesize navigationMenus=_navigationMenus;
@property(retain, nonatomic) NSArray *navigationHistoryItems; // @synthesize navigationHistoryItems=_navigationHistoryItems;
@property(copy, nonatomic) NSArray *navigationButtons; // @synthesize navigationButtons=_navigationButtons;
@property(retain, nonatomic) NSNumber *focusedItemIdentifier; // @synthesize focusedItemIdentifier=_focusedItemIdentifier;
@property(copy, nonatomic) NSArray *expectedClientIdentifiers; // @synthesize expectedClientIdentifiers=_expectedClientIdentifiers;
@property(retain, nonatomic) NSString *copyright; // @synthesize copyright=_copyright;
@property(retain, nonatomic) NSArray *allowedOrientations; // @synthesize allowedOrientations=_allowedOrientations;
- (id)_newNavigationMenusFromArray:(id)arg1;
- (id)_newNavigationHistoryItemsFromArray:(id)arg1;
- (id)_newNavigationButtonsFromArray:(id)arg1;
- (void)setValuesFromStorePageDictionary:(id)arg1;
- (void)setOverlayBackgroundURLRequest:(id)arg1;
- (id)overlayBackgroundURLRequest;
- (id)navigationMenuForLocation:(long long)arg1;
- (id)navigationButtonForLocation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)_initCommon;

@end

@interface SUStorePageRotationController : SURotationController
{
    SURotationController *_childRotationController;
    SUViewController *_childViewController;
}

- (id)_childRotationController;
- (void)prepareToRotateToInterfaceOrientation:(long long)arg1;
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;
- (void)animateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;

@end

@interface SUStorePageView : UIView
{
    UIView *_backdropView;
    UIView *_contentView;
    UIView *_headerView;
    UIScrollView *_headerScrollView;
    UIView *_previewOverlayView;
    struct UIEdgeInsets _contentViewInsets;
}

@property(nonatomic) struct UIEdgeInsets contentViewInsets; // @synthesize contentViewInsets=_contentViewInsets;
@property(retain, nonatomic) UIView *previewOverlayView; // @synthesize previewOverlayView=_previewOverlayView;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) UIView *backdropView; // @synthesize backdropView=_backdropView;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface SUStrokeEdgesImageModifier : SUImageModifier
{
    struct UIEdgeInsets _edgeInsets;
    _Bool _fitToImage;
    UIColor *_strokeColor;
    _Bool _strokeCurrentPath;
}

@property(nonatomic) _Bool strokeCurrentPath; // @synthesize strokeCurrentPath=_strokeCurrentPath;
@property(retain, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
@property(nonatomic) _Bool fitToImage; // @synthesize fitToImage=_fitToImage;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
- (void)drawAfterImageForContext:(struct CGContext *)arg1 imageFrame:(struct CGRect)arg2 finalSize:(struct CGSize)arg3;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface SUStructuredPage : NSObject <NSCopying>
{
    _Bool _artworkShouldFitWidth;
    double _artworkWidth;
    _Bool _didShowDialog;
    long long _displayStyle;
    SUItem *_item;
    SUItemList *_itemList;
    SUStorePageProtocol *_protocol;
    SUPageSectionGroup *_sectionsGroup;
    _Bool _shouldHideSignInButton;
    NSString *_title;
    long long _type;
    _Bool _wantsIndexBar;
}

+ (long long)pageTypeForStorePageString:(id)arg1;
+ (long long)pageTypeForStorePageDictionary:(id)arg1;
@property(readonly, nonatomic) _Bool wantsIndexBar; // @synthesize wantsIndexBar=_wantsIndexBar;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) _Bool shouldHideSignInButton; // @synthesize shouldHideSignInButton=_shouldHideSignInButton;
@property(retain, nonatomic) SUPageSectionGroup *sectionsGroup; // @synthesize sectionsGroup=_sectionsGroup;
@property(retain, nonatomic) SUStorePageProtocol *protocol; // @synthesize protocol=_protocol;
@property(retain, nonatomic) SUItemList *itemList; // @synthesize itemList=_itemList;
@property(retain, nonatomic) SUItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) long long displayStyle; // @synthesize displayStyle=_displayStyle;
@property(readonly, nonatomic) _Bool didShowDialog; // @synthesize didShowDialog=_didShowDialog;
@property(readonly, nonatomic) double artworkWidth; // @synthesize artworkWidth=_artworkWidth;
@property(readonly, nonatomic) _Bool artworkShouldFitWidth; // @synthesize artworkShouldFitWidth=_artworkShouldFitWidth;
- (void)_parseTemplateParametersFromDictionary:(id)arg1;
- (void)_parseProtocolFromDictionary:(id)arg1;
- (void)_parseItemsFromDictionary:(id)arg1;
- (long long)_displayStyleForString:(id)arg1;
- (id)_copyItemFromDictionary:(id)arg1;
@property(readonly, nonatomic) _Bool hasDisplayableContent;
- (_Bool)loadFromDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface SUStructuredPageTableDataSource : SUTableDataSource
{
    SUItem *_activeLoadMoreItem;
    NSMutableArray *_cachedHeaderViews;
    SUClientInterface *_clientInterface;
    double _offerButtonWidth;
    SUStructuredPage *_structuredPage;
    long long _style;
}

@property(nonatomic) long long style; // @synthesize style=_style;
@property(retain, nonatomic) SUStructuredPage *structuredPage; // @synthesize structuredPage=_structuredPage;
@property(retain, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
@property(retain, nonatomic) SUItem *activeLoadMoreItem; // @synthesize activeLoadMoreItem=_activeLoadMoreItem;
- (_Bool)_shouldShowItemOfferButtonForItem:(id)arg1;
- (id)_itemOfferButtonForCell:(id)arg1 item:(id)arg2;
- (void)_configureLoadMoreCell:(id)arg1 forItem:(id)arg2;
- (id)titleForHeaderInSection:(long long)arg1;
- (id)titleForDeleteConfirmationForIndexPath:(id)arg1;
- (long long)tableViewStyle;
- (id)sectionIndexTitles;
- (long long)sectionIndexForIndexTitle:(id)arg1 atIndex:(long long)arg2;
- (void)reloadData;
- (void)reloadCellContexts;
- (long long)numberOfRowsInSection:(long long)arg1;
- (long long)numberOfSections;
- (id)headerViewForSection:(long long)arg1;
- (_Bool)deleteIndexPath:(id)arg1;
- (void)configureCell:(id)arg1 forIndexPath:(id)arg2;
- (double)cellHeightForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (_Bool)canSelectIndexPath:(id)arg1;
- (_Bool)canDeleteIndexPath:(id)arg1;
- (id)newHeaderViewForSection:(long long)arg1;
- (id)cellConfigurationForIndex:(long long)arg1 item:(id)arg2;
- (Class)cellConfigurationClassForItem:(id)arg1;
- (Class)cellClassForItem:(id)arg1 reuseIdentifier:(id *)arg2;
- (_Bool)canShowItemOfferButtonForItem:(id)arg1;
- (void)dealloc;

@end

@interface SUStructuredPageGroupedTableDataSource : SUStructuredPageTableDataSource
{
}

- (id)_subtitleForSectionIndex:(long long)arg1;
- (long long)tableViewStyle;
- (void)reloadCellContexts;
- (id)newHeaderViewForSection:(long long)arg1;
- (double)heightForFooterInSection:(long long)arg1;
- (void)configureCell:(id)arg1 forIndexPath:(id)arg2;
- (Class)cellConfigurationClassForItem:(id)arg1;
- (Class)cellClassForItem:(id)arg1 reuseIdentifier:(id *)arg2;
- (_Bool)canShowItemOfferButtonForItem:(id)arg1;

@end

@interface SUStructuredPageGroupedViewController : SUStructuredPageViewController
{
    SULoadingView *_loadingView;
}

- (void)_performPurchaseAnimationForIndexPath:(id)arg1;
- (_Bool)_addPurchaseBatch:(id)arg1 forIndexPath:(id)arg2;
- (void)setLoading:(_Bool)arg1;
- (_Bool)purchaseItemAtIndexPath:(id)arg1;
- (_Bool)openDocumentForItemAtIndexPath:(id)arg1 withApplication:(id)arg2;
- (id)newNoItemsOverlayLabel;
- (id)itemAtIndexPath:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SUSubtitledButtonContent : NSObject
{
    NSString *_subtitle;
    UIColor *_subtitleColor;
    UIColor *_subtitleShadowColor;
}

@property(retain, nonatomic) UIColor *subtitleShadowColor; // @synthesize subtitleShadowColor=_subtitleShadowColor;
@property(retain, nonatomic) UIColor *subtitleColor; // @synthesize subtitleColor=_subtitleColor;
@property(retain, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
- (void)dealloc;

@end

@interface SUTabBarAppearance : NSObject <NSCopying>
{
    UIImage *_backgroundImage;
    UIImage *_dividerImage;
    UIImage *_selectedDividerImage;
    UIImage *_selectionIndicatorImage;
    double _tabBarButtonSpacing;
    double _tabBarButtonWidth;
    NSMutableDictionary *_titleTextAttributes;
}

@property(nonatomic) double tabBarButtonWidth; // @synthesize tabBarButtonWidth=_tabBarButtonWidth;
@property(nonatomic) double tabBarButtonSpacing; // @synthesize tabBarButtonSpacing=_tabBarButtonSpacing;
@property(retain, nonatomic) UIImage *selectionIndicatorImage; // @synthesize selectionIndicatorImage=_selectionIndicatorImage;
@property(retain, nonatomic) UIImage *selectedDividerImage; // @synthesize selectedDividerImage=_selectedDividerImage;
@property(retain, nonatomic) UIImage *dividerImage; // @synthesize dividerImage=_dividerImage;
@property(retain, nonatomic) UIImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
- (id)titleTextAttributesForState:(unsigned long long)arg1;
- (void)setTitleTextAttributes:(id)arg1 forState:(unsigned long long)arg2;
- (void)enumerateTitleTextAttributesUsingBlock:(CDUnknownBlockType)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface SUTabBarController : UITabBarController <SUOverlayBackgroundDelegate, _UIBasicAnimationFactory>
{
    SUClientInterface *_clientInterface;
    NSString *_moreListTitle;
    NSMutableArray *_overlayBackgroundViewControllers;
    UIViewController *_preTransientSelectedViewController;
    long long _reloadingUnderneathTransientControllerCount;
    NSArray *_sections;
    _Bool _ignoreTabReselection;
    UIImage *_moreListSelectedImage;
    UIImage *_moreListUnselectedImage;
    SUViewController *_preloadedViewController;
    NSString *_preloadedViewControllerIdentifier;
    NSString *_preloadedViewControllerKey;
    SUPreviewOverlayViewController *_previewOverlayViewController;
    long long _storeBarStyle;
    SUNavigationBarBackgroundView *_tabBarBackdropView;
}

+ (Class)_moreNavigationControllerClass;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) NSString *moreListTitle; // @synthesize moreListTitle=_moreListTitle;
@property(readonly, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
- (id)_viewControllerForContext:(id)arg1;
- (void)_transitionSafeHandlePartnerChange:(id)arg1;
- (id)_sectionForType:(long long)arg1;
- (id)_sectionForIdentifier:(id)arg1;
- (_Bool)_saveTransientNavigationPathToDefaults;
- (_Bool)_saveNavigationPathToDefaults;
- (id)_rootViewControllerForSection:(id)arg1;
- (void)_restoreArchivedTransientContexts:(id)arg1;
- (void)_restoreOverlayContexts:(id)arg1;
- (void)_restoreArchivedContexts:(id)arg1;
- (void)_reloadViewControllersFromSections:(id)arg1 animated:(_Bool)arg2;
- (void)_moveView:(id)arg1 toView:(id)arg2;
- (void)_moveTransientViewController:(id)arg1 toSectionWithIdentifier:(id)arg2 asRoot:(_Bool)arg3;
- (void)_longPressAction:(id)arg1;
- (_Bool)_isReloadingUnderneathTransientViewController;
- (void)_fixupViewControllers;
- (void)_fixupTabBarSelection;
- (void)_endReloadingUnderneathTransientViewController;
- (void)_beginReloadingUnderneathTransientViewController;
- (id)_archivedContextsForViewController:(id)arg1;
- (void)_applyMoreListConfiguration;
- (void)_showPreviewOverlay:(id)arg1 animated:(_Bool)arg2;
- (void)_setStoreBarStyle:(long long)arg1;
@property(readonly, nonatomic, getter=_previewOverlayViewController) SUPreviewOverlayViewController *_previewOverlayViewController;
- (void)_hidePreviewOverlayAnimated:(_Bool)arg1;
- (void)_partnerChanged:(id)arg1;
- (void)_applicationDidChangeStatusBarFrame:(id)arg1;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;
- (id)viewControllerForSectionType:(long long)arg1;
- (id)viewControllerForSectionIdentifier:(id)arg1;
@property(retain, nonatomic) NSString *selectedIdentifier;
- (unsigned long long)indexOfViewControllerWithSectionType:(long long)arg1;
- (void)scriptOverlayBackgroundDidDismiss:(id)arg1;
- (_Bool)presentOverlayBackgroundViewController:(id)arg1;
- (id)overlayBackgroundViewController;
- (void)dismissOverlayBackgroundViewController;
- (_Bool)window:(id)arg1 shouldAutorotateToInterfaceOrientation:(long long)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)cancelTransientViewController:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)tabBar:(id)arg1 willShowCustomizationSheet:(id)arg2 withNavigationBar:(id)arg3;
- (void)tabBar:(id)arg1 willEndCustomizingItems:(id)arg2 changed:(_Bool)arg3;
- (void)tabBar:(id)arg1 didEndCustomizingItems:(id)arg2 changed:(_Bool)arg3;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)setTransientViewController:(id)arg1 animated:(_Bool)arg2;
- (id)selectedViewController;
- (void)_setSelectedViewController:(id)arg1;
- (id)_sectionForViewController:(id)arg1;
- (id)rotatingHeaderView;
- (id)rotatingFooterView;
- (void)loadView;
- (long long)ITunesStoreUIBarStyle;
- (void)setTransientViewController:(id)arg1 onSectionWithIdentifier:(id)arg2;
- (void)setSectionOrdering:(id)arg1;
- (void)setMoreListSelectedImage:(id)arg1 unselectedImage:(id)arg2;
- (void)selectSectionOfType:(long long)arg1;
- (void)selectDefaultSection;
- (_Bool)saveToDefaults;
- (_Bool)saveOrderingToDefaults;
- (void)resetUserDefaults;
- (void)resetToSystemDefaults;
- (void)reloadSectionWithIdentifier:(id)arg1 URL:(id)arg2;
- (void)reloadSectionVisibilityAnimated:(_Bool)arg1;
- (void)pushTransientViewController:(id)arg1 onSectionWithIdentifier:(id)arg2;
- (_Bool)loadFromDefaults;
- (_Bool)loadFromDefaultsAndSetSections:(id)arg1;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <SUTabBarControllerDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUTableCellContentOverlayView : UIView
{
    SUCellConfiguration *_configuration;
}

@property(retain, nonatomic) SUCellConfiguration *configuration; // @synthesize configuration=_configuration;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface SUTableCellContentView : UIView <SUCellConfigurationView>
{
    int _clipCorners;
    UIBezierPath *_clipPath;
    SUCellConfiguration *_configuration;
    unsigned int _drawAsDisabled:1;
    unsigned int _highlighted:1;
    unsigned int _highlightsOnlyContentView:1;
    UIView *_overlayView;
    NSMutableArray *_subviews;
    unsigned int _useSubviewLayout:1;
}

@property(retain, nonatomic) SUCellConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) int clipCorners; // @synthesize clipCorners=_clipCorners;
- (id)_scriptingInfo;
- (void)_updateDisabledStyleForSubviews;
- (void)_stopUsingSubviewLayout;
- (void)_startUsingSubviewLayout;
- (void)_removeSubviewsForConfiguration;
- (void)_reloadSubviewsForConfiguration;
- (void)_reloadSubviewAlphasAnimated:(_Bool)arg1;
- (id)_clippedImageForImage:(id)arg1;
- (id)_clipPath;
@property(nonatomic) _Bool usesSubviews;
- (void)setUsesSubviews:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isHighlighted) _Bool highlighted;
@property(nonatomic) _Bool highlightsOnlyContentView;
- (void)setFrame:(struct CGRect)arg1;
@property(nonatomic) _Bool drawAsDisabled;
@property(nonatomic, getter=isDeleteConfirmationVisible) _Bool deleteConfirmationVisisble;
- (void)reloadView;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUTableCellLayoutManager : UITableViewCellLayoutManager
{
}

- (struct CGRect)accessoryEndingRectForCell:(id)arg1 forNewEditingState:(_Bool)arg2 showingDeleteConfirmation:(_Bool)arg3;

@end

@interface SUTableHeaderView : UIView
{
    UIColor *_bottomBorderColor;
    struct UIEdgeInsets _edgeInsets;
    long long _index;
    long long _style;
    UILabel *_subtitleLabel;
    UILabel *_titleLabel;
}

@property(nonatomic) long long style; // @synthesize style=_style;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(retain, nonatomic) UIColor *bottomBorderColor; // @synthesize bottomBorderColor=_bottomBorderColor;
@property(retain, nonatomic) UIFont *titleFont;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIFont *subtitleFont;
@property(retain, nonatomic) NSString *subtitle;
@property(retain, nonatomic) UIColor *shadowColor;
- (void)sizeToFit;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUTableTextFooterView : UIView
{
    UIFont *_font;
    UIColor *_shadowColor;
    long long _textAlignment;
    UIColor *_textColor;
    NSArray *_textLines;
}

@property(retain, nonatomic) NSArray *textLines; // @synthesize textLines=_textLines;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(retain, nonatomic) UIColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
- (void)sizeToFit;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface SUTableView : UITableView
{
    _Bool _allowsHeaderAndFooterToFloat;
}

@property(nonatomic) _Bool allowsHeaderAndFooterToFloat; // @synthesize allowsHeaderAndFooterToFloat=_allowsHeaderAndFooterToFloat;
- (_Bool)allowsHeaderViewsToFloat;
- (_Bool)allowsFooterViewsToFloat;

@end

@interface SUTallLinkCellConfiguration : SUMediaItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (id)copyDefaultContext;
- (_Bool)showContentRating;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)copyImageDataProvider;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUTermsAndConditionsView : UIView
{
    UIAlertView *_accountButtonAlert;
    SUSubtitledButton *_button;
    SUClientInterface *_clientInterface;
    _Bool _hideAccountButton;
    double _rightMargin;
    long long _style;
    SULinkControl *_termsAndConditionsControl;
    SUClientInterface *clientInterface;
}

@property(nonatomic) long long style; // @synthesize style=_style;
@property(nonatomic) double rightMargin; // @synthesize rightMargin=_rightMargin;
@property(nonatomic) _Bool hideAccountButton; // @synthesize hideAccountButton=_hideAccountButton;
@property(retain, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface;
- (void)_updateButton;
- (id)_termsAndConditionsControl;
- (long long)_linkStyleForStyle:(long long)arg1;
- (void)_destroyButton;
- (void)_clearButtonSelection:(id)arg1;
- (double)_buttonHeightForStyle:(long long)arg1;
- (id)_button;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)_accountsChangedNotification:(id)arg1;
- (void)_termsAndConditionsAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)sizeToFit;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUTextContentView : UITextContentView
{
    UILabel *_placeholderLabel;
}

@property(retain, nonatomic) NSString *placeholder;
- (void)layoutSubviews;
- (void)setText:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)resignFirstResponder;
- (void)keyboardInputChangedSelection:(id)arg1;
- (_Bool)becomeFirstResponder;
- (void)dealloc;

@end

@interface SUTextViewCell : SUTableCell <UITextContentViewDelegate>
{
    id <SUTextViewCellDelegate> _delegate;
    UIScrollView *_scrollView;
    SUTextContentView *_textContentView;
}

@property(readonly, nonatomic) SUTextContentView *textContentView; // @synthesize textContentView=_textContentView;
@property(nonatomic) id <SUTextViewCellDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)textContentViewShouldEndEditing:(id)arg1;
- (_Bool)textContentViewShouldBeginEditing:(id)arg1;
- (void)textContentViewDidChange:(id)arg1;
- (_Bool)textContentView:(id)arg1 shouldScrollForPendingContentSize:(struct CGSize)arg2;
- (_Bool)textContentView:(id)arg1 shouldChangeSizeForContentSize:(struct CGSize)arg2;
- (void)textContentView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)resignFirstResponder;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUThreeLineTrackCellConfiguration : SUMediaItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (id)copyDefaultContext;
- (void)reloadStrings;
- (void)reloadLayoutInformation;
- (void)reloadImages;
- (unsigned long long)indexOfLabelForPurchaseAnimation;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUToolbarAppearance : NSObject <NSCopying>
{
    NSMutableDictionary *_backgroundImages;
    NSMutableDictionary *_shadowImages;
    UIColor *_tintColor;
}

+ (id)defaultToolbarAppearance;
@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)styleToolbar:(id)arg1;
- (id)shadowImageForPosition:(long long)arg1;
- (void)setShadowImage:(id)arg1 forPosition:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forPosition:(long long)arg2 barMetrics:(long long)arg3;
- (void)enumerateShadowImagesUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateBackgroundImagesUsingBlock:(CDUnknownBlockType)arg1;
- (id)backgroundImageForPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)dealloc;

@end

@interface SUTouchCaptureView : UIControl
{
    NSArray *_passThroughViews;
}

@property(retain, nonatomic) NSArray *passThroughViews; // @synthesize passThroughViews=_passThroughViews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;

@end

@interface SUTransitionSafetyDelegate : NSObject <UINavigationControllerDelegate>
{
}

- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUTransitionSafetyInvocationRecorder : ISInvocationRecorder
{
}

- (void)invokeInvocation:(id)arg1;

@end

@interface SUTwoLineTrackCellConfiguration : SUMediaItemCellConfiguration
{
}

+ (double)rowHeightForContext:(id)arg1 representedObject:(id)arg2;
+ (id)copyDefaultContext;
- (void)reloadStrings;
- (void)reloadImages;
- (void)reloadLayoutInformation;
- (unsigned long long)indexOfLabelForPurchaseAnimation;
- (id)fontForLabelAtIndex:(unsigned long long)arg1;
- (id)colorForLabelAtIndex:(unsigned long long)arg1 withModifiers:(unsigned long long)arg2;
- (id)init;

@end

@interface SUUIAppearance : NSObject <NSCopying>
{
    SUControlAppearance *_backButtonAppearance;
    SUControlAppearance *_confirmationButtonAppearance;
    SUControlAppearance *_destructiveButtonAppearance;
    SUControlAppearance *_exitStoreButtonAppearance;
    SUControlAppearance *_forwardButtonAppearance;
    _Bool _isDefaultAppearance;
    NSMutableDictionary *_navigationBarBackgroundImages;
    NSDictionary *_navigationBarTitleTextAttributes;
    NSMutableDictionary *_navigationButtonAppearance;
    NSMutableDictionary *_segmentedControlAppearance;
    SUTabBarAppearance *_tabBarAppearance;
    SUToolbarAppearance *_toolbarAppearance;
}

+ (id)_defaultTabBarAppearance;
+ (id)_defaultForwardButtonAppearance;
+ (id)_defaultDoneButtonAppearance;
+ (id)_defaultDestructiveButtonAppearance;
+ (id)_defaultConfirmationButtonAppearance;
+ (id)_defaultButtonAppearance;
+ (id)_defaultBackButtonAppearance;
+ (id)_defaultShadowWithColor:(id)arg1 offset:(struct CGSize)arg2;
+ (id)defaultAppearance;
@property(copy, nonatomic) SUToolbarAppearance *toolbarAppearance; // @synthesize toolbarAppearance=_toolbarAppearance;
@property(copy, nonatomic) SUTabBarAppearance *tabBarAppearance; // @synthesize tabBarAppearance=_tabBarAppearance;
@property(copy, nonatomic) NSDictionary *navigationBarTitleTextAttributes; // @synthesize navigationBarTitleTextAttributes=_navigationBarTitleTextAttributes;
@property(copy, nonatomic) SUControlAppearance *forwardButtonAppearance; // @synthesize forwardButtonAppearance=_forwardButtonAppearance;
@property(copy, nonatomic) SUControlAppearance *exitStoreButtonAppearance; // @synthesize exitStoreButtonAppearance=_exitStoreButtonAppearance;
@property(copy, nonatomic) SUControlAppearance *destructiveButtonAppearance; // @synthesize destructiveButtonAppearance=_destructiveButtonAppearance;
@property(copy, nonatomic) SUControlAppearance *confirmationButtonAppearance; // @synthesize confirmationButtonAppearance=_confirmationButtonAppearance;
@property(copy, nonatomic) SUControlAppearance *backButtonAppearance; // @synthesize backButtonAppearance=_backButtonAppearance;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_copySegmentedControlKeyWithStyle:(long long)arg1 tintStyle:(long long)arg2;
- (void)_styleBackBarButtonItem:(id)arg1;
- (void)styleToolbar:(id)arg1;
- (void)styleTabBarItem:(id)arg1;
- (void)styleTabBar:(id)arg1;
- (void)styleSegmentedControl:(id)arg1 tintStyle:(long long)arg2;
- (void)styleNavigationBar:(id)arg1;
- (void)styleForwardButtonItem:(id)arg1;
- (void)styleExitStoreButtonItem:(id)arg1;
- (void)styleDestructiveButton:(id)arg1;
- (void)styleConfirmationButtonItem:(id)arg1;
- (void)styleBarButtonItem:(id)arg1;
- (void)setSegmentedControlAppearance:(id)arg1 forStyle:(long long)arg2 tintStyle:(long long)arg3;
- (void)setNavigationButtonAppearance:(id)arg1 forStyle:(long long)arg2;
- (void)setNavigationBarBackgroundImage:(id)arg1 forBarMetrics:(long long)arg2;
- (id)segmentedControlAppearanceForStyle:(long long)arg1 tintStyle:(long long)arg2;
- (id)navigationButtonAppearanceForStyle:(long long)arg1;
- (id)navigationBarBackgroundImageForBarMetrics:(long long)arg1;
- (void)dealloc;

@end

@interface SUUserRatingView : UIView
{
    float _value;
    UIImageView *_foregroundImageView;
    UIImageView *_backgroundImageView;
}

+ (double)reflectionHeight;
+ (id)copyImageForRating:(float)arg1 backgroundColor:(id)arg2 style:(long long)arg3;
- (struct CGRect)_foregroundImageClipBounds;
- (void)layoutSubviews;
- (void)setValue:(float)arg1;
- (float)heightWithoutReflection;
- (id)initWithStyle:(long long)arg1;
- (id)initWithForeground:(id)arg1 background:(id)arg2;
- (id)init;

@end

@interface SUVariableCellConfigurationCache : NSObject
{
    NSMutableDictionary *_caches;
    id _cellContext;
    double _tableHeight;
}

@property(retain, nonatomic) id cellContext; // @synthesize cellContext=_cellContext;
- (void)resetLayoutCaches;
- (void)reset;
@property(readonly, nonatomic) NSArray *caches;
- (id)cacheForClass:(Class)arg1;
- (void)dealloc;
- (id)initWithTableHeight:(double)arg1;

@end

@interface SUViewControllerContext : NSObject <NSCoding>
{
    NSMutableDictionary *_metadata;
    NSString *_sectionIdentifier;
    long long _type;
}

@property(nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *sectionIdentifier; // @synthesize sectionIdentifier=_sectionIdentifier;
- (id)_typeStringForType:(long long)arg1;
- (long long)_typeForTypeString:(id)arg1;
- (id)valueForMetadataKey:(id)arg1;
- (void)setValue:(id)arg1 forMetadataKey:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyViewController;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

@interface SUViewControllerFactory : NSObject
{
}

- (id)newVolumeViewController;
- (id)newViewControllerForTrackList:(id)arg1;
- (id)newViewControllerForPage:(id)arg1 ofType:(long long)arg2;
- (id)newStorePageViewControllerWithSection:(id)arg1;
- (id)newPlaceholderViewController;
- (id)newNetworkLockoutViewControllerWithSection:(id)arg1;
- (id)newDownloadsViewController;
- (id)newComposeReviewViewControllerWithCompositionURL:(id)arg1;

@end

@interface SUViewControllerScriptProperties : NSObject <NSCoding, NSCopying>
{
    _Bool _alwaysDispatchesScrollEvents;
    UIColor *_backgroundColor;
    NSDictionary *_contextDictionary;
    _Bool _doubleTapEnabled;
    _Bool _embedded;
    _Bool _flashesScrollIndicators;
    _Bool _inputViewObeysDOMFocus;
    long long _loadingIndicatorStyle;
    UIColor *_loadingTextColor;
    UIColor *_loadingTextShadowColor;
    SUGradient *_placeholderBackgroundGradient;
    struct UIEdgeInsets _scrollContentInsets;
    _Bool _scrollingDisabled;
    _Bool _shouldLoadProgressively;
    _Bool _shouldShowFormAccessory;
    _Bool _showsHorizontalScrollIndicator;
    _Bool _showsVerticalScrollIndicator;
    _Bool _showsBackgroundShadow;
    UIColor *_topExtensionColor;
    _Bool _usesBlurredBackground;
}

@property(nonatomic) _Bool usesBlurredBackground; // @synthesize usesBlurredBackground=_usesBlurredBackground;
@property(retain, nonatomic) UIColor *topExtensionColor; // @synthesize topExtensionColor=_topExtensionColor;
@property(nonatomic) _Bool showsBackgroundShadow; // @synthesize showsBackgroundShadow=_showsBackgroundShadow;
@property(nonatomic) _Bool showsVerticalScrollIndicator; // @synthesize showsVerticalScrollIndicator=_showsVerticalScrollIndicator;
@property(nonatomic) _Bool showsHorizontalScrollIndicator; // @synthesize showsHorizontalScrollIndicator=_showsHorizontalScrollIndicator;
@property(nonatomic) _Bool shouldShowFormAccessory; // @synthesize shouldShowFormAccessory=_shouldShowFormAccessory;
@property(nonatomic) _Bool shouldLoadProgressively; // @synthesize shouldLoadProgressively=_shouldLoadProgressively;
@property(nonatomic, getter=isScrollingDisabled) _Bool scrollingDisabled; // @synthesize scrollingDisabled=_scrollingDisabled;
@property(nonatomic) struct UIEdgeInsets scrollContentInsets; // @synthesize scrollContentInsets=_scrollContentInsets;
@property(retain, nonatomic) SUGradient *placeholderBackgroundGradient; // @synthesize placeholderBackgroundGradient=_placeholderBackgroundGradient;
@property(retain, nonatomic) UIColor *loadingTextShadowColor; // @synthesize loadingTextShadowColor=_loadingTextShadowColor;
@property(retain, nonatomic) UIColor *loadingTextColor; // @synthesize loadingTextColor=_loadingTextColor;
@property(nonatomic) long long loadingIndicatorStyle; // @synthesize loadingIndicatorStyle=_loadingIndicatorStyle;
@property(nonatomic) _Bool inputViewObeysDOMFocus; // @synthesize inputViewObeysDOMFocus=_inputViewObeysDOMFocus;
@property(nonatomic) _Bool flashesScrollIndicators; // @synthesize flashesScrollIndicators=_flashesScrollIndicators;
@property(nonatomic, getter=isEmbedded) _Bool embedded; // @synthesize embedded=_embedded;
@property(nonatomic, getter=isDoubleTapEnabled) _Bool doubleTapEnabled; // @synthesize doubleTapEnabled=_doubleTapEnabled;
@property(copy, nonatomic) NSDictionary *contextDictionary; // @synthesize contextDictionary=_contextDictionary;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) _Bool alwaysDispatchesScrollEvents; // @synthesize alwaysDispatchesScrollEvents=_alwaysDispatchesScrollEvents;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

@interface SUWebDocumentView : UIWebDocumentView
{
    id _loadDelegate;
    NSString *_stylesheet;
    unsigned int _adjustHeightToFit:1;
}

@property(retain, nonatomic) NSString *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(nonatomic) id loadDelegate; // @synthesize loadDelegate=_loadDelegate;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)setHTMLFragment:(id)arg1;
- (void)setPlaintextString:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SUWebView : UIWebView
{
    _Bool _isPinned;
    UIColor *_originalBackgroundColor;
    BOOL _originalShowsBackgroundShadow;
    double _pinnedHeaderInsetAdjustment;
    UIView *_pinnedHeaderView;
    unsigned int _scrollingDisabled:1;
    _Bool _showsTopBackgroundShadow;
    long long _synchronousLayoutCount;
    UIColor *_topBackgroundColor;
}

@property(retain, nonatomic) UIColor *topBackgroundColor; // @synthesize topBackgroundColor=_topBackgroundColor;
@property(nonatomic) _Bool showsTopBackgroundShadow; // @synthesize showsTopBackgroundShadow=_showsTopBackgroundShadow;
- (void)view:(id)arg1 didSetFrame:(struct CGRect)arg2 oldFrame:(struct CGRect)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_setRichTextReaderViewportSettings;
- (void)_setPinnedHeaderView:(id)arg1 withTopInsetAdjustment:(double)arg2;
@property(readonly, nonatomic) id windowScriptObject;
@property(readonly, nonatomic) NSString *title;
@property(nonatomic, getter=isScrollingEnabled) _Bool scrollingEnabled;
- (void)loadArchive:(id)arg1;
- (_Bool)getStatusBarStyle:(long long *)arg1;
- (void)endSynchronousLayout;
- (void)beginSynchronousLayout;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(nonatomic) id <SUWebViewDelegate> delegate; // @dynamic delegate;

@end

@interface SUWebViewController : SUViewController <SUWebViewManagerDelegate, SUWebViewDelegate>
{
    SUWebView *_webView;
    SSMutableAuthenticationContext *_authenticationContext;
    SUDelayedNavigationItem *_delayedNavigationItem;
    NSURL *_displayedURL;
    _Bool _hasEverAppeared;
    long long _lastKnownOrientation;
    CDUnknownBlockType _loadBlock;
    SUMescalSession *_mescalSession;
    SUObjectPool *_objectPool;
    ISURLRequestPerformance *_performanceMetrics;
    long long _scheduledOrientation;
    SUStorePageProtocol *_storePageProtocol;
    long long _style;
    NSURL *_url;
    _Bool _viewIsReady;
    SUWebViewManager *_webViewManager;
}

@property(nonatomic) _Bool viewIsReady; // @synthesize viewIsReady=_viewIsReady;
@property(nonatomic) long long style; // @synthesize style=_style;
@property(retain, nonatomic, getter=_performanceMetrics, setter=_setPerformanceMetrics:) ISURLRequestPerformance *_performanceMetrics; // @synthesize _performanceMetrics;
@property(retain, nonatomic, getter=_mescalSession, setter=_setMescalSession:) SUMescalSession *_mescalSession; // @synthesize _mescalSession;
@property(copy, nonatomic) SSAuthenticationContext *authenticationContext; // @synthesize authenticationContext=_authenticationContext;
- (void)_setLastKnownOrientation:(long long)arg1;
- (void)_sendOrientationWillChangeToInterfaceOrientation:(long long)arg1;
- (void)_removePlaceholderBackgroundView;
- (void)_reloadUI;
- (void)_reloadPlaceholderBackgroundView;
- (void)_reloadObjectPool;
- (void)_reloadBackgroundViewPropertiesWithScriptProperties:(id)arg1;
- (void)_prepareToLoadURL:(id)arg1;
- (id)_placeholderBackgroundView;
- (void)_loadURLRequest:(id)arg1;
- (void)_getURLRequestForOperation:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)_finishLoadWithResult:(_Bool)arg1 error:(id)arg2;
- (id)_defaultBackgroundColor;
- (void)_applyScriptProperties:(id)arg1;
- (void)_applySavedScrollOffsetIfPossible;
- (void)_addPlaceholderBackgroundView;
- (void)_loadWithURLOperation:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)webViewManager:(id)arg1 webDocumentViewDidSetFrame:(struct CGRect)arg2;
- (void)webViewManagerDidStartLoad:(id)arg1;
- (void)webViewManagerDidFinishLoad:(id)arg1;
- (void)webViewManager:(id)arg1 willInjectScriptInterface:(id)arg2;
- (void)webViewManager:(id)arg1 didRejectInvalidRequest:(id)arg2;
- (void)webViewManager:(id)arg1 didReceivePrimaryResponse:(id)arg2;
- (void)webViewManager:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewManager:(id)arg1 didReceiveTitle:(id)arg2;
- (id)viewControllerForWebViewManager:(id)arg1;
- (id)newScriptInterfaceForWebViewManager:(id)arg1;
- (id)newRotationController;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)storePageProtocolDidChange;
- (void)storePageCleanupBeforeTearDown;
- (id)storePageProtocol;
- (void)setStorePageProtocol:(id)arg1;
- (void)setScriptProperties:(id)arg1;
- (void)_setExistingNavigationItem:(id)arg1;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
- (void)parentViewControllerHierarchyDidChange;
- (id)navigationItemForScriptInterface;
- (struct CGSize)minimumViewSize;
- (void)loadView;
- (void)keyboardWillShowWithInfo:(id)arg1;
- (void)keyboardDidHideWithInfo:(id)arg1;
- (void)invalidate;
- (struct CGRect)documentBounds;
- (id)displayedURL;
- (id)copyObjectForScriptFromPoolWithClass:(Class)arg1;
- (id)copyScriptProperties;
- (id)copyDefaultScriptProperties;
- (id)copyArchivableContext;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
@property(readonly, nonatomic) SUWebView *webView;
- (id)newScriptInterface;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUWebViewManager : NSObject <SUScriptInterfaceDelegate, UIWebViewDelegate>
{
    SSAuthenticationContext *_authenticationContext;
    SUClientInterface *_clientInterface;
    id <SUWebViewManagerDelegate> _delegate;
    ISURLRequestPerformance *_initialRequestPerformance;
    NSLock *_lock;
    long long _modalAlertClickedIndex;
    id _originalFrameLoadDelegate;
    id _originalPolicyDelegate;
    id _originalResourceLoadDelegate;
    id _originalUIDelegate;
    NSMapTable *_scriptInterfaces;
    SUScriptWindowContext *_scriptWindowContext;
    NSSet *_suppressCookiesHosts;
    long long _usingNetworkCount;
    struct __CFSet *_webFramesPendingInitialRequest;
    UIWebView *_webView;
}

+ (id)defaultLocalStoragePath;
@property(readonly, nonatomic) __weak UIWebView *webView; // @synthesize webView=_webView;
@property(retain, nonatomic) SUScriptWindowContext *scriptWindowContext; // @synthesize scriptWindowContext=_scriptWindowContext;
@property(retain, nonatomic) id originalUIDelegate; // @synthesize originalUIDelegate=_originalUIDelegate;
@property(retain, nonatomic) id originalResourceLoadDelegate; // @synthesize originalResourceLoadDelegate=_originalResourceLoadDelegate;
@property(retain, nonatomic) id originalPolicyDelegate; // @synthesize originalPolicyDelegate=_originalPolicyDelegate;
@property(retain, nonatomic) id originalFrameLoadDelegate; // @synthesize originalFrameLoadDelegate=_originalFrameLoadDelegate;
@property(retain, nonatomic) ISURLRequestPerformance *initialRequestPerformance; // @synthesize initialRequestPerformance=_initialRequestPerformance;
@property(nonatomic) id <SUWebViewManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) SSAuthenticationContext *authenticationContext; // @synthesize authenticationContext=_authenticationContext;
- (id)_userIdentifier;
- (id)_newAlertWithMessage:(id)arg1;
- (void)_enumerateScriptInterfacesWithBlock:(CDUnknownBlockType)arg1;
- (void)_endUsingNetwork;
- (id)_delegate;
- (void)_cancelUsingNetwork;
- (void)_beginUsingNetwork;
- (id)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4;
- (_Bool)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3;
- (void)webView:(id)arg1 exceptionWasRaised:(id)arg2 sourceId:(long long)arg3 line:(int)arg4 forWebFrame:(id)arg5;
- (void)webView:(id)arg1 failedToParseSource:(id)arg2 baseLineNumber:(unsigned long long)arg3 fromURL:(id)arg4 withError:(id)arg5 forWebFrame:(id)arg6;
- (void)webView:(id)arg1 didParseSource:(id)arg2 fromURL:(id)arg3 sourceId:(long long)arg4 forWebFrame:(id)arg5;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveResponse:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)webView:(id)arg1 didClearWindowObject:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webViewDidStartLoad:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (id)webThreadWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (id)uiWebView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)uiWebView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)webView:(id)arg1 documentViewDidSetFrame:(struct CGRect)arg2;
- (id)performanceMetricsForScriptInterface:(id)arg1;
- (id)parentViewControllerForScriptInterface:(id)arg1;
- (id)DOMElementForScriptInterface:(id)arg1 element:(id)arg2;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)dispatchEvent:(id)arg1 forName:(id)arg2 synchronously:(_Bool)arg3;
- (void)dispatchEvent:(id)arg1 forName:(id)arg2;
- (void)disconnectFromWebView;
- (void)connectToWebView:(id)arg1;
- (void)dealloc;
- (id)initWithClientInterface:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SUWebViewRotationController : SURotationController
{
}

- (void)prepareToRotateToInterfaceOrientation:(long long)arg1;
- (void)finishRotationFromInterfaceOrientation:(long long)arg1;

@end

@interface UIApplication (SUPPT)
- (void)endCurrentPPT;
- (void)beginPPTWithName:(id)arg1;
@end

@interface UIBarButtonItem (SUScriptButtonAdditions)
- (void)configureFromScriptButton:(id)arg1;
@end

@interface UIButton (SUScriptButtonAdditions)
- (void)configureFromScriptButton:(id)arg1;
@end

@interface UIColor (SUAdditions)
+ (id)colorWithStyleString:(id)arg1;
- (id)initWithStyleString:(id)arg1;
@end

@interface UIImage (SUAdditions)
- (id)stretchableImageWithLeftCapWidth:(long long)arg1 rightCapWidth:(long long)arg2;
@end

@interface UINavigationController (SUAdditions)
- (void)invalidate;
- (unsigned long long)indexOfViewController:(id)arg1;
- (id)firstViewController;
@end

@interface UINavigationController (SUTabBarControllerAdditions)
- (void)tabBarControllerDidReselectTabBarItem:(id)arg1;
- (void)tabBarControllerDidLongPressTabBarItem:(id)arg1;
@end

@interface UINavigationController (SUTabBarControllerPackage)
- (void)_setStoreBarStyle:(long long)arg1 clientInterface:(id)arg2;
@end

@interface UINavigationItem (SUAdditions)
- (void)setTitleView:(id)arg1 animated:(_Bool)arg2;
- (void)resetAllValues;
- (void)mergeValuesFromItem:(id)arg1;
- (void)fadeOutTitleView;
- (void)fadeInTitleView;
@end

@interface UIPopoverController (SUPopOverController)
- (id)copyScriptPopOver;
@end

@interface UIScrollView (SUAdditions)
- (id)topExtensionViewColor;
- (void)setTopExtensionViewColor:(id)arg1;
@end

@interface UIScrollView (SUPPT)
- (void)runScrollTest:(id)arg1 withDelta:(float)arg2 forIterations:(int)arg3;
- (void)scrollBy:(float)arg1 forIterations:(int)arg2;
- (void)_testingScrollStep;
@end

@interface UISegmentedControl (SUAdditions)
- (void)sizeToFitWithMinimumSegmentWidth:(double)arg1 maximumTotalWidth:(double)arg2;
@end

@interface UITabBarController (SUAdditions)
- (id)selectedNavigationController;
@end

@interface UITabBarItem (SUAdditions)
- (void)setBadgeValue:(id)arg1 animated:(_Bool)arg2 blink:(_Bool)arg3;
@end

@interface UITextField (SUScriptTextFieldAdditions)
- (void)configureFromScriptTextField:(id)arg1;
@end

@interface UIView (SUAdditions)
- (id)superviewOfClass:(Class)arg1;
- (void)centerSubviewInBounds:(id)arg1;
@end

@interface UIView (SUPPT)
- (id)firstScrollViewDescendant;
- (id)_firstDescendantOfKind:(Class)arg1;
@end

@interface UIViewController (SUAdditions)
@property(readonly, nonatomic) SUViewControllerFactory *viewControllerFactory;
@property(readonly, nonatomic) _Bool shouldInvalidateForMemoryPurge;
- (void)setBadgeValue:(id)arg1 animated:(_Bool)arg2 blink:(_Bool)arg3;
- (id)section;
- (id)_sectionForViewController:(id)arg1;
- (void)restoreArchivableContext:(id)arg1;
- (void)resetRestoredContext;
- (void)parentViewControllerHierarchyDidChange;
- (void)keyboardWillShowWithInfo:(id)arg1;
- (void)keyboardWillHideWithInfo:(id)arg1;
- (void)keyboardDidShowWithInfo:(id)arg1;
- (void)keyboardDidHideWithInfo:(id)arg1;
- (_Bool)isRootViewController;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded;
- (_Bool)isInMoreList;
- (_Bool)isDescendantOfViewController:(id)arg1;
- (void)iTunesStoreUI_dismissAction:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (id)copyArchivableJetsamContext;
- (id)copyArchivableContext;
@end

@interface UIViewController (SUOverlayBackgroundAdditions)
- (_Bool)presentViewController:(id)arg1 inOverlayWithConfiguration:(id)arg2;
- (_Bool)presentOverlayViewController:(id)arg1 withTransition:(id)arg2;
- (_Bool)presentOverlayBackgroundViewController:(id)arg1;
- (id)overlayBackgroundViewController;
- (void)dismissOverlayBackgroundViewController;
@end

@interface UIViewController (SUOverlayViewControllerAdditions)
- (id)scriptWindowContext;
- (id)overlayViewController;
@end

@interface UIViewController (SUScriptAdditions)
- (id)copyObjectForScriptFromPoolWithClass:(Class)arg1;
@end

@interface UIViewController (SUScriptNavigationItemAdditions)
- (id)navigationItemForScriptInterface;
@end

@interface UIViewController (SUScriptStorePageViewControllerAdditions)
- (_Bool)showsBackgroundShadow;
- (void)setShowsBackgroundShadow:(_Bool)arg1;
@end

@interface UIViewController (SUScriptViewControllerAdditions)
- (id)copyScriptViewController;
@end

@interface UIViewController (SUSearchFieldController)
- (id)iTunesStoreUI_searchFieldController;
@end

@interface UIViewController (SUSectionedViewControllerAdditions)
- (id)setDisplayedSectionGroup:(id)arg1;
- (_Bool)reloadForSectionsWithGroup:(id)arg1;
- (_Bool)canDisplaySectionGroup:(id)arg1;
@end

@interface UIViewController (SUSplitViewAdditions)
- (id)storeSplitViewController;
- (struct CGSize)minimumViewSize;
- (struct CGSize)maximumViewSize;
@end

@interface UIViewController (SUStorePageAdditions)
- (_Bool)reloadWithURLRequestProperties:(id)arg1;
- (_Bool)pushStorePage:(id)arg1 withTarget:(long long)arg2 animated:(_Bool)arg3;
- (_Bool)loadMoreWithURL:(id)arg1;
- (_Bool)hasDisplayableContent;
- (void)handleStoreFailureWithError:(id)arg1;
@end

@interface UIViewController (SUStorePageChildViewController)
- (_Bool)viewIsReady;
- (void)storePageProtocolDidChange;
@property(retain, nonatomic) SUStorePageProtocol *storePageProtocol;
- (void)storePageCleanupBeforeTearDown;
- (void)reloadWithStorePage:(id)arg1 forURL:(id)arg2;
@property(readonly, nonatomic) struct CGRect documentBounds;
- (id)displayedURL;
@end

@interface UIViewController (SUTabBarControllerAdditions)
- (void)tabBarControllerDidReselectTabBarItem:(id)arg1;
- (void)tabBarControllerDidLongPressTabBarItem:(id)arg1;
@end

@interface UIViewController (SUTabBarControllerPackage)
@property(readonly, nonatomic) long long ITunesStoreUIBarStyle;
@end

@interface UIViewController (SUTransitionSafety)
+ (id)transitionSafetyDelegate;
+ (id)transitionSafePerformer:(id)arg1;
+ (void)endTransitionSafety;
+ (void)beginTransitionSafety;
+ (void)_iTunesStoreUI_timeoutTransitionSafety;
+ (void)_iTunesStoreUI_enqueueTransitionSafeInvocation:(id)arg1;
+ (void)_iTunesStoreUI_dequeueTransitionSafeInvocations;
- (void)transitionSafePresentModalViewController:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIWindow (SUTouchCapture)
- (id)removeTouchCaptureViewWithTag:(long long)arg1;
- (id)addTouchCaptureViewWithTag:(long long)arg1;
@end

@interface WebScriptObject (SUScriptAdditions)
- (id)safeValueForKey:(id)arg1;
- (id)safeCallWebScriptMethod:(id)arg1 withArguments:(id)arg2;
- (id)copyValuesForKeys:(id)arg1;
- (id)copyJSONDataWithContext:(struct OpaqueJSContext *)arg1;
- (id)copyArrayOrDictionaryWithContext:(struct OpaqueJSContext *)arg1;
- (id)copyArrayValueWithValidator:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2;
@end

