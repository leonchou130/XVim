//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/SplashBoard.framework/SplashBoard
// UUID: F53A0297-E40A-3C03-9A82-8A47FA84BF4D
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 17.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BSXPCCoding <NSObject>
- (void)encodeWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
- (id)initWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
@end

@protocol FBApplicationLibraryObserver <NSObject>

@optional
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 networkUsageDidChange:(_Bool)arg2;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 didRemoveApplications:(NSArray *)arg2;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 didReplaceApplications:(NSArray *)arg2 withApplications:(NSArray *)arg3;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 didAddApplications:(NSArray *)arg2;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 didCancelPlaceholders:(NSArray *)arg2;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 didAddPlaceholders:(NSArray *)arg2;
@end

@protocol FBApplicationLibraryPreInstallClient <FBApplicationLibraryObserver>

@optional
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 _willNotify_didRemoveApplications:(NSArray *)arg2 completion:(void (^)(void))arg3;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 _willNotify_didReplaceApplications:(NSArray *)arg2 withApplications:(NSArray *)arg3 completion:(void (^)(void))arg4;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 _willNotify_didAddApplications:(NSArray *)arg2 completion:(void (^)(void))arg3;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 _willNotify_didCancelPlaceholders:(NSArray *)arg2 completion:(void (^)(void))arg3;
- (void)applicationLibrary:(FBApplicationLibrary *)arg1 _willNotify_didAddPlaceholders:(NSArray *)arg2 completion:(void (^)(void))arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface FBApplicationInfo (SplashBoardOrientationHelper)
- (_Bool)supportsCompactStatusBarHiding;
- (_Bool)defaultStatusBarHiddenForOrientation:(long long)arg1;
@end

@interface XBApplicationController : NSObject <FBApplicationLibraryPreInstallClient>
{
    FBApplicationLibrary *_applicationLibrary;
}

+ (id)sharedInstance;
@property(retain, nonatomic) FBApplicationLibrary *applicationLibrary; // @synthesize applicationLibrary=_applicationLibrary;
- (void)_captureOrUpdateLaunchImagesForApplications:(id)arg1 firstImageIsReady:(CDUnknownBlockType)arg2;
- (void)_removeCachedLaunchImagesForApplications:(id)arg1 forgetApp:(_Bool)arg2;
- (void)_removeAllCachedLaunchImages;
- (void)applicationLibrary:(id)arg1 didRemoveApplications:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)applicationLibrary:(id)arg1 _willNotify_didReplaceApplications:(id)arg2 withApplications:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)applicationLibrary:(id)arg1 _willNotify_didAddApplications:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XBApplicationLaunchCompatibilityInfo : NSObject <BSXPCCoding>
{
    _Bool _alwaysLaunchesFullScreen;
    _Bool _launchesOpaque;
    NSString *_bundleIdentifier;
    NSString *_bundlePath;
    NSString *_sandboxPath;
    NSString *_launchStoryboardName;
    NSString *_launchNibName;
    NSArray *_launchImageInfos;
}

+ (void)removeCompatibilityInfoForBundleIdentifier:(id)arg1;
+ (id)_compatibilityInfoForBundleIdentifier:(id)arg1 creatingIfNecessaryWithBundle:(id)arg2 andSandboxPath:(id)arg3;
+ (id)compatibilityInfoForBundleIdentifier:(id)arg1;
@property(retain, nonatomic) NSArray *launchImageInfos; // @synthesize launchImageInfos=_launchImageInfos;
@property(nonatomic) _Bool launchesOpaque; // @synthesize launchesOpaque=_launchesOpaque;
@property(nonatomic) _Bool alwaysLaunchesFullScreen; // @synthesize alwaysLaunchesFullScreen=_alwaysLaunchesFullScreen;
@property(copy, nonatomic) NSString *launchNibName; // @synthesize launchNibName=_launchNibName;
@property(copy, nonatomic) NSString *launchStoryboardName; // @synthesize launchStoryboardName=_launchStoryboardName;
@property(copy, nonatomic) NSString *sandboxPath; // @synthesize sandboxPath=_sandboxPath;
@property(copy, nonatomic) NSString *bundlePath; // @synthesize bundlePath=_bundlePath;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (id)_pathForLaunchImageWithName:(id)arg1 sceneID:(id)arg2 scale:(double)arg3 size:(struct CGSize)arg4 downscaled:(_Bool)arg5 interfaceOrientation:(long long)arg6;
- (id)appLaunchImagePathForSceneID:(id)arg1 downscaled:(_Bool)arg2;
- (id)_baseAppLaunchImagePath;
- (id)_snapshotSceneContainerNameForSceneID:(id)arg1;
- (id)_snapshotContainerName;
- (void)addLaunchImageForRequest:(id)arg1 finalOrientation:(long long)arg2 ifCreatedAt:(CDUnknownBlockType)arg3;
- (id)pathForLaunchImageWithRequest:(id)arg1 launchingOrientation:(long long *)arg2;
- (id)_infoForLaunchImageWithRequest:(id)arg1 createIfNeeded:(_Bool)arg2 launchingOrientation:(long long *)arg3;
- (id)infoForLaunchImageWithRequest:(id)arg1 launchingOrientation:(long long *)arg2;
@property(readonly, nonatomic) _Bool allowsSavingLaunchImages;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)initWithBundle:(id)arg1;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (void)purgeSavedImages;
- (id)savedLaunchImagesDirectory;
- (void)_writeOutChanges;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XBLaunchImage : UIImage
{
}

@end

@interface XBLaunchImageContextHostView : UIView
{
    id _delegate;
    NSString *_bundleID;
    CALayerHost *_contentLayer;
    _Bool _saved;
    double _remoteScale;
    CDUnknownBlockType _captureBlock;
}

@property(copy, nonatomic) CDUnknownBlockType captureBlock; // @synthesize captureBlock=_captureBlock;
@property(nonatomic) double remoteScale; // @synthesize remoteScale=_remoteScale;
@property(nonatomic, getter=isSaved) _Bool saved; // @synthesize saved=_saved;
- (void)disconnect;
- (void)didMoveToSuperview;
- (void)dealloc;
- (unsigned int)contextId;
- (void)connectToContextID:(unsigned int)arg1 bundleID:(id)arg2;

@end

@interface XBLaunchImageInfo : NSObject <BSXPCCoding>
{
    _Bool _isSnapshot;
    _Bool _isOpaque;
    _Bool _isDownscaled;
    long long _orientation;
    double _scale;
    NSString *_path;
    UIImage *_image;
    struct CGSize _size;
}

@property(nonatomic) _Bool isDownscaled; // @synthesize isDownscaled=_isDownscaled;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(nonatomic) _Bool isOpaque; // @synthesize isOpaque=_isOpaque;
@property(nonatomic) _Bool isSnapshot; // @synthesize isSnapshot=_isSnapshot;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface XBLaunchImageProvider : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableDictionary *_clients;
}

+ (void *)createIOSurfaceWithContextIds:(const unsigned int *)arg1 count:(unsigned long long)arg2 frame:(struct CGRect)arg3 scale:(double)arg4 orientation:(long long)arg5 outTransform:(struct CGAffineTransform *)arg6;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *clients; // @synthesize clients=_clients;
- (void)launchImageViewDidGetRemovedFromViewHierarchy:(id)arg1 forApplicationWithBundleID:(id)arg2;
- (id)launchImageViewForApplicationWithCompatibilityInfo:(id)arg1 launchRequest:(id)arg2;
- (void)captureLaunchImageApplicationWithCompatibilityInfo:(id)arg1 launchRequests:(id)arg2 firstImageIsReady:(CDUnknownBlockType)arg3;
- (id)_clientForApplicationWithBundleID:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface XBLaunchImageProviderClient : BSBaseXPCClient
{
}

- (void)_sendMessageType:(long long)arg1 withMessage:(CDUnknownBlockType)arg2 withReplyHandler:(CDUnknownBlockType)arg3 waitForReply:(_Bool)arg4;
- (void)killService;
- (void)launchImageForApplicationWithCompatibilityInfo:(id)arg1 launchRequest:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_connectionInstanceUUID;
- (id)initWithEndpoint:(id)arg1;
- (id)init;

@end

@interface XBLaunchStateRequest : NSObject <BSXPCCoding>
{
    _Bool _isMainScene;
    _Bool _isLaunchingLive;
    NSString *_sceneID;
    double _scale;
    unsigned long long _statusBarState;
    long long _launchingOrientation;
    long long _currentOrientation;
    struct CGRect _statusBarJailRect;
    struct CGRect _screenBounds;
}

@property(nonatomic) long long currentOrientation; // @synthesize currentOrientation=_currentOrientation;
@property(nonatomic) long long launchingOrientation; // @synthesize launchingOrientation=_launchingOrientation;
@property(nonatomic) unsigned long long statusBarState; // @synthesize statusBarState=_statusBarState;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(nonatomic) struct CGRect screenBounds; // @synthesize screenBounds=_screenBounds;
@property(nonatomic) struct CGRect statusBarJailRect; // @synthesize statusBarJailRect=_statusBarJailRect;
@property(nonatomic) _Bool isLaunchingLive; // @synthesize isLaunchingLive=_isLaunchingLive;
@property(nonatomic) _Bool isMainScene; // @synthesize isMainScene=_isMainScene;
@property(copy, nonatomic) NSString *sceneID; // @synthesize sceneID=_sceneID;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

