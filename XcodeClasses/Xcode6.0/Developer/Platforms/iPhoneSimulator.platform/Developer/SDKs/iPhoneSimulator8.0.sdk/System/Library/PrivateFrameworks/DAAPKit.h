//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct DKDAAPElementCore;

struct shared_ptr<DKDAAPElementCore> {
    struct DKDAAPElementCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

#pragma mark Typedef'd Structures

// Template types
typedef struct shared_ptr<DKDAAPElementCore> {
    struct DKDAAPElementCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0d630658;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/DAAPKit.framework/DAAPKit
// UUID: 48C8060D-2316-3901-8B5B-C2ABEB14F32E
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 30.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol DKDAAPParserDelegate <NSObject>

@optional
- (void)parser:(DKDAAPParser *)arg1 didEndContainerCode:(unsigned int)arg2;
- (void)parser:(DKDAAPParser *)arg1 didParseDataCode:(unsigned int)arg2 bytes:(char *)arg3 contentLength:(unsigned int)arg4;
- (void)parser:(DKDAAPParser *)arg1 didStartContainerCode:(unsigned int)arg2 contentLength:(unsigned int)arg3;
- (_Bool)parser:(DKDAAPParser *)arg1 shouldParseCodeAsContainer:(unsigned int)arg2;
- (_Bool)parser:(DKDAAPParser *)arg1 shouldParseCode:(unsigned int)arg2;
- (void)parser:(DKDAAPParser *)arg1 didFailWithError:(NSError *)arg2;
- (void)parserDidCancel:(DKDAAPParser *)arg1;
- (void)parserDidFinish:(DKDAAPParser *)arg1;
- (void)parserDidStart:(DKDAAPParser *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@interface DKDAAPParser : NSObject
{
    NSMutableArray *_containerStack;
    DKDAAPParserContext *_propertyParseContext;
    _Bool _parsing;
    _Bool _finished;
    _Bool _canceled;
    id <DKDAAPParserDelegate> _delegate;
}

@property(nonatomic, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(nonatomic, getter=isParsing) _Bool parsing; // @synthesize parsing=_parsing;
@property(nonatomic) __weak id <DKDAAPParserDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)callDelegateDidEndContainerCode:(unsigned int)arg1;
- (void)callDelegateDidParseDataCode:(unsigned int)arg1 bytes:(char *)arg2 contentLength:(unsigned int)arg3;
- (void)callDelegateDidStartContainerCode:(unsigned int)arg1 contentLength:(unsigned int)arg2;
- (_Bool)callDelegateShouldParseCodeAsContainer:(unsigned int)arg1;
- (_Bool)callDelegateShouldParseCode:(unsigned int)arg1;
- (void)callDelegateDidFailWithError:(id)arg1;
- (void)callDelegateDidCancel;
- (void)callDelegateDidFinish;
- (void)callDelegateDidStart;
- (unsigned int)parseInputBuffer:(id)arg1;
- (void)cancel;
- (void)parse;
- (void)prepareForParse;

@end

@interface DKDAAPDataParser : DKDAAPParser
{
    NSData *_dataInputBuffer;
}

- (void).cxx_destruct;
- (void)parse;
- (id)initWithData:(id)arg1;

@end

@interface DKDAAPElement : NSObject
{
    shared_ptr_0d630658 _core;
    DKDAAPElement *_cachedParent;
}

+ (id)elementWithCoreElement:(shared_ptr_0d630658)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)childWithCode:(unsigned int)arg1;
- (id)childAtIndex:(unsigned int)arg1;
- (void)addChild:(id)arg1;
- (unsigned int)numChildren;
- (id)getDataValue;
- (id)getStringValue;
- (long long)getIntValue;
@property(nonatomic) _Bool isContainer;
- (void)setBytes:(char *)arg1 ofLength:(unsigned int)arg2 copy:(_Bool)arg3;
- (void)setBytes:(char *)arg1 ofLength:(unsigned int)arg2;
@property(readonly, nonatomic) unsigned int length;
@property(readonly, nonatomic) char *bytes;
@property(nonatomic) unsigned int code;
@property(nonatomic) __weak DKDAAPElement *parent;
- (shared_ptr_0d630658)core;
- (id)initWithCode:(unsigned int)arg1;
- (id)initWithCoreElement:(shared_ptr_0d630658)arg1;

@end

@interface DKDAAPElementParser : DKDAAPDataParser <DKDAAPParserDelegate>
{
    CDUnknownBlockType _completionHandler;
    DKDAAPElement *_rootElement;
    DKDAAPElement *_curContainerElement;
    NSError *_parseError;
    _Bool _copyElementData;
}

- (void).cxx_destruct;
- (void)_finishParserWithError:(id)arg1;
- (void)parser:(id)arg1 didEndContainerCode:(unsigned int)arg2;
- (void)parser:(id)arg1 didParseDataCode:(unsigned int)arg2 bytes:(char *)arg3 contentLength:(unsigned int)arg4;
- (void)parser:(id)arg1 didStartContainerCode:(unsigned int)arg2 contentLength:(unsigned int)arg3;
- (_Bool)parser:(id)arg1 shouldParseCodeAsContainer:(unsigned int)arg2;
- (_Bool)parser:(id)arg1 shouldParseCode:(unsigned int)arg2;
- (void)parser:(id)arg1 didFailWithError:(id)arg2;
- (void)parserDidCancel:(id)arg1;
- (void)parserDidFinish:(id)arg1;
- (void)parseWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)parseElementDataWithError:(id *)arg1;
- (id)initWithData:(id)arg1 copyElementData:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DKDAAPInputStreamParser : DKDAAPParser <NSStreamDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSMutableData *_streamInputBuffer;
    unsigned char _streamReadBuffer[10240];
    NSInputStream *_inputStream;
}

@property(readonly, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)setFinished:(_Bool)arg1;
- (void)parse;
- (id)initWithStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface DKDAAPParserContext : NSObject
{
    _Bool _parsing;
    unsigned int _code;
    unsigned int _length;
    unsigned int _remaining;
}

@property(nonatomic) _Bool parsing; // @synthesize parsing=_parsing;
@property(nonatomic) unsigned int remaining; // @synthesize remaining=_remaining;
@property(nonatomic) unsigned int length; // @synthesize length=_length;
@property(nonatomic) unsigned int code; // @synthesize code=_code;

@end

@interface DKDAAPWriter : NSObject <NSStreamDelegate>
{
    NSObject<OS_dispatch_queue> *_outputStreamAccessQueue;
    NSMutableArray *_containerStack;
    _DKDAAPWriterContainer *_currentContainer;
    NSOutputStream *_outputStream;
    unsigned long long _state;
}

@property(readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
@property(readonly, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
- (void).cxx_destruct;
- (id)_writeDataToOutputStream:(id)arg1;
- (void)writeContainerData:(id)arg1;
- (void)writeBytes:(char *)arg1 ofLength:(unsigned int)arg2 withCode:(unsigned int)arg3;
- (void)writeCString:(const char *)arg1 withCode:(unsigned int)arg2;
- (void)writeString:(id)arg1 withCode:(unsigned int)arg2;
- (void)writeSInt64:(long long)arg1 withCode:(unsigned int)arg2;
- (void)writeUInt64:(unsigned long long)arg1 withCode:(unsigned int)arg2;
- (void)writeSInt32:(int)arg1 withCode:(unsigned int)arg2;
- (void)writeUInt32:(unsigned int)arg1 withCode:(unsigned int)arg2;
- (void)writeSInt16:(short)arg1 withCode:(unsigned int)arg2;
- (void)writeUInt16:(unsigned short)arg1 withCode:(unsigned int)arg2;
- (void)writeSInt8:(BOOL)arg1 withCode:(unsigned int)arg2;
- (void)writeUInt8:(unsigned char)arg1 withCode:(unsigned int)arg2;
- (void)writeData:(id)arg1 withCode:(unsigned int)arg2;
- (void)endContainerWithCode:(unsigned int)arg1;
- (void)startContainerWithCode:(unsigned int)arg1;
- (void)close;
- (id)initWithStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _DKDAAPStreamWriter : NSObject <NSStreamDelegate>
{
    NSOutputStream *_outputStream;
    NSObject<OS_dispatch_queue> *_queue;
    NSData *_data;
    long long _dataOffset;
    CDUnknownBlockType _completionBlock;
}

- (void).cxx_destruct;
- (void)_invokeCompletionWithError:(id)arg1;
- (void)_handleSpaceAvailable;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)writeData:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)initWithStream:(id)arg1 queue:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _DKDAAPWriterContainer : NSObject
{
    unsigned int _code;
    NSMutableData *_childData;
}

@property(retain) NSMutableData *childData; // @synthesize childData=_childData;
@property(readonly) unsigned int code; // @synthesize code=_code;
- (void).cxx_destruct;
- (id)formattedOutputData;
- (id)initWithCode:(unsigned int)arg1;

@end

