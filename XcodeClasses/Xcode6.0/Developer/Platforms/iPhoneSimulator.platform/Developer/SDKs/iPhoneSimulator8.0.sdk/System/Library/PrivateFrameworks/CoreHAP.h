//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct HTTPMessagePrivate {
    struct __CFRuntimeBase {
        unsigned long long _field1;
        unsigned char _field2[4];
        unsigned int _field3;
    } _field1;
    struct HTTPMessagePrivate *_field2;
    struct {
        char _field1[8192];
        unsigned long long _field2;
        char *_field3;
        unsigned long long _field4;
        char *_field5;
        unsigned long long _field6;
        int _field7;
        char *_field8;
        unsigned long long _field9;
        struct {
            char *_field1;
            unsigned long long _field2;
            char *_field3;
            unsigned long long _field4;
            char *_field5;
            unsigned long long _field6;
            char *_field7;
            unsigned long long _field8;
            char *_field9;
            unsigned long long _field10;
            char *_field11;
            unsigned long long _field12;
            char *_field13;
            unsigned long long _field14;
            char *_field15;
            char *_field16;
        } _field10;
        char *_field11;
        unsigned long long _field12;
        int _field13;
        char *_field14;
        unsigned long long _field15;
        unsigned char _field16;
        unsigned long long _field17;
        unsigned char _field18;
        int _field19;
    } _field3;
    unsigned char _field4;
    int _field5;
    unsigned char _field6;
    char *_field7;
    unsigned long long _field8;
    unsigned long long _field9;
    unsigned long long _field10;
    unsigned char _field11[32000];
    char *_field12;
    struct iovec _field13[2];
    struct iovec *_field14;
    int _field15;
    unsigned long long _field16;
    int _field17;
    int _field18;
    int _field19;
    void *_field20;
    void *_field21;
    void *_field22;
    void *_field23;
    void *_field24;
    void *_field25;
    CDUnknownFunctionPointerType _field26;
    CDUnknownBlockType _field27;
};

struct iovec {
    void *_field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
// UUID: 73B28EC0-7F68-3D4F-92A3-2B7A367FA4DD
//
//                           Arch: x86_64
//                Current version: 78.0.0
//          Compatibility version: 1.0.0
//                 Source version: 78.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CBCentralManagerDelegate <NSObject>
- (void)centralManagerDidUpdateState:(CBCentralManager *)arg1;

@optional
- (void)centralManager:(CBCentralManager *)arg1 didDisconnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didFailToConnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didConnectPeripheral:(CBPeripheral *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 didDiscoverPeripheral:(CBPeripheral *)arg2 advertisementData:(NSDictionary *)arg3 RSSI:(NSNumber *)arg4;
- (void)centralManager:(CBCentralManager *)arg1 didRetrieveConnectedPeripherals:(NSArray *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 didRetrievePeripherals:(NSArray *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 willRestoreState:(NSDictionary *)arg2;
@end

@protocol CBPeripheralDelegate <NSObject>

@optional
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateNotificationStateForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverCharacteristicsForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverIncludedServicesForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverServices:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didReadRSSI:(NSNumber *)arg2 error:(NSError *)arg3;
- (void)peripheralDidUpdateRSSI:(CBPeripheral *)arg1 error:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didModifyServices:(NSArray *)arg2;
- (void)peripheralDidInvalidateServices:(CBPeripheral *)arg1;
- (void)peripheralDidUpdateName:(CBPeripheral *)arg1;
@end

@protocol HAPHTTPClientDebugDelegate <NSObject>
- (void)httpClient:(HAPHTTPClient *)arg1 willSendHTTPMessageWithHeaders:(NSData *)arg2 body:(NSData *)arg3;
- (void)httpClient:(HAPHTTPClient *)arg1 didReceiveHTTPMessageWithHeaders:(NSData *)arg2 body:(NSData *)arg3;
@end

@protocol HAPHTTPClientDelegate <NSObject>
- (void)httpClientDidCloseConnectionDueToServer:(HAPHTTPClient *)arg1;
- (void)httpClient:(HAPHTTPClient *)arg1 didReceiveEvent:(id)arg2;
@end

@protocol HAPKeyStore <NSObject>
- (_Bool)removeAllAccessoryKeys:(id *)arg1;
- (_Bool)removeAccessoryKeyForName:(NSString *)arg1 error:(id *)arg2;
- (_Bool)registerAccessoryWithHomeKit:(NSString *)arg1 error:(id *)arg2;
- (_Bool)savePublicKey:(NSData *)arg1 forAccessoryName:(NSString *)arg2 error:(id *)arg3;
- (NSData *)readPublicKeyForAccessoryName:(NSString *)arg1 registeredWithHomeKit:(_Bool *)arg2 error:(id *)arg3;
- (_Bool)removeControllerKeyPairForIdentifier:(NSString *)arg1 error:(id *)arg2;
- (_Bool)getCurrentiCloudIdentifier:(id *)arg1 controllerPairingIdentifier:(id *)arg2 error:(id *)arg3;
- (_Bool)updateCurrentiCloudIdentifier:(NSString *)arg1 controllerPairingIdentifier:(NSString *)arg2 error:(id *)arg3;
- (_Bool)removeControllerKeyPairWithError:(id *)arg1;
- (_Bool)getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 username:(id *)arg3 allowCreation:(_Bool)arg4 error:(id *)arg5;

@optional
- (NSDictionary *)getPeripherialIdentifiersAndAccessoryNames;
- (NSUUID *)readPeripheralIdentifierForAccessoryName:(NSString *)arg1 error:(id *)arg2;
- (_Bool)deleteAllPeripheralIdentifiers:(id *)arg1;
- (_Bool)deletePeripheralIdentifierForAccessoryName:(NSString *)arg1 error:(id *)arg2;
- (_Bool)updatePeripheralIdentifier:(NSUUID *)arg1 forAccessoryName:(NSString *)arg2 error:(id *)arg3;
- (_Bool)savePeripheralIdentifier:(NSUUID *)arg1 forAccessoryName:(NSString *)arg2 error:(id *)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@interface HAPAccessory : NSObject
{
    _Bool _primary;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    HAPAccessoryServer *_server;
    NSNumber *_instanceID;
    NSString *_uniqueIdentifier;
    NSArray *_services;
    NSString *_name;
    NSString *_model;
    NSString *_manufacturer;
    NSString *_serialNumber;
}

+ (_Bool)isAccessoryWithUniqueIdentifier:(id)arg1 bridgedToServerWithIdentifier:(id)arg2;
+ (_Bool)isAccessoryWithUniqueIdentifierPrimary:(id)arg1;
+ (id)serverIdentifierForUniqueIdentifier:(id)arg1;
+ (_Bool)isAccessoryWithUniqueIdentifierPaired:(id)arg1;
@property(copy, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
@property(copy, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property(copy, nonatomic) NSString *model; // @synthesize model=_model;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSArray *services; // @synthesize services=_services;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy, nonatomic) NSNumber *instanceID; // @synthesize instanceID=_instanceID;
@property(nonatomic, getter=isPrimary) _Bool primary; // @synthesize primary=_primary;
@property(nonatomic) __weak HAPAccessoryServer *server; // @synthesize server=_server;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
- (void).cxx_destruct;
- (_Bool)_updateForAccessoryInformationService;
- (_Bool)_updateService:(id)arg1;
- (_Bool)_updateAndValidateServices;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) long long linkType;
- (id)description;
- (id)initWithInstanceID:(id)arg1;
- (id)initWithInstanceID:(id)arg1 parsedServices:(id)arg2;

@end

@interface HAPAccessoryServer : NSObject
{
    _Bool _reachable;
    _Bool _paired;
    _Bool _unconnected;
    NSString *_identifier;
    NSString *_name;
    HAPAccessory *_primaryAccessory;
    NSArray *_accessories;
    NSString *_pairSetupPassword;
    NSString *_homeName;
    id <HAPKeyStore> _keyStore;
}

+ (_Bool)isAccessoryServerWithIdentifierPaired:(id)arg1 keyStore:(id)arg2;
@property(nonatomic) __weak id <HAPKeyStore> keyStore; // @synthesize keyStore=_keyStore;
@property(nonatomic, getter=isUnconnected) _Bool unconnected; // @synthesize unconnected=_unconnected;
@property(readonly, nonatomic, getter=isPaired) _Bool paired; // @synthesize paired=_paired;
@property(copy, nonatomic) NSString *homeName; // @synthesize homeName=_homeName;
@property(copy, nonatomic) NSString *pairSetupPassword; // @synthesize pairSetupPassword=_pairSetupPassword;
@property(copy, nonatomic) NSArray *accessories; // @synthesize accessories=_accessories;
@property(retain, nonatomic) HAPAccessory *primaryAccessory; // @synthesize primaryAccessory=_primaryAccessory;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic, getter=isReachable) _Bool reachable; // @synthesize reachable=_reachable;
- (void).cxx_destruct;
- (void)identifyWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)removePairingForControllerWithName:(id)arg1 publicKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)pairAdditionalControllerWithName:(id)arg1 publicKey:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)tryPairingPassword:(id)arg1 error:(id *)arg2;
- (_Bool)stopPairingWithError:(id *)arg1;
- (void)continuePairingAfterAuthPrompt;
- (void)startPairing;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (void)enableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)readValueForDescriptor:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)discoverDescriptorsForCharacteristic:(id)arg1;
- (void)discoverCharacteristics:(id)arg1 forService:(id)arg2;
- (void)discoverServices:(id)arg1 forAccessory:(id)arg2;
- (void)discoverAccessories;
- (id)briefDescription;
@property(readonly, nonatomic) long long linkType;
- (id)init;

@end

@interface HAPAccessoryServerBTLE : HAPAccessoryServer <CBPeripheralDelegate>
{
    struct PairingSessionPrivate *_pairingSession;
    _Bool _startPairingRequested;
    _Bool _disconnecting;
    _Bool _unpairedIdentifyRequested;
    _Bool _removeOnDisconnect;
    CBPeripheral *_peripheral;
    HAPAccessoryServerBrowserBTLE *_browser;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _state;
    id <HAPAccessoryServerBTLEDelegatePrivate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSMapTable *_btleServiceToHAPServiceMap;
    unsigned long long _characteristicDiscoveryRequestCount;
    unsigned long long _availableInstanceID;
    NSMapTable *_btleCharacteristicToHAPCharacteristicMap;
    NSMapTable *_hapCharacteristicReadCompletionQueues;
    NSMapTable *_hapCharacteristicWriteCompletionQueues;
    CBService *_pairingService;
    CBCharacteristic *_pairSetupCharacteristic;
    CBCharacteristic *_pairVerifyCharacteristic;
    CBCharacteristic *_pairingFeaturesCharacteristic;
    CBCharacteristic *_pairingsCharacteristic;
    CBService *_accessoryInfoService;
    CBCharacteristic *_identifyCharacteristic;
    CBCharacteristic *_modelCharacteristic;
    CBCharacteristic *_serialNumberCharacteristic;
    CBCharacteristic *_manufacturerCharacteristic;
    NSString *_controllerUsername;
    NSString *_accessoryPairingUsername;
    CDUnknownBlockType _pairVerifyCompletionBlock;
    NSData *_sessionReadKey;
    NSMutableData *_readNonce;
    NSData *_sessionWriteKey;
    NSMutableData *_writeNonce;
    NSObject<OS_dispatch_source> *_connectionLifetimeTimer;
    CDUnknownBlockType _unpairedIdentifyCompletionBlock;
}

+ (id)_convertFromBTLEToHAPUUID:(id)arg1;
@property(nonatomic) _Bool removeOnDisconnect; // @synthesize removeOnDisconnect=_removeOnDisconnect;
@property(copy, nonatomic) CDUnknownBlockType unpairedIdentifyCompletionBlock; // @synthesize unpairedIdentifyCompletionBlock=_unpairedIdentifyCompletionBlock;
@property(nonatomic) _Bool unpairedIdentifyRequested; // @synthesize unpairedIdentifyRequested=_unpairedIdentifyRequested;
@property(nonatomic, getter=isDisconnecting) _Bool disconnecting; // @synthesize disconnecting=_disconnecting;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *connectionLifetimeTimer; // @synthesize connectionLifetimeTimer=_connectionLifetimeTimer;
@property(retain, nonatomic) NSMutableData *writeNonce; // @synthesize writeNonce=_writeNonce;
@property(retain, nonatomic) NSData *sessionWriteKey; // @synthesize sessionWriteKey=_sessionWriteKey;
@property(retain, nonatomic) NSMutableData *readNonce; // @synthesize readNonce=_readNonce;
@property(retain, nonatomic) NSData *sessionReadKey; // @synthesize sessionReadKey=_sessionReadKey;
@property(nonatomic) _Bool startPairingRequested; // @synthesize startPairingRequested=_startPairingRequested;
@property(copy, nonatomic) CDUnknownBlockType pairVerifyCompletionBlock; // @synthesize pairVerifyCompletionBlock=_pairVerifyCompletionBlock;
@property(retain, nonatomic) NSString *accessoryPairingUsername; // @synthesize accessoryPairingUsername=_accessoryPairingUsername;
@property(retain, nonatomic) NSString *controllerUsername; // @synthesize controllerUsername=_controllerUsername;
@property(retain, nonatomic) CBCharacteristic *manufacturerCharacteristic; // @synthesize manufacturerCharacteristic=_manufacturerCharacteristic;
@property(retain, nonatomic) CBCharacteristic *serialNumberCharacteristic; // @synthesize serialNumberCharacteristic=_serialNumberCharacteristic;
@property(retain, nonatomic) CBCharacteristic *modelCharacteristic; // @synthesize modelCharacteristic=_modelCharacteristic;
@property(retain, nonatomic) CBCharacteristic *identifyCharacteristic; // @synthesize identifyCharacteristic=_identifyCharacteristic;
@property(retain, nonatomic) CBService *accessoryInfoService; // @synthesize accessoryInfoService=_accessoryInfoService;
@property(retain, nonatomic) CBCharacteristic *pairingsCharacteristic; // @synthesize pairingsCharacteristic=_pairingsCharacteristic;
@property(retain, nonatomic) CBCharacteristic *pairingFeaturesCharacteristic; // @synthesize pairingFeaturesCharacteristic=_pairingFeaturesCharacteristic;
@property(retain, nonatomic) CBCharacteristic *pairVerifyCharacteristic; // @synthesize pairVerifyCharacteristic=_pairVerifyCharacteristic;
@property(retain, nonatomic) CBCharacteristic *pairSetupCharacteristic; // @synthesize pairSetupCharacteristic=_pairSetupCharacteristic;
@property(retain, nonatomic) CBService *pairingService; // @synthesize pairingService=_pairingService;
@property(retain, nonatomic) NSMapTable *hapCharacteristicWriteCompletionQueues; // @synthesize hapCharacteristicWriteCompletionQueues=_hapCharacteristicWriteCompletionQueues;
@property(retain, nonatomic) NSMapTable *hapCharacteristicReadCompletionQueues; // @synthesize hapCharacteristicReadCompletionQueues=_hapCharacteristicReadCompletionQueues;
@property(retain, nonatomic) NSMapTable *btleCharacteristicToHAPCharacteristicMap; // @synthesize btleCharacteristicToHAPCharacteristicMap=_btleCharacteristicToHAPCharacteristicMap;
@property(nonatomic) unsigned long long availableInstanceID; // @synthesize availableInstanceID=_availableInstanceID;
@property(nonatomic) unsigned long long characteristicDiscoveryRequestCount; // @synthesize characteristicDiscoveryRequestCount=_characteristicDiscoveryRequestCount;
@property(retain, nonatomic) NSMapTable *btleServiceToHAPServiceMap; // @synthesize btleServiceToHAPServiceMap=_btleServiceToHAPServiceMap;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <HAPAccessoryServerBTLEDelegatePrivate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak HAPAccessoryServerBrowserBTLE *browser; // @synthesize browser=_browser;
@property(retain, nonatomic) CBPeripheral *peripheral; // @synthesize peripheral=_peripheral;
- (void).cxx_destruct;
- (_Bool)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_handlePairingsReadForCharacteristic:(id)arg1 readError:(id)arg2 removing:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_handlePairingsWriteForCharacteristic:(id)arg1 writeError:(id)arg2 removing:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_addPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)addPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)identifyWithCompletion:(CDUnknownBlockType)arg1;
- (void)_handleConnectionLifetimeTimeout;
- (void)_cancelConnectionLifetimeTimer;
- (void)_updateConnectionLifetimeTimer;
- (int)_handlePairVerifyExchangeWithData:(id)arg1;
- (int)_pairVerifyStart;
- (int)_pairSetupTryPassword:(id)arg1;
- (int)_handlePairSetupExchangeWithData:(id)arg1;
- (int)_pairSetupStart;
- (int)_ensurePairingSessionIsInitializedWithType:(unsigned int)arg1;
- (void)_establishSecureSession;
- (_Bool)_isSessionEstablished;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didModifyServices:(id)arg2;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (id)_pairVerifyHAPCharacteristic;
- (id)_pairSetupHAPCharacteristic;
- (void)_notifyDelegateOfSentPlaintextData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_notifyDelegateOfSentEncryptedAuthenticatedData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_notifyDelegateOfReceivedPlaintextData:(id)arg1 forCharacteristic:(id)arg2;
- (void)_notifyDelegateOfReceivedEncryptedAuthenticatedData:(id)arg1 forCharacteristic:(id)arg2;
- (_Bool)_shouldEnableSessionSecurity;
- (id)_hapCharacteristicForBTLECharacteristic:(id)arg1;
- (id)_btleCharacteristicForHAPCharacteristic:(id)arg1;
- (_Bool)_delegateRespondsToSelector:(SEL)arg1;
- (id)_nextInstanceID;
- (id)_parseBTLEService:(id)arg1;
- (void)_handleHAPCharacteristicDiscoveryForService:(id)arg1 error:(id)arg2;
- (void)_handleHAPServiceDiscovery;
- (void)_getAttributeDatabase;
- (void)discoverAccessories;
- (id)_decryptData:(id)arg1 error:(id *)arg2;
- (id)_encryptDataAndGenerateAuthTag:(id)arg1;
- (void)_handleUpdatedValueForBTLECharacteristic:(id)arg1 error:(id)arg2;
- (void)_readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_readValueForCharacteristic:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2 queue:(id)arg3;
- (void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)_convertFromBTLEValue:(id)arg1 metadata:(id)arg2;
- (void)_handleHAPWriteConfirmationForCharacteristic:(id)arg1 error:(id)arg2;
- (id)_convertValueToTLV:(id)arg1 characteristic:(id)arg2 error:(id *)arg3;
- (id)_convertToBTLEValue:(id)arg1 metadata:(id)arg2;
- (void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_writeValue:(id)arg1 forCharacteristic:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)_dequeueReadCompletionTupleForCharacteristic:(id)arg1;
- (void)_enqueueReadCompletionHandler:(CDUnknownBlockType)arg1 queue:(id)arg2 forCharacteristic:(id)arg3;
- (CDUnknownBlockType)_dequeueWriteCompletionHandlerForCharacteristic:(id)arg1;
- (void)_enqueueWriteCompletionHandler:(CDUnknownBlockType)arg1 forCharacteristic:(id)arg2;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (id)identifier;
- (_Bool)isPaired;
- (void)_handleDisconnectionWithQueue:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)handleDisconnectionWithError:(id)arg1 withQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_handleSuccessfulBTLEConnection;
- (void)handleConnectionWithError:(id)arg1;
- (void)_setupBTLEConnectionToPeripheral;
- (void)enableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (_Bool)_checkPairedState;
- (_Bool)stopPairingWithError:(id *)arg1;
- (void)_handlePairingStateMachine;
- (_Bool)tryPairingPassword:(id)arg1 error:(id *)arg2;
- (void)continuePairingAfterAuthPrompt;
- (void)startPairing;
- (void)_createPrimaryAccessoryFromAdvertisementData;
- (long long)linkType;
- (id)briefDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)_resetState;
- (id)initWithPeripheral:(id)arg1 name:(id)arg2 pairingUsername:(id)arg3 browser:(id)arg4 keyStore:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HAPAccessoryServerBrowser : NSObject
{
    NSObject<OS_dispatch_queue> *_workQueue;
    id <HAPKeyStore> _keyStore;
}

@property(retain, nonatomic) id <HAPKeyStore> keyStore; // @synthesize keyStore=_keyStore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
- (void).cxx_destruct;
- (void)discoverAccessoryServerWithIdentifier:(id)arg1;
- (void)stopDiscoveringAccessoryServers;
- (void)startDiscoveringAccessoryServers;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (id)initWithQueue:(id)arg1;

@end

@interface HAPAccessoryServerBrowserBTLE : HAPAccessoryServerBrowser <CBCentralManagerDelegate>
{
    _Bool _performingGeneralScan;
    id <HAPAccessoryServerBrowserBTLEDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    CBCentralManager *_centralManager;
    NSMapTable *_discoveredPeripheralsWithAccessories;
    NSObject<OS_dispatch_source> *_lostAccessoryServerTimer;
    NSMutableArray *_powerOnCentralManagerCompletions;
    CDUnknownBlockType _reachabilityCompletion;
    NSMapTable *_peripheralsWithConnectionRequestTuples;
    NSObject<OS_dispatch_source> *_targetedScanTimer;
    NSMutableArray *_targetedScanAccessoryIdentifiers;
    NSMapTable *_identifersWithReachabilityScanTuples;
}

@property(retain, nonatomic) NSMapTable *identifersWithReachabilityScanTuples; // @synthesize identifersWithReachabilityScanTuples=_identifersWithReachabilityScanTuples;
@property(retain, nonatomic) NSMutableArray *targetedScanAccessoryIdentifiers; // @synthesize targetedScanAccessoryIdentifiers=_targetedScanAccessoryIdentifiers;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *targetedScanTimer; // @synthesize targetedScanTimer=_targetedScanTimer;
@property(retain, nonatomic) NSMapTable *peripheralsWithConnectionRequestTuples; // @synthesize peripheralsWithConnectionRequestTuples=_peripheralsWithConnectionRequestTuples;
@property(copy, nonatomic) CDUnknownBlockType reachabilityCompletion; // @synthesize reachabilityCompletion=_reachabilityCompletion;
@property(retain, nonatomic) NSMutableArray *powerOnCentralManagerCompletions; // @synthesize powerOnCentralManagerCompletions=_powerOnCentralManagerCompletions;
@property(nonatomic, getter=isPerformingGeneralScan) _Bool performingGeneralScan; // @synthesize performingGeneralScan=_performingGeneralScan;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *lostAccessoryServerTimer; // @synthesize lostAccessoryServerTimer=_lostAccessoryServerTimer;
@property(retain, nonatomic) NSMapTable *discoveredPeripheralsWithAccessories; // @synthesize discoveredPeripheralsWithAccessories=_discoveredPeripheralsWithAccessories;
@property(retain, nonatomic) CBCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <HAPAccessoryServerBrowserBTLEDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_removeLostAccessoryServers;
- (void)_cancelLostAccessoryServerTimer;
- (void)_setupLostAccessoryServerTimer;
- (void)_handleTargetedScanTimeout;
- (void)_updateTargetedScanTimer;
- (_Bool)_shouldCreateHAPAccessoryServerWithIdentifier:(id)arg1;
- (void)_performTargetedScanForAccessoryWithIdentifier:(id)arg1;
- (void)_handleConnectionRequestCompletionForPeripheral:(id)arg1;
- (void)_performTimedConnectionRequestForIdentifier:(id)arg1;
- (void)_createHAPAccessoryAndNotifyDelegateWithPeripheral:(id)arg1 name:(id)arg2 pairingUsername:(id)arg3;
- (_Bool)_delegateRespondsToSelector:(SEL)arg1;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)_notifyDelegatesOfRemovedAccessoryServer:(id)arg1;
- (void)_performTimedScanForIdentifiers:(id)arg1 workQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_removeIdentifiersForReachabilityScan;
- (void)_probeReachabilityForAccessoryServersWithIdentifiers:(id)arg1 onQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)probeReachabilityForAccessoryServersWithIdentifiers:(id)arg1 onQueue:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)setReachabilityCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_discoverAccessoryServerWithIdentifier:(id)arg1;
- (void)discoverAccessoryServerWithIdentifier:(id)arg1;
- (void)_callPowerOnCompletionsWithError:(id)arg1;
- (void)_powerOnCentralManagerWithCompletion:(CDUnknownBlockType)arg1;
- (void)_startScanningForPairingPeers;
- (void)_stopActiveScan;
- (void)stopDiscoveringAccessoryServers;
- (void)_startDiscoveringAccessoryServers;
- (void)startDiscoveringAccessoryServers;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (id)initWithQueue:(id)arg1;
- (_Bool)_parseAdvertisementData:(id)arg1 forPeripheral:(id)arg2 name:(id *)arg3 pairingUsername:(id *)arg4;
- (void)disconnectFromBTLEAccessoryServer:(id)arg1;
- (void)connectToBTLEAccessoryServer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HAPAccessoryServerBrowserIP : HAPAccessoryServerBrowser
{
    struct BonjourBrowser *_bonjourBrowser;
    NSMutableSet *_discoveredAccessoryServers;
    id <HAPAccessoryServerBrowserDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <HAPAccessoryServerBrowserDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMutableSet *discoveredAccessoryServers; // @synthesize discoveredAccessoryServers=_discoveredAccessoryServers;
- (void).cxx_destruct;
- (_Bool)_delegateRespondsToSelector:(SEL)arg1;
- (void)_invalidateUnpairedAccessoryServers;
- (int)_server:(id *)arg1 forBonjourDevice:(id)arg2;
- (void)_handleBonjourRemoveWithEventInfo:(id)arg1;
- (void)_handleBonjourAddOrUpdateWithEventInfo:(id)arg1;
- (void)_handleBonjourBrowserEvent:(unsigned int)arg1 eventInfo:(id)arg2;
- (void)discoverAccessoryServerWithIdentifier:(id)arg1;
- (void)stopDiscoveringAccessoryServers;
- (void)startDiscoveringAccessoryServers;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (int)_initializeAndStartBonjourBrowser;
- (id)initWithQueue:(id)arg1;

@end

@interface HAPAccessoryServerIP : HAPAccessoryServer <HAPHTTPClientDelegate, HAPHTTPClientDebugDelegate>
{
    struct MFiSAP *_mfiSAP;
    struct PairingSessionPrivate *_pairingSession;
    unsigned long long _featureFlags;
    _Bool _establishingSecureConnection;
    NSString *_deviceID;
    NSString *_model;
    NSString *_protocolVersion;
    NSString *_sourceVersion;
    unsigned long long _configNumber;
    unsigned long long _stateNumber;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSDictionary *_bonjourDeviceInfo;
    id <HAPAccessoryServerIPDelegatePrivate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSString *_accessoryServerName;
    NSArray *_ipServices;
    NSMutableArray *_queuedOperations;
    HAPAccessory *_primaryAccessoryForServer;
    HAPHTTPClient *_httpClient;
    CDUnknownBlockType _pairVerifyCompletionBlock;
    NSString *_controllerUsername;
    CDUnknownBlockType _netServiceResolveCompletionBlock;
}

@property _Bool establishingSecureConnection; // @synthesize establishingSecureConnection=_establishingSecureConnection;
@property(copy, nonatomic) CDUnknownBlockType netServiceResolveCompletionBlock; // @synthesize netServiceResolveCompletionBlock=_netServiceResolveCompletionBlock;
@property(retain, nonatomic) NSString *controllerUsername; // @synthesize controllerUsername=_controllerUsername;
@property(copy, nonatomic) CDUnknownBlockType pairVerifyCompletionBlock; // @synthesize pairVerifyCompletionBlock=_pairVerifyCompletionBlock;
@property(retain, nonatomic) HAPHTTPClient *httpClient; // @synthesize httpClient=_httpClient;
@property(retain, nonatomic) HAPAccessory *primaryAccessoryForServer; // @synthesize primaryAccessoryForServer=_primaryAccessoryForServer;
@property(retain, nonatomic) NSMutableArray *queuedOperations; // @synthesize queuedOperations=_queuedOperations;
@property(retain, nonatomic) NSArray *ipServices; // @synthesize ipServices=_ipServices;
@property(copy, nonatomic) NSString *accessoryServerName; // @synthesize accessoryServerName=_accessoryServerName;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <HAPAccessoryServerIPDelegatePrivate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDictionary *bonjourDeviceInfo; // @synthesize bonjourDeviceInfo=_bonjourDeviceInfo;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(nonatomic) unsigned long long stateNumber; // @synthesize stateNumber=_stateNumber;
@property(nonatomic) unsigned long long configNumber; // @synthesize configNumber=_configNumber;
@property(copy, nonatomic) NSString *sourceVersion; // @synthesize sourceVersion=_sourceVersion;
@property(copy, nonatomic) NSString *protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property(copy, nonatomic) NSString *model; // @synthesize model=_model;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
- (void).cxx_destruct;
- (_Bool)_delegateRespondsToSelector:(SEL)arg1;
- (void)identifyWithCompletion:(CDUnknownBlockType)arg1;
- (void)httpClient:(id)arg1 willSendHTTPMessageWithHeaders:(id)arg2 body:(id)arg3;
- (void)httpClient:(id)arg1 didReceiveHTTPMessageWithHeaders:(id)arg2 body:(id)arg3;
- (_Bool)removePairingForCurrentControllerOnQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_handlePairingsResponseObject:(id)arg1 type:(unsigned long long)arg2 httpStatus:(int)arg3 httpError:(id)arg4 removeRequest:(_Bool)arg5 completionQueue:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (void)_removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)removePairingWithIdentifier:(id)arg1 publicKey:(id)arg2 queue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_startAddPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)addPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (int)_handlePairVerifyCompletionWithData:(id)arg1;
- (int)_pairVerifyStart;
- (int)_pairSetupTryPassword:(id)arg1;
- (int)_handlePairSetupCompletionWithData:(id)arg1;
- (int)_continuePairingAfterAuthPrompt;
- (int)_pairSetupStart;
- (int)_ensurePairingSessionIsInitializedWithType:(unsigned int)arg1;
- (int)_handleMFiSetupCompletionWithData:(id)arg1;
- (int)_mfiSetupStart;
- (int)_ensureHTTPClientSetUp;
- (void)httpClientDidCloseConnectionDueToServer:(id)arg1;
- (void)_establishSecureSession;
- (_Bool)_isSessionEstablished;
- (_Bool)_mergeExistingService:(id)arg1 withNewService:(id)arg2;
- (_Bool)_mergeExistingAccessory:(id)arg1 withNewAccessory:(id)arg2;
- (_Bool)_updateAccessories:(id)arg1;
- (void)_parseAttributeDatabase:(id)arg1;
- (void)_copyPropertiesForPrimaryAccessoryFromAccessory:(id)arg1;
- (void)_getAttributeDatabase;
- (_Bool)_parseTXTRecordDictionary:(id)arg1;
- (_Bool)_parseAndValidateTXTRecord;
- (void)_handleHTTPClientErrors;
- (_Bool)_processEvent:(id)arg1 matchedCharacteristic:(id *)arg2;
- (void)httpClient:(id)arg1 didReceiveEvent:(id)arg2;
- (void)_handleEventResponseObject:(id)arg1 type:(unsigned long long)arg2 httpStatus:(int)arg3 error:(id)arg4 characteristics:(id)arg5 requestedEventState:(_Bool)arg6 completion:(CDUnknownBlockType)arg7 queue:(id)arg8;
- (void)_enableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)enableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)_handleWriteResponseObject:(id)arg1 type:(unsigned long long)arg2 httpStatus:(int)arg3 error:(id)arg4 requestTuples:(id)arg5 queue:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)_writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)writeValue:(id)arg1 forCharacteristic:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_handleReadResponseObject:(id)arg1 type:(unsigned long long)arg2 httpStatus:(int)arg3 error:(id)arg4 characteristics:(id)arg5 queue:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)_readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)readValueForCharacteristic:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_processQueuedOperationsWithError:(id)arg1;
- (void)_queueEnableEvents:(_Bool)arg1 forCharacteristics:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)_queueAddPairingWithIdentifier:(id)arg1 publicKey:(id)arg2 admin:(_Bool)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_queueWriteCharacteristicValues:(id)arg1 queue:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)_queueReadCharacteristicValues:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_error:(id)arg1 forWriteCharacteristicValues:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_error:(id)arg1 forReadCharacteristicValues:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)stopPairingWithError:(id *)arg1;
- (void)_tearDownSession;
- (_Bool)tryPairingPassword:(id)arg1 error:(id *)arg2;
- (void)continuePairingAfterAuthPrompt;
- (void)startPairing;
- (void)_isAccessoryPublicKeyPresent:(_Bool *)arg1 registeredWithHomeKit:(_Bool *)arg2;
- (_Bool)_checkPairedState;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (void)_establishSecureConnectionAndFetchAttributeDatabase;
- (void)discoverAccessories;
- (long long)linkType;
- (id)primaryAccessory;
- (id)services;
- (id)name;
- (void)_updateWithBonjourDeviceInfo:(id)arg1;
- (void)updateWithBonjourDeviceInfo:(id)arg1;
- (id)identifier;
- (_Bool)isPaired;
- (id)briefDescription;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)invalidate;
- (void)_setDeviceIDWithString:(id)arg1;
- (id)_deviceID;
- (id)initWithBonjourDeviceInfo:(id)arg1 keyStore:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HAPBTLEConnectionRequestTuple : NSObject
{
    NSObject<OS_dispatch_source> *_connectionRequestTimer;
    NSString *_identifier;
}

+ (id)connectionRequestTupleWithTimer:(id)arg1 identifier:(id)arg2;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *connectionRequestTimer; // @synthesize connectionRequestTimer=_connectionRequestTimer;
- (void).cxx_destruct;

@end

@interface HAPBTLEReachabilityScanTuple : NSObject
{
    CDUnknownBlockType _completion;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_identifier;
}

+ (id)reachabilityScanTupleWithCompletion:(CDUnknownBlockType)arg1 workQueue:(id)arg2 identifier:(id)arg3;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void).cxx_destruct;

@end

@interface HAPCharacteristic : NSObject
{
    _Bool _eventNotificationsEnabled;
    NSString *_type;
    NSNumber *_instanceID;
    HAPService *_service;
    unsigned long long _properties;
    HAPCharacteristicMetadata *_metadata;
    id _value;
    NSData *_authorizationData;
}

+ (id)characteristicTypeFromUUIDString:(id)arg1;
+ (id)masterCharacteristicsUUIDDictionary;
@property(copy, nonatomic) NSData *authorizationData; // @synthesize authorizationData=_authorizationData;
@property(copy, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) HAPCharacteristicMetadata *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) _Bool eventNotificationsEnabled; // @synthesize eventNotificationsEnabled=_eventNotificationsEnabled;
@property(nonatomic) unsigned long long properties; // @synthesize properties=_properties;
@property(nonatomic) __weak HAPService *service; // @synthesize service=_service;
@property(copy, nonatomic) NSNumber *instanceID; // @synthesize instanceID=_instanceID;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (_Bool)isEqualToCharacteristic:(id)arg1;
- (id)propertiesDescription;
- (id)description;
- (id)initWithType:(id)arg1 instanceID:(id)arg2 value:(id)arg3 properties:(unsigned long long)arg4 eventNotificationsEnabled:(_Bool)arg5 metadata:(id)arg6;
- (id)validateValue:(id)arg1 outValue:(id *)arg2;
- (id)_generateValidMetadata:(id)arg1;
- (void)_updateMetadata:(id)arg1 withProvidedMetadata:(id)arg2;
- (id)_getDefaultMetadata;

@end

@interface HAPCharacteristicMetadata : NSObject
{
    HAPMetadataConstraints *_constraints;
    NSString *_manufacturerDescription;
    NSString *_format;
    NSString *_units;
}

@property(retain, nonatomic) NSString *units; // @synthesize units=_units;
@property(retain, nonatomic) NSString *format; // @synthesize format=_format;
@property(copy, nonatomic) NSString *manufacturerDescription; // @synthesize manufacturerDescription=_manufacturerDescription;
@property(retain, nonatomic) HAPMetadataConstraints *constraints; // @synthesize constraints=_constraints;
- (void).cxx_destruct;
- (_Bool)isEqualToCharacteristicMetadata:(id)arg1;
- (id)_generateValidConstraints:(id)arg1;
- (id)description;
- (id)initWithConstraints:(id)arg1 description:(id)arg2 format:(id)arg3 units:(id)arg4;

@end

@interface HAPCharacteristicReadCompletionTuple : NSObject
{
    CDUnknownBlockType _handler;
    NSObject<OS_dispatch_queue> *_completionQueue;
}

+ (id)readCompletionTupleWithHandler:(CDUnknownBlockType)arg1 queue:(id)arg2;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void).cxx_destruct;

@end

@interface HAPCharacteristicResponseTuple : NSObject
{
    HAPCharacteristic *_characteristic;
    NSError *_error;
}

+ (id)responseTupleForCharacteristic:(id)arg1 error:(id)arg2;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) HAPCharacteristic *characteristic; // @synthesize characteristic=_characteristic;
- (void).cxx_destruct;

@end

@interface HAPCharacteristicWriteRequestTuple : NSObject
{
    HAPCharacteristic *_characteristic;
    id _value;
}

+ (id)writeRequestTupleForCharacteristic:(id)arg1 value:(id)arg2;
@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) HAPCharacteristic *characteristic; // @synthesize characteristic=_characteristic;
- (void).cxx_destruct;

@end

@interface HAPDiscoveredBTLEAccessoryServerTuple : NSObject
{
    HAPAccessoryServerBTLE *_accessoryServer;
    double _lastSeen;
}

+ (id)discoveredAccessoryServerTupleWithAccessoryServer:(id)arg1;
@property(nonatomic) double lastSeen; // @synthesize lastSeen=_lastSeen;
@property(retain, nonatomic) HAPAccessoryServerBTLE *accessoryServer; // @synthesize accessoryServer=_accessoryServer;
- (void).cxx_destruct;

@end

@interface HAPHTTPClient : NSObject
{
    struct HTTPClientPrivate *_httpClient;
    _Bool _invalidateRequested;
    NSString *_dnsName;
    unsigned long long _port;
    NSObject<OS_dispatch_queue> *_queue;
    id <HAPHTTPClientDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    id <HAPHTTPClientDebugDelegate> _debugDelegate;
    NSObject<OS_dispatch_queue> *_debugDelegateQueue;
}

@property(nonatomic) _Bool invalidateRequested; // @synthesize invalidateRequested=_invalidateRequested;
@property(nonatomic) __weak NSObject<OS_dispatch_queue> *debugDelegateQueue; // @synthesize debugDelegateQueue=_debugDelegateQueue;
@property(nonatomic) __weak id <HAPHTTPClientDebugDelegate> debugDelegate; // @synthesize debugDelegate=_debugDelegate;
@property(nonatomic) __weak NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(nonatomic) __weak id <HAPHTTPClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) unsigned long long port; // @synthesize port=_port;
@property(copy, nonatomic) NSString *dnsName; // @synthesize dnsName=_dnsName;
- (void).cxx_destruct;
- (_Bool)_debugDelegateRespondsToSelector:(SEL)arg1;
- (_Bool)_delegateRespondsToSelector:(SEL)arg1;
- (id)_deserializeUAPJSONData:(id)arg1 error:(id *)arg2;
- (id)_serializeUAPJSONObject:(id)arg1 error:(id *)arg2;
- (void)_handleHTTPResponseForMessage:(struct HTTPMessagePrivate *)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_sendHTTPRequestToURL:(id)arg1 withMethod:(int)arg2 requestObject:(id)arg3 serializationType:(unsigned long long)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)sendDELETERequestToURL:(id)arg1 withRequestObject:(id)arg2 serializationType:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)sendPOSTRequestToURL:(id)arg1 withRequestObject:(id)arg2 serializationType:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)sendPUTRequestToURL:(id)arg1 withRequestObject:(id)arg2 serializationType:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)sendGETRequestToURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)invalidate;
- (_Bool)enableUAPSessionSecurityWithReadKey:(unsigned char [32])arg1 writeKey:(unsigned char [32])arg2 error:(id *)arg3;
- (int)_initializeCoreUtilsHTTPClient;
- (void)setDebugDelegate:(id)arg1 queue:(id)arg2;
- (void)setDelegate:(id)arg1 queue:(id)arg2;
- (id)initWithDNSName:(id)arg1 queue:(id)arg2;

@end

@interface HAPKeychainItem : NSObject
{
    _Bool _syncable;
    NSString *_accessGroup;
    NSNumber *_type;
    NSString *_label;
    NSString *_itemDescription;
    NSString *_account;
    NSData *_valueData;
    void *_platformReference;
    NSData *_genericData;
}

@property(retain, nonatomic) NSData *genericData; // @synthesize genericData=_genericData;
@property(nonatomic) void *platformReference; // @synthesize platformReference=_platformReference;
@property(nonatomic, getter=isSyncable) _Bool syncable; // @synthesize syncable=_syncable;
@property(retain, nonatomic) NSData *valueData; // @synthesize valueData=_valueData;
@property(retain, nonatomic) NSString *account; // @synthesize account=_account;
@property(retain, nonatomic) NSString *itemDescription; // @synthesize itemDescription=_itemDescription;
@property(retain, nonatomic) NSString *label; // @synthesize label=_label;
@property(retain, nonatomic) NSNumber *type; // @synthesize type=_type;
@property(retain, nonatomic) NSString *accessGroup; // @synthesize accessGroup=_accessGroup;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithQueryResult:(struct __CFDictionary *)arg1 shouldIncludeData:(_Bool)arg2;

@end

@interface HAPMetadataConstraints : NSObject
{
    NSNumber *_minimumValue;
    NSNumber *_maximumValue;
    NSNumber *_stepValue;
    NSNumber *_minLength;
    NSNumber *_maxLength;
}

@property(retain, nonatomic) NSNumber *maxLength; // @synthesize maxLength=_maxLength;
@property(retain, nonatomic) NSNumber *minLength; // @synthesize minLength=_minLength;
@property(retain, nonatomic) NSNumber *stepValue; // @synthesize stepValue=_stepValue;
@property(retain, nonatomic) NSNumber *maximumValue; // @synthesize maximumValue=_maximumValue;
@property(retain, nonatomic) NSNumber *minimumValue; // @synthesize minimumValue=_minimumValue;
- (void).cxx_destruct;
- (_Bool)isEqualToMetadataConstraints:(id)arg1;
- (id)description;

@end

@interface HAPRemoteSession : NSObject
{
    unsigned char _cipherReadKey[32];
    unsigned char _cipherReadNonce[8];
    unsigned char _cipherWriteKey[32];
    unsigned char _cipherWriteNonce[8];
    _Bool _commitResponded;
    NSObject<OS_dispatch_source> *_idleTimer;
    NSObject<OS_dispatch_queue> *_internalQueue;
    CDUnknownBlockType _internalRequestHandler;
    const char *_label;
    unsigned char _pairVerifyDone;
    struct PairingSessionPrivate *_pairVerifySession;
    NSMutableDictionary *_prepareRequests;
    _Bool _prepareResponded;
    NSString *_sessionID;
    _Bool _started;
    int _state;
    NSMutableDictionary *_transactions;
    NSMutableArray *_userTransactions;
    CDUnknownBlockType _findPeerHandler;
    CDUnknownBlockType _requestHandler;
    CDUnknownBlockType _stoppedHandler;
    CDUnknownBlockType _transportSendMessage;
    long long _type;
    NSObject<OS_dispatch_queue> *_userQueue;
}

@property(copy) CDUnknownBlockType transportSendMessage; // @synthesize transportSendMessage=_transportSendMessage;
@property(copy) CDUnknownBlockType stoppedHandler; // @synthesize stoppedHandler=_stoppedHandler;
@property(copy) CDUnknownBlockType requestHandler; // @synthesize requestHandler=_requestHandler;
@property(copy) CDUnknownBlockType findPeerHandler; // @synthesize findPeerHandler=_findPeerHandler;
@property(copy) CDUnknownBlockType internalRequestHandler; // @synthesize internalRequestHandler=_internalRequestHandler;
@property(retain) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_userQueue;
- (void).cxx_destruct;
- (void)_serverCompletePrepareRequest:(id)arg1;
- (int)_serverHandleCommitRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (int)_serverHandlePrepareRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (int)_serverHandleDecryptedRequest:(id)arg1 responseHandler:(CDUnknownBlockType)arg2;
- (void)_serverHandleEncryptedRequest:(id)arg1;
- (void)_serverPairVerifyExchange:(id)arg1;
- (void)_serverRunStateMachine;
- (int)_clientHandleCommitResponse:(id)arg1;
- (int)_clientSendCommitRequest:(id)arg1;
- (int)_clientHandlePrepareResponse:(id)arg1;
- (int)_clientSendPrepareRequest:(id)arg1;
- (int)_clientPairVerifyExchange:(id)arg1;
- (void)_clientRunStateMachine;
- (void)_transportReceivedMessage:(id)arg1;
- (void)transportReceivedMessage:(id)arg1;
- (void)_completeTransaction:(id)arg1 response:(id)arg2 status:(int)arg3;
- (void)_sendRequest:(id)arg1 options:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)_completeUserTransaction:(id)arg1 response:(id)arg2 status:(int)arg3;
- (void)_sendUserRequest:(id)arg1 options:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (void)sendRequest:(id)arg1 options:(id)arg2 responseHandler:(CDUnknownBlockType)arg3;
- (int)_updateIdleTimer;
- (int)_setupEncryption;
- (void)_runStateMachine;
- (void)_stop:(int)arg1;
- (void)stop;
- (void)_start;
- (void)start;
- (void)dealloc;
- (id)initWithType:(long long)arg1;
- (id)init;

@end

@interface HAPService : NSObject
{
    NSString *_type;
    NSNumber *_instanceID;
    HAPAccessory *_accessory;
    NSArray *_characteristics;
    NSArray *_includedServices;
}

+ (id)serviceTypeFromUUIDString:(id)arg1;
@property(readonly, nonatomic) NSArray *includedServices; // @synthesize includedServices=_includedServices;
@property(retain, nonatomic) NSArray *characteristics; // @synthesize characteristics=_characteristics;
@property(nonatomic) __weak HAPAccessory *accessory; // @synthesize accessory=_accessory;
@property(copy, nonatomic) NSNumber *instanceID; // @synthesize instanceID=_instanceID;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (_Bool)isEqualToService:(id)arg1;
- (id)validateAssociatedServiceType:(id)arg1;
- (_Bool)_validateMandatoryCharacteristics;
- (id)_mandatoryCharacteristicsForServiceType:(id)arg1;
- (_Bool)_validateServiceCharacteristics;
- (_Bool)_updateCharacteristic:(id)arg1;
- (_Bool)_updateAndValidateCharacteristics;
- (id)description;
- (id)initWithType:(id)arg1 instanceID:(id)arg2;
- (id)initWithType:(id)arg1 instanceID:(id)arg2 parsedCharacteristics:(id)arg3;

@end

@interface HAPSystemKeychainStore : NSObject <HAPKeyStore>
{
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)systemStore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (int)_deleteAllPeripheralIdentifiers;
- (_Bool)deleteAllPeripheralIdentifiers:(id *)arg1;
- (id)getPeripherialIdentifiersAndAccessoryNames;
- (int)_getPeripheralIdentifier:(id *)arg1 forAccessoryName:(id)arg2;
- (id)readPeripheralIdentifierForAccessoryName:(id)arg1 error:(id *)arg2;
- (int)_deletePeripheralIdentifierForAccessoryName:(id)arg1;
- (_Bool)deletePeripheralIdentifierForAccessoryName:(id)arg1 error:(id *)arg2;
- (_Bool)updatePeripheralIdentifier:(id)arg1 forAccessoryName:(id)arg2 error:(id *)arg3;
- (int)_savePeripheralIdentifier:(id)arg1 forAccessoryName:(id)arg2;
- (_Bool)savePeripheralIdentifier:(id)arg1 forAccessoryName:(id)arg2 error:(id *)arg3;
- (int)_removeKeychainItem:(id)arg1;
- (int)_addKeychainItem:(id)arg1;
- (id)_getKeychainItemsForAccessGroup:(id)arg1 type:(id)arg2 account:(id)arg3 shouldReturnData:(_Bool)arg4 error:(int *)arg5;
- (_Bool)_removeAccessoryKeyForName:(id)arg1;
- (_Bool)removeAllAccessoryKeys:(id *)arg1;
- (_Bool)removeAccessoryKeyForName:(id)arg1 error:(id *)arg2;
- (_Bool)registerAccessoryWithHomeKit:(id)arg1 error:(id *)arg2;
- (int)_savePublicKey:(id)arg1 forAccessoryName:(id)arg2;
- (_Bool)savePublicKey:(id)arg1 forAccessoryName:(id)arg2 error:(id *)arg3;
- (int)_getPublicKey:(id *)arg1 registeredWithHomeKit:(_Bool *)arg2 forAccessoryName:(id)arg3;
- (id)readPublicKeyForAccessoryName:(id)arg1 registeredWithHomeKit:(_Bool *)arg2 error:(id *)arg3;
- (int)_removeControllerKeyPairForIdentifier:(id)arg1;
- (_Bool)removeControllerKeyPairForIdentifier:(id)arg1 error:(id *)arg2;
- (_Bool)getCurrentiCloudIdentifier:(id *)arg1 controllerPairingIdentifier:(id *)arg2 error:(id *)arg3;
- (int)_updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2;
- (_Bool)updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2 error:(id *)arg3;
- (int)_removeControllerKeyPair;
- (_Bool)removeControllerKeyPairWithError:(id *)arg1;
- (int)_createControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 username:(id *)arg3;
- (int)_getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 username:(id *)arg3;
- (_Bool)getControllerPublicKey:(id *)arg1 secretKey:(id *)arg2 username:(id *)arg3 allowCreation:(_Bool)arg4 error:(id *)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HMUIndent : NSObject
{
    NSString *_level;
    NSString *_step;
    unsigned long long _factor;
}

+ (id)indentWithLevel:(id)arg1 step:(id)arg2 factor:(unsigned long long)arg3;
+ (id)indentWithLevel:(id)arg1;
@property(readonly, nonatomic) unsigned long long factor; // @synthesize factor=_factor;
@property(readonly, nonatomic) NSString *step; // @synthesize step=_step;
@property(readonly, nonatomic) NSString *level; // @synthesize level=_level;
- (void).cxx_destruct;
- (id)indentByFactor:(unsigned long long)arg1;
- (id)description;
- (id)initWithLevel:(id)arg1 step:(id)arg2 factor:(unsigned long long)arg3;

@end

@interface NSArray (Logging)
- (id)shortDescription;
- (id)shortDescriptionWithIndent:(id)arg1;
@end

@interface NSCoder (HMExtensions)
- (id)decodeSetOfConditionalObjects:(Class)arg1 forKey:(id)arg2;
- (void)encodeSetOfConditionalObjects:(id)arg1 forKey:(id)arg2;
- (id)decodeArrayOfConditionalObjects:(Class)arg1 forKey:(id)arg2;
- (void)encodeArrayOfConditionalObjects:(id)arg1 forKey:(id)arg2;
@end

@interface NSData (Logging)
- (id)shortDescription;
@end

@interface NSDictionary (Logging)
- (id)shortDescription;
- (id)shortDescriptionWithIndent:(id)arg1;
@end

@interface NSDictionary (Utils)
- (id)nullForKey:(id)arg1;
- (id)calendarFromDataForKey:(id)arg1;
- (id)calendarForKey:(id)arg1;
- (id)errorFromDataForKey:(id)arg1;
- (id)errorForKey:(id)arg1;
- (id)dateComponentsFromDataForKey:(id)arg1;
- (id)dateComponentsForKey:(id)arg1;
- (id)timeZoneFromDataForKey:(id)arg1;
- (id)timeZoneForKey:(id)arg1;
- (id)dateForKey:(id)arg1;
- (id)dataForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (id)mutableArrayForKey:(id)arg1;
- (id)mutableDictionaryForKey:(id)arg1;
- (id)dictionaryForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1 keyPresent:(_Bool *)arg2;
- (_Bool)boolForKey:(id)arg1;
- (id)numberForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)uuidFromStringForKey:(id)arg1;
- (id)uuidForKey:(id)arg1;
@end

@interface NSKeyedUnarchiver (SecureCodingUtils)
+ (id)deserializeObjectWithData:(id)arg1 allowedClasses:(id)arg2;
@end

@interface WLOTcpConnection : NSObject <NSStreamDelegate>
{
    id <WLOTcpConnectionDelegate> _delegate;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
}

@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) __weak id <WLOTcpConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_readData:(_Bool)arg1;
- (long long)_writeData:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (long long)writeData:(id)arg1;
- (void)close;
- (_Bool)open;
- (void)closeStream:(id)arg1;
- (_Bool)openStream:(id)arg1;
- (id)initWithInputStream:(id)arg1 outputStream:(id)arg2;
- (id)initWithHost:(id)arg1 port:(unsigned long long)arg2;
- (id)initWithNetService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface WLOTcpServer : NSObject
{
    int _port;
    int _sockd;
    id <WLOTcpServerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_listenQueue;
}

@property(nonatomic) int sockd; // @synthesize sockd=_sockd;
@property(nonatomic) int port; // @synthesize port=_port;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *listenQueue; // @synthesize listenQueue=_listenQueue;
@property(nonatomic) __weak id <WLOTcpServerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_listen:(int)arg1;
- (void)dealloc;
- (void)listen;
- (id)initWithPort:(int)arg1;

@end

