//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AdjustedColor {
    unsigned char _field1;
    unsigned char _field2;
    unsigned int :4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct AxisParentChildren {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    ChVector_fe49fc78 _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CHDDataPoint {
    unsigned long long index;
    struct EDValue value;
    unsigned long long contentFormatId;
};

struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> {
    struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> _field1;
};

struct ChMap<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>> {
    struct map<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PptBinaryReader::SKIP_CONDITIONS>>> _field1;
};

struct ChMap<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>> {
    struct map<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdCharacterProperties *>>> _field1;
};

struct ChMap<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>> {
    struct map<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdParagraphProperties *>>> _field1;
};

struct ChMap<unsigned int, WrdTableProperties *, CsLess<unsigned int>> {
    struct map<unsigned int, WrdTableProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdTableProperties *>>> _field1;
};

struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> {
    struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> _field1;
};

struct ChMap<unsigned int, int, CsLess<unsigned int>> {
    struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> _field1;
};

struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> {
    struct map<unsigned int, unsigned int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> _field1;
};

struct ChPair<unsigned int, EscherObjectEnums>;

struct ChStack<EshHeader> {
    struct EshHeader *_field1;
    struct EshHeader *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<ChPair<unsigned int, EscherObjectEnums>> {
    struct ChPair<unsigned int, EscherObjectEnums> *_field1;
    struct ChPair<unsigned int, EscherObjectEnums> *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<CsString *> {
    struct CsString **_field1;
    struct CsString **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshComputedRect> {
    struct EshComputedRect *_field1;
    struct EshComputedRect *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshComputedValue> {
    struct EshComputedValue *_field1;
    struct EshComputedValue *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshFormula> {
    struct EshFormula *_field1;
    struct EshFormula *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshHeader *> {
    struct EshHeader **_field1;
    struct EshHeader **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<EshPathCommand> {
    struct EshPathCommand *_field1;
    struct EshPathCommand *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<PBReaderMasterStyleInfo> {
    struct PBReaderMasterStyleInfo *_field1;
    struct PBReaderMasterStyleInfo *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<PptCharRun *> {
    struct PptCharRun **_field1;
    struct PptCharRun **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<PptParaRun *> {
    struct PptParaRun **_field1;
    struct PptParaRun **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<PptTab>;

struct ChVector<PptTextMasterStyle9Atom::Level *> {
    struct Level **_field1;
    struct Level **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<PptTextMasterStyleAtom::Level *> {
    struct Level **_field1;
    struct Level **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdAnnotation *> {
    struct WrdAnnotation **_field1;
    struct WrdAnnotation **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdBookmark *> {
    struct WrdBookmark **_field1;
    struct WrdBookmark **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdFieldPosition *> {
    struct WrdFieldPosition **_field1;
    struct WrdFieldPosition **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdFileShapeAddress *> {
    struct WrdFileShapeAddress **_field1;
    struct WrdFileShapeAddress **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdFontFamilyName *> {
    struct WrdFontFamilyName **_field1;
    struct WrdFontFamilyName **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdListLevelFormat *> {
    struct WrdListLevelFormat **_field1;
    struct WrdListLevelFormat **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdListLevelFormatOverride *> {
    struct WrdListLevelFormatOverride **_field1;
    struct WrdListLevelFormatOverride **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdNote *> {
    struct WrdNote **_field1;
    struct WrdNote **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdStory *> {
    struct WrdStory **_field1;
    struct WrdStory **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdStyle *> {
    struct WrdStyle **_field1;
    struct WrdStyle **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdTabDescriptor *> {
    struct WrdTabDescriptor **_field1;
    struct WrdTabDescriptor **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<WrdTableCellDescriptor *> {
    struct WrdTableCellDescriptor **_field1;
    struct WrdTableCellDescriptor **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlBrk *> {
    struct XlBrk **_field1;
    struct XlBrk **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlCell *> {
    struct XlCell **_field1;
    struct XlCell **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartBinaryReader::PlotDescriptor> {
    struct PlotDescriptor *_field1;
    struct PlotDescriptor *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartBinaryReader::SeriesDescriptor> {
    struct SeriesDescriptor *_field1;
    struct SeriesDescriptor *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartCustomLabelText *> {
    struct XlChartCustomLabelText **_field1;
    struct XlChartCustomLabelText **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartCustomLegend *> {
    struct XlChartCustomLegend **_field1;
    struct XlChartCustomLegend **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartPlot::DefText> {
    struct DefText *_field1;
    struct DefText *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartSeriesFormat *> {
    struct XlChartSeriesFormat **_field1;
    struct XlChartSeriesFormat **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlChartTextFrame::TextRun> {
    struct TextRun *_field1;
    struct TextRun *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlGraphicsInfo::XlObjData *> {
    struct XlObjData **_field1;
    struct XlObjData **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlLink *> {
    struct XlLink **_field1;
    struct XlLink **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlRecord *> {
    struct XlRecord **_field1;
    struct XlRecord **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<XlXti *> {
    struct XlXti **_field1;
    struct XlXti **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<int> {
    int *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<long> {
    long long *_field1;
    long long *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<short *> {
    short **_field1;
    short **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<short> {
    short *_field1;
    short *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ChVector<unsigned int> {
    unsigned int *_field1;
    unsigned int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct CsColour {
    unsigned short _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
};

struct CsPoint<int> {
    int _field1[2];
};

struct CsRect<float> {
    float _field1[4];
};

struct CsRect<int> {
    int _field1[4];
};

struct CsSimpleHeapVector<XlRecord> {
    struct ChVector<XlRecord *> _field1;
};

struct CsString {
    CDUnknownFunctionPointerType *_field1;
    unsigned short *_field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct Data {
    int _field1;
    union Value _field2;
};

struct DefText;

struct EDAreaReference {
    int firstRow;
    int firstColumn;
    int lastRow;
    int lastColumn;
};

struct EDBuildablePtg {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    int _field3;
    unsigned int _field4;
    unsigned short _field5;
    struct EDBuildablePtg *_field6;
    struct EDBuildablePtg *_field7;
    _Bool _field8;
    int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct EDCellAnchorMarker {
    int columnIndex;
    float columnAdjustment;
    int rowIndex;
    float rowAdjustment;
};

struct EDCellHeader {
    unsigned int _field1;
    unsigned int _field2;
};

struct EDRowInfo {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
    unsigned int :1;
    unsigned int :1;
};

struct EDToken {
    unsigned short _field1;
    unsigned int _field2;
};

struct EDValue {
    int type;
    union {
        _Bool boolean;
        double number;
        EDString *string;
        unsigned long long stringIndex;
        int error;
    } ;
};

struct EFLexer {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int *_field8;
    struct basic_istream<char, std::__1::char_traits<char>> *_field9;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field10;
    char _field11;
    unsigned long long _field12;
    char *_field13;
    int _field14;
    int _field15;
    int _field16;
    unsigned long long _field17;
    unsigned long long _field18;
    struct yy_buffer_state **_field19;
    int _field20;
    char *_field21;
    int *_field22;
    int *_field23;
    char *_field24;
    int *_field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    union YYSTYPE _field33;
    id _field34;
    _Bool _field35;
    char *_field36;
    struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field37;
    struct basic_istream<char, std::__1::char_traits<char>> *_field38;
    struct basic_ostream<char, std::__1::char_traits<char>> *_field39;
    struct yy_buffer_state *_field40;
};

struct EFRefTok {
    int type;
    unsigned int dataSize;
    unsigned char data[12];
};

struct EFStrTok {
    id _field1;
    int _field2;
    union EFData _field3;
};

struct EshBSE {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct EshBlip *_field4;
    unsigned short *_field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned short _field9;
    int _field10;
    unsigned char _field11;
    int _field12;
    int _field13;
    unsigned char _field14;
    unsigned char _field15;
    struct UID _field16;
};

struct EshBlip {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct UID _field4;
};

struct EshCallout {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshColor {
    struct Data _field1;
};

struct EshComputedRect;

struct EshComputedValue {
    _Bool _field1;
    int _field2;
};

struct EshContainer {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChVector<EshHeader *> _field4;
};

struct EshContent {
    CDUnknownFunctionPointerType *_field1;
};

struct EshContentData {
    struct EshOpt _field1;
    struct EshOpt _field2;
    struct EshOpt _field3;
    struct EshSp _field4;
    CsRect_0aefebc6 _field5;
};

struct EshContentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshDiagram {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshExtrusion {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFill {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshFormula;

struct EshGroup {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    CDUnknownFunctionPointerType *_field4;
    struct EshSpgr *_field5;
    struct EshGroupProperties _field6;
    struct EshGroupLocks _field7;
    struct EshDiagram _field8;
};

struct EshGroupLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshGroupProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    struct EshRectAtom *_field4;
};

struct EshHeader {
    int _field1;
    unsigned int _field2;
    short _field3;
    unsigned short _field4;
    unsigned char _field5;
};

struct EshMark;

struct EshMetafileBlipInfo {
    unsigned short *_field1;
    struct UID _field2;
    struct OcBinaryData _field3;
    int _field4;
    CsRect_0aefebc6 _field5;
    CsPoint_c846a6ec _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
};

struct EshObject {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
};

struct EshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct EshOpt {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    struct ChMap<unsigned int, EshOpt::Value, CsLess<unsigned int>> _field4;
    struct EshColor _field5;
};

struct EshParserVisitor;

struct EshPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshPathCommand;

struct EshPathParamTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedValue> _field2;
};

struct EshRectAtom;

struct EshRoot {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct ChVector<EshHeader *> _field3;
};

struct EshShadow {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShape {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    CDUnknownFunctionPointerType *_field10;
    struct EshShapeProperties _field11;
    struct EshShapeLocks _field12;
    struct EshShapeImageData _field13;
    struct EshTextPath _field14;
    struct EshPath _field15;
    struct EshSkew _field16;
};

struct EshShapeBase {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
};

struct EshShapeImageData {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeLocks {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshShapeProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
    CDUnknownFunctionPointerType *_field4;
};

struct EshSkew {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshSp {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct EshSpgr;

struct EshStroke {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
};

struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
};

struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
};

struct EshTextBox {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct EshTextPath {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData *_field3;
};

struct Level;

struct MFPColorMatrix {
    float _field1[5][5];
};

struct OABGradientStop {
    id _field1;
    float _field2;
};

struct OABTable2DArray<EshShape *> {
    int _field1;
    int _field2;
    struct EshShape **_field3;
};

struct OABTable2DArray<OABTableCell> {
    int _field1;
    int _field2;
    struct OABTableCell *_field3;
};

struct OABTableCell;

struct OADAdjustCoord {
    _Bool isFormulaResult;
    int value;
};

struct OADAdjustPoint {
    struct OADAdjustCoord x;
    struct OADAdjustCoord y;
};

struct OADCachedTextStyleData {
    unsigned int verticalAlign:3;
    short lineSpacing;
    short beforeSpacing;
    short afterSpacing;
    short leftMargin;
    short rightMargin;
    short indent;
    short defaultTab;
    unsigned int horizontalAlign:4;
    unsigned short fontFaceIndex;
    short fontSize;
    unsigned short fontColorIndex;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int underline:5;
    unsigned int format:2;
    unsigned int kerning:2;
    unsigned int strikethrough:2;
    unsigned int caps:2;
};

struct OADFormulaArg {
    int type;
    int value;
};

struct OADTFTemplateMatrix<OADTableCell *> {
    int _field1;
    int _field2;
    struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> _field3;
};

struct OADTFTemplateMatrix<OADTablePartStyle *> {
    int _field1;
    int _field2;
    struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> _field3;
};

struct OADTMatrixPos {
    int _field1;
    int _field2;
};

struct OAVGradientStop {
    id _field1;
    float _field2;
};

struct OAVTextBoxInsets {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct OCCBinaryStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct OCCCryptoKey {
    CDUnknownFunctionPointerType *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct OCCEncryptionInfoReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OCCStreamer {
    CDUnknownFunctionPointerType *_field1;
    struct OCCCryptoKey *_field2;
    char *_field3;
};

struct ODIHRange {
    float mMid;
    float mLength;
};

struct ODIHRangeVector {
    struct ODIHRange *_field1;
    struct ODIHRange *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
};

struct ODILayoutNodeState {
    id _field1;
    _Bool _field2;
};

struct ODIPointIteratorState {
    int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    id _field5;
};

struct ObjcSharedPtr<NSString> {
    id _field1;
};

struct OcBinaryData {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    _Bool _field7;
    struct SsrwOOStream *_field8;
};

struct OcBinaryReader {
    CDUnknownFunctionPointerType *_field1;
};

struct OcReader {
    CDUnknownFunctionPointerType *_field1;
    struct EshObjectFactory *_field2;
};

struct OcText {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    char *_field6;
    char *_field7;
    _Bool _field8;
};

struct OcWriter {
    CDUnknownFunctionPointerType *_field1;
};

struct PATHSEGMENT {
    unsigned int :4;
    unsigned int :60;
    struct CGPoint _field1;
};

struct PBReaderMasterStyleInfo {
    struct PptTextMasterStyleAtom *_field1;
    struct PptTextMasterStyle9Atom *_field2;
};

struct PBTextFormatProgTagInfo {
    unsigned short *_field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct PlotDescriptor;

struct PptAnimColorBehavior_Color_Struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct PptBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct EshObjectFactory *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct __sFILE *_field5;
    struct SsrwOORootStorage _field6;
    struct SsrwOOStorage *_field7;
    struct SsrwOOStorage *_field8;
    struct SsrwOOStream *_field9;
    struct SsrwOOStream *_field10;
    int _field11;
    _Bool _field12;
    struct PptEshReader *_field13;
    struct PptEshReader *_field14;
    struct PptParserVisitor *_field15;
    struct PptPersistDir *_field16;
    struct EshHeader *_field17;
    struct EshObject *_field18;
    unsigned int _field19;
    unsigned int _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    struct ChMap<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>> _field25;
    struct PptObjectFactory *_field26;
    struct EshMark *_field27;
    int _field28;
    struct ChVector<ChPair<unsigned int, EscherObjectEnums>> _field29;
    _Bool _field30;
};

struct PptCharProperty {
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :4;
    } _field1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :4;
    unsigned int :1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    struct PptColor _field7;
    short _field8;
};

struct PptCharRun {
    int _field1;
    struct PptCharProperty _field2;
};

struct PptColor {
    struct CsColour _field1;
    int _field2;
};

struct PptColorSchemeAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    CDUnknownFunctionPointerType *_field7;
    struct CsColour _field8;
    struct CsColour _field9;
    struct CsColour _field10;
    struct CsColour _field11;
    struct CsColour _field12;
    struct CsColour _field13;
    struct CsColour _field14;
    struct CsColour _field15;
};

struct PptEshObjectFactory;

struct PptEshReader;

struct PptHeadersFootersAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct PptOEPlaceholderAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    int _field7;
    unsigned int :8;
    unsigned int :8;
};

struct PptObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    struct PptEshObjectFactory *_field2;
};

struct PptParaProperty {
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :4;
    unsigned int :2;
    unsigned short _field2;
    unsigned short _field3;
    short _field4;
    struct PptColor _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
    short _field10;
    short _field11;
    struct ChVector<PptTab> *_field12;
};

struct PptParaProperty9 {
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
    } _field1;
    short _field2;
    _Bool _field3;
    struct PptTextAutoNumberScheme _field4;
};

struct PptParaRun {
    int _field1;
    short _field2;
    struct PptParaProperty _field3;
};

struct PptParserVisitor;

struct PptPersistDir;

struct PptRecolorSpec {
    CDUnknownFunctionPointerType *_field1;
    struct EshColor _field2;
    struct EshColor _field3;
    _Bool _field4;
    _Bool _field5;
};

struct PptSSSlideInfoAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    int _field7;
    int _field8;
    unsigned char _field9;
    int _field10;
    unsigned short _field11;
    int _field12;
};

struct PptTextAutoNumberScheme {
    unsigned int :6;
    short _field1;
};

struct PptTextBlockStylingAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct ChVector<PptParaRun *> _field7;
    struct ChVector<PptCharRun *> _field8;
    unsigned int _field9;
};

struct PptTextHeaderAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    int _field7;
};

struct PptTextMasterStyle9Atom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct ChVector<PptTextMasterStyle9Atom::Level *> _field7;
};

struct PptTextMasterStyleAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct ChVector<PptTextMasterStyleAtom::Level *> _field7;
};

struct PptTextRulerAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct ChVector<PptTab> *_field7;
    unsigned short _field8[5];
    unsigned short _field9[5];
    unsigned short _field10;
};

struct PptTxInteracInfoAtom {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    int _field7;
    int _field8;
};

struct RGB {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
};

struct SFUZipEndOfCentralDirectory {
    unsigned long long _field1;
    long long _field2;
    long long _field3;
};

struct SeriesDescriptor;

struct SsrwOORootStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
    struct _RootStorage *_field3;
};

struct SsrwOOStorage {
    struct _Storage *_field1;
    unsigned short _field2[36];
};

struct SsrwOOStream {
    CDUnknownFunctionPointerType *_field1;
};

struct TCDumpEnumPair {
    int _field1;
    id _field2;
};

struct TCEnumerationStruct {
    int _field1;
    id _field2;
};

struct TCFontStyling {
    int fontClass;
    unsigned int stringEncoding;
    char weight;
    _Bool italic;
    int width;
};

struct TCTaggedMessageStructure {
    int _field1;
    id _field2;
};

struct TCXmlEnumDescription {
    int _field1;
    char *_field2;
};

struct TSUCustomFormat {
    struct ObjcSharedPtr<NSString> _field1;
    int _field2;
    CDStruct_b87b2d04 _field3;
    struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition>> _field4;
};

struct TSUFlushableObjectInfo {
    id _field1;
    int _field2;
    int _field3;
    int _field4;
    unsigned int _field5[2];
};

struct TSUOpstat_s {
    _Bool running;
    unsigned long long count;
    struct timeval min_time;
    struct timeval max_time;
    struct timeval total_time;
    struct timeval last_time;
};

struct TextRun;

struct UID {
    unsigned char _field1[16];
};

struct WBParagraphReadState {
    int _field1;
    int _field2;
    int _field3;
    struct WrdFieldPosition *_field4;
    int _field5;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field6;
    int _field7;
    int _field8;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field9;
};

struct WBTextBoxReaderInfo {
    id _field1;
    unsigned short _field2;
};

struct WrdAnnotation {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    struct WrdAnnotationReferenceDescriptor *_field5;
    struct WrdDateTime *_field6;
};

struct WrdAnnotationReferenceDescriptor;

struct WrdAnnotationTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<WrdAnnotation *> _field2;
};

struct WrdAutoNumberListDescriptor;

struct WrdAutoSummaryInfo;

struct WrdBinTable;

struct WrdBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct EshObjectFactory *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct WrdParser *_field5;
    struct WrdEshReader _field6;
    struct WrdRdrText *_field7;
    struct WrdBinTable *_field8;
    struct WrdPAPXFKP *_field9;
    unsigned int _field10;
    struct WrdBinTable *_field11;
    struct WrdCHPXFKP *_field12;
    unsigned int _field13;
    int _field14;
    struct WrdSectionDescriptorTable *_field15;
    struct WrdStyleSheet *_field16;
    struct WrdEmbeddedTTFRecordTable *_field17;
    struct WrdDocumentFileRecord *_field18;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field19[8];
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field20[8];
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23;
    unsigned int _field24;
    int _field25;
    struct WrdText _field26;
    struct WrdEmbeddedTrueTypeFont *_field27;
};

struct WrdBookmark;

struct WrdBookmarkTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdBookmark *> _field3;
};

struct WrdBorder {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    int _field3;
    int _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field5;
    unsigned char _field6;
};

struct WrdCHPXFKP;

struct WrdCPTableHeaders {
    CDUnknownFunctionPointerType *_field1;
    ChVector_fe49fc78 _field2;
};

struct WrdCharacterProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdCharacterPropertiesOverridden _field3;
    struct CsColour _field4;
    struct CsColour _field5;
    struct CsString _field6;
    struct WrdShading *_field7;
    struct WrdBorder *_field8;
    struct WrdDateTime *_field9;
    struct WrdDateTime *_field10;
    struct WrdDateTime *_field11;
    struct WrdDateTime *_field12;
    struct WrdDateTime *_field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    unsigned short _field44;
    unsigned short _field45;
    unsigned short _field46;
    unsigned short _field47;
    unsigned short _field48;
    int _field49;
    int _field50;
    unsigned short _field51;
    int _field52;
    int _field53;
    int _field54;
    int _field55;
    int _field56;
    int _field57;
    int _field58;
    int _field59;
    unsigned int _field60;
    unsigned short _field61;
    unsigned short _field62;
    unsigned short _field63;
    unsigned short _field64;
    unsigned short _field65;
    unsigned short _field66;
    unsigned short _field67;
    unsigned short _field68;
    unsigned short _field69;
    unsigned short _field70;
    unsigned short _field71;
    unsigned short _field72;
    unsigned short _field73;
    unsigned short _field74;
    unsigned short _field75;
    unsigned short _field76;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    short _field77;
    unsigned char _field78;
    unsigned char _field79;
    unsigned char _field80;
    unsigned char _field81;
    unsigned char _field82;
};

struct WrdCharacterPropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdCharacterTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct WrdCharacterProperties *_field5;
    struct WrdCharacterProperties *_field6;
};

struct WrdDOPTypography;

struct WrdDateTime {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
};

struct WrdDocumentFileRecord;

struct WrdDocumentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct WrdDOPTypography *_field3;
    struct WrdDrawingObjectGrid *_field4;
    struct WrdAutoSummaryInfo *_field5;
    struct WrdDateTime *_field6;
    struct WrdDateTime *_field7;
    struct WrdDateTime *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    short _field25;
    short _field26;
    short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    unsigned short _field34;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    int _field45;
    int _field46;
    int _field47;
    short _field48;
    short _field49;
    short _field50;
    unsigned char _field51;
    unsigned char _field52;
    unsigned char _field53;
};

struct WrdDrawingObjectGrid;

struct WrdDropCap;

struct WrdEmbeddedTTFRecordTable;

struct WrdEmbeddedTrueTypeFont;

struct WrdEshClientAnchor;

struct WrdEshClientData;

struct WrdEshClientTextBox;

struct WrdEshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct WrdEshReader {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshParserVisitor *_field3;
    struct EshObjectFactory *_field4;
    unsigned int _field5;
    unsigned int _field6;
    struct ChStack<EshHeader> _field7;
    unsigned int _field8;
    struct EshHeader _field9;
    _Bool _field10;
};

struct WrdEshShape {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshContentData _field3;
    struct EshTextBox _field4;
    struct EshFill _field5;
    struct EshStroke _field6;
    struct EshShadow _field7;
    struct EshExtrusion _field8;
    struct EshCallout _field9;
    CDUnknownFunctionPointerType *_field10;
    struct EshShapeProperties _field11;
    struct EshShapeLocks _field12;
    struct EshShapeImageData _field13;
    struct EshTextPath _field14;
    struct EshPath _field15;
    struct EshSkew _field16;
    struct WrdEshClientAnchor *_field17;
    struct WrdEshClientData *_field18;
    struct WrdEshClientTextBox *_field19;
};

struct WrdFieldDescriptor;

struct WrdFieldPosition {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct WrdFieldDescriptor *_field3;
};

struct WrdFieldPositionTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdFieldPosition *> _field3;
};

struct WrdFileShapeAddress {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    int _field15;
};

struct WrdFileShapeAddressTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdFileShapeAddress *> _field3;
};

struct WrdFontFamilyName {
    CDUnknownFunctionPointerType *_field1;
    struct CsString _field2;
    struct CsString _field3;
    int _field4;
    char *_field5;
    char *_field6;
    unsigned short _field7;
    _Bool _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
};

struct WrdFontFamilyNameTable {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<WrdFontFamilyName *> _field2;
};

struct WrdLineSpaceDescriptor;

struct WrdListFormat {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<WrdListLevelFormat *> _field2;
    short *_field3;
    int _field4;
    int _field5;
    short _field6;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field7;
};

struct WrdListFormatOverride {
    CDUnknownFunctionPointerType *_field1;
    struct WrdListLevelFormatOverride *_field2;
    int _field3;
    struct ChVector<WrdListLevelFormatOverride *> _field4;
    unsigned char _field5;
    unsigned char _field6;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdListLevelFormat {
    CDUnknownFunctionPointerType *_field1;
    struct WrdParagraphProperties *_field2;
    struct WrdCharacterProperties *_field3;
    int _field4;
    unsigned short _field5;
    int _field6;
    int _field7;
    int _field8;
    unsigned char _field9[9];
    int _field10;
    int _field11;
    unsigned short _field12;
    unsigned short *_field13;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field14;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdListLevelFormatOverride {
    CDUnknownFunctionPointerType *_field1;
    struct WrdListLevelFormat *_field2;
    int _field3;
    unsigned char _field4;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdNote;

struct WrdNoteTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdNote *> _field3;
};

struct WrdNumberRevisionMarkData;

struct WrdOutlineListData;

struct WrdPAPXFKP;

struct WrdParagraphProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdParagraphPropertiesOverridden _field3;
    struct WrdShading *_field4;
    struct WrdLineSpaceDescriptor *_field5;
    struct WrdDropCap *_field6;
    struct WrdBorder *_field7;
    struct WrdBorder *_field8;
    struct WrdBorder *_field9;
    struct WrdBorder *_field10;
    struct WrdBorder *_field11;
    struct WrdBorder *_field12;
    struct WrdAutoNumberListDescriptor *_field13;
    struct WrdDateTime *_field14;
    struct WrdNumberRevisionMarkData *_field15;
    struct WrdTabDescriptor *_field16;
    short _field17;
    short _field18;
    unsigned short _field19;
    unsigned short _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    struct ChVector<WrdTabDescriptor *> _field29;
    short *_field30;
    short *_field31;
    short *_field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    unsigned int _field45;
    unsigned int _field46;
    short _field47;
    short _field48;
    short _field49;
    short _field50;
    short _field51;
    unsigned short _field52;
    unsigned short _field53;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned char _field54;
    unsigned char _field55;
    unsigned char _field56;
};

struct WrdParagraphPropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdParagraphTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct WrdParagraphProperties *_field5;
    struct WrdParagraphProperties *_field6;
    struct WrdTableProperties *_field7;
    struct WrdTableProperties *_field8;
};

struct WrdParser;

struct WrdPredefinedStyleInfo {
    unsigned int :1;
};

struct WrdRdrText;

struct WrdSectionDescriptorTable;

struct WrdSectionProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdSectionPropertiesOverridden _field3;
    struct WrdBorder *_field4;
    struct WrdBorder *_field5;
    struct WrdBorder *_field6;
    struct WrdBorder *_field7;
    struct WrdDateTime *_field8;
    struct WrdOutlineListData *_field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field33;
    struct ChMap<unsigned int, unsigned int, CsLess<unsigned int>> _field34;
    unsigned short _field35;
    unsigned short _field36;
    unsigned short _field37;
    unsigned short _field38;
    unsigned short _field39;
    short _field40;
    short _field41;
    short _field42;
    short _field43;
    short _field44;
    short _field45;
    unsigned char _field46;
    unsigned char _field47;
    unsigned char _field48;
    unsigned char _field49;
    unsigned char _field50;
    unsigned char _field51;
    unsigned char _field52;
    unsigned char _field53;
    unsigned char _field54;
    unsigned char _field55;
    unsigned char _field56;
    unsigned char _field57;
    int _field58;
    int _field59;
    int _field60;
    int _field61;
    int _field62;
    int _field63;
    unsigned short _field64;
    unsigned short _field65;
    struct OcBinaryData _field66;
};

struct WrdSectionPropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdSectionTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct WrdSectionProperties *_field5;
    struct WrdSectionProperties *_field6;
};

struct WrdShading {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    _Bool _field3;
    struct CsColour _field4;
    struct CsColour _field5;
    _Bool _field6;
    int _field7;
    int _field8;
};

struct WrdStory;

struct WrdStoryTable {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct ChVector<WrdStory *> _field3;
};

struct WrdStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsString _field2;
    struct WrdParagraphProperties *_field3;
    struct WrdParagraphProperties *_field4;
    struct WrdCharacterProperties *_field5;
    struct WrdCharacterProperties *_field6;
    struct WrdTableProperties *_field7;
    struct WrdDateTime *_field8;
    struct ChMap<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>> _field9;
    struct ChMap<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>> _field10;
    struct ChMap<unsigned int, WrdTableProperties *, CsLess<unsigned int>> _field11;
    int _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdStyleSheet {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct WrdStyle *_field6;
    struct ChVector<WrdStyle *> _field7;
    struct WrdPredefinedStyleInfo _field8[156];
    unsigned short _field9;
};

struct WrdTabDescriptor;

struct WrdTableAutoformatLookSpecifier;

struct WrdTableCellDescriptor;

struct WrdTableProperties {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct WrdTablePropertiesOverridden _field3;
    struct WrdTableAutoformatLookSpecifier *_field4;
    struct WrdTableCellDescriptor *_field5;
    struct WrdShading *_field6;
    struct WrdBorder *_field7;
    struct WrdBorder *_field8;
    struct WrdBorder *_field9;
    struct WrdBorder *_field10;
    struct WrdBorder *_field11;
    struct WrdBorder *_field12;
    struct WrdBorder *_field13;
    struct WrdBorder *_field14;
    struct WrdDateTime *_field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    int _field39;
    int _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    struct ChVector<short> _field45;
    struct ChVector<WrdTableCellDescriptor *> _field46;
    int _field47;
    int _field48;
    int _field49;
    int _field50;
    int _field51;
    int _field52;
    int _field53;
    int _field54;
    unsigned short _field55;
    unsigned short _field56;
    unsigned short _field57;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    short _field58;
    short _field59;
    short _field60;
    short _field61;
    short _field62;
    short _field63;
    short _field64;
    short _field65;
    short _field66;
    short _field67;
    short _field68;
    short _field69;
    short _field70;
    short _field71;
    short _field72;
    short _field73;
    short _field74;
    short _field75;
    short _field76;
    short _field77;
    short _field78;
    short _field79;
    short _field80;
    short _field81;
    short _field82;
    unsigned char _field83;
    unsigned char _field84;
    unsigned char _field85;
    unsigned char _field86;
    unsigned char _field87;
    unsigned char _field88;
    unsigned char _field89;
    unsigned char _field90;
};

struct WrdTablePropertiesOverridden {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct WrdText {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    int _field3;
};

struct WrdTextRun {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct XLFormulaStream {
    CDUnknownFunctionPointerType *_field1;
};

struct XlArray;

struct XlBaseFormulaTable;

struct XlBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    ChVector_fe49fc78 _field42;
    ChVector_fe49fc78 _field43;
    ChVector_fe49fc78 _field44;
    struct XlIndex *_field45;
    struct XlRow *_field46;
    struct XlRecord *_field47;
    int _field48;
    int _field49;
    short _field50;
    int _field51;
    int _field52;
    struct ChVector<XlCell *> _field53;
    int _field54;
    unsigned char _field55;
    int _field56;
    struct XlWorksheetProperties _field57;
    struct XlWorksheetProtection _field58;
    struct XlCalculationProperties _field59;
    struct XlSortInfo _field60;
    struct XlDocumentInfo _field61;
    struct XlDocumentProtection _field62;
    struct XlFileProtection _field63;
    int _field64;
    int _field65;
    struct XlDocumentProperties _field66;
    struct XlSubstreamProperties _field67;
    struct XlRecord *_field68;
    struct SsrwOOStream *_field69;
    unsigned char _field70;
    struct XlObjectFactory *_field71;
    struct XlParserVisitor *_field72;
    _Bool _field73;
    CDUnknownFunctionPointerType *_field74;
    struct EshObjectFactory *_field75;
};

struct XlBrk;

struct XlCalculationProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    int _field3;
    short _field4;
    _Bool _field5;
    int _field6;
    _Bool _field7;
};

struct XlCell {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    int _field5;
    double _field6;
    struct XlString *_field7;
    int _field8;
    struct XlFormulaInfo *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlCellRow {
    CDUnknownFunctionPointerType *_field1;
    struct XlRowProperties *_field2;
    struct ChVector<XlCell *> _field3;
    unsigned int _field4;
};

struct XlCellTableInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned short _field4;
    unsigned short _field5;
};

struct XlCf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    int _field4;
    short _field5;
    short _field6;
    struct XlDXf *_field7;
    char *_field8;
    char *_field9;
};

struct XlChart3D {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct XlChartBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct SsrwOORootStorage *_field4;
    struct SsrwOOStorage *_field5;
    struct XlEshBinaryReader _field6;
    struct XlStringExtractor *_field7;
    struct XlSheetInfoTable *_field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    int _field28;
    int _field29;
    int _field30;
    int _field31;
    int _field32;
    int _field33;
    int _field34;
    int _field35;
    int _field36;
    int _field37;
    int _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    ChVector_fe49fc78 _field42;
    ChVector_fe49fc78 _field43;
    ChVector_fe49fc78 _field44;
    struct XlIndex *_field45;
    struct XlRow *_field46;
    struct XlRecord *_field47;
    int _field48;
    int _field49;
    short _field50;
    int _field51;
    int _field52;
    struct ChVector<XlCell *> _field53;
    int _field54;
    unsigned char _field55;
    int _field56;
    struct XlWorksheetProperties _field57;
    struct XlWorksheetProtection _field58;
    struct XlCalculationProperties _field59;
    struct XlSortInfo _field60;
    struct XlDocumentInfo _field61;
    struct XlDocumentProtection _field62;
    struct XlFileProtection _field63;
    int _field64;
    int _field65;
    struct XlDocumentProperties _field66;
    struct XlSubstreamProperties _field67;
    struct XlRecord *_field68;
    struct SsrwOOStream *_field69;
    unsigned char _field70;
    struct XlObjectFactory *_field71;
    struct XlParserVisitor *_field72;
    _Bool _field73;
    ChVector_fe49fc78 _field74;
    struct XlSubstreamProperties _field75;
    int _field76;
    int _field77;
    int _field78;
    struct CsRect<float> _field79;
    int _field80;
    int _field81;
    int _field82[4];
    int _field83;
    int _field84;
    int _field85;
    int _field86;
    int _field87;
    ChVector_fe49fc78 _field88;
    int _field89[4];
    int _field90;
    int _field91;
    struct AxisParentChildren _field92;
    struct AxisParentChildren _field93;
    struct ChVector<XlChartBinaryReader::SeriesDescriptor> _field94;
    struct ChVector<XlChartBinaryReader::PlotDescriptor> _field95;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field96;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field97;
    unsigned short _field98;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field99;
    struct ChMap<unsigned int, int, CsLess<unsigned int>> _field100;
    float _field101;
    float _field102;
    unsigned short _field103;
    unsigned short _field104;
    int _field105;
    ChVector_fe49fc78 _field106;
    ChVector_fe49fc78 _field107;
    int _field108;
    _Bool _field109;
    _Bool _field110;
    CDUnknownFunctionPointerType *_field111;
    struct EshObjectFactory *_field112;
};

struct XlChartChartFormat;

struct XlChartCustomLabelText {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct OcText *_field16;
    struct CsColour _field17;
    char *_field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    struct ChVector<XlChartTextFrame::TextRun> _field24;
    unsigned int _field25;
    unsigned int _field26;
    short _field27;
    short _field28;
    short _field29;
    short _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    struct XlString *_field46;
    unsigned int _field47;
    unsigned short _field48;
};

struct XlChartCustomLegend {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct OcText *_field16;
    struct CsColour _field17;
    char *_field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    struct ChVector<XlChartTextFrame::TextRun> _field24;
    unsigned int _field25;
    unsigned int _field26;
    short _field27;
    short _field28;
    short _field29;
    short _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    struct XlString *_field46;
    short _field47;
    _Bool _field48;
    _Bool _field49;
};

struct XlChartDataSeries {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    ChVector_fe49fc78 _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
};

struct XlChartErrorBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    ChVector_fe49fc78 _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    struct XlChartSerAuxErrBar _field16;
    int _field17;
};

struct XlChartFillStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    struct CsColour _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct XlChartFrameType {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
};

struct XlChartLegendFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct OcText *_field16;
    struct CsColour _field17;
    char *_field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    struct ChVector<XlChartTextFrame::TextRun> _field24;
    unsigned int _field25;
    unsigned int _field26;
    short _field27;
    short _field28;
    short _field29;
    short _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    struct XlString *_field46;
    int _field47;
    int _field48;
    int _field49;
    int _field50;
    _Bool _field51;
    _Bool _field52;
    _Bool _field53;
    _Bool _field54;
    _Bool _field55;
};

struct XlChartLineStyle {
    CDUnknownFunctionPointerType *_field1;
    struct CsColour _field2;
    int _field3;
    int _field4;
    unsigned short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    float _field9;
    int _field10;
};

struct XlChartLinkedData {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    char *_field3;
    unsigned short _field4;
    short _field5;
    _Bool _field6;
    struct ChMap<unsigned int, XlChartEnteredData *, CsLess<unsigned int>> _field7;
};

struct XlChartMarkerStyle {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct CsColour _field3;
    struct CsColour _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned short _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
};

struct XlChartPicF {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    int _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartPlot {
    CDUnknownFunctionPointerType *_field1;
    struct XlChart3D *_field2;
    struct XlChartChartFormat *_field3;
    struct XlChartSeriesFormat *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartLineStyle *_field8;
    struct ChVector<XlChartPlot::DefText> _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
};

struct XlChartPlotAxis {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct XlChartTextFrame *_field3;
    struct XlChartLineStyle *_field4;
    struct XlChartLineStyle *_field5;
    struct XlChartLineStyle *_field6;
    struct XlChartLineStyle *_field7;
    struct XlChartFillStyle *_field8;
    struct XlChartPicF *_field9;
    struct XlChartTick *_field10;
    unsigned short _field11;
    unsigned short _field12;
    _Bool _field13;
    _Bool _field14;
};

struct XlChartSerAuxErrBar {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    double _field3;
    unsigned short _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
};

struct XlChartSeries;

struct XlChartSeriesFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartLineStyle *_field2;
    struct XlChartFillStyle *_field3;
    struct XlChartMarkerStyle *_field4;
    struct XlChartPicF *_field5;
    int _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    int _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
};

struct XlChartTextFrame {
    CDUnknownFunctionPointerType *_field1;
    float _field2;
    float _field3;
    float _field4;
    float _field5;
    int _field6;
    int _field7;
    int _field8;
    int _field9;
    struct XlChartLineStyle *_field10;
    struct XlChartFillStyle *_field11;
    struct XlChartPicF *_field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    struct OcText *_field16;
    struct CsColour _field17;
    char *_field18;
    int _field19;
    int _field20;
    int _field21;
    int _field22;
    int _field23;
    struct ChVector<XlChartTextFrame::TextRun> _field24;
    unsigned int _field25;
    unsigned int _field26;
    short _field27;
    short _field28;
    short _field29;
    short _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
    _Bool _field40;
    _Bool _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    _Bool _field45;
    struct XlString *_field46;
};

struct XlChartTick;

struct XlChartTrendLine {
    CDUnknownFunctionPointerType *_field1;
    struct XlChartSeries *_field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    struct ChVector<XlChartSeriesFormat *> _field6;
    struct ChVector<XlChartSeriesFormat *> _field7;
    struct ChVector<XlChartCustomLabelText *> _field8;
    struct ChVector<unsigned int> _field9;
    ChVector_fe49fc78 _field10;
    struct XlChartLinkedData *_field11;
    struct XlChartLinkedData *_field12;
    struct XlChartLinkedData *_field13;
    struct XlChartLinkedData *_field14;
    struct ChVector<XlChartCustomLegend *> _field15;
    CDUnknownFunctionPointerType *_field16;
    struct XlHeader _field17;
    double _field18;
    double _field19;
    double _field20;
    int _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
};

struct XlCondFmt;

struct XlConditionalFormat {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct XlCondFmt *_field3;
};

struct XlDXf {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
    unsigned char _field5;
    unsigned char _field6;
    struct XlDXfUserFmt *_field7;
    struct XlDXfFont *_field8;
    struct XlDXfAlign *_field9;
    struct XlDXfBorders *_field10;
    struct XlDXfPattern *_field11;
    struct XlDXfProtect *_field12;
};

struct XlDXfAlign {
    int _field1;
    int _field2;
    short _field3;
    short _field4;
    _Bool _field5;
    _Bool _field6;
    int _field7;
};

struct XlDXfBorders;

struct XlDXfFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlString *_field2;
    int _field3;
    int _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    int _field15;
    int _field16;
    int _field17;
    int _field18;
    short _field19;
};

struct XlDXfPattern;

struct XlDXfProtect {
    _Bool _field1;
    _Bool _field2;
};

struct XlDXfUserFmt {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    short _field3;
    struct XlString *_field4;
};

struct XlDocumentInfo {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
};

struct XlDocumentProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    short _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    short _field14;
    short *_field15;
    struct OcText _field16;
    int _field17;
    struct XlRef _field18;
    _Bool _field19;
};

struct XlDocumentProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    short _field5;
    short _field6;
};

struct XlEshBinaryReader {
    CDUnknownFunctionPointerType *_field1;
    struct SsrwOOStream *_field2;
    struct EshParserVisitor *_field3;
    struct EshObjectFactory *_field4;
    unsigned int _field5;
    unsigned int _field6;
    struct ChStack<EshHeader> _field7;
    unsigned int _field8;
    struct EshHeader _field9;
    _Bool _field10;
    _Bool _field11;
    unsigned int _field12;
    struct XlReadStgStream *_field13;
};

struct XlEshClientAnchor {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    struct EshHeader _field3;
    unsigned short _field4;
    CsRect_0aefebc6 _field5;
    CsRect_0aefebc6 _field6;
};

struct XlEshObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
};

struct XlFileProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    short _field4;
    struct OcText _field5;
    struct OcText _field6;
    unsigned short _field7;
    char *_field8;
    unsigned int _field9;
    char *_field10;
};

struct XlFont {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
    short _field5;
    short _field6;
    int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    int _field14;
    unsigned char _field15;
    unsigned char _field16;
};

struct XlFormat {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    short _field4;
};

struct XlFormulaInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    struct OcText *_field3;
    char *_field4;
    unsigned int _field5;
    short _field6;
    struct XlShrFmla *_field7;
    struct XlArray *_field8;
    struct XlTable *_field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
};

struct XlFormulaParser;

struct XlFormulaProcessor {
    CDUnknownFunctionPointerType *_field1;
    struct XlFormulaParser *_field2;
    struct XlBaseFormulaTable *_field3;
    struct ChVector<CsString *> _field4;
    struct XlNameTable *_field5;
    ChVector_be6372b9 *_field6;
    struct XlLinkTable *_field7;
    unsigned int _field8;
    unsigned int _field9;
    char _field10[64];
    unsigned short *_field11;
    char *_field12;
    _Bool _field13;
    unsigned int _field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct XlGraphicsInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    short _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ChVector<XlGraphicsInfo::XlObjData *> _field8;
    _Bool _field9;
    int _field10;
    struct XlString *_field11;
    int _field12;
    int _field13;
    int _field14;
    _Bool _field15;
    unsigned short _field16;
    unsigned short _field17;
    unsigned short _field18;
    char *_field19;
    unsigned int _field20;
    unsigned int _field21;
    _Bool _field22;
    unsigned int _field23;
    unsigned int _field24;
    int _field25;
    int _field26;
    _Bool _field27;
    struct XlString *_field28;
};

struct XlHLink {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    struct XlString *_field7;
    struct XlString *_field8;
    struct XlString *_field9;
    struct XlString *_field10;
    struct XlString *_field11;
    unsigned short _field12;
};

struct XlHLinkToolTip {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlRef *_field3;
    struct XlString *_field4;
};

struct XlHeader {
    unsigned int _field1;
    short _field2;
    unsigned char _field3;
};

struct XlIndex;

struct XlLink;

struct XlLinkLookupTable {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct ChVector<XlXti *> _field3;
};

struct XlLinkTable {
    CDUnknownFunctionPointerType *_field1;
    struct XlLinkLookupTable _field2;
    struct ChVector<XlLink *> _field3;
};

struct XlName {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    struct XlString *_field3;
    struct XlString *_field4;
    struct XlString *_field5;
    struct XlString *_field6;
    struct XlString *_field7;
    char *_field8;
    short _field9;
    short _field10;
    short _field11;
    short _field12;
    unsigned char _field13;
    unsigned char _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    int _field22;
};

struct XlNameTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[14];
};

struct XlObjData;

struct XlObjectFactory {
    CDUnknownFunctionPointerType *_field1;
    struct XlEshObjectFactory *_field2;
};

struct XlPageProperties {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    struct OcText *_field6;
    struct OcText *_field7;
    _Bool _field8;
    _Bool _field9;
    short _field10;
    short _field11;
    short _field12;
    short _field13;
    short _field14;
    _Bool _field15;
    int _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    short _field23;
    short _field24;
    short _field25;
    double _field26;
    double _field27;
    short _field28;
};

struct XlPane;

struct XlParserVisitor;

struct XlPhoneticInfo;

struct XlPtg {
    char *_field1;
    int _field2;
    unsigned int _field3;
    unsigned short _field4;
};

struct XlReadStgStream;

struct XlRecord;

struct XlRef {
    unsigned short _field1;
    unsigned short _field2;
    short _field3;
    short _field4;
    _Bool _field5;
};

struct XlRow;

struct XlRowProperties;

struct XlScl;

struct XlSelection;

struct XlSheetInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
};

struct XlSheetInfoTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    char *_field3;
};

struct XlSheetPresentation {
    CDUnknownFunctionPointerType *_field1;
    struct XlWindow2 *_field2;
    struct XlScl *_field3;
    struct XlPane *_field4;
    struct XlSelection *_field5[4];
};

struct XlShrFmla;

struct XlSortInfo {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    struct OcText _field9;
    struct OcText _field10;
    struct OcText _field11;
};

struct XlString {
    CDUnknownFunctionPointerType *_field1;
    struct OcText _field2;
    struct ChVector<short *> _field3;
    struct XlPhoneticInfo *_field4;
    int _field5;
    short *_field6;
};

struct XlStringExtractor;

struct XlStyleTable {
    CDUnknownFunctionPointerType *_field1;
    struct CsSimpleHeapVector<XlRecord> _field2;
    struct OcText _field3[10];
};

struct XlSubstreamProperties {
    CDUnknownFunctionPointerType *_field1;
    struct XlSheetInfo _field2;
    struct XlPageProperties _field3;
    struct XlCellTableInfo _field4;
    int _field5;
    int _field6;
};

struct XlTable;

struct XlWindow2 {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    int _field3;
    short _field4;
    short _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned short _field18;
    short _field19;
};

struct XlWorksheetProperties {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    int _field3;
    unsigned short _field4;
    _Bool _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned short _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
    _Bool _field22;
    _Bool _field23;
    _Bool _field24;
    _Bool _field25;
    short _field26;
    struct ChVector<XlBrk *> _field27;
    struct ChVector<XlBrk *> _field28;
    struct OcText _field29;
};

struct XlWorksheetProtection {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    short _field20;
};

struct XlXf {
    CDUnknownFunctionPointerType *_field1;
    struct XlHeader _field2;
    short _field3;
    short _field4;
    short _field5;
    int _field6;
    int _field7;
    unsigned char _field8;
    unsigned char _field9;
    int _field10;
    int _field11;
    int _field12;
    int _field13;
    int _field14;
    int _field15;
    int _field16;
    int _field17;
    unsigned char _field18;
    unsigned char _field19;
    unsigned char _field20;
    unsigned char _field21;
    unsigned char _field22;
    unsigned char _field23;
    unsigned char _field24;
    _Bool _field25;
    _Bool _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    _Bool _field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    _Bool _field38;
    _Bool _field39;
};

struct XlXti;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _RootStorage;

struct _SSRW_BLOB {
    unsigned int cbSize;
    char *pData;
};

struct _SSRW_CLIPDATA;

struct _SSRW_FILETIME {
    unsigned int dwLowDateTime;
    unsigned int dwHighDateTime;
};

struct _SSRW_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwOO_GUID {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned char _field4[8];
};

struct _SsrwPropVariant {
    unsigned short vt;
    union {
        unsigned char cVal;
        short iVal;
        int lVal;
        double dblVal;
        unsigned short *bstrVal;
        struct _SSRW_BLOB blob;
        char *pszVal;
        struct _SSRW_FILETIME filetime;
        struct _SSRW_CLIPDATA *pclipdata;
        short boolVal;
    } v;
};

struct _StgInfo {
    int *_field1;
    int _field2;
    unsigned int _field3;
    unsigned long long _field4;
    long long _field5;
    long long _field6;
    int _field7;
    struct _SSRW_GUID _field8;
};

struct _Storage;

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __tree_node<TSUFlushableObjectInfo *, void *>;

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct _tagLevelItem {
    struct _tagLevelItem *_field1;
    struct _tagOctreeNode *_field2;
};

struct _tagOctree {
    struct _tagOctreeNode *_field1;
    unsigned short _field2;
    unsigned short _field3;
    struct _tagRgbQuad *_field4;
    struct _tagLevelItem *_field5[9];
};

struct _tagOctreeNode {
    struct _tagOctreeNode *_field1;
    struct _tagOctreeNode *_field2[8];
    unsigned int _field3;
    struct _tagFPRgbTriple {
        unsigned int _field1;
        unsigned int _field2;
        unsigned int _field3;
    } _field4;
    unsigned short _field5;
};

struct _tagRgbQuad {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct _xmlAttr {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlAttr *_field7;
    struct _xmlAttr *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    int _field11;
    void *_field12;
};

struct _xmlBuf;

struct _xmlDoc {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    int _field10;
    int _field11;
    struct _xmlDtd *_field12;
    struct _xmlDtd *_field13;
    struct _xmlNs *_field14;
    char *_field15;
    char *_field16;
    void *_field17;
    void *_field18;
    char *_field19;
    int _field20;
    struct _xmlDict *_field21;
    void *_field22;
    int _field23;
    int _field24;
};

struct _xmlDtd;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs {
    struct _xmlNs *_field1;
    int _field2;
    char *_field3;
    char *_field4;
    void *_field5;
    struct _xmlDoc *_field6;
};

struct _xmlOutputBuffer {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    struct _xmlCharEncodingHandler *_field4;
    struct _xmlBuf *_field5;
    struct _xmlBuf *_field6;
    int _field7;
    int _field8;
};

struct basic_istream<char, std::__1::char_traits<char>>;

struct basic_ostream<char, std::__1::char_traits<char>>;

struct basic_stringbuf<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct internal_state;

struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> {
    struct __tree<std::__1::__value_type<int, unsigned long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<int, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<long, unsigned long, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, unsigned long>>> {
    struct __tree<std::__1::__value_type<long, unsigned long>, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>, std::__1::allocator<std::__1::__value_type<long, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<long, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long, std::__1::__value_type<long, unsigned long>, std::__1::less<long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, EshOpt::Value, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, EshOpt::Value>>> {
    struct __tree<std::__1::__value_type<unsigned int, EshOpt::Value>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, EshOpt::Value>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, EshOpt::Value>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, EshOpt::Value>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PptBinaryReader::SKIP_CONDITIONS>>> {
    struct __tree<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, WrdCharacterProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdCharacterProperties *>>> {
    struct __tree<std::__1::__value_type<unsigned int, WrdCharacterProperties *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdCharacterProperties *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WrdCharacterProperties *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, WrdCharacterProperties *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, WrdCharacterProperties *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdCharacterProperties *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, WrdParagraphProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdParagraphProperties *>>> {
    struct __tree<std::__1::__value_type<unsigned int, WrdParagraphProperties *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdParagraphProperties *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WrdParagraphProperties *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, WrdParagraphProperties *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, WrdParagraphProperties *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdParagraphProperties *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, WrdTableProperties *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, WrdTableProperties *>>> {
    struct __tree<std::__1::__value_type<unsigned int, WrdTableProperties *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdTableProperties *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, WrdTableProperties *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, WrdTableProperties *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, WrdTableProperties *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, WrdTableProperties *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, XlChartEnteredData *, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, XlChartEnteredData *>>> {
    struct __tree<std::__1::__value_type<unsigned int, XlChartEnteredData *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, XlChartEnteredData *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, XlChartEnteredData *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, XlChartEnteredData *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, XlChartEnteredData *>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, int>>> {
    struct __tree<std::__1::__value_type<unsigned int, int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, int>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, int>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, unsigned int, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, unsigned int>>> {
    struct __tree<std::__1::__value_type<unsigned int, unsigned int>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, unsigned int>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, unsigned int>, CsLess<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_node<TSUFlushableObjectInfo *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerFlushingOrderLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
    struct __tree<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> {
        struct __tree_node<TSUFlushableObjectInfo *, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<TSUFlushableObjectInfo *, void *>>> _field2;
        struct __compressed_pair<unsigned long, TSUFlushableObjectInfoPointerTimeStampLess> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_node<unsigned int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<TSUStringChunk>;

struct timeval {
    long long tv_sec;
    int tv_usec;
};

struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
};

struct vector<OADTableCell *, std::__1::allocator<OADTableCell *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTableCell **, std::__1::allocator<OADTableCell *>> {
        id *_field1;
    } _field3;
};

struct vector<OADTablePartStyle *, std::__1::allocator<OADTablePartStyle *>> {
    id *_field1;
    id *_field2;
    struct __compressed_pair<OADTablePartStyle **, std::__1::allocator<OADTablePartStyle *>> {
        id *_field1;
    } _field3;
};

struct vector<TSUCustomFormatCondition, std::__1::allocator<TSUCustomFormatCondition>> {
    CDStruct_183601bc *_field1;
    CDStruct_183601bc *_field2;
    struct __compressed_pair<TSUCustomFormatCondition *, std::__1::allocator<TSUCustomFormatCondition>> {
        CDStruct_183601bc *_field1;
    } _field3;
};

struct vector<WBTextBoxReaderInfo, std::__1::allocator<WBTextBoxReaderInfo>> {
    struct WBTextBoxReaderInfo *_field1;
    struct WBTextBoxReaderInfo *_field2;
    struct __compressed_pair<WBTextBoxReaderInfo *, std::__1::allocator<WBTextBoxReaderInfo>> {
        struct WBTextBoxReaderInfo *_field1;
    } _field3;
};

struct vector<boost::shared_ptr<TSUStringChunk>, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> {
    struct shared_ptr<TSUStringChunk> *__begin_;
    struct shared_ptr<TSUStringChunk> *__end_;
    struct __compressed_pair<boost::shared_ptr<TSUStringChunk>*, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> {
        struct shared_ptr<TSUStringChunk> *__first_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct yy_buffer_state;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    WDShading *shading;
    WDBorder *topBorder;
    WDBorder *leftBorder;
    WDBorder *bottomBorder;
    WDBorder *rightBorder;
    WDBorder *diagonalUpBorder;
    WDBorder *diagonalDownBorder;
    WDBorder *insideHorizontalBorder;
    WDBorder *insideVerticalBorder;
    int widthType;
    short topMargin;
    int topMarginType;
    short bottomMargin;
    int bottomMarginType;
    short leftMargin;
    int leftMarginType;
    short rightMargin;
    int rightMarginType;
    int verticalAlignment;
    char textDirection;
    int deleted;
    int edited;
    int formattingChanged;
    unsigned short indexToAuthorIDOfDeletion;
    unsigned short indexToAuthorIDOfEdit;
    unsigned short indexToAuthorIDOfFormattingChange;
    NSDate *deletionDate;
    NSDate *editDate;
    NSDate *formattingChangeDate;
    unsigned int shadingOverridden:1;
    unsigned int topBorderOverridden:1;
    unsigned int leftBorderOverridden:1;
    unsigned int bottomBorderOverridden:1;
    unsigned int rightBorderOverridden:1;
    unsigned int diagonalUpBorderOverridden:1;
    unsigned int diagonalDownBorderOverridden:1;
    unsigned int insideHorizontalBorderOverridden:1;
    unsigned int insideVerticalBorderOverridden:1;
    unsigned int widthTypeOverridden:1;
    unsigned int topMarginOverridden:1;
    unsigned int topMarginTypeOverridden:1;
    unsigned int bottomMarginOverridden:1;
    unsigned int bottomMarginTypeOverridden:1;
    unsigned int leftMarginOverridden:1;
    unsigned int leftMarginTypeOverridden:1;
    unsigned int rightMarginOverridden:1;
    unsigned int rightMarginTypeOverridden:1;
    unsigned int verticalAlignmentOverridden:1;
    unsigned int textDirectionOverridden:1;
    unsigned int verticallyMergedCell:1;
    unsigned int verticallyMergedCellOverridden:1;
    unsigned int firstInSetOfVerticallyMergedCells:1;
    unsigned int firstInSetOfVerticallyMergedCellsOverridden:1;
    unsigned int noWrap:1;
    unsigned int noWrapOverridden:1;
    unsigned int deletedOverridden:1;
    unsigned int editedOverridden:1;
    unsigned int formattingChangedOverridden:1;
    unsigned int indexToAuthorIDOfDeletionOverridden:1;
    unsigned int indexToAuthorIDOfEditOverridden:1;
    unsigned int indexToAuthorIDOfFormattingChangeOverridden:1;
    unsigned int deletionDateOverridden:1;
    unsigned int editDateOverridden:1;
    unsigned int formattingChangeDateOverridden:1;
} CDStruct_dbdf0818;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    id _field12;
    id _field13;
    id _field14;
    id _field15;
    id _field16;
    int _field17;
    int _field18;
    int _field19;
    short _field20;
    short _field21;
    id _field22;
    id _field23;
    float _field24;
    unsigned short _field25;
    unsigned short _field26;
    unsigned short _field27;
    unsigned short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned char _field32;
    unsigned char _field33;
    float _field34;
    unsigned char _field35;
    unsigned char _field36;
    unsigned char _field37;
    unsigned char _field38;
    unsigned char _field39;
    unsigned char _field40;
    unsigned char _field41;
    unsigned char _field42;
    int _field43;
    unsigned char _field44;
    unsigned char _field45;
    _Bool _field46;
    unsigned char _field47;
    unsigned char _field48;
    unsigned char _field49;
    unsigned char _field50;
    unsigned char _field51;
    unsigned char _field52;
    unsigned char _field53;
    unsigned char _field54;
    unsigned char _field55;
    unsigned char _field56;
    unsigned short _field57;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_4d9d7b4c;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    double _field5;
    unsigned int :8;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10;
    unsigned char _field11;
    unsigned char _field12;
    unsigned short _field13;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_b87b2d04;

typedef struct {
    WDBorder *topBorder;
    WDBorder *leftBorder;
    WDBorder *bottomBorder;
    WDBorder *rightBorder;
    int breakType;
    long long pageWidth;
    long long pageHeight;
    unsigned int pageScale;
    int pageOrientation;
    int textDirection;
    long long leftMargin;
    long long rightMargin;
    long long topMargin;
    long long bottomMargin;
    long long headerMargin;
    long long footerMargin;
    long long gutterMargin;
    _Bool rtlGutter;
    int borderDepth;
    int borderDisplay;
    int borderOffset;
    short lineNumberStart;
    unsigned short lineNumberIncrement;
    short lineNumberDistance;
    int lineNumberRestart;
    int pageNumberFormat;
    unsigned short pageNumberStart;
    int chapterNumberSeparator;
    NSMutableArray *columnWidths;
    NSMutableArray *columnSpaces;
    unsigned short columnCount;
    long long columnSpace;
    int verticalJustification;
    unsigned short indexToAuthorIDOfFormattingChange;
    NSDate *formattingChangeDate;
    unsigned int bidi:1;
    unsigned int topBorderOverridden:1;
    unsigned int leftBorderOverridden:1;
    unsigned int bottomBorderOverridden:1;
    unsigned int rightBorderOverridden:1;
    unsigned int breakTypeOverridden:1;
    unsigned int pageWidthOverridden:1;
    unsigned int pageHeightOverridden:1;
    unsigned int pageScaleOverridden:1;
    unsigned int pageOrientationOverridden:1;
    unsigned int textDirectionOverridden:1;
    unsigned int leftMarginOverridden:1;
    unsigned int rightMarginOverridden:1;
    unsigned int topMarginOverridden:1;
    unsigned int bottomMarginOverridden:1;
    unsigned int headerMarginOverridden:1;
    unsigned int footerMarginOverridden:1;
    unsigned int gutterMarginOverridden:1;
    unsigned int rtlGutterOverridden:1;
    unsigned int borderDepthOverridden:1;
    unsigned int borderDisplayOverridden:1;
    unsigned int borderOffsetOverridden:1;
    unsigned int lineNumberStartOverridden:1;
    unsigned int lineNumberIncrementOverridden:1;
    unsigned int lineNumberDistanceOverridden:1;
    unsigned int lineNumberRestartOverridden:1;
    unsigned int pageNumberFormatOverridden:1;
    unsigned int pageNumberStartOverridden:1;
    unsigned int pageNumberRestart:1;
    unsigned int pageNumberRestartOverridden:1;
    unsigned int chapterNumberSeparatorOverridden:1;
    unsigned int columnCountOverridden:1;
    unsigned int columnsEqualWidth:1;
    unsigned int columnsEqualWidthOverridden:1;
    unsigned int columnSpaceOverridden:1;
    unsigned int verticalJustificationOverridden:1;
    unsigned int titlePage:1;
    unsigned int titlePageOverridden:1;
    unsigned int formattingChanged:1;
    unsigned int formattingChangedOverridden:1;
    unsigned int indexToAuthorIDOfFormattingChangeOverridden:1;
    unsigned int formattingChangeDateOverridden:1;
    unsigned int bidiOverridden:1;
} CDStruct_a57204a6;

typedef struct {
    WDStyle *baseStyle;
    unsigned short look;
    WDShading *shading;
    WDBorder *topBorder;
    WDBorder *leftBorder;
    WDBorder *bottomBorder;
    WDBorder *rightBorder;
    WDBorder *insideHorizontalBorder;
    WDBorder *insideVerticalBorder;
    int justification;
    int alignment;
    long long width;
    int widthType;
    short indent;
    int indentType;
    short cellSpacing;
    int cellSpacingType;
    int verticalAnchor;
    int horizontalAnchor;
    long long verticalPosition;
    long long horizontalPosition;
    long long leftDistanceFromText;
    long long topDistanceFromText;
    long long rightDistanceFromText;
    long long bottomDistanceFromText;
    int deleted;
    int edited;
    int formattingChanged;
    _Bool biDirectional;
    unsigned short indexToAuthorIDOfDeletion;
    unsigned short indexToAuthorIDOfEdit;
    unsigned short indexToAuthorIDOfFormattingChange;
    NSDate *deletionDate;
    NSDate *editDate;
    NSDate *formattingChangeDate;
    unsigned int baseStyleOverridden:1;
    _Bool lookOverridden;
    unsigned int shadingOverridden:1;
    unsigned int topBorderOverridden:1;
    unsigned int leftBorderOverridden:1;
    unsigned int bottomBorderOverridden:1;
    unsigned int rightBorderOverridden:1;
    unsigned int insideHorizontalBorderOverridden:1;
    unsigned int insideVerticalBorderOverridden:1;
    unsigned int justificationOverridden:1;
    unsigned int alignmentOverridden:1;
    unsigned int widthOverridden:1;
    unsigned int widthTypeOverridden:1;
    unsigned int indentOverridden:1;
    unsigned int indentTypeOverridden:1;
    unsigned int cellSpacingOverridden:1;
    unsigned int cellSpacingTypeOverridden:1;
    unsigned int verticalAnchorOverridden:1;
    unsigned int horizontalAnchorOverridden:1;
    unsigned int verticalPositionOverridden:1;
    unsigned int horizontalPositionOverridden:1;
    unsigned int leftDistanceFromTextOverridden:1;
    unsigned int topDistanceFromTextOverridden:1;
    unsigned int rightDistanceFromTextOverridden:1;
    unsigned int bottomDistanceFromTextOverridden:1;
    unsigned int deletedOverridden:1;
    unsigned int editedOverridden:1;
    unsigned int formattingChangedOverridden:1;
    unsigned int biDirectionalOverridden:1;
    unsigned int indexToAuthorIDOfDeletionOverridden:1;
    unsigned int indexToAuthorIDOfEditOverridden:1;
    unsigned int indexToAuthorIDOfFormattingChangeOverridden:1;
    unsigned int deletionDateOverridden:1;
    unsigned int editDateOverridden:1;
    unsigned int formattingChangeDateOverridden:1;
} CDStruct_f508e1f6;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
} CDStruct_a06f635e;

typedef struct {
    unsigned char _field1;
    unsigned char _field2;
} CDStruct_5c52f79b;

typedef struct {
    unsigned int m_data1;
    unsigned short m_data2;
    unsigned short m_data3;
    unsigned char m_data4[8];
} CDStruct_214f2dba;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_ba543347;

typedef struct {
    int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
} CDStruct_1cdbed2b;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
} CDStruct_90be15af;

typedef struct {
    long long _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_70d275a4;

typedef struct {
    short _field1;
    unsigned char _field2;
    unsigned char _field3;
} CDStruct_bd9d81e1;

typedef struct {
    short widthBefore;
    int widthBeforeType;
    short widthAfter;
    int widthAfterType;
    long long height;
    int heightType;
    unsigned int widthBeforeOverridden:1;
    unsigned int widthBeforeTypeOverridden:1;
    unsigned int widthAfterOverridden:1;
    unsigned int widthAfterTypeOverridden:1;
    unsigned int heightOverridden:1;
    unsigned int heightTypeOverridden:1;
    unsigned int header:1;
    unsigned int headerOverridden:1;
} CDStruct_43955328;

typedef struct CDStruct_183601bc;

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    id _field7;
    id _field8;
    CDStruct_5c52f79b _field9;
    id _field10;
    id _field11;
    long long _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    long long _field15;
    long long _field16;
    long long _field17;
    long long _field18;
    long long _field19;
    short _field20;
    short _field21;
    short _field22;
    short _field23;
    short _field24;
    short _field25;
    short _field26;
    short _field27;
    short _field28;
    unsigned short _field29;
    unsigned short _field30;
    unsigned short _field31;
    unsigned short _field32;
    unsigned short _field33;
    char _field34;
    unsigned char _field35;
    unsigned char _field36;
    unsigned char _field37;
    unsigned char _field38;
    unsigned char _field39;
    unsigned char _field40;
    unsigned char _field41;
    unsigned char _field42;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_8641e206;

typedef struct {
    int mFormatType;
    union {
        struct {
            unsigned int mCurrencyCodeIndex:16;
            unsigned int mDecimalPlaces:8;
            unsigned int mNegativeStyle:3;
            unsigned int mShowThousandsSeparator:1;
            unsigned int mUseAccountingStyle:1;
        } mNumberFormatStruct;
        struct {
            unsigned int mFractionAccuracy:8;
        } mFractionFormatStruct;
        struct {
            unsigned int mBase:8;
            unsigned int mBasePlaces:8;
            unsigned int mBaseUseMinusSign:1;
        } mBaseFormatStruct;
        struct {
            unsigned int mSuppressDateFormat:1;
            unsigned int mSuppressTimeFormat:1;
            NSString *mDateTimeFormat;
        } mDateFormatStruct;
        struct {
            unsigned int mUseAutomaticUnits:1;
            int mDurationUnitSmallest;
            int mDurationUnitLargest;
            int mDurationStyle;
        } mDurationFormatStruct;
        struct {
            unsigned int mCustomFormatID;
            CDStruct_183601bc *mData;
        } mCustomFormatStruct;
        struct {
            double mMinimum;
            double mMaximum;
            double mIncrement;
            int mDisplayFormatType;
            unsigned int mOrientation:2;
            unsigned int mPosition:2;
        } mControlFormatStruct;
        struct {
            int mInitialValue;
            unsigned int mMultipleChoiceListFormatID;
            id mData;
        } mMultipleChoiceListFormatStruct;
    } ;
} CDStruct_bfed0e84;

// Template types
typedef struct ChVector<OcText> {
    struct OcText *_field1;
    struct OcText *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_be6372b9;

typedef struct ChVector<PBReaderMasterStyleInfo> {
    struct PBReaderMasterStyleInfo *_field1;
    struct PBReaderMasterStyleInfo *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_b45fc7a7;

typedef struct ChVector<XlPtg *> {
    struct XlPtg **_field1;
    struct XlPtg **_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_2ce397a3;

typedef struct ChVector<int> {
    int *_field1;
    int *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_fe49fc78;

typedef struct ChVector<long> {
    long long *_field1;
    long long *_field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} ChVector_fa1ffc74;

typedef struct CsPoint<int> {
    int _field1[2];
} CsPoint_c846a6ec;

typedef struct CsRect<int> {
    int _field1[4];
} CsRect_0aefebc6;

typedef struct EshTablePropVal<EshComputedRect> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshComputedRect> _field2;
} EshTablePropVal_64904f96;

typedef struct EshTablePropVal<EshFormula> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshFormula> _field2;
} EshTablePropVal_f007a3b0;

typedef struct EshTablePropVal<EshPathCommand> {
    CDUnknownFunctionPointerType *_field1;
    struct ChVector<EshPathCommand> _field2;
} EshTablePropVal_ea625207;

typedef struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_node<unsigned int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_55031187;

typedef struct vector<CGRect, std::__1::allocator<CGRect>> {
    struct CGRect *_field1;
    struct CGRect *_field2;
    struct __compressed_pair<CGRect *, std::__1::allocator<CGRect>> {
        struct CGRect *_field1;
    } _field3;
} vector_ea45b3ba;

#pragma mark Named Unions

union EFData {
    struct {
        unsigned long long _field1;
        unsigned long long _field2;
        _Bool _field3;
    } _field1;
    struct {
        unsigned long long _field1;
        void *_field2;
    } _field2;
    struct {
        unsigned int _field1;
        unsigned int _field2;
        _Bool _field3;
        _Bool _field4;
    } _field3;
};

union Value {
    struct RGB _field1;
    unsigned short _field2;
    unsigned short _field3;
    struct AdjustedColor _field4;
};

union YYSTYPE {
    struct EFRefTok _field1;
    id _field2;
    unsigned long long _field3;
    int _field4;
    double _field5;
    id _field6;
    struct EFStrTok _field7;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
// UUID: 37C1A68C-D8A0-3798-8229-1AB2059FC8FC
//
//                           Arch: x86_64
//                Current version: 222.0.0
//          Compatibility version: 1.0.0
//                 Source version: 222.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CHAutoStyling <NSObject>
- (OADFill *)autoTextFill;
- (OADStroke *)autoStrokeForSeriesIndex:(unsigned long long)arg1;
- (void)resolveMarker:(CHDMarker *)arg1 withSeriesGraphicProperties:(OADGraphicProperties *)arg2 forSeriesIndex:(unsigned long long)arg3;
- (void)resolveLegendGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveMinorGridLinesGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveMajorGridLinesGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveAxisGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolvePlotAreaGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveFloorGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveWallGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveChartAreaGraphicProperties:(OADGraphicProperties *)arg1;
- (void)resolveGraphicPropertiesOfErrorBar:(OADGraphicProperties *)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)resolveGraphicPropertiesOfTrendline:(OADGraphicProperties *)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)resolveGraphicPropertiesOfSeries:(OADGraphicProperties *)arg1 forSeriesIndex:(unsigned long long)arg2 isLine:(_Bool)arg3;
- (void)resolveGraphicPropertiesOfSeries:(OADGraphicProperties *)arg1 forSeriesIndex:(unsigned long long)arg2;

@optional
- (void)setAutoChartStrokeIsHollow:(_Bool)arg1;
- (void)setAutoChartFillIsHollow:(_Bool)arg1;
@end

@protocol CHDMarkerOwner <NSObject>
- (void)setMarker:(CHDMarker *)arg1;
- (CHDMarker *)marker;
@end

@protocol CMMapperRoot
- (struct CGSize)pageSizeForDevice;
- (NSString *)documentTitle;
- (CMArchiveManager *)archiver;
- (OADBlip *)blipAtIndex:(unsigned int)arg1;
@end

@protocol CMMapperRootArchiver
- (CMArchiveManager *)archiver;
- (CMMapper *)root;
@end

@protocol EDFormulaBuilding <NSObject>
- (_Bool)isSupportedFormula;
- (int)warningType;
- (void)setWarning:(int)arg1;
- (_Bool)uppercaseArgAtIndex:(unsigned int)arg1;
- (_Bool)fixTableOfConstantsRefs;
- (_Bool)wrapArgumentsWithOperator:(int)arg1 argumentCount:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (_Bool)addInfixOperator:(int)arg1 atIndex:(unsigned int)arg2 factor:(double)arg3;
- (_Bool)shrinkSpanningRefAtArgIndex:(unsigned int)arg1;
- (void)markLastTokenAsSpanningRefVertically:(_Bool)arg1 withMin:(unsigned short)arg2 andMax:(unsigned short)arg3;
- (void)markLastTokenAsDuration;
- (EDLinkReference *)lastTokenRefOrArea3dLinkRefIsValid:(_Bool *)arg1 withEDLinks:(EDLinksCollection *)arg2;
- (_Bool)convertLastRefsToArea;
- (_Bool)convertToIntersect:(unsigned int)arg1;
- (_Bool)convertToList:(unsigned int)arg1;
- (_Bool)convertToList:(unsigned int)arg1 withFinalParen:(_Bool)arg2;
- (_Bool)addArrayWithCol:(int)arg1 andRow:(int)arg2;
- (char *)setExtendedDataForLastTokenAtIndex:(unsigned int)arg1 length:(unsigned int)arg2;
- (_Bool)insertExternalName:(unsigned long long)arg1 withLink:(unsigned long long)arg2 atIndex:(unsigned int)arg3;
- (_Bool)insertName:(unsigned long long)arg1 atIndex:(unsigned int)arg2;
- (char *)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2 numArgs:(int)arg3;
- (char *)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2;
- (void)removeTokenAtIndex:(unsigned long long)arg1;
- (int)tokenTypeAtIndex:(unsigned long long)arg1;
@end

@protocol EDImmutableObject <NSObject>
- (void)setDoNotModify:(_Bool)arg1;
@end

@protocol EDKeyedObject <NSObject>
- (long long)key;
@end

@protocol EFHelper <NSObject>
- (int)columnNumber;
- (int)rowNumber;
- (int)resolveFunctionName:(NSString *)arg1;
- (_Bool)isCurrentSheet:(NSString *)arg1;
- (unsigned long long)resolveTableColumn:(EDTable *)arg1 columnName:(NSString *)arg2;
- (unsigned long long)resolveTableToSheetId:(NSString *)arg1;
- (EDTable *)resolveTable:(NSString *)arg1;
- (unsigned long long)resolveFile:(NSString *)arg1;
- (unsigned long long)resolveFirstSheet:(NSString *)arg1 lastSheet:(NSString *)arg2;
- (unsigned long long)resolveSheet:(NSString *)arg1;
- (unsigned long long)resolveName:(NSString *)arg1;
@end

@protocol MFDeviceDriver
- (MFBitmap *)createBitmap:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(const char *)arg6:(unsigned int)arg7;
- (MFBitmap *)createDIBitmap:(MFDeviceContext *)arg1:(const char *)arg2:(unsigned int)arg3:(const char *)arg4:(unsigned int)arg5:(int)arg6;
- (MFBitmap *)createDIBitmap:(MFDeviceContext *)arg1:(const char *)arg2:(unsigned int)arg3:(int)arg4;
- (MFRegion *)createRegionWithPath:(MFPath *)arg1;
- (MFRegion *)createRegionWithRects:(NSArray *)arg1:(MFDeviceContext *)arg2;
- (MFPath *)createPath;
- (MFFont *)createFontIndirectW:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(NSString *)arg15:(NSString *)arg16:(NSString *)arg17:(unsigned int)arg18:(unsigned int)arg19:(unsigned int)arg20:(unsigned int)arg21:(unsigned int)arg22;
- (MFFont *)createFont:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(NSString *)arg15;
- (MFFont *)createFont:(int)arg1;
- (MFPen *)createPen:(int)arg1:(int)arg2:(OITSUColor *)arg3:(double *)arg4;
- (MFPen *)createPen;
- (MFBrush *)createNullBrush;
- (MFBrush *)createSolidBrush:(OITSUColor *)arg1;
- (MFBrush *)createPatternBrush:(MFBitmap *)arg1 usePaletteForBilevel:(_Bool)arg2;
- (MFBrush *)createHatchBrush:(OITSUColor *)arg1:(int)arg2;
- (int)plgBlt:(MFDeviceContext *)arg1:(struct CGPoint *)arg2:(MFBitmap *)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(MFBitmap *)arg8:(int)arg9:(int)arg10:(struct CGAffineTransform *)arg11:(unsigned int)arg12;
- (int)maskBlt:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(MFBitmap *)arg6:(int)arg7:(int)arg8:(MFBitmap *)arg9:(int)arg10:(int)arg11:(unsigned int)arg12:(struct CGAffineTransform *)arg13:(unsigned int)arg14;
- (int)stretchBlt:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(MFBitmap *)arg6:(int)arg7:(int)arg8:(int)arg9:(int)arg10:(unsigned int)arg11:(struct CGAffineTransform *)arg12:(unsigned int)arg13;
- (int)bitBlt:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(MFBitmap *)arg6:(int)arg7:(int)arg8:(unsigned int)arg9:(struct CGAffineTransform *)arg10:(unsigned int)arg11;
- (int)patBlt:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(unsigned int)arg6;
- (int)setMetaRgn;
- (int)removeClip;
- (int)intersectClipRect:(struct CGRect)arg1;
- (int)excludeClipRect:(struct CGRect)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (int)activateTransform:(struct CGAffineTransform)arg1;
- (int)setViewBox:(double)arg1:(double)arg2:(double)arg3:(double)arg4;
- (int)bezier:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)bezierTo:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7;
- (int)ellipse:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5;
- (int)roundRect:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(double)arg6:(double)arg7;
- (int)rectangle:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5;
- (int)lineTo:(MFDeviceContext *)arg1:(double)arg2:(double)arg3;
- (int)polyPolygon:(MFDeviceContext *)arg1:(struct CGPoint *)arg2:(int *)arg3:(int)arg4;
- (int)polygon:(MFDeviceContext *)arg1:(struct CGPoint *)arg2:(int)arg3;
- (int)polyPolyline:(MFDeviceContext *)arg1:(struct CGPoint *)arg2:(int *)arg3:(int)arg4;
- (int)polyline:(MFDeviceContext *)arg1:(struct CGPoint *)arg2:(int)arg3;
- (int)chord:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)pie:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)angleArc:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(unsigned int)arg4:(double)arg5:(double)arg6;
- (int)arcTo:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)arc:(MFDeviceContext *)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)textOut:(MFDeviceContext *)arg1:(int *)arg2:(int *)arg3:(NSString *)arg4;
- (int)extTextOut:(MFDeviceContext *)arg1:(int *)arg2:(int *)arg3:(id)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9:(int *)arg10:(int)arg11;
@end

@protocol MFObject
- (int)selectInto:(MFDeviceContext *)arg1;
@end

@protocol MFReader <NSObject>
- (int)play:(NSData *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol OABBasePropertiesManager <OABFillPropertiesManager>
- (int)shadowSoftness;
- (int)shadowOffsetY;
- (int)shadowOffsetX;
- (int)shadowAlpha;
- (struct EshColor)shadowColor;
- (int)shadowType;
- (_Bool)isShadowed;
- (int)strokeEndArrowLength;
- (int)strokeEndArrowWidth;
- (int)strokeEndArrowType;
- (int)strokeStartArrowLength;
- (int)strokeStartArrowWidth;
- (int)strokeStartArrowType;
- (int)strokeJoinStyle;
- (int)strokeCapStyle;
- (const struct EshTablePropVal<int> *)strokeCustomDash;
- (int)strokePresetDash;
- (int)strokeCompoundType;
- (int)strokeMiterLimit;
- (int)strokeWidth;
- (int)strokeFgAlpha;
- (NSString *)strokeFillBlipName;
- (unsigned int)strokeFillBlipID;
- (int)strokeFillType;
@end

@protocol OABColorPropertiesManager <NSObject>
- (struct EshBlip *)fillBlipDataReference;
- (struct EshColor)shadowColor;
- (struct EshColor)strokeBgColor;
- (struct EshColor)strokeFgColor;
- (_Bool)isStroked;
- (struct EshColor)fillBgColor;
- (struct EshColor)fillFgColor;
- (_Bool)isFilled;
@end

@protocol OABFillPropertiesManager <OABColorPropertiesManager>
- (NSString *)fillBlipName;
- (unsigned int)fillBlipID;
- (const struct EshTablePropVal<EshGradientStop> *)fillGradientColors;
- (int)fillFocusBottom;
- (int)fillFocusRight;
- (int)fillFocusTop;
- (int)fillFocusLeft;
- (int)fillFocus;
- (int)fillAngle;
- (int)fillBgAlpha;
- (int)fillFgAlpha;
- (int)fillType;
@end

@protocol OABPropertiesManager <OABBasePropertiesManager>
- (_Bool)hidden;
- (_Bool)textPathStrikethrough;
- (_Bool)textPathSmallcaps;
- (_Bool)textPathUnderline;
- (_Bool)textPathItalic;
- (_Bool)textPathBold;
- (NSString *)textPathFontFamily;
- (int)textPathFontSize;
- (int)textPathTextAlignment;
- (NSString *)textPathUnicodeString;
- (_Bool)isTextPath;
- (_Bool)isShadowOK;
- (_Bool)isStrokeOK;
- (_Bool)isFillOK;
@end

@protocol OABReaderClient
+ (_Bool)tablesAreAllowed;
+ (_Bool)escherIsFullySupported;
+ (void)readClientDataFromTableCell:(ESDObject *)arg1 toTableCell:(OADTableCell *)arg2 state:(OABReaderState *)arg3;
+ (void)readClientDataFromGroup:(ESDContainer *)arg1 toGroup:(OADGroup *)arg2 state:(OABReaderState *)arg3;
+ (void)readClientDataFromShape:(ESDObject *)arg1 toGraphic:(OADGraphic *)arg2 state:(OABReaderState *)arg3;
@end

@protocol OADClient <NSObject>
- (struct CGRect)bounds;
- (_Bool)hasBounds;
@end

@protocol OADColorPalette <NSObject>
- (OITSUColor *)colorWithIndex:(unsigned long long)arg1;
@end

@protocol OADDrawableContainer <NSObject>
- (void)replaceChild:(OADDrawable *)arg1 with:(OADDrawable *)arg2;
- (NSArray *)children;
- (OADDrawable *)childAtIndex:(unsigned long long)arg1;
- (void)addChildren:(NSArray *)arg1;
- (void)addChild:(OADDrawable *)arg1;
- (unsigned long long)childCount;
- (void)setLogicalBounds:(struct CGRect)arg1;
- (struct CGRect)logicalBounds;
@end

@protocol OADEffectsParent <NSObject>
- (_Bool)hasEffects;
- (void)setEffects:(NSArray *)arg1;
- (NSArray *)effects;
@end

@protocol OADImageRecolorInfoClient <NSObject>
- (OADImageRecolorInfo *)imageRecolorInfo;
@end

@protocol OADProperties3DParent <NSObject>
- (_Bool)hasShape3D;
- (void)setShape3D:(OADShape3D *)arg1;
- (OADShape3D *)shape3D;
- (_Bool)hasScene3D;
- (void)setScene3D:(OADScene3D *)arg1;
- (OADScene3D *)scene3D;
@end

@protocol OADTextClient <NSObject>
- (_Bool)hasText;
@end

@protocol OAVReadClient
+ (int)vmlSupportLevel;
+ (void)readClientDataFromGroup:(struct _xmlNode *)arg1 toGroup:(OADGroup *)arg2 state:(OAVReadState *)arg3;
+ (void)readClientDataFromShape:(struct _xmlNode *)arg1 toGraphic:(OADGraphic *)arg2 state:(OAVReadState *)arg3;
@end

@protocol OAXClient
+ (_Bool)sourceDrawableIsTopLevel:(struct _xmlNode *)arg1;
- (OADDrawable *)readGraphicData:(struct _xmlNode *)arg1 state:(OAXDrawingState *)arg2;
- (OADImage *)readOle:(struct _xmlNode *)arg1 state:(OAXDrawingState *)arg2;
- (void)postprocessHyperlink:(OADHyperlink *)arg1 relationship:(OCPPackageRelationship *)arg2 state:(OAXDrawingState *)arg3;
- (OADTextField *)readClientTextField:(struct _xmlNode *)arg1 paragraph:(OADParagraph *)arg2 state:(OAXDrawingState *)arg3;
- (void)readBlipExtWithURI:(NSString *)arg1 fromNode:(struct _xmlNode *)arg2 toDrawable:(OADDrawable *)arg3 state:(OAXDrawingState *)arg4;
- (void)readClientDataFromGraphicalFramePropertiesNode:(struct _xmlNode *)arg1 toDrawable:(OADDrawable *)arg2 state:(OAXDrawingState *)arg3;
- (void)readClientDataFromGraphicDataNode:(struct _xmlNode *)arg1 toDiagram:(ODDDiagram *)arg2 state:(OAXDrawingState *)arg3;
- (void)readClientDataFromGroupNode:(struct _xmlNode *)arg1 toGroup:(OADGroup *)arg2 state:(OAXDrawingState *)arg3;
- (void)readClientDataFromPictureNode:(struct _xmlNode *)arg1 toImage:(OADImage *)arg2 state:(OAXDrawingState *)arg3;
- (void)readClientDataFromShapeNode:(struct _xmlNode *)arg1 toShape:(OADShape *)arg2 state:(OAXDrawingState *)arg3;
- (void)readClientDataFromNode:(struct _xmlNode *)arg1 toDrawable:(OADDrawable *)arg2 state:(OAXDrawingState *)arg3;
- (struct _xmlNode *)genericNonVisualPropertiesNodeForDrawableNode:(struct _xmlNode *)arg1 inNamespace:(CXNamespace *)arg2 state:(OAXDrawingState *)arg3;
- (OADDrawable *)readClientDrawableFromXmlNode:(struct _xmlNode *)arg1 state:(OAXDrawingState *)arg2;

@optional
- (_Bool)chartAutoStrokeIsHollow;
- (_Bool)chartAutoFillIsHollow;
@end

@protocol OCDDelayedMediaContext <OCDDelayedNodeContext>
- (OISFUDataRepresentation *)dataRep;
- (_Bool)saveDelayedMedia:(OCDDelayedMedia *)arg1 toFile:(NSURL *)arg2;
@end

@protocol OCDDelayedNodeContext <NSObject>
- (_Bool)loadDelayedNode:(OCDDelayedNode *)arg1;
@end

@protocol OIProgressiveReaderDelegate

@optional
- (void)readerDidEndDocument:(id)arg1;
- (void)readerDidReadElement:(id)arg1 atIndex:(unsigned long long)arg2 inDocument:(id)arg3 isLastElement:(_Bool)arg4;
- (void)readerDidStartDocument:(id)arg1 withElementCount:(long long)arg2;
@end

@protocol OISFUBufferedInputStream <SFUInputStream>
- (_Bool)seekWithinBufferToOffset:(long long)arg1;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
@end

@protocol SFUInputBundle <NSObject>
- (void)copyEntry:(NSString *)arg1 toFile:(NSString *)arg2;
- (unsigned int)crc32ForEntry:(NSString *)arg1;
- (long long)lengthOfEntry:(NSString *)arg1;
- (OISFUBufferedInputStream *)bufferedInputStreamForEntry:(NSString *)arg1;
- (id <SFUInputStream>)inputStreamForEntry:(NSString *)arg1;
- (_Bool)hasEntryWithName:(NSString *)arg1;
@end

@protocol SFUInputStream <NSObject>
- (id <SFUInputStream>)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
@end

@protocol SFUOutputStream <SFUSimpleOutputStream>
- (id <SFUOutputStream>)closeLocalStream;
- (void)close;
- (id <SFUInputStream>)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
@end

@protocol SFUSimpleOutputStream <NSObject>
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
@end

@protocol SFUZipArchiveDataRepresentation <NSObject>
- (id <OISFUBufferedInputStream>)bufferedInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id <SFUInputStream>)inputStreamWithOffset:(long long)arg1 length:(long long)arg2;
@end

@protocol TCCancelDelegate <NSObject>
- (_Bool)isCancelled;
@end

@protocol TCEnhancedWarningReporting
+ (_Bool)enhancedReportObject:(id)arg1 withWarning:(struct TCTaggedMessageStructure *)arg2 parameters:(struct __va_list_tag [1])arg3;
@end

@protocol TSUDataFormat <NSObject, NSCopying>
- (void)setFormatName:(NSString *)arg1;
- (NSString *)formatName;
@end

@protocol TSUFlushable <NSObject>
- (void)flush;

@optional
- (int)flushCost;
- (int)reloadCost;
- (void)setFlushingManager:(OITSUFlushingManager *)arg1;
@end

@protocol TSUNumberFormatting <TSUDataFormat, NSObject>
- (_Bool)isEquivalent:(id)arg1;
- (NSString *)stringFromString:(NSString *)arg1;
- (NSString *)chartLabelStringFromDouble:(double)arg1;
- (NSString *)stringFromDouble:(double)arg1 decimalPlaces:(unsigned short)arg2 minimumDecimalPlaces:(unsigned short)arg3;
- (NSString *)stringFromDouble:(double)arg1 minimumDecimalPlaces:(unsigned short)arg2;
- (NSString *)stringFromDouble:(double)arg1;
- (_Bool)requiresParensToBeReplacedWithSpacesForDouble:(double)arg1;
- (_Bool)usesTabs;
- (_Bool)hasValidDecimalPlaces;
- (void)setFormatName:(NSString *)arg1;
- (_Bool)baseUseMinusSign;
- (unsigned short)basePlaces;
- (unsigned short)base;
- (_Bool)customFormatShouldAutoInsertPercentSymbol;
- (_Bool)usesTextFormatForValue:(double)arg1;
- (_Bool)canFormatText;
- (_Bool)isTextFormat;
- (double)scaleFactor;
- (_Bool)usesAccountingStyle;
- (int)fractionAccuracy;
- (_Bool)showThousandsSeparator;
- (int)negativeStyle;
- (NSString *)currencyCode;
- (NSString *)formatString;
- (NSString *)suffixString;
- (unsigned short)decimalPlaces;
- (int)valueType;
- (NSArray *)customNumberFormatTokens;
- (_Bool)isCustom;
- (NSString *)formatName;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1 andNegativeStyle:(int)arg2;
- (id)numberFormatBySettingUseAccountingStyle:(_Bool)arg1;
- (id)numberFormatBySettingFractionAccuracy:(int)arg1;
- (id)numberFormatBySettingShowThousandsSeparator:(_Bool)arg1;
- (id)numberFormatBySettingNegativeStyle:(int)arg1;
- (id)numberFormatBySettingSuffixString:(NSString *)arg1;
- (id)numberFormatBySettingCurrencyCode:(NSString *)arg1;
- (id)numberFormatByIncrementingDecimalPlaces:(short)arg1;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1;
- (id)numberFormatBySettingValueType:(int)arg1;
@end

__attribute__((visibility("hidden")))
@interface CHAutoStyling : NSObject
{
    CHDChart *mChart;
    OADDrawingTheme *mDrawingTheme;
}

+ (id)autoStylingWithChart:(id)arg1 drawingTheme:(id)arg2;
- (void)dealloc;
- (id)drawingTheme;
- (id)initWithChart:(id)arg1 drawingTheme:(id)arg2;
- (void)replaceStrokeAndFillInEmptyMarker:(id)arg1 withSeriesGraphicProperties:(id)arg2;
- (int)defaultMarkerStyleForSeriesIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBArea2DType : NSObject
{
}

+ (void)readWithState:(id)arg1 chartType:(id)arg2;
+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBArea3DType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBAutoStyling : CHAutoStyling <CHAutoStyling>
{
}

- (void)resolveMarker:(id)arg1 withSeriesGraphicProperties:(id)arg2 forSeriesIndex:(unsigned long long)arg3;
- (void)resolveGraphicPropertiesOfErrorBar:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)resolveGraphicPropertiesOfTrendline:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)resolveGraphicPropertiesOfSeries:(id)arg1 forSeriesIndex:(unsigned long long)arg2 isLine:(_Bool)arg3;
- (void)resolveGraphicPropertiesOfSeries:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (id)autoTextFill;
- (void)resolveLegendGraphicProperties:(id)arg1;
- (void)resolveMinorGridLinesGraphicProperties:(id)arg1;
- (void)resolveMajorGridLinesGraphicProperties:(id)arg1;
- (void)resolveAxisGraphicProperties:(id)arg1;
- (void)resolvePlotAreaGraphicProperties:(id)arg1;
- (void)resolveFloorGraphicProperties:(id)arg1;
- (void)resolveWallGraphicProperties:(id)arg1;
- (void)resolveChartAreaGraphicProperties:(id)arg1;
- (id)autoStrokeForSeriesIndex:(unsigned long long)arg1;
- (id)autoSeriesFill:(unsigned long long)arg1;
- (id)autoSeriesBorderStroke;
- (id)autoFill;
- (id)autoStroke;
- (id)strokeWithColorIndex:(int)arg1;
- (id)fillWithColorIndex:(unsigned long long)arg1;
- (void)resolvedGraphicProperties:(id)arg1 autoFill:(id)arg2 autoStroke:(id)arg3 autoShadow:(_Bool)arg4 nullFill:(id)arg5 nullStroke:(id)arg6 nullShadow:(_Bool)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHBAxis : NSObject
{
}

+ (int)chbAxisIdForPlotAxis:(int)arg1 state:(id)arg2;
+ (id)readWithXlPlotAxis:(int)arg1 state:(id)arg2;
+ (int)chdAxisPositionFromAxisType:(int)arg1;
+ (int)xlPlotAxisTypeFrom:(int)arg1;
+ (Class)chbAxisClassWith:(id)arg1;
+ (Class)chbAxisClassWith:(struct XlChartPlotAxis *)arg1 plotAxis:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBBar2DType : NSObject
{
}

+ (void)readWithState:(id)arg1 chartType:(id)arg2;
+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBBar3DSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBBar3DType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBBubbleSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBBubbleType : NSObject
{
}

+ (struct XlChartPlot *)xlChartPlotFrom:(id)arg1 state:(id)arg2;
+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBCategoryAxis : NSObject
{
}

+ (struct XlChartPlotAxis *)writeXlAxisFrom:(id)arg1;
+ (id)readFrom:(struct XlChartPlotAxis *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBChart : NSObject
{
}

+ (void)readWithState:(id)arg1;
+ (int)emptyCellsPlottedEnumsFrom:(int)arg1;
+ (int)readCHDDisplayBlanksAsEnumFrom:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBChartType : NSObject
{
}

+ (id)readWithState:(id)arg1;
+ (Class)chdChartTypeClassWithPlot:(struct XlChartPlot *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBChartTypeWithGrouping : NSObject
{
}

+ (void)setGrouping:(id)arg1 stacked:(_Bool)arg2 categoryPercentage:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface CHBData : NSObject
{
}

+ (id)readFrom:(const struct XlChartLinkedData *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBDataLabel : NSObject
{
}

+ (id)chdDataLabelFromXlChartCustomLabelText:(struct XlChartCustomLabelText *)arg1 state:(id)arg2;
+ (id)chdDataLabelFromXlChartSeriesFormat:(const struct XlChartSeriesFormat *)arg1 state:(id)arg2;
+ (int)xlLabelPositionEnumFromCHDDataLabelPosition:(int)arg1;
+ (int)chdLabelPositionEnumFromXlLabelPosition:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBDataValueProperties : NSObject
{
}

+ (void)read:(id)arg1 from:(const struct XlChartSeriesFormat *)arg2;
+ (id)chdDataValueProperties;
+ (id)chdDataValuePropertiesFromState:(id)arg1;
+ (id)chdDataValuePropertiesFrom:(const struct XlChartSeriesFormat *)arg1 state:(id)arg2;
+ (id)readFrom:(const struct XlChartSeriesFormat *)arg1 state:(id)arg2;
+ (Class)chbDataValuePropertiesClassWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBDateAxis : NSObject
{
}

+ (struct XlChartPlotAxis *)writeXlAxisFrom:(id)arg1;
+ (id)readFrom:(struct XlChartPlotAxis *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBDefaultTextProperties : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBErrorBar : NSObject
{
}

+ (void)readFrom:(struct XlChartErrorBar *)arg1 toSeries:(id)arg2 state:(id)arg3;
+ (int)xlErrorBarSourceFrom:(int)arg1;
+ (int)xlErrorBarTypeFrom:(int)arg1 direction:(int)arg2;
+ (id)readErrorBarGraphicProperties:(const struct XlChartSeriesFormat *)arg1 forStyleIndex:(unsigned long long)arg2 state:(id)arg3;
+ (int)edErrorBarDirectionFrom:(int)arg1;
+ (int)edErrorBarTypeFrom:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBGraphicProperties : NSObject
{
}

+ (id)oadGraphicPropertiesFromXlMarkerStyle:(const struct XlChartMarkerStyle *)arg1 complex:(_Bool)arg2 state:(id)arg3;
+ (id)oadStrokeFrom:(const struct XlChartLineStyle *)arg1;
+ (id)oadGraphicPropertiesFromState:(id)arg1 xlLineStyle:(const struct XlChartLineStyle *)arg2 xlFillStyle:(const struct XlChartFillStyle *)arg3;
+ (id)oadGraphicPropertiesFromXlChartSeriesFormat:(const struct XlChartSeriesFormat *)arg1 state:(id)arg2;
+ (id)oadGraphicPropertiesFromXlChartFrameType:(struct XlChartFrameType *)arg1 state:(id)arg2;
+ (int)lineWeightEnumFromWidth:(float)arg1;
+ (int)presetLinePatternEnumFromDash:(id)arg1;
+ (float)widthFromLineWeightEnum:(int)arg1;
+ (int)oaPresetDashTypeFromLinePatternEnum:(int)arg1;
+ (id)mapAssociatedEscherObjectstate:(id)arg1;
+ (id)mapFillStyleForMarker:(const struct XlChartMarkerStyle *)arg1 complex:(_Bool)arg2 state:(id)arg3;
+ (id)mapFillStyle:(const struct XlChartFillStyle *)arg1 xlPictureFormat:(const struct XlChartPicF *)arg2 state:(id)arg3;
+ (id)mapPresetDashFromPattern:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBLegend : NSObject
{
}

+ (id)readCHDLegendEntryFrom:(const struct XlChartCustomLegend *)arg1 state:(id)arg2;
+ (id)readFrom:(struct XlChartLegendFrame *)arg1 state:(id)arg2;
+ (int)xlLegendPositionEnumFromCHDLegendPosition:(int)arg1;
+ (int)chdLegendPositionEnumFromXlLegendPosition:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBLine2DType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBLine3DType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBLineSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBLineType : NSObject
{
}

+ (void)readWithState:(id)arg1 chartType:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBMarker : NSObject
{
}

+ (id)readFrom:(const struct XlChartSeriesFormat *)arg1 state:(id)arg2;
+ (int)xlMarkerStyleFromCHDMarkerType:(int)arg1;
+ (int)chdMarkerStyleFromXlMarkerType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBPie2DType : NSObject
{
}

+ (void)readWithState:(id)arg1 chartType:(id)arg2;
+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBPie3DType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBPieDataValueProperties : NSObject
{
}

+ (void)read:(id)arg1 from:(const struct XlChartSeriesFormat *)arg2;
+ (id)chdDataValueProperties;

@end

__attribute__((visibility("hidden")))
@interface CHBPieSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBPlotArea : NSObject
{
}

+ (id)readWithState:(id)arg1;
+ (void)readAxisGroup:(int)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CHBReader : NSObject
{
}

+ (void)readChart:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBState : NSObject
{
    CHDChart *mChart;
    struct __CFArray *mXlChartDataSeriesCollection;
    int mXlSeriesCount;
    int mXlCurrentSeriesIndex;
    _Bool mHasPrimaryMixedArea;
    _Bool mHasPrimaryMixedColumn;
    _Bool mHasPrimaryMixedLine;
    _Bool mHasSecondaryMixedArea;
    _Bool mHasSecondaryMixedColumn;
    _Bool mHasSecondaryMixedLine;
}

- (unsigned int)chartGroupIndexForType:(int)arg1 isForPrimary:(_Bool)arg2;
- (void)setHasSecondaryMixedLine:(_Bool)arg1;
- (_Bool)hasSecondaryMixedLine;
- (void)setHasSecondaryMixedColumn:(_Bool)arg1;
- (_Bool)hasSecondaryMixedColumn;
- (void)setHasSecondaryMixedArea:(_Bool)arg1;
- (_Bool)hasSecondaryMixedArea;
- (void)setHasPrimaryMixedLine:(_Bool)arg1;
- (_Bool)hasPrimaryMixedLine;
- (void)setHasPrimaryMixedColumn:(_Bool)arg1;
- (_Bool)hasPrimaryMixedColumn;
- (void)setHasPrimaryMixedArea:(_Bool)arg1;
- (_Bool)hasPrimaryMixedArea;
- (void)deleteXlChartDataSeriesCollection;
- (void)readAndCacheXlChartDataSeries;
- (int)xlSeriesCount;
- (int)xlCurrentChartDataSeriesIndex;
- (struct XlChartDataSeries *)xlCurrentChartDataSeries;
- (void)setXlCurrentSeriesIndex:(int)arg1;
- (struct XlChartDataSeries *)xlChartDataSeriesAtIndex:(int)arg1;
- (id)resources;
- (id)workbook;
- (void)setChart:(id)arg1;
- (id)chart;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHBReaderState : CHBState
{
    EBReaderSheetState *mEBReaderSheetState;
    struct XlChartBinaryReader *mXlReader;
    id <CHAutoStyling> mAutoStyling;
    int mAxisGroup;
    struct XlChartPlot *mXlCurrentPlot;
    int mXlCurrentPlotIndex;
}

@property(readonly, nonatomic) OADColorScheme *colorScheme;
- (const struct XlChartSeriesFormat *)defaultFormatForXlSeries:(const struct XlChartDataSeries *)arg1;
- (const struct XlChartSeriesFormat *)xlCurrentDefaultSeriesFormat;
- (void)setXlCurrentPlot:(struct XlChartPlot *)arg1;
- (struct XlChartPlot *)xlCurrentPlot;
- (void)setXlCurrentPlotIndex:(int)arg1;
- (int)xlCurrentPlotIndex;
- (int)xlPlotCount;
- (void)readAndCacheXlChartDataSeries;
- (void)setAxisGroup:(int)arg1;
- (int)axisGroup;
- (id)autoStyling;
- (void)setChart:(id)arg1;
- (struct XlChartBinaryReader *)xlReader;
- (id)resources;
- (id)workbook;
- (id)ebReaderSheetState;
- (void)dealloc;
- (id)initWithEBReaderSheetState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBScatterSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBScatterType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;
+ (id)readFrom:(struct XlChartDataSeries *)arg1 state:(id)arg2;
+ (void)resolveSeriesStyle:(id)arg1 state:(id)arg2;
+ (void)readXlChartSeriesFormat:(struct XlChartDataSeries *)arg1 chdSeries:(id)arg2 state:(id)arg3;
+ (Class)chdSeriesClassWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBSeriesAxis : NSObject
{
}

+ (struct XlChartPlotAxis *)writeXlAxisFrom:(id)arg1;
+ (id)readFrom:(struct XlChartPlotAxis *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBString : NSObject
{
}

+ (id)edStringWithHandlingMultilevelCategoryDataFromOCText:(const struct OcText *)arg1 chdFormula:(id)arg2 state:(id)arg3;
+ (unsigned long long)edFontIndexForXlChartTextFrame:(struct XlChartTextFrame *)arg1 state:(id)arg2;
+ (id)edStringFromXlChartTextFrame:(const struct XlChartTextFrame *)arg1 state:(id)arg2;
+ (id)edRunsFromXlChartTextFrame:(const struct XlChartTextFrame *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBTitle : NSObject
{
}

+ (id)readFrom:(const struct XlChartTextFrame *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBTrendLine : NSObject
{
}

+ (void)readFrom:(struct XlChartTrendLine *)arg1 toSeries:(id)arg2 state:(id)arg3;
+ (id)readTrendlineGraphicProperties:(const struct XlChartSeriesFormat *)arg1 forStyleIndex:(unsigned long long)arg2 state:(id)arg3;
+ (int)xlTrendLineRegressionTypeFrom:(int)arg1;
+ (int)edTrendLineTypeFrom:(int)arg1 order:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBTrendLineLabel : NSObject
{
}

+ (id)readFrom:(struct XlChartTrendLine *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBUnsupportedSeries : NSObject
{
}

+ (id)chdSeriesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBUnsupportedType : NSObject
{
}

+ (id)chdChartTypeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHBValueAxis : NSObject
{
}

+ (struct XlChartPlotAxis *)writeXlAxisFrom:(id)arg1;
+ (id)readFrom:(struct XlChartPlotAxis *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHBView3D : NSObject
{
}

+ (struct XlChart3D *)xlChart3DFrom:(id)arg1;
+ (id)readFrom:(const struct XlChart3D *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDAnchor : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface CHDAbsoluteSizeAnchor : CHDAnchor
{
    struct CGPoint mFrom;
    struct CGSize mSize;
}

- (id).cxx_construct;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)setFrom:(struct CGPoint)arg1;
- (struct CGPoint)from;

@end

__attribute__((visibility("hidden")))
@interface CHDChartType : NSObject
{
    CHDChart *mChart;
    EDCollection *mAxisIds;
    CHDSeriesCollection *mSeries;
    CHDDataLabel *mDefaultDataLabel;
    _Bool mVaryColors;
}

+ (_Bool)is3DType;
+ (id)chartTypeWithChart:(id)arg1;
- (id)defaultTitleWithResources:(id)arg1;
- (int)defaultLabelPosition;
- (_Bool)isHorizontal;
- (void)setVaryColors:(_Bool)arg1;
- (_Bool)isVaryColors;
- (id)contentFormat;
- (void)setDefaultDataLabel:(id)arg1;
- (id)defaultDataLabel;
- (void)setSeriesCollection:(id)arg1;
- (unsigned long long)categoryCount;
- (unsigned long long)seriesCount;
- (id)seriesCollection;
- (id)axisForClass:(Class)arg1;
- (id)axes;
- (_Bool)isPlotedOnSecondaryAxis;
- (id)axisIds;
- (id)chart;
- (void)dealloc;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDChartTypeWithGrouping : CHDChartType
{
    int mGrouping;
}

- (id)chdGroupingString;
- (_Bool)isGroupingStacked;
- (void)setGrouping:(int)arg1;
- (int)grouping;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDArea2DType : CHDChartTypeWithGrouping
{
}

- (int)defaultLabelPosition;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDArea3DType : CHDArea2DType
{
    int mGapDepth;
}

+ (_Bool)is3DType;
- (void)setGapDepth:(int)arg1;
- (int)gapDepth;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDAutomaticObject : NSObject
{
    NSString *mName;
}

+ (id)automaticEffects;
+ (id)automaticStroke;
+ (id)automaticFill;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDCollection : NSObject <NSCopying>
{
    NSMutableArray *mObjects;
}

+ (id)collectionWithObject:(id)arg1;
+ (id)collection;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeAllObjects;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfObject:(id)arg1;
- (unsigned long long)addOrEquivalentObject:(id)arg1;
- (unsigned long long)addObject:(id)arg1;
- (id)objectAtIndex:(unsigned long long)arg1;
- (unsigned long long)count;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToCollection:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDKeyedCollection : EDCollection
{
    OITSUPointerKeyDictionary *mMap;
}

- (id)objectWithKey:(long long)arg1;
- (void)removeAllObjects;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)addObject:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (_Bool)isOverwritingKeyOK;
- (void)removeFromMap:(id)arg1;
- (void)insertIntoMap:(id)arg1;
- (_Bool)isObjectInMap:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDAxesCollection : EDKeyedCollection
{
}

- (void)adjustAxesPositionForHorizontalChart;
- (id)axesAtPosition:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDAxis : NSObject <EDKeyedObject>
{
    _Bool mReverseOrder;
    _Bool mSecondary;
    _Bool mDateTimeFormattingFlag;
    _Bool mLineVisible;
    _Bool mDeleted;
    _Bool mAutoMinimumValue;
    _Bool mAutoMaximumValue;
    _Bool mAutoCrossValue;
    _Bool mContentFormatDerived;
    int mAxisId;
    unsigned long long mContentFormatId;
    unsigned long long mFontIndex;
    double mScalingMaximum;
    double mScalingMinimum;
    int mOrientation;
    double mCrossAxisId;
    double mCrossesAt;
    int mMajorTickMark;
    int mMinorTickMark;
    int mAxisPosition;
    int mAxisType;
    int mTickLabelPosition;
    CHDTitle *mTitle;
    OADGraphicProperties *mMinorGridLinesGraphicProperties;
    OADGraphicProperties *mMajorGridLinesGraphicProperties;
    OADGraphicProperties *mAxisGraphicProperties;
    int mCrossBetween;
    int mCrosses;
    double mTickLabelRotation;
    _Bool mIsAutoRotation;
    unsigned long long mTickLabelColorIndex;
    EDResources *mResources;
}

@property(readonly, copy) NSString *description;
- (void)adjustAxisPositionForHorizontalChart;
- (void)setTickLabelAutoRotation:(_Bool)arg1;
- (_Bool)isTickLabelAutoRotation;
- (void)setTickLabelRotationAngle:(double)arg1;
- (double)tickLabelRotationAngle;
- (void)setDateTimeFormattingFlag:(_Bool)arg1;
- (_Bool)isDateTimeFormattingFlag;
- (_Bool)isDate;
- (long long)key;
- (void)setCrosses:(int)arg1;
- (int)crosses;
- (void)setCrossBetween:(int)arg1;
- (int)crossBetween;
- (void)setAxisGraphicProperties:(id)arg1;
- (id)axisGraphicProperties;
- (void)setMajorGridLinesGraphicProperties:(id)arg1;
- (id)majorGridLinesGraphicProperties;
- (void)setMinorGridLinesGraphicProperties:(id)arg1;
- (id)minorGridLinesGraphicProperties;
- (void)setTitle:(id)arg1;
- (id)title;
- (_Bool)isTickLabelVisible;
- (void)setTickLabelPosition:(int)arg1;
- (int)tickLabelPosition;
- (void)setAxisType:(int)arg1;
- (int)axisType;
- (void)setAxisPosition:(int)arg1;
- (int)axisPosition;
- (void)setMinorTickMark:(int)arg1;
- (int)minorTickMark;
- (void)setMajorTickMark:(int)arg1;
- (int)majorTickMark;
- (void)setCrossesAt:(double)arg1;
- (double)crossesAt;
- (void)setCrossAxisId:(double)arg1;
- (double)crossAxisId;
- (void)setOrientation:(int)arg1;
- (int)orientation;
- (void)setScalingMinimum:(double)arg1;
- (double)scalingMinimum;
- (void)setScalingMaximum:(double)arg1;
- (double)scalingMaximum;
- (void)setIsContentFormatDerivedFromDataPoints:(_Bool)arg1;
- (_Bool)isContentFormatDerivedFromDataPoints;
- (void)setContentFormat:(id)arg1;
- (id)defaultDateTimeContentFormat;
- (id)contentFormat;
- (void)setFont:(id)arg1;
- (id)font;
- (_Bool)isHorizontalPosition;
- (_Bool)isAutoCrossValue;
- (_Bool)isAutoMaximumValue;
- (_Bool)isAutoMinimumValue;
- (void)setDeleted:(_Bool)arg1;
- (_Bool)isDeleted;
- (void)setLineVisible:(_Bool)arg1;
- (_Bool)isLineVisible;
- (void)setSecondary:(_Bool)arg1;
- (_Bool)isSecondary;
- (void)setReverseOrder:(_Bool)arg1;
- (_Bool)isReverseOrder;
- (void)setAxisId:(int)arg1;
- (int)axisId;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (id)tickLabelColor;
- (void)setTickLabelColorIndex:(unsigned long long)arg1;
- (unsigned long long)tickLabelColorIndex;
- (void)setFontIndex:(unsigned long long)arg1;
- (unsigned long long)fontIndex;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDBar2DType : CHDChartTypeWithGrouping
{
    int mGapWidth;
    _Bool mColumn;
    int mOverlap;
}

- (int)defaultLabelPosition;
- (_Bool)isHorizontal;
- (void)setColumn:(_Bool)arg1;
- (_Bool)isColumn;
- (void)setOverlap:(int)arg1;
- (int)overlap;
- (void)setGapWidth:(int)arg1;
- (int)gapWidth;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDSeries : NSObject <EDKeyedObject>
{
    CHDChart *mChart;
    CHDChartType *mChartType;
    unsigned long long mOrder;
    unsigned long long mStyleIndex;
    CHDFormula *mName;
    CHDDataValue *mLastCachedName;
    CHDData *mValueData;
    CHDData *mCategoryData;
    EDKeyedCollection *mDataValuePropertiesCollection;
    EDCollection *mTrendlinesCollection;
    CHDErrorBar *mErrorBarX;
    CHDErrorBar *mErrorBarY;
    CHDDataLabel *mDefaultDataLabel;
    OADGraphicProperties *mGraphicProperties;
    _Bool mDateTimeFormattingFlag;
    _Bool mHiddenFlag;
}

+ (id)seriesWithChart:(id)arg1;
- (_Bool)isEmpty;
- (id)defaultSeriesNameForIndex:(unsigned long long)arg1;
- (void)setHiddenFlag:(_Bool)arg1;
- (_Bool)isHidden;
- (_Bool)isDateTimeFormattingFlag;
- (void)setDateTimeFormattingFlag:(_Bool)arg1;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setDefaultDataLabel:(id)arg1;
- (id)defaultDataLabel;
- (void)setErrorBarYAxis:(id)arg1;
- (id)errorBarYAxis;
- (void)setErrorBarXAxis:(id)arg1;
- (id)errorBarXAxis;
- (_Bool)hasErrorBars;
- (void)setErrorBar:(id)arg1;
- (_Bool)hasTrendlines;
- (void)setTrendlineCollection:(id)arg1;
- (id)trendlineCollection;
- (void)setDataValuePropertiesCollection:(id)arg1;
- (id)dataValuePropertiesCollection;
- (unsigned long long)categoryCount;
- (void)setCategoryData:(id)arg1;
- (id)categoryData;
- (void)setValueData:(id)arg1;
- (id)valueData;
- (void)setName:(id)arg1;
- (id)name;
- (void)setLastCachedName:(id)arg1;
- (id)lastCachedName;
- (void)setStyleIndex:(unsigned long long)arg1;
- (unsigned long long)styleIndex;
- (void)setOrder:(unsigned long long)arg1;
- (unsigned long long)order;
- (long long)key;
- (void)setChartType:(id)arg1;
- (id)chart;
- (id)chartType;
- (void)dealloc;
- (void)clearBackPointers;
- (id)shallowCopy;
- (id)initWithChart:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDBar3DSeries : CHDSeries
{
    int mShapeType;
}

- (void)setShapeType:(int)arg1;
- (int)shapeType;
- (id)shallowCopy;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHDBar3DType : CHDBar2DType
{
    int mGapDepth;
    int mShapeType;
}

+ (id)stringWithShapeType:(int)arg1;
+ (_Bool)is3DType;
- (void)setShapeType:(int)arg1;
- (int)shapeType;
- (void)setGapDepth:(int)arg1;
- (int)gapDepth;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDBubbleSeries : CHDSeries
{
    CHDData *mSizeData;
    _Bool mBubble3D;
    _Bool mInvertIfNegative;
    _Bool mShowBubbleSize;
}

- (void)setCategoryData:(id)arg1;
- (void)setShowBubbleSize:(_Bool)arg1;
- (_Bool)isShowBubbleSize;
- (void)setInvertIfNegative:(_Bool)arg1;
- (_Bool)isInvertIfNegative;
- (void)setBubble3D:(_Bool)arg1;
- (_Bool)isBubble3D;
- (void)setSizeData:(id)arg1;
- (id)sizeData;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CHDBubbleType : CHDChartType
{
    _Bool mShowNegativeBubbles;
    _Bool mSizeRepresentsRadius;
    int mBubbleScale;
}

- (void)setSizeRepresentsRadius:(_Bool)arg1;
- (_Bool)isSizeRepresentingRadius;
- (void)setBubbleScale:(int)arg1;
- (int)bubbleScale;
- (void)setShowNegBubbles:(_Bool)arg1;
- (_Bool)isShowNegBubbles;
- (_Bool)is3DType;
- (int)defaultLabelPosition;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDCategoryAxis : CHDAxis
{
    _Bool mAutomatic;
    _Bool mNoMultipleLevelLabel;
    int mLabelAlignment;
    long long mLabelFrequency;
    _Bool mLabelFrequencyAutomatic;
    _Bool mShowSeriesNames;
}

- (_Bool)isLabelFrequencyAutomatic;
- (_Bool)showSeriesLabels;
- (void)setShowSeriesLabels:(_Bool)arg1;
- (void)setLabelFrequency:(long long)arg1;
- (long long)labelFrequency;
- (void)adjustAxisPositionForHorizontalChart;
- (void)setLabelAlignment:(int)arg1;
- (int)labelAlignment;
- (void)setNoMultipleLevelLabel:(_Bool)arg1;
- (_Bool)isNoMultipleLabellevel;
- (void)setAutomatic:(_Bool)arg1;
- (_Bool)isAutomatic;
- (id)initWithResources:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADDrawable : NSObject
{
    _Bool mHidden;
    unsigned int mId;
    OADDrawableProperties *mDrawableProperties;
    id <OADClient> mClientData;
    OADDrawable<OADDrawableContainer> *mParent;
}

+ (unsigned int)generateOADDrawableId:(id)arg1;
- (id)createOrientedBoundsWithBounds:(struct CGRect)arg1;
- (void)removeUnnecessaryOverrides;
- (void)setParentTextListStyle:(id)arg1;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)ensureClientDataOfClass:(Class)arg1;
- (id)clientData;
- (void)setClientData:(id)arg1;
- (void)setDrawableProperties:(id)arg1;
- (id)drawableProperties;
- (void)setId:(unsigned int)arg1;
- (unsigned int)id;
- (void)setHidden:(_Bool)arg1;
- (_Bool)hidden;
- (void)dealloc;
- (id)initWithPropertiesClass:(Class)arg1;
- (id)createWordClientDataWithTextType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADGraphic : OADDrawable
{
    OADGraphic *mMasterGraphic;
}

- (void)setMasterGraphic:(id)arg1;
- (id)masterGraphic;
- (id)graphicProperties;

@end

__attribute__((visibility("hidden")))
@interface CHDChart : OADGraphic <OADDrawableContainer>
{
    EDSheet *mSheet;
    int mStyleId;
    _Bool mAutoTitleDeleted;
    _Bool mPlotVisibleCellsOnly;
    _Bool mMSGraph;
    _Bool mHasSharedXValues;
    _Bool mDirectionChanged;
    _Bool mHasVisibleSeriesNames;
    int mDisplayBlankCellsAs;
    CHDPlotArea *mPlotArea;
    CHDView3D *mView3D;
    CHDTitle *mTitle;
    CHDLegend *mLegend;
    EDWorkbook *mExternalData;
    OADGraphicProperties *mChartAreaGraphicProperties;
    OADGraphicProperties *mBackWallGraphicProperties;
    OADGraphicProperties *mSideWallGraphicProperties;
    OADGraphicProperties *mFloorGraphicProperties;
    CHDDefaultTextProperties *mDefaultTextProperties;
    int mChartDirection;
    struct CGRect mLogicalBounds;
    NSMutableArray *mDrawables;
}

+ (id)binaryEffects:(_Bool)arg1;
- (id).cxx_construct;
- (void)setVisibleSeriesNames:(_Bool)arg1;
- (_Bool)hasVisibleSeriesNames;
- (void)setDirectionChanged:(_Bool)arg1;
- (_Bool)isDirectionChanged;
- (void)setHasSharedXValues:(_Bool)arg1;
- (_Bool)hasSharedXValues;
- (void)setMSGraph:(_Bool)arg1;
- (_Bool)isMSGraph;
- (unsigned long long)categoryCount;
- (unsigned long long)seriesCount;
- (_Bool)isBinary;
- (_Bool)isScatterOrBubble;
- (_Bool)isPie;
- (_Bool)is3D;
- (id)mainType;
- (id)styleMatrix;
- (int)defaultLabelPosition;
- (id)defaultFontWithResources:(id)arg1;
- (id)defaultContentFormat;
- (unsigned long long)defaultFontIndex;
- (id)defaultSeriesTitleFont;
- (id)defaultDataLabelFont;
- (id)defaultTextFont;
- (id)defaultThemeFont;
- (void)setParentTextListStyle:(id)arg1;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (id)children;
- (id)childAtIndex:(unsigned long long)arg1;
- (void)addChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (unsigned long long)childCount;
- (void)setLogicalBounds:(struct CGRect)arg1;
- (struct CGRect)logicalBounds;
- (void)setDirection:(int)arg1;
- (int)direction;
- (void)setDefaultTextProperties:(id)arg1;
- (id)defaultTextProperties;
- (void)setFloorGraphicProperties:(id)arg1;
- (id)floorGraphicProperties;
- (void)setSideWallGraphicProperties:(id)arg1;
- (id)sideWallGraphicProperties;
- (void)setBackWallGraphicProperties:(id)arg1;
- (id)backWallGraphicProperties;
- (void)setChartAreaGraphicProperties:(id)arg1;
- (id)chartAreaGraphicProperties;
- (void)setExternalData:(id)arg1;
- (id)externalData;
- (void)setLegend:(id)arg1;
- (id)legend;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)setView3D:(id)arg1;
- (id)view3D;
- (void)setPlotArea:(id)arg1;
- (id)plotArea;
- (void)setDisplayBlankAs:(int)arg1;
- (int)displayBlankAs;
- (void)setPlotVisibleCellsOnly:(_Bool)arg1;
- (_Bool)isPlotVisibleCellsOnly;
- (void)setAutoTitleDeleted:(_Bool)arg1;
- (_Bool)isAutoTitleDeleted;
- (void)setStyleId:(int)arg1;
- (int)styleId;
- (id)processors;
- (id)workbook;
- (void)setSheet:(id)arg1;
- (id)sheet;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDChartTypesCollection : EDCollection
{
    CHDChart *mChart;
}

- (unsigned long long)addObject:(id)arg1;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDData : NSObject
{
    CHDDataValuesCollection *mDataValues;
    CHDFormula *mFormula;
    unsigned long long mContentFormatId;
    unsigned long long mDataValueIndexCount;
    EDResources *mResources;
}

+ (id)dataWithDataPointCount:(unsigned long long)arg1 resources:(id)arg2;
+ (id)dataWithResources:(id)arg1;
- (id)firstValueContentFormatWithWorkbook:(id)arg1;
- (_Bool)isEmpty;
- (void)setContentFormat:(id)arg1;
- (id)contentFormat;
- (unsigned long long)countOfCellsBeingReferenced;
- (void)setFormula:(id)arg1 chart:(id)arg2;
- (id)formula;
- (unsigned long long)averageDataPointDecimalCount;
- (void)setDataValueIndexCount:(unsigned long long)arg1;
- (unsigned long long)dataValueIndexCount;
- (id)dataValues;
- (void)dealloc;
- (id)initWithDataPointCount:(unsigned long long)arg1 resources:(id)arg2;
- (id)initWithResources:(id)arg1;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;

@end

__attribute__((visibility("hidden")))
@interface CHDDataLabel : NSObject
{
    EDResources *mResources;
    unsigned long long mStringIndex;
    unsigned long long mContentFormatId;
    int mPosition;
    _Bool mShowLeaderLines;
    _Bool mShowCategoryName;
    _Bool mShowSeriesName;
    _Bool mShowPercent;
    _Bool mShowBubbleSize;
    _Bool mShowValue;
    _Bool mShowLegendKey;
    _Bool mIsPositionAffineTransform;
    double mRotation;
    OADGraphicProperties *mGraphicProperties;
}

+ (id)dataLabelWithResources:(id)arg1;
- (void)setRotationAngle:(double)arg1;
- (double)rotationAngle;
- (_Bool)isPositionAffineTransform;
- (void)setIsPositionAffineTransform:(_Bool)arg1;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setShowLegendKey:(_Bool)arg1;
- (_Bool)isShowLegendKey;
- (void)setShowValue:(_Bool)arg1;
- (_Bool)isShowValue;
- (void)setShowBubbleSize:(_Bool)arg1;
- (_Bool)isShowBubbleSize;
- (void)setShowPercent:(_Bool)arg1;
- (_Bool)isShowPercent;
- (void)setShowSeriesName:(_Bool)arg1;
- (_Bool)isShowSeriesName;
- (void)setShowCategoryName:(_Bool)arg1;
- (_Bool)isShowCategoryName;
- (void)setShowLeaderLines:(_Bool)arg1;
- (_Bool)isShowLeaderLines;
- (void)setPosition:(int)arg1;
- (int)position;
- (void)setContentFormat:(id)arg1;
- (id)contentFormat;
- (void)setString:(id)arg1;
- (id)string;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;
- (void)setStringIndex:(unsigned long long)arg1;
- (unsigned long long)stringIndex;

@end

__attribute__((visibility("hidden")))
@interface CHDDataValue : NSObject
{
    struct CHDDataPoint mDataPoint;
}

+ (id)dataValueWithIndex:(long long)arg1 value:(struct EDValue *)arg2;
+ (id)dataValue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setContentFormatWithResources:(id)arg1 resources:(id)arg2;
- (id)contentFormatWithResources:(id)arg1;
- (void)setDataPoint:(struct CHDDataPoint *)arg1;
- (struct CHDDataPoint *)dataPoint;
- (void)setValue:(struct EDValue *)arg1;
- (struct EDValue *)value;
- (void)setIndex:(long long)arg1;
- (long long)index;
- (id)initWithIndex:(long long)arg1 value:(struct EDValue *)arg2;
- (id)init;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;

@end

__attribute__((visibility("hidden")))
@interface CHDDataValueProperties : NSObject <EDKeyedObject>
{
    CHDDataLabel *mDataLabel;
    CHDMarker *mMarker;
    unsigned long long mDataValueIndex;
    OADGraphicProperties *mGraphicProperties;
}

+ (id)dataValueProperties;
- (void)setMarker:(id)arg1;
- (id)marker;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setDataValueIndex:(unsigned long long)arg1;
- (unsigned long long)dataValueIndex;
- (void)setDataLabel:(id)arg1;
- (id)dataLabel;
- (long long)key;
- (void)dealloc;
- (id)shallowCopyWithIndex:(unsigned long long)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDDataValuesCollection : NSObject
{
    struct __CFData *mPackedValues;
    unsigned long long mDataValueCount;
    struct __CFDictionary *mIndexToDataValueMap;
    _Bool mContainsStringValue;
}

- (_Bool)containsStringValue;
- (void)finishReading;
- (id)dataValueWithIndex:(unsigned long long)arg1;
- (id)contentFormatAtIndex:(unsigned long long)arg1 resources:(id)arg2;
- (id)dataValueAtIndex:(unsigned long long)arg1;
- (struct CHDDataPoint *)dataPointWithIndex:(unsigned long long)arg1;
- (struct CHDDataPoint *)dataPointAtIndex:(unsigned long long)arg1;
- (_Bool)addDataValue:(id)arg1;
- (_Bool)addDataPoint:(struct CHDDataPoint *)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (void)resetWithDataPointCount:(unsigned long long)arg1;
- (id)initWithDataPointCount:(unsigned long long)arg1;
- (id)init;
- (void)cleanup;
- (void)setupBufferForValues:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDDateAxis : CHDAxis
{
    _Bool mAutomatic;
    double mMajorUnitValue;
    double mMinorUnitValue;
    int mMinorTimeUnit;
    int mMajorTimeUnit;
    int mBaseTimeUnit;
}

- (void)setBaseTimeUnit:(int)arg1;
- (int)baseTimeUnit;
- (void)setMinorTimeUnit:(int)arg1;
- (int)minorTimeUnit;
- (void)setMajorTimeUnit:(int)arg1;
- (int)majorTimeUnit;
- (void)setMinorUnitValue:(double)arg1;
- (double)minorUnitValue;
- (void)setMajorUnitValue:(double)arg1;
- (double)majorUnitValue;
- (void)setAutomatic:(_Bool)arg1;
- (_Bool)isAutomatic;
- (_Bool)isDate;
- (id)initWithResources:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDDefaultTextProperties : EDKeyedCollection
{
}

- (id)percentageTextDefaultProperties;
- (id)seriesTitlesTextDefaultProperties;
- (id)showLabelsTextDefaultProperties;
- (id)allTextDefaultProperties;

@end

__attribute__((visibility("hidden")))
@interface CHDDefaultTextProperty : NSObject <EDKeyedObject>
{
    EDResources *mResources;
    int mDefaultTextType;
    unsigned long long mContentFormatId;
    EDRunsCollection *mRuns;
    int mLabelPosition;
    _Bool mShowCategoryLabel;
    _Bool mShowValueLabel;
    _Bool mShowPercentageLabel;
    _Bool mShowSeriesLabel;
    _Bool mShowBubbleSizeLabel;
}

+ (id)defaultTextPropertyWithResources:(id)arg1;
- (void)setIsShowSeriesLabel:(_Bool)arg1;
- (_Bool)isShowSeriesLabel;
- (void)setIsShowBubbleSizeLabel:(_Bool)arg1;
- (_Bool)isShowBubbleSizeLabel;
- (void)setIsShowPercentageLabel:(_Bool)arg1;
- (_Bool)isShowPercentageLabel;
- (void)setIsShowValueLabel:(_Bool)arg1;
- (_Bool)isShowValueLabel;
- (void)setIsShowCategoryLabel:(_Bool)arg1;
- (_Bool)isShowCategoryLabel;
- (void)setLabelPosition:(int)arg1;
- (int)labelPosition;
- (long long)key;
- (void)setContentFormat:(id)arg1;
- (id)contentFormat;
- (void)setRuns:(id)arg1;
- (id)runs;
- (void)setDefaultTextType:(int)arg1;
- (int)defaultTextType;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDErrorBar : NSObject
{
    CHDChart *mChart;
    double mValue;
    int mType;
    int mValueType;
    int mDirection;
    _Bool mNoEndCap;
    CHDData *mMinusValues;
    CHDData *mPlusValues;
    OADGraphicProperties *mGraphicProperties;
}

+ (id)errorBarWithChart:(id)arg1;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setPlusValues:(id)arg1;
- (id)plusValues;
- (void)setMinusValues:(id)arg1;
- (id)minusValues;
- (void)setNoEndCap:(_Bool)arg1;
- (_Bool)isNoEndCap;
- (void)setDirection:(int)arg1;
- (int)direction;
- (void)setValueType:(int)arg1;
- (int)valueType;
- (void)setType:(int)arg1;
- (int)type;
- (void)setValue:(double)arg1;
- (double)value;
- (void)dealloc;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDFormula : NSObject <EDFormulaBuilding>
{
    struct __CFData *mPackedData;
}

+ (id)formula;
- (_Bool)insertName:(unsigned long long)arg1 atIndex:(unsigned int)arg2;
- (_Bool)uppercaseArgAtIndex:(unsigned int)arg1;
- (_Bool)fixTableOfConstantsRefs;
- (_Bool)wrapArgumentsWithOperator:(int)arg1 argumentCount:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (_Bool)addInfixOperator:(int)arg1 atIndex:(unsigned int)arg2 factor:(double)arg3;
- (_Bool)shrinkSpanningRefAtArgIndex:(unsigned int)arg1;
- (void)markLastTokenAsSpanningRefVertically:(_Bool)arg1 withMin:(unsigned short)arg2 andMax:(unsigned short)arg3;
- (void)markLastTokenAsDuration;
- (_Bool)convertToIntersect:(unsigned int)arg1;
- (id)lastTokenRefOrArea3dLinkRefIsValid:(_Bool *)arg1 withEDLinks:(id)arg2;
- (_Bool)convertLastRefsToArea;
- (_Bool)convertToList:(unsigned int)arg1 withFinalParen:(_Bool)arg2;
- (_Bool)convertToList:(unsigned int)arg1;
- (char *)setExtendedDataForLastTokenAtIndex:(unsigned int)arg1 length:(unsigned int)arg2;
- (_Bool)addArrayWithCol:(int)arg1 andRow:(int)arg2;
- (_Bool)insertExternalName:(unsigned long long)arg1 withLink:(unsigned long long)arg2 atIndex:(unsigned int)arg3;
- (id)saveArgs:(unsigned int)arg1 andDelete:(_Bool)arg2;
- (unsigned int)firstTokenIndexForArgAtIndex:(unsigned int)arg1;
- (_Bool)isBaseFormula;
- (_Bool)isSharedFormula;
- (void)updateCleanedWithEvaluationStack:(_Bool)arg1;
- (_Bool)isCleanedWithEvaluationStack;
- (void)updateContainsRelativeReferences:(_Bool)arg1;
- (_Bool)isContainsRelativeReferences;
- (void)setCleaned:(_Bool)arg1;
- (_Bool)isCleaned;
- (_Bool)isSupportedFormula;
- (void)setWarningParameter:(id)arg1;
- (id)warningParameter;
- (void)setWarning:(int)arg1;
- (id)warning;
- (int)warningType;
- (void)setOriginalFormulaString:(id)arg1;
- (id)originalFormulaString;
- (_Bool)convertTokensToSharedAtRow:(unsigned int)arg1 column:(unsigned int)arg2;
- (ChVector_2ce397a3 *)xlPtgs;
- (void)populateXlPtg:(struct XlPtg *)arg1 index:(unsigned int)arg2;
- (_Bool)replaceTokenAtIndex:(unsigned int)arg1 withFormula:(id)arg2 formulaTokenIndex:(unsigned int)arg3;
- (_Bool)replaceTokenAtIndex:(unsigned int)arg1 withFormula:(id)arg2;
- (_Bool)removeTokenAtIndex:(unsigned int)arg1;
- (void)removeAllTokens;
- (_Bool)copyTokenFromXlPtg:(struct XlPtg *)arg1;
- (_Bool)copyTokenAtIndex:(unsigned int)arg1 fromFormula:(id)arg2;
- (void)setupExtendedDataForTokenAtIndex:(unsigned int)arg1 extendedDataLength:(unsigned int)arg2 extendedDataCount:(unsigned int)arg3;
- (char *)setExtendedDataAtIndex:(unsigned int)arg1 extendedDataIndex:(unsigned int)arg2 length:(unsigned int)arg3;
- (_Bool)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2 extendedDataCount:(unsigned int)arg3;
- (char *)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2;
- (char *)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2 numArgs:(int)arg3;
- (unsigned int)countExtendedDataForTokenAtIndex:(unsigned int)arg1;
- (char *)lastExtendedDataForTokenAtIndex:(unsigned int)arg1 length:(unsigned int *)arg2;
- (char *)extendedDataForTokenAtIndex:(unsigned int)arg1 extendedDataIndex:(unsigned int)arg2 length:(unsigned int *)arg3;
- (void)replaceTokenTypeAtIndex:(unsigned int)arg1 withType:(int)arg2;
- (int)tokenTypeAtIndex:(unsigned int)arg1;
- (unsigned int)tokenCount;
- (_Bool)setupTokensWithTokensCount:(unsigned int)arg1 tokensWithDataCount:(unsigned int)arg2 extendedDataLength:(unsigned int)arg3 extendedDataCount:(unsigned int)arg4;
- (void)dealloc;
- (id)initWithFormula:(id)arg1;
- (id)init;
- (struct EDToken *)tokenAtIndex:(unsigned int)arg1;
- (void)archiveByAppendingToMutableData:(struct __CFData *)arg1;
- (void)unarchiveFromData:(struct __CFData *)arg1 offset:(unsigned long long *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDFormula : EDFormula
{
    EDReferenceCollection *mReferences;
    EDWorkbook *mWorkbook;
}

+ (id)formulaWithReferences:(id)arg1;
+ (id)formulaWithReference:(id)arg1;
- (_Bool)isConstantStringFormula;
- (void)prepareTokens;
- (unsigned long long)countOfCellsBeingReferenced;
- (void)setReferences:(id)arg1;
- (id)references;
- (void)setWorkbook:(id)arg1;
- (void)dealloc;
- (id)initWithReferences:(id)arg1;
- (id)initWithReference:(id)arg1;
- (id)initWithWorkbook:(id)arg1;
- (id)referencesFromFormula;

@end

__attribute__((visibility("hidden")))
@interface CHDLegend : NSObject
{
    int mLegendPosition;
    OADGraphicProperties *mGraphicProperties;
    unsigned long long mFontIndex;
    EDCollection *mLegendEntries;
    EDResources *mResources;
    _Bool mIsVertical;
}

- (void)setIsSingleColumnLegend:(_Bool)arg1;
- (_Bool)isSingleColumnLegend;
- (id)legendEntries;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setLegendPosition:(int)arg1;
- (int)legendPosition;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setFontIndex:(unsigned long long)arg1;
- (unsigned long long)fontIndex;

@end

__attribute__((visibility("hidden")))
@interface CHDLegendEntry : NSObject
{
    unsigned long long mFontIndex;
    unsigned int mEntryIndex;
    EDResources *mResources;
}

- (void)setEntryIndex:(unsigned int)arg1;
- (unsigned int)entryIndex;
- (void)setFont:(id)arg1;
- (id)font;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setFontIndex:(unsigned long long)arg1;
- (unsigned long long)fontIndex;

@end

__attribute__((visibility("hidden")))
@interface CHDLineType : CHDChartTypeWithGrouping
{
}

- (int)defaultLabelPosition;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDLine2DType : CHDLineType
{
    _Bool mShowMarker;
    _Bool mStockType;
}

- (void)setStockType:(_Bool)arg1;
- (_Bool)isStockType;
- (void)setShowMarker:(_Bool)arg1;
- (_Bool)showMarker;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDLine3DType : CHDLineType
{
    int mGapDepth;
}

+ (_Bool)is3DType;
- (void)setGapDepth:(int)arg1;
- (int)gapDepth;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDLineSeries : CHDSeries <CHDMarkerOwner>
{
    CHDMarker *mMarker;
    _Bool mSmooth;
}

- (void)setSmooth:(_Bool)arg1;
- (_Bool)isSmooth;
- (void)setMarker:(id)arg1;
- (id)marker;
- (void)dealloc;
- (id)initWithChart:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDMarker : NSObject
{
    unsigned int mSize;
    int mStyle;
    OADGraphicProperties *mGraphicProperties;
}

- (void)setSize:(unsigned int)arg1;
- (unsigned int)size;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setStyle:(int)arg1;
- (int)style;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHDOfficeArtClient : NSObject <OADClient>
{
    CHDAnchor *mAnchor;
}

- (struct CGRect)bounds;
- (_Bool)hasBounds;
- (void)setAnchor:(id)arg1;
- (id)anchor;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHDPie2DType : CHDChartType
{
    int mFirstSliceAngle;
    _Bool mDoughnutType;
    _Bool mPieOfPieType;
    _Bool mBarOfPieType;
}

- (_Bool)hasExplosion;
- (id)contentFormat;
- (int)defaultLabelPosition;
- (void)setBarOfPieType:(_Bool)arg1;
- (_Bool)isBarOfPieType;
- (void)setPieOfPieType:(_Bool)arg1;
- (_Bool)isPieOfPieType;
- (void)setDoughnutType:(_Bool)arg1;
- (_Bool)isDoughnutType;
- (void)setFirstSliceAngle:(int)arg1;
- (int)firstSliceAngle;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDPie3DType : CHDPie2DType
{
}

+ (_Bool)is3DType;

@end

__attribute__((visibility("hidden")))
@interface CHDPieDataValueProperties : CHDDataValueProperties
{
    int mExplosion;
}

- (id)shallowCopyWithIndex:(unsigned long long)arg1;
- (void)setExplosion:(int)arg1;
- (int)explosion;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHDPieSeries : CHDSeries
{
    int mExplosion;
}

- (void)setExplosion:(int)arg1;
- (int)explosion;
- (id)shallowCopy;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHDPlotArea : NSObject
{
    CHDChartTypesCollection *mChartTypes;
    CHDAxesCollection *mAxes;
    OADGraphicProperties *mGraphicProperties;
    _Bool mCategoryAxesReversed;
    _Bool mCategoryAxesReversedOverridden;
    _Bool mContainsVolumeStockType;
}

- (void)setContainsVolumeStockType:(_Bool)arg1;
- (_Bool)containsVolumeStockType;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)markSecondaryAxes;
- (_Bool)hasSecondaryYAxisDeleted;
- (_Bool)hasSecondaryAxis;
- (id)axes;
- (id)chartTypes;
- (void)dealloc;
- (id)initWithChart:(id)arg1;
- (_Bool)isCategoryAxesReversed:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDUnsupportedType : CHDChartType
{
}

@end

__attribute__((visibility("hidden")))
@interface CHDRadarType : CHDUnsupportedType
{
}

@end

__attribute__((visibility("hidden")))
@interface CHDRelativeSizeAnchor : CHDAnchor
{
    struct CGPoint mFrom;
    struct CGPoint mTo;
}

- (id).cxx_construct;
- (void)setTo:(struct CGPoint)arg1;
- (struct CGPoint)to;
- (void)setFrom:(struct CGPoint)arg1;
- (struct CGPoint)from;

@end

__attribute__((visibility("hidden")))
@interface CHDScatterSeries : CHDLineSeries
{
}

- (void)setCategoryData:(id)arg1;
- (id)categoryData;

@end

__attribute__((visibility("hidden")))
@interface CHDScatterType : CHDChartType
{
}

- (_Bool)isSmoothType;
- (int)defaultLabelPosition;

@end

__attribute__((visibility("hidden")))
@interface CHDSeriesAxis : CHDAxis
{
    int mLabelFrequency;
}

- (void)setLabelFrequency:(int)arg1;
- (int)labelFrequency;
- (id)initWithResources:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDSortedCollection : EDKeyedCollection
{
}

- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)addObject:(id)arg1 overrideDuplicate:(_Bool)arg2;
- (unsigned long long)addObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDSeriesCollection : EDSortedCollection
{
    CHDChart *mChart;
}

+ (id)seriesCollectionWithChart:(id)arg1;
- (id)firstNonEmptySeries;
- (unsigned long long)nonEmptySeriesCount;
- (unsigned long long)addObject:(id)arg1;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDSurfaceType : CHDUnsupportedType
{
}

@end

__attribute__((visibility("hidden")))
@interface CHDTitle : NSObject
{
    CHDChart *mChart;
    _Bool mIsAutoGenerated;
    _Bool mPositionAutoGenerated;
    _Bool mSizeAutoGenerated;
    CHDFormula *mName;
    EDString *mLastCachedName;
    OADGraphicProperties *mGraphicProperties;
    double mRotation;
}

- (void)setTitleRotationAngle:(double)arg1;
- (double)titleRotationAngle;
- (_Bool)isTitleVisible;
- (_Bool)isCachedTitleEmpty;
- (void)setIsSizeAutoGenerated:(_Bool)arg1;
- (_Bool)isSizeAutoGenerated;
- (void)setIsPositionAutoGenerated:(_Bool)arg1;
- (_Bool)isPositionAutoGenerated;
- (void)setIsAutoGenerated:(_Bool)arg1;
- (_Bool)isAutoGenerated;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setName:(id)arg1;
- (id)name;
- (void)setLastCachedName:(id)arg1;
- (id)lastCachedName;
- (void)dealloc;
- (id)initWithChart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDTrendline : NSObject
{
    _Bool mDisplayEquation;
    _Bool mDisplayRSquaredValue;
    double mBackward;
    double mForward;
    double mInterceptYAxis;
    int mPolynomialOrder;
    long long mMovingAveragePeriod;
    int mType;
    OADGraphicProperties *mGraphicProperties;
    CHDTrendlineLabel *mLabel;
    EDString *mName;
}

+ (id)trendline;
- (id)defaultNameWithSeriesName:(id)arg1;
- (void)setName:(id)arg1;
- (id)name;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setLabel:(id)arg1;
- (id)label;
- (void)setType:(int)arg1;
- (int)type;
- (void)setMovingAveragePeriod:(long long)arg1;
- (long long)movingAveragePeriod;
- (void)setPolynomialOrder:(int)arg1;
- (int)polynomialOrder;
- (void)setInterceptYAxis:(double)arg1;
- (double)interceptYAxis;
- (void)setForward:(double)arg1;
- (double)forward;
- (void)setBackward:(double)arg1;
- (double)backward;
- (void)setDisplayRSquaredValue:(_Bool)arg1;
- (_Bool)isDisplayRSquaredValue;
- (void)setDisplayEquation:(_Bool)arg1;
- (_Bool)isDisplayEquation;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHDTrendlineLabel : NSObject
{
    EDResources *mResources;
    CHDFormula *mName;
    unsigned long long mLastCachedNameStringIndex;
    unsigned long long mContentFormatId;
    _Bool mGeneratedText;
    _Bool mAutomaticLabelDeleted;
    OADGraphicProperties *mGraphicProperties;
}

+ (id)trendlineLabelWithResources:(id)arg1;
- (void)setGraphicProperties:(id)arg1;
- (id)graphicProperties;
- (void)setAutomaticLabelDeleted:(_Bool)arg1;
- (_Bool)isAutomaticLabelDeleted;
- (void)setGeneratedText:(_Bool)arg1;
- (_Bool)isGeneratedText;
- (void)setContentFormat:(id)arg1;
- (id)contentFormat;
- (void)setName:(id)arg1 chart:(id)arg2;
- (id)name;
- (void)setLastCachedName:(id)arg1;
- (id)lastCachedName;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;
- (void)setStringIndex:(unsigned long long)arg1;
- (unsigned long long)stringIndex;

@end

__attribute__((visibility("hidden")))
@interface CHDUnsupportedSeries : CHDSeries
{
}

@end

__attribute__((visibility("hidden")))
@interface CHDValueAxis : CHDAxis
{
    _Bool mPercentageFormattingFlag;
    _Bool mAutoMajorUnitValue;
    _Bool mAutoMinorUnitValue;
    double mMajorUnitValue;
    double mMinorUnitValue;
    double mScalingLogBase;
}

- (void)adjustAxisPositionForHorizontalChart;
- (_Bool)isAutoMinorUnitValue;
- (_Bool)isAutoMajorUnitValue;
- (void)setPercentageFormattingFlag:(_Bool)arg1;
- (_Bool)isPercentageFormattingFlag;
- (void)setScalingLogBase:(double)arg1;
- (double)scalingLogBase;
- (void)setMinorUnitValue:(double)arg1;
- (double)minorUnitValue;
- (void)setMajorUnitValue:(double)arg1;
- (double)majorUnitValue;
- (id)initWithResources:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHDView3D : NSObject
{
    int mRotationX;
    int mRotationY;
    int mDepthPercent;
    int mGapDepthPercent;
    int mHeightPercent;
    int mPerspective;
    _Bool mRightAngleAxes;
    _Bool mCluster;
    _Bool mAutoscale;
}

- (void)setAutoscale:(_Bool)arg1;
- (_Bool)isAutoscale;
- (void)setCluster:(_Bool)arg1;
- (_Bool)isCluster;
- (void)setRightAngleAxes:(_Bool)arg1;
- (_Bool)isRightAngleAxes;
- (void)setPerspective:(int)arg1;
- (int)perspective;
- (void)setHeightPercent:(int)arg1;
- (int)heightPercent;
- (void)setGapDepthPercent:(int)arg1;
- (int)gapDepthPercent;
- (void)setDepthPercent:(int)arg1;
- (int)depthPercent;
- (void)setRotationX:(int)arg1;
- (int)rotationX;
- (void)setRotationY:(int)arg1;
- (int)rotationY;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CHITMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface EDProcessor : NSObject
{
    EDWorkbook *mWorkbook;
    EDResources *mResources;
    NSMutableArray *mObjects;
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (void)applyProcessorWithSheet:(id)arg1;
- (void)markObjectForPostProcessing:(id)arg1;
- (_Bool)isObjectSupported:(id)arg1;
- (void)dealloc;
- (id)initWithWorkbook:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPCachedValuesRetriever : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPCategoryAndSeriesReordering : EDProcessor
{
}

- (void)reorderCategoryAndSeries:(id)arg1 sheet:(id)arg2 clearAxisReversedFlag:(_Bool)arg3;
- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;
- (void)reorderDataFormula:(id)arg1 dataPointCount:(unsigned long long)arg2 byRow:(_Bool)arg3;
- (void)reorderDataValues:(id)arg1 dataPointCount:(unsigned long long)arg2;
- (void)reorderData:(id)arg1 dataPointCount:(unsigned long long)arg2 byRow:(_Bool)arg3;
- (void)reorderValueProperties:(id)arg1 dataPointCount:(unsigned long long)arg2;
- (void)reorderSeriesCategory:(id)arg1 dataPointCount:(unsigned long long)arg2 byRow:(_Bool)arg3;
- (void)applyCategoryReorderingPreprocessor:(id)arg1;
- (void)applySeriesReorderingPreprocessor:(id)arg1;
- (_Bool)isObjectSupportedForSeriesReorderingPreprocessor:(id)arg1 isCategoryOrderReversed:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHPChangeDirection : EDProcessor
{
}

- (void)changeChartDirection:(id)arg1 sheet:(id)arg2;
- (void)changeBarColumnDirection:(id)arg1;
- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;
- (void)cleanUpOldSeriesCollection:(id)arg1;
- (void)addDataValue:(id)arg1 to:(id)arg2 withIndex:(unsigned long long)arg3;
- (id)getGraphicPropertiesForSeriesWithIndex:(unsigned long long)arg1 fromCollection:(id)arg2 isVaryColors:(_Bool)arg3 forChart:(id)arg4;
- (void)mapSeriesValues:(id)arg1 to:(id)arg2 forIndex:(unsigned long long)arg3 byRow:(_Bool)arg4 forChart:(id)arg5;
- (void)mapSeriesCollection:(id)arg1 from:(id)arg2 forChart:(id)arg3;
- (id)getSeriesCollectionForOrthogonalDirection:(id)arg1 forChart:(id)arg2;
- (id)createNewSeriesCollectionForOrthogonalDirection:(id)arg1 forChart:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHPChartDirection : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPScatterWithStringValueX : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPSeriesDateTimeFormatting : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;
- (_Bool)isDateTimeFormattingInContentFormatString:(id)arg1 edCell:(struct EDCellHeader *)arg2;
- (_Bool)isDateTimeFomrattingInData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPSeriesNameSynthesizer : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPSeriesValueSynthesizer : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHPValueAxisFormatting : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;
- (_Bool)isPercentageFormattingInContentFormatString:(id)arg1 edValue:(struct EDValue *)arg2;
- (id)dataPointFormattingInSources:(id)arg1;
- (id)dataPointFormattingInData:(id)arg1;
- (id)dataPointFormattingInSeriesCollection:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXArea2DType : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 chartType:(id)arg2 state:(id)arg3;
+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXArea3DType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXAutoStyling : CHAutoStyling <CHAutoStyling>
{
    _Bool __autoChartFillIsHollow;
    _Bool __autoChartStrokeIsHollow;
}

+ (int)styleIdWithStyleRow:(int)arg1 styleColumn:(int)arg2;
+ (int)styleColumnWithStyleId:(int)arg1;
+ (int)styleRowWithStyleId:(int)arg1;
+ (id)colorWithSchemeColorId:(int)arg1 shade:(float)arg2;
+ (id)colorWithSchemeColorId:(int)arg1 tint:(float)arg2;
+ (id)colorWithSchemeColorId:(int)arg1 transformType:(int)arg2 transformValue:(float)arg3;
@property _Bool _autoChartStrokeIsHollow; // @synthesize _autoChartStrokeIsHollow=__autoChartStrokeIsHollow;
@property _Bool _autoChartFillIsHollow; // @synthesize _autoChartFillIsHollow=__autoChartFillIsHollow;
- (void)setAutoChartStrokeIsHollow:(_Bool)arg1;
- (void)setAutoChartFillIsHollow:(_Bool)arg1;
- (void)resolveMarker:(id)arg1 withSeriesGraphicProperties:(id)arg2 forSeriesIndex:(unsigned long long)arg3;
- (void)resolveGraphicPropertiesOfErrorBar:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)resolveGraphicPropertiesOfTrendline:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (void)resolveGraphicPropertiesOfSeries:(id)arg1 forSeriesIndex:(unsigned long long)arg2 isLine:(_Bool)arg3;
- (void)resolveGraphicPropertiesOfSeries:(id)arg1 forSeriesIndex:(unsigned long long)arg2;
- (id)autoStrokeForSeriesIndex:(unsigned long long)arg1;
- (id)autoTextFill;
- (void)resolveLegendGraphicProperties:(id)arg1;
- (void)resolveMinorGridLinesGraphicProperties:(id)arg1;
- (void)resolveMajorGridLinesGraphicProperties:(id)arg1;
- (void)resolveAxisGraphicProperties:(id)arg1;
- (void)resolvePlotAreaGraphicProperties:(id)arg1;
- (void)resolveFloorGraphicProperties:(id)arg1;
- (void)resolveWallGraphicProperties:(id)arg1;
- (void)resolveChartAreaGraphicProperties:(id)arg1;
- (id)autoColorOfSeriesWithIndex:(unsigned long long)arg1;
- (id)autoColorOfFirstColumnSeriesWithIndex:(unsigned long long)arg1 seriesCount:(unsigned long long)arg2;
- (void)setDefaultErrorBarPropertiesInGraphicProperties:(id)arg1;
- (unsigned int)autoFloorAndChartAreaStrokeIndex;
- (unsigned int)autoFloorAndWallsFillIndex;
- (id)autoFloorAndWallsAndPlotArea2DFillColor;
- (id)autoChartAreaFillColor;
- (id)autoOtherStrokeColor;
- (id)autoChartAreaAndDataTableAndFloorStrokeColor;
- (id)autoMinorGridColor;
- (id)autoAxisAndMajorGridColor;
- (int)styleColumn;
- (int)styleRow;
- (int)styleId;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CHXAxis : NSObject
{
}

+ (id)chdAxisFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)stringWithCrosses:(int)arg1;
+ (id)stringWithTickLabelPosition:(int)arg1;
+ (id)stringWithTickMarkType:(int)arg1;
+ (id)stringWithAxisPosition:(int)arg1;
+ (int)chdCrossesFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)chdTickLabelPositionFromXmlTickLabelPositionElement:(struct _xmlNode *)arg1;
+ (int)chdTickMarkFromXmlTickMarkElement:(struct _xmlNode *)arg1;
+ (int)chdAxisPositionFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readScalingFromXmlScalingElement:(struct _xmlNode *)arg1 axis:(id)arg2 state:(id)arg3;
+ (Class)chxAxisClassWithChdAxis:(id)arg1;
+ (Class)chxAxisClassWithXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXBar2DType : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 chartType:(id)arg2 state:(id)arg3;
+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXBar3DSeries : NSObject
{
}

+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXBar3DType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXBubbleSeries : NSObject
{
}

+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXBubbleType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXCategoryAxis : NSObject
{
}

+ (id)chdAxisFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)stringFromLabelAlignment:(int)arg1;
+ (int)chdLabelAlignFromXmlLabelAlignElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXChart : NSObject
{
}

+ (id)readFromXmlDocument:(struct _xmlDoc *)arg1 chartStyleId:(int)arg2 state:(id)arg3;
+ (id)readFromXmlDocument:(struct _xmlDoc *)arg1 state:(id)arg2;
+ (int)chdDisplayBlanksAsEnumFromXmlElement:(struct _xmlNode *)arg1;
+ (void)readDefaultTextPropertiesFromXmlNode:(struct _xmlNode *)arg1 chart:(id)arg2 state:(id)arg3;
+ (void)readChartFromXmlNode:(struct _xmlNode *)arg1 chart:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CHXChartType : NSObject
{
}

+ (void)resolveStyle:(id)arg1 state:(id)arg2;
+ (int)chdShapeTypeFromXmlShapeTypeElement:(struct _xmlNode *)arg1;
+ (id)stringWithGroupingEnum:(int)arg1;
+ (int)chdGroupingFromXmlGroupingElement:(struct _xmlNode *)arg1;
+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)prepareChartTypeForWriting:(id)arg1;
+ (Class)chxChartTypeClassWithXmlElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXData : NSObject
{
}

+ (id)chdDataFromXmlDataElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (_Bool)isHiddenDataElement:(struct _xmlNode *)arg1 data:(id)arg2 state:(id)arg3;
+ (void)readStrDataFromXmlMultiLevelStrDataElement:(struct _xmlNode *)arg1 data:(id)arg2 state:(id)arg3;
+ (void)readStrDataFromXmlStrDataElement:(struct _xmlNode *)arg1 data:(id)arg2 state:(id)arg3;
+ (void)readNumDataFromXmlNumDataElement:(struct _xmlNode *)arg1 data:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CHXDataLabel : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 dataValuePropertiesCollection:(id)arg2 state:(id)arg3;
+ (id)stringFromDataLabelPosition:(int)arg1;
+ (Class)chdDataValuePropertiesClassWithState:(id)arg1;
+ (int)chdDataLabelPositionFromXmlDataLabelElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)chdDataLabelFromXmlDataLabelElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXDataValue : NSObject
{
}

+ (id)chdNumberValueFromXmlDataValueElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)chdStringValueFromXmlDataValueElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)chdDataValueFromXmlDataValueElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXDataValueProperties : NSObject
{
}

+ (id)chdDataValuePropertiesFromXmlElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (Class)chxDataValuePropertiesClassWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXDateAxis : NSObject
{
}

+ (id)chdAxisFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)stringFromTimeUnit:(int)arg1;
+ (int)chdTimeUnitFromXmlTimeUnitElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXDoughnutType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OCXState : NSObject
{
    int mXMLFormat;
    CXNamespace *mOCXRelationshipsNamespace;
    CXNamespace *mOCXDrawingNamespace;
}

@property(retain, nonatomic) CXNamespace *OCXDrawingNamespace; // @synthesize OCXDrawingNamespace=mOCXDrawingNamespace;
@property(retain, nonatomic) CXNamespace *OCXRelationshipsNamespace; // @synthesize OCXRelationshipsNamespace=mOCXRelationshipsNamespace;
@property(readonly, nonatomic) int xmlFormat; // @synthesize xmlFormat=mXMLFormat;
- (id)OCXSettingsRelationshipType;
- (id)OCXTableStylesRelationshipType;
- (id)OCXPackageViewPropsRelationshipType;
- (id)OCXPackagePresPropsRelationshipType;
- (id)OCXNumberingRelationshipType;
- (id)OCXNotesMasterRelationshipType;
- (id)OCXVmlDrawingRelationshipType;
- (id)OCXThemeOverrideRelationshipType;
@property(readonly, copy, nonatomic) NSString *OCXThemeRelationshipType; // @dynamic OCXThemeRelationshipType;
- (id)OCXLegacyDocTextInfoRelationshipType;
- (id)OCXCustomXmlRelationshipType;
- (id)OCXCommentAuthorsRelationshipType;
- (id)OCXNotesSlideRelationshipType;
- (id)OCXSlideLayoutRelationshipType;
- (id)OCXTableRelationshipType;
- (id)OCXPivotTableRelationshipType;
- (id)OCXCommentsRelationshipType;
- (id)OCXFootnotesRelationshipType;
- (id)OCXFontTableRelationshipType;
- (id)OCXEndnotesRelationshipType;
- (id)OCXDrawingRelationshipType;
- (id)OCXSharedStringsRelationshipType;
- (id)OCXStylesRelationshipType;
- (void)setupNSForXMLFormat:(int)arg1;
- (void)dealloc;
- (id)init;
- (void)setXmlFormat:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCXReadState : OCXState
{
}

- (id)OCXReadRequiredRelationshipForNode:(struct _xmlNode *)arg1 packagePart:(id)arg2;
- (id)OCXReadRequiredRelationshipForNode:(struct _xmlNode *)arg1 attributeName:(const char *)arg2 packagePart:(id)arg3;
- (id)OCXReadRelationshipForNode:(struct _xmlNode *)arg1 packagePart:(id)arg2;
- (id)OCXReadRelationshipForNode:(struct _xmlNode *)arg1 attributeName:(const char *)arg2 packagePart:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXDrawingState : OCXReadState
{
    OAXClient *mClient;
    OCPPackagePart *mPackagePart;
    OADStyleMatrix *mStyleMatrix;
    OAXTableStyleCache *mTableStyleCache;
    NSMutableDictionary *mShapeIdMap;
    NSMutableDictionary *mDrawableIdToVmlShapeIdMap;
    id mDocumentState;
    OADBlipCollection *mTgtBlipCollection;
    NSMutableDictionary *mSrcURLToTgtBlipIndexMap;
    NSMutableArray *mTgtBulletBlips;
    NSMutableDictionary *mSrcURLToTgtBulletBlipIndexMap;
    OAVReadState *mOavState;
    OADColorScheme *mColorScheme;
    OADColorMap *mColorMap;
    OADFontScheme *mFontScheme;
    NSMutableArray *mGroupStack;
    CXNamespace *mOAXMainNamespace;
    CXNamespace *mOAXChartNamespace;
    CXNamespace *mOAXChartDrawingNamespace;
    CXNamespace *mOAXCompatNamespace;
    CXNamespace *mOAXLockedCanvasNamespace;
    CXNamespace *mOAXPictureNamespace;
    CXNamespace *mOAXWordProcessingMLNamespace;
    CXNamespace *mOAXDrawing2010Namespace;
}

@property(retain, nonatomic) NSMutableDictionary *sourceURLToTargetBulletBlipIndexMap; // @synthesize sourceURLToTargetBulletBlipIndexMap=mSrcURLToTgtBulletBlipIndexMap;
@property(retain, nonatomic) NSMutableDictionary *sourceURLToTargetBlipIndexMap; // @synthesize sourceURLToTargetBlipIndexMap=mSrcURLToTgtBlipIndexMap;
@property(retain, nonatomic) CXNamespace *OAXDrawing2010Namespace; // @synthesize OAXDrawing2010Namespace=mOAXDrawing2010Namespace;
@property(retain, nonatomic) CXNamespace *OAXWordProcessingMLNamespace; // @synthesize OAXWordProcessingMLNamespace=mOAXWordProcessingMLNamespace;
@property(retain, nonatomic) CXNamespace *OAXPictureNamespace; // @synthesize OAXPictureNamespace=mOAXPictureNamespace;
@property(retain, nonatomic) CXNamespace *OAXLockedCanvasNamespace; // @synthesize OAXLockedCanvasNamespace=mOAXLockedCanvasNamespace;
@property(retain, nonatomic) CXNamespace *OAXCompatNamespace; // @synthesize OAXCompatNamespace=mOAXCompatNamespace;
@property(retain, nonatomic) CXNamespace *OAXChartDrawingNamespace; // @synthesize OAXChartDrawingNamespace=mOAXChartDrawingNamespace;
@property(retain, nonatomic) CXNamespace *OAXChartNamespace; // @synthesize OAXChartNamespace=mOAXChartNamespace;
@property(retain, nonatomic) CXNamespace *OAXMainNamespace; // @synthesize OAXMainNamespace=mOAXMainNamespace;
- (void)setupNSForXMLFormat:(int)arg1;
- (_Bool)isInsideGroup;
- (id)peekGroup;
- (id)popGroup;
- (void)pushGroup:(id)arg1;
- (id)bulletBlipRefForURL:(id)arg1;
- (id)blipRefForURL:(id)arg1;
- (id)blipRefWithURL:(id)arg1 blipArray:(id)arg2 blipURLtoIndexMap:(id)arg3;
- (void)setTargetBulletBlipArray:(id)arg1;
- (void)setTargetBlipCollection:(id)arg1;
- (void)clearTargetBlipCollection;
- (id)targetBlipCollection;
- (void)setFontScheme:(id)arg1;
- (id)fontScheme;
- (void)setColorMap:(id)arg1;
- (id)colorMap;
- (void)setColorScheme:(id)arg1;
- (id)colorScheme;
- (void)setOavState:(id)arg1;
- (id)oavState;
- (void)setDocumentState:(id)arg1;
- (id)documentState;
- (void)resetForNewDrawing;
- (void)setVmlShapeId:(id)arg1 forDrawableId:(unsigned int)arg2;
- (id)vmlShapeIdForDrawableId:(unsigned int)arg1;
- (void)setDrawable:(id)arg1 forShapeId:(unsigned int)arg2;
- (id)drawableForShapeId:(unsigned int)arg1;
- (void)setTableStyleCache:(id)arg1;
- (id)tableStyleCache;
- (void)setStyleMatrix:(id)arg1;
- (id)styleMatrix;
- (void)setPackagePart:(id)arg1;
- (id)packagePart;
- (id)client;
- (void)dealloc;
- (id)init;
- (id)initWithClient:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXDrawingState : OAXDrawingState
{
    CHXReadState *mCHXState;
}

- (id)chxState;
- (id)initWithCHXState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXErrorBar : NSObject
{
}

+ (id)chdErrorBarFromXmlErrorBarElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)chxErrorBarValueTypeFromEnum:(int)arg1;
+ (id)chxErrorBarTypeFromEnum:(int)arg1;
+ (int)chdErrorBarDirectionFromXmlElement:(struct _xmlNode *)arg1;
+ (int)chdErrorBarValueTypeFromXmlElement:(struct _xmlNode *)arg1;
+ (int)chdErrorBarTypeFromXmlElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXFont : NSObject
{
}

+ (void)mapFontProperties:(id)arg1 toTextProps:(id)arg2;
+ (void)mapFontProperties:(id)arg1 to:(id)arg2;
+ (id)defaultEdRunCollectionForTitle:(id)arg1 state:(id)arg2;
+ (id)edRunCollectionFromXmlTextPropertiesElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edFontWithOadCharacterProperties:(id)arg1 state:(id)arg2;
+ (id)edFontWithOadTextBody:(id)arg1 state:(id)arg2;
+ (id)edFontFromXmlTextPropertiesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXGraphicProperties : NSObject
{
}

+ (_Bool)isGraphicPropertiesContainedByXmlElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)setGraphicPropertiesFromXmlElementWithGraphicProperties:(id)arg1 element:(struct _xmlNode *)arg2 state:(id)arg3;
+ (id)oadGraphicPropertiesFromXmlElementWithGraphicProperties:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXLayout : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 graphicProperties:(id)arg2 state:(id)arg3;
+ (id)stringFromLayoutMode:(int)arg1;
+ (struct CGRect)boundsRectFromXmlManualLayoutElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXLegend : NSObject
{
}

+ (id)chdLegendFromXmlLegendElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)chdLegendPositionFromXmlLegendPositionElement:(struct _xmlNode *)arg1;
+ (id)chdLegendEntryFromXmlLegendEntryElement:(struct _xmlNode *)arg1 defaultFont:(id)arg2 state:(id)arg3;
+ (void)setDefaultLegendBounds:(id)arg1 legendPosition:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXLine2DType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXLine3DType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXLineSeries : NSObject
{
}

+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXLineType : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 chartType:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CHXMarker : NSObject
{
}

+ (id)chdMarkerFromXmlMarkerElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)stringFromMarkerStyle:(int)arg1;
+ (int)chdMarkerStyleFromXmlMarkerStyleElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXOfPieType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXPictureOptions : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface CHXPie2DType : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 chartType:(id)arg2 state:(id)arg3;
+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXPie3DType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXPieDataValueProperties : NSObject
{
}

+ (id)chdDataValuePropertiesFromXmlElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXPieSeries : NSObject
{
}

+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXPlotArea : NSObject
{
}

+ (id)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (_Bool)isAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXReadState : NSObject
{
    EXOfficeArtState *mDrawingState;
    CHDChart *mChart;
    EDResources *mResources;
    OCPPackagePart *mChartPart;
    CHDChartType *mCurrentChartType;
    CHDSeries *mCurrentSeries;
    OADParagraphProperties *mDefaultTextProperties;
    _Bool mDefaultTextPropertiesHaveExplicitFontSize;
    id <CHAutoStyling> mAutoStyling;
    _Bool mIgnoreFormulas;
}

@property(nonatomic) _Bool ignoreFormulas; // @synthesize ignoreFormulas=mIgnoreFormulas;
- (id)autoStyling;
- (void)popTitleTextProperties;
- (void)pushTitleTextProperties:(_Bool)arg1;
- (void)setDefaultTextPropertiesHaveExplicitFontSize:(_Bool)arg1;
- (void)setDefaultTextProperties:(id)arg1;
- (id)defaultTextProperties;
- (id)exState;
- (void)setCurrentSeries:(id)arg1;
- (id)currentSeries;
- (void)setCurrentChartType:(id)arg1;
- (id)currentChartType;
- (void)setChartPart:(id)arg1;
- (id)chartPart;
- (void)setResources:(id)arg1;
- (id)resources;
- (void)setChart:(id)arg1;
- (id)chart;
- (id)drawingState;
- (void)dealloc;
- (id)initWithDrawingState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXReader : NSObject
{
}

+ (id)readFromXmlDocument:(struct _xmlDoc *)arg1 chartStyleId:(int)arg2 drawingState:(id)arg3;
+ (id)readFromParentNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)externalDataWithChartPart:(id)arg1 relationship:(id)arg2;
+ (id)externalDataRelationshipWithChartPart:(id)arg1 drawingState:(id)arg2;
+ (id)chartPartWithParentNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXScatterSeries : NSObject
{
}

+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXScatterType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXSeries : NSObject
{
}

+ (void)resolveSeriesStyle:(id)arg1 state:(id)arg2;
+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (Class)chxSeriesClassWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXSeriesAxis : NSObject
{
}

+ (id)chdAxisFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXStockType : NSObject
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXString : NSObject
{
}

+ (id)edStringFromXmlRichElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readFromXmlTxElement:(struct _xmlNode *)arg1 formula:(id *)arg2 lastCached:(id *)arg3 state:(id)arg4;
+ (id)edStringFromXmlStrCacheElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)chdFormulaFromXmlStrRefElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXTitle : NSObject
{
}

+ (id)chdTitleFromXmlTitleElement:(struct _xmlNode *)arg1 isChartTitle:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CHXTrendline : NSObject
{
}

+ (id)chdTrendlineFromXmlTrendlineElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)stringFromTrendlineTypeEnum:(int)arg1;
+ (int)chdTrendlineTypeFromXmlTrendlineTypeElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXTrendlineLabel : NSObject
{
}

+ (id)chdTrendlineLabelFromXmlTrendlineLabelElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXUnsupportedSeries : NSObject
{
}

+ (id)chdSeriesFromXmlSeriesElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXUnsupportedType : CHXChartType
{
}

+ (id)chdChartTypeFromXmlChartTypeElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXUserShapes : NSObject
{
}

+ (void)readFromCharSpaceNode:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)readAbsoluteSizeAnchor:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readRelativeSizeAnchor:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readDrawable:(struct _xmlNode *)arg1 anchor:(id)arg2 drawingState:(id)arg3;
+ (struct CGPoint)readRealPoint:(struct _xmlNode *)arg1;
+ (float)readRealCoordinate:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface CHXValueAxis : NSObject
{
}

+ (id)chdAxisFromXmlAxisElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CHXView3D : NSObject
{
}

+ (id)chdView3DFromXmlView3DElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMArchiveManager : NSObject <TCCancelDelegate>
{
    _Bool mIsThumbnail;
    _Bool mIsOnPhone;
    unsigned long long mPageCount;
    NSString *mPassphrase;
    NSMutableDictionary *mDrawableCache;
    NSString *mResourcePathPrefix;
    NSMutableSet *mPausedPaths;
    int mHeight;
    int mWidth;
    double mCommitInterval;
    _Bool mAutoCommit;
    NSCache *mStyleObjectCache;
}

+ (id)resourceTypeToExtension:(int)arg1;
+ (id)resourceTypeToMIME:(int)arg1;
+ (int)blipTypeToResourceType:(int)arg1;
@property(copy) NSString *passphrase; // @synthesize passphrase=mPassphrase;
- (_Bool)isCancelled;
- (void)setHTMLWidth:(int)arg1;
- (void)setHTMLHeight:(int)arg1;
- (_Bool)isProgressive;
- (unsigned long long)pageCount;
- (void)setPageCount:(unsigned long long)arg1;
- (_Bool)isThumbnail;
- (void)setIsThumbnail:(_Bool)arg1;
- (id)appendResourcePathToName:(id)arg1;
- (id)resourcePathPrefix;
- (void)setResourcePathPrefix:(id)arg1;
- (id)cssStylesheetString;
- (void)addCssStyle:(id)arg1 withName:(id)arg2;
- (id)addCssStyle:(id)arg1;
- (id)addStyle:(id)arg1;
- (unsigned long long)resourceCount;
- (_Bool)isOnPhone;
- (void)setIsOnPhone:(_Bool)arg1;
- (_Bool)progressiveMappingIsPausedOnPath:(id)arg1;
- (void)restartProgressiveMappingOnPath:(id)arg1;
- (void)pauseProgressiveMappingOnPath:(id)arg1;
- (id)cachedPathForDrawable:(id)arg1;
- (id)addResourceForDrawable:(id)arg1 withType:(int)arg2 drawable:(id)arg3;
- (id)addResource:(id)arg1 withName:(id)arg2;
- (id)addResource:(id)arg1 withType:(int)arg2;
- (id)_validateData:(id)arg1 withType:(int *)arg2;
- (void)setAutoCommit:(_Bool)arg1;
- (void)setCommitInterval:(double)arg1;
- (void)commitDataAtPath:(id)arg1;
- (void)closeResourceAtPath:(id)arg1;
- (void)pushCssToPath:(id)arg1;
- (void)pushText:(id)arg1 toPath:(id)arg2;
- (void)pushData:(id)arg1 toPath:(id)arg2;
- (id)copyResourceWithType:(int)arg1;
- (id)copyResourceWithName:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CMProperty : NSObject
{
    NSString *cachedCssString;
}

- (int)compareValue:(id)arg1;
- (id)cssStringForName:(id)arg1;
- (id)cachedCssStringForName:(id)arg1;
- (id)cssString;
- (id)initWithCssString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMBordersProperty : CMProperty
{
    OITSUColor *mBorderColor;
    OITSUColor *mBorderTopColor;
    OITSUColor *mBorderLeftColor;
    OITSUColor *mBorderBottomColor;
    OITSUColor *mBorderRightColor;
    int mBorderStyle[5];
    int mBorderWidth[5];
    int mCustomWidth;
}

+ (_Bool)isStroked:(id)arg1;
- (id)colorString;
- (id)widthString;
- (id)styleString;
- (id)stringFromColor:(id)arg1;
- (id)stringFromWidthEnum:(int)arg1;
- (id)stringFromStyleEnum:(int)arg1;
- (id)cssString;
- (id)cssStringForName:(id)arg1;
- (void)adjustValues;
- (void)setFromOadStroke:(id)arg1 atLocation:(int)arg2 state:(id)arg3;
- (void)setNoneAtLocation:(int)arg1;
- (_Bool)isNoneAtLocation:(int)arg1;
- (id)initWithOADStroke:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CMShapeBuilder : NSObject
{
    int _type;
    OADOrientedBounds *_orientedBounds;
    int _format;
    NSDictionary *_adjustValues;
}

+ (struct CGRect)canonicalBounds;
- (struct CGPath *)copyShapeWithTransform:(struct CGAffineTransform)arg1;
- (float)maxAdjustedValue;
- (_Bool)isOffice12;
- (struct CGAffineTransform)affineTransform;
- (void)setAdjustValues:(id)arg1;
- (void)setFileFormat:(int)arg1;
- (void)setShapeType:(int)arg1;
- (void)setOrientedBounds:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CMCanonicalShapeBuilder : CMShapeBuilder
{
}

- (struct CGPath *)copyDiagramCircularArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyPyramidLayerWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyUpDiagramArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyRightDiagramArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyCircularArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyPieWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyChevronWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyHomePlateWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyStarWithTransform:(struct CGAffineTransform)arg1 aspectRatio:(float)arg2 andBranchNumber:(int)arg3;
- (struct CGPath *)copyLeftRightUpArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyQuadArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyUpDownArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyLeftRightArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyDownArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyUpArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyLeftArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyRightArrowWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyLineWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyStraightConnector1tWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyWedgeRectWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyCubeWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyCanWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyOctagonWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyHexagonWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyPentagonWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyPlusWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyRightTriangleWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyTriangleWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyDiamondWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyRoundedRectWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyEllipseWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyTrapezoidWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyParallelogramWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyRectangleWithTransform:(struct CGAffineTransform)arg1 andAspectRatio:(float)arg2;
- (struct CGPath *)copyShapeWithTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)affineTransform;

@end

__attribute__((visibility("hidden")))
@interface CMColorProperty : CMProperty
{
    OITSUColor *wdValue;
}

+ (float)transformedAlphaFromOADColor:(id)arg1;
+ (id)cssStringFromOADColor:(id)arg1;
+ (id)cssStringFromTSUColor:(id)arg1;
+ (id)cssStringFromRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
+ (id)nsColorFromShading:(id)arg1;
+ (id)nsColorFromOADColor:(id)arg1 state:(id)arg2;
+ (id)nsColorFromOADFill:(id)arg1 state:(id)arg2;
+ (id)cssStringFromOADGradientFill:(id)arg1 state:(id)arg2;
+ (struct CGColor *)copyCGColorFromOADFill:(id)arg1 state:(id)arg2;
+ (struct CGColor *)copyCGColorFromOADColor:(id)arg1 state:(id)arg2;
+ (float)resolveColorValueWithPercentage:(float)arg1 foregroundComponent:(float)arg2 backgroundComponent:(float)arg3;
+ (id)resolveStyleColorWithPercentage:(float)arg1 foregroundColor:(id)arg2 backgroundColor:(id)arg3;
+ (id)resolveStyleColorWithPercentage:(float)arg1 shading:(id)arg2;
- (id)cssStringForName:(id)arg1;
- (id)cssString;
- (_Bool)isEqualTo:(id)arg1;
- (id)initWithColor:(id)arg1;
- (id)value;

@end

__attribute__((visibility("hidden")))
@interface CMMapper : NSObject <CMMapperRootArchiver>
{
    CMMapper *mParent;
}

- (void)finishMappingWithState:(id)arg1;
- (void)mapElement:(id)arg1 atIndex:(unsigned long long)arg2 withState:(id)arg3 isLastElement:(_Bool)arg4;
- (void)startMappingWithState:(id)arg1;
- (void)mapStylesheetAt:(id)arg1 stylesheet:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)addStyle:(id)arg1 withName:(id)arg2;
- (void)addStyleUsingGlobalCacheTo:(id)arg1 style:(id)arg2 embedStyle:(_Bool)arg3;
- (void)addStyleUsingGlobalCacheTo:(id)arg1 style:(id)arg2;
- (void)addAttribute:(id)arg1 toNode:(id)arg2 value:(id)arg3;
- (id)archiver;
- (id)root;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)initWithParent:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDrawableMapper : CMMapper
{
    OADDrawable *mDrawable;
    CMDrawableStyle *mStyle;
    NSData *mImageBinaryData;
    NSString *mName;
    NSString *mExtension;
    int mResourceType;
    NSString *mSourcePath;
    struct CGRect mBox;
    float mRotation;
    _Bool mIsSupported;
    _Bool mIsCropped;
    struct CGRect mUncroppedBox;
    OADOrientedBounds *mOrientedBounds;
}

+ (id)orientedBoundsForDrawable:(id)arg1;
- (id).cxx_construct;
- (id)convertMetafileToPdf;
- (void)mapTextBoxAt:(id)arg1 withState:(id)arg2;
- (struct CGRect)shapeTextBoxRect;
- (void)mapDrawingContext:(id)arg1 at:(id)arg2 relative:(_Bool)arg3 withState:(id)arg4;
- (void)mapShapeGraphicsAt:(id)arg1 withState:(id)arg2;
- (void)calculateUncroppedBox:(id)arg1;
- (void)mapBounds;
- (void)mapImageBinaryData;
- (id)blipAtIndex:(unsigned int)arg1;
- (id)saveResourceAndReturnPath:(id)arg1 withType:(int)arg2;
- (void)setWithOadImage:(id)arg1;
- (void)setBoundingBox;
- (void)setRotation:(float)arg1;
- (float)rotation;
- (struct CGRect)uncroppedBox;
- (_Bool)isCropped;
- (struct CGRect)box;
- (id)initWithOadDrawable:(id)arg1 parent:(id)arg2;
- (id)initWithParent:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramMapper : CMDrawableMapper
{
    ODDDiagram *mDiagram;
    CMDrawingContext *mDrawingContext;
}

+ (int)diagramTypeFromString:(id)arg1;
- (id)styleMatrix;
- (id)diagram;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithOddDiagram:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 parent:(id)arg4;
- (id)copyDiagramMapperForId:(id)arg1;
- (id)identifierFromLayoutTypeId:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramShapeMapper : CMDiagramMapper
{
    unsigned long long mChildCount;
    OADOrientedBounds *mDiagramShapeBounds;
    NSString *mIdentifier;
    float mDefaultFontSize;
    int mMaxMappableTreeDepth;
    float mDefaultScale;
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (float)setFonSizeForChildNode:(id)arg1 atIndex:(unsigned long long)arg2 level:(int)arg3;
- (struct CGSize)textSizeForShapeSize:(struct CGSize)arg1;
- (void)setFonSizeForChildNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)setDefaultFonSize;
- (float)defaultFontSize;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (struct CGRect)circumscribedBounds;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithOddDiagram:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 identifier:(id)arg4 parent:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramArrowMapper : CMDiagramShapeMapper
{
    _Bool mIsVertical;
    _Bool mIsOutward;
    float mRadius;
}

+ (void)initialize;
- (struct CGSize)textSizeForShapeSize:(struct CGSize)arg1;
- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct CGRect)circumscribedBounds;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (id)initWithOddDiagram:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 identifier:(id)arg4 parent:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramChevronMapper : CMDiagramShapeMapper
{
    _Bool mHChevron;
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_suggestedBoundsForNodeAtIndex:(unsigned long long)arg1;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setIsHChevron:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramContinuousArrowMapper : CMDiagramShapeMapper
{
}

- (struct CGSize)sizeForNode:(id)arg1;
- (id)_suggestedBoundsForNodeAtIndex:(long long)arg1;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)stroke;
- (id)fill;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramListMapper : CMDiagramShapeMapper
{
    float mMaxLineCount;
}

- (float)setFonSizeForChildNode:(id)arg1 atIndex:(unsigned long long)arg2 level:(int)arg3;
- (void)setDefaultFonSize;
- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (struct CGSize)textSize;
- (void)mapListItemAt:(id)arg1 index:(unsigned long long)arg2 withState:(id)arg3;
- (id)suggestedBoundsForHListItemWithIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramNodeInfo : NSObject
{
    int mTreeDepth;
    int mRow;
    struct ODIHRange mXRange;
    _Bool mConnectToVerticalSide;
    int mExtraRowsBetweenParentAndSelf;
    float mXOffsetRelativeToParent;
    struct ODIHRangeVector *mXRanges;
}

- (id).cxx_construct;
- (struct ODIHRangeVector *)xRanges;
- (void)addToXOffsetRelativeToParent:(float)arg1;
- (void)setXOffsetRelativeToParent:(float)arg1;
- (float)xOffsetRelativeToParent;
- (void)setExtraRowsBetweenParentAndSelf:(int)arg1;
- (int)extraRowsBetweenParentAndSelf;
- (void)setConnectToVerticalSide:(_Bool)arg1;
- (_Bool)connectToVerticalSide;
- (void)setRow:(int)arg1;
- (int)row;
- (void)setTreeDepth:(int)arg1;
- (int)treeDepth;
- (void)setXRange:(struct ODIHRange)arg1;
- (struct ODIHRange)xRange;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramNodeLayout : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointMapper : CMMapper
{
    ODDPoint *mPoint;
    CMDrawingContext *mDrawingContext;
    OADOrientedBounds *mOrientedBounds;
    NSString *mPresentationName;
}

- (float)defaultFontSize;
- (id)diagram;
- (id)baseTextListStyleWithBounds:(id)arg1 isCentered:(_Bool)arg2;
- (id)plainText;
- (id)transformPresentationName;
- (id)transformForPresentationWithName:(id)arg1;
- (void)mapSiblingTextAt:(id)arg1 style:(id)arg2 level:(int)arg3 withState:(id)arg4;
- (void)mapChildrenTextAt:(id)arg1 style:(id)arg2 level:(int)arg3 withState:(id)arg4;
- (void)mapTextAt:(id)arg1 withBounds:(id)arg2 isCentered:(_Bool)arg3 includeChildren:(_Bool)arg4 withState:(id)arg5;
- (void)renderShapeAsBackgroundInBounds:(id)arg1;
- (id)stroke;
- (id)fill;
- (void)applyDiagramStyleToShapeProperties;
- (id)styleMatrix;
- (id)shapeStyle;
- (id)presentationWithName:(id)arg1;
- (void)mapChlidrenAt:(id)arg1 withState:(id)arg2;
- (void)setPresentationName:(id)arg1;
- (id)presentationName;
- (void)mapStyledRectangle:(struct CGRect)arg1 at:(id)arg2 withState:(id)arg3;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithPoint:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 parent:(id)arg4;
- (void)mapPointTextAt:(id)arg1 style:(id)arg2 level:(int)arg3 withState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointArrowMapper : CMDiagramPointMapper
{
    int mArrowType;
}

- (id)transformPresentationName;
- (id)getTextBoundsForBounds:(id)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithPoint:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 parent:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointChevronMapper : CMDiagramPointMapper
{
    _Bool mPlaceholder;
    _Bool mHomePlate;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setIsHomePlate:(_Bool)arg1;
- (void)setIsPlaceholder:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointContinuousArrowMapper : CMDiagramPointMapper
{
    _Bool mIsArrow;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setIsArrow:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointEllipseMapper : CMDiagramPointMapper
{
}

- (void)mapAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointListBaseMapper : CMDiagramPointMapper
{
}

- (void)mapTextAt:(id)arg1 withBounds:(id)arg2 isCentered:(_Bool)arg3 includeChildren:(_Bool)arg4 withState:(id)arg5;
- (void)mapAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointListItemL1Mapper : CMDiagramPointMapper
{
    unsigned long long mListIndex;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithPoint:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 listIndex:(unsigned long long)arg4 parent:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointPyramidLayerMapper : CMDiagramPointMapper
{
    double mPyramidAspectRatio;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setPyramidAspectRatio:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointRoundedRectMapper : CMDiagramPointMapper
{
}

- (void)mapAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointSegmentedPieMapper : CMDiagramPointMapper
{
    double mStartAngle;
    double mStopAngle;
    _Bool mDrawArrows;
    unsigned long long mSegmentIndex;
    unsigned long long mSegmentCount;
}

- (id)transformPresentationName;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)_arrowFillWithState:(id)arg1;
- (void)setSegmentCount:(unsigned long long)arg1;
- (void)setSegmentIndex:(unsigned long long)arg1;
- (void)setDrawArrows:(_Bool)arg1;
- (void)setStopAngle:(double)arg1;
- (void)setStartAngle:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointSegmentedPyramidLayerMapper : CMDiagramPointMapper
{
    _Bool mPlaceholder;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setIsPlaceholder:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointTextMapper : CMDiagramPointMapper
{
}

- (void)mapAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPointTransitionMapper : CMDiagramPointMapper
{
    int mShapeType;
    NSDictionary *mAdjustValues;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithPoint:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 shapeType:(int)arg4 adjustValues:(id)arg5 parent:(id)arg6;
- (id)initWithPoint:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 shapeType:(int)arg4 parent:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramPyramidMapper : CMDiagramShapeMapper
{
    _Bool mIsFlipped;
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_suggestedBoundsForNodeAtIndex:(unsigned long long)arg1;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setIsFlipped:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramSegmentedPieMapper : CMDiagramShapeMapper
{
    _Bool mDrawArrows;
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_suggestedBoundsForNodeAtIndex:(unsigned long long)arg1;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setDrawArrows:(_Bool)arg1;
- (int)pointCount;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramSegmentedPyramidMapper : CMDiagramShapeMapper
{
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_suggestedBoundsForPyramidLayerWithIndex:(unsigned long long)arg1 inLayer:(unsigned long long)arg2 andSlice:(unsigned long long)arg3;
- (unsigned long long)layerCount;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (unsigned long long)pointCount;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramShapeArrow4Mapper : CMDiagramShapeMapper
{
}

- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramShapeCycleMapper : CMDiagramShapeMapper
{
    float mScale;
    _Bool mCircularArrows;
    int mDiagramType;
    int mArrowShapeType;
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (struct CGRect)circumscribedBounds;
- (id)initWithOddDiagram:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 identifier:(id)arg4 parent:(id)arg5;
- (void)mapTransitionArrowsAt:(id)arg1 index:(unsigned int)arg2 withState:(id)arg3;
- (void)mapTransitionPointAt:(id)arg1 index:(unsigned int)arg2 withState:(id)arg3;
- (struct CGSize)nodeSize;
- (struct CGRect)nodeBoundsWithIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramShapeHierarchyMapper : CMDiagramShapeMapper
{
    NSMutableDictionary *mNodeInfoMap;
    _Bool mIsLayered;
}

- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)mapNode:(id)arg1 at:(id)arg2 scale:(float)arg3 offsetX:(float)arg4 offsetY:(float)arg5 withState:(id)arg6;
- (void)mapLayerNodes:(id)arg1 at:(id)arg2 scale:(float)arg3 offsetX:(float)arg4 offsetY:(float)arg5 withState:(id)arg6;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)dealloc;
- (id)initWithOddDiagram:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 identifier:(id)arg4 parent:(id)arg5;
- (struct ODIHRangeVector *)mapRangesForNode:(id)arg1;
- (void)setAbsolutePositionOfNode:(id)arg1 parentRow:(int)arg2 parentXOffset:(float)arg3 index:(unsigned long long)arg4;
- (void)copyInfoForNode:(id)arg1 depth:(int)arg2;
- (struct CGRect)mapLogicalBoundsWithXRanges:(const struct ODIHRangeVector *)arg1;
- (struct CGRect)boundsForNode:(id)arg1;
- (id)infoForNode:(id)arg1;
- (void)setUpLayers;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramShapeMatrixMapper : CMDiagramShapeMapper
{
    unsigned long long mColumnCount;
    unsigned long long mRowCount;
    float mRectWidth;
    float mRectHeight;
    _Bool mHasArrows;
    _Bool mIsSnake;
    _Bool mIsHorizontal;
    _Bool mIsLinear;
}

- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (struct CGSize)sizeForNode:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct CGRect)circumscribedBounds;
- (id)initWithOddDiagram:(id)arg1 drawingContext:(id)arg2 orientedBounds:(id)arg3 identifier:(id)arg4 parent:(id)arg5;
- (double)gapRatio;
- (struct CGSize)gapSize;
- (unsigned long long)columnCount;
- (void)setColumnsAndRowsCount;

@end

__attribute__((visibility("hidden")))
@interface CMDiagramShapeVennMapper : CMDiagramShapeMapper
{
}

- (struct CGSize)textSizeForShapeSize:(struct CGSize)arg1;
- (void)mapChildrenAt:(id)arg1 withState:(id)arg2;
- (struct CGRect)nodeBoundsWithIndex:(unsigned int)arg1;
- (struct CGRect)circumscribedBounds;

@end

__attribute__((visibility("hidden")))
@interface CMDictArchiveManager : CMArchiveManager
{
    NSMutableString *mCssString;
    NSMutableDictionary *mStyleCache;
    NSMutableDictionary *mResources;
    NSString *mPrefix;
    NSString *mResourceUrlProtocol;
    NSMutableString *mMainHtml;
    NSString *mName;
    _Bool mIsFrameset;
}

- (id)cssStylesheetString;
- (void)pushCssToPath:(id)arg1;
- (void)addCssStyle:(id)arg1 withName:(id)arg2;
- (id)addCssStyle:(id)arg1;
- (id)resourceUrlProtocol;
- (unsigned long long)resourceCount;
- (id)copyDictionaryWithSizeInfos:(_Bool)arg1;
- (void)pushText:(id)arg1 toPath:(id)arg2;
- (void)pushData:(id)arg1 toPath:(id)arg2;
- (id)copyResourceWithName:(id)arg1;
- (id)name;
- (void)setIsFrameset;
- (void)dealloc;
- (id)initWithName:(id)arg1 resourcePathPrefix:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMStyle : NSObject <NSCopying>
{
    NSMutableDictionary *properties;
    NSMutableString *mStyleString;
}

- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)appendDefaultBorderStyle;
- (void)appendSizeInfoFromRect:(struct CGRect)arg1;
- (void)appendPositionInfoFromRect:(struct CGRect)arg1;
- (void)appendPropertyString:(id)arg1;
- (void)appendPropertyForName:(id)arg1 color:(id)arg2;
- (void)appendPropertyForName:(id)arg1 length:(double)arg2 unit:(int)arg3;
- (void)appendPropertyForName:(id)arg1 floatValue:(float)arg2;
- (void)appendPropertyForName:(id)arg1 intValue:(int)arg2;
- (void)appendPropertyForName:(id)arg1 stringValue:(id)arg2;
- (void)appendPropertyForName:(id)arg1 stringWithColons:(id)arg2;
- (void)appendPropertyForName:(id)arg1 oadTextSpacing:(id)arg2 lineHeight:(float)arg3 unit:(int)arg4;
- (void)appendPropertyForName:(id)arg1 oadTextSpacing:(id)arg2 unit:(int)arg3;
- (void)appendPropertyForName:(id)arg1 oadTextSpacing:(id)arg2;
- (id)cacheFriendlyCSSStyleString;
- (id)cssStyleString;
- (void)addPropertiesToCSSStyleString:(id)arg1;
- (id)attributeForName:(id)arg1;
- (id)propertyForName:(id)arg1;
- (void)addProperty:(id)arg1 forKey:(id)arg2;
- (id)properties;
- (void)dealloc;
- (id)initWithStyle:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EMCellStyle : CMStyle <NSCopying>
{
    EDStyle *_edStyle;
    int _edCellType;
    double _columnWidth;
    double _contentWidth;
    _Bool _isRowZero;
    _Bool _isColumnZero;
    _Bool _truncateContents;
    _Bool _resolvedProperties;
}

+ (id)_parseFontName:(id)arg1 nameContainsBold:(_Bool *)arg2 nameContainsItalic:(_Bool *)arg3;
+ (id)styleForFont:(id)arg1;
- (id)cacheFriendlyCSSStyleString;
- (id)cssStyleString;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)addAlignmentStyle:(id)arg1;
- (void)addBordersStyle:(id)arg1;
- (void)addFillStyle:(id)arg1;
- (void)addFontStyle:(id)arg1;
- (void)resolveBorders;
- (void)resolveContentWidth;
- (void)resolveFormatType;
- (id)initWithEDStyle:(id)arg1 type:(int)arg2 rowIndex:(unsigned long long)arg3 columnIndex:(unsigned long long)arg4 columnWidth:(unsigned long long)arg5 contentWidth:(unsigned long long)arg6 truncateContents:(_Bool)arg7;

@end

__attribute__((visibility("hidden")))
@interface CMDrawableStyle : EMCellStyle
{
    OADDrawable *mDrawable;
}

- (void)addPositionUsingOffsets:(struct CGRect)arg1;
- (void)addPositionProperties:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMDrawingAction : NSObject
{
    int _type;
    id _value;
    float _floatValue;
}

- (id)description;
- (float)floatValue;
- (id)value;
- (int)type;
- (void)dealloc;
- (id)initWithType:(int)arg1 andFloatValue:(float)arg2;
- (id)initWithType:(int)arg1 andValue:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMDrawingContext : NSObject
{
    CMDrawableMapper *_mapper;
    NSMutableArray *_actions;
    struct CGRect _frame;
    struct CGRect _finalFrame;
    struct __CFData *_data;
    struct CGDataConsumer *_dataConsumer;
    struct CGContext *_cgContext;
    NSAffineTransform *_currentTransform;
    NSMutableArray *_transforms;
    struct CGImage *_fillImage;
}

- (id).cxx_construct;
- (void)_restoreLastTransform;
- (void)_addTransform:(id)arg1;
- (void)_applyTransform:(id)arg1;
- (void)_playbackActions;
- (struct CGRect)transformRectToGroup:(struct CGRect)arg1;
- (struct CGRect)transformRectToPage:(struct CGRect)arg1;
- (struct CGRect)_transformRect:(struct CGRect)arg1 withTransform:(id)arg2;
- (void)addPath:(struct CGPath *)arg1;
- (void)addDebugPath:(struct CGPath *)arg1;
- (void)setLineDash:(id)arg1;
- (void)setLineWidth:(float)arg1;
- (void)setFillImage:(struct CGImage *)arg1;
- (void)setFillColor:(struct CGColor *)arg1;
- (void)setStrokeColor:(struct CGColor *)arg1;
- (void)restoreLastTransform;
- (void)addTransform:(id)arg1;
- (struct CGAffineTransform)currentTransform;
- (float)currentScaleFactor;
- (id)copyPDF;
- (struct CGRect)pdfFrame;
- (struct CGRect)frame;
- (id)mapper;
- (void)setMapper:(id)arg1;
- (struct CGContext *)_cgContext;
- (void)_closeContext;
- (void)_copyCGContext;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMFileManager : NSObject
{
}

+ (id)getUrlProtocol:(id)arg1;
+ (id)canonicalUrlPrefix:(id)arg1;
+ (int)getFileTypeFromUTI:(id)arg1;
+ (int)getFileTypeFromPath:(id)arg1;
+ (id)uniqueFileName:(id)arg1;
+ (id)getTmpDirectory;

@end

__attribute__((visibility("hidden")))
@interface CMFrameUtils : NSObject
{
}

+ (id)scriptElementWithScriptString:(id)arg1;
+ (id)copyFramesetElement:(int)arg1 isOnTop:(_Bool)arg2;
+ (id)copyFramesetPageForDocument:(id)arg1 navPage:(id)arg2 firstPage:(id)arg3 isOnTop:(_Bool)arg4;
+ (id)copyFramesetPageForDocument:(id)arg1 navPage:(id)arg2 firstPage:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface CMLineShapeBuilder : CMShapeBuilder
{
    OADStroke *_stroke;
}

- (void)_renderLineEnd:(id)arg1 atPoint:(struct CGPoint)arg2 withOrientation:(float)arg3 inPath:(struct CGPath *)arg4;
- (struct CGRect)_boundingBoxForLineEnd:(id)arg1;
- (float)_getRotationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 withBounds:(id)arg3;
- (void)_renderBentConnector3InPath:(struct CGPath *)arg1 withTransform:(struct CGAffineTransform)arg2 andOrientedBounds:(id)arg3 headSrc:(struct CGPoint *)arg4 headDst:(struct CGPoint *)arg5 tailSrc:(struct CGPoint *)arg6 tailDst:(struct CGPoint *)arg7;
- (float)_adjustedCoefAtIndex:(int)arg1;
- (void)_renderBentConnector2InPath:(struct CGPath *)arg1 withTransform:(struct CGAffineTransform)arg2 andOrientedBounds:(id)arg3 headSrc:(struct CGPoint *)arg4 headDst:(struct CGPoint *)arg5 tailSrc:(struct CGPoint *)arg6 tailDst:(struct CGPoint *)arg7;
- (void)_renderStraightConnector1InPath:(struct CGPath *)arg1 withTransform:(struct CGAffineTransform)arg2 andOrientedBounds:(id)arg3 headSrc:(struct CGPoint *)arg4 headDst:(struct CGPoint *)arg5 tailSrc:(struct CGPoint *)arg6 tailDst:(struct CGPoint *)arg7;
- (struct CGPath *)copyShapeWithTransform:(struct CGAffineTransform)arg1;
- (void)setStroke:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CMFreeFormShapeBuilder : CMLineShapeBuilder
{
    OADPath *_path;
    struct CGSize _space;
}

- (id).cxx_construct;
- (struct CGPoint)_renderPathElement:(id)arg1 withTransform:(struct CGAffineTransform)arg2 inPath:(struct CGPath *)arg3;
- (struct CGPath *)copyShapeWithTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)affineTransform;
- (void)setSpace:(struct CGSize)arg1;
- (void)setPath:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface CMGlobalCache : NSObject
{
}

+ (void)releaseGlobalCache;
+ (void)initGlobalCache;
+ (id)drawableElementCache;
+ (id)cssStylesheetCache;
+ (id)borderWidthCache;
+ (id)borderStyleCache;
+ (id)lengthPropertyCache;
+ (id)colorPropertyCache;

@end

__attribute__((visibility("hidden")))
@interface CMImageFillMapper : CMMapper
{
    OADFill *mFill;
    OADOrientedBounds *mBounds;
}

- (_Bool)isCropped;
- (struct CGRect)uncroppedBox;
- (void)mapNonImageFillAt:(id)arg1 toStyle:(id)arg2 withState:(id)arg3;
- (void)mapImageFillAt:(id)arg1 toStyle:(id)arg2 withState:(id)arg3;
- (id)mapImageFill:(id)arg1 withState:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithOadFill:(id)arg1 bounds:(id)arg2 parent:(id)arg3;
- (id)convertMetafileToPdf:(id)arg1 state:(id)arg2;
- (id)blipAtIndex:(unsigned int)arg1;
- (id)mainSubBlip;

@end

__attribute__((visibility("hidden")))
@interface CMLengthProperty : CMProperty
{
    double value;
    int unitType;
}

+ (double)convertToPoints:(double)arg1 unit:(int)arg2;
+ (id)cssStringValue:(double)arg1 unit:(int)arg2;
- (void)addNumber:(double)arg1 unit:(int)arg2;
- (id)description;
- (id)cssString;
- (id)cssStringForName:(id)arg1;
- (int)compareValue:(id)arg1;
- (int)unitType;
- (int)intValue;
- (double)value;
- (id)initWithNumber:(double)arg1 unit:(int)arg2;
- (id)initWithNumber:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMNumberFormatter : NSObject
{
}

+ (id)stringForNumber:(unsigned long long)arg1 withFormat:(int)arg2 orNumberFormatter:(void **)arg3;

@end

__attribute__((visibility("hidden")))
@interface CMOutlineState : NSObject
{
    unsigned long long counter[10];
    unsigned long long listId;
}

- (void)increaseCounterAtLevel:(unsigned char)arg1;
- (unsigned long long)counterAtLevel:(unsigned char)arg1;
- (void)setCounterTo:(unsigned long long)arg1 atLevel:(unsigned char)arg2;
- (unsigned long long)listId;
- (void)reset;
- (id)initWithListId:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CMProgressiveArchiveManager : CMArchiveManager
{
    const void *mClient;
    CDStruct_ba543347 *mCallBacks;
    NSMutableDictionary *mDataCache;
    NSMutableDictionary *mStyleCache;
    NSMutableString *mCssString;
    _Bool mMainDataInited;
    NSDate *mStartDate;
    NSDate *mLastCommitDate;
    NSMutableString *mHtmlLogString;
}

- (id)cssStylesheetString;
- (void)pushCssToPath:(id)arg1;
- (void)addCssStyle:(id)arg1 withName:(id)arg2;
- (id)addCssStyle:(id)arg1;
- (_Bool)isCancelled;
- (void)closeResourceAtPath:(id)arg1;
- (void)commitDataAtPath:(id)arg1;
- (void)pushText:(id)arg1 toPath:(id)arg2;
- (void)pushData:(id)arg1 toPath:(id)arg2;
- (id)copyResourceWithName:(id)arg1;
- (_Bool)isProgressive;
- (void)dealloc;
- (id)initWithClient:(const void *)arg1 andCallBacks:(CDStruct_ba543347 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMShapeRenderer : NSObject
{
}

+ (void)_setupDrawingStyleInDrawingContext:(id)arg1 dash:(id)arg2 state:(id)arg3;
+ (void)_setupDrawingStyleInDrawingContext:(id)arg1 stroke:(id)arg2 state:(id)arg3;
+ (void)_setupDrawingStyleInDrawingContext:(id)arg1 fill:(id)arg2 stroke:(id)arg3 state:(id)arg4;
+ (struct CGImage *)_copyImageFromOADImagefill:(id)arg1 withContext:(id)arg2;
+ (struct CGColor *)_copyCGColorFromOADFill:(id)arg1 andState:(id)arg2;
+ (struct CGColor *)_copyCGColorFromOADColor:(id)arg1 andState:(id)arg2;
+ (void)_renderCGPath:(struct CGPath *)arg1 stroke:(id)arg2 fill:(id)arg3 orientedBounds:(id)arg4 state:(id)arg5 drawingContext:(id)arg6;
+ (void)renderCanonicalShape:(int)arg1 fill:(id)arg2 stroke:(id)arg3 adjustValues:(id)arg4 orientedBounds:(id)arg5 state:(id)arg6 drawingContext:(id)arg7;
+ (void)renderLine:(int)arg1 stroke:(id)arg2 adjustValues:(id)arg3 orientedBounds:(id)arg4 state:(id)arg5 drawingContext:(id)arg6;
+ (void)renderDiagramPath:(id)arg1 fill:(id)arg2 stroke:(id)arg3 state:(id)arg4 drawingContext:(id)arg5;
+ (void)renderFreeForm:(id)arg1 fill:(id)arg2 stroke:(id)arg3 orientedBounds:(id)arg4 state:(id)arg5 drawingContext:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface CMShapeUtils : NSObject
{
}

+ (int)radToFixedPointDeg:(double)arg1;
+ (double)fixedPointDegToRad:(int)arg1;
+ (float)fontSizeForText:(id)arg1 insideRectangle:(struct CGSize)arg2;
+ (float)intersectionAngleNextToAngle:(float)arg1 isAfter:(_Bool)arg2 nodeSize:(struct CGSize)arg3;
+ (double)getFormulaResultFromCustomGeometry:(id)arg1 atIndex:(unsigned long long)arg2;
+ (double)mapFormulaOfType:(int)arg1 argValues:(double *)arg2 isEscher:(_Bool)arg3;
+ (double)mapAdjustCoord:(struct OADAdjustCoord)arg1 geometry:(id)arg2;
+ (id)transformedBoundsWithBounds:(id)arg1 transform:(id)arg2;
+ (id)relatvieBoundsWithAbsoluteInnerBounds:(id)arg1 parentBounds:(id)arg2;
+ (id)internalBoundsWithBounds:(id)arg1 scaleBounds:(struct CGRect)arg2;
+ (id)inscribedBoundsWithBounds:(id)arg1 logicalBounds:(struct CGRect)arg2;
+ (id)absoluteOrientedBoundsWithRelativeOrientedBounds:(id)arg1 parentOrientedBounds:(id)arg2 parentLogicalBounds:(struct CGRect)arg3;
+ (id)transformFromBounds:(struct CGRect)arg1 toOrientedBounds:(id)arg2;
+ (struct CGRect)transformRect:(struct CGRect)arg1 scale:(float)arg2 offsetX:(float)arg3 offsetY:(float)arg4;
+ (float)scaleFactorFromLength:(float)arg1 toLength:(float)arg2;
+ (void)setCoordSpaceForCustomeGeometry:(id)arg1 fromSize:(struct CGSize)arg2;
+ (_Bool)isShapeALine:(id)arg1;
+ (int)mapFormulaKeywordValue:(int)arg1 geometry:(id)arg2;
+ (float)normalizedAngle:(float)arg1;
+ (int)radToMilliMinutes:(double)arg1;
+ (double)milliMinutesToRad:(int)arg1;
+ (int)radToNativeAngle:(double)arg1 isEscher:(_Bool)arg2;
+ (double)nativeAngleToRad:(int)arg1 isEscher:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface CMState : NSObject
{
    NSMutableDictionary *components;
    NSMutableDictionary *htmlResource;
    NSString *mResourceUrlPrefix;
    OADColorMap *mColorMap;
    OADColorScheme *mColorScheme;
    id mResources;
    int mSrcFormat;
    _Bool mIsThumbnail;
    _Bool mIsOnPhone;
    long long _textLevel;
}

- (long long)textLevel;
- (void)popTextLevel;
- (void)pushTextLevel;
- (_Bool)isOnPhone;
- (void)setIsOnPhone:(_Bool)arg1;
- (_Bool)isThumbnail;
- (void)setIsThumbnail:(_Bool)arg1;
- (_Bool)isOffice12;
- (void)copyFromCMStateWithoutComponents:(id)arg1;
- (void)setResources:(id)arg1;
- (id)resources;
- (void)setColorScheme:(id)arg1;
- (id)colorScheme;
- (void)setColorMap:(id)arg1;
- (id)colorMap;
- (int)sourceFormat;
- (void)setSrcFormat:(int)arg1;
- (id)getHtmlResource;
- (void)setHtmlResource:(id)arg1;
- (id)resourceUrlPrefix;
- (void)setResourceUrlPrefix:(id)arg1;
- (void)setComponentWithName:(id)arg1 value:(id)arg2;
- (id)componentByName:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CMStringProperty : CMProperty
{
    NSString *wdValue;
}

- (id)cssStringForName:(id)arg1;
- (id)value;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMTableGridInfo : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface CMTextFilter : NSObject
{
}

+ (id)convertToVericalString:(id)arg1;
+ (id)filterToPreserveMultipleWhiteSpaces:(id)arg1;
+ (id)convertLineBreaksToParagraphBreaks:(id)arg1;
+ (id)filterSpecialCodes:(id)arg1;
+ (id)covertFormatString:(id)arg1;
+ (id)filterHyperlinkField:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CMToggleProperty : CMProperty
{
    int wdValue;
}

- (id)cssStringForName:(id)arg1;
- (id)mapStrikeTrough;
- (id)mapItalic;
- (id)mapBold;
- (void)resolveWithBaseProperty:(id)arg1;
- (int)compareValue:(id)arg1;
- (int)value;
- (id)initWithCMTogglePropertyValue:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface CMTop : NSObject
{
}

+ (id)documentWithContents:(id)arg1 ofReaderClass:(Class)arg2 archiver:(id)arg3 properties:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface CMXmlUtils : NSObject
{
}

+ (id)copyHeadElementWithTitle:(id)arg1;
+ (id)copyHeadElementWithTitle:(id)arg1 deviceWidth:(int)arg2;
+ (id)copyHeadElementForDeviceWidth:(int)arg1;
+ (id)copyHeadElement;
+ (id)xhtmlStringWithXmlData:(id)arg1;
+ (void)filterString:(id)arg1;
+ (id)copyFilteredString:(id)arg1;
+ (id)copyXhtmlDocument;

@end

__attribute__((visibility("hidden")))
@interface CSVMapper : CMMapper
{
    CMArchiveManager *mArchiver;
    NSMutableArray *mRows;
    NSString *mFileName;
    unsigned long long mColumnCount;
    struct CGSize mPageSize;
}

- (id).cxx_construct;
- (struct CGSize)pageSize;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)dealloc;
- (id)initWithRows:(id)arg1 fileName:(id)arg2 columnCount:(unsigned long long)arg3 archiver:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface CSVTop : NSObject
{
}

+ (void)fillHTMLArchiveForCSVData:(id)arg1 fileName:(id)arg2 archiver:(id)arg3;
+ (void)fillHTMLArchiveForCSVFile:(id)arg1 archiver:(id)arg2;
+ (void)fillHTMLArchiveForCSVString:(id)arg1 fileName:(id)arg2 archiver:(id)arg3;
+ (struct CGSize)_improveSize:(struct CGSize)arg1;

@end

__attribute__((visibility("hidden")))
@interface CXCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface CXNamespace : NSObject
{
    const char *mUri;
    struct _xmlDoc *mDocument;
    struct _xmlNs *mDocumentNamespace;
    CXNamespace *mFallbackNamespace;
}

+ (void)clearRegisteredNamespaces;
+ (_Bool)isPrefixSupportedFromStream:(struct _xmlTextReader *)arg1 prefix:(const char *)arg2;
+ (_Bool)isPrefixSupportedFromNodeContext:(struct _xmlNode *)arg1 prefix:(const char *)arg2;
+ (_Bool)isNamespaceSupported:(const char *)arg1;
+ (void)registerNamespace:(id)arg1;
@property(retain, nonatomic) CXNamespace *fallbackNamespace; // @synthesize fallbackNamespace=mFallbackNamespace;
- (const char *)fallbackUri;
- (const char *)uri;
- (_Bool)containsAttribute:(struct _xmlAttr *)arg1;
- (_Bool)containsNode:(struct _xmlNode *)arg1;
- (id)initUnsupportedNsWithUri:(const char *)arg1;
- (void)dealloc;
- (id)initWithUri:(const char *)arg1 fallbackNamespace:(id)arg2;
- (id)initWithUri:(const char *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface CXUnqualifiedNamespace : CXNamespace
{
}

- (_Bool)containsAttribute:(struct _xmlAttr *)arg1;
- (_Bool)containsNode:(struct _xmlNode *)arg1;
- (id)initWithUri:(const char *)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBAlignmentInfo : NSObject
{
}

+ (void)writeAlignmentInfo:(id)arg1 toXlGraphicsInfo:(struct XlGraphicsInfo *)arg2;
+ (struct XlDXfAlign *)xlDXfAlignFromEDAlignmentInfo:(id)arg1;
+ (void)writeAlignmentInfo:(id)arg1 toXlXf:(struct XlXf *)arg2;
+ (id)edAlignmentInfoFromXlGraphicsInfo:(struct XlGraphicsInfo *)arg1;
+ (id)edAlignmentInfoFromXlDXfAlign:(struct XlDXfAlign *)arg1;
+ (id)edAlignmentInfoFromXlXf:(struct XlXf *)arg1;
+ (int)convertEDVerticalAlignmentEnumToXl:(int)arg1;
+ (int)convertEDHorizontalAlignmentEnumToXl:(int)arg1;
+ (int)convertXlVertAlignEnumToED:(int)arg1;
+ (int)convertXlHorizAlignEnumToED:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBBorders : NSObject
{
}

+ (id)edBordersFromXlDXf:(struct XlDXf *)arg1 edResources:(id)arg2;
+ (id)edBordersFromXlXf:(struct XlXf *)arg1 edResources:(id)arg2;
+ (int)convertEDDiagonalEnumToXl:(int)arg1;
+ (int)convertEDBorderEnumToXl:(int)arg1;
+ (int)convertXlDiagStyleEnumToED:(int)arg1;
+ (int)convertXlBorderEnumToED:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBCell : NSObject
{
}

+ (void)readXlCell:(struct XlCell *)arg1 edRowInfo:(struct EDRowInfo **)arg2 edRowBlock:(id)arg3 edRowBlocks:(id)arg4 state:(id)arg5;
+ (int)convertEDErrorValueEnumToXl:(int)arg1;
+ (int)convertXlErrorEnumToED:(int)arg1;
+ (int)convertXlCellTypeToED:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBCellFormatTable : NSObject
{
}

+ (void)readWithState:(id)arg1;
+ (id)getStyleNameForCellFormatIndex:(unsigned int)arg1 xlStyleTable:(const struct XlStyleTable *)arg2 edResources:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EBChartSheet : NSObject
{
}

+ (void)readChildrenWithState:(id)arg1;
+ (void)readWithState:(id)arg1;
+ (void)setupProcessors:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBColorReference : NSObject
{
}

+ (id)edColorReferenceFromXlColorIndex:(unsigned int)arg1 edResources:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBColorTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBColumnTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBConditionalFormat : NSObject
{
}

+ (void)readXlConditionalFormat:(struct XlConditionalFormat *)arg1 toEDConditionalFormatting:(id)arg2 state:(id)arg3;
+ (int)convertEDConditionalFmtOperatorEnumToXl:(int)arg1;
+ (int)convertXlConditionalFmtOperatorEnumToED:(int)arg1;
+ (int)convertXlConditionalFmtTypeEnumToED:(int)arg1;
+ (int)convertEDConditionalFmtTypeEnumToXl:(int)arg1;
+ (_Bool)validXlCf:(struct XlCf *)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBConditionalFormatTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBContentFormat : NSObject
{
}

+ (id)edContentFormatFromXlDXfUserFmt:(struct XlDXfUserFmt *)arg1 edResources:(id)arg2;
+ (id)edContentFormatFromXlFormat:(struct XlFormat *)arg1 edResources:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBContentFormatTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBDifferentialStyle : NSObject
{
}

+ (id)edDifferentialStyleFromXlDXf:(struct XlDXf *)arg1 edResources:(id)arg2;
+ (unsigned char)xlDXfBordersFlagsFromEDDifferentialStyle:(id)arg1;
+ (unsigned char)xlDXfPatternFlagsFromEDDifferentialStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBEscher : NSObject
{
}

+ (id)readRootObjectWithType:(int)arg1 state:(id)arg2;
+ (void)readChildrenOfObject:(struct EshObject *)arg1 toArray:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ESDObject : NSObject
{
    struct EshObject *mEshObject;
    ESDContainer *mParent;
    _Bool mIsChart;
}

- (void)setChart:(_Bool)arg1;
- (_Bool)isChart;
- (void)writeToWriter:(struct OcWriter *)arg1;
- (id)parent;
- (struct EshObject *)eshObject;
- (void)dealloc;
- (id)initFromReader:(struct OcReader *)arg1 type:(unsigned short)arg2 version:(unsigned short)arg3;
- (id)initWithType:(unsigned short)arg1;
- (id)initWithEshObject:(struct EshObject *)arg1;
- (int)shapeID;
- (struct EshGroup *)eshGroup;
- (struct EshShape *)eshShape;
- (id)ebInitWithType:(unsigned short)arg1 version:(unsigned short)arg2 state:(id)arg3;
- (id)pbInitWithType:(unsigned short)arg1 version:(unsigned short)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EBEscherShape : ESDObject
{
    NSData *mChartData;
    NSMutableArray *mChartColorLocators;
    _Bool mShowLegend;
    CHDChart *mChart;
}

- (void)setChart:(id)arg1;
- (id)chart;
- (void)setShowLegend:(_Bool)arg1;
- (_Bool)showLegend;
- (void)setChartColorLocators:(id)arg1;
- (id)chartColorLocators;
- (void)setChartData:(id)arg1;
- (id)chartData;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EBFill : NSObject
{
}

+ (id)edFillFromXlDXf:(struct XlDXf *)arg1 edResources:(id)arg2;
+ (id)edFillFromXlXf:(struct XlXf *)arg1 edResources:(id)arg2;
+ (int)convertEDPatternFillEnumToXl:(int)arg1;
+ (int)convertXlFillPatternEnumToED:(int)arg1;
+ (_Bool)extractFromEDFill:(id)arg1 foreColorReference:(id *)arg2 backColorReference:(id *)arg3 fillPatternEnum:(int *)arg4;

@end

__attribute__((visibility("hidden")))
@interface EBFont : NSObject
{
}

+ (id)edFontFromXlDXfFont:(struct XlDXfFont *)arg1 edResources:(id)arg2;
+ (id)edFontFromXlFont:(struct XlFont *)arg1 edResources:(id)arg2;
+ (int)convertEDUnderlineEnumToXl:(int)arg1;
+ (int)convertEDScriptEnumToXl:(int)arg1;
+ (int)convertXlUnderlineEnumToED:(int)arg1;
+ (int)convertXlScriptEnumToED:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBFontTable : NSObject
{
}

+ (unsigned int)xlFontIndexFromEDFontIndex:(unsigned long long)arg1;
+ (unsigned long long)edFontIndexFromXlFontIndex:(unsigned int)arg1;
+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBFormula : NSObject
{
}

+ (struct XlFormulaInfo *)xlFormulaInfoFromEDFormula:(id)arg1 state:(id)arg2;
+ (id)edFormulaFromXlFmlaDefinition:(const void *)arg1 withTokenLength:(int)arg2 formulaLength:(int)arg3 formulaClass:(Class)arg4 edSheet:(id)arg5 state:(id)arg6;
+ (id)edFormulaFromXlFmlaDefinition:(const void *)arg1 withFormulaLength:(int)arg2 formulaClass:(Class)arg3 state:(id)arg4;
+ (id)edFormulaFromXlFmlaDefinition:(const void *)arg1 withFormulaLength:(int)arg2 state:(id)arg3;
+ (void)readFormulaFromXlCell:(struct XlCell *)arg1 edCell:(struct EDCellHeader *)arg2 edRowBlocks:(id)arg3 state:(id)arg4;
+ (void)setupFormulaDataForSharedFormula:(id)arg1 xlFormulaInfo:(struct XlFormulaInfo *)arg2 state:(id)arg3;
+ (struct XlFormulaInfo *)xlFormulaInfoFromEDSharedFormula:(id)arg1 state:(id)arg2;
+ (void)setupTokensInEDFormulaFromXlFormulaProcessor:(struct XlFormulaProcessor *)arg1 length:(int)arg2 edFormula:(id)arg3 edSheet:(id)arg4;
+ (unsigned int)writeToken:(id)arg1 tokenIndex:(unsigned int)arg2 tokenStream:(struct XLFormulaStream *)arg3 extendedStream:(struct XLFormulaStream *)arg4 state:(id)arg5;
+ (char *)edFormulaToParsedExpression:(id)arg1 tokenLength:(unsigned short *)arg2 formulaLength:(unsigned short *)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface EBGraphic : NSObject
{
}

+ (id)readMainChartWithState:(id)arg1;
+ (void)readGraphicsInChart:(id)arg1 state:(id)arg2;
+ (void)readGraphicsWithState:(id)arg1;
+ (int)objectTypeForShape:(id)arg1;
+ (void)readNotesWithDictionary:(id)arg1 state:(id)arg2;
+ (void)readImage:(id)arg1 xlGraphicsInfo:(struct XlGraphicsInfo *)arg2 state:(id)arg3;
+ (void)readChart:(id)arg1 chartIndex:(short)arg2 state:(id)arg3;
+ (void)readOle:(id)arg1 xlGraphicsInfo:(struct XlGraphicsInfo *)arg2 state:(id)arg3;
+ (id)readGraphicWithDictionary:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBHyperlink : NSObject
{
}

+ (void)addToolTip:(struct XlHLinkToolTip *)arg1 toEdHyperLink:(id)arg2 edResources:(id)arg3;
+ (id)edHyperlinkFromXlHLink:(struct XlHLink *)arg1 edResources:(id)arg2;
+ (int)xlTypeFromEDHyperlinkType:(int)arg1;
+ (int)edTypeFromXlHyperlinkType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBHyperlinkTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBLinkTable : NSObject
{
}

+ (struct XlLinkTable *)createXlLinkTableFromLinksCollection:(id)arg1 workbook:(id)arg2 state:(id)arg3;
+ (void)readFromState:(id)arg1;
+ (int)mapEDLinkTypeToXl:(int)arg1;
+ (int)mapXlLinkTypeToED:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBMergeTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBNameTable : NSObject
{
}

+ (struct XlNameTable *)createXlNameTableFromNamesCollection:(id)arg1 state:(id)arg2;
+ (void)readFromState:(id)arg1;
+ (struct XlName *)xlNameFromEDName:(id)arg1 state:(id)arg2;
+ (id)edNameFromXlName:(struct XlName *)arg1 name:(struct OcText)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EBOfficeArtReaderClient : NSObject <OABReaderClient>
{
}

+ (_Bool)tablesAreAllowed;
+ (_Bool)escherIsFullySupported;
+ (void)readClientDataFromTableCell:(id)arg1 toTableCell:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromGroup:(id)arg1 toGroup:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromShape:(id)arg1 toGraphic:(id)arg2 state:(id)arg3;
+ (void)readEshClientAnchor:(const struct XlEshClientAnchor *)arg1 targetClientData:(id)arg2 state:(id)arg3;
+ (void)setAutoInsetForShape:(struct EshShape *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABReaderState : NSObject
{
    Class mClient;
    NSMutableDictionary *mShapeIdMap;
    NSMutableDictionary *mEshContentIdMap;
    id <OADColorPalette> mColorPalette;
    NSMutableDictionary *mBlipIdMap;
    int mGroupDepth;
}

@property(nonatomic) int groupDepth; // @synthesize groupDepth=mGroupDepth;
- (void)setDrawable:(id)arg1 forBlipId:(int)arg2;
- (id)drawableForBlipId:(int)arg1;
- (void)setColorPalette:(id)arg1;
- (id)colorPalette;
- (void)setEshContent:(struct EshContent *)arg1 forId:(int)arg2;
- (struct EshContent *)eshContentForId:(int)arg1;
- (void)setDrawable:(id)arg1 forShapeId:(unsigned int)arg2;
- (id)drawableForShapeId:(int)arg1;
- (Class)client;
- (void)dealloc;
- (id)initWithClient:(Class)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EBOfficeArtReaderState : OABReaderState
{
    EBReaderState *mReaderState;
}

- (id)readerState;
- (id)initWithReaderState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABWriterClient : NSObject
{
}

- (void)writeClientDataFromTableCell:(id)arg1 toObject:(id)arg2 state:(id)arg3;
- (void)writeClientTextFromShape:(id)arg1 toObject:(id)arg2 state:(id)arg3;
- (void)writeClientDataFromDrawable:(id)arg1 toObject:(id)arg2 state:(id)arg3;
- (void)writeClientAnchorFromDrawable:(id)arg1 toObject:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EBOfficeArtWriterClient : OABWriterClient
{
}

- (void)writeClientTextFromShape:(id)arg1 toObject:(id)arg2 state:(id)arg3;
- (void)writeClientDataFromDrawable:(id)arg1 toObject:(id)arg2 state:(id)arg3;
- (void)writeClientAnchorFromDrawable:(id)arg1 toObject:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EBPageProperties : NSObject
{
}

+ (void)readWithState:(id)arg1;
+ (int)convertEDPageOrientationEnumToXl:(int)arg1;
+ (int)convertXlPageOrientationEnumToED:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBPane : NSObject
{
}

+ (void)writePaneForSheet:(id)arg1 toXlSheetPresentation:(struct XlSheetPresentation *)arg2 xlWindow2:(struct XlWindow2 *)arg3;
+ (void)readXlPaneFrom:(struct XlSheetPresentation *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBProtection : NSObject
{
}

+ (struct XlDXfProtect *)xlDXfProtectFromEDProtection:(id)arg1;
+ (void)writeProtection:(id)arg1 toXlGraphicsInfo:(struct XlGraphicsInfo *)arg2;
+ (void)writeProtection:(id)arg1 toXlXf:(struct XlXf *)arg2;
+ (id)edProtectionFromXlGraphicsInfo:(struct XlGraphicsInfo *)arg1;
+ (id)edProtectionFromXlDXfProtect:(struct XlDXfProtect *)arg1;
+ (id)edProtectionFromXlXf:(struct XlXf *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCDReader : NSObject
{
    id <TCCancelDelegate> mCancelDelegate;
    id <OCDReaderDelegate> mDelegate;
    _Bool mIsThumbnail;
    TCImportTracing *mTracing;
    NSString *mFileName;
    NSData *mData;
    NSError *mStartError;
}

@property(retain, nonatomic) TCImportTracing *tracing; // @synthesize tracing=mTracing;
@property(nonatomic) _Bool isThumbnail; // @synthesize isThumbnail=mIsThumbnail;
@property(nonatomic) id <OCDReaderDelegate> delegate; // @synthesize delegate=mDelegate;
@property(retain, nonatomic) id <TCCancelDelegate> cancelDelegate; // @synthesize cancelDelegate=mCancelDelegate;
@property(retain, nonatomic) NSError *startError; // @synthesize startError=mStartError;
@property(retain, nonatomic) NSData *data; // @synthesize data=mData;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=mFileName;
- (void)setStartErrorMessageFromException:(id)arg1;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;
- (_Bool)verifyFileFormat;
- (id)read;
- (_Bool)start;
- (_Bool)isBinaryReader;

@end

__attribute__((visibility("hidden")))
@interface OCDEncryptedReader : OCDReader
{
    OCCDecryptor *mDecryptor;
}

@property(readonly, nonatomic) OCCDecryptor *decryptor; // @synthesize decryptor=mDecryptor;
- (_Bool)retainDecryptorWithErrorCode:(int *)arg1;
- (void)useUnencryptedDocument;
- (void)dealloc;
- (id)defaultPassphrase;
- (void)restartReaderToUseDecryptedDocument;

@end

__attribute__((visibility("hidden")))
@interface OCBReader : OCDEncryptedReader
{
    struct OcBinaryReader *mBinaryReader;
    struct __sFILE *mFile;
}

@property(nonatomic) struct __sFILE *file; // @synthesize file=mFile;
@property(nonatomic) struct OcBinaryReader *binaryReader; // @synthesize binaryReader=mBinaryReader;
- (id)read;
- (_Bool)start;
- (void)restartReaderToUseDecryptedDocument;
- (_Bool)retainDecryptorWithErrorCode:(int *)arg1;
- (id)allocDecryptorWithCryptoKey:(struct OCCCryptoKey *)arg1 baseOutputFilename:(id)arg2;
- (struct OCCBinaryStreamer *)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey *)arg1 baseOutputFilenameInUTF8:(const char *)arg2;
- (_Bool)isBinaryReader;
@property(readonly, nonatomic) struct OCCEncryptionInfoReader *encryptionInfoReader;
- (void)closeFile;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBReader : OCBReader
{
    NSString *mTemporaryDirectory;
    struct XlObjectFactory *mXlObjectFactory;
    _Bool mUseStringOptimization;
    _Bool mIsFileStructuredStorage;
    const void *mBuffer;
}

@property(nonatomic) _Bool isFileStructuredStorage; // @synthesize isFileStructuredStorage=mIsFileStructuredStorage;
@property(nonatomic) _Bool useStringOptimization; // @synthesize useStringOptimization=mUseStringOptimization;
@property(retain, nonatomic) NSString *temporaryDirectory; // @synthesize temporaryDirectory=mTemporaryDirectory;
@property(readonly, nonatomic) struct XlBinaryReader *xlReader;
- (struct OCCBinaryStreamer *)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey *)arg1 baseOutputFilenameInUTF8:(const char *)arg2;
- (struct OCCEncryptionInfoReader *)encryptionInfoReader;
- (id)read;
- (_Bool)start;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBReaderSheetState : NSObject
{
    EBReaderState *mReaderState;
    EDSheet *mEDSheet;
    struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> mSharedFormulas;
    unsigned long long mChartIndex;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)reportWorksheetWarning:(struct TCTaggedMessageStructure *)arg1;
- (unsigned long long)nextChartIndex;
- (void)setSharedFormulaIndex:(unsigned long long)arg1 forRowCol:(int)arg2;
- (unsigned long long)sharedFormulaIndexForRowCol:(int)arg1;
- (void)setEDSheet:(id)arg1;
- (id)edSheet;
- (id)resources;
- (id)workbook;
- (struct XlBinaryReader *)xlReader;
- (id)readerState;
- (void)dealloc;
- (id)initWithReaderState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBState : NSObject
{
    struct XlLinkTable *mXlLinkTable;
    struct XlNameTable *mXlNameTable;
    ChVector_be6372b9 *mSheetNames;
    struct XlFormulaProcessor *mXlFormulaProcessor;
    EDWorkbook *mWorkbook;
    EDResources *mResources;
    id <TCCancelDelegate> mCancelDelegate;
    TCTracing *mTracing;
}

@property(readonly, nonatomic) id <TCCancelDelegate> cancelDelegate; // @synthesize cancelDelegate=mCancelDelegate;
- (id)tracing;
- (_Bool)isCancelled;
- (void)setResources:(id)arg1;
- (id)resources;
- (void)setWorkbook:(id)arg1;
- (id)workbook;
- (struct XlFormulaProcessor *)xlFormulaProcessor;
- (ChVector_be6372b9 *)sheetNames;
- (struct XlNameTable *)xlNameTable;
- (struct XlLinkTable *)xlLinkTable;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBReaderState : EBState
{
    struct XlBinaryReader *mXlReader;
    struct XlSheetInfoTable *mXlSheetInfoTable;
    ECColumnWidthConvertor *mColumnWidthConvertor;
    struct XlEshObjectFactory *mXlEshObjectFactory;
    OABReaderState *mOAState;
    _Bool mImportCSV;
}

@property(nonatomic) _Bool importCSV; // @synthesize importCSV=mImportCSV;
- (void)reportWarning:(struct TCTaggedMessageStructure *)arg1;
- (id)oaState;
- (id)columnWidthConvertor;
- (struct XlSheetInfoTable *)xlSheetInfoTable;
- (void)readGlobalXlObjects;
- (struct XlBinaryReader *)xlReader;
- (void)resumeReading;
- (void)pauseReading;
- (void)dealloc;
- (id)initWithXlReader:(struct XlBinaryReader *)arg1 cancelDelegate:(id)arg2 tracing:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EBReference : NSObject
{
}

+ (struct XlRef *)xlRefFromEDReference:(id)arg1;
+ (id)edReferenceFromXlRef:(const struct XlRef *)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBRow : NSObject
{
}

+ (void)readCellRow:(struct XlCellRow *)arg1 edRowBlock:(id)arg2 edRowBlocks:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface EBRowBlocks : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBSheet : NSObject
{
}

+ (void)readDelayedSheetWithIndex:(unsigned int)arg1 state:(id)arg2;
+ (void)readSheetWithIndex:(unsigned int)arg1 state:(id)arg2;
+ (Class)ebSheetClassFromEDSheet:(id)arg1;
+ (Class)edSheetClassFromXlSheetTypeEnum:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBSheetContext : NSObject <OCDDelayedNodeContext>
{
    EBReaderSheetState *mSheetState;
    unsigned int mSheetIndex;
}

- (_Bool)loadDelayedNode:(id)arg1;
- (void)dealloc;
- (id)initWithSheetIndex:(unsigned int)arg1 state:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EBString : NSObject
{
}

+ (struct XlString *)xlStringWithIndex:(unsigned int)arg1;
+ (struct XlString *)xlStringFromEDString:(id)arg1 state:(id)arg2;
+ (id)edStringFromXlString:(const struct XlString *)arg1 edResources:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBStringTable : NSObject
{
}

+ (void)readWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EBTextBox : NSObject
{
}

+ (id)edTextBoxFromXlGraphicsInfo:(struct XlGraphicsInfo *)arg1 edResources:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBUnsupportedSheet : NSObject
{
}

+ (void)writeChildrenOfSheet:(id)arg1 state:(id)arg2;
+ (void)writeSheet:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBWorkbook : NSObject
{
}

+ (ChVector_be6372b9 *)createSheetNamesFromWorkbook:(id)arg1;
+ (id)readWithState:(id)arg1 reader:(id)arg2;
+ (int)xlSheetTypeEnumFromEDSheet:(id)arg1;
+ (void)setupProcessors:(id)arg1;
+ (void)readDocumentPresentation:(id)arg1 state:(id)arg2;
+ (void)readDocumentProperties:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EBWorksheet : NSObject
{
}

+ (void)readChildrenWithState:(id)arg1;
+ (void)readWithState:(id)arg1;
+ (void)setupProcessors:(id)arg1;
+ (void)readSheetPresentationInfoWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ECColumnWidthConvertor : NSObject
{
    int mMultiplier;
}

- (double)xlBaseColumnWidthFromXlColumnWidth:(double)arg1;
- (double)xlColumnWidthFromXlBaseColumnWidth:(double)arg1;
- (double)xlColumnWidthFromLasso:(double)arg1;
- (double)lassoColumnWidthFromXl:(double)arg1;
- (void)setupWithEDFont:(id)arg1 state:(id)arg2;
- (struct CGSize)stringSizeWithFont:(id)arg1 edFont:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ECCurrencyConverter : NSObject
{
    NSMutableDictionary *mXlToLassoCurrencyCode;
    NSMutableDictionary *mLassoToXlCurrencyCode;
    NSMutableDictionary *mXlAccountingFormat;
    NSMutableDictionary *mXlToLassoCurrencyCodeBySymbol;
}

+ (id)currencyConverter;
- (int)xlAccountFormatFromLasso:(id)arg1;
- (id)xlCurrencyCodeFromLasso:(id)arg1;
- (id)lassoCurrencyCodeFromXl:(id)arg1;
- (void)dealloc;
- (id)lassoCurrencyCodeForDollar;
- (void)populateDictionaries;

@end

__attribute__((visibility("hidden")))
@interface ECCurrencyEntry : NSObject
{
    NSString *mLassoCurrencyCode;
    NSString *mXlLangId;
    NSString *mXlCurrencySymbol;
    _Bool mAppliesToExport;
    int mXlAccountingFormat;
}

+ (id)currencyWithLassoCode:(id)arg1 langId:(int)arg2 xlSymbol:(id)arg3 isExport:(_Bool)arg4 accountingFormat:(int)arg5;
+ (id)currencyWithLassoCode:(id)arg1 langId:(int)arg2 xlSymbol:(id)arg3 isExport:(_Bool)arg4;
+ (id)currencyWithLassoCode:(id)arg1 langId:(int)arg2 xlSymbol:(id)arg3 accountingFormat:(int)arg4;
+ (id)currencyWithLassoCode:(id)arg1 langId:(int)arg2 xlSymbol:(id)arg3;
- (void)dealloc;
- (id)initWithLassoCode:(id)arg1 langId:(int)arg2 xlSymbol:(id)arg3 isExport:(_Bool)arg4 accountingFormat:(int)arg5;

@end

__attribute__((visibility("hidden")))
@interface ECFormulaProcessor : NSObject
{
    struct XlFormulaProcessor *mXlFormulaProcessorLasso;
    struct XlFormulaProcessor *mXlFormulaProcessorXl;
    struct XlNameTable *mXlNameTable;
    ChVector_be6372b9 *mLassoSheetNames;
    ChVector_be6372b9 *mXlSheetNames;
    struct XlLinkTable *mXlLinkTable;
}

+ (id)formulaStringForEDFormula:(id)arg1 edWorksheet:(id)arg2 xlFormulaProcessor:(struct XlFormulaProcessor *)arg3;
- (struct XlFormulaProcessor *)xlFormulaProcessorXl;
- (struct XlFormulaProcessor *)xlFormulaProcessorLasso;
- (void)setupWithWorkbook:(id)arg1;
- (void)dealloc;
- (id)init;
- (ChVector_be6372b9 *)sheetNamesFromWorkbook:(id)arg1;
- (struct XlFormulaProcessor *)setupWithWorkbook:(id)arg1 xlNameTable:(struct XlNameTable *)arg2 sheetNames:(ChVector_be6372b9 *)arg3 xlLinkTable:(struct XlLinkTable *)arg4 lassoSyntax:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface OITSUIntToIntDictionary : NSObject <NSCopying, NSMutableCopying>
{
    struct __CFDictionary *mDictionary;
}

- (struct __CFDictionary *)p_cfDictionary;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)allValues;
- (id)allKeys;
- (id)arrayOfBoxedKeys;
- (void)applyFromIntToIntDictionary:(id)arg1;
- (_Bool)containsKey:(long long)arg1;
- (id)keyEnumerator;
- (void)removeAllInts;
- (void)setInt:(long long)arg1 forKey:(long long)arg2;
- (void)removeIntForKey:(long long)arg1;
- (long long)intForKey:(long long)arg1;
- (_Bool)intIsPresentForKey:(long long)arg1 outValue:(long long *)arg2;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ECIntToIntNilDictionary : OITSUIntToIntDictionary
{
    _Bool mNilValueSet;
    long long mNilValue;
}

- (void)setInt:(long long)arg1 forKey:(long long)arg2;
- (_Bool)intIsPresentForKey:(long long)arg1 outValue:(long long *)arg2;

@end

__attribute__((visibility("hidden")))
@interface ECIntToTwoIntKeyCache : NSObject
{
    ECIntTwoIntKeyDictionary *mCache;
}

- (void)setObject:(unsigned long long)arg1 forKey1:(unsigned long long)arg2 key2:(unsigned long long)arg3;
- (_Bool)integerIsPresentForKey1:(unsigned long long)arg1 key2:(unsigned long long)arg2 outValue:(unsigned long long *)arg3;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUNoCopyDictionary : NSMutableDictionary
{
    struct __CFDictionary *mDictionary;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyEnumerator;
- (id)allKeys;
- (id)objectEnumerator;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (unsigned long long)count;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithCFDictionary:(struct __CFDictionary *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ECIntTwoIntKeyDictionary : OITSUNoCopyDictionary
{
    id mNilKeyObject;
}

- (void)setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface ECMappingContext : NSObject
{
    struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> mIndexToMappedIndex;
    NSMutableDictionary *mSheetNameToMappedIndex;
    struct __CFDictionary *mObjectToMappingInfo;
    NSMutableArray *mMappingInfos;
}

+ (id)mappingContext;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)mappingInfoAtIndex:(unsigned long long)arg1;
- (unsigned long long)mappingInfoCount;
- (id)mappingInfoForObject:(id)arg1;
- (unsigned long long)mappedSheetIndexForSheetName:(id)arg1;
- (unsigned long long)mappedSheetIndexForSheetIndex:(unsigned long long)arg1;
- (ChVector_be6372b9 *)mappedSheetNames;
- (void)dealloc;
- (id)init;
- (void)associateMappingInfo:(id)arg1 withSheetName:(id)arg2 andSheetIndex:(unsigned long long)arg3 andObject:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface ECMappingInfo : NSObject
{
    NSString *mSheetName;
}

+ (id)mappingInfoWithSheetName:(id)arg1;
@property(readonly, nonatomic) NSString *sheetName; // @synthesize sheetName=mSheetName;
@property(readonly, nonatomic) int columnOffset;
@property(readonly, nonatomic) int rowOffset;
- (void)dealloc;
- (id)initWithSheetName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ECMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface ECPackedDataUtils : NSObject
{
}

+ (id)dumpDataToHexadecimalString:(char *)arg1 start:(unsigned int)arg2 stop:(unsigned int)arg3 nicelyFormatted:(_Bool)arg4;
+ (void)writeString:(id)arg1 toPackedData:(struct __CFData *)arg2 packedDataSize:(unsigned int)arg3 atIndex:(unsigned int)arg4 withPreviousLength:(unsigned short)arg5 outLength:(unsigned short *)arg6;
+ (id)readStringFromData:(char *)arg1 atOffset:(unsigned int)arg2 withLength:(unsigned int)arg3;
+ (char *)prepareForDataOfLength:(unsigned int)arg1 atIndex:(unsigned int)arg2 withPreviousLength:(unsigned int)arg3 inPackedData:(struct __CFData *)arg4 packedDataSize:(unsigned int)arg5;
+ (_Bool)setData:(char *)arg1 ofLength:(unsigned int)arg2 atIndex:(unsigned int)arg3 withPreviousLength:(unsigned int)arg4 inPackedData:(struct __CFData *)arg5 packedDataSize:(unsigned int)arg6;

@end

__attribute__((visibility("hidden")))
@interface OITSUPointerKeyDictionary : OITSUNoCopyDictionary
{
}

- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface ECPointerNilKeyDictionary : OITSUPointerKeyDictionary
{
    id mNilKeyObject;
}

- (void)setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ECStrings : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface ECTwoIntegerKeyCache : NSObject
{
    OITSUIntegerKeyDictionary *mCache;
    _Bool _assertForCollisions;
}

@property(nonatomic) _Bool assertForCollisions; // @synthesize assertForCollisions=_assertForCollisions;
- (void)setObject:(id)arg1 forKey1:(long long)arg2 key2:(long long)arg3;
- (id)objectForKey1:(long long)arg1 key2:(long long)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ECTwoObjectKeyCache : NSObject
{
    NSMutableDictionary *mCache;
}

- (void)setObject:(id)arg1 forKey1:(id)arg2 key2:(id)arg3;
- (id)objectForKey1:(id)arg1 key2:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ECTwoPointerKeyCache : NSObject
{
    OITSUPointerKeyDictionary *mCache;
}

- (void)setObject:(id)arg1 forKey1:(id)arg2 key2:(id)arg3;
- (id)objectForKey1:(id)arg1 key2:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ECUtils : NSObject
{
}

+ (double)dateTimeNumberFromNSDate:(id)arg1 edWorkbook:(id)arg2;
+ (id)dateFromXlDateTimeNumber:(double)arg1 edWorkbook:(id)arg2;
+ (_Bool)validDateInExcel:(id)arg1 edWorkbook:(id)arg2;
+ (_Bool)isValidDateTime:(double)arg1 edWorkbook:(id)arg2;
+ (id)lassoDefaultTableName;
+ (id)lassoStyleTableReferenceFromTableId:(id)arg1;
+ (id)renameFunction:(id)arg1;
+ (_Bool)isRenameFunction:(id)arg1;
+ (unsigned int)dateTimeOffsetForBuggy1900Dates:(double)arg1 edWorkbook:(id)arg2;
+ (double)timeIntervalFromXlDateTimeNumber:(double)arg1 edWorkbook:(id)arg2;
+ (id)renameMap;

@end

__attribute__((visibility("hidden")))
@interface ECXmlDump : NSObject
{
}

+ (struct _xmlNode *)xmlNodeWithName:(id)arg1 forObject:(id)arg2;
+ (struct _xmlNode *)xmlNodeForObject:(id)arg1;
- (void)addXmlProperties:(struct _xmlNode *)arg1;
- (_Bool)isXmlNodeNeeded;

@end

__attribute__((visibility("hidden")))
@interface EDAnchor : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface EDAbsoluteAnchor : EDAnchor
{
    struct CGPoint mPosition;
    struct CGSize mSize;
}

- (id).cxx_construct;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)bounds;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)position;

@end

__attribute__((visibility("hidden")))
@interface EDAlignmentInfo : NSObject <NSCopying, EDImmutableObject>
{
    int mHorizontalAlignment;
    int mVerticalAlignment;
    int mIndent;
    int mTextRotation;
    _Bool mTextWrapped;
    _Bool mHorizontalAlignOverridden;
    _Bool mVerticalAlignOverridden;
    _Bool mIndentOverridden;
    _Bool mTextWrappedOveridden;
    _Bool mDoNotModify;
}

+ (id)alignmentInfo;
- (void)setDoNotModify:(_Bool)arg1;
- (void)setTextRotation:(int)arg1;
- (int)textRotation;
- (void)setTextWrapped:(_Bool)arg1;
- (_Bool)isTextWrapped;
- (_Bool)isTextWrappedOverridden;
- (void)setIndent:(int)arg1;
- (int)indent;
- (_Bool)isIndentOverridden;
- (void)setVerticalAlignment:(int)arg1;
- (int)verticalAlignment;
- (_Bool)isVerticalAlignOverridden;
- (void)setHorizontalAlignment:(int)arg1;
- (int)horizontalAlignment;
- (_Bool)isHorizontalAlignOverridden;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToAlignmentInfo:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDSharedFormula : EDFormula
{
    _Bool _forceNonBaseFormula;
    int _rowBaseOrOffset;
    int _columnBaseOrOffset;
    unsigned long long _baseFormulaIndex;
    EDReference *_baseFormulaRange;
}

@property(readonly, nonatomic) EDReference *baseFormulaRange; // @synthesize baseFormulaRange=_baseFormulaRange;
@property(nonatomic) int columnBaseOrOffset; // @synthesize columnBaseOrOffset=_columnBaseOrOffset;
@property(nonatomic) int rowBaseOrOffset; // @synthesize rowBaseOrOffset=_rowBaseOrOffset;
@property(nonatomic) _Bool forceNonBaseFormula; // @synthesize forceNonBaseFormula=_forceNonBaseFormula;
@property(nonatomic) unsigned long long baseFormulaIndex; // @synthesize baseFormulaIndex=_baseFormulaIndex;
- (_Bool)isSharedFormula;
- (id)warningWithRowBlocks:(id)arg1;
- (_Bool)isBaseFormula;
- (id)baseFormulaWithRowBlocks:(id)arg1;
- (_Bool)convertTokensToShared;
- (void)dealloc;
- (id)init;
- (id)initWithFormula:(id)arg1;
- (void)updateBaseFormulaRangeWithRow:(int)arg1 column:(int)arg2;
- (void)archiveByAppendingToMutableData:(struct __CFData *)arg1;
- (void)unarchiveFromData:(struct __CFData *)arg1 offset:(unsigned long long *)arg2;

@end

__attribute__((visibility("hidden")))
@interface EDArrayedFormula : EDSharedFormula
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDBorder : NSObject
{
    EDResources *mResources;
    int mType;
    EDColorReference *mColorReference;
    int mDiagonalType;
}

+ (id)borderWithType:(int)arg1 color:(id)arg2 diagonalType:(int)arg3 resources:(id)arg4;
+ (id)borderWithType:(int)arg1 color:(id)arg2 resources:(id)arg3;
+ (id)borderWithType:(int)arg1 resources:(id)arg2;
+ (id)borderWithType:(int)arg1 colorReference:(id)arg2 diagonalType:(int)arg3 resources:(id)arg4;
+ (id)borderWithType:(int)arg1 colorReference:(id)arg2 resources:(id)arg3;
- (id)color;
- (void)setDiagonalType:(int)arg1;
- (int)diagonalType;
- (void)setType:(int)arg1;
- (int)type;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToBorder:(id)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (id)colorReference;

@end

__attribute__((visibility("hidden")))
@interface EDBorders : NSObject <NSCopying>
{
    EDResources *mResources;
    unsigned long long mLeftBorderIndex;
    unsigned long long mRightBorderIndex;
    unsigned long long mTopBorderIndex;
    unsigned long long mBottomBorderIndex;
    unsigned long long mDiagonalBorderIndex;
    unsigned long long mVerticalBorderIndex;
    unsigned long long mHorizontalBorderIndex;
}

+ (id)bordersWithLeft:(id)arg1 right:(id)arg2 top:(id)arg3 bottom:(id)arg4 diagonal:(id)arg5 vertical:(id)arg6 horizontal:(id)arg7 resources:(id)arg8;
+ (id)bordersWithLeft:(id)arg1 right:(id)arg2 top:(id)arg3 bottom:(id)arg4 diagonal:(id)arg5 resources:(id)arg6;
+ (id)bordersWithResources:(id)arg1;
- (id)horizontalBorder;
- (id)verticalBorder;
- (id)diagonalBorder;
- (id)bottomBorder;
- (id)topBorder;
- (id)rightBorder;
- (id)leftBorder;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToBorders:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithResources:(id)arg1;
- (void)setHorizontalBorder:(id)arg1;
- (void)setVerticalBorder:(id)arg1;
- (void)setDiagonalBorder:(id)arg1;
- (void)setBottomBorder:(id)arg1;
- (void)setTopBorder:(id)arg1;
- (void)setRightBorder:(id)arg1;
- (void)setLeftBorder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDBuildableFormula : NSObject <EDFormulaBuilding>
{
    struct EDBuildablePtg *mTree;
    int mWarning;
}

- (unsigned int)removeOptionalPtgArgs:(unsigned int)arg1 minArgs:(unsigned int)arg2;
- (_Bool)insertVariableFunction:(unsigned short)arg1 afterIndex:(unsigned int)arg2 numArgs:(unsigned int)arg3;
- (_Bool)replaceArgPtgAtIndex:(unsigned int)arg1 withFormula:(id)arg2;
- (int)argTokenTypeAtIndex:(unsigned int)arg1;
- (_Bool)argTokenIsDurationAtIndex:(unsigned int)arg1;
- (_Bool)copyToken:(unsigned int)arg1 from:(id)arg2;
- (void)copyToFormula:(id)arg1;
- (id)formula;
- (_Bool)isSupportedFormula;
- (int)warningType;
- (void)setWarning:(int)arg1;
- (_Bool)fixTableOfConstantsRefs;
- (_Bool)addInfixOperator:(int)arg1 atIndex:(unsigned int)arg2 factor:(double)arg3;
- (_Bool)wrapArgumentsWithOperator:(int)arg1 argumentCount:(unsigned int)arg2 atIndex:(unsigned int)arg3;
- (_Bool)shrinkSpanningRefAtArgIndex:(unsigned int)arg1;
- (_Bool)uppercaseArgAtIndex:(unsigned int)arg1;
- (void)markLastTokenAsSpanningRefVertically:(_Bool)arg1 withMin:(unsigned short)arg2 andMax:(unsigned short)arg3;
- (void)markLastTokenAsDuration;
- (id)lastTokenRefOrArea3dLinkRefIsValid:(_Bool *)arg1 withEDLinks:(id)arg2;
- (_Bool)convertRefs:(unsigned int)arg1 toTypes:(int *)arg2;
- (_Bool)convertRefs:(unsigned int)arg1 toType:(int)arg2;
- (void)convertRefsInList:(struct EDBuildablePtg *)arg1 toType:(int)arg2;
- (_Bool)convertLastRefsToArea;
- (_Bool)convertToIntersect:(unsigned int)arg1;
- (_Bool)convertToList:(unsigned int)arg1 withFinalParen:(_Bool)arg2;
- (_Bool)convertToList:(unsigned int)arg1;
- (_Bool)addArrayWithCol:(int)arg1 andRow:(int)arg2;
- (char *)setExtendedDataForLastTokenAtIndex:(unsigned int)arg1 length:(unsigned int)arg2;
- (_Bool)insertExternalName:(unsigned long long)arg1 withLink:(unsigned long long)arg2 atIndex:(unsigned int)arg3;
- (_Bool)insertName:(unsigned long long)arg1 atIndex:(unsigned int)arg2;
- (_Bool)insertName:(unsigned long long)arg1 link:(unsigned long long)arg2 external:(_Bool)arg3 atIndex:(unsigned int)arg4;
- (_Bool)makeArrayForLastToken:(unsigned long long)arg1;
- (char *)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2;
- (char *)addToken:(int)arg1 extendedDataLength:(unsigned int)arg2 numArgs:(int)arg3;
- (void)removeTokenAtIndex:(unsigned long long)arg1;
- (int)tokenTypeAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (_Bool)shrinkSpanningRef:(struct EDBuildablePtg *)arg1;
- (_Bool)fixTableOfConstantsRef:(struct EDBuildablePtg *)arg1;
- (struct EDBuildablePtg *)tokenAtIndex:(unsigned long long)arg1 previousToken:(struct EDBuildablePtg **)arg2;
- (struct EDBuildablePtg *)tokenAtIndex:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDCellIterator : NSObject
{
    EDRowBlocks *mRowBlocks;
    EDRowBlock *mCurrentRowBlock;
    struct EDRowInfo *mCurrentRowInfo;
    unsigned int mCurrentRowInfoIndex;
    struct EDCellHeader *mCurrentCell;
    unsigned int mCurrentCellIndex;
    unsigned int mDesiredRowNumber;
    unsigned int mDesiredColumnNumber;
}

- (struct EDCellHeader *)scanToRowNumber:(unsigned int)arg1 columnNumber:(unsigned int)arg2;
- (struct EDCellHeader *)adjacentCellRight;
- (struct EDCellHeader *)adjacentCellLeft;
- (void)dealloc;
- (id)initWithWorksheet:(id)arg1;
- (struct EDCellHeader *)adjacentCell:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCDDelayedNode : NSObject
{
    id <OCDDelayedNodeContext> mDelayedContext;
    _Bool mLoaded;
}

- (_Bool)load;
- (void)setLoaded:(_Bool)arg1;
- (_Bool)isLoaded;
- (id)delayedContext;
- (void)setDelayedContext:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDSheet : OCDDelayedNode
{
    EDWorkbook *mWorkbook;
    EDString *mName;
    _Bool mHidden;
    _Bool mDisplayFormulas;
    _Bool mDisplayGridlines;
    _Bool mIsDialogSheet;
    EDColorReference *mDefaultGridlineColorReference;
    EDHeaderFooter *mHeaderFooter;
    EDPageSetup *mPageSetup;
    NSMutableArray *mDrawables;
    OITSUPointerKeyDictionary *mTextBoxMap;
    OITSUPointerKeyDictionary *mCommentMap;
    EDProcessors *mProcessors;
    EDWarnings *mWarnings;
    ESDContainer *mEscherDrawing;
}

+ (id)sheetWithWorkbook:(id)arg1;
@property(nonatomic) _Bool isDialogSheet; // @synthesize isDialogSheet=mIsDialogSheet;
- (id)warnings;
- (void)applyProcessors;
- (id)processors;
- (void)setEDComment:(id)arg1 forShape:(id)arg2;
- (id)edCommentForShape:(id)arg1;
- (unsigned long long)commentCount;
- (void)setEDTextBox:(id)arg1 forShape:(id)arg2;
- (id)edTextBoxForShape:(id)arg1;
- (id)drawables;
- (void)removeDrawableAtIndex:(unsigned long long)arg1;
- (void)addDrawable:(id)arg1;
- (id)drawableAtIndex:(unsigned long long)arg1;
- (unsigned long long)drawableCount;
- (void)setPageSetup:(id)arg1;
- (id)pageSetup;
- (void)setHeaderFooter:(id)arg1;
- (id)headerFooter;
- (void)setDefaultGridlineColor:(id)arg1;
- (id)defaultGridlineColor;
- (void)setDisplayGridlines:(_Bool)arg1;
- (_Bool)isDisplayGridlines;
- (void)setDisplayFormulas:(_Bool)arg1;
- (_Bool)isDisplayFormulas;
- (void)setHidden:(_Bool)arg1;
- (_Bool)isHidden;
- (void)setName:(id)arg1;
- (id)name;
- (id)workbook;
- (void)doneWithNonRowContent;
- (void)dealloc;
- (id)initWithWorkbook:(id)arg1;
- (void)reduceMemoryIfPossible;
- (void)setEscherDrawing:(id)arg1;
- (id)escherDrawing;
- (id)drawableEnumerator;
- (void)setDefaultGridlineColorReference:(id)arg1;
- (id)defaultGridlineColorReference;
- (void)teardown;
- (void)setup;

@end

__attribute__((visibility("hidden")))
@interface EDChartSheet : EDSheet
{
    CHDChart *mMainChart;
    _Bool mIsBoundsSet;
    struct CGRect mBounds;
}

- (id).cxx_construct;
- (void)addDrawable:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)bounds;
- (_Bool)areBoundsSet;
- (void)setMainChart:(id)arg1;
- (id)mainChart;
- (void)teardown;

@end

__attribute__((visibility("hidden")))
@interface EDCollectionWithPointerEquality : EDCollection
{
}

- (_Bool)isEqualToCollection:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDColorLocator : NSObject
{
    unsigned int mColorOffset;
    int mColorIndex;
    OITSUColor *mColor;
}

- (void)setColor:(id)arg1;
- (id)color;
- (void)setColorIndex:(int)arg1;
- (int)colorIndex;
- (void)setOffset:(unsigned int)arg1;
- (unsigned int)offset;
- (void)dealloc;
- (id)initWith:(id)arg1 index:(int)arg2 offset:(unsigned int)arg3;

@end

__attribute__((visibility("hidden")))
@interface EDColorReference : NSObject <NSCopying>
{
    EDResources *mResources;
    int mSystemColorID;
    unsigned long long mColorIndex;
    unsigned long long mThemeIndex;
    double mTint;
}

+ (id)colorReferenceWithColor:(id)arg1 resources:(id)arg2;
+ (id)colorReferenceWithResources:(id)arg1;
+ (id)colorReferenceWithThemeIndex:(unsigned long long)arg1 tint:(double)arg2 resources:(id)arg3;
+ (id)colorReferenceWithColorIndex:(unsigned long long)arg1 resources:(id)arg2;
+ (id)colorReferenceWithSystemColorID:(int)arg1 resources:(id)arg2;
- (_Bool)isValid;
- (id)color;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToColorReference:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithColor:(id)arg1 resources:(id)arg2;
- (id)initWithResources:(id)arg1;
- (double)tint;
- (unsigned long long)themeIndex;
- (unsigned long long)colorIndex;
- (int)systemColorID;

@end

__attribute__((visibility("hidden")))
@interface EDColorsCollection : EDCollection <OADColorPalette>
{
    unsigned long long mDefaultColorsCount;
}

+ (int)oadSchemeColorIdFromThemeIndex:(int)arg1;
+ (unsigned int)xlColorIndexFromTCSystemColorIDEnum:(int)arg1;
+ (int)systemColorIdFromIndex:(unsigned long long)arg1;
+ (_Bool)isSystemColorId:(unsigned long long)arg1;
- (void)addPalette:(const unsigned int *)arg1 paletteSize:(unsigned int)arg2 paletteX:(const unsigned int *)arg3 paletteXSize:(unsigned int)arg4;
- (const unsigned int *)defaultPalette;
- (void)addColors:(const unsigned int *)arg1 count:(unsigned int)arg2 defaultColors:(const unsigned int *)arg3 defaultCount:(unsigned int)arg4;
- (void)addDefaultPalette;
- (unsigned long long)addOrEquivalentColorExcludingDefaults:(id)arg1;
- (id)colorWithIndex:(unsigned long long)arg1;
- (unsigned long long)defaultColorsCount;
- (id)initWithDefaultSetup:(_Bool)arg1;
- (void)setupDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDColumnInfo : NSObject <NSCopying, EDKeyedObject>
{
    EDResources *mResources;
    EDWorksheet *mWorksheet;
    int mWidth;
    _Bool mHidden;
    EDReference *mRange;
    unsigned long long mStyleIndex;
    unsigned char mOutlineLevel;
}

+ (id)columnInfoWithResources:(id)arg1 worksheet:(id)arg2;
- (void)setOutlineLevel:(unsigned char)arg1;
- (unsigned char)outlineLevel;
- (void)setStyle:(id)arg1;
- (id)style;
- (void)setRangeWithFirstColumn:(int)arg1 lastColumn:(int)arg2;
- (void)setRange:(id)arg1;
- (id)range;
- (void)setHidden:(_Bool)arg1;
- (_Bool)isHidden;
- (void)setWidth:(double)arg1;
- (double)width;
- (long long)key;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithResources:(id)arg1 worksheet:(id)arg2;
- (void)setStyleIndex:(unsigned long long)arg1;
- (unsigned long long)styleIndex;
- (void)setWidthInXlUnits:(int)arg1;
- (int)widthInXlUnits;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDColumnInfoCollection : EDSortedCollection
{
    EDResources *mResources;
    EDWorksheet *mWorksheet;
}

- (id)columnInfoCreateIfNilForColumnNumber:(int)arg1;
- (id)columnInfoForColumnNumber:(int)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1 worksheet:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EDComment : NSObject
{
    _Bool _visible;
    int _rowIndex;
    int _columnIndex;
    EDString *_author;
}

@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
@property(retain, nonatomic) EDString *author; // @synthesize author=_author;
@property(nonatomic) int columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) int rowIndex; // @synthesize rowIndex=_rowIndex;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDConditionalFormatting : NSObject
{
    NSMutableArray *mRules;
    EDReferenceCollection *mRanges;
    _Bool mApplyToDate;
}

+ (id)conditionalFormatting;
- (_Bool)isApplyToDate;
- (void)addRange:(id)arg1;
- (id)rangeAtIndex:(unsigned long long)arg1;
- (unsigned long long)rangeCount;
- (id)rules;
- (void)addRule:(id)arg1;
- (id)ruleAtIndex:(unsigned long long)arg1;
- (unsigned long long)ruleCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDConditionalFormattingRule : NSObject
{
    EDResources *mResources;
    int mType;
    int mOperator;
    NSMutableArray *mFormulas;
    unsigned long long mDifferentialStyleIndex;
    _Bool mStopIfTrue;
    _Bool mAppliesToDateOnly;
    long long mPriority;
    _Bool mAboveAverage;
    _Bool mBottom;
    _Bool mEqualAverage;
    _Bool mPercent;
    unsigned long long mRank;
    long long mStdDev;
    NSString *mText;
    int mTimePeriod;
}

+ (id)conditionalFormattingRuleWithResources:(id)arg1;
- (void)setAppliesToDateOnly:(_Bool)arg1;
- (_Bool)appliesToDateOnly;
- (void)setTimePeriod:(int)arg1;
- (int)timePeriod;
- (void)setText:(id)arg1;
- (id)text;
- (void)setStdDev:(long long)arg1;
- (long long)stdDev;
- (void)setRank:(unsigned long long)arg1;
- (unsigned long long)rank;
- (void)setPercent:(_Bool)arg1;
- (_Bool)percent;
- (void)setEqualAverage:(_Bool)arg1;
- (_Bool)equalAverage;
- (void)setBottom:(_Bool)arg1;
- (_Bool)bottom;
- (void)setAboveAverage:(_Bool)arg1;
- (_Bool)aboveAverage;
- (void)setPriority:(long long)arg1;
- (long long)priority;
- (void)setStopIfTrue:(_Bool)arg1;
- (_Bool)stopIfTrue;
- (void)setDifferentialStyle:(id)arg1;
- (id)differentialStyle;
- (void)addFormula:(id)arg1 worksheet:(id)arg2;
- (id)formulaAtIndex:(unsigned long long)arg1;
- (unsigned long long)formulaCount;
- (void)setOperatorEnum:(int)arg1;
- (int)operatorEnum;
- (void)setType:(int)arg1;
- (int)type;
- (long long)compareToOtherRuleUsingPriority:(id)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setDifferentialStyleIndex:(unsigned long long)arg1;
- (unsigned long long)differentialStyleIndex;

@end

__attribute__((visibility("hidden")))
@interface EDContentFormat : NSObject <EDKeyedObject, NSCopying>
{
    EDString *mFormatString;
    unsigned long long mFormatId;
    _Bool mBuiltIn;
    _Bool mReferenced;
}

+ (id)contentFormatWithFormatString:(id)arg1;
+ (id)contentFormatWithFormatString:(id)arg1 formatId:(unsigned long long)arg2;
+ (id)contentFormatWithNSString:(id)arg1 formatId:(unsigned long long)arg2 builtIn:(_Bool)arg3;
- (_Bool)referenced;
- (_Bool)builtIn;
- (unsigned long long)formatId;
- (id)formatString;
- (long long)key;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToContentFormat:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (void)setReferenced:(_Bool)arg1;
- (void)setFormatId:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDContentFormatsCollection : EDKeyedCollection
{
    unsigned long long mNextContentFormatId;
}

- (unsigned long long)addOrEquivalentObject:(id)arg1;
- (unsigned long long)addObject:(id)arg1;
- (id)init;
- (_Bool)isOverwritingKeyOK;
- (void)addDefaultWithNSString:(id)arg1 formatId:(unsigned long long)arg2;
- (void)setupDefaults;

@end

__attribute__((visibility("hidden")))
@interface EDDifferentialStyle : NSObject <NSCopying>
{
    EDAlignmentInfo *mAlignmentInfo;
    EDBorders *mBorders;
    EDFill *mFill;
    EDFont *mFont;
    EDProtection *mProtection;
    EDContentFormat *mContentFormat;
}

+ (id)differentialStyle;
@property(retain, nonatomic) EDContentFormat *contentFormat; // @synthesize contentFormat=mContentFormat;
@property(retain, nonatomic) EDProtection *protection; // @synthesize protection=mProtection;
@property(retain, nonatomic) EDFont *font; // @synthesize font=mFont;
@property(retain, nonatomic) EDFill *fill; // @synthesize fill=mFill;
@property(retain, nonatomic) EDBorders *borders; // @synthesize borders=mBorders;
@property(retain, nonatomic) EDAlignmentInfo *alignmentInfo; // @synthesize alignmentInfo=mAlignmentInfo;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDFill : NSObject <NSCopying>
{
    EDResources *mResources;
}

+ (id)fillWithResources:(id)arg1;
- (_Bool)isEmpty;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithResources:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDFont : NSObject <NSCopying, EDImmutableObject>
{
    EDResources *mResources;
    NSString *mName;
    EDColorReference *mColorReference;
    int mUnderline;
    int mScript;
    double mHeightInTwips;
    int mCharSet;
    int mFamily;
    unsigned int mWeight;
    _Bool mBold;
    _Bool mItalic;
    _Bool mShadow;
    _Bool mStrike;
    _Bool mOutline;
    _Bool mUnderlineOverridden;
    _Bool mStrikeOverridden;
    _Bool mBoldOverridden;
    _Bool mWeightOverridden;
    _Bool mItalicOverridden;
    _Bool mHeightOverridden;
    _Bool mDoNotModify;
}

+ (id)fontWithResources:(id)arg1;
- (void)setDoNotModify:(_Bool)arg1;
- (void)setWeight:(unsigned int)arg1;
- (_Bool)isWeightOverridden;
- (unsigned int)weight;
- (void)setFamily:(int)arg1;
- (int)family;
- (void)setCharSet:(int)arg1;
- (int)charSet;
- (void)setHeight:(double)arg1;
- (_Bool)isHeightOverridden;
- (double)height;
- (void)setStrike:(_Bool)arg1;
- (_Bool)isStrikeOverridden;
- (_Bool)isStrike;
- (void)setOutline:(_Bool)arg1;
- (_Bool)isOutline;
- (void)setShadow:(_Bool)arg1;
- (_Bool)isShadow;
- (void)setItalic:(_Bool)arg1;
- (_Bool)isItalicOverridden;
- (_Bool)isItalic;
- (void)setBold:(_Bool)arg1;
- (_Bool)isBoldOverridden;
- (_Bool)isBold;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setName:(id)arg1;
- (id)name;
- (void)setUnderline:(int)arg1;
- (_Bool)isUnderlineOverridden;
- (int)underline;
- (void)setScript:(int)arg1;
- (int)script;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToFont:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setColorReference:(id)arg1;
- (id)colorReference;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDFontsCollection : EDCollection
{
}

- (unsigned long long)indexOfObjectWithFontName:(id)arg1 color:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EDFormulaHelper : NSObject <EFHelper>
{
    EDWorkbook *mWorkbook;
    EDWorksheet *mWorksheet;
    int mRowNumber;
    int mColumnNumber;
    ECMappingContext *mMappingContext;
}

- (int)columnNumber;
- (int)rowNumber;
- (id)workbook;
- (int)resolveFunctionName:(id)arg1;
- (_Bool)isCurrentSheet:(id)arg1;
- (unsigned long long)resolveTableColumn:(id)arg1 columnName:(id)arg2;
- (unsigned long long)resolveTableToSheetId:(id)arg1;
- (id)resolveTable:(id)arg1;
- (unsigned long long)resolveFile:(id)arg1;
- (unsigned long long)resolveFirstSheet:(id)arg1 lastSheet:(id)arg2;
- (unsigned long long)resolveSheet:(id)arg1;
- (unsigned long long)resolveName:(id)arg1;
- (void)dealloc;
- (id)initWithWorkbook:(id)arg1 worksheet:(id)arg2 rowNumber:(int)arg3 columnNumber:(int)arg4;
- (unsigned long long)createIndexWithType:(int)arg1 firstSheetIndex:(unsigned long long)arg2 lastSheetIndex:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDGradientFill : EDFill
{
    int mType;
    NSMutableDictionary *mStops;
    double mDegree;
    struct CGRect mFocusRect;
}

+ (id)gradientWithType:(int)arg1 degree:(double)arg2 focusRect:(struct CGRect)arg3 stops:(id)arg4 resources:(id)arg5;
+ (id)gradientWithType:(int)arg1 degree:(double)arg2 top:(double)arg3 bottom:(double)arg4 right:(double)arg5 left:(double)arg6 stops:(id)arg7 resources:(id)arg8;
- (id).cxx_construct;
- (id)colorForStopAtPosition:(id)arg1;
- (struct CGRect)focusRect;
- (id)stops;
- (double)degree;
- (int)type;
- (_Bool)isEmpty;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToGradientFill:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (id)initWithType:(int)arg1 degree:(double)arg2 focusRect:(struct CGRect)arg3 stops:(id)arg4 resources:(id)arg5;
- (id)initWithType:(int)arg1 degree:(double)arg2 top:(double)arg3 bottom:(double)arg4 right:(double)arg5 left:(double)arg6 stops:(id)arg7 resources:(id)arg8;
- (void)setStopColor:(id)arg1 atPosition:(id)arg2;
- (void)setStops:(id)arg1;
- (void)setFocusRect:(struct CGRect)arg1;
- (void)setDegree:(double)arg1;
- (void)setType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDHeaderFooter : NSObject
{
    NSString *mHeaderString;
    NSString *mFooterString;
}

+ (id)headerFooter;
- (void)setFooterString:(id)arg1;
- (id)footerString;
- (void)setHeaderString:(id)arg1;
- (id)headerString;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDHyperlink : NSObject
{
    EDString *mPath;
    EDString *mDosPath;
    EDString *mDescriptionText;
    EDString *mTextMark;
    EDString *mToolTip;
    EDReference *mReference;
    int mType;
}

+ (id)hyperlink;
- (void)setType:(int)arg1;
- (int)type;
- (void)setReference:(id)arg1;
- (id)reference;
- (void)setToolTip:(id)arg1;
- (id)toolTip;
- (void)setTextMark:(id)arg1;
- (id)textMark;
- (void)setDescriptionText:(id)arg1;
- (id)descriptionText;
- (void)setDosPath:(id)arg1;
- (id)dosPath;
- (void)setPath:(id)arg1;
- (id)path;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDLink : NSObject
{
    int mType;
    EDCollection *mExternalNames;
}

+ (id)linkWithType:(int)arg1;
- (id)externalNames;
- (void)setType:(int)arg1;
- (int)type;
- (void)dealloc;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDLinkReference : NSObject
{
    unsigned long long mLinkIndex;
    unsigned long long mFirstSheetIndex;
    unsigned long long mLastSheetIndex;
}

+ (id)linkReferenceWithLinkIndex:(unsigned long long)arg1 firstSheetIndex:(unsigned long long)arg2 lastSheetIndex:(unsigned long long)arg3;
- (_Bool)isWorkbookLevelReference;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToLinkReference:(id)arg1;
- (void)setLinkIndex:(unsigned long long)arg1;
- (unsigned long long)linkIndex;
- (void)setLastSheetIndex:(unsigned long long)arg1;
- (unsigned long long)lastSheetIndex;
- (void)setFirstSheetIndex:(unsigned long long)arg1;
- (unsigned long long)firstSheetIndex;
- (id)initWithLinkIndex:(unsigned long long)arg1 firstSheetIndex:(unsigned long long)arg2 lastSheetIndex:(unsigned long long)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDLinksCollection : NSObject
{
    NSMutableArray *mLinks;
    NSMutableArray *mReferences;
}

- (void)addOrEquivalentExternalAddInName:(id)arg1 linkReferenceIndex:(unsigned long long *)arg2 nameIndex:(unsigned long long *)arg3;
- (unsigned long long)addOrEquivalentLinkReferenceOfType:(int)arg1 firstSheetIndex:(unsigned long long)arg2 lastSheetIndex:(unsigned long long)arg3;
- (unsigned long long)addOrEquivalentInternalLinkReferenceWithFirstSheetIndex:(unsigned long long)arg1 lastSheetIndex:(unsigned long long)arg2;
- (_Bool)convertLinkReferenceIndex:(unsigned long long)arg1 firstSheetIndex:(unsigned long long *)arg2 lastSheetIndex:(unsigned long long *)arg3;
- (unsigned long long)addReference:(id)arg1;
- (unsigned long long)indexOfReference:(id)arg1;
- (id)referenceAtIndex:(unsigned long long)arg1;
- (unsigned long long)referencesCount;
- (unsigned long long)linkIndexCreateIfNeededWithType:(int)arg1;
- (unsigned long long)addLink:(id)arg1;
- (unsigned long long)indexOfFirstLinkWithType:(int)arg1;
- (id)linkAtIndex:(unsigned long long)arg1;
- (unsigned long long)linksCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDMergedCellCollection : EDCollection
{
}

- (id)referenceContainingRow:(int)arg1 column:(int)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)addObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDName : NSObject
{
    NSString *_formulaString;
    OITSUPointerKeyDictionary *_maxWorksheetReferences;
    EDString *_nameString;
    EDFormula *_formula;
    unsigned long long _sheetIndex;
}

+ (id)name;
@property(nonatomic) unsigned long long sheetIndex; // @synthesize sheetIndex=_sheetIndex;
@property(readonly, nonatomic) EDFormula *formula; // @synthesize formula=_formula;
@property(retain, nonatomic) EDString *nameString; // @synthesize nameString=_nameString;
@property(readonly, nonatomic) OITSUPointerKeyDictionary *maxWorksheetReferences;
- (void)setFormula:(id)arg1 workbook:(id)arg2;
@property(readonly, nonatomic) NSString *internalFunctionName;
@property(readonly, nonatomic) _Bool isInternalFunction;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToString:(id)arg1;
- (_Bool)isEqualToEDName:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)setFormulaString:(id)arg1 workbook:(id)arg2;
- (id)formulaString;

@end

__attribute__((visibility("hidden")))
@interface EDStyle : NSObject <NSCopying, EDImmutableObject>
{
    EDResources *mResources;
    unsigned long long mParentIndex;
    unsigned long long mContentFormatId;
    unsigned long long mFontIndex;
    unsigned long long mFillIndex;
    unsigned long long mAlignmentInfoIndex;
    unsigned long long mBordersIndex;
    EDProtection *mProtection;
    unsigned long long mIndex;
    _Bool mContentFormatOverridden;
    _Bool mFontOverridden;
    _Bool mFillOverridden;
    _Bool mAlignmentInfoOverridden;
    _Bool mBordersOverridden;
    _Bool mProtectionOverridden;
    _Bool mDoNotModify;
}

+ (id)styleWithResources:(id)arg1;
- (void)setDoNotModify:(_Bool)arg1;
- (unsigned long long)index;
- (void)setParent:(id)arg1;
- (id)parent;
- (void)setProtection:(id)arg1;
- (id)protection;
- (void)setProtectionOverridden:(_Bool)arg1;
- (_Bool)isProtectionOverridden;
- (void)setBorders:(id)arg1;
- (id)borders;
- (void)setBordersOverridden:(_Bool)arg1;
- (_Bool)isBordersOverridden;
- (void)setAlignmentInfo:(id)arg1;
- (id)alignmentInfo;
- (void)setAlignmentInfoOverridden:(_Bool)arg1;
- (_Bool)isAlignmentInfoOverridden;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)setFillOverridden:(_Bool)arg1;
- (_Bool)isFillOverridden;
- (void)setFont:(id)arg1;
- (id)font;
- (void)setFontOverridden:(_Bool)arg1;
- (_Bool)isFontOverridden;
- (void)setContentFormat:(id)arg1;
- (id)contentFormat;
- (void)setContentFormatOverridden:(_Bool)arg1;
- (_Bool)isContentFormatOverridden;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToStyle:(id)arg1;
- (_Bool)isEquivalentToStyle:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setAlignmentInfoIndex:(unsigned long long)arg1;
- (unsigned long long)alignmentInfoIndex;
- (void)setFillIndex:(unsigned long long)arg1;
- (unsigned long long)fillIndex;
- (void)setBordersIndex:(unsigned long long)arg1;
- (unsigned long long)bordersIndex;
- (void)setParentIndex:(unsigned long long)arg1;
- (unsigned long long)parentIndex;
- (void)setContentFormatId:(unsigned long long)arg1;
- (unsigned long long)contentFormatId;
- (void)setFontIndex:(unsigned long long)arg1;
- (unsigned long long)fontIndex;
- (void)setIndex:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDNamedStyle : EDStyle
{
    NSString *mName;
}

- (void)setName:(id)arg1;
- (id)name;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDOfficeArtClient : NSObject <OADClient, OADTextClient>
{
    EDSheet *mSheet;
    id mClientState;
    EDAnchor *mAnchor;
    EDTextBox *mTextBox;
    EDComment *mComment;
    NSMutableDictionary *mTableModels;
    struct CGRect mBounds;
    _Bool mIsBoundsSet;
}

- (id).cxx_construct;
- (_Bool)hasText;
- (void)setComment:(id)arg1;
- (id)comment;
- (void)setTextBox:(id)arg1;
- (id)textBox;
- (void)setTableModels:(id)arg1;
- (id)tableModels;
- (void)setSheet:(id)arg1;
- (id)sheet;
- (struct CGRect)bounds;
- (_Bool)hasBounds;
- (void)setBounds:(struct CGRect)arg1;
- (_Bool)areBoundsSet;
- (void)setAnchor:(id)arg1;
- (id)anchor;
- (void)setClientState:(id)arg1;
- (id)clientState;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDOneCellAnchor : EDAnchor
{
    struct EDCellAnchorMarker mFrom;
    struct CGSize mSize;
    _Bool mIsRelative;
}

- (id).cxx_construct;
- (void)setRelative:(_Bool)arg1;
- (_Bool)isRelative;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)setFrom:(struct EDCellAnchorMarker)arg1;
- (struct EDCellAnchorMarker)from;

@end

__attribute__((visibility("hidden")))
@interface EDOptimizedStringsCollection : EDCollection
{
    NSMutableDictionary *mStringDictionary;
}

- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (unsigned long long)addOrEquivalentObject:(id)arg1;
- (unsigned long long)addObject:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPageSetup : NSObject
{
    int mOrientation;
    int mPageOrder;
    _Bool mCustomFirstPageNumber;
    unsigned long long mFirstPageNumber;
    unsigned long long mFitToHeight;
    unsigned long long mFitToWidth;
    unsigned long long mScale;
    float mLeftMargin;
    float mRightMargin;
    float mTopMargin;
    float mBottomMargin;
    float mHeaderMargin;
    float mFooterMargin;
}

+ (id)pageSetup;
- (void)setFooterMargin:(float)arg1;
- (float)footerMargin;
- (void)setHeaderMargin:(float)arg1;
- (float)headerMargin;
- (void)setBottomMargin:(float)arg1;
- (float)bottomMargin;
- (void)setTopMargin:(float)arg1;
- (float)topMargin;
- (void)setRightMargin:(float)arg1;
- (float)rightMargin;
- (void)setLeftMargin:(float)arg1;
- (float)leftMargin;
- (void)setScale:(unsigned long long)arg1;
- (unsigned long long)scale;
- (void)setFitToWidth:(unsigned long long)arg1;
- (unsigned long long)fitToWidth;
- (void)setFitToHeight:(unsigned long long)arg1;
- (unsigned long long)fitToHeight;
- (void)setFirstPageNumber:(unsigned long long)arg1;
- (unsigned long long)firstPageNumber;
- (void)setCustomFirstPageNumber:(_Bool)arg1;
- (_Bool)customFirstPageNumber;
- (void)setOrder:(int)arg1;
- (int)order;
- (void)setOrientation:(int)arg1;
- (int)orientation;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPane : NSObject
{
    double mXSplitPosition;
    double mYSplitPosition;
    EDReference *mTopLeftCell;
    int mActivePane;
    int mPaneState;
}

+ (id)pane;
- (void)setPaneState:(int)arg1;
- (int)paneState;
- (void)setActivePane:(int)arg1;
- (int)activePane;
- (void)setTopLeftCell:(id)arg1;
- (id)topLeftCell;
- (void)setYSplitPosition:(double)arg1;
- (double)ySplitPosition;
- (void)setXSplitPosition:(double)arg1;
- (double)xSplitPosition;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPatternFill : EDFill
{
    int mType;
    EDColorReference *mBackColorReference;
    EDColorReference *mForeColorReference;
}

+ (id)patternFillWithType:(int)arg1 foreColor:(id)arg2 backColor:(id)arg3 resources:(id)arg4;
+ (id)patternFillWithType:(int)arg1 foreColor:(id)arg2 resources:(id)arg3;
+ (id)patternFillWithType:(int)arg1 resources:(id)arg2;
+ (id)patternFillWithType:(int)arg1 foreColorReference:(id)arg2 backColorReference:(id)arg3 resources:(id)arg4;
- (id)backColor;
- (id)foreColor;
- (int)type;
- (_Bool)isEmpty;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToPatternFill:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithType:(int)arg1 foreColor:(id)arg2 backColor:(id)arg3 resources:(id)arg4;
- (id)initWithResources:(id)arg1;
- (id)backColorReference;
- (id)foreColorReference;
- (id)initWithType:(int)arg1 foreColorReference:(id)arg2 backColorReference:(id)arg3 resources:(id)arg4;
- (void)setForeColorReference:(id)arg1;
- (void)setBackColorReference:(id)arg1;
- (void)setBackColor:(id)arg1;
- (void)setForeColor:(id)arg1;
- (void)setType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDPhoneticInfo : NSObject <EDImmutableObject>
{
    EDResources *mResources;
    unsigned long long mFontIndex;
    NSString *mString;
    int mType;
    int mAlign;
    EDCollection *mRuns;
    _Bool mDoNotModify;
}

+ (id)phoneticInfoWithResources:(id)arg1;
- (void)setDoNotModify:(_Bool)arg1;
- (id)runs;
- (void)setFont:(id)arg1;
- (id)font;
- (void)appendString:(id)arg1;
- (void)prependString:(id)arg1;
- (void)setString:(id)arg1;
- (id)string;
- (void)setAlign:(int)arg1;
- (int)align;
- (void)setType:(int)arg1;
- (int)type;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToEDPhoneticInfo:(id)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setFontIndex:(unsigned long long)arg1;
- (unsigned long long)fontIndex;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDPhoneticRun : NSObject
{
    unsigned int mCharIndex;
    unsigned int mBaseCharIndex;
    unsigned int mBaseCharCount;
}

- (void)setCharBaseCount:(unsigned int)arg1;
- (unsigned int)charBaseCount;
- (void)setCharBaseIndex:(unsigned int)arg1;
- (unsigned int)charBaseIndex;
- (void)setCharIndex:(unsigned int)arg1;
- (void)adjustIndex:(unsigned long long)arg1;
- (unsigned int)charIndex;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotArea : NSObject
{
    _Bool mGrandCol;
    _Bool mGrandRow;
    _Bool mOutline;
    int mType;
    EDCollection *mReferences;
    EDReference *mOffset;
}

+ (id)pivotArea;
- (id)references;
- (void)setOffset:(id)arg1;
- (id)offset;
- (void)setType:(int)arg1;
- (int)type;
- (void)setOutline:(_Bool)arg1;
- (_Bool)outline;
- (void)setGrandCol:(_Bool)arg1;
- (_Bool)grandCol;
- (void)setGrandRow:(_Bool)arg1;
- (_Bool)grandRow;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotAreaReference : NSObject
{
    _Bool mByPosition;
    _Bool mRelative;
    _Bool mSelected;
    unsigned long long mFieldId;
    unsigned long long mCount;
}

+ (id)pivotAreaReference;
- (void)setCount:(unsigned long long)arg1;
- (unsigned long long)count;
- (void)setFieldId:(unsigned long long)arg1;
- (unsigned long long)fieldId;
- (void)setSelected:(_Bool)arg1;
- (_Bool)selected;
- (void)setRelative:(_Bool)arg1;
- (_Bool)relative;
- (void)setByPosition:(_Bool)arg1;
- (_Bool)byPosition;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotConditionalFormat : NSObject
{
    unsigned long long mPriority;
    int mType;
    int mScope;
    EDCollection *mPivotAreas;
}

+ (id)pivotConditionalFormat;
- (id)pivotAreas;
- (void)setScope:(int)arg1;
- (int)scope;
- (void)setType:(int)arg1;
- (int)type;
- (void)setPriority:(unsigned long long)arg1;
- (unsigned long long)priority;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotDataField : NSObject
{
    long long mBaseField;
    unsigned long long mBaseItem;
    unsigned long long mFieldId;
    unsigned long long mNumFmtId;
    NSString *mName;
    int mFormat;
}

+ (id)pivotDataField;
- (void)setShowDataAs:(int)arg1;
- (int)showDataAs;
- (void)setName:(id)arg1;
- (id)name;
- (void)setNumFmtId:(unsigned long long)arg1;
- (unsigned long long)numFmtId;
- (void)setFieldId:(unsigned long long)arg1;
- (unsigned long long)fieldId;
- (void)setBaseItem:(unsigned long long)arg1;
- (unsigned long long)baseItem;
- (void)setBaseField:(long long)arg1;
- (long long)baseField;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotField : NSObject
{
    int mAxis;
    _Bool mCompact;
    _Bool mDataField;
    _Bool mShowDefaultSubTotal;
    _Bool mInsertBlankRow;
    _Bool mOutlineItems;
    _Bool mShowAllItems;
    _Bool mSubtotalTop;
    unsigned long long mNumFmtId;
    EDCollection *mPivotFieldItems;
}

+ (id)pivotField;
- (id)pivotFieldItems;
- (void)setAxis:(int)arg1;
- (int)axis;
- (void)setNumFmtId:(unsigned long long)arg1;
- (unsigned long long)numFmtId;
- (void)setSubtotalTop:(_Bool)arg1;
- (_Bool)subtotalTop;
- (void)setShowAllItems:(_Bool)arg1;
- (_Bool)showAllItems;
- (void)setOutlineItems:(_Bool)arg1;
- (_Bool)outlineItems;
- (void)setInsertBlankRow:(_Bool)arg1;
- (_Bool)insertBlankRow;
- (void)setShowDefaultSubTotal:(_Bool)arg1;
- (_Bool)showDefaultSubTotal;
- (void)setDataField:(_Bool)arg1;
- (_Bool)dataField;
- (void)setCompact:(_Bool)arg1;
- (_Bool)compact;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotFieldItem : NSObject
{
    _Bool mChildItems;
    _Bool mExpanded;
    _Bool mCalculatedMember;
    _Bool mMissed;
    _Bool mHidden;
    _Bool mDetailsHidden;
    int mType;
    unsigned long long mItemIndex;
}

+ (id)pivotFieldItem;
- (void)setType:(int)arg1;
- (int)type;
- (void)setItemIndex:(unsigned long long)arg1;
- (unsigned long long)itemIndex;
- (void)setDetailsHidden:(_Bool)arg1;
- (_Bool)detailsHidden;
- (void)setHidden:(_Bool)arg1;
- (_Bool)hidden;
- (void)setMissed:(_Bool)arg1;
- (_Bool)missed;
- (void)setCalculatedMember:(_Bool)arg1;
- (_Bool)calculatedMember;
- (void)setExpanded:(_Bool)arg1;
- (_Bool)expanded;
- (void)setChildItems:(_Bool)arg1;
- (_Bool)childItems;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotItem : NSObject
{
    unsigned int mRepeatedItemCounts;
    int mType;
    EDCollection *mItemIndexes;
}

+ (id)pivotItem;
- (id)itemIndexes;
- (void)setType:(int)arg1;
- (int)type;
- (void)setRepeatedItemCounts:(unsigned int)arg1;
- (unsigned int)repeatedItemCounts;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotPageField : NSObject
{
    unsigned long long mFieldId;
    NSString *mCap;
    NSString *mName;
}

+ (id)pivotPageField;
- (void)setCap:(id)arg1;
- (id)cap;
- (void)setName:(id)arg1;
- (id)name;
- (void)setFieldId:(unsigned long long)arg1;
- (unsigned long long)fieldId;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDPivotTable : NSObject
{
    EDResources *mResources;
    _Bool mShowLastColumn;
    _Bool mShowRowHeaders;
    _Bool mShowColumnHeaders;
    _Bool mShowRowStripes;
    _Bool mShowColumnStripes;
    _Bool mApplyNumberFormats;
    _Bool mApplyBorderFormats;
    _Bool mApplyFontFormats;
    _Bool mApplyPatternFormats;
    _Bool mApplyAlignmentFormats;
    _Bool mApplyWidthHeightFormats;
    _Bool mUseAutoFormatting;
    _Bool mColGrandTotals;
    _Bool mRowGrandTotals;
    _Bool mCustomListSort;
    _Bool mCompactData;
    _Bool mCompact;
    _Bool mDataCaption;
    _Bool mDataOnRows;
    _Bool mDisableFieldList;
    _Bool mMergeItem;
    _Bool mMultipleFieldFilters;
    _Bool mOutline;
    _Bool mOutlineData;
    _Bool mPageOverThenDown;
    _Bool mShowCalcMbrs;
    _Bool mShowDataDropDown;
    _Bool mShowDropZones;
    _Bool mShowEmptyCol;
    _Bool mShowEmptyRow;
    _Bool mShowHeaders;
    _Bool mShowMemberPropertyTips;
    _Bool mShowMissing;
    _Bool mShowMultipleLabel;
    _Bool mSubtotalHiddenItems;
    NSString *mName;
    NSString *mStyleName;
    NSString *mColumnHeaderCaption;
    NSString *mRowHeaderCaption;
    NSString *mPageStyleName;
    EDReference *mPivotTableRange;
    unsigned long long mStyleIndex;
    long long mFirstHeaderRow;
    long long mFirstDataRow;
    long long mFirstDataColumn;
    unsigned long long mRowPageCount;
    unsigned long long mColumnPageCount;
    unsigned long long mPageWrap;
    unsigned long long mAutoFormatId;
    unsigned long long mDataPosition;
    EDCollection *mRowFields;
    EDCollection *mColumnFields;
    EDCollection *mRowItems;
    EDCollection *mColumnItems;
    EDCollection *mPivotFields;
    EDCollection *mDataFields;
    EDCollection *mConditionalFields;
    EDCollection *mPivotAreas;
    EDCollection *mPageFields;
}

+ (id)pivotTableWithResources:(id)arg1;
- (id)pageFields;
- (id)pivotAreas;
- (id)conditionalFormats;
- (id)dataFields;
- (id)pivotFields;
- (id)columnItems;
- (id)rowItems;
- (id)columnFields;
- (id)rowFields;
- (void)setSubtotalHiddenItems:(_Bool)arg1;
- (_Bool)subtotalHiddenItems;
- (void)setShowMultipleLabel:(_Bool)arg1;
- (_Bool)showMultipleLabel;
- (void)setShowMissing:(_Bool)arg1;
- (_Bool)showMissing;
- (void)setShowMemberPropertyTips:(_Bool)arg1;
- (_Bool)showMemberPropertyTips;
- (void)setShowHeaders:(_Bool)arg1;
- (_Bool)showHeaders;
- (void)setShowEmptyRow:(_Bool)arg1;
- (_Bool)showEmptyRow;
- (void)setShowEmptyCol:(_Bool)arg1;
- (_Bool)showEmptyCol;
- (void)setShowDropZones:(_Bool)arg1;
- (_Bool)showDropZones;
- (void)setShowDataDropDown:(_Bool)arg1;
- (_Bool)showDataDropDown;
- (void)setShowCalcMbrs:(_Bool)arg1;
- (_Bool)showCalcMbrs;
- (void)setPageOverThenDown:(_Bool)arg1;
- (_Bool)pageOverThenDown;
- (void)setOutlineData:(_Bool)arg1;
- (_Bool)outlineData;
- (void)setOutline:(_Bool)arg1;
- (_Bool)outline;
- (void)setMultipleFieldFilters:(_Bool)arg1;
- (_Bool)multipleFieldFilters;
- (void)setMergeItem:(_Bool)arg1;
- (_Bool)mergeItem;
- (void)setDisableFieldList:(_Bool)arg1;
- (_Bool)disableFieldList;
- (void)setDataOnRows:(_Bool)arg1;
- (_Bool)dataOnRows;
- (void)setDataCaption:(_Bool)arg1;
- (_Bool)dataCaption;
- (void)setCompact:(_Bool)arg1;
- (_Bool)compact;
- (void)setCompactData:(_Bool)arg1;
- (_Bool)compactData;
- (void)setCustomListSort:(_Bool)arg1;
- (_Bool)customListSort;
- (void)setRowGrandTotals:(_Bool)arg1;
- (_Bool)rowGrandTotals;
- (void)setUseAutoFormatting:(_Bool)arg1;
- (_Bool)useAutoFormatting;
- (void)setColGrandTotals:(_Bool)arg1;
- (_Bool)colGrandTotals;
- (void)setApplyWidthHeightFormats:(_Bool)arg1;
- (_Bool)applyWidthHeightFormats;
- (void)setApplyAlignmentFormats:(_Bool)arg1;
- (_Bool)applyAlignmentFormats;
- (void)setApplyPatternFormats:(_Bool)arg1;
- (_Bool)applyPatternFormats;
- (void)setApplyFontFormats:(_Bool)arg1;
- (_Bool)applyFontFormats;
- (void)setApplyBorderFormats:(_Bool)arg1;
- (_Bool)applyBorderFormats;
- (void)setApplyNumberFormats:(_Bool)arg1;
- (_Bool)applyNumberFormats;
- (void)setShowColumnHeaders:(_Bool)arg1;
- (_Bool)showColumnHeaders;
- (void)setShowRowHeaders:(_Bool)arg1;
- (_Bool)showRowHeaders;
- (void)setShowColumnStripes:(_Bool)arg1;
- (_Bool)showColumnStripes;
- (void)setShowRowStripes:(_Bool)arg1;
- (_Bool)showRowStripes;
- (void)setShowLastColumn:(_Bool)arg1;
- (_Bool)showLastColumn;
- (void)setDataPosition:(unsigned long long)arg1;
- (unsigned long long)dataPosition;
- (void)setAutoFormatId:(unsigned long long)arg1;
- (unsigned long long)autoFormatId;
- (void)setPageWrap:(unsigned long long)arg1;
- (unsigned long long)pageWrap;
- (void)setFirstDataColumn:(long long)arg1;
- (long long)firstDataColumn;
- (void)setFirstDataRow:(long long)arg1;
- (long long)firstDataRow;
- (void)setFirstHeaderRow:(long long)arg1;
- (long long)firstHeaderRow;
- (void)setColumnPageCount:(unsigned long long)arg1;
- (unsigned long long)columnPageCount;
- (void)setRowPageCount:(unsigned long long)arg1;
- (unsigned long long)rowPageCount;
- (void)setPivotTableRange:(id)arg1;
- (id)pivotTableRange;
- (void)setName:(id)arg1;
- (id)name;
- (void)setStyleName:(id)arg1;
- (id)styleName;
- (void)setPageStyleName:(id)arg1;
- (id)pageStyleName;
- (void)setRowHeaderCaption:(id)arg1;
- (id)rowHeaderCaption;
- (void)setColumnHeaderCaption:(id)arg1;
- (id)columnHeaderCaption;
- (void)setStyle:(id)arg1;
- (id)style;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setStyleIndex:(unsigned long long)arg1;
- (unsigned long long)styleIndex;

@end

__attribute__((visibility("hidden")))
@interface EDProcessors : NSObject
{
    EDWorkbook *mWorkbook;
    NSMutableArray *mProcessors;
}

- (void)applyProcessorsWithSheet:(id)arg1;
- (void)markObject:(id)arg1 processor:(Class)arg2;
- (void)removeAllObjects;
- (void)removeProcessorClass:(Class)arg1;
- (_Bool)hasProcessors;
- (void)addProcessorClass:(Class)arg1;
- (void)dealloc;
- (id)initWithWorkbook:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDProtection : NSObject <NSCopying>
{
    _Bool mHidden;
    _Bool mLocked;
}

+ (id)protectionWithHidden:(_Bool)arg1 locked:(_Bool)arg2;
- (_Bool)isLocked;
- (_Bool)isHidden;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToProtection:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithHidden:(_Bool)arg1 locked:(_Bool)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDReference : NSObject <NSCopying>
{
    struct EDAreaReference mAreaReference;
}

+ (id)referenceWithReference:(id)arg1;
+ (id)referenceWithAreaReference:(struct EDAreaReference *)arg1;
+ (id)referenceWithFirstRow:(int)arg1 lastRow:(int)arg2 firstColumn:(int)arg3 lastColumn:(int)arg4;
+ (id)reference;
- (id).cxx_construct;
- (_Bool)fullyAdjacentToReference:(id)arg1;
- (unsigned long long)countOfCellsBeingReferenced;
- (_Bool)isValidAreaReference;
- (_Bool)isValidCellReference;
- (_Bool)isColumnReference;
- (_Bool)isRowReference;
- (_Bool)isCellReference;
- (_Bool)containsRow:(int)arg1 column:(int)arg2;
- (int)lastColumn;
- (int)lastRow;
- (int)firstColumn;
- (int)firstRow;
- (struct EDAreaReference)areaReference;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToReference:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithReference:(id)arg1;
- (id)initWithAreaReference:(struct EDAreaReference *)arg1;
- (id)initWithFirstRow:(int)arg1 lastRow:(int)arg2 firstColumn:(int)arg3 lastColumn:(int)arg4;
- (id)init;
- (void)unionWithRow:(int)arg1 column:(int)arg2;
- (void)unionWithFirstRow:(int)arg1 lastRow:(int)arg2 firstColumn:(int)arg3 lastColumn:(int)arg4;
- (void)unionWithReference:(id)arg1;
- (void)setLastColumn:(int)arg1;
- (void)setLastRow:(int)arg1;
- (void)setFirstColumn:(int)arg1;
- (void)setFirstRow:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDReferenceCollection : EDCollection
{
    _Bool mCoalesce;
}

+ (id)coalesceCollection;
+ (id)noCoalesceCollection;
- (id)reverseReferencesByRow:(_Bool)arg1;
- (id)referenceToCellWithIndex:(unsigned long long)arg1 byRow:(_Bool)arg2;
- (unsigned long long)countOfCellsBeingReferenced;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (void)insertObject:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)addObject:(id)arg1;
- (id)initWihNoCoalesce;
- (id)init;
- (_Bool)coalesceReferenceAtIndex1:(unsigned long long)arg1 index2:(unsigned long long)arg2;
- (void)coalesce;

@end

__attribute__((visibility("hidden")))
@interface EDReferenceIterator : NSObject
{
    EDWorkbook *mWorkbook;
    EDWorksheet *mCurrentSheet;
    EDCollection *mReferences;
    EDReference *mReference;
    EDRowBlocks *mRowBlocks;
    EDRowBlock *mRowBlock;
    unsigned long long mRowBlockIndex;
    struct EDRowInfo *mRowInfo;
    unsigned int mRowInfoIndex;
    unsigned int mCellIndex;
    unsigned int mNextArrayIndex;
    int mCurrentCellIndex;
    unsigned int mPreviousColumnNumber;
}

+ (id)referenceIteratorWithReferenceArray:(id)arg1 workbook:(id)arg2;
+ (id)referenceIteratorWithReference:(id)arg1 workbook:(id)arg2;
- (unsigned int)currentCellIndex;
- (struct EDCellHeader *)nextCell;
- (void)setCurrentSheet:(id)arg1;
- (void)dealloc;
- (id)initWithReferenceArray:(id)arg1 workbook:(id)arg2;
- (id)initWithReference:(id)arg1 workbook:(id)arg2;
- (id)initWithReferenceArray:(id)arg1 reference:(id)arg2 workbook:(id)arg3;
- (_Bool)nextRow;
- (_Bool)nextReference;
- (void)setReference:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDResources : NSObject
{
    EDCollection *mStrings;
    EDContentFormatsCollection *mContentFormats;
    EDFontsCollection *mFonts;
    EDCollection *mAlignmentInfos;
    EDStylesCollection *mStyles;
    EDColorsCollection *mColors;
    EDColorsCollection *mThemes;
    EDCollection *mNames;
    EDLinksCollection *mLinks;
    EDCollection *mBorders;
    EDCollection *mBorder;
    EDCollection *mFills;
    EDCollection *mDifferentialStyles;
    EDTableStylesCollection *mTableStyles;
}

- (id)tableStyles;
- (id)differentialStyles;
- (id)fills;
- (id)border;
- (id)borders;
- (id)links;
- (id)names;
- (id)themes;
- (id)colors;
- (id)styles;
- (id)alignmentInfos;
- (id)fonts;
- (id)contentFormats;
- (id)strings;
- (void)dealloc;
- (id)initWithStringOptimization:(_Bool)arg1;
- (void)setThemes:(id)arg1;
- (void)setColors:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EDRowBlock : NSObject
{
    struct __CFData *mPackedData;
    struct __CFData *mCellOffsets;
}

+ (id)rowBlock;
- (struct EDCellHeader *)addCellWithColumnNumber:(unsigned int)arg1 type:(int)arg2 isFormulaCell:(_Bool)arg3 rowInfo:(struct EDRowInfo **)arg4 rowBlocks:(id)arg5;
- (struct EDRowInfo *)addRowInfoWithRowNumber:(unsigned int)arg1 cellCountHint:(unsigned int)arg2;
- (struct EDCellHeader *)cellWithColumnNumber:(unsigned int)arg1 rowInfo:(struct EDRowInfo *)arg2;
- (unsigned int)indexOfCellWithColumnNumber:(unsigned int)arg1 rowInfo:(struct EDRowInfo *)arg2;
- (unsigned int)expectedIndexOfCellWithColumnNumber:(unsigned int)arg1 rowInfo:(struct EDRowInfo *)arg2;
- (struct EDCellHeader *)cellAtIndex:(unsigned int)arg1 rowInfo:(struct EDRowInfo *)arg2;
- (struct EDRowInfo *)rowInfoWithRowNumber:(unsigned int)arg1 createIfNil:(_Bool)arg2;
- (struct EDRowInfo *)rowInfoWithRowNumber:(unsigned int)arg1;
- (unsigned int)indexOfRowInfoWithRowNumber:(unsigned int)arg1;
- (struct EDRowInfo *)rowInfoAtIndex:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned int maxRowNumber;
@property(readonly, nonatomic) unsigned int minRowNumber;
@property(readonly, nonatomic) unsigned int lastRowNumber;
@property(readonly, nonatomic) unsigned int firstRowNumber;
@property(readonly, nonatomic) unsigned int rowCount;
- (void)doneWithContent;
- (void)dealloc;
- (id)init;
- (void)checkCellOffsetOrThrow:(unsigned long long)arg1;
- (unsigned long long)startOfCellsOrThrow;
- (void)removeCellAtIndex:(unsigned int)arg1 rowInfo:(struct EDRowInfo **)arg2;
- (void)archiveByAppendingToMutableData:(struct __CFData *)arg1;
- (void)unarchiveFromData:(struct __CFData *)arg1 offset:(unsigned long long *)arg2;
- (void)incrementIndex;
- (void)setIndex:(unsigned long long)arg1;
- (unsigned long long)index;

@end

__attribute__((visibility("hidden")))
@interface EDRowBlocks : NSObject <TSUFlushable>
{
    EDWorksheet *mWorksheet;
    NSMutableArray *mRowBlocks;
    EDCollection *mFormulas;
    unsigned int mMaxPopulatedRow;
    unsigned int mMaxPopulatedColumn;
    NSString *mFileName;
    int mLockCount;
    NSRecursiveLock *mSaveLoadLock;
}

- (id)formulas;
- (unsigned int)maxPopulatedColumn;
- (unsigned int)maxPopulatedRow;
- (struct EDCellHeader *)cellWithRowNumber:(unsigned int)arg1 columnNumber:(int)arg2;
- (id)rowBlockForRowNumber:(unsigned int)arg1 currentRowBlock:(id)arg2 createIfNil:(_Bool)arg3;
- (id)rowBlockForRowNumber:(unsigned int)arg1 currentRowBlock:(id)arg2;
- (unsigned long long)indexOfRowBlockForRowNumber:(unsigned int)arg1;
- (unsigned long long)expectedIndexOfRowBlockForRowNumber:(unsigned int)arg1;
- (void)removeRowBlockAtIndex:(unsigned long long)arg1;
- (id)rowBlockAtIndex:(unsigned long long)arg1;
- (unsigned long long)rowBlockCount;
- (void)dealloc;
- (id)initWithWorksheet:(id)arg1;
- (id)fileNameForPersistingRowBlocks;
- (_Bool)spaceForRowNumber:(unsigned int)arg1 rowBlock:(id)arg2;
- (void)flush;
- (void)save;
- (void)load;
- (void)unlock;
- (void)lock;
- (Class)classForFormulaType:(unsigned char)arg1;
- (unsigned char)formulaTypeForFormula:(id)arg1;
- (void)updateMaxPopulatedRow:(unsigned int)arg1 column:(unsigned int)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDRun : NSObject <EDKeyedObject>
{
    EDResources *mResources;
    unsigned long long mCharIndex;
    unsigned long long mFontIndex;
}

+ (id)runWithCharIndex:(unsigned long long)arg1 font:(id)arg2 resources:(id)arg3;
+ (id)runWithResources:(id)arg1;
+ (id)runWithCharIndex:(unsigned long long)arg1 fontIndex:(unsigned long long)arg2 resources:(id)arg3;
- (id)font;
- (void)setCharIndex:(unsigned long long)arg1;
- (void)adjustIndex:(unsigned long long)arg1;
- (unsigned long long)charIndex;
- (long long)key;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToRun:(id)arg1;
- (id)initWithCharIndex:(unsigned long long)arg1 font:(id)arg2 resources:(id)arg3;
- (id)initWithResources:(id)arg1;
- (void)setFontIndex:(unsigned long long)arg1;
- (unsigned long long)fontIndex;
- (id)initWithCharIndex:(unsigned long long)arg1 fontIndex:(unsigned long long)arg2 resources:(id)arg3;
- (void)setFont:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDRunsCollection : EDSortedCollection
{
}

- (void)addRun:(id)arg1 baseStyle:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EDSheetReference : EDReference
{
    unsigned long long mSheetIndex;
}

+ (id)referenceWithSheetIndex:(unsigned long long)arg1 firstRow:(int)arg2 lastRow:(int)arg3 firstColumn:(int)arg4 lastColumn:(int)arg5;
- (void)unionWithReference:(id)arg1;
- (_Bool)fullyAdjacentToReference:(id)arg1;
- (unsigned long long)sheetIndex;
- (_Bool)isSheedIndexValid;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToTableReference:(id)arg1;
- (id)initWithSheetIndex:(unsigned long long)arg1 firstRow:(int)arg2 lastRow:(int)arg3 firstColumn:(int)arg4 lastColumn:(int)arg5;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDString : NSObject <NSCopying, EDImmutableObject>
{
    NSString *mString;
    EDRunsCollection *mRuns;
    EDPhoneticInfo *mPhoneticInfo;
    _Bool mDoNotModify;
}

+ (id)edStringWithString:(id)arg1 runs:(id)arg2;
+ (id)edStringWithString:(id)arg1;
+ (id)string;
- (void)setDoNotModify:(_Bool)arg1;
- (void)setRuns:(id)arg1;
- (id)runs;
- (void)setPhoneticInfo:(id)arg1;
- (id)phoneticInfo;
- (void)appendString:(id)arg1;
- (void)prependString:(id)arg1;
- (void)setString:(id)arg1;
- (id)string;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToEDString:(id)arg1;
- (_Bool)isEqualToString:(id)arg1;
- (void)dealloc;
- (id)initWithString:(id)arg1 runs:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)init;
- (_Bool)isEmpty;
- (id)firstRunFont;
- (_Bool)areThereRuns;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDStylesCollection : EDCollection
{
    unsigned long long mDefaultWorkbookStyleIndex;
}

- (void)setDefaultWorkbookStyleIndex:(unsigned long long)arg1;
- (unsigned long long)defaultWorkbookStyleIndex;
- (id)defaultWorkbookStyle;
- (void)removeAllObjects;
- (void)removeObjectAtIndex:(unsigned long long)arg1;
- (void)replaceObjectAtIndex:(unsigned long long)arg1 withObject:(id)arg2;
- (unsigned long long)addObject:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDTable : NSObject
{
    EDResources *mResources;
    unsigned long long mStyleIndex;
    unsigned long long mHeaderRowDxfIndex;
    unsigned long long mTotalsRowDxfIndex;
    unsigned long long mDataAreaDxfIndex;
    unsigned long long mHeaderRowBorderDxfIndex;
    unsigned long long mTotalsRowBorderDxfIndex;
    unsigned long long mDataAreaBorderDxfIndex;
    unsigned long long mTableBorderDxfIndex;
    NSString *mName;
    NSString *mDisplayName;
    EDReference *mTableRange;
    NSString *mStyleName;
    unsigned long long mHeaderRowCount;
    unsigned long long mTotalsRowCount;
    _Bool mShowFirstColumn;
    _Bool mShowLastColumn;
    _Bool mShowRowStripes;
    _Bool mShowColumnStripes;
    EDCollection *mTableColumns;
    EDCollection *mColumnFilters;
}

+ (id)tableWithResources:(id)arg1;
- (void)setTableRange:(id)arg1;
- (void)setShowColumnStripes:(_Bool)arg1;
- (_Bool)showColumnStripes;
- (void)setShowRowStripes:(_Bool)arg1;
- (_Bool)showRowStripes;
- (void)setShowLastColumn:(_Bool)arg1;
- (_Bool)showLastColumn;
- (void)setShowFirstColumn:(_Bool)arg1;
- (_Bool)showFirstColumn;
- (id)columnFilters;
- (id)tableColumns;
- (void)setTotalsRowCount:(unsigned long long)arg1;
- (unsigned long long)totalsRowCount;
- (void)setHeaderRowCount:(unsigned long long)arg1;
- (unsigned long long)headerRowCount;
- (id)tableRange;
- (void)setStyleName:(id)arg1;
- (id)styleName;
- (void)setDisplayName:(id)arg1;
- (id)displayName;
- (void)setName:(id)arg1;
- (id)name;
- (void)setTableBorderDxf:(id)arg1;
- (id)tableBorderDxf;
- (void)setDataAreaBorderDxf:(id)arg1;
- (id)dataAreaBorderDxf;
- (void)setTotalsRowBorderDxf:(id)arg1;
- (id)totalsRowBorderDxf;
- (void)setHeaderRowBorderDxf:(id)arg1;
- (id)headerRowBorderDxf;
- (void)setDataAreaDxf:(id)arg1;
- (id)dataAreaDxf;
- (void)setTotalsRowDxf:(id)arg1;
- (id)totalsRowDxf;
- (void)setHeaderRowDxf:(id)arg1;
- (id)headerRowDxf;
- (void)setStyle:(id)arg1;
- (id)style;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setTableBorderDxfIndex:(unsigned long long)arg1;
- (unsigned long long)tableBorderDxfIndex;
- (void)setDataAreaBorderDxfIndex:(unsigned long long)arg1;
- (unsigned long long)dataAreaBorderDxfIndex;
- (void)setTotalsRowBorderDxfIndex:(unsigned long long)arg1;
- (unsigned long long)totalsRowBorderDxfIndex;
- (void)setHeaderRowBorderDxfIndex:(unsigned long long)arg1;
- (unsigned long long)headerRowBorderDxfIndex;
- (void)setDataAreaDxfIndex:(unsigned long long)arg1;
- (unsigned long long)dataAreaDxfIndex;
- (void)setTotalsRowDxfIndex:(unsigned long long)arg1;
- (unsigned long long)totalsRowDxfIndex;
- (void)setHeaderRowDxfIndex:(unsigned long long)arg1;
- (unsigned long long)headerRowDxfIndex;
- (void)setStyleIndex:(unsigned long long)arg1;
- (unsigned long long)styleIndex;

@end

__attribute__((visibility("hidden")))
@interface EDTableColumn : NSObject
{
    EDResources *mResources;
    unsigned long long mHeaderRowDxfIndex;
    unsigned long long mTotalsRowDxfIndex;
    unsigned long long mDataAreaDxfIndex;
    EDString *mName;
    EDString *mUniqueName;
    EDString *mTotalsRowLabel;
}

+ (id)tableColumnWithResources:(id)arg1;
- (void)setTotalsRowLabel:(id)arg1;
- (id)totalsRowLabel;
- (void)setUniqueName:(id)arg1;
- (id)uniqueName;
- (void)setName:(id)arg1;
- (id)name;
- (void)setDataAreaDxf:(id)arg1;
- (id)dataAreaDxf;
- (void)setTotalsRowDxf:(id)arg1;
- (id)totalsRowDxf;
- (void)setHeaderRowDxf:(id)arg1;
- (id)headerRowDxf;
- (void)dealloc;
- (id)initWithResources:(id)arg1;
- (void)setDataAreaDxfIndex:(unsigned long long)arg1;
- (unsigned long long)dataAreaDxfIndex;
- (void)setTotalsRowDxfIndex:(unsigned long long)arg1;
- (unsigned long long)totalsRowDxfIndex;
- (void)setHeaderRowDxfIndex:(unsigned long long)arg1;
- (unsigned long long)headerRowDxfIndex;

@end

__attribute__((visibility("hidden")))
@interface EDTableFilter : NSObject
{
    int mScale;
    int mOperator;
    double mValue;
    double mFilterValue;
}

+ (id)edTableFilter;
- (void)setOperatorType:(int)arg1;
- (int)operatorType;
- (void)setScale:(int)arg1;
- (int)scale;
- (void)setFilterValue:(double)arg1;
- (double)filterValue;
- (void)setValue:(double)arg1;
- (double)value;

@end

__attribute__((visibility("hidden")))
@interface EDTableFilterColumn : NSObject
{
    unsigned long long mColumnIndex;
    NSMutableArray *mFilters;
    int mFiltersRelation;
}

- (void)setFiltersRelation:(int)arg1;
- (int)filtersRelation;
- (void)setColumnIndex:(unsigned long long)arg1;
- (unsigned long long)columnIndex;
- (void)addFilter:(id)arg1;
- (id)filterAtIndex:(unsigned long long)arg1;
- (unsigned long long)filterCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDTableStyle : NSObject <NSCopying>
{
    NSString *mName;
    EDKeyedCollection *mTableStyleElements;
}

+ (id)tableStyle;
- (id)tableStyleElements;
- (void)setName:(id)arg1;
- (id)name;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDTableStyleElement : NSObject <EDKeyedObject, NSCopying>
{
    EDCollection *mDifferentialStyles;
    int mType;
    unsigned int mBandSize;
    EDDifferentialStyle *mDifferentialStyle;
}

+ (id)tableStyleElementWithResources:(id)arg1;
- (void)setDifferentialStyleWithIndex:(unsigned long long)arg1;
- (void)setDifferentialStyle:(id)arg1;
- (id)differentialStyle;
- (void)setBandSize:(unsigned int)arg1;
- (unsigned int)bandSize;
- (void)setType:(int)arg1;
- (int)type;
- (long long)key;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithResources:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EDTableStylesCollection : EDCollection
{
    NSString *mDefaultTableStyleName;
    NSString *mDefaultPivotStyleName;
}

- (void)setDefaultPivotStyleName:(id)arg1;
- (id)defaultPivotStyleName;
- (void)setDefaultTableStyleName:(id)arg1;
- (id)defaultTableStyleName;
- (id)objectWithName:(id)arg1;
- (id)defaultPivotStyle;
- (id)defaultTableStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDTextBox : NSObject
{
    EDString *mText;
    EDAlignmentInfo *mAlignmentInfo;
    EDProtection *mProtection;
}

+ (id)textBox;
- (void)setProtection:(id)arg1;
- (id)protection;
- (void)setAlignmentInfo:(id)arg1;
- (id)alignmentInfo;
- (void)setText:(id)arg1;
- (id)text;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EDTokenTree : NSObject
{
}

+ (id)buildSubtree:(unsigned int)arg1 formula:(id)arg2;
+ (_Bool)isTokenAttrASum:(unsigned short)arg1;
+ (_Bool)isTokenNoOp:(unsigned int)arg1 formula:(id)arg2;
+ (unsigned int)childCountForToken:(unsigned int)arg1 formula:(id)arg2;
+ (id)buildSubtreeAtIndex:(unsigned int *)arg1 formula:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EDTokenTreeNode : NSObject
{
    unsigned int mTokenIndex;
    int mTokenType;
    EDTokenTreeNode *mFirstChild;
    EDTokenTreeNode *mSibling;
}

+ (id)tokenTreeNodeWithIndexAndType:(unsigned int)arg1 type:(int)arg2;
- (void)setSibling:(id)arg1;
- (id)sibling;
- (void)setFirstChild:(id)arg1;
- (id)firstChild;
- (unsigned int)tokenIndex;
- (void)dealloc;
- (id)initWithIndexAndType:(unsigned int)arg1 type:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDTwoCellAnchor : EDAnchor
{
    struct EDCellAnchorMarker mFrom;
    struct EDCellAnchorMarker mTo;
    _Bool mIsRelative;
    int mEditAs;
}

- (id).cxx_construct;
- (void)setEditAs:(int)arg1;
- (int)editAs;
- (void)setRelative:(_Bool)arg1;
- (_Bool)isRelative;
- (void)setTo:(struct EDCellAnchorMarker)arg1;
- (struct EDCellAnchorMarker)to;
- (void)setFrom:(struct EDCellAnchorMarker)arg1;
- (struct EDCellAnchorMarker)from;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDUnsupportedSheet : EDSheet
{
}

@end

__attribute__((visibility("hidden")))
@interface EDWarnings : NSObject
{
    struct __CFArray *mWarnings;
}

- (void)reportWarningsWithAssociatedObject:(id)arg1;
- (void)addWarning:(struct TCTaggedMessageStructure *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OCDDocument : NSObject
{
    OCDReader *mReader;
    OCDWriter *mWriter;
    OCDSummary *mSummary;
    OADBlipCollection *mBlips;
    NSMutableArray *mCharts;
    OITSUPointerKeyDictionary *mDualDrawableMap;
    OADTextListStyle *mDefaultTextStyle;
    OADGraphicStyleCache *mGraphicStyleCache;
    NSData *mEncryptionInfo;
}

@property(retain, nonatomic) OADGraphicStyleCache *graphicStyleCache; // @synthesize graphicStyleCache=mGraphicStyleCache;
@property(readonly, nonatomic) OADTextListStyle *defaultTextStyle; // @synthesize defaultTextStyle=mDefaultTextStyle;
@property(readonly, nonatomic) OITSUPointerKeyDictionary *dualDrawableMap; // @synthesize dualDrawableMap=mDualDrawableMap;
@property(readonly, nonatomic) NSMutableArray *charts; // @synthesize charts=mCharts;
@property(readonly, nonatomic) OADBlipCollection *blips; // @synthesize blips=mBlips;
@property(readonly, nonatomic) OCDSummary *summary; // @synthesize summary=mSummary;
@property(retain, nonatomic) OCDWriter *writer; // @synthesize writer=mWriter;
@property(retain, nonatomic) OCDReader *reader; // @synthesize reader=mReader;
- (void)setEncryptionInfo:(id)arg1;
- (id)encryptionInfo;
- (_Bool)isFromBinaryFile;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EDWorkbook : OCDDocument
{
    EDResources *mResources;
    NSMutableArray *mOtherResources;
    EDProcessors *mProcessors;
    ECMappingContext *mMappingContext;
    EDWarnings *mWarnings;
    NSMutableArray *mSheets;
    EDReference *mVisibleRange;
    unsigned long long mActiveSheetIndex;
    NSDate *mDateBaseDate;
    int mDateBase;
    NSString *mFileName;
    NSString *mTemporaryDirectory;
    OADTheme *mTheme;
    NSMutableArray *mBulletBlips;
    ESDContainer *mEscherDrawingGroup;
}

- (id)bulletBlips;
- (void)setTheme:(id)arg1;
- (id)theme;
- (id)warnings;
- (void)applyProcessors;
- (id)processors;
- (void)setMappingContext:(id)arg1;
- (id)mappingContext;
- (void)setActiveSheet:(id)arg1;
- (id)activeSheet;
- (void)addSheet:(id)arg1;
- (unsigned long long)indexOfSheetWithName:(id)arg1;
- (unsigned long long)indexOfSheet:(id)arg1;
- (void)removeSheetAtIndex:(unsigned long long)arg1;
- (id)sheetAtIndex:(unsigned long long)arg1 loadIfNeeded:(_Bool)arg2;
- (id)sheetAtIndex:(unsigned long long)arg1;
- (unsigned long long)sheetCount;
- (void)setVisibleRange:(id)arg1;
- (id)visibleRange;
- (unsigned int)legacyDateBase;
- (void)setDateBase:(int)arg1;
- (int)dateBase;
- (id)dateBaseDate;
- (void)setTemporaryDirectory:(id)arg1;
- (id)temporaryDirectory;
- (id)fileName;
- (id)workbookName;
- (void)addOtherResources:(id)arg1;
- (void)setResources:(id)arg1;
- (id)resources;
- (void)dealloc;
- (id)initWithFileName:(id)arg1 andStringOptimization:(_Bool)arg2;
- (id)initWithStringOptimization:(_Bool)arg1;
- (id)init;
- (void)removeWorksheetAtIndex:(unsigned int)arg1;
- (void)setEscherDrawingGroup:(id)arg1;
- (id)escherDrawingGroup;
- (void)reduceMemoryIfPossible;
- (void)setActiveSheetIndex:(unsigned long long)arg1;
- (unsigned long long)activeSheetIndex;

@end

__attribute__((visibility("hidden")))
@interface EDWorksheet : EDSheet
{
    EDRowBlocks *mRowBlocks;
    EDColumnInfoCollection *mColumnInfos;
    EDCollection *mConditionalFormattings;
    EDCollection *mHyperlinks;
    EDCollection *mTables;
    EDCollection *mPivotTables;
    EDMergedCellCollection *mMergedCells;
    EDPane *mPane;
    EDWarnings *mWorksheetWarnings;
    double mDefaultColumnWidth;
    unsigned short mDefaultRowHeight;
    unsigned long long mMaxRowOutlineLevel;
    unsigned long long mMaxColumnOutlineLevel;
    _Bool mFitToPage;
    EDReference *mMaxCellReferencedInFormulas;
    OITSUPointerKeyDictionary *mMergedRows;
    OITSUPointerKeyDictionary *mMergedCols;
    EDReference *mImplicitCellArea;
}

- (_Bool)hasMergedCells;
- (id)worksheetWarnings;
- (void)setPane:(id)arg1;
- (id)pane;
- (id)mergedCells;
- (id)pivotTables;
- (id)tables;
- (id)hyperlinks;
- (id)conditionalFormattings;
- (id)columnInfos;
- (id)rowBlocks;
- (void)setFitToPage:(_Bool)arg1;
- (_Bool)fitToPage;
- (void)setDefaultRowHeight:(unsigned short)arg1;
- (unsigned short)defaultRowHeight;
- (void)setDefaultColumnWidth:(double)arg1;
- (double)defaultColumnWidth;
- (void)reduceMemoryIfPossible;
- (id)mergedColRef:(unsigned int)arg1;
- (_Bool)isColMerged:(unsigned int)arg1;
- (_Bool)hasMergedCol;
- (id)mergedRowRef:(unsigned int)arg1;
- (_Bool)isRowMerged:(unsigned int)arg1;
- (_Bool)hasMergedRow;
- (void)setMergedColsRef:(id)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3;
- (void)setMergedRowsRef:(id)arg1 from:(unsigned int)arg2 to:(unsigned int)arg3;
- (void)updateMaxColumnOutlineLevelIfNeeded:(unsigned long long)arg1;
- (void)setMaxColumnOutlineLevel:(unsigned long long)arg1;
- (unsigned long long)maxColumnOutlineLevel;
- (void)updateMaxRowOutlineLevelIfNeeded:(unsigned long long)arg1;
- (void)setMaxRowOutlineLevel:(unsigned long long)arg1;
- (unsigned long long)maxRowOutlineLevel;
- (void)teardown;
- (void)setup;
- (id)maxCellReferencedInFormulas;
- (void)setImplicitCellArea:(id)arg1;
- (id)implicitCellArea;

@end

__attribute__((visibility("hidden")))
@interface EFTableData : NSObject
{
    struct EFRefTok mRefTok;
    EDTable *mTable;
    EDReference *mReference;
    int mMakeups;
}

- (id).cxx_construct;
- (void)makeup:(id)arg1 with:(int)arg2;
- (id)reference;
- (id)table;
- (unsigned short *)ptgData;
- (const struct EFRefTok *)refTok;
- (void)dealloc;
- (id)initWith:(struct EFStrTok *)arg1;

@end

__attribute__((visibility("hidden")))
@interface EFormula : NSObject
{
    id <EFHelper> mHelper;
    struct EFLexer *mYylex;
    Class mFormulaClass;
    EDFormula *mFormula;
    EFTableData *mTableData;
    NSString *mErrMsg;
}

+ (id)stringToFormula:(id)arg1 formulaHelper:(id)arg2 formulaClass:(Class)arg3;
+ (id)singletonEFormula;
- (void)setTableData:(id)arg1;
- (id)tableData;
- (id)resolveTable:(const char *)arg1 sheetIndex:(unsigned long long *)arg2;
- (unsigned long long)resolveFirstSheet:(id)arg1 lastSheet:(id)arg2;
- (unsigned long long)resolveSheet:(const char *)arg1 isCurrentSheet:(_Bool *)arg2;
- (unsigned long long)resolveName:(const char *)arg1;
- (id)stringToTokens:(id)arg1;
- (void)setFormulaClass:(Class)arg1;
- (Class)formulaClass;
- (void)setFormula:(id)arg1;
- (void)setFormulaHelper:(id)arg1;
- (id)formulaHelper;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EMAxisMapper : CMMapper
{
}

- (struct CGColor *)textColor;
- (float)strokeWidth;
- (struct CGColor *)strokeColor;
- (id)values;
- (_Bool)centerLabels;
- (id)labels;
- (_Bool)isLogarithmic;
- (float)unit;
- (float)maxValue;
- (float)minValue;
- (id)label;
- (unsigned int)type;
- (id)position;

@end

__attribute__((visibility("hidden")))
@interface EMBordersProperty : CMProperty <NSCopying>
{
    EDBorders *edValue;
    OITSUColor *mBorderColor;
    OITSUColor *mBorderTopColor;
    OITSUColor *mBorderLeftColor;
    OITSUColor *mBorderBottomColor;
    OITSUColor *mBorderRightColor;
    int mBorderStyle[5];
    int mBorderWidth[5];
}

- (id)cssString;
- (id)cssStringForName:(id)arg1;
- (void)setNoneAtLocation:(int)arg1;
- (_Bool)isNoneAtLocation:(int)arg1;
- (int *)borderWidths;
- (int *)borderStyles;
- (id)borderColor;
- (id)initWithEDBorders:(id)arg1;
- (id)initWithOADStroke:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)widthHashNumber;
- (id)styleHashNumber;
- (_Bool)hasSameColorsAs:(id)arg1;
- (_Bool)hasSameWidthsAs:(id)arg1;
- (_Bool)hasSameStylesAs:(id)arg1;
- (id)colorString;
- (id)widthString;
- (id)styleString;
- (id)stringFromColor:(id)arg1;
- (id)stringFromWidthEnum:(int)arg1;
- (id)stringFromStyleEnum:(int)arg1;
- (void)setBorderStyleAndWidth:(int)arg1 location:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface EMCellMapper : CMMapper
{
    struct EDCellHeader *edCell;
    EDReference *edMergedCellReference;
    int rowNumber;
    int firstColumn;
    int lastColumn;
    int columnSpan;
    _Bool firstCellFlag;
    _Bool spreadLeftFlag;
    double columnWidth;
}

+ (_Bool)isCellEmpty:(struct EDCellHeader *)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2 height:(double)arg3 nextCell:(struct EDCellHeader *)arg4;
- (void)mapRowColSpansAt:(id)arg1 withState:(id)arg2;
- (void)adjustColumnSpanForGrid:(double *)arg1 columnCount:(unsigned long long)arg2 nextCell:(struct EDCellHeader *)arg3 withState:(id)arg4;
- (_Bool)isCellMerged;
- (_Bool)isCellSpreading:(id)arg1;
- (_Bool)isFirstCell;
- (void)setFirstCellFlag;
- (_Bool)isCellEmpty;
- (int)columnSpan;
- (void)resetColumnSpan:(int)arg1;
- (double)columnWidth;
- (void)setFirstColumn:(int)arg1;
- (int)firstColumn;
- (void)setLastColumn:(int)arg1;
- (int)lastColumn;
- (id)initWithEDCell:(struct EDCellHeader *)arg1 rowInfo:(struct EDRowInfo *)arg2 parent:(id)arg3 state:(id)arg4;
- (id)initWithParent:(id)arg1;
- (id)mapHyperlinkAt:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMCellNumberMapper : CMMapper
{
    double edValue;
    EDStyle *edStyle;
    EDWorkbook *workbook;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)insertRedSpanIfNegativeAt:(id)arg1;
- (id)formatValueAsNumber;
- (id)initWithDoubleValue:(double)arg1 style:(id)arg2 workbook:(id)arg3 parent:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface EMCellTextMapper : CMMapper
{
    EDString *edString;
    EDStyle *edStyle;
}

- (void)mapTextRunsAt:(id)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2 columnWidth:(double)arg3 height:(double)arg4 spreadLeft:(_Bool)arg5;
- (double)contentWidth;
- (id)initWithEDString:(id)arg1 style:(id)arg2 parent:(id)arg3;
- (void)mapVerticalTextAt:(id)arg1 withState:(id)arg2 width:(double)arg3 height:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface EMChartMapper : CMMapper
{
    CHDChart *mChart;
    CMState *mState;
    EDResources *mResources;
    CHDChartType *mMainType;
    CHDSeries *mMainSeries;
    CHDAxis *mBaseAxis;
    CHDAxis *mPrimaryAxis;
    CHDAxis *mSecondaryAxis;
    _Bool mIsHorizontal;
    _Bool mIsStacked;
    _Bool mIsPercentStacked;
    unsigned long long mPieIndex;
    struct {
        _Bool primaryCategoryHasDates;
        _Bool secondaryCategoryHasDates;
        _Bool primaryAxisHasDates;
        _Bool secondaryAxisHasDates;
    } mPlotInfos;
    _Bool mHasDateCategory;
    _Bool mHasPrimaryDateAxis;
    _Bool mHasSecondaryDateAxis;
}

+ (struct CGColor *)newColorWithCalibratedRed:(float)arg1 green:(float)arg2 blue:(float)arg3 alpha:(float)arg4;
- (id).cxx_construct;
- (void)addSeries:(id)arg1 toDescription:(id)arg2 withState:(id)arg3;
- (void)_addStandardSeries:(id)arg1 toDescription:(id)arg2 withState:(id)arg3;
- (void)_addGraphicProperties:(id)arg1 toDescription:(id)arg2 withState:(id)arg3;
- (void)_addUnitAxis:(id)arg1 series:(id)arg2 state:(id)arg3 toDescription:(id)arg4;
- (void)_addCategoryAxis:(id)arg1 series:(id)arg2 state:(id)arg3 toDescription:(id)arg4;
- (void)addLegendToDescription:(id)arg1 chartSize:(struct CGSize)arg2 withState:(id)arg3;
- (void)addBackgroundToDescription:(id)arg1 withState:(id)arg2;
- (void)addTitleToDescription:(id)arg1 withState:(id)arg2;
- (id)copyPdfWithState:(id)arg1 withSize:(struct CGSize)arg2;
- (id)initWithChart:(id)arg1 parent:(id)arg2;
- (id)dateFromXlDateTimeNumber:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMSheetMapper : CMMapper
{
}

- (struct CGSize)preprocessSizeWithState:(id)arg1;
- (int)preprocessHeightWithState:(id)arg1;
- (int)preprocessWidthWithState:(id)arg1;
- (struct CGSize)adjustedSize;
- (int)height;
- (int)width;

@end

__attribute__((visibility("hidden")))
@interface EMChartsheetMapper : EMSheetMapper
{
    EDChartSheet *mChartSheet;
    struct CGRect mBox;
}

- (id).cxx_construct;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (int)preprocessHeightWithState:(id)arg1;
- (int)preprocessWidthWithState:(id)arg1;
- (int)width;
- (id)initWithChartSheet:(id)arg1 parent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EMColumnInfoMapper : CMMapper
{
    EDColumnInfo *edColumnInfo;
    double columnWidth;
    unsigned long long columnSpan;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithDefaultWidth:(double)arg1 span:(unsigned long long)arg2 parent:(id)arg3;
- (id)initWithEDColumnInfo:(id)arg1 maxSpan:(unsigned long long)arg2 parent:(id)arg3;
- (double)columnWidth;

@end

__attribute__((visibility("hidden")))
@interface EMDrawableMapper : CMDrawableMapper
{
    double *mRowGrid;
    double *mColumnGrid;
}

+ (_Bool)isAnchorRelative:(id)arg1;
- (void)mapTextBoxAt:(id)arg1 withState:(id)arg2;
- (struct CGRect)mapAnchorToRect:(id)arg1 rowGrid:(double *)arg2 columnGrid:(double *)arg3;
- (struct CGPoint)anchorMarkerToPosition:(struct EDCellAnchorMarker)arg1 rowGrid:(double *)arg2 columnGrid:(double *)arg3 start:(_Bool)arg4 relative:(_Bool)arg5;
- (struct CGRect)getImageRect;
- (void)mapBounds;
- (void)setBoundingBox;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithOADDrawable:(id)arg1 rowGrid:(double *)arg2 columnGrid:(double *)arg3;
- (id)initWithChartDrawable:(id)arg1 box:(struct CGRect)arg2 parent:(id)arg3;
- (id)initWithOADDrawable:(id)arg1 parent:(id)arg2;
- (void)mapDiagramAt:(id)arg1 withState:(id)arg2;
- (void)mapChartAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtGroupAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtShapeAt:(id)arg1 withState:(id)arg2;
- (id)workbookMapper;
- (id)worksheetMapper;

@end

__attribute__((visibility("hidden")))
@interface EMEnumProperty : CMProperty
{
    int wdValue;
}

+ (id)mapUnderlineValue:(int)arg1;
+ (id)mapVerticalAlignmentValue:(int)arg1;
+ (id)mapHorizontalAlignmentValue:(int)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)cssStringForName:(id)arg1;
- (id)mapUnderline;
- (id)mapVerticalAlignment;
- (id)mapHorizontalAlignment;
- (int)value;
- (id)initWithEnum:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMFPlayer : NSObject
{
    MFGraphicsDevice *m_gdi;
    _Bool m_headerDone;
    EMFPlusPlayer *m_emfPlusPlayer;
    _Bool m_ignoreEMFRecords;
    _Bool m_ignoreEMFPlusRecords;
}

+ (struct CGRect)boundsInPoints:(id)arg1;
+ (struct CGRect)boundsInLogicalUnits:(id)arg1;
- (int)playSetMetaRgn:(unsigned int)arg1:(const char *)arg2;
- (int)playIntersectClipRect:(unsigned int)arg1:(const char *)arg2;
- (int)playExcludeClipRect:(unsigned int)arg1:(const char *)arg2;
- (int)playInvertRgn:(unsigned int)arg1:(const char *)arg2;
- (int)playPaintRgn:(unsigned int)arg1:(const char *)arg2;
- (int)playFillRgn:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectClipRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectClipPath:(unsigned int)arg1:(const char *)arg2;
- (int)playStrokeAndFillPath:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3:(_Bool)arg4;
- (int)playCloseFigure:(unsigned int)arg1:(const char *)arg2;
- (int)playWidenPath:(unsigned int)arg1:(const char *)arg2;
- (int)playEndPath:(unsigned int)arg1:(const char *)arg2;
- (int)playAbortPath:(unsigned int)arg1:(const char *)arg2;
- (int)playBeginPath:(unsigned int)arg1:(const char *)arg2;
- (int)playSetRop2:(unsigned int)arg1:(const char *)arg2;
- (int)playSetMiterLimit:(unsigned int)arg1:(const char *)arg2;
- (int)playSetPolyFillMode:(unsigned int)arg1:(const char *)arg2;
- (int)playStretchDIBits:(unsigned int)arg1:(const char *)arg2;
- (int)playSetDIBitsToDevice:(unsigned int)arg1:(const char *)arg2;
- (int)playPlgBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playMaskBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playStretchBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playBitBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playAngleArc:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolyPolyLine:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolyPolygon:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playRectangle:(unsigned int)arg1:(const char *)arg2;
- (int)playEllipse:(unsigned int)arg1:(const char *)arg2;
- (int)playPie:(unsigned int)arg1:(const char *)arg2;
- (int)playChord:(unsigned int)arg1:(const char *)arg2;
- (int)playArcTo:(unsigned int)arg1:(const char *)arg2;
- (int)playArc:(unsigned int)arg1:(const char *)arg2;
- (int)playSetArcDirection:(unsigned int)arg1:(const char *)arg2;
- (int)playMoveToEx:(unsigned int)arg1:(const char *)arg2;
- (int)playLineTo:(unsigned int)arg1:(const char *)arg2;
- (int)playRestoreDC:(unsigned int)arg1:(const char *)arg2;
- (int)playSaveDC:(unsigned int)arg1:(const char *)arg2;
- (int)playSetStretchBltMode:(unsigned int)arg1:(const char *)arg2;
- (int)playRoundRect:(unsigned int)arg1:(const char *)arg2;
- (int)playPolyLineTo:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolyLine:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolygon:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolyBezierTo:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolyBezier:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playPolyDraw:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playSetMapMode:(unsigned int)arg1:(const char *)arg2;
- (int)playSetBrushOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playSetBkMode:(unsigned int)arg1:(const char *)arg2;
- (int)playSetBkColour:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextJustification:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextColour:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextAlign:(unsigned int)arg1:(const char *)arg2;
- (int)playExtTextOutW:(unsigned int)arg1:(const char *)arg2;
- (int)playExtTextOutA:(unsigned int)arg1:(const char *)arg2;
- (int)playExtTextOut:(unsigned int)arg1:(const char *)arg2:(_Bool)arg3;
- (int)playCreateDibPatternBrushPT:(unsigned int)arg1:(const char *)arg2;
- (int)playCreateMonoBrush:(unsigned int)arg1:(const char *)arg2;
- (int)playCreateBrushIndirect:(unsigned int)arg1:(const char *)arg2;
- (int)playExtCreateFontIndirectW:(unsigned int)arg1:(const char *)arg2;
- (int)playRealizePalette:(unsigned int)arg1:(const char *)arg2;
- (int)playResizePalette:(unsigned int)arg1:(const char *)arg2;
- (int)playSetPaletteEntries:(unsigned int)arg1:(const char *)arg2;
- (int)playCreatePalette:(unsigned int)arg1:(const char *)arg2;
- (int)playExtCreatePen:(unsigned int)arg1:(const char *)arg2;
- (int)playCreatePen:(unsigned int)arg1:(const char *)arg2;
- (int)playDeleteObject:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectObject:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectPalette:(unsigned int)arg1:(const char *)arg2;
- (int)playScaleViewportExt:(unsigned int)arg1:(const char *)arg2;
- (int)playSetViewportOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playSetViewportExt:(unsigned int)arg1:(const char *)arg2;
- (int)playModifyWorldTransform:(unsigned int)arg1:(const char *)arg2;
- (int)playSetWorldTransform:(unsigned int)arg1:(const char *)arg2;
- (int)playScaleWindowExt:(unsigned int)arg1:(const char *)arg2;
- (int)playSetWindowOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playSetWindowExt:(unsigned int)arg1:(const char *)arg2;
- (int)playUnsupported:(unsigned int)arg1:(const char *)arg2:(const char *)arg3;
- (int)playUnknown:(unsigned int)arg1:(unsigned int)arg2:(const char *)arg3;
- (int)playHeader:(unsigned int)arg1:(const char *)arg2;
- (void)done;
- (int)play:(unsigned int)arg1:(const char *)arg2;
- (id)getGdi;
- (void)setIgnoreEMFPlusRecords:(_Bool)arg1;
- (void)setIgnoreEMFRecords:(_Bool)arg1;
- (void)dealloc;
- (id)initWithGraphicsDevice:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMFPlusPlayer : NSObject
{
    MFPGraphics *mGraphics;
    EMFPlayer *mOwner;
    int mLargeType;
    unsigned short mLargeFlags;
    unsigned int mLargeSize;
    NSMutableData *mLargeData;
    MFPEffect *mEffect;
}

+ (float)firstTabPosPastPos:(float)arg1 stringFormat:(id)arg2 isExplicit:(_Bool *)arg3;
+ (int)serializableObjectTypeForGUID:(id)arg1;
- (int)play:(const char *)arg1:(unsigned int)arg2;
- (void)resetLargeRecord;
- (int)playRecord:(int)arg1:(const char *)arg2:(unsigned int)arg3:(unsigned short)arg4;
- (int)playSerializableObject:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playColorCurveEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playRedEyeCorrectionEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playColorBalanceEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playTintEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playLevelsEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playHueSaturationLightnessEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playBrightnessContrastEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playColorLUTEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playColorMatrixEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playSharpenEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playBlurEffectWithData:(const char *)arg1 size:(unsigned int)arg2;
- (int)playSetCompositingQuality:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetCompositingMode:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetPixelOffsetMode:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetInterpolationMode:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetTextContrast:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetTextRenderingHint:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetAntiAliasMode:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetRenderingOrigin:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playOffsetClip:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetClipRegion:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetClipPath:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetClipRect:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)setClipPath:(id)arg1 flags:(unsigned short)arg2;
- (int)playResetClip:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetPageTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playRotateWorldTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playScaleWorldTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playTranslateWorldTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playMultiplyWorldTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playResetWorldTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSetWorldTransform:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playEndContainer:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playBeginContainerNoParams:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playBeginContainer:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playRestore:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playSave:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playGetDC:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawDriverString:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawString:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawImagePoints:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawImage:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playFillPath:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawPath:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawCurve:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawClosedCurve:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playFillClosedCurve:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawBeziers:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawPie:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playFillPie:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawArc:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawLines:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playFillPolygon:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawRects:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playFillRects:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playDrawEllipse:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playFillEllipse:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playClear:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playStrokePath:(id)arg1:(const char *)arg2:(unsigned int)arg3:(unsigned short)arg4;
- (int)playFillPath:(id)arg1:(const char *)arg2:(unsigned int)arg3:(unsigned short)arg4;
- (id)canvasInWorldCoordinates;
- (int)playObject:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playGraphics:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playCustomLineCap:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playImageAttributes:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playStringFormat:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playFont:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playImage:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playRegion:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playPath:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playPen:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)playBrush:(const char *)arg1:(unsigned int)arg2:(unsigned char)arg3;
- (int)readBrush:(const char *)arg1:(unsigned int)arg2 returnBrush:(id *)arg3;
- (int)readGradientBrush:(id)arg1 from:(const char **)arg2 brushFlags:(unsigned int)arg3;
- (int)readPath:(const char *)arg1:(unsigned int)arg2 returnPath:(id *)arg3;
- (int)readImage:(const char *)arg1:(unsigned int)arg2:(id *)arg3;
- (int)playHeader:(const char *)arg1:(unsigned int)arg2:(unsigned short)arg3;
- (int)playUnknown:(const char *)arg1:(unsigned int)arg2:(int)arg3:(unsigned short)arg4;
- (void)setEffect:(id)arg1;
- (id)effect;
- (void)dealloc;
- (id)initWithOwner:(id)arg1 canvas:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface EMFReader : NSObject <MFReader>
{
    EMFPlayer *m_player;
}

- (int)play:(id)arg1;
- (oneway void)release;
- (void)dealloc;
- (id)initWithEMFPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EMNumberFormatter : NSObject
{
    struct __CFNumberFormatter *_genericFormatter;
    struct __CFNumberFormatter *_doubleFormatter;
    struct __CFNumberFormatter *_percentFormatter;
    struct __CFNumberFormatter *_bigNumberFormatter;
    struct __CFNumberFormatter *_smallNumberFormatter;
    struct __CFNumberFormatter *_currencyFormatter;
    struct __CFDateFormatter *_dateFormatter;
    NSString *_excelFormatString;
    NSString *_baseICUFormatString;
    _Bool _isNegativeRed;
    unsigned short _currencySymbol;
    int _formatType;
}

+ (id)formatterForFormat:(id)arg1;
- (void)_parseExcelFormatString:(id)arg1;
- (id)convertedGenericNumberFormatWithFormat:(id)arg1;
- (void)convertGenericNumberFormat:(id)arg1;
- (id)formatDate:(id)arg1;
- (id)formatCurrency:(double)arg1;
- (id)formatDefault:(double)arg1;
- (id)formatPercent:(double)arg1;
- (id)formatDoubleValue:(double)arg1;
- (id)_icuFormatStringForCurrencyFormat;
- (id)formatFraction:(double)arg1;
- (id)formatPhoneNumber:(double)arg1;
- (id)_icuFormatStringForDateFormat;
- (_Bool)isNegativeRed;
- (int)formatType;
- (struct __CFNumberFormatter *)_currencyFormatter;
- (struct __CFDateFormatter *)_dateFormatter;
- (struct __CFNumberFormatter *)_percentFormatter;
- (struct __CFNumberFormatter *)_doubleFormatter;
- (struct __CFNumberFormatter *)_smallNumberFormatter;
- (struct __CFNumberFormatter *)_bigNumberFormatter;
- (struct __CFNumberFormatter *)_genericFormatter;
- (void)dealloc;
- (id)initWithDefaultFormatString;
- (id)initWithExcelFormatString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMRowMapper : CMMapper
{
    EDRowBlock *mRowBlock;
    struct EDRowInfo *mRowInfo;
    double *columnGrid;
    unsigned long long columnCount;
}

+ (void)mapEmptyRowAt:(id)arg1 colspan:(unsigned long long)arg2 height:(double)arg3;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)mapEmptyCellsAt:(id)arg1 withState:(id)arg2 firstColumn:(unsigned long long)arg3 lastColumn:(unsigned long long)arg4;
- (_Bool)isColumnHidden:(unsigned long long)arg1;
- (id)initWithEDRowBlock:(id)arg1 rowInfo:(struct EDRowInfo *)arg2 parent:(id)arg3;
- (void)insertEmptyCellAt:(id)arg1 withColSpan:(unsigned long long)arg2 height:(double)arg3;
- (_Bool)isMergedCell:(struct EDCellHeader *)arg1;
- (struct EDCellHeader *)cellWithColumnNumber:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMSeriesMapper : CMMapper
{
}

- (float)offset;
- (float)markerWidth;
- (struct CGColor *)markerColor;
- (unsigned int)markerType;
- (float)strokeWidth;
- (struct CGColor *)strokeColor;
- (struct CGColor *)fillColor;
- (id)values;
- (_Bool)useSecondaryAxis;
- (unsigned int)chartType;

@end

__attribute__((visibility("hidden")))
@interface EMState : CMState
{
    EDWorkbook *_workbook;
    EDSheet *_currentSheet;
}

@property EDSheet *currentSheet; // @synthesize currentSheet=_currentSheet;
@property(retain) EDWorkbook *workbook; // @synthesize workbook=_workbook;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EMTop : CMTop <OIProgressiveReaderDelegate>
{
    CMArchiveManager *_archiver;
    EMState *_state;
    EMWorkbookMapper *_mapper;
    NSString *_inFileName;
    _Bool _xml;
}

+ (void)fillHTMLArchiveForExcelData:(id)arg1 fileName:(id)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;
+ (void)fillHTMLArchiveForExcelFile:(id)arg1 xmlFlag:(_Bool)arg2 archiver:(id)arg3;
- (void)readerDidEndDocument:(id)arg1;
- (void)readerDidReadElement:(id)arg1 atIndex:(unsigned long long)arg2 inDocument:(id)arg3 isLastElement:(_Bool)arg4;
- (void)readerDidStartDocument:(id)arg1 withElementCount:(long long)arg2;
- (void)dealloc;
- (void)readFile:(id)arg1 xmlFlag:(_Bool)arg2 archiver:(id)arg3;
- (void)readData:(id)arg1 fileName:(id)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;
- (void)readFile:(id)arg1 orData:(id)arg2 withDataFileName:(id)arg3 xmlFlag:(_Bool)arg4 archiver:(id)arg5;
- (void)_streamWorkbook:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMWorkbookMapper : CMMapper <CMMapperRoot>
{
    unsigned long long mRealSheetCount;
    int mWidth;
    int mHeight;
    EDWorkbook *edWorkbook;
    NSMutableArray *mWorksheetUrls;
    NSMutableArray *mWorksheetNames;
    NSMutableArray *mWorksheetGuids;
    NSString *mResourceUrlPrefix;
    NSString *mResourceUrlProtocol;
    NSString *mStyleSheetGuid;
    CMArchiveManager *mArchiver;
    NSString *mFileName;
    unsigned int mSheetIndex;
    _Bool mIsFirstMappedSheet;
    _Bool mIsFrameset;
    OIXMLDocument *mXhtmlDoc;
    OIXMLElement *mBodyElement;
    OIXMLDocument *mTabBarDoc;
    NSString *mTabBarURL;
    NSMutableArray *mSheetURLs;
    double mTabPosition;
    unsigned long long mNumberOfMappedSheets;
    _Bool mHasPushedHeader;
    _Bool mHasPushedFirstSheet;
    _Bool mLoadingMessageVisible;
}

+ (id)borderWidthCache;
+ (id)borderStyleCache;
+ (id)cssStyleCache;
- (void)finishMappingWithState:(id)arg1;
- (void)mapElement:(id)arg1 atIndex:(unsigned long long)arg2 withState:(id)arg3 isLastElement:(_Bool)arg4;
- (id)_copyStringForSheet:(id)arg1 atIndex:(unsigned long long)arg2 withState:(id)arg3 andMapper:(id)arg4;
- (void)startMappingWithState:(id)arg1;
- (void)_pushTabForSheet:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)_mainPageBack;
- (id)_frontPageByCopyingMainPage;
- (struct CGSize)pageSizeForDevice;
- (_Bool)hasMultipleSheets;
- (id)styleMatrix;
- (id)documentTitle;
- (id)archiver;
- (_Bool)isMultiPage;
- (id)blipAtIndex:(unsigned int)arg1;
- (id)fileName;
- (void)setFileName:(id)arg1;
- (id)workbook;
- (void)dealloc;
- (id)initWithEDWorkbook:(id)arg1 archiver:(id)arg2;
- (void)mapBodyStyleAt:(id)arg1;
- (id)copySheetMapperWithEdSheet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EMWorksheetMapper : EMSheetMapper
{
    EDWorksheet *edWorksheet;
    CMStyle *mStyle;
    long long mMaxPopulatedColumn;
    long long mMaxPopulatedRow;
    double *mColumnGrid;
    double *mRowGrid;
    int mWidth;
    int mHeight;
    ECColumnWidthConvertor *mColumnWidthConvertor;
}

- (struct CGSize)preprocessSizeWithState:(id)arg1;
- (struct CGSize)preprocessDrawableSizeWithState:(id)arg1;
- (int)preprocessHeightWithState:(id)arg1;
- (int)preprocessWidthWithState:(id)arg1;
- (id)columnWidthConvertor;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (int)height;
- (int)width;
- (double)defaultColumnWidth;
- (double)xlColumnWidthToPoints:(double)arg1;
- (double)defaultRowHeight;
- (long long)maxRowNumber;
- (double *)rowGrid;
- (unsigned long long)columnCount;
- (double *)columnGrid;
- (_Bool)isVisible;
- (void)dealloc;
- (void)_initWithState:(id)arg1;
- (id)initWithEDWorksheet:(id)arg1 parent:(id)arg2;
- (void)mapTableStyleAt:(id)arg1 withState:(id)arg2;
- (void)mapTableAt:(id)arg1 withState:(id)arg2;
- (void)mapDrawablesAt:(id)arg1 withState:(id)arg2;
- (void)mapGridAt:(id)arg1;
- (void)mapColumnInfosAt:(id)arg1 withState:(id)arg2;
- (void)countRowsAndColumnsWithState:(id)arg1;
- (void)setRowGrid;

@end

__attribute__((visibility("hidden")))
@interface EPBorder : EDBorder
{
    unsigned long long mPrecedence;
}

+ (id)borderWithBorder:(id)arg1 precedence:(unsigned long long)arg2 resources:(id)arg3;
- (unsigned long long)precedence;
- (_Bool)isEqualToBorder:(id)arg1;
- (id)initWithBorder:(id)arg1 precedence:(unsigned long long)arg2 resources:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EPFormulaCleaner : EDProcessor
{
    EDSheet *mCurrentSheet;
    EDFormula *mFormula;
    EDFormula *mTokensToClean;
    EDName *mParentName;
    int mRowOffset;
    int mColumnOffset;
    EDRowBlocks *mBaseFormulaRowBlocks;
    OITSUIntDictionary *mNameArrayedTestCache;
    OITSUIntDictionary *mNameCircularReferenceTestCache;
}

- (void)cleanFormula:(id)arg1 name:(id)arg2;
- (void)cleanFormula:(id)arg1 sheet:(id)arg2;
- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;
- (void)dealloc;
- (void)prepareToProcessFormula:(id)arg1 sheet:(id)arg2 name:(id)arg3;
- (void)reset;
- (void)reportWarning:(int)arg1 parameter:(id)arg2;
- (void)reportWarning:(int)arg1;
- (id)newFormulaToCleanFromSharedFormula:(id)arg1;
- (_Bool)doesNameIndexContainCircularReferences:(unsigned int)arg1 sheetIndex:(unsigned long long)arg2 previousNameIndexes:(set_55031187 *)arg3;
- (_Bool)isArrayedFormulaSupported:(id)arg1 allowSimpleRanges:(_Bool)arg2;
- (id)useEvaluationStackToGetParameter:(unsigned int)arg1 tokenIndex:(unsigned int)arg2 allReferencesAllowed:(_Bool)arg3 success:(_Bool *)arg4;
- (unsigned int)useEvaluationStackToGetParameter:(unsigned int)arg1 tokenIndex:(unsigned int)arg2;
- (_Bool)useEvaluationStackToCheckFunctionId:(int)arg1 functionName:(id)arg2 tokenIndex:(unsigned int)arg3;
- (void)applyMaxCellsInName:(id)arg1;
- (void)updateWorksheet:(id)arg1 row:(int)arg2 column:(int)arg3 inDictionary:(id)arg4;
- (_Bool)checkCustomFunction:(unsigned int)arg1;
- (_Bool)checkSupportedAddInName:(id)arg1 externalLink:(_Bool)arg2;
- (_Bool)checkFunctionId:(int)arg1 tokenIndex:(unsigned int)arg2;
- (_Bool)cleanName:(unsigned int)arg1 nameIndex:(unsigned int)arg2 sheetIndex:(unsigned long long)arg3 tokenOffset:(int *)arg4;
- (id)worksheetFromLinkReferenceIndex:(unsigned int)arg1;
- (_Bool)isLinkReferenceIndexSupported:(unsigned int)arg1 allowExternal:(_Bool)arg2;
- (_Bool)combineCellReferences:(unsigned int)arg1 tokenOffset:(int *)arg2;
- (_Bool)cleanRange:(unsigned int)arg1 tokenOffset:(int *)arg2;
- (_Bool)cleanUnion:(unsigned int)arg1;
- (_Bool)cleanFuncVar:(unsigned int)arg1;
- (_Bool)cleanFunc:(unsigned int)arg1;
- (_Bool)cleanNameX:(unsigned int)arg1 tokenOffset:(int *)arg2;
- (_Bool)cleanName:(unsigned int)arg1 tokenOffset:(int *)arg2;
- (_Bool)cleanArea3D:(unsigned int)arg1;
- (_Bool)cleanRef3D:(unsigned int)arg1;
- (_Bool)cleanArea:(unsigned int)arg1 updateSheet:(_Bool)arg2;
- (_Bool)cleanRef:(unsigned int)arg1 updateSheet:(_Bool)arg2;
- (_Bool)cleanArray:(unsigned int)arg1;
- (void)updateSheet:(id)arg1 rowMin:(int)arg2 rowMinRelative:(_Bool)arg3 rowMax:(int)arg4 rowMaxRelative:(_Bool)arg5 columnMin:(int)arg6 columnMinRelative:(_Bool)arg7 columnMax:(int)arg8 columnMaxRelative:(_Bool)arg9;
- (void)updateSheet:(id)arg1 row:(int)arg2 rowRelative:(_Bool)arg3 column:(int)arg4 columnRelative:(_Bool)arg5;
- (_Bool)isThereContentOutsideOfLassoBoundsForSheet:(id)arg1 rowMin:(int)arg2 rowMax:(int)arg3 columnMin:(int)arg4 columnMax:(int)arg5;
- (_Bool)isReferenceValidInLassoForSheet:(id)arg1 rowMin:(int)arg2 rowMinRelative:(_Bool)arg3 rowMax:(int)arg4 rowMaxRelative:(_Bool)arg5 columnMin:(int)arg6 columnMinRelative:(_Bool)arg7 columnMax:(int)arg8 columnMaxRelative:(_Bool)arg9;
- (_Bool)isReferenceValidInLassoForRow:(int)arg1 rowRelative:(_Bool)arg2 column:(int)arg3 columnRelative:(_Bool)arg4;
- (void)addOffsetsToRow:(int *)arg1 rowRelative:(_Bool)arg2 column:(int *)arg3 columnRelative:(_Bool)arg4;
- (_Bool)cleanTokenAtIndex:(unsigned int)arg1 tokenOffset:(int *)arg2;
- (void)cleanFormula:(id)arg1 sheet:(id)arg2 name:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EPFormulaCollectionCleaner : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EPMergedRegionScanner : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;
- (_Bool)processMergedRegion:(id)arg1 inWorksheet:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EPNameFormulaCleaner : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EPNameFormulaTokenizer : EDProcessor
{
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (_Bool)isObjectSupported:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EPStyleFlattener : EDProcessor
{
    EDWorksheet *mWorksheet;
    EDRowBlocks *mRowBlocks;
    EDRowBlock *mCurrentRowBlock;
    EDColumnInfoCollection *mColumnInfos;
    NSArray *mKeys;
    NSMutableArray *mRanges;
    ECIntToTwoIntKeyCache *mFlattenedStyleCache;
    ECIntToTwoIntKeyCache *mFillCache;
    int mFirstRow;
    int mLastRow;
    int mFirstColumn;
    int mLastColumn;
    unsigned int mFirstRowStripeSize;
    unsigned int mSecondRowStripeSize;
    unsigned int mFirstColumnStripeSize;
    unsigned int mSecondColumnStripeSize;
}

- (void)applyProcessorToObject:(id)arg1 sheet:(id)arg2;
- (void)dealloc;
- (id)copyFlattenFont:(id)arg1 differentialFont:(id)arg2;
- (unsigned long long)flattenFillIndex:(unsigned long long)arg1 differentialFill:(id)arg2;
- (id)copyFlattenBorder:(int)arg1 borders:(id)arg2 differentialBorders:(id)arg3 flag:(_Bool)arg4 precedence:(unsigned long long)arg5 row:(int)arg6 column:(int)arg7;
- (id)copyFlattenBorders:(id)arg1 differentialBorders:(id)arg2 borderFlags:(int)arg3 precedence:(unsigned long long)arg4 row:(int)arg5 column:(int)arg6;
- (void)applyDifferentialStyle:(id)arg1 borderFlags:(int)arg2 precedence:(unsigned long long)arg3 toCell:(struct EDCellHeader **)arg4 row:(int)arg5 column:(int)arg6;
- (void)applyStyleElements:(id)arg1 toCell:(struct EDCellHeader *)arg2 row:(int)arg3 column:(int)arg4;
- (struct EDCellHeader *)cellWithSetupStyleAtRowNumber:(int)arg1 columnNumber:(int)arg2;
- (void)processObject:(id)arg1;
- (void)clearCache;
- (void)cacheSizes:(id)arg1 inObject:(id)arg2;
- (void)cacheRange:(id)arg1;
- (int)borderFlagsForStyleType:(int)arg1 row:(int)arg2 column:(int)arg3;
- (id)keysInTheOrderTheyShouldBeApplied;
- (id)newExtractedCellStyleElements:(id)arg1 parentScope:(id)arg2 row:(int)arg3 column:(int)arg4;
- (id)newExtractedRowStyleElements:(id)arg1 parentScope:(id)arg2 row:(int)arg3;
- (id)newExtractedGlobalStyleElements:(id)arg1;
- (id)newExtractedKeys:(id)arg1 from:(id)arg2 parent:(id)arg3;
- (id)wrapDifferentialStyleInATableStyleElement:(id)arg1 type:(int)arg2;
- (id)styleFromObject:(id)arg1;
- (id)collectionFromWorksheet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EPPivotTableStyleFlattener : EPStyleFlattener
{
    EDPivotTable *mPivotTable;
    long long mFirstHeaderRow;
    long long mFirstDataRow;
    long long mFirstDataColumn;
    unsigned long long mRowFieldsCount;
    unsigned long long mColumnFieldsCount;
    unsigned long long mPageFieldsCount;
}

- (void)clearCache;
- (void)cacheSizes:(id)arg1 inObject:(id)arg2;
- (int)borderFlagsForStyleType:(int)arg1 row:(int)arg2 column:(int)arg3;
- (id)keysInTheOrderTheyShouldBeApplied;
- (id)newExtractedCellStyleElements:(id)arg1 parentScope:(id)arg2 row:(int)arg3 column:(int)arg4;
- (id)newExtractedRowStyleElements:(id)arg1 parentScope:(id)arg2 row:(int)arg3;
- (id)styleFromObject:(id)arg1;
- (id)collectionFromWorksheet:(id)arg1;
- (_Bool)isObjectSupported:(id)arg1;
- (void)addSubtotalColumnLevel:(unsigned int)arg1 to:(id)arg2;
- (void)addSubtotalRowLevel:(unsigned int)arg1 to:(id)arg2;
- (void)addColumnSubheadingLevel:(unsigned int)arg1 to:(id)arg2;
- (void)addRowSubheadingLevel:(unsigned int)arg1 to:(id)arg2;
- (unsigned int)constrainLevel:(unsigned int)arg1;
- (int)stripeOffset:(int)arg1 row:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface EPTableStyleFlattener : EPStyleFlattener
{
    EDTable *mTable;
    unsigned long long mHeaderRowCount;
    unsigned long long mTotalsRowCount;
}

- (void)clearCache;
- (void)cacheSizes:(id)arg1 inObject:(id)arg2;
- (int)borderFlagsForStyleType:(int)arg1 row:(int)arg2 column:(int)arg3;
- (id)keysInTheOrderTheyShouldBeApplied;
- (id)newExtractedCellStyleElements:(id)arg1 parentScope:(id)arg2 row:(int)arg3 column:(int)arg4;
- (id)newExtractedRowStyleElements:(id)arg1 parentScope:(id)arg2 row:(int)arg3;
- (id)newExtractedGlobalStyleElements:(id)arg1;
- (id)styleFromObject:(id)arg1;
- (id)collectionFromWorksheet:(id)arg1;
- (_Bool)isObjectSupported:(id)arg1;
- (int)stripeOffset:(int)arg1 row:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface ESDBlipContext : NSObject <OCDDelayedMediaContext>
{
    struct SsrwOOStream *mStream;
    unsigned int mStreamID;
    unsigned int mStartOffset;
    unsigned int mByteCount;
}

- (id)dataRep;
- (struct SsrwOOStream *)stream;
- (_Bool)loadDelayedNode:(id)arg1;
- (_Bool)saveDelayedMedia:(id)arg1 toFile:(id)arg2;
- (id)initWithOffset:(unsigned int)arg1 byteCount:(unsigned int)arg2 stream:(struct SsrwOOStream *)arg3 streamID:(unsigned int)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface ESDContainer : ESDObject
{
    NSMutableArray *mChildren;
}

+ (void)readChildrenOfObject:(struct EshObject *)arg1 reader:(struct OcReader *)arg2 toArray:(id)arg3;
+ (void)pbReadChildrenOfObject:(struct EshObject *)arg1 toArray:(id)arg2 state:(id)arg3;
- (void)writeToWriter:(struct OcWriter *)arg1;
- (id)containerChildAt:(unsigned long long)arg1;
- (id)containerChildOfType:(unsigned short)arg1 instance:(short)arg2 mustExist:(_Bool)arg3;
- (id)firstContainerChildOfType:(unsigned short)arg1 mustExist:(_Bool)arg2;
- (id)containerFromObject:(id)arg1 mustExist:(_Bool)arg2;
- (id)childOfType:(unsigned short)arg1 instance:(short)arg2;
- (unsigned long long)indexOfFirstChildOfType:(unsigned short)arg1 afterIndex:(unsigned long long)arg2;
- (id)firstChildOfType:(unsigned short)arg1 afterIndex:(unsigned long long)arg2;
- (id)firstChildOfType:(unsigned short)arg1 afterChild:(id)arg2;
- (id)firstChildOfType:(unsigned short)arg1;
- (void)removeChild:(id)arg1;
- (id)insertEshChild:(struct EshObject *)arg1 at:(unsigned long long)arg2;
- (void)insertChild:(id)arg1 at:(unsigned long long)arg2;
- (struct EshObject *)addAtomChildOfType:(unsigned short)arg1;
- (id)addContainerChildOfType:(unsigned short)arg1;
- (id)addChildOfType:(unsigned short)arg1;
- (id)addEshChild:(struct EshObject *)arg1;
- (void)addChild:(id)arg1;
- (id)childAt:(unsigned long long)arg1;
- (unsigned long long)childCount;
- (struct EshContainer *)eshContainer;
- (void)dealloc;
- (id)initFromReader:(struct OcReader *)arg1 type:(unsigned short)arg2 version:(unsigned short)arg3;
- (id)initWithEshObject:(struct EshObject *)arg1;
- (id)shapeContainer;
- (struct EshGroup *)eshGroup;
- (id)ebInitWithType:(unsigned short)arg1 version:(unsigned short)arg2 state:(id)arg3;
- (id)pbInitWithType:(unsigned short)arg1 version:(unsigned short)arg2 state:(id)arg3;
- (void)addCStringWithChar2String:(const unsigned short *)arg1 instance:(int)arg2;
- (void)addCStringWithNSString:(id)arg1 instance:(int)arg2;
- (id)addPptEshClientChildOfType:(unsigned short)arg1;
- (struct EshObject *)addPptAtomChildOfType:(unsigned short)arg1;
- (id)addPptContainerChildOfType:(unsigned short)arg1;

@end

__attribute__((visibility("hidden")))
@interface ESDDibFileBlipContext : ESDBlipContext
{
}

- (_Bool)loadDelayedNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ESDMetafileBlipContext : ESDBlipContext
{
    unsigned int mCb;
    unsigned int defaultHeaderSize;
}

@property unsigned int defaultHeaderSize; // @synthesize defaultHeaderSize;
- (_Bool)loadDelayedNode:(id)arg1;
- (id)initWithOffset:(unsigned int)arg1 byteCount:(unsigned int)arg2 uncompressed:(unsigned int)arg3 stream:(struct SsrwOOStream *)arg4 streamID:(unsigned int)arg5;

@end

__attribute__((visibility("hidden")))
@interface ESDObjectFactory : NSObject
{
    struct EshObjectFactory *eshObjectFactory;
    NSMutableArray *eshObjectFactoryStack;
}

+ (id)threadLocalFactory;
- (void)setEshFactory:(struct EshObjectFactory *)arg1;
- (void)restoreHostEshFactory;
- (void)replaceHostEshFactoryWith:(struct EshObjectFactory *)arg1;
- (struct EshObject *)createObjectWithType:(unsigned short)arg1 version:(unsigned short)arg2;
- (struct EshObject *)createObjectWithType:(unsigned short)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ESDRoot : ESDObject
{
    NSMutableArray *mChildren;
}

- (void)writeToWriter:(struct OcWriter *)arg1;
- (void)addChild:(id)arg1;
- (id)childAt:(unsigned long long)arg1;
- (unsigned long long)childCount;
- (struct EshRoot *)eshRoot;
- (void)dealloc;
- (id)initFromReader:(struct OcReader *)arg1;
- (id)init;
- (id)initWithEshObject:(struct EshObject *)arg1;
- (id)pbReferenceWithID:(unsigned int)arg1;
- (id)initWithPbState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXAlignmentInfo : NSObject
{
}

+ (id)edAlignmentInfoFromVmlAlignmentInfoElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edAlignmentInfoFromXmlAlignmentInfoElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)initialize;
+ (int)edVerticalAlignFromVerticalAlignString:(id)arg1;
+ (int)edHorizontalAlignFromHorizontalAlignString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXBorders : NSObject
{
}

+ (id)edBordersFromXmlBordersElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)initialize;
+ (int)edDiagStyleFromXmlElement:(struct _xmlNode *)arg1;
+ (int)edBorderStyleFromXmlBorderStyleString:(id)arg1;
+ (id)edBorderFromXmlElement:(struct _xmlNode *)arg1 diagonalType:(int)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXBordersTable : NSObject
{
}

+ (unsigned long long)xlBordersIndexFromEDBordersIndex:(unsigned long long)arg1;
+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXCell : NSObject
{
}

+ (void)edCellFromXmlCellElement:(struct _xmlNode *)arg1 edRowInfo:(struct EDRowInfo **)arg2 edRowBlock:(id)arg3 edRowBlocks:(id)arg4 state:(id)arg5;
+ (void)initialize;
+ (int)edErrorFromXmlErrorString:(id)arg1;
+ (double)dateTimeNumberFromXmlDateString:(id)arg1 state:(id)arg2;
+ (_Bool)edBoolFromXmlBoolString:(id)arg1;
+ (int)edCellTypeFromXmlCellElement:(struct _xmlNode *)arg1 isDate:(_Bool *)arg2 stringIndex:(_Bool *)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXCellFormat : NSObject
{
}

+ (id)edCellFormatFromXmlCellFormatElement:(struct _xmlNode *)arg1 isStyle:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXCellFormatTable : NSObject
{
}

+ (void)readFromCellStylesElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readFromCellStyleXfsElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readFromCellXfsElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readCellFormatsFrom:(struct _xmlNode *)arg1 isStyle:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXChartsheet : NSObject
{
}

+ (void)readTables:(id)arg1;
+ (void)readOtherSheetComponentsWithState:(id)arg1;
+ (_Bool)readDistinctSheetElementsFrom:(struct _xmlTextReader *)arg1 state:(id)arg2;
+ (id)edSheetWithState:(id)arg1;
+ (void)setupProcessors:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXColorReference : NSObject
{
}

+ (unsigned int)colorIndexForColor:(id)arg1 state:(id)arg2;
+ (id)getStringFromColor:(id)arg1;
+ (id)edColorReferenceFromXmlColorElement:(struct _xmlNode *)arg1 callerClass:(Class)arg2 state:(id)arg3;
+ (id)autoColorWithCallerClass:(Class)arg1 resources:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXColorTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readOADThemeFrom:(id)arg1 toEDThemeColors:(id)arg2;
+ (void)readColorsFrom:(struct _xmlNode *)arg1 toEDColors:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXColumnInfo : NSObject
{
}

+ (id)edColumnInfoFromXmlColumnInfoElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface EXConditionalFormatting : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 x14:(_Bool)arg2 state:(id)arg3;
+ (void)readConditionalFormattingsFrom:(struct _xmlNode *)arg1 x14:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXConditionalFormattingRule : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 x14:(_Bool)arg2 edConditionalFormatting:(id)arg3 edReference:(id)arg4 state:(id)arg5;
+ (void)initialize;
+ (int)edTimePeriodFromXmlTimePeriodString:(id)arg1;
+ (int)edOperatorFromXmlOperatorString:(id)arg1;
+ (int)edRuleTypeFromXmlRuleTypeString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXContentFormat : NSObject
{
}

+ (id)edContentFormatFromXmlContentFormatElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXContentFormatTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXDifferentialStyle : NSObject
{
}

+ (id)edDifferentialStyleFromXmlDifferentialStyleElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXDifferentialStyleTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXDrawing : NSObject
{
}

+ (struct EDCellAnchorMarker)readAnchorMarkerFromNode:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readFromPart:(id)arg1 state:(id)arg2;
+ (void)initialize;
+ (void)readDrawableNode:(struct _xmlNode *)arg1 anchor:(id)arg2 state:(id)arg3;
+ (void)readAbsoluteAnchorNode:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readOneCellAnchorNode:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readTwoCellAnchorNode:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXFill : NSObject
{
}

+ (id)edFillFromXmlFillElement:(struct _xmlNode *)arg1 differentialFill:(_Bool)arg2 state:(id)arg3;
+ (id)edFillFromXmlFillElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)initialize;
+ (id)edStopFromXmlGradientElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)edGradientTypeFromXmlGradientTypeString:(id)arg1 state:(id)arg2;
+ (id)edGradientFillFromXmlElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)edPatternTypeFromXmlPatternTypeString:(id)arg1;
+ (id)edPatternFillFromXmlElement:(struct _xmlNode *)arg1 differentialFill:(_Bool)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXFillTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXFont : NSObject
{
}

+ (id)edFontFromXmlFontElement:(struct _xmlNode *)arg1 inConditionalFormat:(_Bool)arg2 state:(id)arg3;
+ (void)initialize;
+ (int)edUnderlineFromXmlUnderlineElement:(struct _xmlNode *)arg1;
+ (int)edScriptFromXmlVertAlignElement:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXFontTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXFormula : NSObject
{
}

+ (id)edTokensForFormulaString:(id)arg1 sheet:(id)arg2 workbook:(id)arg3;
+ (void)applyArrayedFormulasToSheet:(id)arg1 state:(id)arg2;
+ (void)readFrom:(struct _xmlNode *)arg1 rowNumber:(int)arg2 columnNumber:(int)arg3 edCell:(struct EDCellHeader *)arg4 edRowBlocks:(id)arg5 state:(id)arg6;
+ (id)edFormulaFromXmlFormulaElement:(struct _xmlNode *)arg1 formulaClass:(Class)arg2 state:(id)arg3;
+ (id)edFormulaFromXmlFormulaElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)applyArrayedFormula:(id)arg1 edReference:(id)arg2 edWorksheet:(id)arg3 state:(id)arg4;
+ (Class)formulaClassFromXmlFormulaElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edTokensForFormulaString:(id)arg1 formulaClass:(Class)arg2 rowNumber:(int)arg3 columnNumber:(int)arg4 sheet:(id)arg5 workbook:(id)arg6;
+ (id)readFrom:(struct _xmlNode *)arg1 formulaClass:(Class)arg2 rowNumber:(int)arg3 columnNumber:(int)arg4 edCell:(struct EDCellHeader *)arg5 edRowBlocks:(id)arg6 state:(id)arg7;

@end

__attribute__((visibility("hidden")))
@interface EXHeaderFooter : NSObject
{
}

+ (id)edHeaderFooterFromXmlHeaderFooterElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXHyperlink : NSObject
{
}

+ (id)edHyperlinkFromXmlHyperlinkElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXMergeTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXNameTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edNameFromXmlNameElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAVReadState : OCXReadState
{
    Class mClient;
    OAXDrawingState *mOAXState;
    OCPPackagePart *mPackagePart;
    NSMutableDictionary *mShapeTypes;
    NSMutableDictionary *mShapeIdMap;
    NSMutableSet *mDualDrawables;
}

- (id)blipRefForURL:(id)arg1;
- (unsigned int)officeArtShapeIdWithVmlShapeId:(id)arg1;
- (_Bool)isDualDrawable:(id)arg1;
- (void)addDualDrawable:(id)arg1;
- (void)setDrawable:(id)arg1 forVmlShapeId:(id)arg2;
- (id)drawableForVmlShapeId:(id)arg1;
- (void)setShapeType:(unsigned short)arg1 forId:(id)arg2;
- (unsigned short)shapeTypeForId:(id)arg1;
- (void)setPackagePart:(id)arg1;
- (id)packagePart;
- (void)setOAXState:(id)arg1;
- (id)oaxState;
- (Class)client;
- (void)resetForNewDrawing;
- (void)dealloc;
- (id)initWithClient:(Class)arg1 packagePart:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXOAVState : OAVReadState
{
    EXReadState *mEXReadState;
}

- (id)exState;
- (id)initWithEXReadState:(id)arg1 packagePart:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXClient : NSObject <OAXClient>
{
}

+ (_Bool)sourceDrawableIsTopLevel:(struct _xmlNode *)arg1;
- (id)readGraphicData:(struct _xmlNode *)arg1 state:(id)arg2;
- (id)readOle:(struct _xmlNode *)arg1 state:(id)arg2;
- (void)postprocessHyperlink:(id)arg1 relationship:(id)arg2 state:(id)arg3;
- (id)readClientTextField:(struct _xmlNode *)arg1 paragraph:(id)arg2 state:(id)arg3;
- (void)readBlipExtWithURI:(id)arg1 fromNode:(struct _xmlNode *)arg2 toDrawable:(id)arg3 state:(id)arg4;
- (void)readClientDataFromGraphicalFramePropertiesNode:(struct _xmlNode *)arg1 toDrawable:(id)arg2 state:(id)arg3;
- (void)readClientDataFromGraphicDataNode:(struct _xmlNode *)arg1 toDiagram:(id)arg2 state:(id)arg3;
- (void)readClientDataFromGroupNode:(struct _xmlNode *)arg1 toGroup:(id)arg2 state:(id)arg3;
- (void)readClientDataFromPictureNode:(struct _xmlNode *)arg1 toImage:(id)arg2 state:(id)arg3;
- (void)readClientDataFromShapeNode:(struct _xmlNode *)arg1 toShape:(id)arg2 state:(id)arg3;
- (void)readClientDataFromNode:(struct _xmlNode *)arg1 toDrawable:(id)arg2 state:(id)arg3;
- (struct _xmlNode *)genericNonVisualPropertiesNodeForDrawableNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;
- (id)readClientDrawableFromXmlNode:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXOfficeArtClient : OAXClient
{
    _Bool mAutoChartFillIsHollow;
    _Bool mAutoChartStrokeIsHollow;
}

@property _Bool autoChartStrokeIsHollow; // @synthesize autoChartStrokeIsHollow=mAutoChartStrokeIsHollow;
@property _Bool autoChartFillIsHollow; // @synthesize autoChartFillIsHollow=mAutoChartFillIsHollow;
- (_Bool)chartAutoStrokeIsHollow;
- (_Bool)chartAutoFillIsHollow;
- (void)readClientDataFromNode:(struct _xmlNode *)arg1 toDrawable:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXOfficeArtState : OAXDrawingState
{
    EXReadState *mExcelState;
}

- (id)excelState;
- (id)initWithExcelState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXPageSetup : NSObject
{
}

+ (id)edPageMarginsFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edPageSetupFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)initialize;
+ (int)edPageOrderFromPageOrderString:(id)arg1;
+ (int)edPageOrientationFromPageOrientationString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXPane : NSObject
{
}

+ (id)edPaneFromXMLPaneElement:(struct _xmlNode *)arg1;
+ (void)initialize;
+ (int)edActivePaneEnumFromString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXPivotTable : NSObject
{
}

+ (id)edPivotTableFromXmlPivotTableElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)edPivotAreaTypeFrom:(id)arg1;
+ (int)edPivotConditionalFormatScopeFrom:(id)arg1;
+ (int)edPivotConditionalFormatTypeFrom:(id)arg1;
+ (int)edPivotDatFieldFormatFrom:(id)arg1;
+ (int)edPivotFieldAxisFrom:(id)arg1;
+ (int)edPivotItemTypeFrom:(id)arg1;
+ (void)readPageFieldsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readPivotAreaReferencesFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readPivotAreasFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readConditionalFormatsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readDataFieldsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readFieldItemsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readPivotFieldsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readItemsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readFieldsFrom:(struct _xmlNode *)arg1 toCollection:(id)arg2 state:(id)arg3;
+ (void)readLocationFrom:(struct _xmlNode *)arg1 toPivotTable:(id)arg2;
+ (void)readStyleInfoFrom:(struct _xmlNode *)arg1 toPivotTable:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXProtection : NSObject
{
}

+ (id)edProtectionFromXmlElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXReadState : OAVReadState
{
    unsigned int mCurrentSheetIndex;
    EDSheet *mCurrentSheet;
    unsigned long long mCellStyleXfsOffset;
    double mDefaultColumnWidth;
    double mDefaultRowHeight;
    OCPPackagePart *mCurrentPart;
    OCPPackagePart *mWorkbookPart;
    struct map<long, unsigned long, std::__1::less<long>, std::__1::allocator<std::__1::pair<const long, unsigned long>>> mSharedFormulasMap;
    NSMutableArray *mArrayedFormulas;
    EDReference *mSheetDimension;
    EXOfficeArtState *mOfficeArtState;
    EXOAVState *mOAVState;
    _Bool mMaxColumnsWarned;
    _Bool mMaxRowsWarned;
    _Bool mIsPredefinedTableStylesRead;
    NSMutableDictionary *mReferenceForCommentTextBox;
    _Bool mIsPredefinedDxfsBeingRead;
    struct _xmlNs *mRelationshipNS;
    ECColumnWidthConvertor *mColumnWidthConvertor;
    NSMutableArray *mLegacyDrawables;
    EDWorkbook *mWorkbook;
    EDResources *mResources;
    id <TCCancelDelegate> mCancelDelegate;
    TCImportTracing *mTracing;
    CXNamespace *mEXSpreadsheetMLNamespace;
    CXNamespace *mEXSpreadsheetDrawingNamespace;
    CXNamespace *mEXSpreadsheetRelationsNamespace;
    unsigned int mCurrentRowMinColumnIndex;
    unsigned int mCurrentRowMaxColumnIndex;
}

@property(readonly, nonatomic) id <TCCancelDelegate> cancelDelegate; // @synthesize cancelDelegate=mCancelDelegate;
@property(retain, nonatomic) CXNamespace *EXSpreadsheetRelationsNamespace; // @synthesize EXSpreadsheetRelationsNamespace=mEXSpreadsheetRelationsNamespace;
@property(retain, nonatomic) CXNamespace *EXSpreadsheetDrawingNamespace; // @synthesize EXSpreadsheetDrawingNamespace=mEXSpreadsheetDrawingNamespace;
@property(retain, nonatomic) CXNamespace *EXSpreadsheetMLNamespace; // @synthesize EXSpreadsheetMLNamespace=mEXSpreadsheetMLNamespace;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setupNSForXMLFormat:(int)arg1;
- (_Bool)isCancelled;
- (void)reportWorksheetWarning:(struct TCTaggedMessageStructure *)arg1;
- (void)reportWarning:(struct TCTaggedMessageStructure *)arg1;
- (id)legacyDrawables;
- (id)columnWidthConvertor;
- (void)relationshipNameSpaceForWorkbook:(struct _xmlNs *)arg1;
- (struct _xmlNs *)relationshipNameSpaceForWorkbook;
- (void)setPredefinedDxfsBeingRead:(_Bool)arg1;
- (_Bool)isPredefinedDxfsBeingRead;
- (void)resetForNewSheet;
- (void)setPredefinedTableStylesRead:(_Bool)arg1;
- (_Bool)isPredefinedTableStylesRead;
- (id)authorForReference:(id)arg1;
- (id)textBoxForReference:(id)arg1;
- (void)setTextBox:(id)arg1 author:(id)arg2 forReference:(id)arg3;
- (id)oavState;
- (void)setOfficeArtState:(id)arg1;
- (id)officeArtState;
- (void)setSheetDimension:(id)arg1;
- (id)sheetDimension;
- (id)arrayedFormulas;
- (void)addSharedBaseFormulaIndex:(unsigned long long)arg1 withIndex:(long long)arg2;
- (unsigned long long)sharedBaseFormulaIndexWithIndex:(long long)arg1;
- (id)workbookPart;
- (void)setCurrentPart:(id)arg1;
- (id)currentPart;
- (void)setDefaultRowHeight:(double)arg1;
- (double)defaultRowHeight;
- (void)setDefaultColumnWidth:(double)arg1;
- (double)defaultColumnWidth;
- (void)setCellStyleXfsOffset:(unsigned long long)arg1;
- (unsigned long long)cellStyleXfsOffset;
- (void)setCurrentSheet:(id)arg1;
- (id)currentSheet;
- (void)setResources:(id)arg1;
- (id)resources;
- (void)setWorkbook:(id)arg1;
- (id)workbook;
- (void)setCurrentRowMaxColumnIndex:(unsigned int)arg1;
- (unsigned int)currentRowMaxColumnIndex;
- (void)setCurrentRowMinColumnIndex:(unsigned int)arg1;
- (unsigned int)currentRowMinColumnIndex;
- (void)setCurrentSheetIndex:(unsigned int)arg1;
- (unsigned int)currentSheetIndex;
- (void)dealloc;
- (id)initWithWorkbookPart:(id)arg1 cancelDelegate:(id)arg2 tracing:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OCXReader : OCDEncryptedReader
{
    OCPZipPackage *mZipPackage;
}

@property(retain, nonatomic) OCPZipPackage *zipPackage; // @synthesize zipPackage=mZipPackage;
- (id)read;
- (_Bool)start;
- (void)restartReaderToUseDecryptedDocument;
- (_Bool)retainDecryptorWithErrorCode:(int *)arg1;
- (_Bool)isBinaryReader;
- (_Bool)verifyFileFormat;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EXReader : OCXReader
{
    NSString *mTemporaryDirectory;
}

@property(retain, nonatomic) NSString *temporaryDirectory; // @synthesize temporaryDirectory=mTemporaryDirectory;
- (id)defaultPassphrase;
- (id)read;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EXReference : NSObject
{
}

+ (id)xmlRangesFromDiscontinuousReferences:(id)arg1;
+ (id)edDiscontinousReferencesFromXmlRanges:(id)arg1;
+ (id)edReferenceFromXmlReference:(id)arg1;
+ (id)xmlReferenceFromEDReference:(id)arg1;
+ (id)xmlReferenceFromAreaReference:(struct EDAreaReference *)arg1;
+ (_Bool)edAreaReferenceFromXmlReference:(id)arg1 areaReference:(struct EDAreaReference *)arg2;
+ (id)numberToStringBase26:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXRow : NSObject
{
}

+ (void)readRowsFrom:(struct _xmlTextReader *)arg1 state:(id)arg2;
+ (id)createFormulaReferenceRangeForRowBlocks:(id)arg1;
+ (void)edRowFrom:(struct _xmlTextReader *)arg1 edRowInfo:(struct EDRowInfo *)arg2 edRowBlock:(id)arg3 edRowBlocks:(id)arg4 state:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface EXSheet : NSObject
{
}

+ (void)readDelayedSheeWithLocation:(id)arg1 sheetXmlType:(id)arg2 state:(id)arg3;
+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readAllDrawablesWithState:(id)arg1;
+ (void)readLegacyDrawablesWithState:(id)arg1;
+ (void)readDrawablesWithState:(id)arg1;
+ (void)readSheetProperties:(struct _xmlNode *)arg1 state:(id)arg2;
+ (Class)exSheetClassFromXmlSheetType:(id)arg1 location:(id)arg2;
+ (void)readCommonSheetElementsFrom:(struct _xmlTextReader *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXSheetContext : NSObject <OCDDelayedNodeContext>
{
    EXReadState *mSheetState;
    NSURL *mPackageLocation;
    NSString *mType;
}

- (_Bool)loadDelayedNode:(id)arg1;
- (void)dealloc;
- (id)initWithSheetLocation:(id)arg1 sheetXmlType:(id)arg2 state:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EXString : NSObject
{
}

+ (void)replaceEscapeAsciiCodes:(id)arg1;
+ (id)readStringWithAsciiCodeFromXmlStringElement:(struct _xmlNode *)arg1;
+ (id)edStringWithRunsFromXmlDivElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edStringWithRunsFromXmlStringElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)edTextFromXmlStringElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (id)cleanupWhitespace:(id)arg1;
+ (id)stringInEDString:(id)arg1 forRunIndex:(unsigned int)arg2;
+ (id)stringInEDString:(id)arg1 start:(unsigned long long)arg2 end:(unsigned long long)arg3;
+ (void)buildEDString:(id)arg1 fromText:(id)arg2 edFont:(id)arg3 keepWhitespace:(_Bool)arg4 state:(id)arg5;
+ (void)buildEDString:(id)arg1 fromNode:(struct _xmlNode *)arg2 edFont:(id)arg3 keepWhitespace:(_Bool)arg4 state:(id)arg5;
+ (void)buildEDString:(id)arg1 fromChildrenOfNode:(struct _xmlNode *)arg2 edFont:(id)arg3 keepWhitespace:(_Bool)arg4 state:(id)arg5;
+ (void)parseStringWithAsciiCode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXStringTable : NSObject
{
}

+ (void)readFromState:(id)arg1;
+ (void)readStringsFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXTable : NSObject
{
}

+ (id)edTableFromXmlTableElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXTableColumn : NSObject
{
}

+ (id)edTableColumnFromXmlTableColumnElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXTableFilter : NSObject
{
}

+ (id)edTableFilterFromXmlTableFilterElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)edFilterOperatorFromXmlOperatorString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXTableFilterColumn : NSObject
{
}

+ (id)edTableFilterColumnFromXmlTableFilterColumnElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)edFilterOperatorFromXmlTypeString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXTableStyle : NSObject
{
}

+ (id)edTableStyleFromXmlTableStyleElement:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXTableStyleElement : NSObject
{
}

+ (id)edTableStyleElementFromXmlTableStyleElement:(struct _xmlNode *)arg1 state:(id)arg2;
+ (int)edStyleTableTypeFromXmlStyleTableType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXTableStyleTable : NSObject
{
}

+ (void)readPredefinedTableStylesWithState:(id)arg1;
+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readPredefinedTableStylesFrom:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXUnsupportedSheet : NSObject
{
}

+ (void)readTables:(id)arg1;
+ (void)readOtherSheetComponentsWithState:(id)arg1;
+ (_Bool)readDistinctSheetElementsFrom:(struct _xmlTextReader *)arg1 state:(id)arg2;
+ (id)edSheetWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EXVmlClient : NSObject <OAVReadClient>
{
}

+ (int)vmlSupportLevel;
+ (void)readClientDataFromGroup:(struct _xmlNode *)arg1 toGroup:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromShape:(struct _xmlNode *)arg1 toGraphic:(id)arg2 state:(id)arg3;
+ (id)edTextBoxForVmlTextInShape:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (id)readComment:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readAnchor:(struct _xmlNode *)arg1 to:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EXWorkbook : NSObject
{
}

+ (id)edWorkbookFromState:(id)arg1 package:(id)arg2 reader:(id)arg3 resourcesOnly:(_Bool)arg4 fileName:(id)arg5 temporaryDirectory:(id)arg6;
+ (id)edWorkbookFromState:(id)arg1 package:(id)arg2 reader:(id)arg3 fileName:(id)arg4 temporaryDirectory:(id)arg5;
+ (void)setupDefaultTextStyleWithState:(id)arg1;
+ (void)setDefaultParagraphProperties:(id)arg1;
+ (void)setupProcessors:(id)arg1;
+ (void)readStringsFrom:(id)arg1 state:(id)arg2;
+ (void)readStylesFrom:(id)arg1 state:(id)arg2;
+ (void)readSheetsFrom:(id)arg1 relationNS:(struct _xmlNs *)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface EXWorksheet : NSObject
{
}

+ (void)readTables:(id)arg1;
+ (void)readOtherSheetComponentsWithState:(id)arg1;
+ (_Bool)readDistinctSheetElementsFrom:(struct _xmlTextReader *)arg1 state:(id)arg2;
+ (id)edSheetWithState:(id)arg1;
+ (void)readPivotTables:(id)arg1;
+ (void)readCommentTextFrom:(id)arg1;
+ (void)readSheetExtension:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readSheetExtensions:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readHyperlinksFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readColumnInfosFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readWorksheetFormatPropertiesFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readWorksheetViewsFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readOleObjectsFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)setupProcessors:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFBitmap : NSObject
{
    int m_width;
    int m_height;
    unsigned int m_bitsPerPixel;
    int m_compression;
    _Bool m_isOS2;
    unsigned int m_infoHeaderSize;
    unsigned int m_paletteSize;
    NSMutableData *m_bmpData;
}

- (_Bool)isEmpty;
- (void)setMonoPalette:(id)arg1;
- (void)dealloc;
- (id)initWithBitmap:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(const char *)arg6:(unsigned int)arg7;
- (id)initWithDIBitmap:(id)arg1:(const char *)arg2:(unsigned int)arg3:(const char *)arg4:(unsigned int)arg5:(int)arg6;
- (id)initWithDIBitmap:(id)arg1:(const char *)arg2:(unsigned int)arg3:(int)arg4;
- (id)init;
- (_Bool)processDIBHeader:(id)arg1:(const char *)arg2:(unsigned int)arg3:(int)arg4;
- (void)appendDIBPalette:(id)arg1:(const char *)arg2:(unsigned int)arg3:(int)arg4;
- (void)setNull;
- (void)writeInfoHeader;
- (void)writeFileHeader;
- (void)writePaletteEntry:(id)arg1:(int)arg2;
- (_Bool)parseHeader:(const char *)arg1:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFBrush : NSObject <MFObject>
{
}

- (int)selectInto:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFByteUtils : NSObject
{
}

+ (float)readFloat32FromByteArray:(const char *)arg1:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFConverter : NSObject
{
}

+ (struct CGRect)boundsInLogicalUnits:(id)arg1;
+ (struct CGRect)boundsInPoints:(id)arg1;
+ (_Bool)mapToPdf:(id)arg1;
+ (void)playInCurrentContext:(id)arg1 frame:(struct CGRect)arg2 colorMap:(id)arg3 fillMap:(id)arg4;
+ (id)play:(id)arg1 frame:(struct CGRect)arg2 colorMap:(id)arg3 fillMap:(id)arg4;
+ (id)playToBitmap:(id)arg1 frame:(struct CGRect)arg2 colorMap:(id)arg3 fillMap:(id)arg4;
+ (id)playToPDF:(id)arg1 frame:(struct CGRect)arg2 colorMap:(id)arg3 fillMap:(id)arg4;
+ (void)fromBinary:(id)arg1 toXml:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFDeviceContext : NSObject <NSCopying>
{
    NSObject<MFDeviceDriver> *m_driver;
    _Bool m_textUpdateCP;
    double m_miterLimit;
    int m_textHorizontalAlign;
    int m_textVerticalAlign;
    int m_textDirection;
    MFFont *m_font;
    OITSUColor *m_textColour;
    int m_textBreakExtra;
    int m_textBreakCount;
    int m_textCharExtra;
    OITSUColor *m_bkColour;
    int m_bkMode;
    struct CGPoint m_brushOrg;
    struct CGPoint m_penPos;
    int m_arcDirection;
    int m_polyFillMode;
    MFTransform *m_transform;
    MFPen *m_pen;
    MFBrush *m_brush;
    MFPalette *m_selectedPalette;
    int m_rop2;
    int m_stretchMode;
    MFPath *m_path;
}

+ (id)deviceContextWithDriver:(id)arg1;
- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setRop2:(int)arg1;
- (int)getRop2;
- (void)setBrush:(id)arg1;
- (id)getBrush;
- (void)setPen:(id)arg1;
- (id)getPen;
- (void)setSelectedPalette:(id)arg1;
- (id)getSelectedPalette;
- (void)setPath:(id)arg1;
- (id)getPath;
- (id)getCurrentTransform;
- (void)setCurrentTransform:(id)arg1;
- (int)getStretchBltMode;
- (void)setStretchBltMode:(int)arg1;
- (int)getPolyFillMode;
- (void)setPolyFillMode:(int)arg1;
- (int)getArcDirection;
- (void)setArcDirection:(int)arg1;
- (id)getFont;
- (void)setFont:(id)arg1;
- (struct CGPoint)getBrushOrg;
- (void)setBrushOrg:(struct CGPoint)arg1;
- (int)getBkMode;
- (void)setBkMode:(int)arg1;
- (id)getBkColour;
- (void)setBkColour:(id)arg1;
- (int)getTextCharExtra;
- (void)setTextCharExtra:(int)arg1;
- (int)getTextBreakCount;
- (int)getTextBreakExtra;
- (void)setTextJustification:(int)arg1:(int)arg2;
- (id)getTextColour;
- (void)setTextColour:(id)arg1;
- (int)getTextDirection;
- (void)setTextDirection:(int)arg1;
- (int)getTextVerticalAlign;
- (void)setTextVerticalAlign:(int)arg1;
- (int)getTextHorizontalAlign;
- (void)setTextHorizontalAlign:(int)arg1;
- (double)getMiterLimit;
- (void)setMiterLimit:(double)arg1;
- (_Bool)getTextUpdateCP;
- (void)setTextUpdateCP:(_Bool)arg1;
- (void)setPenPosition:(struct CGPoint)arg1;
- (struct CGPoint)getPenPosition;
- (void)dealloc;
- (id)initWithDriver:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFFont : NSObject <MFObject>
{
    int m_lfHeight;
    int m_lfWidth;
    int m_lfEscapement;
    int m_lfOrientation;
    int m_lfWeight;
    _Bool m_lfItalic;
    _Bool m_lfUnderline;
    _Bool m_lfStrikeOut;
    int m_lfCharSet;
    int m_lfOutPrecision;
    unsigned char m_lfClipPrecision;
    int m_lfQuality;
    int m_pitch;
    int m_family;
    NSString *m_lfFaceName;
    NSString *m_elfFullName;
    NSString *m_elfStyle;
    unsigned int m_elfVersion;
    unsigned int m_elfStyleSize;
    unsigned int m_elfMatch;
    unsigned int m_elfVendorId;
    unsigned int m_elfCulture;
}

+ (id)fontWithStockFont:(int)arg1;
+ (id)fontWithExtendedFeatures:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15:(id)arg16:(id)arg17:(unsigned int)arg18:(unsigned int)arg19:(unsigned int)arg20:(unsigned int)arg21:(unsigned int)arg22;
+ (id)fontWithFeatures:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15;
- (int)selectInto:(id)arg1;
- (struct CGRect)textExtent:(id)arg1:(int)arg2:(int *)arg3:(int)arg4;
- (id)faceName;
- (_Bool)strikeout;
- (_Bool)underline;
- (int)getCharset;
- (double)fontHeight;
- (double)escapement;
- (void)dealloc;
- (id)initWithStockFont:(int)arg1;
- (id)initWithFeatures:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15;
- (id)initWithAllFeatures:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15:(id)arg16:(id)arg17:(unsigned int)arg18:(unsigned int)arg19:(unsigned int)arg20:(unsigned int)arg21:(unsigned int)arg22;
- (id)stringWithBytes:(const void *)arg1 length:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFGraphicsDevice : NSObject
{
    MFDeviceContext *m_currentDC;
    NSMutableArray *m_savedDC;
    NSObject<MFDeviceDriver> *m_deviceDriver;
    MFObjectTable *m_objectTable;
    MFObjectTable *m_stockObjects;
    NSDictionary *m_colorMap;
    NSDictionary *m_fillMap;
}

- (int)plgBlt:(struct CGPoint *)arg1:(id)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(id)arg7:(int)arg8:(int)arg9:(struct CGAffineTransform *)arg10:(unsigned int)arg11;
- (int)maskBlt:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(id)arg5:(int)arg6:(int)arg7:(id)arg8:(int)arg9:(int)arg10:(unsigned int)arg11:(struct CGAffineTransform *)arg12:(unsigned int)arg13;
- (int)stretchBlt:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(id)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9:(unsigned int)arg10:(struct CGAffineTransform *)arg11:(unsigned int)arg12 usePaletteForBilevel:(_Bool)arg13;
- (int)stretchBlt:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(id)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9:(unsigned int)arg10:(struct CGAffineTransform *)arg11:(unsigned int)arg12;
- (int)bitBlt:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(id)arg5:(int)arg6:(int)arg7:(unsigned int)arg8:(struct CGAffineTransform *)arg9:(unsigned int)arg10;
- (int)patBlt:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(unsigned int)arg5;
- (id)createBitmap:(unsigned int)arg1:(unsigned int)arg2:(unsigned int)arg3:(unsigned int)arg4:(const char *)arg5:(unsigned int)arg6;
- (id)createDIBitmap:(const char *)arg1:(unsigned int)arg2:(const char *)arg3:(unsigned int)arg4:(int)arg5;
- (id)createDIBitmap:(const char *)arg1:(unsigned int)arg2:(int)arg3;
- (int)frameRegion:(unsigned int)arg1:(unsigned int)arg2:(int)arg3:(int)arg4;
- (int)frameRegionWithRects:(id)arg1:(unsigned int)arg2:(int)arg3:(int)arg4;
- (int)fillRgn:(unsigned int)arg1:(unsigned int)arg2;
- (int)fillRgnWithRects:(id)arg1:(unsigned int)arg2;
- (int)invertRgn:(unsigned int)arg1;
- (int)invertRgnWithRects:(id)arg1;
- (int)paintRgn:(unsigned int)arg1;
- (int)paintRgnWithRects:(id)arg1;
- (int)setMetaRgn;
- (int)intersectClipRect:(struct CGRect)arg1;
- (int)excludeClipRect:(struct CGRect)arg1;
- (int)selectClipRegion:(unsigned int)arg1:(int)arg2;
- (int)selectClipRegionWithRects:(id)arg1:(int)arg2;
- (int)selectClipPath:(int)arg1;
- (int)strokeAndFillPath:(_Bool)arg1:(_Bool)arg2;
- (int)endPath;
- (int)widenPath;
- (int)beginPath;
- (int)abortPath;
- (int)setRop2:(int)arg1;
- (int)setMapMode:(int)arg1;
- (int)modifyWorldTransform:(const struct CGAffineTransform *)arg1:(int)arg2;
- (int)setWorldTransform:(const struct CGAffineTransform *)arg1;
- (int)scaleWindowExt:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)scaleViewportExt:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)setViewportOrg:(int)arg1:(int)arg2;
- (int)offsetViewportOrg:(int)arg1:(int)arg2;
- (int)offsetWindowOrg:(int)arg1:(int)arg2;
- (int)setViewportExt:(int)arg1:(int)arg2;
- (int)setWindowOrg:(int)arg1:(int)arg2;
- (int)setWindowExt:(int)arg1:(int)arg2;
- (void)createStockObjects;
- (int)createPatternBrush:(id)arg1:(unsigned int)arg2 usePaletteForBilevel:(_Bool)arg3;
- (int)createPalette:(id)arg1:(unsigned int)arg2;
- (int)resizePalette:(unsigned int)arg1:(unsigned int)arg2;
- (int)setPaletteEntries:(unsigned int)arg1:(id)arg2:(unsigned int)arg3;
- (id)createColorWithRGBBytes:(unsigned char)arg1:(unsigned char)arg2:(unsigned char)arg3:(unsigned char)arg4;
- (int)createPen:(int)arg1:(int)arg2:(id)arg3:(double *)arg4:(unsigned int)arg5;
- (int)createFontIndirectW:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15:(id)arg16:(id)arg17:(unsigned int)arg18:(unsigned int)arg19:(unsigned int)arg20:(unsigned int)arg21:(unsigned int)arg22:(unsigned int)arg23;
- (int)createFontIndirect:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15;
- (int)createBrush:(int)arg1:(id)arg2:(int)arg3:(unsigned int)arg4;
- (int)createRegion:(id)arg1;
- (int)deleteObject:(int)arg1;
- (int)getStockObject:(unsigned int)arg1;
- (int)selectObject:(int)arg1;
- (int)setPolyFillMode:(int)arg1;
- (int)realizePalette;
- (int)roundRect:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(double)arg5:(double)arg6;
- (int)closeCurrentPath:(_Bool)arg1;
- (int)bezier:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8;
- (int)bezierTo:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6;
- (int)chord:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8;
- (int)arcTo:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8;
- (int)angleArc:(int)arg1:(int)arg2:(unsigned int)arg3:(double)arg4:(double)arg5;
- (int)pie:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8;
- (int)arc:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8;
- (int)polyPolyline:(struct CGPoint *)arg1:(int *)arg2:(int)arg3;
- (int)polyline:(struct CGPoint *)arg1:(int)arg2;
- (int)setArcDirection:(int)arg1;
- (int)polyPolygon:(struct CGPoint *)arg1:(int *)arg2:(int)arg3;
- (int)polygon:(struct CGPoint *)arg1:(int)arg2;
- (int)lineTo:(double)arg1:(double)arg2;
- (int)moveTo:(double)arg1:(double)arg2;
- (int)restoreDC:(int)arg1;
- (int)saveDC;
- (int)setViewBox:(double)arg1:(double)arg2:(double)arg3:(double)arg4;
- (int)ellipse:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)rectangle:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)extTextOutEncoded:(int)arg1:(int)arg2:(id)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int *)arg9:(int)arg10;
- (int)extTextOut:(int)arg1:(int)arg2:(id)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int *)arg9:(int)arg10;
- (int)textOutEncoded:(int)arg1:(int)arg2:(id)arg3;
- (int)textOut:(int)arg1:(int)arg2:(id)arg3;
- (int)setTextAlign:(_Bool)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)setTextCharExtra:(int)arg1;
- (int)setTextJustification:(int)arg1:(int)arg2;
- (int)setTextColour:(id)arg1;
- (int)setStretchBltMode:(int)arg1;
- (int)setBrushOrg:(double)arg1:(double)arg2;
- (int)setBkMode:(int)arg1;
- (int)setBkColour:(id)arg1;
- (int)setMiterLimit:(double)arg1;
- (int)description:(id)arg1;
- (int)comment:(id)arg1;
- (void)done;
- (id)recolor:(unsigned char)arg1:(unsigned char)arg2:(unsigned char)arg3 fill:(_Bool)arg4;
- (id)recolor:(id)arg1 fill:(_Bool)arg2;
- (void)setColorMap:(id)arg1 fillMap:(id)arg2;
- (id)getCurrentFont;
- (struct CGRect)getCanvas;
- (void)dealloc;
- (id)initWithCanvas:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFObjectTable : NSObject
{
    NSMutableArray *m_objects;
}

- (int)size;
- (id)getObject:(unsigned int)arg1;
- (int)putObject:(id)arg1:(unsigned int)arg2;
- (unsigned int)insertPos;
- (void)clear;
- (int)selectInto:(int)arg1:(id)arg2;
- (int)deleteObject:(unsigned int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPImage : NSObject
{
}

- (id)phoneImage;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 unit:(int)arg3 effect:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface MFPBitmapImage : MFPImage
{
    NSData *mBitmapData;
    OITSUImage *mPhoneBitmapImage;
    struct CGSize mPixelSize;
    struct CGSize mPointSize;
}

- (id).cxx_construct;
- (struct CGSize)pointSize;
- (struct CGSize)pixelSize;
- (id)phoneImage;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 unit:(int)arg3 effect:(id)arg4;
- (void)dealloc;
- (id)initWithBitmapData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPBlendStop : NSObject
{
    float mFactor;
    float mPosition;
}

- (float)position;
- (float)factor;
- (id)initWithFactor:(float)arg1 position:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPEffect : NSObject
{
}

+ (id)GUID;

@end

__attribute__((visibility("hidden")))
@interface MFPBlurEffect : MFPEffect
{
    float mRadius;
    _Bool mExpandEdge;
}

+ (id)GUID;
- (id)initWithRadius:(float)arg1 expandEdge:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPBrightnessContrastEffect : MFPEffect
{
    int mBrightness;
    int mContrast;
}

+ (id)GUID;
- (id)initWithBrightness:(int)arg1 contrast:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPBrush : NSObject
{
}

- (id)color;
- (void)fillPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPColorAdjust : NSObject
{
    struct MFPColorMatrix *mColorMatrix;
    struct MFPColorMatrix *mGrayMatrix;
    int mColorMatrixFlags;
    struct {
        OITSUColor *mLow;
        OITSUColor *mHigh;
    } mTransparentRange;
    float mGamma;
    NSDictionary *mRecolorMap;
    float mThreshold;
    _Bool mEnabled;
}

- (id).cxx_construct;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)isEnabled;
- (void)setThreshold:(float)arg1;
- (float)threshold;
- (void)setRecolorMap:(id)arg1;
- (id)recolorMap;
- (void)setGamma:(float)arg1;
- (float)gamma;
- (void)setTransparentLow:(id)arg1 high:(id)arg2;
- (id)transparentHigh;
- (id)transparentLow;
- (void)setColorMatrixFlags:(int)arg1;
- (int)colorMatrixFlags;
- (void)setGrayMatrix:(struct MFPColorMatrix *)arg1;
- (struct MFPColorMatrix *)grayMatrix;
- (void)setColorMatrix:(struct MFPColorMatrix *)arg1;
- (struct MFPColorMatrix *)colorMatrix;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPColorBalanceEffect : MFPEffect
{
    int mCyanRed;
    int mMagentaGreen;
    int mYellowBlue;
}

+ (id)GUID;
- (id)initWithCyanRed:(int)arg1 magentaGreen:(int)arg2 yellowBlue:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPColorCurveEffect : MFPEffect
{
    int mAdjustment;
    int mChannel;
    int mAdjustValue;
}

+ (id)GUID;
- (id)initWithAdjustment:(int)arg1 channel:(int)arg2 adjustValue:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPColorLUTEffect : MFPEffect
{
    unsigned char mLutA[256];
    unsigned char mLutR[256];
    unsigned char mLutG[256];
    unsigned char mLutB[256];
}

+ (id)GUID;
- (id)initWithLUTA:(unsigned char [256])arg1 LUTR:(unsigned char [256])arg2 LUTG:(unsigned char [256])arg3 LUTB:(unsigned char [256])arg4;

@end

__attribute__((visibility("hidden")))
@interface MFPColorMatrixEffect : MFPEffect
{
    float mColorMatrix[5][5];
}

+ (id)GUID;
- (id)initWithColorMatrix:(float [5][5])arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPFont : NSObject
{
    float mSize;
    int mUnit;
    unsigned int mFlags;
    NSString *mName;
}

- (struct __CTFont *)createCTFontWithGraphics:(id)arg1;
- (void)setName:(id)arg1;
- (id)name;
- (void)setFlags:(unsigned int)arg1;
- (unsigned int)flags;
- (void)setUnit:(int)arg1;
- (int)unit;
- (void)setSize:(float)arg1;
- (float)size;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MFPGradientBrush : MFPBrush
{
    struct CGAffineTransform mTransform;
    NSArray *mBlend;
    NSArray *mColorBlend;
    int mWrapMode;
    NSArray *mStops;
    struct CGShading *mShading;
    struct CGFunction *mShadingFunction;
}

- (id).cxx_construct;
- (void)createPhoneBrush;
- (id)color;
- (void)fillPath:(id)arg1;
- (void)setWrapMode:(int)arg1;
- (void)setColorBlend:(id)arg1;
- (void)setBlend:(id)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)dealloc;
- (id)init;
- (void)createShading;
- (void)createShadingFunction;
- (void)createStopsFromStartAndEndColors;
- (void)createStopsFromBlend;
- (void)createStopsFromColorBlend;
- (id)colorAtPosition:(float)arg1;
- (id)endColor;
- (id)startColor;

@end

__attribute__((visibility("hidden")))
@interface MFPGradientStop : NSObject
{
    OITSUColor *mColor;
    float mPosition;
}

- (float)position;
- (id)color;
- (void)dealloc;
- (id)initWithColor:(id)arg1 position:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPGraphics : NSObject
{
    struct CGRect mCanvas;
    int mHorzDpi;
    int mVertDpi;
    MFPGraphicsState *mCurrentState;
    NSMutableArray *mStateStack;
    MFPObjectTable *mObjectTable;
    NSMutableDictionary *mAvailableFonts;
}

+ (float)unitsPerInch:(int)arg1;
- (id).cxx_construct;
- (id)fontNameForUppercaseFontName:(id)arg1;
- (void)strokePath:(id)arg1 pen:(id)arg2;
- (void)fillPath:(id)arg1 brush:(id)arg2;
- (id)currentState;
- (_Bool)areThereOpenContainers;
- (void)restoreGraphicsStateOrEndContainerWithId:(unsigned int)arg1;
- (void)beginContainerWithId:(unsigned int)arg1 boundsInParent:(struct CGRect)arg2 bounds:(struct CGRect)arg3 boundsUnit:(int)arg4;
- (void)beginContainerNoParamsWithId:(unsigned int)arg1;
- (void)beginContainerWithId:(unsigned int)arg1 containerTransform:(struct CGAffineTransform)arg2;
- (void)saveGraphicsStateWithId:(unsigned int)arg1;
- (struct CGAffineTransform)pageTransformWithScale:(float)arg1 unit:(int)arg2;
- (float)pixelsPerUnit:(int)arg1 direction:(int)arg2;
- (void)setHorizontalDpi:(int)arg1 verticalDpi:(int)arg2;
- (id)objectTable;
- (struct CGRect)canvas;
- (void)dealloc;
- (id)initWithCanvas:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPGraphicsContainer : NSObject
{
    MFPGraphicsState *mParentGraphicsState;
    struct CGAffineTransform mContainerTransform;
}

- (id).cxx_construct;
- (struct CGAffineTransform)containerTransform;
- (id)parentGraphicsState;
- (void)dealloc;
- (id)initWithParentGraphicsState:(id)arg1 containerTransform:(struct CGAffineTransform)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPGraphicsState : NSObject
{
    struct CGAffineTransform mPageTransform;
    struct CGAffineTransform mWorldTransform;
}

- (id).cxx_construct;
- (void)multiplyWorldTransformBy:(struct CGAffineTransform)arg1 order:(int)arg2;
- (void)setWorldTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)worldTransform;
- (void)setPageTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)pageTransform;
- (void)removeTransform:(struct CGAffineTransform)arg1;
- (void)dealloc;
- (id)initWithGraphicsState:(id)arg1;
- (id)initWithDefaults;

@end

__attribute__((visibility("hidden")))
@interface MFPImageBrush : MFPBrush
{
    OITSUImage *mPhoneImage;
    OITSUColor *mPhonePatternColor;
}

- (id)color;
- (void)fillPath:(id)arg1;
- (void)dealloc;
- (id)initWithPhoneImage:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPHatchBrush : MFPImageBrush
{
}

+ (id)bitmapNameForHatchStyle:(int)arg1;
- (id)initWithHatchStyle:(int)arg1 foreColor:(id)arg2 backColor:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPHueSaturationLightnessEffect : MFPEffect
{
    int mHueChange;
    int mSaturationChange;
    int mLightnessChange;
}

+ (id)GUID;
- (id)initWithHueChange:(int)arg1 saturationChange:(int)arg2 lightnessChange:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPImageAttributes : NSObject
{
    NSMutableDictionary *mColorAdjustMap;
}

- (id)ensureColorAdjustWithType:(int)arg1;
- (id)colorAdjustWithType:(int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPLevelsEffect : MFPEffect
{
    int mHighlight;
    int mMidtone;
    int mShadow;
}

+ (id)GUID;
- (id)initWithHighlight:(int)arg1 midtone:(int)arg2 shadow:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPLinearGradientBrush : MFPGradientBrush
{
    struct CGRect mBounds;
    OITSUColor *mStartColor;
    OITSUColor *mEndColor;
}

- (id).cxx_construct;
- (void)createShading;
- (id)endColor;
- (id)startColor;
- (void)setEndColor:(id)arg1;
- (void)setStartColor:(id)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MFPMetafileImage : MFPImage
{
    NSData *mMetafileData;
}

- (id)phoneImage;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 unit:(int)arg3 effect:(id)arg4;
- (void)dealloc;
- (id)initWithMetafileData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPObjectTable : NSObject
{
    NSMutableDictionary *mObjects;
}

- (void)setObject:(id)arg1 atIndex:(int)arg2;
- (id)objectAtIndex:(int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPPath : NSObject
{
    OITSDBezierPath *mPath;
}

- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPPathGradientBrush : MFPGradientBrush
{
    OITSUColor *mCenterColor;
    struct CGPoint mCenterPoint;
    NSArray *mSurroundColors;
    OITSDBezierPath *mPath;
}

- (id).cxx_construct;
- (id)endColor;
- (id)startColor;
- (void)createShading;
- (void)setPath:(id)arg1;
- (void)setSurroundColors:(id)arg1;
- (void)setCenterPoint:(struct CGPoint)arg1;
- (void)setCenterColor:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MFPPen : NSObject
{
    MFPBrush *mBrush;
    float mWidth;
    struct CGAffineTransform mTransform;
    int mStartCap;
    int mEndCap;
    int mLineJoin;
    float mMiterLimit;
    int mDashStyle;
    int mDashCap;
    float mDashOffset;
    int mDashPatternCount;
    float *mDashPattern;
    int mAlignment;
    int mCompoundArrayCount;
    float *mCompoundArray;
    MFPCustomLineCap *mCustomStartCap;
    MFPCustomLineCap *mCustomEndCap;
}

- (id).cxx_construct;
- (void)strokePath:(id)arg1;
- (void)applyDashCapToPath:(id)arg1;
- (void)applyLineCapToPath:(id)arg1;
- (void)applyLineJoinToPath:(id)arg1;
- (void)applyDashPatternToPath:(id)arg1;
- (void)setDashPattern:(const float *)arg1 count:(int)arg2 toPath:(id)arg3;
- (void)setCustomEndCap:(id)arg1;
- (id)customEndCap;
- (void)setCustomStartCap:(id)arg1;
- (id)customStartCap;
- (void)setCompoundArray:(const float *)arg1 count:(int)arg2;
- (const float *)compoundArray;
- (int)compoundArrayCount;
- (void)setAlignment:(int)arg1;
- (int)alignment;
- (void)setDashPattern:(const float *)arg1 count:(int)arg2;
- (const float *)dashPattern;
- (int)dashPatternCount;
- (void)setDashOffset:(float)arg1;
- (float)dashOffset;
- (void)setDashCap:(int)arg1;
- (int)dashCap;
- (void)setDashStyle:(int)arg1;
- (int)dashStyle;
- (void)setMiterLimit:(float)arg1;
- (float)miterLimit;
- (void)setLineJoin:(int)arg1;
- (int)lineJoin;
- (void)setEndCap:(int)arg1;
- (int)endCap;
- (void)setStartCap:(int)arg1;
- (int)startCap;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)transform;
- (void)setWidth:(float)arg1;
- (float)width;
- (void)setBrush:(id)arg1;
- (id)brush;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPRedEyeCorrectionEffect : MFPEffect
{
    vector_ea45b3ba *mAreas;
}

+ (id)GUID;
- (void)dealloc;
- (id)initWithAreas:(const vector_ea45b3ba *)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPSharpenEffect : MFPEffect
{
    float mAmount;
    float mRadius;
}

+ (id)GUID;
- (id)initWithAmount:(float)arg1 radius:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPSolidBrush : MFPBrush
{
    OITSUColor *mColor;
}

- (void)fillPath:(id)arg1 evenOddRule:(_Bool)arg2;
- (void)setColor:(id)arg1;
- (id)color;
- (void)dealloc;
- (id)initWithColor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPStringFormat : NSObject
{
    int mAlignment;
    unsigned short mDigitSubstitutionLanguage;
    int mDigitSubstitutionMethod;
    unsigned int mFormatFlags;
    int mHotkeyPrefix;
    int mLineAlignment;
    float mFirstTabOffset;
    int mTabStopCount;
    float *mTabStops;
    int mTrimming;
}

- (void)setTrimming:(int)arg1;
- (int)trimming;
- (void)setTabStops:(const float *)arg1 count:(int)arg2;
- (const float *)tabStops;
- (int)tabStopCount;
- (void)setFirstTabOffset:(float)arg1;
- (float)firstTabOffset;
- (void)setLineAlignment:(int)arg1;
- (int)lineAlignment;
- (void)setHotkeyPrefix:(int)arg1;
- (int)hotkeyPrefix;
- (void)setFormatFlags:(unsigned int)arg1;
- (unsigned int)formatFlags;
- (void)setDigitSubstitutionMethod:(int)arg1;
- (int)digitSubstitutionMethod;
- (void)setDigitSubstitutionLanguage:(unsigned short)arg1;
- (unsigned short)digitSubstitutionLanguage;
- (void)setAlignment:(int)arg1;
- (int)alignment;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPTextureBrush : MFPImageBrush
{
}

- (id)initWithImage:(id)arg1 wrapMode:(int)arg2 transform:(struct CGAffineTransform)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPTintEffect : MFPEffect
{
    int mHue;
    int mAmount;
}

+ (id)GUID;
- (id)initWithHue:(int)arg1 amount:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPalette : NSObject <MFObject>
{
    NSMutableArray *m_colours;
}

+ (id)paletteWithColours:(id)arg1;
- (id)getColour:(int)arg1;
- (_Bool)resize:(int)arg1;
- (_Bool)setEntries:(int)arg1:(id)arg2;
- (int)selectInto:(id)arg1;
- (void)dealloc;
- (id)initWithColours:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPath : NSObject <NSCopying>
{
}

- (int)fill:(id)arg1;
- (int)stroke:(id)arg1;
- (int)widen:(id)arg1;
- (int)flatten;
- (int)closeFigure;
- (struct CGPoint)currentPoint;
- (int)abort;
- (int)end;
- (int)begin;
- (_Bool)isOpen;
- (int)state;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPen : NSObject <MFObject>
{
    int m_penStyle;
    int m_penWidth;
    OITSUColor *m_colour;
    double *m_userStyleArray;
}

+ (id)penWithStyle:(int)arg1 width:(int)arg2 colour:(id)arg3 styleArray:(double *)arg4;
+ (id)pen;
- (int)getStyle;
- (int)getWidth;
- (id)getColor;
- (int)selectInto:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(int)arg1 width:(int)arg2 colour:(id)arg3 styleArray:(double *)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneBitmap : MFBitmap
{
    OITSUImage *m_image;
}

- (id)getImage;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneBrush : MFBrush
{
}

- (_Bool)fillWithROP:(id)arg1:(id)arg2;
- (void)fillPath:(id)arg1:(id)arg2;
- (void)setPolyFillMode:(id)arg1:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneDeviceDriver : NSObject <MFDeviceDriver>
{
    struct CGRect m_canvas;
    struct CGRect m_viewBox;
    struct CGAffineTransform m_viewBoxTransform;
    struct CGAffineTransform m_worldToDeviceTransform;
    struct CGAffineTransform m_combinedTransform;
}

+ (int)getROP:(id)arg1;
- (id).cxx_construct;
- (id)createBitmap:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(const char *)arg6:(unsigned int)arg7;
- (id)createDIBitmap:(id)arg1:(const char *)arg2:(unsigned int)arg3:(const char *)arg4:(unsigned int)arg5:(int)arg6;
- (id)createDIBitmap:(id)arg1:(const char *)arg2:(unsigned int)arg3:(int)arg4;
- (id)createRegionWithPath:(id)arg1;
- (id)createRegionWithRects:(id)arg1:(id)arg2;
- (id)createPath;
- (id)createFontIndirectW:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15:(id)arg16:(id)arg17:(unsigned int)arg18:(unsigned int)arg19:(unsigned int)arg20:(unsigned int)arg21:(unsigned int)arg22;
- (id)createFont:(int)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(_Bool)arg6:(_Bool)arg7:(_Bool)arg8:(int)arg9:(int)arg10:(unsigned char)arg11:(int)arg12:(int)arg13:(int)arg14:(id)arg15;
- (id)createFont:(int)arg1;
- (id)createPen:(int)arg1:(int)arg2:(id)arg3:(double *)arg4;
- (id)createPen;
- (id)createNullBrush;
- (id)createSolidBrush:(id)arg1;
- (id)createPatternBrush:(id)arg1 usePaletteForBilevel:(_Bool)arg2;
- (id)createHatchBrush:(id)arg1:(int)arg2;
- (int)plgBlt:(id)arg1:(struct CGPoint *)arg2:(id)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(id)arg8:(int)arg9:(int)arg10:(struct CGAffineTransform *)arg11:(unsigned int)arg12;
- (int)maskBlt:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(id)arg6:(int)arg7:(int)arg8:(id)arg9:(int)arg10:(int)arg11:(unsigned int)arg12:(struct CGAffineTransform *)arg13:(unsigned int)arg14;
- (int)stretchBlt:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(id)arg6:(int)arg7:(int)arg8:(int)arg9:(int)arg10:(unsigned int)arg11:(struct CGAffineTransform *)arg12:(unsigned int)arg13;
- (int)bitBlt:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(id)arg6:(int)arg7:(int)arg8:(unsigned int)arg9:(struct CGAffineTransform *)arg10:(unsigned int)arg11;
- (int)patBlt:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(unsigned int)arg6;
- (int)setMetaRgn;
- (int)removeClip;
- (int)intersectClipRect:(struct CGRect)arg1;
- (int)excludeClipRect:(struct CGRect)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (int)activateTransform:(struct CGAffineTransform)arg1;
- (int)setViewBox:(double)arg1:(double)arg2:(double)arg3:(double)arg4;
- (void)updateViewBoxTransform;
- (void)concatTransforms;
- (int)bezier:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)bezierTo:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7;
- (int)ellipse:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5;
- (int)roundRect:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(double)arg6:(double)arg7;
- (int)rectangle:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5;
- (int)lineTo:(id)arg1:(double)arg2:(double)arg3;
- (int)polyPolygon:(id)arg1:(struct CGPoint *)arg2:(int *)arg3:(int)arg4;
- (int)polygon:(id)arg1:(struct CGPoint *)arg2:(int)arg3;
- (int)polyPolyline:(id)arg1:(struct CGPoint *)arg2:(int *)arg3:(int)arg4;
- (int)polyline:(id)arg1:(struct CGPoint *)arg2:(int)arg3;
- (int)chord:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)pie:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)angleArc:(id)arg1:(int)arg2:(int)arg3:(unsigned int)arg4:(double)arg5:(double)arg6;
- (int)arcTo:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)arc:(id)arg1:(int)arg2:(int)arg3:(int)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9;
- (int)extTextOut:(id)arg1:(int *)arg2:(int *)arg3:(id)arg4:(int)arg5:(int)arg6:(int)arg7:(int)arg8:(int)arg9:(int *)arg10:(int)arg11;
- (int)textOut:(id)arg1:(int *)arg2:(int *)arg3:(id)arg4;
- (void)drawBezierPath:(id)arg1 dc:(id)arg2 fill:(_Bool)arg3 stroke:(_Bool)arg4;
- (struct CGRect)getCanvas;
- (void)dealloc;
- (id)initWithCanvas:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneFont : MFFont
{
}

- (struct __CTFont *)createCTFontEquivalent;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneHatchBrush : MFPhoneBrush
{
    OITSUColor *m_colour;
    int m_style;
}

+ (id)patternNameForHatchStyle:(int)arg1;
+ (id)hatchBrushWithColour:(id)arg1:(int)arg2;
- (void)fillPath:(id)arg1:(id)arg2;
- (void)dealloc;
- (id)initWithColour:(id)arg1:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneNullBrush : MFPhoneBrush
{
}

+ (id)nullBrush;
- (void)fillPath:(id)arg1:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPhonePath : MFPath
{
    OITSDBezierPath *m_path;
    int m_state;
}

- (void)appendBezierPath:(id)arg1 dc:(id)arg2;
- (id)getBezierPath;
- (int)fill:(id)arg1;
- (int)stroke:(id)arg1;
- (int)widen:(id)arg1;
- (int)flatten;
- (int)closeFigure;
- (struct CGPoint)currentPoint;
- (int)abort;
- (int)end;
- (int)begin;
- (_Bool)isOpen;
- (int)state;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 state:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MFPhonePatternBrush : MFPhoneBrush
{
    MFPhoneBitmap *m_pattern;
    _Bool m_usePaletteForBilevel;
}

+ (id)patternBrushWithBitmap:(id)arg1 usePaletteForBilevel:(_Bool)arg2;
- (void)fillPath:(id)arg1:(id)arg2;
- (void)dealloc;
- (id)initWithBitmap:(id)arg1 usePaletteForBilevel:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface MFPhonePen : MFPen
{
    float m_PixelSize;
}

+ (id)penWithStyle:(int)arg1 width:(int)arg2 colour:(id)arg3 styleArray:(double *)arg4 LPToDPTransform:(struct CGAffineTransform)arg5;
- (void)strokePath:(id)arg1:(id)arg2;
- (void)applyLineCapStyleToPath:(id)arg1;
- (void)applyLineJoinStyleToPath:(id)arg1:(id)arg2;
- (void)applyDashedLinesToPath:(id)arg1;
- (id)initWithStyle:(int)arg1 width:(int)arg2 colour:(id)arg3 styleArray:(double *)arg4;

@end

__attribute__((visibility("hidden")))
@interface MFRegion : NSObject <MFObject>
{
}

- (int)invert:(id)arg1;
- (int)frame:(id)arg1:(id)arg2;
- (int)fill:(id)arg1:(id)arg2;
- (int)setClip:(id)arg1:(int)arg2;
- (int)selectInto:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneRegion : MFRegion
{
    OITSDBezierPath *m_path;
    struct CGRect m_bounds;
}

- (id).cxx_construct;
- (int)invert:(id)arg1;
- (int)frame:(id)arg1:(id)arg2;
- (int)fill:(id)arg1:(id)arg2;
- (int)setClip:(id)arg1:(int)arg2;
- (void)dealloc;
- (id)initWithPath:(id)arg1:(struct CGRect)arg2;
- (id)initWithRects:(id)arg1:(struct CGRect)arg2:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface MFPhoneSolidBrush : MFPhoneBrush
{
    OITSUColor *m_colour;
}

+ (id)solidBrushWithColour:(id)arg1;
- (void)fillPath:(id)arg1:(id)arg2;
- (void)dealloc;
- (id)initWithColour:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFSniffer : NSObject
{
}

+ (int)fileType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MFTransform : NSObject <NSCopying>
{
    struct CGAffineTransform m_world;
    struct CGPoint m_windowOrg;
    struct CGPoint m_windowExt;
    struct CGPoint m_viewportOrg;
    struct CGPoint m_viewportExt;
    struct CGAffineTransform m_combinedTransform;
    int m_mapMode;
    NSObject<MFDeviceDriver> *m_deviceDriver;
}

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct CGPoint)LPtoDP:(struct CGPoint)arg1;
- (struct CGPoint)DPtoLP:(struct CGPoint)arg1;
- (int)updateTransform;
- (void)setTransformMatrix:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)getTransformMatrix;
- (int)offsetViewportOrg:(int)arg1:(int)arg2;
- (int)offsetWindowOrg:(int)arg1:(int)arg2;
- (void)setViewportExt:(struct CGPoint)arg1;
- (void)setWindowExt:(struct CGPoint)arg1;
- (void)setViewportOrg:(struct CGPoint)arg1;
- (void)setWindowOrg:(struct CGPoint)arg1;
- (int)setViewportOrg:(int)arg1:(int)arg2;
- (int)setWindowOrg:(int)arg1:(int)arg2;
- (int)getMapMode;
- (int)setMapMode:(int)arg1;
- (struct CGPoint)getViewportOrg;
- (struct CGPoint)getWindowOrg;
- (struct CGPoint)getViewportExtent;
- (struct CGPoint)getWindowExtent;
- (int)scaleViewportExt:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)scaleWindowExt:(int)arg1:(int)arg2:(int)arg3:(int)arg4;
- (int)setViewportExt:(int)arg1:(int)arg2;
- (int)setWindowExt:(int)arg1:(int)arg2;
- (_Bool)isUpsideDown;
- (void)setWorldMatrix:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)getWorldMatrix;
- (int)modifyWorldTransform:(const struct CGAffineTransform *)arg1:(int)arg2;
- (int)setWorldTransform:(const struct CGAffineTransform *)arg1;
- (id)initWithDriver:(id)arg1;

@end

@interface NSArray (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSArray (TSUAdditions)
+ (id)arrayWithInts:(int *)arg1 count:(unsigned long long)arg2;
+ (id)arrayWithCGFloats:(double *)arg1 count:(unsigned long long)arg2;
- (id)uniqueObjects;
- (id)arrayByFlattening;
- (id)arrayByTransformingWithBlock:(CDUnknownBlockType)arg1;
- (id)arrayOfObjectsPassingTest:(CDUnknownBlockType)arg1;
- (id)firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (void)enumerateSnapshotObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)arrayByReversingOrder;
- (id)arrayByAddingNonContainedObjectsFromArray:(id)arg1;
- (id)arrayByRemovingObjectsIdenticalToObjectsInArray:(id)arg1;
- (id)intersectionWithArray:(id)arg1;
- (id)arrayWithObjectsInSet:(id)arg1;
- (id)indexesOfObjects:(id)arg1;
- (unsigned long long)indexOfSmallestObject;
- (id)rangeCheckedObjectAtIndex:(unsigned long long)arg1;
- (id)initWithInts:(int *)arg1 count:(unsigned long long)arg2;
- (id)initWithCGFloats:(double *)arg1 count:(unsigned long long)arg2;
@end

__attribute__((visibility("hidden")))
@interface NSBitmapImageRepStub : NSObject
{
}

@end

@interface NSData (WBDataAdditions)
+ (id)nsDataWithOcBinaryData:(const struct OcBinaryData *)arg1;
@end

@interface NSDate (WBAdditions)
+ (id)dateWithWordDate:(const struct WrdDateTime *)arg1;
- (void)copyToWordDate:(struct WrdDateTime *)arg1;
@end

@interface NSDictionary (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSDictionary (TSUAdditions)
+ (id)dictionaryByInvertingDictionary:(id)arg1;
- (id)objectOfClass:(Class)arg1 forKey:(id)arg2;
- (_Bool)boolValueForKey:(id)arg1;
@end

@interface NSError (TSUAdditions)
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4 userInfo:(id)arg5;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 alertTitle:(id)arg3 alertMessage:(id)arg4;
+ (id)tsuErrorWithCode:(long long)arg1;
+ (id)errorWithDomain:(id)arg1 code:(long long)arg2 description:(id)arg3 recoverySuggestion:(id)arg4;
- (_Bool)isCancelError;
- (_Bool)isOutOfSpaceError;
- (id)localizedAlertMessage;
- (id)localizedAlertTitle;
@end

@interface NSException (SFUtilityAdditions)
+ (void)errnoRaise:(id)arg1 format:(id)arg2;
- (int)localErrno;
@end

@interface NSException (TSUAdditions)
+ (void)raiseWithError:(id)arg1;
- (id)error;
@end

@interface NSFileManager (SFUtilityAdditions)
- (void)logFileProtectionAtURL:(id)arg1 recursively:(_Bool)arg2;
- (void)_logFileProtectionAtURL:(id)arg1 recursively:(_Bool)arg2 indent:(id)arg3;
- (_Bool)hasAtMostFileProtection:(id)arg1 atURL:(id)arg2 recursively:(_Bool)arg3;
- (_Bool)hasAtLeastFileProtection:(id)arg1 atURL:(id)arg2 recursively:(_Bool)arg3;
- (_Bool)_fileProtectionAtURL:(id)arg1 recursively:(_Bool)arg2 passesTest:(CDUnknownBlockType)arg3;
- (_Bool)_fileProtection:(id)arg1 isGreaterThan:(id)arg2;
- (_Bool)changeFileProtectionAtURL:(id)arg1 toProtection:(id)arg2 recursively:(_Bool)arg3 error:(id *)arg4;
- (_Bool)changeFileProtectionAtURL:(id)arg1 fromProtection:(id)arg2 toProtection:(id)arg3 recursively:(_Bool)arg4 error:(id *)arg5;
- (_Bool)_changeFileProtectionAtURL:(id)arg1 fromProtection:(id)arg2 toProtection:(id)arg3 recursively:(_Bool)arg4 error:(id *)arg5;
- (_Bool)setAttributes:(id)arg1 ofItemAtURL:(id)arg2 recursively:(_Bool)arg3 error:(id *)arg4;
- (_Bool)applyFileAttributesFromDocumentAtURL:(id)arg1 toDocumentAtURL:(id)arg2 error:(id *)arg3;
- (_Bool)_setAttributes:(id)arg1 ofItemAtURL:(id)arg2 recursively:(_Bool)arg3 error:(id *)arg4 shouldUpdateAttributesHandler:(CDUnknownBlockType)arg5;
- (unsigned long long)pathUsage:(id)arg1;
- (unsigned long long)directoryUsage:(id)arg1;
@end

@interface NSFileManager (TSUTemporaryDirectoryAdditions)
- (_Bool)grantUserWritePosixPermissionAtPath:(id)arg1 error:(id *)arg2;
@end

__attribute__((visibility("hidden")))
@interface NSFontManagerStub : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface NSFontStub : NSObject
{
}

@end

@interface NSIndexSet (TSUAdditions)
+ (id)indexSetWithIndices:(unsigned long long *)arg1 count:(unsigned long long)arg2;
- (id)indexSetByInsertingIndexes:(id)arg1 inRange:(struct _NSRange)arg2;
- (_Bool)intersectsIndexesInIndexSet:(id)arg1;
@property(readonly, nonatomic) _Bool isSingleContiguousRange;
- (id)indexSetByAddingIndexes:(id)arg1;
- (id)initWithIndices:(unsigned long long *)arg1 count:(unsigned long long)arg2;
@end

@interface NSInvocation (TSUAdditions)
+ (id)invocationWithBlock:(CDUnknownBlockType)arg1;
@end

@interface NSInvocation (TSUAdditions_Private)
+ (void)executeBlock:(CDUnknownBlockType)arg1;
@end

@interface NSMutableArray (TSUAdditions)
- (void)trimObjectsFromIndex:(unsigned long long)arg1;
- (void)removeObjectsIdenticalToObjectsInArray:(id)arg1;
- (void)addObjectsFromNonNilArray:(id)arg1;
- (void)addNonNilObject:(id)arg1;
- (void)addObjects:(id)arg1;
- (id)pop_tsu;
- (void)push_tsu:(id)arg1;
- (id)dequeue;
- (void)enqueue:(id)arg1;
@end

@interface NSMutableData (OCMutableDataAdditions)
- (void)appendString:(id)arg1 encoding:(unsigned long long)arg2;
- (void)appendLEShort:(short)arg1;
- (void)replaceBytesInRange:(struct _NSRange)arg1 withLELong:(int)arg2;
- (void)appendLELong:(int)arg1;
@end

@interface NSMutableDictionary (EMBordersPropertyCache)
- (id)addToCacheAndReturnCssString:(id)arg1;
@end

@interface NSMutableDictionary (TSUAdditions)
+ (id)dictionaryByInvertingDictionary:(id)arg1;
+ (id)dictionaryByInvertingDictionaryIfPossible:(id)arg1;
- (id)objectForKey:(id)arg1 withDefaultOfClass:(Class)arg2;
- (id)objectForKey:(id)arg1 withDefaultUsingBlock:(CDUnknownBlockType)arg2;
@end

@interface NSMutableIndexSet (TSUAdditions)
- (void)intersectionWithIndexSet:(id)arg1;
- (void)moveIndexesInRange:(struct _NSRange)arg1 toOffset:(unsigned long long)arg2;
@end

__attribute__((visibility("hidden")))
@interface NSMutableParagraphStyleStub : NSObject
{
}

@end

@interface NSMutableSet (TCMessageEntryAdditions)
- (void)addMessageEntry:(id)arg1;
@end

@interface NSMutableSet (TSUAdditions)
- (void)addNonNilObject:(id)arg1;
- (void)xorSet:(id)arg1;
@end

@interface NSMutableString (OITSUDescription)
- (void)indentBy:(unsigned long long)arg1;
@end

@interface NSMutableString (TCStringAdditions)
- (void)replaceAllSubstr:(id)arg1 with:(id)arg2 escStr:(id)arg3 range:(struct _NSRange)arg4;
- (void)replaceAllSubstr:(id)arg1 with:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceAllSubstr:(id)arg1 with:(id)arg2 escStr:(id)arg3;
- (void)replaceAllSubstr:(id)arg1 with:(id)arg2;
- (_Bool)replaceSubstr:(id)arg1 with:(id)arg2 range:(struct _NSRange)arg3;
- (_Bool)replaceSubstr:(id)arg1 with:(id)arg2;
@end

@interface NSMutableString (TSUtilityAdditions)
- (void)appendSeparator:(id)arg1 format:(id)arg2;
- (void)insertCharacter:(unsigned short)arg1 atIndex:(unsigned long long)arg2;
- (void)appendCharacter:(unsigned short)arg1;
@end

@interface NSNull (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSNumber (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSNumber (TSUAdditions)
+ (id)numberWithCGFloat:(double)arg1;
- (_Bool)isFloatingPointType;
- (double)CGFloatValue;
@end

@interface NSObject (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSObject (TSUAdditions)
+ (_Bool)object:(id)arg1 isEqualToObject:(id)arg2;
+ (_Bool)overridesClassSelector:(SEL)arg1 ofBaseClass:(Class)arg2;
+ (_Bool)overridesSelector:(SEL)arg1 ofBaseClass:(Class)arg2;
- (void)performSelector:(SEL)arg1 withValue:(id)arg2;
@end

@interface NSObject (TSUBlockUtility)
- (void)tsu_runBlock;
@end

@interface NSScanner (TSUAdditions)
- (_Bool)scanCGFloat:(double *)arg1;
@end

@interface NSSet (TSUAdditions)
+ (id)intersectionOfSets:(id)arg1;
+ (_Bool)set:(id)arg1 isEqualToSet:(id)arg2;
- (_Bool)containsObjectIdenticalTo:(id)arg1;
@end

@interface NSString (CSVStringExtensions)
- (id)copyCsvRows:(unsigned long long *)arg1;
- (id)_copyCsvRows:(unsigned long long *)arg1 usingDelimiter:(id)arg2 columnCountIsConstant:(_Bool *)arg3;
@end

@interface NSString (Crypto)
- (id)getDataUsingOfficeCryptographicEncoding;
@end

@interface NSString (EmailAddressAdditions)
- (_Bool)isLegalEmailAddress;
- (id)uncommentedAddressRespectingGroups;
- (id)uncommentedAddress;
@end

@interface NSString (NSStringAppKitStubAdditions)
- (struct _NSRange)oi_rangeOfCharactersFromSet:(id)arg1 index:(int)arg2;
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4;
- (double)oi_sizeWithFontName:(id)arg1 size:(int)arg2;
@end

@interface NSString (NSURLAdditionsAdditions)
- (id)stringByPercentEscaping;
- (_Bool)containsPercentEscapes;
@end

@interface NSString (OCBStringAdditions)
+ (id)stringWithOcText:(const struct OcText *)arg1;
+ (id)stringWithCsString:(const struct CsString *)arg1;
- (void)copyToOcText:(struct OcText *)arg1 encoding:(int)arg2;
- (void)copyToOcText:(struct OcText *)arg1;
- (void)copyToCsString:(struct CsString *)arg1;
- (id)dataUsingWordEncoding:(int)arg1;
- (id)initWithOcText:(const struct OcText *)arg1;
- (id)initWithCsString:(const struct CsString *)arg1;
@end

@interface NSString (OCStringAdditions)
+ (_Bool)skipString:(id)arg1;
+ (id)mapString:(id)arg1;
- (int)languageTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)initialsFromAuthorName;
@end

@interface NSString (SFUCryptoUtilsAdditions)
- (id)sha256HexHashString;
@end

@interface NSString (SFUJsonAdditions)
- (void)appendJsonStringToString:(id)arg1;
@end

@interface NSString (TCStringAdditions)
- (_Bool)doesURLHostContainWhitespace;
- (_Bool)startsWithString:(id)arg1;
- (id)stringByFixingCharactersWithLatinFontFamilyName:(id)arg1 symbolFontFamilyName:(id)arg2;
@end

@interface NSString (TCStringAdditions_XmlString)
+ (id)stringWithXmlString:(const char *)arg1;
- (_Bool)isEqualToXmlString:(const char *)arg1;
- (id)componentsSeparatedByWhitespace;
- (id)initFromXmlNode:(struct _xmlNode *)arg1 nsWithFallbackNs:(id)arg2 attributeName:(const char *)arg3;
- (id)initFromXmlNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 attributeName:(const char *)arg3;
- (id)initWithContentOfXmlNode:(struct _xmlNode *)arg1;
- (id)initWithValueOfXmlAttribute:(struct _xmlAttr *)arg1;
- (const char *)xmlString;
- (id)initWithXmlString:(const char *)arg1;
@end

@interface NSString (TSDKVCKeyPathAdditions)
- (unsigned long long)numberOfKeysInKeyPath;
- (id)lastKey;
- (id)firstKey;
- (id)keyPathByAppendingKey:(id)arg1;
- (id)keyPathByPrependingKey:(id)arg1;
- (id)keyPathByRemovingFirstKey;
- (id)keyPathByRemovingLastKey;
@end

@interface NSString (TSUAdditions)
+ (id)stringByHexEncodingData:(id)arg1;
+ (id)stringWithXMLString:(const char *)arg1;
+ (id)stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2 breakLines:(_Bool)arg3;
+ (id)stringByBase64EncodingBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)stringWithHexFromBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)listSeparator;
+ (id)stringByIndentingString:(id)arg1;
+ (id)stringByIndentingString:(id)arg1 times:(unsigned long long)arg2;
+ (id)stringWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
+ (id)stringWithUUID;
- (_Bool)containsSubstring:(id)arg1;
- (void)enumerateRangesOfCharactersInSet:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (struct _NSRange)range;
- (struct _NSRange)rangeOfString:(id)arg1 options:(unsigned long long)arg2 updatingSearchRange:(struct _NSRange *)arg3;
- (id)tolerantStringByAppendingPathExtension:(id)arg1;
- (_Bool)containsOnlyCharactersFromSet:(id)arg1;
- (id)unescapeXML;
- (id)escapeXML;
- (id)stringByMakingFirstCharacterUppercase;
- (id)stringByMakingFirstCharacterLowercase;
- (id)encodeStringBase64;
- (id)stringByTrimmingCharactersInSetFromFront:(id)arg1;
- (id)stringWithPathRelativeTo:(id)arg1 allowBacktracking:(_Bool)arg2;
- (id)stringWithPathRelativeTo:(id)arg1;
- (id)substringWithComposedCharacterSequencesToFileSystemLength:(unsigned long long)arg1;
- (id)substringWithComposedCharacterSequencesToIndex:(unsigned long long)arg1;
- (id)stringWithRealpath;
- (_Bool)isChildOfPath:(id)arg1;
- (_Bool)isDescendantOfPath:(id)arg1;
- (id)escapeForIcuRegex;
- (unsigned long long)countInstancesOfString:(id)arg1 options:(unsigned long long)arg2;
- (id)stringByReplacingInstancesOfCharactersInSet:(id)arg1 withString:(id)arg2;
- (id)stringByRemovingCharactersInSet:(id)arg1;
- (id)stringByRemovingCharactersInSet:(id)arg1 options:(unsigned int)arg2;
- (id)md5Hash;
- (id)stringByFixingBrokenSurrogatePairs;
- (id)stringByUniquingPathInsideDirectory:(id)arg1 withFormat:(id)arg2;
- (id)stringByUniquingPathInsideDirectory:(id)arg1;
- (id)stringByAddingCSVEscapes;
- (id)stringByAppendingSeparator:(id)arg1 format:(id)arg2;
- (id)stringQuotedIfContainsCharacterSet:(id)arg1;
- (id)stringByExpandingTableFormatting;
@end

@interface NSString (TSUCustomNumberFormatAdditions)
+ (id)customNumberFormatDecimalFormatStringWithDigits:(unsigned int)arg1 digitString:(id)arg2 includeDecimalSeparator:(_Bool)arg3;
+ (id)customNumberFormatDecimalTokenRepresentedStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;
+ (id)customNumberFormatDecimalTokenDisplayStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;
+ (id)customNumberFormatIntegerFormatStringWithDigits:(unsigned long long)arg1 digitString:(id)arg2;
+ (id)customNumberFormatIntegerTokenRepresentedStringWithDigits:(unsigned long long)arg1 separator:(_Bool)arg2 digitString:(id)arg3;
+ (id)customNumberFormatIntegerTokenDisplayStringWithDigits:(unsigned int)arg1 separator:(_Bool)arg2 digitString:(id)arg3;
+ (id)customNumberFormatTokenStringOfType:(int)arg1 content:(id)arg2;
- (unsigned short)spaceCharacterInCustomNumberFormatSpaceToken;
- (unsigned short)scaleCharacterInCustomNumberFormatScaleToken;
- (id)formatStringFromCustomNumberFormatScaleToken;
- (int)fractionAccuracyFromCustomNumberFormatFractionToken;
- (id)currencyCodeFromCustomNumberFormatCurrencyToken;
- (id)digitPlaceholderStringInDigitToken;
- (unsigned long long)numberOfDigitsInCustomNumberFormatDecimalToken;
- (id)stringByInsertingFormatGroupingSeparators;
- (_Bool)customFormatIntegerTokenUsesSeparator;
- (unsigned int)numberOfDigitsInCustomNumberFormatIntegerToken;
- (_Bool)isSpecialCustomNumberFormatTokenOfType:(int)arg1;
- (_Bool)isSpecialCustomNumberFormatToken;
@end

@interface NSString (TSUDateFormatStringUtilities)
- (id)stringByReplacing2DigitYearStringWith4DigitYearString;
- (id)stringByReplacing4DigitYearStringWith2DigitYearString;
@end

@interface NSString (TSUNumberFormatStringUtilities)
+ (id)numberSymbols;
- (id)prefixOfNumberFormatSubpattern;
- (unsigned long long)indexOfFirstNonPrefixCharacterInNumberFormatSubpattern;
- (id)suffixOfNumberFormatSubpattern;
- (unsigned long long)indexOfLastNonSuffixCharacterInNumberFormatSubpattern;
- (id)numberPortionOfNumberFormatSubpattern;
- (id)negativeSubpatternOfNumberFormatPattern;
- (id)positiveSubpatternOfNumberFormatPattern;
- (unsigned long long)indexOfNumberFormatSubpatternSeparator;
- (id)stringByRemovingEscapedCharactersFromNumberFormatPattern;
- (id)newRangesOfEscapedCharactersInNumberFormatPattern;
- (_Bool)isNumberFormatPattern;
- (id)newStringBySubstitutingCharactersCFNumberFormatterDoesntUnderstand;
@end

@interface NSString (TSUUTIUtilities)
- (_Bool)tsu_pathExtensionConformsToUTI:(id)arg1;
- (_Bool)tsu_pathConformsToUTI:(id)arg1;
@property(readonly, nonatomic) NSString *tsu_pathUTI;
@property(readonly, nonatomic) NSString *tsu_UTIFilenameExtension;
- (_Bool)tsu_conformsToAnyUTI:(id)arg1;
- (_Bool)tsu_conformsToUTI:(id)arg1;
@end

@interface NSString (TSUVersionComparison)
- (long long)compareToVersionString:(id)arg1;
@end

@interface NSString (WETStringAdditions)
- (int)fontTypeAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 forXML:(_Bool)arg3;
- (int)fontTypeForCharacter:(unsigned short)arg1 isControl:(_Bool *)arg2;
@end

@interface NSString (WideStringCat)
+ (id)stringWithWideCString:(int *)arg1;
- (int *)cWideString;
- (id)initWithWideCString:(int *)arg1;
@end

@interface NSURL (OCPURLAdditions)
+ (id)URLWithPackagePart:(id)arg1;
- (_Bool)isInternalToPackage;
- (id)initWithPackagePart:(id)arg1;
@end

@interface NSURL (SFUtilityAdditions)
+ (id)filePathURLWithEscapes:(id)arg1;
+ (id)relativeURLWithEscapes:(id)arg1;
+ (id)improperlyEscapedString:(id)arg1;
+ (id)properlyEscapedString:(id)arg1;
- (_Bool)isRelative;
@end

@interface NSURL (TSUUTIUtilities)
- (_Bool)tsu_conformsToUTI:(id)arg1;
@property(readonly, nonatomic) NSString *tsu_UTI;
@end

@interface NSValue (NSValueCGGeometryExtensions)
+ (id)valueWithCGRect:(struct CGRect)arg1;
+ (id)valueWithCGSize:(struct CGSize)arg1;
+ (id)valueWithCGPoint:(struct CGPoint)arg1;
- (struct CGRect)cgRectValue;
- (struct CGSize)cgSizeValue;
- (struct CGPoint)cgPointValue;
@end

__attribute__((visibility("hidden")))
@interface OABBlip : NSObject
{
}

+ (void)writeBlip:(id)arg1 toBlipStoreEntry:(struct EshBSE *)arg2;
+ (struct EshBlip *)writeBlip:(id)arg1;
+ (id)readBlipFromEshBlip:(struct EshBlip *)arg1;
+ (id)readBlipFromBse:(id)arg1;
+ (void)writeEmptyBlipStoreEntry:(struct EshBSE *)arg1;
+ (id)compressMetafileData:(id)arg1 info:(struct EshMetafileBlipInfo *)arg2;
+ (void)setMetafileBoundsFromPictData:(id)arg1 info:(struct EshMetafileBlipInfo *)arg2;
+ (int)blipTypeForBlipSignature:(int)arg1;
+ (id)delayedSubBlipWithMetafileInfo:(const struct EshMetafileBlipInfo *)arg1;
+ (id)subBlipWithMetafileInfo:(const struct EshMetafileBlipInfo *)arg1;
+ (id)dibFileContentsWithDibBlipData:(const struct OcBinaryData *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABChart : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OABColor : NSObject
{
}

+ (unsigned short)eshSchemeColorIndexWithOADMapColorIndex:(int)arg1;
+ (int)oadMapColorIndexWithEshSchemeColorIndex:(unsigned short)arg1;
+ (int)writeSystemColorID:(int)arg1;
+ (id)readColor:(const struct EshColor *)arg1 colorPropertiesManager:(id)arg2 colorPalette:(id)arg3;
+ (struct EshColor)propertyColor:(int)arg1 colorPropertiesManager:(id)arg2;
+ (int)readColorAdjustmentType:(int)arg1;
+ (int)readSystemColorID:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABContent : NSObject
{
}

+ (void)readFromContent:(struct EshContent *)arg1 toDrawable:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OABDefaultsManager : NSObject <OABPropertiesManager>
{
}

- (_Bool)hidden;
- (_Bool)textPathStrikethrough;
- (_Bool)textPathSmallcaps;
- (_Bool)textPathUnderline;
- (_Bool)textPathItalic;
- (_Bool)textPathBold;
- (id)textPathFontFamily;
- (int)textPathFontSize;
- (int)textPathTextAlignment;
- (id)textPathUnicodeString;
- (_Bool)isTextPath;
- (_Bool)isShadowOK;
- (_Bool)isStrokeOK;
- (_Bool)isFillOK;
- (int)shadowSoftness;
- (int)shadowOffsetY;
- (int)shadowOffsetX;
- (int)shadowAlpha;
- (int)shadowType;
- (_Bool)isShadowed;
- (int)strokeEndArrowLength;
- (int)strokeEndArrowWidth;
- (int)strokeEndArrowType;
- (int)strokeStartArrowLength;
- (int)strokeStartArrowWidth;
- (int)strokeStartArrowType;
- (int)strokeJoinStyle;
- (int)strokeCapStyle;
- (const struct EshTablePropVal<int> *)strokeCustomDash;
- (int)strokePresetDash;
- (int)strokeCompoundType;
- (int)strokeMiterLimit;
- (int)strokeWidth;
- (int)strokeFgAlpha;
- (id)strokeFillBlipName;
- (unsigned int)strokeFillBlipID;
- (int)strokeFillType;
- (id)fillBlipName;
- (struct EshBlip *)fillBlipDataReference;
- (unsigned int)fillBlipID;
- (const struct EshTablePropVal<EshGradientStop> *)fillGradientColors;
- (int)fillFocusBottom;
- (int)fillFocusRight;
- (int)fillFocusTop;
- (int)fillFocusLeft;
- (int)fillFocus;
- (int)fillAngle;
- (int)fillBgAlpha;
- (int)fillFgAlpha;
- (int)fillType;
- (struct EshColor)shadowColor;
- (struct EshColor)strokeBgColor;
- (struct EshColor)strokeFgColor;
- (_Bool)isStroked;
- (struct EshColor)fillBgColor;
- (struct EshColor)fillFgColor;
- (_Bool)isFilled;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OABDrawable : NSObject
{
}

+ (id)readDrawablesFromContainer:(id)arg1 state:(id)arg2;
+ (id)readDrawableFromObject:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABDrawing : NSObject
{
}

+ (unsigned int)addShapeIdForObject:(id)arg1;
+ (void)applyRulesFromSolverContainer:(id)arg1 state:(id)arg2;
+ (id)readBackgroundPropertiesFromDrawing:(id)arg1 state:(id)arg2;
+ (id)readDrawablesFromDrawing:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABDrawingGroup : NSObject
{
}

+ (void)readGraphicalDefaultsFromDrawingGroup:(id)arg1 toTheme:(id)arg2 state:(id)arg3;
+ (void)readBlipsFromDrawingGroup:(id)arg1 toDocument:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OABFill : NSObject
{
}

+ (id)readFillFromFillPropertiesManager:(id)arg1 colorPalette:(id)arg2;
+ (void)readImageFill:(id)arg1 fromFillPropertiesManager:(id)arg2 colorPalette:(id)arg3;
+ (void)readGradientFill:(id)arg1 fromFillPropertiesManager:(id)arg2 colorPalette:(id)arg3;
+ (void)addStopsFromArray:(const struct OABGradientStop *)arg1 stopCount:(int)arg2 inverted:(_Bool)arg3 startPos:(float)arg4 endPos:(float)arg5 toGradientFill:(id)arg6 fillPropertiesManager:(id)arg7;

@end

__attribute__((visibility("hidden")))
@interface OABFillPropertiesManager : NSObject <OABFillPropertiesManager>
{
    const struct EshFill *mFill;
    int mShapeType;
    id <OABPropertiesManager> mMasterManager;
}

- (id)fillBlipName;
- (struct EshBlip *)fillBlipDataReference;
- (unsigned int)fillBlipID;
- (const struct EshTablePropVal<EshGradientStop> *)fillGradientColors;
- (int)fillFocusBottom;
- (int)fillFocusRight;
- (int)fillFocusTop;
- (int)fillFocusLeft;
- (int)fillFocus;
- (int)fillAngle;
- (int)fillBgAlpha;
- (int)fillFgAlpha;
- (int)fillType;
- (struct EshColor)shadowColor;
- (struct EshColor)strokeBgColor;
- (struct EshColor)strokeFgColor;
- (_Bool)isStroked;
- (struct EshColor)fillBgColor;
- (struct EshColor)fillFgColor;
- (_Bool)isFilled;
- (void)dealloc;
- (id)initWithFill:(const struct EshFill *)arg1 shapeType:(int)arg2 masterShape:(struct EshShape *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OABGroup : NSObject
{
}

+ (id)readGroup:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABImage : NSObject
{
}

+ (void)readfromShape:(id)arg1 toImage:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OABOle : NSObject
{
}

+ (id)readFromStream:(struct SsrwOOStream *)arg1 size:(unsigned int)arg2 cancel:(id)arg3;
+ (id)readCompressedFromStream:(struct SsrwOOStream *)arg1 compressedSize:(unsigned int)arg2 uncompressedSize:(unsigned int)arg3 cancel:(id)arg4;
+ (id)readFromData:(id)arg1 cancel:(id)arg2;
+ (id)readFromParentStorage:(struct SsrwOOStorage *)arg1 storageName:(id)arg2 cancel:(id)arg3;
+ (_Bool)readSharedInfoFor:(id)arg1 fromStorage:(struct SsrwOOStorage *)arg2;
+ (id)readUnicodeStringFromStream:(struct SsrwOOStream *)arg1;
+ (_Bool)isChart:(id)arg1;
+ (_Bool)isBiffCLSID:(id)arg1;
+ (id)readCLSIDFromStream:(struct SsrwOOStream *)arg1;
+ (id)stringForCLSID:(struct _SsrwOO_GUID)arg1;
+ (id)readAnsiStringFromStream:(struct SsrwOOStream *)arg1;
+ (id)read4ByteFromStream:(struct SsrwOOStream *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABRTable : NSObject
{
    ESDContainer *mSrcTable;
    OADTable *mTgtTable;
    OABReaderState *mState;
    struct CGPoint mScale;
    int mRowCount;
    int mColumnCount;
    OABTableSortedIntArray *mXCoords;
    OABTableSortedIntArray *mYCoords;
    struct OABTable2DArray<EshShape *> *mHorzLines;
    struct OABTable2DArray<EshShape *> *mVertLines;
    struct OABTable2DArray<OABTableCell> *mCells;
}

- (id).cxx_construct;
- (void)map;
- (void)createTargetTableContents;
- (id)readStrokeFromShape:(struct EshShape *)arg1;
- (void)validateTable;
- (void)readCellsAndLines;
- (void)readCoordinates;
- (void)mapScale;
- (void)readAnchor;
- (void)dealloc;
- (id)initWithSourceTable:(id)arg1 targetTable:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OABReaderClient : NSObject
{
}

+ (_Bool)sourceDrawableIsTopLevel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABShadow : NSObject
{
}

+ (id)readShadowFromShapeBaseManager:(id)arg1 colorPalette:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABShape : NSObject
{
}

+ (void)readGraphicDefaults:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (id)readShape:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABShapeBaseManager : OABFillPropertiesManager <OABBasePropertiesManager>
{
    struct EshShapeBase *mShapeBase;
}

- (int)shadowSoftness;
- (int)shadowOffsetY;
- (int)shadowOffsetX;
- (int)shadowAlpha;
- (int)shadowType;
- (_Bool)isShadowed;
- (int)strokeEndArrowLength;
- (int)strokeEndArrowWidth;
- (int)strokeEndArrowType;
- (int)strokeStartArrowLength;
- (int)strokeStartArrowWidth;
- (int)strokeStartArrowType;
- (int)strokeJoinStyle;
- (int)strokeCapStyle;
- (const struct EshTablePropVal<int> *)strokeCustomDash;
- (int)strokePresetDash;
- (int)strokeCompoundType;
- (int)strokeMiterLimit;
- (int)strokeWidth;
- (int)strokeFgAlpha;
- (id)strokeFillBlipName;
- (unsigned int)strokeFillBlipID;
- (int)strokeFillType;
- (struct EshColor)shadowColor;
- (struct EshColor)strokeBgColor;
- (struct EshColor)strokeFgColor;
- (_Bool)isStroked;
- (void)dealloc;
- (id)initWithShapeBase:(struct EshShapeBase *)arg1 shapeType:(int)arg2 masterShape:(struct EshShape *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OABShapeGeometry : NSObject
{
}

+ (void)writeFromShape:(id)arg1 toShape:(struct EshShape *)arg2;
+ (void)writeTextBodyRectsFromGeometry:(id)arg1 toPath:(struct EshPath *)arg2;
+ (void)writeFormulasFromGeometry:(id)arg1 toPath:(struct EshPath *)arg2;
+ (void)writePathCommandsAndParamsFromGeometry:(id)arg1 toPath:(struct EshPath *)arg2;
+ (void)appendAdjustPoint:(struct OADAdjustPoint)arg1 toPathParams:(struct EshPathParamTable *)arg2;
+ (void)writeLimoFromGeometry:(id)arg1 toPath:(struct EshPath *)arg2;
+ (void)writeCoordSpaceFromGeometry:(id)arg1 toShape:(struct EshShape *)arg2;
+ (void)writeAdjustValuesFromGeometry:(id)arg1 toShapeProperties:(struct EshShapeProperties *)arg2;
+ (struct EshComputedValue)computedValueWithAdjustCoord:(struct OADAdjustCoord)arg1;
+ (void)readFromLimo:(CsPoint_c846a6ec)arg1 toGeometry:(id)arg2;
+ (void)readFromTextBoxRects:(const EshTablePropVal_64904f96 *)arg1 toGeometry:(id)arg2;
+ (void)readFromFormulas:(const EshTablePropVal_f007a3b0 *)arg1 toGeometry:(id)arg2;
+ (void)readFromPathCommands:(const EshTablePropVal_ea625207 *)arg1 pathParams:(const struct EshPathParamTable *)arg2 toGeometry:(id)arg3;
+ (void)readFromShape:(struct EshShape *)arg1 toShape:(id)arg2;
+ (int)actualPathCommandForPathCommand:(int)arg1 index:(unsigned short)arg2;
+ (void)readLimoFromPath:(const struct EshPath *)arg1 toGeometry:(id)arg2;
+ (void)readPathCommandsAndParamsFromPath:(const struct EshPath *)arg1 toGeometry:(id)arg2;
+ (struct OADAdjustCoord)adjustCoordWithComputedValue:(struct EshComputedValue)arg1;
+ (void)readGeometryCoordSpaceFromShapeProperties:(const struct EshShapeProperties *)arg1 toGeometry:(id)arg2;
+ (void)readAdjustValuesFromShapeProperties:(const struct EshShapeProperties *)arg1 toGeometry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABShapeManager : OABShapeBaseManager <OABPropertiesManager>
{
    struct EshShape *mShape;
}

- (_Bool)hidden;
- (_Bool)textPathStrikethrough;
- (_Bool)textPathSmallcaps;
- (_Bool)textPathUnderline;
- (_Bool)textPathItalic;
- (_Bool)textPathBold;
- (id)textPathFontFamily;
- (int)textPathFontSize;
- (int)textPathTextAlignment;
- (id)textPathUnicodeString;
- (_Bool)isTextPath;
- (_Bool)isShadowed;
- (_Bool)isStroked;
- (_Bool)isFilled;
- (_Bool)isShadowOK;
- (_Bool)isStrokeOK;
- (_Bool)isFillOK;
- (id)initWithShape:(struct EshShape *)arg1;
- (id)initWithShape:(struct EshShape *)arg1 masterShape:(struct EshShape *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OABShapeProperties : NSObject
{
}

+ (id)targetColorWithSourceColor:(struct EshColor)arg1 alpha:(float)arg2 colorPropertiesManager:(id)arg3 colorPalette:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OABStroke : NSObject
{
}

+ (id)readLineEndWithType:(int)arg1 width:(int)arg2 length:(int)arg3;
+ (id)readStrokeFromShapeBaseManager:(id)arg1 colorPalette:(id)arg2;
+ (void)writePresetDashStyleForCustomDash:(id)arg1 toStroke:(struct EshStroke *)arg2 state:(id)arg3;
+ (int)writeCapStyle:(int)arg1;
+ (int)writeLineEndLength:(int)arg1;
+ (int)writeLineEndWidth:(int)arg1;
+ (int)writeLineEndType:(int)arg1;
+ (int)writePresetDashStyle:(int)arg1;
+ (int)writeCompoundType:(int)arg1;
+ (int)readCapStyle:(int)arg1;
+ (int)readLineEndLength:(int)arg1;
+ (int)readLineEndWidth:(int)arg1;
+ (int)readLineEndType:(int)arg1;
+ (int)readPresetDashStyle:(int)arg1;
+ (int)readCompoundType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABTable : NSObject
{
}

+ (id)readTable:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OABTableSortedIntArray : NSObject
{
    NSArray *mIntArray;
}

- (int)dim;
- (int)intAtIndex:(int)arg1;
- (int)indexOfInt:(int)arg1;
- (void)dealloc;
- (id)initWithIntSet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OABTextBodyProperties : NSObject
{
}

+ (void)writeTextBodyProperties:(id)arg1 toShapeBase:(struct EshShapeBase *)arg2 state:(id)arg3;
+ (void)setIsAnchorCenter:(int)arg1 textBodyProperties:(id)arg2;
+ (void)setTextAnchor:(int)arg1 textBodyProperties:(id)arg2;
+ (void)setWrap:(int)arg1 textBodyProperties:(id)arg2;
+ (void)setAutoFit:(_Bool)arg1 textBodyProperties:(id)arg2;
+ (void)setTextDirection:(int)arg1 textBodyProperties:(id)arg2;
+ (void)setTextFlow:(int)arg1 textBodyProperties:(id)arg2;
+ (void)setTextRotation:(int)arg1 textBodyProperties:(id)arg2;
+ (void)readTextBodyProperties:(id)arg1 textBox:(const struct EshTextBox *)arg2 useDefaults:(_Bool)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OABWordArt : NSObject
{
}

+ (void)readFromShapeManager:(id)arg1 toShape:(id)arg2 state:(id)arg3;
+ (int)readTextAlignment:(int)arg1;
+ (void)readFromShapeManager:(id)arg1 toCharacterProperties:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADAdjustRect : NSObject
{
    struct OADAdjustCoord mLeft;
    struct OADAdjustCoord mTop;
    struct OADAdjustCoord mRight;
    struct OADAdjustCoord mBottom;
}

- (id).cxx_construct;
- (id)description;
- (struct OADAdjustCoord)bottom;
- (struct OADAdjustCoord)right;
- (struct OADAdjustCoord)top;
- (struct OADAdjustCoord)left;
- (id)initWithLeft:(struct OADAdjustCoord)arg1 top:(struct OADAdjustCoord)arg2 right:(struct OADAdjustCoord)arg3 bottom:(struct OADAdjustCoord)arg4;

@end

__attribute__((visibility("hidden")))
@interface OADColor : NSObject <NSCopying>
{
    NSMutableArray *mTransforms;
}

+ (id)tsuColorWithRgbColor:(id)arg1;
+ (id)tsuColorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
+ (id)tsuColorWithColor:(id)arg1 colorMap:(id)arg2 colorScheme:(id)arg3 colorPalette:(id)arg4;
+ (float)alphaWithColor:(id)arg1;
+ (id)rgbColorWithColor:(id)arg1 colorMap:(id)arg2 colorScheme:(id)arg3 colorPalette:(id)arg4;
+ (id)mapAdjustedColor:(id)arg1 colorMap:(id)arg2 colorScheme:(id)arg3 colorPalette:(id)arg4;
+ (int)mapSchemeColorID:(int)arg1 colorMap:(id)arg2;
+ (id)basicMapOfColor:(id)arg1 colorMap:(id)arg2 colorScheme:(id)arg3 colorPalette:(id)arg4;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)colorForStyleColor:(id)arg1;
- (void)addTransformOfType:(int)arg1 value:(float)arg2;
- (void)addTransformOfType:(int)arg1;
- (void)setTransforms:(id)arg1;
- (id)transforms;
- (void)dealloc;
- (void)addTransform:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADAdjustedColor : OADColor
{
    OADColor *mBaseColor;
    int mAdjustmentType;
    unsigned char mAdjustmentParam;
    _Bool mInvert;
    _Bool mInvert128;
    _Bool mGray;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)gray;
- (_Bool)invert128;
- (_Bool)invert;
- (unsigned char)adjustmentParam;
- (int)adjustmentType;
- (id)baseColor;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithBaseColor:(id)arg1 adjustmentType:(int)arg2 adjustmentParam:(unsigned char)arg3 invert:(_Bool)arg4 invert128:(_Bool)arg5 gray:(_Bool)arg6;

@end

__attribute__((visibility("hidden")))
@interface OADBlipEffect : NSObject <NSCopying>
{
    int mType;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (int)type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADAlphaModFixEffect : OADBlipEffect
{
    float mAlpha;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setAlpha:(float)arg1;
- (float)alpha;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADPathElement : NSObject
{
}

- (id)description;

@end

__attribute__((visibility("hidden")))
@interface OADAngleArcPathElement : OADPathElement
{
    struct OADAdjustPoint mCenter;
    struct OADAdjustPoint mSemiaxes;
    struct OADAdjustCoord mStartAngle;
    struct OADAdjustCoord mAngleLength;
    _Bool mConnectedToPrevious;
}

- (id).cxx_construct;
- (_Bool)connectedToPrevious;
- (struct OADAdjustCoord)angleLength;
- (struct OADAdjustCoord)startAngle;
- (struct OADAdjustPoint)semiaxes;
- (struct OADAdjustPoint)center;
- (id)initWithCenter:(struct OADAdjustPoint)arg1 semiaxes:(struct OADAdjustPoint)arg2 startAngle:(struct OADAdjustCoord)arg3 angleLength:(struct OADAdjustCoord)arg4 connectedToPrevious:(_Bool)arg5;

@end

__attribute__((visibility("hidden")))
@interface OADArcToPathElement : OADPathElement
{
    struct OADAdjustPoint mSemiaxes;
    struct OADAdjustCoord mStartAngle;
    struct OADAdjustCoord mAngleLength;
}

- (id).cxx_construct;
- (struct OADAdjustCoord)angleLength;
- (struct OADAdjustCoord)startAngle;
- (struct OADAdjustPoint)semiaxes;
- (id)initWithSemiaxes:(struct OADAdjustPoint)arg1 startAngle:(struct OADAdjustCoord)arg2 angleLength:(struct OADAdjustCoord)arg3;

@end

__attribute__((visibility("hidden")))
@interface OCDDelayedMedia : OCDDelayedNode
{
}

- (_Bool)saveMediaToFile:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADMovie : OCDDelayedMedia
{
    NSData *mData;
    NSString *mName;
    float mStart;
    float mEnd;
    _Bool loop;
}

@property _Bool loop; // @synthesize loop;
@property float movieEndPoint; // @synthesize movieEndPoint=mEnd;
@property float movieStartPoint; // @synthesize movieStartPoint=mStart;
@property(retain) NSString *name; // @synthesize name=mName;
@property(retain) NSData *data; // @synthesize data=mData;
@property(readonly) _Bool isAudioOnly;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADLinkedMediaFile : OADMovie
{
    NSURL *mUrl;
    _Bool mIsExternal;
}

@property _Bool isExternal; // @synthesize isExternal=mIsExternal;
@property(retain) NSURL *url; // @synthesize url=mUrl;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADAudioFile : OADLinkedMediaFile
{
}

- (_Bool)isAudioOnly;

@end

__attribute__((visibility("hidden")))
@interface OADBulletProperties : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OADAutoNumberBulletProperties : OADBulletProperties
{
    int mSchemeType;
    unsigned long long mStartIndex;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)startIndex;
- (int)autoNumberSchemeType;
- (id)initWithAutoNumberSchemeType:(int)arg1 startIndex:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADBackdrop : NSObject <NSCopying>
{
    OADPoint3D *mAnchor;
    OADVector3D *mNormal;
    OADVector3D *mUp;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setUp:(id)arg1;
- (id)up;
- (void)setNormal:(id)arg1;
- (id)normal;
- (void)setAnchor:(id)arg1;
- (id)anchor;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADBackground : NSObject
{
}

- (id)description;

@end

__attribute__((visibility("hidden")))
@interface OADProperties : NSObject
{
    OADProperties *mParent;
    unsigned int mIsMerged:1;
    unsigned int mIsMergedWithParent:1;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)removeUnnecessaryOverrides;
- (void)flatten;
- (_Bool)isMergedPropertyForSelector:(SEL)arg1;
- (id)overrideForSelector:(SEL)arg1;
- (void)setMergedWithParent:(_Bool)arg1;
- (_Bool)isMergedWithParent;
- (void)setMerged:(_Bool)arg1;
- (_Bool)isMerged;
- (void)setParent:(id)arg1 myRestrictedClass:(Class)arg2;
- (void)setParent:(id)arg1;
- (void)p_setParent:(id)arg1;
- (void)dealloc;
- (id)parent;
- (id)initWithDefaults;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADFill : OADProperties <NSCopying>
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (float)alpha;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADBackgroundFill : OADFill
{
}

+ (id)defaultProperties;
- (void)setParent:(id)arg1;
- (void)setStyleColor:(id)arg1;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADBackgroundProperties : OADBackground
{
    OADFill *mFill;
    NSArray *mEffects;
}

- (_Bool)isEqual:(id)arg1;
- (void)setEffects:(id)arg1;
- (id)effects;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADBaseStylesBase : NSObject
{
    OADColorScheme *mColorScheme;
    OADStyleMatrix *mStyleMatrix;
    OADFontScheme *mFontScheme;
}

@property(retain, nonatomic) OADFontScheme *fontScheme; // @synthesize fontScheme=mFontScheme;
@property(retain, nonatomic) OADStyleMatrix *styleMatrix; // @synthesize styleMatrix=mStyleMatrix;
@property(retain, nonatomic) OADColorScheme *colorScheme; // @synthesize colorScheme=mColorScheme;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADBaseStyles : OADBaseStylesBase
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADBevel : NSObject <NSCopying>
{
    int mType;
    float mWidth;
    float mHeight;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setHeight:(float)arg1;
- (float)height;
- (void)setWidth:(float)arg1;
- (float)width;
- (void)setType:(int)arg1;
- (int)type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADLineJoin : OADProperties <NSCopying>
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADBevelLineJoin : OADLineJoin
{
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADBiLevelEffect : OADBlipEffect
{
    float mThreshold;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setThreshold:(float)arg1;
- (float)threshold;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADBlip : NSObject
{
    unsigned int mReferenceCount;
    OADSubBlip *mMainSubBlip;
    OADSubBlip *mAltSubBlip;
}

+ (id)pathExtensionForBlipType:(int)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (unsigned int *)referenceCount;
- (void)setAltSubBlip:(id)arg1;
- (id)altSubBlip;
- (void)setMainSubBlip:(id)arg1;
- (id)mainSubBlip;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADBlipCollection : NSObject
{
    NSMutableArray *mBlips;
}

@property(retain, nonatomic) NSMutableArray *blips; // @synthesize blips=mBlips;
- (unsigned int)blipCount;
- (unsigned int)addBlip:(id)arg1;
- (id)blipAtIndex:(int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADBlipRef : NSObject <NSCopying>
{
    int mIndex;
    NSString *mName;
    NSMutableArray *mEffects;
    OADBlip *mBlip;
}

+ (id)inflatedExtensionForGzippedExtension:(id)arg1;
+ (int)blipTypeForImageData:(id)arg1;
+ (int)blipTypeForContentType:(id)arg1;
+ (int)blipTypeForExtension:(id)arg1;
+ (id)blipRefWithIndex:(int)arg1 name:(id)arg2 blip:(id)arg3;
+ (id)blipRefWithIndex:(int)arg1 name:(id)arg2 blip:(id)arg3 effects:(id)arg4;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)effects;
- (_Bool)isNull;
- (void)removeEffectAtIndex:(unsigned long long)arg1;
- (id)effectAtIndex:(unsigned long long)arg1;
- (unsigned long long)effectCount;
- (void)setEffects:(id)arg1;
- (void)addEffect:(id)arg1;
- (void)setBlip:(id)arg1;
- (id)blip;
- (void)setName:(id)arg1;
- (id)name;
- (void)setIndex:(int)arg1;
- (int)index;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndex:(int)arg1 name:(id)arg2 blip:(id)arg3;
- (id)initWithIndex:(int)arg1 name:(id)arg2 blip:(id)arg3 effects:(id)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADBulletColor : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OADBulletColorFollowText : OADBulletColor
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface OADBulletColorSpecification : OADBulletColor
{
    OADColor *mColor;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)color;
- (void)dealloc;
- (id)initWithBulletColor:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADBulletFont : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OADBulletFontFollowText : OADBulletFont
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface OADBulletFontSpecification : OADBulletFont
{
    NSString *mFont;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)font;
- (void)dealloc;
- (id)initWithFont:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADBulletSize : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OADBulletSizeFollowText : OADBulletSize
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface OADCachedDrawableStyle : NSObject
{
    int mFillCategory;
    unsigned long long mFillIndex;
    unsigned long long mStrokeIndex;
    unsigned long long mShadowIndex;
    unsigned char mReflectionOpacity;
    unsigned long long mTextStyleIndex;
}

@property(readonly, nonatomic) unsigned long long textStyleIndex; // @synthesize textStyleIndex=mTextStyleIndex;
@property(readonly, nonatomic) unsigned char reflectionOpacity; // @synthesize reflectionOpacity=mReflectionOpacity;
@property(readonly, nonatomic) unsigned long long shadowIndex; // @synthesize shadowIndex=mShadowIndex;
@property(readonly, nonatomic) unsigned long long strokeIndex; // @synthesize strokeIndex=mStrokeIndex;
@property(readonly, nonatomic) unsigned long long fillIndex; // @synthesize fillIndex=mFillIndex;
@property(readonly, nonatomic) int fillCategory; // @synthesize fillCategory=mFillCategory;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithFillCategory:(int)arg1 mFillIndex:(unsigned long long)arg2 strokeIndex:(unsigned long long)arg3 shadowIndex:(unsigned long long)arg4 reflectionOpacity:(unsigned char)arg5 textStyleIndex:(unsigned long long)arg6;

@end

__attribute__((visibility("hidden")))
@interface OADCachedTextStyle : NSObject
{
    struct OADCachedTextStyleData mData;
    unsigned long long mHash;
}

- (id).cxx_construct;
- (void)applyToTextBodyProperties:(id)arg1 graphicStyleCache:(id)arg2;
- (void)applyToParagraphProperties:(id)arg1 graphicStyleCache:(id)arg2;
- (id)initWithTextBodyProperties:(id)arg1 paragraphProperties:(id)arg2 characterProperties:(id)arg3 colorContext:(id)arg4 graphicStyleCache:(id)arg5;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADCamera : NSObject <NSCopying>
{
    OADRotation3D *mRotation;
    int mCameraType;
    float mFieldOfView;
    float mZoom;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setZoom:(float)arg1;
- (float)zoom;
- (void)setFieldOfView:(float)arg1;
- (float)fieldOfView;
- (void)setCameraType:(int)arg1;
- (int)cameraType;
- (void)setRotation:(id)arg1;
- (id)rotation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADCharacterBulletProperties : OADBulletProperties
{
    NSString *mBullet;
}

- (_Bool)isEqual:(id)arg1;
- (id)bullet;
- (void)dealloc;
- (id)initWithBullet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADCharacterProperties : OADProperties <OADEffectsParent>
{
    NSString *mLatinFont;
    NSString *mEastAsianFont;
    NSString *mBidiFont;
    NSString *mHAnsiFont;
    NSString *mSymbolFont;
    OADHyperlink *mClickHyperlink;
    OADHyperlink *mHoverHyperlink;
    OADStroke *mStroke;
    OADFill *mFill;
    OADColor *mHighlight;
    NSArray *mEffects;
    OADUnderline *mUnderline;
    double mOpacity;
    double mSize;
    double mSpacing;
    double mBaseline;
    unsigned char mFormatType;
    unsigned char mFormatKerningType;
    unsigned char mStrikeThroughType;
    unsigned char mCaps;
    unsigned int mHasOpacity:1;
    unsigned int mHasIsBold:1;
    unsigned int mIsBold:1;
    unsigned int mHasIsItalic:1;
    unsigned int mIsItalic:1;
    unsigned int mHasFormatType:1;
    unsigned int mHasFormatKerningType:1;
    unsigned int mHasStrikeThroughType:1;
    unsigned int mHasSize:1;
    unsigned int mHasSpacing:1;
    unsigned int mHasKerning:1;
    unsigned int mHasIsVerticalText:1;
    unsigned int mIsVerticalText:1;
    unsigned int mHasIsRightToLeft:1;
    unsigned int mIsRightToLeft:1;
    unsigned int mHasBaseline:1;
    unsigned int mHasIsHorizontalNormalized:1;
    unsigned int mIsHorizontalNormalized:1;
    unsigned int mHasCaps:1;
}

+ (void)initialize;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)removeUnnecessaryOverrides;
- (void)overrideWithProperties:(id)arg1;
- (void)setHoverHyperlink:(id)arg1;
- (id)hoverHyperlink;
- (void)setClickHyperlink:(id)arg1;
- (id)clickHyperlink;
- (void)setSymbolFont:(id)arg1;
- (id)symbolFont;
- (_Bool)hasSymbolFont;
- (void)setHAnsiFont:(id)arg1;
- (id)hansiFont;
- (_Bool)hasHAnsiFont;
- (void)setBidiFont:(id)arg1;
- (id)bidiFont;
- (_Bool)hasBidiFont;
- (void)setEastAsianFont:(id)arg1;
- (id)eastAsianFont;
- (_Bool)hasEastAsianFont;
- (void)setLatinFont:(id)arg1;
- (id)latinFont;
- (_Bool)hasLatinFont;
- (void)setCaps:(int)arg1;
- (int)caps;
- (_Bool)hasCaps;
- (void)setIsHorizontalNormalized:(_Bool)arg1;
- (_Bool)isHorizontalNormalized;
- (_Bool)hasIsHorizontalNormalized;
- (void)setBaseline:(double)arg1;
- (double)baseline;
- (_Bool)hasBaseline;
- (void)setIsRightToLeft:(_Bool)arg1;
- (_Bool)isRightToLeft;
- (_Bool)hasIsRightToLeft;
- (void)setIsVerticalText:(_Bool)arg1;
- (_Bool)isVerticalText;
- (_Bool)hasIsVerticalText;
- (void)setSpacing:(double)arg1;
- (double)spacing;
- (_Bool)hasSpacing;
- (void)setSize:(double)arg1;
- (double)size;
- (_Bool)hasSize;
- (void)setStrikeThroughType:(int)arg1;
- (int)strikeThroughType;
- (_Bool)hasStrikeThroughType;
- (void)setFormatKerningType:(int)arg1;
- (int)formatKerningType;
- (_Bool)hasFormatKerningType;
- (void)setFormatType:(int)arg1;
- (int)formatType;
- (_Bool)hasFormatType;
- (void)setEffects:(id)arg1;
- (id)effects;
- (_Bool)hasEffects;
- (void)setIsItalic:(_Bool)arg1;
- (_Bool)isItalic;
- (_Bool)hasIsItalic;
- (void)setIsBold:(_Bool)arg1;
- (_Bool)isBold;
- (_Bool)hasIsBold;
- (void)setHighlight:(id)arg1;
- (id)highlight;
- (_Bool)hasHighlight;
- (void)setUnderline:(id)arg1;
- (id)underline;
- (_Bool)hasUnderline;
- (void)setOpacity:(double)arg1;
- (double)opacity;
- (_Bool)hasOpacity;
- (void)setFill:(id)arg1;
- (id)fill;
- (_Bool)hasFill;
- (void)setStroke:(id)arg1;
- (id)stroke;
- (_Bool)hasStroke;
- (void)dealloc;
- (id)initWithDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OADClosePathElement : OADPathElement
{
}

@end

__attribute__((visibility("hidden")))
@interface OADColorChangeEffect : OADBlipEffect
{
    OADColor *mFromColor;
    OADColor *mToColor;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (void)setToColor:(id)arg1;
- (id)toColor;
- (void)setFromColor:(id)arg1;
- (id)fromColor;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADColorContext : NSObject
{
    OADColorScheme *mScheme;
    OADColorMap *mMap;
    id <OADColorPalette> mPalette;
}

+ (id)colorContextWithScheme:(id)arg1 map:(id)arg2 palette:(id)arg3;
@property(readonly, nonatomic) id <OADColorPalette> palette; // @synthesize palette=mPalette;
@property(readonly, nonatomic) OADColorMap *map; // @synthesize map=mMap;
@property(readonly, nonatomic) OADColorScheme *scheme; // @synthesize scheme=mScheme;
- (void)dealloc;
- (id)initWithScheme:(id)arg1 map:(id)arg2 palette:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADColorMap : NSObject
{
    NSMutableDictionary *mMappings;
}

- (void)addDefaultMappings:(_Bool)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)addMapping:(int)arg1 index:(int)arg2;
- (int)mappingForIndex:(int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADColorScheme : NSObject <NSCopying>
{
    NSMutableDictionary *mColors;
}

- (_Bool)isEqual:(id)arg1;
- (void)addDefaultColors;
- (void)setColor:(id)arg1 index:(int)arg2;
- (void)addColor:(id)arg1 index:(int)arg2;
- (id)colorForIndex:(int)arg1;
- (unsigned long long)colorCount;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADColorTransform : NSObject <NSCopying>
{
    int mType;
}

+ (id)colorByApplyingTransforms:(id)arg1 toColor:(id)arg2;
+ (float)alphaByApplyingTransforms:(id)arg1 toAlpha:(float)arg2;
+ (id)applyExpTransformWithValue:(float)arg1 toColor:(id)arg2;
+ (id)applyHSLTransform:(id)arg1 toColor:(id)arg2;
+ (id)applyRGBTransform:(id)arg1 toColor:(id)arg2 skipGamma:(_Bool)arg3;
+ (float)applyAlphaTransform:(id)arg1 toAlpha:(float)arg2;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (int)type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(int)arg1;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface OADConnection : NSObject
{
    unsigned int mDrawableId;
    int mLocationIndex;
}

- (void)setLocationIndex:(int)arg1;
- (int)locationIndex;
- (void)setDrawableId:(unsigned int)arg1;
- (unsigned int)drawableId;

@end

__attribute__((visibility("hidden")))
@interface OADShape : OADGraphic
{
    OADShapeGeometry *mGeometry;
    OADTextBody *mTextBody;
}

- (id)description;
- (_Bool)isTextBox;
- (void)createPresetGeometryWithShapeType:(int)arg1;
- (void)removeUnnecessaryOverrides;
- (void)flattenProperties;
- (void)setParentTextListStyle:(id)arg1;
- (void)setTextBody:(id)arg1;
- (id)textBody;
- (id)shapeProperties;
- (int)type;
- (id)geometry;
- (void)setGeometry:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADConnector : OADShape
{
}

- (id)description;
- (id)connectorProperties;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADDrawableProperties : OADProperties
{
    OADOrientedBounds *mOrientedBounds;
    OADHyperlink *mClickHyperlink;
    OADHyperlink *mHoverHyperlink;
    NSString *mTitle;
    NSString *mDescription;
    unsigned int mHasAspectRatioLocked:1;
    unsigned int mAspectRatioLocked:1;
    unsigned int mHasWrdInline:1;
    unsigned int mWrdInline:1;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)removeUnnecessaryOverrides;
- (_Bool)hasAltDescription;
- (void)setAltDescription:(id)arg1;
- (id)altDescription;
- (_Bool)hasAltTitle;
- (void)setAltTitle:(id)arg1;
- (id)altTitle;
- (_Bool)hasWrdInline;
- (void)setWrdInline:(_Bool)arg1;
- (_Bool)isWrdInline;
- (_Bool)hasHoverHyperlink;
- (void)setHoverHyperlink:(id)arg1;
- (id)hoverHyperlink;
- (_Bool)hasClickHyperlink;
- (void)setClickHyperlink:(id)arg1;
- (id)clickHyperlink;
- (_Bool)hasAspectRatioLocked;
- (void)setAspectRatioLocked:(_Bool)arg1;
- (_Bool)isAspectRatioLocked;
- (_Bool)hasOrientedBounds;
- (void)setOrientedBounds:(id)arg1;
- (id)orientedBounds;
- (void)dealloc;
- (id)initWithDefaults;

@end

__attribute__((visibility("hidden")))
@interface OADGraphicProperties : OADDrawableProperties <OADEffectsParent, OADProperties3DParent>
{
    OADFill *mFill;
    NSArray *mEffects;
    NSArray *mExts;
    OADScene3D *mScene3D;
    OADShape3D *mShape3D;
    OADStroke *mStroke;
    unsigned int mHasIsBehindText:1;
    unsigned int mIsBehindText:1;
}

- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)removeUnnecessaryOverrides;
- (_Bool)hasIsBehindText;
- (void)setIsBehindText:(_Bool)arg1;
- (_Bool)isBehindText;
- (_Bool)hasStroke;
- (void)setStroke:(id)arg1;
- (id)stroke;
- (_Bool)hasShape3D;
- (void)setShape3D:(id)arg1;
- (id)shape3D;
- (_Bool)hasScene3D;
- (void)setScene3D:(id)arg1;
- (id)scene3D;
- (_Bool)hasExts;
- (_Bool)hasEffects;
- (void)setExts:(id)arg1;
- (id)exts;
- (void)setEffects:(id)arg1;
- (id)effects;
- (_Bool)hasFill;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)setParent:(id)arg1;
- (void)dealloc;
- (id)initWithDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OADShapeProperties : OADGraphicProperties
{
    _Bool mIsTextBox;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setIsTextBox:(_Bool)arg1;
- (_Bool)isTextBox;

@end

__attribute__((visibility("hidden")))
@interface OADConnectorProperties : OADShapeProperties
{
    OADConnection *mFrom;
    OADConnection *mTo;
}

+ (id)defaultProperties;
- (id)description;
- (id)to;
- (id)from;
- (void)dealloc;
- (id)init;
- (id)initWithDefaults;

@end

__attribute__((visibility("hidden")))
@interface OADCountedGraphicFeature : NSObject
{
    id mFeature;
    unsigned long long mUsageCount;
}

@property(nonatomic) unsigned long long usageCount; // @synthesize usageCount=mUsageCount;
- (long long)compareUsageCount:(id)arg1;
- (void)incrementUsageCount;
- (id)feature;
- (void)dealloc;
- (id)initWithFeature:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADCubicBezierToPathElement : OADPathElement
{
    struct OADAdjustPoint mControlPoint1;
    struct OADAdjustPoint mControlPoint2;
    struct OADAdjustPoint mToPoint;
    _Bool mRelative;
}

- (id).cxx_construct;
- (void)setRelative:(_Bool)arg1;
- (_Bool)relative;
- (struct OADAdjustPoint)toPoint;
- (struct OADAdjustPoint)controlPoint2;
- (struct OADAdjustPoint)controlPoint1;
- (id)initWithControlPoint1:(struct OADAdjustPoint)arg1 controlPoint2:(struct OADAdjustPoint)arg2 toPoint:(struct OADAdjustPoint)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADDash : OADProperties <NSCopying>
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADCustomDash : OADDash
{
    NSMutableArray *mStops;
    unsigned int mAreStopsOverridden:1;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)areStopsOverridden;
- (void)setStops:(id)arg1;
- (id)stops;
- (void)addStopWithDash:(float)arg1 space:(float)arg2;
- (float)spaceAtIndex:(unsigned long long)arg1;
- (float)dashAtIndex:(unsigned long long)arg1;
- (unsigned long long)stopCount;
- (void)dealloc;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPattern : OADProperties <NSCopying>
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADCustomPattern : OADPattern
{
    OADBlipRef *mBlipRef;
    _Bool mIsBlipRefOverridden;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isBlipRefOverridden;
- (void)setBlipRef:(id)arg1;
- (id)blipRef;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADShapeGeometry : NSObject
{
    _Bool mIsEscher;
    NSMutableDictionary *mAdjustValues;
}

- (id)description;
- (unsigned long long)adjustValueCount;
- (_Bool)hasAdjustValueAtIndex:(unsigned int)arg1;
- (int)adjustValueAtIndex:(unsigned int)arg1;
- (void)setAdjustValue:(int)arg1 atIndex:(unsigned int)arg2;
- (void)setIsEscher:(_Bool)arg1;
- (_Bool)isEscher;
- (id)adjustValues;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADCustomShapeGeometry : OADShapeGeometry
{
    CsRect_0aefebc6 *mGeometryCoordSpace;
    CsPoint_c846a6ec *mLimo;
    NSMutableArray *mFormulas;
    NSMutableArray *mTextBodyRects;
    NSMutableArray *mPaths;
}

- (id)description;
- (void)addPath:(id)arg1;
- (id)pathAtIndex:(unsigned long long)arg1;
- (unsigned long long)pathCount;
- (void)addTextBodyRect:(id)arg1;
- (id)textBodyRectAtIndex:(unsigned long long)arg1;
- (unsigned long long)textBodyRectCount;
- (void)addFormula:(id)arg1;
- (id)formulaAtIndex:(unsigned long long)arg1;
- (unsigned long long)formulaCount;
- (void)setLimo:(CsPoint_c846a6ec)arg1;
- (CsPoint_c846a6ec)limo;
- (void)setGeometryCoordSpace:(CsRect_0aefebc6)arg1;
- (CsRect_0aefebc6)geometryCoordSpace;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADDashStop : NSObject <NSCopying>
{
    float mDash;
    float mSpace;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (float)space;
- (float)dash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDash:(float)arg1 space:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADTextRun : NSObject
{
    OADCharacterProperties *mProperties;
}

- (void)removeUnnecessaryOverrides;
- (void)setProperties:(id)arg1;
- (id)properties;
- (unsigned long long)characterCount;
- (_Bool)isEmpty;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTextField : OADTextRun
{
    OADParagraphProperties *mParagraphProperties;
    NSString *mId;
    NSString *mText;
}

- (void)removeUnnecessaryOverrides;
- (void)setText:(id)arg1;
- (id)text;
- (void)setId:(id)arg1;
- (id)id;
- (id)paragraphProperties;
- (unsigned long long)characterCount;
- (_Bool)isEmpty;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADDateTimeField : OADTextField
{
    int mFormat;
}

- (_Bool)isEmpty;
- (void)setFormat:(int)arg1;
- (int)format;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADDefaultProperties : NSObject
{
    OADShapeProperties *mShapeProperties;
    OADTextBodyProperties *mTextBodyProperties;
    OADTextListStyle *mTextListStyle;
}

- (id)textListStyle;
- (void)setTextListStyle:(id)arg1;
- (id)textBodyProperties;
- (void)setTextBodyProperties:(id)arg1;
- (id)shapeProperties;
- (void)setShapeProperties:(id)arg1;
- (void)dealloc;
- (id)initWithDefaults;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADDrawingTheme : NSObject
{
    OADDefaultProperties *mShapeDefaults;
    OADDefaultProperties *mLineDefaults;
    OADDefaultProperties *mTextDefaults;
    OADStyleMatrix *mStyleMatrix;
    OADFontScheme *mFontScheme;
    OADColorScheme *mColorScheme;
    OADColorMap *mColorMap;
    id <OADColorPalette> mColorPalette;
}

@property(retain, nonatomic) id <OADColorPalette> colorPalette; // @synthesize colorPalette=mColorPalette;
@property(readonly, nonatomic) OADColorMap *colorMap; // @synthesize colorMap=mColorMap;
@property(retain, nonatomic) OADColorScheme *colorScheme; // @synthesize colorScheme=mColorScheme;
@property(readonly, nonatomic) OADFontScheme *fontScheme; // @synthesize fontScheme=mFontScheme;
@property(readonly, nonatomic) OADStyleMatrix *styleMatrix; // @synthesize styleMatrix=mStyleMatrix;
@property(readonly, nonatomic) OADDefaultProperties *textDefaults; // @synthesize textDefaults=mTextDefaults;
@property(readonly, nonatomic) OADDefaultProperties *lineDefaults; // @synthesize lineDefaults=mLineDefaults;
@property(readonly, nonatomic) OADDefaultProperties *shapeDefaults; // @synthesize shapeDefaults=mShapeDefaults;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
- (void)applyThemeOverrides:(id)arg1 colorMapOverride:(id)arg2;
- (id)initWithTheme:(id)arg1 colorMap:(id)arg2 colorPalette:(id)arg3;
- (id)initWithStyleMatrix:(id)arg1 fontScheme:(id)arg2 colorScheme:(id)arg3 colorMap:(id)arg4 colorPalette:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface OADDuotoneEffect : OADBlipEffect
{
    OADColor *mColor1;
    OADColor *mColor2;
    int mTransferMode1;
    int mTransferMode2;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (void)setTransferMode2:(int)arg1;
- (int)transferMode2;
- (void)setTransferMode1:(int)arg1;
- (int)transferMode1;
- (void)setColor2:(id)arg1;
- (id)color2;
- (void)setColor1:(id)arg1;
- (id)color1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADEffect : NSObject <NSCopying>
{
    int mType;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (int)type;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADEmbeddedMediaFile : OADMovie
{
}

@end

__attribute__((visibility("hidden")))
@interface OADFillOverlayEffect : OADEffect
{
    int mBlendMode;
    OADFill *mFill;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)setBlendMode:(int)arg1;
- (int)blendMode;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADFlattenedGroup : OADDrawable
{
    NSMutableArray *mDrawables;
}

- (void)addDrawable:(id)arg1;
- (id)drawables;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADFontReference : NSObject <NSCopying>
{
    int mIndex;
    OADColor *mColor;
}

- (id)description;
- (void)applyToParagraphProperties:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setIndex:(int)arg1;
- (int)index;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADFontScheme : NSObject
{
    NSMutableDictionary *mMajorFont;
    NSMutableDictionary *mMinorFont;
}

+ (void)addFontEntry:(id)arg1 script:(id)arg2 typeface:(id)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)minorFont;
- (id)minorTypefaceForScript:(id)arg1;
- (unsigned long long)minorFontCount;
- (id)majorFont;
- (id)majorTypefaceForScript:(id)arg1;
- (unsigned long long)majorFontCount;
- (id)fontForFontSchemeRef:(id)arg1;
- (_Bool)isFontSchemeRef:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADFooterField : OADTextField
{
}

- (_Bool)isEmpty;

@end

__attribute__((visibility("hidden")))
@interface OADForegroundColorEffect : OADBlipEffect
{
    OADColor *mForegroundColor;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (void)setForegroundColor:(id)arg1;
- (id)foregroundColor;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADFormula : NSObject
{
    int mType;
    struct OADFormulaArg mArgs[3];
    NSString *mName;
}

- (id).cxx_construct;
- (id)description;
- (void)setName:(id)arg1;
- (id)name;
- (void)dealloc;
- (struct OADFormulaArg)argAtIndex:(unsigned int)arg1;
- (int)type;
- (id)initWithType:(int)arg1 arg0:(struct OADFormulaArg)arg2 arg1:(struct OADFormulaArg)arg3 arg2:(struct OADFormulaArg)arg4;

@end

__attribute__((visibility("hidden")))
@interface OADGenericLinkedMediaFile : OADLinkedMediaFile
{
}

@end

__attribute__((visibility("hidden")))
@interface OADGenericTextField : OADTextField
{
    NSString *mType;
}

- (void)setType:(id)arg1;
- (id)type;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADGlowEffect : OADEffect
{
    OADColor *mColor;
    float mRadius;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setRadius:(float)arg1;
- (float)radius;
- (void)setColor:(id)arg1;
- (id)color;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADGradientFill : OADFill
{
    NSMutableArray *mStops;
    _Bool mAreStopsOverridden;
    OADRelativeRect *mTileRect;
    _Bool mIsTileRectOverridden;
    int mFlipMode;
    _Bool mIsFlipModeOverridden;
    _Bool mRotateWithShape;
    _Bool mIsRotateWithShapeOverridden;
    OADShade *mShade;
    _Bool mIsShadeOverridden;
}

+ (id)stringForTileFlipMode:(int)arg1;
+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (_Bool)isShadeOverridden;
- (void)setShade:(id)arg1;
- (id)shade;
- (_Bool)isRotateWithShapeOverridden;
- (void)setRotateWithShape:(_Bool)arg1;
- (_Bool)rotateWithShape;
- (_Bool)isFlipModeOverridden;
- (void)setFlipMode:(int)arg1;
- (int)flipMode;
- (_Bool)isTileRectOverridden;
- (void)setTileRect:(id)arg1;
- (id)tileRect;
- (void)addStopColor:(id)arg1 position:(float)arg2;
- (void)sortStops;
- (float)stopPositionAtIndex:(unsigned long long)arg1;
- (id)stopColorAtIndex:(unsigned long long)arg1;
- (unsigned long long)stopCount;
- (void)clearStops;
- (_Bool)areStopsOverridden;
- (void)setStops:(id)arg1;
- (id)stops;
- (void)setParent:(id)arg1;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADGradientFillStop : NSObject <NSCopying>
{
    OADColor *mColor;
    float mPosition;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (float)position;
- (id)color;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithColor:(id)arg1 position:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADGraphicFeatureCache : NSObject
{
    NSMutableArray *mFeatureUsageArray;
    OITSUNoCopyDictionary *mFeatureMap;
}

- (id)featuresSortedByUsageCount;
- (id)countedFeatureAtIndex:(unsigned long long)arg1;
- (unsigned long long)cacheFeature:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADGraphicStyleCache : NSObject
{
    OADGraphicFeatureCache *mFillCacheArray[4];
    OADGraphicFeatureCache *mStrokeCache;
    OADGraphicFeatureCache *mShadowCache;
    OADGraphicFeatureCache *mColorCache;
    OADGraphicFeatureCache *mFontFaceCache;
    OADGraphicFeatureCache *mTextStyleCache;
    OADGraphicFeatureCache *mTableIdCache;
    NSMutableDictionary *mTableStyleCache;
    OADGraphicFeatureCache *mChartIdCache;
    OADGraphicFeatureCache *mDrawableStyleCacheArray[4];
}

+ (int)fillCatagory:(id)arg1;
- (void)applyCachedDrawableStyle:(id)arg1 toTextBodyProperties:(id)arg2;
- (void)applyCachedDrawableStyle:(id)arg1 toParagraphProperties:(id)arg2;
- (void)applyCachedDrawableStyle:(id)arg1 toGraphicProperties:(id)arg2;
- (id)cachedDrawableStylesOfCategory:(int)arg1;
- (id)chartStyleIds;
- (id)tableStyleIds;
- (id)fillsOfCategory:(int)arg1;
- (id)shadows;
- (id)strokes;
- (id)countedDrawableStyleOfCategory:(int)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)cacheDrawablePropertiesOfCategory:(int)arg1 withGraphicProperties:(id)arg2 textBodyProperties:(id)arg3 paragraphProperties:(id)arg4 characterProperties:(id)arg5 colorContext:(id)arg6;
- (unsigned long long)cacheDrawablePropertiesOfCategory:(int)arg1 withFillCategory:(int)arg2 fillIndex:(unsigned long long)arg3 strokeIndex:(unsigned long long)arg4 shadowIndex:(unsigned long long)arg5 reflectionOpacity:(float)arg6 textStyleIndex:(unsigned long long)arg7;
- (void)cacheChartStyleId:(int)arg1;
- (id)tableStyleForId:(id)arg1;
- (void)cacheTableStyle:(id)arg1;
- (unsigned long long)cacheShadow:(id)arg1;
- (unsigned long long)cacheStroke:(id)arg1;
- (unsigned long long)cacheFill:(id)arg1 returnCategory:(int *)arg2;
- (id)fontFaceCache;
- (id)colorCache;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADGrayscaleEffect : OADBlipEffect
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADGroup : OADDrawable <OADDrawableContainer>
{
    struct CGRect mLogicalBounds;
    NSMutableArray *mChildren;
}

- (id).cxx_construct;
@property(readonly, copy) NSString *description;
- (void)removeUnnecessaryOverrides;
- (void)setParentTextListStyle:(id)arg1;
- (void)replaceChild:(id)arg1 with:(id)arg2;
- (id)children;
- (id)childAtIndex:(unsigned long long)arg1;
- (void)addChildren:(id)arg1;
- (void)addChild:(id)arg1;
- (unsigned long long)childCount;
- (void)setLogicalBounds:(struct CGRect)arg1;
- (struct CGRect)logicalBounds;
- (id)groupProperties;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OADGroupFill : OADFill
{
}

+ (id)defaultProperties;
- (void)setParent:(id)arg1;
- (void)setStyleColor:(id)arg1;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADGroupProperties : OADDrawableProperties <OADEffectsParent, OADProperties3DParent>
{
    OADFill *mFill;
    NSArray *mEffects;
    OADScene3D *mScene3D;
    OADShape3D *mShape3D;
}

+ (id)defaultProperties;
- (_Bool)hasShape3D;
- (void)setShape3D:(id)arg1;
- (id)shape3D;
- (_Bool)hasScene3D;
- (void)setScene3D:(id)arg1;
- (id)scene3D;
- (_Bool)hasEffects;
- (void)setEffects:(id)arg1;
- (id)effects;
- (_Bool)hasFill;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)dealloc;
- (id)initWithDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OADHyperlink : NSObject
{
    NSURL *mTargetLocation;
    int mTargetMode;
    NSString *mTargetFrame;
    NSString *mAction;
    NSString *mTooltip;
    NSString *mInvalidUrl;
    _Bool mDoEndSound;
    _Bool mIsVisited;
    _Bool mDoAddToHistory;
}

@property(nonatomic) _Bool doAddToHistory; // @synthesize doAddToHistory=mDoAddToHistory;
@property(nonatomic) _Bool isVisited; // @synthesize isVisited=mIsVisited;
@property(nonatomic) _Bool doEndSound; // @synthesize doEndSound=mDoEndSound;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setInvalidUrl:(id)arg1;
- (id)invalidUrl;
- (void)setTooltip:(id)arg1;
- (id)tooltip;
- (void)setAction:(id)arg1;
- (id)action;
- (void)setTargetFrame:(id)arg1;
- (id)targetFrame;
- (void)setTargetMode:(int)arg1;
- (int)targetMode;
- (void)setTargetLocation:(id)arg1;
- (id)targetLocation;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADImage : OADGraphic
{
    OADShapeGeometry *mGeometry;
    OADOle *mOle;
    OADMovie *mMovie;
}

- (id)description;
- (void)createPictureFramePresetGeometry;
- (id)createImageFill;
- (void)setParentTextListStyle:(id)arg1;
- (void)setMovie:(id)arg1;
- (id)movie;
- (void)setOle:(id)arg1;
- (id)ole;
- (void)setGeometry:(id)arg1;
- (id)geometry;
- (id)imageProperties;
- (id)initWithBlipRef:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADImageBulletProperties : OADBulletProperties
{
    OADBlipRef *mImage;
}

- (_Bool)isEqual:(id)arg1;
- (id)image;
- (void)dealloc;
- (id)initWithBlipRef:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADImageFill : OADFill
{
    OADBlipRef *mBlipRef;
    _Bool mIsBlipRefOverridden;
    OADRelativeRect *mSourceRect;
    _Bool mIsSourceRectOverridden;
    int mDpi;
    _Bool mIsDpiOverridden;
    _Bool mRotateWithShape;
    _Bool mIsRotateWithShapeOverridden;
    OADImageFillTechnique *mTechnique;
    _Bool mIsTechniqueOverridden;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (_Bool)isTechniqueOverridden;
- (void)setTechnique:(id)arg1;
- (id)technique;
- (_Bool)isRotateWithShapeOverridden;
- (void)setRotateWithShape:(_Bool)arg1;
- (_Bool)rotateWithShape;
- (_Bool)isDpiOverridden;
- (void)setDpi:(int)arg1;
- (int)dpi;
- (_Bool)isSourceRectOverridden;
- (void)setSourceRect:(id)arg1;
- (id)sourceRect;
- (_Bool)isBlipRefOverridden;
- (void)setBlipRef:(id)arg1;
- (id)blipRef;
- (id)color;
- (void)setParent:(id)arg1;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADImageFillTechnique : OADProperties <NSCopying>
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADImageProperties : OADGraphicProperties
{
    OADImageFill *mImageFill;
}

+ (id)defaultProperties;
- (_Bool)hasImageFill;
- (void)setImageFill:(id)arg1;
- (id)imageFill;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADImageRecolorInfo : NSObject
{
    NSDictionary *mColors;
    NSDictionary *mFills;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)fills;
- (id)colors;
- (void)dealloc;
- (id)initWithColors:(id)arg1 fills:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADIndexedColor : OADColor
{
    unsigned long long mIndex;
}

+ (id)indexedColorWithIndex:(unsigned long long)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)colorFromPalette:(id)arg1;
- (unsigned long long)index;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADShadowEffect : OADEffect
{
    OADColor *mColor;
    float mBlurRadius;
    float mDistance;
    float mAngle;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (void)setAngle:(float)arg1;
- (float)angle;
- (void)setDistance:(float)arg1;
- (float)distance;
- (void)setBlurRadius:(float)arg1;
- (float)blurRadius;
- (void)setColor:(id)arg1;
- (id)color;
- (void)dealloc;
- (id)initWithShadowEffect:(id)arg1 type:(int)arg2;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADInnerShadowEffect : OADShadowEffect
{
}

- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADLightRig : NSObject <NSCopying>
{
    OADRotation3D *mRotation;
    int mType;
    int mDirection;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setDirection:(int)arg1;
- (int)direction;
- (void)setType:(int)arg1;
- (int)type;
- (void)setRotation:(id)arg1;
- (id)rotation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADLine : OADShape
{
}

- (id)description;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADLineEnd : OADProperties <NSCopying>
{
    unsigned char mType;
    unsigned char mWidth;
    unsigned char mLength;
    unsigned int mIsTypeOverridden:1;
    unsigned int mIsWidthOverridden:1;
    unsigned int mIsLengthOverridden:1;
}

+ (id)stringForLineEndLength:(int)arg1;
+ (id)stringForLineEndWidth:(int)arg1;
+ (id)stringForLineEndType:(int)arg1;
+ (id)defaultProperties;
- (id)description;
- (_Bool)isLengthOverridden;
- (void)setLength:(int)arg1;
- (int)length;
- (_Bool)isWidthOverridden;
- (void)setWidth:(int)arg1;
- (int)width;
- (_Bool)isTypeOverridden;
- (void)setType:(int)arg1;
- (int)type;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithType:(int)arg1 width:(int)arg2 length:(int)arg3;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADLineProperties : OADShapeProperties
{
}

+ (id)defaultProperties;

@end

__attribute__((visibility("hidden")))
@interface OADToPointPathElement : OADPathElement
{
    struct OADAdjustPoint mToPoint;
    _Bool mRelative;
}

- (id).cxx_construct;
- (void)setRelative:(_Bool)arg1;
- (_Bool)relative;
- (struct OADAdjustPoint)toPoint;
- (id)initWithToPoint:(struct OADAdjustPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADLineToPathElement : OADToPointPathElement
{
}

@end

__attribute__((visibility("hidden")))
@interface OADShade : OADProperties <NSCopying>
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADLinearShade : OADShade
{
    float mAngle;
    _Bool mIsAngleOverridden;
    _Bool mScaled;
    _Bool mIsScaledOverridden;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isScaledOverridden;
- (void)setScaled:(_Bool)arg1;
- (_Bool)scaled;
- (_Bool)isAngleOverridden;
- (void)setAngle:(float)arg1;
- (float)angle;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADLuminanceEffect : OADBlipEffect
{
    float mBrightness;
    float mContrast;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setContrast:(float)arg1;
- (float)contrast;
- (void)setBrightness:(float)arg1;
- (float)brightness;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADMasterBackground : OADBackground
{
}

+ (id)masterBackground;
- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADMiterLineJoin : OADLineJoin
{
    float mLimit;
    unsigned int mIsLimitOverridden:1;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isLimitOverridden;
- (void)setLimit:(float)arg1;
- (float)limit;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADMoveToPathElement : OADToPointPathElement
{
}

@end

__attribute__((visibility("hidden")))
@interface OADTextBodyAutoFit : NSObject
{
    int mType;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (int)type;
- (id)initWithType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADNormalTextBodyAutoFit : OADTextBodyAutoFit
{
    float mFontScalePercent;
    float mLineSpacingReductionPercent;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (float)lineSpacingReductionPercent;
- (float)fontScalePercent;
- (id)initWithFontScalePercent:(float)arg1 lineSpacingReductionPercent:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADNullBulletProperties : OADBulletProperties
{
}

- (_Bool)isEqual:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADNullFill : OADFill
{
}

+ (id)nullFill;
+ (id)defaultProperties;
- (void)setParent:(id)arg1;
- (void)setStyleColor:(id)arg1;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADOle : NSObject
{
    _Bool mIconic;
    NSString *mCLSID;
    NSString *mAnsiUserType;
    NSString *mAnsiClipboardFormatName;
    unsigned int mWinClipboardFormat;
    NSString *mMacClipboardFormat;
    NSString *mAnsiProgID;
    NSString *mUnicodeUserType;
    NSString *mUnicodeClipboardFormatName;
    NSString *mUnicodeProgID;
    id mObject;
}

+ (_Bool)isCLSIDSupported:(id)arg1;
+ (_Bool)isProgIDMathType:(id)arg1;
+ (_Bool)isProgIDChart:(id)arg1;
- (id)description;
- (void)setObject:(id)arg1;
- (id)object;
- (void)setUnicodeProgID:(id)arg1;
- (id)unicodeProgID;
- (void)setUnicodeClipboardFormatName:(id)arg1;
- (id)unicodeClipboardFormatName;
- (void)setUnicodeUserType:(id)arg1;
- (id)unicodeUserType;
- (void)setAnsiProgID:(id)arg1;
- (id)ansiProgID;
- (void)setMacClipboardFormat:(id)arg1;
- (id)macClipboardFormat;
- (void)setWinClipboardFormat:(unsigned int)arg1;
- (unsigned int)winClipboardFormat;
- (void)setAnsiClipboardFormatName:(id)arg1;
- (id)ansiClipboardFormatName;
- (void)setAnsiUserType:(id)arg1;
- (id)ansiUserType;
- (void)setCLSID:(id)arg1;
- (id)CLSID;
- (void)setIconic:(_Bool)arg1;
- (_Bool)iconic;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADOrientedBounds : NSObject
{
    struct CGRect mBounds;
    float mRotation;
    unsigned int mFlipX:1;
    unsigned int mFlipY:1;
    int mModeX;
    int mModeY;
}

+ (_Bool)directionCloserToVerticalThanToHorizontal:(float)arg1;
+ (id)orientedBoundsWithBounds:(struct CGRect)arg1;
+ (id)orientedBoundsWithBounds:(struct CGRect)arg1 rotation:(float)arg2 flipX:(_Bool)arg3 flipY:(_Bool)arg4;
- (id).cxx_construct;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToOrientedBounds:(id)arg1;
- (struct CGRect)boundingBox;
- (struct CGSize)boundingBoxSize;
- (void)setYMode:(int)arg1;
- (int)yMode;
- (void)setXMode:(int)arg1;
- (int)xMode;
- (void)setFlipY:(_Bool)arg1;
- (_Bool)flipY;
- (void)setFlipX:(_Bool)arg1;
- (_Bool)flipX;
- (void)setRotation:(float)arg1;
- (float)rotation;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)bounds;
- (void)setOrientedBounds:(id)arg1;
- (id)init;
- (id)initWithBounds:(struct CGRect)arg1;
- (id)initWithBounds:(struct CGRect)arg1 rotation:(float)arg2 flipX:(_Bool)arg3 flipY:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface OADOuterShadowEffect : OADShadowEffect
{
    float mXScale;
    float mYScale;
    float mXSkew;
    float mYSkew;
    int mAlignment;
    _Bool mRotateWithShape;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setRotateWithShape:(_Bool)arg1;
- (_Bool)rotateWithShape;
- (void)setAlignment:(int)arg1;
- (int)alignment;
- (void)setYSkew:(float)arg1;
- (float)ySkew;
- (void)setXSkew:(float)arg1;
- (float)xSkew;
- (void)setYScale:(float)arg1;
- (float)yScale;
- (void)setXScale:(float)arg1;
- (float)xScale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADParagraph : NSObject
{
    OADParagraphProperties *mProperties;
    NSMutableArray *mTextRuns;
    OADCharacterProperties *mParagraphEndCharacterProperties;
}

- (void)removeUnnecessaryOverrides;
- (void)applyProperties:(id)arg1;
- (void)setParentTextListStyle:(id)arg1;
- (id)bulletCharacterProperties;
- (_Bool)hasBulletCharacterProperties;
- (void)setParagraphEndCharacterProperties:(id)arg1;
- (id)paragraphEndCharacterProperties;
- (id)addFooterField;
- (id)addDateTimeField;
- (id)addGenericTextField;
- (id)addRegularTextRun;
- (id)addTextLineBreak;
- (void)removeAllTextRuns;
- (id)textRunAtIndex:(unsigned long long)arg1;
- (unsigned long long)textRunCount;
- (unsigned long long)characterCount;
- (_Bool)isEmpty;
- (id)properties;
- (void)dealloc;
- (id)init;
- (id)plainText;
- (id)findFirstTextRunOfClass:(Class)arg1;
- (id)addSlideNumberField;

@end

__attribute__((visibility("hidden")))
@interface OADParagraphProperties : OADCharacterProperties
{
    OADBulletSize *mBulletSize;
    OADBulletColor *mBulletColor;
    OADBulletFont *mBulletFont;
    OADBulletProperties *mBulletProperties;
    OADTextSpacing *mLineSpacing;
    OADTextSpacing *mBeforeSpacing;
    OADTextSpacing *mAfterSpacing;
    NSMutableArray *mTabStops;
    double mLeftMargin;
    double mRightMargin;
    double mIndent;
    double mDefaultTab;
    int mLevel;
    int mBulletCharSet;
    unsigned char mAlign;
    unsigned char mWrap;
    unsigned char mFontAlign;
    unsigned int mIsLatinLineBreak:1;
    unsigned int mIsHangingPunctuation:1;
    unsigned int mHasTabStops:1;
    unsigned int mHasLeftMargin:1;
    unsigned int mHasRightMargin:1;
    unsigned int mHasLevel:1;
    unsigned int mHasIndent:1;
    unsigned int mHasAlign:1;
    unsigned int mHasDefaultTab:1;
    unsigned int mHasWrap:1;
    unsigned int mHasFontAlign:1;
    unsigned int mHasIsLatinLineBreak:1;
    unsigned int mHasIsHangingPunctuation:1;
    unsigned int mHasBulletCharSet:1;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)removeUnnecessaryOverrides;
- (void)overrideWithCharacterProperties:(id)arg1;
- (void)overrideWithProperties:(id)arg1;
- (void)setBulletCharSet:(int)arg1;
- (int)bulletCharSet;
- (_Bool)hasBulletCharSet;
- (void)setBulletProperties:(id)arg1;
- (id)bulletProperties;
- (_Bool)hasBulletProperties;
- (void)setBulletFont:(id)arg1;
- (id)bulletFont;
- (_Bool)hasBulletFont;
- (void)setBulletColor:(id)arg1;
- (id)bulletColor;
- (_Bool)hasBulletColor;
- (void)setBulletSize:(id)arg1;
- (id)bulletSize;
- (_Bool)hasBulletSize;
- (void)setIsHangingPunctuation:(_Bool)arg1;
- (_Bool)isHangingPunctuation;
- (_Bool)hasIsHangingPunctuation;
- (void)setIsLatinLineBreak:(_Bool)arg1;
- (_Bool)isLatinLineBreak;
- (_Bool)hasIsLatinLineBreak;
- (void)setFontAlign:(int)arg1;
- (int)fontAlign;
- (_Bool)hasFontAlign;
- (void)setWrap:(int)arg1;
- (int)wrap;
- (_Bool)hasWrap;
- (void)setDefaultTab:(double)arg1;
- (double)defaultTab;
- (_Bool)hasDefaultTab;
- (void)setAlign:(int)arg1;
- (int)align;
- (_Bool)hasAlign;
- (void)setIndent:(double)arg1;
- (double)indent;
- (_Bool)hasIndent;
- (void)setLevel:(int)arg1;
- (int)level;
- (_Bool)hasLevel;
- (void)setRightMargin:(double)arg1;
- (double)rightMargin;
- (_Bool)hasRightMargin;
- (double)nonOveridenLeftMargin;
- (void)setLeftMargin:(double)arg1;
- (double)leftMargin;
- (_Bool)hasLeftMargin;
- (id)tabStops;
- (void)clearTabStops;
- (id)addTabStop;
- (id)tabStopAtIndex:(unsigned long long)arg1;
- (unsigned long long)tabStopCount;
- (_Bool)hasTabStops;
- (void)setAfterSpacing:(id)arg1;
- (id)afterSpacing;
- (_Bool)hasAfterSpacing;
- (void)setBeforeSpacing:(id)arg1;
- (id)beforeSpacing;
- (_Bool)hasBeforeSpacing;
- (void)setLineSpacing:(id)arg1;
- (id)lineSpacing;
- (_Bool)hasLineSpacing;
- (void)dealloc;
- (id)initWithDefaults;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADPath : NSObject
{
    struct CGSize mSize;
    NSMutableArray *mElements;
    int mFillMode;
    _Bool mStroked;
}

- (id).cxx_construct;
- (void)setStroked:(_Bool)arg1;
- (_Bool)stroked;
- (void)setFillMode:(int)arg1;
- (int)fillMode;
- (id)elementAtIndex:(unsigned long long)arg1;
- (unsigned long long)elementCount;
- (void)addElement:(id)arg1;
- (void)setSize:(struct CGSize)arg1;
- (struct CGSize)size;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADPathShade : OADShade
{
    OADRelativeRect *mFillToRect;
    _Bool mIsFillToRectOverridden;
    int mType;
    _Bool mIsTypeOverridden;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isTypeOverridden;
- (void)setType:(int)arg1;
- (int)type;
- (_Bool)isFillToRectOverridden;
- (void)setFillToRect:(id)arg1;
- (id)fillToRect;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPatternFill : OADFill
{
    OADColor *mFgColor;
    _Bool mIsFgColorOverridden;
    OADColor *mBgColor;
    _Bool mIsBgColorOverridden;
    OADPattern *mPattern;
    _Bool mIsPatternOverridden;
}

+ (id)defaultProperties;
- (id)namedImageDataWithBlipCollection:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (void)setColor:(id)arg1;
- (_Bool)isPatternOverridden;
- (void)setPattern:(id)arg1;
- (id)pattern;
- (_Bool)isBgColorOverridden;
- (void)setBgColor:(id)arg1;
- (id)bgColor;
- (_Bool)isFgColorOverridden;
- (void)setFgColor:(id)arg1;
- (id)fgColor;
- (void)setParent:(id)arg1;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPercentBulletSize : OADBulletSize
{
    float mPercent;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (float)percent;
- (id)initWithPercent:(float)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADTextSpacing : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OADPercentTextSpacing : OADTextSpacing
{
    float mPercent;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (float)percent;
- (id)initWithPercent:(float)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPlaceholderColor : OADColor
{
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)colorForStyleColor:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPoint3D : NSObject <NSCopying>
{
    float mX;
    float mY;
    float mZ;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (float)z;
- (float)y;
- (float)x;
- (id)initWithX:(float)arg1 y:(float)arg2 z:(float)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADPointBulletSize : OADBulletSize
{
    int mPoints;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (int)points;
- (id)initWithPoints:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPointTextSpacing : OADTextSpacing
{
    int mPoints;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (int)points;
- (id)initWithPoints:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPresetDash : OADDash
{
    unsigned char mType;
    unsigned int mIsTypeOverridden:1;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)equivalentCustomDash;
- (_Bool)isTypeOverridden;
- (void)setType:(int)arg1;
- (int)type;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPresetPattern : OADPattern
{
    int mType;
    _Bool mIsTypeOverridden;
}

+ (id)namedBitmapDataForPresetPatternType:(int)arg1;
+ (id)nameForPresetPatternType:(int)arg1;
+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isTypeOverridden;
- (void)setType:(int)arg1;
- (int)type;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADPresetShadowEffect : OADShadowEffect
{
    int mPresetShadowType;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)equivalentOuterShadowEffect;
- (void)setPresetShadowType:(int)arg1;
- (int)presetShadowType;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADPresetShapeGeometry : OADShapeGeometry
{
    int mType;
}

- (id)description;
- (id)equivalentCustomGeometry;
- (id)escherEquivalentCustomGeometry;
- (id)oa12EquivalentCustomGeometry;
- (void)setType:(int)arg1;
- (int)type;

@end

__attribute__((visibility("hidden")))
@interface OADTextWarp : NSObject
{
}

+ (id)nullWarp;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

__attribute__((visibility("hidden")))
@interface OADPresetTextWarp : OADTextWarp
{
    int mPresetTextWarpType;
}

+ (id)stringWithPresetTextWarpType:(int)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setPresetTextWarpType:(int)arg1;
- (int)presetTextWarpType;

@end

__attribute__((visibility("hidden")))
@interface OADQTStubFile : OADEmbeddedMediaFile
{
    _Bool isAudioOnly;
}

@property(nonatomic) _Bool isAudioOnly; // @synthesize isAudioOnly;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface OADQuadBezierControlPointPathElement : OADPathElement
{
    struct OADAdjustPoint mControlPoint;
}

- (id).cxx_construct;
- (struct OADAdjustPoint)controlPoint;
- (id)initWithControlPoint:(struct OADAdjustPoint)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADQuadBezierToPathElement : OADPathElement
{
    struct OADAdjustPoint mControlPoint;
    struct OADAdjustPoint mToPoint;
}

- (id).cxx_construct;
- (struct OADAdjustPoint)toPoint;
- (struct OADAdjustPoint)controlPoint;
- (id)initWithControlPoint:(struct OADAdjustPoint)arg1 toPoint:(struct OADAdjustPoint)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADQuarterEllipseToPathElement : OADToPointPathElement
{
    _Bool mStartsVertical;
}

- (_Bool)startsVertical;
- (id)initWithToPoint:(struct OADAdjustPoint)arg1 startsVertical:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADQuickTimeFile : OADLinkedMediaFile
{
}

@end

__attribute__((visibility("hidden")))
@interface OADReflectionEffect : OADEffect
{
    float mBlurRadius;
    float mStartOpacity;
    float mStartPosition;
    float mEndOpacity;
    float mEndPosition;
    float mDistance;
    float mDirection;
    float mFadeDirection;
    float mXScale;
    float mYScale;
    float mXSkew;
    float mYSkew;
    int mAlignment;
    _Bool mRotateWithShape;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setRotateWithShape:(_Bool)arg1;
- (_Bool)rotateWithShape;
- (void)setAlignment:(int)arg1;
- (int)alignment;
- (void)setYSkew:(float)arg1;
- (float)ySkew;
- (void)setXSkew:(float)arg1;
- (float)xSkew;
- (void)setYScale:(float)arg1;
- (float)yScale;
- (void)setXScale:(float)arg1;
- (float)xScale;
- (void)setFadeDirection:(float)arg1;
- (float)fadeDirection;
- (void)setDirection:(float)arg1;
- (float)direction;
- (void)setDistance:(float)arg1;
- (float)distance;
- (void)setEndPosition:(float)arg1;
- (float)endPosition;
- (void)setEndOpacity:(float)arg1;
- (float)endOpacity;
- (void)setStartPosition:(float)arg1;
- (float)startPosition;
- (void)setStartOpacity:(float)arg1;
- (float)startOpacity;
- (void)setBlurRadius:(float)arg1;
- (float)blurRadius;
- (void)setStyleColor:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADRegularTextRun : OADTextRun
{
    NSMutableString *mText;
}

- (id)text;
- (unsigned long long)characterCount;
- (_Bool)isEmpty;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADRelativeRect : NSObject <NSCopying>
{
    float mLeft;
    float mTop;
    float mRight;
    float mBottom;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setBottom:(float)arg1;
- (float)bottom;
- (void)setRight:(float)arg1;
- (float)right;
- (void)setTop:(float)arg1;
- (float)top;
- (void)setLeft:(float)arg1;
- (float)left;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLeft:(float)arg1 top:(float)arg2 right:(float)arg3 bottom:(float)arg4;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADRgbColor : OADColor
{
    float mRed;
    float mGreen;
    float mBlue;
}

+ (id)white;
+ (id)black;
+ (id)rgbColorWithTSUColor:(id)arg1;
+ (id)rgbColorWithWhiteByte:(float)arg1;
+ (id)rgbColorWithWhite:(float)arg1;
+ (id)rgbColorWithRedByte:(float)arg1 greenByte:(float)arg2 blueByte:(float)arg3;
+ (id)rgbColorWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isBlack;
- (_Bool)isWhite;
- (unsigned char)blueByte;
- (unsigned char)greenByte;
- (unsigned char)redByte;
- (float)blue;
- (float)green;
- (float)red;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)rgbColorWithFraction:(float)arg1 ofRgbColor:(id)arg2;
- (id)initWithWhiteByte:(float)arg1;
- (id)initWithWhite:(float)arg1;
- (id)initWithRedByte:(float)arg1 greenByte:(float)arg2 blueByte:(float)arg3;
- (id)initWithRed:(float)arg1 green:(float)arg2 blue:(float)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADRotation3D : NSObject <NSCopying>
{
    float mLatitude;
    float mLongitude;
    float mRevolution;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (float)revolution;
- (float)longitude;
- (float)latitude;
- (id)initWithLatitude:(float)arg1 longitude:(float)arg2 revolution:(float)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADRoundLineJoin : OADLineJoin
{
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADScene3D : NSObject <NSCopying>
{
    OADCamera *mCamera;
    OADLightRig *mLightRig;
    OADBackdrop *mBackdrop;
}

+ (id)nullScene3D;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setBackdrop:(id)arg1;
- (id)backdrop;
- (void)setLightRig:(id)arg1;
- (id)lightRig;
- (void)setCamera:(id)arg1;
- (id)camera;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADSchemeColor : OADColor
{
    int mIndex;
}

+ (id)schemeColorWithIndex:(int)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (int)schemeColorIndex;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSchemeColorIndex:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADShape3D : NSObject <NSCopying>
{
    OADBevel *mTopBevel;
    OADBevel *mBottomBevel;
    OADColor *mExtrusionColor;
    float mExtrusionHeight;
    OADColor *mContourColor;
    float mContourWidth;
    float mShapeDepth;
    int mMaterial;
}

+ (id)nullShape3D;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setMaterial:(int)arg1;
- (int)material;
- (void)setShapeDepth:(float)arg1;
- (float)shapeDepth;
- (void)setContourWidth:(float)arg1;
- (float)contourWidth;
- (void)setContourColor:(id)arg1;
- (id)contourColor;
- (void)setExtrusionHeight:(float)arg1;
- (float)extrusionHeight;
- (void)setExtrusionColor:(id)arg1;
- (id)extrusionColor;
- (void)setBottomBevel:(id)arg1;
- (id)bottomBevel;
- (void)setTopBevel:(id)arg1;
- (id)topBevel;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADShapeStyle : NSObject <NSCopying>
{
    OADStyleMatrixReference *mLineReference;
    OADStyleMatrixReference *mFillReference;
    OADStyleMatrixReference *mEffectReference;
    OADFontReference *mFontReference;
}

- (void)setFontReference:(id)arg1;
- (id)fontReference;
- (void)setEffectMatrixIndex:(unsigned int)arg1 color:(id)arg2;
- (void)setEffectReference:(id)arg1;
- (id)effectReference;
- (void)setFillMatrixIndex:(unsigned int)arg1 color:(id)arg2;
- (void)setFillReference:(id)arg1;
- (id)fillReference;
- (void)setLineMatrixIndex:(unsigned int)arg1 color:(id)arg2;
- (void)setLineReference:(id)arg1;
- (id)lineReference;
- (void)applyToParagraphProperties:(id)arg1;
- (void)applyToTextListStyle:(id)arg1;
- (void)applyToTextBody:(id)arg1;
- (void)applyToGraphicProperties:(id)arg1 styleMatrix:(id)arg2 useNull:(_Bool)arg3 strokeWidthMultiplier:(float)arg4;
- (void)applyToGraphicProperties:(id)arg1 styleMatrix:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADSolidFill : OADFill
{
    OADColor *mColor;
    _Bool mIsColorOverridden;
}

+ (id)blackFill;
+ (id)whiteFill;
+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (_Bool)isColorOverridden;
- (void)setColor:(id)arg1;
- (id)color;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADSound : OCDDelayedMedia
{
    NSData *mSoundData;
    NSString *mName;
    int mSizeInBytes;
}

- (id)description;
- (_Bool)isLoaded;
- (void)setSizeInBytes:(int)arg1;
- (int)sizeInBytes;
- (void)setName:(id)arg1;
- (id)name;
- (void)setSoundData:(id)arg1;
- (id)soundData;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADStretchTechnique : OADImageFillTechnique
{
    OADRelativeRect *mFillRect;
    _Bool mIsFillRectOverridden;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isFillRectOverridden;
- (void)setFillRect:(id)arg1;
- (id)fillRect;
- (void)dealloc;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADStroke : OADProperties <NSCopying>
{
    OADColor *mColor;
    OADFill *mFill;
    OADDash *mDash;
    OADLineJoin *mJoin;
    OADLineEnd *mHead;
    OADLineEnd *mTail;
    float mWidth;
    unsigned char mCap;
    unsigned char mCompoundType;
    unsigned char mPenAlignment;
    unsigned int mIsColorOverridden:1;
    unsigned int mIsCompoundTypeOverridden:1;
    unsigned int mIsCapOverridden:1;
    unsigned int mIsWidthOverridden:1;
    unsigned int mIsJoinOverridden:1;
    unsigned int mIsDashOverridden:1;
    unsigned int mIsFillOverridden:1;
    unsigned int mIsPenAlignmentOverridden:1;
}

+ (id)defaultProperties;
+ (id)blackStroke;
+ (id)nullStroke;
@property(retain, nonatomic) OADLineEnd *tail; // @synthesize tail=mTail;
@property(retain, nonatomic) OADLineEnd *head; // @synthesize head=mHead;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setStyleColor:(id)arg1;
- (_Bool)isPenAlignmentOverridden;
- (void)setPenAlignment:(int)arg1;
- (int)penAlignment;
- (_Bool)isCompoundTypeOverridden;
- (void)setCompoundType:(int)arg1;
- (int)compoundType;
- (_Bool)isCapOverridden;
- (void)setCap:(int)arg1;
- (int)cap;
- (_Bool)isWidthOverridden;
- (void)setWidth:(float)arg1;
- (float)width;
- (_Bool)isJoinOverridden;
- (void)setJoin:(id)arg1;
- (id)join;
- (_Bool)isDashOverridden;
- (void)setDash:(id)arg1;
- (id)dash;
- (_Bool)isFillOverridden;
- (void)setFill:(id)arg1;
- (id)fill;
- (_Bool)isColorOverridden;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setParent:(id)arg1;
- (id)initWithDefaults;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADStyleMatrix : NSObject
{
    NSMutableArray *mFills;
    NSMutableArray *mStrokes;
    NSMutableArray *mEffects;
    NSMutableArray *mBgFills;
}

+ (id)objectInArray:(id)arg1 withPossiblyOutOfRangeIndex:(unsigned long long)arg2 defaultValue:(id)arg3;
- (void)populateWithOfficeDefaults;
- (id)bgFillAtIndex:(unsigned long long)arg1;
- (unsigned long long)bgFillCount;
- (void)addBgFill:(id)arg1;
- (id)effectsAtIndex:(unsigned long long)arg1 color:(id)arg2;
- (id)effectsAtIndex:(unsigned long long)arg1;
- (unsigned long long)effectsCount;
- (void)addEffects:(id)arg1;
- (id)strokeAtIndex:(unsigned long long)arg1 color:(id)arg2;
- (id)strokeAtIndex:(unsigned long long)arg1;
- (unsigned long long)strokeCount;
- (void)addStroke:(id)arg1;
- (id)fillAtIndex:(unsigned long long)arg1 color:(id)arg2;
- (id)fillAtIndex:(unsigned long long)arg1;
- (unsigned long long)fillCount;
- (void)addFill:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADStyleMatrixReference : NSObject <NSCopying>
{
    unsigned long long mMatrixIndex;
    OADColor *mColor;
}

+ (id)styleMatrixReferenceWithMatrixIndex:(unsigned long long)arg1 color:(id)arg2;
- (void)applyToEffectsInProperties:(id)arg1 styleMatrix:(id)arg2;
- (void)applyToFillInProperties:(id)arg1 styleMatrix:(id)arg2;
- (void)applyToStrokeInProperties:(id)arg1 styleMatrix:(id)arg2;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setMatrixIndex:(unsigned long long)arg1;
- (unsigned long long)matrixIndex;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithMatrixIndex:(unsigned long long)arg1 color:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADSubBlip : OCDDelayedMedia
{
    int mType;
    NSData *mData;
    struct CGSize mSizeInPoints;
    int mSizeInBytes;
    struct CGRect mFrame;
}

- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isLoaded;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGRect)frame;
- (void)setSizeInBytes:(int)arg1;
- (int)sizeInBytes;
- (void)setSizeInPoints:(struct CGSize)arg1;
- (struct CGSize)sizeInPoints;
- (void)setType:(int)arg1;
- (int)type;
- (void)setData:(id)arg1;
- (id)data;
- (void)dealloc;
- (id)initWithData:(id)arg1 type:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface OADSystemColor : OADColor
{
    int mSystemColorID;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (int)systemColorID;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSystemColorID:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADTabStop : NSObject
{
    unsigned char mAlign;
    int mPosition;
}

- (unsigned long long)hash;
- (void)setPosition:(int)arg1;
- (int)position;
- (void)setAlign:(int)arg1;
- (int)align;

@end

__attribute__((visibility("hidden")))
@interface OADTable : OADDrawable
{
    OADTableGrid *mGrid;
    NSMutableArray *mRows;
}

+ (void)applyTextStyle:(id)arg1 toParagraphProperties:(id)arg2;
- (void)setParentTextListStyle:(id)arg1;
- (id)addRow;
- (id)rowAtIndex:(unsigned long long)arg1;
- (unsigned long long)rowCount;
- (id)grid;
- (id)tableProperties;
- (void)dealloc;
- (id)init;
- (id)masterCellOfPos:(struct OADTMatrixPos)arg1;
- (struct OADTMatrixPos)masterPosOfPos:(struct OADTMatrixPos)arg1;
- (id)cellAtPos:(struct OADTMatrixPos)arg1;
- (void)flattenStyle;

@end

__attribute__((visibility("hidden")))
@interface OADTableBackground : NSObject <OADEffectsParent>
{
    OADFill *mFill;
    NSArray *mEffects;
}

- (_Bool)hasEffects;
- (void)setEffects:(id)arg1;
- (id)effects;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OADTableCell : NSObject
{
    OADTextBody *mTextBody;
    OADTableCellProperties *mProperties;
    int mRowSpan;
    int mGridSpan;
    _Bool mHorzMerge;
    _Bool mVertMerge;
    int mTopRow;
    int mLeftColumn;
}

- (void)setLeftColumn:(int)arg1;
- (int)leftColumn;
- (void)setTopRow:(int)arg1;
- (int)topRow;
- (_Bool)merge:(int)arg1;
- (void)setVertMerge:(_Bool)arg1;
- (_Bool)vertMerge;
- (void)setHorzMerge:(_Bool)arg1;
- (_Bool)horzMerge;
- (void)setGridSpan:(int)arg1;
- (int)gridSpan;
- (void)setRowSpan:(int)arg1;
- (int)rowSpan;
- (int)spanAlongDir:(int)arg1;
- (void)setProperties:(id)arg1;
- (id)properties;
- (void)setTextBody:(id)arg1;
- (id)textBody;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTableCell3DProperties : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OADTableCellBorderStyle : NSObject
{
    OADStroke *mLeftStroke;
    OADStroke *mRightStroke;
    OADStroke *mTopStroke;
    OADStroke *mBottomStroke;
    OADStroke *mHorzInsideStroke;
    OADStroke *mVertInsideStroke;
    OADStroke *mTopLeftToBottomRightStroke;
    OADStroke *mBottomLeftToTopRightStroke;
}

+ (id)defaultStyle;
+ (id)defaultObliqueStroke;
+ (id)defaultAxisParallelStroke;
- (void)applyOverridesFrom:(id)arg1;
- (id)shallowCopy;
- (void)setBottomLeftToTopRightStroke:(id)arg1;
- (id)bottomLeftToTopRightStroke;
- (void)setTopLeftToBottomRightStroke:(id)arg1;
- (id)topLeftToBottomRightStroke;
- (void)setVertInsideStroke:(id)arg1;
- (id)vertInsideStroke;
- (void)setHorzInsideStroke:(id)arg1;
- (id)horzInsideStroke;
- (void)setBottomStroke:(id)arg1;
- (id)bottomStroke;
- (void)setTopStroke:(id)arg1;
- (id)topStroke;
- (void)setRightStroke:(id)arg1;
- (id)rightStroke;
- (void)setLeftStroke:(id)arg1;
- (id)leftStroke;
- (id)stroke:(int)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADTableCellProperties : NSObject
{
    OADStroke *mLeftStroke;
    _Bool mIsLeftStrokeOverridden;
    OADStroke *mRightStroke;
    _Bool mIsRightStrokeOverridden;
    OADStroke *mTopStroke;
    _Bool mIsTopStrokeOverridden;
    OADStroke *mBottomStroke;
    _Bool mIsBottomStrokeOverridden;
    OADStroke *mTopLeftToBottomRightStroke;
    _Bool mIsTopLeftToBottomRightStrokeOverridden;
    OADStroke *mBottomLeftToTopRightStroke;
    _Bool mIsBottomLeftToTopRightStrokeOverridden;
    OADTableCell3DProperties *mThreeDProperties;
    _Bool mIsThreeDPropertiesOverridden;
    OADFill *mFill;
    _Bool mIsFillOverridden;
    float mLeftMargin;
    _Bool mIsLeftMarginOverridden;
    float mRightMargin;
    _Bool mIsRightMarginOverridden;
    float mTopMargin;
    _Bool mIsTopMarginOverridden;
    float mBottomMargin;
    _Bool mIsBottomMarginOverridden;
    int mTextFlow;
    _Bool mIsTextFlowOverridden;
    int mTextAnchor;
    _Bool mIsTextAnchorOverridden;
    _Bool mTextAnchorCenter;
    _Bool mIsTextAnchorCenterOverridden;
    int mTextHorizontalOverflow;
    _Bool mIsTextHorizontalOverflowOverridden;
}

- (_Bool)isTextHorizontalOverflowOverridden;
- (void)setTextHorizontalOverflow:(int)arg1;
- (int)textHorizontalOverflow;
- (_Bool)isTextAnchorCenterOverridden;
- (void)setTextAnchorCenter:(_Bool)arg1;
- (_Bool)textAnchorCenter;
- (_Bool)isTextAnchorOverridden;
- (void)setTextAnchor:(int)arg1;
- (int)textAnchor;
- (_Bool)isTextFlowOverridden;
- (void)setTextFlow:(int)arg1;
- (int)textFlow;
- (_Bool)isBottomMarginOverridden;
- (void)setBottomMargin:(float)arg1;
- (float)bottomMargin;
- (_Bool)isTopMarginOverridden;
- (void)setTopMargin:(float)arg1;
- (float)topMargin;
- (_Bool)isRightMarginOverridden;
- (void)setRightMargin:(float)arg1;
- (float)rightMargin;
- (_Bool)isLeftMarginOverridden;
- (void)setLeftMargin:(float)arg1;
- (float)leftMargin;
- (_Bool)isFillOverridden;
- (void)setFill:(id)arg1;
- (id)fill;
- (_Bool)isThreeDPropertiesOverridden;
- (void)setThreeDProperties:(id)arg1;
- (id)threeDProperties;
- (id)strokeNormalToDir:(int)arg1 bound:(int)arg2;
- (_Bool)isBottomLeftToTopRightStrokeOverridden;
- (void)setBottomLeftToTopRightStroke:(id)arg1;
- (id)bottomLeftToTopRightStroke;
- (_Bool)isTopLeftToBottomRightStrokeOverridden;
- (void)setTopLeftToBottomRightStroke:(id)arg1;
- (id)topLeftToBottomRightStroke;
- (_Bool)isBottomStrokeOverridden;
- (void)setBottomStroke:(id)arg1;
- (id)bottomStroke;
- (_Bool)isTopStrokeOverridden;
- (void)setTopStroke:(id)arg1;
- (id)topStroke;
- (_Bool)isRightStrokeOverridden;
- (void)setRightStroke:(id)arg1;
- (id)rightStroke;
- (_Bool)isLeftStrokeOverridden;
- (void)setLeftStroke:(id)arg1;
- (id)leftStroke;
- (id)stroke:(int)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADTableCellStyle : NSObject
{
    OADTableCellBorderStyle *mBorderStyle;
    OADFill *mFill;
}

+ (id)defaultStyle;
+ (id)defaultFill;
- (void)applyOverridesFrom:(id)arg1;
- (id)shallowCopy;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)setBorderStyle:(id)arg1;
- (id)borderStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADTableColumn : NSObject
{
    float mWidth;
}

- (id)description;
- (void)setWidth:(float)arg1;
- (float)width;

@end

__attribute__((visibility("hidden")))
@interface OADTableGrid : NSObject
{
    NSMutableArray *mColumns;
}

- (id)addColumn;
- (id)columnAtIndex:(unsigned long long)arg1;
- (unsigned long long)columnCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTablePartStyle : NSObject
{
    OADTableTextStyle *mTextStyle;
    OADTableCellStyle *mCellStyle;
}

+ (id)defaultStyle;
- (void)applyOverridesFrom:(id)arg1;
- (id)shallowCopy;
- (void)setCellStyle:(id)arg1;
- (id)cellStyle;
- (void)setTextStyle:(id)arg1;
- (id)textStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADTableProperties : OADDrawableProperties <OADEffectsParent>
{
    OADTableStyle *mStyle;
    _Bool mRightToLeft;
    _Bool mFirstRow;
    _Bool mFirstColumn;
    _Bool mLastRow;
    _Bool mLastColumn;
    _Bool mBandRow;
    _Bool mBandColumn;
    NSArray *mEffects;
}

+ (id)defaultProperties;
- (_Bool)hasEffects;
- (void)setEffects:(id)arg1;
- (id)effects;
- (_Bool)hasVectorNormalToDir:(int)arg1 atExtremePos:(int)arg2;
- (_Bool)hasBandsNormalToDir:(int)arg1;
- (void)setBandColumn:(_Bool)arg1;
- (_Bool)bandColumn;
- (void)setBandRow:(_Bool)arg1;
- (_Bool)bandRow;
- (void)setLastColumn:(_Bool)arg1;
- (_Bool)lastColumn;
- (void)setLastRow:(_Bool)arg1;
- (_Bool)lastRow;
- (void)setFirstColumn:(_Bool)arg1;
- (_Bool)firstColumn;
- (void)setFirstRow:(_Bool)arg1;
- (_Bool)firstRow;
- (void)setRightToLeft:(_Bool)arg1;
- (_Bool)rightToLeft;
- (void)setStyle:(id)arg1;
- (id)style;
- (void)dealloc;
- (id)initWithDefaults;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OADTableRow : NSObject
{
    NSMutableArray *mCells;
    float mHeight;
}

- (void)setHeight:(float)arg1;
- (float)height;
- (id)addCell;
- (id)cellAtIndex:(unsigned long long)arg1;
- (unsigned long long)cellCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTableStyle : NSObject
{
    NSString *mName;
    NSString *mId;
    OADTableBackground *mBackground;
    OADTablePartStyle *mWholeTableStyle;
    OADTablePartStyle *mBand1HorzStyle;
    OADTablePartStyle *mBand2HorzStyle;
    OADTablePartStyle *mBand1VertStyle;
    OADTablePartStyle *mBand2VertStyle;
    OADTablePartStyle *mFirstRowStyle;
    OADTablePartStyle *mFirstColumnStyle;
    OADTablePartStyle *mLastRowStyle;
    OADTablePartStyle *mLastColumnStyle;
    OADTablePartStyle *mNorthEastStyle;
    OADTablePartStyle *mNorthWestStyle;
    OADTablePartStyle *mSouthEastStyle;
    OADTablePartStyle *mSouthWestStyle;
}

- (void)setSouthWestStyle:(id)arg1;
- (id)southWestStyle;
- (void)setSouthEastStyle:(id)arg1;
- (id)southEastStyle;
- (void)setNorthWestStyle:(id)arg1;
- (id)northWestStyle;
- (void)setNorthEastStyle:(id)arg1;
- (id)northEastStyle;
- (void)setLastColumnStyle:(id)arg1;
- (id)lastColumnStyle;
- (void)setLastRowStyle:(id)arg1;
- (id)lastRowStyle;
- (void)setFirstColumnStyle:(id)arg1;
- (id)firstColumnStyle;
- (void)setFirstRowStyle:(id)arg1;
- (id)firstRowStyle;
- (void)setBand2VertStyle:(id)arg1;
- (id)band2VertStyle;
- (void)setBand1VertStyle:(id)arg1;
- (id)band1VertStyle;
- (void)setBand2HorzStyle:(id)arg1;
- (id)band2HorzStyle;
- (void)setBand1HorzStyle:(id)arg1;
- (id)band1HorzStyle;
- (void)setWholeTableStyle:(id)arg1;
- (id)wholeTableStyle;
- (id)partStyle:(int)arg1;
- (void)setBackground:(id)arg1;
- (id)background;
- (void)setId:(id)arg1;
- (id)id;
- (void)setName:(id)arg1;
- (id)name;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OADTableStyleFlattener : NSObject
{
    OADTable *mTable;
    OADTableProperties *mTableProperties;
    OADTableStyle *mTableStyle;
    int mColumnCount;
    int mRowCount;
    struct OADTFTemplateMatrix<OADTableCell *> *mCellMatrix;
    struct OADTFTemplateMatrix<OADTablePartStyle *> *mCellStyles;
    struct OADTFTemplateMatrix<OADStroke *> *mStrokes[2];
}

- (void)flatten;
- (void)writeResolvedStyling;
- (void)applyStylingToTextInCell:(id)arg1;
- (void)applyCellStyleToTextBodyWithCell:(id)arg1;
- (void)applyCellPropertiesToTextBodyWithCell:(id)arg1;
- (void)applyStyleStrokes;
- (void)applyCornerStrokes;
- (void)applyCornerStrokesWithRowPos:(int)arg1 columnPos:(int)arg2 part:(int)arg3;
- (void)applyExtremeVectorStrokes;
- (void)applyStrokeOfExtremeVectorNormalToDir:(int)arg1 atExtremePos:(int)arg2;
- (void)applyBandStrokes;
- (void)applyStrokesOfBandsNormalToDir:(int)arg1 parity:(int)arg2 part:(int)arg3;
- (int)cellParityRelativeToDir1:(int)arg1 i1:(int)arg2 i2:(int)arg3;
- (void)applyWholeTableStrokes;
- (void)createStrokeMatrices;
- (void)applyStrokesFromPart:(int)arg1 fromPos:(struct OADTMatrixPos)arg2 toPos:(struct OADTMatrixPos)arg3;
- (void)applyStroke:(int)arg1 fromPart:(int)arg2 normalToDir1:(int)arg3 i1:(int)arg4 fromI2:(int)arg5 toI2:(int)arg6;
- (void)applyStroke:(int)arg1 fromPart:(int)arg2 normalToDir1:(int)arg3 i1:(int)arg4 fromI2:(int)arg5 dir2Span:(int)arg6;
- (void)setStroke:(id)arg1 ofSegmentNormalToDir1:(int)arg2 i1:(int)arg3 fromI2:(int)arg4;
- (id)strokeOfSegmentNormalToDir1:(int)arg1 i1:(int)arg2 fromI2:(int)arg3;
- (struct OADTMatrixPos)dominantCellInRowRange:(struct _NSRange)arg1 columnRange:(struct _NSRange)arg2;
- (void)applyCellStyles;
- (void)applyCornerCellStyles;
- (void)applyCornerCellStyleWithRowPos:(int)arg1 columnPos:(int)arg2 part:(int)arg3;
- (void)applyExtremeVectorCellStyles;
- (void)applyCellStyleOfExtremeVectorNormalToDir:(int)arg1 atExtremePos:(int)arg2 part:(int)arg3;
- (void)applyBandCellStyles;
- (void)applyCellStyleOfBandsNormalToDir:(int)arg1 parity:(int)arg2 part:(int)arg3;
- (void)applyWholeTableCellStyle;
- (void)applyCellStyleFromPart:(int)arg1 dir1:(int)arg2 fromI1:(int)arg3 fromI2:(int)arg4 dir1Span:(int)arg5 dir2Span:(int)arg6;
- (int)cellCountAlongDir:(int)arg1;
- (id)sourceCellAtI1:(int)arg1 i2:(int)arg2 dir1:(int)arg3;
- (void)loadCells;
- (void)fixVectorAtExtremePositionFlags;
- (void)dealloc;
- (id)initWithTable:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADTableTextStyle : NSObject
{
    OADFontReference *mFontReference;
    OADColor *mColor;
    int mBold;
    int mItalic;
}

+ (id)defaultStyle;
+ (int)defaultItalic;
+ (int)defaultBold;
+ (id)defaultFontReference;
+ (id)defaultColor;
- (void)applyOverridesFrom:(id)arg1;
- (id)shallowCopy;
- (void)setItalic:(int)arg1;
- (int)italic;
- (void)setBold:(int)arg1;
- (int)bold;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setFontReference:(id)arg1;
- (id)fontReference;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTextBody : NSObject
{
    OADTextBodyProperties *mProperties;
    NSMutableArray *mParagraphs;
    OADTextListStyle *mTextListStyle;
}

- (void)propagateActualTextStyleToTextListStyle;
- (void)removeUnnecessaryOverrides;
- (void)flattenProperties;
- (_Bool)isEmpty;
- (void)removeLeadingNewlines;
- (void)removeTrailingNewlines;
- (void)setParentTextListStyle:(id)arg1;
- (void)applyTextListStyle:(id)arg1;
- (id)overrideTextListStyle;
- (id)textListStyle;
- (void)removeAllParagraphs;
- (id)addParagraph;
- (id)paragraphAtIndex:(unsigned long long)arg1;
- (unsigned long long)nonEmptyParagraphCount;
- (unsigned long long)paragraphCount;
- (void)setProperties:(id)arg1;
- (id)properties;
- (void)dealloc;
- (id)init;
- (id)plainText;
- (void)addParagraphsFromTextBody:(id)arg1;
- (id)findFirstTextRunOfClass:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADTextBodyProperties : OADProperties
{
    OADTextBodyAutoFit *mAutoFit;
    OADTextWarp *mTextWarp;
    double mTopInset;
    double mLeftInset;
    double mBottomInset;
    double mRightInset;
    double mRotation;
    double mColumnSpacing;
    unsigned short mColumnCount;
    unsigned short mTextBodyId;
    unsigned char mTextAnchorType;
    unsigned char mFlowType;
    unsigned char mWrapType;
    unsigned char mVerticalOverflowType;
    unsigned char mHorizontalOverflowType;
    unsigned int mRepectFirstLastParagraphSpacing:1;
    unsigned int mIsUpright:1;
    unsigned int mIsAnchorCenter:1;
    unsigned int mIsLeftToRightColumns:1;
    unsigned int mHasVerticalOverflowType:1;
    unsigned int mHasHorizontalOverflowType:1;
    unsigned int mHasTextBodyId:1;
    unsigned int mHasFlowType:1;
    unsigned int mHasWrapType:1;
    unsigned int mHasTextAnchorType:1;
    unsigned int mHasIsAnchorCenter:1;
    unsigned int mHasIsUpright:1;
    unsigned int mHasRotation:1;
    unsigned int mHasColumnCount:1;
    unsigned int mHasColumnSpacing:1;
    unsigned int mHasIsLeftToRightColumns:1;
    unsigned int mHasRepectFirstLastParagraphSpacing:1;
    unsigned int mHasTopInset:1;
    unsigned int mHasLeftInset:1;
    unsigned int mHasRightInset:1;
    unsigned int mHasBottomInset:1;
}

+ (id)defaultEscherWordArtProperties;
+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)removeUnnecessaryOverrides;
- (void)setRotation:(double)arg1;
- (double)rotation;
- (_Bool)hasRotation;
- (void)setIsUpright:(_Bool)arg1;
- (_Bool)isUpright;
- (_Bool)hasIsUpright;
- (void)setTextAnchorType:(int)arg1;
- (int)textAnchorType;
- (_Bool)hasTextAnchorType;
- (void)setIsAnchorCenter:(_Bool)arg1;
- (_Bool)isAnchorCenter;
- (_Bool)hasIsAnchorCenter;
- (_Bool)isWarped;
- (void)setTextWarp:(id)arg1;
- (id)textWarp;
- (_Bool)hasTextWarp;
- (void)setTextBodyId:(int)arg1;
- (int)textBodyId;
- (_Bool)hasTextBodyId;
- (void)setHorizontalOverflowType:(int)arg1;
- (int)horizontalOverflowType;
- (_Bool)hasHorizontalOverflowType;
- (void)setVerticalOverflowType:(int)arg1;
- (int)verticalOverflowType;
- (_Bool)hasVerticalOverflowType;
- (void)setWrapType:(int)arg1;
- (int)wrapType;
- (_Bool)hasWrapType;
- (void)setFlowType:(int)arg1;
- (int)flowType;
- (_Bool)hasFlowType;
- (void)setAutoFit:(id)arg1;
- (id)autoFit;
- (_Bool)hasAutoFit;
- (void)setIsLeftToRightColumns:(_Bool)arg1;
- (_Bool)isLeftToRightColumns;
- (_Bool)hasIsLeftToRightColumns;
- (void)setColumnSpacing:(double)arg1;
- (double)columnSpacing;
- (_Bool)hasColumnSpacing;
- (void)setColumnCount:(int)arg1;
- (int)columnCount;
- (_Bool)hasColumnCount;
- (void)setRightInset:(double)arg1;
- (double)rightInset;
- (void)setBottomInset:(double)arg1;
- (double)bottomInset;
- (void)setLeftInset:(double)arg1;
- (double)leftInset;
- (void)setTopInset:(double)arg1;
- (double)topInset;
- (_Bool)hasBottomInset;
- (_Bool)hasRightInset;
- (_Bool)hasLeftInset;
- (_Bool)hasTopInset;
- (void)setRespectLastFirstLineSpacing:(_Bool)arg1;
- (_Bool)respectLastFirstLineSpacing;
- (_Bool)hasRespectLastFirstLineSpacing;
- (void)dealloc;
- (id)initWithDefaults;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTextLineBreak : OADTextRun
{
}

- (_Bool)isEmpty;

@end

__attribute__((visibility("hidden")))
@interface OADTextListStyle : NSObject
{
    NSMutableArray *mParagraphProperties;
}

- (void)removeUnnecessaryOverrides;
- (void)overrideWithTextStyle:(id)arg1;
- (void)flatten;
- (void)setParentTextListStyle:(id)arg1;
- (void)setPropertiesForListLevel:(unsigned long long)arg1 properties:(id)arg2;
- (id)propertiesForListLevel:(unsigned long long)arg1;
- (id)defaultProperties;
- (void)dealloc;
- (id)initWithDefaults;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADTheme : NSObject
{
    OADBaseStyles *mBaseStyles;
    OADDefaultProperties *mShapeDefaults;
    OADDefaultProperties *mLineDefaults;
    OADDefaultProperties *mTextDefaults;
}

@property(retain, nonatomic) OADDefaultProperties *textDefaults; // @synthesize textDefaults=mTextDefaults;
@property(retain, nonatomic) OADDefaultProperties *lineDefaults; // @synthesize lineDefaults=mLineDefaults;
@property(retain, nonatomic) OADDefaultProperties *shapeDefaults; // @synthesize shapeDefaults=mShapeDefaults;
@property(retain, nonatomic) OADBaseStyles *baseStyles; // @synthesize baseStyles=mBaseStyles;
- (id)addTextDefaults;
- (id)addLineDefaults;
- (id)addShapeDefaults;
- (void)addDefaults;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OADThemeOverrides : OADBaseStylesBase
{
}

- (void)setFontScheme:(id)arg1;
- (void)setStyleMatrix:(id)arg1;
- (void)setColorScheme:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADTileTechnique : OADImageFillTechnique
{
    float mOffsetX;
    _Bool mIsOffsetXOverridden;
    float mOffsetY;
    _Bool mIsOffsetYOverridden;
    float mScaleX;
    _Bool mIsScaleXOverridden;
    float mScaleY;
    _Bool mIsScaleYOverridden;
    int mFlipMode;
    _Bool mIsFlipModeOverridden;
    int mAlignment;
    _Bool mIsAlignmentOverridden;
}

+ (id)defaultProperties;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isAlignmentOverridden;
- (void)setAlignment:(int)arg1;
- (int)alignment;
- (_Bool)isFlipModeOverridden;
- (void)setFlipMode:(int)arg1;
- (int)flipMode;
- (_Bool)isScaleYOverridden;
- (void)setScaleY:(float)arg1;
- (float)scaleY;
- (_Bool)isScaleXOverridden;
- (void)setScaleX:(float)arg1;
- (float)scaleX;
- (_Bool)isOffsetYOverridden;
- (void)setOffsetY:(float)arg1;
- (float)offsetY;
- (_Bool)isOffsetXOverridden;
- (void)setOffsetX:(float)arg1;
- (float)offsetX;
- (id)initWithDefaults;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OADUnderline : NSObject
{
    OADStroke *mStroke;
    OADFill *mFill;
    unsigned char mType;
    unsigned int mIsUsingTextFill:1;
    unsigned int mIsUsingTextStroke:1;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setIsUsingTextStroke:(_Bool)arg1;
- (_Bool)isUsingTextStroke;
- (void)setIsUsingTextFill:(_Bool)arg1;
- (_Bool)isUsingTextFill;
- (void)setType:(int)arg1;
- (int)type;
- (void)setFill:(id)arg1;
- (id)fill;
- (void)setStroke:(id)arg1;
- (id)stroke;
- (void)dealloc;
- (id)initWithStroke:(id)arg1 fill:(id)arg2 type:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADValueColorTransform : OADColorTransform
{
    float mValue;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setValue:(float)arg1;
- (float)value;

@end

__attribute__((visibility("hidden")))
@interface OADVector3D : NSObject <NSCopying>
{
    float mDx;
    float mDy;
    float mDz;
}

- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (float)dz;
- (float)dy;
- (float)dx;
- (id)initWithDx:(float)arg1 dy:(float)arg2 dz:(float)arg3;

@end

__attribute__((visibility("hidden")))
@interface OADVectorArcPathElement : OADPathElement
{
    struct OADAdjustCoord mLeft;
    struct OADAdjustCoord mTop;
    struct OADAdjustCoord mRight;
    struct OADAdjustCoord mBottom;
    struct OADAdjustPoint mStartVector;
    struct OADAdjustPoint mEndVector;
    _Bool mClockwise;
    _Bool mConnectedToPrevious;
}

- (id).cxx_construct;
- (_Bool)connectedToPrevious;
- (_Bool)clockwise;
- (struct OADAdjustPoint)endVector;
- (struct OADAdjustPoint)startVector;
- (struct OADAdjustCoord)bottom;
- (struct OADAdjustCoord)right;
- (struct OADAdjustCoord)top;
- (struct OADAdjustCoord)left;
- (id)initWithLeft:(struct OADAdjustCoord)arg1 top:(struct OADAdjustCoord)arg2 right:(struct OADAdjustCoord)arg3 bottom:(struct OADAdjustCoord)arg4 startVector:(struct OADAdjustPoint)arg5 endVector:(struct OADAdjustPoint)arg6 clockwise:(_Bool)arg7 connectedToPrevious:(_Bool)arg8;

@end

__attribute__((visibility("hidden")))
@interface OADVideoFile : OADLinkedMediaFile
{
}

@end

__attribute__((visibility("hidden")))
@interface OADWavAudioFile : OADEmbeddedMediaFile
{
    float mDuration;
    _Bool mHasDuration;
}

@property(nonatomic) _Bool hasDuration; // @synthesize hasDuration=mHasDuration;
@property(nonatomic) float duration; // @synthesize duration=mDuration;
- (_Bool)isAudioOnly;

@end

__attribute__((visibility("hidden")))
@interface OADWordArt : OADShape
{
}

- (id)description;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OAITOrientedBounds : NSObject
{
}

+ (struct CGRect)axisParallelBoundsOfOrientedBounds:(id)arg1;
+ (id)relativeOrientedBoundsOfDrawable:(id)arg1;
+ (id)absoluteOrientedBoundsWithRelativeOrientedBounds:(id)arg1 parentOrientedBounds:(id)arg2 parentLogicalBounds:(struct CGRect)arg3;
+ (struct CGAffineTransform)transformFromBounds:(struct CGRect)arg1 toOrientedBounds:(id)arg2;
+ (id)adjustedOrientedBoundsWithOrientedBounds:(id)arg1;
+ (id)absoluteOrientedBoundsOfDrawable:(id)arg1;
+ (id)adjustedOrientedBoundsWithOrientedBounds:(id)arg1 logicalBounds:(struct CGRect)arg2;
+ (float)scaleFactorFromLength:(float)arg1 toLength:(float)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface OAVColor : NSObject
{
}

+ (id)readColorFromAttribute:(id)arg1 alpha:(float)arg2 manager:(id)arg3;
+ (int)readColorAdjustmentType:(id)arg1;
+ (int)readColorProperty:(id)arg1;
+ (id)readPropertyColorFromAttribute:(id)arg1 manager:(id)arg2;
+ (id)readColorProperty:(int)arg1 manager:(id)arg2;
+ (id)readRGBColorFromAttribute:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface OAVDrawable : NSObject
{
}

+ (struct CGRect)readCoordBounds:(struct _xmlNode *)arg1;
+ (void)readFromDrawable:(struct _xmlNode *)arg1 toDrawable:(id)arg2 state:(id)arg3;
+ (id)readDrawablesFromParent:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;
+ (id)readDrawableFromNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;
+ (struct _xmlDoc *)vmlDocumentFromPart:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVFill : NSObject
{
}

+ (id)readFromManager:(id)arg1 state:(id)arg2;
+ (id)readBlipRefFromManager:(id)arg1 state:(id)arg2;
+ (void)readImageFill:(id)arg1 fromManager:(id)arg2 state:(id)arg3;
+ (void)readGradientFill:(id)arg1 fromManager:(id)arg2;
+ (void)addStopsFromArray:(const struct OAVGradientStop *)arg1 stopCount:(int)arg2 inverted:(_Bool)arg3 startPos:(float)arg4 endPos:(float)arg5 toGradientFill:(id)arg6 manager:(id)arg7;
+ (id)targetBgColorWithManager:(id)arg1;
+ (id)targetFgColorWithManager:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVFormula : NSObject
{
}

+ (void)readFormulasFromManager:(id)arg1 toGeometry:(id)arg2;
+ (struct OADFormulaArg)readArgument:(id)arg1;
+ (id)readFormula:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVGroup : NSObject
{
}

+ (id)readFromGroup:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAVHyperlink : NSObject
{
}

+ (id)readFromDrawable:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAVImage : NSObject
{
}

+ (void)readFromManager:(id)arg1 toImage:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAVOle : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OAVPath : NSObject
{
}

+ (void)writePath:(id)arg1 toString:(id)arg2;
+ (void)readPath:(id)arg1 toGeometry:(id)arg2;
+ (struct EshComputedValue)parseParam:(const char **)arg1 first:(_Bool)arg2;
+ (int)parseCommand:(const char **)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVReadClient : NSObject
{
}

+ (_Bool)sourceDrawableIsTopLevel:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVShadow : NSObject
{
}

+ (id)readFromManager:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVShape : NSObject
{
}

+ (id)readFromShape:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;
+ (void)readBoundsAndGeometryOfPolylineFromManager:(id)arg1 toShape:(id)arg2 state:(id)arg3;
+ (id)managerWithShape:(struct _xmlNode *)arg1 state:(id)arg2;
+ (unsigned short)typeWithShape:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAVShapeGeometry : NSObject
{
}

+ (id)readFromManager:(id)arg1;
+ (void)readTextBodyRectsFromManager:(id)arg1 toGeometry:(id)arg2;
+ (struct OADAdjustCoord)readAdjustCoord:(id)arg1;
+ (void)readLimoFromManager:(id)arg1 toGeometry:(id)arg2;
+ (void)readAdjustValuesFromManager:(id)arg1 toGeometry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAVShapeManager : NSObject
{
    struct _xmlNode *mShape;
    unsigned short mType;
    OCPPackagePart *mPackagePart;
    NSDictionary *mShapeStyle;
    NSDictionary *mTextBoxStyle;
    OAVReadState *mOAVState;
}

- (struct OAVTextBoxInsets)textInsets;
- (_Bool)fitShapeToText;
- (id)textRotation;
- (id)textAltLayoutFlow;
- (id)textLayoutFlow;
- (_Bool)autoInsets;
- (id)textAnchor;
- (id)textWrapStyle;
- (struct CGPoint)shadowOffsets;
- (float)shadowAlpha;
- (id)shadowColor;
- (id)shadowType;
- (_Bool)isShadowed;
- (_Bool)isShadowOK;
- (id)strokeEndArrowLength;
- (id)strokeEndArrowWidth;
- (id)strokeEndArrowType;
- (id)strokeStartArrowLength;
- (id)strokeStartArrowWidth;
- (id)strokeStartArrowType;
- (id)strokeJoinStyle;
- (id)strokeCapStyle;
- (id)strokeDashStyle;
- (id)strokeCompoundType;
- (float)strokeMiterLimit;
- (float)strokeWidth;
- (float)strokeFgAlpha;
- (id)strokeFillType;
- (id)strokeBgColor;
- (id)strokeFgColor;
- (_Bool)isStroked;
- (_Bool)isStrokeOK;
- (id)imageFillTitle;
- (id)imageFillId;
- (id)fillGradientColors;
- (float)fillFocus;
- (float)fillAngle;
- (float)fillBgAlpha;
- (id)fillBgColor;
- (float)fillFgAlpha;
- (id)fillFgColor;
- (id)fillType;
- (_Bool)isFilled;
- (_Bool)isFillOK;
- (_Bool)isWordArt;
- (_Bool)isImage;
- (id)movieRelId;
- (id)imageRelId;
- (id)points;
- (_Bool)isPolyline;
- (id)textBodyRects;
- (id)limo;
- (id)path;
- (id)oavState;
- (id)packagePart;
- (struct _xmlNode *)shape;
- (unsigned short)type;
- (void)dealloc;
- (id)initWithShape:(struct _xmlNode *)arg1 type:(unsigned short)arg2 packagePart:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAVShapeType : NSObject
{
}

+ (id)readFromShapeType:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAVStroke : NSObject
{
}

+ (id)readFromManager:(id)arg1;
+ (void)initialize;
+ (void)readFillStyleFromManager:(id)arg1 toStroke:(id)arg2;
+ (id)targetFgColorWithManager:(id)arg1;
+ (void)readJoinStyleFromManager:(id)arg1 toStroke:(id)arg2;
+ (void)readDashStyleFromManager:(id)arg1 toStroke:(id)arg2;
+ (void)readLineEnd:(id)arg1 type:(id)arg2 width:(id)arg3 length:(id)arg4;
+ (int)readCapStyle:(id)arg1;
+ (int)readLineEndLength:(id)arg1;
+ (int)readLineEndWidth:(id)arg1;
+ (int)readLineEndType:(id)arg1;
+ (int)readPresetDashStyle:(id)arg1;
+ (int)readCompoundType:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVStyle : NSObject
{
    NSMutableString *_string;
}

- (id)styleAttributeValue;
- (void)addPropertyWithName:(id)arg1 value:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OAVTextBodyProperties : NSObject
{
}

+ (void)readFromManager:(id)arg1 toShape:(id)arg2 state:(id)arg3;
+ (int)flowTypeWithLayoutFlowString:(id)arg1 altLayoutFlowString:(id)arg2;
+ (int)readAnchor:(id)arg1;
+ (int)readWrapStyle:(id)arg1;
+ (int)readRotation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVWordArt : NSObject
{
}

+ (void)readFromManager:(id)arg1 toShape:(id)arg2 state:(id)arg3;
+ (void)readFromStyle:(id)arg1 manager:(id)arg2 toCharacterProperties:(id)arg3 state:(id)arg4;
+ (int)readTextAlign:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAVWriteClient : NSObject
{
}

- (id)textWrapPointsForDrawable:(id)arg1 state:(id)arg2;
- (void)writeClientDataFromDrawable:(id)arg1 toXmlWriter:(id)arg2 state:(id)arg3;
- (void)writeClientDataFromDrawable:(id)arg1 toStyle:(id)arg2 state:(id)arg3;
- (void)updateClientAnchorFromOrientedBoundsForDrawable:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXBackground : NSObject
{
}

+ (id)readBackgroundFromParentNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXBaseStyles : NSObject
{
}

+ (void)readFromXmlNode:(struct _xmlNode *)arg1 toBaseStyles:(id)arg2 packagePart:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAXBaseTypes : NSObject
{
}

+ (id)readRotation3DFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readPoint3DFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readVector3DFromXmlNode:(struct _xmlNode *)arg1;
+ (void)writeRectAlignment:(int)arg1 to:(id)arg2;
+ (int)readRectAlignmentFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (void)writeRelativeRect:(id)arg1 to:(id)arg2;
+ (id)stringForRectAlignment:(int)arg1;
+ (id)readRelativeRectFromXmlNode:(struct _xmlNode *)arg1;
+ (struct CGSize)readSize2DFromXmlNode:(struct _xmlNode *)arg1;
+ (struct CGPoint)readPoint2DFromXmlNode:(struct _xmlNode *)arg1;
+ (float)readOptionalFractionFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (float)readRequiredFractionFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (double)readOptionalAngleFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (double)readRequiredAngleFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (float)readOptionalLengthFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (float)readRequiredLengthFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (long long)readOptionalLongFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2 desiredOutputUnit:(int)arg3;
+ (long long)readRequiredLongFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2 desiredOutputUnit:(int)arg3;
+ (long long)readOptionalLongFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (long long)readRequiredLongFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2;
+ (id)rectAlignmentEnumMap;

@end

__attribute__((visibility("hidden")))
@interface OCXDelayedMediaContext : NSObject <OCDDelayedMediaContext>
{
    OCPPackage *mPackage;
    NSURL *mTargetLocation;
}

@property(readonly, copy) NSString *description;
- (id)dataRep;
- (_Bool)saveDelayedMedia:(id)arg1 toFile:(id)arg2;
- (_Bool)loadDelayedNode:(id)arg1;
- (void)dealloc;
- (id)initWithTargetLocation:(id)arg1 package:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OAXBlipContext : OCXDelayedMediaContext
{
}

- (id)description;
- (_Bool)loadDelayedNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAXBlipEffects : NSObject
{
}

+ (void)writeBlipEffects:(id)arg1 to:(id)arg2;
+ (void)readBlipEffectsFromBlipRef:(struct _xmlNode *)arg1 toBlipRef:(id)arg2 drawingState:(id)arg3;
+ (id)duotoneTransferModeEnumMap;
+ (void)writeDuotoneEffect:(id)arg1 to:(id)arg2;
+ (id)readDuotoneEffect:(struct _xmlNode *)arg1;
+ (void)writeAlphaModFixEffect:(id)arg1 to:(id)arg2;
+ (id)readAlphaModFixEffect:(struct _xmlNode *)arg1;
+ (void)writeColorChangeEffect:(id)arg1 to:(id)arg2;
+ (id)readColorChangeEffect:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)writeBiLevelEffect:(id)arg1 to:(id)arg2;
+ (id)readBiLevelEffect:(struct _xmlNode *)arg1;
+ (void)writeGrayscaleEffect:(id)arg1 to:(id)arg2;
+ (id)readGrayscaleEffect:(struct _xmlNode *)arg1;
+ (void)writeLuminanceEffect:(id)arg1 to:(id)arg2;
+ (id)readLuminanceEffect:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAXColor : NSObject
{
}

+ (void)writeSRgbColor:(id)arg1 to:(id)arg2;
+ (void)writePresetColor:(id)arg1 to:(id)arg2;
+ (id)readSchemeColorFromAttribute:(id)arg1;
+ (id)readSystemColorFromAttribute:(id)arg1;
+ (id)readPresetColorFromAttribute:(id)arg1;
+ (id)readColorFromNode:(struct _xmlNode *)arg1;
+ (id)readColorFromParentXmlNode:(struct _xmlNode *)arg1;
+ (id)stringSRgbColor:(id)arg1;
+ (id)presetColorRGBEnumMap;
+ (id)schemeColorEnumMap;
+ (id)systemColorEnumMap;
+ (id)presetColorEnumMap;
+ (id)readSchemeColorFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readSystemColorFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readPresetColorFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readHslColorFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readSRgbColorFromXmlNode:(struct _xmlNode *)arg1 attribute:(const char *)arg2;
+ (id)readScRgbColorFromXmlNode:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAXColorMap : NSObject
{
}

+ (void)readFromXmlNode:(struct _xmlNode *)arg1 toColorMap:(id)arg2;
+ (id)mapColorEnumMap;

@end

__attribute__((visibility("hidden")))
@interface OAXColorScheme : NSObject
{
}

+ (id)colorForScheme:(id)arg1 value:(id)arg2;
+ (id)schemeColorEnumMap;
+ (void)readFromXmlNode:(struct _xmlNode *)arg1 toColorScheme:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXColorTransform : NSObject
{
}

+ (void)write:(id)arg1 to:(id)arg2;
+ (id)readColorTransformsFromXmlNode:(struct _xmlNode *)arg1;
+ (id)colorTransformTypeEnumMap;

@end

__attribute__((visibility("hidden")))
@interface OAXCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface OAXConnector : NSObject
{
}

+ (id)readFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (void)readNonVisualConnectorProperties:(struct _xmlNode *)arg1 inNamespace:(id)arg2 connectorProperties:(id)arg3 drawingState:(id)arg4;
+ (void)readConnectionFromParent:(struct _xmlNode *)arg1 nodeName:(const char *)arg2 connection:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAXDrawable : NSObject
{
}

+ (id)readDrawablesFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (id)readDrawableFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (void)readNonVisualPropertiesFromDrawableXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 visualNodeName:(const char *)arg3 toDrawable:(id)arg4 drawingState:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface OAXEffect : NSObject
{
}

+ (void)writeGlow:(id)arg1 to:(id)arg2;
+ (void)readGlow:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2;
+ (void)writeReflection:(id)arg1 to:(id)arg2;
+ (void)readReflection:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2;
+ (void)writePresetShadow:(id)arg1 to:(id)arg2;
+ (void)readPresetShadow:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2;
+ (void)writeOuterShadow:(id)arg1 includeRotateWithShape:(_Bool)arg2 to:(id)arg3;
+ (void)readOuterShadow:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2;
+ (void)readShadow:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2;
+ (_Bool)isEmpty:(id)arg1;
+ (id)readEffectsFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 drawingState:(id)arg3;
+ (id)presetShadowTypeEnumMap;
+ (void)writeShadowBase:(id)arg1 to:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXFill : NSObject
{
}

+ (id)readImageFillFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 forDrawable:(id)arg3 drawingState:(id)arg4;
+ (id)readBlipRefFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 forDrawable:(id)arg3 drawingState:(id)arg4 forBullet:(_Bool)arg5;
+ (id)readFillFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 drawingState:(id)arg3;
+ (id)presetPatternFillTypeEnumMap;
+ (id)pathGradientFillTypeEnumMap;
+ (id)tileFlipModeEnumMap;
+ (id)readPresetPatternFillFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readTile:(struct _xmlNode *)arg1 tile:(id)arg2;
+ (void)readStretch:(struct _xmlNode *)arg1 stretch:(id)arg2;
+ (id)readGradientFillFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readPathGradientFillFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readLinearGradientFillFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readGradientFillFromXmlNode:(struct _xmlNode *)arg1 toGradientFill:(id)arg2 drawingState:(id)arg3;
+ (id)readSolidFillFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readGroupFillFromXmlNode:(struct _xmlNode *)arg1;
+ (id)readNullFillFromXmlNode:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAXFillOverlayEffect : NSObject
{
}

+ (id)readFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 drawingState:(id)arg3;
+ (id)blendModeEnumMap;

@end

__attribute__((visibility("hidden")))
@interface OAXFontReference : NSObject
{
}

+ (void)readFromNode:(struct _xmlNode *)arg1 fontReference:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXFontScheme : NSObject
{
}

+ (void)readFontSchemeEntries:(struct _xmlNode *)arg1 font:(id)arg2;
+ (void)readFontScheme:(struct _xmlNode *)arg1 toFontScheme:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXGeometry : NSObject
{
}

+ (id)stringWritingShapeType:(int)arg1;
+ (void)write:(id)arg1 to:(id)arg2;
+ (id)stringForShapeType:(int)arg1;
+ (int)shapeTypeForString:(id)arg1;
+ (id)readCustomGeometryFromXmlNode:(struct _xmlNode *)arg1 hasImplicitFormulas:(_Bool)arg2 drawingState:(id)arg3;
+ (id)readFromParentXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)pathFillModeEnumMap;
+ (id)formulaKeywordEnumMap;
+ (id)formulaTypeEnumMap;
+ (id)shapeTypeEnumMap;
+ (void)writeShapePathPoint:(struct OADAdjustPoint)arg1 origin:(CsPoint_c846a6ec)arg2 to:(id)arg3;
+ (void)writePath:(id)arg1 coordSpace:(CsRect_0aefebc6)arg2 to:(id)arg3;
+ (void)readPathsFromCustomGeometryXmlNode:(struct _xmlNode *)arg1 toCustomGeometry:(id)arg2 formulaNameToIndexMap:(id)arg3 drawingState:(id)arg4;
+ (void)readTextRectFromCustomGeometryXmlNode:(struct _xmlNode *)arg1 toCustomGeometry:(id)arg2 formulaNameToIndexMap:(id)arg3 drawingState:(id)arg4;
+ (struct OADAdjustCoord)readAdjustCoordFromXmlNode:(struct _xmlNode *)arg1 name:(const char *)arg2 formulaNameToIndexMap:(id)arg3;
+ (void)addFormulasFromFile:(id)arg1 toCustomGeometry:(id)arg2 formulaNameToIndexMap:(id)arg3 drawingState:(id)arg4;
+ (void)readFormulasFromCustomGeometryXmlNode:(struct _xmlNode *)arg1 toCustomGeometry:(id)arg2 adjustValueNameToIndexMap:(id)arg3 formulaNameToIndexMap:(id)arg4 drawingState:(id)arg5;
+ (void)readAdjustValuesFromCustomGeometryXmlNode:(struct _xmlNode *)arg1 toCustomGeometry:(id)arg2 adjustValueNameToIndexMap:(id)arg3 drawingState:(id)arg4;
+ (id)readPresetGeometryFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (int)adjustValueWithGuideXmlNode:(struct _xmlNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAXGraphic : NSObject
{
}

+ (void)readPropertiesFromXmlNode:(struct _xmlNode *)arg1 graphicProperties:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXGraphicFrame : NSObject
{
}

+ (id)readFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXGraphicalObject : NSObject
{
}

+ (id)readFromParentXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXGroup : NSObject
{
}

+ (id)readFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (void)applyGroupFill:(id)arg1 toChildrenOfGroup:(id)arg2;
+ (void)readPropertiesFromXmlNode:(struct _xmlNode *)arg1 properties:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXHyperlink : NSObject
{
}

+ (void)writeHyperlink:(id)arg1 to:(id)arg2;
+ (id)readHyperlink:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXMovieContext : OCXDelayedMediaContext
{
}

- (id)dataRep;
- (_Bool)loadDelayedNode:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OAXParagraph : NSObject
{
}

+ (void)readParagraph:(struct _xmlNode *)arg1 paragraph:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXPicture : NSObject
{
}

+ (id)readFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (void)readNonVisualPropertiesFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 toDrawable:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAXScene3D : NSObject
{
}

+ (_Bool)isEmpty:(id)arg1;
+ (void)writeScene3D:(id)arg1 to:(id)arg2;
+ (id)readScene3DFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 drawingState:(id)arg3;
+ (id)readBackdropFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readLightRigFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readCameraFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)lightRigDirectionEnumMap;
+ (id)lightRigTypeEnumMap;
+ (id)cameraTypeEnumMap;
+ (void)writeLightRig:(id)arg1 to:(id)arg2;
+ (void)writeCamera:(id)arg1 to:(id)arg2;
+ (void)writeRotation3D:(id)arg1 to:(id)arg2;
+ (void)writeBackdrop:(id)arg1 to:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXShape : NSObject
{
}

+ (_Bool)isWritable:(id)arg1;
+ (id)readFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (void)readNonVisualShapeProperties:(struct _xmlNode *)arg1 nodeName:(const char *)arg2 inNamespace:(id)arg3 shapeProperties:(id)arg4;
+ (void)readCoreFromXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 toShape:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAXShape3D : NSObject
{
}

+ (_Bool)isEmpty:(id)arg1;
+ (void)writeShape3D:(id)arg1 to:(id)arg2;
+ (void)writeBevel:(id)arg1 to:(id)arg2;
+ (id)readShape3DFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 drawingState:(id)arg3;
+ (id)readBevelFromXmlNode:(struct _xmlNode *)arg1;
+ (id)materialEnumMap;
+ (id)bevelTypeEnumMap;

@end

__attribute__((visibility("hidden")))
@interface OAXShapeProperties : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OAXShapeStyle : NSObject
{
}

+ (void)write:(id)arg1 to:(id)arg2;
+ (void)readFromNode:(struct _xmlNode *)arg1 shapeStyle:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXStroke : NSObject
{
}

+ (id)readStrokeFromXmlNode:(struct _xmlNode *)arg1 packagePart:(id)arg2 drawingState:(id)arg3;
+ (id)readCustomDashFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readPresetDashFromXmlNode:(struct _xmlNode *)arg1;
+ (void)readLineEnd:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2;
+ (id)presetDashEnumMap;
+ (id)lineEndLengthEnumMap;
+ (id)lineEndWidthEnumMap;
+ (id)lineEndTypeEnumMap;
+ (id)penAlignmentEnumMap;
+ (id)lineCapEnumMap;
+ (id)compoundLineEnumMap;

@end

__attribute__((visibility("hidden")))
@interface OAXStyleMatrix : NSObject
{
}

+ (id)readReferenceFromNode:(struct _xmlNode *)arg1;
+ (_Bool)readReferenceFromParentNode:(struct _xmlNode *)arg1 name:(const char *)arg2 inNamespace:(id)arg3 color:(id *)arg4 index:(unsigned int *)arg5;
+ (void)readFromNode:(struct _xmlNode *)arg1 toStyleMatrix:(id)arg2 packagePart:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAXTable : NSObject
{
}

+ (id)readDefaultTableStyleWithDrawingState:(id)arg1;
+ (void)cacheTableStylesInPart:(id)arg1 cache:(id)arg2 drawingState:(id)arg3;
+ (id)readFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readTableStyle:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readRowsFromTableXmlNode:(struct _xmlNode *)arg1 toTable:(id)arg2 drawingState:(id)arg3;
+ (void)readRowFromXmlNode:(struct _xmlNode *)arg1 toRow:(id)arg2 drawingState:(id)arg3;
+ (void)readCellFromXmlNode:(struct _xmlNode *)arg1 toCell:(id)arg2 drawingState:(id)arg3;
+ (id)readCellPropertiesFromXmlNode:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readGridFromXmlNode:(struct _xmlNode *)arg1 toGrid:(id)arg2 drawingState:(id)arg3;
+ (void)readPropertiesFromXmlNode:(struct _xmlNode *)arg1 toProperties:(id)arg2 drawingState:(id)arg3;
+ (id)readPartStyle:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readTextStyle:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (int)readOnOffFlag:(id)arg1;
+ (id)readCellStyle:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readCellBorderStyle:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readThemableEffectsFromParent:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readThemableFillFromParent:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readThemableStrokeFromParent:(struct _xmlNode *)arg1 drawingState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXTableStyleCache : NSObject
{
    NSString *mDefaultStyleId;
    NSMutableDictionary *mCache;
}

- (struct _xmlNode *)defaultStyleNode;
- (struct _xmlNode *)styleNodeForId:(id)arg1;
- (void)setStyleNode:(struct _xmlNode *)arg1 forId:(id)arg2;
- (void)setDefaultStyleId:(id)arg1;
- (id)defaultStyleId;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OAXTextBody : NSObject
{
}

+ (int)readHorizontalOverflowType:(id)arg1;
+ (int)readAnchorType:(id)arg1;
+ (int)readFlowType:(id)arg1;
+ (void)readTextBodyProperties:(struct _xmlNode *)arg1 textBodyProperties:(id)arg2 drawingState:(id)arg3;
+ (void)readTextBodyFromXmlNode:(struct _xmlNode *)arg1 textBody:(id)arg2 drawingState:(id)arg3;
+ (id)stringWithTextAnchorType:(int)arg1;
+ (id)stringWithTextBodyWrapType:(int)arg1;
+ (id)stringWithTextBodyFlowType:(int)arg1;
+ (id)stringWithTextBodyHorizontalOverflowType:(int)arg1;
+ (id)stringWithTextBodyVerticalOverflowType:(int)arg1;
+ (void)writeTextBodyAutoFit:(id)arg1 to:(id)arg2;
+ (void)readHorizontalOverflowType:(id)arg1 textBodyProperties:(id)arg2;
+ (void)readVerticalOverflowType:(id)arg1 textBodyProperties:(id)arg2;
+ (void)readWrapType:(id)arg1 textBodyProperties:(id)arg2;
+ (void)readFlowType:(id)arg1 textBodyProperties:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXTextCharPropertyBag : NSObject
{
}

+ (void)readCharacterProperties:(struct _xmlNode *)arg1 characterProperties:(id)arg2 drawingState:(id)arg3;
+ (id)stringWithUnderlineType:(int)arg1;
+ (id)stringWithStrikeThroughType:(int)arg1;
+ (id)stringWithCapsType:(int)arg1;
+ (void)readFont:(struct _xmlNode *)arg1 characterProperties:(id)arg2;
+ (void)readFormatting:(struct _xmlNode *)arg1 characterProperties:(id)arg2 drawingState:(id)arg3;
+ (void)readUnderlineFill:(struct _xmlNode *)arg1 underline:(id)arg2 drawingState:(id)arg3;
+ (void)readUnderlineType:(id)arg1 underline:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXTextListStyle : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 textListStyle:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXTextParaPropertyBag : NSObject
{
}

+ (void)readParagraphProperties:(struct _xmlNode *)arg1 paragraphProperties:(id)arg2 drawingState:(id)arg3;
+ (int)readBulletScheme:(id)arg1;
+ (void)readFontAlign:(id)arg1 paragraphProperties:(id)arg2;
+ (void)readAlign:(id)arg1 paragraphProperties:(id)arg2;
+ (void)readTabList:(struct _xmlNode *)arg1 paragraphProperties:(id)arg2 drawingState:(id)arg3;
+ (id)readSpacing:(struct _xmlNode *)arg1 drawingState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OAXTheme : NSObject
{
}

+ (void)readFromPackagePart:(id)arg1 toTheme:(id)arg2 state:(id)arg3;
+ (void)readDefaultProperties:(struct _xmlNode *)arg1 fallback:(struct _xmlNode *)arg2 defaultProperties:(id)arg3 drawingState:(id)arg4;
+ (struct _xmlNode *)childNamed:(const char *)arg1 inParent:(struct _xmlNode *)arg2 fallbackParent:(struct _xmlNode *)arg3 drawingState:(id)arg4;
+ (void)readObjectDefaults:(struct _xmlNode *)arg1 theme:(id)arg2 drawingState:(id)arg3;
+ (void)readObjectDefaultsFromParent:(struct _xmlNode *)arg1 defaultsName:(const char *)arg2 toObjectDefaults:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OAXThemeOverrides : NSObject
{
}

+ (void)readFromPackagePart:(id)arg1 toThemeOverrides:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OAXTransform2D : NSObject
{
}

+ (struct CGRect)readChildrenBoundsFromParentXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 drawingState:(id)arg3;
+ (void)readFromParentXmlNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 toDrawable:(id)arg3 drawingState:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface OCBSummary : NSObject
{
}

+ (void)writeSummary:(id)arg1 writer:(struct OcWriter *)arg2;
+ (void)readSummary:(id)arg1 reader:(struct OcReader *)arg2;

@end

__attribute__((visibility("hidden")))
@interface OCCDecryptor : NSObject
{
    NSString *mOutputFilename;
    NSString *mBaseStringForOutputFilename;
    struct OCCStreamer *mStreamer;
}

+ (id)allocTempFileWithBase:(id)arg1 outFilename:(id *)arg2;
+ (id)agilePasswordKeyEncryptorNamespace;
+ (id)agileDescriptorNamespace;
@property(readonly, nonatomic) NSString *outputFilename; // @synthesize outputFilename=mOutputFilename;
- (_Bool)decryptIntoOutputFile;
- (_Bool)verifyPassphrase:(id)arg1;
- (_Bool)decrypt;
- (void)deleteOutputFile;
- (_Bool)isReadProtectedUsingDefaultPassphrase;
- (id)initWithStreamer:(struct OCCStreamer *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OCCEncryptor : NSObject
{
    NSString *mOutputFilename;
    struct OCCStreamer *mStreamer;
}

+ (id)allocTempFileWithBase:(id)arg1 filename:(id *)arg2;
@property(readonly, nonatomic) NSString *outputFilename; // @synthesize outputFilename=mOutputFilename;
- (_Bool)encryptIntoOutputFile;
- (_Bool)encrypt;
- (id)initWithStreamer:(struct OCCStreamer *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OCCancel : NSObject <TCCancelDelegate>
{
    _Bool mIsCancelled;
    _Bool mIsQuit;
}

- (_Bool)isQuit;
- (void)quit;
- (_Bool)isCancelled;
- (void)cancel;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OCDSummary : NSObject
{
    NSString *mTitle;
    NSString *mAuthor;
    NSString *mKeywords;
    NSString *mComments;
    NSString *mHyperlinkBase;
}

- (void)setHyperlinkBase:(id)arg1;
- (id)hyperlinkBase;
- (void)setComments:(id)arg1;
- (id)comments;
- (void)setKeywords:(id)arg1;
- (id)keywords;
- (void)setAuthor:(id)arg1;
- (id)author;
- (void)setTitle:(id)arg1;
- (id)title;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OCMapper : NSObject
{
    OCCancel *mCancel;
    OITSUTemporaryDirectory *mTemporaryDirectoryObject;
}

+ (id)mapperForCurrentThread;
- (id)temporaryDirectoryPath;
- (void)teardown;
- (void)setup;
- (void)quit;
- (_Bool)isCancelled;
- (void)cancel;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OCImporter : OCMapper
{
    NSURL *mURL;
    NSData *mData;
    OCDReader *mReader;
    TCImportTracing *mTracing;
    _Bool mTryAlternateReader;
    OITSUProgressContext *mProgressContext;
    NSString *_docPassphrase;
}

+ (void)initialize;
@property(retain, nonatomic) NSString *docPassphrase; // @synthesize docPassphrase=_docPassphrase;
@property(readonly, nonatomic) TCImportTracing *tracing; // @synthesize tracing=mTracing;
@property(retain) OITSUProgressContext *progressContext; // @synthesize progressContext=mProgressContext;
- (void)finalizeBackgroundTasksWithDocumentState:(id)arg1;
- (id)displayName;
- (id)filename;
- (_Bool)setPassphrase:(id)arg1;
- (_Bool)isDocumentEncryptedUnsupportedVersion:(_Bool *)arg1 errorMessage:(id *)arg2;
- (_Bool)isDocumentEncryptedUnsupportedVersionHelper:(_Bool *)arg1 errorMessage:(id *)arg2 readError:(_Bool *)arg3;
- (_Bool)tryAlternateReader;
- (void)setURL:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (id)initWithURL:(id)arg1;
- (_Bool)start;
- (_Bool)isXML;

@end

__attribute__((visibility("hidden")))
@interface OCPException : NSException
{
}

@end

__attribute__((visibility("hidden")))
@interface OCPPackage : NSObject
{
    OCPPackageRelationshipCollection *mRelationships;
    OCPPackageProperties *mProperties;
    NSMutableDictionary *mDefaultContentTypes;
    NSMutableDictionary *mContentTypeOverrides;
}

- (id)properties;
- (id)mainDocumentPart;
- (id)partByRelationshipType:(id)arg1;
- (id)relationshipsByType:(id)arg1;
- (id)relationshipForIdentifier:(id)arg1;
- (void)resetPartForLocation:(id)arg1;
- (id)partForLocation:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)contentTypeForPartLocation:(id)arg1;
- (id)initWithRelationshipsXml:(struct _xmlDoc *)arg1 propertiesXml:(struct _xmlDoc *)arg2 contentTypesXml:(struct _xmlDoc *)arg3;
- (void)readContentTypeOverrideFromElement:(struct _xmlNode *)arg1;
- (void)readDefaultContentTypeFromElement:(struct _xmlNode *)arg1;
- (void)readContentTypesXml:(struct _xmlDoc *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCPPackagePart : NSObject
{
    NSURL *mLocation;
    OCPPackageRelationshipCollection *mRelationships;
    OCPPackage *mPackage;
    struct _xmlDoc *mDocument;
    NSMutableDictionary *mAlternateContentMap;
}

- (void)setFallbackNode:(struct _xmlNode *)arg1 forChoiceNode:(struct _xmlNode *)arg2;
- (struct _xmlNode *)fallbackNodeForChoiceNode:(struct _xmlNode *)arg1;
- (id)contentType;
- (id)package;
- (id)firstPartWithRelationshipOfType:(id)arg1;
- (id)relationshipsByType:(id)arg1;
- (id)relationshipForIdentifier:(id)arg1;
- (struct _xmlTextReader *)xmlReader;
- (struct _xmlDoc *)xmlDocument;
- (void)copyToFile:(id)arg1;
- (id)data;
- (id)location;
- (void)dealloc;
- (id)initWithLocation:(id)arg1 relationshipsXml:(struct _xmlDoc *)arg2 package:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OCPPackageProperties : NSObject
{
    NSString *mCreator;
    NSString *mDescription;
    NSString *mKeywords;
    NSString *mTitle;
}

- (id)title;
- (id)keywords;
- (id)description;
- (id)creator;
- (void)dealloc;
- (id)initWithXml:(struct _xmlDoc *)arg1;
- (void)readFromXml:(struct _xmlDoc *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCPPackageRelationship : NSObject
{
    NSString *mIdentifier;
    NSString *mType;
    int mTargetMode;
    NSURL *mTargetLocation;
}

- (id)targetLocation;
- (int)targetMode;
- (id)type;
- (id)identifier;
- (void)dealloc;
- (id)initWithXmlElement:(struct _xmlNode *)arg1 baseLocation:(id)arg2;
- (void)readFromElement:(struct _xmlNode *)arg1 baseLocation:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OCPPackageRelationshipCollection : NSObject
{
    NSMutableDictionary *mIdentifierMap;
    NSMutableDictionary *mTypeMap;
}

- (id)relationshipsByType:(id)arg1;
- (id)relationshipForIdentifier:(id)arg1;
- (void)dealloc;
- (id)initWithRelationshipsXml:(struct _xmlDoc *)arg1 baseLocation:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OCPZipPackage : OCPPackage
{
    OISFUZipArchive *mArchive;
    NSMutableDictionary *mParts;
}

- (void)resetPartForLocation:(id)arg1;
- (id)partForLocation:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWithArchive:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCPZipPackagePart : OCPPackagePart
{
    OISFUZipEntry *mEntry;
}

@property(readonly, nonatomic) OISFUZipEntry *zipEntry; // @synthesize zipEntry=mEntry;
- (struct _xmlTextReader *)xmlReader;
- (struct _xmlDoc *)xmlDocument;
- (void)copyToFile:(id)arg1;
- (id)data;
- (void)dealloc;
- (id)initWithArchive:(id)arg1 location:(id)arg2 package:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OCPattern : NSObject
{
}

+ (id)colorizedImageDataWithBlackAndWhiteImageData:(id)arg1 foregroundColor:(id)arg2 backgroundColor:(id)arg3;
+ (id)presetPatternHeader;
+ (id)blackAndWhiteImageDataWithPatternName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCXCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface OCXContentType : NSObject
{
    NSString *mContentType;
    NSString *mPath;
    NSString *mExtension;
}

@property(readonly, nonatomic) NSString *path; // @synthesize path=mPath;
@property(readonly, nonatomic) NSString *contentType; // @synthesize contentType=mContentType;
- (void)writeToStreamWriter:(id)arg1;
- (_Bool)isOverride;
- (void)dealloc;
- (id)initWithContentType:(id)arg1 path:(id)arg2;
- (id)initWithContentType:(id)arg1 extension:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OCXContentTypes : NSObject
{
    NSMutableArray *mContentTypes;
    NSMutableSet *mDefaultTypes;
    NSMutableDictionary *mContentTypeObjectMap;
    NSMutableDictionary *mContentTypeCountMap;
}

+ (id)relativePathForPath:(id)arg1 currentPath:(id)arg2;
- (void)writeContentTypesToStream:(id)arg1;
- (_Bool)isLastEntryContentType:(id)arg1;
- (_Bool)containsContentType:(id)arg1 withKey:(id)arg2;
- (_Bool)containsContentType:(id)arg1;
- (id)pathForMainDocument;
- (id)pathForContentType:(id)arg1;
- (id)pathForKey:(id)arg1;
- (id)addContentTypeForKey:(id)arg1 contentType:(id)arg2 path:(id)arg3;
- (void)dealloc;
- (id)init;
- (id)uniquePathForPath:(id)arg1;
- (void)addContentTypeForContentType:(id)arg1 extension:(id)arg2;
- (void)populateCommonExtensions;

@end

__attribute__((visibility("hidden")))
@interface OCXRelationship : NSObject
{
    NSString *mIdString;
    NSString *mType;
    NSString *mTarget;
    _Bool mExternal;
}

@property(readonly, nonatomic) NSString *target; // @synthesize target=mTarget;
@property(readonly, nonatomic) NSString *type; // @synthesize type=mType;
@property(readonly, nonatomic) NSString *idString; // @synthesize idString=mIdString;
- (void)writeToStreamWriter:(id)arg1;
- (void)dealloc;
- (id)initWithId:(unsigned long long)arg1 type:(id)arg2 target:(id)arg3 external:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface OCXRelationships : NSObject
{
    NSString *mPath;
    NSMutableArray *mRelationships;
    NSMutableDictionary *mRelationshipMap;
    unsigned long long mNextId;
}

- (void)writeRelationshipsToFilename:(id)arg1 stream:(id)arg2;
- (id)idForKey:(id)arg1;
- (id)addRelationshipForKey:(id)arg1 type:(id)arg2 target:(id)arg3 external:(_Bool)arg4;
- (id)addRelationshipForKey:(id)arg1 type:(id)arg2 target:(id)arg3;
- (_Bool)isEmpty;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCXSStream : NSObject
{
    NSMutableArray *mLevelStack;
}

- (_Bool)hasLevels;
- (_Bool)popLevel;
- (void)pushLevel:(int)arg1 name:(const char *)arg2;
- (int)currentContextChildDepth;
- (int)currentContextDepth;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OCXSStreamLevel : NSObject
{
    const char *mName;
    int mDepth;
}

@property(nonatomic) int depth; // @synthesize depth=mDepth;
@property(nonatomic) const char *name; // @synthesize name=mName;

@end

__attribute__((visibility("hidden")))
@interface OCXStreamUtility : NSObject
{
}

+ (_Bool)readStream:(struct _xmlTextReader *)arg1 streamState:(id)arg2;
+ (_Bool)pScanStreamForwardToApplicableContentInAlternateContent:(struct _xmlTextReader *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OCXSummary : NSObject
{
}

+ (void)readSummary:(id)arg1 package:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODDLayoutObject : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface ODDAlgorithm : ODDLayoutObject
{
    int mType;
}

- (void)setType:(int)arg1;
- (int)type;

@end

__attribute__((visibility("hidden")))
@interface ODDChoose : ODDLayoutObject
{
    NSMutableArray *mWhens;
    ODDOtherwise *mOtherwise;
}

- (void)setOtherwise:(id)arg1;
- (id)otherwise;
- (void)addWhen:(id)arg1;
- (id)whens;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDColorTransform : NSObject
{
    NSMutableDictionary *mStyleLabels;
}

- (void)setLabel:(id)arg1 forName:(id)arg2;
- (id)labelForName:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDColorTransformStyleLabel : NSObject
{
    ODDFillColorList *mFillColors;
    ODDFillColorList *mLineColors;
    ODDFillColorList *mEffectColors;
    ODDFillColorList *mTextLineColors;
    ODDFillColorList *mTextFillColors;
    ODDFillColorList *mTextEffectColors;
}

- (void)applyToShapeStyle:(id)arg1 index:(unsigned int)arg2 count:(unsigned int)arg3 state:(id)arg4;
- (void)setTextEffectColors:(id)arg1;
- (id)textEffectColors;
- (void)setTextFillColors:(id)arg1;
- (id)textFillColors;
- (void)setTextLineColors:(id)arg1;
- (id)textLineColors;
- (void)setEffectColors:(id)arg1;
- (id)effectColors;
- (void)setLineColors:(id)arg1;
- (id)lineColors;
- (void)setFillColors:(id)arg1;
- (id)fillColors;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDPoint : NSObject
{
    int mType;
    ODDPointPropertySet *mPropertySet;
    OADShapeProperties *mShapeProperties;
    OADTextBody *mText;
}

+ (void)addConnectionToPoint:(id)arg1 order:(unsigned long long)arg2 array:(id *)arg3;
- (void)setText:(id)arg1;
- (id)text;
- (id)shapeProperties;
- (id)propertySet;
- (void)setType:(int)arg1;
- (int)type;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDDataPoint : ODDPoint
{
    NSMutableArray *mPresentations;
}

- (void)addAssociatedPresentation:(id)arg1;
- (void)addPresentation:(id)arg1 order:(unsigned long long)arg2;
- (id)presentations;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDDiagram : OADDrawable
{
    ODDNodePoint *mDocumentPoint;
    ODDColorTransform *mColorTransform;
    ODDStyleDefinition *mStyleDefinition;
}

- (id)description;
- (id)styleDefinition;
- (id)colorTransform;
- (void)setDocumentPoint:(id)arg1;
- (id)documentPoint;
- (void)setParentTextListStyle:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDFillColorList : NSObject
{
    NSArray *mColors;
    int mHueDirection;
    int mMethod;
}

- (void)setMethod:(int)arg1;
- (void)setHueDirection:(int)arg1;
- (void)setColors:(id)arg1;
- (id)colorAtIndex:(unsigned long long)arg1 count:(unsigned long long)arg2 state:(id)arg3;
- (void)dealloc;
- (void)getComponentsForIndex:(unsigned long long)arg1 hue:(float *)arg2 saturation:(float *)arg3 brightness:(float *)arg4 state:(id)arg5;
- (id)spanColorAtIndex:(unsigned long long)arg1 count:(unsigned long long)arg2 state:(id)arg3;
- (id)repeatColorAtIndex:(unsigned long long)arg1;
- (id)cycleColorAtIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODDLayoutObjectList : ODDLayoutObject
{
    NSMutableArray *mChildren;
}

- (void)addChild:(id)arg1;
- (id)children;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDForEach : ODDLayoutObjectList
{
    ODDIteratorSpecification *mIteratorSpecification;
}

- (id)iteratorSpecification;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDIteratorAttributes : NSObject
{
    int mAxis;
    int mPointType;
    _Bool mHideLastTransition;
    int mStart;
    unsigned int mCount;
    int mStep;
}

- (void)setStep:(int)arg1;
- (int)step;
- (void)setCount:(unsigned int)arg1;
- (unsigned int)count;
- (void)setStart:(int)arg1;
- (int)start;
- (void)setHideLastTransition:(_Bool)arg1;
- (_Bool)hideLastTransition;
- (void)setPointType:(int)arg1;
- (int)pointType;
- (void)setAxis:(int)arg1;
- (int)axis;

@end

__attribute__((visibility("hidden")))
@interface ODDIteratorSpecification : NSObject
{
    NSMutableArray *mAttributesList;
}

- (void)addAttributes:(id)arg1;
- (id)attributesList;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDLayout : NSObject
{
    ODDLayoutNode *mRootNode;
}

- (id)rootNode;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDLayoutNode : ODDLayoutObjectList
{
    ODDLayoutVariablePropertySet *mVariableList;
}

- (id)description;
- (void)setVariableList:(id)arg1;
- (id)variableList;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDLayoutVariablePropertySet : OADProperties
{
    int mDirection;
    _Bool mHasDirection;
}

+ (id)defaultProperties;
- (id)description;
- (_Bool)hasDirection;
- (void)setDirection:(int)arg1;
- (int)direction;
- (id)initWithDefaults;

@end

__attribute__((visibility("hidden")))
@interface ODDNodePoint : ODDDataPoint
{
    ODDNodePoint *mParent;
    NSMutableArray *mChildren;
    ODDTransitionPoint *mParentTransition;
    ODDTransitionPoint *mSiblingTransition;
}

- (void)setSiblingTransition:(id)arg1;
- (id)siblingTransition;
- (void)setParentTransition:(id)arg1;
- (id)parentTransition;
- (void)addChild:(id)arg1 order:(unsigned long long)arg2;
- (id)children;
- (id)parent;
- (void)setType:(int)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDOtherwise : ODDLayoutObjectList
{
}

@end

__attribute__((visibility("hidden")))
@interface ODDPointPropertySet : NSObject
{
    NSString *mLayoutTypeId;
    NSString *mPresentationName;
    NSString *mPresentationStyleLabel;
    int mPresentationStyleIndex;
    int mPresentationStyleCount;
    NSObject *mPresentationAssociatedId;
    _Bool mCustomVerticalFlip;
    double mCustomScaleX;
    double mCustomScaleY;
    double mCustomOffsetX;
    double mCustomOffsetY;
}

- (void)setCustomOffsetY:(double)arg1;
- (double)customOffsetY;
- (void)setCustomOffsetX:(double)arg1;
- (double)customOffsetX;
- (void)setCustomScaleY:(double)arg1;
- (double)customScaleY;
- (void)setCustomScaleX:(double)arg1;
- (double)customScaleX;
- (void)setCustomVerticalFlip:(_Bool)arg1;
- (_Bool)customVerticalFlip;
- (void)setPresentationAssociatedId:(id)arg1;
- (id)presentationAssociatedId;
- (void)setPresentationStyleCount:(int)arg1;
- (int)presentationStyleCount;
- (void)setPresentationStyleIndex:(int)arg1;
- (int)presentationStyleIndex;
- (void)setPresentationStyleLabel:(id)arg1;
- (id)presentationStyleLabel;
- (void)setPresentationName:(id)arg1;
- (id)presentationName;
- (void)setLayoutTypeId:(id)arg1;
- (id)layoutTypeId;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDPresentationPoint : ODDPoint
{
    ODDPresentationPoint *mParent;
    NSMutableArray *mChildren;
}

- (void)addChild:(id)arg1 order:(unsigned long long)arg2;
- (id)children;
- (id)parent;
- (void)setType:(int)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDShape : ODDLayoutObject
{
    int mType;
    int mPresetType;
    NSMutableArray *mAdjustments;
}

- (void)addAdjustment:(id)arg1;
- (id)adjustments;
- (void)setPresetType:(int)arg1;
- (int)presetType;
- (void)setType:(int)arg1;
- (int)type;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDShapeAdjustment : NSObject
{
    unsigned int mIndex;
    double mValue;
}

- (void)setValue:(double)arg1;
- (double)value;
- (void)setIndex:(unsigned int)arg1;
- (unsigned int)index;

@end

__attribute__((visibility("hidden")))
@interface ODDStyleDefinition : NSObject
{
    NSMutableDictionary *mStyleLabels;
}

- (void)setLabel:(id)arg1 forName:(id)arg2;
- (id)labelForName:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODDStyleLabel : NSObject
{
    OADShapeStyle *mShapeStyle;
}

- (void)setShapeStyle:(id)arg1;
- (id)shapeStyle;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface ODDTransitionPoint : ODDDataPoint
{
}

- (void)setType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODDWhen : ODDLayoutObjectList
{
    ODDIteratorSpecification *mIteratorSpecification;
}

- (id)iteratorSpecification;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODILinear : NSObject
{
    _Bool mIsHorizontal;
    _Bool mWithConnectors;
    _Bool mStretch;
    float mPointHeight;
    float mConnectorWidth;
    float mPadding;
    _Bool mIsTextCenteredHorizontally;
    _Bool mIsTextCenteredVertically;
    unsigned int mMaxPointCount;
    ODIState *mState;
}

+ (void)mapUnknownWithState:(id)arg1;
+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
- (void)mapStyleFromTransition:(id)arg1 shape:(id)arg2;
- (void)mapTransition:(id)arg1 pointBounds:(struct CGRect)arg2;
- (void)mapStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;
- (void)nextPointBounds:(struct CGRect *)arg1;
- (void)setLogicalBounds;
- (void)map;
- (void)setMaxPointCount:(unsigned int)arg1;
- (void)setIsTextCenteredVertically:(_Bool)arg1;
- (void)setIsTextCenteredHorizontally:(_Bool)arg1;
- (void)setIsTextCentered:(_Bool)arg1;
- (void)setPadding:(float)arg1;
- (void)setConnectorWidth:(float)arg1;
- (void)setPointHeight:(float)arg1;
- (void)setStretch:(_Bool)arg1;
- (void)setWithConnectors:(_Bool)arg1;
- (void)setIsHorizontal:(_Bool)arg1;
- (id)initWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIImageLinear : ODILinear
{
    NSString *mImagePresentationName;
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;
- (void)dealloc;
- (id)initWithImagePresentationName:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIAccentedImageLinear : ODIImageLinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIArrow : NSObject
{
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (void)mapWithState:(id)arg1 outward:(_Bool)arg2;
+ (unsigned long long)nodeCountWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIArrow2 : ODILinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIArrow3 : NSObject
{
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (id)pointAtIndex:(unsigned int)arg1 points:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIArrow4 : NSObject
{
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (id)pointAtIndex:(unsigned int)arg1 points:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIBending : NSObject
{
    float mSpaceWidth;
    float mSpaceHeight;
    _Bool mWithArrows;
    float mRectHeight;
    unsigned int mMaxNodeCount;
    unsigned int mMaxColumnCount;
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (unsigned int)mapLogicalBoundsWithShapeSize:(struct CGSize)arg1 spaceSize:(struct CGSize)arg2 maxNodeCount:(unsigned int)arg3 maxColumnCount:(unsigned int)arg4 state:(id)arg5;
- (void)mapWithState:(id)arg1;
- (void)setMaxColumnCount:(unsigned int)arg1;
- (void)setMaxNodeCount:(unsigned int)arg1;
- (void)setRectHeight:(float)arg1;
- (id)initWithArrows:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIBendingList2 : ODIBending
{
}

+ (void)mapWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODICycle : NSObject
{
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (_Bool)map2NodeWithState:(id)arg1;
+ (_Bool)map1NodeWithState:(id)arg1;
+ (void)mapTransition:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;
+ (struct CGRect)nodeBoundsWithIndex:(unsigned int)arg1 state:(id)arg2;
+ (struct CGRect)boundingBoxWithIsTight:(_Bool)arg1 state:(id)arg2;
+ (struct CGSize)nodeSizeWithState:(id)arg1;
+ (unsigned long long)nodeCountWithState:(id)arg1;
+ (void)mapWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODICycle5 : ODICycle
{
}

+ (_Bool)map2NodeWithState:(id)arg1;
+ (_Bool)map1NodeWithState:(id)arg1;
+ (void)mapTransition:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (float)intersectionAngleNextToAngle:(float)arg1 isAfter:(_Bool)arg2 state:(id)arg3;
+ (void)mapStyleForTransition:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (void)addShapeForTransition:(id)arg1 startAngle:(float)arg2 endAngle:(float)arg3 state:(id)arg4;
+ (float)normalizedAngle:(float)arg1;
+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (void)addShapeForNode:(id)arg1 relativeBounds:(struct CGRect)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;
+ (struct CGSize)nodeSizeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIChart3 : ODICycle5
{
}

+ (void)mapTransition:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODICycle2 : ODICycle
{
}

+ (_Bool)map2NodeWithState:(id)arg1;
+ (_Bool)map1NodeWithState:(id)arg1;
+ (void)mapTransition:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;
+ (struct CGSize)nodeSizeWithState:(id)arg1;
+ (float)nodeRadiusWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODICycle3 : ODICycle5
{
}

+ (void)mapStyleForTransition:(id)arg1 shape:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODICycle4 : ODICycle3
{
}

+ (unsigned long long)nodeCountWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODICycle6 : ODICycle5
{
}

+ (void)mapStyleForTransition:(id)arg1 shape:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODICycle7 : ODICycle
{
}

+ (_Bool)map2NodeWithState:(id)arg1;
+ (_Bool)map1NodeWithState:(id)arg1;
+ (void)mapTransition:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (void)addShapeForTransition:(id)arg1 relativeBounds:(struct CGRect)arg2 rotation:(float)arg3 state:(id)arg4;
+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (void)addShapeForNode:(id)arg1 relativeBounds:(struct CGRect)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;
+ (struct CGSize)nodeSizeWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIDiagram : NSObject
{
}

+ (id)mapDiagram:(id)arg1 drawingTheme:(id)arg2;
+ (void)mapLayoutTypeId:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIDrawable : NSObject
{
}

+ (void)mapStyleAndTextFromPoint:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (void)map1dArrowStyleToShape:(id)arg1 state:(id)arg2;
+ (void)map1dArrowStyleFromPoint:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (void)mapStyleForLabelName:(id)arg1 point:(id)arg2 shape:(id)arg3 state:(id)arg4;
+ (void)mapStyleForLabelName:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (void)mapStyleForPresentationName:(id)arg1 point:(id)arg2 shape:(id)arg3 state:(id)arg4;
+ (void)mapStyleFromPoint:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (id)addShapeWithBounds:(struct CGRect)arg1 rotation:(float)arg2 geometry:(id)arg3 state:(id)arg4;
+ (struct CGSize)sizeOfDiagram:(id)arg1;
+ (id)shapeGeometryForBezierPath:(id)arg1 gSpace:(struct CGRect)arg2;
+ (id)shapeGeometryWithShapeType:(int)arg1 adjustValues:(const int *)arg2;
+ (id)shapeGeometryForDoubleArrowWithControlPoint:(struct CGPoint)arg1;
+ (id)shapeGeometryForRightArrowWithControlPoint:(struct CGPoint)arg1;
+ (id)shapeGeometryForRoundedRectangleWithRadius:(float)arg1;
+ (id)shapeGeometryForEllipse;
+ (id)shapeGeometryForRectangle;
+ (void)addArrowHeadToShapeProperties:(id)arg1;
+ (void)mapShapeProperties:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (void)mapShapeProperties:(id)arg1 shapeStyle:(id)arg2 shape:(id)arg3 state:(id)arg4;
+ (id)styleForLabelName:(id)arg1 styleCount:(int)arg2 styleIndex:(int)arg3 state:(id)arg4;
+ (id)styleForPresentation:(id)arg1 point:(id)arg2 state:(id)arg3;
+ (id)presentationWithName:(id)arg1 point:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIGear1 : ODICycle5
{
}

+ (void)mapStyleForTransition:(id)arg1 shape:(id)arg2 state:(id)arg3;
+ (unsigned long long)nodeCountWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIHNodeInfo : NSObject
{
    int mTreeDepth;
    int mRow;
    struct ODIHRange mXRange;
    _Bool mConnectToVerticalSide;
    int mExtraRowsBetweenParentAndSelf;
    float mXOffsetRelativeToParent;
    struct ODIHRangeVector *mXRanges;
}

- (id).cxx_construct;
- (struct ODIHRangeVector *)xRanges;
- (void)addToXOffsetRelativeToParent:(float)arg1;
- (void)setXOffsetRelativeToParent:(float)arg1;
- (float)xOffsetRelativeToParent;
- (void)setExtraRowsBetweenParentAndSelf:(int)arg1;
- (int)extraRowsBetweenParentAndSelf;
- (void)setConnectToVerticalSide:(_Bool)arg1;
- (_Bool)connectToVerticalSide;
- (void)setRow:(int)arg1;
- (int)row;
- (void)setTreeDepth:(int)arg1;
- (int)treeDepth;
- (void)setXRange:(struct ODIHRange)arg1;
- (struct ODIHRange)xRange;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface ODIHierarchy : NSObject
{
    int mType;
    int mMaxMappableTreeDepth;
    ODIState *mState;
    NSMutableDictionary *mNodeInfoMap;
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
- (void)dealloc;
- (void)map;
- (void)mapNode:(id)arg1;
- (struct CGRect)boundsOfNode:(id)arg1;
- (void)setAbsolutePositionOfNode:(id)arg1 parentRow:(int)arg2 parentXOffset:(float)arg3;
- (void)mapLogicalBoundsWithXRanges:(const struct ODIHRangeVector *)arg1;
- (struct ODIHRangeVector *)mapRangesForNode:(id)arg1;
- (void)createInfoForNode:(id)arg1 depth:(int)arg2;
- (id)infoForNode:(id)arg1;
- (id)initWithType:(int)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIHorizonalList3 : NSObject
{
    unsigned int mMaxPointCount;
    ODIState *mState;
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
- (void)mapBaseStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)mapOnePillarStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)mapRoofStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)mapPillarPoints:(id)arg1 bounds:(struct CGRect)arg2;
- (void)map;
- (void)setMaxPointCount:(unsigned int)arg1;
- (id)initWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIHorizontalProcess11 : ODILinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIHorizontalProcess3 : ODILinear
{
}

- (void)mapStyleFromTransition:(id)arg1 shape:(id)arg2;
- (void)mapStyleFromPoint:(id)arg1 shape:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODILayoutNode : NSObject
{
    ODDPoint *mPoint;
    ODDAlgorithm *mAlgorithm;
    ODDShape *mShape;
    NSMutableArray *mChildren;
}

- (void)dealloc;
- (id)initWithLayoutNode:(id)arg1 point:(id)arg2;
- (void)processShape:(id)arg1 state:(struct ODILayoutNodeState *)arg2;
- (void)processAlgorithm:(id)arg1 state:(struct ODILayoutNodeState *)arg2;
- (void)processForEach:(id)arg1 state:(struct ODILayoutNodeState *)arg2;
- (void)processChoose:(id)arg1 state:(struct ODILayoutNodeState *)arg2;
- (void)processLayoutNode:(id)arg1 state:(struct ODILayoutNodeState *)arg2;
- (void)processLayoutObjects:(id)arg1 state:(struct ODILayoutNodeState *)arg2;
- (id)initWithLayoutNode:(id)arg1 state:(struct ODILayoutNodeState *)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIList1 : ODILinear
{
}

- (void)map;

@end

__attribute__((visibility("hidden")))
@interface ODIPointIterator : NSObject
{
}

+ (id)pointsForSpecification:(id)arg1 startingPoint:(id)arg2 isLast:(_Bool)arg3;
+ (void)processFollowingSiblingAxisFromPoint:(id)arg1 state:(struct ODIPointIteratorState *)arg2;
+ (void)processChildAxisFromPoint:(id)arg1 state:(struct ODIPointIteratorState *)arg2;
+ (void)processSelfAxisFromPoint:(id)arg1 state:(struct ODIPointIteratorState *)arg2;
+ (_Bool)isDoneForState:(struct ODIPointIteratorState *)arg1;
+ (_Bool)isPoint:(id)arg1 ofType:(int)arg2;
+ (_Bool)addPoint:(id)arg1 state:(struct ODIPointIteratorState *)arg2;
+ (id)processAttributes:(id)arg1 startingPoint:(id)arg2 isLast:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODIPyramid : NSObject
{
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (_Bool)verticalFlipWithState:(id)arg1;
+ (unsigned long long)nodeCountWithState:(id)arg1;
+ (void)mapWithState:(id)arg1 apexUp:(_Bool)arg2;
+ (void)addTrapezoidForNode:(id)arg1 top:(float)arg2 height:(float)arg3 topBase:(float)arg4 bottomBase:(float)arg5 state:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface ODIState : NSObject
{
    ODDDiagram *mDiagram;
    OADOrientedBounds *mDiagramOrientedBounds;
    struct CGRect mLogicalBounds;
    double mScale;
    OADGroup *mGroup;
    NSMutableArray *mPresentationNames;
    NSMutableArray *mDefaultStyleLabelNames;
    int mPointCount;
    int mPointIndex;
    OADShapeStyle *mTextStyle;
    OADDrawingTheme *mDrawingTheme;
}

- (id).cxx_construct;
- (id)drawingTheme;
- (void)setTextStyle:(id)arg1;
- (id)textStyle;
- (void)setPointIndex:(int)arg1;
- (int)pointIndex;
- (void)setPointCount:(int)arg1;
- (int)pointCount;
- (void)setDefaultStyleLabelName:(id)arg1 forPointType:(int)arg2;
- (id)defaultStyleLabelNameForPointType:(int)arg1;
- (void)setPresentationName:(id)arg1 forPointType:(int)arg2;
- (id)presentationNameForPointType:(int)arg1;
- (void)setGroup:(id)arg1;
- (id)group;
- (void)setLogicalBounds:(struct CGRect)arg1;
- (double)scale;
- (void)setLogicalBounds:(struct CGRect)arg1 maintainAspectRatio:(_Bool)arg2;
- (struct CGRect)logicalBounds;
- (id)diagramOrientedBounds;
- (id)diagram;
- (void)dealloc;
- (id)initWithDiagram:(id)arg1 group:(id)arg2 drawingTheme:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODITarget1 : ODILinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODITarget2 : ODILinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODITarget3 : ODILinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIText : NSObject
{
}

+ (void)mapTextFromPoint:(id)arg1 toShape:(id)arg2 isCenteredHorizontally:(_Bool)arg3 isCenteredVertically:(_Bool)arg4 includeChildren:(_Bool)arg5 state:(id)arg6;
+ (void)mapTextFromPoint:(id)arg1 toShape:(id)arg2 isCentered:(_Bool)arg3 includeChildren:(_Bool)arg4 state:(id)arg5;
+ (void)addTextFromPoint:(id)arg1 level:(unsigned int)arg2 includeChildren:(_Bool)arg3 toShape:(id)arg4 baseListStyle:(id)arg5 state:(id)arg6;
+ (id)baseListStyleForPoint:(id)arg1 shape:(id)arg2 isCentered:(_Bool)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface ODITitlePoint : ODIHorizonalList3
{
    NSString *mTitlePointPresentationName;
}

- (void)mapBaseStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)mapOnePillarStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)mapRoofStyleFromPoint:(id)arg1 shape:(id)arg2;
- (void)dealloc;
- (id)initWithTitlePointPresentationName:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIVenn : NSObject
{
}

+ (_Bool)mapIdentifier:(id)arg1 state:(id)arg2;
+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;
+ (unsigned long long)nodeCountWithState:(id)arg1;
+ (void)mapWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIVenn1 : ODIVenn
{
}

+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIVenn2 : ODILinear
{
}

- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODIVenn3 : ODIVenn
{
}

+ (void)mapNode:(id)arg1 index:(unsigned int)arg2 state:(id)arg3;
+ (struct CGRect)mapGSpaceWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODIVerticalProcess2 : ODILinear
{
}

- (void)mapStyleFromTransition:(id)arg1 shape:(id)arg2;
- (void)mapPoint:(id)arg1 bounds:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODXAlgorithm : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toAlgorithm:(id)arg2;
+ (id)typeMap;

@end

__attribute__((visibility("hidden")))
@interface ODXChoose : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toChoose:(id)arg2 state:(id)arg3;
+ (void)readElseNode:(struct _xmlNode *)arg1 toChoose:(id)arg2 state:(id)arg3;
+ (void)readIfNode:(struct _xmlNode *)arg1 toChoose:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXColorTransform : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 transform:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXColorTransformStyleLabel : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 label:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXData : NSObject
{
}

+ (id)readModelIdentifierFromNode:(struct _xmlNode *)arg1 attributeName:(const char *)arg2;
+ (void)readNode:(struct _xmlNode *)arg1 toDiagram:(id)arg2 state:(id)arg3;
+ (void)associatePresentationsInIdMap:(id)arg1;
+ (int)readConnectionTypeFromNode:(struct _xmlNode *)arg1;
+ (void)readConnectionFromNode:(struct _xmlNode *)arg1 pointIdMap:(id)arg2 state:(id)arg3;
+ (void)readConnectionListFromNode:(struct _xmlNode *)arg1 pointIdMap:(id)arg2 state:(id)arg3;
+ (int)readPointTypeFromNode:(struct _xmlNode *)arg1;
+ (id)readPointFromNode:(struct _xmlNode *)arg1 pointIdMap:(id)arg2 state:(id)arg3;
+ (id)readPointListFromNode:(struct _xmlNode *)arg1 pointIdMap:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXDiagram : NSObject
{
}

+ (id)readFromParentNode:(struct _xmlNode *)arg1 state:(id)arg2;
+ (struct _xmlNode *)nodeForRelationshipName:(const char *)arg1 relIdsNode:(struct _xmlNode *)arg2 part:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface ODXFillColorList : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 list:(id)arg2;
+ (id)colorApplicationMethodMap;
+ (id)hueDirectionMap;

@end

__attribute__((visibility("hidden")))
@interface ODXForEach : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toForEach:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXIteratorSpecification : NSObject
{
}

+ (void)readFromNode:(struct _xmlNode *)arg1 toSpecification:(id)arg2 state:(id)arg3;
+ (id)elementTypeMap;
+ (id)axisTypeMap;

@end

__attribute__((visibility("hidden")))
@interface ODXLayout : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toDiagram:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXLayoutNode : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toLayoutNode:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXLayoutObjectList : NSObject
{
}

+ (void)readChildNode:(struct _xmlNode *)arg1 toList:(id)arg2 state:(id)arg3;
+ (void)readNode:(struct _xmlNode *)arg1 toList:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXLayoutVariablePropertySet : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toSet:(id)arg2 state:(id)arg3;
+ (id)directionMap;

@end

__attribute__((visibility("hidden")))
@interface ODXPointPropertySet : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toSet:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODXShape : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 toShape:(id)arg2 state:(id)arg3;
+ (void)readAdjustmentListNode:(struct _xmlNode *)arg1 toShape:(id)arg2 state:(id)arg3;
+ (void)readTypeFromNode:(struct _xmlNode *)arg1 toShape:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface ODXState : OCXReadState
{
    CXNamespace *mODXDiagramNamespace;
    OAXDrawingState *mOfficeArtState;
}

@property(retain, nonatomic) CXNamespace *ODXDiagramNamespace; // @synthesize ODXDiagramNamespace=mODXDiagramNamespace;
- (void)setupNSForXMLFormat:(int)arg1;
- (id)officeArtState;
- (void)dealloc;
- (id)initWithOfficeArtState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface ODXStyleDefinition : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 definition:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface ODXStyleLabel : NSObject
{
}

+ (void)readNode:(struct _xmlNode *)arg1 label:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OISFUBufferedInputStream : NSObject <OISFUBufferedInputStream>
{
    id <SFUInputStream> mStream;
    char *mBuffer;
    unsigned long long mBufferSize;
    long long mBufferOffset;
    long long mBufferStart;
    long long mBufferEnd;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (_Bool)seekWithinBufferToOffset:(long long)arg1;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithStream:(id)arg1 dataLength:(long long)arg2;
- (id)initWithStream:(id)arg1 bufferSize:(unsigned long long)arg2;
- (id)initWithStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUCryptoInputStream : NSObject <SFUInputStream>
{
    id <SFUInputStream> mBaseStream;
    OISFUCryptor *mCryptor;
    long long mOffset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initForDecryptionWithInputStream:(id)arg1 key:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUCryptoKey : NSObject
{
    unsigned int mIterationCount;
    char *mKey;
    unsigned long long mKeyLength;
    NSData *mSaltData;
    NSString *_passphrase;
}

@property(readonly, nonatomic) NSString *passphrase; // @synthesize passphrase=_passphrase;
- (id)saltData;
- (unsigned long long)keyLength;
- (const char *)keyData;
- (unsigned int)iterationCount;
- (int)keyType;
- (void)dealloc;
- (id)initAes128Key:(const char *)arg1 length:(unsigned int)arg2 iterationCount:(unsigned int)arg3;
- (id)initAes128KeyFromPassphrase:(const char *)arg1 length:(unsigned int)arg2 iterationCount:(unsigned int)arg3 saltData:(id)arg4;
- (id)initAes128KeyFromPassphrase:(id)arg1 iterationCount:(unsigned int)arg2 saltData:(id)arg3;
- (id)initAes128KeyFromPassphrase:(const char *)arg1 length:(unsigned int)arg2 iterationCount:(unsigned int)arg3;
- (id)initAes128KeyFromPassphrase:(id)arg1 withIterationCountAndSaltDataFromCryptoKey:(id)arg2;
- (id)initAes128KeyFromPassphrase:(id)arg1 iterationCount:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface OISFUCryptoOutputStream : NSObject <SFUOutputStream>
{
    id <SFUOutputStream> mBaseStream;
    OISFUCryptor *mCryptor;
    _Bool mIsClosed;
    _Bool mComputeCrc32;
    unsigned int mCrc32;
}

+ (unsigned long long)encodedLengthForDataLength:(unsigned long long)arg1 key:(id)arg2;
- (id)closeLocalStream;
- (void)close;
- (unsigned int)crc32;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initForEncryptionWithOutputStream:(id)arg1 key:(id)arg2 computeCrc32:(_Bool)arg3;
- (id)initForEncryptionWithOutputStream:(id)arg1 key:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUCryptoUtils : NSObject
{
}

+ (id)sha1HashFromStorage:(id)arg1;
+ (id)sha256HashFromString:(id)arg1;
+ (id)sha256HashFromStorage:(id)arg1;
+ (id)sha256HashFromData:(id)arg1;
+ (id)decodePassphraseHint:(id)arg1;
+ (id)encodePassphraseHint:(id)arg1;
+ (id)newBufferedInputStreamForDecryptingZippedBundle:(id)arg1 key:(id)arg2 zipArchive:(id)arg3 isDeflated:(_Bool)arg4 zipStream:(id *)arg5;
+ (id)newBufferedInputStreamForDecryptingFile:(id)arg1 key:(id)arg2 isDeflated:(_Bool)arg3 zipStream:(id *)arg4;
+ (_Bool)isEncryptionVersionAndFormatSupportedInPassphraseVerifier:(id)arg1;
+ (_Bool)checkKey:(id)arg1 againstPassphraseVerifier:(id)arg2;
+ (id)saltForSageFiles;
+ (id)saltFromVerifier:(id)arg1 saltLength:(unsigned long long)arg2;
+ (unsigned int)iterationCountFromPassphraseVerifier:(id)arg1;
+ (id)generatePassphraseVerifierForKey:(id)arg1 verifierVersion:(unsigned short)arg2;
+ (unsigned int)ivLengthForKey:(id)arg1;
+ (id)hashForPassphrase:(id)arg1 withSalt:(id)arg2;
+ (id)generateRandomSaltWithLength:(unsigned long long)arg1;
+ (id)generateRandomSalt;
+ (_Bool)generateRandomDataInBuffer:(char *)arg1 length:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface OISFUCryptor : NSObject
{
    int mOperation;
    struct _CCCryptor *mCryptor;
    unsigned long long mBlockSize;
    _Bool mFinished;
    char *mDecryptionInputBuffer;
    char *mOutputBuffer;
    char *mOutputBufferPos;
    unsigned long long mOutputBufferAvailable;
}

- (_Bool)cryptDataFromStream:(id)arg1 toBuffer:(char *)arg2 length:(unsigned long long)arg3 bytesRead:(unsigned long long *)arg4 error:(id *)arg5;
- (_Bool)cryptDataFromBuffer:(const char *)arg1 length:(unsigned long long)arg2 toStream:(id)arg3 finished:(_Bool)arg4 crc32:(unsigned int *)arg5 error:(id *)arg6;
- (_Bool)cryptDataFromBuffer:(const char *)arg1 length:(unsigned long long)arg2 toStream:(id)arg3 finished:(_Bool)arg4 error:(id *)arg5;
- (void)dealloc;
- (id)initWithKey:(id)arg1 operation:(int)arg2 iv:(const char *)arg3 ivLength:(unsigned long long)arg4 usePKCS7Padding:(_Bool)arg5;
- (id)initWithKey:(id)arg1 operation:(int)arg2 iv:(const char *)arg3 ivLength:(unsigned long long)arg4;

@end

__attribute__((visibility("hidden")))
@interface OISFUDataRepresentation : NSObject
{
    _Bool mHasHash;
    unsigned int mHash;
    _Bool mHasSha1Hash;
    NSData *mSha1Hash;
}

- (long long)compare:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)sha1Hash;
- (unsigned int)uint32Hash;
- (unsigned long long)hash;
- (unsigned long long)readIntoData:(id)arg1;
- (struct CGDataProvider *)cgDataProvider;
- (struct _xmlTextReader *)xmlReaderForGzippedDataWithInputStream:(id *)arg1;
- (struct _xmlTextReader *)xmlReaderForGzippedData;
- (struct _xmlTextReader *)xmlReaderWithReadCallback:(CDUnknownFunctionPointerType)arg1;
- (struct _xmlTextReader *)xmlReader;
- (struct _xmlDoc *)xmlDocument;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)bufferedInputStreamWithBufferSize:(unsigned long long)arg1;
- (id)bufferedInputStream;
- (id)inputStream;
- (_Bool)isEncrypted;
- (long long)encodedLength;
- (long long)dataLength;
- (_Bool)isReadable;

@end

__attribute__((visibility("hidden")))
@interface OISFUFileDataRepresentation : OISFUDataRepresentation
{
    NSString *mPath;
    int mSharedFd;
    long long mFileLength;
    unsigned int mFileType;
    _Bool mHasFileAttributes;
    long long mPlaintextDataLength;
    OISFUCryptoKey *mCryptoKey;
    id <SFUInputStream> mInputStream;
    _Bool mDeleteFileWhenDone;
}

- (void)deleteFileWhenDone;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)inputStream;
- (_Bool)isCryptoKeyIdenticalToKey:(id)arg1;
- (_Bool)isEncrypted;
- (long long)encodedLength;
- (long long)dataLength;
- (_Bool)isReadable;
- (void)setFileType:(unsigned int)arg1;
- (unsigned int)fileType;
- (id)path;
- (id)description;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1 cryptoKey:(id)arg2 dataLength:(long long)arg3;
- (id)initWithCopyOfData:(id)arg1 path:(id)arg2 cryptoKey:(id)arg3;
- (id)initWithCopyOfData:(id)arg1 path:(id)arg2;
- (id)initWithPath:(id)arg1 sharedFileDescriptor:(int)arg2 cryptoKey:(id)arg3 dataLength:(long long)arg4;
- (id)initWithPath:(id)arg1 cryptoKey:(id)arg2 dataLength:(long long)arg3;
- (id)initWithPath:(id)arg1 sharedFileDescriptor:(int)arg2;
- (id)initWithPath:(id)arg1;
- (void)readFileAttributes;

@end

__attribute__((visibility("hidden")))
@interface OISFUFileInputStream : NSObject <SFUInputStream>
{
    int mFd;
    _Bool mIsCachingDisabled;
    long long mStartOffset;
    long long mCurrentOffset;
    long long mEndOffset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithPath:(id)arg1 offset:(long long)arg2;
- (id)initWithPath:(id)arg1 offset:(long long)arg2 length:(long long)arg3;
- (id)initWithFileDescriptor:(int)arg1 offset:(long long)arg2 length:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUFileOutputStream : NSObject <SFUOutputStream>
{
    struct __sFILE *mFile;
    NSString *mPath;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (long long)offset;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUGZipFileInputStream : NSObject <SFUInputStream>
{
    int _fd;
    void *_file;
    _Bool _isCachingDisabled;
    long long _offset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUGZipFileOutputStream : NSObject <SFUOutputStream>
{
    void *_file;
    long long _offset;
    NSString *_path;
}

+ (id)gzipExtension;
- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (long long)offset;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUJson : NSObject
{
}

+ (id)dictionaryFromString:(id)arg1;
+ (id)arrayFromString:(id)arg1;
+ (id)objectFromString:(id)arg1;
+ (id)stringFromObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OISFUJsonScanner : NSObject
{
    NSString *mString;
    unsigned short *mCharacters;
    unsigned long long mLength;
    unsigned long long mOffset;
    NSCharacterSet *mWhitespaceCharacterSet;
    NSCharacterSet *mDecimalDigitCharacterSet;
}

- (id)parseObjectWithMaxDepth:(int)arg1;
- (id)parseNumber;
- (id)parseFalse;
- (id)parseTrue;
- (id)parseNull;
- (_Bool)parseConstantString:(const char *)arg1;
- (id)parseArrayWithMaxDepth:(int)arg1;
- (id)parseDictionaryWithMaxDepth:(int)arg1;
- (id)parseString;
- (void)appendCharactersInRange:(struct _NSRange)arg1 toString:(id)arg2;
- (id)parseHexCharacter;
- (void)skipWhitespace;
- (unsigned short)nextCharacter;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OISFUMemoryDataRepresentation : OISFUDataRepresentation
{
    NSData *mData;
}

- (unsigned long long)readIntoData:(id)arg1;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)bufferedInputStreamWithBufferSize:(unsigned long long)arg1;
- (id)bufferedInputStream;
- (id)inputStream;
- (long long)dataLength;
- (_Bool)isReadable;
- (id)data;
- (void)dealloc;
- (id)initWithDataRepresentation:(id)arg1;
- (id)initWithDataNoCopy:(id)arg1;
- (id)initWithData:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OISFUMemoryInputStream : NSObject <OISFUBufferedInputStream>
{
    NSData *mData;
    const char *mStart;
    const char *mCurrent;
    const char *mEnd;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (_Bool)seekWithinBufferToOffset:(long long)arg1;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithData:(id)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUMemoryOutputStream : NSObject <SFUOutputStream>
{
    NSMutableData *mData;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUMoveableFileOutputStream : NSObject <SFUOutputStream>
{
    int mFd;
    NSString *mPath;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (void)flush;
- (void)truncateToLength:(long long)arg1;
- (_Bool)moveToPath:(id)arg1;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (long long)offset;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (id)path;
- (void)dealloc;
- (id)initWithPath:(id)arg1;
- (id)initWithTemporaryFile:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUOffsetInputStream : NSObject <SFUInputStream>
{
    id <SFUInputStream> mInputStream;
    long long mInitialOffset;
}

- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (void)seekToOffset:(long long)arg1;
- (_Bool)canSeek;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (long long)offset;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1 initialOffset:(long long)arg2;
- (id)initWithInputStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUOffsetOutputStream : NSObject <SFUOutputStream>
{
    id <SFUOutputStream> mOutputStream;
    long long mInitialOffset;
}

- (id)closeLocalStream;
- (void)close;
- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUPackageInputBundle : NSObject <SFUInputBundle>
{
    NSString *_rootPath;
}

- (void)copyEntry:(id)arg1 toFile:(id)arg2;
- (unsigned int)crc32ForEntry:(id)arg1;
- (long long)lengthOfEntry:(id)arg1;
- (id)bufferedInputStreamForEntry:(id)arg1;
- (id)inputStreamForEntry:(id)arg1;
- (_Bool)hasEntryWithName:(id)arg1;
- (id)_existingPathForEntryName:(id)arg1 isGz:(_Bool *)arg2;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFURegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_expressionString;
    void *_reserved;
}

+ (id)regularExpressionWithString:(id)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (const char *)getBytesForString:(id)arg1 lossByte:(unsigned char)arg2;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)matchedRangeForString:(id)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (struct _NSRange)matchedRangeForCString:(const char *)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (id)expressionString;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (unsigned long long)numberOfSubexpressions;
- (id)initWithExpressionString:(id)arg1 options:(unsigned int)arg2;
- (id)initWithExpressionString:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipArchive : NSObject
{
    NSMutableDictionary *mEntries;
    OISFUDataRepresentation<SFUZipArchiveDataRepresentation> *mDataRepresentation;
    NSData *mPassphraseVerifier;
    NSString *mPassphraseHint;
    OISFUCryptoKey *mCryptoKey;
    NSData *mEncryptedDocumentUuid;
}

+ (_Bool)isZipArchiveAtPath:(id)arg1;
- (_Bool)decompressAtPath:(id)arg1;
- (void)setCryptoKey:(id)arg1;
- (id)encryptedDocumentUuid;
- (id)passphraseHint;
- (id)passphraseVerifier;
- (_Bool)isEncrypted;
- (id)allEntryNames;
- (id)entryWithName:(id)arg1 dataLength:(long long)arg2;
- (id)entryWithName:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2 ignoreCase:(_Bool)arg3;
- (id)initWithData:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2;
- (id)initWithPath:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2 ignoreCase:(_Bool)arg3;
- (id)initWithPath:(id)arg1 collapseCommonRootDirectory:(_Bool)arg2;
- (void)readExtraFieldFromBuffer:(const char *)arg1 size:(unsigned long long)arg2 entry:(id)arg3;
- (id)readFilenameFromBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (struct SFUZipEndOfCentralDirectory)readZip64EndOfCentralDirectoryFromInputStream:(id)arg1 offset:(long long)arg2;
- (struct SFUZipEndOfCentralDirectory)readZip64EndOfCentralDirectoryFromInputStream:(id)arg1 eocdOffset:(long long)arg2;
- (const char *)searchForEndOfCentralDirectoryFromInputStream:(id)arg1 offset:(long long *)arg2;
- (struct SFUZipEndOfCentralDirectory)readEndOfCentralDirectoryFromInputStream:(id)arg1;
- (void)collapseCommonRootDirectoryIgnoreCase:(_Bool)arg1;
- (void)readEntries;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipArchiveFileDataRepresentation : OISFUDataRepresentation <SFUZipArchiveDataRepresentation>
{
    OISFUFileDataRepresentation *mFileRepresentation;
    int mFd;
}

- (id)bufferedInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id)inputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id)path;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)inputStream;
- (_Bool)isEncrypted;
- (long long)dataLength;
- (_Bool)isReadable;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipArchiveMemoryDataRepresentation : OISFUDataRepresentation <SFUZipArchiveDataRepresentation>
{
    NSData *mData;
}

- (id)bufferedInputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (id)inputStreamWithOffset:(long long)arg1 length:(long long)arg2;
- (_Bool)hasSameLocationAs:(id)arg1;
- (id)bufferedInputStreamWithBufferSize:(unsigned long long)arg1;
- (id)bufferedInputStream;
- (id)inputStream;
- (long long)dataLength;
- (_Bool)isReadable;
- (id)data;
- (void)dealloc;
- (id)initWithData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipArchiveOutputStream : NSObject <SFUSimpleOutputStream>
{
    OISFUMoveableFileOutputStream *mOutputStream;
    OISFUCryptoKey *mCryptoKey;
    NSData *mPassphraseHint;
    NSData *mEncryptedDocumentUuid;
    NSMutableArray *mEntries;
    OISFUZipOutputEntry *mCurrentEntry;
    OISFUZipOutputEntry *mLastEntryInFile;
    id <SFUOutputStream> mEntryOutputStream;
    char *mBuffer;
    NSMutableArray *mFreeList;
    OISFUZipFreeSpaceEntry *mCurrentFreeSpace;
    unsigned long long mFreeBytes;
}

+ (unsigned long long)approximateBytesForEntryHeaderWithName:(id)arg1;
- (unsigned int)crc32ForEntry:(id)arg1;
- (void)reset;
- (unsigned long long)freeBytes;
- (void)flush;
- (id)entriesAtPath:(id)arg1;
- (id)entryNames;
- (void)moveToPath:(id)arg1;
- (void)close;
- (void)setEncryptedDocumentUuid:(id)arg1;
- (void)removeEntryWithName:(id)arg1;
- (_Bool)canRemoveEntryWithName:(id)arg1;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)setCrc32ForCurrentEntry:(unsigned int)arg1;
- (id)beginUncompressedUnknownSizeEntryWithName:(id)arg1;
- (void)beginUnknownSizeEntryWithName:(id)arg1 isCompressed:(_Bool)arg2;
- (void)beginEntryWithName:(id)arg1 isCompressed:(_Bool)arg2 uncompressedSize:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithPath:(id)arg1 cryptoKey:(id)arg2 passphraseHint:(id)arg3;
- (id)initWithPath:(id)arg1;
- (id)initWithOutputStream:(id)arg1 cryptoKey:(id)arg2 passphraseHint:(id)arg3;
- (void)writeZip64EndOfCentralDirectoryLocatorWithOffset:(long long)arg1;
- (void)writeZip64EndOfCentralDirectoryWithOffset:(long long)arg1;
- (void)writeEndOfCentralDirectoryWithOffset:(long long)arg1;
- (void)writeCentralFileHeaderUsingEntry:(id)arg1 isFirstEntry:(_Bool)arg2;
- (unsigned long long)writeLocalFileHeaderForEntry:(id)arg1;
- (void)coalesceAndTruncateFreeSpace;
- (void)finishEntry;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipDeflateOutputStream : NSObject <SFUOutputStream>
{
    id <SFUOutputStream> mOutputStream;
    struct z_stream_s mDeflateStream;
    char *mOutBuffer;
}

- (id)inputStream;
- (_Bool)canCreateInputStream;
- (long long)offset;
- (void)seekToOffset:(long long)arg1 whence:(int)arg2;
- (_Bool)canSeek;
- (void)writeBuffer:(const char *)arg1 size:(unsigned long long)arg2;
- (void)close;
- (id)closeLocalStream;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipEntry : OISFUDataRepresentation
{
    OISFUDataRepresentation<SFUZipArchiveDataRepresentation> *mArchiveDataRepresentation;
    int mCompressionMethod;
    unsigned long long mCompressedSize;
    unsigned long long mUncompressedSize;
    unsigned long long mOffset;
    unsigned int mCrc;
    unsigned long long mDataOffset;
    _Bool mHasDataOffset;
    unsigned long long mEncodedLength;
    _Bool mHasEncodedLength;
    OISFUCryptoKey *mCryptoKey;
}

- (void)setDataLength:(long long)arg1;
- (void)setCryptoKey:(id)arg1;
- (void)setCompressionFlags:(unsigned short)arg1;
- (void)readZip64ExtraField:(const char *)arg1 size:(unsigned long long)arg2;
- (unsigned int)crc;
- (unsigned long long)backingFileDataOffset;
- (id)backingFilePath;
- (_Bool)isBackedByFile;
- (_Bool)isEncrypted;
- (_Bool)isCompressed;
- (void)copyToFile:(id)arg1;
- (id)data;
- (id)inputStream;
- (long long)encodedLength;
- (long long)dataLength;
- (_Bool)isReadable;
- (void)dealloc;
- (id)initWithDataRepresentation:(id)arg1 compressionMethod:(int)arg2 compressedSize:(unsigned long long)arg3 uncompressedSize:(unsigned long long)arg4 offset:(unsigned long long)arg5 crc:(unsigned int)arg6;
- (id)initFromCentralFileHeader:(const char *)arg1 dataRepresentation:(id)arg2;
- (unsigned long long)calculateEncodedLength;
- (unsigned long long)dataOffset;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipException : NSException
{
}

@end

__attribute__((visibility("hidden")))
@interface OISFUZipFreeSpaceEntry : NSObject
{
    unsigned long long offset;
    unsigned long long length;
}

- (long long)compareByOffset:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipInflateInputStream : NSObject <SFUInputStream>
{
    struct z_stream_s mStream;
    long long mOffset;
    id <OISFUBufferedInputStream> mInput;
    char *mOutBuffer;
    unsigned long long mOutBufferSize;
    _Bool mReachedEnd;
    _Bool mIsFromZip;
    unsigned long long mCalculatedCrc;
    unsigned long long mCheckCrc;
}

- (long long)totalCompressedBytesConsumed;
- (id)closeLocalStream;
- (void)close;
- (void)enableSystemCaching;
- (void)disableSystemCaching;
- (long long)offset;
- (_Bool)canSeek;
- (void)seekToOffset:(long long)arg1;
- (unsigned long long)readToBuffer:(char *)arg1 size:(unsigned long long)arg2;
- (unsigned long long)readToOwnBuffer:(const char **)arg1 size:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithInput:(id)arg1;
- (id)initWithOffset:(long long)arg1 end:(long long)arg2 uncompressedSize:(unsigned long long)arg3 crc:(unsigned long long)arg4 dataRepresentation:(id)arg5;
- (void)setupInflateStream;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipInputBundle : NSObject <SFUInputBundle>
{
    OISFUZipArchive *_zipArchive;
}

- (void)copyEntry:(id)arg1 toFile:(id)arg2;
- (unsigned int)crc32ForEntry:(id)arg1;
- (long long)lengthOfEntry:(id)arg1;
- (id)bufferedInputStreamForEntry:(id)arg1;
- (id)inputStreamForEntry:(id)arg1;
- (_Bool)hasEntryWithName:(id)arg1;
- (void)dealloc;
- (id)initWithZipArchive:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipOutputEntry : NSObject
{
    NSString *name;
    unsigned long long utf8NameLength;
    _Bool isCompressed;
    _Bool isEncrypted;
    unsigned int time;
    unsigned long long compressedSize;
    unsigned long long uncompressedSize;
    unsigned long long offset;
    unsigned long long compressedDataOffset;
    unsigned int crc;
    _Bool isWrittenDirectlyToFile;
    _Bool is64Bit;
}

- (long long)compareByOffset:(id)arg1;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OISFUZipRecordInputStream : NSObject
{
    id <OISFUBufferedInputStream> mInput;
    const char *mBuffer;
    long long mBufferStart;
    long long mBufferEnd;
}

- (const char *)dataAtOffset:(long long)arg1 size:(unsigned long long)arg2 end:(long long)arg3;
- (void)dealloc;
- (id)initWithDataRepresentation:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSDBezierPath : NSObject <NSCopying, NSCoding>
{
    long long sfr_elementCount;
    long long sfr_elementMax;
    struct PATHSEGMENT *sfr_head;
    double *sfr_elementLength;
    double sfr_totalLength;
    long long sfr_lastSubpathIndex;
    void *sfr_extraSegments;
    double sfr_lineWidth;
    struct CGRect sfr_controlPointBounds;
    double sfr_miterLimit;
    double sfr_flatness;
    double *sfr_dashedLinePattern;
    unsigned long long sfr_dashedLineCount;
    double sfr_dashedLinePhase;
    void *sfr_path;
    long long sfr_extraSegmentCount;
    long long sfr_extraSegmentMax;
    struct {
        unsigned int sfr_flags:8;
        unsigned int sfr_pathState:2;
        unsigned int sfr_calculatedLengths:1;
        unsigned int sfr_unused:21;
    } sfr_bpFlags;
}

+ (double)defaultLineWidth;
+ (void)setDefaultLineWidth:(double)arg1;
+ (unsigned long long)defaultLineJoinStyle;
+ (void)setDefaultLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultLineCapStyle;
+ (void)setDefaultLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)defaultWindingRule;
+ (void)setDefaultWindingRule:(unsigned long long)arg1;
+ (double)defaultFlatness;
+ (void)setDefaultFlatness:(double)arg1;
+ (double)defaultMiterLimit;
+ (void)setDefaultMiterLimit:(double)arg1;
+ (void)strokeLineFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
+ (void)clipRect:(struct CGRect)arg1;
+ (void)strokeRect:(struct CGRect)arg1;
+ (void)fillRect:(struct CGRect)arg1;
+ (id)bezierPathWithCGPath:(struct CGPath *)arg1;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(double)arg2;
+ (id)bezierPathWithOvalInRect:(struct CGRect)arg1;
+ (id)bezierPathWithRect:(struct CGRect)arg1;
+ (id)bezierPathWithStart:(struct CGPoint)arg1 end:(struct CGPoint)arg2;
+ (id)bezierPath;
+ (void)initialize;
+ (double)lineWidth;
+ (void)setLineWidth:(double)arg1;
+ (unsigned long long)lineJoinStyle;
+ (void)setLineJoinStyle:(unsigned long long)arg1;
+ (unsigned long long)lineCapStyle;
+ (void)setLineCapStyle:(unsigned long long)arg1;
+ (unsigned long long)windingRule;
+ (void)setWindingRule:(unsigned long long)arg1;
+ (double)flatness;
+ (void)setFlatness:(double)arg1;
+ (double)miterLimit;
+ (void)setMiterLimit:(double)arg1;
- (id).cxx_construct;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startAngle:(double)arg2 swingAngle:(double)arg3 angleType:(int)arg4 startNewPath:(_Bool)arg5;
- (void)appendBezierPathWithArcWithEllipseBounds:(struct CGRect)arg1 startRadialVector:(struct CGPoint)arg2 endRadialVector:(struct CGPoint)arg3 angleSign:(int)arg4 startNewPath:(_Bool)arg5;
- (id)initWithCString:(const char *)arg1;
- (const char *)cString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)containsPoint:(struct CGPoint)arg1;
- (void)appendBezierPathWithArcFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 radius:(double)arg3;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4;
- (void)appendBezierPathWithArcWithCenter:(struct CGPoint)arg1 radius:(double)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5;
- (void)_appendArcSegmentWithCenter:(struct CGPoint)arg1 radius:(double)arg2 angle1:(double)arg3 angle2:(double)arg4;
- (void)appendBezierPathWithOvalInRect:(struct CGRect)arg1;
- (void)appendBezierPathWithPoints:(struct CGPoint *)arg1 count:(long long)arg2;
- (void)appendBezierPathWithRect:(struct CGRect)arg1;
- (void)appendBezierPath:(id)arg1;
- (void)_appendToPath:(id)arg1;
- (void)setAssociatedPoints:(struct CGPoint *)arg1 atIndex:(long long)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1 allPoints:(struct CGPoint *)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1 associatedPoints:(struct CGPoint *)arg2;
- (unsigned long long)elementAtIndex:(long long)arg1;
- (long long)elementCount;
- (double)lengthToElement:(long long)arg1;
- (double)lengthOfElement:(long long)arg1;
- (double)length;
- (void)calculateLengths;
- (double)calculateLengthOfElement:(long long)arg1;
- (_Bool)isClockwise;
- (_Bool)isFlat;
- (struct CGRect)bounds;
- (struct CGRect)controlPointBounds;
- (struct CGPoint)currentPoint;
- (_Bool)isEmpty;
- (_Bool)isCircular;
- (_Bool)isRectangular;
- (struct CGPath *)cgPath;
- (void)transformUsingAffineTransform:(struct CGAffineTransform)arg1;
- (id)bezierPathByReversingPath;
- (id)_copyFlattenedPath;
- (id)bezierPathByFlatteningPath;
- (void)flattenIntoPath:(id)arg1;
- (void)subdivideBezierWithFlatness:(double)arg1 startPoint:(struct CGPoint)arg2 controlPoint1:(struct CGPoint)arg3 controlPoint2:(struct CGPoint)arg4 endPoint:(struct CGPoint)arg5;
- (void)addClip;
- (void)fill;
- (void)stroke;
- (void)_doPath;
- (void)getLineDash:(double *)arg1 count:(long long *)arg2 phase:(double *)arg3;
- (void)setLineDash:(const double *)arg1 count:(long long)arg2 phase:(double)arg3;
- (void)setFlatness:(double)arg1;
- (double)flatness;
- (void)setMiterLimit:(double)arg1;
- (double)miterLimit;
- (void)setWindingRule:(unsigned long long)arg1;
- (unsigned long long)windingRule;
- (void)setLineJoinStyle:(unsigned long long)arg1;
- (unsigned long long)lineJoinStyle;
- (void)setLineCapStyle:(unsigned long long)arg1;
- (unsigned long long)lineCapStyle;
- (void)setLineWidth:(double)arg1;
- (double)lineWidth;
- (void)relativeCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)relativeLineToPoint:(struct CGPoint)arg1;
- (void)relativeMoveToPoint:(struct CGPoint)arg1;
- (void)removeAllPoints;
- (void)closePath;
- (void)curveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)lineToPoint:(struct CGPoint)arg1;
- (void)moveToPoint:(struct CGPoint)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)_deviceClosePath;
- (void)_deviceCurveToPoint:(struct CGPoint)arg1 controlPoint1:(struct CGPoint)arg2 controlPoint2:(struct CGPoint)arg3;
- (void)_deviceLineToPoint:(struct CGPoint)arg1;
- (void)_deviceMoveToPoint:(struct CGPoint)arg1;
- (void)_addPathSegment:(long long)arg1 point:(struct CGPoint)arg2;
- (id)description;
- (void)attachBezierPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUAggregateEnumerator : NSEnumerator
{
    NSMutableArray *_objects;
}

+ (id)aggregateEnumeratorWithObjects:(id)arg1;
- (id)nextObject;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithObjects:(id)arg1;
- (id)initWithFirstObject:(id)arg1 argumentList:(struct __va_list_tag [1])arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUAssertionHandler : NSAssertionHandler
{
}

+ (id)currentHandler;
+ (id)performBlockIgnoringAssertions:(CDUnknownBlockType)arg1;
+ (void)installAsNSHandler;
+ (void)testCaseStopped:(id)arg1;
+ (void)testCaseStarted:(id)arg1;
- (void)handleFailureWithLocation:(id)arg1 file:(id)arg2 lineNumber:(long long)arg3 description:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
- (void)handleFailureInFunction:(id)arg1 file:(id)arg2 lineNumber:(long long)arg3 description:(id)arg4;
- (void)handleFailureInMethod:(SEL)arg1 object:(id)arg2 file:(id)arg3 lineNumber:(long long)arg4 description:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface OITSUBacktrace : NSObject
{
    void **_callstack;
    int _frames;
    int _initAdjustment;
}

+ (id)callee;
+ (id)caller;
+ (id)new;
+ (id)backtrace;
- (_Bool)isEqual:(id)arg1;
- (id)callee;
- (id)caller;
- (id)callerAtIndex:(long long)arg1;
- (id)backtraceString;
- (void)dealloc;
- (id)init;
- (id)initWithAdjustment:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUProgress : NSObject
{
    NSMutableSet *mProgressObservers;
    NSObject<OS_dispatch_queue> *mProgressObserversQueue;
    NSString *mMessage;
}

@property(copy) NSString *message; // @synthesize message=mMessage;
- (double)protected_minProgressObserverValueInterval;
- (_Bool)protected_hasProgressObservers;
- (void)protected_progressDidChange;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
@property(readonly, getter=isIndeterminate) _Bool indeterminate;
@property(readonly) double maxValue;
@property(readonly) double value;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUBasicProgress : OITSUProgress
{
    OITSUBasicProgressStorage *mStorage;
}

@property(getter=isIndeterminate) _Bool indeterminate;
- (double)maxValue;
@property double value;
- (void)dealloc;
- (id)init;
- (id)initWithMaxValue:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUBasicProgressStorage : NSObject
{
    double mValue;
    double mMaxValue;
    _Bool mIndeterminate;
}

@property(getter=isIndeterminate) _Bool indeterminate; // @synthesize indeterminate=mIndeterminate;
@property double maxValue; // @synthesize maxValue=mMaxValue;
@property double value; // @synthesize value=mValue;

@end

__attribute__((visibility("hidden")))
@interface OITSUBool : NSObject
{
    _Bool _value;
}

@property(nonatomic) _Bool value; // @synthesize value=_value;

@end

__attribute__((visibility("hidden")))
@interface OITSUBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface OITSUCFSetEnumerator : NSObject <NSFastEnumeration>
{
    void *mInlineObjects[16];
    const void **mObjects;
    long long mCount;
    long long mIndex;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)allObjects;
- (id)nextObject;
- (id)initWithCFSet:(struct __CFSet *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OITSUImage : NSObject
{
    struct CGImage *mCachedSliceableImage;
    struct __CFDictionary *mImageSlices;
    long long mImageSliceCacheLock;
    id mCachedSystemImage;
    long long mCachedImageLock;
}

+ (id)imageWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
+ (id)imageWithCGImage:(struct CGImage *)arg1;
+ (id)imageWithData:(id)arg1;
+ (id)imageWithContentsOfFile:(id)arg1;
+ (id)imageNamed:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)imageWithUIImage:(id)arg1;
+ (id)noisePatternWithWidth:(unsigned long long)arg1 height:(unsigned long long)arg2 factor:(double)arg3;
- (void)drawInRect:(struct CGRect)arg1 context:(struct CGContext *)arg2 stretchingCenterWidthBy:(double)arg3;
- (struct CGImage *)CGImageForContentsScale:(double)arg1;
- (id)stretchedImageOfSize:(struct CGSize)arg1 leftCapWidth:(double)arg2 rightCapWidth:(double)arg3 topCapHeight:(double)arg4 bottomCapHeight:(double)arg5;
- (id)PNGRepresentation;
- (id)JPEGRepresentationWithCompressionQuality:(double)arg1;
- (id)TIFFRepresentation;
- (id)imagePartsWithLeftCapWidth:(double)arg1 rightCapWidth:(double)arg2 topCapHeight:(double)arg3 bottomCapHeight:(double)arg4;
- (_Bool)isEmpty;
@property(readonly, nonatomic) long long imageOrientation;
@property(readonly, nonatomic) struct CGImage *CGImage;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1;
- (void)dealloc;
@property(readonly, nonatomic) double scale;
@property(readonly, nonatomic) struct CGSize size;
- (id)initWithImageSourceRef:(struct CGImageSource *)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
- (id)initWithCGImage:(struct CGImage *)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
@property(readonly, nonatomic) UIImage *UIImage;
- (id)initWithUIImage:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 isFlipped:(_Bool)arg3;

@end

__attribute__((visibility("hidden")))
@interface OITSUCGImage : OITSUImage
{
    struct CGImage *mCGImage;
    long long mOrientation;
    double mScale;
}

- (void)dealloc;
- (long long)imageOrientation;
- (double)scale;
- (struct CGSize)size;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1;
- (struct CGImage *)CGImage;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;

@end

__attribute__((visibility("hidden")))
@interface OITSUFlushableObject : NSObject <TSUFlushable>
{
    int _retainCount;
    int _ownerCount;
    OITSUFlushingManager *_flushingManager;
    NSObject<NSLocking> *_flushingManagerIvarLock;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)flush;
- (_Bool)hasFlushableContent;
- (void)unload;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (void)ownerDidAccess;
- (void)ownerWillAccess;
- (id)ownerAutoreleasedAccess;
- (void)ownerRelease;
- (id)ownerRetain;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OITSUCache : OITSUFlushableObject
{
    NSString *mCacheName;
    NSMutableDictionary *mCache;
}

- (id)description;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)hasFlushableContent;
- (void)unload;
- (void)dealloc;
- (id)init;
- (id)initWithName:(id)arg1;
- (id)p_objectsForKeys:(id)arg1 notFoundMarker:(id)arg2;
- (void)p_addEntriesFromDictionary:(id)arg1;
- (id)p_objectForKey:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUChunkedString : NSMutableString
{
    unsigned long long _length;
    struct vector<boost::shared_ptr<TSUStringChunk>, std::__1::allocator<boost::shared_ptr<TSUStringChunk>>> _chunks;
    unsigned long long _chunkLength;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)compact;
- (void)appendString:(id)arg1;
- (void)deleteCharactersInRange:(struct _NSRange)arg1;
- (void)insertString:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)dealloc;
- (id)init;
- (id)initWithChunkLength:(unsigned long long)arg1;
- (void)p_compactChunksInRange:(struct _NSRange)arg1;
- (void)p_deleteCharactersInRange:(struct _NSRange)arg1 chunkIndex:(unsigned long long)arg2;
- (void)p_insertCharactersInRange:(struct _NSRange)arg1 fromString:(id)arg2 atIndex:(unsigned long long)arg3 chunkIndex:(unsigned long long)arg4;
- (void)p_appendRange:(struct _NSRange)arg1 fromString:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUColor : NSObject <NSCopying>
{
    struct CGColor *mCGColor;
}

+ (id)brownColor;
+ (id)purpleColor;
+ (id)orangeColor;
+ (id)magentaColor;
+ (id)yellowColor;
+ (id)cyanColor;
+ (id)blueColor;
+ (id)greenColor;
+ (id)redColor;
+ (id)lightGrayColor;
+ (id)grayColor;
+ (id)whiteColor;
+ (id)blackColor;
+ (id)clearColor;
+ (id)randomColor;
+ (id)colorWithUIColor:(id)arg1;
+ (id)colorWithPatternImage:(id)arg1;
+ (id)colorWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)colorWithWhite:(double)arg1 alpha:(double)arg2;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithCGColor:(struct CGColor *)arg1;
+ (id)stringForColor:(id)arg1;
+ (id)stringForSystemColorID:(int)arg1;
+ (id)colorWithSystemColorID:(int)arg1;
+ (id)colorWithBGR:(unsigned int)arg1;
+ (id)colorWithCalibratedHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
+ (id)colorWithCalibratedRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
+ (id)colorWithBinaryRed:(int)arg1 green:(int)arg2 blue:(int)arg3 alpha:(int)arg4;
+ (id)colorWithBinaryRed:(int)arg1 green:(int)arg2 blue:(int)arg3;
+ (id)colorWithEshColor:(const struct EshColor *)arg1;
+ (id)colorWithCsColour:(const struct CsColour *)arg1;
+ (id)colorWithRGBBytes:(unsigned char)arg1:(unsigned char)arg2:(unsigned char)arg3;
+ (id)colorWithRGBValue:(long long)arg1;
+ (id)colorWithBGRValue:(long long)arg1;
@property(readonly) struct CGColor *CGColor; // @synthesize CGColor=mCGColor;
- (void)paintPath:(struct CGPath *)arg1 inContext:(struct CGContext *)arg2;
- (void)paintRect:(struct CGRect)arg1 inContext:(struct CGContext *)arg2;
- (id)newBlendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (id)blendedColorWithFraction:(double)arg1 ofColor:(id)arg2;
- (_Bool)isNearlyWhite;
- (_Bool)isOpaque;
- (double)luminance;
- (id)colorWithAlphaComponent:(double)arg1;
- (id)invertedColor;
- (id)grayscaleColor;
- (id)UIColor;
- (void)getRGBAComponents:(double *)arg1;
- (double)alphaComponent;
- (double)blueComponent;
- (double)greenComponent;
- (double)redComponent;
- (double)p_rgbComponentWithIndex:(unsigned char)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isAlmostEqualToColor:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithUIColor:(id)arg1;
- (id)initWithPatternImage:(id)arg1;
- (id)initWithHue:(double)arg1 saturation:(double)arg2 brightness:(double)arg3 alpha:(double)arg4;
- (id)initWithWhite:(double)arg1 alpha:(double)arg2;
- (id)initWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
- (id)initWithCGColor:(struct CGColor *)arg1;
- (_Bool)isBlack;
- (void)set;
- (id)colorWithShadeValue:(double)arg1;
- (id)colorWithTintValue:(double)arg1;
- (unsigned int)toBGR;
- (id)copy;
- (id)solidColoredPngImage;
- (id)newSolidColoredBitmap:(struct CGSize)arg1;
- (CDStruct_a06f635e)ttColor;
- (struct EshColor)eshColor;
- (struct CsColour)csColour;
- (void)getRGBBytes:(char *)arg1:(char *)arg2:(char *)arg3;

@end

__attribute__((visibility("hidden")))
@interface OITSUConcurrentCache : OITSUCache
{
    OITSUReadWriteQueue *mReadWriteQueue;
}

@property(readonly, nonatomic) OITSUReadWriteQueue *readWriteQueue; // @synthesize readWriteQueue=mReadWriteQueue;
- (id)objectsForKeys:(id)arg1 notFoundMarker:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1;
- (_Bool)hasFlushableContent;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)removeObjectForKey:(id)arg1 andWait:(_Bool)arg2;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)unload;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUCustomCallBackDictionary : NSMutableDictionary
{
    struct __CFDictionary *mDictionary;
}

- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)keyEnumerator;
- (id)allKeys;
- (id)objectEnumerator;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (unsigned long long)count;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forUncopiedKey:(id)arg2;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1 keyCallBacks:(const CDStruct_90be15af *)arg2 valueCallBacks:(const CDStruct_70d275a4 *)arg3;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithCFDictionary:(struct __CFDictionary *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUCustomFormatWrapper : NSObject
{
    struct TSUCustomFormat *mCustomFormat;
}

- (const CDStruct_b87b2d04 *)conditionalFormatDataForValue:(double)arg1;
- (const CDStruct_b87b2d04 *)defaultFormatData;
- (int)formatType;
- (id)formatName;
- (const struct TSUCustomFormat *)pointerToTSUCustomFormat;
- (id)initWithCustomFormat:(struct TSUCustomFormat *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateFormat : NSObject <NSCopying, TSUDataFormat>
{
    NSString *mFormat;
    NSString *mName;
}

+ (id)formatWithFormat:(id)arg1 name:(id)arg2;
- (void)setFormatName:(id)arg1;
- (id)formatName;
- (id)format;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFormat:(id)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateFormatCategory : NSObject
{
    struct __CFDateFormatter *mInitialFormatter;
    NSMutableArray *mEntries;
}

- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 forceAllowAMPM:(_Bool)arg2 successfulFormatString:(const struct __CFString **)arg3 perfect:(_Bool *)arg4;
- (id)entryForSeparator:(unsigned short)arg1;
- (void)addSeparator:(unsigned short)arg1 format:(id)arg2 locale:(struct __CFLocale *)arg3;
- (void)dealloc;
- (id)initWithInitialPattern:(id)arg1 locale:(struct __CFLocale *)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateFormatCategoryEntry : NSObject
{
    unsigned short mSeparator;
    struct __CFArray *mFormatters;
    NSMutableSet *mFormatStrings;
}

- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 forceAllowAMPM:(_Bool)arg2 successfulFormatString:(const struct __CFString **)arg3 perfect:(_Bool *)arg4;
- (void)addFormat:(id)arg1 locale:(struct __CFLocale *)arg2;
- (unsigned short)separator;
- (void)dealloc;
- (id)initWithSeparator:(unsigned short)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateFormatter : NSObject
{
    NSString *mDateOnlyFormatString;
    NSString *mTimeOnlyFormatString;
    struct __CFDateFormatter *mFullDateFormatter;
}

+ (id)shortMonthNamesForNonCachedCurrentLocale;
+ (id)timePortionOfDateTimeFormatString:(id)arg1;
+ (id)datePortionOfDateTimeFormatString:(id)arg1;
+ (unsigned long long)p_DateTimeSplitLocationInFormatString:(id)arg1;
+ (id)dateFormatStringSpecialSymbols;
+ (id)supportedTimeFormats;
+ (id)supportedDateFormats;
+ (id)defaultDateTimeFormat;
- (void)dealloc;
- (id)init;
- (id)stringFromDate:(id)arg1 format:(id)arg2;
- (id)appropriateOutputFormatStringForInputFormatString:(id)arg1;
- (id)fullDateString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateFormatter_NSFormatter : NSFormatter
{
    NSString *mPreferredFormat;
    _Bool isDateOnly;
    _Bool isTimeOnly;
}

@property(nonatomic) _Bool isTimeOnly; // @synthesize isTimeOnly;
@property(nonatomic) _Bool isDateOnly; // @synthesize isDateOnly;
@property(retain, nonatomic) NSString *preferredFormat; // @synthesize preferredFormat=mPreferredFormat;
- (id)stringForObjectValue:(id)arg1;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateParser : NSObject
{
    NSMutableArray *mFormatCategories;
    struct __CFLocale *mLocale;
    _Bool mIsJapaneseLocale;
    struct __CFDateFormatter *mSpecialCaseFormatter;
}

+ (id)parserForDefaultLocale;
- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 successfulFormatString:(const struct __CFString **)arg2;
- (struct __CFDate *)newDateFromString:(struct __CFString *)arg1 preferredFormatString:(struct __CFString *)arg2 successfulFormatString:(const struct __CFString **)arg3 tryAggressiveFormats:(_Bool)arg4;
- (struct __CFDate *)newDateFromStringTryingFormats:(struct __CFString *)arg1 locale:(struct __CFLocale *)arg2 formats:(id)arg3 outSuccessfulFormatString:(const struct __CFString **)arg4;
- (struct __CFDateFormatter *)specialCaseDateFormatterForLocale:(struct __CFLocale *)arg1;
- (void)dealloc;
- (id)initWithLocale:(struct __CFLocale *)arg1;
- (void)datePreferencesChanged:(id)arg1;
- (void)parseFormat:(id)arg1 initialPattern:(id *)arg2 separator:(unsigned short *)arg3;
- (void)addFormat:(id)arg1 locale:(struct __CFLocale *)arg2 formatCategoryMap:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OITSUDateParserLibrary : NSObject
{
    unsigned long long mMaxPermittedParsers;
    unsigned long long mNumberOfUses;
    unsigned long long mParsersCreated;
    NSMutableArray *mAvailableDateParsers;
    NSCondition *mParserLibraryConditionVariable;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedDateParserLibrary;
+ (id)_singletonAlloc;
- (void)returnDateParser:(id)arg1;
- (id)checkoutDateParser;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface OITSUDeferredInvocationQueue : NSObject
{
    NSMutableArray *_invocations;
    id _target;
}

- (void)performInvocations;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (id)prepareWithInvocationTarget:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OITSUDescription : NSObject
{
    NSObject *_object;
    Class _class;
    void *_cfType;
    NSString *_header;
    NSMutableDictionary *_fields;
    NSMutableArray *_fieldOrder;
    unsigned long long _fieldNameWidth;
    _Bool _commaSeparated;
}

+ (id)descriptionWithObject:(id)arg1;
+ (id)descriptionWithCFType:(void *)arg1 format:(id)arg2;
+ (id)descriptionWithObject:(id)arg1 class:(Class)arg2;
+ (id)descriptionWithObject:(id)arg1 format:(id)arg2;
+ (id)descriptionWithObject:(id)arg1 class:(Class)arg2 format:(id)arg3;
- (id)descriptionString;
- (void)setFieldOptionCommaSeparated;
- (void)addSuperDescription;
- (void)addFieldValue:(id)arg1;
- (void)addFieldWithFormat:(id)arg1;
- (void)addField:(id)arg1 format:(id)arg2;
- (void)addField:(id)arg1 value:(id)arg2;
- (id)p_header;
- (void)dealloc;
- (id)initWithObject:(id)arg1;
- (id)initWithObject:(id)arg1 format:(id)arg2;
- (id)initWithObject:(id)arg1 class:(Class)arg2 format:(id)arg3;
- (id)initWithObject:(id)arg1 class:(Class)arg2 format:(id)arg3 arguments:(struct __va_list_tag [1])arg4;
- (id)initWithCFType:(void *)arg1 header:(id)arg2;
- (id)initWithObject:(id)arg1 class:(Class)arg2 header:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface OITSUDuration : NSObject <NSCopying>
{
    double mTimeInterval;
}

+ (id)durationWithTimeInterval:(double)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (double)timeInterval;
- (id)initWithTimeInterval:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUDurationFormat : NSObject <NSCopying, TSUDataFormat>
{
    NSString *mFormat;
    NSString *mName;
}

+ (id)formatWithFormat:(id)arg1 name:(id)arg2;
- (void)setFormatName:(id)arg1;
- (id)formatName;
- (id)format;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFormat:(id)arg1 name:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OITSUDurationFormatter : NSFormatter
{
    NSString *mFormat;
    int mCompactStyleStartUnit;
}

@property(nonatomic) int compactStyleStartUnit; // @synthesize compactStyleStartUnit=mCompactStyleStartUnit;
@property(copy, nonatomic) NSString *format; // @synthesize format=mFormat;
- (_Bool)getObjectValue:(out id *)arg1 forString:(id)arg2 errorDescription:(out id *)arg3;
- (id)stringForObjectValue:(id)arg1;
- (void)dealloc;
- (void)p_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUFastReadInvalidatingCache : NSObject
{
    CDUnknownBlockType mGenerator;
    id mValue;
    long long mReaderCount;
    NSArray *mToDispose;
    _Bool mReentrant;
    NSCondition *mCondition;
    _Bool mIsGenerating;
}

- (void)invalidate;
- (id)value;
- (void)p_setValue:(id)arg1;
- (void)dealloc;
- (id)initForReentrant:(_Bool)arg1 withGenerator:(CDUnknownBlockType)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUFlushableCachedImage : OITSUFlushableObject
{
    struct CGImage *_image;
    id _delegate;
    SEL _delegateCreateImageSelector;
}

- (struct CGImage *)newImage;
- (_Bool)hasFlushableContent;
- (void)unload;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 createImageSelector:(SEL)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUFlushingManager : NSObject
{
    OITSURetainedPointerKeyDictionary *_objects;
    struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerFlushingOrderLess, std::__1::allocator<TSUFlushableObjectInfo *>> *_sortedObjects;
    struct set<TSUFlushableObjectInfo *, TSUFlushableObjectInfoPointerTimeStampLess, std::__1::allocator<TSUFlushableObjectInfo *>> *_sortedNewObjects;
    OITSUPointerKeyDictionary *_inactiveObjects;
    unsigned int _clock;
    _Bool _alwaysFlushing;
    _Bool _stopFlushing;
    _Bool _stopFlushingWhenQueueEmpty;
    _Bool _isFlushing;
    id <TSUFlushable> _flushingObject;
    NSCondition *_cond;
    NSCondition *_isFlushingCond;
    OITSUMemoryWatcher *_memoryWatcher;
    NSThread *_bgThread;
    unsigned long long _backgroundTransitionTaskId;
    unsigned long long _activeBgThreadTask;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
+ (id)_singletonAlloc;
- (void)_bgThreadInactive;
- (void)_bgThreadActive;
- (void)_bgTaskFinished;
- (void)_bgTaskStarted;
- (void)_didUseObject:(id)arg1;
- (_Bool)controlsInactiveObject:(id)arg1;
- (_Bool)controlsActiveObject:(id)arg1;
- (void)advanceClock;
- (void)transferNewObjects;
- (void)insertObjectInfo:(struct TSUFlushableObjectInfo *)arg1;
- (struct TSUFlushableObjectInfo *)eraseInfoForObject:(id)arg1;
- (_Bool)isNewObject:(struct TSUFlushableObjectInfo *)arg1;
- (void)_backgroundThread:(id)arg1;
- (void)_stopFlushingObjects;
- (void)_startFlushingObjects;
- (void)_flushAllEligible;
- (void)memoryLevelDecreased:(int)arg1 was:(int)arg2;
- (void)memoryLevelIncreased:(int)arg1 was:(int)arg2;
- (void)didReceiveMemoryWarning;
- (void)willEnterForeground;
- (void)didEnterBackground;
- (void)safeToFlush:(id)arg1 wasAccessed:(_Bool)arg2;
- (void)unsafeToFlush:(id)arg1;
- (void)doneWithObject:(id)arg1;
- (void)stopProtectingObject:(id)arg1;
- (void)protectObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface OITSUFormatReferenceObject : NSObject <NSCopying, NSMutableCopying>
{
    CDStruct_bfed0e84 mFormatStruct;
    _Bool mUseExpandedContents;
}

+ (id)defaultDurationFormat;
+ (id)defaultDateFormat;
@property(readonly, nonatomic) _Bool useExpandedContents; // @synthesize useExpandedContents=mUseExpandedContents;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)p_setFormatStruct:(CDStruct_bfed0e84)arg1;
@property(readonly, nonatomic) CDStruct_bfed0e84 formatStruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithTSUFormatFormatStruct:(CDStruct_bfed0e84)arg1;
- (id)initWithTSUFormatFormatStruct:(CDStruct_bfed0e84)arg1 useExpandedContents:(_Bool)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUHTMLLog : NSObject
{
    NSString *_path;
    NSString *_title;
    NSString *_stylesheet;
    NSString *_script;
    NSFileHandle *_handle;
    _Bool _logStarted;
    unsigned long long _uniquifier;
    unsigned long long _tableRow;
}

@property(copy, nonatomic) NSString *script; // @synthesize script=_script;
@property(copy, nonatomic) NSString *stylesheet; // @synthesize stylesheet=_stylesheet;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *path; // @synthesize path=_path;
- (void)openInBrowser;
- (void)logEnd;
- (void)logBegin;
- (void)clear;
- (void)close;
- (void)writeText:(id)arg1;
- (void)writeMarkup:(id)arg1;
- (void)_writeMarkupData:(id)arg1;
- (id)uniqueIdentifierWithPrefix:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUHTMLTable : NSObject
{
    NSMutableDictionary *_columnAttributes;
    NSMutableDictionary *_rowClasses;
    NSMutableDictionary *_cellAttributes;
    NSMutableArray *_columnHeaders;
    NSMutableArray *_rows;
    unsigned long long _rowClassStride;
}

+ (id)_attributesStringFromAttributes:(id)arg1;
+ (id)_keyForCell:(unsigned long long)arg1:(unsigned long long)arg2;
+ (id)htmlTable;
@property(nonatomic) unsigned long long rowClassStride; // @synthesize rowClassStride=_rowClassStride;
- (void)deleteColumnWithTitle:(id)arg1;
- (unsigned long long)indexOfColumnWithTitle:(id)arg1;
- (void)enumerateRowsUsingBlock:(CDUnknownBlockType)arg1;
- (void)setCellAttributes:(id)arg1 rowIndex:(unsigned long long)arg2 columnIndex:(unsigned long long)arg3;
- (void)setCellMarkup:(id)arg1 atRowIndex:(unsigned long long)arg2 columnIndex:(unsigned long long)arg3;
- (void)setClass:(id)arg1 ofColumnIndex:(unsigned long long)arg2;
- (void)setColumnHeaders:(id)arg1;
- (void)setRowClass:(id)arg1 atRowIndex:(unsigned long long)arg2;
- (void)setColumnClasses:(id)arg1;
- (void)addRowWithCellText:(id)arg1;
- (void)addRowWithCellMarkup:(id)arg1;
- (id)markup;
@property(readonly, nonatomic) unsigned long long lastRowIndex;
@property(readonly, nonatomic) unsigned long long count;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUIndexedStringStore : NSObject
{
    int _lock;
    NSMutableDictionary *_indexByString;
    NSMutableArray *_stringByIndex;
}

- (unsigned long long)count;
- (id)stringForIndex:(unsigned long long)arg1;
- (unsigned long long)indexForString:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUIntDictionary : OITSUNoCopyDictionary
{
}

- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUIntToIntDictionaryKeyEnumerator : NSObject
{
    long long **_keys;
    unsigned long long _count;
    unsigned long long _index;
}

- (long long)nextKey;
- (void)dealloc;
- (id)initWithIntegerKeyDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUIntegerKeyDictionary : NSObject <NSCopying, NSMutableCopying>
{
    struct __CFDictionary *mDictionary;
}

- (struct __CFDictionary *)p_cfDictionary;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)valueEnumerator;
- (id)allValues;
- (id)keyEnumerator;
- (void)removeAllObjects;
- (void)setObject:(id)arg1 forKey:(long long)arg2;
- (void)removeObjectForKey:(long long)arg1;
- (id)objectForKey:(long long)arg1;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUIntegerKeyDictionaryKeyEnumerator : NSObject
{
    long long **_keys;
    unsigned long long _count;
    unsigned long long _index;
}

- (long long)nextKey;
- (void)dealloc;
- (id)initWithIntegerKeyDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUKeychainUtils : NSObject
{
}

+ (_Bool)removeGenericItem:(id)arg1 error:(id *)arg2;
+ (_Bool)lookupGenericItem:(id)arg1 account:(id *)arg2 passphrase:(id *)arg3 error:(id *)arg4;
+ (_Bool)lookupGenericItem:(id)arg1 passphrase:(id *)arg2 error:(id *)arg3;
+ (_Bool)setPassphrase:(id)arg1 forGenericItem:(id)arg2 service:(id)arg3 description:(id)arg4 label:(id)arg5 account:(id)arg6 error:(id *)arg7;
+ (_Bool)setPassphrase:(id)arg1 forGenericItem:(id)arg2 service:(id)arg3 description:(id)arg4 label:(id)arg5 error:(id *)arg6;

@end

__attribute__((visibility("hidden")))
@interface OITSULRUCache : NSObject
{
    OITSUNoCopyDictionary *mData;
    NSMutableArray *mOrderedKeys;
    unsigned long long mMax;
    id mCallbackTarget;
    SEL mCallback;
}

@property(readonly, nonatomic) unsigned long long maxSize; // @synthesize maxSize=mMax;
- (void)p_removeOldestObject;
- (void)clearEvictionCallbackTarget;
- (void)setEvictionCallbackTarget:(id)arg1 selector:(SEL)arg2;
- (id)allKeys;
- (id)allValues;
- (id)objectForKey:(id)arg1;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)initWithMaxSize:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSULinkedPointerSetEntry : NSObject
{
    id mObject;
    OITSULinkedPointerSetEntry *mPrevious;
    OITSULinkedPointerSetEntry *mNext;
}

- (void)dealloc;
- (id)initWithObject:(id)arg1 previousEntry:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSULinkedPointerSetEnumerator : NSEnumerator
{
    OITSULinkedPointerSetEntry *mHead;
    OITSULinkedPointerSetEntry *mLastUsed;
}

- (id)nextObject;
- (id)initWithFirstEntry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSULinkedPointerSetReverseEnumerator : NSEnumerator
{
    OITSULinkedPointerSetEntry *mTail;
    OITSULinkedPointerSetEntry *mLastUsed;
}

- (id)nextObject;
- (id)initWithLastEntry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUMemoryWatcher : NSObject
{
    OITSUFlushingManager *_flushingManager;
    _Bool _going;
    _Bool _stop;
    int _warningRsizeMb;
    int _urgentRsizeMb;
}

- (void)_simulateMemoryWarning:(id)arg1;
- (void)_periodicallySimulateMemoryWarning:(id)arg1;
- (void)stopObserving;
- (void)beginObserving;
- (void)dealloc;
- (id)initWithFlushingManager:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutableFormatReferenceObject : OITSUFormatReferenceObject
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) CDStruct_bfed0e84 formatStruct;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutableLinkedPointerSet : NSObject <NSFastEnumeration>
{
    struct __CFDictionary *mDictionary;
    OITSULinkedPointerSetEntry *mHead;
    OITSULinkedPointerSetEntry *mTail;
}

- (id)array;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)insertFirstObject:(id)arg1;
- (void)addObject:(id)arg1;
- (_Bool)hasObjects;
- (_Bool)containsObject:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)firstObject;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumeratorAfterObject:(id)arg1;
- (id)reverseObjectEnumerator;
- (id)objectEnumerator;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUNumberFormat : NSObject <TSUNumberFormatting, NSCopying, NSMutableCopying>
{
    int mValueType;
    NSString *mFormatString;
    unsigned short mDecimalPlaces;
    NSString *mCurrencyCode;
    _Bool mUseAccountingStyle;
    int mNegativeStyle;
    _Bool mShowThousandsSeparator;
    int mFractionAccuracy;
    _Bool mFormatStringRequiresSuppressionOfMinusSign;
    _Bool mUseScientificFormattingAutomatically;
    _Bool mIgnoreDecimalPlacesForZeroValue;
    NSString *mPrefixString;
    NSString *mSuffixString;
    unsigned char mBase;
    unsigned short mBasePlaces;
    _Bool mBaseUseMinusSign;
    _Bool mIsCustom;
    double mScaleFactor;
    _Bool mFormatStringContainsTabCharacter;
    _Bool mFormatContainsSpecialTokens;
    _Bool mFormatContainsIntegerToken;
    unsigned char mNumberOfHashDecimalPlaceholders;
    unsigned char mTotalNumberOfDecimalPlaceholdersInFormat;
    _Bool mRequiresFractionReplacement;
    NSArray *mInterstitialStrings;
    NSIndexSet *mInterstitialStringInsertionIndexes;
    unsigned short mIndexFromRightOfLastDigitPlaceholder;
    _Bool mIsTextFormat;
    unsigned char mMinimumIntegerWidth;
    unsigned char mDecimalWidth;
    unsigned char mNumberOfNonSpaceIntegerPlaceholderDigits;
    unsigned char mNumberOfNonSpaceDecimalPlaceholderDigits;
    NSString *mFormatName;
}

+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 prefixString:(id)arg9 suffixString:(id)arg10 scaleFactor:(double)arg11 base:(unsigned char)arg12 basePlaces:(unsigned short)arg13 baseUseMinusSign:(_Bool)arg14 isCustom:(_Bool)arg15 formatName:(id)arg16;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 scaleFactor:(double)arg9 isCustom:(_Bool)arg10 formatName:(id)arg11;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 base:(unsigned char)arg9 basePlaces:(unsigned short)arg10 baseUseMinusSign:(_Bool)arg11;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 suffixString:(id)arg9;
+ (id)numberFormatWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)customNumberFormatTokens;
- (_Bool)isEquivalent:(id)arg1;
- (id)stringFromString:(id)arg1;
- (id)stringFromDouble:(double)arg1 decimalPlaces:(unsigned short)arg2 minimumDecimalPlaces:(unsigned short)arg3 forceSuppressMinusSign:(_Bool)arg4;
- (id)stringFromDouble:(double)arg1 decimalPlaces:(unsigned short)arg2 minimumDecimalPlaces:(unsigned short)arg3;
- (id)stringFromDouble:(double)arg1 minimumDecimalPlaces:(unsigned short)arg2;
- (id)stringFromDouble:(double)arg1 minimumDecimalPlaces:(unsigned short)arg2 forceSuppressMinusSign:(_Bool)arg3;
- (id)stringFromDouble:(double)arg1;
- (id)stringFromDouble:(double)arg1 forceSuppressMinusSign:(_Bool)arg2;
- (id)chartLabelStringFromDouble:(double)arg1 forceSuppressMinusSign:(_Bool)arg2;
- (id)chartLabelStringFromDouble:(double)arg1;
- (id)chartLabelStringNofixFromDouble:(double)arg1;
- (_Bool)requiresParensToBeReplacedWithSpacesForDouble:(double)arg1;
- (_Bool)usesTabs;
- (void)setIgnoreDecimalPlacesForZeroValue:(_Bool)arg1;
- (_Bool)ignoreDecimalPlacesForZeroValue;
- (void)setUseScientificFormattingAutomatically:(_Bool)arg1;
- (_Bool)useScientificFormattingAutomatically;
- (_Bool)customFormatShouldAutoInsertPercentSymbol;
- (_Bool)hasValidDecimalPlaces;
- (_Bool)baseUseMinusSign;
- (unsigned short)basePlaces;
- (unsigned short)base;
- (_Bool)usesTextFormatForValue:(double)arg1;
- (_Bool)canFormatText;
- (_Bool)isTextFormat;
- (double)scaleFactor;
- (_Bool)usesAccountingStyle;
- (int)fractionAccuracy;
- (_Bool)showThousandsSeparator;
- (int)negativeStyle;
- (id)currencyCode;
- (id)formatString;
- (id)suffixString;
- (id)prefixString;
- (unsigned short)decimalPlaces;
- (int)valueType;
- (_Bool)isCustom;
- (id)formatName;
- (void)setFormatName:(id)arg1;
- (void)dealloc;
- (id)numberFormatBySettingBaseRepresentNegativeWithMinus:(_Bool)arg1;
- (id)numberFormatBySettingBasePlaces:(unsigned short)arg1;
- (id)numberFormatBySettingBase:(unsigned char)arg1;
- (id)numberFormatBySettingUseAccountingStyle:(_Bool)arg1;
- (id)numberFormatBySettingFractionAccuracy:(int)arg1;
- (id)numberFormatBySettingShowThousandsSeparator:(_Bool)arg1;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1 andNegativeStyle:(int)arg2;
- (id)numberFormatBySettingNegativeStyle:(int)arg1;
- (id)numberFormatBySettingCurrencyCode:(id)arg1;
- (id)numberFormatByIncrementingDecimalPlaces:(short)arg1;
- (id)numberFormatBySettingSuffixString:(id)arg1;
- (id)numberFormatBySettingPrefixString:(id)arg1;
- (id)numberFormatBySettingDecimalPlaces:(unsigned short)arg1;
- (id)numberFormatBySettingValueType:(int)arg1;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 prefixString:(id)arg9 suffixString:(id)arg10 scaleFactor:(double)arg11 base:(unsigned char)arg12 basePlaces:(unsigned short)arg13 baseUseMinusSign:(_Bool)arg14 isCustom:(_Bool)arg15 interstitialStrings:(id)arg16 interstitialStringInsertionIndexes:(id)arg17 indexFromRightOfLastDigitPlaceholder:(unsigned short)arg18 minimumIntegerWidth:(unsigned char)arg19 decimalWidth:(unsigned char)arg20 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)arg21 numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)arg22 isTextFormat:(_Bool)arg23 formatName:(id)arg24;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 suffixString:(id)arg9;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8 base:(unsigned char)arg9 basePlaces:(unsigned short)arg10 baseUseMinusSign:(_Bool)arg11;
- (id)initWithValueType:(int)arg1 formatString:(id)arg2 decimalPlaces:(unsigned short)arg3 currencyCode:(id)arg4 useAccountingStyle:(_Bool)arg5 negativeStyle:(int)arg6 showThousandsSeparator:(_Bool)arg7 fractionAccuracy:(int)arg8;
- (id)initCustomFormatWithFormatString:(id)arg1 currencyCode:(id)arg2 showThousandsSeparator:(_Bool)arg3 fractionAccuracy:(int)arg4 scaleFactor:(double)arg5 interstitialStrings:(id)arg6 interstitialStringInsertionIndexes:(id)arg7 indexFromRightOfLastDigitPlaceholder:(unsigned short)arg8 minimumIntegerWidth:(unsigned char)arg9 decimalWidth:(unsigned char)arg10 numberOfNonSpaceIntegerPlaceholderDigits:(unsigned char)arg11 numberOfNonSpaceDecimalPlaceholderDigits:(unsigned char)arg12 isTextFormat:(_Bool)arg13 formatName:(id)arg14;
- (id)init;
- (id)baseStringFromDouble:(double)arg1;
- (id)fractionStringFromDouble:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutableNumberFormat : OITSUNumberFormat
{
}

- (void)setNilValueForKey:(id)arg1;
- (void)setBasePlaces:(unsigned short)arg1;
- (void)setBase:(unsigned char)arg1;
- (void)setUseAccountingStyle:(_Bool)arg1;
- (void)setFractionAccuracy:(int)arg1;
- (void)setShowThousandsSeparator:(_Bool)arg1;
- (void)setNegativeStyle:(int)arg1;
- (void)setCurrencyCode:(id)arg1;
- (void)setSuffixString:(id)arg1;
- (void)setPrefixString:(id)arg1;
- (void)setDecimalPlaces:(unsigned short)arg1;
- (void)setValueType:(int)arg1;
- (void)p_copyIVarsFromNumberFormat:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUPair : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    id mFirst;
    id mSecond;
}

+ (id)pair;
+ (id)pairWithPair:(id)arg1;
+ (id)pairWithFirst:(id)arg1 second:(id)arg2;
- (void)p_SetSecond:(id)arg1;
- (void)p_SetFirst:(id)arg1;
- (id)second;
- (id)first;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithPair:(id)arg1;
- (id)initWithFirst:(id)arg1 second:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutablePair : OITSUPair
{
}

- (void)setSecond:(id)arg1;
- (void)setFirst:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutablePointerSet : NSMutableSet
{
    struct __CFSet *mSet;
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)setByAddingObjectsFromArray:(id)arg1;
- (id)setByAddingObjectsFromSet:(id)arg1;
- (id)setByAddingObject:(id)arg1;
- (id)allObjects;
- (void)getObjects:(id *)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCFSet:(struct __CFSet *)arg1;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutableRetainedPointerSet : OITSUMutablePointerSet
{
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)allObjects;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUShallowCopyPair : OITSUPair
{
}

- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUMutableShallowCopyPair : OITSUShallowCopyPair
{
}

- (void)setSecond:(id)arg1;
- (void)setFirst:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUNumberFormatter : NSObject
{
    struct __CFLocale *mLocale;
    struct __CFArray *mDecimalFormatters;
    struct __CFArray *mCurrencyFormatters;
    struct __CFArray *mPercentageFormatters;
    struct __CFArray *mScientificFormatters;
    struct __CFNumberFormatter *mFractionFormatter;
    NSMutableDictionary *mCurrencyCodeToSymbolMap;
    NSMutableDictionary *mCurrencyCodeToHalfWidthSymbolMap;
    NSString *mCurrencyString;
    NSString *mPercentageString;
    NSString *mScientificString;
    NSString *mDecimalString;
    NSString *mPercentSymbol;
    NSMutableArray *mTransformedDecimalStrings;
    NSMutableArray *mTransformedCurrencyStrings;
    NSMutableArray *mTransformedPercentageStrings;
    NSMutableArray *mTransformedScientificStrings;
    struct __CFString *mAdditionalCurrencyCode;
    struct __CFArray *mAdditionalCurrencyCodeFormatters;
}

+ (id)userVisibleCurrencyCodes;
+ (id)localizedPercentSymbol;
+ (id)defaultFormatStringForValueType:(int)arg1;
+ (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(int)arg2;
+ (id)numberFormatStringSpecialSymbols;
+ (id)currentLocaleListSeparator;
+ (id)currentNonCachedLocaleDecimalSeparator;
+ (id)currentLocaleDecimalSeparator;
+ (id)currentNonCachedLocaleCurrencyCode;
+ (id)currentLocaleCurrencyCode;
+ (unsigned short)defaultDecimalPlacesForCurrencyCode:(id)arg1;
+ (id)currencySymbolForCurrencyCode:(id)arg1;
+ (id)displayNameForCurrencyCode:(id)arg1;
+ (id)availableCurrencyCodes;
+ (void)formatString:(id)arg1 replaceOccurencesOfUnescapedString:(id)arg2 withString:(id)arg3;
+ (id)formatString:(id)arg1 transformedForNegativeStyle:(int)arg2;
+ (int)positionOfMinusSignInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfCurrencySymbolInNumberFormatSubpattern:(id)arg1;
+ (int)positionOfSymbol:(id)arg1 inNumberFormatSubpattern:(id)arg2;
+ (void)initialize;
+ (id)formatterForLocale:(struct __CFLocale *)arg1;
- (struct __CFArray *)p_scientificFormatters;
- (struct __CFArray *)p_percentageFormatters;
- (struct __CFArray *)p_currencyFormatters;
- (struct __CFArray *)p_decimalFormatters;
- (id)localizedPercentSymbol;
- (id)defaultFormatStringForValueType:(int)arg1;
- (id)defaultFormatStringForValueType:(int)arg1 negativeStyle:(int)arg2;
- (id)currentLocaleCurrencyCode;
- (id)halfWidthCurrencySymbolForCurrencyCode:(id)arg1;
- (id)currencySymbolForCurrencyCode:(id)arg1;
- (id)displayNameForCurrencyCode:(id)arg1;
- (_Bool)findCurrencySymbolInString:(struct __CFString *)arg1 additionalCurrencyCode:(struct __CFString *)arg2 successTSUlString:(const struct __CFString **)arg3;
- (_Bool)valueFromString:(struct __CFString *)arg1 formatters:(struct __CFArray *)arg2 value:(double *)arg3 formatString:(const struct __CFString **)arg4 currencyCode:(const struct __CFString **)arg5;
- (_Bool)fractionFromString:(struct __CFString *)arg1 value:(double *)arg2;
- (_Bool)scientificFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (_Bool)percentageFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (_Bool)currencyFromString:(struct __CFString *)arg1 additionalCurrencyCode:(struct __CFString *)arg2 value:(double *)arg3 formatString:(const struct __CFString **)arg4 currencyCode:(const struct __CFString **)arg5;
- (_Bool)decimalFromString:(struct __CFString *)arg1 value:(double *)arg2 formatString:(const struct __CFString **)arg3;
- (void)numberPreferencesChanged:(id)arg1;
- (void)dealloc;
- (id)initWithLocale:(struct __CFLocale *)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUPairNonRetainedSecond : OITSUPair
{
}

- (void)p_SetSecond:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUPathSet : NSObject <NSCopying>
{
    NSMutableSet *mPaths;
    NSMutableDictionary *mBasePathToNumberMap;
    OITSUPathSet *mUnderlyingSet;
}

+ (void)processPath:(id)arg1 base:(id *)arg2 hasBaseNumber:(_Bool *)arg3 baseNumber:(unsigned int *)arg4 extension:(id *)arg5;
+ (id)parseNumberOutOfBasename:(id)arg1 hasNumber:(_Bool *)arg2 number:(unsigned int *)arg3;
- (void)unionPathSet:(id)arg1;
- (void)setUnderlyingPathSet:(id)arg1;
- (_Bool)isPathUsed:(id)arg1;
- (void)pathIsNoLongerUsed:(id)arg1;
- (void)pathIsUsed:(id)arg1;
- (id)addPath:(id)arg1;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithPaths:(id)arg1 basePathToNumberMap:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUPerformanceTest : NSObject
{
    NSString *mName;
    SEL mSelector;
    id mTarget;
    double mGoalTime;
    double mPrecision;
    _Bool mQuiet;
    struct TSUOpstat_s mTiming;
    _Bool mPassed;
}

+ (id)csvHeader;
@property(readonly, nonatomic) _Bool passed; // @synthesize passed=mPassed;
@property(nonatomic) _Bool quiet; // @synthesize quiet=mQuiet;
@property(nonatomic) double precision; // @synthesize precision=mPrecision;
@property(nonatomic) double goalTime; // @synthesize goalTime=mGoalTime;
@property(nonatomic) struct TSUOpstat_s timing; // @synthesize timing=mTiming;
@property(readonly, nonatomic) NSString *name; // @synthesize name=mName;
- (id)csvString;
- (void)report;
- (void)run;
- (void)dealloc;
- (id)initWithName:(id)arg1 selector:(SEL)arg2 target:(id)arg3 goalTime:(double)arg4;

@end

__attribute__((visibility("hidden")))
@interface OITSUPerformanceTestHarness : NSObject
{
    NSMutableArray *mTestCases;
    _Bool mQuiet;
    long long mPassingTests;
    long long mTotalTests;
    _Bool mPassed;
    struct timeval mSetupTime;
}

+ (id)harness;
@property(readonly, nonatomic) _Bool passed; // @synthesize passed=mPassed;
@property(readonly, nonatomic) long long testCount; // @synthesize testCount=mTotalTests;
@property(readonly, nonatomic) long long passingTestCount; // @synthesize passingTestCount=mPassingTests;
@property(nonatomic) _Bool quiet; // @synthesize quiet=mQuiet;
- (void)report;
- (_Bool)runTests;
- (void)cleanup;
- (void)testSuite;
- (void)setup;
- (void)runTestWithName:(id)arg1 selector:(SEL)arg2 goalTime:(double)arg3 precision:(double)arg4;
- (void)runTestWithName:(id)arg1 selector:(SEL)arg2 goalTime:(double)arg3;
- (id)testWithName:(id)arg1 selector:(SEL)arg2 goalTime:(double)arg3;
- (void)dealloc;
- (id)init;
- (void)p_writeCsvResultsToDirectory:(id)arg1;
- (void)p_writeConsoleMessagesToDirectory:(id)arg1;
- (void)p_writeSystemConfigurationToDirectory:(id)arg1;
- (id)p_createResultDirectory;

@end

__attribute__((visibility("hidden")))
@interface OITSUPointerSet : NSSet
{
    struct __CFSet *mSet;
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)setByAddingObjectsFromArray:(id)arg1;
- (id)setByAddingObjectsFromSet:(id)arg1;
- (id)setByAddingObject:(id)arg1;
- (id)allObjects;
- (void)getObjects:(id *)arg1;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCFSet:(struct __CFSet *)arg1;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OITSUProgressContext : NSObject
{
    OITSUProgressStage *m_currentStage;
    NSDate *m_lastReportTime;
    double m_lastProgressReport;
    double m_lastOverallProgress;
}

- (double)overallProgress;
- (double)currentPosition;
- (void)setMessage:(id)arg1;
- (void)setPercentageProgressFromTCProgressContext:(double)arg1;
- (void)setProgress:(double)arg1;
- (void)advanceProgress:(double)arg1;
- (void)endStage;
- (void)nextSubStageWillTakeThisManyOfMySteps:(double)arg1;
- (void)createStageWithSteps:(double)arg1;
- (void)createStageWithSteps:(double)arg1 takingSteps:(double)arg2;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverBlock:(CDUnknownBlockType)arg1;
- (void)addProgressObserver:(id)arg1 selector:(SEL)arg2;
- (void)reset;
- (void)reportProgress:(double)arg1 overallProgress:(double)arg2;
- (id)currentStage;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUProgressContextProgress : OITSUProgress
{
    OITSUProgressContext *mProgressContext;
    NSObject<OS_dispatch_queue> *mProgressContextObserverQueue;
    _Bool hasAddedProgressContextObserver;
}

- (void)p_progressDidChange:(id)arg1;
- (void)p_updateProgressContextObserver;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)isIndeterminate;
- (double)maxValue;
- (double)value;
- (void)dealloc;
- (id)init;
- (id)initWithProgressContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUProgressGroup : OITSUProgress
{
    NSArray *mChildren;
    NSArray *mChildrenProgressObservers;
    NSObject<OS_dispatch_queue> *mChildrenProgressObserversQueue;
}

- (void)p_updateChildrenProgressObservers;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)isIndeterminate;
- (double)maxValue;
- (double)value;
- (void)dealloc;
- (id)initWithChildren:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUProgressObserver : NSObject
{
    double mValueInterval;
    NSObject<OS_dispatch_queue> *mQueue;
    CDUnknownBlockType mHandler;
    double mLastHandledValue;
    _Bool mLastHandledIndeterminate;
}

@property(readonly, nonatomic) double valueInterval; // @synthesize valueInterval=mValueInterval;
- (void)handleValue:(double)arg1 maxValue:(double)arg2 isIndeterminate:(_Bool)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface OITSUProgressStage : NSObject
{
    double m_currentPosition;
    double m_totalSteps;
    double m_stepsInParent;
    double m_startInParent;
    double m_nextSubStageParentSize;
    OITSUProgressStage *m_parentStage;
    OITSUProgressContext *m_context;
}

- (id)description;
- (void)setNextSubStageParentSize:(double)arg1;
- (double)nextSubStageParentSize;
- (double)overallProgress;
- (double)currentPosition;
- (id)parentStage;
- (void)end;
- (void)setProgressPercentage:(double)arg1;
- (void)setProgress:(double)arg1;
- (void)advanceProgress:(double)arg1;
- (void)dealloc;
- (id)initWithSteps:(double)arg1 takingSteps:(double)arg2 inContext:(id)arg3;
- (id)initRootStageInContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUReadWriteQueue : NSObject
{
    NSObject<OS_dispatch_semaphore> *mCanEnqueueReaders;
    NSObject<OS_dispatch_queue> *mGlobalQueue;
    NSObject<OS_dispatch_group> *mInFlightReaders;
    NSObject<OS_dispatch_group> *mInFlightWriters;
}

- (void)waitOnInFlightWriters;
- (void)performSyncWrite:(CDUnknownBlockType)arg1;
- (void)performAsyncWrite:(CDUnknownBlockType)arg1;
- (void)performSyncRead:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSURegularExpression : NSObject <NSCopying, NSCoding>
{
    NSString *_expressionString;
    void *_reserved;
}

+ (id)regularExpressionWithString:(id)arg1;
+ (void)initialize;
- (void)encodeWithCoder:(id)arg1;
- (const char *)getBytesForString:(id)arg1 lossByte:(unsigned char)arg2;
- (id)initWithCoder:(id)arg1;
- (struct _NSRange)matchedRangeForString:(id)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (struct _NSRange)matchedRangeForCString:(const char *)arg1 range:(struct _NSRange)arg2 subexpressionRanges:(struct _NSRange *)arg3 count:(unsigned int)arg4;
- (id)expressionString;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (unsigned long long)numberOfSubexpressions;
- (id)initWithExpressionString:(id)arg1 options:(unsigned int)arg2;
- (id)initWithExpressionString:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface OITSURetainedPointerKeyDictionary : OITSUNoCopyDictionary
{
}

- (id)initWithCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSURetainedPointerSet : OITSUPointerSet
{
}

+ (Class)privateMutableClass;
+ (Class)privateNonMutableClass;
- (id)allObjects;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface OITSUScaledProgress : OITSUProgress
{
    OITSUScaledProgressStorage *mStorage;
    OITSUProgress *mProgress;
    id mProgressObserver;
    NSObject<OS_dispatch_queue> *mProgressQueue;
}

- (void)p_removeProgressObserverFromProgressInQueue;
- (void)p_addProgressObserverToProgressInQueue;
- (void)removeProgressObserver:(id)arg1;
- (id)addProgressObserverWithValueInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (_Bool)isIndeterminate;
@property double maxValue;
- (double)value;
@property(retain) OITSUProgress *progress;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUScaledProgressStorage : NSObject
{
    double mMaxValue;
}

@property double maxValue; // @synthesize maxValue=mMaxValue;

@end

__attribute__((visibility("hidden")))
@interface OITSUSharedLocale : NSObject
{
    struct __CFLocale *mCurrentLocale;
    NSArray *mObserverObjects;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedLocale;
+ (id)_singletonAlloc;
- (void)datePreferencesChanged:(id)arg1;
- (struct __CFLocale *)currentLocale;
- (void)dealloc;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface OITSUSystemInfo : NSObject
{
}

+ (id)systemVersion;
+ (id)operatingSystemName;
+ (id)processorName;
+ (id)macAddress;

@end

__attribute__((visibility("hidden")))
@interface OITSUTemporaryDirectory : NSObject
{
    NSString *_path;
    _Bool _leak;
}

- (void)_createDirectoryWithSignature:(id)arg1 subdirectory:(id)arg2;
- (void)leakTemporaryDirectory;
- (id)URL;
- (id)path;
- (void)dealloc;
- (id)initWithSignature:(id)arg1 subdirectory:(id)arg2;
- (id)initWithSignature:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OITSUWeakReference : NSObject
{
    id mObject;
}

+ (id)weakReferenceWithObject:(id)arg1;
@property(readonly, nonatomic) id object; // @synthesize object=mObject;
- (void)dealloc;
- (id)init;
- (id)initWithObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OITSUWidthLimitedQueue : NSObject
{
    int mReaderCount;
    int mLimit;
    NSObject<OS_dispatch_queue> *mManagerQueue;
    NSObject<OS_dispatch_queue> *mTargetQueue;
    int mSpinLock;
}

- (void)performAsync:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithLimit:(unsigned long long)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OIXMLNode : NSObject <NSCopying>
{
    unsigned int _kind;
    NSString *_name;
    id _value;
}

+ (void)_escapeCharacters:(const unsigned short *)arg1 amount:(unsigned int)arg2 escapeWhiteSpaces:(_Bool)arg3 inString:(id)arg4 appendingToString:(struct __CFString *)arg5;
+ (void)_escapeHTMLAttributeCharacters:(id)arg1 withQuote:(unsigned short)arg2 appendingToString:(struct __CFString *)arg3;
+ (id)elementWithName:(id)arg1 stringValue:(id)arg2;
+ (id)elementWithName:(id)arg1;
+ (id)attributeWithName:(id)arg1 stringValue:(id)arg2;
+ (id)textWithStringValue:(id)arg1;
- (void)_appendXMLStringToString:(struct __CFString *)arg1 level:(int)arg2;
- (id)closingTagString;
- (id)contentString;
- (id)openingTagString;
- (id)XMLString;
- (id)description;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (id)stringValue;
- (void)setStringValue:(id)arg1;
- (id)name;
- (void)setName:(id)arg1;
- (unsigned int)kind;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithKind:(unsigned int)arg1 name:(id)arg2 stringValue:(id)arg3;
- (id)initWithKind:(unsigned int)arg1;

@end

__attribute__((visibility("hidden")))
@interface OIXMLDocument : OIXMLNode
{
    OIXMLElement *_rootElement;
    NSString *_version;
    NSString *_encoding;
}

- (id)closingTagString;
- (id)contentString;
- (id)openingTagString;
- (id)XMLString;
- (id)createMutableXMLString;
- (id)description;
- (void)setCharacterEncoding:(id)arg1;
- (id)rootElement;
- (void)setRootElement:(id)arg1;
- (void)setVersion:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRootElement:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface OIXMLElement : OIXMLNode
{
    id _attributes;
    id _children;
    _Bool _hasMultipleAttributes;
    _Bool _hasMultipleChildren;
}

+ (_Bool)isEmptyHTMLElement:(id)arg1;
+ (void)_initEmptyHTMLNames;
- (id)closingTagString;
- (id)contentString;
- (id)openingTagString;
- (void)_appendXMLStringToString:(struct __CFString *)arg1 level:(int)arg2;
- (long long)attributeCount;
- (long long)childrenCount;
- (id)stringValue;
- (id)objectValue;
- (void)setObjectValue:(id)arg1;
- (void)insertChild:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addChild:(id)arg1;
- (void)addAttribute:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 stringValue:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface OI_TSUImageM : OITSUImage
{
}

+ (id)initWithImageSourceRef:(struct CGImageSource *)arg1;
+ (id)initWithContentsOfFile:(id)arg1;
+ (id)initWithCGImage:(struct CGImage *)arg1 scale:(double)arg2 orientation:(long long)arg3;
+ (id)initWithData:(id)arg1;
+ (id)initWithCGImage:(struct CGImage *)arg1;
+ (id)init;
+ (id)allocWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface ObjectCacheByCString : NSObject
{
    struct __CFDictionary *_dictionary;
}

- (id)getObjectForCStringKey:(char *)arg1;
- (void)setObject:(id)arg1 forCStringKey:(char *)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PBAnimation : NSObject
{
}

+ (void)mapAnimationsFromSlide:(id)arg1 tgtSlide:(id)arg2 state:(id)arg3;
+ (void)parseBuildList:(id)arg1 buildMap:(id)arg2 state:(id)arg3;
+ (id)newChartBuild:(id)arg1;
+ (id)newParaBuild:(id)arg1;
+ (void)parseTargetContainerHolder:(id)arg1 setTargetObj:(id)arg2 state:(id)arg3;
+ (unsigned long long)paragraphIndexFromCharacterIndex:(unsigned long long)arg1 srcDrawable:(id)arg2;
+ (void)parseTimeNodeVariants:(id)arg1 commonData:(id)arg2;
+ (void)parseCmdBehaviorContainer:(id)arg1 cmdBehavior:(id)arg2 timeNode:(id)arg3;
+ (void)parseRotationBehaviorContainer:(id)arg1 rotationBehavior:(id)arg2 timeNode:(id)arg3;
+ (void)parseMotionBehaviorContainer:(id)arg1 motionBehavior:(id)arg2 timeNode:(id)arg3;
+ (void)parseEffectBehaviorContainer:(id)arg1 effectBehavior:(id)arg2 timeNode:(id)arg3;
+ (void)parseColorBehaviorContainer:(id)arg1 colorBehavior:(id)arg2 timeNode:(id)arg3;
+ (id)newColorFromBehaviorColor:(struct PptAnimColorBehavior_Color_Struct *)arg1;
+ (void)parseAnimateBehaviorContainer:(id)arg1 animBehavior:(id)arg2 timeNode:(id)arg3;
+ (void)parseTimeConditionsHolder:(id)arg1 commonData:(id)arg2;
+ (id)parseMediaContainer:(id)arg1 timeNode:(id)arg2 state:(id)arg3;
+ (void)parseTimeNodeContainer:(id)arg1 siblings:(id)arg2 state:(id)arg3;
+ (id)parseBehaviorContainer:(id)arg1 timeNode:(id)arg2 state:(id)arg3;
+ (void)generatePpt10AnimationFromState:(id)arg1 timings:(id)arg2;
+ (void)parsePpt10Animation:(id)arg1 timings:(id)arg2 state:(id)arg3;
+ (_Bool)hasPpt10Animations:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationCacheState : NSObject
{
    OITSUNoCopyDictionary *mMediaNodeMap;
}

- (id)mediaNodeMap;
- (_Bool)isValid:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PBAnimationCacheState : PDAnimationCacheState
{
    NSMutableSet *mEntranceDrawables;
    NSMutableSet *mExitDrawables;
}

- (_Bool)isValid:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PBBulletProperties : NSObject
{
}

+ (id)readBulletProperties:(struct PptParaProperty9 *)arg1 state:(id)arg2;
+ (int)writeBulletNumberScheme:(int)arg1;
+ (int)readBulletNumberSchemeFromExtended:(unsigned int)arg1;
+ (int)readBulletNumberScheme:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface PBCharacterProperties : NSObject
{
}

+ (void)readCharacterProperties:(id)arg1 characterProperty:(struct PptCharProperty *)arg2 state:(id)arg3;
+ (void)readCharacterProperties:(id)arg1 characterPropertyRun:(struct PptCharRun *)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PBChart : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface PBColorScheme : NSObject
{
}

+ (void)readFromColorScheme:(struct PptColorSchemeAtom *)arg1 toColorScheme:(id)arg2 colorMap:(id)arg3 state:(id)arg4;
+ (void)addColorWithIndex:(int)arg1 fromScheme:(struct PptColorSchemeAtom *)arg2 atIndex:(int)arg3 inScheme:(id)arg4;
+ (void)addColorWithIndex:(int)arg1 fromScheme:(struct PptColorSchemeAtom *)arg2 colorTransform:(CDUnknownFunctionPointerType)arg3 atIndex:(int)arg4 inScheme:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface PBFontEntity : NSObject
{
    NSString *mFaceName;
    int mCharSet;
    int mType;
    int mFamily;
}

- (int)family;
- (int)type;
- (int)charSet;
- (id)faceName;
- (void)dealloc;
- (id)initWithName:(id)arg1 charSet:(int)arg2 type:(int)arg3 family:(int)arg4;

@end

__attribute__((visibility("hidden")))
@interface PBHeadersFooters : NSObject
{
}

+ (void)readHeadersFootersFromSlideContainer:(id)arg1 toSlide:(id)arg2 drawables:(id)arg3 state:(id)arg4;
+ (void)readHeadersFootersToSlideLayout:(id)arg1 drawables:(id)arg2 state:(id)arg3;
+ (void)readHeadersFootersToMasterSlide:(id)arg1 drawables:(id)arg2 state:(id)arg3;
+ (void)addCopyOfHeaderFooterPlaceholderOfType:(int)arg1 toDrawables:(id)arg2 slideBase:(id)arg3 headersFootersContainer:(id)arg4 state:(id)arg5;
+ (void)readHeaderFooterTextFromHeadersFootersContainer:(id)arg1 toPlaceholderShape:(id)arg2;
+ (struct PptHeadersFootersAtom *)headersFootersAtomWithHeadersFootersContainer:(id)arg1;
+ (id)headersFootersContainerWithSlideContainer:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBHyperlink : NSObject
{
}

+ (id)readAnimationInfoContainerHolder:(id)arg1 presentationState:(id)arg2;
+ (void)readHyperlinksWithPresentationState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PBMasterInfo : NSObject
{
    PDSlideMaster *mSlideMaster;
    NSMutableArray *mTgtSlideLayoutArray;
    unsigned int mMainPbRef;
    unsigned int mTitlePbRef;
    NSDictionary *mLayoutMap;
    ChVector_b45fc7a7 *mSrcTextStyling;
}

- (ChVector_b45fc7a7 *)sourceTextStyling;
- (id)slideLayoutForSlideHolder:(id)arg1;
- (void)cacheSlideLayouts;
- (id)allTargetLayoutTypes;
- (void)cacheTargetLayoutType:(int)arg1;
- (unsigned int)titlePbRef;
- (void)setTitlePbRef:(unsigned int)arg1;
- (unsigned int)mainPbRef;
- (void)setMainPbRef:(unsigned int)arg1;
- (id)slideMaster;
- (void)setSlideMaster:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PBMasterLayoutMap : NSObject
{
    NSMutableDictionary *mMasterIdToMasterInfoMap;
    NSMutableDictionary *mTitleIdToMasterIdInfoMap;
}

+ (id)masterLayoutMap;
- (id)slideLayoutForSlideHolder:(id)arg1;
- (id)masterInfoForSlideHolder:(id)arg1;
- (int)masterIdForTitleId:(int)arg1;
- (void)setMasterId:(int)arg1 forTitleId:(int)arg2;
- (id)allMasterIds;
- (id)masterInfoForMasterId:(int)arg1;
- (void)setMasterInfo:(id)arg1 forMasterId:(int)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PBMasterStyle : NSObject
{
}

+ (void)readMasterStyleAtom:(struct PptTextMasterStyleAtom *)arg1 baseMasterStyleAtom:(struct PptTextMasterStyleAtom *)arg2 masterBulletStyleAtom:(struct PptTextMasterStyle9Atom *)arg3 textListStyle:(id)arg4 state:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface PBMedia : NSObject
{
}

+ (_Bool)readLinkedMovieFromMovieHolder:(id)arg1 toImage:(id)arg2 state:(id)arg3;
+ (_Bool)readEmbeddedSoundFromClientDataHolder:(id)arg1 toImage:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PBOfficeArtReaderClient : NSObject <OABReaderClient>
{
}

+ (_Bool)tablesAreAllowed;
+ (_Bool)escherIsFullySupported;
+ (void)readClientDataFromTableCell:(id)arg1 toTableCell:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromGroup:(id)arg1 toGroup:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromShape:(id)arg1 toGraphic:(id)arg2 state:(id)arg3;
+ (id)newBuildFromBuildType:(int)arg1;
+ (int)directionFromFlyDirection:(int)arg1;
+ (int)presetIdFromFlyMethod:(int)arg1 isEntrance:(_Bool)arg2;
+ (id)newTargetFromDrawable:(id)arg1 clientData:(id)arg2 buildType:(int)arg3;
+ (_Bool)readPlaceholderInfo:(id)arg1 clientData:(id)arg2 toGraphic:(id)arg3 presentationState:(id)arg4;
+ (_Bool)readOleFromClientDataHolder:(id)arg1 toGraphic:(id)arg2 tgtClientData:(id)arg3 state:(id)arg4;
+ (void)addRecolorSpec:(const struct PptRecolorSpec *)arg1 toDictionary:(id)arg2;
+ (_Bool)readRecolorInfoFromClientDataHolder:(id)arg1 toClientData:(id)arg2;
+ (void)readHyperlinkFromShapeContainerHolder:(id)arg1 toDrawable:(id)arg2 state:(id)arg3;
+ (void)readClientAnchorFromContainer:(id)arg1 toDrawable:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PBOfficeArtReaderState : OABReaderState
{
    PBPresentationReaderState *mPresentationState;
}

- (id)drawableOnTgtSlideForShapeId:(int)arg1;
- (id)presentationState;
- (id)initWithPresentationState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PBOfficeArtWriterClient : OABWriterClient
{
}

@end

__attribute__((visibility("hidden")))
@interface PBOutlineBulletDictionary : NSObject
{
    NSMutableDictionary *mDictionary;
}

- (id)objectForSlideId:(unsigned int)arg1 textType:(int)arg2 placeholderIndex:(unsigned int)arg3;
- (void)dealloc;
- (id)initFromContainer:(id)arg1 objectType:(unsigned int)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBOutlineBulletKey : NSObject <NSCopying>
{
    unsigned int mSlideId;
    int mTextType;
    unsigned int mPlaceholderIndex;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSlideId:(unsigned int)arg1 textType:(int)arg2 placeholderIndex:(unsigned int)arg3;
- (id)initWithOutlineBullet:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PBParagraphProperties : NSObject
{
}

+ (void)readParagraphProperties:(id)arg1 paragraphProperty:(struct PptParaProperty *)arg2 bulletStyle:(struct PptParaProperty9 *)arg3 isMaster:(_Bool)arg4 state:(id)arg5;
+ (void)readParagraphProperties:(id)arg1 paragraphPropertyRun:(struct PptParaRun *)arg2 bulletStyle:(struct PptParaProperty9 *)arg3 state:(id)arg4;
+ (int)pptFontAlignWithOADTextFontAlign:(int)arg1;
+ (int)pptAlignmentTypeWithOADTextAlignType:(int)arg1;
+ (short)pptTextSpacingWithOADParaSpacing:(id)arg1 defaultPptParaSpacing:(short)arg2;
+ (void)readAlign:(id)arg1 pptAlignmentType:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBPlaceholder : NSObject
{
}

+ (void)writePlaceholder:(id)arg1 toPlaceholderAtom:(struct PptOEPlaceholderAtom *)arg2 isMaster:(_Bool)arg3 isNotes:(_Bool)arg4;
+ (_Bool)isTitlePlaceholder:(int)arg1;
+ (_Bool)isBodyPlaceholder:(int)arg1;
+ (int)placeholderTypeFromTextType:(int)arg1;
+ (int)readPlaceholderOrientation:(int)arg1;
+ (int)readPlaceholderSize:(int)arg1;
+ (int)readPlaceholderType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface PBPresentation : NSObject
{
}

+ (void)addHeadersFootersToDocumentContainer:(id)arg1 instance:(int)arg2;
+ (void)setFontEntites:(id)arg1 environmentHolder:(id)arg2;
+ (void)readFrom:(struct PptBinaryReader *)arg1 to:(id)arg2 cancel:(id)arg3 asThumbnail:(_Bool)arg4 delegate:(id)arg5;
+ (id)drawingGroupHolderWithDocumentContainerHolder:(id)arg1;
+ (void)readNotes:(id)arg1 masterLayoutMap:(id)arg2 slideIdMap:(id)arg3 state:(id)arg4;
+ (void)readSlides:(id)arg1 masterLayoutMap:(id)arg2 slideIdMap:(id)arg3 state:(id)arg4 isThumbnail:(_Bool)arg5 delegate:(id)arg6;
+ (void)processLayoutTypesFromDocument:(id)arg1 masterLayoutMap:(id)arg2 state:(id)arg3;
+ (void)readCommentAuthorsFrom:(id)arg1 state:(id)arg2;
+ (void)scanSlideListForLayoutTypes:(id)arg1 slideListHolder:(id)arg2 masterLayoutMap:(id)arg3;
+ (void)readMasterAndLayouts:(id)arg1 masterLayoutMap:(id)arg2 state:(id)arg3;
+ (void)readDefaultTextListStyle:(id)arg1 fromDocumentContainer:(id)arg2 state:(id)arg3;
+ (void)setDefaultTextStyleWithEnvironmentHolder:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBPresentationReaderState : NSObject
{
    struct PptBinaryReader *mPptBinaryReader;
    PDPresentation *mTgtPresentation;
    ESDRoot *mDocumentRoot;
    ESDContainer *mSrcSlideListHolder;
    ChVector_fe49fc78 *mCurrentSlideTextBlockStartIndexVector;
    unsigned int mSrcSlideId;
    NSMutableArray *mSlideIndexes;
    OITSUNoCopyDictionary *mSlideMasterToMasterStyles;
    struct __CFDictionary *mHyperlinkMap;
    PBOfficeArtReaderState *mOfficeArtState;
    NSMutableArray *mFontEntities;
    PDSlideBase *mTgtSlide;
    unsigned int mTextLength;
    _Bool mHasCharacterPropertyBulletIndex;
    unsigned int mBulletIndex;
    PBOutlineBulletDictionary *mPlaceholderBulletStyles;
    PBOutlineBulletDictionary *mPlaceholderMacCharStyles;
    ESDObject *mCurrentBulletStyle;
    ESDObject *mCurrentMacCharStyle;
    ChVector_b45fc7a7 *mSrcDocMasterStyleInfoVector;
    ChVector_b45fc7a7 *mSrcCurrentMasterStyleInfoVector;
    PBSlideState *mSlideState;
    id <TCCancelDelegate> mCancel;
    _Bool mHasSlideNumberPlaceholder;
    NSMutableDictionary *mTargetShapeToSourceTextBoxContainerHolderMap;
}

@property _Bool hasSlideNumberPlaceholder; // @synthesize hasSlideNumberPlaceholder=mHasSlideNumberPlaceholder;
@property(retain, nonatomic) id <TCCancelDelegate> cancelDelegate; // @synthesize cancelDelegate=mCancel;
@property ESDContainer *sourceSlideListHolder; // @synthesize sourceSlideListHolder=mSrcSlideListHolder;
- (void)setSourceTextBoxContainerHolder:(id)arg1 forTargetShape:(id)arg2;
- (id)sourceTextBoxContainerHolderForTargetShape:(id)arg1;
- (id)hyperlinkInfoWithId:(unsigned int)arg1 createIfAbsent:(_Bool)arg2;
- (_Bool)isCancelled;
- (void)setSourceSlideId:(unsigned int)arg1;
- (ChVector_fe49fc78 *)currentSlideTextBlockStartIndexVector;
- (struct PBReaderMasterStyleInfo *)currentSourceMasterStyleInfoOfType:(int)arg1;
- (struct PBReaderMasterStyleInfo *)docSourceMasterStyleInfoOfType:(int)arg1;
- (void)setCurrentSourceMasterStyleInfoVector:(ChVector_b45fc7a7 *)arg1;
- (_Bool)hasCurrentSourceMasterStyleInfoVector;
- (void)resetSlideState;
- (id)slideState;
- (id)masterStyles:(id)arg1;
- (void)setMasterStyles:(id)arg1 slideMaster:(id)arg2;
- (void)setCurrentBulletStyle:(id)arg1 macCharStyle:(id)arg2;
- (void)setCurrentTextType:(int)arg1 placeholderIndex:(unsigned int)arg2;
- (id)currentMacCharStyle;
- (id)currentBulletStyle;
- (void)setPlaceholderMacCharStyles:(id)arg1;
- (void)setPlaceholderBulletStyles:(id)arg1;
- (void)setBulletIndex:(unsigned int)arg1;
- (unsigned int)bulletIndex;
- (void)setHasCharacterPropertyBulletIndex:(_Bool)arg1;
- (_Bool)hasCharacterPropertyBulletIndex;
- (void)setTextLength:(unsigned int)arg1;
- (unsigned int)textLength;
- (void)setTgtSlide:(id)arg1;
- (id)tgtSlide;
- (id)fontEntityAtIndex:(unsigned long long)arg1;
- (void)addFontEntity:(id)arg1 charSet:(int)arg2 type:(int)arg3 family:(int)arg4;
- (unsigned long long)fontEntityCount;
- (id)officeArtState;
- (id)slideIndexesRef;
- (unsigned long long)getSlideIndexAt:(unsigned long long)arg1;
- (void)addSlideIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSlideIndexes;
- (id)tgtPresentation;
- (void)setDocumentRoot:(id)arg1;
- (id)documentRoot;
- (struct PptBinaryReader *)reader;
- (void)dealloc;
- (id)initWithReader:(struct PptBinaryReader *)arg1 tgtPresentation:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBProgTag : NSObject
{
}

+ (id)ensureBinaryTagDataWithName:(const unsigned short *)arg1 inProgTags:(id)arg2;
+ (id)ensureBinaryTagDataWithName:(const unsigned short *)arg1 inProgTagsParent:(id)arg2;
+ (id)binaryTagDataWithName:(const unsigned short *)arg1 inProgTags:(id)arg2;
+ (id)binaryTagDataWithName:(const unsigned short *)arg1 inProgTagsParent:(id)arg2;
+ (void)readBulletImagesFromContainerParent:(id)arg1 state:(id)arg2;
+ (void)readClientData:(id)arg1 state:(id)arg2;
+ (void)readDocumentList:(id)arg1 state:(id)arg2;
+ (void)readBulletStylesFromMainMaster:(id)arg1 state:(id)arg2;
+ (const struct PBTextFormatProgTagInfo *)textFormatInfoForProgTagName:(const unsigned short *)arg1;
+ (id)readMacCharStyleFromClientData:(id)arg1;
+ (void)readMacCharStylesFromDocumentList:(id)arg1 state:(id)arg2;
+ (id)readBulletStyleFromClientData:(id)arg1;
+ (void)readHyperlinkScreenTipsFromDocumentList:(id)arg1 state:(id)arg2;
+ (void)readBulletImagesFromDocumentList:(id)arg1 state:(id)arg2;
+ (void)readBulletStylesFromDocumentList:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBReader : OCBReader
{
    struct PptObjectFactory *mPptObjectFactory;
    const void *mBuffer;
}

- (struct OCCBinaryStreamer *)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey *)arg1 baseOutputFilenameInUTF8:(const char *)arg2;
- (struct OCCEncryptionInfoReader *)encryptionInfoReader;
@property(readonly, nonatomic) struct PptBinaryReader *pptReader;
- (id)read;
- (_Bool)start;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBReaderHyperlinkInfo : NSObject
{
    NSString *mHyperlink1;
    NSString *mHyperlink2;
    NSString *mScreenTip;
}

@property(retain, nonatomic) NSString *screenTip; // @synthesize screenTip=mScreenTip;
@property(retain, nonatomic) NSString *hyperlink2; // @synthesize hyperlink2=mHyperlink2;
@property(retain, nonatomic) NSString *hyperlink1; // @synthesize hyperlink1=mHyperlink1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface PBSlideBase : NSObject
{
}

+ (void)mapSlideNumberPlaceholder:(id)arg1 tgtSlideBase:(id)arg2 state:(id)arg3;
+ (void)readColorScheme:(id)arg1 colorScheme:(id)arg2 colorMap:(id)arg3 state:(id)arg4;
+ (void)readDrawingGroup:(id)arg1 slide:(id)arg2 state:(id)arg3;
+ (void)readComments:(id)arg1 slide:(id)arg2 state:(id)arg3;
+ (unsigned long long)authorIdForName:(id)arg1 state:(id)arg2;
+ (unsigned char)mapDirection:(id)arg1;
+ (id)newOptions:(long long)arg1 transType:(int)arg2;
+ (int)parseTransType:(int)arg1 direction:(long long)arg2;
+ (void)parseSlideShowInfo:(struct PptSSSlideInfoAtom *)arg1 slideBase:(id)arg2 state:(id)arg3;
+ (_Bool)slideFollowsMasterBackground:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PBSlide : PBSlideBase
{
}

+ (void)readFromSlideContainer:(id)arg1 toSlide:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PBSlideMaster : PBSlideBase
{
}

+ (void)flattenPlaceholderTextStylesIntoLayout:(id)arg1 layoutType:(int)arg2 masterStyleMap:(id)arg3;
+ (void)readSlideMasterStyles:(id)arg1 slideHolder:(id)arg2 state:(id)arg3;
+ (void)setFont:(id)arg1 fromCharacterProperties:(id)arg2;
+ (void)setCannedOtherTextListStyle:(id)arg1;
+ (void)padMissingLevels:(id)arg1;
+ (id)createMasterStyleMap:(id)arg1 state:(id)arg2;
+ (void)flattenMasterStyleType:(int)arg1 baseType:(int)arg2 masterStyleMap:(id)arg3;
+ (void)flattenBaseMasterStyleType:(int)arg1 masterStyleMap:(id)arg2;
+ (void)readSlideLayout:(id)arg1 slideHolder:(id)arg2 layoutType:(int)arg3 state:(id)arg4;
+ (void)readMasterDrawables:(id)arg1 slideHolder:(id)arg2 state:(id)arg3;
+ (void)flattenTextStyle:(id)arg1 intoTextBox:(id)arg2;
+ (id)textBodyForPlaceholderType:(int)arg1 slideLayout:(id)arg2;
+ (int)textTypeFor:(int)arg1 placeholderType:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBSlideObjAndMasterPair : NSObject
{
    PDSlide *mSlide;
    int mMasterId;
}

+ (id)createPair:(id)arg1 masterId:(int)arg2;
- (void)dealloc;
- (int)masterId;
- (id)slide;
- (void)setSlide:(id)arg1 masterId:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBSlideState : NSObject
{
    NSMutableDictionary *mBuildOrderMap;
    unsigned int mCurrentGroupId;
}

- (unsigned int)generateGroupId;
- (id)buildOrderMap;
- (void)addBuild:(id)arg1 order:(unsigned int)arg2;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PBTextBlock : NSObject
{
}

+ (void)readClientTextBox:(id)arg1 textBody:(id)arg2 state:(id)arg3;
+ (void)applyTextRuler:(struct PptTextRulerAtom *)arg1 toTextBlock:(id)arg2;
+ (void)readParagraph:(id)arg1 paragraph:(struct __CFAttributedString *)arg2 textType:(int)arg3 state:(id)arg4;
+ (void)readFromStyledText:(struct __CFAttributedString *)arg1 toStyledPargraphs:(struct __CFArray *)arg2;
+ (void)readFromTextBlock:(id)arg1 toStyledText:(struct __CFAttributedString *)arg2;

@end

__attribute__((visibility("hidden")))
@interface PBTextRun : NSObject
{
}

+ (void)readTextRun:(id)arg1 plainText:(id)arg2 characterAttributes:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface PBUtils : NSObject
{
}

+ (id)readStringWithInstance:(int)arg1 fromContainer:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PCMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface PDTimeNode : NSObject
{
    NSMutableArray *mStartTimeConditions;
    NSMutableArray *mEndTimeConditions;
    NSMutableArray *mChildTimeNodeList;
    NSMutableArray *mSubTimeNodeList;
    PDIterate *mIterate;
    int mType;
    int mAnimationPresetClass;
    int mPresetId;
    int mPresetSubType;
    int mRepeatCount;
    int mRepeatDuration;
    int mRestartType;
    _Bool mHasDuration;
    double mDuration;
    double mSpeed;
    double mAcceleration;
    double mDeceleration;
    NSString *mGroupId;
}

- (_Bool)isEqual:(id)arg1;
- (void)setGroupIdValue:(int)arg1;
- (void)setGroupId:(id)arg1;
- (id)groupId;
- (void)setDeceleration:(double)arg1;
- (double)deceleration;
- (void)setAcceleration:(double)arg1;
- (double)acceleration;
- (void)setSpeed:(double)arg1;
- (double)speed;
- (void)setDuration:(double)arg1;
- (double)duration;
- (_Bool)hasDuration;
- (void)setRestartType:(int)arg1;
- (int)restartType;
- (_Bool)hasRestartType;
- (void)setRepeatDuration:(int)arg1;
- (int)repeatDuration;
- (void)setRepeatCount:(int)arg1;
- (int)repeatCount;
- (void)setPresetId:(int)arg1;
- (int)presetId;
- (void)setPresetSubType:(int)arg1;
- (int)presetSubType;
- (void)setAnimationPresetClass:(int)arg1;
- (int)animationPresetClass;
- (_Bool)hasPresetClass;
- (void)setType:(int)arg1;
- (int)type;
- (_Bool)hasType;
- (void)setIterate:(id)arg1;
- (id)iterate;
- (void)setSubTimeNodeList:(id)arg1;
- (id)subTimeNodeList;
- (void)setChildTimeNodeList:(id)arg1;
- (id)childTimeNodeList;
- (void)setEndTimeConditions:(id)arg1;
- (id)endTimeConditions;
- (void)setStartTimeConditions:(id)arg1;
- (id)startTimeConditions;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateBehavior : PDTimeNode
{
    PDAnimationTarget *mTgtElement;
}

- (_Bool)isEqual:(id)arg1;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateColorBehavior : PDAnimateBehavior
{
    OADColor *mBy;
    OADColor *mFrom;
    OADColor *mTo;
    int mColorSpace;
    int mDirection;
}

- (void)setDirection:(int)arg1;
- (int)direction;
- (void)setColorSpace:(int)arg1;
- (int)colorSpace;
- (void)setTo:(id)arg1;
- (id)to;
- (void)setFrom:(id)arg1;
- (id)from;
- (void)setBy:(id)arg1;
- (id)by;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateEffectBehavior : PDAnimateBehavior
{
    NSString *mFilter;
    int mTransition;
}

- (void)setTransition:(int)arg1;
- (int)transition;
- (void)setFilter:(id)arg1;
- (id)filter;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateScaleBehavior : PDAnimateBehavior
{
    struct CGPoint mTo;
    struct CGPoint mFrom;
    struct CGPoint mBy;
}

- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (void)setBy:(struct CGPoint)arg1;
- (struct CGPoint)by;
- (void)setFrom:(struct CGPoint)arg1;
- (struct CGPoint)from;
- (void)setTo:(struct CGPoint)arg1;
- (struct CGPoint)to;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateMotionBehavior : PDAnimateScaleBehavior
{
    NSString *mPath;
    _Bool mHasAngle;
    double mAngle;
    _Bool mHasPointType;
    int mPointType;
    _Bool mHasOriginType;
    int mOriginType;
    _Bool mHasRotationCenter;
    struct CGPoint mRotationCenter;
}

- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (void)setRotationCenter:(struct CGPoint)arg1;
- (struct CGPoint)rotationCenter;
- (_Bool)hasRotationCenter;
- (void)setOriginType:(int)arg1;
- (int)originType;
- (_Bool)hasOriginType;
- (void)setPointType:(int)arg1;
- (int)pointType;
- (_Bool)hasPointType;
- (void)setAngle:(double)arg1;
- (double)angle;
- (_Bool)hasAngle;
- (void)setPath:(id)arg1;
- (id)path;
- (_Bool)hasPath;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateRotateBehavior : PDAnimateBehavior
{
    double mTo;
    double mFrom;
    double mBy;
}

- (void)setBy:(double)arg1;
- (double)by;
- (void)setFrom:(double)arg1;
- (double)from;
- (void)setTo:(double)arg1;
- (double)to;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimateTimeBehavior : PDAnimateBehavior
{
    NSMutableArray *mTimeAnimateValues;
}

- (void)addTimeAnimateValue:(id)arg1;
- (id)timeAnimateValueAtIndex:(unsigned long long)arg1;
- (unsigned long long)timeAnimateValueCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimation : NSObject
{
    PDRootTimeNode *mRootTimeNode;
    OITSUNoCopyDictionary *mBuildMap;
}

+ (void)initialize;
- (void)setBuildMap:(id)arg1;
- (id)buildMap;
- (id)addRootTimeNode;
- (id)rootTimeNode;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationTarget : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface PDAnimationShapeTarget : PDAnimationTarget
{
    OADDrawable *mDrawable;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setDrawable:(id)arg1;
- (id)drawable;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationBackgroundTarget : PDAnimationShapeTarget
{
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationCache : NSObject
{
    int mNodeType;
    int mPresetId;
    int mPresetSubType;
    int mPresetClass;
    PDAnimationTarget *mTarget;
    _Bool mHasDelay;
    double mDelay;
    _Bool mHasDuration;
    double mDuration;
    _Bool mHasDirection;
    double mDirection;
    _Bool mHasPartCount;
    int mPartCount;
    PDAnimateMotionBehavior *mMotionPath;
    _Bool mHasValue;
    double mValue;
    PDBuild *mBuild;
    int mIterateType;
    _Bool mIsHead;
    int mLevel;
    NSString *mGroupId;
}

+ (id)createAnimationInfoDataForCacheItem:(id)arg1 order:(unsigned int)arg2;
+ (void)loadAnimationCache:(id)arg1 pdAnimation:(id)arg2 state:(id)arg3;
+ (void)mapAnimationInfo:(id)arg1 cacheData:(id)arg2 state:(id)arg3;
+ (void)mapCommonData:(id)arg1 cacheData:(id)arg2 state:(id)arg3;
@property(retain, nonatomic) PDBuild *build; // @synthesize build=mBuild;
@property(nonatomic) int level; // @synthesize level=mLevel;
@property(nonatomic) _Bool isHead; // @synthesize isHead=mIsHead;
@property(retain, nonatomic) NSString *groupId; // @synthesize groupId=mGroupId;
@property(nonatomic) double value; // @synthesize value=mValue;
@property(nonatomic) _Bool hasValue; // @synthesize hasValue=mHasValue;
@property(retain, nonatomic) PDAnimateMotionBehavior *motionPath; // @synthesize motionPath=mMotionPath;
@property(nonatomic) int partCount; // @synthesize partCount=mPartCount;
@property(nonatomic) _Bool hasPartCount; // @synthesize hasPartCount=mHasPartCount;
@property(nonatomic) double direction; // @synthesize direction=mDirection;
@property(nonatomic) _Bool hasDirection; // @synthesize hasDirection=mHasDirection;
@property(nonatomic) double duration; // @synthesize duration=mDuration;
@property(nonatomic) _Bool hasDuration; // @synthesize hasDuration=mHasDuration;
@property(nonatomic) double delay; // @synthesize delay=mDelay;
@property(nonatomic) _Bool hasDelay; // @synthesize hasDelay=mHasDelay;
@property(nonatomic) int iterateType; // @synthesize iterateType=mIterateType;
@property(nonatomic) int presetClass; // @synthesize presetClass=mPresetClass;
@property(nonatomic) int presetSubType; // @synthesize presetSubType=mPresetSubType;
@property(nonatomic) int presetId; // @synthesize presetId=mPresetId;
@property(nonatomic) int nodeType; // @synthesize nodeType=mNodeType;
@property(retain, nonatomic) PDAnimationTarget *target; // @synthesize target=mTarget;
- (void)dealloc;
- (id)initWithAnimationInfo:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationChartTarget : PDAnimationShapeTarget
{
    int mCatagoryIndex;
    int mSeriesIndex;
    int mBuildStep;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setBuildStep:(int)arg1;
- (int)buildStep;
- (void)setSeriesIndex:(int)arg1;
- (int)seriesIndex;
- (void)setCatagoryIndex:(int)arg1;
- (int)catagoryIndex;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationDiagramTarget : PDAnimationShapeTarget
{
    int mDiagramBuildStepBg;
    int mDiagramBuildStepSp;
    int mDiagramId;
}

- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationInfo : NSObject
{
    PDAnimationInfoData *mEntrance;
    PDAnimationInfoData *mExit;
    PDAnimationInfoData *mMedia;
    PDMediaNode *mediaNode;
}

@property(retain, nonatomic) PDMediaNode *mediaNode; // @synthesize mediaNode;
@property(retain, nonatomic) PDAnimationInfoData *mediaData; // @synthesize mediaData=mMedia;
- (id)exitData;
- (void)setExitData:(id)arg1;
- (id)entranceData;
- (void)setEntranceData:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationInfoData : NSObject
{
    unsigned int mOrder;
    PDBuild *mBuild;
    PDSequentialTimeNode *mSequentialTimeNodeData;
    OADDrawable *mDrawable;
}

- (id)drawable;
- (id)data;
- (id)build;
- (unsigned int)order;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 presetClass:(int)arg2 presetId:(int)arg3 triggerType:(int)arg4 iterateType:(int)arg5 delay:(double)arg6 direction:(double)arg7 order:(unsigned int)arg8 groupId:(id)arg9 build:(id)arg10;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationOleChartTarget : PDAnimationShapeTarget
{
    int mLevel;
    int mChartSubElementType;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setChartSubElementType:(int)arg1;
- (int)chartSubElementType;
- (void)setLevel:(int)arg1;
- (int)level;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationSoundTarget : PDAnimationShapeTarget
{
    NSString *mSoundFile;
}

- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAnimationTextTarget : PDAnimationShapeTarget
{
    int mType;
    struct _NSRange mRange;
}

- (id).cxx_construct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setRange:(struct _NSRange)arg1;
- (struct _NSRange)range;
- (void)setType:(int)arg1;
- (int)type;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDMediaNode : PDTimeNode
{
    PDAnimationTarget *mTarget;
    _Bool mIsMuted;
    _Bool mIsShowWhenStopped;
    long long mNumberOfSlides;
    long long mVolume;
}

- (void)setVolume:(long long)arg1;
- (long long)volume;
- (void)setNumberOfSlides:(long long)arg1;
- (long long)numberOfSlides;
- (void)setIsShowWhenStopped:(_Bool)arg1;
- (_Bool)isShowWhenStopped;
- (void)setIsMuted:(_Bool)arg1;
- (_Bool)isMuted;
- (void)setTarget:(id)arg1;
- (id)target;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDAudioNode : PDMediaNode
{
    _Bool mIsNarration;
}

- (void)setIsNarration:(_Bool)arg1;
- (_Bool)isNarration;

@end

__attribute__((visibility("hidden")))
@interface PDTransitionOptions : NSObject
{
    _Bool mHasSound;
    _Bool mIsStartSoundAction;
    NSString *mSoundFile;
}

@end

__attribute__((visibility("hidden")))
@interface PDBlackOptions : PDTransitionOptions
{
    _Bool mIsThroughBlack;
}

- (void)setIsThroughBlack:(_Bool)arg1;
- (_Bool)isThroughBlack;

@end

__attribute__((visibility("hidden")))
@interface PDBuild : NSObject
{
    _Bool mIsAnimateBackground;
    OADDrawable *mDrawable;
}

- (_Bool)isEqual:(id)arg1;
- (void)setDrawable:(id)arg1;
- (id)drawable;
- (void)setIsAnimateBackground:(_Bool)arg1;
- (_Bool)isAnimateBackground;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDBuildMapKey : NSObject <NSCopying>
{
    NSValue *mDrawableValue;
    NSString *mGroupId;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)setGroupId:(id)arg1;
- (id)groupId;
- (void)setDrawable:(id)arg1;
- (id)drawable;
- (void)dealloc;
- (id)initWithDrawable:(id)arg1 groupId:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDChartBuild : PDBuild
{
    int mChartBuildType;
}

- (_Bool)isEqual:(id)arg1;
- (void)setType:(int)arg1;
- (int)type;
- (id)initWithBuildType:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface PDCmdBehavior : PDAnimateBehavior
{
    NSString *mCmd;
    int mBehaviorType;
}

- (void)setBehaviorType:(int)arg1;
- (int)behaviorType;
- (void)setCmd:(id)arg1;
- (id)cmd;

@end

__attribute__((visibility("hidden")))
@interface PDComment : NSObject
{
    struct CGPoint mPosition;
    NSString *mText;
    unsigned int mAuthorId;
    NSDate *mDate;
    unsigned int mIndex;
}

- (id).cxx_construct;
- (void)setIndex:(unsigned int)arg1;
- (unsigned int)index;
- (void)setDate:(id)arg1;
- (id)date;
- (void)setAuthorId:(unsigned int)arg1;
- (unsigned int)authorId;
- (void)setText:(id)arg1;
- (id)text;
- (void)setPosition:(struct CGPoint)arg1;
- (struct CGPoint)position;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDCommentAuthor : NSObject
{
    unsigned int mId;
    NSString *mName;
    NSString *mInitials;
    unsigned int mLastCommentIndex;
    unsigned int mColorIndex;
}

- (void)setColorIndex:(unsigned int)arg1;
- (unsigned int)colorIndex;
- (void)setLastCommentIndex:(unsigned int)arg1;
- (unsigned int)lastCommentIndex;
- (void)setInitials:(id)arg1;
- (id)initials;
- (void)setName:(id)arg1;
- (id)name;
- (void)setId:(unsigned int)arg1;
- (unsigned int)id;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDCornerDirectionOptions : PDTransitionOptions
{
    int mDirection;
}

- (void)setDirection:(int)arg1;
- (int)direction;

@end

__attribute__((visibility("hidden")))
@interface PDDiagramBuild : PDBuild
{
}

@end

__attribute__((visibility("hidden")))
@interface PDEightDirectionOptions : PDTransitionOptions
{
    int mDirection;
}

- (void)setDirection:(int)arg1;
- (int)direction;

@end

__attribute__((visibility("hidden")))
@interface PDHeadersFooters : NSObject
{
    _Bool mHasDateTime;
    _Bool mHasNowDateTime;
    _Bool mHasUserDateTime;
    _Bool mHasSlideNumber;
    _Bool mHasHeader;
    _Bool mHasFooter;
    int mDateTimeFormat;
    NSString *mUserDateTime;
    NSString *mHeader;
    NSString *mFooter;
}

- (void)setFooter:(id)arg1;
- (id)footer;
- (void)setHeader:(id)arg1;
- (id)header;
- (void)setUserDateTime:(id)arg1;
- (id)userDateTime;
- (void)setHasFooter:(_Bool)arg1;
- (_Bool)hasFooter;
- (void)setHasHeader:(_Bool)arg1;
- (_Bool)hasHeader;
- (void)setHasSlideNumber:(_Bool)arg1;
- (_Bool)hasSlideNumber;
- (void)setHasUserDateTime:(_Bool)arg1;
- (_Bool)hasUserDateTime;
- (void)setHasNowDateTime:(_Bool)arg1;
- (_Bool)hasNowDateTime;
- (void)setHasDateTime:(_Bool)arg1;
- (_Bool)hasDateTime;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface PDInOutDirectionOptions : PDTransitionOptions
{
    int mInOut;
}

- (void)setInOut:(int)arg1;
- (int)inOut;

@end

__attribute__((visibility("hidden")))
@interface PDIterate : NSObject
{
    int mType;
    _Bool mIsBackwards;
    _Bool mIsPercentage;
    double mValue;
}

- (_Bool)isEqual:(id)arg1;
- (void)setValue:(double)arg1;
- (double)value;
- (void)setIsValuePercentage:(_Bool)arg1;
- (_Bool)isValuePercentage;
- (void)setIsBackwards:(_Bool)arg1;
- (_Bool)isBackwards;
- (void)setType:(int)arg1;
- (int)type;

@end

__attribute__((visibility("hidden")))
@interface PDSlideBase : NSObject
{
    NSString *mName;
    NSArray *mDrawables;
    OADBackground *mBackground;
    PDAnimation *mAnimation;
    PDTransition *mTransition;
    OADTableStyle *mDefaultTableStyle;
    unsigned int mIsHidden:1;
    unsigned int mIsDoneWithContent:1;
    _Bool mCachedSlideNumberShape;
    OADShape *mSlideNumberShape;
    _Bool mCachedSlideNumberPlaceholder;
    OADShape *mSlideNumberPlaceholder;
}

+ (int)inheritedPlaceholderType:(int)arg1;
- (void)generatePpt9Animations:(id)arg1;
- (_Bool)hasPpt9Animations;
- (_Bool)hasPpt10Animations;
- (id)drawingTheme;
- (void)doneWithContent;
- (void)setDefaultTableStyle:(id)arg1;
- (id)defaultTableStyle;
- (void)setIsHidden:(_Bool)arg1;
- (_Bool)isHidden;
- (id)styleMatrix;
- (id)colorMap;
- (id)fontScheme;
- (id)colorScheme;
- (id)parentSlideBase;
- (id)masterGraphicForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentShapePropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentTextStyleForTables;
- (id)parentTextStyleForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 defaultTextListStyle:(id)arg3 overrideIndex:(_Bool)arg4;
- (id)parentTextBodyPropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
@property(readonly, nonatomic) _Bool hasMappableSlideNumberShape;
@property(readonly, nonatomic) OADShape *slideNumberPlaceholder;
@property(readonly, nonatomic) OADShape *slideNumberShape;
- (id)placeholders;
- (id)placeholderWithType:(int)arg1 placeholderTypeIndex:(int)arg2 useBaseTypeMatch:(_Bool)arg3 overrideIndex:(_Bool)arg4;
- (id)placeholderWithType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)defaultTheme;
- (void)setTransition:(id)arg1;
- (id)transition;
- (id)animation;
- (void)setBackground:(id)arg1;
- (id)background;
- (void)setDrawables:(id)arg1 defaultTextListStyle:(id)arg2;
- (void)setInheritedTextStyle:(id)arg1 placeholderType:(int)arg2 defaultTextListStyle:(id)arg3;
- (id)drawables;
- (void)setName:(id)arg1;
- (id)name;
- (void)dealloc;
- (id)init;
- (id)description;
- (void)setPpt9AnimationDataForCacheItem:(id)arg1 order:(int)arg2 state:(id)arg3;
- (void)addSlideNumberPlaceholder:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PDNotesMaster : PDSlideBase
{
    OADTheme *mTheme;
    OADColorMap *mColorMap;
    OADTextListStyle *mNotesTextStyle;
}

- (id)description;
- (id)drawingTheme;
- (void)doneWithContent;
- (id)masterGraphicForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentShapePropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentTextStyleForTables;
- (id)parentTextStyleForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 defaultTextListStyle:(id)arg3 overrideIndex:(_Bool)arg4;
- (id)parentTextBodyPropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)notesTextStyle;
- (id)styleMatrix;
- (id)colorMap;
- (id)fontScheme;
- (id)colorScheme;
- (id)theme;
- (id)parentSlideBase;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDSlideChild : PDSlideBase
{
    _Bool mShowMasterPlaceholderAnimations;
    _Bool mShowMasterShapes;
    OADThemeOverrides *mThemeOverrides;
    OADColorMap *mColorMapOverride;
}

- (id)drawingTheme;
- (void)doneWithContent;
- (id)styleMatrix;
- (id)colorMap;
- (id)fontScheme;
- (id)colorScheme;
- (void)setColorMapOverride:(id)arg1;
- (id)colorMapOverride;
- (id)themeOverrides;
- (void)setShowMasterShapes:(_Bool)arg1;
- (_Bool)showMasterShapes;
- (void)setShowMasterPlaceholderAnimations:(_Bool)arg1;
- (_Bool)showMasterPlaceholderAnimations;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDNotesSlide : PDSlideChild
{
    PDNotesMaster *mNotesMaster;
}

- (void)doneWithContent;
- (id)masterGraphicForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentShapePropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentTextStyleForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 defaultTextListStyle:(id)arg3 overrideIndex:(_Bool)arg4;
- (id)parentTextBodyPropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)masterPlaceholderOfType:(int)arg1;
- (void)setNotesMaster:(id)arg1;
- (id)notesMaster;
- (id)parentSlideBase;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDOfficeArtClient : NSObject <OADClient, OADImageRecolorInfoClient>
{
    OADImageRecolorInfo *mImageRecolorInfo;
    PDPlaceholder *mPlaceholder;
    _Bool mIsComment;
    PDAnimationInfo *mAnimationInfo;
    _Bool mHasOleChart;
    int mInheritedTextStylePlaceholderType;
}

@property(nonatomic) int inheritedTextStylePlaceholderType; // @synthesize inheritedTextStylePlaceholderType=mInheritedTextStylePlaceholderType;
- (void)setHasOleChart:(_Bool)arg1;
- (_Bool)hasOleChart;
- (id)animationInfo;
- (void)setAnimationInfo:(id)arg1;
- (_Bool)hasAnimationInfo;
- (void)setIsComment:(_Bool)arg1;
- (_Bool)isComment;
- (void)setPlaceholder:(id)arg1;
- (id)placeholder;
- (_Bool)hasPlaceholder;
- (void)setImageRecolorInfo:(id)arg1;
- (id)imageRecolorInfo;
- (struct CGRect)bounds;
- (_Bool)hasBounds;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface PDOrientationOptions : PDTransitionOptions
{
    int mOrientation;
}

- (void)setOrientation:(int)arg1;
- (int)orientation;

@end

__attribute__((visibility("hidden")))
@interface PDParagraphBuild : PDBuild
{
    NSMutableArray *mTimeNodeDataList;
    double mAutoAdvanceTime;
    _Bool mIsReversedParagraphOrder;
    int mBuildLevel;
    int mType;
}

- (_Bool)isEqual:(id)arg1;
- (void)setType:(int)arg1;
- (int)type;
- (void)setBuildLevel:(int)arg1;
- (int)buildLevel;
- (void)setIsReversedParagraphOrder:(_Bool)arg1;
- (_Bool)isReversedParagraphOrder;
- (void)setAutoAdvanceTime:(double)arg1;
- (double)autoAdvanceTime;
- (id)timeNodeDataList;
- (id)addTimeNodeData;
- (id)timeNodeDataAtIndex:(unsigned long long)arg1;
- (unsigned long long)timeNodeDataListCount;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDParallelTimeNode : PDTimeNode
{
}

@end

__attribute__((visibility("hidden")))
@interface PDPlaceholder : NSObject
{
    int mType;
    int mOrientation;
    int mSize;
    int mIndex;
    int mBoundsTrack;
}

+ (_Bool)isTextType:(int)arg1;
- (id)description;
- (void)setBoundsTrack:(int)arg1;
- (int)boundsTrack;
- (void)setIndex:(int)arg1;
- (int)index;
- (void)setSize:(int)arg1;
- (int)size;
- (void)setOrientation:(int)arg1;
- (int)orientation;
- (void)setType:(int)arg1;
- (int)type;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDPresentation : OCDDocument
{
    NSMutableArray *mSlideMasters;
    NSMutableArray *mNotesMasters;
    NSMutableArray *mSlides;
    NSMutableArray *mBulletBlips;
    struct CGSize mSlideSize;
    struct CGSize mNotesSize;
    _Bool mIsAutoPlay;
    _Bool mIsCommentsVisible;
    _Bool mIsLooping;
    _Bool mIsKiosk;
    NSMutableArray *mCommentAuthors;
}

- (id).cxx_construct;
- (void)ensureDefaultLayoutsForMasters;
- (void)flushUnusedMastersAndLayouts;
- (void)addCommentAuthor:(id)arg1;
- (id)commentAuthorAtIndex:(unsigned long long)arg1;
- (unsigned long long)commentAuthorCount;
- (void)setIsKiosk:(_Bool)arg1;
- (_Bool)isKiosk;
- (void)setIsLooping:(_Bool)arg1;
- (_Bool)isLooping;
- (void)setIsCommentsVisible:(_Bool)arg1;
- (_Bool)isCommentsVisible;
- (void)setIsAutoPlay:(_Bool)arg1;
- (_Bool)isAutoPlay;
- (void)setNotesSize:(struct CGSize)arg1;
- (struct CGSize)notesSize;
- (void)setSlideSize:(struct CGSize)arg1;
- (struct CGSize)slideSize;
- (id)bulletBlips;
- (unsigned int)bulletBlipCount;
- (unsigned int)addBulletBlip:(id)arg1;
- (id)bulletBlipAtIndex:(int)arg1;
- (unsigned long long)indexOfSlide:(id)arg1;
- (void)addSlide:(id)arg1;
- (id)slideAtIndex:(unsigned long long)arg1;
- (unsigned long long)slideCount;
- (void)addNotesMaster:(id)arg1;
- (id)notesMasterAtIndex:(unsigned long long)arg1;
- (unsigned long long)notesMasterCount;
- (void)addSlideMaster:(id)arg1;
- (id)slideMasterAtIndex:(unsigned long long)arg1;
- (unsigned long long)slideMasterCount;
- (void)dealloc;
- (id)init;
- (void)cacheGraphicStylesForSlideBase:(id)arg1;
- (void)cacheGraphicStyleForDrawable:(id)arg1 colorContext:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PDSideDirectionOptions : PDTransitionOptions
{
    int mDirection;
}

- (void)setDirection:(int)arg1;
- (int)direction;

@end

__attribute__((visibility("hidden")))
@interface PDPrismOptions : PDSideDirectionOptions
{
    _Bool mIsContent;
    _Bool mIsInverted;
}

- (void)setIsInverted:(_Bool)arg1;
- (_Bool)isInverted;
- (void)setIsContent:(_Bool)arg1;
- (_Bool)isContent;

@end

__attribute__((visibility("hidden")))
@interface PDRevealOptions : PDEightDirectionOptions
{
    _Bool mIsThroughBlack;
}

- (void)setIsThroughBlack:(_Bool)arg1;
- (_Bool)isThroughBlack;

@end

__attribute__((visibility("hidden")))
@interface PDRootTimeNode : PDParallelTimeNode
{
}

@end

__attribute__((visibility("hidden")))
@interface PDRotationOptions : PDTransitionOptions
{
    int mDirection;
}

- (void)setDirection:(int)arg1;
- (int)direction;

@end

__attribute__((visibility("hidden")))
@interface PDSequentialTimeNode : PDTimeNode
{
}

+ (id)newSequentialTimeNodeGroupForAnimationInfoWithClass:(Class)arg1;
+ (id)newSequentialTimeNodeGroupForAnimationInfo;
+ (id)newSequentialTimeNodeGroupForAnimationInfoWithClass:(Class)arg1 target:(id)arg2;
+ (unsigned long long)buildPartsFromTarget:(id)arg1;
+ (id)timeNodeUnion:(id)arg1 initWithClass:(Class)arg2;
@property(retain, nonatomic) NSString *groupId;
@property(nonatomic) double direction;
@property(nonatomic) double delay;
@property(nonatomic) int iterateType;
@property(nonatomic) int triggerType;
@property(nonatomic) int presetId;
@property(nonatomic) int presetClass;
- (void)setLevel2ParallelAttribute:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) PDAnimationTarget *target;
- (id)level3BehaviorAtNodeIndex:(unsigned long long)arg1 level2NodeIndex:(unsigned long long)arg2 level1NodeIndex:(unsigned long long)arg3;
- (id)level2ParallelTimeNodeGroupAtNodeIndex:(unsigned long long)arg1 level1NodeIndex:(unsigned long long)arg2;
- (id)level1ParallelTimeNodeGroupAtNodeIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface PDSetBehavior : PDAnimateBehavior
{
    id mValue;
}

- (void)setValue:(id)arg1;
- (id)value;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDSlide : PDSlideChild
{
    PDSlideLayout *mSlideLayout;
    NSMutableArray *mComments;
    PDNotesSlide *mNotesSlide;
}

- (_Bool)hasMappableSlideNumberShape;
- (id)background;
- (void)setInheritedTextStyle:(id)arg1 placeholderType:(int)arg2 defaultTextListStyle:(id)arg3;
- (void)doneWithContent;
- (void)addComment:(id)arg1;
- (id)commentAtIndex:(unsigned long long)arg1;
- (unsigned long long)commentCount;
- (id)parentSlideBase;
- (id)masterGraphicForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentShapePropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentTextStyleForTables;
- (id)parentTextStyleForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 defaultTextListStyle:(id)arg3 overrideIndex:(_Bool)arg4;
- (id)parentTextBodyPropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (void)setNotesSlide:(id)arg1;
- (id)notesSlide;
- (id)defaultTheme;
- (void)setSlideLayout:(id)arg1;
- (id)slideLayout;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface PDSlideLayout : PDSlideChild
{
    int mSlideLayoutType;
    PDSlideMaster *mSlideMaster;
}

- (_Bool)hasMappableSlideNumberShape;
- (void)doneWithContent;
- (id)parentSlideBase;
- (id)masterGraphicForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentShapePropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentTextStyleForTables;
- (id)parentTextStyleForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 defaultTextListStyle:(id)arg3 overrideIndex:(_Bool)arg4;
- (id)parentTextBodyPropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)background;
- (id)defaultTheme;
- (void)setSlideMaster:(id)arg1;
- (id)slideMaster;
- (void)setSlideLayoutType:(int)arg1;
- (int)slideLayoutType;
- (void)dealloc;
- (id)initWithSlideMaster:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PDSlideMaster : PDSlideBase
{
    NSMutableArray *mSlideLayouts;
    OADTheme *mTheme;
    OADColorMap *mColorMap;
    OADTextListStyle *mTitleTextStyle;
    OADTextListStyle *mBodyTextStyle;
    OADTextListStyle *mOtherTextStyle;
    _Bool mHeaderPlaceholderIsVisible;
    _Bool mFooterPlaceholderIsVisible;
    _Bool mSlideNumberPlaceholderIsVisible;
    _Bool mDateTimePlaceholderIsVisible;
}

@property(nonatomic) _Bool dateTimePlaceholderIsVisible; // @synthesize dateTimePlaceholderIsVisible=mDateTimePlaceholderIsVisible;
@property(nonatomic) _Bool slideNumberPlaceholderIsVisible; // @synthesize slideNumberPlaceholderIsVisible=mSlideNumberPlaceholderIsVisible;
@property(nonatomic) _Bool footerPlaceholderIsVisible; // @synthesize footerPlaceholderIsVisible=mFooterPlaceholderIsVisible;
@property(nonatomic) _Bool headerPlaceholderIsVisible; // @synthesize headerPlaceholderIsVisible=mHeaderPlaceholderIsVisible;
@property(retain, nonatomic) NSMutableArray *slideLayouts; // @synthesize slideLayouts=mSlideLayouts;
- (_Bool)hasMappableSlideNumberShape;
- (id)drawingTheme;
- (void)doneWithContent;
- (id)parentSlideBase;
- (id)masterGraphicForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentShapePropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)parentTextStyleForTables;
- (id)parentTextStyleForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 defaultTextListStyle:(id)arg3 overrideIndex:(_Bool)arg4;
- (id)parentTextBodyPropertiesForPlaceholderType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (id)placeholderWithType:(int)arg1 placeholderTypeIndex:(int)arg2 overrideIndex:(_Bool)arg3;
- (void)setOtherTextStyle:(id)arg1;
- (id)otherTextStyle;
- (void)setBodyTextStyle:(id)arg1;
- (id)bodyTextStyle;
- (void)setTitleTextStyle:(id)arg1;
- (id)titleTextStyle;
- (id)defaultTheme;
- (id)slideLayoutOfType:(int)arg1;
- (id)addSlideLayout;
- (void)addSlideLayout:(id)arg1;
- (id)slideLayoutAtIndex:(unsigned long long)arg1;
- (unsigned long long)slideLayoutCount;
- (id)styleMatrix;
- (id)colorMap;
- (id)fontScheme;
- (id)colorScheme;
- (void)setTheme:(id)arg1;
- (id)theme;
- (void)dealloc;
- (id)initWithDefaultsAndTheme:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDSlideNumberField : OADTextField
{
}

@end

__attribute__((visibility("hidden")))
@interface PDSlideTarget : PDAnimationTarget
{
}

@end

__attribute__((visibility("hidden")))
@interface PDSplitDirectionOptions : PDTransitionOptions
{
    int mOrientation;
    int mInOut;
}

- (void)setInOut:(int)arg1;
- (int)inOut;
- (void)setOrientation:(int)arg1;
- (int)orientation;

@end

__attribute__((visibility("hidden")))
@interface PDTimeAnimateValue : NSObject
{
    NSValue *mTimeValue;
    double mPercentTime;
}

- (void)setPercentTime:(double)arg1;
- (double)percentTime;
- (void)setTimeValue:(id)arg1;
- (id)timeValue;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDTimeCondition : NSObject
{
    _Bool mHasDelay;
    int mDelay;
    int mTriggerEvent;
    PDAnimationTarget *mTarget;
}

- (void)setTarget:(id)arg1;
- (id)target;
- (void)setTriggerEvent:(int)arg1;
- (int)triggerEvent;
- (void)setDelay:(int)arg1;
- (int)delay;
- (_Bool)hasDelay;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDTimeNodeUnion : NSObject
{
    PDAnimateTimeBehavior *mTimeBehavior;
    PDAnimateEffectBehavior *mEffectBehavior;
    PDAnimateMotionBehavior *mMotionBehavior;
    PDAnimateRotateBehavior *mRotateBehavior;
    PDAnimateScaleBehavior *mScaleBehavior;
    PDAnimateColorBehavior *mColorBehavior;
    PDAudioNode *mAudio;
    PDVideoNode *mVideo;
    PDParallelTimeNode *mParallelTimeNodeGroup;
    PDSequentialTimeNode *mSequentialTimeNodeGroup;
    PDSetBehavior *mSetBehavior;
    PDCmdBehavior *mCmdBehavior;
}

- (void)setCmdBehavior:(id)arg1;
- (id)cmdBehavior;
- (void)setBehavior:(id)arg1;
- (id)behavior;
- (void)setSequential:(id)arg1;
- (id)sequential;
- (void)setParallel:(id)arg1;
- (id)parallel;
- (void)setVideo:(id)arg1;
- (id)video;
- (void)setAudio:(id)arg1;
- (id)audio;
- (void)setColorBehavior:(id)arg1;
- (id)colorBehavior;
- (void)setScaleBehavior:(id)arg1;
- (id)scaleBehavior;
- (void)setRotateBehavior:(id)arg1;
- (id)rotateBehavior;
- (void)setMotionBehavior:(id)arg1;
- (id)motionBehavior;
- (void)setEffectBehavior:(id)arg1;
- (id)effectBehavior;
- (void)setTimeBehavior:(id)arg1;
- (id)timeBehavior;
- (id)commonBehavior;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDTransition : OADProperties
{
    _Bool mHasType;
    int mType;
    _Bool mHasSpeed;
    int mSpeed;
    _Bool mHasAdvanceOnClick;
    _Bool mIsAdvanceOnClick;
    _Bool mHasAdvanceAfterTime;
    int mAdvanceAfterTime;
    PDTransitionOptions *mOptions;
}

- (void)setOptions:(id)arg1;
- (id)options;
- (_Bool)hasTransitionOptions;
- (void)setAdvanceAfterTime:(int)arg1;
- (int)advanceAfterTime;
- (_Bool)hasAdvanceAfterTime;
- (void)setSpeed:(int)arg1;
- (int)speed;
- (_Bool)hasSpeed;
- (void)setIsAdvanceOnClick:(_Bool)arg1;
- (_Bool)isAdvanceOnClick;
- (_Bool)hasIsAdvanceOnClick;
- (void)setType:(int)arg1;
- (int)type;
- (_Bool)hasType;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PDVideoNode : PDMediaNode
{
    _Bool mIsFullScreen;
}

- (void)setIsFullScreen:(_Bool)arg1;
- (_Bool)isFullScreen;

@end

__attribute__((visibility("hidden")))
@interface PDWheelDirectionOptions : PDTransitionOptions
{
    int mSpokes;
}

- (void)setSpokes:(int)arg1;
- (int)spokes;

@end

__attribute__((visibility("hidden")))
@interface PMBackgroundMapper : CMMapper
{
    OADBackground *mBackground;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithOadBackground:(id)arg1 parent:(id)arg2;
- (struct CGRect)slideRect;

@end

__attribute__((visibility("hidden")))
@interface PMBulletMapper : CMMapper
{
    OADParagraphProperties *mProperties;
    CMStyle *mStyle;
    int mFontSize;
}

+ (id)stringForIndex:(unsigned long long)arg1 withFormat:(int)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)dealloc;
- (id)initWithOadProperties:(id)arg1 fontSize:(int)arg2 parent:(id)arg3;
- (id)makeBulletWithListState:(id)arg1;
- (void)mapBulletColorWithState:(id)arg1;
- (id)bulletFontName;
- (int)bulletSize;

@end

__attribute__((visibility("hidden")))
@interface PMDrawableMapper : CMDrawableMapper
{
    OADShape *mShape;
    CMDrawingContext *mDrawingContext;
    _Bool mTopLevelMapper;
}

- (void)mapBounds;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (struct CGRect)slideRect;
- (_Bool)isTopLevelMapper;
- (void)setTopLevelMapper:(_Bool)arg1;
- (id)drawingContext;
- (void)setDrawingContext:(id)arg1;
- (void)dealloc;
- (struct CGRect)transformRectToPage:(struct CGRect)arg1;
- (struct CGRect)shapeTextBoxWithState:(id)arg1;
- (void)mapFreeForm:(id)arg1 orientedBounds:(id)arg2 transformedBounds:(struct CGRect *)arg3 state:(id)arg4;
- (void)mapShapeAsBackgroundAt:(id)arg1 withState:(id)arg2;
- (void)mapChartAt:(id)arg1 withState:(id)arg2;
- (void)mapDiagramAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtGroupAt:(id)arg1 withState:(id)arg2;
- (void)mapRectangularShapeAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtShapeAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtImageAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PMSlideMapper : CMMapper
{
    PDSlideBase *mSlide;
    struct CGRect mRect;
}

- (id).cxx_construct;
- (struct CGRect)slideRect;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)styleMatrix;
- (id)defaultTheme;
- (id)slideName;
- (id)initWithPDSlide:(id)arg1 slideRect:(struct CGRect)arg2 parent:(id)arg3;
- (void)mapMasterGraphicsAt:(id)arg1 withState:(id)arg2;
- (void)mapDrawablesAt:(id)arg1 withState:(id)arg2;
- (void)mapBackgroundAt:(id)arg1 recursive:(_Bool)arg2 withState:(id)arg3;
- (void)mapMasterSlideAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PMMasterSlideMapper : PMSlideMapper
{
}

@end

__attribute__((visibility("hidden")))
@interface PMParagraphMapper : CMMapper
{
    OADParagraph *mParagraph;
}

- (void)mapAt:(id)arg1 withState:(id)arg2 isFirstParagraph:(_Bool)arg3;
- (id)initWithOadParagraph:(id)arg1 parent:(id)arg2;
- (void)addEndCharacterStyleToStyle:(id)arg1;
- (id)fontScheme;
- (id)copyParagraphStyleWithState:(id)arg1 isFirstParagraph:(_Bool)arg2;
- (int)firstTextRunFontSize;

@end

__attribute__((visibility("hidden")))
@interface PMPresentationMapper : CMMapper <CMMapperRoot>
{
    int mWidth;
    PDPresentation *mPresentation;
    NSMutableArray *mSlideNames;
    NSMutableArray *mSlideGuids;
    NSString *mResourceUrlPrefix;
    NSString *mResourceUrlProtocol;
    CMArchiveManager *mArchiver;
    OIXMLDocument *mXhtmlDoc;
    OIXMLElement *mBodyElement;
    unsigned int mNextCommit;
    unsigned int mCurrentSlide;
    _Bool mHasPushedFirstSlides;
    float mSlideOriginY;
}

- (void)finishMappingWithState:(id)arg1;
- (void)mapElement:(id)arg1 atIndex:(unsigned long long)arg2 withState:(id)arg3 isLastElement:(_Bool)arg4;
- (void)_pushEmptySlideWithMessage:(id)arg1;
- (void)startMappingWithState:(id)arg1;
- (struct CGSize)slideSize;
- (struct CGSize)pageSizeForDevice;
- (id)documentTitle;
- (id)blipAtIndex:(unsigned int)arg1;
- (id)archiver;
- (void)dealloc;
- (id)initWithPDPresentation:(id)arg1 archiver:(id)arg2;
- (void)setHtmlDocumentSizeInArchiver;
- (void)mapDefaultCssStylesAt:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PMShapeTextMapper : CMMapper
{
    OADTextBody *mTextBody;
    OADOrientedBounds *mBounds;
    CMStyle *mStyle;
    _Bool mRectangular;
}

- (int)textAnchor;
- (_Bool)isTableCellContent;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setRectangular:(_Bool)arg1;
- (void)dealloc;
- (id)initWithOadTextBody:(id)arg1 bounds:(id)arg2 parent:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PMState : CMState
{
    CMOutlineState *mListState;
    OADTablePartStyle *mCurrentRowStyle;
}

- (id)currentRowStyle;
- (void)setCurrentRowStyle:(id)arg1;
- (id)listState;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PMTableCellMapper : CMMapper
{
    OADTableCell *mCell;
    CMStyle *mStyle;
    int mColIndex;
    unsigned long long mRowIndex;
    float mWidth;
}

- (float)widthWithState:(id)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)dealloc;
- (id)initWithOadTableCell:(id)arg1 rowIndex:(unsigned long long)arg2 columnIndex:(int)arg3 parent:(id)arg4;
- (void)mapCellPropertiesWithState:(id)arg1 textAnchor:(int)arg2;
- (void)mapBordersWithState:(id)arg1;
- (id)rowMapper;
- (id)tableMapper;

@end

__attribute__((visibility("hidden")))
@interface PMTableMapper : CMMapper
{
    OADTable *mTable;
    CMDrawableStyle *mStyle;
    CMTableGridInfo *mGrid;
    OADOrientedBounds *mBounds;
}

- (unsigned long long)rowCount;
- (id)tableBorderStyle;
- (id)defaultCellFillForRow:(unsigned long long)arg1 withState:(id)arg2;
- (id)defaultCellFillWithState:(id)arg1;
- (float)columnWidthAtIndex:(unsigned long long)arg1 state:(id)arg2;
- (id)grid;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)dealloc;
- (id)initWithOadTable:(id)arg1 bounds:(id)arg2 parent:(id)arg3;
- (id)cellStyle;
- (void)mapColumnGridAt:(id)arg1 withState:(id)arg2;
- (void)mapTablePropertiesWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PMTableRowMapper : CMMapper
{
    OADTable *mTable;
    OADTableRow *mRow;
    unsigned long long mRowIndex;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (unsigned long long)cellCount;
- (float)height;
- (id)initWithOadTable:(id)arg1 rowIndex:(unsigned long long)arg2 parent:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PMTextRunMapper : CMMapper
{
    OADTextRun *mTextRun;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)addFontForLanguageType:(int)arg1 toCharacterStyle:(id)arg2;
- (id)initWithOadTextRun:(id)arg1 parent:(id)arg2;
- (id)fontScheme;
- (id)copyCharacterStyleWithState:(id)arg1;
- (_Bool)_isDefaultFill:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PMTop : CMTop <OIProgressiveReaderDelegate>
{
    CMArchiveManager *_archiver;
    PMState *_state;
    PMPresentationMapper *_mapper;
    _Bool _xml;
}

+ (void)fillHTMLArchiveForPowerPointData:(id)arg1 fileName:(id)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;
+ (void)fillHTMLArchiveForPowerPointFile:(id)arg1 xmlFlag:(_Bool)arg2 archiver:(id)arg3;
+ (void)fillHTMLArchiveForPowerPointFrom:(id)arg1 inMemory:(_Bool)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;
- (void)readFile:(id)arg1 xmlFlag:(_Bool)arg2 archiver:(id)arg3;
- (void)readData:(id)arg1 fileName:(id)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;
- (_Bool)isCancelled;
- (void)readerDidEndDocument:(id)arg1;
- (void)readerDidReadElement:(id)arg1 atIndex:(unsigned long long)arg2 inDocument:(id)arg3 isLastElement:(_Bool)arg4;
- (void)readerDidStartDocument:(id)arg1 withElementCount:(long long)arg2;
- (void)dealloc;
- (void)readFrom:(id)arg1 inMemory:(_Bool)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface PXAnimation : NSObject
{
}

+ (void)readAnimationFromTimingXmlNode:(struct _xmlNode *)arg1 tgtAnimation:(id)arg2 drawingState:(id)arg3;
+ (id)readGraphicBuild:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)readOleChartBuild:(struct _xmlNode *)arg1;
+ (int)readChartBuildType:(id)arg1;
+ (id)readParagraphBuild:(struct _xmlNode *)arg1;
+ (void)readAnimSequentialElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimParallelElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readCommonBehaviorData:(struct _xmlNode *)arg1 tgtCommonBehaviorData:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimRotationElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimSetElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (id)readAnimVariant:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readAnimCmdElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimVideoElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimAudioElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readCommonMediaNodeData:(struct _xmlNode *)arg1 commonMediaData:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimScaleElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimMotionElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readPointFromNode:(struct _xmlNode *)arg1 tgtPoint:(struct CGPoint *)arg2;
+ (void)readAnimEffectElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readAnimElement:(struct _xmlNode *)arg1 timeNode:(id)arg2 drawingState:(id)arg3;
+ (void)readChartType:(id)arg1 oleChartTarget:(id)arg2;
+ (void)readChartBuildStep:(id)arg1 chartTarget:(id)arg2;
+ (id)newShapeTarget:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (id)newTarget:(struct _xmlNode *)arg1 drawingState:(id)arg2;
+ (void)readTriggerEvent:(id)arg1 timeCondition:(id)arg2;
+ (void)readCondition:(struct _xmlNode *)arg1 timeCondition:(id)arg2 drawingState:(id)arg3;
+ (void)readStConditionList:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (void)readIterate:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (void)readChildTimeNodeList:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;
+ (void)readRestartType:(id)arg1 commonTimeNodeData:(id)arg2;
+ (void)readPresetClass:(id)arg1 commonTimeNodeData:(id)arg2;
+ (void)readTimeNodeType:(id)arg1 commonTimeNodeData:(id)arg2;
+ (void)readCommonTimeNodeData:(struct _xmlNode *)arg1 commonTimeNodeData:(id)arg2 drawingState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PXComment : NSObject
{
}

+ (void)readComments:(id)arg1 slide:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PXCommentAuthor : NSObject
{
}

+ (void)readCommentAuthors:(id)arg1 presentation:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PXCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface PXLegacyText : NSObject
{
}

+ (void)readLegacyTextFromData:(id)arg1 toShape:(id)arg2 state:(id)arg3;
+ (void)readLegacyTextGlobalsFromData:(id)arg1 state:(id)arg2;
+ (struct PptTextMasterStyleAtom *)textMasterStyleOfType:(int)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PXMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface PXNotesMaster : NSObject
{
}

+ (id)readFromPackagePart:(id)arg1 presentationState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PXNotesSlide : NSObject
{
}

+ (id)readFromPackagePart:(id)arg1 presentationState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PXOfficeArtClient : OAXClient
{
    PXPresentationState *mPresentationState;
}

+ (int)readPlaceholderBoundsTrackFromNode:(struct _xmlNode *)arg1;
+ (int)readPlaceholderTypeFromNode:(struct _xmlNode *)arg1;
- (_Bool)chartAutoStrokeIsHollow;
- (_Bool)chartAutoFillIsHollow;
- (void)readBlipExtWithURI:(id)arg1 fromNode:(struct _xmlNode *)arg2 toDrawable:(id)arg3 state:(id)arg4;
- (id)readOle:(struct _xmlNode *)arg1 state:(id)arg2;
- (void)postprocessHyperlink:(id)arg1 relationship:(id)arg2 state:(id)arg3;
- (id)readClientTextField:(struct _xmlNode *)arg1 paragraph:(id)arg2 state:(id)arg3;
- (void)readClientDataFromGraphicalFramePropertiesNode:(struct _xmlNode *)arg1 toDrawable:(id)arg2 state:(id)arg3;
- (void)readClientDataFromPictureNode:(struct _xmlNode *)arg1 toImage:(id)arg2 state:(id)arg3;
- (void)readClientDataFromShapeNode:(struct _xmlNode *)arg1 toShape:(id)arg2 state:(id)arg3;
- (id)presentationState;
- (id)initWithState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PXPresentation : NSObject
{
}

+ (id)readFromPackage:(id)arg1 fileName:(id)arg2 reader:(id)arg3 cancel:(id)arg4 isThumbnail:(_Bool)arg5 delegate:(id)arg6;
+ (void)readSlideIndicesWithPresentationPart:(id)arg1 presentationState:(id)arg2;
+ (void)readPresentationProperties:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (struct CGSize)readSizeFromChildOfElement:(struct _xmlNode *)arg1 childName:(const char *)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PXPresentationState : OCXReadState
{
    NSMutableDictionary *mModelObjects;
    OAXDrawingState *mOfficeArtState;
    OAVReadState *mOAVState;
    OAXTableStyleCache *mTableStyleCache;
    NSMutableDictionary *mSlideURLToIndexMap;
    PDPresentation *mTgtPresentation;
    id <TCCancelDelegate> mCancel;
    CXNamespace *_PXPresentationMLNamespace;
}

@property(retain, nonatomic) CXNamespace *PXPresentationMLNamespace; // @synthesize PXPresentationMLNamespace=_PXPresentationMLNamespace;
@property(retain, nonatomic) id <TCCancelDelegate> cancelDelegate; // @synthesize cancelDelegate=mCancel;
- (void)setupNSForXMLFormat:(int)arg1;
- (_Bool)isCancelled;
- (void)setTgtPresentation:(id)arg1;
- (id)tgtPresentation;
- (void)setSlideIndex:(long long)arg1 forSlideURL:(id)arg2;
- (long long)slideIndexForSlideURL:(id)arg1;
- (id)tableStyleCache;
- (void)resetOfficeArtState;
- (id)officeArtState;
- (void)setModelObject:(id)arg1 forLocation:(id)arg2;
- (id)modelObjectForLocation:(id)arg1;
- (id)oavState;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface PXReader : OCXReader
{
}

- (id)defaultPassphrase;
- (id)read;

@end

__attribute__((visibility("hidden")))
@interface PXSlide : NSObject
{
}

+ (id)readFromPackagePart:(id)arg1 presentationState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PXSlideBase : NSObject
{
}

+ (void)readFromPackagePart:(id)arg1 toSlideBase:(id)arg2 presentationState:(id)arg3;
+ (id)readLegacyDrawables:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface PXSlideChild : NSObject
{
}

+ (void)readFromPackagePart:(id)arg1 toSlideChild:(id)arg2 presentationState:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PXSlideLayout : NSObject
{
}

+ (id)stringForSlideLayoutType:(int)arg1;
+ (void)readFromPackagePart:(id)arg1 toSlideLayout:(id)arg2 presentationState:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface PXSlideMaster : NSObject
{
}

+ (id)readFromPackagePart:(id)arg1 presentationState:(id)arg2;
+ (void)readTextStylesFromNode:(struct _xmlNode *)arg1 slideMaster:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface PXTransition : NSObject
{
}

+ (void)readTransitionFromNode:(struct _xmlNode *)arg1 tgtTransition:(id)arg2 drawingState:(id)arg3;
+ (void)initialize;
+ (int)readInOut:(struct _xmlNode *)arg1 defaultValue:(int)arg2;
+ (int)readOrientation:(struct _xmlNode *)arg1 attribute:(const char *)arg2 defaultValue:(int)arg3;
+ (int)readReverseDirection:(struct _xmlNode *)arg1 defaultValue:(int)arg2;
+ (int)readDirection:(struct _xmlNode *)arg1 defaultValue:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface PXVmlClient : NSObject <OAVReadClient>
{
}

+ (int)vmlSupportLevel;
+ (void)readClientDataFromGroup:(struct _xmlNode *)arg1 toGroup:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromShape:(struct _xmlNode *)arg1 toGraphic:(id)arg2 state:(id)arg3;
+ (id)colorWithRecolorInfoColorString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface PXVmlState : OAVReadState
{
    ESDObject *mLegacyTextGlobals;
    PBPresentationReaderState *mLegacyPresentationState;
}

- (void)setLegacyPresentationState:(id)arg1;
- (id)legacyPresentationState;
- (void)setLegacyTextGlobals:(id)arg1;
- (id)legacyTextGlobals;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface PptHyperlinkBlock : NSObject
{
    ESDContainer *mInteractiveInfoContainerHolder;
    ESDObject *mTxInteractiveInfoAtomHolder;
}

- (void)setTxInteractiveInfoAtomHolder:(id)arg1;
- (struct PptTxInteracInfoAtom *)txtInteractiveInfoAtom;
- (void)setInteractiveInfoContainerHolder:(id)arg1;
- (id)interactiveInfoContainerHolder;

@end

__attribute__((visibility("hidden")))
@interface PptMetaCharacterBlock : NSObject
{
    int mType;
    int mPosition;
    int mExtraData;
}

- (int)extraData;
- (void)setPosition:(int)arg1;
- (int)position;
- (id)initWithType:(int)arg1 position:(int)arg2 extraData:(int)arg3;
- (id)initWithType:(int)arg1 position:(int)arg2;
- (int)type;

@end

__attribute__((visibility("hidden")))
@interface PptTextBlock : NSObject
{
    struct PptTextHeaderAtom *mTextHeader;
    NSMutableString *mText;
    struct PptTextBlockStylingAtom *mStyleText;
    NSMutableArray *mMetaCharacterFields;
    NSMutableArray *mBookmarks;
    NSMutableArray *mHyperlinks;
    struct PptTextRulerAtom *mTextRuler;
}

- (struct PptCharRun *)characterRunAtIndex:(int)arg1;
- (int)characterRunCount;
- (struct PptParaRun *)paragraphRunAtIndex:(int)arg1;
- (int)paragraphRunCount;
- (struct PptTextRulerAtom *)textRuler;
- (id)bookmarks;
- (id)hyperlinks;
- (id)metaCharacterFields;
- (id)text;
- (unsigned int)textIndex;
- (int)textType;
- (void)writeTextBlock:(id)arg1;
- (void)readTextBlock:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)readMetaCharacterFieldsBookmarksAndHyperlinks:(id)arg1;
- (void)readStyles:(id)arg1;
- (void)readString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface QLTop : NSObject
{
}

+ (void)fillHTMLArchiveForOfficeData:(id)arg1 fileName:(id)arg2 dataFormat:(int)arg3 archiver:(id)arg4;
+ (void)fillHTMLArchiveForOfficeFile:(id)arg1 dataFormat:(int)arg2 archiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface STPropVariant : NSObject
{
    struct _SsrwPropVariant mProp;
}

- (void)dealloc;
- (id)asDataOfType:(int *)arg1;
- (struct _SsrwPropVariant *)propVariant;
- (void)setBlobValue:(id)arg1;
- (void)setStringValue:(id)arg1;
- (void)setLongValue:(int)arg1;
- (void)setShortValue:(short)arg1;

@end

__attribute__((visibility("hidden")))
@interface STPropertyStorage : NSObject
{
    struct _SsrwPropertyStorage *m_pPropertyStorage;
}

- (void)setBlobDocumentPropertyWithName:(id)arg1 to:(id)arg2;
- (void)setStringDocumentPropertyWithId:(int)arg1 to:(id)arg2;
- (void)setShortDocumentPropertyWithId:(int)arg1 to:(short)arg2;
- (void)setLongDocumentPropertyWithId:(int)arg1 to:(int)arg2;
- (void)setDocumentPropertyWithId:(int)arg1 to:(id)arg2;
- (id)getDocumentPropertyWithName:(id)arg1 propType:(int *)arg2;
- (id)getStringDocumentPropertyWithId:(int)arg1;
- (short)getShortDocumentPropertyWithId:(int)arg1;
- (int)getLongDocumentPropertyWithId:(int)arg1;
- (id)getDocumentPropertyWithId:(int)arg1 propType:(int *)arg2;
- (void)dealloc;
- (void)close;
- (id)initWithPropertyStorage:(struct _SsrwPropertyStorage *)arg1;

@end

__attribute__((visibility("hidden")))
@interface STSStgObject : NSObject
{
}

+ (void)throwIfError:(int)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface STStorage : STSStgObject
{
    struct _Storage *m_pCStorage;
}

- (void)setClass:(CDStruct_214f2dba)arg1;
- (int)getChildType:(id)arg1;
- (id)getChildrenInfo;
- (id)getInfo;
- (id)openStorage:(id)arg1 withMode:(int)arg2;
- (id)openStream:(id)arg1 withMode:(int)arg2;
- (void)close;
- (void)dealloc;
- (id)initWithCStorage:(struct _Storage *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface STRootStorage : STStorage
{
    struct _RootStorage *m_pCRoot;
    NSMutableData *m_StorageData;
    void *m_pvBuf;
}

- (void *)resizeStorageBuffer:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithMutableData:(id)arg1 andMode:(int)arg2;
- (id)initWithName:(id)arg1 andMode:(int)arg2;
- (void)setDefaultDocumentProperties;
- (void)setBlobDocumentPropertyWithId:(int)arg1 to:(void *)arg2 givenPropStream:(int)arg3;
- (void)setShortDocumentPropertyWithId:(int)arg1 to:(short)arg2 givenPropStream:(int)arg3;
- (void)setLongDocumentPropertyWithId:(int)arg1 to:(int)arg2 givenPropStream:(int)arg3;
- (void)setStringDocumentPropertyWithId:(int)arg1 to:(id)arg2 givenPropStream:(int)arg3;
- (void)setDocumentProperty:(int)arg1 withId:(int)arg2 AndType:(int)arg3 AndValue:(void *)arg4;
- (short)getShortDocumentPropertyWithId:(int)arg1 givenPropStream:(int)arg2;
- (int)getLongDocumentPropertyWithId:(int)arg1 givenPropStream:(int)arg2;
- (id)getStringDocumentPropertyWithId:(int)arg1 givenPropStream:(int)arg2;
- (id)getDocumentProperty:(int)arg1 withId:(int)arg2 PropType:(int *)arg3 throwOnError:(_Bool)arg4;
- (id)getDocumentProperty:(int)arg1 withId:(int)arg2 PropType:(int *)arg3;

@end

__attribute__((visibility("hidden")))
@interface STStgInfo : NSObject
{
    NSString *m_pstrName;
    int m_type;
    unsigned int m_userFlags;
    unsigned int m_size;
    long long m_creationTime;
    long long m_modificationTime;
    int m_accessMode;
    CDStruct_214f2dba m_clsid;
}

- (void)setCLSID:(CDStruct_214f2dba)arg1;
- (CDStruct_214f2dba)getCLSID;
- (void)setAccessMode:(int)arg1;
- (int)getAccessMode;
- (void)setModificationTime:(long long)arg1;
- (long long)getModificationTime;
- (void)setCreationTime:(long long)arg1;
- (long long)getCreationTime;
- (void)setSize:(unsigned int)arg1;
- (unsigned int)getSize;
- (void)setUserFlags:(unsigned int)arg1;
- (unsigned int)getUserFlags;
- (void)setType:(int)arg1;
- (int)getType;
- (void)setName:(id)arg1;
- (id)getName;
- (void)dealloc;
- (id)initWithStgInfo:(struct _StgInfo *)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface STStream : STSStgObject
{
    struct _Stream *m_pCStream;
}

@property(readonly, nonatomic) struct _Stream *cStream; // @synthesize cStream=m_pCStream;
- (void)writeString16NoTerminator:(id)arg1;
- (void)writeString16:(id)arg1;
- (void)writeChar16:(unsigned short)arg1;
- (void)writeFloat64:(double)arg1;
- (void)writeFloat32:(float)arg1;
- (void)writeUInt32:(unsigned int)arg1;
- (void)writeSInt32:(int)arg1;
- (void)writeUInt16:(unsigned short)arg1;
- (void)writeSInt16:(short)arg1;
- (void)writeBool8:(unsigned char)arg1;
- (void)writeChar8:(BOOL)arg1;
- (void)writeUInt8:(unsigned char)arg1;
- (void)writeBytes:(id)arg1;
- (id)readString16:(unsigned int)arg1;
- (unsigned short)readChar16;
- (double)readFloat64;
- (float)readFloat32;
- (unsigned long long)readUInt64;
- (unsigned int)readUInt32;
- (int)readSInt32;
- (unsigned short)readUInt16;
- (short)readSInt16;
- (unsigned char)readBool8;
- (unsigned char)readUInt8;
- (BOOL)readChar8;
- (id)readBytes:(unsigned int)arg1;
- (void)setClass:(CDStruct_214f2dba)arg1;
- (unsigned int)getPos;
- (void)seek:(int)arg1 fromOrigin:(int)arg2;
- (id)getInfo;
- (void)releaseCStream;
- (void)close;
- (void)dealloc;
- (id)initWithCStream:(struct _Stream *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCBackgroundThreadManager : NSObject
{
    id <TCCancelDelegate> mCancelDelegate;
    _Bool mIsWaiting;
    unsigned long long mBlockCount;
    NSObject<OS_dispatch_queue> *mQueue;
    NSObject<OS_dispatch_group> *mGroup;
    NSObject<OS_dispatch_queue> *mProgressReportingQueue;
    TCMessageContext *mMessageContext;
    TCProgressContext *mProgressContext;
}

@property(retain) TCProgressContext *progressContext; // @synthesize progressContext=mProgressContext;
@property(retain) TCMessageContext *messageContext; // @synthesize messageContext=mMessageContext;
- (void)reportWarning:(struct TCTaggedMessageStructure *)arg1;
- (void)waitUntilComplete;
- (void)addASyncBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1;
@property(readonly) _Bool isCancelled;

@end

__attribute__((visibility("hidden")))
@interface TCBundleLookupClass : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface TCBundleResourceDebugEntry : NSObject
{
    unsigned long long mCacheCount;
    unsigned long long mUncachedCount;
}

+ (void)dumpUsage;
+ (void)addEntry:(id)arg1 ofType:(id)arg2 inPackage:(id)arg3 cacheResult:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TCBundleResourceException : NSException
{
}

@end

__attribute__((visibility("hidden")))
@interface TCBundleResourceManager : NSObject
{
    NSMutableDictionary *mPackageMap;
}

+ (void)disposeInstance;
+ (id)instance;
- (struct _xmlDoc *)xmlDocumentForResource:(id)arg1 ofType:(id)arg2 inPackage:(id)arg3 cacheResult:(_Bool)arg4;
- (id)dataForResource:(id)arg1 ofType:(id)arg2 inPackage:(id)arg3 cacheResult:(_Bool)arg4;
- (void)dealloc;
- (id)init;
- (id)packageWithName:(id)arg1 cacheResult:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCBundleResourcePackage : NSObject
{
    OISFUZipArchive *mZipArchive;
    NSMutableDictionary *mEntryMap;
}

- (id)entryWithName:(id)arg1 cacheResult:(_Bool)arg2;
- (void)dealloc;
- (id)initWithZipArchive:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCBundleResourcePackageEntry : NSObject
{
    OISFUZipEntry *mZipEntry;
    struct _xmlDoc *mXmlDocument;
}

- (struct _xmlDoc *)xmlDocument;
- (id)data;
- (void)dealloc;
- (id)initWithZipEntry:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCColorPalettizer : NSObject
{
    struct _tagOctree *m_pTree;
    _Bool isDefaultPaletteSize;
}

- (int)paletteIndexFromQuadColor:(struct _tagRgbQuad)arg1;
- (int)paletteIndexFromTSUColor:(id)arg1;
- (id)getPaletteData;
- (id)getPngPaletteData;
- (id)getPaletteDataRaw;
- (unsigned int)paletteColorCount;
- (void)createPalette;
- (_Bool)addQuadColor:(struct _tagRgbQuad)arg1;
- (_Bool)addTSUColor:(id)arg1;
- (void)dealloc;
- (id)initWitDefaultPaletteSize;
- (id)initWitMaxPaletteSize:(unsigned int)arg1;
- (int)rgbToIndexOctree:(struct _tagOctree *)arg1 source:(struct _tagRgbQuad)arg2 destination:(char *)arg3;
- (unsigned short)getPaletteFromOctree:(struct _tagOctreeNode *)arg1 paletteEntry:(struct _tagRgbQuad *)arg2 index:(unsigned short)arg3;
- (int)reduceOctree:(struct _tagOctree *)arg1;
- (int)addPixelToOctree:(struct _tagOctree *)arg1 pixel:(struct _tagRgbQuad)arg2;
- (int)deleteListOctree:(struct _tagLevelItem *)arg1;
- (int)deleteNodeOctree:(struct _tagOctreeNode *)arg1;
- (int)createNodeOctree:(struct _tagOctreeNode **)arg1 parent:(struct _tagOctreeNode *)arg2;
- (int)deleteOctree:(struct _tagOctree *)arg1;
- (int)createOctree:(struct _tagOctree **)arg1 maxPaletteSize:(unsigned short)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCCommonMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface TCDumpType : NSObject
{
    NSString *mName;
}

- (void)fromXml:(struct _xmlNode *)arg1 toBinary:(struct __sFILE *)arg2 state:(id)arg3;
- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (void)setName:(id)arg1;
- (id)name;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TCDumpArray : TCDumpType
{
    int mCount;
    int mCountFieldType;
    NSString *mCountFieldName;
    int mPaddingSize;
    TCDumpType *mElementType;
}

- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (void)dealloc;
- (id)initWithCountFieldName:(id)arg1 elementType:(id)arg2;
- (id)initWithCountFieldType:(int)arg1 elementType:(id)arg2;
- (id)initWithCount:(int)arg1 elementType:(id)arg2;
- (id)initWithCount:(int)arg1 countFieldType:(int)arg2 countFieldName:(id)arg3 elementType:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TCDumpBinaryToXmlState : NSObject
{
    NSString *mCurrentFieldName;
    NSMutableDictionary *mFieldNameToValueMap;
}

- (id)valueForField:(id)arg1;
- (id)valueForCurrentField;
- (void)cacheValueforCurrentField:(id)arg1;
- (void)setCurrentField:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TCDumpBlob : TCDumpType
{
    unsigned long long mSize;
}

- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (id)initWithSize_:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCDumpContainer : TCDumpType
{
    int mByteSize;
    int mByteSizeFieldType;
    NSString *mByteSizeFieldName;
    int mByteSizeCorrection;
    TCDumpType *mElementType;
}

- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (void)dealloc;
- (id)initWithByteSizeFieldName:(id)arg1 byteSizeCorrection:(int)arg2 elementType:(id)arg3;
- (id)initWithByteSizeFieldName:(id)arg1 elementType:(id)arg2;
- (id)initWithByteSizeFieldType:(int)arg1 byteSizeCorrection:(int)arg2 elementType:(id)arg3;
- (id)initWithByteSizeFieldType:(int)arg1 elementType:(id)arg2;
- (id)initWithByteSize:(int)arg1 elementType:(id)arg2;
- (id)initWithByteSize:(int)arg1 byteSizeFieldType:(int)arg2 byteSizeFieldName:(id)arg3 byteSizeCorrection:(int)arg4 elementType:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface TCDumpEmfPlusContainer : TCDumpType
{
}

- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface TCDumpEnum : NSObject
{
    NSString *mTypeName;
    NSMutableDictionary *mValueToNameMap;
    NSMutableDictionary *mNameToValueMap;
}

- (id)nameForValue:(int)arg1;
- (id)valueForName:(id)arg1;
- (id)typeName;
- (void)dealloc;
- (id)initWithTypeName:(id)arg1 pairs:(struct TCDumpEnumPair *)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCDumpField : NSObject
{
    TCDumpType *mType;
    NSString *mName;
}

- (id)name;
- (id)type;
- (id)initWithType:(id)arg1 name:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCDumpNumeric : TCDumpType
{
    int mType;
    TCDumpEnum *mEnumType;
}

- (void)fromXml:(struct _xmlNode *)arg1 toBinary:(struct __sFILE *)arg2 state:(id)arg3;
- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (id)enumType;
- (int)type;
- (id)initWithType:(int)arg1;
- (void)dealloc;
- (id)initWithType:(int)arg1 enumType:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCDumpSettings : NSObject
{
}

+ (_Bool)isDumpForQA;
+ (void)setDumpForQA:(_Bool)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCDumpStruct : TCDumpType
{
    long long mSize;
    NSString *mSizeFieldName;
    long long mSizeCorrection;
    NSMutableArray *mMembers;
}

- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (void)dealloc;
- (id)initWithSizeFieldName:(id)arg1 sizeCorrection:(int)arg2 members:(id)arg3;
- (id)initWithSizeFieldName:(id)arg1 members:(id)arg2;
- (id)initWithSize:(long long)arg1 members:(id)arg2;
- (id)initWithMembers:(id)arg1;
- (id)initWithSize:(long long)arg1 sizeFieldName:(id)arg2 sizeCorrection:(int)arg3 members:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TCDumpUnion : TCDumpType
{
    NSString *mSelectorFieldName;
    TCDumpNumeric *mSelectorField;
    NSMutableDictionary *mSelectorToMemberMap;
}

- (void)fromBinary:(struct __sFILE *)arg1 toXml:(struct _xmlNode *)arg2 state:(id)arg3;
- (void)dealloc;
- (id)initWithSelectorField:(id)arg1 members:(id)arg2;
- (id)initWithSelectorFieldName:(id)arg1 selectorEnumType:(id)arg2 members:(id)arg3;
- (id)initWithSelectorFieldName:(id)arg1 selectorEnumType:(id)arg2 selectorField:(id)arg3 members:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface TCEnumerationMap : NSObject
{
    struct __CFDictionary *m_valueToString;
    struct __CFDictionary *m_stringToValue;
    _Bool m_caseSensitive;
}

- (id)stringForValue:(int)arg1;
- (long long)valueForString:(id)arg1;
- (void)dealloc;
- (id)initWithStructs:(const struct TCEnumerationStruct *)arg1 count:(int)arg2 caseSensitive:(_Bool)arg3;
- (id)initWithStructs:(const struct TCEnumerationStruct *)arg1 count:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCEnumerationMultiMap : NSObject
{
    struct __CFDictionary *m_valueToString;
    struct __CFDictionary *m_stringToValue;
    _Bool m_caseSensitive;
}

- (id)stringForValue:(int)arg1;
- (long long)valueForString:(id)arg1;
- (void)dealloc;
- (id)initWithStructs:(const struct TCEnumerationStruct *)arg1 count:(int)arg2 caseSensitive:(_Bool)arg3;
- (id)initWithStructs:(const struct TCEnumerationStruct *)arg1 count:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCTracing : NSObject
{
    NSString *mFilename;
}

- (void)writeHeader;
- (void)dealloc;
- (id)initWithFilename:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCExportTracing : TCTracing
{
}

- (void)stopWriting;
- (void)startWriting;
- (void)stopExporting;
- (void)startExporting;
- (void)dealloc;
- (id)initWithFilename:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCFont : NSObject
{
    NSDictionary *_namesByLanguage;
    NSString *_psName;
    TCFontFamily *_family;
    struct TCFontStyling _styling;
}

@property(nonatomic) TCFontFamily *family; // @synthesize family=_family;
@property(readonly, nonatomic) struct TCFontStyling styling; // @synthesize styling=_styling;
@property(readonly, nonatomic) NSString *psName; // @synthesize psName=_psName;
@property(readonly, nonatomic) NSDictionary *namesByLanguage; // @synthesize namesByLanguage=_namesByLanguage;
- (id).cxx_construct;
- (id)localizedFontName;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)equivalentDictionary;
- (void)dealloc;
- (id)initWithNamesByLanguage:(id)arg1 psName:(id)arg2 styling:(struct TCFontStyling)arg3;

@end

__attribute__((visibility("hidden")))
@interface TCFontDatabaseCacheEntry : NSObject
{
    _Bool _bold;
    _Bool _italic;
    int _fontClass;
    NSString *_name;
}

+ (id)newFontDatabaseCacheEntryWithName:(id)arg1 fontClass:(int)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4;
@property(readonly, nonatomic) _Bool italic; // @synthesize italic=_italic;
@property(readonly, nonatomic) _Bool bold; // @synthesize bold=_bold;
@property(readonly, nonatomic) int fontClass; // @synthesize fontClass=_fontClass;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;
- (id)initWithName:(id)arg1 fontClass:(int)arg2 bold:(_Bool)arg3 italic:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface TCFontFamily : NSObject
{
    NSDictionary *_namesByLanguage;
    NSArray *_members;
}

@property(readonly, nonatomic) NSArray *members; // @synthesize members=_members;
@property(readonly, nonatomic) NSDictionary *namesByLanguage; // @synthesize namesByLanguage=_namesByLanguage;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)equivalentDictionary;
- (id)variantByRemovingBoldFromFont:(id)arg1;
- (_Bool)fontIsDesignatedBold:(id)arg1;
- (id)variantByRemovingItalicFromFont:(id)arg1;
- (id)variantByAddingBoldToFont:(id)arg1;
- (id)variantByAddingItalicToFont:(id)arg1;
- (id)memberForFullName:(id)arg1;
- (id)memberForPSName:(id)arg1;
- (id)bestMatchForStyling:(struct TCFontStyling)arg1;
- (void)dealloc;
- (id)initWithNamesByLanguage:(id)arg1 members:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCFontName : NSObject
{
    NSString *_styleName;
    NSString *_fullName;
}

@property(readonly, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(readonly, nonatomic) NSString *styleName; // @synthesize styleName=_styleName;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)equivalentDictionary;
- (void)dealloc;
- (id)initWithStyleName:(id)arg1 fullName:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCImportTracing : TCTracing
{
}

- (void)stopImporting;
- (void)startImporting;
- (void)stopProcessors;
- (void)startProcessors;
- (void)stopReading;
- (void)startReading;
- (void)dealloc;
- (id)initWithFilename:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCMessageContext : NSObject
{
    NSMutableSet *m_warnings;
    NSMutableSet *m_errors;
    NSMutableArray *m_currentObjectStack;
    NSMutableDictionary *m_placeholderToObjectIdMap;
    NSObject<OS_dispatch_queue> *mMessageSyncQueue;
}

+ (void)restoreObjectStack:(unsigned int)arg1;
+ (unsigned long long)saveObjectStack;
+ (void)replacePlaceholdersWithObjects;
+ (void)setObject:(id)arg1 forPlaceholder:(id)arg2;
+ (void)popCurrentPlaceholder:(id)arg1;
+ (id)pushCurrentPlaceholder;
+ (void)popCurrentObject;
+ (void)pushCurrentObject:(id)arg1;
+ (_Bool)isFileStructuredStorage;
+ (void)setIsFileStructuredStorage:(_Bool)arg1;
+ (id)getErrorArray;
+ (id)getWarningArray;
+ (void)removeContextForCurrentThread;
+ (void)createContextForCurrentThread;
+ (void)reportErrorException:(id)arg1;
+ (void)reportWarningException:(id)arg1;
+ (void)reportError:(struct TCTaggedMessageStructure *)arg1;
+ (void)reportWarning:(struct TCTaggedMessageStructure *)arg1;
+ (void)reportObject:(id)arg1 withWarning:(struct TCTaggedMessageStructure *)arg2;
+ (id)currentObjectOrPlaceholder;
+ (void)reportObjectOrPlaceholder:(id)arg1 withWarning:(struct TCTaggedMessageStructure *)arg2 parameters:(struct __va_list_tag [1])arg3;
+ (void)initialize;
- (void)reportWarningForObject:(id)arg1 affectedObject:(id)arg2 warning:(struct TCTaggedMessageStructure *)arg3 parameterList:(struct __va_list_tag [1])arg4;
- (void)dealloc;
- (id)init;
- (void)replacePlaceholdersWithObjects;
- (void)setObject:(id)arg1 forPlaceholderKey:(id)arg2;
- (void)popPlaceholder:(id)arg1;
- (id)pushPlaceholder;
- (void)popObject;
- (void)pushObject:(id)arg1;
- (void)addWarningMessageEntry:(id)arg1;
- (void)addErrorMessageEntry:(id)arg1;
- (id)currentObject;

@end

__attribute__((visibility("hidden")))
@interface TCMessageEntry : NSObject
{
    unsigned long long m_timeStamp;
    int m_tag;
    NSString *m_text;
    NSArray *m_parameters;
    NSMutableArray *m_affectedObjects;
    int m_count;
}

+ (void)initialize;
@property(nonatomic) unsigned long long timeStamp; // @synthesize timeStamp=m_timeStamp;
- (void)addAffectedObject:(id)arg1;
- (void)mergeEntries:(id)arg1;
- (id)description;
- (void)logWithCat:(id)arg1;
- (long long)timeStampCompare:(id)arg1;
- (int)getCount;
- (id)affectedObjects;
- (id)getParameter:(unsigned int)arg1;
- (unsigned long long)getParameterCount;
- (id)getMessageText;
- (int)getMessageTag;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTag:(int)arg1 affectedObject:(id)arg2 text:(id)arg3 parameters:(struct __va_list_tag [1])arg4;

@end

__attribute__((visibility("hidden")))
@interface TCMessageException : NSException
{
    TCMessageEntry *m_entry;
}

+ (id)nsError:(id)arg1 domain:(id)arg2;
+ (void)raiseUntaggedMessage:(id)arg1;
+ (void)raise:(struct TCTaggedMessageStructure *)arg1;
+ (id)exceptionWithUntaggedMessage:(id)arg1;
+ (id)exceptionWithMessage:(struct TCTaggedMessageStructure *)arg1;
+ (void)initialize;
- (id)description;
- (id)getEntry;
- (void)dealloc;
- (id)initWithUntaggedMessage:(id)arg1;
- (id)initWithMessage:(struct TCTaggedMessageStructure *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCMessagePlaceholderInfo : NSObject
{
    id mKey;
    _Bool mInUse;
}

- (void)setInUse:(_Bool)arg1;
- (_Bool)isInUse;
- (id)key;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TCNamedData : NSObject
{
    NSData *mData;
    NSString *mName;
}

+ (id)namedDataWithData:(id)arg1 named:(id)arg2;
@property(readonly, nonatomic) NSString *name; // @synthesize name=mName;
@property(readonly, nonatomic) NSData *data; // @synthesize data=mData;
- (void)dealloc;
- (id)initWithData:(id)arg1 named:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCNumberFormatUtilities : NSObject
{
}

+ (id)cleanDateTimeFormatString:(id)arg1 withMappings:(id)arg2;
+ (id)cleanDateTimeFormat:(CDStruct_bfed0e84 *)arg1 withMappings:(id)arg2;
+ (id)cleanDateTimeSubstring:(id)arg1 withMappings:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCOfficeFontInfo : NSObject
{
    _Bool _isBold;
    _Bool _isItalic;
    NSString *_fontName;
    NSString *_alphaFontName;
}

@property(nonatomic) _Bool isItalic; // @synthesize isItalic=_isItalic;
@property(nonatomic) _Bool isBold; // @synthesize isBold=_isBold;
@property(retain, nonatomic) NSString *alphaFontName; // @synthesize alphaFontName=_alphaFontName;
@property(retain, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
- (id)description;

@end

__attribute__((visibility("hidden")))
@interface TCProgressContext : NSObject
{
    OITSUProgressContext *m_parentProgressContext;
    TCProgressStage *m_currentStage;
    NSDate *m_lastReportTime;
    NSMutableArray *m_stackOfBranches;
}

+ (double)currentPosition;
+ (void)setMessage:(id)arg1;
+ (void)setProgress:(double)arg1;
+ (void)advanceProgressInContext:(id)arg1 progress:(double)arg2;
+ (void)advanceProgress:(double)arg1;
+ (void)popBranch;
+ (void)pushBranch:(id)arg1;
+ (void)endBranch:(id)arg1;
+ (id)createBranchWithSteps:(double)arg1 takingSteps:(double)arg2 name:(id)arg3;
+ (void)endStage;
+ (void)createStageWithSteps:(double)arg1 takingSteps:(double)arg2 name:(id)arg3;
+ (void)createStageWithSteps:(double)arg1 takingSteps:(double)arg2;
+ (void)removeProgressObserver:(id)arg1;
+ (void)addProgressObserver:(id)arg1 selector:(SEL)arg2;
+ (void)removeContextForCurrentThread;
+ (void)createContextForCurrentThreadWithParentContext:(id)arg1;
+ (id)stageForCurrentThread;
+ (id)contextForCurrentThread;
- (void)reportProgress:(double)arg1;
- (id)rootStage;
- (id)currentStage;
- (void)dealloc;
- (id)initWithParentContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCProgressStage : NSObject
{
    double m_currentPosition;
    double m_totalSteps;
    double m_stepsInParent;
    NSString *m_name;
    TCProgressStage *m_parentStage;
    TCProgressContext *m_context;
}

- (double)currentPosition;
- (id)parentStage;
- (void)end;
- (void)setProgress:(double)arg1;
- (void)advanceProgress:(double)arg1;
- (void)dealloc;
- (id)initBranchWithSteps:(double)arg1 takingSteps:(double)arg2 name:(id)arg3 inContext:(id)arg4;
- (id)initWithSteps:(double)arg1 takingSteps:(double)arg2 name:(id)arg3 inContext:(id)arg4;
- (id)initRootStageInContext:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCStringLocalizedMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface TCTracingManager : NSObject
{
    TSMTraceBuffer *mBuffer;
    unsigned int mCount;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)sharedManager;
+ (id)_singletonAlloc;
- (void)teardown;
- (void)setup;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;

@end

__attribute__((visibility("hidden")))
@interface TCXmlEnumMap : NSObject
{
    struct __CFDictionary *mNameToValueMap;
}

- (long long)readFromNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 name:(const char *)arg3 def:(long long)arg4;
- (long long)readFromNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 name:(const char *)arg3;
- (_Bool)readFromNode:(struct _xmlNode *)arg1 ns:(const char *)arg2 name:(const char *)arg3 value:(long long *)arg4;
- (void)dealloc;
- (id)initWithDescriptions:(const struct TCXmlEnumDescription *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCXmlStreamWriter : NSObject
{
    struct _xmlTextWriter *mStreamAPI;
    unsigned int mCurrentDepth;
    _Bool mContentAdded;
    NSMutableSet *mAddedIds;
}

+ (_Bool)cleanUpXmlTextWriter:(struct _xmlTextWriter *)arg1;
+ (struct _xmlTextWriter *)createXmlTextWriterWithBuffer:(struct _xmlOutputBuffer *)arg1;
+ (struct _xmlTextWriter *)createXmlTextWriterAtEntry:(id)arg1 inOutputStream:(id)arg2 isCompressed:(_Bool)arg3;
+ (struct _xmlTextWriter *)createXmlTextWriterWithContext:(id)arg1;
+ (_Bool)writeAnchorTargetToStream:(struct _xmlTextWriter *)arg1 name:(id)arg2;
+ (_Bool)writeDtdToStream:(struct _xmlTextWriter *)arg1 name:(id)arg2 pubid:(id)arg3 sysid:(id)arg4 subset:(id)arg5;
+ (_Bool)writeNamespaceToStream:(struct _xmlTextWriter *)arg1 prefix:(id)arg2 uri:(const char *)arg3;
+ (_Bool)writeAttributeToStream:(struct _xmlTextWriter *)arg1 name:(id)arg2 content:(id)arg3 prefix:(id)arg4 ns:(const char *)arg5;
+ (_Bool)writePlainAttributeToStream:(struct _xmlTextWriter *)arg1 name:(id)arg2 content:(id)arg3;
+ (_Bool)writeStringToStream:(struct _xmlTextWriter *)arg1 text:(id)arg2;
+ (_Bool)endElementInStream:(struct _xmlTextWriter *)arg1;
+ (_Bool)startElementInStream:(struct _xmlTextWriter *)arg1 name:(id)arg2 prefix:(id)arg3 ns:(const char *)arg4;
+ (_Bool)startPlainElementInStream:(struct _xmlTextWriter *)arg1 name:(id)arg2;
+ (void)resetElementIds;
- (_Bool)writeAnchorTarget:(id)arg1;
- (_Bool)writeDtd:(id)arg1 pubid:(id)arg2 sysid:(id)arg3 subset:(id)arg4;
- (_Bool)writeNamespace:(id)arg1 uri:(const char *)arg2;
- (_Bool)writeElementId:(id)arg1;
- (_Bool)writePlainAttribute:(id)arg1 doubleContent:(double)arg2;
- (_Bool)writePlainAttribute:(id)arg1 enumContent:(int)arg2 map:(id)arg3;
- (_Bool)writePlainAttribute:(id)arg1 boolContent:(_Bool)arg2;
- (_Bool)writePlainAttribute:(id)arg1 intContent:(long long)arg2;
- (_Bool)writePlainAttribute:(id)arg1 content:(id)arg2;
- (_Bool)writeAttribute:(id)arg1 doubleContent:(double)arg2 prefix:(id)arg3 ns:(const char *)arg4;
- (_Bool)writeAttribute:(id)arg1 enumContent:(int)arg2 map:(id)arg3 prefix:(id)arg4 ns:(const char *)arg5;
- (_Bool)writeAttribute:(id)arg1 boolContent:(_Bool)arg2 prefix:(id)arg3 ns:(const char *)arg4;
- (_Bool)writeAttribute:(id)arg1 intContent:(long long)arg2 prefix:(id)arg3 ns:(const char *)arg4;
- (_Bool)writeAttribute:(id)arg1 content:(id)arg2 prefix:(id)arg3 ns:(const char *)arg4;
- (_Bool)endElementsToBase;
- (_Bool)writeString:(id)arg1;
- (_Bool)endElement;
- (_Bool)startPlainElement:(id)arg1;
- (_Bool)startElement:(id)arg1 prefix:(id)arg2 ns:(const char *)arg3;
- (_Bool)contentAdded;
- (struct _xmlTextWriter *)textWriter;
- (void)dealloc;
- (id)initWithTextWriter:(struct _xmlTextWriter *)arg1;

@end

__attribute__((visibility("hidden")))
@interface TCXmlPrefixStreamWriter : TCXmlStreamWriter
{
    NSMutableArray *mStateStack;
}

+ (struct _xmlTextWriter *)createNonXmlTextWriterAtEntry:(id)arg1 inOutputStream:(id)arg2 isCompressed:(_Bool)arg3;
+ (struct _xmlTextWriter *)createXmlTextWriterAtEntry:(id)arg1 inOutputStream:(id)arg2 isCompressed:(_Bool)arg3;
- (_Bool)writeValAttributeOnlyElementWithName:(id)arg1 doubleContent:(double)arg2;
- (_Bool)writeValAttributeOnlyElementWithName:(id)arg1 enumContent:(int)arg2 map:(id)arg3;
- (_Bool)writeValAttributeOnlyElementWithName:(id)arg1 intContent:(long long)arg2;
- (_Bool)writeValAttributeOnlyElementWithName:(id)arg1 boolContent:(_Bool)arg2;
- (_Bool)writeValAttributeOnlyElementWithName:(id)arg1 content:(id)arg2;
- (_Bool)writeOneAttributeElementWithName:(id)arg1 attributeName:(id)arg2 doubleContent:(double)arg3;
- (_Bool)writeOneAttributeElementWithName:(id)arg1 attributeName:(id)arg2 enumContent:(int)arg3 map:(id)arg4;
- (_Bool)writeOneAttributeElementWithName:(id)arg1 attributeName:(id)arg2 intContent:(long long)arg3;
- (_Bool)writeOneAttributeElementWithName:(id)arg1 attributeName:(id)arg2 boolContent:(_Bool)arg3;
- (_Bool)writeOneAttributeElementWithName:(id)arg1 attributeName:(id)arg2 content:(id)arg3;
- (_Bool)writeAttribute:(id)arg1 doubleContent:(double)arg2;
- (_Bool)writeAttribute:(id)arg1 enumContent:(int)arg2 map:(id)arg3;
- (_Bool)writeAttribute:(id)arg1 intContent:(long long)arg2;
- (_Bool)writeAttribute:(id)arg1 boolContent:(_Bool)arg2;
- (_Bool)writeAttribute:(id)arg1 content:(id)arg2;
- (_Bool)addElement:(id)arg1;
- (_Bool)startElement:(id)arg1;
- (id)currentAttributePrefix;
- (id)currentElementPrefix;
- (id)currentState;
- (void)popState;
- (id)pushStateWithSharedPrefix:(id)arg1;
- (id)pushStateWithElementPrefix:(id)arg1 attributePrefix:(id)arg2;
- (id)pushState;
- (void)pushElementPrefix:(id)arg1 attributePrefix:(id)arg2;
- (void)dealloc;
- (id)initWithTextWriter:(struct _xmlTextWriter *)arg1;
- (_Bool)writeOAAttribute:(id)arg1 doubleContent:(double)arg2;
- (_Bool)writeOAAttribute:(id)arg1 enumContent:(int)arg2 map:(id)arg3;
- (_Bool)writeOAAttribute:(id)arg1 intContent:(long long)arg2;
- (_Bool)writeOAAttribute:(id)arg1 boolContent:(_Bool)arg2;
- (_Bool)writeOAAttribute:(id)arg1 content:(id)arg2;
- (_Bool)startOAElement:(id)arg1;
- (void)pushOAState;
- (void)writeTextString:(id)arg1 forElement:(id)arg2;
- (_Bool)writeIndexAttribute:(id)arg1 intContent:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface TCXmlPrefixStreamWriterState : NSObject
{
    NSString *_elementPrefix;
    NSString *_attributePrefix;
}

@property(copy, nonatomic) NSString *attributePrefix; // @synthesize attributePrefix=_attributePrefix;
@property(copy, nonatomic) NSString *elementPrefix; // @synthesize elementPrefix=_elementPrefix;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface TCXmlUtilities : NSObject
{
}

+ (void)checkStreamNamespaceAndName:(struct _xmlTextReader *)arg1 name:(const char *)arg2 ns:(id)arg3;
+ (void)checkStreamName:(struct _xmlTextReader *)arg1 name:(const char *)arg2;
+ (void)checkStreamNamespace:(struct _xmlTextReader *)arg1 ns:(id)arg2;
+ (id)bundlePathForXmlResource:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface TSUObjectSnapshot : NSObject
{
    unsigned long long mEntryCount;
    void **mSnapshot;
    NSArray *mCompared;
}

- (void)dealloc;
- (void)p_clear;
- (void)compare;
- (void)calibrate:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface TSUUIImage : OITSUImage
{
    UIImage *mUIImage;
}

+ (id)imageNamed:(id)arg1;
- (long long)imageOrientation;
- (struct CGImage *)CGImageForSize:(struct CGSize)arg1;
- (struct CGImage *)CGImage;
- (double)scale;
- (struct CGSize)size;
- (id)UIImage;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithUIImage:(id)arg1;

@end

@interface UIColor (TSUAdditions)
+ (id)tableViewCellDarkBlueTextColor;
+ (id)transparentGrayCheckerboardColor;
+ (id)grayCheckerboardColor;
+ (id)checkerboardColorWithColor:(id)arg1 andColor:(id)arg2 squareSize:(struct CGSize)arg3;
@end

@interface UIDevice (TSUAdditions)
+ (id)platformString;
@end

@interface UIView (TSUViewAdditions)
- (void)addBorderWithColor:(id)arg1;
@end

__attribute__((visibility("hidden")))
@interface WBAnnotation : NSObject
{
}

+ (id)readRangedFrom:(id)arg1 index:(unsigned int)arg2 type:(int)arg3 paragraph:(id)arg4;
+ (void)readFrom:(id)arg1 at:(int)arg2 paragraph:(id)arg3;
+ (unsigned long long)findStartFrom:(id)arg1 annotation:(const struct WrdAnnotation *)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBBookmark : NSObject
{
}

+ (void)readFrom:(id)arg1 index:(unsigned int)arg2 type:(int)arg3 paragraph:(id)arg4;
- (int)runType;

@end

__attribute__((visibility("hidden")))
@interface WBBorder : NSObject
{
}

+ (void)write:(id)arg1 to:(struct WrdBorder *)arg2;
+ (void)readFrom:(struct WrdBorder *)arg1 to:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBCharacterProperties : NSObject
{
}

+ (struct WrdCharacterProperties *)createTrackedPropertiesIfNeeded:(id)arg1;
+ (void)prepareForWriting:(id)arg1 properties:(id)arg2 wrdProperties:(struct WrdCharacterProperties *)arg3 tracked:(struct WrdCharacterProperties *)arg4;
+ (void)readFrom:(id)arg1 wrdProperties:(struct WrdCharacterProperties *)arg2 document:(id)arg3 properties:(id)arg4;
+ (void)readFrom:(id)arg1 wrdProperties:(struct WrdCharacterProperties *)arg2 tracked:(struct WrdCharacterProperties *)arg3 document:(id)arg4 properties:(id)arg5;
+ (id)formattingChangeDate:(const struct WrdDateTime *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WBCharacterRun : NSObject
{
}

+ (void)readFrom:(id)arg1 wrdTextRun:(struct WrdCharacterTextRun *)arg2 run:(id)arg3 paragraph:(id)arg4;
- (struct WrdCharacterProperties *)wrdProperties;

@end

__attribute__((visibility("hidden")))
@interface WBDocument : NSObject
{
}

+ (id)readFrom:(id)arg1;
+ (void)setupZIndices:(id)arg1 document:(id)arg2 escherType:(int)arg3;
+ (void)readProperties:(id)arg1 document:(id)arg2;
+ (void)readTextBoxesFrom:(id)arg1;
+ (void)readNoteSeparatorFrom:(id)arg1 type:(int)arg2 separator:(id)arg3;
+ (void)readSectionsFrom:(id)arg1 document:(id)arg2;
+ (void)setTimeStamp:(struct WrdDocumentProperties *)arg1;
- (id)applicationName;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WBEscher : NSObject
{
}

+ (void)readRootContainer:(id *)arg1 type:(int *)arg2 reader:(id)arg3;
+ (id)readRootWithType:(int *)arg1 reader:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBFieldMarker : NSObject
{
}

+ (void)readFrom:(id)arg1 position:(const struct WrdFieldPosition *)arg2 paragraph:(id)arg3 fieldMarker:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBFont : NSObject
{
}

+ (void)write:(id)arg1 to:(struct WrdFontFamilyName *)arg2;
+ (id)readFrom:(const struct WrdFontFamilyName *)arg1 withFontTable:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBFontTable : NSObject
{
}

+ (void)readFromFontTable:(id)arg1 wrdFontTable:(struct WrdFontFamilyNameTable *)arg2 fontTable:(id)arg3;
+ (void)readFrom:(id)arg1 fontTable:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBFormField : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface WBList : NSObject
{
}

+ (void)write:(id)arg1 list:(id)arg2 to:(struct WrdListFormatOverride *)arg3;
+ (void)readFrom:(id)arg1 list:(id)arg2 override:(struct WrdListFormatOverride *)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBListDefinition : NSObject
{
}

+ (void)readFrom:(id)arg1 listDefinition:(id)arg2 listFormat:(struct WrdListFormat *)arg3 document:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBListDefinitionTable : NSObject
{
}

+ (void)readFrom:(id)arg1 listDefinitionTable:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBListLevel : NSObject
{
}

+ (int)numberFormatEnumFor:(int)arg1;
+ (void)write:(id)arg1 listLevel:(id)arg2 format:(struct WrdListLevelFormat *)arg3;
+ (void)readFrom:(id)arg1 listLevel:(id)arg2 format:(struct WrdListLevelFormat *)arg3 document:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBListLevelOverride : NSObject
{
}

+ (void)write:(id)arg1 listLevelOverride:(id)arg2 wrdFormatOverride:(struct WrdListLevelFormatOverride *)arg3;
+ (void)readFrom:(id)arg1 listLevelOverride:(id)arg2 formatOverride:(struct WrdListLevelFormatOverride *)arg3 document:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBListTable : NSObject
{
}

+ (void)readFrom:(id)arg1 listTable:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBMessages : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WBNote : NSObject
{
}

+ (void)readFrom:(id)arg1 at:(int)arg2 paragraph:(id)arg3 note:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBObjectFactory : NSObject
{
}

+ (struct WrdObject *)create:(int)arg1;

@end

__attribute__((visibility("hidden")))
@interface WBOfficeArt : NSObject
{
}

+ (void)setShapeAddress:(const struct WrdFileShapeAddress *)arg1 toDrawable:(id)arg2;
+ (void)readFrom:(id)arg1 at:(int)arg2 textRun:(struct WrdCharacterTextRun *)arg3 paragraph:(id)arg4 to:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface WBOfficeArtReaderClient : NSObject <OABReaderClient>
{
}

+ (_Bool)tablesAreAllowed;
+ (_Bool)escherIsFullySupported;
+ (void)readClientDataFromTableCell:(id)arg1 toTableCell:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromGroup:(id)arg1 toGroup:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromShape:(id)arg1 toGraphic:(id)arg2 state:(id)arg3;
+ (double)wrapDistanceBottom:(struct EshContentProperties *)arg1;
+ (double)wrapDistanceRight:(struct EshContentProperties *)arg1;
+ (double)wrapDistanceTop:(struct EshContentProperties *)arg1;
+ (double)wrapDistanceLeft:(struct EshContentProperties *)arg1;
+ (int)relativeVerticalPosition:(struct EshContentProperties *)arg1;
+ (int)verticalPosition:(struct EshContentProperties *)arg1;
+ (int)relativeHorizontalPosition:(struct EshContentProperties *)arg1;
+ (int)horizontalPosition:(struct EshContentProperties *)arg1;
+ (_Bool)allowOverlap:(struct EshContentProperties *)arg1;
+ (_Bool)behindText:(struct EshContentProperties *)arg1;
+ (void)readFrom:(struct EshContentProperties *)arg1 to:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBOfficeArtReaderState : OABReaderState
{
    WBReader *mReader;
    int mCurrentTextType;
}

@property(nonatomic) int currentTextType; // @synthesize currentTextType=mCurrentTextType;
@property(nonatomic) WBReader *reader; // @synthesize reader=mReader;
- (id)initWithClient:(Class)arg1;

@end

__attribute__((visibility("hidden")))
@interface WBPicture : WBOfficeArt
{
}

+ (void)readFrom:(id)arg1 at:(int)arg2 textRun:(struct WrdCharacterTextRun *)arg3 paragraph:(id)arg4 to:(id)arg5;
+ (id)readDrawableFromReader:(id)arg1 textType:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBOleObject : WBPicture
{
}

+ (void)readFrom:(id)arg1 at:(int)arg2 oleId:(unsigned int)arg3 textRun:(struct WrdCharacterTextRun *)arg4 paragraph:(id)arg5 to:(id)arg6;

@end

__attribute__((visibility("hidden")))
@interface WBParagraph : NSObject
{
}

+ (int)blockType;
+ (void)readFrom:(id)arg1 textRun:(struct WrdParagraphTextRun *)arg2 paragraph:(id)arg3;
+ (void)readAnnotationBookmarkFor:(id)arg1 from:(id)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)readBookmarkFor:(id)arg1 from:(id)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)readFieldMarkerFor:(id)arg1 from:(id)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)readAnnotationFor:(id)arg1 from:(id)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)readNoteFor:(id)arg1 from:(id)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)readSymbolsFor:(id)arg1 from:(id)arg2 textRun:(struct WrdCharacterTextRun *)arg3;
+ (void)readSpecialCharacterFor:(id)arg1 from:(id)arg2 at:(int)arg3 textRun:(struct WrdCharacterTextRun *)arg4;
+ (void)readPictureFor:(id)arg1 from:(id)arg2 at:(int)arg3 textRun:(struct WrdCharacterTextRun *)arg4;
+ (void)readOfficeArtFor:(id)arg1 from:(id)arg2 at:(int)arg3 textRun:(struct WrdCharacterTextRun *)arg4;
+ (void)readSpecialCharactersFor:(id)arg1 from:(id)arg2 textRun:(struct WrdCharacterTextRun *)arg3;
+ (void)checkForAnnotationBookmarkFrom:(id)arg1 runEnd:(int *)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)checkForBookmarkFrom:(id)arg1 runEnd:(int *)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)check:(id)arg1 forFieldMarkerFrom:(id)arg2 runEnd:(int *)arg3 readState:(struct WBParagraphReadState *)arg4;
+ (_Bool)isCPAnnotationRangeEnd:(int)arg1 bookmarkTable:(struct WrdBookmarkTable *)arg2;
+ (void)checkForAnnotationFrom:(id)arg1 runEnd:(int *)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)checkForNoteFrom:(id)arg1 footnote:(_Bool)arg2 runEnd:(int *)arg3 readState:(struct WBParagraphReadState *)arg4;
+ (void)readCharacterRunsFor:(id)arg1 from:(id)arg2 readState:(struct WBParagraphReadState *)arg3;
+ (void)readRunsFor:(id)arg1 from:(id)arg2 textRun:(struct WrdParagraphTextRun *)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBParagraphProperties : NSObject
{
}

+ (struct WrdParagraphProperties *)createTrackedPropertiesIfNeeded:(id)arg1;
+ (void)readFrom:(id)arg1 wrdProperties:(struct WrdParagraphProperties *)arg2 tracked:(struct WrdParagraphProperties *)arg3 document:(id)arg4 properties:(id)arg5;
+ (id)formattingChangeDate:(const struct WrdDateTime *)arg1;
+ (void)mapWordProperties:(struct WrdParagraphProperties *)arg1 reader:(id)arg2 toProperties:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBReader : OCBReader
{
    struct WrdNoteTable *mFootnoteTable;
    struct WrdNoteTable *mEndnoteTable;
    struct WrdAnnotationTable *mAnnotationTable;
    struct WrdCPTableHeaders *mTableHeaders;
    struct WrdBookmarkTable *mBookmarkTable;
    struct WrdBookmarkTable *mAnnotationBookmarkTable;
    struct WrdFieldPositionTable *mFieldPositionTables[8];
    struct WrdStoryTable *mStoryTable;
    struct WrdStoryTable *mHeaderStoryTable;
    struct WrdFileShapeAddressTable *mFileShapeAddressTable;
    struct WrdFileShapeAddressTable *mFileShapeAddressHeaderTable;
    struct WrdEshObjectFactory *mEshObjectFactory;
    struct WrdParagraphProperties *mLastRowParagraphProperties;
    NSMutableArray *mAnnotationOwners;
    OITSUNoCopyDictionary *mIndexToStyles;
    OITSUNoCopyDictionary *mIndexToFonts;
    WDDocument *mTargetDocument;
    WBOfficeArtReaderState *mOfficeArtState;
    struct vector<WBTextBoxReaderInfo, std::__1::allocator<WBTextBoxReaderInfo>> *mTextBoxes;
    _Bool mReportProgress;
    id mAnnotationRangeStart;
    NSMutableDictionary *mBookmarkIndexToAnnotationRangeStartMap;
}

@property(nonatomic) WDDocument *targetDocument; // @synthesize targetDocument=mTargetDocument;
- (struct WBTextBoxReaderInfo)textBoxInfoAtIndex:(unsigned long long)arg1;
- (unsigned long long)textBoxCount;
- (void)cacheTextBox:(id)arg1 withChainIndex:(unsigned short)arg2;
- (id)drawableForShapeId:(unsigned int)arg1;
- (void)setOfficeArtState:(id)arg1;
- (id)officeArtState;
- (void)setReportProgress:(_Bool)arg1;
- (_Bool)reportProgress;
- (void)addFont:(id)arg1 index:(int)arg2;
- (id)fontAtIndex:(int)arg1;
- (void)addStyle:(id)arg1 index:(int)arg2;
- (id)styleAtIndex:(int)arg1;
- (void)setLastRowParagraphProperties:(struct WrdParagraphProperties *)arg1;
- (struct WrdParagraphProperties *)lastRowParagraphProperties;
- (struct WrdEshObjectFactory *)eshObjectFactory;
- (struct WrdFileShapeAddressTable *)fileShapeAddressHeaderTable;
- (struct WrdFileShapeAddressTable *)fileShapeAddressTable;
- (struct WrdStoryTable *)headerStoryTable;
- (struct WrdStoryTable *)storyTable;
- (id)readCharactersFrom:(unsigned int)arg1 to:(unsigned int)arg2 textType:(int)arg3;
- (id)readCharactersForTextRun:(struct WrdTextRun *)arg1;
- (struct WrdFieldPositionTable *)fieldPositionTableForTextType:(int)arg1;
- (struct WrdBookmarkTable *)annotationBookmarkTable;
- (struct WrdBookmarkTable *)bookmarkTable;
- (struct WrdCPTableHeaders *)tableHeaders;
- (id)annotationOwner:(int)arg1;
- (struct WrdAnnotationTable *)annotationTable;
- (struct WrdNoteTable *)endnoteTable;
- (struct WrdNoteTable *)footnoteTable;
- (struct WrdBinaryReader *)wrdReader;
- (struct OCCBinaryStreamer *)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey *)arg1 baseOutputFilenameInUTF8:(const char *)arg2;
- (struct OCCEncryptionInfoReader *)encryptionInfoReader;
- (id)read;
- (_Bool)start;
- (void)dealloc;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;
- (void)initialize;
- (void)setAnnotationRangeStart:(id)arg1 forBookmarkIndex:(unsigned long long)arg2;
- (id)annotationRangeStartForBookmarkIndex:(unsigned long long)arg1;
- (void)setAnnotationRangeStart:(id)arg1;
- (id)annotationRangeStart;

@end

__attribute__((visibility("hidden")))
@interface WBRevisionAuthorTable : NSObject
{
}

+ (void)readFrom:(id)arg1 revisionAuthorTable:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBSection : NSObject
{
}

+ (void)readFrom:(id)arg1 textRun:(struct WrdSectionTextRun *)arg2 document:(id)arg3 index:(int)arg4 section:(id)arg5;
+ (void)mapPrinterSettings:(struct WrdSectionProperties *)arg1 toSection:(id)arg2;
+ (void)mapSection:(id)arg1 toSectionProperties:(struct WrdSectionProperties *)arg2;
+ (void)mapSectionProperties:(struct WrdSectionProperties *)arg1 toSection:(id)arg2;
+ (void)readHeaderFrom:(id)arg1 type:(int)arg2 index:(int)arg3 header:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBShading : NSObject
{
}

+ (void)write:(id)arg1 to:(struct WrdShading *)arg2;
+ (void)readFrom:(struct WrdShading *)arg1 to:(id)arg2;
+ (void)setToSolidWhite:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WBSpecialCharacter : NSObject
{
}

+ (void)readFrom:(id)arg1 at:(int)arg2 textRun:(struct WrdCharacterTextRun *)arg3 paragraph:(id)arg4 specialCharacter:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface WBStory : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface WBStyle : NSObject
{
}

+ (void)readFrom:(id)arg1 wrdStyle:(struct WrdStyle *)arg2 style:(id)arg3;
+ (void)readTableProperties:(id)arg1 style:(id)arg2 from:(struct WrdStyle *)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBStyleSheet : NSObject
{
}

+ (void)readFrom:(id)arg1 styleSheet:(id)arg2;
+ (void)initializeStyles:(id)arg1 with:(struct WrdStyleSheet *)arg2 reader:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBSymbol : NSObject
{
}

+ (void)readFrom:(id)arg1 textRun:(struct WrdCharacterTextRun *)arg2 paragraph:(id)arg3 symbol:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WBTable : NSObject
{
}

+ (_Bool)tryToReadRowFrom:(id)arg1 textRuns:(id)arg2 to:(id)arg3;
+ (void)readFrom:(id)arg1 textRuns:(id)arg2 table:(id)arg3;
+ (_Bool)isTableFloating:(const struct WrdTableProperties *)arg1 tracked:(const struct WrdTableProperties *)arg2;
+ (void)readRowFrom:(id)arg1 textRuns:(id)arg2 to:(id)arg3;
+ (void)initPropertiesFrom:(id)arg1 to:(id)arg2 in:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBTableCell : NSObject
{
}

+ (void)readFrom:(id)arg1 textRun:(struct WrdTextRun *)arg2 with:(struct WrdTableProperties *)arg3 tracked:(struct WrdTableProperties *)arg4 row:(id)arg5 index:(unsigned long long)arg6 cell:(id)arg7;

@end

__attribute__((visibility("hidden")))
@interface WBTableCellBodyProperties : NSObject
{
}

+ (void)write:(id)arg1 wrdProperties:(struct WrdTableProperties *)arg2 tracked:(struct WrdTableProperties *)arg3 index:(unsigned long long)arg4;
+ (void)readFrom:(struct WrdTableProperties *)arg1 tracked:(struct WrdTableProperties *)arg2 properties:(id)arg3 index:(unsigned long long)arg4;
+ (void)mapProperties:(id)arg1 toWordProperties:(struct WrdTableProperties *)arg2 index:(unsigned long long)arg3;
+ (void)mapWordProperties:(struct WrdTableProperties *)arg1 toProperties:(id)arg2 index:(unsigned long long)arg3;
+ (id)formattingChangeDate:(const struct WrdDateTime *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WBTableCellProperties : NSObject
{
}

@end

__attribute__((visibility("hidden")))
@interface WBTableCellStyleProperties : NSObject
{
}

+ (void)write:(id)arg1 to:(struct WrdTableProperties *)arg2;
+ (void)readFrom:(struct WrdTableProperties *)arg1 properties:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBTableProperties : NSObject
{
}

+ (void)readFrom:(id)arg1 wrdProperties:(struct WrdTableProperties *)arg2 tracked:(struct WrdTableProperties *)arg3 properties:(id)arg4;
+ (void)mapWordProperties:(struct WrdTableProperties *)arg1 reader:(id)arg2 toProperties:(id)arg3;
+ (id)formattingChangeDate:(const struct WrdDateTime *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WBTableRow : NSObject
{
}

+ (void)readFrom:(id)arg1 textRuns:(id)arg2 to:(id)arg3 index:(unsigned long long)arg4 row:(id)arg5;
+ (void)collectCellProperties:(struct WrdTableProperties *)arg1 tracked:(struct WrdTableProperties *)arg2 for:(id)arg3;
+ (void)readCellsFrom:(id)arg1 textRuns:(id)arg2 level:(int)arg3 to:(id)arg4 properties:(struct WrdTableProperties *)arg5 tracked:(struct WrdTableProperties *)arg6;

@end

__attribute__((visibility("hidden")))
@interface WBTableRowProperties : NSObject
{
}

+ (void)write:(id)arg1 properties:(id)arg2 wrdProperties:(struct WrdTableProperties *)arg3 tracked:(struct WrdTableProperties *)arg4;
+ (void)readFrom:(id)arg1 wrdProperties:(struct WrdTableProperties *)arg2 tracked:(struct WrdTableProperties *)arg3 properties:(id)arg4;
+ (void)mapProperties:(id)arg1 toWordProperties:(struct WrdTableProperties *)arg2;
+ (void)mapWordProperties:(struct WrdTableProperties *)arg1 toProperties:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WBTableStyleOverride : NSObject
{
}

+ (void)prepareForWriting:(id)arg1 tableStyleOverride:(id)arg2 wrdProperties:(struct WrdCharacterProperties *)arg3 tracked:(struct WrdCharacterProperties *)arg4;
+ (void)readFrom:(id)arg1 wrdStyle:(struct WrdStyle *)arg2 style:(id)arg3 part:(int)arg4 tableStyleOverride:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface WBText : NSObject
{
}

+ (void)readFrom:(id)arg1 text:(id)arg2 textRun:(struct WrdTextRun *)arg3;
+ (void)readBlocksFrom:(id)arg1 textRun:(struct WrdTextRun *)arg2 to:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WBTextBox : NSObject
{
}

+ (void)readTextFrom:(id)arg1 to:(id)arg2 chain:(unsigned short)arg3;
+ (void)readFrom:(struct WrdEshShape *)arg1 parent:(id)arg2 reader:(id)arg3;
+ (void)checkForOleObject:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDAAnchor : NSObject
{
    struct CGRect mBounds;
    int mTextWrappingMode;
    int mTextWrappingModeType;
    NSArray *mTextWrapPoints;
    double mWrapDistanceLeft;
    double mWrapDistanceTop;
    double mWrapDistanceRight;
    double mWrapDistanceBottom;
    int mHorizontalPosition;
    int mRelativeHorizontalPosition;
    int mVerticalPosition;
    int mRelativeVerticalPosition;
    _Bool mAllowOverlap;
    long long mZIndex;
}

+ (id)stringForTextWrappingModeType:(int)arg1;
@property(nonatomic) long long zIndex; // @synthesize zIndex=mZIndex;
@property(nonatomic) _Bool allowOverlap; // @synthesize allowOverlap=mAllowOverlap;
@property(nonatomic) int relativeVerticalPosition; // @synthesize relativeVerticalPosition=mRelativeVerticalPosition;
@property(nonatomic) int verticalPosition; // @synthesize verticalPosition=mVerticalPosition;
@property(nonatomic) int relativeHorizontalPosition; // @synthesize relativeHorizontalPosition=mRelativeHorizontalPosition;
@property(nonatomic) int horizontalPosition; // @synthesize horizontalPosition=mHorizontalPosition;
@property(nonatomic) double wrapDistanceBottom; // @synthesize wrapDistanceBottom=mWrapDistanceBottom;
@property(nonatomic) double wrapDistanceTop; // @synthesize wrapDistanceTop=mWrapDistanceTop;
@property(nonatomic) double wrapDistanceRight; // @synthesize wrapDistanceRight=mWrapDistanceRight;
@property(nonatomic) double wrapDistanceLeft; // @synthesize wrapDistanceLeft=mWrapDistanceLeft;
@property(retain, nonatomic) NSArray *textWrapPoints; // @synthesize textWrapPoints=mTextWrapPoints;
@property(nonatomic) int textWrappingModeType; // @synthesize textWrappingModeType=mTextWrappingModeType;
@property(nonatomic) int textWrappingMode; // @synthesize textWrappingMode=mTextWrappingMode;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=mBounds;
- (id).cxx_construct;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WDAContent : NSObject <OADClient, OADTextClient>
{
    WDAAnchor *mAnchor;
    WDATextBox *mTextBox;
    OADDrawable *mDrawable;
    int mTextType;
}

+ (Class)classForType:(unsigned short)arg1;
@property(readonly, nonatomic) WDAAnchor *anchor; // @synthesize anchor=mAnchor;
@property(readonly, copy) NSString *description;
- (_Bool)hasText;
- (_Bool)floating;
- (void)setTextType:(int)arg1;
- (int)textType;
- (_Bool)isTopLevelObject;
- (_Bool)isLine;
- (_Bool)isShape;
- (void)setDrawable:(id)arg1;
- (id)drawable;
- (void)setTextBox:(id)arg1 document:(id)arg2;
- (id)textBox;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGRect)bounds;
- (_Bool)hasBounds;
- (id)createTextBoxWithDocument:(id)arg1 textType:(int)arg2;
- (void)clearAnchor;
- (id)createAnchor;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface WDATextBox : NSObject
{
    WDText *mText;
    unsigned long long mNextTextBoxId;
    _Bool mOle;
    WDDocument *mDocument;
    WDAContent *mParent;
}

- (void)setNextTextBoxId:(unsigned long long)arg1;
- (unsigned long long)nextTextBoxId;
- (void)setText:(id)arg1;
- (id)text;
- (void)setParent:(id)arg1;
- (id)parent;
- (void)setOle:(_Bool)arg1;
- (_Bool)isOle;
- (void)setDocument:(id)arg1;
- (id)document;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WDRun : NSObject
{
    WDParagraph *mParagraph;
}

- (void)clearProperties;
- (_Bool)isEmpty;
- (void)dealloc;
- (id)initWithParagraph:(id)arg1;
- (id)init;
- (id)paragraph;
- (int)runType;

@end

__attribute__((visibility("hidden")))
@interface WDAnnotation : WDRun
{
    int mType;
    WDCharacterRun *mReference;
    _Bool mReferencePopertiesFixed;
    WDAnnotationData *mData;
    WDAnnotation *mOtherEndOfRangedAnnotation;
}

- (void)dealloc;
- (void)setOtherEndOfRangedAnnotation:(id)arg1;
- (id)otherEndOfRangedAnnotation;
- (void)useDataFromOtherEnd;
- (id)data;
- (void)setOwner:(id)arg1;
- (id)owner;
- (void)setDate:(id)arg1;
- (id)date;
- (int)annotationType;
- (int)runType;
- (void)setReferencePropertiesFixed;
- (_Bool)referencePropertiesFixed;
- (id)reference;
- (id)text;
- (id)initWithParagraph:(id)arg1 type:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface WDAnnotationData : NSObject
{
    WDText *mText;
    NSDate *mDate;
    NSString *mOwner;
}

- (void)dealloc;
- (void)setOwner:(id)arg1;
- (id)owner;
- (void)setDate:(id)arg1;
- (id)date;
- (id)text;
- (id)initWithText:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDIterator : NSObject
{
}

- (id)next;
- (_Bool)hasNext;

@end

__attribute__((visibility("hidden")))
@interface WDTestIterator : WDIterator
{
    WDIterator *mIterator;
    id mNext;
}

- (id)next;
- (_Bool)hasNext;
- (_Bool)test:(id)arg1;
- (void)dealloc;
- (id)initWithIterator:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDAnnotationIterator : WDTestIterator
{
}

- (_Bool)test:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDArrayIterator : WDIterator
{
    NSArray *mArray;
    unsigned int mNextIndex;
}

- (id)next;
- (_Bool)hasNext;
- (id)initWithArray:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDBlock : NSObject
{
    WDText *mText;
}

- (void)clearProperties;
- (_Bool)isEmpty;
- (id)newRunIterator;
- (id)runIterator;
- (id)initWithText:(id)arg1;
- (id)init;
- (int)textType;
- (id)document;
- (id)text;
- (int)blockType;

@end

__attribute__((visibility("hidden")))
@interface WDCombinedIterator : WDIterator
{
    WDIterator *mParentIterator;
    WDIterator *mChildIterator;
}

@property(retain, nonatomic) WDIterator *childIterator; // @synthesize childIterator=mChildIterator;
- (id)next;
- (_Bool)hasNext;
- (id)newChildIteratorFrom:(id)arg1;
- (id)childIteratorFrom:(id)arg1;
- (void)dealloc;
- (id)initWithParentIterator:(id)arg1;
- (void)incrementChildIterator;

@end

__attribute__((visibility("hidden")))
@interface WDBlockRunIterator : WDCombinedIterator
{
}

- (id)newChildIteratorFrom:(id)arg1;
- (id)childIteratorFrom:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDBookmark : WDRun
{
    NSString *mName;
    int mBookmarkType;
}

- (void)setBookmarkType:(int)arg1;
- (int)bookmarkType;
- (int)runType;
- (void)dealloc;
- (void)setName:(id)arg1;
- (id)name;
- (id)initWithParagraph:(id)arg1 name:(id)arg2 type:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface WDBorder : NSObject <NSCopying>
{
    int mStyle;
    OITSUColor *mColor;
    unsigned char mWidth;
    unsigned char mSpace;
    _Bool mShadow;
    _Bool mFrame;
}

- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setFrame:(_Bool)arg1;
- (_Bool)frame;
- (void)setShadow:(_Bool)arg1;
- (_Bool)shadow;
- (void)setSpace:(unsigned char)arg1;
- (unsigned char)space;
- (void)setWidth:(unsigned char)arg1;
- (unsigned char)width;
- (void)setColor:(id)arg1;
- (id)color;
- (void)setStyle:(int)arg1;
- (int)style;
- (void)setSingleBlackBorder;
- (void)setNullBorder;
- (void)setBorder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToBorder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WDCharacterProperties : NSObject
{
    WDDocument *mDocument;
    unsigned int mOriginal:1;
    unsigned int mTracked:1;
    unsigned int mResolved:1;
    CDStruct_4d9d7b4c *mOriginalProperties;
    CDStruct_4d9d7b4c *mTrackedProperties;
}

+ (int)languageFromString:(id)arg1;
+ (_Bool)languageIsArabicOrHebrew:(int)arg1;
+ (_Bool)languageIsCJK:(int)arg1;
+ (_Bool)languageIsChinese:(int)arg1;
+ (SEL)setFontSelectorForFontType:(int)arg1;
+ (SEL)fontOverriddenSelectorForFontType:(int)arg1;
+ (SEL)fontSelectorForFontType:(int)arg1;
- (void)copyPropertiesInto:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isBracketTwoLinesInOneOverridden;
- (void)setBracketTwoLinesInOne:(int)arg1;
- (int)bracketTwoLinesInOne;
- (_Bool)isTwoLinesInOneOverridden;
- (void)setTwoLinesInOne:(_Bool)arg1;
- (_Bool)twoLinesInOne;
- (_Bool)isCompressHorizontalInVerticalOverridden;
- (void)setCompressHorizontalInVertical:(_Bool)arg1;
- (_Bool)compressHorizontalInVertical;
- (_Bool)isHorizontalInVerticalOverridden;
- (void)setHorizontalInVertical:(_Bool)arg1;
- (_Bool)horizontalInVertical;
- (_Bool)isOffsetToPictureDataOverridden;
- (void)setOffsetToPictureData:(int)arg1;
- (int)offsetToPictureData;
- (_Bool)isObjectIDForOle2Overridden;
- (void)setObjectIDForOle2:(int)arg1;
- (int)objectIDForOle2;
- (_Bool)isOle2Overridden;
- (void)setOle2:(_Bool)arg1;
- (_Bool)ole2;
- (_Bool)isEmbeddedObjectOverridden;
- (void)setEmbeddedObject:(_Bool)arg1;
- (_Bool)embeddedObject;
- (_Bool)isFontSizeForBiTextOverridden;
- (void)setFontSizeForBiText:(unsigned short)arg1;
- (unsigned short)fontSizeForBiText;
- (_Bool)isLanguageForBiTextOverridden;
- (void)setLanguageForBiText:(int)arg1;
- (int)languageForBiText;
- (_Bool)isLanguageForFarEastOverridden;
- (void)setLanguageForFarEast:(int)arg1;
- (int)languageForFarEast;
- (_Bool)isCharPositionOfPictureBulletInBookmarkOverridden;
- (void)setCharPositionOfPictureBulletInBookmark:(int)arg1;
- (int)charPositionOfPictureBulletInBookmark;
- (_Bool)isListCharacterPictureBulletOverridden;
- (void)setListCharacterPictureBullet:(_Bool)arg1;
- (_Bool)isListCharacterPictureBullet;
- (_Bool)isSpecialCharacterOverridden;
- (void)setSpecialCharacter:(_Bool)arg1;
- (_Bool)isSpecialCharacter;
- (_Bool)formattingChangedDifferentFrom:(id)arg1;
- (_Bool)editDifferentFrom:(id)arg1;
- (_Bool)deletionDifferentFrom:(id)arg1;
- (_Bool)isEditDateOverridden;
- (void)setEditDate:(id)arg1;
- (id)editDate;
- (_Bool)isDeletionDateOverridden;
- (void)setDeletionDate:(id)arg1;
- (id)deletionDate;
- (_Bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (_Bool)isIndexToAuthorIDOfEditOverridden;
- (void)setIndexToAuthorIDOfEdit:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfEdit;
- (_Bool)isIndexToAuthorIDOfDeletionOverridden;
- (void)setIndexToAuthorIDOfDeletion:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfDeletion;
- (_Bool)isFormattingChangedOverridden;
- (void)setFormattingChanged:(int)arg1;
- (int)formattingChanged;
- (_Bool)isEditedOverridden;
- (void)setEdited:(int)arg1;
- (int)edited;
- (_Bool)isDeletedOverridden;
- (void)setDeleted:(int)arg1;
- (int)deleted;
- (_Bool)isUseCsFontOverridden;
- (void)setUseCsFont:(int)arg1;
- (int)useCsFont;
- (_Bool)isRightToLeftOverridden;
- (void)setRightToLeft:(int)arg1;
- (int)rightToLeft;
- (_Bool)isLanguageForDefaultTextOverridden;
- (void)setLanguageForDefaultText:(int)arg1;
- (int)languageForDefaultText;
- (_Bool)isColorAutoOverridden;
- (void)setColorAuto:(_Bool)arg1;
- (_Bool)isColorAuto;
- (_Bool)isColorOverridden;
- (void)setColor:(id)arg1;
- (id)color;
- (_Bool)isEmphasisMarkOverridden;
- (void)setEmphasisMark:(int)arg1;
- (int)emphasisMark;
- (_Bool)isVerticalAlignOverridden;
- (void)setVerticalAlign:(int)arg1;
- (int)verticalAlign;
- (_Bool)isShadow2010Overridden;
- (void)setShadow2010:(id)arg1;
- (id)shadow2010;
- (_Bool)isReflectionOverridden;
- (void)setReflection:(id)arg1;
- (id)reflection;
- (_Bool)isFontSizeOverridden;
- (void)setFontSize:(unsigned short)arg1;
- (unsigned short)fontSize;
- (_Bool)isPositionOverridden;
- (void)setPosition:(short)arg1;
- (short)position;
- (_Bool)isSpacingOverridden;
- (void)setSpacing:(short)arg1;
- (short)spacing;
- (_Bool)isHiddenOverridden;
- (void)setHidden:(int)arg1;
- (int)hidden;
- (_Bool)isLowerCaseOverridden;
- (void)setLowerCase:(_Bool)arg1;
- (_Bool)isLowerCase;
- (_Bool)isCapsOverridden;
- (void)setCaps:(int)arg1;
- (int)caps;
- (_Bool)isSmallCapsOverridden;
- (void)setSmallCaps:(int)arg1;
- (int)smallCaps;
- (_Bool)isLigatureOverridden;
- (void)setLigature:(int)arg1;
- (int)ligature;
- (_Bool)isHighlightColorOverridden;
- (void)setHighlightColor:(int)arg1;
- (int)highlightColor;
- (_Bool)isHighlightOverridden;
- (void)setHighlight:(_Bool)arg1;
- (_Bool)isHighlight;
- (_Bool)isDoubleStrikeThroughOverridden;
- (void)setDoubleStrikeThrough:(int)arg1;
- (int)doubleStrikeThrough;
- (_Bool)isStrikeThroughOverridden;
- (void)setStrikeThrough:(int)arg1;
- (int)strikeThrough;
- (_Bool)isUnderlineOverridden;
- (void)setUnderline:(int)arg1;
- (int)underline;
- (_Bool)isTextScaleOverridden;
- (void)setTextScale:(unsigned short)arg1;
- (unsigned short)textScale;
- (_Bool)isKerningOverridden;
- (void)setKerning:(unsigned short)arg1;
- (unsigned short)kerning;
- (_Bool)isUnderlineColorOverridden;
- (void)setUnderlineColor:(id)arg1;
- (id)underlineColor;
- (_Bool)isShadow2010OpacityOverridden;
- (void)setShadow2010Opacity:(float)arg1;
- (float)shadow2010Opacity;
- (_Bool)isShadowOverridden;
- (void)setShadow:(int)arg1;
- (int)shadow;
- (_Bool)isImprintOverridden;
- (void)setImprint:(int)arg1;
- (int)imprint;
- (_Bool)isEmbossedOverridden;
- (void)setEmbossed:(int)arg1;
- (int)embossed;
- (_Bool)isOutline2010WidthOverridden;
- (void)setOutline2010Width:(float)arg1;
- (float)outline2010Width;
- (_Bool)isOutlineColorOverridden;
- (void)setOutlineColor:(id)arg1;
- (id)outlineColor;
- (_Bool)isOutlineOverridden;
- (void)setOutline:(int)arg1;
- (int)outline;
- (_Bool)isItalicForBiTextOverridden;
- (void)setItalicForBiText:(int)arg1;
- (int)italicForBiText;
- (_Bool)isItalicOverridden;
- (void)setItalic:(int)arg1;
- (int)italic;
- (_Bool)isBoldForBiTextOverridden;
- (void)setBoldForBiText:(int)arg1;
- (int)boldForBiText;
- (_Bool)isBoldOverridden;
- (void)setBold:(int)arg1;
- (int)bold;
- (_Bool)isSymbolCharacterOverridden;
- (void)setSymbolCharacter:(unsigned short)arg1;
- (unsigned short)symbolCharacter;
- (_Bool)isFontHintOverridden;
- (void)setFontHint:(int)arg1;
- (int)fontHint;
- (void)setFont:(id)arg1 forFontType:(int)arg2;
- (_Bool)isFontOverriddenForFontType:(int)arg1;
- (id)fontForFontType:(int)arg1;
- (_Bool)isSymbolFontOverridden;
- (void)setSymbolFont:(id)arg1;
- (id)symbolFont;
- (_Bool)isFarEastFontOverridden;
- (void)setFarEastFont:(id)arg1;
- (id)farEastFont;
- (_Bool)isExtendedFontOverridden;
- (void)setExtendedFont:(id)arg1;
- (id)extendedFont;
- (_Bool)isFontOverridden;
- (void)setFont:(id)arg1;
- (id)font;
- (_Bool)isShadingOverridden;
- (id)mutableShading;
- (id)shading;
- (_Bool)isBorderOverridden;
- (id)mutableBorder;
- (id)border;
- (void)clearBaseStyle;
- (_Bool)isBaseStyleOverridden;
- (void)setBaseStyle:(id)arg1;
- (id)baseStyle;
- (void)removeEmptyFormattingChanges:(id)arg1;
- (void)applyPropertiesFrom:(id)arg1 ifOverriddenIn:(id)arg2;
- (void)negateFormattingChangesWithDefaults:(id)arg1;
- (void)setResolveMode:(int)arg1;
- (int)resolveMode;
- (_Bool)isAnythingOverridden;
- (id)document;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;
- (int)reverseBooleanProperty:(int)arg1;
- (_Bool)formattingChangedDifferentFrom:(id)arg1 mode:(int)arg2;
- (_Bool)editDifferentFrom:(id)arg1 mode:(int)arg2;
- (_Bool)deletionDifferentFrom:(id)arg1 mode:(int)arg2;
- (_Bool)isBooleanProbablyDifferent:(unsigned char)arg1 than:(unsigned char)arg2;
- (_Bool)isAnythingOverriddenIn:(CDStruct_4d9d7b4c *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDCharacterRun : WDRun
{
    WDCharacterProperties *mProperties;
    NSMutableString *mString;
    _Bool mBinaryWriterContentFlag;
}

- (_Bool)isEmpty;
- (void)copyPropertiesFrom:(id)arg1;
- (void)removeLastCharacter:(unsigned short)arg1;
- (id)initWithParagraph:(id)arg1 string:(id)arg2;
- (id)initWithParagraph:(id)arg1;
- (void)clearString;
- (void)appendString:(id)arg1;
- (void)setString:(id)arg1;
- (id)string;
- (void)clearProperties;
- (void)setPropertiesForDocument;
- (id)properties;
- (int)runType;
- (void)dealloc;
- (void)setBinaryWriterContentFlag:(_Bool)arg1;
- (_Bool)binaryWriterContentFlag;

@end

__attribute__((visibility("hidden")))
@interface WDCitation : NSObject
{
    WDDocument *mDocument;
    NSString *mSourceType;
    NSMutableArray *mAuthors;
    NSString *mYear;
    NSMutableArray *mTitles;
    NSMutableArray *mUrls;
    NSString *mPeriodicalTitle;
    NSString *mVolume;
    NSString *mNumber;
    NSString *mSection;
    NSString *mPubDate;
    NSString *mPages;
}

+ (id)stringValuesForNodesAtPath:(id)arg1 docPtr:(struct _xmlDoc *)arg2 trimStyle:(_Bool)arg3;
+ (id)stringValueForNodeAtPath:(id)arg1 docPtr:(struct _xmlDoc *)arg2 trimStyle:(_Bool)arg3;
+ (id)subStringOf:(struct _xmlDoc *)arg1 forPath:(id)arg2;
+ (struct _xmlNode *)trimStyle:(struct _xmlNode *)arg1;
+ (struct _xmlNode *)nodeAtPath:(id)arg1 docPtr:(struct _xmlDoc *)arg2;
+ (id)wordStringForRefType:(int)arg1;
+ (int)refTypeForWordString:(id)arg1;
+ (id)endNoteStringForRefType:(int)arg1;
+ (void)initialize;
@property(retain, nonatomic) NSString *pages; // @synthesize pages=mPages;
@property(retain, nonatomic) NSMutableArray *urls; // @synthesize urls=mUrls;
@property(retain, nonatomic) NSString *pubDate; // @synthesize pubDate=mPubDate;
@property(retain, nonatomic) NSString *section; // @synthesize section=mSection;
@property(retain, nonatomic) NSString *number; // @synthesize number=mNumber;
@property(retain, nonatomic) NSString *volume; // @synthesize volume=mVolume;
@property(retain, nonatomic) NSString *periodicalTitle; // @synthesize periodicalTitle=mPeriodicalTitle;
@property(retain, nonatomic) NSMutableArray *titles; // @synthesize titles=mTitles;
@property(retain, nonatomic) NSString *sourceType; // @synthesize sourceType=mSourceType;
@property(retain, nonatomic) NSMutableArray *authors; // @synthesize authors=mAuthors;
@property(retain, nonatomic) NSString *year; // @synthesize year=mYear;
- (id)description;
- (id)initWithDocument:(id)arg1;
- (id)document;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDCitationAuthor : NSObject
{
    NSString *mFirst;
    NSString *mLast;
}

@property(retain, nonatomic) NSString *last; // @synthesize last=mLast;
@property(retain, nonatomic) NSString *first; // @synthesize first=mFirst;
- (id)initWithFirst:(id)arg1 last:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDCitationTable : NSObject
{
    WDDocument *mDocument;
    NSMutableDictionary *mCitations;
}

- (id)description;
- (id)citationIDs;
- (void)addCitation:(id)arg1 forID:(id)arg2;
- (id)citationFor:(id)arg1;
- (unsigned long long)count;
- (id)initWithDocument:(id)arg1;
- (id)document;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDDateTime : WDRun
{
    WDCharacterProperties *mProperties;
    NSDate *mDate;
}

- (int)runType;
- (id)date;
- (void)clearProperties;
- (void)setProperties:(id)arg1;
- (id)properties;
- (id)initWithParagraph:(id)arg1 date:(id)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDDocument : OCDDocument
{
    WDStyleSheet *mStyleSheet;
    WDFontTable *mFontTable;
    WDListDefinitionTable *mListDefinitionTable;
    WDRevisionAuthorTable *mRevisionAuthorTable;
    WDCitationTable *mCitationTable;
    WDListTable *mListTable;
    NSMutableArray *mSections;
    unsigned short mDefaultTabWidth;
    WDText *mImageBulletText;
    WDText *mFootnoteSeparator;
    WDText *mFootnoteContinuationSeparator;
    WDText *mFootnoteContinuationNotice;
    WDText *mEndnoteSeparator;
    WDText *mEndnoteContinuationSeparator;
    WDText *mEndnoteContinuationNotice;
    int mFootnoteNumberFormat;
    int mEndnoteNumberFormat;
    int mFootnotePosition;
    int mEndnotePosition;
    int mFootnoteRestart;
    int mEndnoteRestart;
    unsigned short mFootnoteNumberingStart;
    int mGutterPosition;
    NSString *mOleFilename;
    NSString *mKinsokuAltBreakBefore;
    NSString *mKinsokuAltBreakAfter;
    short mZoomPercentage;
    NSString *mVersion;
    unsigned int mMirrorMargins:1;
    unsigned int mBorderSurroundHeader:1;
    unsigned int mBorderSurroundFooter:1;
    unsigned int mKinsokuStrict:1;
    unsigned int mAutoHyphenate:1;
    unsigned int mEvenAndOddHeaders:1;
    unsigned int mBookFold:1;
    unsigned int mShowMarkup:1;
    unsigned int mShowComments:1;
    unsigned int mTrackChanges:1;
    unsigned int mShowRevisionMarksOnScreen:1;
    unsigned int mShowInsertionsAndDeletions:1;
    unsigned int mShowFormatting:1;
    unsigned int mShowOutline:1;
    unsigned int mNoTabForHangingIndents:1;
    NSMutableArray *mDocumentImages;
    NSMutableArray *mChangeTrackingEditDates;
    NSMutableArray *mChangeTrackingEditAuthors;
    NSDate *mCreationDate;
    NSDate *mModificationDate;
    NSMutableArray *mImageBullets;
    OADBackground *mDocumentBackground;
    OADTheme *mTheme;
    NSMutableSet *mObjPointers;
}

+ (id)impliedColorMap;
- (id)description;
- (_Bool)isFromBinary;
- (id)newAnnotationBlockIterator;
- (id)annotationBlockIterator;
- (id)newEndnoteBlockIterator;
- (id)endnoteBlockIterator;
- (id)newFootnoteBlockIterator;
- (id)footnoteBlockIterator;
- (id)newAnnotationIterator;
- (id)annotationIterator;
- (id)newEndnoteIterator;
- (id)endnoteIterator;
- (id)newFootnoteIterator;
- (id)footnoteIterator;
- (id)newMainRunsIterator;
- (id)mainRunsIterator;
- (id)newMainBlocksIterator;
- (id)mainBlocksIterator;
- (id)newSectionIterator;
- (id)sectionIterator;
- (void)removeEmptySections;
- (id)theme;
- (id)documentBackground;
- (void)setDocumentBackground:(id)arg1;
- (id)imageBulletText;
- (void)setLastModDate:(id)arg1;
- (id)lastModDate;
- (void)setCreationDate:(id)arg1;
- (id)creationDate;
- (id)changeTrackingEditAuthors;
- (id)changeTrackingEditDates;
- (void)addChangeTrackingEditAtDate:(id)arg1 authorIndex:(int)arg2;
- (void)setNoTabForHangingIndents:(_Bool)arg1;
- (_Bool)noTabForHangingIndents;
- (void)setShowOutline:(_Bool)arg1;
- (_Bool)showOutline;
- (void)setShowFormatting:(_Bool)arg1;
- (_Bool)showFormatting;
- (void)setShowInsertionsAndDeletions:(_Bool)arg1;
- (_Bool)showInsertionsAndDeletions;
- (void)setShowRevisionMarksOnScreen:(_Bool)arg1;
- (_Bool)showRevisionMarksOnScreen;
- (void)setTrackChanges:(_Bool)arg1;
- (_Bool)trackChanges;
- (void)setShowComments:(_Bool)arg1;
- (_Bool)showComments;
- (void)setShowMarkup:(_Bool)arg1;
- (_Bool)showMarkup;
- (void)addRevisionAuthor:(id)arg1;
- (unsigned long long)revisionAuthorAddLookup:(id)arg1;
- (id)revisionAuthorAt:(unsigned long long)arg1;
- (unsigned long long)revisionAuthorCount;
- (id)revisionAuthorTable;
- (void)setVersion:(id)arg1;
- (id)version;
- (void)addImageBullets;
- (id)imageBullets;
- (id)imageBulletParagraph;
- (id)addImageBulletText;
- (id)imageBulletWithCharacterOffset:(int)arg1;
- (id)applicationName;
- (void)setZoomPercentage:(short)arg1;
- (short)zoomPercentage;
- (void)setBookFold:(_Bool)arg1;
- (_Bool)bookFold;
- (void)setOleFilename:(id)arg1;
- (id)oleFilename;
- (void)setGutterPosition:(int)arg1;
- (int)gutterPosition;
- (id)listWithListId:(int)arg1;
- (id)listTable;
- (id)listDefinitionWithListId:(int)arg1;
- (id)listDefinitionWithListDefinitionId:(int)arg1;
- (id)listDefinitionTable;
- (id)citationTable;
- (void)addCitation:(id)arg1 forID:(id)arg2;
- (id)citationFor:(id)arg1;
- (unsigned long long)citationCount;
- (void)setFootnoteNumberingStart:(unsigned short)arg1;
- (unsigned short)footnoteNumberingStart;
- (void)setEndnoteRestart:(int)arg1;
- (int)endnoteRestart;
- (void)setFootnoteRestart:(int)arg1;
- (int)footnoteRestart;
- (void)setEndnotePosition:(int)arg1;
- (int)endnotePosition;
- (void)setFootnotePosition:(int)arg1;
- (int)footnotePosition;
- (void)setEndnoteNumberFormat:(int)arg1;
- (int)endnoteNumberFormat;
- (void)setFootnoteNumberFormat:(int)arg1;
- (int)footnoteNumberFormat;
- (id)endnoteContinuationNotice;
- (id)endnoteContinuationSeparator;
- (id)endnoteSeparator;
- (id)footnoteContinuationNotice;
- (id)footnoteContinuationSeparator;
- (id)footnoteSeparator;
- (void)setEvenAndOddHeaders:(_Bool)arg1;
- (_Bool)evenAndOddHeaders;
- (void)setAutoHyphenate:(_Bool)arg1;
- (_Bool)autoHyphenate;
- (void)setKinsokuStrict:(_Bool)arg1;
- (_Bool)kinsokuStrict;
- (void)setKinsokuAltBreakAfter:(id)arg1;
- (id)kinsokuAltBreakAfter;
- (void)setKinsokuAltBreakBefore:(id)arg1;
- (id)kinsokuAltBreakBefore;
- (void)setDefaultTabWidth:(unsigned short)arg1;
- (unsigned short)defaultTabWidth;
- (void)setBorderSurroundFooter:(_Bool)arg1;
- (_Bool)borderSurroundFooter;
- (void)setBorderSurroundHeader:(_Bool)arg1;
- (_Bool)borderSurroundHeader;
- (void)setMirrorMargins:(_Bool)arg1;
- (_Bool)mirrorMargins;
- (id)addSection;
- (id)lastSection;
- (id)sectionAt:(unsigned long long)arg1;
- (unsigned long long)sectionCount;
- (id)sections;
- (id)fontTable;
- (id)styleSheet;
- (void)removeObjPointer:(id)arg1;
- (void)addObjPointer:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WDEndnoteIterator : WDTestIterator
{
}

- (_Bool)test:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDFieldMarker : WDRun
{
    WDCharacterProperties *mProperties;
    int mFieldPosition;
    int mMarkerType;
    unsigned char mFieldType;
    unsigned int mZombieEmbed:1;
    unsigned int mResultDirty:1;
    unsigned int mResultEdited:1;
    unsigned int mLocked:1;
    unsigned int mPrivateResult:1;
    unsigned int mNested:1;
    unsigned int mHasSeparator:1;
}

- (void)setHasSeparator:(_Bool)arg1;
- (_Bool)hasSeparator;
- (void)setNested:(_Bool)arg1;
- (_Bool)nested;
- (void)setPrivateResult:(_Bool)arg1;
- (_Bool)privateResult;
- (void)setLocked:(_Bool)arg1;
- (_Bool)locked;
- (void)setResultEdited:(_Bool)arg1;
- (_Bool)resultEdited;
- (void)setResultDirty:(_Bool)arg1;
- (_Bool)resultDirty;
- (void)setZombieEmbed:(_Bool)arg1;
- (_Bool)zombieEmbed;
- (int)runType;
- (void)setFieldType:(unsigned char)arg1;
- (unsigned char)fieldType;
- (void)setFieldMarkerType:(int)arg1;
- (int)fieldMarkerType;
- (void)setFieldPosition:(int)arg1;
- (int)fieldPosition;
- (void)dealloc;
- (id)initWithParagraph:(id)arg1;
- (void)clearProperties;
- (id)properties;

@end

__attribute__((visibility("hidden")))
@interface WDFont : NSObject <NSCopying>
{
    NSString *mName;
    NSMutableArray *mAlternateNames;
    int mFontFamily;
    int mCharacterSet;
    int mPitch;
}

+ (int)cpFontClassFromWdFontFamily:(int)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)setPitch:(int)arg1;
- (int)pitch;
- (void)setCharacterSet:(int)arg1;
- (int)characterSet;
- (void)setFontFamily:(int)arg1;
- (int)fontFamily;
- (id)secondName;
- (void)addAlternateName:(id)arg1;
- (id)alternateNames;
- (void)setName:(id)arg1;
- (id)name;

@end

__attribute__((visibility("hidden")))
@interface WDFontTable : NSObject
{
    OITSUNoCopyDictionary *mFontTable;
    NSMutableArray *mFontsInOrderOfInsertion;
}

- (id)fonts;
- (id)createFontWithName:(id)arg1;
- (id)fontWithName:(id)arg1 create:(_Bool)arg2;
- (id)fontWithName:(id)arg1;
- (void)clear;
- (unsigned long long)count;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WDFootnoteIterator : WDTestIterator
{
}

- (_Bool)test:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDFormField : WDRun
{
    unsigned int mPosition;
    _Bool mLinkAbsolute;
    _Bool mLinkSpecifyingNamedLocation;
    NSString *mNamedLocation;
    NSString *mURI;
    NSString *mMacName;
    NSString *mDosName;
}

- (int)runType;
- (void)setDosName:(id)arg1;
- (id)dosName;
- (void)setMacName:(id)arg1;
- (id)macName;
- (void)setURI:(id)arg1;
- (id)URI;
- (void)setNamedLocation:(id)arg1;
- (id)namedLocation;
- (void)setLinkSpecifyingNamedLocation:(_Bool)arg1;
- (_Bool)linkSpecifyingNamedLocation;
- (void)setLinkAbsolute:(_Bool)arg1;
- (_Bool)linkAbsolute;
- (void)setPosition:(unsigned int)arg1;
- (unsigned int)position;
- (void)dealloc;
- (id)initWithParagraph:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDHyperlinkFieldMarker : WDFieldMarker
{
    NSString *mLink;
    NSString *mFragment;
    unsigned int mInternalLink:1;
}

@property(retain, nonatomic) NSString *fragment; // @synthesize fragment=mFragment;
@property(retain, nonatomic) NSString *link; // @synthesize link=mLink;
@property(nonatomic) _Bool internalLink; // @synthesize internalLink=mInternalLink;
- (void)dealloc;
- (int)runType;

@end

__attribute__((visibility("hidden")))
@interface WDList : NSObject
{
    WDDocument *mDocument;
    int mListId;
    int mListDefinitionId;
    NSMutableArray *mLevelOverrides;
}

@property(readonly, nonatomic) int listDefinitionId; // @synthesize listDefinitionId=mListDefinitionId;
@property(readonly, nonatomic) int listId; // @synthesize listId=mListId;
- (id)description;
- (id)initWithDocument:(id)arg1 listId:(int)arg2 listDefinitionId:(int)arg3;
- (id)levelOverrides;
- (id)addLevelOverrideWithLevel:(unsigned char)arg1;
- (id)levelOverrideForLevel:(unsigned char)arg1;
- (id)levelOverrideAt:(unsigned long long)arg1;
- (unsigned long long)levelOverrideCount;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDListDefinition : NSObject <NSCopying>
{
    WDDocument *mDocument;
    int mListDefinitionId;
    NSString *mStyleId;
    NSString *mStyleRefId;
    int mType;
    NSMutableArray *mLevels;
}

@property(copy, nonatomic) NSString *styleRefId; // @synthesize styleRefId=mStyleRefId;
@property(readonly, nonatomic) NSString *styleId; // @synthesize styleId=mStyleId;
@property(readonly, nonatomic) int listDefinitionId; // @synthesize listDefinitionId=mListDefinitionId;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDocument:(id)arg1 listDefinitionId:(int)arg2 styleId:(id)arg3;
- (id)addLevel;
- (id)levelAt:(int)arg1;
- (int)levelCount;
- (void)setType:(int)arg1;
- (int)type;

@end

__attribute__((visibility("hidden")))
@interface WDListDefinitionTable : NSObject
{
    WDDocument *mDocument;
    NSMutableArray *mListDefinitions;
    NSMutableDictionary *mListDefinitionMapById;
    NSMutableDictionary *mListDefinitionMapByStyleId;
    WDListDefinition *mNullListDefinition;
}

- (id)resolvedDefinitionWithDefinitionId:(int)arg1;
- (id)definitionWithStyleId:(id)arg1;
- (id)definitionWithDefinitionId:(int)arg1;
- (void)setStyleId:(id)arg1 forDefinitionWithDefinitionId:(int)arg2;
- (id)addDefinitionWithDefinitionId:(int)arg1 styleId:(id)arg2;
- (id)definitions;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDListLevel : NSObject
{
    WDDocument *mDocument;
    WDParagraphProperties *mParagraphProperties;
    WDCharacterProperties *mCharacterProperties;
    WDOfficeArt *mImage;
    long long mStartNumber;
    int mNumberFormat;
    _Bool mRestartNumbering;
    long long mRestartLevel;
    _Bool mLegal;
    int mSuffix;
    NSMutableString *mText;
    _Bool mLegacy;
    long long mLegacySpace;
    long long mLegacyIndent;
    int mJustification;
}

- (id)description;
- (id)characterProperties;
- (id)paragraphProperties;
- (_Bool)justificationOverridden;
- (void)setJustification:(int)arg1;
- (int)justification;
- (void)setLegacyIndent:(long long)arg1;
- (long long)legacyIndent;
- (void)setLegacySpace:(long long)arg1;
- (long long)legacySpace;
- (void)setLegacy:(_Bool)arg1;
- (_Bool)legacy;
- (_Bool)textOverridden;
- (void)setText:(id)arg1;
- (id)text;
- (_Bool)suffixOverridden;
- (void)setSuffix:(int)arg1;
- (int)suffix;
- (_Bool)legalOverridden;
- (void)setLegal:(_Bool)arg1;
- (_Bool)legal;
- (_Bool)restartLevelOverridden;
- (void)setRestartLevel:(long long)arg1;
- (long long)restartLevel;
- (_Bool)restartNumberingOverridden;
- (void)setRestartNumbering:(_Bool)arg1;
- (_Bool)restartNumbering;
- (void)setImage:(id)arg1;
- (id)image;
- (_Bool)imageBulletOverridden;
- (_Bool)imageBullet;
- (_Bool)numberFormatOverridden;
- (void)setNumberFormat:(int)arg1;
- (int)numberFormat;
- (_Bool)startNumberOverridden;
- (void)setStartNumber:(long long)arg1;
- (long long)startNumber;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDListLevelOverride : NSObject
{
    WDDocument *mDocument;
    WDListLevel *mListLevel;
    unsigned char mLevel;
    long long mStartNumber;
    _Bool mStartNumberOverridden;
}

- (id)description;
- (_Bool)isListLevelOverridden;
- (id)mutableListLevel;
- (id)listLevel;
- (_Bool)isStartNumberOverridden;
- (void)setStartNumber:(long long)arg1;
- (long long)startNumber;
- (unsigned char)level;
- (id)initWithDocument:(id)arg1 level:(unsigned char)arg2;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDListTable : NSObject
{
    WDDocument *mDocument;
    NSMutableArray *mLists;
    NSMutableDictionary *mListMapById;
    WDList *mNullList;
}

- (void)dealloc;
- (id)initWithDocument:(id)arg1;
- (id)listWithListId:(int)arg1;
- (id)addListWithListId:(int)arg1 listDefinitionId:(int)arg2;
- (id)listAt:(unsigned long long)arg1;
- (unsigned long long)listCount;
- (id)lists;

@end

__attribute__((visibility("hidden")))
@interface WDNote : WDRun
{
    WDText *mText;
    WDCharacterRun *mReference;
    _Bool mAutomaticNumbering;
}

- (void)dealloc;
- (id)initWithParagraph:(id)arg1 footnote:(_Bool)arg2;
- (int)runType;
- (void)setAutomaticNumbering:(_Bool)arg1;
- (_Bool)automaticNumbering;
- (id)reference;
- (id)text;

@end

__attribute__((visibility("hidden")))
@interface WDNoteBlockIterator : WDCombinedIterator
{
}

- (id)newChildIteratorFrom:(id)arg1;
- (id)childIteratorFrom:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDOfficeArt : WDRun
{
    WDCharacterProperties *mProperties;
    OADDrawable *mDrawable;
    _Bool mFloating;
}

+ (int)textBoxTextTypeForRegularTextType:(int)arg1;
- (void)propagateTextTypeToDrawables;
- (void)setTextType:(int)arg1 recursivelyToDrawable:(id)arg2;
- (id)imageName;
- (id)imageData;
- (void)setImageBlipRef:(id)arg1;
- (id)imageBlipRef;
- (void)setFloating:(_Bool)arg1;
- (_Bool)isFloating;
- (void)clearDrawable;
- (_Bool)isDrawableOverridden;
- (id)overrideDrawable;
- (void)setDrawable:(id)arg1;
- (id)drawable;
- (void)clearProperties;
- (void)setProperties:(id)arg1;
- (id)properties;
- (int)runType;
- (void)dealloc;
- (id)initWithParagraph:(id)arg1;
- (void)checkForFloating:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDPicture : WDOfficeArt
{
}

- (_Bool)hasContent;
- (int)runType;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDOleObject : WDPicture
{
}

- (int)runType;

@end

__attribute__((visibility("hidden")))
@interface WDParagraph : WDBlock
{
    WDParagraphProperties *mProperties;
    NSMutableArray *mRuns;
}

- (_Bool)isEmpty;
- (int)blockType;
- (id)newRunIterator;
- (id)runIterator;
- (void)removeLastCharacter:(unsigned short)arg1;
- (float)maxReflectionDistance;
- (id)addDateTime:(id)arg1;
- (id)addBookmark:(id)arg1 type:(int)arg2;
- (id)addBookmark;
- (id)addSpecialCharacter;
- (id)addSymbol;
- (id)addHyperlinkFieldMarker:(int)arg1;
- (id)addHyperlinkFieldMarker;
- (id)addFieldMarker:(int)arg1;
- (id)addFieldMarker;
- (id)addEndnote;
- (id)addFootnote;
- (id)addAnnotation:(int)arg1;
- (id)addAnnotation:(int)arg1 atIndex:(unsigned long long)arg2;
- (id)addCharacterRun;
- (void)clearRuns;
- (void)removeRun:(id)arg1;
- (void)insertRun:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addRun:(id)arg1;
- (id)runAt:(unsigned long long)arg1;
- (unsigned long long)runCount;
- (id)runs;
- (void)clearProperties;
- (id)properties;
- (void)dealloc;
- (id)initWithText:(id)arg1 string:(id)arg2;
- (id)initWithText:(id)arg1;
- (_Bool)isContinuationOf:(id)arg1;
- (_Bool)isTextFrame;

@end

__attribute__((visibility("hidden")))
@interface WDParagraphProperties : NSObject <NSCopying>
{
    WDDocument *mDocument;
    WDCharacterProperties *mCharacterProperties;
    unsigned int mCharacterPropertiesOverridden:1;
    unsigned int mOriginal:1;
    unsigned int mTracked:1;
    unsigned int mResolved:1;
    CDStruct_8641e206 *mOriginalProperties;
    CDStruct_8641e206 *mTrackedProperties;
}

- (void)copyPropertiesInto:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isContextualSpacingOverridden;
- (void)setContextualSpacing:(_Bool)arg1;
- (_Bool)contextualSpacing;
- (_Bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (_Bool)isFormattingChangedOverridden;
- (void)setFormattingChanged:(int)arg1;
- (int)formattingChanged;
- (void)addTabStopDeletedPosition:(short)arg1;
- (short)tabStopDeletedPositionAt:(unsigned long long)arg1;
- (void)setTabStopDeletedPositionCount:(unsigned long long)arg1;
- (unsigned long long)tabStopDeletedPositionCount;
- (void)removeTabStopAddedWithPosition:(short)arg1;
- (void)addTabStopAdded:(CDStruct_bd9d81e1 *)arg1;
- (CDStruct_bd9d81e1 *)tabStopAddedAt:(unsigned long long)arg1;
- (_Bool)hasTabStopDeletedAtPosition:(short)arg1;
- (_Bool)hasTabStopAddedAtPosition:(short)arg1;
- (void)setTabStopAddedCount:(unsigned long long)arg1;
- (unsigned long long)tabStopAddedCount;
- (_Bool)isKinsokuOffOverridden;
- (void)setKinsokuOff:(_Bool)arg1;
- (_Bool)kinsokuOff;
- (_Bool)isBiDiOverridden;
- (void)setBiDi:(_Bool)arg1;
- (_Bool)biDi;
- (_Bool)isWidowControlOverridden;
- (void)setWidowControl:(_Bool)arg1;
- (_Bool)widowControl;
- (_Bool)isSuppressLineNumbersOverridden;
- (void)setSuppressLineNumbers:(_Bool)arg1;
- (_Bool)suppressLineNumbers;
- (_Bool)isSuppressAutoHyphensOverridden;
- (void)setSuppressAutoHyphens:(_Bool)arg1;
- (_Bool)suppressAutoHyphens;
- (_Bool)isKeepLinesTogetherOverridden;
- (void)setKeepLinesTogether:(_Bool)arg1;
- (_Bool)keepLinesTogether;
- (_Bool)isKeepNextParagraphTogetherOverridden;
- (void)setKeepNextParagraphTogether:(_Bool)arg1;
- (_Bool)keepNextParagraphTogether;
- (_Bool)isOutlineLevelOverridden;
- (void)setOutlineLevel:(unsigned short)arg1;
- (unsigned short)outlineLevel;
- (_Bool)isPhysicalJustificationOverridden;
- (void)setPhysicalJustification:(int)arg1;
- (int)physicalJustification;
- (_Bool)isJustificationOverridden;
- (void)setJustification:(int)arg1;
- (int)justification;
- (_Bool)isFirstLineIndentCharsOverridden;
- (void)setFirstLineIndentChars:(short)arg1;
- (short)firstLineIndentChars;
- (_Bool)isRightIndentCharsOverridden;
- (void)setRightIndentChars:(short)arg1;
- (short)rightIndentChars;
- (_Bool)isLeftIndentCharsOverridden;
- (void)setLeftIndentChars:(short)arg1;
- (short)leftIndentChars;
- (_Bool)isFirstLineIndentOverridden;
- (void)setFirstLineIndent:(short)arg1;
- (short)firstLineIndent;
- (_Bool)isRightIndentOverridden;
- (void)setRightIndent:(short)arg1;
- (short)rightIndent;
- (_Bool)isFollowingIndentOverridden;
- (void)setFollowingIndent:(short)arg1;
- (short)followingIndent;
- (_Bool)isLeadingIndentOverridden;
- (void)setLeadingIndent:(short)arg1;
- (short)leadingIndent;
- (_Bool)isLeftIndentOverridden;
- (void)setLeftIndent:(short)arg1;
- (short)leftIndent;
- (_Bool)isLineSpacingRuleOverridden;
- (void)setLineSpacingRule:(int)arg1;
- (int)lineSpacingRule;
- (_Bool)isLineSpacingOverridden;
- (void)setLineSpacing:(short)arg1;
- (short)lineSpacing;
- (_Bool)isSpaceAfterAutoOverridden;
- (void)setSpaceAfterAuto:(_Bool)arg1;
- (_Bool)spaceAfterAuto;
- (_Bool)isSpaceAfterOverridden;
- (void)setSpaceAfter:(unsigned short)arg1;
- (unsigned short)spaceAfter;
- (_Bool)isSpaceBeforeAutoOverridden;
- (void)setSpaceBeforeAuto:(_Bool)arg1;
- (_Bool)spaceBeforeAuto;
- (_Bool)isSpaceBeforeOverridden;
- (void)setSpaceBefore:(unsigned short)arg1;
- (unsigned short)spaceBefore;
- (_Bool)isShadingOverridden;
- (id)mutableShading;
- (id)shading;
- (_Bool)isBarBorderOverridden;
- (id)mutableBarBorder;
- (id)barBorder;
- (_Bool)isBetweenBorderOverridden;
- (id)mutableBetweenBorder;
- (id)betweenBorder;
- (_Bool)isRightBorderOverridden;
- (id)mutableRightBorder;
- (id)rightBorder;
- (_Bool)isBottomBorderOverridden;
- (id)mutableBottomBorder;
- (id)bottomBorder;
- (_Bool)isLeftBorderOverridden;
- (id)mutableLeftBorder;
- (id)leftBorder;
- (_Bool)isTopBorderOverridden;
- (id)mutableTopBorder;
- (id)topBorder;
- (_Bool)isAnchorLockOverridden;
- (void)setAnchorLock:(_Bool)arg1;
- (_Bool)anchorLock;
- (_Bool)isWrapCodeOverridden;
- (void)setWrapCode:(BOOL)arg1;
- (BOOL)wrapCode;
- (_Bool)isVerticalPositionOverridden;
- (void)setVerticalPosition:(long long)arg1;
- (long long)verticalPosition;
- (_Bool)isHorizontalPositionOverridden;
- (void)setHorizontalPosition:(long long)arg1;
- (long long)horizontalPosition;
- (_Bool)isVerticalAnchorOverridden;
- (void)setVerticalAnchor:(int)arg1;
- (int)verticalAnchor;
- (_Bool)isHorizontalAnchorOverridden;
- (void)setHorizontalAnchor:(int)arg1;
- (int)horizontalAnchor;
- (_Bool)isWrapOverridden;
- (void)setWrap:(_Bool)arg1;
- (_Bool)wrap;
- (_Bool)isHorizontalSpaceOverridden;
- (void)setHorizontalSpace:(long long)arg1;
- (long long)horizontalSpace;
- (_Bool)isVerticalSpaceOverridden;
- (void)setVerticalSpace:(long long)arg1;
- (long long)verticalSpace;
- (_Bool)isHeightRuleOverridden;
- (void)setHeightRule:(int)arg1;
- (int)heightRule;
- (_Bool)isHeightOverridden;
- (void)setHeight:(long long)arg1;
- (long long)height;
- (_Bool)isWidthOverridden;
- (void)setWidth:(long long)arg1;
- (long long)width;
- (_Bool)isDropCapOverridden;
- (void)setDropCap:(CDStruct_5c52f79b)arg1;
- (CDStruct_5c52f79b)dropCap;
- (_Bool)isListIndexOverridden;
- (void)setListIndex:(unsigned long long)arg1;
- (unsigned long long)listIndex;
- (_Bool)isListLevelOverridden;
- (void)setListLevel:(unsigned char)arg1;
- (unsigned char)listLevel;
- (_Bool)isPageBreakBeforeOverridden;
- (void)setPageBreakBefore:(_Bool)arg1;
- (_Bool)isPageBreakBefore;
- (void)clearBaseStyle;
- (_Bool)isBaseStyleOverridden;
- (void)setBaseStyle:(id)arg1;
- (id)baseStyle;
- (void)negateFormattingChangesWithDefaults:(id)arg1;
- (void)setResolveMode:(int)arg1;
- (int)resolveMode;
- (_Bool)isAnythingOverridden;
- (void)clearChararacterProperties;
- (_Bool)isCharacterPropertiesOverridden;
- (void)setCharacterProperties:(id)arg1;
- (id)mutableCharacterProperties;
- (id)characterProperties;
- (id)document;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;
- (_Bool)isAnythingOverriddenIn:(CDStruct_8641e206 *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDRevisionAuthorTable : NSObject
{
    NSMutableArray *mAuthors;
    WDDocument *mDocument;
}

- (unsigned long long)authorAddLookup:(id)arg1;
- (void)addAuthor:(id)arg1;
- (id)authorAt:(unsigned long long)arg1;
- (unsigned long long)authorCount;
- (id)authors;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDRubyProperties : NSObject
{
    unsigned int mOriginal:1;
    CDStruct_1cdbed2b *mOriginalProperties;
}

- (void)clearPhoneticGuideLanguage;
- (_Bool)isPhoneticGuideLanguageOverridden;
@property(nonatomic) int phoneticGuideLanguage;
- (void)clearDistanceBetween;
- (_Bool)isDistanceBetweenOverridden;
@property(nonatomic) unsigned short distanceBetween;
- (void)clearBaseFontSize;
- (_Bool)isBaseFontSizeOverridden;
@property(nonatomic) unsigned short baseFontSize;
- (void)clearPhoneticGuideFontSize;
- (_Bool)isPhoneticGuideFontSizeOverridden;
@property(nonatomic) unsigned short phoneticGuideFontSize;
- (void)clearAlignment;
- (_Bool)isAlignmentOverridden;
@property(nonatomic) int alignment;
- (_Bool)isAnythingOverridden;
- (void)dealloc;
- (id)init;
- (_Bool)isAnythingOverriddenIn:(CDStruct_1cdbed2b *)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDRubyRun : WDCharacterRun
{
    WDCharacterRun *mPhoneticRun;
    WDRubyProperties *mRubyProperties;
}

- (id)rubyBase;
- (void)appendPhoneticRunString:(id)arg1;
- (void)setPhoneticRunString:(id)arg1;
- (id)phoneticRunString;
- (id)phoneticRun;
- (id)rubyProperties;
- (int)runType;
- (id)initWithParagraph:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDSection : NSObject
{
    unsigned int mOriginal:1;
    unsigned int mTracked:1;
    unsigned int mResolved:1;
    WDDocument *mDocument;
    WDText *mText;
    WDText *mEvenPageHeader;
    WDText *mOddPageHeader;
    WDText *mFirstPageHeader;
    WDText *mEvenPageFooter;
    WDText *mOddPageFooter;
    WDText *mFirstPageFooter;
    CDStruct_a57204a6 mOriginalProperties;
    CDStruct_a57204a6 mTrackedProperties;
}

- (id).cxx_construct;
- (_Bool)isFormattingChangeDateOverridden;
- (void)setFormattingChangeDate:(id)arg1;
- (id)formattingChangeDate;
- (_Bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (_Bool)isFormattingChangedOverridden;
- (void)setFormattingChanged:(_Bool)arg1;
- (_Bool)formattingChanged;
- (_Bool)isBidiOverridden;
- (void)setBidi:(_Bool)arg1;
- (_Bool)bidi;
- (_Bool)isTitlePageOverridden;
- (void)setTitlePage:(_Bool)arg1;
- (_Bool)titlePage;
- (_Bool)isVerticalJustificationOverridden;
- (void)setVerticalJustification:(int)arg1;
- (int)verticalJustification;
- (_Bool)isColumnSpaceOverridden;
- (void)setColumnSpace:(long long)arg1;
- (long long)columnSpace;
- (_Bool)isColumnsEqualWidthOverridden;
- (void)setColumnsEqualWidth:(_Bool)arg1;
- (_Bool)columnsEqualWidth;
- (void)appendColumnSpace:(long long)arg1;
- (long long)columnSpaceAt:(unsigned int)arg1;
- (_Bool)isColumnWidthDefinedAt:(unsigned int)arg1;
- (_Bool)isLastColumnWidthDefined;
- (void)appendColumnWidth:(long long)arg1;
- (long long)columnWidthAt:(unsigned int)arg1;
- (_Bool)isColumnCountOverridden;
- (void)setColumnCount:(unsigned short)arg1;
- (unsigned short)columnCount;
- (_Bool)isChapterNumberSeparatorOverridden;
- (void)setChapterNumberSeparator:(int)arg1;
- (int)chapterNumberSeparator;
- (_Bool)isPageNumberRestartOverridden;
- (void)setPageNumberRestart:(_Bool)arg1;
- (_Bool)pageNumberRestart;
- (_Bool)isPageNumberStartOverridden;
- (void)setPageNumberStart:(unsigned short)arg1;
- (unsigned short)pageNumberStart;
- (_Bool)isPageNumberFormatOverridden;
- (void)setPageNumberFormat:(int)arg1;
- (int)pageNumberFormat;
- (_Bool)isLineNumberRestartOverridden;
- (void)setLineNumberRestart:(int)arg1;
- (int)lineNumberRestart;
- (_Bool)isLineNumberDistanceOverridden;
- (void)setLineNumberDistance:(short)arg1;
- (short)lineNumberDistance;
- (_Bool)isLineNumberIncrementOverridden;
- (void)setLineNumberIncrement:(unsigned short)arg1;
- (unsigned short)lineNumberIncrement;
- (_Bool)isLineNumberStartOverridden;
- (void)setLineNumberStart:(short)arg1;
- (short)lineNumberStart;
- (_Bool)isBorderOffsetOverridden;
- (void)setBorderOffset:(int)arg1;
- (int)borderOffset;
- (_Bool)isBorderDisplayOverridden;
- (void)setBorderDisplay:(int)arg1;
- (int)borderDisplay;
- (_Bool)isBorderDepthOverridden;
- (void)setBorderDepth:(int)arg1;
- (int)borderDepth;
- (_Bool)isRightBorderOverridden;
- (id)mutableRightBorder;
- (id)rightBorder;
- (_Bool)isBottomBorderOverridden;
- (id)mutableBottomBorder;
- (id)bottomBorder;
- (_Bool)isLeftBorderOverridden;
- (id)mutableLeftBorder;
- (id)leftBorder;
- (_Bool)isTopBorderOverridden;
- (id)mutableTopBorder;
- (id)topBorder;
- (_Bool)isRtlGutterOverridden;
- (void)setRtlGutter:(_Bool)arg1;
- (_Bool)rtlGutter;
- (_Bool)isGutterMarginOverridden;
- (void)setGutterMargin:(long long)arg1;
- (long long)gutterMargin;
- (_Bool)isFooterMarginOverridden;
- (void)setFooterMargin:(long long)arg1;
- (long long)footerMargin;
- (_Bool)isHeaderMarginOverridden;
- (void)setHeaderMargin:(long long)arg1;
- (long long)headerMargin;
- (_Bool)isBottomMarginOverridden;
- (void)setBottomMargin:(long long)arg1;
- (long long)bottomMargin;
- (_Bool)isTopMarginOverridden;
- (void)setTopMargin:(long long)arg1;
- (long long)topMargin;
- (_Bool)isRightMarginOverridden;
- (void)setRightMargin:(long long)arg1;
- (long long)rightMargin;
- (_Bool)isLeftMarginOverridden;
- (void)setLeftMargin:(long long)arg1;
- (long long)leftMargin;
- (_Bool)isPageOrientationOverridden;
- (void)setPageOrientation:(int)arg1;
- (int)pageOrientation;
- (_Bool)isTextDirectionOverridden;
- (void)setTextDirection:(int)arg1;
- (int)textDirection;
- (_Bool)isPageScaleOverridden;
- (void)setPageScale:(unsigned int)arg1;
- (unsigned int)pageScale;
- (_Bool)isPageHeightOverridden;
- (void)setPageHeight:(long long)arg1;
- (long long)pageHeight;
- (_Bool)isPageWidthOverridden;
- (void)setPageWidth:(long long)arg1;
- (long long)pageWidth;
- (_Bool)isBreakTypeOverridden;
- (void)setBreakType:(int)arg1;
- (int)breakType;
- (id)firstPageFooter;
- (id)evenPageFooter;
- (id)oddPageFooter;
- (id)firstPageHeader;
- (id)evenPageHeader;
- (id)oddPageHeader;
- (id)text;
- (id)document;
- (void)setResolveMode:(int)arg1;
- (int)resolveMode;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDSectionBlockIterator : WDCombinedIterator
{
}

- (id)newChildIteratorFrom:(id)arg1;
- (id)childIteratorFrom:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDShading : NSObject <NSCopying>
{
    int mStyle;
    OITSUColor *mForegroundColor;
    OITSUColor *mBackgroundColor;
}

+ (id)autoBackgroundColor;
+ (id)autoForegroundColor;
+ (id)nullShading;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setBackground:(id)arg1;
- (id)background;
- (void)setForeground:(id)arg1;
- (id)foreground;
- (void)setStyle:(int)arg1;
- (int)style;
- (void)setShading:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToShading:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WDSpecialCharacter : WDRun
{
    WDCharacterProperties *mProperties;
    int mType;
}

- (id)initWithParagraph:(id)arg1;
- (void)setCharacterType:(int)arg1;
- (int)characterType;
- (int)runType;
- (void)clearProperties;
- (id)properties;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDStory : NSObject
{
    OADDrawable *mHead;
    _Bool mOle;
}

- (_Bool)isOle;
- (void)setOle:(_Bool)arg1;
- (id)text;
- (id)head;
- (void)dealloc;
- (id)initWithHead:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDStyle : NSObject <NSCopying>
{
    WDParagraphProperties *mParagraphProperties;
    WDCharacterProperties *mCharacterProperties;
    WDTableRowProperties *mTableRowProperties;
    WDTableCellProperties *mTableCellProperties;
    WDTableStyleOverride *mTableStyleOverrides[12];
    WDStyleSheet *mStyleSheet;
    WDStyle *mBaseStyle;
    WDStyle *mNextStyle;
    _Bool mHidden;
    NSString *mName;
    NSString *mId;
    int mStyleType;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setNextStyle:(id)arg1;
- (id)nextStyle;
- (void)setBaseStyle:(id)arg1;
- (id)baseStyle;
- (id)id;
- (int)type;
- (void)setName:(id)arg1;
- (id)name;
- (id)tableStyleOverrideForPart:(int)arg1;
- (id)tableCellProperties;
- (id)tableRowProperties;
- (id)tableProperties;
- (_Bool)isAnythingOverridden;
- (void)setHidden:(_Bool)arg1;
- (_Bool)hidden;
- (id)styleSheet;
- (id)characterProperties;
- (id)paragraphProperties;
- (void)dealloc;
- (id)initWithStyleSheet:(id)arg1 id:(id)arg2 type:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface WDStyleSheet : NSObject
{
    NSMutableDictionary *mStyleDictionary;
    WDDocument *mDocument;
    WDCharacterProperties *mDefaultCharacterProperties;
    WDParagraphProperties *mDefaultParagraphProperties;
    WDStyle *mDefaultParagraphStyle;
    WDStyle *mDefaultCharacterStyle;
    WDStyle *mDefaultTableStyle;
    WDStyle *mDefaultListStyle;
    NSMutableArray *mStylesInOrder;
    NSMutableDictionary *mIdDictionaryForName;
}

- (id)allAliasesForStyleId:(id)arg1 name:(id)arg2;
- (id)styleIdToName:(id)arg1;
- (id)styleNameToUniqueId:(id)arg1;
- (id)styleIdForName:(id)arg1;
- (void)setDefaultListStyle:(id)arg1;
- (id)defaultListStyle;
- (void)setDefaultTableStyle:(id)arg1;
- (id)defaultTableStyle;
- (void)setDefaultCharacterStyle:(id)arg1;
- (id)defaultCharacterStyle;
- (void)setDefaultParagraphStyle:(id)arg1;
- (id)defaultParagraphStyle;
- (void)createDefaultStyles;
- (id)defaultParagraphProperties;
- (id)defaultCharacterProperties;
- (void)removeStyleWithId:(id)arg1;
- (void)setName:(id)arg1 forId:(id)arg2;
- (void)addStyle:(id)arg1 name:(id)arg2;
- (id)createStyleWithName:(id)arg1 type:(int)arg2;
- (id)createStyleWithId:(id)arg1 type:(int)arg2;
- (id)paragraphStyleWithStartingName:(id)arg1;
- (id)styleWithName:(id)arg1;
- (id)styleWithId:(id)arg1;
- (unsigned long long)styleCount;
- (id)styles;
- (id)document;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;
- (void)initializeDefaultProperties;

@end

__attribute__((visibility("hidden")))
@interface WDSymbol : WDRun
{
    WDCharacterProperties *mProperties;
    WDFont *mFont;
    unsigned short mCharacter;
}

- (int)runType;
- (void)setCharacter:(unsigned short)arg1;
- (unsigned short)character;
- (void)setFont:(id)arg1;
- (id)font;
- (void)clearProperties;
- (id)properties;
- (id)initWithParagraph:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface WDTable : WDBlock
{
    WDTableProperties *mProperties;
    NSMutableArray *mRows;
}

- (id)description;
- (id)newRunIterator;
- (id)runIterator;
- (id)newCellIterator;
- (id)cellIterator;
- (id)newRowIterator;
- (id)rowIterator;
- (int)nestingLevel;
- (int)blockType;
- (void)clearRows;
- (id)insertRowAtIndex:(unsigned long long)arg1;
- (id)addRow;
- (id)rowAt:(unsigned long long)arg1;
- (unsigned long long)rowCount;
- (void)clearProperties;
- (id)properties;
- (void)dealloc;
- (id)initWithText:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDTableCell : NSObject
{
    unsigned long long mIndex;
    WDTableRow *mRow;
    WDTableCellProperties *mProperties;
    WDText *mText;
    NSString *mIdentifier;
    _Bool mUseTrackedProperties;
}

- (void)setIdentifier:(id)arg1;
- (id)identifier;
- (id)text;
- (void)clearProperties;
- (id)properties;
- (id)row;
- (long long)compareIndex:(id)arg1;
- (unsigned long long)index;
- (void)setUseTrackedProperties:(_Bool)arg1;
- (_Bool)useTrackedProperties;
- (void)dealloc;
- (id)initWithRow:(id)arg1 at:(unsigned long long)arg2;
- (double)cellWidth;

@end

__attribute__((visibility("hidden")))
@interface WDTableCellDescriptor : NSObject
{
    WDShading *mShading;
    WDBorder *mTopBorder;
    WDBorder *mLeftBorder;
    WDBorder *mBottomBorder;
    WDBorder *mRightBorder;
    WDBorder *mDiagonalUpBorder;
    WDBorder *mDiagonalDownBorder;
    short mWidth;
    int mWidthType;
    short mTopMargin;
    int mTopMarginType;
    short mBottomMargin;
    int mBottomMarginType;
    short mLeftMargin;
    int mLeftMarginType;
    short mRightMargin;
    int mRightMarginType;
    int mVerticalAlignment;
    unsigned int mShadingOverridden:1;
    unsigned int mTopBorderOverridden:1;
    unsigned int mLeftBorderOverridden:1;
    unsigned int mBottomBorderOverridden:1;
    unsigned int mRightBorderOverridden:1;
    unsigned int mDiagonalUpBorderOverridden:1;
    unsigned int mDiagonalDownBorderOverridden:1;
    unsigned int mWidthTypeOverridden:1;
    unsigned int mTopMarginOverridden:1;
    unsigned int mTopMarginTypeOverridden:1;
    unsigned int mBottomMarginOverridden:1;
    unsigned int mBottomMarginTypeOverridden:1;
    unsigned int mLeftMarginOverridden:1;
    unsigned int mLeftMarginTypeOverridden:1;
    unsigned int mRightMarginOverridden:1;
    unsigned int mRightMarginTypeOverridden:1;
    unsigned int mVerticalAlignmentOverridden:1;
    unsigned int mVerticallyMergedCell:1;
    unsigned int mVerticallyMergedCellOverridden:1;
    unsigned int mFirstInSetOfVerticallyMergedCells:1;
    unsigned int mFirstInSetOfVerticallyMergedCellsOverridden:1;
    unsigned int mNoWrap:1;
    unsigned int mNoWrapOverridden:1;
}

- (void)setNoWrapOverridden:(_Bool)arg1;
- (_Bool)isNoWrapOverridden;
- (void)setNoWrap:(_Bool)arg1;
- (_Bool)noWrap;
- (void)setFirstInSetOfVerticallyMergedCellsOverridden:(_Bool)arg1;
- (_Bool)isFirstInSetOfVerticallyMergedCellsOverridden;
- (void)setFirstInSetOfVerticallyMergedCells:(_Bool)arg1;
- (_Bool)firstInSetOfVerticallyMergedCells;
- (void)setVerticallyMergedCellOverridden:(_Bool)arg1;
- (_Bool)isVerticallyMergedCellOverridden;
- (void)setVerticallyMergedCell:(_Bool)arg1;
- (_Bool)verticallyMergedCell;
- (void)setVerticalAlignmentOverridden:(_Bool)arg1;
- (_Bool)isVerticalAlignmentOverridden;
- (void)setVerticalAlignment:(int)arg1;
- (int)verticalAlignment;
- (void)setRightMarginTypeOverridden:(_Bool)arg1;
- (_Bool)isRightMarginTypeOverridden;
- (void)setRightMarginType:(int)arg1;
- (int)rightMarginType;
- (void)setRightMarginOverridden:(_Bool)arg1;
- (_Bool)isRightMarginOverridden;
- (void)setRightMargin:(short)arg1;
- (short)rightMargin;
- (void)setLeftMarginTypeOverridden:(_Bool)arg1;
- (_Bool)isLeftMarginTypeOverridden;
- (void)setLeftMarginType:(int)arg1;
- (int)leftMarginType;
- (void)setLeftMarginOverridden:(_Bool)arg1;
- (_Bool)isLeftMarginOverridden;
- (void)setLeftMargin:(short)arg1;
- (short)leftMargin;
- (void)setBottomMarginTypeOverridden:(_Bool)arg1;
- (_Bool)isBottomMarginTypeOverridden;
- (void)setBottomMarginType:(int)arg1;
- (int)bottomMarginType;
- (void)setBottomMarginOverridden:(_Bool)arg1;
- (_Bool)isBottomMarginOverridden;
- (void)setBottomMargin:(short)arg1;
- (short)bottomMargin;
- (void)setTopMarginTypeOverridden:(_Bool)arg1;
- (_Bool)isTopMarginTypeOverridden;
- (void)setTopMarginType:(int)arg1;
- (int)topMarginType;
- (void)setTopMarginOverridden:(_Bool)arg1;
- (_Bool)isTopMarginOverridden;
- (void)setTopMargin:(short)arg1;
- (short)topMargin;
- (void)setWidthTypeOverridden:(_Bool)arg1;
- (_Bool)isWidthTypeOverridden;
- (void)setWidthType:(int)arg1;
- (int)widthType;
- (void)setWidth:(short)arg1;
- (void)setDiagonalDownBorderOverridden:(_Bool)arg1;
- (_Bool)isDiagonalDownBorderOverridden;
- (void)setDiagonalDownBorder:(id)arg1;
- (id)diagonalDownBorder;
- (void)setDiagonalUpBorderOverridden:(_Bool)arg1;
- (_Bool)isDiagonalUpBorderOverridden;
- (void)setDiagonalUpBorder:(id)arg1;
- (id)diagonalUpBorder;
- (void)setRightBorderOverridden:(_Bool)arg1;
- (_Bool)isRightBorderOverridden;
- (void)setRightBorder:(id)arg1;
- (id)rightBorder;
- (void)setBottomBorderOverridden:(_Bool)arg1;
- (_Bool)isBottomBorderOverridden;
- (void)setBottomBorder:(id)arg1;
- (id)bottomBorder;
- (void)setLeftBorderOverridden:(_Bool)arg1;
- (_Bool)isLeftBorderOverridden;
- (void)setLeftBorder:(id)arg1;
- (id)leftBorder;
- (void)setTopBorderOverridden:(_Bool)arg1;
- (_Bool)isTopBorderOverridden;
- (void)setTopBorder:(id)arg1;
- (id)topBorder;
- (void)setShadingOverridden:(_Bool)arg1;
- (_Bool)isShadingOverridden;
- (void)setShading:(id)arg1;
- (id)shading;

@end

__attribute__((visibility("hidden")))
@interface WDTableCellProperties : NSObject
{
    short mWidth;
    short mPosition;
    unsigned int mOriginal:1;
    unsigned int mTracked:1;
    unsigned int mResolved:1;
    CDStruct_dbdf0818 mOriginalProperties;
    CDStruct_dbdf0818 mTrackedProperties;
    WDDocument *mDocument;
}

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isFormattingChangeDateOverridden;
- (void)setFormattingChangeDate:(id)arg1;
- (id)formattingChangeDate;
- (_Bool)isEditDateOverridden;
- (void)setEditDate:(id)arg1;
- (id)editDate;
- (_Bool)isDeletionDateOverridden;
- (void)setDeletionDate:(id)arg1;
- (id)deletionDate;
- (_Bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (_Bool)isIndexToAuthorIDOfEditOverridden;
- (void)setIndexToAuthorIDOfEdit:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfEdit;
- (_Bool)isIndexToAuthorIDOfDeletionOverridden;
- (void)setIndexToAuthorIDOfDeletion:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfDeletion;
- (_Bool)isFormattingChangedOverridden;
- (void)setFormattingChanged:(int)arg1;
- (int)formattingChanged;
- (_Bool)isEditedOverridden;
- (void)setEdited:(int)arg1;
- (int)edited;
- (_Bool)isDeletedOverridden;
- (void)setDeleted:(int)arg1;
- (int)deleted;
- (_Bool)isNoWrapOverridden;
- (void)setNoWrap:(_Bool)arg1;
- (_Bool)noWrap;
- (_Bool)isFirstInSetOfVerticallyMergedCellsOverridden;
- (void)setFirstInSetOfVerticallyMergedCells:(_Bool)arg1;
- (_Bool)firstInSetOfVerticallyMergedCells;
- (_Bool)isVerticallyMergedCellOverridden;
- (void)setVerticallyMergedCell:(_Bool)arg1;
- (_Bool)verticallyMergedCell;
- (_Bool)isTextDirectionOverridden;
- (void)setTextDirection:(int)arg1;
- (int)textDirection;
- (_Bool)isVerticalAlignmentOverridden;
- (void)setVerticalAlignment:(int)arg1;
- (int)verticalAlignment;
- (_Bool)isRightMarginTypeOverridden;
- (void)setRightMarginType:(int)arg1;
- (int)rightMarginType;
- (_Bool)isRightMarginOverridden;
- (void)setRightMargin:(short)arg1;
- (short)rightMargin;
- (_Bool)isLeftMarginTypeOverridden;
- (void)setLeftMarginType:(int)arg1;
- (int)leftMarginType;
- (_Bool)isLeftMarginOverridden;
- (void)setLeftMargin:(short)arg1;
- (short)leftMargin;
- (_Bool)isBottomMarginTypeOverridden;
- (void)setBottomMarginType:(int)arg1;
- (int)bottomMarginType;
- (_Bool)isBottomMarginOverridden;
- (void)setBottomMargin:(short)arg1;
- (short)bottomMargin;
- (_Bool)isTopMarginTypeOverridden;
- (void)setTopMarginType:(int)arg1;
- (int)topMarginType;
- (_Bool)isTopMarginOverridden;
- (void)setTopMargin:(short)arg1;
- (short)topMargin;
- (_Bool)isWidthTypeOverridden;
- (void)setWidthType:(int)arg1;
- (int)widthType;
- (_Bool)isInsideVerticalBorderOverridden;
- (id)mutableInsideVerticalBorder;
- (id)insideVerticalBorder;
- (_Bool)isInsideHorizontalBorderOverridden;
- (id)mutableInsideHorizontalBorder;
- (id)insideHorizontalBorder;
- (_Bool)isDiagonalDownBorderOverridden;
- (id)mutableDiagonalDownBorder;
- (id)diagonalDownBorder;
- (_Bool)isDiagonalUpBorderOverridden;
- (id)mutableDiagonalUpBorder;
- (id)diagonalUpBorder;
- (_Bool)isRightBorderOverridden;
- (id)mutableRightBorder;
- (id)rightBorder;
- (_Bool)isBottomBorderOverridden;
- (id)mutableBottomBorder;
- (id)bottomBorder;
- (_Bool)isLeftBorderOverridden;
- (id)mutableLeftBorder;
- (id)leftBorder;
- (_Bool)isTopBorderOverridden;
- (id)mutableTopBorder;
- (id)topBorder;
- (void)clearShading;
- (_Bool)isShadingOverridden;
- (id)mutableShading;
- (id)shading;
- (void)originalToTracked;
- (void)addProperties:(id)arg1;
- (void)setResolveMode:(int)arg1;
- (int)resolveMode;
- (void)setPosition:(short)arg1;
- (short)position;
- (void)setWidth:(short)arg1;
- (short)width;
- (id)document;
- (id)initWithDocument:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)addPropertiesValues:(CDStruct_dbdf0818 *)arg1 to:(CDStruct_dbdf0818 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface WDTableCellRunIterator : WDCombinedIterator
{
}

- (id)newChildIteratorFrom:(id)arg1;
- (id)childIteratorFrom:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDTableProperties : NSObject <NSCopying>
{
    WDDocument *mDocument;
    unsigned int mOriginal:1;
    unsigned int mTracked:1;
    unsigned int mResolved:1;
    CDStruct_f508e1f6 mOriginalProperties;
    CDStruct_f508e1f6 mTrackedProperties;
}

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isTableFloating;
- (_Bool)isFormattingChangeDateOverridden;
- (void)setFormattingChangeDate:(id)arg1;
- (id)formattingChangeDate;
- (_Bool)isEditDateOverridden;
- (void)setEditDate:(id)arg1;
- (id)editDate;
- (_Bool)isDeletionDateOverridden;
- (void)setDeletionDate:(id)arg1;
- (id)deletionDate;
- (_Bool)isIndexToAuthorIDOfFormattingChangeOverridden;
- (void)setIndexToAuthorIDOfFormattingChange:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfFormattingChange;
- (_Bool)isIndexToAuthorIDOfEditOverridden;
- (void)setIndexToAuthorIDOfEdit:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfEdit;
- (_Bool)isIndexToAuthorIDOfDeletionOverridden;
- (void)setIndexToAuthorIDOfDeletion:(unsigned short)arg1;
- (unsigned short)indexToAuthorIDOfDeletion;
- (_Bool)isBiDirectionalOverridden;
- (void)setBiDirectional:(_Bool)arg1;
- (_Bool)biDirectional;
- (_Bool)isFormattingChangedOverridden;
- (void)setFormattingChanged:(int)arg1;
- (int)formattingChanged;
- (_Bool)isEditedOverridden;
- (void)setEdited:(int)arg1;
- (int)edited;
- (_Bool)isDeletedOverridden;
- (void)setDeleted:(int)arg1;
- (int)deleted;
- (_Bool)isBottomDistanceFromTextOverridden;
- (void)setBottomDistanceFromText:(long long)arg1;
- (long long)bottomDistanceFromText;
- (_Bool)isRightDistanceFromTextOverridden;
- (void)setRightDistanceFromText:(long long)arg1;
- (long long)rightDistanceFromText;
- (_Bool)isTopDistanceFromTextOverridden;
- (void)setTopDistanceFromText:(long long)arg1;
- (long long)topDistanceFromText;
- (_Bool)isLeftDistanceFromTextOverridden;
- (void)setLeftDistanceFromText:(long long)arg1;
- (long long)leftDistanceFromText;
- (_Bool)isHorizontalPositionOverridden;
- (void)setHorizontalPosition:(long long)arg1;
- (long long)horizontalPosition;
- (_Bool)isVerticalPositionOverridden;
- (void)setVerticalPosition:(long long)arg1;
- (long long)verticalPosition;
- (_Bool)isHorizontalAnchorOverridden;
- (void)setHorizontalAnchor:(int)arg1;
- (int)horizontalAnchor;
- (_Bool)isVerticalAnchorOverridden;
- (void)setVerticalAnchor:(int)arg1;
- (int)verticalAnchor;
- (_Bool)isCellSpacingTypeOverridden;
- (void)setCellSpacingType:(int)arg1;
- (int)cellSpacingType;
- (_Bool)isCellSpacingOverridden;
- (void)setCellSpacing:(short)arg1;
- (short)cellSpacing;
- (_Bool)isIndentTypeOverridden;
- (void)setIndentType:(int)arg1;
- (int)indentType;
- (_Bool)isIndentOverridden;
- (void)setIndent:(short)arg1;
- (short)indent;
- (_Bool)isWidthTypeOverridden;
- (void)setWidthType:(int)arg1;
- (int)widthType;
- (_Bool)isWidthOverridden;
- (void)setWidth:(long long)arg1;
- (long long)width;
- (_Bool)isAlignmentOverridden;
- (void)setAlignment:(int)arg1;
- (int)alignment;
- (_Bool)isJustificationOverridden;
- (void)setJustification:(int)arg1;
- (int)justification;
- (void)clearInsideVerticalBorder;
- (_Bool)isInsideVerticalBorderOverridden;
- (id)mutableInsideVerticalBorder;
- (id)insideVerticalBorder;
- (void)clearInsideHorizontalBorder;
- (_Bool)isInsideHorizontalBorderOverridden;
- (id)mutableInsideHorizontalBorder;
- (id)insideHorizontalBorder;
- (void)clearRightBorder;
- (_Bool)isRightBorderOverridden;
- (id)mutableRightBorder;
- (id)rightBorder;
- (void)clearBottomBorder;
- (_Bool)isBottomBorderOverridden;
- (id)mutableBottomBorder;
- (id)bottomBorder;
- (void)clearLeftBorder;
- (_Bool)isLeftBorderOverridden;
- (id)mutableLeftBorder;
- (id)leftBorder;
- (void)clearTopBorder;
- (_Bool)isTopBorderOverridden;
- (id)mutableTopBorder;
- (id)topBorder;
- (void)clearShading;
- (_Bool)isShadingOverridden;
- (id)mutableShading;
- (id)shading;
- (_Bool)isLookOverridden;
- (void)setLook:(unsigned short)arg1;
- (unsigned short)look;
- (_Bool)isBaseStyleOverridden;
- (void)setBaseStyle:(id)arg1;
- (id)baseStyle;
- (void)setResolveMode:(int)arg1;
- (int)resolveMode;
- (id)document;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;
- (id)init;
- (void)moveOrignalToTracked;

@end

__attribute__((visibility("hidden")))
@interface WDTableRow : NSObject
{
    unsigned long long mIndex;
    WDTable *mTable;
    WDTableRowProperties *mProperties;
    NSMutableArray *mCells;
}

- (id)description;
- (id)newCellIterator;
- (id)cellIterator;
- (id)addCellWithIndex:(unsigned long long)arg1;
- (id)addCell;
- (id)cellAt:(unsigned long long)arg1;
- (unsigned long long)cellCount;
- (id)properties;
- (id)table;
- (unsigned long long)index;
- (void)dealloc;
- (id)initWithTable:(id)arg1 at:(unsigned long long)arg2;
- (void)setIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDTableRowCellIterator : WDCombinedIterator
{
}

- (id)newChildIteratorFrom:(id)arg1;
- (id)childIteratorFrom:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDTableRowProperties : NSObject <NSCopying>
{
    WDTableProperties *mTableProperties;
    WDCharacterProperties *mCharacterProperties;
    unsigned int mOriginal:1;
    unsigned int mTracked:1;
    unsigned int mResolved:1;
    CDStruct_43955328 mOriginalProperties;
    CDStruct_43955328 mTrackedProperties;
}

- (id).cxx_construct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isHeaderOverridden;
- (void)setHeader:(_Bool)arg1;
- (_Bool)header;
- (_Bool)isHeightTypeOverridden;
- (void)setHeightType:(int)arg1;
- (int)heightType;
- (_Bool)isHeightOverridden;
- (void)setHeight:(long long)arg1;
- (long long)height;
- (_Bool)isWidthAfterTypeOverridden;
- (void)setWidthAfterType:(int)arg1;
- (int)widthAfterType;
- (_Bool)isWidthAfterOverridden;
- (void)setWidthAfter:(short)arg1;
- (short)widthAfter;
- (_Bool)isWidthBeforeTypeOverridden;
- (void)setWidthBeforeType:(int)arg1;
- (int)widthBeforeType;
- (_Bool)isWidthBeforeOverridden;
- (void)setWidthBefore:(short)arg1;
- (short)widthBefore;
- (void)addProperties:(id)arg1;
- (void)setResolveMode:(int)arg1;
- (int)resolveMode;
- (id)characterProperties;
- (id)tableProperties;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;
- (id)init;
- (void)addPropertiesValues:(CDStruct_43955328 *)arg1 to:(CDStruct_43955328 *)arg2;

@end

__attribute__((visibility("hidden")))
@interface WDTableStyleOverride : NSObject <NSCopying>
{
    WDDocument *mDocument;
    WDStyle *mStyle;
    int mPart;
    WDParagraphProperties *mParagraphProperties;
    WDCharacterProperties *mCharacterProperties;
    WDTableRowProperties *mTableRowProperties;
    WDTableCellProperties *mTableCellStyleProperties;
    unsigned int mParagraphPropertiesOverridden:1;
    unsigned int mCharacterPropertiesOverridden:1;
    unsigned int mTableRowPropertiesOverridden:1;
    unsigned int mTableCellStylePropertiesOverridden:1;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setTableCellStylePropertiesOverridden:(_Bool)arg1;
- (_Bool)isTableCellStylePropertiesOverridden;
- (id)mutableTableCellStyleProperties;
- (id)tableCellStyleProperties;
- (void)setTableRowPropertiesOverridden:(_Bool)arg1;
- (_Bool)isTableRowPropertiesOverridden;
- (id)mutableTableRowProperties;
- (id)tableRowProperties;
- (_Bool)isTablePropertiesOverridden;
- (id)tableProperties;
- (void)setCharacterPropertiesOverridden:(_Bool)arg1;
- (_Bool)isCharacterPropertiesOverridden;
- (id)mutableCharacterProperties;
- (id)characterProperties;
- (void)setParagraphPropertiesOverridden:(_Bool)arg1;
- (_Bool)isParagraphPropertiesOverridden;
- (id)mutableParagraphProperties;
- (id)paragraphProperties;
- (void)setPart:(int)arg1;
- (int)part;
- (void)setStyle:(id)arg1;
- (id)style;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WDText : NSObject
{
    NSMutableArray *mBlocks;
    WDDocument *mDocument;
    int mTextType;
    WDTableCell *mTableCell;
}

- (id)description;
- (id)content;
- (_Bool)isEmpty;
- (id)newRunIterator;
- (id)runIterator;
- (id)newBlockIterator;
- (id)blockIterator;
- (int)tableNestingLevel;
- (void)removeLastBlock;
- (void)removeLastCharacter:(unsigned short)arg1;
- (id)addTableAtIndex:(int)arg1;
- (id)addTable;
- (id)addParagraphAtIndex:(int)arg1;
- (id)addParagraph;
- (id)tableCell;
- (int)textType;
- (id)document;
- (void)addBlock:(id)arg1;
- (unsigned long long)indexOfBlock:(id)arg1;
- (id)lastBlock;
- (id)blockAt:(unsigned long long)arg1;
- (unsigned long long)blockCount;
- (id)blocks;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 textType:(int)arg2 tableCell:(id)arg3;
- (id)initWithDocument:(id)arg1 textType:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMBookmarkMapper : CMMapper
{
    NSString *mName;
    int mBookmarkType;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithWDBookmark:(id)arg1 parent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMBordersProperty : CMBordersProperty
{
    unsigned int mBorderCustomWidth[5];
}

- (void)setBorder:(id)arg1 location:(int)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WMCharacterRunMapper : CMMapper
{
    WDCharacterRun *wdCharacterRun;
    WMStyle *mStyle;
    float mFontSizeBumpFactor;
    NSString *mText;
    _Bool mIsDeleted;
}

+ (void)addNonCollapsableSpanAt:(id)arg1 withState:(id)arg2;
- (unsigned int)countAndStripLeadingTabs;
- (void)mapTabs:(unsigned int)arg1 at:(id)arg2 afterText:(id)arg3;
- (void)mapSubstring:(id)arg1 at:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)map1At:(id)arg1 withState:(id)arg2;
- (_Bool)isDeleted;
- (void)dealloc;
- (id)initWithText:(id)arg1;
- (id)initWithWDCharacterRun:(id)arg1 parent:(id)arg2;
- (int)defaultTabWidth;
- (id)baseStyle;
- (id)copyCharacterStyle;
- (id)boldStyle;

@end

__attribute__((visibility("hidden")))
@interface WMDocumentMapper : CMMapper <CMMapperRoot>
{
    CMArchiveManager *mArchiver;
    WDDocument *wDom;
    NSString *mFileName;
}

- (struct CGSize)contentSizeForDevice;
- (struct CGSize)pageSizeForDevice;
- (id)documentTitle;
- (id)styleMatrix;
- (id)archiver;
- (void)mapWithState:(id)arg1;
- (void)mapDefaultCssStylesAt:(id)arg1;
- (id)fileName;
- (void)setFileName:(id)arg1;
- (int)defaultTabWidth;
- (id)blipAtIndex:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithWDom:(id)arg1 archiver:(id)arg2;
- (double)bottomMargin;
- (double)headerMargin;
- (double)topMargin;
- (double)rightMargin;
- (double)leftMargin;
- (_Bool)hasSessionBreakAtIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMEnumProperty : CMProperty
{
    unsigned long long wdValue;
}

- (id)cssStringForName:(id)arg1;
- (id)mapCellTextVAlign;
- (id)mapVerticalAlign;
- (id)mapUnderline;
- (id)mapJustification;
- (unsigned long long)value;
- (id)description;
- (id)initWithEnum:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMFPlayer : NSObject
{
    MFGraphicsDevice *m_gdi;
    int m_records;
    unsigned short m_windowsVersion;
    _Bool m_boundsSet;
    _Bool m_ignoreSetWindowOrg;
}

+ (struct CGRect)boundsInPoints:(id)arg1;
+ (struct CGRect)boundsInLogicalUnits:(id)arg1;
+ (struct CGRect)windowBounds:(id)arg1;
+ (struct CGRect)placeableBounds:(const char *)arg1;
- (id)parseRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playIntersectClipRect:(unsigned int)arg1:(const char *)arg2;
- (int)playExcludeClipRect:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectClipRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playPaintRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playInvertRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playFrameRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playFillRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playSetROP2:(unsigned int)arg1:(const char *)arg2;
- (int)playSetPolyFillMode:(unsigned int)arg1:(const char *)arg2;
- (int)playCreateRegion:(unsigned int)arg1:(const char *)arg2;
- (int)playCreateBrushIndirect:(unsigned int)arg1:(const char *)arg2;
- (int)playCreateFontIndirect:(unsigned int)arg1:(const char *)arg2;
- (int)playCreatePenIndirect:(unsigned int)arg1:(const char *)arg2;
- (int)playCreatePatternBrush:(unsigned int)arg1:(const char *)arg2;
- (int)playResizePalette:(unsigned int)arg1:(const char *)arg2;
- (int)playSetPaletteEntries:(unsigned int)arg1:(const char *)arg2;
- (int)playCreatePalette:(unsigned int)arg1:(const char *)arg2;
- (int)playRealizePalette:(unsigned int)arg1:(const char *)arg2;
- (int)playCreateDIBPatternBrush:(unsigned int)arg1:(const char *)arg2;
- (int)playDeleteObject:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectPalette:(unsigned int)arg1:(const char *)arg2;
- (int)playSelectObject:(unsigned int)arg1:(const char *)arg2;
- (int)playScaleViewportExt:(unsigned int)arg1:(const char *)arg2;
- (int)playSetViewportOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playSetViewportExt:(unsigned int)arg1:(const char *)arg2;
- (int)playOffsetViewportOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playOffsetWindowOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playScaleWindowExt:(unsigned int)arg1:(const char *)arg2;
- (int)playSetWindowOrg:(unsigned int)arg1:(const char *)arg2;
- (int)playSetWindowExt:(unsigned int)arg1:(const char *)arg2;
- (int)playPolyPolygon:(unsigned int)arg1:(const char *)arg2;
- (int)playRoundRect:(unsigned int)arg1:(const char *)arg2;
- (int)playChord:(unsigned int)arg1:(const char *)arg2;
- (int)playPie:(unsigned int)arg1:(const char *)arg2;
- (int)playArc:(unsigned int)arg1:(const char *)arg2;
- (int)playPolyline:(unsigned int)arg1:(const char *)arg2;
- (int)playPolygon:(unsigned int)arg1:(const char *)arg2;
- (int)playLineTo:(unsigned int)arg1:(const char *)arg2;
- (int)playMoveTo:(unsigned int)arg1:(const char *)arg2;
- (int)playRestoreDC:(unsigned int)arg1:(const char *)arg2;
- (int)playSaveDC:(unsigned int)arg1:(const char *)arg2;
- (int)playEllipse:(unsigned int)arg1:(const char *)arg2;
- (int)playRectangle:(unsigned int)arg1:(const char *)arg2;
- (int)playExtTextOut:(unsigned int)arg1:(const char *)arg2;
- (int)playTextOut:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextCharExtra:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextJustification:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextColour:(unsigned int)arg1:(const char *)arg2;
- (int)playSetStretchBltMode:(unsigned int)arg1:(const char *)arg2;
- (int)playSetBkMode:(unsigned int)arg1:(const char *)arg2;
- (int)playSetMapMode:(unsigned int)arg1:(const char *)arg2;
- (int)playSetBkColour:(unsigned int)arg1:(const char *)arg2;
- (int)playSetTextAlign:(unsigned int)arg1:(const char *)arg2;
- (int)playDibStretchBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playStretchDib:(unsigned int)arg1:(const char *)arg2;
- (int)playDibBitBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playBitBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playPatBlt:(unsigned int)arg1:(const char *)arg2;
- (int)playUnsupported:(unsigned int)arg1:(const char *)arg2:(const char *)arg3;
- (int)playUnknown:(unsigned int)arg1:(unsigned int)arg2:(const char *)arg3;
- (int)playHeader:(unsigned int)arg1:(const char *)arg2;
- (void)done;
- (int)play:(unsigned int)arg1:(const char *)arg2;
- (int)records;
- (void)dealloc;
- (id)initWithGraphicsDevice:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMFReader : NSObject <MFReader>
{
    int m_recordsRead;
    WMFPlayer *m_player;
    unsigned int m_length;
    const char *m_pBuffer;
    unsigned int m_cursor;
}

- (int)moveDataCursor:(unsigned int)arg1;
- (int)checkBytesAvailable:(unsigned int)arg1;
- (int)playRecord;
- (int)playHeaders;
- (int)play:(id)arg1;
- (oneway void)release;
- (void)dealloc;
- (id)initWithWMFPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface WMParagraphMapper : CMMapper
{
    WDParagraph *wdParagraph;
    WMParagraphMapper *mCurrentMapper;
    OIXMLElement *mActiveNode;
    _Bool mIsDeleted;
}

+ (void)mapPlaceholderAt:(id)arg1 rect:(struct CGRect)arg2 withState:(id)arg3;
- (id)runAtIndex:(unsigned long long)arg1;
- (void)mapFieldMarkerAt:(id)arg1 marker:(id)arg2 withState:(id)arg3;
- (void)mapRunAt:(id)arg1 run:(id)arg2 withState:(id)arg3;
- (void)mapParagraphBodyWithState:(id)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)activeNode;
- (void)dealloc;
- (id)initWithBlock:(id)arg1 parent:(id)arg2;
- (_Bool)isTextFrame;
- (_Bool)containsOfficeArt;
- (_Bool)isCollapsable:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMFieldMapper : WMParagraphMapper
{
    int mMode;
    unsigned int mType;
    NSMutableString *mLinkRef;
}

- (void)mapFieldMarkerAt:(id)arg1 marker:(id)arg2 withState:(id)arg3;
- (void)mapRunAt:(id)arg1 run:(id)arg2 withState:(id)arg3;
- (void)dealloc;
- (id)initWithWDFieldMarker:(id)arg1 parent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMListLevelTextMapper : NSObject
{
    NSMutableArray *m_tokens;
    int m_format;
    unsigned int m_initNumber;
    void **m_numberFormatter;
}

- (id)listLevelTextforOutline:(id)arg1;
- (void)dealloc;
- (id)initWithText:(id)arg1 format:(int)arg2 initNumber:(int)arg3 language:(int)arg4;
- (id)initWithText:(id)arg1;
- (id)initWithText:(id)arg1 format:(int)arg2 language:(int)arg3;
- (id)token:(unsigned int)arg1;
- (unsigned long long)tokenCount;

@end

__attribute__((visibility("hidden")))
@interface WMListLevelTextToken : NSObject
{
    NSString *m_string;
    int m_level;
}

+ (id)tokenWithString:(id)arg1 andLevel:(int)arg2;
- (int)level;
- (id)stringForIndex:(unsigned long long)arg1 withFormat:(int)arg2 orNumberFormatter:(void **)arg3 initialNumber:(unsigned long long)arg4;
- (id)string;
- (void)dealloc;
- (id)initWithString:(id)arg1 andLevel:(int)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMOfficeArtMapper : CMDrawableMapper
{
    _Bool mFloating;
    _Bool mIsMapped;
    _Bool mIsInsideGroup;
    WDAContent *mContent;
    unsigned int mCurrentPage;
}

- (void)setBoundingBox;
- (void)mapTextBoxAt:(id)arg1 withState:(id)arg2;
- (id)blipAtIndex:(unsigned int)arg1;
- (void)setWithClientData:(id)arg1 state:(id)arg2;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setCurrentPage:(unsigned int)arg1;
- (id)initWithOadDrawable:(id)arg1 asFloating:(_Bool)arg2 origin:(struct CGPoint)arg3 parent:(id)arg4;
- (void)setIsInsideGroup:(_Bool)arg1;
- (_Bool)isInsideGroup;
- (id)initWithWdOfficeArt:(id)arg1 parent:(id)arg2;
- (struct CGSize)expandedSizeForTextBox:(id)arg1 withState:(id)arg2;
- (void)mapDiagramAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtGroupAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtTextboxAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtShapeAt:(id)arg1 withState:(id)arg2;
- (void)mapOfficeArtImageAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMStyle : CMStyle
{
}

- (void)cascadeWithStyle:(id)arg1;
- (id)cssStyleString;
- (void)ResoveInterPropertyDependencies;
- (void)addCharacterProperties:(id)arg1;
- (id)initWithWDCharacterProperties:(id)arg1;
- (id)initWithWDStyle:(id)arg1 isInTextFrame:(_Bool)arg2;
- (id)initWithWDStyle:(id)arg1;
- (id)initWithWMStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMParagraphStyle : WMStyle
{
    _Bool mIsInTextFrame;
}

+ (_Bool)isShadingNull:(id)arg1;
- (void)addParagraphProperties:(id)arg1 fromListLevelProperties:(_Bool)arg2;
- (id)leadingMarginPropertyNameWithOverridesFromProperties:(id)arg1;
- (_Bool)isRTLWithOverridesFromProperties:(id)arg1;
- (void)addParagraphStyleCharacterProperties:(id)arg1;
- (id)initWithWDStyle:(id)arg1 isInTextFrame:(_Bool)arg2;
- (id)initWithWDParagraphProperties:(id)arg1 isInTextFrame:(_Bool)arg2;
- (void)mapBorders:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMParagraphStyleMapper : CMMapper
{
    WDParagraphProperties *wdParaProperties;
    WDParagraph *wdParagraph;
    WMParagraphStyle *mStyle;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)mapListStyleAt:(id)arg1 state:(id)arg2;
- (void)destyleEmptyParagraph;
- (_Bool)isListItem;
- (void)dealloc;
- (id)initWithWDParagraph:(id)arg1 parent:(id)arg2 isInTextFrame:(_Bool)arg3;
- (void)mapBulletAt:(id)arg1 forLevel:(id)arg2 forIndex:(int)arg3 listState:(id)arg4;
- (id)bulletLabelAtLevel:(id)arg1 forIndex:(int)arg2 bulletFormat:(int)arg3 listState:(id)arg4;
- (id)labelStringWithGap:(id)arg1;
- (_Bool)checkListId:(long long)arg1 level:(unsigned char)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMPictureMapper : CMDrawableMapper
{
    WDPicture *wdPicture;
}

- (void)setBoundingBox;
- (void)mapBounds;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithWDPicture:(id)arg1 parent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMSectionContentMapper : CMMapper
{
    WDText *wdText;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithWDText:(id)arg1 parent:(id)arg2;
- (void)mapTextFrameStyleTo:(id)arg1 withState:(id)arg2;
- (void)mapTextFrameAt:(id)arg1 withState:(id)arg2;
- (id)paragraphAtIndex:(unsigned long long)arg1;
- (void)updateTextFrameState:(id)arg1 atIndex:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMSectionMapper : CMMapper
{
    WDSection *wdSection;
    float mTopMargin;
    float mLeftMargin;
    _Bool mBreakAtStart;
    _Bool mBreakAtEnd;
    _Bool mIsTitlePage;
}

+ (_Bool)isContentEmpty:(id)arg1;
- (float)leftMargin;
- (void)setLeftMargin:(float)arg1;
- (float)topMargin;
- (void)setTopMargin:(float)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)MapSectionStyleAt:(id)arg1;
- (id)initWithWDSection:(id)arg1 breakAtStart:(_Bool)arg2 breakAtEnd:(_Bool)arg3 parent:(id)arg4;
- (void)mapFooterAt:(id)arg1 withState:(id)arg2;
- (void)mapHeaderAt:(id)arg1 withState:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMSectionStyle : WMStyle
{
}

@end

__attribute__((visibility("hidden")))
@interface WMState : CMState
{
    CMOutlineState *currentListState;
    CMOutlineState *outlineState;
    NSMutableDictionary *listStates;
    WDText *mLastHeader;
    WDText *mLastFooter;
    unsigned int mCurrentPage;
    unsigned long long mBlockIndex;
    unsigned long long mRunIndex;
    float mTopMargin;
    float mLeftMargin;
    float mPageHeight;
    _Bool mIsFrame;
    _Bool mIsFrameStart;
    _Bool mIsFrameEnd;
    _Bool mIsHeaderOrFooter;
    float mTotalPageHeight;
}

- (_Bool)isHeaderOrFooter;
- (void)setIsHeaderOrFooter:(_Bool)arg1;
- (_Bool)isFrameEnd;
- (void)setIsFrameEnd:(_Bool)arg1;
- (_Bool)isFrameStart;
- (void)setIsFrameStart:(_Bool)arg1;
- (_Bool)isFrame;
- (void)setIsFrame:(_Bool)arg1;
- (id)lastFooter;
- (void)setLastFooter:(id)arg1;
- (id)lastHeader;
- (void)setLastHeader:(id)arg1;
- (float)leftMargin;
- (void)setLeftMargin:(float)arg1;
- (float)topMargin;
- (void)setTopMargin:(float)arg1;
- (float)totalPageHeight;
- (void)setTotalPageHeight:(float)arg1;
- (float)pageHeight;
- (void)setPageHeight:(float)arg1;
- (unsigned long long)blockIndex;
- (void)setBlockIndex:(unsigned long long)arg1;
- (unsigned long long)runIndex;
- (void)setRunIndex:(unsigned long long)arg1;
- (float)pageOffset;
- (unsigned int)currentPage;
- (void)setCurrentPage:(unsigned int)arg1;
- (void)setListState:(id)arg1 forListId:(unsigned long long)arg2;
- (id)listStateForListWithId:(int)arg1 settingUpStateIfNeededWithDocument:(id)arg2;
- (id)listStateForListId:(unsigned long long)arg1;
- (void)clearCurrentListState;
- (_Bool)isCurrentListId:(unsigned long long)arg1;
- (_Bool)isCurrentListStateOverridden;
- (void)setCurrentListState:(id)arg1;
- (id)outlineState;
- (id)currentListState;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WMSymbolMapper : CMMapper
{
    unsigned short mCharacter;
    NSString *mFontName;
}

+ (_Bool)isSymbolFontName:(id)arg1;
+ (unsigned short)mapCharacter:(unsigned short)arg1 withFontName:(id)arg2;
+ (unsigned short)mapZapfDingbatsCharacter:(unsigned short)arg1;
+ (unsigned short)mapWindingsCharacter:(unsigned short)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (id)initWithWDSymbol:(id)arg1 parent:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WMTableCellMapper : CMMapper
{
    WDTableCell *mWdTableCell;
    unsigned int mColSpan;
    double mHeight;
    double mWidth;
    double mLeftPadding;
    double mRightPadding;
}

- (void)mapAt:(id)arg1 withState:(id)arg2;
- (unsigned int)colSpan;
- (id)initWithWDTableCell:(id)arg1 atIndex:(unsigned int)arg2 parent:(id)arg3;
- (id)tableMapper;
- (void)mapCellStyleAt:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMTableCellStyle : WMStyle
{
    double mLeftPadding;
    double mRightPadding;
}

+ (float)resolveColorValueWithPercentage:(float)arg1 foregroundComponent:(float)arg2 backgroundComponent:(float)arg3;
+ (id)resolveStyleColorWithPercentage:(float)arg1 foregroundColor:(id)arg2 backgroundColor:(id)arg3;
+ (id)resolveStyleColorWithPercentage:(float)arg1 shading:(id)arg2;
+ (id)dominantColorOf:(id)arg1;
- (double)rightPadding;
- (double)leftPadding;
- (void)addTableCellProperties:(id)arg1;
- (void)addTableCellStyleProperties:(id)arg1;
- (id)initWithTableCellProperties:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMTableColumnInfo : NSObject
{
    NSMutableArray *mStopArray;
}

- (unsigned long long)count;
- (unsigned int)columnSpan:(float)arg1 at:(unsigned int)arg2;
- (void)mergeStopArray:(id)arg1;
- (float)stopAt:(unsigned int)arg1;
- (void)dealloc;
- (id)initWithStopArray:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMTableMapper : CMMapper
{
    WDTable *mWdTable;
    WMBordersProperty *mInsideBorders;
    WMTableStyle *mStyle;
    WMTableColumnInfo *mColumnInfo;
}

+ (_Bool)isTableDeleted:(id)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (void)setInsideBorders:(id)arg1;
- (id)columnInfo;
- (id)insideBorders;
- (void)dealloc;
- (id)initWithWDTable:(id)arg1 parent:(id)arg2;
- (id)copyStopArrayForRow:(unsigned long long)arg1;
- (id)copyColumnInfo;

@end

__attribute__((visibility("hidden")))
@interface WMTableRowMapper : CMMapper
{
    WDTableRow *mWdTableRow;
    double mHeight;
}

+ (_Bool)isTableRowDeleted:(id)arg1;
- (void)mapAt:(id)arg1 withState:(id)arg2;
- (double)height;
- (id)initWithWDTableRow:(id)arg1 parent:(id)arg2;
- (void)setRowProperties:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMTableStyle : WMStyle
{
    WDTableProperties *mWdTableProperties;
}

- (void)addTableProperties:(id)arg1;
- (id)initWithWDTableProperties:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WMTop : CMTop
{
}

+ (void)fillHTMLArchiveForOfficeData:(id)arg1 fileName:(id)arg2 xmlFlag:(_Bool)arg3 archiver:(id)arg4;
+ (void)fillHTMLArchiveForOfficeFile:(id)arg1 xmlFlag:(_Bool)arg2 archiver:(id)arg3;
+ (id)documentFromContents:(id)arg1 isXML:(_Bool)arg2 archiver:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXAnnotation : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 type:(int)arg3 state:(id)arg4;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXBookmark : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXBorder : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXCharacterProperties : NSObject
{
}

+ (id)stringFromLanguage:(int)arg1;
+ (void)applyDeletionInsertionProperties:(id)arg1 state:(id)arg2;
+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;
+ (_Bool)isBooleanCharacterPropertyTrue:(int)arg1;
+ (_Bool)readBooleanCharacterProperty:(struct _xmlNode *)arg1 propertyName:(const char *)arg2 attributeName:(const char *)arg3 outValue:(int *)arg4 state:(id)arg5;
+ (id)readFillColor:(struct _xmlNode *)arg1 forTarget:(id)arg2 state:(id)arg3;
+ (void)readReflection:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2 state:(id)arg3;
+ (_Bool)readBooleanCharacterMultipleProperty:(struct _xmlNode *)arg1 propertyName:(const char *)arg2 attributeName:(const char *)arg3 outValue:(int *)arg4 state:(id)arg5;
+ (void)readShadowForTarget:(id)arg1 fromXmlNode:(struct _xmlNode *)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXCharacterRun : NSObject
{
}

+ (_Bool)isSpecialCharacter:(unsigned short)arg1;
+ (id)fontForRun:(id)arg1 fontType:(int)arg2;
+ (void)readFromString:(id)arg1 source:(struct _xmlNode *)arg2 to:(id)arg3;
+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WXCitation : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXCitationTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXCommon : NSObject
{
}

+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXDocument : NSObject
{
}

+ (id)documentFrom:(id)arg1 reader:(id)arg2 cancel:(id)arg3 asThumbnail:(_Bool)arg4;
+ (void)initialize;
+ (void)readDocumentSettings:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readDocument:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readSources:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readLists:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readStyles:(id)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readFontTable:(id)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXFieldMarker : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXFont : NSObject
{
}

+ (void)initialize;
+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXFontTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXHyperlinkFieldMarker : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 paragraphNamespace:(struct _xmlNs *)arg2 to:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WXList : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXListDefinition : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXListDefinitionTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXListLevel : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXListLevelOverride : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXListTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXNote : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 skipNextSib:(_Bool *)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WXOAVReadState : OAVReadState
{
    WXReadState *mWxState;
    WDParagraph *mParagraph;
    NSMutableDictionary *mNextVmlShapeIdToTextBoxMap;
}

- (id)nextVmlShapeIdToTextBoxMap;
- (void)setCurrentParagraph:(id)arg1;
- (id)currentParagraph;
- (id)wxReadState;
- (void)dealloc;
- (id)initWithWXReadState:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WXOfficeArt : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 parentRElement:(struct _xmlNode *)arg2 parentParagraph:(id)arg3 state:(id)arg4 to:(id)arg5;
+ (void)initialize;
+ (void)writeWrapPolygonChildren:(id)arg1 to:(id)arg2;
+ (_Bool)writeWrapTightlyWith:(id)arg1 toWriter:(id)arg2;
+ (void)readVml:(struct _xmlNode *)arg1 parentRElement:(struct _xmlNode *)arg2 parentParagraph:(id)arg3 state:(id)arg4 to:(id)arg5;
+ (void)writeWrapBottomDistance:(id)arg1 to:(id)arg2;
+ (void)writeWrapTopDistance:(id)arg1 to:(id)arg2;
+ (void)writeWrapRightDistance:(id)arg1 to:(id)arg2;
+ (void)writeWrapLeftDistance:(id)arg1 to:(id)arg2;
+ (void)writeWrapText:(id)arg1 to:(id)arg2;
+ (void)readWrapDistance:(struct _xmlNode *)arg1 parentElement:(struct _xmlNode *)arg2 state:(id)arg3 to:(id)arg4;
+ (void)readWrap:(struct _xmlNode *)arg1 state:(id)arg2 to:(id)arg3;
+ (void)readPosition:(struct _xmlNode *)arg1 state:(id)arg2 to:(id)arg3 isHorizontal:(_Bool)arg4;
+ (void)readClientData:(struct _xmlNode *)arg1 state:(id)arg2 to:(id)arg3;
+ (void)readOAX:(struct _xmlNode *)arg1 parentRElement:(struct _xmlNode *)arg2 parentParagraph:(id)arg3 state:(id)arg4 to:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface WXOfficeArtClient : OAXClient
{
}

- (void)readBlipExtWithURI:(id)arg1 fromNode:(struct _xmlNode *)arg2 toDrawable:(id)arg3 state:(id)arg4;
- (id)readGraphicData:(struct _xmlNode *)arg1 state:(id)arg2;
- (void)readClientDataFromNode:(struct _xmlNode *)arg1 toDrawable:(id)arg2 state:(id)arg3;
- (struct _xmlNode *)genericNonVisualPropertiesNodeForDrawableNode:(struct _xmlNode *)arg1 inNamespace:(id)arg2 state:(id)arg3;
- (id)readClientDrawableFromXmlNode:(struct _xmlNode *)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WXParagraph : NSObject
{
}

+ (void)readRunsFrom:(struct _xmlNode *)arg1 paragraphNamespace:(struct _xmlNs *)arg2 to:(id)arg3 targetRun:(id)arg4 state:(id)arg5;
+ (void)readTrackingFrom:(struct _xmlNode *)arg1 paragraphNamespace:(struct _xmlNs *)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readRFrom:(struct _xmlNode *)arg1 to:(id)arg2 targetRun:(id)arg3 state:(id)arg4;
+ (void)readFromString:(id)arg1 to:(id)arg2;
+ (void)readFrom:(struct _xmlNode *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readAnnotationFrom:(struct _xmlNode *)arg1 paragraphNamespace:(struct _xmlNs *)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readSimpleFieldFrom:(struct _xmlNode *)arg1 paragraphNamespace:(struct _xmlNs *)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readRunsTo:(id)arg1 state:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface WXParagraphProperties : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 readBaseStyle:(_Bool)arg3 state:(id)arg4;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXReadState : OCXReadState
{
    WDDocument *mDocument;
    OITSUNoCopyDictionary *mTextNodesToBeAdded;
    OITSUNoCopyDictionary *mMapBookmarkIdToName;
    OITSUNoCopyDictionary *mMapAnnotationIdToAnnotation;
    OITSUNoCopyDictionary *mMapTextBoxIdToDrawableId;
    OITSUNoCopyDictionary *mMapDrawableIdToTextBox;
    OCPPackagePart *mPackagePart;
    OCPPackagePart *mAnnotationPart;
    struct _xmlDoc *mFootnoteDocument;
    struct _xmlNode *mFootnotes;
    struct _xmlDoc *mEndnoteDocument;
    struct _xmlNode *mEndnotes;
    struct _xmlDoc *mAnnotationDocument;
    struct _xmlNode *mAnnotations;
    NSMutableArray *mDeleteAuthorStack;
    NSMutableArray *mDeleteDateStack;
    NSMutableArray *mEditAuthorStack;
    NSMutableArray *mEditDateStack;
    NSMutableArray *mFormatAuthorStack;
    NSMutableArray *mFormatDateStack;
    NSMutableArray *mPendingCommentNodes;
    WXOAVReadState *mWXOavState;
    OAXDrawingState *mDrawingState;
    int mCurrentOfficeArtTextType;
    WDCharacterRun *mReadSymbolTo;
    _Bool mNewSectionRequested;
    unsigned long long mCurrentRowCNFStyle;
    unsigned long long mCurrentCellCNFStyle;
    _Bool mCurrentTableWraps;
    id <TCCancelDelegate> mCancelDelegate;
    CXNamespace *mWXMainNamespace;
    CXNamespace *mWXDrawingNamespace;
    CXNamespace *mWXShapeNamespace;
    CXNamespace *mWXGroupNamespace;
    CXNamespace *mWXMathNamespace;
    CXNamespace *mWXOOBibliographyNamespace;
    CXNamespace *mWXRelationshipNamespace;
    _Bool mIsThumbnail;
}

@property(retain, nonatomic) id <TCCancelDelegate> cancelDelegate; // @synthesize cancelDelegate=mCancelDelegate;
@property(nonatomic) int currentOfficeArtTextType; // @synthesize currentOfficeArtTextType=mCurrentOfficeArtTextType;
@property(retain, nonatomic) CXNamespace *WXRelationshipNamespace; // @synthesize WXRelationshipNamespace=mWXRelationshipNamespace;
@property(retain, nonatomic) CXNamespace *WXOOBibliographyNamespace; // @synthesize WXOOBibliographyNamespace=mWXOOBibliographyNamespace;
@property(retain, nonatomic) CXNamespace *WXMathNamespace; // @synthesize WXMathNamespace=mWXMathNamespace;
@property(retain, nonatomic) CXNamespace *WXGroupNamespace; // @synthesize WXGroupNamespace=mWXGroupNamespace;
@property(retain, nonatomic) CXNamespace *WXShapeNamespace; // @synthesize WXShapeNamespace=mWXShapeNamespace;
@property(retain, nonatomic) CXNamespace *WXDrawingNamespace; // @synthesize WXDrawingNamespace=mWXDrawingNamespace;
@property(retain, nonatomic) CXNamespace *WXMainNamespace; // @synthesize WXMainNamespace=mWXMainNamespace;
- (_Bool)isThumbnail;
- (void)setIsThumbnail:(_Bool)arg1;
- (void)setupNSForXMLFormat:(int)arg1;
- (_Bool)currentTableWraps;
- (void)setCurrentTableWraps:(_Bool)arg1;
- (void)setCurrentCellCNFStyle:(unsigned long long)arg1;
- (unsigned long long)currentCellCNFStyle;
- (void)setCurrentRowCNFStyle:(unsigned long long)arg1;
- (unsigned long long)currentRowCNFStyle;
- (void)setNewSectionRequested:(_Bool)arg1;
- (_Bool)isNewSectionRequested;
- (void)setReadSymbolTo:(id)arg1;
- (id)readSymbolTo;
- (id)drawingState;
- (void)clearPendingComments;
- (id)pendingComments;
- (void)addPendingComment:(struct _xmlNode *)arg1;
- (id)currentFormatDate;
- (id)currentFormatAuthor;
- (void)popFormatAuthorDate;
- (void)pushFormatAuthor:(id)arg1 date:(id)arg2;
- (id)currentEditDate;
- (id)currentEditAuthor;
- (void)popEditAuthorDate;
- (void)pushEditAuthor:(id)arg1 date:(id)arg2;
- (id)currentDeleteDate;
- (id)currentDeleteAuthor;
- (void)popDeleteAuthorDate;
- (void)pushDeleteAuthor:(id)arg1 date:(id)arg2;
- (id)wxoavState;
- (void)setDocumentPart:(id)arg1;
- (void)setAnnotationPart:(id)arg1;
- (id)annotationPart;
- (void)setPackagePart:(id)arg1;
- (id)packagePart;
- (struct _xmlNode *)xmlAnnotationWithID:(long long)arg1;
- (struct _xmlNode *)xmlEndnoteWithID:(long long)arg1;
- (struct _xmlNode *)xmlFootnoteWithID:(long long)arg1;
- (id)textBoxWithDrawableID:(long long)arg1;
- (id)textBoxWithTextBoxID:(long long)arg1;
- (void)addTextBoxID:(long long)arg1 drawableId:(long long)arg2 textBox:(id)arg3;
- (_Bool)hasAnnotations;
- (id)annotationWithID:(long long)arg1;
- (void)addAnnotationID:(long long)arg1 annotation:(id)arg2;
- (id)bookmarkName:(long long)arg1;
- (void)addBookmarkId:(long long)arg1 name:(id)arg2;
- (void)clearOutNodesToBeAdded:(id)arg1;
- (id)nodesToBeAdded:(id)arg1;
- (void)addText:(id)arg1 node:(struct _xmlNode *)arg2;
- (void)setDocument:(id)arg1;
- (id)document;
- (void)dealloc;
- (id)initNoStacksWith:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface WXReader : OCXReader
{
}

- (id)defaultPassphrase;
- (id)read;

@end

__attribute__((visibility("hidden")))
@interface WXRubyProperties : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (int)rubyAlignmentFromString:(id)arg1;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXRubyRun : WXCharacterRun
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXSection : NSObject
{
}

+ (float)scaleFromPrinterSettings:(id)arg1;
+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;
+ (void)mapProperties:(struct _xmlNode *)arg1 toSection:(id)arg2 state:(id)arg3;
+ (void)mapPrinterSettings:(struct _xmlNode *)arg1 toSection:(id)arg2 state:(id)arg3;
+ (void)mapFooter:(struct _xmlNode *)arg1 toSection:(id)arg2 state:(id)arg3;
+ (void)mapHeader:(struct _xmlNode *)arg1 toSection:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXShading : NSObject
{
}

+ (id)getStringFromColor:(id)arg1;
+ (id)getColorFromCString:(const char *)arg1;
+ (id)getColorFromString:(id)arg1;
+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXSpecialCharacter : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXStyle : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 defaults:(struct _xmlNode *)arg3 state:(id)arg4;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXStyleSheet : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXSymbol : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)readFrom:(struct _xmlNode *)arg1 parentRElement:(struct _xmlNode *)arg2 to:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WXTable : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (id)newTableGrid:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface WXTableCell : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXTableCellProperties : NSObject
{
}

+ (void)writeForStyle:(id)arg1 state:(id)arg2;
+ (void)writeForDocument:(id)arg1 state:(id)arg2;
+ (unsigned long long)bitfieldForCnfStyleFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXTableProperties : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXTableRow : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 tableGrid:(ChVector_fa1ffc74 *)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readCellsFrom:(struct _xmlNode *)arg1 tableGrid:(ChVector_fa1ffc74 *)arg2 to:(id)arg3 gridIndex:(long long *)arg4 state:(id)arg5;

@end

__attribute__((visibility("hidden")))
@interface WXTableRowProperties : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;
+ (void)initialize;

@end

__attribute__((visibility("hidden")))
@interface WXTableStyleOverride : NSObject
{
}

+ (void)readFrom:(struct _xmlNode *)arg1 to:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXText : NSObject
{
}

+ (void)readFromString:(id)arg1 to:(id)arg2;
+ (void)readFromStream:(struct _xmlTextReader *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readFrom:(struct _xmlNode *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readFromStream:(struct _xmlTextReader *)arg1 state:(id)arg2;
+ (void)readFrom:(struct _xmlNode *)arg1 state:(id)arg2;
+ (void)readFromTable:(struct _xmlNode *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;
+ (void)readFromParagraph:(struct _xmlNode *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;
+ (void)updateTextBoxIdsFromState:(id)arg1;
+ (id)addNewSectionTo:(id)arg1 state:(id)arg2;
+ (void)createChildrenFromStream:(struct _xmlTextReader *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;
+ (void)createChildren:(struct _xmlNode *)arg1 baseStyle:(id)arg2 to:(id)arg3 state:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface WXTextBox : NSObject
{
}

+ (id)orientationForTextBodyProperties:(id)arg1;
+ (id)readFrom:(struct _xmlNode *)arg1 parent:(id)arg2 state:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface WXVmlReadClient : NSObject <OAVReadClient>
{
}

+ (int)vmlSupportLevel;
+ (void)readClientDataFromGroup:(struct _xmlNode *)arg1 toGroup:(id)arg2 state:(id)arg3;
+ (void)readClientDataFromShape:(struct _xmlNode *)arg1 toGraphic:(id)arg2 state:(id)arg3;
+ (void)readFromDrawable:(struct _xmlNode *)arg1 toContent:(id)arg2;
+ (int)zIndex:(id)arg1;
+ (_Bool)floating:(id)arg1;
+ (double)wrapDistanceBottom:(id)arg1;
+ (double)wrapDistanceRight:(id)arg1;
+ (double)wrapDistanceTop:(id)arg1;
+ (double)wrapDistanceLeft:(id)arg1;
+ (int)relativeVerticalPosition:(id)arg1;
+ (int)verticalPosition:(id)arg1;
+ (int)relativeHorizontalPosition:(id)arg1;
+ (int)horizontalPosition:(id)arg1;
+ (void)copyFromDrawable:(id)arg1 toContent:(id)arg2;
+ (void)initialize;
+ (void)readTextWrappingFromParent:(struct _xmlNode *)arg1 toAnchor:(id)arg2;

@end

