//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct RTFColor;

struct RTFFont;

struct RTFStyle;

struct _NSAttributeDictionaryElement {
    unsigned long long hash;
    id key;
    id value;
};

struct _NSAttributeInfo {
    unsigned int toUniCharEncoding;
    unsigned int codePageEncoding;
    NSFont *font;
    double fontSize;
    double kern;
    NSMutableParagraphStyle *paraStyle;
    unsigned int bold:1;
    unsigned int italic:1;
    unsigned int fontIsValid:1;
    unsigned int paraStyleIsValid:1;
    unsigned int kernIsValid:1;
    unsigned int attributesSameAsBefore:1;
    unsigned int multiByteEncoding:1;
    unsigned int unicodeAlternativeLength:3;
    unsigned int tabStopType:4;
    unsigned int curAttributesNeedsCopying:1;
    unsigned int paraStyleNeedsCopying:1;
    unsigned int hasWritingDirectionAttribute:1;
    unsigned int :15;
};

struct _NSGlyphNode;

struct _NSGlyphTree {
    struct _NSGlyphNode *rootNode;
    struct _NSGlyphNode *curNode;
    unsigned long long curCharIndex;
    unsigned long long curGlyphIndex;
};

struct _NSLayoutNode;

struct _NSLayoutTree {
    struct _NSLayoutNode *rootNode;
    struct _NSLayoutNode *curNode;
    unsigned long long curGlyphIndex;
    double curLongitudinalOrigin;
    struct CGRect extraLineFragmentRect;
    struct CGRect extraLineFragmentUsedRect;
    unsigned long long glyphsPerLineEstimate;
    double offsetPerLineEstimate;
};

struct _NSRTFPriv {
    void *reader;
    char *rtfInput;
    unsigned long long rtfInputLength;
    unsigned long long rtfInputLocation;
    unsigned long long rtfHeaderEndLocation;
    int pushedChar;
    int pushedClass;
    int pushedMajor;
    int pushedMinor;
    int pushedParam;
    char pushedTextBuf[1024];
    int prevChar;
    int bumpLine;
    struct RTFFont *fontList;
    struct RTFColor *colorList;
    struct RTFStyle *styleList;
    char *inputName;
    char *outputName;
    CDUnknownFunctionPointerType ccb[5];
    CDUnknownFunctionPointerType readHook;
    CDUnknownFunctionPointerType msgProc;
    CDUnknownFunctionPointerType panicProc;
    char textBuf[1024];
    int textLen;
    int class;
    int major;
    int minor;
    int param;
    long long lineNum;
    long long linePos;
    int groupState;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _NSRunBlock {
    unsigned long long _field1;
    unsigned char _field2[0];
};

struct _NSStoredContainerUsage {
    struct CGRect _field1;
    struct CGRect _field2;
    CDStruct_cfe5321f _field3;
    struct CGRect _field4;
    struct _NSRange _field5;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _forceColorWrite:1;
    unsigned int _activeFontFeatures:1;
    unsigned int _preserveNaturalAlignment:1;
    unsigned int _reserved:29;
} CDStruct_cfe5321f;

typedef struct {
    long long location;
    long long length;
} CDStruct_627e0f85;

typedef struct {
    id _field1;
    id _field2;
    long long _field3;
    long long _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    struct CGRect _field9;
    struct {
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :24;
    } _field10;
} CDStruct_ec8253cd;

typedef struct {
    struct *_field1;
    struct _NSRange _field2;
    struct _NSRange _field3;
    float _field4;
    float _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    struct CGRect _field14;
    struct CGRect _field15;
    struct _NSRange _field16;
    id _field17;
    double _field18;
    long long _field19;
    struct {
        unsigned int :4;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :4;
        unsigned int :4;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :1;
        unsigned int :2;
        unsigned int :1;
        unsigned int :10;
    } _field20;
    void *_field21[0];
} CDStruct_9b8416ed;

#pragma mark Typedef'd Unions

typedef union {
    struct {
        double _field1;
        double _field2;
        double _field3;
        long long _field4;
    } _field1;
    struct {
        struct CGRect _field1;
    } _field2;
} CDUnion_09a75e3c;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/UIFoundation.framework/UIFoundation
// UUID: A0E0A5E4-4749-3F5E-935F-330062EA7A00
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 371.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (void)layoutManager:(NSLayoutManager *)arg1 textContainer:(NSTextContainer *)arg2 didChangeGeometryFromSize:(struct CGSize)arg3;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(_Bool)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
- (struct CGRect)layoutManager:(NSLayoutManager *)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(NSTextContainer *)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg2;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg2;
- (long long)layoutManager:(NSLayoutManager *)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (unsigned long long)layoutManager:(NSLayoutManager *)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(UIFont *)arg5 forGlyphRange:(struct _NSRange)arg6;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTextAttachmentContainer <NSObject>
- (struct CGRect)attachmentBoundsForTextContainer:(NSTextContainer *)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (UIImage *)imageForBounds:(struct CGRect)arg1 textContainer:(NSTextContainer *)arg2 characterIndex:(unsigned long long)arg3;
@end

@protocol NSTextLayoutOrientationProvider
@property(nonatomic) long long layoutOrientation;
@end

__attribute__((visibility("hidden")))
@interface NSATSGlyphStorage : CTGlyphStorageInterface
{
    struct __CTGlyphStorage *_glyphStorage;
    struct __CFArray *_masterRuns;
    NSATSTypesetter *_typesetter;
    CDStruct_ec8253cd *_runs;
    long long _numRuns;
    long long _runBufferSize;
    struct _NSRange _glyphRange;
    struct _NSRange _characterRange;
    long long _bufferSize;
    NSATSGlyphStorage *_parent;
    struct __CFSet *_children;
    long long _paraEndElasticCharIndex;
    double _paraEndElasticCharWidth;
    NSString *_textString;
    struct {
        long long _field1;
        struct {
            unsigned short _field1;
            struct CGSize _field2;
            unsigned int _field3;
            long long _field4;
            long long _field5;
        } _field2[0];
    } *_stack;
    const CDStruct_ec8253cd *_lastElasticRun;
    long long _lastElasticRunLocation;
    long long _totalAbsorbedCount;
    struct {
        unsigned int _hasNonNominalGlyph:1;
        unsigned int _hasPositionalStake:1;
        unsigned int _hasBidiRun:1;
        unsigned int _isEllipsisStorage:1;
        unsigned int _hasNonNominalStringIndexes:1;
        unsigned int _isUnordered:1;
        unsigned int _hasTotalAbsorbedCount:1;
        unsigned int _reserved:25;
    } _gFlags;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (void)disposeGlyphStack;
- (void)popGlyph:(long long)arg1;
- (void)pushGlyph:(long long)arg1;
- (void)initGlyphStack:(long long)arg1;
- (void)insertGlyphs:(CDStruct_627e0f85)arg1;
- (void)moveGlyphsTo:(long long)arg1 from:(CDStruct_627e0f85)arg2;
- (void)swapGlyph:(long long)arg1 withIndex:(long long)arg2;
- (void)setStringIndex:(long long)arg1 forIndex:(long long)arg2;
- (void)setAbsorbedCount:(long long)arg1 forIndex:(long long)arg2;
- (void)setProps:(unsigned int)arg1 forIndex:(long long)arg2;
- (void)setAdvance:(struct CGSize)arg1 forIndex:(long long)arg2;
- (void)setGlyphID:(unsigned short)arg1 forIndex:(long long)arg2;
- (void)getCustomAdvance:(struct CGSize *)arg1 forIndex:(long long)arg2;
- (struct __CTGlyphStorage *)createCopy:(CDStruct_627e0f85)arg1;
- (void)finalize;
- (void)dealloc;
- (const CDStruct_ec8253cd *)_attributeRunForCharacterAtIndex:(long long)arg1;
- (double)_widthForStringRange:(struct _NSRange)arg1;
- (struct _NSRange)_collectElasticRangeSurroundingCharacterAtIndex:(long long)arg1 minimumCharacterIndex:(long long)arg2;
- (_Bool)_resolvePositionalStakeGlyphsForLineFragment:(struct __CTLine *)arg1 lineFragmentRect:(struct CGRect)arg2 minPosition:(double)arg3 maxPosition:(double)arg4 maxLineFragmentWidth:(double)arg5 breakHint:(long long *)arg6;
- (struct __CTRun *)_createEllipsisRunWithStringRange:(CDStruct_627e0f85)arg1 attributes:(struct __CFDictionary *)arg2;
- (id)childGlyphStorageWithCharacterRange:(struct _NSRange)arg1;
- (struct __CTTypesetter *)createCTTypesetter;
- (void)setGlyphRange:(struct _NSRange)arg1 characterRange:(struct _NSRange)arg2;
- (id)typesetter;
- (id)initWithTypesetter:(id)arg1;
- (void)_invalidate;
- (void)_flushCachedObjects;
- (oneway void)release;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;

@end

__attribute__((visibility("hidden")))
@interface NSATSLineFragment : NSObject
{
    void *_line;
    NSATSTypesetter *_typesetter;
    struct _NSRange _glyphRange;
    struct _NSRange _characterRange;
    double _minPosition;
    double _maxPosition;
    long long _elasticCharIndex;
    double _elasticRangeWidth;
    unsigned int _hyphenGlyph;
    double _hyphenGlyphWidth;
    struct {
        unsigned int _directionState:2;
        unsigned int _drawsOutside:1;
        unsigned int _isLineArray:1;
        unsigned int _reserved:28;
    } _flags;
}

- (_Bool)hasElasticRange;
- (void)justifyWithFactor:(double)arg1;
- (void)saveWithGlyphOrigin:(double)arg1;
- (void)saveMorphedGlyphs:(struct _NSRange *)arg1;
- (void)getTypographicLineHeight:(double *)arg1 baselineOffset:(double *)arg2 leading:(double *)arg3;
- (double)lineWidthForType:(int)arg1;
- (struct _NSRange)characterRange;
- (struct _NSRange)glyphRange;
- (void)layoutForStartingGlyphAtIndex:(unsigned long long)arg1 characterIndex:(unsigned long long)arg2 minPosition:(double)arg3 maxPosition:(double)arg4 lineFragmentRect:(struct CGRect)arg5;
- (long long)resolvedLineBreakMode:(_Bool)arg1;
- (id)initWithTypesetter:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (long long)_charIndexToBreakLineByWordWrappingAtIndex:(long long)arg1 lineFragmentWidth:(double)arg2 hyphenate:(_Bool *)arg3;
- (id)_copyRenderingContextWithGlyphOrigin:(double)arg1;
- (void)_invalidate;
- (void)_flushCachedObjects;

@end

@interface NSTypesetter : NSObject
{
    void *_reserved;
}

+ (id)sharedSystemTypesetter;
+ (id)sharedSystemTypesetterForBehavior:(long long)arg1;
+ (long long)defaultStringDrawingTypesetterBehavior;
+ (long long)defaultTypesetterBehavior;
+ (_Bool)_usesATSTypesetter;
+ (void)initialize;
- (void)setBidiLevels:(const char *)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setAttachmentSize:(struct CGSize)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setLocation:(struct CGPoint)arg1 withAdvancements:(const double *)arg2 forStartOfGlyphRange:(struct _NSRange)arg3;
- (void)setDrawsOutsideLineFragment:(_Bool)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setNotShownAttribute:(_Bool)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)deleteGlyphsInRange:(struct _NSRange)arg1;
- (void)insertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3;
- (void)substituteGlyphsInRange:(struct _NSRange)arg1 withGlyphs:(unsigned int *)arg2;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3 baselineOffset:(double)arg4;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 remainingRect:(struct CGRect *)arg3 forStartingGlyphAtIndex:(unsigned long long)arg4 proposedRect:(struct CGRect)arg5 lineSpacing:(double)arg6 paragraphSpacingBefore:(double)arg7 paragraphSpacingAfter:(double)arg8;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(_Bool *)arg5 bidiLevels:(char *)arg6;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned short *)arg2 properties:(long long *)arg3 characterIndexes:(unsigned long long *)arg4 bidiLevels:(char *)arg5;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)arg1 actualGlyphRange:(struct _NSRange *)arg2;
- (double)baselineOffsetInLayoutManager:(id)arg1 glyphIndex:(unsigned long long)arg2;
- (struct _NSRange)layoutCharactersInRange:(struct _NSRange)arg1 forLayoutManager:(id)arg2 maximumNumberOfLineFragments:(unsigned long long)arg3;
- (void)layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 nextGlyphIndex:(unsigned long long *)arg4;
- (void)_layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 maxCharacterIndex:(unsigned long long)arg4 nextGlyphIndex:(unsigned long long *)arg5 nextCharacterIndex:(unsigned long long *)arg6;
- (unsigned long long)actionForControlCharacterAtIndex:(unsigned long long)arg1;
- (id)attributesForExtraLineFragment;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 forParagraphSeparatorGlyphRange:(struct _NSRange)arg3 atProposedOrigin:(struct CGPoint)arg4;
- (void)setHardInvalidation:(_Bool)arg1 forGlyphRange:(struct _NSRange)arg2;
- (id)currentParagraphStyle;
- (id)currentTextContainer;
- (id)textContainers;
- (id)layoutManager;
- (double)paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (double)paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (double)lineSpacingAfterGlyphAtIndex:(unsigned long long)arg1 withProposedLineFragmentRect:(struct CGRect)arg2;
- (void)endLineWithGlyphRange:(struct _NSRange)arg1;
- (void)beginLineWithGlyphAtIndex:(unsigned long long)arg1;
- (void)endParagraph;
- (void)beginParagraph;
- (unsigned long long)layoutParagraphAtPoint:(struct CGPoint *)arg1;
- (struct _NSRange)paragraphSeparatorCharacterRange;
- (struct _NSRange)paragraphCharacterRange;
- (struct _NSRange)paragraphSeparatorGlyphRange;
- (struct _NSRange)paragraphGlyphRange;
- (void)setParagraphGlyphRange:(struct _NSRange)arg1 separatorGlyphRange:(struct _NSRange)arg2;
- (id)attributedString;
- (void)setAttributedString:(id)arg1;
- (void)setTightenThresholdForTruncation:(float)arg1;
- (float)tightenThresholdForTruncation;
- (void)setBidiProcessingEnabled:(_Bool)arg1;
- (_Bool)bidiProcessingEnabled;
- (id)textTabForGlyphLocation:(double)arg1 writingDirection:(long long)arg2 maxLocation:(double)arg3;
- (id)substituteFontForFont:(id)arg1;
- (void)setLineFragmentPadding:(double)arg1;
- (double)lineFragmentPadding;
- (void)setHyphenationFactor:(float)arg1;
- (float)hyphenationFactor;
- (void)setTypesetterBehavior:(long long)arg1;
- (long long)typesetterBehavior;
- (void)setUsesFontLeading:(_Bool)arg1;
- (_Bool)usesFontLeading;
- (long long)_baseWritingDirection;
- (id)_ellipsisFontForFont:(id)arg1;
- (_Bool)_allowsEllipsisGlyphSubstitution;
- (CDUnion_09a75e3c *)_lineFragmentRectForProposedRectArgs;
- (void)_updateParagraphStyleCache:(id)arg1;
- (unsigned long long)_getRemainingNominalParagraphRange:(struct _NSRange *)arg1 andParagraphSeparatorRange:(struct _NSRange *)arg2 charactarIndex:(unsigned long long)arg3 layoutManager:(id)arg4 string:(id)arg5;
- (void)_setLineBreakModeOverridden:(_Bool)arg1;
- (_Bool)_isLineBreakModeOverridden;
- (void)_setForceOriginalFontBaseline:(_Bool)arg1;
- (_Bool)_forceOriginalFontBaseline;
- (void)finalize;
- (void)dealloc;
- (CDStruct_9b8416ed *)_getAuxData;
- (CDStruct_9b8416ed *)_allocateAuxData;

@end

@interface NSATSTypesetter : NSTypesetter
{
    NSAttributedString *attributedString;
    struct _NSRange paragraphGlyphRange;
    struct _NSRange paragraphSeparatorGlyphRange;
    double lineFragmentPadding;
    NSLayoutManager *layoutManager;
    NSArray *textContainers;
    NSTextContainer *currentTextContainer;
    unsigned long long currentTextContainerIndex;
    struct CGSize currentTextContainerSize;
    NSParagraphStyle *currentParagraphStyle;
    void *_atsReserved[8];
    id _private;
}

+ (_Bool)_allowsScreenFontKerning;
+ (id)sharedTypesetter;
+ (id)sharedInstance;
+ (void)initialize;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 remainingRect:(struct CGRect *)arg2;
- (CDUnion_09a75e3c *)_lineFragmentRectForProposedRectArgs;
- (CDStruct_9b8416ed *)_allocateAuxData;
- (double)baselineOffsetInLayoutManager:(id)arg1 glyphIndex:(unsigned long long)arg2;
- (struct _NSRange)layoutCharactersInRange:(struct _NSRange)arg1 forLayoutManager:(id)arg2 maximumNumberOfLineFragments:(unsigned long long)arg3;
- (void)layoutGlyphsInLayoutManager:(id)arg1 startingAtGlyphIndex:(unsigned long long)arg2 maxNumberOfLineFragments:(unsigned long long)arg3 nextGlyphIndex:(unsigned long long *)arg4;
- (unsigned int)hyphenCharacterForGlyphAtIndex:(unsigned long long)arg1;
- (struct CGRect)boundingBoxForControlGlyphAtIndex:(unsigned long long)arg1 forTextContainer:(id)arg2 proposedLineFragment:(struct CGRect)arg3 glyphPosition:(struct CGPoint)arg4 characterIndex:(unsigned long long)arg5;
- (float)hyphenationFactorForGlyphAtIndex:(unsigned long long)arg1;
- (_Bool)shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg1;
- (_Bool)shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)layoutParagraphAtPoint:(struct CGPoint *)arg1;
- (unsigned long long)actionForControlCharacterAtIndex:(unsigned long long)arg1;
- (void)endLineWithGlyphRange:(struct _NSRange)arg1;
- (void)beginLineWithGlyphAtIndex:(unsigned long long)arg1;
- (void)endParagraph;
- (void)beginParagraph;
- (void)setDefaultTighteningFactor:(double)arg1;
- (double)defaultTighteningFactor;
- (unsigned long long)_sweepDirectionForGlyphAtIndex:(long long)arg1;
- (_Bool)_usesScreenFonts;
- (void)_flushCachedObjects;
- (_Bool)_layoutLineFragmentStartingWithGlyphAtIndex:(unsigned long long *)arg1 characterIndex:(unsigned long long *)arg2 atPoint:(struct CGPoint *)arg3 renderingContext:(id *)arg4;
- (void)_setForceWordWrapping:(_Bool)arg1;
- (_Bool)_forceWordWrapping;
- (void)_setBaselineRenderingMode:(_Bool)arg1;
- (_Bool)_baselineRenderingMode;
- (id)_getATSTypesetterGuts;
- (struct __CTTypesetter *)_ctTypesetter;
- (const char *)_bidiLevels;
- (long long)_baseWritingDirection;
- (void)_doBidiProcessing;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSAttributeDictionary : NSDictionary
{
    unsigned long long numElements;
    struct _NSAttributeDictionaryElement elements[1];
}

+ (id)newWithDictionary:(id)arg1;
+ (id)emptyAttributeDictionary;
+ (void)initialize;
- (_Bool)isEqualToDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)keyEnumerator;
- (void)getObjects:(id *)arg1 andKeys:(id *)arg2;
- (id)objectForKey:(id)arg1;
- (unsigned long long)count;
- (id)newWithKey:(id)arg1 object:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSAttributeDictionaryEnumerator : NSEnumerator
{
    NSAttributeDictionary *dictionary;
    unsigned long long nextElement;
}

- (void)dealloc;
- (id)nextObject;
- (id)initWithAttributeDictionary:(id)arg1;

@end

@interface NSAttributedString (NSAttributedStringAttachmentConveniences)
+ (id)attributedStringWithAttachment:(id)arg1;
@end

@interface NSAttributedString (NSAttributedStringUIFoundationAdditions)
+ (id)_documentTypeForFileType:(id)arg1;
- (long long)itemNumberInTextList:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeOfTextList:(id)arg1 atIndex:(unsigned long long)arg2;
- (_Bool)_atEndOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (_Bool)_atStartOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)_rangeOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)_rangeOfTextTableRow:(id)arg1 atIndex:(unsigned long long)arg2 completeRow:(_Bool *)arg3;
- (_Bool)_atEndOfTextTable:(id)arg1 atIndex:(unsigned long long)arg2;
- (_Bool)_atStartOfTextTable:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeOfTextTable:(id)arg1 atIndex:(unsigned long long)arg2;
- (struct _NSRange)rangeOfTextBlock:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)rulerAttributesInRange:(struct _NSRange)arg1;
- (id)fontAttributesInRange:(struct _NSRange)arg1;
- (id)_initWithDOMRange:(id)arg1;
- (id)initWithHTML:(id)arg1 baseURL:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithHTML:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithHTML:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithPath:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithURL:(id)arg1 documentAttributes:(id *)arg2;
- (id)_initWithURLFunnel:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithFileURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (id)initWithURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (id)initWithDocFormat:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithRTFDFileWrapper:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithRTFD:(id)arg1 documentAttributes:(id *)arg2;
- (id)initWithRTF:(id)arg1 documentAttributes:(id *)arg2;
- (id)_initWithRTFSelector:(SEL)arg1 argument:(id)arg2 documentAttributes:(id *)arg3;
- (id)initWithData:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (id)_documentFromRange:(struct _NSRange)arg1 document:(id)arg2 documentAttributes:(id)arg3 subresources:(id *)arg4;
- (void)_readDocumentFragment:(id)arg1 fromRange:(struct _NSRange)arg2 documentAttributes:(id)arg3 subresources:(id *)arg4;
- (id)docFormatFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)RTFDFileWrapperFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)RTFDFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)RTFFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2;
- (id)fileWrapperFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2 error:(id *)arg3;
- (id)dataFromRange:(struct _NSRange)arg1 documentAttributes:(id)arg2 error:(id *)arg3;
- (id)stringByStrippingAttachmentCharactersAndConvertingWritingDirectionToBidiControlCharactersFromRange:(struct _NSRange)arg1;
- (_Bool)containsAttachments;
- (unsigned long long)nextWordFromIndex:(unsigned long long)arg1 forward:(_Bool)arg2;
- (unsigned long long)lineBreakByHyphenatingBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (unsigned long long)lineBreakBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2;
- (unsigned long long)_lineBreakBeforeIndex:(unsigned long long)arg1 withinRange:(struct _NSRange)arg2 usesAlternativeBreaker:(_Bool)arg3;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1 inRange:(struct _NSRange)arg2;
- (struct _NSRange)doubleClickAtIndex:(unsigned long long)arg1;
- (id)defaultLanguage;
- (_Bool)_isStringDrawingTextStorage;
@end

@interface NSAttributedString (NSExtendedStringDrawing)
- (struct CGRect)boundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2;
- (void)drawWithRect:(struct CGRect)arg1 options:(long long)arg2;
- (struct CGRect)boundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2 context:(id)arg3;
- (id)_ui_attributedSubstringFromRange:(struct _NSRange)arg1 withTrackingAdjustment:(double)arg2;
- (id)_ui_attributedSubstringFromRange:(struct _NSRange)arg1 scaledByScaleFactor:(double)arg2;
- (void)drawWithRect:(struct CGRect)arg1 options:(long long)arg2 context:(id)arg3;
@end

@interface NSAttributedString (NSStringDrawing)
- (struct CGSize)size;
- (void)drawInRect:(struct CGRect)arg1;
- (void)drawAtPoint:(struct CGPoint)arg1;
@end

__attribute__((visibility("hidden")))
@interface NSGlyphInfo : NSObject <NSCopying, NSCoding>
{
    NSString *_baseString;
}

+ (_Bool)supportsSecureCoding;
+ (void)initialize;
+ (id)glyphInfoWithCharacterIdentifier:(unsigned long long)arg1 collection:(unsigned long long)arg2 baseString:(id)arg3;
+ (id)glyphInfoWithGlyph:(unsigned int)arg1 forFont:(id)arg2 baseString:(id)arg3;
+ (id)glyphInfoWithGlyphName:(id)arg1 forFont:(id)arg2 baseString:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForKeyedArchiver;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)characterCollection;
- (unsigned long long)characterIdentifier;
- (id)glyphName;
- (id)_baseString;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (void)dealloc;
- (id)initWithBaseString:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSCIDGlyphInfo : NSGlyphInfo
{
    unsigned short _cid;
    unsigned long long _collection;
}

+ (void)initialize;
+ (id)glyphInfoWithCharacterIdentifier:(unsigned long long)arg1 collection:(unsigned long long)arg2 baseString:(id)arg3;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)characterCollection;
- (unsigned long long)characterIdentifier;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (id)initWithCharacterIdentifier:(unsigned long long)arg1 collection:(unsigned long long)arg2 baseString:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSCTGlyphInfo : NSGlyphInfo
{
}

- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)characterCollection;
- (unsigned long long)characterIdentifier;
- (id)glyphName;
- (id)_baseString;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)_cfTypeID;

@end

__attribute__((visibility("hidden")))
@interface NSConcreteNotifyingMutableAttributedString : NSConcreteMutableAttributedString
{
    id _delegate;
}

+ (Class)_mutableStringClass;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
- (void)endEditing;
- (void)beginEditing;
- (id)delegate;
- (void)setDelegate:(id)arg1;

@end

@interface NSTextStorage : NSMutableAttributedString
{
    struct _NSRange _editedRange;
    long long _editedDelta;
    struct {
        unsigned int editedMask:8;
        unsigned int postWillProcess:1;
        unsigned int postDidProcess:1;
        unsigned int :6;
        unsigned int disabled:16;
    } _flags;
    NSMutableArray *_layoutManagers;
    id _sideData;
    long long _changeInLength;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(nonatomic) long long changeInLength; // @synthesize changeInLength=_changeInLength;
@property(nonatomic) struct _NSRange editedRange; // @synthesize editedRange=_editedRange;
- (_Bool)_usesSimpleTextEffects;
- (void)_setUsesSimpleTextEffects:(_Bool)arg1;
- (id)cuiStyleEffects;
- (id)cuiCatalog;
- (_Bool)_shouldSetOriginalFontAttribute;
@property(nonatomic) id <NSTextStorageDelegate> delegate;
- (void)fontSetChanged;
- (void)_notifyEdited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3 invalidatedRange:(struct _NSRange)arg4;
@property(readonly, nonatomic) _Bool fixesAttributesLazily;
- (void)ensureAttributesAreFixedInRange:(struct _NSRange)arg1;
- (void)invalidateAttributesInRange:(struct _NSRange)arg1;
- (void)_setAttributeFixingInProgress:(_Bool)arg1;
- (_Bool)_attributeFixingInProgress;
- (struct _NSRange)_rangeByEstimatingAttributeFixingForRange:(struct _NSRange)arg1;
- (void)processEditing;
- (void)edited:(unsigned long long)arg1 range:(struct _NSRange)arg2 changeInLength:(long long)arg3;
@property(nonatomic) unsigned long long editedMask; // @dynamic editedMask;
- (_Bool)_isEditing;
- (void)coordinateEditing:(CDUnknownBlockType)arg1;
- (void)endEditing;
- (void)beginEditing;
- (_Bool)_forceFixAttributes;
- (void)_setForceFixAttributes:(_Bool)arg1;
- (void)coordinateReading:(CDUnknownBlockType)arg1;
- (void)_unlock;
- (_Bool)_lockForWritingWithExceptionHandler:(_Bool)arg1;
- (_Bool)_lockForWriting;
- (_Bool)_lockForReading;
@property(readonly, nonatomic) NSArray *layoutManagers;
- (void)removeLayoutManager:(id)arg1;
- (void)addLayoutManager:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (Class)classForCoder;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (void)coordinateAccess:(CDUnknownBlockType)arg1;

@end

@interface NSConcreteTextStorage : NSTextStorage
{
    NSConcreteNotifyingMutableAttributedString *_contents;
    struct _opaque_pthread_rwlock_t {
        long long __sig;
        char __opaque[192];
    } _lock;
    struct {
        unsigned int _forceFixAttributes:1;
        unsigned int _needLock:1;
        unsigned int _lockInitialized:1;
        unsigned int _inFixingAttributes:1;
        unsigned int _reserved:28;
    } _pFlags;
}

+ (unsigned long long)_writerCountTSDKey;
- (void)addAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)removeAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)_setAttributeFixingInProgress:(_Bool)arg1;
- (_Bool)_attributeFixingInProgress;
- (_Bool)_forceFixAttributes;
- (void)_setForceFixAttributes:(_Bool)arg1;
- (id)string;
- (unsigned long long)length;
- (_Bool)fixesAttributesLazily;
- (void)dealloc;
- (id)init;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithAttributedString:(id)arg1;
- (void)_initLocks;
- (void)_unlock;
- (_Bool)_lockForWritingWithExceptionHandler:(_Bool)arg1;
- (_Bool)_lockForReading;
- (Class)classForCoder;

@end

__attribute__((visibility("hidden")))
@interface NSExtraLMData : NSObject
{
    NSRunStorage *_attachmentSizesRun;
    struct CGRect _currentAttachmentRect;
    unsigned long long _currentAttachmentIndex;
    id _fillHoleLock;
    NSRunStorage *_fragmentRunsExtras;
    id _temporaryAttributes;
    NSTextContainer *_firstTextContainer;
    struct __CFDictionary *_textContainerIndexes;
    struct __CFDictionary *_textContainerGlyphIndexes;
    long long _typesetterBehavior;
    struct CGRect _cachedFontBounds;
    double _cachedUnderlineThickness;
    double _cachedUnderlinePosition;
    double _cachedUnderlineAdjustment;
    struct _NSRange _cachedUnderlineRange;
    NSMutableArray *_blockRunsArray;
    double _hyphenationFactor;
    NSMutableArray *_insertionPointCache;
    struct _NSGlyphTree _glyphTree;
    struct _NSLayoutTree _layoutTree;
    struct _NSRange _firstTextViewVisibleCharRange;
    struct CGSize _firstTextViewVisibleOffset;
    struct _NSRange _lastInvalidatedCharRange;
    double _lastInvalidatedLongitudinalPosition;
    NSTextContainer *_lastInvalidatedTextContainer;
    NSLayoutManagerTextBlockRowArrayCache *_rowArrayCache;
    struct __lmFlags2 {
        unsigned int glyphCause:6;
        unsigned int layoutCause:6;
        unsigned int delegateRespondsToTempAttrs:1;
        unsigned int processingFirstTextViewVisible:1;
        unsigned int temporarySpacingChange:1;
        unsigned int alwaysDrawsActive:1;
        unsigned int usesOldShowPackedGlyphs:1;
        unsigned int drawsUnderlinesLikeWebKit:1;
        unsigned int drawsDebugBaselines:1;
        unsigned int reserved:13;
    } _lmFlags2;
}

@end

@interface UIFont : NSObject <NSCopying>
{
}

+ (id)classFallbacksForKeyedArchiver;
+ (id)ib_preferredFontForTextStyle:(id)arg1;
+ (id)defaultFontForTextStyle:(id)arg1;
+ (id)preferredFontForUsage:(id)arg1 contentSizeCategoryName:(id)arg2;
+ (id)preferredFontForUsage:(id)arg1;
+ (id)preferredFontForTextStyle:(id)arg1;
+ (double)systemFontSize;
+ (double)smallSystemFontSize;
+ (double)buttonFontSize;
+ (double)labelFontSize;
+ (id)_systemFontsOfSize:(double)arg1 traits:(int)arg2;
+ (id)fontWithDescriptor:(id)arg1 size:(double)arg2;
+ (id)systemFontOfSize:(double)arg1 weight:(double)arg2 design:(id)arg3;
+ (id)systemFontOfSize:(double)arg1 weight:(double)arg2;
+ (id)_ultraLightSystemFontOfSize:(double)arg1;
+ (id)_lightSystemFontOfSize:(double)arg1;
+ (id)_thinSystemFontOfSize:(double)arg1;
+ (id)italicSystemFontOfSize:(double)arg1;
+ (id)boldSystemFontOfSize:(double)arg1;
+ (id)_opticalBoldSystemFontOfSize:(double)arg1;
+ (id)_opticalSystemFontOfSize:(double)arg1;
+ (id)systemFontOfSize:(double)arg1;
+ (id)systemFontOfSize:(double)arg1 traits:(int)arg2;
+ (id)fontNamesForFamilyName:(id)arg1;
+ (id)familyNames;
+ (id)fontWithMarkupDescription:(id)arg1;
+ (id)fontWithFamilyName:(id)arg1 traits:(int)arg2 size:(double)arg3;
+ (id)fontWithName:(id)arg1 size:(double)arg2;
+ (id)fontWithName:(id)arg1 size:(double)arg2 traits:(int)arg3;
+ (void)_evictAllItemsFromFontAndFontDescriptorCaches;
+ (id)_sharedFontCache;
+ (id)_sharedZeroPointFont;
+ (void)initialize;
+ (id)userFontOfSize:(double)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)markupDescription;
- (id)familyNameForCSSFontFamilyValue;
- (_Bool)isFixedPitch;
- (_Bool)isIBTextStyleFont;
- (double)_leading;
@property(readonly, nonatomic) double xHeight;
@property(readonly, nonatomic) double capHeight;
@property(readonly, nonatomic) double leading;
@property(readonly, nonatomic) double lineHeight;
@property(readonly, nonatomic) double descender;
@property(readonly, nonatomic) double ascender;
- (_Bool)isSystemFont;
@property(readonly, nonatomic) double pointSize;
- (int)traits;
@property(readonly, retain, nonatomic) NSString *fontName;
@property(readonly, retain, nonatomic) NSString *familyName;
- (id)fontWithSize:(double)arg1;
- (Class)classForCoder;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)_fontScaledByScaleFactor:(double)arg1;
- (id)initWithMarkupDescription:(id)arg1;
- (id)initWithFamilyName:(id)arg1 traits:(int)arg2 size:(double)arg3;
- (id)initWithName:(id)arg1 size:(double)arg2;
- (double)_scaledValueForValue:(double)arg1;
- (id)_alternateSystemFonts;
- (id)fontDescriptor;
- (unsigned long long)mostCompatibleStringEncoding;
- (double)_defaultLineHeightForUILayout;
- (id)lastResortFont;
- (id)bestMatchingFontForCharacters:(const unsigned short *)arg1 length:(unsigned long long)arg2 attributes:(id)arg3 actualCoveredLength:(unsigned long long *)arg4;
- (void)getBoundingRects:(struct CGRect *)arg1 forCGGlyphs:(const unsigned short *)arg2 count:(unsigned long long)arg3;
- (unsigned int)_defaultGlyphForChar:(unsigned short)arg1;
- (_Bool)_getLatin1GlyphMapping:(const unsigned short **)arg1 andAdvanceMapping:(const struct CGSize **)arg2;
- (id)_familyName;
- (unsigned long long)getCaretPositions:(double *)arg1 forGlyph:(unsigned int)arg2 maximumLength:(unsigned long long)arg3;
- (unsigned int)hyphenGlyphForLocale:(id)arg1;
- (id)screenFontWithRenderingMode:(unsigned long long)arg1;
- (struct CGSize)advancementForGlyph:(unsigned short)arg1;
- (double)underlineThickness;
- (struct CGRect)boundingRectForFont;
- (struct CGFont *)_backingCGSFont;
- (void)getVerticalOriginTranslations:(struct CGSize *)arg1 forCGGlyphs:(const unsigned short *)arg2 count:(unsigned long long)arg3;
- (void)getAdvancements:(struct CGSize *)arg1 forCGGlyphs:(const unsigned short *)arg2 count:(unsigned long long)arg3;
- (double)_totalAdvancementForNativeGlyphs:(const unsigned short *)arg1 count:(long long)arg2;
- (unsigned long long)renderingMode;
- (id)_kernOverride;
- (void)setInContext:(struct CGContext *)arg1;
- (struct CGAffineTransform)_textMatrixTransformForContext:(struct CGContext *)arg1;
- (double)_ascenderDeltaForBehavior:(long long)arg1;
- (double)_baseLineHeightForFont:(_Bool)arg1;
- (_Bool)_isHiraginoFont;
- (_Bool)isVertical;
- (id)verticalFont;
- (unsigned short)glyphWithName:(id)arg1;
- (unsigned long long)numberOfGlyphs;
- (struct __CTFont *)CTFont;
- (_Bool)_isDefaultFace;
- (id)coveredCharacterSet;
- (double)_bodyLeading;

@end

__attribute__((visibility("hidden")))
@interface NSFont : UIFont <NSCopying>
{
}

+ (id)fontWithName:(id)arg1 size:(double)arg2;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface NSGlyphGenerator : NSObject
{
}

+ (id)sharedGlyphGenerator;
+ (id)defaultGlyphGenerator;
+ (void)initialize;
- (void)generateGlyphsForGlyphStorage:(id)arg1 desiredNumberOfCharacters:(unsigned long long)arg2 glyphIndex:(unsigned long long *)arg3 characterIndex:(unsigned long long *)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSIdentityGlyphInfo : NSGlyphInfo
{
    NSFont *_font;
    unsigned int _glyph;
}

+ (void)initialize;
+ (id)glyphInfoWithGlyph:(unsigned int)arg1 forFont:(id)arg2 baseString:(id)arg3;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (unsigned int)_glyph;
- (id)_font;
- (unsigned int)_glyphForFont:(id)arg1 baseString:(id)arg2;
- (void)dealloc;
- (id)initWithGlyph:(unsigned int)arg1 forFont:(id)arg2 baseString:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSGlyphNameGlyphInfo : NSIdentityGlyphInfo
{
    NSString *_name;
}

+ (void)initialize;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)glyphName;
- (void)dealloc;
- (id)initWithGlyphName:(id)arg1 glyph:(unsigned int)arg2 forFont:(id)arg3 baseString:(id)arg4;

@end

@interface NSHTMLReader : NSObject
{
    NSMutableAttributedString *_attrStr;
    NSMutableDictionary *_documentAttrs;
    NSData *_data;
    NSURL *_baseURL;
    NSDictionary *_options;
    WebView *_webView;
    id _webDelegate;
    DOMDocument *_document;
    DOMRange *_domRange;
    NSMutableArray *_domStartAncestors;
    WebDataSource *_dataSource;
    NSString *_standardFontFamily;
    double _textSizeMultiplier;
    double _webViewTextSizeMultiplier;
    double _defaultTabInterval;
    double _defaultFontSize;
    double _minimumFontSize;
    NSMutableArray *_textLists;
    NSMutableArray *_textBlocks;
    NSMutableArray *_textTables;
    NSMutableDictionary *_textTableFooters;
    NSMutableArray *_textTableSpacings;
    NSMutableArray *_textTablePaddings;
    NSMutableArray *_textTableRows;
    NSMutableArray *_textTableRowArrays;
    NSMutableArray *_textTableRowBackgroundColors;
    NSMutableDictionary *_computedStylesForElements;
    NSMutableDictionary *_specifiedStylesForElements;
    NSMutableDictionary *_stringsForNodes;
    NSMutableDictionary *_floatsForNodes;
    NSMutableDictionary *_colorsForNodes;
    NSMutableDictionary *_attributesForElements;
    NSMutableDictionary *_elementIsBlockLevel;
    NSMutableDictionary *_fontCache;
    NSMutableArray *_writingDirectionArray;
    long long _domRangeStartIndex;
    long long _indexingLimit;
    long long _thumbnailLimit;
    long long _errorCode;
    long long _quoteLevel;
    struct {
        unsigned int isSoft:1;
        unsigned int reachedStart:1;
        unsigned int reachedEnd:1;
        unsigned int isIndexing:1;
        unsigned int isTesting:1;
        unsigned int hasTrailingNewline:1;
        unsigned int pad:26;
    } _flags;
}

+ (id)defaultParagraphStyle;
+ (void)initialize;
- (void)setMutableAttributedString:(id)arg1;
- (id)documentAttributes;
- (id)attributedString;
- (id)initWithDOMRange:(id)arg1;
- (id)initWithPath:(id)arg1 options:(id)arg2;
- (id)initWithData:(id)arg1 options:(id)arg2;
- (void)dealloc;
- (void)_load;
- (void)_loadUsingWebKitOnMainThread;
- (void)_loadFromDOMRange;
- (void)_loadUsingWebKit;
- (id)_createWebArchiveForData:(id)arg1;
- (_Bool)_sanitizeWebArchiveDictionary:(id)arg1;
- (_Bool)_sanitizeWebArchiveArray:(id)arg1;
- (void)_adjustTrailingNewline;
- (void)_parseNode:(id)arg1;
- (void)_traverseFooterNode:(id)arg1 depth:(long long)arg2;
- (void)_traverseNode:(id)arg1 depth:(long long)arg2 embedded:(_Bool)arg3;
- (void)_processText:(id)arg1;
- (void)_exitElement:(id)arg1 tag:(id)arg2 display:(id)arg3 depth:(long long)arg4 startIndex:(unsigned long long)arg5;
- (void)_addMarkersToList:(id)arg1 range:(struct _NSRange)arg2;
- (_Bool)_processElement:(id)arg1 tag:(id)arg2 display:(id)arg3 depth:(long long)arg4;
- (void)_addTableCellForElement:(id)arg1;
- (void)_addTableForElement:(id)arg1;
- (_Bool)_enterElement:(id)arg1 tag:(id)arg2 display:(id)arg3 depth:(long long)arg4 embedded:(_Bool)arg5;
- (void)_processHeadElement:(id)arg1;
- (void)_processMetaElementWithName:(id)arg1 content:(id)arg2;
- (void)_fillInBlock:(id)arg1 forElement:(id)arg2 backgroundColor:(id)arg3 extraMargin:(double)arg4 extraPadding:(double)arg5 isTable:(_Bool)arg6;
- (void)_addValue:(id)arg1 forElement:(id)arg2;
- (void)_addQuoteForElement:(id)arg1 opening:(_Bool)arg2 level:(long long)arg3;
- (_Bool)_addAttachmentForElement:(id)arg1 URL:(id)arg2 needsParagraph:(_Bool)arg3 usePlaceholder:(_Bool)arg4;
- (void)_newTabForElement:(id)arg1;
- (void)_newLineForElement:(id)arg1;
- (void)_newParagraphForElement:(id)arg1 tag:(id)arg2 allowEmpty:(_Bool)arg3 suppressTrailingSpace:(_Bool)arg4 isEntering:(_Bool)arg5;
- (id)_attributesForElement:(id)arg1;
- (id)_computedAttributesForElement:(id)arg1;
- (id)_colorForNode:(id)arg1 property:(id)arg2;
- (id)_computedColorForNode:(id)arg1 property:(id)arg2;
- (id)_blockLevelElementForNode:(id)arg1;
- (_Bool)_elementHasOwnBackgroundColor:(id)arg1;
- (_Bool)_elementIsBlockLevel:(id)arg1;
- (_Bool)_getFloat:(double *)arg1 forNode:(id)arg2 property:(id)arg3;
- (_Bool)_getComputedFloat:(double *)arg1 forNode:(id)arg2 property:(id)arg3;
- (id)_stringForNode:(id)arg1 property:(id)arg2;
- (id)_computedStringForNode:(id)arg1 property:(id)arg2;
- (id)_specifiedStyleForElement:(id)arg1;
- (id)_computedStyleForElement:(id)arg1;
- (id)_childrenForNode:(id)arg1;
- (id)_webPreferences;
- (Class)_WebMessageDocumentClass;
- (Class)_DOMHTMLTableCellElementClass;
- (Class)_webArchiveClass;
- (Class)_webViewClass;

@end

__attribute__((visibility("hidden")))
@interface NSHTMLWebDelegate : NSObject
{
    _Bool _loadDidFinish;
    _Bool _loadDidSucceed;
    NSURL *_baseURL;
}

- (void)webView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (void)webView:(id)arg1 decidePolicyForNewWindowAction:(id)arg2 request:(id)arg3 newFrameName:(id)arg4 decisionListener:(id)arg5;
- (void)decidePolicyForRequest:(id)arg1 decisionListener:(id)arg2;
- (void)webView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)webView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)webView:(id)arg1 resource:(id)arg2 didReceiveAuthenticationChallenge:(id)arg3 fromDataSource:(id)arg4;
- (id)webView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (id)webView:(id)arg1 identifierForInitialRequest:(id)arg2 fromDataSource:(id)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didFailProvisionalLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalLoadForFrame:(id)arg2;
- (_Bool)loadDidSucceed;
- (_Bool)loadDidFinish;
- (void)dealloc;
- (id)initWithBaseURL:(id)arg1;
- (id)init;

@end

@interface NSHTMLWriter : NSObject
{
    NSAttributedString *_attrStr;
    NSDictionary *_documentAttrs;
    NSData *_htmlData;
    NSMutableString *_bodyStr;
    NSFileWrapper *_fileWrapper;
    NSMutableDictionary *_subresources;
    NSData *_webArchiveData;
    NSMutableArray *_paraStyleStrings;
    NSMutableArray *_paraStyleArrays;
    NSMutableIndexSet *_paraStyleIndexes;
    NSMutableIndexSet *_listItemStyleIndexes;
    NSMutableOrderedSet *_charStyleStrings;
    NSMutableArray *_charStyleArrays;
    NSMutableArray *_fontStrings;
    NSMutableArray *_tableStyleStrings;
    NSMutableArray *_tableCellStyleStrings;
    NSMutableArray *_blockStyleStrings;
    NSMutableArray *_olistStyleStrings;
    NSMutableArray *_ulistStyleStrings;
    NSMutableDictionary *_fontNames;
    NSMutableDictionary *_fontDescriptions;
    long long _level;
    long long _prefixSpaces;
    NSString *_textEncodingName;
    unsigned long long _characterEncoding;
    NSURL *_outputBaseURL;
    id _resourceHandler;
    unsigned int _excludedElements1;
    unsigned int _excludedElements2;
    struct {
        unsigned int interchangeNewline:1;
        unsigned int noDefaultFonts:1;
        unsigned int tabsToSpaces:1;
        unsigned int coalesceTabSpans:1;
        unsigned int usedTabSpan:1;
        unsigned int encodingIsUnicode:1;
        unsigned int pad:26;
    } _flags;
}

- (id)documentFragmentForDocument:(id)arg1;
- (void)readDocumentFragment:(id)arg1;
- (id)webArchiveData;
- (void)_createWebArchiveData;
- (id)webArchive;
- (id)subresources;
- (id)HTMLFileWrapper;
- (id)HTMLData;
- (void)_generateHTML;
- (void)_prepareString:(id)arg1 forConversionToEncoding:(unsigned long long)arg2;
- (_Bool)_isStrictByParsingExcludedElements;
- (void)_appendAttachment:(id)arg1 atIndex:(unsigned long long)arg2 toString:(id)arg3;
- (_Bool)_closeListsForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (void)_openListsForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3 isStrict:(_Bool)arg4;
- (unsigned long long)_listClassForList:(id)arg1;
- (_Bool)_closeBlocksForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (void)_openBlocksForParagraphStyle:(id)arg1 atIndex:(unsigned long long)arg2 inString:(id)arg3;
- (unsigned long long)_blockClassForBlock:(id)arg1;
- (void)_closeFlags:(unsigned long long)arg1 openFlags:(unsigned long long)arg2 inString:(id)arg3;
- (void)_writeDocumentPropertiesToString:(id)arg1;
- (void)_writeDocumentProperty:(id)arg1 value:(id)arg2 toString:(id)arg3;
- (unsigned long long)_paragraphClassforParagraphStyle:(id)arg1 range:(struct _NSRange)arg2 isEmpty:(_Bool)arg3 isCompletelyEmpty:(_Bool)arg4 headerString:(id *)arg5 alignmentString:(id *)arg6 directionString:(id *)arg7;
- (id)_defaultValueForAttribute:(id)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)_spanClassForAttributes:(id)arg1 inParagraphClass:(unsigned long long)arg2 spanClass:(unsigned long long)arg3 flags:(unsigned long long *)arg4;
- (id)_prefixDown;
- (id)_prefixUp;
- (id)_prefix;
- (void)setDocumentAttributes:(id)arg1;
- (void)dealloc;
- (id)initWithAttributedString:(id)arg1;
- (Class)_webArchiveClass;

@end

__attribute__((visibility("hidden")))
@interface NSRunStorage : NSObject <NSCopying>
{
    unsigned long long _count;
    unsigned long long _elementSize;
    unsigned long long _numBlocks;
    unsigned long long _maxBlocks;
    unsigned long long _indexDeltaStartBlock;
    long long _indexDelta;
    struct _NSRunBlock *_runs;
    unsigned long long _cachedBlock;
    struct _NSRange _cachedBlockRange;
    unsigned long long _gapBlockIndex;
}

+ (void)initialize;
+ (void)_setConsistencyCheckingEnabled:(_Bool)arg1 superCheckEnabled:(_Bool)arg2;
- (id)description;
- (void)removeElementsInRange:(struct _NSRange)arg1 coalesceRuns:(_Bool)arg2;
- (void)insertElement:(void *)arg1 range:(struct _NSRange)arg2 coalesceRuns:(_Bool)arg3;
- (void)replaceElementsInRange:(struct _NSRange)arg1 withElement:(void *)arg2 coalesceRuns:(_Bool)arg3;
- (void *)elementAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)elementSize;
- (unsigned long long)count;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithRunStorage:(id)arg1;
- (id)init;
- (id)initWithElementSize:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (void)_deallocData;
- (void)_reallocData:(unsigned long long)arg1;
- (void)_allocData:(unsigned long long)arg1;
- (void)_consistencyError:(long long)arg1 startAtZeroError:(_Bool)arg2 cacheError:(_Bool)arg3 inconsistentBlockError:(_Bool)arg4;
- (void)_consistencyCheck:(long long)arg1;
- (void)_moveGapAndMergeWithBlockRange:(struct _NSRange)arg1;
- (void)_moveGapToBlockIndex:(unsigned long long)arg1;
- (void)_ensureCapacity:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSIdRunStorage : NSRunStorage
{
}

+ (void)initialize;
- (void)dealloc;
- (void)_reallocData:(unsigned long long)arg1;
- (void)_allocData:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSInsertionPointHelper : NSObject
{
    struct _NSRange _charRange;
    long long _writingDirection;
    unsigned long long _count;
    unsigned long long _altCount;
    double *_logicalPositions;
    double *_logicalLeftBoundaries;
    double *_logicalRightBoundaries;
    unsigned long long *_logicalCharIndexes;
    double *_displayPositions;
    unsigned long long *_displayCharIndexes;
    double *_logicalAltPositions;
    unsigned long long *_logicalAltCharIndexes;
    double *_displayAltPositions;
    unsigned long long *_displayAltCharIndexes;
}

- (void)dealloc;

@end

@interface NSLayoutManager : NSObject <NSCoding>
{
    NSTextStorage *_textStorage;
    NSGlyphGenerator *_glyphGenerator;
    NSTypesetter *_typesetter;
    NSMutableArray *_textContainers;
    NSStorage *_containerUsedRects;
    NSRunStorage *_containerRuns;
    NSTextContainer *_extraLineFragmentContainer;
    struct __lmFlags {
        unsigned int containersAreFull:1;
        unsigned int glyphsMightDrawOutsideLines:1;
        unsigned int backgroundLayoutEnabled:1;
        unsigned int resizingInProgress:1;
        unsigned int allowScreenFonts:1;
        unsigned int cachedRectArrayInUse:1;
        unsigned int displayInvalidationInProgress:1;
        unsigned int insertionPointNeedsUpdate:1;
        unsigned int layoutManagerInDirtyList:1;
        unsigned int originalFontOverride:1;
        unsigned int showInvisibleCharacters:1;
        unsigned int showControlCharacters:1;
        unsigned int delegateRespondsToDidInvalidate:1;
        unsigned int delegateRespondsToDidComplete:1;
        unsigned int glyphFormat:2;
        unsigned int textStorageRespondsToIsEditing:1;
        unsigned int notifyEditedInProgress:1;
        unsigned int containersChanged:1;
        unsigned int isGeneratingGlyphs:1;
        unsigned int hasNonGeneratedGlyphData:1;
        unsigned int syncAlignmentToDirection:1;
        unsigned int defaultAttachmentScaling:2;
        unsigned int usesFontLeading:1;
        unsigned int seenRightToLeft:1;
        unsigned int ignoresViewTransformations:1;
        unsigned int needToFlushGlyph:1;
        unsigned int flipsIfNeeded:1;
        unsigned int allowNonContig:1;
        unsigned int useNonContig:1;
        unsigned int inBackgroundLayout:1;
    } _lmFlags;
    id _delegate;
    unsigned short _textViewResizeDisableStack;
    unsigned short _displayInvalidationDisableStack;
    struct _NSRange _deferredDisplayCharRange;
    id _firstTextView;
    struct CGRect *_cachedRectArray;
    unsigned long long _cachedRectArrayCapacity;
    char *_glyphBuffer;
    unsigned long long _glyphBufferSize;
    struct _NSRange _cachedLocationNominalGlyphRange;
    unsigned long long _cachedLocationGlyphIndex;
    struct CGPoint _cachedLocation;
    struct _NSRange _cachedFontCharRange;
    NSFont *_cachedFont;
    unsigned long long _firstUnlaidGlyphIndex;
    unsigned long long _firstUnlaidCharIndex;
    struct _NSRange _newlyFilledGlyphRange;
    id _extraData;
}

+ (_Bool)_showsControlCharacters;
+ (_Bool)_showsInvisibleCharacters;
+ (_Bool)_ignoresViewTransformations;
+ (_Bool)_usesScreenFonts;
+ (void)initialize;
+ (id)_defaultLinkAttributes;
- (void)underlineGlyphRange:(struct _NSRange)arg1 underlineType:(long long)arg2 lineFragmentRect:(struct CGRect)arg3 lineFragmentGlyphRange:(struct _NSRange)arg4 containerOrigin:(struct CGPoint)arg5;
- (void)strikethroughGlyphRange:(struct _NSRange)arg1 strikethroughType:(long long)arg2 lineFragmentRect:(struct CGRect)arg3 lineFragmentGlyphRange:(struct _NSRange)arg4 containerOrigin:(struct CGPoint)arg5;
- (void)drawStrikethroughForGlyphRange:(struct _NSRange)arg1 strikethroughType:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)drawUnderlineForGlyphRange:(struct _NSRange)arg1 underlineType:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (void)fillBackgroundRectArray:(const struct CGRect *)arg1 count:(unsigned long long)arg2 forCharacterRange:(struct _NSRange)arg3 color:(id)arg4;
- (void)showCGGlyphs:(const unsigned short *)arg1 positions:(const struct CGPoint *)arg2 count:(unsigned long long)arg3 font:(id)arg4 matrix:(struct CGAffineTransform)arg5 attributes:(id)arg6 inContext:(struct CGContext *)arg7;
- (void)drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)enumerateEnclosingRectsForCharacterRange:(struct _NSRange)arg1 withinSelectedCharacterRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateEnclosingRectsForGlyphRange:(struct _NSRange)arg1 withinSelectedGlyphRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)enumerateLineFragmentsForGlyphRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)setSynchronizesAlignmentToDirection:(_Bool)arg1;
- (_Bool)synchronizesAlignmentToDirection;
@property(nonatomic) _Bool usesFontLeading;
- (double)defaultBaselineOffsetForFont:(id)arg1;
- (double)defaultLineHeightForFont:(id)arg1;
- (id)substituteFontForFont:(id)arg1;
- (id)_temporaryAttributesAtCharacterIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)temporaryAttributesAtCharacterIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)_temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)_temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)temporaryAttribute:(id)arg1 atCharacterIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (void)removeTemporaryAttribute:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)addTemporaryAttribute:(id)arg1 value:(id)arg2 forCharacterRange:(struct _NSRange)arg3;
- (void)addTemporaryAttributes:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (void)setTemporaryAttributes:(id)arg1 forCharacterRange:(struct _NSRange)arg2;
- (id)temporaryAttributesAtCharacterIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (unsigned long long)getLineFragmentInsertionPointsForCharacterAtIndex:(unsigned long long)arg1 alternatePositions:(_Bool)arg2 inDisplayOrder:(_Bool)arg3 positions:(double *)arg4 characterIndexes:(unsigned long long *)arg5;
- (unsigned long long)characterIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceBetweenInsertionPoints:(double *)arg3;
- (unsigned long long)glyphIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2 fractionOfDistanceThroughGlyph:(double *)arg3;
- (double)fractionOfDistanceThroughGlyphForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2;
- (unsigned long long)glyphIndexForPoint:(struct CGPoint)arg1 inTextContainer:(id)arg2;
- (struct _NSRange)glyphRangeForBoundingRectWithoutAdditionalLayout:(struct CGRect)arg1 inTextContainer:(id)arg2;
- (struct _NSRange)glyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2;
- (struct CGRect)boundingRectForGlyphRange:(struct _NSRange)arg1 inTextContainer:(id)arg2;
- (struct CGRect *)rectArrayForGlyphRange:(struct _NSRange)arg1 withinSelectedGlyphRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned long long *)arg4;
- (struct CGRect *)rectArrayForCharacterRange:(struct _NSRange)arg1 withinSelectedCharacterRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 rectCount:(unsigned long long *)arg4;
- (struct _NSRange)rangeOfNominallySpacedGlyphsContainingIndex:(unsigned long long)arg1;
- (struct _NSRange)glyphRangeForTextContainer:(id)arg1;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)arg1 actualGlyphRange:(struct _NSRange *)arg2;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (struct CGRect)boundsRectForTextBlock:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct CGRect)layoutRectForTextBlock:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (struct CGRect)boundsRectForTextBlock:(id)arg1 glyphRange:(struct _NSRange)arg2;
- (struct CGRect)layoutRectForTextBlock:(id)arg1 glyphRange:(struct _NSRange)arg2;
- (void)setBoundsRect:(struct CGRect)arg1 forTextBlock:(id)arg2 glyphRange:(struct _NSRange)arg3;
- (void)setLayoutRect:(struct CGRect)arg1 forTextBlock:(id)arg2 glyphRange:(struct _NSRange)arg3;
- (struct _NSRange)truncatedGlyphRangeInLineFragmentForGlyphAtIndex:(unsigned long long)arg1;
- (struct CGSize)attachmentSizeForGlyphAtIndex:(unsigned long long)arg1;
- (_Bool)drawsOutsideLineFragmentForGlyphAtIndex:(unsigned long long)arg1;
- (_Bool)notShownAttributeForGlyphAtIndex:(unsigned long long)arg1;
- (struct CGPoint)locationForGlyphAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSTextContainer *extraLineFragmentTextContainer;
@property(readonly, nonatomic) struct CGRect extraLineFragmentUsedRect;
@property(readonly, nonatomic) struct CGRect extraLineFragmentRect;
- (struct CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (struct CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 allowLayout:(_Bool)arg3;
- (struct CGRect)lineFragmentUsedRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 withoutAdditionalLayout:(_Bool)arg3;
- (struct CGRect)lineFragmentRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (struct CGRect)lineFragmentRectForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 withoutAdditionalLayout:(_Bool)arg3;
- (struct CGRect)usedRectForTextContainer:(id)arg1;
- (id)textContainerForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)textContainerForGlyphAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 withoutAdditionalLayout:(_Bool)arg3;
- (void)getFirstUnlaidCharacterIndex:(unsigned long long *)arg1 glyphIndex:(unsigned long long *)arg2;
- (unsigned long long)firstUnlaidGlyphIndex;
- (unsigned long long)firstUnlaidCharacterIndex;
- (void)setEllipsisGlyphAttribute:(_Bool)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)setAttachmentSize:(struct CGSize)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setDrawsOutsideLineFragment:(_Bool)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)setNotShownAttribute:(_Bool)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)setLocations:(struct CGPoint *)arg1 startingGlyphIndexes:(unsigned long long *)arg2 count:(unsigned long long)arg3 forGlyphRange:(struct _NSRange)arg4;
- (void)setLocation:(struct CGPoint)arg1 forStartOfGlyphRange:(struct _NSRange)arg2;
- (void)setLocation:(struct CGPoint)arg1 forStartOfGlyphRange:(struct _NSRange)arg2 coalesceRuns:(_Bool)arg3;
- (void)setExtraLineFragmentRect:(struct CGRect)arg1 usedRect:(struct CGRect)arg2 textContainer:(id)arg3;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3;
- (void)setTextContainer:(id)arg1 forGlyphRange:(struct _NSRange)arg2;
- (unsigned long long)getGlyphs:(unsigned int *)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(_Bool *)arg5 bidiLevels:(char *)arg6;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned int *)arg2 characterIndexes:(unsigned long long *)arg3 glyphInscriptions:(unsigned long long *)arg4 elasticBits:(_Bool *)arg5;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned short *)arg2 properties:(long long *)arg3 characterIndexes:(unsigned long long *)arg4 bidiLevels:(char *)arg5;
- (long long)propertyForGlyphAtIndex:(unsigned long long)arg1;
- (long long)intAttribute:(long long)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (unsigned long long)glyphIndexForCharacterAtIndex:(unsigned long long)arg1;
- (unsigned long long)characterIndexForGlyphAtIndex:(unsigned long long)arg1;
- (_Bool)isValidGlyphIndex:(unsigned long long)arg1;
- (unsigned short)glyphAtIndex:(unsigned long long)arg1;
- (unsigned short)glyphAtIndex:(unsigned long long)arg1 isValidIndex:(_Bool *)arg2;
@property(readonly, nonatomic) unsigned long long numberOfGlyphs;
- (void)setGlyphs:(const unsigned short *)arg1 properties:(const long long *)arg2 characterIndexes:(const unsigned long long *)arg3 font:(id)arg4 forGlyphRange:(struct _NSRange)arg5;
- (void)invalidateGlyphsOnLayoutInvalidationForGlyphRange:(struct _NSRange)arg1;
- (void)setIntAttribute:(long long)arg1 value:(long long)arg2 forGlyphAtIndex:(unsigned long long)arg3;
- (void)setCharacterIndex:(unsigned long long)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (void)deleteGlyphsInRange:(struct _NSRange)arg1;
- (void)_primitiveDeleteGlyphsInRange:(struct _NSRange)arg1;
- (void)replaceGlyphAtIndex:(unsigned long long)arg1 withGlyph:(unsigned int)arg2;
- (void)insertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3;
- (void)insertGlyphs:(const unsigned int *)arg1 length:(unsigned long long)arg2 forStartingGlyphAtIndex:(unsigned long long)arg3 characterIndex:(unsigned long long)arg4;
- (void)ensureLayoutForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2;
- (void)ensureLayoutForTextContainer:(id)arg1;
- (void)ensureLayoutForGlyphRange:(struct _NSRange)arg1;
- (void)ensureLayoutForCharacterRange:(struct _NSRange)arg1;
- (void)ensureGlyphsForGlyphRange:(struct _NSRange)arg1;
- (void)ensureGlyphsForCharacterRange:(struct _NSRange)arg1;
- (void)processEditingForTextStorage:(id)arg1 edited:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4 invalidatedRange:(struct _NSRange)arg5;
- (void)textStorage:(id)arg1 edited:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4 invalidatedRange:(struct _NSRange)arg5;
- (void)_forceDisplayToBeCorrectForViewsWithUnlaidGlyphs;
- (void)invalidateDisplayForGlyphRange:(struct _NSRange)arg1;
- (void)invalidateDisplayForCharacterRange:(struct _NSRange)arg1;
- (void)_primitiveInvalidateDisplayForGlyphRange:(struct _NSRange)arg1;
- (void)invalidateLayoutForCharacterRange:(struct _NSRange)arg1 isSoft:(_Bool)arg2 actualCharacterRange:(struct _NSRange *)arg3;
- (void)invalidateLayoutForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (void)invalidateGlyphsForCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2 actualCharacterRange:(struct _NSRange *)arg3;
- (void)_invalidateGlyphsForCharacterRange:(struct _NSRange)arg1 editedCharacterRange:(struct _NSRange)arg2 changeInLength:(long long)arg3 actualCharacterRange:(struct _NSRange *)arg4;
- (_Bool)backgroundColorProvidesOpaqueSurface;
- (unsigned long long)layoutOptions;
- (long long)typesetterBehavior;
- (void)setTypesetterBehavior:(long long)arg1;
@property(nonatomic) double hyphenationFactor;
@property(nonatomic) _Bool showsControlCharacters;
@property(nonatomic) _Bool showsInvisibleCharacters;
- (void)setUsesScreenFonts:(_Bool)arg1;
- (_Bool)usesScreenFonts;
- (_Bool)backgroundLayoutEnabled;
- (void)setBackgroundLayoutEnabled:(_Bool)arg1;
@property(readonly, nonatomic) _Bool hasNonContiguousLayout;
- (void)_setGlyphsPerLineEstimate:(unsigned long long)arg1 integerOffsetPerLineEstimate:(unsigned long long)arg2;
- (void)_setGlyphsPerLineEstimate:(unsigned long long)arg1 offsetPerLineEstimate:(double)arg2;
@property(nonatomic) _Bool allowsNonContiguousLayout;
- (void)textContainerChangedTextView:(id)arg1 fromTextView:(id)arg2;
- (void)textContainerChangedTextView:(id)arg1;
- (void)textContainerChangedGeometry:(id)arg1;
- (void)removeTextContainerAtIndex:(unsigned long long)arg1;
- (void)insertTextContainer:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)addTextContainer:(id)arg1;
- (struct _NSRange)_characterRangeCurrentlyInAndAfterContainer:(id)arg1;
@property(readonly, nonatomic) NSArray *textContainers;
@property(nonatomic) id <NSLayoutManagerDelegate> delegate;
- (void)setTypesetter:(id)arg1;
- (id)typesetter;
- (void)_setGlyphGenerator:(id)arg1;
- (void)setGlyphGenerator:(id)arg1;
- (id)_glyphGenerator;
- (id)glyphGenerator;
- (void)replaceTextStorage:(id)arg1;
@property(nonatomic) NSTextStorage *textStorage;
- (id)attributedString;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)finalize;
- (id)init;
- (void)_commonInit;
- (void)_lineGlyphRange:(struct _NSRange)arg1 type:(long long)arg2 lineFragmentRect:(struct CGRect)arg3 lineFragmentGlyphRange:(struct _NSRange)arg4 containerOrigin:(struct CGPoint)arg5 isStrikethrough:(_Bool)arg6;
- (void)_drawLineForGlyphRange:(struct _NSRange)arg1 type:(long long)arg2 baselineOffset:(double)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6 isStrikethrough:(_Bool)arg7;
- (void)_drawLineForGlyphRange:(struct _NSRange)arg1 inContext:(struct CGContext *)arg2 from:(double)arg3 to:(double)arg4 at:(double)arg5 thickness:(double)arg6 lineOrigin:(struct CGPoint)arg7 breakForDescenders:(_Bool)arg8;
- (void)_drawLineForGlyphRange:(struct _NSRange)arg1 inContext:(struct CGContext *)arg2 from:(double)arg3 to:(double)arg4 at:(double)arg5 thickness:(double)arg6 lineOrigin:(struct CGPoint)arg7 breakForDescenders:(_Bool)arg8 flipped:(_Bool)arg9;
- (void)drawSpellingUnderlineForGlyphRange:(struct _NSRange)arg1 spellingState:(long long)arg2 inGlyphRange:(struct _NSRange)arg3 lineFragmentRect:(struct CGRect)arg4 lineFragmentGlyphRange:(struct _NSRange)arg5 containerOrigin:(struct CGPoint)arg6;
- (id)circleImageWithSize:(struct CGSize)arg1 bufferWidth:(double)arg2 usingColor:(id)arg3;
- (void)showAttachmentCell:(id)arg1 inRect:(struct CGRect)arg2 characterIndex:(unsigned long long)arg3;
- (void)_showCGGlyphs:(const unsigned short *)arg1 positions:(const struct CGPoint *)arg2 count:(unsigned long long)arg3 font:(id)arg4 matrix:(struct CGAffineTransform)arg5 attributes:(id)arg6 inContext:(struct CGContext *)arg7;
- (struct _NSRange)rangeOfCharacterClusterAtIndex:(unsigned long long)arg1 type:(long long)arg2;
- (void)showAttachment:(id)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterIndex:(unsigned long long)arg4;
- (_Bool)_drawsDebugBaselines;
- (void)_setDrawsDebugBaselines:(_Bool)arg1;
- (_Bool)_drawsUnderlinesLikeWebKit;
- (void)_setDrawsUnderlinesLikeWebKit:(_Bool)arg1;
- (id)_selectionRangesForInsertionPointRange:(struct _NSRange)arg1;
- (long long)getLineFragmentInsertionPointArraysForCharacterAtIndex:(unsigned long long)arg1 inDisplayOrder:(_Bool)arg2 positions:(double **)arg3 characterIndexes:(unsigned long long **)arg4 count:(unsigned long long *)arg5 alternatePositions:(double **)arg6 characterIndexes:(unsigned long long **)arg7 count:(unsigned long long *)arg8;
- (id)_insertionPointHelperForGlyphAtIndex:(unsigned long long)arg1;
- (void)_setAlwaysDrawsActive:(_Bool)arg1;
- (_Bool)_alwaysDrawsActive;
- (void)setIgnoresAntialiasThreshold:(_Bool)arg1;
- (_Bool)ignoresAntialiasThreshold;
- (void)setIgnoresViewTransformations:(_Bool)arg1;
- (_Bool)ignoresViewTransformations;
- (void)setBaselineOffset:(double)arg1 forGlyphAtIndex:(unsigned long long)arg2;
- (double)baselineOffsetForGlyphAtIndex:(unsigned long long)arg1;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3 baselineOffset:(double)arg4;
- (void)setFlipsIfNeeded:(_Bool)arg1;
- (_Bool)flipsIfNeeded;
- (_Bool)_hasSeenRightToLeft;
- (void)_setHasSeenRightToLeft:(_Bool)arg1;
@property _Bool allowsOriginalFontMetricsOverride;
- (void)_clearTemporaryAttributesForCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)_clearTemporaryAttributes;
- (void)_clearCurrentAttachmentSettings;
- (void)_setCurrentAttachmentRect:(struct CGRect)arg1 index:(unsigned long long)arg2;
- (unsigned long long)_currentAttachmentIndex;
- (struct CGRect)_currentAttachmentRect;
- (id)_attachmentSizesRun;
- (void)_promoteGlyphStoreToFormat:(unsigned long long)arg1;
- (void)_insertGlyphs:(unsigned int *)arg1 elasticAttributes:(_Bool *)arg2 count:(unsigned long long)arg3 atGlyphIndex:(unsigned long long)arg4 characterIndex:(unsigned long long)arg5;
- (void)_simpleDeleteGlyphsInRange:(struct _NSRange)arg1;
- (void)_simpleInsertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3 elastic:(_Bool)arg4;
- (void)_setNeedToFlushGlyph:(_Bool)arg1;
- (_Bool)_needToFlushGlyph;
- (unsigned int)_glyphAtIndex:(unsigned long long)arg1 characterIndex:(unsigned long long *)arg2 glyphInscription:(unsigned long long *)arg3 isValidIndex:(_Bool *)arg4;
- (void)_drawGlyphsForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (char *)_packedGlyphs:(unsigned long long)arg1 range:(struct _NSRange)arg2 length:(unsigned long long *)arg3;
- (id)selectedTextAttributesForCharacterAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (void)_drawBackgroundForGlyphRange:(struct _NSRange)arg1 atPoint:(struct CGPoint)arg2;
- (void)_firstTextViewChanged;
- (void)_invalidateLayoutForExtendedCharacterRange:(struct _NSRange)arg1 isSoft:(_Bool)arg2;
- (void)_invalidateLayoutForExtendedCharacterRange:(struct _NSRange)arg1 isSoft:(_Bool)arg2 invalidateUsage:(_Bool)arg3;
- (void)_invalidateGlyphsForExtendedCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (void)_invalidateGlyphsForExtendedCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2 includeBlocks:(_Bool)arg3;
- (unsigned long long)_indexOfFirstGlyphInTextContainer:(id)arg1 okToFillHoles:(_Bool)arg2;
- (struct _NSRange)_glyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2 fast:(_Bool)arg3 okToFillHoles:(_Bool)arg4;
- (struct _NSRange)_firstPassGlyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2 okToFillHoles:(_Bool)arg3;
- (struct _NSRange)_firstPassGlyphRangeForBoundingRect:(struct CGRect)arg1 inTextContainer:(id)arg2 hintGlyphRange:(struct _NSRange)arg3 okToFillHoles:(_Bool)arg4;
- (struct CGRect)_boundingRectForGlyphRange:(struct _NSRange)arg1 inTextContainer:(id)arg2 fast:(_Bool)arg3 fullLineRectsOnly:(_Bool)arg4;
- (struct CGRect *)_rectArrayForRange:(struct _NSRange)arg1 withinSelectionRange:(struct _NSRange)arg2 rangeIsCharRange:(_Bool)arg3 singleRectOnly:(_Bool)arg4 fullLineRectsOnly:(_Bool)arg5 inTextContainer:(id)arg6 rectCount:(unsigned long long *)arg7 rangeWithinContainer:(struct _NSRange *)arg8 glyphsDrawOutsideLines:(_Bool *)arg9;
- (struct CGRect *)_rectArrayForRange:(struct _NSRange)arg1 withinSelectionRange:(struct _NSRange)arg2 rangeIsCharRange:(_Bool)arg3 singleRectOnly:(_Bool)arg4 fullLineRectsOnly:(_Bool)arg5 inTextContainer:(id)arg6 rectCount:(unsigned long long *)arg7 rangeWithinContainer:(struct _NSRange *)arg8 glyphsDrawOutsideLines:(_Bool *)arg9 rectArray:(struct CGRect *)arg10 rectArrayCapacity:(unsigned long long)arg11;
- (void)_growCachedRectArrayToSize:(unsigned long long)arg1;
- (void)_fixSelectionAfterChangeInCharacterRange:(struct _NSRange)arg1 changeInLength:(long long)arg2;
- (id)_selectedRanges;
- (void)_resizeTextViewForTextContainer:(id)arg1;
- (void)_invalidateDisplayIfNeeded;
- (void)_invalidateInsertionPoint;
- (struct _NSStoredContainerUsage *)_validatedStoredUsageForTextContainerAtIndex:(unsigned long long)arg1;
- (void)_recalculateUsageForTextContainerAtIndex:(unsigned long long)arg1;
- (void)_invalidateUsageForTextContainersInRange:(struct _NSRange)arg1;
- (void)_updateUsageForTextContainer:(id)arg1 addingUsedRect:(struct CGRect)arg2;
- (id)_blockDescription;
- (id)_layoutTreeDescription;
- (id)_glyphTreeDescription;
- (id)_layoutHoleDescription;
- (id)_glyphHoleDescription;
- (id)_glyphDescription;
- (id)_glyphDescriptionForGlyphRange:(struct _NSRange)arg1;
- (id)_glyphLocationDescription;
- (id)_lineFragmentDescription;
- (id)_lineFragmentDescription:(_Bool)arg1;
- (id)_lineFragmentDescriptionForGlyphRange:(struct _NSRange)arg1 includeGlyphLocations:(_Bool)arg2;
- (id)_containerDescription;
- (void)_markSelfAsDirtyForBackgroundLayout:(id)arg1;
- (struct _NSRange)_primitiveGlyphRangeForCharacterRange:(struct _NSRange)arg1;
- (struct _NSRange)_primitiveCharacterRangeForGlyphRange:(struct _NSRange)arg1;
- (struct _NSRange)_glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2 okToFillHoles:(_Bool)arg3;
- (unsigned long long)_glyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(_Bool)arg2 okToFillHoles:(_Bool)arg3 considerNulls:(_Bool)arg4;
- (unsigned long long)_glyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(_Bool)arg2 okToFillHoles:(_Bool)arg3;
- (unsigned long long)_smallEncodingGlyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(_Bool)arg2 okToFillHoles:(_Bool)arg3;
- (unsigned long long)_smallEncodingGlyphIndexForCharacterIndex:(unsigned long long)arg1 startOfRange:(_Bool)arg2 okToFillHoles:(_Bool)arg3 considerNulls:(_Bool)arg4;
- (void)_fillLayoutHoleAtIndex:(unsigned long long)arg1 desiredNumberOfLines:(unsigned long long)arg2;
- (void)_fillLayoutHoleForCharacterRange:(struct _NSRange)arg1 desiredNumberOfLines:(unsigned long long)arg2 isSoft:(_Bool)arg3;
- (void)_noteFirstTextViewVisibleCharacterRangeIfAfterIndex:(unsigned long long)arg1;
- (void)_doLayoutWithFullContainerStartingAtGlyphIndex:(unsigned long long)arg1 nextGlyphIndex:(unsigned long long *)arg2;
- (_Bool)_doOptimizedLayoutStartingAtGlyphIndex:(unsigned long long)arg1 forCharacterRange:(struct _NSRange)arg2 inTextContainer:(id)arg3 lineLimit:(unsigned long long)arg4 nextGlyphIndex:(unsigned long long *)arg5;
- (void)_fillGlyphHoleForCharacterRange:(struct _NSRange)arg1 startGlyphIndex:(unsigned long long)arg2 desiredNumberOfCharacters:(unsigned long long)arg3;
- (void)_fillGlyphHoleAtIndex:(unsigned long long)arg1 desiredNumberOfCharacters:(unsigned long long)arg2;
- (_Bool)_canDoLayout;
- (void)_adjustCharacterIndicesForRawGlyphRange:(struct _NSRange)arg1 byDelta:(long long)arg2;
- (struct _NSRange)_extendedCharRangeForInvalidation:(struct _NSRange)arg1 editedCharRange:(struct _NSRange)arg2;
- (void)_setRowArrayCache:(id)arg1;
- (id)_rowArrayCache;
- (struct _NSRange)_blockRowRangeForGlyphRange:(struct _NSRange)arg1;
- (struct _NSRange)_blockRowRangeForGlyphRange:(struct _NSRange)arg1 completeRows:(_Bool *)arg2;
- (struct _NSRange)_blockRowRangeForCharRange:(struct _NSRange)arg1;
- (struct _NSRange)_blockRowRangeForCharRange:(struct _NSRange)arg1 completeRows:(_Bool *)arg2;
- (struct _NSRange)_blockRangeForGlyphRange:(struct _NSRange)arg1;
- (struct _NSRange)_blockRangeForCharRange:(struct _NSRange)arg1;
- (void)_mergeLayoutHoles;
- (void)_mergeGlyphHoles;
- (void)coordinateAccess:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSLayoutManagerTextBlockHelper : NSObject
{
    NSTextBlock *_block;
    struct CGRect _layoutRect;
    struct CGRect _boundsRect;
}

- (void)dealloc;
- (id)initWithTextBlock:(id)arg1 layoutRect:(struct CGRect)arg2 boundsRect:(struct CGRect)arg3;

@end

__attribute__((visibility("hidden")))
@interface NSLayoutManagerTextBlockRowArrayCache : NSObject
{
    struct _NSRange _rowCharRange;
    double _containerWidth;
    NSArray *_rowArray;
    _Bool _collapseBorders;
}

- (void)dealloc;
- (id)initWithRowCharRange:(struct _NSRange)arg1 containerWidth:(double)arg2 rowArray:(id)arg3 collapseBorders:(_Bool)arg4;

@end

__attribute__((visibility("hidden")))
@interface NSLineFragmentRenderingContext : NSObject
{
    void *_runs;
    long long _numRuns;
    unsigned short *_glyphs;
    struct CGSize *_advancements;
    double _leftSideDelta;
    double _lineWidth;
    double _leftControlWidth;
    double _rightControlWidth;
    double _elasticWidth;
    struct CGRect _imageBounds;
    struct {
        unsigned int _isRTL:1;
        unsigned int _vAdvance:1;
        unsigned int _flipped:1;
        unsigned int _usesSimpleTextEffects:1;
        unsigned int _reserved:28;
    } _flags;
    CUICatalog *_catalog;
    CUIStyleEffectConfiguration *_styleEffects;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
@property(retain, nonatomic) CUIStyleEffectConfiguration *cuiStyleEffects; // @synthesize cuiStyleEffects=_styleEffects;
@property(retain, nonatomic) CUICatalog *cuiCatalog; // @synthesize cuiCatalog=_catalog;
- (struct CGRect)imageBounds;
- (_Bool)isRTL;
- (double)elasticWidth;
- (double)lineFragmentWidth;
- (void)getMaximumAscender:(double *)arg1 minimumDescender:(double *)arg2;
- (struct CGSize)sizeWithBehavior:(long long)arg1 usesFontLeading:(_Bool)arg2 baselineDelta:(double *)arg3;
- (void)drawAtPoint:(struct CGPoint)arg1 inContext:(struct CGContext *)arg2;
@property(nonatomic, getter=_usesSimpleTextEffects, setter=_setUsesSimpleTextEffects:) _Bool usesSimpleTextEffects;
- (void)finalize;
- (void)dealloc;
- (id)initWithRuns:(struct __CFArray *)arg1 glyphOrigin:(double)arg2 lineFragmentWidth:(double)arg3 elasticWidth:(double)arg4 usesScreenFonts:(_Bool)arg5 isRTL:(_Bool)arg6;
- (oneway void)release;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;

@end

@interface NSMutableAttributedString (NSMutableAttributedStringKitAdditions)
- (void)convertWritingDirectionToBidiControlCharacters;
- (struct _NSRange)convertWritingDirectionToBidiControlCharactersForParagraphAtIndex:(unsigned long long)arg1;
- (void)convertBidiControlCharactersToWritingDirection;
- (struct _NSRange)convertBidiControlCharactersToWritingDirectionForParagraphAtIndex:(unsigned long long)arg1;
- (_Bool)readFromData:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (_Bool)readFromURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3;
- (_Bool)readFromData:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (_Bool)readFromFileURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (_Bool)readFromURL:(id)arg1 options:(id)arg2 documentAttributes:(id *)arg3 error:(id *)arg4;
- (void)unscriptRange:(struct _NSRange)arg1;
- (void)subscriptRange:(struct _NSRange)arg1;
- (void)superscriptRange:(struct _NSRange)arg1;
- (void)_changeIntAttribute:(id)arg1 by:(long long)arg2 range:(struct _NSRange)arg3;
- (void)setBaseWritingDirection:(long long)arg1 range:(struct _NSRange)arg2;
- (void)setAlignment:(long long)arg1 range:(struct _NSRange)arg2;
- (void)fixGlyphInfoAttributeInRange:(struct _NSRange)arg1;
- (void)_fixGlyphInfo:(id)arg1 inRange:(struct _NSRange)arg2;
- (void)fixAttachmentAttributeInRange:(struct _NSRange)arg1;
- (void)fixParagraphStyleAttributeInRange:(struct _NSRange)arg1;
- (void)fixFontAttributeInRange:(struct _NSRange)arg1;
- (_Bool)_shouldSetOriginalFontAttribute;
- (void)fixAttributesInRange:(struct _NSRange)arg1;
- (void)_setAttributeFixingInProgress:(_Bool)arg1;
- (_Bool)_attributeFixingInProgress;
@end

@interface NSParagraphStyle : NSObject <NSCopying, NSMutableCopying, NSCoding>
{
    double _lineSpacing;
    double _paragraphSpacing;
    double _headIndent;
    double _tailIndent;
    double _firstLineHeadIndent;
    double _minimumLineHeight;
    double _maximumLineHeight;
    NSArray *_tabStops;
    struct {
        unsigned int alignment:4;
        unsigned int lineBreakMode:4;
        unsigned int tabStopsIsMutable:1;
        unsigned int isNaturalDirection:1;
        unsigned int rightToLeftDirection:1;
        unsigned int fixedMultiple:2;
        unsigned int refCount:19;
    } _flags;
    double _defaultTabInterval;
    id _extraData;
}

+ (long long)defaultWritingDirectionForLanguage:(id)arg1;
+ (long long)_defaultWritingDirection;
+ (id)defaultParagraphStyle;
+ (void)initialize;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)_isSuitableForFastStringDrawingWithAlignment:(long long *)arg1 lineBreakMode:(long long *)arg2 tighteningFactorForTruncation:(double *)arg3;
- (long long)headerLevel;
- (float)tighteningFactorForTruncation;
@property(readonly) float hyphenationFactor;
- (id)textLists;
- (id)textBlocks;
@property(readonly, nonatomic) double defaultTabInterval;
@property(readonly) double paragraphSpacingBefore;
@property(readonly) double lineHeightMultiple;
@property(readonly) long long baseWritingDirection;
@property(readonly) long long lineBreakMode;
@property(readonly) double maximumLineHeight;
@property(readonly) double minimumLineHeight;
@property(readonly) double firstLineHeadIndent;
@property(readonly, copy, nonatomic) NSArray *tabStops;
@property(readonly) double tailIndent;
@property(readonly) double headIndent;
@property(readonly) long long alignment;
@property(readonly) double paragraphSpacing;
@property(readonly) double lineSpacing;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (unsigned long long)hash;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)_initWithParagraphStyle:(id)arg1;
- (void)_deallocExtraData;
- (void)_allocExtraData;

@end

@interface NSMutableParagraphStyle : NSParagraphStyle
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setHeaderLevel:(long long)arg1;
- (void)setTighteningFactorForTruncation:(float)arg1;
@property float hyphenationFactor;
@property long long baseWritingDirection;
@property(copy, nonatomic) NSArray *tabStops;
- (void)removeTabStop:(id)arg1;
- (void)addTabStop:(id)arg1;
- (void)_mutateTabStops;
- (void)setTextLists:(id)arg1;
- (void)setTextBlocks:(id)arg1;
@property(nonatomic) double defaultTabInterval;
@property double paragraphSpacingBefore;
@property double lineHeightMultiple;
@property long long lineBreakMode;
@property double maximumLineHeight;
@property double minimumLineHeight;
@property double firstLineHeadIndent;
@property double tailIndent;
@property double headIndent;
@property long long alignment;
@property double paragraphSpacing;
@property double lineSpacing;
- (void)setParagraphStyle:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSParagraphStyleExtraData : NSObject
{
    double _lineHeightMultiple;
    double _paragraphSpacingBefore;
    double _hyphenationFactor;
    double _tighteningFactor;
    long long _headerLevel;
    NSArray *_textBlocks;
    NSArray *_textLists;
}

@end

__attribute__((visibility("hidden")))
@interface NSRTFReader : NSObject
{
    NSMutableAttributedString *_topAttributedString;
    NSMutableAttributedString *_curAttributedString;
    NSMutableArray *_attributesStack;
    NSMutableDictionary *_curAttributes;
    unsigned int _level;
    NSData *_rtfData;
    NSMutableDictionary *_fontTable;
    NSFileWrapper *_document;
    union {
        unsigned char thin[128];
        unsigned short fat[128];
    } _textBuffer;
    unsigned long long _textBufferIndex;
    int _rtfVersion;
    int _cocoaVersion;
    int _cocoaSubVersion;
    int _readOnly;
    int _usesScreenFonts;
    unsigned int _defaultToUniCharEncoding;
    struct _NSAttributeInfo _attributeInfo;
    NSMutableData *_attributeInfoStack;
    struct CGSize _paperSize;
    double _lMargin;
    double _rMargin;
    double _bMargin;
    double _tMargin;
    NSMutableDictionary *_documentInfoDictionary;
    struct CGSize _viewSize;
    int _viewScale;
    int _viewKind;
    NSMapTable *_cachedRTFFontTable;
    double _hyphenationFactor;
    double _defaultTabInterval;
    NSColor *_documentBackgroundColor;
    struct _NSRTFPriv _private;
    _Bool _textBufferContentsIsFat;
    _Bool _explicitCharSetEncountered;
    _Bool _isRTLDocument;
    long long _readLimit;
    long long _thumbnailLimit;
    _Bool _limitReached;
    unsigned char _textFlow;
    NSMutableArray *_layoutOrientationSections;
    unsigned long long _verticalOrientationLocation;
    NSArray *_textBlocks;
    NSMutableArray *_nestedTables;
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    _Bool _currentRowIsLast;
    _Bool _setTableCells;
    unsigned long long _currentBorderEdge;
    _Bool _currentBorderIsTable;
    NSMutableDictionary *_listDefinitions;
    int _currentListNumber;
    int _currentListLevel;
    NSCalendar *_gregorianCalendar;
    NSMutableDictionary *_fontAttributesTable;
}

- (void)finalize;
- (void)dealloc;
- (void)_popState;
- (void)_pushState;
- (void)processString:(id)arg1;
- (void)_addOverride:(long long)arg1 forKey:(long long)arg2;
- (void)_addListDefinition:(id)arg1 forKey:(long long)arg2;
- (id)_listDefinitions;
- (void)_setCurrentListLevel:(long long)arg1;
- (long long)_currentListLevel;
- (void)_setCurrentListNumber:(long long)arg1;
- (long long)_currentListNumber;
- (void)_updateAttributes;
- (id)_documentInfoDictionary;
- (id)attributesAtEndOfGroup;
- (id)attributedString;
- (id)attributedStringToEndOfGroup;
- (id)_mutableParagraphStyle;
- (id)defaultParagraphStyle;
- (id)mutableAttributes;
- (id)mutableAttributedString;
- (void)setMutableAttributedString:(id)arg1;
- (id)documentAttributes;
- (void)_mergeTableCellsVertically;
- (void)_mergeTableCellsHorizontally;
- (void)_endTableRow;
- (void)_lastTableRow;
- (void)_endTableCell;
- (void)_paragraphInTable;
- (void)_endTableCellDefinition;
- (void)_startTableRowDefinition;
- (void)_setTableNestingLevel:(long long)arg1;
- (void)_clearTableCells;
- (void)_setTableCells;
- (void)_popTableState;
- (void)_pushTableState;
- (void)_setCurrentBorderEdge:(unsigned long long)arg1 isTable:(_Bool)arg2;
- (_Bool)_currentTableCellIsPlaceholder;
- (_Bool)_currentBorderIsTable;
- (unsigned long long)_currentBorderEdge;
- (id)_currentTableCell;
- (id)_currentTable;
- (void)_beginTableRow;
- (void)_ensureTableCells;
- (unsigned long long)textFlow;
- (void)setTextFlow:(unsigned long long)arg1;
- (long long)baseWritingDirection;
- (void)setBaseWritingDirection:(long long)arg1;
- (double)defaultTabInterval;
- (void)setDefaultTabInterval:(double)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setHyphenationFactor:(float)arg1;
- (void)setBottomMargin:(double)arg1;
- (void)setTopMargin:(double)arg1;
- (void)setRightMargin:(double)arg1;
- (void)setLeftMargin:(double)arg1;
- (void)setUsesScreenFonts:(long long)arg1;
- (void)setReadOnly:(long long)arg1;
- (double)floatCocoaVersion;
- (void)setCocoaSubVersion:(long long)arg1;
- (void)setCocoaVersion:(long long)arg1;
- (long long)cocoaSubVersion;
- (long long)cocoaVersion;
- (void)setViewScale:(long long)arg1;
- (void)setViewKind:(long long)arg1;
- (struct CGSize)viewSize;
- (void)setViewSize:(struct CGSize)arg1;
- (struct CGSize)paperSize;
- (void)setPaperSize:(struct CGSize)arg1;
- (void)setThumbnailLimit:(long long)arg1;
- (void)setReadLimit:(long long)arg1;
- (id)_RTFDFileWrapper;
- (void)_setRTFDFileWrapper:(id)arg1;
- (id)initWithRTF:(id)arg1;
- (id)initWithRTFDFileWrapper:(id)arg1;
- (id)initWithPath:(id)arg1;
- (id)initWithRTFD:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSRTFReaderTableState : NSObject
{
    NSTextTable *_currentTable;
    NSTextTable *_previousTable;
    NSMutableArray *_currentRowArray;
    NSMutableArray *_previousRowArray;
    int _currentRow;
    int _currentColumn;
    int _currentDefinitionColumn;
    _Bool _currentRowIsLast;
}

- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSRTFWriter : NSObject
{
    NSMutableData *_output;
    NSAttributedString *_attrString;
    unsigned long long _attrStringLength;
    NSFileWrapper *_document;
    NSMutableDictionary *_fontNames;
    NSMutableDictionary *_colors;
    NSMutableArray *_listRanges;
    id _curFont;
    id _curForegroundColor;
    id _curBackgroundColor;
    id _curParagraphStyle;
    id _curKern;
    id _curBaselineOffset;
    id _curSuperscript;
    id _curUnderlineStyle;
    int _curTraits;
    unsigned int _curEncoding;
    CDStruct_cfe5321f _rwFlags;
    double _rightMargin;
    NSDictionary *_docAttrs;
    void *_layoutSections;
}

+ (void)initialize;
+ (id)RTFDataForDate:(id)arg1;
+ (id)RTFDataForString:(id)arg1 range:(struct _NSRange)arg2 encoding:(unsigned int)arg3;
- (void)writeBody;
- (void)writeTextFlow:(unsigned long long)arg1;
- (unsigned long long)textFlowWithAttributes:(id)arg1 range:(struct _NSRange *)arg2;
- (void)writeDate:(id)arg1;
- (_Bool)writeLinkInfo:(id)arg1;
- (void)writeGlyphInfo:(id)arg1;
- (void)writeAttachment:(id)arg1 editableData:(id)arg2 editableTypeIdentifier:(id)arg3;
- (void)writeCharacterAttributes:(id)arg1 previousAttributes:(id)arg2;
- (void)restoreAttributes:(id)arg1;
- (void)writeShadow:(id)arg1;
- (void)writeExpansion:(id)arg1;
- (void)writeObliqueness:(id)arg1;
- (void)writeStrokeWidth:(id)arg1;
- (void)writeCharacterShape:(id)arg1;
- (void)writeLigature:(id)arg1;
- (void)writeBaselineOffset:(id)arg1;
- (void)writeSuperscript:(id)arg1;
- (void)writeStrikethroughStyle:(id)arg1;
- (void)writeUnderlineStyle:(id)arg1 allowStrikethrough:(_Bool)arg2;
- (void)writeKern:(id)arg1;
- (void)writeFont:(id)arg1 forceFontNumber:(_Bool)arg2;
- (id)_plainFontNameForFont:(id)arg1;
- (void)writeParagraphStyle:(id)arg1;
- (_Bool)writeCellTerminator:(id)arg1 atIndex:(unsigned long long)arg2 nestingLevel:(unsigned long long)arg3;
- (void)writeTableHeader:(id)arg1 atIndex:(unsigned long long)arg2 nestingLevel:(unsigned long long)arg3;
- (void)writeColor:(id)arg1 type:(unsigned long long)arg2;
- (void)writeHeader;
- (void)writeInfo;
- (void)writeKeywordsDocumentAttribute;
- (void)writeDateDocumentAttribute:(id)arg1 withRTFKeyword:(const char *)arg2;
- (void)writeStringDocumentAttribute:(id)arg1 withRTFKeyword:(const char *)arg2;
- (void)_writeVersionsAndEncodings;
- (void)writeBackgroundColor;
- (void)writeDefaultTabInterval;
- (void)writeHyphenation;
- (void)writePaperSize;
- (void)writeListTable;
- (void)writeStyleSheetTable;
- (void)writeColorTable;
- (void)writeFontTable;
- (void)collectResources;
- (id)RTF;
- (void)writeRTF;
- (id)documentAttributes;
- (id)documentAttribute:(id)arg1;
- (void)setDocumentAttributes:(id)arg1;
- (void)_setPreserveNaturalAlignment:(_Bool)arg1;
- (void)_setRTFDFileWrapper:(id)arg1;
- (id)_RTFDFileWrapper;
- (id)RTFDFileWrapper;
- (id)RTFD;
- (void)dealloc;
- (id)initWithAttributedString:(id)arg1;
- (int)_mostCompatibleCharset:(id)arg1;
- (void)writeEscapedUTF8String:(id)arg1;
- (void)_writeCharacters:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface NSShadow : NSObject <NSCopying, NSCoding>
{
    unsigned long long _shadowFlags;
    struct CGSize _shadowOffset;
    double _shadowBlurRadius;
    NSColor *_shadowColor;
}

+ (id)defaultShadowColor;
+ (id)shadow;
+ (void)initialize;
@property(nonatomic) double shadowBlurRadius; // @synthesize shadowBlurRadius=_shadowBlurRadius;
@property(nonatomic) struct CGSize shadowOffset; // @synthesize shadowOffset=_shadowOffset;
- (id)description;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(retain, nonatomic) id shadowColor;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithShadow:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSSingleLineTypesetter : NSATSTypesetter
{
    double _lineWidth;
    struct _NSRange _currentBufferRange;
    unsigned short *_glyphs;
    long long *_props;
    unsigned long long *_charIndexes;
    struct {
        unsigned int _usesScreenFonts:1;
        unsigned int _reserved:31;
    } _slFlags;
}

+ (_Bool)_validateAttributes:(id)arg1 measuringOnly:(_Bool)arg2;
+ (void)initialize;
+ (id)singleLineTypesetter;
- (void)setBidiLevels:(const char *)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setAttachmentSize:(struct CGSize)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setLocation:(struct CGPoint)arg1 withAdvancements:(const double *)arg2 forStartOfGlyphRange:(struct _NSRange)arg3;
- (void)setDrawsOutsideLineFragment:(_Bool)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)setNotShownAttribute:(_Bool)arg1 forGlyphRange:(struct _NSRange)arg2;
- (void)deleteGlyphsInRange:(struct _NSRange)arg1;
- (void)insertGlyph:(unsigned int)arg1 atGlyphIndex:(unsigned long long)arg2 characterIndex:(unsigned long long)arg3;
- (void)substituteGlyphsInRange:(struct _NSRange)arg1 withGlyphs:(unsigned int *)arg2;
- (void)setLineFragmentRect:(struct CGRect)arg1 forGlyphRange:(struct _NSRange)arg2 usedRect:(struct CGRect)arg3 baselineOffset:(double)arg4;
- (id)substituteFontForFont:(id)arg1;
- (void)getLineFragmentRect:(struct CGRect *)arg1 usedRect:(struct CGRect *)arg2 remainingRect:(struct CGRect *)arg3 forStartingGlyphAtIndex:(unsigned long long)arg4 proposedRect:(struct CGRect)arg5 lineSpacing:(double)arg6 paragraphSpacingBefore:(double)arg7 paragraphSpacingAfter:(double)arg8;
- (unsigned long long)getGlyphsInRange:(struct _NSRange)arg1 glyphs:(unsigned short *)arg2 properties:(long long *)arg3 characterIndexes:(unsigned long long *)arg4 bidiLevels:(char *)arg5;
- (struct _NSRange)glyphRangeForCharacterRange:(struct _NSRange)arg1 actualCharacterRange:(struct _NSRange *)arg2;
- (struct _NSRange)characterRangeForGlyphRange:(struct _NSRange)arg1 actualGlyphRange:(struct _NSRange *)arg2;
- (id)attributedString;
- (unsigned long long)layoutOptions;
- (void)setIntAttribute:(long long)arg1 value:(long long)arg2 forGlyphAtIndex:(unsigned long long)arg3;
- (void)insertGlyphs:(const unsigned int *)arg1 length:(unsigned long long)arg2 forStartingGlyphAtIndex:(unsigned long long)arg3 characterIndex:(unsigned long long)arg4;
- (void)setGlyphs:(const unsigned short *)arg1 properties:(const long long *)arg2 characterIndexes:(const unsigned long long *)arg3 font:(id)arg4 forGlyphRange:(struct _NSRange)arg5;
- (id)createRenderingContextForCharacterRange:(struct _NSRange)arg1 typesetterBehavior:(long long)arg2 usesScreenFonts:(_Bool)arg3 hasStrongRight:(_Bool)arg4 maximumWidth:(double)arg5;
- (id)init;
- (_Bool)_allowsEllipsisGlyphSubstitution;
- (_Bool)_usesScreenFonts;
- (void)done;

@end

__attribute__((visibility("hidden")))
@interface NSStorage : NSObject
{
    id _storage;
    long long _hintCapacity;
    unsigned long long _reserved[4];
}

+ (void)initialize;
- (void)enumerateElementsUsingBlock:(CDUnknownBlockType)arg1;
- (id)description;
- (void)addElement:(void *)arg1;
- (void)insertElement:(void *)arg1 atIndex:(unsigned long long)arg2;
- (void *)pointerToElement:(unsigned long long)arg1 directlyAccessibleElements:(struct _NSRange *)arg2;
- (void)removeElementsInRange:(struct _NSRange)arg1;
- (void)replaceElementAtIndex:(unsigned long long)arg1 withElement:(void *)arg2;
- (void)removeElementAtIndex:(unsigned long long)arg1;
- (void)insertElements:(void *)arg1 count:(unsigned long long)arg2 atIndex:(unsigned long long)arg3;
- (void *)elementAtIndex:(unsigned long long)arg1;
- (unsigned long long)elementSize;
- (unsigned long long)hintCapacity;
- (void)setHintCapacity:(unsigned long long)arg1;
- (unsigned long long)capacity;
- (unsigned long long)count;
- (void)dealloc;
- (id)init;
- (id)initWithElementSize:(unsigned long long)arg1 capacity:(unsigned long long)arg2;

@end

@interface NSString (NSExtendedStringDrawing)
- (struct CGRect)boundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2 attributes:(id)arg3;
- (void)drawWithRect:(struct CGRect)arg1 options:(long long)arg2 attributes:(id)arg3;
- (struct CGRect)boundingRectWithSize:(struct CGSize)arg1 options:(long long)arg2 attributes:(id)arg3 context:(id)arg4;
- (void)drawWithRect:(struct CGRect)arg1 options:(long long)arg2 attributes:(id)arg3 context:(id)arg4;
@end

@interface NSString (NSStringDrawing)
+ (double)defaultBaselineOffsetForFont:(id)arg1;
+ (double)defaultLineHeightForFont:(id)arg1;
+ (void)setTypesetterBehavior:(long long)arg1;
+ (long long)typesetterBehavior;
+ (float)hyphenationFactor;
+ (void)setHyphenationFactor:(float)arg1;
+ (_Bool)showsControlCharacters;
+ (void)setShowsControlCharacters:(_Bool)arg1;
+ (_Bool)showsInvisibleCharacters;
+ (void)setShowsInvisibleCharacters:(_Bool)arg1;
+ (void)setUsesScreenFonts:(_Bool)arg1;
+ (_Bool)usesScreenFonts;
+ (void)setUsesFontLeading:(_Bool)arg1;
+ (_Bool)usesFontLeading;
- (struct CGSize)sizeWithAttributes:(id)arg1;
- (void)drawInRect:(struct CGRect)arg1 withAttributes:(id)arg2;
- (void)drawAtPoint:(struct CGPoint)arg1 withAttributes:(id)arg2;
@end

@interface NSString (NSStringDrawingExtension)
- (struct CGSize)_sizeWithSize:(struct CGSize)arg1 attributes:(id)arg2;
@end

@interface NSString (UIFontPrivate)
- (id)stringByStrippingLeadingAndTrailingWhitespace;
@end

@interface NSStringDrawingContext : NSObject
{
    double _minimumScaleFactor;
    double _minimumTrackingAdjustment;
    double _actualScaleFactor;
    double _actualTrackingAdjustment;
    struct CGRect _totalBounds;
    NSDictionary *_linkAttributes;
    unsigned long long _numberOfLineFragments;
    unsigned long long _maximumNumberOfLines;
    double _baselineOffset;
    double _scaledBaselineOffset;
    double _scaledLineHeight;
    double _firstBaselineOffset;
    id _layout;
    struct {
        unsigned int _wantsNumberOfLineFragments:1;
        unsigned int _wrapsForTruncationMode:1;
        unsigned int _wantsBaselineOffset:1;
        unsigned int _wantsScaledBaselineOffset:1;
        unsigned int _wantsScaledLineHeight:1;
        unsigned int _drawsDebugBaselines:1;
        unsigned int _cachesLayout:1;
        unsigned int _usesSimpleTextEffects:1;
    } _sdcFlags;
}

@property(retain, nonatomic) id layout; // @synthesize layout=_layout;
@property(nonatomic) double firstBaselineOffset; // @synthesize firstBaselineOffset=_firstBaselineOffset;
@property(nonatomic) double scaledLineHeight; // @synthesize scaledLineHeight=_scaledLineHeight;
@property(nonatomic) double scaledBaselineOffset; // @synthesize scaledBaselineOffset=_scaledBaselineOffset;
@property(nonatomic) double baselineOffset; // @synthesize baselineOffset=_baselineOffset;
@property(nonatomic) unsigned long long maximumNumberOfLines; // @synthesize maximumNumberOfLines=_maximumNumberOfLines;
@property(nonatomic) unsigned long long numberOfLineFragments; // @synthesize numberOfLineFragments=_numberOfLineFragments;
@property(nonatomic) struct CGRect totalBounds; // @synthesize totalBounds=_totalBounds;
@property(nonatomic) double actualTrackingAdjustment; // @synthesize actualTrackingAdjustment=_actualTrackingAdjustment;
@property(nonatomic) double actualScaleFactor; // @synthesize actualScaleFactor=_actualScaleFactor;
@property(nonatomic) double minimumTrackingAdjustment; // @synthesize minimumTrackingAdjustment=_minimumTrackingAdjustment;
@property(nonatomic) double minimumScaleFactor; // @synthesize minimumScaleFactor=_minimumScaleFactor;
@property(nonatomic) _Bool usesSimpleTextEffects;
@property(nonatomic) _Bool cachesLayout;
@property(nonatomic) _Bool drawsDebugBaselines;
@property(nonatomic) _Bool wantsScaledLineHeight;
@property(nonatomic) _Bool wantsScaledBaselineOffset;
@property(nonatomic) _Bool wantsBaselineOffset;
@property(nonatomic) _Bool wrapsForTruncationMode;
@property(nonatomic) _Bool wantsNumberOfLineFragments;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface NSStringDrawingTextStorage : NSTextStorage <NSLayoutManagerDelegate>
{
    NSConcreteNotifyingMutableAttributedString *_contents;
    NSLayoutManager *_layoutManager;
    NSTextContainer *_textContainer;
    double _baselineDelta;
    struct {
        unsigned int _typesetterBehavior:4;
        unsigned int _needToFlushCache:1;
        unsigned int _baselineMode:1;
        unsigned int _forceWordWrapping:1;
        unsigned int _usesSimpleTextEffects:1;
        unsigned int _reserved:24;
    } _sdflags;
    CUICatalog *_catalog;
    CUIStyleEffectConfiguration *_styleEffects;
    double _defaultTighteningFactor;
}

+ (_Bool)_hasCustomSettings;
+ (void)_setHasCustomSettings:(_Bool)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)stringDrawingTextStorage;
+ (void)initialize;
@property(retain, nonatomic) CUIStyleEffectConfiguration *cuiStyleEffects; // @synthesize cuiStyleEffects=_styleEffects;
@property(retain, nonatomic) CUICatalog *cuiCatalog; // @synthesize cuiCatalog=_catalog;
@property double defaultTighteningFactor; // @synthesize defaultTighteningFactor=_defaultTighteningFactor;
- (void)addAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withAttributedString:(id)arg2;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 longestEffectiveRange:(struct _NSRange *)arg3 inRange:(struct _NSRange)arg4;
- (id)attribute:(id)arg1 atIndex:(unsigned long long)arg2 effectiveRange:(struct _NSRange *)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)string;
- (unsigned long long)length;
- (void)processEditing;
- (id)init;
- (_Bool)_shouldSetOriginalFontAttribute;
- (_Bool)_isStringDrawingTextStorage;
- (void)fontSetChanged;
- (id)textContainerForAttributedString:(id)arg1 containerSize:(struct CGSize)arg2 lineFragmentPadding:(double)arg3;
- (id)textContainerForAttributedString:(id)arg1;
- (struct CGPoint)defaultTextContainerOriginForRect:(struct CGRect)arg1;
- (void)drawTextContainer:(id)arg1 withRect:(struct CGRect)arg2 graphicsContext:(struct CGContext *)arg3 baselineMode:(_Bool)arg4 scrollable:(_Bool)arg5 padding:(double)arg6;
- (void)_setForceWordWrapping:(_Bool)arg1;
- (_Bool)_forceWordWrapping;
@property(nonatomic, getter=_usesSimpleTextEffects, setter=_setUsesSimpleTextEffects:) _Bool usesSimpleTextEffects;
- (_Bool)_baselineMode;
- (void)_setBaselineMode:(_Bool)arg1;
- (double)_baselineDelta;
- (void)_setBaselineDelta:(double)arg1;
- (struct CGRect)usedRectForTextContainer:(id)arg1;
- (long long)typesetterBehavior;
- (id)textContainer;
- (id)layoutManager;
- (oneway void)release;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSStringDrawingTextStorageSettings : NSObject
{
    struct {
        float _hyphenationFactor;
        struct {
            unsigned int usesFontLeading:1;
            unsigned int usesScreenFonts:1;
            unsigned int showsInvisibleCharacters:1;
            unsigned int showsControlCharacters:1;
            unsigned int defaultAttachmentScaling:4;
            unsigned int typesetterBehavior:8;
            unsigned int reserved:20;
        } _flags;
    } _settings;
}

+ (id)threadSpecificStringDrawingTextStorageSettings:(_Bool)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSSubstituteWebResource : NSObject
{
    NSData *_data;
    NSURL *_url;
    NSString *_mimeType;
    NSString *_textEncodingName;
    NSString *_frameName;
}

- (id)webResource;
- (id)frameName;
- (id)textEncodingName;
- (id)MIMEType;
- (id)URL;
- (id)data;
- (void)dealloc;
- (id)initWithData:(id)arg1 URL:(id)arg2 MIMEType:(id)arg3 textEncodingName:(id)arg4 frameName:(id)arg5;
- (Class)_webResourceClass;

@end

__attribute__((visibility("hidden")))
@interface NSTempAttributeDictionary : NSAttributeDictionary
{
}

@end

@interface NSTextAlternatives : NSObject
{
    NSString *_primaryString;
    NSArray *_alternativeStrings;
    id _internal;
}

- (id)identifier;
- (id)alternativeAtIndex:(unsigned long long)arg1;
- (id)alternatives;
- (unsigned long long)numberOfAlternatives;
- (id)originalText;
- (void)noteSelectedAlternativeString:(id)arg1;
@property(readonly) NSArray *alternativeStrings;
@property(readonly) NSString *primaryString;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithOriginalText:(id)arg1 alternatives:(id)arg2 identifier:(id)arg3;
- (id)initWithOriginalText:(id)arg1 alternatives:(id)arg2;
- (id)initWithPrimaryString:(id)arg1 alternativeStrings:(id)arg2 identifier:(id)arg3;
- (id)initWithPrimaryString:(id)arg1 alternativeStrings:(id)arg2;

@end

@interface NSTextAttachment : NSObject <NSTextAttachmentContainer, NSCoding>
{
    NSData *_data;
    NSString *_uti;
    NSString *_cacheKey;
    struct CGRect _bounds;
    NSFileWrapper *_fileWrapper;
    UIImage *_image;
    UITextAttachmentView *_wrapperView;
}

+ (id)imageCache;
+ (void)initialize;
@property(retain, nonatomic) NSString *fileType; // @synthesize fileType=_uti;
@property(retain, nonatomic) NSData *contents; // @synthesize contents=_data;
@property(readonly, copy) NSString *description;
- (struct CGRect)attachmentBoundsForTextContainer:(id)arg1 proposedLineFragment:(struct CGRect)arg2 glyphPosition:(struct CGPoint)arg3 characterIndex:(unsigned long long)arg4;
- (id)imageForBounds:(struct CGRect)arg1 textContainer:(id)arg2 characterIndex:(unsigned long long)arg3;
@property(nonatomic) struct CGRect bounds;
- (struct CGRect)drawingBounds;
- (void)setDrawingBounds:(struct CGRect)arg1;
@property(retain, nonatomic) UIImage *image;
- (id)attachmentCell;
@property(retain) UIView *contentView;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(retain, nonatomic) NSFileWrapper *fileWrapper;
- (void)dealloc;
- (id)initWithFileWrapper:(id)arg1;
- (id)initWithData:(id)arg1 ofType:(id)arg2;
- (id)_image;
- (id)_cacheKey;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface NSTextBlock : NSObject <NSCoding, NSCopying>
{
    void *_propVals;
    unsigned long long _propMask;
    unsigned long long _typeMask;
    id _primParamVal;
    id _otherParamVals;
    void *_blockPrimary;
    void *_blockSecondary;
}

+ (void)initialize;
- (id)_attributeDescription;
- (void)drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterRange:(struct _NSRange)arg3 layoutManager:(id)arg4;
- (struct CGRect)boundsRectForContentRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (struct CGRect)rectForLayoutAtPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (void)setBorderColor:(id)arg1;
- (id)borderColorForEdge:(unsigned long long)arg1;
- (void)setBorderColor:(id)arg1 forEdge:(unsigned long long)arg2;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (unsigned long long)verticalAlignment;
- (void)setVerticalAlignment:(unsigned long long)arg1;
- (void)setWidth:(double)arg1 type:(unsigned long long)arg2 forLayer:(long long)arg3;
- (unsigned long long)widthValueTypeForLayer:(long long)arg1 edge:(unsigned long long)arg2;
- (double)widthForLayer:(long long)arg1 edge:(unsigned long long)arg2;
- (void)setWidth:(double)arg1 type:(unsigned long long)arg2 forLayer:(long long)arg3 edge:(unsigned long long)arg4;
- (unsigned long long)contentWidthValueType;
- (double)contentWidth;
- (void)setContentWidth:(double)arg1 type:(unsigned long long)arg2;
- (unsigned long long)valueTypeForDimension:(unsigned long long)arg1;
- (double)valueForDimension:(unsigned long long)arg1;
- (void)setValue:(double)arg1 type:(unsigned long long)arg2 forDimension:(unsigned long long)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_takeValuesFromTextBlock:(id)arg1;
- (unsigned long long)_valueTypeForParameter:(unsigned long long)arg1;
- (double)_valueForParameter:(unsigned long long)arg1;
- (void)_setValue:(double)arg1 type:(unsigned long long)arg2 forParameter:(unsigned long long)arg3;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (void)_destroyFloatStorage;
- (void)_createFloatStorage;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSTextBlockLayoutHelper : NSObject
{
    NSTextTableBlock *_block;
    struct _NSRange _charRange;
    struct _NSRange _glyphRange;
    struct CGRect _layoutRect;
    struct CGRect _boundsRect;
    double _lMargin;
    double _lBorder;
    double _lPadding;
    double _tMargin;
    double _tBorder;
    double _tPadding;
    double _width;
    double _height;
    double _rPadding;
    double _rBorder;
    double _rMargin;
    double _bPadding;
    double _bBorder;
    double _bMargin;
}

@property(readonly) NSTextTableBlock *block;
- (void)dealloc;
- (id)description;
- (id)initWithTextTable:(id)arg1 charIndex:(unsigned long long)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 collapseBorders:(_Bool)arg6;
- (id)initWithTextBlock:(id)arg1 charIndex:(unsigned long long)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 collapseBorders:(_Bool)arg6;
- (id)initWithTextBlock:(id)arg1 charRange:(struct _NSRange)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 collapseBorders:(_Bool)arg6;
- (id)initWithTextBlock:(id)arg1 charRange:(struct _NSRange)arg2 glyphRange:(struct _NSRange)arg3 layoutRect:(struct CGRect)arg4 boundsRect:(struct CGRect)arg5 containerWidth:(double)arg6 allowMargins:(_Bool)arg7 collapseBorders:(_Bool)arg8 allowPadding:(_Bool)arg9;

@end

@interface NSTextContainer : NSObject <NSCoding, NSTextLayoutOrientationProvider>
{
    NSLayoutManager *_layoutManager;
    id _textView;
    struct CGSize _size;
    double _lineFragmentPadding;
    unsigned long long _maximumLines;
    struct __tcFlags {
        unsigned int widthTracksTextView:1;
        unsigned int heightTracksTextView:1;
        unsigned int observingFrameChanges:1;
        unsigned int lineBreakMode:4;
        unsigned int oldAPI:1;
        unsigned int _reserved:8;
    } _tcFlags;
    NSArray *_exclusionPaths;
    struct CGPath *_cachedBoundingPath;
    struct __CFArray *_cachedClippingAttributes;
    struct __CFArray *_cachedBounds;
    double _cacheBoundsMinY;
    double _cacheBoundsMaxY;
    double _minimumWidth;
    long long _layoutOrientation;
    NSDictionary *_attributesForExtraLineFragment;
}

+ (void)initialize;
@property(nonatomic) unsigned long long maximumNumberOfLines; // @synthesize maximumNumberOfLines=_maximumLines;
- (id)description;
@property(nonatomic) long long layoutOrientation;
@property(readonly) _Bool isSimpleRectangularTextContainer;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 remainingRect:(struct CGRect *)arg2;
- (struct CGRect)lineFragmentRectForProposedRect:(struct CGRect)arg1 atIndex:(unsigned long long)arg2 writingDirection:(long long)arg3 remainingRect:(struct CGRect *)arg4;
@property(copy, nonatomic) NSArray *exclusionPaths;
- (void)setAttributesForExtraLineFragment:(id)arg1;
- (id)attributesForExtraLineFragment;
@property(nonatomic) long long lineBreakMode;
@property(nonatomic) double lineFragmentPadding;
@property(nonatomic) struct CGSize size;
- (struct CGSize)containerSize;
- (void)setContainerSize:(struct CGSize)arg1;
@property(nonatomic) _Bool heightTracksTextView;
@property(nonatomic) _Bool widthTracksTextView;
- (void)setTextView:(id)arg1;
- (id)textView;
- (struct CGPoint)textContainerOrigin;
- (void)replaceLayoutManager:(id)arg1;
@property(nonatomic) NSLayoutManager *layoutManager;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithSize:(struct CGSize)arg1;
- (id)initWithContainerSize:(struct CGSize)arg1;
- (void)_commonInit;
- (double)minimumLineFragmentWidth;
- (void)setMinimumLineFragmentWidth:(double)arg1;
- (void)_resizeAccordingToTextView:(id)arg1;
- (void)coordinateAccess:(CDUnknownBlockType)arg1;

@end

__attribute__((visibility("hidden")))
@interface NSTextList : NSObject <NSCoding, NSCopying>
{
    NSString *_markerFormat;
    unsigned long long _listFlags;
    long long _startIndex;
    void *_listSecondary;
}

+ (id)_standardMarkerAttributesForAttributes:(id)arg1;
+ (void)initialize;
- (id)_markerAtIndex:(unsigned long long)arg1 inText:(id)arg2;
- (id)_markerSuffix;
- (id)_unaffixedMarkerTitle;
- (id)_unaffixedMarkerForItemNumber:(long long)arg1;
- (id)_unaffixedMarkerFormat;
- (id)_markerSpecifier;
- (id)_markerPrefix;
- (id)_markerTitle;
- (_Bool)_isOrdered;
- (id)markerForItemNumber:(long long)arg1;
- (id)_markerForMarkerFormat:(id)arg1 itemNumber:(long long)arg2 isNumbered:(_Bool *)arg3 substitutionStart:(unsigned long long *)arg4 end:(unsigned long long *)arg5 specifierStart:(unsigned long long *)arg6 end:(unsigned long long *)arg7;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (long long)startingItemNumber;
- (void)setStartingItemNumber:(long long)arg1;
- (unsigned long long)options;
- (unsigned long long)listOptions;
- (id)markerFormat;
- (void)dealloc;
- (id)initWithMarkerFormat:(id)arg1 options:(unsigned long long)arg2;

@end

@interface NSTextTab : NSObject <NSCopying, NSCoding>
{
    struct {
        unsigned int alignment:4;
        unsigned int refCount:24;
        unsigned int unused:4;
    } _flags;
    double _location;
    id _reserved;
}

+ (id)columnTerminatorsForLocale:(id)arg1;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)tabStopType;
@property(readonly) double location;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)retainCount;
- (oneway void)release;
- (id)retain;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;
- (void)dealloc;
@property(readonly) NSDictionary *options;
@property(readonly) long long alignment;
- (id)initWithTextAlignment:(long long)arg1 location:(double)arg2 options:(id)arg3;
- (id)initWithType:(unsigned long long)arg1 location:(double)arg2;

@end

__attribute__((visibility("hidden")))
@interface NSTextTable : NSTextBlock
{
    unsigned long long _numCols;
    unsigned long long _tableFlags;
    id _lcache;
    void *_tablePrimary;
    void *_tableSecondary;
}

+ (void)initialize;
- (void)drawBackgroundForBlock:(id)arg1 withFrame:(struct CGRect)arg2 inView:(id)arg3 characterRange:(struct _NSRange)arg4 layoutManager:(id)arg5;
- (_Bool)_missingColumnsForRowRange:(struct _NSRange)arg1 blockIndex:(unsigned long long)arg2 text:(id)arg3;
- (struct CGRect)boundsRectForBlock:(id)arg1 contentRect:(struct CGRect)arg2 inRect:(struct CGRect)arg3 textContainer:(id)arg4 characterRange:(struct _NSRange)arg5;
- (struct CGRect)_contentRectForCharRange:(struct _NSRange)arg1 textContainer:(id)arg2;
- (struct CGRect)rectForBlock:(id)arg1 layoutAtPoint:(struct CGPoint)arg2 inRect:(struct CGRect)arg3 textContainer:(id)arg4 characterRange:(struct _NSRange)arg5;
- (id)_descriptionAtIndex:(unsigned long long)arg1 text:(id)arg2;
- (id)_rowArrayForBlock:(id)arg1 atIndex:(unsigned long long)arg2 text:(id)arg3 layoutManager:(id)arg4 containerWidth:(double)arg5 withRepetitions:(_Bool)arg6 collapseBorders:(_Bool)arg7 rowCharRange:(struct _NSRange *)arg8 indexInRow:(unsigned long long *)arg9 startingRow:(long long *)arg10 startingColumn:(long long *)arg11 previousRowBlockHelper:(id *)arg12;
- (void)_setTableFlags:(unsigned long long)arg1;
- (unsigned long long)_tableFlags;
- (void)setLayoutAlgorithm:(unsigned long long)arg1;
- (unsigned long long)layoutAlgorithm;
- (void)setHidesEmptyCells:(_Bool)arg1;
- (_Bool)hidesEmptyCells;
- (void)setCollapsesBorders:(_Bool)arg1;
- (_Bool)collapsesBorders;
- (unsigned long long)numberOfColumns;
- (void)setNumberOfColumns:(unsigned long long)arg1;
- (void)_takeValuesFromTextBlock:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface NSTextTableBlock : NSTextBlock
{
    NSTextTable *_table;
    long long _rowNum;
    long long _colNum;
    long long _rowSpan;
    long long _colSpan;
    void *_tableBlockPrimary;
    void *_tableBlockSecondary;
}

+ (void)initialize;
- (void)drawBackgroundWithFrame:(struct CGRect)arg1 inView:(id)arg2 characterRange:(struct _NSRange)arg3 layoutManager:(id)arg4;
- (struct CGRect)boundsRectForContentRect:(struct CGRect)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (struct CGRect)rectForLayoutAtPoint:(struct CGPoint)arg1 inRect:(struct CGRect)arg2 textContainer:(id)arg3 characterRange:(struct _NSRange)arg4;
- (void)_setColumnSpan:(long long)arg1;
- (void)_setRowSpan:(long long)arg1;
- (long long)columnSpan;
- (long long)startingColumn;
- (long long)rowSpan;
- (long long)startingRow;
- (id)table;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithTable:(id)arg1 startingRow:(long long)arg2 rowSpan:(long long)arg3 startingColumn:(long long)arg4 columnSpan:(long long)arg5;

@end

__attribute__((visibility("hidden")))
@interface UICTFont : UIFont
{
}

- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)_cfTypeID;

@end

@interface UIFontDescriptor : NSObject <NSCopying, NSCoding>
{
    NSMutableDictionary *_attributes;
    id _reserved1;
    id _reserved2;
    id _reserved3;
    id _reserved4;
    id _reserved5;
}

+ (id)fontDescriptorWithName:(id)arg1 matrix:(struct CGAffineTransform)arg2;
+ (id)fontDescriptorWithName:(id)arg1 size:(double)arg2;
+ (id)fontDescriptorWithFontAttributes:(id)arg1;
+ (id)defaultFontDescriptorWithTextStyle:(id)arg1 addingSymbolicTraits:(unsigned int)arg2 options:(unsigned long long)arg3;
+ (id)defaultFontDescriptorWithTextStyle:(id)arg1;
+ (id)preferredFontDescriptorWithTextStyle:(id)arg1 addingSymbolicTraits:(unsigned int)arg2 options:(unsigned long long)arg3;
+ (id)preferredFontDescriptorWithTextStyle:(id)arg1;
+ (id)_createMungledDictionary:(id)arg1;
+ (_Bool)supportsSecureCoding;
- (id)description;
- (id)_visibleName;
- (id)fontDescriptorWithFamily:(id)arg1;
- (id)fontDescriptorWithFace:(id)arg1;
- (id)fontDescriptorWithMatrix:(struct CGAffineTransform)arg1;
- (id)fontDescriptorWithSize:(double)arg1;
- (id)fontDescriptorWithSymbolicTraits:(unsigned int)arg1;
- (id)fontDescriptorByAddingAttributes:(id)arg1;
- (id)matchingFontDescriptorWithMandatoryKeys:(id)arg1;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)arg1;
- (id)objectForKey:(id)arg1;
@property(readonly, nonatomic) unsigned int symbolicTraits;
@property(readonly, nonatomic) struct CGAffineTransform matrix;
@property(readonly, nonatomic) double pointSize;
@property(readonly, nonatomic) NSString *postscriptName;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (Class)classForCoder;
- (id)_attributes;
- (id)fontAttributes;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithFontAttributes:(id)arg1;
- (id)_initWithFontAttributes:(id)arg1 options:(unsigned long long)arg2;

@end

__attribute__((visibility("hidden")))
@interface UICTFontDescriptor : UIFontDescriptor
{
}

+ (id)fontDescriptorWithName:(id)arg1 matrix:(struct CGAffineTransform)arg2;
+ (id)fontDescriptorWithName:(id)arg1 size:(double)arg2;
+ (id)fontDescriptorWithFontAttributes:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)matchingFontDescriptorWithMandatoryKeys:(id)arg1;
- (id)matchingFontDescriptorsWithMandatoryKeys:(id)arg1;
- (id)fontAttributes;
- (id)fontDescriptorByAddingAttributes:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)finalize;
- (unsigned long long)retainCount;
- (_Bool)retainWeakReference;
- (_Bool)allowsWeakReference;
- (oneway void)release;
- (id)retain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)_cfTypeID;

@end

__attribute__((visibility("hidden")))
@interface _NSATSTypesetterGuts : NSObject
{
    NSATSLineFragment *_lineFragment;
    NSATSGlyphStorage *_glyphStorage;
    unsigned long long _lastGlyphIndex;
    unsigned long long _lastContainerIndex;
    CDStruct_9b8416ed *_typesetterAuxiliary;
    CDUnion_09a75e3c *_lineFragmentRectArgs;
    char *_bidiLevels;
    double _defaultTighteningFactor;
    struct {
        unsigned int _isiChatTypesetter:1;
        unsigned int _resToWillSetLineFragmentRect:1;
        unsigned int _isBusy:1;
        unsigned int _baselineRendering:1;
        unsigned int _forceWordWrapping:1;
        unsigned int _reserved:27;
    } _flags;
    struct {
        unsigned int _resolvedWritingDirection:2;
        unsigned int _reserved:30;
    } _paragraphState;
    struct __CTTypesetter *_ctTypesetter;
}

- (void)finalize;
- (void)dealloc;
- (id)initWithTypesetter:(id)arg1;

@end

@interface _NSAttributeRun : NSObject <NSCopying>
{
    struct _NSRange _range;
    NSTextStorage *_textStorage;
    NSMutableArray *_attributesArray;
}

- (struct _NSRange)range;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)restoreAttributesOfTextStorage:(id)arg1;
- (void)dealloc;
- (id)initWithTextStorage:(id)arg1 range:(struct _NSRange)arg2;

@end

@interface _NSAttributes : NSObject
{
    NSDictionary *_attributes;
    struct _NSRange _range;
}

- (void)setAttributesInTextStorage:(id)arg1;
- (void)dealloc;
- (id)initWithAttributes:(id)arg1 range:(struct _NSRange)arg2;

@end

__attribute__((visibility("hidden")))
@interface _NSCachedAttributedString : NSMutableAttributedString
{
    id _contents;
    NSAttributeDictionary *_baseAttributes;
    long long _length;
    unsigned long long _hashValue;
    struct {
        id _field1;
        long long _field2;
    } *_runs;
    long long _numRuns;
    long long _allocedRunsSize;
    long long _numHits;
}

+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)arg1;
- (id)copyCachedInstance;
- (void)cache;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)_baselineMode;
- (_Bool)_isStringDrawingTextStorage;
- (void)setAttributes:(id)arg1 range:(struct _NSRange)arg2;
- (id)attributesAtIndex:(unsigned long long)arg1 longestEffectiveRange:(struct _NSRange *)arg2 inRange:(struct _NSRange)arg3;
- (id)attributesAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2;
- (id)string;
- (unsigned long long)length;
- (void)finalize;
- (void)dealloc;
- (id)init;
- (id)initWithString:(id)arg1;
- (id)initWithString:(id)arg1 attributes:(id)arg2;
- (id)initWithAttributedString:(id)arg1;
- (oneway void)release;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;

@end

__attribute__((visibility("hidden")))
@interface _NSTextStorageSideData : NSObject
{
    id _delegate;
    struct _NSRange _lazyFixRange;
}

@end

@interface _UICache : NSObject
{
    NSObject<OS_dispatch_queue> *_cacheQueue;
    NSMutableDictionary *_cache;
    NSObject<OS_dispatch_source> *_memoryWarningsSource;
    _Bool _clearsCacheOnLowMemoryWarnings;
    _Bool _clearsCacheOnApplicationBackground;
    id _noteObserver;
}

@property(nonatomic) _Bool clearsCacheOnApplicationBackground;
@property(nonatomic) _Bool clearsCacheOnLowMemoryWarnings;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UIFontCacheKey : NSObject <NSCopying>
{
    int _traits;
    NSString *_fontName;
    double _pointSize;
    NSString *_textStyle;
    NSString *_contentSizeCategory;
    UIFontDescriptor *_fontDescriptor;
}

+ (id)fontCacheKeyWithFontDescriptor:(id)arg1 pointSize:(double)arg2;
+ (id)fontCacheKeyWithTextStyle:(id)arg1 contentSizeCategory:(id)arg2;
+ (id)systemFontCacheKeyWithTraits:(int)arg1 pointSize:(double)arg2;
+ (id)fontCacheKeyWithFontName:(id)arg1 traits:(int)arg2 pointSize:(double)arg3;
@property(copy, nonatomic) UIFontDescriptor *fontDescriptor; // @synthesize fontDescriptor=_fontDescriptor;
@property(copy, nonatomic) NSString *contentSizeCategory; // @synthesize contentSizeCategory=_contentSizeCategory;
@property(copy, nonatomic) NSString *textStyle; // @synthesize textStyle=_textStyle;
@property(nonatomic) double pointSize; // @synthesize pointSize=_pointSize;
@property(nonatomic) int traits; // @synthesize traits=_traits;
@property(copy, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface _UITextTiledLayer : CALayer
{
    NSMutableArray *_reusableTiles;
    struct CGRect _gridBounds;
    struct {
        unsigned int disableTiling:1;
        unsigned int ditchAllTiles:1;
        unsigned int suspendLayout:4;
    } _tcTiledLayerFlags;
    struct CGSize _tileSize;
}

@property(nonatomic) struct CGSize tileSize; // @synthesize tileSize=_tileSize;
- (void)renderInContext:(struct CGContext *)arg1;
- (void)resumeTiling;
- (void)suspendTiling;
- (void)setBounds:(struct CGRect)arg1;
- (void)layoutSublayers;
- (void)_hideAndShowTiles:(struct CGRect)arg1 visibleBounds:(struct CGRect)arg2;
- (void)_cullAndAddLayers:(struct CGRect)arg1;
- (void)_buildTilesForRect:(struct CGRect)arg1;
- (void)_validateTiles;
- (void)setNeedsDisplayInRect:(struct CGRect)arg1;
@property(nonatomic) _Bool usesTiledLayers;
- (void)drawDirtyLayer:(id)arg1 intoContext:(struct CGContext *)arg2;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _UITileLayer : CALayer
{
}

- (id)actionForKey:(id)arg1;
- (void)drawInContext:(struct CGContext *)arg1;

@end

__attribute__((visibility("hidden")))
@interface __NSATSStringSegment : NSString
{
    struct __CFString *_originalString;
    long long _originalStringLength;
    CDStruct_627e0f85 _range;
    const unsigned short *_characters;
    unsigned short _buffer[128];
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
- (const unsigned short *)_fastCharacterContents;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;
- (unsigned long long)length;
- (void)dealloc;
- (id)initWithOriginalString:(id)arg1 range:(struct _NSRange)arg2;
- (void)_setOriginalString:(id)arg1 range:(struct _NSRange)arg2;
- (oneway void)release;
- (_Bool)_isDeallocating;
- (_Bool)_tryRetain;

@end

