//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long state;
    id *itemsPtr;
    unsigned long long *mutationsPtr;
    unsigned long long extra[5];
} CDStruct_58648341;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MIME.framework/MIME
// UUID: C969F586-B3B0-3786-9C4B-DBB9766834F0
//
//                           Arch: x86_64
//                Current version: 20.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2243.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol MFCollectingDataConsumer <MFDataConsumer>
- (NSData *)data;
@end

@protocol MFDataConsumer <NSObject>
- (void)done;
- (long long)appendData:(NSData *)arg1;
@end

@protocol MFFuture <NSObject>
@property(readonly, getter=isCancelled) _Bool cancelled;
@property(readonly, getter=isFinished) _Bool finished;
- (void)addFailureBlock:(void (^)(NSError *))arg1;
- (void)addSuccessBlock:(void (^)(id))arg1;
- (_Bool)cancel;
- (id)resultBeforeDate:(NSDate *)arg1 error:(id *)arg2;
- (id)resultWithTimeout:(double)arg1 error:(id *)arg2;
- (id)result:(id *)arg1;
@end

@protocol MFGuaranteedCollectingDataConsumer <MFCollectingDataConsumer>
- (NSData *)data;
@end

@protocol MFLockObject
- (id)initWithName:(NSString *)arg1 andDelegate:(id)arg2;
- (_Bool)isLockedByMe;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface MFBaseFilterDataConsumer : NSObject <MFDataConsumer>
{
    NSMutableArray *_consumers;
    _Bool _serialAppend;
}

+ (id)filterWithConsumer:(id)arg1;
+ (id)filterWithConsumers:(id)arg1;
@property(readonly, nonatomic) NSArray *consumers; // @synthesize consumers=_consumers;
@property(nonatomic, getter=isSerialAppend) _Bool serialAppend; // @synthesize serialAppend=_serialAppend;
- (void)dealloc;
- (void)done;
- (long long)appendData:(id)arg1;
- (id)initWithConsumer:(id)arg1;
- (id)initWithConsumers:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MFBase64Decoder : MFBaseFilterDataConsumer
{
    NSMutableData *_leftovers;
    unsigned int _decodedBits;
    unsigned long long _validBytes;
    unsigned long long _equalCount;
    const char *_table;
    _Bool _bound;
}

+ (_Bool)isValidBase64:(id)arg1;
@property(nonatomic) _Bool isBound; // @synthesize isBound=_bound;
@property(readonly, nonatomic) unsigned long long unconverted; // @synthesize unconverted=_validBytes;
@property(nonatomic) _Bool convertCommas;
- (void)dealloc;
- (void)done;
- (long long)appendData:(id)arg1;
- (unsigned long long)_decodeBytes:(const char *)arg1 end:(const char *)arg2 into:(char *)arg3 length:(unsigned long long)arg4 startingAt:(unsigned long long)arg5 outEncodedOffset:(unsigned long long *)arg6;
- (id)initWithConsumers:(id)arg1;

@end

@interface MFBase64Encoder : MFBaseFilterDataConsumer
{
    const char *_table;
    unsigned long long _left;
    unsigned char _leftovers[3];
    unsigned long long _line;
    unsigned long long _lineBreak;
    BOOL _padChar;
}

@property(nonatomic) BOOL padChar; // @synthesize padChar=_padChar;
@property(nonatomic) unsigned long long lineBreak; // @synthesize lineBreak=_lineBreak;
- (void)setStandardLineBreak;
@property(nonatomic) _Bool allowSlash;
- (void)done;
- (long long)appendData:(id)arg1;
- (id)initWithConsumers:(id)arg1;

@end

@interface MFBufferedDataConsumer : NSObject <MFGuaranteedCollectingDataConsumer>
{
    NSMutableData *_data;
    int _fd;
    NSString *_path;
}

- (void)done;
- (long long)appendData:(id)arg1;
- (id)data;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MFByteSet : NSObject <NSCopying, NSMutableCopying>
{
    char mySet[32];
}

+ (id)suspiciousCodepage1252ByteSet;
+ (id)nonASCIIByteSet;
+ (id)ASCIIByteSet;
+ (id)asciiWhitespaceSet;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initWithSet:(const char *)arg1;
- (id)initWithBytes:(const void *)arg1 length:(unsigned int)arg2;
- (id)initWithCString:(const char *)arg1;
- (id)initWithRange:(struct _NSRange)arg1;
- (id)invertedSet;
- (_Bool)byteIsMember:(BOOL)arg1;

@end

@interface MFConditionLock : NSConditionLock <MFLockObject>
{
    NSString *_name;
    id _delegate;
}

+ (void)initialize;
- (void)dealloc;
- (id)description;
- (void)unlockWithCondition:(long long)arg1;
- (void)unlock;
- (_Bool)lockWhenCondition:(long long)arg1 beforeDate:(id)arg2;
- (_Bool)lockBeforeDate:(id)arg1;
- (_Bool)isLockedByMe;
- (id)initWithName:(id)arg1 condition:(long long)arg2 andDelegate:(id)arg3;
- (id)initWithName:(id)arg1 andDelegate:(id)arg2;
- (id)init;

@end

@interface MFNullDataConsumer : NSObject <MFDataConsumer>
{
}

- (void)done;
@property(readonly, copy) NSString *description;
- (long long)appendData:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MFCountingDataConsumer : MFNullDataConsumer
{
    unsigned long long _count;
}

@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
- (long long)appendData:(id)arg1;

@end

@interface MFData : NSData <NSCopying, NSMutableCopying>
{
    NSData *_internal;
    NSString *_path;
    NSData *_parent;
    _Bool _subdata;
}

+ (void)setDefaultMappingThresholdInBytes:(unsigned long long)arg1;
- (_Bool)mf_immutable;
- (_Bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;
- (id)data;
- (id)_initWithRange:(struct _NSRange)arg1 from:(id)arg2 retainingParent:(_Bool)arg3;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (const void *)bytes;
- (unsigned long long)length;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithImmutableData:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)_initWithData:(id)arg1 maybeMutable:(_Bool)arg2;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)_initWithFile:(id)arg1;
- (id)init;

@end

@interface MFMessageStore : NSObject <NSCopying>
{
    NSMutableSet *_uniqueStrings;
    MFMessageStoreObjectCaches *objectCaches;
    MFMessageStoreIntKeyCaches *intKeyCaches;
}

+ (void)setDefaultMessageHeadersClass:(Class)arg1;
+ (Class)classForMimePart;
+ (Class)headersClass;
@property(retain, nonatomic) MFMessageStoreIntKeyCaches *intKeyCaches; // @synthesize intKeyCaches;
@property(retain, nonatomic) MFMessageStoreObjectCaches *objectCaches; // @synthesize objectCaches;
- (id)additionalHeadersForForwardOfMessage:(id)arg1;
- (id)additionalHeadersForReplyOfMessage:(id)arg1;
- (void)setMessageClass:(Class)arg1;
- (_Bool)wantsLineEndingConversionForMIMEPart:(id)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(_Bool)arg2 isEncrypted:(_Bool)arg3 forMessage:(id)arg4;
- (_Bool)hasCompleteDataForMimePart:(id)arg1;
- (id)bodyDataForMessage:(id)arg1 isComplete:(_Bool *)arg2 isPartial:(_Bool *)arg3 downloadIfNecessary:(_Bool)arg4;
- (id)_fetchBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 downloadIfNecessary:(_Bool)arg3 partial:(_Bool *)arg4;
- (void)_flushAllCaches;
- (id)_cachedBodyDataContainerForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedHeadersForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedBodyForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedBodyDataForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedHeaderDataForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)bestAlternativeForPart:(id)arg1;
- (id)defaultAlternativeForPart:(id)arg1;
- (id)decryptedTopLevelPartForPart:(id)arg1;
- (_Bool)dataForMimePart:(id)arg1 inRange:(struct _NSRange)arg2 withConsumer:(id)arg3 downloadIfNecessary:(_Bool)arg4;
- (_Bool)dataForMimePart:(id)arg1 inRange:(struct _NSRange)arg2 isComplete:(_Bool *)arg3 withConsumer:(id)arg4 downloadIfNecessary:(_Bool)arg5 didDownload:(_Bool *)arg6;
- (id)dataForMimePart:(id)arg1 inRange:(struct _NSRange)arg2 isComplete:(_Bool *)arg3 downloadIfNecessary:(_Bool)arg4 didDownload:(_Bool *)arg5;
- (id)uniquedString:(id)arg1;
- (id)fullBodyDataForMessage:(id)arg1 andHeaderDataIfReadilyAvailable:(id *)arg2 isComplete:(_Bool *)arg3 downloadIfNecessary:(_Bool)arg4 didDownload:(_Bool *)arg5;
- (id)bodyForMessage:(id)arg1 fetchIfNotAvailable:(_Bool)arg2 updateFlags:(_Bool)arg3;
- (id)_bodyForMessage:(id)arg1 fetchIfNotAvailable:(_Bool)arg2 updateFlags:(_Bool)arg3;
- (_Bool)bodyFetchRequiresNetworkActivity;
@property(copy, nonatomic) NSString *storagePath;
- (id)_setOrGetBody:(id)arg1 forMessage:(id)arg2 updateFlags:(_Bool)arg3;
- (id)headersForMessage:(id)arg1 fetchIfNotAvailable:(_Bool)arg2;
- (id)headerDataForMessage:(id)arg1 downloadIfNecessary:(_Bool)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_flushAllMessageData;
- (void)dealloc;
- (id)init;

@end

@interface MFDataMessageStore : MFMessageStore
{
    NSData *_data;
    Class _messageClass;
    NSString *_storagePath;
}

- (id)mailboxUid;
- (id)storeData:(id)arg1 forMimePart:(id)arg2 isComplete:(_Bool)arg3;
- (id)_cachedBodyDataForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedHeadersForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)_cachedBodyForMessage:(id)arg1 valueIfNotPresent:(id)arg2;
- (id)bodyDataForMessage:(id)arg1 isComplete:(_Bool *)arg2 isPartial:(_Bool *)arg3 downloadIfNecessary:(_Bool)arg4;
- (_Bool)bodyFetchRequiresNetworkActivity;
- (id)headerDataForMessage:(id)arg1 downloadIfNecessary:(_Bool)arg2;
- (id)account;
- (id)message;
- (void)setMessageClass:(Class)arg1;
- (void)writeUpdatedMessageDataToDisk;
- (void)setStoragePath:(id)arg1;
- (id)storagePath;
- (id)storePath;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface MFEmailSet : NSMutableSet
{
    struct __CFSet *_set;
}

+ (id)set;
- (void)setSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)minusSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)removeAllObjects;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_58648341 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumerator;
- (id)allObjects;
- (id)allCommentedAddresses;
- (id)_generateAllObjectsFromSelector:(SEL)arg1;
- (_Bool)isEqualToSet:(id)arg1;
- (_Bool)isSubsetOfSet:(id)arg1;
- (_Bool)intersectsSet:(id)arg1;
- (id)member:(id)arg1;
- (unsigned long long)count;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (void)_setupSetWithCapacity:(unsigned long long)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)init;

@end

@interface MFFuture : NSObject <MFFuture>
{
    NSConditionLock *_stateLock;
    id _result;
    NSError *_error;
    NSMutableArray *_completionBlocks;
}

+ (id)future;
- (void)_flushCompletionBlocks;
- (void)_addCompletionBlock:(CDUnknownBlockType)arg1;
- (void)addFailureBlock:(CDUnknownBlockType)arg1;
- (void)addSuccessBlock:(CDUnknownBlockType)arg1;
- (_Bool)_nts_isFinished;
- (_Bool)finishWithError:(id)arg1;
- (_Bool)finishWithResult:(id)arg1;
- (_Bool)finishWithResult:(id)arg1 error:(id)arg2;
- (void)didCancel;
- (_Bool)cancel;
@property(readonly, getter=isCancelled) _Bool cancelled;
@property(readonly, getter=isFinished) _Bool finished;
- (id)resultBeforeDate:(id)arg1 error:(id *)arg2;
- (id)resultWithTimeout:(double)arg1 error:(id *)arg2;
- (id)result:(id *)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MFHTMLParser : NSObject
{
}

+ (id)plainTextFromHTMLSnippet:(id)arg1;
+ (id)plainTextFromHTML:(id)arg1;
+ (id)plainTextFromHTML:(id)arg1 limit:(unsigned long long)arg2;
+ (id)plainTextFromHTML:(id)arg1 limit:(unsigned long long)arg2 preserveNewlines:(_Bool)arg3;

@end

@interface MFLineEndingConverterFilter : MFBaseFilterDataConsumer
{
    _Bool _lastCR;
}

- (void)done;
- (long long)appendData:(id)arg1;

@end

@interface MFLock : NSLock <MFLockObject>
{
    NSString *_name;
    id _delegate;
}

+ (void)initialize;
- (void)dealloc;
- (id)description;
- (void)unlock;
- (_Bool)lockBeforeDate:(id)arg1;
- (_Bool)tryLock;
- (void)lock;
- (_Bool)isLockedByMe;
- (id)initWithName:(id)arg1 andDelegate:(id)arg2;
- (id)init;

@end

@interface MFMessage : NSObject <NSCopying>
{
    MFMessageStore *_store;
    unsigned int _preferredEncoding;
    NSString *_senderAddressComment;
    unsigned int _dateSentInterval;
    unsigned int _dateReceivedInterval;
    unsigned long long _generationNumber;
    NSString *_subject;
    NSArray *_to;
    NSArray *_cc;
    NSArray *_bcc;
    NSArray *_sender;
    NSString *_contentType;
    long long _messageIDHeaderHash;
    long long _conversationID;
    NSString *_summary;
    NSString *_externalID;
    MFMimePart *_parentPart;
    NSURL *_messageURL;
    NSString *_cachedMessageIDHeader;
    unsigned int _calculatedAttachmentInfo:1;
    unsigned short _numberOfAttachments;
}

+ (void)setMessageClassForStore:(id)arg1;
+ (id)messageWithRFC822Data:(id)arg1 withParentPart:(id)arg2;
+ (id)messageWithRFC822Data:(id)arg1;
+ (Class)dataMessageStoreToUse;
@property(retain, nonatomic) MFMimePart *parentPart; // @synthesize parentPart=_parentPart;
- (id)additionalHeadersForForward;
- (id)additionalHeadersForReply;
- (_Bool)isLibraryMessage;
- (_Bool)canBeDeleted;
- (id)bestAlternativeInPart:(id)arg1;
- (id)defaultAlternativeInPart:(id)arg1;
- (long long)generationCompare:(id)arg1;
- (unsigned long long)generationNumber;
- (void)setGenerationNumber:(unsigned long long)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1;
- (void)setNumberOfAttachments:(unsigned int)arg1 isSigned:(_Bool)arg2 isEncrypted:(_Bool)arg3;
- (void)calculateAttachmentInfoFromBody:(id)arg1;
- (void)_calculateAttachmentInfoFromBody:(id)arg1;
- (id)dataPathForMimePart:(id)arg1;
- (_Bool)fetchDataForMimePart:(id)arg1 inRange:(struct _NSRange)arg2 withConsumer:(id)arg3 isComplete:(_Bool *)arg4 downloadIfNecessary:(_Bool)arg5;
- (id)dataForMimePart:(id)arg1 inRange:(struct _NSRange)arg2 isComplete:(_Bool *)arg3 downloadIfNecessary:(_Bool)arg4 didDownload:(_Bool *)arg5;
- (id)dataForMimePart:(id)arg1 inRange:(struct _NSRange)arg2 isComplete:(_Bool *)arg3;
- (id)dataForMimePart:(id)arg1;
- (id)headerDataDownloadIfNecessary:(_Bool)arg1;
- (id)headerData;
- (id)bodyDataIsComplete:(_Bool *)arg1 isPartial:(_Bool *)arg2 downloadIfNecessary:(_Bool)arg3;
- (id)bodyDataIsComplete:(_Bool *)arg1 isPartial:(_Bool *)arg2;
- (id)bodyDataIsComplete:(_Bool *)arg1;
- (id)bodyData;
- (id)persistentID;
- (id)attachmentStorageLocation;
- (id)path;
- (unsigned int)uid;
- (id)remoteID;
- (void)setMessageInfoFromMessage:(id)arg1;
- (void)setSubject:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceived:(double)arg6 dateSent:(double)arg7 messageIDHash:(long long)arg8 conversationIDHash:(long long)arg9 summary:(id)arg10 withOptions:(unsigned int)arg11;
- (void)setMessageInfo:(id)arg1 to:(id)arg2 cc:(id)arg3 bcc:(id)arg4 sender:(id)arg5 dateReceivedTimeIntervalSince1970:(double)arg6 dateSentTimeIntervalSince1970:(double)arg7 messageIDHash:(long long)arg8 conversationID:(long long)arg9 summary:(id)arg10;
- (id)uniqueArray:(id)arg1 withStore:(id)arg2;
- (id)summary;
- (void)setExternalID:(id)arg1;
- (id)externalID;
- (void)setConversationID:(long long)arg1;
- (void)setMessageIDHash:(long long)arg1;
- (long long)conversationID;
- (void)setBcc:(id)arg1;
- (id)bccIfCached;
- (id)bcc;
- (void)setCc:(id)arg1;
- (id)ccIfCached;
- (id)cc;
- (void)setTo:(id)arg1;
- (id)toIfCached;
- (id)to;
- (id)senderAddressComment;
- (void)setSender:(id)arg1;
- (id)firstSender;
- (id)sendersIfCached;
- (id)senders;
- (void)setContentType:(id)arg1;
- (id)contentType;
- (void)setDateSentTimeIntervalSince1970:(double)arg1;
- (double)dateSentAsTimeIntervalSince1970;
- (_Bool)needsDateReceived;
- (double)dateReceivedAsTimeIntervalSince1970;
- (void)setDateReceivedTimeIntervalSince1970:(double)arg1;
- (id)dateSent;
- (id)dateReceived;
- (void)setSubject:(id)arg1;
- (id)subjectIfCached;
- (id)subject;
- (void)loadCachedHeaderValuesFromHeaders:(id)arg1;
- (void)_setDateSentFromHeaders:(id)arg1;
- (void)_setDateReceivedFromHeaders:(id)arg1;
- (id)_copyDateFromDateHeaderInHeaders:(id)arg1;
- (id)_copyDateFromReceivedHeadersInHeaders:(id)arg1;
- (_Bool)_doesDateAppearToBeSane:(id)arg1;
- (void)setPreferredEncoding:(unsigned int)arg1;
- (unsigned int)preferredEncoding;
- (_Bool)calculatedNumberOfAttachments;
- (unsigned short)numberOfAttachments;
- (_Bool)isMessageContentsLocallyAvailable;
- (long long)_messageIDHeaderHashIvar;
- (id)messageIDHeaderInFortyBytesOrLess;
- (void)setMessageIDHeader:(id)arg1;
- (id)messageIDHeader;
- (long long)messageIDHash;
- (id)messageURL;
- (void)setMessageURL:(id)arg1;
- (id)messageID;
- (id)preferredEmailAddressToReplyWith;
- (unsigned long long)messageSize;
- (void)dealloc;
- (id)dataConsumerForMimePart:(id)arg1;
- (void)setMessageData:(id)arg1 isPartial:(_Bool)arg2;
- (id)messageData;
- (id)messageDataIsComplete:(_Bool *)arg1 downloadIfNecessary:(_Bool)arg2;
- (_Bool)messageData:(id *)arg1 messageSize:(unsigned long long *)arg2 isComplete:(_Bool *)arg3 downloadIfNecessary:(_Bool)arg4;
- (id)messageBodyIfAvailableUpdatingFlags:(_Bool)arg1;
- (id)messageBodyUpdatingFlags:(_Bool)arg1;
- (id)messageBodyIfAvailable;
- (id)messageBody;
- (id)headersIfAvailable;
- (id)headers;
- (void)setMessageStore:(id)arg1;
- (id)messageStore;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface MFMessageBody : NSObject
{
    MFMessage *_message;
}

- (void)dealloc;
- (id)textHtmlPart;
- (id)attachmentURLs;
- (id)attachments;
- (unsigned int)numberOfAttachmentsSigned:(_Bool *)arg1 encrypted:(_Bool *)arg2;
- (id)message;
- (void)setMessage:(id)arg1;
- (_Bool)isRich;
- (_Bool)isHTML;
- (id)htmlContent;
- (id)contentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 asHTML:(_Bool)arg3 isComplete:(_Bool *)arg4;
- (id)htmlContentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2;
- (id)contentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 asHTML:(_Bool)arg3;
- (id)rawData;

@end

@interface MFMessageDataContainer : NSObject
{
    NSData *_data;
    _Bool _partial;
    _Bool _incomplete;
}

- (void)dealloc;
- (id)data;
- (id)initWithData:(id)arg1;
- (id)initWithData:(id)arg1 partial:(_Bool)arg2 incomplete:(_Bool)arg3;

@end

@interface MFMessageFileWrapper : NSObject
{
    NSString *_path;
    NSString *_filename;
    NSString *_preferredFilename;
    NSData *_data;
    NSMutableDictionary *_attributes;
    NSString *_linkDestination;
    NSString *_url;
    int _type;
}

- (id)description;
- (void)dealloc;
- (id)fileAttributes;
- (void)setFileAttributes:(id)arg1;
- (id)regularFileContents;
- (id)symbolicLinkDestination;
- (id)fileWrappers;
- (_Bool)isDirectory;
- (_Bool)isRegularFile;
- (_Bool)isSymbolicLink;
- (id)filename;
- (void)setFilename:(id)arg1;
- (id)preferredFilename;
- (void)setPreferredFilename:(id)arg1;
- (id)initSymbolicLinkWithDestination:(id)arg1;
- (id)initRegularFileWithContents:(id)arg1;
- (void)setURL:(id)arg1;
- (id)URL;
- (_Bool)isPlaceholder;
- (void)setPath:(id)arg1;
- (id)path;
- (id)initWithPath:(id)arg1;
- (_Bool)isUnzippableFile;
- (_Bool)isPDFFile;
- (_Bool)isImageFile;
- (void)_isImage:(_Bool *)arg1 orPDFFile:(_Bool *)arg2;
- (id)fileProtection;
- (void)setFileProtection:(id)arg1;
- (id)icsRepresentation;
- (void)setICSRepresentation:(id)arg1;
- (id)meetingStorePersistentID;
- (void)setMeetingStorePersistentID:(id)arg1;
- (id)eventUniqueID;
- (void)setEventUniqueID:(id)arg1;
- (id)messageID;
- (void)setMessageID:(id)arg1;
- (id)contentID;
- (void)setContentID:(id)arg1;
- (id)inferredMimeType;
- (id)mimeType;
- (void)setMimeType:(id)arg1;
- (unsigned short)finderFlags;
- (void)setFinderFlags:(unsigned short)arg1;
- (unsigned int)creator;
- (void)setCreator:(unsigned int)arg1;
- (unsigned int)type;
- (void)setType:(unsigned int)arg1;

@end

@interface MFMessageHeaders : NSObject <NSCopying>
{
    NSData *_data;
    unsigned int _preferredEncoding;
}

+ (id)uniqueHeaderKeyStringForString:(id)arg1;
+ (id)encodedDataForAddressList:(id)arg1 splittingAtLength:(unsigned long long)arg2 firstLineBuffer:(unsigned long long)arg3;
+ (id)addressListFromEncodedString:(id)arg1;
+ (id)copyAddressListFromEncodedData:(id)arg1 encoding:(unsigned int)arg2;
+ (_Bool)shouldDecodeHeaderForKey:(id)arg1;
+ (_Bool)isStructuredHeaderKey:(id)arg1;
+ (id)basicHeaders;
- (id)description;
- (void)appendHeaderData:(id)arg1 andRecipients:(id)arg2;
- (id)encodedHeaders;
- (_Bool)messageIsFromEntourage;
- (id)_decodeHeaderKeysFromData:(id)arg1;
- (id)copyFirstStringValueForKey:(id)arg1;
- (id)copyFirstNonDecodedHeaderForKey:(id)arg1;
- (id)copyFirstHeaderForKey:(id)arg1;
- (id)firstHeaderForKey:(id)arg1;
- (id)references;
- (id)copyAddressListForReplyTo;
- (id)copyAddressListForResentFrom;
- (id)copyAddressListForBcc;
- (id)copyAddressListForCc;
- (id)copyAddressListForTo;
- (id)firstSenderAddress;
- (id)copyAddressListForSender;
- (id)_copyAddressListForKey:(id)arg1;
- (id)headersForKey:(id)arg1;
- (id)copyHeadersForKey:(id)arg1;
- (_Bool)hasHeaderForKey:(id)arg1;
- (id)_headerValueForKey:(id)arg1;
- (id)_copyHeaderValueForKey:(id)arg1;
- (id)_headerValueForKey:(id)arg1 offset:(unsigned long long *)arg2;
- (id)_copyHeaderValueForKey:(id)arg1 offset:(unsigned long long *)arg2 decoded:(_Bool)arg3;
- (id)copyDecodedStringFromHeaderData:(id)arg1 withRange:(struct _NSRange)arg2;
- (unsigned int)_contentTypeEncoding;
- (id)_capitalizedKeyForKey:(id)arg1;
- (void)_setCapitalizedKey:(id)arg1 forKey:(id)arg2;
- (id)allHeaderKeys;
- (_Bool)_isStructuredHeaderKey:(id)arg1;
- (void)setPreferredEncoding:(unsigned int)arg1;
- (unsigned int)preferredEncoding;
- (id)headerData;
- (id)mutableCopy;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithHeaderData:(id)arg1 encoding:(unsigned int)arg2;
- (id)init;

@end

@interface MFMessageStoreIntKeyCaches : NSObject
{
    NSMapTable *headerDataCache;
    NSMapTable *headerCache;
    NSMapTable *bodyDataCache;
    NSMapTable *bodyCache;
}

@property(retain, nonatomic) NSMapTable *bodyCache; // @synthesize bodyCache;
@property(retain, nonatomic) NSMapTable *bodyDataCache; // @synthesize bodyDataCache;
@property(retain, nonatomic) NSMapTable *headerCache; // @synthesize headerCache;
@property(retain, nonatomic) NSMapTable *headerDataCache; // @synthesize headerDataCache;
- (void)dealloc;
- (void)flush;
- (void)setCache:(id)arg1 forType:(unsigned long long)arg2;
- (id)copyCacheForType:(unsigned long long)arg1;

@end

@interface MFMessageStoreObjectCaches : NSObject
{
    NSMutableArray *headerDataCache;
    NSMutableArray *headerCache;
    NSMutableArray *bodyDataCache;
    NSMutableArray *bodyCache;
}

@property(retain, nonatomic) NSMutableArray *bodyCache; // @synthesize bodyCache;
@property(retain, nonatomic) NSMutableArray *bodyDataCache; // @synthesize bodyDataCache;
@property(retain, nonatomic) NSMutableArray *headerCache; // @synthesize headerCache;
@property(retain, nonatomic) NSMutableArray *headerDataCache; // @synthesize headerDataCache;
- (void)dealloc;
- (void)flush;
- (void)setCache:(id)arg1 forType:(unsigned long long)arg2;
- (id)copyCacheForType:(unsigned long long)arg1;

@end

@interface MFMessageTextAttachment : NSObject
{
    NSMutableDictionary *_cache;
}

+ (unsigned long long)precedenceLevel;
- (id)persistentUniqueIdentifier;
- (id)fileWrapperForcingDownload:(_Bool)arg1;
- (void)inlineDisplayData:(id *)arg1 mimeType:(id *)arg2;
- (_Bool)isPlaceholder;
- (void)download;
- (_Bool)needsRedownload;
- (_Bool)hasBeenDownloaded;
- (unsigned int)approximateSize;
@property(retain, nonatomic) MFMessageFileWrapper *fileWrapper;
- (void)setCachedValue:(id)arg1 forKey:(id)arg2;
- (id)cachedValueForKey:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithWrapper:(id)arg1;
- (id)init;
- (void)setMimePart:(id)arg1;
- (id)mimePart;
- (id)textEncodingNameForData:(id)arg1 mimeType:(id)arg2;
- (id)textEncodingGuess;
- (_Bool)shouldDownloadAttachmentOnDisplay;

@end

@interface MFMimeBody : MFMessageBody
{
    MFMimePart *_topLevelPart;
    unsigned int _preferredAlternative:16;
    unsigned int _numAlternatives:16;
}

+ (id)copyNewMimeBoundary;
+ (id)versionString;
- (id)textHtmlPart;
- (id)preferredBodyPart;
- (long long)preferredAlternative;
- (void)setPreferredAlternative:(long long)arg1;
- (long long)numberOfAlternatives;
- (unsigned long long)totalTextSize;
- (id)contentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 asHTML:(_Bool)arg3 isComplete:(_Bool *)arg4;
- (_Bool)isRich;
- (_Bool)isHTML;
- (id)attachmentURLs;
- (id)attachments;
- (unsigned int)numberOfAttachmentsSigned:(_Bool *)arg1 encrypted:(_Bool *)arg2;
- (id)firstPartPassingTest:(CDUnknownBlockType)arg1;
- (id)partWithNumber:(id)arg1;
- (id)mimeSubtype;
- (id)mimeType;
- (void)setTopLevelPart:(id)arg1;
- (id)topLevelPart;
- (void)dealloc;
- (id)init;

@end

@interface MFMimeCharset : NSObject
{
    unsigned int _encoding;
    NSString *_primaryLanguage;
    NSString *_charsetName;
    unsigned int _coversLargeUnicodeSubset:1;
    unsigned int _useBase64InHeaders:1;
    unsigned int _canBeUsedForOutgoingMessages:1;
}

+ (id)preferredMimeCharset;
+ (id)charsetForEncoding:(unsigned int)arg1;
+ (id)allMimeCharsets;
+ (id)allMimeCharsets:(_Bool)arg1;
- (id)description;
- (id)primaryLanguage;
- (id)displayName;
- (_Bool)useBase64InHeaders;
- (_Bool)coversLargeUnicodeSubset;
- (_Bool)canBeUsedForOutgoingMessages;
- (id)charsetName;
- (unsigned int)encoding;
- (void)dealloc;
- (void)_setPrimaryLanguage:(id)arg1;
- (id)initWithEncoding:(unsigned int)arg1;

@end

@interface MFMimePart : NSObject
{
    NSString *_type;
    NSString *_subtype;
    NSMutableDictionary *_bodyParameters;
    NSString *_contentTransferEncoding;
    NSMutableDictionary *_otherIvars;
    struct _NSRange _range;
    MFWeakReferenceHolder *_parent;
    MFWeakReferenceHolder *_body;
    MFMimePart *_nextPart;
    NSURL *_partURL;
    NSURL *_parentPartURL;
    MFPartialNetworkDataConsumer *_partialDataConsumer;
    NSData *_fullData;
    MFWeakReferenceHolder *_decodedData;
}

+ (_Bool)isRecognizedClassForContent:(id)arg1;
+ (Class)attachmentClass;
+ (_Bool)parseContentTypeHeader:(id)arg1 type:(id *)arg2 subtype:(id *)arg3;
+ (_Bool)parseContentTypeHeader:(id)arg1 type:(id *)arg2 subtype:(id *)arg3 info:(id *)arg4;
+ (void)initialize;
- (void)setIsGenerated:(_Bool)arg1;
- (_Bool)isGenerated;
- (id)chosenAlternativePart;
- (id)partURL;
- (id)attachmentURLs;
- (id)attachments;
- (void)getNumberOfAttachments:(unsigned int *)arg1 isSigned:(_Bool *)arg2 isEncrypted:(_Bool *)arg3;
- (unsigned int)numberOfAttachments;
- (id)contentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3 asHTML:(_Bool)arg4;
- (id)contentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 asHTML:(_Bool)arg3;
- (id)contentToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3 asHTML:(_Bool)arg4 isComplete:(_Bool *)arg5;
- (_Bool)_shouldContinueDecodingProcess;
- (id)bodyDataForcingDownload:(_Bool)arg1;
- (id)bodyDataToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3;
- (id)copyBodyDataToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3;
- (id)copyBodyDataToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2;
- (id)copyBodyDataToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3 isComplete:(_Bool *)arg4;
- (void)_ensureBodyDataToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3 isComplete:(_Bool *)arg4 decoded:(id *)arg5;
- (_Bool)_hasCompleteBodyDataToOffset:(unsigned long long)arg1;
- (id)storeData:(id)arg1 inMessage:(id)arg2 isComplete:(_Bool)arg3;
- (id)fileWrapper;
- (id)fileWrapperForcingDownload:(_Bool)arg1;
- (void)download;
- (void)configureFileWrapper:(id)arg1;
- (id)fileWrapperForDecodedObject:(id)arg1 withFileData:(id *)arg2;
- (void)clearCachedDescryptedMessageBody;
- (id)decryptedMessageBodyIsEncrypted:(_Bool *)arg1 isSigned:(_Bool *)arg2;
- (id)textHtmlPart;
- (id)signedData;
- (id)alternativeAtIndex:(long long)arg1;
- (long long)numberOfAlternatives;
- (id)startPart;
- (unsigned long long)totalTextSize;
- (void)_setDecryptedMessageBody:(id)arg1 isEncrypted:(_Bool)arg2 isSigned:(_Bool)arg3;
- (void)_setRFC822DecodedMessageBody:(id)arg1;
- (id)rfc822DecodedMessageBody;
- (_Bool)usesKnownSignatureProtocol;
- (_Bool)isHTML;
- (_Bool)isRich;
- (_Bool)isAttachment;
- (_Bool)shouldConsiderInlineOverridingExchangeServer;
- (id)_partThatIsAttachment;
- (_Bool)isReadableText;
- (unsigned int)approximateRawSize;
- (unsigned int)textEncoding;
- (id)attachmentFilename;
- (id)description;
- (void)setMimeBody:(id)arg1;
- (id)mimeBody;
- (id)decodedDataForData:(id)arg1;
- (void)setRange:(struct _NSRange)arg1;
- (struct _NSRange)range;
- (void)addSubpart:(id)arg1;
- (void)setSubparts:(id)arg1;
- (id)subpartAtIndex:(long long)arg1;
- (id)subparts;
- (id)nextSiblingPart;
- (id)firstChildPart;
- (id)parentPart;
- (void)setLanguages:(id)arg1;
- (id)languages;
- (void)setContentLocation:(id)arg1;
- (id)contentLocation;
- (void)setContentID:(id)arg1;
- (id)contentID;
- (void)setContentDescription:(id)arg1;
- (id)contentDescription;
- (id)dispositionParameterKeys;
- (void)setDispositionParameter:(id)arg1 forKey:(id)arg2;
- (id)dispositionParameterForKey:(id)arg1;
- (void)setDisposition:(id)arg1;
- (id)disposition;
- (void)setContentTransferEncoding:(id)arg1;
- (id)contentTransferEncoding;
- (id)preservedHeaderValueForKey:(id)arg1;
- (id)bodyParameterKeys;
- (void)setBodyParameter:(id)arg1 forKey:(id)arg2;
- (id)bodyParameterForKey:(id)arg1;
- (void)setSubtype:(id)arg1;
- (id)subtype;
- (void)setType:(id)arg1;
- (id)type;
- (id)init;
- (void)dealloc;
- (_Bool)parseMimeBodyDownloadIfNecessary:(_Bool)arg1;
- (_Bool)parseMimeBody;
- (id)partNumber;
- (_Bool)parseIMAPPropertyList:(id)arg1;
- (void)decodeIfNecessary;
- (id)bodyData;
- (id)bodyDataToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2;
- (id)contentsForTextSystem;
- (id)contentsForTextSystemForcingDownload:(_Bool)arg1;
- (id)contentsForTextSystemToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2;
- (id)contentsForTextSystemToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3;
- (id)contentsForTextSystemToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3 asHTML:(_Bool)arg4;
- (_Bool)hasContents;
- (id)contentsForTextSystemToOffset:(unsigned long long)arg1 resultOffset:(unsigned long long *)arg2 downloadIfNecessary:(_Bool)arg3 asHTML:(_Bool)arg4 isComplete:(_Bool *)arg5;
- (void)_contents:(id *)arg1 toOffset:(unsigned long long)arg2 resultOffset:(unsigned long long *)arg3 downloadIfNecessary:(_Bool)arg4 asHTML:(_Bool)arg5 isComplete:(_Bool *)arg6;
- (id)decodeText;
- (id)_fullMimeTypeEvenInsideAppleDouble;
- (id)decodeApplicationOctet_stream;
- (id)decodeApplicationZip;
- (id)decodeMultipart;
- (id)decodeMultipartAlternative;
- (id)decodeMultipartRelated;

@end

@interface MFMimeTextAttachment : MFMessageTextAttachment
{
}

- (id)persistentUniqueIdentifier;
- (unsigned int)approximateSize;
- (_Bool)hasBeenDownloaded;
- (void)download;
- (id)_displayedMimePart;
- (id)initWithMimePart:(id)arg1;

@end

@interface MFMutableByteSet : MFByteSet
{
}

- (void)invert;
- (void)removeBytesInRange:(struct _NSRange)arg1;
- (void)addBytesInRange:(struct _NSRange)arg1;

@end

@interface MFMutableData : NSMutableData <NSCopying, NSMutableCopying>
{
    void *_bytes;
    unsigned long long _length;
    unsigned long long _mappedLength;
    unsigned long long _capacity;
    unsigned long long _threshold;
    char *_path;
    int _fd;
    unsigned long long _flushFrom;
    _Bool _flush;
    _Bool _immutable;
    _Bool _vm;
}

- (_Bool)mf_immutable;
- (void)_mapMutableData:(_Bool)arg1;
- (void)_flushToDisk:(unsigned long long)arg1 capacity:(unsigned long long)arg2;
- (_Bool)writeToURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)writeToFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (_Bool)writeToURL:(id)arg1 atomically:(_Bool)arg2;
- (_Bool)writeToFile:(id)arg1 atomically:(_Bool)arg2;
- (void)mf_makeImmutable;
- (void)setMappingThreshold:(unsigned int)arg1;
- (void)setLength:(unsigned long long)arg1;
- (id)subdataWithRange:(struct _NSRange)arg1;
- (void)appendData:(id)arg1;
- (void)appendBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (void *)mutableBytes;
- (const void *)bytes;
- (unsigned long long)length;
- (void)dealloc;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLength:(unsigned long long)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithContentsOfFile:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithContentsOfMappedFile:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1;
- (id)initWithContentsOfURL:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 freeWhenDone:(_Bool)arg3;
- (id)initWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2;
- (id)_initWithFd:(int)arg1 path:(id)arg2 mutable:(_Bool)arg3;
- (id)initWithBytes:(const void *)arg1 length:(unsigned long long)arg2;
- (id)init;

@end

@interface MFMutableFilterDataConsumer : MFBaseFilterDataConsumer <MFGuaranteedCollectingDataConsumer>
{
    id <MFGuaranteedCollectingDataConsumer> _mainConsumer;
    MFLock *_consumerLock;
    _Bool _isDone;
}

- (void)done;
- (id)data;
- (long long)appendData:(id)arg1;
- (void)addDataConsumer:(id)arg1;
- (void)dealloc;
- (id)initWithMainConsumer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MFMutableMessageHeaders : MFMessageHeaders
{
    NSMutableDictionary *_headersAdded;
    NSMutableArray *_headersRemoved;
}

- (id)description;
- (void)stripInternalHeaders;
- (void)setReferences:(id)arg1;
- (void)setAddressListForBcc:(id)arg1;
- (void)setAddressListForCc:(id)arg1;
- (void)setAddressListForTo:(id)arg1;
- (void)setAddressListForSender:(id)arg1;
- (void)setAddressList:(id)arg1 forKey:(id)arg2;
- (id)encodedHeaders;
- (id)_copyHeaderValueForKey:(id)arg1 offset:(unsigned long long *)arg2 decoded:(_Bool)arg3;
- (id)_copyHeaderValueForKey:(id)arg1;
- (void)_appendAddedHeaderKey:(id)arg1 value:(id)arg2 toData:(id)arg3;
- (void)_appendHeaderKey:(id)arg1 value:(id)arg2 toData:(id)arg3;
- (void)mergeHeaders:(id)arg1;
- (void)setHeader:(id)arg1 forKey:(id)arg2;
- (void)removeHeaderForKey:(id)arg1;
- (id)firstHeaderForKey:(id)arg1;
- (id)_headerValueForKey:(id)arg1;
- (_Bool)hasHeaderForKey:(id)arg1;
- (id)allHeaderKeys;
- (void)dealloc;
- (id)mutableCopy;

@end

@interface MFPartialNetworkDataConsumer : NSObject <MFDataConsumer>
{
    id <MFGuaranteedCollectingDataConsumer> _rawDataConsumer;
    NSData *_strippedData;
    unsigned long long _length;
    unsigned int _seenNetworkLineEndings:1;
}

- (void)purge;
- (id)copyDataWithUnixLineEndings;
- (id)data;
- (unsigned long long)length;
- (void)done;
- (long long)appendData:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MFPlaceholderFileWrapper : MFMessageFileWrapper
{
}

- (_Bool)isPlaceholder;

@end

@interface MFPriorityDesignator : NSObject
{
    int _priority;
}

+ (id)currentDesignator;
- (void)setPriority:(int)arg1;
- (int)priority;

@end

@interface MFProgressFilterDataConsumer : MFBaseFilterDataConsumer
{
    unsigned long long _expectedSize;
    unsigned long long _currentBytes;
    CDUnknownBlockType _progressBlock;
}

@property(readonly) unsigned long long expectedSize; // @synthesize expectedSize=_expectedSize;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
- (long long)appendData:(id)arg1;
- (void)dealloc;
- (id)initWithConsumers:(id)arg1 expectedSize:(unsigned long long)arg2;
- (id)initWithConsumer:(id)arg1 expectedSize:(unsigned long long)arg2;

@end

@interface MFQuotedPrintableDecoder : MFBaseFilterDataConsumer
{
    unsigned char _lastEncoded;
    unsigned long long _required;
    _Bool _forTextPart;
    _Bool _badlyEncoded;
}

@property(nonatomic) _Bool forTextPart; // @synthesize forTextPart=_forTextPart;
- (void)done;
- (long long)appendData:(id)arg1;

@end

@interface MFQuotedPrintableEncoder : MFBaseFilterDataConsumer
{
    unsigned long long _line;
    unsigned long long _matchedFrom;
    unsigned char _lastHorizontalWhitespace;
    _Bool _forTextPart;
    _Bool _lastWasNewLine;
    _Bool _forHeader;
}

+ (unsigned long long)requiredSizeToEncodeHeaderBytes:(const char *)arg1 length:(unsigned long long)arg2;
@property(nonatomic) _Bool forHeader; // @synthesize forHeader=_forHeader;
@property(nonatomic) _Bool forTextPart; // @synthesize forTextPart=_forTextPart;
- (void)done;
- (long long)appendData:(id)arg1;

@end

@interface MFRangedDataFilter : MFBaseFilterDataConsumer
{
    struct _NSRange _range;
    unsigned long long _consumedLength;
}

+ (id)rangedFilterWithConsumer:(id)arg1 range:(struct _NSRange)arg2;
+ (id)rangedFilterWithConsumers:(id)arg1 range:(struct _NSRange)arg2;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
- (long long)appendData:(id)arg1;

@end

@interface MFRecursiveLock : NSRecursiveLock <MFLockObject>
{
    NSString *_name;
    id _delegate;
}

+ (void)initialize;
- (void)dealloc;
- (id)description;
- (void)unlock;
- (_Bool)lockBeforeDate:(id)arg1;
- (_Bool)tryLock;
- (void)lock;
- (_Bool)isLockedByMe;
- (id)initWithName:(id)arg1 andDelegate:(id)arg2;
- (id)init;

@end

@interface MFUUDecoder : MFBaseFilterDataConsumer
{
    unsigned long long _begin;
    unsigned long long _end;
    unsigned long long _length;
    unsigned long long _readBytes;
    unsigned char _encoded[4];
    _Bool _beginComplete;
    _Bool _dataComplete;
    _Bool _validLength;
    _Bool _lineComplete;
    _Bool _passthrough;
}

- (void)done;
- (long long)appendData:(id)arg1;

@end

@interface MFWeakDictionary : NSMutableDictionary
{
    unsigned long long _gen;
    NSLock *_lock;
    NSMutableDictionary *_dictionary;
}

- (id)_copyDictionary;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateKeysAndObjectsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_58648341 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)allValues;
- (id)allKeys;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithCapacity:(unsigned long long)arg1;

@end

@interface MFWeakReferenceHolder : NSObject
{
    id <NSObject> _reference;
}

+ (id)weakReferenceWithObject:(id)arg1;
- (id)reference;
- (id)retainedReference;
- (void)dealloc;
- (id)_initWithObject:(id)arg1;
- (id)init;

@end

@interface MFWeakSet : NSMutableSet
{
    NSLock *_lock;
    unsigned long long _gen;
    struct __CFDictionary *_objects;
}

+ (id)setWithCapacity:(unsigned long long)arg1;
+ (id)setWithArray:(id)arg1;
+ (id)setWithSet:(id)arg1;
+ (id)setWithObjects:(id)arg1;
+ (id)setWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
+ (id)setWithObject:(id)arg1;
+ (id)set;
- (void)setSet:(id)arg1;
- (void)unionSet:(id)arg1;
- (void)removeAllObjects;
- (void)minusSet:(id)arg1;
- (void)intersectSet:(id)arg1;
- (void)addObjectsFromArray:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithCapacity:(unsigned long long)arg1;
- (id)initWithArray:(id)arg1;
- (id)initWithSet:(id)arg1 copyItems:(_Bool)arg2;
- (id)initWithSet:(id)arg1;
- (id)initWithObjects:(id)arg1;
- (id)initWithObjects:(const id *)arg1 count:(unsigned long long)arg2;
- (id)objectsWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)objectsPassingTest:(CDUnknownBlockType)arg1;
- (void)enumerateObjectsWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)setByAddingObjectsFromArray:(id)arg1;
- (id)setByAddingObjectsFromSet:(id)arg1;
- (id)setByAddingObject:(id)arg1;
- (void)makeObjectsPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (void)makeObjectsPerformSelector:(SEL)arg1;
- (_Bool)isSubsetOfSet:(id)arg1;
- (_Bool)isEqualToSet:(id)arg1;
- (_Bool)intersectsSet:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)descriptionWithLocale:(id)arg1;
- (id)description;
- (_Bool)containsObject:(id)arg1;
- (id)anyObject;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)allObjects;
- (id)_copyAllItems;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_58648341 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)objectEnumerator;
- (id)member:(id)arg1;
- (unsigned long long)count;

@end

@interface NSArray (DerivedArray)
- (id)mf_objectsPassingTest:(CDUnknownBlockType)arg1;
- (id)mf_indicesOfStringsWithPrefix:(id)arg1;
@end

@interface NSArray (Functional)
- (id)mf_reduce:(CDUnknownBlockType)arg1;
- (id)mf_map:(CDUnknownBlockType)arg1;
- (id)mf_uniquifyWithComparator:(CDUnknownBlockType)arg1;
- (id)mf_flatten;
- (id)mf_firstObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)mf_filter:(CDUnknownBlockType)arg1;
- (_Bool)mf_any:(CDUnknownBlockType)arg1;
- (_Bool)mf_all:(CDUnknownBlockType)arg1;
@end

@interface NSArray (MessagesFromMixedStoresConvenience)
- (id)mf_dictionaryWithMessagesSortedByStore;
@end

@interface NSArray (NSEmailAddressArray)
- (id)mf_uncommentedAddressList;
@end

@interface NSArray (SortedArrayExtensions)
- (unsigned long long)mf_indexWhereObjectWouldBeInserted:(id)arg1 usingSortFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (unsigned long long)mf_indexWhereObjectWouldBeInserted:(id)arg1 usingComparator:(CDUnknownBlockType)arg2;
- (id)mf_objectEquivalentTo:(id)arg1 usingSortFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (id)mf_objectEquivalentTo:(id)arg1 usingComparator:(CDUnknownBlockType)arg2;
- (unsigned long long)mf_indexOfObject:(id)arg1 usingSortFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (unsigned long long)mf_indexOfObject:(id)arg1 usingComparator:(CDUnknownBlockType)arg2;
@end

@interface NSData (DigestUtilities)
- (id)mf_MD5Digest;
@end

@interface NSData (MimeDataEncoding)
- (id)mf_encodeBase64HeaderData;
- (id)mf_encodeModifiedBase64;
- (id)mf_encodeBase64;
- (id)mf_encodeBase64WithoutLineBreaks;
- (id)mf_decodeModifiedBase64;
- (id)mf_decodeBase64InRange:(struct _NSRange *)arg1;
- (id)mf_decodeBase64;
- (id)mf_decodeUuencoded;
- (id)mf_decodeQuotedPrintableForText:(_Bool)arg1;
@end

@interface NSData (NSDataExtensions)
- (_Bool)mf_immutable;
- (id)mf_subdataWithRange:(struct _NSRange)arg1;
@end

@interface NSData (NSDataUtils)
- (id)mf_copyHexString;
- (id)mf_dataByConvertingUnixNewlinesToNetwork;
- (id)mf_locationsOfUnixNewlinesNeedingConversion;
- (struct _NSRange)mf_rangeOfCString:(const char *)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (struct _NSRange)mf_rangeOfCString:(const char *)arg1 options:(unsigned long long)arg2;
- (struct _NSRange)mf_rangeOfCString:(const char *)arg1;
- (struct _NSRange)mf_rangeOfByteFromSet:(id)arg1;
- (struct _NSRange)mf_rangeOfByteFromSet:(id)arg1 range:(struct _NSRange)arg2;
- (struct _NSRange)mf_rangeOfData:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (id)mf_subdataFromIndex:(unsigned long long)arg1;
- (id)mf_subdataToIndex:(unsigned long long)arg1;
- (struct _NSRange)mf_rangeOfRFC822HeaderData;
@end

@interface NSDate (MFDateUtils)
+ (id)mf_copyDateInCommonFormatsWithString:(id)arg1;
@end

@interface NSDate (MFDateUtils_Private)
+ (id)mf_copyLenientDateInCommonFormatsWithString:(id)arg1;
@end

@interface NSError (MIME)
+ (id)mf_timeoutError;
- (_Bool)mf_isTimeoutError;
- (_Bool)mf_isCancelledError;
@end

@interface NSFileManager (NSFileManagerAdditions)
- (_Bool)mf_setValue:(id)arg1 forExtendedAttribute:(id)arg2 ofItemAtPath:(id)arg3 error:(id *)arg4;
- (_Bool)mf_setValue:(id)arg1 forAttribute:(id)arg2 ofItemAtPath:(id)arg3 error:(id *)arg4;
- (_Bool)mf_protectFileAtPath:(id)arg1 withClass:(int)arg2 error:(id *)arg3;
- (void)mf_deleteFilesInSortedArray:(id)arg1 matchingPrefix:(id)arg2 fromDirectory:(id)arg3;
- (id)mf_pathsAtDirectory:(id)arg1 beginningWithString:(id)arg2;
- (id)mf_fileModificationDateAtPath:(id)arg1 traverseLink:(_Bool)arg2;
- (_Bool)mf_canWriteToDirectoryAtPath:(id)arg1;
- (_Bool)mf_makeCompletePath:(id)arg1 mode:(int)arg2;
- (id)mf_makeUniqueFileInDirectory:(id)arg1;
@end

@interface NSLock (MessageAdditions)
- (void)mf_waitForLock;
@end

@interface NSMutableArray (Convenience)
- (void)mf_moveObjectAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (void)mf_addObject:(id)arg1 orPlaceholder:(id)arg2;
- (_Bool)mf_addObjectIfAbsentAccordingToEquals:(id)arg1;
- (_Bool)mf_addObjectIfAbsent:(id)arg1;
@end

@interface NSMutableArray (SortedArrayExtensions)
- (unsigned long long)mf_removeObject:(id)arg1 usingSortFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;
- (unsigned long long)mf_insertObject:(id)arg1 usingSortFunction:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 allowDuplicates:(_Bool)arg4;
- (unsigned long long)mf_removeObject:(id)arg1 usingComparator:(CDUnknownBlockType)arg2;
- (unsigned long long)mf_insertObject:(id)arg1 usingComparator:(CDUnknownBlockType)arg2 allowDuplicates:(_Bool)arg3;
@end

@interface NSMutableData (NSDataUtils)
- (void)mf_makeImmutable;
- (void)mf_convertNetworkLineEndingsToUnix;
- (void)mf_convertNetworkLineEndingsToUnixInRange:(struct _NSRange)arg1;
- (void)mf_appendCString:(const char *)arg1;
@end

@interface NSMutableData (RFC2231Support)
- (void)mf_appendRFC2231CompliantValue:(id)arg1 forKey:(id)arg2;
@end

@interface NSMutableDictionary (RFC2231Support)
- (void)mf_fixupRFC2231Values;
@end

@interface NSMutableSet (MFMessageAdditions)
- (id)mf_uniquedObject:(id)arg1;
@end

@interface NSObject (LockingAdditions)
+ (void)mf_clearLocks;
- (id)mf_exclusiveLocks;
- (id)mf_lockOrdering;
- (id)mf_strictLockOrdering;
- (_Bool)_mf_ntsIsLocked;
- (void)mf_unlock;
- (_Bool)mf_tryLockWithPriority;
- (void)mf_lockWithPriority;
- (_Bool)mf_tryLock;
- (void)mf_lock;
- (void)_mf_checkToAllowLock:(id)arg1;
- (void)_mf_checkToAllowExclusiveLocksWithLock:(id)arg1;
- (void)_mf_checkToAllowStrictProgressionWithLock:(id)arg1;
- (void)_mf_checkToAllowOrderingWithLock:(id)arg1;
- (void)_mf_dumpLockCallStacks:(unsigned long long)arg1 ordering:(id)arg2;
- (id)_mf_lockOrderingForType:(int)arg1;
@end

@interface NSScanner (NSScannerUtils)
- (_Bool)mf_scanUpAndOverString:(id)arg1;
- (id)mf_nextTokenWithPunctuation:(struct __CFCharacterSet *)arg1;
@end

@interface NSString (MFStringUtils)
+ (id)mf_stringWithData:(id)arg1 encoding:(unsigned long long)arg2;
- (id)mf_copyStringByEncodingIDNA;
- (id)mf_copyStringByDecodingIDNA;
- (id)mf_copyStringByEncodingIDNAInRange:(struct _NSRange)arg1;
- (id)mf_copyStringByDecodingIDNAInRange:(struct _NSRange)arg1;
- (id)mf_messageIDSubstring;
- (id)mf_MD5Digest;
- (id)mf_dataUsingEncoding:(unsigned long long)arg1 allowLossyConversion:(_Bool)arg2;
- (id)mf_dataUsingEncoding:(unsigned long long)arg1;
- (long long)mf_caseInsensitiveCompareExcludingXDash:(id)arg1;
- (const void *)mf_lossyDefaultCStringBytes;
@end

@interface NSString (MimeCharsetSupport)
- (id)mf_bestMimeCharsetForMessageDeliveryUsingSubtype:(id)arg1;
- (id)mf_bestMimeCharsetUsingHint:(unsigned int)arg1;
- (id)_mf_bestMimeCharset:(id)arg1;
- (id)mf_bestMimeCharset;
@end

@interface NSString (MimeHeaderEncoding)
- (id)mf_decodeMimeHeaderValueWithCharsetHint:(id)arg1;
- (id)mf_decodeMimeHeaderValueWithEncodingHint:(unsigned int)arg1;
- (id)mf_encodedHeaderDataWithEncodingHint:(unsigned int)arg1;
@end

@interface NSString (NSEmailAddressString)
+ (id)mf_partialSurnames;
+ (id)mf_nameExtensions;
+ (id)mf_formattedAddressWithName:(id)arg1 email:(id)arg2 useQuotes:(_Bool)arg3;
- (id)mf_trimCommasSpacesQuotes;
- (_Bool)mf_appearsToBeAnInitial;
- (_Bool)mf_hasSameNamesAs:(id)arg1;
- (void)mf_firstName:(id *)arg1 middleName:(id *)arg2 lastName:(id *)arg3 extension:(id *)arg4;
- (void)mf_addressCommentFirstName:(id *)arg1 middleName:(id *)arg2 lastName:(id *)arg3 extension:(id *)arg4;
- (id)mf_copyIDNAEncodedEmailAddress;
- (id)mf_copyIDNADecodedEmailAddress;
- (_Bool)mf_isEqualToAddress:(id)arg1;
- (id)mf_addressDomain;
- (struct _NSRange)mf_rangeOfAddressDomain;
- (_Bool)mf_isLegalEmailAddress;
- (_Bool)mf_isLegalCommentedEmailAddress;
- (id)mf_copyAddressComment;
- (id)mf_addressComment;
- (id)mf_uncommentedAddressRespectingGroups;
- (id)mf_uncommentedAddress;
- (id)mf_copyUncommentedAddress;
@end

@interface _MFEmailSetEmail : NSObject
{
    unsigned long long _hash;
    NSString *_encodedAddress;
    NSString *_comment;
}

@property(readonly, nonatomic) NSString *commentedAddress;
@property(retain, nonatomic) NSString *address;
- (_Bool)isEqualToEmail:(id)arg1;
@property(readonly, nonatomic) unsigned long long hash;
- (id)description;
- (void)dealloc;
- (id)initWithAddress:(id)arg1;

@end

@interface _MFEmailSetEnumerator : NSEnumerator
{
    MFEmailSet *_set;
    CDStruct_58648341 _state;
}

- (id)nextObject;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_58648341 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithSet:(id)arg1;

@end

