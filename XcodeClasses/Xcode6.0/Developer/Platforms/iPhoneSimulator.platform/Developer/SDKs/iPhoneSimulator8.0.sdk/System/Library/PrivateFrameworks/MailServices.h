//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MailServices.framework/MailServices
// UUID: DE3B8EB7-52D8-3543-85BE-7708BF7FEC7C
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2220.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol MSDSearchProtocol <NSObject>
- (void)findMessageData:(NSArray *)arg1 matchingCriterion:(MSCriterion *)arg2 options:(unsigned long long)arg3;
@end

@protocol MSDSearchResultsProtocol <NSObject>
- (void)foundResults:(NSArray *)arg1 error:(NSError *)arg2;
@end

@protocol MSDSuggestionsHintsProtocol <NSObject>
- (void)requestRichDownloadOfMessagesWithReferences:(NSArray *)arg1;
- (void)extendLifetimeOfMessagesWithReferences:(NSArray *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface MSService : NSObject
{
    int _canceled;
    NSObject<OS_dispatch_queue> *_connectionQueue;
    NSObject<OS_dispatch_queue> *_replyQueue;
    NSObject<OS_xpc_object> *_connection;
    NSObject<OS_xpc_object> *_responseListener;
    NSObject<OS_xpc_object> *_responseHandler;
}

- (void)_generateUnitTestResponsesForResultArray:(id)arg1;
- (id)_generateUnitTestReplyForMethod:(id)arg1 arg:(id)arg2 error:(id *)arg3;
- (_Bool)_unitTestsAreEnabled;
- (void)_simulateServicesMethod:(id)arg1 arguments:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (_Bool)_shouldSimulate;
- (void)_callServicesMethod:(id)arg1 arguments:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)_callServicesMethod:(id)arg1 arguments:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (id)_handleMessageSendFailure:(id)arg1 message:(id)arg2 messageIndex:(long long)arg3 context:(inout id *)arg4;
- (id)_createMessageForService:(id)arg1 arguments:(id)arg2 index:(long long *)arg3;
- (void)_registerConnection:(id)arg1 onQueue:(id)arg2;
- (void)setupResponseConnectionOnQueue:(id)arg1;
- (void)responseConnection:(id)arg1 handleResponse:(id)arg2;
- (void)responseConnection:(id)arg1 handleError:(id)arg2;
@property(readonly, getter=isCanceled) _Bool canceled;
- (void)cancel;
- (void)stop;
- (void)start;
- (id)_connection;
- (id)_createServiceOnQueue:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MSMailDefaultService : MSService
{
    _Bool _shouldLaunch;
}

@property(nonatomic) _Bool shouldLaunchMobileMail; // @synthesize shouldLaunchMobileMail=_shouldLaunch;
- (_Bool)_shouldSimulate;
- (id)_handleMessageSendFailure:(id)arg1 message:(id)arg2 messageIndex:(long long)arg3 context:(inout id *)arg4;
- (id)_createServiceOnQueue:(id)arg1;
- (id)init;

@end

@interface MSAccounts : MSMailDefaultService
{
}

+ (_Bool)setPushStateForMailboxWithPath:(id)arg1 account:(id)arg2 pushState:(_Bool)arg3 error:(id *)arg4;
+ (void)mailboxListingForAccountWithUniqueIdentifier:(id)arg1 keys:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (_Bool)deleteAccountsWithUniqueIdentifiers:(id)arg1 error:(id *)arg2;
+ (id)customSignatureForSendingEmailAddress:(id)arg1;
+ (_Bool)canSendMailSourceAccountManagement:(int)arg1;
+ (_Bool)canSendMail;
+ (void)accountValuesForKeys:(id)arg1 originatingBundleID:(id)arg2 sourceAccountManagement:(int)arg3 launchMobileMail:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
+ (void)accountValuesForKeys:(id)arg1 launchMobileMail:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (void)accountValuesForKeys:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (_Bool)hasActiveAccounts;
- (void)_simulateServicesMethod:(id)arg1 arguments:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_listAccountKeys:(id)arg1 originatingBundleID:(id)arg2 sourceAccountManagement:(int)arg3 handler:(CDUnknownBlockType)arg4;

@end

@interface MSCriterion : NSObject <NSSecureCoding>
{
    NSString *_type;
    NSString *_qualifier;
    id <NSObject> _criteria;
}

+ (_Bool)supportsSecureCoding;
- (id)criteria;
- (id)qualifier;
- (id)type;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCriteria:(id)arg1 allRequired:(_Bool)arg2;
- (id)initWithType:(id)arg1 qualifier:(id)arg2 expression:(id)arg3;
- (id)description;
- (void)dealloc;
- (id)_initWithType:(id)arg1 qualifier:(id)arg2 criteria:(id)arg3;
- (id)init;

@end

@interface MSDSuggestionsHintsInterface : NSObject
{
}

+ (id)_xpcInterface;
+ (id)XPCInterface;

@end

@interface MSEmailModel : NSObject <NSCoding>
{
    NSString *_subject;
    NSString *_body;
    NSArray *_to;
    NSArray *_cc;
    NSArray *_bcc;
    NSURL *_reference;
    int _type;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(retain, nonatomic) NSURL *reference; // @synthesize reference=_reference;
@property(retain, nonatomic) NSString *body; // @synthesize body=_body;
@property(copy, nonatomic) NSArray *bcc; // @synthesize bcc=_bcc;
@property(copy, nonatomic) NSArray *cc; // @synthesize cc=_cc;
@property(copy, nonatomic) NSArray *to; // @synthesize to=_to;
@property(copy, nonatomic) NSString *subject; // @synthesize subject=_subject;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface MSKeyValueStore : MSMailDefaultService
{
}

+ (id)valueForKey:(id)arg1;
- (void)_simulateServicesMethod:(id)arg1 arguments:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_valueForKey:(id)arg1 handler:(CDUnknownBlockType)arg2;

@end

@interface MSMessageAutosave : MSMailDefaultService
{
}

+ (void)removeAutosavedMessageWithIdentifier:(id)arg1;
+ (void)autosaveMessageData:(id)arg1 withIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;
+ (id)autosavedMessageDataWithIdentifier:(id)arg1 error:(id *)arg2;
+ (_Bool)hasAutosavedMessageWithIdentifier:(id)arg1;

@end

@interface MSPushRegistration : MSMailDefaultService
{
    NSString *_bundleIdentifier;
    NSString *_accountIdentifier;
    NSString *_notificationNamePrefix;
    NSArray *_mailboxNames;
}

@property(copy, nonatomic) NSArray *mailboxNames; // @synthesize mailboxNames=_mailboxNames;
@property(copy, nonatomic) NSString *notificationNamePrefix; // @synthesize notificationNamePrefix=_notificationNamePrefix;
@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (void)registerForPush:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MSSaveEmail : MSMailDefaultService
{
}

+ (void)saveEmail:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
+ (void)saveMessageData:(id)arg1 forAccountWithID:(id)arg2 autosaveIdentifier:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_simulateServicesMethod:(id)arg1 arguments:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_saveMessageData:(id)arg1 forAccountWithID:(id)arg2 autosaveIdentifier:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_saveEmail:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface MSSearch : NSObject <MSDSearchResultsProtocol>
{
    MSXPCConnection *_connection;
    id <MSSearchDelegate> _delegate;
}

+ (id)findMessageData:(id)arg1 matchingCriterion:(id)arg2 shouldFetch:(_Bool)arg3 onServer:(_Bool)arg4 onlyInboxes:(_Bool)arg5 delegate:(id)arg6;
+ (id)findMessageData:(id)arg1 matchingCriterion:(id)arg2 shouldFetch:(_Bool)arg3 onServer:(_Bool)arg4 delegate:(id)arg5;
+ (id)findMessageData:(id)arg1 matchingCriterion:(id)arg2 options:(unsigned long long)arg3 delegate:(id)arg4;
+ (void)setUnitTestingResultsArray:(id)arg1;
@property(nonatomic) id <MSSearchDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_generateUnitTestResponsesForResultArray:(id)arg1;
- (id)_generateUnitTestReplyForMethod:(id)arg1 arg:(id)arg2 error:(id *)arg3;
- (_Bool)_unitTestsAreEnabled;
- (void)_delegateDidFindResults:(id)arg1;
- (void)_delegateDidFinishWithError:(id)arg1;
- (void)_findMessageData:(id)arg1 matchingCriterion:(id)arg2 options:(unsigned long long)arg3;
- (void)foundResults:(id)arg1 error:(id)arg2;
- (void)cancel;
- (id)_remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)_initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSSendEmail : MSMailDefaultService
{
}

+ (id)sendEmail:(id)arg1 playSound:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)sendMessageData:(id)arg1 autosaveIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_simulateServicesMethod:(id)arg1 arguments:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_sendMessageData:(id)arg1 autosaveIdentifier:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_sendEmail:(id)arg1 playSound:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface MSSuggestionsHints : NSObject
{
    MSXPCConnection *_connection;
}

- (void)requestRichDownloadOfMessagesWithReferences:(id)arg1;
- (void)extendLifetimeOfMessagesWithReferences:(id)arg1;
- (id)_remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MSXPCConnection : NSXPCConnection
{
    NSObject<OS_dispatch_queue> *_queue;
    NSXPCInterface *_remoteObjectInterface;
    NSXPCInterface *_exportedInterface;
    id _exportedObject;
    CDUnknownBlockType _interruptionHandler;
    CDUnknownBlockType _invalidationHandler;
    Protocol *_protocol;
    NSXPCConnection *_connection;
}

@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(readonly, retain, nonatomic) Protocol *protocol; // @synthesize protocol=_protocol;
- (void)_sendInvocation:(id)arg1 remoteInterface:(id)arg2 errorHandler:(CDUnknownBlockType)arg3;
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)remoteObjectProxy;
- (unsigned int)effectiveGroupIdentifier;
- (unsigned int)effectiveUserIdentifier;
- (int)processIdentifier;
- (int)auditSessionIdentifier;
- (void)invalidate;
- (void)suspend;
- (void)resume;
- (void)setInvalidationHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)invalidationHandler;
- (void)setInterruptionHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)interruptionHandler;
- (void)setExportedObject:(id)arg1;
- (id)exportedObject;
- (void)setExportedInterface:(id)arg1;
- (id)exportedInterface;
- (void)setRemoteObjectInterface:(id)arg1;
- (id)remoteObjectInterface;
- (id)description;
- (void)dealloc;
- (id)initWithProtocol:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MSXPCEndpoint : MSMailDefaultService
{
}

+ (id)newConnectionForProtocol:(id)arg1;
- (void)connectionForProtocol:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface _MSSearchResultsProxy : NSObject <MSDSearchResultsProtocol>
{
    MFWeakReferenceHolder *_proxiedObject;
}

+ (id)searchResultsProxyForObject:(id)arg1;
- (void)foundResults:(id)arg1 error:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface _MSXPCRemoteProxy : NSObject
{
    int _selectorLock;
    struct __CFDictionary *_knownSelectors;
    MSXPCConnection *_connection;
    NSXPCInterface *_remoteInterface;
    CDUnknownBlockType _errorHandler;
}

- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(id)arg1;
- (void)dealloc;
- (id)initWithConnection:(id)arg1 interface:(id)arg2 errorHandler:(CDUnknownBlockType)arg3;

@end

