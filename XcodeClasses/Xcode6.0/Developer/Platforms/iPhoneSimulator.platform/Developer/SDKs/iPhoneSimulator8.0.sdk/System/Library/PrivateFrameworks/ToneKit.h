//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/ToneKit.framework/ToneKit
// UUID: D7091C57-01BE-3E51-AE07-8DAD91EC7D68
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 252.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol MPMediaPickerControllerDelegate <NSObject>

@optional
- (void)mediaPickerDidCancel:(MPMediaPickerController *)arg1;
- (void)mediaPicker:(MPMediaPickerController *)arg1 didPickMediaItems:(MPMediaItemCollection *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol TKPickerContainerItem <NSObject>
@property(readonly, nonatomic) long long numberOfChildren;
- (TKPickerItem *)childItemAtIndex:(long long)arg1;
@end

@protocol TKTonePickerControllerDelegate <NSObject>

@optional
- (void)tonePickerController:(TKTonePickerController *)arg1 selectedToneWithIdentifier:(NSString *)arg2;
- (void)tonePickerController:(TKTonePickerController *)arg1 didUpdateDetailText:(NSString *)arg2 ofTonePickerItem:(TKTonePickerItem *)arg3;
- (void)tonePickerController:(TKTonePickerController *)arg1 didUpdateCheckedStatus:(_Bool)arg2 ofTonePickerItem:(TKTonePickerItem *)arg3;
- (void)tonePickerControllerDidReloadTones:(TKTonePickerController *)arg1;
@end

@protocol TKTonePickerControllerDelegateInternal <NSObject>

@optional
- (void)tonePickerControllerRequestsPresentingVibrationPicker:(TKTonePickerController *)arg1;
- (void)tonePickerControllerRequestsPresentingToneStore:(TKTonePickerController *)arg1;
- (void)tonePickerController:(TKTonePickerController *)arg1 requestsPresentingToneClassicsPickerForItem:(TKTonePickerItem *)arg2;
- (void)tonePickerControllerDidStopPlaying:(TKTonePickerController *)arg1 withFadeOutDuration:(double)arg2;
- (void)tonePickerControllerRequestsPresentingMediaItemPicker:(TKTonePickerController *)arg1;
- (void)tonePickerController:(TKTonePickerController *)arg1 didSelectMediaItemAtIndex:(unsigned long long)arg2 selectionDidChange:(_Bool)arg3;
- (unsigned long long)tonePickerController:(TKTonePickerController *)arg1 indexOfMediaItemWithIdentifier:(NSNumber *)arg2;
- (NSString *)tonePickerController:(TKTonePickerController *)arg1 titleOfMediaItemAtIndex:(unsigned long long)arg2;
- (NSNumber *)tonePickerController:(TKTonePickerController *)arg1 identifierOfMediaItemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfMediaItemsInTonePickerController:(TKTonePickerController *)arg1;
- (void)tonePickerControllerRequestsMediaItemsRefresh:(TKTonePickerController *)arg1;
- (_Bool)tonePickerControllerShouldShowMedia:(TKTonePickerController *)arg1;
- (void)tonePickerController:(TKTonePickerController *)arg1 selectedMediaItemWithIdentifier:(NSNumber *)arg2;
@end

@protocol TKTonePickerTableViewControllerHelper <NSObject>
- (void)tonePickerTableViewControllerWillBeDeallocated:(UITableViewController<TKTonePickerTableViewLayoutMarginsObserver> *)arg1;
- (void)tonePickerTableViewWillDisappear:(_Bool)arg1;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2 forPickerRowItem:(TKPickerRowItem *)arg3;
- (void)updateCell:(UITableViewCell *)arg1 withDetailText:(NSString *)arg2;
- (void)updateCell:(UITableViewCell *)arg1 withCheckedStatus:(_Bool)arg2;
- (TKTonePickerItem *)selectedTonePickerItem;
- (void)tableView:(UITableView *)arg1 updateCell:(UITableViewCell *)arg2 withSeparatorForPickerRowItem:(TKPickerRowItem *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forPickerRowItem:(TKPickerRowItem *)arg3;
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForPickerRowItem:(TKPickerRowItem *)arg2;
- (void)loadViewForTonePickerTableViewController:(UITableViewController<TKTonePickerTableViewLayoutMarginsObserver> *)arg1;
@end

@protocol TKTonePickerTableViewLayoutMarginsObserver <NSObject>

@optional
- (void)layoutMarginsDidChangeInTonePickerTableView:(TKTonePickerTableView *)arg1;
@end

@protocol TKVibrationPickerTableViewCellDelegate <NSObject>

@optional
- (void)vibrationPickerTableViewCell:(TKVibrationPickerTableViewCell *)arg1 endedEditingWithText:(NSString *)arg2;
@end

@protocol TKVibrationPickerViewControllerDelegate <NSObject>

@optional
- (void)vibrationPickerViewController:(TKVibrationPickerViewController *)arg1 selectedVibrationWithIdentifier:(NSString *)arg2;
@end

@protocol TKVibrationPickerViewControllerDismissalDelegate <NSObject>
- (void)vibrationPickerViewControllerWasDismissed:(TKVibrationPickerViewController *)arg1;
@end

@protocol TKVibrationRecorderStyleProvider <NSObject>
@property(readonly, nonatomic) double vibrationRecorderRippleFingerMovingSpeed;
@property(readonly, nonatomic) double vibrationRecorderRippleFingerStillSpeed;
@property(readonly, nonatomic) double vibrationRecorderRippleFinalRadius;
@property(readonly, nonatomic) double vibrationRecorderRippleInitialRadius;
@property(readonly, nonatomic) double vibrationRecorderRippleRingLineWidth;
@property(readonly, nonatomic) UIColor *vibrationRecorderRippleViewBackgroundColor;
@property(readonly, nonatomic) double vibrationRecorderProgressViewAccessibilityAdditionalHeight;
@property(readonly, nonatomic) UIImage *vibrationRecorderProgressViewResizableDotImage;
@property(readonly, nonatomic) double vibrationRecorderProgressViewDotHorizontalInset;
@property(readonly, nonatomic) UIColor *vibrationRecorderProgressViewTrackColor;
@property(readonly, nonatomic) double vibrationRecorderProgressViewHeight;
@property(readonly, nonatomic) double vibrationRecorderProgressViewHorizontalOffsetFromEdge;
@property(readonly, nonatomic) double vibrationRecorderProgressToolbarAdditionalHeight;
@property(readonly, nonatomic) double vibrationRecorderProgressToolbarVerticalOffset;
@property(readonly, nonatomic) double vibrationRecorderControlsToolbarItemsHorizontalOffsetFromEdge;
@property(readonly, nonatomic) double vibrationRecorderControlsToolbarAdditionalHeight;
@property(readonly, nonatomic) double vibrationRecorderControlsToolbarVerticalOffset;
@property(readonly, nonatomic) double vibrationRecorderInstructionsLabelFadeAnimationDuration;
@property(readonly, nonatomic) struct UIEdgeInsets vibrationRecorderInstructionsLabelEdgeInsets;
@property(readonly, nonatomic) struct UIOffset vibrationRecorderInstructionsLabelPositionOffset;
@property(readonly, nonatomic) UIColor *vibrationRecorderInstructionsLabelBackgroundColor;
@property(readonly, nonatomic) UIColor *vibrationRecorderInstructionsLabelTextColor;
@property(readonly, nonatomic) UIFont *vibrationRecorderInstructionsLabelFont;
@property(retain, nonatomic) UIScreen *screen;
@property(readonly, nonatomic) UIColor *vibrationRecorderBarsBackgroundColor;
@end

@protocol TKVibrationRecorderTouchSurfaceDelegate <NSObject>
- (void)vibrationRecorderTouchSurfaceDidFinishReplayingVibration:(TKVibrationRecorderTouchSurface *)arg1;
- (void)vibrationRecorderTouchSurface:(TKVibrationRecorderTouchSurface *)arg1 didExitRecordingModeWithContextObject:(id)arg2;
- (void)vibrationComponentDidEndForVibrationRecorderTouchSurface:(TKVibrationRecorderTouchSurface *)arg1;
- (void)vibrationComponentDidStartForVibrationRecorderTouchSurface:(TKVibrationRecorderTouchSurface *)arg1;
- (_Bool)vibrationRecorderTouchSurfaceDidEnterRecordingMode:(TKVibrationRecorderTouchSurface *)arg1;
@end

@protocol TKVibrationRecorderViewControllerDelegate <NSObject>
- (void)vibrationRecorderViewControllerWasDismissedWithoutSavingRecordedVibrationPattern:(TKVibrationRecorderViewController *)arg1;
- (void)vibrationRecorderViewController:(TKVibrationRecorderViewController *)arg1 didFinishRecordingVibrationPattern:(NSDictionary *)arg2 name:(NSString *)arg3;
@end

@protocol TKVibrationRecorderViewDelegate <NSObject>
- (void)vibrationRecorderViewDidReachVibrationRecordingMaximumDuration:(TKVibrationRecorderView *)arg1;
- (void)vibrationRecorderView:(TKVibrationRecorderView *)arg1 didExitRecordingModeWithContextObject:(id)arg2;
- (_Bool)vibrationRecorderViewDidEnterRecordingMode:(TKVibrationRecorderView *)arg1;
- (void)vibrationRecorderViewDidFinishReplayingVibration:(TKVibrationRecorderView *)arg1;
- (void)vibrationRecorderView:(TKVibrationRecorderView *)arg1 buttonTappedWithIdentifier:(int)arg2;
- (void)vibrationComponentDidEndForVibrationRecorderView:(TKVibrationRecorderView *)arg1;
- (void)vibrationComponentDidStartForVibrationRecorderView:(TKVibrationRecorderView *)arg1;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@interface NSIndexPath (TKSectionAwareTableView)
+ (id)tk_indexPathForRow:(long long)arg1 inSection:(long long)arg2;
@property(readonly, nonatomic) long long tk_row;
@property(readonly, nonatomic) long long tk_section;
@end

@interface NSLayoutConstraint (TKExtensions)
- (void)tk_removeFromContainer;
@end

@interface NSMutableArray (TKExtensions)
- (void)tk_ensureHasItemsOrNullUpToIndex:(unsigned long long)arg1;
@end

@interface NSMutableArray (TKQueue)
- (id)tk_nextDequeuedObject;
- (id)tk_lastEnqueuedObject;
- (id)tk_dequeueObject;
- (void)tk_enqueueObject:(id)arg1;
@end

@interface TKCapabilitiesManager : NSObject
{
    _Bool _ringtoneStoreAvailable;
    _Bool _alertToneStoreAvailable;
}

+ (id)sharedCapabilitiesManager;
@property(nonatomic, getter=_isAlertToneStoreAvailable, setter=_setAlertToneStoreAvailable:) _Bool _alertToneStoreAvailable; // @synthesize _alertToneStoreAvailable;
@property(nonatomic, getter=_isRingtoneStoreAvailable, setter=_setRingtoneStoreAvailable:) _Bool _ringtoneStoreAvailable; // @synthesize _ringtoneStoreAvailable;
@property(readonly, nonatomic) _Bool hasUserGeneratedVibrationsCapability;
@property(readonly, nonatomic) _Bool hasVibratorCapability;
@property(readonly, nonatomic, getter=isAlertToneStoreAvailable) _Bool alertToneStoreAvailable;
@property(readonly, nonatomic, getter=isRingtoneStoreAvailable) _Bool ringtoneStoreAvailable;
- (void)_checkRingtoneStoreAvailability;
- (_Bool)_hasTelephonyCapability;
- (void)dealloc;
- (id)init;

@end

@interface TKDisplayLinkManager : NSObject
{
    _Bool _hasUpdatedTargetActions;
    _Bool _handlingDisplayRefresh;
    CADisplayLink *_storedDisplayLink;
    NSMutableSet *_activeTargetActions;
    NSMutableSet *_updatedTargetActions;
    unsigned long long _warmUpModeRequirementsCount;
}

+ (void)_releaseCurrentDisplayLinkManager;
+ (id)currentDisplayLinkManager;
@property(nonatomic, setter=_setWarmUpModeRequirementsCount:) unsigned long long _warmUpModeRequirementsCount; // @synthesize _warmUpModeRequirementsCount;
@property(nonatomic, getter=_isHandlingDisplayRefresh, setter=_setHandlingDisplayRefresh:) _Bool _handlingDisplayRefresh; // @synthesize _handlingDisplayRefresh;
@property(nonatomic, setter=_setHasUpdatedTargetActions:) _Bool _hasUpdatedTargetActions; // @synthesize _hasUpdatedTargetActions;
@property(retain, nonatomic, setter=_setUpdatedTargetActions:) NSMutableSet *_updatedTargetActions; // @synthesize _updatedTargetActions;
@property(retain, nonatomic, setter=_setActiveTargetActions:) NSMutableSet *_activeTargetActions; // @synthesize _activeTargetActions;
@property(retain, nonatomic, setter=_setStoredDisplayLink:) CADisplayLink *_storedDisplayLink; // @synthesize _storedDisplayLink;
- (void)_displayDidRefresh:(id)arg1;
- (void)endRequiringWarmUpMode;
- (void)beginRequiringWarmUpMode;
@property(readonly, nonatomic, getter=_isWarmUpModeEnabled) _Bool _warmUpModeEnabled;
- (void)_didRemoveLastTargetAction;
- (void)_didAddFirstTargetAction;
- (id)_prepareUpdatedTargetActionsForModification;
- (void)removeTarget:(id)arg1 selector:(SEL)arg2;
- (void)addTarget:(id)arg1 selector:(SEL)arg2 frameInterval:(unsigned long long)arg3;
- (void)addTarget:(id)arg1 selector:(SEL)arg2;
@property(retain, nonatomic, setter=_setDisplayLink:) CADisplayLink *_displayLink;
@property(readonly, nonatomic) unsigned long long frameInterval;
@property(readonly, nonatomic) double timestamp;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic, getter=isPaused) _Bool paused;
- (void)dealloc;
- (id)init;

@end

@interface TKDisplayLinkManagerTargetAction : NSObject
{
    id _target;
    SEL _actionSelector;
    NSString *_actionSelectorName;
    unsigned long long _frameInterval;
    unsigned long long _displayDidRefreshCount;
}

@property(nonatomic, setter=_setDisplayDidRefreshCount:) unsigned long long _displayDidRefreshCount; // @synthesize _displayDidRefreshCount;
@property(nonatomic, setter=_setFrameInterval:) unsigned long long _frameInterval; // @synthesize _frameInterval;
@property(copy, nonatomic, setter=_setActionSelectorName:) NSString *_actionSelectorName; // @synthesize _actionSelectorName;
@property(nonatomic, setter=_setActionSelector:) SEL _actionSelector; // @synthesize _actionSelector;
@property(retain, nonatomic, setter=_setTarget:) id _target; // @synthesize _target;
- (void)displayDidRefresh:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 actionSelector:(SEL)arg2 frameInterval:(unsigned long long)arg3;
- (id)initWithTarget:(id)arg1 actionSelector:(SEL)arg2;

@end

@interface TKLabelContainerView : UIView
{
    UILabel *_label;
    struct UIEdgeInsets _labelPaddingInsets;
}

@property(retain, nonatomic, setter=_setLabel:) UILabel *_label; // @synthesize _label;
@property(nonatomic) struct UIEdgeInsets labelPaddingInsets; // @synthesize labelPaddingInsets=_labelPaddingInsets;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(nonatomic) struct UIOffset labelShadowOffset;
@property(retain, nonatomic) UIColor *labelShadowColor;
@property(retain, nonatomic) UIColor *labelTextColor;
@property(retain, nonatomic) UIFont *labelFont;
@property(copy, nonatomic) NSString *labelText;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TKPickerItem : NSObject
{
    long long _section;
}

- (void)_setSection:(long long)arg1;
@property(nonatomic) long long section; // @synthesize section=_section;
- (void)_appendDescriptionOfAttributeNamed:(id)arg1 withStringValue:(id)arg2 toString:(id)arg3;
- (void)_appendDescriptionOfAttributeNamed:(id)arg1 withBoolValue:(_Bool)arg2 toString:(id)arg3;
- (void)_appendDescriptionOfAttributeNamed:(id)arg1 withIntegerValue:(long long)arg2 toString:(id)arg3;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;
- (id)description;

@end

@interface TKPickerRowItem : TKPickerItem
{
    long long _row;
}

- (void)_setRow:(long long)arg1;
@property(nonatomic) long long row; // @synthesize row=_row;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;

@end

@interface TKPickerDividerItem : TKPickerRowItem
{
}

@end

@interface TKPickerDividerTableViewCell : UITableViewCell
{
    UIView *_dividerView;
    long long _contentBackdropOverlayBlendMode;
}

@property(nonatomic, setter=_setContentBackdropOverlayBlendMode:) long long _contentBackdropOverlayBlendMode; // @synthesize _contentBackdropOverlayBlendMode;
@property(retain, nonatomic, setter=_setDividerView:) UIView *_dividerView; // @synthesize _dividerView;
- (struct CGRect)_dividerViewFrame;
- (void)layoutSubviews;
- (void)setSeparatorStyle:(long long)arg1;
@property(nonatomic) long long contentBackdropOverlayBlendMode;
@property(retain, nonatomic) UIColor *contentBackgroundColor;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface TKPickerSectionItem : TKPickerItem
{
    NSString *_text;
}

- (void)_setText:(id)arg1;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;
- (void)dealloc;

@end

@interface TKPickerSelectableItem : TKPickerRowItem
{
    _Bool _textCentered;
    _Bool _showsCheckmark;
    _Bool _showsDisclosureIndicator;
    NSString *_text;
    NSString *_detailText;
}

- (void)_setShowsDisclosureIndicator:(_Bool)arg1;
@property(nonatomic) _Bool showsDisclosureIndicator; // @synthesize showsDisclosureIndicator=_showsDisclosureIndicator;
- (void)_setShowsCheckmark:(_Bool)arg1;
@property(nonatomic) _Bool showsCheckmark; // @synthesize showsCheckmark=_showsCheckmark;
- (void)_setDetailText:(id)arg1;
@property(copy, nonatomic) NSString *detailText; // @synthesize detailText=_detailText;
- (void)_setTextCentered:(_Bool)arg1;
@property(nonatomic, getter=isTextCentered) _Bool textCentered; // @synthesize textCentered=_textCentered;
- (void)_setText:(id)arg1;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;
- (void)dealloc;

@end

@interface TKPickerTableViewCell : UITableViewCell
{
}

- (void)setSectionLocation:(int)arg1 animated:(_Bool)arg2;

@end

@interface TKStyleProvider : NSObject <TKVibrationRecorderStyleProvider>
{
    UIScreen *_screen;
    NSBundle *_bundle;
    NSMutableDictionary *_cachedStyleProperties;
}

@property(retain, nonatomic, setter=_setCachedStyleProperties:) NSMutableDictionary *_cachedStyleProperties; // @synthesize _cachedStyleProperties;
@property(retain, nonatomic, setter=_setBundle:) NSBundle *_bundle; // @synthesize _bundle;
@property(retain, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
@property(readonly, nonatomic) double vibrationRecorderRippleFingerMovingSpeed;
@property(readonly, nonatomic) double vibrationRecorderRippleFingerStillSpeed;
@property(readonly, nonatomic) double vibrationRecorderRippleFinalRadius;
@property(readonly, nonatomic) double vibrationRecorderRippleInitialRadius;
@property(readonly, nonatomic) double vibrationRecorderRippleRingLineWidth;
@property(readonly, nonatomic) UIColor *vibrationRecorderRippleViewBackgroundColor;
@property(readonly, nonatomic) double vibrationRecorderProgressViewAccessibilityAdditionalHeight;
@property(readonly, nonatomic) UIImage *vibrationRecorderProgressViewResizableDotImage;
@property(readonly, nonatomic) double vibrationRecorderProgressViewDotHorizontalInset;
@property(readonly, nonatomic) UIColor *vibrationRecorderProgressViewTrackColor;
@property(readonly, nonatomic) double vibrationRecorderProgressViewHeight;
@property(readonly, nonatomic) double vibrationRecorderProgressViewHorizontalOffsetFromEdge;
@property(readonly, nonatomic) double vibrationRecorderProgressToolbarAdditionalHeight;
@property(readonly, nonatomic) double vibrationRecorderProgressToolbarVerticalOffset;
@property(readonly, nonatomic) double vibrationRecorderControlsToolbarItemsHorizontalOffsetFromEdge;
@property(readonly, nonatomic) double vibrationRecorderControlsToolbarAdditionalHeight;
@property(readonly, nonatomic) double vibrationRecorderControlsToolbarVerticalOffset;
@property(readonly, nonatomic) double vibrationRecorderInstructionsLabelFadeAnimationDuration;
@property(readonly, nonatomic) struct UIEdgeInsets vibrationRecorderInstructionsLabelEdgeInsets;
@property(readonly, nonatomic) struct UIOffset vibrationRecorderInstructionsLabelPositionOffset;
@property(readonly, nonatomic) UIColor *vibrationRecorderInstructionsLabelBackgroundColor;
@property(readonly, nonatomic) UIColor *vibrationRecorderInstructionsLabelTextColor;
@property(readonly, nonatomic) UIFont *vibrationRecorderInstructionsLabelFont;
@property(readonly, nonatomic) UIColor *vibrationRecorderBarsBackgroundColor;
@property(readonly, nonatomic) double defaultAnimationDuration;
- (void)_didReceiveMemoryWarning:(id)arg1;
- (id)_cachedResizableImageForPropertyWithSelector:(SEL)arg1 capInsets:(struct UIEdgeInsets)arg2 size:(struct CGSize)arg3 opaque:(_Bool)arg4 withDrawingBlock:(CDUnknownBlockType)arg5;
- (id)_cachedImageForPropertyWithSelector:(SEL)arg1 size:(struct CGSize)arg2 opaque:(_Bool)arg3 withDrawingBlock:(CDUnknownBlockType)arg4;
- (id)_cachedImageWithName:(id)arg1 forPropertyWithSelector:(SEL)arg2;
- (void)_setCachedStyleObject:(id)arg1 forPropertyWithSelector:(SEL)arg2;
- (id)_cachedStyleObjectForPropertyWithSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKTonePickerItem : TKPickerSelectableItem <TKPickerContainerItem>
{
    TKTonePickerController *_parentTonePickerController;
    long long _numberOfChildren;
    unsigned long long _itemKind;
}

- (void)_setItemKind:(unsigned long long)arg1;
@property(nonatomic) unsigned long long itemKind; // @synthesize itemKind=_itemKind;
- (void)_setNumberOfChildren:(long long)arg1;
@property(nonatomic) long long numberOfChildren; // @synthesize numberOfChildren=_numberOfChildren;
@property(nonatomic, setter=_setParentTonePickerController:) TKTonePickerController *_parentTonePickerController; // @synthesize _parentTonePickerController;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;
- (id)childItemAtIndex:(long long)arg1;
@property(readonly, nonatomic) TKTonePickerSectionItem *parentSectionItem;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKToneClassicsPickerItem : TKTonePickerItem
{
    long long _classicToneIndex;
}

- (void)_setClassicToneIndex:(long long)arg1;
@property(nonatomic) long long classicToneIndex; // @synthesize classicToneIndex=_classicToneIndex;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;
- (id)childItemAtIndex:(long long)arg1;
@property(readonly, nonatomic) TKTonePickerItem *parentItem;

@end

@interface TKToneClassicsTableViewController : UITableViewController <TKTonePickerTableViewLayoutMarginsObserver>
{
    id <TKTonePickerTableViewControllerHelper> _tonePickerTableViewControllerHelper;
    TKTonePickerItem *_classicTonesHeaderItem;
}

@property(retain, nonatomic, setter=_setClassicTonesHeaderItem:) TKTonePickerItem *_classicTonesHeaderItem; // @synthesize _classicTonesHeaderItem;
@property(nonatomic) id <TKTonePickerTableViewControllerHelper> tonePickerTableViewControllerHelper; // @synthesize tonePickerTableViewControllerHelper=_tonePickerTableViewControllerHelper;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)layoutMarginsDidChangeInTonePickerTableView:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)didUpdateDetailText:(id)arg1 ofToneClassicsPickerItem:(id)arg2;
- (void)didUpdateCheckedStatus:(_Bool)arg1 ofToneClassicsPickerItem:(id)arg2;
- (void)didReloadTones;
- (void)dealloc;
- (id)initWithClassicTonesHeaderItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKTonePickerController : NSObject
{
    _Bool _behavesAsRingtonePicker;
    _Bool _defaultToneIdentifierWasExplicitlySet;
    _Bool _selectedToneWasExplicitlySetToDefaultTone;
    _Bool _showsToneStore;
    _Bool _showsDefault;
    _Bool _showsNone;
    _Bool _noneAtTop;
    _Bool _showsNothingSelected;
    _Bool _shouldCachePickerItems;
    _Bool _startedInterruption;
    _Bool _mediaAtTop;
    _Bool _showsVibrations;
    int _alertType;
    id <TKTonePickerControllerDelegate> _delegate;
    unsigned long long _toneTypes;
    NSString *_accountIdentifier;
    NSString *_defaultToneIdentifier;
    NSString *_noneString;
    NSMutableArray *_cachedPickerSectionItems;
    NSMutableArray *_cachedPickerRowItems;
    NSMutableArray *_cachedClassicRingtonePickerItems;
    NSMutableArray *_cachedClassicAlertTonePickerItems;
    NSIndexPath *_selectedToneIndexPath;
    NSArray *_classicAlertToneIdentifiers;
    NSArray *_classicRingtoneIdentifiers;
    unsigned long long _selectedClassicRingtoneIndex;
    unsigned long long _selectedClassicAlertToneIndex;
    NSMutableArray *_toneGroupLists;
    NSMutableArray *_toneGroupNames;
    TLToneManager *_toneManager;
    TLSound *_playingPreviewSound;
    AVController *_storedAVController;
    NSString *_selectedVibrationIdentifier;
}

@property(copy, nonatomic, setter=_setSelectedVibrationIdentifier:) NSString *_selectedVibrationIdentifier; // @synthesize _selectedVibrationIdentifier;
@property(nonatomic, setter=_setShowsVibrations:) _Bool _showsVibrations; // @synthesize _showsVibrations;
@property(nonatomic, getter=isMediaAtTop) _Bool mediaAtTop; // @synthesize mediaAtTop=_mediaAtTop;
@property(nonatomic, setter=_setStartedInterruption:) _Bool _startedInterruption; // @synthesize _startedInterruption;
@property(retain, nonatomic, setter=_setStoredAVController:) AVController *_storedAVController; // @synthesize _storedAVController;
@property(retain, nonatomic, setter=_setPlayingPreviewSound:) TLSound *_playingPreviewSound; // @synthesize _playingPreviewSound;
@property(retain, nonatomic, setter=_setToneManager:) TLToneManager *_toneManager; // @synthesize _toneManager;
@property(retain, nonatomic, setter=_setToneGroupNames:) NSMutableArray *_toneGroupNames; // @synthesize _toneGroupNames;
@property(retain, nonatomic, setter=_setToneGroupLists:) NSMutableArray *_toneGroupLists; // @synthesize _toneGroupLists;
@property(nonatomic, setter=_setSelectedClassicAlertToneIndex:) unsigned long long _selectedClassicAlertToneIndex; // @synthesize _selectedClassicAlertToneIndex;
@property(nonatomic, setter=_setSelectedClassicRingtoneIndex:) unsigned long long _selectedClassicRingtoneIndex; // @synthesize _selectedClassicRingtoneIndex;
@property(retain, nonatomic, setter=_setClassicRingtoneIdentifiers:) NSArray *_classicRingtoneIdentifiers; // @synthesize _classicRingtoneIdentifiers;
@property(retain, nonatomic, setter=_setClassicAlertToneIdentifiers:) NSArray *_classicAlertToneIdentifiers; // @synthesize _classicAlertToneIdentifiers;
@property(retain, nonatomic, setter=_setSelectedToneIndexPath:) NSIndexPath *_selectedToneIndexPath; // @synthesize _selectedToneIndexPath;
@property(retain, nonatomic, setter=_setCachedClassicAlertTonePickerItems:) NSMutableArray *_cachedClassicAlertTonePickerItems; // @synthesize _cachedClassicAlertTonePickerItems;
@property(retain, nonatomic, setter=_setCachedClassicRingtonePickerItems:) NSMutableArray *_cachedClassicRingtonePickerItems; // @synthesize _cachedClassicRingtonePickerItems;
@property(retain, nonatomic, setter=_setCachedPickerRowItems:) NSMutableArray *_cachedPickerRowItems; // @synthesize _cachedPickerRowItems;
@property(retain, nonatomic, setter=_setCachedPickerSectionItems:) NSMutableArray *_cachedPickerSectionItems; // @synthesize _cachedPickerSectionItems;
@property(nonatomic, setter=_setShouldCachePickerItems:) _Bool _shouldCachePickerItems; // @synthesize _shouldCachePickerItems;
@property(nonatomic, setter=_setShowsNothingSelected:) _Bool _showsNothingSelected; // @synthesize _showsNothingSelected;
@property(copy, nonatomic, setter=_setNoneString:) NSString *_noneString; // @synthesize _noneString;
@property(nonatomic, getter=isNoneAtTop) _Bool noneAtTop; // @synthesize noneAtTop=_noneAtTop;
@property(nonatomic, setter=_setShowsNone:) _Bool _showsNone; // @synthesize _showsNone;
@property(nonatomic, setter=_setShowsDefault:) _Bool _showsDefault; // @synthesize _showsDefault;
@property(nonatomic, setter=_setShowsToneStore:) _Bool _showsToneStore; // @synthesize _showsToneStore;
@property(nonatomic, setter=_setSelectedToneWasExplicitlySetToDefaultTone:) _Bool _selectedToneWasExplicitlySetToDefaultTone; // @synthesize _selectedToneWasExplicitlySetToDefaultTone;
@property(nonatomic, setter=_setDefaultToneIdentifierWasExplicitlySet:) _Bool _defaultToneIdentifierWasExplicitlySet; // @synthesize _defaultToneIdentifierWasExplicitlySet;
@property(copy, nonatomic, setter=_setDefaultToneIdentifier:) NSString *_defaultToneIdentifier; // @synthesize _defaultToneIdentifier;
@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(nonatomic, setter=_setAlertType:) int _alertType; // @synthesize _alertType;
@property(nonatomic, setter=_setBehavesAsRingtonePicker:) _Bool _behavesAsRingtonePicker; // @synthesize _behavesAsRingtonePicker;
@property(nonatomic, setter=_setToneTypes:) unsigned long long _toneTypes; // @synthesize _toneTypes;
@property(nonatomic) id <TKTonePickerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_toneManagerContentsChanged:(id)arg1;
- (void)_resetSelectedClassicAlertToneIndex;
- (void)_resetSelectedClassicRingtoneIndex;
- (void)_didUpdateCheckedStatus:(_Bool)arg1 ofToneClassicsPickerItem:(id)arg2;
- (void)_didUpdateDetailText:(id)arg1 ofPickerItemForRowAtIndexPath:(id)arg2;
- (void)_didUpdateCheckedStatus:(_Bool)arg1 ofPickerItemForRowAtIndexPath:(id)arg2;
- (void)_didSelectToneWithIdentifier:(id)arg1;
- (void)_didReloadTones;
- (id)_annotatedNameForToneIdentifier:(id)arg1;
- (void)_updateDetailTextOfVibrationItem;
- (void)_unregisterForUserGeneratedVibrationsDidChangeNotification;
- (void)_registerForUserGeneratedVibrationsDidChangeNotification;
- (id)_nameOfVibrationWithIdentifier:(id)arg1;
- (void)_resetSelectedVibrationIdentifier;
@property(copy, nonatomic) NSString *selectedVibrationIdentifier;
@property(nonatomic) _Bool showsVibrations;
- (void)_reloadMediaItems;
- (void)_didSelectMediaItemWithIdentifier:(id)arg1;
- (unsigned long long)_indexOfMediaItemWithIdentifier:(id)arg1;
- (id)_identifierOfMediaItemAtIndex:(unsigned long long)arg1;
- (unsigned long long)_mediaItemsCount;
- (_Bool)_isMediaAtTop;
- (_Bool)_showsMedia;
- (void)finishedWithPicker;
- (void)stopPlayingWithFadeOut:(_Bool)arg1;
- (void)_handleItemPlaybackDidEndWithAVController:(id)arg1;
- (void)_unregisterForItemPlaybackDidEndNotificationWithCurrentAVController;
- (void)_registerForItemPlaybackDidEndNotificationWithCurrentAVController;
- (void)_togglePlayForToneWithIdentifier:(id)arg1;
- (void)_playToneWithIdentifier:(id)arg1;
- (id)_avController;
- (_Bool)_shouldUseAudioServicesForPlayback;
- (void)_goToStore;
@property(readonly, nonatomic) _Bool canShowStore;
- (void)_sortToneIdentifiersArray:(id)arg1;
- (void)_addRingtonesInDirectory:(id)arg1 toArray:(id)arg2 fileExtension:(id)arg3;
- (id)_loadRingtonesFromPlist;
- (id)_loadAlertTonesFromPlist;
- (id)_loadTonesFromPlistNamed:(id)arg1;
@property(readonly, nonatomic) NSString *_ringtonesPlistName;
@property(readonly, nonatomic) NSString *_alertTonesPlistName;
- (void)_reloadTonesForExternalChange:(_Bool)arg1;
- (void)_reloadTones;
- (_Bool)_didSelectToneClassicsPickerItem:(id)arg1;
- (_Bool)didSelectTonePickerItem:(id)arg1;
- (id)_selectedIdentifier:(_Bool *)arg1;
- (id)_identifierOfSelectedClassicRingtone;
- (id)_identifierOfSelectedClassicAlertTone;
- (void)_setSelectedToneIdentifier:(id)arg1 currentlyReloadingTones:(_Bool)arg2;
@property(copy, nonatomic) NSString *selectedToneIdentifier;
@property(readonly, nonatomic) TKTonePickerItem *selectedTonePickerItem;
@property(readonly, nonatomic) TKTonePickerItem *_topLevelSelectedTonePickerItem;
- (id)_identifierAtIndexPath:(id)arg1 isMediaItem:(_Bool *)arg2;
- (id)_identifierOfToneAtIndexPath:(id)arg1;
- (id)_indexPathForToneWithIdentifier:(id)arg1;
- (_Bool)_isDividerAtIndexPath:(id)arg1;
- (_Bool)_isVibrationGroupAtIndexPath:(id)arg1;
- (_Bool)_isMediaGroupAtIndexPath:(id)arg1;
- (_Bool)_isNoneGroupAtIndexPath:(id)arg1;
- (_Bool)_isDefaultGroupAtIndexPath:(id)arg1;
- (_Bool)_isToneStoreGroupAtIndexPath:(id)arg1;
@property(readonly, nonatomic) NSIndexPath *indexPathForSelectedTone;
@property(readonly, nonatomic) NSIndexPath *_indexPathForVibrationGroup;
@property(readonly, nonatomic) NSIndexPath *_indexPathForNone;
@property(readonly, nonatomic) NSIndexPath *_indexPathForMediaGroup;
@property(readonly, nonatomic) NSIndexPath *_indexPathForFirstToneGroup;
@property(readonly, nonatomic) NSIndexPath *_indexPathForDefaultGroup;
@property(readonly, nonatomic) NSIndexPath *_indexPathForToneStoreGroup;
- (void)_invalidatePickerItemCaches;
- (_Bool)_cacheToneClassicsPickerItem:(id)arg1 forIndex:(long long)arg2 headerKind:(unsigned long long)arg3;
- (id)_cachedToneClassicsPickerItemForIndex:(long long)arg1 headerKind:(unsigned long long)arg2;
- (_Bool)_cachePickerRowItem:(id)arg1 atIndex:(long long)arg2 inSectionForItem:(id)arg3;
- (id)_cachedPickerRowItemAtIndex:(long long)arg1 inSectionForItem:(id)arg2;
- (_Bool)_cachePickerRowItem:(id)arg1 forSection:(long long)arg2;
- (id)_cachedPickerItemForSection:(long long)arg1;
- (id)_toneClassicsPickerItemAtIndex:(long long)arg1 belowTonePickerItem:(id)arg2;
- (id)_pickerRowItemAtIndex:(long long)arg1 inSectionForItem:(id)arg2;
- (id)pickerItemForSection:(long long)arg1;
- (long long)numberOfSections;
@property(nonatomic) _Bool showsNothingSelected;
@property(copy, nonatomic) NSString *noneString;
@property(nonatomic) _Bool showsNone;
@property(nonatomic) _Bool showsDefault;
@property(nonatomic) _Bool showsToneStore;
@property(copy, nonatomic) NSString *defaultToneIdentifier;
@property(readonly, nonatomic) int alertType;
- (void)dealloc;
- (id)initWithAlertType:(int)arg1;
- (id)init;

@end

@interface TKTonePickerSectionItem : TKPickerSectionItem <TKPickerContainerItem>
{
    TKTonePickerController *_parentTonePickerController;
    long long _numberOfChildren;
    unsigned long long _sectionHeader;
    unsigned long long _regularToneSectionIndex;
}

- (void)_setRegularToneSectionIndex:(unsigned long long)arg1;
@property(nonatomic) unsigned long long regularToneSectionIndex; // @synthesize regularToneSectionIndex=_regularToneSectionIndex;
- (void)_setSectionHeader:(unsigned long long)arg1;
@property(nonatomic) unsigned long long sectionHeader; // @synthesize sectionHeader=_sectionHeader;
- (void)_setNumberOfChildren:(long long)arg1;
@property(nonatomic) long long numberOfChildren; // @synthesize numberOfChildren=_numberOfChildren;
@property(nonatomic, setter=_setParentTonePickerController:) TKTonePickerController *_parentTonePickerController; // @synthesize _parentTonePickerController;
- (void)_appendDescriptionOfAttributesToString:(id)arg1;
- (id)childItemAtIndex:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKTonePickerTableView : UITableView
{
    id <TKTonePickerTableViewLayoutMarginsObserver> _layoutMarginsObserver;
}

@property(nonatomic) id <TKTonePickerTableViewLayoutMarginsObserver> layoutMarginsObserver; // @synthesize layoutMarginsObserver=_layoutMarginsObserver;
- (void)layoutMarginsDidChange;

@end

@interface TKTonePickerTableViewCellLayoutManager : UITableViewCellLayoutManagerValue1
{
    double _minimumTextIndentation;
}

@property(nonatomic) double minimumTextIndentation; // @synthesize minimumTextIndentation=_minimumTextIndentation;
- (struct CGRect)textRectForCell:(id)arg1;

@end

@interface TKTonePickerViewController : UITableViewController <TKTonePickerControllerDelegate, TKTonePickerControllerDelegateInternal, TKTonePickerTableViewControllerHelper, TKTonePickerTableViewLayoutMarginsObserver, TKVibrationPickerViewControllerDelegate, TKVibrationPickerViewControllerDismissalDelegate, MPMediaPickerControllerDelegate>
{
    _Bool _showsStoreButtonInNavigationBar;
    _Bool _needsScrollPositionReset;
    _Bool _showsMedia;
    id <TKTonePickerViewControllerDelegate> _delegate;
    TKTonePickerController *_tonePickerController;
    UIImage *_checkmarkImage;
    TKTonePickerTableViewCellLayoutManager *_tableViewCellLayoutManager;
    TKToneClassicsTableViewController *_toneClassicsTableViewController;
    UIBarButtonItem *_storeBarButtonItem;
    TKVibrationPickerViewController *_vibrationPickerViewController;
    id <TKTonePickerStyleProvider> _styleProvider;
    UIView *_defaultSectionHeaderView;
    UIView *_mediaSectionHeaderView;
    NSMutableArray *_regularToneSectionHeaderViews;
    NSMutableArray *_mediaItems;
    MPMediaPickerController *_mediaPickerController;
    MPMusicPlayerController *_storedMusicPlayer;
}

@property(retain, nonatomic, setter=_setStoredMusicPlayer:) MPMusicPlayerController *_storedMusicPlayer; // @synthesize _storedMusicPlayer;
@property(retain, nonatomic, setter=_setMediaPickerController:) MPMediaPickerController *_mediaPickerController; // @synthesize _mediaPickerController;
@property(retain, nonatomic, setter=_setMediaItems:) NSMutableArray *_mediaItems; // @synthesize _mediaItems;
@property(nonatomic) _Bool showsMedia; // @synthesize showsMedia=_showsMedia;
@property(nonatomic, setter=_setNeedsScrollPositionReset:) _Bool _needsScrollPositionReset; // @synthesize _needsScrollPositionReset;
@property(retain, nonatomic, setter=_setRegularToneSectionHeaderViews:) NSMutableArray *_regularToneSectionHeaderViews; // @synthesize _regularToneSectionHeaderViews;
@property(retain, nonatomic, setter=_setMediaSectionHeaderView:) UIView *_mediaSectionHeaderView; // @synthesize _mediaSectionHeaderView;
@property(retain, nonatomic, setter=_setDefaultSectionHeaderView:) UIView *_defaultSectionHeaderView; // @synthesize _defaultSectionHeaderView;
@property(retain, nonatomic, setter=_setStyleProvider:) id <TKTonePickerStyleProvider> _styleProvider; // @synthesize _styleProvider;
@property(retain, nonatomic, setter=_setVibrationPickerViewController:) TKVibrationPickerViewController *_vibrationPickerViewController; // @synthesize _vibrationPickerViewController;
@property(retain, nonatomic, setter=_setStoreBarButtonItem:) UIBarButtonItem *_storeBarButtonItem; // @synthesize _storeBarButtonItem;
@property(nonatomic, setter=_setShowsStoreButtonInNavigationBar:) _Bool _showsStoreButtonInNavigationBar; // @synthesize _showsStoreButtonInNavigationBar;
@property(retain, nonatomic, setter=_setToneClassicsTableViewController:) TKToneClassicsTableViewController *_toneClassicsTableViewController; // @synthesize _toneClassicsTableViewController;
@property(retain, nonatomic, setter=_setTableViewCellLayoutManager:) TKTonePickerTableViewCellLayoutManager *_tableViewCellLayoutManager; // @synthesize _tableViewCellLayoutManager;
@property(retain, nonatomic, setter=_setCheckmarkImage:) UIImage *_checkmarkImage; // @synthesize _checkmarkImage;
@property(retain, nonatomic, setter=_setTonePickerController:) TKTonePickerController *_tonePickerController; // @synthesize _tonePickerController;
@property(nonatomic) id <TKTonePickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)vibrationPickerViewControllerWasDismissed:(id)arg1;
- (void)vibrationPickerViewController:(id)arg1 selectedVibrationWithIdentifier:(id)arg2;
- (void)tonePickerControllerRequestsPresentingVibrationPicker:(id)arg1;
- (void)tonePickerControllerRequestsPresentingToneStore:(id)arg1;
- (void)tonePickerController:(id)arg1 requestsPresentingToneClassicsPickerForItem:(id)arg2;
- (void)tonePickerControllerDidStopPlaying:(id)arg1 withFadeOutDuration:(double)arg2;
- (void)tonePickerControllerRequestsPresentingMediaItemPicker:(id)arg1;
- (void)tonePickerController:(id)arg1 didSelectMediaItemAtIndex:(unsigned long long)arg2 selectionDidChange:(_Bool)arg3;
- (unsigned long long)tonePickerController:(id)arg1 indexOfMediaItemWithIdentifier:(id)arg2;
- (id)tonePickerController:(id)arg1 titleOfMediaItemAtIndex:(unsigned long long)arg2;
- (id)tonePickerController:(id)arg1 identifierOfMediaItemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfMediaItemsInTonePickerController:(id)arg1;
- (void)tonePickerControllerRequestsMediaItemsRefresh:(id)arg1;
- (_Bool)tonePickerControllerShouldShowMedia:(id)arg1;
- (void)tonePickerController:(id)arg1 selectedMediaItemWithIdentifier:(id)arg2;
- (void)tonePickerController:(id)arg1 selectedToneWithIdentifier:(id)arg2;
- (void)tonePickerController:(id)arg1 didUpdateDetailText:(id)arg2 ofTonePickerItem:(id)arg3;
- (void)tonePickerController:(id)arg1 didUpdateCheckedStatus:(_Bool)arg2 ofTonePickerItem:(id)arg3;
- (void)tonePickerControllerDidReloadTones:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)layoutMarginsDidChangeInTonePickerTableView:(id)arg1;
- (void)tonePickerTableViewControllerWillBeDeallocated:(id)arg1;
- (void)tonePickerTableViewWillDisappear:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 forPickerRowItem:(id)arg3;
- (void)updateCell:(id)arg1 withDetailText:(id)arg2;
- (void)updateCell:(id)arg1 withCheckedStatus:(_Bool)arg2;
- (void)tableView:(id)arg1 updateCell:(id)arg2 withSeparatorForPickerRowItem:(id)arg3;
- (id)selectedTonePickerItem;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forPickerRowItem:(id)arg3;
- (id)tableView:(id)arg1 cellForPickerRowItem:(id)arg2;
- (void)loadViewForTonePickerTableViewController:(id)arg1;
- (void)mediaPicker:(id)arg1 didPickMediaItems:(id)arg2;
- (void)mediaPickerDidCancel:(id)arg1;
- (void)_playMediaItemWithIdentifier:(id)arg1;
- (void)_togglePlayMediaItemWithIdentifier:(id)arg1;
@property(readonly, nonatomic) MPMusicPlayerController *_musicPlayer;
- (void)_didSelectMediaItemWithIdentifier:(id)arg1;
- (id)_mediaItemForIdentifier:(id)arg1;
- (unsigned long long)_addMediaIdentifierToList:(id)arg1;
- (void)removeMediaItems:(id)arg1;
- (void)addMediaItems:(id)arg1;
@property(copy, nonatomic) NSNumber *selectedMediaIdentifier;
- (id)selectedIdentifier:(_Bool *)arg1;
@property(nonatomic, getter=isMediaAtTop) _Bool mediaAtTop;
- (void)_handleMediaLibraryDidChangeNotification;
- (void)_resetScrollingPosition;
- (void)_reloadData;
- (id)_pickerRowItemForIndexPath:(id)arg1;
- (void)_configureTextColorOfLabelInCell:(id)arg1 checked:(_Bool)arg2;
- (void)_didSelectToneWithIdentifier:(id)arg1;
- (void)_goToStore;
- (void)_updateMinimumTextIndentation;
- (double)_minimumTextIndentationForTableView:(id)arg1 withCheckmarkImage:(id)arg2;
- (void)_getTitle:(id *)arg1 customHeaderView:(id *)arg2 forHeaderInSection:(long long)arg3;
- (void)applicationWillSuspend;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)_updateStyleOfTableView:(id)arg1 forStyleProvider:(id)arg2;
@property(retain, nonatomic) id <TKTonePickerStyleProvider> styleProvider;
@property(copy, nonatomic) NSString *selectedVibrationIdentifier;
@property(nonatomic) _Bool showsVibrations;
- (void)_configureNavigationBarIfNeeded;
@property(nonatomic) _Bool showsStoreButtonInNavigationBar;
@property(copy, nonatomic) NSString *selectedToneIdentifier;
@property(nonatomic) _Bool showsNothingSelected;
@property(copy, nonatomic) NSString *noneString;
@property(nonatomic, getter=isNoneAtTop) _Bool noneAtTop;
@property(nonatomic) _Bool showsNone;
@property(copy, nonatomic) NSString *defaultToneIdentifier;
@property(nonatomic) _Bool showsDefault;
@property(copy, nonatomic) NSString *accountIdentifier;
@property(readonly, nonatomic) int alertType;
- (void)dealloc;
- (id)initWithAlertType:(int)arg1;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKVibrationInterfaceUtilities : NSObject
{
}

+ (id)descriptionForDuration:(double)arg1;
+ (_Bool)vibrationNameTextField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
+ (void)configureVibrationNameTextField:(id)arg1;

@end

@interface TKVibrationPickerTableViewCell : TKPickerTableViewCell <UITextFieldDelegate>
{
    _Bool _editable;
    id <TKVibrationPickerTableViewCellDelegate> _delegate;
    UIColor *_regularTextColor;
    UITextField *_removableTextField;
}

@property(retain, nonatomic, setter=_setRemovableTextField:) UITextField *_removableTextField; // @synthesize _removableTextField;
@property(retain, nonatomic) UIColor *regularTextColor; // @synthesize regularTextColor=_regularTextColor;
@property(nonatomic, getter=isEditable) _Bool editable; // @synthesize editable=_editable;
@property(nonatomic) id <TKVibrationPickerTableViewCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)_makeRemovableTextFieldEditable:(_Bool)arg1;
- (void)willTransitionToState:(unsigned long long)arg1;
- (void)didTransitionToState:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)_layoutRemovableTextField;
- (void)makeTextFieldResignFirstResponderIfNeeded;
@property(readonly, nonatomic, getter=_isDisplayingRemovableTextField) _Bool _displayingRemovableTextField;
@property(nonatomic, getter=isChecked) _Bool checked;
@property(retain, nonatomic) UIColor *highlightedTextColor;
@property(retain, nonatomic) UIFont *regularTextFont;
@property(retain, nonatomic) NSString *placeholderText;
@property(retain, nonatomic) NSString *labelText;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKVibrationPickerViewController : UITableViewController <TKVibrationPickerTableViewCellDelegate, TKVibrationRecorderViewControllerDelegate, UINavigationControllerDelegate>
{
    int _alertType;
    _Bool _showsDefault;
    _Bool _showsUserGenerated;
    _Bool _showsNone;
    _Bool _showsNothingSelected;
    _Bool _showsEditButtonAtRightSideOfCurrentNavigationController;
    _Bool _allowsDeletingDefaultVibration;
    NSString *_noneString;
    NSIndexPath *_selectedVibrationIndexPath;
    _Bool _canEnterEditingMode;
    _Bool _vibrating;
    _Bool _viewHasAppearedAtLeastOnce;
    _Bool _isCallingParentViewController;
    _Bool _swipeToDeleteMode;
    _Bool _skipNextUserGeneratedVibrationsDidChangeNotification;
    TLVibrationManager *_vibrationManager;
    TKVibratorController *_vibratorController;
    id <TKVibrationPickerViewControllerDelegate> _delegate;
    NSTimer *_vibrationShouldStopTimer;
    NSArray *_sortedVibrationIdentifiers;
    NSArray *_sortedUserGeneratedVibrationIdentifiers;
    _Bool _defaultVibrationIdentifierWasExplicitlySet;
    _Bool _showsEditButtonInNavigationBar;
    _Bool _shouldForceShowingAllAvailableSections;
    NSString *_accountIdentifier;
    id <TKVibrationPickerViewControllerDelegate> _additionalDelegate;
    id <TKVibrationPickerViewControllerDismissalDelegate> _dismissalDelegate;
    NSString *_defaultVibrationIdentifier;
    NSIndexPath *_indexPathOfCellBeingDeleted;
    id <TKVibrationPickerStyleProvider> _styleProvider;
    TKLabelContainerView *_defaultSectionHeaderView;
    TKLabelContainerView *_systemSectionHeaderView;
    TKLabelContainerView *_userGeneratedSectionHeaderView;
}

@property(retain, nonatomic, setter=_setUserGeneratedSectionHeaderView:) TKLabelContainerView *_userGeneratedSectionHeaderView; // @synthesize _userGeneratedSectionHeaderView;
@property(retain, nonatomic, setter=_setSystemSectionHeaderView:) TKLabelContainerView *_systemSectionHeaderView; // @synthesize _systemSectionHeaderView;
@property(retain, nonatomic, setter=_setDefaultSectionHeaderView:) TKLabelContainerView *_defaultSectionHeaderView; // @synthesize _defaultSectionHeaderView;
@property(nonatomic, setter=_setShouldForceShowingAllAvailableSections:) _Bool _shouldForceShowingAllAvailableSections; // @synthesize _shouldForceShowingAllAvailableSections;
@property(retain, nonatomic, setter=_setStyleProvider:) id <TKVibrationPickerStyleProvider> _styleProvider; // @synthesize _styleProvider;
@property(retain, nonatomic, setter=_setIndexPathOfCellBeingDeleted:) NSIndexPath *_indexPathOfCellBeingDeleted; // @synthesize _indexPathOfCellBeingDeleted;
@property(nonatomic) _Bool allowsDeletingDefaultVibration; // @synthesize allowsDeletingDefaultVibration=_allowsDeletingDefaultVibration;
@property(nonatomic) _Bool showsEditButtonInNavigationBar; // @synthesize showsEditButtonInNavigationBar=_showsEditButtonInNavigationBar;
@property(nonatomic) _Bool showsNothingSelected; // @synthesize showsNothingSelected=_showsNothingSelected;
@property(retain, nonatomic) NSString *noneString; // @synthesize noneString=_noneString;
@property(nonatomic) _Bool showsNone; // @synthesize showsNone=_showsNone;
@property(nonatomic) _Bool showsUserGenerated; // @synthesize showsUserGenerated=_showsUserGenerated;
@property(nonatomic, setter=_setDefaultVibrationIdentifierWasExplicitlySet:) _Bool _defaultVibrationIdentifierWasExplicitlySet; // @synthesize _defaultVibrationIdentifierWasExplicitlySet;
@property(copy, nonatomic, setter=_setDefaultVibrationIdentifier:) NSString *_defaultVibrationIdentifier; // @synthesize _defaultVibrationIdentifier;
@property(nonatomic) _Bool showsDefault; // @synthesize showsDefault=_showsDefault;
@property(nonatomic, setter=_setDismissalDelegate:) id <TKVibrationPickerViewControllerDismissalDelegate> _dismissalDelegate; // @synthesize _dismissalDelegate;
@property(nonatomic, setter=_setAdditionalDelegate:) id <TKVibrationPickerViewControllerDelegate> _additionalDelegate; // @synthesize _additionalDelegate;
@property(nonatomic) id <TKVibrationPickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(readonly, nonatomic) int alertType; // @synthesize alertType=_alertType;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_presentVibrationRecorderViewController;
- (void)vibrationPickerTableViewCell:(id)arg1 endedEditingWithText:(id)arg2;
- (void)_stopVibrating;
- (void)_startVibratingWithVibrationIdentifier:(id)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(id)arg1;
- (void)vibrationRecorderViewControllerWasDismissedWithoutSavingRecordedVibrationPattern:(id)arg1;
- (void)vibrationRecorderViewController:(id)arg1 didFinishRecordingVibrationPattern:(id)arg2 name:(id)arg3;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)_getTitle:(id *)arg1 customHeaderView:(id *)arg2 forHeaderInSection:(long long)arg3;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
@property(readonly, nonatomic) long long _sectionForNoneGroup;
@property(readonly, nonatomic) long long _sectionForUserGeneratedGroup;
@property(readonly, nonatomic) long long _sectionForSystemGroup;
@property(readonly, nonatomic) long long _sectionForDefaultGroup;
- (void)_updateSectionVisibilityFlagAtLocation:(_Bool *)arg1 toValue:(_Bool)arg2 sectionIndexGetter:(CDUnknownBlockType)arg3;
- (void)_performBlockForcingShowingAllAvailableSections:(CDUnknownBlockType)arg1;
- (void)_handleError:(id)arg1;
- (void)_handleUserGeneratedVibrationsDidChangeNotification;
- (id)_adjustedNameForVibrationWithDesiredName:(id)arg1 vibrationIdentifier:(id)arg2;
- (void)_updateSelectionStyleForCell:(id)arg1 indexPath:(id)arg2;
- (void)_updateEditButtonItemWithAnimation:(_Bool)arg1;
- (void)_updateEditButtonItem;
- (id)_navigationItem;
- (void)_processSelectionOfVibrationWithIdentifier:(id)arg1;
- (id)_indexPathForVibrationWithIdentifier:(id)arg1;
- (id)_identifierOfVibrationAtIndexPath:(id)arg1;
@property(readonly, nonatomic) NSArray *_sortedUserGeneratedVibrationIdentifiers;
@property(readonly, nonatomic) NSArray *_sortedVibrationIdentifiers;
- (id)_sortedArrayWithVibrationIdentifiers:(id)arg1 allowsDuplicateVibrationNames:(_Bool)arg2;
- (void)applicationWillSuspend;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic) _Bool _showsOnlyEditableSections;
@property(retain, nonatomic, setter=_setSelectedVibrationIndexPathAdjustedForCurrentEditingMode:) NSIndexPath *_selectedVibrationIndexPathAdjustedForCurrentEditingMode;
- (id)_actualIndexPathFromNonEditingIndexPath:(id)arg1;
- (id)_nonEditingIndexPathFromActualIndexPath:(id)arg1;
- (void)_updateStyleOfTableView:(id)arg1 forStyleProvider:(id)arg2;
@property(retain, nonatomic) id <TKVibrationPickerStyleProvider> styleProvider;
- (void)_setSelectedVibrationIdentifier:(id)arg1 processSelectionOfVibrationIdentifier:(_Bool)arg2;
@property(retain, nonatomic) NSString *selectedVibrationIdentifier;
@property(readonly, nonatomic) _Bool canEnterEditingMode;
@property(copy, nonatomic) NSString *defaultVibrationIdentifier;
- (void)dealloc;
- (id)initWithAlertType:(int)arg1;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKVibrationRecorderContentViewController : UIViewController <TKVibrationRecorderViewDelegate, UITextFieldDelegate>
{
    _Bool _waitingForEndOfCurrentVibrationComponent;
    int _mode;
    id <TKVibrationRecorderViewControllerDelegate> _delegate;
    TKVibrationRecorderViewController *_parentVibrationRecorderViewController;
    UIBarButtonItem *_cancelButton;
    UIBarButtonItem *_saveButton;
    UIAlertController *_vibrationNameAlertController;
    UIAlertAction *_vibrationNameAlertSaveAction;
    UITextField *_vibrationNameAlertTextField;
    TKVibratorController *_vibratorController;
    NSDictionary *_indefiniteVibrationPattern;
    TKVibrationRecorderView *_vibrationRecorderView;
    TLVibrationPattern *_recordedVibrationPattern;
    double _currentVibrationComponentDidStartTimeStamp;
    double _currentVibrationProgressDidStartTimestamp;
}

@property(nonatomic, getter=_isWaitingForEndOfCurrentVibrationComponent, setter=_setWaitingForEndOfCurrentVibrationComponent:) _Bool _waitingForEndOfCurrentVibrationComponent; // @synthesize _waitingForEndOfCurrentVibrationComponent;
@property(nonatomic, setter=_setCurrentVibrationProgressDidStartTimestamp:) double _currentVibrationProgressDidStartTimestamp; // @synthesize _currentVibrationProgressDidStartTimestamp;
@property(nonatomic, setter=_setCurrentVibrationComponentDidStartTimeStamp:) double _currentVibrationComponentDidStartTimeStamp; // @synthesize _currentVibrationComponentDidStartTimeStamp;
@property(retain, nonatomic, setter=_setRecordedVibrationPattern:) TLVibrationPattern *_recordedVibrationPattern; // @synthesize _recordedVibrationPattern;
@property(retain, nonatomic, setter=_setVibrationRecorderView:) TKVibrationRecorderView *_vibrationRecorderView; // @synthesize _vibrationRecorderView;
@property(nonatomic, setter=_setMode:) int _mode; // @synthesize _mode;
@property(retain, nonatomic, setter=_setIndefiniteVibrationPattern:) NSDictionary *_indefiniteVibrationPattern; // @synthesize _indefiniteVibrationPattern;
@property(retain, nonatomic, setter=_setVibratorController:) TKVibratorController *_vibratorController; // @synthesize _vibratorController;
@property(retain, nonatomic, setter=_setVibrationNameAlertTextField:) UITextField *_vibrationNameAlertTextField; // @synthesize _vibrationNameAlertTextField;
@property(retain, nonatomic, setter=_setVibrationNameAlertSaveAction:) UIAlertAction *_vibrationNameAlertSaveAction; // @synthesize _vibrationNameAlertSaveAction;
@property(retain, nonatomic, setter=_setVibrationNameAlertController:) UIAlertController *_vibrationNameAlertController; // @synthesize _vibrationNameAlertController;
@property(retain, nonatomic, setter=_setSaveButton:) UIBarButtonItem *_saveButton; // @synthesize _saveButton;
@property(retain, nonatomic, setter=_setCancelButton:) UIBarButtonItem *_cancelButton; // @synthesize _cancelButton;
@property(nonatomic) TKVibrationRecorderViewController *parentVibrationRecorderViewController; // @synthesize parentVibrationRecorderViewController=_parentVibrationRecorderViewController;
@property(nonatomic) id <TKVibrationRecorderViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_accessibilityDidExitReplayMode;
- (void)_accessibilityDidEnterReplayMode;
- (void)_accessibilityDidExitRecordingMode;
- (void)_accessibilityDidEnterRecordingMode;
- (void)_accessibilityMakeAnnouncementWithStringForLocalizationIdentifier:(id)arg1;
- (void)_finishedWithRecorder;
- (void)vibrationRecorderViewDidReachVibrationRecordingMaximumDuration:(id)arg1;
- (void)vibrationRecorderView:(id)arg1 didExitRecordingModeWithContextObject:(id)arg2;
- (_Bool)vibrationRecorderViewDidEnterRecordingMode:(id)arg1;
- (void)vibrationRecorderViewDidFinishReplayingVibration:(id)arg1;
- (void)vibrationRecorderView:(id)arg1 buttonTappedWithIdentifier:(int)arg2;
- (void)vibrationComponentDidEndForVibrationRecorderView:(id)arg1;
- (void)vibrationComponentDidStartForVibrationRecorderView:(id)arg1;
- (void)_eraseCurrentVibrationComponentDidStartTimeStamp;
- (void)_storeVibrationComponentOfTypePause:(_Bool)arg1;
- (void)_stopVibrating;
- (void)_startVibratingWithVibrationPattern:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)_cleanUpVibrationNameAlertController;
- (void)_vibrationNameTextFieldContentsDidChange:(id)arg1;
- (void)_updateStateSaveButtonInAlert;
- (void)_saveButtonInAlertTapped:(id)arg1;
- (void)_cancelButtonInAlertTapped:(id)arg1;
- (void)_saveButtonTapped:(id)arg1;
- (void)_cancelButtonTapped:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)applicationWillSuspend;
- (void)dealloc;
- (id)initWithVibratorController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKVibrationRecorderProgressDotImageView : UIImageView
{
    double _timeInterval;
    double _duration;
    double _previousPauseTimeInterval;
    double _previousPauseDuration;
    double _accessibilityFrameAdditionalHeight;
}

@property(nonatomic) double accessibilityFrameAdditionalHeight; // @synthesize accessibilityFrameAdditionalHeight=_accessibilityFrameAdditionalHeight;
@property(nonatomic) double previousPauseDuration; // @synthesize previousPauseDuration=_previousPauseDuration;
@property(nonatomic) double previousPauseTimeInterval; // @synthesize previousPauseTimeInterval=_previousPauseTimeInterval;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
- (unsigned long long)accessibilityTraits;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityValue;
- (id)accessibilityLabel;
- (_Bool)isAccessibilityElement;

@end

@interface TKVibrationRecorderProgressView : UIView
{
    int _roundedCornersCompensationDelayMode;
    double _currentTimeInterval;
    double _maximumTimeInterval;
    double _currentVibrationComponentDidBeginTimeInterval;
    double _previousPauseDidBeginTimeInterval;
    id <TKVibrationRecorderStyleProvider> _styleProvider;
    UIView *_progressView;
    NSLayoutConstraint *_progressViewWidthConstraint;
    TKVibrationRecorderProgressDotImageView *_dotForCurrentVibrationComponent;
    NSLayoutConstraint *_dotForCurrentVibrationComponentLeftConstraint;
    NSLayoutConstraint *_dotForCurrentVibrationComponentRightConstraint;
    NSMutableArray *_dots;
}

@property(retain, nonatomic, setter=_setDots:) NSMutableArray *_dots; // @synthesize _dots;
@property(retain, nonatomic, setter=_setDotForCurrentVibrationComponentRightConstraint:) NSLayoutConstraint *_dotForCurrentVibrationComponentRightConstraint; // @synthesize _dotForCurrentVibrationComponentRightConstraint;
@property(retain, nonatomic, setter=_setDotForCurrentVibrationComponentLeftConstraint:) NSLayoutConstraint *_dotForCurrentVibrationComponentLeftConstraint; // @synthesize _dotForCurrentVibrationComponentLeftConstraint;
@property(retain, nonatomic, setter=_setDotForCurrentVibrationComponent:) TKVibrationRecorderProgressDotImageView *_dotForCurrentVibrationComponent; // @synthesize _dotForCurrentVibrationComponent;
@property(retain, nonatomic, setter=_setProgressViewWidthConstraint:) NSLayoutConstraint *_progressViewWidthConstraint; // @synthesize _progressViewWidthConstraint;
@property(retain, nonatomic, setter=_setProgressView:) UIView *_progressView; // @synthesize _progressView;
@property(retain, nonatomic, setter=_setStyleProvider:) id <TKVibrationRecorderStyleProvider> _styleProvider; // @synthesize _styleProvider;
@property(nonatomic, setter=_setPreviousPauseDidBeginTimeInterval:) double _previousPauseDidBeginTimeInterval; // @synthesize _previousPauseDidBeginTimeInterval;
@property(nonatomic, setter=_setCurrentVibrationComponentDidBeginTimeInterval:) double _currentVibrationComponentDidBeginTimeInterval; // @synthesize _currentVibrationComponentDidBeginTimeInterval;
@property(nonatomic, setter=_setMaximumTimeInterval:) double _maximumTimeInterval; // @synthesize _maximumTimeInterval;
@property(nonatomic, setter=_setCurrentTimeInterval:) double _currentTimeInterval; // @synthesize _currentTimeInterval;
@property(nonatomic) int roundedCornersCompensationDelayMode; // @synthesize roundedCornersCompensationDelayMode=_roundedCornersCompensationDelayMode;
- (struct CGRect)accessibilityFrame;
- (id)accessibilityValue;
- (id)accessibilityLabel;
- (_Bool)isAccessibilityElement;
- (double)_cappedValueForTimeInterval:(double)arg1;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (struct CGRect)_frameForDotAtTimeInterval:(double)arg1 duration:(double)arg2;
- (void)_updateHorizontalConstraintsOfDotForCurrentVibrationComponent:(id)arg1 withFrame:(struct CGRect)arg2;
- (struct CGSize)intrinsicContentSize;
- (void)clearAllVibrationComponents;
- (void)vibrationComponentDidEnd;
- (void)vibrationComponentDidStart;
@property(readonly, nonatomic) struct UIOffset _dotInsets;
@property(readonly, nonatomic) struct CGSize _dotSize;
@property(readonly, nonatomic) UIImage *_resizableDotImage;
- (void)_updateProgressViewBackgroundColor;
@property(nonatomic) double currentTimeInterval;
- (void)dealloc;
- (id)initWithMaximumTimeInterval:(double)arg1 styleProvider:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface TKVibrationRecorderRippleRingLayer : CAShapeLayer
{
    double _creationTimestamp;
    double _ringSpeed;
    struct CGPoint _normalizedRingLocation;
}

@property(nonatomic, setter=_setRingSpeed:) double _ringSpeed; // @synthesize _ringSpeed;
@property(nonatomic, setter=_setNormalizedRingLocation:) struct CGPoint _normalizedRingLocation; // @synthesize _normalizedRingLocation;
@property(nonatomic, setter=_setCreationTimestamp:) double _creationTimestamp; // @synthesize _creationTimestamp;
- (void)reset;
- (void)configureWithTimeIntervalSinceCreation:(double)arg1 normalizedRingLocation:(struct CGPoint)arg2 ringSpeed:(double)arg3;
- (double)timeIntervalSinceCreation;
@property(readonly, nonatomic) double ringSpeed;
@property(readonly, nonatomic) struct CGPoint normalizedRingLocation;
- (id)init;

@end

@interface TKVibrationRecorderRippleTouchContext : NSObject
{
    double _creationTimestamp;
    struct CGPoint _location;
}

@property(nonatomic, setter=_setLocation:) struct CGPoint _location; // @synthesize _location;
@property(nonatomic, setter=_setCreationTimestamp:) double _creationTimestamp; // @synthesize _creationTimestamp;
- (void)reset;
- (void)configureWithTimeIntervalSinceCreation:(double)arg1 location:(struct CGPoint)arg2;
- (double)timeIntervalSinceCreation;
@property(readonly, nonatomic) struct CGPoint location;
- (id)init;

@end

@interface TKVibrationRecorderRippleView : UIView
{
    _Bool _trackingTouch;
    _Bool _needsCurrentSpeedRefresh;
    _Bool _animating;
    double _fingerStillSpeed;
    double _fingerMovingSpeed;
    double _firstRippleInitialRadius;
    double _fadeOutRadius;
    id <TKVibrationRecorderStyleProvider> _styleProvider;
    double _currentTouchStartTime;
    unsigned long long _numberOfRipplesForCurrentTouch;
    NSMutableArray *_recentTouchesContextQueue;
    NSMutableArray *_reusableTouchContexts;
    double _currentSpeedCoefficient;
    NSMutableArray *_ringLayersQueue;
    NSMutableArray *_reusableRingLayers;
    NSMutableDictionary *_ringLayersByIdentifiers;
    unsigned long long _lastRingLayerIdentifier;
    CAAnimation *_ringEnlargementAnimation;
    struct CGPoint _currentTouchLocation;
}

@property(retain, nonatomic, setter=_setRingEnlargementAnimation:) CAAnimation *_ringEnlargementAnimation; // @synthesize _ringEnlargementAnimation;
@property(nonatomic, setter=_setLastRingLayerIdentifier:) unsigned long long _lastRingLayerIdentifier; // @synthesize _lastRingLayerIdentifier;
@property(retain, nonatomic, setter=_setRingLayersByIdentifiers:) NSMutableDictionary *_ringLayersByIdentifiers; // @synthesize _ringLayersByIdentifiers;
@property(retain, nonatomic, setter=_setReusableRingLayers:) NSMutableArray *_reusableRingLayers; // @synthesize _reusableRingLayers;
@property(retain, nonatomic, setter=_setRingLayersQueue:) NSMutableArray *_ringLayersQueue; // @synthesize _ringLayersQueue;
@property(nonatomic, getter=_isAnimating, setter=_setAnimating:) _Bool _animating; // @synthesize _animating;
@property(nonatomic, setter=_setNeedsCurrentSpeedRefresh:) _Bool _needsCurrentSpeedRefresh; // @synthesize _needsCurrentSpeedRefresh;
@property(nonatomic, setter=_setCurrentSpeedCoefficient:) double _currentSpeedCoefficient; // @synthesize _currentSpeedCoefficient;
@property(retain, nonatomic, setter=_setReusableTouchContexts:) NSMutableArray *_reusableTouchContexts; // @synthesize _reusableTouchContexts;
@property(retain, nonatomic, setter=_setRecentTouchesContextQueue:) NSMutableArray *_recentTouchesContextQueue; // @synthesize _recentTouchesContextQueue;
@property(nonatomic, getter=_isTrackingTouch, setter=_setTrackingTouch:) _Bool _trackingTouch; // @synthesize _trackingTouch;
@property(nonatomic, setter=_setNumberOfRipplesForCurrentTouch:) unsigned long long _numberOfRipplesForCurrentTouch; // @synthesize _numberOfRipplesForCurrentTouch;
@property(nonatomic, setter=_setCurrentTouchStartTime:) double _currentTouchStartTime; // @synthesize _currentTouchStartTime;
@property(nonatomic, setter=_setCurrentTouchLocation:) struct CGPoint _currentTouchLocation; // @synthesize _currentTouchLocation;
@property(retain, nonatomic, setter=_setStyleProvider:) id <TKVibrationRecorderStyleProvider> _styleProvider; // @synthesize _styleProvider;
@property(nonatomic) double fadeOutRadius; // @synthesize fadeOutRadius=_fadeOutRadius;
@property(nonatomic) double firstRippleInitialRadius; // @synthesize firstRippleInitialRadius=_firstRippleInitialRadius;
@property(nonatomic) double fingerMovingSpeed; // @synthesize fingerMovingSpeed=_fingerMovingSpeed;
@property(nonatomic) double fingerStillSpeed; // @synthesize fingerStillSpeed=_fingerStillSpeed;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_touchEndedAtLocation:(struct CGPoint)arg1;
- (void)_touchMovedToLocation:(struct CGPoint)arg1;
- (void)_touchBeganAtLocation:(struct CGPoint)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)layoutSubviews;
- (void)_updateRingEnlargementAnimation;
- (void)_enqueueReusableRingLayer:(id)arg1;
- (id)_reusableRingLayer;
- (void)_enqueueRingLayerWithTimeIntervalSinceCreation:(double)arg1 normalizedLocation:(struct CGPoint)arg2 speed:(double)arg3;
- (void)_stopAnimation;
- (void)_startAnimation;
- (void)_enqueueReusableTouchContextObject:(id)arg1;
- (id)_reusableTouchContextObject;
@property(readonly, nonatomic) double _currentSpeed;
- (void)_refresh:(id)arg1;
@property(readonly, nonatomic, getter=_isTouchDown) _Bool _touchDown;
- (void)dealloc;
- (id)initWithStyleProvider:(id)arg1;
- (id)init;

@end

@interface TKVibrationRecorderTouchSurface : TKVibrationRecorderRippleView
{
    _Bool _recordingModeEnabled;
    _Bool _shouldIgnoreCurrentTouch;
    _Bool _replayModeEnabled;
    id <TKVibrationRecorderTouchSurfaceDelegate> _delegate;
    double _vibrationPatternMaximumDuration;
    TKVibrationRecorderTouchSurfaceRecordedDataWrapper *_recordedDataWrapper;
    TLVibrationPattern *_vibrationPatternToReplay;
    double _replayModeWasEnteredStartTime;
}

@property(nonatomic, setter=_setReplayModeWasEnteredStartTime:) double _replayModeWasEnteredStartTime; // @synthesize _replayModeWasEnteredStartTime;
@property(retain, nonatomic, setter=_setVibrationPatternToReplay:) TLVibrationPattern *_vibrationPatternToReplay; // @synthesize _vibrationPatternToReplay;
@property(nonatomic, getter=_isReplayModeEnabled, setter=_setReplayModeEnabled:) _Bool _replayModeEnabled; // @synthesize _replayModeEnabled;
@property(nonatomic, setter=_setShouldIgnoreCurrentTouch:) _Bool _shouldIgnoreCurrentTouch; // @synthesize _shouldIgnoreCurrentTouch;
@property(retain, nonatomic, setter=_setRecordedDataWrapper:) TKVibrationRecorderTouchSurfaceRecordedDataWrapper *_recordedDataWrapper; // @synthesize _recordedDataWrapper;
@property(nonatomic, setter=_setVibrationPatternMaximumDuration:) double _vibrationPatternMaximumDuration; // @synthesize _vibrationPatternMaximumDuration;
@property(nonatomic, getter=_isRecordingModeEnabled, setter=_setRecordingModeEnabled:) _Bool _recordingModeEnabled; // @synthesize _recordingModeEnabled;
@property(nonatomic) id <TKVibrationRecorderTouchSurfaceDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_updateTouchLocationForReplayMode:(id)arg1;
- (void)exitReplayMode;
- (void)enterReplayModeWithVibrationPattern:(id)arg1;
- (void)_recordTouchLocation:(struct CGPoint)arg1 touchPhase:(int)arg2;
- (void)currentVibrationComponentShouldEnd;
- (void)exitRecordingMode;
- (void)enterRecordingMode;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithVibrationPatternMaximumDuration:(double)arg1 styleProvider:(id)arg2;
- (id)init;

@end

@interface TKVibrationRecorderTouchSurfaceRecordedDataWrapper : NSObject
{
    _Bool _warmUpModeEnabled;
    _Bool _displayLinkHasRefreshedAtLeastOnce;
    double _vibrationPatternMaximumDuration;
    double _vibrationPatternDidStartTimestamp;
    unsigned long long _maximumFramesPerSecondRate;
    void *_recordedData;
    unsigned long long _recordedDataElementsCount;
    unsigned long long _recordedDataCursor;
    double _warmUpModeDidStartTimestamp;
}

@property(nonatomic, setter=_setDisplayLinkHasRefreshedAtLeastOnce:) _Bool _displayLinkHasRefreshedAtLeastOnce; // @synthesize _displayLinkHasRefreshedAtLeastOnce;
@property(nonatomic, setter=_setWarmUpModeDidStartTimestamp:) double _warmUpModeDidStartTimestamp; // @synthesize _warmUpModeDidStartTimestamp;
@property(nonatomic, getter=_isWarmUpModeEnabled, setter=_setWarmUpModeEnabled:) _Bool _warmUpModeEnabled; // @synthesize _warmUpModeEnabled;
@property(nonatomic, setter=_setRecordedDataCursor:) unsigned long long _recordedDataCursor; // @synthesize _recordedDataCursor;
@property(nonatomic, setter=_setRecordedDataElementsCount:) unsigned long long _recordedDataElementsCount; // @synthesize _recordedDataElementsCount;
@property(nonatomic, setter=_setRecordedData:) void *_recordedData; // @synthesize _recordedData;
@property(nonatomic, setter=_setMaximumFramesPerSecondRate:) unsigned long long _maximumFramesPerSecondRate; // @synthesize _maximumFramesPerSecondRate;
@property(nonatomic, setter=_setVibrationPatternDidStartTimestamp:) double _vibrationPatternDidStartTimestamp; // @synthesize _vibrationPatternDidStartTimestamp;
@property(nonatomic, setter=_setVibrationPatternMaximumDuration:) double _vibrationPatternMaximumDuration; // @synthesize _vibrationPatternMaximumDuration;
- (void)_updateMaximumFramesPerSecondRate:(id)arg1;
- (_Bool)getNormalizedTouchLocation:(struct CGPoint *)arg1 touchPhase:(int *)arg2 forTimeInterval:(double)arg3;
- (void)didStopRecording;
- (void)recordNormalizedTouchLocation:(struct CGPoint)arg1 touchPhase:(int)arg2;
- (void)_recordFinalDataWithNormalizedTouchLocation:(struct CGPoint)arg1 touchPhase:(int)arg2 timeIntervalSinceBeginningOfPattern:(double)arg3;
- (void)_prepareRecordedDataBufferForStoringEnoughElementsForRecordingDuration:(double)arg1;
- (void)dealloc;
- (id)initWithVibrationPatternMaximumDuration:(double)arg1;

@end

@interface TKVibrationRecorderView : UIView <TKVibrationRecorderTouchSurfaceDelegate>
{
    _Bool _replayModeEnabled;
    _Bool _waitingForEndOfCurrentVibrationComponent;
    _Bool _animatingProgress;
    int _leftButtonIdentifier;
    int _rightButtonIdentifier;
    id <TKVibrationRecorderViewDelegate> _delegate;
    id <TKVibrationRecorderStyleProvider> _styleProvider;
    UILabel *_instructionsLabel;
    UIToolbar *_controlsToolbar;
    TKVibrationRecorderProgressView *_progressView;
    TKVibrationRecorderTouchSurface *_touchSurface;
    NSLayoutConstraint *_controlsToolbarTopConstraint;
    NSLayoutConstraint *_progressToolbarBottomConstraint;
    NSLayoutConstraint *_touchSurfaceTopConstraint;
    double _vibrationPatternMaximumDuration;
    double _currentVibrationProgressDidStartTimestamp;
    double _currentVibrationComponentDidStartTimestamp;
}

@property(nonatomic, getter=_isAnimatingProgress, setter=_setAnimatingProgress:) _Bool _animatingProgress; // @synthesize _animatingProgress;
@property(nonatomic, getter=_isWaitingForEndOfCurrentVibrationComponent, setter=_setWaitingForEndOfCurrentVibrationComponent:) _Bool _waitingForEndOfCurrentVibrationComponent; // @synthesize _waitingForEndOfCurrentVibrationComponent;
@property(nonatomic, setter=_setCurrentVibrationComponentDidStartTimestamp:) double _currentVibrationComponentDidStartTimestamp; // @synthesize _currentVibrationComponentDidStartTimestamp;
@property(nonatomic, setter=_setCurrentVibrationProgressDidStartTimestamp:) double _currentVibrationProgressDidStartTimestamp; // @synthesize _currentVibrationProgressDidStartTimestamp;
@property(nonatomic, setter=_setVibrationPatternMaximumDuration:) double _vibrationPatternMaximumDuration; // @synthesize _vibrationPatternMaximumDuration;
@property(nonatomic, getter=_isReplayModeEnabled, setter=_setReplayModeEnabled:) _Bool _replayModeEnabled; // @synthesize _replayModeEnabled;
@property(nonatomic, setter=_setRightButtonIdentifier:) int _rightButtonIdentifier; // @synthesize _rightButtonIdentifier;
@property(nonatomic, setter=_setLeftButtonIdentifier:) int _leftButtonIdentifier; // @synthesize _leftButtonIdentifier;
@property(retain, nonatomic, setter=_setTouchSurfaceTopConstraint:) NSLayoutConstraint *_touchSurfaceTopConstraint; // @synthesize _touchSurfaceTopConstraint;
@property(retain, nonatomic, setter=_setProgressToolbarBottomConstraint:) NSLayoutConstraint *_progressToolbarBottomConstraint; // @synthesize _progressToolbarBottomConstraint;
@property(retain, nonatomic, setter=_setControlsToolbarTopConstraint:) NSLayoutConstraint *_controlsToolbarTopConstraint; // @synthesize _controlsToolbarTopConstraint;
@property(retain, nonatomic, setter=_setTouchSurface:) TKVibrationRecorderTouchSurface *_touchSurface; // @synthesize _touchSurface;
@property(retain, nonatomic, setter=_setProgressView:) TKVibrationRecorderProgressView *_progressView; // @synthesize _progressView;
@property(retain, nonatomic, setter=_setControlsToolbar:) UIToolbar *_controlsToolbar; // @synthesize _controlsToolbar;
@property(retain, nonatomic, setter=_setInstructionsLabel:) UILabel *_instructionsLabel; // @synthesize _instructionsLabel;
@property(retain, nonatomic, setter=_setStyleProvider:) id <TKVibrationRecorderStyleProvider> _styleProvider; // @synthesize _styleProvider;
@property(nonatomic) id <TKVibrationRecorderViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)vibrationRecorderTouchSurface:(id)arg1 didExitRecordingModeWithContextObject:(id)arg2;
- (_Bool)vibrationRecorderTouchSurfaceDidEnterRecordingMode:(id)arg1;
- (void)vibrationRecorderTouchSurfaceDidFinishReplayingVibration:(id)arg1;
- (void)vibrationComponentDidEndForVibrationRecorderTouchSurface:(id)arg1;
- (void)vibrationComponentDidStartForVibrationRecorderTouchSurface:(id)arg1;
- (void)navigationController:(id)arg1 willRotateToInterfaceOrientation:(long long)arg2 duration:(double)arg3;
- (void)wasAddedToNavigationController:(id)arg1;
- (void)didMoveToWindow;
- (void)_updateProgress:(id)arg1;
- (void)stopAnimatingProgress;
- (void)startAnimatingProgress;
- (void)exitReplayMode;
- (void)enterReplayModeWithVibrationPattern:(id)arg1;
- (void)exitRecordingModeWithPlayButtonEnabled:(_Bool)arg1;
- (void)enterRecordingMode;
- (void)_exitWaitingModeWithAnimation:(_Bool)arg1;
- (void)_enterWaitingModeWithAnimation:(_Bool)arg1 enablePlayButton:(_Bool)arg2;
- (void)_handleRightButtonTapped:(id)arg1;
- (void)_handleLeftButtonTapped:(id)arg1;
- (void)_setLeftButtonIdentifier:(int)arg1 enabled:(_Bool)arg2 rightButtonIdentifier:(int)arg3 enabled:(_Bool)arg4 animated:(_Bool)arg5;
- (id)_titleForControlsToolbarButtonWithIdentifier:(int)arg1;
- (void)dealloc;
- (id)initWithVibrationPatternMaximumDuration:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TKVibrationRecorderViewController : UINavigationController
{
    TKVibrationRecorderContentViewController *_vibrationRecorderContentViewController;
}

@property(retain, nonatomic, setter=_setVibrationRecorderContentViewController:) TKVibrationRecorderContentViewController *_vibrationRecorderContentViewController; // @synthesize _vibrationRecorderContentViewController;
@property(nonatomic) id <TKVibrationRecorderViewControllerDelegate> vibrationRecorderViewControllerDelegate;
- (void)dealloc;
- (id)initWithVibratorController:(id)arg1;

@end

@interface TKVibratorController : NSObject
{
}

- (void)turnOff;
- (void)turnOnWithVibrationPattern:(id)arg1;

@end

@interface UIResponder (TKExtensions)
- (id)tk_firstViewControllerInResponderChain;
@end

@interface UIView (TKConstraintBasedLayout)
- (id)_tk_autolayoutTrace;
- (id)_tk_recursiveAutolayoutTraceAtLevel:(long long)arg1 anyDescendantHasAmbiguousLayout:(_Bool *)arg2;
- (id)tk_firstCommonAncestorWithView:(id)arg1;
- (unsigned long long)_tl_depth;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 relatedBy:(long long)arg2 toItem:(id)arg3 attribute:(long long)arg4 multiplier:(double)arg5 constant:(double)arg6;
- (void)tk_constrainLayoutAttribute:(long long)arg1 relatedBy:(long long)arg2 toItem:(id)arg3 attribute:(long long)arg4 multiplier:(double)arg5 constant:(double)arg6;
- (id)tk_addedConstraintFotLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asGreaterThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asLessThanOrEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withMultiplier:(double)arg4;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withMultiplier:(double)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2;
- (id)tk_addedConstraintForLayoutAttribute:(long long)arg1 asEqualToConstant:(double)arg2;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withMultiplier:(double)arg4;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withMultiplier:(double)arg3;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3 withOffset:(double)arg4;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToLayoutAttribute:(long long)arg2 ofView:(id)arg3;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2 withOffset:(double)arg3;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToValueOfView:(id)arg2;
- (void)tk_constrainLayoutAttribute:(long long)arg1 asEqualToConstant:(double)arg2;
@end

