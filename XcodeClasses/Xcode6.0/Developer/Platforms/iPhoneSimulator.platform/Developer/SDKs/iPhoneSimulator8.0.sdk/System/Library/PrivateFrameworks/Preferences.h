//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
} CDStruct_d8808cea;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/Preferences.framework/Preferences
// UUID: 74B00FA1-6966-3732-8A2A-97E35D86860D
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2345.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CommerceRemoteUIDelegateDelegate <NSObject>
- (void)commerceDelegateDidCancel:(CommerceRemoteUIDelegate *)arg1;
- (void)commerceDelegate:(CommerceRemoteUIDelegate *)arg1 loadDidFailWithError:(NSError *)arg2;
- (void)commerceDelegate:(CommerceRemoteUIDelegate *)arg1 willPresentObjectModel:(RUIObjectModel *)arg2 page:(RUIPage *)arg3;
@end

@protocol KeychainSyncPasscodeFieldDelegate <NSObject>
- (void)passcodeField:(PasscodeFieldCell *)arg1 didUpdateEnteredPasscode:(NSString *)arg2;
@end

@protocol KeychainSyncPhoneSettingsFragmentDelegate <NSObject>
- (void)phoneSettingsFragment:(KeychainSyncPhoneSettingsFragment *)arg1 didChangePhoneNumber:(NSString *)arg2 countryInfo:(KeychainSyncCountryInfo *)arg3;
@end

@protocol KeychainSyncViewController
- (void)setDelegate:(id <KeychainSyncViewControllerDelegate>)arg1;
@end

@protocol KeychainSyncViewControllerDelegate <NSObject>
- (void)keychainSyncController:(UIViewController<PSController> *)arg1 didFinishWithResult:(id)arg2 error:(NSError *)arg3;

@optional
- (void)keychainSyncControllerCancel:(UIViewController<PSController> *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol PINEntryView <UITextFieldDelegate>
- (void)setBlocked:(_Bool)arg1;
- (void)hideFailedAttempts;
- (void)showFailedAttempts:(long long)arg1;
- (void)setDelegate:(id <PSPINEntryViewDelegate>)arg1;
- (_Bool)becomeFirstResponder;
- (void)hidePasscodeField:(_Bool)arg1;
- (void)appendString:(NSString *)arg1;
- (void)deleteLastCharacter;
- (void)setStringValue:(NSString *)arg1;
- (NSString *)stringValue;
- (void)setTitle:(NSString *)arg1 font:(UIFont *)arg2;
- (void)hideError;
- (void)setPINPolicyString:(NSString *)arg1 visible:(_Bool)arg2;
- (void)showError:(NSString *)arg1 animate:(_Bool)arg2;
- (void)setTextFieldKeyboardAppearance:(long long)arg1;
- (void)setTextFieldKeyboardType:(long long)arg1;
@end

@protocol PSController <PSStateRestoration>
- (void)statusBarWillAnimateByHeight:(double)arg1;
- (void)willBecomeActive;
- (void)willResignActive;
- (id)readPreferenceValue:(PSSpecifier *)arg1;
- (void)setPreferenceValue:(id)arg1 specifier:(PSSpecifier *)arg2;
- (void)handleURL:(NSDictionary *)arg1;
- (void)showController:(UIViewController *)arg1 animate:(_Bool)arg2;
- (void)showController:(UIViewController *)arg1;
- (void)didWake;
- (void)didUnlock;
- (void)willUnlock;
- (void)didLock;
- (void)suspend;
- (PSSpecifier *)specifier;
- (void)setSpecifier:(PSSpecifier *)arg1;
- (PSRootController *)rootController;
- (void)setRootController:(PSRootController *)arg1;
- (UIViewController<PSController> *)parentController;
- (void)setParentController:(UIViewController<PSController> *)arg1;

@optional
+ (NSBundle *)searchBundle;
+ (void)formatSearchEntries:(NSMutableArray *)arg1 parent:(PSSearchEntry *)arg2;
+ (void)validateSpecifier:(PSSpecifier *)arg1;
- (void)highlightSpecifierWithID:(NSString *)arg1;
- (_Bool)prepareHandlingURLForSpecifierID:(NSString *)arg1 resourceDictionary:(NSDictionary *)arg2 animatePush:(_Bool *)arg3;
- (void)pushController:(UIViewController *)arg1 animate:(_Bool)arg2;
- (void)pushController:(UIViewController *)arg1;
@end

@protocol PSHeaderFooterView
- (UIView<PSHeaderFooterView> *)initWithSpecifier:(PSSpecifier *)arg1;

@optional
- (double)preferredHeightForWidth:(double)arg1 inTableView:(UITableView *)arg2;
- (double)preferredHeightForWidth:(double)arg1;
@end

@protocol PSPINEntryViewDelegate <NSObject>
- (void)pinView:(id <PINEntryView>)arg1 pinEntered:(NSString *)arg2;
- (void)pinView:(id <PINEntryView>)arg1 pinValueChanged:(NSString *)arg2;
@end

@protocol PSPasscodeFieldDelegate
- (void)passcodeField:(PSPasscodeField *)arg1 enteredPasscode:(NSString *)arg2;
@end

@protocol PSSearchIndexOperationDelegate <PSSpecifierObserver>
- (void)searchIndexOperationDidFinish:(PSSearchIndexOperation *)arg1 searchEntries:(NSArray *)arg2;
- (void)searchIndexOperation:(PSSearchIndexOperation *)arg1 didFindSpecifierDataSource:(id <PSSpecifierDataSource>)arg2;

@optional
- (void)searchIndexOperationDidCancel:(PSSearchIndexOperation *)arg1;
@end

@protocol PSSearchModelDataSource <NSObject>
- (NSArray *)rootSpecifiersForSearchModel:(PSSearchModel *)arg1;

@optional
- (Class)rootSearchControllerClassForSearchModel:(PSSearchModel *)arg1;
@end

@protocol PSSearchModelDelegate <NSObject>
- (void)searchModel:(PSSearchModel *)arg1 updatedWithNewResults:(PSSearchResults *)arg2 forQuery:(NSString *)arg3;

@optional
- (void)searchModelDidFinishIndexing:(PSSearchModel *)arg1;
- (void)searchModelWillBeginIndexing:(PSSearchModel *)arg1;
@end

@protocol PSSearchOperationDelegate <NSObject>
- (void)searchOperationDidCancel:(PSSearchOperation *)arg1;
- (void)searchOperationDidFinish:(PSSearchOperation *)arg1 withResults:(PSSearchResults *)arg2;
- (void)searchOperation:(PSSearchOperation *)arg1 configureSearchResults:(PSSearchResults *)arg2;
- (NSSet *)searchOperation:(PSSearchOperation *)arg1 filteredEntriesForEntries:(NSSet *)arg2;
- (void)searchOperationDidBegin:(PSSearchOperation *)arg1;
@end

@protocol PSSettingsBoolDetail <PSSettingsDetail>
+ (void)setEnabled:(_Bool)arg1;
+ (_Bool)isEnabled;
@end

@protocol PSSettingsDetail <PSSettingsLink>
+ (UIImage *)iconImage;
@end

@protocol PSSettingsLink <NSObject>
+ (NSURL *)preferencesURL;
@end

@protocol PSSpecifierDataSource <NSObject>
+ (id)sharedInstance;
- (NSArray *)specifiersForSpecifier:(PSSpecifier *)arg1 observer:(id <PSSpecifierObserver>)arg2;
- (void)removeObserver:(id <PSSpecifierObserver>)arg1;
- (void)addObserver:(id <PSSpecifierObserver>)arg1;
@end

@protocol PSSpecifierGroupController <NSObject>
- (NSArray *)specifiers;
- (id)initWithListController:(PSListController *)arg1 groupSpecifier:(PSSpecifier *)arg2;
@end

@protocol PSSpecifierObserver <NSObject>
@property(readonly, nonatomic) long long observerType;
- (void)invalidateSpecifiersForDataSource:(id <PSSpecifierDataSource>)arg1;
- (void)dataSource:(id <PSSpecifierDataSource>)arg1 performUpdates:(PSSpecifierUpdates *)arg2;
@end

@protocol PSStateRestoration <NSObject>
- (_Bool)canBeShownFromSuspendedState;
@end

@protocol PSViewControllerOffsetProtocol
- (float)verticalContentOffset;
- (void)setDesiredVerticalContentOffsetItemNamed:(NSString *)arg1;
- (void)setDesiredVerticalContentOffset:(float)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UIKeyInput <UITextInputTraits>
- (void)deleteBackward;
- (void)insertText:(NSString *)arg1;
- (_Bool)hasText;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextContentViewDelegate <NSObject>

@optional
- (void)textContentView:(UITextContentView *)arg1 didChangeSize:(struct CGSize)arg2;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldChangeSizeForContentSize:(struct CGSize)arg2;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldScrollForPendingContentSize:(struct CGSize)arg2;
- (void)textContentViewDidChangeSelection:(UITextContentView *)arg1;
- (void)textContentViewDidChange:(UITextContentView *)arg1;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textContentViewDidEndEditing:(UITextContentView *)arg1;
- (void)textContentViewDidBeginEditing:(UITextContentView *)arg1;
- (_Bool)textContentViewShouldEndEditing:(UITextContentView *)arg1;
- (_Bool)textContentViewShouldBeginEditing:(UITextContentView *)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextInputTraits <NSObject>

@optional
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@interface AlphanumericPINTableViewCell : UITableViewCell
{
    AlphanumericPINTextField *_pinTextField;
}

@property(retain, nonatomic) AlphanumericPINTextField *pinTextField; // @synthesize pinTextField=_pinTextField;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface AlphanumericPINTextField : UITextField
{
}

- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;

@end

@interface PINView : UIView <PINEntryView>
{
    UILabel *_titleLabel;
    UILabel *_errorTitleLabel;
    FailureBarView *_failureView;
    UILabel *_pinPolicyLabel;
    _Bool _error;
    id <PSPINEntryViewDelegate> _delegate;
}

- (void)setBlocked:(_Bool)arg1;
- (void)dealloc;
- (void)hideFailedAttempts;
- (void)showFailedAttempts:(long long)arg1;
- (void)setPINPolicyString:(id)arg1 visible:(_Bool)arg2;
- (void)notifyDelegatePINEntered;
- (void)notifyDelegatePINChanged;
- (void)setDelegate:(id)arg1;
- (_Bool)becomeFirstResponder;
- (void)appendString:(id)arg1;
- (void)deleteLastCharacter;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)setTitle:(id)arg1 font:(id)arg2;
- (void)hidePasscodeField:(_Bool)arg1;
- (void)hideError;
- (void)showError:(id)arg1 animate:(_Bool)arg2;
- (void)setTextFieldKeyboardAppearance:(long long)arg1;
- (void)setTextFieldKeyboardType:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AlphanumericPINView : PINView <UITableViewDataSource>
{
    UITextField *_passcodeField;
    AlphanumericPINTableViewCell *_cell;
    UITableView *_table;
}

- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)deleteLastCharacter;
- (void)appendString:(id)arg1;
- (void)setStringValue:(id)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)isFirstResponder;
- (void)hidePasscodeField:(_Bool)arg1;
- (void)okButtonPressed:(id)arg1;
- (id)stringValue;
- (void)dealloc;
- (void)showError:(id)arg1 animate:(_Bool)arg2;
- (void)setTextFieldKeyboardAppearance:(long long)arg1;
- (void)setTextFieldKeyboardType:(long long)arg1;
- (_Bool)keyboardInputChanged:(id)arg1;
- (void)setBlocked:(_Bool)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSViewController : UIViewController <PSController>
{
    UIViewController<PSController> *_parentController;
    PSRootController *_rootController;
    PSSpecifier *_specifier;
}

- (void)statusBarWillAnimateByHeight:(double)arg1;
- (_Bool)canBeShownFromSuspendedState;
- (void)formSheetViewDidDisappear;
- (void)formSheetViewWillDisappear;
- (void)popupViewDidDisappear;
- (void)popupViewWillDisappear;
- (void)handleURL:(id)arg1;
- (void)showController:(id)arg1 animate:(_Bool)arg2;
- (void)showController:(id)arg1;
- (void)pushController:(id)arg1 animate:(_Bool)arg2;
- (void)pushController:(id)arg1;
- (void)didWake;
- (void)didUnlock;
- (void)willUnlock;
- (void)didLock;
- (void)suspend;
- (void)willBecomeActive;
- (void)willResignActive;
- (id)readPreferenceValue:(id)arg1;
- (void)setPreferenceValue:(id)arg1 specifier:(id)arg2;
- (id)specifier;
- (void)setSpecifier:(id)arg1;
- (void)dealloc;
- (id)rootController;
- (void)setRootController:(id)arg1;
- (id)parentController;
- (void)setParentController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSDetailController : PSViewController
{
    PSEditingPane *_pane;
}

- (void)statusBarWillAnimateByHeight:(double)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)suspend;
- (void)saveChanges;
- (id)title;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadPane;
@property(nonatomic) PSEditingPane *pane;
- (void)viewDidLayoutSubviews;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (struct CGRect)paneFrame;
- (void)dealloc;
- (void)viewDidUnload;
- (void)loadView;

@end

@interface DevicePINController : PSDetailController
{
    int _mode;
    int _substate;
    NSString *_oldPassword;
    NSString *_lastEntry;
    _Bool _success;
    id _pinDelegate;
    UIBarButtonItem *_cancelButton;
    UIBarButtonItem *_nextButton;
    UIBarButtonItem *_doneButton;
    NSString *_error1;
    NSString *_error2;
    _Bool _hidesNavigationButtons;
}

+ (_Bool)settingEnabled;
@property(nonatomic) _Bool hidesNavigationButtons; // @synthesize hidesNavigationButtons=_hidesNavigationButtons;
@property(nonatomic) id <DevicePINControllerDelegate> pinDelegate; // @synthesize pinDelegate=_pinDelegate;
- (void)setSuccess:(_Bool)arg1;
- (_Bool)success;
- (id)title;
- (void)setPane:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)pinInstructionsPromptFont;
- (id)pinInstructionsPrompt;
- (void)cancelButtonTapped;
- (void)pinEntered:(id)arg1;
- (_Bool)_asyncSetPinCompatible;
- (void)_slidePasscodeField;
- (void)viewWillLayoutSubviews;
- (void)loadView;
- (_Bool)completedInputIsValid:(id)arg1;
- (void)adjustButtonsForPasswordLength:(unsigned long long)arg1;
- (void)_updatePINButtons;
- (_Bool)showSimplePINCancelButtonOnLeft;
- (void)_showPINConfirmationError;
- (void)_showUnacceptablePINError:(id)arg1 password:(id)arg2;
- (void)_updateUI;
- (void)_updateErrorTextAndFailureCount:(_Bool)arg1;
- (void)_showFailedAttempts;
- (void)suspend;
- (void)performActionAfterPINRemove;
- (void)performActionAfterPINSet;
- (void)performActionAfterPINEntry;
- (_Bool)attemptValidationWithPIN:(id)arg1;
- (void)_setUnblockTime:(double)arg1;
- (_Bool)isBlocked;
- (double)unblockTime;
- (void)_clearBlockedState;
- (void)_setNumberOfFailedAttempts:(long long)arg1;
- (long long)numberOfFailedAttempts;
- (_Bool)isNumericPIN;
- (_Bool)simplePIN;
- (_Bool)requiresKeyboard;
- (int)_getScreenType;
- (struct __CFString *)blockedStateKey;
- (struct __CFString *)blockTimeIntervalKey;
- (struct __CFString *)failedAttemptsKey;
- (struct __CFString *)defaultsID;
- (int)pinLength;
- (_Bool)useProgressiveDelays;
- (_Bool)validatePIN:(id)arg1;
- (void)setPIN:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setPIN:(id)arg1;
- (_Bool)pinIsAcceptable:(id)arg1 outError:(id *)arg2;
- (void)setLastEntry:(id)arg1;
- (void)setOldPassword:(id)arg1;
- (void)dealloc;
- (id)stringsBundle;
- (id)stringsTable;
- (void)_dismiss;
- (struct CGSize)overallContentSizeForViewInPopover;
- (int)mode;
- (void)setMode:(int)arg1;
- (void)setSpecifier:(id)arg1;
- (id)init;
- (void)willUnlock;

@end

@interface DevicePINKeypad : UIKeyboard
{
}

- (void)setMinimized:(_Bool)arg1;
- (_Bool)isMinimized;

@end

@interface PSEditingPane : UIView
{
    PSSpecifier *_specifier;
    id _delegate;
    unsigned int _requiresKeyboard:1;
    UIViewController *_viewController;
}

+ (float)preferredHeight;
+ (id)defaultBackgroundColor;
@property(nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)scrollViewToBeInsetted;
- (id)childViewControllerForHostingViewController;
- (void)layoutInsetContent:(struct CGRect)arg1;
- (void)insetContent;
- (_Bool)shouldInsetContent;
- (_Bool)changed;
- (_Bool)handlesDoneButton;
- (void)doneEditing;
- (void)editMode;
- (void)addNewValue;
- (void)viewDidBecomeVisible;
- (_Bool)wantsNewButton;
- (id)specifierLabel;
- (_Bool)requiresKeyboard;
- (id)preferenceValue;
- (void)setPreferenceValue:(id)arg1;
- (id)preferenceSpecifier;
- (void)setPreferenceSpecifier:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (struct CGRect)contentRect;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface DevicePINPane : PSEditingPane <UIKeyInput, UITextInputTraits, PSPINEntryViewDelegate>
{
    UITransitionView *_transitionView;
    _Bool _transitioning;
    UIView<PINEntryView> *_pinView;
    UIKeyboard *_keypad;
    _Bool _keypadActive;
    long long _autocapitalizationType;
    long long _autocorrectionType;
    long long _keyboardType;
    long long _keyboardAppearance;
    _Bool _playSound;
    _Bool _isBlocked;
    _Bool _simplePIN;
}

@property(retain, nonatomic) UIView<PINEntryView> *pinView; // @synthesize pinView=_pinView;
@property(nonatomic) long long keyboardAppearance; // @synthesize keyboardAppearance=_keyboardAppearance;
@property(nonatomic) long long keyboardType; // @synthesize keyboardType=_keyboardType;
@property(nonatomic) long long autocorrectionType; // @synthesize autocorrectionType=_autocorrectionType;
@property(nonatomic) long long autocapitalizationType; // @synthesize autocapitalizationType=_autocapitalizationType;
- (void)layoutSubviews;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
- (void)pinView:(id)arg1 pinEntered:(id)arg2;
- (void)pinView:(id)arg1 pinValueChanged:(id)arg2;
- (void)delayForTextEntryAnimationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (void)setText:(id)arg1;
- (id)text;
- (void)clearPassword;
- (id)password;
- (void)transitionViewDidComplete:(id)arg1;
- (void)slideToNewPasscodeField:(_Bool)arg1 requiresKeyboard:(_Bool)arg2 numericOnly:(_Bool)arg3;
- (void)slideToNewPasscodeField:(_Bool)arg1 withKeyboard:(_Bool)arg2;
- (void)setTitle:(id)arg1;
- (void)hideError;
- (void)okButtonPressed;
- (void)setPINPolicyString:(id)arg1 visible:(_Bool)arg2;
- (void)showError:(id)arg1 error:(id)arg2 isBlocked:(_Bool)arg3 animate:(_Bool)arg4;
- (void)setKeyboardUserInteractionEnabled:(_Bool)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)dismissKeypad;
- (void)_setKeypadState:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)requiresKeyboard;
- (_Bool)simplePIN;
- (void)setSimplePIN:(_Bool)arg1 requiresKeyboard:(_Bool)arg2 numericOnly:(_Bool)arg3;
- (void)setSimplePIN:(_Bool)arg1 requiresKeyboard:(_Bool)arg2;
- (void)hideFailedAttempts;
- (void)showFailedAttempts:(long long)arg1;
- (void)deactivateKeypadView;
- (void)activateKeypadView;
- (void)setKeyboardIsNumeric:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_setPlaysKeyboardClicks:(_Bool)arg1;
- (id)specifierLabel;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;

@end

@interface PSRootController : UINavigationController <PSController, UINavigationControllerDelegate>
{
    PSSpecifier *_specifier;
    NSMutableSet *_tasks;
    _Bool _deallocating;
    PSStackPushAnimationController *_stackAnimationController;
}

+ (_Bool)processedBundle:(id)arg1 parentController:(id)arg2 parentSpecifier:(id)arg3 bundleControllers:(id *)arg4 settings:(id)arg5;
+ (id)readPreferenceValue:(id)arg1;
+ (void)setPreferenceValue:(id)arg1 specifier:(id)arg2;
+ (void)writePreference:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)_setNavigationBarHidden:(_Bool)arg1 edge:(unsigned long long)arg2 duration:(double)arg3;
- (void)pushControllersAsStack:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (id)popToRootViewControllerAnimated:(_Bool)arg1;
- (id)popToViewController:(id)arg1 animated:(_Bool)arg2;
- (id)popViewControllerAnimated:(_Bool)arg1;
- (void)_delayedControllerReleaseAfterPop:(id)arg1;
- (_Bool)canBeShownFromSuspendedState;
- (void)didDismissFormSheetView;
- (void)willDismissFormSheetView;
- (void)didDismissPopupView;
- (void)willDismissPopupView;
- (id)aggregateDictionaryPath;
- (id)rootController;
- (void)setRootController:(id)arg1;
- (id)parentController;
- (void)dealloc;
- (_Bool)deallocating;
- (void)didWake;
- (void)didUnlock;
- (void)willUnlock;
- (void)didLock;
- (void)suspend;
- (unsigned long long)supportedInterfaceOrientations;
- (void)sendWillBecomeActive;
- (void)sendWillResignActive;
- (void)willBecomeActive;
- (void)willResignActive;
- (void)statusBarWillChangeHeight:(id)arg1;
- (void)showLeftButton:(id)arg1 withStyle:(long long)arg2 rightButton:(id)arg3 withStyle:(long long)arg4;
- (void)handleURL:(id)arg1;
- (void)showController:(id)arg1 animate:(_Bool)arg2;
- (void)showController:(id)arg1;
- (void)pushController:(id)arg1 animate:(_Bool)arg2;
- (void)pushController:(id)arg1;
- (id)specifier;
- (void)setSpecifier:(id)arg1;
- (void)setParentController:(id)arg1;
- (void)statusBarWillAnimateByHeight:(double)arg1;
- (id)specifiers;
- (id)contentViewForTopController;
- (_Bool)busy;
- (void)taskFinished:(id)arg1;
- (void)addTask:(id)arg1;
- (_Bool)taskIsRunning:(id)arg1;
- (id)tasksDescription;
- (id)initWithTitle:(id)arg1 identifier:(id)arg2;
- (id)readPreferenceValue:(id)arg1;
- (void)setPreferenceValue:(id)arg1 specifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSetupController : PSRootController
{
    NSDictionary *_rootInfo;
    UIViewController<PSController> *_parentController;
    PSRootController *_parentRootController;
}

- (void)statusBarWillChangeHeight:(id)arg1;
- (_Bool)popupStyleIsModal;
- (_Bool)usePopupStyle;
- (void)popControllerOnParent;
- (void)pushControllerOnParentWithSpecifier:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)dismissAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismiss;
- (void)dismissWithCompletion:(CDUnknownBlockType)arg1;
- (id)controller;
- (void)setParentController:(id)arg1;
- (void)showController:(id)arg1 animate:(_Bool)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)setupController;
- (id)parentController;
- (void)handleURL:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface DevicePINSetupController : PSSetupController
{
    _Bool _success;
}

- (struct CGSize)preferredContentSize;
- (_Bool)canBeShownFromSuspendedState;
- (_Bool)popupStyleIsModal;
- (_Bool)usePopupStyle;
- (_Bool)success;
- (id)init;

@end

@interface PSListController : PSViewController <UITableViewDelegate, UITableViewDataSource, UIActionSheetDelegate, UIAlertViewDelegate, UIPopoverControllerDelegate, PSSpecifierObserver, PSViewControllerOffsetProtocol>
{
    NSMutableArray *_prequeuedReusablePSTableCells;
    NSMutableDictionary *_cells;
    _Bool _cachesCells;
    _Bool _reusesCells;
    _Bool _forceSynchronousIconLoadForCreatedCells;
    UIView *_containerView;
    UITableView *_table;
    NSArray *_specifiers;
    NSMutableDictionary *_specifiersByID;
    NSMutableArray *_groups;
    NSString *_specifierID;
    NSMutableArray *_bundleControllers;
    _Bool _bundlesLoaded;
    _Bool _showingSetupController;
    UIActionSheet *_actionSheet;
    UIAlertView *_alertView;
    _Bool _swapAlertButtons;
    _Bool _keyboardWasVisible;
    UIKeyboard *_keyboard;
    UIPopoverController *_popupStylePopoverController;
    _Bool _popupStylePopoverShouldRePresent;
    _Bool _popupIsModal;
    _Bool _popupIsDismissing;
    _Bool _hasAppeared;
    float _verticalContentOffset;
    NSString *_offsetItemName;
    struct CGPoint _contentOffsetWithKeyboard;
    NSString *_highlightItemName;
    _Bool _isVisible;
    id <PSSpecifierDataSource> _dataSource;
    _Bool _requestingSpecifiersFromDataSource;
    NSIndexPath *_savedSelectedIndexPath;
    _Bool _edgeToEdgeCells;
    NSDictionary *_pendingURLResourceDictionary;
    NSString *_specifierIDPendingPush;
}

+ (_Bool)displaysButtonBar;
@property(copy, nonatomic) NSString *specifierIDPendingPush; // @synthesize specifierIDPendingPush=_specifierIDPendingPush;
@property(retain, nonatomic) NSDictionary *pendingURLResourceDictionary; // @synthesize pendingURLResourceDictionary=_pendingURLResourceDictionary;
@property(nonatomic) _Bool edgeToEdgeCells; // @synthesize edgeToEdgeCells=_edgeToEdgeCells;
@property(nonatomic) _Bool forceSynchronousIconLoadForCreatedCells; // @synthesize forceSynchronousIconLoadForCreatedCells=_forceSynchronousIconLoadForCreatedCells;
- (void)invalidateSpecifiersForDataSource:(id)arg1;
- (void)performSpecifierUpdates:(id)arg1;
- (void)dataSource:(id)arg1 performUpdates:(id)arg2;
@property(readonly, nonatomic) long long observerType;
- (id)specifierDataSource;
- (void)_moveSpecifierAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 animated:(_Bool)arg3;
- (void)_setNotShowingSetupController;
- (_Bool)shouldReloadSpecifiersOnResume;
- (void)_performHighlightForSpecifierWithID:(id)arg1 tryAgainIfFailed:(_Bool)arg2;
- (void)_performHighlightForSpecifierWithID:(id)arg1;
- (void)highlightSpecifierWithID:(id)arg1;
- (void)setDesiredVerticalContentOffsetItemNamed:(id)arg1;
- (void)setDesiredVerticalContentOffset:(float)arg1;
- (float)verticalContentOffset;
- (void)selectRowForSpecifier:(id)arg1;
- (void)_keyboardDidHide:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_setContentInset:(double)arg1;
- (double)_getKeyboardIntersectionHeight;
- (void)reloadIconForSpecifierForBundle:(id)arg1;
- (void)handleURL:(id)arg1;
- (_Bool)shouldDeferPushForSpecifierID:(id)arg1;
- (_Bool)handlePendingURL;
- (_Bool)prepareHandlingURLForSpecifierID:(id)arg1 resourceDictionary:(id)arg2 animatePush:(_Bool *)arg3;
- (void)showController:(id)arg1;
- (void)dismissPopoverAnimated:(_Bool)arg1;
- (void)dismissPopover;
- (void)popoverController:(id)arg1 animationCompleted:(long long)arg2;
- (_Bool)popoverControllerShouldDismissPopover:(id)arg1;
- (void)showController:(id)arg1 animate:(_Bool)arg2;
- (id)specifiersForIDs:(id)arg1;
- (id)specifierForID:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)controllerForSpecifier:(id)arg1;
- (id)controllerForRowAtIndexPath:(id)arg1;
- (void)lazyLoadBundle:(id)arg1;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_handleActionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)confirmationViewCancelledForSpecifier:(id)arg1;
- (void)confirmationViewAcceptedForSpecifier:(id)arg1;
- (void)dismissConfirmationViewForSpecifier:(id)arg1 animated:(_Bool)arg2;
- (void)showConfirmationViewForSpecifier:(id)arg1;
- (void)showConfirmationViewForSpecifier:(id)arg1 useAlert:(_Bool)arg2;
- (void)showConfirmationViewForSpecifier:(id)arg1 useAlert:(_Bool)arg2 swapAlertButtons:(_Bool)arg3;
- (_Bool)performConfirmationCancelActionForSpecifier:(id)arg1;
- (_Bool)performConfirmationActionForSpecifier:(id)arg1;
- (_Bool)performButtonActionForSpecifier:(id)arg1;
- (_Bool)performLoadActionForSpecifier:(id)arg1;
- (_Bool)performActionForSpecifier:(id)arg1;
- (void)_returnKeyPressed:(id)arg1;
- (void)returnPressedAtEnd;
- (void)popupViewWillDisappear;
- (void)formSheetViewWillDisappear;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)prepareSpecifiersMetadata;
- (void)viewDidLoad;
- (id)findFirstVisibleResponder;
- (_Bool)shouldSelectResponderOnAppearance;
- (void)_scrollToSpecifierNamed:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)_tableView:(id)arg1 viewForCustomInSection:(long long)arg2 isHeader:(_Bool)arg3;
- (double)_tableView:(id)arg1 heightForCustomInSection:(long long)arg2 isHeader:(_Bool)arg3;
- (id)_customViewForSpecifier:(id)arg1 class:(Class)arg2 isHeader:(_Bool)arg3;
- (long long)tableView:(id)arg1 titleAlignmentForFooterInSection:(long long)arg2;
- (long long)tableView:(id)arg1 titleAlignmentForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 detailTextForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)createPrequeuedPSTableCells:(unsigned long long)arg1;
- (id)cachedCellForSpecifierID:(id)arg1;
- (id)cachedCellForSpecifier:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)specifierID;
- (void)setSpecifierID:(id)arg1;
- (void)reloadSpecifiers;
- (void)migrateSpecifierMetadataFrom:(id)arg1 to:(id)arg2;
- (void)reload;
- (void)loseFocus;
- (void)createGroupIndices;
- (id)_createGroupIndices:(id)arg1;
- (void)viewDidUnload;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)traitCollectionDidChange:(id)arg1;
- (_Bool)_isRegularWidth;
- (Class)tableViewClass;
- (id)initForContentSize:(struct CGSize)arg1;
- (void)contentSizeChangedNotificationPosted:(id)arg1;
- (void)contentSizeDidChange:(id)arg1;
- (id)init;
- (void)dealloc;
- (void)_unloadBundleControllers;
- (void)_loadBundleControllers;
- (void)updateSpecifiersInRange:(struct _NSRange)arg1 withSpecifiers:(id)arg2;
- (void)updateSpecifiers:(id)arg1 withSpecifiers:(id)arg2;
- (long long)_nextGroupInSpecifiersAfterIndex:(long long)arg1 inArray:(id)arg2;
- (void)replaceContiguousSpecifiers:(id)arg1 withSpecifiers:(id)arg2 animated:(_Bool)arg3;
- (void)replaceContiguousSpecifiers:(id)arg1 withSpecifiers:(id)arg2;
- (void)removeContiguousSpecifiers:(id)arg1;
- (void)removeContiguousSpecifiers:(id)arg1 animated:(_Bool)arg2;
- (void)_removeContiguousSpecifiers:(id)arg1 animated:(_Bool)arg2;
- (void)removeLastSpecifierAnimated:(_Bool)arg1;
- (void)removeLastSpecifier;
- (void)removeSpecifierAtIndex:(long long)arg1;
- (void)removeSpecifierID:(id)arg1;
- (void)removeSpecifier:(id)arg1;
- (void)removeSpecifierAtIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)removeSpecifierID:(id)arg1 animated:(_Bool)arg2;
- (void)removeSpecifier:(id)arg1 animated:(_Bool)arg2;
- (void)addSpecifiersFromArray:(id)arg1 animated:(_Bool)arg2;
- (void)addSpecifiersFromArray:(id)arg1;
- (void)addSpecifier:(id)arg1 animated:(_Bool)arg2;
- (void)addSpecifier:(id)arg1;
- (void)insertContiguousSpecifiers:(id)arg1 atEndOfGroup:(long long)arg2;
- (void)insertContiguousSpecifiers:(id)arg1 afterSpecifierID:(id)arg2;
- (void)insertContiguousSpecifiers:(id)arg1 afterSpecifier:(id)arg2;
- (void)insertContiguousSpecifiers:(id)arg1 atIndex:(long long)arg2;
- (void)insertContiguousSpecifiers:(id)arg1 atEndOfGroup:(long long)arg2 animated:(_Bool)arg3;
- (void)insertContiguousSpecifiers:(id)arg1 afterSpecifierID:(id)arg2 animated:(_Bool)arg3;
- (void)insertContiguousSpecifiers:(id)arg1 afterSpecifier:(id)arg2 animated:(_Bool)arg3;
- (void)insertContiguousSpecifiers:(id)arg1 atIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)_insertContiguousSpecifiers:(id)arg1 atIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)insertSpecifier:(id)arg1 atEndOfGroup:(long long)arg2;
- (void)insertSpecifier:(id)arg1 afterSpecifierID:(id)arg2;
- (void)insertSpecifier:(id)arg1 afterSpecifier:(id)arg2;
- (void)insertSpecifier:(id)arg1 atIndex:(long long)arg2;
- (void)insertSpecifier:(id)arg1 atEndOfGroup:(long long)arg2 animated:(_Bool)arg3;
- (void)insertSpecifier:(id)arg1 afterSpecifierID:(id)arg2 animated:(_Bool)arg3;
- (void)insertSpecifier:(id)arg1 afterSpecifier:(id)arg2 animated:(_Bool)arg3;
- (void)insertSpecifier:(id)arg1 atIndex:(long long)arg2 animated:(_Bool)arg3;
- (id)specifiersInGroup:(long long)arg1;
- (long long)rowsForGroup:(long long)arg1;
- (long long)indexForRow:(long long)arg1 inGroup:(long long)arg2;
- (_Bool)getGroup:(long long *)arg1 row:(long long *)arg2 ofSpecifierAtIndex:(long long)arg3;
- (_Bool)_getGroup:(long long *)arg1 row:(long long *)arg2 ofSpecifierAtIndex:(long long)arg3 groups:(id)arg4;
- (_Bool)getGroup:(long long *)arg1 row:(long long *)arg2 ofSpecifier:(id)arg3;
- (_Bool)getGroup:(long long *)arg1 row:(long long *)arg2 ofSpecifierID:(id)arg3;
- (id)specifierAtIndex:(long long)arg1;
- (long long)numberOfGroups;
- (long long)indexOfGroup:(long long)arg1;
- (_Bool)containsSpecifier:(id)arg1;
- (long long)indexOfSpecifier:(id)arg1;
- (long long)indexOfSpecifierID:(id)arg1;
- (void)reloadSpecifierID:(id)arg1;
- (void)reloadSpecifierID:(id)arg1 animated:(_Bool)arg2;
- (void)reloadSpecifier:(id)arg1;
- (void)reloadSpecifier:(id)arg1 animated:(_Bool)arg2;
- (void)reloadSpecifierAtIndex:(long long)arg1;
- (void)reloadSpecifierAtIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)endUpdates;
- (void)beginUpdates;
- (long long)indexForIndexPath:(id)arg1;
- (id)indexPathForSpecifier:(id)arg1;
- (id)indexPathForIndex:(long long)arg1;
- (void)setSpecifiers:(id)arg1;
- (void)setSpecifier:(id)arg1;
- (void)_removeIdentifierForSpecifier:(id)arg1;
- (void)_addIdentifierForSpecifier:(id)arg1;
- (id)specifiers;
- (id)loadSpecifiersFromPlistName:(id)arg1 target:(id)arg2 bundle:(id)arg3;
- (id)loadSpecifiersFromPlistName:(id)arg1 target:(id)arg2;
- (id)specifier;
- (id)bundle;
- (id)table;
@property(readonly, copy) NSString *description;
- (void)setCachesCells:(_Bool)arg1;
- (void)setReusesCells:(_Bool)arg1;
- (void)clearCache;
- (id)popupStylePopoverController;
- (void)showPINSheet:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DiagnosticDataController : PSListController
{
}

- (id)specifiers;
- (void)viewDidLoad;
- (id)init;

@end

@interface FailureBarView : UIImageView
{
    UILabel *_titleLabel;
}

- (void)setFailureCount:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PSTableCell : UITableViewCell
{
    id _value;
    UIImageView *_checkedImageView;
    _Bool _checked;
    _Bool _shouldHideTitle;
    NSString *_hiddenTitle;
    int _alignment;
    SEL _pAction;
    id _pTarget;
    _Bool _cellEnabled;
    PSSpecifier *_specifier;
    long long _type;
    _Bool _lazyIcon;
    _Bool _lazyIconDontUnload;
    _Bool _lazyIconForceSynchronous;
    NSString *_lazyIconAppID;
    _Bool _reusedCell;
    PSTableCellHighlightContext *_customHighlightContext;
    _Bool _forceHideDisclosureIndicator;
    _Bool _isCopyable;
    UILongPressGestureRecognizer *_longTapRecognizer;
}

+ (double)defaultCellHeight;
+ (Class)cellClassForSpecifier:(id)arg1;
+ (long long)cellStyle;
+ (id)reuseIdentifierForSpecifier:(id)arg1;
+ (id)reuseIdentifierForClassAndType:(long long)arg1;
+ (id)reuseIdentifierForBasicCellTypes:(long long)arg1;
+ (id)stringFromCellType:(long long)arg1;
+ (long long)cellTypeFromString:(id)arg1;
@property(retain, nonatomic) UILongPressGestureRecognizer *longTapRecognizer; // @synthesize longTapRecognizer=_longTapRecognizer;
@property(nonatomic) _Bool isCopyable; // @synthesize isCopyable=_isCopyable;
@property(nonatomic) _Bool forceHideDisclosureIndicator; // @synthesize forceHideDisclosureIndicator=_forceHideDisclosureIndicator;
@property(nonatomic) _Bool reusedCell; // @synthesize reusedCell=_reusedCell;
@property(retain, nonatomic) PSSpecifier *specifier; // @synthesize specifier=_specifier;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void)_invalidateHighlightContext;
- (void)highlightCellForDuration:(double)arg1 animateUnighlight:(_Bool)arg2;
- (double)textFieldOffset;
- (void)reloadWithSpecifier:(id)arg1 animated:(_Bool)arg2;
- (_Bool)cellEnabled;
- (void)setCellEnabled:(_Bool)arg1;
- (SEL)cellAction;
- (void)setCellAction:(SEL)arg1;
- (id)cellTarget;
- (void)setCellTarget:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (void)setAlignment:(int)arg1;
- (id)iconImageView;
- (id)valueLabel;
- (id)titleLabel;
- (id)value;
- (void)setValue:(id)arg1;
- (void)setIcon:(id)arg1;
- (_Bool)canBeChecked;
- (_Bool)isChecked;
- (void)setChecked:(_Bool)arg1;
- (void)setShouldHideTitle:(_Bool)arg1;
- (void)setTitle:(id)arg1;
- (id)title;
- (id)getIcon;
- (void)forceSynchronousIconLoadOnNextIconLoad;
- (void)cellRemovedFromView;
- (id)blankIcon;
- (id)getLazyIconID;
- (id)getLazyIcon;
- (id)_contentString;
- (_Bool)canReload;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (id)titleTextLabel;
- (void)setValueChangedTarget:(id)arg1 action:(SEL)arg2 specifier:(id)arg3;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (void)_updateAccessoryTypeForSpecifier:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)copy:(id)arg1;
- (id)_copyableText;
- (void)longPressed:(id)arg1;
- (_Bool)canBecomeFirstResponder;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;
- (id)scriptingInfoWithChildren;
- (id)_automationID;

@end

@interface PSControlTableCell : PSTableCell
{
    UIControl *_control;
}

- (void)controlChanged:(id)arg1;
- (id)controlValue;
@property(retain, nonatomic) UIControl *control;
- (void)dealloc;
- (id)valueLabel;
- (_Bool)canReload;
- (id)newControl;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

@end

@interface PSSliderTableCell : PSControlTableCell
{
    UIView *_disabledView;
}

- (void)layoutSubviews;
- (void)setValue:(id)arg1;
- (id)controlValue;
- (void)dealloc;
- (_Bool)canReload;
- (void)setCellEnabled:(_Bool)arg1;
- (id)titleLabel;
- (id)newControl;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

@end

@interface FontSizeSliderCell : PSSliderTableCell
{
    UILabel *_smallSizeLabel;
    UILabel *_largeSizeLabel;
    UILabel *_veryLargeSizeLabel;
}

- (void)layoutSubviews;
- (id)newControl;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

@end

@interface PSKeychainSyncViewController : PSListController <KeychainSyncViewController>
{
    KeychainSyncHeaderView *_headerView;
    PSSpecifier *_groupSpecifier;
    id <KeychainSyncViewControllerDelegate> _delegate;
}

@property(nonatomic) id <KeychainSyncViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (double)heightForHeaderInTableView:(id)arg1;
- (id)viewForHeaderInTableView:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)specifiers;
- (id)groupSpecifier;
- (id)headerView;
- (void)dealloc;

@end

@interface KeychainSyncAdvancedSecurityCodeController : PSKeychainSyncViewController <UIAlertViewDelegate>
{
    double _cellTextWidth;
    UIFont *_cellFont;
    UIAlertView *_disableRecoveryConfirmationAlert;
    _Bool _showsDisableRecoveryOption;
}

@property(nonatomic) _Bool showsDisableRecoveryOption; // @synthesize showsDisableRecoveryOption=_showsDisableRecoveryOption;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldDrawTopSeparatorForSection:(long long)arg2;
- (void)nextPressed;
- (void)_finishedWithSpecifier:(id)arg1;
- (id)specifiers;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface KeychainSyncAppleSupportController : PSKeychainSyncViewController
{
}

- (id)specifiers;
- (void)viewDidLoad;

@end

@interface KeychainSyncCountryInfo : NSObject <NSCopying>
{
    NSString *_countryCode;
    NSString *_countryName;
    NSString *_localizedCountryName;
    NSString *_dialingPrefix;
}

+ (id)countryInfoForCountryCode:(id)arg1 dialingPrefix:(id)arg2;
+ (id)countryInfoWithDictionary:(id)arg1;
+ (id)allCountries;
+ (void)_loadCountriesIfNeeded;
@property(retain, nonatomic) NSString *dialingPrefix; // @synthesize dialingPrefix=_dialingPrefix;
@property(retain, nonatomic) NSString *localizedCountryName; // @synthesize localizedCountryName=_localizedCountryName;
@property(retain, nonatomic) NSString *countryName; // @synthesize countryName=_countryName;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
- (void)dealloc;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface KeychainSyncTextEntryController : PSKeychainSyncViewController <KeychainSyncPasscodeFieldDelegate>
{
    PSTableCell *_textEntryCell;
    UIView<UIKeyInput> *_textEntryView;
    PSSpecifier *_textEntrySpecifier;
    _Bool _hidesNextButton;
    _Bool _secureTextEntry;
    _Bool _textFieldHasRoundBorder;
    _Bool _convertsNumeralsToASCII;
    int _textEntryType;
    NSString *_textValue;
}

@property(retain, nonatomic) NSString *textValue; // @synthesize textValue=_textValue;
@property(nonatomic) _Bool convertsNumeralsToASCII; // @synthesize convertsNumeralsToASCII=_convertsNumeralsToASCII;
@property(nonatomic) _Bool textFieldHasRoundBorder; // @synthesize textFieldHasRoundBorder=_textFieldHasRoundBorder;
@property(nonatomic) _Bool secureTextEntry; // @synthesize secureTextEntry=_secureTextEntry;
@property(nonatomic) _Bool hidesNextButton; // @synthesize hidesNextButton=_hidesNextButton;
@property(nonatomic) int textEntryType; // @synthesize textEntryType=_textEntryType;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)passcodeField:(id)arg1 didUpdateEnteredPasscode:(id)arg2;
- (unsigned long long)numberOfPasscodeFields;
- (void)textFieldChanged:(id)arg1;
- (void)textEntryViewDidChange:(id)arg1;
- (id)textEntryView;
- (id)textEntryCell;
- (Class)textEntryCellClass;
- (id)textEntrySpecifier;
- (id)placeholderText;
- (id)specifiers;
- (id)textEntryText;
- (void)setTextEntryText:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)becomeFirstResponder;
- (id)getTextValueForSpecifier:(id)arg1;
- (void)setTextValue:(id)arg1 forSpecifier:(id)arg2;
- (void)didFinishEnteringText:(id)arg1;
- (void)nextPressed;
- (void)updateNextButton;
- (void)loadView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface KeychainSyncDevicePINController : KeychainSyncTextEntryController
{
    DevicePINController *_devicePINController;
    _Bool _showingBlockedMessage;
    NSString *_enterPasscodeTitle;
    NSString *_enterPasscodeReason;
    UIKeyboard *_disabledKeyboard;
}

@property(retain, nonatomic) UIKeyboard *disabledKeyboard; // @synthesize disabledKeyboard=_disabledKeyboard;
@property(retain, nonatomic) NSString *enterPasscodeReason; // @synthesize enterPasscodeReason=_enterPasscodeReason;
@property(retain, nonatomic) NSString *enterPasscodeTitle; // @synthesize enterPasscodeTitle=_enterPasscodeTitle;
- (void)didFinishEnteringText:(id)arg1;
- (long long)tableView:(id)arg1 titleAlignmentForFooterInSection:(long long)arg2;
- (id)specifiers;
- (void)updateBlockedState:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

@interface KeychainSyncHeaderView : UIView <PSHeaderFooterView>
{
    UILabel *_titleLabel;
    UILabel *_detailLabel;
    _Bool _usesCompactLayout;
}

@property(nonatomic) _Bool usesCompactLayout; // @synthesize usesCompactLayout=_usesCompactLayout;
- (double)preferredHeightForWidth:(double)arg1 inTableView:(id)arg2;
- (void)layoutSubviews;
- (void)setTitleText:(id)arg1;
- (void)setDetailText:(id)arg1;
- (void)dealloc;
- (id)initWithSpecifier:(id)arg1;

@end

@interface KeychainSyncPhoneNumberController : PSKeychainSyncViewController <KeychainSyncPhoneSettingsFragmentDelegate, UIAlertViewDelegate, KeychainSyncViewController>
{
    KeychainSyncPhoneSettingsFragment *_phoneSettingsFragment;
    UIAlertView *_invalidPhoneNumberAlert;
    UILabel *_footerLabel;
}

- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)phoneSettingsFragment:(id)arg1 didChangePhoneNumber:(id)arg2 countryInfo:(id)arg3;
- (void)nextPressed;
- (void)controllerDone;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)reloadSpecifiers;
- (id)specifiers;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <KeychainSyncViewControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface KeychainSyncPhoneSettingsFragment : NSObject
{
    NSArray *_specifiers;
    PSPhoneNumberSpecifier *_phoneNumberSpecifier;
    PSSpecifier *_countrySpecifier;
    PSListController *_listController;
    NSString *_phoneNumber;
    KeychainSyncCountryInfo *_countryInfo;
    id <KeychainSyncPhoneSettingsFragmentDelegate> _delegate;
    NSString *_title;
}

@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) id <KeychainSyncPhoneSettingsFragmentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) KeychainSyncCountryInfo *countryInfo; // @synthesize countryInfo=_countryInfo;
@property(retain, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
- (void)textFieldChanged:(id)arg1;
@property(readonly, retain, nonatomic) PSEditableTableCell *phoneNumberCell;
- (id)unformattedPhoneNumber;
- (id)phoneNumberForSpecifier:(id)arg1;
- (void)setPhoneNumber:(id)arg1 forSpecifier:(id)arg2;
- (id)dialingCountryInfoForSpecifier:(id)arg1;
- (void)setDialingCountryInfo:(id)arg1 forSpecifier:(id)arg2;
- (void)resignFirstResponder;
- (void)reloadSpecifiers;
@property(readonly, retain, nonatomic) NSArray *specifiers;
- (void)dealloc;
- (id)initWithListController:(id)arg1;

@end

@interface KeychainSyncSMSVerificationController : KeychainSyncTextEntryController <UIAlertViewDelegate>
{
    UIButton *_footerButton;
    UIAlertView *_supportVerificationAlert;
    NSString *_phoneNumber;
    NSString *_dialingPrefix;
    NSString *_countryCode;
    unsigned long long _verificationCodeLength;
    PSKeychainSyncManager *_keychainSyncManager;
}

@property(nonatomic) PSKeychainSyncManager *keychainSyncManager; // @synthesize keychainSyncManager=_keychainSyncManager;
@property(nonatomic) unsigned long long verificationCodeLength; // @synthesize verificationCodeLength=_verificationCodeLength;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(retain, nonatomic) NSString *dialingPrefix; // @synthesize dialingPrefix=_dialingPrefix;
@property(retain, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)dismissAlerts;
- (void)showSupportVerification;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (id)specifiers;
- (void)dealloc;
- (unsigned long long)numberOfPasscodeFields;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSEditableTableCell : PSTableCell <UITextViewDelegate, UITextFieldDelegate>
{
    UIColor *_textColor;
    id _delegate;
    _Bool _forceFirstResponder;
    _Bool _delaySpecifierRelease;
    SEL _targetSetter;
    id _realTarget;
    _Bool _valueChanged;
    _Bool _returnKeyTapped;
    PSListController *_controllerDelegate;
}

+ (long long)cellStyle;
@property(nonatomic) PSListController *controllerDelegate; // @synthesize controllerDelegate=_controllerDelegate;
@property(readonly, nonatomic) _Bool returnKeyTapped; // @synthesize returnKeyTapped=_returnKeyTapped;
- (id)textField;
- (void)setPlaceholderText:(id)arg1;
- (void)setValue:(id)arg1;
- (id)value;
- (_Bool)_cellIsEditing;
- (_Bool)isEditing;
- (_Bool)isTextFieldEditing;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)isFirstResponder;
- (_Bool)canResignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)layoutSubviews;
- (void)setDelegate:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setCellEnabled:(_Bool)arg1;
- (void)setValueChangedTarget:(id)arg1 action:(SEL)arg2 specifier:(id)arg3;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldClear:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)_saveForExit;
- (void)_setValueChanged;
- (void)cellRemovedFromView;
- (void)endEditingAndSave;
- (void)controlChanged:(id)arg1;
- (_Bool)canReload;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface KeychainSyncSecurityCodeCell : PSEditableTableCell
{
    UILabel *_bulletTextLabel;
    int _securityCodeType;
    int _mode;
    NSString *_firstPasscodeEntry;
}

@property(retain, nonatomic) NSString *firstPasscodeEntry; // @synthesize firstPasscodeEntry=_firstPasscodeEntry;
@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) int securityCodeType; // @synthesize securityCodeType=_securityCodeType;
- (void)layoutSubviews;
- (void)setBulletText:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)dealloc;

@end

@interface KeychainSyncSecurityCodeController : KeychainSyncTextEntryController
{
    NSString *_generatedCode;
    UIButton *_footerButton;
    UILabel *_footerLabel;
    double _keyboardHeight;
    _Bool _showsAdvancedSettings;
    int _mode;
    int _securityCodeType;
    NSString *_firstPasscodeEntry;
}

@property(retain, nonatomic) NSString *firstPasscodeEntry; // @synthesize firstPasscodeEntry=_firstPasscodeEntry;
@property(nonatomic) _Bool showsAdvancedSettings; // @synthesize showsAdvancedSettings=_showsAdvancedSettings;
@property(nonatomic) int securityCodeType; // @synthesize securityCodeType=_securityCodeType;
@property(nonatomic) int mode; // @synthesize mode=_mode;
- (void)dismissAlerts;
- (void)forgotSecurityCode;
- (void)showAdvancedOptions;
- (void)textEntryViewDidChange:(id)arg1;
- (void)generateRandomCode;
- (void)updateNextButton;
- (void)didFinishEnteringText:(id)arg1;
- (void)animatePasscodeFieldLeft:(_Bool)arg1;
- (id)placeholderText;
- (id)specifiers;
- (void)viewDidLayoutSubviews;
- (void)keyboardWillShow:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)textEntryCell;
- (Class)textEntryCellClass;
- (void)dealloc;
- (id)init;

@end

@interface KeychainSyncSetupController : PSSetupController
{
    PSKeychainSyncManager *_manager;
}

- (void)cancelPressed;
- (void)showController:(id)arg1;
- (id)initWithManager:(id)arg1;

@end

@interface NSArray (PSSpecifierUpdates)
- (id)arrayByPerformingSpecifierUpdatesUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSArray (PreferencesAdditions)
- (unsigned long long)indexOfSpecifierWithID:(id)arg1;
- (id)specifierForID:(id)arg1;
@end

@interface NSDictionary (Protection)
- (_Bool)writeToProtectedFile:(id)arg1 atomically:(_Bool)arg2;
@end

@interface NSMutableArray (PSAdditions)
- (void)ps_addPossibleObject:(id)arg1;
@end

@interface NSMutableArray (PSSpecifierUpdates)
- (void)performSpecifierUpdatesUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSMutableArray (PreferencesAdditions)
- (void)ps_insertObjectsFromArray:(id)arg1 afterObject:(id)arg2;
- (void)ps_insertObject:(id)arg1 afterObject:(id)arg2;
@end

@interface NSSet (PSSearchAdditions)
- (id)setByIntersectingWithSet:(id)arg1;
@end

@interface NumericPINView : PINView <PSPasscodeFieldDelegate>
{
    PSPasscodeField *_passcodeField;
}

- (void)passcodeField:(id)arg1 enteredPasscode:(id)arg2;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)isFirstResponder;
- (void)appendString:(id)arg1;
- (void)deleteLastCharacter;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)hidePasscodeField:(_Bool)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PSAboutHTMLSheetViewController : UIViewController <UIWebViewDelegate>
{
}

+ (void)presentAboutSheetTitled:(id)arg1 HTMLContent:(id)arg2 fromViewController:(id)arg3;
- (void)setHTMLContent:(id)arg1 isFragment:(_Bool)arg2;
- (void)donePressed;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)viewDidBecomeVisible;
- (void)dealloc;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSAboutTextSheetViewController : UIViewController
{
}

+ (void)presentAboutSheetTitled:(id)arg1 attributedText:(id)arg2 fromViewController:(id)arg3;
- (void)donePressed;
- (void)setAttributedText:(id)arg1;
- (void)loadView;

@end

@interface PSAccessibilitySettingsDetail : NSObject <PSSettingsDetail>
{
}

+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSAccountSecurityController : PSListController <KeychainSyncViewControllerDelegate, KeychainSyncPhoneSettingsFragmentDelegate, UIAlertViewDelegate>
{
    PSSpecifier *_recoverySwitch;
    NSArray *_passcodeSpecifiers;
    PSSetupController *_devicePasscodeChangeSetupController;
    KeychainSyncDevicePINController *_devicePINController;
    KeychainSyncPhoneSettingsFragment *_phoneSettingsFragment;
    NSString *_SMSTarget;
    KeychainSyncCountryInfo *_SMSTargetCountryInfo;
    _Bool _secureBackupEnabled;
    PSKeychainSyncManager *_manager;
    UIAlertView *_invalidPhoneNumberAlert;
    UIAlertView *_changeDevicePasscodeAlert;
    UIAlertView *_disableRecoveryConfirmationAlert;
    int _securityCodeType;
    NSString *_securityCode;
}

@property(retain, nonatomic) NSString *securityCode; // @synthesize securityCode=_securityCode;
@property(nonatomic) int securityCodeType; // @synthesize securityCodeType=_securityCodeType;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)cancelPressed;
- (void)phoneSettingsFragment:(id)arg1 didChangePhoneNumber:(id)arg2 countryInfo:(id)arg3;
- (void)_setShowsDoneButton:(_Bool)arg1;
- (void)navDonePressed;
- (void)navCancelPressed;
- (void)saveSMSTargetChanges;
- (void)keychainSyncController:(id)arg1 didFinishWithResult:(id)arg2 error:(id)arg3;
- (void)handleBurnedRecord;
- (id)useRecoveryForSepecifier:(id)arg1;
- (void)setUseRecovery:(id)arg1 specifier:(id)arg2;
- (void)disableRecovery;
- (void)changeSecurityCode:(id)arg1;
- (void)_showSecurityCodeChangeSheetOnSpecifier:(id)arg1;
- (void)reloadSpecifiers;
- (id)specifiers;
- (id)passcodeSpecifiers;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSListItemsController : PSListController
{
    long long _rowToSelect;
    _Bool _deferItemSelection;
    _Bool _restrictionList;
    PSSpecifier *_lastSelectedSpecifier;
}

- (void)setIsRestrictionList:(_Bool)arg1;
- (_Bool)isRestrictionList;
- (id)specifiers;
- (id)itemsFromDataSource;
- (id)itemsFromParent;
- (void)_addStaticText:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)listItemSelected:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)prepareSpecifiersMetadata;
- (void)didLock;
- (void)suspend;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)dealloc;
- (void)setValueForSpecifier:(id)arg1 defaultValue:(id)arg2;
- (void)setRowToSelect;
- (void)scrollToSelectedCell;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface PSAdvancedLanguageController : PSListItemsController
{
    PSSpecifier *_checkedSpecifier;
}

- (void)dealloc;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)setLocaleLanguage:(id)arg1 specifier:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)specifiers;
- (void)updateChecked:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface PSAdvancedLocaleController : PSListController
{
    _Bool _automaticLocaleDisabled;
}

+ (_Bool)automaticLanguageUpdateEnabled;
@property(nonatomic) _Bool automaticLocaleDisabled; // @synthesize automaticLocaleDisabled=_automaticLocaleDisabled;
- (id)automatic:(id)arg1;
- (void)setAutomatic:(id)arg1 specifier:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)specifiers;
- (void)reloadLocale;
- (id)init;
- (void)localeChangedAction;

@end

@interface PSAirplaneModeSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSAppListController : PSListController
{
    PSSystemPolicyForApp *_systemPolicy;
}

+ (id)specifiersFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)childPaneSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)multiValueSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)titleValueSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)sliderSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)toggleSwitchSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)textFieldSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)radioGroupSpecifiersFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)groupSpecifierFromDictionary:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3 target:(id)arg4;
+ (id)_localizedTitlesFromUnlocalizedTitles:(id)arg1 stringsTable:(id)arg2 parentSpecifier:(id)arg3;
@property(retain, nonatomic) PSSystemPolicyForApp *systemPolicy; // @synthesize systemPolicy=_systemPolicy;
- (id)bundle;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)specifiers;
- (void)setPreferenceValue:(id)arg1 specifier:(id)arg2;
- (void)postThirdPartySettingDidChangeNotificationForSpecifier:(id)arg1;
- (void)_setToggleSwitchSpecifierValue:(id)arg1 specifier:(id)arg2;
- (id)_readToggleSwitchSpecifierValue:(id)arg1;
- (id)_valueFromUIValue:(id)arg1 specifier:(id)arg2;
- (id)_uiValueFromValue:(id)arg1 specifier:(id)arg2;
- (void)dealloc;

@end

@interface PSAssistiveTouchSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSAutoLockSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSBarButtonSpinnerView : UIBarButtonItem
{
    UIActivityIndicatorView *_spinner;
}

- (void)stopAnimating;
- (void)startAnimating;
- (void)dealloc;
- (id)init;

@end

@interface PSBluetoothSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSBrightnessController : NSObject
{
    CDUnknownBlockType _isTracking;
    CDUnknownBlockType _brightnessChangedExternally;
}

+ (id)sharedController;
@property(copy, nonatomic) CDUnknownBlockType brightnessChangedExternally; // @synthesize brightnessChangedExternally=_brightnessChangedExternally;
@property(copy, nonatomic) CDUnknownBlockType isTracking; // @synthesize isTracking=_isTracking;

@end

@interface PSBrightnessSettingsDetail : NSObject <PSSettingsDetail>
{
}

+ (_Bool)autoBrightnessEnabled;
+ (void)setAutoBrightnessEnabled:(_Bool)arg1;
+ (_Bool)deviceSupportsAutoBrightness;
+ (void)endObservingExternalBrightnessChanges;
+ (void)beginObservingExternalBrightnessChanges:(CDUnknownBlockType)arg1 changedAction:(CDUnknownBlockType)arg2;
+ (void)endBrightnessAdjustmentTransaction;
+ (void)beginBrightnessAdjustmentTransaction;
+ (void)setValue:(double)arg1;
+ (void)incrementBrightnessValue:(double)arg1;
+ (double)incrementedBrightnessValue:(double)arg1;
+ (double)currentValue;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSBundleController : NSObject
{
    PSListController *_parent;
}

- (id)initWithParentListController:(id)arg1;
- (id)specifiersWithSpecifier:(id)arg1;
- (void)unload;
- (void)load;

@end

@interface PSCastleSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSCellularDataSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)deviceSupportsCellularData;
+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSClearBackgroundCell : PSTableCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PSCloudStorageOffersManager : NSObject <CommerceRemoteUIDelegateDelegate>
{
    CommerceRemoteUIDelegate *_commerceDelegate;
    id <PSCloudStorageOffersManagerDelegate> _delegate;
    unsigned long long _requiredStorageThreshold;
}

@property(nonatomic) unsigned long long requiredStorageThreshold; // @synthesize requiredStorageThreshold=_requiredStorageThreshold;
@property(nonatomic) id <PSCloudStorageOffersManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)commerceDelegateDidCancel:(id)arg1;
- (void)commerceDelegate:(id)arg1 loadDidFailWithError:(id)arg2;
- (void)commerceDelegate:(id)arg1 willPresentObjectModel:(id)arg2 page:(id)arg3;
- (void)dealloc;
- (void)cancelLoad;
- (void)beginFlowWithNavigationController:(id)arg1 modally:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSCompassSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSpecifier : NSObject
{
    id target;
    SEL getter;
    SEL setter;
    SEL action;
    SEL cancel;
    Class detailControllerClass;
    long long cellType;
    Class editPaneClass;
    long long keyboardType;
    long long autoCapsType;
    long long autoCorrectionType;
    unsigned long long textFieldType;
    NSString *_name;
    NSArray *_values;
    NSDictionary *_titleDict;
    NSDictionary *_shortTitleDict;
    id _userInfo;
    NSMutableDictionary *_properties;
    SEL _confirmationAction;
    SEL _confirmationCancelAction;
    SEL _buttonAction;
    SEL _controllerLoadAction;
    _Bool _showContentString;
}

+ (long long)keyboardTypeForString:(id)arg1;
+ (long long)autoCapsTypeForString:(id)arg1;
+ (long long)autoCorrectionTypeForNumber:(id)arg1;
+ (id)specifierWithSpecifier:(id)arg1;
+ (id)groupSpecifierWithID:(id)arg1 name:(id)arg2;
+ (id)groupSpecifierWithID:(id)arg1;
+ (id)emptyGroupSpecifier;
+ (id)groupSpecifierWithName:(id)arg1;
+ (id)preferenceSpecifierNamed:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4 detail:(Class)arg5 cell:(long long)arg6 edit:(Class)arg7;
+ (id)deleteButtonSpecifierWithName:(id)arg1 target:(id)arg2 action:(SEL)arg3;
@property(nonatomic) _Bool showContentString; // @synthesize showContentString=_showContentString;
@property(nonatomic) SEL controllerLoadAction; // @synthesize controllerLoadAction=_controllerLoadAction;
@property(nonatomic) SEL buttonAction; // @synthesize buttonAction=_buttonAction;
@property(nonatomic) SEL confirmationCancelAction; // @synthesize confirmationCancelAction=_confirmationCancelAction;
@property(nonatomic) SEL confirmationAction; // @synthesize confirmationAction=_confirmationAction;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSArray *values; // @synthesize values=_values;
@property(retain, nonatomic) NSDictionary *shortTitleDictionary; // @synthesize shortTitleDictionary=_shortTitleDict;
@property(retain, nonatomic) NSDictionary *titleDictionary; // @synthesize titleDictionary=_titleDict;
@property(retain, nonatomic) id userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) Class editPaneClass; // @synthesize editPaneClass;
@property(nonatomic) long long cellType; // @synthesize cellType;
@property(nonatomic) Class detailControllerClass; // @synthesize detailControllerClass;
@property(nonatomic) id target; // @synthesize target;
- (_Bool)isEqualToSpecifier:(id)arg1;
- (long long)titleCompare:(id)arg1;
- (void)setKeyboardType:(long long)arg1 autoCaps:(long long)arg2 autoCorrection:(long long)arg3;
@property(retain, nonatomic) NSString *identifier;
- (id)description;
- (void)dealloc;
- (void)setupIconImageWithPath:(id)arg1;
- (void)setupIconImageWithBundle:(id)arg1;
- (void)setValues:(id)arg1 titles:(id)arg2 shortTitles:(id)arg3 usingLocalizedTitleSorting:(_Bool)arg4;
- (void)setValues:(id)arg1 titles:(id)arg2 shortTitles:(id)arg3;
- (void)setValues:(id)arg1 titles:(id)arg2;
- (void)loadValuesAndTitlesFromDataSource;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)properties;
- (void)setProperties:(id)arg1;
- (void)removePropertyForKey:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (id)init;

@end

@interface PSConfirmationSpecifier : PSSpecifier
{
    NSString *_title;
    NSString *_prompt;
    NSString *_okButton;
    NSString *_cancelButton;
}

+ (id)specifierWithSpecifier:(id)arg1;
+ (id)preferenceSpecifierNamed:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4 detail:(Class)arg5 cell:(long long)arg6 edit:(Class)arg7;
@property(retain, nonatomic) NSString *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) NSString *okButton; // @synthesize okButton=_okButton;
@property(retain, nonatomic) NSString *prompt; // @synthesize prompt=_prompt;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void)dealloc;
- (_Bool)isEqualToSpecifier:(id)arg1;
- (_Bool)isDestructive;
- (void)setupWithDictionary:(id)arg1;

@end

@interface PSControlCenterSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSDNDSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (void)loadStateWithCompletion:(CDUnknownBlockType)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSDUETSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSDiscreteSlider : UISlider
{
    UIColor *_trackMarkersColor;
}

@property(retain, nonatomic) UIColor *trackMarkersColor; // @synthesize trackMarkersColor=_trackMarkersColor;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)setValue:(float)arg1 animated:(_Bool)arg2;
- (void)sliderTapped:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PSEditableListController : PSListController
{
    _Bool _editable;
    _Bool _editingDisabled;
}

- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)didLock;
- (void)suspend;
- (_Bool)performDeletionActionForSpecifier:(id)arg1;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)setEditable:(_Bool)arg1;
- (void)_setEditable:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)editable;
- (void)editDoneTapped;
- (void)showController:(id)arg1 animate:(_Bool)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setEditButtonEnabled:(_Bool)arg1;
- (void)setEditingButtonHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_updateNavigationBar;
- (id)_editButtonBarItem;
- (id)init;

@end

@interface PSExpandableListGroupController : NSObject <PSSpecifierGroupController>
{
    PSListController *_listController;
    PSSpecifier *_groupSpecifier;
    long long _collaspeAfterCount;
    NSMutableArray *_specifiers;
    _Bool _showAll;
    PSSpecifier *_showAllSpecifier;
    PSSpecifier *_spinnerSpecifier;
}

- (id)specifiers;
- (id)spinnerSpecifier;
- (void)showAll;
- (id)showAllSpecifier;
- (void)reloadSpecifier:(id)arg1;
- (void)removeAllSpecifiers;
- (void)addSpecifiers:(id)arg1;
- (long long)_groupIndex;
- (void)dealloc;
- (id)initWithListController:(id)arg1 groupSpecifier:(id)arg2;
- (id)initWithListController:(id)arg1 groupSpecifier:(id)arg2 collapseAfterCount:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSExpandableAppListGroupController : PSExpandableListGroupController
{
}

- (id)showAllSpecifier;

@end

@interface PSFaceTimeSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSFacebookSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSFlickrSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSFooterHyperlinkView : UIView <PSHeaderFooterView, UITextViewDelegate>
{
    UITextView *_textView;
    NSString *_text;
    NSURL *_URL;
    struct _NSRange _linkRange;
    id _target;
    SEL _action;
}

@property SEL action; // @synthesize action=_action;
@property id target; // @synthesize target=_target;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3;
- (double)preferredHeightForWidth:(double)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(retain) NSURL *URL;
@property struct _NSRange linkRange;
@property(retain) NSString *text;
- (void)layoutSubviews;
- (void)_linkify;
- (void)dealloc;
- (id)initWithSpecifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSGameCenterSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSGuidedAccessSettingsDetail : NSObject <PSSettingsDetail>
{
}

+ (unsigned long long)guidedAccessAvailability;
+ (void)enterGuidedAccessMode;
+ (void)setGuidedAccessSwitchEnabled:(_Bool)arg1;
+ (_Bool)guidedAccessHasPasscode;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSIconMarginTableCell : PSTableCell
{
}

- (void)layoutSubviews;
- (double)iconMargin;

@end

@interface PSInternationalController : PSListController
{
    NSLocale *_locale;
    _Bool _shouldReloadSpecifiers;
    unsigned long long _deviceLanguageIndex;
    NSString *_topMostLanguage;
    _Bool _changePrimaryLanguage;
    PSSpecifier *_addLanguageSpecifier;
    NSArray *_deviceLanguageGroup;
    NSArray *_preferredLanguagesGroup;
    NSArray *_regionFormatGroup;
    NSArray *_regionFormatExampleGroup;
    NSMutableArray *_updatedAppleLanguages;
}

+ (id)titlesForLanguageIdentifiers:(id)arg1;
+ (id)shortTitlesForLanguageIdentifiers:(id)arg1;
+ (id)capitalizeFirstPartOfCountry:(id)arg1;
+ (id)formattedMoneyAndNumbers:(id)arg1 country:(id)arg2;
+ (id)formattedTime:(id)arg1;
+ (id)formattedDate:(id)arg1;
+ (id)canonicalLocaleIdentifierWithValidCalendarForComponents:(id)arg1;
+ (void)setLocaleOnly:(id)arg1;
+ (void)resetTimeFormatPreferences;
+ (void)setLocaleAndResetTimeFormat:(id)arg1;
+ (void)setLocale:(id)arg1;
+ (id)validateLocale:(id)arg1;
+ (void)setLocaleAfterLanguageChange:(id)arg1;
+ (void)postNotificationForLanguageChange;
+ (void)setCountryForLocale:(id)arg1;
+ (void)setLanguage:(id)arg1;
+ (id)reloadLocale:(id)arg1;
+ (void)updateAppleLanguages:(id)arg1 showPreferredLanguages:(_Bool)arg2;
+ (double)sampleTime;
@property(nonatomic) _Bool changePrimaryLanguage; // @synthesize changePrimaryLanguage=_changePrimaryLanguage;
@property(retain, nonatomic) NSMutableArray *updatedAppleLanguages; // @synthesize updatedAppleLanguages=_updatedAppleLanguages;
@property(retain, nonatomic) NSArray *regionFormatExampleGroup; // @synthesize regionFormatExampleGroup=_regionFormatExampleGroup;
@property(retain, nonatomic) NSArray *regionFormatGroup; // @synthesize regionFormatGroup=_regionFormatGroup;
@property(retain, nonatomic) NSArray *preferredLanguagesGroup; // @synthesize preferredLanguagesGroup=_preferredLanguagesGroup;
@property(retain, nonatomic) NSArray *deviceLanguageGroup; // @synthesize deviceLanguageGroup=_deviceLanguageGroup;
@property(retain, nonatomic) PSSpecifier *addLanguageSpecifier; // @synthesize addLanguageSpecifier=_addLanguageSpecifier;
@property(nonatomic) _Bool shouldReloadSpecifiers; // @synthesize shouldReloadSpecifiers=_shouldReloadSpecifiers;
- (void)showBlackViewWithLabel:(id)arg1 withLanguageIdentifier:(id)arg2;
- (void)changeLanguage:(id)arg1;
- (void)cancelChangeLanguage:(id)arg1;
- (id)calendar:(id)arg1;
- (void)setCalendar:(id)arg1 specifier:(id)arg2;
- (id)locale:(id)arg1;
- (void)setLocale:(id)arg1 specifier:(id)arg2;
- (void)setCountryForLocale:(id)arg1;
- (void)setLanguage:(id)arg1 specifier:(id)arg2;
- (id)localizedLanguage:(id)arg1;
- (id)language:(id)arg1;
- (void)showOfficialLanguageSheet:(id)arg1;
- (void)showLanguageSheet:(id)arg1;
- (void)cancelEdits;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)toggleEdit;
- (id)updatedDeviceLanguage;
- (id)specifiers;
- (void)reloadLocale;
- (void)dealloc;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (_Bool)canEditLanguageAtIndexPath:(id)arg1 tableView:(id)arg2;
- (_Bool)onlyOneSystemLanguageInPreferredLanguages;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)updateCell:(id)arg1 forPreferredLanguageAtIndex:(unsigned long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (unsigned long long)sectionIndexForTableView:(id)arg1 fromSuperSectionIndex:(unsigned long long)arg2;
- (void)updateSelectionStyleForVisibleCells;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_removeBlackFrame;
- (id)init;
- (void)localeChangedAction;

@end

@interface PSInternationalLanguageController : PSViewController <UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate>
{
    UISearchBar *_searchBar;
    UITableView *_tableView;
    UIView *_contentView;
    _Bool _searchIsActive;
    PSLanguageSelector *_languageSelector;
    PSLocaleSelector *_localeSelector;
    PSLanguage *_checkedLanguage;
    NSArray *_deviceLanguages;
    NSArray *_otherLanguages;
    NSArray *_filteredDeviceLanguages;
    NSArray *_filteredOtherLanguages;
    NSString *_savedSearchTerm;
}

@property(nonatomic) _Bool searchIsActive; // @synthesize searchIsActive=_searchIsActive;
@property(retain, nonatomic) NSString *savedSearchTerm; // @synthesize savedSearchTerm=_savedSearchTerm;
@property(retain, nonatomic) NSArray *filteredOtherLanguages; // @synthesize filteredOtherLanguages=_filteredOtherLanguages;
@property(retain, nonatomic) NSArray *filteredDeviceLanguages; // @synthesize filteredDeviceLanguages=_filteredDeviceLanguages;
@property(retain, nonatomic) NSArray *otherLanguages; // @synthesize otherLanguages=_otherLanguages;
@property(retain, nonatomic) NSArray *deviceLanguages; // @synthesize deviceLanguages=_deviceLanguages;
@property(retain, nonatomic) PSLanguage *checkedLanguage; // @synthesize checkedLanguage=_checkedLanguage;
@property(retain, nonatomic) PSLocaleSelector *localeSelector; // @synthesize localeSelector=_localeSelector;
@property(retain, nonatomic) PSLanguageSelector *languageSelector; // @synthesize languageSelector=_languageSelector;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (id)filteredLanguagesForLanguageList:(id)arg1 searchString:(id)arg2;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)reloadDataAndScrollToCheckedLanguageWithAnimation:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)sortByLocalizedLanguage:(id)arg1;
- (void)loadData;
- (void)loadView;
- (id)_mainContentView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)generateLanguageCells;
- (void)viewWillAppear:(_Bool)arg1;
- (void)updateNavigationItem;
- (void)doneButtonTapped;
- (void)cancelButtonTapped;
- (void)_removeBlackFrame;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSInternationalLanguageSetupController : PSSetupController <UIActionSheetDelegate, UIAlertViewDelegate>
{
    NSString *_languageToSet;
    _Bool _notOfficialLanguage;
    _Bool _useOfficialLanguages;
    PSLanguageSelector *_languageSelector;
}

@property(retain, nonatomic) PSLanguageSelector *languageSelector; // @synthesize languageSelector=_languageSelector;
- (void)changeLanguageWithIndex:(unsigned long long)arg1 tag:(unsigned long long)arg2;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (_Bool)disablesAutomaticKeyboardDismissal;
- (void)setupController;
- (_Bool)useOfficialLanguages;
- (id)language:(id)arg1;
- (void)setLanguage:(id)arg1 specifier:(id)arg2;
- (void)setNotOfficialLanguage:(_Bool)arg1;
- (void)didFinishCommit;
- (void)saveLanguage:(_Bool)arg1;
- (void)commit;
- (void)showBlackViewWithLabel:(id)arg1 moveLanguageToTop:(_Bool)arg2 withLanguageIdentifier:(id)arg3;
- (void)dealloc;
- (id)init;
- (id)initWithOfficialLanguages;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSInvertColorsSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSKeyboardSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSKeychainSyncManager : NSObject <KeychainSyncViewControllerDelegate>
{
    _Bool _joiningCircle;
    _Bool _joiningCircleAfterRecovery;
    int _circleNotificationToken;
    int _flow;
    UIAlertView *_genericErrorAlert;
    UIAlertView *_incorrectRecoveryCodesAlert;
    UIAlertView *_iCSCSoftLimitAlert;
    UIAlertView *_iCSCHardLimitAlert;
    UIAlertView *_iCSCHardLimitWithApprovalAlert;
    UIAlertView *_devicePINChoiceAlert;
    UIAlertView *_devicePasscodeTooWeakAlert;
    UIAlertView *_devicePasscodeChangeAlert;
    UIAlertView *_enableWithExistingBackupAlert;
    UIAlertView *_resetConfirmationAlert;
    UIAlertView *_deleteSafariPasswordsAlert;
    UIAlertView *_verificationCodeLimitAlert;
    KeychainSyncDevicePINController *_devicePinController;
    KeychainSyncSecurityCodeController *_simpleSecurityCodeController;
    KeychainSyncSecurityCodeController *_complexSecurityCodeController;
    KeychainSyncAdvancedSecurityCodeController *_advancedSecurityCodeChoiceController;
    KeychainSyncSecurityCodeController *_securityCodeRecoveryController;
    KeychainSyncPhoneNumberController *_phoneNumberController;
    KeychainSyncSMSVerificationController *_smsValidationController;
    UIView *_spinningView;
    unsigned int _spinnerCount;
    NSTimer *_credentialExpirationTimer;
    _Bool _circleWasReset;
    int _stagedSecurityCodeType;
    NSString *_appleIDUsername;
    NSString *_appleIDPassword;
    CDUnknownBlockType _completion;
    CDUnknownBlockType _passwordPromptCompletion;
    CDUnknownBlockType _changeSecurityCodeCompletion;
    CDUnknownBlockType _resetCompletion;
    CDUnknownBlockType _circleJoinCompletion;
    UIViewController *_resetPromptControllerHost;
    PSSetupController *_settingsSetupController;
    PSRootController *_buddyNavigationController;
    NSString *_securityCodeRecoveryAttempt;
    NSString *_stagedSecurityCode;
}

+ (void)getStatusWithCompletion:(CDUnknownBlockType)arg1;
+ (id)sharedManager;
@property(nonatomic) _Bool circleWasReset; // @synthesize circleWasReset=_circleWasReset;
@property(readonly, nonatomic) int stagedSecurityCodeType; // @synthesize stagedSecurityCodeType=_stagedSecurityCodeType;
@property(readonly, retain, nonatomic) NSString *stagedSecurityCode; // @synthesize stagedSecurityCode=_stagedSecurityCode;
@property(retain, nonatomic) NSString *securityCodeRecoveryAttempt; // @synthesize securityCodeRecoveryAttempt=_securityCodeRecoveryAttempt;
@property(retain, nonatomic) PSRootController *buddyNavigationController; // @synthesize buddyNavigationController=_buddyNavigationController;
@property(retain, nonatomic) PSSetupController *settingsSetupController; // @synthesize settingsSetupController=_settingsSetupController;
@property(retain, nonatomic) UIViewController *resetPromptControllerHost; // @synthesize resetPromptControllerHost=_resetPromptControllerHost;
@property(copy, nonatomic) CDUnknownBlockType circleJoinCompletion; // @synthesize circleJoinCompletion=_circleJoinCompletion;
@property(copy, nonatomic) CDUnknownBlockType resetCompletion; // @synthesize resetCompletion=_resetCompletion;
@property(copy, nonatomic) CDUnknownBlockType changeSecurityCodeCompletion; // @synthesize changeSecurityCodeCompletion=_changeSecurityCodeCompletion;
@property(copy, nonatomic) CDUnknownBlockType passwordPromptCompletion; // @synthesize passwordPromptCompletion=_passwordPromptCompletion;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSString *appleIDPassword; // @synthesize appleIDPassword=_appleIDPassword;
@property(retain, nonatomic) NSString *appleIDUsername; // @synthesize appleIDUsername=_appleIDUsername;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)pinChoiceAlertDidChooseToUseDevicePasscode:(_Bool)arg1;
- (void)keychainSyncPhoneNumberController:(id)arg1 didCompleteWithPhoneNumber:(id)arg2 countryInfo:(id)arg3;
- (void)joinCircleAndEnableSecureBackupWithPhoneNumber:(id)arg1 countryInfo:(id)arg2;
- (void)_enableSecureBackupWithPhoneNumber:(id)arg1 countryInfo:(id)arg2;
- (void)keychainSyncController:(id)arg1 didFinishWithResult:(id)arg2 error:(id)arg3;
- (void)_autoVetSMSValidationWithToken:(id)arg1;
- (void)keychainSyncControllerCancel:(id)arg1;
- (void)_preSetupCancelledWithCurrentStatus;
- (void)_finishedWithStatus:(int)arg1 error:(id)arg2;
- (void)_callCompletionWithStatus:(int)arg1 error:(id)arg2;
- (void)handleCircleChangedNotification;
- (void)_recoverWithSecurityCode:(id)arg1 verificationCode:(id)arg2;
- (void)joinCircleWithCompletion:(CDUnknownBlockType)arg1;
- (void)joinCircleAfterRecovery:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)dismissAppleSupportPane:(id)arg1;
- (void)showContactAppleSupportPane;
- (void)showNetworkReachabilityError;
- (void)showController:(id)arg1;
- (void)_cleanup;
- (void)_peerApprovalFromRecoveryFlow;
- (void)_resetFromRecoveryFlow;
- (_Bool)_resetCircleAndDisableBackupWithError:(id *)arg1;
- (void)showResetAcknowledgementIfNeeded;
- (void)_showInvalidPhoneNumberAlertWithDigits:(id)arg1 countryInfo:(id)arg2;
- (void)_showGenericFlowErrorAlert;
- (void)promptForDevicePasscodeChangeToPasscode:(id)arg1;
- (void)_changeToNewSecurityCode:(id)arg1 type:(int)arg2 smsTarget:(id)arg3 smsTargetCountryInfo:(id)arg4;
- (_Bool)_changeSecurityCode:(id)arg1 type:(int)arg2 smsTarget:(id)arg3 smsTargetCountryInfo:(id)arg4 username:(id)arg5 password:(id)arg6 error:(id *)arg7;
- (void)stopNavigationSpinner;
- (void)startNavigationSpinnerInViewController:(id)arg1;
- (id)preferencesApp;
- (void)setStagedSecurityCode:(id)arg1 type:(int)arg2;
- (void)showPinChoiceAlert;
- (void)_registerForCircleChangeNotificationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)_registerForCircleChangeNotifications;
- (void)makeSettingsSetupController;
- (_Bool)_errorRequiresPasswordPrompt:(id)arg1;
- (void)promptForPasswordIfCredentialsNotCachedOverController:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)promptForPasswordIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)promptForPasswordIfNeededOverController:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)promptForPasswordIfNeededForWritingOverController:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)promptForPasswordOverController:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)registerUserCredentialsName:(id)arg1 password:(id)arg2 error:(id *)arg3;
- (void)_cleanupAppleIDCredentials;
- (id)navigationController;
@property(readonly, nonatomic, getter=isRunningInBuddy) _Bool runningInBuddy;
- (void)dealloc;
- (void)disableKeychainSyncWithCompletion:(CDUnknownBlockType)arg1;
- (void)showResetAndJoinFlowOverController:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)_showResetFlowOverController:(id)arg1 withEnableBackupText:(_Bool)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)showEnableFlowWithNavigationController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showChangeSecurityCodeFlowWithSpecifier:(id)arg1 overController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showRecoveryFlowWithNavigationController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showRecoveryFlowWithSpecifier:(id)arg1 overController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showEnableEscrowFlowWithSpecifier:(id)arg1 overController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showEnableSyncFlowWithSpecifier:(id)arg1 overController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSKeychainSyncPhoneNumber : NSObject
{
    NSString *_digits;
    KeychainSyncCountryInfo *_countryInfo;
}

+ (id)phoneNumberWithDigits:(id)arg1 countryInfo:(id)arg2;
@property(retain, nonatomic) KeychainSyncCountryInfo *countryInfo; // @synthesize countryInfo=_countryInfo;
@property(retain, nonatomic) NSString *digits; // @synthesize digits=_digits;
- (id)formattedAndObfuscatedString;
- (id)formattedStringWithDialingPrefix;
- (id)formattedString;
- (id)_stringByAddingDialingPrefixToString:(id)arg1;
- (void)dealloc;

@end

@interface PSLanguage : NSObject
{
    NSString *_languageCode;
    NSString *_languageName;
    NSString *_localizedLanguageName;
}

+ (id)languageWithCode:(id)arg1 name:(id)arg2 localizedName:(id)arg3;
@property(retain, nonatomic) NSString *localizedLanguageName; // @synthesize localizedLanguageName=_localizedLanguageName;
@property(retain, nonatomic) NSString *languageName; // @synthesize languageName=_languageName;
@property(retain, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
- (void)dealloc;
- (_Bool)displayNamesAreEqual;

@end

@interface PSLanguageSelector : NSObject
{
    NSString *_language;
    NSArray *_languagesWithLocaleData;
    NSArray *_otherLanguages;
}

+ (id)languageArrayAfterSettingLanguage:(id)arg1 fallback:(id)arg2 toLanguageArray:(id)arg3;
+ (id)sharedInstance;
- (id)deviceLanguageIdentifier;
- (id)systemLanguages;
- (_Bool)languageIsSupportedLanguage:(id)arg1;
- (id)languagesWithAvailableLocaleIdentifiers;
- (id)renderableLanguagesFromList:(id)arg1;
- (id)supportedLanguages;
- (void)setLanguage:(id)arg1 fallback:(id)arg2;
- (void)setLanguage:(id)arg1;
- (id)appleLanguages;
- (_Bool)preferredLanguages;
- (id)userDeviceLanguageOrder;
- (id)defaultOtherLanguages;
- (void)dealloc;

@end

@interface PSLanguageTableViewCell : PSTableCell
{
}

+ (long long)cellStyle;

@end

@interface PSLargeTextController : PSListController
{
    UILabel *_bodyExampleLabel;
    UILabel *_headlineExampleLabel;
    long long _selectedCategoryIndex;
    NSArray *_contentSizeCategories;
    PSSpecifier *_sliderGroupSpecifier;
    _Bool _usesExtendedRange;
    _Bool _showsExtendedRangeSwitch;
}

@property(nonatomic) _Bool showsExtendedRangeSwitch; // @synthesize showsExtendedRangeSwitch=_showsExtendedRangeSwitch;
- (id)usesExtendedRangeForSpecifier:(id)arg1;
- (void)setUsesExtendedRange:(id)arg1 forSpecifier:(id)arg2;
- (id)getDynamicTypeValueForSpecifier:(id)arg1;
- (void)setDynamicTypeValue:(id)arg1 forSpecifier:(id)arg2;
- (void)sizeCategoryDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)specifiers;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)dealloc;

@end

@interface PSLazyImagePromise : NSObject
{
    NSString *_imagePath;
    NSString *_imageName;
    NSBundle *_imageBundle;
    CDUnknownBlockType _loadBlock;
    UIImage *_image;
    _Bool _imageLoaded;
}

+ (id)imagePromiseWithLoadBlock:(CDUnknownBlockType)arg1;
+ (id)imagePromiseWithImageNamed:(id)arg1 inBundle:(id)arg2;
+ (id)imagePromiseWithImagePath:(id)arg1;
@property(readonly, nonatomic, getter=isImageLoaded) _Bool imageLoaded; // @synthesize imageLoaded=_imageLoaded;
@property(readonly, nonatomic) UIImage *image;
- (void)loadImage;
- (void)dealloc;

@end

@interface PSLocaleController : PSViewController <UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate>
{
    UITableView *_tableView;
    UIView *_contentView;
    UISearchBar *_searchBar;
    _Bool _searchMode;
    PSLocaleSelector *_localeSelector;
    NSArray *_filteredListContent;
    NSArray *_sections;
    NSArray *_regionsList;
    PSRegion *_currentRegion;
}

@property(retain, nonatomic) PSRegion *currentRegion; // @synthesize currentRegion=_currentRegion;
@property(retain, nonatomic) NSArray *regionsList; // @synthesize regionsList=_regionsList;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) NSArray *filteredListContent; // @synthesize filteredListContent=_filteredListContent;
@property(retain, nonatomic) PSLocaleSelector *localeSelector; // @synthesize localeSelector=_localeSelector;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (id)filteredRegionsForRegionList:(id)arg1 searchString:(id)arg2;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)reloadDataAndScrollToCheckedRegionAnimated:(_Bool)arg1;
- (void)updateChecked:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)sectionIndexTitlesForTableView:(id)arg1;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)loadRegions;
- (void)reloadSections;
- (id)_mainContentView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSLocaleSelector : NSObject
{
}

+ (id)sharedInstance;
- (void)setLocaleFromRegionCode:(id)arg1;
- (id)currentLocale;
- (id)availableLocaleIdentifiers;

@end

@interface PSLocationServicesSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSMCCSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSMagnifyController : PSListController <UIScrollViewDelegate, UIWebViewDelegate>
{
    PSMagnifyMode *_originalMagnifyMode;
    PSMagnifyMode *_selectedMagnifyMode;
    UISegmentedControl *_magnifyModePicker;
    UIScrollView *_previewsScroller;
    UIPageControl *_pageControl;
    UIView *_dividerLine;
    NSURL *_HTMLResourceBaseURL;
    NSMutableDictionary *_webViewsForMagnifyMode;
    NSObject<OS_dispatch_semaphore> *_firstLoadSemaphore;
    _Bool _loaded;
    PSMagnifyMode *_initialMagnifyMode;
    _Bool _doneButtonCommits;
    id <PSMagnifyControllerDelegate> _delegate;
}

+ (void)commitMagnifyMode:(id)arg1;
+ (void)commitMagnifyMode:(id)arg1 withRelaunchURL:(id)arg2;
+ (id)currentMagnifyMode;
+ (id)localizedMagnifyModeName;
+ (_Bool)shouldShowMagnify;
@property(nonatomic) id <PSMagnifyControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool doneButtonCommits; // @synthesize doneButtonCommits=_doneButtonCommits;
- (void)magnifyModeConfirmed:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)updateNavigationButtons;
- (void)finishDone:(id)arg1;
- (void)finishCancel:(id)arg1;
- (id)specifiers;
- (void)viewDidLayoutSubviews;
- (void)magnifyModeSelectionChanged:(id)arg1;
- (void)setSelectedMagnifyMode:(id)arg1;
- (id)localizedCSSStringFromUnlocalizedCSSString:(id)arg1;
- (void)loadView;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (id)currentWebViewSet;
- (id)arrayOfWebViewsWithCount:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithZoomedSelected:(_Bool)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSMagnifyMode : NSObject <NSCopying>
{
    _Bool _zoomed;
    NSString *_localizedName;
    NSString *_name;
    NSArray *_previewHTMLStrings;
    NSArray *_previewStyleSheets;
    struct CGSize _size;
}

+ (id)magnifyModeWithSize:(struct CGSize)arg1 name:(id)arg2 localizedName:(id)arg3 isZoomed:(_Bool)arg4;
@property(retain, nonatomic) NSArray *previewStyleSheets; // @synthesize previewStyleSheets=_previewStyleSheets;
@property(retain, nonatomic) NSArray *previewHTMLStrings; // @synthesize previewHTMLStrings=_previewHTMLStrings;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic, getter=isZoomed) _Bool zoomed; // @synthesize zoomed=_zoomed;
@property(retain, nonatomic) NSString *localizedName; // @synthesize localizedName=_localizedName;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface PSMapsSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSMessagesSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSMusicSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSNavBarSpinnerManager : NSObject
{
    NSMutableDictionary *_savedRightItems;
    NSMutableDictionary *_savedLeftItems;
    NSMutableDictionary *_navigationItems;
}

+ (id)sharedSpinnerManager;
- (void)stopAnimatingForIdentifier:(id)arg1;
- (void)startAnimatingInNavItem:(id)arg1 forIdentifier:(id)arg2;
- (void)startAnimatingInNavItem:(id)arg1 forIdentifier:(id)arg2 hideBackButton:(_Bool)arg3;
- (void)dealloc;
- (id)init;

@end

@interface PSNonMovableTapGestureRecognizer : UITapGestureRecognizer
{
}

- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;

@end

@interface PSNotesSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSNotificationSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSPasscodeField : UIView <UIKeyInput>
{
    NSMutableArray *_dashViews;
    NSMutableArray *_dotViews;
    NSMutableArray *_digitViews;
    NSMutableString *_stringValue;
    _Bool _securePasscodeEntry;
    id <PSPasscodeFieldDelegate> _delegate;
    unsigned long long _numberOfEntryFields;
}

@property(nonatomic) _Bool securePasscodeEntry; // @synthesize securePasscodeEntry=_securePasscodeEntry;
@property(readonly, nonatomic) unsigned long long numberOfEntryFields; // @synthesize numberOfEntryFields=_numberOfEntryFields;
@property(nonatomic) id <PSPasscodeFieldDelegate> delegate; // @synthesize delegate=_delegate;
- (void)deleteBackward;
- (_Bool)hasText;
- (void)insertText:(id)arg1;
@property(nonatomic) long long keyboardType;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (void)setStringValue:(id)arg1;
- (id)stringValue;
- (void)layoutSubviews;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
- (void)dealloc;
- (id)initWithNumberOfEntryFields:(unsigned long long)arg1;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;

@end

@interface PSPasscodeSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSTextFieldSpecifier : PSSpecifier
{
    SEL bestGuess;
    NSString *_placeholder;
}

+ (id)specifierWithSpecifier:(id)arg1;
+ (id)preferenceSpecifierNamed:(id)arg1 target:(id)arg2 set:(SEL)arg3 get:(SEL)arg4 detail:(Class)arg5 cell:(long long)arg6 edit:(Class)arg7;
- (_Bool)isEqualToSpecifier:(id)arg1;
- (id)placeholder;
- (void)setPlaceholder:(id)arg1;
- (void)dealloc;

@end

@interface PSPhoneNumberSpecifier : PSTextFieldSpecifier <UITextFieldDelegate>
{
    NSString *_countryCode;
}

@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSPhoneNumberTableCell : PSEditableTableCell
{
}

- (void)layoutSubviews;

@end

@interface PSPhoneSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSPhotosAndCameraSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSPrivacySettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSRegion : NSObject
{
    NSString *_regionName;
    NSString *_regionCode;
}

+ (id)regionWithName:(id)arg1 code:(id)arg2;
@property(retain, nonatomic) NSString *regionCode; // @synthesize regionCode=_regionCode;
@property(retain, nonatomic) NSString *regionName; // @synthesize regionName=_regionName;
- (void)dealloc;

@end

@interface PSRemindersSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSRestrictionsController : NSObject
{
}

+ (void)resetRestrictionsPassword;
+ (void)resetRestrictions;
+ (void)setSpringBoardCapability:(id)arg1 enabled:(_Bool)arg2;
+ (id)TCCServices;
+ (id)restrictionSpecifiers;

@end

@interface PSRestrictionsPasscodeController : NSObject
{
}

+ (id)_keychainPasswordForRestrictions;
+ (void)_removeKeychainPasswordForRestrictions;
+ (_Bool)validatePIN:(id)arg1;
+ (_Bool)settingEnabled;
+ (void)setPIN:(id)arg1;
+ (void)removePasswordForRestrictions;
+ (void)setPasswordForRestrictions:(id)arg1;
+ (id)passwordForRestrictions;
+ (id)saltForRestrictions;
+ (id)newHashDataForPassword:(id)arg1 andSalt:(id)arg2;
+ (id)_restrictionPasswordDictionary;
+ (id)_generateSalt;
+ (_Bool)legacyRestrictionsInEffect;
+ (void)migrateRestrictionsPasscode;

@end

@interface PSSafariSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSearchController : NSObject <PSSearchModelDelegate, PSSearchModelDataSource, UITableViewDelegate, UITableViewDataSource, UISearchDisplayDelegate, UISearchBarDelegate>
{
    UISearchDisplayController *_displayController;
    PSSearchResults *_searchResults;
    NSMutableDictionary *_iconViewMap;
    NSMutableArray *_reusableIconViews;
    _Bool _searchEnabled;
    _Bool _showToggles;
    _Bool _showSectionInDetailText;
    int _notifyToken;
    UISearchBar *_searchBar;
    PSListController *_listController;
    id <PSSearchControllerDelegate> _delegate;
}

+ (double)_additionalHeightForLabelWithText:(id)arg1 font:(id)arg2 boundingWidth:(double)arg3;
@property(nonatomic) id <PSSearchControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) PSListController *listController; // @synthesize listController=_listController;
@property(readonly, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
- (Class)rootSearchControllerClassForSearchModel:(id)arg1;
- (id)rootSpecifiersForSearchModel:(id)arg1;
- (void)searchModelDidFinishIndexing:(id)arg1;
- (void)searchModelWillBeginIndexing:(id)arg1;
- (void)searchModel:(id)arg1 updatedWithNewResults:(id)arg2 forQuery:(id)arg3;
- (void)_updateSearchResultsWithText:(id)arg1;
- (id)_buildURLForEntry:(id)arg1 isRoot:(_Bool *)arg2;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchDisplayController:(id)arg1 willUnloadSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 didLoadSearchResultsTableView:(id)arg2;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_updateIconViews:(_Bool)arg1;
- (void)_removeIconViewForSection:(id)arg1;
- (_Bool)_shouldShowSwitchForSearchEntry:(id)arg1;
- (CDStruct_d8808cea)_layoutInfoForEntryAtIndexPath:(id)arg1;
- (id)_detailTextForSearchEntry:(id)arg1 effectiveTitle:(id *)arg2;
- (id)readPreferenceValue:(id)arg1;
- (void)setPreferenceValue:(id)arg1 specifier:(id)arg2;
- (id)_readPreferenceValueUsingAction:(id)arg1;
- (void)_setPreferenceValueUsingAction:(id)arg1 specifier:(id)arg2;
- (void)removeRootSpecifiers:(id)arg1;
- (void)reloadRootSpecifiers:(id)arg1;
- (void)addRootSpecifiers:(id)arg1;
- (_Bool)activateWithInitialText:(id)arg1 animated:(_Bool)arg2;
- (void)setSearchBarVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setActive:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)isActive;
- (void)viewWillAppear;
- (void)_updateListControllerHeaderView:(_Bool)arg1;
- (void)_reloadSettings:(_Bool)arg1;
- (_Bool)_setBoolValue:(_Bool)arg1 forIvar:(_Bool *)arg2;
- (void)_buildSearchUIIfNecessary;
- (void)dealloc;
- (id)initWithListController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSearchEntry : NSObject
{
    PSSearchEntry *_parentEntry;
    NSMutableSet *_childEntries;
    PSSpecifier *_specifier;
    NSString *_plistName;
    NSString *_bundleName;
    NSString *_manifestBundleName;
    PSSpecifier *_groupSpecifier;
    NSMutableArray *_keywords;
    PSSpecifierAction *_action;
}

@property(retain, nonatomic) PSSpecifierAction *action; // @synthesize action=_action;
@property(readonly, retain, nonatomic) NSMutableArray *keywords; // @synthesize keywords=_keywords;
@property(retain, nonatomic) PSSpecifier *groupSpecifier; // @synthesize groupSpecifier=_groupSpecifier;
@property(copy, nonatomic) NSString *manifestBundleName; // @synthesize manifestBundleName=_manifestBundleName;
@property(copy, nonatomic) NSString *bundleName; // @synthesize bundleName=_bundleName;
@property(copy, nonatomic) NSString *plistName; // @synthesize plistName=_plistName;
@property(readonly, retain, nonatomic) PSSpecifier *specifier; // @synthesize specifier=_specifier;
@property(readonly, retain, nonatomic) NSMutableSet *childEntries; // @synthesize childEntries=_childEntries;
@property(nonatomic) PSSearchEntry *parentEntry; // @synthesize parentEntry=_parentEntry;
- (id)hierarchyDescription;
- (id)debugDescription;
- (id)description;
- (_Bool)treeContainsPropertyForKey:(id)arg1;
- (id)ancestorEntries;
- (id)rootEntry;
- (id)sectionEntry;
- (_Bool)hasListController;
- (_Bool)hasDetailController;
- (_Bool)_hasDetailController:(_Bool)arg1;
- (_Bool)isSectionEntry;
- (_Bool)isRootEntry;
@property(readonly, copy, nonatomic) NSString *identifier;
@property(readonly, copy, nonatomic) NSString *name;
- (id)initWithSpecifier:(id)arg1 parent:(id)arg2;
- (void)dealloc;

@end

@interface PSSearchIndexOperation : NSOperation
{
    PSSearchEntry *_searchEntry;
    id <PSSearchIndexOperationDelegate> _delegate;
}

+ (id)_loadSearchEntriesFromPlistForEntry:(id)arg1 bundle:(id)arg2;
+ (id)_loadThirdPartySearchEntriesForEntry:(id)arg1 bundle:(id)arg2;
+ (id)_bundleForSearchEntry:(id)arg1 thirdPartyApp:(_Bool *)arg2 checkManifest:(_Bool *)arg3;
@property(nonatomic) id <PSSearchIndexOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) PSSearchEntry *searchEntry; // @synthesize searchEntry=_searchEntry;
- (void)main;
- (void)_cancel;
- (void)_finishedIndexingWithEntries:(id)arg1 cancelled:(_Bool)arg2;
- (void)dealloc;
- (id)initWithSearchEntry:(id)arg1 delegate:(id)arg2;

@end

@interface PSSearchModel : NSObject <PSSearchIndexOperationDelegate, PSSearchOperationDelegate, PSSpecifierObserver>
{
    NSMutableSet *_delegates;
    NSMapTable *_specifierDataSources;
    NSMutableArray *_rootEntries;
    NSMutableSet *_entriesBeingIndexed;
    NSMutableSet *_indexingEntriesWithLoadedDataSources;
    NSMutableSet *_removedEntriesStillIndexing;
    NSMutableArray *_deferredSpecifierUpdates;
    PSSearchResults *_currentResults;
    NSString *_queryForCurrentResults;
    NSMutableSet *_entriesPendingSearch;
    NSMutableSet *_removedEntriesStillSearching;
    NSObject<OS_dispatch_queue> *_searchStateAccessQueue;
    _Bool _hasLoadedRootEntries;
    _Bool _hasStartedIndexing;
    NSOperationQueue *_indexOperationQueue;
    NSOperationQueue *_searchOperationQueue;
    _Bool _indexing;
    id <PSSearchModelDataSource> _dataSource;
    NSString *_currentQuery;
    PSSearchOperation *_activeSearchOperation;
}

+ (id)sharedInstance;
@property(retain) PSSearchOperation *activeSearchOperation; // @synthesize activeSearchOperation=_activeSearchOperation;
@property(readonly, nonatomic) NSArray *rootEntries; // @synthesize rootEntries=_rootEntries;
@property(readonly, nonatomic, getter=isIndexing) _Bool indexing; // @synthesize indexing=_indexing;
@property(copy) NSString *currentQuery; // @synthesize currentQuery=_currentQuery;
@property(nonatomic) id <PSSearchModelDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)invalidateSpecifiersForDataSource:(id)arg1;
- (void)dataSource:(id)arg1 performUpdates:(id)arg2;
- (void)_performSpecifierUpdates:(id)arg1 forSearchEntries:(id)arg2;
@property(readonly, nonatomic) long long observerType;
- (void)searchOperationDidCancel:(id)arg1;
- (void)searchOperationDidFinish:(id)arg1 withResults:(id)arg2;
- (id)searchOperation:(id)arg1 filteredEntriesForEntries:(id)arg2;
- (void)searchOperation:(id)arg1 configureSearchResults:(id)arg2;
- (void)searchOperationDidBegin:(id)arg1;
- (void)_updateWithNewSearchResults:(id)arg1 forQuery:(id)arg2 newSearch:(_Bool)arg3;
- (void)_beginSearchingEntriesForCurrentQuery:(id)arg1 newSearch:(_Bool)arg2;
- (void)_cancelAllSearchOperations;
- (CDUnknownBlockType)_defaultSearchResultsSectionComparator;
- (void)searchForQuery:(id)arg1;
@property(readonly) PSSearchResults *currentResults;
@property(readonly, nonatomic, getter=isLoadingResults) _Bool loadingResults;
- (void)searchIndexOperationDidCancel:(id)arg1;
- (void)searchIndexOperationDidFinish:(id)arg1 searchEntries:(id)arg2;
- (void)searchIndexOperation:(id)arg1 didFindSpecifierDataSource:(id)arg2;
- (void)_finishedIndexingEntry:(id)arg1;
- (void)_updatedEntry:(id)arg1 withChildren:(id)arg2;
- (void)_loadChildrenForEntry:(id)arg1;
- (void)_beginIndexingIfNecessary;
@property(readonly, nonatomic) _Bool hasCompletedIndexing;
- (void)_performDeferredUpdatesForEntry:(id)arg1;
- (void)_reloadSearchEntries:(id)arg1;
- (void)_removeSearchEntries:(id)arg1 usingBlock:(CDUnknownBlockType)arg2 forReload:(_Bool)arg3;
- (void)_removeSearchEntries:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_addSearchEntries:(id)arg1 parent:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)removeRootSpecifier:(id)arg1;
- (void)reloadRootSpecifier:(id)arg1;
- (void)addRootSpecifier:(id)arg1;
- (void)_addSpecifierDataSource:(id)arg1 forSearchEntry:(id)arg2;
- (id)_searchEntriesForSpecifierDataSource:(id)arg1;
- (void)_enumerateDelegatesUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)preheat;
- (id)_rootSpecifiers;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSearchOperation : NSOperation
{
    _Bool _newQuery;
    NSString *_query;
    NSSet *_rootEntries;
    PSSearchResults *_currentResults;
    id <PSSearchOperationDelegate> _delegate;
}

+ (struct __CFStringTokenizer *)_wordBoundaryTokenizer;
@property(nonatomic) id <PSSearchOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isNewQuery) _Bool newQuery; // @synthesize newQuery=_newQuery;
@property(readonly, copy) PSSearchResults *currentResults; // @synthesize currentResults=_currentResults;
@property(readonly, copy, nonatomic) NSSet *rootEntries; // @synthesize rootEntries=_rootEntries;
@property(readonly, copy, nonatomic) NSString *query; // @synthesize query=_query;
- (id)debugDescription;
- (id)description;
- (id)_filterEntriesMatchingQuery:(id)arg1 forQuery:(id)arg2;
- (_Bool)_searchEntries:(id)arg1 forQuery:(id)arg2;
- (void)main;
- (void)_didCancel;
- (void)dealloc;
- (id)initWithSearchQuery:(id)arg1 rootEntries:(id)arg2;

@end

@interface PSSearchResults : NSObject <NSCopying>
{
    NSMutableArray *_sectionEntries;
    NSMutableSet *_explicitlyAddedSectionEntries;
    NSMutableDictionary *_entriesBySection;
    _Bool _needsSorting;
    _Bool _treatSectionEntriesAsRegularEntries;
    CDUnknownBlockType _sectionComparator;
    CDUnknownBlockType _entryComparator;
}

@property(nonatomic) _Bool treatSectionEntriesAsRegularEntries; // @synthesize treatSectionEntriesAsRegularEntries=_treatSectionEntriesAsRegularEntries;
@property(copy, nonatomic) CDUnknownBlockType entryComparator; // @synthesize entryComparator=_entryComparator;
@property(copy, nonatomic) CDUnknownBlockType sectionComparator; // @synthesize sectionComparator=_sectionComparator;
- (id)description;
- (void)dealloc;
- (id)resultsByMergingWithResults:(id)arg1;
- (void)mergeWithResults:(id)arg1;
- (void)sortResults;
- (id)allSectionEntries;
- (id)entryAtIndexPath:(id)arg1;
- (id)entriesInSectionAtIndex:(unsigned long long)arg1;
- (id)sectionEntryAtIndex:(unsigned long long)arg1;
- (unsigned long long)totalNumberOfEntries;
- (unsigned long long)numberOfEntriesInSectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSectionEntries;
- (unsigned long long)removeEntries:(id)arg1;
- (_Bool)removeEntry:(id)arg1;
- (void)addEntries:(id)arg1;
- (void)addEntry:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initForCopyWithSectionEntries:(id)arg1 entriesBySection:(id)arg2 explicitlyAddedSectionEntries:(id)arg3;
- (id)init;

@end

@interface PSSearchResultsCell : UITableViewCell
{
    _Bool _shouldIndentContent;
    _Bool _shouldIndentSeparator;
}

+ (id)reuseIdentifier;
@property(nonatomic) _Bool shouldIndentSeparator; // @synthesize shouldIndentSeparator=_shouldIndentSeparator;
@property(nonatomic) _Bool shouldIndentContent; // @synthesize shouldIndentContent=_shouldIndentContent;
- (void)setDetailTitle:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)_resetIndentation;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PSSearchResultsSwitchCell : PSSearchResultsCell
{
    UISwitch *_switch;
    SEL _getter;
    SEL _setter;
    id _target;
    PSSpecifier *_specifier;
}

@property(retain, nonatomic) PSSpecifier *specifier; // @synthesize specifier=_specifier;
@property(nonatomic) id target; // @synthesize target=_target;
@property(nonatomic) SEL setter; // @synthesize setter=_setter;
@property(nonatomic) SEL getter; // @synthesize getter=_getter;
- (void)reloadValue:(_Bool)arg1;
- (void)_switchValueChanged:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PSSegmentTableCell : PSControlTableCell
{
    NSArray *_values;
    NSDictionary *_titleDict;
}

- (void)dealloc;
- (void)setValue:(id)arg1;
- (id)controlValue;
- (void)layoutSubviews;
- (void)setValues:(id)arg1 titleDictionary:(id)arg2;
- (_Bool)canReload;
- (void)setBackgroundView:(id)arg1;
- (id)titleLabel;
- (id)newControl;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

@end

@interface PSSettingsFunctions : NSObject
{
}

@end

@interface PSSinaWeiboSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSiriSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSoundsSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSpecifierAction : NSObject
{
    CDUnknownBlockType _getter;
    CDUnknownBlockType _setter;
}

+ (id)actionWithGetter:(CDUnknownBlockType)arg1 setter:(CDUnknownBlockType)arg2;
+ (id)actionWithBoolDetailClass:(Class)arg1;
@property(copy, nonatomic) CDUnknownBlockType setter; // @synthesize setter=_setter;
@property(copy, nonatomic) CDUnknownBlockType getter; // @synthesize getter=_getter;
- (void)dealloc;

@end

@interface PSSpecifierDataSource : NSObject <PSSpecifierDataSource>
{
    NSMutableSet *_observerRefs;
    _Bool _specifiersLoaded;
    NSMutableArray *_specifiers;
}

+ (id)loadSpecifiersFromPlist:(id)arg1 inBundle:(id)arg2 target:(id)arg3 stringsTable:(id)arg4;
+ (id)sharedInstance;
@property(readonly, nonatomic) NSMutableArray *specifiers; // @synthesize specifiers=_specifiers;
- (void)setPreferenceValue:(id)arg1 specifier:(id)arg2;
- (id)readPreferenceValue:(id)arg1;
- (id)specifierForID:(id)arg1;
- (void)performUpdatesAnimated:(_Bool)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)reloadSpecifiers;
- (_Bool)areSpecifiersLoaded;
- (void)loadSpecifiers;
- (id)specifiersForSpecifier:(id)arg1 observer:(id)arg2;
- (void)_invalidateSpecifiersForObservers;
- (void)_clearAllSpecifiers;
- (void)performUpdates:(id)arg1;
- (void)enumerateObserversOfClass:(Class)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)observersOfClass:(Class)arg1;
- (void)enumerateObserversUsingBlock:(CDUnknownBlockType)arg1;
- (id)observers;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSpecifierGroupIndex : NSObject <NSCopying>
{
    NSMutableArray *_specifiers;
    NSMutableArray *_groupSections;
    NSMutableArray *_groupSpecifiers;
    NSMutableArray *_ungroupedPrefixSpecifiers;
    _Bool _wantsDebugCallbacks;
}

+ (_Bool)_wantsDebuggingCallbacks;
+ (id)groupIndexWithSpecifiers:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *specifiers; // @synthesize specifiers=_specifiers;
- (id)description;
- (void)_appendDescriptionOfArray:(id)arg1 toString:(id)arg2 withTabLevel:(unsigned long long)arg3;
- (id)_tabStringOfDepth:(unsigned long long)arg1;
- (void)_didPerformOperation:(id)arg1 forSpecifierUpdates:(id)arg2;
- (void)_willPerformOperation:(id)arg1 forSpecifierUpdates:(id)arg2;
- (id)_synthesizedSpecifiersFromGroupIndex;
- (id)_groupSections;
- (unsigned long long)indexOfGroupWithID:(id)arg1;
- (unsigned long long)indexOfGroup:(id)arg1;
- (unsigned long long)indexOfGroupAtGroupIndex:(unsigned long long)arg1;
- (unsigned long long)groupIndexOfGroupWithID:(id)arg1;
- (unsigned long long)groupIndexOfGroup:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *groupSpecifiers;
- (id)specifiersInGroupWithID:(id)arg1;
- (id)specifiersInGroup:(id)arg1;
- (id)specifiersInGroupAtGroupIndex:(unsigned long long)arg1;
- (struct _NSRange)rangeOfSpecifiersInGroupWithID:(id)arg1;
- (struct _NSRange)rangeOfSpecifiersInGroup:(id)arg1;
- (struct _NSRange)rangeOfSpecifiersInGroupAtGroupIndex:(unsigned long long)arg1;
- (_Bool)getGroup:(out unsigned long long *)arg1 row:(out unsigned long long *)arg2 ofSpecifierWithID:(id)arg3;
- (_Bool)getGroup:(out unsigned long long *)arg1 row:(out unsigned long long *)arg2 ofSpecifier:(id)arg3;
- (_Bool)getGroup:(out unsigned long long *)arg1 row:(out unsigned long long *)arg2 ofSpecifierAtIndex:(unsigned long long)arg3;
- (id)indexPathForSpecifierWithID:(id)arg1;
- (id)indexPathForSpecifier:(id)arg1;
- (id)specifierAtIndexPath:(id)arg1;
- (id)indexPathForSpecifierAtIndex:(unsigned long long)arg1 forInsertion:(_Bool)arg2;
- (id)indexPathForSpecifierAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfSpecifierAtIndexPath:(id)arg1 forInsertion:(_Bool)arg2;
- (unsigned long long)indexOfSpecifierAtIndexPath:(id)arg1;
- (unsigned long long)_indexOfSpecifierInSection:(unsigned long long)arg1 row:(unsigned long long)arg2 forInsertion:(_Bool)arg3;
- (void)_getSection:(out unsigned long long *)arg1 row:(out unsigned long long *)arg2 forSpecifierAtIndex:(unsigned long long)arg3 forInsertion:(_Bool)arg4 allowGroupSpecifiers:(_Bool)arg5;
- (void)_getSection:(out unsigned long long *)arg1 row:(out unsigned long long *)arg2 forSpecifierAtIndex:(unsigned long long)arg3 forInsertion:(_Bool)arg4;
- (void)_manuallyFindSection:(out unsigned long long *)arg1 row:(out unsigned long long *)arg2 forSpecifierAtIndex:(unsigned long long)arg3;
- (unsigned long long)numberOfRowsInGroupAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfGroups;
- (void)performSpecifierUpdatesUsingBlock:(CDUnknownBlockType)arg1;
- (void)performUpdateOperation:(id)arg1 forSpecifierUpdates:(id)arg2;
- (void)performUpdateOperation:(id)arg1;
- (void)performSpecifierUpdates:(id)arg1;
- (void)reloadWithSpecifiers:(id)arg1;
- (id)_ungroupedPrefixSpecifiers;
- (void)_createGroupIndex;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initForCopyWithGroupIndex:(id)arg1;
- (id)initWithSpecifiers:(id)arg1;
- (id)_init;
- (id)init;

@end

@interface PSSpecifierUpdateContext : NSObject <NSCopying>
{
    _Bool _animated;
    _Bool _updateModelOnly;
    NSDictionary *_userInfo;
}

+ (id)contextWithUserInfo:(id)arg1;
+ (id)context;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) _Bool updateModelOnly; // @synthesize updateModelOnly=_updateModelOnly;
@property(nonatomic) _Bool animated; // @synthesize animated=_animated;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface PSSpecifierUpdateOperation : NSObject <NSCopying>
{
    long long _operation;
    PSSpecifier *_specifier;
    NSNumber *_index;
    NSNumber *_toIndex;
}

+ (id)moveOperationWithSpecifier:(id)arg1 fromIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
+ (id)removeOperationWithSpecifier:(id)arg1 atIndex:(unsigned long long)arg2;
+ (id)reloadOperationWithSpecifier:(id)arg1 atIndex:(unsigned long long)arg2;
+ (id)insertOperationWithSpecifier:(id)arg1 atIndex:(unsigned long long)arg2;
@property(retain, nonatomic) NSNumber *toIndex; // @synthesize toIndex=_toIndex;
@property(retain, nonatomic) NSNumber *index; // @synthesize index=_index;
@property(retain, nonatomic) PSSpecifier *specifier; // @synthesize specifier=_specifier;
@property(readonly, nonatomic) long long operation; // @synthesize operation=_operation;
- (_Bool)applyToArray:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithOperation:(long long)arg1 specifier:(id)arg2 fromIndex:(id)arg3 toIndex:(id)arg4;
- (id)initWithOperation:(long long)arg1 specifier:(id)arg2 index:(id)arg3;

@end

@interface PSSpecifierUpdates : NSObject <NSCopying>
{
    NSMutableArray *_currentSpecifiers;
    NSMutableArray *_updates;
    PSSpecifierGroupIndex *_groupIndex;
    _Bool _wantsDebugCallbacks;
    NSArray *_originalSpecifiers;
    PSSpecifierUpdateContext *_context;
}

+ (id)updatesByDiffingSpecifiers:(id)arg1 withSpecifiers:(id)arg2 changedBlock:(CDUnknownBlockType)arg3;
+ (void)_assertSpecifierIDsAreUnique:(id)arg1;
+ (_Bool)_wantsDebugCallbacks;
+ (Class)_groupIndexClass;
+ (id)updatesWithSpecifiers:(id)arg1;
@property(copy, nonatomic) PSSpecifierUpdateContext *context; // @synthesize context=_context;
@property(readonly, copy, nonatomic) NSArray *originalSpecifiers; // @synthesize originalSpecifiers=_originalSpecifiers;
- (id)specifiersAfterApplyingUpdatesToIndex:(unsigned long long)arg1;
- (id)stepByStepDescription;
- (id)description;
- (_Bool)swapSpecifier:(id)arg1 withSpecifier:(id)arg2;
- (_Bool)swapSpecifierAtIndex:(unsigned long long)arg1 withSpecifierAtIndex:(unsigned long long)arg2;
- (_Bool)moveSpecifier:(id)arg1 toIndex:(unsigned long long)arg2;
- (_Bool)moveSpecifierAtIndexPath:(id)arg1 toIndexPath:(id)arg2;
- (_Bool)moveSpecifierAtIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (_Bool)reloadSpecifiersInRange:(struct _NSRange)arg1;
- (_Bool)reloadSpecifierAtIndexPath:(id)arg1;
- (_Bool)reloadSpecifierAtIndex:(unsigned long long)arg1;
- (_Bool)reloadSpecifiersWithIDs:(id)arg1;
- (_Bool)reloadSpecifierWithID:(id)arg1;
- (_Bool)reloadSpecifiersInGroupWithID:(id)arg1;
- (_Bool)reloadSpecifiersInGroup:(id)arg1;
- (_Bool)reloadSpecifiersInGroupAtGroupIndex:(unsigned long long)arg1;
- (_Bool)reloadSpecifiers:(id)arg1;
- (_Bool)reloadSpecifier:(id)arg1;
- (_Bool)removeSpecifiersInGroupWithID:(id)arg1;
- (_Bool)removeSpecifiersInGroup:(id)arg1;
- (_Bool)removeSpecifiersInGroupAtGroupIndex:(unsigned long long)arg1;
- (_Bool)removeSpecifierAtIndexPath:(id)arg1;
- (_Bool)removeSpecifiersInRange:(struct _NSRange)arg1;
- (_Bool)removeSpecifierAtIndex:(unsigned long long)arg1;
- (_Bool)removeSpecifiersWithIDs:(id)arg1;
- (_Bool)removeSpecifierWithID:(id)arg1;
- (_Bool)removeSpecifiers:(id)arg1;
- (_Bool)removeSpecifier:(id)arg1;
- (_Bool)appendSpecifiers:(id)arg1 toGroupWithID:(id)arg2;
- (_Bool)appendSpecifier:(id)arg1 toGroupWithID:(id)arg2;
- (_Bool)appendSpecifiers:(id)arg1 toGroup:(id)arg2;
- (_Bool)appendSpecifier:(id)arg1 toGroup:(id)arg2;
- (_Bool)appendSpecifiers:(id)arg1 toGroupAtGroupIndex:(unsigned long long)arg2;
- (_Bool)appendSpecifier:(id)arg1 toGroupAtGroupIndex:(unsigned long long)arg2;
- (_Bool)appendSpecifiers:(id)arg1;
- (_Bool)appendSpecifier:(id)arg1;
- (_Bool)insertContiguousSpecifiers:(id)arg1 afterSpecifierWithID:(id)arg2;
- (_Bool)insertContiguousSpecifiers:(id)arg1 afterSpecifier:(id)arg2;
- (_Bool)insertContiguousSpecifiers:(id)arg1 atIndex:(unsigned long long)arg2;
- (_Bool)insertSpecifier:(id)arg1 afterSpecifierWithID:(id)arg2;
- (_Bool)insertSpecifier:(id)arg1 afterSpecifier:(id)arg2;
- (_Bool)insertSpecifier:(id)arg1 atIndexPath:(id)arg2;
- (_Bool)insertSpecifier:(id)arg1 atIndex:(unsigned long long)arg2;
- (_Bool)_addAndApplyOperation:(id)arg1;
- (void)_didApplyOperation:(id)arg1;
- (void)_operationFailed:(id)arg1 reason:(id)arg2;
- (_Bool)_enumerateArrayWithConjuctionalResult:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)specifierForID:(id)arg1;
- (unsigned long long)indexOfSpecifierWithID:(id)arg1;
- (unsigned long long)indexOfSpecifier:(id)arg1;
- (void)enumerateUpdatesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSArray *updates;
@property(readonly, copy, nonatomic) NSArray *currentSpecifiers;
@property(readonly, copy, nonatomic) PSSpecifierGroupIndex *groupIndex;
- (id)_groupIndexCreatingIfNecessary;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)_initForCopyWithOriginalSpecifiers:(id)arg1 currentSpecifiers:(id)arg2 updates:(id)arg3;
- (id)initWithSpecifiers:(id)arg1 applyUpdates:(id)arg2;
- (id)initWithSpecifiers:(id)arg1;
- (id)init;
- (id)_init;

@end

@interface PSSpinnerTableCell : PSTableCell
{
    UIActivityIndicatorView *_spinner;
}

- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PSSplitViewController : UISplitViewController
{
    PSRootController *_containerNavigationController;
    id <PSSplitViewControllerNavigationDelegate> _navigationDelegate;
}

@property(nonatomic) id <PSSplitViewControllerNavigationDelegate> navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
@property(retain, nonatomic) PSRootController *containerNavigationController; // @synthesize containerNavigationController=_containerNavigationController;
- (void)dealloc;
- (void)setupControllerForToolbar:(id)arg1;
- (void)showInitialViewController:(id)arg1;
- (void)popRecursivelyToRootController;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface PSStackPushAnimationController : NSObject <UIViewControllerAnimatedTransitioning>
{
    NSArray *_snapshots;
    NSMutableArray *_animationsToRunAlongsideToVC;
    _Bool _hasStartedAnimation;
    NSArray *_viewControllers;
    UINavigationController *_navigationController;
    CDUnknownBlockType _completionBlock;
    long long _animationPreset;
    double _startStagger;
    double _completionStagger;
    double _pushDuration;
    double _springDamping;
}

+ (void)resetDefaultAnimationParameters;
+ (void)setDefaultAnimationPreset:(long long)arg1;
+ (id)_animationParametersForPreset:(long long)arg1;
+ (id)_snapshotOfViewController:(id)arg1 withNavigationBar:(id)arg2 prevViewController:(id)arg3;
+ (id)controllerWithViewControllerStack:(id)arg1 navigationController:(id)arg2;
@property(nonatomic) double springDamping; // @synthesize springDamping=_springDamping;
@property(nonatomic) double pushDuration; // @synthesize pushDuration=_pushDuration;
@property(nonatomic) double completionStagger; // @synthesize completionStagger=_completionStagger;
@property(nonatomic) double startStagger; // @synthesize startStagger=_startStagger;
@property(nonatomic) long long animationPreset; // @synthesize animationPreset=_animationPreset;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(retain, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
- (void)_loadDefaultValues;
- (id)_valueForAnimationParameter:(id)arg1;
- (void)animationEnded:(_Bool)arg1;
- (void)animateAlongsideToViewController:(CDUnknownBlockType)arg1;
- (void)_addAnimation:(CDUnknownBlockType)arg1 forViewAtIndex:(unsigned long long)arg2 count:(unsigned long long)arg3;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (double)_actualDuration;
- (double)_desiredDuration;
- (_Bool)_shouldSkipFirstPush;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSStoreSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSSwitchTableCell : PSControlTableCell
{
    UIActivityIndicatorView *_activityIndicator;
}

- (void)layoutSubviews;
- (void)setValue:(id)arg1;
- (void)reloadWithSpecifier:(id)arg1 animated:(_Bool)arg2;
- (id)controlValue;
- (void)dealloc;
@property(nonatomic) _Bool loading;
- (void)setCellEnabled:(_Bool)arg1;
- (_Bool)canReload;
- (id)newControl;
- (void)prepareForReuse;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

@end

@interface PSSubtitleSwitchTableCell : PSSwitchTableCell
{
}

+ (long long)cellStyle;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (_Bool)canReload;

@end

@interface PSSystemConfiguration : NSObject
{
    struct __SCPreferences *_prefs;
}

+ (void)releaseSharedInstance;
+ (id)sharedInstance;
- (void)setProtocolConfigurationValue:(id)arg1 forKey:(struct __CFString *)arg2 protocolType:(struct __CFString *)arg3 serviceID:(struct __CFString *)arg4;
- (id)protocolConfigurationValueForKey:(struct __CFString *)arg1 protocolType:(struct __CFString *)arg2 serviceID:(struct __CFString *)arg3;
- (void)setProtocolConfiguration:(id)arg1 protocolType:(struct __CFString *)arg2 serviceID:(struct __CFString *)arg3;
- (id)protocolConfiguration:(struct __CFString *)arg1 serviceID:(struct __CFString *)arg2;
- (void)setInterfaceConfigurationValue:(id)arg1 forKey:(struct __CFString *)arg2 serviceID:(struct __CFString *)arg3;
- (id)interfaceConfigurationValueForKey:(struct __CFString *)arg1 serviceID:(struct __CFString *)arg2;
- (struct __CFString *)getServiceIDForPDPContext:(unsigned int)arg1;
- (struct __CFString *)voicemailServiceID;
- (struct __CFString *)dataServiceID;
- (void)cleanupPrefs;
- (unsigned char)synchronizeForWriting:(_Bool)arg1;
- (void)dealloc;

@end

@interface PSSystemConfigurationDynamicStoreMISWatcher : NSObject
{
    struct __CFRunLoopSource *_scRunLoopSource;
    struct __SCDynamicStore *_scDynamicStore;
}

+ (id)sharedManager;
- (void)sendStateUpdate;
- (void)dealloc;
- (id)init;

@end

@interface PSSystemConfigurationDynamicStoreWifiWatcher : NSObject
{
    struct __SCDynamicStore *_prefs;
    struct __CFString *_wifiKey;
    struct __CFString *_wifiInterface;
    struct __CFString *_tetheringLink;
}

+ (_Bool)wifiEnabled;
+ (void)releaseSharedInstance;
+ (id)sharedInstance;
- (void)dealloc;
- (id)init;
- (id)wifiConfig;
- (id)_wifiNameWithState:(id)arg1;
- (id)_wifiPowerWithState:(id)arg1;
- (id)_wifiTetheringWithState:(id)arg1;
- (void)findKeysAirPortState:(id *)arg1 andTetheringState:(id *)arg2;

@end

@interface PSSystemPolicyForApp : NSObject
{
    unsigned long long _policyOptions;
    _Bool _forcePolicyOptions;
    NSString *_bundleIdentifier;
}

+ (_Bool)isServiceRestricted:(id)arg1;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
- (id)privacyAccessForSpecifier:(id)arg1;
- (id)_privacyAccessForService:(struct __CFString *)arg1;
- (void)setPrivacyAccess:(id)arg1 forSpecifier:(id)arg2;
- (struct __CFBundle *)copyTCCBundleForService:(struct __CFString *)arg1;
- (id)privacySpecifierForService:(struct __CFString *)arg1;
- (id)privacySpecifier;
- (_Bool)_isLocationServicesRestricted;
- (id)locationServicesSpecifier;
- (id)isBackgroundRefreshEnabled:(id)arg1;
- (void)setBackgroundRefreshEnabled:(id)arg1 forSpecifier:(id)arg2;
- (_Bool)_isBackgroundAppRefreshRestricted;
- (_Bool)_supportsBackgroundAppRefresh;
- (id)backgroundAppRefreshSpecifier;
- (id)appCellularDataEnabledForSpecifier:(id)arg1;
- (void)setAppCellularDataEnabled:(id)arg1 forSpecifier:(id)arg2;
- (id)cellularSpecifier;
- (_Bool)_isCellularDataRestricted;
- (_Bool)isCellularBundleID:(id)arg1;
- (id)dataUsageWorkspaceInfo;
- (id)_sectionInfo;
- (id)notificationSpecifier;
- (id)specifiersForPolicyOptions:(unsigned long long)arg1 force:(_Bool)arg2;
- (id)specifiers;
- (id)initWithBundleIdentifier:(id)arg1;

@end

@interface PSSystemPolicyManager : NSObject
{
}

+ (_Bool)_notificationSettingsNeededForBundleID:(id)arg1;
+ (void)_populateBBSectionIDs;
+ (_Bool)_cellularDataSettingsNeededForBundleID:(id)arg1;
+ (id)_dataUsageWorkspaceInfo;
+ (_Bool)_backgroundAppRefreshSettingsNeededForProxy:(id)arg1;
+ (_Bool)_locationSettingsNeededForBundleID:(id)arg1;
+ (_Bool)_privacySettingsNeededForProxy:(id)arg1;
+ (_Bool)_systemSettingsNeededForProxy:(id)arg1;
+ (_Bool)_shouldIncludeProxy:(id)arg1;
+ (id)thirdPartyApplicationProxyForBundleID:(id)arg1;
+ (id)thirdPartyApplicationProxies;

@end

@interface PSSystemPolicyPrivacyController : PSListController
{
}

- (id)specifiers;

@end

@interface PSTableCellHighlightContext : NSObject
{
    NSTimer *_timer;
    _Bool _animateUnhighlight;
    _Bool _valid;
    UITableViewCell *_cell;
    long long _originalSelectionStyle;
}

+ (id)contextWithCell:(id)arg1;
@property(readonly, nonatomic) _Bool valid; // @synthesize valid=_valid;
@property(nonatomic) long long originalSelectionStyle; // @synthesize originalSelectionStyle=_originalSelectionStyle;
@property(readonly, nonatomic) _Bool animateUnhighlight; // @synthesize animateUnhighlight=_animateUnhighlight;
@property(nonatomic) UITableViewCell *cell; // @synthesize cell=_cell;
- (void)_killTimer;
- (void)invalidate;
- (void)_timerFired;
- (void)performHighlightForDuration:(double)arg1 animateUnhighlight:(_Bool)arg2;
- (void)dealloc;

@end

@interface PSTencentWeiboSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSTextEditingCell : UITableViewCell
{
}

- (void)layoutSubviews;

@end

@interface PSTextEditingPane : PSEditingPane <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_table;
    PSTextEditingCell *_cell;
    UITextField *_textField;
}

- (void)setPreferenceSpecifier:(id)arg1;
- (id)preferenceValue;
- (void)setPreferenceValue:(id)arg1;
- (_Bool)becomeFirstResponder;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSTextSizeSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSTextView : UITextContentView
{
    PSTextViewTableCell *_cell;
}

- (void)setCell:(id)arg1;

@end

@interface PSTextViewPane : PSEditingPane
{
    UITextView *_textView;
}

- (void)setText:(id)arg1;
- (void)setPreferenceSpecifier:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)handlesDoneButton;

@end

@interface PSTextViewTableCell : PSTableCell <UITextContentViewDelegate>
{
    PSTextView *_textView;
}

- (void)drawTitleInRect:(struct CGRect)arg1 selected:(_Bool)arg2;
@property(retain, nonatomic) PSTextView *textView;
- (_Bool)resignFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (_Bool)becomeFirstResponder;
- (void)textContentViewDidEndEditing:(id)arg1;
- (void)_adjustTextView:(id)arg1 updateTable:(_Bool)arg2 withSpecifier:(id)arg3;
- (void)layoutSubviews;
- (void)cellRemovedFromView;
- (void)textContentViewDidChange:(id)arg1;
- (void)setValue:(id)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSThirdPartySettingsDetail : NSObject
{
}

+ (id)preferencesURLForBundleID:(id)arg1 forSettingType:(long long)arg2;

@end

@interface PSTorchSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (long long)torchState;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSTwitterSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSUsageBundleApp : NSObject
{
    PSWeakReference *_storageReporterReference;
    float _totalSize;
    NSString *_name;
    NSString *_bundleIdentifier;
    NSArray *_categories;
}

+ (id)usageBundleAppForBundleWithIdentifier:(id)arg1 withTotalSize:(float)arg2 andCategories:(id)arg3;
+ (id)usageBundleAppForBundleWithIdentifier:(id)arg1 withTotalSize:(float)arg2;
@property(nonatomic) float totalSize; // @synthesize totalSize=_totalSize;
@property(retain, nonatomic) NSArray *categories; // @synthesize categories=_categories;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) id <PSStorageReporting> usageBundleStorageReporter;
- (id)description;
- (void)dealloc;

@end

@interface PSUsageBundleCategory : NSObject
{
    PSUsageBundleApp *_usageBundleApp;
    NSString *_identifier;
    NSString *_name;
}

+ (id)categoryNamed:(id)arg1 withIdentifier:(id)arg2 forUsageBundleApp:(id)arg3;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) PSUsageBundleApp *usageBundleApp; // @synthesize usageBundleApp=_usageBundleApp;
- (id)description;
- (void)dealloc;

@end

@interface PSUsageBundleCell : PSTableCell
{
}

- (void)layoutSubviews;
- (void)refreshCellContentsWithSpecifier:(id)arg1;
- (_Bool)canReload;

@end

@interface PSUsageBundleDetailController : PSEditableListController
{
}

+ (void)setupSpecifier:(id)arg1 forMediaGroups:(id)arg2;
+ (id)mediaGroups;
- (id)specifiers;
- (id)sizeForSpecifier:(id)arg1;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)updateSizesAfterDeletingSize:(float)arg1 shouldPop:(_Bool)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)dealloc;
- (id)size:(id)arg1;
- (_Bool)canBeShownFromSuspendedState;
- (_Bool)needsToShowToolbarInPrefsAppRoot;
- (void)loadView;

@end

@interface PSUsageBundleManager : NSObject
{
    NSDictionary *_bundleMap;
    NSArray *_usageBundleApps;
    NSMutableArray *_storageReporters;
}

- (void)dealloc;
- (void)vendUsageBundleAppsWithHandler:(CDUnknownBlockType)arg1;
- (id)allUsageBundleApps;
- (void)_loadUsageBundlesWithHandler:(CDUnknownBlockType)arg1;

@end

@interface PSUsageSizeHeader : UIView <PSHeaderFooterView>
{
    UILabel *_sizeLabel;
    UILabel *_titleLabel;
    double _height;
}

- (void)setSizeLabelHidden:(_Bool)arg1;
- (double)preferredHeightForWidth:(double)arg1;
- (void)setSize:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithSpecifier:(id)arg1;

@end

@interface PSVideosSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSVimeoSettingsDetail : NSObject <PSSettingsLink>
{
}

+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSVoiceOverSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PSWeakReference : NSObject <NSCopying>
{
    id _location;
}

+ (id)weakReferenceWithObject:(id)arg1;
- (void)dealloc;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)object;
- (id)initWithObject:(id)arg1;

@end

@interface PSWebContainerView : UIView
{
    UIWebView *_webView;
    NSData *_content;
}

@property(retain, nonatomic) NSData *content; // @synthesize content=_content;
@property(readonly, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (double)heightForWidth:(double)arg1;
- (void)layoutSubviews;
- (void)setUserStyleSheet:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PSWiFiSettingsDetail : NSObject <PSSettingsBoolDetail>
{
}

+ (_Bool)isEnabled;
+ (void)setEnabled:(_Bool)arg1;
+ (id)iconImage;
+ (id)preferencesURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PasscodeFieldCell : PSTableCell <UIKeyInput, PSPasscodeFieldDelegate>
{
    PSPasscodeField *_passcodeField;
    _Bool _convertsNumeralsToASCII;
    _Bool _denyFirstResponder;
    id <KeychainSyncPasscodeFieldDelegate> _delegate;
}

@property(nonatomic) _Bool denyFirstResponder; // @synthesize denyFirstResponder=_denyFirstResponder;
@property(nonatomic) _Bool convertsNumeralsToASCII; // @synthesize convertsNumeralsToASCII=_convertsNumeralsToASCII;
@property(nonatomic) id <KeychainSyncPasscodeFieldDelegate> delegate; // @synthesize delegate=_delegate;
- (void)layoutSubviews;
@property(nonatomic) long long keyboardType;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (id)passcodeText;
- (_Bool)becomeFirstResponder;
- (void)setPasscodeText:(id)arg1;
- (void)passcodeField:(id)arg1 enteredPasscode:(id)arg2;
- (void)_setSecureTextEntry:(_Bool)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;

@end

@interface PopBackListItemsController : PSListItemsController
{
}

- (void)prepareSpecifiersMetadata;
- (void)listItemSelected:(id)arg1;

@end

@interface PrefsUILinkLabel : UILabel
{
    NSURL *_url;
    _Bool _touchingURL;
    id _target;
    SEL _action;
    NSURL *_URL;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (id)color:(id)arg1 byMultiplyingSubComponentsBy:(float)arg2;
- (void)tappedLink:(id)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)openURL:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ProblemReportingAboutController : UIViewController
{
}

- (void)donePressed;
- (id)initWithTitle:(id)arg1 content:(id)arg2;

@end

@interface ProblemReportingController : PSListController
{
    PrefsUILinkLabel *_aboutDiagnosticsLinkLabel;
    PSSpecifier *_diagnosticDataGroupSpecifier;
    PSSpecifier *_filesystemMetadataSnapshotSpecifier;
    NSArray *_appActivitySpecifiers;
    PSSpecifier *_spinnerSpecifier;
}

+ (_Bool)isProblemReportingEnabled;
- (void)dealloc;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (_Bool)shouldEnableProblemReportingForCheckedSpecifier;
- (void)setShouldShareAppActivityWithAppDevelopers:(id)arg1 specifier:(id)arg2;
- (id)shouldShareAppActivityWithAppDevelopers;
- (id)specifiers;
@property(readonly) NSArray *appActivitySpecifiers;
@property(readonly) PSSpecifier *filesystemMetadataSnapshotSpecifier;
@property(readonly) PSSpecifier *spinnerSpecifier;
- (void)snapshot:(id)arg1;
- (void)setProblemReportingEnabled:(_Bool)arg1;
- (void)showAboutAppAnalyticsSheet;
- (void)showAboutDiagnosticsSheet;
- (void)dismissAboutSheet:(id)arg1;

@end

@interface QuietHoursStateController : NSObject
{
    unsigned long long _mode;
    NSArray *_overrides;
    unsigned long long _privilegeTypes;
    int _recordID;
    NSDateComponents *_fromComponents;
    NSDateComponents *_toComponents;
    BBSettingsGateway *_bbGateway;
    unsigned long long _overrideType;
    _Bool _valid;
    _Bool _isEffectiveWhileUnlocked;
    NSArray *_behaviorOverrides;
    long long _overrideStatus;
}

+ (void)setScheduledRangeFrom:(id)arg1 to:(id)arg2;
+ (void)setScheduledEnabled:(_Bool)arg1;
+ (void)setManualEnabled:(_Bool)arg1;
+ (_Bool)isDNDScheduled;
+ (id)sharedController;
@property(nonatomic) long long overrideStatus; // @synthesize overrideStatus=_overrideStatus;
@property(nonatomic) unsigned long long overrideType; // @synthesize overrideType=_overrideType;
@property(readonly, nonatomic) BBSettingsGateway *bbGateway; // @synthesize bbGateway=_bbGateway;
@property(retain, nonatomic) NSDateComponents *toComponents; // @synthesize toComponents=_toComponents;
@property(retain, nonatomic) NSDateComponents *fromComponents; // @synthesize fromComponents=_fromComponents;
@property(nonatomic) int recordID; // @synthesize recordID=_recordID;
@property(nonatomic) unsigned long long privilegeTypes; // @synthesize privilegeTypes=_privilegeTypes;
@property(nonatomic) _Bool isEffectiveWhileUnlocked; // @synthesize isEffectiveWhileUnlocked=_isEffectiveWhileUnlocked;
@property(copy, nonatomic) NSArray *overrides; // @synthesize overrides=_overrides;
@property(copy, nonatomic) NSArray *behaviorOverrides; // @synthesize behaviorOverrides=_behaviorOverrides;
@property(nonatomic) unsigned long long mode; // @synthesize mode=_mode;
@property(nonatomic) _Bool valid; // @synthesize valid=_valid;
- (void)setAllowedGroup:(id)arg1 recordID:(int)arg2 groupName:(id)arg3;
- (int)userSelectedGroupID;
- (unsigned long long)allowedGroupType;
- (void)setRepeatedCalls:(_Bool)arg1;
- (_Bool)manualModeEnabled;
- (_Bool)repeatedCalls;
- (void)resetToFallbackRange;
- (void)dealloc;
- (id)init;

@end

@interface RegionFormatSampleView : UIView <PSHeaderFooterView>
{
    UILabel *_labels[4];
    double _sized;
    double _labelTopPadding[4];
}

- (id)_accessibilityLabels;
- (void)layoutSubviews;
- (void)dealloc;
- (double)preferredHeightForWidth:(double)arg1;
- (id)initWithSpecifier:(id)arg1;
- (void)setTextForRegionExample:(id)arg1;
- (id)generateRegionSampleLabel;

@end

@interface SuggestedAppsController : NSObject
{
    NSArray *_specifiers;
}

- (void)setAppStore:(id)arg1 specifier:(id)arg2;
- (id)appStore:(id)arg1;
- (void)setMyApps:(id)arg1 specifier:(id)arg2;
- (id)myApps:(id)arg1;
- (void)reloadSpecifiers;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSArray *specifiers; // @synthesize specifiers=_specifiers;

@end

@interface UINavigationController (PSControllerAdditions)
- (void)popRecursivelyToRootController;
@end

@interface UIViewController (PSControllerAdditions)
- (void)popRecursivelyToRootController;
@end

@interface _PSDeferredUpdates : NSObject
{
    _Bool _invalidatedSpecifiers;
    NSMutableSet *_searchEntries;
    PSSpecifierUpdates *_specifierUpdates;
}

+ (id)deferredInvalidationUpdatesWithEntries:(id)arg1;
+ (id)deferredUpdatesWithEntries:(id)arg1 specifierUpdates:(id)arg2;
@property(nonatomic) _Bool invalidatedSpecifiers; // @synthesize invalidatedSpecifiers=_invalidatedSpecifiers;
@property(retain, nonatomic) PSSpecifierUpdates *specifierUpdates; // @synthesize specifierUpdates=_specifierUpdates;
@property(retain, nonatomic) NSMutableSet *searchEntries; // @synthesize searchEntries=_searchEntries;
- (void)dealloc;
- (id)initWithSearchEntries:(id)arg1 specifierUpdates:(id)arg2 invalidatedSpecifiers:(_Bool)arg3;

@end

@interface _PSDeleteButtonCell : PSTableCell
{
}

- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 specifier:(id)arg3;

@end

