//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    double _field1;
    double _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/Parsec.framework/Parsec
// UUID: 307DA8CD-A451-3812-8A4B-84B272483822
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 349.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol PRSBaseResult <NSObject, NSCopying>
@property(retain, nonatomic) NSString *templateName;
@property(retain, nonatomic) NSString *fbr;
@property(nonatomic) float resultScore;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *resultIdentifier;

@optional
@property(retain, nonatomic) id <PRSApp> app;
@property(retain, nonatomic) NSString *bundle_id;
@property(nonatomic) long long max_age;
@property(retain, nonatomic) NSURL *resultURL;
@property(nonatomic) long long adam_id;
@property(nonatomic) long long media_kind;
@property(retain, nonatomic) NSString *type;
@end

@protocol PRSDecoderDelegate <NSObject>
- (Class)classForObjectsAtPropertyPath:(NSString *)arg1 ofObject:(id)arg2 protocol:(id *)arg3;
- (id)convertedValue:(id)arg1 forPropertyPath:(NSString *)arg2 ofObject:(id)arg3;
- (NSArray *)serverKeysForKey:(NSString *)arg1 ofObject:(id)arg2;

@optional
- (Class)classForObjectsAtPropertyPath:(NSString *)arg1 ofObject:(id)arg2 withValue:(id)arg3 protocol:(id *)arg4;
@end

@protocol PRSDescriptionSection <PRSSection>
@property(retain, nonatomic) NSString *resultDescription;

@optional
@property(retain, nonatomic) NSString *image_align;
@property(retain, nonatomic) PRSImage *image;
@property(nonatomic) long long description_weight;
@property(nonatomic) long long description_size;
@property(retain, nonatomic) NSString *description_expand_text;
@property(nonatomic) _Bool description_expand;
@property(nonatomic) long long description_maxlines;
@property(nonatomic) long long title_weight;
@property(nonatomic) _Bool title_nowrap;
@property(retain, nonatomic) NSString *title;
@end

@protocol PRSImageSource <NSObject>
- (void)getImageWithIdentifier:(NSString *)arg1 block:(void (^)(UIImage *))arg2;

@optional
- (NSURLSession *)urlSessionForImage:(PRSImage *)arg1;
@end

@protocol PRSMapsResult <PRSBaseResult>
@property(retain, nonatomic) PRSImage *icon;
@property(retain, nonatomic) NSString *maps_result_type;
@property(retain, nonatomic) NSString *maps_data_type;
@property(retain, nonatomic) NSData *maps_data;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *templateName;

@optional
@property(retain, nonatomic) NSURL *more_url;
@property(retain, nonatomic) NSString *more;
@property(retain, nonatomic) NSString *card_title;
@end

@protocol PRSMovie
@property(retain, nonatomic) PRSImage *image;

@optional
@property(retain, nonatomic) NSURL *punchout_uri;
@property(retain, nonatomic) NSURL *url;
@property(retain, nonatomic) NSArray *more_glyphs;
@property(retain, nonatomic) NSString *rt_text;
@property(retain, nonatomic) PRSImage *rt_glyph;
@property(retain, nonatomic) NSString *subtitle;
@property(retain, nonatomic) NSString *title;
@end

@protocol PRSMovieListSection <PRSSection>
@property(retain, nonatomic) NSArray *movies;
@property(retain, nonatomic) NSString *title;

@optional
@property(retain, nonatomic) NSString *subtitle;
@end

@protocol PRSParsecDataHandler <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
@end

@protocol PRSResourceProvider <NSObject>
- (id)resourceWithID:(NSString *)arg1;
@end

@protocol PRSRowSection <PRSSection>
@property(retain, nonatomic) NSString *key;

@optional
@property(retain, nonatomic) PRSImage *value_image;
@property(nonatomic) long long value_weight;
@property(nonatomic) _Bool value_nowrap;
@property(retain, nonatomic) NSString *value;
@property(nonatomic) long long key_weight;
@property(nonatomic) _Bool key_nowrap;
@end

@protocol PRSSection
@property(retain, nonatomic) NSString *type;

@optional
@property(retain, nonatomic) NSURL *url;
@end

@protocol PRSSessionController <NSObject>
@property(readonly, nonatomic) long long useLedBelly;
@property(readonly, nonatomic) NSURLSessionConfiguration *urlSessionConfiguration;
@property(readonly, nonatomic) NSArray *supportedDomainIdentifiers;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled;
@property(readonly, nonatomic) double sessionStartTime;

@optional
@property(retain, nonatomic) NSString *userId;
@property(readonly, nonatomic) _Bool useGUID;
@property(readonly, nonatomic) NSString *parsecBaseURL;
@property(readonly, nonatomic) NSArray *excludedDomainIdentifiers;
@property(readonly, nonatomic) NSString *applicationNameForUserAgent;
@property(readonly, nonatomic) NSString *userAgent;
- (void)sessionReceivedBagWithEnabledDomains:(NSArray *)arg1;
@end

@protocol PRSSimpleResult <PRSBaseResult>
@property(retain, nonatomic) PRSImage *icon;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *templateName;

@optional
@property(retain, nonatomic) NSURL *card_url;
@property(retain, nonatomic) NSArray *card_sections;
@property(retain, nonatomic) NSString *card_title;
@property(retain, nonatomic) NSArray *more_icons;
@property(nonatomic) long long footnote_size;
@property(nonatomic) long long footnote_maxlines;
@property(nonatomic) _Bool footnote_nowrap;
@property(retain, nonatomic) NSString *footnote;
@property(nonatomic) long long description_size;
@property(nonatomic) long long description_maxlines;
@property(nonatomic) _Bool description_nowrap;
@property(retain, nonatomic) NSString *resultDescription;
@property(retain, nonatomic) PRSImage *title_glyph;
@property(nonatomic) long long title_size;
@property(nonatomic) long long title_maxlines;
@end

@protocol PRSTitleSection <PRSSection>
@property(retain, nonatomic) NSString *title;

@optional
@property(retain, nonatomic) NSString *subtitle;
@end

@protocol PRSiTunesResult <PRSBaseResult>
@property(retain, nonatomic) PRSImage *icon;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *templateName;

@optional
@property(retain, nonatomic) NSString *string_format;
@property(retain, nonatomic) NSString *card_title;
@property(retain, nonatomic) NSArray *more_glyphs;
@property(retain, nonatomic) NSString *rating_text;
@property(nonatomic) float rating;
@property(nonatomic) _Bool rt_newline;
@property(retain, nonatomic) NSString *rt_text;
@property(retain, nonatomic) PRSImage *rt_glyph;
@property(nonatomic) _Bool description_nowrap;
@property(retain, nonatomic) NSString *resultDescription;
@end

@interface NSArray (ParsecExtras)
- (id)prs_filterObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)prs_mapObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)prs_mapAndFilterObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (id)prs_arrayAtIndex:(unsigned long long)arg1;
- (id)prs_dictionaryAtIndex:(unsigned long long)arg1;
- (id)prs_stringAtIndex:(unsigned long long)arg1;
- (id)prs_numberAtIndex:(unsigned long long)arg1;
@end

@interface NSCoder (ParsecExtras)
- (double)prs_timestampForKey:(id)arg1;
- (double)prs_doubleForKey:(id)arg1;
- (float)prs_floatForKey:(id)arg1;
- (int)prs_intForKey:(id)arg1;
- (long long)prs_integerForKey:(id)arg1;
- (id)prs_URLForKey:(id)arg1;
- (id)prs_dictionaryForKey:(id)arg1;
- (id)prs_arrayForKey:(id)arg1;
- (id)prs_dateForKey:(id)arg1;
- (id)prs_dataForKey:(id)arg1;
- (id)prs_numberForKey:(id)arg1;
- (id)prs_imageForKey:(id)arg1;
- (id)prs_stringForKey:(id)arg1;
- (_Bool)prs_boolForKey:(id)arg1;
@end

@interface NSDictionary (ParsecExtras)
- (float)prs_floatForKey:(id)arg1;
- (int)prs_intForKey:(id)arg1;
- (long long)prs_integerForKey:(id)arg1;
- (id)prs_URLForKey:(id)arg1;
- (id)prs_dictionaryForKey:(id)arg1;
- (id)prs_arrayForKey:(id)arg1;
- (id)prs_dateForKey:(id)arg1;
- (id)prs_dataForKey:(id)arg1;
- (id)prs_numberForKey:(id)arg1;
- (id)prs_stringForKey:(id)arg1;
- (_Bool)prs_boolForKey:(id)arg1;
@end

@interface NSString (ParsecExtras)
- (id)prs_stringEncodedAsURLQueryParameter;
@end

@interface PRSFeedback : NSObject <NSCopying, NSCoding, NSSecureCoding>
{
    NSString *_input;
    long long _timestamp;
}

+ (id)JSONDictionaryForFeedbackArray:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(nonatomic) long long timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *input; // @synthesize input=_input;
- (void).cxx_destruct;
- (id)description;
- (id)plist;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)validate;
- (id)initWithFeedback:(id)arg1;
@property(readonly, nonatomic) NSString *type;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithInput:(id)arg1 timestamp:(long long)arg2;
- (id)init;

@end

@interface PRSAbandonmentFeedback : PRSFeedback
{
    unsigned long long _method;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) unsigned long long method; // @synthesize method=_method;
- (id)plist;
- (id)type;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithInput:(id)arg1 timestamp:(long long)arg2 method:(unsigned long long)arg3;
- (id)initWithInput:(id)arg1 timestamp:(long long)arg2;

@end

@interface PRSBagHandler : NSObject <PRSParsecDataHandler, PRSResourceProvider, PRSSessionController, CLLocationManagerDelegate>
{
    PRSSharedParsecSession *_bagSession;
    NSString *_waldoIP;
    struct __SCNetworkReachability *_networkReachability;
    NSObject<OS_dispatch_queue> *_bagQueue;
    _Bool _bagFailed;
    NSSet *_appIdentifierWhitelist;
    _Bool _active;
    _Bool _parsecEnabled;
    _Bool _mescalEnabled;
    _Bool _ledbellyEnabled;
    _Bool _useGUID;
    _Bool _limitedFeedback;
    NSArray *_enabledDomains;
    NSString *_userId;
    double _userIdTimeout;
    NSURL *_searchURL;
    NSURL *_webSearchURL;
    NSURL *_feedbackURL;
    NSURL *_guidURL;
    NSURL *_fallbackSearchURL;
    NSURL *_fallbackWebSearchURL;
    NSURL *_fallbackFeedbackURL;
    NSURL *_fallbackGuidURL;
    double _feedbackStatsInterval;
    double _retryAfter;
    double _searchRenderTimeout;
    NSError *_error;
    NSString *_serverVersion;
    long long _status;
    long long _minimumStringLength;
    long long _maximumCachedQueryCount;
    long long _maximumCachedResultCount;
    CLLocationManager *_locationManager;
    NSArray *_supportedGeoSources;
    CLInUseAssertion *_assertion;
    double _guidStartTime;
    NSDictionary *_bag;
    NSDictionary *_namedResources;
    NSString *_locale;
    NSString *_storeFrontId;
    NSURLSessionDataTask *_dataTask;
    NSMutableData *_collectedData;
    NSURLSessionDataTask *_guidDataTask;
    NSMutableData *_guidCollectedData;
    NSString *_appIdentifierListString;
    NSString *_fteLocString;
    NSString *_fteLearnMoreString;
    NSDictionary *_resources;
    NSMutableArray *_queryTasks;
    id <PRSSessionController> _client;
    PRSFairPlaySAPSession *_SAPSession;
}

+ (id)sharedHandler;
@property(retain, nonatomic) PRSFairPlaySAPSession *SAPSession; // @synthesize SAPSession=_SAPSession;
@property __weak id <PRSSessionController> client; // @synthesize client=_client;
@property(retain, nonatomic) NSMutableArray *queryTasks; // @synthesize queryTasks=_queryTasks;
@property(retain) NSDictionary *resources; // @synthesize resources=_resources;
@property(readonly, nonatomic) NSString *fteLearnMoreString; // @synthesize fteLearnMoreString=_fteLearnMoreString;
@property(readonly, nonatomic) NSString *fteLocString; // @synthesize fteLocString=_fteLocString;
@property(retain) NSString *appIdentifierListString; // @synthesize appIdentifierListString=_appIdentifierListString;
@property(retain) NSMutableData *guidCollectedData; // @synthesize guidCollectedData=_guidCollectedData;
@property(retain) NSURLSessionDataTask *guidDataTask; // @synthesize guidDataTask=_guidDataTask;
@property(retain) NSMutableData *collectedData; // @synthesize collectedData=_collectedData;
@property(retain) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property(readonly) NSString *waldoIP; // @synthesize waldoIP=_waldoIP;
@property(readonly) NSString *storeFrontId; // @synthesize storeFrontId=_storeFrontId;
@property(readonly) NSString *locale; // @synthesize locale=_locale;
@property(readonly) NSDictionary *namedResources; // @synthesize namedResources=_namedResources;
@property(readonly) NSDictionary *bag; // @synthesize bag=_bag;
@property double guidStartTime; // @synthesize guidStartTime=_guidStartTime;
@property(readonly) CLInUseAssertion *assertion; // @synthesize assertion=_assertion;
@property(readonly) NSArray *supportedGeoSources; // @synthesize supportedGeoSources=_supportedGeoSources;
@property(readonly) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(readonly) long long maximumCachedResultCount; // @synthesize maximumCachedResultCount=_maximumCachedResultCount;
@property(readonly) long long maximumCachedQueryCount; // @synthesize maximumCachedQueryCount=_maximumCachedQueryCount;
@property(readonly) long long minimumStringLength; // @synthesize minimumStringLength=_minimumStringLength;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(readonly) NSString *serverVersion; // @synthesize serverVersion=_serverVersion;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(readonly) double searchRenderTimeout; // @synthesize searchRenderTimeout=_searchRenderTimeout;
@property(readonly) double retryAfter; // @synthesize retryAfter=_retryAfter;
@property(readonly) double feedbackStatsInterval; // @synthesize feedbackStatsInterval=_feedbackStatsInterval;
@property(readonly) _Bool limitedFeedback; // @synthesize limitedFeedback=_limitedFeedback;
@property(readonly) NSURL *fallbackGuidURL; // @synthesize fallbackGuidURL=_fallbackGuidURL;
@property(readonly) NSURL *fallbackFeedbackURL; // @synthesize fallbackFeedbackURL=_fallbackFeedbackURL;
@property(readonly) NSURL *fallbackWebSearchURL; // @synthesize fallbackWebSearchURL=_fallbackWebSearchURL;
@property(readonly) NSURL *fallbackSearchURL; // @synthesize fallbackSearchURL=_fallbackSearchURL;
@property(readonly) NSURL *guidURL; // @synthesize guidURL=_guidURL;
@property(readonly) NSURL *feedbackURL; // @synthesize feedbackURL=_feedbackURL;
@property(readonly) NSURL *webSearchURL; // @synthesize webSearchURL=_webSearchURL;
@property(readonly) NSURL *searchURL; // @synthesize searchURL=_searchURL;
@property(nonatomic) _Bool useGUID; // @synthesize useGUID=_useGUID;
@property(nonatomic) double userIdTimeout; // @synthesize userIdTimeout=_userIdTimeout;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(nonatomic) _Bool ledbellyEnabled; // @synthesize ledbellyEnabled=_ledbellyEnabled;
@property(retain, nonatomic) NSArray *enabledDomains; // @synthesize enabledDomains=_enabledDomains;
@property(nonatomic) _Bool mescalEnabled; // @synthesize mescalEnabled=_mescalEnabled;
@property(nonatomic) _Bool parsecEnabled; // @synthesize parsecEnabled=_parsecEnabled;
@property(nonatomic) _Bool active; // @synthesize active=_active;
- (void).cxx_destruct;
- (void)_setupSAPSession:(id)arg1;
- (void)signRequest:(id)arg1 withData:(id)arg2;
@property(readonly) CLLocation *location;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateToLocation:(id)arg2 fromLocation:(id)arg3;
- (id)locationSourceForLocation:(id)arg1;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)triggerTaskWhenReady:(id)arg1;
- (void)removeTask:(id)arg1;
- (void)reloadBagFromClient:(id)arg1;
- (id)resourceWithID:(id)arg1;
- (void)loadUserID;
- (void)_setupLocationManager;
- (id)_locationManagerBundle;
- (void)_deactivateLocationManager;
- (void)_activateLocationManager;
- (void)discardRecentlyUsedAppIdentifiers;
- (void)updateRecentlyUsedAppIdentifiers;
- (id)init;
@property(readonly, nonatomic) NSString *parsecBaseURL;
@property(readonly, nonatomic) long long useLedBelly;
@property(readonly, nonatomic) NSURLSessionConfiguration *urlSessionConfiguration;
@property(readonly, nonatomic) NSArray *excludedDomainIdentifiers;
@property(readonly, nonatomic) NSArray *supportedDomainIdentifiers;
@property(readonly, nonatomic) NSString *applicationNameForUserAgent;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled;
@property(readonly, nonatomic) double sessionStartTime;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) NSString *userAgent;

@end

@interface PRSDecoder : NSObject
{
    NSMapTable *_converters;
    id <PRSDecoderDelegate> _delegate;
}

@property id <PRSDecoderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_addBuiltInConverters;
- (CDUnknownBlockType)convertBlockForClass:(Class)arg1;
- (void)setConverterForClass:(Class)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_numberFromNumber:(id)arg1 expectedType:(char *)arg2;
- (_Bool)_decodeObject:(id)arg1 withProtocol:(id)arg2 fromDictionary:(id)arg3 path:(id)arg4 serverProperties:(id)arg5;
- (id)_decodeObjectOfClass:(Class)arg1 protocol:(id)arg2 fromValue:(id)arg3 parentObject:(id)arg4 propertyName:(id)arg5 path:(id)arg6;
- (_Bool)decodeObject:(id)arg1 withProtocol:(id)arg2 fromDictionary:(id)arg3;
- (id)init;

@end

@interface PRSEngagementFeedback : PRSFeedback
{
    NSString *_local_result;
    NSString *_fbr;
    NSString *_parsec_result;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSString *parsec_result; // @synthesize parsec_result=_parsec_result;
@property(retain, nonatomic) NSString *fbr; // @synthesize fbr=_fbr;
@property(retain, nonatomic) NSString *local_result; // @synthesize local_result=_local_result;
- (void).cxx_destruct;
- (void)validate;
- (id)plist;
- (id)type;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithInput:(id)arg1 timestamp:(long long)arg2;

@end

@interface PRSFairPlaySAPSession : NSObject
{
    _Bool _complete;
    NSString *_SAPVersion;
}

@property(retain) NSString *SAPVersion; // @synthesize SAPVersion=_SAPVersion;
@property(readonly, nonatomic, getter=isComplete) _Bool complete; // @synthesize complete=_complete;
- (void).cxx_destruct;
- (id)signatureStringForData:(id)arg1 error:(id *)arg2;
- (id)signatureForData:(id)arg1 error:(id *)arg2;
- (id)processSignedData:(id)arg1 withSignature:(id)arg2 error:(id *)arg3;
- (id)exchangeData:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PRSQueryTask : NSObject
{
    _Bool _webSearch;
    _Bool _started;
    _Bool _canceled;
    long long _queryId;
    id _representedObject;
    NSString *_fbq;
    PRSSearchFeedback *_feedback;
    id <PRSSearchQueryHandler> _handler;
    NSObject<OS_dispatch_queue> *_queue;
    PRSSearchSession *_session;
}

@property(nonatomic) __weak PRSSearchSession *session; // @synthesize session=_session;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <PRSSearchQueryHandler> handler; // @synthesize handler=_handler;
@property(retain) PRSSearchFeedback *feedback; // @synthesize feedback=_feedback;
@property(nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(nonatomic) _Bool started; // @synthesize started=_started;
@property _Bool webSearch; // @synthesize webSearch=_webSearch;
@property(retain, nonatomic) NSString *fbq; // @synthesize fbq=_fbq;
@property(retain, nonatomic) id representedObject; // @synthesize representedObject=_representedObject;
@property long long queryId; // @synthesize queryId=_queryId;
- (void).cxx_destruct;
- (id)feedbackQueryIdentifier;
- (void)invalidateHandler;
- (void)cancel;
- (void)resume;
- (id)initWithSession:(id)arg1 handler:(id)arg2 queue:(id)arg3 feedback:(id)arg4;

@end

@interface PRSFakeQueryTask : PRSQueryTask
{
    PRSSearchCompletionResultSet *_results;
}

@property(retain, nonatomic) PRSSearchCompletionResultSet *results; // @synthesize results=_results;
- (void).cxx_destruct;
- (void)resume;
- (id)initWithSession:(id)arg1 handler:(id)arg2 queue:(id)arg3 feedback:(id)arg4 results:(id)arg5;
- (id)initWithSession:(id)arg1 handler:(id)arg2 queue:(id)arg3;

@end

@interface PRSImage : NSObject <NSSecureCoding>
{
    NSMutableArray *_completionBlocks;
    UIImage *_preloadedImage;
    _Bool _loaded;
    _Bool _isTemplate;
    UIImage *_image;
    NSString *_identifier;
    NSString *_dataType;
    NSData *_data;
    NSURL *_url;
}

+ (_Bool)supportsSecureCoding;
+ (CDUnknownBlockType)converterBlock;
@property(retain) NSURL *url; // @synthesize url=_url;
@property(retain) NSData *data; // @synthesize data=_data;
@property(retain) NSString *dataType; // @synthesize dataType=_dataType;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property _Bool isTemplate; // @synthesize isTemplate=_isTemplate;
@property(retain) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)loadImageWithSource:(id)arg1 maxSize:(struct CGSize)arg2 completion:(CDUnknownBlockType)arg3;
- (void)preloadImageWithSource:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface PRSRealQueryTask : PRSQueryTask <PRSParsecDataHandler>
{
    _Bool _doResume;
    _Bool _failed;
    _Bool _doCache;
    NSURLSessionDataTask *_dataTask;
    NSMutableData *_collectedData;
    double _startTime;
    NSString *_queryString;
    id <PRSSessionController> _factory;
    double _scaleFactor;
}

@property double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property(nonatomic) __weak id <PRSSessionController> factory; // @synthesize factory=_factory;
@property(retain, nonatomic) NSString *queryString; // @synthesize queryString=_queryString;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) NSMutableData *collectedData; // @synthesize collectedData=_collectedData;
@property(retain, nonatomic) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property _Bool doCache; // @synthesize doCache=_doCache;
@property _Bool failed; // @synthesize failed=_failed;
@property _Bool doResume; // @synthesize doResume=_doResume;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)_processSearchResponseOnClientQueue:(id)arg1;
- (void)cancel;
- (void)resume;
- (void)triggerQuery:(_Bool)arg1;
- (id)initWithSession:(id)arg1 handler:(id)arg2 factory:(id)arg3 queue:(id)arg4 scaleFactor:(double)arg5 feedback:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PRSRenderFeedback : PRSFeedback
{
    long long _trigger_timestamp;
    NSArray *_results;
    NSString *_fbq;
    NSArray *_hidden;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSArray *hidden; // @synthesize hidden=_hidden;
@property(retain, nonatomic) NSString *fbq; // @synthesize fbq=_fbq;
@property(retain, nonatomic) NSArray *results; // @synthesize results=_results;
@property(nonatomic) long long trigger_timestamp; // @synthesize trigger_timestamp=_trigger_timestamp;
- (void).cxx_destruct;
- (id)plist;
- (void)validate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFeedback:(id)arg1;
- (id)type;
- (id)initWithInput:(id)arg1 timestamp:(long long)arg2;

@end

@interface PRSSearchCompletionResultSet : NSObject <PRSDecoderDelegate>
{
    PRSDecoder *_decoder;
    id <PRSSimpleResult> _fakeMapsMoreResult;
    _Bool _cacheable;
    float _completionScore;
    NSString *_prefix;
    NSString *_completionString;
    NSString *_feedbackQueryIdentifier;
    double _maxAge;
    NSArray *_results;
}

@property(readonly, nonatomic) NSArray *results; // @synthesize results=_results;
@property(nonatomic) double maxAge; // @synthesize maxAge=_maxAge;
@property(readonly, nonatomic, getter=isCacheable) _Bool cacheable; // @synthesize cacheable=_cacheable;
@property(readonly, nonatomic) NSString *feedbackQueryIdentifier; // @synthesize feedbackQueryIdentifier=_feedbackQueryIdentifier;
@property(readonly, nonatomic) float completionScore; // @synthesize completionScore=_completionScore;
@property(readonly, nonatomic) NSString *completionString; // @synthesize completionString=_completionString;
@property(readonly, nonatomic) NSString *prefix; // @synthesize prefix=_prefix;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (Class)classForObjectsAtPropertyPath:(id)arg1 ofObject:(id)arg2 withValue:(id)arg3 protocol:(id *)arg4;
- (Class)classForObjectsAtPropertyPath:(id)arg1 ofObject:(id)arg2 protocol:(id *)arg3;
- (id)convertedValue:(id)arg1 forPropertyPath:(id)arg2 ofObject:(id)arg3;
- (id)serverKeysForKey:(id)arg1 ofObject:(id)arg2;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)resultForFactory:(id)arg1 session:(id)arg2 resourceProvider:(id)arg3 dictionary:(id)arg4;
- (id)initWithResultSet:(id)arg1 prefix:(id)arg2 completionString:(id)arg3 score:(float)arg4;
- (id)initWithFactory:(id)arg1 session:(id)arg2 resourceProvider:(id)arg3 prefix:(id)arg4 completionString:(id)arg5 score:(float)arg6 resultStatusString:(id)arg7 feedbackQueryIdentifier:(id)arg8 resultDictionaries:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface PRSSearchFeedback : PRSFeedback
{
    long long _type;
    _Bool _cached;
    _Bool _error;
    long long _latency;
    long long _ttfb;
    NSString *_error_code;
    long long _delta_ref;
    long long _delta;
    NSURLRequest *_urlRequest;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSURLRequest *urlRequest; // @synthesize urlRequest=_urlRequest;
@property(nonatomic) long long delta; // @synthesize delta=_delta;
@property(nonatomic) long long delta_ref; // @synthesize delta_ref=_delta_ref;
@property(retain, nonatomic) NSString *error_code; // @synthesize error_code=_error_code;
@property(nonatomic) _Bool error; // @synthesize error=_error;
@property(nonatomic) _Bool cached; // @synthesize cached=_cached;
@property(nonatomic) long long ttfb; // @synthesize ttfb=_ttfb;
@property(nonatomic) long long latency; // @synthesize latency=_latency;
- (void).cxx_destruct;
- (void)validate;
- (id)plist;
- (id)type;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFeedback:(id)arg1;
- (id)initWithInput:(id)arg1 type:(long long)arg2 timestamp:(long long)arg3;

@end

@interface PRSSearchResponse : NSObject
{
    long long _status;
    NSString *_errorCodeString;
    double _backOff;
    double _maxAge;
    NSArray *_completionResultSets;
}

@property(readonly, nonatomic) NSArray *completionResultSets; // @synthesize completionResultSets=_completionResultSets;
@property(readonly, nonatomic) double maxAge; // @synthesize maxAge=_maxAge;
@property(readonly, nonatomic) double backOff; // @synthesize backOff=_backOff;
@property(readonly, nonatomic) NSString *errorCodeString; // @synthesize errorCodeString=_errorCodeString;
@property(readonly, nonatomic) long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)description;
- (id)initWithFactory:(id)arg1 session:(id)arg2 webSearch:(_Bool)arg3 resourceProvider:(id)arg4 array:(id)arg5;

@end

@interface PRSSearchSession : NSObject <PRSResourceProvider, PRSImageSource>
{
    id <PRSSessionController> _client;
    NSMutableSet *_cachedResults;
    NSMutableSet *_cachedWebResults;
    NSObject<OS_dispatch_group> *_feedbackGroup;
    NSMutableSet *_feedbackTasks;
    NSMutableArray *_feedback;
    double _lastQueryTime;
    NSTimer *_guidTimer;
    _Bool _valid;
    NSObject<OS_dispatch_queue> *_clientQueue;
    double _sessionStartTime;
    double _retryAfter;
}

@property double retryAfter; // @synthesize retryAfter=_retryAfter;
@property double sessionStartTime; // @synthesize sessionStartTime=_sessionStartTime;
@property(readonly, nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *clientQueue; // @synthesize clientQueue=_clientQueue;
- (void).cxx_destruct;
- (id)urlSessionForImage:(id)arg1;
- (void)getImageWithIdentifier:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)addFeedback:(id)arg1;
- (void)flushFeedback;
- (void)setFeedbackStartTime;
- (void)killFeedback;
- (id)createFeedbackRequest:(id *)arg1;
- (void)syncFeedback;
- (void)pruneCache;
- (void)getCachedQueries:(id *)arg1 results:(id *)arg2 webSearch:(_Bool)arg3;
- (void)cacheQueryResponse:(id)arg1 webSearch:(_Bool)arg2;
- (id)cachedResultSetForCompletionString:(id)arg1 webSearch:(_Bool)arg2;
- (id)cachedResultSetForQuery:(id)arg1 webSearch:(_Bool)arg2;
- (id)copyCachedResult:(id)arg1 webSearch:(_Bool)arg2;
- (void)_invalidate;
- (void)_endSession;
- (id)resourceWithID:(id)arg1;
@property(readonly, nonatomic) double searchRenderTimeout;
- (id)queryWithString:(id)arg1 handler:(id)arg2;
- (id)queryWithString:(id)arg1 webSearch:(_Bool)arg2 handler:(id)arg3;
- (id)queryWithString:(id)arg1 webSearch:(_Bool)arg2 scaleFactor:(double)arg3 handler:(id)arg4;
- (id)createURLRequestWithString:(id)arg1 webSearch:(_Bool)arg2 scaleFactor:(double)arg3 fallbackURL:(id *)arg4;
- (id)createQueryURL:(id)arg1 userQueryString:(id)arg2 currentLocation:(id)arg3 locationSource:(id)arg4 currentCoordinates:(CDStruct_c3b9c2ee)arg5 storeFrontId:(id)arg6 locale:(id)arg7 context:(id)arg8;
- (id)urlRequestFromURL:(id)arg1;
- (void)refreshGUID;
- (void)reloadGuid;
- (_Bool)searchSupported:(_Bool)arg1;
@property(readonly, nonatomic) NSArray *supportedServices;
@property(readonly, nonatomic) NSString *fteLearnMoreString;
@property(readonly, nonatomic) NSString *fteLocString;
- (_Bool)sessionReady;
- (_Bool)isLocaleSupported:(id)arg1;
- (void)userDidCancelSession;
- (void)userDidSelectCompletionListItem:(id)arg1;
- (void)didDisplayCompletionListItems:(id)arg1 forQuery:(id)arg2;
- (void)dealloc;
- (id)initWithClient:(id)arg1;
- (id)initWithClient:(id)arg1 clientQueue:(id)arg2;
- (void)deactivate;
- (void)activate;
- (id)createWarmupRequest;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PRSSharedParsecSession : NSObject <NSURLSessionDataDelegate, PRSImageSource>
{
    NSString *_baseURL;
    NSString *_httpsBaseURL;
    NSURLSession *_urlSession;
    _Bool _clientConfiguredEndPoint;
    _Bool _forBag;
    NSOperationQueue *_sessionQueue;
    NSMapTable *_taskHandlers;
    id <PRSSessionController> _client;
    NSString *_userAgent;
}

+ (id)sharedParsecSession;
+ (id)initializeForClient:(id)arg1;
@property(readonly) NSString *httpsBaseURL; // @synthesize httpsBaseURL=_httpsBaseURL;
@property(readonly) NSString *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property __weak id <PRSSessionController> client; // @synthesize client=_client;
@property(readonly) NSMapTable *taskHandlers; // @synthesize taskHandlers=_taskHandlers;
@property(readonly) NSOperationQueue *sessionQueue; // @synthesize sessionQueue=_sessionQueue;
- (void).cxx_destruct;
- (id)urlSessionForImage:(id)arg1;
- (void)getImageWithIdentifier:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)removeTask:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (id)dataTaskForRequest:(id)arg1 withHandler:(id)arg2;
- (void)deactivate;
- (void)releaseSession;
- (void)activate;
@property(readonly) NSURLSession *urlSession;
- (id)_sessionConfiguration;
- (id)initWithClient:(id)arg1 forBag:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

