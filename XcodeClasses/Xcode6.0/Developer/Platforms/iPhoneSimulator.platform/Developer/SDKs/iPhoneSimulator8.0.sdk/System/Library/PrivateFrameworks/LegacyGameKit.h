//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/LegacyGameKit.framework/LegacyGameKit
// UUID: 8F8D9950-57BF-3B59-8632-E53A4213FE1A
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 194.14.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@interface GKAlertView : UIAlertView
{
    UIView *_clipView;
    UIView *_contentView;
}

+ (struct CGSize)preferredContentViewSize;
+ (void)initialize;
- (void)dealloc;
- (void)setContentView:(id)arg1 animated:(_Bool)arg2;
- (id)contentView;
- (void)_changePanelInAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_changePanelOutAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_replaceContentView:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_canDrawContent;
- (void)layoutAnimated:(_Bool)arg1 withDuration:(double)arg2;
- (void)layoutAnimated:(_Bool)arg1;
- (id)initAlertView;
- (id)initWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;

@end

@interface GKContentView : UIView
{
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    UIImageView *_iconView;
    UIButton *_cancelButton;
    UIButton *_otherButton;
    UITableView *_table;
    UIImageView *_tableWellView;
    NSArray *_connectionButtons;
    UIActivityIndicatorView *_activityIndicator;
    _Bool _needsLayout;
}

+ (double)maxTextWidth;
@property(retain, nonatomic) UIImageView *iconView; // @synthesize iconView=_iconView;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(readonly, retain, nonatomic) NSArray *connectionButtons; // @synthesize connectionButtons=_connectionButtons;
@property(retain, nonatomic) UIButton *otherButton; // @synthesize otherButton=_otherButton;
@property(retain, nonatomic) UIButton *cancelButton; // @synthesize cancelButton=_cancelButton;
- (void)dealloc;
- (void)layout;
@property(readonly, nonatomic) UIFont *messageFont; // @dynamic messageFont;
@property(readonly, nonatomic) UIFont *titleFont; // @dynamic titleFont;
- (void)layoutIfNeeded;
- (id)_createConnectionButtonWithType:(unsigned long long)arg1;
- (id)_createButton:(_Bool)arg1;
- (void)_createOtherButtonWithTitle:(id)arg1;
- (void)_createCancelButtonWithTitle:(id)arg1;
@property(readonly, retain, nonatomic) UITableView *table; // @dynamic table;
- (void)showActivityIndicator:(_Bool)arg1;
@property(nonatomic) long long numberOfMessageLines; // @dynamic numberOfMessageLines;
- (void)_createMessageLabelIfNeeded;
@property(nonatomic) NSString *message; // @dynamic message;
@property(nonatomic) long long numberOfTitleLines; // @dynamic numberOfTitleLines;
- (void)_createTitleLabelIfNeeded;
@property(nonatomic) NSString *title; // @dynamic title;
@property(nonatomic) UIImage *icon; // @dynamic icon;
- (void)setConnectionButtonTypes:(unsigned long long)arg1;
- (id)initWithTitle:(id)arg1 message:(id)arg2 icon:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitle:(id)arg5;

@end

@interface GKPeerPickerController : NSObject
{
    id _picker;
}

+ (void)initialize;
- (id)peerPickerViewController:(id)arg1 sessionForConnectionType:(unsigned long long)arg2;
- (void)peerPickerViewController:(id)arg1 didSelectConnectionType:(unsigned long long)arg2;
- (void)peerPickerViewController:(id)arg1 didConnectPeer:(id)arg2 toSession:(id)arg3;
- (void)peerPickerViewControllerDidCancel:(id)arg1;
- (void)_createPicker;
@property(readonly, nonatomic, getter=isVisible) _Bool visible;
@property(nonatomic) unsigned long long connectionTypesMask;
@property(readonly, nonatomic) GKPeerPickerViewController *pickerViewController; // @dynamic pickerViewController;
- (void)dismiss;
- (void)show;
@property(nonatomic) id <GKPeerPickerControllerDelegate> delegate;
- (void)dealloc;
- (id)init;

@end

@interface GKPeerPickerControllerInternal : NSObject
{
    id _delegate;
    GKPeerPickerViewController *_pickerViewController;
    unsigned long long _connectionTypesMask;
}

@end

@interface GKPeerPickerTableViewCell : UITableViewCell
{
    _Bool _topSeparator;
}

+ (double)separatorHeight;
+ (void)initialize;
@property(nonatomic) _Bool topSeparator; // @synthesize topSeparator=_topSeparator;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface GKPeerPickerViewController : UIViewController
{
    id _delegate;
    NSMutableDictionary *_sessionMap;
    GKContentView *_btView;
    GKContentView *_listView;
    GKContentView *_statusView;
    GKContentView *_inviteView;
    GKContentView *_currentView;
    GKContentView *_connectTypeView;
    GKContentView *_noPeersView;
    UITableView *_peerTableView;
    unsigned long long _connectionTypesMask;
    NSString *_currentConnectionTypeKey;
    NSMutableArray *_menuQueue;
    _Bool _animating;
    _Bool _alertPresented;
    int _state;
    int _pendingState;
    _Bool _updating;
    NSTimer *_invitationWaitTimer;
    int _bluetoothStatus;
    NSString *_searchingForServicesString;
    NSMutableArray *_peers;
    NSString *_pendingPeer;
    _Bool _alertCancelled;
}

@property(retain, nonatomic) NSTimer *invitationWaitTimer; // @synthesize invitationWaitTimer=_invitationWaitTimer;
@property(nonatomic) _Bool updating; // @synthesize updating=_updating;
@property(nonatomic) int pendingState; // @synthesize pendingState=_pendingState;
@property(nonatomic) int state; // @synthesize state=_state;
@property(nonatomic) _Bool alertCancelled; // @synthesize alertCancelled=_alertCancelled;
@property(nonatomic) _Bool alertPresented; // @synthesize alertPresented=_alertPresented;
@property(nonatomic, getter=isAnimating) _Bool animating; // @synthesize animating=_animating;
@property(retain, nonatomic) NSMutableArray *menuQueue; // @synthesize menuQueue=_menuQueue;
@property(nonatomic) int bluetoothStatus; // @synthesize bluetoothStatus=_bluetoothStatus;
@property(nonatomic) NSString *currentConnectionTypeKey; // @synthesize currentConnectionTypeKey=_currentConnectionTypeKey;
@property unsigned long long connectionTypesMask; // @synthesize connectionTypesMask=_connectionTypesMask;
@property(retain, nonatomic) NSMutableArray *peers; // @synthesize peers=_peers;
@property(copy, nonatomic) NSString *searchingForServicesString; // @synthesize searchingForServicesString=_searchingForServicesString;
@property(retain, nonatomic) UITableView *peerTableView; // @synthesize peerTableView=_peerTableView;
@property(readonly, nonatomic) GKContentView *currentView; // @synthesize currentView=_currentView;
@property(retain, nonatomic) GKContentView *noPeersView; // @synthesize noPeersView=_noPeersView;
@property(retain, nonatomic) GKContentView *connectTypeView; // @synthesize connectTypeView=_connectTypeView;
@property(retain, nonatomic) GKContentView *inviteView; // @synthesize inviteView=_inviteView;
@property(retain, nonatomic) GKContentView *statusView; // @synthesize statusView=_statusView;
@property(retain, nonatomic) GKContentView *listView; // @synthesize listView=_listView;
@property(retain, nonatomic) GKContentView *btView; // @synthesize btView=_btView;
@property(retain, nonatomic) NSMutableDictionary *sessionMap; // @synthesize sessionMap=_sessionMap;
@property id delegate; // @synthesize delegate=_delegate;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(id)arg1;
- (void)_turnBluetoothOn:(id)arg1;
- (void)_nearbyButtonPressed:(id)arg1;
- (void)_onlineButtonPressed:(id)arg1;
- (void)_declineInvitation:(id)arg1;
- (void)_acceptInvitation:(id)arg1;
- (void)_cancelButtonPressed:(id)arg1;
- (void)session:(id)arg1 didFailWithError:(id)arg2;
- (void)session:(id)arg1 peerDidBecomeBusy:(id)arg2;
- (void)session:(id)arg1 connectionWithPeerFailed:(id)arg2 withError:(id)arg3;
- (void)session:(id)arg1 didReceiveConnectionRequestFromPeer:(id)arg2;
- (void)session:(id)arg1 peer:(id)arg2 didChangeState:(int)arg3;
- (void)_changePanelAnimationDidEnd:(id)arg1;
- (void)contentView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_showView:(id)arg1 animated:(_Bool)arg2;
- (void)_showNoPeersView:(_Bool)arg1;
- (void)_showStatusView:(int)arg1 peerName:(id)arg2 animated:(_Bool)arg3;
- (void)_showInviteViewWithName:(id)arg1 animated:(_Bool)arg2;
- (void)_showListView:(_Bool)arg1;
- (void)_setupListView;
- (void)_showBluetoothErrorView:(_Bool)arg1;
- (void)_showRequestBluetoothView:(_Bool)arg1;
- (void)_showConnectTypeView:(_Bool)arg1;
- (_Bool)_shouldShowConnectTypeView;
- (id)_createAlertFromGKContentView:(id)arg1;
- (_Bool)_updatePicker:(int)arg1;
- (void)loadInitialView;
- (void)loadView;
- (void)dismiss;
- (void)show;
- (void)_createNoPeersViewIfNeeded;
- (void)_createStatusViewIfNeeded;
- (void)_createInviteViewIfNeeded;
- (void)_createListViewIfNeeded;
- (void)_createBTViewIfNeeded;
- (void)_createConnectTypeViewIfNeeded;
- (void)_btPowerStateChanged:(id)arg1;
- (int)_determineBluetoothStatus;
- (void)_timedOutWaitingForInvitation:(id)arg1;
- (void)_setSessionAvailabilityForState:(int)arg1;
- (void)_sortAndUpdateTable;
@property(readonly, nonatomic, getter=isVisible) _Bool visible; // @dynamic visible;
@property(readonly, nonatomic) GKSession *currentSession; // @dynamic currentSession;
- (void)dealloc;
- (void)didReceiveMemoryWarning;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;

@end

