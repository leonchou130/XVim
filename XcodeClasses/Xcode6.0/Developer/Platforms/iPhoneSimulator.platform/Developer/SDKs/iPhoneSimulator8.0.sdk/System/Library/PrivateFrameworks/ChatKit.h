//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioStreamBasicDescription {
    double _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
};

struct AudioStreamPacketDescription;

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CKFeedSeparatorMetrics {
    struct CGSize _field1;
    struct UIEdgeInsets _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    double _field5;
    int _field6;
} CDStruct_ebaa735e;

typedef struct {
    double latitude;
    double longitude;
} CDStruct_2c43369c;

typedef struct {
    long long index;
    struct CGSize imageSize;
    struct CGSize minimumSize;
    _Bool hasCaption;
    _Bool isBatchStart;
} CDStruct_1417b155;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
// UUID: 21CC6ACC-090B-32D8-B656-6ACCCB12239E
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1501.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol ABPersonViewControllerDelegate <NSObject>
- (_Bool)personViewController:(ABPersonViewController *)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
@end

@protocol ABUnknownPersonViewControllerDelegate <NSObject>
- (void)unknownPersonViewController:(ABUnknownPersonViewController *)arg1 didResolveToPerson:(void *)arg2;

@optional
- (_Bool)unknownPersonViewController:(ABUnknownPersonViewController *)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
@end

@protocol AFContextProvider
- (NSArray *)getCurrentContext;
- (_Bool)allowContextProvider:(id <AFContextProvider>)arg1;
@end

@protocol AVAudioPlayerDelegate <NSObject>

@optional
- (void)audioPlayerEndInterruption:(AVAudioPlayer *)arg1;
- (void)audioPlayerEndInterruption:(AVAudioPlayer *)arg1 withFlags:(unsigned long long)arg2;
- (void)audioPlayerEndInterruption:(AVAudioPlayer *)arg1 withOptions:(unsigned long long)arg2;
- (void)audioPlayerBeginInterruption:(AVAudioPlayer *)arg1;
- (void)audioPlayerDecodeErrorDidOccur:(AVAudioPlayer *)arg1 error:(NSError *)arg2;
- (void)audioPlayerDidFinishPlaying:(AVAudioPlayer *)arg1 successfully:(_Bool)arg2;
@end

@protocol AVCaptureFileOutputRecordingDelegate <NSObject>
- (void)captureOutput:(AVCaptureFileOutput *)arg1 didFinishRecordingToOutputFileAtURL:(NSURL *)arg2 fromConnections:(NSArray *)arg3 error:(NSError *)arg4;

@optional
- (void)captureOutput:(AVCaptureFileOutput *)arg1 didStartRecordingToOutputFileAtURL:(NSURL *)arg2 fromConnections:(NSArray *)arg3;
@end

@protocol AVVoiceControllerRecordDelegate <NSObject>
- (void)voiceControllerRecordBufferAvailable:(AVVoiceController *)arg1 buffer:(AVVCAudioBuffer *)arg2;

@optional
- (void)voiceControllerLPCMRecordBufferAvailable:(AVVoiceController *)arg1 buffer:(AVVCAudioBuffer *)arg2;
- (void)voiceControllerEndRecordInterruption:(AVVoiceController *)arg1;
- (void)voiceControllerBeginRecordInterruption:(AVVoiceController *)arg1;
- (void)voiceControllerRecordHardwareConfigurationDidChange:(AVVoiceController *)arg1 toConfiguration:(int)arg2;
- (void)voiceControllerEncoderErrorDidOccur:(AVVoiceController *)arg1 error:(NSError *)arg2;
- (void)voiceControllerDidDetectEndpoint:(AVVoiceController *)arg1 ofType:(int)arg2 atTime:(double)arg3;
- (void)voiceControllerDidDetectEndpoint:(AVVoiceController *)arg1 ofType:(int)arg2;
- (void)voiceControllerDidDetectStartpoint:(AVVoiceController *)arg1;
- (void)voiceControllerDidStopRecording:(AVVoiceController *)arg1 forReason:(long long)arg2;
- (void)voiceControllerDidStartRecording:(AVVoiceController *)arg1 successfully:(_Bool)arg2;
@end

@protocol CKAnimationTimerObserver <NSObject>
- (void)animationTimerFired:(unsigned long long)arg1;
@end

@protocol CKAttachmentCellDelegate
- (void)performAction:(SEL)arg1 forAttachmentCell:(CKAttachmentCell *)arg2;
@end

@protocol CKAttachmentViewControllerDelegate <NSObject>
- (void)attachmentsController:(CKAttachmentViewController *)arg1 collectionViewDidChangeEditState:(UICollectionView *)arg2;
- (void)attachmentsController:(CKAttachmentViewController *)arg1 collectionViewDidEndScrollingAnimation:(UICollectionView *)arg2;
- (void)attachmentsController:(CKAttachmentViewController *)arg1 collectionViewDidScroll:(UICollectionView *)arg2;
- (void)attachmentsController:(CKAttachmentViewController *)arg1 collectionViewWillBeginDragging:(UICollectionView *)arg2;
@end

@protocol CKAudioControllerDelegate <NSObject>

@optional
- (void)audioControllerPlayingDidChange:(CKAudioController *)arg1;
- (void)audioControllerDidStop:(CKAudioController *)arg1;
- (void)audioControllerDidPause:(CKAudioController *)arg1;
- (void)audioController:(CKAudioController *)arg1 mediaObjectProgressDidChange:(CKMediaObject *)arg2 currentTime:(double)arg3 duration:(double)arg4;
- (void)audioController:(CKAudioController *)arg1 mediaObjectDidFinishPlaying:(CKMediaObject *)arg2;
@end

@protocol CKAudioPlayerDelegate <NSObject>
- (void)audioPlayerCurrentTimeDidChange:(CKAudioPlayer *)arg1;
@end

@protocol CKAudioRecorderDelegate <NSObject>
- (void)audioRecorderDidUpdateAveragePower:(float)arg1;
- (void)audioRecorderRecordingDidFail:(CKAudioRecorder *)arg1;
- (void)audioRecorderRecordingDidChange:(CKAudioRecorder *)arg1;
@end

@protocol CKBalloonViewDelegate <NSObject>
- (void)balloonViewWillResignFirstResponder:(CKBalloonView *)arg1;
- (void)balloonViewTapped:(CKBalloonView *)arg1;
- (void)balloonView:(CKBalloonView *)arg1 performAction:(SEL)arg2 withSender:(id)arg3;
- (_Bool)balloonView:(CKBalloonView *)arg1 canPerformAction:(SEL)arg2 withSender:(id)arg3;
- (struct CGRect)calloutTargetRectForBalloonView:(CKBalloonView *)arg1;
- (_Bool)shouldShowMenuForBalloonView:(CKBalloonView *)arg1;
- (NSArray *)menuItemsForBalloonView:(CKBalloonView *)arg1;
- (void)balloonViewDidFinishDataDetectorAction:(CKBalloonView *)arg1;
@end

@protocol CKCache <NSObject>
- (void)removeAllObjects;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@end

@protocol CKCameraSheetViewControllerDelegate <NSObject>
- (void)ckPhotoPickerViewController:(CKPhotoPickerSheetViewController *)arg1 resizeToSize:(struct CGSize)arg2;
- (void)ckPhotoPickerViewController:(CKPhotoPickerSheetViewController *)arg1 selectedAssets:(NSArray *)arg2 shouldSend:(_Bool)arg3;
- (void)ckPhotoPickerViewControllerCancel:(CKPhotoPickerSheetViewController *)arg1;
- (void)ckPhotoPickerViewControllerProceedToChooseExisting:(CKPhotoPickerSheetViewController *)arg1;
- (void)ckPhotoPickerViewControllerProceedToTakeAPicture:(CKPhotoPickerSheetViewController *)arg1;
@end

@protocol CKComposeRecipientSelectionControllerDelegate <NSObject, CKRecipientSelectionControllerDelegate>
- (void)recipientSelectionController:(CKComposeRecipientSelectionController *)arg1 didSelectConversation:(CKConversation *)arg2;
@end

@protocol CKContactsSearchManagerDelegate <NSObject>
- (void)contactsSearchManager:(CKContactsSearchManager *)arg1 finishedSearchingWithResults:(NSArray *)arg2;
@end

@protocol CKConversationSearcherDelegate
- (void)searcher:(CKConversationSearcher *)arg1 userDidSelectChatGUID:(NSString *)arg2 messageGUID:(NSString *)arg3;
- (CKConversation *)searcher:(CKConversationSearcher *)arg1 conversationForChatGUID:(NSString *)arg2;
- (UIViewController *)searcherContentsController:(CKConversationSearcher *)arg1;

@optional
- (void)searcher:(CKConversationSearcher *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searcher:(CKConversationSearcher *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searcher:(CKConversationSearcher *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searcher:(CKConversationSearcher *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searcherDidEndSearch:(CKConversationSearcher *)arg1;
- (void)searcherWillEndSearch:(CKConversationSearcher *)arg1;
- (void)searcherDidBeginSearch:(CKConversationSearcher *)arg1;
- (void)searcherWillBeginSearch:(CKConversationSearcher *)arg1;
- (void)searcherWillBeginEditing:(CKConversationSearcher *)arg1;
@end

@protocol CKDismissViewDelegate <NSObject>
- (void)dismissViewWasTapped:(CKDismissView *)arg1;
@end

@protocol CKEditableCollectionViewDelegate <UICollectionViewDelegate>
- (_Bool)collectionView:(UICollectionView *)arg1 isEditableItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol CKFeedCollectionViewLayoutDatasource <NSObject>
- (unsigned long long)numberOfItemsInSection:(unsigned long long)arg1 forFeedLayout:(CKFeedCollectionViewLayout *)arg2;
- (unsigned long long)numberOfSectionsInFeedLayout:(CKFeedCollectionViewLayout *)arg1;
@end

@protocol CKFeedCollectionViewLayoutDelegate <UICollectionViewDelegate>
- (double)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 spacingBetweenSection:(long long)arg3 andHeaderForGroupID:(id)arg4;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 headerSizeForGroupID:(id)arg3 proposedSize:(struct CGSize)arg4;
- (id)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 groupIDForSection:(long long)arg3;
- (struct CKFeedSeparatorMetrics)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 metricsForSeparatorBetweenSection:(long long)arg3 andSection:(long long)arg4 proposedMetrics:(struct CKFeedSeparatorMetrics)arg5;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 sizeForFooterInSection:(long long)arg3 proposedSize:(struct CGSize)arg4;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 sizeForHeaderOfSections:(NSIndexSet *)arg3 proposedSize:(struct CGSize)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 shouldHideHeaderInSection:(long long)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 shouldJoinSection:(long long)arg3 withSection:(long long)arg4;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 sizeForThumbnailInSection:(long long)arg3;
- (struct CKFeedSeparatorMetrics)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 metricsForSeparatorBetweenRowAtIndexPath:(NSIndexPath *)arg3 andRowAtIndexPath:(NSIndexPath *)arg4 proposedMetrics:(struct CKFeedSeparatorMetrics)arg5;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 sizeForRowAtIndexPath:(NSIndexPath *)arg3 proposedSize:(struct CGSize)arg4;
- (void)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 referenceMaximumLength:(double *)arg3 minimumNumberOfTilesToOmit:(long long *)arg4 forSection:(long long)arg5;
- (id)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 batchIDForTileAtIndexPath:(NSIndexPath *)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 captionSizeForTileAtIndexPath:(NSIndexPath *)arg3 proposedSize:(struct CGSize)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 shouldShowCaptionForTileAtIndexPath:(NSIndexPath *)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 mininumSizeForTileAtIndexPath:(NSIndexPath *)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 imageSizeForTileAtIndexPath:(NSIndexPath *)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 contentInsetsForSection:(long long)arg3;
- (long long)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 typeForSection:(long long)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 layout:(CKFeedCollectionViewLayout *)arg2 shouldHideSection:(long long)arg3;
@end

@protocol CKFileTransfer <NSObject>
@property(readonly, nonatomic, getter=isRestoring) _Bool restoring;
@property(readonly, nonatomic, getter=isDownloading) _Bool downloading;
@property(readonly, nonatomic, getter=isDownloadable) _Bool downloadable;
@property(readonly, nonatomic, getter=isFileDataReady) _Bool fileDataReady;
@property(readonly, nonatomic, getter=isFileURLFinalized) _Bool fileURLFinalized;
@property(readonly, nonatomic) unsigned long long totalBytes;
@property(readonly, nonatomic) unsigned long long currentBytes;
@property(readonly, copy, nonatomic) NSError *error;
@property(readonly, copy, nonatomic) NSDictionary *transcoderUserInfo;
@property(readonly, copy, nonatomic) NSString *filename;
@property(readonly, copy, nonatomic) NSURL *fileURL;
@property(readonly, copy, nonatomic) NSString *guid;
@property(retain, nonatomic) IMMessage *IMMessage;
- (void)mediaObjectRemoved;
- (void)mediaObjectAdded;
- (id)initWithFileURL:(NSURL *)arg1 transcoderUserInfo:(NSDictionary *)arg2;
- (id)initWithTransferGUID:(NSString *)arg1 imMessage:(IMMessage *)arg2;
@end

@protocol CKGradientReferenceView <NSObject>
- (struct CGRect)gradientFrame;
@end

@protocol CKInlineAudioReplyButtonDelegate <NSObject>
- (void)audioReplyButtonCancel:(CKInlineAudioReplyButtonController *)arg1;
- (void)audioReplyButtonStop:(CKInlineAudioReplyButtonController *)arg1;
- (void)audioReplyButtonStart:(CKInlineAudioReplyButtonController *)arg1;
@end

@protocol CKJoystickControllerDelegate <NSObject>

@optional
- (void)joystickControllerDidShrinkJoystick:(CKJoystickController *)arg1;
- (void)joystickControllerDidExpandJoystick:(CKJoystickController *)arg1;
- (void)joystickControllerDidDismissJoystick:(CKJoystickController *)arg1;
- (void)joystickControllerDidPresentJoystick:(CKJoystickController *)arg1;
- (void)joystickControllerWillShrinkJoystick:(CKJoystickController *)arg1 animated:(_Bool)arg2;
- (void)joystickControllerWillExpandJoystick:(CKJoystickController *)arg1 animated:(_Bool)arg2;
- (void)joystickControllerWillDismissJoystick:(CKJoystickController *)arg1 animated:(_Bool)arg2;
- (void)joystickControllerWillPresentJoystick:(CKJoystickController *)arg1 animated:(_Bool)arg2;
@end

@protocol CKJoystickGestureRecognizerButtonDelegate <NSObject>
- (void)joystickGestureRecognizerButtonGestureDidEnd:(CKJoystickGestureRecognizerButton *)arg1;
- (void)joystickGestureRecognizerButtonGestureDidBegin:(CKJoystickGestureRecognizerButton *)arg1;
- (_Bool)joystickGestureRecognizerButtonShouldRecognizeGesture:(CKJoystickGestureRecognizerButton *)arg1;
- (_Bool)joystickGestureRecognizerButtonIsShowingHint:(CKJoystickGestureRecognizerButton *)arg1;
- (void)joystickGestureRecognizerButtonShowHint:(CKJoystickGestureRecognizerButton *)arg1;
- (_Bool)joystickGestureRecognizerButtonShouldShowHint:(CKJoystickGestureRecognizerButton *)arg1;
- (void)joystickGestureRecognizerButtonDidTouchUpInsideButton:(CKJoystickGestureRecognizerButton *)arg1;
- (void)joystickGestureRecognizerButtonDidTouchDownButton:(CKJoystickGestureRecognizerButton *)arg1;
@end

@protocol CKJoystickHostView
+ (UIView<CKJoystickHostView> *)sharedInstance;
@property(copy, nonatomic) NSArray *passthroughViews;
@property(readonly, retain, nonatomic) CKJoystickView *joystickView;
- (void)dismissJoystickViewAnimated:(_Bool)arg1;
- (void)presentJoystickView:(CKJoystickView *)arg1 fromPoint:(struct CGPoint)arg2 inView:(UIView *)arg3 animated:(_Bool)arg4;
@end

@protocol CKLocationShareBalloonViewDelegate <CKBalloonViewDelegate>
- (void)locationShareBalloonViewIgnoreButtonTapped:(CKLocationShareBalloonView *)arg1;
- (void)locationShareBalloonViewShareButtonTapped:(CKLocationShareBalloonView *)arg1;
@end

@protocol CKMessageEntryContentViewDelegate <UIScrollViewDelegate>
- (_Bool)messageEntryContentView:(CKMessageEntryContentView *)arg1 shouldInsertMediaObjects:(NSArray *)arg2;
- (void)messageEntryContentViewDidEndEditing:(CKMessageEntryContentView *)arg1;
- (void)messageEntryContentViewDidBeginEditing:(CKMessageEntryContentView *)arg1;
- (_Bool)messageEntryContentViewShouldBeginEditing:(CKMessageEntryContentView *)arg1;
- (void)messageEntryContentViewDidChange:(CKMessageEntryContentView *)arg1;
@end

@protocol CKMessageEntryRecordedAudioViewDelegate <NSObject>
- (void)messageEntryRecordedAudioView:(CKMessageEntryRecordedAudioView *)arg1 mediaObjectDidFinishPlaying:(CKMediaObject *)arg2;
@end

@protocol CKMessageEntryViewDelegate <NSObject>
- (void)messageEntryViewRaiseGestureAutoSend:(CKMessageEntryView *)arg1;
- (void)messageEntryViewSendButtonHitWhileDisabled:(CKMessageEntryView *)arg1;
- (void)messageEntryViewSendButtonHit:(CKMessageEntryView *)arg1;
- (_Bool)messageEntryView:(CKMessageEntryView *)arg1 shouldInsertMediaObjects:(NSArray *)arg2;
- (void)messageEntryViewDidEndEditing:(CKMessageEntryView *)arg1;
- (void)messageEntryViewDidBeginEditing:(CKMessageEntryView *)arg1;
- (_Bool)messageEntryViewShouldBeginEditing:(CKMessageEntryView *)arg1;
- (void)messageEntryViewRecordingDidChange:(CKMessageEntryView *)arg1;
- (void)messageEntryViewDidChange:(CKMessageEntryView *)arg1;

@optional
- (_Bool)getContainerWidth:(double *)arg1 offset:(double *)arg2;
@end

@protocol CKMovieBalloonViewDelegate <CKBalloonViewDelegate>
- (void)balloonView:(CKBalloonView *)arg1 mediaObjectDidFinishPlaying:(CKMediaObject *)arg2;
@end

@protocol CKRecipientSearchListControllerDelegate <NSObject>
- (long long)searchListController:(CKRecipientSearchListController *)arg1 idStatusForIDSID:(NSString *)arg2;
- (void)searchListController:(CKRecipientSearchListController *)arg1 destinationsUpdated:(NSDictionary *)arg2;
- (void)searchListControllerDidScroll:(CKRecipientSearchListController *)arg1;
- (void)searchListController:(CKRecipientSearchListController *)arg1 accessoryPickedForRecipient:(MFRecentComposeRecipient *)arg2;
- (void)searchListController:(CKRecipientSearchListController *)arg1 didSelectRecipient:(MFComposeRecipient *)arg2;
- (void)searchListControllerDidFinishSearch:(CKRecipientSearchListController *)arg1;
@end

@protocol CKRecipientSelectionControllerDelegate <NSObject>
- (struct UIEdgeInsets)navigationBarInsetsForRecipientSelectionController:(CKRecipientSelectionController *)arg1;
- (void)recipientSelectionController:(CKRecipientSelectionController *)arg1 didFinishAvailaiblityLookupForRecipient:(MFComposeRecipient *)arg2;
- (void)recipientSelectionControllerDidPushABViewController:(CKRecipientSelectionController *)arg1;
- (void)recipientSelectionControllerRequestDismissKeyboard:(CKRecipientSelectionController *)arg1;
- (void)recipientSelectionController:(CKRecipientSelectionController *)arg1 textDidChange:(NSString *)arg2;
- (void)recipientSelectionControllerSearchListDidShowOrHide:(CKRecipientSelectionController *)arg1;
- (void)recipientSelectionControllerReturnPressed:(CKRecipientSelectionController *)arg1;
- (void)recipientSelectionControllerDidChangeSize:(CKRecipientSelectionController *)arg1;
@end

@protocol CKSMSCompose <NSObject>
+ (_Bool)canSendPhotos:(int)arg1 videos:(int)arg2 audioClips:(int)arg3;
+ (double)maxTrimDurationForVideo;
+ (double)maxTrimDurationForAudio;
+ (_Bool)acceptsMIMEType:(NSString *)arg1;
- (void)setUICustomizationData:(NSData *)arg1;
- (void)forceMMS;
- (void)forceCancelComposition;
- (void)setText:(NSString *)arg1 subject:(NSString *)arg2 addresses:(NSArray *)arg3;
- (void)setTextEntryContentsVisible:(_Bool)arg1;
- (void)disableCameraAttachments;
- (void)setCanEditRecipients:(_Bool)arg1;
- (void)setPendingAddresses:(NSArray *)arg1;
- (_Bool)insertFilename:(NSString *)arg1 MIMEType:(NSString *)arg2 exportedFilename:(NSString *)arg3 options:(NSDictionary *)arg4;
- (_Bool)insertData:(NSData *)arg1 MIMEType:(NSString *)arg2 exportedFilename:(NSString *)arg3;
- (_Bool)insertAttachmentWithURL:(NSURL *)arg1 andDescription:(NSString *)arg2;
@end

@protocol CKSMSComposeRemoteViewControllerDelegate <NSObject>
- (void)smsComposeControllerCancelled;
- (void)smsComposeControllerSendStartedWithText:(NSString *)arg1;
- (void)smsComposeControllerAppeared;
- (void)smsComposeControllerDataInserted;
- (void)viewServiceDidTerminateWithError:(NSError *)arg1;
@end

@protocol CKSMSComposeViewServiceProtocol <NSObject>
- (void)forceMMS;
- (void)forceCancelComposition;
- (void)setTextEntryContentsVisible:(_Bool)arg1;
- (void)insertFilename:(NSString *)arg1 MIMEType:(NSString *)arg2 exportedFilename:(NSString *)arg3 options:(NSDictionary *)arg4;
- (void)insertData:(NSData *)arg1 MIMEType:(NSString *)arg2 exportedFilename:(NSString *)arg3;
- (void)insertAttachmentWithURL:(NSURL *)arg1 andDescription:(NSString *)arg2;
- (void)setUICustomizationData:(NSData *)arg1;
- (void)setText:(NSString *)arg1 subject:(NSString *)arg2 addresses:(NSArray *)arg3;
- (void)disableCameraAttachments;
- (void)setCanEditRecipients:(_Bool)arg1;
- (void)setPendingAddresses:(NSArray *)arg1;
@end

@protocol CKTranscriptCollectionViewControllerDelegate <NSObject>
- (void)transcriptCollectionViewControllerChatItemsDidChange:(CKTranscriptCollectionViewController *)arg1;
- (void)transcriptCollectionViewControllerPlayingAudioDidChange:(CKTranscriptCollectionViewController *)arg1;
- (_Bool)transcriptCollectionViewControllerShouldPlayAudio:(CKTranscriptCollectionViewController *)arg1;
- (void)transcriptCollectionViewControllerDidInset:(CKTranscriptCollectionViewController *)arg1;
- (void)transcriptCollectionViewControllerWillInset:(CKTranscriptCollectionViewController *)arg1 targetContentInset:(inout struct UIEdgeInsets *)arg2;
- (void)transcriptCollectionViewController:(CKTranscriptCollectionViewController *)arg1 moreButtonTappedForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)transcriptCollectionViewController:(CKTranscriptCollectionViewController *)arg1 balloonViewTappedForItemWithIndexPath:(NSIndexPath *)arg2;
- (void)transcriptCollectionViewController:(CKTranscriptCollectionViewController *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)transcriptCollectionViewController:(CKTranscriptCollectionViewController *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol CKTranscriptCollectionViewDelegate <CKEditableCollectionViewDelegate>
- (void)collectionViewDidInset:(CKTranscriptCollectionView *)arg1;
- (void)collectionViewWillInset:(CKTranscriptCollectionView *)arg1 targetContentInset:(inout struct UIEdgeInsets *)arg2;
- (void)collectionViewWillProgrammaticallyScroll:(CKTranscriptCollectionView *)arg1;
- (void)collectionViewWillScroll:(CKTranscriptCollectionView *)arg1 targetContentOffset:(inout struct CGPoint *)arg2;
@end

@protocol CKTranscriptComposeDelegate <NSObject>
- (void)transcriptController:(CKTranscriptController *)arg1 didSelectNewConversation:(CKConversation *)arg2;
- (_Bool)supportsAttachments;
- (void)showNewMessageCompositionForComposition:(CKComposition *)arg1;
- (void)transcriptController:(CKTranscriptController *)arg1 didSendMessageInConversation:(CKConversation *)arg2;
- (void)transcriptController:(CKTranscriptController *)arg1 willSendComposition:(CKComposition *)arg2 inConversation:(CKConversation *)arg3;
- (void)didCancelComposition:(CKTranscriptController *)arg1;

@optional
- (_Bool)canEditRecipients;
@end

@protocol CKTranscriptManagementNameFieldDelegate <NSObject>
- (void)nameField:(CKTranscriptManagementNameField *)arg1 didCommitGroupName:(NSString *)arg2;
@end

@protocol CKTranscriptRecipientsControllerDelegate
- (_Bool)transcriptRecipientsControllerShouldShowAttachmentsHeader:(CKTranscriptRecipientsController *)arg1;
- (void)transcriptRecipientsControllerDidChangeSize:(CKTranscriptRecipientsController *)arg1;
@end

@protocol CKTrimControllerDelegate <NSObject>
- (void)trimController:(id)arg1 didFinishTrimmingMediaObject:(CKMediaObject *)arg2 withReplacementMediaObject:(CKMediaObject *)arg3;
- (void)trimControllerDidCancel:(id)arg1;
@end

@protocol CKVideoMessageRecordingViewControllerDelegate <NSObject>
- (void)ckVideoMessageRecordingViewController:(CKVideoMessageRecordingViewController *)arg1 mediaObjectCaptured:(CKMediaObject *)arg2 error:(NSError *)arg3;
- (void)ckVideoMessageRecordingViewControllerRecordingCanceled:(CKVideoMessageRecordingViewController *)arg1;
@end

@protocol CKVideoPreviewViewControllerDelegate <NSObject>
- (void)ckVideoPreviewViewControllerFinishedPlaying:(CKVideoPreviewViewController *)arg1;
- (void)ckVideoPreviewViewControllerReady:(CKVideoPreviewViewController *)arg1;
@end

@protocol CKVideoRecorderDelegate <NSObject>
- (void)ckVideoRecorder:(CKVideoRecorder *)arg1 imageDataCaptured:(NSData *)arg2 error:(NSError *)arg3;
- (void)ckVideoRecorder:(CKVideoRecorder *)arg1 videoCaptured:(NSURL *)arg2 error:(NSError *)arg3;
- (void)ckVideoRecorderRecordingCanceled:(CKVideoRecorder *)arg1;
@end

@protocol CKVoiceControllerDelegate <NSObject>
- (void)voiceController:(CKVoiceController *)arg1 didUpdateAveragePower:(float)arg2;
- (void)voiceControllerRecordBufferAvailable:(CKVoiceController *)arg1 buffer:(AVVCAudioBuffer *)arg2;
- (void)voiceControllerDidFinishRecording:(CKVoiceController *)arg1 successfully:(_Bool)arg2;
- (void)voiceControllerDidStartRecording:(CKVoiceController *)arg1;
- (void)voiceControllerDidDetectStartpoint:(CKVoiceController *)arg1;
@end

@protocol Endpointer <NSObject>
@property double endWaitTime;
@property double interspeechWaitTime;
@property double startWaitTime;
@property int endpointMode;
- (void)reset;
- (int)getStatus:(struct AudioQueueBuffer *)arg1;

@optional
- (_Bool)configureWithASBD:(struct AudioStreamBasicDescription *)arg1 andFrameRate:(unsigned int)arg2;
- (_Bool)configureWithSampleRate:(double)arg1 andFrameRate:(unsigned int)arg2;
@end

@protocol FMFMapViewControllerDelegate <NSObject>

@optional
- (void *)annotationABRecordForHandle:(FMFHandle *)arg1;
- (UIView *)titleViewForSelectedHandle;
- (UIImage *)annotationImageForHandle:(FMFHandle *)arg1;
- (void)fmfMapViewController:(FMFMapViewController *)arg1 didReceiveLocation:(id <MKAnnotation>)arg2;
- (void)fmfMapViewController:(FMFMapViewController *)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)fmfMapViewController:(FMFMapViewController *)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)fmfMapViewController:(FMFMapViewController *)arg1 didDeselectHandle:(FMFHandle *)arg2;
- (void)fmfMapViewController:(FMFMapViewController *)arg1 didSelectHandle:(FMFHandle *)arg2;
@end

@protocol IDSBatchIDQueryControllerDelegate <NSObject>

@optional
- (void)idStatusUpdatedForDestinations:(NSDictionary *)arg1 service:(NSString *)arg2;
- (void)idStatusUpdatedForDestinations:(NSDictionary *)arg1;
@end

@protocol IMChatSendProgressDelegate <NSObject>
- (void)chat:(IMChat *)arg1 progressDidChange:(float)arg2 sendingMessages:(NSDictionary *)arg3 sendCount:(unsigned long long)arg4 totalCount:(unsigned long long)arg5 finished:(_Bool)arg6;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidEnterDataProtectionLock;
- (void)systemDidLeaveDataProtectionLock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)systemDidLogout;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidFastUserSwitchOut;
- (void)systemRestoreStateDidChange;
- (void)systemDidFinishMigration;
- (void)systemDidStopBackup;
- (void)systemDidStartBackup;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillResignActive;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemWillShutdown;
- (void)systemDidLeaveMemoryPressure;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
@end

@protocol MFComposeRecipientTextViewDelegate <NSObject>

@optional
- (_Bool)chooseSelectedSearchResultForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (void)selectPreviousSearchResultForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (void)selectNextSearchResultForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (void)dismissSearchResultsForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (_Bool)presentSearchResultsForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (_Bool)composeRecipientViewShowingSearchResults:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientViewDidBecomeFirstResponder:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientViewReturnPressed:(MFComposeRecipientTextView *)arg1;
- (unsigned long long)presentationOptionsForRecipient:(MFComposeRecipient *)arg1;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientTextView *)arg1 composeRecipientForRecord:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientTextView *)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientTextView *)arg1 composeRecipientForAddress:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 showCorecipients:(NSArray *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 showPersonCardForRecipient:(MFComposeRecipient *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 showPersonCardForAtom:(MFModernComposeRecipientAtom *)arg2;
- (void)composeRecipientViewDidFinishPickingRecipient:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientViewRequestAddRecipient:(MFComposeRecipientTextView *)arg1;
- (_Bool)recipientViewShouldIgnoreFirstResponderChanges:(MFComposeRecipientTextView *)arg1;
- (void)recipientViewDidResignFirstResponder:(MFComposeRecipientTextView *)arg1;
- (void)recipientViewDidBecomeFirstResponder:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didSelectRecipients:(NSArray *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 textDidChange:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didChangeSize:(struct CGSize)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didReplaceRecipients:(NSArray *)arg2 withRecipients:(NSArray *)arg3;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didRemoveRecipient:(MFComposeRecipient *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didFinishEnteringAddress:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didAddRecipient:(MFComposeRecipient *)arg2;
@end

@protocol MFContactsSearchConsumer <NSObject>
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(NSNumber *)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(NSArray *)arg1 type:(unsigned long long)arg2 taskID:(NSNumber *)arg3;
@end

@protocol MFGroupDetailViewControllerDelegate <NSObject>
- (void)groupDetailViewControllerDidCancel:(MFGroupDetailViewController *)arg1;
- (void)groupDetailViewController:(MFGroupDetailViewController *)arg1 didAskToRemoveGroup:(MFRecentComposeRecipientGroup *)arg2;
- (void)groupDetailViewController:(MFGroupDetailViewController *)arg1 didTapComposeRecipient:(MFRecentComposeRecipient *)arg2;
@end

@protocol MKAnnotation <NSObject>
@property(readonly, nonatomic) CDStruct_2c43369c coordinate;

@optional
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly, copy, nonatomic) NSString *title;
- (void)setCoordinate:(CDStruct_2c43369c)arg1;
@end

@protocol MKMapViewDelegate <NSObject>

@optional
- (void)mapView:(MKMapView *)arg1 didAddOverlayViews:(NSArray *)arg2;
- (MKOverlayView *)mapView:(MKMapView *)arg1 viewForOverlay:(id <MKOverlay>)arg2;
- (void)mapView:(MKMapView *)arg1 didAddOverlayRenderers:(NSArray *)arg2;
- (MKOverlayRenderer *)mapView:(MKMapView *)arg1 rendererForOverlay:(id <MKOverlay>)arg2;
- (void)mapView:(MKMapView *)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3;
- (void)mapView:(MKMapView *)arg1 annotationView:(MKAnnotationView *)arg2 didChangeDragState:(unsigned long long)arg3 fromOldState:(unsigned long long)arg4;
- (void)mapView:(MKMapView *)arg1 didFailToLocateUserWithError:(NSError *)arg2;
- (void)mapView:(MKMapView *)arg1 didUpdateUserLocation:(MKUserLocation *)arg2;
- (void)mapViewDidStopLocatingUser:(MKMapView *)arg1;
- (void)mapViewWillStartLocatingUser:(MKMapView *)arg1;
- (void)mapView:(MKMapView *)arg1 didDeselectAnnotationView:(MKAnnotationView *)arg2;
- (void)mapView:(MKMapView *)arg1 didSelectAnnotationView:(MKAnnotationView *)arg2;
- (void)mapView:(MKMapView *)arg1 annotationView:(MKAnnotationView *)arg2 calloutAccessoryControlTapped:(UIControl *)arg3;
- (void)mapView:(MKMapView *)arg1 didAddAnnotationViews:(NSArray *)arg2;
- (MKAnnotationView *)mapView:(MKMapView *)arg1 viewForAnnotation:(id <MKAnnotation>)arg2;
- (void)mapViewDidFinishRenderingMap:(MKMapView *)arg1 fullyRendered:(_Bool)arg2;
- (void)mapViewWillStartRenderingMap:(MKMapView *)arg1;
- (void)mapViewDidFailLoadingMap:(MKMapView *)arg1 withError:(NSError *)arg2;
- (void)mapViewDidFinishLoadingMap:(MKMapView *)arg1;
- (void)mapViewWillStartLoadingMap:(MKMapView *)arg1;
- (void)mapView:(MKMapView *)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(MKMapView *)arg1 regionWillChangeAnimated:(_Bool)arg2;
@end

@protocol NCInteractiveNotificationHostDelegate <NSObject>

@optional
- (void)hostViewController:(NCInteractiveNotificationHostViewController *)arg1 didEnable:(_Bool)arg2 actionAtIndex:(unsigned long long)arg3;
- (void)hostViewController:(NCInteractiveNotificationHostViewController *)arg1 didRequestDismissalWithContext:(NSDictionary *)arg2;
- (void)hostViewControllerDidChangePreferredContentSize:(NCInteractiveNotificationHostViewController *)arg1;
@end

@protocol NSLayoutManagerDelegate <NSObject>

@optional
- (void)layoutManager:(NSLayoutManager *)arg1 textContainer:(NSTextContainer *)arg2 didChangeGeometryFromSize:(struct CGSize)arg3;
- (void)layoutManager:(NSLayoutManager *)arg1 didCompleteLayoutForTextContainer:(NSTextContainer *)arg2 atEnd:(_Bool)arg3;
- (void)layoutManagerDidInvalidateLayout:(NSLayoutManager *)arg1;
- (struct CGRect)layoutManager:(NSLayoutManager *)arg1 boundingBoxForControlGlyphAtIndex:(unsigned long long)arg2 forTextContainer:(NSTextContainer *)arg3 proposedLineFragment:(struct CGRect)arg4 glyphPosition:(struct CGPoint)arg5 characterIndex:(unsigned long long)arg6;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByHyphenatingBeforeCharacterAtIndex:(unsigned long long)arg2;
- (_Bool)layoutManager:(NSLayoutManager *)arg1 shouldBreakLineByWordBeforeCharacterAtIndex:(unsigned long long)arg2;
- (long long)layoutManager:(NSLayoutManager *)arg1 shouldUseAction:(long long)arg2 forControlCharacterAtIndex:(unsigned long long)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 paragraphSpacingBeforeGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (double)layoutManager:(NSLayoutManager *)arg1 lineSpacingAfterGlyphAtIndex:(unsigned long long)arg2 withProposedLineFragmentRect:(struct CGRect)arg3;
- (unsigned long long)layoutManager:(NSLayoutManager *)arg1 shouldGenerateGlyphs:(const unsigned short *)arg2 properties:(const long long *)arg3 characterIndexes:(const unsigned long long *)arg4 font:(UIFont *)arg5 forGlyphRange:(struct _NSRange)arg6;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSTextStorageDelegate <NSObject>

@optional
- (void)textStorage:(NSTextStorage *)arg1 didProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
- (void)textStorage:(NSTextStorage *)arg1 willProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
@end

@protocol QLPreviewControllerDataSource
- (id <QLPreviewItem>)previewController:(QLPreviewController *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewController:(QLPreviewController *)arg1;
@end

@protocol QLPreviewControllerDelegate <NSObject>

@optional
- (UIImage *)previewController:(QLPreviewController *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewController:(QLPreviewController *)arg1 frameForPreviewItem:(id <QLPreviewItem>)arg2 inSourceView:(id *)arg3;
- (_Bool)previewController:(QLPreviewController *)arg1 shouldOpenURL:(NSURL *)arg2 forPreviewItem:(id <QLPreviewItem>)arg3;
- (void)previewControllerDidDismiss:(QLPreviewController *)arg1;
- (void)previewControllerWillDismiss:(QLPreviewController *)arg1;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) NSString *previewItemTitle;
@end

@protocol SBBulletinCellButton <NSObject>

@optional
- (void)setBulletinContext:(NSDictionary *)arg1;
@end

@protocol SPDaemonQueryDelegate
- (void)searchDaemonQueryCompleted:(SPDaemonQueryToken *)arg1;
- (void)searchDaemonQueryReset:(SPDaemonQueryToken *)arg1;
- (void)searchDaemonQuery:(SPDaemonQueryToken *)arg1 encounteredError:(NSError *)arg2;
- (void)searchDaemonQuery:(SPDaemonQueryToken *)arg1 addedResults:(SPSearchResultDeserializer *)arg2;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UIKeyInput <UITextInputTraits>
- (void)deleteBackward;
- (void)insertText:(NSString *)arg1;
- (_Bool)hasText;
@end

@protocol UIModalViewDelegate <NSObject>

@optional
- (void)modalView:(UIModalView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)modalView:(UIModalView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentModalView:(UIModalView *)arg1;
- (void)willPresentModalView:(UIModalView *)arg1;
- (void)modalViewCancel:(UIModalView *)arg1;
- (void)modalView:(UIModalView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextInputTraits <NSObject>

@optional
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) long long returnKeyType;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocorrectionType;
@property(nonatomic) long long autocapitalizationType;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIVideoEditorControllerDelegate <NSObject>

@optional
- (void)videoEditorControllerDidCancel:(UIVideoEditorController *)arg1;
- (void)videoEditorController:(UIVideoEditorController *)arg1 didFailWithError:(NSError *)arg2;
- (void)videoEditorController:(UIVideoEditorController *)arg1 didSaveEditedVideoToPath:(NSString *)arg2;
@end

@protocol UIVideoEditorControllerDelegatePrivate <UIVideoEditorControllerDelegate>

@optional
- (void)videoEditorController:(UIViewController *)arg1 didTrimVideoWithOptions:(NSDictionary *)arg2;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@interface ABNewPersonViewController (ChatKitAdditions)
- (_Bool)ckCanDismissWhenSuspending;
@end

@interface ABPeoplePickerNavigationController (ChatKitAdditions)
- (_Bool)ckCanDismissWhenSuspending;
@end

@interface CKMediaObject : NSObject <QLPreviewItem>
{
    id <CKFileTransfer> _transfer;
}

+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
+ (Class)__ck_attachmentItemClass;
+ (id)iconCache;
+ (_Bool)isPreviewable;
@property(retain, nonatomic) id <CKFileTransfer> transfer; // @synthesize transfer=_transfer;
@property(readonly) NSURL *previewItemURL;
@property(readonly, nonatomic) int mediaType;
- (id)pasteboardItem;
@property(readonly, copy, nonatomic) NSString *UTIType;
@property(readonly, copy, nonatomic) NSString *mimeType;
@property(readonly, copy, nonatomic) NSDictionary *transcoderUserInfo;
@property(readonly, copy, nonatomic) NSString *filename;
@property(readonly, copy, nonatomic) NSURL *fileURL;
@property(readonly, copy, nonatomic) NSData *data;
@property(readonly, copy, nonatomic) NSString *transferGUID;
- (id)initWithTransfer:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)composeImages;
- (id)JPEGDataFromImage:(id)arg1;
- (id)fileManager;
- (id)previewDispatchCache;
- (id)generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (id)generateThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (struct CGSize)bbSize;
- (id)bbPreviewFillToSize:(struct CGSize)arg1;
- (id)savedPreviewFromURL:(id)arg1 forOrientation:(BOOL)arg2;
- (void)savePreview:(id)arg1 toURL:(id)arg2 forOrientation:(BOOL)arg3;
- (id)generatePreviewFromThumbnail:(id)arg1 width:(double)arg2 orientation:(BOOL)arg3;
- (void)_sampleImageEdges:(id)arg1 usingRect:(struct CGRect)arg2 forMostlyWhitePixels:(unsigned long long *)arg3 otherPixels:(unsigned long long *)arg4;
- (id)previewForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)fileSizeString;
- (id)downloadProgressString;
- (id)downloadProgressImage;
- (_Bool)shouldShowDisclosure;
- (id)previewCachesFileURLWithOrientation:(BOOL)arg1 extension:(id)arg2;
- (id)previewCacheKeyWithOrientation:(BOOL)arg1;
- (_Bool)canBeAttachmentContiguous;
- (void)export:(id)arg1;
- (_Bool)canExport;
- (_Bool)shouldBeQuickLooked;
- (_Bool)shouldShowViewer;
- (id)location;
- (id)icon;
- (id)subtitle;
- (id)title;
- (Class)previewBalloonViewClass;
- (Class)coloredBalloonViewClass;
- (Class)balloonViewClassForWidth:(double)arg1 orientation:(BOOL)arg2;
- (_Bool)isPreviewable;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) NSString *previewItemTitle;
@property(readonly) Class superclass;

@end

@interface CKAVMediaObject : CKMediaObject
{
    _Bool _durationLoaded;
    double _duration;
}

+ (id)durationCache;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (id)description;

@end

@interface CKActionSheetManager : NSObject <UIActionSheetDelegate>
{
    UIActionSheet *_actionSheet;
    CDUnknownBlockType _handler;
    CDUnknownBlockType _presenter;
    _Bool _performBeforeAnimation;
    _Bool _dismissingActionSheetForRotation;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool performBeforeAnimation; // @synthesize performBeforeAnimation=_performBeforeAnimation;
@property(retain, nonatomic) UIActionSheet *actionSheet; // @synthesize actionSheet=_actionSheet;
@property(copy, nonatomic) CDUnknownBlockType presenter; // @synthesize presenter=_presenter;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)dismissActionSheet:(id)arg1 withButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didFinishRotating;
- (void)willStartRotating;
- (void)dismissCurrentActionSheet;
- (void)showActionSheet:(id)arg1 withPresenter:(CDUnknownBlockType)arg2 performBeforeAnimation:(_Bool)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)showActionSheet:(id)arg1 withPresenter:(CDUnknownBlockType)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAddressBook : NSObject
{
}

+ (id)monogrammerWithDiameter:(double)arg1 style:(long long)arg2 useAppTintColor:(_Bool)arg3 customFont:(id)arg4;
+ (id)locationSharingContactImageOfDiameter:(double)arg1 forRecordID:(int)arg2 useCustomFont:(_Bool)arg3;
+ (id)transcriptContactImageOfDiameter:(double)arg1 forRecordID:(int)arg2;
+ (id)placeholderContactImageOfDiameter:(double)arg1 monogramStyle:(long long)arg2 tintMonogramText:(_Bool)arg3;
+ (id)contactImageOfDiameter:(double)arg1 forRecordID:(int)arg2 monogramStyle:(long long)arg3 tintMonogramText:(_Bool)arg4 customFont:(id)arg5;
+ (id)contactImageOfDiameter:(double)arg1 forRecordID:(int)arg2 monogramStyle:(long long)arg3 tintMonogramText:(_Bool)arg4;
+ (void *)addressBook;
+ (id)contactImageCache;

@end

@interface CKChatItem : NSObject
{
    _Bool _sizeLoaded;
    IMTranscriptChatItem *_imChatItem;
    NSAttributedString *_transcriptText;
    double _maxWidth;
    NSAttributedString *_transcriptDrawerText;
    struct CGSize _size;
    struct UIEdgeInsets _textAlignmentInsets;
}

+ (id)chatItemWithIMChatItem:(id)arg1 rightBalloonMaxWidth:(double)arg2 leftBalloonMaxWidth:(double)arg3 otherMaxWidth:(double)arg4;
@property(nonatomic, getter=isSizeLoaded) _Bool sizeLoaded; // @synthesize sizeLoaded=_sizeLoaded;
@property(copy, nonatomic) NSAttributedString *transcriptDrawerText; // @synthesize transcriptDrawerText=_transcriptDrawerText;
@property(nonatomic) double maxWidth; // @synthesize maxWidth=_maxWidth;
@property(copy, nonatomic) NSAttributedString *transcriptText; // @synthesize transcriptText=_transcriptText;
@property(retain, nonatomic) IMTranscriptChatItem *IMChatItem; // @synthesize IMChatItem=_imChatItem;
- (id)loadTranscriptDrawerText;
- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (id)loadTranscriptText;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(double)arg2;
@property(readonly, nonatomic) _Bool canSendAsTextMessage;
- (_Bool)canSave;
@property(readonly, nonatomic) _Bool canExport;
@property(readonly, nonatomic) _Bool canForward;
@property(readonly, nonatomic) _Bool canDelete;
@property(readonly, nonatomic) _Bool canCopy;
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) _Bool wantsDrawerLayout;
@property(readonly, nonatomic) _Bool displayDuringSend;
@property(readonly, retain, nonatomic) UIImage *contactImage;
@property(readonly, copy, nonatomic) NSString *cellIdentifier;
@property(readonly, nonatomic) Class cellClass;
@property(readonly, nonatomic) BOOL transcriptOrientation;
@property(readonly, nonatomic) struct UIEdgeInsets contentInsets;
@property(readonly, nonatomic) struct UIEdgeInsets transcriptTextAlignmentInsets;
- (void)unloadSize;
@property(readonly, nonatomic) struct UIEdgeInsets textAlignmentInsets; // @synthesize textAlignmentInsets=_textAlignmentInsets;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
- (void)unloadTranscriptText;
@property(readonly, nonatomic) _Bool hasTail;
@property(readonly, nonatomic) unsigned char attachmentContiguousType;
@property(readonly, nonatomic) unsigned char contiguousType;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;

@end

@interface CKBalloonChatItem : CKChatItem
{
}

- (void)configureBalloonView:(id)arg1;
@property(readonly, retain, nonatomic) IMHandle *sender;
@property(readonly, retain, nonatomic) NSDate *time;
@property(readonly, nonatomic) _Bool failed;
@property(readonly, nonatomic, getter=isFromMe) _Bool fromMe;
@property(readonly, nonatomic) Class balloonViewClass;
@property(readonly, nonatomic) unsigned long long balloonCorners;
@property(readonly, nonatomic) BOOL balloonOrientation;
- (id)loadTranscriptDrawerText;
- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (_Bool)isEditable;
- (_Bool)wantsDrawerLayout;
- (_Bool)displayDuringSend;
- (id)contactImage;
- (id)cellIdentifier;
- (Class)cellClass;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets)contentInsets;
- (struct UIEdgeInsets)transcriptTextAlignmentInsets;
- (id)description;

@end

@interface CKMessagePartChatItem : CKBalloonChatItem
{
}

@property(readonly, copy, nonatomic) NSArray *pasteboardItems;
@property(readonly, nonatomic) BOOL color;
@property(readonly, retain, nonatomic) IMMessage *message;
- (void)configureBalloonView:(id)arg1;
- (id)sender;
- (id)time;
- (_Bool)failed;
- (_Bool)isFromMe;
- (_Bool)canSendAsTextMessage;
- (_Bool)canForward;
- (_Bool)canCopy;
- (id)description;
- (id)composition;

@end

@interface CKTextMessagePartChatItem : CKMessagePartChatItem
{
}

@property(readonly, nonatomic) _Bool containsHyperlink;
@property(readonly, copy, nonatomic) NSAttributedString *subject;
@property(readonly, copy, nonatomic) NSAttributedString *text;
- (id)pasteboardItems;
- (Class)balloonViewClass;
- (id)loadTranscriptText;
- (id)composition;

@end

@interface CKAggregateMessagePartChatItem : CKTextMessagePartChatItem
{
    NSArray *_subparts;
}

@property(copy, nonatomic) NSArray *subparts; // @synthesize subparts=_subparts;
@property(readonly, copy, nonatomic) NSString *title;
- (id)pasteboardItems;
- (Class)balloonViewClass;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(double)arg2;
- (id)composition;

@end

@interface CKAlertItem : SBAlertItem
{
    long long _alignment;
    _Bool _alignmentHasBeenSet;
    _Bool _displayingEntireMessage;
}

- (_Bool)shouldHideSMSPreview;
- (_Bool)forcesModalAlertAppearance;
- (_Bool)shouldShowInLockScreen;
- (_Bool)shouldShowInEmergencyCall;
- (_Bool)willShowInAwayItems;
- (id)lockLabel;
- (long long)bodyTextAlignmentForAlertSheet:(id)arg1 displayedLineCount:(int)arg2;
- (id)alertSheet;
- (Class)alertSheetClass;
- (id)messageText;
- (id)name;
- (void)didDeactivateForReason:(int)arg1;
- (void)willActivate;
- (id)_taggedAlertItems;
- (void)_deactivateTaggedAlertItem;
- (void)_deactivateAllTaggedAlertItems;
- (void)_untag;
- (void)_tag;

@end

@interface CKAnimatedImage : NSObject
{
    UIImage *_image;
    NSArray *_durations;
}

+ (id)animatedImageWithContentsOfCPBitmapURL:(id)arg1;
@property(copy, nonatomic) NSArray *durations; // @synthesize durations=_durations;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (id)_initWithImage:(id)arg1 durations:(id)arg2;
- (_Bool)writeToCPBitmapURL:(id)arg1;
@property(readonly, nonatomic) struct CGSize size;
- (id)initWithImages:(id)arg1 durations:(id)arg2;
- (id)description;
- (void)dealloc;
- (id)frames;

@end

@interface CKImageMediaObject : CKMediaObject
{
    CKImageData *_imageData;
    CKImageData *_backgroundImageData;
}

+ (Class)imageDataClass;
+ (_Bool)isPreviewable;
+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
+ (Class)__ck_attachmentItemClass;
@property(readonly, retain, nonatomic) CKImageData *imageData;
- (_Bool)canBeAttachmentContiguous;
- (void)export:(id)arg1;
- (_Bool)canExport;
- (id)generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (id)generateThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (struct CGSize)bbSize;
- (id)location;
- (int)mediaType;
- (void)dealloc;

@end

@interface CKAnimatedImageMediaObject : CKImageMediaObject
{
}

+ (id)UTITypes;
- (void)saveAnimatedPreview:(id)arg1 toURL:(id)arg2 forOrientation:(BOOL)arg3;
- (id)generateThumbnailsForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)savedAnimatedPreviewFromURL:(id)arg1 forOrientation:(BOOL)arg2;
- (id)generateAnimatedPreviewFromThumbnails:(id)arg1 width:(double)arg2 orientation:(BOOL)arg3;
- (id)notificationCenter;
- (id)previewForWidth:(double)arg1 orientation:(BOOL)arg2;

@end

@interface CKBalloonImageView : UIView
{
    UIImage *_image;
}

@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKBalloonView : CKBalloonImageView <UIGestureRecognizerDelegate>
{
    BOOL _orientation;
    _Bool _hasTail;
    _Bool _filled;
    _Bool _showingMenu;
    _Bool _canUseOpaqueMask;
    _Bool _hasOverlay;
    _Bool _wantsSkinnyMask;
    id <CKBalloonViewDelegate> _delegate;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    unsigned long long _balloonCorners;
    CKManualUpdater *_displayUpdater;
    CKBalloonImageView *_overlay;
    struct UIEdgeInsets _textAlignmentInsets;
}

@property(retain, nonatomic) CKBalloonImageView *overlay; // @synthesize overlay=_overlay;
@property(retain, nonatomic) CKManualUpdater *displayUpdater; // @synthesize displayUpdater=_displayUpdater;
@property(nonatomic) unsigned long long balloonCorners; // @synthesize balloonCorners=_balloonCorners;
@property(nonatomic) _Bool wantsSkinnyMask; // @synthesize wantsSkinnyMask=_wantsSkinnyMask;
@property(nonatomic) _Bool hasOverlay; // @synthesize hasOverlay=_hasOverlay;
@property(nonatomic) _Bool canUseOpaqueMask; // @synthesize canUseOpaqueMask=_canUseOpaqueMask;
@property(nonatomic, getter=isShowingMenu) _Bool showingMenu; // @synthesize showingMenu=_showingMenu;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer; // @synthesize doubleTapGestureRecognizer=_doubleTapGestureRecognizer;
@property(nonatomic) struct UIEdgeInsets textAlignmentInsets; // @synthesize textAlignmentInsets=_textAlignmentInsets;
@property(nonatomic, getter=isFilled) _Bool filled; // @synthesize filled=_filled;
@property(nonatomic) _Bool hasTail; // @synthesize hasTail=_hasTail;
@property(nonatomic) BOOL orientation; // @synthesize orientation=_orientation;
@property(nonatomic) id <CKBalloonViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)export:(id)arg1;
- (void)copy:(id)arg1;
- (void)sendAsTextMessage:(id)arg1;
- (void)more:(id)arg1;
- (void)_performAction:(SEL)arg1 sender:(id)arg2;
- (void)willHideMenu:(id)arg1;
- (void)willShowMenu:(id)arg1;
- (void)showMenu;
- (void)longPressGestureRecognized:(id)arg1;
- (void)doubleTapGestureRecognized:(id)arg1;
- (void)tapGestureRecognized:(id)arg1;
- (void)setHasOverlay:(_Bool)arg1 autoDismiss:(_Bool)arg2;
- (void)_dismissOverlay;
@property(readonly, nonatomic) UIColor *overlayColor;
- (void)prepareForReuse;
- (void)prepareForDisplay;
- (void)prepareForDisplayIfNeeded;
- (void)setNeedsPrepareForDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (void)layoutSubviews;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)canBecomeFirstResponder;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;
- (void)configureForMessagePart:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKColoredBalloonView : CKBalloonView
{
    BOOL _color;
    _Bool _wantsGradient;
    CKBalloonImageView *_mask;
    CKGradientView *_gradientView;
}

@property(nonatomic) _Bool wantsGradient; // @synthesize wantsGradient=_wantsGradient;
@property(retain, nonatomic) CKGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) CKBalloonImageView *mask; // @synthesize mask=_mask;
@property(nonatomic) BOOL color; // @synthesize color=_color;
- (void)updateWantsGradient;
@property(retain, nonatomic) UIView<CKGradientReferenceView> *gradientReferenceView;
- (id)overlayColor;
- (void)setCanUseOpaqueMask:(_Bool)arg1;
- (void)setHasTail:(_Bool)arg1;
- (void)prepareForDisplay;
- (void)prepareForReuse;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)description;
- (void)dealloc;
- (void)configureForMessagePart:(id)arg1;

@end

@interface CKAttachmentBalloonView : CKColoredBalloonView
{
    CKMediaObject *_mediaObject;
    CKAttachmentView *_attachmentView;
}

@property(retain, nonatomic) CKAttachmentView *attachmentView; // @synthesize attachmentView=_attachmentView;
@property(retain, nonatomic) CKMediaObject *mediaObject; // @synthesize mediaObject=_mediaObject;
- (void)transferUpdated:(id)arg1;
- (void)updateViews;
- (void)prepareForReuse;
- (void)prepareForDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)description;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;
- (void)configureForMessagePart:(id)arg1;

@end

@interface CKAttachmentCell : UICollectionViewCell
{
    _Bool _editing;
    UIImageView *_checkmarkView;
    NSObject<CKAttachmentCellDelegate> *_delegate;
    CKAttachmentItem *_representedObject;
}

@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
@property(retain, nonatomic) CKAttachmentItem *representedObject; // @synthesize representedObject=_representedObject;
@property(nonatomic) NSObject<CKAttachmentCellDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImageView *checkmarkView; // @synthesize checkmarkView=_checkmarkView;
- (void)saveAttachment:(id)arg1;
- (void)more:(id)arg1;
- (void)delete:(id)arg1;
- (void)copy:(id)arg1;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1;
- (void)dealloc;

@end

@interface CKAttachmentCollectionView : UICollectionView
{
}

- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)dealloc;

@end

@interface CKAttachmentItem : NSObject <QLPreviewItem>
{
    struct CGSize _size;
    NSURL *_fileURL;
    NSString *_guid;
    NSURL *_previewURL;
}

+ (unsigned long long)pxWidth;
+ (id)UTITypes;
+ (struct CGSize)defaultSize;
+ (id)previewSizingQueue;
+ (id)previewCache;
@property(retain, nonatomic) NSURL *previewURL; // @synthesize previewURL=_previewURL;
@property(copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly) NSURL *previewItemURL;
- (id)pasteboardItem;
- (id)UTIType;
- (void)startDeferredSetup;
- (id)cachedPreview;
- (void)_savePreview:(id)arg1;
- (void)generatePreviewWithCompletion:(CDUnknownBlockType)arg1;
- (id)_savedPreviewFromURL:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)imageData;
- (id)initWithFileURL:(id)arg1 size:(struct CGSize)arg2 guid:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) NSString *previewItemTitle;
@property(readonly) Class superclass;

@end

@interface CKAttachmentItemManager : NSObject
{
}

+ (id)attachmentWithFileURL:(id)arg1 size:(struct CGSize)arg2 guid:(id)arg3;

@end

@interface CKAttachmentMessagePartChatItem : CKMessagePartChatItem
{
    CKMediaObject *_mediaObject;
}

@property(retain, nonatomic) CKMediaObject *mediaObject; // @synthesize mediaObject=_mediaObject;
- (unsigned char)attachmentContiguousType;
@property(readonly, copy, nonatomic) NSString *transferGUID;
- (id)pasteboardItems;
- (unsigned long long)balloonCorners;
- (Class)balloonViewClass;
- (_Bool)canExport;
- (_Bool)canForward;
- (_Bool)canCopy;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(double)arg2;
- (id)description;
- (void)dealloc;
- (id)composition;

@end

@interface CKAttachmentSaver : NSObject
{
    unsigned long long _errorCount;
    NSMutableArray *_attachments;
}

- (void)_saveCompletion:(id)arg1;
- (void)_saveCompletionForImage:(id)arg1 error:(id)arg2 context:(void *)arg3;
- (void)_saveCompletionForVideoWithPath:(id)arg1 error:(id)arg2 context:(void *)arg3;
- (void)_saveNextAttachment;
- (void)_pop;
- (void)_done;
- (void)runToCompletion;
- (void)dealloc;
- (id)initWithAttachments:(id)arg1;

@end

@interface CKAttachmentView : UIView
{
    UIImageView *_iconImageView;
    UILabel *_actionLabel;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
}

@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UILabel *actionLabel; // @synthesize actionLabel=_actionLabel;
@property(retain, nonatomic) UIImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(copy, nonatomic) NSString *subtitle;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *action;
@property(copy, nonatomic) UIImage *icon;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKViewController : UIViewController
{
    _Bool _appeared;
    _Bool _appearing;
    _Bool _dissapearing;
}

@property(nonatomic) _Bool dissapearing; // @synthesize dissapearing=_dissapearing;
@property(nonatomic) _Bool appearing; // @synthesize appearing=_appearing;
@property(nonatomic) _Bool appeared; // @synthesize appeared=_appeared;
- (void)childViewControllersPerform:(SEL)arg1;
- (void)viewDidAppearDeferredSetup;
- (void)performResumeDeferredSetup;
- (void)systemApplicationWillEnterForeground;
- (void)parentControllerDidBecomeActive;
- (void)parentControllerDidResume:(_Bool)arg1 animating:(_Bool)arg2;
- (void)prepareForResume;
- (void)prepareForSuspend;
- (void)significantTimeChange;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface CKAttachmentViewController : CKViewController <CKFeedCollectionViewLayoutDelegate, UICollectionViewDelegateFlowLayout, CKAttachmentCellDelegate, CKFeedCollectionViewLayoutDatasource, CKTranscriptRecipientsControllerDelegate, UICollectionViewDataSource, QLPreviewControllerDelegate>
{
    _Bool _initialLoad;
    _Bool _selectingAttachments;
    id <CKAttachmentViewControllerDelegate> _delegate;
    CKAttachmentCollectionView *_collectionView;
    NSMutableArray *_mediaObjects;
    CKFeedCollectionViewLayout *_feedLayout;
    UICollectionViewFlowLayout *_flowLayout;
    CKQLPreviewController *_qlPreviewController;
    CKConversation *_conversation;
    UIBarButtonItem *_saveButton;
    UIBarButtonItem *_deleteButton;
    NSArray *_visibleMediaObjects;
    CKTranscriptRecipientsController *_recipientsController;
}

@property(retain, nonatomic) CKTranscriptRecipientsController *recipientsController; // @synthesize recipientsController=_recipientsController;
@property(retain, nonatomic) NSArray *visibleMediaObjects; // @synthesize visibleMediaObjects=_visibleMediaObjects;
@property(nonatomic, getter=isSelectingAttachments) _Bool selectingAttachments; // @synthesize selectingAttachments=_selectingAttachments;
@property(retain, nonatomic) UIBarButtonItem *deleteButton; // @synthesize deleteButton=_deleteButton;
@property(retain, nonatomic) UIBarButtonItem *saveButton; // @synthesize saveButton=_saveButton;
@property(nonatomic, getter=isInitialLoad) _Bool initialLoad; // @synthesize initialLoad=_initialLoad;
@property(retain, nonatomic) CKConversation *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) CKQLPreviewController *qlPreviewController; // @synthesize qlPreviewController=_qlPreviewController;
@property(retain, nonatomic) UICollectionViewFlowLayout *flowLayout; // @synthesize flowLayout=_flowLayout;
@property(retain, nonatomic) CKFeedCollectionViewLayout *feedLayout; // @synthesize feedLayout=_feedLayout;
@property(retain, nonatomic) NSMutableArray *mediaObjects; // @synthesize mediaObjects=_mediaObjects;
@property(retain, nonatomic) CKAttachmentCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(nonatomic) id <CKAttachmentViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (double)collectionView:(id)arg1 layout:(id)arg2 spacingBetweenSection:(long long)arg3 andHeaderForGroupID:(id)arg4;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 headerSizeForGroupID:(id)arg3 proposedSize:(struct CGSize)arg4;
- (id)collectionView:(id)arg1 layout:(id)arg2 groupIDForSection:(long long)arg3;
- (struct CKFeedSeparatorMetrics)collectionView:(id)arg1 layout:(id)arg2 metricsForSeparatorBetweenSection:(long long)arg3 andSection:(long long)arg4 proposedMetrics:(struct CKFeedSeparatorMetrics)arg5;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForFooterInSection:(long long)arg3 proposedSize:(struct CGSize)arg4;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForHeaderOfSections:(id)arg3 proposedSize:(struct CGSize)arg4;
- (_Bool)collectionView:(id)arg1 layout:(id)arg2 shouldHideHeaderInSection:(long long)arg3;
- (_Bool)collectionView:(id)arg1 layout:(id)arg2 shouldJoinSection:(long long)arg3 withSection:(long long)arg4;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForThumbnailInSection:(long long)arg3;
- (struct CKFeedSeparatorMetrics)collectionView:(id)arg1 layout:(id)arg2 metricsForSeparatorBetweenRowAtIndexPath:(id)arg3 andRowAtIndexPath:(id)arg4 proposedMetrics:(struct CKFeedSeparatorMetrics)arg5;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForRowAtIndexPath:(id)arg3 proposedSize:(struct CGSize)arg4;
- (void)collectionView:(id)arg1 layout:(id)arg2 referenceMaximumLength:(double *)arg3 minimumNumberOfTilesToOmit:(long long *)arg4 forSection:(long long)arg5;
- (id)collectionView:(id)arg1 layout:(id)arg2 batchIDForTileAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 captionSizeForTileAtIndexPath:(id)arg3 proposedSize:(struct CGSize)arg4;
- (_Bool)collectionView:(id)arg1 layout:(id)arg2 shouldShowCaptionForTileAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 mininumSizeForTileAtIndexPath:(id)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 imageSizeForTileAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 contentInsetsForSection:(long long)arg3;
- (long long)collectionView:(id)arg1 layout:(id)arg2 typeForSection:(long long)arg3;
- (_Bool)collectionView:(id)arg1 layout:(id)arg2 shouldHideSection:(long long)arg3;
- (unsigned long long)numberOfItemsInSection:(unsigned long long)arg1 forFeedLayout:(id)arg2;
- (unsigned long long)numberOfSectionsInFeedLayout:(id)arg1;
- (void)performAction:(SEL)arg1 forAttachmentCell:(id)arg2;
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;
- (_Bool)previewController:(id)arg1 shouldOpenURL:(id)arg2 forPreviewItem:(id)arg3;
- (void)previewController:(id)arg1 didTransitionToState:(long long)arg2;
- (void)previewController:(id)arg1 willTransitionToState:(long long)arg2;
- (void)_showAllPreviewItemsForPreviewController:(id)arg1;
- (void)_hideCurrentPreviewItemForPreviewController:(id)arg1;
- (void)_deleteSelectedAttachments:(id)arg1;
- (void)_saveSelectedAttachments:(id)arg1;
- (void)_deleteAttachments:(id)arg1;
- (void)_saveAttachments:(id)arg1;
- (id)selectedAttachmentIndexes;
- (void)selectAttachments:(id)arg1;
- (void)_updateToolbar;
- (struct CGImage *)cgImageForUIImage:(id)arg1;
- (void)_configureCell:(id)arg1 withCollectionView:(id)arg2 forItemAtIndexPath:(id)arg3;
- (id)_iconForFileURL:(id)arg1 UTIType:(id)arg2;
- (void)_prewarmNextChunk;
- (void)_faultInAttachments;
- (void)_loadAttachments;
- (_Bool)transcriptRecipientsControllerShouldShowAttachmentsHeader:(id)arg1;
- (void)transcriptRecipientsControllerDidChangeSize:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(id)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(id)arg1 shouldShowMenuForItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)_chatItemsChanged:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppearDeferredSetup;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)loadView;
- (id)initWithConversation:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAudioAnalyzer : NSObject <Endpointer>
{
    _Bool _detectedMusic;
    double _sampleRate;
    double _samplesSeen;
    unsigned int _frameRate;
    int _endpointMode;
    double _startWaitTime;
    double _interspeechWaitTime;
    double _endWaitTime;
    NSMutableData *_floatSampleBuffer;
    unsigned long long _framesSeen;
    struct {
        float rms;
        unsigned long long zc;
    } _frameAnalysisArray[25];
    struct OpaqueAudioComponentInstance *_audioUnitEPVAD;
    NSDictionary *_modelDict;
    unsigned int _inMaxSamplesPerBuffer;
    float _speechPaddingFactor;
    float _decoderLatency;
    float _heuristicWindowSec;
    float _heuristicTransitionRatio;
}

+ (void)initialize;
@property(nonatomic) float heuristicTransitionRatio; // @synthesize heuristicTransitionRatio=_heuristicTransitionRatio;
@property(nonatomic) float heuristicWindowSec; // @synthesize heuristicWindowSec=_heuristicWindowSec;
@property(nonatomic) float decoderLatency; // @synthesize decoderLatency=_decoderLatency;
@property(nonatomic) float speechPaddingFactor; // @synthesize speechPaddingFactor=_speechPaddingFactor;
@property(nonatomic) unsigned int inMaxSamplesPerBuffer; // @synthesize inMaxSamplesPerBuffer=_inMaxSamplesPerBuffer;
@property double endWaitTime; // @synthesize endWaitTime=_endWaitTime;
@property double interspeechWaitTime; // @synthesize interspeechWaitTime=_interspeechWaitTime;
@property double startWaitTime; // @synthesize startWaitTime=_startWaitTime;
@property int endpointMode; // @synthesize endpointMode=_endpointMode;
- (void)reset;
- (int)getStatus:(struct AudioQueueBuffer *)arg1;
- (_Bool)configureWithSampleRate:(double)arg1 andFrameRate:(unsigned int)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAudioAttachmentItem : CKAttachmentItem
{
}

+ (id)UTITypes;
- (id)previewItemTitle;
- (id)cachedPreview;

@end

@interface CKAudioBalloonView : CKColoredBalloonView
{
    _Bool _playing;
    _Bool _played;
    double _time;
    double _duration;
    UIImage *_waveform;
    NSString *_timeFormat;
    UILabel *_timeLabel;
    CKAudioProgressView *_progressView;
    CKBalloonImageView *_waveformImageView;
}

@property(retain, nonatomic) CKBalloonImageView *waveformImageView; // @synthesize waveformImageView=_waveformImageView;
@property(retain, nonatomic) CKAudioProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
@property(copy, nonatomic) NSString *timeFormat; // @synthesize timeFormat=_timeFormat;
@property(nonatomic, getter=isPlayed) _Bool played; // @synthesize played=_played;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(retain, nonatomic) UIImage *waveform; // @synthesize waveform=_waveform;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) double time; // @synthesize time=_time;
- (void)updateProgress;
- (void)updateTimeString;
@property(nonatomic) long long waveformContentMode;
@property(nonatomic, getter=isControlHidden) _Bool controlHidden;
- (void)prepareForReuse;
- (void)prepareForDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;
- (void)configureForMessagePart:(id)arg1;

@end

@interface CKAudioController : NSObject <CKAudioPlayerDelegate>
{
    unsigned long long _currentIndex;
    _Bool _shouldUseSpeaker;
    _Bool _playing;
    _Bool _paused;
    _Bool _interrupted;
    NSMutableArray *_mediaObjects;
    id <CKAudioControllerDelegate> _delegate;
    CKAudioPlayer *_audioPlayer;
}

@property(nonatomic) _Bool interrupted; // @synthesize interrupted=_interrupted;
@property(retain, nonatomic) CKAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) _Bool shouldUseSpeaker; // @synthesize shouldUseSpeaker=_shouldUseSpeaker;
@property(nonatomic) id <CKAudioControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic, setter=_setMediaObjects:) NSMutableArray *_mediaObjects; // @synthesize _mediaObjects;
- (void)audioSessionInterruption:(id)arg1;
- (void)playListenEndSound:(CDUnknownBlockType)arg1;
- (void)playListenSound:(CDUnknownBlockType)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1;
- (void)audioPlayerCurrentTimeDidChange:(id)arg1;
@property(readonly, nonatomic) double currentMediaObjectDuration;
@property(readonly, nonatomic) double currentMediaObjectTime;
@property(readonly, retain, nonatomic) CKMediaObject *currentMediaObject;
- (void)stop;
- (void)pause;
- (void)play;
- (void)addMediaObjects:(id)arg1;
- (void)addMediaObject:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *mediaObjects;
- (id)initWithMediaObjects:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAudioMediaObject : CKAVMediaObject
{
}

+ (id)_cachedPowerLevelsForKey:(id)arg1;
+ (void)_cachePowerLevels:(id)arg1 forKey:(id)arg2;
+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
+ (Class)__ck_attachmentItemClass;
- (id)generatePlaceholderThumbnailForWidth:(double)arg1;
- (id)previewItemTitle;
- (id)generateThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)savedPreviewFromURL:(id)arg1 forOrientation:(BOOL)arg2;
- (void)savePreview:(id)arg1 toURL:(id)arg2 forOrientation:(BOOL)arg3;
- (id)generatePreviewFromThumbnail:(id)arg1 width:(double)arg2 orientation:(BOOL)arg3;
- (id)composeWaveformForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)waveformForWidth:(double)arg1 orientation:(BOOL)arg2;
- (void)export:(id)arg1;
- (_Bool)canExport;
- (Class)coloredBalloonViewClass;
@property(retain, nonatomic) NSArray *powerLevels; // @dynamic powerLevels;
- (int)mediaType;

@end

@interface CKExpirableMessageChatItem : CKAttachmentMessagePartChatItem
{
}

@property(readonly, nonatomic) _Bool isSaved;
@property(readonly, nonatomic) _Bool isPlayed;
- (_Bool)canSendAsTextMessage;
- (_Bool)canExport;
- (_Bool)canForward;
- (_Bool)canCopy;

@end

@interface CKAudioMessageChatItem : CKExpirableMessageChatItem
{
}

- (unsigned long long)balloonCorners;
- (Class)balloonViewClass;

// Remaining properties
@property(readonly, retain, nonatomic) CKAudioMediaObject *mediaObject;

@end

@interface CKAudioPlayer : NSObject <AVAudioPlayerDelegate>
{
    CKMediaObject *_mediaObject;
    id <CKAudioPlayerDelegate> _delegate;
    AVAudioPlayer *_audioPlayer;
    CADisplayLink *_displayLink;
    double _prevCurrentTime;
    CDUnknownBlockType _block;
}

@property(nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(nonatomic) double prevCurrentTime; // @synthesize prevCurrentTime=_prevCurrentTime;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) AVAudioPlayer *audioPlayer; // @synthesize audioPlayer=_audioPlayer;
@property(nonatomic) id <CKAudioPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CKMediaObject *mediaObject; // @synthesize mediaObject=_mediaObject;
- (void)displayLinkFired:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
@property(readonly, nonatomic) double duration;
@property(readonly, nonatomic) double currentTime;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing;
- (void)pause;
- (void)stop;
- (void)playWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)play;
- (id)initWithFileURL:(id)arg1;
- (id)initWithMediaObject:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAudioProgressTableViewActionButton : _UITableViewCellActionButton <SBBulletinCellButton>
{
    CKAudioProgressView *_progressView;
    double _duration;
    double _currentProgress;
    double _lastProgress;
    UILabel *_label;
}

@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(nonatomic) double lastProgress; // @synthesize lastProgress=_lastProgress;
@property(nonatomic) double currentProgress; // @synthesize currentProgress=_currentProgress;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(retain, nonatomic) CKAudioProgressView *progressView; // @synthesize progressView=_progressView;
- (void)didStop:(id)arg1;
- (void)didFinish:(id)arg1;
- (void)_updateTime:(id)arg1;
- (void)_playButtonHit:(id)arg1;
- (void)removeFromSuperview;
- (void)dealloc;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)labelSizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAudioProgressView : CKBalloonImageView
{
    _Bool _playing;
    _Bool _played;
    BOOL _color;
    float _progress;
    int _style;
    IMManualUpdater *_displayUpdater;
}

+ (id)templateImageWithControlImage:(id)arg1;
+ (id)pauseTemplateImage;
+ (id)playTemplateImage;
+ (id)pauseImageWithColor:(BOOL)arg1;
+ (id)playImageWithColor:(BOOL)arg1;
+ (float)progressForTime:(double)arg1 duration:(double)arg2;
@property(retain, nonatomic) IMManualUpdater *displayUpdater; // @synthesize displayUpdater=_displayUpdater;
@property(nonatomic) int style; // @synthesize style=_style;
@property(nonatomic) BOOL color; // @synthesize color=_color;
@property(nonatomic, getter=isPlayed) _Bool played; // @synthesize played=_played;
@property(nonatomic, getter=isPlaying) _Bool playing; // @synthesize playing=_playing;
@property(nonatomic) float progress; // @synthesize progress=_progress;
- (void)setNeedsPrepareForDisplay;
- (void)prepareForDisplayIfNeeded;
- (void)prepareForDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKAudioRecorder : NSObject <CKVoiceControllerDelegate>
{
    _Bool _recording;
    _Bool _recordingEmpty;
    _Bool _cancelled;
    _Bool _shouldPlayStartSound;
    _Bool _shouldPlayStopSound;
    id <CKAudioRecorderDelegate> _delegate;
    CKVoiceController *_voiceController;
    NSURL *_fileURL;
    NSDate *_startDate;
    CDUnknownBlockType _completion;
    struct OpaqueAudioFileID *_fileID;
    long long _totalPacketsCount;
}

@property(nonatomic) long long totalPacketsCount; // @synthesize totalPacketsCount=_totalPacketsCount;
@property(nonatomic) struct OpaqueAudioFileID *fileID; // @synthesize fileID=_fileID;
@property(nonatomic) _Bool shouldPlayStopSound; // @synthesize shouldPlayStopSound=_shouldPlayStopSound;
@property(nonatomic) _Bool shouldPlayStartSound; // @synthesize shouldPlayStartSound=_shouldPlayStartSound;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) CKVoiceController *voiceController; // @synthesize voiceController=_voiceController;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic, getter=isRecordingEmpty) _Bool recordingEmpty; // @synthesize recordingEmpty=_recordingEmpty;
@property(nonatomic, getter=isRecording) _Bool recording; // @synthesize recording=_recording;
@property(nonatomic) id <CKAudioRecorderDelegate> delegate; // @synthesize delegate=_delegate;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)resetState;
- (void)voiceController:(id)arg1 didUpdateAveragePower:(float)arg2;
- (void)voiceControllerRecordBufferAvailable:(id)arg1 buffer:(id)arg2;
- (void)voiceControllerDidFinishRecording:(id)arg1 successfully:(_Bool)arg2;
- (void)voiceControllerDidStartRecording:(id)arg1;
- (void)voiceControllerDidDetectStartpoint:(id)arg1;
- (void)cancelRecording;
- (void)stopRecordingAndPlaySound:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stopRecording:(CDUnknownBlockType)arg1;
- (void)startRecordingForRaiseGesture:(_Bool)arg1 shouldPlaySound:(_Bool)arg2;
- (void)startRecordingAndPlaySound:(_Bool)arg1;
- (void)startRecordingForRaiseGesture;
@property(readonly, nonatomic) double duration;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKAudioSessionController : NSObject
{
    _Bool _active;
    _Bool _shouldUseSpeaker;
    _Bool _dirty;
}

+ (id)queue;
+ (id)shareInstance;
@property(getter=isDirty) _Bool dirty; // @synthesize dirty=_dirty;
@property _Bool shouldUseSpeaker; // @synthesize shouldUseSpeaker=_shouldUseSpeaker;
@property(getter=isActive) _Bool active; // @synthesize active=_active;
- (void)audioSessionMediaServicesWereReset:(id)arg1;
- (void)audioSessionMediaServicesWereLost:(id)arg1;
- (void)audioSessionInterruption:(id)arg1;
- (void)audioSessionRouteChange:(id)arg1;
- (void)configureAudioSession:(_Bool)arg1;
- (void)setActive:(_Bool)arg1 shouldUseSpeaker:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)deactivate;
- (void)activateUsingSpeaker:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (void)dealloc;

@end

@interface CKAudioTrimViewController : UIViewController
{
    id <CKTrimControllerDelegate> _delegate;
    double _maxDuration;
    CKMediaObject *_originalMediaObject;
    CKMediaObject *_trimmedMediaObject;
}

@property(nonatomic) double maxDuration; // @synthesize maxDuration=_maxDuration;
@property(nonatomic) id <CKTrimControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CKMediaObject *trimmedMediaObject; // @synthesize trimmedMediaObject=_trimmedMediaObject;
@property(retain, nonatomic) CKMediaObject *originalMediaObject; // @synthesize originalMediaObject=_originalMediaObject;
- (void)loadView;
- (id)initWithMediaObject:(id)arg1;

@end

@interface CKAutoupdatingDateFormatter : NSDateFormatter
{
    NSString *_template;
}

@property(copy, nonatomic) NSString *template; // @synthesize template=_template;
- (void)updateDateFormat;
- (id)notificationCenter;
- (id)initWithTemplate:(id)arg1;
- (void)dealloc;

@end

@interface CKAutoupdatingRelativeDateFormatter : CKAutoupdatingDateFormatter
{
}

+ (id)weekdayTemplateCharacters;
+ (id)relativeStringFromDate:(id)arg1;
+ (id)relativeDateFormatter;
- (id)stringFromDate:(id)arg1 isRelative:(_Bool *)arg2;
- (id)stringFromDate:(id)arg1;

@end

@interface CKBalloonTextView : UITextView <NSLayoutManagerDelegate>
{
    _Bool _singleLine;
    NSAttributedString *_attributedText;
    double _capOffsetFromBoundsTop;
    double _lastLineBaselineOffsetFromBoundsTop;
}

@property(nonatomic, getter=isSingleLine) _Bool singleLine; // @synthesize singleLine=_singleLine;
@property(nonatomic) double lastLineBaselineOffsetFromBoundsTop; // @synthesize lastLineBaselineOffsetFromBoundsTop=_lastLineBaselineOffsetFromBoundsTop;
@property(nonatomic) double capOffsetFromBoundsTop; // @synthesize capOffsetFromBoundsTop=_capOffsetFromBoundsTop;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2 isSingleLine:(_Bool *)arg3;
- (id)initReadonlyAndUnselectableWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (void)didMoveToWindow;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKCache : NSObject <CKCache>
{
    NSMutableDictionary *_dictionary;
}

@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void)removeAllObjects;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKCardMediaObject : CKMediaObject
{
}

- (_Bool)shouldShowDisclosure;
- (_Bool)shouldBeQuickLooked;
- (_Bool)shouldShowViewer;

@end

@interface CKCalendarMediaObject : CKCardMediaObject
{
}

+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
- (id)subtitle;
- (int)mediaType;

@end

@interface CKComposeRecipientContainerView : UIView
{
    _UIBackdropView *_backdropView;
    UIView *_separatorView;
}

@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKRecipientSelectionController : CKViewController <MFComposeRecipientTextViewDelegate, CKRecipientSearchListControllerDelegate, MFGroupDetailViewControllerDelegate, UINavigationControllerDelegate, ABPeoplePickerNavigationControllerDelegate>
{
    double _keyboardHeightWithAccessoryView;
    _Bool _peoplePickerHidden;
    _Bool _editable;
    _Bool _forceMMS;
    _Bool _preventAtomization;
    _Bool _didShowOneTimeErrorAlert;
    _Bool _homogenizePreferredServiceForiMessage;
    _Bool _shouldSuppressSearchResultsTable;
    id <CKRecipientSelectionControllerDelegate> _delegate;
    CKPendingConversation *_conversation;
    CKComposeRecipientView *_toField;
    UIView *_toFieldContainerView;
    CKRecipientSearchListController *_searchListController;
    UIScrollView *_toFieldScrollingView;
    ABPeoplePickerNavigationController *_peoplePickerController;
    NSArray *_addressBookProperties;
    MFComposeRecipient *_recentContactForPresentedABCard;
    NSMutableDictionary *_recipientAvailibityTimers;
    NSMutableDictionary *_recipientAvailabilities;
}

@property(retain, nonatomic) NSMutableDictionary *recipientAvailabilities; // @synthesize recipientAvailabilities=_recipientAvailabilities;
@property(retain, nonatomic) NSMutableDictionary *recipientAvailibityTimers; // @synthesize recipientAvailibityTimers=_recipientAvailibityTimers;
@property(readonly, nonatomic) _Bool shouldSuppressSearchResultsTable; // @synthesize shouldSuppressSearchResultsTable=_shouldSuppressSearchResultsTable;
@property(readonly, nonatomic) _Bool homogenizePreferredServiceForiMessage; // @synthesize homogenizePreferredServiceForiMessage=_homogenizePreferredServiceForiMessage;
@property(nonatomic) _Bool didShowOneTimeErrorAlert; // @synthesize didShowOneTimeErrorAlert=_didShowOneTimeErrorAlert;
@property(nonatomic) _Bool preventAtomization; // @synthesize preventAtomization=_preventAtomization;
@property(retain, nonatomic) MFComposeRecipient *recentContactForPresentedABCard; // @synthesize recentContactForPresentedABCard=_recentContactForPresentedABCard;
@property(retain, nonatomic) NSArray *addressBookProperties; // @synthesize addressBookProperties=_addressBookProperties;
@property(retain, nonatomic) ABPeoplePickerNavigationController *peoplePickerController; // @synthesize peoplePickerController=_peoplePickerController;
@property(retain, nonatomic) UIScrollView *toFieldScrollingView; // @synthesize toFieldScrollingView=_toFieldScrollingView;
@property(nonatomic) _Bool forceMMS; // @synthesize forceMMS=_forceMMS;
@property(nonatomic, getter=isEditable) _Bool editable; // @synthesize editable=_editable;
@property(nonatomic, getter=isPeoplePickerHidden) _Bool peoplePickerHidden; // @synthesize peoplePickerHidden=_peoplePickerHidden;
@property(retain, nonatomic) CKRecipientSearchListController *searchListController; // @synthesize searchListController=_searchListController;
@property(retain, nonatomic) UIView *toFieldContainerView; // @synthesize toFieldContainerView=_toFieldContainerView;
@property(retain, nonatomic) CKComposeRecipientView *toField; // @synthesize toField=_toField;
@property(retain, nonatomic) CKPendingConversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) id <CKRecipientSelectionControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_updateAddressBookProperties;
- (void)_updateSearchResultsTable;
- (struct UIEdgeInsets)_navigationBarInsets;
- (void)_keyboardWillShowOrHide:(id)arg1;
- (void)_hideSearchField;
- (void)_showSearchField;
- (void)_updateShowingSearch;
- (void)_resetSearchResultsInsets;
- (_Bool)_isToFieldPushedUp;
- (void)_adjustToFieldPositionIfNecessary;
- (void)_updateRecipientViewLayouts;
- (id)_navigationControllerForSearchResults;
- (void)_removeRecent;
- (void)_showDetailsForRecipient:(id)arg1 canDelete:(_Bool)arg2 presentInPopover:(_Bool)arg3;
- (void)_showDetailsForGroup:(id)arg1;
- (id)_alternateiMessagableAddressesForRecipient:(id)arg1;
- (id)_alternateAddressesForRecipient:(id)arg1;
- (void)_showActionSheetForRecipient:(id)arg1 animated:(_Bool)arg2;
- (void)_refreshActionSheet;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_showOneTimeErrorAlertForAddedRecipient:(id)arg1 service:(id)arg2 withError:(BOOL)arg3;
- (id)_recipientCausingTooManyRecipientsError;
- (_Bool)hasTimedOutRecipients;
- (void)_handleRecipientAvailabilityTimeout:(id)arg1;
- (void)_removeAvailabilityTimeoutTimerForRecipient:(id)arg1;
- (void)_startAvailabilityTimeoutTimerForRecipient:(id)arg1;
- (BOOL)_availibilityForRecipient:(id)arg1 onService:(id)arg2;
- (void)_handleConversationPreferredServiceDidChangeNotification:(id)arg1;
- (id)_toFieldCollapsedTextColor;
- (unsigned long long)_atomPresentationOptionsForRecipient:(id)arg1;
- (void)_updateToField;
- (void)removeRecipient:(id)arg1;
- (void)addRecipient:(id)arg1;
- (void)refreshComposeSendingServiceForAddresses:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) double collapsedHeight;
- (void)stopCheckingRecipientAvailabilityAndRemoveAllTimers;
- (_Bool)hasPendingiMessageRecipients;
- (_Bool)hasUnreachableEmergencyRecipient;
- (_Bool)hasFailediMessageRecipients;
- (_Bool)finishedComposingRecipients;
- (void)invalidateOutstandingIDStatusRequests;
@property(nonatomic, getter=isSearchResultsHidden) _Bool searchResultsHidden;
@property(readonly, nonatomic) _Bool toFieldIsFirstResponder;
- (void)addRecipients:(id)arg1;
- (id)recipients;
- (void)reset;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (_Bool)_shouldShowCardForPerson:(void *)arg1;
- (void)_dismissPeoplePicker;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)groupDetailViewControllerDidCancel:(id)arg1;
- (void)groupDetailViewController:(id)arg1 didTapComposeRecipient:(id)arg2;
- (void)groupDetailViewController:(id)arg1 didAskToRemoveGroup:(id)arg2;
- (long long)searchListController:(id)arg1 idStatusForIDSID:(id)arg2;
- (void)searchListController:(id)arg1 destinationsUpdated:(id)arg2;
- (void)searchListControllerDidScroll:(id)arg1;
- (void)searchListControllerDidFinishSearch:(id)arg1;
- (void)searchListController:(id)arg1 accessoryPickedForRecipient:(id)arg2;
- (void)searchListController:(id)arg1 didSelectRecipient:(id)arg2;
- (_Bool)recipientViewShouldIgnoreFirstResponderChanges:(id)arg1;
- (void)recipientViewDidResignFirstResponder:(id)arg1;
- (void)recipientViewDidBecomeFirstResponder:(id)arg1;
- (void)composeRecipientView:(id)arg1 didSelectRecipients:(id)arg2;
- (void)composeRecipientView:(id)arg1 showPersonCardForAtom:(id)arg2;
- (void)composeRecipientViewRequestAddRecipient:(id)arg1;
- (void)composeRecipientView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (unsigned long long)presentationOptionsForRecipient:(id)arg1;
- (id)composeRecipientView:(id)arg1 composeRecipientForRecord:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (id)composeRecipientView:(id)arg1 composeRecipientForAddress:(id)arg2;
- (void)composeRecipientViewReturnPressed:(id)arg1;
- (void)composeRecipientView:(id)arg1 didFinishEnteringAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 didRemoveRecipient:(id)arg2;
- (void)composeRecipientView:(id)arg1 textDidChange:(id)arg2;
- (void)_handleRecipientViewChanged:(id)arg1;
- (void)recipientAvailibilitiesDidUpdate;
- (void)recipientSelectionControllerDidChange;
- (void)parentControllerDidResume:(_Bool)arg1 animating:(_Bool)arg2;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewServiceWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppearDeferredSetup;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithConversation:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKComposeRecipientSelectionController : CKRecipientSelectionController <UITextFieldDelegate>
{
    CDUnknownBlockType _sendBlock;
}

@property(copy, nonatomic) CDUnknownBlockType sendBlock; // @synthesize sendBlock=_sendBlock;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)_updateBackfillForNewRecipients;
- (_Bool)alwaysShowSearchResultsTable;
- (_Bool)shouldSuppressSearchResultsTable;
- (_Bool)homogenizePreferredServiceForiMessage;
- (_Bool)shouldAtomizeToConversationName;
- (_Bool)peoplePickerShouldUsePopovers;
- (_Bool)searchListShouldUsePopvoers;
- (void)recipientSelectionControllerDidChange;
- (void)reset;
- (void)atomizeAndSendTimeoutHandler;
- (void)atomizeAndInvokeBlock:(CDUnknownBlockType)arg1;
- (void)addRecipient:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *proposedRecipients;
@property(readonly, retain, nonatomic) NSArray *expandedRecipients;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id <CKComposeRecipientSelectionControllerDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKComposeRecipientView : MFComposeRecipientTextView
{
}

- (void)reset;
- (void)dealloc;

@end

@interface CKComposition : NSObject
{
    NSAttributedString *_text;
    NSAttributedString *_subject;
}

+ (id)composition;
+ (id)compositionWithMediaObjects:(id)arg1 subject:(id)arg2;
+ (id)compositionWithMediaObject:(id)arg1 subject:(id)arg2;
+ (id)expirableCompositionWithMediaObject:(id)arg1;
+ (id)audioCompositionWithMediaObject:(id)arg1;
+ (id)quickImageCompositionWithMediaObject:(id)arg1;
+ (id)photoPickerCompositionWithMediaObjects:(id)arg1;
+ (id)photoPickerCompositionWithMediaObject:(id)arg1;
+ (id)compositionForMessageParts:(id)arg1 preserveSubject:(_Bool)arg2;
+ (id)savedCompositionForGUID:(id)arg1;
+ (void)deleteCompositionWithGUID:(id)arg1;
@property(copy, nonatomic) NSAttributedString *subject; // @synthesize subject=_subject;
@property(copy, nonatomic) NSAttributedString *text; // @synthesize text=_text;
@property(readonly, nonatomic, getter=isSaveable) _Bool saveable;
@property(readonly, nonatomic, getter=isSendAnimated) _Bool sendAnimated;
- (id)compositionByAppendingComposition:(id)arg1;
- (id)compositionByAppendingText:(id)arg1;
@property(readonly, nonatomic) _Bool hasNonwhiteSpaceContent;
@property(readonly, nonatomic) _Bool hasContent;
- (id)initWithText:(id)arg1 subject:(id)arg2;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
@property(readonly, retain, nonatomic) NSArray *pasteboardItems;
@property(readonly, nonatomic, getter=isTextOnly) _Bool textOnly;
@property(readonly, retain, nonatomic) NSArray *mediaObjects;
- (id)compositionByReplacingMediaObject:(id)arg1 withMediaObject:(id)arg2;
- (id)compositionByAppendingMediaObjects:(id)arg1;
- (id)compositionByAppendingMediaObject:(id)arg1;
@property(readonly, nonatomic, getter=isExpirableComposition) _Bool expirableComposition;
- (id)messageWithGUID:(id)arg1;
- (id)superFormatText:(id *)arg1;
- (id)superFormatSubject;
- (void)saveCompositionWithGUID:(id)arg1;

@end

@interface CKContactAlertView : UIView
{
    NSString *_contactDescription;
    UIImage *_image;
    UIImageView *_contactImageView;
    UILabel *_contactLabel;
}

@property(retain, nonatomic) UILabel *contactLabel; // @synthesize contactLabel=_contactLabel;
@property(retain, nonatomic) UIImageView *contactImageView; // @synthesize contactImageView=_contactImageView;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(retain, nonatomic) NSString *contactDescription; // @synthesize contactDescription=_contactDescription;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CKContactBalloonView : CKColoredBalloonView
{
    CKMediaObject *_mediaObject;
    UIImageView *_chevron;
    UIImageView *_contactImageView;
    UILabel *_nameLabel;
    UILabel *_organizationLabel;
}

@property(retain, nonatomic) UILabel *organizationLabel; // @synthesize organizationLabel=_organizationLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) UIImageView *contactImageView; // @synthesize contactImageView=_contactImageView;
@property(retain, nonatomic) UIImageView *chevron; // @synthesize chevron=_chevron;
@property(retain, nonatomic) CKMediaObject *mediaObject; // @synthesize mediaObject=_mediaObject;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (void)prepareForDisplay;
- (void)prepareForReuse;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)description;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;
- (void)configureForMessagePart:(id)arg1;

@end

@interface CKContactMediaObject : CKCardMediaObject
{
    ABVCardRecord *_vCard;
    UIImage *_vCardImage;
}

+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
@property(retain, nonatomic) UIImage *vCardImage; // @synthesize vCardImage=_vCardImage;
@property(retain, nonatomic) ABVCardRecord *vCard; // @synthesize vCard=_vCard;
- (id)vCardImageOfSize:(struct CGSize)arg1;
- (id)generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (struct CGSize)bbSize;
- (id)subtitle;
- (id)icon;
- (id)title;
- (Class)coloredBalloonViewClass;
- (int)mediaType;
- (void)dealloc;

@end

@interface CKContactsSearchManager : NSObject <MFContactsSearchConsumer>
{
    _Bool _suppressGroupSuggestions;
    id <CKContactsSearchManagerDelegate> _delegate;
    NSArray *_enteredRecipients;
    MFContactsSearchManager *_searchManager;
    MFContactsSearchResultsModel *_searchResultsModel;
    unsigned long long _pendingSearchTypes;
    NSNumber *_currentSearchTaskID;
    NSString *_searchText;
    NSArray *_conversationCache;
    NSMutableDictionary *_recentsDateMap;
}

@property(retain, nonatomic) NSMutableDictionary *recentsDateMap; // @synthesize recentsDateMap=_recentsDateMap;
@property(copy, nonatomic) NSArray *conversationCache; // @synthesize conversationCache=_conversationCache;
@property(retain, nonatomic) NSString *searchText; // @synthesize searchText=_searchText;
@property(retain, nonatomic) NSNumber *currentSearchTaskID; // @synthesize currentSearchTaskID=_currentSearchTaskID;
@property(nonatomic) unsigned long long pendingSearchTypes; // @synthesize pendingSearchTypes=_pendingSearchTypes;
@property(retain, nonatomic) MFContactsSearchResultsModel *searchResultsModel; // @synthesize searchResultsModel=_searchResultsModel;
@property(retain, nonatomic) MFContactsSearchManager *searchManager; // @synthesize searchManager=_searchManager;
@property(nonatomic) _Bool suppressGroupSuggestions; // @synthesize suppressGroupSuggestions=_suppressGroupSuggestions;
@property(retain, nonatomic) NSArray *enteredRecipients; // @synthesize enteredRecipients=_enteredRecipients;
@property(nonatomic) id <CKContactsSearchManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(id)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(id)arg1 type:(unsigned long long)arg2 taskID:(id)arg3;
- (void)_sortSearchResultsWithCoreRecentsResults:(id)arg1 namedSearchResults:(id)arg2;
- (void)_generateConversationCache;
- (void)chatStateChanged:(id)arg1;
- (void)cancelSearch;
- (void)searchWithText:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKConversation : NSObject
{
    NSArray *_recipients;
    NSString *_name;
    IMChat *_chat;
    unsigned int _limitToLoad;
    struct {
        unsigned int ignoringTypingUpdates:1;
    } _conversationFlags;
    _Bool _needsReload;
    NSArray *_pendingHandles;
    UIImage *_thumbnailImage;
    NSAttributedString *_groupName;
}

+ (id)newPendingConversation;
+ (double)_iMessage_maxTrimDurationForMediaType:(int)arg1;
+ (unsigned long long)_iMessage_maxTransferFileSizeForWiFi:(_Bool)arg1;
+ (id)_iMessage_localizedErrorForReason:(long long)arg1;
+ (_Bool)_iMessage_canSendComposition:(id)arg1 error:(id *)arg2;
+ (_Bool)_iMessage_canSendMessageWithMediaObjectTypes:(int *)arg1;
+ (_Bool)_iMessage_canSendMessageWithMediaObjectTypes:(int *)arg1 errorCode:(long long *)arg2;
+ (long long)_iMessage_maxAttachmentCount;
+ (_Bool)_iMessage_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
+ (_Bool)_sms_mediaObjectPassesDurationCheck:(id)arg1;
+ (double)_sms_maxTrimDurationForMediaType:(int)arg1;
+ (id)_sms_localizedErrorForReason:(long long)arg1;
+ (_Bool)_sms_canSendComposition:(id)arg1 error:(id *)arg2;
+ (_Bool)_sms_canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
+ (_Bool)_sms_canSendMessageWithMediaObjectTypes:(int *)arg1;
+ (_Bool)_sms_canSendMessageWithMediaObjectTypes:(int *)arg1 errorCode:(long long *)arg2;
+ (long long)_sms_maxAttachmentCount;
+ (_Bool)_sms_mediaObjectPassesRestriction:(id)arg1;
@property(readonly, retain, nonatomic) NSAttributedString *groupName; // @synthesize groupName=_groupName;
@property(retain, nonatomic) NSArray *recipients; // @synthesize recipients=_recipients;
@property(retain, nonatomic) UIImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(readonly, nonatomic) _Bool needsReload; // @synthesize needsReload=_needsReload;
@property(nonatomic) unsigned int limitToLoad; // @synthesize limitToLoad=_limitToLoad;
@property(retain, nonatomic) IMChat *chat; // @synthesize chat=_chat;
@property(copy, nonatomic) NSArray *pendingHandles; // @synthesize pendingHandles=_pendingHandles;
- (id)copyForPendingConversation;
- (id)displayNameForMediaObjects:(id)arg1 subject:(id)arg2;
- (id)_headerTitleForPendingMediaObjects:(id)arg1 subject:(id)arg2 onService:(id)arg3;
- (id)_headerTitleForService:(id)arg1;
- (id)_nameForHandle:(id)arg1;
@property(readonly, retain, nonatomic) NSString *serviceDisplayName;
- (BOOL)outgoingBubbleColor;
@property(readonly, nonatomic) BOOL buttonColor;
@property(readonly, retain, nonatomic) NSString *previewText;
@property(nonatomic) NSString *displayName;
@property(readonly, nonatomic) _Bool hasDisplayName;
@property(readonly, retain, nonatomic) NSString *name; // @dynamic name;
@property(readonly, nonatomic) unsigned long long disclosureAtomStyle; // @dynamic disclosureAtomStyle;
@property(readonly, nonatomic) _Bool shouldShowCharacterCount;
- (void)_clearTypingIndicatorsIfNecessary;
- (void)updateUserActivityWithComposition:(id)arg1;
@property(nonatomic) _Bool localUserIsRecording;
@property(nonatomic) _Bool localUserIsTyping;
- (_Bool)_chatSupportsTypingIndicators;
- (void)sendMessage:(id)arg1 newComposition:(_Bool)arg2;
- (void)sendMessage:(id)arg1 onService:(id)arg2 newComposition:(_Bool)arg3;
- (id)messageWithComposition:(id)arg1;
- (void)_recordRecentContact;
- (_Bool)_chatHasValidAccount:(id)arg1 forService:(id)arg2;
- (_Bool)_accountIsOperational:(id)arg1 forService:(id)arg2;
- (double)maxTrimDurationForMediaType:(int)arg1;
- (_Bool)canSendToRecipients:(id)arg1 alertIfUnable:(_Bool)arg2;
- (_Bool)canSendComposition:(id)arg1 error:(id *)arg2;
- (_Bool)canAcceptMediaObjectType:(int)arg1 givenMediaObjects:(id)arg2;
@property(readonly, nonatomic, getter=isPending) _Bool pending;
@property(readonly, copy, nonatomic) NSArray *recipientStrings;
@property(readonly, copy, nonatomic) NSArray *pendingEntities; // @dynamic pendingEntities;
- (void)setPendingComposeRecipients:(id)arg1;
- (long long)compareBySequenceNumberAndDateDescending:(id)arg1;
- (id)shortDescription;
- (id)description;
- (_Bool)isPlaceholder;
- (void)markAllMessagesAsRead;
- (void)enumerateMessagesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)setLoadedMessageCount:(unsigned long long)arg1;
- (void)loadMoreMessages;
- (void)loadAllMessages;
- (void)deleteAllMessagesAndRemoveGroup;
- (void)deleteAllMessages;
- (void)_deleteAllMessagesAndRemoveGroup:(_Bool)arg1;
- (id)date;
@property(readonly, nonatomic) _Bool isToEmailAddress;
@property(readonly, nonatomic) unsigned long long recipientCount;
- (id)uniqueIdentifier;
@property(readonly, retain, nonatomic) NSString *groupID; // @dynamic groupID;
- (_Bool)noAvailableServices;
- (BOOL)sendButtonColor;
- (void)_handlePreferredServiceChangedNotification:(id)arg1;
- (_Bool)_handleIsForThisConversation:(id)arg1;
@property(readonly, retain, nonatomic) IMService *sendingService;
- (void)refreshServiceForSending;
- (void)removeRecipientHandles:(id)arg1;
- (void)addRecipientHandles:(id)arg1;
- (void)setMutedUntilDate:(id)arg1;
- (void)unmute;
@property(readonly, nonatomic, getter=isMuted) _Bool muted;
- (_Bool)canInsertMoreRecipients;
- (long long)maximumRecipientsForSendingService;
@property(readonly, nonatomic) _Bool supportsMutatingGroupMembers;
@property(readonly, nonatomic, getter=hasLeft) _Bool left;
@property(readonly, nonatomic) _Bool canLeave;
@property(readonly, nonatomic, getter=isGroupConversation) _Bool groupConversation;
@property(nonatomic) _Bool forceMMS; // @dynamic forceMMS;
@property(nonatomic, getter=isIgnoringTypingUpdates) _Bool ignoringTypingUpdates; // @dynamic ignoringTypingUpdates;
- (_Bool)isDowngraded;
@property(retain, nonatomic) NSString *rememberedKeyboard;
@property(retain, nonatomic) CKComposition *unsentComposition; // @dynamic unsentComposition;
- (void)_handleChatJoinStateDidChange:(id)arg1;
- (void)_handleChatParticipantsDidChange:(id)arg1;
- (void)_chatItemsDidChange:(id)arg1;
- (void)acceptTransfer:(id)arg1;
@property(readonly, retain, nonatomic) CKEntity *recipient; // @dynamic recipient;
@property(readonly, retain, nonatomic) NSArray *handles; // @dynamic handles;
@property(readonly, nonatomic) _Bool hasUnreadMessages; // @dynamic hasUnreadMessages;
@property(readonly, nonatomic) unsigned long long unreadCount; // @dynamic unreadCount;
- (void)reloadIfNeeded;
- (void)setNeedsReload;
- (void)resetCaches;
- (void)resetNameCaches;
- (void)dealloc;
- (id)initWithChat:(id)arg1;
- (id)init;
- (_Bool)_iMessage_canSendToRecipients:(id)arg1 alertIfUnable:(_Bool)arg2;
- (_Bool)_iMessage_supportsCharacterCountForAddresses:(id)arg1;
- (_Bool)_sms_canSendToRecipients:(id)arg1 alertIfUnable:(_Bool)arg2;
- (_Bool)_sms_supportsCharacterCountForAddresses:(id)arg1;
- (_Bool)_sms_willSendMMSByDefaultForAddresses:(id)arg1;
- (void)_postThumbnailChanged;
- (id)thumbnail;
- (void)regenerateThumbnail;
- (id)__generateThumbnailOfDiameter:(double)arg1 withRecordIDs:(id)arg2 recipientCount:(unsigned long long)arg3;
- (id)_messageOrderedABRecordIDsForChatItems:(id)arg1;
- (id)__generateThumbnailOfDiameter:(double)arg1 withRecipientImage:(id)arg2 andOtherRecipient:(id)arg3;

@end

@interface CKConversationList : NSObject
{
    NSMutableArray *_trackedConversations;
    _Bool _loadingConversations;
    _Bool _loadedConversations;
    CKConversation *_pendingConversation;
}

+ (id)conversationThumbnailCache;
+ (void)_handleRegistryDidLoadNotification:(id)arg1;
+ (void)initialize;
+ (id)sharedConversationList;
@property(readonly, nonatomic) _Bool loadingConversations; // @synthesize loadingConversations=_loadingConversations;
@property(retain, nonatomic) CKConversation *pendingConversation; // @synthesize pendingConversation=_pendingConversation;
- (void)_handleMemoryWarning:(id)arg1;
- (id)pendingConversationCreatingIfNecessary;
- (void)_abChanged:(id)arg1;
- (void)deleteConversationsAtIndexes:(id)arg1;
- (void)deleteConversation:(id)arg1;
- (id)unreadLastMessages;
- (long long)unreadFilteredConversationCountIgnoringMessages:(id)arg1;
- (long long)unreadCount;
- (void)unpendConversation;
- (void)beginTrackingConversation:(id)arg1 forChat:(id)arg2;
- (void)_postConversationListChangedNotification;
- (void)resort;
- (id)conversations;
- (_Bool)hasActiveConversations;
- (id)activeConversations;
- (id)firstUnreadFilteredConversationIgnoringMessages:(id)arg1;
- (_Bool)_shouldFilterForParticipants:(id)arg1;
- (void)setNeedsReload;
- (void)resetCaches;
- (void)resetCachesAndRegenerateThumbnails;
- (id)conversationForExistingChat:(id)arg1;
- (id)conversationForHandles:(id)arg1 create:(_Bool)arg2;
- (id)conversationForHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(_Bool)arg3 create:(_Bool)arg4;
- (id)_copyEntitiesForAddressStrings:(id)arg1;
- (void)_handleRegistryWillUnregisterChatNotification:(id)arg1;
- (void)_handleRegistryDidRegisterChatNotification:(id)arg1;
- (void)_beginTrackingAllExistingChatsIfNeeded;
- (void)stopTrackingConversation:(id)arg1;
- (id)conversationForExistingChatWithGUID:(id)arg1;
- (id)conversationForExistingChatWithGroupID:(id)arg1;
- (id)_conversationForChat:(id)arg1;
- (id)_beginTrackingConversationWithChat:(id)arg1;
- (id)_alreadyTrackedConversationForChat:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface CKConversationListCell : UITableViewCell
{
    UIDateLabel *_dateLabel;
    UILabel *_summaryLabel;
    UIImageView *_unreadIndicatorImageView;
    UIImageView *_chevronImageView;
    UILabel *_fromLabel;
    _Bool _isPlaceholder;
    UIImageView *_recipientPhotoView;
    NSString *_searchSummaryText;
    NSString *_searchMessageGUID;
    NSDate *_searchMessageDate;
}

+ (double)cellHeight;
+ (id)identifier;
@property(copy, nonatomic) NSString *searchSummaryText; // @synthesize searchSummaryText=_searchSummaryText;
@property(retain, nonatomic) NSDate *searchMessageDate; // @synthesize searchMessageDate=_searchMessageDate;
@property(copy, nonatomic) NSString *searchMessageGUID; // @synthesize searchMessageGUID=_searchMessageGUID;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (void)_calculateLayoutFrames;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateWithSearchResult:(id)arg1;
- (void)_conversationThumbnailChanged:(id)arg1;
- (void)_setupThumbnailForConversation:(id)arg1;
- (void)updateContentsForConversation:(id)arg1;
- (_Bool)showingEditControl;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKConversationListCellLayout : NSObject
{
    _Bool _invalid;
    double _summaryLabelCapFrameYOrigin;
    struct CGRect _summaryFrame;
    struct CGRect _dateFrame;
    struct CGRect _senderFrame;
    struct CGRect _chevronFrame;
    struct CGRect _unreadFrame;
}

+ (id)sharedInstance;
@property(nonatomic) double summaryLabelCapFrameYOrigin; // @synthesize summaryLabelCapFrameYOrigin=_summaryLabelCapFrameYOrigin;
@property(nonatomic) struct CGRect unreadFrame; // @synthesize unreadFrame=_unreadFrame;
@property(nonatomic) struct CGRect chevronFrame; // @synthesize chevronFrame=_chevronFrame;
@property(nonatomic) struct CGRect senderFrame; // @synthesize senderFrame=_senderFrame;
@property(nonatomic) struct CGRect dateFrame; // @synthesize dateFrame=_dateFrame;
@property(nonatomic) struct CGRect summaryFrame; // @synthesize summaryFrame=_summaryFrame;
@property(nonatomic) _Bool invalid; // @synthesize invalid=_invalid;
- (void)invalidate;
- (id)init;

@end

@interface CKConversationListController : UIViewController <UITableViewDataSource, UITableViewDelegate, CKConversationSearcherDelegate, UIActionSheetDelegate>
{
    UITableView *_table;
    NSIndexPath *_previouslySelectedIndexPath;
    UIToolbar *_buttonBar;
    unsigned long long _willBeMarkedReadCount;
    unsigned int _isVisible:1;
    unsigned int _willRotate:1;
    CKMessagesController *_messagesController;
    CKConversationList *_conversationList;
    CKConversationSearcher *_searcher;
    _Bool _isInitialLoad;
    _Bool _isShowingSwipeDeleteConfirmation;
    UIBarButtonItem *_currentEditButtonItem;
    CKScheduledUpdater *_updater;
}

@property(retain, nonatomic) CKScheduledUpdater *updater; // @synthesize updater=_updater;
@property(nonatomic) _Bool isShowingSwipeDeleteConfirmation; // @synthesize isShowingSwipeDeleteConfirmation=_isShowingSwipeDeleteConfirmation;
@property(retain, nonatomic) UIBarButtonItem *currentEditButtonItem; // @synthesize currentEditButtonItem=_currentEditButtonItem;
@property(retain, nonatomic) NSIndexPath *previouslySelectedIndexPath; // @synthesize previouslySelectedIndexPath=_previouslySelectedIndexPath;
@property(nonatomic) CKMessagesController *messagesController; // @synthesize messagesController=_messagesController;
@property(nonatomic) CKConversationList *conversationList; // @synthesize conversationList=_conversationList;
@property(readonly, nonatomic) _Bool shouldShowPendingCell;
- (void)selectConversationClosestToDeletedIndex:(unsigned long long)arg1;
- (void)selectDefaultConversationAnimated:(_Bool)arg1;
- (void)_selectConversationAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (unsigned long long)_indexOfDefaultConversation;
- (unsigned long long)_indexOfConverationClosestToDeletedIndex:(unsigned long long)arg1;
- (void)_keyboardWillShowOrHide:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)searcherWillBeginEditing:(id)arg1;
- (void)searcherDidEndSearch:(id)arg1;
- (void)searcherWillEndSearch:(id)arg1;
- (void)searcher:(id)arg1 willHideSearchResultsTableView:(id)arg2;
- (void)searcher:(id)arg1 didShowSearchResultsTableView:(id)arg2;
- (void)searcher:(id)arg1 userDidSelectChatGUID:(id)arg2 messageGUID:(id)arg3;
- (id)searcher:(id)arg1 conversationForChatGUID:(id)arg2;
- (id)searcherContentsController:(id)arg1;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)markAsReadButtonTappedForIndexPath:(id)arg1;
- (void)markAsReadButtonTapped:(id)arg1;
- (void)deleteButtonTappedForIndexPath:(id)arg1;
- (void)batchDeleteButtonTapped:(id)arg1;
- (void)tableView:(id)arg1 didEndEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willBeginEditingRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)heightForHeaderInTableView:(id)arg1;
- (id)viewForHeaderInTableView:(id)arg1;
- (void)composeButtonClicked:(id)arg1;
- (void)_updateToolbarItems;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (id)inputAccessoryView;
- (void)_getRotationContentSettings:(CDStruct_ebaa735e *)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)parentControllerDidResume:(_Bool)arg1 animating:(_Bool)arg2;
- (void)prepareForResume;
- (void)prepareForSuspend;
- (void)applicationWillSuspend;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)loadView;
- (void)scrollToTop;
- (void)hideSearchUI;
- (void)updateConversationList;
- (void)endHoldingConversationListUpdatesForKey:(id)arg1;
- (void)beginHoldingConversationListUpdatesForKey:(id)arg1;
- (void)significantTimeChange;
- (void)noteUnreadCountsChanged;
- (void)conversationWillBeMarkedRead:(id)arg1;
- (void)updateConversationSelection;
- (void)updateCurrentEditButton;
- (void)editButtonTapped:(id)arg1;
- (void)updateNavigationItems;
- (void)updateTitle;
- (_Bool)_shouldKeepSelection;
- (void)_groupsChanged:(id)arg1;
- (void)_conversationMessageWasSent:(id)arg1;
- (void)_conversationListDidChange:(id)arg1;
- (void)_conversationListDidFinishLoadingConversations:(id)arg1;
- (void)_chatItemsDidChange:(id)arg1;
- (void)_conversationMuteDidChangeNotification:(id)arg1;
- (void)_conversationDisplayNameChangedNotification:(id)arg1;
- (void)_chatParticipantsChangedNotification:(id)arg1;
- (void)_chatUnreadCountDidChange:(id)arg1;
- (void)accessibilityLargeTextDidChange;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKConversationListNewMessageCell : UITableViewCell
{
}

+ (id)identifier;
- (void)updateFontSize;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKConversationSearcher : NSObject <UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate, UISearchDisplayDelegate>
{
    id <CKConversationSearcherDelegate> _delegate;
    NSMutableArray *_sortedSearchResults;
    UISearchDisplayController *_searchController;
    UISearchBar *_searchBar;
    CKSpotlightQuery *_currentQuery;
    _Bool _shouldDisplayNoResults;
    _Bool _active;
    _Bool _showingSearchResults;
}

@property(readonly, nonatomic, getter=isShowingSearchResults) _Bool showingSearchResults; // @synthesize showingSearchResults=_showingSearchResults;
@property(readonly, nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
- (id)searchBar;
@property(readonly, nonatomic) UISearchDisplayController *searchController;
- (void)setDelegate:(id)arg1;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (void)searchDisplayController:(id)arg1 didHideSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 willHideSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 didShowSearchResultsTableView:(id)arg2;
- (void)searchDisplayController:(id)arg1 willShowSearchResultsTableView:(id)arg2;
- (void)searchDisplayControllerDidEndSearch:(id)arg1;
- (void)searchDisplayControllerWillEndSearch:(id)arg1;
- (void)searchDisplayControllerDidBeginSearch:(id)arg1;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (_Bool)searchBarShouldBeginEditing:(id)arg1;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)_cancel;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDBFileTransfer : NSObject <CKFileTransfer>
{
    NSString *_guid;
    NSURL *_fileURL;
    NSDictionary *_transcoderUserInfo;
    NSString *_filename;
    long long _transferState;
}

@property(nonatomic) long long transferState; // @synthesize transferState=_transferState;
@property(copy, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(readonly, copy, nonatomic) NSDictionary *transcoderUserInfo; // @synthesize transcoderUserInfo=_transcoderUserInfo;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
- (void)mediaObjectRemoved;
- (void)mediaObjectAdded;
@property(readonly, nonatomic, getter=isRestoring) _Bool restoring;
@property(readonly, nonatomic, getter=isDownloading) _Bool downloading;
@property(readonly, nonatomic, getter=isDownloadable) _Bool downloadable;
@property(readonly, nonatomic, getter=isFileDataReady) _Bool fileDataReady;
@property(readonly, nonatomic, getter=isFileURLFinalized) _Bool fileURLFinalized;
@property(readonly, nonatomic) unsigned long long totalBytes;
@property(readonly, nonatomic) unsigned long long currentBytes;
@property(readonly, copy, nonatomic) NSError *error;
- (id)initWithTransferGUID:(id)arg1 imMessage:(id)arg2;
- (id)initWithFileURL:(id)arg1 transcoderUserInfo:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;

// Remaining properties
@property(retain, nonatomic) IMMessage *IMMessage; // @dynamic IMMessage;
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKDBMessage : NSObject
{
    NSString *_text;
    NSString *_subject;
    NSString *_address;
    NSString *_groupID;
    NSString *_guid;
    NSString *_madridRoomname;
    NSString *_madridService;
    NSString *_madridAccount;
    NSString *_madridAccountGUID;
    NSString *_madridChatGUID;
    NSString *_madridChatIdentifier;
    _Bool _isMadrid;
    _Bool _hasBeenRead;
    _Bool _isOutgoing;
    _Bool _isVisibleByDefault;
    _Bool _isAudioMessage;
    long long _madridType;
    long long _identifier;
    NSDate *_date;
    NSArray *_recipients;
    NSString *_plainBody;
    NSAttributedString *_madridAttributedBody;
    NSMutableArray *_mediaObjects;
    NSString *_voicemailString;
    NSString *_madridAccountLogin;
}

@property(readonly, retain, nonatomic) NSArray *mediaObjects; // @synthesize mediaObjects=_mediaObjects;
@property(readonly, retain, nonatomic) NSString *madridChatIdentifier; // @synthesize madridChatIdentifier=_madridChatIdentifier;
@property(readonly, nonatomic) _Bool isVisibleByDefault; // @synthesize isVisibleByDefault=_isVisibleByDefault;
@property(readonly, nonatomic) NSString *madridChatGUID; // @synthesize madridChatGUID=_madridChatGUID;
@property(nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(readonly, retain, nonatomic) NSAttributedString *madridAttributedBody; // @synthesize madridAttributedBody=_madridAttributedBody;
@property(readonly, retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic) long long madridType; // @synthesize madridType=_madridType;
@property(readonly, nonatomic) _Bool isOutgoing; // @synthesize isOutgoing=_isOutgoing;
@property(readonly, nonatomic) _Bool isAudioMessage; // @synthesize isAudioMessage=_isAudioMessage;
@property(readonly, nonatomic) _Bool hasBeenRead; // @synthesize hasBeenRead=_hasBeenRead;
@property(readonly, nonatomic) _Bool isMadrid; // @synthesize isMadrid=_isMadrid;
@property(readonly, retain, nonatomic) NSString *madridAccountGUID; // @synthesize madridAccountGUID=_madridAccountGUID;
@property(readonly, retain, nonatomic) NSString *madridAccountLogin; // @synthesize madridAccountLogin=_madridAccountLogin;
@property(readonly, retain, nonatomic) NSString *madridService; // @synthesize madridService=_madridService;
@property(readonly, retain, nonatomic) NSString *madridRoomname; // @synthesize madridRoomname=_madridRoomname;
@property(readonly, retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, retain, nonatomic) NSString *address; // @synthesize address=_address;
@property(readonly, retain, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(readonly, retain, nonatomic) NSString *text; // @synthesize text=_text;
- (id)attachmentText:(_Bool)arg1;
- (id)previewText;
- (id)alertImage;
- (_Bool)senderIsVoicemail;
- (id)voicemailString;
@property(readonly, retain, nonatomic) NSString *plainBody;
@property(readonly, copy, nonatomic) NSArray *recipients; // @dynamic recipients;
@property(readonly, retain, nonatomic) NSString *groupID; // @dynamic groupID;
@property(readonly, retain, nonatomic) NSString *formattedAddress; // @dynamic formattedAddress;
@property(readonly, copy, nonatomic) NSString *attachmentText;
@property(readonly, nonatomic) _Bool hasAttachments; // @dynamic hasAttachments;
- (id)description;
- (void)dealloc;
- (id)initWithRecordID:(long long)arg1;
- (id)initWithMadridMessageGUID:(id)arg1;

@end

@interface CKStampChatItem : CKChatItem
{
}

- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (_Bool)displayDuringSend;
- (Class)cellClass;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets)contentInsets;

@end

@interface CKDateChatItem : CKStampChatItem
{
}

+ (id)thePastDateFormatter;
+ (id)thisYearDateFormatter;
+ (id)thisWeekRelativeDateFormatter;
- (id)now;
@property(readonly, retain, nonatomic) NSDate *date;
- (id)loadTranscriptText;

@end

@interface CKDismissView : UIView
{
    id <CKDismissViewDelegate> _delegate;
    NSArray *_passthroughViews;
}

@property(copy, nonatomic) NSArray *passthroughViews; // @synthesize passthroughViews=_passthroughViews;
@property(nonatomic) id <CKDismissViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;

@end

@interface CKDispatchCache : NSObject <IMSystemMonitorListener>
{
    NSCache *_objectCache;
    NSCountedSet *_pendingKeys;
    NSMutableDictionary *_pendingGroups;
    CKDispatchQueue *_dispatchQueue;
    NSObject<OS_dispatch_queue> *_lockQueue;
    long long _dispatchPriority;
}

@property(nonatomic) long long dispatchPriority; // @synthesize dispatchPriority=_dispatchPriority;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *lockQueue; // @synthesize lockQueue=_lockQueue;
@property(retain, nonatomic) CKDispatchQueue *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(retain, nonatomic) NSMutableDictionary *pendingGroups; // @synthesize pendingGroups=_pendingGroups;
@property(retain, nonatomic) NSCountedSet *pendingKeys; // @synthesize pendingKeys=_pendingKeys;
@property(retain, nonatomic) NSCache *objectCache; // @synthesize objectCache=_objectCache;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidSuspend;
- (void)clearQueue;
- (void)resume;
- (_Bool)waitOnGenerationForKey:(id)arg1;
- (void)endGeneratingForKey:(id)arg1;
- (void)_endGeneratingForKeyUnlocked:(id)arg1;
- (void)beginGeneratingForKey:(id)arg1;
- (void)_beginGeneratingForKeyUnlocked:(id)arg1;
- (_Bool)isGeneratingForKey:(id)arg1;
- (void)enqueueGenerationBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2 withPriority:(long long)arg3 forKey:(id)arg4;
- (void)enqueueBlock:(CDUnknownBlockType)arg1 withPriority:(long long)arg2;
- (void)setCachedObject:(id)arg1 forKey:(id)arg2;
- (id)cachedObjectForKey:(id)arg1;
- (void)dealloc;
- (id)initWithCacheLimit:(unsigned long long)arg1 dispatchPriority:(long long)arg2;
- (id)init;

@end

@interface CKDispatchQueue : NSObject
{
    unsigned long long _fifo;
    _Bool _suspended;
    _Bool _cancelled;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSObject<OS_dispatch_queue> *_lockQueue;
    struct __CFBinaryHeap *_heap;
    NSMutableDictionary *_dispatchQueueBlocks;
}

+ (id)concurrentQueueWithDispatchPriority:(long long)arg1;
+ (id)serialQueueWithDispatchPriority:(long long)arg1;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(retain, nonatomic) NSMutableDictionary *dispatchQueueBlocks; // @synthesize dispatchQueueBlocks=_dispatchQueueBlocks;
@property(retain, nonatomic) struct __CFBinaryHeap *heap; // @synthesize heap=_heap;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *lockQueue; // @synthesize lockQueue=_lockQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(nonatomic, getter=isSuspended) _Bool suspended; // @synthesize suspended=_suspended;
- (void)cancelOustandingBlocks;
- (void)removeOutstandingBlockForKey:(id)arg1;
- (_Bool)containsOutstandingBlockForKey:(id)arg1;
- (id)allKeysOfOutstandingBlocks;
- (long long)queuePriorityOfOutstandingBlockForKey:(id)arg1;
- (void)setQueuePriority:(long long)arg1 ofOutstandingBlockForKey:(id)arg2;
- (void)addBlock:(CDUnknownBlockType)arg1 withQueuePriority:(long long)arg2 forKey:(id)arg3;
- (void)addBlock:(CDUnknownBlockType)arg1 withQueuePriority:(long long)arg2;
- (void)addBlock:(CDUnknownBlockType)arg1;
- (id)_initWithDispatchAttr:(id)arg1 dispatchPriority:(long long)arg2;
- (id)init;
- (void)dealloc;

@end

@interface CKDraftManager : NSObject
{
    NSMutableDictionary *_cachedDrafts;
    NSMutableSet *_dirtyDraftIDs;
    NSArray *_pendingRecipients;
}

+ (id)sharedInstance;
- (id)_pendingRecipients;
- (void)_setPendingRecipients:(id)arg1;
- (void)_setDraft:(id)arg1 forKey:(id)arg2;
- (id)_draftForKey:(id)arg1;
- (id)_pendingRecipientsURL;
- (void)save:(_Bool)arg1;
- (void)clearDraftForPendingConversation;
- (void)setDraftForPendingConversation:(id)arg1 withRecipients:(id)arg2;
- (id)draftForPendingConversationWithRecipients:(id *)arg1;
- (void)setDraft:(id)arg1 forConversation:(id)arg2;
- (id)draftForConversation:(id)arg1;
- (void)_clearDraftForConversation:(id)arg1;
- (void)dealloc;

@end

@interface CKEditableCollectionView : UICollectionView
{
    _Bool _editing;
    struct UIEdgeInsets _marginInsets;
}

@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
@property(nonatomic) struct UIEdgeInsets marginInsets; // @synthesize marginInsets=_marginInsets;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (id)dequeueReusableCellWithReuseIdentifier:(id)arg1 forIndexPath:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

@end

@interface CKEditableCollectionViewCell : UICollectionViewCell
{
    _Bool _editing;
    UIImageView *_checkmark;
    struct CGRect _contentAlignmentRect;
    struct UIEdgeInsets _contentInsets;
    struct UIEdgeInsets _marginInsets;
}

@property(retain, nonatomic) UIImageView *checkmark; // @synthesize checkmark=_checkmark;
@property(nonatomic, getter=isEditing) _Bool editing; // @synthesize editing=_editing;
@property(nonatomic) struct UIEdgeInsets marginInsets; // @synthesize marginInsets=_marginInsets;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic) struct CGRect contentAlignmentRect; // @synthesize contentAlignmentRect=_contentAlignmentRect;
- (void)updateCheckmarkImage;
@property(readonly, nonatomic) struct UIEdgeInsets contentAlignmentInsets;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)layoutSubviews;
- (id)description;
- (void)dealloc;

@end

@interface CKMultilineStampChatItem : CKStampChatItem
{
}

- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (Class)cellClass;

@end

@interface CKEmoteMessageChatItem : CKMultilineStampChatItem
{
}

- (id)loadTranscriptText;

@end

@interface CKEntity : NSObject
{
    IMHandle *_handle;
}

+ (id)copyEntityForAddressString:(id)arg1;
+ (id)_copyEntityForAddressString:(id)arg1 onAccount:(id)arg2;
@property(retain, nonatomic) IMHandle *handle; // @synthesize handle=_handle;
@property(readonly, retain, nonatomic) UIImage *locationShareBalloonContactImage;
@property(readonly, retain, nonatomic) UIImage *locationMapViewContactImage;
@property(readonly, retain, nonatomic) UIImage *transcriptDrawerContactImage;
@property(readonly, retain, nonatomic) UIImage *transcriptContactImage;
@property(readonly, copy, nonatomic) NSString *textVibrationIdentifier;
@property(readonly, copy, nonatomic) NSString *textToneIdentifier;
@property(readonly, copy, nonatomic) NSString *name;
@property(readonly, copy, nonatomic) NSString *fullName;
@property(readonly, copy, nonatomic) NSString *IDSCanonicalAddress;
@property(readonly, copy, nonatomic) NSString *originalAddress;
@property(readonly, copy, nonatomic) NSString *rawAddress;
@property(readonly, nonatomic) int propertyType;
@property(readonly, nonatomic) int identifier;
@property(readonly, nonatomic) void *abRecord;
@property(readonly, retain, nonatomic) IMHandle *defaultIMHandle;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithIMHandle:(id)arg1;
- (id)personViewControllerWithDelegate:(id)arg1;

@end

@interface CKFeedCollectionViewLayout : UICollectionViewLayout
{
    NSMutableArray *_sectionLayoutInfos;
    struct CGSize _contentSize;
    _Bool _shouldDisplayCaptionsBelowBatches;
    _Bool _shouldDisplaySectionHeadersBelowSections;
    _Bool _shouldFloatThumbnails;
    _Bool _shouldFloatSectionHeaders;
    _Bool _shouldFloatWithEase;
    _Bool _shouldFloatOverShortDistances;
    id <CKFeedCollectionViewLayoutDatasource> _feedDatasource;
    unsigned long long _compositeLayoutSection;
    long long _flowDirection;
    double _thumbnailSpacing;
    double _sectionHeaderBackgroundHeight;
    double _floatingBottomDecorationHeight;
    struct CGSize _sectionReferenceSize;
    struct CGSize _interTileSpacing;
    struct CGSize _noCaptionSpacing;
    struct UIEdgeInsets _captionPadding;
    struct UIEdgeInsets _floatPadding;
}

@property(nonatomic) struct UIEdgeInsets floatPadding; // @synthesize floatPadding=_floatPadding;
@property(nonatomic) double floatingBottomDecorationHeight; // @synthesize floatingBottomDecorationHeight=_floatingBottomDecorationHeight;
@property(nonatomic) _Bool shouldFloatOverShortDistances; // @synthesize shouldFloatOverShortDistances=_shouldFloatOverShortDistances;
@property(nonatomic) _Bool shouldFloatWithEase; // @synthesize shouldFloatWithEase=_shouldFloatWithEase;
@property(nonatomic) double sectionHeaderBackgroundHeight; // @synthesize sectionHeaderBackgroundHeight=_sectionHeaderBackgroundHeight;
@property(nonatomic) _Bool shouldFloatSectionHeaders; // @synthesize shouldFloatSectionHeaders=_shouldFloatSectionHeaders;
@property(nonatomic) double thumbnailSpacing; // @synthesize thumbnailSpacing=_thumbnailSpacing;
@property(nonatomic) _Bool shouldFloatThumbnails; // @synthesize shouldFloatThumbnails=_shouldFloatThumbnails;
@property(nonatomic) _Bool shouldDisplaySectionHeadersBelowSections; // @synthesize shouldDisplaySectionHeadersBelowSections=_shouldDisplaySectionHeadersBelowSections;
@property(nonatomic) _Bool shouldDisplayCaptionsBelowBatches; // @synthesize shouldDisplayCaptionsBelowBatches=_shouldDisplayCaptionsBelowBatches;
@property(nonatomic) struct CGSize noCaptionSpacing; // @synthesize noCaptionSpacing=_noCaptionSpacing;
@property(nonatomic) struct UIEdgeInsets captionPadding; // @synthesize captionPadding=_captionPadding;
@property(nonatomic) struct CGSize interTileSpacing; // @synthesize interTileSpacing=_interTileSpacing;
@property(nonatomic) struct CGSize sectionReferenceSize; // @synthesize sectionReferenceSize=_sectionReferenceSize;
@property(nonatomic) long long flowDirection; // @synthesize flowDirection=_flowDirection;
@property(nonatomic) unsigned long long compositeLayoutSection; // @synthesize compositeLayoutSection=_compositeLayoutSection;
@property(nonatomic) id <CKFeedCollectionViewLayoutDatasource> feedDatasource; // @synthesize feedDatasource=_feedDatasource;
- (void).cxx_destruct;
- (void)updateCollectionViewWithDeletedSections:(id)arg1 insertedSections:(id)arg2 updatedSections:(id)arg3;
- (void)_getSizeForHorizontalFlowDirection:(out struct CGSize *)arg1 headerSize:(out struct CGSize *)arg2 footerSize:(out struct CGSize *)arg3 fixedLayoutAttributes:(id)arg4 tileLayoutAttributes:(id)arg5 floatingLayoutAttributes:(id)arg6 type:(out long long *)arg7 forSection:(long long)arg8 isJoined:(_Bool)arg9;
- (void)_getSizeForVerticalFlowDirection:(out struct CGSize *)arg1 headerSize:(out struct CGSize *)arg2 footerSize:(out struct CGSize *)arg3 fixedLayoutAttributes:(id)arg4 tileLayoutAttributes:(id)arg5 floatingLayoutAttributes:(id)arg6 type:(out long long *)arg7 forSection:(long long)arg8 isJoined:(_Bool)arg9;
- (void)_getSize:(out struct CGSize *)arg1 headerSize:(out struct CGSize *)arg2 footerSize:(out struct CGSize *)arg3 fixedLayoutAttributes:(id)arg4 tileLayoutAttributes:(id)arg5 floatingLayoutAttributes:(id)arg6 type:(out long long *)arg7 forSection:(long long)arg8 isJoined:(_Bool)arg9;
- (void)_enumerateSectionsInRect:(struct CGRect)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)_adjustFloatingLayoutAttributes:(id)arg1 inSection:(long long)arg2;
- (void)_sectionAtIndex:(long long)arg1 sizeDidChangeFrom:(struct CGSize)arg2 to:(struct CGSize)arg3;
- (void)_updateLayoutInfoForSection:(long long)arg1 ignoreSizeChange:(_Bool)arg2;
- (void)_updateGlobalLayoutInfoWithOptions:(long long)arg1 sectionsWithUpdatedGroupIDs:(out id *)arg2;
- (id)_delegate;
- (struct CGRect)frameForTileAtIndexPath:(id)arg1;
- (id)indexPathForImageElementAtPoint:(struct CGPoint)arg1;
- (void)enumerateImageElementsInRect:(struct CGRect)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (struct CGRect)frameForSection:(long long)arg1;
- (long long)numberOfTilesOmittedInSection:(long long)arg1;
- (id)sectionsJoinedWithSection:(long long)arg1;
- (void)invalidateLayoutAndCache;
@property(readonly, nonatomic) unsigned int flowDirectionEdge;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (struct CGSize)collectionViewContentSize;
- (void)_updateSectionLayoutInfosIfNecessary;
- (void)prepareLayout;
- (id)invalidationContextForBoundsChange:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;

@end

@interface CKFeedCollectionViewSectionLayoutInfo : NSObject
{
    _Bool _hidden;
    NSArray *_fixedLayoutAttributes;
    NSArray *_tileLayoutAttributes;
    NSArray *_floatingLayoutAttributes;
    long long _sectionType;
    long long _previousVisibleSection;
    long long _nextVisibleSection;
    long long _firstJoinedSection;
    long long _lastJoinedSection;
    id _groupID;
    long long _numberOfTilesOmitted;
    struct CGPoint _origin;
    struct CGSize _size;
    struct CGSize _headerSize;
    struct CGSize _footerSize;
    struct UIEdgeInsets _margins;
}

@property(nonatomic) long long numberOfTilesOmitted; // @synthesize numberOfTilesOmitted=_numberOfTilesOmitted;
@property(retain, nonatomic) id groupID; // @synthesize groupID=_groupID;
@property(nonatomic) long long lastJoinedSection; // @synthesize lastJoinedSection=_lastJoinedSection;
@property(nonatomic) long long firstJoinedSection; // @synthesize firstJoinedSection=_firstJoinedSection;
@property(nonatomic) long long nextVisibleSection; // @synthesize nextVisibleSection=_nextVisibleSection;
@property(nonatomic) long long previousVisibleSection; // @synthesize previousVisibleSection=_previousVisibleSection;
@property(nonatomic) long long sectionType; // @synthesize sectionType=_sectionType;
@property(nonatomic, getter=isHidden) _Bool hidden; // @synthesize hidden=_hidden;
@property(retain, nonatomic) NSArray *floatingLayoutAttributes; // @synthesize floatingLayoutAttributes=_floatingLayoutAttributes;
@property(retain, nonatomic) NSArray *tileLayoutAttributes; // @synthesize tileLayoutAttributes=_tileLayoutAttributes;
@property(retain, nonatomic) NSArray *fixedLayoutAttributes; // @synthesize fixedLayoutAttributes=_fixedLayoutAttributes;
@property(nonatomic) struct UIEdgeInsets margins; // @synthesize margins=_margins;
@property(nonatomic) struct CGSize footerSize; // @synthesize footerSize=_footerSize;
@property(nonatomic) struct CGSize headerSize; // @synthesize headerSize=_headerSize;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) struct CGPoint origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGRect frame;
- (id)init;

@end

@interface CKGradientReferenceView : UIView <CKGradientReferenceView>
{
    struct CGRect _gradientFrame;
}

@property(nonatomic) struct CGRect gradientFrame; // @synthesize gradientFrame=_gradientFrame;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKGradientView : UIView
{
    UIView<CKGradientReferenceView> *_referenceView;
    NSArray *_colors;
    UIView *_effectView;
    struct CGRect _gradientFrame;
}

+ (id)gradientViews;
@property(nonatomic) struct CGRect gradientFrame; // @synthesize gradientFrame=_gradientFrame;
@property(retain, nonatomic) UIView *effectView; // @synthesize effectView=_effectView;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property(nonatomic) UIView<CKGradientReferenceView> *referenceView; // @synthesize referenceView=_referenceView;
- (id)gradient;
- (void)updateGradientImage;
- (void)updateAnimation;
- (void)_removeAllAnimations:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)description;
- (void)dealloc;

@end

@interface CKGroupActionChatItem : CKMultilineStampChatItem
{
}

- (id)sender;
- (long long)actionType;
- (id)loadTranscriptText;

@end

@interface CKGroupRecipientSelectionController : CKRecipientSelectionController <CKRecipientSelectionControllerDelegate>
{
    UIBarButtonItem *_doneButton;
}

@property(retain, nonatomic) UIBarButtonItem *doneButton; // @synthesize doneButton=_doneButton;
- (void)_frecencySearch;
- (void)_updateNavigationButton;
- (struct UIEdgeInsets)navigationBarInsetsForRecipientSelectionController:(id)arg1;
- (void)recipientSelectionController:(id)arg1 didFinishAvailaiblityLookupForRecipient:(id)arg2;
- (void)recipientSelectionControllerDidPushABViewController:(id)arg1;
- (void)recipientSelectionControllerRequestDismissKeyboard:(id)arg1;
- (void)recipientSelectionController:(id)arg1 textDidChange:(id)arg2;
- (void)recipientSelectionControllerSearchListDidShowOrHide:(id)arg1;
- (void)recipientSelectionControllerReturnPressed:(id)arg1;
- (void)recipientSelectionControllerDidChangeSize:(id)arg1;
- (_Bool)alwaysShowSearchResultsTable;
- (_Bool)shouldSuppressSearchResultsTable;
- (_Bool)homogenizePreferredServiceForiMessage;
- (_Bool)peoplePickerShouldUsePopovers;
- (_Bool)searchListShouldUsePopvoers;
- (void)recipientAvailibilitiesDidUpdate;
- (void)recipientSelectionControllerDidChange;
- (_Bool)shouldAutorotate;
- (void)viewDidAppearDeferredSetup;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithConversation:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKGroupTitleChangeChatItem : CKMultilineStampChatItem
{
}

- (id)sender;
- (id)title;
- (id)loadTranscriptText;

@end

@interface CKTiledLayoutGenerator : NSObject
{
    long long _cacheTailLocation;
    long long _cacheHeadLocation;
    CDStruct_1417b155 _cachedTileInfo[20];
    id _cachedBatchID[20];
    _Bool _scannedBatchHasCaption;
    _Bool _shouldStop;
    long long _tileCount;
    CDUnknownBlockType _tileImageSizeBlock;
    CDUnknownBlockType _tileMinimumSizeBlock;
    CDUnknownBlockType _tileHasCaptionBlock;
    CDUnknownBlockType _tileCaptionSizeBlock;
    CDUnknownBlockType _tileBatchIDBlock;
    long long _numberOfMagneticGuidelines;
    double _roundingScale;
    CDUnknownBlockType _parsedFrameBlock;
    long long _scanLocation;
    id _scannedBatchID;
    long long _scanSpecialSequenceCount;
    struct CGSize _interTileSpacing;
    struct CGSize _noCaptionSpacing;
    struct UIEdgeInsets _captionPadding;
}

@property(nonatomic) _Bool shouldStop; // @synthesize shouldStop=_shouldStop;
@property(nonatomic) long long scanSpecialSequenceCount; // @synthesize scanSpecialSequenceCount=_scanSpecialSequenceCount;
@property(nonatomic) _Bool scannedBatchHasCaption; // @synthesize scannedBatchHasCaption=_scannedBatchHasCaption;
@property(retain, nonatomic) id scannedBatchID; // @synthesize scannedBatchID=_scannedBatchID;
@property(nonatomic) long long scanLocation; // @synthesize scanLocation=_scanLocation;
@property(nonatomic) CDUnknownBlockType parsedFrameBlock; // @synthesize parsedFrameBlock=_parsedFrameBlock;
@property(nonatomic) double roundingScale; // @synthesize roundingScale=_roundingScale;
@property(nonatomic) long long numberOfMagneticGuidelines; // @synthesize numberOfMagneticGuidelines=_numberOfMagneticGuidelines;
@property(copy, nonatomic) CDUnknownBlockType tileBatchIDBlock; // @synthesize tileBatchIDBlock=_tileBatchIDBlock;
@property(copy, nonatomic) CDUnknownBlockType tileCaptionSizeBlock; // @synthesize tileCaptionSizeBlock=_tileCaptionSizeBlock;
@property(copy, nonatomic) CDUnknownBlockType tileHasCaptionBlock; // @synthesize tileHasCaptionBlock=_tileHasCaptionBlock;
@property(nonatomic) struct CGSize noCaptionSpacing; // @synthesize noCaptionSpacing=_noCaptionSpacing;
@property(nonatomic) struct UIEdgeInsets captionPadding; // @synthesize captionPadding=_captionPadding;
@property(copy, nonatomic) CDUnknownBlockType tileMinimumSizeBlock; // @synthesize tileMinimumSizeBlock=_tileMinimumSizeBlock;
@property(copy, nonatomic) CDUnknownBlockType tileImageSizeBlock; // @synthesize tileImageSizeBlock=_tileImageSizeBlock;
@property(nonatomic) struct CGSize interTileSpacing; // @synthesize interTileSpacing=_interTileSpacing;
@property(nonatomic) long long tileCount; // @synthesize tileCount=_tileCount;
- (void).cxx_destruct;
- (double)valueByRounding:(double)arg1 usingMagneticGuidelines:(_Bool)arg2;
- (void)parsedFrame:(struct CGRect)arg1 type:(long long)arg2 forTileAtIndex:(long long)arg3;
- (struct CGSize)captionSizeForTileAtIndex:(long long)arg1 proposedSize:(struct CGSize)arg2;
- (_Bool)scanTile:(CDStruct_1417b155 *)arg1 ofType:(long long)arg2;
- (_Bool)scanTile:(CDStruct_1417b155 *)arg1 type:(long long *)arg2;
- (_Bool)scanTileWithSquareImage:(CDStruct_1417b155 *)arg1;
- (_Bool)scanTileWithHorizontalPanorama:(CDStruct_1417b155 *)arg1;
- (_Bool)scanTileWithLandscapeImage:(CDStruct_1417b155 *)arg1;
- (_Bool)scanTileWithPortraitImage:(CDStruct_1417b155 *)arg1;
- (_Bool)scanAnyTile:(CDStruct_1417b155 *)arg1;
- (_Bool)scanTile:(CDStruct_1417b155 *)arg1 passingTest:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isAtEnd;
@property(nonatomic) CKTiledLayoutGeneratorScanState *scanState;
- (void)didParseTiles;
- (_Bool)parseNextTiles;
- (void)willParseTiles;
- (void)parseTiles;
- (void)enumerateFramesWithBlock:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface CKHorizontalTiledLayoutGenerator : CKTiledLayoutGenerator
{
    struct CGPoint _origin;
    double _referenceHeight;
}

@property(nonatomic) double referenceHeight; // @synthesize referenceHeight=_referenceHeight;
- (_Bool)_addSpecialSequenceBlock:(CDStruct_1417b155 *)arg1;
- (_Bool)_addColumnWithTiles:(CDStruct_1417b155 *)arg1 imageFrames:(struct CGRect *)arg2 count:(long long)arg3;
- (void)_enumerateColumnFramesWithContiguousTiles:(CDStruct_1417b155 *)arg1 count:(long long)arg2 useMagneticGuidelines:(_Bool)arg3 block:(CDUnknownBlockType)arg4;
- (_Bool)_addColumnWithContiguousTiles:(CDStruct_1417b155 *)arg1 count:(long long)arg2;
- (_Bool)_isAtEndOfColumn;
- (_Bool)_hasLeftSuboptimalColumn;
- (_Bool)_scanNonPanoramaSequence:(CDStruct_1417b155 *)arg1 count:(long long)arg2;
- (_Bool)_scanSpecialSequenceColumn:(CDStruct_1417b155 *)arg1 count:(long long *)arg2;
- (_Bool)_scanSpecialSequenceBlock:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanTripletWithLargeLead:(CDStruct_1417b155 *)arg1;
- (_Bool)_parseSpecialSubsequenceWithColumnRequired:(_Bool)arg1 columnParsed:(_Bool *)arg2;
- (_Bool)_parseSpecialSequence;
- (_Bool)_parseSpecialTileTriplet;
- (_Bool)_parseTileTriplet;
- (_Bool)_parseTilePair;
- (_Bool)_parseSingleTile;
- (double)referenceDistanceForMagneticGuidelines;
- (_Bool)parseNextTiles;
- (void)willParseTiles;

@end

@interface CKTextBalloonView : CKColoredBalloonView
{
    _Bool _centerTextWhenSkinny;
    CKBalloonTextView *_textView;
    NSAttributedString *_attributedText;
}

@property(nonatomic) _Bool centerTextWhenSkinny; // @synthesize centerTextWhenSkinny=_centerTextWhenSkinny;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(retain, nonatomic) CKBalloonTextView *textView; // @synthesize textView=_textView;
- (double)textViewWidthForWidth:(double)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (void)prepareForDisplay;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)description;
- (void)dealloc;
- (void)configureForMessagePart:(id)arg1;

@end

@interface CKHyperlinkBalloonView : CKTextBalloonView
{
}

- (_Bool)_gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CKIMComposeRecipient : MFComposeRecipient
{
    IMHandle *_handle;
}

@property(readonly, retain, nonatomic) IMHandle *handle; // @synthesize handle=_handle;
- (void)setIdentifier:(int)arg1;
- (void)setRecord:(void *)arg1 recordID:(int)arg2 identifier:(int)arg3;
- (_Bool)isRemovableFromSearchResults;
- (id)objectForDragType:(id)arg1;
- (id)supportedDragTypes;
- (void)dealloc;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)uncommentedAddress;
- (id)displayString;
- (id)compositeName;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)unlocalizedLabel;
- (id)label;
- (int)identifier;
- (id)commentedAddress;
- (id)address;
- (int)recordID;
- (void *)record;
- (int)property;
- (id)initWithRecord:(void *)arg1 recordID:(int)arg2 property:(int)arg3 identifier:(int)arg4 address:(id)arg5;
- (id)initWithHandle:(id)arg1;

@end

@interface CKIMDBMessage : CKDBMessage
{
    int _personID;
    NSString *_personName;
}

@property(nonatomic) int personID; // @synthesize personID=_personID;
@property(retain, nonatomic) NSString *personName; // @synthesize personName=_personName;
- (void)markAsRead;
- (void)resetIMPerson;
- (void)dealloc;
- (id)initWithRecordID:(long long)arg1;

@end

@interface CKIMFileTransfer : NSObject <CKFileTransfer>
{
    unsigned long long _mediaObjectCount;
    NSObject<OS_dispatch_queue> *_serial_queue;
    _Bool _fileDataReady;
    _Bool _fileURLFinalized;
    _Bool _restoring;
    NSString *_guid;
    NSURL *_fileURL;
    NSString *_filename;
    NSError *_error;
    NSDictionary *_transcoderUserInfo;
    unsigned long long _currentBytes;
    unsigned long long _totalBytes;
    long long _transferState;
    IMMessage *_imMessage;
    NSURL *_linkFileURL;
}

@property(copy, nonatomic) NSURL *linkFileURL; // @synthesize linkFileURL=_linkFileURL;
@property(nonatomic) long long transferState; // @synthesize transferState=_transferState;
@property(readonly, copy, nonatomic) NSString *guid; // @synthesize guid=_guid;
- (void)attachmentRestored:(id)arg1;
- (void)transferUpdated:(id)arg1;
- (void)updateTransfer;
- (id)linkFileURLWithFilename:(id)arg1;
- (id)syncController;
- (id)fileManager;
- (id)notificationCenter;
- (id)imFileTransferCenter;
- (void)mediaObjectRemoved;
- (void)mediaObjectAdded;
@property(readonly, nonatomic, getter=isDownloading) _Bool downloading;
@property(readonly, nonatomic, getter=isDownloadable) _Bool downloadable;
@property(readonly, nonatomic, getter=isRestoring) _Bool restoring; // @synthesize restoring=_restoring;
@property(readonly, nonatomic, getter=isFileURLFinalized) _Bool fileURLFinalized; // @synthesize fileURLFinalized=_fileURLFinalized;
@property(readonly, nonatomic, getter=isFileDataReady) _Bool fileDataReady; // @synthesize fileDataReady=_fileDataReady;
@property(readonly, nonatomic) unsigned long long totalBytes; // @synthesize totalBytes=_totalBytes;
@property(readonly, nonatomic) unsigned long long currentBytes; // @synthesize currentBytes=_currentBytes;
@property(readonly, copy, nonatomic) NSDictionary *transcoderUserInfo; // @synthesize transcoderUserInfo=_transcoderUserInfo;
@property(readonly, copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, copy, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(retain, nonatomic) IMMessage *IMMessage; // @synthesize IMMessage=_imMessage;
- (id)initWithFileURL:(id)arg1 transcoderUserInfo:(id)arg2;
- (id)initWithTransferGUID:(id)arg1 imMessage:(id)arg2;
@property(readonly, copy) NSString *description;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKIMGroupComposeRecipient : MFComposeRecipient
{
    NSString *_conversationGUID;
    NSArray *_composeRecipients;
    NSArray *_handles;
    NSDate *_lastMessageDate;
    CKIMComposeRecipient *_matchingRecipient;
    NSString *_displayString;
    NSString *_detailsString;
}

+ (id)composeRecipientWithConversation:(id)arg1 searchTerm:(id)arg2 matchingRecipient:(id)arg3;
@property(retain, nonatomic) NSString *detailsString; // @synthesize detailsString=_detailsString;
@property(retain, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;
@property(retain, nonatomic) CKIMComposeRecipient *matchingRecipient; // @synthesize matchingRecipient=_matchingRecipient;
@property(retain, nonatomic) NSDate *lastMessageDate; // @synthesize lastMessageDate=_lastMessageDate;
@property(retain, nonatomic) NSArray *handles; // @synthesize handles=_handles;
@property(retain, nonatomic) NSArray *composeRecipients; // @synthesize composeRecipients=_composeRecipients;
@property(retain, nonatomic) NSString *conversationGUID; // @synthesize conversationGUID=_conversationGUID;
- (id)address;
- (id)compositeName;
- (_Bool)isRemovableFromSearchResults;
- (id)initWithGUID:(id)arg1 displayString:(id)arg2 detailsString:(id)arg3 handles:(id)arg4 lastMessageDate:(id)arg5 searchTerm:(id)arg6 matchingRecipient:(id)arg7;
- (void)dealloc;

@end

@interface CKIMGroupHeaderRecipient : CKIMComposeRecipient
{
    NSString *_displayString;
}

@property(retain, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;

@end

@interface CKImageAlertView : UIView
{
    UIImage *_image;
    UIImageView *_imageView;
}

@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CKImageAnimationTimer : NSObject
{
    unsigned long long _frame;
    NSMutableSet *_observers;
    CADisplayLink *_displayLink;
}

+ (id)sharedTimer;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(retain, nonatomic) NSMutableSet *observers; // @synthesize observers=_observers;
- (void)animationTimerFired;
- (void)removeAnimationTimerObserver:(id)arg1;
- (void)addAnimationTimerObserver:(id)arg1;
- (unsigned long long)frame;
- (id)init;
- (void)dealloc;

@end

@interface CKImageAttachmentItem : CKAttachmentItem
{
    _Bool _backgroundEnqueued;
    _Bool _useDefaultSize;
    struct CGSize _imageSize;
}

+ (id)UTITypes;
@property(nonatomic) _Bool useDefaultSize; // @synthesize useDefaultSize=_useDefaultSize;
@property(nonatomic) _Bool backgroundEnqueued; // @synthesize backgroundEnqueued=_backgroundEnqueued;
@property struct CGSize imageSize; // @synthesize imageSize=_imageSize;
- (void)generatePreviewWithCompletion:(CDUnknownBlockType)arg1;
- (struct CGSize)_calculateImageSize;
- (void)startDeferredSetup;
- (struct CGSize)size;
- (id)imageData;
- (id)_newImageData;

@end

@interface CKImageBalloonView : CKBalloonView <CKAnimationTimerObserver>
{
    CKAnimatedImage *_animatedImage;
    NSArray *_frames;
    CKBalloonImageView *_tailMask;
}

@property(retain, nonatomic) CKBalloonImageView *tailMask; // @synthesize tailMask=_tailMask;
@property(copy, nonatomic) NSArray *frames; // @synthesize frames=_frames;
@property(retain, nonatomic) CKAnimatedImage *animatedImage; // @synthesize animatedImage=_animatedImage;
- (void)updateAnimationTimerObserving;
- (void)animationTimerFired:(unsigned long long)arg1;
- (void)setCanUseOpaqueMask:(_Bool)arg1;
- (void)setHasTail:(_Bool)arg1;
- (void)prepareForReuse;
- (id)overlayColor;
- (void)prepareForDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;
- (void)configureForMessagePart:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKImageData : NSObject
{
    struct CGImageSource *_imageSource;
    unsigned long long _count;
    long long _orientation;
    struct CGSize _pxSize;
    _Bool _initializedProperties;
    NSData *_data;
}

+ (id)UTITypeForData:(id)arg1;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (id)_thumbnailFillToSize:(struct CGSize)arg1 atIndex:(unsigned long long)arg2;
- (id)_thumbnailFitToSize:(struct CGSize)arg1 atIndex:(unsigned long long)arg2;
- (void)_initializeProperties;
@property(readonly, nonatomic) unsigned long long count; // @dynamic count;
@property(readonly, nonatomic) long long orientation; // @dynamic orientation;
@property(readonly, nonatomic) struct CGSize pxSize; // @dynamic pxSize;
@property(readonly, nonatomic) struct CGSize ptSize; // @dynamic ptSize;
@property(readonly, copy, nonatomic) NSString *UTIType; // @dynamic UTIType;
@property(readonly, copy, nonatomic) NSString *MIMEType; // @dynamic MIMEType;
- (id)durationsWithMaxCount:(unsigned long long)arg1;
- (id)thumbnailsFillToSize:(struct CGSize)arg1 maxCount:(unsigned long long)arg2;
- (id)thumbnailsFitToSize:(struct CGSize)arg1 maxCount:(unsigned long long)arg2;
- (id)thumbnailFillToSizeCropping:(struct CGSize)arg1;
- (id)thumbnailFillToSize:(struct CGSize)arg1;
- (id)thumbnailFitToSize:(struct CGSize)arg1;
@property(readonly, retain, nonatomic) UIImage *image; // @dynamic image;
- (id)initWithData:(id)arg1;
- (void)dealloc;

@end

@interface CKInlineAudioReplyButtonController : NSObject
{
    _Bool _started;
    id <CKInlineAudioReplyButtonDelegate> _delegate;
    UIButton *_startButton;
    UIButton *_stopButton;
    double _holdThreshold;
    double _touchDownTime;
}

@property(nonatomic, getter=isStarted) _Bool started; // @synthesize started=_started;
@property(nonatomic) double touchDownTime; // @synthesize touchDownTime=_touchDownTime;
@property(nonatomic) double holdThreshold; // @synthesize holdThreshold=_holdThreshold;
@property(retain, nonatomic) UIButton *stopButton; // @synthesize stopButton=_stopButton;
@property(retain, nonatomic) UIButton *startButton; // @synthesize startButton=_startButton;
@property(nonatomic) id <CKInlineAudioReplyButtonDelegate> delegate; // @synthesize delegate=_delegate;
- (void)touchDragExit:(id)arg1;
- (void)touchDragEnter:(id)arg1;
- (void)touchUpInStopButton:(id)arg1;
- (void)touchUpOutsideStartButton:(id)arg1 event:(id)arg2;
- (void)touchUpInStartButton:(id)arg1 event:(id)arg2;
- (void)touchDownInStartButton:(id)arg1 event:(id)arg2;
- (void)dealloc;
- (id)initWithStartButton:(id)arg1 stopButton:(id)arg2;

@end

@interface CKJoystickButtonItem : NSObject
{
    _Bool _highlighted;
    UIImage *_image;
    NSString *_title;
    id _target;
    SEL _action;
    SEL _tapAction;
    UIView<CKJoystickButton> *_button;
    UIView *_view;
}

@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
@property(retain, nonatomic) UIView<CKJoystickButton> *button; // @synthesize button=_button;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) SEL tapAction; // @synthesize tapAction=_tapAction;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (id)loadButton;
- (void)sendTapActionFrom:(id)arg1 forEvent:(id)arg2;
- (void)sendActionFrom:(id)arg1 forEvent:(id)arg2;
- (id)initWithImage:(id)arg1 title:(id)arg2 target:(id)arg3 action:(SEL)arg4 tapAction:(SEL)arg5;
- (void)dealloc;

@end

@interface CKJoystickController : NSObject
{
    _Bool _autoDismiss;
    _Bool _radialButtonRotationEnabled;
    unsigned long long _highlightStyle;
    NSArray *_passthroughViews;
    id <CKJoystickControllerDelegate> _delegate;
    long long _deviceOrientation;
    CKJoystickView *_joystickView;
}

+ (double)joystickExpandedRadius;
+ (double)joystickRadius;
+ (double)joystickRotationAnimationDuration;
+ (double)joystickExpandAnimationDuration;
+ (id)sharedJoystickOverlay;
@property(retain, nonatomic) CKJoystickView *joystickView; // @synthesize joystickView=_joystickView;
@property(nonatomic) long long deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
@property(nonatomic) _Bool radialButtonRotationEnabled; // @synthesize radialButtonRotationEnabled=_radialButtonRotationEnabled;
@property(nonatomic) _Bool autoDismiss; // @synthesize autoDismiss=_autoDismiss;
@property(nonatomic) id <CKJoystickControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *passthroughViews; // @synthesize passthroughViews=_passthroughViews;
@property(readonly, nonatomic) unsigned long long highlightStyle; // @synthesize highlightStyle=_highlightStyle;
- (struct CGAffineTransform)rotationTransformForCurrentDeviceOrientation;
- (struct CGRect)convertJoystickFrameToView:(id)arg1;
- (void)dismissJoystickAnimated:(_Bool)arg1;
- (void)presentJoystickFromPoint:(struct CGPoint)arg1 inView:(id)arg2 animated:(_Bool)arg3;
@property(readonly, nonatomic, getter=isJoystickCollapsed) _Bool joystickCollapsed;
@property(readonly, nonatomic, getter=isJoystickVisible) _Bool joystickVisible;
@property(nonatomic) CKJoystickButtonItem *highlightedButtonItem;
@property(retain, nonatomic) UIColor *tintColor;
- (void)setRadialButtonItems:(id)arg1 animated:(_Bool)arg2;
- (void)setCenterButtonItem:(id)arg1 animated:(_Bool)arg2;
@property(readonly, copy, nonatomic) NSArray *radialButtonItems;
@property(readonly, retain, nonatomic) CKJoystickButtonItem *centerButtonItem;
- (id)initWithCenterButtonItem:(id)arg1 radialButtonItems:(id)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5 style:(unsigned long long)arg6 highlightStyle:(unsigned long long)arg7;
- (void)dealloc;

@end

@interface CKJoystickGestureRecognizer : UILongPressGestureRecognizer
{
    CKJoystickGestureVelocitySample *_velocitySample;
    CKJoystickGestureVelocitySample *_previousVelocitySample;
    double _lastTouchTime;
    struct CGPoint _lastScreenLocation;
}

+ (id)joystickGestureRecognizer;
- (struct CGPoint)_convertVelocitySample:(id)arg1 fromScreenCoordinatesToView:(id)arg2;
- (struct CGPoint)velocityInView:(id)arg1;
- (void)setAllowableMovement:(double)arg1;
- (void)setNumberOfTouchesRequired:(unsigned long long)arg1;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;

@end

@interface CKJoystickGestureRecognizerButton : NSObject
{
    CKJoystickGestureRecognizer *_gestureRecognizer;
    UIButton *_button;
    id <CKJoystickGestureRecognizerButtonDelegate> _delegate;
    NSDate *_gestureDidBeginDate;
}

+ (id)joystickGestureRecognizerButtonWithButton:(id)arg1;
@property(retain, nonatomic) NSDate *gestureDidBeginDate; // @synthesize gestureDidBeginDate=_gestureDidBeginDate;
@property(nonatomic) id <CKJoystickGestureRecognizerButtonDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIButton *button; // @synthesize button=_button;
@property(retain, nonatomic) CKJoystickGestureRecognizer *gestureRecognizer; // @synthesize gestureRecognizer=_gestureRecognizer;
- (void)gestureRecognized:(id)arg1;
- (void)touchUpOutsideButton:(id)arg1;
- (void)touchUpInsideButton:(id)arg1;
- (void)touchDownButton:(id)arg1;
- (id)initWithGestureRecognizer:(id)arg1 button:(id)arg2;
- (void)dealloc;

@end

@interface CKJoystickGestureVelocitySample : NSObject
{
    struct CGPoint start;
    struct CGPoint end;
    double dt;
}

@end

@interface CKJoystickOverlayView : UIView <CKDismissViewDelegate, CKJoystickHostView>
{
    CKJoystickView *_joystickView;
    CKDismissView *_dismissView;
}

+ (id)sharedInstance;
@property(retain, nonatomic) CKDismissView *dismissView; // @synthesize dismissView=_dismissView;
@property(retain, nonatomic) CKJoystickView *joystickView; // @synthesize joystickView=_joystickView;
- (void)dismissViewWasTapped:(id)arg1;
- (void)joystickGestureRecognized:(id)arg1;
@property(copy, nonatomic) NSArray *passthroughViews;
- (void)dismissJoystickViewAnimated:(_Bool)arg1;
- (void)presentJoystickView:(id)arg1 fromPoint:(struct CGPoint)arg2 inView:(id)arg3 animated:(_Bool)arg4;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKJoystickTouchDownButtonItem : CKJoystickButtonItem
{
    _Bool _touchDownSticky;
    SEL _touchDownAction;
}

@property(nonatomic, getter=isTouchDownSticky) _Bool touchDownSticky; // @synthesize touchDownSticky=_touchDownSticky;
@property(nonatomic) SEL touchDownAction; // @synthesize touchDownAction=_touchDownAction;
- (void)setHighlighted:(_Bool)arg1;
- (void)sendTouchDownActionFrom:(id)arg1 forEvent:(id)arg2;
- (void)sendActionFrom:(id)arg1 forEvent:(id)arg2;
- (id)initWithImage:(id)arg1 title:(id)arg2 target:(id)arg3 action:(SEL)arg4 touchDownAction:(SEL)arg5 tapAction:(SEL)arg6 touchDownSticky:(_Bool)arg7;

@end

@interface CKJoystickShutterButtonItem : CKJoystickTouchDownButtonItem
{
}

- (id)loadButton;

@end

@interface CKJoystickView : UIView
{
    _Bool _collapsed;
    _Bool _expanded;
    _Bool _autoDismiss;
    _Bool _delegateCollapsedWillChange;
    _Bool _touchInside;
    _Bool _dragging;
    CKJoystickButtonItem *_centerButtonItem;
    NSArray *_radialButtonItems;
    unsigned long long _highlightStyle;
    CKJoystickController *_controller;
    CKJoystickButtonItem *_highlightedButtonItem;
    unsigned long long _style;
    NSMutableArray *_allButtonItems;
    UIView *_discView;
    double _startAngle;
    double _endAngle;
    double _incrementAngle;
}

+ (void)buttonRotateAnimation:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)buttonChangeAnimation:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)highlightAnimation:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)expandAnimation:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)collapseAnimation:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
@property(nonatomic, getter=isDragging) _Bool dragging; // @synthesize dragging=_dragging;
@property(nonatomic, getter=isTouchInside) _Bool touchInside; // @synthesize touchInside=_touchInside;
@property(nonatomic) double incrementAngle; // @synthesize incrementAngle=_incrementAngle;
@property(nonatomic) double endAngle; // @synthesize endAngle=_endAngle;
@property(nonatomic) double startAngle; // @synthesize startAngle=_startAngle;
@property(retain, nonatomic) UIView *discView; // @synthesize discView=_discView;
@property(retain, nonatomic) NSMutableArray *allButtonItems; // @synthesize allButtonItems=_allButtonItems;
@property(nonatomic) _Bool delegateCollapsedWillChange; // @synthesize delegateCollapsedWillChange=_delegateCollapsedWillChange;
@property(nonatomic) unsigned long long style; // @synthesize style=_style;
@property(nonatomic) _Bool autoDismiss; // @synthesize autoDismiss=_autoDismiss;
@property(nonatomic) CKJoystickButtonItem *highlightedButtonItem; // @synthesize highlightedButtonItem=_highlightedButtonItem;
@property(nonatomic, getter=isExpanded) _Bool expanded; // @synthesize expanded=_expanded;
@property(nonatomic, getter=isCollapsed) _Bool collapsed; // @synthesize collapsed=_collapsed;
@property(nonatomic) CKJoystickController *controller; // @synthesize controller=_controller;
@property(nonatomic) unsigned long long highlightStyle; // @synthesize highlightStyle=_highlightStyle;
@property(copy, nonatomic) NSArray *radialButtonItems; // @synthesize radialButtonItems=_radialButtonItems;
@property(retain, nonatomic) CKJoystickButtonItem *centerButtonItem; // @synthesize centerButtonItem=_centerButtonItem;
- (id)buttonItemAtPoint:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2;
- (void)highlightButtonItem:(id)arg1 animated:(_Bool)arg2;
- (void)joystickGestureRecognized:(id)arg1;
- (void)setExpanded:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setCollapsed:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setRadialButtonItems:(id)arg1 animated:(_Bool)arg2;
- (void)orientationDidChange;
- (void)setCenterButtonItem:(id)arg1 animated:(_Bool)arg2;
- (id)initWithCenterButtonItem:(id)arg1 radialButtonItems:(id)arg2 startAngle:(double)arg3 endAngle:(double)arg4 clockwise:(_Bool)arg5 style:(unsigned long long)arg6 highlightStyle:(unsigned long long)arg7;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;

@end

@interface CKJoystickWindow : UIAutoRotatingWindow <CKDismissViewDelegate, CKJoystickHostView>
{
    CKJoystickView *_joystickView;
    CKDismissView *_dismissView;
}

+ (id)sharedInstance;
@property(retain, nonatomic) CKDismissView *dismissView; // @synthesize dismissView=_dismissView;
@property(retain, nonatomic) CKJoystickView *joystickView; // @synthesize joystickView=_joystickView;
- (void)dismissViewWasTapped:(id)arg1;
- (void)joystickGestureRecognized:(id)arg1;
@property(copy, nonatomic) NSArray *passthroughViews;
- (void)dismissJoystickViewAnimated:(_Bool)arg1;
- (void)presentJoystickView:(id)arg1 fromPoint:(struct CGPoint)arg2 inView:(id)arg3 animated:(_Bool)arg4;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKLRUCache : CPLRUDictionary <CKCache>
{
}

- (id)initWithMaximumCapacity:(unsigned long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKLoadMoreChatItem : CKChatItem
{
}

- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (_Bool)displayDuringSend;
- (Class)cellClass;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets)contentInsets;
- (struct UIEdgeInsets)transcriptTextAlignmentInsets;

@end

@interface CKLocatingChatItem : CKBalloonChatItem
{
}

- (id)message;
@property(readonly, copy, nonatomic) NSString *locationText;
- (void)configureBalloonView:(id)arg1;
- (id)sender;
- (id)time;
- (_Bool)failed;
- (_Bool)isFromMe;
- (Class)balloonViewClass;
- (id)description;

@end

@interface CKLocationAttachmentItem : CKAttachmentItem
{
    CDStruct_2c43369c _coordinate;
}

+ (id)UTITypes;
@property(nonatomic) CDStruct_2c43369c coordinate; // @synthesize coordinate=_coordinate;
- (_Bool)isDroppedPin;
- (id)pin;
- (id)vCardURLProperties;
- (id)_generateThumbnailFillToSize:(struct CGSize)arg1;
- (void)generatePreviewWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithFileURL:(id)arg1 size:(struct CGSize)arg2 guid:(id)arg3;

@end

@interface CKLocationMediaObject : CKContactMediaObject <MKAnnotation>
{
    CDStruct_2c43369c _coordinate;
}

+ (id)titleBarMaskImageForWidth:(double)arg1;
+ (id)placeholderPreviewCache;
+ (_Bool)isPreviewable;
+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
+ (id)placeholderPreviewForWidth:(double)arg1 orientation:(BOOL)arg2;
+ (id)vcardDataFromCLLocation:(id)arg1;
+ (Class)__ck_attachmentItemClass;
@property(nonatomic) CDStruct_2c43369c coordinate; // @synthesize coordinate=_coordinate;
- (id)generatePlaceholderThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (id)generatePlaceholderThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (_Bool)isDroppedPin;
- (id)pin;
- (id)vCardURLProperties;
- (id)bbPreviewFillToSize:(struct CGSize)arg1;
- (struct CGSize)bbSize;
- (id)generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (id)previewForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)previewCachesFileURLWithOrientation:(BOOL)arg1 extension:(id)arg2;
- (id)previewCacheKeyWithOrientation:(BOOL)arg1;
- (Class)previewBalloonViewClass;
- (int)mediaType;
- (id)initWithTransfer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSString *subtitle;
@property(readonly) Class superclass;
@property(readonly, copy, nonatomic) NSString *title;

@end

@interface CKLocationShareActionChatItem : CKMultilineStampChatItem
{
}

- (id)handle;
- (id)sender;
- (long long)direction;
- (long long)actionType;
- (id)loadTranscriptText;

@end

@interface CKLocationShareBalloonView : CKImageBalloonView
{
    long long _offerState;
    NSString *_titleString;
    NSString *_locationString;
    UILabel *_titleLabel;
    UILabel *_locationLabel;
    UIButton *_startSharingButton;
    UIButton *_ignoreButton;
    UIView *_horizontalSeparator;
    UIView *_verticalSeparator;
    UIImageView *_chevron;
}

@property(retain, nonatomic) UIImageView *chevron; // @synthesize chevron=_chevron;
@property(retain, nonatomic) UIView *verticalSeparator; // @synthesize verticalSeparator=_verticalSeparator;
@property(retain, nonatomic) UIView *horizontalSeparator; // @synthesize horizontalSeparator=_horizontalSeparator;
@property(retain, nonatomic) UIButton *ignoreButton; // @synthesize ignoreButton=_ignoreButton;
@property(retain, nonatomic) UIButton *startSharingButton; // @synthesize startSharingButton=_startSharingButton;
@property(retain, nonatomic) UILabel *locationLabel; // @synthesize locationLabel=_locationLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(copy, nonatomic) NSString *locationString; // @synthesize locationString=_locationString;
@property(copy, nonatomic) NSString *titleString; // @synthesize titleString=_titleString;
@property(nonatomic) long long offerState; // @synthesize offerState=_offerState;
- (void)_ignoreButtonHit:(id)arg1;
- (void)_shareButtonHit:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)prepareForDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)configureForLocationShareOfferChatItem:(id)arg1;

// Remaining properties
@property(nonatomic) id <CKLocationShareBalloonViewDelegate> delegate;

@end

@interface CKLocationShareOfferChatItem : CKBalloonChatItem
{
    FMFLocation *_lastKnownLocation;
}

+ (id)placeholderPreviewCache;
+ (id)titleBarMaskImageForWidth:(double)arg1;
@property(retain, nonatomic) FMFLocation *lastKnownLocation; // @synthesize lastKnownLocation=_lastKnownLocation;
- (id)_desaturatedImageForImage:(id)arg1;
- (void)_handleLocationDidChangeNotification:(id)arg1;
- (id)savedPreviewFromURL:(id)arg1;
- (void)savePreview:(id)arg1 toURL:(id)arg2;
- (id)_generatePlaceholderThumbnailFillToSize:(struct CGSize)arg1;
- (id)_generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2 withCoordinate:(CDStruct_2c43369c)arg3 forState:(long long)arg4;
- (void)_generateMapPreview;
- (id)_previewCacheKey:(unsigned long long)arg1;
- (id)previewForWidth:(double)arg1 orientation:(BOOL)arg2;
@property(readonly, nonatomic) NSString *locationText;
@property(readonly, nonatomic) NSString *titleText;
@property(readonly, nonatomic) long long offerState;
- (void)configureBalloonView:(id)arg1;
@property(readonly, nonatomic) IMHandle *sender;
- (id)time;
- (_Bool)failed;
- (_Bool)isFromMe;
- (Class)balloonViewClass;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(double)arg2;
- (void)dealloc;

@end

@interface CKManualUpdater : NSObject
{
    _Bool _needsUpdate;
    id _target;
    SEL _action;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
@property(nonatomic) _Bool needsUpdate; // @synthesize needsUpdate=_needsUpdate;
- (void)updateIfNeeded;
- (void)setNeedsUpdate;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)description;

@end

@interface CKMapViewController : UIViewController <MKMapViewDelegate>
{
    id <MKAnnotation> _annotation;
    MKMapView *_mapView;
    MKMapItem *_mapItem;
}

@property(retain, nonatomic) MKMapItem *mapItem; // @synthesize mapItem=_mapItem;
@property(retain, nonatomic) MKMapView *mapView; // @synthesize mapView=_mapView;
@property(retain, nonatomic) id <MKAnnotation> annotation; // @synthesize annotation=_annotation;
- (void)selectPin;
- (void)_toolbarItemPressed:(id)arg1;
- (void)mapView:(id)arg1 annotationView:(id)arg2 calloutAccessoryControlTapped:(id)arg3;
- (void)mapView:(id)arg1 didAddAnnotationViews:(id)arg2;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (id)initWithAnnotation:(id)arg1;
- (_Bool)wantsFullScreenLayout;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKMediaObjectManager : NSObject
{
    NSMutableDictionary *_transfers;
    NSArray *_classes;
    NSDictionary *_UTITypes;
    NSDictionary *_dynTypes;
}

+ (id)sharedInstance;
@property(copy, nonatomic) NSDictionary *dynTypes; // @synthesize dynTypes=_dynTypes;
@property(copy, nonatomic) NSDictionary *UTITypes; // @synthesize UTITypes=_UTITypes;
@property(copy, nonatomic) NSArray *classes; // @synthesize classes=_classes;
@property(retain, nonatomic) NSMutableDictionary *transfers; // @synthesize transfers=_transfers;
- (void)transferRemoved:(id)arg1;
- (Class)transferClass;
- (id)fileManager;
- (id)transferWithFileURL:(id)arg1 transcoderUserInfo:(id)arg2;
- (id)transferWithTransferGUID:(id)arg1 imMessage:(id)arg2;
- (id)mediaObjectWithFileURL:(id)arg1 filename:(id)arg2 transcoderUserInfo:(id)arg3;
- (id)mediaObjectWithData:(id)arg1 UTIType:(id)arg2 filename:(id)arg3 transcoderUserInfo:(id)arg4;
- (id)mediaObjectWithTransferGUID:(id)arg1 imMessage:(id)arg2;
- (Class)classForFilename:(id)arg1;
- (Class)classForUTIType:(id)arg1;
- (id)UTITypeForFilename:(id)arg1;
- (id)UTITypeForExtension:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface CKMessageActionChatItem : CKMultilineStampChatItem
{
}

- (id)handle;
- (id)sender;
- (long long)actionType;
- (id)loadTranscriptText;

@end

@interface CKMessageAlertItem : CKAlertItem <NCInteractiveNotificationHostDelegate>
{
    CKIMDBMessage *_message;
    _Bool _playedSound;
    BBBulletin *_bulletin;
    _Bool _showingImage;
    NCInteractiveNotificationHostViewController *_replyViewController;
    NCInteractiveNotificationHostViewController *_audioPlaybackViewController;
}

+ (void)playMessageReceived;
+ (void)setLastMessageSenderID:(int)arg1;
+ (int)lastMessageSenderID;
+ (void)stopPlayingCurrentAlertTone;
@property(retain, nonatomic) NCInteractiveNotificationHostViewController *audioPlaybackViewController; // @synthesize audioPlaybackViewController=_audioPlaybackViewController;
@property(retain, nonatomic) NCInteractiveNotificationHostViewController *replyViewController; // @synthesize replyViewController=_replyViewController;
@property(nonatomic) _Bool showingImage; // @synthesize showingImage=_showingImage;
@property(retain, nonatomic) BBBulletin *bulletin; // @synthesize bulletin=_bulletin;
- (_Bool)shouldHideSMSPreview;
- (void)dealloc;
- (void)configure:(_Bool)arg1 requirePasscodeForActions:(_Bool)arg2;
- (void)hostViewController:(id)arg1 didEnable:(_Bool)arg2 actionAtIndex:(unsigned long long)arg3;
- (void)hostViewController:(id)arg1 didDismissPresentedViewController:(id)arg2;
- (void)hostViewController:(id)arg1 didRequestDismissalWithContext:(id)arg2;
- (void)hostViewControllerDidChangePreferredContentSize:(id)arg1;
- (id)accessoryView;
- (void)performUnlockAction;
- (_Bool)allowMenuButtonDismissal;
- (_Bool)dismissOnLock;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)willPresentAlertView:(id)arg1;
- (void)willRelockForButtonPress:(_Bool)arg1;
- (void)didDeactivateForReason:(int)arg1;
- (Class)alertSheetClass;
- (void)reply;
- (id)_groupID;
- (_Bool)isAudioPlaybackAlert;
- (_Bool)isReplyAlert;
- (id)alertImage;
- (void)setMessage:(id)arg1;
- (id)name;
- (id)address;
- (id)messageText;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKMessageAlertSheet : UIAlertView
{
    _Bool _showingTagline;
}

@property(nonatomic) _Bool showingTagline; // @synthesize showingTagline=_showingTagline;
- (void)layoutAnimated:(_Bool)arg1;
- (void)updateTagline;

@end

@interface CKMessageEntryAudioHintView : UIView
{
    UIButton *_referenceButton;
    UILabel *_hintLabel;
    UIImageView *_hintImageView;
    UIButton *_hintButton;
}

@property(retain, nonatomic) UIButton *hintButton; // @synthesize hintButton=_hintButton;
@property(retain, nonatomic) UIImageView *hintImageView; // @synthesize hintImageView=_hintImageView;
@property(retain, nonatomic) UILabel *hintLabel; // @synthesize hintLabel=_hintLabel;
@property(retain, nonatomic) UIButton *referenceButton; // @synthesize referenceButton=_referenceButton;
- (void)setHidden:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)layoutSubviews;
- (id)initWithReferenceButton:(id)arg1;
- (void)dealloc;

@end

@interface CKMessageEntryContentView : UIScrollView <UITextViewDelegate>
{
    _Bool _shouldShowSubject;
    _Bool _shouldShowCharacterCount;
    _Bool _needsTextLayout;
    _Bool _needsEnsureSelectionVisible;
    _Bool _ignoreEndEditing;
    CKComposition *_composition;
    CKMessageEntryTextView *_subjectView;
    CKMessageEntryRichTextView *_textView;
    UIView *_activeView;
    double _placeholderHeight;
    UIView *_dividerLine;
    struct UIEdgeInsets _textAlignmentInsets;
    struct UIEdgeInsets _subjectAlignmentInsets;
}

@property(nonatomic) _Bool ignoreEndEditing; // @synthesize ignoreEndEditing=_ignoreEndEditing;
@property(nonatomic) _Bool needsEnsureSelectionVisible; // @synthesize needsEnsureSelectionVisible=_needsEnsureSelectionVisible;
@property(nonatomic) _Bool needsTextLayout; // @synthesize needsTextLayout=_needsTextLayout;
@property(retain, nonatomic) UIView *dividerLine; // @synthesize dividerLine=_dividerLine;
@property(nonatomic) struct UIEdgeInsets subjectAlignmentInsets; // @synthesize subjectAlignmentInsets=_subjectAlignmentInsets;
@property(nonatomic) struct UIEdgeInsets textAlignmentInsets; // @synthesize textAlignmentInsets=_textAlignmentInsets;
@property(nonatomic) double placeholderHeight; // @synthesize placeholderHeight=_placeholderHeight;
@property(nonatomic) UIView *activeView; // @synthesize activeView=_activeView;
@property(retain, nonatomic) CKMessageEntryRichTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) CKMessageEntryTextView *subjectView; // @synthesize subjectView=_subjectView;
@property(nonatomic) _Bool shouldShowCharacterCount; // @synthesize shouldShowCharacterCount=_shouldShowCharacterCount;
@property(nonatomic) _Bool shouldShowSubject; // @synthesize shouldShowSubject=_shouldShowSubject;
- (void)invalidateComposition;
- (void)calculateTextMetrics;
- (void)ensureSelectionVisibleIfNeeded;
- (_Bool)messageEntryRichTextView:(id)arg1 shouldPasteMediaObjects:(id)arg2;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)acceptAutocorrection;
@property(nonatomic) BOOL balloonColor;
@property(readonly, nonatomic) struct UIEdgeInsets contentTextAlignmentInsets;
@property(readonly, nonatomic, getter=isShowingDictationPlaceholder) _Bool showingDictationPlaceholder;
@property(copy, nonatomic) NSString *placeholderText;
@property(readonly, nonatomic, getter=isSingleLine) _Bool singleLine;
- (_Bool)makeActive;
@property(readonly, nonatomic, getter=isActive) _Bool active;
@property(retain, nonatomic) CKComposition *composition; // @synthesize composition=_composition;
- (id)initWithFrame:(struct CGRect)arg1 shouldShowSubject:(_Bool)arg2 shouldShowCharacterCount:(_Bool)arg3;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKMessageEntryRecordedAudioView : UIView <CKAudioControllerDelegate>
{
    CKAudioMediaObject *_audioMediaObject;
    id <CKMessageEntryRecordedAudioViewDelegate> _delegate;
    UIImageView *_balloonImageView;
    CKAudioController *_audioController;
    CKAudioProgressView *_progressView;
    UILabel *_timeLabel;
    UIImage *_waveformImage;
    UIImageView *_waveformImageView;
    double _time;
    NSString *_timeFormat;
}

@property(copy, nonatomic) NSString *timeFormat; // @synthesize timeFormat=_timeFormat;
@property(nonatomic) double time; // @synthesize time=_time;
@property(retain, nonatomic) UIImageView *waveformImageView; // @synthesize waveformImageView=_waveformImageView;
@property(retain, nonatomic) UIImage *waveformImage; // @synthesize waveformImage=_waveformImage;
@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
@property(retain, nonatomic) CKAudioProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) CKAudioController *audioController; // @synthesize audioController=_audioController;
@property(retain, nonatomic) UIImageView *balloonImageView; // @synthesize balloonImageView=_balloonImageView;
@property(nonatomic) id <CKMessageEntryRecordedAudioViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CKAudioMediaObject *audioMediaObject; // @synthesize audioMediaObject=_audioMediaObject;
- (void)audioControllerDidStop:(id)arg1;
- (void)audioControllerDidPause:(id)arg1;
- (void)audioController:(id)arg1 mediaObjectProgressDidChange:(id)arg2 currentTime:(double)arg3 duration:(double)arg4;
- (void)audioController:(id)arg1 mediaObjectDidFinishPlaying:(id)arg2;
@property(readonly, nonatomic) _Bool isPlaying;
- (void)pause;
- (void)play;
- (void)tapRecognized:(id)arg1;
- (void)updateProgress;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)updateTimeString;
- (void)updateTimeFormat;
- (void)dealloc;
- (id)initWithPlaybackButton:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKMessageEntryTextView : UITextView
{
    _Bool _showingDictationPlaceholder;
    NSString *_autocorrectionContext;
    NSString *_responseContext;
    UILabel *_placeholderLabel;
}

@property(retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property(copy, nonatomic) NSString *responseContext; // @synthesize responseContext=_responseContext;
@property(copy, nonatomic) NSString *autocorrectionContext; // @synthesize autocorrectionContext=_autocorrectionContext;
@property(nonatomic, getter=isShowingDictationPlaceholder) _Bool showingDictationPlaceholder; // @synthesize showingDictationPlaceholder=_showingDictationPlaceholder;
- (void)textViewDidChange:(id)arg1;
- (void)updateTextView;
@property(readonly, nonatomic, getter=isSingleLine) _Bool singleLine;
@property(copy, nonatomic) NSString *placeholderText;
@property(copy, nonatomic) NSAttributedString *compositionText;
- (void)removeDictationResultPlaceholder:(id)arg1 willInsertResult:(_Bool)arg2;
- (id)insertDictationResultPlaceholder;
- (void)setAttributedText:(id)arg1;
- (void)setFont:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface CKMessageEntryRichTextView : CKMessageEntryTextView <NSTextStorageDelegate>
{
    BOOL _balloonColor;
    NSMutableDictionary *_mediaObjects;
    NSMutableDictionary *_composeImages;
    CKComposition *_pasteboardComposition;
    long long _pasteboardChangeCount;
}

@property(nonatomic) long long pasteboardChangeCount; // @synthesize pasteboardChangeCount=_pasteboardChangeCount;
@property(retain, nonatomic) CKComposition *pasteboardComposition; // @synthesize pasteboardComposition=_pasteboardComposition;
@property(retain, nonatomic) NSMutableDictionary *composeImages; // @synthesize composeImages=_composeImages;
@property(retain, nonatomic) NSMutableDictionary *mediaObjects; // @synthesize mediaObjects=_mediaObjects;
@property(nonatomic) BOOL balloonColor; // @synthesize balloonColor=_balloonColor;
- (id)attributedTextForCompositionText:(id)arg1;
- (id)composeImageForTransferGUID:(id)arg1;
- (void)previewDidChange:(id)arg1;
- (void)updateComposeImages;
- (void)textStorage:(id)arg1 willProcessEditing:(unsigned long long)arg2 range:(struct _NSRange)arg3 changeInLength:(long long)arg4;
- (id)compositionText;
- (void)setCompositionText:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;
- (void)paste:(id)arg1;
- (void)cut:(id)arg1;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKMessageEntryView : UIView <CKMessageEntryContentViewDelegate, CKAudioRecorderDelegate, CKJoystickControllerDelegate, CKMessageEntryRecordedAudioViewDelegate, CKJoystickGestureRecognizerButtonDelegate, CKInlineAudioReplyButtonDelegate>
{
    UIView *_dimmingView;
    _Bool _shouldShowSendButton;
    _Bool _shouldShowSubject;
    _Bool _shouldShowPhotoButton;
    _Bool _shouldShowCharacterCount;
    _Bool _dimmed;
    _Bool _shouldKnockoutCoverView;
    _Bool _keyboardVisible;
    _Bool _composingRecipient;
    _Bool _failedRecipients;
    _Bool _unreachableEmergencyRecipient;
    _Bool _sendingMessage;
    _Bool _usesDeleteAudioRecordingButton;
    _Bool _characterCountHidden;
    _Bool _performingJoystickSendAction;
    id <CKMessageEntryViewDelegate> _delegate;
    CKConversation *_conversation;
    CKMessageEntryContentView *_contentView;
    CKMessageEntryWaveformView *_waveformView;
    UIButton *_photoButton;
    id <CKJoystickGestureRecognizerButtonDelegate> _videoDelegate;
    UIButton *_deleteAudioRecordingButton;
    UIButton *_sendButton;
    UIButton *_audioButton;
    CKJoystickGestureRecognizerButton *_audioJoystickGestureRecognizerButton;
    CKJoystickGestureRecognizerButton *_videoJoystickGestureRecognizerButton;
    CKInlineAudioReplyButtonController *_audioReplyButton;
    CAMShutterButton *_shutterButton;
    UILabel *_characterCountLabel;
    _UITextFieldRoundedRectBackgroundViewNeue *_coverView;
    _UIBackdropView *_backdropView;
    UIView *_knockoutCoverView;
    UIView *_dividerLine;
    CKAudioRecorder *_recorder;
    CKComposition *_audioComposition;
    CKJoystickController *_audioJoystickController;
    CKMessageEntryRecordedAudioView *_recordedAudioView;
    CKMessageEntryAudioHintView *_audioHintView;
    unsigned long long _displayMode;
    UIView *_contentClipView;
    struct CGSize _photoButtonSize;
    struct CGSize _deleteAudioRecordingButtonSize;
    struct CGSize _sendButtonSize;
    struct CGSize _audioButtonSize;
    struct CGSize _characterCountSize;
    struct CGSize _waveformViewSize;
    struct UIEdgeInsets _sendTextAlignmentInsets;
}

+ (id)audioButtonImage;
+ (double)contentViewPortraitWidth:(_Bool)arg1;
+ (double)coverViewPortraitWidth:(_Bool)arg1;
@property(nonatomic, getter=isPerformingJoystickSendAction) _Bool performingJoystickSendAction; // @synthesize performingJoystickSendAction=_performingJoystickSendAction;
@property(retain, nonatomic) UIView *contentClipView; // @synthesize contentClipView=_contentClipView;
@property(nonatomic) unsigned long long displayMode; // @synthesize displayMode=_displayMode;
@property(retain, nonatomic) CKMessageEntryAudioHintView *audioHintView; // @synthesize audioHintView=_audioHintView;
@property(nonatomic) struct CGSize waveformViewSize; // @synthesize waveformViewSize=_waveformViewSize;
@property(retain, nonatomic) CKMessageEntryRecordedAudioView *recordedAudioView; // @synthesize recordedAudioView=_recordedAudioView;
@property(retain, nonatomic) CKJoystickController *audioJoystickController; // @synthesize audioJoystickController=_audioJoystickController;
@property(retain, nonatomic) CKComposition *audioComposition; // @synthesize audioComposition=_audioComposition;
@property(retain, nonatomic) CKAudioRecorder *recorder; // @synthesize recorder=_recorder;
@property(nonatomic, getter=isCharacterCountHidden) _Bool characterCountHidden; // @synthesize characterCountHidden=_characterCountHidden;
@property(retain, nonatomic) UIView *dividerLine; // @synthesize dividerLine=_dividerLine;
@property(retain, nonatomic) UIView *knockoutCoverView; // @synthesize knockoutCoverView=_knockoutCoverView;
@property(retain, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) _UITextFieldRoundedRectBackgroundViewNeue *coverView; // @synthesize coverView=_coverView;
@property(nonatomic) struct CGSize characterCountSize; // @synthesize characterCountSize=_characterCountSize;
@property(nonatomic) struct UIEdgeInsets sendTextAlignmentInsets; // @synthesize sendTextAlignmentInsets=_sendTextAlignmentInsets;
@property(nonatomic) struct CGSize audioButtonSize; // @synthesize audioButtonSize=_audioButtonSize;
@property(nonatomic) struct CGSize sendButtonSize; // @synthesize sendButtonSize=_sendButtonSize;
@property(nonatomic) struct CGSize deleteAudioRecordingButtonSize; // @synthesize deleteAudioRecordingButtonSize=_deleteAudioRecordingButtonSize;
@property(nonatomic) struct CGSize photoButtonSize; // @synthesize photoButtonSize=_photoButtonSize;
@property(retain, nonatomic) UILabel *characterCountLabel; // @synthesize characterCountLabel=_characterCountLabel;
@property(retain, nonatomic) CAMShutterButton *shutterButton; // @synthesize shutterButton=_shutterButton;
@property(retain, nonatomic) CKInlineAudioReplyButtonController *audioReplyButton; // @synthesize audioReplyButton=_audioReplyButton;
@property(retain, nonatomic) CKJoystickGestureRecognizerButton *videoJoystickGestureRecognizerButton; // @synthesize videoJoystickGestureRecognizerButton=_videoJoystickGestureRecognizerButton;
@property(retain, nonatomic) CKJoystickGestureRecognizerButton *audioJoystickGestureRecognizerButton; // @synthesize audioJoystickGestureRecognizerButton=_audioJoystickGestureRecognizerButton;
@property(retain, nonatomic) UIButton *audioButton; // @synthesize audioButton=_audioButton;
@property(retain, nonatomic) UIButton *sendButton; // @synthesize sendButton=_sendButton;
@property(nonatomic) _Bool usesDeleteAudioRecordingButton; // @synthesize usesDeleteAudioRecordingButton=_usesDeleteAudioRecordingButton;
@property(retain, nonatomic) UIButton *deleteAudioRecordingButton; // @synthesize deleteAudioRecordingButton=_deleteAudioRecordingButton;
@property(nonatomic, getter=isSendingMessage) _Bool sendingMessage; // @synthesize sendingMessage=_sendingMessage;
@property(nonatomic, getter=hasUnreachableEmergencyRecipient) _Bool unreachableEmergencyRecipient; // @synthesize unreachableEmergencyRecipient=_unreachableEmergencyRecipient;
@property(nonatomic, getter=hasFailedRecipients) _Bool failedRecipients; // @synthesize failedRecipients=_failedRecipients;
@property(nonatomic, getter=isComposingRecipient) _Bool composingRecipient; // @synthesize composingRecipient=_composingRecipient;
@property(nonatomic) id <CKJoystickGestureRecognizerButtonDelegate> videoDelegate; // @synthesize videoDelegate=_videoDelegate;
@property(nonatomic, getter=isKeyboardVisible) _Bool keyboardVisible; // @synthesize keyboardVisible=_keyboardVisible;
@property(nonatomic) _Bool shouldKnockoutCoverView; // @synthesize shouldKnockoutCoverView=_shouldKnockoutCoverView;
@property(nonatomic, getter=isDimmed) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(retain, nonatomic) UIButton *photoButton; // @synthesize photoButton=_photoButton;
@property(retain, nonatomic) CKMessageEntryWaveformView *waveformView; // @synthesize waveformView=_waveformView;
@property(retain, nonatomic) CKMessageEntryContentView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) CKConversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) id <CKMessageEntryViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldShowCharacterCount; // @synthesize shouldShowCharacterCount=_shouldShowCharacterCount;
@property(nonatomic) _Bool shouldShowPhotoButton; // @synthesize shouldShowPhotoButton=_shouldShowPhotoButton;
@property(nonatomic) _Bool shouldShowSubject; // @synthesize shouldShowSubject=_shouldShowSubject;
@property(nonatomic) _Bool shouldShowSendButton; // @synthesize shouldShowSendButton=_shouldShowSendButton;
- (void)loadRecordedAudioViewsIfNeeded;
- (_Bool)photoButtonEnabled;
- (_Bool)sendButtonEnabled;
- (void)clearResponseContext;
- (void)updateResponseContext;
- (void)updateEntryView;
- (_Bool)shouldRecordForService:(id)arg1;
- (void)messageReceived:(id)arg1;
- (void)conversationPreferredServiceChanged:(id)arg1;
- (void)touchUpInsideSendButton:(id)arg1;
- (void)stopRecordingForRaiseGestureWithFailure:(_Bool)arg1;
- (void)startRecordingForRaiseGesture;
- (void)touchUpInsideDeleteAudioRecordingButton:(id)arg1;
- (void)cancelRecordingAndShowAudioHint;
- (void)presentAudioJoystick;
- (void)joystickCancelAction:(id)arg1;
- (void)joystickSendAction:(id)arg1;
- (void)joystickShutterButtonDownAction:(id)arg1;
- (void)_toggleAudioPlaybackJoystickIsPlaying:(_Bool)arg1;
- (void)messageEntryRecordedAudioView:(id)arg1 mediaObjectDidFinishPlaying:(id)arg2;
- (void)joystickPlaybackButtonUpAction:(id)arg1;
- (void)joystickShutterButtonUpAction:(id)arg1;
- (double)_accessoryViewFadeDuration;
- (void)audioReplyButtonCancel:(id)arg1;
- (void)audioReplyButtonStop:(id)arg1;
- (void)audioReplyButtonStart:(id)arg1;
- (void)joystickGestureRecognizerButtonGestureDidEnd:(id)arg1;
- (void)joystickGestureRecognizerButtonGestureDidBegin:(id)arg1;
- (_Bool)joystickGestureRecognizerButtonShouldRecognizeGesture:(id)arg1;
- (_Bool)joystickGestureRecognizerButtonIsShowingHint:(id)arg1;
- (void)joystickGestureRecognizerButtonShowHint:(id)arg1;
- (_Bool)joystickGestureRecognizerButtonShouldShowHint:(id)arg1;
- (void)joystickGestureRecognizerButtonDidTouchUpInsideButton:(id)arg1;
- (void)joystickGestureRecognizerButtonDidTouchDownButton:(id)arg1;
- (void)joystickControllerWillShrinkJoystick:(id)arg1 animated:(_Bool)arg2;
- (void)joystickControllerWillExpandJoystick:(id)arg1 animated:(_Bool)arg2;
- (void)joystickControllerDidDismissJoystick:(id)arg1;
- (void)joystickControllerWillDismissJoystick:(id)arg1 animated:(_Bool)arg2;
- (void)joystickControllerWillPresentJoystick:(id)arg1 animated:(_Bool)arg2;
- (void)audioRecorderDidUpdateAveragePower:(float)arg1;
- (void)audioRecorderRecordingDidFail:(id)arg1;
- (void)audioRecorderRecordingDidChange:(id)arg1;
- (_Bool)messageEntryContentView:(id)arg1 shouldInsertMediaObjects:(id)arg2;
- (void)messageEntryContentViewDidEndEditing:(id)arg1;
- (void)messageEntryContentViewDidBeginEditing:(id)arg1;
- (_Bool)messageEntryContentViewShouldBeginEditing:(id)arg1;
- (void)messageEntryContentViewDidChange:(id)arg1;
@property(readonly, nonatomic, getter=isRecording) _Bool recording;
@property(readonly, nonatomic) _Bool isAudioJoystickVisible;
@property(readonly, retain, nonatomic) CKComposition *compositionWithAcceptedAutocorrection;
@property(retain, nonatomic) CKComposition *composition;
- (id)initWithFrame:(struct CGRect)arg1 shouldShowSendButton:(_Bool)arg2 shouldShowSubject:(_Bool)arg3 shouldShowPhotoButton:(_Bool)arg4 shouldShowCharacterCount:(_Bool)arg5;
- (double)placeholderHeight;
- (void)setFrame:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)configureForDisplayMode:(unsigned long long)arg1;
- (void)layoutSubviews;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKMessageEntryWaveformView : UIView
{
    double _duration;
    NSMutableArray *_powerLevels;
    UIImageView *_waveformImageView;
    unsigned long long _maxPowerLevelsCount;
    UIImageView *_balloonImageView;
    UILabel *_timeLabel;
}

+ (id)waveformCurveTransform;
@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
@property(retain, nonatomic) UIImageView *balloonImageView; // @synthesize balloonImageView=_balloonImageView;
@property(nonatomic) unsigned long long maxPowerLevelsCount; // @synthesize maxPowerLevelsCount=_maxPowerLevelsCount;
@property(retain, nonatomic) UIImageView *waveformImageView; // @synthesize waveformImageView=_waveformImageView;
@property(retain, nonatomic) NSMutableArray *powerLevels; // @synthesize powerLevels=_powerLevels;
@property(nonatomic) double duration; // @synthesize duration=_duration;
- (void)updateWaveform;
- (void)clearPowerLevels;
- (void)appendPowerLevel:(double)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKMessageStatusChatItem : CKChatItem
{
    _Bool _buttonSizeLoaded;
    NSAttributedString *_transcriptButtonText;
    struct CGSize _buttonSize;
    struct UIEdgeInsets _buttonTextAlignmentInsets;
}

+ (id)thePastDateFormatter;
+ (id)thisWeekRelativeDateFormatter;
+ (id)todayDateFormatter;
@property(nonatomic, getter=isButtonSizeLoaded) _Bool buttonSizeLoaded; // @synthesize buttonSizeLoaded=_buttonSizeLoaded;
@property(copy, nonatomic) NSAttributedString *transcriptButtonText; // @synthesize transcriptButtonText=_transcriptButtonText;
- (struct CGSize)loadButtonSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (id)loadTranscriptButtonText;
- (unsigned long long)count;
- (id)time;
- (_Bool)isFromMe;
- (long long)expireStatusType;
- (long long)statusType;
- (id)now;
@property(readonly, nonatomic) long long buttonType;
@property(readonly, nonatomic) struct UIEdgeInsets buttonTextAlignmentInsets; // @synthesize buttonTextAlignmentInsets=_buttonTextAlignmentInsets;
@property(readonly, nonatomic) struct CGSize buttonSize; // @synthesize buttonSize=_buttonSize;
- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (id)loadTranscriptText;
- (struct UIEdgeInsets)transcriptTextAlignmentInsets;
- (void)unloadSize;
- (void)unloadTranscriptText;
- (Class)cellClass;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets)contentInsets;
- (void)dealloc;

@end

@interface CKScrollViewController : CKViewController
{
    _Bool _topInsetIncludesPalette;
    _Bool _keyboardVisible;
    _Bool _keyboardInteractionCancelled;
    UIScrollView *_scrollView;
    double _topInsetPadding;
    double _bottomInsetPadding;
    CKScheduledUpdater *_updater;
    struct CGRect _keyboardScreenFrame;
}

@property(retain, nonatomic) CKScheduledUpdater *updater; // @synthesize updater=_updater;
@property(nonatomic) _Bool keyboardInteractionCancelled; // @synthesize keyboardInteractionCancelled=_keyboardInteractionCancelled;
@property(nonatomic) struct CGRect keyboardScreenFrame; // @synthesize keyboardScreenFrame=_keyboardScreenFrame;
@property(nonatomic, getter=isKeyboardVisible) _Bool keyboardVisible; // @synthesize keyboardVisible=_keyboardVisible;
@property(readonly, nonatomic) double bottomInsetPadding; // @synthesize bottomInsetPadding=_bottomInsetPadding;
@property(readonly, nonatomic) double topInsetPadding; // @synthesize topInsetPadding=_topInsetPadding;
@property(readonly, nonatomic) _Bool topInsetIncludesPalette; // @synthesize topInsetIncludesPalette=_topInsetIncludesPalette;
@property(readonly, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (double)_visibleKeyboardHeight;
- (double)_bottomRotatingFooterHeight;
- (void)_entryViewWillRotate:(id)arg1;
- (void)_changedStatusBarFrame:(id)arg1;
- (void)_updateScrollGeometryWithDuration:(double)arg1;
- (void)keyboardVisibilityWillChange;
- (void)keyboardWillHideViaGesture;
- (void)contentInsetDidChange;
- (void)contentInsetWillChange:(struct UIEdgeInsets)arg1 animated:(_Bool)arg2 duration:(double)arg3;
- (void)endHoldingScrollGeometryUpdatesForKey:(id)arg1;
- (void)beginHoldingScrollGeometryUpdatesForKey:(id)arg1;
- (double)bottomInsetWithoutAccessoryView;
- (double)accessoryViewHeight;
@property(readonly, nonatomic, getter=isKeyboardOnscreenWithoutAccessoryView) _Bool keyboardOnscreenWithoutAccessoryView;
@property(readonly, nonatomic, getter=isKeyboardUndocked) _Bool keyboardUndocked;
- (double)visibleHeightAboveKeyboard;
- (struct UIEdgeInsets)navigationBarInsetsWithoutPalette;
- (struct UIEdgeInsets)navigationBarInsets;
@property(readonly, nonatomic) struct CGRect keyboardFrame;
- (void)updateScrollGeometry;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)keyboardDidShowOrHide:(id)arg1;
- (void)keyboardWillShowOrHide:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CKTranscriptController : CKScrollViewController <CKVideoMessageRecordingViewControllerDelegate, CKCameraSheetViewControllerDelegate, UIViewControllerTransitioningDelegate, CKJoystickGestureRecognizerButtonDelegate, UIAlertViewDelegate, ABPeoplePickerNavigationControllerDelegate, CKTranscriptCollectionViewControllerDelegate, CKComposeRecipientSelectionControllerDelegate, CKMessageEntryViewDelegate, IMChatSendProgressDelegate, CKTrimControllerDelegate, UIActionSheetDelegate, UIModalViewDelegate, ABPersonViewControllerDelegate, ABUnknownPersonViewControllerDelegate, UINavigationControllerDelegate, AFContextProvider, UIKeyInput, QLPreviewControllerDelegate>
{
    CKConversation *_conversation;
    UINavigationItem *_navItem;
    CKGradientReferenceView *_backPlacard;
    CKMessageEntryView *_entryView;
    id <CKTranscriptComposeDelegate> _composeDelegate;
    CKTranscriptTypingIndicatorCell *_typingIndicatorForSendAnimation;
    CDUnknownBlockType _scrollBlock;
    NSArray *_newCompositionAddresses;
    NSString *_serviceAvailabilityKey;
    CKComposition *_newComposition;
    CKMessageEncodingInfo *_textMessageEncodingInfo;
    CKAudioTrimViewController *_audioTrimController;
    CKVideoTrimController *_videoTrimController;
    long long _storedStatusBarStyle;
    int _setupState;
    _Bool _dimmed;
    UITapGestureRecognizer *_loggingTapGestureRecognizer;
    CDUnknownBlockType _alertViewHandler;
    UIWindow *_autorotateDisabledWindow;
    float _sendProgress;
    unsigned long long _sendProgressSendCount;
    unsigned long long _sendProgressTotalCount;
    BOOL _progressColor;
    unsigned int _locked:1;
    unsigned int _viewNeedsSetup:1;
    unsigned int _newRecipient:1;
    unsigned int _sending:1;
    unsigned int _transitioningToTranscript:1;
    unsigned int _entryViewCanAcceptFocus:1;
    unsigned int _isAnimatingMessageSend:1;
    unsigned int _entryViewWasActiveBeforeEdit:1;
    unsigned int _entryViewWasActiveBeforePushingViewController:1;
    unsigned int _entryViewWasActiveBeforeNewComposeThrow:1;
    unsigned int _entryViewWasActiveBeforeSwitchingConversations:1;
    unsigned int _recipientSelectionViewWasActiveBeforeFirstResponderChange:1;
    unsigned int _automaticKeyboardWasDisabled:1;
    unsigned int _togglingEditing:1;
    unsigned int _keyboardUndocked:1;
    unsigned int _suspendScrollDueToMediaViewing:1;
    unsigned int _triedToResetEntryViewSizeWhileNotInAWindow:1;
    unsigned int _triedToResetOverlayViewSizeWhileNotInAWindow:1;
    unsigned int _preparingForResume:1;
    unsigned int _settingConversation:1;
    unsigned int _needsTransitionToFullTranscript:1;
    unsigned int _transcriptNeedsUpdate;
    unsigned int _storedStatusBarIsHidden:1;
    UIToolbar *_actionsToolbar;
    _Bool _canSafelyDismissImagePicker;
    NSNotification *_keyboardNotification;
    _Bool _showingKeyboard;
    _Bool _didCancel;
    NSString *_initialSystemKeyboardID;
    UIImagePickerController *_mediaController;
    CKQLPreviewController *_previewController;
    _Bool _safeToMarkAsRead;
    _Bool _showingVideoMessageRecordingView;
    CKPhotoPickerSheetViewController *_photoPickerController;
    _Bool _showingPhotoPicker;
    _Bool _hasPrepopulatedRecipients;
    _Bool _programaticallyMadeEntryViewActive;
    _Bool _hideEntryViewForModalDismissal;
    _Bool _visible;
    CKComposition *_presetComposition;
    CKVideoMessageRecordingViewController *_videoMessageRecordingViewController;
    CKTranscriptCollectionViewController *_collectionViewController;
    NSArray *_newCompositionRecipients;
    CKComposeRecipientSelectionController *_composeRecipientSelectionController;
    CKTranscriptGroupHeaderView *_groupHeaderView;
    CKScheduledUpdater *_typingUpdater;
    CKComposition *_compositionBeingTrimmed;
    UIView *_throwAnimationEnforcementView;
    UIView *_throwAnimationSnapshotView;
    NSMutableArray *_throwBalloonViews;
    NSMutableArray *_throwIntermediateFrames;
    NSMutableArray *_throwEndFrames;
    CKSendAnimationWindow *_sendAnimationWindow;
    UIProgressView *_progressBar;
    UIBarButtonItem *_detailsButton;
    UIBarButtonItem *_clearAllItem;
    UIBarButtonItem *_editCancelItem;
    UIBarButtonItem *_composeCancelItem;
    CKRaiseGesture *_raiseGesture;
    CKScheduledUpdater *_refreshServiceForSendingUpdater;
}

+ (id)readerScrollPositionCache;
@property(retain, nonatomic) CKScheduledUpdater *refreshServiceForSendingUpdater; // @synthesize refreshServiceForSendingUpdater=_refreshServiceForSendingUpdater;
@property(retain, nonatomic) CKRaiseGesture *raiseGesture; // @synthesize raiseGesture=_raiseGesture;
@property(retain, nonatomic) UIBarButtonItem *composeCancelItem; // @synthesize composeCancelItem=_composeCancelItem;
@property(retain, nonatomic) UIBarButtonItem *editCancelItem; // @synthesize editCancelItem=_editCancelItem;
@property(retain, nonatomic) UIBarButtonItem *clearAllItem; // @synthesize clearAllItem=_clearAllItem;
@property(retain, nonatomic) UIBarButtonItem *detailsButton; // @synthesize detailsButton=_detailsButton;
@property(retain, nonatomic) UIProgressView *progressBar; // @synthesize progressBar=_progressBar;
@property(retain, nonatomic) CKSendAnimationWindow *sendAnimationWindow; // @synthesize sendAnimationWindow=_sendAnimationWindow;
@property(retain, nonatomic) NSMutableArray *throwEndFrames; // @synthesize throwEndFrames=_throwEndFrames;
@property(retain, nonatomic) NSMutableArray *throwIntermediateFrames; // @synthesize throwIntermediateFrames=_throwIntermediateFrames;
@property(retain, nonatomic) NSMutableArray *throwBalloonViews; // @synthesize throwBalloonViews=_throwBalloonViews;
@property(retain, nonatomic) UIView *throwAnimationSnapshotView; // @synthesize throwAnimationSnapshotView=_throwAnimationSnapshotView;
@property(retain, nonatomic) UIView *throwAnimationEnforcementView; // @synthesize throwAnimationEnforcementView=_throwAnimationEnforcementView;
@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
@property(retain, nonatomic) CKComposition *compositionBeingTrimmed; // @synthesize compositionBeingTrimmed=_compositionBeingTrimmed;
@property(retain, nonatomic) CKScheduledUpdater *typingUpdater; // @synthesize typingUpdater=_typingUpdater;
@property(retain, nonatomic) CKTranscriptGroupHeaderView *groupHeaderView; // @synthesize groupHeaderView=_groupHeaderView;
@property(readonly, retain, nonatomic) CKComposeRecipientSelectionController *composeRecipientSelectionController; // @synthesize composeRecipientSelectionController=_composeRecipientSelectionController;
@property(nonatomic) _Bool hideEntryViewForModalDismissal; // @synthesize hideEntryViewForModalDismissal=_hideEntryViewForModalDismissal;
@property(nonatomic) _Bool programaticallyMadeEntryViewActive; // @synthesize programaticallyMadeEntryViewActive=_programaticallyMadeEntryViewActive;
@property(nonatomic) _Bool hasPrepopulatedRecipients; // @synthesize hasPrepopulatedRecipients=_hasPrepopulatedRecipients;
@property(copy, nonatomic) NSArray *newCompositionRecipients; // @synthesize newCompositionRecipients=_newCompositionRecipients;
@property(retain, nonatomic) CKTranscriptCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(retain, nonatomic) CKVideoMessageRecordingViewController *videoMessageRecordingViewController; // @synthesize videoMessageRecordingViewController=_videoMessageRecordingViewController;
@property(retain, nonatomic) CKComposition *presetComposition; // @synthesize presetComposition=_presetComposition;
@property(retain, nonatomic) CKMessageEntryView *entryView; // @synthesize entryView=_entryView;
@property(nonatomic) _Bool safeToMarkAsRead; // @synthesize safeToMarkAsRead=_safeToMarkAsRead;
@property(copy, nonatomic) NSArray *newCompositionAddresses; // @synthesize newCompositionAddresses=_newCompositionAddresses;
@property(copy, nonatomic) CDUnknownBlockType alertHandler; // @synthesize alertHandler=_alertViewHandler;
@property(copy, nonatomic) CDUnknownBlockType scrollBlock; // @synthesize scrollBlock=_scrollBlock;
@property(nonatomic, getter=isDimmed) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(nonatomic) id <CKTranscriptComposeDelegate> composeDelegate; // @synthesize composeDelegate=_composeDelegate;
- (_Bool)_shouldUseExistingConversations;
- (void)showPopoverWithContentViewController:(id)arg1 withPresenter:(CDUnknownBlockType)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)_alertView:(id)arg1 externalButtonTitleForMainScreenButtonTitle:(id)arg2 atIndex:(long long)arg3;
@property(nonatomic) NSNumber *canSafelyDismissImagePicker;
- (struct CGRect)gradientFrameWithInsets:(struct UIEdgeInsets)arg1;
- (_Bool)isEditable;
- (void)deleteBackward;
- (void)insertText:(id)arg1;
- (_Bool)hasText;
- (_Bool)becomeFirstResponder;
- (id)inputAccessoryView;
- (_Bool)canBecomeFirstResponder;
- (void)showKeyboardForReply;
- (void)_resetEntryViewSize;
- (struct CGSize)_idealSizeForEntryView;
- (void)makeEntryViewActiveAfterSend;
- (void)willDismissModally;
- (void)disableCameraAttachments;
- (_Bool)photoButtonEnabled;
- (void)reloadEntryViewIfNeeded;
- (id)_fieldForFocus;
- (void)_makeFieldForFocusActive;
- (void)_makeRecipientEntryViewActive;
- (_Bool)_makeContentEntryViewActive;
- (void)_updateActionsToolbarItems;
- (id)_actionsToolbar;
- (void)_setVisible:(_Bool)arg1;
- (_Bool)_isVisible;
- (_Bool)shouldDismissAfterSend;
- (_Bool)_isGroupMessage;
- (id)getCurrentContext;
- (_Bool)allowContextProvider:(id)arg1;
- (void)chat:(id)arg1 progressDidChange:(float)arg2 sendingMessages:(id)arg3 sendCount:(unsigned long long)arg4 totalCount:(unsigned long long)arg5 finished:(_Bool)arg6;
- (void)recipientSelectionController:(id)arg1 didSelectConversation:(id)arg2;
- (struct UIEdgeInsets)navigationBarInsetsForRecipientSelectionController:(id)arg1;
- (void)recipientSelectionController:(id)arg1 didFinishAvailaiblityLookupForRecipient:(id)arg2;
- (void)recipientSelectionControllerDidPushABViewController:(id)arg1;
- (void)recipientSelectionControllerRequestDismissKeyboard:(id)arg1;
- (void)recipientSelectionController:(id)arg1 textDidChange:(id)arg2;
- (void)recipientSelectionControllerSearchListDidShowOrHide:(id)arg1;
- (void)recipientSelectionControllerReturnPressed:(id)arg1;
- (void)recipientSelectionControllerDidChangeSize:(id)arg1;
- (void)_setEntryViewVisible:(_Bool)arg1;
- (id)navigationItem;
- (void)showAddToExistingContactViewForEntity:(id)arg1;
- (void *)_newPersonWithValue:(struct __CFString *)arg1 forMultiValueProperty:(int)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)dismissPeoplePicker:(id)arg1;
- (void)peoplePickerNavigationController:(id)arg1 insertEditorDidConfirm:(_Bool)arg2 forPerson:(void *)arg3;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldShowInsertEditorForPerson:(void *)arg2 insertProperty:(int *)arg3 copyInsertValue:(id *)arg4 copyInsertLabel:(id *)arg5;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)unknownPersonViewController:(id)arg1 didResolveToPerson:(void *)arg2;
- (_Bool)unknownPersonViewController:(id)arg1 shouldPresentMessageCompositionWithVCard:(id)arg2 filename:(id)arg3;
- (_Bool)personViewController:(id)arg1 shouldPresentMessageCompositionWithVCard:(id)arg2 filename:(id)arg3;
- (_Bool)sharedShouldPresentMessageCompositionWithVCard:(id)arg1 filename:(id)arg2;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)_displayABPersonViewController:(id)arg1;
- (id)_abPersonViewControllerForPerson:(void *)arg1 property:(int)arg2 withIdentifier:(int)arg3;
- (void)transcriptCollectionViewControllerChatItemsDidChange:(id)arg1;
- (void)transcriptCollectionViewControllerPlayingAudioDidChange:(id)arg1;
- (_Bool)transcriptCollectionViewControllerShouldPlayAudio:(id)arg1;
- (void)transcriptCollectionViewControllerDidInset:(id)arg1;
- (void)transcriptCollectionViewControllerWillInset:(id)arg1 targetContentInset:(inout struct UIEdgeInsets *)arg2;
- (void)transcriptCollectionViewController:(id)arg1 moreButtonTappedForRowAtIndexPath:(id)arg2;
- (void)transcriptCollectionViewController:(id)arg1 balloonViewTappedForItemWithIndexPath:(id)arg2;
- (void)transcriptCollectionViewController:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)transcriptCollectionViewController:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)_actuallyClearCurrentMessageThread;
- (_Bool)hasUnreachableEmergencyRecipient;
- (_Bool)hasFailedRecipients;
- (_Bool)isComposingRecipient;
- (void)setNewRecipient:(_Bool)arg1;
- (_Bool)isNewRecipient;
- (void)setupForNewRecipient;
- (void)_refreshViewForNewRecipientIfNeeded;
- (void)setNewComposition:(id)arg1 addresses:(id)arg2;
- (void)setNewComposition:(id)arg1 composeRecipients:(id)arg2;
- (id)unatomizedRecipientText;
- (id)proposedRecipients;
- (id)recipients;
- (void)setComposition:(id)arg1;
- (void)clearComposition;
- (id)composition;
- (_Bool)_resizeMessageEntryView:(id)arg1 animate:(_Bool)arg2;
- (_Bool)_resizeMessageEntryViewWithAnimate:(_Bool)arg1;
- (_Bool)getContainerWidth:(double *)arg1 offset:(double *)arg2;
- (void)messageEntryViewRaiseGestureAutoSend:(id)arg1;
- (void)messageEntryViewSendButtonHitWhileDisabled:(id)arg1;
- (void)messageEntryViewSendButtonHit:(id)arg1;
- (_Bool)messageEntryView:(id)arg1 shouldInsertMediaObjects:(id)arg2;
- (void)updateTyping;
- (void)messageEntryViewRecordingDidChange:(id)arg1;
- (void)messageEntryViewDidChange:(id)arg1;
- (_Bool)messageEntryViewShouldBeginEditing:(id)arg1;
- (void)messageEntryViewDidEndEditing:(id)arg1;
- (void)messageEntryViewDidBeginEditing:(id)arg1;
- (void)sendComposition:(id)arg1;
- (void)trimController:(id)arg1 didFinishTrimmingMediaObject:(id)arg2 withReplacementMediaObject:(id)arg3;
- (void)trimControllerDidCancel:(id)arg1;
- (void)presentTrimControllerForMediaObject:(id)arg1;
- (void)startTrimmingMediaObjectsInComposition:(id)arg1;
- (id)nextMediaObjectToTrimInComposition:(id)arg1;
- (_Bool)_mediaObjectNeedsTrimming:(id)arg1;
- (void)_startCreatingNewMessageForSending:(id)arg1;
- (void)scrollToMessage:(id)arg1 highlight:(_Bool)arg2;
- (void)_highlightMessage:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)clearCurrentMessageThread;
- (void)refreshTranscriptWithAnimation:(_Bool)arg1;
- (void)refreshTranscriptIfNeededWithAnimation:(_Bool)arg1;
- (void)_cancelMessageSendAnimation;
- (void)_finishSendAnimation;
- (void)_cleanupThrowData;
- (void)startSendAnimationForMessage:(id)arg1 shouldClearEntryComposition:(_Bool)arg2;
- (void)transitionFromNewMessageToConversation;
- (void)_endTransitioningToTranscript;
- (void)_beginTransitioningToTranscript;
- (struct CGPoint)_transcriptScrollToBottomOffsetWithHeightDelta:(double)arg1;
- (void)_setupTranscriptTableHeader;
- (void)updateRaiseGesture;
- (void)raiseGestureRecognized:(id)arg1;
- (void)clearButtonClicked:(id)arg1;
- (void)_detailsButtonPressed:(id)arg1;
- (void)_editCancelButtonPressed:(id)arg1;
- (void)_forwardSelectedMessages:(id)arg1;
- (void)_deleteSelectedMessages:(id)arg1;
- (void)dismissViewControllerWithTransition:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)cancelButtonClicked:(id)arg1;
- (void)updateNavigationButtons;
- (_Bool)wantsFullScreenLayout;
- (void)updateTitle;
- (void)_setupViewForConversation;
- (void)setSendingMessage:(_Bool)arg1;
- (_Bool)isSendingMessage;
- (void)_setEntryViewSize:(struct CGSize)arg1 animate:(_Bool)arg2 animationLength:(float)arg3;
- (void)_resetGroupHeaderPosition;
- (void)_setupTranscriptGroupHeader;
- (void)_removeRecipientSelectionView;
- (void)_setupRecipientSelectionView;
- (void)_conversationJoinStateDidChange:(id)arg1;
- (void)_conversationParticipantsChanged:(id)arg1;
- (void)_refreshActiveChat:(id)arg1;
- (void)_refreshServiceForSending;
- (void)refreshServiceForSending;
- (id)chat;
- (id)conversation;
- (void)setConversation:(id)arg1;
- (void)deregisterSendProgressDelegate;
- (void)registerSendProgressDelegate;
- (void)_setConversation:(id)arg1;
- (void)_refreshViewForCurrentConversationIfNeeded;
- (void)scrollBubbleIndexToVisible:(int)arg1;
- (struct CGPoint)bestVisibleOffsetForBubbleAtIndex:(long long)arg1;
- (void)_receivedConversationDisplayNameDidChangeNotification:(id)arg1;
- (void)_receivedConversationDowngradeStateChangedNotification:(id)arg1;
- (void)_receivedConversationPreferredServiceChangedNotification:(id)arg1;
- (void)_raiseToListenSettingChanged:(id)arg1;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (void)_localeDidChange:(id)arg1;
- (void)_transferFinished:(id)arg1;
- (void)_transferRestored:(id)arg1;
- (void)significantTimeChange;
- (void)_handleAddressBookChangedNotification:(id)arg1;
- (void)_chatUnreadCountDidChange:(id)arg1;
- (void)systemApplicationWillEnterForeground;
- (void)parentControllerDidResume:(_Bool)arg1 animating:(_Bool)arg2;
- (void)prepareForResume;
- (void)didReceiveMemoryWarning;
- (void)prepareForSuspend;
- (void)_performResume:(_Bool)arg1;
- (void)_screenUnlocked:(id)arg1;
- (void)_screenLocked:(id)arg1;
- (void)parentControllerDidBecomeActive;
- (void)_applicationBecameActive:(id)arg1;
- (void)registerForNotifications;
- (void)registerForSharedNotifications;
- (void)_confirmReadReceiptSettings;
- (void)_askToTurnOnReadReceiptsIfNeeded;
- (void)_markMessagesAsReadIfNecessary;
- (void)_updateBackPlacardSubviews;
- (id)rotatingFooterView;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldAutorotate;
- (id)textInputContextIdentifier;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)setupScrollingForKeyboardInteraction;
- (void)keyboardVisibilityWillChange;
- (void)keyboardWillHideViaGesture;
- (void)contentInsetDidChange;
- (void)contentInsetWillChange:(struct UIEdgeInsets)arg1 animated:(_Bool)arg2 duration:(double)arg3;
- (double)bottomInsetPadding;
- (double)topInsetPadding;
- (_Bool)topInsetIncludesPalette;
- (id)scrollView;
- (void)viewDidMoveToWindow:(id)arg1 shouldAppearOrDisappear:(_Bool)arg2;
- (void)_saveDraftState;
- (void)viewDidAppearDeferredSetup;
- (void)performResumeDeferredSetup;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (_Bool)_canReloadView;
- (void)viewWillUnload;
- (void)loadView;
- (void)dealloc;
- (id)initWithNavigationController:(id)arg1;
- (id)init;
- (id)previewController:(id)arg1 transitionImageForPreviewItem:(id)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewController:(id)arg1 frameForPreviewItem:(id)arg2 inSourceView:(id *)arg3;
- (void)previewController:(id)arg1 didTransitionToState:(long long)arg2;
- (void)previewController:(id)arg1 willTransitionToState:(long long)arg2;
- (void)previewControllerDidDismiss:(id)arg1;
- (void)previewControllerWillDismiss:(id)arg1;
- (void)_showCurrentPreviewItemForPreviewController:(id)arg1;
- (void)_hideCurrentPreviewItemForPreviewController:(id)arg1;
- (_Bool)previewController:(id)arg1 shouldOpenURL:(id)arg2 forPreviewItem:(id)arg3;
- (void)readerViewControllerWillDismiss:(id)arg1;
- (id)_supportedMediaTypesForPhotoPicker;
- (void)_showVCalViewerForMediaObject:(id)arg1;
- (void)_showVCardViewerForMediaObject:(id)arg1;
- (void)_showMapViewerForMediaObject:(id)arg1;
- (void)addPassesViewControllerDidFinish:(id)arg1;
- (void)_showPassbookCardViewForMediaObject:(id)arg1;
- (void)showViewerForMediaObject:(id)arg1;
- (void)dismissPresentedViewController:(id)arg1;
- (void)showReaderForPart:(id)arg1;
- (_Bool)_displayPreviewItemForMediaObject:(id)arg1;
- (void)updateQLPreviewControllerIfVisible;
- (id)previewItemsForMediaObject:(id)arg1 currentItemIndex:(long long *)arg2 containsRestoring:(_Bool *)arg3;
- (void)video:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)ckPhotoPickerViewController:(id)arg1 resizeToSize:(struct CGSize)arg2;
- (void)hideMediaPickerAnimated:(_Bool)arg1;
- (void)showMediaPicker:(id)arg1 animated:(_Bool)arg2;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)_userDidCaptureImage;
- (void)_userDidCancelCapturingImage;
- (void)_showPhotoPickerWithSourceType:(long long)arg1;
- (void)ckPhotoPickerViewController:(id)arg1 selectedAssets:(id)arg2 shouldSend:(_Bool)arg3;
- (void)ckPhotoPickerViewControllerCancel:(id)arg1;
- (void)ckPhotoPickerViewControllerProceedToChooseExisting:(id)arg1;
- (void)ckPhotoPickerViewControllerProceedToTakeAPicture:(id)arg1;
- (void)_transitionFromCKPhotoPickerSheet:(id)arg1 toImagePickerWithSourceType:(long long)arg2;
- (void)dismissPhotoPickerViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentPhotoPickerViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_showPhotosPicker;
- (void)_showMediaSourceSelectionSheet;
- (void)addMedia:(id)arg1;
- (_Bool)_shouldAllowCameraAttachments;
- (void)dismissVideoMessageRecordingViewController;
- (void)ckVideoMessageRecordingViewController:(id)arg1 mediaObjectCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoMessageRecordingViewControllerRecordingCanceled:(id)arg1;
- (void)joystickGestureRecognizerButtonGestureDidEnd:(id)arg1;
- (void)joystickGestureRecognizerButtonGestureDidBegin:(id)arg1;
- (_Bool)joystickGestureRecognizerButtonShouldRecognizeGesture:(id)arg1;
- (_Bool)joystickGestureRecognizerButtonIsShowingHint:(id)arg1;
- (void)joystickGestureRecognizerButtonShowHint:(id)arg1;
- (_Bool)joystickGestureRecognizerButtonShouldShowHint:(id)arg1;
- (void)joystickGestureRecognizerButtonDidTouchUpInsideButton:(id)arg1;
- (void)joystickGestureRecognizerButtonDidTouchDownButton:(id)arg1;
- (void)prewarmCamera:(id)arg1;
- (void)_setupMediaEntry;
- (void)_entryDebugShowEntryHUD;
- (void)entryDebugSliderChange:(id)arg1;
- (void)entryDebugClear;

// Remaining properties
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(nonatomic) long long spellCheckingType;
@property(readonly) Class superclass;

@end

@interface CKModalTranscriptController : CKTranscriptController
{
    _Bool _mimeType;
    _Bool _alreadySetUp;
    NSMutableArray *_partsToInsert;
    NSMutableArray *_typesToInsert;
    int _entryViewInvisible;
    _Bool _cameraSelectionDisabled;
    _Bool _forceMMS;
}

@property(nonatomic) _Bool forceMMS; // @synthesize forceMMS=_forceMMS;
@property(nonatomic) _Bool mimeType; // @synthesize mimeType=_mimeType;
- (_Bool)_shouldUseExistingConversations;
- (_Bool)_shouldUseDefaultFirstResponder;
- (void)_conversationListDidFinishLoading:(id)arg1;
- (void)registerForNotifications;
- (void)viewServiceWillAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_setConversation:(id)arg1;
- (void)transitionFromNewMessageToConversation;
- (_Bool)shouldDismissAfterSend;
- (void)setTextEntryContentsVisible:(_Bool)arg1;
- (_Bool)_shouldAllowCameraAttachments;
- (void)disableCameraAttachments;
- (void)setCanEditRecipients:(_Bool)arg1;
- (void)setPendingAddresses:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)getContainerWidth:(double *)arg1 offset:(double *)arg2;
- (void)insertData:(id)arg1 MIMEType:(id)arg2 exportedFilename:(id)arg3;
- (void)insertFileURL:(id)arg1 filename:(id)arg2 transcoderUserInfo:(id)arg3;
- (_Bool)_insertMediaObject:(id)arg1;
- (void)dealloc;

@end

@interface CKMovieAttachmentItem : CKAttachmentItem
{
}

+ (id)UTITypes;
- (id)previewItemTitle;
- (id)_generateThumbnailFillToSize:(struct CGSize)arg1;
- (void)generatePreviewWithCompletion:(CDUnknownBlockType)arg1;

@end

@interface CKMovieBalloonView : CKImageBalloonView
{
    CKMovieMediaObject *_mediaObject;
    AVPlayerItem *_avPlayerItem;
    AVPlayer *_avPlayer;
    AVPlayerLayer *_avPlayerLayer;
}

@property(retain, nonatomic, setter=setAVPlayerLayer:) AVPlayerLayer *avPlayerLayer; // @synthesize avPlayerLayer=_avPlayerLayer;
@property(retain, nonatomic, setter=setAVPlayer:) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(retain, nonatomic, setter=setAVPlayerItem:) AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(retain, nonatomic) CKMovieMediaObject *mediaObject; // @synthesize mediaObject=_mediaObject;
- (void)cleanupPlayerIfNeeded;
- (void)videoDidReachEnd:(id)arg1;
- (void)tapGestureRecognized:(id)arg1;
- (void)prepareForDisplay;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (id)description;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;

// Remaining properties
@property(nonatomic) id <CKMovieBalloonViewDelegate> delegate;

@end

@interface CKMovieMediaObject : CKAVMediaObject
{
    _Bool _hasVideoTrack;
    _Bool _checkedVideoInfo;
    AVURLAsset *_asset;
    struct CGSize _pxSize;
}

+ (_Bool)isPreviewable;
+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
+ (Class)__ck_attachmentItemClass;
@property(retain, nonatomic) AVURLAsset *asset; // @synthesize asset=_asset;
@property(nonatomic) _Bool checkedVideoInfo; // @synthesize checkedVideoInfo=_checkedVideoInfo;
@property(nonatomic) struct CGSize pxSize; // @synthesize pxSize=_pxSize;
@property(nonatomic) _Bool hasVideoTrack; // @synthesize hasVideoTrack=_hasVideoTrack;
- (void)updateVideoInfo;
- (_Bool)hasNoVideoTrack;
- (id)previewItemTitle;
- (_Bool)canBeAttachmentContiguous;
- (void)export:(id)arg1;
- (_Bool)canExport;
- (struct CGSize)bbSize;
- (id)generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (id)generateThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)previewForWidth:(double)arg1 orientation:(BOOL)arg2;
- (Class)previewBalloonViewClass;
- (id)previewCachesFileURLWithOrientation:(BOOL)arg1 extension:(id)arg2;
- (id)previewCacheKeyWithOrientation:(BOOL)arg1;
- (int)mediaType;
- (void)dealloc;

@end

@interface CKMultiCache : IMMultiDict
{
    unsigned long long _limit;
}

@property(nonatomic) unsigned long long limit; // @synthesize limit=_limit;
- (void)pushObject:(id)arg1 forKey:(id)arg2;
- (id)init;
- (void)dealloc;

@end

@interface CKMultiDict : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    unsigned long long _count;
    NSMutableDictionary *_dictionary;
}

@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *lockQueue; // @synthesize lockQueue=_lockQueue;
- (id)allKeys;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectsForKey:(id)arg1;
- (id)objectsForKey:(id)arg1;
- (id)dequeueObjectForKey:(id)arg1;
- (id)headObjectForKey:(id)arg1;
- (void)enqueueObject:(id)arg1 forKey:(id)arg2;
- (id)popObjectForKey:(id)arg1;
- (id)peekObjectForKey:(id)arg1;
- (void)pushObject:(id)arg1 forKey:(id)arg2;
- (id)description;
- (id)init;
- (void)dealloc;

@end

@interface CKNavigationBar : UINavigationBar
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface CKNavigationController : UINavigationController
{
}

- (_Bool)shouldAutorotate;

@end

@interface CKNavigationItem : UINavigationItem
{
    UIScrollView *_contentScrollView;
}

@property(nonatomic) UIScrollView *contentScrollView; // @synthesize contentScrollView=_contentScrollView;

@end

@interface CKParticipantChangeChatItem : CKMultilineStampChatItem
{
}

- (id)sender;
- (id)handle;
- (long long)changeType;
- (id)loadTranscriptText;

@end

@interface CKPassbookMediaObject : CKMediaObject
{
    PKPass *_pass;
    UIImage *_icon;
}

+ (id)attachmentSummary:(unsigned long long)arg1;
+ (id)fallbackFilenamePrefix;
+ (id)UTITypes;
+ (_Bool)isPreviewable;
@property(retain, nonatomic) UIImage *icon; // @synthesize icon=_icon;
@property(retain, nonatomic) PKPass *pass; // @synthesize pass=_pass;
- (int)mediaType;
- (id)passView;
- (_Bool)shouldShowDisclosure;
- (_Bool)shouldBeQuickLooked;
- (_Bool)shouldShowViewer;
- (id)generateThumbnailFillToSize:(struct CGSize)arg1 contentAlignmentInsets:(struct UIEdgeInsets)arg2;
- (id)generateThumbnailForWidth:(double)arg1 orientation:(BOOL)arg2;
- (id)subtitle;
- (id)title;
- (void)dealloc;

@end

@interface CKPendingConversation : CKConversation
{
    _Bool _noAvailableServices;
    IMService *_previousSendingService;
    IMService *_composeSendingService;
}

@property(nonatomic) IMService *composeSendingService; // @synthesize composeSendingService=_composeSendingService;
@property(nonatomic) IMService *previousSendingService; // @synthesize previousSendingService=_previousSendingService;
@property(nonatomic) _Bool noAvailableServices; // @synthesize noAvailableServices=_noAvailableServices;
- (void)refreshComposeSendingServiceForAddresses:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)refreshStatusForAddresses:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)sendingService;

@end

@interface CKPhotoPickerBadgeCell : UICollectionReusableView
{
    UIImageView *_imageView;
    _Bool _selected;
}

@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
- (void)_updateSelected;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CKPhotoPickerCell : UICollectionViewCell
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CKPhotoPickerCollectionViewLayout : UICollectionViewFlowLayout
{
    _Bool _hideSelectionBadges;
}

@property(nonatomic) _Bool hideSelectionBadges; // @synthesize hideSelectionBadges=_hideSelectionBadges;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (id)_badgeLayoutAttributesForItemLayoutAttributes:(id)arg1;
- (struct CGRect)_floatingSelectionBadgeFrameForItemFrame:(struct CGRect)arg1 visibleItemFrame:(struct CGRect)arg2 atIndexPath:(id)arg3;

@end

@interface CKPhotoPickerSheetViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, UITableViewDataSource, UITableViewDelegate, UIGestureRecognizerDelegate>
{
    CKTranscriptController *_owner;
    ALAssetsLibrary *_library;
    NSMutableArray *_thumbnails;
    NSMutableArray *_largePhotos;
    NSArray *_assets;
    _Bool _isDesaturated;
    _Bool _largeView;
    _Bool _initialLoadFinished;
    NSObject<OS_dispatch_group> *_loadingGroup;
    _Bool _presented;
    _Bool _presenting;
    NSString *_takePhotoText;
    id <CKCameraSheetViewControllerDelegate> _delegate;
    UIWindow *_window;
    UIView *_bgDimmingView;
    UIView *_sheetView;
    UITableView *_buttonsTableView;
    UICollectionView *_photosCollectionView;
    CKDispatchQueue *_largePhotoQueue;
    UIView *_zoomingView;
    UITapGestureRecognizer *_tapGestureRecognizer;
}

@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(nonatomic) _Bool presenting; // @synthesize presenting=_presenting;
@property(nonatomic) _Bool presented; // @synthesize presented=_presented;
@property(retain, nonatomic) UIView *zoomingView; // @synthesize zoomingView=_zoomingView;
@property(retain, nonatomic) CKDispatchQueue *largePhotoQueue; // @synthesize largePhotoQueue=_largePhotoQueue;
@property(retain, nonatomic) UICollectionView *photosCollectionView; // @synthesize photosCollectionView=_photosCollectionView;
@property(retain, nonatomic) UITableView *buttonsTableView; // @synthesize buttonsTableView=_buttonsTableView;
@property(retain, nonatomic) UIView *sheetView; // @synthesize sheetView=_sheetView;
@property(retain, nonatomic) UIView *bgDimmingView; // @synthesize bgDimmingView=_bgDimmingView;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(nonatomic) id <CKCameraSheetViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *takePhotoText; // @synthesize takePhotoText=_takePhotoText;
- (void)_cancelPhotoPickerTap;
- (void)_sendSelectedAssets:(_Bool)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (id)_thumbnailForIndex:(unsigned long long)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)dismissPhotoPickerSheetWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentPhotoPickerSheetWithCompletion:(CDUnknownBlockType)arg1;
- (void)_endDesaturation;
- (void)_beginDesaturation;
- (double)_heightOfTableView:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)_handleTapInMainCollectionView:(id)arg1;
- (void)loadView;
- (void)_finishedLoadingAssets;
- (struct CGSize)preferredContentSize;
- (_Bool)shouldAutorotate;
- (void)dealloc;
- (id)initWithPresentationViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKPopoverManager : NSObject <UIPopoverControllerDelegate>
{
    UIPopoverController *_popoverController;
    CDUnknownBlockType _presenter;
    CDUnknownBlockType _handler;
}

+ (id)sharedInstance;
@property(retain, nonatomic) UIPopoverController *popoverController; // @synthesize popoverController=_popoverController;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(copy, nonatomic) CDUnknownBlockType presenter; // @synthesize presenter=_presenter;
- (void)replaceCurrentControllerWithController:(id)arg1;
- (_Bool)isShowingPopover;
- (void)representCurrentPopover;
@property(readonly, retain, nonatomic) UIViewController *currentContentController;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)didFinishRotating;
- (void)dismissCurrentPopoverAnimated:(_Bool)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)dismissCurrentPopoverAnimated:(_Bool)arg1;
- (void)showPopoverWithContentViewController:(id)arg1 withPresenter:(CDUnknownBlockType)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKPreviewDispatchCache : NSObject <IMSystemMonitorListener>
{
    CKDispatchCache *_dispatchCache;
    CKMultiDict *_pendingBlocks;
}

+ (id)detailsPreviewCache;
+ (id)transcriptPreviewCache;
+ (id)mapThumbnailQueue;
@property(retain, nonatomic) CKMultiDict *pendingBlocks; // @synthesize pendingBlocks=_pendingBlocks;
@property(retain, nonatomic) CKDispatchCache *dispatchCache; // @synthesize dispatchCache=_dispatchCache;
- (_Bool)shouldReplaceCachedPreview:(id)arg1 withPreview:(id)arg2;
- (void)transferRemoved:(id)arg1;
- (void)transferFinished:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)flush;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidSuspend;
- (id)notificationCenter;
- (id)mediaObjectManager;
- (void)resume;
- (void)endGeneratingForKey:(id)arg1;
- (void)beginGeneratingForKey:(id)arg1;
- (_Bool)isGeneratingPreviewForKey:(id)arg1;
- (void)setCachedPreview:(id)arg1 key:(id)arg2;
- (id)cachedPreviewForKey:(id)arg1;
- (void)enqueueGenerationBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2 withPriority:(long long)arg3 forKey:(id)arg4;
- (void)enqueueSaveBlock:(CDUnknownBlockType)arg1 withPriority:(long long)arg2;
- (id)init;
- (void)dealloc;
- (void)enqueueSaveBlock:(CDUnknownBlockType)arg1 forMediaObject:(id)arg2 withPriority:(long long)arg3;

@end

@interface CKQLPreviewController : QLPreviewController <QLPreviewControllerDataSource>
{
    NSArray *_previewItems;
}

@property(copy, nonatomic) NSArray *previewItems; // @synthesize previewItems=_previewItems;
- (id)previewController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewController:(id)arg1;
- (id)currentPreviewItem;
- (void)setDataSource:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)init;
- (void)dealloc;

@end

@interface CKRaiseGesture : NSObject
{
    _Bool _enabled;
    _Bool _proximityState;
    long long _gestureState;
    id _target;
    SEL _action;
    CMGestureManager *_gestureManager;
}

+ (_Bool)isRaiseGestureSupported;
+ (_Bool)isRaiseGestureEnabled;
@property(nonatomic) _Bool proximityState; // @synthesize proximityState=_proximityState;
@property(retain, nonatomic) CMGestureManager *gestureManager; // @synthesize gestureManager=_gestureManager;
@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
@property(nonatomic) long long gestureState; // @synthesize gestureState=_gestureState;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void)proximityStateDidChange:(id)arg1;
@property(readonly, nonatomic, getter=isRecognized) _Bool recognized;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (void)dealloc;

@end

@interface CKReaderViewController : UIViewController <UIWebViewDelegate>
{
    id <CKReaderViewControllerDelegate> _delegate;
    NSString *_messageGUID;
    UITextView *_textView;
}

@property(retain, nonatomic) UITextView *textView; // @synthesize textView=_textView;
@property(copy, nonatomic) NSString *messageGUID; // @synthesize messageGUID=_messageGUID;
@property(nonatomic) id <CKReaderViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct _NSRange visibleRange; // @dynamic visibleRange;
@property(copy, nonatomic) NSAttributedString *text; // @dynamic text;
- (void)contentSizeCategoryDidChange:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)loadView;
- (id)init;
- (void)dealloc;
- (_Bool)ckCanDismissWhenSuspending;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKRecipientGenerator : NSObject
{
    NSArray *_searchABPropertyTypes;
}

+ (id)sharedRecipientGenerator;
@property(retain, nonatomic) NSArray *searchABPropertyTypes; // @synthesize searchABPropertyTypes=_searchABPropertyTypes;
- (void)_appendSearchResults:(id)arg1 identifiers:(id)arg2 abPropertyType:(int)arg3 toArray:(id)arg4;
- (id)recipientWithAddress:(id)arg1;
- (id)recipientWithRecord:(void *)arg1 property:(int)arg2 identifier:(int)arg3;
- (id)resultsForText:(id)arg1;
- (void)dealloc;

@end

@interface CKRecipientSearchListController : UITableViewController <IDSBatchIDQueryControllerDelegate, CKContactsSearchManagerDelegate>
{
    _Bool _smsEnabled;
    _Bool _shouldUsePopovers;
    id <CKRecipientSearchListControllerDelegate> _delegate;
    NSArray *_enteredRecipients;
    NSArray *_prefilteredRecipients;
    CKContactsSearchManager *_searchManager;
    NSArray *_searchResults;
    IDSBatchIDQueryController *_statusQueryController;
    IMAccount *_defaultiMessageAccount;
    NSDate *_idsQueryStartTime;
}

@property(retain, nonatomic) NSDate *idsQueryStartTime; // @synthesize idsQueryStartTime=_idsQueryStartTime;
@property(retain, nonatomic) IMAccount *defaultiMessageAccount; // @synthesize defaultiMessageAccount=_defaultiMessageAccount;
@property(retain, nonatomic) IDSBatchIDQueryController *statusQueryController; // @synthesize statusQueryController=_statusQueryController;
@property(copy, nonatomic) NSArray *searchResults; // @synthesize searchResults=_searchResults;
@property(retain, nonatomic) CKContactsSearchManager *searchManager; // @synthesize searchManager=_searchManager;
@property(nonatomic) _Bool shouldUsePopovers; // @synthesize shouldUsePopovers=_shouldUsePopovers;
@property(nonatomic) _Bool smsEnabled; // @synthesize smsEnabled=_smsEnabled;
@property(retain, nonatomic) NSArray *prefilteredRecipients; // @synthesize prefilteredRecipients=_prefilteredRecipients;
@property(retain, nonatomic) NSArray *enteredRecipients; // @synthesize enteredRecipients=_enteredRecipients;
@property(nonatomic) id <CKRecipientSearchListControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (BOOL)_serviceColorForRecipients:(id)arg1;
- (id)_statusQueryController;
@property(nonatomic) _Bool suppressGroupSuggestions;
- (void)removeRecipientFromSearchResults:(id)arg1;
- (void)invalidateSearchManager;
- (void)cancelSearch;
- (void)invalidateOutstandingIDStatusRequests;
- (_Bool)isSearchResultsHidden;
- (_Bool)hasSearchResults;
- (void)searchWithText:(id)arg1;
- (void)idStatusUpdatedForDestinations:(id)arg1;
- (void)contactsSearchManager:(id)arg1 finishedSearchingWithResults:(id)arg2;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)initWithStyle:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKRecipientSelectionView : UIView
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface CKRecipientTableViewCell : MFRecipientTableViewCell
{
}

+ (id)cellForRecipient:(id)arg1;
- (void)setServiceColor:(BOOL)arg1 animated:(_Bool)arg2;

@end

@interface CKRecordingElapsedTimeView : UIView
{
    UILabel *__timeLabel;
    UIView *__recordingDotView;
    NSTimer *__updateTimer;
    NSDate *__startTime;
}

@property(readonly, nonatomic) NSDate *_startTime; // @synthesize _startTime=__startTime;
@property(readonly, nonatomic) NSTimer *_updateTimer; // @synthesize _updateTimer=__updateTimer;
@property(readonly, nonatomic) UIView *_recordingDotView; // @synthesize _recordingDotView=__recordingDotView;
@property(readonly, nonatomic) UILabel *_timeLabel; // @synthesize _timeLabel=__timeLabel;
- (void)_endRecordingAnimation;
- (void)_beginRecordingAnimation;
- (void)resetTimer;
- (void)endTimer;
- (void)startTimer;
- (void)_update:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonCAMElapsedTimeViewInitialization;

@end

@interface CKSMSComposeController : UIViewController <CKSMSCompose, CKSMSComposeRemoteViewControllerDelegate>
{
    id _delegate;
    int _entryViewInvisible;
    _UIAsyncInvocation *_cancellationInvocation;
    UINavigationController *_clientNavigationController;
    _Bool _safeToAdd;
    _Bool _didChangeStatusBarStyle;
    long long _savedStatusBarStyle;
    CKSMSComposeRemoteViewController *_remoteViewController;
    CKSMSComposeQueuingRemoteViewControllerProxy *_remoteViewControllerProxy;
}

+ (_Bool)canSendPhotos:(int)arg1 videos:(int)arg2 audioClips:(int)arg3;
+ (double)maxTrimDurationForVideo;
+ (double)maxTrimDurationForAudio;
+ (_Bool)acceptsMIMEType:(id)arg1;
@property(retain, nonatomic) CKSMSComposeQueuingRemoteViewControllerProxy *remoteViewControllerProxy; // @synthesize remoteViewControllerProxy=_remoteViewControllerProxy;
@property(retain, nonatomic) CKSMSComposeRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_addRemoteVCIfNeeded;
- (void)setTextEntryContentsVisible:(_Bool)arg1;
- (void)smsComposeControllerSendStartedWithText:(id)arg1;
- (void)smsComposeControllerCancelled;
- (void)smsComposeControllerAppeared;
- (void)smsComposeControllerDataInserted;
- (void)setUICustomizationData:(id)arg1;
- (void)forceMMS;
- (void)forceCancelComposition;
- (void)disableCameraAttachments;
- (void)setCanEditRecipients:(_Bool)arg1;
- (void)setPendingAddresses:(id)arg1;
- (void)setText:(id)arg1 subject:(id)arg2 addresses:(id)arg3;
- (_Bool)insertAttachmentWithURL:(id)arg1 andDescription:(id)arg2;
- (_Bool)insertData:(id)arg1 MIMEType:(id)arg2 exportedFilename:(id)arg3;
- (_Bool)insertFilename:(id)arg1 MIMEType:(id)arg2 exportedFilename:(id)arg3 options:(id)arg4;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)dealloc;
- (id)initWithNavigationController:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKSMSComposeQueuingRemoteViewControllerProxy : NSObject
{
    NSMutableArray *_queuedInvocations;
    id <CKSMSCompose> _serviceViewControllerProxy;
}

@property(retain, nonatomic) id <CKSMSCompose> serviceViewControllerProxy; // @synthesize serviceViewControllerProxy=_serviceViewControllerProxy;
@property(retain, nonatomic) NSMutableArray *queuedInvocations; // @synthesize queuedInvocations=_queuedInvocations;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface CKSMSComposeRemoteViewController : _UIRemoteViewController <CKSMSComposeRemoteViewControllerDelegate>
{
    id <CKSMSComposeRemoteViewControllerDelegate> _delegate;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
+ (id)requestViewControllerWithConnectionHandler:(CDUnknownBlockType)arg1;
@property(nonatomic) id <CKSMSComposeRemoteViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)smsComposeControllerCancelled;
- (void)smsComposeControllerSendStartedWithText:(id)arg1;
- (void)smsComposeControllerAppeared;
- (void)smsComposeControllerDataInserted;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKSMSComposeViewServiceController : UINavigationController <CKTranscriptComposeDelegate, CKSMSComposeViewServiceProtocol>
{
    _Bool _canEditRecipients;
    _Bool _supportsAttachments;
    _Bool _supportsMessageInspection;
    _Bool _forceMMS;
    _Bool _disableCameraAttachments;
    CKModalTranscriptController *_modalTranscriptController;
}

+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;
+ (_Bool)_isSecureForRemoteViewService;
@property(retain, nonatomic) CKModalTranscriptController *modalTranscriptController; // @synthesize modalTranscriptController=_modalTranscriptController;
- (void)_willAppearInRemoteViewController;
- (_Bool)supportsMessageInspection;
- (_Bool)supportsAttachments;
@property(nonatomic) _Bool canEditRecipients; // @dynamic canEditRecipients;
- (void)transcriptController:(id)arg1 didSelectNewConversation:(id)arg2;
- (void)showNewMessageCompositionForComposition:(id)arg1;
- (void)transcriptController:(id)arg1 didSendMessageInConversation:(id)arg2;
- (void)transcriptController:(id)arg1 willSendComposition:(id)arg2 inConversation:(id)arg3;
- (void)didCancelComposition:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)setTextEntryContentsVisible:(_Bool)arg1;
- (void)disableCameraAttachments;
- (void)setPendingAddresses:(id)arg1;
- (void)setText:(id)arg1 subject:(id)arg2 addresses:(id)arg3;
- (void)forceMMS;
- (void)_forceMMSIfNecessary;
- (void)setUICustomizationData:(id)arg1;
- (void)forceCancelComposition;
- (void)insertAttachmentWithURL:(id)arg1 andDescription:(id)arg2;
- (void)insertFileURL:(id)arg1 filename:(id)arg2 transcoderUserInfo:(id)arg3;
- (void)insertData:(id)arg1 MIMEType:(id)arg2 exportedFilename:(id)arg3;
- (void)insertFilename:(id)arg1 MIMEType:(id)arg2 exportedFilename:(id)arg3 options:(id)arg4;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) id delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKScheduledUpdater : CKManualUpdater
{
    NSCountedSet *_holdingUpdatesKeys;
}

@property(retain, nonatomic) NSCountedSet *holdingUpdatesKeys; // @synthesize holdingUpdatesKeys=_holdingUpdatesKeys;
- (void)invalidate;
- (void)updateIfNeeded;
- (_Bool)isHoldingUpdates;
- (void)endHoldingUpdatesForKey:(id)arg1;
- (void)beginHoldingUpdatesForKey:(id)arg1;
- (void)setNeedsUpdate;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)description;
- (void)dealloc;

@end

@interface CKSendAnimationWindow : UIAutoRotatingWindow
{
    CKGradientReferenceView *_gradientReferenceView;
}

@property(retain, nonatomic) CKGradientReferenceView *gradientReferenceView; // @synthesize gradientReferenceView=_gradientReferenceView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CKSenderChatItem : CKChatItem
{
}

- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (id)loadTranscriptText;
- (id)cellIdentifier;
- (Class)cellClass;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets)contentInsets;

@end

@interface CKServiceChatItem : CKStampChatItem
{
}

- (id)loadTranscriptText;

@end

@interface CKSpotlightQuery : NSObject <SPDaemonQueryDelegate>
{
    SPDaemonQueryToken *_queryToken;
    unsigned long long _resultIndex;
    SPSearchResultSection *_searchResults;
    NSMutableDictionary *_chatGUIDToLatestSearchResult;
    NSObject<OS_dispatch_group> *_searchResultLoadingGroup;
    CDUnknownBlockType _completion;
    _Bool _processing;
    _Bool _cancelled;
}

@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void)searchDaemonQueryReset:(id)arg1;
- (void)searchDaemonQueryCompleted:(id)arg1;
- (void)searchDaemonQuery:(id)arg1 encounteredError:(id)arg2;
- (void)searchDaemonQuery:(id)arg1 addedResults:(id)arg2;
- (void)dealloc;
- (id)initWithSearchText:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_callCompletionIfNecessary;
- (void)_cleanup;
- (void)_processSearchResults;
- (void)cancel;

@end

@interface CKSpotlightSearchResult : NSObject
{
    NSString *_chatGUID;
    NSString *_messageGUID;
    NSString *_summary;
    NSDate *_messageDate;
}

@property(copy, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(retain, nonatomic) NSDate *messageDate; // @synthesize messageDate=_messageDate;
@property(copy, nonatomic) NSString *messageGUID; // @synthesize messageGUID=_messageGUID;
@property(copy, nonatomic) NSString *chatGUID; // @synthesize chatGUID=_chatGUID;
- (long long)compare:(id)arg1;
- (void)dealloc;
- (id)initWithMessage:(id)arg1 chatGUID:(id)arg2;

@end

@interface CKStarkConversationListCell : UITableViewCell
{
    UIImage *_monogramImage;
    UIImageView *_unreadImageView;
    UILabel *_recipientsLabel;
    UIDateLabel *_dateLabel;
}

@property(retain, nonatomic) UIDateLabel *dateLabel; // @synthesize dateLabel=_dateLabel;
@property(retain, nonatomic) UILabel *recipientsLabel; // @synthesize recipientsLabel=_recipientsLabel;
@property(retain, nonatomic) UIImageView *unreadImageView; // @synthesize unreadImageView=_unreadImageView;
@property(nonatomic) UIImage *monogramImage; // @synthesize monogramImage=_monogramImage;
@property(retain, nonatomic) NSString *recipientNames; // @dynamic recipientNames;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(nonatomic) _Bool hasUnreadMessages; // @dynamic hasUnreadMessages;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKStarkConversationListViewController : UITableViewController
{
    CKConversation *_selectedConversation;
}

@property(retain, nonatomic) CKConversation *selectedConversation; // @synthesize selectedConversation=_selectedConversation;
- (void)_handleNewComposePressed:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)conversationListDidChange:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface CKStarkManager : NSObject
{
    _Bool _isStarkConnected;
    UIViewController *_starkRootViewController;
    UIWindow *_starkWindow;
    UIScreen *_starkScreen;
}

+ (id)sharedInstance;
@property(retain, nonatomic) UIScreen *starkScreen; // @synthesize starkScreen=_starkScreen;
@property(retain, nonatomic) UIWindow *starkWindow; // @synthesize starkWindow=_starkWindow;
@property(retain, nonatomic) UIViewController *starkRootViewController; // @synthesize starkRootViewController=_starkRootViewController;
- (void)detachStarkScreen:(id)arg1;
- (void)attachStarkToScreen:(id)arg1;
- (void)screenDidDisconnectNotification:(id)arg1;
- (void)screenDidConnectNotification:(id)arg1;
- (void)startListeningForScreenNotifications;
@property(readonly, nonatomic) _Bool isStarkConnected; // @synthesize isStarkConnected=_isStarkConnected;
- (void)dealloc;
- (id)init;

@end

@interface CKStarkNewComposeBarButton : UIButton
{
}

- (void)_focusStateDidChange;
- (_Bool)_isFocusableElement;

@end

@interface CKSyncController : NSObject
{
    int _restoreStateChangedToken;
    int _attachmentRestoredToken;
    _Bool _restoring;
}

+ (id)sharedInstance;
@property(readonly, nonatomic, getter=isRestoring) _Bool restoring; // @synthesize restoring=_restoring;
- (void)postAttachmentRestored;
- (void)attachmentRestored;
- (void)prioritizeAttachmentAtPath:(id)arg1;

@end

@interface CKTextStorage : NSConcreteTextStorage
{
}

- (void)processEditing;

@end

@interface CKTiledLayoutGeneratorScanState : NSObject
{
    _Bool _scannedBatchHasCaption;
    long long _scanLocation;
    id _scannedBatchID;
    long long _scanSpecialSequenceCount;
}

@property(nonatomic) long long scanSpecialSequenceCount; // @synthesize scanSpecialSequenceCount=_scanSpecialSequenceCount;
@property(nonatomic) _Bool scannedBatchHasCaption; // @synthesize scannedBatchHasCaption=_scannedBatchHasCaption;
@property(retain, nonatomic) id scannedBatchID; // @synthesize scannedBatchID=_scannedBatchID;
@property(nonatomic) long long scanLocation; // @synthesize scanLocation=_scanLocation;
- (void).cxx_destruct;

@end

@interface CKTitledImageBalloonView : CKImageBalloonView
{
    UIImageView *_chevron;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *chevron; // @synthesize chevron=_chevron;
@property(copy, nonatomic) NSString *title;
- (void)setOrientation:(BOOL)arg1;
- (void)prepareForReuse;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)configureForMediaObject:(id)arg1 previewWidth:(double)arg2 orientation:(BOOL)arg3;
- (void)configureForLocatingChatItem:(id)arg1;

@end

@interface CKTranscriptAddRecipientCell : UITableViewCell
{
    UILabel *_addLabel;
    UIImageView *_addIcon;
}

+ (double)preferredHeight;
@property(retain, nonatomic) UIImageView *addIcon; // @synthesize addIcon=_addIcon;
@property(retain, nonatomic) UILabel *addLabel; // @synthesize addLabel=_addLabel;
- (void)setEnabled:(_Bool)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKTranscriptCell : CKEditableCollectionViewCell
{
    _Bool _wantsDrawerLayout;
    BOOL _orientation;
    double _drawerPercentRevealed;
}

@property(nonatomic) double drawerPercentRevealed; // @synthesize drawerPercentRevealed=_drawerPercentRevealed;
@property(nonatomic) BOOL orientation; // @synthesize orientation=_orientation;
@property(nonatomic) _Bool wantsDrawerLayout; // @synthesize wantsDrawerLayout=_wantsDrawerLayout;
- (void)performReload:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performRemoval:(CDUnknownBlockType)arg1;
- (void)performInsertion:(CDUnknownBlockType)arg1;
- (void)layoutSubviewsForAlignmentContents;
- (void)layoutSubviewsForDrawer;
- (void)layoutSubviewsForContents;
- (void)layoutSubviews;
- (void)configureForChatItem:(id)arg1;

@end

@interface CKTranscriptMessageCell : CKTranscriptCell
{
    _Bool _wantsContactImageLayout;
    UIButton *_failureButton;
    CKBalloonImageView *_contactImageView;
}

@property(retain, nonatomic) CKBalloonImageView *contactImageView; // @synthesize contactImageView=_contactImageView;
@property(retain, nonatomic) UIButton *failureButton; // @synthesize failureButton=_failureButton;
@property(nonatomic) _Bool wantsContactImageLayout; // @synthesize wantsContactImageLayout=_wantsContactImageLayout;
@property(nonatomic) _Bool failed;
@property(retain, nonatomic) UIImage *contactImage;
- (void)layoutSubviewsForContents;
- (id)description;
- (void)dealloc;

@end

@interface CKTranscriptBalloonCell : CKTranscriptMessageCell
{
    _Bool _drawerWasVisible;
    _Bool _drawerTextChanged;
    CKBalloonView *_balloonView;
    NSAttributedString *_drawerText;
    UILabel *_drawerLabel;
}

@property(nonatomic) _Bool drawerTextChanged; // @synthesize drawerTextChanged=_drawerTextChanged;
@property(nonatomic) _Bool drawerWasVisible; // @synthesize drawerWasVisible=_drawerWasVisible;
@property(retain, nonatomic) UILabel *drawerLabel; // @synthesize drawerLabel=_drawerLabel;
@property(copy, nonatomic) NSAttributedString *drawerText; // @synthesize drawerText=_drawerText;
@property(retain, nonatomic) CKBalloonView *balloonView; // @synthesize balloonView=_balloonView;
- (void)layoutSubviewsForAlignmentContents;
- (void)layoutSubviewsForDrawer;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)description;
- (void)dealloc;
- (void)configureForChatItem:(id)arg1;

@end

@interface CKTranscriptChatItemRules : IMTranscriptChatItemRules
{
}

- (_Bool)shouldShowRaiseMessageStatus;
- (id)chatItemForIMChatItem:(id)arg1;

@end

@interface CKTranscriptCollectionView : CKEditableCollectionView
{
    _Bool _ignoresContentOffsetChanges;
}

@property(nonatomic) _Bool ignoresContentOffsetChanges; // @synthesize ignoresContentOffsetChanges=_ignoresContentOffsetChanges;
- (_Bool)isFastAnimationAvailableForContentOffset;
- (void)reloadData;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;

@end

@interface CKTranscriptCollectionViewController : CKViewController <UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, UIAlertViewDelegate, CKTranscriptCollectionViewDelegate, CKMovieBalloonViewDelegate, CKLocationShareBalloonViewDelegate, CKAudioControllerDelegate>
{
    _Bool _initialLoad;
    _Bool _peeking;
    _Bool _hasHiddenItems;
    _Bool _isLoadingEarlierMessages;
    _Bool _transcriptUpdateAnimated;
    NSArray *_chatItems;
    double _rightBalloonMaxWidth;
    double _leftBalloonMaxWidth;
    CKConversation *_conversation;
    CKTranscriptCollectionView *_collectionView;
    id <CKTranscriptCollectionViewControllerDelegate> _delegate;
    UIView<CKGradientReferenceView> *_gradientReferenceView;
    NSObject<OS_dispatch_group> *_updateAnimationGroup;
    NSIndexSet *_hiddenItems;
    UITapGestureRecognizer *_loggingTapGestureRecognizer;
    CKAudioController *_audioController;
    CDUnknownBlockType _alertHandler;
    CDUnknownBlockType _transcriptUpdateCompletion;
    struct CGPoint _peekSampleTranslation;
}

@property(copy, nonatomic) CDUnknownBlockType transcriptUpdateCompletion; // @synthesize transcriptUpdateCompletion=_transcriptUpdateCompletion;
@property(nonatomic, getter=isTranscriptUpdateAnimated) _Bool transcriptUpdateAnimated; // @synthesize transcriptUpdateAnimated=_transcriptUpdateAnimated;
@property(nonatomic) _Bool isLoadingEarlierMessages; // @synthesize isLoadingEarlierMessages=_isLoadingEarlierMessages;
@property(nonatomic) _Bool hasHiddenItems; // @synthesize hasHiddenItems=_hasHiddenItems;
@property(nonatomic, getter=isPeeking) _Bool peeking; // @synthesize peeking=_peeking;
@property(nonatomic) struct CGPoint peekSampleTranslation; // @synthesize peekSampleTranslation=_peekSampleTranslation;
@property(copy, nonatomic) CDUnknownBlockType alertHandler; // @synthesize alertHandler=_alertHandler;
@property(retain, nonatomic) CKAudioController *audioController; // @synthesize audioController=_audioController;
@property(retain, nonatomic) UITapGestureRecognizer *loggingTapGestureRecognizer; // @synthesize loggingTapGestureRecognizer=_loggingTapGestureRecognizer;
@property(nonatomic, getter=isInitialLoad) _Bool initialLoad; // @synthesize initialLoad=_initialLoad;
@property(copy, nonatomic) NSIndexSet *hiddenItems; // @synthesize hiddenItems=_hiddenItems;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *updateAnimationGroup; // @synthesize updateAnimationGroup=_updateAnimationGroup;
@property(retain, nonatomic) UIView<CKGradientReferenceView> *gradientReferenceView; // @synthesize gradientReferenceView=_gradientReferenceView;
@property(nonatomic) id <CKTranscriptCollectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CKTranscriptCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) CKConversation *conversation; // @synthesize conversation=_conversation;
@property(readonly, nonatomic) double leftBalloonMaxWidth; // @synthesize leftBalloonMaxWidth=_leftBalloonMaxWidth;
@property(readonly, nonatomic) double rightBalloonMaxWidth; // @synthesize rightBalloonMaxWidth=_rightBalloonMaxWidth;
@property(copy, nonatomic) NSArray *chatItems; // @synthesize chatItems=_chatItems;
- (_Bool)wantsDrawerLayout;
- (id)collectionViewLayout;
- (void)_refreshLocationsForRecipientsIfNecessary;
- (void)chatRegistryDidLoad:(id)arg1;
- (void)chatItemsDidChange:(id)arg1;
- (void)addressBookChanged:(id)arg1;
- (void)transferUpdated:(id)arg1;
- (void)locationStringDidChange:(id)arg1;
- (void)previewDidChange:(id)arg1;
- (void)transferRestored:(id)arg1;
- (void)_resendMessageAtIndexPath:(id)arg1;
- (void)_downgradeMessageAtIndexPath:(id)arg1;
- (void)touchUpInsideStatusCellButton:(id)arg1;
- (void)touchUpInsideMessageCellFailureButton:(id)arg1;
- (void)balloonView:(id)arg1 export:(id)arg2;
- (void)balloonView:(id)arg1 sendAsTextMessage:(id)arg2;
- (void)balloonView:(id)arg1 more:(id)arg2;
- (void)balloonView:(id)arg1 copy:(id)arg2;
- (id)messagePartForBalloonView:(id)arg1;
- (id)indexPathForBalloonView:(id)arg1;
- (void)loadEarlierMessagesIfNeeded;
- (void)loadEarlierMessages;
- (id)chatItemWithIMChatItem:(id)arg1;
- (void)updateTranscriptChatItems:(id)arg1 inserted:(id)arg2 removed:(id)arg3 reload:(id)arg4 regenerate:(id)arg5 animated:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;
- (void)configureCell:(id)arg1 forItemAtIndexPath:(id)arg2;
- (void)audioControllerPlayingDidChange:(id)arg1;
- (void)audioControllerDidStop:(id)arg1;
- (void)audioControllerDidPause:(id)arg1;
- (void)audioController:(id)arg1 mediaObjectProgressDidChange:(id)arg2 currentTime:(double)arg3 duration:(double)arg4;
- (void)audioController:(id)arg1 mediaObjectDidFinishPlaying:(id)arg2;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)locationShareBalloonViewIgnoreButtonTapped:(id)arg1;
- (void)locationShareBalloonViewShareButtonTapped:(id)arg1;
- (void)balloonView:(id)arg1 mediaObjectDidFinishPlaying:(id)arg2;
- (void)balloonViewWillResignFirstResponder:(id)arg1;
- (void)balloonViewTapped:(id)arg1;
- (void)balloonView:(id)arg1 performAction:(SEL)arg2 withSender:(id)arg3;
- (_Bool)balloonView:(id)arg1 canPerformAction:(SEL)arg2 withSender:(id)arg3;
- (struct CGRect)calloutTargetRectForBalloonView:(id)arg1;
- (_Bool)shouldShowMenuForBalloonView:(id)arg1;
- (id)menuItemsForBalloonView:(id)arg1;
- (void)balloonViewDidFinishDataDetectorAction:(id)arg1;
- (id)collectionView:(id)arg1 layout:(id)arg2 chatItemForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)collectionViewDidInset:(id)arg1;
- (void)collectionViewWillInset:(id)arg1 targetContentInset:(inout struct UIEdgeInsets *)arg2;
- (_Bool)collectionView:(id)arg1 isEditableItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionViewWillProgrammaticallyScroll:(id)arg1;
- (void)collectionViewWillScroll:(id)arg1 targetContentOffset:(inout struct CGPoint *)arg2;
- (void)collectionViewLayoutRestingDidChange:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)raiseGestureRecognized:(id)arg1;
- (_Bool)canRaiseToTalk;
- (_Bool)canRaiseToListen;
- (void)stopPlayingAudio;
- (void)updateTranscript:(CDUnknownBlockType)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)reloadData;
- (void)setScrollAnchor:(double)arg1;
- (void)deleteSelectedItems:(id)arg1;
- (id)selectedItems;
@property(readonly, retain, nonatomic) IMChat *chat;
- (id)initWithConversation:(id)arg1 rightBalloonMaxWidth:(double)arg2 leftBalloonMaxWidth:(double)arg3;
- (void)viewDidAppearDeferredSetup;
- (void)performResumeDeferredSetup;
- (void)prepareForSuspend;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)didMoveToParentViewController:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)_remoteLogDumpButtonTitle;
- (id)_localLogDumpButtonTitle;
- (void)_performRemoteLogDump;
- (void)_performLocalLogDump;
- (void)__handleLoggingTapped:(id)arg1;
- (void)_showLoggingAlertIfNecessary;
- (void)_tearDownLoggingTapGestureRecognizer;
- (void)_setupLoggingTapGestureRecognizer;
- (_Bool)_shouldShowInternalUILogging;
- (_Bool)_shouldShowUILogging;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKTranscriptCollectionViewLayout : UICollectionViewLayout
{
    _Bool _holdingBoundsInvalidation;
    _Bool _useInitialLayoutAttributesForRotation;
    _Bool _isResting;
    _Bool _easingUp;
    _Bool _shouldDisplayLinkInvalidateLayout;
    double _anchorYPosition;
    NSArray *_layoutAttributes;
    CADisplayLink *_displayLink;
    double _prevTimestamp;
    struct CGPoint _targetContentOffset;
    struct CGSize _contentSize;
    struct CGRect _visibleBounds;
}

+ (Class)layoutAttributesClass;
@property(nonatomic) _Bool shouldDisplayLinkInvalidateLayout; // @synthesize shouldDisplayLinkInvalidateLayout=_shouldDisplayLinkInvalidateLayout;
@property(nonatomic) _Bool easingUp; // @synthesize easingUp=_easingUp;
@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
@property(nonatomic) double prevTimestamp; // @synthesize prevTimestamp=_prevTimestamp;
@property(nonatomic) struct CGRect visibleBounds; // @synthesize visibleBounds=_visibleBounds;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(copy, nonatomic) NSArray *layoutAttributes; // @synthesize layoutAttributes=_layoutAttributes;
@property(nonatomic) _Bool isResting; // @synthesize isResting=_isResting;
@property(nonatomic, getter=isUsingInitialLayoutAttributesForRotation) _Bool useInitialLayoutAttributesForRotation; // @synthesize useInitialLayoutAttributesForRotation=_useInitialLayoutAttributesForRotation;
@property(nonatomic, getter=isHoldingBoundsInvalidation) _Bool holdingBoundsInvalidation; // @synthesize holdingBoundsInvalidation=_holdingBoundsInvalidation;
@property(nonatomic) struct CGPoint targetContentOffset; // @synthesize targetContentOffset=_targetContentOffset;
@property(nonatomic) double anchorYPosition; // @synthesize anchorYPosition=_anchorYPosition;
- (void)updateFrames;
- (void)displayLinkFired:(id)arg1;
- (double)bezierPointForPercentage:(double)arg1 anchor1:(double)arg2 anchor2:(double)arg3 control1:(double)arg4 control2:(double)arg5;
- (void)updateContentSize;
- (void)invalidateDisplayLink;
- (void)reloadData;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (struct CGSize)collectionViewContentSize;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (void)prepareLayout;
- (void)dealloc;
- (id)init;

@end

@interface CKTranscriptCollectionViewLayoutAttributes : UICollectionViewLayoutAttributes
{
    struct CGRect _targetFrame;
    struct CGRect _currentFrame;
    double _easing;
    double _targetEasing;
    BOOL _orientation;
    CKChatItem *_chatItem;
}

@property(retain, nonatomic) CKChatItem *chatItem; // @synthesize chatItem=_chatItem;
@property(nonatomic) double targetEasing; // @synthesize targetEasing=_targetEasing;
@property(nonatomic) double easing; // @synthesize easing=_easing;
@property(nonatomic) struct CGRect currentFrame; // @synthesize currentFrame=_currentFrame;
@property(nonatomic) struct CGRect targetFrame; // @synthesize targetFrame=_targetFrame;
- (void)dealloc;

@end

@interface CKTranscriptDNDCell : UITableViewCell
{
    UISwitch *_muteSwitch;
}

+ (double)preferredHeight;
+ (id)identifier;
@property(retain, nonatomic) UISwitch *muteSwitch; // @synthesize muteSwitch=_muteSwitch;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKTranscriptDetailsResizableCell : UITableViewCell
{
}

+ (id)identifier;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKTranscriptDrawerContactsTableView : UITableView
{
    UIView *_separatorView;
}

@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separatorView;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (void)dealloc;

@end

@interface CKTranscriptGroupHeaderView : UIView
{
    UIButton *_actionButton;
    CKConversation *_conversation;
    MFComposeRecipientTextView *_textView;
    UIView *_separator;
    _UIBackdropView *_backdropView;
}

@property(retain, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) UIView *separator; // @synthesize separator=_separator;
@property(retain, nonatomic) MFComposeRecipientTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) CKConversation *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) UIButton *actionButton; // @synthesize actionButton=_actionButton;
- (id)_groupHeaderComposeRecipients;
- (void)_handleConversationRecipientsChanged:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 conversation:(id)arg2;
- (void)dealloc;

@end

@interface CKTranscriptHeaderCell : CKTranscriptCell
{
    UIActivityIndicatorView *_loadingIndicator;
}

+ (double)defaultCellHeight;
@property(retain, nonatomic) UIActivityIndicatorView *loadingIndicator; // @synthesize loadingIndicator=_loadingIndicator;
- (void)layoutSubviewsForAlignmentContents;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKTranscriptLabelCell : CKTranscriptCell
{
    _Bool _wantsContactImageLayout;
    UILabel *_label;
}

+ (id)label;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
@property(nonatomic) _Bool wantsContactImageLayout; // @synthesize wantsContactImageLayout=_wantsContactImageLayout;
@property(copy, nonatomic) NSAttributedString *attributedText;
- (void)setOrientation:(BOOL)arg1;
- (void)layoutSubviewsForAlignmentContents;
- (void)layoutSubviewsForContents;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)configureForChatItem:(id)arg1;

@end

@interface CKTranscriptLocationShareCell : UITableViewCell
{
    _Bool _showOfferTimeRemaining;
    double _offerTimeRemaining;
    UILabel *_timeRemainingLabel;
}

+ (id)identifier;
@property(retain, nonatomic) UILabel *timeRemainingLabel; // @synthesize timeRemainingLabel=_timeRemainingLabel;
@property(nonatomic) double offerTimeRemaining; // @synthesize offerTimeRemaining=_offerTimeRemaining;
@property(nonatomic) _Bool showOfferTimeRemaining; // @synthesize showOfferTimeRemaining=_showOfferTimeRemaining;
- (id)timeStringForTimeInterval:(double)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)dealloc;

@end

@interface CKTranscriptManagementController : CKViewController <FMFMapViewControllerDelegate, CKAttachmentViewControllerDelegate, CKTranscriptManagementNameFieldDelegate, UIGestureRecognizerDelegate>
{
    _Bool _mapHidden;
    _Bool _initialLoad;
    _Bool _removeMapViewAfterScrollAnimation;
    CKConversation *_conversation;
    FMFMapViewController *_mapController;
    CKTranscriptManagementView *_managementView;
    CKAttachmentViewController *_attachmentsController;
    CKTranscriptManagementNameField *_nameField;
}

@property(nonatomic) _Bool removeMapViewAfterScrollAnimation; // @synthesize removeMapViewAfterScrollAnimation=_removeMapViewAfterScrollAnimation;
@property(nonatomic, getter=isInitialLoad) _Bool initialLoad; // @synthesize initialLoad=_initialLoad;
@property(nonatomic) _Bool mapHidden; // @synthesize mapHidden=_mapHidden;
@property(retain, nonatomic) CKTranscriptManagementNameField *nameField; // @synthesize nameField=_nameField;
@property(retain, nonatomic) CKAttachmentViewController *attachmentsController; // @synthesize attachmentsController=_attachmentsController;
@property(retain, nonatomic) CKTranscriptManagementView *managementView; // @synthesize managementView=_managementView;
@property(retain, nonatomic) FMFMapViewController *mapController; // @synthesize mapController=_mapController;
@property(retain, nonatomic) CKConversation *conversation; // @synthesize conversation=_conversation;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)_handleFriendshipStatusChangedNotification:(id)arg1;
- (void)_handleLocationChangedNotification:(id)arg1;
- (void)_updateMapInsets;
- (void)_mapViewTouched:(id)arg1;
- (void)setMapHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (struct UIEdgeInsets)_navigationBarInsets;
- (void)_scrollAttachmentsToTopAnimated:(_Bool)arg1;
- (double)_mapHeightForCurrentBounds;
- (void)_updateAttachmentsInsets;
- (_Bool)_conversationHasLeft;
- (void)_conversationJoinStateDidChange:(id)arg1;
- (void)_handleDisplayNameChangedNotification:(id)arg1;
- (void)nameField:(id)arg1 didCommitGroupName:(id)arg2;
- (void)attachmentsController:(id)arg1 collectionViewDidChangeEditState:(id)arg2;
- (void)attachmentsController:(id)arg1 collectionViewDidEndScrollingAnimation:(id)arg2;
- (void)attachmentsController:(id)arg1 collectionViewDidScroll:(id)arg2;
- (void)attachmentsController:(id)arg1 collectionViewWillBeginDragging:(id)arg2;
- (void *)annotationABRecordForHandle:(id)arg1;
- (id)annotationImageForHandle:(id)arg1;
- (void)fmfMapViewController:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)fmfMapViewController:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)fmfMapViewController:(id)arg1 didDeselectHandle:(id)arg2;
- (void)fmfMapViewController:(id)arg1 didSelectHandle:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)loadView;
- (void)dealloc;
- (id)initWithConversation:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKTranscriptManagementNameField : UIView <UITextFieldDelegate>
{
    _Bool _isOverlay;
    _Bool _enabled;
    id <CKTranscriptManagementNameFieldDelegate> _delegate;
    UILabel *_fieldLabel;
    UITextField *_textField;
    UIView *_topSeparator;
    UIView *_bottomSeparator;
    _UIBackdropView *_backdropView;
}

+ (double)preferredHeight;
@property(retain, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) UIView *bottomSeparator; // @synthesize bottomSeparator=_bottomSeparator;
@property(retain, nonatomic) UIView *topSeparator; // @synthesize topSeparator=_topSeparator;
@property(retain, nonatomic) UITextField *textField; // @synthesize textField=_textField;
@property(retain, nonatomic) UILabel *fieldLabel; // @synthesize fieldLabel=_fieldLabel;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
@property(nonatomic) _Bool isOverlay; // @synthesize isOverlay=_isOverlay;
@property(nonatomic) id <CKTranscriptManagementNameFieldDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)_useRightToLeftLayout;
- (void)commitGroupName;
@property(copy, nonatomic) NSString *groupName;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKTranscriptManagementView : UIView
{
    _Bool _suppressMapMovement;
    UIView *_mapView;
    UIView *_attachmentsCollectionView;
    UIView *_nameField;
    double _navigationBarTopInset;
    double _scrollYOffset;
}

@property(nonatomic) double scrollYOffset; // @synthesize scrollYOffset=_scrollYOffset;
@property(nonatomic) double navigationBarTopInset; // @synthesize navigationBarTopInset=_navigationBarTopInset;
@property(nonatomic) _Bool suppressMapMovement; // @synthesize suppressMapMovement=_suppressMapMovement;
@property(retain, nonatomic) UIView *nameField; // @synthesize nameField=_nameField;
@property(retain, nonatomic) UIView *attachmentsCollectionView; // @synthesize attachmentsCollectionView=_attachmentsCollectionView;
@property(retain, nonatomic) UIView *mapView; // @synthesize mapView=_mapView;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface CKTranscriptMultilineLabelCell : CKTranscriptLabelCell
{
}

+ (id)label;

@end

@interface CKTranscriptRecipientCell : UITableViewCell
{
    _Bool _showsLocation;
    _Bool _showMailButton;
    _Bool _showPhoneButton;
    _Bool _showFaceTimeVideoButton;
    _Bool _showInfoButton;
    NSString *_entityName;
    NSString *_locationString;
    UIImage *_contactImage;
    UIButton *_mailButton;
    UIButton *_phoneButton;
    UIButton *_facetimeVideoButton;
    UIButton *_infoButton;
    double _margin;
    NSMutableArray *_visibleButtons;
    UILabel *_nameLabel;
    UILabel *_locationLabel;
    UIImageView *_contactImageView;
}

+ (double)marginWidth;
+ (double)preferredHeight;
+ (id)identifier;
@property(retain, nonatomic) UIImageView *contactImageView; // @synthesize contactImageView=_contactImageView;
@property(retain, nonatomic) UILabel *locationLabel; // @synthesize locationLabel=_locationLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) NSMutableArray *visibleButtons; // @synthesize visibleButtons=_visibleButtons;
@property(nonatomic) double margin; // @synthesize margin=_margin;
@property(retain, nonatomic) UIButton *infoButton; // @synthesize infoButton=_infoButton;
@property(retain, nonatomic) UIButton *facetimeVideoButton; // @synthesize facetimeVideoButton=_facetimeVideoButton;
@property(retain, nonatomic) UIButton *phoneButton; // @synthesize phoneButton=_phoneButton;
@property(retain, nonatomic) UIButton *mailButton; // @synthesize mailButton=_mailButton;
@property(retain, nonatomic) UIImage *contactImage; // @synthesize contactImage=_contactImage;
@property(nonatomic) _Bool showInfoButton; // @synthesize showInfoButton=_showInfoButton;
@property(nonatomic) _Bool showFaceTimeVideoButton; // @synthesize showFaceTimeVideoButton=_showFaceTimeVideoButton;
@property(nonatomic) _Bool showPhoneButton; // @synthesize showPhoneButton=_showPhoneButton;
@property(nonatomic) _Bool showMailButton; // @synthesize showMailButton=_showMailButton;
@property(nonatomic) _Bool showsLocation; // @synthesize showsLocation=_showsLocation;
@property(copy, nonatomic) NSString *locationString; // @synthesize locationString=_locationString;
@property(copy, nonatomic) NSString *entityName; // @synthesize entityName=_entityName;
- (void)_updateVisibleButtons;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CKTranscriptRecipientsController : UITableViewController <UIActionSheetDelegate, UIAlertViewDelegate, UITextViewDelegate>
{
    _Bool _fmfDisabled;
    _Bool _fmfRestricted;
    CKConversation *_conversation;
    id <CKTranscriptRecipientsControllerDelegate> _delegate;
    NSString *_serviceAvailabilityKey;
    NSDictionary *_facetimeIDStatuses;
    NSDictionary *_facetimeAudioIDStatuses;
    CKTranscriptAddRecipientCell *_addRecipientCell;
    CKTranscriptLocationShareCell *_locationShareCell;
    CKTranscriptDetailsResizableCell *_locationSendCell;
    CKTranscriptDetailsResizableCell *_locationStartShareCell;
    CKTranscriptRecipientCell *_sizingRecipientCell;
    CKGroupRecipientSelectionController *_addRecipientsController;
    UITextView *_locationSharingTextView;
    NSTimer *_fmfUpdateTimer;
}

@property(nonatomic) _Bool fmfRestricted; // @synthesize fmfRestricted=_fmfRestricted;
@property(nonatomic) _Bool fmfDisabled; // @synthesize fmfDisabled=_fmfDisabled;
@property(retain, nonatomic) NSTimer *fmfUpdateTimer; // @synthesize fmfUpdateTimer=_fmfUpdateTimer;
@property(retain, nonatomic) UITextView *locationSharingTextView; // @synthesize locationSharingTextView=_locationSharingTextView;
@property(retain, nonatomic) CKGroupRecipientSelectionController *addRecipientsController; // @synthesize addRecipientsController=_addRecipientsController;
@property(retain, nonatomic) CKTranscriptRecipientCell *sizingRecipientCell; // @synthesize sizingRecipientCell=_sizingRecipientCell;
@property(retain, nonatomic) CKTranscriptDetailsResizableCell *locationStartShareCell; // @synthesize locationStartShareCell=_locationStartShareCell;
@property(retain, nonatomic) CKTranscriptDetailsResizableCell *locationSendCell; // @synthesize locationSendCell=_locationSendCell;
@property(retain, nonatomic) CKTranscriptLocationShareCell *locationShareCell; // @synthesize locationShareCell=_locationShareCell;
@property(retain, nonatomic) CKTranscriptAddRecipientCell *addRecipientCell; // @synthesize addRecipientCell=_addRecipientCell;
@property(retain, nonatomic) NSDictionary *facetimeAudioIDStatuses; // @synthesize facetimeAudioIDStatuses=_facetimeAudioIDStatuses;
@property(retain, nonatomic) NSDictionary *facetimeIDStatuses; // @synthesize facetimeIDStatuses=_facetimeIDStatuses;
@property(retain, nonatomic) NSString *serviceAvailabilityKey; // @synthesize serviceAvailabilityKey=_serviceAvailabilityKey;
@property(nonatomic) id <CKTranscriptRecipientsControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CKConversation *conversation; // @synthesize conversation=_conversation;
- (void)_handleActiveDeviceChanged:(id)arg1;
- (void)_handleLocationChangedNotification:(id)arg1;
- (void)_handleFriendshipStatusChangedNotification:(id)arg1;
- (void)_updateTimedFMFState;
- (void)_setupFMFUpdateTimerIfNecessary;
- (void)_conversationJoinStateDidChange:(id)arg1;
- (void)_handleAddressBookChangedNotification:(id)arg1;
- (void)_handleConversationRecipientsChanged:(id)arg1;
- (void)_handleCancelAction:(id)arg1;
- (void)_handleDoneAction:(id)arg1;
- (void)_startEmailCommunicationWithEntity:(id)arg1;
- (void)_showContactCardForEntity:(id)arg1 fromView:(id)arg2;
- (void)_startFacetimeCommunicationForEntity:(id)arg1 audioOnly:(_Bool)arg2;
- (void)_startCallWithAddress:(id)arg1 entity:(id)arg2;
- (void)_requestCallTypeForEntity:(id)arg1 withAddresses:(id)arg2 withLabels:(id)arg3 faceTimeAudioEnabled:(_Bool)arg4;
- (void)_startCommunicationForEntity:(id)arg1;
- (void)infoAction:(id)arg1;
- (void)facetimeVideoAction:(id)arg1;
- (void)phoneCallAction:(id)arg1;
- (void)sendEmailAction:(id)arg1;
- (id)indexPathForButton:(id)arg1;
- (id)entityForButton:(id)arg1;
- (long long)_facetimeAudioIDStatusForEntity:(id)arg1;
- (long long)_facetimeIDStatusForEntity:(id)arg1;
- (void)_refreshFaceTimeIDSStatusWithCompletion:(CDUnknownBlockType)arg1;
- (void)_faceTimeAvailabilityChange:(id)arg1;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_presentRemoveRecipientSheetForRecipient:(id)arg1 inView:(id)arg2 fromRect:(struct CGRect)arg3;
- (void)_presentLeaveActionSheetInView:(id)arg1 fromRect:(struct CGRect)arg2;
- (void)_presentSharingActionSheet:(_Bool)arg1 inView:(id)arg2 fromRect:(struct CGRect)arg3;
- (void)_sendCurrentLocation;
- (void)_muteSwitchValueChanged:(id)arg1;
- (void)_configureDNDCell:(id)arg1 atIndexPath:(id)arg2;
- (_Bool)_hasLinkedTelephoneNumbersForEntity:(id)arg1;
- (_Bool)_isFaceTimeAudioAvailable;
- (_Bool)_isFaceTimeVideoAvailable;
- (_Bool)_isTelephonyDevice;
- (_Bool)_showEmailButtonForEntity:(id)arg1;
- (_Bool)_showFaceTimeVideoButtonForEntity:(id)arg1;
- (_Bool)_showPhoneButtonForEntity:(id)arg1;
- (void)_configureRecipientCell:(id)arg1 atIndexPath:(id)arg2;
- (id)locationCellForIndexPath:(id)arg1;
- (id)leaveCellForIndexPath:(id)arg1;
- (id)dndCellForIndexPath:(id)arg1;
- (id)recipientCellForIndexPath:(id)arg1;
- (_Bool)_shouldShowActiveDeviceSwitchFooter;
- (_Bool)_conversationHasLeft;
- (_Bool)_shouldShowEnhancedGroupFeatures;
- (void)_presentGroupRecipientSelectionController;
- (id)recipients;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 conversation:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKTranscriptRecipientsHeaderFooterView : UITableViewHeaderFooterView
{
    UILabel *_headerLabel;
    UILabel *_preceedingSectionFooterLabel;
    UITextView *_locationSharingTextView;
    UIView *_topSeparator;
    UIView *_bottomSeparator;
    double _margin;
}

+ (id)identifier;
@property(nonatomic) double margin; // @synthesize margin=_margin;
@property(retain, nonatomic) UIView *bottomSeparator; // @synthesize bottomSeparator=_bottomSeparator;
@property(retain, nonatomic) UIView *topSeparator; // @synthesize topSeparator=_topSeparator;
@property(retain, nonatomic) UITextView *locationSharingTextView; // @synthesize locationSharingTextView=_locationSharingTextView;
@property(retain, nonatomic) UILabel *preceedingSectionFooterLabel; // @synthesize preceedingSectionFooterLabel=_preceedingSectionFooterLabel;
@property(retain, nonatomic) UILabel *headerLabel; // @synthesize headerLabel=_headerLabel;
- (void)layoutSubviews;
- (id)initWithReuseIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface CKTranscriptStatusCell : CKTranscriptLabelCell
{
    UIButton *_statusButton;
    double _prevBalloonWidth;
}

+ (void)transitionFromView:(id)arg1 toView:(id)arg2 duration:(double)arg3 options:(unsigned long long)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)zoomAnimation:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)statusButton;
@property(nonatomic) double prevBalloonWidth; // @synthesize prevBalloonWidth=_prevBalloonWidth;
@property(retain, nonatomic) UIButton *statusButton; // @synthesize statusButton=_statusButton;
@property(copy, nonatomic) NSAttributedString *attributedButtonText;
- (void)performRemoval:(CDUnknownBlockType)arg1;
- (void)performReload:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (void)performInsertion:(CDUnknownBlockType)arg1;
- (void)layoutSubviewsForAlignmentContents;
- (void)setOrientation:(BOOL)arg1;
- (void)dealloc;
- (void)configureForChatItem:(id)arg1;

@end

@interface CKTranscriptTypingIndicatorCell : CKTranscriptMessageCell
{
    CKTypingIndicatorLayer *_typingIndicatorLayer;
}

+ (struct CGSize)indicatorSize;
@property(retain, nonatomic) CKTypingIndicatorLayer *typingIndicatorLayer; // @synthesize typingIndicatorLayer=_typingIndicatorLayer;
- (void)startShrinkAnimation;
- (void)stopPulseAnimation;
- (void)startPulseAnimation;
- (void)startGrowAnimation;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)performRemoval:(CDUnknownBlockType)arg1;
- (void)performInsertion:(CDUnknownBlockType)arg1;
- (void)layoutSubviewsForAlignmentContents;
- (void)setOrientation:(BOOL)arg1;
- (void)prepareForReuse;
- (void)didMoveToWindow;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;
- (void)configureForChatItem:(id)arg1;

@end

@interface CKTruncatedTextBalloonView : CKHyperlinkBalloonView <NSLayoutManagerDelegate>
{
    UIImageView *_chevron;
}

@property(retain, nonatomic) UIImageView *chevron; // @synthesize chevron=_chevron;
- (void)prepareForDisplay;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKTypingChatItem : CKChatItem
{
}

@property(readonly, nonatomic, getter=isFromMe) _Bool fromMe;
- (struct CGSize)loadSizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(out struct UIEdgeInsets *)arg2;
- (_Bool)wantsDrawerLayout;
- (_Bool)displayDuringSend;
- (Class)cellClass;
- (BOOL)transcriptOrientation;
- (struct UIEdgeInsets)contentInsets;

@end

@interface CKTypingIndicatorLayer : CALayer
{
    CALayer *_smallBubble;
    CALayer *_mediumBubble;
    CALayer *_largeBubble;
    CALayer *_thinkingDot;
    CAReplicatorLayer *_thinkingDots;
    struct CGPoint _smallBubbleOffset;
    struct CGPoint _mediumBubbleOffset;
    struct CGPoint _largeBubbleOffset;
}

+ (struct CGSize)defaultSize;
@property(retain, nonatomic) CAReplicatorLayer *thinkingDots; // @synthesize thinkingDots=_thinkingDots;
@property(retain, nonatomic) CALayer *thinkingDot; // @synthesize thinkingDot=_thinkingDot;
@property(nonatomic) struct CGPoint largeBubbleOffset; // @synthesize largeBubbleOffset=_largeBubbleOffset;
@property(retain, nonatomic) CALayer *largeBubble; // @synthesize largeBubble=_largeBubble;
@property(nonatomic) struct CGPoint mediumBubbleOffset; // @synthesize mediumBubbleOffset=_mediumBubbleOffset;
@property(retain, nonatomic) CALayer *mediumBubble; // @synthesize mediumBubble=_mediumBubble;
@property(nonatomic) struct CGPoint smallBubbleOffset; // @synthesize smallBubbleOffset=_smallBubbleOffset;
@property(retain, nonatomic) CALayer *smallBubble; // @synthesize smallBubble=_smallBubble;
- (void)stopAnimation;
- (void)startShrinkAnimation;
- (void)stopPulseAnimation;
- (void)startPulseAnimation;
- (void)startGrowAnimation;
- (id)_largeBubblePulseAnimationWithSpeed:(double)arg1 delay:(double)arg2;
- (id)_largeBubbleGrowAnimationsWithSpeed:(double)arg1 offset:(struct CGPoint)arg2;
- (id)_mediumBubblePulseAnimationWithSpeed:(double)arg1 delay:(double)arg2;
- (id)_mediumBubbleGrowAnimationsWithSpeed:(double)arg1 offset:(struct CGPoint)arg2;
- (id)_smallBubblePulseAnimationWithSpeed:(double)arg1 delay:(double)arg2;
- (id)_smallBubbleGrowAnimationsWithSpeed:(double)arg1 offset:(struct CGPoint)arg2;
- (void)_buildThinkingDots;
- (void)_setup;
- (void)dealloc;
- (id)init;

@end

@interface CKUIBehavior : NSObject
{
    long long _HUDStyle;
    double _waveformMaxWidth;
}

+ (id)sharedBehaviors;
@property(readonly, nonatomic) double waveformMaxWidth; // @synthesize waveformMaxWidth=_waveformMaxWidth;
@property(nonatomic) long long HUDStyle; // @synthesize HUDStyle=_HUDStyle;
@property(readonly, nonatomic) UIFont *headerFont;
@property(readonly, nonatomic) UIFont *locationSubtitleFont;
@property(readonly, nonatomic) UIFont *recipientNameFont;
@property(readonly, nonatomic) UIFont *nameFieldFont;
@property(readonly, nonatomic) UIColor *detailsBackgroundColor;
@property(readonly, nonatomic) double photoPickerMaxPhotoWidth;
@property(readonly, nonatomic) double photoPickerMaxZoomedPhotoHeight;
@property(readonly, nonatomic) double photoPickerMaxPhotoHeight;
@property(readonly, nonatomic) _Bool photoPickerShouldZoomOnSelection;
@property(readonly, nonatomic) UIColor *activeRecordingDotColor;
@property(readonly, nonatomic) struct UIEdgeInsets photoPickerSectionInsets;
@property(readonly, nonatomic) double photoPickerInterItemSpacing;
@property(readonly, nonatomic) unsigned long long numberOfButtonsInPhotoPicker;
@property(readonly, nonatomic) double photoPickerPopoverWidth;
@property(readonly, nonatomic) double attachmentBrowserHeaderLabelPadding;
@property(readonly, nonatomic) struct UIEdgeInsets attachmentBrowserFeedLayoutSectionInset;
@property(readonly, nonatomic) struct UIEdgeInsets attachmentBrowserGridSectionInset;
@property(readonly, nonatomic) double attachmentBrowserGridMinimumLineSpacing;
@property(readonly, nonatomic) double attachmentBrowserGridInterItemSpacing;
@property(readonly, nonatomic) struct CGSize attachmentBrowserDefaultSizeForSquare;
@property(readonly, nonatomic) UIColor *recipientsDividerColor;
@property(readonly, nonatomic) double dividerHeight;
@property(readonly, nonatomic) UIFont *audioHintFont;
@property(readonly, nonatomic) UIFont *characterCountFont;
@property(readonly, nonatomic) UIColor *entryFieldAudioRecordingBaloonColor;
@property(readonly, nonatomic) UIColor *entryFieldTextColor;
@property(readonly, nonatomic) UIColor *entryFieldDividerColor;
@property(readonly, nonatomic) UIColor *entryFieldBackgroundColor;
@property(readonly, nonatomic) UIColor *entryFieldCoverBorderColor;
@property(readonly, nonatomic) UIColor *entryFieldCoverFillColor;
@property(readonly, nonatomic) UIColor *entryFieldGrayColor;
@property(readonly, nonatomic) UIColor *entryFieldButtonColor;
- (id)red_sendButtonColor;
- (id)siri_sendButtonColor;
- (id)blue_sendButtonColor;
- (id)green_sendButtonColor;
- (id)gray_sendButtonColor;
- (id)sendButtonColorForColorType:(BOOL)arg1;
@property(readonly, nonatomic) double entryFieldCoverLineWidth;
@property(readonly, nonatomic) double entryFieldDividerHeight;
@property(readonly, nonatomic) struct UIEdgeInsets entryViewCoverInsets;
@property(readonly, nonatomic) struct UIEdgeInsets entryViewVerticalAlignmentInsets;
@property(readonly, nonatomic) struct UIEdgeInsets entryViewMarginInsets;
@property(readonly, nonatomic) _Bool entryFieldShouldUseBackdropView;
@property(readonly, nonatomic) long long keyboardAppearance;
@property(readonly, nonatomic) double maxAudioRecordingDuration;
@property(readonly, nonatomic) double minAudioRecordingDuration;
@property(readonly, nonatomic) _Bool shouldNotShowSendButton;
- (double)toFieldPreferredHeight;
- (id)red_recipientTextColor;
- (id)siri_recipientTextColor;
- (id)blue_recipientTextColor;
- (id)green_recipientTextColor;
- (id)gray_recipientTextColor;
- (id)recipientTextColorForColorType:(BOOL)arg1;
@property(readonly, nonatomic) _Bool presentsFullscreenInViewService;
@property(readonly, nonatomic) _Bool shouldRefreshAlternateAddressesSheet;
@property(readonly, nonatomic) _Bool shouldAutomaticallyCheckAvailabilityOfAlternateAddresses;
@property(readonly, nonatomic) _Bool shouldShowDisclosureChevronInRecipientAtoms;
@property(readonly, nonatomic) _Bool shouldHomogenizeAtomsForPreferredService;
@property(readonly, nonatomic) UIImage *textDocumentIcon;
@property(readonly, nonatomic) UIImage *errorDocumentIcon;
@property(readonly, nonatomic) UIImage *genericDocumentIcon;
@property(readonly, nonatomic) UIFont *previewTitleFont;
@property(readonly, nonatomic) UIColor *waveformDisabledColor;
@property(readonly, nonatomic) UIColor *waveformUnplayedColor;
- (id)red_progressViewColor;
- (id)siri_progressViewColor;
- (id)blue_progressViewColor;
- (id)green_progressViewColor;
- (id)gray_progressViewColor;
- (id)progressViewColorForColorType:(BOOL)arg1;
- (id)red_waveformColor;
- (id)siri_waveformColor;
- (id)blue_waveformColor;
- (id)green_waveformColor;
- (id)gray_waveformColor;
- (id)waveformColorForColorType:(BOOL)arg1;
@property(readonly, nonatomic) UIColor *attachmentBalloonTextColor;
@property(readonly, nonatomic) UIColor *attachmentBalloonActionColor;
- (double)transcriptWaveformWidthForDuration:(double)arg1;
@property(readonly, nonatomic) unsigned long long waveformPowerLevelWidthIncrement;
@property(readonly, nonatomic) unsigned long long waveformGapWidth;
@property(readonly, nonatomic) unsigned long long waveformPowerLevelWidth;
@property(readonly, nonatomic) double waveformHeight;
- (struct UIEdgeInsets)thumbnailContentAlignmentInsetsForOrientation:(BOOL)arg1;
@property(readonly, nonatomic) double previewTitleBarHeight;
@property(readonly, nonatomic) struct UIEdgeInsets minimumPlayButtonInsets;
- (struct CGSize)mapThumbnailFillSizeForWidth:(double)arg1;
- (struct CGSize)thumbnailFillSizeForWidth:(double)arg1 imageSize:(struct CGSize)arg2;
@property(readonly, nonatomic) double contactBalloonMinWidth;
@property(readonly, nonatomic) struct CGSize attachmentBalloonSize;
@property(readonly, nonatomic) struct CGSize documentIconSize;
@property(readonly, nonatomic) double waveformMinLinearPowerLevel;
@property(readonly, nonatomic) double waveformMinDbPowerLevel;
@property(readonly, nonatomic) unsigned long long waveformMinPowerLevelsCount;
@property(readonly, nonatomic) unsigned long long waveformMaxPowerLevelsCount;
@property(readonly, nonatomic) double waveformMaxWidthDuration;
@property(readonly, nonatomic) _Bool supportsPassbookAttachments;
- (struct CGSize)locationShareBalloonSizeForWidth:(double)arg1 offerState:(long long)arg2;
@property(readonly, nonatomic) double locationShareBalloonContactImageDiameter;
- (double)locationShareBalloonLabelMaxHeightForOfferState:(long long)arg1;
@property(readonly, nonatomic) double locationShareBalloonButtonHeight;
@property(readonly, nonatomic) double locationShareBalloonAdditionalVertPadding;
- (struct CGSize)locationOfferMapThumbnailFillSizeForWidth:(double)arg1;
- (id)red_chevronImage;
- (id)siri_chevronImage;
- (id)blue_chevronImage;
- (id)green_chevronImage;
- (id)gray_chevronImage;
- (id)chevronImageForColorType:(BOOL)arg1;
- (id)systemGrayChevronImage;
- (id)whiteChevronImage;
@property(readonly, nonatomic) UIFont *audioBalloonTimeFont;
@property(readonly, nonatomic) UIFont *balloonSubjectFont;
@property(readonly, nonatomic) UIFont *balloonTextFont;
- (id)red_balloonOverlayColor;
- (id)siri_balloonOverlayColor;
- (id)blue_balloonOverlayColor;
- (id)green_balloonOverlayColor;
- (id)gray_balloonOverlayColor;
- (id)balloonOverlayColorForColorType:(BOOL)arg1;
- (id)red_balloonTextLinkColor;
- (id)siri_balloonTextLinkColor;
- (id)blue_balloonTextLinkColor;
- (id)green_balloonTextLinkColor;
- (id)gray_balloonTextLinkColor;
- (id)balloonTextLinkColorForColorType:(BOOL)arg1;
- (id)red_balloonTextColor;
- (id)siri_balloonTextColor;
- (id)blue_balloonTextColor;
- (id)green_balloonTextColor;
- (id)gray_balloonTextColor;
- (id)balloonTextColorForColorType:(BOOL)arg1;
- (id)red_unfilledBalloonColor;
- (id)siri_unfilledBalloonColor;
- (id)blue_unfilledBalloonColor;
- (id)green_unfilledBalloonColor;
- (id)gray_unfilledBalloonColor;
- (id)unfilledBalloonColorForColorType:(BOOL)arg1;
- (id)red_balloonColors;
- (id)siri_balloonColors;
- (id)blue_balloonColors;
- (id)green_balloonColors;
- (id)gray_balloonColors;
- (id)balloonColorsForColorType:(BOOL)arg1;
@property(readonly, nonatomic) double audioBalloonTimeInset;
@property(readonly, nonatomic) double audioBalloonWaveformTimeSpace;
- (double)audioBalloonTimeWidthForDuration:(double)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets balloonMaskFrameInsets;
@property(readonly, nonatomic) struct UIEdgeInsets balloonMaskFrameCapInsets;
@property(readonly, nonatomic) double balloonLineFragmentPadding;
@property(readonly, nonatomic) struct UIEdgeInsets balloonTextContainerInset;
@property(readonly, nonatomic) struct UIEdgeInsets balloonMaskAlignmentRectInsets;
@property(readonly, nonatomic) struct UIEdgeInsets skinnyBalloonMaskCapInsets;
@property(readonly, nonatomic) struct UIEdgeInsets balloonMaskCapInsets;
@property(readonly, nonatomic) struct CGSize skinnyBalloonMaskSize;
@property(readonly, nonatomic) struct CGSize balloonMaskSize;
@property(readonly, nonatomic) double skinnyBalloonWidthDifference;
@property(readonly, nonatomic) double balloonMaskTailWidth;
@property(readonly, nonatomic) _Bool shouldUseDynamicGradient;
@property(readonly, nonatomic) UIImage *locationShareActionIcon;
@property(readonly, nonatomic) NSDictionary *drawerTranscriptTextAttributes;
@property(readonly, nonatomic) NSDictionary *stampTranscriptBoldTextAttributes;
@property(readonly, nonatomic) NSDictionary *stampTranscriptTextAttributes;
@property(readonly, nonatomic) NSDictionary *senderTranscriptTextAttributes;
- (id)statusTranscriptBoldTextAttributesForOrientation:(BOOL)arg1;
- (id)statusTranscriptTextAttributesForOrientation:(BOOL)arg1;
- (id)_rightStatusTranscriptBoldTextAttributes;
- (id)_leftStatusTranscriptBoldTextAttributes;
- (id)_rightStatusTranscriptTextAttributes;
- (id)_leftStatusTranscriptTextAttributes;
@property(readonly, nonatomic) UIFont *transcriptBoldTextFont;
@property(readonly, nonatomic) UIFont *transcriptTextFont;
@property(readonly, nonatomic) UIColor *transcriptTextColor;
@property(readonly, nonatomic) UIColor *transcriptBackgroundColor;
@property(readonly, nonatomic) double entryContentViewPortraitWidth;
@property(readonly, nonatomic) double entryCoverViewPortraitWidth;
- (double)composeBalloonMaxWidthForEntryContentViewWidth:(double)arg1;
- (double)rightBalloonMaxWidthForEntryContentViewWidth:(double)arg1;
- (double)leftBalloonMaxWidthForTranscriptWidth:(double)arg1 marginInsets:(struct UIEdgeInsets)arg2;
@property(readonly, nonatomic) double contactPhotoBalloonMargin;
- (double)balloonBalloonTranscriptSpace:(unsigned char)arg1;
@property(readonly, nonatomic) double largeTranscriptSpace;
@property(readonly, nonatomic) double mediumTranscriptSpace;
@property(readonly, nonatomic) double smallTranscriptSpace;
@property(readonly, nonatomic) double bottomTranscriptSpace;
@property(readonly, nonatomic) double topTranscriptSpace;
- (double)timestampBodyLeadingFraction:(double)arg1;
- (double)timestampBodyLeading;
- (void)invalidateTranscriptDrawerWidth;
- (double)transcriptDrawerWidthForMarginInsets:(struct UIEdgeInsets)arg1;
- (double)transcriptDrawerOverlapForMarginInsets:(struct UIEdgeInsets)arg1;
@property(readonly, nonatomic) struct UIEdgeInsets contactPhotoTranscriptInsets;
@property(readonly, nonatomic) struct UIEdgeInsets stampTranscriptInsets;
@property(readonly, nonatomic) struct UIEdgeInsets senderTranscriptInsets;
@property(readonly, nonatomic) struct UIEdgeInsets balloonTranscriptInsets;
@property(readonly, nonatomic) double previewMaxWidth;
@property(readonly, nonatomic) struct UIEdgeInsets transcriptMarginInsets;
@property(readonly, nonatomic) struct UIEdgeInsets statusButtonContentEdgeInsets;
@property(readonly, nonatomic) struct CGSize statusSaveButtonTranscriptTextSize;
@property(readonly, nonatomic) NSAttributedString *statusSaveButtonTranscriptText;
@property(readonly, nonatomic) double transcriptBoldTextHeight;
@property(readonly, nonatomic) struct UIEdgeInsets transcriptBoldTextAlignmentInsets;
@property(readonly, nonatomic) double transcriptDrawerContactImagePadding;
@property(readonly, nonatomic) double transcriptDrawerContactImageDiameter;
@property(readonly, nonatomic) double transcriptContactImageDiameter;
@property(readonly, nonatomic) _Bool shouldUseDynamicScrolling;
@property(readonly, nonatomic) _Bool shouldShowContactPhotosInTranscript;
@property(readonly, nonatomic) _Bool supportsTypingIndicatorAnimation;
@property(readonly, nonatomic) UIFont *readerFont;
@property(readonly, nonatomic) UIFont *transcriptHeaderTextFont;
@property(readonly, nonatomic) UIColor *dimmingViewBackgroundColor;
@property(readonly, nonatomic) UIColor *transcriptSeparatorColor;
@property(readonly, nonatomic) double updateTranscriptInsetsAnimationDuration;
@property(readonly, nonatomic) double editingTransitionAnimationDuration;
@property(readonly, nonatomic) double resizeMessageEntryViewAnimationDuration;
@property(readonly, nonatomic) double throwMessageAnimationDuration;
@property(readonly, nonatomic) double scrollInNewMessageAnimationDuration;
@property(readonly, nonatomic) double fadeInBubbleAnimationDuration;
- (double)_transcriptAnimationScaleFactor;
@property(readonly, nonatomic) _Bool shouldUseSendAnimation;
@property(readonly, nonatomic) _Bool shouldDimTranscript;
@property(readonly, nonatomic) _Bool shouldBackfillTranscript;
@property(readonly, nonatomic) UIImage *forwardImage;
@property(readonly, nonatomic) UIImage *unreadDNDImage;
@property(readonly, nonatomic) UIImage *readDNDImage;
@property(readonly, nonatomic) UIImage *unreadImage;
@property(readonly, nonatomic) UIFont *conversationListDateFont;
@property(readonly, nonatomic) UIFont *conversationListSummaryFont;
@property(readonly, nonatomic) UIFont *conversationListGroupSenderFont;
@property(readonly, nonatomic) UIFont *conversationListSenderFont;
@property(readonly, nonatomic) double conversationListMultipleContactsImageDiameter;
@property(readonly, nonatomic) double conversationListContactImageDiameter;
@property(readonly, nonatomic) _Bool shouldShowContactPhotosInConversationList;
@property(readonly, nonatomic) _Bool usesPersistentConversationSelection;
@property(readonly, nonatomic) _Bool selectNewConversationOnDeletion;
@property(readonly, nonatomic) _Bool selectNewConversationOnStateRestore;
@property(readonly, nonatomic) _Bool showPendingInConversationList;
@property(readonly, nonatomic) UIImage *chevronImage;
@property(readonly, nonatomic) UIColor *lightGrayColor;
@property(readonly, nonatomic) UIColor *appTintColor;
@property(readonly, nonatomic) double senderSummaryConversationListSpace;
@property(readonly, nonatomic) double bottomConversationListSpace;
@property(readonly, nonatomic) double topConversationListSpace;
- (double)conversationListSummaryBodyLeading;
- (double)conversationListSenderBodyLeading;
@property(readonly, nonatomic) double transcriptPortraitWidth;
- (double)leftSplitPaneWidthFraction;
- (double)leftSplitPaneMaximumWidth;
- (double)leftSplitPaneMinimumWidth;
- (double)leftSplitPaneWidthForUIInterfaceOrientation:(long long)arg1;
@property(readonly, nonatomic) _Bool showMMSSetup;
@property(readonly, nonatomic) _Bool photosIsWhitelisted;
@property(readonly, nonatomic) _Bool cameraIsWhitelisted;
@property(readonly, nonatomic) _Bool mailIsWhitelisted;
@property(readonly, nonatomic) _Bool faceTimeAudioIsWhitelisted;
@property(readonly, nonatomic) _Bool faceTimeVideoIsWhitelisted;
@property(readonly, nonatomic) _Bool phoneIsWhitelisted;
@property(readonly, nonatomic) _Bool canAccessPhotos;
@property(readonly, nonatomic) _Bool canAccessContacts;
@property(readonly, nonatomic) NSDateFormatter *timestampDateFormatter;
@property(readonly, nonatomic) unsigned long long conversationCacheSize;
@property(readonly, nonatomic) unsigned long long defaultConversationSummaryMessageCount;
@property(readonly, nonatomic) unsigned long long defaultConversationViewingMessageCount;
@property(readonly, nonatomic) unsigned long long supportedInterfaceOrientations;
@property(readonly, nonatomic) double transcriptHeaderViewMaxRows;
@property(readonly, nonatomic) _Bool isAccessibilityPreferredContentSizeCategory;
@property(readonly, nonatomic) _Bool joystickUsesWindow;
@property(readonly, nonatomic) _Bool usesJoystick;
@property(readonly, nonatomic) _Bool presentForwardingUIModally;
@property(readonly, nonatomic) _Bool shouldUseTranslucentBars;
@property(readonly, nonatomic) _Bool showsChevronImage;
@property(readonly, nonatomic) _Bool presentsReaderController;
@property(readonly, nonatomic) _Bool usesPopovers;
@property(readonly, nonatomic) _Bool presentsQuickLookController;
@property(readonly, nonatomic) _Bool lowClearanceInLandscape;
@property(readonly, nonatomic) _Bool shouldSuppressRotationInNewCompose;
@property(readonly, nonatomic) _Bool shouldReconfigureNewComposeOnRotation;
@property(readonly, nonatomic) _Bool usesCustomSplitViewMasterColumnWidth;
@property(readonly, nonatomic) _Bool usesUncollapsedSplitview;
@property(readonly, nonatomic) double raiseToTalkErrorMaxDuration;
@property(readonly, nonatomic) double raiseToTalkAutoSendMaxDuration;
@property(readonly, nonatomic) double locationValidInterval;
@property(readonly, nonatomic) long long locationShareEODHour;
@property(readonly, nonatomic) double locationShareOneHourTimeInterval;
@property(readonly, nonatomic) double muteEightHourTimeInterval;
@property(readonly, nonatomic) double muteOneHourTimeInterval;

@end

@interface CKUIBehaviorPad : CKUIBehavior
{
}

- (double)photoPickerMaxZoomedPhotoHeight;
- (_Bool)photoPickerShouldZoomOnSelection;
- (unsigned long long)numberOfButtonsInPhotoPicker;
- (double)photoPickerPopoverWidth;
- (double)attachmentBrowserGridInterItemSpacing;
- (struct CGSize)attachmentBrowserDefaultSizeForSquare;
- (_Bool)presentsFullscreenInViewService;
- (_Bool)shouldRefreshAlternateAddressesSheet;
- (_Bool)shouldShowDisclosureChevronInRecipientAtoms;
- (struct CGSize)documentIconSize;
- (struct UIEdgeInsets)contactPhotoTranscriptInsets;
- (double)transcriptContactImageDiameter;
- (_Bool)shouldDimTranscript;
- (_Bool)shouldShowContactPhotosInConversationList;
- (_Bool)showPendingInConversationList;
- (double)leftSplitPaneWidthFraction;
- (double)leftSplitPaneMaximumWidth;
- (double)leftSplitPaneMinimumWidth;
- (double)leftSplitPaneWidthForUIInterfaceOrientation:(long long)arg1;
- (_Bool)showMMSSetup;
- (unsigned long long)supportedInterfaceOrientations;
- (double)transcriptHeaderViewMaxRows;
- (_Bool)presentForwardingUIModally;
- (_Bool)showsChevronImage;
- (_Bool)presentsReaderController;
- (_Bool)presentsQuickLookController;
- (_Bool)usesPopovers;
- (_Bool)lowClearanceInLandscape;
- (_Bool)shouldSuppressRotationInNewCompose;
- (_Bool)shouldReconfigureNewComposeOnRotation;
- (_Bool)usesCustomSplitViewMasterColumnWidth;
- (_Bool)usesUncollapsedSplitview;

@end

@interface CKUIBehaviorHUDPad : CKUIBehaviorPad
{
}

- (id)entryFieldAudioRecordingBaloonColor;
- (id)entryFieldBackgroundColor;
- (id)entryFieldTextColor;
- (id)entryFieldCoverBorderColor;
- (id)entryFieldCoverFillColor;
- (id)entryFieldButtonColor;
- (id)siri_sendButtonColor;
- (id)blue_sendButtonColor;
- (id)green_sendButtonColor;
- (double)entryFieldDividerHeight;
- (_Bool)usesJoystick;
- (_Bool)entryFieldShouldUseBackdropView;
- (long long)keyboardAppearance;
- (_Bool)shouldNotShowSendButton;

@end

@interface CKUIBehaviorPhone : CKUIBehavior
{
}

@end

@interface CKUIBehaviorHUDPhone : CKUIBehaviorPhone
{
}

- (id)entryFieldAudioRecordingBaloonColor;
- (id)entryFieldBackgroundColor;
- (id)entryFieldTextColor;
- (id)entryFieldCoverBorderColor;
- (id)entryFieldCoverFillColor;
- (id)entryFieldButtonColor;
- (id)siri_sendButtonColor;
- (id)blue_sendButtonColor;
- (id)green_sendButtonColor;
- (double)entryFieldDividerHeight;
- (_Bool)usesJoystick;
- (_Bool)entryFieldShouldUseBackdropView;
- (long long)keyboardAppearance;
- (_Bool)shouldNotShowSendButton;

@end

@interface CKVerticalTiledLayoutGenerator : CKTiledLayoutGenerator
{
    struct CGPoint _origin;
    CDStruct_1417b155 _enqueuedCaptionTileInfo;
    _Bool _shouldDisplayCaptionsBelowBatches;
    double _referenceWidth;
}

@property(nonatomic) _Bool shouldDisplayCaptionsBelowBatches; // @synthesize shouldDisplayCaptionsBelowBatches=_shouldDisplayCaptionsBelowBatches;
@property(nonatomic) double referenceWidth; // @synthesize referenceWidth=_referenceWidth;
- (void)_willAddRowWithFirstTileInfo:(CDStruct_1417b155)arg1;
- (_Bool)_addSpecialSequenceBlock:(CDStruct_1417b155 *)arg1;
- (_Bool)_addRowWithTiles:(CDStruct_1417b155 *)arg1 imageFrames:(struct CGRect *)arg2 count:(long long)arg3;
- (void)_enumerateRowFramesWithContiguousTiles:(CDStruct_1417b155 *)arg1 count:(long long)arg2 useMagneticGuidelines:(_Bool)arg3 block:(CDUnknownBlockType)arg4;
- (_Bool)_addRowWithContiguousTiles:(CDStruct_1417b155 *)arg1 count:(long long)arg2;
- (_Bool)_dequeueCaption;
- (_Bool)_hasEnqueuedCaption;
- (void)_enqueueCaptionWithTileInfo:(CDStruct_1417b155)arg1;
- (_Bool)_isAtEndOfRow;
- (_Bool)_hasLeftSuboptimalRow;
- (_Bool)_scanTripletWithRearrangment:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanTripletWithLargeLead:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanNonPanoramaSequence:(CDStruct_1417b155 *)arg1 count:(long long)arg2;
- (_Bool)_scanSpecialSequenceRow:(CDStruct_1417b155 *)arg1 count:(long long *)arg2;
- (_Bool)_scanSpecialSequenceBlock:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanTileTriplet:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanTilePair:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanTileRequiringNewRow:(CDStruct_1417b155 *)arg1;
- (_Bool)_scanTileRequiringFullWidth:(CDStruct_1417b155 *)arg1;
- (_Bool)_parseSpecialSubsequenceWithRowRequired:(_Bool)arg1 rowParsed:(_Bool *)arg2;
- (_Bool)_parseSpecialSequence;
- (_Bool)_parseSpecialTileTriplet;
- (_Bool)_parseTileRequiringFullWidth;
- (_Bool)_parseTileTriplet;
- (_Bool)_parseTilePair;
- (_Bool)_parseSingleTile;
- (double)referenceDistanceForMagneticGuidelines;
- (void)didParseTiles;
- (_Bool)parseNextTiles;
- (void)willParseTiles;

@end

@interface CKVideoMessageRecordingViewController : UIViewController <UINavigationControllerDelegate, UIImagePickerControllerDelegate, CKJoystickControllerDelegate, CKVideoRecorderDelegate, CKVideoPreviewViewControllerDelegate>
{
    UIView *_presentationView;
    UIWindow *_overlayWindow;
    _Bool _presented;
    _Bool _previewWarmedUp;
    _Bool _showingVideo;
    _Bool _previewing;
    _Bool _recording;
    _Bool _sending;
    _Bool _canceled;
    _Bool _triedToRecord;
    id <CKVideoMessageRecordingViewControllerDelegate> _videoMessageDelegate;
    UIView *_topBackgroundView;
    CKRecordingElapsedTimeView *_timerView;
    CKJoystickController *_videoJoystickController;
    CKJoystickShutterButtonItem *_recordVideoButtonItem;
    CKJoystickButtonItem *_sendButtonItem;
    UIButton *_swapCameraButton;
    unsigned long long _enableCancel;
    CKMediaObject *_mediaObjectForSending;
    NSError *_captureError;
    CDUnknownBlockType _mediaExportCompletionBlock;
    UIImagePickerController *_cameraViewController;
    CKVideoPreviewViewController *_previewViewController;
}

@property(retain, nonatomic) CKVideoPreviewViewController *previewViewController; // @synthesize previewViewController=_previewViewController;
@property(retain, nonatomic) UIImagePickerController *cameraViewController; // @synthesize cameraViewController=_cameraViewController;
@property(copy, nonatomic) CDUnknownBlockType mediaExportCompletionBlock; // @synthesize mediaExportCompletionBlock=_mediaExportCompletionBlock;
@property(retain, nonatomic) NSError *captureError; // @synthesize captureError=_captureError;
@property(retain, nonatomic) CKMediaObject *mediaObjectForSending; // @synthesize mediaObjectForSending=_mediaObjectForSending;
@property(nonatomic) unsigned long long enableCancel; // @synthesize enableCancel=_enableCancel;
@property(nonatomic) _Bool triedToRecord; // @synthesize triedToRecord=_triedToRecord;
@property(nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(nonatomic) _Bool sending; // @synthesize sending=_sending;
@property(nonatomic) _Bool recording; // @synthesize recording=_recording;
@property(nonatomic) _Bool previewing; // @synthesize previewing=_previewing;
@property(retain, nonatomic) UIButton *swapCameraButton; // @synthesize swapCameraButton=_swapCameraButton;
@property(retain, nonatomic) CKJoystickButtonItem *sendButtonItem; // @synthesize sendButtonItem=_sendButtonItem;
@property(retain, nonatomic) CKJoystickShutterButtonItem *recordVideoButtonItem; // @synthesize recordVideoButtonItem=_recordVideoButtonItem;
@property(retain, nonatomic) CKJoystickController *videoJoystickController; // @synthesize videoJoystickController=_videoJoystickController;
@property(retain, nonatomic) CKRecordingElapsedTimeView *timerView; // @synthesize timerView=_timerView;
@property(retain, nonatomic) UIView *topBackgroundView; // @synthesize topBackgroundView=_topBackgroundView;
@property(nonatomic) id <CKVideoMessageRecordingViewControllerDelegate> videoMessageDelegate; // @synthesize videoMessageDelegate=_videoMessageDelegate;
- (void)dealloc;
- (void)_cleanupCamera;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)ckVideoRecorder:(id)arg1 imageDataCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoRecorder:(id)arg1 videoCaptured:(id)arg2 error:(id)arg3;
- (void)ckVideoRecorderRecordingCanceled:(id)arg1;
- (void)joystickCancelAction:(id)arg1;
- (void)joystickCancelActionButtonDown:(id)arg1;
- (void)cancel;
- (void)send;
- (void)stopRecordingWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)joystickTakePhoto:(id)arg1;
- (void)takePictureWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)joystickShutterButtonTapAction:(id)arg1;
- (void)joystickShutterButtonUpAction:(id)arg1;
- (void)joystickShutterButtonDownAction:(id)arg1;
- (void)record;
- (void)delayedRecord;
- (void)joystickPlaybackButtonUpAction:(id)arg1;
- (void)_animatePreviewIn;
- (void)_setupPreviewView;
- (void)joystickControllerWillDismissJoystick:(id)arg1 animated:(_Bool)arg2;
- (void)ckVideoPreviewViewControllerFinishedPlaying:(id)arg1;
- (void)ckVideoPreviewViewControllerReady:(id)arg1;
- (void)joystickSendButtonUpAction:(id)arg1;
- (void)swapCamera:(id)arg1;
- (void)_animateVideoIn;
- (_Bool)shouldAutorotate;
- (void)dismissWithCompletion:(CDUnknownBlockType)arg1;
- (void)_cameraOrientationChanged:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_previewWarmedUp:(id)arg1;
- (void)presentWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentPlaybackJoystick:(_Bool)arg1;
- (void)presentInitialPlaybackJoystick;
- (void)presentRecordingJoystick;
- (void)presentVideoJoystick;
- (id)childViewControllerForStatusBarHidden;
- (void)loadView;
- (id)initWithPresentationView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKVideoPreviewViewController : UIViewController
{
    _Bool _redisplayStatusBar;
    _Bool _reachedEnd;
    id <CKVideoPreviewViewControllerDelegate> _videoPreviewDelegate;
    AVPlayerItem *_avPlayerItem;
    AVPlayer *_avPlayer;
    AVPlayerLayer *_avPlayerLayer;
}

@property(nonatomic) _Bool reachedEnd; // @synthesize reachedEnd=_reachedEnd;
@property(retain, nonatomic) AVPlayerLayer *avPlayerLayer; // @synthesize avPlayerLayer=_avPlayerLayer;
@property(retain, nonatomic) AVPlayer *avPlayer; // @synthesize avPlayer=_avPlayer;
@property(retain, nonatomic) AVPlayerItem *avPlayerItem; // @synthesize avPlayerItem=_avPlayerItem;
@property(nonatomic) _Bool redisplayStatusBar; // @synthesize redisplayStatusBar=_redisplayStatusBar;
@property(nonatomic) id <CKVideoPreviewViewControllerDelegate> videoPreviewDelegate; // @synthesize videoPreviewDelegate=_videoPreviewDelegate;
- (void)videoDidReachEnd:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)pause;
- (void)play;
- (_Bool)togglePlayPause;
@property(readonly, nonatomic, getter=isPlaying) _Bool playing; // @dynamic playing;
- (void)dealloc;
- (void)setVideoFileURL:(id)arg1;
- (_Bool)prefersStatusBarHidden;
- (void)loadView;
- (id)init;

@end

@interface CKVideoRecorder : UIViewController <AVCaptureFileOutputRecordingDelegate>
{
    long long _currentDevice;
    _Bool _previousStatusBarHidden;
    AVCaptureDevice *_frontFacingCamera;
    AVCaptureDevice *_rearFacingCamera;
    NSObject<OS_dispatch_queue> *_avCaptureSessionDispatchQueue;
    _Bool _canceled;
    AVCaptureVideoPreviewLayer *_captureVideoPreviewLayer;
    id <CKVideoRecorderDelegate> _delegate;
    NSURL *_outputFileURL;
    AVCaptureSession *_session;
    AVCaptureDeviceInput *_rearVideoInput;
    AVCaptureDeviceInput *_frontVideoInput;
    AVCaptureDeviceInput *_audioInput;
    AVCaptureMovieFileOutput *_videoOutput;
    AVCaptureStillImageOutput *_stillImageOutput;
}

@property(nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(retain, nonatomic) AVCaptureStillImageOutput *stillImageOutput; // @synthesize stillImageOutput=_stillImageOutput;
@property(retain, nonatomic) AVCaptureMovieFileOutput *videoOutput; // @synthesize videoOutput=_videoOutput;
@property(retain, nonatomic) AVCaptureDeviceInput *audioInput; // @synthesize audioInput=_audioInput;
@property(retain, nonatomic) AVCaptureDeviceInput *frontVideoInput; // @synthesize frontVideoInput=_frontVideoInput;
@property(retain, nonatomic) AVCaptureDeviceInput *rearVideoInput; // @synthesize rearVideoInput=_rearVideoInput;
@property(retain, nonatomic) AVCaptureSession *session; // @synthesize session=_session;
@property(copy, nonatomic) NSURL *outputFileURL; // @synthesize outputFileURL=_outputFileURL;
@property(nonatomic) id <CKVideoRecorderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) AVCaptureVideoPreviewLayer *captureVideoPreviewLayer; // @synthesize captureVideoPreviewLayer=_captureVideoPreviewLayer;
- (void)captureOutput:(id)arg1 didFinishRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3 error:(id)arg4;
- (void)captureOutput:(id)arg1 didStartRecordingToOutputFileAtURL:(id)arg2 fromConnections:(id)arg3;
- (void)setupCamera:(id)arg1;
@property(nonatomic) long long cameraDevice;
- (id)_configureRearVideoInput;
- (id)_configureFrontVideoInput;
- (id)rearFacingCamera;
- (id)frontFacingCamera;
- (id)audioDevice;
- (id)_cameraWithPosition:(long long)arg1;
- (void)dealloc;
- (void)takePicture;
- (_Bool)startVideoCapture;
- (void)stopVideoCapture;
- (void)cancel;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKVideoTrimController : NSObject <UIVideoEditorControllerDelegatePrivate, UINavigationControllerDelegate>
{
    id <CKTrimControllerDelegate> _delegate;
    CKMediaObject *_originalMediaObject;
    CKMediaObject *_trimmedMediaObject;
    UIVideoEditorController *_editVideoVC;
}

@property(retain, nonatomic) UIVideoEditorController *editVideoVC; // @synthesize editVideoVC=_editVideoVC;
@property(nonatomic) id <CKTrimControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CKMediaObject *trimmedMediaObject; // @synthesize trimmedMediaObject=_trimmedMediaObject;
@property(retain, nonatomic) CKMediaObject *originalMediaObject; // @synthesize originalMediaObject=_originalMediaObject;
- (void)videoEditorController:(id)arg1 didFailWithError:(id)arg2;
- (void)videoEditorControllerDidCancel:(id)arg1;
- (void)videoEditorController:(id)arg1 didSaveEditedVideoToPath:(id)arg2;
- (void)videoEditorController:(id)arg1 didTrimVideoWithOptions:(id)arg2;
- (void)dealloc;
- (id)initWithMediaObject:(id)arg1 maxTrimDuration:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKVoiceController : NSObject <AVVoiceControllerRecordDelegate>
{
    id <CKVoiceControllerDelegate> _delegate;
    long long __activationMode;
    NSDictionary *_recordSettings;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_powerUpdateTimer;
    AVVoiceController *_voiceController;
    CKAudioAnalyzer *_audioAnalyzer;
}

@property(retain, nonatomic) CKAudioAnalyzer *audioAnalyzer; // @synthesize audioAnalyzer=_audioAnalyzer;
@property(retain, nonatomic) AVVoiceController *voiceController; // @synthesize voiceController=_voiceController;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *powerUpdateTimer; // @synthesize powerUpdateTimer=_powerUpdateTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) NSDictionary *recordSettings; // @synthesize recordSettings=_recordSettings;
@property(nonatomic, setter=_setActivationMode:) long long _activationMode; // @synthesize _activationMode=__activationMode;
@property(nonatomic) id <CKVoiceControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)messageSent:(id)arg1;
- (void)stopUpdatingPower;
- (void)startUpdatingPower;
- (void)voiceControllerDidStopRecordingForClientError;
- (void)voiceControllerDidStopRecording:(id)arg1 forReason:(long long)arg2;
- (void)voiceControllerRecordBufferAvailable:(id)arg1 buffer:(id)arg2;
- (void)voiceControllerDidStartRecording:(id)arg1 successfully:(_Bool)arg2;
- (void)voiceControllerDidDetectStartpoint:(id)arg1;
- (void)releaseAudioSession;
- (void)playAlertSoundForType:(int)arg1;
- (void)stop;
- (void)record;
- (void)setActivationMode:(long long)arg1;
- (id)initWithActivationMode:(long long)arg1 recordSettings:(id)arg2 queue:(id)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CKWBMPImageData : CKImageData
{
}

- (id)initWithData:(id)arg1;

@end

@interface CKWBMPImageMediaObject : CKImageMediaObject
{
}

+ (Class)imageDataClass;
+ (id)UTITypes;

@end

@interface DiscLayer : CALayer
{
}

- (void)addAnimation:(id)arg1 forKey:(id)arg2;

@end

@interface DiscView : UIView
{
}

+ (Class)layerClass;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IMAccount (CKAdditions)
- (id)__ck_handlesFromAddressStrings:(id)arg1;
@end

@interface IMAccountController (CKAdditions)
- (id)__ck_bestAccountForAddress:(id)arg1;
- (id)__ck_bestAccountForAddresses:(id)arg1;
- (id)__ck_defaultAccountForService:(id)arg1;
- (id)__ck_operationalPhoneAccountForService:(id)arg1;
@end

@interface IMAggregateMessagePartChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMAttachmentMessagePartChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMAudioMessageChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMChat (CKAdditions)
- (void)__ck_setMuteUntilDate:(id)arg1;
- (id)__ck_muteUntilDate;
- (_Bool)__ck_isMuted;
- (void)__ck_saveWatermark;
- (void)__ck_updateWatermarkToMessageID:(long long)arg1 date:(id)arg2;
- (id)__ck_watermarkDate;
- (long long)__ck_watermarkMessageID;
@end

@interface IMChatRegistry (CKAdditions)
- (id)_ck_chatForHandles:(id)arg1 createIfNecessary:(_Bool)arg2;
- (id)_ck_chatForHandles:(id)arg1 displayName:(id)arg2 joinedChatsOnly:(_Bool)arg3 createIfNecessary:(_Bool)arg4;
@end

@interface IMDateChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMEmoteMessageChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMExpirableMessageChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMGroupActionChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMGroupTitleChangeChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMLoadMoreChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMLocatingChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMLocationShareActionChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMLocationShareOfferChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMMessage (CKAdditions)
- (id)__ck_undowngradedMessage;
- (id)__ck_downgradedMessage;
- (id)__ck_attachmentText:(_Bool)arg1;
- (id)__ck_previewText;
- (_Bool)__ck_isSMS;
- (_Bool)__ck_isiMessage;
- (id)__ck_service;
- (_Bool)__ck_isEqualToMessageUsingGUID:(id)arg1;
@end

@interface IMMessageActionChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMMessageStatusChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMParticipantChangeChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMSenderChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMService (CKAdditions)
- (BOOL)__ck_displayColor;
- (long long)__ck_maxRecipientCount;
- (id)__ck_displayName;
- (_Bool)__ck_isSMS;
- (_Bool)__ck_isiMessage;
@end

@interface IMServiceChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMTextMessagePartChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMTranscriptChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface IMTypingChatItem (CKChatItems)
- (Class)__ck_chatItemClass;
@end

@interface MFComposeRecipient (Additions)
- (id)IDSCanonicalAddress;
- (id)canonicalAddress;
- (void)setCanonicalAddress:(id)arg1;
- (id)rawAddress;
- (struct __CFPhoneNumber *)copyPhoneNumber;
- (_Bool)isPhone;
- (_Bool)isEmail;
@end

@interface NSArray (CKChatItems)
- (id)__ck_indexesOfPartsOfMessage:(id)arg1;
- (id)__ck_messageForChatItemAtIndex:(unsigned long long)arg1;
- (id)__ck_IMChatItemsAtIndexes:(id)arg1;
- (id)__ck_indexesOfUnplayedAudioMessages;
- (void)__ck_unloadTranscriptTextAtIndexes:(id)arg1;
- (void)__ck_unloadSizesAtIndexes:(id)arg1;
- (unsigned long long)__ck_indexOfTransfer:(id)arg1;
- (unsigned long long)__ck_indexOfMediaObject:(id)arg1;
@end

@interface NSArray (CKUtilities)
- (id)__ck_indexSetForIndexPathItemsInSection:(long long)arg1;
- (id)__ck_indexSetForIndexPathRowsInSection:(long long)arg1;
- (id)__ck_commaJoinedValueForKey:(id)arg1;
@end

@interface NSArray (ComposeRecipientConvenience)
- (id)composeRecipientNormalizedAddresses;
- (id)composeRecipientAddresses;
- (id)composeRecipientHandles;
@end

@interface NSAttributedString (CKUtilities)
- (_Bool)containsAttribute:(id)arg1;
@end

@interface NSCalendar (CKUtilities)
+ (void)__ck_setTestCalendar:(id)arg1;
+ (id)__ck_currentCalendar;
- (unsigned long long)__ck_unitOfDisambiguityFromDate:(id)arg1 toDate:(id)arg2;
@end

@interface NSIndexPath (CKUtilities)
- (id)__ck_indexPathShiftedForInsertedIndexes:(id)arg1 deletedIndexes:(id)arg2;
@end

@interface NSIndexSet (CKUtilities)
- (id)__ck_indexSetShiftedForInsertedIndexes:(id)arg1 removedIndexes:(id)arg2;
- (void)__ck_enumerateIndexesByProximityToIndex:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)__ck_indexPathItemsInSection:(long long)arg1;
- (id)__ck_indexPathRowsInSection:(long long)arg1;
@end

@interface NSLocale (CKUtilities)
+ (void)__ck_setTestLocale:(id)arg1;
+ (id)__ck_currentLocale;
@end

@interface NSMutableIndexSet (CKUtilities)
- (void)__ck_intersectIndexes:(id)arg1;
@end

@interface NSNumber (CKUtilities)
- (id)__ck_localizedString;
@end

@interface NSObject (CKSMSComposeControllerDelegate)
- (void)smsComposeControllerSendStarted:(id)arg1;
- (void)smsComposeControllerCancelled:(id)arg1;
- (void)smsComposeControllerAppeared:(id)arg1;
- (void)smsComposeControllerDataInserted:(id)arg1;
@end

@interface NSString (CKUtilities)
- (struct _NSRange)__ck_rangeOfSequenceOfCharactersFromSet:(id)arg1 options:(unsigned long long)arg2 range:(struct _NSRange)arg3;
- (_Bool)__ck_containsOnlyCharactersFromSet:(id)arg1;
@end

@interface NSString (SMSPhoneNumberNormalization)
- (id)unformattedPhoneNumber;
@end

@interface NSTextContainer (CKBalloonTextView)
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 textAlignmentInsets:(struct UIEdgeInsets *)arg2 isSingleLine:(_Bool *)arg3;
@end

@interface NSURL (ChatKitAdditions)
+ (id)ckURLForChatIdentifier:(id)arg1 entryBody:(id)arg2;
+ (id)ckURLForResource:(id)arg1 withExtension:(id)arg2;
@end

@interface QLPreviewController (ChatKitAdditions)
- (_Bool)ckCanDismissWhenSuspending;
@end

@interface UIBarButtonItem (CKConversationEditButtonAdditions)
+ (id)_ckBarButtonItemWithTitle:(id)arg1 style:(long long)arg2;
+ (id)ckCancelBarButtonItem;
+ (id)ckDoneBarButtonItem;
+ (id)ckEditBarButtonItem;
+ (id)ckEditDoneButtonPossibleItemVariations;
@end

@interface UICollectionView (CKUtilities)
- (void)__ck_reloadDataKeepingSelection;
- (struct CGSize)__ck_contentSize;
- (id)__ck_indexPathForLastItem;
@end

@interface UIColor (CKUtilities)
- (id)colorByBlendingWithColor:(id)arg1;
@end

@interface UIFont (CKUtilities)
+ (id)__ck_shortEmphasizedPreferredFontForTextStyle:(id)arg1;
+ (id)__ck_emphasizedPreferredFontForTextStyle:(id)arg1;
+ (id)__ck_shortDefaultFontForTextStyle:(id)arg1;
+ (id)__ck_shortPreferredFontForTextStyle:(id)arg1;
@end

@interface UIImage (ChatKitAdditions)
+ (id)ckImageWithData:(id)arg1;
+ (id)abImageNamed:(id)arg1;
+ (id)ckImageNamed:(id)arg1;
- (void)decode;
- (struct CGRect)__ck_contentsCenter;
- (id)__ck_imageWithOrientation:(long long)arg1;
- (id)__ck_resizableBalloonWithOrientation:(BOOL)arg1 skinny:(_Bool)arg2 framed:(_Bool)arg3;
@end

@interface UIImagePickerController (ChatKitAdditions)
- (_Bool)ckCanDismissWhenSuspending;
@end

@interface UINavigationController (CKAdditions)
- (void)__ck_callDelegateBlocks;
- (id)__ck_popToRootViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (id)__ck_popToViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)__ck_popViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)__ck_pushViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)__ck_enqueueCompletionBlock:(CDUnknownBlockType)arg1;
@end

@interface UINavigationController (CKTranscriptController)
- (_Bool)transcriptControllerIsVisible;
@end

@interface UINavigationController (ChatKitAdditions)
- (_Bool)ckCanDismissWhenSuspending;
@end

@interface UIPasteboard (CKComposition)
- (id)__ck_mediaObjectManager;
- (id)__ck_dataForPasteboardType:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)__ck_valueForPasteboardType:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)__ck_pasteboardTypesForIndex:(unsigned long long)arg1;
- (id)__ck_pasteboardTypeListRTF;
- (id)__ck_composition;
- (id)__ck_mediaObjectAtIndex:(unsigned long long)arg1;
@end

@interface UIScrollView (CKUtilities)
- (void)__ck_scrollToTop:(_Bool)arg1;
- (_Bool)__ck_isScrolledToTop;
- (struct CGPoint)__ck_scrollToTopContentOffset;
- (void)__ck_scrollToBottom:(_Bool)arg1;
- (_Bool)__ck_isScrolledToBottom;
- (struct CGPoint)__ck_scrollToBottomContentOffset;
- (struct CGSize)__ck_contentSize;
@end

@interface UITableView (CKUtilities)
- (struct CGSize)__ck_contentSize;
- (id)__ck_indexPathForLastRow;
@end

@interface UIView (CKGradientReferenceView)
- (void)layoutGradientViewsIfNeeded;
- (void)setGradientViewsNeedLayout;
@end

@interface UIView (CKJoystickView)
- (_Bool)pointMostlyInside:(struct CGPoint)arg1 threshold:(double)arg2 velocity:(struct CGPoint)arg3;
@end

@interface UIView (CKLayoutAdditions)
- (id)__ck_addEqualityConstraintWithItem:(id)arg1 toItem:(id)arg2 usingAttribute:(long long)arg3;
@end

@interface UIView (CKUtilities)
- (struct CGSize)__ck_frameSizeForAlignmentRectSize:(struct CGSize)arg1;
- (struct CGSize)__ck_alignmentRectSizeForFrameSize:(struct CGSize)arg1;
- (_Bool)__ck_containsFirstResponder;
@end

@interface _CKExpirableComposition : CKComposition
{
}

+ (id)compositionWithMediaObject:(id)arg1 subject:(id)arg2;
- (_Bool)isSaveable;
- (_Bool)isSendAnimated;

@end

@interface _CKAudioComposition : _CKExpirableComposition
{
}

+ (id)compositionWithMediaObject:(id)arg1 subject:(id)arg2;
- (_Bool)isSendAnimated;

@end

@interface _CKDispatchQueueBlock : NSObject
{
    CDUnknownBlockType _block;
    NSString *_key;
    long long _priority;
    unsigned long long _fifo;
}

- (void)setFIFO:(unsigned long long)arg1;
@property(nonatomic) unsigned long long fifo; // @synthesize fifo=_fifo;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
@property(copy, nonatomic) NSString *key; // @synthesize key=_key;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void)cancel;
- (long long)compare:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1 key:(id)arg2 priority:(long long)arg3 fifo:(unsigned long long)arg4;
- (id)description;
- (void)dealloc;

@end

@interface _CKPhotoPickerComposition : CKComposition
{
}

+ (id)compositionWithMediaObjects:(id)arg1 subject:(id)arg2;
+ (id)compositionWithMediaObject:(id)arg1 subject:(id)arg2;
- (_Bool)isSendAnimated;

@end

@interface _CKQuickImageComposition : CKComposition
{
}

+ (id)compositionWithMediaObject:(id)arg1 subject:(id)arg2;
- (_Bool)isSendAnimated;

@end

@interface _CKVideoMessageRecordingWindow : UIAutoRotatingWindow
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _UINavigationControllerPalette (CKUtilities)
- (void)__ck_setPaletteFrame:(struct CGRect)arg1;
@end

