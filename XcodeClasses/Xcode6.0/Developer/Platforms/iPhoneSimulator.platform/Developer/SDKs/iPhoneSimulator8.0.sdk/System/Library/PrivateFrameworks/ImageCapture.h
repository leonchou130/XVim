//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/ImageCapture.framework/ImageCapture
// UUID: 08801ECF-528F-3A84-B791-EB913BD9AF31
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 110.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ICDeviceManagerProtocol <NSObject>
- (int)eject:(ICCameraDevice *)arg1;
- (int)downloadFile:(ICCameraFile *)arg1 fromDevice:(ICCameraDevice *)arg2 options:(NSDictionary *)arg3 contextInfo:(void *)arg4;
- (int)deleteFile:(ICCameraFile *)arg1 fromDevice:(ICCameraDevice *)arg2 contextInfo:(void *)arg3;
- (int)syncClock:(ICDevice *)arg1 contextInfo:(void *)arg2;
- (int)getMetadataOfFile:(ICCameraFile *)arg1 fromDevice:(ICCameraDevice *)arg2 contextInfo:(void *)arg3;
- (int)getThumbnailOfFile:(ICCameraFile *)arg1 fromDevice:(ICCameraDevice *)arg2 contextInfo:(void *)arg3;
- (int)closeSession:(ICDevice *)arg1 contextInfo:(void *)arg2;
- (int)openSession:(ICDevice *)arg1 contextInfo:(void *)arg2;
- (int)closeDevice:(ICDevice *)arg1 contextInfo:(void *)arg2;
- (int)openDevice:(NSDictionary *)arg1 contextInfo:(void *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface DeviceManager : NSObject <ICDeviceManagerProtocol>
{
    DeviceManagerThread *_thread;
    NSDictionary *_deviceMatchingInfo;
    NSMutableDictionary *_devices;
}

- (void)postNotification:(id)arg1;
- (void)postCommandCompletionNotification:(id)arg1;
- (void)ejectImp:(id)arg1;
- (void)downloadFileImp:(id)arg1;
- (void)deleteFileImp:(id)arg1;
- (void)getMetadataOfFileImp:(id)arg1;
- (void)getThumbnailOfFileImp:(id)arg1;
- (void)syncClockImp:(id)arg1;
- (void)closeSessionImp:(id)arg1;
- (void)openSessionImp:(id)arg1;
- (void)closeDeviceImp:(id)arg1;
- (void)openDeviceImp:(id)arg1;
- (int)eject:(id)arg1;
- (int)downloadFile:(id)arg1 fromDevice:(id)arg2 options:(id)arg3 contextInfo:(void *)arg4;
- (int)deleteFile:(id)arg1 fromDevice:(id)arg2 contextInfo:(void *)arg3;
- (int)getMetadataOfFile:(id)arg1 fromDevice:(id)arg2 contextInfo:(void *)arg3;
- (int)getThumbnailOfFile:(id)arg1 fromDevice:(id)arg2 contextInfo:(void *)arg3;
- (int)syncClock:(id)arg1 contextInfo:(void *)arg2;
- (int)closeSession:(id)arg1 contextInfo:(void *)arg2;
- (int)openSession:(id)arg1 contextInfo:(void *)arg2;
- (int)closeDevice:(id)arg1 contextInfo:(void *)arg2;
- (int)openDevice:(id)arg1 contextInfo:(void *)arg2;
- (void)stopRunning;
- (void)startRunning;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DeviceManagerThread : NSThread
{
}

- (void)main;

@end

@interface ICDevice : NSObject
{
    void *_deviceProperties;
}

- (void)handleImageCaptureEventNotification:(id)arg1;
- (void)handleCommandCompletionNotification:(id)arg1;
@property(readonly) struct CGImage *icon;
- (id)valueForUndefinedKey:(id)arg1;
- (void)requestCloseSession;
- (void)requestOpenSession;
@property _Bool closeSessionPending;
@property _Bool openSessionPending;
@property _Bool autoOpenSession;
@property _Bool hasOpenSession;
@property(copy) NSString *UUIDString;
@property int usbVendorID;
@property int usbProductID;
@property int usbLocationID;
@property(copy) NSString *transportType;
@property(copy) NSString *productKind;
@property(copy) NSString *name;
@property DeviceManager *deviceManager;
@property id <ICDeviceDelegate> delegate;
- (void)finalize;
- (void)dealloc;
- (id)description;
- (id)init;

@end

@interface ICCameraDevice : ICDevice
{
    void *_cameraProperties;
}

+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
- (void)receivedDeviceCommandCompletion;
- (void)addToMetadataFetchQ:(id)arg1;
- (void)addToThumbnailFetchQ:(id)arg1;
- (void)removeFolder:(id)arg1;
- (void)addFolder:(id)arg1;
- (void)cancelDownload;
- (void)requestDownloadFile:(id)arg1 options:(id)arg2 downloadDelegate:(id)arg3 didDownloadSelector:(SEL)arg4 contextInfo:(void *)arg5;
- (void)requestEject;
- (void)requestDeleteFiles:(id)arg1;
- (void)requestSyncClock;
- (void)requestCloseSession;
- (void)requestOpenSession;
- (void)handleImageCaptureEventNotification:(id)arg1;
- (void)handleCommandCompletionNotification:(id)arg1;
- (id)filesOfType:(id)arg1;
@property(readonly) NSArray *mediaFiles;
@property(readonly) NSArray *contents;
- (void)pendNotifyingDelegateOfAddedItem:(id)arg1;
- (void)notifyDelegateOfAddedItem:(id)arg1;
- (id)deviceQSemaphore;
- (id)generalQ;
@property(getter=isAccessRestrictedAppleDevice) _Bool accessRestrictedAppleDevice;
@property unsigned long long contentCatalogPercentCompleted;
- (void)incrementNumberOfDownloadableItems;
- (void)decrementNumberOfDownloadableItems;
@property unsigned long long numberOfDownloadableItems;
- (void)incrementEstimatedNumberOfDownloadableItems;
- (void)decrementEstimatedNumberOfDownloadableItems;
@property unsigned long long estimatedNumberOfDownloadableItems;
- (double)downloadCancelTimestamp;
@property(readonly) double timeOffset;
@property(readonly) unsigned long long batteryLevel;
@property(readonly) _Bool batteryLevelAvailable;
@property _Bool allowsSyncingClock;
@property(getter=isLocked) _Bool locked;
@property _Bool beingEjected;
@property(getter=isEjectable) _Bool ejectable;
@property(copy) NSString *volumePath;
- (void)finalize;
- (void)dealloc;
- (id)description;
- (id)init;

@end

@interface ICCameraItem : NSObject
{
    void *_itemProperties;
}

- (id)description;
@property(readonly) NSString *fileSystemPath;
- (void)appendToPath:(id)arg1;
@property(readonly) NSMutableDictionary *userData;
- (void)flushMetadataCache;
- (void)flushThumbnailCache;
- (void)requestMetadata;
- (void)requestThumbnail;
@property(readonly) NSDictionary *metadata;
@property(readonly) _Bool hasMetadata;
@property(readonly) struct CGImage *thumbnail;
@property(readonly) _Bool hasThumbnail;
- (void)setModificationDate:(id)arg1;
@property(readonly) NSDate *modificationDate;
- (void)setCreationDate:(id)arg1;
@property(readonly) NSDate *creationDate;
- (void)setUTI:(id)arg1;
@property(readonly) NSString *UTI;
@property(getter=isLocked) _Bool locked;
@property(readonly) NSString *name;
@property(readonly) ICCameraFolder *parentFolder;
@property(readonly) ICCameraDevice *device;
- (id)valueForUndefinedKey:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1 parentFolder:(id)arg2 device:(id)arg3;

@end

@interface ICCameraFile : ICCameraItem
{
    void *_fileProperties;
}

- (void)flushMetadataCache;
- (void)flushThumbnailCache;
- (void)requestMetadata;
- (void)requestThumbnail;
@property(readonly) _Bool timeLapse;
@property(readonly) _Bool highFramerate;
@property(readonly) _Bool burstPicked;
@property(readonly) _Bool burstFavorite;
@property(readonly) NSString *burstUUID;
- (double)duration;
@property(retain) NSMutableDictionary *metadata_hidden;
- (id)metadata;
- (struct CGImage *)thumbnail;
- (void)setKeywordPropertiesFromMetadata;
- (void)handleCommandCompletionNotification:(id)arg1;
- (void)overrideOrientation:(unsigned long long)arg1;
@property _Bool fetchingMetadata;
@property _Bool fetchingThumbnail;
- (void)setHasMetadata:(_Bool)arg1;
- (_Bool)hasMetadata;
- (void)setHasThumbnail:(_Bool)arg1;
- (_Bool)hasThumbnail;
@property(readonly) _Bool hasOverriddenOrientation;
@property unsigned long long orientation;
@property(getter=isRaw) _Bool raw;
@property long long fileSize;
- (id)description;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1 parentFolder:(id)arg2 device:(id)arg3;

@end

@interface ICCameraFileProperties : NSObject
{
    long long _fileSize;
    _Bool _hasThumbnail;
    _Bool _hasMetadata;
    _Bool _raw;
    int _fetchingThumbnailLock;
    _Bool _fetchingThumbnail;
    int _fetchingMetadataLock;
    _Bool _fetchingMetadata;
    struct CGImage *_originalThumbnail;
    struct CGImage *_thumbnail;
    NSMutableDictionary *_metadata;
    NSMutableDictionary *_metadata_hidden;
    unsigned long long _orientation;
    _Bool _hasOverriddenOrientation;
    double _duration;
    NSString *_burstUUID;
    _Bool _burstFavorite;
    _Bool _burstPicked;
    _Bool _highFramerate;
    _Bool _timeLapse;
    NSMutableArray *_sidecarFiles;
}

@property _Bool timeLapse; // @synthesize timeLapse=_timeLapse;
@property _Bool highFramerate; // @synthesize highFramerate=_highFramerate;
@property _Bool burstFavorite; // @synthesize burstFavorite=_burstFavorite;
@property _Bool burstPicked; // @synthesize burstPicked=_burstPicked;
@property(retain) NSString *burstUUID; // @synthesize burstUUID=_burstUUID;
@property(retain) NSMutableArray *sidecarFiles; // @synthesize sidecarFiles=_sidecarFiles;
@property double duration; // @synthesize duration=_duration;
@property _Bool hasOverriddenOrientation; // @synthesize hasOverriddenOrientation=_hasOverriddenOrientation;
@property unsigned long long orientation; // @synthesize orientation=_orientation;
@property(retain) NSMutableDictionary *metadata_hidden; // @synthesize metadata_hidden=_metadata_hidden;
@property(retain) NSMutableDictionary *metadata; // @synthesize metadata=_metadata;
@property(getter=isRaw) _Bool raw; // @synthesize raw=_raw;
@property _Bool hasMetadata; // @synthesize hasMetadata=_hasMetadata;
@property _Bool hasThumbnail; // @synthesize hasThumbnail=_hasThumbnail;
@property long long fileSize; // @synthesize fileSize=_fileSize;
@property _Bool fetchingMetadata;
@property _Bool fetchingThumbnail;
@property struct CGImage *originalThumbnail; // @dynamic originalThumbnail;
@property struct CGImage *thumbnail; // @dynamic thumbnail;
- (void)finalize;
- (void)dealloc;

@end

@interface ICCameraFolder : ICCameraItem
{
    void *_folderProperties;
    int _filesLock;
    int _foldersLock;
}

- (void)requestMetadata;
- (void)requestThumbnail;
- (id)metadata;
- (struct CGImage *)thumbnail;
- (_Bool)hasThumbnail;
- (id)folders;
- (id)files;
- (id)valueForUndefinedKey:(id)arg1;
@property(readonly) NSArray *contents;
- (void)deleteFolder:(id)arg1;
- (void)deleteFile:(id)arg1;
- (void)deleteItem:(id)arg1;
- (void)addFolder:(id)arg1;
- (void)addFile:(id)arg1;
- (id)description;
- (void)unlockFolders;
- (void)lockFolders;
- (void)unlockFiles;
- (void)lockFiles;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1 parentFolder:(id)arg2 device:(id)arg3;

@end

@interface ICCameraFolderProperties : NSObject
{
    NSMutableArray *_files;
    NSMutableArray *_folders;
}

@property(retain) NSMutableArray *folders; // @synthesize folders=_folders;
@property(retain) NSMutableArray *files; // @synthesize files=_files;
- (void)finalize;
- (void)dealloc;

@end

@interface ICCameraItemProperties : NSObject
{
    ICCameraDevice *_device;
    ICCameraFolder *_parentFolder;
    NSString *_name;
    NSString *_UTI;
    NSDate *_creationDate;
    NSDate *_modificationDate;
    _Bool _locked;
    NSMutableDictionary *_userData;
}

@property(retain) NSMutableDictionary *userData; // @synthesize userData=_userData;
@property _Bool locked; // @synthesize locked=_locked;
@property(retain) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(retain) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(retain) NSString *UTI; // @synthesize UTI=_UTI;
@property(retain) NSString *name; // @synthesize name=_name;
@property ICCameraFolder *parentFolder; // @synthesize parentFolder=_parentFolder;
@property ICCameraDevice *device; // @synthesize device=_device;
- (void)finalize;
- (void)dealloc;

@end

@interface ICCameraProperties : NSObject
{
    NSString *_volumePath;
    _Bool _ejectable;
    _Bool _beingEjected;
    _Bool _locked;
    _Bool _allowsSyncingClock;
    unsigned long long _contentCatalogPercentCompleted;
    _Bool _batteryLevelAvailable;
    unsigned long long _batteryLevel;
    NSMutableArray *_contents;
    NSMutableArray *_mediaFiles;
    NSMutableArray *_toBeNotifiedAddedItems;
    int _contentsLock;
    int _mediaFilesLock;
    double _timeOffset;
    unsigned long long _estimatedNumberOfDownloadableItems;
    unsigned long long _numberOfDownloadableItems;
    _Bool _contentReceived;
    double _downloadCancelTimestamp;
    NSObject<OS_dispatch_queue> *_thumbnailFetchQ;
    NSObject<OS_dispatch_queue> *_metadataFetchQ;
    NSObject<OS_dispatch_queue> *_downloadQ;
    NSObject<OS_dispatch_queue> *_generalQ;
    NSObject<OS_dispatch_semaphore> *_deviceQSemaphore;
    _Bool _accessRestrictedAppleDevice;
}

@property _Bool accessRestrictedAppleDevice; // @synthesize accessRestrictedAppleDevice=_accessRestrictedAppleDevice;
@property NSObject<OS_dispatch_semaphore> *deviceQSemaphore; // @synthesize deviceQSemaphore=_deviceQSemaphore;
@property NSObject<OS_dispatch_queue> *generalQ; // @synthesize generalQ=_generalQ;
@property NSObject<OS_dispatch_queue> *downloadQ; // @synthesize downloadQ=_downloadQ;
@property NSObject<OS_dispatch_queue> *metadataFetchQ; // @synthesize metadataFetchQ=_metadataFetchQ;
@property NSObject<OS_dispatch_queue> *thumbnailFetchQ; // @synthesize thumbnailFetchQ=_thumbnailFetchQ;
@property double downloadCancelTimestamp; // @synthesize downloadCancelTimestamp=_downloadCancelTimestamp;
@property _Bool contentReceived; // @synthesize contentReceived=_contentReceived;
@property unsigned long long numberOfDownloadableItems; // @synthesize numberOfDownloadableItems=_numberOfDownloadableItems;
@property unsigned long long estimatedNumberOfDownloadableItems; // @synthesize estimatedNumberOfDownloadableItems=_estimatedNumberOfDownloadableItems;
@property double timeOffset; // @synthesize timeOffset=_timeOffset;
@property int contentsLock; // @synthesize contentsLock=_contentsLock;
@property int mediaFilesLock; // @synthesize mediaFilesLock=_mediaFilesLock;
@property(retain) NSMutableArray *toBeNotifiedAddedItems; // @synthesize toBeNotifiedAddedItems=_toBeNotifiedAddedItems;
@property(retain) NSMutableArray *mediaFiles; // @synthesize mediaFiles=_mediaFiles;
@property(retain) NSMutableArray *contents; // @synthesize contents=_contents;
@property unsigned long long batteryLevel; // @synthesize batteryLevel=_batteryLevel;
@property _Bool batteryLevelAvailable; // @synthesize batteryLevelAvailable=_batteryLevelAvailable;
@property unsigned long long contentCatalogPercentCompleted; // @synthesize contentCatalogPercentCompleted=_contentCatalogPercentCompleted;
@property _Bool allowsSyncingClock; // @synthesize allowsSyncingClock=_allowsSyncingClock;
@property _Bool locked; // @synthesize locked=_locked;
@property _Bool beingEjected; // @synthesize beingEjected=_beingEjected;
@property _Bool ejectable; // @synthesize ejectable=_ejectable;
@property(retain) NSString *volumePath; // @synthesize volumePath=_volumePath;
- (void)finalize;
- (void)dealloc;
- (void)unlockContents;
- (void)lockContents;
- (void)unlockMediaFiles;
- (void)lockMediaFiles;

@end

@interface ICDeviceBrowser : NSObject
{
    id _privateData;
}

- (id)internalDevices;
@property(readonly) NSArray *devices;
- (void)stop;
- (int)start;
@property(readonly, getter=isBrowsing) _Bool browsing;
@property id <ICDeviceBrowserDelegate> delegate;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface ICDeviceBrowserPrivateData : NSObject
{
    id _delegate;
    _Bool _browsing;
    NSMutableArray *_internalDevices;
}

@property(retain) NSMutableArray *internalDevices; // @synthesize internalDevices=_internalDevices;
@property(getter=isBrowsing) _Bool browsing; // @synthesize browsing=_browsing;
@property id delegate; // @synthesize delegate=_delegate;
- (void)finalize;
- (void)dealloc;

@end

@interface ICDeviceProperties : NSObject
{
    id _delegate;
    DeviceManager *_deviceManager;
    NSString *_name;
    struct CGImage *_icon;
    NSString *_productKind;
    NSString *_transportType;
    NSString *_UUIDString;
    int _usbLocationID;
    int _usbProductID;
    int _usbVendorID;
    _Bool _hasOpenSession;
    _Bool _autoOpenSession;
    _Bool _openSessionPending;
    _Bool _closeSessionPending;
}

@property _Bool closeSessionPending; // @synthesize closeSessionPending=_closeSessionPending;
@property _Bool openSessionPending; // @synthesize openSessionPending=_openSessionPending;
@property _Bool autoOpenSession; // @synthesize autoOpenSession=_autoOpenSession;
@property _Bool hasOpenSession; // @synthesize hasOpenSession=_hasOpenSession;
@property int usbVendorID; // @synthesize usbVendorID=_usbVendorID;
@property int usbProductID; // @synthesize usbProductID=_usbProductID;
@property int usbLocationID; // @synthesize usbLocationID=_usbLocationID;
@property(retain) NSString *UUIDString; // @synthesize UUIDString=_UUIDString;
@property(retain) NSString *transportType; // @synthesize transportType=_transportType;
@property(retain) NSString *productKind; // @synthesize productKind=_productKind;
@property(retain) NSString *name; // @synthesize name=_name;
@property DeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property id delegate; // @synthesize delegate=_delegate;
- (void)finalize;
- (void)dealloc;
@property struct CGImage *icon; // @dynamic icon;

@end

@interface ICMasterDeviceBrowser : NSObject
{
    NSMutableArray *_devices;
    NSMutableArray *_browsers;
    long long _numberOfBrowsingBrowsers;
    id _msDevManager;
    id _ptpDevManager;
    id _exFATManager;
}

+ (_Bool)exists;
+ (id)defaultBrowser;
@property(readonly) NSMutableArray *browsers; // @synthesize browsers=_browsers;
- (void)informBrowserDelegateUsingSelector:(SEL)arg1 withObject:(id)arg2;
- (id)deviceWithDelegate:(id)arg1;
- (void)handleImageCaptureEventNotification:(id)arg1;
- (void)handleCommandCompletionNotification:(id)arg1;
@property(readonly) NSMutableArray *devices; // @synthesize devices=_devices;
- (void)stop:(id)arg1;
- (int)start:(id)arg1;
- (void)removeMSCamera:(id)arg1;
- (int)addMSCamera:(id)arg1;
- (int)addExFATCamera:(id)arg1;
- (void)removePTPCamera:(id)arg1;
- (int)addPTPCamera:(id)arg1;
- (void)removeBrowser:(id)arg1;
- (void)addBrowser:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)init;

@end

@interface NSMutableArray (ImageCaptureAdditions)
- (void)addItemsMatchingExtensions:(id)arg1 orTypes:(id)arg2 fromFolder:(id)arg3;
- (void)addItemsMatchingType:(id)arg1 fromFolder:(id)arg2;
@end

