//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct SCRCFingerState {
    unsigned long long identifier;
    int xDirection;
    int yDirection;
    struct SCRCMathAverageValue velocity;
    struct SCRCMathAverageValue slopeRise;
    struct SCRCMathAverageValue slopeRun;
    struct SCRCMathAverageValue distance;
    double velocityDistance;
    _Bool dragStalled;
    struct CGPoint startPoint;
    struct CGPoint lastPoint;
    struct CGPoint lastDownPoint;
};

struct SCRCMathAverageValue {
    unsigned int samples;
    double fifo[50];
    int fifoIndex;
    double sum;
    double average;
    double current;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _SCRCStackNode {
    id _field1;
    void *_field2;
    void *_field3;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
// UUID: A42CC160-190E-3E16-9F1E-368B67910889
//
//                           Arch: x86_64
//                Current version: 385.0.0
//          Compatibility version: 1.0.0
//                 Source version: 80.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@interface NSAttributedString (SCRCMathExpression)
+ (id)scrcSpaceString;
+ (id)scrcPauseString;
+ (id)scrcString;
+ (id)scrcStringWithDollarCode:(id)arg1 treePosition:(id)arg2;
+ (id)scrcStringWithLiteralString:(id)arg1 treePosition:(id)arg2;
+ (id)scrcStringWithLiteralString:(id)arg1;
+ (id)scrcStringWithString:(id)arg1 treePosition:(id)arg2;
+ (id)scrcStringWithString:(id)arg1;
+ (id)scrcStringWithFormat:(id)arg1;
+ (id)_scrcStringWithFormat:(id)arg1 args:(struct __va_list_tag [1])arg2;
- (_Bool)scrcContainsPause;
- (_Bool)_scrcHasPauseCommaAtIndex:(unsigned long long)arg1;
- (id)scrcStringByAddingAttribute:(id)arg1 value:(id)arg2;
- (id)scrcStringByReplacingOccurrencesOfString:(id)arg1 withString:(id)arg2;
- (id)scrcStringByAppendingAttributedString:(id)arg1;
- (struct _NSRange)_scrcRangeOfFormatSpecifierWithIndex:(unsigned long long)arg1;
- (struct _NSRange)_scrcRangeOfVanillaFormatSpecifier;
@end

@interface NSCharacterSet (SCRCCharacterSetExtras)
+ (id)wordBreakCharacterSet;
+ (id)whitespaceNewlineAndSpecialCharacterSet;
@end

@interface NSException (SCRCExceptionPrivate)
- (id)_crashReporterString;
@end

@interface NSMutableAttributedString (SCRCMathExpression)
- (void)scrcAppendFormat:(id)arg1;
@end

@interface NSMutableString (SCRCMathLatex)
- (void)addMathIndicators;
@end

@interface NSObject (SCRCThread)
+ (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned int)arg4 count:(unsigned int)arg5 objects:(id)arg6;
+ (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned int)arg3 objects:(id)arg4;
- (id)valueForBlock:(CDUnknownBlockType)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3;
- (id)valueForSelector:(SEL)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 copyValue:(_Bool)arg4 withObjects:(id)arg5;
- (id)copyValueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3;
- (id)copyValueForKeyPath:(id)arg1 forThreadKey:(id)arg2;
- (id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3;
- (id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2;
- (id)_getRetainedValueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 copy:(_Bool)arg4;
- (id)copyValueForKeyPathOnMainThread:(id)arg1;
- (id)valueForKeyPathOnMainThread:(id)arg1;
- (id)_getRetainedValueForKeyPathOnMainThread:(id)arg1 copy:(_Bool)arg2;
- (void)_scr_safeGetValueForKeyPath:(id)arg1;
- (void)_scr_safeGetValueForKeyPath:(id)arg1 lock:(id)arg2;
- (void)_scr_safeGetValueForBlock:(id)arg1 lock:(id)arg2;
- (void)_scr_safeGetValueForSelector:(id)arg1 lock:(id)arg2;
- (id)performSelector:(SEL)arg1 withObjectsAsArray:(id)arg2;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned int)arg4 count:(unsigned int)arg5 objects:(id)arg6;
- (double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned int)arg3 objects:(id)arg4;
- (id)threadDescription;
@end

@interface NSString (SCRCMathExpression)
+ (id)stringWithDollarCode:(id)arg1;
- (id)stringWrappedInMathMLTag:(id)arg1 withAttributes:(id)arg2;
- (id)stringWrappedInMathMLTag:(id)arg1;
@end

@interface NSString (SCRCMathLatex)
- (id)stringWithMathIndicators;
@end

@interface NSString (SCRCThread)
- (id)threadDescription;
@end

@interface NSThread (SCRCThread)
- (_Bool)shouldStop;
- (void)unregisterForStopNotification;
- (void)registerForStopNotification;
@end

__attribute__((visibility("hidden")))
@interface SCRCArgumentHolder : NSObject
{
    SCRCArgumentHolderPrivate *_private;
}

- (_Bool)isRequired;
- (void)setIsRequired:(_Bool)arg1;
- (id)argumentDescription;
- (void)setArgumentDescription:(id)arg1;
- (SEL)action;
- (void)setAction:(SEL)arg1;
- (id)target;
- (void)setTarget:(id)arg1;
- (id)argument;
- (void)setArgument:(id)arg1;
- (id)option;
- (void)setOption:(id)arg1;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (_Bool)process;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface SCRCArgumentHolderPrivate : NSObject
{
    NSNumber *option;
    NSString *argument;
    id target;
    SEL action;
    NSString *argumentDescription;
    _Bool isRequired;
}

@end

@interface SCRCArgumentSubcommand : NSObject
{
    NSString *_subcommandName;
    NSMutableArray *_optionArray;
}

+ (id)subcommandWithName:(id)arg1;
- (id)description;
- (void)showHelp;
- (void)stopDueToSigTerm;
- (void)stop;
- (int)run;
- (void)addOption:(id)arg1 argument:(id)arg2 target:(id)arg3 action:(SEL)arg4 argumentDescription:(id)arg5 required:(_Bool)arg6;
- (id)formattedHelpFooter;
- (id)formattedHelpHeader;
- (id)optionArray;
- (id)subcommandName;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)addOptions;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface SCRCArgumentParser : SCRCArgumentSubcommand
{
    int _argc;
    char **_argv;
    NSMutableArray *_subcommandArray;
    NSMutableArray *_argumentArray;
    NSString *_appName;
    SCRCArgumentSubcommand *_subcommand;
    _Bool _isLaunchedAtLogin;
}

+ (id)commandPath;
+ (id)versionString;
+ (id)processIdentifier;
- (id)setRunningAtStartup:(id)arg1;
- (id)_displayHelp:(id)arg1;
- (id)_displayVersion:(id)arg1;
- (void)stop;
- (int)run;
- (_Bool)parse;
- (void)addSubcommand:(id)arg1;
- (id)appName;
- (void)setAppName:(id)arg1;
- (_Bool)isLaunchedAtLogin;
- (int)argc;
- (char **)argv;
- (void)dealloc;
- (id)initWithArgc:(int)arg1 argv:(const char **)arg2;

@end

@interface SCRCException : NSObject
{
}

+ (void)initialize;

@end

@interface SCRCGestureEvent : NSObject
{
    unsigned long long _deviceIdentifier;
    SCRCGestureFinger *_finger[8];
    unsigned long long _fingerCount;
    double _time;
    struct CGPoint _averageLocation;
}

- (struct CGPoint)magneticLocation;
- (_Bool)isCancelEvent;
- (struct CGPoint)balancedLocation;
- (struct CGPoint)averageLocation;
- (struct CGRect)fingerFrame;
- (id)fingers;
- (id)fingerWithoutIdentifier:(unsigned long long)arg1;
- (id)fingerWithIdentifier:(unsigned long long)arg1;
- (id)fingerAtIndex:(unsigned long long)arg1;
- (unsigned long long)fingerCount;
- (void)removeFingerWithIdentifier:(unsigned long long)arg1;
- (void)addFingerWithIdentifier:(unsigned long long)arg1 location:(struct CGPoint)arg2;
- (double)time;
- (unsigned long long)deviceIdentifier;
- (id)description;
- (void)dealloc;
- (id)initWithDeviceIdentifier:(unsigned long long)arg1;

@end

@interface SCRCGestureFactory : NSObject
{
    double _stallDistance;
    double _maxDimension;
    double _thumbRegion;
    int _orientation;
    int _directions[7];
    struct {
        double horizontal;
        double vertical;
    } _axisFlipper;
    double _scaledTrackingDistance;
    _Bool _setTrackingTimer;
    double _flickVelocityThreshold;
    double _tapVelocityThreshold;
    double _echoWaitTime;
    struct CGRect _tapSpeedRegion;
    double _tapVelocityThresholdForRegion;
    _Bool _inTapSpeedRegionForDownEvent;
    struct CGRect _mainFrame;
    struct CGRect _gutterFrame;
    double _lastTime;
    double _lastDownTime;
    double _lastGutterDownTime;
    double _lastDegrees;
    double _startDegrees;
    double _startDistance;
    _Bool _startedInGutter;
    double _requireDelayBeforeTracking;
    _Bool _requireUp;
    _Bool _thumbRejectionEnabled;
    double _thumbRejectionDistance;
    int _state;
    int _previousState;
    int _direction;
    double _directionalSlope;
    struct SCRCFingerState _finger[2];
    unsigned long long _absoluteFingerCount;
    unsigned short _fingerCount;
    unsigned short _lastFingerCount;
    double _distance;
    unsigned long long _tapCount;
    struct CGRect _tapFrame;
    struct CGRect _tapMultiFrame;
    struct {
        id track;
        id tap;
        id gutterUp;
        id splitTap;
        id canSplitTap;
    } _delegate;
    SCRCTargetSelectorTimer *_trackingTimer;
    struct {
        _Bool down;
        _Bool dead;
        _Bool gutter;
        unsigned long long current;
        unsigned long long digits;
        unsigned long long count;
        struct CGRect frame;
        struct CGPoint location[8];
        struct CGPoint locationPerTap[8];
        unsigned long long digitsPerTap;
        double thisTime;
        double lastTime;
    } _tap;
    SCRCTargetSelectorTimer *_tapTimer;
    SCRCTargetSelectorTimer *_gutterUpTimer;
    struct {
        SCRCGestureFactory *factory;
        _Bool isSplitting;
        _Bool isTapping;
        _Bool fastTrack;
        _Bool tapDead;
        _Bool timedOut;
        _Bool active;
        unsigned long long fingerIdentifier;
        double fingerDownTime;
        struct CGPoint startTapLocation;
        struct CGPoint lastTapLocation;
        struct CGPoint primaryFingerLocation;
        double tapDistance;
        int state;
    } _split;
}

@property(nonatomic) _Bool thumbRejectionEnabled; // @synthesize thumbRejectionEnabled=_thumbRejectionEnabled;
- (id)gestureStateString;
- (double)tapInterval;
- (struct CGPoint)tapPointWeightedToSides;
- (struct CGPoint)tapPoint;
- (struct CGRect)multiTapFrame;
- (struct CGRect)tapFrame;
- (struct CGPoint)endLocation;
- (struct CGPoint)startLocation;
- (struct CGPoint)rawAverageLocation;
- (struct CGPoint)rawLocation;
- (_Bool)tapIsDown;
- (unsigned long long)tapCount;
- (unsigned long long)fingerCount;
- (unsigned long long)absoluteFingerCount;
- (double)distance;
- (double)velocity;
- (double)vector;
- (int)direction;
- (int)gestureState;
- (double)directionalSlope;
- (void)reset;
- (void)_up;
- (void)_drag:(id)arg1;
- (void)_down:(id)arg1;
- (void)handleGestureEvent:(id)arg1;
- (_Bool)_handleSplitEvent:(id)arg1;
- (_Bool)_handleSplitTap;
- (void)_updateStartWithPoint:(struct CGPoint)arg1 time:(double)arg2;
- (void)_processUpAndPost:(_Bool)arg1;
- (void)_handleGutterUp;
- (void)_enterTrackingMode:(id)arg1;
- (void)_handleTap;
- (void)_updateTapState;
- (void)_updateMultiTapFrame;
- (struct CGRect)_currentTapRect;
- (struct CGRect)mainFrame;
- (void)dealloc;
- (int)orientation;
- (void)setOrientation:(int)arg1;
- (double)tapSpeed;
- (void)setTapSpeedTimeThreshold:(double)arg1 forRegion:(struct CGRect)arg2;
- (void)setTapSpeed:(double)arg1;
- (double)flickSpeed;
- (void)setFlickSpeed:(double)arg1;
- (id)initWithSize:(struct CGSize)arg1 delegate:(id)arg2 threadKey:(id)arg3;
- (id)initWithSize:(struct CGSize)arg1 delegate:(id)arg2;

@end

@interface SCRCGestureFinger : NSObject
{
    unsigned long long _identifier;
    struct CGPoint _location;
}

- (struct CGPoint)location;
- (unsigned long long)identifier;
- (id)description;
- (id)initWithIdentifier:(unsigned long long)arg1 location:(struct CGPoint)arg2;

@end

@interface SCRCIndexMap : NSObject <NSCopying, NSCoding>
{
    struct __CFDictionary *_map;
}

- (id)description;
- (void)addObjectsFromIndexMap:(id)arg1;
- (id)indexes;
- (unsigned long long *)_createIndexesWithSize:(unsigned long long *)arg1;
- (unsigned long long)count;
- (id)objectForIndex:(unsigned long long)arg1;
- (void)removeAllObjects;
- (void)removeObjectForIndex:(unsigned long long)arg1;
- (void)setObject:(id)arg1 forIndex:(unsigned long long)arg2;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)deepCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initAndDeepCopyIndexMap:(id)arg1;
- (id)_initWithIndexMap:(id)arg1;
- (id)init;
- (id)initWithObjects:(id *)arg1 andIndexes:(unsigned long long *)arg2 count:(unsigned long long)arg3;

@end

@interface SCRCMathExpression : NSObject
{
    SCRCMathExpression *_parent;
    unsigned long long _cachedMaximumDepth;
}

+ (Class)_classForExpressionType:(id)arg1;
+ (id)mathExpressionWithDictionary:(id)arg1;
+ (void)setPathToSegmentOrderingPlist:(id)arg1;
@property(nonatomic) SCRCMathExpression *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) _Bool canBeWrappedInLatexMathIndicators;
- (id)latexDescriptionForChildrenJoinedByString:(id)arg1;
- (id)latexIdentifierForFenceOperator:(id)arg1 isClosingOperator:(_Bool)arg2;
- (id)latexIdentifierForIdentifier:(id)arg1;
- (id)fenceDelimiters;
- (unsigned long long)maximumFractionLevelOfSubExpressions;
- (id)speakableSegments:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3;
- (id)speakableSegments:(id)arg1 withLocalizablePrefix:(id)arg2 localizableSuffix:(id)arg3;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 prefix:(id)arg4 suffix:(id)arg5;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 localizablePrefix:(id)arg4 localizableSuffix:(id)arg5;
- (void)_applyTreePositionOfOriginalSegment:(id)arg1 toPrefixedOrSuffixedSegment:(id)arg2;
- (id)arrayWithoutNilsFromFirstChild:(id)arg1 secondChild:(id)arg2 thirdChild:(id)arg3;
@property(readonly, nonatomic) NSArray *siblings;
- (id)localizedSegmentOrderingForKey:(id)arg1;
- (id)localizedStringForNumber:(id)arg1;
- (id)localizedAttributedStringForKey:(id)arg1 treePosition:(id)arg2;
- (id)localizedAttributedStringForKey:(id)arg1;
- (id)localizedStringForKey:(id)arg1;
- (id)_scrcBundle;
@property(readonly, nonatomic) NSString *latexFormatStringAsUnder;
@property(readonly, nonatomic) NSString *latexFormatStringAsOver;
- (unsigned long long)numberOfTables;
- (_Bool)canFormWordStartingWithExpression:(id)arg1;
@property(readonly, nonatomic) _Bool isUnlinedFraction;
@property(readonly, nonatomic) _Bool isMultiRowTable;
@property(readonly, nonatomic) _Bool endsWithSpace;
@property(readonly, nonatomic) _Bool beginsWithSpace;
@property(readonly, nonatomic) _Bool isSimpleNumericalFraction;
@property(readonly, nonatomic) unsigned long long fractionLevel;
@property(readonly, nonatomic) _Bool isWordOrAbbreviation;
@property(readonly, nonatomic) _Bool isFunctionName;
@property(readonly, nonatomic) _Bool isFenceDelimiter;
@property(readonly, nonatomic) _Bool isOperationSymbol;
@property(readonly, nonatomic) _Bool isTermSeparator;
@property(readonly, nonatomic) _Bool isEllipsis;
@property(readonly, nonatomic) _Bool hasSimpleArrayOfChildren;
@property(readonly, nonatomic) _Bool isNaturalSuperscript;
@property(readonly, nonatomic) long long integerValue;
@property(readonly, nonatomic) _Bool isInteger;
@property(readonly, nonatomic) _Bool isNumber;
@property(readonly, nonatomic) _Bool canBeUsedWithBase;
@property(readonly, nonatomic) _Bool isBaseSubSuperscript;
@property(readonly, nonatomic) _Bool canBeUsedWithRange;
@property(readonly, nonatomic) _Bool isRangeSubSuperscript;
@property(readonly, nonatomic) NSArray *children;
- (id)latexMathModeDescription;
- (id)latexDescriptionInMathMode:(_Bool)arg1;
- (id)latexDescription;
- (id)speakableSummary;
- (id)mathMLString;
- (id)speakableSegmentsAsBinomialCoefficientWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2;
- (id)speakableSegmentsUpToDepth:(unsigned long long)arg1;
- (unsigned long long)maximumDepth;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2 openOperator:(id)arg3 openOperatorTreePosition:(id)arg4 closeOperator:(id)arg5 closeOperatorTreePosition:(id)arg6;
- (id)dollarCodeDescriptionAsBinomialCoefficientWithTreePosition:(id)arg1 numberOfOuterRadicals:(unsigned long long)arg2;
- (id)dollarCodeDescriptionAsMixedNumberFractionWithTreePosition:(id)arg1;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)dollarCodeDescription;
- (id)speakableDescriptionAsBinomialCoefficientWithSpeakingStyle:(int)arg1;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2 isPartOfWord:(_Bool)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1;
- (id)speakableDescription;
@property(readonly, nonatomic) NSArray *subExpressions;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathArrayExpression : SCRCMathExpression
{
    NSArray *_children;
}

- (id)suffixForChildAtIndex:(unsigned long long)arg1;
- (id)prefixForChildAtIndex:(unsigned long long)arg1;
- (id)localizableSuffixForChildAtIndex:(unsigned long long)arg1;
- (id)localizablePrefixForChildAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) NSArray *mathMLAttributes;
@property(readonly, nonatomic) NSString *mathMLTag;
- (_Bool)hasSimpleArrayOfChildren;
- (id)mathMLString;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)childSpeakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 parentTreePosition:(id)arg3 childIndex:(unsigned long long *)arg4;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)children;
- (id)subExpressions;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathRowExpression : SCRCMathArrayExpression
{
}

- (id)latexDescriptionInMathMode:(_Bool)arg1;
- (id)speakableSummary;
- (id)mathMLTag;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (void)_addSpacingAndChild:(id)arg1 toResult:(id)arg2 nextChild:(id)arg3 previousChild:(id)arg4 numberOfOuterRadicals:(unsigned long long)arg5 treePosition:(id)arg6;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)childSpeakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 parentTreePosition:(id)arg3 childIndex:(unsigned long long *)arg4;
- (id)_indexesOfCharactersInWords;
- (_Bool)endsWithSpace;
- (_Bool)beginsWithSpace;
- (unsigned long long)fractionLevel;
- (_Bool)canBeUsedWithBase;
- (_Bool)canBeUsedWithRange;
- (_Bool)isWordOrAbbreviation;
- (_Bool)isFunctionName;
- (long long)integerValue;
- (_Bool)isInteger;
- (_Bool)isNumber;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathFencedExpression : SCRCMathRowExpression
{
    NSString *_openString;
    NSString *_closeString;
}

@property(copy, nonatomic) NSString *closeString; // @synthesize closeString=_closeString;
@property(copy, nonatomic) NSString *openString; // @synthesize openString=_openString;
- (id)latexDescriptionInMathMode:(_Bool)arg1;
- (id)mathMLAttributes;
- (id)mathMLTag;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (unsigned long long)fractionLevel;
- (id)_treePositionForBinomialCoefficientContentWithOuterTreePosition:(id)arg1;
- (id)_binomialCoefficientContent;
- (_Bool)_isBinomialCoefficient;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathFractionExpression : SCRCMathExpression
{
    SCRCMathExpression *_numerator;
    SCRCMathExpression *_denominator;
    SCRCMathExpression *_operator;
    double _lineThickness;
}

@property(nonatomic) double lineThickness; // @synthesize lineThickness=_lineThickness;
@property(retain, nonatomic) SCRCMathExpression *operator; // @synthesize operator=_operator;
@property(retain, nonatomic) SCRCMathExpression *denominator; // @synthesize denominator=_denominator;
@property(retain, nonatomic) SCRCMathExpression *numerator; // @synthesize numerator=_numerator;
- (id)latexMathModeDescription;
- (id)mathMLString;
- (id)_dollarCodeDescriptionAsBinomialCoefficient:(_Bool)arg1 orMixedNumberFraction:(_Bool)arg2 withNumberOfOuterRadicals:(unsigned long long)arg3 treePosition:(id)arg4;
- (id)dollarCodeDescriptionAsBinomialCoefficientWithTreePosition:(id)arg1 numberOfOuterRadicals:(unsigned long long)arg2;
- (id)dollarCodeDescriptionAsMixedNumberFractionWithTreePosition:(id)arg1;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableSegmentsAsBinomialCoefficientWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)_speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 asBinomialCoefficient:(_Bool)arg4;
- (id)speakableDescriptionAsBinomialCoefficientWithSpeakingStyle:(int)arg1;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)_speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2 asBinomialCoefficient:(_Bool)arg3;
- (_Bool)isSimpleNumericalFraction;
- (unsigned long long)fractionLevel;
- (_Bool)isUnlinedFraction;
- (id)subExpressions;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathSimpleExpression : SCRCMathExpression
{
    NSString *_content;
}

@property(copy, nonatomic) NSString *content; // @synthesize content=_content;
- (id)latexMathModeDescription;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (_Bool)canBeUsedWithBase;
- (_Bool)isFunctionName;
- (id)_functionNames;
- (_Bool)isWordOrAbbreviation;
- (long long)integerValue;
- (_Bool)isInteger;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathIdentifierExpression : SCRCMathSimpleExpression
{
    int _fontStyle;
}

@property(readonly, nonatomic) int fontStyle; // @synthesize fontStyle=_fontStyle;
- (_Bool)canFormWordStartingWithExpression:(id)arg1;
- (_Bool)isNaturalSuperscript;
- (_Bool)_isPrime;
- (_Bool)isNumber;
- (id)mathMLString;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2 isPartOfWord:(_Bool)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathLongDivisionExpression : SCRCMathArrayExpression
{
    SCRCMathExpression *_divisor;
}

@property(retain, nonatomic) SCRCMathExpression *divisor; // @synthesize divisor=_divisor;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathNumberExpression : SCRCMathSimpleExpression
{
}

- (id)mathMLString;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (_Bool)isNumber;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathOperatorExpression : SCRCMathSimpleExpression
{
    unsigned short _operatorChar;
}

@property(readonly, nonatomic) unsigned short operatorChar; // @synthesize operatorChar=_operatorChar;
- (id)mathMLString;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)latexFormatStringAsOver;
- (_Bool)isFenceDelimiter;
- (_Bool)isOperationSymbol;
- (_Bool)isTermSeparator;
- (_Bool)isEllipsis;
- (_Bool)isNaturalSuperscript;
- (_Bool)_isMinusSign;
- (_Bool)_isInvisibleCharacter;
- (_Bool)_isRingOperator;
- (_Bool)canBeUsedWithRange;
- (_Bool)_isSummation;
- (_Bool)_isUnionOrIntersection;
- (_Bool)_isIntegral;
- (id)description;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathRadicalExpression : SCRCMathExpression
{
    SCRCMathExpression *_radicand;
    SCRCMathExpression *_rootIndex;
}

@property(retain, nonatomic) SCRCMathExpression *rootIndex; // @synthesize rootIndex=_rootIndex;
@property(retain, nonatomic) SCRCMathExpression *radicand; // @synthesize radicand=_radicand;
- (id)latexMathModeDescription;
- (id)mathMLString;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (unsigned long long)fractionLevel;
- (_Bool)_isCubeRoot;
- (_Bool)_isSquareRoot;
- (id)subExpressions;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathSpaceExpression : SCRCMathExpression
{
}

- (_Bool)endsWithSpace;
- (_Bool)beginsWithSpace;
- (id)mathMLString;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathSubSuperscriptExpression : SCRCMathExpression
{
    SCRCMathExpression *_base;
    SCRCMathExpression *_subscript;
    SCRCMathExpression *_superscript;
}

@property(retain, nonatomic) SCRCMathExpression *base; // @synthesize base=_base;
@property(retain, nonatomic) SCRCMathExpression *superscript; // @synthesize superscript=_superscript;
@property(retain, nonatomic) SCRCMathExpression *subscript; // @synthesize subscript=_subscript;
- (id)latexMathModeDescription;
- (id)mathMLString;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (id)_stringToAddForSuperscript:(id)arg1 withPriorDescription:(id)arg2 updatedDescription:(id *)arg3;
- (id)subExpressions;
- (unsigned long long)fractionLevel;
- (_Bool)isNumber;
- (_Bool)isBaseSubSuperscript;
- (_Bool)isRangeSubSuperscript;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathTableCellExpression : SCRCMathRowExpression
{
    _Bool _didGetTablePosition;
    unsigned long long _rowIndex;
    unsigned long long _columnIndex;
    unsigned long long _tableRowCount;
    unsigned long long _tableColumnCount;
}

- (id)mathMLTag;
- (id)suffixForChildAtIndex:(unsigned long long)arg1;
- (id)prefixForChildAtIndex:(unsigned long long)arg1;
- (id)_suffixForCell;
- (id)_prefixForCell;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (void)_getTableDataIfNecessary;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathTableExpression : SCRCMathArrayExpression
{
}

- (_Bool)canBeWrappedInLatexMathIndicators;
- (id)latexDescriptionInMathMode:(_Bool)arg1;
- (unsigned long long)numberOfTables;
- (unsigned long long)_numberOfColumns;
- (id)mathMLTag;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2 openOperator:(id)arg3 openOperatorTreePosition:(id)arg4 closeOperator:(id)arg5 closeOperatorTreePosition:(id)arg6;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (_Bool)isMultiRowTable;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathTableRowExpression : SCRCMathArrayExpression
{
}

- (_Bool)canBeWrappedInLatexMathIndicators;
- (id)latexDescriptionInMathMode:(_Bool)arg1;
- (id)mathMLTag;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathTextExpression : SCRCMathSimpleExpression
{
}

- (id)latexDescriptionInMathMode:(_Bool)arg1;
- (id)mathMLString;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface SCRCMathUnderOverExpression : SCRCMathExpression
{
    SCRCMathExpression *_under;
    SCRCMathExpression *_over;
    SCRCMathExpression *_base;
}

@property(retain, nonatomic) SCRCMathExpression *base; // @synthesize base=_base;
@property(retain, nonatomic) SCRCMathExpression *over; // @synthesize over=_over;
@property(retain, nonatomic) SCRCMathExpression *under; // @synthesize under=_under;
- (id)latexMathModeDescription;
- (id)mathMLString;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(_Bool)arg2;
- (_Bool)isRangeSubSuperscript;
- (unsigned long long)fractionLevel;
- (id)subExpressions;
- (id)description;
- (void)dealloc;
- (id)initWithDictionary:(id)arg1;

@end

@interface SCRCPhotoEvaluator : NSObject
{
}

+ (id)sharedInstance;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (id)evaluateImage:(struct CGImage *)arg1 forCriteria:(int)arg2 inRect:(struct CGRect)arg3;
- (void)dealloc;
- (id)autorelease;
- (oneway void)release;
- (unsigned long long)retainCount;
- (id)retain;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorMethod : NSObject
{
}

+ (id)detect:(id)arg1 inRect:(struct CGRect)arg2;
+ (id)detect:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorBlur : SCRCPhotoEvaluatorMethod
{
}

+ (id)detect:(id)arg1 inRect:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorColor : SCRCPhotoEvaluatorMethod
{
}

+ (id)detect:(id)arg1 inRect:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorLuminance : SCRCPhotoEvaluatorMethod
{
}

+ (id)detect:(id)arg1 inRect:(struct CGRect)arg2;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorPeople : SCRCPhotoEvaluatorMethod
{
}

+ (id)_shirtColorForFaceRect:(struct CGRect)arg1 inImage:(id)arg2;
+ (id)detect:(id)arg1;
+ (int)faceLocationForFace:(struct CGRect)arg1 inImageRect:(struct CGRect)arg2;
+ (int)faceSizeForFace:(struct CGRect)arg1 inImageRect:(struct CGRect)arg2;
+ (id)detect:(id)arg1 inRect:(struct CGRect)arg2;

@end

@interface SCRCPhotoEvaluatorPersonFeature : NSObject
{
    struct CGRect _faceRect;
    struct CGRect _leftEyeRect;
    struct CGRect _mouthRect;
    struct CGRect _rightEyeRect;
    int _faceSize;
    int _faceLocation;
    NSString *_shirtColor;
}

@property(readonly, nonatomic) NSString *shirtColor; // @synthesize shirtColor=_shirtColor;
@property(readonly, nonatomic) struct CGRect rightEyeRect; // @synthesize rightEyeRect=_rightEyeRect;
@property(readonly, nonatomic) struct CGRect mouthRect; // @synthesize mouthRect=_mouthRect;
@property(readonly, nonatomic) struct CGRect leftEyeRect; // @synthesize leftEyeRect=_leftEyeRect;
@property(readonly, nonatomic) int faceLocation; // @synthesize faceLocation=_faceLocation;
@property(readonly, nonatomic) int faceSize; // @synthesize faceSize=_faceSize;
@property(readonly, nonatomic) struct CGRect faceRect; // @synthesize faceRect=_faceRect;
- (id)initWithCIFaceFeature:(id)arg1 ofSize:(int)arg2 andLocation:(int)arg3 andShirtColor:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorResult : NSObject
{
}

- (id)humanReadableResult;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorResultBlur : SCRCPhotoEvaluatorResult
{
    double _blurLevel;
}

@property(readonly, nonatomic) double blurLevel; // @synthesize blurLevel=_blurLevel;
- (id)humanReadableResult;
- (id)initWithBlurLevel:(double)arg1;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorResultColor : SCRCPhotoEvaluatorResult
{
    double _redLevel;
    double _blueLevel;
    double _greenLevel;
}

@property(readonly, nonatomic) double greenLevel; // @synthesize greenLevel=_greenLevel;
@property(readonly, nonatomic) double blueLevel; // @synthesize blueLevel=_blueLevel;
@property(readonly, nonatomic) double redLevel; // @synthesize redLevel=_redLevel;
- (id)humanReadableResult;
- (id)initWithRedLevel:(double)arg1 blueLevel:(double)arg2 greenLevel:(double)arg3;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorResultLuminance : SCRCPhotoEvaluatorResult
{
    double _darknessLevel;
    double _brightnessLevel;
    double _averageLevel;
}

@property(readonly, nonatomic) double averageLevel; // @synthesize averageLevel=_averageLevel;
@property(readonly, nonatomic) double brightnessLevel; // @synthesize brightnessLevel=_brightnessLevel;
@property(readonly, nonatomic) double darknessLevel; // @synthesize darknessLevel=_darknessLevel;
- (id)humanReadableResult;
- (id)initWithDarknessLevel:(double)arg1 brightnessLevel:(double)arg2 averageLevel:(double)arg3;

@end

@interface SCRCPhotoEvaluatorResultPeople : SCRCPhotoEvaluatorResult
{
    struct CGSize _imageSize;
    NSArray *_people;
}

@property(readonly, nonatomic) NSArray *people; // @synthesize people=_people;
- (void)dealloc;
- (id)humanReadableResult;
- (id)initWithPeople:(id)arg1 inImageOfSize:(struct CGSize)arg2;

@end

__attribute__((visibility("hidden")))
@interface SCRCPhotoEvaluatorResults : NSObject
{
    SCRCPhotoEvaluatorResult *_blurResult;
    SCRCPhotoEvaluatorResult *_colorResult;
    SCRCPhotoEvaluatorResultPeople *_peopleResult;
    SCRCPhotoEvaluatorResult *_luminanceResult;
}

@property(readonly, nonatomic) SCRCPhotoEvaluatorResult *luminanceResult; // @synthesize luminanceResult=_luminanceResult;
@property(readonly, nonatomic) SCRCPhotoEvaluatorResultPeople *peopleResult; // @synthesize peopleResult=_peopleResult;
@property(readonly, nonatomic) SCRCPhotoEvaluatorResult *colorResult; // @synthesize colorResult=_colorResult;
@property(readonly, nonatomic) SCRCPhotoEvaluatorResult *blurResult; // @synthesize blurResult=_blurResult;
- (void)dealloc;
- (id)initWithBlurResult:(id)arg1 colorResult:(id)arg2 peopleResult:(id)arg3 luminanceResult:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface SCRCRawImage : NSObject
{
    struct CGImage *_imageRef;
    char *_data;
    long long _width;
    long long _height;
    long long _bytesPerPixel;
}

+ (id)rawImageForImage:(struct CGImage *)arg1;
@property(nonatomic) long long bytesPerPixel; // @synthesize bytesPerPixel=_bytesPerPixel;
@property(nonatomic) long long height; // @synthesize height=_height;
@property(nonatomic) long long width; // @synthesize width=_width;
@property(nonatomic) char *data; // @synthesize data=_data;
@property(retain, nonatomic) struct CGImage *imageRef; // @synthesize imageRef=_imageRef;
- (void)dealloc;

@end

@interface SCRCRegularExpression : NSObject
{
}

+ (id)matchedRangesForString:(id)arg1 withRegularExpression:(struct URegularExpression *)arg2;
+ (struct URegularExpression *)createRegularExpressionFromString:(id)arg1;

@end

@interface SCRCStackQueue : NSObject
{
    struct _SCRCStackNode *_firstNode;
    struct _SCRCStackNode *_lastNode;
    unsigned long long _count;
}

- (_Bool)isEmpty;
- (id)objectEnumerator;
- (id)description;
- (unsigned long long)count;
- (id)dequeueObject;
- (id)dequeueObjectRetained;
- (void)enqueueObject:(id)arg1;
- (id)topObject;
- (id)popObjectRetained;
- (id)popObject;
- (void)pushObject:(id)arg1;
- (void)pushArray:(id)arg1;
- (void)removeAllObjects;
- (void)dealloc;

@end

@interface SCRCTargetSelector : NSObject
{
    id _target;
    SEL _selector;
}

+ (id)targetSelectorWithTarget:(id)arg1 selector:(SEL)arg2;
- (void)dealloc;
- (SEL)selector;
- (id)target;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2;

@end

@interface SCRCTargetSelectorTimer : SCRCTargetSelector
{
    struct __CFRunLoopTimer *_timer;
    id _key;
    _Bool _isCanceled;
    _Bool _isPending;
    id _object;
    NSLock *_lock;
    _Bool _createdTimer;
}

+ (void)_runThread;
+ (void)initialize;
- (void)_dispatchSCRCThread;
- (void)_dispatchMainThread;
- (void)_dispatch;
- (id)threadKey;
- (_Bool)isPending;
- (_Bool)isCancelled;
- (_Bool)isCanceled;
- (void)cancel;
- (void)dispatchAfterDelay:(double)arg1 withObject:(id)arg2;
- (void)dispatchAfterDelay:(double)arg1;
- (void)dealloc;
- (oneway void)release;
- (void)invalidate;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 threadKey:(id)arg3;
- (_Bool)_createdTimer;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2;

@end

@interface SCRCThread : NSObject
{
    SCRCStackQueue *_queue;
    id _queueLock;
    struct __CFRunLoopSource *_source;
    struct __CFRunLoop *_runLoop;
    id _key;
    _Bool _isInvalid;
    _Bool _isRegistered;
    _Bool _isTimerSet;
    double _lastStartTime;
    NSString *_description;
    _Bool _descriptionChanged;
    NSThread *_nsThread;
}

+ (void)postStopNotification;
+ (void)invalidateForKey:(id)arg1;
+ (double)lastStartTimeForKey:(id)arg1;
+ (double)_performSelector:(SEL)arg1 withThreadKey:(id)arg2 onTarget:(id)arg3 waitTime:(double)arg4 cancelMask:(unsigned int)arg5 count:(unsigned int)arg6 firstObject:(id)arg7 moreObjects:(struct __va_list_tag [1])arg8;
+ (long long)activeThreadCount;
+ (id)activity;
+ (void)initialize;
- (void)_processQueue;
- (void)_processQueueFromTimer;
- (void)_enqueueTask:(id)arg1 cancelMask:(unsigned int)arg2 lastStartTime:(double *)arg3;
- (double)lastStartTime;
- (_Bool)isInvalid;
- (void)setIsInvalid:(_Bool)arg1;
- (double)performSelector:(SEL)arg1 onTarget:(id)arg2 cancelMask:(unsigned int)arg3 count:(unsigned int)arg4 objects:(id)arg5;
- (double)performSelector:(SEL)arg1 onTarget:(id)arg2 count:(unsigned int)arg3 objects:(id)arg4;
- (double)_performSelector:(SEL)arg1 onTarget:(id)arg2 cancelMask:(unsigned int)arg3 count:(unsigned int)arg4 firstObject:(id)arg5 moreObjects:(struct __va_list_tag [1])arg6;
- (void)dealloc;
- (void)_runThread:(id)arg1;
- (void)_setKey:(id)arg1;
- (void)_setName:(id)arg1;
- (void)setName:(id)arg1;
- (id)_initWithKey:(id)arg1 task:(id)arg2;
- (id)init;

@end

@interface SCRCThreadedWeakLinkedObject : NSObject
{
    NSLock *_releaseLock;
    int _referenceCount;
    _Bool _calledDealloc;
}

- (void)dealloc;
- (oneway void)release;
- (void)invalidateThreadsWithWeakLinks;
- (id)retain;
- (unsigned long long)retainCount;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _SCRCStackQueueEnumerator : NSEnumerator
{
    struct _SCRCStackNode *_currentListMemeber;
}

- (id)nextObject;
- (id)initWithListMember:(struct _SCRCStackNode *)arg1;

@end

__attribute__((visibility("hidden")))
@interface _SCRCThreadTask : NSObject
{
    id _target;
    SEL _selector;
    unsigned int _count;
    void *_objects[6];
    NSConditionLock *_waitLock;
    unsigned int _mask;
}

- (void)fire;
- (void)setWaitLock:(id)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 selector:(SEL)arg2 cancelMask:(unsigned int)arg3 count:(unsigned int)arg4 firstObject:(id)arg5 moreObjects:(struct __va_list_tag [1])arg6;

@end

