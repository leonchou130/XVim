//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    double width;
    double height;
};

struct internal_state;

struct z_stream_s {
    char *_field1;
    unsigned int _field2;
    unsigned long long _field3;
    char *_field4;
    unsigned int _field5;
    unsigned long long _field6;
    char *_field7;
    struct internal_state *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    void *_field11;
    int _field12;
    unsigned long long _field13;
    unsigned long long _field14;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1;
    int _field2;
} CDStruct_87dc826d;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MediaServices.framework/MediaServices
// UUID: 8478A987-975A-3C49-B32C-402AA6C70AB1
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 39.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol MSVArtworkServiceInterface <NSObject>
- (void)resizeImageAtSourceURL:(NSURL *)arg1 destinationSize:(struct CGSize)arg2 destinationURL:(NSURL *)arg3 completionHandler:(void (^)(NSError *))arg4;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@interface MSVArtworkService : NSObject
{
    NSOperationQueue *_serviceThrottlingOperationQueue;
    NSXPCConnection *_serverConnection;
}

+ (id)sharedService;
@property(retain, nonatomic) NSXPCConnection *serverConnection; // @synthesize serverConnection=_serverConnection;
@property(retain, nonatomic) NSOperationQueue *serviceThrottlingOperationQueue; // @synthesize serviceThrottlingOperationQueue=_serviceThrottlingOperationQueue;
- (void).cxx_destruct;
- (void)resizeImageAtSourceURL:(id)arg1 destinationSize:(struct CGSize)arg2 destinationURL:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface MSVCLIBlockHandler : NSObject
{
    CDUnknownBlockType _block;
}

@property(readonly, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)invokeWithCommand:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface MSVCLICommand : NSObject
{
    NSDictionary *_cachedOptionsDictionary;
    NSString *_name;
    NSArray *_options;
}

@property(readonly, nonatomic) NSArray *options; // @synthesize options=_options;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)valueForOption:(id)arg1;
- (_Bool)containsOption:(id)arg1;
@property(readonly, nonatomic) NSDictionary *optionsDictionary;
- (id)description;
- (id)init;
- (id)initWithName:(id)arg1 options:(id)arg2;

@end

@interface MSVCLICommandInterpreter : NSObject
{
    NSMutableDictionary *_commandToInvocationsMap;
    NSMutableArray *_retainedBlockHandlers;
}

- (void).cxx_destruct;
- (_Bool)executeWithArgumentCount:(int)arg1 arguments:(const char **)arg2;
- (void)addHandlerToCommand:(id)arg1 withTarget:(id)arg2 action:(SEL)arg3;
- (void)addHandlerToCommand:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface MSVDistributedNotificationObserver : NSObject
{
    int _notifyToken;
    NSString *_distributedName;
    NSString *_localName;
    NSObject<OS_dispatch_queue> *_queue;
    id <MSVDistributedNotificationObserverDelegate> _delegate;
    NSDictionary *_userInfoForLocalNotification;
}

+ (id)observerWithDistributedName:(id)arg1 localName:(id)arg2 queue:(id)arg3;
@property(copy, nonatomic) NSDictionary *userInfoForLocalNotification; // @synthesize userInfoForLocalNotification=_userInfoForLocalNotification;
@property(nonatomic) __weak id <MSVDistributedNotificationObserverDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSString *localName; // @synthesize localName=_localName;
@property(readonly, nonatomic) NSString *distributedName; // @synthesize distributedName=_distributedName;
- (void).cxx_destruct;
- (void)_handleDistributedNotificationWithNotifyToken:(int)arg1;
- (int)notifyToken;
- (void)dealloc;
- (id)init;
- (id)initWithDistributedName:(id)arg1 localName:(id)arg2 queue:(id)arg3;

@end

@interface MSVImageResizeOperation : NSOperation
{
    _Bool _overwriteExistingDestination;
    NSURL *_sourceURL;
    NSURL *_destinationURL;
    NSObject<OS_dispatch_group> *_operationGroup;
    NSError *_error;
    struct CGSize _destinationSize;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSObject<OS_dispatch_group> *operationGroup; // @synthesize operationGroup=_operationGroup;
@property(readonly, nonatomic) _Bool overwriteExistingDestination; // @synthesize overwriteExistingDestination=_overwriteExistingDestination;
@property(readonly, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(readonly, nonatomic) struct CGSize destinationSize; // @synthesize destinationSize=_destinationSize;
@property(readonly, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
- (void).cxx_destruct;
- (void)main;
- (id)initWithSourceURL:(id)arg1 destinationSize:(struct CGSize)arg2 destinationURL:(id)arg3 overwriteExistingDestination:(_Bool)arg4;

@end

@interface MSVImageResizeUtility : NSObject
{
    NSObject<OS_dispatch_queue> *_imageResizingAccessQueue;
    NSOperationQueue *_imageResizingOperationQueue;
    NSMutableDictionary *_imageResizingOperations;
}

@property(retain, nonatomic) NSMutableDictionary *imageResizingOperations; // @synthesize imageResizingOperations=_imageResizingOperations;
@property(retain, nonatomic) NSOperationQueue *imageResizingOperationQueue; // @synthesize imageResizingOperationQueue=_imageResizingOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *imageResizingAccessQueue; // @synthesize imageResizingAccessQueue=_imageResizingAccessQueue;
- (void).cxx_destruct;
@property(nonatomic) long long maxConcurrentOperationCount;
- (void)cancelResizeImage:(id)arg1;
- (id)resizeImageAtSourceURL:(id)arg1 destinationSize:(struct CGSize)arg2 destinationURL:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface MSVStreamReader : NSObject <NSStreamDelegate>
{
    _Bool _closeOnStop;
    struct z_stream_s *_zstreamp;
    _Bool _compress;
    CDUnknownBlockType _didReadDataBlock;
    CDUnknownBlockType _didFinishReadingBlock;
    CDUnknownBlockType _didEncounterErrorBlock;
    unsigned long long _maximumBufferSize;
    NSInputStream *_stream;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSInputStream *stream; // @synthesize stream=_stream;
@property(nonatomic, getter=shouldCompress) _Bool compress; // @synthesize compress=_compress;
@property(nonatomic) unsigned long long maximumBufferSize; // @synthesize maximumBufferSize=_maximumBufferSize;
@property(copy, nonatomic) CDUnknownBlockType didEncounterErrorBlock; // @synthesize didEncounterErrorBlock=_didEncounterErrorBlock;
@property(copy, nonatomic) CDUnknownBlockType didFinishReadingBlock; // @synthesize didFinishReadingBlock=_didFinishReadingBlock;
@property(copy, nonatomic) CDUnknownBlockType didReadDataBlock; // @synthesize didReadDataBlock=_didReadDataBlock;
- (void).cxx_destruct;
- (id)_compressedDataForData:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)readAllDataWithCompletion:(CDUnknownBlockType)arg1;
- (id)readAllDataWithError:(id *)arg1;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)initWithInputStream:(id)arg1 queue:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSVStreamWriter : NSObject <NSStreamDelegate>
{
    _Bool _closeOnStop;
    struct z_stream_s *_zstreamp;
    _Bool _compressed;
    unsigned long long _maximumBufferSize;
    double _timestamp;
    unsigned long long _bytesWritten;
    CDUnknownBlockType _canWriteDataBlock;
    CDUnknownBlockType _didFinishWritingBlock;
    CDUnknownBlockType _didEncounterErrorBlock;
    NSOutputStream *_outputStream;
    NSInputStream *_inputStream;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(copy, nonatomic) CDUnknownBlockType didEncounterErrorBlock; // @synthesize didEncounterErrorBlock=_didEncounterErrorBlock;
@property(copy, nonatomic) CDUnknownBlockType didFinishWritingBlock; // @synthesize didFinishWritingBlock=_didFinishWritingBlock;
@property(copy, nonatomic) CDUnknownBlockType canWriteDataBlock; // @synthesize canWriteDataBlock=_canWriteDataBlock;
@property(nonatomic) unsigned long long bytesWritten; // @synthesize bytesWritten=_bytesWritten;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic, getter=isCompressed) _Bool compressed; // @synthesize compressed=_compressed;
@property(nonatomic) unsigned long long maximumBufferSize; // @synthesize maximumBufferSize=_maximumBufferSize;
- (void).cxx_destruct;
- (id)_decompressData:(id)arg1;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)writeStreamError:(CDStruct_87dc826d)arg1;
- (_Bool)writeAllData:(id)arg1 error:(id *)arg2;
- (void)writeAllData:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)initWithOutputStream:(id)arg1 queue:(id)arg2;
- (id)initWithQueue:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MSVSystemDialog : NSObject
{
    NSMutableArray *_textFields;
    struct __CFUserNotification *_presentedUserNotification;
    struct __CFRunLoopSource *_activeRunLoopSource;
    CDUnknownBlockType _pendingCompletion;
    MSVSystemDialogOptions *_options;
}

+ (id)passwordAlertWithOptions:(id)arg1;
+ (id)systemDialogWithOptions:(id)arg1;
@property(readonly, nonatomic) NSArray *textFields; // @synthesize textFields=_textFields;
@property(readonly, nonatomic) MSVSystemDialogOptions *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (void)presentWithCompletion:(CDUnknownBlockType)arg1;
- (void)clearTextFields;
- (void)addTextFieldWithTitle:(id)arg1 secure:(_Bool)arg2;
- (void)addTextField:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType pendingCompletion;
@property(nonatomic) struct __CFRunLoopSource *activeRunLoopSource;
@property(nonatomic) struct __CFUserNotification *presentedUserNotification;
- (void)dealloc;
- (id)initWithOptions:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MSVSystemDialogManager : NSObject
{
    struct __CFDictionary *_registeredSystemDialogs;
    NSObject<OS_dispatch_queue> *_serialQueue;
}

+ (id)sharedManager;
- (void).cxx_destruct;
- (void)unregisterSystemDialogWithUserNotification:(struct __CFUserNotification *)arg1;
- (id)systemDialogForUserNotification:(struct __CFUserNotification *)arg1;
- (void)registerSystemDialog:(id)arg1 forUserNotification:(struct __CFUserNotification *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface MSVSystemDialogOptions : NSObject
{
    _Bool _showAsTopmost;
    _Bool _forceModalAlertAppearance;
    _Bool _showOnLockscreen;
    _Bool _dismissOverlaysOnLockscreen;
    NSString *_alertHeader;
    NSString *_alertMessage;
    NSString *_defaultButtonTitle;
    NSString *_alternateButtonTitle;
}

@property(nonatomic) _Bool dismissOverlaysOnLockscreen; // @synthesize dismissOverlaysOnLockscreen=_dismissOverlaysOnLockscreen;
@property(nonatomic) _Bool showOnLockscreen; // @synthesize showOnLockscreen=_showOnLockscreen;
@property(nonatomic) _Bool forceModalAlertAppearance; // @synthesize forceModalAlertAppearance=_forceModalAlertAppearance;
@property(nonatomic) _Bool showAsTopmost; // @synthesize showAsTopmost=_showAsTopmost;
@property(copy, nonatomic) NSString *alternateButtonTitle; // @synthesize alternateButtonTitle=_alternateButtonTitle;
@property(copy, nonatomic) NSString *defaultButtonTitle; // @synthesize defaultButtonTitle=_defaultButtonTitle;
@property(copy, nonatomic) NSString *alertMessage; // @synthesize alertMessage=_alertMessage;
@property(copy, nonatomic) NSString *alertHeader; // @synthesize alertHeader=_alertHeader;
- (void).cxx_destruct;

@end

@interface MSVSystemDialogResponse : NSObject
{
    long long _buttonIdentifier;
    NSArray *_textFieldValues;
}

@property(readonly, nonatomic) NSArray *textFieldValues; // @synthesize textFieldValues=_textFieldValues;
@property(readonly, nonatomic) long long buttonIdentifier; // @synthesize buttonIdentifier=_buttonIdentifier;
- (void).cxx_destruct;
- (id)description;
- (id)initWithIdentifier:(long long)arg1 textFieldValues:(id)arg2;

@end

@interface MSVSystemDialogTextField : NSObject
{
    _Bool _secure;
    NSString *_title;
    long long _keyboardType;
}

+ (id)textFieldWithTitle:(id)arg1 secure:(_Bool)arg2;
+ (id)textFieldWithTitle:(id)arg1;
@property(nonatomic) long long keyboardType; // @synthesize keyboardType=_keyboardType;
@property(nonatomic, getter=isSecure) _Bool secure; // @synthesize secure=_secure;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1;

@end

@interface MSVWatchdog : NSObject
{
    _Bool _scheduled;
    _Bool _running;
    double _interval;
    double _timeoutInterval;
    CDUnknownBlockType _timeoutCallback;
    NSString *_mode;
    NSOperationQueue *_operationQueue;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSRunLoop *_runLoop;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_timer;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool running; // @synthesize running=_running;
@property(nonatomic) _Bool scheduled; // @synthesize scheduled=_scheduled;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSString *mode; // @synthesize mode=_mode;
@property(copy, nonatomic) CDUnknownBlockType timeoutCallback; // @synthesize timeoutCallback=_timeoutCallback;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) double interval; // @synthesize interval=_interval;
- (void).cxx_destruct;
- (void)scheduleInRunLoop:(id)arg1;
- (void)scheduleInDispatchQueue:(id)arg1;
- (void)scheduleInOperationQueue:(id)arg1;
- (void)_scheduleTest;
- (void)_scheduleTimeout;
- (void)_invokeCallback;
- (void)_cancelTimeout;
- (void)resume;
- (void)suspend;
- (id)init;

@end

@interface MSVXPCTransaction : NSObject
{
    NSUUID *_identifier;
    NSString *_name;
}

+ (id)activeTransactions;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)_identifier;
- (void)endTransactionOnDate:(id)arg1;
- (void)endTransaction;
- (void)beginTransaction;
@property(readonly, nonatomic, getter=isActive) _Bool active;
- (id)description;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface MSVXPCTransactionController : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMapTable *_openTransactions;
    _Bool _inTransaction;
    NSObject<OS_dispatch_source> *_signalUSR2DispatchSource;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_saveActiveTransactionsToFile;
- (void)_tearDownSignalHandler;
- (void)_setupSignalHandler;
- (void)_onQueueCleanupEndedTransactions;
- (void)_onQueueUpdateInternalTransactionState;
- (id)activeTransactions;
- (_Bool)isTransactionActive:(id)arg1;
- (void)removeActiveTransaction:(id)arg1;
- (void)addActiveTransaction:(id)arg1;
@property(readonly, nonatomic, getter=isInTransaction) _Bool inTransaction;
- (void)dealloc;
- (id)init;

@end

