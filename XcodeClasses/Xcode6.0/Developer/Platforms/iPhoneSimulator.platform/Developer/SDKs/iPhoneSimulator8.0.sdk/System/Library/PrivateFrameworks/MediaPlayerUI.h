//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _MPUReportingTimeRange {
    double location;
    double duration;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long numberOfAvailableSkips;
    long long skipFrequency;
    double skipInterval;
} CDStruct_dcf4dde6;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI
// UUID: 82AFEF2C-63D1-3358-956C-542740AC8767
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 662.36.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol IKAppContextDelegate <NSObject>
- (id <IKAppDeviceConfig>)deviceConfigForContext:(IKAppContext *)arg1;

@optional
- (void)appContext:(IKAppContext *)arg1 needsReloadWithUrgency:(unsigned long long)arg2;
- (void)appContext:(IKAppContext *)arg1 didStopWithOptions:(NSDictionary *)arg2;
- (void)appContext:(IKAppContext *)arg1 didFailWithError:(NSError *)arg2;
- (void)appContext:(IKAppContext *)arg1 didStartWithOptions:(NSDictionary *)arg2;
- (_Bool)appContext:(IKAppContext *)arg1 validateDOMDocument:(IKDOMDocument *)arg2 inContext:(JSContext *)arg3 error:(id *)arg4;
- (void)appContext:(IKAppContext *)arg1 evaluateAppJavaScriptInContext:(JSContext *)arg2;
- (id <IKAppNavigationController>)modalControllerForContext:(IKAppContext *)arg1;
- (IKAppTabBar *)tabBarForContext:(IKAppContext *)arg1;
- (id <IKAppNavigationController>)navigationControllerForContext:(IKAppContext *)arg1;
@end

@protocol IKAppDocumentDelegate <NSObject>
- (void)documentDidUpdate:(IKAppDocument *)arg1;
- (void)documentNeedsUpdate:(IKAppDocument *)arg1;

@optional
- (NSArray *)impressionableViewElementsForDocument:(IKAppDocument *)arg1;
- (void)documentScrollToTop:(IKAppDocument *)arg1;
- (void)document:(IKAppDocument *)arg1 runTestWithName:(NSString *)arg2 options:(NSDictionary *)arg3;
@end

@protocol IKAppNavigationController <NSObject>
- (NSArray *)documents;
- (void)removeDocument:(IKAppDocument *)arg1;
- (void)popToRootDocument;
- (void)popToDocument:(IKAppDocument *)arg1;
- (void)popDocument;
- (void)replaceDocument:(IKAppDocument *)arg1 withDocument:(IKAppDocument *)arg2 options:(NSDictionary *)arg3;
- (void)insertDocument:(IKAppDocument *)arg1 beforeDocument:(IKAppDocument *)arg2 options:(NSDictionary *)arg3;
- (void)pushDocument:(IKAppDocument *)arg1 options:(NSDictionary *)arg2;

@optional
- (IKJSNavigationDocument *)navigationDocumentForDocument:(IKAppDocument *)arg1 inContext:(JSContext *)arg2;
- (void)clear;
@end

@protocol IKApplication <NSObject>
- (id <IKAppDataStoring>)vendorStorage;
- (id <IKAppDataStoring>)localStorage;
- (NSString *)vendorIdentifier;
- (NSString *)appIdentifier;
- (NSURL *)appJSURL;
- (_Bool)shouldIgnoreJSValidation;

@optional
- (IKAppDocument *)activeDocument;
- (NSDictionary *)appLaunchParams;
- (_Bool)appIsTrusted;
@end

@protocol IKJSITunesStore <JSExport>
@property(retain, nonatomic) id cookie;
@property(retain, nonatomic) NSString *cookieURL;
@property(retain, nonatomic) NSString *storefront;
@property(readonly, nonatomic) NSString *networkConnectionType;
@property(readonly, nonatomic) NSString *userAgent;
@property(readonly, nonatomic) NSDictionary *accountInfo;
@property(readonly, nonatomic) NSString *DSID;
- (void)signOut;
- (void)authenticate:(NSDictionary *)arg1:(JSValue *)arg2;
- (void)evaluateScripts:(NSArray *)arg1:(JSValue *)arg2;
- (void)loadStoreContent:(NSDictionary *)arg1:(JSValue *)arg2;
- (void)clearCookies;
- (void)flushUnreportedEvents;
- (void)recordEvent:(NSString *)arg1:(NSDictionary *)arg2;
- (id)makeStoreXMLHttpRequest;
- (void)invalidateBag;
- (JSValue *)getBag;
@end

@protocol JSExport
@end

@protocol MPAVRoutingControllerDelegate <NSObject>

@optional
- (void)routingController:(MPAVRoutingController *)arg1 didFailToPickRouteWithError:(NSError *)arg2;
- (void)routingControllerExternalScreenTypeDidChange:(MPAVRoutingController *)arg1;
- (void)routingControllerAvailableRoutesDidChange:(MPAVRoutingController *)arg1;
@end

@protocol MPDetailScrubControllerDelegate <NSObject>

@optional
- (void)detailScrubController:(MPDetailScrubController *)arg1 didChangeScrubSpeed:(long long)arg2;
- (void)detailScrubController:(MPDetailScrubController *)arg1 didChangeValue:(float)arg2;
- (void)detailScrubControllerDidEndScrubbing:(MPDetailScrubController *)arg1;
- (void)detailScrubControllerDidBeginScrubbing:(MPDetailScrubController *)arg1;
@end

@protocol MPDetailSliderDelegate <NSObject>

@optional
- (void)detailSlider:(MPDetailSlider *)arg1 didChangeScrubSpeed:(long long)arg2;
- (void)detailSlider:(MPDetailSlider *)arg1 didChangeValue:(float)arg2;
- (void)detailSliderTrackingDidCancel:(MPDetailSlider *)arg1;
- (void)detailSliderTrackingDidEnd:(MPDetailSlider *)arg1;
- (void)detailSliderTrackingDidBegin:(MPDetailSlider *)arg1;
@end

@protocol MPDetailedScrubbing <NSObject>
- (struct CGRect)thumbHitRect;
- (float)maximumValue;
- (float)minimumValue;
- (float)value;
@end

@protocol MPPlaybackControlsDelegate <NSObject>

@optional
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldDisableMailPodcastLinkButtonForItem:(MPAVItem *)arg2;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldHideMailPodcastLinkButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlay:(MPPlaybackControlsView *)arg1 didClickMailPodcastLinkButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlayDetailSliderInstructionOverlayWillHide:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlayDetailSliderInstructionOverlayWillShow:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlay:(MPPlaybackControlsView *)arg1 detailSliderTrackingDidChangeScrubSpeed:(long long)arg2;
- (void)controlsOverlayDetailSliderTrackingDidEnd:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlayDetailSliderTrackingDidBegin:(MPPlaybackControlsView *)arg1;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldUseDetailScrubberForItem:(MPAVItem *)arg2;
- (unsigned long long)controlsOverlay:(MPPlaybackControlsView *)arg1 playbackSpeedForItem:(MPAVItem *)arg2;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldDisablePlaybackSpeedButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlayDidClickPlaybackSpeedButton:(MPPlaybackControlsView *)arg1;
- (_Bool)controlsOverlay:(MPPlaybackControlsView *)arg1 shouldDisableFastFowardAndRewindButtonForItem:(MPAVItem *)arg2;
- (void)controlsOverlayDidClickFastForwardButton:(MPPlaybackControlsView *)arg1;
- (void)controlsOverlayDidClickRewindButton:(MPPlaybackControlsView *)arg1;
- (unsigned long long)shuffleTypeForPlaybackControls:(MPPlaybackControlsView *)arg1;
- (unsigned long long)repeatTypeForPlaybackControls:(MPPlaybackControlsView *)arg1;
- (_Bool)hideGeniusButtonForPlaybackControls:(MPPlaybackControlsView *)arg1;
- (_Bool)playbackControlsScrubberShouldDisplaySingleChapters:(MPPlaybackControlsView *)arg1;
- (_Bool)playbackControlsDidTapGeniusButton:(MPPlaybackControlsView *)arg1;
- (_Bool)playbackControls:(MPPlaybackControlsView *)arg1 changedShuffleType:(unsigned long long)arg2;
- (_Bool)playbackControls:(MPPlaybackControlsView *)arg1 changedRepeatType:(unsigned long long)arg2;
@end

@protocol MPStoreDownloadManagerObserver <NSObject>

@optional
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadPurchaseDidFinish:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadDidProgress:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 downloadDidFinish:(MPStoreDownload *)arg2;
- (void)downloadManager:(MPStoreDownloadManager *)arg1 didAddDownloads:(NSArray *)arg2 removeDownloads:(NSArray *)arg3;
@end

@protocol MPTransportControlsTarget <NSObject>

@optional
- (void)transportControlsDidResize:(MPTransportControls *)arg1;
- (_Bool)transportControls:(MPTransportControls *)arg1 tappedButtonPart:(unsigned long long)arg2;
- (_Bool)transportControls:(MPTransportControls *)arg1 releasedHeldButtonPart:(unsigned long long)arg2;
- (_Bool)transportControls:(MPTransportControls *)arg1 heldButtonPart:(unsigned long long)arg2;
@end

@protocol MPUCZCollectionViewControllerDelegate <NSObject>
- (struct CGSize)maximumImageSize;
- (double)imageAspectRatio;

@optional
- (void)collectionViewController:(MPUCZCollectionViewController *)arg1 didSelectCell:(UICollectionViewCell *)arg2 atIndexPath:(NSIndexPath *)arg3;
@end

@protocol MPUChronologicalProgressViewDelegate <NSObject>

@optional
- (void)progressView:(MPUChronologicalProgressView *)arg1 didScrubToCurrentTime:(double)arg2;
- (void)progressViewDidEndScrubbing:(MPUChronologicalProgressView *)arg1;
- (void)progressViewDidBeginScrubbing:(MPUChronologicalProgressView *)arg1;
@end

@protocol MPUContentSizeCategoryChanging <NSObject>

@optional
- (void)updateTextForContentSizeCategory:(NSString *)arg1;
@end

@protocol MPUExtrasCarouselCollectionViewCell <MPUExtrasZoomingImageTransitionParticipant>
- (UIImage *)thumbnailImage;
- (NSString *)descriptionTextStyle;
- (NSString *)subtitleTextStyle;
- (NSString *)titleTextStyle;
- (void)setItemIndex:(unsigned long long)arg1;
- (unsigned long long)itemIndex;
- (void)setZoomingImageTransitionIdentifier:(NSString *)arg1;
- (void)setAllowsPinchingThumbnailImageForInteractiveZoomingImageTransition:(_Bool)arg1;
- (void)setDescriptionText:(NSAttributedString *)arg1;
- (void)setSubtitleText:(NSAttributedString *)arg1;
- (void)setTitleText:(NSAttributedString *)arg1;
- (void)setThumbnailOverlayImage:(UIImage *)arg1 position:(unsigned long long)arg2;
- (void)setThumbnailImageAccessibilityText:(NSString *)arg1;
- (void)setThumbnailImagePlaceholder:(UIImage *)arg1;
- (void)setThumbnailBorderColor:(UIColor *)arg1;
- (void)setThumbnailImage:(UIImage *)arg1;
- (void)setThumbnailMaxSize:(struct CGSize)arg1;
@end

@protocol MPUExtrasCarouselCollectionViewDelegate <UICollectionViewDelegate>

@optional
- (void)subviewsDidChangeForCarouselCollectionView:(MPUExtrasCarouselCollectionView *)arg1;
@end

@protocol MPUExtrasCarouselCollectionViewLayout
- (double)itemWidth;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1;
- (unsigned long long)indexOfVisibleItem;
@end

@protocol MPUExtrasCarouselViewControllerDataSource
- (unsigned long long)carouselSize;
- (void)carouselViewController:(MPUExtrasCarouselViewController *)arg1 configureCarouselCollectionViewCell:(id <MPUExtrasCarouselCollectionViewCell>)arg2 forItemAtIndex:(unsigned long long)arg3 withThumbnailImageContainerSize:(struct CGSize)arg4;
- (unsigned long long)numberOfItemsInCarouselViewController:(MPUExtrasCarouselViewController *)arg1;
@end

@protocol MPUExtrasCarouselViewControllerDelegate <NSObject>

@optional
- (void)carouselViewController:(MPUExtrasCarouselViewController *)arg1 didSelectItemAtIndex:(unsigned long long)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)carouselViewController:(MPUExtrasCarouselViewController *)arg1 didHighlightItemAtIndex:(unsigned long long)arg2;
@end

@protocol MPUExtrasImageBrowserViewControllerDataSource <NSObject>
- (void)imageBrowserViewController:(MPUExtrasImageBrowserViewController *)arg1 loadDescriptionAtIndex:(unsigned long long)arg2 withCompletionHandler:(void (^)(NSAttributedString *))arg3;
- (void)imageBrowserViewController:(MPUExtrasImageBrowserViewController *)arg1 loadSubtitleAtIndex:(unsigned long long)arg2 withCompletionHandler:(void (^)(NSAttributedString *))arg3;
- (void)imageBrowserViewController:(MPUExtrasImageBrowserViewController *)arg1 loadTitleAtIndex:(unsigned long long)arg2 withCompletionHandler:(void (^)(NSAttributedString *))arg3;
- (void)imageBrowserViewController:(MPUExtrasImageBrowserViewController *)arg1 loadImageAtIndex:(unsigned long long)arg2 withCompletionHandler:(void (^)(UIImage *))arg3;
- (unsigned long long)numberOfImagesForBrowserViewController:(MPUExtrasImageBrowserViewController *)arg1;
@end

@protocol MPUExtrasJSITunesStore <JSExport>
- (void)loadStoreURL:(NSString *)arg1 playOnLaunch:(JSValue *)arg2;

@optional
- (void)loadStoreURL:(NSString *)arg1 playOnLaunch:(JSValue *)arg2 __JS_EXPORT_AS__loadStoreURL:(id)arg3;
@end

@protocol MPUExtrasLoadingViewDelegate <NSObject>
- (void)loadingView:(MPUExtrasLoadingView *)arg1 documentDidUpdate:(IKAppDocument *)arg2 options:(NSDictionary *)arg3;
@end

@protocol MPUExtrasMainMenuSectionMetricsDataSource <NSObject>
- (struct CGSize)sectionMetrics:(MPUExtrasMainMenuSectionMetrics *)arg1 sizeForItemAtIndex:(long long)arg2 withFontDescriptor:(UIFontDescriptor *)arg3;
- (long long)numberOfItemsForSectionMetrics:(MPUExtrasMainMenuSectionMetrics *)arg1;
@end

@protocol MPUExtrasNavigationAnimationControllerProvider <NSObject>
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForNavigationOperation:(long long)arg1 fromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
@end

@protocol MPUExtrasOptionallyInteractiveAnimationController <NSObject>
- (_Bool)isInteractive;
@end

@protocol MPUExtrasPlaybackDelegate <NSObject>
- (void)extrasRequestReloadWithContext:(MPPlaybackContext *)arg1;
- (void)extrasRequestsPlaybackStop;
- (void)extrasRequestsMediaPlayback:(NSArray *)arg1 isBackground:(_Bool)arg2;
@end

@protocol MPUExtrasSlideshowViewControllerDataSource <NSObject>
- (void)slideshowViewController:(MPUExtrasSlideshowViewController *)arg1 loadImageAtIndex:(unsigned long long)arg2 withCompletionHandler:(void (^)(UIImage *))arg3;
- (unsigned long long)numberOfImagesForSlideshowViewController:(MPUExtrasSlideshowViewController *)arg1;
@end

@protocol MPUExtrasZoomingImageInteractiveTransitionSource <NSObject>
- (void)handlePinchGestureForZoomingImageInteractiveTransitionWithContext:(MPUExtrasZoomingImageInteractiveTransitionSourceContext *)arg1;
@end

@protocol MPUExtrasZoomingImageTransitionParticipant <NSObject>
- (void)finalizeZoomingImageTransitionWithContext:(MPUExtrasZoomingImageTransitionContext *)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(MPUExtrasZoomingImageTransitionContext *)arg1;
- (void)prepareZoomingImageTransitionWithContext:(MPUExtrasZoomingImageTransitionContext *)arg1;
@end

@protocol MPUInsetProxyScrollViewDelegate <UIScrollViewDelegate>
- (void)insetProxyScrollViewScrollIndicatorInsetsDidChange:(MPUInsetProxyScrollView *)arg1;
- (void)insetProxyScrollViewContentInsetDidChange:(MPUInsetProxyScrollView *)arg1;
@end

@protocol MPUMediaControlsTitlesViewDelegate <NSObject>
- (void)mediaControlsTitlesViewWasTapped:(MPUMediaControlsTitlesView *)arg1;
@end

@protocol MPUMiniPlayerActionsViewControllerDelegate <NSObject>

@optional
- (void)miniPlayerActionsViewController:(MPUMiniPlayerActionsViewController *)arg1 didSelectAction:(long long)arg2;
@end

@protocol MPUNowPlayingDelegate <NSObject>

@optional
- (void)nowPlayingController:(MPUNowPlayingController *)arg1 nowPlayingApplicationDidChange:(NSString *)arg2;
- (void)nowPlayingController:(MPUNowPlayingController *)arg1 elapsedTimeDidChange:(double)arg2;
- (void)nowPlayingController:(MPUNowPlayingController *)arg1 playbackStateDidChange:(_Bool)arg2;
- (void)nowPlayingController:(MPUNowPlayingController *)arg1 nowPlayingInfoDidChange:(NSDictionary *)arg2;
- (void)nowPlayingControllerDidStopListeningForNotifications:(MPUNowPlayingController *)arg1;
- (void)nowPlayingControllerDidBeginListeningForNotifications:(MPUNowPlayingController *)arg1;
@end

@protocol MPUNowPlayingPlaybackControlsViewDelegate <MPPlaybackControlsDelegate>

@optional
- (void)playbackControls:(MPUNowPlayingPlaybackControlsView *)arg1 didSelectCreateAction:(long long)arg2;
@end

@protocol MPUNowPlayingTransportControlsDelegate <NSObject>

@optional
- (void)transportControlsDidLayoutSubviews:(MPUNowPlayingTransportControls *)arg1;
@end

@protocol MPURatingControlDelegate <NSObject>
- (void)ratingDidChangeForRatingControl:(MPURatingControl *)arg1;
@end

@protocol MPURemoteViewControllerPresentation <NSObject>
- (void)remoteViewControllerDidFinish;
@end

@protocol MPUSystemMediaControlsViewDelegate <NSObject>

@optional
- (void)mediaControlsViewDidCancelBuyAlbumDownloadAction:(MPUSystemMediaControlsView *)arg1;
- (void)mediaControlsViewDidConfirmBuyAlbumAction:(MPUSystemMediaControlsView *)arg1;
- (void)mediaControlsViewDidCancelBuyTrackDownloadAction:(MPUSystemMediaControlsView *)arg1;
- (void)mediaControlsViewDidConfirmBuyTrackAction:(MPUSystemMediaControlsView *)arg1;
@end

@protocol MPUTransportButton <NSObject>
@property(readonly, nonatomic) MPUTransportButtonEventHandler *transportButtonEventHandler;
- (void)applyTransportButtonAttributes:(MPUTransportButtonAttributes *)arg1;
@end

@protocol MPUTransportControlsViewDelegate <NSObject>
- (UIImage *)transportControlsView:(MPUTransportControlsView *)arg1 imageForTransportButtonWithControlType:(long long)arg2;

@optional
- (struct CGSize)transportControlsView:(MPUTransportControlsView *)arg1 adjustedMaximumTransportButtonSizeWithProposedSize:(struct CGSize)arg2;
- (struct CGRect)transportControlsView:(MPUTransportControlsView *)arg1 adjustedFrameOfTransportButtonWithControlType:(long long)arg2 proposedFrame:(struct CGRect)arg3;
- (void)transportControlsView:(MPUTransportControlsView *)arg1 prepareTransportButton:(UIButton<MPUTransportButton> *)arg2;
- (void)transportControlsView:(MPUTransportControlsView *)arg1 tapOnAccessoryButtonType:(long long)arg2;
- (void)transportControlsView:(MPUTransportControlsView *)arg1 longPressEndOnControlType:(long long)arg2;
- (void)transportControlsView:(MPUTransportControlsView *)arg1 longPressBeginOnControlType:(long long)arg2;
- (void)transportControlsView:(MPUTransportControlsView *)arg1 tapOnControlType:(long long)arg2;
@end

@protocol MPVideoOverlayDelegate <NSObject>

@optional
- (_Bool)overlayShouldAcceptSkipBackwardEvent:(UIView<MPVideoOverlay> *)arg1;
- (_Bool)overlayShouldAcceptSkipForwardEvent:(UIView<MPVideoOverlay> *)arg1;
- (double)overlay:(UIView<MPVideoOverlay> *)arg1 interpretDuration:(double)arg2;
- (double)overlay:(UIView<MPVideoOverlay> *)arg1 interpretCurrentTime:(double)arg2;
- (void)overlay:(UIView<MPVideoOverlay> *)arg1 didEndUserEvent:(long long)arg2;
- (void)overlay:(UIView<MPVideoOverlay> *)arg1 didCancelUserEvent:(long long)arg2;
- (void)overlay:(UIView<MPVideoOverlay> *)arg1 didBeginUserEvent:(long long)arg2;
- (void)overlayTappedFullscreenButton:(UIView<MPVideoOverlay> *)arg1;
- (void)overlayDidDismissAlternateTracksPopover:(UIView<MPVideoOverlay> *)arg1;
- (void)overlayTappedScaleModeButton:(UIView<MPVideoOverlay> *)arg1;
- (void)overlayDidEndScrubbing:(UIView<MPVideoOverlay> *)arg1;
- (void)overlayDidBeginScrubbing:(UIView<MPVideoOverlay> *)arg1;
- (void)overlayTappedBackButton:(UIView<MPVideoOverlay> *)arg1;
@end

@protocol MPVolumeControllerDelegate <NSObject>

@optional
- (void)volumeController:(MPVolumeController *)arg1 EUVolumeLimitEnforcedDidChange:(_Bool)arg2;
- (void)volumeController:(MPVolumeController *)arg1 EUVolumeLimitDidChange:(float)arg2;
- (void)volumeController:(MPVolumeController *)arg1 mutedStateDidChange:(_Bool)arg2;
- (void)volumeController:(MPVolumeController *)arg1 volumeWarningStateDidChange:(long long)arg2;
- (void)volumeController:(MPVolumeController *)arg1 volumeValueDidChange:(float)arg2;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol RUTrackActionsDelegate <NSObject>

@optional
- (NSString *)trackActioningObject:(id <RUTrackActioning>)arg1 localizedTitleForAction:(long long)arg2;
- (void)trackActioningObjectDidChangeContentSize:(id <RUTrackActioning>)arg1;
- (void)trackActioningObject:(id <RUTrackActioning>)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
@end

@protocol SBUIControlCenterButtonDelegate <NSObject>
- (void)buttonTapped:(SBUIControlCenterButton *)arg1;

@optional
- (void)button:(SBUIControlCenterButton *)arg1 didChangeState:(long long)arg2;
@end

@protocol SBUIControlCenterControlObserver <NSObject>

@optional
- (void)controlConfigurationDidChangeForState:(long long)arg1;
- (void)controlAppearanceDidChangeForState:(long long)arg1;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol SKStoreProductViewControllerDelegatePrivate <SKStoreProductViewControllerDelegate>

@optional
- (void)productViewController:(SKStoreProductViewController *)arg1 presentProductWithRequest:(SKStorePageRequest *)arg2 animated:(_Bool)arg3;
- (void)productViewController:(SKStoreProductViewController *)arg1 didFinishWithResult:(long long)arg2;
@end

@protocol SKUIItemOfferButtonDelegate <NSObject>

@optional
- (void)itemOfferButtonWillAnimateTransition:(SKUIItemOfferButton *)arg1;
- (void)itemOfferButtonDidAnimateTransition:(SKUIItemOfferButton *)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIModalItemDelegate <NSObject>

@optional
- (_Bool)modalItem:(_UIModalItem *)arg1 shouldDismissForButtonAtIndex:(long long)arg2;
- (_Bool)modalItemShouldEnableFirstOtherButton:(_UIModalItem *)arg1;
- (void)modalItem:(_UIModalItem *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)modalItem:(_UIModalItem *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentModalItem:(_UIModalItem *)arg1;
- (void)willPresentModalItem:(_UIModalItem *)arg1;
@end

@protocol UINavigationBarDelegate <UIBarPositioningDelegate>

@optional
- (void)navigationBar:(UINavigationBar *)arg1 didPopItem:(UINavigationItem *)arg2;
- (_Bool)navigationBar:(UINavigationBar *)arg1 shouldPopItem:(UINavigationItem *)arg2;
- (void)navigationBar:(UINavigationBar *)arg1 didPushItem:(UINavigationItem *)arg2;
- (_Bool)navigationBar:(UINavigationBar *)arg1 shouldPushItem:(UINavigationItem *)arg2;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPageViewControllerDataSource <NSObject>
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerAfterViewController:(UIViewController *)arg2;
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerBeforeViewController:(UIViewController *)arg2;

@optional
- (long long)presentationIndexForPageViewController:(UIPageViewController *)arg1;
- (long long)presentationCountForPageViewController:(UIPageViewController *)arg1;
@end

@protocol UIPageViewControllerDelegate <NSObject>

@optional
- (long long)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)arg1;
- (unsigned long long)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)arg1;
- (long long)pageViewController:(UIPageViewController *)arg1 spineLocationForInterfaceOrientation:(long long)arg2;
- (void)pageViewController:(UIPageViewController *)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(NSArray *)arg3 transitionCompleted:(_Bool)arg4;
- (void)pageViewController:(UIPageViewController *)arg1 willTransitionToViewControllers:(NSArray *)arg2;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerInteractiveTransitioning <NSObject>
- (void)startInteractiveTransition:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (long long)completionCurve;
- (double)completionSpeed;
@end

@protocol UIViewControllerRestoration
+ (UIViewController *)viewControllerWithRestorationIdentifierPath:(NSArray *)arg1 coder:(NSCoder *)arg2;
@end

@protocol _MPUSliderScrubForwarding
@property(nonatomic) __weak MPDetailScrubController *scrubController;
@end

@interface IKImageElement (MPArtworkCatalog)
- (id)artworkCatalog;
@end

@interface IKImageElement (MPUExtrasAdditions)
- (id)resourceImage;
- (long long)accessoryType;
- (id)cachePath;
- (id)bestURL;
@end

@interface IKTextElement (NSAttributedString)
- (id)textAttributes;
@end

@interface IKViewElementStyle (NSLayoutConstraint)
+ (id)positionConstraintsForView:(id)arg1 insets:(struct UIEdgeInsets)arg2 position:(unsigned long long)arg3;
@end

@interface MPAVController (MPURTCReportingControllerAdditions)
- (void)setRTCReportingFlags:(unsigned int)arg1;
- (unsigned int)RTCReportingFlags;
@end

@interface MPUMediaDownloadObserver : NSObject
{
    CDUnknownBlockType _progressHandler;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _hasPendingProgressHandlerExecution;
    _Bool _invalidated;
    long long _pid;
    _Bool _paused;
}

+ (id)sharedITunesStoreDownloadManager;
+ (id)newObserverForStoreID:(long long)arg1;
+ (id)newObserverForMediaCollection:(id)arg1;
+ (id)newObserverForMediaItem:(id)arg1;
+ (id)newObserverForMediaItemPersistentID:(unsigned long long)arg1 isPendingSync:(_Bool)arg2 storeID:(long long)arg3;
@property(readonly, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(readonly, nonatomic) long long persistentID; // @synthesize persistentID=_pid;
- (void).cxx_destruct;
@property(readonly, nonatomic) double rawDownloadTotal;
@property(readonly, nonatomic) double rawDownloadProgress;
@property(readonly, nonatomic, getter=isPurchasing) _Bool purchasing;
- (void)invalidate;
- (void)_onQueue_invalidate;
@property(copy) CDUnknownBlockType progressHandler;
@property(readonly, getter=isRestoreDownload) _Bool restoreDownload;
- (void)resumeDownload;
- (void)pauseDownload;
- (void)cancelDownload;
@property(readonly) _Bool canCancel;
@property(readonly, getter=isCurrentlyPlayable) _Bool currentlyPlayable;
@property(readonly) double downloadProgress;
- (void)_onQueue_setShouldFireProgressHandler;
- (void)dealloc;
- (id)init;

@end

@interface MPMediaCollectionDownloadObserver : MPUMediaDownloadObserver
{
    NSMutableArray *_downloadObservers;
    _Bool _callingProgressHandler;
}

- (void).cxx_destruct;
- (void)_callProgressHandler;
- (_Bool)isPurchasing;
- (_Bool)isCurrentlyPlayable;
- (void)invalidate;
- (double)downloadProgress;
- (unsigned long long)downloadsCount;
- (void)dealloc;
- (id)initWithCollection:(id)arg1;

@end

@interface MPMediaItem (MPUAdditions)
- (id)MPU_libraryLinkURL;
- (id)MPU_directStoreURL;
- (id)MPU_containerLibraryLinkURL;
- (id)MPU_libraryLinkURL:(_Bool)arg1;
- (id)MPU_libraryLinkPlaylistName;
- (id)MPU_libraryLinkKind;
- (id)MPU_libraryLinkArtist;
@end

@interface MPUAdaptiveCollectionViewController : MPUDataSourceViewController <MPUInsetProxyScrollViewDelegate>
{
    struct UIEdgeInsets _contentInsetAdditions;
    struct UIEdgeInsets _scrollIndicatorInsetsAdditions;
    MPUInsetProxyScrollView *_insetProxyScrollView;
    NSMutableDictionary *_sizeClassToClassMap;
}

@property(retain, nonatomic) NSMutableDictionary *sizeClassToClassMap; // @synthesize sizeClassToClassMap=_sizeClassToClassMap;
- (void).cxx_destruct;
- (void)_updateViewControllerIfNecessary;
- (void)_restoreTopVisibleIndexPath:(id)arg1;
- (id)_indexPathOfTopVisibleItem;
- (id)_childDataSourceViewController;
- (void)_applyNewScrollIndicatorInsetsAdditions:(struct UIEdgeInsets)arg1 withExistingScrollIndicatorInsetsAdditions:(struct UIEdgeInsets)arg2 toScrollView:(id)arg3;
- (void)_applyNewContentInsetAdditions:(struct UIEdgeInsets)arg1 withExistingContentInsetAdditions:(struct UIEdgeInsets)arg2 toScrollView:(id)arg3;
- (void)insetProxyScrollViewScrollIndicatorInsetsDidChange:(id)arg1;
- (void)insetProxyScrollViewContentInsetDidChange:(id)arg1;
- (void)dataSourceDidInvalidate;
- (void)reloadData;
- (void)setViewControllerClass:(Class)arg1 forHorizontalSizeClass:(long long)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (id)contentScrollView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUAlertViewDelegateFacade : NSObject <UIAlertViewDelegate>
{
    CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUApplicationDefaults : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSString *_applicationIdentifier;
    NSDictionary *_defaultValues;
}

- (void).cxx_destruct;
- (void)_setObject:(id)arg1 forKey:(id)arg2;
- (id)_objectForKey:(id)arg1 expectedTypeID:(unsigned long long)arg2;
- (void)_defaultsDidChange;
- (id)_defaultsDidChangeNotificationName;
- (struct __CFString *)_defaultsDomain;
- (void)removeValueForKey:(id)arg1;
- (void)setArray:(id)arg1 forKey:(id)arg2;
- (id)arrayForKey:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (_Bool)boolForKey:(id)arg1;
- (void)registerDefaults:(id)arg1;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1;

@end

@interface MPUArtworkView : UIImageView
{
    NSLayoutConstraint *_aspectConstraint;
    UIImage *_externalImage;
    UIView *_highlightView;
    _Bool _automaticallyApplyAspectConstraints;
    _Bool _dimsWhenHighlighted;
    _Bool _forcesAnimatedUnhighlighting;
    _Bool _displayingPlaceholder;
    UIImage *_placeholderImage;
}

@property(nonatomic, getter=isDisplayingPlaceholder) _Bool displayingPlaceholder; // @synthesize displayingPlaceholder=_displayingPlaceholder;
@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(nonatomic) _Bool forcesAnimatedUnhighlighting; // @synthesize forcesAnimatedUnhighlighting=_forcesAnimatedUnhighlighting;
@property(nonatomic) _Bool dimsWhenHighlighted; // @synthesize dimsWhenHighlighted=_dimsWhenHighlighted;
@property(nonatomic) _Bool automaticallyApplyAspectConstraints; // @synthesize automaticallyApplyAspectConstraints=_automaticallyApplyAspectConstraints;
@property(readonly, nonatomic) UIImage *_externalImage; // @synthesize _externalImage;
- (void).cxx_destruct;
- (void)_updateHighlightViewAnimated:(_Bool)arg1;
- (_Bool)_shouldShowHighlightView;
- (void)_setPlaceholderHidden:(_Bool)arg1;
- (void)_imageDidChange;
@property(nonatomic, getter=_aspectConstraintMultiplier, setter=_setAspectConstraintMultiplier:) double aspectConstraintMultiplier;
@property(readonly, nonatomic) _Bool shouldDisplayPlaceholder;
- (void)stopAnimating;
- (void)startAnimating;
- (void)setImage:(id)arg1;
- (void)setHighlightedAnimationImages:(id)arg1;
- (void)setHighlightedImage:(id)arg1;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (void)updateConstraints;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithImage:(id)arg1;

@end

@interface MPUAutolayoutTableViewCell : UITableViewCell
{
    UIView *_contentLayoutGuide;
    UIView *_labelLayoutGuide;
    UIView *_artworkLayoutGuide;
    UILabel *_textLabel;
    UILabel *_detailTextLabel;
    MPUArtworkView *_artworkView;
    UIView *_expansionView;
    NSArray *_layoutGuideConstraints;
    NSArray *_labelHorizontalLayoutConstraints;
    NSArray *_labelVerticalLayoutConstraints;
    NSArray *_artworkLayoutConstraints;
    NSArray *_expansionConstraints;
    _Bool _expanded;
    _Bool _alignsSeparatorInsetsWithLabels;
    _Bool _skipSeparatorInsetUpdates;
    NSString *_textLabelFontStyle;
    NSString *_detailTextLabelFontStyle;
    double _detailTextLabelFirstLineLeading;
    double _artworkMaxWidth;
    struct UIEdgeInsets _labelContentViewInsets;
    struct UIEdgeInsets _artworkInsets;
}

+ (Class)artworkViewClass;
+ (Class)labelClass;
@property(nonatomic) _Bool skipSeparatorInsetUpdates; // @synthesize skipSeparatorInsetUpdates=_skipSeparatorInsetUpdates;
@property(nonatomic) double artworkMaxWidth; // @synthesize artworkMaxWidth=_artworkMaxWidth;
@property(nonatomic) struct UIEdgeInsets artworkInsets; // @synthesize artworkInsets=_artworkInsets;
@property(nonatomic) struct UIEdgeInsets labelContentViewInsets; // @synthesize labelContentViewInsets=_labelContentViewInsets;
@property(nonatomic) _Bool alignsSeparatorInsetsWithLabels; // @synthesize alignsSeparatorInsetsWithLabels=_alignsSeparatorInsetsWithLabels;
@property(nonatomic) double detailTextLabelFirstLineLeading; // @synthesize detailTextLabelFirstLineLeading=_detailTextLabelFirstLineLeading;
@property(copy, nonatomic) NSString *detailTextLabelFontStyle; // @synthesize detailTextLabelFontStyle=_detailTextLabelFontStyle;
@property(copy, nonatomic) NSString *textLabelFontStyle; // @synthesize textLabelFontStyle=_textLabelFontStyle;
@property(nonatomic, getter=isExpanded) _Bool expanded; // @synthesize expanded=_expanded;
@property(readonly, nonatomic) id artworkLayoutGuide; // @synthesize artworkLayoutGuide=_artworkLayoutGuide;
@property(readonly, nonatomic) id labelLayoutGuide; // @synthesize labelLayoutGuide=_labelLayoutGuide;
@property(readonly, nonatomic) id contentLayoutGuide; // @synthesize contentLayoutGuide=_contentLayoutGuide;
- (void).cxx_destruct;
- (void)_updateVisibleViews;
- (void)_invalidateLabelConstraints;
- (void)_invalidateExpansionConstraints;
- (void)_invalidateArtworkConstraints;
- (id)viewsToCenterVerticallyInContentView;
- (struct UIEdgeInsets)separatorInsetWhenExpanded:(_Bool)arg1;
@property(readonly, nonatomic) UILabel *detailTextLabel;
@property(readonly, nonatomic) UILabel *textLabel;
@property(readonly, nonatomic) UIView *expansionView;
@property(readonly, nonatomic) MPUArtworkView *artworkView;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)updateConstraints;
- (void)updateConstraintsIfNeeded;
- (void)setNeedsUpdateConstraints;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface MPUBackdropContentViewController : UIViewController
{
    _UIBackdropView *_backdropView;
    MPUPinningView *_pinningView;
    long long _backdropViewPrivateStyle;
    UIView *_backgroundView;
    UIViewController *_contentViewController;
}

@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) long long backdropViewPrivateStyle; // @synthesize backdropViewPrivateStyle=_backdropViewPrivateStyle;
- (void).cxx_destruct;
- (void)_embedBackgroundView;
- (void)viewDidLoad;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (long long)preferredInterfaceOrientationForPresentation;
- (id)initWithContentViewController:(id)arg1;

@end

@interface MPUCZCollectionView : UICollectionView
{
}

- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

@end

@interface MPUCZCollectionViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    MPUCZCollectionView *_collectionView;
    MPUDataSource *_dataSource;
    id <MPUCZCollectionViewControllerDelegate> _delegate;
    long long _coverCountPerColumn;
    struct CGSize _itemSize;
}

@property(nonatomic) long long coverCountPerColumn; // @synthesize coverCountPerColumn=_coverCountPerColumn;
@property(nonatomic) struct CGSize itemSize; // @synthesize itemSize=_itemSize;
@property(retain, nonatomic) MPUDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) id <MPUCZCollectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_collectionViewLayoutForColumnCount:(unsigned long long)arg1;
- (void)_beginPreloadingAlbums;
- (void)_dataSourceDidInvalidateNotification:(id)arg1;
- (void)reloadData;
- (struct CGSize)itemSizeForCoverCount:(unsigned long long)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)loadView;
@property(readonly, nonatomic) UICollectionView *collectionView;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUChronologicalProgressView : UIView <MPDetailScrubControllerDelegate, MPUContentSizeCategoryChanging>
{
    MPDetailScrubController *_scrubController;
    UISlider<MPDetailedScrubbing><_MPUSliderScrubForwarding> *_slider;
    UILabel *_currentTimeLabel;
    UILabel *_remainingTimeLabel;
    MPUNowPlayingIndicatorView *_indicatorView;
    NSString *_lastCurrentTimeString;
    NSString *_lastRemainingTimeString;
    double _lastDisplayedDuration;
    _Bool _alwaysLive;
    _Bool _showTimeLabels;
    _Bool _scrubbingEnabled;
    _Bool _showIsPlaying;
    id <MPUChronologicalProgressViewDelegate> _delegate;
    long long _style;
    long long _substyle;
    double _totalDuration;
    double _currentTime;
}

@property(nonatomic) _Bool showIsPlaying; // @synthesize showIsPlaying=_showIsPlaying;
@property(nonatomic) _Bool scrubbingEnabled; // @synthesize scrubbingEnabled=_scrubbingEnabled;
@property(nonatomic) _Bool showTimeLabels; // @synthesize showTimeLabels=_showTimeLabels;
@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) double totalDuration; // @synthesize totalDuration=_totalDuration;
@property(nonatomic) long long substyle; // @synthesize substyle=_substyle;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
@property(nonatomic) __weak id <MPUChronologicalProgressViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic, getter=isAlwaysLive) _Bool alwaysLive; // @synthesize alwaysLive=_alwaysLive;
- (void).cxx_destruct;
- (id)_stringForTime:(double)arg1 isTimeRemaining:(_Bool)arg2;
- (void)_updateTimeLabels;
- (float)_sliderNormalizedValueForTime:(double)arg1;
- (id)_createIndicatorViewWithStyle:(long long)arg1;
- (id)_createTimeLabelWithStyle:(long long)arg1;
- (id)_trackImage;
- (id)_thumbImage;
- (id)_timeLabelFont;
- (void)_internalSetCurrentTime:(double)arg1;
- (void)updateTextForContentSizeCategory:(id)arg1;
- (void)detailScrubController:(id)arg1 didChangeValue:(float)arg2;
- (void)detailScrubControllerDidEndScrubbing:(id)arg1;
- (void)detailScrubControllerDidBeginScrubbing:(id)arg1;
@property(readonly, nonatomic) struct CGRect trackRect;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUCollectionViewCell : UICollectionViewCell
{
    MPUSlantedTextPlaceholderArtworkView *_artworkView;
}

- (void).cxx_destruct;
- (void)setPlaceholderTitle:(id)arg1;
- (void)setPlaceholderSubtitle:(id)arg1;
- (void)setPlaceholderSize:(struct CGSize)arg1;
- (void)setArtworkImage:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUCollectionViewController : MPUDataSourceViewController <MPStoreDownloadManagerObserver, UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_collectionView;
}

+ (Class)invalidationContextClass;
- (void).cxx_destruct;
- (void)_updateVisibleCellsForDownloads:(id)arg1 updateAllCells:(_Bool)arg2;
- (id)_createCollectionViewLayout;
- (id)_createCollectionView;
- (id)reuseIdentifierForCellAtIndexPath:(id)arg1;
- (void)configureCell:(id)arg1 atIndexPath:(id)arg2 withEntity:(id)arg3 invalidationContext:(id)arg4;
@property(readonly, nonatomic) UICollectionView *collectionView;
- (long long)collectionView:(id)arg1 editingStyleForItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 canEditItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)downloadManager:(id)arg1 downloadPurchaseDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 downloadDidFinish:(id)arg2;
- (void)downloadManager:(id)arg1 didAddDownloads:(id)arg2 removeDownloads:(id)arg3;
- (void)reloadData;
- (id)contentScrollView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUCompletionFooterView : UITableViewHeaderFooterView <SKUIItemOfferButtonDelegate>
{
    UITapGestureRecognizer *_tapGestureRecognizer;
    _Bool _showsVariants;
    _Bool _purchasing;
    long long _style;
    id <MPUCompletionFooterViewDelegate> _delegate;
    NSString *_title;
    NSString *_completeTitleFormat;
    NSString *_completeSubtitleFormat;
    NSString *_completeMyCollectionTitle;
    NSString *_completionTotalFormat;
    MPStoreCompletionOffering *_completionOffering;
    long long _preferredVariant;
    MPUItemOfferButton *_itemOfferButton;
    UIView *_topSeparatorView;
    UIView *_bottomSeparatorView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UISegmentedControl *_variantSegmentedControl;
    struct UIEdgeInsets _contentInsets;
}

+ (double)defaultHeight;
@property(retain, nonatomic) UISegmentedControl *variantSegmentedControl; // @synthesize variantSegmentedControl=_variantSegmentedControl;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIView *bottomSeparatorView; // @synthesize bottomSeparatorView=_bottomSeparatorView;
@property(retain, nonatomic) UIView *topSeparatorView; // @synthesize topSeparatorView=_topSeparatorView;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(retain, nonatomic) MPUItemOfferButton *itemOfferButton; // @synthesize itemOfferButton=_itemOfferButton;
@property(nonatomic, getter=isPurchasing) _Bool purchasing; // @synthesize purchasing=_purchasing;
@property(nonatomic) _Bool showsVariants; // @synthesize showsVariants=_showsVariants;
@property(nonatomic) long long preferredVariant; // @synthesize preferredVariant=_preferredVariant;
@property(retain, nonatomic) MPStoreCompletionOffering *completionOffering; // @synthesize completionOffering=_completionOffering;
@property(copy, nonatomic) NSString *completionTotalFormat; // @synthesize completionTotalFormat=_completionTotalFormat;
@property(copy, nonatomic) NSString *completeMyCollectionTitle; // @synthesize completeMyCollectionTitle=_completeMyCollectionTitle;
@property(copy, nonatomic) NSString *completeSubtitleFormat; // @synthesize completeSubtitleFormat=_completeSubtitleFormat;
@property(copy, nonatomic) NSString *completeTitleFormat; // @synthesize completeTitleFormat=_completeTitleFormat;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) __weak id <MPUCompletionFooterViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (id)_createItemOfferButton;
- (void)_configureViewsForCompletionOffering;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)_handleTapGesture:(id)arg1;
- (void)_changedVariants:(id)arg1;
- (void)_buttonPurchaseAction:(id)arg1;
- (void)_buttonShowConfirmationAction:(id)arg1;
- (void)_buttonCancelConfirmationAction:(id)arg1;
- (void)layoutSubviews;
- (void)layoutSeparatorsWithInset:(struct UIEdgeInsets)arg1;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUCompletionQueryDataSource : MPUQueryDataSource
{
    NSMutableDictionary *_tokens;
    NSMutableDictionary *_completions;
    NSMutableSet *_overlayedSectionEntityPIDs;
    NSMutableDictionary *_statuses;
    NSMutableDictionary *_variants;
    _Bool _shouldShowCompletions;
    _Bool _shouldAutomaticallyLoadCompletions;
    id <MPUCompletionQueryDataSourceDelegate> _completionDelegate;
}

@property(nonatomic) __weak id <MPUCompletionQueryDataSourceDelegate> completionDelegate; // @synthesize completionDelegate=_completionDelegate;
@property(nonatomic) _Bool shouldAutomaticallyLoadCompletions; // @synthesize shouldAutomaticallyLoadCompletions=_shouldAutomaticallyLoadCompletions;
@property(nonatomic) _Bool shouldShowCompletions; // @synthesize shouldShowCompletions=_shouldShowCompletions;
- (void).cxx_destruct;
- (void)_setCompletion:(id)arg1 forSectionAtIndex:(long long)arg2;
- (void)_setToken:(unsigned long long)arg1 forSectionAtIndex:(long long)arg2;
- (long long)_tokenForSectionAtIndex:(long long)arg1;
- (long long)_pidForSectionAtIndex:(long long)arg1;
- (void)setVariant:(long long)arg1 forSectionAtIndex:(long long)arg2;
- (long long)variantForSectionAtIndex:(long long)arg1;
- (_Bool)hasVariantsForSectionAtIndex:(long long)arg1;
- (void)setCompletionOfferStatus:(long long)arg1 forSectionAtIndex:(long long)arg2;
- (long long)completionOfferStatusForSectionAtIndex:(long long)arg1;
- (_Bool)hasCompletionOfferForSectionAtIndex:(unsigned long long)arg1;
- (id)completionOfferingForSectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfSectionForCompletionOffering:(id)arg1;
- (id)sectionEntityWithoutOverlayAtIndex:(unsigned long long)arg1;
- (id)sectionEntityAtIndex:(unsigned long long)arg1;
- (_Bool)isShowingCompletionOverlayForSectionAtIndex:(unsigned long long)arg1;
- (void)removeAllCompletionOverlays;
- (void)removeOverlayCompletionForSectionAtIndex:(unsigned long long)arg1;
- (void)overlayCompletionForSectionAtIndex:(unsigned long long)arg1;
- (void)invalidate;
- (void)cancelCompletionOfferingWithToken:(unsigned long long)arg1;
- (void)loadCompletionOfferingForSectionAtIndex:(unsigned long long)arg1;
- (void)loadCompletionOfferings;
@property(readonly, nonatomic) _Bool shouldLoadCompletionArtwork;

@end

@interface MPUCoverMaskView : UIView
{
    struct CGRect _albumFrame;
}

@property(nonatomic) struct CGRect albumFrame; // @synthesize albumFrame=_albumFrame;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface MPUCoverZoomViewController : UIViewController <MPUCZCollectionViewControllerDelegate, UIGestureRecognizerDelegate>
{
    MPUDataSource *_dataSource;
    id <MPUCoverZoomViewControllerDelegate> _delegate;
    UIViewController *_detailViewController;
    double _animationStartTimeInterval;
    double _animationDuration;
    double _animationEndProgress;
    double _animationStartProgress;
    CADisplayLink *_animationTimer;
    MPUCZCollectionViewController *_collectionViewController;
    long long _coverCountPerColumn;
    MPUCoverMaskView *_maskView;
    double _pinchContentOffsetDelta;
    NSIndexPath *_pinchContentOffsetIndexPath;
    long long _pinchDirection;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    _Bool _pinching;
    CAMediaTimingFunction *_timingFunction;
    UIView *_transformView;
    MPUCZCollectionViewController *_transitionCollectionViewController;
    long long _transitionCoverCountPerColumn;
    struct CGSize _transitionEndItemSize;
    struct CGSize _transitionStartItemSize;
    double _transitionStartScale;
    struct CGAffineTransform _unzoomedAlbumViewTransform;
    _Bool _zoomed;
}

@property(nonatomic) __weak id <MPUCoverZoomViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateContentOffsetForCollectionView:(id)arg1;
- (void)_updateContentOffset;
- (void)_setTransitionProgress:(double)arg1;
- (void)_removeTransitionCollectionViewForEndProgress:(double)arg1;
- (unsigned long long)_minimumNumberOfRows;
- (unsigned long long)_maximumNumberOfRows;
- (void)_endTransitionAtProgress:(double)arg1 velocity:(double)arg2;
- (unsigned long long)_defaultNumberOfRows;
- (double)_collectionViewHeightForItemSize:(struct CGSize)arg1 coverCountPerColumn:(unsigned long long)arg2;
- (void)_beginTransitionForScale:(double)arg1;
- (void)_pinchAction:(id)arg1;
- (void)_displayLinkAction:(id)arg1;
- (void)detailViewControllerRequestsExit:(id)arg1;
- (struct CGSize)maximumImageSize;
- (double)imageAspectRatio;
- (void)collectionViewController:(id)arg1 didSelectCell:(id)arg2 atIndexPath:(id)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarUpdateAnimation;
- (void)loadView;
- (void)dealloc;
- (id)initWithDataSource:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUDownloadProgressIndicator : UIButton
{
    float _animatedStartValue;
    float _animatedValue;
    _Bool _animating;
    _Bool _canCancel;
    double _animationEndTime;
    double _animationStartTime;
    CADisplayLink *_displayLink;
    UIImageView *_centerImageView;
    _Bool _mpExternalHidden;
    _Bool _mpInternalHidden;
    long long _style;
    float _value;
}

+ (id)_stopImageForStyle:(long long)arg1;
+ (struct CGSize)_sizeForStyle:(long long)arg1;
+ (id)_nonstopImageForStyle:(long long)arg1;
+ (_Bool)_isStyleModernShimmer:(long long)arg1;
+ (void)_drawModernGradientInRect:(struct CGRect)arg1;
@property(nonatomic) float value; // @synthesize value=_value;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
@property(nonatomic) _Bool canCancel; // @synthesize canCancel=_canCancel;
- (void).cxx_destruct;
- (void)_setInternalHidden:(_Bool)arg1;
- (struct CGRect)_fillFrameForSize:(struct CGSize)arg1 inBounds:(struct CGRect)arg2;
- (struct CGRect)_centerImageViewFrame:(struct CGRect)arg1 inBounds:(struct CGRect)arg2 forStyle:(long long)arg3;
- (struct CGRect)_baseFrameForSize:(struct CGSize)arg1 inBounds:(struct CGRect)arg2;
- (void)_animateValueOnDisplayLink:(id)arg1;
- (void)updateFromObserver:(id)arg1 animated:(_Bool)arg2;
- (void)updateFromObserver:(id)arg1;
- (void)setValue:(float)arg1 animated:(_Bool)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1;

@end

@interface MPUExtrasActivityIndicator : UIView
{
    UILabel *_titleLabel;
    UIActivityIndicatorView *_spinner;
}

- (void).cxx_destruct;
- (void)setAlpha:(double)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithElement:(id)arg1;

@end

@interface MPUExtrasElementViewController : UIViewController
{
    MPUExtrasBackgroundViewController *_backgroundViewController;
    NSMapTable *_bannerButtonMap;
    _Bool _wide;
}

+ (id)_borderView;
@property(nonatomic, getter=isWide) _Bool wide; // @synthesize wide=_wide;
- (void).cxx_destruct;
- (void)_didActivateButtonWithItem:(id)arg1;
- (void)_prepareLayout;
- (id)_installBackdrop:(id)arg1;
- (void)_configureBannerWithElement:(id)arg1;
- (void)configureBackgroundWithElements:(id)arg1;
- (void)_startBackgroundAudio;
- (id)backgroundViewController;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (unsigned long long)extrasSize;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)init;

@end

@interface MPUExtrasViewElementViewController : MPUExtrasElementViewController
{
    _Bool _embedded;
    IKViewElement *_viewElement;
}

@property(nonatomic) _Bool embedded; // @synthesize embedded=_embedded;
@property(retain, nonatomic) IKViewElement *viewElement; // @synthesize viewElement=_viewElement;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long preferredLayoutAttribute;
@property(readonly, nonatomic) id preferredLayoutGuide;
@property(readonly, nonatomic) _Bool matchParentHeight;
- (void)viewDidLoad;
- (id)initWithViewElement:(id)arg1;

@end

@interface MPUExtrasActivityIndicatorElementViewController : MPUExtrasViewElementViewController
{
    MPUExtrasActivityIndicator *_activityView;
}

- (void).cxx_destruct;
- (void)_prepareLayout;
- (_Bool)matchParentHeight;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, nonatomic) IKActivityIndicatorElement *viewElement;

@end

@interface MPUExtrasArtworkDataSource : MPAbstractNetworkArtworkDataSource
{
}

- (id)cacheKeyForCatalog:(id)arg1 size:(struct CGSize)arg2;
- (_Bool)wantsBackgroundImageDecompression;
- (id)requestForCatalog:(id)arg1 size:(struct CGSize)arg2;
- (id)supportedSizesForCatalog:(id)arg1;
- (_Bool)areRepresentationsAvailableForCatalog:(id)arg1;
- (id)init;

@end

@interface MPUExtrasArtworkLayoutTriggeringView : MPUArtworkView
{
}

- (void)_imageDidChange;

@end

@interface MPUExtrasBackgroundViewController : UIViewController
{
    NSArray *_backgroundElements;
    IKImageElement *_displayedImageElement;
    NSArray *_imageConstraints;
    MPUArtworkView *_imageView;
    NSTimer *_updateTimer;
    UIImageView *_vignetteView;
    unsigned long long _vignetteType;
}

+ (id)vignetteImageForType:(unsigned long long)arg1;
@property(nonatomic) unsigned long long vignetteType; // @synthesize vignetteType=_vignetteType;
@property(readonly, nonatomic) NSArray *backgroundElements; // @synthesize backgroundElements=_backgroundElements;
- (void).cxx_destruct;
- (void)_invalidateTimer;
- (void)_scheduleTimerIfNeeded;
- (void)_didReceiveImage:(id)arg1;
- (void)_updateImage;
- (void)_updateConstraintsForImageSize:(struct CGSize)arg1 position:(unsigned long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithBackgroundElements:(id)arg1;
- (id)initWithBackgroundElement:(id)arg1;

@end

@interface MPUExtrasBannerController : NSObject
{
    NSLayoutConstraint *_anchorViewConstraint;
    IKDocumentBannerElement *_bannerElement;
    unsigned long long _vignetteType;
    UIView *_installedView;
    UIScrollView *_trackingScrollView;
    NSArray *_installedConstraints;
    UIView *_anchorView;
    UIImageView *_bannerImageView;
    UIImageView *_vignetteImageView;
    NSLayoutConstraint *_bannerImageViewHeightConstraint;
    UIView *_maskView;
}

@property(retain, nonatomic) UIView *maskView; // @synthesize maskView=_maskView;
@property(retain, nonatomic) NSLayoutConstraint *bannerImageViewHeightConstraint; // @synthesize bannerImageViewHeightConstraint=_bannerImageViewHeightConstraint;
@property(retain, nonatomic) UIImageView *vignetteImageView; // @synthesize vignetteImageView=_vignetteImageView;
@property(retain, nonatomic) UIImageView *bannerImageView; // @synthesize bannerImageView=_bannerImageView;
@property(retain, nonatomic) UIView *anchorView; // @synthesize anchorView=_anchorView;
@property(retain, nonatomic) NSArray *installedConstraints; // @synthesize installedConstraints=_installedConstraints;
@property(nonatomic) __weak UIScrollView *trackingScrollView; // @synthesize trackingScrollView=_trackingScrollView;
@property(nonatomic) __weak UIView *installedView; // @synthesize installedView=_installedView;
@property(nonatomic) unsigned long long vignetteType; // @synthesize vignetteType=_vignetteType;
@property(readonly, nonatomic) IKDocumentBannerElement *bannerElement; // @synthesize bannerElement=_bannerElement;
@property(readonly, nonatomic) NSLayoutConstraint *anchorConstraint; // @synthesize anchorConstraint=_anchorViewConstraint;
- (void).cxx_destruct;
- (void)_updateVignetteImage;
- (void)installBannerOnView:(id)arg1 anchoredToScrollView:(id)arg2;
- (void)_doAllSetup;
- (void)_configureBanner;
- (id)initWithBannerElement:(id)arg1;

@end

@interface MPUExtrasBorderedImageView : UIImageView
{
    _Bool _shouldDeferSettingTransform;
    _Bool _shouldUseTransformWhenReplicatingState;
    _Bool _shouldSkipImageWhenReplicatingState;
    struct CGAffineTransform _deferredTransform;
}

@property(nonatomic) _Bool shouldSkipImageWhenReplicatingState; // @synthesize shouldSkipImageWhenReplicatingState=_shouldSkipImageWhenReplicatingState;
@property(nonatomic) _Bool shouldUseTransformWhenReplicatingState; // @synthesize shouldUseTransformWhenReplicatingState=_shouldUseTransformWhenReplicatingState;
@property(nonatomic) _Bool shouldDeferSettingTransform; // @synthesize shouldDeferSettingTransform=_shouldDeferSettingTransform;
@property(nonatomic) struct CGAffineTransform deferredTransform; // @synthesize deferredTransform=_deferredTransform;
- (void)replicateStateFromImageView:(id)arg1;
@property(nonatomic) double borderWidth;
@property(copy, nonatomic) UIColor *borderColor;
- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;

@end

@interface MPUExtrasCarouselCollectionView : UICollectionView
{
    id <MPUExtrasCarouselCollectionViewDelegate> _carouselCollectionViewDelegate;
}

@property(nonatomic) __weak id <MPUExtrasCarouselCollectionViewDelegate> carouselCollectionViewDelegate; // @synthesize carouselCollectionViewDelegate=_carouselCollectionViewDelegate;
- (void).cxx_destruct;
- (void)didAddSubview:(id)arg1;

@end

@interface MPUExtrasCarouselCollectionViewCell : UICollectionViewCell <UIGestureRecognizerDelegate, MPUExtrasCarouselCollectionViewCell>
{
    _Bool _allowsPinchingThumbnailImageForInteractiveZoomingImageTransition;
    MPUExtrasConstrainedArtworkContainerView *_thumbnailImageContainerView;
    NSLayoutConstraint *_thumbnailImageContainerViewHeightConstraint;
    MPUContentSizeLayoutConstraint *_subtitleBaselineConstraint;
    MPUContentSizeLayoutConstraint *_descriptionLabelBaselineConstraint;
    UIView *_textContainer;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_descriptionLabel;
    unsigned long long _itemIndex;
    MPUExtrasZoomingImageInteractiveTransitionSourceContext *_interactiveTransitionSourceContext;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    NSString *_zoomingImageTransitionIdentifier;
    struct CGSize _windowSize;
}

@property(copy, nonatomic) NSString *zoomingImageTransitionIdentifier; // @synthesize zoomingImageTransitionIdentifier=_zoomingImageTransitionIdentifier;
@property(nonatomic) _Bool allowsPinchingThumbnailImageForInteractiveZoomingImageTransition; // @synthesize allowsPinchingThumbnailImageForInteractiveZoomingImageTransition=_allowsPinchingThumbnailImageForInteractiveZoomingImageTransition;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
@property(retain, nonatomic) MPUExtrasZoomingImageInteractiveTransitionSourceContext *interactiveTransitionSourceContext; // @synthesize interactiveTransitionSourceContext=_interactiveTransitionSourceContext;
@property(nonatomic) unsigned long long itemIndex; // @synthesize itemIndex=_itemIndex;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIView *textContainer; // @synthesize textContainer=_textContainer;
@property(retain, nonatomic) MPUContentSizeLayoutConstraint *descriptionLabelBaselineConstraint; // @synthesize descriptionLabelBaselineConstraint=_descriptionLabelBaselineConstraint;
@property(retain, nonatomic) MPUContentSizeLayoutConstraint *subtitleBaselineConstraint; // @synthesize subtitleBaselineConstraint=_subtitleBaselineConstraint;
@property(retain, nonatomic) NSLayoutConstraint *thumbnailImageContainerViewHeightConstraint; // @synthesize thumbnailImageContainerViewHeightConstraint=_thumbnailImageContainerViewHeightConstraint;
@property(retain, nonatomic) MPUExtrasConstrainedArtworkContainerView *thumbnailImageContainerView; // @synthesize thumbnailImageContainerView=_thumbnailImageContainerView;
@property(nonatomic) struct CGSize windowSize; // @synthesize windowSize=_windowSize;
- (void).cxx_destruct;
- (void)_updateThumbnailArtworkViewBorder;
- (void)_setupDescriptionLabelWithConstraintsAccumulator:(id)arg1;
- (void)_setupSubtitleLabelWithConstraintsAccumulator:(id)arg1;
- (void)_setupTitleLabelWithConstraintsAccumulator:(id)arg1;
- (void)_setupThumbnailImageContainerViewWithConstraintsAccumulator:(id)arg1;
- (double)_descriptionLabelTopInset;
- (void)_handlePinchGesture:(id)arg1;
@property(readonly, nonatomic) double thumbnailImageContainerHeight;
- (id)descriptionTextStyle;
- (id)subtitleTextStyle;
- (id)titleTextStyle;
- (void)setThumbnailMaxSize:(struct CGSize)arg1;
- (id)lockupElement;
- (void)setDescriptionText:(id)arg1;
- (id)descriptionText;
- (void)setSubtitleText:(id)arg1;
- (void)setTitleText:(id)arg1;
- (id)titleText;
- (void)setThumbnailImageAccessibilityText:(id)arg1;
- (id)thumbnailImageAccessibilityText;
- (void)setThumbnailOverlayImage:(id)arg1 position:(unsigned long long)arg2;
- (void)setThumbnailImagePlaceholder:(id)arg1;
- (id)thumbnailImagePlaceholder;
- (void)setThumbnailBorderColor:(id)arg1;
- (void)setThumbnailImage:(id)arg1;
- (id)thumbnailImage;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)prepareForReuse;
- (void)updateConstraints;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasCarouselCollectionViewFlowLayout : UICollectionViewFlowLayout <MPUExtrasCarouselCollectionViewLayout>
{
}

- (double)itemWidth;
- (unsigned long long)indexOfVisibleItem;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;

@end

@interface MPUExtrasCarouselCollectionViewLayout : UICollectionViewLayout <MPUExtrasCarouselCollectionViewLayout>
{
    NSDictionary *_cachedLayoutAttributes;
    long long _indexOfVisibleItemForBoundsChange;
    struct CGSize _cachedCollectionViewContentSize;
}

@property(nonatomic) long long indexOfVisibleItemForBoundsChange; // @synthesize indexOfVisibleItemForBoundsChange=_indexOfVisibleItemForBoundsChange;
@property(nonatomic) struct CGSize cachedCollectionViewContentSize; // @synthesize cachedCollectionViewContentSize=_cachedCollectionViewContentSize;
@property(retain, nonatomic) NSDictionary *cachedLayoutAttributes; // @synthesize cachedLayoutAttributes=_cachedLayoutAttributes;
- (void).cxx_destruct;
- (double)_spaceBetweenItemsForCollectionViewBounds:(struct CGRect)arg1;
- (double)_spaceBetweenItems;
- (double)_neighboringItemVisibleWidth;
- (long long)_indexOfVisibleItemForContentOffset:(struct CGPoint)arg1 collectionViewBounds:(struct CGRect)arg2;
- (struct CGPoint)_contentOffsetForItemAtIndex:(long long)arg1 collectionViewBounds:(struct CGRect)arg2;
- (double)itemWidth;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1;
- (unsigned long long)indexOfVisibleItem;
- (void)finalizeAnimatedBoundsChange;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1;
- (void)prepareForAnimatedBoundsChange:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (struct CGSize)collectionViewContentSize;
- (void)prepareLayout;
- (id)init;

@end

@interface MPUExtrasCarouselViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, MPUExtrasCarouselCollectionViewDelegate, MPUExtrasZoomingImageTransitionParticipant>
{
    _Bool _revealingNavigationBarDuringTransition;
    id <MPUExtrasCarouselViewControllerDataSource> _dataSource;
    id <MPUExtrasCarouselViewControllerDelegate> _delegate;
    MPUExtrasCarouselCollectionView *_carouselCollectionView;
    UICollectionViewLayout<MPUExtrasCarouselCollectionViewLayout> *_carouselCollectionViewLayout;
}

@property(nonatomic, getter=isRevealingNavigationBarDuringTransition) _Bool revealingNavigationBarDuringTransition; // @synthesize revealingNavigationBarDuringTransition=_revealingNavigationBarDuringTransition;
@property(retain, nonatomic) UICollectionViewLayout<MPUExtrasCarouselCollectionViewLayout> *carouselCollectionViewLayout; // @synthesize carouselCollectionViewLayout=_carouselCollectionViewLayout;
@property(retain, nonatomic) MPUExtrasCarouselCollectionView *carouselCollectionView; // @synthesize carouselCollectionView=_carouselCollectionView;
@property(nonatomic) __weak id <MPUExtrasCarouselViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <MPUExtrasCarouselViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (_Bool)_isPhone;
- (void)_updateWindowSizeForVisibleCells;
- (void)_updateOpacityOfTextInVisibleCells;
- (long long)_numberOfItems;
- (void)_loadCarouselCollectionViewInView:(id)arg1 withContraintsAccumulator:(id)arg2;
- (id)carouselCollectionViewCellForItemAtIndex:(unsigned long long)arg1;
- (void)setIndexOfVisibleItem:(unsigned long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) unsigned long long indexOfVisibleItem;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)subviewsDidChangeForCarouselCollectionView:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasCollectionReusableView : UICollectionReusableView
{
    UILabel *_textLabel;
    MPUContentSizeLayoutConstraint *_textTopConstraint;
    NSLayoutConstraint *_textLeftConstraint;
    MPUContentSizeLayoutConstraint *_textBottomConstraint;
    NSLayoutConstraint *_textRightConstraint;
    struct UIEdgeInsets _labelInsets;
    UIView *_borderView;
    NSArray *_borderConstraints;
}

- (void).cxx_destruct;
- (void)configureForHeaderElement:(id)arg1 headerStyle:(id)arg2;
- (void)_configureConstraintsForInsets:(struct UIEdgeInsets)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUExtrasConstrainedArtworkContainerView : UIView
{
    _Bool _shouldAutoresizeMaskLayerToFillBounds;
    _Bool _shouldBottomAlignArtwork;
    MPUArtworkView *_artworkView;
    UIImage *_overlayImage;
    double _overlayScale;
    unsigned long long _overlayPosition;
    UIImageView *_overlayView;
    NSArray *_overlaySizeConstraints;
    NSArray *_overlayPositionConstraints;
}

@property(retain, nonatomic) NSArray *overlayPositionConstraints; // @synthesize overlayPositionConstraints=_overlayPositionConstraints;
@property(retain, nonatomic) NSArray *overlaySizeConstraints; // @synthesize overlaySizeConstraints=_overlaySizeConstraints;
@property(retain, nonatomic) UIImageView *overlayView; // @synthesize overlayView=_overlayView;
@property(nonatomic) unsigned long long overlayPosition; // @synthesize overlayPosition=_overlayPosition;
@property(nonatomic) double overlayScale; // @synthesize overlayScale=_overlayScale;
@property(retain, nonatomic) UIImage *overlayImage; // @synthesize overlayImage=_overlayImage;
@property(nonatomic) _Bool shouldBottomAlignArtwork; // @synthesize shouldBottomAlignArtwork=_shouldBottomAlignArtwork;
@property(nonatomic) _Bool shouldAutoresizeMaskLayerToFillBounds; // @synthesize shouldAutoresizeMaskLayerToFillBounds=_shouldAutoresizeMaskLayerToFillBounds;
@property(retain, nonatomic) MPUArtworkView *artworkView; // @synthesize artworkView=_artworkView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUExtrasContext : NSObject <MPUExtrasPlaybackDelegate>
{
    id <MPUExtrasContextDelegate> _delegate;
    UIViewController *_featurePlaybackViewController;
    MPPlaybackContext *_featurePlaybackContext;
    MPUExtrasRootViewController *_extrasRootViewController;
    MPMediaItem *_mediaItem;
    NSURL *_javascriptURL;
    NSString *_buyParameters;
    long long _storeID;
}

+ (Class)extrasRootViewControllerClass;
+ (id)overriddenJavascriptURL;
+ (void)overrideJavascriptURL:(id)arg1;
@property(readonly, nonatomic) long long storeID; // @synthesize storeID=_storeID;
@property(readonly, copy, nonatomic) NSString *buyParameters; // @synthesize buyParameters=_buyParameters;
@property(readonly, copy, nonatomic) NSURL *javascriptURL; // @synthesize javascriptURL=_javascriptURL;
@property(readonly, nonatomic) MPMediaItem *mediaItem; // @synthesize mediaItem=_mediaItem;
@property(readonly, nonatomic) MPUExtrasRootViewController *extrasRootViewController; // @synthesize extrasRootViewController=_extrasRootViewController;
@property(retain, nonatomic) MPPlaybackContext *featurePlaybackContext; // @synthesize featurePlaybackContext=_featurePlaybackContext;
@property(retain, nonatomic) UIViewController *featurePlaybackViewController; // @synthesize featurePlaybackViewController=_featurePlaybackViewController;
@property(nonatomic) __weak id <MPUExtrasContextDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)failWithError:(id)arg1;
- (void)extrasRequestReloadWithContext:(id)arg1;
- (void)extrasRequestsPlaybackStop;
- (void)extrasRequestsMediaPlayback:(id)arg1 isBackground:(_Bool)arg2;
- (void)_configureForMediaItem:(id)arg1;
- (id)initWithApplicationJavascriptURL:(id)arg1 storeID:(long long)arg2 buyParameters:(id)arg3;
- (id)initWithMediaItem:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasDetailTextCell : UICollectionViewCell
{
    UILabel *_label;
}

- (void).cxx_destruct;
- (void)_dynamicTypeDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)configureForTextElement:(id)arg1 style:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUExtrasFeatureContainerViewController : UIViewController
{
    UIViewController<MPUExtrasVideoPlaybackViewController> *_videoPlaybackViewController;
    NSLayoutConstraint *_overlayViewAdjustmentConstraint;
    MPUExtrasContext *_context;
    UIView *_menuBarView;
    double _collectionViewHeight;
}

@property(nonatomic) double collectionViewHeight; // @synthesize collectionViewHeight=_collectionViewHeight;
@property(nonatomic) __weak UIView *menuBarView; // @synthesize menuBarView=_menuBarView;
@property(retain, nonatomic) UIViewController *videoPlaybackViewController; // @synthesize videoPlaybackViewController=_videoPlaybackViewController;
@property(readonly, nonatomic) __weak MPUExtrasContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)_menuBarHeightChange:(id)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithContext:(id)arg1;

@end

@interface MPUExtrasTemplateViewController : MPUExtrasElementViewController <IKAppDocumentDelegate>
{
    IKViewElement *_displayedTemplate;
    NSDictionary *_options;
    IKAppDocument *_document;
    MPUExtrasContext *_context;
}

+ (id)templateViewControllerWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;
@property(readonly, nonatomic) __weak MPUExtrasContext *context; // @synthesize context=_context;
@property(readonly, nonatomic) IKAppDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
- (void)configureBackgroundWithElements:(id)arg1;
- (_Bool)shouldUpdateByReplacingViewControllerWithTemplate:(id)arg1;
- (void)documentDidFail:(id)arg1 withError:(id)arg2;
- (void)documentDidUpdate:(id)arg1;
- (void)documentNeedsUpdate:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_startBackgroundAudio;
- (void)viewDidLoad;
- (void)_showPlaceholder;
@property(readonly, nonatomic) _Bool showsPlaceholder;
- (id)initWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasGalleryTemplateViewController : MPUExtrasTemplateViewController
{
    MPUExtrasBannerController *_bannerController;
    MPUExtrasGridElementViewController *_gridViewController;
    unsigned long long _selectedItemIndex;
}

@property(nonatomic) unsigned long long selectedItemIndex; // @synthesize selectedItemIndex=_selectedItemIndex;
- (void).cxx_destruct;
- (void)_prepareLayout;
- (void)viewDidLoad;
- (id)templateElement;
- (id)contentScrollView;
- (_Bool)showsPlaceholder;

@end

@interface MPUExtrasGridCellStyle : NSObject <NSCopying>
{
    double _titleFirstBaselineHeight;
    double _subtitleFirstBaselineHeight;
    NSString *_titleTextStyle;
    NSString *_subtitleTextStyle;
    NSDictionary *_titleDefaultFontAttributes;
    NSDictionary *_subtitleDefaultFontAttributes;
    UIColor *_titleTextColor;
    UIColor *_subtitleTextColor;
    double _textFirstBaselineToBottom;
    double _textLastBaselineToBottom;
    long long _defaultTextAlignment;
    struct CGSize _imageSize;
}

@property(nonatomic) long long defaultTextAlignment; // @synthesize defaultTextAlignment=_defaultTextAlignment;
@property(nonatomic) double textLastBaselineToBottom; // @synthesize textLastBaselineToBottom=_textLastBaselineToBottom;
@property(nonatomic) double textFirstBaselineToBottom; // @synthesize textFirstBaselineToBottom=_textFirstBaselineToBottom;
@property(copy, nonatomic) UIColor *subtitleTextColor; // @synthesize subtitleTextColor=_subtitleTextColor;
@property(copy, nonatomic) UIColor *titleTextColor; // @synthesize titleTextColor=_titleTextColor;
@property(copy, nonatomic) NSDictionary *subtitleDefaultFontAttributes; // @synthesize subtitleDefaultFontAttributes=_subtitleDefaultFontAttributes;
@property(copy, nonatomic) NSDictionary *titleDefaultFontAttributes; // @synthesize titleDefaultFontAttributes=_titleDefaultFontAttributes;
@property(copy, nonatomic) NSString *subtitleTextStyle; // @synthesize subtitleTextStyle=_subtitleTextStyle;
@property(copy, nonatomic) NSString *titleTextStyle; // @synthesize titleTextStyle=_titleTextStyle;
@property(nonatomic) double subtitleFirstBaselineHeight; // @synthesize subtitleFirstBaselineHeight=_subtitleFirstBaselineHeight;
@property(nonatomic) double titleFirstBaselineHeight; // @synthesize titleFirstBaselineHeight=_titleFirstBaselineHeight;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MPUExtrasGridCollectionViewCell : UICollectionViewCell
{
    UIView *_spacerView;
    NSLayoutConstraint *_artworkContainerWidthConstraint;
    NSLayoutConstraint *_artworkContainerHeightConstraint;
    MPUContentSizeLayoutConstraint *_topLineHeight;
    MPUContentSizeLayoutConstraint *_subtitleLineHeight;
    MPUContentSizeLayoutConstraint *_spacerHeight;
    NSLayoutConstraint *_spacerTop;
    IKLockupElement *_lockupElement;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    MPUExtrasConstrainedArtworkContainerView *_artworkContainer;
}

@property(readonly, nonatomic) MPUExtrasConstrainedArtworkContainerView *artworkContainer; // @synthesize artworkContainer=_artworkContainer;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak IKLockupElement *lockupElement; // @synthesize lockupElement=_lockupElement;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)setHighlighted:(_Bool)arg1;
- (void)configureForLockup:(id)arg1 cellStyle:(id)arg2;
- (void)configureForLockup:(id)arg1 cellStyle:(id)arg2 withSizing:(_Bool)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUExtrasGridElementViewController : MPUExtrasViewElementViewController <UICollectionViewDataSource, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout>
{
    UIView *_titleRule;
    NSArray *_titleRuleConstraints;
    NSArray *_headerViewConstraints;
    UICollectionView *_collectionView;
    _MPUExtrasShelfCollectionViewLayout *_flowLayout;
    _MPUExtrasGridHeaderView *_headerView;
    _Bool _shelfStyle;
    MPUExtrasGridViewControllerStyle *_smallStyle;
    MPUExtrasGridViewControllerStyle *_mediumStyle;
    MPUExtrasGridViewControllerStyle *_largeStyle;
    MPUExtrasGridViewControllerStyle *_extraLargeStyle;
    MPUExtrasGridViewControllerStyle *_wideStyle;
}

+ (id)extraLargeStackGridStyle;
+ (id)largeStackGridStyle;
+ (id)mediumStackGridStyle;
+ (id)smallStackGridStyle;
+ (id)wideStackGridStyle;
+ (id)extraLargeDetailStyle;
+ (id)largeDetailStyle;
+ (id)mediumDetailStyle;
+ (id)smallDetailStyle;
+ (id)wideDetailStyle;
+ (id)extraLargeGalleryStyle;
+ (id)largeGalleryStyle;
+ (id)mediumGalleryStyle;
+ (id)smallGalleryStyle;
+ (id)wideGalleryStyle;
+ (id)_defaultCellStyle;
+ (id)_fontAttributes;
+ (id)keyPathsForValuesAffectingContentScrollView;
@property(nonatomic, getter=isShelfStyle) _Bool shelfStyle; // @synthesize shelfStyle=_shelfStyle;
@property(retain, nonatomic) MPUExtrasGridViewControllerStyle *wideStyle; // @synthesize wideStyle=_wideStyle;
@property(retain, nonatomic) MPUExtrasGridViewControllerStyle *extraLargeStyle; // @synthesize extraLargeStyle=_extraLargeStyle;
@property(retain, nonatomic) MPUExtrasGridViewControllerStyle *largeStyle; // @synthesize largeStyle=_largeStyle;
@property(retain, nonatomic) MPUExtrasGridViewControllerStyle *mediumStyle; // @synthesize mediumStyle=_mediumStyle;
@property(retain, nonatomic) MPUExtrasGridViewControllerStyle *smallStyle; // @synthesize smallStyle=_smallStyle;
- (void).cxx_destruct;
- (void)_prepareLayout;
- (void)_dynamicTypeDidChange;
- (id)_narrowStyle;
@property(readonly, nonatomic) MPUExtrasGridViewControllerStyle *currentStyle;
- (double)_cellSpacingForSection:(id)arg1;
- (struct UIEdgeInsets)_sectionInsetsForSection:(id)arg1;
- (id)_cellStyleForSection:(id)arg1;
- (long long)preferredLayoutAttribute;
- (id)preferredLayoutGuide;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didHighlightItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)_sectionElementForIndex:(unsigned long long)arg1;
- (id)_lockupForIndexPath:(id)arg1;
- (_Bool)_sectionIndexIsDescriptionSection:(long long)arg1;
- (_Bool)_hasDescriptionText;
- (void)setViewElement:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)contentScrollView;
- (void)loadView;
@property(readonly, nonatomic) UICollectionView *collectionView;
- (struct CGSize)preferredContentSize;
- (void)dealloc;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly) IKGridElement *viewElement;

@end

@interface MPUExtrasGridHeaderStyle : NSObject
{
    _Bool _showsImage;
    NSString *_titleTextStyle;
    double _titleLineHeight;
    NSString *_subtitleTextStyle;
    double _subtitleLineHeight;
    double _bottomLabelDescender;
    NSDictionary *_titleDefaultFontAttributes;
    NSDictionary *_subtitleDefaultFontAttributes;
    UIColor *_titleColor;
    UIColor *_subtitleColor;
    struct UIEdgeInsets _insets;
}

@property(retain, nonatomic) UIColor *subtitleColor; // @synthesize subtitleColor=_subtitleColor;
@property(retain, nonatomic) UIColor *titleColor; // @synthesize titleColor=_titleColor;
@property(retain, nonatomic) NSDictionary *subtitleDefaultFontAttributes; // @synthesize subtitleDefaultFontAttributes=_subtitleDefaultFontAttributes;
@property(retain, nonatomic) NSDictionary *titleDefaultFontAttributes; // @synthesize titleDefaultFontAttributes=_titleDefaultFontAttributes;
@property(nonatomic) double bottomLabelDescender; // @synthesize bottomLabelDescender=_bottomLabelDescender;
@property(nonatomic) double subtitleLineHeight; // @synthesize subtitleLineHeight=_subtitleLineHeight;
@property(retain, nonatomic) NSString *subtitleTextStyle; // @synthesize subtitleTextStyle=_subtitleTextStyle;
@property(nonatomic) double titleLineHeight; // @synthesize titleLineHeight=_titleLineHeight;
@property(retain, nonatomic) NSString *titleTextStyle; // @synthesize titleTextStyle=_titleTextStyle;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) _Bool showsImage; // @synthesize showsImage=_showsImage;
- (void).cxx_destruct;

@end

@interface MPUExtrasGridSectionHeaderStyle : NSObject
{
    NSString *_textStyle;
    NSDictionary *_defaultFontAttributes;
    UIColor *_textColor;
    double _textBaselineHeight;
    double _textBaselineDescender;
    struct UIEdgeInsets _insets;
}

@property(nonatomic) double textBaselineDescender; // @synthesize textBaselineDescender=_textBaselineDescender;
@property(nonatomic) double textBaselineHeight; // @synthesize textBaselineHeight=_textBaselineHeight;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) NSDictionary *defaultFontAttributes; // @synthesize defaultFontAttributes=_defaultFontAttributes;
@property(retain, nonatomic) NSString *textStyle; // @synthesize textStyle=_textStyle;
- (void).cxx_destruct;

@end

@interface MPUExtrasGridViewControllerStyle : NSObject
{
    _Bool _showsScrollFade;
    _Bool _adjustsContentInsetByBottomNavBar;
    UIColor *_backgroundColor;
    NSString *_detailTextStyle;
    NSDictionary *_detailDefaultFontAttributes;
    UIColor *_detailTextColor;
    MPUExtrasGridHeaderStyle *_headerStyle;
    MPUExtrasGridSectionHeaderStyle *_sectionHeaderStyle;
    MPUExtrasGridCellStyle *_defaultCellStyle;
    MPUExtrasGridCellStyle *_imageCellStyle;
    MPUExtrasGridCellStyle *_videoCellStyle;
    MPUExtrasGridCellStyle *_productCellStyle;
    double _defaultSpacing;
    double _imageSpacing;
    double _videoSpacing;
    double _productSpacing;
    double _cellLineSpacing;
    struct UIEdgeInsets _collectionViewInsets;
    struct UIEdgeInsets _detailInsets;
    struct UIEdgeInsets _defaultCellSectionInsets;
    struct UIEdgeInsets _imageCellSectionInsets;
    struct UIEdgeInsets _videoCellSectionInsets;
    struct UIEdgeInsets _productCellSectionInsets;
}

@property(nonatomic) _Bool adjustsContentInsetByBottomNavBar; // @synthesize adjustsContentInsetByBottomNavBar=_adjustsContentInsetByBottomNavBar;
@property(nonatomic) _Bool showsScrollFade; // @synthesize showsScrollFade=_showsScrollFade;
@property(nonatomic) double cellLineSpacing; // @synthesize cellLineSpacing=_cellLineSpacing;
@property(nonatomic) struct UIEdgeInsets productCellSectionInsets; // @synthesize productCellSectionInsets=_productCellSectionInsets;
@property(nonatomic) struct UIEdgeInsets videoCellSectionInsets; // @synthesize videoCellSectionInsets=_videoCellSectionInsets;
@property(nonatomic) struct UIEdgeInsets imageCellSectionInsets; // @synthesize imageCellSectionInsets=_imageCellSectionInsets;
@property(nonatomic) struct UIEdgeInsets defaultCellSectionInsets; // @synthesize defaultCellSectionInsets=_defaultCellSectionInsets;
@property(nonatomic) double productSpacing; // @synthesize productSpacing=_productSpacing;
@property(nonatomic) double videoSpacing; // @synthesize videoSpacing=_videoSpacing;
@property(nonatomic) double imageSpacing; // @synthesize imageSpacing=_imageSpacing;
@property(nonatomic) double defaultSpacing; // @synthesize defaultSpacing=_defaultSpacing;
@property(retain, nonatomic) MPUExtrasGridCellStyle *productCellStyle; // @synthesize productCellStyle=_productCellStyle;
@property(retain, nonatomic) MPUExtrasGridCellStyle *videoCellStyle; // @synthesize videoCellStyle=_videoCellStyle;
@property(retain, nonatomic) MPUExtrasGridCellStyle *imageCellStyle; // @synthesize imageCellStyle=_imageCellStyle;
@property(retain, nonatomic) MPUExtrasGridCellStyle *defaultCellStyle; // @synthesize defaultCellStyle=_defaultCellStyle;
@property(retain, nonatomic) MPUExtrasGridSectionHeaderStyle *sectionHeaderStyle; // @synthesize sectionHeaderStyle=_sectionHeaderStyle;
@property(retain, nonatomic) MPUExtrasGridHeaderStyle *headerStyle; // @synthesize headerStyle=_headerStyle;
@property(nonatomic) struct UIEdgeInsets detailInsets; // @synthesize detailInsets=_detailInsets;
@property(retain, nonatomic) UIColor *detailTextColor; // @synthesize detailTextColor=_detailTextColor;
@property(retain, nonatomic) NSDictionary *detailDefaultFontAttributes; // @synthesize detailDefaultFontAttributes=_detailDefaultFontAttributes;
@property(retain, nonatomic) NSString *detailTextStyle; // @synthesize detailTextStyle=_detailTextStyle;
@property(nonatomic) struct UIEdgeInsets collectionViewInsets; // @synthesize collectionViewInsets=_collectionViewInsets;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;

@end

@interface MPUExtrasImageBrowserViewController : UIViewController <UIPageViewControllerDataSource, UIPageViewControllerDelegate, MPUExtrasZoomingImageInteractiveTransitionSource, MPUExtrasZoomingImageTransitionParticipant>
{
    _Bool _allowsPinchingImageForInteractiveZoomingImageTransition;
    id <MPUExtrasImageBrowserViewControllerDataSource> _dataSource;
    id <MPUExtrasImageBrowserViewControllerDelegate> _delegate;
    id <MPUExtrasZoomingImageInteractiveTransitionSource> _zoomingImageInteractiveTransitionSource;
    unsigned long long _visibleImageIndex;
    UIPageViewController *_pageViewController;
}

@property(retain, nonatomic) UIPageViewController *pageViewController; // @synthesize pageViewController=_pageViewController;
@property(nonatomic) unsigned long long visibleImageIndex; // @synthesize visibleImageIndex=_visibleImageIndex;
@property(nonatomic) _Bool allowsPinchingImageForInteractiveZoomingImageTransition; // @synthesize allowsPinchingImageForInteractiveZoomingImageTransition=_allowsPinchingImageForInteractiveZoomingImageTransition;
@property(nonatomic) __weak id <MPUExtrasZoomingImageInteractiveTransitionSource> zoomingImageInteractiveTransitionSource; // @synthesize zoomingImageInteractiveTransitionSource=_zoomingImageInteractiveTransitionSource;
@property(nonatomic) __weak id <MPUExtrasImageBrowserViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <MPUExtrasImageBrowserViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)_visibleImageViewController;
- (void)_updateTitle;
- (void)_updatePageViewController;
- (void)_removePageViewController;
- (unsigned long long)_numberOfImages;
- (id)_imageViewControllerAtIndex:(unsigned long long)arg1;
- (void)_addPageViewForController:(id)arg1 toView:(id)arg2;
- (void)handlePinchGestureForZoomingImageInteractiveTransitionWithContext:(id)arg1;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (void)pageViewController:(id)arg1 willTransitionToViewControllers:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasImageViewController : UIViewController <MPUExtrasZoomingImageTransitionParticipant>
{
    _Bool _allowsPinchingImageForInteractiveZoomingImageTransition;
    _Bool _overlayHidden;
    unsigned long long _imageIndex;
    NSString *_zoomingImageTransitionIdentifier;
    UIActivityIndicatorView *_activityIndicatorView;
    MPUExtrasZoomableImageView *_zoomableImageView;
    NSArray *_gestureRecognizers;
    MPUExtrasZoomingImageInteractiveTransitionSourceContext *_interactiveTransitionSourceContext;
    UIView *_textContainmentView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_descriptionLabel;
    MPUContentSizeLayoutConstraint *_topLabelConstraint;
    MPUContentSizeLayoutConstraint *_subtitleLeadingConstraint;
    MPUContentSizeLayoutConstraint *_descriptionLeadingConstraint;
    MPUContentSizeLayoutConstraint *_bottomLabelConstraint;
}

@property(nonatomic) _Bool overlayHidden; // @synthesize overlayHidden=_overlayHidden;
@property(retain, nonatomic) MPUContentSizeLayoutConstraint *bottomLabelConstraint; // @synthesize bottomLabelConstraint=_bottomLabelConstraint;
@property(retain, nonatomic) MPUContentSizeLayoutConstraint *descriptionLeadingConstraint; // @synthesize descriptionLeadingConstraint=_descriptionLeadingConstraint;
@property(retain, nonatomic) MPUContentSizeLayoutConstraint *subtitleLeadingConstraint; // @synthesize subtitleLeadingConstraint=_subtitleLeadingConstraint;
@property(retain, nonatomic) MPUContentSizeLayoutConstraint *topLabelConstraint; // @synthesize topLabelConstraint=_topLabelConstraint;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIView *textContainmentView; // @synthesize textContainmentView=_textContainmentView;
@property(retain, nonatomic) MPUExtrasZoomingImageInteractiveTransitionSourceContext *interactiveTransitionSourceContext; // @synthesize interactiveTransitionSourceContext=_interactiveTransitionSourceContext;
@property(copy, nonatomic) NSArray *gestureRecognizers; // @synthesize gestureRecognizers=_gestureRecognizers;
@property(retain, nonatomic) MPUExtrasZoomableImageView *zoomableImageView; // @synthesize zoomableImageView=_zoomableImageView;
@property(retain, nonatomic) UIActivityIndicatorView *activityIndicatorView; // @synthesize activityIndicatorView=_activityIndicatorView;
@property(copy, nonatomic) NSString *zoomingImageTransitionIdentifier; // @synthesize zoomingImageTransitionIdentifier=_zoomingImageTransitionIdentifier;
@property(nonatomic) _Bool allowsPinchingImageForInteractiveZoomingImageTransition; // @synthesize allowsPinchingImageForInteractiveZoomingImageTransition=_allowsPinchingImageForInteractiveZoomingImageTransition;
@property(nonatomic) unsigned long long imageIndex; // @synthesize imageIndex=_imageIndex;
- (void).cxx_destruct;
- (void)_handleSingleTap:(id)arg1;
- (void)_handlePinch:(id)arg1;
- (void)_handleDoubleTap:(id)arg1;
@property(retain, nonatomic) NSAttributedString *descriptionString;
@property(retain, nonatomic) NSAttributedString *subtitleString;
@property(retain, nonatomic) NSAttributedString *titleString;
@property(retain, nonatomic) UIImage *image;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)updateViewConstraints;
- (void)viewDidLoad;
- (_Bool)prefersStatusBarHidden;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasJSITunesStore : IKJSITunesStore <SKStoreProductViewControllerDelegatePrivate, MPUExtrasJSITunesStore, IKJSITunesStore>
{
    UIViewController *_formPresentationViewController;
}

@property(nonatomic) __weak UIViewController *formPresentationViewController; // @synthesize formPresentationViewController=_formPresentationViewController;
- (void).cxx_destruct;
- (void)loadStoreURL:(id)arg1 playOnLaunch:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) NSString *DSID;
@property(readonly, nonatomic) NSDictionary *accountInfo;
@property(retain, nonatomic) id cookie;
@property(retain, nonatomic) NSString *cookieURL;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *networkConnectionType;
@property(retain, nonatomic) NSString *storefront;
@property(readonly) Class superclass;
@property(readonly, nonatomic) NSString *userAgent;

@end

@interface MPUExtrasListTemplateViewController : MPUExtrasTemplateViewController <UITableViewDataSource, UITableViewDelegate>
{
    UITableView *_tableView;
    _Bool _tableViewLeft;
    UIImageView *_vignetteView;
    _Bool _relatedContentEmbedded;
    NSArray *_masterViewConstraints;
    NSArray *_detailViewConstraints;
    NSMapTable *_relatedContentViewControllerMap;
    NSIndexPath *_autohighlightIndexPath;
    MPUExtrasViewElementViewController *_relatedContentViewController;
}

+ (id)relatedContentViewControllerForElement:(id)arg1;
@property(retain, nonatomic) MPUExtrasViewElementViewController *relatedContentViewController; // @synthesize relatedContentViewController=_relatedContentViewController;
- (void).cxx_destruct;
- (void)_configureVignette:(_Bool)arg1;
- (void)_prepareLayout;
- (void)_setNavigationConstraints;
- (void)_setDetailContraints;
- (void)_unembedRelatedContent;
- (void)_pushRelatedViewController:(id)arg1 animated:(_Bool)arg2;
- (void)_embedRelatedContentViewController;
- (void)_setRelatedContentEmbedded:(_Bool)arg1;
- (void)_configureBannerWithElement:(id)arg1;
- (void)_updateRelatedContent:(id)arg1 forListItem:(id)arg2;
- (void)_updateForTemplate:(id)arg1;
- (_Bool)shouldUpdateByReplacingViewControllerWithTemplate:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didHighlightRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)_addConstraintsToTableView:(id)arg1;
- (void)viewDidLoad;
- (_Bool)showsPlaceholder;
- (id)templateElement;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasLoadingView : UIView <IKAppDocumentDelegate>
{
    IKAppDocument *_document;
    NSDictionary *_options;
    MPUExtrasActivityIndicator *_activityIndicator;
    id <MPUExtrasLoadingViewDelegate> _delegate;
}

- (void).cxx_destruct;
- (void)documentDidUpdate:(id)arg1;
- (void)documentNeedsUpdate:(id)arg1;
- (void)_show;
- (void)cancelCountdownToVisibility;
- (void)startCountdownToVisibilityWithInterval:(double)arg1;
- (id)initWithDocument:(id)arg1 options:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasLockupCollectionViewCell : UICollectionViewCell <MPUExtrasCarouselCollectionViewCell>
{
    struct CGSize _artworkSize;
    MPUExtrasConstrainedArtworkContainerView *_artworkContainerView;
    UIView *_textContainerView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_descriptionLabel;
    unsigned long long _itemIndex;
    NSLayoutConstraint *_artworkContainerWidthConstraint;
    NSLayoutConstraint *_artworkContainerHeightConstraint;
    NSLayoutConstraint *_subtitleBaselineConstraint;
    NSLayoutConstraint *_descriptionBaselineConstraint;
    NSString *_zoomingImageTransitionIdentifier;
    MPUExtrasZoomingImageInteractiveTransitionSourceContext *_interactiveTransitionSourceContext;
    _Bool _allowsPinchingThumbnailImageForInteractiveZoomingImageTransition;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    IKLockupElement *_lockup;
}

@property(nonatomic) __weak IKLockupElement *lockup; // @synthesize lockup=_lockup;
- (void).cxx_destruct;
- (void)setHighlighted:(_Bool)arg1;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)setZoomingImageTransitionIdentifier:(id)arg1;
- (void)updateConstraints;
- (void)setThumbnailOverlayImage:(id)arg1 position:(unsigned long long)arg2;
- (void)setThumbnailMaxSize:(struct CGSize)arg1;
- (id)descriptionTextStyle;
- (id)subtitleTextStyle;
- (id)titleTextStyle;
- (id)thumbnailImage;
- (unsigned long long)itemIndex;
- (void)setItemIndex:(unsigned long long)arg1;
- (void)_handlePinchGesture:(id)arg1;
- (void)setAllowsPinchingThumbnailImageForInteractiveZoomingImageTransition:(_Bool)arg1;
- (void)setThumbnailImageAccessibilityText:(id)arg1;
- (void)setThumbnailImagePlaceholder:(id)arg1;
- (void)setThumbnailBorderColor:(id)arg1;
- (void)setThumbnailImage:(id)arg1;
- (void)setDescriptionText:(id)arg1;
- (void)setSubtitleText:(id)arg1;
- (void)setTitleText:(id)arg1;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasLockupElementViewController : MPUExtrasViewElementViewController
{
    MPUExtrasConstrainedArtworkContainerView *_artworkContainerView;
    UIView *_textContainmentView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_descriptionLabel;
    NSLayoutConstraint *_artworkContainerTopConstraint;
    NSLayoutConstraint *_artworkContainerXConstraint;
    NSLayoutConstraint *_artworkContainerWidthConstraint;
    NSLayoutConstraint *_artworkContainerHeightConstraint;
    struct CGSize _artworkSize;
    NSLayoutConstraint *_textTopConstraint;
    NSLayoutConstraint *_textHeightConstraint;
    NSLayoutConstraint *_textCenterYConstraint;
    NSLayoutConstraint *_textLeadingConstraint;
    NSLayoutConstraint *_textTrailingConstraint;
    NSLayoutConstraint *_textBottomConstraint;
    NSLayoutConstraint *_titleVerticalConstraint;
    MPUContentSizeLayoutConstraint *_subtitleBaselineConstraint;
    MPUContentSizeLayoutConstraint *_descriptionBaselineConstraint;
}

- (void).cxx_destruct;
- (void)_handlePress:(id)arg1;
@property(readonly) NSString *descriptionTextStyle;
- (void)_configureDescriptionLabelForTextElement:(id)arg1;
- (void)_configureSubtitleLabelForTextElement:(id)arg1;
- (void)_configureTitleLabelForTextElement:(id)arg1;
- (void)_configureArtworkViewForImageElement:(id)arg1 overlays:(id)arg2;
- (void)_prepareLayout;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly) IKLockupElement *viewElement;

@end

@interface MPUExtrasMainMenuSectionMetrics : NSObject
{
    double _fittingWidth;
    _Bool _needsUpdate;
    long long _itemCount;
    struct CGSize *_calculatedSizes;
    id <MPUExtrasMainMenuSectionMetricsDataSource> _dataSource;
    UIFontDescriptor *_desiredFontDescriptor;
    UIFontDescriptor *_minimumFontDescriptor;
    double _desiredCellSpacing;
    double _minimumCellSpacing;
    double _desiredWidth;
    UIFontDescriptor *_fittingFontDescriptor;
    double _fittingCellSpacing;
    struct CGSize _totalFittingSize;
}

@property(readonly, nonatomic) struct CGSize totalFittingSize; // @synthesize totalFittingSize=_totalFittingSize;
@property(readonly, nonatomic) double fittingCellSpacing; // @synthesize fittingCellSpacing=_fittingCellSpacing;
@property(readonly, nonatomic) UIFontDescriptor *fittingFontDescriptor; // @synthesize fittingFontDescriptor=_fittingFontDescriptor;
@property(nonatomic) double desiredWidth; // @synthesize desiredWidth=_desiredWidth;
@property(nonatomic) double minimumCellSpacing; // @synthesize minimumCellSpacing=_minimumCellSpacing;
@property(nonatomic) double desiredCellSpacing; // @synthesize desiredCellSpacing=_desiredCellSpacing;
@property(retain, nonatomic) UIFontDescriptor *minimumFontDescriptor; // @synthesize minimumFontDescriptor=_minimumFontDescriptor;
@property(retain, nonatomic) UIFontDescriptor *desiredFontDescriptor; // @synthesize desiredFontDescriptor=_desiredFontDescriptor;
@property(nonatomic) __weak id <MPUExtrasMainMenuSectionMetricsDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (struct CGSize)_horizontalFittingSizeForFontDescriptor:(id)arg1 gutterSize:(double)arg2 itemCount:(long long)arg3 itemSizes:(out struct CGSize *)arg4;
- (void)_updateAllMetrics;
- (void)updateSizes;
- (struct CGSize)sizeForCellAtIndex:(long long)arg1;
- (void)setFittingWidth:(double)arg1;
- (void)_setNeedsUpdate;
- (void)_recalculateSizes;
- (void)dealloc;

@end

@interface MPUExtrasMainTemplateViewController : MPUExtrasTemplateViewController <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UICollectionViewDelegate, MPUExtrasMainMenuSectionMetricsDataSource>
{
    MPUExtrasMainMenuSectionMetrics *_mainMenuMetrics;
    UICollectionViewFlowLayout *_collectionViewLayout;
    NSLayoutConstraint *_collectionViewHeightConstraint;
    UICollectionView *_menuBarCollectionView;
    _Bool _hasHadMenuSelection;
    UIView *_menuBarView;
    id <UICollectionViewDelegate> _didSelectDelegate;
}

@property(nonatomic) __weak id <UICollectionViewDelegate> didSelectDelegate; // @synthesize didSelectDelegate=_didSelectDelegate;
@property(readonly, nonatomic) UIView *menuBarView; // @synthesize menuBarView=_menuBarView;
- (void).cxx_destruct;
- (void)_startBackgroundAudio;
- (void)_recalculateSizes;
- (struct CGSize)sectionMetrics:(id)arg1 sizeForItemAtIndex:(long long)arg2 withFontDescriptor:(id)arg3;
- (long long)numberOfItemsForSectionMetrics:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)_isFeatureItemAtIndexPath:(id)arg1;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (_Bool)_collectionView:(id)arg1 indexPathShouldDisplayAsSelected:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)_configureCell:(id)arg1 forIndexPath:(id)arg2;
- (id)_textElementAtIndex:(long long)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)_menuItems;
- (void)setCollectionViewHeight:(double)arg1;
- (void)_prepareLayout;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)_prepareCollectionView;
- (void)_dynamicTypeChanged;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;
- (id)templateElement;
- (_Bool)showsPlaceholder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasNavigationBar : UINavigationBar
{
    UILabel *_titleLabel;
    UIColor *_dodgeColor;
}

- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUExtrasNavigationBarButton : UIButton
{
    UIView *_backdropView;
    UIColor *_dodgeColor;
}

+ (id)extrasBackButton;
+ (id)extrasNavigationButton;
+ (id)textFilter;
+ (id)textDodgeColor;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface MPUExtrasNavigationController : UINavigationController <MPUExtrasLoadingViewDelegate, IKAppNavigationController>
{
    MPUExtrasLoadingView *_loadingView;
    UIViewController *_emptyViewController;
    MPUExtrasContext *_context;
    _Bool _clearStackOnPush;
}

@property(readonly, nonatomic) __weak MPUExtrasContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)_installBackButtonOnNavigationItem:(id)arg1 withTitle:(id)arg2;
- (void)_installDoneButtonOnNavigationItem:(id)arg1;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)willShowViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setViewControllers:(id)arg1 animated:(_Bool)arg2;
- (void)loadingView:(id)arg1 documentDidUpdate:(id)arg2 options:(id)arg3;
- (void)_presentDialogTemplate:(id)arg1;
- (void)_dismissViewController:(id)arg1;
- (id)documents;
- (id)_viewControllerForDocument:(id)arg1 index:(long long *)arg2;
- (void)removeDocument:(id)arg1;
- (void)replaceDocument:(id)arg1 withDocument:(id)arg2 options:(id)arg3;
- (void)insertDocument:(id)arg1 beforeDocument:(id)arg2 options:(id)arg3;
- (void)popToRootDocument;
- (void)popToDocument:(id)arg1;
- (void)popDocument;
- (void)pushDocument:(id)arg1 options:(id)arg2;
- (void)setClearsStackOnNextPush;
@property(readonly) MPUExtrasMainTemplateViewController *mainTemplateViewController;
- (void)finalizeMainTemplateOffset:(_Bool)arg1;
- (void)applyMainTemplateOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)viewDidLoad;
- (id)initWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasRootViewController : UIViewController <IKApplication, IKAppContextDelegate, UINavigationControllerDelegate, UICollectionViewDelegate, MPVideoOverlayDelegate>
{
    MPUExtrasNavigationController *_navigationController;
    NSObject<OS_dispatch_queue> *_imageRequestQueue;
    _Bool _didAttemptRestartAfterAppContextFailure;
    MPUExtrasMainTemplateViewController *_mainTemplateViewController;
    MPUExtrasContext *_context;
    MPUExtrasArtworkDataSource *_artworkDataSource;
    MPUExtrasFeatureContainerViewController *_featureContainer;
    IKAppContext *_applicationContext;
    id <IKAppDataStoring> _localStorage;
    id <IKAppDataStoring> _vendorStorage;
}

+ (id)currentController;
@property(retain, nonatomic) id <IKAppDataStoring> vendorStorage; // @synthesize vendorStorage=_vendorStorage;
@property(retain, nonatomic) id <IKAppDataStoring> localStorage; // @synthesize localStorage=_localStorage;
@property(retain, nonatomic) IKAppContext *applicationContext; // @synthesize applicationContext=_applicationContext;
@property(retain, nonatomic) MPUExtrasFeatureContainerViewController *featureContainer; // @synthesize featureContainer=_featureContainer;
@property(retain, nonatomic) MPUExtrasArtworkDataSource *artworkDataSource; // @synthesize artworkDataSource=_artworkDataSource;
@property(readonly, nonatomic) __weak MPUExtrasContext *context; // @synthesize context=_context;
@property(retain, nonatomic) MPUExtrasMainTemplateViewController *mainTemplateViewController; // @synthesize mainTemplateViewController=_mainTemplateViewController;
@property(readonly, nonatomic) UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
- (void).cxx_destruct;
- (void)overlayTappedBackButton:(id)arg1;
@property(readonly, nonatomic) UIView *mainMenuBar;
- (void)_finalizeMainTemplateOffset:(_Bool)arg1;
- (void)_applyMainTemplateOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)detectMainDocument:(id)arg1;
- (_Bool)_setMainDocumentWithViewController:(id)arg1;
- (void)_setNavigationController:(id)arg1;
- (id)_createDataStorageForIdentifier:(id)arg1;
- (id)navigationController:(id)arg1 interactionControllerForAnimationController:(id)arg2;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLoad;
- (_Bool)prefersStatusBarHidden;
- (void)appContext:(id)arg1 didStopWithOptions:(id)arg2;
- (void)appContext:(id)arg1 didFailWithError:(id)arg2;
- (void)appContext:(id)arg1 didStartWithOptions:(id)arg2;
- (void)appContext:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2;
- (id)navigationControllerForContext:(id)arg1;
- (id)deviceConfigForContext:(id)arg1;
- (id)appLaunchParams;
- (id)vendorIdentifier;
- (id)appIdentifier;
- (_Bool)shouldIgnoreJSValidation;
- (id)appJSURL;
- (_Bool)appIsTrusted;
- (void)popToFeatureOrMain;
- (void)start;
- (void)_stopOldContextIfNeeded;
- (void)dealloc;
- (id)initWithContext:(id)arg1;
- (void)_setUpForApplication;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasShowcaseTemplateViewController : MPUExtrasTemplateViewController <MPUExtrasCarouselViewControllerDataSource, MPUExtrasCarouselViewControllerDelegate, MPUExtrasImageBrowserViewControllerDataSource, MPUExtrasNavigationAnimationControllerProvider, MPUExtrasZoomingImageInteractiveTransitionSource, MPUExtrasZoomingImageTransitionParticipant>
{
    _Bool _supportsOneupMode;
    MPUExtrasZoomingImageTransitionController *_activeZoomingImageInteractiveTransitionController;
    NSArray *_bannerButtonElements;
    NSArray *_carouselLockupElements;
    MPUExtrasCarouselViewController *_carouselViewController;
    MPUExtrasImageBrowserViewController *_imageBrowserViewController;
    NSDictionary *_overriddenFullscreenImages;
    unsigned long long _autohighlightIndex;
}

@property(nonatomic) unsigned long long autohighlightIndex; // @synthesize autohighlightIndex=_autohighlightIndex;
@property(nonatomic) _Bool supportsOneupMode; // @synthesize supportsOneupMode=_supportsOneupMode;
@property(retain, nonatomic) NSDictionary *overriddenFullscreenImages; // @synthesize overriddenFullscreenImages=_overriddenFullscreenImages;
@property(retain, nonatomic) MPUExtrasImageBrowserViewController *imageBrowserViewController; // @synthesize imageBrowserViewController=_imageBrowserViewController;
@property(retain, nonatomic) MPUExtrasCarouselViewController *carouselViewController; // @synthesize carouselViewController=_carouselViewController;
@property(retain, nonatomic) NSArray *carouselLockupElements; // @synthesize carouselLockupElements=_carouselLockupElements;
@property(retain, nonatomic) NSArray *bannerButtonElements; // @synthesize bannerButtonElements=_bannerButtonElements;
@property(retain, nonatomic) MPUExtrasZoomingImageTransitionController *activeZoomingImageInteractiveTransitionController; // @synthesize activeZoomingImageInteractiveTransitionController=_activeZoomingImageInteractiveTransitionController;
- (void).cxx_destruct;
- (void)_pushImageBrowserWithVisibleItemIndex:(unsigned long long)arg1;
- (id)_mainChildViewController;
- (void)_loadTextElement:(id)arg1 textAttributes:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long indexOfVisibleItem;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)handlePinchGestureForZoomingImageInteractiveTransitionWithContext:(id)arg1;
- (id)animationControllerForNavigationOperation:(long long)arg1 fromViewController:(id)arg2 toViewController:(id)arg3;
- (void)imageBrowserViewController:(id)arg1 loadDescriptionAtIndex:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)imageBrowserViewController:(id)arg1 loadSubtitleAtIndex:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)imageBrowserViewController:(id)arg1 loadTitleAtIndex:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)imageBrowserViewController:(id)arg1 loadImageAtIndex:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (unsigned long long)numberOfImagesForBrowserViewController:(id)arg1;
- (void)carouselViewController:(id)arg1 didSelectItemAtIndex:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)carouselViewController:(id)arg1 didHighlightItemAtIndex:(unsigned long long)arg2;
- (unsigned long long)carouselSize;
- (void)carouselViewController:(id)arg1 configureCarouselCollectionViewCell:(id)arg2 forItemAtIndex:(unsigned long long)arg3 withThumbnailImageContainerSize:(struct CGSize)arg4;
- (unsigned long long)numberOfItemsInCarouselViewController:(id)arg1;
- (void)_prepareLayout;
- (_Bool)showsPlaceholder;
@property(readonly, nonatomic) IKShowcaseTemplate *templateElement;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasSlideshowArtworkCatalogHelper : NSObject
{
    MPArtworkCatalog *_artworkCatalog;
}

@property(retain, nonatomic) MPArtworkCatalog *artworkCatalog; // @synthesize artworkCatalog=_artworkCatalog;
- (void).cxx_destruct;

@end

@interface MPUExtrasSlideshowTemplateViewController : MPUExtrasTemplateViewController <MPUExtrasSlideshowViewControllerDataSource, MPUExtrasZoomingImageTransitionParticipant>
{
    _Bool _preventNavbarAutohide;
    MPUExtrasSlideshowViewController *_slideshowViewController;
    NSArray *_imageElements;
    UITapGestureRecognizer *_tapGestureRecognizer;
}

@property(retain, nonatomic) UITapGestureRecognizer *tapGestureRecognizer; // @synthesize tapGestureRecognizer=_tapGestureRecognizer;
@property(retain, nonatomic) NSArray *imageElements; // @synthesize imageElements=_imageElements;
@property(retain, nonatomic) MPUExtrasSlideshowViewController *slideshowViewController; // @synthesize slideshowViewController=_slideshowViewController;
- (void).cxx_destruct;
- (void)_toggleVisibilityOfNavigationBar;
- (void)_firstImageLoadedHideNavigationBar;
- (void)_handleTap:(id)arg1;
- (_Bool)shouldPerformZoomingImageTransitionFromImageElement:(id)arg1 toImageAtIndex:(unsigned long long)arg2;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)slideshowViewController:(id)arg1 loadImageAtIndex:(unsigned long long)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (unsigned long long)numberOfImagesForSlideshowViewController:(id)arg1;
- (_Bool)showsPlaceholder;
@property(readonly, nonatomic) IKSlideshowElement *templateElement;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)prefersStatusBarHidden;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasSlideshowViewController : UIViewController <MPUExtrasZoomingImageTransitionParticipant>
{
    _Bool _animatingTransition;
    _Bool _viewVisible;
    id <MPUExtrasSlideshowViewControllerDataSource> _dataSource;
    unsigned long long _transitionStyle;
    double _transitionInterval;
    unsigned long long _visibleImageIndex;
    MPUExtrasConstrainedArtworkContainerView *_disappearingImageContainerView;
    MPUExtrasConstrainedArtworkContainerView *_imageContainerView;
    UIImage *_nextImage;
    NSTimer *_transitionTimer;
}

@property(retain, nonatomic) NSTimer *transitionTimer; // @synthesize transitionTimer=_transitionTimer;
@property(retain, nonatomic) UIImage *nextImage; // @synthesize nextImage=_nextImage;
@property(retain, nonatomic) MPUExtrasConstrainedArtworkContainerView *imageContainerView; // @synthesize imageContainerView=_imageContainerView;
@property(retain, nonatomic) MPUExtrasConstrainedArtworkContainerView *disappearingImageContainerView; // @synthesize disappearingImageContainerView=_disappearingImageContainerView;
@property(nonatomic, getter=isViewVisible) _Bool viewVisible; // @synthesize viewVisible=_viewVisible;
@property(nonatomic, getter=isAnimatingTransition) _Bool animatingTransition; // @synthesize animatingTransition=_animatingTransition;
@property(nonatomic) unsigned long long visibleImageIndex; // @synthesize visibleImageIndex=_visibleImageIndex;
@property(nonatomic) double transitionInterval; // @synthesize transitionInterval=_transitionInterval;
@property(nonatomic) unsigned long long transitionStyle; // @synthesize transitionStyle=_transitionStyle;
@property(nonatomic) __weak id <MPUExtrasSlideshowViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (void)_transitionToNextImageIfAppropriate;
- (void)_reload;
- (void)_prepareNextImageAndScheduleTransitionTimerIfAppropriate;
- (unsigned long long)_numberOfImages;
- (void)_loadImageContainerViewIfAppropriateWithImage:(id)arg1;
- (void)_transitionDidComplete;
- (void)_performWipeTransition;
- (void)_performPushTransition;
- (void)_performInstantaneousTransition;
- (void)_performDissolveTransition;
- (void)_transitionTimerDidFire:(id)arg1;
- (void)_scheduleTransitionTimer;
- (void)_invalidateTransitionTimer;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (long long)preferredStatusBarStyle;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasStackCollectionCell : UICollectionViewCell
{
    NSArray *_fitConstraints;
    _Bool _needsViewWillAppear;
    MPUExtrasStackTemplateViewController *_parentViewController;
    MPUExtrasGridElementViewController *_viewController;
    MPUExtrasGridSectionHeaderStyle *_sectionStyle;
}

@property(readonly, nonatomic) MPUExtrasGridSectionHeaderStyle *sectionStyle; // @synthesize sectionStyle=_sectionStyle;
@property(retain, nonatomic) MPUExtrasGridElementViewController *viewController; // @synthesize viewController=_viewController;
@property(retain, nonatomic) MPUExtrasStackTemplateViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
- (void).cxx_destruct;
- (void)willMoveToSuperview:(id)arg1;

@end

@interface MPUExtrasStackTemplateViewController : MPUExtrasTemplateViewController <UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_collectionView;
    UICollectionViewFlowLayout *_collectionViewLayout;
    NSMutableDictionary *_viewControllers;
    NSMutableDictionary *_sizes;
    MPUExtrasBannerController *_bannerViewController;
}

- (void).cxx_destruct;
- (id)_viewControllerForIndexPath:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)_prepareLayout;
- (id)sectionStyle;
- (id)templateElement;
- (id)contentScrollView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)_dynamicTypeDidChange;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(id)arg2 context:(id)arg3;
- (_Bool)showsPlaceholder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasTableView : UITableView
{
}

- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface MPUExtrasTableViewCell : UITableViewCell
{
    MPUExtrasConstrainedArtworkContainerView *_artworkContainer;
    UIView *_textContainerView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    NSLayoutConstraint *_minimumHeightConstraint;
    NSArray *_topConstraints;
    NSArray *_bottomConstraints;
    NSLayoutConstraint *_leadingViewConstraint;
    NSLayoutConstraint *_artworkSpacerHeightConstraint;
    NSLayoutConstraint *_textSpacerHeightConstraint;
    NSLayoutConstraint *_artworkWidthConstraint;
    NSLayoutConstraint *_artworkHeightConstraint;
    NSLayoutConstraint *_textLeadingConstraint;
    NSLayoutConstraint *_textTrailingConstraint;
    NSLayoutConstraint *_topLabelConstraint;
    MPUContentSizeLayoutConstraint *_subtitleBaselineConstraint;
    NSLayoutConstraint *_bottomLabelConstraint;
    IKListItemLockupElement *_element;
}

@property(nonatomic) IKListItemLockupElement *element; // @synthesize element=_element;
@property(readonly, nonatomic) MPUExtrasConstrainedArtworkContainerView *artworkContainerView; // @synthesize artworkContainerView=_artworkContainer;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)configureForListItemLockupElement:(id)arg1 wide:(_Bool)arg2;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface MPUExtrasTableViewHeaderView : UITableViewHeaderFooterView
{
}

- (void)_dynamicTypeDidChange;
- (struct CGSize)intrinsicContentSize;
- (void)configureForHeaderElement:(id)arg1;
- (void)dealloc;
- (id)initWithReuseIdentifier:(id)arg1;

@end

@interface MPUExtrasVideoTimeline : NSObject
{
    NSArray *_timelineElements;
    NSArray *_events;
}

@property(readonly, nonatomic) NSArray *events; // @synthesize events=_events;
- (void).cxx_destruct;
- (id)description;
- (id)eventForTime:(double)arg1;
- (id)initWithTimelineElements:(id)arg1;

@end

@interface MPUExtrasVideoTimelineEvent : NSObject
{
    IKLockupElement *_lockup;
    UIImage *_image;
    _Bool _isFirstEvent;
    double _offset;
    double _duration;
    MPUExtrasVideoTimelineEvent *_previous;
    MPUExtrasVideoTimelineEvent *_next;
}

@property(nonatomic) __weak MPUExtrasVideoTimelineEvent *next; // @synthesize next=_next;
@property(readonly, nonatomic) __weak MPUExtrasVideoTimelineEvent *previous; // @synthesize previous=_previous;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic) _Bool isFirstEvent; // @synthesize isFirstEvent=_isFirstEvent;
- (void).cxx_destruct;
- (id)description;
- (void)loadImage:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *subHeader;
@property(readonly, nonatomic) NSString *title;
- (id)initWithElement:(id)arg1 prev:(id)arg2;

@end

@interface MPUExtrasZoomableImageView : UIScrollView <UIScrollViewDelegate, MPUExtrasZoomingImageTransitionParticipant>
{
    UIImage *_image;
    double _scaleToRestoreAfterResize;
    UIImageView *_zoomView;
    struct CGSize _imageSize;
    struct CGPoint _pointToCenterAfterResize;
}

@property(retain, nonatomic) UIImageView *zoomView; // @synthesize zoomView=_zoomView;
@property(nonatomic) double scaleToRestoreAfterResize; // @synthesize scaleToRestoreAfterResize=_scaleToRestoreAfterResize;
@property(nonatomic) struct CGPoint pointToCenterAfterResize; // @synthesize pointToCenterAfterResize=_pointToCenterAfterResize;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)_updateMinimumAndMaximumZoomScalesForCurrentBounds;
- (void)_recoverFromResizing;
- (void)_prepareToResize;
- (struct CGPoint)_minimumContentOffset;
- (struct CGPoint)_maximumContentOffset;
- (void)zoomToPoint:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)finalizeZoomingImageTransitionWithContext:(id)arg1 transitionFinished:(_Bool)arg2;
- (void)performZoomingImageTransitionWithContext:(id)arg1;
- (void)prepareZoomingImageTransitionWithContext:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUExtrasZoomingImageInteractiveTransitionSourceContext : NSObject
{
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    unsigned long long _itemIndex;
    unsigned long long _supportedZoomingImageTransitionDirections;
    NSString *_identifier;
}

@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(nonatomic) unsigned long long supportedZoomingImageTransitionDirections; // @synthesize supportedZoomingImageTransitionDirections=_supportedZoomingImageTransitionDirections;
@property(nonatomic) unsigned long long itemIndex; // @synthesize itemIndex=_itemIndex;
@property(retain, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer; // @synthesize pinchGestureRecognizer=_pinchGestureRecognizer;
- (void).cxx_destruct;

@end

@interface MPUExtrasZoomingImageTransitionContext : NSObject
{
    _Bool _interactive;
    MPUExtrasBorderedImageView *_zoomingImageView;
    unsigned long long _itemIndex;
    unsigned long long _appearState;
}

@property(nonatomic, getter=isInteractive) _Bool interactive; // @synthesize interactive=_interactive;
@property(nonatomic) unsigned long long appearState; // @synthesize appearState=_appearState;
@property(nonatomic) unsigned long long itemIndex; // @synthesize itemIndex=_itemIndex;
@property(retain, nonatomic) MPUExtrasBorderedImageView *zoomingImageView; // @synthesize zoomingImageView=_zoomingImageView;
- (void).cxx_destruct;
- (id)initWithZoomingImageView:(id)arg1 itemIndex:(unsigned long long)arg2 appearState:(unsigned long long)arg3 isInteractive:(_Bool)arg4;

@end

@interface MPUExtrasZoomingImageTransitionController : UIPercentDrivenInteractiveTransition <UIViewControllerAnimatedTransitioning, MPUExtrasOptionallyInteractiveAnimationController>
{
    _Bool _interactive;
    _Bool _shouldUseSpringAnimation;
    unsigned long long _itemIndex;
    double _initialPinchScale;
    MPUExtrasBorderedImageView *_zoomingImageView;
    struct CGPoint _initialPinchCenter;
}

@property(retain, nonatomic) MPUExtrasBorderedImageView *zoomingImageView; // @synthesize zoomingImageView=_zoomingImageView;
@property(nonatomic) double initialPinchScale; // @synthesize initialPinchScale=_initialPinchScale;
@property(nonatomic) struct CGPoint initialPinchCenter; // @synthesize initialPinchCenter=_initialPinchCenter;
@property(nonatomic) _Bool shouldUseSpringAnimation; // @synthesize shouldUseSpringAnimation=_shouldUseSpringAnimation;
@property(nonatomic, getter=isInteractive) _Bool interactive; // @synthesize interactive=_interactive;
@property(nonatomic) unsigned long long itemIndex; // @synthesize itemIndex=_itemIndex;
- (void).cxx_destruct;
- (double)_maximumDistanceTravelledForPoints:(struct CGPoint *)arg1 count:(unsigned long long)arg2 currentTransform:(struct CGAffineTransform)arg3 finalTransform:(struct CGAffineTransform)arg4;
- (double)_destinationScale;
- (float)_desiredSpeedForNonInteractiveAnimationWithDuration:(double)arg1 deferredTransform:(struct CGAffineTransform)arg2 finalTransform:(struct CGAffineTransform)arg3;
- (void)completeInteractiveTransitionWithPinchGestureRecognizer:(id)arg1;
- (void)updateInteractiveTransitionWithPinchGestureRecognizer:(id)arg1;
- (void)prepareInteractiveTransitionWithPinchGestureRecognizer:(id)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)initWithItemIndex:(unsigned long long)arg1 forInteractiveTransition:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUGradientView : UIView
{
}

+ (Class)layerClass;
@property(readonly, nonatomic) CAGradientLayer *gradientLayer;

@end

@interface MPUIndeterminateProgressIndicatorView : UIView
{
    double _progressLineWidth;
    double _progressGap;
}

@property(nonatomic) double progressGap; // @synthesize progressGap=_progressGap;
@property(nonatomic) double progressLineWidth; // @synthesize progressLineWidth=_progressLineWidth;
- (void)_updateAnimation;
- (void)_willEnterForeground:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)tintColorDidChange;
- (void)didMoveToSuperview;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUInsetProxyScrollView : UIScrollView
{
}

- (void)setScrollIndicatorInsets:(struct UIEdgeInsets)arg1;
- (void)setContentInset:(struct UIEdgeInsets)arg1;

// Remaining properties
@property(nonatomic) id <MPUInsetProxyScrollViewDelegate> delegate;

@end

@interface MPUItemOfferButton : SKUIItemOfferButton
{
    struct UIEdgeInsets _hitRectInsets;
}

@property(nonatomic) struct UIEdgeInsets hitRectInsets; // @synthesize hitRectInsets=_hitRectInsets;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGRect)hitRect;
- (struct CGSize)intrinsicContentSize;

@end

@interface MPULyricsView : UIView
{
    _UIBackdropView *_backdropView;
    UITextView *_textView;
    NSString *_text;
}

@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (void)setHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUMatchMediaDownloadObserver : MPUMediaDownloadObserver <MPStoreDownloadManagerObserver>
{
    MPStoreDownload *_storeDownload;
}

- (void).cxx_destruct;
- (void)downloadManager:(id)arg1 downloadDidProgress:(id)arg2;
- (_Bool)isRestoreDownload;
- (_Bool)isPaused;
- (_Bool)isPurchasing;
- (void)resumeDownload;
- (void)pauseDownload;
- (void)cancelDownload;
- (_Bool)canCancel;
- (_Bool)isCurrentlyPlayable;
- (double)rawDownloadTotal;
- (double)rawDownloadProgress;
- (double)downloadProgress;
- (void)_onQueue_invalidate;
- (void)dealloc;
- (id)initWithStoreDownload:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUNowPlayingTitlesView : UIView
{
    MPUMarqueeView *_titleMarqueeView;
    MPUMarqueeView *_detailMarqueeView;
    UILabel *_titleLabel;
    UILabel *_detailLabel;
    UIImageView *_explicitImageView;
    _Bool _needsLabelUpdate;
    _Bool _explicit;
    long long _style;
    NSDictionary *_titleTextAttributes;
    NSDictionary *_detailTextAttributes;
    NSString *_albumText;
    NSString *_artistText;
    NSString *_stationNameText;
    double _textMargin;
    double _titleLeading;
    NSString *_titleText;
    UIImage *_explicitImage;
    struct UIEdgeInsets _titleMarqueeEdgeInsets;
    struct UIEdgeInsets _detailMarqueeEdgeInsets;
}

+ (Class)labelClass;
@property(nonatomic) struct UIEdgeInsets detailMarqueeEdgeInsets; // @synthesize detailMarqueeEdgeInsets=_detailMarqueeEdgeInsets;
@property(nonatomic) struct UIEdgeInsets titleMarqueeEdgeInsets; // @synthesize titleMarqueeEdgeInsets=_titleMarqueeEdgeInsets;
@property(retain, nonatomic) UIImage *explicitImage; // @synthesize explicitImage=_explicitImage;
@property(copy, nonatomic) NSString *titleText; // @synthesize titleText=_titleText;
@property(nonatomic) double titleLeading; // @synthesize titleLeading=_titleLeading;
@property(nonatomic) double textMargin; // @synthesize textMargin=_textMargin;
@property(copy, nonatomic) NSString *stationNameText; // @synthesize stationNameText=_stationNameText;
@property(nonatomic, getter=isExplicit) _Bool explicit; // @synthesize explicit=_explicit;
@property(copy, nonatomic) NSString *artistText; // @synthesize artistText=_artistText;
@property(copy, nonatomic) NSString *albumText; // @synthesize albumText=_albumText;
@property(retain, nonatomic) NSDictionary *detailTextAttributes; // @synthesize detailTextAttributes=_detailTextAttributes;
@property(retain, nonatomic) NSDictionary *titleTextAttributes; // @synthesize titleTextAttributes=_titleTextAttributes;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (void)_updateAttributedTitleLabel;
- (id)_detailMarqueeView;
- (id)_titleMarqueeView;
- (id)_detailLabel;
- (id)_titleLabel;
- (void)resetMarqueePositions;
@property(readonly, nonatomic) double titleBaselineOffsetFromBottom;
- (void)setMarqueeEnabled:(_Bool)arg1 withOptions:(long long)arg2;
@property(nonatomic, getter=isMarqueeEnabled) _Bool marqueeEnabled;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1;

@end

@interface MPUMediaControlsTitlesView : MPUNowPlayingTitlesView <SBUIControlCenterControlObserver, MPUContentSizeCategoryChanging>
{
    CALayer *_titleEdgesLayerMask;
    CALayer *_detailEdgesLayerMask;
    NSString *_appDisplayName;
    _Bool _displayingAppName;
    _Bool _highlighted;
    long long _mediaControlsStyle;
    id <MPUMediaControlsTitlesViewDelegate> _delegate;
}

+ (id)detailTextColorForMediaControlsStyle:(long long)arg1 highlighted:(_Bool)arg2;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) __weak id <MPUMediaControlsTitlesViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long mediaControlsStyle; // @synthesize mediaControlsStyle=_mediaControlsStyle;
- (void).cxx_destruct;
- (id)_createEdgesLayerMask;
- (void)_touchControlTapped:(id)arg1;
- (void)_touchControlDeactivate:(id)arg1;
- (void)_touchControlActivate:(id)arg1;
- (void)_setGlowEnabled:(_Bool)arg1 forLabel:(id)arg2;
- (id)_detailTextAttributes;
- (id)_titleTextAttributes;
- (void)updateTextForContentSizeCategory:(id)arg1;
- (void)updateTrackInformationWithNowPlayingInfo:(id)arg1;
- (void)updateNowPlayingAppDisplayName:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithMediaControlsStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUMediaControlsControlCenterTitlesView : MPUMediaControlsTitlesView
{
}

- (Class)labelClass;

@end

@interface MPUMediaControlsVolumeView : UIView <MPVolumeControllerDelegate>
{
    UIView *_warningView;
    _Bool _warningIndicatorBlinking;
    NSTimer *_warningBlinkTimer;
    NSTimer *_volumeCommitTimer;
    double _timeStoppedTracking;
    long long _style;
    UISlider *_slider;
    MPVolumeController *_volumeController;
}

@property(readonly, nonatomic) MPVolumeController *volumeController; // @synthesize volumeController=_volumeController;
@property(readonly, nonatomic) UISlider *slider; // @synthesize slider=_slider;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (void)_removeVolumeSliderInertia;
- (_Bool)_volumeSliderDynamicsEnabled;
- (void)_stopBlinkingWarningView;
- (void)_layoutVolumeWarningView;
- (void)_blinkWarningView;
- (void)_beginBlinkingWarningView;
- (id)_warningTrackImage;
- (id)_createVolumeSliderView;
- (void)_commitCurrentVolumeValue;
- (void)_stopVolumeCommitTimer;
- (void)_beginVolumeCommitTimer;
- (void)_volumeSliderStoppedChanging:(id)arg1;
- (void)_volumeSliderValueChanged:(id)arg1;
- (void)_volumeSliderBeganChanging:(id)arg1;
- (_Bool)_shouldStartBlinkingVolumeWarningIndicator;
- (void)volumeController:(id)arg1 volumeWarningStateDidChange:(long long)arg2;
- (void)volumeController:(id)arg1 EUVolumeLimitEnforcedDidChange:(_Bool)arg2;
- (void)volumeController:(id)arg1 EUVolumeLimitDidChange:(float)arg2;
- (void)volumeController:(id)arg1 volumeValueDidChange:(float)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)updateSystemVolumeLevel;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUMiniPlayerActionsViewController : UITableViewController
{
    NSArray *_actions;
    id <MPUMiniPlayerActionsViewControllerDelegate> _delegate;
    MPAVItem *_item;
}

+ (id)_titleForAction:(long long)arg1;
+ (id)_imageForAction:(long long)arg1;
+ (id)_actionsForItem:(id)arg1;
+ (_Bool)hasActionsForItem:(id)arg1;
@property(readonly, nonatomic) MPAVItem *item; // @synthesize item=_item;
@property(nonatomic) __weak id <MPUMiniPlayerActionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateActions;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
- (id)initWithItem:(id)arg1;

@end

@interface MPUMiniPlayerCoordinator : NSObject <MPPlaybackControlsDelegate, MPTransportControlsTarget, MPUMiniPlayerActionsViewControllerDelegate>
{
    MPQueueFeeder *_feeder;
    _UINavigationControllerPalette *_miniPlayerPalette;
    MPUMiniPlayerPlaybackControlsView *_playbackControlsView;
    UINavigationController *_navigationController;
    NSTimer *_skipInformationRevealTimer;
    UIViewController *_viewController;
    MPAVController *_player;
}

@property(readonly, nonatomic) MPAVController *player; // @synthesize player=_player;
- (void).cxx_destruct;
- (void)_updateMiniPlayerPaletteForNavigationController:(id)arg1;
- (void)_updateMiniPlayerAttachment;
- (void)_setFeeder:(id)arg1;
- (void)_scheduleSkipInformationRevealTimer;
- (void)_revealSkipInformationMomentarily;
- (void)_invalidateSkipInformationRevealTimer;
- (void)_skipLimitDidChangeNotification:(id)arg1;
- (void)_itemDidChangeNotification:(id)arg1;
- (void)_didSkipTrackNotification:(id)arg1;
@property(readonly, nonatomic) UIViewController *_viewController;
@property(readonly, nonatomic) MPUMiniPlayerPlaybackControlsView *_playbackControlsView;
@property(readonly, nonatomic) UINavigationController *_navigationController;
- (Class)_miniPlayerPlaybackControlsViewClass;
- (id)_currentProspectivePlaybackInformation;
- (void)willShowViewController:(id)arg1 inNavigationController:(id)arg2;
- (void)prospectivePlaybackInformationDidChangeForViewController:(id)arg1;
- (void)navigationController:(id)arg1 traitCollectionDidChange:(id)arg2;
- (void)miniPlayerActionsViewController:(id)arg1 didSelectAction:(long long)arg2;
- (_Bool)transportControls:(id)arg1 tappedButtonPart:(unsigned long long)arg2;
- (_Bool)controlsOverlay:(id)arg1 shouldUseDetailScrubberForItem:(id)arg2;
- (void)dealloc;
- (id)initWithPlayer:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUMiniPlayerPlaybackControlsView : MPPlaybackControlsView <MPUMiniPlayerActionsViewControllerDelegate, UIPopoverControllerDelegate>
{
    SKUICircleProgressIndicator *_createActivityIndicatorView;
    UIButton *_createButton;
    UIPopoverController *_createPopoverController;
    MPUMiniPlayerActionsViewController *_createViewController;
    UIView *_hairlineView;
    _Bool _isDetailScrubbing;
    MPUNowPlayingTitlesView *_titlesView;
    MPUMiniPlayerTransportControls *_transportControls;
    MPVolumeSlider *_volumeSlider;
    _Bool _showingCreateLoadingIndicator;
    MPUProspectivePlaybackInformation *_prospectivePlaybackInformation;
    MPUSkipLimitView *_skipLimitView;
}

+ (unsigned long long)defaultVisibleParts;
@property(readonly, nonatomic) MPUSkipLimitView *skipLimitView; // @synthesize skipLimitView=_skipLimitView;
@property(nonatomic, getter=isShowingCreateLoadingIndicator) _Bool showingCreateLoadingIndicator; // @synthesize showingCreateLoadingIndicator=_showingCreateLoadingIndicator;
@property(retain, nonatomic) MPUProspectivePlaybackInformation *prospectivePlaybackInformation; // @synthesize prospectivePlaybackInformation=_prospectivePlaybackInformation;
- (void).cxx_destruct;
- (void)_updateTitles;
- (void)_updatePlaybackControlsAnimated:(_Bool)arg1;
- (void)_updateMarqueeStatusAllowingCurrentMarqueeToFinish:(_Bool)arg1;
- (void)_updateForChangedShowingCreateLoadingIndicator;
- (void)_layoutSkipLimitView;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_playerContentsChangedNotification:(id)arg1;
- (void)_itemTitlesDidChangeNotification:(id)arg1;
- (void)_itemIsExplicitDidChangeNotification:(id)arg1;
- (void)_createButtonAction:(id)arg1;
- (_Bool)_wantsCreateButtonForItem:(id)arg1;
- (_Bool)_updateTitlesInView:(id)arg1 forItem:(id)arg2;
- (void)_updatePlaybackControls;
@property(readonly, nonatomic) MPUMiniPlayerTransportControls *_transportControls;
- (Class)_transportControlsClassForItem:(id)arg1;
@property(readonly, nonatomic) double _titleBaselineY;
- (id)_titleTextForItem:(id)arg1;
- (void)_setupVisibleAndDisabledPartsForItem:(id)arg1;
- (Class)_miniPlayerActionsViewControllerClass;
@property(readonly, nonatomic, getter=_isDetailScrubbing) _Bool _detailScrubbing;
@property(readonly, nonatomic) UIView *_createButton;
- (id)_artistTextForItem:(id)arg1;
- (_Bool)_allowsScrubbingForItem:(id)arg1;
- (id)_albumTextForItem:(id)arg1;
- (void)setProspectivePlaybackInformation:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) double titleMaxX;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)transportControlsDidLayoutSubviews:(id)arg1;
- (void)miniPlayerActionsViewController:(id)arg1 didSelectAction:(long long)arg2;
- (_Bool)shouldOverrideProgressTimeLabelStyle;
- (id)shuffleButtonImage;
- (void)setPlayer:(id)arg1;
- (void)setItem:(id)arg1;
@property(nonatomic) __weak id <MPPlaybackControlsDelegate><MPTransportControlsTarget><MPUMiniPlayerActionsViewControllerDelegate> delegate;
- (id)repeatButtonImage;
- (id)newProgressIndicator;
- (void)detailSlider:(id)arg1 didChangeScrubSpeed:(long long)arg2;
- (void)detailSliderTrackingDidCancel:(id)arg1;
- (void)detailSliderTrackingDidEnd:(id)arg1;
- (void)detailSliderTrackingDidBegin:(id)arg1;
- (_Bool)detailScrubbingHidesControls;
- (long long)buttonType;
- (void)tintColorDidChange;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUMiniPlayerTransportControls : MPTransportControls
{
    MPQueueFeeder *_feeder;
    id <MPUMiniPlayerTransportControlsDelegate> _delegate;
    MPUProspectivePlaybackInformation *_prospectivePlaybackInformation;
}

+ (_Bool)buttonImagesUseBackgroundImage;
+ (long long)buttonType;
+ (Class)buttonClass;
@property(retain, nonatomic) MPUProspectivePlaybackInformation *prospectivePlaybackInformation; // @synthesize prospectivePlaybackInformation=_prospectivePlaybackInformation;
@property(nonatomic) __weak id <MPUMiniPlayerTransportControlsDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_skipLimitDidChangeNotification:(id)arg1;
- (void)_updateForItemChangeWithPreviousItem:(id)arg1 animated:(_Bool)arg2;
- (void)_prospectivePlaybackInformationDidChangeAnimated:(_Bool)arg1;
- (void)setProspectivePlaybackInformation:(id)arg1 animated:(_Bool)arg2;
- (_Bool)usesTintColorForControls;
- (id)tintColorForPart:(unsigned long long)arg1;
- (void)setItem:(id)arg1;
- (void)reloadForAdditions:(id)arg1 removals:(id)arg2 animate:(_Bool)arg3;
- (id)newButtonForPart:(unsigned long long)arg1;
- (id)buttonImageForPart:(unsigned long long)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface MPUMoreListController : UIMoreListController
{
}

- (id)_existingViewControllerAtIndexPath:(id)arg1;
- (id)_configurationForViewControllerAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)viewDidLoad;

@end

@interface MPUMoreNavigationController : UIMoreNavigationController
{
}

+ (Class)_moreListControllerClass;

@end

@interface MPUNavigationController : UINavigationController
{
    _Bool _supportsStandardInterfaceOrientations;
    CDUnknownBlockType _overrideSupportedInterfaceOrientationsHandler;
}

@property(nonatomic) _Bool supportsStandardInterfaceOrientations; // @synthesize supportsStandardInterfaceOrientations=_supportsStandardInterfaceOrientations;
@property(copy, nonatomic) CDUnknownBlockType overrideSupportedInterfaceOrientationsHandler; // @synthesize overrideSupportedInterfaceOrientationsHandler=_overrideSupportedInterfaceOrientationsHandler;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface MPUNowPlayingController : NSObject
{
    NSObject<OS_dispatch_source> *_timeInformationTimer;
    NSDictionary *_currentNowPlayingInfo;
    double _currentElapsed;
    double _currentDuration;
    long long _isPlaying;
    NSString *_currentNowPlayingAppDisplayID;
    _Bool _currentNowPlayingAppIsRunning;
    _Bool _isRegisteredForNowPlayingNotifications;
    _Bool _isUpdatingNowPlayingInfo;
    _Bool _isUpdatingPlaybackState;
    _Bool _isUpdatingNowPlayingApp;
    UIImage *_cachedNowPlayingArtwork;
    _Bool _cachedArtworkDirty;
    id <MPUNowPlayingDelegate> _delegate;
    double _timeInformationUpdateInterval;
}

@property(nonatomic) double timeInformationUpdateInterval; // @synthesize timeInformationUpdateInterval=_timeInformationUpdateInterval;
@property(readonly, nonatomic) double currentElapsed; // @synthesize currentElapsed=_currentElapsed;
@property(nonatomic) __weak id <MPUNowPlayingDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateTimeInformation;
- (void)_updateNowPlayingAppDisplayID;
- (void)_updatePlaybackState;
- (void)_updateCurrentNowPlaying;
- (void)_stopUpdatingTimeInformation;
- (void)_unregisterForNotifications;
- (void)_startUpdatingTimeInformation;
- (void)_registerForNotifications;
- (void)update;
- (void)stopUpdating;
- (void)startUpdating;
@property(readonly, nonatomic) double currentDuration;
@property(readonly, nonatomic) NSString *nowPlayingAppDisplayID;
@property(readonly, nonatomic) _Bool isPlaying;
@property(readonly, nonatomic) UIImage *currentNowPlayingArtwork;
@property(readonly, nonatomic) NSDictionary *currentNowPlayingInfo;
- (void)dealloc;
- (id)init;

@end

@interface MPUNowPlayingPlaybackControlsView : MPPlaybackControlsView <MPDetailSliderDelegate, MPUNowPlayingTransportControlsDelegate, UIActionSheetDelegate>
{
    UIActionSheet *_createActionSheet;
    SKUICircleProgressIndicator *_createActivityIndicatorView;
    UIButton *_createButton;
    NSArray *_createButtonActions;
    _Bool _isDetailScrubbing;
    MPUNowPlayingTransportControls *_transportControls;
    MPVolumeSlider *_volumeSlider;
    _Bool _usesMiniProgressControl;
    MPUApplicationDefaults *_applicationDefaults;
    long long _orientation;
    MPUSkipLimitView *_skipLimitView;
    UIView *_titlesView;
    struct CGRect _artworkFrame;
}

+ (unsigned long long)defaultVisibleParts;
@property(readonly, nonatomic) UIActionSheet *createActionSheet; // @synthesize createActionSheet=_createActionSheet;
@property(nonatomic) _Bool usesMiniProgressControl; // @synthesize usesMiniProgressControl=_usesMiniProgressControl;
@property(nonatomic) __weak UIView *titlesView; // @synthesize titlesView=_titlesView;
@property(readonly, nonatomic) MPUSkipLimitView *skipLimitView; // @synthesize skipLimitView=_skipLimitView;
@property(nonatomic) struct CGRect artworkFrame; // @synthesize artworkFrame=_artworkFrame;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(retain, nonatomic) MPUApplicationDefaults *applicationDefaults; // @synthesize applicationDefaults=_applicationDefaults;
@property(readonly, nonatomic) UIView *_createButton; // @synthesize _createButton;
- (void).cxx_destruct;
- (void)_layoutSkipLimitView;
- (_Bool)_isCreateAvailable;
- (void)_playbackContentsDidChangeNotification:(id)arg1;
- (void)_defaultsDidChangeNotification:(id)arg1;
- (void)_createAction:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
@property(readonly, nonatomic) double _volumeBottomVerticalInsetPhone;
- (void)_updateForItemDidChangeAnimated:(_Bool)arg1;
@property(readonly, nonatomic) double _transportControlsLastResortVerticalOffsetPhone;
- (Class)_transportControlsClass;
@property(readonly, nonatomic) double _titlesLastResortVerticalOffsetPhone;
- (id)_titleForCreateAction:(long long)arg1;
@property(readonly, nonatomic) double _textButtonVerticalInsetBaselinePad;
@property(readonly, nonatomic) double _textButtonBottomVerticalInsetBaselinePhone;
- (_Bool)_shouldAddBottomGap;
@property(readonly, nonatomic) struct CGRect _boundsForCenteringCreateActivityIndicatorView;
- (id)_availableCreateActionsForItem:(id)arg1;
- (void)setUsesMiniProgressControl:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isShowingCreateLoadingIndicator) _Bool showingCreateLoadingIndicator;
- (void)transportControlsDidLayoutSubviews:(id)arg1;
- (void)unregisterForPlayerNotifications;
- (id)shuffleButtonImage;
- (_Bool)shouldOverrideProgressTimeLabelStyle;
- (void)setPlayer:(id)arg1;
- (void)setItem:(id)arg1;
@property(nonatomic) __weak id <MPUNowPlayingPlaybackControlsViewDelegate><MPTransportControlsTarget> delegate;
- (id)repeatButtonImage;
- (void)reloadView;
- (id)newProgressIndicator;
- (void)registerForPlayerNotifications;
- (id)newButtonForPart:(unsigned long long)arg1;
- (_Bool)detailScrubbingHidesControls;
- (long long)buttonType;
- (void)tintColorDidChange;
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUNowPlayingTransportControls : MPTransportControls
{
    MPQueueFeeder *_feeder;
    id <MPUNowPlayingTransportControlsDelegate> _delegate;
}

+ (Class)buttonClass;
+ (long long)buttonType;
+ (unsigned long long)defaultVisibleParts;
+ (_Bool)buttonImagesUseBackgroundImage;
@property(nonatomic) __weak id <MPUNowPlayingTransportControlsDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateItemRelatedParts;
@property(readonly, nonatomic) double _playPauseBottomVInset;
@property(readonly, nonatomic) double _outterControlMargin;
@property(readonly, nonatomic) double _nextButtonVInset;
@property(readonly, nonatomic) double _innerControlMargin;
- (void)_skipLimitDidChangeNotification:(id)arg1;
- (_Bool)usesTintColorForControls;
- (id)tintColorForPart:(unsigned long long)arg1;
- (void)setItem:(id)arg1;
- (void)reloadForAdditions:(id)arg1 removals:(id)arg2 animate:(_Bool)arg3;
- (id)newButtonForPart:(unsigned long long)arg1;
- (id)buttonImageForPart:(unsigned long long)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface MPUNowPlayingVideoViewController : MPVideoViewController
{
}

+ (long long)_activityIndicatorViewStyle;
- (void)displayVideoViewOnScreen;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface MPUNowPlayingViewController : UIViewController <MPURatingControlDelegate, UIGestureRecognizerDelegate, UINavigationBarDelegate, MPTransportControlsTarget, MPUNowPlayingPlaybackControlsViewDelegate>
{
    _Bool _canMarqueeText;
    UIView *_contentView;
    UIViewController *_contentViewController;
    UINavigationItem *_effectiveNavigationItem;
    MPQueueFeeder *_feeder;
    _Bool _hasProperApplicationStateForWantingVideoLayer;
    _Bool _hasVisibilityForWantingVideoLayer;
    _Bool _isDetailScrubbing;
    _Bool _isShowingRatings;
    MPAVItem *_item;
    MPULyricsView *_lyricsView;
    UINavigationBar *_padFakeNavigationBar;
    MPUNowPlayingPlaybackControlsView *_playbackControlsView;
    UIViewController *_lastPresentedViewController;
    UINavigationItem *_previousNavigationItem;
    MPURatingControl *_ratingControl;
    NSTimer *_skipInformationRevealTimer;
    UITapGestureRecognizer *_tapGestureRecognizer;
    MPUNowPlayingTitlesView *_titlesView;
    _Bool _wantsVideoLayer;
    _Bool _isWide;
    MPUApplicationDefaults *_applicationDefaults;
    MPNowPlayingObserver *_nowPlayingObserver;
    MPAVController *_player;
}

@property(retain, nonatomic) MPAVController *player; // @synthesize player=_player;
@property(retain, nonatomic) MPNowPlayingObserver *nowPlayingObserver; // @synthesize nowPlayingObserver=_nowPlayingObserver;
@property(retain, nonatomic) MPUApplicationDefaults *applicationDefaults; // @synthesize applicationDefaults=_applicationDefaults;
- (void).cxx_destruct;
- (void)_unregisterForPlayerNotifications;
- (void)_updateWantsVideoLayer;
- (void)_updateTitles;
- (void)_updateSizeClass;
- (void)_updateMarqueeStatusAllowingCurrentMarqueeToFinish:(_Bool)arg1;
- (_Bool)_updateItemRelatedStateForChangeToItem:(id)arg1 animated:(_Bool)arg2;
- (void)_updateForCurrentItemAnimated:(_Bool)arg1;
- (void)_updateControlVisibilityForOrientation:(long long)arg1 animated:(_Bool)arg2;
- (void)_updateContentView:(id)arg1 forItem:(id)arg2;
- (void)_showLyrics;
- (void)_setWantsVideoLayer:(_Bool)arg1 forItem:(id)arg2;
- (void)_setShowingRatings:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_revealSkipInformationMomentarily;
- (void)_registerForPlayerNotifications;
- (void)_popIfNecessary;
- (void)_layoutForOrientation:(long long)arg1;
- (id)_createContentViewForItem:(id)arg1 contentViewController:(id *)arg2;
- (void)_cleanupForDeallocationContentView:(id)arg1 contentViewController:(id)arg2;
- (void)_statusBarHeightChangedNotification:(id)arg1;
- (void)_skipLimitDidChangeNotification:(id)arg1;
- (void)_playbackContentsDidChangeNotification:(id)arg1;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1;
- (void)_itemTitlesDidChangeNotification:(id)arg1;
- (void)_itemRatingDidChangeNotification:(id)arg1;
- (void)_itemIsExplicitDidChangeNotification:(id)arg1;
- (void)_itemDidChangeNotification:(id)arg1;
- (void)_itemArtworkDidChangeNotification:(id)arg1;
- (void)_didSkipTrackNotification:(id)arg1;
- (void)_bufferingStateDidChangeNotification:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_willPresentViewController:(id)arg1;
- (void)_updateTitlesInView:(id)arg1 forItem:(id)arg2;
- (_Bool)_updateNavigationItemAnimated:(_Bool)arg1;
- (long long)_transitionDirectionForChangeFromItem:(id)arg1 toItem:(id)arg2;
- (double)_titleWidth;
- (id)_titleTextForItem:(id)arg1;
- (_Bool)_shouldUpdateContentView:(id)arg1 forBufferingState:(unsigned long long)arg2;
- (_Bool)_shouldPopForCurrentPlaybackState;
- (_Bool)_shouldHaveArtworkPlaceholderTextForItem:(id)arg1;
- (_Bool)_shouldAbortUpdatingContentView:(id)arg1 forItem:(id)arg2;
- (void)_scheduleSkipInformationRevealTimer;
- (Class)_playbackControlsViewClass;
@property(readonly, nonatomic) MPUNowPlayingPlaybackControlsView *_playbackControlsView;
- (void)_itemTitlesDidChange;
- (_Bool)_isActionForHandlingDoubleTapOnArtworkImageViewEnabled;
- (_Bool)_itemSupportsRatings:(id)arg1;
@property(readonly, nonatomic) MPAVItem *_item;
@property(readonly, nonatomic, getter=_isDetailScrubbing) _Bool _detailScrubbing;
- (void)_invalidateSkipInformationRevealTimer;
@property(readonly, nonatomic) UINavigationItem *_effectiveNavigationItem;
- (void)_didUpdateArtworkImage;
@property(readonly, nonatomic) UIViewController *_contentViewController;
@property(readonly, nonatomic) UIView *_contentView;
- (struct CGSize)_contentViewSizeForItem:(id)arg1 withContentView:(id)arg2 orientation:(long long)arg3;
- (id)_artistTextForItem:(id)arg1;
- (id)_albumTextForItem:(id)arg1;
- (SEL)_actionForHandlingDoubleTapOnArtworkImageView;
- (void)_tapAction:(id)arg1;
- (_Bool)navigationBar:(id)arg1 shouldPopItem:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)playbackControls:(id)arg1 didSelectCreateAction:(long long)arg2;
- (_Bool)transportControls:(id)arg1 tappedButtonPart:(unsigned long long)arg2;
- (void)crossedTimeMakerWithEvent:(id)arg1;
- (void)ratingDidChangeForRatingControl:(id)arg1;
- (void)controlsOverlayDetailSliderTrackingDidEnd:(id)arg1;
- (void)controlsOverlayDetailSliderTrackingDidBegin:(id)arg1;
- (_Bool)controlsOverlay:(id)arg1 shouldUseDetailScrubberForItem:(id)arg2;
- (void)controlsOverlay:(id)arg1 detailSliderTrackingDidChangeScrubSpeed:(long long)arg2;
- (_Bool)MPU_supportsMiniPlayer;
- (_Bool)videoController:(id)arg1 shouldDisplayAlertForError:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUNowPlayingVolumeSlider : MPVolumeSlider
{
    UIColor *_maximumTintUsedForTrackImageColor;
    UIColor *_minimumTintUsedForTrackImageColor;
}

- (void).cxx_destruct;
- (void)_updateTrackTintForVolumeControlAvailability;
- (id)_trackImageWithTintColor:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_availableRoutesDidChangeNotification:(id)arg1;
- (void)setPlayer:(id)arg1;
- (id)_newVolumeWarningView;
- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (struct CGRect)minimumValueImageRectForBounds:(struct CGRect)arg1;
- (struct CGRect)maximumValueImageRectForBounds:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

@end

@interface MPUProspectivePlaybackInformation : NSObject <NSCopying>
{
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface MPUReportingController : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableArray *_childReportingControllers;
    MPUReportingController *_parentReportingController;
}

- (void).cxx_destruct;
@property(nonatomic) __weak MPUReportingController *parentReportingController;
- (void)_recordReportingEvents:(id)arg1;
- (void)removeChildReportingController:(id)arg1;
- (void)recordReportingEvents:(id)arg1;
- (void)flushImmediately;
- (void)addChildReportingController:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *childReportingControllers;
- (id)init;

@end

@interface MPURTCReportingController : MPUReportingController
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    _Bool _recordingEnabled;
    unsigned int _reportingFlag;
    NSMutableArray *_reportingFlagLoadCompletionHandlers;
    RTCReporting *_rtcReporting;
    _Bool _shouldDeferEventFlushing;
}

- (void).cxx_destruct;
- (_Bool)_getMethod:(unsigned short *)arg1 respCode:(unsigned short *)arg2 infoDictionary:(id *)arg3 fromReportingEvent:(id)arg4;
- (void)loadRTCReportingFlagWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(nonatomic) _Bool shouldDeferEventFlushing;
- (void)_recordReportingEvents:(id)arg1;
- (void)flushImmediately;
- (id)init;

@end

@interface MPURatingControl : UIControl
{
    UITapGestureRecognizer *_tapGestureRecognizer;
    UIPanGestureRecognizer *_panGestureRecognizer;
    NSMutableArray *_imageViews;
    id <MPURatingControlDelegate> _delegate;
    double _rating;
    struct UIEdgeInsets _hitTestEdgeInsets;
}

+ (id)ratingDotImage;
+ (id)ratingStarImage;
@property(nonatomic) double rating; // @synthesize rating=_rating;
@property(nonatomic) struct UIEdgeInsets hitTestEdgeInsets; // @synthesize hitTestEdgeInsets=_hitTestEdgeInsets;
@property(nonatomic) __weak id <MPURatingControlDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateImageViewsForRatingAnimated:(_Bool)arg1;
- (void)setRating:(double)arg1 animated:(_Bool)arg2;
- (void)_handlePanGesture:(id)arg1;
- (void)_handleTapGesture:(id)arg1;
- (double)ratingValueForLocationInView:(struct CGPoint)arg1;
- (void)layoutSubviews;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUReportingMetadata : NSObject
{
}

@end

@interface MPUReportingTrackMetadata : MPUReportingMetadata
{
    NSString *_playbackSessionID;
}

@property(copy, nonatomic) NSString *playbackSessionID; // @synthesize playbackSessionID=_playbackSessionID;
- (void).cxx_destruct;
- (void)setPlaybackSessionIDWithAVPlayerItem:(id)arg1;

@end

@interface MPUReportingAdTrackMetadata : MPUReportingTrackMetadata
{
    long long _adType;
    NSString *_externalIdentifier;
}

@property(copy, nonatomic) NSString *externalIdentifier; // @synthesize externalIdentifier=_externalIdentifier;
@property(nonatomic) long long adType; // @synthesize adType=_adType;
- (void).cxx_destruct;

@end

@interface MPUReportingEvent : NSObject
{
}

- (_Bool)isValid;

@end

@interface MPUReportingMescalSetupDidFinishEvent : MPUReportingEvent
{
    NSError *_error;
    double _setupDuration;
}

@property(nonatomic) double setupDuration; // @synthesize setupDuration=_setupDuration;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;

@end

@interface MPUReportingPlaybackSessionIDChangeEvent : MPUReportingEvent
{
    MPUReportingRadioStationMetadata *_radioStationMetadata;
    MPUReportingTrackMetadata *_trackMetadata;
}

@property(retain, nonatomic) MPUReportingTrackMetadata *trackMetadata; // @synthesize trackMetadata=_trackMetadata;
@property(retain, nonatomic) MPUReportingRadioStationMetadata *radioStationMetadata; // @synthesize radioStationMetadata=_radioStationMetadata;
- (void).cxx_destruct;
- (_Bool)isValid;

@end

@interface MPUReportingRadioStationMetadata : MPUReportingMetadata
{
    NSString *_stationHash;
    long long _stationID;
}

@property(nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
- (void).cxx_destruct;

@end

@interface MPUReportingRadioTrackMetadata : MPUReportingTrackMetadata
{
    long long _storeID;
    NSDictionary *_trackInfo;
    long long _trackType;
}

@property(nonatomic) long long trackType; // @synthesize trackType=_trackType;
@property(copy, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(nonatomic) long long storeID; // @synthesize storeID=_storeID;
- (void).cxx_destruct;

@end

@interface MPUReportingStationChangeEvent : MPUReportingEvent
{
    MPUReportingRadioStationMetadata *_oldStationMetadata;
    MPUReportingRadioStationMetadata *_currentStationMetadata;
}

@property(retain, nonatomic) MPUReportingRadioStationMetadata *currentStationMetadata; // @synthesize currentStationMetadata=_currentStationMetadata;
@property(retain, nonatomic) MPUReportingRadioStationMetadata *oldStationMetadata; // @synthesize oldStationMetadata=_oldStationMetadata;
- (void).cxx_destruct;
- (_Bool)isValid;

@end

@interface MPUReportingTrackPlaybackEvent : MPUReportingEvent
{
    NSDate *_date;
    MPUReportingRadioStationMetadata *_radioStationMetadata;
    MPUReportingTrackMetadata *_trackMetadata;
    struct _MPUReportingTimeRange _trackTimeRange;
}

@property(nonatomic) struct _MPUReportingTimeRange trackTimeRange; // @synthesize trackTimeRange=_trackTimeRange;
@property(retain, nonatomic) MPUReportingTrackMetadata *trackMetadata; // @synthesize trackMetadata=_trackMetadata;
@property(retain, nonatomic) MPUReportingRadioStationMetadata *radioStationMetadata; // @synthesize radioStationMetadata=_radioStationMetadata;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
- (void).cxx_destruct;
- (_Bool)isValid;

@end

@interface MPUReportingTimedMetadataEvent : MPUReportingTrackPlaybackEvent
{
    double _timestamp;
    NSData *_timedMetadata;
}

@property(copy, nonatomic) NSData *timedMetadata; // @synthesize timedMetadata=_timedMetadata;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (_Bool)isValid;

@end

@interface MPUReportingTrackPlaybackEndEvent : MPUReportingTrackPlaybackEvent
{
    long long _endReason;
}

@property(nonatomic) long long endReason; // @synthesize endReason=_endReason;

@end

@interface MPUSeparatorView : UIView
{
    double _leftMarginWidth;
    UIColor *_marginColor;
    double _rightMarginWidth;
    UIColor *_separatorColor;
}

@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(nonatomic) double rightMarginWidth; // @synthesize rightMarginWidth=_rightMarginWidth;
@property(retain, nonatomic) UIColor *marginColor; // @synthesize marginColor=_marginColor;
@property(nonatomic) double leftMarginWidth; // @synthesize leftMarginWidth=_leftMarginWidth;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUShapeView : UIView
{
}

+ (Class)layerClass;
@property(readonly, nonatomic) CAShapeLayer *shapeLayer;

@end

@interface MPUSharedLibrariesViewController : UIViewController
{
    _MPUSharedLibrariesViewController *_sharedLibariesViewController;
    UINavigationController *_navigationController;
    _Bool _showsCancelButton;
}

@property(nonatomic) _Bool showsCancelButton; // @synthesize showsCancelButton=_showsCancelButton;
- (void).cxx_destruct;
@property(nonatomic) _Bool showsLocalLibrary;
- (void)dismissSharedLibrariesViewController:(_Bool)arg1;
- (void)presentSharedLibrariesViewController:(_Bool)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface MPUSkipLimitView : UIView
{
    NSTimer *_hideTimer;
    UILabel *_informationLabel;
    NSDictionary *_textAttributes;
    CDStruct_dcf4dde6 _skipLimit;
}

@property(copy, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
@property(nonatomic) CDStruct_dcf4dde6 skipLimit; // @synthesize skipLimit=_skipLimit;
- (void).cxx_destruct;
- (void)_updateInformationLabel;
- (void)_invalidateHideTimer;
- (void)_hideSkipInformationForTimer:(id)arg1;
- (void)revealSkipInformationMomentarily;
@property(nonatomic) long long maximumNumberOfLines;
- (id)viewForBaselineLayout;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (struct UIEdgeInsets)alignmentRectInsets;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 labelClass:(Class)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUSlantedTextPlaceholderArtworkView : UIImageView
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    UIColor *_externalBackgroundColor;
    long long _externalContentMode;
    UIImage *_externalImage;
    _Bool _hasValidEffectiveImage;
    _Bool _hasValidPlaceholderImage;
    _Bool _hasValidPlaceholderTextAttributes;
    UIColor *_placeholderBackgroundColor;
    NSObject<OS_dispatch_queue> *_placeholderCreationQueue;
    NSMutableDictionary *_placeholderSubtitleTextAttributes;
    NSMutableDictionary *_placeholderTitleTextAttributes;
    unsigned long long _placeholderVersion;
    _Bool _drawsArtworkAsynchronously;
    long long _placeholderContentMode;
    UIImage *_placeholderImage;
    UIColor *_placeholderStrokeColor;
    double _placeholderStrokeLineWidth;
    long long _placeholderStyle;
    NSString *_placeholderSubtitle;
    NSString *_placeholderTitle;
    struct CGSize _placeholderSize;
}

@property(copy, nonatomic) NSString *placeholderTitle; // @synthesize placeholderTitle=_placeholderTitle;
@property(copy, nonatomic) NSString *placeholderSubtitle; // @synthesize placeholderSubtitle=_placeholderSubtitle;
@property(nonatomic) long long placeholderStyle; // @synthesize placeholderStyle=_placeholderStyle;
@property(nonatomic) double placeholderStrokeLineWidth; // @synthesize placeholderStrokeLineWidth=_placeholderStrokeLineWidth;
@property(retain, nonatomic) UIColor *placeholderStrokeColor; // @synthesize placeholderStrokeColor=_placeholderStrokeColor;
@property(nonatomic) struct CGSize placeholderSize; // @synthesize placeholderSize=_placeholderSize;
@property(retain, nonatomic) UIImage *placeholderImage; // @synthesize placeholderImage=_placeholderImage;
@property(nonatomic) long long placeholderContentMode; // @synthesize placeholderContentMode=_placeholderContentMode;
@property(retain, nonatomic) UIColor *placeholderBackgroundColor; // @synthesize placeholderBackgroundColor=_placeholderBackgroundColor;
@property(nonatomic) _Bool drawsArtworkAsynchronously; // @synthesize drawsArtworkAsynchronously=_drawsArtworkAsynchronously;
- (void).cxx_destruct;
- (void)_updatePlaceholderTextAttributes;
- (void)_updatePlaceholderImage;
- (void)_updateEffectiveImage;
- (void)_invalidatePlaceholderTextAttributes;
- (void)_invalidateForChangedPlaceholderProperties;
- (void)_invalidateEffectiveImage;
- (void)_drawPlaceholderWithBounds:(struct CGRect)arg1 displayScale:(double)arg2;
- (void)setImage:(id)arg1;
- (void)setContentMode:(long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)initWithImage:(id)arg1 highlightedImage:(id)arg2;
- (id)initWithImage:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MPUStandardTransportButton : MPTransportButton <MPUTransportButton>
{
    MPUTransportButtonEventHandler *_transportButtonEventHandler;
}

- (void).cxx_destruct;
- (void)applyTransportButtonAttributes:(id)arg1;
@property(readonly, nonatomic) MPUTransportButtonEventHandler *transportButtonEventHandler;
- (_Bool)shouldTrack;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)isEnabled;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUSystemBuyButtonConfiguration : NSObject
{
    _Bool _visible;
    float _downloadProgress;
    MPStoreItemOffer *_offer;
    unsigned long long _progressType;
}

@property(nonatomic) float downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(nonatomic) unsigned long long progressType; // @synthesize progressType=_progressType;
@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
@property(retain, nonatomic) MPStoreItemOffer *offer; // @synthesize offer=_offer;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *interfacePerceptibleKeyPaths;
- (id)init;

@end

@interface MPUSystemMediaControlsView : UIView <SKUIItemOfferButtonDelegate>
{
    MPUItemOfferButton *_buyTrackButton;
    MPUItemOfferButton *_buyAlbumButton;
    int _prefsChangedNotifyToken;
    id <MPUSystemMediaControlsViewDelegate> _delegate;
    long long _style;
    MPUSkipLimitView *_skipLimitView;
    MPUTransportControlsView *_transportControlsView;
    MPUChronologicalProgressView *_timeInformationView;
    MPUMediaControlsTitlesView *_trackInformationView;
    MPUMediaControlsVolumeView *_volumeView;
    MPUSystemBuyButtonConfiguration *_buyTrackConfiguration;
    MPUSystemBuyButtonConfiguration *_buyAlbumConfiguration;
}

@property(readonly, nonatomic) MPUSystemBuyButtonConfiguration *buyAlbumConfiguration; // @synthesize buyAlbumConfiguration=_buyAlbumConfiguration;
@property(readonly, nonatomic) MPUSystemBuyButtonConfiguration *buyTrackConfiguration; // @synthesize buyTrackConfiguration=_buyTrackConfiguration;
@property(readonly, nonatomic) MPUMediaControlsVolumeView *volumeView; // @synthesize volumeView=_volumeView;
@property(readonly, nonatomic) MPUMediaControlsTitlesView *trackInformationView; // @synthesize trackInformationView=_trackInformationView;
@property(readonly, nonatomic) MPUChronologicalProgressView *timeInformationView; // @synthesize timeInformationView=_timeInformationView;
@property(readonly, nonatomic) MPUTransportControlsView *transportControlsView; // @synthesize transportControlsView=_transportControlsView;
@property(readonly, nonatomic) MPUSkipLimitView *skipLimitView; // @synthesize skipLimitView=_skipLimitView;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
@property(nonatomic) __weak id <MPUSystemMediaControlsViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_setDownloadProgress:(float)arg1 forBuyButton:(id)arg2;
- (void)_setProgressType:(unsigned long long)arg1 forBuyButton:(id)arg2;
- (void)_setConfirmationState:(_Bool)arg1 forBuyButton:(id)arg2;
- (void)_updateBuyButton:(id)arg1 withOffer:(id)arg2;
- (id)_createBuyButtonWithTitle:(id)arg1 style:(long long)arg2;
- (id)_buyButtonForConfiguration:(id)arg1;
- (id)_createBuyButtonConfiguration;
- (struct UIEdgeInsets)_controlsInsets;
- (void)_setBuyButtonVisibility:(_Bool)arg1 forButton:(id)arg2;
- (_Bool)_systemwideBuyButtonsEnabled;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (void)_buyButtonPurchaseAction:(id)arg1;
- (void)_buyButtonShowConfirmationAction:(id)arg1;
- (void)_buyButtonCancelConfirmationAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)updatePlaybackState:(_Bool)arg1;
- (void)_layoutBuyButtonsControlCenteriPad;
- (void)_layoutSubviewsControlCenteriPad;
- (void)_layoutBuyButtons;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUSystemMediaControlsViewController : UIViewController <MPUNowPlayingDelegate, MPUTransportControlsViewDelegate, MPURemoteViewControllerPresentation, MPUChronologicalProgressViewDelegate, MPUMediaControlsTitlesViewDelegate, MPUSystemMediaControlsViewDelegate, MPAVRoutingControllerDelegate, RUTrackActionsDelegate, UIModalItemDelegate, UIPopoverControllerDelegate>
{
    MPUNowPlayingController *_nowPlayingController;
    MPAVRoutingController *_routingController;
    MPUSystemMediaControlsView *_mediaControlsView;
    UIImageView *_artworkImageView;
    unsigned int _runningLongPressCommand;
    NSArray *_currentlySupportedCommands;
    NSDictionary *_nowPlayingInfoForPresentedTrackActions;
    UIPopoverController *_trackActionsPopoverController;
    RUTrackActionsModalItem *_trackActionsModalItem;
    RUTrackActionsViewController *_trackActionsViewController;
    NSTimer *_skipInformationRevealTimer;
    NSTimer *_scrubberCommitTimer;
    double _scrubbedTimeDestination;
    double _lastDurationFromUpdate;
    NSString *_audioCategoryForDisabledHUD;
    _Bool _lockscreenDisabledForScreenTurnOff;
    _Bool _wantsToLaunchNowPlayingApp;
    _Bool _nowPlayingIsRadioStation;
    NSArray *_notificationObservers;
    _Bool _persistentUpdatesEnabled;
    long long _style;
    id <MPUSystemMediaControlsDelegate> _delegate;
}

@property(nonatomic) _Bool persistentUpdatesEnabled; // @synthesize persistentUpdatesEnabled=_persistentUpdatesEnabled;
@property(nonatomic) __weak id <MPUSystemMediaControlsDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (id)_commandOptionsForRadioItemUsingNowPlayingInfo:(id)arg1;
- (void)_cancelRunningLongPressCommand;
- (void)_launchCurrentNowPlayingApp;
- (void)_updateBuyButtonsWithNowPlayingInfo:(id)arg1;
- (void)_updateSupportedCommands;
- (void)_revealSkipInformation;
- (void)_invalidateSkipInformationRevealTimer;
- (void)_scheduleSkipInformationRevealTimer;
- (void)_stopScrubberCommitTimer;
- (void)_commitCurrentScrubberValue;
- (void)_beginScrubberCommitTimer;
- (void)_tearDownNotifications;
- (void)_setupNotifications;
- (void)_applyNowPlayingInformation:(id)arg1 toTrackActioningController:(id)arg2;
- (void)_buyButtonActionForSender:(id)arg1 command:(unsigned int)arg2;
- (void)_likeBanButtonTapped:(id)arg1;
- (void)_systemAppDidSkipTrackNotification:(id)arg1;
- (void)_supportedCommandsDidChangeNotification:(id)arg1;
- (void)_backlightLevelChangedNotification:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)modalItem:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (id)trackActioningObject:(id)arg1 localizedTitleForAction:(long long)arg2;
- (void)trackActioningObject:(id)arg1 didSelectAction:(long long)arg2 atIndex:(long long)arg3;
- (void)routingControllerAvailableRoutesDidChange:(id)arg1;
- (void)mediaControlsTitlesViewWasTapped:(id)arg1;
- (void)progressViewDidEndScrubbing:(id)arg1;
- (void)progressViewDidBeginScrubbing:(id)arg1;
- (void)remoteViewControllerDidFinish;
- (struct CGSize)transportControlsView:(id)arg1 adjustedMaximumTransportButtonSizeWithProposedSize:(struct CGSize)arg2;
- (struct CGRect)transportControlsView:(id)arg1 adjustedFrameOfTransportButtonWithControlType:(long long)arg2 proposedFrame:(struct CGRect)arg3;
- (void)transportControlsView:(id)arg1 prepareTransportButton:(id)arg2;
- (void)transportControlsView:(id)arg1 tapOnAccessoryButtonType:(long long)arg2;
- (void)transportControlsView:(id)arg1 longPressEndOnControlType:(long long)arg2;
- (void)transportControlsView:(id)arg1 longPressBeginOnControlType:(long long)arg2;
- (void)transportControlsView:(id)arg1 tapOnControlType:(long long)arg2;
- (id)transportControlsView:(id)arg1 imageForTransportButtonWithControlType:(long long)arg2;
- (void)mediaControlsViewDidConfirmBuyAlbumAction:(id)arg1;
- (void)mediaControlsViewDidCancelBuyTrackDownloadAction:(id)arg1;
- (void)mediaControlsViewDidConfirmBuyTrackAction:(id)arg1;
- (void)nowPlayingController:(id)arg1 nowPlayingApplicationDidChange:(id)arg2;
- (void)nowPlayingController:(id)arg1 elapsedTimeDidChange:(double)arg2;
- (void)nowPlayingController:(id)arg1 playbackStateDidChange:(_Bool)arg2;
- (void)nowPlayingController:(id)arg1 nowPlayingInfoDidChange:(id)arg2;
@property(readonly, nonatomic) UIView *artworkView;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUTabBarController : UITabBarController
{
    NSArray *_customizableViewControllerIdentifiers;
    Class _viewControllerFactoryClass;
    NSArray *_viewControllerIdentifiers;
}

+ (Class)_moreNavigationControllerClass;
@property(copy, nonatomic) NSArray *viewControllerIdentifiers; // @synthesize viewControllerIdentifiers=_viewControllerIdentifiers;
@property(retain, nonatomic) Class viewControllerFactoryClass; // @synthesize viewControllerFactoryClass=_viewControllerFactoryClass;
@property(copy, nonatomic) NSArray *customizableViewControllerIdentifiers; // @synthesize customizableViewControllerIdentifiers=_customizableViewControllerIdentifiers;
- (void).cxx_destruct;
- (id)_viewControllerForIdentifier:(id)arg1;
- (void)_reloadTabBarFromIdentifiersAnimated:(_Bool)arg1;
- (id)_identifierForViewControllerAtIndex:(unsigned long long)arg1;
- (id)_identifierForViewController:(id)arg1;
- (id)_existingViewControllerForIdentifier:(id)arg1;
- (void)setViewControllerIdentifiers:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *selectedViewControllerIdentifier;
@property(readonly, nonatomic) NSArray *filteredViewControllerIdentifiers;
- (_Bool)shouldSelectViewController:(id)arg1;
- (void)reloadTabsPurgingExistingTabs:(_Bool)arg1;
- (void)reloadTabsAnimated:(_Bool)arg1;
- (_Bool)presentModalViewControllerIfAppropriate:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(nonatomic) __weak id <MPUTabBarControllerDelegate> delegate;

@end

@interface MPUTextButton : UIButton
{
    long long _titleAlignment;
}

@property(nonatomic) long long titleAlignment; // @synthesize titleAlignment=_titleAlignment;
- (void)_commonTextButtonInit;
- (struct CGRect)titleRectForContentRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUTheme : NSObject
{
}

+ (id)_themeAssetCache;
+ (double)tableViewContentLeftInset;
+ (id)disabledPlaybackControlColor;
+ (double)explicitGlyphImageBaselineOffsetFromBottomForSizeCategory:(unsigned long long)arg1;
+ (id)explicitGlyphImageForSizeCategory:(unsigned long long)arg1;
+ (id)cloudGlyph;
+ (id)cachedObjectWithKey:(id)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface MPUThinDetailSlider : MPDetailSlider
{
}

- (struct CGRect)trackRectForBounds:(struct CGRect)arg1;
- (struct CGRect)thumbRectForBounds:(struct CGRect)arg1 trackRect:(struct CGRect)arg2 value:(float)arg3;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2 maxTrackWidth:(double)arg3;

@end

@interface MPUTintedBackgroundView : UIView
{
}

- (void)tintColorDidChange;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUTransportControlCenterButton : SBUIControlCenterButton <SBUIControlCenterButtonDelegate, MPUTransportButton>
{
    MPUTransportButtonEventHandler *_transportButtonEventHandler;
}

- (void).cxx_destruct;
- (void)buttonTapped:(id)arg1;
- (void)applyTransportButtonAttributes:(id)arg1;
@property(readonly, nonatomic) MPUTransportButtonEventHandler *transportButtonEventHandler;
- (_Bool)shouldTrack;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)isEnabled;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface MPUTransportControlsView : UIView
{
    UIButton<MPUTransportButton> *_leftButton;
    UIButton<MPUTransportButton> *_middleButton;
    UIButton<MPUTransportButton> *_rightButton;
    MPUTransportButtonAttributes *_leftButtonAttributes;
    MPUTransportButtonAttributes *_middleButtonAttributes;
    MPUTransportButtonAttributes *_rightButtonAttributes;
    NSMutableDictionary *_availableControlsByGroup;
    UIButton *_shuffleButton;
    UIButton *_repeatButton;
    struct UIEdgeInsets _insetsForExpandingButtons;
    _Bool _useCustomHighlightAppearance;
    _Bool _alwaysLive;
    _Bool _showAccessoryButtons;
    _Bool _showIsPlaying;
    NSArray *_availableControls;
    double _displayedSkipForwardInterval;
    double _displayedSkipBackwardInterval;
    UIFont *_displayedSkipIntervalFont;
    unsigned long long _repeatType;
    unsigned long long _shuffleType;
    Class _transportButtonClass;
    id <MPUTransportControlsViewDelegate> _delegate;
}

+ (id)_skipIntervalButtonImageForInterval:(double)arg1 baseImage:(id)arg2 font:(id)arg3 scale:(double)arg4;
+ (id)_stringForDisplayedSkipInterval:(double)arg1;
+ (id)defaultTransportControls;
@property(nonatomic) __weak id <MPUTransportControlsViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) Class transportButtonClass; // @synthesize transportButtonClass=_transportButtonClass;
@property(nonatomic) _Bool showIsPlaying; // @synthesize showIsPlaying=_showIsPlaying;
@property(nonatomic) unsigned long long shuffleType; // @synthesize shuffleType=_shuffleType;
@property(nonatomic) unsigned long long repeatType; // @synthesize repeatType=_repeatType;
@property(nonatomic) _Bool showAccessoryButtons; // @synthesize showAccessoryButtons=_showAccessoryButtons;
@property(retain, nonatomic) UIFont *displayedSkipIntervalFont; // @synthesize displayedSkipIntervalFont=_displayedSkipIntervalFont;
@property(nonatomic) double displayedSkipBackwardInterval; // @synthesize displayedSkipBackwardInterval=_displayedSkipBackwardInterval;
@property(nonatomic) double displayedSkipForwardInterval; // @synthesize displayedSkipForwardInterval=_displayedSkipForwardInterval;
@property(nonatomic, getter=isAlwaysLive) _Bool alwaysLive; // @synthesize alwaysLive=_alwaysLive;
@property(copy, nonatomic) NSArray *availableControls; // @synthesize availableControls=_availableControls;
- (void).cxx_destruct;
- (void)_restoreButtonHighlightAfterTouchUpForButton:(id)arg1;
- (id)_accessoryButtonEmphasizedTextAttributes;
- (id)_accessoryButtonTextAttributes;
- (struct CGSize)_transportControlButtonSize;
- (void)_layoutButton:(id)arg1 withAttributes:(id)arg2 frame:(struct CGRect)arg3 inExpandedTouchRect:(struct CGRect)arg4;
- (void)_accessoryControlTap:(id)arg1;
- (void)_transportControlTouchExited:(id)arg1;
- (void)_transportControlTouchEntered:(id)arg1;
- (void)_transportControlLongPressEnd:(id)arg1;
- (void)_transportControlLongPressBegin:(id)arg1;
- (void)_transportControlTap:(id)arg1;
- (void)_updateTransportControlButtonsAndDeferApplyingAttributes:(_Bool)arg1;
- (void)_updateTransportControlButtons;
- (void)_reloadTransportButtons;
- (id)_createAccessoryButton;
- (id)_createTransportButton;
- (void)_configureButton:(id)arg1 withAttributes:(id)arg2 forTransportControl:(id)arg3 deferApplyingAttributes:(_Bool)arg4;
- (void)_clearTransportButtonWeakReferencesToSelf;
- (id)_availableControlForGroup:(int)arg1;
- (struct CGRect)_adjustedFrameForButton:(id)arg1 proposedFrame:(struct CGRect)arg2;
- (id)_transportButtonForControlType:(long long)arg1;
@property(nonatomic, setter=_setInsetsForExpandingButtons:) struct UIEdgeInsets _insetsForExpandingButtons;
- (void)reload;
- (id)availableTransportControlWithType:(long long)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface MPUVignetteBackgroundView : MPUPinningView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface NSAttributedString (MPUExtras)
+ (id)attributedStringWithTextElement:(id)arg1 baseFont:(id)arg2;
@end

@interface NSBundle (MPUAdditions)
+ (id)mediaPlayerUIBundle;
@end

@interface NSMutableAttributedString (MPUAdditions)
- (void)_MPU_appendImage:(id)arg1;
- (void)MPU_appendMediumExplicitGlyphImage;
@end

@interface UIAlertView (MPUAdditions)
- (void)showWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface UIButton (MPUMediaControlsBuyButton)
+ (id)mediaControlsBuyButtonWithStyle:(long long)arg1;
- (void)_mediaControlsBuyButtonTouchUp:(id)arg1;
- (void)_mediaControlsBuyButtonTouchDown:(id)arg1;
@end

@interface UICollectionView (MPUAdditions)
- (long long)MPU_globalRowForRowAtIndexPath:(id)arg1;
@end

@interface UIImage (MPUAdditions)
+ (id)imageWithSize:(struct CGSize)arg1 opaque:(_Bool)arg2 fromBlock:(CDUnknownBlockType)arg3;
- (id)scaledImageWithSize:(struct CGSize)arg1;
@end

@interface UIImage (MPUExtras)
+ (id)imageForPlaceholderURL:(id)arg1;
@end

@interface UILabel (MPUExtras)
- (void)configureForIKTextElement:(id)arg1 fontDescriptor:(id)arg2 textStyle:(id)arg3 capitalize:(_Bool)arg4;
- (void)configureForIKTextElement:(id)arg1 fontDescriptor:(id)arg2 textStyle:(id)arg3;
- (long long)_textAlignmentFromElementAlignment:(unsigned long long)arg1;
@end

@interface UINavigationController (MPUAdditions)
- (void)MPU_pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)MPU_pushNowPlayingViewControllerOfClass:(Class)arg1 player:(id)arg2 animated:(_Bool)arg3;
- (void)MPU_popToViewController:(id)arg1 animated:(_Bool)arg2 popRequestSentCompletion:(CDUnknownBlockType)arg3;
- (void)MPU_popToViewControllerBeforeViewController:(id)arg1 animated:(_Bool)arg2;
- (void)MPU_popToRootViewControllerAnimated:(_Bool)arg1;
@end

@interface UINavigationController (ReplaceViewController)
- (void)_MPUExtras_replaceViewController:(id)arg1 withViewController:(id)arg2 animated:(_Bool)arg3;
@end

@interface UITableView (MPUAdditions)
@property(nonatomic, getter=MPU_isInScrollTest, setter=MPU_setInScrollTest:) _Bool inScrollTest;
- (struct _NSRange)MPU_rangeOfVisibleSections;
@end

@interface UIView (MPUAdditions)
- (void)MPU_renderSubview:(id)arg1 inContext:(struct CGContext *)arg2 isHighlighted:(_Bool)arg3;
- (void)MPU_renderSubview:(id)arg1 inContext:(struct CGContext *)arg2;
@end

@interface UIViewController (MPUAdditions)
+ (id)_MPU_viewControllerForIdentifier:(id)arg1 forSearch:(_Bool)arg2 withQuery:(id)arg3 isDefaultQuery:(_Bool)arg4;
+ (Class)_MPU_viewControllerClassForIdentifier:(id)arg1;
+ (_Bool)_MPU_hasCreationInformationForIdentifier:(id)arg1;
+ (id)_MPU_defaultQueryForIdentifier:(id)arg1;
+ (void)_MPU_configureViewController:(id)arg1 forIdentifier:(id)arg2;
+ (id)MPU_searchViewControllersForIdentifiers:(id)arg1;
+ (id)MPU_searchViewControllerForIdentifier:(id)arg1 withQuery:(id)arg2;
+ (id)MPU_searchViewControllerForIdentifier:(id)arg1;
+ (id)MPU_viewControllersForIdentifiers:(id)arg1;
+ (id)MPU_viewControllerForIdentifier:(id)arg1 withQuery:(id)arg2;
+ (id)MPU_viewControllerForIdentifier:(id)arg1;
+ (void)MPU_registerIdentifier:(id)arg1 withAttributes:(id)arg2 defaultQueryCreationHandler:(CDUnknownBlockType)arg3;
+ (id)MPU_defaultDataSourceForViewControllerWithIdentifier:(id)arg1;
- (void)MPU_prepareForNavigationController:(id)arg1 poppingToViewController:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
@end

@interface UIViewController (MPUMiniPlayerSupport)
- (_Bool)MPU_supportsMiniPlayer;
@end

@interface UIViewController (MPUNowPlayingSupport)
- (void)_MPU_updateNowPlayingNavigationItemWithPlayer:(id)arg1;
- (void)_MPU_updateNowPlayingButton:(id)arg1;
- (void)_MPU_nowPlayingButtonAction:(id)arg1;
- (void)MPU_updateNowPlayingButton;
- (void)MPU_endShowingNowPlayingNavigationItem;
- (id)MPU_createNowPlayingButton;
- (void)MPU_beginShowingNowPlayingNavigationItemForPlayer:(id)arg1 nowPlayingViewControllerClass:(Class)arg2;
@property(readonly, nonatomic) _Bool MPU_showsNowPlayingNavigationItem;
@end

@interface _MPUControlCenterDetailSlider : SBUIControlCenterSlider <MPDetailedScrubbing, _MPUSliderScrubForwarding>
{
    MPDetailScrubController *_scrubController;
}

@property(nonatomic) __weak MPDetailScrubController *scrubController; // @synthesize scrubController=_scrubController;
- (void).cxx_destruct;
- (struct CGRect)thumbHitRect;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MPUDetailSlider : UISlider <MPDetailedScrubbing, _MPUSliderScrubForwarding>
{
    MPDetailScrubController *_scrubController;
}

@property(nonatomic) __weak MPDetailScrubController *scrubController; // @synthesize scrubController=_scrubController;
- (void).cxx_destruct;
- (struct CGRect)thumbHitRect;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface _MPUExtrasGridHeaderView : UIView
{
    NSArray *_artworkSizeConstraints;
    NSArray *_textLeadingConstraints;
    MPUContentSizeLayoutConstraint *_topLabelConstraint;
    MPUContentSizeLayoutConstraint *_subtitleBaselineConstraint;
    NSLayoutConstraint *_bottomLabelConstraint;
    MPUContentSizeLayoutConstraint *_bottomLabelSpacerHeight;
    MPUArtworkView *_artworkView;
    UILabel *_subtitleLabel;
    UIView *_bottomLabelSpacer;
    UILabel *_titleLabel;
}

@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)configureForImage:(id)arg1 title:(id)arg2 subtitle:(id)arg3 style:(id)arg4;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _MPUExtrasMainMenuItemCollectionViewCell : UICollectionViewCell
{
    UILabel *_textLabel;
}

+ (id)_createLabelInCell:(id)arg1;
@property(readonly, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
- (void).cxx_destruct;
- (void)setSelected:(_Bool)arg1;
- (void)_dynamicTypeChanged;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _MPUExtrasShelfCollectionViewLayout : UICollectionViewFlowLayout
{
    NSDictionary *_rects;
    struct CGSize _contentSize;
}

@property(readonly, nonatomic) struct CGSize calculatedContentSize; // @synthesize calculatedContentSize=_contentSize;
- (void).cxx_destruct;
- (struct CGSize)collectionViewContentSize;
- (void)prepareLayout;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (void)_calculateSizes;

@end

@interface _MPUMiniPlayerActionTableViewCell : UITableViewCell
{
    UIImageView *_actionImageView;
    _Bool _showsSeparator;
}

@property(nonatomic) _Bool showsSeparator; // @synthesize showsSeparator=_showsSeparator;
- (void).cxx_destruct;
@property(retain, nonatomic) UIImage *actionImage;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _MPUSharedLibrariesViewController : UITableViewController
{
    MPMediaLibrary *_connectingMediaLibrary;
    NSArray *_sharedMediaLibraries;
    _Bool _showsLocalLibrary;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
@property(nonatomic) _Bool showsLocalLibrary; // @synthesize showsLocalLibrary=_showsLocalLibrary;
- (void).cxx_destruct;
- (void)_updateConnectionProgress;
- (void)_updateConnectionProgressForCell:(id)arg1;
- (void)_updateNavigationPrompt;
- (void)_reloadSharedLibraries;
- (id)_sharedMediaLibraries;
- (void)_cancelConnectionAndDismiss;
- (void)_mediaLibraryConnectionProgressDidChangeNotification:(id)arg1;
- (void)_defaultMediaLibraryDidChangeNotification:(id)arg1;
- (void)_availableMediaLibrariesDidChangeNotification:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface _MPUViewControllerCreationInformation : NSObject
{
    NSDictionary *_attributes;
    CDUnknownBlockType _defaultQueryCreationHandler;
}

@property(readonly, nonatomic) CDUnknownBlockType defaultQueryCreationHandler; // @synthesize defaultQueryCreationHandler=_defaultQueryCreationHandler;
@property(readonly, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
- (void).cxx_destruct;
- (id)initWithAttributes:(id)arg1 defaultQueryCreationHandler:(CDUnknownBlockType)arg2;

@end

@interface _MPUViewControllerRestoration : NSObject <UIViewControllerRestoration>
{
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;

@end

