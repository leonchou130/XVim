//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreSuggestions.framework/CoreSuggestions
// UUID: 90A624F6-EB51-35E7-BB7E-0DBF7A4CAF26
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 126.2.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol SGDSuggestManagerProtocol <NSObject>
- (void)sendRTCLogsWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)relevantABRecordIDsWithLimit:(long long)arg1 completion:(void (^)(NSArray *, NSError *))arg2;
- (void)predictedCCEmailAddressesWithToAddresses:(NSArray *)arg1 ccAddresses:(NSArray *)arg2 fromAddress:(NSString *)arg3 date:(double)arg4 bounds:(NSArray *)arg5 completion:(void (^)(NSArray *, NSError *))arg6;
- (void)predictedToEmailAddressesWithToAddresses:(NSArray *)arg1 ccAddresses:(NSArray *)arg2 fromAddress:(NSString *)arg3 date:(double)arg4 bounds:(NSArray *)arg5 completion:(void (^)(NSArray *, NSError *))arg6;
- (void)resetConfirmationAndRejectionHistory:(void (^)(NSError *))arg1;
- (void)rejectContact:(SGRealtimeContact *)arg1 completion:(void (^)(NSError *))arg2;
- (void)confirmContact:(SGRealtimeContact *)arg1 completion:(void (^)(NSError *))arg2;
- (void)rejectEvent:(SGRealtimeEvent *)arg1 completion:(void (^)(NSError *))arg2;
- (void)confirmEvent:(SGRealtimeEvent *)arg1 completion:(void (^)(NSError *))arg2;
- (void)contactMatchesByEmailAddress:(NSString *)arg1 withCompletion:(void (^)(NSArray *, NSError *))arg2;
- (void)contactMatchesByPhoneNumber:(NSString *)arg1 withCompletion:(void (^)(NSArray *, NSError *))arg2;
- (void)contactFromABRecordID:(int)arg1 withCompletion:(void (^)(SGContact *, NSError *))arg2;
- (void)contactMatchesWithMessagingPrefix:(NSString *)arg1 limitTo:(unsigned long long)arg2 withCompletion:(void (^)(NSArray *, NSError *))arg3;
- (void)contactMatchesWithFullTextSearch:(NSString *)arg1 limitTo:(unsigned long long)arg2 withCompletion:(void (^)(NSArray *, NSError *))arg3;
- (void)contactsWithPrefix:(NSString *)arg1 limitTo:(unsigned long long)arg2 withCompletion:(void (^)(NSArray *, NSError *))arg3;
- (void)contactsFromEmailContent:(NSString *)arg1 headers:(NSData *)arg2 source:(NSString *)arg3 withCompletion:(void (^)(NSArray *, NSError *))arg4;
- (void)eventsFromEmailContent:(NSString *)arg1 headers:(NSData *)arg2 source:(NSString *)arg3 withCompletion:(void (^)(NSArray *, NSError *))arg4;
- (void)suggestionsFromRFC822Data:(NSData *)arg1 source:(NSString *)arg2 options:(unsigned long long)arg3 withCompletion:(void (^)(NSArray *, NSError *))arg4;
- (void)suggestionsFromEmailContent:(NSString *)arg1 headers:(NSData *)arg2 source:(NSString *)arg3 options:(unsigned long long)arg4 withCompletion:(void (^)(NSArray *, NSError *))arg5;
- (void)eventsInFutureLimitTo:(unsigned long long)arg1 options:(unsigned int)arg2 withCompletion:(void (^)(NSArray *, NSError *))arg3;
- (void)eventsStartingAt:(NSDate *)arg1 endingAt:(NSDate *)arg2 prefix:(NSString *)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5 withCompletion:(void (^)(NSArray *, NSError *))arg6;
- (void)eventsStartingAt:(NSDate *)arg1 endingAt:(NSDate *)arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4 withCompletion:(void (^)(NSArray *, NSError *))arg5;
- (void)clearCachesFully:(_Bool)arg1 withCompletion:(void (^)(NSError *))arg2;
- (void)prepareForRealtimeExtraction:(void (^)(NSError *))arg1;
- (void)isEnabledWithCompletion:(void (^)(_Bool, NSError *))arg1;
@end

@protocol SGDaemonResponseProtocol
- (void)sgClientReceivedResults:(NSArray *)arg1 forSearchToken:(unsigned int)arg2 finished:(_Bool)arg3;
@end

@protocol SGObject <NSCopying, NSSecureCoding>
@end

@interface SGContact : NSObject <SGObject>
{
    SGName *_name;
    NSArray *_emailAddresses;
    NSArray *_phones;
    NSArray *_postalAddresses;
}

+ (id)contactWithName:(id)arg1 emailAddresses:(id)arg2 phones:(id)arg3 postalAddresses:(id)arg4;
+ (id)contactWithName:(id)arg1 emailAddresses:(id)arg2 phones:(id)arg3 addresses:(id)arg4;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *postalAddresses; // @synthesize postalAddresses=_postalAddresses;
@property(readonly, nonatomic) NSArray *phones; // @synthesize phones=_phones;
@property(readonly, nonatomic) NSArray *emailAddresses; // @synthesize emailAddresses=_emailAddresses;
@property(readonly, nonatomic) SGName *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)richness;
@property(readonly, nonatomic) NSArray *addresses;
- (unsigned long long)hash;
- (_Bool)isEqualToContact:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setEmailAddresses:(id)arg1;
- (void)setName:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 emailAddresses:(id)arg2 phones:(id)arg3 postalAddresses:(id)arg4;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGContactMatch : NSObject <NSCopying, NSSecureCoding>
{
    long long _matchingFieldType;
    SGContact *_contact;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) SGContact *contact; // @synthesize contact=_contact;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
@property(readonly, nonatomic) id <SGObject> matchingField;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToContactMatch:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithContact:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGDRelevantContacts : NSObject
{
}

+ (void)relevantABRecordIDsWithLimit:(long long)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)_recentMessagesHistory:(long long)arg1;
+ (id)_recentCallHistory:(long long)arg1;
+ (void)setABRef:(void *)arg1;

@end

@interface SGDSuggestManagerInterface : NSObject
{
}

+ (id)_buildXPCInterface;
+ (void)interface:(id)arg1 returnsArrayOf:(Class)arg2 forSelector:(SEL)arg3;
+ (void)interface:(id)arg1 returns:(Class)arg2 forSelector:(SEL)arg3;
+ (id)xpcInterface;

@end

@interface SGDaemonConnection : NSObject
{
    NSString *_machServiceName;
    Protocol *_protocol;
    NSXPCInterface *_xpcInterface;
    NSObject<OS_dispatch_queue> *_replyHandlerLock;
    NSObject<OS_dispatch_queue> *_connectLock;
    NSMutableDictionary *_cancellableOperations;
    unsigned int _nextCancellationToken;
    NSMutableDictionary *_aborts;
    int _abortCounter;
    int _abortLock;
    int _disconnectCount;
    NSXPCConnection *_xpcConnection;
    id _delegate;
}

@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)sgClientReceivedResults:(id)arg1 forSearchToken:(unsigned int)arg2 finished:(_Bool)arg3;
- (void)_finishAllRepliesOnServerDeath;
- (void)cancelRemoteOperation:(unsigned int)arg1;
- (void)removeCancellableRemoteOperation:(unsigned int)arg1;
- (unsigned int)addCancellableRemoteOperation:(id)arg1;
- (id)waitUntilReturn:(CDUnknownBlockType)arg1 error:(id *)arg2;
@property(readonly, retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void)_connectToServer;
- (void)disconnect;
- (id)initWithMachServiceName:(id)arg1 protocol:(id)arg2 xpcInterface:(id)arg3;

@end

@interface SGDetection : NSObject
{
    _Bool _hasPhoneLabel;
    unsigned int _type;
    NSString *_extraction;
    NSString *_context;
    NSString *_label;
    struct _NSRange _match;
}

+ (id)detectionWithType:(unsigned int)arg1 text:(id)arg2 matchRange:(struct _NSRange)arg3 matchString:(id)arg4 label:(id)arg5 hasPhoneLabel:(_Bool)arg6;
@property(readonly, nonatomic) struct _NSRange match; // @synthesize match=_match;
@property(readonly, nonatomic) _Bool hasPhoneLabel; // @synthesize hasPhoneLabel=_hasPhoneLabel;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
@property(readonly, nonatomic) NSString *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *extraction; // @synthesize extraction=_extraction;
@property(readonly, nonatomic) unsigned int type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)description;
- (id)initWithType:(unsigned int)arg1 extraction:(id)arg2 context:(id)arg3 label:(id)arg4 hasPhoneLabel:(_Bool)arg5 match:(struct _NSRange)arg6;

@end

@interface SGDeviceState : NSObject
{
}

+ (void)registerBlockForFirstUnlock:(CDUnknownBlockType)arg1;
+ (void)blockUntilFirstUnlock;
+ (_Bool)isUnlocked;
+ (_Bool)isClassCLocked;

@end

@interface SGEKEventConversions : NSObject
{
}

+ (id)URLForEKEventFromMessageId:(id)arg1 sentAt:(id)arg2 opaqueKey:(id)arg3;

@end

@interface SGLabeledObject : NSObject <SGObject>
{
    NSString *_label;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (_Bool)isEqualToSuggestion:(id)arg1;
- (id)localizedLabel;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLabel:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGEmailAddress : SGLabeledObject
{
    NSString *_emailAddress;
}

+ (id)emailAddress:(id)arg1 label:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToEmailAddress:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEmailAddress:(id)arg1 label:(id)arg2;

@end

@interface SGEntityTag : NSObject <NSCopying>
{
    _Bool _indexed;
    _Bool _stored;
    NSString *_name;
}

+ (id)testTag:(int)arg1;
+ (id)extractedFromTemplateWithShortName:(id)arg1;
+ (id)messageWithMessageIdHash:(long long)arg1 fromSource:(id)arg2;
+ (id)containsEntityExtraction:(long long)arg1;
+ (id)extraKey:(id)arg1;
+ (id)identity:(id)arg1;
+ (id)contactDetail:(id)arg1;
+ (id)url:(id)arg1;
+ (id)tagForPrefix:(id)arg1 value:(id)arg2;
+ (id)fromReply;
+ (id)fromForwardedMessage;
+ (id)defaultDuration;
+ (id)hardName;
+ (id)human;
+ (id)inhuman;
+ (id)allDay;
+ (id)extractedEventCancellation;
+ (id)fromExtractedDomain;
+ (id)extractedSocial;
+ (id)extractedFood;
+ (id)extractedMovie;
+ (id)extractedTicket;
+ (id)extractedCarRental;
+ (id)extractedHotel;
+ (id)extractedTrain;
+ (id)extractedBus;
+ (id)extractedFlight;
+ (id)extractedEvent;
+ (id)resolveName:(id)arg1;
+ (void)initialize;
+ (void)rememberPrefix:(id)arg1 stored:(_Bool)arg2 indexed:(_Bool)arg3;
+ (id)remember:(id)arg1;
@property(readonly, nonatomic) _Bool stored; // @synthesize stored=_stored;
@property(readonly, nonatomic) _Bool indexed; // @synthesize indexed=_indexed;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (_Bool)isTemplateShortName;
- (_Bool)isExtraKey;
- (_Bool)isContactDetail;
- (_Bool)isUrl;
- (id)description;
- (id)value;
- (_Bool)isEqualToEntityTag:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithName:(id)arg1 stored:(_Bool)arg2 indexed:(_Bool)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGEvent : NSObject <SGObject>
{
    NSObject<OS_dispatch_queue> *_geocodeQueue;
    SGEvent *_geocoded;
    _Bool _isAllDay;
    NSString *_title;
    NSString *_messageId;
    NSString *_notes;
    NSDate *_start;
    NSTimeZone *_startTimeZone;
    NSDate *_end;
    NSTimeZone *_endTimeZone;
    NSDate *_creationDate;
    NSDate *_lastModifiedDate;
    NSArray *_locations;
    NSString *_opaqueKey;
    NSArray *_tags;
}

+ (id)eventWithOpaqueKey:(id)arg1 title:(id)arg2 notes:(id)arg3 start:(id)arg4 startTimeZone:(id)arg5 end:(id)arg6 endTimeZone:(id)arg7 isAllDay:(_Bool)arg8 creationDate:(id)arg9 lastModifiedDate:(id)arg10 locations:(id)arg11 tags:(id)arg12 messageId:(id)arg13;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *tags; // @synthesize tags=_tags;
@property(readonly, nonatomic) NSString *opaqueKey; // @synthesize opaqueKey=_opaqueKey;
@property(readonly, nonatomic) NSArray *locations; // @synthesize locations=_locations;
@property(readonly, nonatomic) NSDate *lastModifiedDate; // @synthesize lastModifiedDate=_lastModifiedDate;
@property(readonly, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(readonly, nonatomic) _Bool isAllDay; // @synthesize isAllDay=_isAllDay;
@property(readonly, nonatomic) NSTimeZone *endTimeZone; // @synthesize endTimeZone=_endTimeZone;
@property(readonly, nonatomic) NSDate *end; // @synthesize end=_end;
@property(readonly, nonatomic) NSTimeZone *startTimeZone; // @synthesize startTimeZone=_startTimeZone;
@property(readonly, nonatomic) NSDate *start; // @synthesize start=_start;
@property(readonly, nonatomic) NSString *notes; // @synthesize notes=_notes;
@property(readonly, nonatomic) NSString *messageId; // @synthesize messageId=_messageId;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)description;
- (id)firstLocationForType:(unsigned long long)arg1;
- (void)mergeIntoEKEvent:(id)arg1;
- (id)toEKEventWithStore:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToEvent:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)geocodeLocation:(id)arg1 withCallback:(CDUnknownBlockType)arg2;
- (void)geocodeWithCallback:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isGeocodeCandidate) _Bool geocodeCandidate;
- (_Bool)isGeocodeCandidateLocation:(id)arg1;
- (id)dateForUTCDate:(id)arg1 withTimeZone:(id)arg2;
- (id)initWithOpaqueKey:(id)arg1 messageId:(id)arg2 title:(id)arg3 notes:(id)arg4 start:(id)arg5 startTimeZone:(id)arg6 end:(id)arg7 endTimeZone:(id)arg8 isAllDay:(_Bool)arg9 creationDate:(id)arg10 lastModifiedDate:(id)arg11 locations:(id)arg12 tags:(id)arg13;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGHarvesterService : NSObject
{
}

- (void)addMessages:(id)arg1 source:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)addMessages:(id)arg1 source:(id)arg2;
- (void)updateMessages:(id)arg1 state:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)updateMessages:(id)arg1 state:(unsigned long long)arg2;
- (id)messagesToRefresh;
- (id)availableDataTypes;
- (void)harvestDataForAllDataTypesWithCompletion:(CDUnknownBlockType)arg1;
- (void)harvestDataForDataType:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;

@end

@interface SGLevenshtein : NSObject
{
}

+ (unsigned long long)distanceBetweenStrings:(id)arg1 and:(id)arg2;

@end

@interface SGLocation : NSObject <SGObject>
{
    unsigned long long _locationType;
    NSString *_label;
    NSString *_address;
    double _latitude;
    double _longitude;
    double _accuracy;
    double _quality;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) double quality; // @synthesize quality=_quality;
@property(readonly, nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(readonly, nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(readonly, nonatomic) NSString *address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *label; // @synthesize label=_label;
@property(readonly, nonatomic) unsigned long long locationType; // @synthesize locationType=_locationType;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic, getter=isGeocoded) _Bool geocoded;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToLocation:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 label:(id)arg2 address:(id)arg3 latitude:(double)arg4 longitude:(double)arg5 accuracy:(double)arg6 quality:(double)arg7;
- (id)initWithLocation:(id)arg1 latitude:(double)arg2 longitude:(double)arg3 accuracy:(double)arg4;
- (id)initWithType:(unsigned long long)arg1 label:(id)arg2 latitude:(double)arg3 longitude:(double)arg4 accuracy:(double)arg5 quality:(double)arg6;
- (id)initWithType:(unsigned long long)arg1 label:(id)arg2 address:(id)arg3 accuracy:(double)arg4 quality:(double)arg5;

@end

@interface SGMailMessage : NSObject <SGObject>
{
    SGSimpleMailMessage *_value;
}

+ (id)mailMessageWithValue:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) SGSimpleMailMessage *value; // @synthesize value=_value;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToMailMessage:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithValue:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGMailMessageKey : NSObject <NSCopying, NSSecureCoding>
{
    long long _messageIdHash;
    NSString *_source;
    NSString *_messageId;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) long long messageIdHash; // @synthesize messageIdHash=_messageIdHash;
@property(readonly, nonatomic) NSString *messageId; // @synthesize messageId=_messageId;
@property(readonly, nonatomic) NSString *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToMailMessageKey:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSource:(id)arg1 messageIdHash:(long long)arg2;
- (id)initWithSource:(id)arg1 messageId:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGMonochrome : NSObject
{
}

+ (id)stringByExtractingPlainTextFromHTML:(id)arg1;
+ (id)stringByExtractingPlainTextFromHTML:(id)arg1 tableDelimiters:(_Bool)arg2;

@end

@interface SGName : NSObject <SGObject>
{
    NSString *_fullName;
    NSString *_firstName;
    NSString *_middleName;
    NSString *_lastName;
    NSString *_prefix;
    NSString *_suffix;
}

+ (id)nameWithFirstName:(id)arg1;
+ (id)nameWithFirstName:(id)arg1 lastName:(id)arg2;
+ (id)nameWithFirstName:(id)arg1 lastName:(id)arg2 middleName:(id)arg3 fullName:(id)arg4 prefix:(id)arg5 suffix:(id)arg6;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *suffix; // @synthesize suffix=_suffix;
@property(readonly, nonatomic) NSString *prefix; // @synthesize prefix=_prefix;
@property(readonly, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(readonly, nonatomic) NSString *middleName; // @synthesize middleName=_middleName;
@property(readonly, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(readonly, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToName:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, nonatomic) NSString *name;
- (id)initWithFirstName:(id)arg1 middleName:(id)arg2 lastName:(id)arg3 fullName:(id)arg4 prefix:(id)arg5 suffix:(id)arg6;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGOrigin : NSObject <NSCopying, NSSecureCoding>
{
    unsigned long long _type;
    NSString *_sourceKey;
    NSString *_externalKey;
    NSString *_contextSnippet;
    struct _NSRange _contextSnippetRange;
    NSDate *_date;
    NSString *_title;
    _Bool _fromForwardedMessage;
}

+ (id)originWithType:(unsigned long long)arg1 sourceKey:(id)arg2 externalKey:(id)arg3 fromForwardedMessage:(_Bool)arg4;
+ (_Bool)supportsSecureCoding;
@property(readonly, getter=isFromForwardedMessage) _Bool fromForwardedMessage; // @synthesize fromForwardedMessage=_fromForwardedMessage;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic) NSString *externalKey; // @synthesize externalKey=_externalKey;
@property(readonly, nonatomic) NSString *sourceKey; // @synthesize sourceKey=_sourceKey;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToOrigin:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSURL *url;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithType:(unsigned long long)arg1 sourceKey:(id)arg2 externalKey:(id)arg3 fromForwardedMessage:(_Bool)arg4;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGPhoneNumber : SGLabeledObject
{
    NSString *_phoneNumber;
}

+ (id)phoneNumber:(id)arg1 label:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToPhoneNumber:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithPhoneNumber:(id)arg1 label:(id)arg2;

@end

@interface SGPostalAddress : SGLabeledObject
{
    NSString *_cachedAddress;
    long long _cachedAddressDispatchOnceToken;
    NSString *_rawAddress;
}

+ (id)postalAddress:(id)arg1 label:(id)arg2;
+ (id)address:(id)arg1 label:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *rawAddress; // @synthesize rawAddress=_rawAddress;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToPostalAddress:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *address;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAddress:(id)arg1 label:(id)arg2;

@end

@interface SGRealtimeContact : NSObject <NSSecureCoding, NSCopying>
{
    int _state;
    int _abPersonId;
    SGContact *_contact;
}

+ (id)realtimeContactForFields:(id)arg1 addedToCuratedContact:(int)arg2;
+ (id)realtimeContactForNewContact:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) int abPersonId; // @synthesize abPersonId=_abPersonId;
@property(readonly, nonatomic) SGContact *contact; // @synthesize contact=_contact;
@property(readonly, nonatomic) int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToRealtimeContact:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithState:(int)arg1 contact:(id)arg2 abPersonId:(int)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGRealtimeEvent : NSObject <NSSecureCoding, NSCopying>
{
    int _state;
    SGEvent *_event;
    NSString *_eventIdentifier;
}

+ (id)realtimeEventForNearDuplicateEvent:(id)arg1;
+ (id)realtimeEventForDuplicateEvent:(id)arg1;
+ (id)realtimeEventUpdateToEvent:(id)arg1 withNewValues:(id)arg2;
+ (id)realtimeEventForCanceledEvent:(id)arg1 eventIdentifier:(id)arg2;
+ (id)realtimeEventForNewEvent:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *eventIdentifier; // @synthesize eventIdentifier=_eventIdentifier;
@property(readonly, nonatomic) SGEvent *event; // @synthesize event=_event;
@property(readonly, nonatomic) int state; // @synthesize state=_state;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToRealtimeEvent:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithState:(int)arg1 event:(id)arg2 eventIdentifier:(id)arg3;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGRecordId : NSObject <NSCopying, NSSecureCoding>
{
    long long _internalEntityId;
}

+ (id)recordIdWithNumericValue:(long long)arg1;
+ (id)recordIdWithInternalEntityId:(long long)arg1;
+ (_Bool)supportsSecureCoding;
- (id)description;
- (_Bool)isEqualToRecordId:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (long long)numericValue;
- (long long)internalEntityId;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithInternalEntityId:(long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGSimpleCalendarEvent : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _isAllDay;
    NSString *_identifier;
    NSString *_title;
    NSDate *_start;
    NSDate *_end;
    NSTimeZone *_timeZone;
    NSDate *_creationDate;
    NSDate *_lastModifiedDate;
    NSString *_calendar;
    NSString *_notes;
    NSString *_location;
    SGSimpleNamedEmailAddress *_organizer;
    NSArray *_participants;
    NSURL *_URL;
}

+ (id)eventWithIdentifier:(id)arg1 properties:(id)arg2;
+ (id)eventWithIdentifier:(id)arg1 title:(id)arg2 start:(id)arg3 end:(id)arg4 timeZone:(id)arg5 creationDate:(id)arg6 lastModifiedDate:(id)arg7 isAllDay:(_Bool)arg8 calendar:(id)arg9 notes:(id)arg10 location:(id)arg11 organizer:(id)arg12 participants:(id)arg13 url:(id)arg14;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) NSArray *participants; // @synthesize participants=_participants;
@property(readonly, nonatomic) SGSimpleNamedEmailAddress *organizer; // @synthesize organizer=_organizer;
@property(readonly, nonatomic) NSString *location; // @synthesize location=_location;
@property(readonly, nonatomic) NSString *notes; // @synthesize notes=_notes;
@property(readonly, nonatomic) NSString *calendar; // @synthesize calendar=_calendar;
@property(readonly, nonatomic) _Bool isAllDay; // @synthesize isAllDay=_isAllDay;
@property(readonly, nonatomic) NSDate *lastModifiedDate; // @synthesize lastModifiedDate=_lastModifiedDate;
@property(readonly, nonatomic) NSDate *creationDate; // @synthesize creationDate=_creationDate;
@property(readonly, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(readonly, nonatomic) NSDate *end; // @synthesize end=_end;
@property(readonly, nonatomic) NSDate *start; // @synthesize start=_start;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToSimpleCalendarEvent:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)asDictionary;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 title:(id)arg2 start:(id)arg3 end:(id)arg4 timeZone:(id)arg5 creationDate:(id)arg6 lastModifiedDate:(id)arg7 isAllDay:(_Bool)arg8 calendar:(id)arg9 notes:(id)arg10 location:(id)arg11 organizer:(id)arg12 participants:(id)arg13 url:(id)arg14;
- (id)initWithEKEvent:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGSimpleMailHeaderKeyValue : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_key;
    NSString *_value;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToSimpleMailHeaderKeyValue:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithKey:(id)arg1 value:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGSimpleMailMessage : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _isInhuman;
    SGSimpleNamedEmailAddress *_from;
    SGSimpleNamedEmailAddress *_replyTo;
    NSArray *_to;
    NSArray *_cc;
    NSArray *_bcc;
    NSString *_messageId;
    NSString *_subject;
    NSString *_body;
    NSString *_htmlBody;
    NSDate *_date;
    NSNumber *_received;
    NSArray *_headers;
}

+ (id)fromDictionary:(id)arg1;
+ (id)parseRfc822Headers:(id)arg1 htmlContent:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *headers; // @synthesize headers=_headers;
@property(nonatomic) _Bool isInhuman; // @synthesize isInhuman=_isInhuman;
@property(copy, nonatomic) NSNumber *received; // @synthesize received=_received;
@property(copy, nonatomic) NSDate *date; // @synthesize date=_date;
@property(copy, nonatomic) NSString *htmlBody; // @synthesize htmlBody=_htmlBody;
@property(copy, nonatomic) NSString *body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(copy, nonatomic) NSString *messageId; // @synthesize messageId=_messageId;
@property(copy, nonatomic) NSArray *bcc; // @synthesize bcc=_bcc;
@property(copy, nonatomic) NSArray *cc; // @synthesize cc=_cc;
@property(copy, nonatomic) NSArray *to; // @synthesize to=_to;
@property(copy, nonatomic) SGSimpleNamedEmailAddress *replyTo; // @synthesize replyTo=_replyTo;
@property(copy, nonatomic) SGSimpleNamedEmailAddress *from; // @synthesize from=_from;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToSimpleMailMessage:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *uniqueId;
@property(readonly, nonatomic) SGSimpleNamedEmailAddress *mailingList;
- (id)rfc822Data;
- (id)asDictionary;

@end

@interface SGSimpleNamedEmailAddress : NSObject <NSCopying, NSSecureCoding>
{
    NSString *_emailAddress;
    NSString *_name;
}

+ (id)serializeAll:(id)arg1;
+ (id)namedEmailAddressesWithFieldValues:(id)arg1;
+ (id)namedEmailAddressWithFieldValue:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToNamedEmailAddress:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)serialized;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithName:(id)arg1 emailAddress:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SGSimpleTimeRange : NSObject <NSCopying, NSSecureCoding>
{
    double _start;
    double _end;
    _Bool _floating;
    long long _startUTCOffsetSeconds;
    long long _endUTCOffsetSeconds;
}

+ (_Bool)supportsSecureCoding;
+ (id)floatingRangeWithStart:(double)arg1 end:(double)arg2;
+ (id)floatingRangeWithStartDate:(id)arg1 endDate:(id)arg2;
+ (id)utcRangeWithStart:(double)arg1 duration:(double)arg2;
+ (id)rangeWithStart:(double)arg1 duration:(double)arg2 timeZone:(id)arg3;
+ (id)utcRangeWithStart:(double)arg1 end:(double)arg2;
+ (id)rangeWithStart:(double)arg1 end:(double)arg2 timeZone:(id)arg3;
+ (id)rangeWithStartDate:(id)arg1 startTimeZone:(id)arg2 endDate:(id)arg3 endTimeZone:(id)arg4;
+ (id)rangeWithStart:(double)arg1 startTimeZone:(id)arg2 end:(double)arg3 endTimeZone:(id)arg4;
+ (id)rangeWithGregorianStartComponents:(id)arg1 endComponents:(id)arg2;
+ (_Bool)hasYearMonthDayComponents:(id)arg1;
+ (_Bool)isAllDayComponents:(id)arg1;
+ (id)dateFromGregorianComponents:(id)arg1;
+ (double)fromFloatingTime:(double)arg1;
+ (double)toFloatingTime:(double)arg1;
@property(readonly, nonatomic, getter=isFloating) _Bool floating; // @synthesize floating=_floating;
@property(readonly, nonatomic) long long endUTCOffsetSeconds; // @synthesize endUTCOffsetSeconds=_endUTCOffsetSeconds;
@property(readonly, nonatomic) long long startUTCOffsetSeconds; // @synthesize startUTCOffsetSeconds=_startUTCOffsetSeconds;
@property(readonly, nonatomic) double end; // @synthesize end=_end;
@property(readonly, nonatomic) double start; // @synthesize start=_start;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToSimpleTimeRange:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)stableStringRepresentation;
- (id)absoluteRange;
- (id)description;
- (id)initWithStart:(double)arg1 startUTCOffsetSeconds:(long long)arg2 end:(double)arg3 endUTCOffsetSeconds:(long long)arg4;
- (id)initFloatingWithStart:(double)arg1 end:(double)arg2;

@end

@interface SGSuggestionsService : NSObject
{
    SGDaemonConnection *_daemonConnection;
    NSObject<OS_dispatch_queue> *_replyQueue;
}

- (void).cxx_destruct;
- (_Bool)sendRTCLogs:(id *)arg1;
- (void)relevantABRecordIDsWithLimit:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)relevantABRecordIDsWithLimit:(long long)arg1 error:(id *)arg2;
- (void)predictedCCEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 withCompletion:(CDUnknownBlockType)arg6;
- (id)predictedCCEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 error:(id *)arg6;
- (void)predictedToEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 withCompletion:(CDUnknownBlockType)arg6;
- (id)predictedToEmailAddressesWithToAddresses:(id)arg1 ccAddresses:(id)arg2 fromAddress:(id)arg3 date:(double)arg4 bounds:(id)arg5 error:(id *)arg6;
- (void)rejectContact:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)rejectContact:(id)arg1 error:(id *)arg2;
- (void)confirmContact:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)confirmContact:(id)arg1 error:(id *)arg2;
- (void)rejectEvent:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)rejectEvent:(id)arg1 error:(id *)arg2;
- (void)confirmEvent:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)confirmEvent:(id)arg1 error:(id *)arg2;
- (void)contactFromABRecordID:(int)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)contactFromABRecordID:(int)arg1 error:(id *)arg2;
- (void)contactMatchesByEmailAddress:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)contactMatchesByEmailAddress:(id)arg1 error:(id *)arg2;
- (void)contactMatchesByPhoneNumber:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)contactMatchesByPhoneNumber:(id)arg1 error:(id *)arg2;
- (void)suggestionsFromEmailContent:(id)arg1 headers:(id)arg2 source:(id)arg3 options:(unsigned long long)arg4 withCompletion:(CDUnknownBlockType)arg5;
- (id)suggestionsFromEmailContent:(id)arg1 headers:(id)arg2 source:(id)arg3 options:(unsigned long long)arg4 error:(id *)arg5;
- (void)suggestEventsInFutureLimitTo:(unsigned long long)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (id)suggestEventsInFutureLimitTo:(unsigned long long)arg1 error:(id *)arg2;
- (void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 withCompletion:(CDUnknownBlockType)arg5;
- (id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 error:(id *)arg5;
- (void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 error:(id *)arg4;
- (void)suggestEventsInFutureLimitTo:(unsigned long long)arg1 options:(unsigned int)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)suggestEventsInFutureLimitTo:(unsigned long long)arg1 options:(unsigned int)arg2 error:(id *)arg3;
- (void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5 withCompletion:(CDUnknownBlockType)arg6;
- (id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned int)arg5 error:(id *)arg6;
- (void)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4 withCompletion:(CDUnknownBlockType)arg5;
- (id)suggestEventsStartingAt:(id)arg1 endingAt:(id)arg2 limitTo:(unsigned long long)arg3 options:(unsigned int)arg4 error:(id *)arg5;
- (void)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2 error:(id *)arg3;
- (void)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (id)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2 error:(id *)arg3;
- (void)suggestionsFromRFC822Data:(id)arg1 source:(id)arg2 options:(unsigned long long)arg3 withCompletion:(CDUnknownBlockType)arg4;
- (id)suggestionsFromRFC822Data:(id)arg1 source:(id)arg2 options:(unsigned long long)arg3 error:(id *)arg4;
- (void)clearCachesFully:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (_Bool)clearCachesFully:(_Bool)arg1 error:(id *)arg2;
- (void)resetConfirmationAndRejectionHistoryWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)resetConfirmationAndRejectionHistory:(id *)arg1;
- (void)prepareForRealtimeExtractionWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)prepareForRealtimeExtraction:(id *)arg1;
- (_Bool)isEnabledWithError:(id *)arg1;
- (id)_remoteSuggestionManager;
- (void)dealloc;
- (id)init;

@end

