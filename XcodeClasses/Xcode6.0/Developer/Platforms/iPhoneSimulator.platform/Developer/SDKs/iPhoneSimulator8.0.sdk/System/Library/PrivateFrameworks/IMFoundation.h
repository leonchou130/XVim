//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _TidyDoc {
    int _field1;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct in_addr {
    unsigned int _field1;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct timeval {
    long long tv_sec;
    int tv_usec;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/IMFoundation.framework/IMFoundation
// UUID: 3B9C0678-804A-364D-8B8F-5EBAB015C607
//
//                           Arch: x86_64
//                Current version: 800.0.0
//          Compatibility version: 1.0.0
//                 Source version: 341.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol IMConnectionMonitorDelegate
- (void)connectionMonitorDidUpdate:(IMConnectionMonitor *)arg1;
@end

@protocol IMFileCopierDelegate
- (void)fileCopierDidFinish:(IMFileCopier *)arg1;
- (void)fileCopierDidStart:(IMFileCopier *)arg1;
@end

@protocol IMReachabilityDelegate
- (void)reachabilityDidChange:(IMReachability *)arg1;
@end

@protocol IMRemoteObjectCoding
- (id)initWithIMRemoteObjectSerializedDictionary:(NSDictionary *)arg1;
- (void)encodeWithIMRemoteObjectSerializedDictionary:(NSMutableDictionary *)arg1;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidEnterDataProtectionLock;
- (void)systemDidLeaveDataProtectionLock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)systemDidLogout;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidFastUserSwitchOut;
- (void)systemRestoreStateDidChange;
- (void)systemDidFinishMigration;
- (void)systemDidStopBackup;
- (void)systemDidStartBackup;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillResignActive;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemWillShutdown;
- (void)systemDidLeaveMemoryPressure;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSXMLParserDelegate <NSObject>

@optional
- (void)parser:(NSXMLParser *)arg1 validationErrorOccurred:(NSError *)arg2;
- (void)parser:(NSXMLParser *)arg1 parseErrorOccurred:(NSError *)arg2;
- (NSData *)parser:(NSXMLParser *)arg1 resolveExternalEntityName:(NSString *)arg2 systemID:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundCDATA:(NSData *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundComment:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundProcessingInstructionWithTarget:(NSString *)arg2 data:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundIgnorableWhitespace:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 foundCharacters:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didEndMappingPrefix:(NSString *)arg2;
- (void)parser:(NSXMLParser *)arg1 didStartMappingPrefix:(NSString *)arg2 toURI:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 didEndElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 didStartElement:(NSString *)arg2 namespaceURI:(NSString *)arg3 qualifiedName:(NSString *)arg4 attributes:(NSDictionary *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundExternalEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parser:(NSXMLParser *)arg1 foundInternalEntityDeclarationWithName:(NSString *)arg2 value:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundElementDeclarationWithName:(NSString *)arg2 model:(NSString *)arg3;
- (void)parser:(NSXMLParser *)arg1 foundAttributeDeclarationWithName:(NSString *)arg2 forElement:(NSString *)arg3 type:(NSString *)arg4 defaultValue:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundUnparsedEntityDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4 notationName:(NSString *)arg5;
- (void)parser:(NSXMLParser *)arg1 foundNotationDeclarationWithName:(NSString *)arg2 publicID:(NSString *)arg3 systemID:(NSString *)arg4;
- (void)parserDidEndDocument:(NSXMLParser *)arg1;
- (void)parserDidStartDocument:(NSXMLParser *)arg1;
@end

@interface Broadcaster : NSProxy
{
    NSArray *_targets;
    IMRemoteObjectBroadcaster *_parent;
    Protocol *_protocol;
    IMMessageContext *_messageContext;
}

- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)sendXPCObject:(id)arg1;
- (void)dealloc;
- (id)initWithNotifier:(id)arg1 messageContext:(id)arg2 protocol:(id)arg3 targets:(id)arg4;

@end

@interface IMItem : NSObject <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    NSString *_handle;
    NSString *_service;
    NSString *_account;
    NSString *_unformattedID;
    NSString *_accountID;
    NSString *_roomName;
    NSDictionary *_senderInfo;
    NSString *_guid;
    NSDate *_time;
    NSString *_countryCode;
    long long _messageID;
    id _context;
    long long _type;
}

+ (Class)classForIMItemType:(long long)arg1;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) id context; // @synthesize context=_context;
- (void)_setMessageID:(long long)arg1;
@property(nonatomic) long long messageID; // @synthesize messageID=_messageID;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(retain, nonatomic) NSDate *time; // @synthesize time=_time;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(retain, nonatomic) NSDictionary *senderInfo; // @synthesize senderInfo=_senderInfo;
@property(retain, nonatomic) NSString *roomName; // @synthesize roomName=_roomName;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
@property(retain, nonatomic) NSString *unformattedID; // @synthesize unformattedID=_unformattedID;
@property(retain, nonatomic) NSString *account; // @synthesize account=_account;
@property(retain, nonatomic) NSString *service; // @synthesize service=_service;
@property(retain, nonatomic) NSString *handle; // @synthesize handle=_handle;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(retain, nonatomic) NSString *sender;
@property(readonly, nonatomic) _Bool isFromMe;
- (id)dictionaryRepresentation;
- (id)copyDictionaryRepresentation;
- (id)initWithIMRemoteObjectSerializedDictionary:(id)arg1;
- (void)encodeWithIMRemoteObjectSerializedDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 guid:(id)arg3 messageID:(long long)arg4 account:(id)arg5 accountID:(id)arg6 service:(id)arg7 handle:(id)arg8 roomName:(id)arg9 unformattedID:(id)arg10 countryCode:(id)arg11 type:(long long)arg12;
- (id)initWithSender:(id)arg1 time:(id)arg2 guid:(id)arg3 type:(long long)arg4;
- (id)initWithDictionary:(id)arg1;
- (id)description;

@end

@interface IMMessageItem : IMItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    unsigned int _error;
    NSString *_subject;
    NSString *_plainBody;
    NSArray *_fileTransferGUIDs;
    unsigned long long _flags;
    NSAttributedString *_body;
    NSData *_bodyData;
    long long _replaceID;
    NSDate *_timeRead;
    NSDate *_timeDelivered;
    NSDate *_timePlayed;
    long long _expireState;
}

@property(nonatomic) long long expireState; // @synthesize expireState=_expireState;
@property(retain, nonatomic) NSDate *timePlayed; // @synthesize timePlayed=_timePlayed;
@property(retain, nonatomic) NSDate *timeDelivered; // @synthesize timeDelivered=_timeDelivered;
@property(retain, nonatomic) NSDate *timeRead; // @synthesize timeRead=_timeRead;
@property(nonatomic) long long replaceID; // @synthesize replaceID=_replaceID;
@property(retain, nonatomic) NSData *bodyData; // @synthesize bodyData=_bodyData;
@property(nonatomic) unsigned long long flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSArray *fileTransferGUIDs; // @synthesize fileTransferGUIDs=_fileTransferGUIDs;
@property(nonatomic) unsigned int errorCode; // @synthesize errorCode=_error;
@property(retain, nonatomic) NSString *plainBody; // @synthesize plainBody=_plainBody;
@property(retain, nonatomic) NSString *subject; // @synthesize subject=_subject;
- (id)description;
- (_Bool)isEqual:(id)arg1;
@property(retain, nonatomic) NSAttributedString *body; // @synthesize body=_body;
- (void)_clearBodyData;
- (void)_regenerateBodyData;
- (void)_regenerateBodyText;
- (void)_generateBodyTextIfNeeded;
- (void)_generateBodyDataIfNeeded;
- (void)adjustIsEmptyFlag;
- (void)_updateFlags:(unsigned long long)arg1;
- (void)setWasDataDetected:(_Bool)arg1;
@property(readonly, nonatomic) _Bool wasDataDetected;
@property(nonatomic) _Bool hasDataDetectorResults;
@property(readonly, nonatomic) _Bool isFromExternalSource;
@property(readonly, nonatomic) _Bool wasDowngraded;
@property(readonly, nonatomic) _Bool isSent;
@property(readonly, nonatomic) _Bool isEmote;
@property(readonly, nonatomic) _Bool isLocatingMessage;
@property(readonly, nonatomic) _Bool isTypingMessage;
@property(readonly, nonatomic) _Bool isPrepared;
@property(readonly, nonatomic) _Bool isDelivered;
- (_Bool)isFromMe;
@property(readonly, nonatomic) _Bool isPlayed;
@property(readonly, nonatomic) _Bool isExpirable;
@property(readonly, nonatomic) _Bool isAudioMessage;
@property(readonly, nonatomic) _Bool isRead;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) _Bool isFinished;
@property(readonly, nonatomic) _Bool isAlert;
- (id)sender;
- (void)dealloc;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 timeRead:(id)arg3 timeDelivered:(id)arg4 timePlayed:(id)arg5 subject:(id)arg6 body:(id)arg7 bodyData:(id)arg8 attributes:(id)arg9 fileTransferGUIDs:(id)arg10 flags:(unsigned long long)arg11 guid:(id)arg12 messageID:(long long)arg13 account:(id)arg14 accountID:(id)arg15 service:(id)arg16 handle:(id)arg17 roomName:(id)arg18 unformattedID:(id)arg19 countryCode:(id)arg20 expireState:(long long)arg21 errorType:(unsigned int)arg22;
- (id)initWithSenderInfo:(id)arg1 time:(id)arg2 guid:(id)arg3 messageID:(long long)arg4 account:(id)arg5 accountID:(id)arg6 service:(id)arg7 handle:(id)arg8 roomName:(id)arg9 unformattedID:(id)arg10 countryCode:(id)arg11;
- (id)initWithSender:(id)arg1 time:(id)arg2 guid:(id)arg3 type:(long long)arg4;
- (id)initWithSender:(id)arg1 time:(id)arg2 body:(id)arg3 attributes:(id)arg4 fileTransferGUIDs:(id)arg5 flags:(unsigned long long)arg6 error:(id)arg7 guid:(id)arg8;
- (id)copyDictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1 hint:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithFlags:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface FZMessage : IMMessageItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
}

- (id)initWithIMRemoteObjectSerializedDictionary:(id)arg1;
- (void)encodeWithIMRemoteObjectSerializedDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface IMXMLParserFrame : NSObject
{
}

- (void)parser:(id)arg1 context:(id)arg2 foundIgnorableWhitespace:(id)arg3;
- (void)parser:(id)arg1 context:(id)arg2 foundCharacters:(id)arg3;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface IMToSuperParserFrame : IMXMLParserFrame
{
}

- (void)parser:(id)arg1 context:(id)arg2 foundIgnorableWhitespace:(id)arg3;
- (void)parser:(id)arg1 context:(id)arg2 foundCharacters:(id)arg3;
- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_Default_Frame : IMToSuperParserFrame
{
}

- (void)parser:(id)arg1 context:(id)arg2 foundCharacters:(id)arg3;

@end

@interface HTMLToSuper_A_Frame : HTMLToSuper_Default_Frame
{
    _Bool _shouldPopLink;
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_BODY_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_BR_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_B_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_EM_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_FONT_Frame : HTMLToSuper_Default_Frame
{
    _Bool _shouldPopBackgroundColor;
    _Bool _shouldPopForegroundColor;
    _Bool _shouldPopFontName;
    _Bool _shouldPopFontSize;
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_I_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_SPAN_Frame : HTMLToSuper_Default_Frame
{
    _Bool _shouldPopBackgroundColor;
    _Bool _shouldPopForegroundColor;
    _Bool _shouldPopFontFamily;
    _Bool _shouldPopFontSize;
    _Bool _shouldDecrementBoldCount;
    _Bool _shouldDecrementItalicCount;
    _Bool _shouldDecrementUnderlineCount;
    _Bool _shouldDecrementStrikeCount;
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_STRIKE_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_STRONG_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_S_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface HTMLToSuper_U_Frame : HTMLToSuper_Default_Frame
{
}

- (void)parser:(id)arg1 context:(id)arg2 didEndElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5;
- (void)parser:(id)arg1 context:(id)arg2 didStartElement:(id)arg3 namespaceURI:(id)arg4 qualifiedName:(id)arg5 attributes:(id)arg6;

@end

@interface IMAttributedStringParser : NSObject
{
    IMAttributedStringParserContext *_context;
}

+ (id)sharedInstance;
- (void)parseContext:(id)arg1;
- (void)_preprocessWithContext:(id)arg1 string:(id *)arg2;

@end

@interface IMAttributedStringParserContext : NSObject
{
    NSAttributedString *_inString;
}

@property(readonly, retain) NSAttributedString *inString; // @synthesize inString=_inString;
- (id)parser:(id)arg1 preprocessedAttributesForAttributes:(id)arg2 range:(struct _NSRange)arg3;
@property(readonly) _Bool shouldPreprocess;
- (void)parserDidEnd:(id)arg1;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)parserDidStart:(id)arg1;
@property(readonly, retain) NSArray *resultsForLogging;
@property(readonly, retain) NSString *name;
- (void)dealloc;
- (id)initWithAttributedString:(id)arg1;

@end

@interface IMCallMonitor : NSObject
{
    id _callCenter;
    _Bool _wasOnCall;
    NSDate *_lastCallDate;
}

+ (id)sharedInstance;
@property(readonly, retain, nonatomic) NSDate *dateLastCallEnded; // @synthesize dateLastCallEnded=_lastCallDate;
@property(readonly, nonatomic) _Bool isOnCall;
- (void)dealloc;
- (id)init;

@end

@interface IMInvocationTrampoline : NSObject
{
    id _target;
}

@property(retain) id target; // @synthesize target=_target;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)performInvocation:(id)arg1;
- (void)dealloc;

@end

@interface IMCapturedInvocationTrampoline : IMInvocationTrampoline
{
    id *_outInvocation;
}

- (void)forwardInvocation:(id)arg1;
- (id)initWithTarget:(id)arg1 outInvocation:(id *)arg2;

@end

@interface IMConnectionMonitor : NSObject
{
    NSString *_remoteHost;
    id <IMConnectionMonitorDelegate> _delegate;
}

+ (id)alloc;
@property(nonatomic) id <IMConnectionMonitorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *remoteHost; // @synthesize remoteHost=_remoteHost;
@property(readonly, nonatomic) _Bool isImmediatelyReachable;
@property(readonly, nonatomic) _Bool requiresDataConnectionActivation;
@property(nonatomic, setter=setDataConnectionActive:) _Bool isDataConnectionActive;
- (void)clear;
- (void)goDisconnected;
- (void)goConnectedWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2;
- (void)_setup;
- (void)dealloc;
- (id)initWithRemoteHost:(id)arg1 delegate:(id)arg2;

@end

@interface IMDelayedInvocationTrampoline : IMInvocationTrampoline
{
    NSArray *_modes;
    double _delay;
}

- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 delay:(double)arg2 modes:(id)arg3;

@end

@interface IMNetworkManager : NSObject
{
}

+ (id)sharedInstance;
+ (id)alloc;

@end

@interface IMDesktopNetworkManager : IMNetworkManager
{
}

@end

@interface IMDeviceSupport : NSObject
{
    NSString *_model;
    NSString *_productName;
    NSString *_productVersion;
    NSString *_buildVersion;
    NSRecursiveLock *_lock;
}

+ (id)marketingNameForModel:(id)arg1;
+ (id)sharedInstance;
@property(readonly, nonatomic) NSString *deviceInformationString;
@property(readonly, nonatomic) NSString *productBuildVersion;
@property(readonly, nonatomic) NSString *productVersion;
@property(readonly, nonatomic) NSString *productName;
@property(readonly, nonatomic) NSString *userAgentString;
- (void)_generateProductInformation;
@property(readonly, nonatomic) NSString *model;
- (void)dealloc;
- (id)init;

@end

@interface IMDirectlyObservableObject : NSObject
{
    NSArray *_observers;
}

@property(retain) NSArray *observers; // @synthesize observers=_observers;
- (void)informObserversOfNotification:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)_objectDidPostNotification:(id)arg1;
- (void)dealloc;

@end

@interface IMFileCopier : NSObject
{
    _Bool _shouldCancel;
    _Bool _didErrorOccur;
    _Bool _inProgress;
    id <IMFileCopierDelegate> _delegate;
    NSURL *_inputURL;
    NSURL *_outputURL;
    id _identifier;
    unsigned long long _operation;
    void *_BOMCopier;
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _callback;
}

@property CDUnknownBlockType _callback; // @synthesize _callback;
@property NSObject<OS_dispatch_queue> *_queue; // @synthesize _queue;
@property void *_BOMCopier; // @synthesize _BOMCopier;
@property unsigned long long operation; // @synthesize operation=_operation;
@property _Bool inProgress; // @synthesize inProgress=_inProgress;
@property(readonly, nonatomic) _Bool didErrorOccur; // @synthesize didErrorOccur=_didErrorOccur;
@property(readonly, nonatomic) _Bool wasCancelled; // @synthesize wasCancelled=_shouldCancel;
@property(readonly) id identifier; // @synthesize identifier=_identifier;
@property(readonly) NSURL *outputURL; // @synthesize outputURL=_outputURL;
@property(readonly) NSURL *inputURL; // @synthesize inputURL=_inputURL;
@property id <IMFileCopierDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_worker_doCopy;
- (void)_main_copierFinishedWithResult:(id)arg1;
- (void)cleanup;
- (void)cancel;
- (void)start;
- (void)_fillOutputURLFromInputURL;
- (id)_temporaryCopierPath;
- (void)dealloc;
- (id)initWithInputURL:(id)arg1 outputURL:(id)arg2 identifier:(id)arg3 operation:(unsigned long long)arg4 completionBlock:(CDUnknownBlockType)arg5 queue:(id)arg6;
- (id)initWithInputURL:(id)arg1 outputURL:(id)arg2 identifier:(id)arg3 operation:(unsigned long long)arg4 delegate:(id)arg5;

@end

@interface IMFileManager : NSFileManager
{
}

+ (id)defaultHFSFileManager;
+ (id)defaultManager;
- (id)UTITypeOfPathExtension:(id)arg1;
- (id)UTITypeOfPath:(id)arg1;
- (id)pathExtensionForUTIType:(id)arg1;
- (id)MIMETypeOfPath:(id)arg1;
- (id)MIMETypeOfPathExtension:(id)arg1;
- (id)UTITypeOfMimeType:(id)arg1;
- (id)pathExtensionForMIMEType:(id)arg1;
- (id)displayNameOfFileWithName:(id)arg1 hfsFlags:(unsigned short)arg2;
- (id)attributesOfItemAtPath:(id)arg1 error:(id *)arg2;

@end

@interface IMFileTransfer : NSObject
{
    _Bool _isIncoming;
    _Bool _isDirectory;
    _Bool _shouldAttemptToResume;
    _Bool _wasRegisteredAsStandalone;
    _Bool _shouldForceArchive;
    _Bool _needsWrapper;
    unsigned short _hfsFlags;
    unsigned int _hfsType;
    unsigned int _hfsCreator;
    NSURL *_localURL;
    NSData *_localBookmark;
    double _lastUpdatedInterval;
    double _lastAveragedInterval;
    unsigned long long _lastAveragedBytes;
    NSString *_guid;
    NSString *_messageGUID;
    NSDate *_startDate;
    NSDate *_createdDate;
    long long _transferState;
    NSString *_filename;
    NSURL *_transferDataURL;
    NSString *_utiType;
    NSString *_mimeType;
    NSString *_accountID;
    NSString *_otherPerson;
    unsigned long long _currentBytes;
    unsigned long long _totalBytes;
    unsigned long long _averageTransferRate;
    long long _error;
    NSString *_errorDescription;
    NSDictionary *_localUserInfo;
    NSString *_transferredFilename;
    NSDictionary *_transcoderUserInfo;
}

+ (_Bool)_doesLocalURLRequireArchiving:(id)arg1;
+ (id)_invalidCharactersForFileTransferName;
@property(retain, nonatomic) NSDictionary *transcoderUserInfo; // @synthesize transcoderUserInfo=_transcoderUserInfo;
@property(retain, nonatomic) NSString *transferredFilename; // @synthesize transferredFilename=_transferredFilename;
@property(nonatomic, setter=_setNeedsWrapper:) _Bool _needsWrapper; // @synthesize _needsWrapper;
@property(retain, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_localUserInfo;
- (void)_setForceArchive:(_Bool)arg1;
@property(nonatomic) _Bool shouldForceArchive; // @synthesize shouldForceArchive=_shouldForceArchive;
@property(nonatomic, setter=setRegisteredAsStandalone:) _Bool wasRegisteredAsStandalone; // @synthesize wasRegisteredAsStandalone=_wasRegisteredAsStandalone;
- (void)_setErrorDescription:(id)arg1;
@property(retain, nonatomic) NSString *errorDescription; // @synthesize errorDescription=_errorDescription;
- (void)_setError:(long long)arg1;
@property(nonatomic) long long error; // @synthesize error=_error;
@property(nonatomic) _Bool shouldAttemptToResume; // @synthesize shouldAttemptToResume=_shouldAttemptToResume;
@property(nonatomic) _Bool isDirectory; // @synthesize isDirectory=_isDirectory;
@property(nonatomic) unsigned long long averageTransferRate; // @synthesize averageTransferRate=_averageTransferRate;
@property(nonatomic) unsigned long long totalBytes; // @synthesize totalBytes=_totalBytes;
@property(nonatomic) unsigned long long currentBytes; // @synthesize currentBytes=_currentBytes;
@property(retain, nonatomic) NSString *otherPerson; // @synthesize otherPerson=_otherPerson;
@property(retain, nonatomic) NSString *accountID; // @synthesize accountID=_accountID;
@property(nonatomic) unsigned int hfsCreator; // @synthesize hfsCreator=_hfsCreator;
@property(nonatomic) unsigned short hfsFlags; // @synthesize hfsFlags=_hfsFlags;
@property(nonatomic) unsigned int hfsType; // @synthesize hfsType=_hfsType;
@property(retain, nonatomic) NSString *type; // @synthesize type=_utiType;
@property(retain, nonatomic) NSURL *transferDataURL; // @synthesize transferDataURL=_transferDataURL;
@property(retain, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(nonatomic) _Bool isIncoming; // @synthesize isIncoming=_isIncoming;
- (void)_setTransferState:(long long)arg1;
@property(nonatomic) long long transferState; // @synthesize transferState=_transferState;
@property(retain, nonatomic) NSDate *createdDate; // @synthesize createdDate=_createdDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) NSString *messageGUID; // @synthesize messageGUID=_messageGUID;
@property(retain, nonatomic) NSString *guid; // @synthesize guid=_guid;
@property(readonly, nonatomic) unsigned long long _lastAveragedBytes; // @synthesize _lastAveragedBytes;
@property(nonatomic, setter=_setLastAveragedInterval:) double _lastAveragedInterval; // @synthesize _lastAveragedInterval;
@property(nonatomic, setter=_setLastUpdatedInterval:) double _lastUpdatedInterval; // @synthesize _lastUpdatedInterval;
@property(retain, nonatomic) NSData *localBookmark; // @synthesize localBookmark=_localBookmark;
@property(readonly, retain, nonatomic) NSURL *localURLWithoutBookmarkResolution; // @synthesize localURLWithoutBookmarkResolution=_localURL;
- (id)description;
@property(readonly, retain, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
- (void)_setLocalURL:(id)arg1;
- (void)_setLocalPath:(id)arg1;
@property(retain, nonatomic) NSURL *localURL;
@property(retain, nonatomic) NSString *localPath;
- (void)_setTransferDataURL:(id)arg1;
@property(readonly, nonatomic) _Bool existsAtLocalPath;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, nonatomic) _Bool isFinished;
@property(readonly, nonatomic) _Bool canBeAccepted;
- (void)_calculateTypeInformation;
- (id)_dictionaryRepresentation;
- (_Bool)_updateWithDictionaryRepresentation:(id)arg1;
- (void)_clear;
- (void)_setDirectory:(_Bool)arg1 hfsType:(unsigned int)arg2 hfsCreator:(unsigned int)arg3 hfsFlags:(unsigned short)arg4;
- (void)_setAveragedTransferRate:(unsigned long long)arg1 lastAveragedInterval:(double)arg2 lastAveragedBytes:(unsigned long long)arg3;
- (void)_setCurrentBytes:(unsigned long long)arg1 totalBytes:(unsigned long long)arg2;
- (void)_setStartDate:(id)arg1;
- (void)_setAccount:(id)arg1 otherPerson:(id)arg2;
- (id)_initWithGUID:(id)arg1 filename:(id)arg2 isDirectory:(_Bool)arg3 localURL:(id)arg4 account:(id)arg5 otherPerson:(id)arg6 totalBytes:(unsigned long long)arg7 hfsType:(unsigned int)arg8 hfsCreator:(unsigned int)arg9 hfsFlags:(unsigned short)arg10 isIncoming:(_Bool)arg11;
- (id)init;
- (void)dealloc;

@end

@interface IMFromSuperParserContext : IMAttributedStringParserContext
{
    NSMutableArray *_inlinedFileTransferGUIDs;
    NSMutableArray *_standaloneFileTransferGUIDs;
}

@property(readonly, nonatomic) NSArray *standaloneFileTransferGUIDs; // @synthesize standaloneFileTransferGUIDs=_standaloneFileTransferGUIDs;
@property(readonly, nonatomic) NSArray *inlinedFileTransferGUIDs; // @synthesize inlinedFileTransferGUIDs=_inlinedFileTransferGUIDs;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 fileTransferGUID:(id)arg4 filename:(id)arg5 bookmark:(id)arg6 width:(id)arg7 height:(id)arg8;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 characters:(id)arg4;
- (void)parserDidStart:(id)arg1 bodyAttributes:(id)arg2;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)parserDidStart:(id)arg1;
- (id)resultsForLogging;
- (id)name;
- (void)dealloc;
- (id)initWithAttributedString:(id)arg1;

@end

@interface IMGroupActionItem : IMItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    long long _actionType;
    NSString *_otherCountryCode;
    NSString *_otherHandle;
    NSString *_otherUnformattedID;
}

@property(retain, nonatomic) NSString *otherUnformattedID; // @synthesize otherUnformattedID=_otherUnformattedID;
@property(retain, nonatomic) NSString *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(retain, nonatomic) NSString *otherCountryCode; // @synthesize otherCountryCode=_otherCountryCode;
@property(nonatomic) long long actionType; // @synthesize actionType=_actionType;
- (id)copyDictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMGroupTitleChangeItem : IMItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    NSString *_title;
    NSString *_otherCountryCode;
    NSString *_otherHandle;
    NSString *_otherUnformattedID;
}

@property(retain, nonatomic) NSString *otherUnformattedID; // @synthesize otherUnformattedID=_otherUnformattedID;
@property(retain, nonatomic) NSString *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(retain, nonatomic) NSString *otherCountryCode; // @synthesize otherCountryCode=_otherCountryCode;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (id)copyDictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMXMLParserContext : NSObject
{
    NSData *_inContentAsData;
}

@property(readonly, retain) NSData *inContentAsData; // @synthesize inContentAsData=_inContentAsData;
@property(readonly, retain) NSArray *resultsForLogging;
@property(readonly, retain) NSString *name;
- (id)inContent;
- (void)reset;
- (void)dealloc;
- (id)initWithContentAsData:(id)arg1;
- (id)initWithContent:(id)arg1;

@end

@interface IMToSuperParserContext : IMXMLParserContext
{
    unsigned long long _underlineCount;
    unsigned long long _boldCount;
    unsigned long long _italicCount;
    unsigned long long _strikethroughCount;
    unsigned long long _messagePartNumber;
    NSMutableArray *_fontFamilyStack;
    NSMutableArray *_fontSizeStack;
    NSMutableArray *_linkStack;
    NSMutableArray *_backgroundColorStack;
    NSMutableArray *_foregroundColorStack;
    NSMutableDictionary *_currentAttributes;
    _Bool _didAddBodyAttributes;
    long long _baseWritingDirection;
    NSString *_backgroundColor;
    NSString *_foregroundColor;
    NSMutableAttributedString *_body;
    NSMutableArray *_fileTransferGUIDs;
}

@property long long baseWritingDirection; // @synthesize baseWritingDirection=_baseWritingDirection;
@property(retain, nonatomic) NSString *foregroundColor; // @synthesize foregroundColor=_foregroundColor;
@property(retain, nonatomic) NSString *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) NSArray *fileTransferGUIDs; // @synthesize fileTransferGUIDs=_fileTransferGUIDs;
@property(readonly, nonatomic) NSAttributedString *body;
- (void)appendInlineImageWithGUID:(id)arg1 filename:(id)arg2 width:(long long)arg3 height:(long long)arg4;
- (void)appendFileTransferWithGUID:(id)arg1;
- (void)appendString:(id)arg1;
- (void)_incrementMessagePartNumber;
- (void)popForegroundColor;
- (void)pushForegroundColor:(id)arg1;
- (void)popBackgroundColor;
- (void)pushBackgroundColor:(id)arg1;
- (void)popLink;
- (void)pushLink:(id)arg1;
- (void)popFontSize;
- (void)pushFontSize:(id)arg1;
- (void)popFontFamily;
- (void)pushFontFamily:(id)arg1;
- (void)_popValueFromStack:(id)arg1 attributeName:(id)arg2;
- (void)_pushValue:(id)arg1 ontoStack:(id)arg2 attributeName:(id)arg3;
- (void)decrementStrikethroughCount;
- (void)incrementStrikethroughCount;
- (void)decrementUnderlineCount;
- (void)incrementUnderlineCount;
- (void)decrementItalicCount;
- (void)incrementItalicCount;
- (void)decrementBoldCount;
- (void)incrementBoldCount;
- (void)_updateFontSize;
- (void)_updateFontFamily;
- (void)_clearIvars;
- (void)_initIvars;
- (id)resultsForLogging;
- (id)name;
- (void)reset;
- (void)dealloc;

@end

@interface IMHTMLToSuperParserContext : IMToSuperParserContext
{
}

- (id)name;

@end

@interface IMInvocationQueue : NSObject
{
    _Bool _holdQueue;
    id _delegate;
    id _target;
    double _dequeueRate;
    NSMutableArray *_queue;
    NSMutableArray *_options;
    NSProtocolChecker *_protocolChecker;
}

@property(readonly, nonatomic) _Bool holdQueue; // @synthesize holdQueue=_holdQueue;
@property(readonly, retain, nonatomic) NSProtocolChecker *protocolChecker; // @synthesize protocolChecker=_protocolChecker;
@property(readonly, retain, nonatomic) NSMutableArray *options; // @synthesize options=_options;
@property(readonly, retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
@property(nonatomic) double dequeueRate; // @synthesize dequeueRate=_dequeueRate;
@property id target; // @synthesize target=_target;
@property id delegate; // @synthesize delegate=_delegate;
- (id)peek;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long count;
- (void)invokeAll;
- (void)removeAllInvocations;
- (id)_dequeueInvocation;
- (long long)_enqueueInvocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)_insertInvocation:(id)arg1 options:(unsigned long long)arg2;
- (_Bool)_replaceSimilarInvocation:(id)arg1;
- (_Bool)_acceptsOptions:(unsigned long long)arg1;
- (int)_maxQueueLimitSize;
- (int)_numberOfLimitedMessagesInQueue;
- (unsigned long long)_optionsForInvocation:(id)arg1;
- (void)_checkQueue;
- (_Bool)_invokeInvocation:(id)arg1;
- (void)_setQueueTimer;
- (void)_releaseQueueNotification:(id)arg1;
- (void)_holdQueueNotification:(id)arg1;
- (void)_stepQueueNotification:(id)arg1;
@property(retain, nonatomic) Protocol *protocol;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMLocalObject : NSObject
{
    id _internal;
}

+ (void)initialize;
+ (void)_unregisterIMLocalObject:(id)arg1;
+ (void)_registerIMLocalObject:(id)arg1;
+ (id)_registeredIMLocalObjectForPort:(unsigned int)arg1;
+ (void)_setExceptionHandlingDisabled:(_Bool)arg1;
+ (id)_imLocalObjectQueue;
- (id)description;
- (void)invalidate;
@property(readonly, nonatomic) _Bool isValid;
- (_Bool)isValidSelector:(SEL)arg1;
- (void)_enqueueInvocation:(id)arg1 xpcMessage:(id)arg2;
- (void)_popInvocation;
- (id)_peekInvocation;
- (void)_noteNewInvocation;
- (void)_handleNewInvocations;
- (_Bool)handleInvocation:(id)arg1;
- (_Bool)_handleInvocation:(id)arg1;
- (id)_currentMessageContext;
- (void)setPortName:(id)arg1;
@property(readonly, nonatomic) NSString *portName;
@property(readonly, nonatomic) NSObject<OS_xpc_object> *connection;
- (void)_systemShutdown:(id)arg1;
- (void)terminated;
- (void)_portDidBecomeInvalid;
- (void)_portInterrupted;
- (void)_cancelHandlerCompleted;
- (void)dealloc;
- (void)_clearPort:(_Bool)arg1;
@property(nonatomic) id target;
- (id)initWithTarget:(id)arg1 portName:(id)arg2 protocol:(id)arg3;
- (id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3 offMainThread:(_Bool)arg4;
- (id)initWithTarget:(id)arg1 connection:(id)arg2 protocol:(id)arg3;
- (id)initWithTarget:(id)arg1 protocol:(id)arg2;

@end

@interface IMLocalObjectInternal : NSObject
{
    IMMessageContext *_currentMessageContext;
    NSRecursiveLock *_lock;
    id _target;
    NSObject<OS_xpc_object> *_connection;
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_semaphore> *_deathLock;
    NSString *_portName;
    NSProtocolChecker *_protocolChecker;
    NSMutableArray *_componentQueue;
    NSLock *_componentQueueLock;
    NSRecursiveLock *_componentQueueProcessingLock;
    _Bool _pendingComponentQueueProcessing;
    _Bool _busyForwarding;
    _Bool _offMainThread;
}

- (void)dealloc;

@end

@interface IMLocationShareStatusChangeItem : IMItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    _Bool _actionable;
    _Bool _expired;
    long long _status;
    NSString *_otherCountryCode;
    NSString *_otherHandle;
    NSString *_otherUnformattedID;
    long long _direction;
}

@property(nonatomic) long long direction; // @synthesize direction=_direction;
@property(retain, nonatomic) NSString *otherUnformattedID; // @synthesize otherUnformattedID=_otherUnformattedID;
@property(retain, nonatomic) NSString *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(retain, nonatomic) NSString *otherCountryCode; // @synthesize otherCountryCode=_otherCountryCode;
@property(nonatomic) _Bool expired; // @synthesize expired=_expired;
@property(nonatomic) _Bool actionable; // @synthesize actionable=_actionable;
@property(nonatomic) long long status; // @synthesize status=_status;
- (id)copyDictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMLockdownManager : NSObject
{
    _Bool _settingUpActivationState;
    _Bool _isInternalInstall;
    _Bool _isCarrierInstall;
    _Bool _isNonUIInstall;
    _Bool _isVendorInstall;
    _Bool _hasShownMismatchedSIM;
    _Bool _hasShownWaitingAlertThisSession;
    unsigned long long _state;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool _hasShownWaitingAlertThisSession; // @synthesize _hasShownWaitingAlertThisSession;
@property(nonatomic) _Bool _hasShownMismatchedSIM; // @synthesize _hasShownMismatchedSIM;
@property(nonatomic) _Bool _isVendorInstall; // @synthesize _isVendorInstall;
@property(nonatomic) _Bool _isNonUIInstall; // @synthesize _isNonUIInstall;
@property(nonatomic) _Bool _isCarrierInstall; // @synthesize _isCarrierInstall;
@property(nonatomic) _Bool _isInternalInstall; // @synthesize _isInternalInstall;
@property(nonatomic) _Bool _settingUpActivationState; // @synthesize _settingUpActivationState;
- (id)description;
@property(readonly, nonatomic) NSString *uniqueDeviceIdentifier;
@property(readonly, nonatomic) _Bool isExpired;
@property(readonly, nonatomic) _Bool isActivated;
@property(readonly, nonatomic) _Bool isCarrierInstall;
- (long long)lockdownState;
@property(readonly, nonatomic) _Bool isInternalInstall;
@property(readonly, nonatomic) _Bool isVendorInstall;
@property(readonly, nonatomic) _Bool isNonUIInstall;
- (void)_calculateInstallType;
- (void)_setupActivationState;
@property(nonatomic, setter=_setState:) unsigned long long _state; // @synthesize _state;
- (void)_resetActivationState;
- (void)_activationFailed;
- (void)dealloc;
- (id)init;

@end

@interface IMLogging : NSObject
{
}

+ (void)enableConsoleLoggingForLevel:(int)arg1;
+ (void)logString:(id)arg1 toFolder:(id)arg2 toFileNamed:(id)arg3;
+ (id)timeFormatter;
+ (id)dateFormatter;
+ (id)logFileDirectory;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(_Bool)arg4 simpleLogString:(id)arg5;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(_Bool)arg4 simpleLogString:(id)arg5 time:(unsigned long long)arg6;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(_Bool)arg4 format:(id)arg5 arguments:(struct __va_list_tag [1])arg6;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(_Bool)arg4 simpleLogString:(id)arg5 format:(id)arg6 arguments:(struct __va_list_tag [1])arg7 time:(unsigned long long)arg8;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 format:(id)arg4 arguments:(struct __va_list_tag [1])arg5;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 insertProcessInfo:(_Bool)arg4 format:(id)arg5;
+ (void)logAtLevel:(int)arg1 type:(id)arg2 category:(id)arg3 format:(id)arg4;
+ (id)stringForDate;
+ (_Bool)loggingEnabledForLevel:(int)arg1;

@end

@interface IMManualUpdater : NSObject
{
    id _target;
    SEL _action;
    unsigned int _needsUpdate:1;
}

@property(nonatomic) SEL action; // @synthesize action=_action;
@property(nonatomic) id target; // @synthesize target=_target;
@property(nonatomic) _Bool needsUpdate; // @dynamic needsUpdate;
- (void)updateIfNeeded;
- (void)setNeedsUpdate;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)description;

@end

@interface IMMessageActionItem : IMItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    long long _actionType;
    NSString *_otherCountryCode;
    NSString *_otherHandle;
    NSString *_otherUnformattedID;
    NSString *_originalMessageGUID;
}

@property(retain, nonatomic) NSString *originalMessageGUID; // @synthesize originalMessageGUID=_originalMessageGUID;
@property(retain, nonatomic) NSString *otherUnformattedID; // @synthesize otherUnformattedID=_otherUnformattedID;
@property(retain, nonatomic) NSString *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(retain, nonatomic) NSString *otherCountryCode; // @synthesize otherCountryCode=_otherCountryCode;
@property(nonatomic) long long actionType; // @synthesize actionType=_actionType;
- (id)copyDictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)dealloc;

@end

@interface IMMessageContext : NSObject
{
    NSObject<OS_xpc_object> *_xpcMessage;
    IMLocalObject *_localObject;
    id _context;
    _Bool _boost;
}

@property(retain) id context; // @synthesize context=_context;
@property _Bool shouldBoost; // @synthesize shouldBoost=_boost;
@property(retain) IMLocalObject *localObject; // @synthesize localObject=_localObject;
@property NSObject<OS_xpc_object> *xpcMessage; // @synthesize xpcMessage=_xpcMessage;
- (void)dealloc;
- (id)init;

@end

@interface IMMobileNetworkManager : IMNetworkManager
{
    _Bool _registered;
    _Bool _shouldBringUpDataContext;
    _Bool _dataContextActive;
    NSRecursiveLock *_lock;
    NSMutableSet *_disableFastDormancyTokens;
    NSMutableSet *_wiFiAutoAssociationTokens;
    NSMutableSet *_cellAutoAssociationTokens;
    void *__suspendDormancyAssertion;
}

@property(nonatomic) void *_suspendDormancyAssertion; // @synthesize _suspendDormancyAssertion=__suspendDormancyAssertion;
@property(nonatomic) _Bool dataContextActive; // @synthesize dataContextActive=_dataContextActive;
@property(nonatomic) _Bool shouldBringUpDataContext; // @synthesize shouldBringUpDataContext=_shouldBringUpDataContext;
@property(nonatomic) _Bool registered; // @synthesize registered=_registered;
@property(retain, nonatomic) NSMutableSet *cellularAutoAssociationTokens; // @synthesize cellularAutoAssociationTokens=_cellAutoAssociationTokens;
@property(retain, nonatomic) NSMutableSet *wiFiAutoAssociationTokens; // @synthesize wiFiAutoAssociationTokens=_wiFiAutoAssociationTokens;
@property(retain, nonatomic) NSMutableSet *disableFastDormancyTokens; // @synthesize disableFastDormancyTokens=_disableFastDormancyTokens;
@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
- (void)setDataConnectionActive:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isDataConnectionActive;
@property(readonly, nonatomic) _Bool isDataSwitchEnabled;
@property(readonly, nonatomic) _Bool hasLTEDataConnection;
@property(readonly, nonatomic) _Bool has2GDataConnection;
@property(readonly, nonatomic) _Bool dataConnectionExists;
@property(readonly, nonatomic) _Bool inValidSIMState;
- (void)showSIMUnlock;
@property(readonly, nonatomic) _Bool isSIMLocked;
@property(readonly, nonatomic) _Bool isSIMRemoved;
@property(readonly, nonatomic) _Bool requiresSIMInserted;
- (void)_makeDataConnectionAvailable:(_Bool)arg1;
- (_Bool)_isDataConnectionAvailable;
- (void)_releaseCTServerConnection;
- (void)_createCTServerConnection;
- (void)_ctServerCallBack:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)removeCellularAutoAssociationClientToken:(id)arg1;
- (void)addCellularAutoAssociationClientToken:(id)arg1;
@property(readonly, nonatomic) _Bool autoAssociateCellular;
- (void)showNetworkOptions;
- (void)removeWiFiAutoAssociationClientToken:(id)arg1;
- (void)addWiFiAutoAssociationClientToken:(id)arg1;
@property(readonly, nonatomic) _Bool autoAssociateWiFi;
@property(readonly, nonatomic) _Bool isWiFiCaptive;
@property(readonly, nonatomic) _Bool isWiFiEnabled;
@property(readonly, nonatomic) _Bool isWiFiAssociated;
@property(readonly, nonatomic) _Bool isWiFiUsable;
@property(readonly, retain, nonatomic) NSNumber *wiFiScaledRate;
@property(readonly, retain, nonatomic) NSNumber *wiFiScaledRSSI;
@property(readonly, retain, nonatomic) NSNumber *wiFiSignalStrength;
@property(readonly, nonatomic) _Bool willTryToSearchForWiFiNetwork;
@property(readonly, nonatomic) _Bool willTryToAutoAssociateWiFiNetwork;
@property(readonly, nonatomic) _Bool isHostingWiFiHotSpot;
- (void)removeFastDormancyDisableToken:(id)arg1;
- (void)addFastDormancyDisableToken:(id)arg1;
@property(readonly, nonatomic) _Bool disableFastDormancy;
- (void)_adjustFastDormancyTokens;
- (void)__adjustFastDormancyTokens;
- (void)_setFastDormancySuspended:(_Bool)arg1;
- (void)_adjustCelluarAutoAssociation;
- (void)_adjustCellularAutoAssociation;
- (void)refresh;
@property(readonly, nonatomic) _Bool isAirplaneModeEnabled;
- (void *)_getValueForKey:(id)arg1;
- (void)_initializeSCPrefs:(id)arg1;
- (void)_synchronize;
- (void)cutWiFiManagerLinkDidChange:(id)arg1 context:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface IMMultiDict : NSObject
{
    NSMutableDictionary *_dictionary;
    unsigned long long _count;
}

@property(readonly, nonatomic) unsigned long long count; // @synthesize count=_count;
@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(readonly, nonatomic) NSArray *allKeys;
- (void)enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)countForKey:(id)arg1;
- (void)removeObject:(id)arg1 forKey:(id)arg2;
- (void)removeAllObjects;
- (void)removeObjectsForKey:(id)arg1;
- (id)objectsForKey:(id)arg1;
- (id)dequeueObjectForKey:(id)arg1;
- (id)headObjectForKey:(id)arg1;
- (void)enqueueObject:(id)arg1 forKey:(id)arg2;
- (id)popObjectForKey:(id)arg1;
- (id)peekObjectForKey:(id)arg1;
- (void)pushObject:(id)arg1 forKey:(id)arg2;
- (id)description;
- (id)init;
- (void)dealloc;

@end

@interface IMMultiQueue : NSObject
{
    NSMutableDictionary *_queueMap;
}

- (void)_addBlock:(CDUnknownBlockType)arg1 withGUID:(id)arg2 forKey:(id)arg3 description:(id)arg4;
- (void)addBlock:(CDUnknownBlockType)arg1 forKey:(id)arg2 description:(id)arg3;
- (void)addBlock:(CDUnknownBlockType)arg1 withTimeout:(double)arg2 forKey:(id)arg3 description:(id)arg4;
- (void)_popEnqueuedBlockWithGUID:(id)arg1 key:(id)arg2;
- (void)dealloc;

@end

@interface IMNetworkAvailability : NSObject
{
    NSString *_guid;
    NSTimer *_timer;
    void *_context;
    double _timeout;
    double _wifiTimeout;
    double _startTime;
    unsigned long long _flags;
    unsigned long long _options;
    CDUnknownBlockType _completionBlock;
}

@property(nonatomic) void *context; // @synthesize context=_context;
- (void)cancel;
- (void)start;
- (void)_setTimer;
- (void)_timerHit:(id)arg1;
- (void)_cancel;
- (void)dealloc;
- (id)initWithFlags:(unsigned long long)arg1 timeout:(double)arg2 wifiTimeout:(double)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)initWithFlags:(unsigned long long)arg1 options:(unsigned long long)arg2 timeout:(double)arg3 wifiTimeout:(double)arg4 completionBlock:(CDUnknownBlockType)arg5;

@end

@interface IMNetworkConnectionMonitor : IMConnectionMonitor <IMSystemMonitorListener, IMReachabilityDelegate>
{
    _Bool _isConnected;
    _Bool _isSleeping;
    IMReachability *_hostReachability;
    IMReachability *_ipReachability;
    unsigned long long _hostFlags;
    unsigned long long _ipFlags;
}

@property(nonatomic) _Bool _isSleeping; // @synthesize _isSleeping;
@property(nonatomic) _Bool _isConnected; // @synthesize _isConnected;
@property(nonatomic) unsigned long long _ipFlags; // @synthesize _ipFlags;
@property(nonatomic) unsigned long long _hostFlags; // @synthesize _hostFlags;
@property(retain, nonatomic) IMReachability *_ipReachability; // @synthesize _ipReachability;
@property(retain, nonatomic) IMReachability *_hostReachability; // @synthesize _hostReachability;
- (_Bool)isImmediatelyReachable;
- (void)clear;
- (void)goDisconnected;
- (void)goConnectedWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2;
- (void)_setup;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)reachabilityDidChange:(id)arg1;
- (void)_setupReachability;
- (void)_doCallbackLater;
- (void)_doCallbackNow;
- (void)_clearReachability:(id *)arg1 flags:(unsigned long long *)arg2;
- (void)dealloc;

@end

@interface IMNetworkReachability : NSObject
{
    _Bool localWiFiRef;
    struct __SCNetworkReachability *reachabilityRef;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
- (long long)currentReachabilityStatus;
- (long long)networkStatusForFlags:(unsigned int)arg1;
- (long long)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;

@end

@interface IMPair : NSObject <NSCopying>
{
    id _first;
    id _second;
}

+ (id)pairWithFirst:(id)arg1 second:(id)arg2;
@property(retain) id second; // @synthesize second=_second;
@property(retain) id first; // @synthesize first=_first;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithFirst:(id)arg1 second:(id)arg2;

@end

@interface IMParticipantChangeItem : IMItem <NSCoding, NSCopying, IMRemoteObjectCoding>
{
    long long _changeType;
    NSString *_otherCountryCode;
    NSString *_otherHandle;
    NSString *_otherUnformattedID;
}

@property(retain, nonatomic) NSString *otherUnformattedID; // @synthesize otherUnformattedID=_otherUnformattedID;
@property(retain, nonatomic) NSString *otherHandle; // @synthesize otherHandle=_otherHandle;
@property(retain, nonatomic) NSString *otherCountryCode; // @synthesize otherCountryCode=_otherCountryCode;
@property(nonatomic) long long changeType; // @synthesize changeType=_changeType;
- (id)copyDictionaryRepresentation;
- (id)initWithDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface IMPingStatistics : NSObject
{
    double _packetLossRate;
    double _medianRoundtripTime;
    double _averageRoundtripTime;
    double _minRoundtripTime;
    double _maxRoundtripTime;
    double _standardDeviationRoundtripTime;
    double _sumRoundtripTimes;
    int _numPingsTransmitted;
    int _numPingsReceived;
    int _numPacketsSuccessfullySent;
}

- (void)_setStandardDeviationRoundtripTime:(double)arg1;
@property(nonatomic) double standardDeviationRoundtripTime; // @synthesize standardDeviationRoundtripTime=_standardDeviationRoundtripTime;
@property(readonly, nonatomic) int packetsSuccessfullySent; // @synthesize packetsSuccessfullySent=_numPacketsSuccessfullySent;
@property(readonly, nonatomic) int numPingsTransmitted; // @synthesize numPingsTransmitted=_numPingsTransmitted;
@property(readonly, nonatomic) int numPingsReceived; // @synthesize numPingsReceived=_numPingsReceived;
@property(readonly, nonatomic) double averageRoundtripTime; // @synthesize averageRoundtripTime=_averageRoundtripTime;
- (void)_setMinRoundtripTime:(double)arg1;
@property(nonatomic) double minRoundtripTime; // @synthesize minRoundtripTime=_minRoundtripTime;
- (void)_setMedianRoundtripTime:(double)arg1;
@property(nonatomic) double medianRoundtripTime; // @synthesize medianRoundtripTime=_medianRoundtripTime;
- (void)_setMaxRoundtripTime:(double)arg1;
@property(nonatomic) double maxRoundtripTime; // @synthesize maxRoundtripTime=_maxRoundtripTime;
- (id)description;
@property(readonly, nonatomic) double packetLossRate; // @synthesize packetLossRate=_packetLossRate;
- (void)_addReceivedPacket:(double)arg1;
- (void)_addTransmittedPacket:(_Bool)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMaxRTT:(double)arg1 medianRTT:(double)arg2 avgRTT:(double)arg3 minRTT:(double)arg4 transmitted:(int)arg5 successful:(int)arg6 received:(int)arg7;

@end

@interface IMPingTest : NSObject
{
    NSString *_address;
    _Bool _usesWifi;
    id _collector;
    _Bool _isRunning;
    NSObject<OS_dispatch_source> *_sendTimer;
    NSObject<OS_dispatch_source> *_socketReadSource;
    double _secondsToRun;
}

@property(readonly, nonatomic) double secondsToRun; // @synthesize secondsToRun=_secondsToRun;
- (double)longTimeInterval;
- (void)_setupReadSource:(int)arg1 address:(struct sockaddr_in)arg2 icmID:(unsigned short)arg3 queue:(id)arg4 completionHander:(CDUnknownBlockType)arg5;
- (void)_doPingWithSocket:(int)arg1 address:(struct sockaddr_in)arg2 timeToRunTestInSeconds:(double)arg3 pingTimeout:(double)arg4 queue:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (int)_setupAndPerformPing:(double)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)writeResultsToFile:(id)arg1 error:(id *)arg2;
- (id)pingStats:(double)arg1;
- (id)pingStats;
- (void)stop;
- (void)startWithTimeout:(double)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithAddress:(id)arg1 wifi:(_Bool)arg2;

@end

@interface IMPowerAssertion : NSObject
{
    unsigned int _assertion;
    NSString *_identifier;
}

- (id)description;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;
- (id)initWithIdentifier:(id)arg1 timeout:(double)arg2;

@end

@interface IMPurgableObject : NSObject
{
    id _instanceObject;
    CDUnknownBlockType _setupBlock;
    CDUnknownBlockType _cleanupBlock;
    NSObject<OS_dispatch_queue> *_queue;
}

- (void)_receivedMemoryWarning:(id)arg1;
- (id)instance;
- (void)_cleanupInstance;
- (void)_setupInstance;
- (void)dealloc;
- (id)initWithSetupBlock:(CDUnknownBlockType)arg1 cleanupBlock:(CDUnknownBlockType)arg2 queue:(id)arg3;

@end

@interface IMReachability : NSObject
{
    _Bool _gettingFlags;
    id <IMReachabilityDelegate> _delegate;
    unsigned long long _flags;
    NSString *_description;
    void *_reachabilityRef;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)reachabilityWithLocalAddress:(id)arg1 remoteAddress:(id)arg2;
+ (id)reachabilityWithRemoteAddress:(id)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
@property(nonatomic) NSObject<OS_dispatch_queue> *_queue; // @synthesize _queue;
@property(nonatomic) void *reachabilityRef; // @synthesize reachabilityRef=_reachabilityRef;
@property(retain, nonatomic) NSString *reachabilityDescription; // @synthesize reachabilityDescription=_description;
@property(nonatomic) unsigned long long flags; // @synthesize flags=_flags;
@property(nonatomic) _Bool gettingFlags; // @synthesize gettingFlags=_gettingFlags;
@property(nonatomic) id <IMReachabilityDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) _Bool connectionRequired;
- (void)_forceGetFlagsIfNecessary;
- (void)_handleCallbackForSCNetworkReachability:(struct __SCNetworkReachability *)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2 delegate:(id)arg3;
- (id)initWithRemoteHost:(id)arg1 delegate:(id)arg2;
- (id)_initWithReachabilityRef:(struct __SCNetworkReachability *)arg1 description:(id)arg2 delegate:(id)arg3;

@end

@interface IMRemoteObject : NSObject
{
    id _internal;
}

+ (void)initialize;
+ (void)_unregisterIMRemoteObject:(id)arg1;
+ (void)_registerIMRemoteObject:(id)arg1;
+ (id)_remoteObjects;
- (id)_queue;
- (id)description;
- (void)invalidate;
- (void)setPortName:(id)arg1;
@property(readonly, nonatomic) NSString *portName;
@property(nonatomic) int pid;
@property(readonly, nonatomic) NSObject<OS_xpc_object> *connection;
- (void)forwardInvocation:(id)arg1;
- (unsigned long long)forwardXPCObject:(id)arg1 messageContext:(id)arg2;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)_systemShutdown:(id)arg1;
@property(readonly, nonatomic) _Bool isValid;
- (void)_portDidBecomeInvalid;
- (void)dealloc;
- (void)finalize;
- (void)_cleanupMachBitsCanPost:(_Bool)arg1;
- (id)initWithConnection:(id)arg1 protocol:(id)arg2 alreadyConfigured:(_Bool)arg3;
- (id)initWithPortName:(id)arg1 protocol:(id)arg2;
- (id)initWithConnection:(id)arg1 protocol:(id)arg2;
- (id)_initWithConnection:(id)arg1 portName:(id)arg2 protocol:(id)arg3 alreadyConfigured:(_Bool)arg4;

@end

@interface IMRemoteObjectBroadcaster : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)defaultBroadcaster;
- (void)flushProxy:(id)arg1;
- (void)blockUntilSendQueueIsEmpty;
- (id)broadcastProxyForTargets:(id)arg1 messageContext:(id)arg2 protocol:(id)arg3;
- (id)broadcastProxyForTarget:(id)arg1 messageContext:(id)arg2 protocol:(id)arg3;
- (id)_queue;
- (void)dealloc;
- (id)init;

@end

@interface IMRemoteObjectInternal : NSObject
{
    NSRecursiveLock *_lock;
    NSObject<OS_xpc_object> *_connection;
    NSObject<OS_dispatch_queue> *_queue;
    long long _deathPostPredicate;
    Protocol *_protocol;
    NSString *_portName;
    _Bool _willBeTerminated;
    int _pid;
}

@end

@interface IMRemoteURLConnection : NSObject
{
    NSURLRequest *_request;
    NSString *_bundleIdentifierForDataUsage;
    CDUnknownBlockType _block;
    NSObject<OS_xpc_object> *_connection;
    _Bool _cancelled;
    _Bool _loading;
    _Bool _forceCellularIfPossible;
    _Bool _requireIDSHost;
    int _retries;
}

@property _Bool requireIDSHost; // @synthesize requireIDSHost=_requireIDSHost;
@property(retain) NSString *bundleIdentifierForDataUsage; // @synthesize bundleIdentifierForDataUsage=_bundleIdentifierForDataUsage;
@property _Bool forceCellularIfPossible; // @synthesize forceCellularIfPossible=_forceCellularIfPossible;
- (void)cancel;
- (void)load;
- (void)dealloc;
- (id)initWithURLRequest:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)_connect;
- (_Bool)_disconnect;
- (void)_disconnected;

@end

@interface IMScheduledUpdater : IMManualUpdater
{
    NSCountedSet *_holdingUpdatesKeys;
}

@property(retain, nonatomic) NSCountedSet *holdingUpdatesKeys; // @synthesize holdingUpdatesKeys=_holdingUpdatesKeys;
- (void)invalidate;
- (_Bool)isHoldingUpdates;
- (void)endHoldingUpdatesForAllKeys;
- (void)endHoldingUpdatesForKey:(id)arg1;
- (void)beginHoldingUpdatesForKey:(id)arg1;
- (void)updateIfNeeded;
- (void)setNeedsUpdate;
- (id)initWithTarget:(id)arg1 action:(SEL)arg2;
- (id)description;
- (void)dealloc;

@end

@interface IMSuperToPlainParserContext : IMFromSuperParserContext
{
    NSMutableString *_plainString;
    _Bool _extractLinks;
}

- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 characters:(id)arg4;
@property(readonly, nonatomic) NSString *plainString;
- (id)resultsForLogging;
- (id)name;
- (void)dealloc;
- (id)initWithAttributedString:(id)arg1 extractLinks:(_Bool)arg2;
- (id)initWithAttributedString:(id)arg1;

@end

@interface IMSuperToSuperSanitizerContext : IMFromSuperParserContext
{
    NSMutableAttributedString *_content;
    NSMutableArray *_attachments;
    NSString *_backgroundColor;
    NSString *_foregroundColor;
    unsigned long long _offset;
    long long _baseWritingDirection;
    _Bool _extractAttachments;
    _Bool _hadBaseWritingDirectionAttribute;
}

@property(readonly, retain) NSArray *attachments; // @synthesize attachments=_attachments;
@property(readonly, retain) NSAttributedString *sanitizedContent; // @synthesize sanitizedContent=_content;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 fileTransferGUID:(id)arg4 filename:(id)arg5 bookmark:(id)arg6 width:(id)arg7 height:(id)arg8;
- (void)parser:(id)arg1 foundAttributes:(id)arg2 inRange:(struct _NSRange)arg3 characters:(id)arg4;
- (void)parserDidEnd:(id)arg1;
- (void)parserDidStart:(id)arg1 bodyAttributes:(id)arg2;
- (id)resultsForLogging;
- (id)name;
- (void)dealloc;
- (id)initWithAttributedString:(id)arg1 extractAttachments:(_Bool)arg2;

@end

@interface IMSystemMonitor : NSObject
{
    _Bool _watchesDataProtectionLockState;
    _Bool _watchesScreenLightState;
    _Bool _receivesMemoryWarnings;
    _Bool _willSleep;
    _Bool _screenLocked;
    _Bool _screensaverActive;
    _Bool _watchesSystemLockState;
    _Bool _underFirstLock;
    _Bool _active;
    _Bool _backingUp;
    _Bool _switchedOut;
    _Bool _screenLit;
    _Bool _systemLocked;
    _Bool _idleOverride;
    _Bool _usesPowerNotifications;
    _Bool _usesSystemIdleState;
    _Bool _inBackground;
    int _dataProtectionState;
    int _userIdleToken;
    NSMutableArray *_listeners;
    NSDate *_idleStart;
    NSTimer *_timer;
    NSDate *_dateScreenLightLastChanged;
    NSDate *_dateSystemLockLastChanged;
    NSString *_userID;
    double _delayTime;
    NSMutableArray *_earlyListeners;
}

+ (id)sharedInstance;
@property(nonatomic) int userIdleToken; // @synthesize userIdleToken=_userIdleToken;
@property(readonly, nonatomic) _Bool isInBackground; // @synthesize isInBackground=_inBackground;
@property(nonatomic) _Bool usesSystemIdleState; // @synthesize usesSystemIdleState=_usesSystemIdleState;
@property(nonatomic) _Bool usesPowerNotifications; // @synthesize usesPowerNotifications=_usesPowerNotifications;
@property(retain, nonatomic) NSMutableArray *_earlyListeners; // @synthesize _earlyListeners;
@property(nonatomic) _Bool _idleOverride; // @synthesize _idleOverride;
@property(nonatomic) double _delayTime; // @synthesize _delayTime;
@property(retain, nonatomic) NSString *_userID; // @synthesize _userID;
@property(readonly, nonatomic) _Bool isSystemLocked; // @synthesize isSystemLocked=_systemLocked;
@property(readonly, retain, nonatomic) NSDate *dateSystemLockLastChanged; // @synthesize dateSystemLockLastChanged=_dateSystemLockLastChanged;
@property(readonly, retain, nonatomic) NSDate *dateScreenLightLastChanged; // @synthesize dateScreenLightLastChanged=_dateScreenLightLastChanged;
@property(readonly, nonatomic) _Bool isScreenLit; // @synthesize isScreenLit=_screenLit;
@property(retain, nonatomic) NSTimer *_timer; // @synthesize _timer;
@property(retain, nonatomic) NSDate *_idleStart; // @synthesize _idleStart;
@property(retain, nonatomic) NSMutableArray *_listeners; // @synthesize _listeners;
@property(nonatomic) _Bool isFastUserSwitched; // @synthesize isFastUserSwitched=_switchedOut;
@property(readonly, nonatomic) _Bool isBackingUp; // @synthesize isBackingUp=_backingUp;
@property(nonatomic, setter=setActive:) _Bool isActive; // @synthesize isActive=_active;
@property(nonatomic) _Bool _underFirstLock; // @synthesize _underFirstLock;
@property(nonatomic) int _dataProtectionState; // @synthesize _dataProtectionState;
@property(nonatomic) _Bool watchesSystemLockState; // @synthesize watchesSystemLockState=_watchesSystemLockState;
@property(readonly, nonatomic) _Bool isScreenSaverActive; // @synthesize isScreenSaverActive=_screensaverActive;
@property(readonly, nonatomic) _Bool systemIsSleeping; // @synthesize systemIsSleeping=_willSleep;
@property(nonatomic) _Bool receivesMemoryWarnings; // @synthesize receivesMemoryWarnings=_receivesMemoryWarnings;
@property(nonatomic) _Bool watchesScreenLightState; // @synthesize watchesScreenLightState=_watchesScreenLightState;
@property(nonatomic) _Bool watchesDataProtectionLockState; // @synthesize watchesDataProtectionLockState=_watchesDataProtectionLockState;
- (void)_receivedMemoryNotification;
- (void)_unregisterForLoginWindowNotifications;
- (void)_registerForLoginWindowNotifications;
- (void)_handleLoginWindowNotification:(id)arg1;
- (void)_forceSuspended;
- (void)_forceResumed;
@property(readonly, nonatomic) _Bool isSetup;
- (void)_unregisterForRestoreNotifications;
- (void)_registerForRestoreNotifications;
- (void)_setupStateChanged;
- (void)_restoreDidStop;
- (void)_restoreDidStart;
- (void)_checkRestoredFromBackup;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)_removeEarlyListener:(id)arg1;
- (void)_addEarlyListener:(id)arg1;
- (void)_systemWillShutdown;
@property(readonly, nonatomic) _Bool systemIsShuttingDown;
@property(readonly, nonatomic) double systemIdleTime;
@property(readonly, nonatomic) _Bool isSystemIdle;
- (void)_checkIdleTime:(id)arg1;
- (void)_clearIdleTimer;
- (void)_armIdleTimer;
- (void)_overrideAndDisableIdleTimer:(_Bool)arg1;
- (void)_setIdleState:(_Bool)arg1;
- (void)_updateIdleState;
- (void)_setSystemLockState:(_Bool)arg1;
- (void)_setSystemScreenState:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isUnderFirstDataProtectionLock;
@property(readonly, nonatomic) _Bool isUnderDataProtectionLock;
- (void)_setDataProtectionLockState:(int)arg1;
- (void)_applicationDidRemoveDeactivationReason:(id)arg1;
- (void)_applicationWillAddDeactivationReason:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_screenSaverStarted:(id)arg1;
- (void)_screenSaverStopped:(id)arg1;
- (void)_postScreenSaverStarted;
- (void)_notificationCenterDidDisappear:(id)arg1;
- (void)_notificationCenterWillAppear:(id)arg1;
- (void)_resume:(id)arg1;
- (void)_suspend:(id)arg1;
- (void)_resumeEventsOnly:(id)arg1;
- (void)_suspendEventsOnly:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
@property(readonly, nonatomic) _Bool isScreenLocked; // @synthesize isScreenLocked=_screenLocked;
- (void)_screenUnlocked:(id)arg1;
- (void)_screenLocked:(id)arg1;
- (void)_postScreenLocked;
- (void)_systemWillSleep;
- (void)_systemDidWake;
- (void)_deliverNotificationSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMSystemProxySettingsFetcher : NSObject
{
    unsigned short _port;
    unsigned short _proxyPort;
    id _delegate;
    NSString *_host;
    long long _proxyProtocol;
    NSString *_proxyHost;
    NSString *_proxyAccount;
    NSString *_proxyPassword;
}

@property(copy, nonatomic) NSString *_proxyPassword; // @synthesize _proxyPassword;
@property(copy, nonatomic) NSString *_proxyAccount; // @synthesize _proxyAccount;
@property(nonatomic) unsigned short _proxyPort; // @synthesize _proxyPort;
@property(copy, nonatomic) NSString *_proxyHost; // @synthesize _proxyHost;
@property(nonatomic) long long _proxyProtocol; // @synthesize _proxyProtocol;
@property(nonatomic) unsigned short _port; // @synthesize _port;
@property(copy, nonatomic) NSString *_host; // @synthesize _host;
@property id delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (void)retrieveProxyAccountSettings;
- (void)retrieveProxySettings;
- (id)initWithProxyProtocol:(long long)arg1 proxyHost:(id)arg2 proxyPort:(unsigned short)arg3 delegate:(id)arg4;
- (id)initWithHost:(id)arg1 port:(unsigned short)arg2 delegate:(id)arg3;
- (void)_takeProxySettingsFromDictionary:(struct __CFDictionary *)arg1;
- (void)_getProxyAccountAndPasswordFromKeychain;
- (void)_callAccountSettingsDelegateMethod;
- (void)_callProxySettingsDelegateMethod;

@end

@interface IMThreadedInvocationTrampoline : IMInvocationTrampoline
{
    NSThread *_thread;
    _Bool _immediateForMatchingThread;
}

- (void)forwardInvocation:(id)arg1;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 thread:(id)arg2 immediateForMatchingThread:(_Bool)arg3;

@end

@interface IMTimer : NSObject
{
    id _timer;
    id _target;
    NSDictionary *_userInfo;
    NSString *_name;
    double _timeInterval;
    SEL _selector;
    _Bool _wakeDevice;
}

@property(readonly, retain, nonatomic) id userInfo; // @synthesize userInfo=_userInfo;
- (void)dealloc;
- (void)invalidate;
@property(readonly, retain, nonatomic) NSDate *fireDate;
- (void)setFireTimeInterval:(double)arg1;
- (id)initWithTimeInterval:(double)arg1 name:(id)arg2 shouldWake:(_Bool)arg3 target:(id)arg4 selector:(SEL)arg5 userInfo:(id)arg6;

@end

@interface IMTimingCollection : NSObject
{
    NSMutableDictionary *_timings;
    NSObject<OS_dispatch_queue> *_queue;
}

- (_Bool)hasKey:(id)arg1;
- (id)description;
- (void)removeTimingForKey:(id)arg1;
- (double)totalTimeForKey:(id)arg1;
- (void)stopTimingForKey:(id)arg1;
- (void)startTimingForKey:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMUserNotification : NSObject
{
    id _reserved;
}

+ (id)userNotificationWithIdentifier:(id)arg1 title:(id)arg2 message:(id)arg3 defaultButton:(id)arg4 alternateButton:(id)arg5 otherButton:(id)arg6;
+ (id)userNotificationWithIdentifier:(id)arg1 timeout:(double)arg2 alertLevel:(unsigned long long)arg3 displayFlags:(unsigned long long)arg4 displayInformation:(id)arg5;
- (void)_setResponseFlags:(unsigned long long)arg1 responseInformation:(id)arg2;
@property(readonly, retain, nonatomic) NSDictionary *responseInformation;
@property(readonly, nonatomic) unsigned long long responseFlags;
@property(retain, nonatomic) NSDictionary *userInfo;
@property(nonatomic) _Bool usesNotificationCenter;
@property(nonatomic) _Bool showInLockScreen;
@property(retain, nonatomic) NSString *representedApplicationBundle;
@property(readonly, nonatomic) unsigned long long response;
@property(readonly, retain, nonatomic) NSDictionary *displayInformation;
@property(readonly, nonatomic) unsigned long long displayFlags;
@property(readonly, nonatomic) double timeout;
@property(readonly, retain, nonatomic) id identifier;
- (void)dealloc;
- (id)_initWithIdentifier:(id)arg1 timeout:(double)arg2 displayFlags:(unsigned long long)arg3 displayInformation:(id)arg4;

@end

@interface IMUserNotificationCenter : NSObject
{
    NSMutableDictionary *_identifierToIMUserNotificationQueueMap;
    NSMutableDictionary *_identifierToListenerQueueMap;
    NSMutableDictionary *_identifierToBlockQueueMap;
    NSMutableDictionary *_identifierToRunLoopSourcesMap;
    NSMutableDictionary *_identifierToCFUserNotificationMap;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *identifierToCFUserNotificationMap; // @synthesize identifierToCFUserNotificationMap=_identifierToCFUserNotificationMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToRunLoopSourcesMap; // @synthesize identifierToRunLoopSourcesMap=_identifierToRunLoopSourcesMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToBlockQueueMap; // @synthesize identifierToBlockQueueMap=_identifierToBlockQueueMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToListenerQueueMap; // @synthesize identifierToListenerQueueMap=_identifierToListenerQueueMap;
@property(retain, nonatomic) NSMutableDictionary *identifierToIMUserNotificationQueueMap; // @synthesize identifierToIMUserNotificationQueueMap=_identifierToIMUserNotificationQueueMap;
- (void)removeAllListeners;
- (void)removeListener:(id)arg1;
- (void)removeNotificationsForServiceIdentifier:(id)arg1;
- (unsigned long long)countForIdentifier:(id)arg1;
- (void)addUserNotification:(id)arg1 listener:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)addUserNotification:(id)arg1 listener:(id)arg2;
- (void)_handleUserNotification:(struct __CFUserNotification *)arg1 responseFlags:(unsigned long long)arg2;
- (void)_displayNextUserNotificationForIdentifier:(id)arg1;
- (void)_cancelActiveUserNotificationForIdentifier:(id)arg1;
- (void)_enqueueBlock:(CDUnknownBlockType)arg1 forIdentifier:(id)arg2;
- (void)_enqueueListener:(id)arg1 forIdentifier:(id)arg2;
- (void)_enqueueUserNotification:(id)arg1 forIdentifier:(id)arg2;
- (CDUnknownBlockType)_dequeueBlockForIdentifier:(id)arg1;
- (id)_dequeueListenerForIdentifier:(id)arg1;
- (id)_dequeueUserNotificationForIdentifier:(id)arg1;
- (CDUnknownBlockType)_frontBlockForIdentifier:(id)arg1;
- (id)_frontListenerForIdentifier:(id)arg1;
- (id)_frontUserNotificationForIdentifier:(id)arg1;
- (void)dealloc;

@end

@interface IMWeakArray : NSObject
{
    NSMutableArray *_weakArray;
}

- (id)copyMutableSet;
- (id)copyMutableArray;
- (void)removeObject:(id)arg1;
- (void)addObjectIfNotIdenticalObjectExists:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (id)description;
- (void)addObject:(id)arg1;
- (void)dealloc;

@end

@interface IMWeakObjectCache : NSObject
{
    NSMutableDictionary *_weakObjectCache;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _tableLock;
}

+ (id)sharedInstance;
- (void)removeObject:(id)arg1 key:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)copyObjectForKey:(id)arg1;
- (id)copyOrSetObject:(id)arg1 forKey:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface IMWeakReference : NSObject
{
    id _object;
    unsigned long long _objectAddress;
}

+ (id)weakRefWithObject:(id)arg1;
- (id)object;
- (id)initRefWithObject:(id)arg1;
- (id)copyObject;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)dealloc;

@end

@interface IMXMLParser : NSObject <NSXMLParserDelegate>
{
    NSXMLParser *_parser;
    IMXMLParserContext *_context;
    IMXMLParserFrame *_topFrame;
    NSMutableArray *_otherFrames;
    struct _TidyDoc *_tidyDoc;
    struct __CFDictionary *_framespace;
}

+ (id)sharedInstance;
- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 foundIgnorableWhitespace:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (_Bool)parseContext:(id)arg1;
- (id)_newDataByTidyingData:(id)arg1;
- (void)_teardownTidy;
- (void)_setupTidy;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMXMLReparser : NSObject <NSXMLParserDelegate>
{
    NSXMLParser *_parser;
    NSMutableString *_output;
    IMXMLReparserContext *_context;
    NSError *_error;
    unsigned long long _depth;
}

- (void)parser:(id)arg1 parseErrorOccurred:(id)arg2;
- (void)parser:(id)arg1 foundCharacters:(id)arg2;
- (void)parser:(id)arg1 didEndElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4;
- (void)parser:(id)arg1 didStartElement:(id)arg2 namespaceURI:(id)arg3 qualifiedName:(id)arg4 attributes:(id)arg5;
- (_Bool)parseWithContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMXMLReparserContext : NSObject
{
    NSString *_inContent;
    NSString *_outContent;
    NSArray *_attributesToPreserve;
    NSDictionary *_attributesToMerge;
    NSError *_error;
}

@property(readonly, nonatomic) NSDictionary *attributesToMerge; // @synthesize attributesToMerge=_attributesToMerge;
@property(readonly, nonatomic) NSArray *attributesToPreserve; // @synthesize attributesToPreserve=_attributesToPreserve;
@property(readonly, nonatomic) NSString *outContent; // @synthesize outContent=_outContent;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, retain) NSString *_inContent; // @synthesize _inContent;
- (void)_setOutContent:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)initWithContent:(id)arg1 attributesToPreserve:(id)arg2 attributesToMerge:(id)arg3;

@end

@interface NSArray (FezAdditions)
- (id)__imArrayByApplyingBlock:(CDUnknownBlockType)arg1 filter:(CDUnknownBlockType)arg2;
- (id)__imArrayByApplyingBlock:(CDUnknownBlockType)arg1;
- (id)__imArrayByFilteringWithBlock:(CDUnknownBlockType)arg1;
- (void)__imForEach:(CDUnknownBlockType)arg1;
- (_Bool)containsObject:(id)arg1 matchingComparison:(SEL)arg2;
- (long long)indexOfObject:(id)arg1 matchingComparison:(SEL)arg2;
- (_Bool)containsObjectIdenticalTo:(id)arg1;
- (id)__imFirstObject;
- (id)_copyForEnumerating;
- (_Bool)_hasSameMembers:(id)arg1;
- (id)__imDeepCopy;
- (_Bool)__imIsMutable;
- (id)__imSetFromArray;
@end

@interface NSArray (MyersDiff)
- (void)differencesFromArray:(id)arg1 usingComparator:(CDUnknownBlockType)arg2 removedIndexes:(id *)arg3 insertedIndexes:(id *)arg4;
- (void)differencesFromArray:(id)arg1 removedIndexes:(id *)arg2 insertedIndexes:(id *)arg3;
@end

@interface NSAttributedString (FezAdditions)
- (id)trimmedString;
- (_Bool)attribute:(id)arg1 existsInRange:(struct _NSRange)arg2;
@end

@interface NSBundle (FezBundleHelpers)
- (id)_cachedMainBundleResourcePath;
@end

@interface NSData (FezAdditions)
+ (id)__imDataWithRandomBytes:(unsigned long long)arg1;
+ (id)__imDataWithHexString:(id)arg1;
- (id)__imHexString;
- (id)__imHexStringOfBytes:(char *)arg1 withLength:(unsigned long long)arg2;
@end

@interface NSData (FezSecurityAdditions)
@property(readonly, nonatomic) NSString *SHA1HexString;
@property(readonly, nonatomic) NSData *SHA1Data;
@end

@interface NSDictionary (DictionaryTypeChecking)
- (id)_dataForKey:(id)arg1;
- (id)_stringForKey:(id)arg1;
- (id)_numberForKey:(id)arg1;
- (id)_arrayForKey:(id)arg1;
- (id)_dictionaryForKey:(id)arg1;
@end

@interface NSDictionary (FezAdditions)
+ (id)dictionaryWithKeyArray:(id)arg1 defaultValue:(id)arg2;
+ (id)dictionaryWithArchiveData:(id)arg1;
+ (id)dictionaryWithArchiveData:(id)arg1 allowedClasses:(id)arg2;
+ (id)dictionaryWithPlistData:(id)arg1;
+ (id)_dictionaryWithData:(id)arg1 isPlist:(_Bool)arg2 allowedClasses:(id)arg3;
- (id)__imDeepCopy;
- (id)dictionaryFromChanges:(id)arg1;
- (id)archiveData;
- (id)plistData;
- (id)keysOfChangedEntriesComparedTo:(id)arg1;
- (_Bool)__imIsMutable;
@end

@interface NSDictionary (HFSFileAttributes)
@property(readonly, nonatomic) unsigned long long fileHFSResourceForkSize;
@property(readonly, nonatomic) unsigned short fileHFSFlags;
@end

@interface NSError (FezAdditions)
+ (id)genericErrorWithFile:(const char *)arg1 function:(const char *)arg2 lineNumber:(long long)arg3;
@end

@interface NSFileManager (FezAdditions)
- (_Bool)copyItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id *)arg3 error:(id *)arg4;
- (_Bool)moveItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id *)arg3 error:(id *)arg4;
- (_Bool)_moveItemAtPath:(id)arg1 toPath:(id)arg2 uniquePath:(id *)arg3 error:(id *)arg4 asCopy:(_Bool)arg5;
- (id)createUniqueDirectoryWithName:(id)arg1 atPath:(id)arg2 ofType:(id)arg3;
- (id)uniqueFilename:(id)arg1 atPath:(id)arg2 ofType:(id)arg3;
- (_Bool)makeDirectoriesInPath:(id)arg1 mode:(unsigned int)arg2;
- (_Bool)_isPathOnMissingVolume:(id)arg1;
- (id)_randomTemporaryPathWithFileName:(id)arg1;
- (id)_randomTemporaryPathWithSuffix:(id)arg1 fileName:(id)arg2;
- (id)_randomTemporaryPathWithSuffix:(id)arg1;
- (id)_generateLinkForURL:(id)arg1;
@end

@interface NSInvocation (IMInvocationQueueAdditions)
- (_Bool)wantsReturnValue;
@end

@interface NSMutableArray (FezAdditions)
+ (id)nonRetainingArray;
+ (id)copyNonRetainingArray;
- (void)removeFirstObject;
@end

@interface NSMutableArray (IMMutableArrayRandomization)
- (void)__imRandomizeArray;
@end

@interface NSMutableAttributedString (FezAdditions)
- (void)removeCharactersWithAttribute:(id)arg1;
- (void)replaceAttribute:(id)arg1 value:(id)arg2 withValue:(id)arg3;
- (void)replaceNewlinesWithSpaces;
- (void)trimWhitespace;
@end

@interface NSMutableDictionary (IMFoundation_Additions)
+ (id)nonRetainingKeyAndValueDictionary;
+ (id)nonRetainingDictionary;
+ (id)retainingKeyDictionary;
@end

@interface NSMutableSet (FezAdditions)
+ (id)nonRetainingSet;
@end

@interface NSMutableString (FezAdditions)
- (void)replaceNewlinesWithSpaces;
@end

@interface NSNotificationCenter (_IMNotificationCenterAdditions)
- (void)__mainThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (void)__mainThreadPostNotificationName:(id)arg1 object:(id)arg2;
- (void)__mainThreadPostNotification:(id)arg1;
- (void)postNotificationName:(id)arg1;
@end

@interface NSNumber (FezAdditions)
- (id)localizedString;
@end

@interface NSObject (DelayedPerformAdditions)
- (void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 ignoreMenuTracking:(_Bool)arg4;
@end

@interface NSObject (FezAdditions)
- (_Bool)isNull;
@end

@interface NSObject (_IMSupportMessagingProxy)
- (id)__im_getInvocation:(id *)arg1;
- (id)__im_afterDelay:(double)arg1 modes:(id)arg2;
- (id)__im_afterDelay:(double)arg1;
- (id)__im_onThread:(id)arg1;
- (id)__im_onThread:(id)arg1 immediateForMatchingThread:(_Bool)arg2;
- (id)__im_onDetachedThread;
- (id)__im_onMainThreadIfNecessary;
- (id)__im_onMainThread;
@end

@interface NSProtocolChecker (FezAdditions)
- (id)_imMethodSignatureForSelector:(SEL)arg1;
@end

@interface NSSet (FezAdditions)
- (id)__imSetByApplyingBlock:(CDUnknownBlockType)arg1;
- (void)__imForEach:(CDUnknownBlockType)arg1;
@end

@interface NSString (FezAdditions)
+ (id)generatedRoomNameForGroupChat;
+ (id)randomString;
+ (id)copyStringGUIDForObject:(id)arg1;
+ (id)stringGUIDForObject:(id)arg1;
+ (id)stringGUID;
+ (id)copyStringGUID;
- (_Bool)roomNameIsProbablyAutomaticallyGenerated;
- (id)stringByRemovingCharactersFromSet:(id)arg1;
- (id)stringWithLTREmbedding;
- (id)pathStringForDisplay;
- (id)__stringByStrippingAttachmentAndControlCharacters;
- (id)__stringByStrippingControlCharacters;
- (id)uniqueSavePath;
- (id)stringByRemovingWhitespace;
- (struct _NSRange)__rangeOfNewlineInRange:(struct _NSRange)arg1;
- (id)stringByResolvingAndStandardizingPath;
- (_Bool)_appearsToBeDSID;
- (_Bool)_appearsToBePhoneNumber;
- (id)_md5Hash;
- (id)_stripPotentialTokenURIWithToken:(id *)arg1;
- (_Bool)_appearsToBeEmail;
- (id)_IDFromFZIDType:(long long)arg1;
- (id)_URIFromFZIDType:(long long)arg1;
- (id)_URIFromCanonicalizedFZIDType:(long long)arg1;
- (long long)_FZBestGuessFZIDType;
- (id)_bestGuessURIFromCanicalizedID;
- (id)_URIFromCanonicalizedDSID;
- (id)_URIFromCanonicalizedPhoneNumber;
- (id)_URIFromCanonicalizedEmail;
- (id)_bestGuessURI;
- (id)_URIFromDSID;
- (id)_URIFromPhoneNumber;
- (id)_URIFromEmail;
- (long long)_FZIDType;
- (id)_FZIDFromPhoneNumber;
- (id)_FZIDFromEmail;
- (id)_stripFZIDPrefix;
- (id)urlFromString;
- (id)stringByAddingURLEscapes;
- (id)stringByRemovingURLEscapes;
- (id)trimmedString;
- (long long)localizedCompareToString:(id)arg1;
- (unsigned int)unsignedIntValue;
- (unsigned int)hexValue;
- (_Bool)isDirectory;
- (_Bool)isEqualToIgnoringCase:(id)arg1;
@end

@interface NSString (IMFastFormatAdditions)
- (id)_imInitWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
@end

@interface NSString (MobileMeHelpers)
@property(readonly, nonatomic) NSString *stripMobileMSuffixIfPresent;
@property(readonly, nonatomic) _Bool hasMobileMeSuffix;
@property(readonly, nonatomic) NSString *mobileMeDomain;
@end

@interface NSThread (_IMThreadBlockSupport)
+ (void)_im_runBlock:(CDUnknownBlockType)arg1;
- (void)__im_performBlock:(CDUnknownBlockType)arg1 afterDelay:(double)arg2 modes:(id)arg3;
- (void)__im_performBlock:(CDUnknownBlockType)arg1 afterDelay:(double)arg2;
- (void)__im_performBlock:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2 modes:(id)arg3;
- (void)__im_performBlock:(CDUnknownBlockType)arg1 waitUntilDone:(_Bool)arg2;
- (void)__im_performBlock:(CDUnknownBlockType)arg1 modes:(id)arg2;
- (void)__im_performBlock:(CDUnknownBlockType)arg1;
@end

@interface NSUserDefaults (SpecificDomainAdditions)
+ (id)_IMObjectForKey:(id)arg1 inDomain:(id)arg2;
+ (void)_IMSetObject:(id)arg1 forKey:(id)arg2 inDomain:(id)arg3;
+ (id)_IMAppObjectForKey:(id)arg1;
+ (id)_IMAgentObjectForKey:(id)arg1;
@end

@interface NetworkChangeNotifier : NSObject <IMSystemMonitorListener, IMConnectionMonitorDelegate>
{
    _Bool _lastPostedNetworkUp;
    struct __SCDynamicStore *_store;
    NSString *_myIP;
    NSArray *_myIPs;
    IMConnectionMonitor *_connectionMonitor;
}

+ (void)disableNotifications;
+ (_Bool)enableNotifications;
+ (id)sharedInstance;
@property(nonatomic) _Bool lastPostedNetworkUp; // @synthesize lastPostedNetworkUp=_lastPostedNetworkUp;
@property(retain, nonatomic) IMConnectionMonitor *connectionMonitor; // @synthesize connectionMonitor=_connectionMonitor;
@property(retain, nonatomic) NSArray *myIPs; // @synthesize myIPs=_myIPs;
@property(retain, nonatomic) NSString *myIP; // @synthesize myIP=_myIP;
@property(nonatomic) struct __SCDynamicStore *store; // @synthesize store=_store;
- (id)primaryInterfaceName;
- (_Bool)isPrimaryCellular;
@property(readonly, nonatomic) _Bool isNetworkUp;
- (void)connectionMonitorDidUpdate:(id)arg1;
- (unsigned long long)linkQualityForInterfaceType:(unsigned long long)arg1;
- (int)linkQualityValueForInterface:(id)arg1;
- (int)linkQualityValueForInterfaceType:(unsigned long long)arg1;
@property(readonly, nonatomic) struct __SCDynamicStore *getDynamicStore;
@property(readonly, nonatomic) NSString *myIPAddress;
@property(readonly, nonatomic) NSString *myGatewayAddress;
@property(readonly, nonatomic) NSArray *myIPAddresses;
- (void)dealloc;
- (id)init;
- (_Bool)_listenForChanges;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)_clearIPCache;

@end

@interface _IMLogFileCompressor : NSObject <IMFileCopierDelegate>
{
    NSMutableArray *_archivers;
}

+ (id)sharedInstance;
- (void)fileCopierDidFinish:(id)arg1;
- (void)fileCopierDidStart:(id)arg1;
- (void)compressPath:(id)arg1 toPath:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface _IMNotificationObservationHelper : NSObject
{
    id _observer;
    id _object;
    CDUnknownBlockType _block;
    NSString *_name;
}

- (void)_notification:(id)arg1;
- (void)dealloc;
- (id)initWithObserver:(id)arg1 name:(id)arg2 object:(id)arg3 block:(CDUnknownBlockType)arg4;

@end

@interface _IMPingPacketData : NSObject
{
    int _sequenceNumber;
    _Bool _timedOut;
    int _error;
    struct timeval _timeSent;
    double _rtt;
}

@property(readonly, nonatomic) double rtt; // @synthesize rtt=_rtt;
@property(readonly, nonatomic) int error; // @synthesize error=_error;
@property(readonly, nonatomic) struct timeval timeSent; // @synthesize timeSent=_timeSent;
@property(readonly, nonatomic) _Bool timedOut; // @synthesize timedOut=_timedOut;
@property(readonly, nonatomic) int sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)_returnPacketArrived;
- (void)_markPacketAsTimedOut:(double)arg1;
- (id)initWithSequeneceNumber:(int)arg1 timesent:(struct timeval *)arg2 error:(int)arg3;

@end

@interface _IMPingStatisticsCollector : NSObject
{
    _IMPingPacketData *_timestampArray[160];
    NSMutableArray *_roundTriptimes;
    NSMutableString *_stringToWriteToFile;
    IMPingStatistics *_stats;
}

- (double)_computeStandardDeviation:(id)arg1 numPings:(int)arg2 averageRTT:(double)arg3;
- (double)_computeMedianTime:(id)arg1;
- (id)pingStatsForLastNSeconds:(double)arg1;
- (id)pingStats;
- (_Bool)logStatsToFile:(id)arg1 error:(id *)arg2;
- (void)timeoutOldSequenceNumbers:(double)arg1;
- (void)addEchoReplyPacket:(int)arg1;
- (struct timeval)timeSentForPacket:(int)arg1;
- (void)dealloc;
- (void)addEchoPacket:(int)arg1 packetTimestamp:(struct timeval)arg2 error:(int)arg3;
- (id)init;

@end

@interface _IMTimingInstance : NSObject
{
    double _startTiming;
    double _stopTiming;
    double _totalTime;
    _Bool _isRunning;
}

+ (id)createTimingInstanceWithStartTime:(float)arg1;
@property(nonatomic) _Bool isRunning; // @synthesize isRunning=_isRunning;
@property(nonatomic) double totalTime; // @synthesize totalTime=_totalTime;
- (id)description;
- (void)stopUsingTime:(double)arg1;
- (void)startUsingTime:(double)arg1;
- (id)init;

@end

