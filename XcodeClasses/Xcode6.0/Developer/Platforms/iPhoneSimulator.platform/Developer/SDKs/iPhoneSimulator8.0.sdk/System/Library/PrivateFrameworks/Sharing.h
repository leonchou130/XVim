//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/Sharing.framework/Sharing
// UUID: 3428B3B2-9240-3326-858D-AF2F81EC8317
//
//                           Arch: x86_64
//                Current version: 312.1.2
//          Compatibility version: 1.0.0
//                 Source version: 312.1.2.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol SFActivityAdvertiserClient <NSObject>
- (void)didSendPayloadForActivityIdentifier:(NSUUID *)arg1 toDeviceIdentifier:(NSString *)arg2 error:(NSError *)arg3;
- (void)activityPayloadForAdvertisementPayload:(NSData *)arg1 requestedByDeviceIdentifier:(NSString *)arg2 withCompletionHandler:(void (^)(NSUUID *, NSData *, NSError *))arg3;
@end

@protocol SFActivityAdvertiserProtocol <NSObject>
- (void)advertiseAdvertisementPayload:(NSData *)arg1 options:(NSDictionary *)arg2 withErrorHandler:(void (^)(NSError *))arg3;
@end

@protocol SFAirDropBrowserDelegate <NSObject>
- (void)browserDidChangePeople:(SFAirDropBrowser *)arg1;
- (void)browser:(SFAirDropBrowser *)arg1 didDeletePersonAtIndex:(unsigned long long)arg2;
- (void)browser:(SFAirDropBrowser *)arg1 didInsertPersonAtIndex:(unsigned long long)arg2;
- (void)browserWillChangePeople:(SFAirDropBrowser *)arg1;
@end

@protocol SFCompanionBrowserClient <NSObject>
- (void)receivedActivitiesList:(NSDictionary *)arg1 fromDeviceWithIdentifier:(NSString *)arg2;
@end

@protocol SFCompanionBrowserProtocol <NSObject>
- (void)suspendBrowing;
- (void)resumeBrowsingWithErrorHandler:(void (^)(_Bool, NSError *))arg1;
@end

@protocol SFCompanionConnectionManagerClient <NSObject>
- (void)connectionResumed;
@end

@protocol SFCompanionConnectionManagerProtocol <NSObject>
- (void)remoteInvalidateWithCompletionHandler:(void (^)(void))arg1;
- (void)endpointForService:(SFCompanionService *)arg1 reply:(void (^)(NSXPCListenerEndpoint *))arg2;
@end

@protocol SFCompanionConnectionProtocol <NSObject>
- (void)openConnection;
@end

@protocol SFCompanionServiceManagerClient <NSObject>
- (void)streamToService:(SFCompanionService *)arg1 withFileHandle:(NSFileHandle *)arg2 acceptReply:(void (^)(_Bool))arg3;
@end

@protocol SFCompanionServiceManagerProtocol <NSObject>
- (void)disableService:(SFCompanionService *)arg1;
- (void)enableService:(SFCompanionService *)arg1;
@end

@protocol SFCompanionXPCManagerObserver <NSObject>
- (void)xpcManagerConnectionInterrupted;

@optional
- (void)xpcManagerDidInvalidate:(SFCompanionXPCManager *)arg1;
- (void)xpcManagerDidResumeConnection:(SFCompanionXPCManager *)arg1;
@end

@protocol SFCompanionXPCManagerProtocol <NSObject>
- (void)createUnlockManagerWithReply:(void (^)(id <SFUnlockProtocol>, NSError *))arg1;
- (void)createContinuityScannerForClientProxy:(id <SFContinuityScannerClient>)arg1 reply:(void (^)(id <SFContinuityScannerProtocol>, NSError *))arg2;
- (void)createActivityAdvertiserForClientProxy:(id <SFActivityAdvertiserClient>)arg1 reply:(void (^)(id <SFActivityAdvertiserProtocol>, NSError *))arg2;
- (void)createStreamsForMessage:(NSDictionary *)arg1 reply:(void (^)(NSFileHandle *, NSError *))arg2;
- (void)createCompanionConnectionManagerForService:(SFCompanionService *)arg1 clientProxy:(id <SFCompanionConnectionManagerClient>)arg2 reply:(void (^)(id <SFCompanionConnectionManagerProtocol>))arg3;
- (void)createCompanionServiceManagerWithIdentifier:(NSString *)arg1 clientProxy:(id <SFCompanionServiceManagerClient>)arg2 reply:(void (^)(id <SFCompanionServiceManagerProtocol>, NSString *, NSString *, NSString *, NSError *))arg3;
- (void)createCompanionBrowserWithIdentifier:(NSString *)arg1 serviceType:(NSString *)arg2 clientProxy:(id <SFCompanionBrowserClient>)arg3 reply:(void (^)(id <SFCompanionBrowserProtocol>))arg4;
@end

@protocol SFContinuityScanManagerObserver <NSObject>
- (void)scanManager:(SFContinuityScanManager *)arg1 lostDeviceWithDeviceIdentifier:(NSString *)arg2;
- (void)scanManager:(SFContinuityScanManager *)arg1 foundDeviceWithDeviceIdentifier:(NSString *)arg2;
- (void)scanManager:(SFContinuityScanManager *)arg1 receivedAdvertisement:(SFActivityAdvertisement *)arg2;
@end

@protocol SFContinuityScannerClient <NSObject>
- (void)lostDeviceWithDeviceIdentifier:(NSString *)arg1;
- (void)foundDeviceWithDeviceIdentifier:(NSString *)arg1;
- (void)receivedAdvertisement:(SFActivityAdvertisement *)arg1;
@end

@protocol SFContinuityScannerProtocol <NSObject>
- (void)activityPayloadFromDeviceIdentifier:(NSString *)arg1 forAdvertisementPayload:(NSData *)arg2 withCompletionHandler:(void (^)(NSData *, NSError *))arg3;
@end

@protocol SFPersonCollectionViewCellDelegate <NSObject>
- (void)personCollectionViewCellDidFinishTransfer:(SFPersonCollectionViewCell *)arg1;
- (void)personCollectionViewCellDidTerminateTransfer:(SFPersonCollectionViewCell *)arg1;
- (void)personCollectionViewCellDidStartTransfer:(SFPersonCollectionViewCell *)arg1;
@end

@protocol SFRemoteHotspotClient <NSObject>
- (void)updatedFoundDeviceList:(NSArray *)arg1;
@end

@protocol SFUnlockProtocol <NSObject>
- (void)establishStashBagWithCompletionHandler:(void (^)(_Bool, NSError *))arg1;
- (void)unlockEnabledWithDevice:(NSString *)arg1 completionHandler:(void (^)(_Bool))arg2;
- (void)disableUnlockWithDevice:(NSString *)arg1 completionHandler:(void (^)(_Bool, NSError *))arg2;
- (void)enableUnlockWithDevice:(NSString *)arg1 fromKey:(_Bool)arg2 withPasscode:(NSString *)arg3 completionHandler:(void (^)(_Bool, NSError *))arg4;
@end

@protocol SFWirelessSettingsControllerDelegate <NSObject>
- (void)wirelessSettingsDidChange:(SFWirelessSettingsController *)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@interface NSProgress (SFAirDropTransferProgressAdditions)
+ (id)sf_transferStateAsString:(long long)arg1;
+ (id)sf_publishingKeyForApp:(id)arg1 sessionID:(id)arg2;
@property(readonly, nonatomic) NSString *sf_error;
- (void)sf_failedWithError:(id)arg1;
@property(nonatomic) long long sf_transferState;
- (id)sf_initWithFileURL:(id)arg1;
@property(readonly, nonatomic) NSString *sf_personRealName;
@property(readonly, nonatomic) NSString *sf_sessionID;
@property(readonly, nonatomic) NSString *sf_bundleID;
@property(readonly, nonatomic) NSString *sf_publishingKey;
- (id)sf_initWithAppBundle:(id)arg1 sessionID:(id)arg2 andPersonRealName:(id)arg3;
@end

@interface SFActivityAdvertisement : NSObject <NSSecureCoding>
{
    NSData *_advertisementPayload;
    NSDictionary *_options;
    NSString *_deviceIdentifier;
    NSString *_deviceName;
    NSString *_deviceModelIdentifier;
    NSData *_activityPayload;
}

+ (_Bool)supportsSecureCoding;
@property(retain) NSData *activityPayload; // @synthesize activityPayload=_activityPayload;
@property(readonly, retain) NSString *deviceModelIdentifier; // @synthesize deviceModelIdentifier=_deviceModelIdentifier;
@property(readonly, retain) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property(readonly, retain) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(readonly, retain) NSDictionary *options; // @synthesize options=_options;
@property(readonly, retain) NSData *advertisementPayload; // @synthesize advertisementPayload=_advertisementPayload;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)debugDescription;
- (void)dealloc;
- (id)initWithAdvertisementPayload:(id)arg1 options:(id)arg2 deviceName:(id)arg3 fromDeviceID:(id)arg4;

@end

@interface SFActivityAdvertiser : NSObject <SFCompanionXPCManagerObserver, SFActivityAdvertiserClient>
{
    id <SFActivityAdvertiserDelegate> _delegate;
    id <SFActivityAdvertiserProtocol> _connectionProxy;
    SFInternalAdvertisement *_currentAdvertisement;
}

+ (id)sharedAdvertiser;
@property(retain) SFInternalAdvertisement *currentAdvertisement; // @synthesize currentAdvertisement=_currentAdvertisement;
@property(retain) id <SFActivityAdvertiserProtocol> connectionProxy; // @synthesize connectionProxy=_connectionProxy;
@property id <SFActivityAdvertiserDelegate> delegate; // @synthesize delegate=_delegate;
- (void)didSendPayloadForActivityIdentifier:(id)arg1 toDeviceIdentifier:(id)arg2 error:(id)arg3;
- (void)activityPayloadForAdvertisementPayload:(id)arg1 requestedByDeviceIdentifier:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)advertiseAdvertisementPayload:(id)arg1 options:(id)arg2;
- (void)xpcManagerConnectionInterrupted;
- (void)setupXPCConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFActivityScanner : NSObject <SFContinuityScanManagerObserver>
{
    _Bool _receiving;
    id <SFActivityScannerDelegate> _delegate;
    NSUUID *_identifier;
}

@property(retain) NSUUID *identifier; // @synthesize identifier=_identifier;
@property _Bool receiving; // @synthesize receiving=_receiving;
- (void)scanManager:(id)arg1 lostDeviceWithDeviceIdentifier:(id)arg2;
- (void)scanManager:(id)arg1 foundDeviceWithDeviceIdentifier:(id)arg2;
- (void)scanManager:(id)arg1 receivedAdvertisement:(id)arg2;
- (void)activityPayloadFromDeviceIdentifier:(id)arg1 forAdvertisementPayload:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)stop;
- (void)start;
@property id <SFActivityScannerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFAirDropActiveIconView : UIImageView
{
    UIView *_circleMaskView;
    _Bool _masked;
}

@property(nonatomic, getter=isMasked) _Bool masked; // @synthesize masked=_masked;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SFAirDropActivityViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, SFAirDropBrowserDelegate, SFPersonCollectionViewCellDelegate, SFWirelessSettingsControllerDelegate>
{
    long long _attachmentCount;
    NSString *_sessionID;
    long long _sharedItemsRequestID;
    UILabel *_titleLabel;
    SFAirDropIconView *_airDropIconView;
    NSLayoutConstraint *_airDropIconLeftConstraint;
    SFAirDropActiveIconView *_airDropActiveIconView;
    NSLayoutConstraint *_airDropActiveIconLeftConstraint;
    UILabel *_noWifiLabel;
    NSLayoutConstraint *_noWifiRightConstraint;
    UILabel *_instructionsLabel;
    NSLayoutConstraint *_instructionsRightConstraint;
    UICollectionView *_collectionView;
    SFCollectionViewFlowLayout *_flowLayout;
    SFAirDropBrowser *_browser;
    id _progressToken;
    NSMutableDictionary *_personToProgress;
    NSMutableDictionary *_personToStoredTransferFinalState;
    NSMutableDictionary *_personToSharedItemsRequestID;
    NSMutableDictionary *_sharedItemsRequestIDToPreviewPhoto;
    SFWirelessSettingsController *_wirelessSettings;
    NSMutableSet *_cachedSharedItems;
    _Bool _itemsRequested;
    _Bool _itemsReady;
    NSOperationQueue *_operationQueue;
    NSMutableArray *_objectChanges;
    ALAssetsLibrary *_assetsLibrary;
    long long _generatedPreviews;
    _Bool _sharedItemsAvailable;
    _Bool _otherActivityViewPresented;
    _Bool _darkStyleOnLegacyApp;
    NSObject<SFAirDropActivityViewControllerDelegate> *_delegate;
}

+ (id)classesForItem:(id)arg1;
+ (_Bool)airDropActivityCanPerformActivityWithItems:(id)arg1;
+ (_Bool)isAirDropAvailable;
@property(nonatomic) _Bool darkStyleOnLegacyApp; // @synthesize darkStyleOnLegacyApp=_darkStyleOnLegacyApp;
@property(nonatomic) _Bool otherActivityViewPresented; // @synthesize otherActivityViewPresented=_otherActivityViewPresented;
@property(nonatomic) _Bool sharedItemsAvailable; // @synthesize sharedItemsAvailable=_sharedItemsAvailable;
@property(nonatomic) __weak NSObject<SFAirDropActivityViewControllerDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)generateSpecialPreviewPhotoForRequestID:(long long)arg1;
- (_Bool)addAttributedString:(id)arg1 withAttachmentName:(id)arg2 description:(id)arg3 previewImage:(id)arg4;
- (_Bool)addString:(id)arg1 withAttachmentName:(id)arg2 description:(id)arg3 previewImage:(id)arg4;
- (_Bool)createURLPayloadForData:(id)arg1 ofType:(id)arg2 withAttachmentName:(id)arg3 description:(id)arg4 previewImage:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (_Bool)addData:(id)arg1 ofType:(id)arg2 withAttachmentName:(id)arg3 description:(id)arg4 previewImage:(id)arg5;
- (_Bool)addImage:(id)arg1 withAttachmentName:(id)arg2 description:(id)arg3 previewImage:(id)arg4;
- (_Bool)addURL:(id)arg1 withAttachmentName:(id)arg2 description:(id)arg3 previewImage:(id)arg4;
- (_Bool)isValidPayload:(id)arg1 toPerson:(id)arg2 invalidMessage:(id *)arg3;
- (void)startTransferForPeople:(id)arg1;
- (void)setNeedsRequestingSharedItems;
- (id)cellForPerson:(id)arg1;
- (void)browserDidChangePeople:(id)arg1;
- (void)browser:(id)arg1 didDeletePersonAtIndex:(unsigned long long)arg2;
- (void)browser:(id)arg1 didInsertPersonAtIndex:(unsigned long long)arg2;
- (void)browserWillChangePeople:(id)arg1;
- (void)wirelessSettingsDidChange:(id)arg1;
- (void)personCollectionViewCellDidFinishTransfer:(id)arg1;
- (void)personCollectionViewCellDidStartTransfer:(id)arg1;
- (void)personCollectionViewCellDidTerminateTransfer:(id)arg1;
- (void)unpublishedProgressForPersonWithRealName:(id)arg1;
- (void)subscribedProgress:(id)arg1 forPersonWithRealName:(id)arg2;
- (void)unsubscribeToProgresses;
- (void)subscribeToProgresses;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
@property(readonly, nonatomic) struct CGSize suggestedThumbnailSize;
- (void)updateContentAreaAnimated:(_Bool)arg1;
- (void)enableAirDropRequiredFeatures;
- (_Bool)isBluetoothEnabled;
- (_Bool)isWifiEnabled;
- (_Bool)isTetheredModeEnabled;
- (void)adjustViewsToInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (id)attributedStringWithTitle:(id)arg1 content:(id)arg2;
- (void)viewDidLoad;
- (id)wifiBtHelpTextLocalizedStringKey;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willEnterForeground:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (void)stopBrowsing;
- (void)startBrowsing;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFAirDropBrowser : NSObject
{
    _Bool _didDelay;
    struct __SFBrowser *_browser;
    NSObject<OS_dispatch_source> *_timer;
    double _startTime;
    NSMutableDictionary *_nodes;
    NSArray *_people;
    id <SFAirDropBrowserDelegate> _delegate;
}

@property __weak id <SFAirDropBrowserDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *people; // @synthesize people=_people;
- (void).cxx_destruct;
- (void)updateDiscoveredPeople;
- (void)handleBrowserCallBack;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)init;

@end

@interface SFAirDropDiscoveryController : NSObject <UIActionSheetDelegate>
{
    id _delegate;
    _Bool _isVisible;
    _Bool _isLegacyDevice;
    _Bool _isLegacyModeEnabled;
    _Bool _isLegacyModeSettable;
    struct __SFOperation *_controller;
    id _actionSheetDelegate;
    UIActionSheet *_actionSheet;
    long long _discoverableMode;
}

@property __weak id <SFAirDropDiscoveryActionSheetDelegate> actionSheetDelegate; // @synthesize actionSheetDelegate=_actionSheetDelegate;
@property __weak id <SFAirDropDiscoveryControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)discoverableModeToString:(long long)arg1;
- (long long)operationDiscoverableModeToInteger:(id)arg1;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
@property long long discoverableMode;
- (id)discoverableModeActionSheet;
- (void)dealloc;
@property(readonly, getter=isLegacyModeSettable) _Bool legacyModeSettable;
@property(getter=isLegacyModeEnabled) _Bool legacyModeEnabled;
@property(readonly, getter=isLegacyDevice) _Bool legacyDevice;
@property(readonly, getter=isVisible) _Bool visible;
- (void)handleOperationCallback:(struct __SFOperation *)arg1 event:(long long)arg2 withResults:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFAirDropIconView : UIControl
{
    UIImageView *_imageView;
}

- (void).cxx_destruct;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFAirDropNode : NSObject
{
    struct __SFOperation *_sender;
    _Bool _unknown;
    _Bool _monogram;
    _Bool _supportsPasses;
    _Bool _supportsMixedTypes;
    id _node;
    NSString *_realName;
    UIImage *_displayIcon;
    NSString *_displayName;
    NSString *_secondaryName;
}

+ (id)nodeWithSFNode:(struct __SFNode *)arg1;
@property(readonly) _Bool supportsMixedTypes; // @synthesize supportsMixedTypes=_supportsMixedTypes;
@property(readonly) _Bool supportsPasses; // @synthesize supportsPasses=_supportsPasses;
@property(getter=isMonogram) _Bool monogram; // @synthesize monogram=_monogram;
@property(getter=isUnknown) _Bool unknown; // @synthesize unknown=_unknown;
@property(retain) NSString *secondaryName; // @synthesize secondaryName=_secondaryName;
@property(retain) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain) UIImage *displayIcon; // @synthesize displayIcon=_displayIcon;
@property(retain) NSString *realName; // @synthesize realName=_realName;
@property(retain) id node; // @synthesize node=_node;
- (void).cxx_destruct;
- (void)handleOperationCallback:(struct __SFOperation *)arg1 event:(long long)arg2 withResults:(id)arg3;
- (void)cancelSend;
- (void)startSendWithSessionID:(id)arg1 items:(id)arg2 description:(id)arg3 previewImage:(id)arg4;
- (void)updateWithSFNode:(struct __SFNode *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface SFAirDropPayload : NSObject
{
    _Bool _wasString;
    NSURL *_URL;
    NSData *_data;
    NSString *_type;
    UIImage *_previewImage;
    NSString *_payloadDescription;
    long long _identifer;
}

+ (id)newPayloadWithURL:(id)arg1 description:(id)arg2 previewImage:(id)arg3 identifier:(long long)arg4;
+ (id)newPayloadWithData:(id)arg1 ofType:(id)arg2 description:(id)arg3 previewImage:(id)arg4 identifier:(long long)arg5;
@property(nonatomic) long long identifer; // @synthesize identifer=_identifer;
@property(copy, nonatomic) NSString *payloadDescription; // @synthesize payloadDescription=_payloadDescription;
@property(retain, nonatomic) UIImage *previewImage; // @synthesize previewImage=_previewImage;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) _Bool wasString; // @synthesize wasString=_wasString;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;

@end

@interface SFAirDropTransferData : NSObject <NSSecureCoding>
{
    NSDictionary *_contentTypes;
    NSMutableDictionary *_fileExtensionsToTypes;
    _Bool _transferCompleted;
    _Bool _soundPlayed;
    _Bool _nonFileItem;
    _Bool _unknownScheme;
    _Bool _unknownFileType;
    _Bool _undesiredMixOfItems;
    _Bool _autoAccept;
    _Bool _verifiableIdentity;
    NSString *_recordID;
    NSDate *_timeLastUserInteraction;
    LSApplicationProxy *_selectedApplicationDestination;
    long long _transferStateResetCount;
    long long _transferState;
    NSString *_transferCompleteMessage;
    NSArray *_possibleApplicationDestinations;
    UIImage *_fileIcon;
    NSString *_bundleID;
    NSNumber *_filesCopied;
    NSArray *_files;
    NSArray *_items;
    NSDictionary *_itemsDescriptionAdvanced;
    NSString *_itemsDescription;
    NSNumber *_bytesCopied;
    NSNumber *_totalBytes;
    NSNumber *_timeRemaining;
    NSError *_error;
    NSString *_senderComputerName;
    NSString *_senderEmail;
    NSString *_senderEmailHash;
    NSString *_senderFirstName;
    NSString *_senderLastName;
    NSString *_senderID;
    NSString *_contentType;
}

+ (id)airDropTransferDataWithRecordID:(id)arg1;
+ (_Bool)supportsSecureCoding;
+ (void)cleanupTransferWithRecordID:(id)arg1;
+ (id)transferURLForRecordID:(id)arg1;
+ (id)loadFromURL:(id)arg1;
+ (id)validateTransferFolder:(id)arg1 withRecordID:(id)arg2;
+ (id)archivedTransfers;
+ (id)archivedTransferName;
+ (id)archivedTransfersBaseURL;
@property(copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(nonatomic, getter=isVerifiableIdentity) _Bool verifiableIdentity; // @synthesize verifiableIdentity=_verifiableIdentity;
@property(copy, nonatomic) NSString *senderID; // @synthesize senderID=_senderID;
@property(copy, nonatomic) NSString *senderLastName; // @synthesize senderLastName=_senderLastName;
@property(copy, nonatomic) NSString *senderFirstName; // @synthesize senderFirstName=_senderFirstName;
@property(copy, nonatomic) NSString *senderEmailHash; // @synthesize senderEmailHash=_senderEmailHash;
@property(copy, nonatomic) NSString *senderEmail; // @synthesize senderEmail=_senderEmail;
@property(copy, nonatomic) NSString *senderComputerName; // @synthesize senderComputerName=_senderComputerName;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSNumber *timeRemaining; // @synthesize timeRemaining=_timeRemaining;
@property(retain, nonatomic) NSNumber *totalBytes; // @synthesize totalBytes=_totalBytes;
@property(retain, nonatomic) NSNumber *bytesCopied; // @synthesize bytesCopied=_bytesCopied;
@property(copy, nonatomic) NSString *itemsDescription; // @synthesize itemsDescription=_itemsDescription;
@property(retain, nonatomic) NSDictionary *itemsDescriptionAdvanced; // @synthesize itemsDescriptionAdvanced=_itemsDescriptionAdvanced;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSArray *files; // @synthesize files=_files;
@property(retain, nonatomic) NSNumber *filesCopied; // @synthesize filesCopied=_filesCopied;
@property(copy, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
@property(retain, nonatomic) UIImage *fileIcon; // @synthesize fileIcon=_fileIcon;
@property(nonatomic, getter=shouldAutoAccept) _Bool autoAccept; // @synthesize autoAccept=_autoAccept;
@property(retain, nonatomic) NSArray *possibleApplicationDestinations; // @synthesize possibleApplicationDestinations=_possibleApplicationDestinations;
@property(readonly, nonatomic, getter=isUndesiredMixOfItems) _Bool undesiredMixOfItems; // @synthesize undesiredMixOfItems=_undesiredMixOfItems;
@property(readonly, nonatomic, getter=isUnknownFileType) _Bool unknownFileType; // @synthesize unknownFileType=_unknownFileType;
@property(readonly, nonatomic, getter=isUnknownScheme) _Bool unknownScheme; // @synthesize unknownScheme=_unknownScheme;
@property(readonly, nonatomic, getter=isNonFileItem) _Bool nonFileItem; // @synthesize nonFileItem=_nonFileItem;
@property(readonly, copy, nonatomic) NSString *transferCompleteMessage; // @synthesize transferCompleteMessage=_transferCompleteMessage;
@property(nonatomic) _Bool soundPlayed; // @synthesize soundPlayed=_soundPlayed;
@property(nonatomic) _Bool transferCompleted; // @synthesize transferCompleted=_transferCompleted;
@property(nonatomic) long long transferState; // @synthesize transferState=_transferState;
@property(readonly, nonatomic) long long transferStateResetCount; // @synthesize transferStateResetCount=_transferStateResetCount;
@property(retain, nonatomic) LSApplicationProxy *selectedApplicationDestination; // @synthesize selectedApplicationDestination=_selectedApplicationDestination;
@property(retain, nonatomic) NSDate *timeLastUserInteraction; // @synthesize timeLastUserInteraction=_timeLastUserInteraction;
@property(readonly, copy, nonatomic) NSString *recordID; // @synthesize recordID=_recordID;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *rejectedMessage;
@property(readonly, copy, nonatomic) NSString *searchAppStoreMessage;
@property(readonly, copy, nonatomic) NSString *selectAppMessage;
- (id)messageInProgress:(_Bool)arg1 buttonTitle:(id *)arg2;
- (id)messageLocalizedKeyWithTypes:(id)arg1 isTrustedPerson:(_Bool)arg2 isInProgress:(_Bool)arg3;
@property(readonly, copy, nonatomic) NSString *progressMessage;
- (id)messageAndButtonTitle:(id *)arg1;
- (id)typeForFileExtension:(id)arg1;
@property(readonly, nonatomic) NSDictionary *contentTypes;
@property(readonly, nonatomic) NSURL *firstURL;
@property(readonly, copy, nonatomic) NSString *firstFileTypeDescription;
@property(readonly, copy, nonatomic) NSString *firstFileExtension;
@property(readonly, copy, nonatomic) NSString *firstFileName;
@property(readonly, copy, nonatomic) NSString *senderName;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (void)resetTransferState;
- (void)updateWithDictionary:(id)arg1;
- (id)debugDescription;
- (id)description;
- (id)initWithRecordID:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)removeItem:(id)arg1;
- (void)archiveToURL:(id)arg1;
- (void)archive;

@end

__attribute__((visibility("hidden")))
@interface SFCircleProgressLayer : CALayer
{
    double _progressLineWidth;
    double _oneFullRotation;
    _Bool _showProgressTray;
    long long _progressStartPoint;
    UIColor *_progressColor;
    UIColor *_progressBackgroundColor;
}

+ (_Bool)needsDisplayForKey:(id)arg1;
@property(nonatomic) _Bool showProgressTray; // @synthesize showProgressTray=_showProgressTray;
@property(nonatomic) double progressLineWidth; // @synthesize progressLineWidth=_progressLineWidth;
@property(retain, nonatomic) UIColor *progressBackgroundColor; // @synthesize progressBackgroundColor=_progressBackgroundColor;
@property(retain, nonatomic) UIColor *progressColor; // @synthesize progressColor=_progressColor;
@property(nonatomic) long long progressStartPoint; // @synthesize progressStartPoint=_progressStartPoint;
- (void).cxx_destruct;
- (void)drawInContext:(struct CGContext *)arg1;
- (id)initWithLayer:(id)arg1;
- (id)init;

// Remaining properties
@property(nonatomic) double progress; // @dynamic progress;

@end

@interface SFCircleProgressView : UIView
{
}

+ (Class)layerClass;
- (double)progressPresentationValue;
- (void)animateProgressCompletedWithCompletion:(CDUnknownBlockType)arg1;
- (void)setProgress:(double)arg1 animated:(_Bool)arg2 forced:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)setProgress:(double)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) double progress;
@property(nonatomic) _Bool showProgressTray;
@property(nonatomic) double progressLineWidth;
@property(readonly, nonatomic) UIColor *progressColor;
- (void)setProgressColor:(id)arg1;
@property(nonatomic) long long progressStartPoint;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface SFCollectionViewFlowLayout : UICollectionViewFlowLayout
{
    NSMutableArray *_insertedIndexPaths;
    NSMutableArray *_movedIndexPaths;
    NSMutableArray *_deletedIndexPaths;
    NSMutableArray *_handledIndexPaths;
}

- (void).cxx_destruct;
- (void)_applyToLayoutAttributes:(id)arg1 toView:(id)arg2;
- (CDUnknownBlockType)_animationForReusableView:(id)arg1 toLayoutAttributes:(id)arg2 type:(unsigned long long)arg3;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (void)finalizeCollectionViewUpdates;
- (void)prepareForCollectionViewUpdates:(id)arg1;
- (id)init;

@end

@interface SFCompanionAdvertiser : NSObject
{
    _Bool _supportsStreams;
    id <SFCompanionAdvertiserDelegate> _delegate;
    NSString *_serviceType;
}

@property(readonly, copy) NSString *serviceType; // @synthesize serviceType=_serviceType;
@property _Bool supportsStreams; // @synthesize supportsStreams=_supportsStreams;
@property id <SFCompanionAdvertiserDelegate> delegate; // @synthesize delegate=_delegate;
- (void)stop;
- (void)start;
- (void)getContinuationStreamsWithEndpointData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(readonly) NSData *serviceEndpointData;
- (void)dealloc;
- (id)initWithServiceType:(id)arg1;

@end

@interface SFCompanionBrowser : NSObject <SFCompanionXPCManagerObserver, SFCompanionBrowserClient>
{
    struct __SFBrowser *_browser;
    NSMutableDictionary *_nodes;
    NSMutableArray *_lostPeople;
    NSMutableArray *_foundPeople;
    NSMutableArray *_serviceTypes;
    NSMutableDictionary *_foundServices;
    NSMutableDictionary *_deviceServices;
    _Bool _foundDevices;
    id <SFCompanionBrowserDelegate> _delegate;
    NSString *_identifier;
    id <SFCompanionBrowserProtocol> _connectionProxy;
}

@property(retain) id <SFCompanionBrowserProtocol> connectionProxy; // @synthesize connectionProxy=_connectionProxy;
@property(retain) NSString *identifier; // @synthesize identifier=_identifier;
@property _Bool foundDevices; // @synthesize foundDevices=_foundDevices;
@property id <SFCompanionBrowserDelegate> delegate; // @synthesize delegate=_delegate;
- (void)xpcManagerConnectionInterrupted;
- (void)receivedActivitiesList:(id)arg1 fromDeviceWithIdentifier:(id)arg2;
- (void)stopBluetooth;
- (void)startBluetooth;
- (void)handleBrowserCallback;
- (void)handleNoDevices;
- (void)handleNewActivities:(id)arg1 forDevice:(id)arg2;
- (id)serviceNames;
- (id)serviceTypes;
@property(readonly, copy) NSString *serviceType;
- (void)clearCache;
- (void)stop;
- (void)stopBrowsing;
- (void)start;
- (void)startBrowsing;
- (void)dealloc;
- (id)_initWithServiceTypes:(id)arg1;
- (id)initWithServiceTypes:(id)arg1;
- (id)initWithServiceType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFCompanionConnection : NSObject <SFCompanionConnectionManagerClient, SFCompanionXPCManagerObserver>
{
    _Bool _waitForAccept;
    _Bool _invalid;
    id <SFCompanionConnectionDelegate> _delegate;
    unsigned long long _status;
    SFCompanionService *_service;
    SFCompanionInterface *_exportedInterface;
    id _exportedObject;
    SFCompanionInterface *_remoteObjectInterface;
    SFCompanionDevice *_connectedDevice;
    NSString *_connectionID;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSXPCConnection *_userConnection;
    id <SFCompanionConnectionManagerProtocol> _connectionProxy;
}

@property(retain) id <SFCompanionConnectionManagerProtocol> connectionProxy; // @synthesize connectionProxy=_connectionProxy;
@property(retain) NSXPCConnection *userConnection; // @synthesize userConnection=_userConnection;
@property _Bool invalid; // @synthesize invalid=_invalid;
@property NSObject<OS_dispatch_queue> *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, copy, nonatomic) NSString *connectionID; // @synthesize connectionID=_connectionID;
@property _Bool waitForAccept; // @synthesize waitForAccept=_waitForAccept;
@property(retain, nonatomic) SFCompanionDevice *connectedDevice; // @synthesize connectedDevice=_connectedDevice;
@property(retain) SFCompanionInterface *remoteObjectInterface; // @synthesize remoteObjectInterface=_remoteObjectInterface;
@property(retain) id exportedObject; // @synthesize exportedObject=_exportedObject;
@property(retain) SFCompanionInterface *exportedInterface; // @synthesize exportedInterface=_exportedInterface;
@property(retain) SFCompanionService *service; // @synthesize service=_service;
@property unsigned long long status; // @synthesize status=_status;
@property id <SFCompanionConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)sendData:(id)arg1 withReply:(CDUnknownBlockType)arg2;
- (_Bool)sendData:(id)arg1 withErrorHandler:(CDUnknownBlockType)arg2;
- (void)suspend;
- (id)initWithDevice:(id)arg1 connectionID:(id)arg2 serviceType:(id)arg3 delegate:(id)arg4;
- (id)initWithDevice:(id)arg1 serviceType:(id)arg2 delegate:(id)arg3;
- (id)initWithConnectionID:(id)arg1;
- (void)xpcManagerConnectionInterrupted;
- (void)connectionResumed;
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;
- (id)remoteObjectProxy;
- (void)invalidationCallback;
- (void)onqueue_invalidate;
- (void)onqueue_userInvalidated;
- (void)invalidate;
- (void)onqueue_openXPCConnection;
- (void)onqueue_setupUserConnection:(id)arg1;
- (void)onqueue_proxyHandler:(id)arg1;
- (void)onqueue_resume;
- (void)connect;
- (void)resume;
- (void)dealloc;
- (void)setupWorkQueue;
- (id)initWithService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFCompanionDevice : NSObject
{
    id _node;
    NSString *_name;
    NSString *_type;
    NSString *_identifier;
    NSArray *_services;
    NSString *_serviceName;
    NSMutableSet *_connections;
    NSDictionary *_activities;
    NSString *_uniqueIdentifier;
}

@property(retain) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(retain, nonatomic) NSDictionary *activities; // @synthesize activities=_activities;
@property(retain, nonatomic) NSMutableSet *connections; // @synthesize connections=_connections;
@property(retain, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(retain, nonatomic) NSArray *services; // @synthesize services=_services;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) id node; // @synthesize node=_node;
- (long long)distance;
- (struct CGImage *)icon;
- (id)model;
- (void)dealloc;
- (id)init;

@end

@interface SFCompanionInterface : NSObject
{
    NSXPCInterface *_interface;
}

+ (id)interfaceWithProtocol:(id)arg1;
@property(retain) NSXPCInterface *interface; // @synthesize interface=_interface;
- (id)interfaceForSelector:(SEL)arg1 argumentIndex:(unsigned long long)arg2 ofReply:(_Bool)arg3;
- (void)setInterface:(id)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned long long)arg3 ofReply:(_Bool)arg4;
- (id)classesForSelector:(SEL)arg1 argumentIndex:(unsigned long long)arg2 ofReply:(_Bool)arg3;
- (void)setClasses:(id)arg1 forSelector:(SEL)arg2 argumentIndex:(unsigned long long)arg3 ofReply:(_Bool)arg4;
@property Protocol *protocol;
- (void)dealloc;
- (id)initWithNSXPCInterface:(id)arg1;

@end

@interface SFCompanionManager : NSObject <SFCompanionServiceManagerClient, SFCompanionXPCManagerObserver>
{
    NSString *_identifier;
    id <SFCompanionServiceManagerProtocol> _managerProxy;
    NSString *_deviceID;
    NSString *_deviceIP;
    NSString *_deviceName;
    NSMutableDictionary *_services;
    NSMutableDictionary *_streamHandlers;
    NSObject<OS_dispatch_semaphore> *_managerSemaphore;
}

+ (id)serviceManager;
@property NSObject<OS_dispatch_semaphore> *managerSemaphore; // @synthesize managerSemaphore=_managerSemaphore;
@property(retain) NSMutableDictionary *streamHandlers; // @synthesize streamHandlers=_streamHandlers;
@property(retain) NSMutableDictionary *services; // @synthesize services=_services;
@property(copy) NSString *deviceName; // @synthesize deviceName=_deviceName;
@property(copy) NSString *deviceIP; // @synthesize deviceIP=_deviceIP;
@property(copy) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(retain) id <SFCompanionServiceManagerProtocol> managerProxy; // @synthesize managerProxy=_managerProxy;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
- (void)streamsFromFileHandle:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)disableStreamSupportForIdentifier:(id)arg1;
- (void)supportStreamsWithIdentifier:(id)arg1 withStreamHandler:(CDUnknownBlockType)arg2;
- (void)getStreamsForData:(id)arg1 withStreamHandler:(CDUnknownBlockType)arg2;
- (void)xpcManagerDidInvalidate:(id)arg1;
- (void)xpcManagerConnectionInterrupted;
- (void)streamToService:(id)arg1 withFileHandle:(id)arg2 acceptReply:(CDUnknownBlockType)arg3;
- (void)signalSemaphore;
- (void)retrieveManagerProxy;
- (id)streamDataForIdentifier:(id)arg1;
- (id)serviceForIdentifier:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFCompanionService : NSObject <NSSecureCoding, NSCopying>
{
    NSString *_deviceName;
    NSString *_deviceID;
    NSString *_serviceType;
    NSString *_managerID;
    NSString *_ipAddress;
    NSString *_identifier;
    NSNumber *_nsxpcVersion;
}

+ (_Bool)supportsSecureCoding;
+ (id)serviceFromAuthorData:(id)arg1;
+ (id)serviceFromDictionary:(id)arg1;
@property(copy) NSNumber *nsxpcVersion; // @synthesize nsxpcVersion=_nsxpcVersion;
@property(copy) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy) NSString *ipAddress; // @synthesize ipAddress=_ipAddress;
@property(copy) NSString *managerID; // @synthesize managerID=_managerID;
@property(copy) NSString *serviceType; // @synthesize serviceType=_serviceType;
@property(copy) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(copy) NSString *deviceName; // @synthesize deviceName=_deviceName;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToService:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)messageData;
- (void)dealloc;
- (id)initWithServiceName:(id)arg1;

@end

@interface SFCompanionXPCManager : NSObject
{
    _Bool _invalid;
    _Bool _interrupted;
    NSXPCConnection *_connection;
    NSMutableArray *_observers;
}

+ (id)sharedManager;
+ (id)hotspotInterface;
+ (id)hotspotClientInterface;
+ (id)unlockInterface;
+ (id)scannerInterface;
+ (id)scannerClientInterface;
+ (id)advertiserInterface;
+ (id)advertiserClientInterface;
+ (id)browserInterface;
+ (id)browserClientInterface;
+ (id)connectionManagerInterface;
+ (id)connectionManagerClientInterface;
+ (id)serviceManagerInterface;
+ (id)serviceManagerClientInterface;
+ (id)xpcManagerInterface;
+ (void)initialize;
@property(retain) NSMutableArray *observers; // @synthesize observers=_observers;
@property(retain) NSXPCConnection *connection; // @synthesize connection=_connection;
@property _Bool interrupted; // @synthesize interrupted=_interrupted;
@property(getter=isInvalid) _Bool invalid; // @synthesize invalid=_invalid;
- (void)unlockManagerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)continuityScannerProxyForClient:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)activityAdvertiserProxyForClient:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)streamsForMessage:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)companionConnectionProxyForService:(id)arg1 client:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)serviceManagerProxyForIdentifier:(id)arg1 client:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)companionBrowserProxyforIdentifier:(id)arg1 serviceType:(id)arg2 client:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)unregisterObserver:(id)arg1;
- (void)registerObserver:(id)arg1;
- (void)notifyOfInvalidation;
- (void)notifyOfResume;
- (void)notifyObservers;
- (void)setupConnection;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface SFContinuityScanManager : NSObject <SFCompanionXPCManagerObserver, SFContinuityScannerClient>
{
    id <SFContinuityScannerProtocol> _connectionProxy;
    NSMutableArray *_queuedIdentifers;
    NSHashTable *_observers;
}

+ (id)sharedManager;
@property(retain) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain) NSMutableArray *queuedIdentifers; // @synthesize queuedIdentifers=_queuedIdentifers;
@property(retain) id <SFContinuityScannerProtocol> connectionProxy; // @synthesize connectionProxy=_connectionProxy;
- (void)xpcManagerConnectionInterrupted;
- (void)lostDeviceWithDeviceIdentifier:(id)arg1;
- (void)foundDeviceWithDeviceIdentifier:(id)arg1;
- (void)receivedAdvertisement:(id)arg1;
- (void)activityPayloadFromDeviceIdentifier:(id)arg1 forAdvertisementPayload:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)setupXPCConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface SFInternalAdvertisement : NSObject
{
    NSData *_advertisementPayload;
    NSDictionary *_options;
}

@property(copy) NSDictionary *options; // @synthesize options=_options;
@property(copy) NSData *advertisementPayload; // @synthesize advertisementPayload=_advertisementPayload;
- (void)dealloc;
- (id)description;
- (id)initWithAdvertisementPayload:(id)arg1 options:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface SFPersonCollectionViewCell : UICollectionViewCell
{
    struct CGRect _personViewFrame;
    _SFPersonImageView *_personImageView;
    SFCircleProgressView *_circleProgressView;
    UILabel *_nameLabel;
    struct CGRect _nameLabelOneLineFrame;
    struct CGRect _nameLabelTwoLinesFrame;
    CALayer *_nameLabelMaskLayer;
    double _nameLabelOriginY;
    UILabel *_secondaryNameLabel;
    UILabel *_waitingLabel;
    UILabel *_sendingLabel;
    UILabel *_sentLabel;
    UILabel *_declinedLabel;
    UILabel *_failedLabel;
    id _progressToken;
    NSProgress *_progress;
    NSArray *_progressKeyPaths;
    _Bool _darkStyleOnLegacyApp;
    _Bool _stateBeingRestored;
    SFAirDropNode *_person;
    long long _cellState;
    NSString *_sessionID;
    UIColor *_textColor;
    NSObject<SFPersonCollectionViewCellDelegate> *_delegate;
}

@property(nonatomic) __weak NSObject<SFPersonCollectionViewCellDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic) _Bool stateBeingRestored; // @synthesize stateBeingRestored=_stateBeingRestored;
@property(nonatomic) long long cellState; // @synthesize cellState=_cellState;
@property(retain, nonatomic) NSProgress *progress; // @synthesize progress=_progress;
@property(retain, nonatomic) SFAirDropNode *person; // @synthesize person=_person;
@property(nonatomic) _Bool darkStyleOnLegacyApp; // @synthesize darkStyleOnLegacyApp=_darkStyleOnLegacyApp;
- (void).cxx_destruct;
- (void)handleKVOUpdateForProgress:(id)arg1 keyPath:(id)arg2;
- (void)handleKVOUpdateForPerson:(id)arg1 keyPath:(id)arg2;
- (void)triggerKVOForKeyPaths:(id)arg1 ofObject:(id)arg2;
- (void)removeObserverOfValuesForKeyPaths:(id)arg1 ofObject:(id)arg2;
- (void)addObserverOfValuesForKeyPaths:(id)arg1 ofObject:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)userDidCancel;
- (void)userDidSelect;
- (void)switchToStatusLabel:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)visibleStatusLabel;
- (void)resetNameLabel;
- (void)updateNameLabel;
- (void)resetPersonIconView;
- (void)updatePersonIconView;
- (void)didMoveToWindow;
- (void)animateCellShow:(_Bool)arg1 delay:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)restoreCellStateFromFinalTransferState:(long long)arg1;
- (void)setCellState:(long long)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)createLabelWithFrame:(struct CGRect)arg1;

@end

@interface SFRemoteHotspotDevice : NSObject <NSSecureCoding>
{
    unsigned char _networkType;
    NSString *_deviceName;
    NSString *_deviceIdentifier;
    NSNumber *_batteryLife;
    NSNumber *_signalStrength;
}

+ (_Bool)supportsSecureCoding;
@property(retain) NSNumber *signalStrength; // @synthesize signalStrength=_signalStrength;
@property unsigned char networkType; // @synthesize networkType=_networkType;
@property(retain) NSNumber *batteryLife; // @synthesize batteryLife=_batteryLife;
@property(copy) NSString *deviceIdentifier; // @synthesize deviceIdentifier=_deviceIdentifier;
@property(copy) NSString *deviceName; // @synthesize deviceName=_deviceName;
- (void)encodeWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;

@end

@interface SFRemoteHotspotInfo : NSObject <NSSecureCoding>
{
    NSString *_name;
    NSString *_password;
    NSNumber *_channel;
}

+ (_Bool)supportsSecureCoding;
@property(retain) NSNumber *channel; // @synthesize channel=_channel;
@property(copy) NSString *password; // @synthesize password=_password;
@property(copy) NSString *name; // @synthesize name=_name;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1 password:(id)arg2 channel:(id)arg3;

@end

@interface SFRemoteHotspotSession : NSObject <SFRemoteHotspotClient, SFCompanionXPCManagerObserver>
{
    _Bool _browsing;
    id <SFRemoteHotspotSessionDelegate> _delegate;
    id <SFRemoteHotspotProtocol> _connectionProxy;
}

@property(retain) id <SFRemoteHotspotProtocol> connectionProxy; // @synthesize connectionProxy=_connectionProxy;
@property _Bool browsing; // @synthesize browsing=_browsing;
@property id <SFRemoteHotspotSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void)xpcManagerConnectionInterrupted;
- (void)updatedFoundDeviceList:(id)arg1;
- (void)enableRemoteHotspotForDevice:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)enableHotspotForDevice:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)stopBrowsing;
- (void)startBrowsing;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFUnlockManager : NSObject <SFCompanionXPCManagerObserver>
{
}

+ (id)sharedUnlockManager;
- (void)xpcManagerConnectionInterrupted;
- (void)establishStashBagWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)unlockEnabledWithDevice:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)disableUnlockWithDevice:(id)arg1;
- (void)enableUnlockWithDevice:(id)arg1 fromKey:(_Bool)arg2 withPasscode:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SFWirelessSettingsController : NSObject
{
    id _delegate;
    _Bool _wifiEnabled;
    _Bool _bluetoothEnabled;
    _Bool _deviceSupportsWAPI;
    _Bool _firstCallbackCompleted;
    struct __SFOperation *_information;
    NSObject<OS_dispatch_semaphore> *_firstCallBackSemaphore;
}

@property __weak id <SFWirelessSettingsControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
@property(readonly) _Bool deviceSupportsWAPI;
- (void)repairAppleID;
@property(getter=isBluetoothEnabled) _Bool bluetoothEnabled;
@property(getter=isWifiEnabled) _Bool wifiEnabled;
- (void)handleOperationCallback:(struct __SFOperation *)arg1 event:(long long)arg2 withResults:(id)arg3;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface _SFPersonImageView : UIImageView
{
    _Bool _overlay;
}

@property(nonatomic, getter=isOverlay) _Bool overlay; // @synthesize overlay=_overlay;

@end

