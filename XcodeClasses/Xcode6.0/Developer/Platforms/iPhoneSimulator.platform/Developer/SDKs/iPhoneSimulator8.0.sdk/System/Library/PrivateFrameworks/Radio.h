//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    double width;
    double height;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/Radio.framework/Radio
// UUID: 256B341A-AED3-3AE1-AFE2-AF8EB92F8D8C
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 613.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol APSConnectionDelegate <NSObject>
- (void)connection:(APSConnection *)arg1 didReceivePublicToken:(NSData *)arg2;

@optional
- (void)connectionDidReconnect:(APSConnection *)arg1;
- (void)connection:(APSConnection *)arg1 didChangeConnectedStatus:(_Bool)arg2;
- (void)connection:(APSConnection *)arg1 didFailToSendOutgoingMessage:(APSOutgoingMessage *)arg2 error:(NSError *)arg3;
- (void)connection:(APSConnection *)arg1 didSendOutgoingMessage:(APSOutgoingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveMessageForTopic:(NSString *)arg2 userInfo:(NSDictionary *)arg3;
- (void)connection:(APSConnection *)arg1 didReceiveIncomingMessage:(APSIncomingMessage *)arg2;
- (void)connection:(APSConnection *)arg1 didReceiveToken:(NSData *)arg2 forTopic:(NSString *)arg3 identifier:(NSString *)arg4;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFetchedResultsControllerDelegate

@optional
- (NSString *)controller:(NSFetchedResultsController *)arg1 sectionIndexTitleForSectionName:(NSString *)arg2;
- (void)controllerDidChangeContent:(NSFetchedResultsController *)arg1;
- (void)controllerWillChangeContent:(NSFetchedResultsController *)arg1;
- (void)controller:(NSFetchedResultsController *)arg1 didChangeSection:(id <NSFetchedResultsSectionInfo>)arg2 atIndex:(unsigned long long)arg3 forChangeType:(unsigned long long)arg4;
- (void)controller:(NSFetchedResultsController *)arg1 didChangeObject:(id)arg2 atIndexPath:(NSIndexPath *)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(NSIndexPath *)arg5;
@end

@protocol NSFetchedResultsSectionInfo
@property(readonly, nonatomic) NSArray *objects;
@property(readonly, nonatomic) unsigned long long numberOfObjects;
@property(readonly, nonatomic) NSString *indexTitle;
@property(readonly, nonatomic) NSString *name;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol RadioManagedObjectWrapperProtocol <NSObject>
@property(readonly, nonatomic) RadioModel *model;
@property(readonly, nonatomic) NSManagedObject *managedObject;
@property(readonly, nonatomic, getter=isDatabaseBacked) _Bool databaseBacked;
- (id)initWithModel:(RadioModel *)arg1 managedObject:(NSManagedObject *)arg2;
@end

@interface NSData (RadioRequestAdditions)
+ (id)dataForRadioRequestParameters:(id)arg1 protocolVersion:(int)arg2 isAsynchronousBackgroundRequest:(_Bool)arg3 error:(id *)arg4;
+ (id)dataForRadioRequestParameters:(id)arg1 isAsynchronousBackgroundRequest:(_Bool)arg2 error:(id *)arg3;
- (id)propertyListForRadioResponseReturningError:(id *)arg1 unparsedResponseDictionary:(id *)arg2;
- (id)propertyListForRadioResponseReturningError:(id *)arg1;
@end

@interface NSHTTPURLResponse (RadioAdditions)
- (void)radio_mescalVerifyData:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
@end

@interface NSString (RadioRequestAdditions)
+ (id)queryStringForRadioRequestParameters:(id)arg1 protocolVersion:(int)arg2 error:(id *)arg3;
@end

@interface RadioRequest : NSObject
{
    _Bool _cachedResponse;
    long long _errorCode;
    NSObject<OS_dispatch_queue> *_queue;
    RadioRequestContext *_requestContext;
    double _retryInterval;
    long long _status;
    NSDictionary *_unparsedResponseDictionary;
    _Bool _asynchronousBackgroundRequest;
}

+ (void)loadServiceConfigurationWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(nonatomic, getter=isAsynchronousBackgroundRequest) _Bool asynchronousBackgroundRequest; // @synthesize asynchronousBackgroundRequest=_asynchronousBackgroundRequest;
- (void).cxx_destruct;
- (void)_loadRadioStoreBagAndAllowRetry:(_Bool)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_loadRadioStoreBagWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSDictionary *unparsedResponseDictionary;
- (void)setUnparsedResponseDictionary:(id)arg1;
@property(readonly) long long status;
- (void)setStatus:(long long)arg1;
- (void)setRetryInterval:(double)arg1;
@property(copy) RadioRequestContext *requestContext;
- (void)setErrorCode:(long long)arg1;
- (void)setCachedResponse:(_Bool)arg1;
@property(readonly) double retryInterval;
@property(readonly, getter=isCachedResponse) _Bool cachedResponse;
@property(readonly) long long errorCode;
- (void)cancel;
- (void)dealloc;
- (id)init;

@end

@interface RadioSyncRequest : RadioRequest
{
    NSObject<OS_dispatch_queue> *_artworkQueue;
    unsigned long long _globalVersion;
    SSURLConnectionRequest *_request;
    NSDictionary *_responseDictionary;
    _Bool _disableArtworkLoading;
    _Bool _includeCleanTracksOnly;
    _Bool _isAutomaticUpdate;
    NSString *_referer;
    NSDictionary *_resultingOverrideBagDictionary;
}

@property(readonly, copy, nonatomic) NSDictionary *resultingOverrideBagDictionary; // @synthesize resultingOverrideBagDictionary=_resultingOverrideBagDictionary;
@property(copy, nonatomic) NSString *referer; // @synthesize referer=_referer;
@property(nonatomic) _Bool isAutomaticUpdate; // @synthesize isAutomaticUpdate=_isAutomaticUpdate;
@property(nonatomic) _Bool includeCleanTracksOnly; // @synthesize includeCleanTracksOnly=_includeCleanTracksOnly;
@property(nonatomic) _Bool disableArtworkLoading; // @synthesize disableArtworkLoading=_disableArtworkLoading;
- (void).cxx_destruct;
- (id)_updateModel:(id)arg1 withChangeDictionary:(id)arg2 changeType:(long long *)arg3 loadArtworkSynchronously:(_Bool)arg4;
- (id)_stationSortOrderForChanges:(id)arg1;
- (id)_sortedChangesByType:(id)arg1;
- (id)matchDictionary;
- (id)changeList;
- (id)responseDictionary;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithGlobalVersion:(unsigned long long)arg1;
- (id)init;

@end

@interface RadioAddStationRequest : RadioSyncRequest
{
    NSDictionary *_matchDictionary;
    long long _persistentID;
    NSMutableDictionary *_stationDictionary;
    NSString *_stationHashForSkipHistoryCopying;
}

- (void).cxx_destruct;
- (void)startWithAddStationCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)matchDictionary;
- (id)changeList;
- (id)initWithQueryTerm:(id)arg1 queryID:(long long)arg2;
- (id)initWithRadioTrackDictionary:(id)arg1 useArtist:(_Bool)arg2;
- (id)initWithLibraryTrackDictionary:(id)arg1 useArtist:(_Bool)arg2;
- (id)initWithStationDictionary:(id)arg1;
- (id)initWithStation:(id)arg1;
- (id)init;

@end

@interface RadioAddToWishListRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    NSString *_stationHash;
    long long _stationID;
    RadioTrack *_track;
    long long _action;
    long long _trackStoreID;
}

@property(readonly, nonatomic) long long trackStoreID; // @synthesize trackStoreID=_trackStoreID;
@property(nonatomic) long long action; // @synthesize action=_action;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithTrackStoreID:(long long)arg1 stationID:(long long)arg2 stationHash:(id)arg3;
- (id)initWithTrack:(id)arg1 station:(id)arg2;
- (id)init;

@end

@interface RadioArtwork : NSObject <NSCopying>
{
    NSURL *_URL;
    struct CGSize _pixelSize;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, nonatomic) struct CGSize pixelSize; // @synthesize pixelSize=_pixelSize;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) struct CGSize pointSize;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithArtworkURL:(id)arg1 pixelSize:(struct CGSize)arg2;
- (id)initWithArtworkDictionary:(id)arg1;

@end

@interface RadioArtworkCollection : NSObject
{
    NSArray *_artworks;
}

@property(readonly, nonatomic) NSArray *artworks; // @synthesize artworks=_artworks;
- (void).cxx_destruct;
- (id)_artworksBySortingArtworks:(id)arg1;
- (id)bestArtworkForPointSize:(struct CGSize)arg1;
- (id)bestArtworkForPixelSize:(struct CGSize)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithArtworkVariants:(id)arg1;
- (id)initWithArtworks:(id)arg1;

@end

@interface RadioTrack : NSObject <NSSecureCoding>
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSDictionary *_bestOfferDictionary;
    NSMutableDictionary *_trackDictionary;
    _Bool _isPreorderAlbum;
    NSDate *_expirationDate;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSDictionary *trackDictionary; // @synthesize trackDictionary=_trackDictionary;
@property(readonly, nonatomic) _Bool isPreorderAlbum; // @synthesize isPreorderAlbum=_isPreorderAlbum;
@property(retain, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
- (void).cxx_destruct;
- (id)_offers;
- (id)_valueRespondingToSelector:(SEL)arg1 forMetadataKey:(id)arg2 fallbackTrackDictionaryKey:(id)arg3;
- (id)_valueOfClass:(Class)arg1 forMetadataKey:(id)arg2 fallbackTrackDictionaryKey:(id)arg3;
- (id)_valueOfClass:(Class)arg1 forAssetInfoKey:(id)arg2;
- (void)_performWriteTransactionAndWait:(CDUnknownBlockType)arg1;
- (void)_performWriteTransaction:(CDUnknownBlockType)arg1;
- (void)_performTransactionAndWait:(CDUnknownBlockType)arg1;
- (void)_performTransaction:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSDictionary *trackInfo;
@property(readonly, copy, nonatomic) NSString *title;
@property(readonly, nonatomic) long long storeID;
@property(readonly, nonatomic) double startTime;
@property(readonly, nonatomic) long long shuffleSeed;
@property(copy, nonatomic) NSDictionary *metadataDictionary;
@property(nonatomic) _Bool inWishList;
@property(readonly, copy, nonatomic) NSURL *previewURL;
@property(readonly, copy, nonatomic) NSArray *offers;
@property(readonly, nonatomic) int likeStatus;
@property(readonly, nonatomic) _Bool isExplicit;
@property(readonly, copy, nonatomic) NSDictionary *feedbackDictionaryRepresentation;
@property(readonly, nonatomic) double duration;
@property(readonly, copy, nonatomic) NSString *debugMessage;
@property(readonly, nonatomic) long long dateFetched;
@property(readonly, copy, nonatomic) NSString *copyrightText;
@property(readonly, nonatomic) RadioAudioClip *beforePromoAudioClip;
@property(readonly, copy, nonatomic) NSArray *assets;
@property(readonly, nonatomic) RadioArtworkCollection *artworkCollection;
@property(readonly, copy, nonatomic) NSString *artist;
@property(readonly, copy, nonatomic) NSURL *albumURL;
@property(readonly, nonatomic) long long albumID;
@property(readonly, nonatomic) long long albumBuyButtonType;
@property(readonly, copy, nonatomic) NSString *albumBuyButtonText;
@property(readonly, copy, nonatomic) NSString *album;
@property(readonly, nonatomic) RadioAudioClip *afterPromoAudioClip;
@property(readonly, nonatomic) RadioTrackAdInfo *adInfo;
@property(readonly, copy, nonatomic) NSData *adData;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithTrackDictionary:(id)arg1;
- (id)init;

@end

@interface RadioAudioClip : RadioTrack
{
}

@property(readonly, nonatomic, getter=isSkipable) _Bool skipable;
@property(readonly, nonatomic) long long purchaseID;
@property(readonly, copy, nonatomic) NSURL *assetURL;

@end

@interface RadioClearPlayHistoryRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;

@end

@interface RadioContentLookupRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    NSArray *_trackStoreIDs;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithTrackStoreIDs:(id)arg1;

@end

@interface RadioDeleteStationRequest : RadioSyncRequest
{
    NSDictionary *_stationDictionary;
    unsigned long long _stationID;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)changeList;
- (id)initWithStation:(id)arg1;
- (id)init;

@end

@interface RadioFairPlayController : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    unsigned long long _activeAccountIdentifier;
    NSMutableArray *_dpInfoKeyBagSyncDataBlobs;
    NSObject<OS_dispatch_queue> *_notificationQueue;
    RadioFairPlaySAPContext *_SAPContext;
    NSMutableArray *_SAPContextLoadBlocks;
}

+ (id)_sharedController;
+ (void)warmSAPSession;
- (void).cxx_destruct;
- (id)_setupMescalSessionWithBag:(id)arg1 canUseCachedCertificateData:(_Bool)arg2 error:(id *)arg3;
- (id)_performSetupWithURL:(id)arg1 inputData:(id)arg2 error:(id *)arg3;
- (id)_loadCertificateDataWithCertificateURL:(id)arg1 error:(id *)arg2;
- (void)_accountStoreDidChangeNotification:(id)arg1;
- (void)_verifyWithURL:(id)arg1 data:(id)arg2 headerFields:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_removeCachedSAPContext;
- (void)_pushDPInfoKeyBagSyncData:(id)arg1 forAccountIdentifier:(unsigned long long)arg2;
- (id)_popDPInfoKeyBagSyncDataWithCount:(long long)arg1 returningAccountIdentifier:(unsigned long long *)arg2 error:(id *)arg3;
- (void)_loadSAPContextWithBag:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface RadioFairPlaySAPContext : NSObject
{
}

- (_Bool)verifyData:(id)arg1 withSignature:(id)arg2 error:(id *)arg3;
- (id)signatureWithData:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)_initWithFPSAPContext:(void *)arg1;

@end

@interface RadioFairPlaySAPExchanger : NSObject
{
    RadioFairPlaySAPContext *_SAPContext;
}

@property(readonly, nonatomic) RadioFairPlaySAPContext *SAPContext; // @synthesize SAPContext=_SAPContext;
- (void).cxx_destruct;
- (id)exchangeData:(id)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)init;

@end

@interface RadioFetchMetadataRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    NSArray *_itemIDs;
    NSData *_timedMetadata;
    NSArray *_tracks;
}

@property(retain, nonatomic) NSArray *tracks; // @synthesize tracks=_tracks;
@property(copy, nonatomic) NSData *timedMetadata; // @synthesize timedMetadata=_timedMetadata;
@property(copy, nonatomic) NSArray *itemIDs; // @synthesize itemIDs=_itemIDs;
- (void).cxx_destruct;
- (id)_itemIDsToRadioTracks;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;

@end

@interface RadioGetGenreTreeNodesRequest : RadioRequest
{
    unsigned long long _parentNodeID;
    SSURLConnectionRequest *_request;
    SSMetricsConfiguration *_metricsConfiguration;
    SSMetricsPageEvent *_metricsPageEvent;
}

+ (id)responseContentKey;
+ (id)requestBagKey;
+ (id)fallbackRequestPath;
+ (id)cacheKeyForGenreWithNodeID:(unsigned long long)arg1;
@property(readonly, copy, nonatomic) SSMetricsPageEvent *metricsPageEvent; // @synthesize metricsPageEvent=_metricsPageEvent;
@property(readonly, retain, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
- (void).cxx_destruct;
- (id)_genreTreeByApplyingResponse:(id)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCachedCompletionHandler:(CDUnknownBlockType)arg1 networkCompletionHandler:(CDUnknownBlockType)arg2;
- (id)initWithParentNodeID:(unsigned long long)arg1;
- (id)init;

@end

@interface RadioGenresRequest : RadioGetGenreTreeNodesRequest
{
}

+ (id)responseContentKey;
+ (id)requestBagKey;
+ (id)fallbackRequestPath;
+ (id)cacheKeyForGenreWithNodeID:(unsigned long long)arg1;

@end

@interface RadioGetFeaturedStationsRequest : RadioRequest
{
    NSObject<OS_dispatch_queue> *_artworkQueue;
    SSURLConnectionRequest *_request;
    unsigned int _stationCount;
    _Bool _disableArtworkLoading;
    _Bool _disableCachedResponses;
}

@property(nonatomic) _Bool disableCachedResponses; // @synthesize disableCachedResponses=_disableCachedResponses;
@property(nonatomic) _Bool disableArtworkLoading; // @synthesize disableArtworkLoading=_disableArtworkLoading;
- (void).cxx_destruct;
- (id)_stationDictionariesByApplyingResponse:(id)arg1 error:(id *)arg2;
- (id)_importFeaturedStationWithDictionary:(id)arg1 inModel:(id)arg2 loadArtworkSynchronously:(_Bool)arg3;
- (void)startWithFeaturedStationsCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithStationCount:(unsigned int)arg1;
- (id)init;

@end

@interface RadioGetHistoryRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    _Bool _fetchForAccount;
    _Bool _includesAds;
    _Bool _aggregateSessions;
    _Bool _shouldProcessCategories;
    unsigned long long _maxNumberOfTracks;
    long long _stationID;
    NSString *_stationHash;
    RadioPlayEventCollection *_playEventCollection;
}

@property(nonatomic) _Bool shouldProcessCategories; // @synthesize shouldProcessCategories=_shouldProcessCategories;
@property(copy, nonatomic) RadioPlayEventCollection *playEventCollection; // @synthesize playEventCollection=_playEventCollection;
@property(nonatomic) _Bool aggregateSessions; // @synthesize aggregateSessions=_aggregateSessions;
@property(copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(nonatomic) _Bool includesAds; // @synthesize includesAds=_includesAds;
@property(nonatomic) _Bool fetchForAccount; // @synthesize fetchForAccount=_fetchForAccount;
@property(nonatomic) unsigned long long maxNumberOfTracks; // @synthesize maxNumberOfTracks=_maxNumberOfTracks;
- (void).cxx_destruct;
- (id)_newHistoryItemWithDictionary:(id)arg1;
- (id)_newHistoryCategoryWithDictionary:(id)arg1;
- (void)startWithHistoryCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)init;

@end

@interface RadioGetLikesRequest : RadioRequest
{
    unsigned long long _numberOfBannedTracks;
    unsigned long long _numberOfLikedTracks;
    SSURLConnectionRequest *_request;
    RadioStation *_station;
    _Bool _shouldProcessItems;
}

@property(nonatomic) _Bool shouldProcessItems; // @synthesize shouldProcessItems=_shouldProcessItems;
@property(nonatomic) unsigned long long numberOfLikedTracks; // @synthesize numberOfLikedTracks=_numberOfLikedTracks;
@property(nonatomic) unsigned long long numberOfBannedTracks; // @synthesize numberOfBannedTracks=_numberOfBannedTracks;
- (void).cxx_destruct;
- (void)startWithLikeBanCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithStation:(id)arg1;
- (id)init;

@end

@interface RadioGetStationsRequest : RadioRequest
{
    long long _nodeType;
    SSURLConnectionRequest *_request;
    SSMetricsConfiguration *_metricsConfiguration;
    SSMetricsPageEvent *_metricsPageEvent;
    long long _numberOfResults;
    long long _parentNodeID;
    long long _resultsOffset;
}

@property(nonatomic) long long resultsOffset; // @synthesize resultsOffset=_resultsOffset;
@property(readonly, nonatomic) long long parentNodeID; // @synthesize parentNodeID=_parentNodeID;
@property(nonatomic) long long numberOfResults; // @synthesize numberOfResults=_numberOfResults;
@property(readonly, copy, nonatomic) SSMetricsPageEvent *metricsPageEvent; // @synthesize metricsPageEvent=_metricsPageEvent;
@property(readonly, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
- (void).cxx_destruct;
- (id)_rootTreeNodeByApplyingResponse:(id)arg1 returningError:(id *)arg2;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithParentNodeID:(long long)arg1;
- (id)initForFeaturedStations;

@end

@interface RadioGetStreamingStationsRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;

@end

@interface RadioGetTrackEventsRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    NSArray *_stationTrackIDs;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithStationTrackIDs:(id)arg1;

@end

@interface RadioGetTracksRequest : RadioRequest
{
    unsigned long long _globalVersion;
    _Bool _includeCleanTracksOnly;
    unsigned long long _numberOfTracks;
    SSURLConnectionRequest *_request;
    RadioStation *_station;
    _Bool _shouldIncludeAsset;
    NSDictionary *_additionalRequestParameters;
    NSData *_heartbeatTokenData;
    RadioPlayEventCollection *_playEventCollection;
    RadioPlaybackContext *_playbackContext;
    long long _reasonType;
}

@property(nonatomic) _Bool shouldIncludeAsset; // @synthesize shouldIncludeAsset=_shouldIncludeAsset;
@property(nonatomic) long long reasonType; // @synthesize reasonType=_reasonType;
@property(copy, nonatomic) RadioPlaybackContext *playbackContext; // @synthesize playbackContext=_playbackContext;
@property(copy, nonatomic) RadioPlayEventCollection *playEventCollection; // @synthesize playEventCollection=_playEventCollection;
@property(nonatomic) _Bool includeCleanTracksOnly; // @synthesize includeCleanTracksOnly=_includeCleanTracksOnly;
@property(copy, nonatomic) NSData *heartbeatTokenData; // @synthesize heartbeatTokenData=_heartbeatTokenData;
@property(nonatomic) unsigned long long numberOfTracks; // @synthesize numberOfTracks=_numberOfTracks;
@property(copy, nonatomic) NSDictionary *additionalRequestParameters; // @synthesize additionalRequestParameters=_additionalRequestParameters;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithStation:(id)arg1 globalVersion:(unsigned long long)arg2;
- (id)init;

@end

@interface RadioGetTracksResponse : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSMutableDictionary *_tracksByStationKey;
    NSDate *_expirationDate;
    NSDictionary *_responseDictionary;
}

@property(readonly, copy, nonatomic) NSDictionary *responseDictionary; // @synthesize responseDictionary=_responseDictionary;
@property(retain, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
- (void).cxx_destruct;
- (id)_tracksForStationKey:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *unusedKBSyncStrings;
- (id)tracksForStationHash:(id)arg1;
- (id)tracksForStationID:(long long)arg1;
- (id)tracksForStation:(id)arg1;
@property(readonly, nonatomic) long long tracklistActionType;
@property(readonly, nonatomic) NSDate *skipDate;
@property(readonly, nonatomic) _Bool shouldIncrementSkipCount;
@property(readonly, nonatomic) unsigned long long globalVersion;
@property(readonly, copy, nonatomic) NSDictionary *dialogDictionary;
- (id)initWithResponseDictionary:(id)arg1;
- (id)init;

@end

@interface RadioGetWishListRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    unsigned long long _maxNumberOfTracks;
}

@property(nonatomic) unsigned long long maxNumberOfTracks; // @synthesize maxNumberOfTracks=_maxNumberOfTracks;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)init;

@end

@interface RadioHistoryCategory : NSObject <NSCopying, NSMutableCopying>
{
    NSString *_categoryDescription;
    NSArray *_items;
    NSString *_name;
    NSString *_stationHash;
    long long _stationID;
    long long _type;
}

@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(readonly, copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, copy, nonatomic) NSString *categoryDescription; // @synthesize categoryDescription=_categoryDescription;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;

@end

@interface RadioHistoryItem : NSObject <NSCopying, NSMutableCopying>
{
    NSDate *_datePlayed;
    NSString *_externalIdentifier;
    RadioTrack *_track;
    long long _type;
}

@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) RadioTrack *track; // @synthesize track=_track;
@property(readonly, copy, nonatomic) NSString *externalIdentifier; // @synthesize externalIdentifier=_externalIdentifier;
@property(readonly, nonatomic) NSDate *datePlayed; // @synthesize datePlayed=_datePlayed;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;

@end

@interface RadioImageCache : NSObject
{
    NSOperationQueue *_imageRequestQueue;
}

+ (struct __CFURLStorageSession *)_newSharedCacheStorageSession;
+ (struct _CFURLCache *)_sharedCFURLCache;
+ (id)sharedCache;
- (void).cxx_destruct;
- (id)_requestForRadioArtwork:(id)arg1;
- (id)_cachedResponseForRequest:(id)arg1;
- (void)_removeAllCachedImages;
- (void)loadImageForStation:(id)arg1 withSize:(struct CGSize)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)loadImageForRadioArtwork:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (id)cachedImageDataForStation:(id)arg1 withExactSize:(struct CGSize)arg2 MIMEType:(id *)arg3;
- (id)cachedImageDataForRadioArtwork:(id)arg1 MIMEType:(id *)arg2;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface RadioLikeBanItem : NSObject <NSCopying, NSMutableCopying>
{
    long long _albumID;
    RadioArtworkCollection *_artworkCollection;
    _Bool _isSeed;
    RadioSeedMetadata *_seedMetadata;
    long long _storeID;
    long long _type;
}

@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) long long storeID; // @synthesize storeID=_storeID;
@property(readonly, copy, nonatomic) RadioSeedMetadata *seedMetadata; // @synthesize seedMetadata=_seedMetadata;
@property(readonly, nonatomic) _Bool isSeed; // @synthesize isSeed=_isSeed;
@property(readonly, nonatomic) RadioArtworkCollection *artworkCollection; // @synthesize artworkCollection=_artworkCollection;
@property(readonly, nonatomic) long long albumID; // @synthesize albumID=_albumID;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithItemDictionary:(id)arg1;
- (id)init;

@end

@interface RadioLikeRequest : RadioRequest
{
    long long _itemID;
    int _likeStatus;
    SSURLConnectionRequest *_request;
    int _seedType;
    RadioStation *_station;
    _Bool _isSeed;
}

@property(nonatomic) _Bool isSeed; // @synthesize isSeed=_isSeed;
@property(nonatomic) int likeStatus; // @synthesize likeStatus=_likeStatus;
- (void).cxx_destruct;
- (void)startWithLikeCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithItemID:(long long)arg1 seedType:(int)arg2 station:(id)arg3;
- (id)initWithTrackID:(id)arg1 station:(id)arg2;
- (id)initWithTrack:(id)arg1 station:(id)arg2;
- (id)init;

@end

@interface RadioLoadStoreBagRequest : RadioRequest
{
    _Bool _ignoresRadioDiskCache;
}

+ (void)_writeStoreBagToDiskCache:(id)arg1;
+ (id)_pathForCachedStoreBags;
+ (id)_cachedStoreBagForActiveAccount;
+ (id)_cachedBagFilenameForActiveAccount;
+ (id)_accessQueue;
+ (void)_urlBagDidLoadNotification:(id)arg1;
@property(nonatomic) _Bool ignoresRadioDiskCache; // @synthesize ignoresRadioDiskCache=_ignoresRadioDiskCache;
- (void)_handleFinishedLoadingBag:(id)arg1 withError:(id)arg2 didLoadFromNonDiskCache:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)loadStoreBagWithOptions:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

@interface RadioManagedSkipHistory : NSManagedObject
{
}

@property(nonatomic) long long stationID;
@property(copy, nonatomic) NSString *stationHash;
@property(copy, nonatomic) NSArray *skipTimestamps;
@property(copy, nonatomic) NSString *skipIdentifier;

@end

@interface RadioManagedStation : NSManagedObject
{
}

+ (id)defaultPropertiesToFetch;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(nonatomic) _Bool virtualPlayEnabled;
@property(copy, nonatomic) NSArray *trackPlaybackDescriptorQueue;
@property(nonatomic) int subscriberCount;
- (id)streamKeyURL;
- (id)streamCertificateURL;
@property(retain, nonatomic) NSURL *streamURL;
@property(nonatomic) long long stationID;
@property(copy, nonatomic) NSString *stationHash;
@property(copy, nonatomic) NSString *stationDescription;
@property(nonatomic) int sortOrder;
@property(nonatomic) long long songMixType;
@property(copy, nonatomic) NSArray *skipTimestamps;
@property(nonatomic) double skipInterval;
@property(copy, nonatomic) NSString *skipIdentifier;
@property(nonatomic) int skipFrequency;
@property(nonatomic) _Bool skipEnabled;
@property(copy, nonatomic) NSString *shareToken;
@property(nonatomic, getter=isSubscribed) _Bool subscribed;
- (void)setStreamKeyURL:(id)arg1;
- (void)setStreamCertificateURL:(id)arg1;
@property(nonatomic, getter=isSponsored) _Bool sponsored;
@property(nonatomic, getter=isSharingEnabled) _Bool sharingEnabled;
@property(nonatomic, getter=isShared) _Bool shared;
@property(retain, nonatomic) NSArray *seedTracks;
@property(nonatomic, getter=isPreviewOnly) _Bool previewOnly;
@property(nonatomic, getter=isPremiumPlacement) _Bool premiumPlacement;
@property(nonatomic) long long persistentID;
@property(copy, nonatomic) NSString *name;
@property(nonatomic) _Bool likesEnabled;
@property(nonatomic) _Bool isExplicit;
@property(nonatomic) unsigned long long impressionThreshold;
@property(nonatomic, getter=isGatewayVideoAdEnabled) _Bool gatewayVideoAdEnabled;
@property(nonatomic, getter=isFeatured) _Bool featured;
@property(retain, nonatomic) NSArray *editableFields;
@property(nonatomic) _Bool editEnabled;
@property(copy, nonatomic) NSDictionary *debugDictionary;
@property(copy, nonatomic) NSString *coreSeedName;
@property(copy, nonatomic) NSData *artworkURLData;
@property(copy, nonatomic) NSURL *artworkURL;
@property(retain, nonatomic) NSData *adData;
@property(nonatomic) long long adamID;
@property(readonly, nonatomic, getter=isPreview) _Bool preview;
- (id)feedbackDictionaryRepresentation;
- (id)additionalReferencedTrackDescriptors;

@end

@interface RadioMescalURLConnectionConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface RadioMescalURLProtocolConsumer : SSVURLProtocolConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface RadioModel : NSObject <NSFetchedResultsControllerDelegate>
{
    NSObject<OS_dispatch_queue> *_accessSerialQueue;
    NSOperationQueue *_backgroundCleanupQueue;
    BKSProcessAssertion *_backgroundProcessAssertion;
    long long _backgroundTaskCount;
    NSObject<OS_dispatch_source> *_backgroundTaskInvalidateTimerSource;
    NSManagedObjectContext *_context;
    _Bool _isBackgroundModel;
    NSManagedObjectModel *_model;
    int _modelChangedToken;
    _Bool _modelChangedTokenIsValid;
    int _modelDeletedToken;
    _Bool _modelDeletedTokenIsValid;
    NSFetchedResultsController *_stationFetchedResultsController;
    NSFetchRequest *_stationFetchRequest;
    NSMapTable *_stationToSkipControllerMapTable;
    NSPersistentStoreCoordinator *_storeCoordinator;
    long long _transactionCount;
}

+ (id)_radioDirectoryPath;
+ (id)_radioDatabasePath;
+ (void)_postAccountDidDeauthenticateNotification;
+ (void)deleteAllData;
+ (id)sharedModel;
+ (id)backgroundModel;
+ (void)initialize;
- (void).cxx_destruct;
- (void)_setDatabasePropertyValue:(id)arg1 forKey:(id)arg2;
- (id)_setByReplacingManagedObjectsInSet:(id)arg1;
- (void)_resetModel;
- (void)_prepareModel;
- (void)_postContextDidChangeNotification:(id)arg1;
- (void)_performTransactionAndSave:(_Bool)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_newManagedSkipHistoryWithStationID:(long long)arg1;
- (id)_newManagedSkipHistoryWithStationHash:(id)arg1;
- (id)_newManagedSkipHistoryWithSkipIdentifier:(id)arg1;
- (id)_managedSkipHistoryWithStationID:(long long)arg1;
- (id)_managedSkipHistoryWithStationHash:(id)arg1;
- (id)_managedSkipHistoryWithSkipIdentifier:(id)arg1;
- (void)_insertRevisionWithStationID:(long long)arg1 revisionType:(long long)arg2;
- (void)_endBackgroundTaskAssertion;
- (id)_databasePropertyValueForKey:(id)arg1;
- (void)_createRadioDirectoryAndDatabaseIfNecessary;
- (unsigned long long)_numberOfSkipsUsedWithSkipTimestamps:(id)arg1 currentTimestamp:(double)arg2 skipInterval:(double)arg3 returningEarliestSkipTimestamp:(double *)arg4;
- (void)_defaultRadioModelInitialization;
- (void)_beginBackgroundTaskAssertion;
- (id)_arrayByReplacingManagedObjectsInArray:(id)arg1;
- (void)_addTimestamp:(double)arg1 toManagedSkipHistory:(id)arg2 withSkipIntervalForCulling:(double)arg3;
- (void)_unregisterStationSkipController:(id)arg1;
- (void)_registerStationSkipController:(id)arg1;
- (void)setDatabaseVersion:(long long)arg1;
- (long long)databaseVersion;
- (void)copySkipHistoryFromStationHash:(id)arg1 toStationID:(long long)arg2;
- (id)context;
@property(readonly, nonatomic) NSArray *userStations;
- (id)stationWithPersistentID:(long long)arg1;
- (id)stationWithID:(long long)arg1;
- (id)stationWithHash:(id)arg1;
@property(copy, nonatomic) NSArray *stationSortOrdering;
@property(readonly, nonatomic) NSArray *stations;
- (id)skipControllerForStation:(id)arg1;
- (void)setTrackPlaybackDescriptorQueue:(id)arg1 forStation:(id)arg2;
- (void)setReportProblemIssueTypes:(id)arg1;
@property(nonatomic) unsigned long long globalVersion;
@property(copy, nonatomic) NSString *globalHash;
@property(nonatomic) unsigned long long authenticatedAccountIdentifier;
@property(readonly, copy, nonatomic) NSArray *reportProblemIssueTypes;
- (void)removeTrackPlaybackDescriptorQueuesForAllStations;
- (void)removeTrackPlaybackDescriptor:(id)arg1 fromStation:(id)arg2;
@property(readonly, nonatomic) NSArray *previewStations;
- (void)performWriteTransactionWithBlock:(CDUnknownBlockType)arg1;
- (void)performTransactionWithBlock:(CDUnknownBlockType)arg1;
- (unsigned long long)numberOfTracksSkippedForStation:(id)arg1 returningEarliestSkipDate:(id *)arg2;
- (unsigned long long)numberOfTracksSkippedForStation:(id)arg1;
- (void)noteTrackWasSkippedForStation:(id)arg1 onDate:(id)arg2;
- (void)noteTrackWasSkippedForStation:(id)arg1;
- (id)newStationWithDictionary:(id)arg1;
- (id)newPreviewStationWithDictionary:(id)arg1;
- (id)newFeaturedStationWithDictionary:(id)arg1;
@property(readonly, nonatomic) NSArray *featuredStations;
- (void)enumerateRevisionsSinceRevisionID:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)deleteStation:(id)arg1;
- (void)deleteStationWithID:(long long)arg1;
- (void)deletePreviewStation:(id)arg1;
- (void)deleteAllData;
- (id)convertObjectsInSet:(id)arg1;
- (id)convertObjects:(id)arg1;
- (id)convertObject:(id)arg1;
- (_Bool)canSkipTracksForStation:(id)arg1;
@property(readonly, nonatomic) NSArray *allStations;
- (void)_contextDidSaveNotification:(id)arg1;
- (void)controllerDidChangeContent:(id)arg1;
- (void)controller:(id)arg1 didChangeObject:(id)arg2 atIndexPath:(id)arg3 forChangeType:(unsigned long long)arg4 newIndexPath:(id)arg5;
- (void)dealloc;
- (id)_initBackgroundModelWithPersistentStoreCoordinator:(id)arg1;
- (id)_init;
- (id)init;

@end

@interface RadioMutableHistoryCategory : RadioHistoryCategory
{
}

@property(nonatomic) long long type;
@property(nonatomic) long long stationID;
@property(copy, nonatomic) NSString *stationHash;
@property(copy, nonatomic) NSString *name;
@property(copy, nonatomic) NSArray *items;
@property(copy, nonatomic) NSString *categoryDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioMutableHistoryItem : RadioHistoryItem
{
}

@property(nonatomic) long long type;
@property(retain, nonatomic) RadioTrack *track;
@property(copy, nonatomic) NSString *externalIdentifier;
@property(retain, nonatomic) NSDate *datePlayed;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioMutableLikeBanItem : RadioLikeBanItem
{
    long long _itemID;
}

@property(nonatomic) long long itemID; // @synthesize itemID=_itemID;
@property(nonatomic) long long type;
@property(nonatomic) long long storeID;
@property(copy, nonatomic) RadioSeedMetadata *seedMetadata;
@property(nonatomic) _Bool isSeed;
@property(retain, nonatomic) RadioArtworkCollection *artworkCollection;
@property(nonatomic) long long albumID;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioPlayEvent : NSObject <NSCopying, NSMutableCopying>
{
    NSDate *_datePlayed;
    long long _endReason;
    double _endTimeInTrack;
    NSString *_externalIdentifier;
    double _startTimeInTrack;
    long long _storeID;
    NSData *_timedMetadata;
    NSDictionary *_trackInfo;
    long long _type;
}

@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, copy, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(readonly, copy, nonatomic) NSData *timedMetadata; // @synthesize timedMetadata=_timedMetadata;
@property(readonly, nonatomic) long long storeID; // @synthesize storeID=_storeID;
@property(readonly, nonatomic) double startTimeInTrack; // @synthesize startTimeInTrack=_startTimeInTrack;
@property(readonly, copy, nonatomic) NSString *externalIdentifier; // @synthesize externalIdentifier=_externalIdentifier;
@property(readonly, nonatomic) double endTimeInTrack; // @synthesize endTimeInTrack=_endTimeInTrack;
@property(readonly, nonatomic) long long endReason; // @synthesize endReason=_endReason;
@property(readonly, nonatomic) NSDate *datePlayed; // @synthesize datePlayed=_datePlayed;
- (void).cxx_destruct;
- (id)playDictionary;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithType:(long long)arg1;

@end

@interface RadioMutablePlayEvent : RadioPlayEvent
{
}

@property(nonatomic) long long type;
@property(copy, nonatomic) NSDictionary *trackInfo;
@property(copy, nonatomic) NSData *timedMetadata;
@property(nonatomic) long long storeID;
@property(nonatomic) double startTimeInTrack;
@property(copy, nonatomic) NSString *externalIdentifier;
@property(nonatomic) double endTimeInTrack;
@property(nonatomic) long long endReason;
@property(retain, nonatomic) NSDate *datePlayed;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioPlayEventCollection : NSObject <NSCopying, NSMutableCopying>
{
    NSString *_deviceName;
    NSMapTable *_stationInformationToPlayEvents;
}

@property(readonly, copy, nonatomic) NSString *deviceName; // @synthesize deviceName=_deviceName;
- (void).cxx_destruct;
- (id)playInfoDictionary;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithDeviceName:(id)arg1;

@end

@interface RadioMutablePlayEventCollection : RadioPlayEventCollection
{
}

- (void)addPlayEvents:(id)arg1 forStationHash:(id)arg2 stationID:(long long)arg3;
- (void)addPlayEvents:(id)arg1 forStation:(id)arg2;
@property(copy, nonatomic) NSString *deviceName;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioPlaybackContext : NSObject <NSCopying, NSMutableCopying>
{
    long long _numberOfSkipsUsed;
    NSArray *_trackPlaybackDescriptorQueue;
}

@property(readonly, copy, nonatomic) NSArray *trackPlaybackDescriptorQueue; // @synthesize trackPlaybackDescriptorQueue=_trackPlaybackDescriptorQueue;
@property(readonly, nonatomic) long long numberOfSkipsUsed; // @synthesize numberOfSkipsUsed=_numberOfSkipsUsed;
- (void).cxx_destruct;
- (id)playbackContextDictionary;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioMutablePlaybackContext : RadioPlaybackContext
{
}

@property(copy, nonatomic) NSArray *trackPlaybackDescriptorQueue;
@property(nonatomic) long long numberOfSkipsUsed;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioPlaybackTimeoutInfo : NSObject <NSCopying, NSMutableCopying>
{
    NSMutableDictionary *_playbackTimeoutIdentifierToTimeoutNumber;
}

- (void).cxx_destruct;
- (id)_playbackTimeoutIdentifierForBase:(id)arg1 playbackType:(long long)arg2;
- (double)unlockedPlaybackTimeoutForPlaybackType:(long long)arg1;
- (double)pausedPlaybackTimeoutForPlaybackType:(long long)arg1;
- (double)lockedPlaybackTimeoutForPlaybackType:(long long)arg1;
- (double)dockedPlaybackTimeoutForPlaybackType:(long long)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)init;

@end

@interface RadioMutablePlaybackTimeoutInfo : RadioPlaybackTimeoutInfo
{
}

- (void)setUnlockedPlaybackTimeout:(double)arg1 forPlaybackType:(long long)arg2;
- (void)setPausedPlaybackTimeout:(double)arg1 forPlaybackType:(long long)arg2;
- (void)setLockedPlaybackTimeout:(double)arg1 forPlaybackType:(long long)arg2;
- (void)setDockedPlaybackTimeout:(double)arg1 forPlaybackType:(long long)arg2;
- (void)removeAllPlaybackTimeouts;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioSearchResultCategory : NSObject <NSCopying, NSMutableCopying>
{
    long long _categoryType;
    _Bool _hasMoreResults;
    NSString *_name;
    NSDictionary *_responseDictionary;
    NSArray *_stationResults;
}

@property(readonly, copy, nonatomic) NSArray *stationResults; // @synthesize stationResults=_stationResults;
@property(readonly, copy, nonatomic) NSDictionary *responseDictionary; // @synthesize responseDictionary=_responseDictionary;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) _Bool hasMoreResults; // @synthesize hasMoreResults=_hasMoreResults;
@property(readonly, nonatomic) long long categoryType; // @synthesize categoryType=_categoryType;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)_initWithResponseDictionary:(id)arg1;

@end

@interface RadioMutableSearchResultCategory : RadioSearchResultCategory
{
}

@property(copy, nonatomic) NSArray *stationResults;
@property(copy, nonatomic) NSDictionary *responseDictionary;
@property(copy, nonatomic) NSString *name;
@property(nonatomic) _Bool hasMoreResults;
@property(nonatomic) long long categoryType;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioSeedMetadata : NSObject <NSCopying, NSMutableCopying>
{
    NSString *_seedDescription;
    NSString *_subtitle;
    NSString *_title;
}

@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly, copy, nonatomic) NSString *seedDescription; // @synthesize seedDescription=_seedDescription;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithSeedMetadataDictionary:(id)arg1;

@end

@interface RadioMutableSeedMetadata : RadioSeedMetadata
{
}

@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *subtitle;
@property(copy, nonatomic) NSString *seedDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioStationTreeNode : NSObject <NSCopying, NSMutableCopying>
{
    RadioArtworkCollection *_artworkCollection;
    long long _childNodeLoadingStyle;
    NSArray *_childNodes;
    long long _displayStyle;
    _Bool _hasAdditionalChildNodes;
    NSString *_name;
    long long _nodeID;
    NSDictionary *_stationDictionary;
    NSDictionary *_stationTreeNodeDictionary;
}

@property(readonly, copy, nonatomic) NSDictionary *stationTreeNodeDictionary; // @synthesize stationTreeNodeDictionary=_stationTreeNodeDictionary;
@property(readonly, copy, nonatomic) NSDictionary *stationDictionary; // @synthesize stationDictionary=_stationDictionary;
@property(readonly, nonatomic) long long nodeID; // @synthesize nodeID=_nodeID;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) _Bool hasAdditionalChildNodes; // @synthesize hasAdditionalChildNodes=_hasAdditionalChildNodes;
@property(readonly, nonatomic) long long displayStyle; // @synthesize displayStyle=_displayStyle;
@property(readonly, copy, nonatomic) NSArray *childNodes; // @synthesize childNodes=_childNodes;
@property(readonly, nonatomic) long long childNodeLoadingStyle; // @synthesize childNodeLoadingStyle=_childNodeLoadingStyle;
@property(readonly, copy, nonatomic) RadioArtworkCollection *artworkCollection; // @synthesize artworkCollection=_artworkCollection;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithStationTreeNodeDictionary:(id)arg1;

@end

@interface RadioMutableStationTreeNode : RadioStationTreeNode
{
}

@property(copy, nonatomic) NSDictionary *stationDictionary;
@property(nonatomic) long long nodeID;
@property(copy, nonatomic) NSString *name;
@property(nonatomic) _Bool hasAdditionalChildNodes;
@property(nonatomic) long long displayStyle;
@property(copy, nonatomic) NSArray *childNodes;
@property(nonatomic) long long childNodeLoadingStyle;
@property(copy, nonatomic) RadioArtworkCollection *artworkCollection;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioTrackHistorySectionInfo : NSObject <NSCopying, NSFetchedResultsSectionInfo, NSMutableCopying>
{
    NSString *_indexTitle;
    NSString *_name;
    unsigned long long _numberOfObjects;
    NSArray *_objects;
}

@property(readonly, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(readonly, nonatomic) unsigned long long numberOfObjects; // @synthesize numberOfObjects=_numberOfObjects;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *indexTitle; // @synthesize indexTitle=_indexTitle;
- (void).cxx_destruct;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioMutableTrackHistorySectionInfo : RadioTrackHistorySectionInfo
{
}

@property(retain, nonatomic) NSArray *objects;
@property(nonatomic) unsigned long long numberOfObjects;
@property(retain, nonatomic) NSString *name;
@property(retain, nonatomic) NSString *indexTitle;

@end

@interface RadioTrackPlaybackDescriptor : NSObject <NSCopying, NSMutableCopying, NSSecureCoding>
{
    _Bool _current;
    NSDate *_expirationDate;
    double _pauseTime;
    NSDate *_skipDate;
    long long _storeID;
    NSDictionary *_trackInfo;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSDictionary *trackInfo; // @synthesize trackInfo=_trackInfo;
@property(readonly, nonatomic) long long storeID; // @synthesize storeID=_storeID;
@property(readonly, nonatomic) NSDate *skipDate; // @synthesize skipDate=_skipDate;
@property(readonly, nonatomic) double pauseTime; // @synthesize pauseTime=_pauseTime;
@property(readonly, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(readonly, nonatomic, getter=isCurrent) _Bool current; // @synthesize current=_current;
- (void).cxx_destruct;
- (id)queueTrackDictionary;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithTrack:(id)arg1;

@end

@interface RadioMutableTrackPlaybackDescriptor : RadioTrackPlaybackDescriptor
{
}

@property(copy, nonatomic) NSDictionary *trackInfo;
@property(nonatomic) long long storeID;
@property(retain, nonatomic) NSDate *skipDate;
@property(nonatomic) double pauseTime;
@property(retain, nonatomic) NSDate *expirationDate;
@property(nonatomic, getter=isCurrent) _Bool current;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioNetworkObserver : NSObject
{
    long long _networkUsageCount;
    NSObject<OS_dispatch_queue> *_networkUsageQueue;
}

+ (id)sharedNetworkObserver;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isUsingNetwork;
@property(readonly, nonatomic) _Bool isCellularNetworkingAllowed;
- (void)endUsingNetwork;
- (void)beginUsingNetwork;
- (void)_cellularNetworkAllowedDidChangeNotification:(id)arg1;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface RadioOptInRequest : RadioRequest
{
    unsigned long long _accountIdentifier;
    SSURLConnectionRequest *_request;
}

- (void).cxx_destruct;
- (void)startWithOptInCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)init;

@end

@interface RadioPlayEventsRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    RadioPlayEventCollection *_playEventCollection;
}

@property(readonly, copy, nonatomic) RadioPlayEventCollection *playEventCollection; // @synthesize playEventCollection=_playEventCollection;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setDeviceName:(id)arg1;
- (id)deviceName;
- (id)initWithStationHash:(id)arg1 stationID:(long long)arg2 playEvents:(id)arg3;
- (id)initWithStation:(id)arg1 playEvents:(id)arg2;
- (id)initWithPlayEventCollection:(id)arg1;
- (id)init;

@end

@interface RadioPlaybackTimeoutInfoController : NSObject
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    long long _activeAccountIdentifier;
    RadioPlaybackTimeoutInfo *_currentTimeoutInfo;
    RadioLoadStoreBagRequest *_loadStoreBagRequest;
    RadioStoreBag *_storeBag;
    NSMutableArray *_currentTimeoutInfoLoadCompletionHandlers;
    NSDictionary *_syncOverrideTimeoutDictionary;
}

+ (void)_clearAccountRelatedTimeoutInfo;
- (void).cxx_destruct;
- (void)_setSyncOverrideTimeoutDictionary:(id)arg1;
- (double)_playbackTimeoutForRadioConfigurationKey:(id)arg1 fallbackRadioConfigurationKey:(id)arg2 syncOverrideTimeoutKey:(id)arg3 fallbackSyncOverrideTimeoutKey:(id)arg4 defaultValue:(double)arg5;
- (void)_invalidateCurrentTimeoutInfoAllowingChangeNotification:(_Bool)arg1;
- (id)_generateCurrentTimeoutInfoReturningReady:(_Bool *)arg1;
- (void)getCurrentTimeoutInfoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_storeBagDidLoadNotification:(id)arg1;
- (void)_radioRequestDidFinishNotification:(id)arg1;
- (void)_accountStoreDidChangeNotification:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface RadioPushNotificationController : NSObject <APSConnectionDelegate>
{
    APSConnection *_connection;
    id <RadioPushNotificationControllerDelegate> _delegate;
    NSString *_environment;
    _Bool _notificationsEnabled;
    _Bool _pushEnabled;
}

@property(nonatomic) _Bool notificationsEnabled; // @synthesize notificationsEnabled=_notificationsEnabled;
@property(nonatomic) __weak id <RadioPushNotificationControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_portNameForEnvironmentName:(id)arg1;
- (void)_loadURLBagWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)connection:(id)arg1 didReceiveMessageForTopic:(id)arg2 userInfo:(id)arg3;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RadioRemoveAllFromWishListRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    NSArray *_trackStoreIDs;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithTrackStoreIDs:(id)arg1;
- (id)initWithTracks:(id)arg1;
- (id)init;

@end

@interface RadioReportIssueRequest : RadioRequest
{
    NSData *_data;
    NSString *_description;
    int _issueType;
    SSURLConnectionRequest *_request;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithIssueType:(int)arg1 description:(id)arg2 data:(id)arg3;
- (id)initWithIssueType:(int)arg1 description:(id)arg2;

@end

@interface RadioRequestContext : NSObject <NSCopying>
{
    _Bool _usesLocalNetworking;
}

@property(nonatomic) _Bool usesLocalNetworking; // @synthesize usesLocalNetworking=_usesLocalNetworking;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioRevision : NSManagedObject
{
}

@property(nonatomic) long long stationID;
@property(nonatomic) long long revisionType;
@property(nonatomic) long long revisionID;

@end

@interface RadioSearchRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    _Bool _excludeFeaturedStations;
    _Bool _shouldProcessCategories;
    NSString *_searchTerm;
    long long _searchCategory;
    unsigned long long _numberOfSearchResults;
    unsigned long long _searchResultsOffset;
    SSMetricsConfiguration *_metricsConfiguration;
    SSMetricsPageEvent *_metricsPageEvent;
}

@property(readonly, copy, nonatomic) SSMetricsPageEvent *metricsPageEvent; // @synthesize metricsPageEvent=_metricsPageEvent;
@property(readonly, retain, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
@property(nonatomic) _Bool shouldProcessCategories; // @synthesize shouldProcessCategories=_shouldProcessCategories;
@property(nonatomic) _Bool excludeFeaturedStations; // @synthesize excludeFeaturedStations=_excludeFeaturedStations;
@property(nonatomic) unsigned long long searchResultsOffset; // @synthesize searchResultsOffset=_searchResultsOffset;
@property(nonatomic) unsigned long long numberOfSearchResults; // @synthesize numberOfSearchResults=_numberOfSearchResults;
@property(nonatomic) long long searchCategory; // @synthesize searchCategory=_searchCategory;
@property(readonly, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
- (void).cxx_destruct;
- (void)startWithSearchCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)description;
- (id)initWithSearchTerm:(id)arg1;
- (id)init;

@end

@interface RadioSearchResultAccessedRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    NSArray *_searchResults;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithAccessedSearchResults:(id)arg1;
- (id)init;

@end

@interface RadioSearchStationResult : NSObject <NSCopying>
{
    NSDictionary *_highlightRanges;
    NSDictionary *_stationDictionary;
}

@property(readonly, copy, nonatomic) NSDictionary *stationDictionary; // @synthesize stationDictionary=_stationDictionary;
@property(readonly, copy, nonatomic) NSDictionary *highlightRanges; // @synthesize highlightRanges=_highlightRanges;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_initWithResponseDictionary:(id)arg1;

@end

@interface RadioShareInfoRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    long long _shareType;
    long long _stationID;
    NSString *_stationHash;
    NSArray *_acceptedMIMETypes;
}

@property(copy, nonatomic) NSArray *acceptedMIMETypes; // @synthesize acceptedMIMETypes=_acceptedMIMETypes;
- (void).cxx_destruct;
- (void)startWithShareInformationCompletionHandler:(CDUnknownBlockType)arg1;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithStation:(id)arg1 shareType:(long long)arg2;

@end

@interface RadioShareInformation : NSObject <NSCopying>
{
    RadioArtworkCollection *_artworkCollection;
    NSString *_messageMIMEType;
    NSString *_message;
    NSString *_subject;
    NSURL *_URL;
}

@property(readonly, retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(readonly, copy, nonatomic) NSString *subject; // @synthesize subject=_subject;
@property(readonly, copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, copy, nonatomic) NSString *messageMIMEType; // @synthesize messageMIMEType=_messageMIMEType;
@property(readonly, copy, nonatomic) RadioArtworkCollection *artworkCollection; // @synthesize artworkCollection=_artworkCollection;
- (void).cxx_destruct;
- (id)_initWithShareInfoResponse:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface RadioShareStationRequest : RadioSyncRequest
{
    NSDictionary *_stationDictionary;
}

- (void).cxx_destruct;
- (id)changeList;
- (id)initWithStation:(id)arg1;
- (id)init;

@end

@interface RadioSkipHistory : NSObject <RadioManagedObjectWrapperProtocol>
{
    _Bool _databaseBacked;
    NSManagedObject *_managedObject;
    RadioModel *_model;
    NSString *_skipIdentifier;
    NSArray *_skipTimestamps;
    NSString *_stationHash;
    long long _stationID;
}

@property(readonly, nonatomic) RadioModel *model; // @synthesize model=_model;
@property(readonly, nonatomic) NSManagedObject *managedObject; // @synthesize managedObject=_managedObject;
@property(readonly, nonatomic, getter=isDatabaseBacked) _Bool databaseBacked; // @synthesize databaseBacked=_databaseBacked;
- (void).cxx_destruct;
@property(nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(copy, nonatomic) NSArray *skipTimestamps; // @synthesize skipTimestamps=_skipTimestamps;
@property(copy, nonatomic) NSString *skipIdentifier; // @synthesize skipIdentifier=_skipIdentifier;
- (void)_radioModelWasDeletedNotification:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)initWithModel:(id)arg1 managedObject:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface RadioStation : NSObject <RadioManagedObjectWrapperProtocol>
{
    _Bool _databaseBacked;
    _Bool _editEnabled;
    _Bool _isExplicit;
    _Bool _featured;
    _Bool _gatewayVideoAdEnabled;
    _Bool _premiumPlacement;
    _Bool _shared;
    _Bool _sharingEnabled;
    _Bool _sponsored;
    _Bool _subscribed;
    _Bool _likesEnabled;
    _Bool _previewOnly;
    _Bool _skipEnabled;
    _Bool _virtualPlayEnabled;
    int _skipFrequency;
    int _sortOrder;
    int _subscriberCount;
    NSManagedObject *_managedObject;
    RadioModel *_model;
    NSArray *_trackPlaybackDescriptorQueue;
    long long _adamID;
    NSData *_adData;
    NSURL *_artworkURL;
    NSData *_artworkURLData;
    NSString *_coreSeedName;
    NSDictionary *_debugDictionary;
    NSArray *_editableFields;
    unsigned long long _impressionThreshold;
    NSString *_name;
    long long _persistentID;
    id _seedTracks;
    NSString *_shareToken;
    NSString *_skipIdentifier;
    double _skipInterval;
    NSArray *_skipTimestamps;
    long long _songMixType;
    NSString *_stationDescription;
    NSString *_stationHash;
    long long _stationID;
    NSURL *_streamURL;
    NSURL *_streamCertificateURL;
    NSURL *_streamKeyURL;
}

@property(readonly, nonatomic) RadioModel *model; // @synthesize model=_model;
@property(readonly, nonatomic) NSManagedObject *managedObject; // @synthesize managedObject=_managedObject;
@property(readonly, nonatomic, getter=isDatabaseBacked) _Bool databaseBacked; // @synthesize databaseBacked=_databaseBacked;
- (void).cxx_destruct;
@property(copy, nonatomic) NSArray *trackPlaybackDescriptorQueue; // @synthesize trackPlaybackDescriptorQueue=_trackPlaybackDescriptorQueue;
@property(readonly, nonatomic, getter=isPreview) _Bool preview;
@property(readonly, copy, nonatomic) NSDictionary *feedbackDictionaryRepresentation;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)artworkURLForSize:(struct CGSize)arg1 expectedSize:(struct CGSize *)arg2;
@property(readonly, nonatomic) RadioArtworkCollection *artworkCollection;
@property(nonatomic) _Bool virtualPlayEnabled; // @synthesize virtualPlayEnabled=_virtualPlayEnabled;
@property(nonatomic) int subscriberCount; // @synthesize subscriberCount=_subscriberCount;
@property(retain, nonatomic) NSURL *streamKeyURL; // @synthesize streamKeyURL=_streamKeyURL;
@property(retain, nonatomic) NSURL *streamCertificateURL; // @synthesize streamCertificateURL=_streamCertificateURL;
@property(retain, nonatomic) NSURL *streamURL; // @synthesize streamURL=_streamURL;
@property(nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
@property(copy, nonatomic) NSString *stationDescription; // @synthesize stationDescription=_stationDescription;
@property(nonatomic) int sortOrder; // @synthesize sortOrder=_sortOrder;
@property(nonatomic) long long songMixType; // @synthesize songMixType=_songMixType;
@property(copy, nonatomic) NSArray *skipTimestamps; // @synthesize skipTimestamps=_skipTimestamps;
@property(nonatomic) double skipInterval; // @synthesize skipInterval=_skipInterval;
@property(copy, nonatomic) NSString *skipIdentifier; // @synthesize skipIdentifier=_skipIdentifier;
@property(nonatomic) int skipFrequency; // @synthesize skipFrequency=_skipFrequency;
@property(nonatomic) _Bool skipEnabled; // @synthesize skipEnabled=_skipEnabled;
@property(copy, nonatomic) NSString *shareToken; // @synthesize shareToken=_shareToken;
@property(retain, nonatomic) id seedTracks; // @synthesize seedTracks=_seedTracks;
@property(nonatomic, getter=isPreviewOnly) _Bool previewOnly; // @synthesize previewOnly=_previewOnly;
@property(nonatomic) long long persistentID; // @synthesize persistentID=_persistentID;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(nonatomic) _Bool likesEnabled; // @synthesize likesEnabled=_likesEnabled;
@property(nonatomic, getter=isSubscribed) _Bool subscribed; // @synthesize subscribed=_subscribed;
@property(nonatomic, getter=isSponsored) _Bool sponsored; // @synthesize sponsored=_sponsored;
@property(nonatomic, getter=isSharingEnabled) _Bool sharingEnabled; // @synthesize sharingEnabled=_sharingEnabled;
@property(nonatomic, getter=isShared) _Bool shared; // @synthesize shared=_shared;
@property(nonatomic, getter=isPremiumPlacement) _Bool premiumPlacement; // @synthesize premiumPlacement=_premiumPlacement;
@property(nonatomic, getter=isGatewayVideoAdEnabled) _Bool gatewayVideoAdEnabled; // @synthesize gatewayVideoAdEnabled=_gatewayVideoAdEnabled;
@property(nonatomic, getter=isFeatured) _Bool featured; // @synthesize featured=_featured;
@property(nonatomic) _Bool isExplicit; // @synthesize isExplicit=_isExplicit;
@property(nonatomic) unsigned long long impressionThreshold; // @synthesize impressionThreshold=_impressionThreshold;
@property(nonatomic) _Bool editEnabled; // @synthesize editEnabled=_editEnabled;
@property(retain, nonatomic) NSArray *editableFields; // @synthesize editableFields=_editableFields;
@property(copy, nonatomic) NSDictionary *debugDictionary; // @synthesize debugDictionary=_debugDictionary;
@property(copy, nonatomic) NSString *coreSeedName; // @synthesize coreSeedName=_coreSeedName;
@property(copy, nonatomic) NSData *artworkURLData; // @synthesize artworkURLData=_artworkURLData;
@property(copy, nonatomic) NSURL *artworkURL; // @synthesize artworkURL=_artworkURL;
@property(retain, nonatomic) NSData *adData; // @synthesize adData=_adData;
@property(nonatomic) long long adamID; // @synthesize adamID=_adamID;
- (void)_radioModelWasDeletedNotification:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)dealloc;
- (id)initWithModel:(id)arg1 managedObject:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface RadioStationMatchRequest : RadioRequest
{
    NSArray *_libraryTrackDictionaries;
    SSURLConnectionRequest *_request;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;
- (id)initWithLibraryTrackDictionaries:(id)arg1;

@end

@interface RadioStationSkipController : NSObject
{
    NSObject<OS_dispatch_queue> *_accessSerialQueue;
    NSObject<OS_dispatch_source> *_availableSkipsInvalidationTimer;
    _Bool _hasValidSkipInvalidationDate;
    unsigned long long _monitoringCount;
    unsigned int _skipsEnabled:2;
    NSDate *_skipInvalidationDate;
    long long _numberOfAvailableSkips;
    RadioStation *_station;
}

@property(readonly, nonatomic) RadioStation *station; // @synthesize station=_station;
- (void).cxx_destruct;
- (void)_updateForInvalidatedModel;
- (void)_rebuildState;
- (void)_createAvailableSkipsInvalidationTimer;
- (void)_cancelAvailableSkipsInvalidationTimer;
- (void)_modelDidChangeNotification:(id)arg1;
- (_Bool)isMonitoring;
- (void)endMonitoring;
- (void)beginMonitoring;
@property(readonly, nonatomic) long long numberOfAvailableSkips; // @synthesize numberOfAvailableSkips=_numberOfAvailableSkips;
@property(readonly, nonatomic, getter=hasSkipsEnabled) _Bool skipsEnabled;
- (void)dealloc;
- (id)initWithStation:(id)arg1;

@end

@interface RadioStoreBag : NSObject
{
    NSDictionary *_mescalRequestWhitelist;
    NSDictionary *_mescalResponseWhitelist;
    NSString *_mescalSetupCertURLString;
    NSString *_mescalSetupURLString;
    SSVPlatformContext *_platformContext;
    NSNumber *_shouldSendKBSyncDataValue;
    NSString *_srdnldURLString;
    NSDictionary *_tiltDictionary;
}

@property(readonly, nonatomic) NSString *streamingDownloadURLString; // @synthesize streamingDownloadURLString=_srdnldURLString;
@property(readonly, nonatomic) NSDictionary *radioConfigurationDictionary; // @synthesize radioConfigurationDictionary=_tiltDictionary;
@property(readonly, nonatomic) NSString *mescalSetupURLString; // @synthesize mescalSetupURLString=_mescalSetupURLString;
@property(readonly, nonatomic) NSString *mescalCertificateURLString; // @synthesize mescalCertificateURLString=_mescalSetupCertURLString;
- (void).cxx_destruct;
- (id)_platformContext;
- (id)_cacheRepresentation;
- (id)_initWithCacheRepresentation:(id)arg1;
@property(readonly, nonatomic) _Bool shouldSendKBSyncData;
- (_Bool)shouldMescalVerifyResponseFromURL:(id)arg1;
- (_Bool)shouldMescalSignRequestWithURL:(id)arg1;
@property(readonly, nonatomic) NSString *platformLookupURLString;
@property(readonly, nonatomic, getter=isAdFreeRadioEnabled) _Bool adFreeRadioEnabled;
@property(readonly, nonatomic) NSURL *baseURL;
- (id)_initWithURLBagDictionary:(id)arg1;

@end

@interface RadioStreamTrack : RadioTrack
{
}

@property(readonly, nonatomic, getter=isSkipable) _Bool skipable;
@property(readonly, retain, nonatomic) NSURL *keyServerURL;
@property(readonly, retain, nonatomic) NSURL *contentURL;
@property(readonly, retain, nonatomic) NSURL *certificateURL;

@end

@interface RadioTermsCheckRequest : RadioRequest
{
    SSURLConnectionRequest *_request;
    unsigned long long _acceptedTermsVersion;
}

@property(nonatomic) unsigned long long acceptedTermsVersion; // @synthesize acceptedTermsVersion=_acceptedTermsVersion;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancel;

@end

@interface RadioTrackAdInfo : NSObject <NSSecureCoding>
{
    _Bool _gatewayAdSlot;
    NSString *_slotIdentifier;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSString *slotIdentifier; // @synthesize slotIdentifier=_slotIdentifier;
@property(readonly, nonatomic, getter=isGatewayAdSlot) _Bool gatewayAdSlot; // @synthesize gatewayAdSlot=_gatewayAdSlot;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)description;
- (id)initWithAdInfoDictionary:(id)arg1;

@end

@interface RadioTrackAsset : NSObject
{
    NSDictionary *_responseDictionary;
}

@property(readonly, copy, nonatomic) NSDictionary *responseDictionary; // @synthesize responseDictionary=_responseDictionary;
- (void).cxx_destruct;
@property(readonly, retain, nonatomic) NSURL *URL;
@property(readonly, copy, nonatomic) NSArray *sinfs;
@property(readonly, copy, nonatomic) NSString *flavor;
@property(readonly, copy, nonatomic) NSString *downloadKey;
- (id)initWithResponseDictionary:(id)arg1;

@end

@interface RadioURLConnectionRequest : SSURLConnectionRequest
{
}

- (void)startWithConnectionResponseBlock:(CDUnknownBlockType)arg1;

@end

@interface RadioUpdateSortOrderRequest : RadioSyncRequest
{
    NSArray *_stationSortOrdering;
}

- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)changeList;
- (id)initWithStationSortOrdering:(id)arg1;

@end

@interface RadioUpdateStationRequest : RadioSyncRequest
{
    RadioStation *_station;
    NSString *_name;
    NSString *_stationDescription;
    NSArray *_seeds;
    long long _songMixType;
}

@property(nonatomic) long long songMixType; // @synthesize songMixType=_songMixType;
@property(copy, nonatomic) NSArray *seeds; // @synthesize seeds=_seeds;
@property(copy, nonatomic) NSString *stationDescription; // @synthesize stationDescription=_stationDescription;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)_updatedStationDictionary;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)changeList;
- (id)initWithStation:(id)arg1;
- (id)init;

@end

@interface SSMutableURLRequestProperties (RadioAdditions)
- (void)radio_mescalSignWithCompletionHandler:(CDUnknownBlockType)arg1;
@end

@interface SSMutableURLRequestProperties (RadioRequestAdditions)
+ (id)newForRadioRequestURL:(id)arg1;
@end

@interface SSURLConnectionRequest (RadioMescalSessionAdditions)
+ (id)newRadioRequestWithRequestProperties:(id)arg1;
@end

@interface SSURLConnectionResponse (RadioAdditions)
- (void)radio_mescalVerifyDataWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSData *radio_decompressedBodyData;
@end

@interface _RadioPlayEventStationInformation : NSObject
{
    NSString *_stationHash;
    long long _stationID;
}

@property(nonatomic) long long stationID; // @synthesize stationID=_stationID;
@property(copy, nonatomic) NSString *stationHash; // @synthesize stationHash=_stationHash;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

