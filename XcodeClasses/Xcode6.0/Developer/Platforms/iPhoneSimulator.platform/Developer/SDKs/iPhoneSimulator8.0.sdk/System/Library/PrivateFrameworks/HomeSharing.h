//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    double width;
    double height;
};

struct hostent {
    char *_field1;
    char **_field2;
    int _field3;
    int _field4;
    char **_field5;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int *_field8;
} CDStruct_16f720f6;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
    float _field9;
    unsigned int *_field10;
} CDStruct_9a46e3d5;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
} CDStruct_cc4e5495;

typedef struct {
    unsigned int _field1;
    char *_field2;
    unsigned long long _field3;
    int _field4;
} CDStruct_557df7f8;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/HomeSharing.framework/HomeSharing
// UUID: C33AB907-3A16-3355-814C-94333D5AD830
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 544.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol HSCloudAvailability <NSObject>
- (_Bool)canShowCloudVideo;
- (_Bool)canShowCloudMusic;
- (_Bool)canShowCloudDownloadButtons;
- (_Bool)shouldProhibitActionsForCurrentNetworkConditions;
- (_Bool)isCellularDataRestricted;
- (_Bool)hasProperNetworkConditionsToPlayMedia;
@end

@protocol HSCloudServerProtocol
- (void)loadBooksForStoreIDs:(NSArray *)arg1 withCompletion:(void (^)(NSArray *, NSError *))arg2;
- (void)canShowCloudVideoWithCompletion:(void (^)(_Bool))arg1;
- (void)canShowCloudMusicWithCompletion:(void (^)(_Bool))arg1;
- (void)canShowCloudDownloadButtonsWithCompletion:(void (^)(_Bool))arg1;
- (void)shouldProhibitActionsForCurrentNetworkConditionsWithCompletion:(void (^)(_Bool))arg1;
- (void)isCellularDataRestrictedWithCompletion:(void (^)(_Bool))arg1;
- (void)hasProperNetworkConditionsToPlayMediaWithCompletion:(void (^)(_Bool))arg1;
- (void)disableJaliscoGeniusWithCompletion:(void (^)(NSError *))arg1;
- (void)loadJaliscoGeniusOperationStatusWithCompletion:(void (^)(long long, NSError *))arg1;
- (void)cancelUpdateJaliscoGeniusDataWithCompletion:(void (^)(NSError *))arg1;
- (void)updateJaliscoGeniusDataWithCompletion:(void (^)(NSError *))arg1;
- (void)enableJaliscoGeniusWithCompletion:(void (^)(NSError *))arg1;
- (void)setJaliscoGeniusCUID:(NSString *)arg1 withCompletion:(void (^)(NSError *))arg2;
- (void)loadJaliscoGeniusCUIDWithCompletion:(void (^)(NSString *, NSError *))arg1;
- (void)loadJaliscoGeniusLearnMoreURLWithCompletion:(void (^)(NSURL *, NSError *))arg1;
- (void)loadIsJaliscoGeniusSupportedWithCompletion:(void (^)(_Bool, NSError *))arg1;
- (void)fetchKeepLocalForCollectionWithPersistentID:(long long)arg1 groupingType:(long long)arg2 completionHandler:(void (^)(_Bool, long long, NSError *))arg3;
- (void)setKeepLocal:(_Bool)arg1 forCollectionWithPersistentID:(long long)arg2 groupingType:(long long)arg3 completionHandler:(void (^)(NSError *))arg4;
- (void)updateArtistHeroImagesWithCompletion:(void (^)(NSError *))arg1;
- (void)updateJaliscoAppsLibraryForFamilyStoreID:(NSNumber *)arg1 withReason:(long long)arg2 completion:(void (^)(NSError *))arg3;
- (void)unhideAllPurchasedAppsWithCompletion:(void (^)(NSError *))arg1;
- (void)setHidden:(_Bool)arg1 purchasedAppWithStoreID:(NSNumber *)arg2 completion:(void (^)(NSError *))arg3;
- (void)redownloadPurchaseAppWithStoreID:(NSNumber *)arg1 completion:(void (^)(NSError *, NSData *))arg2;
- (void)jaliscoAppsImageDataForStoreID:(NSNumber *)arg1 completion:(void (^)(NSError *, NSData *))arg2;
- (void)searchJaliscoAppsLibrary:(NSString *)arg1 location:(NSString *)arg2 searchColumns:(NSArray *)arg3 includeHidden:(_Bool)arg4 includeUnsupported:(_Bool)arg5 completion:(void (^)(NSError *, NSArray *))arg6;
- (void)uploadItemPropertiesWithCompletion:(void (^)(NSError *))arg1;
- (void)incrementItemProperty:(NSString *)arg1 forSagaID:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;
- (void)setItemProperties:(NSDictionary *)arg1 forSagaID:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;
- (void)setItemProperties:(NSDictionary *)arg1 forPurchaseHistoryID:(unsigned long long)arg2 completion:(void (^)(NSError *))arg3;
- (void)removePlaylistWithSagaID:(unsigned long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)updatePlaylistWithSagaID:(unsigned long long)arg1 itemSagaIDs:(NSArray *)arg2 completion:(void (^)(NSError *, unsigned int))arg3;
- (void)addPlaylistWithName:(NSString *)arg1 completion:(void (^)(NSError *, unsigned long long))arg2;
- (void)addGeniusPlaylistWithName:(NSString *)arg1 seedItemSagaIDs:(NSArray *)arg2 itemSagaIDs:(NSArray *)arg3 completion:(void (^)(NSError *, unsigned long long))arg4;
- (void)downloadGeniusDataWithCompletion:(void (^)(NSError *))arg1;
- (void)loadGeniusItemsForSagaID:(unsigned long long)arg1 completion:(void (^)(NSError *, NSArray *))arg2;
- (void)loadArtworkInfoForSagaIDs:(NSArray *)arg1 completion:(void (^)(NSError *, NSArray *))arg2;
- (void)loadArtworkInfoForPurchaseHistoryIDs:(NSArray *)arg1 completion:(void (^)(NSError *, NSArray *))arg2;
- (void)loadArtworkDataForSagaID:(unsigned long long)arg1 returnArtworkData:(_Bool)arg2 completion:(void (^)(NSError *, NSData *))arg3;
- (void)loadArtworkDataForPurchaseHistoryIDs:(NSArray *)arg1 returnArtworkData:(_Bool)arg2 completion:(void (^)(NSError *, NSDictionary *))arg3;
- (void)importItemArtworkForSagaID:(unsigned long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)importScreenshotForPurchaseHistoryID:(unsigned long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)importItemArtworkForPurchaseHistoryID:(unsigned long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)loadUpdateProgressWithCompletion:(void (^)(NSError *, float))arg1;
- (void)loadIsUpdateInProgressWithCompletion:(void (^)(NSError *, _Bool, _Bool))arg1;
- (void)isExpiredWithCompletion:(void (^)(NSError *, _Bool))arg1;
- (void)isAuthenticatedWithCompletion:(void (^)(NSError *, _Bool))arg1;
- (void)removeJaliscoLibraryWithCompletion:(void (^)(NSError *))arg1;
- (void)deauthenticateWithCompletion:(void (^)(NSError *))arg1;
- (void)authenticateAndStartInitialImport:(_Bool)arg1 completion:(void (^)(NSError *))arg2;
- (void)updateSagaLibraryWithReason:(long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)updateJaliscoAppsLibraryWithReason:(long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)updateJaliscoLibraryWithReason:(long long)arg1 completion:(void (^)(NSError *))arg2;
- (void)setConnectionConfiguration:(HSConnectionConfiguration *)arg1 daemonConfiguration:(unsigned long long)arg2 preferredVideoQuality:(unsigned long long)arg3 completion:(void (^)(NSError *))arg4;
@end

@protocol HSXPCCoding <NSObject>

@optional
- (NSObject<OS_xpc_object> *)copyXPCEncoding;
- (id)initWithXPCEncoding:(NSObject<OS_xpc_object> *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSNetServiceDelegate <NSObject>

@optional
- (void)netService:(NSNetService *)arg1 didAcceptConnectionWithInputStream:(NSInputStream *)arg2 outputStream:(NSOutputStream *)arg3;
- (void)netService:(NSNetService *)arg1 didUpdateTXTRecordData:(NSData *)arg2;
- (void)netServiceDidStop:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotResolve:(NSDictionary *)arg2;
- (void)netServiceDidResolveAddress:(NSNetService *)arg1;
- (void)netServiceWillResolve:(NSNetService *)arg1;
- (void)netService:(NSNetService *)arg1 didNotPublish:(NSDictionary *)arg2;
- (void)netServiceDidPublish:(NSNetService *)arg1;
- (void)netServiceWillPublish:(NSNetService *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol RadiosPreferencesDelegate
- (void)airplaneModeChanged;
@end

@interface HSAccountStore : NSObject
{
    int _defaultsDidChangeToken;
    SSURLConnectionRequest *_groupIDRequest;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)defaultStore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) SSURLConnectionRequest *groupIDRequest; // @synthesize groupIDRequest=_groupIDRequest;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *groupID; // @dynamic groupID;
- (void)clearGroupID;
- (void)clearCaches;
- (void)clearAllCredentials;
- (void)_onBackgroundQueue_determineGroupIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)determineGroupIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)canDetermineGroupID;
@property(copy, nonatomic) NSString *password; // @dynamic password;
@property(copy, nonatomic) NSString *appleID; // @dynamic appleID;
- (void)dealloc;
- (id)init;

@end

@interface HSRequest : NSObject
{
    NSString *_action;
    NSData *_bodyData;
    NSDictionary *_arguments;
    long long _method;
    NSMutableArray *_cachedBodyDataBlocks;
    _Bool _concurrent;
    _Bool _excludeSessionIDFromURL;
}

+ (id)request;
@property(nonatomic) _Bool excludeSessionIDFromURL; // @synthesize excludeSessionIDFromURL=_excludeSessionIDFromURL;
@property(readonly, nonatomic, getter=isConcurrent) _Bool concurrent; // @synthesize concurrent=_concurrent;
@property(nonatomic) long long method; // @synthesize method=_method;
@property(copy, nonatomic) NSData *bodyData; // @synthesize bodyData=_bodyData;
@property(readonly, nonatomic) NSString *action; // @synthesize action=_action;
- (void).cxx_destruct;
- (id)_methodStringForMethod:(long long)arg1;
- (_Bool)acceptsGzipEncoding;
- (unsigned int)cachedBodyDataBlocksLength;
- (void)appendCachedBodyDataBlocksIntoData:(id)arg1 clearCache:(_Bool)arg2;
- (void)cacheBodyDataBlock:(id)arg1;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)URLRequestForBaseURL:(id)arg1 sessionID:(unsigned int)arg2;
- (id)requestURLForBaseURL:(id)arg1 sessionID:(unsigned int)arg2;
- (void)setValue:(id)arg1 forArgument:(id)arg2;
@property(readonly, nonatomic) double timeoutInterval;
- (id)description;
- (id)initWithAction:(id)arg1;

@end

@interface HSActivityRequest : HSRequest
{
}

- (id)init;

@end

@interface HSArtworkRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 size:(struct CGSize)arg3;
- (_Bool)acceptsGzipEncoding;
- (_Bool)isConcurrent;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 size:(struct CGSize)arg3;

@end

@interface HSAuthorizedDSIDsUpdateRequest : HSRequest
{
}

- (id)canonicalResponseForResponse:(id)arg1;
- (id)init;

@end

@interface HSResponse : NSObject
{
    NSData *_responseData;
    unsigned long long _responseCode;
    NSDictionary *_responseHeaderFields;
    NSError *_error;
    NSString *_MIMEType;
}

+ (id)responseWithResponse:(id)arg1;
+ (id)responseWithCode:(unsigned long long)arg1 headerFields:(id)arg2 data:(id)arg3 MIMEType:(id)arg4 error:(id)arg5;
@property(readonly, nonatomic) NSString *MIMEType; // @synthesize MIMEType=_MIMEType;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) NSDictionary *responseHeaderFields; // @synthesize responseHeaderFields=_responseHeaderFields;
@property(readonly, nonatomic) unsigned long long responseCode; // @synthesize responseCode=_responseCode;
@property(readonly, nonatomic) NSData *responseData; // @synthesize responseData=_responseData;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCode:(unsigned long long)arg1 headerFields:(id)arg2 data:(id)arg3 MIMEType:(id)arg4 error:(id)arg5;

@end

@interface HSAuthorizedDSIDsUpdateResponse : HSResponse
{
    NSArray *authorizedDSIDs;
}

@property(copy, nonatomic) NSArray *authorizedDSIDs; // @synthesize authorizedDSIDs;
- (void).cxx_destruct;

@end

@interface HSAuthorizedDSIDsUpdatesRequest : HSRequest
{
}

- (id)canonicalResponseForResponse:(id)arg1;
- (id)init;

@end

@interface HSAuthorizedDSIDsUpdatesResponse : HSResponse
{
    NSArray *authorizedDSIDs;
}

@property(copy, nonatomic) NSArray *authorizedDSIDs; // @synthesize authorizedDSIDs;
- (void).cxx_destruct;

@end

@interface HSBook : NSObject <NSSecureCoding>
{
    _Bool _vppLicensed;
    unsigned long long _purchaseHistoryID;
    unsigned long long _storeID;
    NSString *_title;
    NSString *_author;
    NSString *_genre;
    NSDate *_datePurchased;
    NSURL *_artworkURL;
    NSString *_redownloadParameters;
    NSString *_vppOrganizationID;
    NSString *_vppOrganizationDisplayName;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *vppOrganizationDisplayName; // @synthesize vppOrganizationDisplayName=_vppOrganizationDisplayName;
@property(copy, nonatomic) NSString *vppOrganizationID; // @synthesize vppOrganizationID=_vppOrganizationID;
@property(nonatomic, getter=isVPPLicensed) _Bool vppLicensed; // @synthesize vppLicensed=_vppLicensed;
@property(copy, nonatomic) NSString *redownloadParameters; // @synthesize redownloadParameters=_redownloadParameters;
@property(copy, nonatomic) NSURL *artworkURL; // @synthesize artworkURL=_artworkURL;
@property(copy, nonatomic) NSDate *datePurchased; // @synthesize datePurchased=_datePurchased;
@property(copy, nonatomic) NSString *genre; // @synthesize genre=_genre;
@property(copy, nonatomic) NSString *author; // @synthesize author=_author;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(nonatomic) unsigned long long storeID; // @synthesize storeID=_storeID;
@property(nonatomic) unsigned long long purchaseHistoryID; // @synthesize purchaseHistoryID=_purchaseHistoryID;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface HSBrowseRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 browseGroupType:(long long)arg2;
- (id)_stringForBrowseGroupType:(long long)arg1;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 browseGroupType:(long long)arg2;

@end

@interface HSBrowseResponse : HSResponse
{
    NSArray *collections;
}

@property(copy, nonatomic) NSArray *collections; // @synthesize collections;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface HSBrowser : NSObject <NSNetServiceDelegate>
{
    CDUnknownBlockType _addLibraryHandler;
    NSArray *_availableLibraries;
    struct _DNSServiceRef_t *_dnsService;
    NSObject<OS_dispatch_queue> *_dnsServiceQueue;
    _Bool _isBrowsing;
    CDUnknownBlockType _removeLibraryHandler;
    long long _browserType;
    NSString *_homeSharingGroupID;
}

@property(copy, nonatomic) NSString *homeSharingGroupID; // @synthesize homeSharingGroupID=_homeSharingGroupID;
@property(nonatomic) long long browserType; // @synthesize browserType=_browserType;
- (void).cxx_destruct;
- (void)_startWithCurrentRetryCount:(unsigned long long)arg1 maximumRetryCount:(unsigned long long)arg2 addLibraryHandler:(CDUnknownBlockType)arg3 removeLibraryHandler:(CDUnknownBlockType)arg4;
- (void)_didRemoveService:(id)arg1 moreComing:(_Bool)arg2;
- (void)_didFindService:(id)arg1 moreComing:(_Bool)arg2;
@property(readonly, nonatomic) NSArray *availableLibraries;
- (void)stop;
- (void)startWithAddLibraryHandler:(CDUnknownBlockType)arg1 removeLibraryHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HSBulkAddPlaylistRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 playlistName:(id)arg3 seedItemIDs:(id)arg4 itemIDs:(id)arg5;
+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 playlistName:(id)arg3;
- (id)_bodyDataForSessionID:(unsigned int)arg1 playlistName:(id)arg2 seedItemIDs:(id)arg3 itemIDs:(id)arg4;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 playlistName:(id)arg3 seedItemIDs:(id)arg4 itemIDs:(id)arg5;

@end

@interface HSBulkAddPlaylistResponse : HSResponse
{
    unsigned int containerID;
}

@property(nonatomic) unsigned int containerID; // @synthesize containerID;

@end

@interface HSBulkCloudArtworkInfoRequest : HSRequest
{
    _Bool _useLongIDs;
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemIDs:(id)arg2 sessionID:(unsigned int)arg3 useLongIDs:(_Bool)arg4;
- (id)_bodyDataForItemIDs:(id)arg1 sessionID:(unsigned int)arg2;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 itemIDs:(id)arg2 sessionID:(unsigned int)arg3 useLongIDs:(_Bool)arg4;

@end

@interface HSBulkCloudArtworkInfoResponse : HSResponse
{
    NSArray *artworkInfoDictionaries;
}

@property(copy, nonatomic) NSArray *artworkInfoDictionaries; // @synthesize artworkInfoDictionaries;
- (void).cxx_destruct;

@end

@interface HSBulkCloudLyricsInfoRequest : HSRequest
{
    _Bool _useLongIDs;
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemIDs:(id)arg2 sessionID:(unsigned int)arg3 useLongIDs:(_Bool)arg4;
- (id)_bodyDataForItemIDs:(id)arg1 sessionID:(unsigned int)arg2;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 itemIDs:(id)arg2 sessionID:(unsigned int)arg3 useLongIDs:(_Bool)arg4;

@end

@interface HSBulkCloudLyricsInfoResponse : HSResponse
{
    NSArray *lyricsInfoDictionaries;
}

@property(copy, nonatomic) NSArray *lyricsInfoDictionaries; // @synthesize lyricsInfoDictionaries;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface HSBulkRemovePlaylistRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 containerID:(unsigned int)arg3;
- (id)_bodyDataForSessionID:(unsigned int)arg1 containerID:(unsigned int)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 containerID:(unsigned int)arg3;

@end

@interface HSBulkSetContainersRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 containerID:(unsigned int)arg3 itemIDs:(id)arg4;
- (id)_bodyDataForSessionID:(unsigned int)arg1 containerID:(unsigned int)arg2 itemIDs:(id)arg3;
- (id)initWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 containerID:(unsigned int)arg3 itemIDs:(id)arg4;

@end

@interface HSBulkSetItemPropertiesRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 itemIDs:(id)arg3 properties:(id)arg4 useLongIDs:(_Bool)arg5;
+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 longItemID:(unsigned long long)arg3 properties:(id)arg4;
+ (id)requestWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 itemID:(unsigned int)arg3 properties:(id)arg4;
- (id)_propertyCodeForPropertyName:(id)arg1 valueLength:(unsigned int *)arg2;
- (id)_bodyDataForSessionID:(unsigned int)arg1 itemIDs:(id)arg2 properties:(id)arg3 useLongIDs:(_Bool)arg4;
- (id)initWithDatabaseID:(unsigned int)arg1 sessionID:(unsigned int)arg2 itemIDs:(id)arg3 properties:(id)arg4 useLongIDs:(_Bool)arg5;

@end

@interface HSCheckInRentalAssetRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;

@end

@interface HSCheckOutRentalAssetRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;

@end

@interface HSCloudArtworkInfoRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 sessionID:(unsigned int)arg3;
+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 sessionID:(unsigned int)arg3;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;

@end

@interface HSCloudArtworkInfoResponse : HSResponse
{
    NSDictionary *artworkInfoDictionary;
}

@property(copy, nonatomic) NSDictionary *artworkInfoDictionary; // @synthesize artworkInfoDictionary;
- (void).cxx_destruct;

@end

@interface HSCloudAvailabilityController : NSObject <RadiosPreferencesDelegate, HSCloudAvailability>
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    _Bool _isAirplaneModeActive;
    _Bool _isAutoDownloadOnCellularAllowed;
    _Bool _isCellularDataActive;
    _Bool _isShowingAllMusic;
    _Bool _isShowingAllVideo;
    _Bool _isUpdateInProgress;
    _Bool _isWiFiEnabled;
    _Bool _isNetworkReachable;
    _Bool _canShowCloudMusic;
    _Bool _canShowCloudVideo;
    _Bool _canShowCloudDownloadButtons;
    int _preferencesChangedNotifyToken;
    _Bool _preferencesChangedNotifyTokenIsValid;
    long long _networkType;
    RadiosPreferences *_radiosPreferences;
    struct __SCNetworkReachability *reachabilityRef;
}

+ (id)sharedController;
- (void).cxx_destruct;
- (_Bool)_uncachedIsShowingAllVideo;
- (_Bool)_uncachedIsShowingAllMusic;
- (_Bool)_uncachedIsAutoDownloadOnCellularAllowed;
- (void)_onQueue_updateCanShowCloudTracksWithNotification:(_Bool)arg1;
- (void)_onQueue_updateCanShowCloudDownloadButtonsWithNotification:(_Bool)arg1;
- (void)_setNewIsNetworkReachable:(_Bool)arg1;
- (_Bool)_hasWiFiCapability;
- (_Bool)_hasCellularCapability;
- (void)_handleTelephonyNotificationWithName:(id)arg1 userInfo:(id)arg2;
- (_Bool)_isAutoDownloadOnCellularAllowed;
- (void)_networkTypeDidChangeNotification:(id)arg1;
- (void)_wifiEnabledDidChangeNotification:(id)arg1;
- (void)_cellularNetworkAllowedDidChangeNotification:(id)arg1;
- (void)airplaneModeChanged;
- (_Bool)isNetworkReachable;
- (_Bool)canShowCloudVideo;
- (_Bool)canShowCloudMusic;
- (_Bool)canShowCloudDownloadButtons;
- (void)dealloc;
- (id)init;
- (_Bool)shouldProhibitActionsForCurrentNetworkConditions;
- (_Bool)isCellularDataRestricted;
- (_Bool)hasProperNetworkConditionsToPlayMedia;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HSCloudClient : NSObject <HSCloudAvailability>
{
    _Bool _active;
    HSConnectionConfiguration *_configuration;
    NSXPCConnection *_nsxpcConnection;
    unsigned long long _daemonConfiguration;
    NSMutableSet *_knownArtworkIDs;
    NSObject<OS_dispatch_queue> *_knownArtworkIDsQueue;
    NSMutableSet *_pendingArtworkRequests;
    NSObject<OS_dispatch_queue> *_pendingArtworkRequestsQueue;
    long long _preferredVideoQuality;
    CDUnknownBlockType _updateInProgressChangedHandler;
}

@property(copy, nonatomic) CDUnknownBlockType updateInProgressChangedHandler; // @synthesize updateInProgressChangedHandler=_updateInProgressChangedHandler;
- (void).cxx_destruct;
- (void)_serverUpdateInProgressDidChange;
- (void)_serverDidLaunch;
- (void)_sendConfigurationToDaemon;
- (id)connection;
- (_Bool)canShowCloudVideo;
- (_Bool)canShowCloudMusic;
- (_Bool)canShowCloudDownloadButtons;
- (_Bool)shouldProhibitActionsForCurrentNetworkConditions;
- (_Bool)isCellularDataRestricted;
- (_Bool)hasProperNetworkConditionsToPlayMedia;
- (void)loadBooksForStoreIDs:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)fetchKeepLocalForCollectionWithPersistentID:(long long)arg1 groupingType:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setKeepLocal:(_Bool)arg1 forCollectionWithPersistentID:(long long)arg2 groupingType:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)updatePlaylistWithSagaID:(unsigned long long)arg1 itemSagaIDs:(id)arg2 queue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)updateArtistHeroImagesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)uploadItemProperties;
- (void)incrementItemProperty:(id)arg1 forSagaID:(unsigned long long)arg2;
- (void)setItemProperties:(id)arg1 forSagaID:(unsigned long long)arg2;
- (void)setItemProperties:(id)arg1 forPurchaseHistoryID:(unsigned long long)arg2;
- (void)setPreferredVideoQuality:(long long)arg1;
- (void)setDaemonConfiguration:(unsigned long long)arg1;
- (void)resignActive;
- (void)resetConfiguration:(id)arg1;
- (void)removePlaylistWithSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadUpdateProgressWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadIsUpdateInProgressWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadGeniusItemsForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadArtworkInfoForSagaIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadArtworkInfoForPurchaseHistoryIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)importItemArtworkForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)importScreenshotForPurchaseHistoryID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)importItemArtworkForPurchaseHistoryID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadArtworkDataForPurchaseHistoryIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadArtworkDataForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)isExpiredWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)isAuthenticatedWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)isAuthenticatedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)disableJaliscoGeniusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadJaliscoGeniusOperationStatusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancelUpdateJaliscoGeniusDataInProgressWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updateJaliscoGeniusDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)enableJaliscoGeniusWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setJaliscoGeniusCUID:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)loadJaliscoGeniusCUIDWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadJaliscoGeniusLearnMoreURLWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadIsJaliscoGeniusSupportedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)downloadGeniusDataWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)deauthenticateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updateSagaLibraryWithReason:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateSagaLibraryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updateJaliscoAppsLibraryForFamilyMemberStoreID:(id)arg1 withReason:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)unhideAllPurchasedApps:(CDUnknownBlockType)arg1;
- (void)setHidden:(_Bool)arg1 purchasedAppWithStoreID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)redownloadPurchaseAppWithStoreID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)jaliscoAppsImageDataForStoreID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)searchJaliscoAppsLibrary:(id)arg1 searchMethod:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)updateJaliscoAppsLibraryWithReason:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateJaliscoLibraryWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)removeJaliscoLibrary;
- (void)updateJaliscoLibraryWithReason:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)becomeActive;
- (void)authenticateWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)authenticateAndStartInitialImport:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)addGeniusPlaylistWithName:(id)arg1 seedItemSagaIDs:(id)arg2 itemSagaIDs:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)addPlaylistWithName:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HSCloudLibrary : NSObject
{
    NSString *_name;
    NSString *_uniqueIdentifier;
    SSAccount *_account;
    HSConnection *_connection;
}

@property(readonly, nonatomic) HSConnection *connection; // @synthesize connection=_connection;
@property(readonly, nonatomic) SSAccount *account; // @synthesize account=_account;
@property(readonly, copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithConnectionConfiguration:(id)arg1;

@end

@interface HSCloudLyricsRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 sessionID:(unsigned int)arg3;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 sessionID:(unsigned int)arg3;

@end

@interface HSCloudLyricsResponse : HSResponse
{
    NSString *lyrics;
}

@property(copy, nonatomic) NSString *lyrics; // @synthesize lyrics;
- (void).cxx_destruct;

@end

@interface HSConnection : NSObject
{
    HSConnectionConfiguration *_configuration;
    long long _connectionState;
    HSConnectionStream *_connectionStream;
    long long _connectionType;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_source> *_activityTimerSource;
    NSURLSession *_connectionSession;
    _Bool authenticationRequired;
    _Bool tokenCheckRequired;
    _Bool _tokenCheckRequred;
    unsigned int basePlaylistContainerID;
    unsigned int databaseID;
    unsigned int databaseRevision;
    unsigned int sessionID;
    unsigned int _interfaceID;
    unsigned int _controlKey;
    unsigned int _controlPort;
    unsigned int _promptID;
    HSFairPlayInfo *fairPlayInfo;
    NSString *homeSharingGroupID;
    NSString *password;
    NSString *username;
}

+ (void)_scheduleDialogResetIfNeeded;
@property(nonatomic) unsigned int promptID; // @synthesize promptID=_promptID;
@property unsigned int controlPort; // @synthesize controlPort=_controlPort;
@property unsigned int controlKey; // @synthesize controlKey=_controlKey;
@property unsigned int interfaceID; // @synthesize interfaceID=_interfaceID;
@property(readonly, getter=isTokenCheckRequired) _Bool tokenCheckRequred; // @synthesize tokenCheckRequred=_tokenCheckRequred;
@property(copy) NSString *username; // @synthesize username;
@property _Bool tokenCheckRequired; // @synthesize tokenCheckRequired;
@property unsigned int sessionID; // @synthesize sessionID;
@property(copy) NSString *password; // @synthesize password;
@property(copy) NSString *homeSharingGroupID; // @synthesize homeSharingGroupID;
@property(retain) HSFairPlayInfo *fairPlayInfo; // @synthesize fairPlayInfo;
@property unsigned int databaseRevision; // @synthesize databaseRevision;
@property unsigned int databaseID; // @synthesize databaseID;
@property(readonly) long long connectionType; // @synthesize connectionType=_connectionType;
@property long long connectionState; // @synthesize connectionState=_connectionState;
@property unsigned int basePlaylistContainerID; // @synthesize basePlaylistContainerID;
@property(getter=isAuthenticationRequired) _Bool authenticationRequired; // @synthesize authenticationRequired;
- (void).cxx_destruct;
- (id)_onSerialQueue_connectionSession;
- (void)_setupControlConnectionWithInternalConnectionCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_onSerialQueue_sendRequest:(id)arg1 withInternalResponseHandler:(CDUnknownBlockType)arg2;
- (void)_sendRequest:(id)arg1 withInternalResponseHandler:(CDUnknownBlockType)arg2;
- (unsigned int)_sapVersionForConnectionType;
- (void)_loadDatabaseWithInternalConnectionCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_continueFPSetupNegotiationWithData:(id)arg1 internalConnectionCompletionHandler:(CDUnknownBlockType)arg2;
- (void)checkForDatabaseUpdatesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)signedRequestFromURLRequest:(id)arg1;
- (void)sendRequest:(id)arg1 withResponseHandler:(CDUnknownBlockType)arg2;
- (id)newControlConnection;
- (void)disconnect;
- (void)connectWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly) NSURL *baseURL;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1 connectionType:(long long)arg2;
- (id)initWithBaseURL:(id)arg1 connectionType:(long long)arg2;
- (id)initWithBaseURL:(id)arg1;

@end

@interface HSConnectionConfiguration : NSObject <HSXPCCoding, NSSecureCoding, NSCopying, NSMutableCopying>
{
    SSAccount *_account;
    NSDictionary *_urlBag;
    NSURL *_baseURL;
    NSString *_buildIdentifier;
    NSString *_purchaseClientIdentifier;
    NSDictionary *_cookieHeaders;
    NSString *_userAgent;
    long long _requestReason;
    NSNumber *_familyMemberStoreID;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSNumber *familyMemberStoreID; // @synthesize familyMemberStoreID=_familyMemberStoreID;
@property(readonly, nonatomic) long long requestReason; // @synthesize requestReason=_requestReason;
@property(readonly, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(readonly, nonatomic) NSDictionary *cookieHeaders; // @synthesize cookieHeaders=_cookieHeaders;
@property(readonly, nonatomic) NSString *purchaseClientIdentifier; // @synthesize purchaseClientIdentifier=_purchaseClientIdentifier;
@property(readonly, nonatomic) NSString *buildIdentifier; // @synthesize buildIdentifier=_buildIdentifier;
@property(readonly, nonatomic) NSDictionary *urlBag; // @synthesize urlBag=_urlBag;
@property(readonly, nonatomic) SSAccount *account; // @synthesize account=_account;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURL *baseURL;
- (id)_dictonaryFromXPCDictonary:(id)arg1;
- (id)_copyXPCDictonaryFromDictonary:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithXPCEncoding:(id)arg1;
- (id)copyXPCEncoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HSConnectionStream : NSObject
{
    struct __CFReadStream *_readStream;
    NSObject<OS_dispatch_queue> *_queue;
}

- (void).cxx_destruct;
- (void)sendCFHTTPMessage:(struct __CFHTTPMessage *)arg1 isConcurrent:(_Bool)arg2 timeoutInterval:(double)arg3 withResponseHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface HSContainersRequest : HSRequest
{
    _Bool _shouldParseResponse;
}

+ (id)requestWithDatabaseID:(unsigned int)arg1;
@property(nonatomic) _Bool shouldParseResponse; // @synthesize shouldParseResponse=_shouldParseResponse;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1;
- (id)initWithAction:(id)arg1;

@end

@interface HSContainersResponse : HSResponse
{
    NSArray *containers;
}

@property(copy, nonatomic) NSArray *containers; // @synthesize containers;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface HSControlConnection : NSObject <NSStreamDelegate>
{
    unsigned int _key;
    NSOutputStream *_outputStream;
    double _timestamp;
    unsigned int _protocolVersion;
    id <HSControlConnectionDelegate> _delegate;
}

@property(nonatomic) unsigned int protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property(nonatomic) id <HSControlConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_sendTouchEvent:(long long)arg1 locations:(const unsigned int *)arg2 count:(unsigned long long)arg3 velocity:(CDStruct_b2fbf00d)arg4;
- (id)_newDataForControlTouchEventMessage_v1_1:(CDStruct_9a46e3d5)arg1;
- (id)_newDataForControlTouchEventMessage_v1:(CDStruct_16f720f6)arg1;
- (id)_newDataForControlExtendedMessage:(CDStruct_cc4e5495)arg1 withData:(id)arg2;
- (id)_newDataForControlEventMessage:(CDStruct_cc4e5495)arg1;
- (void)sendTouchesMoved:(const unsigned int *)arg1 count:(unsigned long long)arg2 velocity:(CDStruct_b2fbf00d)arg3;
- (void)sendTouchesEnded:(const unsigned int *)arg1 count:(unsigned long long)arg2;
- (void)sendTouchesBegan:(const unsigned int *)arg1 count:(unsigned long long)arg2;
- (void)sendShowItemDetailWithDictionary:(id)arg1;
- (void)sendEvent:(long long)arg1 value:(unsigned int)arg2;
- (void)open;
- (void)close;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)dealloc;
- (id)initWithHost:(id)arg1 port:(unsigned int)arg2 key:(unsigned int)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface HSControlInterfaceRequest : HSRequest
{
}

- (id)canonicalResponseForResponse:(id)arg1;
- (id)init;

@end

@interface HSControlInterfaceResponse : HSResponse
{
    NSArray *_interfaces;
}

@property(copy, nonatomic) NSArray *interfaces; // @synthesize interfaces=_interfaces;
- (void).cxx_destruct;

@end

@interface HSControlPrompt : NSObject
{
    _Bool _secureText;
    unsigned int _keyboardType;
    unsigned int _messageType;
    unsigned int _promptID;
    unsigned int _version;
    unsigned long long _sessionID;
    NSString *_string;
    NSString *_subText;
    NSString *_title;
}

@property(nonatomic) unsigned int version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *subText; // @synthesize subText=_subText;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
@property(nonatomic) unsigned long long sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic, getter=isSecureText) _Bool secureText; // @synthesize secureText=_secureText;
@property(nonatomic) unsigned int promptID; // @synthesize promptID=_promptID;
@property(nonatomic) unsigned int messageType; // @synthesize messageType=_messageType;
@property(nonatomic) unsigned int keyboardType; // @synthesize keyboardType=_keyboardType;
- (void).cxx_destruct;
- (id)description;

@end

@interface HSControlPromptEntryRequest : HSRequest
{
    unsigned int _interfaceID;
    NSDictionary *_attributes;
}

+ (id)requestWithInterfaceID:(unsigned int)arg1 attributes:(id)arg2;
+ (id)portInfoRequestWithInterfaceID:(unsigned int)arg1 key:(unsigned int)arg2;
@property(readonly, nonatomic) unsigned int interfaceID; // @synthesize interfaceID=_interfaceID;
@property(readonly, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
- (void).cxx_destruct;
- (id)_commandStringForCommand:(unsigned int)arg1;
- (id)_bodyDataForAttributes:(id)arg1;
- (id)initWithInterfaceID:(unsigned int)arg1 attributes:(id)arg2;

@end

@interface HSControlPromptUpdateRequest : HSRequest
{
    unsigned int _promptID;
}

+ (id)requestWithInterfaceID:(unsigned int)arg1 promptID:(unsigned int)arg2;
- (double)timeoutInterval;
- (_Bool)isConcurrent;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithInterfaceID:(unsigned int)arg1 promptID:(unsigned int)arg2;

@end

@interface HSControlPromptUpdateResponse : HSResponse
{
    unsigned int _nextPromptID;
    HSControlPrompt *_prompt;
    NSDictionary *_promptDictionary;
}

@property(copy, nonatomic) NSDictionary *promptDictionary; // @synthesize promptDictionary=_promptDictionary;
@property(retain, nonatomic) HSControlPrompt *prompt; // @synthesize prompt=_prompt;
@property(nonatomic) unsigned int nextPromptID; // @synthesize nextPromptID=_nextPromptID;
- (void).cxx_destruct;

@end

@interface HSDatabasesRequest : HSRequest
{
}

+ (id)requestWithSessionID:(unsigned int)arg1;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithSessionID:(unsigned int)arg1;
- (id)init;

@end

@interface HSDatabasesResponse : HSResponse
{
    NSArray *databases;
}

@property(copy, nonatomic) NSArray *databases; // @synthesize databases;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface HSFairPlayInfo : NSObject
{
    NSObject<OS_dispatch_queue> *_sapQueue;
    void *_hwInfo;
}

- (void).cxx_destruct;
- (id)_hexStringForData:(id)arg1;
- (id)securityInfoForURL:(id)arg1;
- (void)endSecuritySession;
- (id)continueNegotationWithSAPVersion:(unsigned int)arg1 data:(id)arg2 isComplete:(_Bool *)arg3;
- (id)beginNegotiationWithSAPVersion:(unsigned int)arg1;
@property(readonly, nonatomic) NSString *deviceGUID;
- (void)dealloc;
- (id)init;

@end

@interface HSFairPlaySetupRequest : HSRequest
{
}

- (id)init;

@end

@interface HSGetAuthorizedAccountsInfoRequest : HSRequest
{
}

- (id)init;

@end

@interface HSGetAuthorizedAccountsTokenRequest : HSRequest
{
}

+ (id)requestWithDSID:(unsigned long long)arg1 deviceGUID:(id)arg2;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDSID:(unsigned long long)arg1 deviceGUID:(id)arg2;

@end

@interface HSGetAuthorizedAccountsTokenResponse : HSResponse
{
    NSData *tokenData;
}

@property(copy, nonatomic) NSData *tokenData; // @synthesize tokenData;
- (void).cxx_destruct;

@end

@interface HSGetGeniusItemsRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 seedID:(unsigned long long)arg2 numberOfItems:(unsigned int)arg3;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseID:(unsigned int)arg1 seedID:(unsigned long long)arg2 numberOfItems:(unsigned int)arg3;

@end

@interface HSGetGeniusItemsResponse : HSResponse
{
    NSArray *itemIDs;
}

@property(copy, nonatomic) NSArray *itemIDs; // @synthesize itemIDs;
- (void).cxx_destruct;

@end

@interface HSHomeSharingLibrary : NSObject
{
    NSObject<OS_dispatch_queue> *_connectionAccessQueue;
    _Bool _requiresPassword;
    _Bool _available;
    _Bool __hasPendingUpdateRequest;
    unsigned int _version;
    NSString *_name;
    NSString *_uniqueIdentifier;
    NSString *_homeSharingGroupID;
    NSURL *_baseURL;
    id <NSObject> _context;
    long long _connectionType;
    HSConnection *_connection;
}

@property(nonatomic) _Bool _hasPendingUpdateRequest; // @synthesize _hasPendingUpdateRequest=__hasPendingUpdateRequest;
@property(retain, nonatomic) HSConnection *connection; // @synthesize connection=_connection;
@property(readonly, nonatomic) long long connectionType; // @synthesize connectionType=_connectionType;
@property(retain, nonatomic) id <NSObject> context; // @synthesize context=_context;
@property(readonly, nonatomic, getter=isAvailable) _Bool available; // @synthesize available=_available;
@property(readonly, retain, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, copy, nonatomic) NSString *homeSharingGroupID; // @synthesize homeSharingGroupID=_homeSharingGroupID;
@property(readonly, nonatomic) _Bool requiresPassword; // @synthesize requiresPassword=_requiresPassword;
@property(readonly, nonatomic) unsigned int version; // @synthesize version=_version;
@property(readonly, copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)_sendUpdateRequest;
- (void)_onQueue_ensureConnection;
@property(readonly, nonatomic) NSString *deviceGUID;
@property(readonly, nonatomic) long long connectionState;
@property(readonly, nonatomic) unsigned int basePlaylistContainerID;
@property(readonly, nonatomic) unsigned int databaseID;
- (void)disconnect;
- (id)urlForRequest:(id)arg1;
- (id)signedRequestFromURLRequest:(id)arg1;
- (id)securityInfoForURL:(id)arg1;
- (void)sendRequest:(id)arg1 withResponseHandler:(CDUnknownBlockType)arg2;
- (void)connectWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithName:(id)arg1 uniqueIdentifier:(id)arg2 version:(unsigned int)arg3 baseURL:(id)arg4 homeSharingGroupID:(id)arg5 connectionType:(long long)arg6;

@end

@interface HSHomeSharingVerifyRequest : HSRequest
{
}

- (id)init;

@end

@interface HSIncrementRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;

@end

@interface HSItemDataRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 format:(id)arg3;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2 format:(id)arg3;

@end

@interface HSItemsRequest : HSRequest
{
    _Bool _shouldParseResponse;
    _Bool _includeHiddenItems;
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 containerID:(unsigned int)arg2;
+ (id)requestWithDatabaseID:(unsigned int)arg1;
@property(nonatomic) _Bool includeHiddenItems; // @synthesize includeHiddenItems=_includeHiddenItems;
@property(nonatomic) _Bool shouldParseResponse; // @synthesize shouldParseResponse=_shouldParseResponse;
- (void)setSongsRequestWithSessonID:(unsigned int)arg1 metadataFilter:(id)arg2 purchaseTokenListing:(id)arg3 queryFilter:(id)arg4;
- (id)canonicalResponseForResponse:(id)arg1;
- (double)timeoutInterval;
- (id)initWithDatabaseID:(unsigned int)arg1 containerID:(unsigned int)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1;
- (id)initWithAction:(id)arg1;

@end

@interface HSItemsResponse : HSResponse
{
    NSArray *_items;
}

@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (void)dealloc;

@end

@interface HSLoginRequest : HSRequest
{
}

+ (id)supportedVideoQualities;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithAction:(id)arg1;
- (id)init;

@end

@interface HSLoginResponse : HSResponse
{
    unsigned int sessionID;
}

@property(nonatomic) unsigned int sessionID; // @synthesize sessionID;

@end

@interface HSLogoutRequest : HSRequest
{
}

+ (id)requestWithSessionID:(unsigned int)arg1;
- (id)initWithSessionID:(unsigned int)arg1;
- (id)init;

@end

@interface HSMediaLibraryImportObserver : NSObject
{
    NSTimer *_updateTimer;
    unsigned long long _consecutiveUpdateFailures;
    _Bool _stopped;
    _Bool _updating;
    id <HSMediaLibraryImportObserverDelegate> _delegate;
    double _updateInterval;
}

@property(nonatomic) double updateInterval; // @synthesize updateInterval=_updateInterval;
@property(readonly, nonatomic, getter=isUpdating) _Bool updating; // @synthesize updating=_updating;
@property(nonatomic) id <HSMediaLibraryImportObserverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_updateImportStatus:(id)arg1;
- (void)stopUpdating;
- (void)beginUpdating;
- (void)dealloc;
- (id)init;

@end

@interface HSMutableConnectionConfiguration : HSConnectionConfiguration
{
}

@property(retain, nonatomic) NSNumber *familyMemberStoreID;
@property(nonatomic) long long requestReason;
@property(copy, nonatomic) NSString *userAgent;
@property(copy, nonatomic) NSDictionary *urlBag;
@property(copy, nonatomic) NSDictionary *cookieHeaders;
@property(copy, nonatomic) NSString *purchaseClientIdentifier;
@property(copy, nonatomic) NSString *buildIdentifier;
@property(copy, nonatomic) NSURL *baseURL;
@property(retain, nonatomic) SSAccount *account;
- (id)initWithConfiguration:(id)arg1;

@end

@interface HSNowPlayingArtworkRequest : HSRequest
{
    unsigned int _interfaceID;
    unsigned int _playQueueIndex;
    struct CGSize _maximumSize;
}

@property(readonly, nonatomic) unsigned int playQueueIndex; // @synthesize playQueueIndex=_playQueueIndex;
@property(readonly, nonatomic) struct CGSize maximumSize; // @synthesize maximumSize=_maximumSize;
@property(readonly, nonatomic) unsigned int interfaceID; // @synthesize interfaceID=_interfaceID;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithInterfaceID:(unsigned int)arg1 maximumSize:(struct CGSize)arg2 playQueueIndex:(unsigned int)arg3;

@end

@interface HSNowPlayingArtworkResponse : HSResponse
{
    NSData *_artworkData;
    NSString *_artworkMIMEType;
}

@property(retain, nonatomic) NSString *artworkMIMEType; // @synthesize artworkMIMEType=_artworkMIMEType;
@property(retain, nonatomic) NSData *artworkData; // @synthesize artworkData=_artworkData;
- (void).cxx_destruct;

@end

@interface HSPlayStatusUpdateRequest : HSRequest
{
    unsigned int _interfaceID;
    unsigned int _revisionID;
}

@property(readonly, nonatomic) unsigned int revisionID; // @synthesize revisionID=_revisionID;
@property(readonly, nonatomic) unsigned int interfaceID; // @synthesize interfaceID=_interfaceID;
- (double)timeoutInterval;
- (_Bool)isConcurrent;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithInterfaceID:(unsigned int)arg1 revisionID:(unsigned int)arg2;

@end

@interface HSPlayStatusUpdateResponse : HSResponse
{
    unsigned int _nextRevisionID;
    unsigned long long _nowPlayingContainerID;
    unsigned long long _nowPlayingContainerItemID;
    unsigned long long _nowPlayingDatabaseID;
    unsigned long long _nowPlayingItemID;
    NSDictionary *_playStatusInformation;
}

@property(copy, nonatomic) NSDictionary *playStatusInformation; // @synthesize playStatusInformation=_playStatusInformation;
@property(nonatomic) unsigned long long nowPlayingItemID; // @synthesize nowPlayingItemID=_nowPlayingItemID;
@property(nonatomic) unsigned long long nowPlayingDatabaseID; // @synthesize nowPlayingDatabaseID=_nowPlayingDatabaseID;
@property(nonatomic) unsigned long long nowPlayingContainerItemID; // @synthesize nowPlayingContainerItemID=_nowPlayingContainerItemID;
@property(nonatomic) unsigned long long nowPlayingContainerID; // @synthesize nowPlayingContainerID=_nowPlayingContainerID;
@property(nonatomic) unsigned int nextRevisionID; // @synthesize nextRevisionID=_nextRevisionID;
- (void).cxx_destruct;
- (id)description;

@end

@interface HSPlaybackControlRequest : HSRequest
{
    unsigned int _interfaceID;
    long long _controlCommand;
}

@property(readonly, nonatomic) unsigned int interfaceID; // @synthesize interfaceID=_interfaceID;
@property(readonly, nonatomic) long long controlCommand; // @synthesize controlCommand=_controlCommand;
- (id)initWithInterfaceID:(unsigned int)arg1 controlCommand:(long long)arg2;

@end

@interface HSRemovePlaylistRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 containerID:(unsigned int)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 containerID:(unsigned int)arg2;

@end

@interface HSResponseDataParser : NSObject
{
}

+ (id)_parseListingItemWithBytes:(const char *)arg1 length:(unsigned int)arg2 usingHandler:(CDUnknownBlockType)arg3;
+ (id)_parseErrorResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parsePlayStatusResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseItemIDArrayWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseBrowseListingWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseListingCollectionWithBytes:(const char *)arg1 length:(unsigned long long)arg2 usingHandler:(CDUnknownBlockType)arg3;
+ (id)_parseItemsResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2 usingHandler:(CDUnknownBlockType)arg3;
+ (id)_parseUpdateTypeWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseEditCommandResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseDictionaryCollectionWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseDeletedIDListingWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseControlPromptResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseControlInterfacesResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseCloudLyricsInfoResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseCloudArtworkInfoResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseBulkCloudLyricsInfoResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseBulkCloudArtworkInfoResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseAuthorizedAccountTokenWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseUpdateResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseLoginResponseWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (id)_parseResponseCode:(unsigned int)arg1 bytes:(const char *)arg2 length:(unsigned long long)arg3 usingHandler:(CDUnknownBlockType)arg4;
+ (unsigned long long)_parseItemPropertyCountWithBytes:(const char *)arg1 length:(unsigned long long)arg2;
+ (void)enumerateDeletedItemsInResponseData:(id)arg1 usingHandler:(CDUnknownBlockType)arg2;
+ (void)enumerateItemsInResponseData:(id)arg1 usingHandler:(CDUnknownBlockType)arg2;
+ (void)parseItemWithBytes:(const char *)arg1 length:(unsigned long long)arg2 usingHandler:(CDUnknownBlockType)arg3;
+ (unsigned long long)parseItemWithBytes:(const char *)arg1 length:(unsigned long long)arg2 valuesOut:(CDStruct_557df7f8 *)arg3 valuesCapacity:(unsigned long long)arg4;
+ (id)enumerateRawItemsInResponseData:(id)arg1 usingHandler:(CDUnknownBlockType)arg2;
+ (id)parseResponseData:(id)arg1;
+ (id)parseErrorInResponseData:(id)arg1;

@end

@interface HSServerInfoRequest : HSRequest
{
}

- (id)init;

@end

@interface HSSetPropertyRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;

@end

@interface HSSetRentalPlaybackStartDateRequest : HSRequest
{
}

+ (id)requestWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;
- (id)initWithDatabaseID:(unsigned int)arg1 itemID:(unsigned long long)arg2;

@end

@interface HSTemporaryFile : NSObject
{
    NSString *_path;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithTemporaryFile:(id)arg1;

@end

@interface HSUpdateRequest : HSRequest
{
    long long _connectionType;
}

+ (id)requestWithDatabaseRevision:(unsigned int)arg1 sessionID:(unsigned int)arg2 connectionType:(long long)arg3;
- (id)_bodyDataForDatabaseRevision:(unsigned int)arg1 sessionID:(unsigned int)arg2;
- (double)timeoutInterval;
- (_Bool)isConcurrent;
- (id)canonicalResponseForResponse:(id)arg1;
- (id)initWithDatabaseRevision:(unsigned int)arg1 sessionID:(unsigned int)arg2 connectionType:(long long)arg3;

@end

@interface HSUpdateResponse : HSResponse
{
    unsigned int _databaseRevision;
}

@property(nonatomic) unsigned int databaseRevision; // @synthesize databaseRevision=_databaseRevision;

@end

@interface ML3MusicLibrary (HSAdditions)
+ (void)buildDatabaseFromHomeSharingLibrary:(id)arg1 atPath:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 progressHandler:(CDUnknownBlockType)arg4;
+ (void)buildDatabaseFromHomeSharingLibrary:(id)arg1 atPath:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)removeJaliscoTrackData;
- (void)removeSagaTrackData;
- (void)checkForChangesInHomeSharingLibrary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)executeUpdateSQL:(id)arg1;
- (void)fillContainerForHomeSharingLibrary:(id)arg1 containerID:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
@end

@interface NSArray (HSAdditions)
- (id)subarraysOfSize:(unsigned long long)arg1;
@end

@interface NSData (HSAdditions)
+ (id)mappedDataWithContentsOfTemporaryFile:(id)arg1 error:(id *)arg2;
- (id)decompressedGzipDataUsingTemporaryFile;
- (id)decompressedGzipData;
@end

@interface NSError (HSAdditions)
+ (id)hs_cloudErrorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)hs_homeSharingErrorWithCode:(long long)arg1 userInfo:(id)arg2;
@end

@interface _HSUnresolvedLibrary : NSObject
{
    long long _browserType;
    CDUnknownBlockType _completionHandler;
    NSNetService *_netService;
    struct _DNSServiceRef_t *_resolvingDNSService;
}

- (void).cxx_destruct;
- (void)_netServiceDidNotResolve;
- (void)_netServiceDidResolveAddressWithTXTRecordData:(id)arg1 host:(struct hostent *)arg2 port:(unsigned short)arg3;
- (void)_timeoutResolve;
- (void)resolveWithTimeout:(double)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_callAndInvalidateCompletionHandlerWithLibrary:(id)arg1;
- (void)dealloc;
- (id)initWithNSNetService:(id)arg1 browserType:(long long)arg2;

@end

