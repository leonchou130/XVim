//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/ExternalAccessory.framework/ExternalAccessory
// UUID: 4F4D328D-982F-3747-9920-B6F767E145B4
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 287.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BTDevicePickerDelegate <NSObject>

@optional
- (void)devicePicker:(BTDevicePicker *)arg1 didDismissWithResult:(long long)arg2 device:(BluetoothDevice *)arg3;
@end

@protocol EABluetoothAccessoryPickerDelegate <NSObject>

@optional
- (void)devicePicker:(EABluetoothAccessoryPicker *)arg1 didSelectAddress:(NSString *)arg2 errorCode:(long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol WACUIHostProtocol <NSObject>
- (void)wifiDidShutdown;
- (void)_signalPresentationComplete;
- (void)backendFoundNewWACDevices:(NSArray *)arg1 andRemovedWACDevices:(NSArray *)arg2;
- (void)backendDidStopSearchWithError:(NSError *)arg1;
- (void)backendDidStartSearchWithError:(NSError *)arg1;
- (void)updateState:(long long)arg1;
- (void)dismissWithStatus:(int)arg1;
@end

@protocol WACUIServiceProtocol <NSObject>
- (void)backendConfigureAirPortAssistantWithTargetMACAddress:(NSString *)arg1;
- (void)cancelActiveConfiguration;
- (void)backendStopSearch;
- (void)backendStartSearch;
@end

@interface EAAccessory : NSObject
{
    EAAccessoryInternal *_internal;
}

- (_Bool)supportsPointOfInterest;
- (void)updateItemProperty:(int)arg1 withValue:(id)arg2;
- (void)updateSystemProperty:(int)arg1 withValue:(id)arg2;
- (_Bool)supportsAccessibility;
- (id)getVehicleInfoData;
- (void)setVehicleInfovehicleInfoInitialData:(id)arg1;
- (id)vehicleInfoInitialData;
- (void)setVehicleInfoSupportedTypes:(id)arg1;
- (id)vehicleInfoSupportedTypes;
- (_Bool)sendEphemeris:(id)arg1;
- (_Bool)sendEphemerisPointDataGpsWeek:(unsigned long long)arg1 gpsTOW:(double)arg2 latitude:(double)arg3 longitude:(double)arg4 accuracy:(unsigned short)arg5;
- (_Bool)sendGpsWeek:(unsigned long long)arg1 gpsTOW:(double)arg2;
- (_Bool)getEphemerisExpirationInterval:(double *)arg1;
- (_Bool)getEphemerisRecommendRefreshInterval:(double *)arg1;
- (_Bool)getEphemerisURL:(id *)arg1;
- (void)resetIAPTimeSyncKalmanFilter;
- (void)getIAPTimeSyncInfo:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setIAPTimeSyncParams:(id)arg1;
- (_Bool)setNMEASentencesToFilter:(id)arg1;
- (_Bool)getNMEASentence:(id *)arg1;
- (_Bool)accessoryHasNMEASentencesAvailable;
- (_Bool)supportsLocation;
- (void)setLocationSentenceTypesMask:(int)arg1;
- (int)locationSentenceTypesMask;
- (unsigned int)eqIndex;
- (void)setEqIndex:(unsigned int)arg1;
- (id)eqNames;
- (void)setEqNames:(id)arg1;
- (id)allPublicProtocolStrings;
- (id)audioPorts;
- (int)classType;
- (id)preferredApp;
- (_Bool)shouldBeHiddenFromUI;
- (_Bool)supportsPublicIap;
- (id)macAddress;
- (_Bool)_internalNotPresentInIAPAccessoriesArray;
- (unsigned int)_internalConnectionID;
- (id)_createWakeToken;
- (void)_endSession:(unsigned int)arg1;
- (void)_openCompleteForSession:(unsigned int)arg1;
- (void)_removeSession:(id)arg1;
- (void)_addSession:(id)arg1;
- (id)_protocolIDForProtocolString:(id)arg1;
- (void)_setNotPresentInIAPAccessoriesArray:(_Bool)arg1;
- (void)_setConnected:(_Bool)arg1;
- (id)_shortDescription;
- (void)_updateAccessoryInfo:(id)arg1;
- (id)_initWithAccessory:(id)arg1;
- (void)setIsAvailableOverBonjour:(_Bool)arg1;
- (_Bool)isAvailableOverBonjour;
- (void)setHasIPConnection:(_Bool)arg1;
- (_Bool)hasIPConnection;
- (void)setBonjourName:(id)arg1;
- (id)bonjourName;
@property(nonatomic) id <EAAccessoryDelegate> delegate;
@property(readonly, nonatomic) NSArray *protocolStrings;
- (id)wakeToken;
@property(readonly, nonatomic) NSString *hardwareRevision;
@property(readonly, nonatomic) NSString *firmwareRevision;
@property(readonly, nonatomic) NSString *serialNumber;
@property(readonly, nonatomic) NSString *modelNumber;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) NSString *manufacturer;
@property(readonly, nonatomic) unsigned long long connectionID;
@property(readonly, nonatomic, getter=isConnected) _Bool connected;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface EAAccessoryInternal : NSObject
{
    _Bool _connected;
    unsigned int _connectionID;
    NSString *_name;
    NSString *_manufacturer;
    NSString *_modelNumber;
    NSString *_serialNumber;
    NSString *_firmwareRevision;
    NSString *_hardwareRevision;
    NSString *_macAddress;
    NSString *_preferredApp;
    int _classType;
    NSDictionary *_audioPorts;
    unsigned int _capabilities;
    _Bool _notPresentInIAPAccessoriesArray;
    NSMutableArray *_sessionsList;
    NSArray *_eqNames;
    int _locationSentenceTypesMask;
    NSDictionary *_vehicleInfoSupportedTypes;
    NSDictionary *_vehicleInfoInitialData;
    NSDictionary *_protocols;
    id <EAAccessoryDelegate> _delegate;
    NSString *_bonjourName;
    _Bool _hasIPConnection;
    _Bool _isAvailableOverBonjour;
    unsigned int _eqIndex;
}

@property(nonatomic) int locationSentenceTypesMask; // @synthesize locationSentenceTypesMask=_locationSentenceTypesMask;
@property(nonatomic) _Bool isAvailableOverBonjour; // @synthesize isAvailableOverBonjour=_isAvailableOverBonjour;
@property(nonatomic) _Bool hasIPConnection; // @synthesize hasIPConnection=_hasIPConnection;
@property(copy, nonatomic) NSString *bonjourName; // @synthesize bonjourName=_bonjourName;
@property(nonatomic) id <EAAccessoryDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDictionary *protocols; // @synthesize protocols=_protocols;
@property(retain, nonatomic) NSDictionary *vehicleInfoInitialData; // @synthesize vehicleInfoInitialData=_vehicleInfoInitialData;
@property(retain, nonatomic) NSDictionary *vehicleInfoSupportedTypes; // @synthesize vehicleInfoSupportedTypes=_vehicleInfoSupportedTypes;
@property(nonatomic) unsigned int eqIndex; // @synthesize eqIndex=_eqIndex;
@property(retain, nonatomic) NSArray *eqNames; // @synthesize eqNames=_eqNames;
@property(nonatomic) _Bool notPresentInIAPAccessoriesArray; // @synthesize notPresentInIAPAccessoriesArray=_notPresentInIAPAccessoriesArray;
@property(nonatomic) unsigned int capabilities; // @synthesize capabilities=_capabilities;
@property(retain, nonatomic) NSDictionary *audioPorts; // @synthesize audioPorts=_audioPorts;
@property(nonatomic) int classType; // @synthesize classType=_classType;
@property(copy, nonatomic) NSString *preferredApp; // @synthesize preferredApp=_preferredApp;
@property(copy, nonatomic) NSString *macAddress; // @synthesize macAddress=_macAddress;
@property(copy, nonatomic) NSString *hardwareRevision; // @synthesize hardwareRevision=_hardwareRevision;
@property(copy, nonatomic) NSString *firmwareRevision; // @synthesize firmwareRevision=_firmwareRevision;
@property(copy, nonatomic) NSString *serialNumber; // @synthesize serialNumber=_serialNumber;
@property(copy, nonatomic) NSString *modelNumber; // @synthesize modelNumber=_modelNumber;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property(nonatomic) unsigned int connectionID; // @synthesize connectionID=_connectionID;
@property(nonatomic) _Bool connected; // @synthesize connected=_connected;
@property(readonly, nonatomic) NSArray *sessionsList;
- (void)removeSession:(id)arg1;
- (void)addSession:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface EAAccessoryManager : NSObject <EABluetoothAccessoryPickerDelegate>
{
    NSMutableArray *_connectedAccessories;
    NSMutableArray *_sequesteredAccessories;
    NSString *_selectedBluetoothAddress;
    EABluetoothAccessoryPicker *_picker;
    CDUnknownBlockType _pickerCompletion;
    _Bool _sequesterNewAccessories;
    NSTimer *_pickerTimer;
    NSObject<OS_dispatch_queue> *_connectionQueue;
}

+ (_Bool)isLoggingEnabled;
+ (void)accessibilityStopListening;
+ (void)accessibilityStartListening;
+ (void)registerCapabilities:(unsigned int)arg1;
+ (id)sharedAccessoryManager;
- (void)devicePicker:(id)arg1 didSelectAddress:(id)arg2 errorCode:(long long)arg3;
- (void)stopIPAccessoryDiscovery;
- (void)startIPAccessoryDiscovery;
- (void)disconnectIPAccessory:(id)arg1;
- (void)initiateConnectionToIPAccessory:(id)arg1;
- (void)pointOfInterestSelection:(id)arg1;
- (void)setAreLocationAccessoriesEnabled:(_Bool)arg1;
- (_Bool)areLocationAccessoriesEnabled;
- (void)accessibilitySystemPropertyRequest:(id)arg1;
- (void)accessibilitySystemPropertyChange:(id)arg1;
- (void)accessibilityItemPropertyRequest:(id)arg1;
- (void)accessibilityContextChange:(id)arg1;
- (void)accessibilityAction:(id)arg1;
- (void)setShouldAllowCppRuntime:(_Bool)arg1;
- (_Bool)shouldAllowCppRuntime;
- (void)setShouldAllowInternalProtocols:(_Bool)arg1;
- (_Bool)shouldAllowInternalProtocols;
- (id)_connectedAccessories;
- (_Bool)appDeclaresProtocol:(id)arg1;
- (void)wakeAccessoryWithToken:(id)arg1;
- (void)endSession:(unsigned int)arg1 forConnectionID:(unsigned int)arg2;
- (void)openCompleteForSession:(unsigned int)arg1 connectionID:(unsigned int)arg2;
- (void)_timeSyncInfoUpdated:(id)arg1;
- (void)_handleAccessoryNotificationTimeout:(id)arg1;
- (void)_integrateSequesteredAccessories;
- (void)_vehicleDataUpdated:(id)arg1;
- (void)_gpsTimeRequested:(id)arg1;
- (void)_nmeaFilteringSupportChanged:(id)arg1;
- (void)_ephemerisURLAvailable:(id)arg1;
- (void)_locationPointDataAvailable:(id)arg1;
- (void)_locationNmeaDataAvailable:(id)arg1;
- (id)availableAccessories;
- (void)_ipAccessoryDisconnected:(id)arg1;
- (void)_ipAccessoryDidConnect:(id)arg1;
- (void)_ipAccessoryNotAvailable:(id)arg1;
- (void)_ipAccessoryAvailable:(id)arg1;
- (void)_externalAccessoryDisconnected:(id)arg1;
- (void)_externalAccessoryUpdated:(id)arg1;
- (void)_externalAccessoryConnected:(id)arg1;
- (void)_removeAllAccessoriesFromArray:(id)arg1 notifyClients:(_Bool)arg2;
- (void)_externalAccessoryReconnected:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_cleanUpForTaskSuspend;
- (void)_checkForConnectedAccessories;
- (_Bool)_iAPAccessoriesMatchEAConnectedAccessoriesList:(id)arg1;
- (_Bool)_shouldCheckForConnectedAccessories;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_iapServerDied:(id)arg1;
- (void)_notifyObserversThatAccessoryDisconnectedWithUserInfo:(id)arg1;
- (void)unregisterForLocalNotifications;
- (void)registerForLocalNotifications;
@property(readonly, nonatomic) NSArray *connectedAccessories;
- (void)showBluetoothAccessoryPickerWithNameFilter:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)_initFromSingletonCreationMethod;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EABluetoothAccessoryPicker : NSObject <BTDevicePickerDelegate>
{
    BTDevicePicker *_picker;
    id <EABluetoothAccessoryPickerDelegate> _delegate;
}

+ (void)wakeSelectedBluetoothAccessories:(id)arg1;
@property(nonatomic) id <EABluetoothAccessoryPickerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)devicePicker:(id)arg1 didDismissWithResult:(long long)arg2 device:(id)arg3;
- (void)dismissPicker;
- (void)show;
- (void)dealloc;
- (id)initWithPredicate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EAInputStream : NSInputStream
{
    id _delegate;
    EAAccessory *_accessory;
    EASession *_session;
    int _sock;
    NSMutableData *_inputFromAccData;
    NSCondition *_inputFromAccCondition;
    NSRecursiveLock *_statusLock;
    NSRecursiveLock *_runloopLock;
    NSObject<OS_dispatch_queue> *_inputFromAccQueue;
    NSObject<OS_dispatch_source> *_sockListenSource;
    char *_inputFromAccBuffer;
    _Bool _isOpenCompletedEventSent;
    _Bool _hasNewBytesAvailable;
    _Bool _isAtEndEventSent;
    unsigned long long _streamStatus;
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopSource *_runLoopSource;
}

- (void)_scheduleCallback;
- (void)_streamEventTrigger;
- (void)_performAtEndOfStreamValidation;
- (void)_accessoryDidDisconnect:(id)arg1;
- (void)endStream;
- (void)openCompleted;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (void)dealloc;
- (id)initWithAccessory:(id)arg1 forSession:(id)arg2 socket:(int)arg3;

@end

@interface EAOutputStream : NSOutputStream
{
    id _delegate;
    int _sock;
    EAAccessory *_accessory;
    EASession *_session;
    NSRecursiveLock *_statusLock;
    NSRecursiveLock *_runloopLock;
    struct __CFSocket *_cfSocket;
    _Bool _isOpenCompletedEventSent;
    _Bool _hasSpaceAvailableEventSent;
    _Bool _hasSpaceAvailable;
    _Bool _isAtEndEventSent;
    unsigned long long _streamStatus;
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopSource *_runLoopSource;
    struct __CFRunLoopSource *_socketRunLoopSource;
}

- (void)_scheduleCallback;
- (void)_streamEventTrigger;
- (void)_streamWriteable;
- (void)_performAtEndOfStreamValidation;
- (void)_accessoryDidDisconnect:(id)arg1;
- (void)endStream;
- (void)openCompleted;
- (_Bool)hasSpaceAvailable;
- (long long)write:(const char *)arg1 maxLength:(unsigned long long)arg2;
- (id)streamError;
- (unsigned long long)streamStatus;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)close;
- (void)open;
- (void)dealloc;
- (id)initWithAccessory:(id)arg1 forSession:(id)arg2 socket:(int)arg3;

@end

@interface EASession : NSObject
{
    EAAccessory *_accessory;
    unsigned int _sessionID;
    NSString *_protocolString;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    _Bool _openCompleted;
    int _sock;
}

@property(readonly, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(readonly, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(readonly, nonatomic) NSString *protocolString; // @synthesize protocolString=_protocolString;
@property(readonly, nonatomic) EAAccessory *accessory; // @synthesize accessory=_accessory;
- (void)setOpenCompleted:(_Bool)arg1;
- (_Bool)isOpenCompleted;
- (void)_endStreams;
- (void)_streamClosed;
- (unsigned int)_sessionID;
- (id)_shortDescription;
- (id)description;
- (void)dealloc;
- (id)initWithAccessory:(id)arg1 forProtocol:(id)arg2;
- (id)init;

@end

@interface EAWiFiUnconfiguredAccessory : NSObject
{
    NSString *_name;
    NSString *_manufacturer;
    NSString *_model;
    NSString *_ssid;
    NSString *_macAddress;
    unsigned long long _properties;
}

@property(readonly, nonatomic) unsigned long long properties; // @synthesize properties=_properties;
@property(readonly, copy, nonatomic) NSString *macAddress; // @synthesize macAddress=_macAddress;
@property(readonly, copy, nonatomic) NSString *ssid; // @synthesize ssid=_ssid;
@property(readonly, copy, nonatomic) NSString *model; // @synthesize model=_model;
@property(readonly, copy, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (id)initWithAirPortAssistantWACDevice:(id)arg1;

@end

@interface EAWiFiUnconfiguredAccessoryBrowser : NSObject
{
    _Bool __debugLog;
    id <EAWiFiUnconfiguredAccessoryBrowserDelegate> _delegate;
    NSSet *_unconfiguredAccessories;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSPredicate *_accessorySearchPredicate;
}

@property(retain) NSPredicate *accessorySearchPredicate; // @synthesize accessorySearchPredicate=_accessorySearchPredicate;
@property(retain) NSObject<OS_dispatch_queue> *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(readonly, copy) NSSet *unconfiguredAccessories; // @synthesize unconfiguredAccessories=_unconfiguredAccessories;
@property(nonatomic) __weak id <EAWiFiUnconfiguredAccessoryBrowserDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_handleBrowserFinishedConfiguring:(id)arg1;
- (void)_handlePurgeAccessoriesSetNotification:(id)arg1;
- (void)_handleRemovedAccessoriesNotification:(id)arg1;
- (void)_handleNewAccessoriesNotification:(id)arg1;
- (void)_handleBrowserDidUpdateState:(id)arg1;
- (void)configureAccessory:(id)arg1 withConfigurationUIOnViewController:(id)arg2;
- (void)stopSearchingForUnconfiguredAccessories;
- (void)startSearchingForUnconfiguredAccessoriesMatchingPredicate:(id)arg1;
- (void)dealloc;
- (id)initWithDelegate:(id)arg1 queue:(id)arg2;

@end

@interface EAWiFiUnconfiguredAccessoryBrowserManager : NSObject
{
    _Bool __debugLog;
    _Bool _isConfiguring;
    NSSet *_unconfiguredAccessories;
    EAWiFiUnconfiguredAccessory *_accessoryBeingConfigured;
    NSExtension *_extension;
    WACUIRemoteViewController *_remoteViewController;
    UIViewController *_targetViewController;
    id <NSCopying> _currentRequestIdentifier;
    NSMutableSet *__accessories;
    long long _currentBrowserState;
}

+ (id)sharedInstance;
@property _Bool isConfiguring; // @synthesize isConfiguring=_isConfiguring;
@property long long currentBrowserState; // @synthesize currentBrowserState=_currentBrowserState;
@property(retain) NSMutableSet *_accessories; // @synthesize _accessories=__accessories;
@property(retain, nonatomic) id <NSCopying> currentRequestIdentifier; // @synthesize currentRequestIdentifier=_currentRequestIdentifier;
@property __weak UIViewController *targetViewController; // @synthesize targetViewController=_targetViewController;
@property(retain) WACUIRemoteViewController *remoteViewController; // @synthesize remoteViewController=_remoteViewController;
@property(retain) NSExtension *extension; // @synthesize extension=_extension;
@property(retain) EAWiFiUnconfiguredAccessory *accessoryBeingConfigured; // @synthesize accessoryBeingConfigured=_accessoryBeingConfigured;
@property(readonly, copy) NSSet *unconfiguredAccessories; // @synthesize unconfiguredAccessories=_unconfiguredAccessories;
- (void).cxx_destruct;
- (void)wifiDidShutdown;
- (void)_signalPresentationComplete;
- (void)dismissWithStatus:(int)arg1;
- (void)purgeAccessoriesSet;
- (void)updateState:(long long)arg1;
- (void)didFindNewUnconfiguredAccessories:(id)arg1 andRemovedUnconfiguredAccessories:(id)arg2;
- (void)configureAccessory:(id)arg1 withConfigurationUIOnViewController:(id)arg2;
- (void)cancelActiveConfiguration;
- (void)stopSearchingForUnconfiguredAccessories;
- (void)startSearchingForUnconfiguredAccessories;
- (void)setup;
- (id)init;

@end

@interface WACLogging : NSObject
{
}

+ (_Bool)isEnabled;

@end

@interface WACUIRemoteViewController : _UIRemoteViewController <WACUIHostProtocol>
{
    EAWiFiUnconfiguredAccessoryBrowserManager *_parent;
}

+ (id)exportedInterface;
+ (id)serviceViewControllerInterface;
@property __weak EAWiFiUnconfiguredAccessoryBrowserManager *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (void)wifiDidShutdown;
- (void)_signalPresentationComplete;
- (void)backendFoundNewWACDevices:(id)arg1 andRemovedWACDevices:(id)arg2;
- (void)backendDidStopSearchWithError:(id)arg1;
- (void)backendDidStartSearchWithError:(id)arg1;
- (void)updateState:(long long)arg1;
- (void)dismissWithStatus:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

