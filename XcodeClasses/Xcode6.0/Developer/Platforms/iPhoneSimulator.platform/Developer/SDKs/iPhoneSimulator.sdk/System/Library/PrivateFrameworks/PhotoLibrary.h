//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct NSObject {
    Class _field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct entryList {
    struct lruEntry *tqh_first;
    struct lruEntry **tqh_last;
};

struct lruEntry {
    id _field1;
    long long _field2;
    struct {
        struct lruEntry *_field1;
        struct lruEntry **_field2;
    } _field3;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    double _field5;
    int _field6;
} CDStruct_ebaa735e;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    struct {
        double x;
        double y;
    } origin;
    struct {
        double width;
        double height;
    } size;
} CDStruct_02837cd9;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/PhotoLibrary.framework/PhotoLibrary
// UUID: 39D61F57-415C-3D48-9645-E1B5AFA98641
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2369.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol AirPlayRemoteSlideshowDelegate <NSObject>
- (_Bool)airplayRemoteSlideshow:(AirPlayRemoteSlideshow *)arg1 handleEvent:(NSDictionary *)arg2;
- (_Bool)airplayRemoteSlideshow:(AirPlayRemoteSlideshow *)arg1 requestAssetWithInfo:(NSDictionary *)arg2 completion:(void (^)(NSData *, NSDictionary *, NSError *))arg3;
@end

@protocol CAMEffectSelectionViewControllerDelegate <NSObject>
- (void)effectSelectionViewController:(CAMEffectSelectionViewController *)arg1 didSelectEffect:(CIFilter *)arg2;
- (void)effectSelectionViewController:(CAMEffectSelectionViewController *)arg1 requestsThumbnailWithEffect:(CIFilter *)arg2 completionBlock:(void (^)(UIImage *))arg3;
@end

@protocol ICCameraDeviceDelegate <ICDeviceDelegate>

@optional
- (void)cameraDevice:(ICCameraDevice *)arg1 didReceiveMetadata:(NSDictionary *)arg2 forItem:(ICCameraItem *)arg3 error:(NSError *)arg4;
- (void)cameraDevice:(ICCameraDevice *)arg1 didReceiveThumbnail:(struct CGImage *)arg2 forItem:(ICCameraItem *)arg3 error:(NSError *)arg4;
- (void)cameraDevice:(ICCameraDevice *)arg1 didRemoveItems:(NSArray *)arg2;
- (void)cameraDevice:(ICCameraDevice *)arg1 didAddItems:(NSArray *)arg2;
@end

@protocol ICDeviceBrowserDelegate <NSObject>
- (void)deviceBrowser:(ICDeviceBrowser *)arg1 didRemoveDevice:(ICDevice *)arg2 moreGoing:(_Bool)arg3;
- (void)deviceBrowser:(ICDeviceBrowser *)arg1 didAddDevice:(ICDevice *)arg2 moreComing:(_Bool)arg3;
@end

@protocol ICDeviceDelegate <NSObject>
- (void)didRemoveDevice:(ICDevice *)arg1;

@optional
- (void)device:(ICDevice *)arg1 didEncounterError:(NSError *)arg2;
- (void)device:(ICDevice *)arg1 didReceiveStatusInformation:(NSDictionary *)arg2;
- (void)device:(ICDevice *)arg1 didCloseSessionWithError:(NSError *)arg2;
- (void)deviceDidBecomeReady:(ICDevice *)arg1;
- (void)device:(ICDevice *)arg1 didOpenSessionWithError:(NSError *)arg2;
@end

@protocol MFContactsSearchConsumer <NSObject>
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(NSNumber *)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(NSArray *)arg1 type:(unsigned long long)arg2 taskID:(NSNumber *)arg3;
@end

@protocol MPMediaPickerControllerDelegate <NSObject>

@optional
- (void)mediaPickerDidCancel:(MPMediaPickerController *)arg1;
- (void)mediaPicker:(MPMediaPickerController *)arg1 didPickMediaItems:(MPMediaItemCollection *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol PHAssetCollectionDataSource <NSObject>
@property(readonly, nonatomic) PHFetchResult *assetCollectionsFetchResult;
- (PHFetchResult *)assetsInAssetCollection:(PHAssetCollection *)arg1;
@end

@protocol PHPhotoLibraryChangeObserver <NSObject>
- (void)photoLibraryDidChange:(PHChange *)arg1;
@end

@protocol PLAirPlaySessionDataSource <NSObject>
- (void)airPlaySession:(PLAirPlaySession *)arg1 didFailToStreamPhotoWithError:(NSError *)arg2;
- (PLManagedAsset *)airPlaySession:(PLAirPlaySession *)arg1 nextPhotoForPhoto:(PLManagedAsset *)arg2;
- (PLManagedAsset *)airPlaySession:(PLAirPlaySession *)arg1 previousPhotoForPhoto:(PLManagedAsset *)arg2;
@end

@protocol PLAlbumProtocol <PLAssetContainer>
@property(nonatomic) int pendingItemsType;
@property(nonatomic) int pendingItemsCount;
@property(readonly, copy, nonatomic) CDUnknownBlockType sortingComparator;
@property(readonly, retain, nonatomic) NSURL *groupURL;
@property(retain, nonatomic) NSString *importSessionID;
@property(retain, nonatomic) NSDictionary *slideshowSettings;
@property(readonly, nonatomic) _Bool shouldDeleteWhenEmpty;
@property(readonly, nonatomic) _Bool canContributeToCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isRecentlyAddedAlbum;
@property(readonly, nonatomic) _Bool isMultipleContributorCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isFamilyCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isOwnedCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isInTrash;
@property(readonly, nonatomic) _Bool isFolder;
@property(readonly, nonatomic) _Bool isStandInAlbum;
@property(readonly, nonatomic) _Bool isPendingPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isCloudSharedAlbum;
@property(readonly, nonatomic) _Bool isPhotoStreamAlbum;
@property(readonly, nonatomic) _Bool isWallpaperAlbum;
@property(readonly, nonatomic) _Bool isPanoramasAlbum;
@property(readonly, nonatomic) _Bool isCameraAlbum;
@property(readonly, nonatomic) _Bool isLibrary;
@property(readonly, retain, nonatomic) UIImage *posterImage;
@property(nonatomic) _Bool hasUnseenContentBoolValue;
@property(readonly, retain, nonatomic) NSMutableOrderedSet *mutableAssets;
@property(readonly, nonatomic) int kindValue;
@property(readonly, retain, nonatomic) NSNumber *kind;
- (void)batchFetchAssets:(NSOrderedSet *)arg1;
- (void)reducePendingItemsCountBy:(unsigned long long)arg1;

@optional
@property(readonly, copy, nonatomic) NSString *name;
- (void)setUINotificationsEnabled:(_Bool)arg1;
- (NSMutableIndexSet *)filteredIndexesForPredicate:(NSPredicate *)arg1;
@end

@protocol PLAssetContainer <NSObject, PLDiagnosticsProvider>
@property(readonly, copy, nonatomic) NSArray *localizedLocationNames;
@property(readonly, nonatomic) _Bool canShowAvalancheStacks;
@property(readonly, nonatomic) _Bool canShowComments;
@property(retain, nonatomic) PLManagedAsset *tertiaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *secondaryKeyAsset;
@property(retain, nonatomic) PLManagedAsset *keyAsset;
@property(readonly, nonatomic) _Bool isEmpty;
@property(readonly, nonatomic) unsigned long long videosCount;
@property(readonly, nonatomic) unsigned long long photosCount;
@property(readonly, nonatomic) unsigned long long assetsCount;
@property(readonly, nonatomic) unsigned long long approximateCount;
@property(readonly, retain, nonatomic) NSOrderedSet *assets;
@property(readonly, copy, nonatomic) NSString *localizedTitle;
@property(readonly, retain, nonatomic) NSString *title;
@property(readonly, retain, nonatomic) NSString *uuid;
- (_Bool)canPerformEditOperation:(unsigned long long)arg1;

@optional
@property(readonly, retain, nonatomic) NSDate *endDate;
@property(readonly, retain, nonatomic) NSDate *startDate;
@end

@protocol PLCloudCommentsChangeObserver
- (void)cloudCommentsDidChange:(PLCloudCommentsChangeNotification *)arg1;
@end

@protocol PLCloudFeedNavigating <NSObject>
- (_Bool)cloudFeedInvitationForAlbumIsAvailableForNavigation:(PLCloudSharedAlbum *)arg1;
- (_Bool)cloudFeedCommentIsAvailableForNavigation:(PLCloudSharedComment *)arg1;
- (_Bool)cloudFeedAssetIsAvailableForNavigation:(PLManagedAsset *)arg1;
@end

@protocol PLCommentsViewControllerDelegate <NSObject>

@optional
- (void)commentsControllerWillBeginScrolling:(PLCommentsViewController *)arg1;
- (void)commentsControllerDidDisplayUnreadComment:(PLCommentsViewController *)arg1;
- (void)commentsControllerDidExitEditMode:(PLCommentsViewController *)arg1;
- (void)commentsControllerWillEnterEditMode:(PLCommentsViewController *)arg1;
- (void)commentsControllerInactiveAreaWasTapped:(PLCommentsViewController *)arg1;
@end

@protocol PLComposeRecipientViewControllerDelegate <NSObject>
- (UINavigationController *)backingNavigationControllerForComposeRecipientViewController:(PLComposeRecipientViewController *)arg1;

@optional
- (void)composeRecipientViewControllerRecipientContainerViewDidResize:(PLComposeRecipientViewController *)arg1 fromFrame:(struct CGRect)arg2 toFrame:(struct CGRect)arg3;
- (void)composeRecipientViewControllerReturnKeyPressed:(PLComposeRecipientViewController *)arg1;
@end

@protocol PLConfigurableNavigationDisplayOptions <NSObject>
@property(copy) NSString *customTitle;
@property(retain) UIView *customTitleView;
@end

@protocol PLDataArrayInputStreamProgressDelegate
- (void)dataArrayInputStreamBytesWereRead:(PLDataArrayInputStream *)arg1;
@end

@protocol PLDiagnosticsProvider <NSObject>

@optional
- (NSString *)diagnosticInformation;
- (_Bool)supportsDiagnosticInformation;
@end

@protocol PLDismissableViewController <NSObject>
- (_Bool)prepareForDismissingForced:(_Bool)arg1;
@end

@protocol PLExpandableViewDelegate <NSObject>

@optional
- (void)expandableView:(PLExpandableView *)arg1 expansionFractionChanged:(float)arg2;
- (void)expandableViewDidCancelCollapsing:(PLExpandableView *)arg1;
- (void)expandableView:(PLExpandableView *)arg1 willCancelCollapsingWithDuration:(double)arg2;
- (void)expandableViewDidCompleteCollapsing:(PLExpandableView *)arg1;
- (void)expandableView:(PLExpandableView *)arg1 willCompleteCollapsingWithDuration:(double)arg2;
- (void)expandableViewDidBeginCollapsing:(PLExpandableView *)arg1;
- (void)expandableViewDidCancelExpanding:(PLExpandableView *)arg1;
- (void)expandableView:(PLExpandableView *)arg1 willCancelExpandingWithDuration:(double)arg2;
- (void)expandableViewDidCompleteExpanding:(PLExpandableView *)arg1;
- (void)expandableView:(PLExpandableView *)arg1 willCompleteExpandingWithDuration:(double)arg2;
- (void)expandableViewWillBeginExpanding:(PLExpandableView *)arg1;
@end

@protocol PLImageAdjustmentViewDelegate <NSObject>
- (void)editViewDidTouchImage:(PLImageAdjustmentView *)arg1 location:(struct CGPoint)arg2;
- (void)editViewDidCropImage:(PLImageAdjustmentView *)arg1;
- (void)editViewWillCropImage:(PLImageAdjustmentView *)arg1;
@end

@protocol PLImageLoadingQueueDelegate <NSObject>
- (void)imageLoadingQueue:(PLImageLoadingQueue *)arg1 didLoadImage:(PLCachedImage *)arg2 forAsset:(PLManagedAsset *)arg3 fromSource:(PLImageSource *)arg4;
@end

@protocol PLInvitationRecordsObserver
- (void)invitationRecordsDidChange:(PLInvitationRecordsChangeNotification *)arg1;
@end

@protocol PLModalDimmingContained
- (struct CGPoint)preferredOffsetInParentViewController;
- (struct CGSize)preferredSizeInParentViewController;
@end

@protocol PLMoviePlayerControllerDelegate <NSObject>
- (void)moviePlayerHeadsetPreviousTrackPressed:(PLMoviePlayerController *)arg1;
- (void)moviePlayerHeadsetNextTrackPressed:(PLMoviePlayerController *)arg1;
- (void)moviePlayerHeadsetPlayPausePressed:(PLMoviePlayerController *)arg1;
- (NSDictionary *)moviePlayerRequestsPickedAirplayRoute:(PLMoviePlayerController *)arg1;
- (void)moviePlayerDidChangeExternalPlaybackType:(PLMoviePlayerController *)arg1;
- (_Bool)moviePlayerControllerShouldAllowExternalPlayback:(PLMoviePlayerController *)arg1;
- (void)moviePlayerEncounteredAuthenticationError:(PLMoviePlayerController *)arg1;
- (void)moviePlayerWasSuspendedDuringPlayback:(PLMoviePlayerController *)arg1;
- (void)moviePlayerUpdatedDestinationPlaceholder:(PLMoviePlayerController *)arg1;
- (void)moviePlayerDurationAvailable:(PLMoviePlayerController *)arg1;
- (void)moviePlayerPlaybackDidEnd:(PLMoviePlayerController *)arg1;
- (void)moviePlayerPlaybackRateDidChange:(PLMoviePlayerController *)arg1;
- (void)moviePlayerPlaybackStateDidChange:(PLMoviePlayerController *)arg1 fromPlaybackState:(unsigned long long)arg2;
- (void)moviePlayerBufferingStateDidChange:(PLMoviePlayerController *)arg1;
- (void)moviePlayerReadyToDisplay:(PLMoviePlayerController *)arg1;
- (void)moviePlayerReadyToPlay:(PLMoviePlayerController *)arg1;
- (_Bool)moviePlayerExitRequest:(PLMoviePlayerController *)arg1 exitReason:(int)arg2;
- (void)moviePlayerControllerWillResignAsActiveController:(PLMoviePlayerController *)arg1;
- (void)moviePlayerControllerDidBecomeActiveController:(PLMoviePlayerController *)arg1;
@end

@protocol PLPhotoCommentEntryViewDelegate <NSObject>
- (void)photoCommentEntryViewHeightDidChange:(PLPhotoCommentEntryView *)arg1;
@end

@protocol PLPhotoScrubberDataSource
- (UIImage *)photoScrubber:(PLPhotoScrubber *)arg1 loadImageSynchronously:(_Bool)arg2 atIndex:(long long)arg3 forLoupe:(_Bool)arg4;
- (long long)numPhotosInAlbumForPhotoScrubber:(PLPhotoScrubber *)arg1;
@end

@protocol PLPhotoScrubberSpeedDelegate <NSObject>
- (void)photoScrubber:(PLPhotoScrubber *)arg1 scrubbingSpeedDidChange:(long long)arg2;
@end

@protocol PLPhotoTileCloudPlaceholderViewDelegate <NSObject>
- (void)retryDownload;
@end

@protocol PLPhotoTileViewControllerDelegate <NSObject>
- (void)photoTileViewControllerDidEndGesture:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewControllerWillBeginGesture:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewControllerDoubleTap:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewControllerSingleTap:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewControllerCancelImageRequests:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewControllerRequestsFullSizeImage:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewControllerRequestsFullScreenImage:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewController:(PLPhotoTileViewController *)arg1 didDisappear:(_Bool)arg2;
- (void)photoTileViewController:(PLPhotoTileViewController *)arg1 didAppear:(_Bool)arg2;
- (void)photoTileViewController:(PLPhotoTileViewController *)arg1 willAppear:(_Bool)arg2;

@optional
- (UIView *)photoTileViewControllerCustomCenterOverlay:(PLPhotoTileViewController *)arg1;
- (_Bool)photoTileViewControllerCanShowCenterOverlay:(PLPhotoTileViewController *)arg1;
- (void)photoTileViewController:(PLPhotoTileViewController *)arg1 commentsControllerWillBeginScrolling:(PLCommentsViewController *)arg2;
- (void)photoTileViewController:(PLPhotoTileViewController *)arg1 didExitEditModeInCommentsController:(PLCommentsViewController *)arg2;
- (void)photoTileViewController:(PLPhotoTileViewController *)arg1 willEnterEditModeInCommentsController:(PLCommentsViewController *)arg2;
- (_Bool)isPhotoTileParentPageControllerAnimating:(PLPhotoTileViewController *)arg1;
- (_Bool)photoTileViewControllerAllowsEditing:(PLPhotoTileViewController *)arg1;
@end

@protocol PLRootLibraryNavigationController <NSObject, PLCloudFeedNavigating>
- (_Bool)cloudFeedIsAvailableForNavigation;
- (_Bool)commentIsAvailableForNavigation:(PLCloudSharedComment *)arg1 inAsset:(PLManagedAsset *)arg2;
- (_Bool)assetIsAvailableForNavigation:(PLManagedAsset *)arg1 inAlbum:(struct NSObject *)arg2;
- (_Bool)albumIsAvailableForNavigation:(struct NSObject *)arg1;
- (_Bool)contentModeIsAvailableForNavigation:(int)arg1;
- (void)navigateToComment:(PLCloudSharedComment *)arg1 forAsset:(PLManagedAsset *)arg2 animated:(_Bool)arg3;
- (void)navigateToRevealAsset:(PLManagedAsset *)arg1 inAlbum:(struct NSObject *)arg2 animated:(_Bool)arg3;
- (void)navigateToAsset:(PLManagedAsset *)arg1 inAlbum:(struct NSObject *)arg2 animated:(_Bool)arg3;
- (void)navigateToRevealAlbum:(struct NSObject *)arg1 initiallyHidden:(_Bool)arg2 animated:(_Bool)arg3;
- (void)navigateToAlbum:(struct NSObject *)arg1 animated:(_Bool)arg2 completion:(void (^)(UIViewController *))arg3;
- (void)navigateToRevealCloudFeedInvitationForAlbum:(PLCloudSharedAlbum *)arg1 completion:(void (^)(UIViewController *))arg2;
- (void)navigateToCloudFeedComment:(PLCloudSharedComment *)arg1 completion:(void (^)(UIViewController *))arg2;
- (void)navigateToRevealCloudFeedComment:(PLCloudSharedComment *)arg1 completion:(void (^)(UIViewController *))arg2;
- (void)navigateToCloudFeedAsset:(PLManagedAsset *)arg1 completion:(void (^)(UIViewController *))arg2;
- (void)navigateToRevealCloudFeedAsset:(PLManagedAsset *)arg1 completion:(void (^)(UIViewController *))arg2;
- (void)navigateToCloudFeedWithCompletion:(void (^)(UIViewController *))arg1;
- (void)navigateToAsset:(PLManagedAsset *)arg1 animated:(_Bool)arg2;
- (void)navigateToContentMode:(int)arg1 animated:(_Bool)arg2 completion:(void (^)(_Bool))arg3;
@end

@protocol PLSlalomRegionEditorDelegate <NSObject>
- (void)slalomRegionEditorRequestForceUnzoom:(PLSlalomRegionEditor *)arg1;
- (_Bool)slalomRegionEditorRequestForceZoom:(PLSlalomRegionEditor *)arg1;
- (void)slalomRegionEditorEndValueChanged:(PLSlalomRegionEditor *)arg1;
- (void)slalomRegionEditorStartValueChanged:(PLSlalomRegionEditor *)arg1;
- (void)slalomRegionEditorDidEndEditing:(PLSlalomRegionEditor *)arg1;
- (void)slalomRegionEditorDidBeginEditing:(PLSlalomRegionEditor *)arg1 withStartHandle:(_Bool)arg2;
@end

@protocol PLSlideshowPluginDelegate
- (void)slideshowPluginDidDisplayFinalImage:(PLSlideshowPlugin *)arg1;
- (void)slideshowPluginReadyToBegin:(PLSlideshowPlugin *)arg1;
@end

@protocol PLTilePlaceholderView <NSObject>
- (void)setToolbarVisible:(_Bool)arg1;
- (void)setImageRect:(struct CGRect)arg1;
- (void)updateCloudDownloadProgress:(double)arg1;
- (void)showLoadingIndicator;
- (void)showErrorIndicator;
- (void)showLoadingIndicatorWhenReady;
- (void)fadeOutSoonIfNeededAndRemoveFromSuperview:(_Bool)arg1;
@end

@protocol PLUserEditableAlbumProtocol <PLAlbumProtocol>
@property(readonly, retain, nonatomic) NSMutableOrderedSet *userEditableAssets;
- (void)insertInternalUserEditableAssets:(NSArray *)arg1 atIndexes:(NSIndexSet *)arg2 trimmedVideoPathInfo:(NSDictionary *)arg3 commentText:(NSString *)arg4;
@end

@protocol PLVideoOverlayButton
- (void)setTarget:(id)arg1 action:(SEL)arg2;
- (long long)style;
@end

@protocol PLVideoViewDelegate <NSObject>

@optional
- (NSDictionary *)videoViewRequestsPickedAirplayRoute:(PLVideoView *)arg1;
- (_Bool)videoViewCanCreateMetadata:(PLVideoView *)arg1;
- (_Bool)videoViewShouldRespondToPlayOverlayTap:(PLVideoView *)arg1;
- (void)videoView:(PLVideoView *)arg1 displayPlayOverlay:(UIView *)arg2;
- (void)videoViewDidCancelEditing:(PLVideoView *)arg1;
- (void)videoViewDidBeginEditing:(PLVideoView *)arg1;
- (void)videoViewWillBeginEditing:(PLVideoView *)arg1;
- (void)videoView:(PLVideoView *)arg1 remakingProgressDidChange:(float)arg2;
- (void)videoViewDidEndRemaking:(PLVideoView *)arg1 didSucceed:(_Bool)arg2;
- (void)videoViewDidBeginRemaking:(PLVideoView *)arg1;
- (void)videoViewDidEndScrubbing:(PLVideoView *)arg1;
- (void)videoViewDidBeginScrubbing:(PLVideoView *)arg1;
- (void)videoViewDidEndPlayback:(PLVideoView *)arg1 didFinish:(_Bool)arg2;
- (void)videoViewDidPausePlayback:(PLVideoView *)arg1;
- (void)videoViewDidBeginPlayback:(PLVideoView *)arg1;
- (void)videoViewPlaybackDidFail:(PLVideoView *)arg1;
- (void)videoViewIsReadyToBeginPlayback:(PLVideoView *)arg1;
- (_Bool)videoViewCanBeginPlayback:(PLVideoView *)arg1;
- (double)videoViewScrubberWidth:(PLVideoView *)arg1;
- (double)videoViewScrubberYOrigin:(PLVideoView *)arg1 forOrientation:(long long)arg2;
- (void)videoViewDidCreateAttachments:(PLVideoView *)arg1;
@end

@protocol SBFLegibilitySettingsProviderDelegate
- (void)providerLegibilitySettingsChanged:(id <SBFLegibilitySettingsProvider>)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIImagePickerCameraViewController <NSObject>
- (void)_stopVideoCapture;
- (_Bool)_startVideoCapture;
- (void)_setCameraFlashMode:(long long)arg1;
- (long long)_cameraFlashMode;
- (void)_setCameraCaptureMode:(long long)arg1;
- (long long)_cameraCaptureMode;
- (void)_setCameraDevice:(long long)arg1;
- (long long)_cameraDevice;
- (void)_takePicture;
- (void)_setCameraViewTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)_cameraViewTransform;
- (void)_setCameraOverlayView:(UIView *)arg1;
- (UIView *)_cameraOverlayView;
- (void)_setShowsCameraControls:(_Bool)arg1;
- (_Bool)_showsCameraControls;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UIMovieScrubberDataSource <NSObject>
- (void)movieScrubber:(UIMovieScrubber *)arg1 requestThumbnailImageForTimestamp:(NSNumber *)arg2;
- (double)movieScrubberThumbnailAspectRatio:(UIMovieScrubber *)arg1;
- (NSArray *)movieScrubber:(UIMovieScrubber *)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(NSNumber *)arg3 endingAt:(NSNumber *)arg4;
- (double)movieScrubberDuration:(UIMovieScrubber *)arg1;

@optional
- (void)movieScrubber:(UIMovieScrubber *)arg1 requestThumbnailImageForTimestamp:(NSNumber *)arg2 isSummaryThumbnail:(_Bool)arg3;
@end

@protocol UIMovieScrubberDelegate <NSObject>

@optional
- (void)movieScrubberDidEndAnimatingZoom:(UIMovieScrubber *)arg1;
- (void)movieScrubberDidBeginAnimatingZoom:(UIMovieScrubber *)arg1;
- (void)movieScrubber:(UIMovieScrubber *)arg1 willZoomToMinimumValue:(double)arg2 maximumValue:(double)arg3;
- (void)movieScrubberEditingAnimationFinished:(UIMovieScrubber *)arg1;
- (void)movieScrubberDidCancelEditing:(UIMovieScrubber *)arg1;
- (void)movieScrubberDidBeginEditing:(UIMovieScrubber *)arg1;
- (void)movieScrubberWillBeginEditing:(UIMovieScrubber *)arg1;
- (void)movieScrubberDidFinishRequestingThumbnails:(UIMovieScrubber *)arg1;
- (void)movieScrubberWillBeginRequestingThumbnails:(UIMovieScrubber *)arg1;
- (void)movieScrubber:(UIMovieScrubber *)arg1 widthDelta:(float)arg2 originXDelta:(float)arg3;
- (void)movieScrubberDidEndScrubbing:(UIMovieScrubber *)arg1 withHandle:(int)arg2;
- (void)movieScrubberDidBeginScrubbing:(UIMovieScrubber *)arg1 withHandle:(int)arg2;
- (void)movieScrubber:(UIMovieScrubber *)arg1 editingEndValueDidChange:(double)arg2;
- (void)movieScrubber:(UIMovieScrubber *)arg1 editingStartValueDidChange:(double)arg2;
- (void)movieScrubber:(UIMovieScrubber *)arg1 valueDidChange:(double)arg2;
@end

@protocol UINavigationBarDelegate <UIBarPositioningDelegate>

@optional
- (void)navigationBar:(UINavigationBar *)arg1 didPopItem:(UINavigationItem *)arg2;
- (_Bool)navigationBar:(UINavigationBar *)arg1 shouldPopItem:(UINavigationItem *)arg2;
- (void)navigationBar:(UINavigationBar *)arg1 didPushItem:(UINavigationItem *)arg2;
- (_Bool)navigationBar:(UINavigationBar *)arg1 shouldPushItem:(UINavigationItem *)arg2;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPageControllerDelegate <NSObject>

@optional
- (void)pageControllerDidEndPaging:(UIPageController *)arg1;
- (void)pageControllerWillBeginPaging:(UIPageController *)arg1;
- (UIViewController *)pageController:(UIPageController *)arg1 viewControllerRightOfController:(UIViewController *)arg2;
- (UIViewController *)pageController:(UIPageController *)arg1 viewControllerLeftOfController:(UIViewController *)arg2;
- (UIViewController *)pageController:(UIPageController *)arg1 viewControllerAtIndex:(long long)arg2;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol _UIBackdropViewObserver
- (void)backdropViewDidChange:(_UIBackdropView *)arg1;
@end

@interface CAAnimation (PhotoLibraryAdditions)
- (void)performCompletionBlock:(_Bool)arg1;
@property(copy, nonatomic) CDUnknownBlockType completionBlock;
@property(nonatomic) int animationID;
@end

@interface ICCameraFile (PLCameraImportItem)
- (id)parentFolderName;
- (id)fileExtension;
- (id)importIdentifier;
@end

@interface ICCameraItem (PLCameraImportItem)
- (_Bool)isCameraFile;
@end

@interface ICDevice (PLCameraImporter)
- (_Bool)isCameraDevice;
@end

@interface NSAttributedString (PLAdditions)
+ (id)pl_stringWithFormat:(id)arg1 defaultAttributes:(id)arg2 arguments:(id)arg3;
@end

@interface NoRasterization : CALayer
{
}

- (void)setShouldRasterize:(_Bool)arg1;

@end

@interface PLAVPlayerView : UIView
{
    unsigned long long _scaleMode;
}

+ (Class)layerClass;
@property(nonatomic) unsigned long long scaleMode; // @synthesize scaleMode=_scaleMode;
- (void)setScaleMode:(unsigned long long)arg1 duration:(double)arg2;
@property(retain, nonatomic) AVPlayer *player;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, retain, nonatomic) AVPlayerLayer *layer;

@end

@interface PLPlayingExternallyBackgroundView : UIView
{
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    UIImageView *_imageView;
    struct UIEdgeInsets _edgeInsets;
}

@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
- (void)_updateSizeForLabel:(id)arg1;
- (id)_newLabelWithText:(id)arg1 withFont:(id)arg2;
- (void)layoutSubviews;
- (void)setMessage:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLAirPlayBackgroundView : PLPlayingExternallyBackgroundView
{
    NSString *_deviceName;
}

@property(retain, nonatomic) NSString *deviceName; // @synthesize deviceName=_deviceName;
- (void)setIsMovie:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 deviceName:(id)arg2;

@end

@interface PLAirPlayController : NSObject
{
}

+ (id)routeIDForAirplayRoute:(id)arg1;
+ (id)routeNameForAirplayRoute:(id)arg1;

@end

@interface PLAirPlaySession : NSObject
{
    id <PLAirPlaySessionDataSource> _dataSource;
    NSMutableArray *_streamedPhotoUuids;
    NSDictionary *_pickedRoute;
    MediaControlClient *_mediaControlClient;
    AirPlayRemoteSlideshow *_remoteSlideshow;
    _Bool _streamingPhotos;
    _Bool _streamingRemoteSlideshow;
    _Bool _streamingLocalSlideShow;
    _Bool _sentPhoto;
    _Bool _supportsPhotoCaching;
}

+ (void)endNetworkAssertion;
+ (void)beginNetworkAssertion;
+ (_Bool)canDisplayMedia:(id)arg1;
@property(nonatomic) id <PLAirPlaySessionDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) _Bool streamingLocalSlideShow; // @synthesize streamingLocalSlideShow=_streamingLocalSlideShow;
- (void)stopRemoteSlideshow;
- (void)startRemoteSlideshowWithTheme:(id)arg1 remoteSlideshowDelegate:(id)arg2;
- (_Bool)supportsRemoteSlideshow;
- (id)_fixLegacyEvent:(id)arg1;
- (_Bool)_streaming;
- (void)streamPhoto:(id)arg1 withTransition:(id)arg2;
- (void)invalidatePhotoCache;
- (void)_streamPhotosAdjacentToPhoto:(id)arg1 withTransition:(id)arg2;
- (void)_streamPhoto:(id)arg1 withTransition:(id)arg2 andAction:(id)arg3;
- (void)stopStreaming;
- (void)_reallySendPhotoData:(id)arg1 forPhotoWithUUID:(id)arg2 withTransition:(id)arg3 andAction:(id)arg4;
- (_Bool)_shouldCachePhotos;
- (id)pickedRouteName;
- (id)pickedRouteID;
- (void)dealloc;
- (id)initWithPickedRoute:(id)arg1 mediaControlClient:(id)arg2 airplayRemoteSlideshow:(id)arg3;

@end

@interface PLAirTunesServicePickerCell : UITableViewCell
{
}

- (void)layoutSubviews;

@end

@interface PLAirTunesServicePickerViewController : UIViewController <UITableViewDelegate, UITableViewDataSource>
{
    id _delegate;
    UITableView *_table;
    NSDictionary *_selectedRoute;
    NSArray *_availableRoutes;
}

@property(retain, nonatomic) NSArray *availableRoutes; // @synthesize availableRoutes=_availableRoutes;
@property(nonatomic) id <PLAirTunesServicePickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)_indexofRouteWithRouteID:(id)arg1;
- (void)_setCell:(id)arg1 checked:(_Bool)arg2;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithAvailableAirplayRoutes:(id)arg1 previouslySelectedRoute:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLAlbumStreamingOptionsViewController : UIViewController <PLComposeRecipientViewControllerDelegate, PLInvitationRecordsObserver, UITableViewDataSource, UITableViewDelegate>
{
    NSArray *_visibleInvitationRecords;
    NSString *_visiblePublicURL;
    _Bool _showShareLink;
    PLCloudSharedAlbum *_album;
    id <PLAlbumStreamingOptionsViewControllerDelegate> _delegate;
    PLComposeRecipientViewController *_composeRecipientController;
    UIBarButtonItem *_cancelButton;
    UIBarButtonItem *_doneButton;
    UITableView *_optionsTableView;
    UISwitch *_wantsPublicWebsiteSwitch;
    UISwitch *_wantsMultipleContributorsSwitch;
    UISwitch *_wantsAcceptCloudNotificationSwitch;
    _Bool _adjustedInsetsForKeyboard;
    unsigned long long _addSubscribersRow;
    NSOperationQueue *_familyRequestQueue;
    ACAccountStore *_familyAccountStore;
    NSArray *_familyMembers;
    AAUIProfilePictureStore *_familyMemberPictureStore;
    NSMutableDictionary *_familyProfilePictures;
    _Bool _isPresentedModally;
    _Bool _streamOwner;
    _Bool __shouldScrollToTopOnNextViewLayout;
    _Bool _albumIsFamilyStream;
    NSString *_albumName;
    PLCloudSharedAlbumInvitationRecord *__selectedSubscriberInvitationRecord;
    NSString *__lastPublicURLSectionFooterTitle;
    NSString *__lastMultiContributorsSectionFooterTitle;
}

@property(nonatomic) _Bool albumIsFamilyStream; // @synthesize albumIsFamilyStream=_albumIsFamilyStream;
@property(copy, nonatomic, setter=_setLastMultiContributorsSectionFooterTitle:) NSString *_lastMultiContributorsSectionFooterTitle; // @synthesize _lastMultiContributorsSectionFooterTitle=__lastMultiContributorsSectionFooterTitle;
@property(copy, nonatomic, setter=_setLastPublicURLSectionFooterTitle:) NSString *_lastPublicURLSectionFooterTitle; // @synthesize _lastPublicURLSectionFooterTitle=__lastPublicURLSectionFooterTitle;
@property(nonatomic, setter=_setShouldScrollToTopOnNextViewLayout:) _Bool _shouldScrollToTopOnNextViewLayout; // @synthesize _shouldScrollToTopOnNextViewLayout=__shouldScrollToTopOnNextViewLayout;
@property(retain, nonatomic, setter=_setSelectedSubscriberInvitationRecord:) PLCloudSharedAlbumInvitationRecord *_selectedSubscriberInvitationRecord; // @synthesize _selectedSubscriberInvitationRecord=__selectedSubscriberInvitationRecord;
@property(nonatomic) _Bool streamOwner; // @synthesize streamOwner=_streamOwner;
@property(copy, nonatomic) NSString *albumName; // @synthesize albumName=_albumName;
@property(nonatomic) _Bool isPresentedModally; // @synthesize isPresentedModally=_isPresentedModally;
@property(retain, nonatomic) PLCloudSharedAlbum *album; // @synthesize album=_album;
@property(nonatomic) id <PLAlbumStreamingOptionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)backingNavigationControllerForComposeRecipientViewController:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)invitationRecordsDidChange:(id)arg1;
- (void)_removeSelectedSubscriber;
- (void)_displayConfirmationForRemovalOfSelectedSubscriber;
- (void)_resendInvitationToSelectedSubscriber;
- (void *)_personMatchingEmail:(id)arg1 orPhone:(id)arg2 matchingProperty:(out int *)arg3 matchingValueIdentifier:(out int *)arg4;
- (id)_newPersonViewControllerWithEmail:(id)arg1 phone:(id)arg2 firstName:(id)arg3 lastName:(id)arg4 canResendInvitation:(_Bool)arg5 canRemoveSubscriber:(_Bool)arg6;
- (void)_updateMultipleContributorsState;
- (void)_updatePublicURLStateIfNecessaryAnimated:(_Bool)arg1;
- (id)_visibleInvitationRecordsForStreamOwner:(_Bool)arg1;
- (void)_setShowingMultipleContributorSpinner:(_Bool)arg1;
- (void)_setShowingPublicURLActivitySpinner:(_Bool)arg1;
- (_Bool)_shouldShowPublicURLActivitySpinner;
- (_Bool)_multipleContributorsEnabled;
- (_Bool)_publicURLEnabled;
- (void)_displayActivitySheet;
- (void)_displayDeleteConfirmation:(id)arg1;
- (void)_displayConfirmationWithMessage:(id)arg1 destructiveTitle:(id)arg2 actionHandler:(CDUnknownBlockType)arg3;
- (void)_deletePhotoStream;
- (void)_keyboardDidHide:(id)arg1;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_changeWantsMultipleContributors:(id)arg1;
- (void)_changeWantsAcceptCloudNotification:(id)arg1;
- (void)_changeWantsPublicWebsite:(id)arg1;
- (void)_doneAction:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)_handleCompletionWithReason:(int)arg1;
- (id)_suppresionContexts;
- (_Bool)_appAllowsSupressionOfAlerts;
- (struct CGSize)contentSizeForViewInPopover;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidUnload;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)_updateWantsMultipleContributorsField;
- (void)_updateWantsAcceptCloudNotificationField;
- (void)_updateWantsPublicWebsiteField;
- (void)_updateAllControls;
- (void)dealloc;
- (id)initWithAlbum:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLAlertUtils : NSObject
{
}

+ (void)presentWifiModePromptOnViewController:(id)arg1;
+ (void)presentAirplaneModePromptOnViewController:(id)arg1;
+ (void)presentDownloadErrorAlertOnViewController:(id)arg1 withMessage:(id)arg2;
+ (id)_wifiMessageForKey:(id)arg1;

@end

@interface PLAssetContainerDataSource : NSObject <PHAssetCollectionDataSource>
{
    PHFetchResult *_assetCollectionsFetchResult;
    NSMutableDictionary *_assetsFetchResultByAssetCollection;
    unsigned long long _allAssetsCount;
    unsigned long long *_containerCounts;
    _Bool _cachedValuesNeedUpdate;
    unsigned long long _lastAssetCollectionIndex;
}

@property(readonly, nonatomic) PHFetchResult *assetCollectionsFetchResult; // @synthesize assetCollectionsFetchResult=_assetCollectionsFetchResult;
@property(readonly, copy) NSString *description;
- (void)viewControllerPhotoLibraryDidChange:(id)arg1;
- (id)pl_fetchAllAssets;
- (id)assetInAssetContainer:(id)arg1 atIndex:(unsigned long long)arg2;
- (unsigned long long)assetCountForContainerAtIndex:(unsigned long long)arg1;
- (unsigned long long)assetCountForContainer:(id)arg1;
- (id)decrementAssetIndexPath:(id)arg1 insideCurrentAssetContainer:(_Bool)arg2 andWrap:(_Bool)arg3;
- (id)incrementAssetIndexPath:(id)arg1 insideCurrentAssetContainer:(_Bool)arg2 andWrap:(_Bool)arg3;
- (unsigned long long)_indexOfPreviousNonEmptyAssetContainerBeforeContainerIndex:(unsigned long long)arg1 wrap:(_Bool)arg2;
- (unsigned long long)_indexOfNextNonEmptyAssetContainerAfterContainerIndex:(unsigned long long)arg1 wrap:(_Bool)arg2;
- (id)findNearestIndexPath:(id)arg1 preferNext:(_Bool)arg2;
- (_Bool)hasAssetAtIndexPath:(id)arg1;
- (id)lastAssetIndexPath;
- (id)firstAssetIndexPath;
- (unsigned long long)indexOfContainer:(id)arg1;
- (id)assetContainerAtIndex:(unsigned long long)arg1;
- (id)indexPathOfAsset:(id)arg1;
- (id)assetAtIndexPath:(id)arg1;
- (id)assetsInAssetCollection:(id)arg1;
- (id)assetsInAssetCollectionAtIndex:(unsigned long long)arg1;
- (id)assetWithObjectID:(id)arg1;
- (unsigned long long)indexOffsetForAssetContainerAtAssetIndex:(unsigned long long)arg1;
- (unsigned long long)globalIndexOfAsset:(id)arg1;
- (id)assetAtGlobalIndex:(unsigned long long)arg1;
- (unsigned long long)decrementGlobalIndex:(unsigned long long)arg1 insideCurrentAssetContainer:(_Bool)arg2 andWrap:(_Bool)arg3;
- (unsigned long long)incrementGlobalIndex:(unsigned long long)arg1 insideCurrentAssetContainer:(_Bool)arg2 andWrap:(_Bool)arg3;
- (id)indexPathForGlobalIndex:(unsigned long long)arg1;
- (unsigned long long)globalIndexForIndexPath:(id)arg1;
- (id)assetContainerForAssetGlobalIndex:(unsigned long long)arg1;
- (id)assetContainerForAsset:(id)arg1;
- (unsigned long long)allAssetsCount;
- (void)_updateCachedCount:(unsigned long long)arg1 forContainerAtContainerIndex:(unsigned long long)arg2;
- (void)_updateCachedValues;
- (void)dealloc;
- (id)initWithAssetCollectionsFetchResult:(id)arg1 collectionsAssetsFetchResults:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLAssetImageGenerator : NSObject
{
    _Bool _inUse;
    AVAssetImageGenerator *_imageGenerator;
}

@property(nonatomic) _Bool inUse; // @synthesize inUse=_inUse;
@property(retain, nonatomic) AVAssetImageGenerator *imageGenerator; // @synthesize imageGenerator=_imageGenerator;
- (void)dealloc;
- (id)initWithAsset:(id)arg1;

@end

@interface PLAutoScroller : NSObject
{
    UIScrollView *_targetScrollView;
    struct CGPoint _targetPoint;
    double _thresholdDistance;
    NSTimer *_autoscrollTimer;
}

@property(readonly) double thresholdDistance; // @synthesize thresholdDistance=_thresholdDistance;
@property(nonatomic) struct CGPoint targetPoint; // @synthesize targetPoint=_targetPoint;
- (void)_stopAutoscrollTimer;
- (void)_updateAutoscrollTimer:(id)arg1;
- (void)stopAndInvalidate;
- (void)dealloc;
- (id)initWithTargetScrollView:(id)arg1 thresholdDistance:(double)arg2;
- (id)init;

@end

@interface PLButtonTableViewCell : UITableViewCell
{
    UIButton *_button;
}

@property(retain, nonatomic) UIButton *button; // @synthesize button=_button;

@end

@interface PLCAAnimationDelegate : NSObject
{
    CDUnknownBlockType _completion;
    CDUnknownBlockType _start;
}

@property(copy, nonatomic) CDUnknownBlockType start; // @synthesize start=_start;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animationDidStart:(id)arg1;
- (void)dealloc;

@end

@interface PLCGPathCache : NSObject
{
    struct __CFDictionary *_pathCache;
}

+ (id)sharedPathCache;
- (struct CGPath *)pathForKey:(struct CGRect)arg1;
- (void)setPath:(struct CGPath *)arg1 forKey:(struct CGRect)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLCache : NSObject
{
    NSMutableDictionary *_cacheEntries;
    long long _countLimit;
    long long _currentCount;
    long long _totalCostLimit;
    long long _currentCost;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _lock;
    struct entryList _lru;
}

- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 cost:(long long)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)dealloc;
- (id)initWithCountLimit:(long long)arg1 totalCostLimit:(long long)arg2;

@end

@interface PLCacheEntry : NSObject
{
    id _object;
    struct lruEntry *_entry;
}

- (struct lruEntry *)lruListEntry;
- (id)object;
- (void)setObject:(id)arg1;
- (void)dealloc;

@end

@interface PLCameraImportItem : NSObject
{
    NSString *_identifier;
    NSString *_parentFolder;
    NSString *_basePath;
    NSMutableDictionary *_representationsMapping;
    UIImage *_thumbnail;
    NSData *_thumbnailData;
    int _thumbnailState;
    _Bool _metadataRequested;
    _Bool _thumbnailRequested;
    _Bool _shouldImport;
    NSError *_importError;
    NSString *eventName;
    PLManagedAsset *importedAsset;
}

@property(retain, nonatomic) PLManagedAsset *importedAsset; // @synthesize importedAsset;
@property(retain, nonatomic) NSString *eventName; // @synthesize eventName;
@property(retain, nonatomic) NSError *importError; // @synthesize importError=_importError;
@property(nonatomic) _Bool shouldImport; // @synthesize shouldImport=_shouldImport;
@property(retain, nonatomic) NSData *thumbnailData; // @synthesize thumbnailData=_thumbnailData;
@property(readonly, nonatomic) UIImage *thumbnail; // @synthesize thumbnail=_thumbnail;
@property(retain, nonatomic) NSString *basePath; // @synthesize basePath=_basePath;
@property(readonly, nonatomic) NSString *parentFolder; // @synthesize parentFolder=_parentFolder;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (id)otherExtensions;
- (id)audioExtension;
- (id)movieExtension;
- (id)rawExtension;
- (id)jpgExtension;
- (id)_fileExtensionForTypeWithSelector:(SEL)arg1;
- (id)fileExtensions;
- (_Bool)isStandaloneMovie;
- (_Bool)isStandalonePhoto;
- (_Bool)isAudio;
- (_Bool)isMovie;
- (_Bool)isRaw;
- (_Bool)isJPEG;
- (_Bool)_isTypeWithSelector:(SEL)arg1;
- (unsigned long long)fileSize;
- (id)creationDate;
- (void)markRepresentationsInDatabase;
- (_Bool)isInDatabaseForce:(_Bool)arg1;
- (_Bool)isOnDisk;
- (_Bool)isLocked;
- (void)setThumbnailWithImageRef:(struct CGImage *)arg1;
- (void)clearThumbnail;
- (void)cancelThumbnailRequest;
- (_Bool)canRequestThumbnail;
- (void)requestThumbnail;
- (void)setThumbnailState:(int)arg1;
- (int)thumbnailState;
- (void)clearMetadata;
- (_Bool)hasAllMetadata;
- (id)metadataForRepresentationWithFileExtension:(id)arg1;
- (_Bool)canRequestMetadata;
- (void)requestMetadata;
- (id)representationForCameraFile:(id)arg1;
- (void)removeRepresentationForCameraFile:(id)arg1;
- (void)_removeRepresentation:(id)arg1;
- (void)addRepresentationForCameraFile:(id)arg1;
- (void)_addRepresentation:(id)arg1;
- (id)representations;
- (id)description;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1 parentFolder:(id)arg2;

@end

@interface PLCameraImportItemRepresentation : NSObject
{
    ICCameraFile *_cameraFile;
    NSDictionary *_metadata;
    _Bool _canRequestMetadata;
    _Bool _canRequestThumbnail;
    NSString *_path;
    _Bool _inDatabase;
}

@property(nonatomic) _Bool inDatabase; // @synthesize inDatabase=_inDatabase;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(nonatomic) _Bool canRequestThumbnail; // @synthesize canRequestThumbnail=_canRequestThumbnail;
@property(nonatomic) _Bool canRequestMetadata; // @synthesize canRequestMetadata=_canRequestMetadata;
@property(retain, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) ICCameraFile *cameraFile; // @synthesize cameraFile=_cameraFile;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (_Bool)isAudio;
- (_Bool)isMovie;
- (_Bool)isRaw;
- (_Bool)isJPEG;
- (id)fileExtension;
- (_Bool)isInDatabaseForce:(_Bool)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithCameraFile:(id)arg1;

@end

@interface PLCameraImportManager : NSObject <ICDeviceBrowserDelegate>
{
    ICDeviceBrowser *_deviceBrowser;
    NSMutableArray *_importers;
    NSMutableArray *_importersToEject;
    _Bool _wantsToStopListening;
    id _stopListeningCallbackTarget;
    SEL _stopListeningCallbackSelector;
}

+ (id)sharedCameraImportManager;
@property(retain, nonatomic) NSMutableArray *importers; // @synthesize importers=_importers;
- (void)deviceBrowser:(id)arg1 didRemoveDevice:(id)arg2 moreGoing:(_Bool)arg3;
- (void)deviceBrowser:(id)arg1 didAddDevice:(id)arg2 moreComing:(_Bool)arg3;
- (id)importerMatchingDevice:(id)arg1;
- (void)ejectCameras;
- (void)removeImporter:(id)arg1;
- (void)_cameraImporterDidFinishImporting:(id)arg1;
- (void)addImporter:(id)arg1;
- (void)stopListeningWithCallbackTarget:(id)arg1 selector:(SEL)arg2;
- (void)stopListening;
- (void)_stopListening;
- (unsigned long long)startListening;
- (id)importerForDevice:(id)arg1 withDelegate:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLCameraImportQueue : NSObject
{
    NSMutableArray *_items;
    unsigned long long _index;
}

- (id)itemsNotCompleted;
- (id)completedItems;
- (_Bool)isCompleted;
- (void)didCompleteItem:(id)arg1;
- (id)currentItem;
- (void)_removeItem:(id)arg1;
- (void)setItems:(id)arg1;
- (id)items;
- (id)description;
- (void)dealloc;
- (id)initWithItems:(id)arg1;

@end

@interface PLCameraImporter : NSObject <ICDeviceDelegate, ICCameraDeviceDelegate>
{
    id _delegate;
    NSMutableDictionary *_itemsMapping;
    NSMutableArray *_items;
    PLMutableCameraImportQueue *_thumbnailQueue;
    PLCameraImportQueue *_downloadQueue;
    PLCameraImportQueue *_importQueue;
    PLCameraImportQueue *_deleteQueue;
    NSMutableArray *_orphanItems;
    NSMutableArray *_coalescedDeletedItems;
    _Bool _importInProgress;
    NSMutableDictionary *_parentFolderMapping;
    _Bool _autosplitEvents;
    long long _eventSplitGranularity;
    ICCameraDevice *_camera;
    PLImportFileManager *_importFileManager;
    _Bool _stopAfterNextItemImport;
    _Bool _importItemInProgress;
    _Bool _isAppleDevice;
    NSString *importSessionIdentifier;
}

@property(nonatomic) _Bool isAppleDevice; // @synthesize isAppleDevice=_isAppleDevice;
@property(retain, nonatomic) ICCameraDevice *camera; // @synthesize camera=_camera;
@property(retain, nonatomic) NSMutableArray *items; // @synthesize items=_items;
@property(retain, nonatomic) NSMutableDictionary *itemsMapping; // @synthesize itemsMapping=_itemsMapping;
@property(nonatomic) id <PLCameraImporterDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *importSessionIdentifier; // @synthesize importSessionIdentifier;
- (void)cameraDevice:(id)arg1 didReceiveMetadata:(id)arg2 forItem:(id)arg3 error:(id)arg4;
- (void)cameraDevice:(id)arg1 didReceiveThumbnail:(struct CGImage *)arg2 forItem:(id)arg3 error:(id)arg4;
- (void)cameraDevice:(id)arg1 didRemoveItems:(id)arg2;
- (void)_coalescedRemoveImportItems;
- (void)cameraDevice:(id)arg1 didAddItems:(id)arg2;
- (void)device:(id)arg1 didEncounterError:(id)arg2;
- (void)device:(id)arg1 didCloseSessionWithError:(id)arg2;
- (void)deviceDidBecomeReady:(id)arg1;
- (void)device:(id)arg1 didOpenSessionWithError:(id)arg2;
- (void)didRemoveDevice:(id)arg1;
- (void)_deleteImportItemsFromDiskInBackground:(id)arg1;
- (void)_removeImportItemsAtPathsInBackground:(id)arg1;
- (void)_deleteImportItemFromDisk:(id)arg1;
- (void)_didFinishDeletingItems:(id)arg1;
- (void)removeItems:(id)arg1;
- (void)_deleteImportItems:(id)arg1;
- (void)stopImport;
- (void)_stopImport;
- (void)_didFinishImportingItems:(id)arg1;
- (void)importItems:(id)arg1;
- (void)didReceiveImportNotification:(id)arg1;
- (void)_photoLibraryFinishedImportForPhoto:(id)arg1 atPath:(id)arg2 error:(id)arg3;
- (void)didImportImportItem:(id)arg1 error:(id)arg2;
- (void)importImportItem:(id)arg1;
- (void)_downloadImportItems:(id)arg1;
- (void)_clearImportItemsForDownload:(id)arg1;
- (void)_separateItems:(id)arg1 intoEventsWithGranularity:(long long)arg2;
- (unsigned long long)approximateBytesRequiredToImportItem:(id)arg1;
- (void)didDownloadFile:(id)arg1 error:(id)arg2 options:(id)arg3 contextInfo:(void *)arg4;
- (void)didReceiveThumbnail:(struct CGImage *)arg1 forCameraFile:(id)arg2 error:(id)arg3;
- (void)didReceiveThumbnail:(struct CGImage *)arg1 forImportItem:(id)arg2 error:(id)arg3;
- (void)readThumbnailsForImportItems:(id)arg1;
- (void)didReceiveMetadata:(id)arg1 forCameraFile:(id)arg2 error:(id)arg3;
- (void)readMetadataForImportItems:(id)arg1;
- (void)camaraDidEnumerateContents;
- (void)readImportItems;
- (id)importItemForCameraFile:(id)arg1;
- (void)removeImportItemsForCameraFiles:(id)arg1;
- (void)addImportItemsFromCameraFiles:(id)arg1;
- (void)_addImportItemFromCameraFile:(id)arg1;
- (id)allImportItems;
- (_Bool)isImporting;
- (_Bool)deviceIsLocked;
- (void)cameraDidError:(id)arg1;
- (unsigned long long)contentPercentCompleted;
- (unsigned long long)estimatedNumberOfItems;
- (void)ejectCamera;
- (id)cameraKind;
- (id)cameraName;
- (void)didDisconnectFromCamera:(id)arg1 error:(id)arg2;
- (void)didConnectToCamera:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)initWithDevice:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLCommentsViewController : UIViewController <PLCloudCommentsChangeObserver, PLPhotoCommentEntryViewDelegate, PLDismissableViewController, UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_tableView;
    UIView *_tableContainerView;
    PLManagedAsset *_asset;
    CAGradientLayer *_maskLayer;
    PLPhotoCommentEntryView *_entryView;
    PLCloudSharedComment *_justInsertedComment;
    _Bool _justTappedSmileButton;
    _Bool _editMode;
    _Bool _temporaryKeyboardHideReshow;
    _Bool _shouldAdjustInitialScrollPosition;
    double _keyboardOverlap;
    id <PLCommentsViewControllerDelegate> _commentsControllerDelegate;
    UIView *_containerView;
    NSCache *_commentsHeightCache;
    UIImageView *_gradientView;
    _UIBackdropView *_backdropView;
    UIBarButtonItem *_cancelButton;
    _Bool _isCompact;
    struct CGRect _availableBounds;
}

@property(nonatomic) struct CGRect availableBounds; // @synthesize availableBounds=_availableBounds;
@property(nonatomic) _Bool isCompact; // @synthesize isCompact=_isCompact;
@property(nonatomic) _Bool editMode; // @synthesize editMode=_editMode;
@property(retain, nonatomic) PLCloudSharedComment *justInsertedComment; // @synthesize justInsertedComment=_justInsertedComment;
@property(retain, nonatomic) PLManagedAsset *asset; // @synthesize asset=_asset;
@property(nonatomic) id <PLCommentsViewControllerDelegate> commentsControllerDelegate; // @synthesize commentsControllerDelegate=_commentsControllerDelegate;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)_stopWatchingKeyboard;
- (void)_startWatchingKeyboard;
- (void)_postCommentValidated:(id)arg1;
- (void)cancelCurrentAction:(id)arg1;
- (void)cancelDeleteMode:(id)arg1;
- (_Bool)prepareForDismissingForced:(_Bool)arg1;
- (void)cloudCommentsDidChange:(id)arg1;
- (void)_smileButtonTapped:(id)arg1;
- (_Bool)checkAndAlertMaxLikesReached;
- (void)_addCommentButtonTapped:(id)arg1;
- (_Bool)_checkAndAlertMaxCommentsReachedWhenFinalizing:(_Bool)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)scrollToComment:(id)arg1 animated:(_Bool)arg2;
- (void)tableView:(id)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(id)arg3 withSender:(id)arg4;
- (_Bool)tableView:(id)arg1 shouldShowMenuForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)postCommentSection;
- (long long)textCommentSection;
- (long long)assetOwnerCommentSection;
- (long long)smileCommentSection;
- (_Bool)shouldShowCommentPostingUI;
- (_Bool)showAssetOwnerSection;
- (void)photoCommentEntryViewHeightDidChange:(id)arg1;
- (_Bool)_adjustTextEntrySize;
- (void)_adjustInitialScrollPosition:(_Bool)arg1;
- (id)_firstUnreadCloudComment;
- (void)setRasterization:(_Bool)arg1;
@property(readonly, nonatomic) UIBarButtonItem *cancelButton;
- (void)updateViewLayoutWithDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)_updateLayerMaskWithBoundsChange;
- (void)loadView;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (struct CGSize)_preferredViewSizeInContainerSize:(struct CGSize)arg1 forInterfaceOrientation:(long long)arg2 tableViewSize:(struct CGSize *)arg3;
- (double)_tableViewHeightForWidth:(double)arg1 interfaceOrientation:(long long)arg2;
- (double)_heightForComment:(id)arg1 forWidth:(double)arg2 forInterfaceOrientation:(long long)arg3;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLComposeRecipientViewController : UIViewController <ABPeoplePickerNavigationControllerDelegate, MFContactsSearchConsumer, UITableViewDelegate, UITableViewDataSource, UIPopoverControllerDelegate>
{
    PLComposeRecipientView *_recipientView;
    UIScrollView *_recipientContainerView;
    struct CGRect _keyboardFrame;
    unsigned long long _maxExpandRows;
    id <PLComposeRecipientViewControllerDelegate> _delegate;
    MFContactsSearchManager *_searchManager;
    MFContactsSearchResultsModel *_searchResultsModel;
    MFSearchShadowView *_shadowView;
    NSArray *_searchResults;
    NSNumber *_currentSearchTaskID;
    UITableView *_searchResultsTable;
    UIPopoverController *_searchResultsPopoverController;
    UIPopoverController *_peoplePickerPopoverController;
    struct {
        unsigned int showingPeoplePicker:1;
        unsigned int showingSearchResultsTable:1;
        unsigned int offsettingForResultsTable:1;
        unsigned int wasFirstResponder:1;
    } _flags;
    NSArray *_properties;
}

+ (void)recordRecentInvitationRecipient:(id)arg1 displayName:(id)arg2 date:(id)arg3;
@property(nonatomic) id <PLComposeRecipientViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long maxExpandRows; // @synthesize maxExpandRows=_maxExpandRows;
@property(readonly, nonatomic) PLComposeRecipientView *recipientView; // @synthesize recipientView=_recipientView;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (_Bool)shouldShowCardForPerson:(void *)arg1 peoplePicker:(id)arg2;
- (_Bool)isRecipientViewFirstResponder;
- (void)makeRecipientViewResignFirstResponder;
- (void)makeRecipientViewFirstResponder;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)composeRecipientViewReturnPressed:(id)arg1;
- (id)composeRecipientView:(id)arg1 composeRecipientForRecord:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (id)composeRecipientView:(id)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (id)composeRecipientView:(id)arg1 composeRecipientForAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 showPersonCardForAtom:(id)arg2;
- (void)composeRecipientViewDidFinishPickingRecipient:(id)arg1;
- (_Bool)composeRecipientViewIsShowingPeoplePicker:(id)arg1;
- (void)composeRecipientViewRequestAddRecipient:(id)arg1;
- (void)composeRecipientView:(id)arg1 textDidChange:(id)arg2;
- (void)composeRecipientView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)composeRecipientView:(id)arg1 didFinishEnteringAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 requestDeleteRecipientAtIndex:(int)arg2;
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(id)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(id)arg1 type:(unsigned long long)arg2 taskID:(id)arg3;
- (void)_searchForRecipientWithText:(id)arg1;
- (void)_updateSearchResultsTableVisibility;
- (_Bool)_searchResultsShowInPopover;
- (id)_newShadowView;
- (id)_newSearchResultsTable;
- (void)_setSearchResults:(id)arg1;
- (id)_searchManager;
- (void)_presentSearchResultsPopover;
- (void)_keyboardSizeDidChange:(id)arg1;
- (void)_updateViewsLayoutAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void *)_addressBook;
- (void)_forceDismissPeoplePickerPopover;
- (void)_dismissPeoplePicker:(id)arg1;
- (id)recipients;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidUnload;
- (void)loadView;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLContactPhotoOverlay : UIView
{
    UILabel *_titleLabel;
    UIImageView *__avatarPreview;
}

@property(readonly, nonatomic) UIImageView *_avatarPreview; // @synthesize _avatarPreview=__avatarPreview;
@property(readonly, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void)endAvatarTracking;
- (void)beginAvatarTrackingFromImageView:(id)arg1;
- (struct CGRect)inscribingBounds;
- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPLContactPhotoOverlayInitialization;
@property(readonly, nonatomic) struct UIEdgeInsets overlayEdgeInsets;

@end

@interface PLCropModel : NSObject
{
    struct CGRect _cropRect;
    float _cropConstrain;
    float _angle;
    struct CGSize _photoSize;
    struct CGSize _nsqPhotoSize;
}

@property float cropConstrain; // @synthesize cropConstrain=_cropConstrain;
@property float angle; // @synthesize angle=_angle;
@property(readonly) struct CGSize size; // @synthesize size=_photoSize;
@property struct CGRect cropRect;
- (void)drawAspectedPreviewFromImage:(struct CGImage *)arg1 inContext:(struct CGContext *)arg2 inRect:(struct CGRect)arg3 withRatio:(float)arg4;
- (struct CGImage *)newAspectedPreviewFromImage:(struct CGImage *)arg1 forSize:(struct CGSize)arg2 andRatio:(float)arg3;
- (struct CGImage *)newRenderedCroppedImageFromImage:(struct CGImage *)arg1 forSize:(struct CGSize)arg2;
- (void)changeCropAspectRatioTo:(float)arg1;
- (void)adjustEdgeForDragAction:(int)arg1 withAmount:(struct CGPoint)arg2;
- (void)translate:(float)arg1 atAngle:(float)arg2;
- (void)scale:(float)arg1 fromPoint:(struct CGPoint)arg2;
- (void)rotate:(float)arg1 fromPoint:(struct CGPoint)arg2;
- (struct CGRect)recomputeCropRect:(struct CGRect)arg1 forStraightenAngle:(float)arg2;
- (struct CGPoint)maxAllowableEdgeAdjustmentForDragAction:(int)arg1 withDirection:(struct CGPoint)arg2;
- (double)maxAllowedTranslateWithDirection:(double)arg1;
- (double)maxAllowedScaleFromPoint:(struct CGPoint)arg1 scaleUp:(_Bool)arg2;
- (float)maxAllowedRotationFromPoint:(struct CGPoint)arg1 counterClockwise:(_Bool)arg2;
- (struct CGPoint)scalePointForCropAction:(int)arg1;
- (int)touchedImageSidesForCurrentCrop;
- (void)calculateCornerPoints:(struct CGPoint *)arg1;
- (void)reset;
- (id)initWithSize:(struct CGSize)arg1;

@end

@interface PLCropOverlay : UIView
{
    id _delegate;
    PLCropOverlayCropView *_cropView;
    UIImageView *_shadowView;
    UIView *_overlayContainerView;
    struct CGRect _cropRect;
    UIToolbar *_customToolbar;
    UILabel *_titleLabel;
    UIImageView *_topShineView;
    PLProgressHUD *_hud;
    float _statusBarHeight;
    int _mode;
    unsigned int _previewMode:1;
    unsigned int _cropRectIsVisible:1;
    unsigned int _offsetStatusBar:1;
    unsigned int _tookPhoto:1;
    unsigned int _showsCropRegion:1;
    unsigned int _controlsAreVisible:1;
    unsigned int _isDisplayedInPopover:1;
    UIImageView *_bottomShineView;
    UIButton *_okButton;
    UIButton *_cancelButton;
    UIView *_wildcatPickerTopView;
    UIView *_wildcatPickerBottomView;
    _Bool _motionToggleIsOn;
    _Bool _isEditingHomeScreen;
    _Bool _isEditingLockScreen;
    PLContactPhotoOverlay *_contactPhotoOverlay;
    NSString *_defaultOKButtonTitle;
    PLCropOverlayBottomBar *__bottomBar;
    UIButton *__cameraCancelButton;
}

@property(readonly, nonatomic) UIButton *_cameraCancelButton; // @synthesize _cameraCancelButton=__cameraCancelButton;
@property(readonly, nonatomic) PLCropOverlayBottomBar *_bottomBar; // @synthesize _bottomBar=__bottomBar;
@property(copy, nonatomic) NSString *defaultOKButtonTitle; // @synthesize defaultOKButtonTitle=_defaultOKButtonTitle;
@property(nonatomic) _Bool isEditingLockScreen; // @synthesize isEditingLockScreen=_isEditingLockScreen;
@property(nonatomic) _Bool isEditingHomeScreen; // @synthesize isEditingHomeScreen=_isEditingHomeScreen;
@property(nonatomic) _Bool motionToggleIsOn; // @synthesize motionToggleIsOn=_motionToggleIsOn;
@property(readonly, nonatomic) PLContactPhotoOverlay *contactPhotoOverlay; // @synthesize contactPhotoOverlay=_contactPhotoOverlay;
- (_Bool)isWallpaperUIMode:(int)arg1;
- (_Bool)isTelephonyUIMode:(int)arg1;
- (id)_newOverlayViewWithFrame:(struct CGRect)arg1 lighterEdgeOnTop:(_Bool)arg2;
- (void)_updateCropRectInRect:(struct CGRect)arg1;
- (void)_updateToolbarItems:(_Bool)arg1;
- (void)_updateEditImageDoneButtonTitle;
- (void)_updateTitle;
@property(nonatomic) _Bool previewMode;
- (void)setTitleHidden:(_Bool)arg1 animationDuration:(double)arg2;
- (void)setShowsCropRegion:(_Bool)arg1;
- (void)setProgressDone;
- (void)removeProgress;
- (void)setShowProgress:(_Bool)arg1 title:(id)arg2;
- (void)setCancelButtonHidden:(_Bool)arg1;
- (void)setCancelButtonTitle:(id)arg1;
- (void)setOKButtonShowsCamera:(_Bool)arg1;
- (void)setOKButtonTitle:(id)arg1;
- (struct CGRect)titleRect;
- (void)setTitle:(id)arg1;
- (void)setTitle:(id)arg1 okButtonTitle:(id)arg2;
- (struct CGRect)cropRect;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setEnabled:(_Bool)arg1;
- (void)_pauseButtonPressed:(id)arg1;
- (void)cropOverlayBottomBarPauseButtonClicked:(id)arg1;
- (void)_playButtonPressed:(id)arg1;
- (void)cropOverlayBottomBarPlayButtonClicked:(id)arg1;
- (void)_tappedBottomBarPlaybackButton:(id)arg1;
@property(nonatomic) _Bool motionToggleHidden;
- (void)_updateWallpaperBottomBarSettingButtons;
- (void)_updateMotionToggle;
- (void)_tappedBottomBarMotionToggle;
- (void)_tappedBottomBarSetBothButton;
- (void)_tappedBottomBarSetLockButton;
- (void)_tappedBottomBarSetHomeButton;
- (void)_tappedBottomBarDoneButton:(id)arg1;
- (void)_tappedBottomBarCancelButton:(id)arg1;
- (void)cancelButtonClicked:(id)arg1;
- (void)_fadeOutCompleted:(id)arg1;
- (void)dismiss;
- (void)setDelegate:(id)arg1;
- (void)statusBarHeightDidChange:(id)arg1;
- (void)dealloc;
- (int)mode;
- (void)didPauseVideo;
- (void)didPlayVideo;
- (void)didCaptureVideo;
- (void)didCapturePhoto;
- (void)_setMode:(int)arg1;
- (void)setCropRectVisible:(_Bool)arg1 duration:(float)arg2;
- (struct CGRect)bottomBarFrame;
- (id)bottomBar;
- (void)insertIrisView:(id)arg1;
- (void)_createCropView;
- (id)_irisView;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 mode:(int)arg2;
- (void)setOverlayContainerView:(id)arg1;
- (id)overlayContainerView;
- (void)setControlsAreVisible:(_Bool)arg1;
- (_Bool)controlsAreVisible;
@property(readonly, nonatomic) PLCropOverlayWallpaperBottomBar *wallpaperBottomBar;
@property(retain, nonatomic) CAMBottomBar *cameraBottomBar;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 mode:(int)arg2 offsettingStatusBar:(_Bool)arg3 isDisplayedInPopover:(_Bool)arg4;
- (void)_savePhotoFinished:(id)arg1;
- (void)_backgroundSavePhoto:(id)arg1;
- (void)beginBackgroundSaveWithTile:(id)arg1 progressTitle:(id)arg2 completionCallbackTarget:(id)arg3 options:(int)arg4;

@end

@interface PLCropOverlayBottomBar : UIView
{
    _Bool _playingVideo;
    _Bool _inPopover;
    long long _style;
    CAMBottomBar *_cameraBottomBar;
    PLCropOverlayPreviewBottomBar *_previewBottomBar;
    PLCropOverlayWallpaperBottomBar *_wallpaperBottomBar;
}

@property(nonatomic, getter=isInPopover) _Bool inPopover; // @synthesize inPopover=_inPopover;
@property(nonatomic, getter=isPlayingVideo) _Bool playingVideo; // @synthesize playingVideo=_playingVideo;
@property(retain, nonatomic) PLCropOverlayWallpaperBottomBar *wallpaperBottomBar; // @synthesize wallpaperBottomBar=_wallpaperBottomBar;
@property(retain, nonatomic) PLCropOverlayPreviewBottomBar *previewBottomBar; // @synthesize previewBottomBar=_previewBottomBar;
@property(retain, nonatomic) CAMBottomBar *cameraBottomBar; // @synthesize cameraBottomBar=_cameraBottomBar;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void)_updateStyle;
- (_Bool)_isEditingStyle:(long long)arg1;
- (void)_updatePreviewBottomBarForPlaybackState;
- (void)_updateBottomBars;
- (void)togglePlaybackState;
- (void)setStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPLCropOverlayBottomBarInitialization;

@end

@interface PLCropOverlayCropView : UIView
{
    struct CGRect _cropRect;
}

- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)cropRect;
- (void)setFrame:(struct CGRect)arg1;
- (void)setCropRect:(struct CGRect)arg1;

@end

@interface PLCropOverlayLayer : UIView
{
    struct CGRect _cropRect;
    UIView *_topOpaqueLayer;
    UIView *_bottomOpaqueLayer;
    UIView *_rightOpaqueLayer;
    UIView *_leftOpaqueLayer;
    UIView *_topEdgeLayer;
    UIView *_bottomEdgeLayer;
    UIView *_rightEdgeLayer;
    UIView *_leftEdgeLayer;
    UIView *_topLeftCornerLayer;
    UIView *_topRightCornerLayer;
    UIView *_bottomRightCornerLayer;
    UIView *_bottomLeftCornerLayer;
    UIView *_topThirdLayer;
    UIView *_bottomThirdLayer;
    UIView *_rightThirdLayer;
    UIView *_leftThirdLayer;
    UIView *_straightenHorizontalLayers[6];
    UIView *_straightenVerticalLayers[6];
    unsigned int _showsCropRect:1;
    unsigned int _showThirdsGrid:1;
    unsigned int _showsStraightenGrid:1;
    unsigned int _thirdsVisible:1;
    unsigned int _highlighted:1;
}

- (struct CGRect)cropRect;
- (void)setCropRect:(struct CGRect)arg1;
- (_Bool)isHighlighted;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)showsStraightenGrid;
- (void)showStraightenGrid:(_Bool)arg1;
- (_Bool)showsThirdsGrid;
- (void)showThirdsGrid:(_Bool)arg1;
- (_Bool)showsCropRect;
- (void)setShowsCropRect:(_Bool)arg1;
- (void)_updateCropRectVisibility;
- (void)_updateLayout;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLCropOverlayPreviewBottomBar : UIView
{
    long long _backgroundStyle;
    UIButton *_cancelButton;
    UIButton *_doneButton;
    UIButton *_playbackButton;
}

@property(readonly, nonatomic) UIButton *playbackButton; // @synthesize playbackButton=_playbackButton;
@property(readonly, nonatomic) UIButton *doneButton; // @synthesize doneButton=_doneButton;
@property(readonly, nonatomic) UIButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(nonatomic) long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
- (void)_updateBackgroundStyle;
- (void)setBackgroundStyle:(long long)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPLCropOverlayEditPhotoBottomBarInitialization;

@end

@interface PLCropOverlayWallpaperBottomBar : UIView
{
    _Bool _motionToggleHidden;
    _Bool _shouldOnlyShowLockScreenButton;
    _Bool _shouldOnlyShowHomeScreenButton;
    PLWallpaperButton *_doCancelButton;
    PLWallpaperButton *_doSetButton;
    PLWallpaperButton *_doSetHomeScreenButton;
    PLWallpaperButton *_doSetLockScreenButton;
    PLWallpaperButton *_doSetBothScreenButton;
    PLWallpaperButton *_motionToggle;
    _UILegibilityLabel *_titleLabel;
    UIView *_separatorLine;
    _UIBackdropView *_backdropView;
    double _maxToggleWidth;
}

@property(nonatomic) double maxToggleWidth; // @synthesize maxToggleWidth=_maxToggleWidth;
@property(retain, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) UIView *separatorLine; // @synthesize separatorLine=_separatorLine;
@property(retain, nonatomic) _UILegibilityLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) _Bool shouldOnlyShowHomeScreenButton; // @synthesize shouldOnlyShowHomeScreenButton=_shouldOnlyShowHomeScreenButton;
@property(nonatomic) _Bool shouldOnlyShowLockScreenButton; // @synthesize shouldOnlyShowLockScreenButton=_shouldOnlyShowLockScreenButton;
@property(nonatomic) _Bool motionToggleHidden; // @synthesize motionToggleHidden=_motionToggleHidden;
@property(readonly, nonatomic) PLWallpaperButton *motionToggle; // @synthesize motionToggle=_motionToggle;
@property(readonly, nonatomic) PLWallpaperButton *doSetBothScreenButton; // @synthesize doSetBothScreenButton=_doSetBothScreenButton;
@property(readonly, nonatomic) PLWallpaperButton *doSetLockScreenButton; // @synthesize doSetLockScreenButton=_doSetLockScreenButton;
@property(readonly, nonatomic) PLWallpaperButton *doSetHomeScreenButton; // @synthesize doSetHomeScreenButton=_doSetHomeScreenButton;
@property(readonly, nonatomic) PLWallpaperButton *doSetButton; // @synthesize doSetButton=_doSetButton;
@property(readonly, nonatomic) PLWallpaperButton *doCancelButton; // @synthesize doCancelButton=_doCancelButton;
- (void)updateForChangedSettings:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)_sizeForString:(id)arg1;
- (void)setText:(id)arg1;
- (double)widthForToggleText;
- (void)_layoutSubviewsPad;
- (void)_layoutSubviewsPhone;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPLCropOverlayWallpaperBottomBarInitializationPad;
- (void)_commonPLCropOverlayWallpaperBottomBarInitializationPhone;
- (void)_commonPLCropOverlayWallpaperBottomBarInitialization;

@end

@interface PLCroppedImageView : UIView
{
    UIImageView *_imageView;
    struct CGRect _cropRect;
}

- (void)setFrame:(struct CGRect)arg1;
@property(retain, nonatomic) UIImage *image;
@property(nonatomic) struct CGRect cropRect;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLDataArrayInputStream : NSInputStream
{
    NSArray *_dataArray;
    NSMutableData *_bodyData;
    unsigned long long _dataCount;
    unsigned long long _dataLength;
    unsigned long long _dataOffset;
    unsigned long long _currentIndex;
    unsigned long long _currentOffset;
    unsigned long long _currentLength;
    _Bool _openEventSent;
    unsigned long long _streamStatus;
    id _delegate;
    id <PLDataArrayInputStreamProgressDelegate> _progressDelegate;
    struct __CFRunLoopSource *_rls;
    CDUnknownFunctionPointerType _clientCallback;
    CDStruct_4210025a _clientContext;
}

@property(nonatomic) id <PLDataArrayInputStreamProgressDelegate> progressDelegate; // @synthesize progressDelegate=_progressDelegate;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (_Bool)hasBytesAvailable;
- (unsigned long long)bytesRead;
- (unsigned long long)totalBytes;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
- (void)_scheduleProgressUpdate;
- (void)_updateProgress;
- (unsigned long long)streamStatus;
- (id)streamError;
- (void)close;
- (void)open;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_4210025a *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleCallback;
- (void)_streamEventTrigger;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)initWithDataArray:(id)arg1;

@end

@interface PLDeletePhotosActionController : NSObject <UIActionSheetDelegate, UIAlertViewDelegate>
{
    UIActionSheet *_actionSheet;
    UIAlertView *_onetimeConfirmationSheet;
    NSArray *_additionalAssetsToDelete;
    CDUnknownBlockType _completionHandler;
    CDUnknownBlockType _willDeleteHandler;
    long long _actionSheetStyle;
    long long _action;
    _Bool _needsOnetimeConfirmationSheet;
    _Bool _handlesDuplicates;
    PLPhotoLibrary *_photoLibrary;
    NSArray *_assets;
}

@property(readonly, nonatomic) _Bool handlesDuplicates; // @synthesize handlesDuplicates=_handlesDuplicates;
@property(readonly, nonatomic) long long action; // @synthesize action=_action;
@property(readonly, nonatomic) NSArray *assets; // @synthesize assets=_assets;
@property(readonly, nonatomic) PLPhotoLibrary *photoLibrary; // @synthesize photoLibrary=_photoLibrary;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)_didCompleteWithDestructiveAction:(_Bool)arg1;
- (void)_showOnetimeConfirmation;
- (void)redisplayFromObject:(id)arg1 animated:(_Bool)arg2;
- (void)dismissAnimated:(_Bool)arg1;
- (void)showInView:(id)arg1 willDeleteHandler:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)showFromObject:(id)arg1 animated:(_Bool)arg2 willDeleteHandler:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_setupOnetimeConfirmationSheet;
- (void)_setupActionSheet;
- (void)_getDeleteActionSheetTitle:(id *)arg1 destructiveButtonTitle:(id *)arg2 cancelButtonTitle:(id *)arg3 forAssets:(id)arg4 additionalPhotoStreamAssets:(id)arg5;
@property(nonatomic) long long actionSheetStyle;
- (void)dealloc;
- (id)initWithPhotoLibrary:(id)arg1 assets:(id)arg2 action:(long long)arg3 handleDuplicates:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLEditOverlayTextView : UIView
{
    UIView *__backgroundView;
    UILabel *__textLabel;
}

@property(readonly, nonatomic) UILabel *_textLabel; // @synthesize _textLabel=__textLabel;
@property(readonly, nonatomic) UIView *_backgroundView; // @synthesize _backgroundView=__backgroundView;
@property(copy, nonatomic) NSString *text;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPLEditOverlayTextViewInitialization;

@end

@interface PLEditPhotoController : UIViewController <PLImageAdjustmentViewDelegate, UIScrollViewDelegate, UIActionSheetDelegate, UIAlertViewDelegate, UIPopoverControllerDelegate, CAMEffectSelectionViewControllerDelegate>
{
    UIScrollView *_scrollView;
    UIView *_zoomView;
    PLImageAdjustmentView *_editView;
    PLEditOverlayTextView *_messageView;
    UINavigationBar *_navigationBar;
    UIToolbar *_toolbar;
    CAMEffectSelectionViewController *_effectSelectionViewController;
    PLProgressHUD *_savingHUD;
    UIActionSheet *_actionSheet;
    UIAlertView *_alertView;
    UIPopoverController *_popover;
    int _initialOrientation;
    NSDictionary *_initialAdjustmentState;
    NSUndoManager *_undoManager;
    NSDictionary *_previousAdjustmentState;
    NSUndoManager *_previousUndoManager;
    NSTimer *_messageTimer;
    NSMutableArray *_navBarItems;
    NSArray *_originalItems;
    PLManagedAsset *_editedPhoto;
    PLManagedAsset *_pendingPhoto;
    UIImage *_adjustedImage;
    NSArray *_autoAdjustmentFilters;
    struct CGRect _enhanceCalcRect;
    NSArray *_autoRedEyeCorrections;
    CIFilter *_autoRedEyeFilter;
    CIFilter *_redEyeFilter;
    NSArray *_effectFilters;
    struct CGRect _normalizedCropRect;
    double _straightenAngle;
    double _rotationAngle;
    NSDictionary *_cachedMetadata;
    UIImage *_scaledCachedImage;
    UIImage *_smallThumbnailImage;
    UIImage *_largeThumbnailImage;
    NSObject<OS_dispatch_queue> *_cachedImageQueue;
    CDUnknownBlockType _didEndZoomingBlock;
    CDUnknownBlockType _editCompletionBlock;
    CDUnknownBlockType _actionCompletionBlock;
    unsigned int _redEyeCycleCount;
    unsigned int _didInitializeNavigationItem:1;
    unsigned int _toolbarWasHidden:1;
    unsigned int _isUserAction:1;
    unsigned int _isCroppingImage:1;
    unsigned int _didTapForRedEyeCorrection:1;
    unsigned int _didEverTapForRedEyeCorrection:1;
    unsigned int _isCanceling:1;
    unsigned int _isOrderedOut:1;
    unsigned int _autoAdjustmentEnabled:1;
    unsigned int _preloadingEnhancementFilters:1;
    unsigned int _applyingAutoEnhance:1;
    unsigned int _modal:1;
    unsigned int _isUsingProxyImage:1;
    unsigned int _shouldPublishToPhotoStreams:1;
    unsigned int _needsFilteredFullSizeImage:1;
    unsigned int _preloadedEffectFilters:1;
    unsigned int _stopPreloadEffectFilters:1;
    _Bool _supportsEffects;
    unsigned long long _nextPreloadEffectFilterIndex;
    NSMutableDictionary *_thumbnailCache;
    NSDictionary *_thumbnailCacheAdjustmentState;
    CIContext *_ciContextThumbnails;
    CIContext *_ciContextFullSize;
    CIContext *_ciContextMainThread;
    EAGLContext *_glesContextThumbnails;
    EAGLContext *_glesContextFullSize;
    NSObject<OS_dispatch_queue> *_effectQueueThumbnails;
    NSObject<OS_dispatch_queue> *_effectQueueFullSize;
    int _currentMode;
    _Bool _savesAdjustmentsToCameraRoll;
    _Bool __toolbarHidden;
    long long __viewAnimationEnabledCount;
}

+ (void)initialize;
@property(nonatomic, setter=_setViewAnimationEnabledCount:) long long _viewAnimationEnabledCount; // @synthesize _viewAnimationEnabledCount=__viewAnimationEnabledCount;
@property(nonatomic, setter=_setToolbarHidden:) _Bool _toolbarHidden; // @synthesize _toolbarHidden=__toolbarHidden;
@property(copy, nonatomic) CDUnknownBlockType actionCompletionBlock; // @synthesize actionCompletionBlock=_actionCompletionBlock;
@property(nonatomic) double rotationAngle; // @synthesize rotationAngle=_rotationAngle;
- (_Bool)isEditing;
- (void)setMinimumZoom:(double)arg1 maximumZoom:(double)arg2;
- (_Bool)savesAdjustmentsToCameraRoll;
- (struct CGSize)editedImageSize;
- (void)_setUndoManager:(id)arg1;
- (void)effectSelectionViewController:(id)arg1 requestsThumbnailWithEffect:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_computeFullSizeFilteredImageWithAdjustmentState:(id)arg1;
- (void)_computeFullSizeFilteredImage;
- (void)effectSelectionViewController:(id)arg1 didSelectEffect:(id)arg2;
- (void)_thumbnailImageWithEffectFilters:(id)arg1 inputImage:(id)arg2 applyOrientation:(_Bool)arg3 forceSquareCrop:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)_fetchSmallThumbnailForEffectFilter:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_preloadNextEffectFilter;
- (void)_preloadEffectFilters;
- (void)_dismissEffectSelection;
- (void)_presentEffectSelection;
- (void)_updateSelectedEffect;
- (struct CGSize)_editedImageFullSize;
- (void)updatePendingPhoto;
@property(readonly, nonatomic) PLManagedAsset *pendingPhoto;
@property(retain, nonatomic) PLManagedAsset *editedPhoto;
- (void)_setEditedPhoto:(id)arg1 resetFilters:(_Bool)arg2;
@property(readonly, nonatomic) UIScrollView *scrollView;
@property(retain, nonatomic) UIToolbar *toolbar;
- (void)_layoutToolbar;
@property(retain, nonatomic) UINavigationBar *navigationBar;
- (void)_updateAggregateInfoForCurrentAdjustmentState;
- (_Bool)_adjustmentState:(id)arg1 isEqualTo:(id)arg2;
- (_Bool)_currentStateIsEqualToAdjustmentState:(id)arg1;
- (id)_originalState;
- (id)_adjustmentState;
- (void)_setAdjustmentState:(id)arg1;
- (void)_cleanupFilters;
- (void)_loadFiltersFromDatabase;
- (void)_saveFiltersToAsset:(id)arg1;
- (void)_displayRedEyeCorrections:(id)arg1;
- (void)_displayAllRedEyeCorrections;
- (_Bool)hasRedEyeCorrections;
- (id)redEyePoints;
- (_Bool)_setRedEyeCorrections:(id)arg1 changedCorrections:(id *)arg2;
- (void)_removeRedEyeCorrections:(id)arg1;
- (_Bool)removeRedEyePoint:(struct CGPoint)arg1;
- (void)_addRedEyeCorrections:(id)arg1 fromFilter:(id)arg2 isUserAction:(_Bool)arg3;
- (void)addRedEyePoint:(struct CGPoint)arg1;
- (id)_newCIImageFromUIImage:(id)arg1;
- (void)_setAspectRatio:(struct CGSize)arg1;
- (void)_rotatePhotoByAngle:(double)arg1;
- (void)_autoAdjustImage;
- (void)_preloadEnhancementFilters;
@property(nonatomic) _Bool autoAdjustmentEnabled;
- (void)_setAutoAdjustmentFilters:(id)arg1;
- (id)_autoAdjustmentFilters;
- (void)_setAutoRedEyeFilterFromArray:(id)arg1;
- (id)_calculateAutoFiltersWithFeatures:(int)arg1 includeGeometry:(_Bool)arg2;
- (void)setStraightenAngle:(double)arg1 normalizedCropRect:(struct CGRect)arg2;
@property(readonly, nonatomic) struct CGRect normalizedCropRect;
@property(readonly, nonatomic) double straightenAngle;
- (id)_masterImagePath;
- (void)saveAdjustments;
- (void)_saveAdjustmentsToOriginal;
- (void)_saveXMPPropertiesToPhoto:(id)arg1;
- (void)_saveAdjustmentsToCopy;
- (id)newAdjustedImageWithoutGeometryUsingContext:(id)arg1;
- (id)_croppedStraightenedImage;
- (id)_cropAndStraightenFiltersForImageSize:(struct CGSize)arg1 forceSquareCrop:(_Bool)arg2 forceUseGeometry:(_Bool)arg3;
- (id)_newImageFromImage:(id)arg1 filters:(id)arg2 orientation:(int)arg3 ciContext:(id)arg4;
- (id)_largeThumbnailImage;
- (id)_smallThumbnailImage;
- (id)_scaledCachedImage;
- (id)_currentNonGeometryFiltersWithEffectFilters:(id)arg1;
- (void)assetContainerDidChange:(id)arg1;
- (void)didRedoNotification:(id)arg1;
- (void)didUndoNotification:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)willPresentAlertView:(id)arg1;
- (_Bool)_dismissPopoverViews;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)willPresentActionSheet:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)_undoTransformImage:(struct CGRect)arg1 angle:(double)arg2;
- (void)editViewDidTouchImage:(id)arg1 location:(struct CGPoint)arg2;
- (void)editViewDidCropImage:(id)arg1;
- (void)editViewWillCropImage:(id)arg1;
- (void)setToolbarItems:(id)arg1 animated:(_Bool)arg2;
- (void)_updateToolbarSetHiddenState:(_Bool)arg1;
- (void)_updateToolbar;
- (void)_updateModeButtons;
- (void)_updateEditedImage:(_Bool)arg1;
- (void)_setEditedImage:(id)arg1 isProxyImage:(_Bool)arg2 updateCropAndStraighten:(_Bool)arg3 forceAnimate:(_Bool)arg4;
- (void)_setEditedImage:(id)arg1 isProxyImage:(_Bool)arg2 updateCropAndStraighten:(_Bool)arg3;
- (void)_setViewAnimationsEnabled:(_Bool)arg1;
- (void)_updateEnhanceButton;
- (void)_updateButtons;
- (void)_updateControls;
- (void)_dismissSavingHUD;
- (void)_presentSavingHUD;
- (void)_setControlsEnabled:(_Bool)arg1 animated:(_Bool)arg2;
- (void)forceCompletion;
- (void)orderOut:(_Bool)arg1 forceCompletion:(_Bool)arg2;
- (void)cancel:(id)arg1;
- (void)save:(id)arg1;
- (void)applySubmode:(id)arg1;
- (void)showConstraints:(id)arg1;
- (void)selectEditMode:(id)arg1;
- (void)rotatePhoto:(id)arg1;
- (void)enhancePhoto:(id)arg1;
- (void)undo:(id)arg1;
- (void)revertToSaved:(id)arg1;
- (void)revertToOriginal:(id)arg1;
- (void)_pushNewUndoManager;
- (void)_popModalState;
- (void)_pushModalState;
- (void)_setEditMode:(int)arg1;
- (void)_dismissProgressAlertIfNeeded;
- (void)_verifyProgress:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_updateMessageOverlayFrame;
- (void)hideMessage:(id)arg1;
- (void)showMessage:(id)arg1 duration:(double)arg2;
- (void)_displayAutoAdjustmentMessage;
- (id)_constrainActionSheet;
- (id)_buttonWithTag:(long long)arg1;
- (id)_rightButtonForMode:(int)arg1 enableDone:(_Bool)arg2 enableSave:(_Bool)arg3;
- (id)_newButtonItemWithIcon:(id)arg1 title:(id)arg2 target:(id)arg3 action:(SEL)arg4 tag:(long long)arg5;
- (id)_cropAndStraightenToolbarItems;
- (id)_redEyeLabel;
- (id)_startToolbarItems;
- (id)_currentToolbarItems;
- (id)navigationItem;
- (void)motionEnded:(long long)arg1 withEvent:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (void)_updateCropInsetsForOrientation:(long long)arg1;
- (void)didReceiveMemoryWarning;
- (_Bool)hidesBottomBarWhenPushed;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (_Bool)_isZoomedToScale:(double)arg1;
- (void)zoomToScale:(double)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (double)rotatedZoomToFitScale;
- (double)zoomToFitScale;
- (void)sizeToFit:(_Bool)arg1;
- (id)contentScrollView;
- (void)_startEditingWithAsset:(id)arg1;
- (void)startEditingAsset:(id)arg1 proxyImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLEmptyAlbumView : UIView
{
    UIImage *_image;
    UIImage *_landscapeImage;
    NSString *_title;
    NSString *_message;
    struct NSObject *_album;
    UIImageView *_imageView;
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    UILongPressGestureRecognizer *_longPressRecognizer;
    int _filter;
    _Bool _isCameraAlbum;
    _Bool _useLargeImages;
    _Bool _filterInUse;
    int _currentOrientation;
    struct UIEdgeInsets _edgeInsets;
    _Bool _isSharedPhotoStreamList;
}

@property(retain, nonatomic) NSObject<PLAlbumProtocol> *album; // @synthesize album=_album;
@property(nonatomic) struct UIEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic) int filter; // @synthesize filter=_filter;
- (_Bool)canBecomeFirstResponder;
- (void)paste:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)_longPressGesture:(id)arg1;
- (id)_newTextViewWithText:(id)arg1;
- (id)_newLabelWithText:(id)arg1;
- (id)_messageForAlbum:(struct NSObject *)arg1;
- (id)_titleForAlbum:(struct NSObject *)arg1;
- (id)_emptyRollImageForAlbum:(struct NSObject *)arg1 interfaceOrientation:(long long)arg2;
- (void)_sizeLabelToFitView:(id)arg1;
- (void)layoutSubviews;
- (void)setIsSharedPhotoStreamList:(_Bool)arg1;
- (void)setIsCameraAlbum:(_Bool)arg1;
- (void)setPortraitImage:(id)arg1 landscapeImage:(id)arg2;
- (void)setImage:(id)arg1;
- (void)setMessage:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 useLargeImages:(_Bool)arg2;

@end

@interface PLExpandableView : UIView
{
    id <PLExpandableViewDelegate> _delegate;
    CDUnknownBlockType _collapsingCompletionHandler;
    CDUnknownBlockType _expansionCompletionHandler;
    struct CGRect _contractedFrame;
    struct CGRect _expandedFrame;
    struct CGPoint _leftTouchLocation;
    struct CGPoint _rightTouchLocation;
    struct CGPoint _previousLeftLocation;
    struct CGPoint _previousRightLocation;
    unsigned long long _leftTouchIndex;
    unsigned long long _rightTouchIndex;
    double _pinchVelocity;
    double _trackingTimeInterval;
    double _expansionFraction;
    struct {
        unsigned int state:3;
        unsigned int prevState:3;
        unsigned int tracking:1;
        unsigned int autorotationDisabled:1;
        unsigned int animationDisabled:1;
        unsigned int updateContractedFrame:1;
        unsigned int updateExpandedFrame:1;
        unsigned int allowsExpansion:1;
        unsigned int delegateWillBeginExpanding:1;
        unsigned int delegateWillCompleteExpanding:1;
        unsigned int delegateDidCompleteExpanding:1;
        unsigned int delegateWillCancelExpanding:1;
        unsigned int delegateDidCancelExpanding:1;
        unsigned int delegateDidBeginCollapsing:1;
        unsigned int delegateWillCompleteCollapsing:1;
        unsigned int delegateDidCompleteCollapsing:1;
        unsigned int delegateWillCancelCollapsing:1;
        unsigned int delegateDidCancelCollapsing:1;
        unsigned int delegateExpandedFractionChanged:1;
    } _expandFlags;
}

- (_Bool)canCollapse;
- (_Bool)_canPinch;
- (_Bool)isTracking;
- (double)expansionFraction;
- (void)setExpansionFraction:(double)arg1;
- (int)previousState;
- (int)state;
@property(nonatomic) _Bool allowsExpansion;
@property(nonatomic) struct CGRect expandedFrame;
@property(nonatomic) struct CGRect contractedFrame;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (void)expandWithAnimation:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)collapseWithAnimation:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (float)completeTrackingPinch:(id)arg1 toState:(int)arg2 duration:(double)arg3;
- (float)continueTrackingPinch:(id)arg1;
- (void)beginTrackingPinch:(id)arg1;
- (struct CGRect)pinchRect:(struct CGRect)arg1 inView:(id)arg2 insetTouches:(_Bool)arg3;
- (void)updatePinchState:(id)arg1;
- (int)snapState:(_Bool)arg1;
- (void)finishTransitionToState:(int)arg1;
- (void)finishTransition;
- (void)canceledPinch:(id)arg1;
- (void)finishedPinch:(id)arg1;
- (void)continuedPinch:(id)arg1;
- (void)startedPinch:(id)arg1;
- (void)notifyExpansionFraction:(float)arg1 force:(_Bool)arg2;
- (void)didMoveToWindow;
- (void)willMoveToWindow:(id)arg1;
- (void)stateDidChangeFrom:(int)arg1;
- (void)stateWillChangeTo:(int)arg1;
- (void)setState:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromCompleteContract:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromCancelContract:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromContracting:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromExpanded:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromCancelExpand:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromCompleteExpand:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromExpanding:(int)arg1 withDuration:(double)arg2;
- (void)_transitionFromContracted:(int)arg1 withDuration:(double)arg2;
- (void)_notifyDidCancelCollapsing;
- (void)_notifyDidCancelExpanding;
- (void)_notifyWillBeginCollapsing;
- (void)_notifyDidCompleteExpanding;
- (void)_notifyWillCancelExpandingWithDuration:(double)arg1;
- (void)_notifyWillCompleteExpandingWithDuration:(double)arg1;
- (void)_notifyWillCompleteCollapsingWithDuration:(double)arg1;
- (void)_notifyWillCancelCollapsingWithDuration:(double)arg1;
- (void)_notifyWillBeginExpanding;
- (void)_notifyDidCompleteCollapsing;
- (void)_setAutorotationDisabled:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLExpandableImageView : PLExpandableView
{
    PLImageView *_imageView;
    int _imageID;
    struct CGSize _originalSize;
    double _originalWidth;
    double _originalAngle;
    struct CGPoint _anchorPoint;
    double _imageRotationAngle;
    double _pinchWidth;
    double _pinchAngle;
    double _pinchScale;
    struct CGRect _initialExpandingFrame;
    struct CGRect _originalBounds;
    float _currentAngle;
    struct CGSize _centerOffset;
    PLManagedAsset *_photo;
    struct {
        unsigned int isRotating:1;
        unsigned int didTrack:1;
        unsigned int updateFrame:1;
        unsigned int didLayout:1;
        unsigned int alwaysDoLayout:1;
        unsigned int didComputeCenterOffset:1;
        unsigned int imageIsFullScreen:1;
    } _exImageFlags;
}

+ (double)imageBorderWidth;
@property(retain, nonatomic) PLManagedAsset *photo; // @synthesize photo=_photo;
- (void)renderSnapshotInContext:(struct CGContext *)arg1;
- (void)setTextBadgeString:(id)arg1;
- (_Bool)isBeingManipulated;
- (double)transitionProgress;
- (void)setTransitionProgress:(double)arg1;
- (_Bool)isShadowEnabled;
- (void)setShadowEnabled:(_Bool)arg1;
- (double)imageRotationAngle;
@property(retain, nonatomic) PLVideoView *videoView;
- (struct CGRect)frameOfImage;
@property(readonly, nonatomic) struct CGSize imageSize;
- (id)imageView;
- (void)setShowsPlaceholder:(_Bool)arg1;
@property(readonly, nonatomic) _Bool showsPlaceholder;
@property(copy, nonatomic) NSString *name;
- (void)setFullSizeImageJPEGData:(id)arg1 size:(struct CGSize)arg2 orientation:(long long)arg3;
- (void)setPosterImage:(id)arg1 regionOfInterest:(struct CGRect)arg2;
- (id)image;
- (void)setImage:(id)arg1;
- (void)setImage:(id)arg1 isFullscreen:(_Bool)arg2;
@property(nonatomic, getter=isBorderAndAccessoriesVisible) _Bool borderAndAccessoriesVisible;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (id)_contentView;
- (void)finishTransition;
- (void)_bounceToPlace:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_bounceBack:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (float)completeTrackingPinch:(id)arg1 toState:(int)arg2 duration:(double)arg3;
- (void)setTransformAndCenterForFrame:(struct CGRect)arg1;
- (struct CGSize)_newSizeFromSize:(struct CGSize)arg1;
- (float)continueTrackingPinch:(id)arg1;
- (void)_updatePinchWidthAndScaleWithLeftPoint:(struct CGPoint)arg1 rightPoint:(struct CGPoint)arg2;
- (void)_updateBorderAndAccessoriesAlpha;
- (float)_borderAlphaForExpansionFraction:(float)arg1;
- (void)setSize:(struct CGSize)arg1 angle:(float)arg2;
- (void)beginTrackingPinch:(id)arg1;
- (void)_setOriginalSize:(struct CGSize)arg1;
- (void)stateDidChangeFrom:(int)arg1;
- (struct CGRect)_snappedExpandedFrame;
- (float)_expansionFraction;
- (float)_expandedScale;
- (float)_currentScale;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 frameStyle:(int)arg2;
- (id)initWithFrame:(struct CGRect)arg1 frameStyle:(int)arg2 withBorder:(_Bool)arg3;

@end

@interface PLFilledActivityIndicator : UIView
{
    UIActivityIndicatorView *_indicatorView;
}

- (_Bool)isAnimating;
- (void)stopAnimating;
- (void)startAnimatingAfterDelay:(double)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)didMoveToWindow;
- (_Bool)isOpaque;
- (void)dealloc;
- (id)initWithLocation:(struct CGPoint)arg1;

@end

@interface PLFlatVideoOverlayButton : UIButton <PLVideoOverlayButton>
{
    long long _style;
    id _target;
    SEL _action;
}

- (id)_createOverlayImageWithBackgroundWhite:(double)arg1 backgroundAlpha:(double)arg2 glyphAlpha:(double)arg3;
- (id)_highlightedButtonImage;
- (id)_normalButtonImage;
- (void)_handleTap:(id)arg1;
- (void)setTarget:(id)arg1 action:(SEL)arg2;
- (long long)style;
- (id)initWithStyle:(long long)arg1;

@end

@interface PLHighFidelityVideoOverlayButton : UIView <PLVideoOverlayButton>
{
    long long _style;
    UIButton *_button;
    _UIBackdropView *_backdropView;
    id _target;
    SEL _action;
}

- (void)_playButtonTapped:(id)arg1;
- (void)_playButtonDeactivate:(id)arg1;
- (void)_playButtonActivate:(id)arg1;
- (void)setTarget:(id)arg1 action:(SEL)arg2;
- (long long)style;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1;

@end

@interface PLImageAdjustmentView : UIView <UIGestureRecognizerDelegate>
{
    PLCropModel *_cropModel;
    UIImageView *_imageView;
    PLCropOverlayLayer *_overlayLayer;
    id <PLImageAdjustmentViewDelegate> _delegate;
    UIImage *_editedImage;
    struct UIEdgeInsets _cropInsets;
    int _gestureCount;
    struct CGAffineTransform _originalTransform;
    struct CGRect _imageCropRect;
    struct CGRect _previousImageCropRect;
    double _cropAngle;
    double _previousCropAngle;
    double _photoViewScale;
    double _sourceAspectRatio;
    unsigned int _currentCropAction;
    NSTimer *_manualCropTimer;
    double _autoCropScale;
    double _animationDuration;
    unsigned int _isCropMode:1;
    unsigned int _isAdjustingCropRect:1;
    unsigned int _isAnimating:1;
    unsigned int _canRotate:1;
    unsigned int _needsRecenterImage:1;
    unsigned int _delegateWillCropImage:1;
    unsigned int _delegateDidCropImage:1;
    unsigned int _delegateDidTouchImage:1;
}

- (id)overlayLayer;
- (id)imageView;
- (struct CGRect)_maxOverlayCropRect;
- (double)_minimumImageScale;
- (double)_imageScale;
- (struct CGRect)overlayCropRect;
- (_Bool)_updateCropAngle;
- (_Bool)_updateCropRect;
@property(nonatomic) struct CGSize aspectRatio;
- (double)rotationAngle;
- (void)setRotationAngle:(double)arg1;
- (double)previousCropAngle;
- (double)cropAngle;
- (struct CGRect)previousCropRect;
- (struct CGRect)cropRect;
- (void)setCropRect:(struct CGRect)arg1 cropAngle:(double)arg2;
- (void)reset;
@property(nonatomic) struct UIEdgeInsets cropInsets;
@property(nonatomic, getter=isCropMode) _Bool cropMode;
@property(retain, nonatomic) UIImage *editedImage;
- (void)replaceEditedImage:(id)arg1;
@property(nonatomic) id <PLImageAdjustmentViewDelegate> delegate;
- (_Bool)isDisplayingProgressIndicators;
- (void)removeProgressIndicators;
- (void)removeProgressIndicatorAtLocation:(struct CGPoint)arg1;
- (void)displayProgressIndicatorAtLocation:(struct CGPoint)arg1;
- (void)showIndicatorAtPointInImage:(struct CGPoint)arg1 duration:(double)arg2;
- (void)commitAnimations;
- (void)beginAnimation:(double)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_cropTimer:(id)arg1;
- (void)_performCropAction:(int)arg1 location:(struct CGPoint)arg2;
- (_Bool)_isInCropGesture;
- (void)_endCropGesture:(id)arg1;
- (void)_beginCropGesture:(id)arg1;
- (void)touch:(id)arg1;
- (void)crop:(id)arg1;
- (void)rotate:(id)arg1;
- (void)scale:(id)arg1;
- (void)pan:(id)arg1;
- (void)_updateGestureRecognizers;
- (double)computeScaleToFillRelativeToPointInImage:(struct CGPoint)arg1;
- (int)cropActionForPoint:(struct CGPoint)arg1;
- (struct CGPoint)convertPointFromImage:(struct CGPoint)arg1;
- (struct CGPoint)convertPointToImage:(struct CGPoint)arg1;
- (void)_updateOverlayCropRect;
- (void)_updateImageView;
- (void)layoutSubviews;
- (void)setNeedsRecenterImage;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLImagePickerCameraView : CAMCameraView <PLVideoViewDelegate>
{
    _Bool _allowsEditing;
    _Bool _showsCropRegion;
    _Bool _displayedInPopover;
    _Bool _cropOverlayUsesTelephonyUI;
    _Bool _wantsImageData;
    _Bool _showingCropOverlay;
    _Bool __manipulatingCrop;
    _Bool __shouldSkipPostcaptureReview;
    _Bool __retakingPhoto;
    int _photoSavingOptions;
    int __enabledGestures;
    int __windowEdgeClip;
    NSDictionary *_imagePickerOptions;
    PLPhotoTileViewController *_tileViewController;
    CAMStillImageCaptureResponse *__mostRecentCaptureResponse;
    PLCropOverlay *__cropOverlay;
    PLVideoView *__videoView;
}

@property(nonatomic, setter=_setWindowEdgeClip:) int _windowEdgeClip; // @synthesize _windowEdgeClip=__windowEdgeClip;
@property(nonatomic, getter=_isRetakingPhoto, setter=_setRetakingPhoto:) _Bool _retakingPhoto; // @synthesize _retakingPhoto=__retakingPhoto;
@property(readonly, nonatomic) _Bool _shouldSkipPostcaptureReview; // @synthesize _shouldSkipPostcaptureReview=__shouldSkipPostcaptureReview;
@property(nonatomic, setter=_setEnabledGestures:) int _enabledGestures; // @synthesize _enabledGestures=__enabledGestures;
@property(readonly, nonatomic) PLVideoView *_videoView; // @synthesize _videoView=__videoView;
@property(nonatomic, getter=_isManipulatingCrop, setter=_setManipulatingCrop:) _Bool _manipulatingCrop; // @synthesize _manipulatingCrop=__manipulatingCrop;
@property(readonly, nonatomic) PLCropOverlay *_cropOverlay; // @synthesize _cropOverlay=__cropOverlay;
@property(readonly, nonatomic) CAMStillImageCaptureResponse *_mostRecentCaptureResponse; // @synthesize _mostRecentCaptureResponse=__mostRecentCaptureResponse;
@property(readonly, nonatomic) PLPhotoTileViewController *tileViewController; // @synthesize tileViewController=_tileViewController;
@property(nonatomic, getter=isShowingCropOverlay) _Bool showingCropOverlay; // @synthesize showingCropOverlay=_showingCropOverlay;
@property(nonatomic) int photoSavingOptions; // @synthesize photoSavingOptions=_photoSavingOptions;
@property(nonatomic) _Bool wantsImageData; // @synthesize wantsImageData=_wantsImageData;
@property(nonatomic) _Bool cropOverlayUsesTelephonyUI; // @synthesize cropOverlayUsesTelephonyUI=_cropOverlayUsesTelephonyUI;
@property(nonatomic, getter=isDisplayedInPopover) _Bool displayedInPopover; // @synthesize displayedInPopover=_displayedInPopover;
@property(nonatomic) _Bool showsCropRegion; // @synthesize showsCropRegion=_showsCropRegion;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(retain, nonatomic) NSDictionary *imagePickerOptions; // @synthesize imagePickerOptions=_imagePickerOptions;
- (void)embedControlsIntoNavigationItem:(id)arg1 animated:(_Bool)arg2;
- (void)performPostcapturePreviewForVideoAtPath:(id)arg1;
- (_Bool)_isLockedToPortraitOrientation;
- (_Bool)_supportsPreviewingAfterCapture;
- (_Bool)_wantsPreviewSizeAdjustmentForBars;
- (_Bool)_wantsOrientationAnimations;
- (_Bool)_wantsCaptureAnimations;
- (_Bool)_wantsForcedPreviewAspectRatio;
- (_Bool)_wantsSuspensionBlurs;
- (_Bool)_shouldStartPreviewWhenApplicationBecomesActive;
- (_Bool)_wantsFullScreenPreview;
- (_Bool)_shouldPausePreviewDuringCapture;
- (_Bool)_shouldBlurWhenSessionStops;
- (void)_removeVideoCaptureControls;
- (void)_showVideoCaptureControls;
- (struct CGRect)_bottomBarFrame;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(_Bool)arg2;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (_Bool)videoViewCanBeginPlayback:(id)arg1;
- (double)videoViewScrubberYOrigin:(id)arg1 forOrientation:(long long)arg2;
- (void)captureController:(id)arg1 didStopRecordingForVideoRequest:(id)arg2;
- (void)cameraControllerPreviewDidStart:(id)arg1;
- (_Bool)photoTileViewControllerIsDisplayingLandscape:(id)arg1;
- (void)_previewVideoAtPath:(id)arg1;
- (_Bool)_allowsVideoEditing;
- (void)_resetImageTile;
- (void)captureController:(id)arg1 didCompleteResponse:(id)arg2 forStillImageRequest:(id)arg3 error:(id)arg4;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayPause:(id)arg1;
- (void)cropOverlayPlay:(id)arg1;
- (void)cropOverlayWasToggled:(id)arg1;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)_createCropOverlayIfNecessary;
- (void)setAllowsMultipleModes:(_Bool)arg1;
@property(retain, nonatomic) UIView *customOverlayView;
@property(nonatomic) _Bool controlsAreVisible;
- (struct CGSize)_displaySizeForPreviewForCameraMode:(long long)arg1;
- (void)verifyViewOrdering;
- (void)_updateImageEditability;
- (void)setAllowsImageEditing:(_Bool)arg1;
- (void)viewWillBeDisplayed;
- (void)didMoveToWindow;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 spec:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLImageScrollView : UIScrollView
{
    _Bool _adjustZoomScaleAfterRotation;
}

@property(nonatomic) _Bool adjustZoomScaleAfterRotation; // @synthesize adjustZoomScaleAfterRotation=_adjustZoomScaleAfterRotation;
- (void)willAnimateRotationToInterfaceOrientation:(id)arg1;
- (void)_centerContentIfNecessary;
- (void)setFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLImageView : UIImageView
{
    NSString *_name;
    UIView *_borderView;
    PLVideoView *_videoView;
    PLPhotoTilePlaceholderView *_placeholderView;
    UIView *_leftAccessoryView;
    UIView *_bottomRightAccessoryView;
    struct CGSize _leftAccessoryViewOffset;
    UILabel *_textBadge;
    unsigned int _shadowEnabled:1;
    unsigned int _suppressShadowDrawing:1;
    unsigned int _borderViewIsVisible:1;
    unsigned int _drawsBorder:1;
    float _aspectRatio;
    double _lastBorderAlphaTime;
    double _lastShadowAlphaTime;
    double _transitionProgress;
    _Bool _edgeAntialiasingEnabled;
    PLTiledLayer *_fullSizeImageTiledLayer;
    long long _fullSizeImageOrientation;
    _Bool _showsPlaceholder;
    double _accessoryViewsAlpha;
    double _placeholderScale;
}

+ (id)textBadgeForString:(id)arg1 photoSize:(struct CGSize)arg2;
+ (struct CGSize)badgeOffset;
+ (_Bool)shouldDrawShadows;
+ (void)initialize;
@property(nonatomic) double placeholderScale; // @synthesize placeholderScale=_placeholderScale;
@property(readonly, nonatomic) _Bool showsPlaceholder; // @synthesize showsPlaceholder=_showsPlaceholder;
@property(nonatomic) double accessoryViewsAlpha; // @synthesize accessoryViewsAlpha=_accessoryViewsAlpha;
@property(retain, nonatomic) UIView *bottomRightAccessoryView; // @synthesize bottomRightAccessoryView=_bottomRightAccessoryView;
@property(nonatomic) struct CGSize leftAccessoryViewOffset; // @synthesize leftAccessoryViewOffset=_leftAccessoryViewOffset;
@property(retain, nonatomic) UIView *leftAccessoryView; // @synthesize leftAccessoryView=_leftAccessoryView;
@property(nonatomic) double transitionProgress; // @synthesize transitionProgress=_transitionProgress;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) PLVideoView *videoView;
- (void)setBottomRightAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)setLeftAccessoryView:(id)arg1 animated:(_Bool)arg2;
- (void)setTextBadgeString:(id)arg1;
- (id)textBadgeString;
- (void)_updatePlaceholderAlpha;
- (void)_updatePlaceholderLayout;
@property(readonly, nonatomic) struct CGSize placeholderSize;
- (void)setShowsPlaceholder:(_Bool)arg1;
- (void)setEdgeAntialiasingEnabled:(_Bool)arg1;
@property(nonatomic, getter=isDimmed) _Bool dimmed;
@property(nonatomic) _Bool drawsBorder;
@property(nonatomic) float borderAndAccessoriesAlpha;
- (void)setBorderAndAccessoriesAlpha:(float)arg1 forced:(_Bool)arg2;
- (void)parentDidLayout;
@property(nonatomic, getter=isBorderAndAccessoriesVisible) _Bool borderAndAccessoriesVisible;
@property(nonatomic, getter=isShadowEnabled) _Bool shadowEnabled;
- (void)_setShadowEnabled:(_Bool)arg1 force:(_Bool)arg2;
- (void)setImage:(id)arg1;
- (struct CGAffineTransform)_transformForFullSizeImageTiledLayer;
- (void)updateFullSizeImageVisibleArea;
- (void)setFullSizeImageJPEGData:(id)arg1 size:(struct CGSize)arg2 orientation:(long long)arg3;
- (void)_updateShadowPath;
- (void)layoutSubviews;
- (struct CGRect)_bottomRightAccessoryViewFrame;
- (struct CGRect)_leftAccessoryViewFrame;
- (void)renderSnapshotInContext:(struct CGContext *)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 allowRounding:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLImageViewWithAnimatedAnchor : UIImageView
{
}

- (_Bool)_shouldAnimatePropertyWithKey:(id)arg1;

@end

@interface PLImportSessionInfo : NSObject
{
    _Bool _importComplete;
    _Bool _importStopped;
    _Bool _importingSelection;
    NSMutableIndexSet *_importIndexes;
    NSMutableIndexSet *_importInProgressIndexes;
    NSMutableIndexSet *_importErrorIndexes;
    NSMutableIndexSet *_importCompleteIndexes;
}

@property(nonatomic) _Bool importingSelection; // @synthesize importingSelection=_importingSelection;
@property(readonly, nonatomic) NSIndexSet *completedIndexes; // @synthesize completedIndexes=_importCompleteIndexes;
@property(readonly, nonatomic) NSIndexSet *errorIndexes; // @synthesize errorIndexes=_importErrorIndexes;
@property(readonly, nonatomic) NSIndexSet *inProgressIndexes; // @synthesize inProgressIndexes=_importInProgressIndexes;
@property(readonly, nonatomic) NSIndexSet *importIndexes; // @synthesize importIndexes=_importIndexes;
@property(nonatomic) _Bool importStopped; // @synthesize importStopped=_importStopped;
@property(nonatomic) _Bool importComplete; // @synthesize importComplete=_importComplete;
- (void)shiftIndexesStartingAtIndex:(unsigned long long)arg1 by:(unsigned long long)arg2;
- (void)removeIndex:(unsigned long long)arg1;
- (void)completeImportForIndex:(unsigned long long)arg1 error:(_Bool)arg2;
- (void)beginImportForIndex:(unsigned long long)arg1;
- (_Bool)_isImportCompleteForIndex:(unsigned long long)arg1;
- (void)addIndexToImport:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithImportIndexes:(id)arg1;

@end

@interface PLIndicatorView : UIView
{
    double _timeout;
}

@property(nonatomic) double timeout;
- (void)fadeOut:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)didMoveToWindow;
- (_Bool)isOpaque;
- (void)dealloc;
- (id)initWithLocation:(struct CGPoint)arg1;

@end

@interface PLInteractiveNavigationController : UIViewController <UINavigationBarDelegate, PLExpandableViewDelegate>
{
    NSMutableArray *_stack;
    PLInteractiveNavigationControllerView *_contentView;
    UIView *_interactiveView;
    UIView *_overlayView;
    UIView *_headerView;
    UIViewController *_previousViewController;
    UIViewController *_expandedController;
    PLExpandableView *_expandingView;
    NSMutableArray *_navBarPushPopQueue;
    double _lastAlphaTime;
    struct {
        unsigned int operation:3;
        unsigned int visible:1;
        unsigned int programmaticPopInProgress:1;
        unsigned int finishingCurrentOperation:1;
        unsigned int previousControllerWasEditing:1;
        unsigned int propagateEditingMode:1;
    } _stackFlags;
    struct {
        unsigned int blockAppearanceCallbacks:1;
        unsigned int inExplicitAppearanceTransition:1;
    } _appearanceFlags;
    id <PLInteractiveNavigationControllerDelegate> delegate;
}

@property(nonatomic) id <PLInteractiveNavigationControllerDelegate> delegate; // @synthesize delegate;
@property(nonatomic) _Bool shouldPropagateEditingMode;
- (id)viewControllers;
- (id)topViewController;
- (id)bottomViewController;
- (void)setFooterViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=footerViewIsHidden) _Bool footerViewHidden;
@property(retain, nonatomic) UIView *footerView;
- (void)setHeaderViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=headerViewIsHidden) _Bool headerViewHidden;
@property(retain, nonatomic) UIView *headerView;
- (void)navigationBar:(id)arg1 didPopItem:(id)arg2;
- (void)navigationBar:(id)arg1 didPushItem:(id)arg2;
- (void)_processNavBarPushPopQueue;
- (_Bool)navigationBar:(id)arg1 shouldPopItem:(id)arg2;
- (void)_notifyAction:(SEL)arg1 expandableView:(id)arg2 duration:(double)arg3;
- (void)_notifyAction:(SEL)arg1 expandableView:(id)arg2;
- (void)_setInteractiveController:(id)arg1 interactiveView:(id)arg2;
- (void)expandableView:(id)arg1 expansionFractionChanged:(float)arg2;
- (void)expandableViewDidCancelCollapsing:(id)arg1;
- (void)expandableView:(id)arg1 willCancelCollapsingWithDuration:(double)arg2;
- (void)expandableViewDidCompleteCollapsing:(id)arg1;
- (void)expandableView:(id)arg1 willCompleteCollapsingWithDuration:(double)arg2;
- (void)expandableViewDidBeginCollapsing:(id)arg1;
- (void)expandableViewDidCancelExpanding:(id)arg1;
- (void)expandableView:(id)arg1 willCancelExpandingWithDuration:(double)arg2;
- (void)expandableViewDidCompleteExpanding:(id)arg1;
- (void)expandableView:(id)arg1 willCompleteExpandingWithDuration:(double)arg2;
- (void)expandableViewWillBeginExpanding:(id)arg1;
- (void)_getRotationContentSettings:(CDStruct_ebaa735e *)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (id)rotatingFooterView;
- (id)rotatingHeaderView;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)popToRootViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)popToRootViewController;
- (void)popViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)popToViewController:(id)arg1;
- (void)popViewController;
- (_Bool)isPoppingViewController;
- (_Bool)isPushingViewController;
- (void)cancelPoppingViewController;
- (void)cancelPushingViewController;
- (void)_finishCurrentOperationBeforePushingViewController:(id)arg1;
- (void)_finishCurrentOperation;
- (void)finishPoppingViewController;
- (void)finishPushingViewController;
- (_Bool)_validateOperation:(int)arg1 errorString:(id)arg2;
- (void)_finishedAnimatingTopAlpha:(id)arg1 finished:(id)arg2 topItem:(id)arg3;
- (void)setTransitionProgress:(double)arg1 withDuration:(double)arg2;
- (void)_performNavBarPushPop:(int)arg1 transition:(int)arg2;
- (void)setTopViewControllerAlpha:(double)arg1;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (void)beginPoppingViewControllerInteractivelyUsingView:(id)arg1;
- (void)beginPushingViewController:(id)arg1 interactivelyUsingView:(id)arg2;
- (void)_setOverlayView:(id)arg1;
- (void)_setInteractiveView:(id)arg1;
- (void)_setPreviousViewController:(id)arg1;
- (void)replaceTopViewControllerWithViewController:(id)arg1;
- (void)_removeTopViewController;
- (void)_addViewController:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)viewControllerNavigationItems;
- (id)navigationBar;
- (id)_contentView;
- (void)loadView;
- (void)dealloc;
- (id)initWithRootViewController:(id)arg1;
- (id)init;
- (_Bool)pl_behavesLikeNavigationControllerForNotifications;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLInteractiveNavigationControllerView : UIView <UINavigationBarDelegate>
{
    UIView *_top;
    UIView *_bottom;
    UIView *_interactive;
    UIView *_overlay;
    UINavigationBar *_navBar;
    UIView *_header;
    UIView *_footer;
    long long _orientation;
    struct {
        unsigned int transitioning:1;
        unsigned int headerViewIsVisible:1;
        unsigned int footerViewIsVisible:1;
    } _controllerViewFlags;
}

@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footer;
@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_header;
@property(retain, nonatomic) UIView *bottomView; // @synthesize bottomView=_bottom;
@property(retain, nonatomic) UIView *topView; // @synthesize topView=_top;
@property(readonly, nonatomic) UINavigationBar *navigationBar; // @synthesize navigationBar=_navBar;
- (void)setInterfaceOrientation:(long long)arg1;
- (void)setTopViewAlpha:(double)arg1;
- (void)setOverlayView:(id)arg1;
- (id)interactiveView;
- (void)setInteractiveView:(id)arg1;
- (void)setInteractiveView:(id)arg1 removePrevious:(_Bool)arg2;
- (void)transitionDidEnd;
- (void)transitionWillBegin;
- (void)layoutSubviews;
- (void)_adjustViewFrame:(id)arg1;
@property(nonatomic, getter=footerViewIsHidden) _Bool footerViewHidden;
@property(nonatomic, getter=headerViewIsHidden) _Bool headerViewHidden;
- (void)setFooterViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHeaderViewHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLInvitationRecipient : NSObject
{
    MFComposeRecipient *_mfRecipient;
    NSString *_firstName;
    NSString *_lastName;
    NSMutableArray *_allEmails;
    NSMutableArray *_allPhones;
    NSString *_selectedPhoneString;
    NSString *_selectedEmailString;
    NSString *_invalidAddressString;
}

+ (id)validPhoneNumberFromString:(id)arg1;
+ (id)validEmailAddressFromComposeRecipient:(id)arg1;
@property(readonly, nonatomic) NSString *invalidAddressString; // @synthesize invalidAddressString=_invalidAddressString;
@property(readonly, nonatomic) NSString *selectedEmailString; // @synthesize selectedEmailString=_selectedEmailString;
@property(readonly, nonatomic) NSString *selectedPhoneString; // @synthesize selectedPhoneString=_selectedPhoneString;
@property(readonly, nonatomic) NSArray *allPhones; // @synthesize allPhones=_allPhones;
@property(readonly, nonatomic) NSArray *allEmails; // @synthesize allEmails=_allEmails;
- (id)description;
@property(readonly, nonatomic) NSString *lastName;
@property(readonly, nonatomic) NSString *firstName;
- (id)displayName;
- (void)dealloc;
- (id)initWithRecipient:(id)arg1;

@end

@interface PLLabel : UILabel
{
    double shadowBlurRadius;
}

@property(nonatomic) double shadowBlurRadius; // @synthesize shadowBlurRadius;
- (void)drawTextInRect:(struct CGRect)arg1;

@end

@interface PLLegibilityViewHelper : NSObject
{
}

+ (id)imageForText:(id)arg1 font:(id)arg2 textAlignment:(long long)arg3 constrainedToSize:(struct CGSize)arg4;
+ (id)_imageFromLabel:(id)arg1 sizeToFit:(_Bool)arg2;
+ (id)newLegibilityViewWithSettings:(id)arg1 forLabel:(id)arg2 sizeToFit:(_Bool)arg3;

@end

@interface PLLibraryImageDataProvider : NSObject
{
    PLImageCache *_imageCache;
    PLImageLoadingQueue *_imageLoadingQueue;
    NSMutableDictionary *_imageSources;
}

- (id)_imageSourceForFormat:(int)arg1;
- (void)invalidateCachedImagesForAsset:(id)arg1 format:(int)arg2;
- (void)invalidateCachedImagesForAsset:(id)arg1;
- (void)cancelLoadForAsset:(id)arg1 format:(int)arg2;
- (void)cancelLoadForAsset:(id)arg1;
- (void)resumeLoading;
- (void)pauseLoading;
- (id)loadImageSynchronously:(_Bool)arg1 forAsset:(id)arg2 format:(int)arg3 priority:(int)arg4 completion:(CDUnknownBlockType)arg5;
- (void)dealloc;
- (id)init;

@end

@interface PLLowDiskSpaceAlertView : UIAlertView
{
}

+ (void)showUsageSettings;
- (id)initWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;
- (id)initWithTitle:(id)arg1 message:(id)arg2 showSettingsButton:(_Bool)arg3 delegate:(id)arg4;

@end

@interface PLUIImageViewController : UIViewController <PLVideoViewDelegate, PLImageLoadingQueueDelegate, PLPhotoTileViewControllerDelegate>
{
    PLManagedAsset *_photo;
    struct CGImage *_imageRef;
    UIImage *_image;
    struct CGRect _cropRect;
    PLCropOverlay *_cropOverlay;
    PLPhotoTileViewController *_imageTile;
    PLVideoView *_videoView;
    PLVideoRemaker *_remaker;
    NSURL *_videoURL;
    PLImageCache *_imageCache;
    PLImageLoadingQueue *_imageLoadingQueue;
    PLImageSource *_imageSource;
    long long _previousStatusBarStyle;
    long long _newStatusBarStyle;
    unsigned int _allowEditing:1;
    unsigned int _statusBarWasHidden:1;
    unsigned int _isVideo:1;
    unsigned int _isDisappearing:1;
    unsigned int _remaking:1;
}

- (void)imageLoadingQueue:(id)arg1 didLoadImage:(id)arg2 forAsset:(id)arg3 fromSource:(id)arg4;
- (_Bool)photoTileViewControllerAllowsEditing:(id)arg1;
- (void)photoTileViewControllerDidEndGesture:(id)arg1;
- (void)photoTileViewControllerWillBeginGesture:(id)arg1;
- (void)photoTileViewControllerDoubleTap:(id)arg1;
- (void)photoTileViewControllerSingleTap:(id)arg1;
- (void)photoTileViewControllerRequestsFullSizeImage:(id)arg1;
- (void)photoTileViewControllerCancelImageRequests:(id)arg1;
- (void)photoTileViewControllerRequestsFullScreenImage:(id)arg1;
- (int)imageFormat;
- (void)photoTileViewController:(id)arg1 didDisappear:(_Bool)arg2;
- (void)photoTileViewController:(id)arg1 didAppear:(_Bool)arg2;
- (void)photoTileViewController:(id)arg1 willAppear:(_Bool)arg2;
- (_Bool)photoTileViewControllerIsDisplayingLandscape:(id)arg1;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)videoRemakerDidBeginRemaking:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(_Bool)arg2;
- (void)videoViewDidPausePlayback:(id)arg1 didFinish:(_Bool)arg2;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (void)videoViewIsReadyToBeginPlayback:(id)arg1;
- (id)_trimMessage;
- (_Bool)videoViewCanBeginPlayback:(id)arg1;
- (double)videoViewScrubberYOrigin:(id)arg1 forOrientation:(long long)arg2;
- (void)videoView:(id)arg1 scrubberWasCreated:(id)arg2 slalomRegionEditor:(id)arg3;
- (_Bool)videoViewCanCreateMetadata:(id)arg1;
- (void)cropOverlayPause:(id)arg1;
- (void)cropOverlayPlay:(id)arg1;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)_enableCropOverlayIfNecessary;
- (void)didChooseVideoAtURL:(id)arg1 options:(id)arg2;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)_updateGestureSettings;
- (void)_editabilityChanged:(id)arg1;
- (void)setAllowsEditing:(_Bool)arg1;
- (void)_removedAsTopViewController;
- (void)attachScrubberPalette;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (long long)_imagePickerStatusBarStyle;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)desiredStatusBarAnimation;
- (_Bool)wantsStatusBarVisible;
- (void)loadView;
- (Class)_viewClass;
- (void)setupNavigationItem;
- (_Bool)clientIsWallpaper;
- (id)useButtonTitle;
- (unsigned long long)_tileAutoresizingMask;
- (unsigned long long)_contentAutoresizingMask;
- (struct CGRect)_viewFrame;
- (struct CGRect)previewFrame;
- (void)setCropOverlayDone;
- (id)cropOverlay;
- (int)cropOverlayMode;
- (void)dealloc;
- (id)initWithVideoURL:(id)arg1;
- (id)initWithImageData:(id)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithUIImage:(id)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithImage:(struct CGImage *)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithPhoto:(id)arg1;
- (_Bool)_displaysFullScreen;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLUIEditImageViewController : PLUIImageViewController
{
    id _delegate;
    int _saveOptions;
    int _mode;
}

@property(nonatomic) int mode; // @synthesize mode=_mode;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (int)cropOverlayMode;
- (id)imageTile;
- (int)imageFormat;
- (id)photo;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)cropOverlay:(id)arg1 didFinishSaving:(id)arg2;
- (void)cropOverlayWasOKed:(id)arg1;
- (id)initWithPhoto:(id)arg1;
- (unsigned long long)_tileAutoresizingMask;
- (unsigned long long)_contentAutoresizingMask;
- (int)saveOptions;
- (void)setImageSavingOptions:(int)arg1;
- (void)dealloc;

@end

@interface PLWallpaperImageViewController : PLUIEditImageViewController <SBFLegibilitySettingsProviderDelegate, UIActionSheetDelegate>
{
    PLWallpaperNavigationItem *_navItem;
    int _wallpaperMode;
    NSArray *_navigationToolbarItems;
    _Bool _saveWallpaperData;
    NSString *_wallpaperTitle;
    unsigned int _didSetImageMode:1;
    _Bool _isWallpaperEdit;
    SBSUIWallpaperPreviewViewController *_wallpaperPreviewViewController;
    long long _previewVariant;
    long long _previewType;
}

@property(nonatomic) _Bool isWallpaperEdit; // @synthesize isWallpaperEdit=_isWallpaperEdit;
@property(nonatomic) long long previewType; // @synthesize previewType=_previewType;
@property(nonatomic) long long previewVariant; // @synthesize previewVariant=_previewVariant;
@property(retain, nonatomic) SBSUIWallpaperPreviewViewController *wallpaperPreviewViewController; // @synthesize wallpaperPreviewViewController=_wallpaperPreviewViewController;
@property(copy, nonatomic) NSString *wallpaperTitle; // @synthesize wallpaperTitle=_wallpaperTitle;
@property(nonatomic) _Bool saveWallpaperData; // @synthesize saveWallpaperData=_saveWallpaperData;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)providerLegibilitySettingsChanged:(id)arg1;
- (void)setupWallpaperPreview;
- (void)_updatePreviewFrame:(id)arg1;
- (void)cropOverlayWasCancelled:(id)arg1;
- (void)_displayWallpaperOptionsSheet;
- (void)cropOverlayWasOKed:(id)arg1;
- (void)motionToggledManually:(_Bool)arg1;
- (void)setImageAsHomeScreenAndLockScreenClicked:(id)arg1;
- (void)setImageAsLockScreenClicked:(id)arg1;
- (void)setImageAsHomeScreenClicked:(id)arg1;
- (void)_cropWallpaperFinished:(id)arg1;
- (void)_backgroundCropWallpaper;
- (void)_savePhoto;
- (void)_updateTitles;
- (_Bool)uiipc_useTelephonyUI;
- (void)_adjustScrollViewGeometry;
- (int)imageFormat;
- (_Bool)clientIsWallpaper;
- (void)setupNavigationItem;
- (void)loadView;
- (unsigned long long)_tileAutoresizingMask;
- (unsigned long long)_contentAutoresizingMask;
- (struct CGRect)_viewFrame;
- (void)photoTileViewControllerRequestsFullScreenImage:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)desiredStatusBarAnimation;
- (_Bool)wantsStatusBarVisible;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;
- (id)navigationItem;
- (int)cropOverlayMode;
- (id)initWithUIImage:(id)arg1;
- (void)prepareForForeground:(id)arg1;
- (void)prepareForBackground:(id)arg1;
- (id)initWithWallpaperVariant:(long long)arg1;
- (id)init;
- (void)setWallpaperSynchronouslyFromArgs:(id)arg1;
- (void)setWallpaperFromArgs:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLMagicWallpaperImageViewController : PLWallpaperImageViewController
{
}

- (void)loadView;
- (id)initWithMagicWallpaper:(id)arg1 options:(id)arg2;

@end

@interface PLMessageUIProxy : NSObject
{
}

+ (id)newABUnknownPersonViewControllerWithEmailAddress:(id)arg1;
+ (Class)MFSearchShadowViewClass;
+ (Class)MFRecipientTableViewCellClass;
+ (Class)MFContactsSearchResultsModelClass;
+ (Class)MFContactsSearchManagerClass;
+ (Class)MFComposeRecipientClass;
+ (Class)MFComposeRecipientViewClass;
+ (_Bool)canSendMail;
+ (id)newComposeViewController;
+ (Class)MFMailComposeViewControllerClass;

@end

@interface PLModalDimmingViewController : UIViewController
{
    UIImageView *_vignetteView;
    UIViewController<PLModalDimmingContained> *_contentViewController;
    UIView *_wrapperView;
}

@property(retain, nonatomic) UIViewController<PLModalDimmingContained> *contentViewController; // @synthesize contentViewController=_contentViewController;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_updateVignetteToOrientation:(long long)arg1;
- (void)dismissWithCustomAnimation:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)presentWithCustomAnimation;
- (void)presentModalOnViewController:(id)arg1 animated:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_updateWrapperView:(id)arg1 toOrientation:(long long)arg2 forViewController:(id)arg3;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithContentViewController:(id)arg1;

@end

@interface PLMoviePlayerController : NSObject
{
    AVPlayerItem *_playerItem;
    AVPlayer *_player;
    PLMoviePlayerView *_view;
    UIAlertView *_alertView;
    PLTVOutWindow *_tvOutWindow;
    _Bool _hasPendingTime;
    double _pendingTime;
    unsigned long long _pendingTimeSnapOption;
    _Bool _forceUpdateCurrentTime;
    _Bool _isExternalPlayback;
    _Bool _exited;
    double _lastSetCurrentTimeTime;
    _Bool _isSeeking;
    unsigned long long _backgroundTaskId;
    _Bool _audioSessionActive;
    NSString *_originalAudioCategory;
    _Bool _TVOutEnabled;
    _Bool _forceDisableTVOut;
    _Bool _isPreparedForPlayback;
    _Bool _isActiveController;
    id <PLMoviePlayerControllerDelegate> _delegate;
    unsigned long long _bufferingState;
    unsigned long long _playbackState;
}

+ (_Bool)_isNetworkSupportedPath:(id)arg1;
+ (_Bool)_isStreamableAsset:(id)arg1;
+ (id)AVAssetURLWithPath:(id)arg1;
@property(nonatomic) _Bool isActiveController; // @synthesize isActiveController=_isActiveController;
@property(readonly, nonatomic) _Bool isPreparedForPlayback; // @synthesize isPreparedForPlayback=_isPreparedForPlayback;
@property(nonatomic, setter=_setForceDisableTVOut:) _Bool forceDisableTVOut; // @synthesize forceDisableTVOut=_forceDisableTVOut;
@property(nonatomic) _Bool TVOutEnabled; // @synthesize TVOutEnabled=_TVOutEnabled;
@property(readonly, nonatomic) unsigned long long playbackState; // @synthesize playbackState=_playbackState;
@property(readonly, nonatomic) unsigned long long bufferingState; // @synthesize bufferingState=_bufferingState;
@property(readonly, retain, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(readonly, retain, nonatomic) PLMoviePlayerView *view; // @synthesize view=_view;
@property(nonatomic) id <PLMoviePlayerControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_serverConnectionDidDie:(id)arg1;
- (void)_exitPlayer:(int)arg1;
- (void)_playbackFailedWithError:(id)arg1;
- (void)_playerItemFailedToPlayToEnd:(id)arg1;
- (void)_playerItemFailedToPlayToEndNotification:(id)arg1;
- (void)_playerItemDidReachEndNotification:(id)arg1;
- (void)willResignAsActiveController;
- (void)didBecomeActiveController;
- (void)requestToResignAsActiveController;
- (void)requestToBecomeActiveController;
- (void)_updateBackgroundViewInformation;
- (long long)externalPlaybackType;
- (_Bool)isExternalPlayback;
- (void)_updateDisableAirPlayMirroringDuringPlayback;
- (_Bool)_allowsExternalPlayback;
- (void)_tearDownTVOutWindow;
- (void)tearDownTVOutWindow;
- (void)_setupTVOutWindow;
- (void)_displayVideoView;
- (void)_restoreTVOutVideoIfNecessary;
- (void)_updateTVOutEnabled;
- (_Bool)videoOutActive;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_screenDidConnect:(id)arg1;
- (void)_willEnterForegroundNotification:(id)arg1;
- (void)_didEnterBackgroundNotification:(id)arg1;
- (void)_willResignNotification:(id)arg1;
- (void)_willBeginSuspendAnimationNotification:(id)arg1;
- (void)_willSuspendNotification:(id)arg1;
- (void)_pausePlaybackForNotification;
- (void)_simpleRemoteNotification:(id)arg1;
- (void)_setPlaybackState:(unsigned long long)arg1;
- (void)_setBufferingState:(unsigned long long)arg1;
- (void)_streamUnlikelyToKeepUp;
- (void)_streamRanDry;
- (void)_streamLikelyToKeepUp;
- (void)_streamBufferFull;
@property(nonatomic) double currentTime;
@property(readonly, nonatomic) float playbackRate;
@property(readonly, nonatomic) double duration;
- (void)_delayedUpdateFromPendingTime;
- (void)_updateFromPendingTime;
- (void)setCurrentTime:(double)arg1 timeSnapOption:(unsigned long long)arg2 forceUpdate:(_Bool)arg3;
- (void)setCurrentTime:(double)arg1 timeSnapOption:(unsigned long long)arg2;
- (void)stop;
- (void)pauseDueToInsufficientData;
- (void)pause;
- (void)playDueToEnoughData;
- (void)playFromBeginning;
- (void)play;
- (void)_playerRateDidChange:(id)arg1;
- (void)_dispatchOnMainThreadWithBlock:(CDUnknownBlockType)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_didLoadValueOfKey:(id)arg1 forAsset:(id)arg2;
- (void)_loadAsset:(id)arg1;
- (void)_setPlayerItem:(id)arg1;
- (void)setPlayerItem:(id)arg1 startTime:(double)arg2;
- (id)_asset;
- (void)_updateAudioSession;
- (void)_setPlayerAudioSessionActive:(_Bool)arg1;
- (void)_tearDownPlayer;
- (void)_setupPlayer;
- (id)_playerKeysToObserve;
- (void)_unregisterForNotifications;
- (void)_registerForNotifications;
- (void)dealloc;
- (id)init;

@end

@interface PLMoviePlayerControllerManager : NSObject
{
    NSMutableArray *_playerStack;
}

+ (id)sharedInstance;
- (void)removeControllerFromStack:(id)arg1;
- (void)moveControllerToTopOfStack:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLMoviePlayerView : UIView
{
    PLAVPlayerView *_avPlayerView;
    PLVideoOutBackgroundView *_videoOutView;
    PLAirPlayBackgroundView *_airPlayView;
    _Bool _destinationPlaceholderHidden;
}

- (void)_installBackgroundView:(id)arg1;
@property(nonatomic, getter=isDestinationPlaceholderHidden) _Bool destinationPlaceholderHidden;
- (void)setDestinationPlaceholderStyle:(long long)arg1 airPlayDeviceName:(id)arg2;
@property(readonly, nonatomic) long long destinationPlaceholderStyle;
- (void)setScaleMode:(unsigned long long)arg1 duration:(double)arg2;
- (void)setScaleMode:(unsigned long long)arg1;
@property(retain, nonatomic) AVPlayer *player;
- (void)reattachVideoView;
@property(readonly, retain, nonatomic) UIView *videoView;
- (void)_clearAirPlayView;
- (void)_clearVideoView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLMutableCameraImportQueue : NSObject
{
    NSMutableArray *_items;
}

- (void)dequeueImportItem;
- (void)enqueueImportItem:(id)arg1;
- (id)currentItem;
- (id)description;
- (void)dealloc;
- (id)init;

@end

@interface PLPasswordAlertView : UIAlertView <UIAlertViewDelegate>
{
    CDUnknownBlockType _completionHandler;
    UITextField *_accountTextField;
    UITextField *_passwordTextField;
    long long _style;
}

@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
@property(copy, nonatomic) NSString *accountTextFieldPlaceholder;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitles:(id)arg5;
- (id)initWithStyle:(long long)arg1 title:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)initWithTitle:(id)arg1 message:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPersonTableViewCell : UITableViewCell
{
    UIImage *_personIcon;
    NSString *_personFirstName;
    NSString *_personLastName;
    UIImageView *__personIconImageView;
    UIImage *__personMonogramImage;
}

@property(retain, nonatomic, setter=_setPersonMonogramImage:) UIImage *_personMonogramImage; // @synthesize _personMonogramImage=__personMonogramImage;
@property(retain, nonatomic, setter=_setPersonIconImageView:) UIImageView *_personIconImageView; // @synthesize _personIconImageView=__personIconImageView;
@property(copy, nonatomic) NSString *personLastName; // @synthesize personLastName=_personLastName;
@property(copy, nonatomic) NSString *personFirstName; // @synthesize personFirstName=_personFirstName;
@property(retain, nonatomic) UIImage *personIcon; // @synthesize personIcon=_personIcon;
- (void)_updatePersonIconImageView;
- (void)layoutSubviews;
- (void)dealloc;

@end

@interface PLPhotoBrowserController : UIViewController <PLAirPlaySessionDataSource, PLPhotoScrubberSpeedDelegate, UIPageControllerDelegate, PLPhotoTileViewControllerDelegate, PLVideoViewDelegate, UIScrollViewDelegate, UINavigationControllerDelegate, UIAlertViewDelegate, UIActionSheetDelegate, PLPhotoScrubberDataSource, UIPopoverControllerDelegate, PLSlideshowPluginDelegate, AirPlayRemoteSlideshowDelegate, PLDismissableViewController, PHPhotoLibraryChangeObserver>
{
    id <PLPhotoBrowserControllerDelegate> __delegate;
    NSMutableDictionary *_tileCache;
    UIPageController *_pageController;
    UIScrollView *_scroller;
    UIView *_fadeToBlackView;
    UITransitionView *_slideshowTransitionView;
    UITransitionView *_cameraTransitionView;
    NSIndexPath *_currentIndexPath;
    NSIndexPath *_deletedIndexPath;
    NSIndexPath *_priorIndexPath;
    NSNumberFormatter *_scrubOverlayTitleFormatter;
    int _slideshowStatus;
    _Bool _showingNextImage;
    _Bool _tvOutOn;
    _Bool _playingVideo;
    _Bool _animating;
    struct CGSize _contentStartSize;
    float _startScale;
    float _endScale;
    UIView *_remakerContainerView;
    UIActionSheet *_actionView;
    UIAlertView *_alertView;
    PLProgressHUD *_savingPhotoHud;
    double _slideshowDelay;
    NSTimer *_slideshowTimer;
    SEL _photoAction;
    id _photoActionInvoker;
    PHAsset *_pendingPhoto;
    UIWindow *_tvOutWindow;
    UIPageController *_tvOutPageController;
    UIScrollView *_tvOutScroller;
    NSMutableDictionary *_tvOutTileCache;
    UITransitionView *_tvOutTransitionView;
    PLProgressView *_progressView;
    int _remakerMode;
    PLVideoRemaker *_remaker;
    PHAsset *_currentVideo;
    double _maximumTrimLength;
    UILongPressGestureRecognizer *_recognizer;
    SEL _actionAfterForcedRotation;
    _Bool _canDelayImageLoading;
    _Bool _delayImageLoading;
    int _autohideControlCount;
    PLEditPhotoController *_editController;
    NSArray *_currentAirplayRoutes;
    unsigned int _statusBarIsLocked;
    unsigned int _rotationDisabled;
    unsigned int _videoEditingMode:1;
    unsigned int _remaking:1;
    unsigned int _isEditingPhoto:1;
    unsigned int _clearingFullScreenView:1;
    unsigned int _scrolling:1;
    unsigned int _canShowCopyCallout:1;
    unsigned int _viewIsDisappearing:1;
    unsigned int _viewDidAppear:1;
    unsigned int _didRotate:1;
    unsigned int _navigationBarDisabled;
    unsigned int _bottomBarDisabled;
    unsigned int _appInteractionDisabled;
    unsigned int _isAnimatingTrash:1;
    unsigned int _isPlayingMusic:1;
    unsigned int _didStartMusicPlayback:1;
    unsigned int _rotationDisabledUnderCropOverlay:1;
    unsigned int _didSetSimpleRemotePriority:1;
    unsigned int _paging:1;
    unsigned int _collapsing:1;
    unsigned int _rotating:1;
    unsigned int _reloadPhotoScrubber:1;
    unsigned int _videoViewWillBeginEditing:1;
    unsigned int _playVideoOnActivation:1;
    unsigned int _remakingWasCancelled:1;
    unsigned int _canUploadHDVideoOver3G:1;
    unsigned int _didSetHDVideoUploadCapability:1;
    unsigned int _didShowHDRPrompt:1;
    unsigned int _imagesAreShuffled:1;
    unsigned int _isEditingComment:1;
    int _showErrorAlert;
    _Bool _ignoringInteractionEventsForVideoViewRemaking;
    NSIndexPath *_scrubbedImageIndexPath;
    long long _scrubberAssetContainerIndex;
    PHCachingImageManager *_cachingImageManager;
    NSMutableDictionary *_imageRequestsByIdentifier;
    UIImage *_loadedImage;
    PLPhotoScrubber *_photoScrubber;
    PLPhotoTileViewController *_deletedTile;
    int _currentAirTunesMode;
    unsigned long long _slideshowItemsToShow;
    unsigned long long _slideshowItemsShown;
    NSIndexPath *_slideshowEndIndexPath;
    _Bool _fadingToBlack;
    _Bool _slideshowIsOrigami;
    _Bool _slideshowStartedInFullScreen;
    _Bool _slideshowIsLoading;
    _Bool _slideshowIsEnding;
    PLPictureFramePlugin *_slideshowPlugin;
    UIView *_slideshowView;
    NSIndexPath *_lastStreamedPhotoIndexPath;
    NSIndexPath *_lastDisplayedRemoteSlideshowPhotoIndexPath;
    NSString *_currentAirTunesTransition;
    NSArray *_availableAirTunesServices;
    PLAirPlaySession *_airplaySession;
    unsigned int _slideShowIsStreamed:1;
    unsigned int _airTunesSlideShowIsEnding:1;
    PLAirPlayBackgroundView *_airTunesBackgroundView;
    PLDeletePhotosActionController *_deleteController;
    int _commentsInteractionMode;
    UINavigationBar *_commentsEditBar;
    _Bool _commentsTableWasVisible;
    NSMutableArray *_pendingCollectionListChangeNotifications;
    NSMutableArray *_pendingSingleCollectionChangeNotifications;
    NSMutableArray *_pendingAssetChangeNotifications;
    NSManagedObjectID *_currentAssetObjectID;
    NSString *_currentAssetPublicGlobalUUID;
    long long _publicGlobalUUIDRequestCount;
    NSString *_currentAssetContainerUUID;
    id _activityTarget;
    SEL _activityAction;
    _Bool shouldShowOverlaysWhenViewAppears;
    _Bool shouldShowOverlaysWhenViewDisappears;
    _Bool _isCameraApp;
    _Bool _deletesDuplicatesWhenNecessary;
    _Bool _shouldPlayVideoWhenViewAppears;
    _Bool _showsAirTunesOption;
    _Bool __enableInteractionEventsAfterUpdatingTileIndex;
    int _photoThumbnailFormat;
    PLAssetContainerDataSource *_assetContainerDataSource;
    PLPhotoTileViewController *_mostRecentlyActiveTile;
    PLAssetContainerDataSource *__originalAssetContainerDataSource;
    PHAsset *__pendingAssetForTileUpdate;
    struct CGRect _menuControllerSourceRect;
}

+ (id)_imageRequestCacheQueue;
+ (void)setPageControllerScrollViewClass:(Class)arg1;
@property(nonatomic, setter=_setEnableInteractionEventsAfterUpdatingTileIndex:) _Bool _enableInteractionEventsAfterUpdatingTileIndex; // @synthesize _enableInteractionEventsAfterUpdatingTileIndex=__enableInteractionEventsAfterUpdatingTileIndex;
@property(retain, nonatomic, setter=_setPendingAssetForTileUpdate:) PHAsset *_pendingAssetForTileUpdate; // @synthesize _pendingAssetForTileUpdate=__pendingAssetForTileUpdate;
@property(retain, nonatomic, setter=_setOriginalAssetContainerDataSource:) PLAssetContainerDataSource *_originalAssetContainerDataSource; // @synthesize _originalAssetContainerDataSource=__originalAssetContainerDataSource;
@property(nonatomic) int photoThumbnailFormat; // @synthesize photoThumbnailFormat=_photoThumbnailFormat;
@property(retain, nonatomic) PLPhotoTileViewController *mostRecentlyActiveTile; // @synthesize mostRecentlyActiveTile=_mostRecentlyActiveTile;
@property(readonly, nonatomic) PLAssetContainerDataSource *assetContainerDataSource; // @synthesize assetContainerDataSource=_assetContainerDataSource;
@property(nonatomic) struct CGRect menuControllerSourceRect; // @synthesize menuControllerSourceRect=_menuControllerSourceRect;
@property(readonly, nonatomic) _Bool showsAirTunesOption; // @synthesize showsAirTunesOption=_showsAirTunesOption;
@property(nonatomic) _Bool shouldPlayVideoWhenViewAppears; // @synthesize shouldPlayVideoWhenViewAppears=_shouldPlayVideoWhenViewAppears;
@property(nonatomic) _Bool deletesDuplicatesWhenNecessary; // @synthesize deletesDuplicatesWhenNecessary=_deletesDuplicatesWhenNecessary;
@property(nonatomic) _Bool isCameraApp; // @synthesize isCameraApp=_isCameraApp;
@property(retain, nonatomic, setter=_setLastDisplayedRemoteSlideshowPhotoIndexPath:) NSIndexPath *_lastDisplayedRemoteSlideshowPhotoIndexPath; // @synthesize _lastDisplayedRemoteSlideshowPhotoIndexPath;
@property(retain, nonatomic, setter=_setScrubbedImageIndexPath:) NSIndexPath *_scrubbedImageIndexPath; // @synthesize _scrubbedImageIndexPath;
@property(retain, nonatomic, setter=_setSlideshowEndIndexPath:) NSIndexPath *_slideshowEndIndexPath; // @synthesize _slideshowEndIndexPath;
@property(retain, nonatomic, setter=_setDeletedIndexPath:) NSIndexPath *_deletedIndexPath; // @synthesize _deletedIndexPath;
@property(retain, nonatomic, setter=_setPriorIndexPath:) NSIndexPath *_priorIndexPath; // @synthesize _priorIndexPath;
@property(nonatomic) _Bool shouldShowOverlaysWhenViewDisappears; // @synthesize shouldShowOverlaysWhenViewDisappears;
@property(nonatomic) _Bool shouldShowOverlaysWhenViewAppears; // @synthesize shouldShowOverlaysWhenViewAppears;
- (_Bool)_isScrolling;
- (_Bool)isEditing;
- (_Bool)currentItemIsPlaying;
- (_Bool)shouldShowPlayButton;
- (_Bool)shouldShowActionMenu;
- (_Bool)_currentItemHasAudio;
- (_Bool)_canUploadHDVideo;
@property(readonly, nonatomic) id <PLRootLibraryNavigationController> rootNavigationController;
@property(readonly, nonatomic) UIView *pageControllerView;
@property(readonly, nonatomic) UIPageController *pageController;
- (_Bool)airplayRemoteSlideshow:(id)arg1 handleEvent:(id)arg2;
- (_Bool)airplayRemoteSlideshow:(id)arg1 requestAssetWithInfo:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)airPlayRemoteSlideshowAssetKeys:(id)arg1;
- (void)airPlaySession:(id)arg1 didFailToStreamPhotoWithError:(id)arg2;
- (id)airPlaySession:(id)arg1 nextPhotoForPhoto:(id)arg2;
- (id)airPlaySession:(id)arg1 previousPhotoForPhoto:(id)arg2;
- (void)_airTunesSlideShowViewWasTapped;
- (void)_startAirTunesSlideShow;
- (void)_stopAirTunesSlideShow:(_Bool)arg1;
- (void)_removeAirTunesSlideShowViewAndReset;
- (void)_airTunesSlideShowTimerFired;
- (id)_nextAirTunesSlideshowPhoto;
- (void)_airTunesServiceDidDisconnect:(id)arg1;
- (void)_stopStreamingPhotosToAirTunes;
- (void)_streamPhoto:(id)arg1 withTransition:(id)arg2;
- (void)setAirTunesMode:(int)arg1;
- (void)_cleanUpCurrentAirplaySession;
- (void)_invalidateAirplayCache;
- (void)_airplayRouteWasPicked:(id)arg1;
- (void)_enableStreamingSlideshow;
- (void)_disableStreamingSlideshow;
- (id)_newSessionForRoute:(id)arg1;
- (id)_airplayRemoteSlideshow;
- (id)_mediaControlClient;
- (id)_currentAirplayRoute;
- (void)beginRemoteSlideshowToRouteID:(id)arg1 settings:(id)arg2;
- (void)beginLocalSlideshowWithSettings:(id)arg1;
- (void)beginLocalOrigamiSlideshowWithSettings:(id)arg1;
@property(copy, nonatomic) NSDictionary *slideshowSettingsForCurrentAssetContainer;
- (void)saveSelectionOfMusic:(id)arg1 transition:(id)arg2;
- (void)currentAirplayRouteChanged;
- (void)_getRotationContentSettings:(CDStruct_ebaa735e *)arg1;
- (void)_longPressRecognized:(id)arg1;
@property(nonatomic) _Bool canShowCopyCallout;
- (void)_removeTVOutWindow;
- (void)_prepareForTVOut;
- (void)_externalScreenDisconnected:(id)arg1;
- (void)_externalScreenConnected:(id)arg1;
- (void)_configureTVOutPageController;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)videoRemaker:(id)arg1 progressDidChange:(float)arg2;
- (void)videoRemakerDidBeginRemaking:(id)arg1;
- (double)durationForTransition:(int)arg1;
- (void)transitionViewDidComplete:(id)arg1 fromView:(id)arg2 toView:(id)arg3;
- (id)_actionViewRootView;
- (void)_redisplayDeleteController:(id)arg1;
- (void)_redisplayActionSheet:(id)arg1;
- (void)_repositionPopoversIfNecessary;
- (void)actionSheet:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)willPresentActionSheet:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)_hideCallout;
- (void)_forceDismissDeleteController:(_Bool)arg1 enableToolbarTimer:(_Bool)arg2;
- (void)_forceDismissActionSheet:(_Bool)arg1 enableToolbarTimer:(_Bool)arg2;
- (void)_forceDismissAlertView:(_Bool)arg1 enableToolbarTimer:(_Bool)arg2;
- (_Bool)dismissPopovers;
- (_Bool)statusBarIsLocked;
- (void)setStatusBarIsLocked:(_Bool)arg1;
- (void)_updateStatusBarVisibilityWithDuration:(double)arg1;
- (_Bool)wantsPhotoBrowserStyleStatusBar;
- (void)removeRemakerContainerView;
@property(readonly, nonatomic) UIView *remakerContainerView;
- (void)updateBarsAnimated:(_Bool)arg1;
- (_Bool)barsAreVisible;
- (void)updateOverlaysAnimated:(_Bool)arg1;
- (void)updateProgressView;
- (void)_removeProgressView;
- (id)photoScrollerTitle;
- (id)photoCountFormatter;
- (void)_timeoutPendingAsset;
- (void)_cancelTimeoutForPendingAsset;
- (void)_scheduleTimeoutForPendingAsset;
- (void)_updateTileIndexForPendingAssetIfNeededAndAvailable;
- (void)_commonDidEndRemaking:(id)arg1 pathToTrimmedFile:(id)arg2 didSucceed:(_Bool)arg3 shouldReenableInteractionEvents:(_Bool)arg4;
- (void)videoViewDidEndRemaking:(id)arg1 didSucceed:(_Bool)arg2;
- (void)_commonRemakingProgressDidChange:(float)arg1;
- (void)videoView:(id)arg1 remakingProgressDidChange:(float)arg2;
- (void)_commonDidBeginRemaking;
- (void)videoViewDidBeginRemaking:(id)arg1;
- (void)_setIgnoreInteractionEventsForVideoViewRemaking:(_Bool)arg1;
- (void)trimVideo:(id)arg1;
- (int)videoRemakerMode;
- (void)_showConfirmationForPassthroughTrimming:(id)arg1;
- (void)_delayedExitEditingMode;
- (void)cancelVideoEditingMode:(id)arg1;
- (_Bool)isEditingVideo;
- (void)setVideoEditingMode:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setVideoEditingMode:(_Bool)arg1;
@property(readonly, nonatomic) _Bool canEditVideo;
- (void)_cancelRemaking;
- (void)didEndEditingPhoto;
- (void)displayNextPhoto:(id)arg1;
- (void)displayPreviousPhoto:(id)arg1;
- (_Bool)prepareToDisplayActivitySheet;
- (void)_performPostAlbumStreamTasksWithNewlyCreatedAlbum:(struct NSObject *)arg1;
- (void)deleteImageClicked:(id)arg1;
- (_Bool)_isTrashBin;
- (void)endEditingPhoto;
- (void)beginEditingPhoto;
- (void)_dismissEditControllerWithOldStatusBarStyle:(long long)arg1;
- (long long)_presentEditPhotoController;
- (void)_configureEditNavigationController:(id)arg1;
- (void)pauseCurrentMedia:(id)arg1;
- (void)playCurrentMedia:(id)arg1;
- (_Bool)prepareForDismissingForced:(_Bool)arg1;
- (_Bool)isPhotoTileParentPageControllerAnimating:(id)arg1;
- (_Bool)photoTileViewControllerAllowsEditing:(id)arg1;
- (void)photoTileViewControllerDidEndGesture:(id)arg1;
- (void)photoTileViewControllerWillBeginGesture:(id)arg1;
- (void)photoTileViewControllerDoubleTap:(id)arg1;
- (void)photoTileViewControllerSingleTap:(id)arg1;
- (void)photoTileViewController:(id)arg1 didDisappear:(_Bool)arg2;
- (void)photoTileViewController:(id)arg1 didAppear:(_Bool)arg2;
- (void)photoTileViewController:(id)arg1 willAppear:(_Bool)arg2;
- (void)photoTileViewControllerCancelImageRequests:(id)arg1;
- (void)photoTileViewControllerRequestsFullSizeImage:(id)arg1;
- (void)photoTileViewControllerRequestsFullScreenImage:(id)arg1;
@property(nonatomic) _Bool delayImageLoading;
@property(nonatomic) _Bool canDelayImageLoading;
- (void)_didLoadImage:(id)arg1 forObjectID:(id)arg2;
- (void)_handleImageResultForPhoto:(id)arg1 inTile:(id)arg2 objectID:(id)arg3 result:(id)arg4 info:(id)arg5;
- (void)_loadImageForTile:(id)arg1 format:(int)arg2;
- (_Bool)photoTileViewControllerIsDisplayingLandscape:(id)arg1;
- (void)imageViewDidSwitchToFullSizeImage:(id)arg1;
- (void)imageViewWillSwitchToFullSizeImage:(id)arg1;
- (void)setBottomBarDisabled:(_Bool)arg1;
- (void)setNavigationBarDisabled:(_Bool)arg1;
- (id)videoViewRequestsPickedAirplayRoute:(id)arg1;
- (_Bool)videoViewCanCreateMetadata:(id)arg1;
- (void)videoView:(id)arg1 displayPlayOverlay:(id)arg2;
- (void)videoViewDidCancelEditing:(id)arg1;
- (void)videoViewDidBeginEditing:(id)arg1;
- (void)videoViewWillBeginEditing:(id)arg1;
- (void)videoViewDidEndScrubbing:(id)arg1;
- (void)videoViewDidEndPlayback:(id)arg1 didFinish:(_Bool)arg2;
- (void)videoViewDidPausePlayback:(id)arg1;
- (void)videoViewDidBeginPlayback:(id)arg1;
- (_Bool)videoViewCanBeginPlayback:(id)arg1;
- (_Bool)videoViewShouldRespondToPlayOverlayTap:(id)arg1;
- (void)videoViewDidCreateAttachments:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)mainScrollerDidEndSmoothScroll;
- (void)_showTileCache;
- (void)_makeTilesPerformSelector:(SEL)arg1 withObject:(id)arg2;
- (id)_preloadNextTileInCache:(id)arg1 insideCurrentAssetContainer:(_Bool)arg2;
- (void)_flushTileCache;
- (void)_flushTileCache:(id)arg1 preservingTilesInPageController:(id)arg2;
- (void)_validateTileCache:(id)arg1;
- (void)_prepareForDelete;
- (void)_didDeleteCurrentAsset;
- (void)_finishRemoveAsset:(id)arg1 atIndexPath:(id)arg2;
- (void)removeCurrentPhoto:(id)arg1;
- (void)showPreviousImageWithTransition:(int)arg1 insideCurrentAssetContainer:(_Bool)arg2;
- (void)showNextImageWithTransition:(int)arg1 insideCurrentAssetContainer:(_Bool)arg2;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)_performCATransition:(id)arg1;
- (void)_transitionToImage:(id)arg1 fromOldIndex:(long long)arg2 toNewIndex:(long long)arg3 transition:(int)arg4 transitionView:(id)arg5 insideCurrentAssetContainer:(_Bool)arg6;
- (void)_transitionToImage:(id)arg1 fromOldIndex:(long long)arg2 toNewIndex:(long long)arg3 transition:(int)arg4 insideCurrentAssetContainer:(_Bool)arg5;
- (_Bool)canShowPreviousImage;
- (_Bool)canShowNextImage;
@property(retain, nonatomic) NSIndexPath *currentIndexPath;
- (void)setCurrentIndexPath:(id)arg1 updateAfterAnimation:(_Bool)arg2;
- (void)_fetchPublicGlobalUUIDForCurrentAsset:(id)arg1;
- (void)_setCurrentIndexPath:(id)arg1 refreshAssetTrackingDetails:(_Bool)arg2;
- (void)_setCurrentIndexPath:(id)arg1;
@property(nonatomic) unsigned long long currentTileIndex;
- (void)setCurrentTileIndex:(unsigned long long)arg1 updateAfterAnimation:(_Bool)arg2;
- (_Bool)_canTrimCurrentVideoInPlace;
- (id)_playbackVideoView;
- (id)_currentTVOutVideoView;
@property(readonly, nonatomic) PLVideoView *currentVideoView;
@property(readonly, nonatomic) PHAsset *currentAssetForZoomTransition;
@property(nonatomic) PHAsset *currentAsset;
- (id)_pl_albumAssetsForSlideShow:(id)arg1 startingAtIndex:(unsigned long long)arg2;
- (void)_displayLastImageForSlideshowPlugin:(id)arg1;
- (void)_loadSlideshowPlugin;
- (void)slideshowPluginDidDisplayFinalImage:(id)arg1;
- (void)slideshowPluginReadyToBegin:(id)arg1;
- (void)_slideshowViewWasTapped:(id)arg1;
- (void)_updateAfterAnimation;
- (void)_updateTVOutAfterAnimation;
- (void)updateAfterCollapse;
- (void)_pauseVideoPlaybackForIndexPath:(id)arg1 fullStop:(_Bool)arg2;
- (void)_pauseVideoPlaybackForIndexPath:(id)arg1;
- (void)_stopVideoPlaybackForIndexPath:(id)arg1;
- (void)_fadeIn;
- (void)_fadeToViewContents;
- (void)_fadeOut;
- (void)_prepareToFade;
- (void)setAppInteractionDisabled:(_Bool)arg1;
- (void)playSlideshowFromAlbumUsingOrigami:(_Bool)arg1;
- (void)_setMusicIsPlaying:(_Bool)arg1 forPhoto:(id)arg2;
- (void)_setMusicIsPlaying:(_Bool)arg1;
- (void)_slideshowPlayCurrentSlide;
- (void)_slideshowPlayTimerFired:(id)arg1;
- (_Bool)_stopSlideshow;
- (_Bool)_pauseSlideshow;
- (_Bool)_playSlideshow;
- (_Bool)_startingSlideshow;
- (_Bool)setNextSlideshowState:(int)arg1;
- (void)endSlideshow;
- (void)togglePlayPause:(id)arg1;
@property(readonly, nonatomic) _Bool isPlayingSlideshow;
- (_Bool)_slideshowNotRunning;
- (void)_slideshowWillEnd;
- (void)_slideshowWillBegin;
- (id)_suppresionContexts;
- (_Bool)_appAllowsSupressionOfAlerts;
- (void)cleanupAfterDismissal;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear;
- (void)viewDidAppear;
- (void)viewWillAppear;
- (void)photoScrubber:(id)arg1 scrubbingSpeedDidChange:(long long)arg2;
- (void)animateToIndex;
- (id)photoScrubber:(id)arg1 loadImageSynchronously:(_Bool)arg2 atIndex:(long long)arg3 forLoupe:(_Bool)arg4;
- (long long)numPhotosInAlbumForPhotoScrubber:(id)arg1;
- (void)_photoScrubberDidEndScrubbing:(id)arg1;
- (void)_scrubberDidEndScrubbing:(id)arg1;
- (void)_photoScrubberValueDidChange:(id)arg1;
- (void)_photoScrubberDidBeginScrubbing:(id)arg1;
- (void)_scrubberDidBeginScrubbing:(id)arg1;
@property(retain, nonatomic) PLPhotoScrubber *photoScrubber;
- (void)_setupPhotoScrubber:(_Bool)arg1;
- (void)_discardPhotoScrubber;
- (id)photoTileViewControllerCustomCenterOverlay:(id)arg1;
- (_Bool)photoTileViewControllerCanShowCenterOverlay:(id)arg1;
- (void)photoTileViewController:(id)arg1 commentsControllerWillBeginScrolling:(id)arg2;
- (void)photoTileViewController:(id)arg1 didExitEditModeInCommentsController:(id)arg2;
- (void)photoTileViewController:(id)arg1 willEnterEditModeInCommentsController:(id)arg2;
- (void)_updateForCommentsControllerEditMode:(id)arg1;
- (void)_showCommentTableIfNecessary:(double)arg1;
- (void)_hideCommentsTableIfNecessary:(double)arg1;
- (void)revealComment:(id)arg1;
- (_Bool)showingCommentsTable;
- (void)hideCommentsTable;
- (void)showCommentsTable;
- (void)removeAdjacentCommentsTables;
- (void)pageControllerDidEndPaging:(id)arg1;
- (void)_updateCurrentIndexForPageController:(id)arg1;
- (void)pageControllerWillBeginPaging:(id)arg1;
- (id)pageController:(id)arg1 viewControllerAtIndex:(long long)arg2;
- (void)_willDisplayTileController:(id)arg1;
- (id)rotatingFooterView;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
@property(readonly, nonatomic) UIView *commentsView;
@property(readonly, nonatomic) UIScrollView *mainScroller;
@property(readonly, nonatomic) PHCachingImageManager *cachingImageManager;
- (void)setAssetCollections:(id)arg1 dataSource:(id)arg2 currentImageIndexPath:(id)arg3;
@property(readonly, nonatomic) unsigned long long allAssetsCount;
@property(readonly, nonatomic) PHFetchResult *assetCollectionsFetchResult;
@property(readonly, nonatomic) PHAssetCollection *currentAssetContainerForZoomTransition;
@property(readonly, nonatomic) PHAssetCollection *currentAssetContainer;
- (void)setMainScrollerEnabled:(_Bool)arg1;
- (void)storeCurrentConfiguration:(id)arg1;
- (void)_simpleRemoteActionDidOccur:(id)arg1;
- (void)_updateTileAndImageCachesForChange:(id)arg1;
- (_Bool)_isPhotoTileViewControllerStaleAtIndex:(unsigned long long)arg1;
- (void)_updatePageControllerWithCurrentPath:(id)arg1 priorPreviousTileAsset:(id)arg2 priorNextTileAsset:(id)arg3;
- (id)_findIndexPathForAssetWithObjectID:(id)arg1 globalUUID:(id)arg2 priorIndexPath:(id)arg3 assetCollection:(id)arg4;
- (void)_cancelEditControllerIfEditedPhotoDeleted;
- (id)_updateIndexPath:(id)arg1 withChange:(id)arg2 deleteAction:(int)arg3;
- (void)_updateIndexPathsWithChange:(id)arg1;
- (void)photoLibraryDidChange:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationResumed:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (_Bool)_shouldPauseOrStopVideo;
- (id)_buttonItemViewWithTag:(int)arg1;
- (_Bool)isRotationEnabled;
- (id)navigationBar;
- (void)setRotationDisabled:(_Bool)arg1;
- (_Bool)isActiveViewControllerInNavigationController;
- (void)_showHDRPromptIfNeeded;
- (void)_removeSavingPhotoHUDForPhoto:(id)arg1;
- (void)_showSavingPhotoHUDForPhoto:(id)arg1;
- (void)_forceRemoveSavingPhotoHUD;
- (void)_stopSlideshowTimer;
- (void)_startSlideshowTimer;
- (void)_disableIdleTimer;
- (id)_currentTVOutTile;
- (void)_updateTileImageAfterZoomTransition;
- (void)transitionDidEndWithOperation:(long long)arg1;
- (void)transitionWillBegin;
@property(readonly, nonatomic) PLPhotoTileViewController *currentTileForZoomTransition;
@property(readonly, nonatomic) PLPhotoTileViewController *currentTile;
- (void)_configureVideoViewInTile:(id)arg1;
- (void)_dereferenceTile:(id)arg1;
- (id)_tileForAsset:(id)arg1 shouldCreate:(_Bool)arg2 tileCache:(id)arg3;
- (void)_updateFullScreenPreviewImageForPhoto:(id)arg1 inTile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_cancelImageRequestsForPhoto:(id)arg1;
- (void)_requestImageForPhoto:(id)arg1 imageFormat:(int)arg2 inTile:(id)arg3 resultHandler:(CDUnknownBlockType)arg4;
- (id)_lowResolutionPreviewImageForPhoto:(id)arg1;
- (_Bool)_mainScrollerIsVisible;
- (void)_clearFullScreenView;
- (void)_shuffleAssets:(_Bool)arg1;
- (void)setUsesPhotoBrowserStyleStatusBar:(_Bool)arg1 animated:(_Bool)arg2;
- (id)newToolbar;
- (id)newNavigationBar;
- (id)contentScrollView;
@property(retain, nonatomic) UIScrollView *pageControllerScrollView;
- (Class)_pageControllerScrollViewClass;
@property(nonatomic) id <PLPhotoBrowserControllerDelegate> delegate;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoScrollerViewController : PLPhotoBrowserController
{
    _Bool _modalSheetIsPresent;
    _Bool _dontChangeStatusBar;
    _Bool _viewWillDisappear;
}

- (_Bool)dontChangeStatusBar;
- (void)setDontChangeStatusBar:(_Bool)arg1;
- (void)removeRemakerContainerView;
- (id)remakerContainerView;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)_initWithAssetCollections:(id)arg1 dataSource:(id)arg2 lockStatusBar:(_Bool)arg3 currentImageIndexPath:(id)arg4 delayImageLoading:(_Bool)arg5;

@end

@interface PLPhonePhotoScrollerViewController : PLPhotoScrollerViewController <UINavigationControllerDelegate>
{
    _Bool _isModalTransition;
    _Bool _didDisappearUnderModalTransition;
    UIView *_viewToRemoveForSlideShow;
}

- (_Bool)_isPerformingModalTransitionFromCamera;
- (_Bool)isModalTransitioning;
- (void)beginSlideshowByRemovingView:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithPhotoAtIndexPath:(id)arg1 inAssetCollections:(id)arg2 dataSource:(id)arg3 lockStatusBar:(_Bool)arg4 delayImageLoading:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoBrowserImageRequest : NSObject
{
    _Bool _canceled;
    int _imageManagerRequestID;
}

@property(nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(nonatomic) int imageManagerRequestID; // @synthesize imageManagerRequestID=_imageManagerRequestID;

@end

@interface PLPhotoCommentCell : UITableViewCell
{
    UILabel *_commentContentLabel;
    UILabel *_commentBylineLabel;
    UIView *_styledSeparatorView;
    PLCloudSharedComment *_comment;
}

+ (id)_attributionStringForComment:(id)arg1;
+ (id)_commentStringForComment:(id)arg1;
+ (double)heightForComment:(id)arg1 forWidth:(double)arg2 forInterfaceOrientation:(long long)arg3;
+ (Class)layerClass;
+ (id)_synthesizedAttributedString:(id)arg1 withWordWrapping:(_Bool)arg2;
@property(copy, nonatomic) PLCloudSharedComment *comment; // @synthesize comment=_comment;
@property(readonly, retain, nonatomic) UIView *styledSeparatorView; // @synthesize styledSeparatorView=_styledSeparatorView;
@property(readonly, retain, nonatomic) UILabel *commentBylineLabel; // @synthesize commentBylineLabel=_commentBylineLabel;
@property(readonly, retain, nonatomic) UILabel *commentContentLabel; // @synthesize commentContentLabel=_commentContentLabel;
- (void)layoutSubviews;
- (void)_updateContent;
- (void)delete:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PLPhotoCommentEntryView : UIView <UITextViewDelegate>
{
    UILabel *placeholderLabel;
    UILabel *_placeholderLabel;
    UITextView *_textView;
    UIButton *_postButton;
    id <PLPhotoCommentEntryViewDelegate> _delegate;
}

@property(nonatomic) id <PLPhotoCommentEntryViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, retain, nonatomic) UIButton *postButton; // @synthesize postButton=_postButton;
@property(readonly, retain, nonatomic) UITextView *textView; // @synthesize textView=_textView;
@property(readonly, retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
- (void)textViewDidChange:(id)arg1;
- (void)layoutSubviews;
- (id)trimmedText;
- (void)clearText;
- (double)preferredHeight;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoOwnerCommentCell : UITableViewCell
{
    NSAttributedString *_ownerString;
    UILabel *_ownerContentLabel;
    UIView *_styledSeparatorView;
}

+ (double)heightOfOwnerCellWithAsset:(id)arg1 forWidth:(double)arg2 forInterfaceOrientation:(long long)arg3;
+ (id)_ownerStringForAsset:(id)arg1;
@property(readonly, retain, nonatomic) UIView *styledSeparatorView; // @synthesize styledSeparatorView=_styledSeparatorView;
@property(readonly, retain, nonatomic) UILabel *ownerContentLabel; // @synthesize ownerContentLabel=_ownerContentLabel;
@property(copy, nonatomic) NSAttributedString *ownerString; // @synthesize ownerString=_ownerString;
- (void)layoutSubviews;
- (void)updateContentFromAsset:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PLPhotoPostCommentCell : UITableViewCell
{
    UILabel *_contentLabel;
    UIButton *_addCommentButton;
    UIView *_styledSeparatorView;
}

+ (double)heightForWidth:(double)arg1;
@property(readonly, retain, nonatomic) UIView *styledSeparatorView; // @synthesize styledSeparatorView=_styledSeparatorView;
@property(readonly, retain, nonatomic) UIButton *addCommentButton; // @synthesize addCommentButton=_addCommentButton;
@property(readonly, retain, nonatomic) UILabel *contentLabel; // @synthesize contentLabel=_contentLabel;
- (void)layoutSubviews;
- (void)setupContent;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PLPhotoScrubber : UIControl
{
    id <PLPhotoScrubberDataSource> _dataSource;
    unsigned long long _displayedImageIndex;
    long long _prospectiveImageIndex;
    double _timeOfLastTouch;
    double _lastUpdate;
    UIView *_thumbnailTrackView;
    struct CGRect _thumbnailBounds;
    double _imagesPerViewRatio;
    NSMutableArray *_thumbnailViews;
    UIImageView *_loupeView;
    long long _loupeIndex;
    unsigned long long _imageCount;
    _Bool _scrubbing;
    _Bool _deferImageLoading;
    _Bool _loadImagesSynchronously;
    id <PLPhotoScrubberSpeedDelegate> _speedDelegate;
    double __scrubbingSpeed;
    long long __lastSpeedRegime;
    double __lastTime;
    NSTimer *__timeoutTimer;
}

@property(retain, nonatomic, setter=_setTimeoutTimer:) NSTimer *_timeoutTimer; // @synthesize _timeoutTimer=__timeoutTimer;
@property(nonatomic, setter=_setLastTime:) double _lastTime; // @synthesize _lastTime=__lastTime;
@property(nonatomic, setter=_setLastSpeedRegime:) long long _lastSpeedRegime; // @synthesize _lastSpeedRegime=__lastSpeedRegime;
@property(nonatomic, setter=_setScrubbingSpeed:) double _scrubbingSpeed; // @synthesize _scrubbingSpeed=__scrubbingSpeed;
@property(nonatomic) id <PLPhotoScrubberSpeedDelegate> speedDelegate; // @synthesize speedDelegate=_speedDelegate;
- (void)ppt_scrubToAbsoluteIndex:(long long)arg1 immediately:(_Bool)arg2;
- (void)ppt_setIsScrubbing:(_Bool)arg1;
- (long long)displayedImageIndex;
- (void)setDisplayedImageIndex:(long long)arg1;
- (void)_setDisplayedImageIndex:(id)arg1;
- (void)_setDisplayedImageIndex:(long long)arg1 immediately:(_Bool)arg2;
- (void)_setSpeedRegime:(long long)arg1;
- (void)_handleTimeoutTimer:(id)arg1;
- (void)_rescheduleTimer;
- (void)_performSpeedUpdate;
- (void)setLoupeImage:(id)arg1;
- (void)reloadData;
- (void)reloadDataWithNewDisplayedIndex:(unsigned long long)arg1;
- (void)setDataSource:(id)arg1 reloadData:(_Bool)arg2;
@property(nonatomic) id <PLPhotoScrubberDataSource> dataSource; // @dynamic dataSource;
- (void)_updateLoupe:(_Bool)arg1 force:(_Bool)arg2;
- (void)reloadImageAtIndex:(long long)arg1;
- (void)setImage:(id)arg1 atIndex:(long long)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)isFastScrubbing;
- (_Bool)isScrubbing;
- (void)_setIsScrubbing:(_Bool)arg1;
- (void)_updateLoupeWithTouch:(id)arg1 forceUpdate:(_Bool)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGPoint)_centerForImageAtIndex:(long long)arg1;
- (unsigned long long)_imageIndexFromLocation:(struct CGPoint)arg1;
- (unsigned long long)_thumbnailIndexFromLocation:(struct CGPoint)arg1;
- (void)layoutSubviews;
- (void)setDeferImageLoading:(_Bool)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)dealloc;
- (id)init;

@end

@interface PLPhotoSmilesCommentCell : UITableViewCell
{
    _Bool _showUserLikes;
    _Bool _isVideo;
    UILabel *_smileContentLabel;
    UIButton *_smileImageButton;
    NSOrderedSet *_userLikes;
}

+ (double)heightOfSmileCellWithComments:(id)arg1 forWidth:(double)arg2 isVideo:(_Bool)arg3 forInterfaceOrientation:(long long)arg4;
+ (id)_attributedStringForComments:(id)arg1 color:(id)arg2 isVideo:(_Bool)arg3;
+ (id)_smileStringForComments:(id)arg1;
@property(nonatomic) _Bool isVideo; // @synthesize isVideo=_isVideo;
@property(copy, nonatomic) NSOrderedSet *userLikes; // @synthesize userLikes=_userLikes;
@property(nonatomic) _Bool showUserLikes; // @synthesize showUserLikes=_showUserLikes;
@property(readonly, retain, nonatomic) UIButton *smileImageButton; // @synthesize smileImageButton=_smileImageButton;
@property(readonly, retain, nonatomic) UILabel *smileContentLabel; // @synthesize smileContentLabel=_smileContentLabel;
- (void)layoutSubviews;
- (void)_updateContent;
- (void)prepareForReuse;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PLPhotoTileBadgeView : UIView
{
    long long _style;
    long long _numberOfPhotos;
    UIView *__backgroundView;
    UIImageView *__badgeImageView;
    UILabel *__textLabel;
}

@property(readonly, nonatomic) UILabel *_textLabel; // @synthesize _textLabel=__textLabel;
@property(readonly, nonatomic) UIImageView *_badgeImageView; // @synthesize _badgeImageView=__badgeImageView;
@property(readonly, nonatomic) UIView *_backgroundView; // @synthesize _backgroundView=__backgroundView;
@property(nonatomic) long long numberOfPhotos; // @synthesize numberOfPhotos=_numberOfPhotos;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void)_updateBadgeText;
- (void)setAlpha:(double)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_commonPLPhotoTileBadgeViewInitialization;

@end

@interface PLPhotoTileCloudPlaceholderView : UIView <PLTilePlaceholderView>
{
    PLRoundProgressView *_loadingIndicatorView;
    UIView *_loadingContainerView;
    UIButton *_loadingErrorButton;
    _Bool _indicatorIsVisible;
    _Bool _showingError;
    _Bool _showingLoading;
    struct CGRect _imageRect;
    _Bool _toolbarVisible;
    double _lastViewPhaseChangeDate;
    id <PLPhotoTileCloudPlaceholderViewDelegate> _delegate;
}

- (void)layoutSubviews;
- (void)setImageRect:(struct CGRect)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)_retryDownload;
- (void)setRetryDelegate:(id)arg1;
- (void)setToolbarVisible:(_Bool)arg1;
- (void)showErrorIndicator;
- (void)showLoadingIndicator;
- (void)showLoadingIndicatorWhenReady;
- (void)updateCloudDownloadProgress:(double)arg1;
- (void)fadeOutSoonIfNeededAndRemoveFromSuperview:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoTilePlaceholderView : UIView <PLTilePlaceholderView>
{
    UIActivityIndicatorView *_loadingIndicatorView;
    UILabel *_loadingLabel;
    UIView *_loadingContainerView;
    double _lastViewPhaseChangeDate;
    _Bool _indicatorIsVisible;
}

- (void)layoutSubviews;
- (void)setImageRect:(struct CGRect)arg1;
- (void)setToolbarVisible:(_Bool)arg1;
- (void)showLoadingIndicator;
- (void)showErrorIndicator;
- (void)showLoadingIndicatorWhenReady;
- (void)updateCloudDownloadProgress:(double)arg1;
- (void)fadeOutSoonIfNeededAndRemoveFromSuperview:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotoTileViewController : UIViewController <UIScrollViewDelegate, UIGestureRecognizerDelegate, PLCommentsViewControllerDelegate, PLPhotoTileCloudPlaceholderViewDelegate>
{
    UIImage *_image;
    UIImage *_pendingImage;
    UIImage *_unscaledImage;
    PHAsset *_modelPhoto;
    PLImageScrollView *_scrollView;
    PLExpandableImageView *_imageView;
    PLVideoView *_videoView;
    UIImageView *_gradientView;
    PLPhotoTileBadgeView *_badgeView;
    UIImageView *_reviewCheckmarkImageView;
    UIView<PLTilePlaceholderView> *_placeholderView;
    _Bool _currentTileDownloadFinished;
    PLCommentsViewController *_commentsViewController;
    UIGestureRecognizer *_singleTapGestureRecognizer;
    UIGestureRecognizer *_doubleTapGestureRecognizer;
    id <PLPhotoTileViewControllerDelegate> _tileDelegate;
    int _imageOrientation;
    struct CGSize _imageSize;
    struct CGRect _tileFrame;
    _Bool _zoomToFillInsteadOfToFit;
    _Bool _useLessThanMinZoomForZoomedOutTest;
    _Bool _allowZoomToFill;
    id _orientationDelegate;
    float _cropRectZoomScale;
    struct CGRect _cropOverlayRect;
    struct CGRect _cropRect;
    double _doubleTapZoomScale;
    double _minZoomScale;
    double _zoomToFillScale;
    int _mode;
    long long _lastDisplayedOrientation;
    _Bool _clientIsTemporarilyWallpaper;
    _Bool _userDidAdjustWallpaper;
    float _wallpaperPortraitZoomScale;
    float _wallpaperLandscapeZoomScale;
    float _zoomScaleBeforeZooming;
    struct CGRect _cropRectBeforeDragging;
    _Bool _force1XCroppedImage;
    _Bool _forceNativeScreenScale;
    _Bool _centerContentVertically;
    CDUnknownBlockType _didEndZoomingBlock;
    NSObject<OS_dispatch_source> *_dispatchTimer;
    double _dispatchStartTime;
    double _dispatchTimeElapsed;
    _Bool _hasNotedZoom;
    unsigned int _imageIsThumbnail:1;
    unsigned int _isTVOut:1;
    unsigned int _zooming:1;
    unsigned int _autoZooming:1;
    unsigned int _zoomGesturesEnabled:1;
    unsigned int _userDidZoom:1;
    unsigned int _ignoreZoomChange:1;
    unsigned int _tileParentIsPageController:1;
    unsigned int _lockedUnderCropOverlay:1;
    unsigned int _viewDidAppear:1;
    unsigned int _viewWillAppear:1;
    unsigned int _didRequestFullSizeImage:1;
    unsigned int _useZoomScaleForCropRect:1;
    unsigned int _avalancheBadgeShouldBeHidden:1;
    unsigned int _badgeShouldBeVisible:1;
    unsigned int _commentsTableVisible:1;
    PLTileContainerView *_containerView;
    PHCachingImageManager *__cachingImageManager;
    int _fullSizeImageRequestID;
    NSArray *_customCenterOverlayConstraints;
    _Bool _wantsCompactLayout;
    _Bool _reviewing;
    _Bool _picked;
    _Bool _shouldHideProgressIndicator;
    UIView *__customCenterOverlay;
    struct UIEdgeInsets _overlayInsets;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (id)newPhotoTileViewControllerWithFrame:(struct CGRect)arg1 modelPhoto:(id)arg2 mode:(int)arg3;
+ (id)newPhotoTileViewControllerWithFrame:(struct CGRect)arg1 image:(id)arg2 allowZoomToFill:(_Bool)arg3 mode:(int)arg4;
+ (id)newPhotoTileViewControllerWithFrame:(struct CGRect)arg1 imageRef:(struct CGImage *)arg2 imageOrientation:(long long)arg3 allowZoomToFill:(_Bool)arg4 mode:(int)arg5;
+ (struct CGSize)tvOutTileSize;
+ (struct CGSize)tileSize;
+ (_Bool)shouldShowPlaceholderForAsset:(id)arg1;
@property(retain, nonatomic, setter=_setCustomCenterOverlay:) UIView *_customCenterOverlay; // @synthesize _customCenterOverlay=__customCenterOverlay;
@property(nonatomic) _Bool shouldHideProgressIndicator; // @synthesize shouldHideProgressIndicator=_shouldHideProgressIndicator;
@property(nonatomic) _Bool picked; // @synthesize picked=_picked;
@property(nonatomic) _Bool reviewing; // @synthesize reviewing=_reviewing;
@property(nonatomic) _Bool wantsCompactLayout; // @synthesize wantsCompactLayout=_wantsCompactLayout;
@property(nonatomic) struct UIEdgeInsets overlayInsets; // @synthesize overlayInsets=_overlayInsets;
@property(nonatomic) _Bool force1XCroppedImage; // @synthesize force1XCroppedImage=_force1XCroppedImage;
@property(nonatomic) _Bool forceNativeScreenScale; // @synthesize forceNativeScreenScale=_forceNativeScreenScale;
@property(retain, nonatomic) UIImage *unscaledImage; // @synthesize unscaledImage=_unscaledImage;
@property(readonly, nonatomic) PLCommentsViewController *commentsViewController; // @synthesize commentsViewController=_commentsViewController;
@property(nonatomic) _Bool centerContentVertically; // @synthesize centerContentVertically=_centerContentVertically;
- (void)_updateReviewCheckmark;
- (void)setReviewing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setupReviewCheckmark;
- (void)setLockedUnderCropOverlay:(_Bool)arg1;
- (void)_adjustZoomForEnteringMode:(_Bool)arg1;
- (void)updateAfterCollapse;
- (int)imageOrientation;
- (void)setAllowsZoomToFill:(_Bool)arg1;
- (void)updateZoomScales;
- (void)_setDefaultZoomScale;
- (void)setOrientationDelegate:(id)arg1;
- (_Bool)isZoomedOut;
- (double)currentToDefaultZoomRatio;
- (double)currentToMinZoomRatio;
- (double)defaultZoomScale;
- (double)zoomToFitScale;
- (double)zoomToFillScale;
- (double)minZoomScale;
- (float)_calculateZoomScale:(_Bool)arg1 inView:(id)arg2;
- (double)minRotatedScale;
- (void)_performDidEndZoomBlock;
- (void)_setDidEndZoomingBlock:(CDUnknownBlockType)arg1;
- (void)zoomToScale:(double)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)dictionaryWithCroppedImageForRect:(struct CGRect)arg1 minimalCropDimension:(double)arg2 withOptions:(int)arg3;
- (id)newImageWithCropRect:(struct CGRect)arg1 minimalCropDimension:(double)arg2 croppedImageData:(id *)arg3 fullScreenImageData:(id *)arg4 fullScreenImage:(struct CGImage **)arg5 imageCropRect:(struct CGRect *)arg6 intersectCropWithFullRect:(_Bool)arg7;
- (void)_handleDoubleTap:(id)arg1;
- (void)_readOrientation:(long long *)arg1 andSize:(struct CGSize *)arg2 fromImageData:(id)arg3;
- (void)_handleFullSizeImageRequestResult:(id)arg1 dataUTI:(id)arg2 orientation:(long long)arg3;
- (void)_requestFullSizeImage;
- (void)_handleSingleTap:(id)arg1;
- (void)ensureFullSizeImageLoaded;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)resetZoom;
- (void)updateViewConstraints;
- (void)viewDidLayoutSubviews;
- (void)_viewWillMoveToSuperView:(id)arg1;
- (void)_resetZoomCommon;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidZoom:(id)arg1;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (struct CGSize)scrollView:(id)arg1 contentSizeForZoomScale:(double)arg2 withProposedSize:(struct CGSize)arg3;
- (void)noteParentViewControllerDidDisappear;
- (void)commentsControllerWillBeginScrolling:(id)arg1;
- (void)commentsControllerDidDisplayUnreadComment:(id)arg1;
- (void)commentsControllerDidExitEditMode:(id)arg1;
- (void)commentsControllerWillEnterEditMode:(id)arg1;
- (void)commentsControllerInactiveAreaWasTapped:(id)arg1;
- (void)setCommentsTableVisibility:(_Bool)arg1 duration:(double)arg2;
- (void)removeCommentsTable;
@property(readonly, nonatomic) _Bool commentsTableIsVisible;
- (void)initializeCommentsTable;
- (void)updateForVisibleOverlays:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)loadView;
- (void)cancelFullSizeImageRequest;
- (_Bool)hasFullSizeImage;
- (void)setFullSizeImage:(id)arg1;
- (void)showErrorPlaceholderView;
- (void)_removePlaceholderView;
- (void)didLoadImage;
- (void)refreshTileWithFullScreenImage:(id)arg1 modelPhoto:(id)arg2;
- (void)_setImage:(id)arg1 isThumbnail:(_Bool)arg2 preserveFrame:(_Bool)arg3;
- (void)_updateAggdKeys;
- (void)_updateModelPhotoWithImage:(id)arg1;
- (void)_updatePlaceholderVisibility;
- (void)_updatePlaceholderImageRect;
- (void)_updateContentInset;
- (void)_adjustScrollViewContentOffsetForInsets;
- (void)_centerImageInScrollView;
- (void)retryDownload;
- (void)_updatePlaceholderViewAnimated:(_Bool)arg1;
- (void)updateCloudDownloadProgress:(double)arg1;
- (void)_updateSubviewOrdering;
- (void)_installSubview:(id)arg1;
- (void)installVideoOverlay:(id)arg1;
- (void)_configureViews;
- (void)setBadgeVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setBadgeVisible:(_Bool)arg1;
- (void)_showBadgeViewIfAppropriate;
- (void)_setupBadgeView;
- (void)setAvalancheBadgesHidden:(_Bool)arg1;
- (_Bool)photoShouldHaveAvalancheBadge;
- (_Bool)photoShouldHaveHDRBadge;
- (void)_repositionBadgeView;
- (void)setGesturesEnabled:(_Bool)arg1;
- (_Bool)gesturesEnabled;
- (_Bool)allowsEditing;
- (void)setClientIsWallpaper:(_Bool)arg1;
- (_Bool)_clientIsWallpaper;
- (_Bool)userDidAdjustWallpaper;
- (void)setTVOut:(_Bool)arg1;
- (_Bool)isTVOut;
- (void)setTileDelegate:(id)arg1;
- (id)tileDelegate;
- (void)updateAfterZoomTransitionWithImage:(id)arg1;
- (void)showContentView;
- (void)hideContentView;
- (void)updateCenterOverlay;
- (void)setVideoView:(id)arg1;
- (id)videoView;
- (id)scrollView;
- (id)newCGImageBackedUIImage;
- (id)image;
- (id)commentsView;
- (id)imageView;
- (id)expandableImageView;
- (void)forceZoomingGesturesEnabled;
- (void)setZoomingGesturesEnabled:(_Bool)arg1;
- (void)setCropOverlayRect:(struct CGRect)arg1 forCropRect:(struct CGRect)arg2;
- (void)setZoomScale:(float)arg1;
@property(readonly, copy) NSString *description;
@property(nonatomic) struct CGRect tileFrame;
@property(retain, nonatomic) UIImage *thumbnailImage;
@property(readonly, nonatomic) PHAsset *photo;
- (void)_updateVideoViewForModelPhoto;
- (void)_setPhoto:(id)arg1;
- (_Bool)tileIsOnScreen;
- (void)dealloc;
- (void)_teardownDispatchTimer;
- (id)cachingImageManager;
- (id)initWithModelPhoto:(id)arg1 thumbnailImage:(id)arg2 size:(struct CGSize)arg3;
- (id)initForPageController;
- (id)initWithModelPhoto:(id)arg1 image:(id)arg2 frame:(struct CGRect)arg3 isThumbnail:(_Bool)arg4 imageOrientation:(int)arg5 allowZoomToFill:(_Bool)arg6 mode:(int)arg7;
- (id)init;
- (long long)_imageOrientation;
- (id)_newOriginalImageForPickerFromCachedData;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPhotosApplication : UIApplication <UIApplicationDelegate>
{
    PLUIController *_uiController;
    _Bool _receivingRemoteControlEvents;
    UIWindow *_window;
    _Bool _urlNeedsHandling;
    int _observeForRechabilityChanges;
    _Bool _isReachable;
    _Bool _isOnWifi;
    _Bool _photoStreamIsBusy;
    _Bool _sharedPhotoStreamIsBusy;
    int _photoStreamActivityToken;
    int _sharedPhotoStreamActivityToken;
    int _sharedPhotoStreamInvitationFailureToken;
    NSString *_currentTestName;
    NSDictionary *_currentTestOptions;
    BLActivityAlert *_iPhotoMigrationActivityAlert;
}

+ (void)initialize;
@property(retain, nonatomic) BLActivityAlert *iPhotoMigrationActivityAlert; // @synthesize iPhotoMigrationActivityAlert=_iPhotoMigrationActivityAlert;
@property(retain, nonatomic) NSDictionary *currentTestOptions; // @synthesize currentTestOptions=_currentTestOptions;
@property(retain, nonatomic) NSString *currentTestName; // @synthesize currentTestName=_currentTestName;
@property(readonly, nonatomic) _Bool isOnWifi; // @synthesize isOnWifi=_isOnWifi;
@property(readonly, nonatomic) _Bool isReachable; // @synthesize isReachable=_isReachable;
- (void)presentInternalSettingsController;
- (void)_statusBarDoubleTap:(id)arg1;
- (void *)getSharedAddressBook;
- (void)_updateSharedPhotoStreamProgressDisplay;
- (void)_updatePhotoStreamProgressDisplay;
- (void)_updateNetworkActivityIndicatorAsync;
- (void)_unregisterForPhotoStreamActivityNotifications;
- (void)_registerForPhotoStreamActivityNotifications;
- (_Bool)shouldAllowSBAlertSupression;
- (void)disableNetworkObservation;
- (void)enableNetworkObservation;
- (void)_stopObservingReachabilityChanges;
- (void)_startObservingReachabilityChanges;
- (void)_networkReachabilityDidChange:(id)arg1;
- (void)setReceivingRemoteControlEvents:(_Bool)arg1;
- (_Bool)visitViewControllersWithBlock:(CDUnknownBlockType)arg1;
- (void)_updateSuspensionSettings;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)_applicationDidResignActive:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)photosPreferencesChanged;
- (id)currentUIConfiguration;
- (_Bool)useCompatibleSuspensionAnimation;
- (void)_finishExtendedTest;
- (void)applicationDidFinishLaunching:(id)arg1;
- (void)sharedFinishedLaunching:(_Bool)arg1;
- (id)rootViewController;
- (id)mainWindow;
- (void)_setImageOptions;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

@interface PLPhotosDefaults : NSObject
{
    _Bool _shouldRepeat;
    _Bool _shouldShuffle;
    _Bool _shouldPlayMusic;
    _Bool _summarizeMomentSections;
    int _transition;
    int _secondsPerSlide;
    MPMediaItemCollection *_musicCollection;
}

+ (int)randomTransition;
+ (id)sharedInstance;
- (id)musicCollection;
- (void)setMusicCollection:(id)arg1;
- (void)setShouldPlayMusic:(_Bool)arg1;
- (_Bool)shouldPlayMusic;
- (void)setTransition:(int)arg1;
- (int)transition;
- (int)transitionForAnimationMovingForward:(_Bool)arg1;
- (_Bool)summarizeMomentSections;
- (int)secondsPerSlide;
- (_Bool)shouldShuffle;
- (_Bool)shouldRepeat;
- (id)init;
- (void)_reloadPhotoDefaultValuesAndNotify:(_Bool)arg1;
- (void)reloadPhotoDefaultValues;
- (void)dealloc;

@end

@interface PLPhotosMusicPlayer : NSObject
{
}

+ (void)setShouldRepeatMusic:(_Bool)arg1;
+ (void)continueMusic;
+ (void)pauseMusic:(_Bool)arg1;
+ (void)stopMusic;
+ (void)startMusicForAlbum:(struct NSObject *)arg1;
+ (void)startMusicWithSettings:(id)arg1;

@end

@interface PLSlideshowPlugin : NSObject
{
    id <PLSlideshowPluginDelegate> _delegate;
    struct NSObject *_album;
    NSArray *_albumAssets;
    double _secondsPerSlide;
    _Bool _shuffleAlbum;
    _Bool _shouldRepeat;
}

@property(nonatomic) _Bool shouldRepeat; // @synthesize shouldRepeat=_shouldRepeat;
@property(nonatomic) _Bool shuffleAlbum; // @synthesize shuffleAlbum=_shuffleAlbum;
@property(nonatomic) double secondsPerSlide; // @synthesize secondsPerSlide=_secondsPerSlide;
@property(nonatomic) id <PLSlideshowPluginDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *albumAssets; // @synthesize albumAssets=_albumAssets;
- (void)stopSlideshow;
- (void)resumeSlideshow;
- (void)pauseSlideshow;
- (void)slideshowViewDidDisappear;
- (void)slideshowViewDidAppear;
- (void)slideshowViewWillAppear;
- (id)newSlideshowView;
@property(readonly, nonatomic) NSArray *displayedPhotos;
@property(readonly, nonatomic) PLManagedAsset *currentPhoto;
@property(retain, nonatomic) NSObject<PLAlbumProtocol> *album;
- (void)dealloc;

@end

@interface PLPictureFramePlugin : PLSlideshowPlugin <PLImageLoadingQueueDelegate>
{
    PLImageCache *_imageCache;
    PLImageLoadingQueue *_imageLoadingQueue;
    PLImageSource *_imageSource;
    struct __CFArray *_imageIndexes;
    unsigned long long _currentIndex;
    PLManagedAsset *_requestedImage;
    PLCachedImage *_nextImage;
    PLCroppedImageView *_currentImageView;
    PLCroppedImageView *_nextImageView;
    unsigned int _didLoadFirstImage:1;
    unsigned int _slideshowTimerDidFire:1;
    unsigned int _slideshowTimerIsScheduled:1;
    unsigned int _paused:1;
}

- (void)_slideshowTimerFired;
- (void)_crossFadeAnimationDidStop:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_transitionToNextImage;
- (void)_didLoadImage:(id)arg1;
- (void)_displayFirstImage;
- (void)imageLoadingQueue:(id)arg1 didLoadImage:(id)arg2 forAsset:(id)arg3 fromSource:(id)arg4;
- (void)_requestNextImageSynchronously:(_Bool)arg1;
- (id)_nextImage;
- (long long)_albumImageIndexForSlideIndex:(long long)arg1;
- (void)_scheduleSlideshowTimer;
- (void)stopSlideshow;
- (void)resumeSlideshow;
- (void)pauseSlideshow;
- (void)slideshowViewDidDisappear;
- (void)slideshowViewDidAppear;
- (void)slideshowViewWillAppear;
- (id)newSlideshowView;
- (struct CGRect)_contentBounds;
- (void)setAlbumAssets:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLPlacesMapKitSupport : NSObject
{
    Class _pinAnnotationViewClass;
    Class _annotationViewClass;
    Class _mapViewClass;
    Class _polylineClass;
    Class _polylineViewClass;
    CDStruct_02837cd9 _mapRectWorld;
    CDStruct_02837cd9 _mapRectNull;
    CDUnknownFunctionPointerType _mkMapRectMakeWithRadialDistance;
    CDUnknownFunctionPointerType _mkMapRectUnion;
    CDUnknownFunctionPointerType _mkMapRectIntersectsRect;
    CDUnknownFunctionPointerType _mkMapRectIntersectsMapRectWrappingMeridian;
    CDUnknownFunctionPointerType _mkCoordinateRegionForMapRect;
    CDUnknownFunctionPointerType _mkMapRectForCoordinateRegion;
    CDUnknownFunctionPointerType _mkMapPointForCoordinate;
    CDUnknownFunctionPointerType _mkCoordinateForMapPoint;
    CDUnknownFunctionPointerType _mkMapPointsPerMeterAtLatitude;
    CDUnknownFunctionPointerType _mkMetersPerMapPointAtLatitude;
}

+ (id)sharedInstance;
- (double)metersPerMapPointAtLatitude:(double)arg1;
- (double)mapPointsPerMeterAtLatitude:(double)arg1;
- (CDStruct_c3b9c2ee)coordinateForMapPoint:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_c3b9c2ee)mapPointForCoordinate:(CDStruct_c3b9c2ee)arg1;
- (CDStruct_02837cd9)mapRectForCoordinateRegion:(CDStruct_02837cd9)arg1;
- (CDStruct_02837cd9)coordinateRegionForMapRect:(CDStruct_02837cd9)arg1;
- (_Bool)mapRectIntersectsWrappingMeridian:(CDStruct_02837cd9)arg1 rect:(CDStruct_02837cd9)arg2;
- (_Bool)mapRectIntersectsRect:(CDStruct_02837cd9)arg1 rect:(CDStruct_02837cd9)arg2;
- (CDStruct_02837cd9)mapRectUnion:(CDStruct_02837cd9)arg1 rect:(CDStruct_02837cd9)arg2;
- (CDStruct_02837cd9)mapRectAtCoordinate:(CDStruct_c3b9c2ee)arg1 radialDistance:(double)arg2;
- (CDStruct_02837cd9)mapRectNull;
- (CDStruct_02837cd9)mapRectWorld;
- (Class)polylineViewClass;
- (Class)polylineClass;
- (Class)mapViewClass;
- (Class)annotationViewClass;
- (Class)pinAnnotationViewClass;
- (id)init;

@end

@interface PLPolaroidImageView : PLImageView
{
    UIView *_posterView;
    UILabel *_nameLabel;
    double _thinBorderWidth;
    _Bool _polaroidBorderVisible;
    struct CGRect _roi;
}

+ (Class)layerClass;
- (void)_updatePolaroidFramePath:(_Bool)arg1;
- (void)_adjustLabel;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1 allowRounding:(_Bool)arg2;
- (void)renderSnapshotInContext:(struct CGContext *)arg1;
- (void)layoutSubviews;
- (void)setName:(id)arg1;
- (void)setPosterImage:(id)arg1 regionOfInterest:(struct CGRect)arg2;
@property(retain, nonatomic) UIImage *posterImage;
- (void)setTransitionProgress:(double)arg1;
- (void)setBorderAndAccessoriesVisible:(_Bool)arg1;
- (double)_tunedProgress;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLProgressHUD : UIView
{
    _UIBackdropView *_backdropView;
    UIActivityIndicatorView *_activityIndicatorView;
    UILabel *_label;
    UIImageView *_checkmarkView;
    _Bool _isShowing;
}

- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)done;
- (void)hide;
- (void)showInView:(id)arg1;
- (void)setText:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLProgressView : UIView
{
    UIButton *_cancelButton;
    UILabel *_labelView;
    UIProgressView *_progressView;
    UIView *_topDivider;
    unsigned int _didLayout:1;
    unsigned int _didSetPermanantTextOnLabelView:1;
    NSNumberFormatter *_progressFormatter;
    long long _backgroundType;
    UIView *_backgroundView;
    UIView *_backgroundTintedView;
    _UIBackdropView *_backgroundBlurredView;
    _Bool _showsCancelButton;
    CDUnknownBlockType _cancelationHandler;
}

@property(copy, nonatomic) CDUnknownBlockType cancelationHandler; // @synthesize cancelationHandler=_cancelationHandler;
@property(nonatomic) _Bool showsCancelButton; // @synthesize showsCancelButton=_showsCancelButton;
@property(retain, nonatomic) _UIBackdropView *backgroundBlurredView; // @synthesize backgroundBlurredView=_backgroundBlurredView;
@property(retain, nonatomic) UIView *backgroundTintedView; // @synthesize backgroundTintedView=_backgroundTintedView;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) long long backgroundType; // @synthesize backgroundType=_backgroundType;
- (void)_cancel:(id)arg1;
@property(nonatomic) float percentComplete;
- (void)setLabelText:(id)arg1;
- (void)updateUIForPublishingAgent:(id)arg1;
- (void)_removeBackgroundTintedView;
- (void)_installBackgroundTintedView;
- (void)_removeBackgroundBlurredView;
- (void)_installBackgroundBlurredView;
- (void)_installBackgroundView;
- (void)_syncToBackgroundType;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLPublicURLActivityView : UIView
{
    UIActivityIndicatorView *_spinner;
    UILabel *_infoLabel;
}

- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 turningPublicURLON:(_Bool)arg2;

@end

@interface PLPublishAlbum : NSObject
{
    NSString *_title;
}

@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (long long)compare:(id)arg1;
- (void)dealloc;

@end

@interface PLPublishingAgent : NSObject <PLDataArrayInputStreamProgressDelegate, UIAlertViewDelegate>
{
    id _userInfo;
    id _delegate;
    NSString *_mediaPath;
    NSData *_mediaData;
    NSString *_mimeType;
    _Bool _deleteAfterPublishing;
    double _changeRate;
    long long _currentValue;
    double _estimatedTimeRemaining;
    long long _maxValue;
    long long _normalizedCurrentValue;
    long long _normalizedMaxValue;
    float _percentComplete;
    float _remakingPercentComplete;
    float _progressMultiplier;
    NSMutableArray *_snapshotTimes;
    NSMutableArray *_snapshotValues;
    _Bool _ownerIsCamera;
    _Bool _needsRemaking;
    double _startTime;
    double _endTime;
    long long _approximateHDUploadSize;
    long long _approximateSDUploadSize;
    _Bool _mediaIsHDVideo;
    _Bool _enableHDUpload;
    _Bool _needsTrimming;
    _Bool _allowsHDOver3GUpload;
    int _selectedOption;
    PLVideoRemaker *_remaker;
    int _remakerMode;
    SEL _completionSelector;
    unsigned int _remakingWasCancelled:1;
    unsigned int _remaking:1;
    unsigned int _publishing:1;
    _Bool _shouldCancelPublish;
}

+ (id)publishingAgentForBundleNamed:(id)arg1 toPublishMedia:(id)arg2;
@property(nonatomic) _Bool shouldCancelPublish; // @synthesize shouldCancelPublish=_shouldCancelPublish;
@property(nonatomic) _Bool allowsHDOver3GUpload; // @synthesize allowsHDOver3GUpload=_allowsHDOver3GUpload;
@property(nonatomic) float progressMultiplier; // @synthesize progressMultiplier=_progressMultiplier;
@property(nonatomic) int selectedOption; // @synthesize selectedOption=_selectedOption;
@property(nonatomic) int remakerMode; // @synthesize remakerMode=_remakerMode;
@property(nonatomic) _Bool needsTrimming; // @synthesize needsTrimming=_needsTrimming;
@property(nonatomic) _Bool enableHDUpload; // @synthesize enableHDUpload=_enableHDUpload;
@property(nonatomic) _Bool mediaIsHDVideo; // @synthesize mediaIsHDVideo=_mediaIsHDVideo;
@property(nonatomic) long long approximateSDUploadSize; // @synthesize approximateSDUploadSize=_approximateSDUploadSize;
@property(nonatomic) long long approximateHDUploadSize; // @synthesize approximateHDUploadSize=_approximateHDUploadSize;
@property(nonatomic) _Bool ownerIsCamera; // @synthesize ownerIsCamera=_ownerIsCamera;
@property(nonatomic) id <PLPublishingAgentDelegate> delegate; // @synthesize delegate=_delegate;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showAlertWithError:(id)arg1;
- (int)_remakerModeForSelectedOption;
- (id)progressViewMessageDuringRemake;
- (void)videoRemaker:(id)arg1 progressDidChange:(float)arg2;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)_remakerDidFinish:(id)arg1;
- (void)videoRemakerDidBeginRemaking:(id)arg1;
- (void)_transcodeVideo:(id)arg1;
- (void)_cancelRemaking:(id)arg1;
- (_Bool)isRemaking;
- (void)cancelRemaking;
- (float)remakingPercentComplete;
- (float)percentComplete;
- (double)estimatedTimeRemaining;
- (void)_updateStatisticsFromSnapshots;
- (void)snapshot;
- (void)setTotalBytesWritten:(long long)arg1 totalBytes:(long long)arg2;
- (void)dataArrayInputStreamBytesWereRead:(id)arg1;
- (double)maximumVideoDuration;
- (_Bool)allowsViewingOnHost;
- (_Bool)allowsTellingFriend;
- (id)tellAFriendBody;
- (id)tellAFriendSubject;
- (id)tellAFriendURL;
- (_Bool)isVideoMedia;
- (id)mediaTitle;
- (id)mediaURL;
- (void)willDismiss;
- (void)dismiss;
- (void)presentModalSheetInViewController:(id)arg1;
- (id)serviceName;
- (void)publish;
- (void)_agentIsReadyToPublish:(id)arg1;
- (void)doneButtonClicked;
- (void)cancelButtonClicked;
- (id)navigationController;
- (void)resignPublishingSheetResponders;
- (void)_setApproximateVideoUploadSizes;
- (void)setTrimStartTime:(double)arg1 andEndTime:(double)arg2;
- (void)setPublishing:(_Bool)arg1;
- (_Bool)isPublishing;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (void)setMediaData:(id)arg1;
- (id)mediaData;
- (_Bool)deleteMediaFileAfterPublishing;
- (void)setDeleteMediaFileAfterPublishing:(_Bool)arg1;
- (void)setMediaPath:(id)arg1;
- (id)mediaPath;
- (void)_setUpPublishingParams;
- (void)dealloc;
- (id)initWithMedia:(id)arg1;
- (void)_stopNetworkObservation;
- (void)_startNetworkObservation;
- (void)_networkReachabilityDidChange:(id)arg1;
@property(readonly, nonatomic) _Bool allowsCellularAccessForRequests;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLRoundProgressView : UIView
{
    CAShapeLayer *_sliceLayer;
    CAShapeLayer *_circleLayer;
    struct CGPoint _pieCenter;
    double _pieRadius;
    NSTimer *_progressTimer;
    double _uiProgress;
    double _realProgress;
    double _increaseRate;
    NSDate *_prevUpdateTime;
    long long _style;
}

@property(readonly, nonatomic) long long style; // @synthesize style=_style;
- (void)resetProgress;
- (void)setProgress:(double)arg1;
- (void)recalculateIncreaseProgress:(double)arg1 withTimeDiff:(double)arg2;
- (void)setInitialIncreaseRatePerFrame:(double)arg1;
- (void)increaseUIProgress:(id)arg1;
- (double)toRadian:(double)arg1;
- (void)startProgressTimer;
- (void)stopProgressTimer;
- (void)setPieRadius:(double)arg1;
- (void)setPieCenter:(struct CGPoint)arg1;
- (void)_setupSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLSharingController : NSObject
{
}

+ (void)copyItemsToPasteboard:(id)arg1;
+ (_Bool)canUploadHDVideoOverCellular;
+ (void)openEmailAccountPrefs;
+ (_Bool)allowedToModifyEmailAccounts;
+ (_Bool)canSendEmail;

@end

@interface PLSlalomRegionEditor : UIControl
{
    UIImageView *_startHandleView;
    UIImageView *_endHandleView;
    UIImageView *_trackImageView;
    UIImageView *_trackSnapshotView;
    _Bool _draggingStart;
    _Bool _draggingEnd;
    double _touchOffset;
    _Bool _zoomed;
    _Bool _trackingZoom;
    struct CGPoint _touchLocationWhenTrackingZoomBegan;
    _Bool _forceLayout;
    double _zoomMinValue;
    double _zoomMaxValue;
    _Bool _zoomAnimating;
    id <PLSlalomRegionEditorDelegate> _delegate;
    double _trimHandleWidth;
    double _minValue;
    double _maxValue;
    double _startValue;
    double _endValue;
    double _zoomDelay;
    struct UIEdgeInsets _trackInsets;
}

@property(nonatomic, getter=isZoomAnimating, setter=setZoomAnimating:) _Bool zoomAnimating; // @synthesize zoomAnimating=_zoomAnimating;
@property(nonatomic) double zoomDelay; // @synthesize zoomDelay=_zoomDelay;
@property(nonatomic) double endValue; // @synthesize endValue=_endValue;
@property(nonatomic) double startValue; // @synthesize startValue=_startValue;
@property(nonatomic) double maxValue; // @synthesize maxValue=_maxValue;
@property(nonatomic) double minValue; // @synthesize minValue=_minValue;
@property(nonatomic) double trimHandleWidth; // @synthesize trimHandleWidth=_trimHandleWidth;
@property(nonatomic) struct UIEdgeInsets trackInsets; // @synthesize trackInsets=_trackInsets;
@property(nonatomic) id <PLSlalomRegionEditorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_handleImage;
- (void)_drawCurveWithFlatEndsFromX:(double)arg1 fromY:(double)arg2 toX:(double)arg3 toY:(double)arg4;
- (id)_trackImageForZoom:(_Bool)arg1;
- (void)_updateTrack;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_cancelZoom;
- (void)_zoomPressWasHeld;
- (void)_cancelTrackingZoom;
- (void)_cancelZoomTrackingIfNeccessaryWithTouch:(id)arg1;
- (void)_beginTrackingZoomWithTouch:(id)arg1;
- (void)_updateSlidersWithTouch:(id)arg1;
- (void)_stopTrackingAndSendControlEvents:(unsigned long long)arg1;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)_isTouch:(id)arg1 inHandleIsStart:(_Bool)arg2 outTouchOffset:(double *)arg3;
- (double)_valueFromHandleFrame:(struct CGRect)arg1 isStart:(_Bool)arg2;
- (struct CGRect)_handleFrameForValue:(double)arg1 isStart:(_Bool)arg2;
- (double)_trimHandleWidth;
- (double)_trackScale;
- (struct CGRect)_trackFrame;
- (struct CGRect)_trackFrameNoZoom;
- (double)_valueFromEndHandleFrame:(struct CGRect)arg1;
- (double)_valueFromStartHandleFrame:(struct CGRect)arg1;
- (struct CGRect)_endHandleFrame;
- (struct CGRect)_startHandleFrame;
- (_Bool)_isZoomed;
- (double)_zoomMaxValue;
- (double)_zoomMinValue;
- (void)setZoomMinValue:(double)arg1 maxValue:(double)arg2;
- (void)setEndValue:(double)arg1 notify:(_Bool)arg2;
- (void)setStartValue:(double)arg1 notify:(_Bool)arg2;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLSlideshowAirPlayRoutesViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    UIView *_containerView;
    UITableView *_table;
    NSArray *_airplayRoutes;
    unsigned long long _selectedRouteIndex;
}

@property(nonatomic) unsigned long long selectedRouteIndex; // @synthesize selectedRouteIndex=_selectedRouteIndex;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)dealloc;
- (void)loadView;
- (id)initWithAirplayRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLSlideshowSettingsViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, MPMediaPickerControllerDelegate>
{
    NSArray *_airplayRoutes;
    unsigned long long _selectedAirplayRouteIndex;
    NSArray *_transitionKeys;
    NSArray *_alternateTransitionLocalizations;
    MPMediaPickerController *_mediaPicker;
    PLSlideshowTransitionsViewController *_transitionsController;
    PLSlideshowAirPlayRoutesViewController *_airPlayRoutesController;
    UITableView *_table;
    UITableViewCell *_transitionCell;
    UITableViewCell *_selectedMusicCell;
    UITableViewCell *_playMusicSwitchCell;
    _Bool _slideshowShouldPlayMusic;
    id <PLSlideshowSettingsViewControllerDelegate> _delegate;
    NSString *_selectedTransition;
    MPMediaItemCollection *_slideshowMusicCollection;
}

+ (int)_uiTransitionForTransitionKey:(id)arg1;
+ (id)iPadTransitions;
+ (id)iPhoneTransitions;
+ (id)TVOutTransitions;
+ (id)AppleTVPushTransitions;
@property(retain, nonatomic) MPMediaItemCollection *slideshowMusicCollection; // @synthesize slideshowMusicCollection=_slideshowMusicCollection;
@property(nonatomic) _Bool slideshowShouldPlayMusic; // @synthesize slideshowShouldPlayMusic=_slideshowShouldPlayMusic;
@property(copy, nonatomic) NSString *selectedTransition; // @synthesize selectedTransition=_selectedTransition;
@property(nonatomic) id <PLSlideshowSettingsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)mediaPickerDidCancel:(id)arg1;
- (void)mediaPicker:(id)arg1 didPickMediaItems:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)_buttonSection;
- (long long)_mainSection;
- (long long)_airPlaySection;
- (_Bool)_includeAirPlaySection;
- (void)_preheatMediaPicker;
- (void)_playButtonWasPressed:(id)arg1;
- (id)_selectedMusic;
- (unsigned long long)supportedInterfaceOrientations;
- (struct CGSize)contentSizeForViewInPopoverView;
- (void)loadView;
- (void)updateTransitionKeys:(id)arg1;
- (void)_updateSettingsInfo;
- (id)_selectedAirplayRoute;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_playMusicSwitchValueDidChange:(id)arg1;
- (id)slideshowSettings;
- (void)applySlideshowSettings:(id)arg1;
- (id)initWithAirplayRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLSlideshowTransitionsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    UIView *_containerView;
    UITableView *_table;
    NSMutableArray *_tableCells;
    NSArray *_transitionKeys;
    NSArray *_alternateLocalizations;
    NSString *_selectedTransition;
}

@property(retain, nonatomic) NSArray *alternateLocalizations; // @synthesize alternateLocalizations=_alternateLocalizations;
@property(retain, nonatomic) NSArray *transitionKeys; // @synthesize transitionKeys=_transitionKeys;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (struct CGSize)contentSizeForViewInPopoverView;
@property(retain, nonatomic) NSString *selectedTransition;
- (void)_configureTableCells;
- (void)setTransitionKeys:(id)arg1 alternateLocalizations:(id)arg2;
- (void)dealloc;
- (void)viewDidUnload;
- (void)loadView;
- (id)initWithTransitions:(id)arg1 alternateTransitionLocalizations:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLStaticWallpaperImageViewController : PLWallpaperImageViewController
{
}

- (void)photoTileViewControllerDidEndGesture:(id)arg1;
- (void)providerLegibilitySettingsChanged:(id)arg1;
@property(nonatomic) _Bool colorSamplingEnabled;
- (void)setWallpaperForLocations:(long long)arg1;
- (id)wallpaperImage;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithPhoto:(id)arg1;
- (id)initWithUIImage:(id)arg1 cropRect:(struct CGRect)arg2;
- (id)initWithUIImage:(id)arg1;

@end

@interface PLSyncProgressView : UIView
{
    UIActivityIndicatorView *_spinner;
    UILabel *_infoLabel;
    NSNumberFormatter *_countFormatter;
    int _style;
    int _progressType;
    unsigned long long _currentCount;
    unsigned long long _totalCount;
}

@property(readonly, nonatomic) unsigned long long totalCount; // @synthesize totalCount=_totalCount;
@property(readonly, nonatomic) unsigned long long currentCount; // @synthesize currentCount=_currentCount;
@property(readonly, nonatomic) int progressType; // @synthesize progressType=_progressType;
@property(readonly, nonatomic) int style; // @synthesize style=_style;
- (id)_progressDescription;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setCurrentCount:(unsigned long long)arg1 totalCount:(unsigned long long)arg2 progressType:(int)arg3;
- (void)dealloc;
- (id)initWithStyle:(int)arg1;

@end

@interface PLTVOutWindow : UIWindow
{
    UIView *_backgroundView;
    UIView *_videoView;
}

- (id)videoView;
- (_Bool)setVideoView:(id)arg1;
- (_Bool)_setupTargetScreen:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLTableViewEditableCell : UITableViewCell <UITextViewDelegate, UITextFieldDelegate>
{
    PLTextView *_textView;
    UITextField *_textField;
    UILabel *_sizeTextLabel;
    id _delegate;
    _Bool _forceFirstResponder;
    int _cellStyle;
}

+ (id)posterCellIdentifier;
@property(nonatomic) int style; // @synthesize style=_cellStyle;
- (_Bool)textViewShouldEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (struct CGSize)contentSize;
- (void)_textFieldChanged;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textFieldShouldEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)setPlaceholderText:(id)arg1;
- (id)value;
- (void)setValue:(id)arg1;
- (_Bool)isEditing;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
- (void)layoutSubviews;
- (id)sizeTextLabel;
- (void)forceFirstResponder:(_Bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 cellStyle:(int)arg2;
- (id)initHDSDCell;
- (id)initWithFrame:(struct CGRect)arg1 multiLine:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLTableViewEditableTagCell : PLTableViewEditableCell
{
}

- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

@end

@interface PLTextView : UITextView
{
    UILabel *_placeholder;
    _Bool _showingPlaceholder;
}

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)setPlaceholderText:(id)arg1;
- (id)_placeholder;
- (void)updatePlaceholder;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)dealloc;

@end

@interface PLTexturedCardViewController : UIViewController <PLModalDimmingContained>
{
    UIImageView *_decorationView;
    UIImageView *_innerShadowView;
    UIView *_wrapperView;
    UINavigationBar *_navigationBar;
    UINavigationController *_navigationController;
}

- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)_updateWrapperViewToOrientation:(long long)arg1;
- (void)_updateNavigationBarToOrientation:(long long)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillLayoutSubviews;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)popViewControllerAnimated:(_Bool)arg1;
- (void)loadView;
- (struct CGSize)preferredSizeInParentViewController;
- (struct CGPoint)preferredOffsetInParentViewController;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface PLTileContainerView : UIView
{
    PLPhotoTileViewController *_photoTileController;
}

- (_Bool)canBecomeFirstResponder;
- (void)clearBackReference;
- (void)willMoveToSuperview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 photoTileController:(id)arg2;

@end

@interface PLTiledLayer : CALayer
{
    struct CGSize _jpegImageSize;
}

@property(readonly, nonatomic) struct CGSize jpegImageSize; // @synthesize jpegImageSize=_jpegImageSize;
- (void)flushCache;
- (void)setVisibleRectangle:(struct CGRect)arg1 zoomScale:(double)arg2;
- (void)setTileProcessingEnabled:(_Bool)arg1 withProcessingID:(unsigned long long)arg2 placeholderImage:(struct CGImage *)arg3;
@property(nonatomic) __weak id <PLTileProcessor> tileProcessor;
- (id)initWithJPEGData:(id)arg1 placeholderImage:(struct CGImage *)arg2;

@end

@interface PLToolbar : UIToolbar
{
    unsigned int _backgroundHidden:1;
    unsigned int _backgroundAlwaysVisible:1;
    UIToolbar *_persistentToolbar;
}

@property(nonatomic, getter=isBackgroundAlwaysVisible) _Bool backgroundAlwaysVisible;
@property(nonatomic, getter=isBackgroundHidden) _Bool backgroundHidden;
- (void)drawRect:(struct CGRect)arg1;
- (void)dealloc;

@end

@interface PLTouchGestureRecognizer : UIGestureRecognizer
{
    UITouch *_touch;
    struct CGPoint _previousLocation;
}

- (void)reset;
- (struct CGPoint)locationInView:(id)arg1;
- (struct CGPoint)translationInView:(id)arg1;
- (void)setTranslation:(struct CGPoint)arg1 inView:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface PLUICameraViewController : CAMCameraViewController <UIImagePickerCameraViewController>
{
    long long _previousStatusBarStyle;
    long long _newStatusBarStyle;
    struct CGAffineTransform _previewViewTransform;
}

- (void)_applicationWillEnterForeground:(id)arg1;
- (_Bool)cameraViewShouldShowPreviewAfterSelection:(id)arg1;
- (void)cameraView:(id)arg1 videoSavedToPath:(id)arg2 editingInfo:(id)arg3;
- (void)cameraView:(id)arg1 photoSaved:(id)arg2;
- (void)cameraViewWillPreviewPhoto:(id)arg1;
- (void)cameraViewWillRetakePhoto:(id)arg1;
- (void)cameraViewCancelled:(id)arg1;
- (void)_windowOrientationWillChange:(id)arg1;
- (void)_adjustContentSizeForOrientation:(long long)arg1;
- (void)_stopVideoCapture;
- (_Bool)_startVideoCapture;
- (void)_setAllowsStillFromVideoMode:(_Bool)arg1;
- (void)_setCameraFlashMode:(long long)arg1;
- (long long)_cameraFlashMode;
- (void)_setCameraCaptureMode:(long long)arg1 device:(long long)arg2;
- (void)_setCameraCaptureMode:(long long)arg1;
- (long long)_cameraCaptureMode;
- (void)_setCameraDevice:(long long)arg1;
- (long long)_cameraDevice;
- (void)_takePicture;
- (void)_setCameraViewTransform:(struct CGAffineTransform)arg1;
- (struct CGAffineTransform)_cameraViewTransform;
- (void)_setCameraOverlayView:(id)arg1;
- (id)_cameraOverlayView;
- (void)_setShowsCameraControls:(_Bool)arg1;
- (_Bool)_showsCameraControls;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (void)_editabilityChanged:(id)arg1;
- (void)setWantsImageData:(_Bool)arg1;
- (void)setAllowsEditing:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (long long)preferredStatusBarUpdateAnimation;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (long long)_imagePickerStatusBarStyle;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)loadView;
- (id)_cameraView;
- (void)dealloc;
- (_Bool)_displaysFullScreen;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLUIController : NSObject
{
    id _delegate;
    UITransitionView *_fullScreenTransitionView;
    NSDictionary *_configuration;
}

+ (id)sharedInstance;
- (id)configuration;
- (void)setConfiguration:(id)arg1;
- (id)contentViewWithFrame:(struct CGRect)arg1;
- (void)setDelegate:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface PLUIEditVideoViewController : PLUIImageViewController <UIImagePickerControllerDelegate, UINavigationControllerDelegate>
{
    NSDictionary *_options;
    UIImagePickerController *_imagePicker;
    UINavigationItem *_navItem;
    id _delegate;
    Class _viewClass;
    unsigned int _canCreateMetadata;
    _Bool _parentInPopoverException;
}

@property(nonatomic) _Bool parentInPopoverException; // @synthesize parentInPopoverException=_parentInPopoverException;
- (void)videoViewPlaybackDidFail:(id)arg1;
- (_Bool)videoViewCanCreateMetadata:(id)arg1;
- (double)videoViewScrubberYOrigin:(id)arg1 forOrientation:(long long)arg2;
- (void)_trimVideo:(id)arg1;
- (struct CGRect)previewFrame;
- (int)cropOverlayMode;
- (void)_cancelTrim:(id)arg1;
- (void)videoRemakerDidEndRemaking:(id)arg1 temporaryPath:(id)arg2;
- (void)didChooseVideoAtURL:(id)arg1 options:(id)arg2;
- (void)loadView;
- (void)setViewClass:(Class)arg1;
- (Class)_viewClass;
- (id)uiipc_imagePickerController;
- (id)_trimMessage;
- (id)uiipc_imagePickerOptions;
- (void)setImagePickerOptions:(id)arg1;
- (void)dealloc;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)navigationItem;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (id)initWithVideoURL:(id)arg1 trimTitle:(id)arg2;
- (id)initWithProperties:(id)arg1;
- (id)initWithPhoto:(id)arg1 trimTitle:(id)arg2;
- (void)_setupNavigationItemAndTrimTitle:(id)arg1;
- (_Bool)_editingForThirdParty;
- (_Bool)_displaysFullScreen;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLUIPrivacyViewController : UIViewController
{
    _Bool _showingAccessDeniedView;
    _UIAccessDeniedView *_accessDeniedView;
}

- (void)_cancelButtonClicked:(id)arg1;
- (void)_showCancelButton;
- (void)_updateAccessDeniedView;
- (void)loadView;
- (void)_setImagePickerMediaTypes:(id)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)dealloc;

@end

@interface PLUIView : UIView
{
    _Bool _disableViewInPopoverRule;
}

@property(nonatomic) _Bool disableViewInPopoverRule; // @synthesize disableViewInPopoverRule=_disableViewInPopoverRule;
- (void)didMoveToWindow;

@end

@interface PLVideoEditingOverlayView : UIView
{
    UILabel *_titleLabel;
    UITextView *_bodyLabel;
}

- (void)setBody:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLVideoOutBackgroundView : PLPlayingExternallyBackgroundView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLVideoPosterFrameView : UIView
{
    UIImageView *_imageView;
    unsigned long long _scaleMode;
}

@property(readonly, nonatomic) struct CGRect imageFrame;
- (id)imageView;
- (id)image;
- (void)setScaleMode:(unsigned long long)arg1;
- (void)setImage:(id)arg1;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLVideoRemaker : NSObject
{
    NSString *_trimmedPath;
    double _duration;
    double _trimStartTime;
    double _trimEndTime;
    int _mode;
    AVAssetExportSession *_exportSession;
    float _percentComplete;
    NSTimer *_progressTimer;
    PLProgressView *_progressView;
    id _delegate;
    CDUnknownBlockType _progressHandler;
    PFVideoAVObjectBuilder *__videoAVObjectBuilder;
}

+ (int)getSDRemakerModeForMode:(int)arg1;
+ (int)getHDRemakerModeForMode:(int)arg1;
+ (long long)approximateByteSizeForMode:(int)arg1 duration:(double)arg2;
+ (double)maximumDurationForTrimMode:(int)arg1;
+ (long long)fileLengthLimitForRemakerMode:(int)arg1;
@property(readonly, retain, nonatomic) PFVideoAVObjectBuilder *_videoAVObjectBuilder; // @synthesize _videoAVObjectBuilder=__videoAVObjectBuilder;
@property(copy, nonatomic) CDUnknownBlockType progressHandler; // @synthesize progressHandler=_progressHandler;
- (void)_exportCompletedWithSuccess:(_Bool)arg1;
- (void)cancel;
- (void)_didEndRemakingWithTemporaryPath:(id)arg1;
- (id)_fileFormatForURL:(id)arg1;
- (void)remake;
- (void)_updateProgress;
- (void)_removeProgressTimer;
- (void)_resetProgressTimer;
- (void)setTrimEndTime:(double)arg1;
- (double)trimEndTime;
- (void)setTrimStartTime:(double)arg1;
- (double)trimStartTime;
- (void)setMode:(int)arg1;
- (int)mode;
- (void)setDuration:(double)arg1;
- (double)duration;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (id)progressView;
- (id)messageForRemakingProgress;
- (void)dealloc;
- (id)initWithManagedAsset:(id)arg1 applyVideoAdjustments:(_Bool)arg2;
- (id)initWithAVAsset:(id)arg1;

@end

@interface PLVideoView : UIView <UIMovieScrubberDelegate, UIMovieScrubberDataSource, PLMoviePlayerControllerDelegate, PLSlalomRegionEditorDelegate>
{
    PLManagedAsset *_videoCameraImage;
    NSString *_pathToOriginalVideo;
    NSURL *_videoURL;
    PLPhotoTileViewController *_imageTile;
    PLVideoPosterFrameView *_posterFrameView;
    UIView *_videoOverlayBackgroundView;
    PLVideoEditingOverlayView *_trimMessageView;
    UIImage *_posterFrameImage;
    UIImage *_snapshotImage;
    double _scrubberWidth;
    unsigned long long _scaleMode;
    UIView *_scrubberBackgroundView;
    UIView *_scrubberTitleView;
    NSTimer *_scrubberUpdateTimer;
    NSDictionary *_thumbnailOptionsDict;
    struct CGSize _thumbnailSize;
    PLPhotoBakedThumbnails *_bakedLandscapeThumbnails;
    PLPhotoBakedThumbnails *_bakedPortraitThumbnails;
    AVAssetExportSession *_exportSession;
    double _remakerStartTime;
    double _remakerEndTime;
    NSString *_trimmedPath;
    NSString *_videoPathAfterTrim;
    NSTimer *_trimProgressTimer;
    PLManagedAsset *_trimmedVideoClip;
    PLProgressStack *_trimProgressStack;
    float _progress;
    long long _interfaceOrientation;
    PLMoviePlayerController *_moviePlayer;
    long long _orientationWhenLastDisplayed;
    id <PLVideoViewDelegate> _delegate;
    double _maximumTrimLength;
    double _lastScrubbedValue;
    double _lastActualValue;
    double _duration;
    double _cachedCurrentPlaybackTime;
    NSArray *_imageGenerators;
    NSLock *_thumbnailReqlock;
    NSObject<OS_dispatch_queue> *_thumbnailReqQueue;
    AVAssetExportSession *_airplayExportSession;
    _Bool _isAirPlay;
    unsigned int _showsPlayButton:1;
    unsigned int _showsScrubber:1;
    unsigned int _canEdit:1;
    unsigned int _loadMediaImmediately:1;
    unsigned int _scrubberIsSubview:1;
    unsigned int _viewWillAppear:1;
    unsigned int _didLayout:1;
    unsigned int _wasPlayingBeforeScrub:1;
    unsigned int _playFromBeginning:1;
    unsigned int _needsReloadScrubberThumbnails:1;
    unsigned int _playing:1;
    unsigned int _editing:1;
    unsigned int _disableEditAfterTrim:1;
    unsigned int _scrubbing:1;
    unsigned int _scrubbingToRight:1;
    unsigned int _deleteOriginalFile:1;
    unsigned int _passthroughTrimming:1;
    unsigned int _preparingMoviePlayer:1;
    unsigned int _preparedMoviePlayer:1;
    unsigned int _isMoviePlayerActive:1;
    unsigned int _moviePlayerIsReady:1;
    unsigned int _moviePlayerIsReadyForDisplay:1;
    unsigned int _moviePlayerDidBuffer:1;
    unsigned int _showingOverlay:1;
    unsigned int _showingScrubber:1;
    unsigned int _showScrubberWhenMovieIsReady:1;
    unsigned int _playbackDidBegin:1;
    unsigned int _loadScrubberThumbnails:1;
    unsigned int _videoIsLandscape:1;
    unsigned int _canCreateMetadata:1;
    unsigned int _createPreviewPosterFrame:1;
    unsigned int _isTrimming:1;
    unsigned int _wasTrimmedInPlace:1;
    unsigned int _remakingFailed:1;
    NSMutableArray *_summaryThumbnailRequestTimestamps;
    NSMutableArray *_detailThumbnailRequestTimestamps;
    UIMovieScrubber *_scrubber;
    PLSlalomRegionEditor *_slalomRegionEditor;
    NSMutableDictionary *_cachedThumbnails;
    NSArray *_landscapeSummaryThumbnailTimestamps;
    NSArray *_portraitSummaryThumbnailTimestamps;
    UIActivityIndicatorView *_spinner;
    UIActivityIndicatorView *_shadowSpinner;
    UIView<PLVideoOverlayButton> *_videoOverlayPlayButton;
    _Bool _allowSlalomEditor;
    _Bool _prepareMoviePlayerForScrubberAutomatically;
    _Bool _shouldPlayVideoWhenViewAppears;
    _Bool __slalomRegionEditorCreatedForScrubber;
    _Bool __didInsertMoviePlayerView;
    _Bool __didEditSlalom;
    _Bool __isFetchingVideo;
    _Bool __localVideoUnavailable;
    PFVideoAVObjectBuilder *__videoAVObjectBuilder;
    long long __expectedNotificationsCount;
    PFVideoAdjustments *__adjustmentsToCommit;
}

+ (void)_enqueueOverlayPlayButton:(id)arg1;
+ (id)_dequeueOverlayPlayButton;
+ (id)videoViewForVideoFileAtURL:(id)arg1;
@property(readonly, nonatomic) PFVideoAdjustments *_adjustmentsToCommit; // @synthesize _adjustmentsToCommit=__adjustmentsToCommit;
@property(readonly, nonatomic) long long _expectedNotificationsCount; // @synthesize _expectedNotificationsCount=__expectedNotificationsCount;
@property(nonatomic, setter=_setLocalVideoUnavailable:) _Bool _localVideoUnavailable; // @synthesize _localVideoUnavailable=__localVideoUnavailable;
@property(readonly, nonatomic) _Bool _isFetchingVideo; // @synthesize _isFetchingVideo=__isFetchingVideo;
@property(readonly, nonatomic) PFVideoAVObjectBuilder *_videoAVObjectBuilder; // @synthesize _videoAVObjectBuilder=__videoAVObjectBuilder;
@property(nonatomic, setter=_setDidEditSlalom:) _Bool _didEditSlalom; // @synthesize _didEditSlalom=__didEditSlalom;
@property(nonatomic) _Bool _didInsertMoviePlayerView; // @synthesize _didInsertMoviePlayerView=__didInsertMoviePlayerView;
@property(readonly, nonatomic) _Bool _slalomRegionEditorCreatedForScrubber; // @synthesize _slalomRegionEditorCreatedForScrubber=__slalomRegionEditorCreatedForScrubber;
@property(nonatomic) _Bool shouldPlayVideoWhenViewAppears; // @synthesize shouldPlayVideoWhenViewAppears=_shouldPlayVideoWhenViewAppears;
@property(nonatomic) _Bool prepareMoviePlayerForScrubberAutomatically; // @synthesize prepareMoviePlayerForScrubberAutomatically=_prepareMoviePlayerForScrubberAutomatically;
@property(readonly, nonatomic) UIView *scrubberBackgroundView; // @synthesize scrubberBackgroundView=_scrubberBackgroundView;
@property(nonatomic) _Bool allowSlalomEditor; // @synthesize allowSlalomEditor=_allowSlalomEditor;
@property(retain, nonatomic) PLProgressStack *trimProgressStack; // @synthesize trimProgressStack=_trimProgressStack;
@property(readonly, nonatomic) PLVideoPosterFrameView *posterFrameView; // @synthesize posterFrameView=_posterFrameView;
@property(nonatomic) double scrubberWidth; // @synthesize scrubberWidth=_scrubberWidth;
@property(readonly, nonatomic) long long interfaceOrientation; // @synthesize interfaceOrientation=_interfaceOrientation;
- (void)_cancelAirplayExportSession;
- (void)_flattenVideoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_deleteFileAtPath:(id)arg1;
- (id)_filePathForFlattenedVideoMetadata;
- (id)_filePathForFlattenedVideo;
- (void)_writeMetadata:(id)arg1 toPath:(id)arg2;
- (id)_readMetadataFromPath:(id)arg1;
- (id)_metadataForFlattenedVideo;
- (_Bool)_isFlattenedVideoUpToDate;
- (_Bool)_shouldPlayFlattenedVideo;
- (_Bool)_canAirPlayCurrentVideo;
- (void)slalomRegionEditorRequestForceUnzoom:(id)arg1;
- (_Bool)slalomRegionEditorRequestForceZoom:(id)arg1;
- (void)_scrubToSlalomRegionEditorStartHandle:(_Bool)arg1;
- (void)slalomRegionEditorEndValueChanged:(id)arg1;
- (void)slalomRegionEditorStartValueChanged:(id)arg1;
- (void)_commitPendingAdjustmentsUpdateAndWait:(_Bool)arg1;
- (void)_cancelDelayedCommitPendingAdjustmentsUpdate;
- (void)_commitPendingAdjustmentsUpdate;
- (void)_enqueueAdjustmentsForCommit;
- (void)slalomRegionEditorDidEndEditing:(id)arg1;
- (void)slalomRegionEditorDidBeginEditing:(id)arg1 withStartHandle:(_Bool)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)_updateScrubberValue;
- (void)_updateSlalomRegionEditorRange;
- (void)_setDuration:(double)arg1;
@property(readonly, nonatomic) double duration;
- (void)_playbackFinished;
- (id)_moviePlayer;
- (void)_handleScreenConnectionChange:(_Bool)arg1;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_screenDidConnect:(id)arg1;
- (_Bool)shouldShowCopyCalloutAtPoint:(struct CGPoint)arg1;
- (double)_scrubberTimeFromMovieTime:(double)arg1;
- (double)_movieTimeFromScrubberTime:(double)arg1;
- (double)_thumbnailTimeFromScrubberTime:(double)arg1;
- (id)_thumbnailSourceAsset;
- (double)_movieScrubberDuration;
- (_Bool)_scrubberTimeNeedsMapping;
- (void)notifyOfChange:(id)arg1 shouldReloadBlock:(CDUnknownBlockType)arg2;
- (void)_scrubToMovieTime:(double)arg1;
@property(nonatomic) double currentTime;
@property(nonatomic) _Bool loadMediaImmediately;
@property(nonatomic) _Bool scrubberIsSubview;
- (_Bool)_canEditDuration:(double)arg1;
@property(nonatomic) _Bool canEdit;
- (void)notifyRequiredResourcesDownloaded;
- (void)prepareMoviePlayer;
@property(nonatomic) _Bool showsScrubber;
- (void)setShowsScrubber:(_Bool)arg1 duration:(double)arg2;
@property(nonatomic) _Bool showsPlayOverlay;
- (void)_updatePosterFrameVisibility;
- (void)_updatePosterImageView;
- (void)_invalidateSnapshotImage;
- (void)_updateSnapshotImage;
@property(readonly, nonatomic) UIImage *posterFrameImage;
- (void)setPosterFrameImage:(id)arg1;
- (void)didMoveToSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)applicationDidEnterBackground;
- (void)applicationWillResignActive;
- (void)viewDidDisappear;
- (void)viewDidAppear;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_updateScrubberVisibilityWithDuration:(double)arg1;
- (void)forceStop;
- (void)stop;
- (void)pause;
- (void)play;
- (void)_removePlaySpinner;
- (void)_displayPlaySpinner;
- (_Bool)playingToVideoOut;
- (_Bool)playingToAirTunes;
- (void)playButtonClicked:(id)arg1;
- (void)_verifyOrRestartPlayback;
- (void)_didBeginPlayback;
- (_Bool)isPlaying;
- (void)handleDoubleTap;
- (void)toggleScaleMode:(float)arg1;
@property(nonatomic) PLPhotoTileViewController *imageTile;
@property(readonly, nonatomic) PLManagedAsset *videoCameraImage;
@property(readonly, nonatomic) UIImageView *previewImageView;
- (id)_videoSnapshot;
- (id)newPreviewImageData:(id *)arg1;
@property(retain, nonatomic) PLManagedAsset *trimmedVideoClip;
@property(readonly, nonatomic) NSString *videoPathAfterTrim;
@property(readonly, nonatomic) double endTime;
@property(readonly, nonatomic) double startTime;
- (double)_scrubberStartTime;
- (void)cancelTrim;
- (void)trimUsingMode:(int)arg1 saveACopy:(_Bool)arg2;
- (_Bool)wasTrimmedInPlace;
- (_Bool)isTrimming;
- (_Bool)deleteOriginalFileAfterTrim;
- (void)_exportCompletedWithSuccess:(_Bool)arg1;
- (void)_cancelRemaking:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)_updateTrimProgress;
- (void)_informDelegateAboutProgressChange:(float)arg1;
- (void)_resetTrimProgressTimer;
- (void)_removeTrimProgressTimer;
- (void)importerFinishedProcessingTrimmedVideo:(id)arg1;
- (void)_thumbnailsWereRegenerated:(id)arg1 error:(id)arg2 contextInfo:(void *)arg3;
- (void)_scrubberAnimationFinished;
- (void)movieScrubberEditingAnimationFinished:(id)arg1;
- (void)_reset;
- (void)_setPlaybackDidBegin:(_Bool)arg1;
- (void)_setPlaying:(_Bool)arg1;
- (void)_updateSlalomRegionEditorState;
- (void)_updateForEditing;
@property(nonatomic, getter=isEditing) _Bool editing;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)hideTrimMessage;
- (void)showTrimMessage:(id)arg1 withBottomY:(float)arg2;
- (void)setMaximumTrimLength:(double)arg1;
- (void)_clearImageGenerators;
- (void)_configureImageGenerator:(id)arg1 thumbnailSize:(struct CGSize)arg2 forSummaryThumbnails:(_Bool)arg3;
- (void)_serviceImageGenerationRequests;
- (void)_addThumbnailRequestForTimestamp:(id)arg1 isSummaryThumbnail:(_Bool)arg2;
- (void)movieScrubber:(id)arg1 willZoomToMinimumValue:(double)arg2 maximumValue:(double)arg3;
- (void)movieScrubber:(id)arg1 widthDelta:(float)arg2 originXDelta:(float)arg3;
- (void)movieScrubberDidCancelEditing:(id)arg1;
- (void)movieScrubberDidBeginEditing:(id)arg1;
- (void)movieScrubberWillBeginEditing:(id)arg1;
- (void)movieScrubberDidFinishRequestingThumbnails:(id)arg1;
- (void)movieScrubberWillBeginRequestingThumbnails:(id)arg1;
- (void)movieScrubber:(id)arg1 editingEndValueDidChange:(double)arg2;
- (void)movieScrubber:(id)arg1 editingStartValueDidChange:(double)arg2;
- (void)movieScrubber:(id)arg1 valueDidChange:(double)arg2;
- (void)_didScrubToValue:(double)arg1 withHandle:(int)arg2;
- (void)movieScrubberDidEndScrubbing:(id)arg1 withHandle:(int)arg2;
- (void)movieScrubberDidBeginScrubbing:(id)arg1 withHandle:(int)arg2;
- (void)_resetScrubberUpdateTimer;
- (void)_removeScrubberUpdateTimer;
- (double)movieScrubberThumbnailAspectRatio:(id)arg1;
- (id)_loadThumbnailsIntoDictionary:(id)arg1 isLandscape:(_Bool)arg2 aspectRatio:(float)arg3;
- (void)movieScrubber:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2 isSummaryThumbnail:(_Bool)arg3;
- (void)movieScrubber:(id)arg1 requestThumbnailImageForTimestamp:(id)arg2;
@property(readonly, nonatomic) _Bool _didSetPhotoData;
- (_Bool)_canPlayCloudSharedStreamedVideoWithLocalVideo;
- (_Bool)_shouldStreamVideo;
- (_Bool)_shouldStreamCloudPhotoLibraryVideo;
- (_Bool)_mediaIsCloudSharedStreamedVideo;
- (_Bool)_mediaIsVideo;
@property(readonly, nonatomic) _Bool _mediaIsPlayable;
@property(readonly, retain, nonatomic) NSString *_pathForPrebakedPortraitScrubberThumbnails;
@property(readonly, retain, nonatomic) NSString *_pathForPrebakedLandscapeScrubberThumbnails;
@property(readonly, retain, nonatomic) NSString *_pathForVideoPreviewFile;
- (id)_pathForOriginalFile;
@property(readonly, retain, nonatomic) NSString *pathForVideoFile;
- (void)movieScrubberDidEndAnimatingZoom:(id)arg1;
- (void)movieScrubberDidBeginAnimatingZoom:(id)arg1;
- (void)_saveCachedThumbnailsIfNecessary;
- (id)movieScrubber:(id)arg1 timestampsStartingAt:(id)arg2 endingAt:(id)arg3 maxCount:(int)arg4;
- (id)movieScrubber:(id)arg1 evenlySpacedTimestamps:(int)arg2 startingAt:(id)arg3 endingAt:(id)arg4;
- (double)movieScrubberDuration:(id)arg1;
- (void)moviePlayerHeadsetPreviousTrackPressed:(id)arg1;
- (void)moviePlayerHeadsetNextTrackPressed:(id)arg1;
- (void)moviePlayerHeadsetPlayPausePressed:(id)arg1;
- (id)moviePlayerRequestsPickedAirplayRoute:(id)arg1;
- (_Bool)_playerIsAirplay;
- (void)moviePlayerDidChangeExternalPlaybackType:(id)arg1;
- (_Bool)moviePlayerControllerShouldAllowExternalPlayback:(id)arg1;
- (void)moviePlayerEncounteredAuthenticationError:(id)arg1;
- (void)moviePlayerWasSuspendedDuringPlayback:(id)arg1;
- (void)moviePlayerControllerWillResignAsActiveController:(id)arg1;
- (void)moviePlayerControllerDidBecomeActiveController:(id)arg1;
- (void)_setMoviePlayerActive:(_Bool)arg1;
- (void)_updateScrubberForSlowMotion;
- (void)_configurePlayerForStreamedVideoIfNecessary;
- (id)_assetForVideoURL:(id)arg1;
- (id)_assetForVideoPath:(id)arg1;
- (id)_optionsForAVURLAsset;
- (void)_updateVideoAVObjectBuilderFromContentEditingInput:(id)arg1;
- (_Bool)_canHandleAdjustmentData:(id)arg1;
- (_Bool)_prepareMoviePlayerIfNeeded;
- (void)_prepareAndResumePlayback;
- (void)moviePlayerUpdatedDestinationPlaceholder:(id)arg1;
- (void)moviePlayerDurationAvailable:(id)arg1;
- (void)moviePlayerReadyToDisplay:(id)arg1;
- (void)moviePlayerReadyToPlay:(id)arg1;
- (void)_savePreviewPosterFrameImage:(struct CGImage *)arg1;
- (void)_requestPreviewPosterFrameForVideoSize:(struct CGSize)arg1;
- (void)moviePlayerPlaybackDidEnd:(id)arg1;
- (void)moviePlayerPlaybackStateDidChange:(id)arg1 fromPlaybackState:(unsigned long long)arg2;
- (void)moviePlayerPlaybackRateDidChange:(id)arg1;
- (void)moviePlayerBufferingStateDidChange:(id)arg1;
- (_Bool)moviePlayerExitRequest:(id)arg1 exitReason:(int)arg2;
- (void)_reloadScrubberThumbnailsIfNeeded;
- (void)_setNeedsReloadScrubberThumbnails:(_Bool)arg1;
- (void)layoutSubviews;
- (_Bool)_canCreateMetadata;
- (void)_updateScaleModeForSize:(struct CGSize)arg1;
- (void)updateScaleMode;
- (void)_hideTrimMessageView:(_Bool)arg1;
- (void)removeVideoOverlay;
- (void)_hideVideoOverlay:(_Bool)arg1;
- (void)_videoOverlayFadeOutDidFinish;
- (void)_showVideoOverlay;
- (id)videoOverlayPlayButton;
- (id)slalomRegionEditor;
- (id)videoScrubber;
- (_Bool)_canAccessVideo;
- (_Bool)_shouldShowSlalomEditor;
- (void)_removeScrubber;
- (void)_createScrubberIfNeeded;
- (double)_scrubberBackgroundHeight;
- (void)_updateScrubberFrame;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
@property(readonly, copy) NSString *description;
@property(nonatomic) id <PLVideoViewDelegate> delegate;
- (void)_tearDownMoviePlayer;
- (void)_insertMoviePlayerViewIfNecessary;
- (void)_setupMoviePlayerIfNecessary;
- (void)dealloc;
- (void)_networkReachabilityDidChange:(id)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 videoCameraImage:(id)arg2 orientation:(long long)arg3;
- (id)initWithFrame:(struct CGRect)arg1 videoCameraImage:(id)arg2 orientation:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLWPhotoBrowserController : PLPhotoBrowserController <UIGestureRecognizerDelegate>
{
}

- (_Bool)wantsPhotoBrowserStyleStatusBar;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithAssetCollections:(id)arg1 atImageIndexPath:(id)arg2 dataSource:(id)arg3 modalDoneButtonItem:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PLWallpaperButton : UIButton <_UIBackdropViewObserver>
{
    UIImageView *_titleMaskImageView;
    _UIBackdropView *_backdropView;
}

@property(retain, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) UIImageView *titleMaskImageView; // @synthesize titleMaskImageView=_titleMaskImageView;
- (void)backdropViewDidChange:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)_setupBackdropView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PLWallpaperNavigationItem : UINavigationItem
{
}

- (long long)barStyle;

@end

@interface TrimVideoNavigationItem : UINavigationItem
{
}

- (long long)barStyle;

@end

@interface UIActionSheet (PhotoLibraryAdditions)
- (void)showFromObject:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIApplication (PhotosInternal)
- (void)setDelaySuspend:(_Bool)arg1;
- (void)_setDelaySuspend:(id)arg1;
@end

@interface UIBarButtonItem (ActionSheet)
- (void)showActionSheet:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIButton (ActionSheet)
- (void)showActionSheet:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIPageController (PLUIKitRequest)
- (id)pl_existingViewControllerAtIndex:(unsigned long long)arg1;
@end

@interface UIScrollView (SavingState)
- (_Bool)restoreScrollPositionForKey:(id)arg1;
- (void)saveScrollPositionForKey:(id)arg1;
- (id)keyForContentMode:(int)arg1;
@end

@interface UITabBar (ActionSheet)
- (void)showActionSheet:(id)arg1 animated:(_Bool)arg2;
@end

@interface UITableView (PhotoLibraryAdditions)
- (void)pl_resetContentOffsetFromContentInsets;
- (id)pl_indexPathForLastRow;
- (_Bool)pl_lastRowIsVisible;
- (void)pl_scrollToBottom:(_Bool)arg1;
- (void)pl_scrollToTop:(_Bool)arg1;
- (void)pl_scrollToVisibleRowAtIndexPath:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIToolbar (ActionSheet)
- (void)showActionSheet:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIToolbar (PhotoLibraryAdditions)
- (id)itemWithTag:(long long)arg1;
@end

@interface UIView (ActionSheet)
- (void)showActionSheet:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIView (PLVideoOverlayButton)
+ (id)pl_videoOverlayButtonWithStyle:(long long)arg1;
@end

@interface UIView (PhotoLibraryAdditions)
+ (double)pl_setHiddenAnimationDuration;
- (void)pl_setHidden:(_Bool)arg1 delay:(double)arg2 animated:(_Bool)arg3;
- (void)pl_setHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (void)pl_drawBorderWithColor:(id)arg1 width:(double)arg2;
- (_Bool)pl_isOnScreen:(id)arg1;
@end

@interface UIViewController (ActionSheet)
- (void)showActionSheet:(id)arg1 animated:(_Bool)arg2;
@end

@interface UIViewController (InteractiveStacking)
- (id)expandedControllerForExpandableView:(id)arg1;
- (void)hidePopoverView;
- (id)overlayView;
- (void)beginPoppingAnimated:(_Bool)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)interactiveNavigationControllerIfTop;
- (id)interactiveNavigationController;
- (void)interactionCancelledWithView:(id)arg1;
- (void)interactiveNavigationControllerDidFinishWithOverlayView:(id)arg1;
- (void)viewDidDisappearInteractivelyWithView:(id)arg1;
- (void)viewDidAppearInteractivelyWithView:(id)arg1;
- (void)viewWillAppearInteractivelyWithView:(id)arg1;
@end

@interface UIViewController (PLNavigationControllerInterface)
- (void)revertStatusBarStyle:(long long)arg1 currentStatusBarStyle:(long long)arg2 animated:(_Bool)arg3;
- (long long)setStatusBarStyleForFullScreenViewAnimated:(_Bool)arg1 useTelephonyUI:(_Bool)arg2 canHideStatusBar:(_Bool)arg3 newStatusBarStyle:(long long *)arg4;
- (int)uiipc_filterForMediaTypes:(id)arg1;
- (_Bool)uiipc_useTelephonyUI;
- (id)uiipc_imagePickerOptions;
- (id)uiipc_imagePickerController;
@end

@interface UIViewController (PhotoLibraryAdditions)
- (_Bool)pl_visitControllerHierarchyWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool pl_isInPopover;
@end

@interface _UILegibilitySettingsProvider (PhotoLibraryAdditions)
- (void)pl_primeForUseWithCameraOverlays;
@end

