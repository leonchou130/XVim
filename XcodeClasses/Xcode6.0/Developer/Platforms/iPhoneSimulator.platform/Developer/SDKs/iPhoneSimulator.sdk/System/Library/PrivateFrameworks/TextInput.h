//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _ShortRect {
    short _field1;
    short _field2;
    short _field3;
    short _field4;
};

struct vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>;

struct vector<std::__1::vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>, std::__1::allocator<std::__1::vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>>> {
    struct vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>> *__begin_;
    struct vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>> *__end_;
    struct __compressed_pair<std::__1::vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>*, std::__1::allocator<std::__1::vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>>> {
        struct vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>> *__first_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    _Bool _field3;
    _Bool _field4;
    unsigned long long _field5;
    int _field6;
} CDStruct_5072e809;

typedef struct {
    id _field1;
    id _field2;
    int _field3;
    id _field4;
    id _field5;
    int _field6;
} CDStruct_982099be;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/TextInput.framework/TextInput
// UUID: 79950440-1ED4-3865-A5E0-4D424F81BE69
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1693.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol TIKeyboardCandidateCoding <NSObject>
+ (int)type;
- (void)encodeWithCandidateResultSetCoder:(TIKeyboardCandidateResultSetCoder *)arg1;
- (id)initWithCandidateResultSetCoder:(TIKeyboardCandidateResultSetCoder *)arg1;
@end

@protocol TIKeyboardInputManager <NSObject>
- (void)writeTypologyLogWithCompletionHandler:(void (^)(NSURL *))arg1;
- (void)lastAcceptedCandidateCorrected;
- (void)candidateRejected:(TIKeyboardCandidate *)arg1;
- (void)textAccepted:(TIKeyboardCandidate *)arg1;
- (void)setOriginalInput:(NSString *)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 keyboardState:(TIKeyboardState *)arg2 completionHandler:(void (^)(TIKeyboardConfiguration *))arg3;
- (void)skipHitTestForTouchEvent:(TIKeyboardTouchEvent *)arg1 keyboardState:(TIKeyboardState *)arg2;
- (void)performHitTestForTouchEvent:(TIKeyboardTouchEvent *)arg1 keyboardState:(TIKeyboardState *)arg2 continuation:(void (^)(long long))arg3;
- (void)generateRefinementsForCandidate:(TIKeyboardCandidate *)arg1 keyboardState:(TIKeyboardState *)arg2 completionHandler:(void (^)(TIAutocorrectionList *))arg3;
- (void)generateReplacementsForString:(NSString *)arg1 keyLayout:(TIKeyboardLayout *)arg2 continuation:(void (^)(NSArray *))arg3;
- (void)handleAcceptedCandidate:(TIKeyboardCandidate *)arg1 keyboardState:(TIKeyboardState *)arg2 completionHandler:(void (^)(TIKeyboardConfiguration *, NSString *))arg3;
- (void)generateCandidatesWithKeyboardState:(TIKeyboardState *)arg1 candidateRange:(struct _NSRange)arg2 completionHandler:(void (^)(TIKeyboardCandidateResultSet *))arg3;
- (void)generateAutocorrectionsWithKeyboardState:(TIKeyboardState *)arg1 completionHandler:(void (^)(TIAutocorrectionList *))arg2;
- (void)handleKeyboardInput:(TIKeyboardInput *)arg1 keyboardState:(TIKeyboardState *)arg2 completionHandler:(void (^)(TIKeyboardOutput *, TIKeyboardConfiguration *))arg3;
- (void)syncToKeyboardState:(TIKeyboardState *)arg1 completionHandler:(void (^)(TIKeyboardConfiguration *))arg2;
@end

@protocol TILexiconRequestHandler
- (void)requestLexiconFromBundlePath:(NSString *)arg1 completionHandler:(void (^)(TILexicon *))arg2;
@end

@protocol TIUserDictionaryEntry <NSObject>
@property(retain, nonatomic) NSNumber *timestamp;
@property(copy, nonatomic) NSString *shortcut;
@property(copy, nonatomic) NSString *phrase;
@end

@interface NSArray (UIKBCandidateExtras)
- (id)_arrayByFilteringCandidatesForNonExtendedView;
@end

@interface NSAttributedString (TIExtras)
- (id)_UIKBStringWideAttributeValueForKey:(id)arg1;
@end

@interface NSLocale (TIExtras)
+ (id)localeForBundleLanguage:(id)arg1;
@end

@interface NSMutableString (TIExtras)
- (void)_removeOccurrencesOfCharacter:(unsigned int)arg1;
- (void)_replaceOccurrencesOfCharacter:(unsigned int)arg1 withCharacter:(unsigned int)arg2;
- (void)_removeCharactersFromSet:(struct __CFCharacterSet *)arg1;
@end

@interface NSString (TIDocumentStateAdditions)
- (id)_stringByDeletingInteriorSentences;
- (id)_stringByTrimmingSuccedingLines;
- (id)_stringByTrimmingPrecedingLines;
@end

@interface NSString (TIExtras)
+ (id)stringWithUnichar:(unsigned int)arg1;
+ (struct USet *)_nonFullwidthLettersAndNumbersSet;
+ (struct USet *)_fullwidthLettersAndNumbersSet;
+ (struct USet *)_bopomofoToneSet;
+ (struct USet *)_bopomofoSet;
+ (struct USet *)_ideographSet;
+ (struct USet *)_nonJapaneseLetterSet;
+ (struct USet *)_japaneseLetterSet;
+ (struct USet *)_hiraganaSet;
+ (struct USet *)_nonHiraganaKatakanaOrBopomofoSet;
+ (struct USet *)_nonKatakanaOrKanjiSet;
+ (struct USet *)_nonHiraganaOrKatakanaSet;
+ (struct USet *)_nonIdeographicCharacterSet;
+ (struct USet *)_characterSetWithPattern:(id)arg1;
+ (id)_stringWithUnichar:(unsigned int)arg1;
- (unsigned long long)editDistanceFrom:(id)arg1;
- (_Bool)containsSubstring:(id)arg1;
- (_Bool)isNaturallyRTL;
- (_Bool)looksLikeURL;
- (_Bool)looksLikeNumberInput;
- (_Bool)looksLikeEmailAddress;
- (_Bool)isTripledPunctuation;
- (_Bool)isDelete;
- (_Bool)isNewlineOrReturn;
- (_Bool)isSpaceOrReturn;
- (_Bool)isSpace;
- (_Bool)isPlainSpace;
- (_Bool)isLeftAssociative;
- (_Bool)endsSentence;
- (id)stringByReplacingCharacter:(unsigned int)arg1 withCharacter:(unsigned int)arg2;
- (id)stringByReplacingCharactersInSet:(struct __CFCharacterSet *)arg1 withCharacter:(unsigned int)arg2;
- (id)stringByTrimmingLastCharacter;
- (id)stringByTrimmingCharactersInCFCharacterSet:(struct __CFCharacterSet *)arg1;
- (unsigned long long)_editDistanceFrom:(id)arg1;
- (_Bool)_containsSubstring:(id)arg1;
- (id)_stringByTransliteratingToZhuyinAsFamilyName;
- (id)_stringByTransliteratingToZhuyin;
- (id)_stringByTransliteratingToZhuyin:(_Bool)arg1;
- (id)_stringByTransliteratingToPinyinAsFamilyName;
- (id)_stringByTransliteratingToPinyin;
- (id)_stringByTransliteratingToPinyin:(_Bool)arg1;
- (id)_stringByApplyingTransform:(id)arg1;
- (id)_stringByTranscribingUsingTokenizer:(struct __CFStringTokenizer *)arg1;
- (id)_stringByTranscribingFromLanguage:(id)arg1;
- (id)_stringByConvertingFromFullWidthToHalfWidth;
- (id)_stringByConvertingFromHalfWidthToFullWidth;
- (_Bool)_shouldBePaddedWithSpaces;
- (_Bool)_containsFullwidthLettersAndNumbers;
- (_Bool)_containsFullwidthLettersAndNumbersOnly;
- (_Bool)_containsCJKSymbolsAndPunctuation;
- (_Bool)_containsCJKScriptsOnly;
- (_Bool)_containsCJScriptsOnly;
- (_Bool)_containsBopomofoToneOnly;
- (_Bool)_containsBopomofoOnly;
- (_Bool)_containsEmoji;
- (_Bool)_containsHiraganaKatakanaOrBopomofo;
- (_Bool)_containsKatakanaOrKanji;
- (_Bool)_containsHiraganaOrKatakana;
- (_Bool)_containsHiraganaOnly;
- (_Bool)_containsJapaneseOnly;
- (_Bool)_containsJapanese;
- (_Bool)_containsIdeographicCharacters;
- (unsigned long long)_graphemeCount;
- (id)_lastGrapheme;
- (id)_firstGrapheme;
- (_Bool)_isOnlyIdeographs;
- (_Bool)_isIdeographicGlyphs;
- (_Bool)_containsCJScripts;
- (_Bool)_isNaturallyRTL;
- (_Bool)_looksLikeURL;
- (_Bool)_looksLikeNumberInput;
- (_Bool)_looksLikeEmailAddress;
- (_Bool)_isNewlineOrReturn;
- (_Bool)_isDelete;
- (_Bool)_isSpace;
- (_Bool)_isPlainSpace;
- (_Bool)_isSpaceOrReturn;
- (_Bool)_isTripledPunctuation;
- (_Bool)_isLeftAssociative;
- (_Bool)_isModifierSymbol;
- (_Bool)_endsSentence;
- (unsigned long long)_UTF8SizeOfRange:(struct _NSRange)arg1;
- (struct _NSRange)_rangeOfString:(id)arg1 fromLocation:(unsigned long long)arg2;
- (struct _NSRange)_rangeOfBackwardDeletionClusterAtIndex:(unsigned long long)arg1;
- (id)_stringByReplacingCharacter:(unsigned int)arg1 withCharacter:(unsigned int)arg2;
- (id)_stringByReplacingCharactersInSet:(struct __CFCharacterSet *)arg1 withCharacter:(unsigned int)arg2;
- (id)_stringByTrimmingLastCharacter;
- (id)_stringByTrimmingCharactersInCFCharacterSet:(struct __CFCharacterSet *)arg1;
- (_Bool)_contentsExclusivelyInCharacterSet:(struct USet *)arg1;
- (void)_enumerateLongCharactersInRange:(struct _NSRange)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (unsigned int)_firstLongCharacter;
- (unsigned short)_firstChar;
@end

@interface TIAutocorrectionList : NSObject <NSSecureCoding>
{
    TIKeyboardCandidate *_autocorrection;
    NSArray *_predictions;
}

+ (id)autocorrectionListWithCandidates:(id)arg1 shouldAcceptTopCandidate:(_Bool)arg2;
+ (id)listWithAutocorrection:(id)arg1 predictions:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *predictions; // @synthesize predictions=_predictions;
@property(readonly, nonatomic) TIKeyboardCandidate *autocorrection; // @synthesize autocorrection=_autocorrection;
@property(readonly, nonatomic) _Bool shouldAcceptTopCandidate;
@property(readonly, nonatomic) NSArray *candidates;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCandidates:(id)arg1 shouldAcceptTopCandidate:(_Bool)arg2;
- (id)initWithCandidates:(id)arg1;
- (id)initWithAutocorrection:(id)arg1 predictions:(id)arg2;
- (void)dealloc;

@end

@interface TICharacterSetDescription : NSObject <NSCopying, NSSecureCoding>
{
    NSCharacterSet *_characterSet;
    _Bool _inverted;
    long long _baseIdentifier;
    NSString *_charactersAddedToBase;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) _Bool inverted; // @synthesize inverted=_inverted;
@property(copy, nonatomic) NSString *charactersAddedToBase; // @synthesize charactersAddedToBase=_charactersAddedToBase;
@property(readonly, nonatomic) long long baseIdentifier; // @synthesize baseIdentifier=_baseIdentifier;
- (void)clearCachedCharacterSet;
@property(readonly, nonatomic) NSCharacterSet *characterSet;
- (id)newCharacterSetFromDescription;
- (id)invertedSetDescription;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)awakeAfterUsingCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithBase:(long long)arg1 additionalCharacters:(id)arg2 inverted:(_Bool)arg3;
- (id)initWithCharactersInString:(id)arg1;
- (id)initWithBaseCharacterSet:(long long)arg1;
- (void)dealloc;

@end

@interface TIChineseShared : NSObject
{
}

+ (id)defaultFuzzyPinyinPairs;
+ (id)validFuzzyPinyinPairs;

@end

@interface TIKeyboardCandidate : NSObject <NSCopying, NSSecureCoding, TIKeyboardCandidateCoding>
{
    NSString *_alternativeText;
}

+ (int)type;
+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *alternativeText; // @synthesize alternativeText=_alternativeText;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
@property(readonly, nonatomic, getter=isFullwidthCandidate) _Bool fullwidthCandidate;
@property(readonly, nonatomic) unsigned int usageTrackingMask;
@property(readonly, nonatomic, getter=isInlineCompletionCandidate) _Bool inlineCompletionCandidate;
@property(readonly, nonatomic, getter=isCompletionCandidate) _Bool completionCandidate;
@property(readonly, nonatomic, getter=isEmojiCandidate) _Bool emojiCandidate;
@property(readonly, nonatomic, getter=isExtensionCandidate) _Bool extensionCandidate;
@property(readonly, nonatomic) _Bool isAutocorrection;
@property(readonly, nonatomic) _Bool isForShortcutConversion;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) unsigned long long deleteCount;
@property(readonly, nonatomic) unsigned long long wordOriginFeedbackID;
@property(readonly, nonatomic) NSString *label;
@property(readonly, nonatomic) NSString *input;
@property(readonly, nonatomic) NSString *candidate;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface TIMecabraCandidate : TIKeyboardCandidate
{
    _Bool _emojiCandidate;
    _Bool _extensionCandidate;
    _Bool _isForShortcutConversion;
    NSString *_candidate;
    NSString *_input;
    NSNumber *_mecabraCandidatePointerValue;
}

+ (int)type;
+ (_Bool)supportsSecureCoding;
- (_Bool)isForShortcutConversion;
- (_Bool)isExtensionCandidate;
- (_Bool)isEmojiCandidate;
@property(retain, nonatomic) NSNumber *mecabraCandidatePointerValue; // @synthesize mecabraCandidatePointerValue=_mecabraCandidatePointerValue;
- (id)input;
- (id)candidate;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isFullwidthCandidate;
- (void)dealloc;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2 mecabraCandidatePointerValue:(id)arg3 isExtension:(_Bool)arg4 isEmoji:(_Bool)arg5 isShortcut:(_Bool)arg6;
- (id)initWithSurface:(id)arg1 input:(id)arg2 mecabraCandidatePointerValue:(id)arg3;

@end

@interface TICompositeMecabraCandidate : TIMecabraCandidate
{
    NSString *_remainderCandidateString;
    NSArray *_autoconvertedCandidatePointerValues;
}

+ (int)type;
+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSArray *autoconvertedCandidatePointerValues; // @synthesize autoconvertedCandidatePointerValues=_autoconvertedCandidatePointerValues;
@property(copy, nonatomic) NSString *remainderCandidateString; // @synthesize remainderCandidateString=_remainderCandidateString;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)label;
- (void)dealloc;

@end

@interface TIDocumentState : NSObject <NSSecureCoding>
{
    NSString *_contextBeforeInput;
    NSString *_markedText;
    NSString *_selectedText;
    NSString *_contextAfterInput;
    struct _NSRange _selectedRangeInMarkedText;
}

+ (id)documentStateWithContextBefore:(id)arg1 markedText:(id)arg2 selectedRange:(struct _NSRange)arg3 contextAfter:(id)arg4;
+ (id)documentStateWithContextBefore:(id)arg1 selectedText:(id)arg2 contextAfter:(id)arg3;
+ (_Bool)supportsSecureCoding;
+ (id)documentStateWithContextBefore:(id)arg1 selectedText:(id)arg2 contextAfter:(id)arg3;
+ (id)documentStateWithText:(id)arg1 selectedRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) struct _NSRange selectedRangeInMarkedText; // @synthesize selectedRangeInMarkedText=_selectedRangeInMarkedText;
@property(readonly, nonatomic) NSString *contextAfterInput; // @synthesize contextAfterInput=_contextAfterInput;
@property(readonly, nonatomic) NSString *selectedText; // @synthesize selectedText=_selectedText;
@property(readonly, nonatomic) NSString *markedText; // @synthesize markedText=_markedText;
@property(readonly, nonatomic) NSString *contextBeforeInput; // @synthesize contextBeforeInput=_contextBeforeInput;
- (_Bool)documentIsEmpty;
- (id)description;
- (unsigned long long)hash;
- (unsigned long long)hashString:(id)arg1 intoHashValue:(unsigned long long)arg2;
- (_Bool)isEqual:(id)arg1;
- (_Bool)string:(id)arg1 matchesString:(id)arg2;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithContextBefore:(id)arg1 markedText:(id)arg2 selectedText:(id)arg3 contextAfter:(id)arg4 selectedRangeInMarkedText:(struct _NSRange)arg5;
- (void)dealloc;
- (id)documentStateAfterReplacingText:(id)arg1 withText:(id)arg2;
- (id)documentStateAfterCollapsingSelection;
- (id)documentStateAfterUnmarkingText;
- (id)documentStateAfterSettingMarkedText:(id)arg1 selectedRange:(struct _NSRange)arg2;
- (id)documentStateAfterDeletingForward;
- (id)documentStateAfterDeletingBackward;
- (id)documentStateAfterInsertingTextAfterSelection:(id)arg1;
- (id)documentStateAfterInsertingText:(id)arg1;
- (unsigned long long)inputIndexWithTerminatorPredicate:(CDUnknownBlockType)arg1;
- (id)inputStringWithTerminatorPredicate:(CDUnknownBlockType)arg1;
- (id)inputStemWithTerminatorPredicate:(CDUnknownBlockType)arg1;
- (id)wordPrefixOfString:(id)arg1 withTerminatorPredicate:(CDUnknownBlockType)arg2 reverse:(_Bool)arg3;
- (id)initWithText:(id)arg1 selectedRange:(struct _NSRange)arg2;

@end

@interface TIKeyboardCandidateSingle : TIKeyboardCandidate
{
    NSString *_candidate;
    NSString *_input;
}

+ (int)type;
+ (id)candidateWithUnchangedInput:(id)arg1;
+ (id)candidateWithCandidate:(id)arg1 forInput:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *input; // @synthesize input=_input;
@property(copy, nonatomic) NSString *candidate; // @synthesize candidate=_candidate;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithUnchangedInput:(id)arg1;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2;
- (id)initWithCandidate:(id)arg1;

@end

@interface TIHandwritingCandidate : TIKeyboardCandidateSingle
{
    unsigned long long _uniqueID;
    unsigned long long _completionUniqueID;
}

+ (int)type;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) unsigned long long completionUniqueID; // @synthesize completionUniqueID=_completionUniqueID;
@property(readonly, nonatomic) unsigned long long uniqueID; // @synthesize uniqueID=_uniqueID;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (_Bool)isInlineCompletionCandidate;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2 uniqueID:(unsigned long long)arg3 completionUniqueID:(unsigned long long)arg4;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TIHandwritingCompositionCandidate : TIKeyboardCandidateSingle
{
    unsigned long long _deleteCount;
}

+ (int)type;
+ (_Bool)supportsSecureCoding;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)label;
- (unsigned long long)deleteCount;
- (id)initWithCandidate:(id)arg1 deleteCount:(unsigned long long)arg2;

@end

@interface TIHandwritingStrokes : NSObject <NSCopying, NSSecureCoding>
{
    struct vector<std::__1::vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>, std::__1::allocator<std::__1::vector<TIHandwritingPoint, std::__1::allocator<TIHandwritingPoint>>>> _strokes;
    _Bool _continuePreviousStroke;
}

+ (_Bool)supportsSecureCoding;
- (id).cxx_construct;
- (void).cxx_destruct;
- (unsigned long long)totalNumberOfPoints;
- (struct CGPoint)pointAtIndex:(unsigned long long)arg1 inStrokeAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfPointsInStrokeAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfStrokes;
- (void)removeAllStrokes;
- (void)removeStrokeAtIndex:(unsigned long long)arg1;
- (void)endStroke;
- (void)addPoint:(struct CGPoint)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TIInputModeController : NSObject
{
    NSArray *_supportedInputModeIdentifiers;
    NSArray *_supportedInputModeLanguageAndRegions;
    NSString *currentLocale;
    NSString *currentLanguage;
    NSArray *enabledInputModes;
    NSArray *defaultInputModes;
}

+ (id)_inputModesForLocale:(id)arg1 language:(id)arg2 modeFetcher:(CDUnknownBlockType)arg3;
+ (id)sharedInputModeController;
@property(copy, nonatomic) NSArray *defaultInputModes; // @synthesize defaultInputModes;
@property(copy, nonatomic) NSArray *enabledInputModes; // @synthesize enabledInputModes;
@property(copy, nonatomic) NSString *currentLanguage; // @synthesize currentLanguage;
@property(copy, nonatomic) NSString *currentLocale; // @synthesize currentLocale;
@property(readonly) NSArray *enabledInputModeIdentifiers;
@property(readonly) NSArray *supportedInputModeLanguageAndRegions;
@property(readonly) NSArray *supportedInputModeIdentifiers;
- (id)defaultEnabledInputModesForCurrentLocale;
- (void)dealloc;

@end

@interface TIKeyEventMap : NSObject <NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
- (id)remapKeyWithString:(id)arg1 stringWithoutModifiers:(id)arg2 modifierFlags:(unsigned long long)arg3 keyboardState:(id)arg4;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TIKeyEventMapChinese : TIKeyEventMap
{
}

+ (_Bool)supportsSecureCoding;
- (id)remapKeyWithString:(id)arg1 stringWithoutModifiers:(id)arg2 modifierFlags:(unsigned long long)arg3 keyboardState:(id)arg4;
- (_Bool)isURLOrEmailKeyboardInKeyboardState:(id)arg1;

@end

@interface TIKeyEventMapChineseMecabra : TIKeyEventMapChinese
{
}

+ (_Bool)supportsSecureCoding;
+ (id)inlineNumbersAndPunctuationSet;
- (id)remapKeyWithString:(id)arg1 stringWithoutModifiers:(id)arg2 modifierFlags:(unsigned long long)arg3 keyboardState:(id)arg4;

@end

@interface TIKeyEventMapTraditionalZhuyin : TIKeyEventMapChineseMecabra
{
}

+ (_Bool)supportsSecureCoding;
- (id)remapKeyWithString:(id)arg1 stringWithoutModifiers:(id)arg2 modifierFlags:(unsigned long long)arg3 keyboardState:(id)arg4;
- (_Bool)isZhuyinCharacterBeforeInsertionPointOfKeyboardState:(id)arg1;

@end

@interface TIKeyEventMapWubi : TIKeyEventMapChinese
{
}

+ (_Bool)supportsSecureCoding;
- (id)remapKeyWithString:(id)arg1 stringWithoutModifiers:(id)arg2 modifierFlags:(unsigned long long)arg3 keyboardState:(id)arg4;
- (_Bool)isNumericWubi:(id)arg1;
- (id)wubiFromASCII:(id)arg1;

@end

@interface TIKeyboardBehaviorState : NSObject
{
    _Bool hasInput;
    _Bool hasCandidates;
    _Bool hasCandidateSelected;
    _Bool hasNextPage;
    _Bool showsExtendedList;
    _Bool followsZhuyin;
    _Bool spaceConfirmation;
    _Bool _hasAutocorrection;
    _Bool _showsCandidatesInLayout;
}

@property(nonatomic) _Bool showsCandidatesInLayout; // @synthesize showsCandidatesInLayout=_showsCandidatesInLayout;
@property(nonatomic) _Bool hasAutocorrection; // @synthesize hasAutocorrection=_hasAutocorrection;
@property(nonatomic) _Bool spaceConfirmation; // @synthesize spaceConfirmation;
@property(nonatomic) _Bool followsZhuyin; // @synthesize followsZhuyin;
@property(nonatomic) _Bool showsExtendedList; // @synthesize showsExtendedList;
@property(nonatomic) _Bool hasNextPage; // @synthesize hasNextPage;
@property(nonatomic) _Bool hasCandidateSelected; // @synthesize hasCandidateSelected;
@property(nonatomic) _Bool hasCandidates; // @synthesize hasCandidates;
@property(nonatomic) _Bool hasInput; // @synthesize hasInput;

@end

@interface TIKeyboardBehaviors : NSObject <NSCopying, NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)keyBehaviorsForState:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface TIKeyboardBehaviors_Autocorrect : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_Cangjie : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_Japanese : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_Pinyin : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_ShapeBased : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_Simple : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_Thai : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_WaitingForCandidates : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardBehaviors_Zhuyin : TIKeyboardBehaviors
{
}

- (id)keyBehaviorsForState:(id)arg1;

@end

@interface TIKeyboardCandidateGroup : NSObject <NSCopying, NSSecureCoding>
{
    NSString *_title;
    NSOrderedSet *_candidates;
    NSArray *_nonExtensionCandidates;
}

+ (_Bool)supportsSecureCoding;
@property(copy) NSOrderedSet *candidates; // @synthesize candidates=_candidates;
@property(copy) NSString *title; // @synthesize title=_title;
- (id)description;
@property(retain) NSArray *nonExtensionCandidates; // @synthesize nonExtensionCandidates=_nonExtensionCandidates;
- (void)sortWithOptions:(unsigned long long)arg1 usingComparator:(CDUnknownBlockType)arg2;
- (void)sortUsingComparator:(CDUnknownBlockType)arg1;
- (void)addCandidate:(id)arg1;
- (_Bool)hasAlternativeText;
- (id)mutableCandidates;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithTitle:(id)arg1 candidates:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TIKeyboardCandidateResultSet : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _excludedExtensionCandidates;
    NSArray *_candidates;
    unsigned long long _initialSelectedIndex;
    TIKeyboardCandidate *_defaultCandidate;
    NSArray *_sortMethods;
    NSDictionary *_sortMethodGroups;
    NSDictionary *_indexTitles;
    NSDictionary *_showExtensionCandidates;
    NSArray *_initiallyHiddenCandidates;
    unsigned long long _generatedCandidateCount;
    unsigned long long _batchCandidateLocation;
    unsigned long long _selectedHiddenCandidateIndex;
    TIKeyboardIntermediateText *_uncommittedText;
    TIKeyboardCandidate *_acceptedCandidate;
}

+ (id)dummySet;
+ (id)setWithCandidates:(id)arg1 initialSelectedIndex:(unsigned long long)arg2 defaultCandidate:(id)arg3 sortMethods:(id)arg4 sortMethodGroups:(id)arg5 indexTitles:(id)arg6 showExtensionCandidates:(id)arg7 initiallyHiddenCandidates:(id)arg8 selectedHiddenCandidateIndex:(unsigned long long)arg9 excludedExtensionCandidates:(_Bool)arg10;
+ (id)setWithCandidates:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) TIKeyboardCandidate *acceptedCandidate; // @synthesize acceptedCandidate=_acceptedCandidate;
@property(retain, nonatomic) TIKeyboardIntermediateText *uncommittedText; // @synthesize uncommittedText=_uncommittedText;
@property(nonatomic) unsigned long long selectedHiddenCandidateIndex; // @synthesize selectedHiddenCandidateIndex=_selectedHiddenCandidateIndex;
@property(nonatomic) unsigned long long batchCandidateLocation; // @synthesize batchCandidateLocation=_batchCandidateLocation;
@property(nonatomic) unsigned long long generatedCandidateCount; // @synthesize generatedCandidateCount=_generatedCandidateCount;
@property(nonatomic) _Bool excludedExtensionCandidates; // @synthesize excludedExtensionCandidates=_excludedExtensionCandidates;
@property(retain, nonatomic) NSArray *initiallyHiddenCandidates; // @synthesize initiallyHiddenCandidates=_initiallyHiddenCandidates;
@property(retain, nonatomic) NSDictionary *showExtensionCandidates; // @synthesize showExtensionCandidates=_showExtensionCandidates;
@property(retain, nonatomic) NSDictionary *indexTitles; // @synthesize indexTitles=_indexTitles;
@property(retain, nonatomic) NSDictionary *sortMethodGroups; // @synthesize sortMethodGroups=_sortMethodGroups;
@property(retain, nonatomic) NSArray *sortMethods; // @synthesize sortMethods=_sortMethods;
@property(copy, nonatomic) TIKeyboardCandidate *defaultCandidate; // @synthesize defaultCandidate=_defaultCandidate;
@property(nonatomic) unsigned long long initialSelectedIndex; // @synthesize initialSelectedIndex=_initialSelectedIndex;
@property(retain, nonatomic) NSArray *candidates; // @synthesize candidates=_candidates;
- (_Bool)isSubsetOf:(id)arg1;
- (id)setByAppendingSet:(id)arg1;
- (id)initWithCandidates:(id)arg1 initialSelectedIndex:(unsigned long long)arg2 defaultCandidate:(id)arg3 sortMethods:(id)arg4 sortMethodGroups:(id)arg5 indexTitles:(id)arg6 showExtensionCandidates:(id)arg7 initiallyHiddenCandidates:(id)arg8 selectedHiddenCandidateIndex:(unsigned long long)arg9 excludedExtensionCandidates:(_Bool)arg10;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (unsigned long long)positionInCandidateList:(id)arg1;
@property(readonly, nonatomic) _Bool isDummySet;
@property(readonly, nonatomic) _Bool hasMetadata;
@property(readonly, nonatomic) TIKeyboardCandidate *firstCandidate;
@property(readonly, nonatomic) _Bool hasCandidates;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface TIKeyboardCandidateResultSetCoder : NSObject
{
    NSMutableData *_mutableData;
    NSData *_data;
    unsigned long long _offset;
}

+ (id)decodeWithData:(id)arg1;
+ (id)encodeWithCandidateResultSet:(id)arg1;
+ (Class)classFromCandidateType:(int)arg1;
+ (id)candidateTypeToClassNameMap;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSMutableData *mutableData; // @synthesize mutableData=_mutableData;
- (id)candidateResultSet;
- (id)dataFromCandidateResultSet:(id)arg1;
- (id)decodePointerValueArray;
- (void)encodePointerValueArray:(id)arg1;
- (id)decodeStringArray;
- (void)encodeStringArray:(id)arg1;
- (id)decodeString;
- (void)encodeString:(id)arg1;
- (unsigned long long)decodeUInt64;
- (void)encodeUInt64:(unsigned long long)arg1;
- (unsigned int)decodeUInt32;
- (void)encodeUInt32:(unsigned int)arg1;
- (unsigned short)decodeShort;
- (void)encodeShort:(unsigned short)arg1;
- (unsigned char)decodeByte;
- (void)encodeByte:(unsigned char)arg1;
- (_Bool)decodeBool;
- (void)encodeBool:(_Bool)arg1;
- (id)decodeCandidate;
@property(readonly, nonatomic) const char *currentPosition;
@property(readonly, nonatomic) const char *bytes;
- (void)dealloc;
- (id)initWithData:(id)arg1 mutableData:(id)arg2;
- (id)initForDecodingWithData:(id)arg1;
- (id)initForEncoding;

@end

@interface TIKeyboardConfiguration : NSObject <NSSecureCoding>
{
    _Bool _assertDefaultKeyPlane;
    TIKeyboardInputManagerState *_inputManagerState;
    TIKeyboardIntermediateText *_intermediateText;
    NSString *_layoutTag;
    NSString *_accentKeyString;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool assertDefaultKeyPlane; // @synthesize assertDefaultKeyPlane=_assertDefaultKeyPlane;
@property(copy, nonatomic) NSString *accentKeyString; // @synthesize accentKeyString=_accentKeyString;
@property(copy, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
@property(retain, nonatomic) TIKeyboardIntermediateText *intermediateText; // @synthesize intermediateText=_intermediateText;
@property(copy, nonatomic) TIKeyboardInputManagerState *inputManagerState; // @synthesize inputManagerState=_inputManagerState;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface TIKeyboardInput : NSObject <NSSecureCoding>
{
    union {
        long long integerValue;
        struct {
            unsigned int uppercase:1;
            unsigned int autoshifted:1;
            unsigned int popupVariant:1;
            unsigned int multitap:1;
            unsigned int flick:1;
            unsigned int synthesizedByAcceptingCandidate:1;
        } fields;
    } _flags;
    _Bool _backspace;
    NSString *_string;
    id <NSCopying><NSObject><NSSecureCoding> _object;
    TIKeyboardTouchEvent *_touchEvent;
    TIKeyboardCandidate *_acceptedCandidate;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) TIKeyboardCandidate *acceptedCandidate; // @synthesize acceptedCandidate=_acceptedCandidate;
@property(retain, nonatomic) TIKeyboardTouchEvent *touchEvent; // @synthesize touchEvent=_touchEvent;
@property(nonatomic, getter=isBackspace) _Bool backspace; // @synthesize backspace=_backspace;
@property(copy, nonatomic) id <NSCopying><NSObject><NSSecureCoding> object; // @synthesize object=_object;
@property(copy, nonatomic) NSString *string; // @synthesize string=_string;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
@property(nonatomic, getter=isSynthesizedByAcceptingCandidate) _Bool synthesizedByAcceptingCandidate;
@property(nonatomic, getter=isFlick) _Bool flick;
@property(nonatomic, getter=isMultitap) _Bool multitap;
@property(nonatomic, getter=isPopupVariant) _Bool popupVariant;
@property(nonatomic, getter=isAutoshifted) _Bool autoshifted;
@property(nonatomic, getter=isUppercase) _Bool uppercase;

@end

@interface TIKeyboardInputManagerState : NSObject <NSCopying, NSSecureCoding>
{
    TIKeyboardBehaviors *_keyboardBehaviors;
    union {
        long long integerValue;
        struct {
            unsigned int canHandleKeyHitTest:1;
            unsigned int ignoresDeadKeys:1;
            unsigned int needsKeyHitTestResults:1;
            unsigned int shouldExtendPriorWord:1;
            unsigned int suppliesCompletions:1;
            unsigned int supportsNumberKeySelection:1;
            unsigned int supportsSetPhraseBoundary:1;
            unsigned int suppressCompletionsForFieldEditor:1;
            unsigned int usesAutoDeleteWord:1;
            unsigned int usesCandidateSelection:1;
            unsigned int commitsAcceptedCandidate:1;
            unsigned int nextInputWouldStartSentence:1;
            unsigned int inputStringIsExemptFromChecker:1;
            unsigned int suppressPlaceholderCandidate:1;
            unsigned int usesAutocorrectionLists:1;
        } fields;
    } _mask;
    _Bool _shouldAddModifierSymbolsToWordCharacters;
    TIKeyboardCandidate *_autocorrectionRecordForInputString;
    NSString *_wordSeparator;
    unsigned long long _inputCount;
    unsigned long long _inputIndex;
    NSString *_inputString;
    TIKeyEventMap *_keyEventMap;
    NSString *_replacementForDoubleSpace;
    NSString *_shadowTyping;
    unsigned long long _initialCandidateBatchCount;
    TICharacterSetDescription *_wordCharacters;
    TICharacterSetDescription *_shortcutCompletions;
    TICharacterSetDescription *_inputsPreventingAcceptSelectedCandidate;
    TICharacterSetDescription *_inputsToReject;
    TICharacterSetDescription *_terminatorsPreventingAutocorrection;
    TICharacterSetDescription *_terminatorsDeletingAutospace;
    NSString *_searchStringForMarkedText;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *searchStringForMarkedText; // @synthesize searchStringForMarkedText=_searchStringForMarkedText;
@property(copy, nonatomic) TICharacterSetDescription *terminatorsDeletingAutospace; // @synthesize terminatorsDeletingAutospace=_terminatorsDeletingAutospace;
@property(copy, nonatomic) TICharacterSetDescription *terminatorsPreventingAutocorrection; // @synthesize terminatorsPreventingAutocorrection=_terminatorsPreventingAutocorrection;
@property(copy, nonatomic) TICharacterSetDescription *inputsToReject; // @synthesize inputsToReject=_inputsToReject;
@property(copy, nonatomic) TICharacterSetDescription *inputsPreventingAcceptSelectedCandidate; // @synthesize inputsPreventingAcceptSelectedCandidate=_inputsPreventingAcceptSelectedCandidate;
@property(copy, nonatomic) TICharacterSetDescription *shortcutCompletions; // @synthesize shortcutCompletions=_shortcutCompletions;
@property(copy, nonatomic) TICharacterSetDescription *wordCharacters; // @synthesize wordCharacters=_wordCharacters;
@property(nonatomic) unsigned long long initialCandidateBatchCount; // @synthesize initialCandidateBatchCount=_initialCandidateBatchCount;
@property(nonatomic) _Bool shouldAddModifierSymbolsToWordCharacters; // @synthesize shouldAddModifierSymbolsToWordCharacters=_shouldAddModifierSymbolsToWordCharacters;
@property(copy, nonatomic) NSString *shadowTyping; // @synthesize shadowTyping=_shadowTyping;
@property(copy, nonatomic) NSString *replacementForDoubleSpace; // @synthesize replacementForDoubleSpace=_replacementForDoubleSpace;
@property(retain, nonatomic) TIKeyEventMap *keyEventMap; // @synthesize keyEventMap=_keyEventMap;
@property(retain, nonatomic) TIKeyboardBehaviors *keyboardBehaviors; // @synthesize keyboardBehaviors=_keyboardBehaviors;
@property(copy, nonatomic) NSString *inputString; // @synthesize inputString=_inputString;
@property(nonatomic) unsigned long long inputIndex; // @synthesize inputIndex=_inputIndex;
@property(nonatomic) unsigned long long inputCount; // @synthesize inputCount=_inputCount;
@property(copy, nonatomic) NSString *wordSeparator; // @synthesize wordSeparator=_wordSeparator;
@property(retain, nonatomic) TIKeyboardCandidate *autocorrectionRecordForInputString; // @synthesize autocorrectionRecordForInputString=_autocorrectionRecordForInputString;
- (_Bool)stringEndsWord:(id)arg1;
- (_Bool)shouldDeleteAutospaceBeforeTerminator:(id)arg1;
- (_Bool)shouldSuppressAutocorrectionWithTerminator:(id)arg1;
- (_Bool)inputStringAcceptsCurrentCandidateIfSelected:(id)arg1;
- (_Bool)acceptInputString:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
@property(nonatomic) _Bool suppressPlaceholderCandidate;
@property(nonatomic) _Bool usesAutocorrectionLists;
@property(nonatomic) _Bool usesCandidateSelection;
@property(nonatomic) _Bool usesAutoDeleteWord;
@property(nonatomic) _Bool suppressCompletionsForFieldEditor;
@property(nonatomic) _Bool supportsSetPhraseBoundary;
@property(nonatomic) _Bool supportsNumberKeySelection;
@property(nonatomic) _Bool suppliesCompletions;
@property(nonatomic) _Bool shouldExtendPriorWord;
@property(nonatomic) _Bool nextInputWouldStartSentence;
@property(nonatomic) _Bool needsKeyHitTestResults;
@property(nonatomic) _Bool inputStringIsExemptFromChecker;
@property(nonatomic) _Bool ignoresDeadKeys;
@property(nonatomic) _Bool commitsAcceptedCandidate;
@property(nonatomic) _Bool canHandleKeyHitTest;

@end

@interface TIKeyboardInputManagerStub : NSObject <TIKeyboardInputManager>
{
}

+ (id)serverInterface;
+ (void)setClassesForSelectorsReplyingWithCandidatesInInterface:(id)arg1;
- (void)writeTypologyLogWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)lastAcceptedCandidateCorrected;
- (void)candidateRejected:(id)arg1;
- (void)textAccepted:(id)arg1;
- (void)setOriginalInput:(id)arg1;
- (void)adjustPhraseBoundaryInForwardDirection:(_Bool)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)skipHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2;
- (void)performHitTestForTouchEvent:(id)arg1 keyboardState:(id)arg2 continuation:(CDUnknownBlockType)arg3;
- (void)generateRefinementsForCandidate:(id)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateReplacementsForString:(id)arg1 keyLayout:(id)arg2 continuation:(CDUnknownBlockType)arg3;
- (void)handleAcceptedCandidate:(id)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateCandidatesWithKeyboardState:(id)arg1 candidateRange:(struct _NSRange)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)generateAutocorrectionsWithKeyboardState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleKeyboardInput:(id)arg1 keyboardState:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)syncToKeyboardState:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)keyboardConfiguration;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TIKeyboardIntermediateText : NSObject <NSSecureCoding>
{
    unsigned long long _selectionOffset;
    NSString *_inputString;
    NSString *_displayString;
    NSString *_searchString;
}

+ (id)intermediateTextWithInputString:(id)arg1 displayString:(id)arg2 selectionLocation:(unsigned long long)arg3 searchString:(id)arg4;
+ (id)intermediateTextWithInputString:(id)arg1 displayString:(id)arg2 selectionLocation:(unsigned long long)arg3;
+ (id)intermediateTextWithInputString:(id)arg1 displayString:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(readonly, nonatomic) NSString *displayString; // @synthesize displayString=_displayString;
@property(readonly, nonatomic) NSString *inputString; // @synthesize inputString=_inputString;
- (id)description;
@property(readonly, nonatomic) struct _NSRange selectedRange;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithInputString:(id)arg1 displayString:(id)arg2 selectionLocation:(unsigned long long)arg3 searchString:(id)arg4;

@end

@interface TIKeyboardKeyBehaviors : NSObject
{
    unsigned long long _spaceKeyBehavior;
    unsigned long long _returnKeyBehavior;
}

+ (id)behaviorForSpaceKey:(unsigned long long)arg1 forReturnKey:(unsigned long long)arg2;
@property(nonatomic) unsigned long long returnKeyBehavior; // @synthesize returnKeyBehavior=_returnKeyBehavior;
@property(nonatomic) unsigned long long spaceKeyBehavior; // @synthesize spaceKeyBehavior=_spaceKeyBehavior;
- (id)initWithSpaceKeyBehavior:(unsigned long long)arg1 returnKeyBehavior:(unsigned long long)arg2;

@end

@interface TIKeyboardLayout : NSObject <NSSecureCoding>
{
    unsigned long long _count;
    struct _ShortRect *_frames;
    unsigned long long _framesCapacity;
    char *_strings;
    unsigned long long _stringsSize;
    unsigned long long _stringsCapacity;
}

+ (_Bool)supportsSecureCoding;
- (void)enumerateKeysUsingBlock:(CDUnknownBlockType)arg1;
- (void)addKeyWithString:(id)arg1 frame:(struct CGRect)arg2;
- (void)ensureStringCapacity:(unsigned long long)arg1;
- (void)ensureFrameCapacity:(unsigned long long)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCapacity:(unsigned long long)arg1;
- (void)dealloc;

@end

@interface TIKeyboardLayoutFactory : NSObject
{
    void *_layoutsLibraryHandle;
    NSMutableDictionary *_internalCache;
}

+ (id)layoutsFileName;
+ (id)sharedKeyboardFactory;
@property(retain) NSMutableDictionary *internalCache; // @synthesize internalCache=_internalCache;
@property(readonly, nonatomic) void *layoutsLibraryHandle; // @synthesize layoutsLibraryHandle=_layoutsLibraryHandle;
- (id)keyboardPrefixForWidth:(double)arg1;
- (id)keyboardWithName:(id)arg1 inCache:(id)arg2;
- (id)init;
- (void)dealloc;

@end

@interface TIKeyboardLayoutState : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _hasCandidateKey;
    _Bool _hasAccentKey;
    _Bool _canMultitap;
    _Bool _isAlphabeticPlane;
    _Bool _interfaceIdiomIsPad;
    NSString *_inputMode;
    NSString *_layoutTag;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool interfaceIdiomIsPad; // @synthesize interfaceIdiomIsPad=_interfaceIdiomIsPad;
@property(copy, nonatomic) NSString *layoutTag; // @synthesize layoutTag=_layoutTag;
@property(nonatomic) _Bool isAlphabeticPlane; // @synthesize isAlphabeticPlane=_isAlphabeticPlane;
@property(nonatomic) _Bool canMultitap; // @synthesize canMultitap=_canMultitap;
@property(nonatomic) _Bool hasAccentKey; // @synthesize hasAccentKey=_hasAccentKey;
@property(nonatomic) _Bool hasCandidateKey; // @synthesize hasCandidateKey=_hasCandidateKey;
@property(copy, nonatomic) NSString *inputMode; // @synthesize inputMode=_inputMode;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface TIKeyboardOutput : NSObject <NSSecureCoding>
{
    TIKeyboardCandidate *_acceptedCandidate;
    NSString *_textToCommit;
    unsigned long long _deletionCount;
    NSString *_insertionText;
    unsigned long long _forwardDeletionCount;
    NSString *_insertionTextAfterSelection;
    TIKeyboardCandidate *_shortcutConversion;
    NSIndexSet *_handwritingStrokesToDelete;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSIndexSet *handwritingStrokesToDelete; // @synthesize handwritingStrokesToDelete=_handwritingStrokesToDelete;
@property(retain, nonatomic) TIKeyboardCandidate *shortcutConversion; // @synthesize shortcutConversion=_shortcutConversion;
@property(copy, nonatomic) NSString *insertionTextAfterSelection; // @synthesize insertionTextAfterSelection=_insertionTextAfterSelection;
@property(nonatomic) unsigned long long forwardDeletionCount; // @synthesize forwardDeletionCount=_forwardDeletionCount;
@property(copy, nonatomic) NSString *insertionText; // @synthesize insertionText=_insertionText;
@property(nonatomic) unsigned long long deletionCount; // @synthesize deletionCount=_deletionCount;
@property(copy, nonatomic) NSString *textToCommit; // @synthesize textToCommit=_textToCommit;
@property(retain, nonatomic) TIKeyboardCandidate *acceptedCandidate; // @synthesize acceptedCandidate=_acceptedCandidate;
- (void)deleteForward;
- (void)deleteForward:(unsigned long long)arg1;
- (void)insertTextAfterSelection:(id)arg1;
- (void)deleteBackward;
- (void)deleteBackward:(unsigned long long)arg1;
- (void)insertText:(id)arg1;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface TIKeyboardState : NSObject <NSCopying, NSSecureCoding>
{
    union {
        long long integerValue;
        struct {
            unsigned int userSelectedCurrentCandidate:1;
            unsigned int shouldSkipCandidateSelection:1;
            unsigned int suppressingCandidateSelection:1;
            unsigned int needsCandidateMetadata:1;
            unsigned int keyboardEventsLagging:1;
            unsigned int hardwareKeyboardMode:1;
            unsigned int splitKeyboardMode:1;
            unsigned int wordLearningEnabled:1;
            unsigned int autocorrectionEnabled:1;
            unsigned int shortcutConversionEnabled:1;
            unsigned int typologyLoggingEnabled:1;
            unsigned int autocapitalizationEnabled:1;
        } fields;
    } _mask;
    union {
        long long integerValue;
        struct {
            unsigned int displayed:1;
            unsigned int autoDisplayMode:1;
        } fields;
    } _autocorrectionListUIState;
    int _shiftState;
    NSString *_clientIdentifier;
    NSString *_inputMode;
    NSString *_recipientIdentifier;
    TIKeyboardLayout *_keyLayout;
    TIKeyboardLayoutState *_layoutState;
    TIDocumentState *_documentState;
    NSString *_inputForMarkedText;
    NSString *_searchStringForMarkedText;
    TIKeyboardCandidate *_currentCandidate;
    TITextInputTraits *_textInputTraits;
    NSString *_responseContext;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *responseContext; // @synthesize responseContext=_responseContext;
@property(retain, nonatomic) TITextInputTraits *textInputTraits; // @synthesize textInputTraits=_textInputTraits;
@property(retain, nonatomic) TIKeyboardCandidate *currentCandidate; // @synthesize currentCandidate=_currentCandidate;
@property(copy, nonatomic) NSString *searchStringForMarkedText; // @synthesize searchStringForMarkedText=_searchStringForMarkedText;
@property(copy, nonatomic) NSString *inputForMarkedText; // @synthesize inputForMarkedText=_inputForMarkedText;
@property(retain, nonatomic) TIDocumentState *documentState; // @synthesize documentState=_documentState;
@property(copy, nonatomic) TIKeyboardLayoutState *layoutState; // @synthesize layoutState=_layoutState;
@property(nonatomic) int shiftState; // @synthesize shiftState=_shiftState;
@property(retain, nonatomic) TIKeyboardLayout *keyLayout; // @synthesize keyLayout=_keyLayout;
@property(copy, nonatomic) NSString *recipientIdentifier; // @synthesize recipientIdentifier=_recipientIdentifier;
@property(copy, nonatomic) NSString *inputMode; // @synthesize inputMode=_inputMode;
@property(copy, nonatomic) NSString *clientIdentifier; // @synthesize clientIdentifier=_clientIdentifier;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
@property(nonatomic) _Bool autocorrectionListUIAutoDisplayMode;
@property(nonatomic) _Bool autocorrectionListUIDisplayed;
@property(nonatomic) _Bool secureTextEntry;
@property(nonatomic) unsigned long long keyboardType;
@property(nonatomic) unsigned long long autocapitalizationType;
- (void)_createTextInputTraitsIfNecessary;
@property(nonatomic) _Bool autocapitalizationEnabled;
@property(nonatomic) _Bool shortcutConversionEnabled;
@property(nonatomic) _Bool autocorrectionEnabled;
@property(nonatomic) _Bool wordLearningEnabled;
@property(nonatomic) _Bool splitKeyboardMode;
@property(nonatomic) _Bool hardwareKeyboardMode;
@property(nonatomic) _Bool keyboardEventsLagging;
@property(nonatomic) _Bool needsCandidateMetadata;
@property(nonatomic) _Bool suppressingCandidateSelection;
@property(nonatomic) _Bool shouldSkipCandidateSelection;
@property(nonatomic) _Bool userSelectedCurrentCandidate;

@end

@interface TIKeyboardTouchEvent : NSObject <NSSecureCoding>
{
    int _stage;
    double _radius;
    double _timestamp;
    long long _pathIndex;
    long long _forcedKeyCode;
    struct CGPoint _location;
}

+ (id)touchEventWithStage:(int)arg1 location:(struct CGPoint)arg2 radius:(double)arg3 timestamp:(double)arg4 pathIndex:(long long)arg5 forcedKeyCode:(long long)arg6;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) long long forcedKeyCode; // @synthesize forcedKeyCode=_forcedKeyCode;
@property(readonly, nonatomic) int stage; // @synthesize stage=_stage;
@property(readonly, nonatomic) long long pathIndex; // @synthesize pathIndex=_pathIndex;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) double radius; // @synthesize radius=_radius;
@property(readonly, nonatomic) struct CGPoint location; // @synthesize location=_location;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithStage:(int)arg1 location:(struct CGPoint)arg2 radius:(double)arg3 timestamp:(double)arg4 pathIndex:(long long)arg5 forcedKeyCode:(long long)arg6;

@end

@interface TILexicon : NSObject <NSCopying, NSSecureCoding>
{
    NSArray *_entries;
}

+ (void)requestLexiconFromBundlePath:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (id)lexiconWithEntries:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *entries; // @synthesize entries=_entries;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface TILexiconEntry : NSObject <NSCopying, NSSecureCoding>
{
    NSString *_userInput;
    NSString *_documentText;
}

+ (id)entryWithDocumentText:(id)arg1 userInput:(id)arg2;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *documentText; // @synthesize documentText=_documentText;
@property(readonly, nonatomic) NSString *userInput; // @synthesize userInput=_userInput;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

@end

@interface TIMutableCharacterSetDescription : TICharacterSetDescription
{
}

+ (_Bool)supportsSecureCoding;
- (void)addCharactersInString:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface TIPinyinDisambiguationCandidate : TIKeyboardCandidateSingle
{
    NSString *_label;
}

+ (int)type;
+ (id)candidateWithPinyinSyllable:(id)arg1;
+ (_Bool)supportsSecureCoding;
- (id)label;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithPinyinSyllable:(id)arg1;
- (void)dealloc;

@end

@interface TIPreferencesController : NSObject
{
    NSTimer *_synchronizePreferencesTimer;
    _Bool dontSynchronizePreferences;
    _Bool isInternalInstall;
}

+ (id)sharedPreferencesController;
@property(nonatomic) _Bool isInternalInstall; // @synthesize isInternalInstall;
@property(nonatomic) _Bool dontSynchronizePreferences; // @synthesize dontSynchronizePreferences;
- (void)setValue:(id)arg1 forKey:(int)arg2;
- (void)touchSynchronizePreferencesTimer;
- (void)synchronizePreferences;
- (void)releaseDontSynchronizePreferences;
- (void)clearSynchronizePreferencesTimer;
- (_Bool)boolForKey:(int)arg1;
- (id)valueForKey:(int)arg1;
- (id)defaultForKey:(int)arg1;
- (CDStruct_5072e809 *)domainForType:(int)arg1;
- (void)dealloc;
- (id)init;
- (void)preferencesChangedCallback:(id)arg1;
- (CDStruct_982099be *)preferences;
- (CDStruct_5072e809 *)domains;

@end

@interface TIShortcutConversionCandidate : TIKeyboardCandidateSingle
{
}

+ (int)type;
- (_Bool)isForShortcutConversion;

@end

@interface TITextInputTraits : NSObject <NSCopying, NSSecureCoding>
{
    union {
        long long integerValue;
        struct {
            unsigned int autocapitalizationType:2;
            unsigned int autocorrectionType:2;
            unsigned int spellCheckingType:2;
            unsigned int keyboardType:4;
            unsigned int keyboardAppearance:2;
            unsigned int returnKeyType:4;
            unsigned int enablesReturnKeyAutomatically:1;
            unsigned int secureTextEntry:1;
        } fields;
    } _mask;
}

+ (_Bool)supportsSecureCoding;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(nonatomic) _Bool secureTextEntry;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(nonatomic) unsigned long long returnKeyType;
@property(nonatomic) unsigned long long keyboardAppearance;
@property(nonatomic) unsigned long long keyboardType;
@property(nonatomic) unsigned long long spellCheckingType;
@property(nonatomic) unsigned long long autocorrectionType;
@property(nonatomic) unsigned long long autocapitalizationType;

@end

@interface TIUserDictionaryEntryValue : NSObject <NSSecureCoding, TIUserDictionaryEntry>
{
    NSString *_phrase;
    NSString *_shortcut;
    NSNumber *_timestamp;
}

+ (id)valueWithEntry:(id)arg1;
+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSNumber *timestamp; // @synthesize timestamp=_timestamp;
@property(copy, nonatomic) NSString *shortcut; // @synthesize shortcut=_shortcut;
@property(copy, nonatomic) NSString *phrase; // @synthesize phrase=_phrase;
- (_Bool)matchesEntry:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TIUserDictionaryTransaction : NSObject <NSSecureCoding>
{
    TIUserDictionaryEntryValue *_valueToDelete;
    TIUserDictionaryEntryValue *_valueToInsert;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) TIUserDictionaryEntryValue *valueToInsert; // @synthesize valueToInsert=_valueToInsert;
@property(retain, nonatomic) TIUserDictionaryEntryValue *valueToDelete; // @synthesize valueToDelete=_valueToDelete;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;

@end

@interface TIUserDictionaryWord : NSObject
{
}

+ (_Bool)userWord:(id)arg1 duplicatesTarget:(id)arg2 andShortcut:(id)arg3;
+ (long long)validateTransaction:(id)arg1 existingEntries:(id)arg2;
+ (id)managedObjectModelURL;

@end

@interface TIWordTokenizer : NSObject
{
    NSString *m_string;
    struct {
        unsigned short buffer[64];
        struct __CFString *theString;
        unsigned short *directUniCharBuffer;
        char *directCStringBuffer;
        struct {
            long long location;
            long long length;
        } rangeToBuffer;
        long long bufferedRangeStart;
        long long bufferedRangeEnd;
    } m_inlineBuffer;
    struct _NSRange m_tokenRange;
    struct _NSRange m_searchRange;
    unsigned long long m_bufferOffset;
}

- (id)allTokensForString:(id)arg1;
- (struct _NSRange)rangeOfCurrentToken;
- (struct _NSRange)advanceToNextToken;
- (void)setString:(id)arg1 withSearchRange:(struct _NSRange)arg2;
- (void)dealloc;
- (id)init;

@end

@interface TIZephyrCandidate : TIKeyboardCandidateSingle
{
    _Bool extensionCandidate;
    _Bool _isFromPhraseDictionary;
    _Bool _isFromTextChecker;
    unsigned int _usageTrackingMask;
    unsigned long long _wordOriginFeedbackID;
    NSString *_label;
}

+ (int)type;
+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) _Bool isFromTextChecker; // @synthesize isFromTextChecker=_isFromTextChecker;
@property(nonatomic) _Bool isFromPhraseDictionary; // @synthesize isFromPhraseDictionary=_isFromPhraseDictionary;
@property(nonatomic, getter=isExtensionCandidate) _Bool extensionCandidate; // @synthesize extensionCandidate;
- (unsigned int)usageTrackingMask;
- (void)encodeWithCandidateResultSetCoder:(id)arg1;
- (id)initWithCandidateResultSetCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isAutocorrection;
- (unsigned long long)wordOriginFeedbackID;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2 wordOriginFeedbackID:(unsigned long long)arg3 usageTrackingMask:(unsigned int)arg4;
- (id)initWithCandidate:(id)arg1 forInput:(id)arg2 wordOriginFeedbackID:(unsigned long long)arg3;
- (void)dealloc;

@end

