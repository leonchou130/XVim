//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long version;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
    CDUnknownFunctionPointerType equal;
} CDStruct_b3b3fc87;

typedef struct {
    long long pid;
    struct {
        unsigned int val[8];
    } audit_token;
    struct CGRect contentFrame;
} CDStruct_0109ef53;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/QuickLook.framework/QuickLook
// UUID: 8373A609-19FD-3391-8A86-43D1E3BBE31B
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 497.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol QLGenericViewDelegate <NSObject>
- (void)genericViewDidClickOnArchiveButton:(QLGenericView *)arg1;
@end

@protocol QLPreviewContentControllerProtocol <NSObject>
@property int previewMode;
@property id <QLPreviewContentDelegate> delegate;
@property id <QLPreviewContentDataSource> dataSource;
- (void)togglePlayState;
- (void)endScrubbing;
- (void)scrubToValue:(double)arg1;
- (void)beginScrubbing;
- (id <QLRemotePrintPageHelper>)printPageHelper;
- (QLPrintPageRenderer *)printPageRenderer;
- (void)forceResignFirstResponder;
- (void)becomeForeground;
- (void)enterBackground;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
- (void)setContentFrame:(struct CGRect)arg1;
- (void)willChangeContentFrame;
- (void)setTransitioning:(_Bool)arg1 synchronizedWithBlock:(void (^)(void))arg2;
- (void)setBlockRemoteImages:(_Bool)arg1;
- (void)setLoadingTextForMissingFiles:(NSString *)arg1;
- (void)checkCurrentPreviewItem;
- (void)refreshCurrentPreviewItem;
- (void)stopLoadingCurrentPreviewItem;
- (long long)currentPreviewItemIndex;
- (void)setCurrentPreviewItemIndex:(long long)arg1;
- (void)configureWithParameters:(NSDictionary *)arg1;
@end

@protocol QLPreviewContentDataSource <NSObject>
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 previewItemAtIndex:(long long)arg2 completionBlock:(void (^)(id <QLPreviewItem>, NSError *))arg3;
- (id <QLPreviewItem>)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewContentController:(id <QLPreviewContentControllerProtocol>)arg1;
- (long long)currentSourceUUIDForPreviewContentController:(id <QLPreviewContentControllerProtocol>)arg1;
@end

@protocol QLPreviewContentDelegate <NSObject>
- (void)previewContentControllerDidExitFullScreen:(id <QLPreviewContentControllerProtocol>)arg1;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 willEnterFullScreenWithHostedWindow:(_UIHostedWindow *)arg2;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 setAVState:(QLPreviewItemAVState *)arg2 forPreviewItem:(id <QLPreviewItem>)arg3;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 receivedTapOnURL:(NSURL *)arg2;
- (void)showContentsWasTappedInPreviewContentController:(id <QLPreviewContentControllerProtocol>)arg1;
- (void)overlayWasTappedInPreviewContentController:(id <QLPreviewContentControllerProtocol>)arg1;
- (void)contentWasTappedInPreviewContentController:(id <QLPreviewContentControllerProtocol>)arg1;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 willHideOverlayWithDuration:(double)arg2;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 willShowOverlayWithDuration:(double)arg2;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 didFailWithError:(NSError *)arg2;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 didLoadItem:(id <QLPreviewItem>)arg2 atIndex:(long long)arg3 withError:(NSError *)arg4;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 didMoveToItem:(id <QLPreviewItem>)arg2 atIndex:(long long)arg3;
- (void)previewContentController:(id <QLPreviewContentControllerProtocol>)arg1 willMoveToItemAtIndex:(long long)arg2;

@optional
- (UIAlertView *)clientProcessAlertViewForPreviewContentController:(id <QLPreviewContentControllerProtocol>)arg1;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) NSString *previewItemTitle;
@end

@protocol QLPreviewItemInteractionDelegate <NSObject>
- (void)previewItemDidExitFullScreen:(id <QLPreviewItem>)arg1;
- (void)previewItem:(id <QLPreviewItem>)arg1 willEnterFullScreenWithHostedWindow:(_UIHostedWindow *)arg2;
- (void)previewItem:(id <QLPreviewItem>)arg1 setAVState:(QLPreviewItemAVState *)arg2;
- (UIAlertView *)clientProcessAlertViewForPreviewItem:(id <QLPreviewItem>)arg1;
- (void)previewItem:(id <QLPreviewItem>)arg1 receivedTapOnURL:(NSURL *)arg2;
- (NSURLRequest *)previewItem:(id <QLPreviewItem>)arg1 willSendRequest:(NSURLRequest *)arg2;
- (void)previewItemDidLoad:(id <QLPreviewItem>)arg1 atIndex:(long long)arg2 withError:(NSError *)arg3;
- (void)previewItem:(id <QLPreviewItem>)arg1 requiresDisplayBundle:(NSString *)arg2 withHints:(NSDictionary *)arg3;
- (void)previewItemWillLoad:(id <QLPreviewItem>)arg1;
- (void)previewItem:(id <QLPreviewItem>)arg1 willHideOverlayWithDuration:(double)arg2;
- (void)previewItem:(id <QLPreviewItem>)arg1 willShowOverlayWithDuration:(double)arg2;
- (void)showContentsWasTappedForPreviewItem:(id <QLPreviewItem>)arg1;
- (void)overlayWasInteractedWithOnPreviewItem:(id <QLPreviewItem>)arg1;
- (void)viewDidUpdateForPreviewItem:(id <QLPreviewItem>)arg1;
- (void)viewWasTappedOnPreviewItem:(id <QLPreviewItem>)arg1;
@end

@protocol QLPreviewUIItem <QLPreviewItem>
@property(readonly) _Bool isFolder;
@property(readonly) long long previewItemIndex;
@property(readonly) long long level;
@property(readonly) UIImage *icon;
- (void)cancelIconUpdate;
- (void)updateIconWithSize:(struct CGSize)arg1 completionBlock:(void (^)(void))arg2;
@end

@protocol QLPrintPageRendererDataSource <NSObject>
- (NSData *)printPageRenderer:(QLPrintPageRenderer *)arg1 pdfDataForPageAtIndex:(long long)arg2 printingDone:(_Bool *)arg3;
- (void)printPageRenderer:(QLPrintPageRenderer *)arg1 prepareForDrawingPages:(struct _NSRange)arg2;
- (long long)numberOfPagesInPrintPageRenderer:(QLPrintPageRenderer *)arg1;
@end

@protocol QLRemotePreviewContentControllerProtocol <QLPreviewContentControllerProtocol>
- (void)_setNavigationBarVerticalOffset:(double)arg1;
- (void)_getPDFPageAtIndex:(long long)arg1 handler:(void (^)(NSData *, _Bool))arg2;
- (void)_prepareForDrawingPages:(struct _NSRange)arg1 withSize:(struct CGSize)arg2;
- (void)_getNumberOfPagesForSize:(struct CGSize)arg1 withHandler:(void (^)(long long))arg2;
- (void)_willTransitionToSize:(struct CGSize)arg1;
- (void)_setNumberOfPreviewItems:(long long)arg1;
- (void)_setTransitioning:(_Bool)arg1;
@end

@protocol QLRemotePreviewContentProxyProtocol <NSObject>
- (void)_didExitFullScreen;
- (void)_willEnterFullScreenWithContext:(NSDictionary *)arg1;
- (void)_setAVState:(QLPreviewItemAVState *)arg1 forPreviewItem:(QLPreviewItemProxy *)arg2;
- (void)_previewContentControllerDidLoadItem:(QLPreviewItemProxy *)arg1 atIndex:(long long)arg2 withError:(NSError *)arg3;
- (void)_previewContentControllerReceivedTapOnURL:(NSURL *)arg1;
- (void)_previewContentControllerDidMoveToItemAtIndex:(long long)arg1;
- (void)_previewContentControllerWillMoveToItemAtIndex:(long long)arg1;
- (void)_showContentsWasTappedInPreviewContentController;
- (void)_overlayWasTappedInPreviewContentController;
- (void)_contentWasTappedInPreviewContentController;
- (void)_previewContentControllerWillHideOverlayWithDuration:(double)arg1;
- (void)_previewContentControllerWillShowOverlayWithDuration:(double)arg1;
- (void)_previewContentControllerGetPreviewItemAtIndex:(long long)arg1 sourceUUID:(long long)arg2 handler:(void (^)(QLPreviewItemProxy *))arg3;
@end

@protocol QLRemotePrintPageHelper <NSObject>
@property(nonatomic) struct CGSize printableSize;
- (NSData *)pdfDataForPageAtIndex:(long long)arg1 printingDone:(_Bool *)arg2;
- (void)prepareForDrawingPages:(struct _NSRange)arg1;
- (long long)numberOfPages;
@end

@protocol QLScrubViewDataSource
- (struct CGSize)scrubView:(QLScrubView *)arg1 pageSizeAtIndex:(unsigned long long)arg2;
- (QLThumbnailOperation *)scrubView:(QLScrubView *)arg1 thumbnailOperationForPageAtIndex:(unsigned long long)arg2;
- (long long)numberOfPagesInScrubView:(QLScrubView *)arg1;
@end

@protocol QLSwippableItemProtocol <NSObject>
@property(retain) id <QLPreviewItem> previewItem;
@property long long index;
- (void)didFinishSwiping;
- (void)willStartSwiping;
@end

@protocol QLThumbnailAdditionIndexInterface
- (void)addThumbnailForURL:(NSURL *)arg1 completion:(void (^)(_Bool))arg2;
- (void)removeThumbnailForURL:(NSURL *)arg1 completion:(void (^)(_Bool))arg2;
- (void)hasThumbnailForURL:(NSURL *)arg1 updateLastHitDate:(_Bool)arg2 completion:(void (^)(_Bool))arg3;
@end

@protocol QLThumbnailsInterface
- (void)askThumbnailAdditionIndex:(void (^)(id <QLThumbnailAdditionIndexInterface>))arg1;
- (void)hasThumbnailForURL:(NSURL *)arg1 updateLastHitDate:(_Bool)arg2 completion:(void (^)(_Bool))arg3;
- (void)removeThumbnailAdditionsOnURL:(NSURL *)arg1 completionBlock:(void (^)(NSError *))arg2;
- (void)thumbnailsStoreURLForURL:(NSURL *)arg1 completionBlock:(void (^)(NSURL *, NSDictionary *, NSString *, NSError *))arg2;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIDocumentInteractionControllerDelegate <NSObject>

@optional
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 performAction:(SEL)arg2;
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 canPerformAction:(SEL)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 didEndSendingToApplication:(NSString *)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 willBeginSendingToApplication:(NSString *)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)arg1;
- (UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)arg1;
- (struct CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)arg1;
- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)arg1;
@end

@protocol UIDocumentInteractionControllerDelegatePrivate <UIDocumentInteractionControllerDelegate>

@optional
- (UIImage *)documentInteractionControllerTransitionImageForPreview:(UIDocumentInteractionController *)arg1 contentRect:(struct CGRect *)arg2;
- (NSURL *)documentInteractionControllerURLOfDirectoryForUnzippedDocument:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillEndPreview:(UIDocumentInteractionController *)arg1;
- (UIPrintInfo *)printInfoForDocumentInteractionController:(UIDocumentInteractionController *)arg1;
- (id)activityItemForDocumentInteractionController:(UIDocumentInteractionController *)arg1;
- (NSArray *)additionalActivitiesForDocumentInteractionController:(UIDocumentInteractionController *)arg1;
- (_Bool)shouldBlockRemoteImagesInPreviewForDocumentInteractionController:(UIDocumentInteractionController *)arg1;
- (NSArray *)excludedActivityTypesForDocumentInteractionController:(UIDocumentInteractionController *)arg1;
- (LSDocumentProxy *)documentProxyForPreview:(UIDocumentInteractionController *)arg1 name:(NSString *)arg2 UTI:(NSString *)arg3;
@end

@protocol UIDocumentPasswordViewDelegate
- (void)userDidEnterPassword:(NSString *)arg1 forPasswordView:(UIDocumentPasswordView *)arg2;

@optional
- (void)didEndEditingPassword:(UITextField *)arg1 inView:(UIDocumentPasswordView *)arg2;
- (void)didBeginEditingPassword:(UITextField *)arg1 inView:(UIDocumentPasswordView *)arg2;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>

@optional
- (void)popoverPresentationController:(UIPopoverPresentationController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)arg1;
- (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerInteractiveTransitioning <NSObject>
- (void)startInteractiveTransition:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (long long)completionCurve;
- (double)completionSpeed;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWebPDFViewHandlerDelegate

@optional
- (UIAlertView *)alertViewForUIWebPDFViewHandler:(UIWebPDFViewHandler *)arg1;
- (double)minimumVerticalContentOffsetForPDFViewHandler:(UIWebPDFViewHandler *)arg1;
- (UIView *)hostViewForLinkSheet:(UIWebPDFViewHandler *)arg1;
- (NSArray *)pdfViewHandler:(UIWebPDFViewHandler *)arg1 actionsForURL:(NSURL *)arg2 suggestedActions:(NSArray *)arg3;
- (void)pdfViewHandlerCompletedLayoutAndIsUnlocked:(UIWebPDFViewHandler *)arg1;
- (void)highlightSearchResultBounds:(struct CGRect)arg1 resultRects:(NSArray *)arg2 contentViews:(NSArray *)arg3 forPDFViewHandler:(UIWebPDFViewHandler *)arg4;
- (NSString *)passwordForPDFViewHandler:(UIWebPDFViewHandler *)arg1;
- (struct CGPoint)originForPDFPageLabelViewWithHandler:(UIWebPDFViewHandler *)arg1 proposedOrigin:(struct CGPoint)arg2;
- (struct CGRect)frameForPDFViewWithHandler:(UIWebPDFViewHandler *)arg1 proposedFrame:(struct CGRect)arg2;
- (void)pdfViewHandler:(UIWebPDFViewHandler *)arg1 linkClicked:(NSURL *)arg2;
- (void)pdfViewHandler:(UIWebPDFViewHandler *)arg1 willClickLink:(NSURL *)arg2;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@interface NSURL (QLPreviewConvenienceAdditions) <QLPreviewItem>
@property(readonly) NSURL *previewItemURL;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) NSString *previewItemTitle;
@property(readonly) Class superclass;
@end

@interface QLAirPlayController : NSObject
{
    int _mode;
    UIScreen *_screen;
    _UIHostedWindow *_airPlayWindow;
    UISnapshotView *_snapshotView;
    QLPreviewViewController *_previewViewController;
    NSTimer *_refreshTimer;
}

- (void)refreshSnapshot;
- (void)updateGeometryForPreviewViewController:(id)arg1;
- (double)_screenScaleFactorForPreviewViewController:(id)arg1;
- (double)_screenAspectRatioForPreviewViewController:(id)arg1;
- (void)invalidate;
- (void)_removeAirPlayWindow;
- (void)_createAirPlayWindowIfNeeded;
- (void)_updateWindowSize;
- (void)update;
@property int mode;
- (void)_startUsingPreviewController;
- (void)_stopUsingPreviewController;
@property(retain) UIScreen *screen;
@property(retain) QLPreviewViewController *previewViewController;
- (void)dealloc;
- (id)initWithScreen:(id)arg1;

@end

@interface QLAirPlayViewController : UIViewController
{
}

- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;

@end

@interface QLArchiveTableViewCell : UITableViewCell
{
}

- (void)layoutSubviews;
- (double)indentationMargin;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface QLArchiveTableViewController : UITableViewController
{
    QLArchiveViewer *_archiveViewer;
}

@property QLArchiveViewer *archiveViewer; // @synthesize archiveViewer=_archiveViewer;
- (void)viewDidDisappear:(_Bool)arg1;

@end

@interface QLArchiveViewer : NSObject <UIPopoverControllerDelegate, UITableViewDataSource, UITableViewDelegate, UINavigationControllerDelegate, UIPopoverPresentationControllerDelegate>
{
    QLPreviewController *_previewController;
    UIDocumentInteractionController *_documentInteractionController;
    UINavigationController *_navigationController;
    UIPopoverPresentationController *_presentationController;
    QLArchiveTableViewController *_tableViewController;
    _Bool _visible;
}

- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(id)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(id)arg1;
- (void)popoverPresentationControllerDidDismissPopover:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)_updateIcon:(id)arg1 forCell:(id)arg2 template:(_Bool)arg3;
- (struct CGSize)_imageSize;
- (void)_cancelUpdateThumbnails;
- (void)_updateThumbnails;
- (void)update;
@property(readonly, getter=isVisible) _Bool visible;
- (void)dismiss:(id)arg1;
- (void)dismissAnimated:(_Bool)arg1;
- (void)presentFromBarButtonItem:(id)arg1 animated:(_Bool)arg2;
- (_Bool)isInRegularWidth;
- (void)dealloc;
- (id)initWithPreviewController:(id)arg1;
- (void)prepareForPopoverPresentation:(id)arg1;
- (id)presentationController:(id)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)setupViewControllersForPresentationStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface QLPreviewParts : NSObject
{
    NSURL *_url;
    NSData *_data;
    NSString *_fileName;
    NSString *_uti;
    NSString *_password;
    _Bool _progressive;
    void *_convertFunction;
    NSURLConnection *_connection;
    id _delegate;
    long long _pageCount;
    float _pageWidth;
    float _pageHeight;
    NSURL *previewURL;
    NSURLResponse *previewResponse;
    NSMutableSet *registeredURLs;
    NSMutableSet *outstandingURLs;
    NSMutableDictionary *encodingsForURLs;
    NSThread *delegateCallbackThread;
    NSError *mainError;
    _Bool computed;
    _Bool cancelled;
    const void *representedObject;
    CDStruct_b3b3fc87 representedObjectCallbacks;
    long long representedObjectProtection;
    NSMutableDictionary *dumpFileHandles;
    _Bool dumpToDisk;
    _Bool htmlErrorDisabled;
}

+ (id)relativeStringForSafeURL:(id)arg1;
+ (_Bool)isSafeRequest:(id)arg1;
+ (_Bool)isSafeURL:(id)arg1;
+ (id)safeURLScheme;
+ (void)unregisterPreview:(id)arg1;
+ (void)registerPreview:(id)arg1;
@property(readonly, nonatomic) NSURL *previewURL; // @synthesize previewURL;
@property _Bool htmlErrorDisabled; // @synthesize htmlErrorDisabled;
@property(readonly) float pageHeight; // @synthesize pageHeight=_pageHeight;
@property(readonly) float pageWidth; // @synthesize pageWidth=_pageWidth;
@property(readonly) long long pageCount; // @synthesize pageCount=_pageCount;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) _Bool progressive; // @synthesize progressive=_progressive;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *uti; // @synthesize uti=_uti;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void)_dumpData:(id)arg1 withURL:(id)arg2 lastChunk:(_Bool)arg3;
- (id)mimeTypeForAttachmentURL:(id)arg1;
- (unsigned int)cfEncodingForAttachmentURL:(id)arg1;
@property(readonly, nonatomic) NSSet *attachmentURLs;
@property(readonly, nonatomic) NSURLResponse *previewResponse;
@property(readonly, nonatomic) NSURLRequest *previewRequest;
- (void)setError:(id)arg1;
- (void)appendData:(id)arg1 forURL:(id)arg2 lastChunk:(_Bool)arg3;
- (id)newSafeAttachmentURLWithID:(id)arg1 mimeType:(id)arg2 textEncoding:(id)arg3;
- (id)newAttachmentURLWithID:(id)arg1 properties:(id)arg2;
- (void)startDataRepresentationWithContentType:(id)arg1 properties:(id)arg2;
- (void)_registerURL:(id)arg1 mimeType:(id)arg2 textEncoding:(id)arg3;
- (const void *)documentObject;
- (void)setDocumentObject:(const void *)arg1 callbacks:(const CDStruct_b3b3fc87 *)arg2;
- (void)_discardRepresentedObjectSafely;
- (void)_protectRepresentedObjectSafely;
@property(readonly, getter=isComputed) _Bool computed;
@property(readonly, getter=isCancelled) _Bool cancelled;
- (void)computePreviewInThread;
- (void)startComputingPreview;
- (id)safeRequestForRequest:(id)arg1;
- (id)_requestForURL:(id)arg1;
- (id)_voidRequest;
- (void)cancel;
- (void)computePreview;
- (void)dealloc;

@end

@interface QLBasePreviewParts : QLPreviewParts
{
}

+ (CDUnknownFunctionPointerType)dataCallbackForUTI:(id)arg1 andSize:(unsigned long long)arg2;
+ (CDUnknownFunctionPointerType)urlCallbackForUTI:(id)arg1;
+ (_Bool)isBundleURL:(id)arg1;
+ (_Bool)canConvertDocumentType:(id)arg1;
- (void)computePreview;

@end

@interface QLDisplayBundle : UIViewController
{
    id <QLPreviewItemInteractionDelegate> _delegate;
    id <QLPreviewItem> _previewItem;
    _Bool _overlayHidden;
    int _previewMode;
    _Bool _loaded;
    _Bool _loading;
    NSString *_password;
    NSTimer *_refreshTimer;
    long long _index;
    CDStruct_0109ef53 clientContext;
}

+ (_Bool)needsAVControls;
+ (double)allowedLoadingDelay;
@property long long index; // @synthesize index=_index;
@property CDStruct_0109ef53 clientContext; // @synthesize clientContext;
@property _Bool loading; // @synthesize loading=_loading;
@property _Bool loaded; // @synthesize loaded=_loaded;
@property id <QLPreviewItemInteractionDelegate> delegate; // @synthesize delegate=_delegate;
- (id)gestureRecognizersForFullScreenDisplay;
- (void)togglePlayState;
- (void)endScrubbing;
- (void)scrubToValue:(double)arg1;
- (void)beginScrubbing;
- (id)printPageHelper;
- (id)printPageRenderer;
- (id)pdfPreviewData;
- (void)setNavigationBarVerticalOffset:(double)arg1;
@property(readonly) struct CGRect contentFrame;
- (void)viewDidUpdate;
- (void)discardAirPlayView;
- (void)setupAirPlayView;
- (void)endTrackingViewUpdates;
- (void)beginTrackingViewUpdates;
@property(readonly) UIView *airplayView;
@property(readonly) UIView *accessoryView;
@property(readonly) int airPlayMode;
- (_Bool)canCopyToPasteboard;
- (_Bool)adaptativeHeight;
- (_Bool)acceptControllerTouch:(id)arg1 fromGestureRecognizer:(id)arg2;
- (void)requiresDisplayBundle:(id)arg1 withHints:(id)arg2;
- (void)didFailLoadingWithError:(id)arg1;
- (void)didLoad;
- (void)_notifyDidLoadWithError:(id)arg1;
- (void)cancelLoad;
- (void)_performCancelLoad;
- (void)loadWithHints:(id)arg1;
- (void)enterBackground;
- (_Bool)overlayIsHidden;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
@property int previewMode;
@property(retain) NSString *password;
@property(retain) id <QLPreviewItem> previewItem;
- (void)viewDidAppear:(_Bool)arg1;
- (void)cancelLoadIfNeeded;
- (void)loadIfNeededWithHints:(id)arg1;
- (id)description;
- (long long)modalPresentationStyle;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)init;
- (_Bool)canBeCached;

@end

@interface QLDisplayBundleLoader : NSObject
{
    NSMutableDictionary *_displayBundlesById;
}

+ (id)sharedLoader;
- (id)copyDisplayBundleWithPreviewItem:(id)arg1 displayBundleIdentifier:(id)arg2;
- (Class)displayBundleClassForDocumentType:(id)arg1;
- (Class)loadDisplayBundle:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_lookForDisplayBundles;

@end

@interface QLGenericDisplayBundle : QLDisplayBundle <QLGenericViewDelegate>
{
    QLGenericView *_airplayView;
    NSError *_error;
}

@property(retain) NSError *error; // @synthesize error=_error;
- (void)genericViewDidClickOnArchiveButton:(id)arg1;
- (void)discardAirPlayView;
- (void)setupAirPlayView;
- (id)airplayView;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)loadWithHints:(id)arg1;
- (void)_loadPreviewItemInfos;
- (id)subtitleWithDescription:(id)arg1 fileSize:(unsigned long long)arg2;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLGenericView : UIView
{
    UIView *_containerView;
    UIImageView *_iconView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIButton *_showArchiveContentButton;
    NSError *_error;
    id <QLGenericViewDelegate> delegate;
}

@property id <QLGenericViewDelegate> delegate; // @synthesize delegate;
- (void)showArchiveContents:(id)arg1;
@property _Bool showArchiveButton;
@property(copy) NSAttributedString *attributedSubtitle;
@property(copy) NSString *subtitle;
@property(copy) NSString *title;
- (void)layoutSubviews;
- (void)_updateContainerFrameForTraitCollection:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface QLThumbnailOperation : NSOperation
{
    long long _index;
    struct CGSize _size;
    UIImage *_image;
}

@property(retain) UIImage *image; // @synthesize image=_image;
@property struct CGSize size; // @synthesize size=_size;
@property long long index; // @synthesize index=_index;
- (void)dealloc;
- (id)init;

@end

@interface QLHTMLThumbnailOperation : QLThumbnailOperation
{
    UIWebBrowserView *_browserView;
    DOMNode *_node;
}

- (void)main;
- (void)dealloc;
- (id)initWithBrowserView:(id)arg1 andNode:(id)arg2;

@end

@interface QLWebViewPrintPageHelper : NSObject <QLRemotePrintPageHelper>
{
    UIWebBrowserView *_browserView;
    NSURLRequest *_request;
    NSString *_documentType;
    QLPreviewConverter *_previewConverter;
    struct CGSize _printableSize;
}

+ (id)printPageRendererWithBrowserView:(id)arg1 request:(id)arg2 documentType:(id)arg3;
+ (_Bool)_isXPathType:(id)arg1;
@property(retain) QLPreviewConverter *previewConverter; // @synthesize previewConverter=_previewConverter;
@property(nonatomic) struct CGSize printableSize; // @synthesize printableSize=_printableSize;
- (id)pdfDataForPageAtIndex:(long long)arg1 printingDone:(_Bool *)arg2;
- (void)prepareForDrawingPages:(struct _NSRange)arg1;
- (long long)numberOfPages;
- (void)_waitForPreview;
- (void)dealloc;
- (id)initWithWebBrowserView:(id)arg1 request:(id)arg2 documentType:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLLayoutedPrintPageRenderer : QLWebViewPrintPageHelper
{
    NSMutableArray *_nodes;
    UIWebPaginationInfo *_paginationInfo;
}

- (id)pdfDataForPageAtIndex:(long long)arg1 printingDone:(_Bool *)arg2;
- (void)prepareForDrawingPages:(struct _NSRange)arg1;
- (long long)numberOfPages;
- (id)_currentNodes;
- (id)_htmlPageXPath;
- (void)dealloc;

@end

@interface QLPDFHanderDelegateForwarder : NSObject <UIWebPDFViewHandlerDelegate>
{
    id <NSObject><UIWebPDFViewHandlerDelegate> _delegate;
    UIWebView *_webView;
}

@property(nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) id <NSObject><UIWebPDFViewHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;

@end

@interface QLPDFThumbnailOperation : QLThumbnailOperation
{
    struct CGPDFDocument *_documentRef;
}

- (void)main;
- (void)dealloc;
- (id)initWithPDFDocumentRef:(struct CGPDFDocument *)arg1;

@end

@interface QLPackageChecker : NSObject
{
    int _fd;
}

- (_Bool)pathHasPackageExtension:(id)arg1;
- (void)dealloc;
- (id)initWithAnchorURL:(id)arg1;

@end

@interface QLPageNumberView : UIView
{
    long long _pageNumber;
    long long _pageCount;
    UILabel *_backgroundLabel;
    UILabel *_label;
    NSNumberFormatter *_indexFormatter;
}

- (void)drawRect:(struct CGRect)arg1;
- (struct CGPath *)_copyMutablePathForRoundedRect:(struct CGRect)arg1 radius:(double)arg2 inverted:(_Bool)arg3;
- (void)layoutSubviews;
- (void)sizeToFit;
@property long long pageCount;
@property long long pageNumber;
- (void)_updateString;
- (id)_indexFormatter;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface QLPathTree : NSObject
{
    NSString *_path;
    NSMutableDictionary *_directoryChildren;
    NSMutableArray *_packageChildren;
    QLPackageChecker *_packageChecker;
}

@property(readonly, copy) NSString *path; // @synthesize path=_path;
- (void)insertInItemsSource:(id)arg1 archiveController:(id)arg2;
- (void)insertInItemsSource:(id)arg1 archiveController:(id)arg2 atIndex:(unsigned long long *)arg3 uiIndex:(unsigned long long *)arg4 level:(long long)arg5;
- (_Bool)isFolder;
- (_Bool)isPackage;
- (id)description;
- (void)addPath:(id)arg1;
- (void)addPathComponents:(id)arg1;
- (void)addPathInsidePackage:(id)arg1;
- (id)initWithPackageChecker:(id)arg1;
- (void)dealloc;
- (id)initWithPath:(id)arg1 isPackage:(_Bool)arg2 packageChecker:(id)arg3;

@end

@interface QLPreviewArchiveItem : NSObject <QLPreviewUIItem>
{
    UIDocumentInteractionController *_archiveController;
    QLPreviewThumbnailGenerator *_thumbnailGenerator;
    NSString *_path;
    NSURL *_unarchivedURL;
    NSOperation *_unarchiveOperation;
    NSOperationQueue *_unarchiveOperationQueue;
    NSMutableArray *_completionBlocks;
    NSError *_unarchivingError;
    long long _previewItemIndex;
    long long _UIItemIndex;
    long long _level;
    NSURL *_rootUnzippingURL;
    NSArray *_subItems;
}

@property(copy) NSArray *subItems; // @synthesize subItems=_subItems;
@property(retain) NSURL *rootUnzippingURL; // @synthesize rootUnzippingURL=_rootUnzippingURL;
@property long long level; // @synthesize level=_level;
@property long long UIItemIndex; // @synthesize UIItemIndex=_UIItemIndex;
@property long long previewItemIndex; // @synthesize previewItemIndex=_previewItemIndex;
@property(readonly, copy) NSString *description;
- (_Bool)isPromisedItem;
- (void)cancelIconUpdate;
- (void)updateIconWithSize:(struct CGSize)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly) UIImage *icon;
@property(readonly) _Bool isFolder;
- (void)cleanup;
- (void)unarchiveWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)unarchivingError;
@property(readonly) _Bool unarchived;
@property(readonly) NSURL *previewItemURL;
@property(readonly) NSString *path;
- (void)dealloc;
- (id)initWithArchiveController:(id)arg1 path:(id)arg2;
- (id)initWithPath:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) NSString *previewItemTitle;
@property(readonly) Class superclass;

@end

@interface QLPreviewTransitionAnimator : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerInteractiveTransitioning>
{
    _Bool showing;
    id <UIViewControllerContextTransitioning> _transitionContext;
}

@property id <UIViewControllerContextTransitioning> transitionContext; // @synthesize transitionContext=_transitionContext;
@property _Bool showing; // @synthesize showing;
- (void)updateStatusBarWithDuration:(double)arg1;
- (void)didTransitionWithAnimationEnding:(_Bool)arg1;
- (void)willTransitionWithAnimationEnding:(_Bool)arg1;
- (long long)_transitionStateForAnimationEnding:(_Bool)arg1;
@property(readonly) QLPreviewController *previewController;
- (void)startInteractiveTransition:(id)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewBuiltInTransitionAnimator : QLPreviewTransitionAnimator
{
}

- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

@end

@interface QLPreviewContentController : UIViewController <QLPreviewContentControllerProtocol, QLPreviewItemInteractionDelegate>
{
    id <QLPreviewContentDataSource> _dataSource;
    id <QLPreviewContentDelegate> _delegate;
    _Bool _isForeground;
    QLAirPlayController *_airPlayController;
    UITapGestureRecognizer *_tapRecognizer;
    UILongPressGestureRecognizer *_longPressRecognizer;
    UIPageViewController *_pageViewController;
    NSMutableDictionary *_previewViewControllerCache;
    NSMutableSet *_gestureRecognizersForFullScreenDisplay;
    NSMutableArray *_previewViewControllerCacheOrdering;
    int _previewMode;
    long long _numberOfPreviewItems;
    long long _currentPreviewItemIndex;
    NSString *_loadingTextForMissingFiles;
    UISegmentedControl *_customToolbarSegmentedArrowControl;
    UIColor *_backgroundColor;
    _Bool _transitioning;
    _Bool _swiping;
    NSMutableSet *_loadingItems;
    NSMutableOrderedSet *_scheduledLoads;
    double _navigationBarVerticalOffset;
    _Bool _overlayHidden;
    _Bool _blockRemoteImages;
    CDStruct_0109ef53 clientContext;
}

@property CDStruct_0109ef53 clientContext; // @synthesize clientContext;
@property(copy) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property id <QLPreviewContentDelegate> delegate; // @synthesize delegate=_delegate;
@property id <QLPreviewContentDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)_scheduleAdjacentPreviewItems;
- (void)_schedulePreviewViewControllerIfNeeded:(id)arg1;
- (void)_dequeueScheduledLoad;
- (id)clientProcessAlertViewForPreviewItem:(id)arg1;
- (void)previewItemDidExitFullScreen:(id)arg1;
- (void)previewItem:(id)arg1 willEnterFullScreenWithHostedWindow:(id)arg2;
- (void)previewItem:(id)arg1 setAVState:(id)arg2;
- (void)previewItem:(id)arg1 receivedTapOnURL:(id)arg2;
- (id)previewItem:(id)arg1 willSendRequest:(id)arg2;
- (void)previewItemDidLoad:(id)arg1 atIndex:(long long)arg2 withError:(id)arg3;
- (void)previewItem:(id)arg1 requiresDisplayBundle:(id)arg2 withHints:(id)arg3;
- (void)previewItemWillLoad:(id)arg1;
- (void)showContentsWasTappedForPreviewItem:(id)arg1;
- (void)overlayWasInteractedWithOnPreviewItem:(id)arg1;
- (void)viewDidUpdateForPreviewItem:(id)arg1;
- (void)viewWasTappedOnPreviewItem:(id)arg1;
- (void)previewItem:(id)arg1 willHideOverlayWithDuration:(double)arg2;
- (void)previewItem:(id)arg1 willShowOverlayWithDuration:(double)arg2;
- (void)_rightSwipeRecognized:(id)arg1;
- (void)_leftSwipeRecognized:(id)arg1;
- (void)_updateAirPlay;
- (void)_activateAirPlayOnRemoteScreen:(id)arg1;
- (void)_deactivateAirPlay;
- (void)_updateScreenConfiguration;
- (void)_screenDidDisconnect:(id)arg1;
- (void)_screenDidConnect:(id)arg1;
- (void)pageViewController:(id)arg1 willTransitionToViewControllers:(id)arg2;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (void)_updateDisabledScrollingRect;
- (void)copy:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (_Bool)canBecomeFirstResponder;
- (void)becomeForeground;
- (void)enterBackground;
- (void)_updateBackgroundWithDuration:(double)arg1;
- (void)setTransitioning:(_Bool)arg1 synchronizedWithBlock:(CDUnknownBlockType)arg2;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
- (void)_updateContentFrame;
- (void)setContentFrame:(struct CGRect)arg1;
- (void)willChangeContentFrame;
- (void)_longPressGestureRecognized:(id)arg1;
- (void)_hideMenuController;
- (void)_tapGestureRecognized:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)willMoveToParentViewController:(id)arg1;
- (id)snapshotView;
- (void)togglePlayState;
- (void)endScrubbing;
- (void)scrubToValue:(double)arg1;
- (void)beginScrubbing;
- (id)printPageHelper;
- (id)printPageRenderer;
- (void)setNavigationBarVerticalOffset:(double)arg1;
- (void)setLoadingTextForMissingFiles:(id)arg1;
- (void)setBlockRemoteImages:(_Bool)arg1;
@property int previewMode; // @synthesize previewMode=_previewMode;
- (void)checkCurrentPreviewItem;
- (void)stopLoadingCurrentPreviewItem;
- (void)refreshCurrentPreviewItem;
- (void)refreshCurrentPreviewItem:(_Bool)arg1;
- (long long)currentPreviewItemIndex;
- (void)setCurrentPreviewItemIndex:(long long)arg1;
- (id)currentPreviewItem;
- (id)currentPreviewViewController;
- (id)_previewViewControllerForPreviewItemIndex:(unsigned long long)arg1;
- (id)_previewControllerForPreviewItem:(id)arg1 createIfNeeded:(_Bool)arg2 withIndex:(long long)arg3;
- (id)_copyPreviewControllerForPreview:(id)arg1 withIndex:(long long)arg2;
- (void)_cachePreviewViewController:(id)arg1;
- (void)_removeNonCachedPreviewViewControllers;
- (id)_cachedPreviewControllerForPreviewItem:(id)arg1 withIndex:(long long)arg2;
- (void)_clearPreviewViewControllerCache;
- (void)forceResignFirstResponder;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)configureWithParameters:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewController : UIViewController
{
    QLPreviewControllerReserved *_reserved;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
+ (_Bool)copyPreviewItemToPasteboard:(id)arg1;
+ (id)titleForPreviewItem:(id)arg1;
+ (void)presentPreviewItem:(id)arg1 onViewController:(id)arg2 withDelegate:(id)arg3 animated:(_Bool)arg4;
+ (_Bool)canPreviewMIMEType:(id)arg1;
+ (_Bool)canPreviewItem:(id)arg1;
+ (_Bool)canPreviewDocumentType:(id)arg1;
+ (_Bool)_shouldPassThroughDocumentType:(id)arg1;
+ (id)_passThroughDocumentTypes;
+ (id)contentTypeForPreviewItem:(id)arg1;
- (void)_showGenericDisplayBundle;
- (id)printInfoForDocumentInteractionController:(id)arg1;
- (id)activityViewController:(id)arg1 itemForActivityType:(id)arg2;
- (id)activityViewControllerPlaceholderItems:(id)arg1;
- (id)_pdfPreviewDataAtURL:(id)arg1;
- (id)activityItemForDocumentInteractionController:(id)arg1;
- (void)documentInteractionControllerDidDismissOptionsMenu:(id)arg1;
- (void)documentInteractionControllerWillPresentOptionsMenu:(id)arg1;
- (_Bool)_canPrint;
- (void)prepareForPrinting;
- (_Bool)canPrint;
- (void)navigationGoBackAction:(id)arg1;
- (void)playButtonAction:(id)arg1;
- (void)showArchiveContent:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)willTransitionToTraitCollection:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)showArchiveContentAnimated:(_Bool)arg1;
- (void)arrowsAction:(id)arg1;
- (void)rightArrowAction:(id)arg1;
- (void)leftArrowAction:(id)arg1;
- (void)doneButtonTapped:(id)arg1;
- (void)customActionButtonTapped:(id)arg1;
- (void)actionButtonTapped:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)_unloadInternalViews;
- (void)_loadInternalViews;
- (void)_configurePreviewContentController;
- (struct CGRect)_contentFrameForRemoteView;
- (_Bool)_addPreviewContentController;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)loadView;
- (void)_applicationWillEnterForeground:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)_setupWithMode:(int)arg1 parentViewController:(id)arg2;
- (void)_requestRemoteViewControllerIfNeeded;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_setupPreferredModeWithParentViewController:(id)arg1;
- (int)_preferredModeWithParentViewController:(id)arg1 presentingViewController:(id)arg2 traitCollection:(id)arg3;
- (int)_preferredModeWithParentViewController:(id)arg1 presentingViewController:(id)arg2;
- (void)_removeChildPreviewContentControllerIfNeeded;
- (void)previewContentController:(id)arg1 receivedTapOnURL:(id)arg2;
- (void)overlayWasTappedInPreviewContentController:(id)arg1;
- (void)showContentsWasTappedInPreviewContentController:(id)arg1;
- (void)contentWasTappedInPreviewContentController:(id)arg1;
- (void)previewContentController:(id)arg1 willHideOverlayWithDuration:(double)arg2;
- (void)previewContentController:(id)arg1 willShowOverlayWithDuration:(double)arg2;
- (void)previewContentController:(id)arg1 didFailWithError:(id)arg2;
- (void)previewContentController:(id)arg1 didLoadItem:(id)arg2 atIndex:(long long)arg3 withError:(id)arg4;
- (void)previewContentController:(id)arg1 didMoveToItem:(id)arg2 atIndex:(long long)arg3;
- (void)previewContentController:(id)arg1 willMoveToItemAtIndex:(long long)arg2;
- (void)previewContentController:(id)arg1 previewItemAtIndex:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)previewContentController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewContentController:(id)arg1;
- (long long)currentSourceUUIDForPreviewContentController:(id)arg1;
- (id)_documentProxyForPreviewItem:(id)arg1;
- (id)previewItemAtIndex:(long long)arg1;
- (void)refreshCurrentPreviewItem;
- (void)reloadData;
- (void)_prepareDelayedAppearance;
@property long long currentPreviewItemIndex;
- (void)_showContentsIfPossibleAnimated:(_Bool)arg1;
- (void)_setCurrentPreviewItemIndex:(long long)arg1 fromClient:(_Bool)arg2 showContentsIfPossible:(_Bool)arg3;
- (void)setSourceIsManaged:(_Bool)arg1;
- (_Bool)sourceIsManaged;
@property(readonly) id <QLPreviewItem> currentPreviewItem;
- (long long)numberOfPreviewItems;
@property id <QLPreviewControllerDataSource> dataSource;
- (id)previewContentController;
- (id)itemsSource;
- (id)passThroughViewsForIndexSheet;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (int)mode;
- (void)_runDeferredAnimationBlock;
- (void)animateWhenReadyWithBlock:(CDUnknownBlockType)arg1;
- (void)setTransitioning:(_Bool)arg1 synchronizedWithBlock:(CDUnknownBlockType)arg2;
- (void)setLoadingTextForMissingFiles:(id)arg1;
- (_Bool)showActionAsDefaultButton;
- (void)setShowActionAsDefaultButton:(_Bool)arg1;
- (_Bool)useCustomActionButton;
- (void)setUseCustomActionButton:(_Bool)arg1;
- (_Bool)blockRemoteImages;
- (void)setBlockRemoteImages:(_Bool)arg1;
@property id <QLPreviewControllerDelegate> delegate;
- (id)_currentInteractionController;
- (id)_displayedInteractionController;
- (void)presentPreviewItem:(id)arg1 onViewController:(id)arg2 withDelegate:(id)arg3 animated:(_Bool)arg4;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)_commonInit;
- (void)previewContentController:(id)arg1 setAVState:(id)arg2 forPreviewItem:(id)arg3;
- (_Bool)_updateAVState;
- (void)_contentWasTapped;
- (void)_setControlsOverlayVisible:(_Bool)arg1 withStatusBar:(_Bool)arg2 duration:(double)arg3;
- (void)_hideOverlayWithStatusBar:(_Bool)arg1 duration:(double)arg2;
- (void)_showOverlayWithStatusBar:(_Bool)arg1 duration:(double)arg2;
- (id)_currentNavigationController;
- (_Bool)_overlayVisible;
- (void)wirelessRoutesDidChange:(id)arg1;
- (void)_updateNavigationBarWithMode:(int)arg1 traitCollection:(id)arg2 animated:(_Bool)arg3;
- (void)_updateNavigationBarAnimated:(_Bool)arg1;
- (_Bool)_updateActionItem;
- (void)_updateToolbarWithMode:(int)arg1 traitCollection:(id)arg2 animated:(_Bool)arg3;
- (void)_updateToolbarAnimated:(_Bool)arg1;
- (id)_listDescriptionStringWithTitle:(id)arg1;
- (id)_updatedArchiveButton;
- (void)_refreshArchiveItem;
- (void)_refreshListItem;
- (void)_refreshListOrArchiveItem;
- (id)_indexFormatter;
- (void)_updateToolbarVisibilityAnimated:(_Bool)arg1;
- (void)_updateToolbarVisibilityWithTraitCollection:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_needsToolbar;
- (_Bool)_needsToolbarForTraitCollection:(id)arg1;
- (_Bool)_needsAVControls;
- (void)_createControls;
- (void)_updateRouteImages;
- (id)imageWithImage:(id)arg1 drawnOnTopOf:(id)arg2 stretchedToSize:(struct CGSize)arg3 scale:(double)arg4;
- (id)_fixedSpaceItemWithWidth:(double)arg1;
- (id)_flexibleSpaceItem;

@end

__attribute__((visibility("hidden")))
@interface QLPreviewControllerReserved : NSObject
{
    id <QLPreviewItem> previewItem;
    id delegate;
    _Bool blockRemoteImages;
    _Bool useCustomActionButton;
    _Bool showActionAsDefaultButton;
    NSString *loadingTextForMissingFiles;
    int mode;
    QLPreviewItemsSource *itemsSource;
    UIViewController<QLPreviewContentControllerProtocol> *previewContentController;
    _UIAsyncInvocation *cancelViewServiceRequest;
    _Bool isDelayingPresentation;
    CDUnknownBlockType readyBlock;
    long long previousToolbarStyle;
    _Bool previousToolbarWasTranslucent;
    _Bool previousNavBarWasTranslucent;
    long long previousStatusBarStyle;
    UINavigationController *navigationController;
    int overlayState;
    UIBarButtonItem *archiveItem;
    UIBarButtonItem *listItem;
    UIBarButtonItem *titleItem;
    UIBarButtonItem *actionItem;
    _Bool scrubbing;
    UIBarButtonItem *indexItem;
    UILabel *indexLabel;
    UIBarButtonItem *playPauseButton;
    UIBarButtonItem *routeButton;
    MPVolumeView *volumeView;
    MPVolumeView *volumeViewHidden;
    _Bool internalViewsLoaded;
    UIView *mainView;
    unsigned int statusBarWasHidden:1;
    unsigned int toolbarWasHidden:1;
    unsigned int isInUIDICPopover:1;
    NSNumberFormatter *indexFormatter;
    QLArchiveViewer *archiveViewer;
    UIDocumentInteractionController *interactionController;
    NSMutableDictionary *pdfPreviewDataCache;
    NSMutableDictionary *avStateForPreviewItems;
    _Bool sourceIsManaged;
    NSURL *lastPreviewedRealItemURL;
    NSURL *lastPreviewedCurrentItemURL;
}

- (void)dealloc;
- (id)init;

@end

@interface QLPreviewConverter : NSObject
{
    QLPreviewParts *_previewParts;
    NSDictionary *_options;
}

+ (_Bool)isSafeRequest:(id)arg1;
+ (_Bool)isSafeURL:(id)arg1;
+ (_Bool)canConvertDocumentType:(id)arg1;
+ (_Bool)isSpreadSheetDocumentType:(id)arg1;
+ (_Bool)isLPDFDocumentType:(id)arg1;
+ (_Bool)isCSVDocumentType:(id)arg1;
+ (_Bool)isIWorkDocumentType:(id)arg1;
+ (_Bool)isOfficeDocumentType:(id)arg1;
+ (id)_spreadSheetUTIs;
+ (id)_csvUTIs;
+ (id)_lpdfUTIs;
+ (id)_rtfUTIs;
+ (id)_iWorkUTIs;
+ (id)_officeUTIs;
- (_Bool)htmlErrorDisabled;
- (void)setHtmlErrorDisabled:(_Bool)arg1;
- (void)finishedAppendingData;
- (void)appendDataArray:(id)arg1;
- (void)appendData:(id)arg1;
- (id)safeRequestForRequest:(id)arg1;
@property(readonly, nonatomic) NSURLResponse *previewResponse;
@property(readonly, nonatomic) NSURLRequest *previewRequest;
@property(readonly, nonatomic) QLPreviewParts *previewParts;
@property(readonly, nonatomic) NSString *previewUTI;
@property(readonly, nonatomic) NSString *previewFileName;
- (_Bool)isComputed;
- (_Bool)isCancelled;
- (void)cancel;
- (void)finishConverting;
- (void)_register;
- (void)dealloc;
- (id)initWithConnection:(id)arg1 delegate:(id)arg2 response:(id)arg3 options:(id)arg4;
- (id)initWithData:(id)arg1 name:(id)arg2 uti:(id)arg3 options:(id)arg4;
- (id)initWithURL:(id)arg1 uti:(id)arg2 options:(id)arg3;

@end

@interface QLPreviewItemAVState : NSObject <NSSecureCoding>
{
    _Bool playing;
    double position;
    double duration;
}

+ (id)avStateWithPosition:(double)arg1 duration:(double)arg2 playing:(_Bool)arg3;
+ (_Bool)supportsSecureCoding;
@property(getter=isPlaying) _Bool playing; // @synthesize playing;
@property double duration; // @synthesize duration;
@property double position; // @synthesize position;
- (id)description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface QLPreviewItemProxy : NSObject <NSSecureCoding, QLPreviewItem>
{
    NSUUID *_uuid;
    NSString *_fileExtensionToken;
    long long _fileExtensionHandle;
    long long _index;
    _Bool _isPromisedItem;
    NSURL *_url;
    NSString *_title;
    NSURL *_urlForDisplay;
    NSString *_contentType;
    NSString *_password;
    double _autoPlaybackPosition;
}

+ (id)proxyWithPreviewItem:(id)arg1;
+ (id)encodedClasses;
+ (_Bool)supportsSecureCoding;
@property double autoPlaybackPosition; // @synthesize autoPlaybackPosition=_autoPlaybackPosition;
@property _Bool isPromisedItem; // @synthesize isPromisedItem=_isPromisedItem;
@property(readonly) NSUUID *uuid; // @synthesize uuid=_uuid;
@property long long index; // @synthesize index=_index;
@property(retain) NSString *password; // @synthesize password=_password;
@property(retain) NSString *contentType; // @synthesize contentType=_contentType;
@property(retain) NSURL *urlForDisplay; // @synthesize urlForDisplay=_urlForDisplay;
@property(retain) NSString *title; // @synthesize title=_title;
@property(retain) NSURL *url; // @synthesize url=_url;
- (void)consumeFileExtension;
- (void)issueFileExtension;
- (id)previewItemURLForDisplay;
- (id)previewItemContentType;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;
@property(readonly, copy) NSString *description;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithPreviewItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewItemsSource : NSObject <UIDocumentInteractionControllerDelegatePrivate>
{
    QLPreviewController *_previewController;
    id <QLPreviewControllerDataSource> _dataSource;
    id <QLPreviewItem> _previewItem;
    _Bool _prepared;
    long long _UUID;
    NSMutableDictionary *_previewItemCache;
    unsigned long long _numberOfPreviewItems;
    long long _currentPreviewItemIndex;
    long long _currentUIItemIndex;
    long long _archiveDataSourceIndex;
    NSMutableArray *_archiveItems;
    NSMapTable *_uiItems;
    NSURL *_unzippingURL;
}

@property(readonly) long long UUID; // @synthesize UUID=_UUID;
@property(readonly) _Bool prepared; // @synthesize prepared=_prepared;
@property(readonly) long long currentUIItemIndex;
- (id)UIItemAtIndex:(long long)arg1;
@property(readonly) long long numberOfUIItems;
- (void)_setUIItem:(id)arg1 atIndex:(long long)arg2;
- (id)_UIItemAtIndex:(long long)arg1;
@property(readonly) id <QLPreviewItem> realCurrentPreviewItem;
@property long long realCurrentPreviewItemIndex;
- (id)realPreviewItemAtIndex:(long long)arg1;
@property(readonly) long long realNumberOfPreviewItems;
@property(readonly) id <QLPreviewItem> currentPreviewItem;
@property long long currentPreviewItemIndex;
- (void)resolvePreviewItem:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)preparedPreviewItemAtIndex:(long long)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)removeArchiveItemAtIndex:(long long)arg1;
- (void)addArchiveItem:(id)arg1;
- (id)previewItemAtIndex:(long long)arg1;
@property(readonly) long long numberOfPreviewItems;
@property(readonly) _Bool shouldShowFileList;
@property(readonly, getter=isViewingArchive) _Bool viewingArchive;
@property(retain) id <QLPreviewItem> previewItem;
@property id <QLPreviewControllerDataSource> dataSource;
- (void)reset;
- (void)prepare;
- (id)documentInteractionControllerURLOfDirectoryForUnzippedDocument:(id)arg1;
- (void)purgeCache;
- (void)dealloc;
- (id)initWithPreviewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewPageViewController : UIPageViewController
{
}

- (_Bool)shouldAutomaticallyForwardAppearanceMethods;

@end

@interface QLPreviewRemoteItem : NSObject <QLPreviewItem>
{
    QLServicePreviewContentController *_contentController;
    long long _index;
    QLPreviewItemProxy *_proxy;
    _Bool _resolving;
    CDUnknownBlockType _completionBlock;
}

- (double)autoPlaybackPosition;
- (_Bool)isPromisedItem;
- (id)previewItemURLForDisplay;
- (id)previewItemContentType;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;
@property(readonly, copy) NSString *description;
@property(readonly) QLPreviewItemProxy *proxy;
- (void)invalidate;
- (void)resolveWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_clearCompletionBlock;
- (void)dealloc;
- (id)initWithContentController:(id)arg1 index:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewThumbnailGenerator : NSObject
{
    id <QLPreviewItem> _item;
    struct CGSize _size;
    double _scale;
    UIImage *_thumbnailImage;
    NSString *_contentType;
    int _status;
}

+ (id)generatorForPreviewItem:(id)arg1 size:(struct CGSize)arg2;
+ (_Bool)canGenerateThumbnailForPreviewItem:(id)arg1;
@property(readonly) UIImage *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
- (void)cancel;
- (id)_thumbnailForMovie;
- (id)_thumbnailForPDF;
- (id)_thumbnailForImage;
- (id)_endContextWithContentFrame:(struct CGRect)arg1;
- (struct CGContext *)_beginContext;
- (struct CGSize)_pixelSize;
- (void)generateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface QLPreviewTransitionAnimatorManager : NSObject <UIViewControllerTransitioningDelegate, UINavigationControllerDelegate>
{
}

+ (id)sharedManager;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)animatorForShowing:(_Bool)arg1 previewController:(id)arg2 presentingController:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewUIItem : NSObject <QLPreviewUIItem>
{
    id <QLPreviewItem> _previewItem;
    QLPreviewThumbnailGenerator *_thumbnailGenerator;
    long long _index;
}

+ (id)genericIconForPreviewItem:(id)arg1;
+ (id)uiItemForPreviewItem:(id)arg1 index:(long long)arg2;
@property(readonly) long long previewItemIndex;
@property(readonly) long long level;
- (void)cancelIconUpdate;
- (void)updateIconWithSize:(struct CGSize)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly) UIImage *icon;
@property(readonly) _Bool isFolder;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface QLPreviewURLProtocol : NSURLProtocol
{
}

+ (id)mimeTypeForAttachmentURL:(id)arg1;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)stopLoadingProtocol:(id)arg1;
+ (void)startLoadingProtocol:(id)arg1;
+ (id)errorForURL:(id)arg1;
+ (void)setError:(id)arg1 forURL:(id)arg2;
+ (void)appendData:(id)arg1 forURL:(id)arg2 lastChunk:(_Bool)arg3;
+ (void)unregisterURLs:(id)arg1 andPreview:(id)arg2;
+ (void)_unregisterURL:(id)arg1;
+ (id)_errorForNoPreview;
+ (id)_errorForCancel;
+ (id)_errorForAbort;
+ (void)registerURL:(id)arg1 mimeType:(id)arg2 textEncoding:(id)arg3;
+ (void)registerPreview:(id)arg1;
+ (id)newURLWithContentID:(id)arg1 baseURL:(id)arg2;
+ (id)newUniqueURLWithName:(id)arg1;
+ (void)initialize;
- (void)stopLoading;
- (void)startLoading;

@end

@interface QLPreviewViewContainer : UIView
{
    QLPreviewViewController *_controller;
}

@property QLPreviewViewController *controller; // @synthesize controller=_controller;
- (void)layoutSubviews;

@end

@interface QLPreviewViewController : UIViewController <QLPreviewItemInteractionDelegate, UIDocumentPasswordViewDelegate, QLSwippableItemProtocol>
{
    id <QLPreviewItemInteractionDelegate> _displayBundleDelegate;
    id <QLPreviewItem> _previewItem;
    long long _index;
    CDStruct_0109ef53 _clientContext;
    int _previewMode;
    _Bool _needsReload;
    _Bool _swiping;
    _Bool _shouldSwapDisplayBundles;
    UIView *_scalingView;
    UIView *_contentContainerView;
    UIView *_accessoryContainerView;
    double _aspectRatio;
    double _scaleFactor;
    double _navigationBarVerticalOffset;
    QLDisplayBundle *_displayBundle;
    QLDisplayBundle *_newDisplayBundle;
    NSTimer *_progressTimer;
    QLProgressView *_progressView;
    NSString *_loadingTextForMissingFiles;
    _Bool _overlayHidden;
    UIDocumentPasswordView *_documentPasswordView;
    NSLayoutConstraint *_documentPasswordViewKeyboardConstraint;
    QLGenericView *_airPlayPasswordView;
    _Bool _loadedWithPassword;
    _Bool _visible;
    struct CGRect _initialFrame;
}

@property(nonatomic) struct CGRect initialFrame; // @synthesize initialFrame=_initialFrame;
@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
@property long long index; // @synthesize index=_index;
@property id <QLPreviewItemInteractionDelegate> displayBundleDelegate; // @synthesize displayBundleDelegate=_displayBundleDelegate;
- (void)previewItemDidExitFullScreen:(id)arg1;
- (void)previewItem:(id)arg1 willEnterFullScreenWithHostedWindow:(id)arg2;
- (void)previewItem:(id)arg1 setAVState:(id)arg2;
- (id)clientProcessAlertViewForPreviewItem:(id)arg1;
- (void)previewItem:(id)arg1 receivedTapOnURL:(id)arg2;
- (id)previewItem:(id)arg1 willSendRequest:(id)arg2;
- (void)previewItemDidLoad:(id)arg1 atIndex:(long long)arg2 withError:(id)arg3;
- (void)previewItem:(id)arg1 requiresDisplayBundle:(id)arg2 withHints:(id)arg3;
- (void)previewItemWillLoad:(id)arg1;
- (void)previewItem:(id)arg1 willHideOverlayWithDuration:(double)arg2;
- (void)previewItem:(id)arg1 willShowOverlayWithDuration:(double)arg2;
- (void)showContentsWasTappedForPreviewItem:(id)arg1;
- (void)overlayWasInteractedWithOnPreviewItem:(id)arg1;
- (void)viewDidUpdateForPreviewItem:(id)arg1;
- (void)viewWasTappedOnPreviewItem:(id)arg1;
- (void)didFinishSwiping;
- (void)willStartSwiping;
- (void)cancelLoadIfNeeded;
- (void)preloadIfNeeded;
- (void)endTrackingViewUpdates;
- (void)beginTrackingViewUpdates;
@property(readonly) UIView *snapshotView;
- (void)discardAirPlayView;
- (void)setupAirPlayView;
@property(readonly) UIView *airPlayView;
@property(readonly) int airPlayMode;
- (void)_refreshPreviewItem:(_Bool)arg1 withPassword:(id)arg2;
- (void)refreshPreviewItem;
- (void)_prepareDisplayBundle:(id)arg1 preload:(_Bool)arg2 withHints:(id)arg3;
- (void)_updateProgressUIWithDuration:(double)arg1;
- (void)_hideProgressiveUI;
- (void)_showProgressUI;
- (void)_scheduleShowProgressiveUI;
- (void)_cancelScheduledShowProgressiveUI;
- (void)_keyboardVisibilityChanged:(id)arg1;
- (void)didEndEditingPassword:(id)arg1 inView:(id)arg2;
- (void)didBeginEditingPassword:(id)arg1 inView:(id)arg2;
- (void)userDidEnterPassword:(id)arg1 forPasswordView:(id)arg2;
- (void)_hidePasswordView;
- (void)_showPasswordView;
- (void)_showGenericDisplayBundleForPreviewItem:(id)arg1;
- (void)_removeDisplayBundles;
- (void)_swapDisplayBundles;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
@property int previewMode;
@property CDStruct_0109ef53 clientContext;
- (void)setLoadingTextForMissingFiles:(id)arg1;
@property(readonly) QLDisplayBundle *displayBundle;
@property(retain) id <QLPreviewItem> previewItem;
- (void)setNavigationBarVerticalOffset:(double)arg1;
- (void)setAspectRatio:(double)arg1 scaleFactor:(double)arg2;
- (void)_layoutViews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (void)loadView;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLPreviewZoomTransitionAnimator : QLPreviewTransitionAnimator
{
}

- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

@end

@interface QLPrintPageRenderer : UIPrintPageRenderer
{
    id <QLPrintPageRendererDataSource> _dataSource;
    long long _cachedNumberOfPages;
    struct CGSize _sizeWhenNumberOfPagesWasCached;
    _Bool _printingDone;
    long long _numberOfPrintedPages;
}

@property id <QLPrintPageRendererDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)drawPageAtIndex:(long long)arg1 inRect:(struct CGRect)arg2;
- (void)prepareForDrawingPages:(struct _NSRange)arg1;
- (long long)numberOfPages;
- (void)prepareForPrinting;
- (id)init;

@end

@interface QLProgressView : UIView
{
    int _backgroundColorType;
    UIActivityIndicatorView *_progressIndicator;
    UILabel *_loadingTextLabel;
}

- (void)layoutSubviews;
@property(copy) NSString *loadingText;
@property int backgroundColorType;
- (void)_update;
- (void)dealloc;
- (id)init;

@end

@interface QLRemotePreviewContentController : _UIRemoteViewController <QLPreviewContentControllerProtocol, QLPrintPageRendererDataSource>
{
    QLPreviewController *_previewController;
    id <QLPreviewContentDataSource> _dataSource;
    id <QLPreviewContentDelegate> _delegate;
    long long _currentPreviewItemIndex;
    long long _numberOfPreviewItems;
    NSMapTable *_previewItemsForProxys;
    NSMapTable *_proxysForPreviewItems;
    QLPrintPageRenderer *_printPageRenderer;
    _UIRemoteView *_fullScreenView;
    _Bool _statusBarWasHidden;
    _Bool _isHostingFullScreenWindow;
}

+ (id)serviceViewControllerInterface;
+ (id)exportedInterface;
@property id <QLPreviewContentDelegate> delegate; // @synthesize delegate=_delegate;
@property id <QLPreviewContentDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property QLPreviewController *previewController; // @synthesize previewController=_previewController;
- (void)_didExitFullScreen;
- (void)_willEnterFullScreenWithContext:(id)arg1;
- (void)_setAVState:(id)arg1 forPreviewItem:(id)arg2;
- (void)_previewContentControllerReceivedTapOnURL:(id)arg1;
- (void)_showContentsWasTappedInPreviewContentController;
- (void)_overlayWasTappedInPreviewContentController;
- (void)_contentWasTappedInPreviewContentController;
- (void)_previewContentControllerWillHideOverlayWithDuration:(double)arg1;
- (void)_previewContentControllerWillShowOverlayWithDuration:(double)arg1;
- (void)_previewContentControllerDidLoadItem:(id)arg1 atIndex:(long long)arg2 withError:(id)arg3;
- (void)_previewContentControllerDidMoveToItemAtIndex:(long long)arg1;
- (void)_previewContentControllerWillMoveToItemAtIndex:(long long)arg1;
- (void)_previewContentControllerGetPreviewItemAtIndex:(long long)arg1 sourceUUID:(long long)arg2 handler:(CDUnknownBlockType)arg3;
- (id)_proxyForPreviewItem:(id)arg1;
- (id)_previewItemFromProxy:(id)arg1;
- (id)printPageRenderer:(id)arg1 pdfDataForPageAtIndex:(long long)arg2 printingDone:(_Bool *)arg3;
- (void)printPageRenderer:(id)arg1 prepareForDrawingPages:(struct _NSRange)arg2;
- (long long)numberOfPagesInPrintPageRenderer:(id)arg1;
- (id)printPageHelper;
- (id)printPageRenderer;
- (void)togglePlayState;
- (void)endScrubbing;
- (void)scrubToValue:(double)arg1;
- (void)beginScrubbing;
- (void)forceResignFirstResponder;
- (void)becomeForeground;
- (void)enterBackground;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
- (void)setContentFrame:(struct CGRect)arg1;
- (void)willChangeContentFrame;
- (void)configureWithParameters:(id)arg1;
- (void)setLoadingTextForMissingFiles:(id)arg1;
- (void)setTransitioning:(_Bool)arg1 synchronizedWithBlock:(CDUnknownBlockType)arg2;
- (void)setBlockRemoteImages:(_Bool)arg1;
- (void)checkCurrentPreviewItem;
- (void)stopLoadingCurrentPreviewItem;
- (void)refreshCurrentPreviewItem;
- (long long)numberOfPreviewItems;
- (void)setNumberOfPreviewItems:(long long)arg1;
- (long long)currentPreviewItemIndex;
- (void)setCurrentPreviewItemIndex:(long long)arg1;
@property int previewMode;
- (void)_updateNavigationBarVerticalOffset;
- (void)viewDidLayoutSubviews;
- (void)viewServiceDidTerminateWithError:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLScrubView : UIView <UIGestureRecognizerDelegate>
{
    id <QLScrubViewDataSource> _dataSource;
    id _delegate;
    _Bool _runOnMainThread;
    _Bool _needsThumbLayout;
    double _thumbOrigin;
    double _thumbEnd;
    double _thumbHeight;
    long long _pageCount;
    long long _selectedPage;
    NSOperationQueue *_queue;
    NSMutableSet *_operations;
    NSMutableDictionary *_thumbViews;
    NSMutableArray *_visibleThumbIndexes;
    QLThumbnailView *_selectedThumbnailView;
    QLPageNumberView *_pageNumberLabel;
}

+ (double)defaultWidth;
@property id delegate; // @synthesize delegate=_delegate;
@property id <QLScrubViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)drawRect:(struct CGRect)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateSelectedThumbnailView;
- (void)layoutSubviews;
- (void)_hidePageLabel;
- (void)_updatePageLabelPosition;
- (void)_showPageLabel;
- (struct CGRect)_thumbnailFrameForPageAtIndex:(long long)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)longTapReceived:(id)arg1;
- (void)tapReceived:(id)arg1;
- (void)panReceived:(id)arg1;
- (void)_handleSwipAtLocation:(struct CGPoint)arg1;
- (void)_notifyScrubingEnded;
- (void)_notifyPageChanged;
- (void)_notifyScrubingStarted;
- (void)selectPageNumber:(long long)arg1;
- (void)reloadThumbnails;
- (void)_removeThumbviews;
@property _Bool runOnMainThread;
- (void)didReceiveMemoryWarning;
- (void)dealloc;
- (void)_cancelAllOperations;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLServicePreviewContentController : UIViewController <QLRemotePreviewContentControllerProtocol, QLPreviewContentDataSource, QLPreviewContentDelegate>
{
    NSMutableDictionary *_previewItemCache;
    long long _sourceUUID;
    QLPreviewContentController *_previewContentController;
    long long _numberOfPreviewItems;
    int _previewMode;
    _Bool _remoteInstantiationFinished;
    _Bool _blockRemoteImages;
    id <QLRemotePrintPageHelper> _printPageHelper;
    struct CGSize _clientSize;
    _UIHostedWindow *_hostedWindow;
}

+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;
@property(readonly) long long sourceUUID; // @synthesize sourceUUID=_sourceUUID;
- (id)clientProcessAlertViewForPreviewContentController:(id)arg1;
- (void)previewContentControllerDidExitFullScreen:(id)arg1;
- (void)previewContentController:(id)arg1 willEnterFullScreenWithHostedWindow:(id)arg2;
- (void)previewContentController:(id)arg1 setAVState:(id)arg2 forPreviewItem:(id)arg3;
- (void)previewContentController:(id)arg1 receivedTapOnURL:(id)arg2;
- (void)showContentsWasTappedInPreviewContentController:(id)arg1;
- (void)contentWasTappedInPreviewContentController:(id)arg1;
- (void)overlayWasTappedInPreviewContentController:(id)arg1;
- (void)previewContentController:(id)arg1 willHideOverlayWithDuration:(double)arg2;
- (void)previewContentController:(id)arg1 willShowOverlayWithDuration:(double)arg2;
- (void)previewContentController:(id)arg1 didFailWithError:(id)arg2;
- (void)previewContentController:(id)arg1 didLoadItem:(id)arg2 atIndex:(long long)arg3 withError:(id)arg4;
- (void)previewContentController:(id)arg1 didMoveToItem:(id)arg2 atIndex:(long long)arg3;
- (void)previewContentController:(id)arg1 willMoveToItemAtIndex:(long long)arg2;
- (void)previewContentController:(id)arg1 previewItemAtIndex:(long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)previewContentController:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewContentController:(id)arg1;
- (long long)currentSourceUUIDForPreviewContentController:(id)arg1;
- (id)_remotePreviewItemAtIndex:(long long)arg1;
- (void)togglePlayState;
- (void)endScrubbing;
- (void)scrubToValue:(double)arg1;
- (void)beginScrubbing;
- (void)_setNavigationBarVerticalOffset:(double)arg1;
- (void)_getPDFPageAtIndex:(long long)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_prepareForDrawingPages:(struct _NSRange)arg1 withSize:(struct CGSize)arg2;
- (void)_getNumberOfPagesForSize:(struct CGSize)arg1 withHandler:(CDUnknownBlockType)arg2;
- (id)printPageHelper;
- (id)printPageRenderer;
- (void)forceResignFirstResponder;
- (void)becomeForeground;
- (void)enterBackground;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
- (void)_willTransitionToSize:(struct CGSize)arg1;
- (void)_updateHostedWindowFrame;
- (void)setContentFrame:(struct CGRect)arg1;
- (void)willChangeContentFrame;
- (void)checkCurrentPreviewItem;
- (void)stopLoadingCurrentPreviewItem;
- (void)refreshCurrentPreviewItem;
- (void)configureWithParameters:(id)arg1;
- (void)setLoadingTextForMissingFiles:(id)arg1;
- (void)_setTransitioning:(_Bool)arg1;
- (void)setTransitioning:(_Bool)arg1 synchronizedWithBlock:(CDUnknownBlockType)arg2;
- (void)setBlockRemoteImages:(_Bool)arg1;
- (long long)currentPreviewItemIndex;
- (long long)numberOfPreviewItems;
- (void)_setNumberOfPreviewItems:(long long)arg1;
- (void)setCurrentPreviewItemIndex:(long long)arg1;
@property int previewMode;
@property id <QLPreviewContentDelegate> delegate;
@property id <QLPreviewContentDataSource> dataSource;
- (void)purgeCache;
- (void)_willAppearInRemoteViewController;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLSpreadsheetPrintPageRenderer : QLWebViewPrintPageHelper
{
    UIWebBrowserView *_printView;
    UIWebPaginationInfo *_paginationInfo;
    _Bool _frameLoaded;
    NSMutableArray *_urls;
    unsigned long long _currentURLIndex;
    unsigned long long _currentPageIndex;
    long long _totalPagesPrinted;
    _Bool _printingDone;
}

- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2 forFrame:(id)arg3;
- (void)webView:(id)arg1 didFinishLoadForFrame:(id)arg2;
- (id)pdfDataForPageAtIndex:(long long)arg1 printingDone:(_Bool *)arg2;
- (void)prepareForDrawingPages:(struct _NSRange)arg1;
- (_Bool)_loadNextURL;
- (long long)numberOfPages;
- (_Bool)_loadURLAtIndex:(unsigned long long)arg1;
- (id)_documentURLs;
- (void)dealloc;
- (id)initWithWebBrowserView:(id)arg1 request:(id)arg2 documentType:(id)arg3;

@end

__attribute__((visibility("hidden")))
@interface QLThreadInvoker : NSObject
{
    NSURLConnection *_connection;
    NSData *_data;
    NSError *_error;
}

- (void)connectionDidFailWithError:(id)arg1;
- (void)connectionDidReceiveDataLengthReceived:(id)arg1;
- (void)connectionDidReceiveData:(id)arg1;
- (void)dealloc;
- (id)initWithConnection:(id)arg1 data:(id)arg2 error:(id)arg3;

@end

@interface QLThumbnail : NSObject
{
    NSURL *_url;
}

+ (id)defaultDescriptors;
+ (id)sharedQueue;
@property(retain) NSURL *url; // @synthesize url=_url;
- (_Bool)provideImages:(CDUnknownBlockType)arg1 error:(id *)arg2;
- (id)imageForUseMode:(unsigned long long)arg1 descriptor:(id)arg2 generateIfNeeded:(_Bool)arg3 contentRect:(struct CGRect *)arg4 error:(id *)arg5;
- (id)thumbnailCreationOperationForUseMode:(unsigned long long)arg1 descriptor:(id)arg2;
- (id)initWithURL:(id)arg1;

@end

@interface QLThumbnailAddition : NSObject
{
    NSURL *_additionURL;
    long long _additionURLSandboxToken;
    NSDictionary *_metadata;
    GSAddition *_addition;
    NSDictionary *_thumbnailDataDictionary;
}

+ (_Bool)setThumbnailsDictionary:(id)arg1 forURL:(id)arg2 error:(id *)arg3;
+ (id)thumbnailsDictionaryForURL:(id)arg1 error:(id *)arg2;
+ (Class)imageClassWithError:(id *)arg1;
+ (_Bool)removeAdditionsOnURL:(id)arg1 error:(id *)arg2;
+ (_Bool)_removedAdditionsOnURL:(id)arg1;
+ (_Bool)_removedAdditionsOnURLUsingDaemon:(id)arg1;
+ (_Bool)_removeAdditionsOnURLUsingDaemon:(id)arg1 error:(id *)arg2;
+ (_Bool)_removeAdditionsOnURLDirectly:(id)arg1 error:(id *)arg2;
+ (_Bool)associateImage:(struct CGImage *)arg1 metadata:(id)arg2 withURL:(id)arg3 error:(id *)arg4;
+ (_Bool)imageContainsAlpha:(struct CGImage *)arg1;
+ (_Bool)makeAdditionFromStagingURL:(id)arg1 metadata:(id)arg2 inStorage:(id)arg3 error:(id *)arg4;
+ (_Bool)hasThumbnailOnImmutableDocumentAtURL:(id)arg1;
+ (_Bool)associateThumbnailImagesDictionary:(id)arg1 serializedQuickLookMetadata:(id)arg2 withImmutableDocument:(_Bool)arg3 atURL:(id)arg4 error:(id *)arg5;
+ (_Bool)associateThumbnailImagesDictionary:(id)arg1 serializedQuickLookMetadata:(id)arg2 withDocumentAtURL:(id)arg3 error:(id *)arg4;
+ (_Bool)storeThumbnailDataDictionary:(id)arg1 metadata:(id)arg2 asExtendedAttributeOnURL:(id)arg3 error:(id *)arg4;
+ (_Bool)_hitAdditionsOnURL:(id)arg1 error:(id *)arg2;
+ (_Bool)_hitAdditionsOnURLUsingDaemon:(id)arg1 error:(id *)arg2;
+ (id)_additionCreationInfo;
+ (id)plistInExtendedAttributeNamed:(const char *)arg1 flags:(unsigned long long)arg2 onFileDescriptor:(int)arg3 error:(id *)arg4;
@property(retain) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(retain) NSDictionary *thumbnailDataDictionary; // @synthesize thumbnailDataDictionary=_thumbnailDataDictionary;
@property(retain) NSURL *additionURL; // @synthesize additionURL=_additionURL;
- (id)thumbnailsDictionaryWithError:(id *)arg1;
- (struct CGImage *)thumbnailWithMaximumDimension:(double)arg1 properties:(id *)arg2 flavor:(int *)arg3 contentRect:(struct CGRect *)arg4;
- (void *)cacheVersion;
- (id)initWithAdditionsPresentOnURL:(id)arg1 error:(id *)arg2;
- (_Bool)_initWithXattrsPresentOnURL:(id)arg1 error:(id *)arg2;
- (_Bool)_initWithAdditionsPresentOnURLUsingDaemon:(id)arg1 error:(id *)arg2;
- (_Bool)_initWithAdditionsPresentOnURLDirectly:(id)arg1 error:(id *)arg2;
- (id)thumbnailDataForKey:(id)arg1;
- (id)thumbnailURLForKey:(id)arg1;
- (void)dealloc;

@end

@interface QLThumbnailAdditionCache : NSObject
{
    NSCache *_additionsCache;
}

+ (id)sharedInstance;
- (void)purgeCachedAdditionForItemAtURL:(id)arg1;
- (id)thumbnailAdditionForItemAtURL:(id)arg1 error:(id *)arg2;
- (id)init;

@end

@interface QLThumbnailCreationOperation : NSOperation
{
    _Bool _finished;
    _Bool _executing;
    UIImage *_image;
    NSError *_error;
    NSURL *_documentURL;
    double _maximumDimension;
    double _scaleFactor;
    unsigned long long _useMode;
    struct CGRect _contentRect;
}

@property unsigned long long useMode; // @synthesize useMode=_useMode;
@property double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property double maximumDimension; // @synthesize maximumDimension=_maximumDimension;
@property(retain) NSURL *documentURL; // @synthesize documentURL=_documentURL;
@property(retain) NSError *error; // @synthesize error=_error;
@property(retain) UIImage *image; // @synthesize image=_image;
@property struct CGRect contentRect; // @synthesize contentRect=_contentRect;
- (_Bool)isExecuting;
- (_Bool)isFinished;
- (void)retrieveThumbnailForPhysicalURL:(id)arg1 hasThumbnailInIndex:(_Bool)arg2;
- (void)checkIfThumbnailExistsAtPhysicalURL:(id)arg1;
- (void)main;
- (_Bool)_finishIfCancelled;
- (void)_finish;
- (void)start;
- (_Bool)isConcurrent;
- (void)setExecuting:(_Bool)arg1;
- (void)setFinished:(_Bool)arg1;
- (void)dealloc;

@end

@interface QLThumbnailDescriptor : NSObject
{
    double _scaleFactor;
    struct CGSize _size;
}

+ (id)descriptorWithSize:(struct CGSize)arg1 scaleFactor:(double)arg2;
@property double scaleFactor; // @synthesize scaleFactor=_scaleFactor;
@property struct CGSize size; // @synthesize size=_size;

@end

@interface QLThumbnailServiceProxy : NSObject
{
    NSXPCConnection *_connection;
    NSObject<QLThumbnailsInterface> *_proxy;
}

+ (id)sharedInstance;
- (void)askThumbnailAdditionIndex:(CDUnknownBlockType)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)dealloc;
- (id)init;

@end

@interface QLThumbnailStoreRetrievalOperation : NSOperation
{
    NSURL *_documentURL;
    NSError *_error;
    _Bool _finished;
    _Bool _executing;
    QLThumbnailAddition *_addition;
}

@property(nonatomic, getter=isExecuting) _Bool executing; // @synthesize executing=_executing;
@property(nonatomic, getter=isFinished) _Bool finished; // @synthesize finished=_finished;
@property(retain) NSError *error; // @synthesize error=_error;
@property(readonly) NSData *serializedQuickLookMetadataDictionary;
@property(readonly) NSDictionary *thumbnailImagesDictionary;
- (void)_finishWithError:(id)arg1;
- (void)main;
- (void)start;
- (_Bool)_finishIfCancelled;
- (void)cancel;
- (id)description;
- (void)dealloc;
- (id)initWithDocumentAtURL:(id)arg1;
- (_Bool)isConcurrent;

@end

@interface QLThumbnailView : UIView
{
    QLThumbnailOperation *_thumbnailOperation;
    UIImage *_image;
    long long _pageNumber;
    _Bool _alwaysVisible;
    struct CGRect unselectedFrame;
    struct CGRect _unselectedFrame;
}

@property struct CGRect unselectedFrame; // @synthesize unselectedFrame=_unselectedFrame;
@property _Bool alwaysVisible; // @synthesize alwaysVisible=_alwaysVisible;
@property long long pageNumber; // @synthesize pageNumber=_pageNumber;
@property(retain) UIImage *image; // @synthesize image=_image;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)setFrame:(struct CGRect)arg1;
@property(retain) QLThumbnailOperation *thumbnailOperation;
- (void)dealloc;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface QLWebViewDisplayBundle : QLDisplayBundle <UIWebViewDelegate, UIScrollViewDelegate, QLScrubViewDataSource, UIWebPDFViewHandlerDelegate>
{
    UIWebView *_webView;
    UIView *_accessoryView;
    QLPreviewConverter *_previewConverter;
    NSURLRequest *_previewRequest;
    unsigned int _isLoadedDuringZoom:1;
    unsigned int _isHTMLContent:1;
    unsigned int _isXMLContent:1;
    unsigned int _isPDFContent:1;
    unsigned int _isSpreadsheetContent:1;
    unsigned int _isPlainText:1;
    unsigned int _isRTFContent:1;
    unsigned int _isCSVContent:1;
    unsigned int _loadStarted:1;
    double _defaultZoom;
    double _navigationBarVerticalOffset;
    QLScrubView *_scrubView;
    long long _lastPage;
    _Bool _inScroll;
    _Bool _webViewReadyForThumbnailing;
    NSMutableArray *_htmlSlideNodes;
    NSData *_pdfPreviewData;
    QLPDFHanderDelegateForwarder *_forwarder;
}

- (id)gestureRecognizersForFullScreenDisplay;
- (id)printPageHelper;
- (id)pdfPreviewData;
- (void)userInteractedWithScrubView:(id)arg1;
- (void)scrubView:(id)arg1 didSelectPageAtIndex:(unsigned long long)arg2;
- (struct CGSize)scrubView:(id)arg1 pageSizeAtIndex:(unsigned long long)arg2;
- (id)scrubView:(id)arg1 thumbnailOperationForPageAtIndex:(unsigned long long)arg2;
- (id)_htmlSlideNodes;
- (id)_htmlPageXPath;
- (long long)numberOfPagesInScrubView:(id)arg1;
- (void)scrollToPage:(unsigned long long)arg1;
- (unsigned long long)currentPageNumber;
- (struct CGSize)pageSizeAtIndex:(long long)arg1;
- (long long)pageCount;
- (void)_hideScrubberIfNeeded:(double)arg1;
- (void)_hideOverlayDidEnd:(id)arg1 finished:(id)arg2 context:(void *)arg3;
- (void)_showScrubberIfNeeded:(double)arg1;
- (id)_scrubView:(_Bool)arg1;
- (void)pdfViewHandlerCompletedLayoutAndIsUnlocked:(id)arg1;
- (struct CGPDFDocument *)_getCGPDFDocumentRef;
- (id)alertViewForUIWebPDFViewHandler:(id)arg1;
- (void)uiWebView:(id)arg1 decidePolicyForMIMEType:(id)arg2 request:(id)arg3 frame:(id)arg4 decisionListener:(id)arg5;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)uiWebView:(id)arg1 resource:(id)arg2 willSendRequest:(id)arg3 redirectResponse:(id)arg4 fromDataSource:(id)arg5;
- (void)scrollViewDidScroll:(id)arg1;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didFailLoadingWithError:(id)arg3 fromDataSource:(id)arg4;
- (void)uiWebView:(id)arg1 resource:(id)arg2 didFinishLoadingFromDataSource:(id)arg3;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)uiWebView:(id)arg1 didFirstLayoutInFrame:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_updateContentOffsetAnimated:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)loadWithHints:(id)arg1;
- (void)cancelLoad;
- (id)previewConverter;
- (id)_copyPreviewConverterForPreviewItem:(id)arg1;
- (struct CGPoint)originForPDFPageLabelViewWithHandler:(id)arg1 proposedOrigin:(struct CGPoint)arg2;
- (void)setOverlayHidden:(_Bool)arg1 duration:(double)arg2;
- (void)setNavigationBarVerticalOffset:(double)arg1;
- (_Bool)acceptControllerTouch:(id)arg1 fromGestureRecognizer:(id)arg2;
- (void)_tearDownWebView;
- (void)didReceiveMemoryWarning;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (int)airPlayMode;
- (id)_getWebView:(_Bool)arg1;
- (void)setPreviewItem:(id)arg1;
- (void)setPreviewMode:(int)arg1;
- (void)viewDidLoad;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface QLWordProcessorPrintPageRenderer : QLWebViewPrintPageHelper
{
    UIWebPaginationInfo *_paginationInfo;
}

- (id)pdfDataForPageAtIndex:(long long)arg1 printingDone:(_Bool *)arg2;
- (long long)numberOfPages;
- (id)_paginationInfo;
- (void)dealloc;

@end

@interface QLZipArchive : NSObject
{
    struct archive *_archive;
    NSURL *_url;
}

- (void)dealloc;
- (void)enumerateEntriesWithHandler:(CDUnknownBlockType)arg1;
- (id)readCurrentDataWithEntry:(struct archive_entry *)arg1 error:(id *)arg2;
- (_Bool)_reopenWithError:(id *)arg1;
- (id)initWithURL:(id)arg1 error:(id *)arg2;
- (id)libarchiveError;

@end

@interface QLZipArchiveEntry : NSObject
{
    struct archive_entry *_entry;
    QLZipArchive *_archive;
    NSData *_data;
    NSError *_error;
    NSURL *_url;
}

@property NSData *data; // @synthesize data=_data;
@property(nonatomic) NSURL *url; // @synthesize url=_url;
@property QLZipArchive *archive; // @synthesize archive=_archive;
@property struct archive_entry *entry; // @synthesize entry=_entry;
- (void)dealloc;
- (id)readDataWithError:(id *)arg1;

@end

