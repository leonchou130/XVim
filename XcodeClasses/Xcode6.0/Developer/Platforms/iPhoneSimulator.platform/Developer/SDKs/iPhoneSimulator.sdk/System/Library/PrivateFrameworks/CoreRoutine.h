//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CoreRoutine.framework/CoreRoutine
// UUID: 06FE679E-CE2B-36D6-8FF8-DD7468607323
//
//                           Arch: x86_64
//                Current version: 236.2.0
//          Compatibility version: 1.0.0
//                 Source version: 236.2.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol GEOMapItem <NSObject>
@property(readonly, nonatomic) _Bool isEventAllDay;
@property(readonly, nonatomic) NSDate *eventDate;
@property(readonly, nonatomic) NSString *eventName;
@property(readonly, nonatomic) _Bool contactIsMe;
@property(readonly, nonatomic) NSString *contactSpokenName;
@property(readonly, nonatomic) NSString *contactName;
@property(readonly, nonatomic) int contactAddressType;
@property(readonly, nonatomic) NSString *timezone;
@property(readonly, nonatomic) NSArray *areasOfInterest;
@property(readonly, nonatomic) NSDictionary *addressDictionary;
@property(readonly, nonatomic) GEOAddress *geoAddress;
@property(readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property(readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property(readonly, nonatomic) CDStruct_c3b9c2ee centerCoordinate;
@property(readonly, nonatomic) CDStruct_c3b9c2ee coordinate;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, nonatomic, getter=isDisputed) _Bool disputed;
@property(readonly, nonatomic) NSData *encodedData;
@property(readonly, nonatomic) NSString *name;
- (NSString *)spokenNameForLocale:(NSString *)arg1;
@end

@protocol GEOMapItemPrivate <GEOMapItem>
@property(readonly, nonatomic, getter=_additionalPlaceInfos) NSArray *additionalPlaceInfos;
@property(readonly, nonatomic, getter=_customIconID) unsigned long long customIconID;
@property(readonly, nonatomic, getter=_styleAttributes) GEOFeatureStyleAttributes *styleAttributes;
@property(readonly, nonatomic, getter=_poiSurveyURLString) NSString *poiSurveyURLString;
@property(readonly, nonatomic, getter=_reviewsAttribution) GEOMapItemReviewsAttribution *reviewsAttribution;
@property(readonly, nonatomic, getter=_photosAttribution) GEOMapItemPhotosAttribution *photosAttribution;
@property(readonly, nonatomic, getter=_attribution) GEOMapItemPlaceAttribution *attribution;
@property(readonly, copy, nonatomic, getter=_vendorID) NSString *vendorID;
@property(readonly, copy, nonatomic, getter=_providerURL) NSURL *providerURL;
@property(readonly, copy, nonatomic, getter=_webURL) NSURL *webURL;
@property(readonly, nonatomic, getter=_needsAttribution) _Bool needsAttribution;
@property(readonly, nonatomic, getter=_openState) unsigned int openState;
@property(readonly, nonatomic, getter=_disambiguationName) NSString *disambiguationName;
@property(readonly, nonatomic, getter=_telephone) NSString *telephone;
@property(readonly, nonatomic, getter=_hasTelephone) _Bool hasTelephone;
@property(readonly, nonatomic, getter=_operatingHours) NSArray *operatingHours;
@property(readonly, nonatomic, getter=_hasCurrentOperatingHours) _Bool hasCurrentOperatingHours;
@property(readonly, nonatomic, getter=_hasOperatingHours) _Bool hasOperatingHours;
@property(readonly, nonatomic, getter=_takesReservations) _Bool takesReservations;
@property(readonly, nonatomic, getter=_hasTakesReservationsAmenity) _Bool hasTakesReservationsAmenity;
@property(readonly, nonatomic, getter=_goodForKids) _Bool goodForKids;
@property(readonly, nonatomic, getter=_hasGoodForKidsAmenity) _Bool hasGoodForKidsAmenity;
@property(readonly, nonatomic, getter=_hasDelivery) _Bool hasDelivery;
@property(readonly, nonatomic, getter=_hasDeliveryAmenity) _Bool hasDeliveryAmenity;
@property(readonly, nonatomic, getter=_hasAnyAmenities) _Bool hasAnyAmenities;
@property(readonly, nonatomic, getter=_priceRange) unsigned int priceRange;
@property(readonly, nonatomic, getter=_hasPriceRange) _Bool hasPriceRange;
@property(readonly, nonatomic, getter=_normalizedUserRatingScore) float normalizedUserRatingScore;
@property(readonly, nonatomic, getter=_sampleSizeForUserRatingScore) unsigned int sampleSizeForUserRatingScore;
@property(readonly, nonatomic, getter=_hasUserRatingScore) _Bool hasUserRatingScore;
@property(readonly, nonatomic, getter=_businessURL) NSString *businessURL;
@property(readonly, nonatomic, getter=_areaInMeters) double areaInMeters;
@property(readonly, nonatomic, getter=_hasAreaInMeters) _Bool hasAreaInMeters;
@property(readonly, nonatomic, getter=_muid) unsigned long long muid;
@property(readonly, nonatomic, getter=_hasMUID) _Bool hasMUID;
@property(readonly, nonatomic, getter=_flyoverAnnouncementMessage) NSString *flyoverAnnouncement;
@property(readonly, nonatomic, getter=_hasFlyoverAnnouncementMessage) _Bool hasFlyoverAnnouncement;
@property(readonly, nonatomic, getter=_flyover) GEOPDFlyover *flyover;
@property(readonly, nonatomic, getter=_hasFlyover) _Bool hasFlyover;
@property(readonly, nonatomic, getter=_resultProviderID) int resultProviderID;
@property(readonly, nonatomic, getter=_hasResultProviderID) _Bool hasResultProviderID;
@property(readonly, nonatomic, getter=_sequenceNumber) unsigned int sequenceNumber;
@property(readonly, nonatomic, getter=_sessionGUID) CDStruct_4bcfbbae sessionGUID;
@property(readonly, nonatomic, getter=_hasSessionGUID) _Bool hasSessionGUID;
@property(readonly, nonatomic, getter=_roadAccessPoints) NSArray *roadAccessPoints;
@property(readonly, nonatomic, getter=_placeType) int placeType;
@property(readonly, nonatomic, getter=_hasResolvablePartialInformation) _Bool hasResolvablePartialInformation;
@property(readonly, nonatomic, getter=_placeDataAsData) NSData *placeDataAsData;
@property(readonly, nonatomic, getter=_placeAsData) NSData *placeAsData;
@property(readonly, nonatomic, getter=_clientAttributes) GEOMapItemClientAttributes *clientAttributes;
@property(readonly, nonatomic, getter=_placeData) GEOPDPlace *placeData;
@property(readonly, nonatomic, getter=_place) GEOPlace *place;
- (id <GEOMapItemPrivate>)_mapItemByStrippingOptionalData;
- (NSURL *)_urlForWritingAReview;
- (NSURL *)_urlForReviewWithUID:(NSString *)arg1;
- (NSURL *)_urlForPhotoWithUID:(NSString *)arg1;
- (_Bool)_hasLocalizedCategoryNamesForType:(unsigned int)arg1;
- (NSArray *)_localizedCategoryNamesForType:(unsigned int)arg1;
- (GEOMapRegion *)_arrivalMapRegionForTransportType:(int)arg1;
- (unsigned int)_travelDistanceForTransportType:(int)arg1;
- (unsigned int)_travelTimeForTransportType:(int)arg1;
- (int)_recommendedTransportType;
- (NSString *)_spokenAddressForLocale:(NSString *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol RTDaemonProtocol <NSObject>
- (void)fetchPathToDiagnosticFilesWithReply:(void (^)(NSString *, NSError *))arg1;
- (void)stopMonitoringVisits;
- (void)startMonitoringVisits;
- (void)fetchPredictedLocationsOfInterestOnDate:(NSDate *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;
- (void)fetchLocationsOfInterestAssociatedToIdentifier:(NSString *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;
- (void)fetchRoutineModeFromLocation:(CLLocation *)arg1 withReply:(void (^)(long long, NSError *))arg2;
- (void)fetchPredictedConditionsForAction:(RTAction *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;
- (void)clearRoutine;
- (void)setRoutineEnabled:(_Bool)arg1;
- (void)fetchBBPluginSupportedWithReply:(void (^)(_Bool))arg1;
- (void)fetchRoutineEnabledWithReply:(void (^)(_Bool))arg1;
- (void)fetchPredictedLocationsOfInterestFromStartingLocationOfInterest:(RTLocationOfInterest *)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;
- (void)fetchNextPredictedLocationsOfInterestFromLocation:(CLLocation *)arg1 startDate:(NSDate *)arg2 timeInterval:(double)arg3 withReply:(void (^)(NSArray *, NSError *))arg4;
- (void)fetchAllLocationsOfInterestWithReply:(void (^)(NSArray *, NSError *))arg1;
- (void)fetchLocationsOfInterestOfType:(long long)arg1 withReply:(void (^)(NSArray *, NSError *))arg2;
- (void)fetchLocationsOfInterestWithinDistance:(double)arg1 ofLocation:(CLLocation *)arg2 withReply:(void (^)(NSArray *, NSError *))arg3;
@end

@protocol RTFrameworkProtocol <NSObject>
- (void)onVisit:(CLVisit *)arg1 withError:(NSError *)arg2;
@end

@interface GEODirectionsRouteRequest (RTExtras)
- (void)fetchDirectionsWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithZilch:(id)arg1 departure:(double)arg2;
- (id)initWithOrigin:(id)arg1 andDestination:(id)arg2 departure:(double)arg3;
- (id)initWithDeparture:(double)arg1;
@end

@interface GEOLocation (RTExtras)
- (id)initWithCoreLocation:(id)arg1;
@end

@interface GEOMapItemClientAttributes (RTExtensions)
- (id)initWithLOIType:(long long)arg1 event:(id)arg2;
@end

@interface GEOMapItemRoutineAttributes (RTExtensions)
- (id)initWithLOIType:(long long)arg1 event:(id)arg2;
@end

@interface GEOMapRegion (RTExtras)
- (_Bool)containsLocationWithAccuracy:(id)arg1;
@end

@interface GEOQuickETARequest (RTExtras)
- (id)initWithOrigin:(id)arg1 destinationPLOI:(id)arg2;
@end

@interface GEOQuickETARequester (RTExtras)
- (void)calculateETALocalizedDescriptionFromOrigin:(id)arg1 toPLOI:(id)arg2 handler:(CDUnknownBlockType)arg3;
@end

@interface NSBundle (RTExtras)
+ (id)_coreroutine_LocalizedStringForKey:(id)arg1;
+ (id)_coreroutineBundle;
@end

@interface NSDate (RTExtras)
- (id)__coreroutine_roundedUpDate;
@end

@interface RTAction : NSObject <NSSecureCoding>
{
    long long _type;
    NSDictionary *_options;
}

+ (_Bool)supportsSecureCoding;
+ (id)actionTypeToString:(long long)arg1;
@property(readonly, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithType:(long long)arg1 andOptions:(id)arg2;

@end

@interface RTActionCondition : NSObject <NSSecureCoding>
{
    RTLocationOfInterest *_locationOfInterest;
    long long _locationOfInterestState;
    NSDate *_date;
    NSString *_depiction;
}

+ (_Bool)supportsSecureCoding;
+ (id)locationOfInterestStateToString:(long long)arg1;
@property(readonly, nonatomic) NSString *depiction; // @synthesize depiction=_depiction;
@property(readonly, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic) long long locationOfInterestState; // @synthesize locationOfInterestState=_locationOfInterestState;
@property(readonly, nonatomic) RTLocationOfInterest *locationOfInterest; // @synthesize locationOfInterest=_locationOfInterest;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLoi:(id)arg1 loiState:(long long)arg2 date:(id)arg3 depiction:(id)arg4;

@end

@interface RTBatchGeocoder : NSObject
{
    NSMutableArray *_batchSliceGeocoders;
}

- (void).cxx_destruct;
- (void)cancel;
- (void)geocodeLocations:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;

@end

@interface RTGeocoder : NSObject
{
    id <GEOMapServiceTicket> _ticket;
}

@property(retain, nonatomic) id <GEOMapServiceTicket> ticket; // @synthesize ticket=_ticket;
- (void).cxx_destruct;
- (void)dealloc;
- (void)_cancelTicket:(id)arg1;
- (id)geocodeAddressDictionary:(id)arg1;
- (void)geocodeAddressDictionary:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (id)geocodeLatitude:(double)arg1 longitude:(double)arg2;
- (void)geocodeLatitude:(double)arg1 longitude:(double)arg2 handler:(CDUnknownBlockType)arg3;

@end

__attribute__((visibility("hidden")))
@interface RTLOIDisplayInfo : NSObject
{
    int _style;
    long long _type;
    long long _modeOfTransportation;
    id <GEOMapItem> _geoMapItem;
    NSString *_unknownTypeName;
    double _eta;
    NSDate *_arrival;
    NSDate *_deparature;
}

@property(readonly, nonatomic) NSDate *deparature; // @synthesize deparature=_deparature;
@property(readonly, nonatomic) NSDate *arrival; // @synthesize arrival=_arrival;
@property(readonly, nonatomic) double eta; // @synthesize eta=_eta;
@property(readonly, nonatomic) NSString *unknownTypeName; // @synthesize unknownTypeName=_unknownTypeName;
@property(readonly, nonatomic) id <GEOMapItem> geoMapItem; // @synthesize geoMapItem=_geoMapItem;
@property(readonly, nonatomic) long long modeOfTransportation; // @synthesize modeOfTransportation=_modeOfTransportation;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) int style; // @synthesize style=_style;
- (void).cxx_destruct;
- (id)mapsURL;
- (id)localizedDescription;
- (_Bool)isEquivalentToDisplayInfo:(id)arg1;
- (id)description;
- (id)initWithStyle:(int)arg1 type:(long long)arg2 geoMapItem:(id)arg3 unknownTypeName:(id)arg4 eta:(double)arg5 arrival:(id)arg6 departure:(id)arg7 modeOfTransportation:(long long)arg8;

@end

@interface RTLocationOfInterest : NSObject <NSCopying, NSSecureCoding>
{
    double _latitude;
    double _longitude;
    double _uncertainty;
    double _confidence;
    NSUUID *_identifier;
    long long _type;
    id <GEOMapItem> _geoMapItem;
    NSArray *_visits;
}

+ (_Bool)supportsSecureCoding;
+ (id)locationOfInterestTypeToString:(long long)arg1;
@property(readonly, nonatomic) NSArray *visits; // @synthesize visits=_visits;
@property(readonly, nonatomic) id <GEOMapItem> geoMapItem; // @synthesize geoMapItem=_geoMapItem;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSUUID *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) double confidence; // @synthesize confidence=_confidence;
@property(readonly, nonatomic) double uncertainty; // @synthesize uncertainty=_uncertainty;
@property(readonly, nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(readonly, nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
- (id)mapItem;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 uncertainty:(double)arg3 confidence:(double)arg4 identifier:(id)arg5 type:(long long)arg6 geoMapItem:(id)arg7 visits:(id)arg8;
- (long long)frequencyCompare:(id)arg1;
- (long long)recentCompare:(id)arg1;
- (id)localizedAllVisitsDescription;
- (id)localizedLastVisitDescription;
- (id)relativeNameToMapItem:(id)arg1;
- (id)preciseName;
- (id)name;

@end

@interface RTLocationOfInterestVisit : NSObject <NSCopying, NSSecureCoding>
{
    NSDate *_entryTime;
    NSDate *_exitTime;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSDate *exitTime; // @synthesize exitTime=_exitTime;
@property(readonly, nonatomic) NSDate *entryTime; // @synthesize entryTime=_entryTime;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEntryTime:(id)arg1 exitTime:(id)arg2;
- (id)localizedDateDetail;
- (id)localizedTimeDetail;
- (id)localizedDescription;
- (_Bool)_enteredAndExitedOnSameDay;

@end

__attribute__((visibility("hidden")))
@interface RTPLOIETA : NSObject
{
    RTPredictedLocationOfInterest *_ploi;
    id <GEOMapItem> _origin;
    unsigned int _responseETASeconds;
    unsigned int _baselineETASeconds;
    RTLOIDisplayInfo *_displayInfo;
}

@property(readonly, nonatomic) RTPredictedLocationOfInterest *ploi; // @synthesize ploi=_ploi;
- (void).cxx_destruct;
- (_Bool)hasEquivalentDisplayTo:(id)arg1;
- (_Bool)etaExceedsMinimumETA:(unsigned int)arg1;
- (id)mapsURL;
- (id)localizedDescription;
- (id)displayInfo;
- (id)_displayInfoForDate:(id)arg1;
- (id)_urlName;
- (id)_preferredName;
- (id)description;
- (id)initWithPLOI:(id)arg1 origin:(id)arg2 responseETASeconds:(unsigned int)arg3 baselineETASeconds:(unsigned int)arg4;

@end

@interface RTPredictedLocationOfInterest : NSObject <NSSecureCoding>
{
    RTLocationOfInterest *_locationOfInterest;
    double _confidence;
    NSDate *_nextEntryTime;
    RTRoute *_route;
    long long _modeOfTransportation;
    RTSource *_source;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) RTSource *source; // @synthesize source=_source;
@property(nonatomic) long long modeOfTransportation; // @synthesize modeOfTransportation=_modeOfTransportation;
@property(readonly, nonatomic) RTRoute *route; // @synthesize route=_route;
@property(readonly, nonatomic) NSDate *nextEntryTime; // @synthesize nextEntryTime=_nextEntryTime;
@property(readonly, nonatomic) double confidence; // @synthesize confidence=_confidence;
@property(readonly, nonatomic) RTLocationOfInterest *locationOfInterest; // @synthesize locationOfInterest=_locationOfInterest;
- (void).cxx_destruct;
- (id)description;
- (void)setConfidence:(double)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithLocationOfInterest:(id)arg1 confidence:(double)arg2 nextEntryTime:(id)arg3 route:(id)arg4 modeOfTransportation:(long long)arg5 source:(id)arg6;

@end

@interface RTRoute : NSObject <NSSecureCoding>
{
    NSArray *_waypoints;
    NSData *_zilchPoints;
    NSUUID *_uuid;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSUUID *uuid; // @synthesize uuid=_uuid;
@property(readonly, nonatomic) NSData *zilchPoints; // @synthesize zilchPoints=_zilchPoints;
@property(readonly, nonatomic) NSArray *waypoints; // @synthesize waypoints=_waypoints;
- (void).cxx_destruct;
- (void)updateWithNewZilchPoints:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithWaypoints:(id)arg1 andZilchPoints:(id)arg2;

@end

@interface RTRoutineManager : NSObject <RTFrameworkProtocol>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSXPCConnection *_xpcConnection;
    CDUnknownBlockType _visitHandler;
}

+ (id)modeOfTransportationToString:(long long)arg1;
+ (id)routineModeToString:(long long)arg1;
+ (id)defaultManager;
@property(copy, nonatomic) CDUnknownBlockType visitHandler; // @synthesize visitHandler=_visitHandler;
@property(retain, nonatomic) NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)fetchPathToDiagnosticFilesWithHandler:(CDUnknownBlockType)arg1;
- (void)onVisit:(id)arg1 withError:(id)arg2;
- (void)stopMonitoringVisits;
- (void)startMonitoringVisitsWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchPredictedLocationsOfInterestOnDate:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchLocationsOfInterestAssociatedToIdentifier:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchRoutineModeFromLocation:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchPredictedConditionsForAction:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)clearRoutine;
- (void)setRoutineEnabled:(_Bool)arg1;
- (void)fetchBBPluginSupportedWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchRoutineEnabledWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchPredictedLocationsOfInterestFromStartingLocationOfInterest:(id)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchNextPredictedLocationsOfInterestFromLocation:(id)arg1 startDate:(id)arg2 timeInterval:(double)arg3 withHandler:(CDUnknownBlockType)arg4;
- (void)fetchNextPredictedLocationsOfInterestWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchAllLocationsOfInterestWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchLocationsOfInterestOfType:(long long)arg1 withHandler:(CDUnknownBlockType)arg2;
- (void)fetchLocationsOfInterestWithinDistance:(double)arg1 ofLocation:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)handleDaemonStart;
- (void)createConnection;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface RTRoutineManagerExportedObject : NSObject <RTFrameworkProtocol>
{
    RTRoutineManager *_routineManager;
}

@property(nonatomic) __weak RTRoutineManager *routineManager; // @synthesize routineManager=_routineManager;
- (void).cxx_destruct;
- (void)onVisit:(id)arg1 withError:(id)arg2;
- (id)initWithRoutineManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RTSource : NSObject <NSSecureCoding>
{
}

+ (_Bool)supportsSecureCoding;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface RTSourceCoreRoutine : RTSource
{
}

+ (_Bool)supportsSecureCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface RTSourceEventKit : RTSource
{
    NSString *_eventIdentifier;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, retain, nonatomic) NSString *eventIdentifier; // @synthesize eventIdentifier=_eventIdentifier;
- (void).cxx_destruct;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEventIdentifier:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface _RTBatchSliceGeocoder : NSObject
{
    id <GEOMapServiceTicket> _ticket;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSArray *_geoMapItems;
    struct _NSRange _range;
}

@property(retain, nonatomic) NSArray *geoMapItems; // @synthesize geoMapItems=_geoMapItems;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore; // @synthesize semaphore=_semaphore;
@property(nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(retain, nonatomic) id <GEOMapServiceTicket> ticket; // @synthesize ticket=_ticket;
- (void).cxx_destruct;
- (void)cancel;
- (void)dealloc;
- (void)_cancelTicket:(id)arg1;
- (void)geocodeLocations:(id)arg1;
- (id)init;

@end

