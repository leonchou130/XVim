//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _FZChatRoomValidity {
    int _field1;
    unsigned short _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
// UUID: 45BE37E2-80AD-335A-87C9-175FCDF8649A
//
//                           Arch: x86_64
//                Current version: 800.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1323.3.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol IDSAccountControllerDelegate <NSObject>

@optional
- (void)accountController:(IDSAccountController *)arg1 accountDisabled:(IDSAccount *)arg2;
- (void)accountController:(IDSAccountController *)arg1 accountEnabled:(IDSAccount *)arg2;
- (void)accountController:(IDSAccountController *)arg1 accountRemoved:(IDSAccount *)arg2;
- (void)accountController:(IDSAccountController *)arg1 accountUpdated:(IDSAccount *)arg2;
- (void)accountController:(IDSAccountController *)arg1 accountAdded:(IDSAccount *)arg2;
@end

@protocol IDSAccountRegistrationDelegate <NSObject>

@optional
- (void)activeDevicesUpdatedForAccount:(NSString *)arg1;
- (void)refreshRegistrationForAccount:(NSString *)arg1;
- (void)account:(NSString *)arg1 displayNameChanged:(NSString *)arg2;
- (void)account:(NSString *)arg1 loginChanged:(NSString *)arg2;
- (void)account:(NSString *)arg1 profileChanged:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 vettedAliasesChanged:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 aliasesChanged:(NSDictionary *)arg2;
- (void)account:(NSString *)arg1 registrationStatusInfoChanged:(NSDictionary *)arg2;
@end

@protocol IMConnectionMonitorDelegate
- (void)connectionMonitorDidUpdate:(IMConnectionMonitor *)arg1;
@end

@protocol IMFileCopierDelegate
- (void)fileCopierDidFinish:(IMFileCopier *)arg1;
- (void)fileCopierDidStart:(IMFileCopier *)arg1;
@end

@protocol IMServiceSessionProtocol

@optional
- (void)validateProfile;
- (void)unvalidateAliases:(NSArray *)arg1;
- (void)validateAliases:(NSArray *)arg1;
- (void)removeAliases:(NSArray *)arg1;
- (void)addAliases:(NSArray *)arg1;
- (void)relay:(NSString *)arg1 sendCancel:(NSDictionary *)arg2 toPerson:(NSString *)arg3;
- (void)relay:(NSString *)arg1 sendUpdate:(NSDictionary *)arg2 toPerson:(NSString *)arg3;
- (void)relay:(NSString *)arg1 sendInitateRequest:(NSDictionary *)arg2 toPerson:(NSString *)arg3;
- (void)sendAVMessageToPerson:(NSString *)arg1 sessionID:(unsigned int)arg2 type:(unsigned int)arg3 userInfo:(NSDictionary *)arg4 conference:(NSString *)arg5;
- (void)sendVCUpdate:(NSData *)arg1 toPerson:(NSString *)arg2 conference:(NSString *)arg3;
- (void)sendCounterProposalToPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3;
- (void)cancelVCRequestWithPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3;
- (void)respondToVCInvitationWithPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3;
- (void)requestVCWithPerson:(NSString *)arg1 properties:(NSDictionary *)arg2 conference:(NSString *)arg3;
- (void)sendCommand:(NSNumber *)arg1 withProperties:(NSDictionary *)arg2 toPerson:(NSString *)arg3;
- (void)sendFileTransfer:(IMFileTransfer *)arg1 toPerson:(NSString *)arg2;
- (void)passwordUpdated;
- (void)setBlockIdleStatus:(_Bool)arg1;
- (void)setBlockList:(NSArray *)arg1;
- (void)setAllowList:(NSArray *)arg1;
- (void)setBlockingMode:(unsigned int)arg1;
- (void)setProperties:(NSDictionary *)arg1 ofParticipant:(NSString *)arg2 inChatID:(NSString *)arg3 identifier:(NSString *)arg4 style:(unsigned char)arg5;
- (void)noteMessagesMarkedAsReadForChatWithGUID:(NSString *)arg1;
- (void)sendSavedReceiptForMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4;
- (void)sendPlayedReceiptForMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4;
- (void)sendReadReceiptForMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4;
- (void)sendMessage:(IMMessageItem *)arg1 toChatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4;
- (void)updateDisplayName:(NSString *)arg1 fromDisplayName:(NSString *)arg2 forChatID:(NSString *)arg3 identifier:(NSString *)arg4 style:(unsigned char)arg5;
- (void)declineInvitationToChatID:(NSString *)arg1 identifier:(NSString *)arg2 style:(unsigned char)arg3;
- (void)removePersonInfo:(NSDictionary *)arg1 chatID:(NSString *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4;
- (void)invitePersonInfo:(NSDictionary *)arg1 withMessage:(IMMessageItem *)arg2 toChatID:(NSString *)arg3 identifier:(NSString *)arg4 style:(unsigned char)arg5;
- (void)removeChatID:(NSString *)arg1 identifier:(NSString *)arg2 style:(unsigned char)arg3;
- (void)leaveChatID:(NSString *)arg1 identifier:(NSString *)arg2 style:(unsigned char)arg3;
- (void)joinChatID:(NSString *)arg1 handleInfo:(NSDictionary *)arg2 identifier:(NSString *)arg3 style:(unsigned char)arg4 joinProperties:(NSDictionary *)arg5;
- (void)updateAuthorizationCredentials:(NSString *)arg1 token:(NSString *)arg2;
- (void)setValue:(id)arg1 ofProperty:(NSString *)arg2 ofPerson:(NSString *)arg3;
- (void)requestProperty:(NSString *)arg1 ofPerson:(NSString *)arg2;
- (void)stopWatchingBuddy:(NSString *)arg1;
- (void)startWatchingBuddy:(NSString *)arg1;
- (void)requestSubscriptionTo:(NSString *)arg1;
- (void)acceptSubscriptionRequest:(_Bool)arg1 from:(NSString *)arg2;
- (void)renameGroup:(NSString *)arg1 to:(NSString *)arg2;
- (void)changeGroup:(NSString *)arg1 changes:(NSDictionary *)arg2;
- (void)changeGroups:(NSDictionary *)arg1;
- (void)requestGroups;
- (void)unregisterAccount;
- (void)registerAccount;
- (void)authenticateAccount;
- (void)resumeBuddyUpdates;
- (void)holdBuddyUpdates;
- (void)logout;
- (void)login;
- (void)autoReconnect;
- (void)autoLogin;
@end

@protocol IMSystemMonitorListener

@optional
- (void)systemDidEnterDataProtectionLock;
- (void)systemDidLeaveDataProtectionLock;
- (void)systemDidLeaveFirstDataProtectionLock;
- (void)systemScreenDidPowerDown;
- (void)systemScreenDidPowerUp;
- (void)systemDidUnlock;
- (void)systemDidLock;
- (void)systemDidLogout;
- (void)systemDidFastUserSwitchIn;
- (void)systemDidFastUserSwitchOut;
- (void)systemRestoreStateDidChange;
- (void)systemDidFinishMigration;
- (void)systemDidStopBackup;
- (void)systemDidStartBackup;
- (void)notificationCenterDidDisappear;
- (void)notificationCenterWillAppear;
- (void)systemApplicationDidResumeForEventsOnly;
- (void)systemApplicationDidSuspendForEventsOnly;
- (void)systemApplicationDidResume;
- (void)systemApplicationDidSuspend;
- (void)systemApplicationWillResignActive;
- (void)systemApplicationDidBecomeActive;
- (void)systemApplicationWillEnterForeground;
- (void)systemApplicationDidEnterBackground;
- (void)systemWillShutdown;
- (void)systemDidLeaveMemoryPressure;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidWake;
- (void)systemWillSleep;
- (void)screenUnlocked;
- (void)screenLocked;
- (void)screenSaverDidStop;
- (void)screenSaverDidStart;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface IMDAccount : NSObject <IMSystemMonitorListener>
{
    NSMutableDictionary *_accountDefaults;
    NSString *_account;
    IMDService *_service;
    IMDServiceSession *_session;
    NSMutableDictionary *_myStatus;
    NSDictionary *_lastPostedStatus;
    _Bool _isLoading;
    _Bool _isManaged;
}

@property(readonly, retain, nonatomic) NSDictionary *accountDefaults; // @synthesize accountDefaults=_accountDefaults;
@property(nonatomic) _Bool isManaged; // @synthesize isManaged=_isManaged;
@property(readonly, retain, nonatomic) IMDService *service; // @synthesize service=_service;
@property(readonly, retain, nonatomic) IMDServiceSession *session; // @synthesize session=_session;
@property(readonly, retain, nonatomic) NSString *accountID; // @synthesize accountID=_account;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(readonly, retain, nonatomic) NSDictionary *registrationAlertInfo;
@property(readonly, nonatomic) int registrationError;
@property(readonly, nonatomic) int registrationStatus;
- (id)_registrationInfo;
@property(readonly, retain, nonatomic) NSString *loginID;
- (void)setRegistrationStatus:(int)arg1 error:(int)arg2 alertInfo:(id)arg3;
- (void)systemDidBecomeUnidle;
- (void)systemDidBecomeIdle;
- (void)_updateIdle;
- (void)tunesController:(id)arg1 playerInfoChanged:(id)arg2;
@property(readonly, nonatomic) _Bool shouldPublishNowPlaying;
@property(readonly, retain, nonatomic) NSDictionary *status;
@property(readonly, retain, nonatomic) NSDictionary *statusToSave;
@property(readonly, retain, nonatomic) NSDictionary *statusToPost;
- (void)changeStatus:(id)arg1;
- (void)releaseSession;
- (void)createSessionIfNecessary;
@property(readonly, retain, nonatomic) NSDictionary *accountInfoToPost;
- (void)postAccountCapabilitiesToListener:(id)arg1;
- (void)postAccountCapabilities;
- (void)writeAccountDefaults:(id)arg1;
@property(readonly, nonatomic) _Bool isDisabled;
@property(nonatomic) _Bool wasDisabledAutomatically;
@property(readonly, nonatomic) _Bool isActive;
- (void)dealloc;
- (id)initWithAccountID:(id)arg1 defaults:(id)arg2 service:(id)arg3;

@end

@interface IMDAccountController : NSObject
{
    NSMutableDictionary *_accounts;
    NSMutableDictionary *_activeAccounts;
    _Bool _isLoading;
    _Bool _isFirstLoad;
}

+ (id)sharedAccountController;
+ (id)sharedInstance;
@property(readonly, nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
- (void)_checkPowerAssertion;
- (id)anySessionForServiceName:(id)arg1;
- (id)sessionForAccount:(id)arg1;
@property(readonly, nonatomic) NSArray *activeSessions;
- (id)accountForIDSAccountUniqueID:(id)arg1;
- (id)connectingAccountsForService:(id)arg1;
@property(readonly, nonatomic) NSArray *connectingAccounts;
- (id)connectedAccountsForService:(id)arg1;
@property(readonly, nonatomic) NSArray *connectedAccounts;
- (id)activeAccountsForService:(id)arg1;
@property(readonly, nonatomic) NSArray *activeAccounts;
- (id)accountsForService:(id)arg1;
- (id)accountForAccountID:(id)arg1;
- (id)accountsForLoginID:(id)arg1 onService:(id)arg2;
@property(readonly, nonatomic) NSArray *accounts;
- (void)setupAccount:(id)arg1;
- (void)removeAccount:(id)arg1;
- (void)addAccount:(id)arg1;
- (_Bool)isAccountActive:(id)arg1;
- (_Bool)_isAccountActive:(id)arg1 forService:(id)arg2;
- (void)deactivateAccount:(id)arg1 force:(_Bool)arg2;
- (void)deactivateAccounts:(id)arg1;
- (void)deactivateAccount:(id)arg1;
- (void)deactivateAccounts:(id)arg1 force:(_Bool)arg2;
- (void)activateAccounts:(id)arg1;
- (void)activateAccount:(id)arg1;
- (void)save;
- (void)deferredSave;
- (void)load;
- (void)_daemonWillShutdown:(id)arg1;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) NSDictionary *loadOldStatusStore;
- (id)_superFormatFromAIML:(id)arg1;

@end

@interface IMDServiceSession : NSObject <IMSystemMonitorListener, IMConnectionMonitorDelegate, IMServiceSessionProtocol>
{
    NSRecursiveLock *_lock;
    IMDAccount *_account;
    NSString *_loginStatusMessage;
    NSMutableDictionary *_localProperties;
    NSMutableSet *_changedBuddies;
    NSMutableSet *_registeredChats;
    NSMutableDictionary *_groupChatIdentifierToChatRoomMap;
    NSMutableDictionary *_chatRoomToGroupChatIdentifierMap;
    NSMutableDictionary *_chatSuppressionFlagMap;
    NSMutableDictionary *_chatSuppressionTimerMap;
    NSMutableDictionary *_suppressedMessages;
    IMTimer *_messageRoutingTimer;
    IMTimer *_messageExpireStateTimer;
    NSTimer *_storageTimer;
    NSMutableSet *_messagesReceivedDuringStorage;
    IMConnectionMonitor *_connectionMonitor;
    NSTimer *_reconnectTimer;
    NSString *_loginID;
    NSString *_pwRequestID;
    IMSystemProxySettingsFetcher *_systemProxySettingsFetcher;
    int _buddyChangeLevel;
    unsigned int _loginStatus;
    int _disconnectReason;
    _Bool _activated;
    _Bool _saveKeychainPassword;
    _Bool _awaitingDataContext;
    _Bool _shouldReconnect;
    _Bool _badPass;
    IMDService *_service;
    NSMutableDictionary *_buddies;
    NSString *_proxyHost;
    NSString *_proxyAccount;
    NSString *_proxyPassword;
    NSString *_password;
    NSString *_serverHost;
    long long _proxyType;
    unsigned short _proxyPort;
    _Bool _useSSL;
    unsigned short _serverPort;
}

+ (id)_firewallUserNotificationForService:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) int serviceDisconnectReason; // @synthesize serviceDisconnectReason=_disconnectReason;
@property(readonly, nonatomic) unsigned int serviceLoginStatus; // @synthesize serviceLoginStatus=_loginStatus;
@property(readonly, retain, nonatomic) NSString *serviceLoginStatusMessage; // @synthesize serviceLoginStatusMessage=_loginStatusMessage;
@property(readonly, retain, nonatomic) IMDService *service; // @synthesize service=_service;
@property(readonly, retain, nonatomic) IMDAccount *account; // @synthesize account=_account;
@property(readonly, retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(readonly, nonatomic) _Bool useSSL; // @synthesize useSSL=_useSSL;
@property(readonly, retain, nonatomic) NSString *proxyPassword; // @synthesize proxyPassword=_proxyPassword;
@property(readonly, retain, nonatomic) NSString *proxyAccount; // @synthesize proxyAccount=_proxyAccount;
@property(readonly, nonatomic) unsigned short proxyPort; // @synthesize proxyPort=_proxyPort;
@property(readonly, retain, nonatomic) NSString *proxyHost; // @synthesize proxyHost=_proxyHost;
@property(readonly, nonatomic) long long proxyType; // @synthesize proxyType=_proxyType;
@property(readonly, nonatomic) unsigned short serverPort; // @synthesize serverPort=_serverPort;
@property(readonly, retain, nonatomic) NSString *serverHost; // @synthesize serverHost=_serverHost;
- (void)_clearDowngradeMarkersForChat:(id)arg1;
- (void)systemDidUnlock;
- (id)broadcasterForListenersWithCapabilities:(unsigned int)arg1;
- (id)broadcasterForVCConferenceListeners;
- (id)broadcasterForACConferenceListeners;
- (id)broadcasterForAVConferenceListeners;
- (id)broadcasterForChatObserverListeners;
- (id)broadcasterForChatListeners;
- (id)broadcaster;
- (void)refreshServiceCapabilities;
- (_Bool)equalID:(id)arg1 andID:(id)arg2;
- (id)canonicalFormOfChatRoom:(id)arg1;
- (id)canonicalFormOfID:(id)arg1;
- (void)_managedPrefsNotification:(id)arg1;
@property(readonly, nonatomic) _Bool allowedAsChild;
@property(readonly, nonatomic) _Bool networkConditionsAllowLogin;
@property(readonly, nonatomic) _Bool overrideNetworkAvailability;
- (void)_networkChanged:(id)arg1;
- (void)_callMonitorStateChanged:(id)arg1;
- (void)connectionMonitorDidUpdate:(id)arg1;
- (void)_processPotentialNetworkChange;
- (void)_setPendingConnectionMonitorUpdate;
- (void)_processConnectionMonitorUpdate;
- (void)_reconnectIfNecessary;
- (void)_updateConnectionMonitorFromAccountDefaultsIgnoringProxy:(_Bool)arg1;
- (void)updateConnectionMonitorWithLocalSocketAddress:(id)arg1 remoteSocketAddress:(id)arg2;
- (void)_updateConnectionMonitorWithRemoteHost:(id)arg1;
- (void)_clearConnectionMonitor;
- (void)sessionWillBecomeInactive;
- (void)sessionDidBecomeActive;
@property(readonly, retain, nonatomic) NSDictionary *accountDefaults;
@property(readonly, retain, nonatomic) NSString *displayName;
@property(readonly, retain, nonatomic) NSString *accountID;
@property(readonly, nonatomic) _Bool isActive;
@property(readonly, nonatomic) _Bool accountShouldBeAlwaysLoggedIn;
@property(readonly, nonatomic) _Bool accountNeedsPassword;
@property(readonly, nonatomic) _Bool accountNeedsLogin;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 service:(id)arg2;
- (void)noteLastItemFromStorage:(id)arg1;
- (void)noteItemFromStorage:(id)arg1;
- (void)noteSuppressedMessageUpdate:(id)arg1;
- (_Bool)isAwaitingStorageTimer;
- (void)_storageTimerFired;
- (void)_updateStorageTimerWithInterval:(double)arg1;
- (void)_expireStateTimerFired;
- (void)_updateExpireStateTimerWithInterval:(double)arg1;
- (void)_updateExpireStateForMessageGUID:(id)arg1;
- (void)_handleExpireStateDictionary:(id)arg1;
- (_Bool)canMakeExpireStateChecks;
- (void)_routingTimerFired;
- (void)_updateRoutingTimerWithInterval:(double)arg1;
- (void)_updateRoutingForMessageGUID:(id)arg1 chatGUID:(id)arg2 error:(unsigned int)arg3;
- (void)_handleRoutingWithDictionary:(id)arg1;
- (void)_markChatAsDowngraded:(id)arg1;
- (_Bool)canMakeDowngradeRoutingChecks;
- (void)didChangeMemberStatus:(int)arg1 forHandle:(id)arg2 fromHandle:(id)arg3 unformattedNumber:(id)arg4 countryCode:(id)arg5 forChat:(id)arg6 style:(unsigned char)arg7;
- (void)didChangeMemberStatus:(int)arg1 forHandle:(id)arg2 unformattedNumber:(id)arg3 countryCode:(id)arg4 forChat:(id)arg5 style:(unsigned char)arg6;
- (void)didChangeMemberStatus:(int)arg1 forHandle:(id)arg2 forChat:(id)arg3 style:(unsigned char)arg4;
- (void)updateDisplayName:(id)arg1 fromDisplayName:(id)arg2 forChatID:(id)arg3 identifier:(id)arg4 style:(unsigned char)arg5;
- (void)didUpdateChatStatus:(int)arg1 chat:(id)arg2 style:(unsigned char)arg3 displayName:(id)arg4 groupID:(id)arg5 handleInfo:(id)arg6;
- (void)didUpdateChatStatus:(int)arg1 chat:(id)arg2 style:(unsigned char)arg3 handleInfo:(id)arg4;
- (void)didUpdateChatStatus:(int)arg1 chat:(id)arg2 style:(unsigned char)arg3;
- (void)didReceiveInvitation:(id)arg1 forChat:(id)arg2 style:(unsigned char)arg3;
- (void)didReceiveMessage:(id)arg1 forChat:(id)arg2 style:(unsigned char)arg3;
- (void)didReceiveDisplayNameChange:(id)arg1 fromID:(id)arg2 forChat:(id)arg3 style:(unsigned char)arg4;
- (void)_setSuppressedMessage:(id)arg1 inChatWithGUID:(id)arg2;
- (void)_suppresionTimerFired:(id)arg1;
- (void)_endMessageSuppressionForChatGUID:(id)arg1;
- (void)endMessageSuppression;
- (void)noteMessagesMarkedAsReadForChatWithGUID:(id)arg1;
- (void)notifyDidSendMessageID:(id)arg1 shouldNotify:(_Bool)arg2;
- (void)notifyDidSendMessageID:(id)arg1;
- (void)didSendMessage:(id)arg1 forChat:(id)arg2 style:(unsigned char)arg3 forceDate:(id)arg4;
- (void)didSendMessage:(id)arg1 forChat:(id)arg2 style:(unsigned char)arg3;
- (void)didReceiveMessageSavedForMessageID:(id)arg1 ofType:(long long)arg2 forChat:(id)arg3 fromHandle:(id)arg4 fromMe:(_Bool)arg5 date:(id)arg6 useMessageSuppression:(_Bool)arg7 completionBlock:(CDUnknownBlockType)arg8;
- (void)didReceiveMessageSavedForMessageID:(id)arg1 ofType:(long long)arg2 forChat:(id)arg3 fromHandle:(id)arg4 fromMe:(_Bool)arg5 date:(id)arg6 completionBlock:(CDUnknownBlockType)arg7;
- (void)_didReceiveMessageSavedForMessageID:(id)arg1 ofType:(long long)arg2 forChat:(id)arg3 fromHandle:(id)arg4 fromMe:(_Bool)arg5 date:(id)arg6 attempts:(long long)arg7 useMessageSuppression:(_Bool)arg8 completionBlock:(CDUnknownBlockType)arg9;
- (void)didReceiveMessagePlayedReceiptForMessageID:(id)arg1 date:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_didReceiveMessagePlayedReceiptForMessageID:(id)arg1 date:(id)arg2 attempts:(long long)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)didReceiveMessagePlayedForMessageID:(id)arg1 date:(id)arg2 useMessageSuppression:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)didReceiveMessagePlayedForMessageID:(id)arg1 date:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_didReceiveMessagePlayedForMessageID:(id)arg1 date:(id)arg2 attempts:(long long)arg3 useMessageSuppression:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)didReceiveMessageReadReceiptForMessageID:(id)arg1 date:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_didReceiveMessageReadReceiptForMessageID:(id)arg1 date:(id)arg2 attempts:(long long)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)didReceiveMessageReadForMessageID:(id)arg1 date:(id)arg2 useMessageSuppression:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)didReceiveMessageReadForMessageID:(id)arg1 date:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_didReceiveMessageReadForMessageID:(id)arg1 date:(id)arg2 attempts:(long long)arg3 useMessageSuppression:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (_Bool)didReceiveMessageDeliveryReceiptForMessageID:(id)arg1 date:(id)arg2;
- (void)didSendMessageSavedReceiptForMessageID:(id)arg1;
- (void)didSendMessagePlayedReceiptForMessageID:(id)arg1;
- (void)didSendMessageReadReceiptForMessageID:(id)arg1;
- (void)didReceiveError:(unsigned int)arg1 forMessageID:(id)arg2 forceError:(_Bool)arg3;
- (void)didReceiveErrorMessage:(id)arg1 forChat:(id)arg2 style:(unsigned char)arg3;
- (void)didReceiveReplaceMessageID:(int)arg1 forChat:(id)arg2 style:(unsigned char)arg3;
- (void)didJoinChat:(id)arg1 style:(unsigned char)arg2 displayName:(id)arg3 groupID:(id)arg4 handleInfo:(id)arg5;
- (void)didJoinChat:(id)arg1 style:(unsigned char)arg2 handleInfo:(id)arg3;
- (void)didJoinChat:(id)arg1 style:(unsigned char)arg2;
- (void)didLeaveChat:(id)arg1 style:(unsigned char)arg2;
- (void)sendLocationSharingInfo:(id)arg1 toID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)leaveAllChats;
- (void)sendSavedReceiptForMessage:(id)arg1 toChatID:(id)arg2 identifier:(id)arg3 style:(unsigned char)arg4;
- (void)sendPlayedReceiptForMessage:(id)arg1 toChatID:(id)arg2 identifier:(id)arg3 style:(unsigned char)arg4;
- (void)sendReadReceiptForMessage:(id)arg1 toChatID:(id)arg2 identifier:(id)arg3 style:(unsigned char)arg4;
- (void)sendMessage:(id)arg1 toChat:(id)arg2 style:(unsigned char)arg3;
- (void)processMessageForSending:(id)arg1 toChat:(id)arg2 style:(unsigned char)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)chatForChatIdentifier:(id)arg1 style:(unsigned char)arg2;
- (void)_mapRoomChatToGroupChat:(id *)arg1 style:(unsigned char *)arg2;
- (void)canonicalizeChatIdentifier:(id *)arg1 style:(unsigned char *)arg2;
- (void)unregisterChat:(id)arg1 style:(unsigned char)arg2;
- (_Bool)isChatRegistered:(id)arg1 style:(unsigned char)arg2;
- (void)registerChat:(id)arg1 style:(unsigned char)arg2 displayName:(id)arg3 groupID:(id)arg4 handleInfo:(id)arg5;
- (void)registerChat:(id)arg1 style:(unsigned char)arg2 handleInfo:(id)arg3;
- (void)registerChat:(id)arg1 style:(unsigned char)arg2;
- (id)_newHashForChat:(id)arg1 style:(unsigned char)arg2;
- (id)chatRoomForGroupChatIdentifier:(id)arg1;
- (id)groupChatIdentifierForChatRoom:(id)arg1;
- (void)useChatRoom:(id)arg1 forGroupChatIdentifier:(id)arg2;
- (void)changeLocalProperty:(id)arg1 ofBuddy:(id)arg2 to:(id)arg3;
- (id)localPropertiesOfBuddy:(id)arg1;
- (void)clearLocalProperties;
- (id)localProperty:(id)arg1 ofBuddy:(id)arg2;
- (id)property:(id)arg1 ofBuddy:(id)arg2;
- (void)endBuddyChanges;
- (void)clearPropertiesOfBuddy:(id)arg1;
- (void)changeProperty:(id)arg1 ofBuddy:(id)arg2 to:(id)arg3;
- (void)beginBuddyChanges;
- (void)markBuddiesAsChanged:(id)arg1;
- (void)resumeBuddyUpdates;
- (void)holdBuddyUpdates;
@property(readonly, retain) NSDictionary *buddyProperties;
- (id)groups;
@property(readonly, retain, nonatomic) NSArray *allBuddies;
- (id)pictureKeyForBuddy:(id)arg1;
- (id)pictureOfBuddy:(id)arg1;
@property(readonly, retain, nonatomic) NSDictionary *buddyPictures;
- (void)setProperties:(id)arg1 ofParticipant:(id)arg2 inChatID:(id)arg3 identifier:(id)arg4 style:(unsigned char)arg5;
- (void)sendMessage:(id)arg1 toChatID:(id)arg2 identifier:(id)arg3 style:(unsigned char)arg4;
- (void)declineInvitationToChatID:(id)arg1 identifier:(id)arg2 style:(unsigned char)arg3;
- (void)invitePersonInfo:(id)arg1 withMessage:(id)arg2 toChatID:(id)arg3 identifier:(id)arg4 style:(unsigned char)arg5;
- (void)removeChatID:(id)arg1 identifier:(id)arg2 style:(unsigned char)arg3;
- (void)leaveChatID:(id)arg1 identifier:(id)arg2 style:(unsigned char)arg3;
- (void)joinChatID:(id)arg1 handleInfo:(id)arg2 identifier:(id)arg3 style:(unsigned char)arg4 joinProperties:(id)arg5;
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;
- (void)validateProfile;
- (void)unvalidateAliases:(id)arg1;
- (void)validateAliases:(id)arg1;
- (void)removeAliases:(id)arg1;
- (void)addAliases:(id)arg1;
- (void)sendCommand:(id)arg1 withProperties:(id)arg2 toPerson:(id)arg3;
- (void)relay:(id)arg1 sendCancel:(id)arg2 toPerson:(id)arg3;
- (void)relay:(id)arg1 sendUpdate:(id)arg2 toPerson:(id)arg3;
- (void)relay:(id)arg1 sendInitateRequest:(id)arg2 toPerson:(id)arg3;
- (void)sendAVMessageToPerson:(id)arg1 sessionID:(unsigned int)arg2 type:(unsigned int)arg3 userInfo:(id)arg4 conference:(id)arg5;
- (void)sendVCUpdate:(id)arg1 toPerson:(id)arg2 conference:(id)arg3;
- (void)sendCounterProposalToPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)cancelVCRequestWithPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)respondToVCInvitationWithPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (void)requestVCWithPerson:(id)arg1 properties:(id)arg2 conference:(id)arg3;
- (struct _FZChatRoomValidity)validityOfChatRoomName:(id)arg1;
- (void)sendFileTransfer:(id)arg1 toPerson:(id)arg2;
- (void)setProperties:(id)arg1 ofParticipant:(id)arg2 inChat:(id)arg3 style:(unsigned char)arg4;
- (void)declineInvitationToChat:(id)arg1 style:(unsigned char)arg2;
- (void)removePersonInfo:(id)arg1 chatID:(id)arg2 identifier:(id)arg3 style:(unsigned char)arg4;
- (void)invitePersonInfo:(id)arg1 withMessage:(id)arg2 toChat:(id)arg3 style:(unsigned char)arg4;
- (void)invitePerson:(id)arg1 withMessage:(id)arg2 toChat:(id)arg3 style:(unsigned char)arg4;
- (void)removeChat:(id)arg1 style:(unsigned char)arg2;
- (void)leaveChat:(id)arg1 style:(unsigned char)arg2;
- (void)joinChat:(id)arg1 handleInfo:(id)arg2 style:(unsigned char)arg3 joinProperties:(id)arg4;
- (void)joinChat:(id)arg1 style:(unsigned char)arg2 joinProperties:(id)arg3;
- (_Bool)shouldImitateGroupChatUsingChatRooms;
- (id)defaultChatSuffix;
- (void)setValue:(id)arg1 ofProperty:(id)arg2 ofPerson:(id)arg3;
- (void)requestProperty:(id)arg1 ofPerson:(id)arg2;
- (void)stopWatchingBuddy:(id)arg1;
- (void)startWatchingBuddy:(id)arg1;
- (void)requestSubscriptionTo:(id)arg1;
- (void)acceptSubscriptionRequest:(_Bool)arg1 from:(id)arg2;
- (void)renameGroup:(id)arg1 to:(id)arg2;
- (void)changeGroup:(id)arg1 changes:(id)arg2;
- (void)changeGroups:(id)arg1;
- (void)requestGroups;
- (void)setIdleTime:(unsigned int)arg1;
- (void)changeMyStatus:(id)arg1 changedKeys:(id)arg2;
- (_Bool)blockIdleStatus;
- (void)setBlockIdleStatus:(_Bool)arg1;
- (id)blockList;
- (void)setBlockList:(id)arg1;
- (id)allowList;
- (void)setAllowList:(id)arg1;
- (unsigned int)blockingMode;
- (void)setBlockingMode:(unsigned int)arg1;
- (unsigned long long)capabilities;
- (void)loginServiceSession;
- (void)passwordUpdated;
- (void)accountDefaultsChanged:(id)arg1;
- (void)_abandonSystemProxySettingsFetcher;
- (void)_abandonPWFetcher;
- (void)noteBadPassword;
- (id)loginID;
@property(readonly, retain, nonatomic) NSDictionary *registrationAlertInfo;
@property(readonly, nonatomic) int registrationError;
@property(readonly, nonatomic) int registrationStatus;
- (void)setRegistrationStatus:(int)arg1 error:(int)arg2 alertInfo:(id)arg3;
- (void)unregisterAccount;
- (void)registerAccount;
- (void)authenticateAccount;
- (id)server;
- (_Bool)hasCapability:(unsigned long long)arg1;
- (void)userNotificationDidFinish:(id)arg1;
- (void)_handleFirewallUserNotificationDidFinish:(id)arg1;
- (_Bool)warnIfPortBlocked:(int)arg1 forAction:(id)arg2;
- (void)_clearAutoReconnectTimer;
- (void)_autoReconnectTimer:(id)arg1;
- (void)_setAutoReconnectTimer;
- (void)setLoginStatus:(unsigned int)arg1 message:(id)arg2 reason:(int)arg3 properties:(id)arg4;
- (void)_forceSetLoginStatus:(unsigned int)arg1 message:(id)arg2 reason:(int)arg3 properties:(id)arg4;
- (void)setLoginStatus:(unsigned int)arg1 message:(id)arg2;
- (void)_wentOffline;
- (void)serviceSessionDidLogoutWithMessage:(id)arg1 reason:(int)arg2 properties:(id)arg3;
- (void)serviceSessionDidLogout;
- (void)serviceSessionDidLogin;
- (void)logout;
- (void)logoutServiceSession;
- (void)login;
- (void)autoLogin;
- (void)systemProxySettingsFetcher:(id)arg1 retrievedAccount:(id)arg2 password:(id)arg3;
- (void)systemProxySettingsFetcher:(id)arg1 retrievedHost:(id)arg2 port:(unsigned short)arg3 protocol:(long long)arg4;
- (void)_login_checkUsernameAndPassword;
- (void)_login_usernameAndPasswordReady;
- (void)_data_connection_ready;
- (void)_login_serverSettingsReady;
- (void)_doLoginIgnoringProxy:(_Bool)arg1;
- (void)autoReconnect;
- (void)disallowReconnection;

@end

@interface IMDAppleServiceSession : IMDServiceSession
{
    NSString *_serviceName;
    NSString *_GUID;
}

@property(readonly, retain, nonatomic) NSString *GUID; // @synthesize GUID=_GUID;
@property(readonly, nonatomic) NSString *serviceType;
@property(readonly, retain, nonatomic) NSString *callerID;
- (void)clearCallerID;
- (id)certForURI:(id)arg1;
@property(readonly, retain, nonatomic) NSString *callerURI;
- (long long)validationStatusForAlias:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *aliases;
@property(readonly, retain, nonatomic) NSArray *vettedAliases;
- (void)reIdentify;
- (void)reregister;
- (void)activeDevicesUpdated;
- (void)refreshRegistration;
- (void)validateProfile;
- (void)deactivateAndPurgeIdentify;
- (void)unvalidateAliases:(id)arg1;
- (void)validateAliases:(id)arg1;
- (void)addAliases:(id)arg1;
- (void)removeAliases:(id)arg1;
- (id)_aliases;
- (id)_aliasStrings;
- (long long)_validationStatusForAlias:(id)arg1;
- (void)updateAuthorizationCredentials:(id)arg1 token:(id)arg2;
- (void)passwordUpdated;
- (void)unregisterAccount;
- (void)registerAccount;
- (void)authenticateAccount;
- (void)logoutServiceSession;
- (void)loginServiceSession;
- (void)sessionWillBecomeInactive;
- (void)sessionDidBecomeActive;
- (void)_updateAccountStatusToUnregistered:(_Bool)arg1;
- (_Bool)_isDeviceRegistered;
@property(readonly, nonatomic) NSArray *registeredURIs;
@property(readonly, retain, nonatomic) IDSAccount *idsAccount;
- (void)dealloc;
- (id)initWithAccount:(id)arg1 service:(id)arg2;

@end

@interface IMDAttachmentStore : NSObject
{
}

+ (id)sharedInstance;
- (_Bool)deleteAttachmentWithGUID:(id)arg1;
- (_Bool)deleteAttachmentDataForTransfer:(id)arg1;
- (_Bool)deleteAttachmentsWithGUIDs:(id)arg1;
- (id)attachmentWithGUID:(id)arg1;
- (_Bool)updateAttachment:(id)arg1;
- (_Bool)removeAttachment:(id)arg1 fromMessageWithGUID:(id)arg2;
- (_Bool)storeAttachment:(id)arg1 associateWithMessageWithGUID:(id)arg2;

@end

@interface IMDChat : NSObject
{
    NSRecursiveLock *_lock;
    NSString *_accountID;
    NSString *_serviceName;
    NSDictionary *_properties;
    NSString *_chatIdentifier;
    NSString *_guid;
    NSString *_groupID;
    NSString *_roomName;
    NSString *_displayName;
    NSString *_lastAddressedLocalHandle;
    NSArray *_participants;
    IMMessageItem *_lastMessage;
    NSMutableDictionary *_chatInfo;
    long long _state;
    unsigned char _style;
    unsigned long long _unreadCount;
    long long _rowID;
    _Bool _isArchived;
}

- (void)updateDisplayName:(id)arg1;
- (void)updateLastAddressedHandle:(id)arg1;
- (void)updateGroupID:(id)arg1;
- (void)storeAndBroadcastChatChanges;
- (void)updateProperties:(id)arg1;
- (void)_updateLastMessage:(id)arg1;
@property(readonly, retain) NSDictionary *dictionaryRepresentation;
- (id)copyDictionaryRepresentation:(_Bool)arg1;
@property(readonly, retain) NSDictionary *chatProperties;
- (id)description;
@property(readonly, retain) IMDServiceSession *serviceSession;
@property(readonly, retain) IMDService *service;
@property(readonly, retain) IMDAccount *account;
@property(copy) NSString *accountID;
- (void)removeParticipant:(id)arg1;
- (void)removeParticipants:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)addParticipants:(id)arg1;
- (void)_updateCachedParticipants;
- (void)_setRowID:(long long)arg1;
@property long long rowID;
@property(readonly) _Bool isArchived;
- (void)_setUnreadCount:(unsigned long long)arg1;
@property unsigned long long unreadCount;
@property long long state;
@property unsigned char style;
@property(retain) IMMessageItem *lastMessage;
@property(retain) NSDictionary *properties;
@property(copy) NSString *lastAddressedLocalHandle;
@property(copy) NSString *groupID;
@property(copy) NSString *displayName;
@property(copy) NSString *roomName;
@property(copy) NSArray *participants;
@property(copy) NSString *serviceName;
@property(copy) NSString *chatIdentifier;
@property(copy) NSString *guid;
- (void)dealloc;
- (id)initWithAccountID:(id)arg1 service:(id)arg2 guid:(id)arg3 groupID:(id)arg4 chatIdentifier:(id)arg5 participants:(id)arg6 roomName:(id)arg7 displayName:(id)arg8 lastAddressedLocalHandle:(id)arg9 properties:(id)arg10 state:(long long)arg11 style:(unsigned char)arg12;

@end

@interface IMDChatRegistry : NSObject
{
    NSRecursiveLock *_chatsLock;
    NSMutableDictionary *_chats;
    _Bool _isLoading;
    _Bool _doneLoadingAfterMerge;
}

+ (id)sharedInstance;
- (void)systemDidLeaveFirstDataProtectionLock;
- (_Bool)updateProperties:(id)arg1 chat:(id)arg2 style:(unsigned char)arg3;
- (_Bool)saveChats;
- (_Bool)_saveChats;
- (_Bool)loadChatsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_forceReloadChats:(_Bool)arg1;
- (id)_chatInfoForSaving;
- (id)_chatInfo;
- (void)removeMessage:(id)arg1 fromChat:(id)arg2;
- (void)addMessage:(id)arg1 toChat:(id)arg2;
- (void)removeItem:(id)arg1 fromChat:(id)arg2;
- (void)addItem:(id)arg1 toChat:(id)arg2;
- (void)removeChat:(id)arg1;
- (void)addChat:(id)arg1;
- (void)updateStateForChat:(id)arg1 forcePost:(_Bool)arg2;
- (void)updateStateForChat:(id)arg1;
- (void)updateStateForChat:(id)arg1 fromMessage:(id)arg2 toMessage:(id)arg3 forcePost:(_Bool)arg4;
- (_Bool)updateUnreadCountForChat:(id)arg1;
- (void)updateLastMessageForChat:(id)arg1;
- (void)updateLastMessageForChat:(id)arg1 hintMessage:(id)arg2;
- (id)allExistingChatsWithIdentifier:(id)arg1 style:(unsigned char)arg2;
- (id)existingChatForRoom:(id)arg1 account:(id)arg2;
- (id)existingChatForIDs:(id)arg1 account:(id)arg2 displayName:(id)arg3 groupID:(id)arg4 style:(unsigned char)arg5;
- (id)existingChatForIDs:(id)arg1 account:(id)arg2 style:(unsigned char)arg3;
- (id)existingChatsForIDs:(id)arg1 onService:(id)arg2 style:(unsigned char)arg3;
- (id)existingChatForID:(id)arg1 account:(id)arg2;
- (id)existingChatWithIdentifier:(id)arg1 account:(id)arg2;
- (id)existingChatWithGUID:(id)arg1;
- (id)chatForRoom:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 guid:(id)arg4;
- (id)chatForHandles:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 style:(unsigned char)arg4 groupID:(id)arg5 displayName:(id)arg6 guid:(id)arg7;
- (id)chatForHandle:(id)arg1 account:(id)arg2 chatIdentifier:(id)arg3 guid:(id)arg4;
@property(readonly, nonatomic) NSArray *chats;
- (void)dealloc;
- (id)init;

@end

@interface IMDChatStore : NSObject
{
    NSString *_lastModificationStamp;
}

+ (id)sharedInstance;
@property(retain) NSString *modificationStamp; // @synthesize modificationStamp=_lastModificationStamp;
- (void)deleteChat:(id)arg1;
- (void)removeMessageWithGUID:(id)arg1 fromChat:(id)arg2;
- (void)addMessageWithGUID:(id)arg1 toChat:(id)arg2;
- (id)chatsGUIDsForMessageWithGUID:(id)arg1;
- (id)chatsWithRoomname:(id)arg1 onService:(id)arg2;
- (id)chatsWithHandle:(id)arg1 onService:(id)arg2;
- (unsigned long long)unreadCountForChat:(id)arg1;
- (id)storeChat:(id)arg1;
- (id)loadAllChats;
- (void)unarchiveChat:(id)arg1;
- (void)archiveChat:(id)arg1;
- (void)_updateModificationDate;
- (void)dealloc;
- (id)init;

@end

@interface IMDFileTransferCenter : NSObject <IMFileCopierDelegate>
{
    NSMutableDictionary *_guidToCopierMap;
    NSMutableDictionary *_guidToSimpleCopierMap;
    NSMutableDictionary *_guidToTransferMap;
    NSMutableSet *_activeTransfers;
    NSString *_contextStamp;
    NSTimer *_transferTimer;
    NSMutableArray *_transferringTransfers;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSString *contextStamp; // @synthesize contextStamp=_contextStamp;
- (void)_handleFileTransferRemoved:(id)arg1;
- (void)_handleFileTransferStopped:(id)arg1;
- (void)_handleFileTransfer:(id)arg1 acceptedWithPath:(id)arg2 autoRename:(_Bool)arg3 overwrite:(_Bool)arg4 postNotification:(_Bool)arg5;
- (void)_handleFileTransfer:(id)arg1 updatedWithProperties:(id)arg2;
- (void)_handleFileTransfer:(id)arg1 createdWithProperties:(id)arg2 fromPid:(int)arg3;
- (void)_handleSendFileTransfer:(id)arg1;
- (id)_allFileTransfers;
- (void)acceptTransfer:(id)arg1 path:(id)arg2;
- (void)failTransfer:(id)arg1 error:(id)arg2;
- (void)resetTransferAndPostError:(id)arg1 error:(id)arg2;
- (void)failTransfer:(id)arg1 reason:(long long)arg2;
- (void)endTransfer:(id)arg1;
- (void)startFinalizingTransfer:(id)arg1;
- (void)updateTransfer:(id)arg1;
- (void)updateTransfer:(id)arg1 currentBytes:(unsigned long long)arg2 totalBytes:(unsigned long long)arg3;
- (void)startTransfer:(id)arg1;
- (void)registerStandaloneTransfer:(id)arg1;
- (void)removeTransferForGUID:(id)arg1;
- (id)transferForGUID:(id)arg1;
- (void)addTransfer:(id)arg1 forGUID:(id)arg2;
- (void)removeUnassignedTransfers;
- (void)assignTransfer:(id)arg1 toAccount:(id)arg2 otherPerson:(id)arg3;
- (id)guidForNewOutgoingTransferWithFilename:(id)arg1 isDirectory:(_Bool)arg2 totalBytes:(unsigned long long)arg3 hfsType:(unsigned int)arg4 hfsCreator:(unsigned int)arg5 hfsFlags:(unsigned short)arg6;
- (id)guidForNewIncomingTransferWithFilename:(id)arg1 isDirectory:(_Bool)arg2 totalBytes:(unsigned long long)arg3 hfsType:(unsigned int)arg4 hfsCreator:(unsigned int)arg5 hfsFlags:(unsigned short)arg6;
- (void)makeNewOutgoingTransferWithGUID:(id)arg1 filename:(id)arg2 isDirectory:(_Bool)arg3 totalBytes:(unsigned long long)arg4 hfsType:(unsigned int)arg5 hfsCreator:(unsigned int)arg6 hfsFlags:(unsigned short)arg7;
- (void)makeNewIncomingTransferWithGUID:(id)arg1 filename:(id)arg2 isDirectory:(_Bool)arg3 totalBytes:(unsigned long long)arg4 hfsType:(unsigned int)arg5 hfsCreator:(unsigned int)arg6 hfsFlags:(unsigned short)arg7;
- (void)_transferTimerTick:(id)arg1;
- (void)_removeTransferringTransfer:(id)arg1;
- (void)_addTransferringTransfer:(id)arg1;
- (void)_removeActiveTransfer:(id)arg1;
- (void)_addActiveTransfer:(id)arg1;
@property(readonly, nonatomic) _Bool hasActiveFileTransfers;
- (id)_removeWrapperForTransfer:(id)arg1;
- (id)_createWrapperForTransfer:(id)arg1;
- (void)_addSpotlightPropertiesFromFileTransfer:(id)arg1 toDirectory:(id)arg2;
- (void)addDefaultGatekeeperPropertiesToDirectory:(id)arg1;
- (void)_addGatekeeperProperties:(id)arg1 toDirectory:(id)arg2;
- (int)_addGatekeeperProperties:(id)arg1 toFileAtPath:(id)arg2;
- (void)fileCopierDidFinish:(id)arg1;
- (void)fileCopierDidStart:(id)arg1;
- (void)archiveFileTransfer:(id)arg1;
- (void)_archiveFileTransfer:(id)arg1;
- (id)_dictionaryRepresentationsForFileTransfers:(id)arg1 toSave:(_Bool)arg2;
- (id)_temporaryPathForGUID:(id)arg1 filename:(id)arg2;
- (void)_postUpdated:(id)arg1;
- (void)_updateContextStamp;
- (void)_completeProgressForTransferGUID:(id)arg1;
- (void)_clearProgressForTransferGUID:(id)arg1;
- (id)_progressForTransferGUID:(id)arg1 allowCreate:(_Bool)arg2 path:(id)arg3;
- (void)dealloc;
- (id)init;

@end

@interface IMDHandle : NSObject
{
    NSString *_id;
    NSString *_unformattedID;
    NSString *_countryCode;
}

@property(retain, nonatomic) NSString *unformattedID; // @synthesize unformattedID=_unformattedID;
@property(retain, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(retain, nonatomic) NSString *ID; // @synthesize ID=_id;
@property(readonly, retain, nonatomic) NSDictionary *handleInfo;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isBetterDefinedThan:(id)arg1;
- (long long)compareIDs:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithID:(id)arg1 unformattedID:(id)arg2 countryCode:(id)arg3;

@end

@interface IMDIDSAccount : IMDAccount
{
    IDSAccount *_idsAccount;
}

@property(readonly, retain, nonatomic) IDSAccount *idsAccount; // @synthesize idsAccount=_idsAccount;
- (id)accountDefaults;
- (void)writeAccountDefaults:(id)arg1;
- (void)dealloc;
- (id)initWithAccountID:(id)arg1 defaults:(id)arg2 service:(id)arg3 idsAccount:(id)arg4;

@end

@interface IMDService : NSObject <IMSystemMonitorListener>
{
    NSBundle *_bundle;
    Class _sessionClass;
    NSString *_internalName;
    NSDictionary *_accountDefaults;
    NSDictionary *_serviceDefaults;
    NSDictionary *_serviceProperties;
    NSDictionary *_cachedServiceDefaults;
    NSDictionary *_cachedSetupServiceDefaults;
    _Bool _blockPrefWriting;
}

@property(readonly, retain, nonatomic) NSDictionary *serviceProperties; // @synthesize serviceProperties=_serviceProperties;
@property(readonly, retain, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
- (void)systemDidEnterMemoryPressure;
- (void)systemDidStartBackup;
- (id)description;
- (void)purgeMemoryCaches;
@property(readonly, nonatomic) _Bool serviceRequiresSingleAccount;
@property(readonly, nonatomic) long long serviceProtocolVersion;
@property(readonly, nonatomic) _Bool serviceSupportsPresence;
@property(readonly, nonatomic) _Bool serviceChatsIgnoreLoginStatus;
@property(readonly, nonatomic) _Bool serviceRequiresHost;
@property(readonly, nonatomic) _Bool serviceShouldBeAlwaysLoggedIn;
@property(readonly, nonatomic) _Bool serviceNeedsPassword;
@property(readonly, nonatomic) _Bool serviceNeedsLogin;
@property(readonly, nonatomic) _Bool shouldForceAccountsConnected;
@property(readonly, nonatomic) _Bool shouldForceAccountsActive;
@property(readonly, nonatomic) _Bool shouldCreateActiveAccounts;
@property(readonly, nonatomic) _Bool serviceWantsNullHostReachability;
@property(readonly, nonatomic) _Bool serviceIgnoresNetworkConnectivity;
@property(readonly, nonatomic) _Bool serviceSupportsRegistration;
@property(readonly, nonatomic) _Bool supportsDatabase;
@property(readonly, nonatomic) _Bool disallowDeactivation;
@property(readonly, retain, nonatomic) NSDictionary *defaultAccountSettings;
- (id)newAccountWithAccountDefaults:(id)arg1 accountID:(id)arg2;
- (void)accountRemoved:(id)arg1;
- (void)accountAdded:(id)arg1;
- (void)disableAccount:(id)arg1;
- (void)enableAccount:(id)arg1;
- (void)saveSettings;
- (void)delayedSaveSettings;
- (_Bool)clearOneTimeImportAccounts;
@property(readonly, retain, nonatomic) NSDictionary *serviceDefaultsForSetup;
@property(readonly, retain, nonatomic) NSDictionary *serviceDefaults;
- (id)_serviceDefaultsForDomain:(id)arg1;
- (id)_defaultDefaults;
- (void)synchronizeServiceDefaults;
@property(readonly, nonatomic) _Bool isIDSBased;
@property(readonly, nonatomic) Class accountClass;
@property(readonly, nonatomic) Class sessionClass;
- (id)_oldServiceDomain;
@property(readonly, retain, nonatomic) NSString *serviceDomain;
- (id)_serviceDomain;
- (id)oldInternalName;
@property(readonly, retain, nonatomic) NSString *internalName;
- (void)unloadServiceBundle;
- (void)_reallyUnloadServiceBundle;
- (void)loadServiceBundle;
- (id)_copyServicePropertiesFromIMServiceBundle:(id)arg1;
- (void)dealloc;
- (id)initWithBundle:(id)arg1;

@end

@interface IMDIDSService : IMDService <IDSAccountControllerDelegate, IDSAccountRegistrationDelegate>
{
    IDSAccountController *_accountController;
    _Bool _activatingAccount;
    _Bool _deactivatingAccount;
}

@property(readonly, retain, nonatomic) IDSAccountController *idsAccountController; // @synthesize idsAccountController=_accountController;
- (void)refreshRegistrationForAccount:(id)arg1;
- (void)registrationFailedForAccount:(id)arg1 needsDeletion:(id)arg2;
- (void)account:(id)arg1 displayNameChanged:(id)arg2;
- (void)account:(id)arg1 loginChanged:(id)arg2;
- (void)account:(id)arg1 profileChanged:(id)arg2;
- (void)account:(id)arg1 vettedAliasesChanged:(id)arg2;
- (void)account:(id)arg1 aliasesChanged:(id)arg2;
- (void)account:(id)arg1 registrationStatusInfoChanged:(id)arg2;
- (void)accountController:(id)arg1 accountDisabled:(id)arg2;
- (void)accountController:(id)arg1 accountEnabled:(id)arg2;
- (void)accountController:(id)arg1 accountRemoved:(id)arg2;
- (void)accountController:(id)arg1 accountUpdated:(id)arg2;
- (void)accountController:(id)arg1 accountAdded:(id)arg2;
- (void)disableAccount:(id)arg1;
- (void)enableAccount:(id)arg1;
- (id)newAccountWithAccountDefaults:(id)arg1 accountID:(id)arg2;
- (void)accountRemoved:(id)arg1;
- (void)accountAdded:(id)arg1;
@property(readonly, nonatomic) NSArray *activeAccountsFromIdentityServices;
@property(readonly, retain, nonatomic) NSArray *accountsLoadedFromIdentityServices;
- (id)imdAccountLoginFromIDSAccountWithType:(int)arg1 login:(id)arg2;
- (id)_serviceDomain;
- (id)accountFromIDSAccountWithUniqueID:(id)arg1;
- (Class)accountClass;
- (void)dealloc;
- (id)initWithBundle:(id)arg1;
- (void)_loadIDSAccountController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IMDInvocationForwarder : NSObject
{
    NSMutableArray *_targets;
    NSLock *_lock;
}

@property(retain, nonatomic) NSLock *_lock; // @synthesize _lock;
@property(retain, nonatomic) NSMutableArray *_targets; // @synthesize _targets;
- (void)forwardInvocation:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)removeTarget:(id)arg1;
- (void)addTarget:(id)arg1;
- (void)dealloc;
- (id)initWithTargets:(id)arg1;

@end

@interface IMDLocationSharingController : NSObject
{
    FMFSession *_session;
}

+ (id)sharedInstance;
- (void)_forwardMappingPacket:(id)arg1 toID:(id)arg2 account:(id)arg3;
- (void)receivedIncomingLocationSharePacket:(id)arg1;
- (void)_generateLocationSharingItemWithHandleID:(id)arg1 direction:(long long)arg2 action:(long long)arg3;
- (void)dealloc;
- (id)init;

@end

@interface IMDMessageStore : NSObject
{
    NSString *_modificationStamp;
    NSNumber *_cachedUnreadMessageCount;
    NSNumber *_cachedLastFailedMessageID;
    _Bool _suppressedUpdates;
    _Bool _pendingDBUpdatePost;
}

+ (void)_updateCacheForMessageGUID:(id)arg1 fromMessage:(id)arg2 toMessage:(id)arg3;
+ (id)sharedInstance;
@property(retain) NSString *modificationStamp; // @synthesize modificationStamp=_modificationStamp;
- (void)postCountChanges;
- (void)rebuildUnreadMessageCount;
- (void)rebuildLastFailedMessageID;
- (void)updateStamp;
- (void)_postDBUpdate;
- (void)__postDBUpdate;
- (void)setSuppressDatabaseUpdates:(_Bool)arg1;
- (void)cleanseAttachments;
- (long long)unreadMessagesCount;
- (long long)lastFailedMessageID;
- (id)markMessagesAsReadWithRoomname:(id)arg1 onService:(id)arg2 upToGUID:(id)arg3 readDate:(id)arg4 fromMe:(_Bool)arg5;
- (id)markMessagesAsReadWithHandle:(id)arg1 onService:(id)arg2 upToGUID:(id)arg3 readDate:(id)arg4 fromMe:(_Bool)arg5;
- (id)markMessagesAsReadWithRoomNames:(id)arg1 onServices:(id)arg2 upToGUID:(id)arg3 readDate:(id)arg4 fromMe:(_Bool)arg5;
- (id)markMessagesAsReadWithHandles:(id)arg1 onServices:(id)arg2 upToGUID:(id)arg3 readDate:(id)arg4 fromMe:(_Bool)arg5;
- (id)deleteMessagesWithReplaceMessageID:(int)arg1 fromHandle:(id)arg2 onService:(id)arg3;
- (id)deleteMessagesWithChatIdentifiers:(id)arg1 style:(unsigned char)arg2 onServices:(id)arg3;
- (id)deleteMessagesWithChatIdentifiers:(id)arg1 style:(unsigned char)arg2 onServices:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_deleteMessagesWithGUIDs:(id)arg1 chatIdentifiers:(id)arg2 style:(unsigned char)arg3 onServices:(id)arg4 batchNumber:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;
- (id)deleteMessageGUIDs:(id)arg1;
- (id)deleteMessageGUIDs:(id)arg1 inChat:(id)arg2;
- (void)resolveUnformattedRepresentationsForHandles:(id)arg1 onService:(id)arg2 message:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)chatsForMessageGUID:(id)arg1;
- (id)chatsForMessage:(id)arg1;
- (id)chatForMessageGUID:(id)arg1;
- (id)chatForMessage:(id)arg1;
- (id)frequentRepliesForForChatIdentifiers:(id)arg1 onServices:(id)arg2 limit:(unsigned long long)arg3;
- (id)messageActionItemsForOriginalMessageGUID:(id)arg1;
- (id)attachmentsWithRoomNames:(id)arg1 onServices:(id)arg2;
- (id)attachmentsWithHandles:(id)arg1 onServices:(id)arg2;
- (id)lastMessageWithRoomNames:(id)arg1 onServices:(id)arg2;
- (id)lastMessageWithHandles:(id)arg1 onServices:(id)arg2;
- (id)messagesWithRoomNames:(id)arg1 onServices:(id)arg2 messageGUID:(id)arg3 limit:(unsigned long long)arg4;
- (id)messagesWithRoomNames:(id)arg1 onServices:(id)arg2 limit:(unsigned long long)arg3;
- (id)messagesWithHandles:(id)arg1 onServices:(id)arg2 messageGUID:(id)arg3 limit:(unsigned long long)arg4;
- (id)messagesWithHandles:(id)arg1 onServices:(id)arg2 limit:(unsigned long long)arg3;
- (id)messageWithReplaceMessageID:(int)arg1 fromHandle:(id)arg2 onService:(id)arg3;
- (void)markMessageAsDeduplicated:(id)arg1;
- (id)existingMessageSimilarToMessage:(id)arg1 skipServices:(id)arg2 skipGUIDs:(id)arg3 withinTimeInterval:(double)arg4 participants:(id)arg5;
- (id)messageWithGUID:(id)arg1;
- (id)itemWithGUID:(id)arg1;
- (_Bool)hasStoredMessageWithGUID:(id)arg1;
- (_Bool)canStoreMessage:(id)arg1 onService:(id)arg2;
- (_Bool)canStoreItem:(id)arg1 onService:(id)arg2;
- (id)messagesWithGUIDs:(id)arg1;
- (void)registerTransfersWithGUIDs:(id)arg1 forMessageGUID:(id)arg2;
- (id)_messagesWithRoomNames:(id)arg1 onServices:(id)arg2 messageGUID:(id)arg3 limit:(unsigned long long)arg4 onlyMessages:(_Bool)arg5;
- (id)_messagesWithHandles:(id)arg1 onServices:(id)arg2 messageGUID:(id)arg3 limit:(unsigned long long)arg4 onlyMessages:(_Bool)arg5;
- (id)_itemsWithGUIDs:(id)arg1;
- (_Bool)_hasMessagesWithGUIDs:(id)arg1;
- (void)updateUnformattedID:(id)arg1 forBuddyID:(id)arg2 onService:(id)arg3;
- (id)storeMessage:(id)arg1 forceReplace:(_Bool)arg2 modifyError:(_Bool)arg3 modifyFlags:(_Bool)arg4 flagMask:(unsigned long long)arg5;
- (id)storeItem:(id)arg1 forceReplace:(_Bool)arg2;
- (void)updateFileTransfer:(id)arg1;
- (void)_storeAttachmentsForMessage:(id)arg1;
- (void)_performBlock:(CDUnknownBlockType)arg1 afterDelay:(double)arg2;
- (void)_updateModificationDate;
- (void)dealloc;
- (void)performInitialHousekeeping;
- (id)init;

@end

@interface IMDServiceController : NSObject
{
    NSMutableDictionary *_services;
}

+ (id)sharedInstance;
- (id)serviceWithName:(id)arg1;
@property(readonly, nonatomic) NSArray *allServices;
- (void)registerSessionClassWithBundle:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface IMTunesController : NSObject
{
    NSDate *_lastChange;
    NSDictionary *_lastInfo;
    NSMutableDictionary *_playerInfo;
    NSMutableArray *_listeners;
    NSString *_messageFormat;
}

+ (id)sharedTunesController;
@property(readonly, nonatomic) NSDictionary *playerInfo; // @synthesize playerInfo=_playerInfo;
@property(readonly, nonatomic) NSString *messageFormat;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)_playerChangedNotification:(id)arg1;
- (void)_playerChanged:(id)arg1;
- (void)_updateMessage;
@property(readonly, nonatomic) _Bool isEnabled;
- (void)dealloc;
- (id)init;

@end

@interface NSMutableDictionary (TunesController_Additions)
- (void)setAsString:(id)arg1 forKey:(id)arg2;
@end

@interface NSString (TunesController_Additions)
- (id)stringValue;
@end

@interface NSUserDefaults (DeferredSavingAdditions)
- (_Bool)delayedSynchronize;
@end

