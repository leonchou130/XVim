//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CPSqliteConnection;

struct CPSqliteStatement {
    struct CPSqliteConnection *_field1;
    struct sqlite3_stmt *_field2;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct sqlite3_stmt;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/AddressBook.framework/AddressBook
// UUID: E44121BB-D8C9-3C7B-B4D6-9B84C96ADCAE
//
//                           Arch: x86_64
//                Current version: 30.0.0
//          Compatibility version: 1.0.0
//                 Source version: 11009.1.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CNVCardActivityAlertAbstractSerializationStrategy <NSObject>
+ (NSString *)serializeString:(NSString *)arg1;
+ (_Bool)strategyWouldAlterString:(NSString *)arg1;
@end

@protocol DASearchQueryConsumer
- (void)searchQuery:(DASearchQuery *)arg1 finishedWithError:(NSError *)arg2;
- (void)searchQuery:(DASearchQuery *)arg1 returnedResults:(NSArray *)arg2;

@optional
- (void)searchQuery:(DASearchQuery *)arg1 returnedTotalCount:(NSNumber *)arg2;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@interface ABPredicate : NSPredicate
{
}

+ (void)searchPeopleWithPredicate:(id)arg1 sortOrder:(unsigned int)arg2 inAddressBook:(void *)arg3 withDelegate:(id)arg4;
+ (id)newQueryFromCompoundPredicate:(id)arg1 withSortOrder:(unsigned int)arg2 addressBook:(void *)arg3 propertyIndices:(const struct __CFDictionary **)arg4;
+ (id)newQueryFromABPredicate:(id)arg1 withSortOrder:(unsigned int)arg2 addressBook:(void *)arg3 propertyIndices:(const struct __CFDictionary **)arg4;
+ (id)newQueryWithProperties:(id)arg1 joins:(id)arg2 whereString:(id)arg3 sortOrder:(unsigned int)arg4 groupByProperties:(id)arg5 addressBook:(void *)arg6 propertyIndices:(const struct __CFDictionary **)arg7;
+ (id)personPredicateWithGroup:(void *)arg1 source:(void *)arg2 account:(id)arg3;
+ (id)personPredicateWithPhoneLike:(id)arg1 countryHint:(id)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithAnyValueForProperty:(int)arg1;
+ (id)personPredicateWithValue:(id)arg1 comparison:(long long)arg2 forProperty:(int)arg3;
+ (id)personPredicateWithNameOnly:(id)arg1 account:(id)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithName:(id)arg1 addressBook:(void *)arg2;
+ (id)personPredicateWithNameLike:(id)arg1 groups:(id)arg2 sources:(id)arg3 includeSourceInResults:(_Bool)arg4 includePhotosInResults:(_Bool)arg5 addressBook:(void *)arg6;
+ (id)personPredicateWithNameLike:(id)arg1 groups:(id)arg2 sources:(id)arg3 includeSourceInResults:(_Bool)arg4 addressBook:(void *)arg5;
+ (id)personPredicateWithNameLike:(id)arg1 groups:(id)arg2 sources:(id)arg3 addressBook:(void *)arg4;
+ (id)personPredicateWithNameLike:(id)arg1 group:(void *)arg2 source:(void *)arg3 account:(id)arg4 includeSourceInResults:(_Bool)arg5 addressBook:(void *)arg6;
+ (id)personPredicateWithNameLike:(id)arg1 group:(void *)arg2 source:(void *)arg3 account:(id)arg4 addressBook:(void *)arg5;
+ (id)personPredicateWithNameLike:(id)arg1 addressBook:(void *)arg2;
- (void)bindDouble:(double)arg1 toStatement:(struct CPSqliteStatement *)arg2 withBindingOffset:(int *)arg3;
- (void)bindString:(id)arg1 toStatement:(struct CPSqliteStatement *)arg2 withBindingOffset:(int *)arg3;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (void)evaluateCallbackWithSqliteContext:(struct sqlite3_context *)arg1 predicateContext:(void *)arg2 values:(struct Mem **)arg3 count:(int)arg4;
- (void *)callbackContext;
- (_Bool)hasCallback;
- (id)queryWhereString;
- (id)queryGroupByProperties;
- (id)queryJoinsInCompound:(_Bool)arg1;
- (id)querySelectProperties;
- (_Bool)isValid;
- (id)predicateFormat;
- (void)dealloc;
- (id)init;
- (id)ab_newQueryWithSortOrder:(unsigned int)arg1 addressBook:(void *)arg2 propertyIndices:(const struct __CFDictionary **)arg3;
- (void)ab_addCallbackContextToArray:(struct __CFArray *)arg1;
- (_Bool)ab_hasCallback;

@end

@interface ABAnyValuePredicate : ABPredicate
{
    int _property;
}

@property(nonatomic) int property; // @synthesize property=_property;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (id)queryWhereString;
- (id)queryGroupByProperties;
- (id)queryJoinsInCompound:(_Bool)arg1;
- (_Bool)isValid;
- (id)init;

@end

@interface ABCCallbackInvoker : NSObject
{
    CDUnknownFunctionPointerType cb;
    void *ab;
    void *context;
}

- (void)invoke;

@end

@interface ABDataCollection : NSObject
{
    void *_addressBook;
    _Bool _runningUnitTests;
    _Bool _isLocalSourceOnly;
    _Bool _isLocalSourceRemaining;
    _Bool _isMeCardSet;
    _Bool _isMeCardHomeAddressSet;
    _Bool _isMeCardWorkAddressSet;
    int _totalContacts;
    int _totalGroups;
    int _totalContactsWithPhotos;
    int _totalContactsWithBirthdays;
    int _totalContactsWithYearOnBirthday;
    int _totalContactsWithAnniversaries;
    NSCountedSet *_sourceTypeScalarKeys;
    NSMutableDictionary *_propertyCountForRecordID;
}

+ (void)logPropertyAdded:(int)arg1 forContact:(void *)arg2;
+ (void)logContactUpdate:(long long)arg1;
+ (void)logContactCreation:(long long)arg1;
+ (_Bool)isEnabled;
@property(retain, nonatomic) NSMutableDictionary *propertyCountForRecordID; // @synthesize propertyCountForRecordID=_propertyCountForRecordID;
@property(nonatomic) int totalContactsWithAnniversaries; // @synthesize totalContactsWithAnniversaries=_totalContactsWithAnniversaries;
@property(nonatomic) int totalContactsWithYearOnBirthday; // @synthesize totalContactsWithYearOnBirthday=_totalContactsWithYearOnBirthday;
@property(nonatomic) int totalContactsWithBirthdays; // @synthesize totalContactsWithBirthdays=_totalContactsWithBirthdays;
@property(nonatomic) int totalContactsWithPhotos; // @synthesize totalContactsWithPhotos=_totalContactsWithPhotos;
@property(nonatomic) _Bool isMeCardWorkAddressSet; // @synthesize isMeCardWorkAddressSet=_isMeCardWorkAddressSet;
@property(nonatomic) _Bool isMeCardHomeAddressSet; // @synthesize isMeCardHomeAddressSet=_isMeCardHomeAddressSet;
@property(nonatomic) _Bool isMeCardSet; // @synthesize isMeCardSet=_isMeCardSet;
@property(nonatomic) _Bool isLocalSourceRemaining; // @synthesize isLocalSourceRemaining=_isLocalSourceRemaining;
@property(nonatomic) _Bool isLocalSourceOnly; // @synthesize isLocalSourceOnly=_isLocalSourceOnly;
@property(retain, nonatomic) NSCountedSet *sourceTypeScalarKeys; // @synthesize sourceTypeScalarKeys=_sourceTypeScalarKeys;
@property(nonatomic) int totalGroups; // @synthesize totalGroups=_totalGroups;
@property(nonatomic) int totalContacts; // @synthesize totalContacts=_totalContacts;
@property(nonatomic) _Bool runningUnitTests; // @synthesize runningUnitTests=_runningUnitTests;
- (void)logTotalContactsWithManualLinks;
- (void)logPropertyCountPerContact;
- (void)logTotalContactsWithYearOnBirthday;
- (void)logTotalContactsWithAnniversary;
- (void)logTotalContactsWithBirthday;
- (void)logTotalContactsWithPhotos;
- (void)logMeCard;
- (void)logSources;
- (id)_sourceTypeAsString:(int)arg1;
- (void)logTotalGroups;
- (void)logTotalContacts;
- (void)logAllData;
- (id)initWithAddressBook:(void *)arg1;

@end

@interface ABDynamicLoader : NSObject
{
}

+ (_Bool)loadFrameworkAtPath:(id)arg1 andStoreHandle:(void **)arg2 bundle:(id *)arg3 logging:(_Bool)arg4;
+ (_Bool)loadFrameworkAtPath:(id)arg1 andStoreHandle:(void **)arg2 bundle:(id *)arg3;

@end

@interface ABFavoritesEntry : NSObject
{
    int _abUid;
    int _abIdentifier;
    NSString *_value;
    int _property;
    int _type;
    unsigned int _dirty:1;
    NSString *_label;
    NSString *_name;
    NSString *_abDatabaseUUID;
    void *_addressBook;
}

+ (void)_runLookup;
- (void)recheckAddressBook;
- (_Bool)isEqual:(id)arg1;
- (int)_abUid;
- (void *)ABPerson;
- (int)type;
- (int)identifier;
- (id)value;
- (id)nonLocalizedLabel;
- (id)label;
- (int)property;
- (id)displayName;
- (void)dictionaryRepresentation:(id *)arg1 isDirty:(_Bool *)arg2;
- (id)dictionaryRepresentation;
- (void)dealloc;
- (id)initWithDictionaryRepresentation:(id)arg1 addressBook:(void *)arg2;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithPerson:(void *)arg1 property:(int)arg2 identifier:(int)arg3 type:(int)arg4;
- (id)initWithPerson:(void *)arg1 property:(int)arg2 identifier:(int)arg3;
- (void)_lookupChanged:(id)arg1;
- (void)_lookupNotFound;
- (void)_postEntryChanged;
- (void)_unqueueLookup;
- (void)_queueLookup;

@end

@interface ABFavoritesListManager : NSObject
{
    void *_addressBook;
    NSMutableArray *_list;
    struct __CFDictionary *_uidToEntry;
    struct {
        unsigned int dirty:1;
        unsigned int postCount:1;
        unsigned int needsReload:1;
        unsigned int unused:29;
    } _flags;
}

+ (id)sharedInstanceWithAddressBook:(void *)arg1;
+ (id)sharedInstance;
- (void)removeAllEntries;
- (_Bool)entryIsDuplicateAndThusRemoved:(id)arg1 oldUid:(int)arg2;
- (void)_delayedLookup;
- (void)recacheIdentitiesSoon;
- (void)save;
- (_Bool)_writeFavoritesToFile:(id)arg1;
- (void)moveEntryAtIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)removeEntryAtIndex:(long long)arg1;
- (void)addEntry:(id)arg1;
- (void)_listChangedExternally;
- (void)_postChangeNotification;
- (void)_entryIdentityChanged:(id)arg1;
- (void)saveImmediately;
- (void)_removeEntryFromMap:(id)arg1 withUid:(int)arg2;
- (void)_addEntryToMap:(id)arg1;
- (_Bool)addEntryForPerson:(void *)arg1 property:(int)arg2 withIdentifier:(int)arg3;
- (_Bool)containsEntryWithType:(int)arg1 forPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)containsEntryWithIdentifier:(int)arg1 forPerson:(void *)arg2;
- (id)entryWithIdentifier:(int)arg1 forPerson:(void *)arg2;
- (id)entryWithType:(int)arg1 forPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (id)entryFromEntries:(id)arg1 type:(int)arg2 property:(int)arg3 value:(id)arg4 label:(id)arg5;
- (id)entryFromEntries:(id)arg1 type:(int)arg2 property:(int)arg3 identifier:(int)arg4 value:(id)arg5 label:(id)arg6;
- (_Bool)_isValueForEntry:(id)arg1 equalToValue:(id)arg2;
- (id)entriesForPerson:(void *)arg1;
- (id)entriesForPeople:(id)arg1;
- (_Bool)isFull;
- (id)entries;
- (void)_scheduleSave;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1;
- (void)_loadList;
- (void)_loadListWithAddressBook:(void *)arg1;

@end

@interface ABFavoritesLookupChangeRecord : NSObject
{
    int identifier;
    int uid;
    NSString *value;
    NSString *name;
    NSString *label;
    NSString *abDatabaseUUID;
}

@end

@interface ABGroupMembershipPredicate : ABPredicate
{
    void *_group;
    void *_store;
    NSString *_accountIdentifier;
}

@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(nonatomic) void *store; // @synthesize store=_store;
@property(nonatomic) void *group; // @synthesize group=_group;
- (id)description;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (id)queryWhereString;
- (_Bool)isValid;
- (void)dealloc;

@end

@interface ABNamePredicate : ABPredicate
{
    void *_addressBook;
    NSString *_name;
    _Bool _matchWholeWords;
    _Bool _matchPersonOrCompanyNamesExclusively;
    _Bool _matchPreferredName;
    void *_tokenizations;
    struct __CFArray *_tokenizationSortKeys;
    NSArray *_groups;
    NSArray *_sources;
}

@property(retain, nonatomic) NSArray *sources; // @synthesize sources=_sources;
@property(retain, nonatomic) NSArray *groups; // @synthesize groups=_groups;
@property(nonatomic) _Bool matchPreferredName; // @synthesize matchPreferredName=_matchPreferredName;
@property(nonatomic) _Bool matchPersonOrCompanyNamesExclusively; // @synthesize matchPersonOrCompanyNamesExclusively=_matchPersonOrCompanyNamesExclusively;
@property(nonatomic) _Bool matchWholeWords; // @synthesize matchWholeWords=_matchWholeWords;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)predicateFormat;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (id)queryWhereString;
- (id)_personNameKeys;
- (id)queryJoinsInCompound:(_Bool)arg1;
- (_Bool)isValid;
- (void *)tokenizations;
@property(copy, nonatomic) NSString *accountIdentifier;
@property(nonatomic) void *group;
@property(nonatomic) void *source;
- (void)dealloc;
- (id)init;

@end

@interface ABPersonLinker : NSObject
{
    void *_addressBook;
    NSMutableDictionary *_peopleByFirstName;
    NSMutableDictionary *_peopleByLastName;
    NSMutableDictionary *_peopleByOrganization;
}

+ (void)startAutoLinkingNewPeopleInAddressBook:(void *)arg1 inProcess:(_Bool)arg2;
+ (_Bool)isLinkDataValidForAddressBook:(void *)arg1;
- (void)linkNewlyAddedPerson:(void *)arg1;
- (void)linkRecentlyAddedPeople;
- (_Bool)linkRecentlyAddedPeopleWithLimit:(long long)arg1;
- (id)copyArrayOfAllPeopleWithROWIDGreatThan:(int)arg1 withLimit:(long long)arg2;
- (void)makeInitialLinks;
- (void)makeInitialLinksCountingOuterIterations:(unsigned long long *)arg1;
- (void)removeAllLinks;
- (void)makeLinksForAddedPeople:(id)arg1 inInitialLinking:(_Bool)arg2 countingOuterIterations:(unsigned long long *)arg3;
- (void)presortPeople:(id)arg1;
- (void)addPerson:(void *)arg1 toDictionary:(id)arg2 withProperty:(int)arg3;
- (id)suggestedPeopleToLinkWithPerson:(void *)arg1 isInitialLinking:(_Bool)arg2;
- (_Bool)shouldLinkPerson:(void *)arg1 toPeopleInDatabase:(id)arg2 andNewlyAddedPeople:(id)arg3 inInitialLinking:(_Bool)arg4;
- (id)otherPeopleInArray:(id)arg1 matchingPerson:(void *)arg2;
- (id)otherPeopleInDatabaseMatchingPerson:(void *)arg1 notIncludingPeople:(id)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithAddressBook:(void *)arg1;

@end

@interface ABPhoneFormatting : NSObject
{
}

+ (id)abNormalizedPhoneNumberFromString:(id)arg1;
+ (id)abCopyPhoneNumberFromString:(id)arg1;
+ (id)abDefaultCountryCode;

@end

@interface ABPhonePredicate : ABPredicate
{
    NSString *_phoneNumber;
    NSString *_country;
    NSString *_dbCountry;
}

@property(copy, nonatomic) NSString *country; // @synthesize country=_country;
@property(copy, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) NSString *dbCountry; // @synthesize dbCountry=_dbCountry;
- (void)evaluateCallbackWithSqliteContext:(struct sqlite3_context *)arg1 predicateContext:(void *)arg2 values:(struct Mem **)arg3 count:(int)arg4;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (_Bool)hasCallback;
- (id)queryWhereString;
- (id)queryJoinsInCompound:(_Bool)arg1;
- (id)predicateFormat;
- (_Bool)isValid;
- (void)dealloc;

@end

@interface ABSearchOperation : NSOperation
{
    void *_addressBook;
    NSPredicate *_predicate;
    NSArray *_prefetchProperties;
    unsigned int _sortOrdering;
    void *_internalSearchAddressBook;
    id <ABSearchOperationDelegate> _delegate;
    CDUnknownBlockType _progressBlock;
    NSThread *_progressBlockThread;
    void *_context;
    NSArray *_copiedRecords;
    NSArray *_copiedSuggestions;
}

+ (id)personPredicateWithGroup:(void *)arg1 addressBook:(void *)arg2;
+ (id)personPredicateWithAnyValueForProperty:(int)arg1 addressBook:(void *)arg2;
+ (id)personPredicateWithValue:(id)arg1 comparison:(long long)arg2 forProperty:(int)arg3 addressBook:(void *)arg4;
+ (id)personPredicateWithNameOnly:(id)arg1 inAccount:(id)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithPhoneLike:(id)arg1 countryHint:(id)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithNameLike:(id)arg1 inGroups:(id)arg2 sources:(id)arg3 addressBook:(void *)arg4;
+ (id)personPredicateWithNameLike:(id)arg1 inAccount:(id)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithNameLike:(id)arg1 inSource:(void *)arg2 includeSourceInResults:(_Bool)arg3 includePhotosInResults:(_Bool)arg4 addressBook:(void *)arg5;
+ (id)personPredicateWithNameLike:(id)arg1 inSource:(void *)arg2 includeSourceInResults:(_Bool)arg3 addressBook:(void *)arg4;
+ (id)personPredicateWithNameLike:(id)arg1 inSource:(void *)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithNameLike:(id)arg1 inGroup:(void *)arg2 addressBook:(void *)arg3;
+ (id)personPredicateWithNameLike:(id)arg1 addressBook:(void *)arg2;
+ (id)personPredicateWithName:(id)arg1 addressBook:(void *)arg2;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(nonatomic) unsigned int sortOrdering; // @synthesize sortOrdering=_sortOrdering;
@property(nonatomic) void *context; // @synthesize context=_context;
@property(nonatomic) id <ABSearchOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *prefetchProperties; // @synthesize prefetchProperties=_prefetchProperties;
@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate=_predicate;
@property(nonatomic) void *addressBook; // @synthesize addressBook=_addressBook;
- (_Bool)predicateShouldContinue:(id)arg1 afterFindingRecord:(void *)arg2 moreComing:(_Bool)arg3;
- (_Bool)predicateShouldContinue:(id)arg1 afterFindingRecord:(void *)arg2;
- (void)_mainThread_tellDelegateSearchFoundMatch:(void *)arg1;
- (_Bool)predicateShouldContinue:(id)arg1;
- (void)main;
- (void)cancel;
@property(nonatomic) void *internalSearchAddressBook; // @synthesize internalSearchAddressBook=_internalSearchAddressBook;
- (_Bool)isConcurrent;
- (void)dealloc;

@end

@interface ABServerSearchPredicate : ABPredicate <DASearchQueryConsumer>
{
    void *_source;
    NSString *_accountIdentifier;
    NSString *_searchString;
    _Bool _includeSourceInResults;
    DADConnection *_connection;
    DAContactsSearchQuery *_searchQuery;
    NSMutableArray *_searchResults;
    NSConditionLock *_doneLock;
    int _error;
    id <ABPredicateDelegate> _delegate;
    _Bool _includePhotosInResults;
}

@property(retain, nonatomic) DADConnection *connection; // @synthesize connection=_connection;
@property(readonly, nonatomic) int error; // @synthesize error=_error;
@property(nonatomic) id <ABPredicateDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool includePhotosInResults; // @synthesize includePhotosInResults=_includePhotosInResults;
@property(nonatomic) _Bool includeSourceInResults; // @synthesize includeSourceInResults=_includeSourceInResults;
@property(copy, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(copy, nonatomic) NSString *accountIdentifier; // @synthesize accountIdentifier=_accountIdentifier;
@property(nonatomic) void *source; // @synthesize source=_source;
- (void)searchQuery:(id)arg1 finishedWithError:(id)arg2;
- (void)searchQuery:(id)arg1 returnedResults:(id)arg2;
- (void)_searchQueryIsDone;
- (int)_errorForDAStatusCode:(long long)arg1;
- (void)ab_runPredicateWithSortOrder:(unsigned int)arg1 inAddressBook:(void *)arg2 withDelegate:(id)arg3;
- (void)runPredicateWithDelegate:(id)arg1;
- (void)runPredicate;
- (void)dealloc;
- (id)initWithSearchString:(id)arg1 source:(void *)arg2 account:(id)arg3;
- (id)initWithSearchString:(id)arg1 source:(void *)arg2 account:(id)arg3 includeSourceInResults:(_Bool)arg4;
- (id)initWithSearchString:(id)arg1 source:(void *)arg2 account:(id)arg3 includeSourceInResults:(_Bool)arg4 includePhotosInResults:(_Bool)arg5;

@end

@interface ABTCC : NSObject
{
    _Bool _calledExternalChangeCallbacks;
    long long _simulateType;
    _Bool _simulateAccessPrompt;
    _Bool _simulateAccessPromptGranted;
    unsigned int _simulateAccessPromptDelay;
}

+ (id)sharedInstance;
- (id)_simulateQueue;
- (void)simulateIfAccessPromptDisplayedThenUserGrantedAccess:(_Bool)arg1 withDelay:(unsigned int)arg2;
- (void)simulate:(long long)arg1;
- (void)accessRequestWithCompletion:(CDUnknownBlockType)arg1;
- (void)callExternalChangeCallbacks:(_Bool)arg1;
- (unsigned char)isAccessRestricted;
- (int)accessPreflight;
- (void)dealloc;
- (id)init;

@end

@interface ABVCardActivityAlertScanner : NSObject
{
    NSString *_string;
    unsigned long long _position;
}

+ (_Bool)characterIsStringValueCharacter:(unsigned short)arg1;
+ (id)scannerWithString:(id)arg1;
+ (id)scanAlertValueFromString:(id)arg1;
- (_Bool)atEnd;
- (unsigned long long)position;
- (unsigned short)nextUnescapedCharacter;
- (unsigned short)nextCharacter;
- (void)scanPastWhitespace;
- (_Bool)scanPastCharacter:(unsigned short)arg1;
- (unsigned short)scanCharacterWithEscaping:(_Bool)arg1;
- (unsigned short)scanCharacter;
- (_Bool)scanPastItemDelimiter;
- (_Bool)scanPastKeyValueSeparator;
- (id)scanQuotedStringValue;
- (id)scanUnquotedStringValue;
- (id)scanStringValue;
- (id)scanKeyValuePair;
- (id)scanAlertValue;
- (void)dealloc;
- (id)initWithString:(id)arg1;

@end

@interface ABVCardActivityAlertSerialization : NSObject
{
}

+ (id)infoFromDictionary:(id)arg1;
+ (id)typeFromDictionary:(id)arg1;
+ (id)activityAlertWithString:(id)arg1;
+ (void)parseString:(id)arg1 intoTypeAndInfo:(CDUnknownBlockType)arg2;
+ (id)dictionaryWithType:(id)arg1 info:(id)arg2;
+ (id)stringWithType:(id)arg1 info:(id)arg2;

@end

@interface ABVCardExporter : NSObject
{
}

+ (id)vCardRepresentationOfRecord:(void *)arg1 mode:(int)arg2;
+ (id)vCardRepresentationOfRecords:(id)arg1 mode:(int)arg2;
+ (id)_vCard30RepresentationOfRecords:(id)arg1;
+ (id)_vCard21RepresentationOfRecords:(id)arg1;

@end

@interface ABVCardCardDAVExporter : ABVCardExporter
{
}

+ (id)copyVCardRepresentationOfRecord:(void *)arg1 withPhoto:(id)arg2 extraPhotoParameters:(id)arg3;

@end

@interface ABVCardParser : NSObject
{
    ABVCardValueSetter *_valueSetter;
    void *_source;
    ABVCardLexer *_lexer;
    NSData *_data;
    unsigned long long _defaultEncoding;
    _Bool _hasImportErrors;
    _Bool _30vCard;
    NSString *_first;
    NSString *_last;
    NSString *_org;
    NSString *_formattedName;
    NSMutableArray *_emails;
    NSMutableArray *_dates;
    NSMutableArray *_phones;
    NSMutableArray *_addresses;
    NSMutableArray *_aims;
    NSMutableArray *_jabbers;
    NSMutableArray *_msns;
    NSMutableArray *_yahoos;
    NSMutableArray *_icqs;
    NSMutableArray *_untypedIMs;
    NSMutableArray *_instantMessengers;
    NSMutableArray *_socialProfiles;
    NSMutableArray *_relatedNames;
    NSMutableArray *_urls;
    NSMutableDictionary *_activityAlerts;
    NSMutableString *_notes;
    NSMutableString *_otherNotes;
    NSMutableDictionary *_extensions;
    NSString *_uid;
    NSData *_imageData;
    NSString *_imageURI;
    int _cropRectX;
    int _cropRectY;
    int _cropRectWidth;
    int _cropRectHeight;
    NSData *_cropRectChecksum;
    NSMutableArray *_itemParameters;
    NSString *_grouping;
    unsigned long long _encoding;
    _Bool _quotedPrintable;
    _Bool _base64;
}

+ (struct __CFArray *)supportedProperties;
@property(nonatomic) void *source; // @synthesize source=_source;
- (id)_valueSetter;
- (id)sortedPeopleAndProperties:(const struct __CFArray **)arg1;
- (struct __CFArray *)peopleAndProperties:(const struct __CFArray **)arg1;
- (void *)copyNextPersonWithLength:(int *)arg1 foundProperties:(const struct __CFArray **)arg2;
- (_Bool)importToValueSetter:(id)arg1;
- (_Bool)importToPerson:(void *)arg1 foundProperties:(const struct __CFArray **)arg2;
- (_Bool)parseItem;
- (_Bool)_usesRemainingLineForExternalPropKey:(id)arg1;
- (_Bool)_usesArrayForExternalPropKey:(id)arg1;
- (_Bool)_handleUnknownTag:(id)arg1 withValue:(id)arg2;
- (_Bool)parseABReleatedNames;
- (void)parseABOrder;
- (void)parseABShowAs;
- (void)parseABPhoto;
- (_Bool)parsePhoto:(id)arg1;
- (_Bool)parseABDATE;
- (_Bool)parseAlternateBirthday;
- (_Bool)parseBDAY;
- (id)dateFromISO8601String:(id)arg1;
- (_Bool)parseActivityAlerts;
- (_Bool)addIMValueTo:(id)arg1;
- (_Bool)parseIMPP;
- (id)parseInstantMessengerProfile:(id)arg1;
- (_Bool)parseSocialProfiles;
- (id)_socialProfileService;
- (id)_socialProfileDisplayName;
- (id)_socialProfileUsername;
- (id)_socialProfileUserId;
- (_Bool)parseABExtensionType:(id)arg1;
- (_Bool)parseADD;
- (_Bool)parseADR;
- (_Bool)parseTEL;
- (_Bool)parseEMAIL;
- (_Bool)parseUID;
- (_Bool)parseABUID;
- (id)phoneLabel;
- (id)defaultURLLabel;
- (id)defaultADRLabel;
- (id)defaultLabel;
- (id)genericLabel;
- (id)_genericLabel;
- (id)parseURL;
- (id)parseValueArray;
- (id)parseRemainingLine;
- (id)parseSingleValue;
- (_Bool)parseORG;
- (_Bool)parseABMaiden;
- (_Bool)parseNICKNAME;
- (_Bool)parseN;
- (_Bool)_setMultiValuesOrNoteIfNull:(id)arg1 forProperty:(unsigned int)arg2 valueComparator:(CDUnknownBlockType)arg3;
- (_Bool)_setStringValueOrNoteIfNull:(id)arg1 forProperty:(unsigned int)arg2;
- (_Bool)_setDataValueOrNoteIfNull:(id)arg1 forProperty:(unsigned int)arg2;
- (_Bool)_setIntValueOrNoteIfNull:(int)arg1 forProperty:(int)arg2;
- (void)setLocalRecordHasAdditionalProperties:(_Bool)arg1;
- (void)noteLackOfValueForImageData;
- (void)noteLackOfValueForProperty:(unsigned int)arg1;
- (_Bool)parseVERSION;
- (void)addActivityAlertMultiValues;
- (_Bool)_setPersonSounds:(void *)arg1 identifier:(int)arg2 fromActivity:(id)arg3 alert:(id)arg4 otherValue:(id)arg5;
- (void)addInstantMessageMultiValues;
- (int)_addIMPPProfiles:(id)arg1 multiValue:(void *)arg2 uniquenessCheckingMultiValue:(void *)arg3;
- (int)_addIMHandles:(id)arg1 toService:(struct __CFString *)arg2 multiValue:(void *)arg3 uniquenessCheckingMultiValue:(void *)arg4;
- (void)addSocialProfileMultiValues;
- (void)addAddressMultiValues;
- (void)addMultiValues:(id)arg1 toProperty:(unsigned int)arg2 valueComparator:(CDUnknownBlockType)arg3;
- (void)cleanUpCardState;
- (_Bool)hasImportErrors;
- (void)finalize;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface ABVCardCardDAVParser : ABVCardParser
{
    NSMutableDictionary *_unknownAttributes;
    _Bool _removeExistingProperties;
    _Bool _localRecordHasAdditionalProperties;
    int _lastCropRectX;
    int _lastCropRectY;
    int _lastCropRectWidth;
    int _lastCropRectHeight;
    NSData *_lastCropRectChecksum;
}

@property(readonly) NSData *lastCropRectChecksum; // @synthesize lastCropRectChecksum=_lastCropRectChecksum;
@property(readonly) int lastCropRectHeight; // @synthesize lastCropRectHeight=_lastCropRectHeight;
@property(readonly) int lastCropRectWidth; // @synthesize lastCropRectWidth=_lastCropRectWidth;
@property(readonly) int lastCropRectY; // @synthesize lastCropRectY=_lastCropRectY;
@property(readonly) int lastCropRectX; // @synthesize lastCropRectX=_lastCropRectX;
@property(readonly) _Bool localRecordHasAdditionalProperties; // @synthesize localRecordHasAdditionalProperties=_localRecordHasAdditionalProperties;
- (void)cleanUpCardState;
- (void)noteLackOfValueForImageData;
- (void)noteLackOfValueForProperty:(unsigned int)arg1;
- (void *)createRecordInSource:(void *)arg1 outRecordType:(unsigned int *)arg2;
- (_Bool)importToGroup:(void *)arg1 removeExistingProperties:(_Bool)arg2;
- (_Bool)importToPerson:(void *)arg1 removeExistingProperties:(_Bool)arg2;
- (_Bool)_handleUnknownTag:(id)arg1 withValue:(id)arg2;
- (_Bool)parseUID;
- (id)defaultURLLabel;
- (id)defaultADRLabel;
- (id)defaultLabel;
- (id)genericLabel;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (void)setLocalRecordHasAdditionalProperties:(_Bool)arg1;

@end

@interface ABVCardRecord : NSObject
{
    void *_record;
    struct __CFArray *_properties;
}

+ (_Bool)includePhotosInVCards;
+ (void)setIncludePhotosInVCards:(_Bool)arg1;
+ (_Bool)includeABClipRectInVCardPhotos;
+ (_Bool)includeImageURIInVCards;
+ (_Bool)includeREVInVCards;
+ (void)setIncludeREVInVCards:(_Bool)arg1;
+ (_Bool)includeNotesInVCards;
+ (void)setIncludeNotesInVCards:(_Bool)arg1;
+ (_Bool)vcardFieldisPrivate:(id)arg1;
+ (void)clearPrivateFields;
+ (void)setVCardField:(id)arg1 isPrivate:(_Bool)arg2;
+ (void)setPrivateVCardEnabled:(_Bool)arg1;
+ (_Bool)privateVCardEnabled;
+ (struct __CFArray *)supportedProperties;
- (id)_copyGroupVCardRepresentationAsStringIncludeExternalProperties:(_Bool)arg1;
- (id)_copyVCardRepresentationAsStringIncludeExternalProperties:(_Bool)arg1 withPhoto:(id)arg2 extraPhotoParameters:(id)arg3 includePrivateData:(_Bool)arg4;
- (void)_appendPropValue:(id)arg1 forExternalPropKey:(id)arg2 toOutString:(id)arg3 usingDelimiter:(id)arg4;
- (_Bool)_usesArrayForExternalPropKey:(id)arg1;
- (id)_prodID;
- (id)imageData;
- (_Bool)useThumbnailImageFormatIfAvailable;
- (id)_21vCardRepresentationAsData;
- (id)_realCompositeName;
- (id)alternateName;
- (id)_fullName;
- (_Bool)_isCompany;
- (id)_fullNameIncludingAuxiliaryElements:(_Bool)arg1;
- (id)encodedDataForValue:(id)arg1 charsetName:(id *)arg2;
- (id)encodedLineForValue:(id)arg1;
- (id)dataForSoundProperty:(void *)arg1;
- (id)_typeParameterForToneType:(id)arg1;
- (id)_dictionaryForActivityAlerts;
- (void)_addPersonSounds:(void *)arg1 identifier:(int)arg2 toActivityAlerts:(id *)arg3 activity:(id)arg4 alert:(id)arg5;
- (id)_valueForPersonSounds:(void *)arg1 identifier:(int)arg2;
- (id)dataForInstantMessageProperties;
- (id)propertyLineForIMHandles:(id)arg1 labels:(id)arg2 vCardProperty:(id)arg3;
- (id)dataForSocialProfileProperty:(void *)arg1 groupCount:(long long *)arg2;
- (id)propertyLineForGenericABProperty21:(unsigned int)arg1 vCardProperty:(id)arg2;
- (id)propertyLineForIMPPProperty:(_Bool)arg1 groupCount:(long long *)arg2;
- (id)propertyLineForInstantMessageHandles:(_Bool)arg1 groupCount:(long long *)arg2;
- (id)propertyLineForGenericABProperty:(unsigned int)arg1 vCardProperty:(id)arg2 is21:(_Bool)arg3 groupCount:(long long *)arg4;
- (void *)valueForProperty:(unsigned int)arg1;
- (void *)copyValueForProperty:(unsigned int)arg1;
- (id)stringFromAlternateBirthday:(id)arg1;
- (id)stringForAlternateBirthdayComponent:(id)arg1 key:(id)arg2 format:(id)arg3;
- (id)ISO8061StringFromDateTime:(id)arg1;
- (id)ISO8061StringFromDate:(id)arg1;
- (id)newISO8061StringFromDate:(id)arg1;
- (void)appendLabel:(id)arg1 toVCardRep:(id)arg2 inGroup:(id)arg3;
- (struct __CFString *)_vCardKeyForEmailLabel:(id)arg1;
- (id)_vCardKeysForPhoneLabel:(id)arg1;
- (struct __CFString *)_vCardKeyForGenericLabel:(id)arg1;
- (id)_vCardKeyForAddressLabel:(id)arg1 vCard3:(_Bool)arg2;
- (_Bool)_showField:(unsigned int)arg1 identifier:(int)arg2;
- (_Bool)_showField:(unsigned int)arg1;
- (_Bool)setValue:(void *)arg1 forProperty:(unsigned int)arg2;
- (void *)record;
- (id)vCardRepresentationForMode:(int)arg1;
- (void)dealloc;
- (id)initWithVCardRepresentation:(id)arg1;
- (id)init;
- (id)initWithRecord:(void *)arg1;

@end

@interface ABVCardCardDAVRecord : ABVCardRecord
{
}

+ (_Bool)includeABClipRectInVCardPhotos;
+ (_Bool)includeImageURIInVCards;
+ (_Bool)includeNotesInVCards;
+ (_Bool)includeREVInVCards;
- (_Bool)useThumbnailImageFormatIfAvailable;

@end

@interface ABVCardValueSetter : NSObject
{
}

- (void)setValueInTemporaryCache:(id)arg1 forProperty:(unsigned int)arg2;
- (id)fullName;
- (id)imageData;
- (_Bool)setImageData:(id)arg1;
- (_Bool)setImageData:(id)arg1 cropRectX:(int)arg2 cropRectY:(int)arg3 cropRectWidth:(int)arg4 cropRectHeight:(int)arg5;
- (void *)valueForProperty:(unsigned int)arg1;
- (_Bool)setValue:(void *)arg1 forProperty:(unsigned int)arg2;
- (_Bool)propertyIsValidForPerson:(unsigned int)arg1;

@end

@interface ABVCardPersonValueSetter : ABVCardValueSetter
{
    void *_person;
    struct __CFArray *_properties;
}

+ (struct __CFArray *)supportedProperties;
- (void)setValueInTemporaryCache:(id)arg1 forProperty:(unsigned int)arg2;
- (id)fullName;
- (id)imageData;
- (_Bool)setImageData:(id)arg1 cropRectX:(int)arg2 cropRectY:(int)arg3 cropRectWidth:(int)arg4 cropRectHeight:(int)arg5;
- (void *)valueForProperty:(unsigned int)arg1;
- (_Bool)setValue:(void *)arg1 forProperty:(unsigned int)arg2;
- (void)dealloc;
- (struct __CFArray *)foundProperties;
- (id)initWithPerson:(void *)arg1;

@end

@interface ABVCardCardDAVValueSetter : ABVCardPersonValueSetter
{
    _Bool _recordIsGroup;
    _Bool _importingToExistingGroup;
}

+ (int)groupPropertyForPersonProperty:(int)arg1;
+ (struct __CFDictionary *)_personToGroupPropertyMap;
@property _Bool recordIsGroup; // @synthesize recordIsGroup=_recordIsGroup;
- (id)imageData;
- (_Bool)setImageData:(id)arg1 cropRectX:(int)arg2 cropRectY:(int)arg3 cropRectWidth:(int)arg4 cropRectHeight:(int)arg5;
- (id)initWithGroup:(void *)arg1 removeExistingProperties:(_Bool)arg2;
- (id)initWithPerson:(void *)arg1 removeExistingProperties:(_Bool)arg2;
- (void)_drainExistingProperties;
- (_Bool)setValue:(void *)arg1 forProperty:(unsigned int)arg2;
- (void *)valueForProperty:(unsigned int)arg1;
- (void *)copyParsedRecordWithSource:(void *)arg1 outRecordType:(unsigned int *)arg2;
- (_Bool)propertyIsValidForPerson:(unsigned int)arg1;

@end

@interface ABVCardDateScanner : NSObject
{
    NSString *_string;
    unsigned long long _position;
}

+ (id)scannerWithString:(id)arg1;
@property(readonly) unsigned long long position; // @synthesize position=_position;
- (unsigned short)nextCharacter;
- (_Bool)isAtEnd;
- (_Bool)scanLeapMarker;
- (unsigned long long)lengthOfCalendarUnit:(unsigned long long)arg1;
- (long long)scanCalendarUnit:(unsigned long long)arg1;
- (long long)scanComponentValueOfLength:(unsigned long long)arg1;
- (id)initWithString:(id)arg1;

@end

@interface ABVCardLexer : NSObject
{
    NSMutableData *_data;
    char *_bytes;
    unsigned long long _length;
    unsigned int _peakedPoint;
    unsigned int _cursor;
    _Bool _unicode;
    int _errorCount;
    NSArray *_activeTokenSets;
}

- (_Bool)atEOF;
- (_Bool)advancePastEOL;
- (_Bool)advancePastEOLSingle;
- (_Bool)advancePastEOLUnicode;
- (_Bool)advanceToEOL;
- (_Bool)advanceToEOLSingle;
- (_Bool)advanceToEOLUnicode;
- (_Bool)advanceToToken:(int)arg1 throughTypes:(int)arg2;
- (int)advanceToString;
- (int)advanceToSingleByteString;
- (int)advanceToUnicodeString;
- (void)advanceToPeakPoint;
- (id)nextBase64Data;
- (id)nextBase64Line:(_Bool *)arg1;
- (id)nextSingleByteBase64Line:(_Bool *)arg1;
- (id)nextUnicodeBase64Line:(_Bool *)arg1;
- (id)nextArraySeperatedByToken:(int)arg1 stoppingAt:(int)arg2 inEncoding:(unsigned long long)arg3;
- (int)tokenAtCursor;
- (id)nextStringInEncoding:(unsigned long long)arg1 quotedPrintable:(_Bool)arg2 stopTokens:(int)arg3 trim:(_Bool)arg4;
- (void)_applyNextStringInEncoding:(unsigned long long)arg1 quotedPrintable:(_Bool)arg2 stopTokens:(int)arg3 trim:(_Bool)arg4 intoString:(id)arg5;
- (_Bool)_advancePastLineFoldingSequenceIfNeeded;
- (id)nextUnicodeStringStopTokens:(int)arg1 quotedPrintable:(_Bool)arg2 trim:(_Bool)arg3;
- (id)nextSingleByteStringInEncoding:(unsigned long long)arg1 quotedPrintable:(_Bool)arg2 stopTokens:(int)arg3 trim:(_Bool)arg4;
- (_Bool)advancedPastToken:(int)arg1;
- (id)nextEscapedCharacter;
- (id)nextQuotedPrintableData;
- (int)nextTokenPeak:(_Bool)arg1;
- (int)nextTokenPeakUnicode:(_Bool)arg1 length:(int)arg2;
- (int)nextTokenPeakSingle:(_Bool)arg1 length:(int)arg2;
- (id)tokenSetForLength:(int)arg1;
- (int)errorCount;
- (unsigned int)cursor;
- (void)finalize;
- (void)dealloc;
- (id)initWithData:(id)arg1;
- (id)tokenName:(int)arg1;

@end

@interface ABVCardParameter : NSObject
{
    NSString *_name;
    NSString *_grouping;
    id _value;
    NSMutableArray *_types;
    _Bool _primary;
}

- (id)description;
- (void)setIsPrimary:(_Bool)arg1;
- (_Bool)isPrimary;
- (id)value;
- (id)grouping;
- (void)setGrouping:(id)arg1;
- (id)name;
- (id)types;
- (void)addTypes:(id)arg1;
- (void)addType:(id)arg1;
- (void)setValue:(id)arg1;
- (void)finalize;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface ABValuePredicate : ABPredicate
{
    int _property;
    long long _comparison;
    id <NSObject> _value;
    NSArray *_orderedKeys;
    _Bool _dictionaryValue;
}

+ (id)stringForComparison:(id)arg1 withComparision:(long long)arg2;
@property(copy, nonatomic) NSObject *value; // @synthesize value=_value;
@property(nonatomic) long long comparison; // @synthesize comparison=_comparison;
@property(nonatomic) int property; // @synthesize property=_property;
- (id)predicateFormat;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (id)_ftsAllQueryStrings;
- (id)_ftsTokenizedTermStringForString:(id)arg1;
- (id)_ftsTermStringForString:(id)arg1;
- (id)stringForComparison:(id)arg1;
- (id)queryWhereString;
- (_Bool)_allowsLaxCheckingForFTS;
- (_Bool)_supportsFTSSearch;
- (_Bool)_shouldConsultIndexForKey:(id)arg1;
- (id)queryJoinsInCompound:(_Bool)arg1;
- (id)querySelectProperties;
- (_Bool)isValid;
- (void)dealloc;
- (id)init;

@end

@interface CNVCardActivityAlertEscapingSerializationStrategy : NSObject <CNVCardActivityAlertAbstractSerializationStrategy>
{
}

+ (id)regex;
+ (id)serializeString:(id)arg1;
+ (id)charactersToTriggerStrategy;
+ (_Bool)strategyWouldAlterString:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNVCardActivityAlertQuotingSerializationStrategy : NSObject <CNVCardActivityAlertAbstractSerializationStrategy>
{
}

+ (id)regex;
+ (id)serializeString:(id)arg1;
+ (_Bool)strategyWouldAlterString:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CNVCardActivityAlertSerializer : NSObject
{
}

+ (id)serializeString:(id)arg1;
+ (id)serializeDictionary:(id)arg1;

@end

@interface DAContactSearchResultElement (ABAdditions)
- (void *)newAddressBookRecordWithSource:(void *)arg1;
@end

@interface NSCompoundPredicate (ABPredicateQueryCreation)
- (id)ab_newQueryWithSortOrder:(unsigned int)arg1 addressBook:(void *)arg2 propertyIndices:(const struct __CFDictionary **)arg3;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (void)ab_addCallbackContextToArray:(struct __CFArray *)arg1;
- (_Bool)ab_hasCallback;
@end

@interface NSData (ABDataAdditions)
- (id)abDecodeVCardBase64;
- (id)abDecodedUTF7;
- (id)abEncodeVCardBase64DataWithInitialLength:(unsigned long long)arg1;
- (_Bool)abIsUTF16EntourageVCard;
- (id)abStringAtRange:(struct _NSRange)arg1 inEncoding:(unsigned long long)arg2;
@end

@interface NSMutableData (ABCMutableDataAdditions)
- (void)abAppendString:(id)arg1;
@end

@interface NSPredicate (ABPredicateQueryCreation)
- (id)ab_newQueryWithSortOrder:(unsigned int)arg1 addressBook:(void *)arg2 propertyIndices:(const struct __CFDictionary **)arg3;
- (void)ab_bindStatement:(struct CPSqliteStatement *)arg1 withBindingOffset:(int *)arg2 predicateIdentifier:(int)arg3;
- (_Bool)ab_hasCallback;
- (void)ab_addCallbackContextToArray:(struct __CFArray *)arg1;
@end

@interface NSPredicate (ABPredicateRunner)
- (void)ab_runPredicateWithSortOrder:(unsigned int)arg1 inAddressBook:(void *)arg2 withDelegate:(id)arg3;
@end

@interface NSString (ABVCardAdditions)
- (id)abVCardKoshify;
- (id)abStringByStrippingControlCharacters;
- (id)abStringByRemovingCharactersFromSet:(id)arg1;
- (id)abEscapeStringForUnichar:(unsigned short)arg1 and:(unsigned short)arg2 advance:(long long *)arg3;
- (id)copyABVCardDataRepresentation;
@end

