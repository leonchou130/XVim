//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGSize {
    double _field1;
    double _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/Search.framework/Search
// UUID: 23BFF93F-8D03-3666-9647-F1F9E8E11BFE
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 349.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol MCProfileConnectionObserver <NSObject>

@optional
- (void)profileConnectionDidReceiveAppWhitelistChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveDefaultsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveProfileListChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceivePasscodePolicyChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceivePasscodeChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
- (void)profileConnectionDidReceiveRestrictionChangedNotification:(MCProfileConnection *)arg1 userInfo:(NSDictionary *)arg2;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol PRSApp
@property(retain, nonatomic) NSURL *install_url;
@property(retain, nonatomic) NSString *bundle_id;
@property(retain, nonatomic) NSString *name;

@optional
@property(retain, nonatomic) NSURL *punchout_uri;
@end

@protocol PRSBaseResult <NSObject, NSCopying>
@property(retain, nonatomic) NSString *templateName;
@property(retain, nonatomic) NSString *fbr;
@property(nonatomic) float resultScore;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *resultIdentifier;

@optional
@property(retain, nonatomic) id <PRSApp> app;
@property(retain, nonatomic) NSString *bundle_id;
@property(nonatomic) long long max_age;
@property(retain, nonatomic) NSURL *resultURL;
@property(nonatomic) long long adam_id;
@property(nonatomic) long long media_kind;
@property(retain, nonatomic) NSString *type;
@end

@protocol PRSDescriptionSection <PRSSection>
@property(retain, nonatomic) NSString *resultDescription;

@optional
@property(retain, nonatomic) NSString *image_align;
@property(retain, nonatomic) PRSImage *image;
@property(nonatomic) long long description_weight;
@property(nonatomic) long long description_size;
@property(retain, nonatomic) NSString *description_expand_text;
@property(nonatomic) _Bool description_expand;
@property(nonatomic) long long description_maxlines;
@property(nonatomic) long long title_weight;
@property(nonatomic) _Bool title_nowrap;
@property(retain, nonatomic) NSString *title;
@end

@protocol PRSMapsResult <PRSBaseResult>
@property(retain, nonatomic) PRSImage *icon;
@property(retain, nonatomic) NSString *maps_result_type;
@property(retain, nonatomic) NSString *maps_data_type;
@property(retain, nonatomic) NSData *maps_data;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *templateName;

@optional
@property(retain, nonatomic) NSURL *more_url;
@property(retain, nonatomic) NSString *more;
@property(retain, nonatomic) NSString *card_title;
@end

@protocol PRSMovie
@property(retain, nonatomic) PRSImage *image;

@optional
@property(retain, nonatomic) NSURL *punchout_uri;
@property(retain, nonatomic) NSURL *url;
@property(retain, nonatomic) NSArray *more_glyphs;
@property(retain, nonatomic) NSString *rt_text;
@property(retain, nonatomic) PRSImage *rt_glyph;
@property(retain, nonatomic) NSString *subtitle;
@property(retain, nonatomic) NSString *title;
@end

@protocol PRSMovieListSection <PRSSection>
@property(retain, nonatomic) NSArray *movies;
@property(retain, nonatomic) NSString *title;

@optional
@property(retain, nonatomic) NSString *subtitle;
@end

@protocol PRSRowSection <PRSSection>
@property(retain, nonatomic) NSString *key;

@optional
@property(retain, nonatomic) PRSImage *value_image;
@property(nonatomic) long long value_weight;
@property(nonatomic) _Bool value_nowrap;
@property(retain, nonatomic) NSString *value;
@property(nonatomic) long long key_weight;
@property(nonatomic) _Bool key_nowrap;
@end

@protocol PRSSection
@property(retain, nonatomic) NSString *type;

@optional
@property(retain, nonatomic) NSURL *url;
@end

@protocol PRSSimpleResult <PRSBaseResult>
@property(retain, nonatomic) PRSImage *icon;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *templateName;

@optional
@property(retain, nonatomic) NSURL *card_url;
@property(retain, nonatomic) NSArray *card_sections;
@property(retain, nonatomic) NSString *card_title;
@property(retain, nonatomic) NSArray *more_icons;
@property(nonatomic) long long footnote_size;
@property(nonatomic) long long footnote_maxlines;
@property(nonatomic) _Bool footnote_nowrap;
@property(retain, nonatomic) NSString *footnote;
@property(nonatomic) long long description_size;
@property(nonatomic) long long description_maxlines;
@property(nonatomic) _Bool description_nowrap;
@property(retain, nonatomic) NSString *resultDescription;
@property(retain, nonatomic) PRSImage *title_glyph;
@property(nonatomic) long long title_size;
@property(nonatomic) long long title_maxlines;
@end

@protocol PRSTitleSection <PRSSection>
@property(retain, nonatomic) NSString *title;

@optional
@property(retain, nonatomic) NSString *subtitle;
@end

@protocol PRSiTunesResult <PRSBaseResult>
@property(retain, nonatomic) PRSImage *icon;
@property(retain, nonatomic) NSString *title;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *templateName;

@optional
@property(retain, nonatomic) NSString *string_format;
@property(retain, nonatomic) NSString *card_title;
@property(retain, nonatomic) NSArray *more_glyphs;
@property(retain, nonatomic) NSString *rating_text;
@property(nonatomic) float rating;
@property(nonatomic) _Bool rt_newline;
@property(retain, nonatomic) NSString *rt_text;
@property(retain, nonatomic) PRSImage *rt_glyph;
@property(nonatomic) _Bool description_nowrap;
@property(retain, nonatomic) NSString *resultDescription;
@end

@protocol SPDaemonQueryDelegate
- (void)searchDaemonQueryCompleted:(SPDaemonQueryToken *)arg1;
- (void)searchDaemonQueryReset:(SPDaemonQueryToken *)arg1;
- (void)searchDaemonQuery:(SPDaemonQueryToken *)arg1 encounteredError:(NSError *)arg2;
- (void)searchDaemonQuery:(SPDaemonQueryToken *)arg1 addedResults:(SPSearchResultDeserializer *)arg2;
@end

@protocol SPSearchDatastore <NSObject>
- (NSString *)displayIdentifierForDomain:(unsigned int)arg1;
- (NSArray *)searchDomains;
- (void)performQuery:(SPSearchQuery *)arg1 withResultsPipe:(id <SPSearchResultsPipe>)arg2;

@optional
- (void)sendFeedback:(SPFeedback *)arg1;
- (NSData *)imageDataForIdentifier:(NSString *)arg1 domain:(unsigned int)arg2 size:(struct CGSize)arg3;
- (NSData *)imageDataForResultIdentifier:(unsigned long long)arg1 domain:(unsigned int)arg2 size:(struct CGSize)arg3;
- (SPContentResult *)resultForIdentifier:(NSString *)arg1 domain:(unsigned int)arg2;
- (NSString *)categoryForDomain:(unsigned int)arg1;
- (_Bool)wantsExtendedTimeForDomain:(unsigned int)arg1;
- (_Bool)wantsEveryResultInItsOwnSection;
- (void)coolDown;
- (void)preheat;
@end

@protocol SPSearchResult <NSObject>
- (unsigned long long)identifier;
- (int)domain;

@optional
- (_Bool)getBadgeValue:(float *)arg1;
- (const char *)URLUTF8String;
- (const char *)auxiliarySubtitleUTF8String;
- (const char *)auxiliaryTitleUTF8String;
- (const char *)summaryUTF8String;
- (const char *)subtitleUTF8String;
- (const char *)titleUTF8String;
- (const char *)resultDisplayIdentifierUTF8String;
@end

@interface NSKeyedArchiver (SearchAdditions)
+ (id)_sp_secureArchivedDataWithRootObject:(id)arg1;
@end

@interface NSKeyedUnarchiver (SearchAdditions)
+ (id)_sp_secureUnarchiveObjectWithData:(id)arg1;
@end

@interface NSObject (ParsecAdditions)
- (void)__sp_parsec_forwardInvocation:(id)arg1;
@end

@interface NSString (PunctuationRemoval)
- (id)unpunctuatedString;
@end

@interface NSString (SafeCharAt)
- (unsigned short)safeCharacterAtIndex:(unsigned long long)arg1;
@end

@interface SPProxyObject : NSObject
{
    NSDictionary *_dictionary;
}

+ (id)proxyObjectWithDictionary:(id)arg1;
@property(retain, nonatomic) NSDictionary *dictionary; // @synthesize dictionary=_dictionary;
- (void).cxx_destruct;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)forwardInvocation:(id)arg1;

@end

@interface SPApp : SPProxyObject <PRSApp>
{
}


// Remaining properties
@property(retain, nonatomic) NSString *bundle_id; // @dynamic bundle_id;
@property(retain, nonatomic) NSURL *install_url; // @dynamic install_url;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSURL *punchout_uri; // @dynamic punchout_uri;
@end

@interface SPApplication : NSObject
{
    NSString *_displayIdentifier;
    NSString *_displayName;
    NSString *_longDisplayName;
}

@property(retain, nonatomic) NSString *longDisplayName; // @synthesize longDisplayName=_longDisplayName;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(retain, nonatomic) NSString *displayIdentifier; // @synthesize displayIdentifier=_displayIdentifier;
- (void)dealloc;
@property(readonly, nonatomic) SPSearchResult *searchResult;
- (id)description;

@end

@interface SPBundleManager : NSObject
{
    NSArray *_searchBundles;
    NSArray *_datastores;
    NSDictionary *_domainMap;
}

+ (id)sharedManager;
- (void)dealloc;
- (void)resetDatastores;
- (id)datastoreForDomain:(unsigned int)arg1;
- (id)domainMap;
@property(readonly, nonatomic) NSArray *datastores;
@property(readonly, nonatomic) NSArray *searchBundles;
- (void)createLockForDatastore:(id)arg1;
- (void)unlockDatastore:(id)arg1;
- (void)lockDatastore:(id)arg1;
- (void)_loadSearchBundles;

@end

@interface SPContentIndexer : NSObject
{
    NSString *_displayIdentifier;
    NSString *_category;
    struct __CXQuery *_query;
    struct __CXIndex *_index;
    unsigned int _version;
    SPIndex *_store;
    NSMutableArray *_dirtyRecords;
    NSMutableArray *_dirtyContent;
    NSMutableArray *_dirtyRemoves;
}

+ (void)preheat;
+ (id)indexerForDisplayIdentifier:(id)arg1 category:(id)arg2;
- (void)dealloc;
- (id)initWithDisplayIdentifier:(id)arg1 category:(id)arg2 version:(unsigned int)arg3;
- (id)existingRecordsForExtIDs:(id)arg1;
- (id)resultForIdentifier:(id)arg1;
- (void)cancelSearch;
- (_Bool)nextSearchResults:(id *)arg1;
- (void)beginSearch:(id)arg1;
- (void)removeRecord:(id)arg1;
- (void)setIdentifier:(id)arg1 forRecordDictionary:(id)arg2 existingRecord:(id)arg3;
- (_Bool)commitUpdates;
- (void)_openOrCreateIndex;
- (id)_legacyStorePath;
- (id)_legacyIndexPath;
- (id)_storePath;
- (id)_indexPath;

@end

@interface SPSearchResult : PBCodable <PRSBaseResult, PRSSimpleResult, PRSiTunesResult, PRSMapsResult, NSCopying>
{
    unsigned long long _identifier;
    NSMutableArray *_additionalProperties;
    NSString *_auxiliarySubtitle;
    NSString *_auxiliaryTitle;
    int _flags;
    unsigned int _numberOfSummaryLines;
    NSMutableArray *_rows;
    NSString *_subtitle;
    NSString *_summary;
    NSString *_title;
    NSString *_url;
    struct {
        unsigned int identifier:1;
        unsigned int flags:1;
        unsigned int numberOfSummaryLines:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *rows; // @synthesize rows=_rows;
@property(retain, nonatomic) NSMutableArray *additionalProperties; // @synthesize additionalProperties=_additionalProperties;
@property(nonatomic) unsigned int numberOfSummaryLines; // @synthesize numberOfSummaryLines=_numberOfSummaryLines;
@property(nonatomic) int flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSString *url; // @synthesize url=_url;
@property(nonatomic) unsigned long long identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *auxiliarySubtitle; // @synthesize auxiliarySubtitle=_auxiliarySubtitle;
@property(retain, nonatomic) NSString *auxiliaryTitle; // @synthesize auxiliaryTitle=_auxiliaryTitle;
@property(retain, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(retain, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, copy) NSString *description;
- (id)rowsAtIndex:(unsigned long long)arg1;
- (unsigned long long)rowsCount;
- (void)addRows:(id)arg1;
- (void)clearRows;
- (id)additionalPropertiesAtIndex:(unsigned long long)arg1;
- (unsigned long long)additionalPropertiesCount;
- (void)addAdditionalProperties:(id)arg1;
- (void)clearAdditionalProperties;
@property(nonatomic) _Bool hasNumberOfSummaryLines;
@property(nonatomic) _Bool hasFlags;
@property(readonly, nonatomic) _Bool hasUrl;
@property(nonatomic) _Bool hasIdentifier;
@property(readonly, nonatomic) _Bool hasAuxiliarySubtitle;
@property(readonly, nonatomic) _Bool hasAuxiliaryTitle;
@property(readonly, nonatomic) _Bool hasSummary;
@property(readonly, nonatomic) _Bool hasSubtitle;
@property(readonly, nonatomic) _Bool hasTitle;
- (void)dealloc;
@property(retain, nonatomic) NSString *fbq;
@property(retain, nonatomic) NSURL *resultURL;
- (id)valueForUndefinedKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)forwardInvocation:(id)arg1;
- (_Bool)isEquivalentToResult:(id)arg1;

// Remaining properties
@property(nonatomic) long long adam_id;
@property(retain, nonatomic) id <PRSApp> app;
@property(retain, nonatomic) NSString *bundle_id;
@property(retain, nonatomic) NSArray *card_sections; // @dynamic card_sections;
@property(retain, nonatomic) NSString *card_title; // @dynamic card_title;
@property(retain, nonatomic) NSURL *card_url;
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) long long description_maxlines; // @dynamic description_maxlines;
@property(nonatomic) _Bool description_nowrap; // @dynamic description_nowrap;
@property(nonatomic) long long description_size; // @dynamic description_size;
@property(retain, nonatomic) NSString *fbr;
@property(retain, nonatomic) NSString *footnote; // @dynamic footnote;
@property(nonatomic) long long footnote_maxlines;
@property(nonatomic) _Bool footnote_nowrap;
@property(nonatomic) long long footnote_size;
@property(retain, nonatomic) PRSImage *icon; // @dynamic icon;
@property(retain, nonatomic) NSData *maps_data; // @dynamic maps_data;
@property(retain, nonatomic) NSString *maps_data_type; // @dynamic maps_data_type;
@property(retain, nonatomic) NSString *maps_result_type; // @dynamic maps_result_type;
@property(nonatomic) long long max_age;
@property(nonatomic) long long media_kind;
@property(retain, nonatomic) NSString *more;
@property(retain, nonatomic) NSArray *more_glyphs; // @dynamic more_glyphs;
@property(retain, nonatomic) NSArray *more_icons; // @dynamic more_icons;
@property(retain, nonatomic) NSURL *more_url;
@property(nonatomic) float rating; // @dynamic rating;
@property(retain, nonatomic) NSString *rating_text; // @dynamic rating_text;
@property(retain, nonatomic) NSString *resultDescription; // @dynamic resultDescription;
@property(retain, nonatomic) NSString *resultIdentifier;
@property(nonatomic) float resultScore;
@property(retain, nonatomic) PRSImage *rt_glyph; // @dynamic rt_glyph;
@property(nonatomic) _Bool rt_newline; // @dynamic rt_newline;
@property(retain, nonatomic) NSString *rt_text; // @dynamic rt_text;
@property(retain, nonatomic) NSString *section_header;
@property(retain, nonatomic) NSString *string_format; // @dynamic string_format;
@property(readonly) Class superclass;
@property(retain, nonatomic) NSString *templateName;
@property(retain, nonatomic) PRSImage *title_glyph; // @dynamic title_glyph;
@property(nonatomic) long long title_maxlines; // @dynamic title_maxlines;
@property(nonatomic) long long title_size; // @dynamic title_size;
@property(retain, nonatomic) NSString *type;

@end

@interface SPContentResult : SPSearchResult
{
    NSString *_extid;
    NSString *_content;
}

+ (id)resultWithIdentifier:(id)arg1 title:(id)arg2 subtitle:(id)arg3 summary:(id)arg4 auxiliaryTitle:(id)arg5 auxiliarySubtitle:(id)arg6 actionURL:(id)arg7 searchableContent:(id)arg8;
+ (id)resultWithSearchResult:(id)arg1 identifier:(id)arg2 searchableContent:(id)arg3;
+ (id)resultWithRecord:(id)arg1 domain:(unsigned int)arg2 displayIdentifier:(id)arg3 query:(id)arg4;
+ (id)resultWithRecord:(id)arg1;
@property(retain, nonatomic) NSString *content; // @synthesize content=_content;
@property(retain, nonatomic) NSString *extid; // @synthesize extid=_extid;
- (void)dealloc;

@end

@interface SPDaemonConnection : NSObject
{
    SPXPCConnection *_connection;
    NSObject<OS_dispatch_queue> *_connectionQueue;
}

+ (id)sharedConnection;
- (void)dealloc;
- (id)init;
- (void)sendFeedback:(id)arg1;
- (void)indexUpdatedContent:(id)arg1 moreComing:(_Bool)arg2;
- (_Bool)retrieveUpdateList:(id *)arg1 forDisplayIdentifier:(id)arg2 category:(id)arg3;
- (void)retrieveImageDataWithIdentifier:(id)arg1 searchDomain:(unsigned int)arg2 size:(struct CGSize)arg3 completion:(CDUnknownBlockType)arg4;
- (void)retrieveImageDataForResult:(id)arg1 searchDomain:(unsigned int)arg2 size:(struct CGSize)arg3 completion:(CDUnknownBlockType)arg4;
- (void)registerApplication:(id)arg1 withCategories:(id)arg2;
- (void)endRecordUpdatesForApplication:(id)arg1 andCategory:(id)arg2;
- (void)requestRecordUpdatesForApplication:(id)arg1 category:(id)arg2 andIDs:(id)arg3;
- (void)startRecordUpdatesForApplication:(id)arg1 andCategory:(id)arg2;
- (void)preheat;
- (void)cancelQuery:(id)arg1;
- (id)startQuery:(id)arg1;
- (void)_sendMessage:(id)arg1 info:(id)arg2 reply:(CDUnknownBlockType)arg3;
- (id)_connection;
- (void)_resetConnection;

@end

@interface SPDaemonQueryToken : NSObject
{
    struct __CFMachPort *_callbackPort;
    SPSearchQuery *_query;
    id <SPDaemonQueryDelegate> _delegate;
    unsigned int _queryID;
}

@property(readonly, nonatomic) SPSearchQuery *query; // @synthesize query=_query;
@property(readonly, nonatomic) unsigned int queryID; // @synthesize queryID=_queryID;
@property(nonatomic) id <SPDaemonQueryDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dealloc;
- (id)initWithQuery:(id)arg1;
- (void)handleMessage:(id)arg1;

@end

@interface SPSection : SPProxyObject <PRSSection>
{
}


// Remaining properties
@property(retain, nonatomic) NSString *type; // @dynamic type;
@property(retain, nonatomic) NSURL *url; // @dynamic url;
@end

@interface SPDescriptionSection : SPSection <PRSDescriptionSection>
{
}


// Remaining properties
@property(nonatomic) _Bool description_expand; // @dynamic description_expand;
@property(retain, nonatomic) NSString *description_expand_text; // @dynamic description_expand_text;
@property(nonatomic) long long description_maxlines; // @dynamic description_maxlines;
@property(nonatomic) long long description_size; // @dynamic description_size;
@property(nonatomic) long long description_weight; // @dynamic description_weight;
@property(retain, nonatomic) PRSImage *image; // @dynamic image;
@property(retain, nonatomic) NSString *image_align; // @dynamic image_align;
@property(retain, nonatomic) NSString *resultDescription; // @dynamic resultDescription;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(nonatomic) _Bool title_nowrap; // @dynamic title_nowrap;
@property(nonatomic) long long title_weight; // @dynamic title_weight;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSURL *url;
@end

@interface SPDomainManager : NSObject
{
}

+ (id)defaultManager;
- (void)notifyIndexer;
- (void)applicationWasUninstalled:(id)arg1;
- (void)registerApplication:(id)arg1 withCategories:(id)arg2;
- (void)_removeAllDomainsForDisplayIdentifier:(id)arg1;

@end

@interface SPFeedback : NSObject <NSSecureCoding>
{
    unsigned int _domain;
    double _timestamp;
    NSString *_identifier;
    NSString *_input;
    NSArray *_results;
    NSString *_fbq;
}

+ (_Bool)supportsSecureCoding;
+ (id)feedbackForSearchResult:(id)arg1 section:(id)arg2;
+ (id)feedback;
@property(copy, nonatomic) NSString *fbq; // @synthesize fbq=_fbq;
@property(retain, nonatomic) NSArray *results; // @synthesize results=_results;
@property(retain, nonatomic) NSString *input; // @synthesize input=_input;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) unsigned int domain; // @synthesize domain=_domain;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)parsecFeedbackFromSession:(id)arg1;
- (id)parsecFeedbackFromSession:(id)arg1 class:(Class)arg2;

@end

@interface SPFeedbackAbandonment : SPFeedback
{
    unsigned long long _reason;
}

@property(nonatomic) unsigned long long reason; // @synthesize reason=_reason;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)parsecFeedbackFromSession:(id)arg1;

@end

@interface SPFeedbackEngagement : SPFeedback
{
}

- (id)parsecFeedbackFromSession:(id)arg1;

@end

@interface SPFeedbackRender : SPFeedback
{
    double _triggerTimestamp;
}

@property(nonatomic) double triggerTimestamp; // @synthesize triggerTimestamp=_triggerTimestamp;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)parsecFeedbackFromSession:(id)arg1;

@end

@interface SPFeedbackResult : NSObject <NSSecureCoding>
{
    unsigned int _domain;
    int _flags;
    NSString *_fbr;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) NSString *fbr; // @synthesize fbr=_fbr;
@property(nonatomic) int flags; // @synthesize flags=_flags;
@property(nonatomic) unsigned int domain; // @synthesize domain=_domain;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
@property(readonly) NSString *parsecString;

@end

@interface SPFeedbackSearch : SPFeedback
{
}

- (id)parsecFeedbackFromSession:(id)arg1;

@end

@interface SPIndex : NSObject
{
    NSURL *_storeURL;
    _Bool _ubiquity;
    NSNumber *_maxID;
    NSManagedObjectContext *_managedObjectContext;
    NSManagedObjectModel *_managedObjectModel;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
}

- (void)dealloc;
- (id)initWithPath:(id)arg1 usingUbiquity:(_Bool)arg2;
- (id)persistentStoreCoordinator;
- (id)managedObjectModel;
- (id)managedObjectContext;
- (void)erase;
- (_Bool)save;
- (void)deleteTopHitsWithExtIDs:(id)arg1 displayIdentifier:(id)arg2 category:(id)arg3;
- (void)deleteRecords:(id)arg1;
- (void)deleteRecordsWithExtIDs:(id)arg1;
- (id)createTopHit;
- (id)createRecord;
- (id)_createObject:(id)arg1;
- (id)nextCXIDForEntityName:(id)arg1;
- (id)maxExistingCXIDForEntityName:(id)arg1;
- (id)valueForKey:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)topHitForExtID:(id)arg1 displayIdentifier:(id)arg2 category:(id)arg3;
- (id)recordsForExtIDs:(id)arg1;
- (id)recordForExtID:(id)arg1;
- (id)topHitsForCxIDs:(id)arg1;
- (id)recordsForCxIDs:(id)arg1;
- (id)_objectsForCXIDs:(id)arg1 entityName:(id)arg2;

@end

@interface SPMovie : SPProxyObject <PRSMovie>
{
}


// Remaining properties
@property(retain, nonatomic) PRSImage *image; // @dynamic image;
@property(retain, nonatomic) NSArray *more_glyphs; // @dynamic more_glyphs;
@property(retain, nonatomic) NSURL *punchout_uri; // @dynamic punchout_uri;
@property(retain, nonatomic) PRSImage *rt_glyph; // @dynamic rt_glyph;
@property(retain, nonatomic) NSString *rt_text; // @dynamic rt_text;
@property(retain, nonatomic) NSString *subtitle; // @dynamic subtitle;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSURL *url;
@end

@interface SPMovieListSection : SPSection <PRSMovieListSection>
{
}


// Remaining properties
@property(retain, nonatomic) NSArray *movies; // @dynamic movies;
@property(retain, nonatomic) NSString *subtitle; // @dynamic subtitle;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSURL *url;
@end

@interface SPPhoneticEncoder : NSObject
{
    NSString *_source;
    NSMutableString *_primary;
    NSMutableString *_alternate;
    int _idx;
    NSNumber *_slavoGermanic;
}

- (id)codesForString:(id)arg1;
- (_Bool)isAnyString:(id)arg1 atIndex:(int)arg2;
- (_Bool)isVowelAtIndex:(int)arg1;
- (void)addPrimary:(id)arg1 alternate:(id)arg2;
- (void)add:(id)arg1;
- (_Bool)isSlavoGermanic;

@end

@interface SPPrivacyViewController : UIViewController
{
}

- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (_Bool)shouldAutomaticallyForwardRotationMethods;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)loadView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SPRecord : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *actionURL; // @dynamic actionURL;
@property(retain, nonatomic) NSString *auxsubtitle; // @dynamic auxsubtitle;
@property(retain, nonatomic) NSString *auxtitle; // @dynamic auxtitle;
@property(retain, nonatomic) NSString *content; // @dynamic content;
@property(retain, nonatomic) NSNumber *cxid; // @dynamic cxid;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(retain, nonatomic) NSString *extid; // @dynamic extid;
@property(retain, nonatomic) NSNumber *generation; // @dynamic generation;
@property(retain, nonatomic) NSString *subtitle; // @dynamic subtitle;
@property(retain, nonatomic) NSString *summary; // @dynamic summary;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@end

@interface SPRowSection : SPSection <PRSRowSection>
{
}


// Remaining properties
@property(retain, nonatomic) NSString *key; // @dynamic key;
@property(nonatomic) _Bool key_nowrap; // @dynamic key_nowrap;
@property(nonatomic) long long key_weight; // @dynamic key_weight;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSURL *url;
@property(retain, nonatomic) NSString *value; // @dynamic value;
@property(retain, nonatomic) PRSImage *value_image; // @dynamic value_image;
@property(nonatomic) _Bool value_nowrap; // @dynamic value_nowrap;
@property(nonatomic) long long value_weight; // @dynamic value_weight;
@end

@interface SPSearchAgent : NSObject <SPDaemonQueryDelegate, MCProfileConnectionObserver>
{
    SPDaemonQueryToken *_currentToken;
    NSString *_prefixWithNoResults;
    NSMutableArray *_sections;
    NSArray *_searchDomains;
    unsigned int _resultCount;
    int _options;
    SPSearchResultSection *_topHitResultSection;
    SPSearchResultSection *_searchThroughSection;
    _Bool _searchThroughAllowed;
    _Bool _observersAdded;
    _Bool _queryComplete;
    NSObject<SPSearchAgentDelegate> *_delegate;
}

@property(nonatomic) NSObject<SPSearchAgentDelegate> *delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *searchDomains; // @synthesize searchDomains=_searchDomains;
@property(readonly, nonatomic) _Bool queryComplete; // @synthesize queryComplete=_queryComplete;
@property(readonly, nonatomic) unsigned int resultCount; // @synthesize resultCount=_resultCount;
@property(nonatomic) int options; // @synthesize options=_options;
- (void)dealloc;
- (id)init;
- (id)initWithOptions:(int)arg1;
- (void)internetDomainsChanged;
- (void)stuffChanged;
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;
- (void)searchDaemonQueryCompleted:(id)arg1;
- (void)searchDaemonQueryReset:(id)arg1;
- (void)searchDaemonQuery:(id)arg1 encounteredError:(id)arg2;
- (void)searchDaemonQuery:(id)arg1 addedResults:(id)arg2;
- (_Bool)cleanupObsoleteResults;
- (_Bool)setQueryString:(id)arg1;
- (_Bool)_shouldIgnoreQuery:(id)arg1;
- (id)queryString;
- (void)retrieveImageDataForIdentifier:(id)arg1 inSection:(id)arg2 preferredSize:(struct CGSize)arg3 completion:(CDUnknownBlockType)arg4;
- (void)retrieveImageDataForResult:(id)arg1 inSection:(id)arg2 preferredSize:(struct CGSize)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)hasResults;
- (void)updateSearchThroughWithString:(id)arg1;
- (void)removeSectionAtIndex:(unsigned int)arg1;
- (id)sectionAtIndex:(unsigned int)arg1;
- (unsigned long long)sectionCount;
- (void)clear;
- (void)invalidate;
- (void)addDeserializer:(id)arg1;
- (void)addSections:(id)arg1;
- (id)_indexesOfCompatibleSection:(id)arg1;
- (void)handleOptionsForNewSections:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SPSearchQuery : NSObject <NSCopying>
{
    unsigned long long _queryID;
    NSString *_searchString;
    _Bool _cancelled;
    _Bool _finished;
    NSArray *_searchDomains;
    int _nextDomainIndex;
    double _creationTime;
    double _cancellationTime;
    _Bool _extendedTime;
}

@property(nonatomic) _Bool extendedTime; // @synthesize extendedTime=_extendedTime;
@property(readonly, nonatomic) NSArray *searchDomains; // @synthesize searchDomains=_searchDomains;
@property(readonly, nonatomic) double cancellationTime; // @synthesize cancellationTime=_cancellationTime;
@property(readonly, nonatomic) double creationTime; // @synthesize creationTime=_creationTime;
@property(readonly, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithSearchString:(id)arg1;
- (id)initWithSearchString:(id)arg1 forSearchDomains:(id)arg2;
- (void)cancel;
@property(readonly, nonatomic) _Bool cancelled;

@end

@interface SPSearchResultDeserializer : PBDataReader
{
    unsigned long long _byteVector;
    _Bool _munmapAtDealloc;
}

- (void)dealloc;
- (id)initWithSerializer:(id)arg1;
- (id)initWithMallocRegion:(unsigned long long)arg1 length:(unsigned long long)arg2;
- (id)initWithMappedRegion:(unsigned long long)arg1 length:(unsigned long long)arg2;
- (_Bool)deserializeNextSection:(id *)arg1;

@end

@interface SPSearchResultDictEntry : PBCodable <NSCopying>
{
    NSData *_encodedValue;
    NSString *_key;
}

@property(retain, nonatomic) NSData *encodedValue; // @synthesize encodedValue=_encodedValue;
@property(retain, nonatomic) NSString *key; // @synthesize key=_key;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (void)dealloc;

@end

@interface SPSearchResultSection : PBCodable <NSCopying>
{
    NSString *_category;
    NSString *_displayIdentifier;
    unsigned int _domain;
    int _flags;
    NSString *_icon;
    NSMutableArray *_results;
    NSString *_scheme;
    struct {
        unsigned int domain:1;
        unsigned int flags:1;
    } _has;
}

@property(retain, nonatomic) NSMutableArray *results; // @synthesize results=_results;
@property(nonatomic) int flags; // @synthesize flags=_flags;
@property(retain, nonatomic) NSString *scheme; // @synthesize scheme=_scheme;
@property(retain, nonatomic) NSString *category; // @synthesize category=_category;
@property(retain, nonatomic) NSString *displayIdentifier; // @synthesize displayIdentifier=_displayIdentifier;
@property(retain, nonatomic) NSString *icon; // @synthesize icon=_icon;
@property(nonatomic) unsigned int domain; // @synthesize domain=_domain;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)copyTo:(id)arg1;
- (void)writeTo:(id)arg1;
- (_Bool)readFrom:(id)arg1;
- (id)dictionaryRepresentation;
- (id)description;
- (id)resultsAtIndex:(unsigned long long)arg1;
- (unsigned long long)resultsCount;
- (void)addResults:(id)arg1;
- (void)clearResults;
@property(nonatomic) _Bool hasFlags;
@property(readonly, nonatomic) _Bool hasScheme;
@property(readonly, nonatomic) _Bool hasCategory;
@property(readonly, nonatomic) _Bool hasDisplayIdentifier;
@property(readonly, nonatomic) _Bool hasIcon;
@property(nonatomic) _Bool hasDomain;
- (void)dealloc;
- (_Bool)hasEquivalentResults:(id)arg1;

@end

@interface SPSearchResultSerializer : NSObject
{
    unsigned long long _byteVector;
    unsigned int _byteVectorCnt;
    unsigned int _byteVectorCapacity;
    NSMutableArray *_sections;
    Class _lastResultClass;
    _Bool _respondsToTitleUTF8String;
    _Bool _respondsToSubtitleUTF8String;
    _Bool _respondsToAuxiliaryTitleUTF8String;
    _Bool _respondsToAuxiliarySubtitleUTF8String;
    _Bool _respondsToSummaryUTF8String;
    _Bool _respondsToIdentifier;
    _Bool _respondsToURL;
    _Bool _respondsToBadgeValue;
    _Bool _inProc;
    _Bool _completed;
}

@property(readonly, nonatomic) _Bool completed; // @synthesize completed=_completed;
- (unsigned long long)byteVector;
- (unsigned int)byteVectorCount;
- (void)serialize;
- (_Bool)appendResult:(id)arg1;
- (_Bool)appendSection:(id)arg1;
- (_Bool)appendResult:(id)arg1 toSection:(id)arg2;
- (unsigned long long)sectionCount;
- (id)_convertConformingResult:(id)arg1;
- (void)dealloc;
- (id)initWithInitialCapacity:(unsigned int)arg1;
- (id)initWithInitialCapacity:(unsigned int)arg1 inProc:(_Bool)arg2;
- (unsigned long long)_allocateSize:(unsigned long long)arg1;
- (id)init;

@end

@interface SPTitleSection : SPSection <PRSTitleSection>
{
}


// Remaining properties
@property(retain, nonatomic) NSString *subtitle; // @dynamic subtitle;
@property(retain, nonatomic) NSString *title; // @dynamic title;
@property(retain, nonatomic) NSString *type;
@property(retain, nonatomic) NSURL *url;
@end

@interface SPTopHit : NSManagedObject
{
}


// Remaining properties
@property(retain, nonatomic) NSString *category; // @dynamic category;
@property(retain, nonatomic) NSNumber *cxid; // @dynamic cxid;
@property(retain, nonatomic) NSString *displayIdentifier; // @dynamic displayIdentifier;
@property(retain, nonatomic) NSString *extid; // @dynamic extid;
@property(retain, nonatomic) NSNumber *lastChosen; // @dynamic lastChosen;
@property(retain, nonatomic) NSData *letterWeights; // @dynamic letterWeights;
@property(retain, nonatomic) NSNumber *movingAvg; // @dynamic movingAvg;
@end

@interface SPTopHitIndexer : SPContentIndexer
{
    CPSearchMatcher *_matcher;
    NSString *_queryString;
    NSArray *_searchDomains;
}

+ (void)preheat;
+ (id)indexerForTopHits;
- (void)dealloc;
- (id)init;
- (_Bool)nextSearchResults:(id *)arg1;
- (void)beginSearch:(id)arg1 domains:(id)arg2;
- (id)_fetchAndCleanQueryResults:(id)arg1;
- (void)setTopHit:(id)arg1 domain:(unsigned int)arg2 queryString:(id)arg3;
- (void)_setTopHitWithCurrentHit:(id)arg1 content:(id)arg2 stringIdentifier:(id)arg3 domain:(unsigned int)arg4 query:(id)arg5;
- (float)_calculateMovingAverageWithLastTime:(double)arg1 andLastAverage:(float)arg2;
- (void)removeIdentifier:(id)arg1;
- (void)setIdentifier:(id)arg1 forRecordDictionary:(id)arg2;
- (id)_recordForExternalID:(id)arg1 displayIdentifier:(id)arg2 category:(id)arg3;
- (id)_getDisplayIdentifierForDomain:(unsigned int)arg1;
- (id)_externalRecordForIdentifier:(id)arg1 domain:(unsigned int)arg2;

@end

@interface SPTopHitsCompoundResult : NSObject
{
    SPContentResult *_content;
    unsigned int _domain;
    NSString *_displayIdentifier;
}

- (void)dealloc;
- (id)displayIdentifier;
- (unsigned int)domain;
- (id)content;
- (id)initWithContent:(id)arg1 domain:(unsigned int)arg2 displayIdentifier:(id)arg3;

@end

@interface SPXPCConnection : NSObject
{
    NSObject<OS_xpc_object> *_conn;
    NSObject<OS_dispatch_queue> *_eventQueue;
    _Bool _ownsQueue;
    CDUnknownBlockType _messageHandler;
    CDUnknownBlockType _disconnectHandler;
    NSMutableSet *_outstandingMessages;
    _Bool _timeoutDisabled;
    id _context;
}

@property(nonatomic) _Bool timeoutDisabled; // @synthesize timeoutDisabled=_timeoutDisabled;
@property(retain, nonatomic) id context; // @synthesize context=_context;
@property(copy, nonatomic) CDUnknownBlockType disconnectHandler; // @synthesize disconnectHandler=_disconnectHandler;
@property(copy, nonatomic) CDUnknownBlockType messageHandler; // @synthesize messageHandler=_messageHandler;
- (long long)_outstandingMessages;
- (void)_removeMessage:(id)arg1;
- (void)_registerMessage:(id)arg1;
- (void)_setEventHandlerOnConnection:(id)arg1;
- (void)_handleXPCMessage:(id)arg1;
- (void)shutdown;
- (void)_handleXPCError:(id)arg1;
- (void)sendMessage:(id)arg1 withReply:(CDUnknownBlockType)arg2;
- (void)sendMessage:(id)arg1;
- (void)_sendMessage:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)eventQueue;
@property(readonly) NSString *serviceName;
- (void)dealloc;
- (id)initWithXPCConnection:(id)arg1;
- (id)initWithServiceName:(id)arg1 onQueue:(id)arg2;

@end

@interface SPXPCMessage : NSObject
{
    SPXPCConnection *_receivingConnection;
    NSString *_name;
    NSDictionary *_info;
    unsigned long long _shmemPtr;
    unsigned long long _shmemLen;
    NSObject<OS_xpc_object> *_x_reply_connection;
    NSObject<OS_xpc_object> *_x_message;
    NSObject<OS_xpc_object> *_x_reply;
}

@property(nonatomic) unsigned long long sharedMemoryLength; // @synthesize sharedMemoryLength=_shmemLen;
@property(nonatomic) unsigned long long sharedMemoryRegion; // @synthesize sharedMemoryRegion=_shmemPtr;
@property(copy, nonatomic) NSDictionary *info; // @synthesize info=_info;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (_Bool)needsReply;
- (void)sendReply:(id)arg1;
- (id)_createXPCMessage;
- (id)_initWithXPCMessage:(id)arg1 onConnection:(id)arg2;
- (void)dealloc;
- (id)initWithName:(id)arg1;

@end

@interface SPXPCServer : NSObject
{
    NSObject<OS_xpc_object> *_conn;
    NSMutableSet *_connections;
    NSMutableDictionary *_handlerMap;
    NSObject<OS_dispatch_queue> *_connectionsQueue;
    CDUnknownBlockType _disconnectHandler;
    CDUnknownBlockType _shutdownHandler;
    CDUnknownBlockType _defaultMessageHandler;
    NSObject<OS_dispatch_queue> *_eventQueue;
    NSObject<OS_dispatch_queue> *_timerQueue;
    NSObject<OS_dispatch_source> *_idleTimerSource;
    _Bool _timerHasFiredSinceLastMessage;
    _Bool _timeoutPending;
}

@property(copy, nonatomic) CDUnknownBlockType shutdownHandler; // @synthesize shutdownHandler=_shutdownHandler;
@property(copy, nonatomic) CDUnknownBlockType disconnectHandler; // @synthesize disconnectHandler=_disconnectHandler;
@property(copy, nonatomic) CDUnknownBlockType defaultMessageHandler; // @synthesize defaultMessageHandler=_defaultMessageHandler;
- (void)setIdleTimerInterval:(double)arg1;
- (void)_rescheduleIdleTimerSourceWithInterval:(double)arg1;
- (_Bool)_doingWork;
- (void)_resetMessageFlag;
- (_Bool)_runShutdownHandler;
- (void)setHandlerForMessageName:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initListenerWithServiceName:(id)arg1;
- (void)startListening;
- (id)initListenerWithServiceName:(id)arg1 onQueue:(id)arg2;
- (void)_handleNewConnection:(id)arg1;
- (CDUnknownBlockType)_handlerForMessageName:(id)arg1;
- (id)_highAvailabilityQueue;
- (_Bool)connectionsAreActive;

@end

