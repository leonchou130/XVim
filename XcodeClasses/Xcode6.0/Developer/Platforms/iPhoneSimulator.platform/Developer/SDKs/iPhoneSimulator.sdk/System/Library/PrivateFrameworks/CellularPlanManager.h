//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/CellularPlanManager.framework/CellularPlanManager
// UUID: 9B669C88-754E-3F47-BAE1-FFA5A850D093
//
//                           Arch: x86_64
//                Current version: 2260.0.0
//          Compatibility version: 1.0.0
//                 Source version: 2260.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol CTCellularPlanClient <NSObject>
- (void)getCurrentPlanType:(void (^)(long long))arg1;
- (void)openInternalUrlId:(long long)arg1;
- (void)getDeviceInfo:(void (^)(NSDictionary *))arg1;
- (void)retrieveRequestSettings:(void (^)(NSDictionary *, NSDictionary *, NSDictionary *))arg1;
- (void)fetchNewProfiles:(void (^)(_Bool, NSError *))arg1;
- (void)setUserInPurchaseFlow:(_Bool)arg1;
- (void)didPurchasePlanWithIccid:(NSString *)arg1 downloadProfile:(_Bool)arg2 cookieData:(NSData *)arg3;
- (void)setActivePlan:(NSData *)arg1 completion:(void (^)(_Bool, NSError *))arg2;
- (void)startPurchaseWithPlanId:(NSString *)arg1 sessionId:(NSString *)arg2 options:(NSDictionary *)arg3 completion:(void (^)(_Bool, NSError *))arg4;
- (void)signIdMapForSessionId:(NSString *)arg1 WithCompletion:(void (^)(NSString *, NSError *))arg2 latitude:(NSNumber *)arg3 longitude:(NSNumber *)arg4;
- (void)getSubscriptionDetailsWithServerSync:(_Bool)arg1;
- (void)isNewDataPlanCapable:(void (^)(_Bool))arg1;
@end

@protocol CTCellularPlanClientDelegate <NSObject>
- (void)subscriptionDetailsRequestDidFail:(NSError *)arg1;
- (void)subscriptionDetailsForCompletion:(NSArray *)arg1;
- (void)subscriptionDetailsDidUpdate:(NSArray *)arg1;
@end

@protocol CTCellularPlanValidating <NSObject>
+ (_Bool)validate:(id)arg1;
@end

@protocol CellularPlanVinylTest <NSObject>
- (void)triggerDownloadCheck;
- (void)getSerialNumber:(void (^)(NSData *))arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSXPCListenerDelegate <NSObject>

@optional
- (_Bool)listener:(NSXPCListener *)arg1 shouldAcceptNewConnection:(NSXPCConnection *)arg2;
@end

@interface CTCellularPlan : NSObject <NSCopying, NSSecureCoding>
{
    CTCellularPlanProfile *_profile;
    CTCellularPlanSubscription *_subscription;
    CTCellularPlanExtProperties *_extendedProperties;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) CTCellularPlanExtProperties *extendedProperties; // @synthesize extendedProperties=_extendedProperties;
@property(retain, nonatomic) CTCellularPlanSubscription *subscription; // @synthesize subscription=_subscription;
@property(retain, nonatomic) CTCellularPlanProfile *profile; // @synthesize profile=_profile;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSArray *dataUsage;
@property(readonly, nonatomic) NSString *accountURL;
@property(readonly, nonatomic) int accountStatus;
@property(readonly, nonatomic) int planStatus;
@property(readonly, nonatomic) NSString *planDescription;
@property(readonly, nonatomic) int planType;
@property(readonly, nonatomic) NSString *carrierName;
@property(readonly, nonatomic) double billingEndDate;
@property(readonly, nonatomic) double billingStartDate;
@property(readonly, nonatomic) double timestamp;
@property(readonly, nonatomic) _Bool autoRenew;
@property(readonly, nonatomic) NSString *iccid;
@property(readonly, nonatomic) int status;
@property(readonly, nonatomic) _Bool isSelected;
@property(readonly, nonatomic) NSData *profileId;
- (id)initWithProfile:(id)arg1 subscription:(id)arg2;
- (id)init;

@end

@interface CTCellularPlanArrayValidator : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanBoolValidator : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanDateParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(double *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanDictionaryValidator : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanError : NSObject
{
}

+ (id)errorForCode:(long long)arg1 withDescription:(id)arg2;
+ (id)errorForCode:(long long)arg1;

@end

@interface CTCellularPlanExtProperties : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _selected;
    int _status;
}

+ (id)statusAsString:(int)arg1;
+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(readonly, nonatomic) int status; // @synthesize status=_status;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithStatus:(int)arg1 selected:(_Bool)arg2;

@end

@interface CTCellularPlanJsonResponseParser : NSObject
{
}

+ (_Bool)parseConfirmPurchaseResponseData:(id)arg1 intoShouldDownloadProfile:(_Bool *)arg2 responseCode:(int *)arg3 responseText:(id *)arg4 error:(id *)arg5;
+ (_Bool)parseSubscriptionsResponseData:(id)arg1 intoSubscriptions:(id *)arg2 error:(id *)arg3;
+ (_Bool)parsePurchaseResponseData:(id)arg1 intoShouldDownloadProfile:(_Bool *)arg2 iccid:(id *)arg3 responseCode:(int *)arg4 responseText:(id *)arg5 error:(id *)arg6;
+ (_Bool)parseInitiatePurchaseResponseData:(id)arg1 intoShouldPurchase:(_Bool *)arg2 responseCode:(int *)arg3 responseText:(id *)arg4 buddyML:(id *)arg5 error:(id *)arg6;
+ (id)sessionIdFromJsonData:(id)arg1;
+ (id)sessionIdFromObject:(id)arg1;

@end

@interface CTCellularPlanLogger : NSObject
{
}

+ (void)setLogToConsole:(_Bool)arg1;
+ (void)setLogDelegate:(id)arg1;
+ (void)logLevel:(int)arg1 format:(id)arg2;

@end

@interface CTCellularPlanManager : NSObject <CTCellularPlanClientDelegate>
{
    NSMutableArray *_subscriptionCompletions;
    struct dispatch_queue_s *_queue;
    NSString *_lastSessionId;
    NSData *_cookieData;
    NSXPCConnection *_connection;
}

+ (id)sharedManager;
- (void)dealloc;
- (void)subscriptionDetailsRequestDidFail:(id)arg1;
- (void)subscriptionDetailsForCompletion:(id)arg1;
- (void)subscriptionDetailsDidUpdate:(id)arg1;
- (void)getCurrentPlanType:(CDUnknownBlockType)arg1;
- (void)openInternalUrlId:(long long)arg1;
- (void)getDeviceInfo:(CDUnknownBlockType)arg1;
- (void)setUserInPurchaseFlow:(_Bool)arg1;
- (void)didPurchasePlanWithIccid:(id)arg1 downloadProfile:(_Bool)arg2;
- (void)setActivePlan:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startPurchaseWithPlanId:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)startPurchaseWithPlanId:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_subscriptionDetailsWithCompletion:(CDUnknownBlockType)arg1 andServerSync:(_Bool)arg2;
- (void)subscriptionDetailsWithCompletion:(CDUnknownBlockType)arg1;
- (void)plansForRenewalWithCompletion:(CDUnknownBlockType)arg1;
- (void)plansWithCompletion:(CDUnknownBlockType)arg1 latitude:(id)arg2 longitude:(id)arg3;
- (void)plansWithCompletion:(CDUnknownBlockType)arg1;
- (void)_plansForRenewal:(_Bool)arg1 completion:(CDUnknownBlockType)arg2 latitude:(id)arg3 longitude:(id)arg4;
- (void)setIMEIPrefix:(id)arg1;
- (void)getIMEIPrefix:(CDUnknownBlockType)arg1;
- (void)connectionSettings:(CDUnknownBlockType)arg1;
- (void)isNewDataPlanCapable:(CDUnknownBlockType)arg1;
- (id)init;
- (void)_connect_sync;
- (void)_ensureConnected_sync;
- (void)_reconnect;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanNumberValidator : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanProfile : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _isSelected;
    _Bool _isBootstrap;
    NSData *_profileId;
    NSString *_iccid;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) NSString *iccid; // @synthesize iccid=_iccid;
@property(copy, nonatomic) NSData *profileId; // @synthesize profileId=_profileId;
@property(nonatomic) _Bool isBootstrap; // @synthesize isBootstrap=_isBootstrap;
@property(nonatomic) _Bool isSelected; // @synthesize isSelected=_isSelected;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithProfileId:(id)arg1 iccid:(id)arg2 selected:(_Bool)arg3 bootstrap:(_Bool)arg4;

@end

@interface CTCellularPlanRequest : NSObject <NSURLConnectionDataDelegate>
{
    int nextConnectionTypeIndex;
    NSArray *_responseCookies;
    NSArray *_requestCookies;
    NSDictionary *_internetSettings;
    NSDictionary *_bootstrapSettings;
    NSMutableData *_receivedData;
    NSMutableURLRequest *_request;
    NSURLResponse *_response;
    NSError *_error;
    struct dispatch_queue_s *_queue;
    CDUnknownBlockType _completionBlock;
    NSURLConnection *_connection;
}

+ (void)setBootstrapConnectionSettings:(id)arg1;
+ (void)setInternetConnectionSettings:(id)arg1;
+ (void)setRequestUrls:(id)arg1;
+ (void)initialize;
+ (_Bool)isRetriableErrorCode:(long long)arg1;
+ (id)connectionSettingsForServiceType:(long long)arg1;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) struct dispatch_queue_s *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData=_receivedData;
- (void)dealloc;
- (void)cancel;
- (void)connectionDidFinishLoading:(id)arg1;
@property(nonatomic) NSData *serializedCookies;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)startRequestWithReplyQueue:(struct dispatch_queue_s *)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_startRequestWithNextConnectionTypeOrFail;
- (_Bool)_isRetryableError:(id)arg1;
- (id)_connectionSettingsForNextConnectionType;
- (_Bool)_canTryAnotherConnectionType;
- (void)_callback;
- (id)initJsonPostWithUrl:(id)arg1 jsonData:(id)arg2 internetSettings:(id)arg3 bootstrapSettings:(id)arg4;
- (id)initJsonPostWithUrl:(id)arg1 jsonData:(id)arg2;
- (id)initPostWithUrl:(id)arg1;
- (id)initGetWithUrl:(id)arg1;
- (id)initWithUrl:(id)arg1 httpMethod:(id)arg2 httpHeaders:(id)arg3 httpBody:(id)arg4;
- (id)_initWithUrl:(id)arg1 httpMethod:(id)arg2 httpHeaders:(id)arg3 httpBody:(id)arg4 internetSettings:(id)arg5 bootstrapSettings:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanRequest (Factory)
+ (id)confirmPurchaseCompleteRequestWithIccid:(id)arg1 didFinishPurchase:(_Bool)arg2;
+ (id)newPurchaseWithSessionId:(id)arg1 receipt:(id)arg2 userId:(id)arg3 userName:(id)arg4;
+ (id)newInitiatePurchaseWithSessionId:(id)arg1 planId:(id)arg2;
+ (id)plansRequestWithSignIdMap:(id)arg1 renewalIccid:(id)arg2;
+ (id)subscriptionDetailsRequestWithIccids:(id)arg1 signIdMap:(id)arg2;
+ (id)createSessionRequest;
+ (void)load;
@end

__attribute__((visibility("hidden")))
@interface CTCellularPlanResponseCodeParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(int *)arg2 responseText:(id *)arg3 error:(id *)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanStringValidator : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanSubscription : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _autoRenew;
    int _planType;
    int _planStatus;
    int _accountStatus;
    NSString *_iccid;
    double _billingStartDate;
    double _billingEndDate;
    NSString *_carrierName;
    NSString *_planDescription;
    NSString *_accountURL;
    double _timestamp;
    NSArray *_dataUsage;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSArray *dataUsage; // @synthesize dataUsage=_dataUsage;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *accountURL; // @synthesize accountURL=_accountURL;
@property(readonly, nonatomic) int accountStatus; // @synthesize accountStatus=_accountStatus;
@property(readonly, nonatomic) int planStatus; // @synthesize planStatus=_planStatus;
@property(readonly, nonatomic) NSString *planDescription; // @synthesize planDescription=_planDescription;
@property(readonly, nonatomic) int planType; // @synthesize planType=_planType;
@property(readonly, nonatomic) NSString *carrierName; // @synthesize carrierName=_carrierName;
@property(readonly, nonatomic) double billingEndDate; // @synthesize billingEndDate=_billingEndDate;
@property(readonly, nonatomic) double billingStartDate; // @synthesize billingStartDate=_billingStartDate;
@property(readonly, nonatomic) _Bool autoRenew; // @synthesize autoRenew=_autoRenew;
@property(readonly, nonatomic) NSString *iccid; // @synthesize iccid=_iccid;
- (id)description;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithIccid:(id)arg1 autoRenew:(_Bool)arg2 billingStartDate:(double)arg3 billingEndDate:(double)arg4 carrierName:(id)arg5 planType:(int)arg6 planDescription:(id)arg7 planStatus:(int)arg8 accountStatus:(int)arg9 accountURL:(id)arg10 timestamp:(double)arg11 dataUsage:(id)arg12;

@end

__attribute__((visibility("hidden")))
@interface CTCellularPlanSubscriptionAccountStatusParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(int *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanSubscriptionDataUsage : NSObject <NSCopying, NSSecureCoding>
{
    double _dataUsed;
    double _dataCapacity;
    NSString *_dataCategory;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *dataCategory; // @synthesize dataCategory=_dataCategory;
@property(readonly, nonatomic) double dataCapacity; // @synthesize dataCapacity=_dataCapacity;
@property(readonly, nonatomic) double dataUsed; // @synthesize dataUsed=_dataUsed;
- (id)description;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCategory:(id)arg1 andDataUsed:(int)arg2 andDataCapacity:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface CTCellularPlanSubscriptionDataUsageParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CTCellularPlanSubscriptionParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CTCellularPlanSubscriptionStatusParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(int *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CTCellularPlanSubscriptionTypeParser : NSObject <CTCellularPlanValidating>
{
}

+ (_Bool)validate:(id)arg1;
+ (_Bool)validate:(id)arg1 parseTo:(int *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface CellularPlanVinylTestXPCServer : NSObject <NSXPCListenerDelegate>
{
    NSXPCListener *fXpcListener;
    NSMutableArray *fXpcConnections;
    id <CellularPlanVinylTest> fDelegate;
}

- (void)dealloc;
- (void)stop;
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)initWithQueue:(struct dispatch_queue_s *)arg1 andDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSXPCConnection (CellularPlanManager)
- (id)initVinylTestClient;
- (id)initCellularPlanDatabaseClient;
@end

@interface NSXPCListener (CellularPlanManager)
- (id)initVinylTestServer;
- (id)initCellularPlanDatabaseServer;
@end

