//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct SKUIEditorialStyle {
    long long alignment;
    long long bodyFontWeight;
    float bodyFontSize;
    float linkSpacing;
    long long titleFontWeight;
    float titleFontSize;
    float titleSpacing;
};

struct SKUIIndexPathRange {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct SKUILockupStyle {
    long long artworkSize;
    long long layoutStyle;
    unsigned long long visibleFields;
};

struct SKUIProductLockupLayoutSizing {
    struct CGSize _field1;
    struct CGSize _field2;
    struct CGSize _field3;
    struct CGSize _field4;
    struct CGSize _field5;
};

struct SKUIStackedImageConfiguration {
    struct UIOffset _field1;
    struct CGSize _field2;
    long long _field3;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double _field1;
    double _field2;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    double cellHeight;
    double cellWidth;
    double interItemSpacing;
} CDStruct_0a66a153;

typedef struct {
    struct CGSize iconSize;
    struct CGSize newsstandSize;
    struct CGSize newsstandSwooshSize;
    struct CGSize videoLockupIconSize;
    struct CGSize videoThumbnailSize;
    double horizontalPadding;
    double interItemSpacingMixed;
    double interItemSpacingNewsstand;
    double interItemSpacingVideoLockup;
} CDStruct_df87b2ae;

// Ambiguous groups
typedef struct {
    unsigned int dataSourceRespondsToCombinedEntry:1;
    unsigned int dataSourceRespondsToNumberOfSections:1;
    unsigned int delegateRespondsToDidSelectEntryAtIndexPath:1;
    unsigned int delegateRespondsToDidSelectBeyondBottom:1;
    unsigned int delegateRespondsToDidSelectBeyondTop:1;
} CDStruct_2ba00048;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
// UUID: 6FDB2F43-4655-3E0C-AD3F-499691BD3492
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 525.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol AAUIFamilySetupDelegate <UINavigationControllerDelegate>
- (void)familySetupViewController:(AAUIFamilySetupViewController *)arg1 didCompleteWithSuccess:(_Bool)arg2;
@end

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol IKAppContextDelegate <NSObject>
- (id <IKAppDeviceConfig>)deviceConfigForContext:(IKAppContext *)arg1;

@optional
- (void)appContext:(IKAppContext *)arg1 needsReloadWithUrgency:(unsigned long long)arg2;
- (void)appContext:(IKAppContext *)arg1 didStopWithOptions:(NSDictionary *)arg2;
- (void)appContext:(IKAppContext *)arg1 didFailWithError:(NSError *)arg2;
- (void)appContext:(IKAppContext *)arg1 didStartWithOptions:(NSDictionary *)arg2;
- (_Bool)appContext:(IKAppContext *)arg1 validateDOMDocument:(IKDOMDocument *)arg2 inContext:(JSContext *)arg3 error:(id *)arg4;
- (void)appContext:(IKAppContext *)arg1 evaluateAppJavaScriptInContext:(JSContext *)arg2;
- (id <IKAppNavigationController>)modalControllerForContext:(IKAppContext *)arg1;
- (IKAppTabBar *)tabBarForContext:(IKAppContext *)arg1;
- (id <IKAppNavigationController>)navigationControllerForContext:(IKAppContext *)arg1;
@end

@protocol IKAppDeviceConfig <NSObject>
- (NSString *)storeFrontCountryCode;
- (NSString *)systemLanguage;
- (NSTimeZone *)timeZone;
- (_Bool)isTimeZoneSet;
- (struct CGSize)screenSize;
- (unsigned long long)preferredVideoPreviewFormat;
- (unsigned long long)preferredVideoFormat;
@end

@protocol IKAppDocumentDelegate <NSObject>
- (void)documentDidUpdate:(IKAppDocument *)arg1;
- (void)documentNeedsUpdate:(IKAppDocument *)arg1;

@optional
- (NSArray *)impressionableViewElementsForDocument:(IKAppDocument *)arg1;
- (void)documentScrollToTop:(IKAppDocument *)arg1;
- (void)document:(IKAppDocument *)arg1 runTestWithName:(NSString *)arg2 options:(NSDictionary *)arg3;
@end

@protocol IKAppNavigationController <NSObject>
- (NSArray *)documents;
- (void)removeDocument:(IKAppDocument *)arg1;
- (void)popToRootDocument;
- (void)popToDocument:(IKAppDocument *)arg1;
- (void)popDocument;
- (void)replaceDocument:(IKAppDocument *)arg1 withDocument:(IKAppDocument *)arg2 options:(NSDictionary *)arg3;
- (void)insertDocument:(IKAppDocument *)arg1 beforeDocument:(IKAppDocument *)arg2 options:(NSDictionary *)arg3;
- (void)pushDocument:(IKAppDocument *)arg1 options:(NSDictionary *)arg2;

@optional
- (IKJSNavigationDocument *)navigationDocumentForDocument:(IKAppDocument *)arg1 inContext:(JSContext *)arg2;
- (void)clear;
@end

@protocol IKApplication <NSObject>
- (id <IKAppDataStoring>)vendorStorage;
- (id <IKAppDataStoring>)localStorage;
- (NSString *)vendorIdentifier;
- (NSString *)appIdentifier;
- (NSURL *)appJSURL;
- (_Bool)shouldIgnoreJSValidation;

@optional
- (IKAppDocument *)activeDocument;
- (NSDictionary *)appLaunchParams;
- (_Bool)appIsTrusted;
@end

@protocol IKDOMFeature <NSObject>
@property __weak IKAppContext *appContext;
@property(readonly, retain, nonatomic) NSString *featureName;
- (IKJSObject *)featureJSObject;
- (id)initWithFeatureName:(NSString *)arg1;

@optional
- (void)migrateToViewElement:(IKViewElement *)arg1;
@end

@protocol JSExport
@end

@protocol MFComposeHeaderViewDelegate <NSObject>

@optional
- (void)composeHeaderViewClicked:(MFComposeHeaderView *)arg1;
- (void)composeHeaderViewDidConfirmValue:(MFComposeHeaderView *)arg1;
- (void)composeHeaderViewDidChangeValue:(MFComposeHeaderView *)arg1;
@end

@protocol MFComposeRecipientViewDelegate <MFComposeHeaderViewDelegate>

@optional
- (_Bool)chooseSelectedSearchResultForComposeRecipientView:(MFComposeRecipientView *)arg1;
- (void)selectPreviousSearchResultForComposeRecipientView:(MFComposeRecipientView *)arg1;
- (void)selectNextSearchResultForComposeRecipientView:(MFComposeRecipientView *)arg1;
- (void)dismissSearchResultsForComposeRecipientView:(MFComposeRecipientView *)arg1;
- (_Bool)presentSearchResultsForComposeRecipientView:(MFComposeRecipientView *)arg1;
- (_Bool)composeRecipientViewShowingSearchResults:(MFComposeRecipientView *)arg1;
- (void)composeRecipientViewDidBecomeFirstResponder:(MFComposeRecipientView *)arg1;
- (void)composeRecipientViewReturnPressed:(MFComposeRecipientView *)arg1;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientView *)arg1 composeRecipientForRecord:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientView *)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientView *)arg1 composeRecipientForAddress:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 showCorecipients:(NSArray *)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 showPersonCardForRecipient:(MFComposeRecipient *)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 showPersonCardForAtom:(MFModernComposeRecipientAtom *)arg2;
- (void)composeRecipientViewDidFinishPickingRecipient:(MFComposeRecipientView *)arg1;
- (void)composeRecipientViewRequestAddRecipient:(MFComposeRecipientView *)arg1;
- (_Bool)recipientViewShouldIgnoreFirstResponderChanges:(MFComposeRecipientView *)arg1;
- (void)recipientViewDidResignFirstResponder:(MFComposeRecipientView *)arg1;
- (void)recipientViewDidBecomeFirstResponder:(MFComposeRecipientView *)arg1;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 textDidChange:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 didChangeSize:(struct CGSize)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 didReplaceRecipients:(NSArray *)arg2 withRecipients:(NSArray *)arg3;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 didRemoveRecipient:(MFComposeRecipient *)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 didFinishEnteringAddress:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientView *)arg1 didAddRecipient:(MFComposeRecipient *)arg2;
@end

@protocol MFContactsSearchConsumer <NSObject>
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(NSNumber *)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(NSArray *)arg1 type:(unsigned long long)arg2 taskID:(NSNumber *)arg3;
@end

@protocol MPUStackViewDataSource <NSObject>
- (void)stackView:(MPUStackView *)arg1 didCreateItem:(MPUStackItemView *)arg2;
- (void)stackView:(MPUStackView *)arg1 applyAttributesToItem:(MPUStackItemView *)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(MPUStackView *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol PKAddPassesViewControllerDelegate <NSObject>

@optional
- (void)addPassesViewControllerDidFinish:(PKAddPassesViewController *)arg1;
@end

@protocol SKComposeReviewDelegate <NSObject>

@optional
- (void)reviewComposeViewControllerDidFinish:(SKComposeReviewViewController *)arg1;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol SKUIAccountButtonsDelegate <NSObject>

@optional
- (void)accountButtonsViewControllerDidSignOut:(SKUIAccountButtonsViewController *)arg1;
- (void)accountButtonsViewControllerDidSignIn:(SKUIAccountButtonsViewController *)arg1;
@end

@protocol SKUIArtworkRequestDelegate <NSObject>

@optional
- (void)artworkRequest:(SKUIArtworkRequest *)arg1 didLoadImage:(UIImage *)arg2;
@end

@protocol SKUIBannerViewDelegate <NSObject>

@optional
- (void)bannerView:(SKUIBannerViewController *)arg1 didFailWithError:(NSError *)arg2;
- (void)bannerViewDidClose:(SKUIBannerViewController *)arg1;
@end

@protocol SKUICacheCoding <NSObject>

@optional
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(NSDictionary *)arg1;
@end

@protocol SKUICachedLayout <NSObject>
- (id)initWithLayoutRequest:(id <SKUILayoutRequest>)arg1;
@end

@protocol SKUICategoryArtworkLoaderObserver <NSObject>

@optional
- (void)categoryArtworkLoader:(SKUICategoryArtworkLoader *)arg1 didLoadImage:(UIImage *)arg2 forCategory:(SKUICategory *)arg3;
@end

@protocol SKUICategoryControllerDelegate <NSObject>

@optional
- (void)categoryController:(SKUICategoryController *)arg1 didSelectCategory:(SKUICategory *)arg2;
@end

@protocol SKUICategoryTableViewControllerDelegate <NSObject>

@optional
- (NSString *)metricsPageContextForCategoryTableView:(SKUICategoryTableViewController *)arg1;
- (void)categoryTableView:(SKUICategoryTableViewController *)arg1 didSelectCategory:(SKUICategory *)arg2;
@end

@protocol SKUICellLayoutParentView <NSObject>

@optional
- (void)setCellLayoutNeedsLayout;
@end

@protocol SKUIChartsViewControllerDelegate <NSObject>

@optional
- (void)chartsViewController:(UIViewController *)arg1 willDisplayItem:(SKUIItem *)arg2 atIndex:(long long)arg3 chartIndex:(long long)arg4;
- (void)chartsViewController:(UIViewController *)arg1 didSelectItem:(SKUIItem *)arg2 atIndex:(long long)arg3 chartIndex:(long long)arg4;
- (SKUIItemState *)chartsViewController:(UIViewController *)arg1 didConfirmItemOfferForItem:(SKUIItem *)arg2 atIndex:(long long)arg3 chartIndex:(long long)arg4;
@end

@protocol SKUIComposeReviewFormDelegate <NSObject>

@optional
- (void)composeReviewFormDidSubmit:(SKUIComposeReviewFormViewController *)arg1;
- (void)composeReviewFormDidCancel:(SKUIComposeReviewFormViewController *)arg1;
@end

@protocol SKUIComposeReviewHeaderDelegate <NSObject>
- (void)composeHeaderViewValuesDidChange:(SKUIComposeReviewHeaderView *)arg1;
- (void)composeHeaderViewValidityDidChange:(SKUIComposeReviewHeaderView *)arg1;
@end

@protocol SKUIComposeReviewViewDelegate <NSObject>
- (void)composeReviewViewValidityChanged:(SKUIComposeReviewView *)arg1;
@end

@protocol SKUIComposeTextFieldListViewDelegate <NSObject>
- (SKUIComposeTextFieldConfiguration *)textFieldList:(SKUIComposeTextFieldListView *)arg1 configurationForFieldAtIndex:(unsigned long long)arg2;
- (long long)numberOfFieldsInTextFieldList:(SKUIComposeTextFieldListView *)arg1;
- (long long)numberOfColumnsInTextFieldList:(SKUIComposeTextFieldListView *)arg1;

@optional
- (void)textFieldListValuesDidChange:(SKUIComposeTextFieldListView *)arg1;
- (void)textFieldListValidityDidChange:(SKUIComposeTextFieldListView *)arg1;
@end

@protocol SKUIContentRatingArtworkLoaderObserver <NSObject>

@optional
- (void)contentRatingArtworkLoader:(SKUIContentRatingArtworkResourceLoader *)arg1 didLoadImage:(UIImage *)arg2 forContentRating:(SKUIItemContentRating *)arg3;
@end

@protocol SKUIDOMFeature <IKDOMFeature>

@optional
+ (NSSet *)possibleFeatureNames;
+ (NSString *)featureName;
@end

@protocol SKUIDocumentViewController <NSObject>
- (void)documentDidUpdate:(IKAppDocument *)arg1;

@optional
- (NSArray *)impressionableViewElements;
- (void)delayPresentationIfNeededForParentViewController:(UIViewController *)arg1;
- (NSArray *)leftBarButtonItemsForDocument:(IKAppDocument *)arg1;
@end

@protocol SKUIDonationConfigurationObserver <NSObject>

@optional
- (void)donationConfigurationController:(SKUIDonationConfiguration *)arg1 didLoadLogoForCharity:(SKUIGiftCharity *)arg2;
@end

@protocol SKUIDownloadsChildViewControllerDelegate <NSObject>
- (UIImage *)childViewController:(UIViewController *)arg1 artworkForDownload:(SSDownload *)arg2;
- (void)childViewController:(UIViewController *)arg1 removeDownloads:(NSArray *)arg2;
- (void)childViewController:(UIViewController *)arg1 performActionForDownload:(SSDownload *)arg2;
@end

@protocol SKUIEditorialLinkViewDelegate <NSObject>

@optional
- (void)editorialLinkView:(SKUIEditorialLinkView *)arg1 didSelectLink:(SKUILink *)arg2;
@end

@protocol SKUIEmbeddedMediaViewDelegate <NSObject>

@optional
- (void)mediaView:(SKUIEmbeddedMediaView *)arg1 playbackStateDidChange:(long long)arg2;
@end

@protocol SKUIFlexibleSegmentedControlDelegate <NSObject>

@optional
- (void)segmentedControl:(SKUIFlexibleSegmentedControl *)arg1 showMoreListWithTitles:(NSArray *)arg2;
- (void)segmentedControl:(SKUIFlexibleSegmentedControl *)arg1 didSelectSegmentIndex:(long long)arg2;
@end

@protocol SKUIGallerySwooshViewControllerDelegate <SKUISwooshViewControllerDelegate>

@optional
- (void)swoosh:(SKUIGallerySwooshViewController *)arg1 didChangePlaybackState:(long long)arg2 forItemAtIndex:(long long)arg3;
@end

@protocol SKUIGiftConfigurationObserver <NSObject>

@optional
- (void)giftConfigurationController:(SKUIGiftConfiguration *)arg1 didLoadLogoForCharity:(SKUIGiftCharity *)arg2;
- (void)giftConfigurationController:(SKUIGiftConfiguration *)arg1 didLoadImageForTheme:(SKUIGiftTheme *)arg2;
@end

@protocol SKUIGiftContactSearchDelegate <NSObject>

@optional
- (void)searchControllerDidFinishSearch:(SKUIGiftContactSearchController *)arg1;
- (void)searchController:(SKUIGiftContactSearchController *)arg1 didSelectRecipient:(MFComposeRecipient *)arg2;
@end

@protocol SKUIGiftViewControllerDelegate <NSObject>

@optional
- (void)giftViewController:(SKUIGiftViewController *)arg1 didFinishWithResult:(_Bool)arg2;
@end

@protocol SKUIIPadProductPageDelegate <NSObject>

@optional
- (void)iPadProductPageCannotOpen:(SKUIIPadProductPageViewController *)arg1;
- (void)iPadProductPage:(SKUIIPadProductPageViewController *)arg1 openURL:(NSURL *)arg2 viewControllerBlock:(UIViewController * (^)(void))arg3;
- (void)iPadProductPage:(SKUIIPadProductPageViewController *)arg1 openItem:(SKUIItem *)arg2;
@end

@protocol SKUIIPadSearchHeaderViewDelegate <NSObject>

@optional
- (void)searchHeaderViewDidUpdateFacetSelections:(SKUIIPadSearchHeaderView *)arg1 facetIndex:(long long)arg2 listIndex:(long long)arg3;
@end

@protocol SKUIIPhoneProductPageDelegate <NSObject>

@optional
- (_Bool)iPhoneProductPage:(SKUIIPhoneProductPageViewController *)arg1 shouldOpenURL:(NSURL *)arg2;
- (_Bool)iPhoneProductPage:(SKUIIPhoneProductPageViewController *)arg1 shouldOpenItem:(SKUIItem *)arg2;
@end

@protocol SKUIIndexBarControlControllerDataSource <NSObject>
- (SKUIIndexBarEntryDescriptor *)indexBarControlController:(SKUIIndexBarControlController *)arg1 entryDescriptorAtIndexPath:(NSIndexPath *)arg2;
- (long long)indexBarControlController:(SKUIIndexBarControlController *)arg1 numberOfEntryDescriptorsInSection:(long long)arg2;

@optional
- (long long)numberOfSectionsInIndexBarControlController:(SKUIIndexBarControlController *)arg1;
- (SKUIIndexBarEntryDescriptor *)combinedEntryDescriptorForIndexBarControlController:(SKUIIndexBarControlController *)arg1;
@end

@protocol SKUIIndexBarControlControllerDelegate <NSObject>

@optional
- (void)indexBarControlControllerDidSelectBeyondTop:(SKUIIndexBarControlController *)arg1;
- (void)indexBarControlControllerDidSelectBeyondBottom:(SKUIIndexBarControlController *)arg1;
- (void)indexBarControlController:(SKUIIndexBarControlController *)arg1 didSelectEntryDescriptorAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol SKUIIndexBarControlDataSource <NSObject>
- (SKUIIndexBarEntry *)indexBarControl:(SKUIIndexBarControl *)arg1 entryAtIndexPath:(NSIndexPath *)arg2;
- (long long)indexBarControl:(SKUIIndexBarControl *)arg1 numberOfEntriesInSection:(long long)arg2;

@optional
- (long long)numberOfSectionsInIndexBarControl:(SKUIIndexBarControl *)arg1;
- (SKUIIndexBarEntry *)combinedEntryForIndexBarControl:(SKUIIndexBarControl *)arg1;
@end

@protocol SKUIIndexBarControlDelegate <NSObject>

@optional
- (void)indexBarControlDidSelectBeyondTop:(SKUIIndexBarControl *)arg1;
- (void)indexBarControlDidSelectBeyondBottom:(SKUIIndexBarControl *)arg1;
- (void)indexBarControl:(SKUIIndexBarControl *)arg1 didSelectEntryAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol SKUIIndexBarEntryListControllerDelegate <NSObject>
- (void)indexBarEntryListControllerDidInvalidate:(SKUIIndexBarEntryListController *)arg1;
@end

@protocol SKUIItemCollectionDelegate <NSObject>
- (struct _NSRange)visibleItemRangeForItemCollectionController:(SKUIItemCollectionController *)arg1;
- (struct _NSRange)itemCollectionController:(SKUIItemCollectionController *)arg1 itemPageRangeForOffset:(struct CGPoint)arg2;
- (SKUIItemCellLayout *)itemCollectionController:(SKUIItemCollectionController *)arg1 cellLayoutForItemIndex:(long long)arg2;

@optional
- (_Bool)shouldCacheAheadWhenIdleForItemCollectionController:(SKUIItemCollectionController *)arg1;
- (SKUIScreenshot *)itemCollectionController:(SKUIItemCollectionController *)arg1 screenshotForItem:(SKUIItem *)arg2;
- (void)itemCollectionController:(SKUIItemCollectionController *)arg1 applyScreenshotImage:(UIImage *)arg2 toCellLayout:(SKUIItemCellLayout *)arg3;
@end

@protocol SKUIItemListTableDelegate <NSObject>

@optional
- (void)itemListWillBeginDragging:(SKUIItemListTableViewController *)arg1;
- (void)itemList:(SKUIItemListTableViewController *)arg1 willDisplayCellForItem:(SKUIItem *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (void)itemList:(SKUIItemListTableViewController *)arg1 didRemoveItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)itemList:(SKUIItemListTableViewController *)arg1 canRemoveItemAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)itemList:(SKUIItemListTableViewController *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (SKUIItemState *)itemList:(SKUIItemListTableViewController *)arg1 didConfirmItemOfferForItem:(SKUIItem *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (void)itemList:(SKUIItemListTableViewController *)arg1 didDeselectItem:(SKUIItem *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (void)itemList:(SKUIItemListTableViewController *)arg1 didSelectItem:(SKUIItem *)arg2 atIndexPath:(NSIndexPath *)arg3;
@end

@protocol SKUIItemOfferButtonDelegate <NSObject>

@optional
- (void)itemOfferButtonWillAnimateTransition:(SKUIItemOfferButton *)arg1;
- (void)itemOfferButtonDidAnimateTransition:(SKUIItemOfferButton *)arg1;
@end

@protocol SKUIItemRequestDelegate <NSObject>

@optional
- (void)itemRequest:(SKUIItemResourceRequest *)arg1 didFinishWithItems:(NSDictionary *)arg2 invalidItemIdentifiers:(NSSet *)arg3;
- (void)itemRequest:(SKUIItemResourceRequest *)arg1 didFinishWithItems:(NSDictionary *)arg2;
@end

@protocol SKUIItemStateCenterObserver <NSObject>

@optional
- (void)itemStateCenterRestrictionsChanged:(SKUIItemStateCenter *)arg1;
- (void)itemStateCenterMediaLibrariesDidChange:(SKUIItemStateCenter *)arg1;
- (void)itemStateCenter:(SKUIItemStateCenter *)arg1 didFinishPurchases:(NSArray *)arg2;
- (void)itemStateCenter:(SKUIItemStateCenter *)arg1 itemStatesChanged:(NSSet *)arg2;
@end

@protocol SKUIJSFakeXMLHTTPRequest <JSExport>
@property(readonly, retain) NSString *statusText;
@property(readonly) unsigned int status;
@property(readonly) IKJSXMLDocument *responseXML;
@property(readonly) unsigned int responseType;
@property(readonly) NSString *responseText;
@property(readonly) id response;
@property(readonly) unsigned int readyState;
@property(readonly) NSDictionary *metrics;
- (NSString *)getResponseHeader:(NSString *)arg1;
- (NSString *)getAllResponseHeaders;
@end

@protocol SKUIJSITunesStore <JSExport>
- (void)setPreviewOverlay:(IKDOMDocument *)arg1:(NSDictionary *)arg2;
- (_Bool)resourceExists:(NSString *)arg1;
- (void)log:(NSString *)arg1;
- (void)loadGratisContent:(JSValue *)arg1;
- (void)launchICloudFamilySettings;
- (void)getBookSample:(NSDictionary *)arg1;
- (void)findLibraryItems:(NSArray *)arg1:(JSValue *)arg2:(NSDictionary *)arg3;
- (void)findApps:(NSArray *)arg1:(JSValue *)arg2:(NSDictionary *)arg3;
- (void)exit:(NSDictionary *)arg1;
- (void)download:(NSDictionary *)arg1;
- (void)attemptLocalAskToBuyApproval:(NSNumber *)arg1;
- (void)approveInPerson:(NSNumber *)arg1:(JSValue *)arg2;
- (void)buy:(NSDictionary *)arg1;
@end

@protocol SKUIJSModalDocumentController <JSExport>
@property(readonly, retain, nonatomic) NSArray *documents;
- (void)replaceDocument:(IKDOMDocument *)arg1:(IKDOMDocument *)arg2:(NSDictionary *)arg3;
- (void)pushDocument:(IKDOMDocument *)arg1:(NSDictionary *)arg2;
- (void)popToDocument:(IKDOMDocument *)arg1;
- (void)popDocument;
@end

@protocol SKUIJSTabBar <JSExport>
@property(readonly, nonatomic) SKUIJSTabBarItem *transientTab;
@property(readonly, nonatomic) NSArray *tabs;
@property(retain, nonatomic) SKUIJSTabBarItem *selectedTab;
@end

@protocol SKUIJSTabBarItem <JSExport>
@property(readonly, nonatomic) NSString *rootURL;
@property(readonly, nonatomic) IKJSNavigationDocument *navigationDocument;
@property(readonly, nonatomic) NSString *identifier;
@end

@protocol SKUILayoutCacheDelegate <NSObject>

@optional
- (void)layoutCacheDidFinishBatch:(SKUILayoutCache *)arg1;
@end

@protocol SKUILayoutRequest <NSCopying, NSObject>
@property(readonly, nonatomic) Class layoutClass;
@end

@protocol SKUILibraryInterface <NSObject>
- (SKUILibraryItemState *)stateForLibraryItem:(SKUILibraryItem *)arg1;
- (void)enumerateStatesForLibraryItems:(NSSet *)arg1 usingBlock:(void (^)(SKUILibraryItem *, SKUILibraryItemState *, _Bool *))arg2;

@optional
- (_Bool)performActionForLibraryItem:(SKUILibraryItem *)arg1;
- (NSSet *)exposedPlatformItemKinds;
@end

@protocol SKUIMenuPopoverDelegate <NSObject>

@optional
- (void)menuPopover:(SKUIMenuPopoverController *)arg1 willRepositionToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)menuPopover:(SKUIMenuPopoverController *)arg1 didSelectMenuItemAtIndex:(long long)arg2;
- (void)menuPopoverDidCancel:(SKUIMenuPopoverController *)arg1;
@end

@protocol SKUIMenuViewControllerDelegate <NSObject>

@optional
- (void)menuViewController:(SKUIMenuViewController *)arg1 didSelectItemAtIndex:(long long)arg2;
@end

@protocol SKUIMessageBannerDelegate <NSObject>
- (void)askPermissionBannerDidSelect:(SKUIMessageBanner *)arg1;

@optional
- (void)askPermissionBannerDidClear:(SKUIMessageBanner *)arg1;
@end

@protocol SKUIMetricsViewController <NSObject>

@optional
- (SKUIMetricsController *)activeMetricsController;
@end

@protocol SKUIMissingItemDelegate <NSObject>

@optional
- (void)missingItemLoader:(SKUIMissingItemLoader *)arg1 didLoadItems:(NSDictionary *)arg2 invalidItemIdentifiers:(NSSet *)arg3;
@end

@protocol SKUIModalDocumentDelegate <NSObject>

@optional
- (void)modalDocumentControllerDidFinish:(SKUIModalDocumentController *)arg1;
- (long long)modalDocumentController:(SKUIModalDocumentController *)arg1 barStyleForStackItem:(SKUIDocumentStackItem *)arg2;
@end

@protocol SKUIModalSourceViewProvider <NSObject>
- (void)getModalSourceViewForElementIdentifier:(NSString *)arg1 completionBlock:(void (^)(SKUIModalSourceViewProvider *))arg2;
@end

@protocol SKUIMoreNavigationControllerDelegate <NSObject>

@optional
- (void)moreNavigationController:(SKUIMoreNavigationController *)arg1 didSelectItemAtIndex:(long long)arg2;
@end

@protocol SKUINavigationDocumentDelegate <NSObject>

@optional
- (void)navigationDocumentStackDidChange:(SKUINavigationDocumentController *)arg1;
@end

@protocol SKUINavigationPaletteProvider <NSObject>
@property(readonly, nonatomic) UIView *navigationPaletteView;
@end

@protocol SKUINetworkErrorDelegate <NSObject>

@optional
- (void)networkErrorViewControllerInvalidated:(SKUINetworkErrorViewController *)arg1;
@end

@protocol SKUIOfferViewDelegate <NSObject>

@optional
- (void)offerViewWillAnimateTransition:(SKUIOfferView *)arg1;
- (void)offerViewDidAnimateTransition:(SKUIOfferView *)arg1;
- (_Bool)offerViewAnimateTransition:(SKUIOfferView *)arg1;
@end

@protocol SKUIPassbookLoaderDelegate <NSObject>
- (UIViewController *)presentationViewControllerForPassbookLoader:(SKUIPassbookLoader *)arg1;

@optional
- (void)passbookLoaderDidFinish:(SKUIPassbookLoader *)arg1;
@end

@protocol SKUIPerspectiveView <NSObject>
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(UIView *)arg1;
@end

@protocol SKUIPopupMenuDelegate <NSObject>

@optional
- (void)popupMenuHeader:(SKUIPopupMenuHeaderView *)arg1 didSelectMenuItemAtIndex:(long long)arg2;
@end

@protocol SKUIPreviewContainerView <NSObject>
- (void)togglePreviewPlaybackAnimated:(_Bool)arg1;
- (void)showPreviewProgressWithStatus:(SUPlayerStatus *)arg1 animated:(_Bool)arg2;
- (void)hidePreviewProgressAnimated:(_Bool)arg1;
@end

@protocol SKUIProductPageChildViewController <NSObject>
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController;
@property(readonly, nonatomic) UIScrollView *scrollView;
@end

@protocol SKUIProductPageChildViewControllerDelegate <NSObject>
- (struct CGPoint)topContentOffset;
- (void)productPageChildViewControllerDidLoad:(id <SKUIProductPageChildViewController>)arg1;
- (void)productPageChildViewControllerDidScroll:(id <SKUIProductPageChildViewController>)arg1;
- (void)productPageChildViewControllerDidLoadScrollView:(id <SKUIProductPageChildViewController>)arg1;
- (void)productPageChildOpenURL:(NSURL *)arg1 viewControllerBlock:(UIViewController * (^)(void))arg2;
- (void)productPageChildOpenItem:(SKUIItem *)arg1;
@end

@protocol SKUIProductPageHeaderViewDelegate <NSObject>

@optional
- (SKUIMetricsController *)metricsControllerForProductPageHeader:(SKUIProductPageHeaderViewController *)arg1;
- (void)productPageHeaderView:(SKUIProductPageHeaderViewController *)arg1 didReloadItemOffer:(SKUIItemOffer *)arg2;
- (void)productPageHeaderViewDidWantAskPermissionBanner:(SKUIProductPageHeaderViewController *)arg1;
- (void)productPageHeaderView:(SKUIProductPageHeaderViewController *)arg1 didSelectURL:(NSURL *)arg2;
- (void)productPageHeaderView:(SKUIProductPageHeaderViewController *)arg1 didSelectSectionIndex:(long long)arg2;
@end

@protocol SKUIProductPageOverlayDelegate <NSObject>

@optional
- (void)productPageOverlayDidDismiss:(SKUIProductPageOverlayController *)arg1 toPresentViewController:(UIViewController *)arg2;
- (void)productPageOverlayDidDismiss:(SKUIProductPageOverlayController *)arg1;
- (UIView *)productPageOverlay:(SKUIProductPageOverlayController *)arg1 flipSourceViewToPresentItem:(SKUIItem *)arg2;
- (UIView *)productPageOverlay:(SKUIProductPageOverlayController *)arg1 flipSourceViewToDismissItem:(SKUIItem *)arg2;
@end

@protocol SKUIQuicklinksViewControllerDelegate <NSObject>

@optional
- (void)quicklinksViewController:(SKUIQuicklinksViewController *)arg1 didSelectLink:(SKUILink *)arg2 atIndex:(long long)arg3;
@end

@protocol SKUIRedeemResultsViewDelegate <NSObject>
- (void)redeemResultsView:(SKUIRedeemResultsView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol SKUIResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoaderDidIdle:(SKUIResourceLoader *)arg1;
@end

@protocol SKUIReviewsFacebookViewControllerDelegate <NSObject>

@optional
- (void)reviewsFacebookViewControllerDidChange:(SKUIReviewsFacebookViewController *)arg1;
@end

@protocol SKUIScreenshotsDelegate <NSObject>

@optional
- (void)screenshotsWillBeginDragging:(SKUIScreenshotsViewController *)arg1;
@end

@protocol SKUISearchChildViewControllerDelegate <NSObject>

@optional
- (void)searchChildViewControllerDidChangeFacetSelections:(UIViewController *)arg1 withMetricsEvent:(SSMetricsSearchEvent *)arg2;
- (void)searchChildViewController:(UIViewController *)arg1 didSelectSearchTerm:(NSString *)arg2;
- (void)searchChildViewControllerDidSelectRelatedBackButton:(UIViewController *)arg1 withMetricsEvent:(SSMetricsSearchEvent *)arg2;
- (void)searchChildViewController:(UIViewController *)arg1 didSelectRelatedQuery:(SKUISearchRelatedQuery *)arg2 withMetricsEvent:(SSMetricsSearchEvent *)arg3;
- (void)searchChildViewController:(UIViewController *)arg1 didSelectEditorial:(SKUISearchEditorialResult *)arg2;
- (void)searchChildViewController:(UIViewController *)arg1 didSelectItem:(SKUIItem *)arg2;
@end

@protocol SKUISearchFieldDelegate <NSObject>

@optional
- (_Bool)searchFieldControllerShouldBeginEditing:(SKUISearchFieldController *)arg1;
- (void)searchFieldController:(SKUISearchFieldController *)arg1 searchBarDidChangeText:(NSString *)arg2;
- (void)searchFieldController:(SKUISearchFieldController *)arg1 requestSearchWithSearchTerm:(NSString *)arg2 metricsEvent:(SSMetricsSearchEvent *)arg3;
- (void)searchFieldController:(SKUISearchFieldController *)arg1 requestSearchWithURL:(NSURL *)arg2 metricsEvent:(SSMetricsSearchEvent *)arg3;
- (void)searchFieldController:(SKUISearchFieldController *)arg1 requestSearch:(SKUISearchRequest *)arg2;
@end

@protocol SKUISearchRelatedViewDelegate <NSObject>
- (void)searchRelatedViewDidSelectBackButton:(SKUISearchRelatedView *)arg1;
- (void)searchRelatedView:(SKUISearchRelatedView *)arg1 didSelectRelatedQueryAtIndex:(long long)arg2;
@end

@protocol SKUISearchResultGroupControllerDelegate <NSObject>
- (void)searchResultGroupController:(SKUISearchResultGroupController *)arg1 didLoadArtworkAtIndex:(unsigned long long)arg2;
- (void)searchResultGroupController:(SKUISearchResultGroupController *)arg1 didLoadEntityAtIndexes:(NSIndexSet *)arg2 removedEntityAtIndexes:(NSIndexSet *)arg3;
@end

@protocol SKUISlideshowItemViewControllerDelegate <NSObject>
- (void)slideshowItemViewControllerDidDismissWithPinchGesture:(SKUISlideshowItemViewController *)arg1 ratio:(double)arg2;
- (void)slideshowItemViewControllerDidBeginPinchGesture:(SKUISlideshowItemViewController *)arg1;
@end

@protocol SKUISlideshowViewControllerDataSource <NSObject>
- (long long)numberOfItemsInSlideshowViewController:(UIViewController *)arg1;

@optional
- (NSURL *)slideshowViewController:(UIViewController *)arg1 imageURLAtIndex:(long long)arg2 size:(struct CGSize *)arg3;
- (UIImage *)slideshowViewController:(UIViewController *)arg1 imageAtIndex:(long long)arg2;
@end

@protocol SKUISlideshowViewControllerDelegate <NSObject>

@optional
- (void)slideshowViewControllerDidFinish:(UIViewController *)arg1;
- (void)slideshowViewController:(UIViewController *)arg1 scrollToImageAtIndex:(long long)arg2;
- (UIImageView *)slideshowViewController:(UIViewController *)arg1 poppedImageViewAtIndex:(long long)arg2;
@end

@protocol SKUISortDataRequestDelegate <NSObject>

@optional
- (void)sortDataRequest:(SKUISortDataRequest *)arg1 didFinishWithLockups:(NSArray *)arg2;
@end

@protocol SKUIStackedBarDelegate <NSObject>

@optional
- (void)stackedBar:(SKUIStackedBar *)arg1 didSelectItemAtIndex:(long long)arg2;
@end

@protocol SKUIStorePageCollectionViewDelegate <UICollectionViewDelegateFlowLayout>

@optional
- (NSArray *)indexPathsForPinningItemsInCollectionView:(UICollectionView *)arg1 layout:(SKUIStorePageCollectionViewLayout *)arg2;
- (void)collectionView:(UICollectionView *)arg1 willBeginEditingItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 layout:(SKUIStorePageCollectionViewLayout *)arg2 willApplyLayoutAttributes:(SKUICollectionViewLayoutAttributes *)arg3;
- (long long)collectionView:(UICollectionView *)arg1 layout:(SKUIStorePageCollectionViewLayout *)arg2 pinningTransitionStyleForItemAtIndexPath:(NSIndexPath *)arg3;
- (long long)collectionView:(UICollectionView *)arg1 layout:(SKUIStorePageCollectionViewLayout *)arg2 pinningStyleForItemAtIndexPath:(NSIndexPath *)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(SKUIStorePageCollectionViewLayout *)arg2 pinningContentInsetForItemAtIndexPath:(NSIndexPath *)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 canScrollCellAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndEditingItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol SKUIStorePageCollectionViewLayout <NSObject>
@property(nonatomic) _Bool rendersWithPerspective;
@property(readonly, nonatomic) NSArray *indexPathsForPinningItems;
@property(copy, nonatomic) NSString *backdropGroupName;
- (NSArray *)pinnedLayoutAttributesForItemsInRect:(struct CGRect)arg1;
- (UICollectionViewLayoutAttributes *)layoutAttributesForUnpinnedItemAtIndexPath:(NSIndexPath *)arg1;
@end

@protocol SKUIStorePageSectionsDelegate <NSObject>

@optional
- (void)sectionsViewControllerDidDismissOverlayController:(SKUIStorePageSectionsViewController *)arg1;
- (_Bool)sectionsViewController:(SKUIStorePageSectionsViewController *)arg1 showStorePageForURL:(NSURL *)arg2;
- (_Bool)sectionsViewController:(SKUIStorePageSectionsViewController *)arg1 showProductPageForItem:(SKUIItem *)arg2;
- (void)sectionsViewControllerDidScroll:(SKUIStorePageSectionsViewController *)arg1;
@end

@protocol SKUISwooshViewControllerDelegate <NSObject>

@optional
- (void)swooshDidSelectSeeAll:(UIViewController *)arg1;
- (void)swoosh:(UIViewController *)arg1 didEndDisplayingCellAtIndex:(long long)arg2;
- (void)swoosh:(UIViewController *)arg1 willDisplayCellAtIndex:(long long)arg2;
- (void)swoosh:(UIViewController *)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)swoosh:(UIViewController *)arg1 didDoubleTapCellAtIndex:(long long)arg2;
- (UIImage *)swoosh:(UIViewController *)arg1 videoThumbnailForCellAtIndex:(long long)arg2;
- (UIImage *)swoosh:(UIViewController *)arg1 imageForCellAtIndex:(long long)arg2;
@end

@protocol SKUITabBarItemRootViewController <NSObject>
- (id)initWithTabBarItem:(SKUITabBarItem *)arg1;

@optional
- (void)showExternalURL:(SKUIURL *)arg1;
- (void)setClientContext:(SKUIClientContext *)arg1;
@end

@protocol SKUITableViewSectionDelegate <NSObject>

@optional
- (UITableView *)tableViewForTableViewSection:(SKUITableViewSection *)arg1;
@end

@protocol SKUITrackSwooshViewControllerDelegate <SKUISwooshViewControllerDelegate>

@optional
- (SKUIItemState *)swoosh:(SKUITrackSwooshViewController *)arg1 didConfirmItemOfferForItemAtIndex:(long long)arg2;
@end

@protocol SKUITrendingSearchPageViewDelegate <NSObject>
- (void)trendingSearchPageView:(SKUITrendingSearchPageView *)arg1 didSelectSearch:(SKUITrendingSearch *)arg2;

@optional
- (NSURL *)URLForTrendingSearchPageView:(SKUITrendingSearchPageView *)arg1;
@end

@protocol SKUIURLResolverDelegate <NSObject>
- (void)URLResolver:(SKUIURLResolver *)arg1 showURL:(SKUIURL *)arg2 withTabIdentifier:(NSString *)arg3;
- (void)URLResolver:(SKUIURLResolver *)arg1 showTransientViewController:(UIViewController *)arg2;
- (UIViewController *)presentationViewControllerForURLResolver:(SKUIURLResolver *)arg1;

@optional
- (_Bool)URLResolver:(SKUIURLResolver *)arg1 shouldPerformDefaultActionForURL:(SKUIURL *)arg2;
- (void)URLResolver:(SKUIURLResolver *)arg1 didFinishWithResult:(_Bool)arg2;
@end

@protocol SKUIViewControllerTesting <NSObject>

@optional
- (_Bool)performTestWithName:(NSString *)arg1 options:(NSDictionary *)arg2;
@end

@protocol SKUIViewElementOfferButton <NSObject>
@property(nonatomic) __weak id <SKUIItemOfferButtonDelegate> itemOfferDelegate;
- (_Bool)setValuesUsingViewElement:(SKUIButtonViewElement *)arg1 itemState:(SKUIItemState *)arg2 clientContext:(SKUIClientContext *)arg3 animated:(_Bool)arg4;
@end

@protocol SKUIViewElementSlideshowDelegate <NSObject>

@optional
- (void)viewElementSlideshowWillDismiss:(SKUIViewElementSlideshowController *)arg1;
@end

@protocol SKUIViewElementView <NSObject>
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(SKUIViewElement *)arg2 context:(SKUIViewElementLayoutContext *)arg3;
+ (void)requestLayoutForViewElement:(SKUIViewElement *)arg1 width:(double)arg2 context:(SKUIViewElementLayoutContext *)arg3;
+ (struct CGSize)preferredSizeForViewElement:(SKUIViewElement *)arg1 context:(SKUIViewElementLayoutContext *)arg2;
+ (_Bool)prefetchResourcesForViewElement:(SKUIViewElement *)arg1 reason:(long long)arg2 context:(SKUIViewElementLayoutContext *)arg3;
- (UIView *)viewForElementIdentifier:(NSString *)arg1;
- (_Bool)updateWithItemState:(SKUIItemState *)arg1 context:(SKUIViewElementLayoutContext *)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(UIImage *)arg1 forArtworkRequest:(SKUIArtworkRequest *)arg2 context:(SKUIViewElementLayoutContext *)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(SKUIViewElement *)arg1 width:(double)arg2 context:(SKUIViewElementLayoutContext *)arg3;
@end

@protocol SKUIWishlistDelegate <NSObject>

@optional
- (void)wishlist:(SKUIWishlistViewController *)arg1 didSelectItem:(SKUIItem *)arg2 atIndexPath:(NSIndexPath *)arg3;
@end

@protocol SSDownloadManagerObserver <NSObject>

@optional
- (void)downloadManagerNetworkUsageDidChange:(SSDownloadManager *)arg1;
- (void)downloadManagerDownloadsDidChange:(SSDownloadManager *)arg1;
- (void)downloadManagerActiveDownloadsDidChange:(SSDownloadManager *)arg1;
- (void)downloadManager:(SSDownloadManager *)arg1 downloadStatesDidChange:(NSArray *)arg2;
@end

@protocol SSMetricsEventFieldProvider <NSObject>

@optional
- (id)valueForMetricsField:(NSString *)arg1;
@end

@protocol SUClientInterfaceDelegate <NSObject>

@optional
- (SUTabBarController *)tabBarControllerForClientInterface:(SUClientInterface *)arg1;
- (SUScriptInterface *)scriptInterfaceForClientInterface:(SUClientInterface *)arg1;
- (SUPreviewOverlayViewController *)previewOverlayForClientInterface:(SUClientInterface *)arg1;
- (void)returnToLibraryForClientInterface:(SUClientInterface *)arg1;
- (void)clientInterface:(SUClientInterface *)arg1 setStatusBarStyle:(long long)arg2 animated:(_Bool)arg3;
- (void)clientInterface:(SUClientInterface *)arg1 setStatusBarHidden:(_Bool)arg2 withAnimation:(long long)arg3;
- (void)clientInterface:(SUClientInterface *)arg1 showPreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 hidePreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 presentDialog:(ISDialog *)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 exitStoreWithReason:(long long)arg2;
@end

@protocol SUClientInterfaceDelegatePrivate <SUClientInterfaceDelegate>

@optional
- (UIAlertView *)newAlertViewForClientInterface:(SUClientInterface *)arg1;
- (void)clientInterface:(SUClientInterface *)arg1 willPresentViewController:(UIViewController *)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 willDismissViewController:(UIViewController *)arg2;
- (void)clientInterface:(SUClientInterface *)arg1 dispatchXEvent:(NSDictionary *)arg2 completionBlock:(void (^)(_Bool))arg3;
- (void)clientInterface:(SUClientInterface *)arg1 dispatchOnPageResponseWithData:(NSData *)arg2 response:(NSHTTPURLResponse *)arg3;
@end

@protocol SUPurchaseManagerDelegate <NSObject>

@optional
- (SUPurchaseBatch *)purchaseManager:(SUPurchaseManager *)arg1 purchaseBatchForPurchases:(NSArray *)arg2;
- (SUPurchaseBatch *)purchaseManager:(SUPurchaseManager *)arg1 purchaseBatchForItems:(NSArray *)arg2;
- (void)purchaseManagerWillBeginUpdates:(SUPurchaseManager *)arg1;
- (void)purchaseManagerDidEndUpdates:(SUPurchaseManager *)arg1;
- (void)purchaseManager:(SUPurchaseManager *)arg1 didFinishPurchaseRequest:(SSPurchaseRequest *)arg2 withError:(NSError *)arg3;
- (void)purchaseManager:(SUPurchaseManager *)arg1 willAddPurchases:(NSArray *)arg2;
- (void)purchaseManager:(SUPurchaseManager *)arg1 failedToAddPurchases:(NSArray *)arg2;
- (void)purchaseManager:(SUPurchaseManager *)arg1 didAddPurchases:(NSArray *)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIGestureRecognizerDelegatePrivate <UIGestureRecognizerDelegate>

@optional
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 canBePreventedByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 canPreventGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)_gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPageViewControllerDataSource <NSObject>
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerAfterViewController:(UIViewController *)arg2;
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerBeforeViewController:(UIViewController *)arg2;

@optional
- (long long)presentationIndexForPageViewController:(UIPageViewController *)arg1;
- (long long)presentationCountForPageViewController:(UIPageViewController *)arg1;
@end

@protocol UIPageViewControllerDelegate <NSObject>

@optional
- (long long)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)arg1;
- (unsigned long long)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)arg1;
- (long long)pageViewController:(UIPageViewController *)arg1 spineLocationForInterfaceOrientation:(long long)arg2;
- (void)pageViewController:(UIPageViewController *)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(NSArray *)arg3 transitionCompleted:(_Bool)arg4;
- (void)pageViewController:(UIPageViewController *)arg1 willTransitionToViewControllers:(NSArray *)arg2;
@end

@protocol UIPickerViewDataSource <NSObject>
- (long long)pickerView:(UIPickerView *)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(UIPickerView *)arg1;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIPopoverControllerDelegate <NSObject>

@optional
- (void)popoverController:(UIPopoverController *)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(UIPopoverController *)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(UIPopoverController *)arg1;
@end

@protocol UIScrollViewAccessibilityDelegate <UIScrollViewDelegate>

@optional
- (NSString *)accessibilityScrollStatusForScrollView:(UIScrollView *)arg1;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchDisplayDelegate <NSObject>

@optional
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchScope:(long long)arg2;
- (_Bool)searchDisplayController:(UISearchDisplayController *)arg1 shouldReloadTableForSearchString:(NSString *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willHideSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willShowSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 willUnloadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayController:(UISearchDisplayController *)arg1 didLoadSearchResultsTableView:(UITableView *)arg2;
- (void)searchDisplayControllerDidEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillEndSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerDidBeginSearch:(UISearchDisplayController *)arg1;
- (void)searchDisplayControllerWillBeginSearch:(UISearchDisplayController *)arg1;
@end

@protocol UISplitViewControllerDelegate

@optional
- (_Bool)splitViewController:(UISplitViewController *)arg1 shouldHideViewController:(UIViewController *)arg2 inOrientation:(long long)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 popoverController:(UIPopoverController *)arg2 willPresentViewController:(UIViewController *)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 willShowViewController:(UIViewController *)arg2 invalidatingBarButtonItem:(UIBarButtonItem *)arg3;
- (void)splitViewController:(UISplitViewController *)arg1 willHideViewController:(UIViewController *)arg2 withBarButtonItem:(UIBarButtonItem *)arg3 forPopoverController:(UIPopoverController *)arg4;
- (long long)splitViewControllerPreferredInterfaceOrientationForPresentation:(UISplitViewController *)arg1;
- (unsigned long long)splitViewControllerSupportedInterfaceOrientations:(UISplitViewController *)arg1;
- (UIViewController *)splitViewController:(UISplitViewController *)arg1 separateSecondaryViewControllerFromPrimaryViewController:(UIViewController *)arg2;
- (_Bool)splitViewController:(UISplitViewController *)arg1 collapseSecondaryViewController:(UIViewController *)arg2 ontoPrimaryViewController:(UIViewController *)arg3;
- (UIViewController *)primaryViewControllerForExpandingSplitViewController:(UISplitViewController *)arg1;
- (UIViewController *)primaryViewControllerForCollapsingSplitViewController:(UISplitViewController *)arg1;
- (_Bool)splitViewController:(UISplitViewController *)arg1 showDetailViewController:(UIViewController *)arg2 sender:(id)arg3;
- (_Bool)splitViewController:(UISplitViewController *)arg1 showViewController:(UIViewController *)arg2 sender:(id)arg3;
- (long long)targetDisplayModeForActionInSplitViewController:(UISplitViewController *)arg1;
- (void)splitViewController:(UISplitViewController *)arg1 willChangeToDisplayMode:(long long)arg2;
@end

@protocol UITabBarControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)arg1 animationControllerForTransitionFromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)arg1;
- (void)tabBarController:(UITabBarController *)arg1 didEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willBeginCustomizingViewControllers:(NSArray *)arg2;
- (void)tabBarController:(UITabBarController *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabBarController:(UITabBarController *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextContentViewDelegate <NSObject>

@optional
- (void)textContentView:(UITextContentView *)arg1 didChangeSize:(struct CGSize)arg2;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldChangeSizeForContentSize:(struct CGSize)arg2;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldScrollForPendingContentSize:(struct CGSize)arg2;
- (void)textContentViewDidChangeSelection:(UITextContentView *)arg1;
- (void)textContentViewDidChange:(UITextContentView *)arg1;
- (_Bool)textContentView:(UITextContentView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textContentViewDidEndEditing:(UITextContentView *)arg1;
- (void)textContentViewDidBeginEditing:(UITextContentView *)arg1;
- (_Bool)textContentViewShouldEndEditing:(UITextContentView *)arg1;
- (_Bool)textContentViewShouldBeginEditing:(UITextContentView *)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerAnimatorTransitioning <UIViewControllerAnimatedTransitioning>
@end

@protocol UIViewControllerRestoration
+ (UIViewController *)viewControllerWithRestorationIdentifierPath:(NSArray *)arg1 coder:(NSCoder *)arg2;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@interface SKProductPageViewController : SUViewController <SKUIBannerViewDelegate, SKUIIPadProductPageDelegate, SKUIIPhoneProductPageDelegate, SUClientInterfaceDelegatePrivate, SUPurchaseManagerDelegate, SKUIItemStateCenterObserver>
{
    NSString *_additionalPurchaseParameters;
    NSString *_affiliateIdentifier;
    _Bool _askToBuy;
    SKUIBannerViewController *_bannerViewController;
    SKUIClientContext *_clientContext;
    id <SKProductPageViewControllerDelegatePrivate> _delegate;
    SUDialogManager *_dialogManager;
    SUBarButtonItem *_gotoStoreButtonItem;
    SUBarButtonItem *_rightBarButtonItem;
    SKUIIPadProductPageViewController *_ipadProductPageViewController;
    SKUIIPhoneProductPageViewController *_iphoneProductPageViewController;
    SKUIItemStateCenter *_itemStateCenter;
    SSMetricsPageEvent *_lastPageEvent;
    NSURL *_nativeURL;
    SUPreviewOverlayViewController *_previewOverlay;
    NSDictionary *_productParameters;
    SUPurchaseManager *_purchaseManager;
    _Bool _showsStoreButton;
    _Bool _showsRightBarButton;
    NSString *_rightBarButtonTitle;
    NSString *_promptString;
    long long _style;
    SKUIITunesStoreUIPageViewController *_storePageViewController;
    long long _urlBagType;
    NSString *_cancelButtonTitle;
}

+ (void)_validateURL:(id)arg1 withURLBag:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)_defaultClientIdentifier;
+ (id)_defaultClientInterface;
+ (void)getCanLoadWithURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property(nonatomic) _Bool askToBuy; // @synthesize askToBuy=_askToBuy;
@property(nonatomic) long long URLBagType; // @synthesize URLBagType=_urlBagType;
@property(nonatomic) _Bool showsStoreButton; // @synthesize showsStoreButton=_showsStoreButton;
@property(nonatomic) _Bool showsRightBarButton; // @synthesize showsRightBarButton=_showsRightBarButton;
@property(copy, nonatomic) NSString *rightBarButtonTitle; // @synthesize rightBarButtonTitle=_rightBarButtonTitle;
@property(copy, nonatomic) NSString *promptString; // @synthesize promptString=_promptString;
@property(nonatomic) long long productPageStyle; // @synthesize productPageStyle=_style;
@property(nonatomic) __weak id <SKProductPageViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *affiliateIdentifier; // @synthesize affiliateIdentifier=_affiliateIdentifier;
@property(copy, nonatomic) NSString *additionalPurchaseParameters; // @synthesize additionalPurchaseParameters=_additionalPurchaseParameters;
- (void).cxx_destruct;
- (void)_showProductPage:(id)arg1 pageEvent:(id)arg2;
- (void)_showPreviewOverlayAnimated:(_Bool)arg1;
- (void)_sendDidFailLoadWithError:(id)arg1;
- (void)_setResponse:(id)arg1 forProperties:(id)arg2 error:(id)arg3;
- (void)_reloadViews;
- (void)_reloadGotoStoreButton;
- (id)_previewOverlay;
- (id)_newRequestPropertiesWithRequest:(id)arg1;
- (void)_loadRequestForProductParameters;
- (void)_loadProductWithRequest:(id)arg1;
- (void)_loadClientContextWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)_failWithError:(id)arg1;
- (void)_showPageWithRequest:(id)arg1 animated:(_Bool)arg2;
- (void)_setShowsCancelButton:(_Bool)arg1;
- (void)_setClientContext:(id)arg1;
- (void)_sendDidFinishWithResult:(long long)arg1;
- (void)loadWithStorePageRequest:(id)arg1;
- (void)loadWithProductPage:(id)arg1;
- (void)_applicationWillEnterForeground;
- (void)_purchaseFinishedNotification:(id)arg1;
- (void)_purchaseFailedNotification:(id)arg1;
- (void)_rightBarButtonAction:(id)arg1;
- (void)_gotoStoreButtonAction:(id)arg1;
- (void)itemStateCenter:(id)arg1 didFinishPurchases:(id)arg2;
- (void)purchaseManager:(id)arg1 willAddPurchases:(id)arg2;
- (void)purchaseManager:(id)arg1 didFinishPurchaseRequest:(id)arg2 withError:(id)arg3;
- (id)scriptInterfaceForClientInterface:(id)arg1;
- (id)previewOverlayForClientInterface:(id)arg1;
- (void)clientInterface:(id)arg1 willPresentViewController:(id)arg2;
- (void)clientInterface:(id)arg1 willDismissViewController:(id)arg2;
- (void)clientInterface:(id)arg1 showPreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(id)arg1 setStatusBarStyle:(long long)arg2 animated:(_Bool)arg3;
- (void)clientInterface:(id)arg1 setStatusBarHidden:(_Bool)arg2 withAnimation:(long long)arg3;
- (void)clientInterface:(id)arg1 presentDialog:(id)arg2;
- (void)clientInterface:(id)arg1 hidePreviewOverlayAnimated:(_Bool)arg2;
- (void)clientInterface:(id)arg1 exitStoreWithReason:(long long)arg2;
- (void)iPadProductPage:(id)arg1 openURL:(id)arg2 viewControllerBlock:(CDUnknownBlockType)arg3;
- (void)iPadProductPage:(id)arg1 openItem:(id)arg2;
- (_Bool)iPhoneProductPage:(id)arg1 shouldOpenURL:(id)arg2;
- (_Bool)iPhoneProductPage:(id)arg1 shouldOpenItem:(id)arg2;
- (void)bannerViewDidClose:(id)arg1;
- (void)bannerView:(id)arg1 didFailWithError:(id)arg2;
- (void)setClientInterface:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)loadView;
- (void)storePage:(id)arg1 finishedWithSuccess:(_Bool)arg2;
- (id)cancelButtonTitle:(id)arg1;
@property(copy, nonatomic) NSDictionary *scriptContextDictionary;
- (void)loadProductWithRequest:(id)arg1;
- (void)loadProductWithParameters:(id)arg1;
- (void)dealloc;
- (id)initWithTabBarItem:(id)arg1;
- (id)initWithProductPageStyle:(long long)arg1;
- (id)init;
- (id)_initSKProductPageViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKScriptInterface : SUScriptInterface
{
    SKProductPageViewController *_parentProductPageViewController;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
@property(nonatomic) __weak SKProductPageViewController *parentProductPageViewController; // @synthesize parentProductPageViewController=_parentProductPageViewController;
- (void).cxx_destruct;
- (void)showStoreSheetWithRequest:(id)arg1 animated:(_Bool)arg2;
- (id)makeStoreSheetRequest;

@end

@interface SKScriptStoreSheetRequest : SUScriptObject
{
    long long _pageStyle;
    WebScriptObject *_productParameters;
    NSString *_productURL;
}

+ (void)initialize;
+ (id)webScriptNameForSelector:(SEL)arg1;
+ (id)webScriptNameForKey:(const char *)arg1;
- (void).cxx_destruct;
- (id)scriptAttributeKeys;
- (id)attributeKeys;
- (id)_safeValueForValue:(id)arg1;
@property(readonly) long long productPageStylePhone;
@property(readonly) long long productPageStylePad;
@property(readonly) long long productPageStyleBanner;
@property(readonly) long long productPageStyleAutomatic;
@property(retain) NSString *productURL;
@property(retain) WebScriptObject *productParameters;
@property long long productPageStyle;
- (id)_className;
- (id)newNativeStorePageRequest;

@end

@interface SKUIPageComponent : NSObject <SSMetricsEventFieldProvider>
{
    long long _metricsLocationPosition;
    SKUIViewElement *_viewElement;
}

@property(readonly, nonatomic) SKUIViewElement *viewElement; // @synthesize viewElement=_viewElement;
- (void)_setMetricsLocationPosition:(long long)arg1;
@property(nonatomic) long long metricsLocationPosition; // @synthesize metricsLocationPosition=_metricsLocationPosition;
- (void).cxx_destruct;
- (void)_enumerateMissingItemIdentifiersFromLockups:(id)arg1 startIndex:(long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)_enumerateMissingItemIdentifiersFromLinks:(id)arg1 startIndex:(long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)_enumerateMissingItemIdentifiersFromBricks:(id)arg1 startIndex:(long long)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)valueForMetricsField:(id)arg1;
@property(readonly, nonatomic) NSString *metricsElementName;
@property(readonly, nonatomic, getter=isMissingItemData) _Bool missingItemData;
- (void)enumerateMissingItemIdentifiersFromIndex:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long componentType;
- (id)initWithViewElement:(id)arg1;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIAccountButtonsComponent : SKUIPageComponent
{
    SKUILink *_ecommerceLink;
    _Bool _hidesTermsAndConditions;
}

@property(nonatomic) _Bool hidesTermsAndConditions; // @synthesize hidesTermsAndConditions=_hidesTermsAndConditions;
@property(retain, nonatomic) SKUILink *ECommerceLink; // @synthesize ECommerceLink=_ecommerceLink;
- (void).cxx_destruct;
- (long long)componentType;
- (id)initWithViewElement:(id)arg1;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIAccountButtonsViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIStorePageSection : NSObject <SKUIProductPageOverlayDelegate>
{
    _Bool _bottomSection;
    SKUIPageComponent *_component;
    SKUIStorePageSectionContext *_context;
    SKUIProductPageOverlayController *_overlayController;
    long long _sectionIndex;
    _Bool _topSection;
}

@property(nonatomic, getter=isTopSection) _Bool topSection; // @synthesize topSection=_topSection;
@property(nonatomic) long long sectionIndex; // @synthesize sectionIndex=_sectionIndex;
@property(readonly, nonatomic) SKUIPageComponent *pageComponent; // @synthesize pageComponent=_component;
@property(readonly, nonatomic) SKUIStorePageSectionContext *context; // @synthesize context=_context;
@property(nonatomic, getter=isBottomSection) _Bool bottomSection; // @synthesize bottomSection=_bottomSection;
- (void).cxx_destruct;
- (void)_sendXEventWithDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (long long)_itemPinningStyle;
- (id)_clickEventWithElementName:(id)arg1 index:(long long)arg2 fieldData:(id)arg3;
- (void)_setContext:(id)arg1;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willHideInContext:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (long long)updateWithContext:(id)arg1 pageComponent:(id)arg2;
- (_Bool)updateCellWithIndexPath:(id)arg1 itemState:(id)arg2 animated:(_Bool)arg3;
- (id)targetScrollingIndexPathForElementWithIndexBarEntryID:(id)arg1 relativeSectionIndex:(long long)arg2;
- (void)showProductViewControllerWithItem:(id)arg1;
- (void)showPageWithLink:(id)arg1;
- (void)sendXEventWithLink:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)sendXEventWithItem:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) struct UIEdgeInsets sectionContentInset;
- (_Bool)requestLayoutWithReloadReason:(long long)arg1;
- (void)reloadVisibleCellsWithReason:(long long)arg1;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
@property(readonly, nonatomic) struct CGSize preferredContentSize;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (void)playVideoWithURL:(id)arg1;
- (void)playVideoForElement:(id)arg1;
- (long long)pinningTransitionStyleForItemAtIndexPath:(id)arg1;
- (long long)pinningStyleForItemAtIndexPath:(id)arg1;
- (struct UIEdgeInsets)pinningContentInsetForItemAtIndexPath:(id)arg1;
- (id)performItemOfferActionForItem:(id)arg1;
- (_Bool)performDefaultActionForViewElement:(id)arg1;
@property(readonly, nonatomic) long long numberOfCells;
- (struct _NSRange)itemRangeForIndexPathRange:(struct SKUIIndexPathRange)arg1;
- (id)itemOfferClickEventWithItem:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (void)invalidateCachedLayoutInformation;
@property(readonly, nonatomic) NSArray *indexPathsForPinningItems;
- (void)getModalSourceViewForViewElement:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool fitsToHeight;
@property(readonly, nonatomic) NSIndexPath *firstAppearanceIndexPath;
- (void)expandEditorialForLabelElement:(id)arg1 indexPath:(id)arg2;
- (void)didAppearInContext:(id)arg1;
- (void)deselectItemsAnimated:(_Bool)arg1;
@property(readonly, nonatomic) long long defaultItemPinningStyle;
- (double)contentInsetAdjustmentForCollectionView:(id)arg1;
- (_Bool)containsElementWithIndexBarEntryID:(id)arg1;
- (void)collectionViewWillScrollToOffset:(struct CGPoint)arg1 visibleRange:(struct SKUIIndexPathRange)arg2;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (_Bool)collectionViewShouldSelectItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldHighlightItemAtIndexPath:(id)arg1;
- (void)collectionViewDidTapVideoAtIndexPath:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewDidConfirmItemOfferAtIndexPath:(id)arg1;
- (void)collectionViewDidConfirmButtonElement:(id)arg1 forItemAtIndexPath:(id)arg2;
- (id)clickEventWithMedia:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (id)clickEventWithLink:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (id)clickEventWithItem:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIAccountButtonsSection : SKUIStorePageSection <SKUIAccountButtonsDelegate>
{
    SKUIAccountButtonsViewController *_accountButtonsViewController;
}

- (void).cxx_destruct;
- (id)_accountButtonsViewController;
- (void)accountButtonsViewControllerDidSignOut:(id)arg1;
- (void)accountButtonsViewControllerDidSignIn:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIAccountButtonsComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIAccountButtonsView : UIView
{
    UILabel *_accountCreditsLabel;
    SKUIRoundedRectButton *_appleIDButton;
    SKUIClientContext *_clientContext;
    SKUILinkButton *_ecommerceButton;
    SKUIRoundedRectButton *_giftingButton;
    UIButton *_termsAndConditionsButton;
    SKUIRoundedRectButton *_usernameButton;
    UIButton *_redeemButton;
}

@property(readonly, nonatomic) UIButton *termsAndConditionsButton; // @synthesize termsAndConditionsButton=_termsAndConditionsButton;
@property(readonly, nonatomic) UIButton *redeemButton; // @synthesize redeemButton=_redeemButton;
@property(readonly, nonatomic) UIButton *giftingButton; // @synthesize giftingButton=_giftingButton;
@property(readonly, nonatomic) UIControl *ECommerceButton; // @synthesize ECommerceButton=_ecommerceButton;
@property(readonly, nonatomic) UIButton *appleIDButton; // @synthesize appleIDButton=_appleIDButton;
- (void).cxx_destruct;
- (id)_newLinkButtonWithTitle:(id)arg1;
- (void)_layoutTwoRows;
- (void)_layoutOneRow;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(nonatomic, getter=isTermsAndConditionsHidden) _Bool termsAndConditionsHidden;
@property(nonatomic, getter=isGiftingHidden) _Bool giftingHidden;
@property(copy, nonatomic) NSString *accountCredits;
@property(copy, nonatomic) NSString *ECommerceLinkTitle;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUIAccountButtonsViewController : UIViewController <UINavigationControllerDelegate>
{
    SKUIAccountButtonsView *_buttonsView;
    SKUIClientContext *_clientContext;
    id <SKUIAccountButtonsDelegate> _delegate;
    SKUILink *_ecommerceLink;
}

@property(retain, nonatomic) SKUILink *ECommerceLink; // @synthesize ECommerceLink=_ecommerceLink;
@property(nonatomic) __weak id <SKUIAccountButtonsDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_viewAppleID;
- (void)_signOut;
- (void)_sendDidSignIn;
- (void)_reloadRestrictions;
- (void)_reloadAccountsButton;
- (void)_openIForgot;
- (id)_buttonsView;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(id)arg1;
- (void)_restrictionsChangedNotification:(id)arg1;
- (void)_accountStoreChangedNotification:(id)arg1;
- (void)_usernameButtonAction:(id)arg1;
- (void)_termsAndConditionsButtonAction:(id)arg1;
- (void)_signInButtonAction:(id)arg1;
- (void)_redeemButtonAction:(id)arg1;
- (void)_giftAction:(id)arg1;
- (void)_ecommerceLinkAction:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)loadView;
@property(nonatomic, getter=isTermsAndConditionsHidden) _Bool termsAndConditionsHidden;
@property(nonatomic, getter=isGiftingHidden) _Bool giftingHidden;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIViewElement : IKViewElement
{
    NSMutableArray *_flattenedChildren;
    long long _pinStyle;
}

@property(readonly, nonatomic) long long pinStyle; // @synthesize pinStyle=_pinStyle;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) _Bool rendersWithPerspective;
@property(readonly, nonatomic) NSSet *personalizationLibraryItems;
@property(readonly, nonatomic) long long pageComponentType;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled;
@property(readonly, nonatomic) NSArray *flattenedChildren;
- (id)firstChildForElementType:(unsigned long long)arg1;
- (id)featureWithName:(id)arg1;
- (void)enumerateViewElementsWithDictionary:(id)arg1 factory:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)elementWithIdentifier:(id)arg1;
- (_Bool)isDescendentFromViewElement:(id)arg1;
- (id)persistenceKey;
- (_Bool)descendsFromElementWithType:(unsigned long long)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;
@property(readonly, copy, nonatomic) NSString *indexBarEntryID;
- (id)firstDescendentWithIndexBarEntryID:(id)arg1;

// Remaining properties
@property(readonly, retain, nonatomic) NSString *itmlID; // @dynamic itmlID;

@end

@interface SKUIAccountButtonsViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;

@end

@interface SKUIActionsViewElement : SKUIViewElement
{
}

@end

@interface SKUICollectionViewCell : UICollectionViewCell
{
    UIView *_bottomBorderView;
    long long _position;
    UIView *_rightBorderView;
    UIColor *_separatorColor;
    long long _separatorStyle;
    UIView *_topBorderView;
}

@property(nonatomic) long long separatorStyle; // @synthesize separatorStyle=_separatorStyle;
@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
- (void).cxx_destruct;
- (void)_updateBorderVisibility;
- (_Bool)_showsTopBorder;
- (_Bool)_showsRightBorder;
- (_Bool)_showsBottomBorder;
- (void)_setPosition:(long long)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)applyLayoutAttributes:(id)arg1;
@property(nonatomic) _Bool showsCellSeparators;

@end

@interface SKUIActivityIndicatorCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    SKUIActivityIndicatorView *_indicatorView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)applyLayoutAttributes:(id)arg1;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIViewReuseView : UIView
{
    SKUIViewReusePool *_viewReusePool;
    NSArray *_views;
}

@property(readonly, nonatomic) NSArray *allExistingViews; // @synthesize allExistingViews=_views;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)registerClass:(Class)arg1 forViewWithReuseIdentifier:(id)arg2;
- (void)modifyUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateExistingViewsForReuseIdentifier:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIActivityIndicatorView : SKUIViewReuseView <SKUIViewElementView>
{
    unsigned long long _alignment;
    struct UIEdgeInsets _contentInset;
    UIActivityIndicatorView *_indicatorView;
}

+ (id)_attributedStringWithLabel:(id)arg1 context:(id)arg2;
+ (struct CGSize)_activityIndicatorSize;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_updateSpinnerAnimation;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHidden:(_Bool)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIActivityIndicatorViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;
- (_Bool)isDisabled;
@property(readonly, nonatomic) SKUILabelViewElement *text;

@end

@interface SKUIAddToWishlistActivity : UIActivity
{
    SKUIClientContext *_clientContext;
    SKUIProductPageItem *_item;
}

- (void).cxx_destruct;
- (void)performActivity;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_beforeActivity;
- (id)activityType;
- (id)activityTitle;
- (id)activityImage;
- (id)initWithItem:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIAddToWishlistAnimation : NSObject
{
    CDUnknownBlockType _completionBlock;
    UIImage *_image;
    UINavigationButton *_targetButton;
}

- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)animateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithImage:(id)arg1 buttonItem:(id)arg2 navigationBar:(id)arg3;

@end

@interface SKUIAddToWishlistOperation : NSOperation
{
    long long _itemIdentifier;
    long long _reason;
    NSMutableDictionary *_requestParameters;
}

- (void).cxx_destruct;
- (void)main;
- (id)initWithItem:(id)arg1 reason:(long long)arg2;

@end

@interface SKUIAppDeviceConfig : NSObject <IKAppDeviceConfig>
{
}

- (id)timeZone;
- (id)systemLanguage;
- (id)storeFrontCountryCode;
- (struct CGSize)screenSize;
- (unsigned long long)preferredVideoPreviewFormat;
- (unsigned long long)preferredVideoFormat;
- (_Bool)isTimeZoneSet;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIAppleIDImageURLProtocol : NSURLProtocol
{
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void)_startLoading;
- (void)stopLoading;
- (void)startLoading;

@end

@interface SKUIApplicationController : NSObject <IKAppContextDelegate, IKApplication, SKUIModalDocumentDelegate, SKUIModalSourceViewProvider, SKUINavigationDocumentDelegate, SKUIURLResolverDelegate, UINavigationControllerDelegate, UITabBarControllerDelegate>
{
    NSURL *_applicationScriptURL;
    Class _clientContextClass;
    SKUIClientContext *_clientContext;
    id <SKUIApplicationDelegate> _delegate;
    SKUIAppDeviceConfig *_deviceConfig;
    _Bool _didDisplayFirstPage;
    _Bool _hidesTabBar;
    long long _lastNavigationControllerOperation;
    UIViewController *_lastPoppedViewController;
    NSDictionary *_launchOptions;
    SKUIURL *_legacyLaunchURL;
    IKAppDataStorage *_localStorage;
    SKUIModalDocumentController *_modalDocumentController;
    SKUIMetricsController *_metricsController;
    SKUISimpleContainerViewController *_navigationContainerViewController;
    NSMutableArray *_navigationDocumentControllers;
    NSOperationQueue *_operationQueue;
    SKUIPreviewDocumentController *_previewDocumentController;
    SKUIPreviewOverlayViewController *_previewOverlayViewController;
    UIViewController *_rootViewController;
    IKAppContext *_scriptContext;
    long long _scriptLoadState;
    _SKUIApplicationShutdownHelper *_shutdownHelper;
    SKUITabBarController *_tabBarController;
    NSArray *_tabBarItems;
    SKUINavigationDocumentController *_transientNavigationDocument;
    SKUIURLResolver *_urlResolver;
    IKAppDataStorage *_vendorStorage;
    NSMutableArray *_whenLoadedBlocks;
}

+ (id)applicationOptionsWithLaunchOptions:(id)arg1;
@property(copy, nonatomic) NSArray *tabBarItems; // @synthesize tabBarItems=_tabBarItems;
@property(readonly, nonatomic) UITabBarController *tabBarController; // @synthesize tabBarController=_tabBarController;
@property(readonly, nonatomic) SKUIPreviewDocumentController *_previewOverlayDocumentController; // @synthesize _previewOverlayDocumentController=_previewDocumentController;
@property(nonatomic, setter=_setHidesTabBar:) _Bool _hidesTabBar; // @synthesize _hidesTabBar;
@property(nonatomic) __weak id <SKUIApplicationDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)_usesFloatingPreviewOverlayForWidth:(double)arg1;
- (id)_transientNavigationDocument;
- (void)_tintTabBarWithViewController:(id)arg1;
- (id)_tabBarController;
- (void)_stopScriptContextForReload;
- (void)_startScriptContextWithURL:(id)arg1;
- (void)_showPreviewOverlayForNavigationController:(id)arg1 viewController:(id)arg2 animated:(_Bool)arg3;
- (void)_showFloatingPreviewOverlayAnimated:(_Bool)arg1;
- (_Bool)_shouldUseLegacyURLHandlingForExternalURL:(id)arg1;
- (void)_setClientContextWithDictionary:(id)arg1;
- (void)_sendDidDisplayFirstPageIfNecessary;
- (void)_sendClientContextDidChange;
- (void)_retryAfterFailure;
- (void)_resetUserInterfaceAfterStoreFrontChange;
- (void)_removeObserversForReloadNotifications;
- (void)_reloadRootViewControllers;
- (void)_reloadApplication;
- (void)_recordTabBarMetricsEventToSelectViewController:(id)arg1;
- (_Bool)_playPreviewForPreviewTemplate:(id)arg1;
- (id)_operationQueue;
- (id)_newNavigationControllerWithTabBarItem:(id)arg1;
- (id)_navigationContainerViewController;
- (void)_loadApplicationScript;
- (void)_legacyResolveExternalURL:(id)arg1;
- (id)_launchOptionsWithURL:(id)arg1;
- (_Bool)_isStoreFront:(id)arg1 equalToStoreFront:(id)arg2;
- (_Bool)_isDisplayingAccountViewController;
- (void)_invalidateApplication;
- (void)_handleScriptUnavailable;
- (void)_fireBlocksAfterLoad;
- (void)_failWithError:(id)arg1;
- (id)_documentControllerForNavigationController:(id)arg1;
- (void)_dispatchTabBarOnSelect;
- (id)_activeNavigationController;
@property(readonly, nonatomic) SKUINavigationDocumentController *_transientNavigationController;
- (void)_stopApplication;
@property(nonatomic, setter=_setSelectedTabBarIndex:) long long _selectedTabBarIndex;
- (void)_resetDocumentControllers;
@property(readonly, nonatomic) NSArray *_navigationControllers;
@property(readonly, nonatomic) long long _applicationMode;
- (void)_storeFrontChangeNotification:(id)arg1;
- (void)_stopApplicationOnBackgroundNotification:(id)arg1;
- (void)_resetUserInteraceForAccountViewDisappear:(id)arg1;
- (void)_reloadAfterNetworkChange:(id)arg1;
- (void)_reloadApplicationOnForegroundNotification:(id)arg1;
- (void)_previewDocumentIsActiveChangeNotification:(id)arg1;
- (void)_pageDidDisplayNotification:(id)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(id)arg1;
- (void)tabBarController:(id)arg1 willTransitionToSize:(struct CGSize)arg2 withTransitionCoordinator:(id)arg3;
- (_Bool)tabBarController:(id)arg1 shouldSelectViewController:(id)arg2;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)tabBarController:(id)arg1 didEndCustomizingViewControllers:(id)arg2 changed:(_Bool)arg3;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(id)arg1;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)URLResolver:(id)arg1 showURL:(id)arg2 withTabIdentifier:(id)arg3;
- (void)URLResolver:(id)arg1 showTransientViewController:(id)arg2;
- (_Bool)URLResolver:(id)arg1 shouldPerformDefaultActionForURL:(id)arg2;
- (void)URLResolver:(id)arg1 didFinishWithResult:(_Bool)arg2;
- (id)presentationViewControllerForURLResolver:(id)arg1;
- (void)navigationDocumentStackDidChange:(id)arg1;
- (void)getModalSourceViewForElementIdentifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)modalDocumentControllerDidFinish:(id)arg1;
- (long long)modalDocumentController:(id)arg1 barStyleForStackItem:(id)arg2;
- (id)vendorStorage;
- (id)vendorIdentifier;
- (_Bool)shouldIgnoreJSValidation;
- (id)localStorage;
- (id)appLaunchParams;
- (_Bool)appJSURLTrusted;
- (id)appJSURL;
- (_Bool)appIsTrusted;
- (id)appIdentifier;
- (id)activeDocument;
- (id)presentationViewControllerForAppContext:(id)arg1;
- (id)navigationControllerForContext:(id)arg1;
- (id)deviceConfigForContext:(id)arg1;
- (void)appContext:(id)arg1 setPreviewOverlayDocument:(id)arg2 withOptions:(id)arg3;
- (void)appContext:(id)arg1 needsReloadWithUrgency:(unsigned long long)arg2;
- (void)appContext:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2;
- (void)appContext:(id)arg1 didStopWithOptions:(id)arg2;
- (void)appContext:(id)arg1 didStartWithOptions:(id)arg2;
- (void)appContext:(id)arg1 didFailWithError:(id)arg2;
- (void)appContext:(id)arg1 didExitWithOptions:(id)arg2;
- (void)appContext:(id)arg1 didCompletePurchase:(id)arg2;
- (void)updateTabBarWithItems:(id)arg1 animated:(_Bool)arg2;
- (void)showTransientViewController:(id)arg1;
- (void)showExternalURL:(id)arg1;
- (void)showErrorViewWithTitle:(id)arg1 message:(id)arg2;
- (id)selectTabWithIdentifier:(id)arg1;
@property(readonly, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (void)suspendApplicationWithOptions:(id)arg1;
- (void)resumeApplicationWithOptions:(id)arg1;
- (void)recordMetricsEvent:(id)arg1 flushImmediately:(_Bool)arg2;
- (void)loadApplicationWithOptions:(id)arg1;
- (void)loadApplication;
- (void)evaluateBlockWhenLoaded:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void)dealloc;
- (id)initWithClientContextClass:(Class)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIApplicationLicenseDataConsumer : SSVURLProtocolConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;
- (id)applicationLicenseWithDictionary:(id)arg1;

@end

@interface SKUIApplicationLicensePage : NSObject <NSCopying>
{
    NSString *_licenseAgreementHTML;
    NSString *_title;
}

@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *licenseAgreementHTML; // @synthesize licenseAgreementHTML=_licenseAgreementHTML;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUIViewController : UIViewController <SKUINetworkErrorDelegate, SKUIProductPageOverlayDelegate, SKUIWishlistDelegate, UIPopoverControllerDelegate, SKUITabBarItemRootViewController>
{
    SKUIClientContext *_clientContext;
    SKUINetworkErrorViewController *_networkErrorViewController;
    NSOperationQueue *_operationQueue;
    SKUIProductPageOverlayController *_productPageOverlayController;
    SKUIIPadSearchController *_searchController;
    _Bool _wishlistButtonHidden;
    UIBarButtonItem *_wishlistButtonItem;
    SKUIPopoverObserver *_wishlistPopoverObserver;
    SKUIWishlistViewController *_wishlistViewController;
}

@property(readonly, nonatomic) UIBarButtonItem *_wishlistButtonItem; // @synthesize _wishlistButtonItem;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadForOrientation:(long long)arg1;
- (void)_showDialogWithError:(id)arg1;
- (void)_wishlistAction:(id)arg1;
- (void)skui_viewWillAppear:(_Bool)arg1;
- (void)_setWishlistButtonHidden:(_Bool)arg1;
- (void)wishlist:(id)arg1 didSelectItem:(id)arg2 atIndexPath:(id)arg3;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (void)_wishlistPopoverDidDismiss;
- (void)networkErrorViewControllerInvalidated:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)showingError;
- (void)showError:(id)arg1;
- (void)showDefaultNavigationItems;
- (void)reloadData;
@property(readonly, nonatomic) SKUIIPadSearchController *IPadSearchController;
- (void)dealloc;
- (id)initWithTabBarItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIApplicationLicenseViewController : SKUIViewController
{
    SKUIApplicationLicensePage *_licensePage;
    SSVLoadURLOperation *_loadOperation;
    NSURL *_url;
    UIWebView *_webView;
}

- (void).cxx_destruct;
- (void)_displayPage:(id)arg1 error:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)reloadData;
- (id)initWithLicenseAgreementURL:(id)arg1;
- (id)initWithLicenseAgreementPage:(id)arg1;

@end

@interface SKUIArtwork : NSObject <SKUICacheCoding>
{
    long long _height;
    NSURL *_url;
    NSString *_urlString;
    long long _width;
}

@property(readonly, nonatomic) long long width; // @synthesize width=_width;
@property(readonly, nonatomic) long long height; // @synthesize height=_height;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic, getter=_lookupDictionary) NSDictionary *_lookupDictionary;
@property(readonly, nonatomic) NSURL *URL;
@property(readonly, nonatomic) struct CGSize size;
- (id)initWithURL:(id)arg1 size:(struct CGSize)arg2;
- (id)initWithArtworkDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SKUIArtworkList : NSObject <NSCopying, SKUICacheCoding>
{
    NSMutableArray *_artworks;
}

@property(copy, nonatomic) NSArray *artworks; // @synthesize artworks=_artworks;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic, getter=_lookupArray) NSArray *_lookupArray;
@property(readonly, nonatomic) SKUIArtwork *smallestArtwork;
@property(readonly, nonatomic) SKUIArtwork *largestArtwork;
- (id)bestArtworkForScaledSize:(struct CGSize)arg1;
- (id)bestArtworkForSize:(struct CGSize)arg1;
- (id)artworkWithWidth:(long long)arg1;
- (id)artworkURLForSize:(long long)arg1;
- (id)artworkForSize:(long long)arg1;
- (id)initWithLookupArray:(id)arg1;
- (id)initWithArtworkListArray:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface SKUIResourceRequest : NSObject <NSCopying>
{
    id _cacheKey;
    unsigned long long _requestID;
}

@property(nonatomic) unsigned long long requestIdentifier; // @synthesize requestIdentifier=_requestID;
@property(retain, nonatomic) id cacheKey; // @synthesize cacheKey=_cacheKey;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)newLoadOperation;
- (void)finishWithResource:(id)arg1;
@property(readonly, nonatomic) _Bool cachesInMemory;
- (id)_initSKUIResourceRequest;
- (id)init;

@end

@interface SKUIArtworkRequest : SKUIResourceRequest <NSCopying>
{
    SSVURLDataConsumer *_dataConsumer;
    id <SKUIArtworkRequestDelegate> _delegate;
    NSURL *_url;
}

@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(nonatomic) __weak id <SKUIArtworkRequestDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SSVURLDataConsumer *dataConsumer; // @synthesize dataConsumer=_dataConsumer;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)newLoadOperation;
- (void)finishWithResource:(id)arg1;
- (_Bool)cachesInMemory;

@end

@interface SKUIAssetViewElement : SKUIViewElement
{
    double _initialPlaybackTime;
    long long _itemIdentifier;
    double _playbackDuration;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) double playbackDuration; // @synthesize playbackDuration=_playbackDuration;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(nonatomic) double initialPlaybackTime; // @synthesize initialPlaybackTime=_initialPlaybackTime;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIIndexBarEntry : NSObject
{
    struct CGSize _contentSize;
    _Bool _hasValidContentSize;
    long long _entryType;
    long long _visibilityPriority;
    UIColor *_tintColor;
    struct UIEdgeInsets _contentEdgeInsets;
}

+ (id)systemCombinedEntry;
+ (id)placeholderEntryWithSize:(struct CGSize)arg1;
+ (id)entryWithImage:(id)arg1;
+ (id)entryWithAttributedString:(id)arg1;
@property(copy, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(nonatomic) long long visibilityPriority; // @synthesize visibilityPriority=_visibilityPriority;
@property(nonatomic) long long entryType; // @synthesize entryType=_entryType;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
- (void).cxx_destruct;
- (void)_drawInRect:(struct CGRect)arg1;
- (id)_effectiveTintColor;
- (void)_drawContentInRect:(struct CGRect)arg1;
- (struct CGSize)_calculatedContentSize;
@property(readonly, nonatomic) struct CGSize size;
@property(readonly, nonatomic) struct CGSize contentSize;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface SKUIAttributedStringIndexBarEntry : SKUIIndexBarEntry
{
    _Bool _hasValidSynthesizedAttributedString;
    NSAttributedString *_synthesizedAttributedString;
    NSAttributedString *_attributedString;
    NSDictionary *_defaultTextAttributes;
}

@property(copy, nonatomic) NSDictionary *defaultTextAttributes; // @synthesize defaultTextAttributes=_defaultTextAttributes;
@property(readonly, copy, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (void).cxx_destruct;
- (id)_synthesizedAttributedString;
- (void)_invalidateSynthesizedAttributedString;
- (void)_drawContentInRect:(struct CGRect)arg1;
- (struct CGSize)_calculatedContentSize;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithAttributedString:(id)arg1;

@end

@interface SKUIAttributedStringLayout : NSObject <SKUICachedLayout>
{
    NSAttributedString *_attributedString;
    struct CGSize _boundingSize;
    NSStringDrawingContext *_context;
    double _topInset;
}

@property(readonly, nonatomic) double topInset; // @synthesize topInset=_topInset;
@property(readonly, nonatomic) NSStringDrawingContext *stringDrawingContext; // @synthesize stringDrawingContext=_context;
@property(readonly, nonatomic) struct CGSize boundingSize; // @synthesize boundingSize=_boundingSize;
@property(readonly, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (void).cxx_destruct;
@property(readonly, nonatomic) long long numberOfLines;
@property(readonly, nonatomic) double firstBaselineOffset;
@property(readonly, nonatomic) double baselineOffset;
- (id)initWithLayoutRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIAttributedStringLayoutRequest : NSObject <SKUILayoutRequest>
{
    NSAttributedString *_attributedString;
    long long _numberOfLines;
    _Bool _wantsBaselineOffset;
    double _width;
}

@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) _Bool wantsBaselineOffset; // @synthesize wantsBaselineOffset=_wantsBaselineOffset;
@property(nonatomic) long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(readonly, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (void).cxx_destruct;
@property(readonly, nonatomic) Class layoutClass;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAttributedString:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIAttributedStringView : UIView
{
    double _calculatedTopInset;
    long long _firstLineTopInset;
    SKUIAttributedStringLayout *_layout;
    NSMutableArray *_requiredBadges;
    long long _stringTreatment;
    UIColor *_textColor;
    UIColor *_treatmentColor;
}

+ (struct CGSize)sizeWithLayout:(id)arg1 treatment:(long long)arg2;
@property(nonatomic) long long firstLineTopInset; // @synthesize firstLineTopInset=_firstLineTopInset;
@property(retain, nonatomic) UIColor *treatmentColor; // @synthesize treatmentColor=_treatmentColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(nonatomic) long long stringTreatment; // @synthesize stringTreatment=_stringTreatment;
@property(copy, nonatomic) NSArray *requiredBadges; // @synthesize requiredBadges=_requiredBadges;
@property(retain, nonatomic) SKUIAttributedStringLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)_reloadTopInset;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)description;
@property(readonly, nonatomic) double firstBaselineOffset;
@property(readonly, nonatomic) double baselineOffset;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIBackdropContentViewController : UIViewController
{
    long long _backdropViewPrivateStyle;
    UIViewController *_contentViewController;
}

@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
@property(nonatomic) long long backdropViewPrivateStyle; // @synthesize backdropViewPrivateStyle=_backdropViewPrivateStyle;
- (void).cxx_destruct;
- (void)loadView;
- (id)initWithContentViewController:(id)arg1;

@end

@interface SKUIBackgroundViewElement : SKUIViewElement
{
}

@end

@interface SKUIBadgeImageRequest : NSObject
{
    unsigned long long _requestIdentifier;
    SKUIAttributedStringLayout *_stringLayout;
}

- (void).cxx_destruct;

@end

@interface SKUIBadgeLabel : UILabel
{
}

+ (id)defaultTextColor;
+ (id)defaultBackgroundColor;
- (void)drawTextInRect:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIBadgeTextAttachment : NSTextAttachment
{
    NSURL *_imageURL;
}

@property(readonly, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
- (void).cxx_destruct;
- (void)_loadImageWithResourceName:(id)arg1 fallbackImage:(id)arg2 styleColor:(id)arg3;
@property(readonly, nonatomic) struct CGSize badgeSize;
- (id)initWithViewElement:(id)arg1;

@end

@interface SKUIBadgeTextAttachmentLoader : NSObject <SKUIArtworkRequestDelegate>
{
    NSMapTable *_imageRequests;
    SKUIResourceLoader *_resourceLoader;
    NSHashTable *_stringViews;
}

- (void).cxx_destruct;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (_Bool)loadImageForBadge:(id)arg1 layout:(id)arg2 reason:(long long)arg3;
- (void)disconnectStringView:(id)arg1;
- (void)connectStringView:(id)arg1;
- (id)initWithResourceLoader:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIBadgeViewElement : SKUIViewElement
{
    UIImage *_fallbackImage;
    NSString *_resourceName;
    struct CGSize _size;
    NSString *_text;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) NSString *resourceName; // @synthesize resourceName=_resourceName;
@property(readonly, nonatomic) UIImage *fallbackImage; // @synthesize fallbackImage=_fallbackImage;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)accessibilityText;
@property(readonly, nonatomic) long long badgeType;
@property(readonly, nonatomic) NSAttributedString *attributedString;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIBannerCloseButton : UIButton
{
}

- (void)layoutSubviews;
- (void)setHighlighted:(_Bool)arg1;

@end

@interface SKUIBannerView : UIView
{
    UILabel *_artistNameLabel;
    UIView *_bottomBorderView;
    SKUIClientContext *_clientContext;
    UIButton *_closeButton;
    UIImageView *_iconImageView;
    SSLookupItemOffer *_itemOffer;
    UIButton *_itemOfferButton;
    SKUIItemState *_itemState;
    UILabel *_itemStateLabel;
    NSMutableArray *_screenshotImageViews;
    UIView *_separatorView;
    UILabel *_titleLabel;
    float _userRating;
    UIImageView *_userRatingStarImageView;
}

@property(nonatomic) float userRating; // @synthesize userRating=_userRating;
@property(retain, nonatomic) SKUIItemState *itemState; // @synthesize itemState=_itemState;
@property(retain, nonatomic) SSLookupItemOffer *itemOffer; // @synthesize itemOffer=_itemOffer;
@property(readonly, nonatomic) UIControl *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadItemState;
- (id)_newDefaultLabel;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *iconImage;
@property(copy, nonatomic) NSArray *screenshotImages;
@property(copy, nonatomic) NSString *artistName;
@property(readonly, nonatomic) UIControl *itemOfferButton;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIBannerViewController : UIViewController <SKUIItemStateCenterObserver>
{
    SKUIBannerView *_bannerView;
    SKUIClientContext *_clientContext;
    id <SKUIBannerViewDelegate> _delegate;
    UIImage *_iconImage;
    SSLookupItem *_item;
    long long _itemIdentifier;
    SKUIItemStateCenter *_itemStateCenter;
    NSOperationQueue *_resourceOperationQueue;
    NSMutableArray *_screenshotImages;
    NSDictionary *_scriptContextDictionary;
    SKUIItemArtworkContext *_itemArtworkContext;
}

@property(copy, nonatomic) NSDictionary *scriptContextDictionary; // @synthesize scriptContextDictionary=_scriptContextDictionary;
@property(retain, nonatomic) NSOperationQueue *resourceOperationQueue; // @synthesize resourceOperationQueue=_resourceOperationQueue;
@property(nonatomic) __weak id <SKUIBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)_itemArtworkContext;
- (void)_warmItemStateCenter;
- (void)_setScreenshot:(id)arg1 forIndex:(long long)arg2 error:(id)arg3;
- (void)_setIcon:(id)arg1 error:(id)arg2;
- (id)_screenshotConsumerWithSize:(struct CGSize)arg1;
- (void)_reloadBannerView;
- (void)_loadImages;
- (void)_launchURL:(id)arg1 withBundleIdentifier:(id)arg2;
- (void)_launchApp;
- (id)_itemState;
- (id)_iconImage;
- (void)_finishWithResponse:(id)arg1 error:(id)arg2;
- (void)_closeButtonAction:(id)arg1;
- (void)_bannerViewAction:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)loadView;
- (void)loadWithProductParameters:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIBarRatingView : UIView
{
    long long _barRatingStyle;
    long long _numberOfBars;
    float _ratingValue;
}

@property(nonatomic) float ratingValue; // @synthesize ratingValue=_ratingValue;
@property(nonatomic) long long numberOfBars; // @synthesize numberOfBars=_numberOfBars;
@property(nonatomic) long long barRatingStyle; // @synthesize barRatingStyle=_barRatingStyle;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIBarRatingViewElement : SKUIViewElement
{
    float _ratingValue;
}

@property(readonly, nonatomic) float ratingValue; // @synthesize ratingValue=_ratingValue;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIBlockAnimationDelegate : NSObject
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (id)initWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

@interface SKUIBorderView : UIView
{
}

- (void)setBackgroundColor:(id)arg1;
@property(retain, nonatomic) UIColor *color;

@end

@interface SKUIBrickCollectionViewCell : UICollectionViewCell
{
    NSString *_accessibilityLabel;
    SKUIClientContext *_clientContext;
    SKUICountdownView *_countdownView;
    _Bool _itemImageHidden;
    struct UIEdgeInsets _itemImageInsets;
    UIImageView *_itemImageView;
    UIColor *_titleColor;
    UILabel *_titleLabel;
    UIImageView *_overlayImageView;
}

@property(readonly, nonatomic) UIView *itemImageView; // @synthesize itemImageView=_itemImageView;
@property(nonatomic) struct UIEdgeInsets itemImageInsets; // @synthesize itemImageInsets=_itemImageInsets;
@property(nonatomic, getter=isItemImageHidden) _Bool itemImageHidden; // @synthesize itemImageHidden=_itemImageHidden;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(copy, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
- (void).cxx_destruct;
- (void)_removeOverlay;
- (void)_reloadHighlight;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *itemImage;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
@property(retain, nonatomic) SKUICountdown *countdown;
- (void)setColoringWithColorScheme:(id)arg1;

@end

@interface SKUIBrickGridCollectionViewCell : UICollectionViewCell
{
    NSString *_accessibilityLabel;
    UIImageView *_brickImageView;
    struct UIEdgeInsets _contentInsets;
    SKUIEditorialCellLayout *_editorialCellLayout;
    UIView *_editorialContainerView;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(copy, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)setColoringWithColorScheme:(id)arg1;
@property(retain, nonatomic) UIImage *brickImage;
- (void)applyEditorialLayout:(id)arg1 orientation:(long long)arg2;

@end

@interface SKUIBrickGridPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIMissingItemDelegate>
{
    NSMapTable *_artworkRequests;
    double _baseHeight;
    double _columnWidth;
    NSMapTable *_editorialLayouts;
    SKUIMissingItemLoader *_missingItemLoader;
    long long _numberOfColumns;
    double _paddingHorizontal;
    double _paddingTop;
    UIImage *_placeholderImage;
}

- (void).cxx_destruct;
- (id)_missingItemLoader;
- (void)_loadMissingItemsFromIndex:(long long)arg1 withReason:(long long)arg2;
- (void)_loadArtworkForBrick:(id)arg1 artworkLoader:(id)arg2 reason:(long long)arg3;
- (void)_enumerateVisibleBricksUsingBlock:(CDUnknownBlockType)arg1;
- (id)_editorialLayoutForBrick:(id)arg1;
- (struct UIEdgeInsets)_contentInsetsForColumnIndex:(long long)arg1 rowWidth:(double)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (id)clickEventWithLink:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIGridComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIBrickItem : NSObject
{
    NSString *_accessibilityLabel;
    SKUIArtwork *_artwork;
    long long _brickIdentifier;
    SKUICountdown *_countdown;
    SKUIEditorialComponent *_editorial;
    SKUILink *_link;
}

@property(readonly, nonatomic) SKUILink *link; // @synthesize link=_link;
@property(readonly, nonatomic) SKUIEditorialComponent *editorial; // @synthesize editorial=_editorial;
@property(readonly, nonatomic) SKUICountdown *countdown; // @synthesize countdown=_countdown;
@property(readonly, nonatomic) long long brickIdentifier; // @synthesize brickIdentifier=_brickIdentifier;
@property(readonly, nonatomic) SKUIArtwork *artwork; // @synthesize artwork=_artwork;
@property(readonly, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
- (void).cxx_destruct;
- (void)_setLinkInfoWithLinkDictionary:(id)arg1 context:(id)arg2;
- (id)description;
- (void)_setLinkItem:(id)arg1;
- (id)initWithCustomPageContext:(id)arg1;
- (id)initWithComponentContext:(id)arg1;
- (id)initWithBannerRoomContext:(id)arg1;

@end

@interface SKUISwooshArtworkLoader : NSObject <SKUIArtworkRequestDelegate>
{
    SKUIResourceLoader *_artworkLoader;
    NSMapTable *_artworkRequestIDs;
    SKUIImageDataConsumer *_imageDataConsumer;
    NSMutableIndexSet *_outstandingRequestIDs;
    UIImage *_placeholderImage;
    SKUISwooshViewController *_swooshViewController;
}

@property(readonly, nonatomic) SKUISwooshViewController *swooshViewController; // @synthesize swooshViewController=_swooshViewController;
@property(retain, nonatomic) SKUIImageDataConsumer *imageDataConsumer; // @synthesize imageDataConsumer=_imageDataConsumer;
@property(readonly, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_artworkLoader;
- (void).cxx_destruct;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)setPlaceholderColorWithColorScheme:(id)arg1;
- (void)setImage:(id)arg1 forRequest:(id)arg2;
@property(readonly, nonatomic) UIImage *placeholderImage;
- (void)loadImagesForNextPageWithReason:(long long)arg1;
- (_Bool)loadImageForObject:(id)arg1 artworkRequest:(id)arg2 reason:(long long)arg3;
- (_Bool)loadImageForObject:(id)arg1 URL:(id)arg2 reason:(long long)arg3;
- (void)cancelImageLoading;
- (id)cachedImageForObject:(id)arg1;
- (unsigned long long)artworkRequestIdentifierForObject:(id)arg1;
- (id)initWithArtworkLoader:(id)arg1 swoosh:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIBrickSwooshArtworkLoader : SKUISwooshArtworkLoader
{
    long long _artworkSize;
}

- (void)setImage:(id)arg1 forRequest:(id)arg2;
- (void)loadImagesForNextPageWithReason:(long long)arg1;
- (_Bool)loadImageForBrick:(id)arg1 reason:(long long)arg2;
- (id)cachedImageForBrick:(id)arg1;
- (id)initWithArtworkLoader:(id)arg1 swoosh:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) SKUIBrickSwooshViewController *swooshViewController; // @dynamic swooshViewController;

@end

@interface SKUIBrickSwooshPageSection : SKUIStorePageSection <SKUIMissingItemDelegate, SKUISwooshViewControllerDelegate>
{
    SKUIBrickSwooshArtworkLoader *_artworkLoader;
    SKUIMissingItemLoader *_missingItemLoader;
    SKUIBrickSwooshViewController *_swooshViewController;
}

- (void).cxx_destruct;
- (id)_swooshViewController;
- (id)_missingItemLoader;
- (void)_loadMissingItemsFromIndex:(long long)arg1 withReason:(long long)arg2;
- (id)_artworkLoader;
- (void)_addImpressionForIndex:(long long)arg1 toSession:(id)arg2;
- (void)swoosh:(id)arg1 willDisplayCellAtIndex:(long long)arg2;
- (id)swoosh:(id)arg1 imageForCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUISwooshPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUISwooshViewController : UIViewController
{
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    id <SKUISwooshViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <SKUISwooshViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)unhideImages;
- (void)setImage:(id)arg1 forItemAtIndex:(long long)arg2;
- (id)popImageViewForItemAtIndex:(long long)arg1;
- (id)indexPathsForVisibleItems;
- (struct CGRect)frameForItemAtIndex:(long long)arg1;
- (void)deselectAllItems;

@end

@interface SKUIBrickSwooshViewController : SKUISwooshViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    NSArray *_bricks;
    UICollectionView *_collectionView;
    _Bool _delegateWantsWillDisplay;
    NSMutableIndexSet *_hiddenImageIndexSet;
    CDStruct_0a66a153 _metrics;
    _Bool _showBrickTitles;
    NSString *_swooshTitle;
    SKUISwooshView *_swooshView;
}

@property(copy, nonatomic) NSArray *bricks; // @synthesize bricks=_bricks;
- (void).cxx_destruct;
- (CDStruct_0a66a153)_brickSwooshMetrics;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)unhideImages;
- (void)setImage:(id)arg1 forItemAtIndex:(long long)arg2;
- (void)setDelegate:(id)arg1;
- (void)setColorScheme:(id)arg1;
- (void)setClientContext:(id)arg1;
- (id)popImageViewForItemAtIndex:(long long)arg1;
- (id)indexPathsForVisibleItems;
- (struct CGRect)frameForItemAtIndex:(long long)arg1;
- (void)deselectAllItems;
- (void)dealloc;
- (id)initWithSwoosh:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIBrowseHeaderCollectionViewCell : SKUICollectionViewCell
{
    SKUIGroupedHeaderView *_headerView;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *title;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIBrowseHeaderPageComponent : SKUIPageComponent
{
}

- (long long)componentType;

@end

@interface SKUIBrowseHeaderPageSection : SKUIStorePageSection
{
}

- (_Bool)collectionViewShouldSelectItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldHighlightItemAtIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (struct UIEdgeInsets)sectionContentInset;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIBrowseHeaderPageComponent *pageComponent;

@end

@interface SKUIHeaderViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;
@property(readonly, nonatomic) NSArray *titleLabels;
@property(readonly, nonatomic) SKUIButtonViewElement *button;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIBrowseHeaderViewElement : SKUIHeaderViewElement
{
}

- (long long)pageComponentType;

@end

@interface SKUIBrowseItemCell : UICollectionViewCell
{
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIView *_borderView;
    UIView *_topBorderView;
    UIImageView *_decorationImageView;
    UIImage *_decorationImage;
    _Bool _showTopBorder;
    _Bool _hasBlueBackgroundWhenSelected;
}

@property(nonatomic) _Bool hasBlueBackgroundWhenSelected; // @synthesize hasBlueBackgroundWhenSelected=_hasBlueBackgroundWhenSelected;
@property(nonatomic) _Bool showTopBorder; // @synthesize showTopBorder=_showTopBorder;
@property(retain, nonatomic) UIImage *decorationImage; // @synthesize decorationImage=_decorationImage;
- (void).cxx_destruct;
- (void)_reloadHighlightState;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
@property(retain, nonatomic) NSString *subtitle;
@property(retain, nonatomic) NSString *title;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIBrowseItemComponent : SKUIPageComponent
{
    NSString *_title;
    NSString *_subtitle;
    long long _index;
    SKUIImageViewElement *_decorationImage;
    _Bool _showTopBorder;
}

@property(readonly, nonatomic) SKUIImageViewElement *decorationImage; // @synthesize decorationImage=_decorationImage;
@property(nonatomic) _Bool showTopBorder; // @synthesize showTopBorder=_showTopBorder;
@property(nonatomic) long long index; // @synthesize index=_index;
@property(readonly, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (long long)componentType;
- (id)initWithViewElement:(id)arg1;

@end

@interface SKUIBrowseItemPageSection : SKUIStorePageSection
{
}

- (id)_imageForImageViewElement:(id)arg1 styleColor:(id)arg2;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (long long)numberOfCells;
- (struct UIEdgeInsets)sectionContentInset;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIBrowseItemComponent *pageComponent;

@end

@interface SKUIItemViewElement : SKUIViewElement
{
    SKUIViewElementText *_itemText;
    _Bool _selected;
}

@property(readonly, nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
@property(readonly, nonatomic) SKUIViewElementText *itemText; // @synthesize itemText=_itemText;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIBrowseItemViewElement : SKUIItemViewElement
{
    _Bool _expands;
}

@property(readonly, nonatomic) _Bool expands; // @synthesize expands=_expands;
- (long long)pageComponentType;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) NSArray *metadata;
@property(readonly, nonatomic) SKUIImageViewElement *decorationImage;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIBrowseViewElement : SKUIViewElement
{
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIViewReuseCollectionViewCell : SKUICollectionViewCell
{
    struct UIEdgeInsets _contentInset;
    SKUIViewReusePool *_viewPool;
    NSArray *_views;
}

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(readonly, nonatomic) NSArray *allExistingViews; // @synthesize allExistingViews=_views;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)applyLayoutAttributes:(id)arg1;
- (void)registerClass:(Class)arg1 forViewWithReuseIdentifier:(id)arg2;
- (void)modifyUsingBlock:(CDUnknownBlockType)arg1;
- (id)existingViewsForReuseIdentifier:(id)arg1;
- (id)existingViewForIndex:(long long)arg1;
- (void)enumerateExistingViewsForReuseIdentifier:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIButtonCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    UIControl *_button;
    SKUIButtonViewElement *_viewElement;
}

+ (id)_attributedStringWithButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIButtonViewElement : SKUIViewElement
{
    NSString *_badgeResourceName;
    SKUIViewElementText *_buttonText;
    long long _buttonViewType;
    NSString *_confirmationText;
    BOOL _enabled;
    long long _itemIdentifier;
    NSString *_variantIdentifier;
}

@property(readonly, nonatomic) NSString *variantIdentifier; // @synthesize variantIdentifier=_variantIdentifier;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(readonly, nonatomic) NSString *confirmationText; // @synthesize confirmationText=_confirmationText;
@property(readonly, nonatomic) long long buttonViewType; // @synthesize buttonViewType=_buttonViewType;
@property(readonly, nonatomic) SKUIViewElementText *buttonText; // @synthesize buttonText=_buttonText;
@property(readonly, nonatomic) NSString *badgeResourceName; // @synthesize badgeResourceName=_badgeResourceName;
- (void).cxx_destruct;
- (id)personalizationLibraryItems;
- (long long)pageComponentType;
- (_Bool)isEnabled;
- (unsigned long long)elementType;
- (id)description;
- (id)applyUpdatesWithElement:(id)arg1;
- (_Bool)canPerformLocalActionWithItemState:(id)arg1;
- (_Bool)canPersonalizeUsingItemState:(id)arg1;
@property(readonly, nonatomic) SKUIImageViewElement *buttonImage;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUICellLayout : NSObject
{
    UIView *_cell;
    SKUIClientContext *_clientContext;
    UIView *_contentView;
    _Bool _parentWantsCellNeedsLayout;
}

@property(readonly, nonatomic) __weak UIView *parentCellView; // @synthesize parentCellView=_cell;
@property(readonly, nonatomic) __weak UIView *contentView; // @synthesize contentView=_contentView;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)setSelected:(_Bool)arg1;
- (void)setNeedsLayout;
- (void)setHighlighted:(_Bool)arg1;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)prepareForReuse;
- (void)resetLayout;
- (void)layoutSubviews;
- (id)initWithTableViewCell:(id)arg1;
- (id)initWithParentView:(id)arg1;
- (id)initWithCollectionViewCell:(id)arg1;

@end

@interface SKUIItemCellLayout : SKUICellLayout <SKUIItemOfferButtonDelegate>
{
    _Bool _iconImageHidden;
    _Bool _hidesItemOfferButton;
    _Bool _highlighted;
    SKUICellImageView *_iconImageView;
    SKUIItemOffer *_itemOffer;
    SKUIItemOfferButton *_itemOfferButton;
    SKUIItemOfferButtonAppearance *_itemOfferButtonAppearance;
    UILabel *_itemOfferNoticeLabel;
    SKUIItemState *_itemState;
    _Bool _restricted;
    _Bool _selected;
    UIView *_removeControlView;
}

@property(readonly, nonatomic) UIView *removeControlView; // @synthesize removeControlView=_removeControlView;
@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
@property(nonatomic, getter=isRestricted) _Bool restricted; // @synthesize restricted=_restricted;
@property(copy, nonatomic) SKUIItemState *itemState; // @synthesize itemState=_itemState;
@property(readonly, nonatomic) UILabel *itemOfferNoticeLabel; // @synthesize itemOfferNoticeLabel=_itemOfferNoticeLabel;
@property(retain, nonatomic) SKUIItemOfferButtonAppearance *itemOfferButtonAppearance; // @synthesize itemOfferButtonAppearance=_itemOfferButtonAppearance;
@property(readonly, nonatomic) SKUIItemOfferButton *itemOfferButton; // @synthesize itemOfferButton=_itemOfferButton;
@property(retain, nonatomic) SKUIItemOffer *itemOffer; // @synthesize itemOffer=_itemOffer;
@property(readonly, nonatomic) UIView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(nonatomic, getter=isIconImageHidden) _Bool iconImageHidden; // @synthesize iconImageHidden=_iconImageHidden;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
- (void).cxx_destruct;
- (_Bool)_useCloudButtonForItemState:(id)arg1;
- (void)_reloadItemOfferVisibility;
- (void)_reloadItemOfferButton:(_Bool)arg1;
- (id)_parentCollectionViewCell;
- (void)_getParentTableView:(id *)arg1 collectionView:(id *)arg2;
- (_Bool)_canShowItemOfferNotice;
- (void)_showItemOfferConfirmationAction:(id)arg1;
- (void)_itemOfferConfirmAction:(id)arg1;
- (void)_cancelItemOfferConfirmationAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)prepareForReuse;
- (void)setItemState:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *itemOfferNoticeString;
@property(retain, nonatomic) UIImage *iconImage;
@property(nonatomic) _Bool displaysItemOfferButton;
- (void)resetLayout;
- (void)layoutForItemOfferChange;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICardCellLayout : SKUIItemCellLayout
{
    SKUISearchAppBundleView *_appBundleView;
    UILabel *_artistLabel;
    SKUIBadgeLabel *_editorialBadgeLabel;
    long long _numberOfUserRatings;
    UIImageView *_screenshotImageView;
    UILabel *_titleLabel;
    double _userRating;
    UIImageView *_userRatingImageView;
    UILabel *_userRatingLabel;
    UILabel *_hasInAppPurchasesLabel;
    _Bool _appBundle;
    _Bool _hasInAppPurchases;
}

@property(readonly, nonatomic) SKUISearchAppBundleView *appBundleView; // @synthesize appBundleView=_appBundleView;
@property(nonatomic) _Bool hasInAppPurchases; // @synthesize hasInAppPurchases=_hasInAppPurchases;
@property(nonatomic) double userRating; // @synthesize userRating=_userRating;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(nonatomic) _Bool appBundle; // @synthesize appBundle=_appBundle;
- (void).cxx_destruct;
- (void)layoutForItemOfferChange;
- (void)setBackgroundColor:(id)arg1;
- (void)resetLayout;
- (void)prepareForReuse;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *screenshotImage;
@property(copy, nonatomic) NSString *editorialBadge;
@property(copy, nonatomic) NSString *artistName;

@end

@interface SKUICardLayout : NSObject
{
    SKUICardViewElement *_cardViewElement;
    SKUIViewElementLayoutContext *_layoutContext;
}

+ (id)layoutWithCardViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)allowsViewElement:(id)arg1;
@property(readonly, nonatomic) SKUICardViewElement *cardViewElement; // @synthesize cardViewElement=_cardViewElement;
@property(readonly, nonatomic) SKUIViewElementLayoutContext *layoutContext; // @synthesize layoutContext=_layoutContext;
- (void).cxx_destruct;
- (double)topInsetForViewElement:(id)arg1 previousViewElement:(id)arg2 width:(double)arg3;
- (struct CGSize)sizeForViewElement:(id)arg1 width:(double)arg2;
@property(readonly, nonatomic) long long layoutStyle;
@property(readonly, nonatomic) double horizontalContentInset;
- (double)bottomInsetForLastViewElement:(id)arg1 width:(double)arg2;
- (id)attributedStringForLabel:(id)arg1;
- (id)attributedStringForButton:(id)arg1;

@end

@interface SKUICardViewElement : SKUIViewElement
{
    BOOL _enabled;
}

- (_Bool)isEnabled;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) long long cardType;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUICardViewElementCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    SKUISizeValue *_artworkBoundingSize;
    SKUICardViewElement *_cardElement;
    SKUICardLayout *_layout;
    UIView *_programmedCardBackgroundView;
    SKUIViewElement *_productImageElement;
    NSMapTable *_viewElements;
}

+ (double)_defaultWidthForLockupWithContext:(id)arg1;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (struct CGSize)artworkBoundingSizeWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
@property(copy, nonatomic) SKUISizeValue *artworkBoundingSize; // @synthesize artworkBoundingSize=_artworkBoundingSize;
- (void).cxx_destruct;
- (void)_performDefaultActionForViewElement:(id)arg1;
- (void)_imageTapAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICarouselCollectionViewLayout : UICollectionViewFlowLayout
{
}

+ (Class)layoutAttributesClass;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;

@end

@interface SKUICarouselItem : NSObject
{
    NSString *_accessibilityLabel;
    SKUIArtworkList *_artworkList;
    long long _carouselItemIdentifier;
    SKUILink *_link;
}

@property(readonly, nonatomic) SKUILink *link; // @synthesize link=_link;
@property(readonly, nonatomic) long long carouselItemIdentifier; // @synthesize carouselItemIdentifier=_carouselItemIdentifier;
@property(readonly, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
- (void).cxx_destruct;
- (id)description;
- (void)_setLinkItem:(id)arg1;
- (id)artworkForSize:(struct CGSize)arg1;
- (id)initWithComponentContext:(id)arg1;

@end

@interface SKUICarouselPageComponent : SKUIPageComponent <SSMetricsEventFieldProvider>
{
    NSArray *_carouselItems;
    double _cycleInterval;
    long long _missingItemCount;
}

@property(readonly, nonatomic) double cycleInterval; // @synthesize cycleInterval=_cycleInterval;
@property(readonly, nonatomic) NSArray *carouselItems; // @synthesize carouselItems=_carouselItems;
- (void).cxx_destruct;
- (id)valueForMetricsField:(id)arg1;
- (id)metricsElementName;
- (_Bool)isMissingItemData;
- (void)enumerateMissingItemIdentifiersFromIndex:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (long long)componentType;
- (void)updateWithMissingItems:(id)arg1;
- (id)initWithViewElement:(id)arg1;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) SKUICarouselViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUICarouselPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIMissingItemDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_carouselCollectionView;
    long long _cellCount;
    SKUIViewElementLayoutContext *_cellLayoutContext;
    NSObject<OS_dispatch_source> *_cycleTimer;
    struct CGSize _itemSize;
    double _itemSpacing;
    SKUIMissingItemLoader *_missingItemLoader;
    NSArray *_modelObjects;
    _Bool _needsReload;
    NSIndexPath *_reloadIndexPath;
}

- (void).cxx_destruct;
- (void)_startCycleTimerIfNecessary;
- (void)_reloadViewElementProperties;
- (void)_reloadLegacySizing;
- (id)_missingItemLoader;
- (void)_loadMissingItemsFromIndex:(long long)arg1 withReason:(long long)arg2;
- (double)_legacyItemSpacing;
- (struct CGSize)_legacyItemSize;
- (_Bool)_isItemEnabledAtIndexPath:(id)arg1;
- (void)_fireCycleTimer;
- (id)_dequeueCellForViewElement:(id)arg1 collectionView:(id)arg2 indexPath:(id)arg3;
- (id)_dequeueCellForLockup:(id)arg1 collectionView:(id)arg2 indexPath:(id)arg3;
- (Class)_cellClassForViewElement:(id)arg1;
- (Class)_cellClassForLockup:(id)arg1;
- (id)_carouselCollectionView;
- (void)_cancelCycleTimer;
- (void)_addImpressionForIndex:(long long)arg1 toSession:(id)arg2;
- (double)_actualContentWidth;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 carouselLayout:(id)arg2 willApplyLayoutAttributes:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (long long)defaultItemPinningStyle;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUICarouselPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUICarouselViewElement : SKUIViewElement
{
    double _displayInterval;
}

@property(readonly, nonatomic) double displayInterval; // @synthesize displayInterval=_displayInterval;
- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUICategory : NSObject
{
    SKUIArtworkList *_artworkList;
    long long _categoryIdentifier;
    NSArray *_children;
    NSString *_name;
    NSString *_parentLabel;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) NSString *parentLabel; // @synthesize parentLabel=_parentLabel;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSArray *children; // @synthesize children=_children;
@property(readonly, nonatomic) long long categoryIdentifier; // @synthesize categoryIdentifier=_categoryIdentifier;
@property(readonly, nonatomic) SKUIArtworkList *artworkList; // @synthesize artworkList=_artworkList;
- (void).cxx_destruct;
- (id)subcategoryContainingURL:(id)arg1;
- (_Bool)containsURL:(id)arg1;
- (id)initWithCategoryDictionary:(id)arg1;

@end

@interface SKUICategoryArtworkLoader : NSObject <SKUIArtworkRequestDelegate>
{
    NSMapTable *_artworkRequestIDs;
    SKUIImageDataConsumer *_imageDataConsumer;
    SKUIResourceLoader *_loader;
    NSHashTable *_observers;
    UIImage *_placeholderImage;
}

@property(retain, nonatomic) SKUIImageDataConsumer *imageDataConsumer; // @synthesize imageDataConsumer=_imageDataConsumer;
@property(readonly, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_loader;
- (void).cxx_destruct;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)removeObserver:(id)arg1;
@property(readonly, nonatomic) struct CGSize imageSize;
@property(readonly, nonatomic) UIImage *placeholderImage;
- (void)loadImageForCategory:(id)arg1 reason:(long long)arg2;
- (id)cachedImageForCategory:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithArtworkLoader:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICategoryController : NSObject <SKUICategoryTableViewControllerDelegate, UIPopoverControllerDelegate>
{
    SKUICategoryArtworkLoader *_artworkLoader;
    UIBarButtonItem *_button;
    SKUIClientContext *_clientContext;
    UIViewController *_contentsController;
    NSURL *_defaultURL;
    id <SKUICategoryControllerDelegate> _delegate;
    SSVLoadURLOperation *_loadOperation;
    NSOperationQueue *_operationQueue;
    UIPopoverController *_popover;
    SKUICategory *_rootCategory;
    NSURL *_selectedURL;
    SKUISegmentedControl *_segmentedControl;
    long long _segmentedControlLength;
    NSArray *_segmentedControlSegments;
    SKUICategoryTableViewController *_tableViewController;
}

@property(retain, nonatomic) NSURL *selectedURL; // @synthesize selectedURL=_selectedURL;
@property(nonatomic) long long segmentedControlLength; // @synthesize segmentedControlLength=_segmentedControlLength;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <SKUICategoryControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *defaultURL; // @synthesize defaultURL=_defaultURL;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(retain, nonatomic) SKUICategory *category; // @synthesize category=_rootCategory;
- (void).cxx_destruct;
- (id)_tableViewControllerWithCategory:(id)arg1;
- (void)_setResponse:(id)arg1 error:(id)arg2;
- (id)_rootMetricsLocations;
- (void)_reloadSelectedSegment;
- (void)_recordClickEventWithCategory:(id)arg1 index:(long long)arg2;
- (void)_precacheArtworkForCategory:(id)arg1;
- (void)_reloadSegmentedControl;
- (id)_metricsLocationsWithIndex:(long long)arg1;
- (id)_artworkLoader;
- (id)metricsPageContextForCategoryTableView:(id)arg1;
- (void)categoryTableView:(id)arg1 didSelectCategory:(id)arg2;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)segmentedControlAction:(id)arg1;
- (void)buttonAction:(id)arg1;
@property(readonly, nonatomic) UISegmentedControl *segmentedControl;
- (void)loadFromURL:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isLoading;
- (void)dismiss;
@property(readonly, nonatomic) UIBarButtonItem *categoryButton;
- (void)dealloc;
- (id)initWithContentsController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICategoryTableViewCell : UITableViewCell
{
    UIView *_separatorView;
    struct CGSize _expectedImageSize;
    _Bool _layoutNeedsLayout;
}

@property(nonatomic) struct CGSize expectedImageSize; // @synthesize expectedImageSize=_expectedImageSize;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUICategoryTableViewController : UITableViewController <SKUICategoryArtworkLoaderObserver, SKUICategoryTableViewControllerDelegate>
{
    SKUICategoryArtworkLoader *_artworkLoader;
    SKUICategory *_category;
    SKUIClientContext *_clientContext;
    id <SKUICategoryTableViewControllerDelegate> _delegate;
    NSArray *_metricsLocations;
    long long _numberOfHiddenRows;
    NSURL *_selectedURL;
    NSURL *_defaultURL;
    _Bool _isRoot;
    _Bool _childrenHaveArtwork;
}

@property(retain, nonatomic) NSURL *selectedURL; // @synthesize selectedURL=_selectedURL;
@property(nonatomic, getter=isRoot) _Bool root; // @synthesize root=_isRoot;
@property(nonatomic) long long numberOfHiddenRows; // @synthesize numberOfHiddenRows=_numberOfHiddenRows;
@property(copy, nonatomic) NSArray *metricsLocations; // @synthesize metricsLocations=_metricsLocations;
@property(nonatomic) __weak id <SKUICategoryTableViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *defaultURL; // @synthesize defaultURL=_defaultURL;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(retain, nonatomic) SKUICategory *category; // @synthesize category=_category;
@property(retain, nonatomic) SKUICategoryArtworkLoader *artworkLoader; // @synthesize artworkLoader=_artworkLoader;
- (void).cxx_destruct;
- (void)_recordClickEventForIndexPath:(id)arg1 category:(id)arg2 actionType:(id)arg3;
- (id)_metricsLocationsToPushIndexPath:(id)arg1;
- (long long)_metricsLocationPostionForIndexPath:(id)arg1;
- (id)_categoryAtIndexPath:(id)arg1;
- (void)_doneButtonAction:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)metricsPageContextForCategoryTableView:(id)arg1;
- (void)categoryTableView:(id)arg1 didSelectCategory:(id)arg2;
- (void)categoryArtworkLoader:(id)arg1 didLoadImage:(id)arg2 forCategory:(id)arg3;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICellImageView : UIImageView
{
    UIColor *_cachedBackgroundColor;
}

- (void).cxx_destruct;
- (void)setHighlighted:(_Bool)arg1;

@end

@interface SKUICellLayoutView : UIView
{
    SKUICellLayout *_layout;
}

@property(retain, nonatomic) SKUICellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;

@end

@interface SKUICellScrollView : UIScrollView
{
}

- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface SKUICharityTemplateViewElement : SKUIViewElement
{
    NSString *_campaignIdentifier;
    NSString *_charityMetadataURLString;
}

@property(readonly, nonatomic) NSString *charityMetadataURLString; // @synthesize charityMetadataURLString=_charityMetadataURLString;
@property(readonly, nonatomic) NSString *campaignIdentifier; // @synthesize campaignIdentifier=_campaignIdentifier;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIChart : NSObject
{
    NSArray *_items;
    _Bool _newsstand;
    NSURL *_seeAllURL;
    _Bool _showsIndexNumbers;
    NSString *_title;
    NSSet *_unavailableItemIdentifiers;
}

@property(readonly, nonatomic) NSURL *seeAllURL; // @synthesize seeAllURL=_seeAllURL;
@property(copy, nonatomic) NSSet *unavailableItemIdentifiers; // @synthesize unavailableItemIdentifiers=_unavailableItemIdentifiers;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) _Bool showsIndexNumbers; // @synthesize showsIndexNumbers=_showsIndexNumbers;
@property(readonly, nonatomic) NSArray *items; // @synthesize items=_items;
@property(readonly, nonatomic, getter=isNewsstand) _Bool newsstand; // @synthesize newsstand=_newsstand;
- (void).cxx_destruct;
- (id)description;
- (id)initWithCustomPageContext:(id)arg1;
- (id)initWithChartPageContext:(id)arg1;

@end

@interface SKUIChartColumnHeaderView : UIControl
{
    NSArray *_buttons;
    long long _selectedTitleIndex;
}

@property(nonatomic) long long selectedTitleIndex; // @synthesize selectedTitleIndex=_selectedTitleIndex;
- (void).cxx_destruct;
- (void)_reloadSelectedButton;
- (void)_buttonAction:(id)arg1;
- (void)sizeToFit;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSArray *titles;
- (void)dealloc;

@end

@interface SKUIChartColumnsView : UIView <SKUIFlexibleSegmentedControlDelegate>
{
    NSArray *_allViewControllers;
    long long _animatingToNumberOfVisibleColumns;
    _UIBackdropView *_backdropView;
    UIView *_borderView0;
    UIView *_borderView1;
    long long _columnChangeAnimationCount;
    NSArray *_columnViews;
    struct UIEdgeInsets _contentInset;
    UIView *_headerBackgroundView;
    UIView *_headerBackgroundBottomBorder;
    NSArray *_headerViews;
    long long _numberOfVisibleColumns;
    SKUIFlexibleSegmentedControl *_segmentedControl;
}

@property(readonly, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(nonatomic) long long numberOfVisibleColumns; // @synthesize numberOfVisibleColumns=_numberOfVisibleColumns;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(copy, nonatomic) NSArray *chartViewControllers; // @synthesize chartViewControllers=_allViewControllers;
- (void).cxx_destruct;
- (void)_reloadColumnViews;
- (id)_headerViewWithViewControllers:(id)arg1;
- (void)segmentedControl:(id)arg1 didSelectSegmentIndex:(long long)arg2;
- (void)_headerViewAction:(id)arg1;
- (void)layoutSubviews;
- (void)endColumnChangeAnimation;
- (void)beginColumnChangeAnimationToNumberOfVisibleColumns:(long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIChartsComponent : SKUIPageComponent
{
    NSArray *_charts;
}

@property(readonly, nonatomic) NSArray *charts; // @synthesize charts=_charts;
- (void).cxx_destruct;
- (id)_ineligibleGratisIdentifiersForChartDictionary:(id)arg1;
- (id)description;
- (id)metricsElementName;
- (long long)componentType;
- (id)initWithCustomPageContext:(id)arg1;
- (id)initWithChartPageContext:(id)arg1;

@end

@interface SKUIStorePageDataConsumer : SSVURLDataConsumer
{
    Class _storePageClass;
}

@property(nonatomic) Class storePageClass; // @synthesize storePageClass=_storePageClass;
- (id)_roomComponentsForDictionary:(id)arg1 items:(id)arg2 gridType:(long long)arg3;
- (id)_newPageComponentContextWithDictionary:(id)arg1;
- (id)_newFeaturedContentComponentForKind:(long long)arg1 context:(id)arg2;
- (id)_newCustomPageComponentForBlockType:(id)arg1 context:(id)arg2;
- (id)_multiRoomComponentsForDictionary:(id)arg1 items:(id)arg2;
- (id)_groupingPageComponentsForDictionary:(id)arg1 items:(id)arg2;
- (id)_customPageComponentsForDictionary:(id)arg1 items:(id)arg2;
- (id)_chartPageComponentsForDictionary:(id)arg1 items:(id)arg2;
- (id)_bannerRoomComponentsForDictionary:(id)arg1 items:(id)arg2;
- (id)_backgroundArtworkWithDictionary:(id)arg1;
- (id)_artistPageComponentsForDictionary:(id)arg1 items:(id)arg2;
- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;
- (id)storePageWithDictionary:(id)arg1 response:(id)arg2;
- (id)storePageWithDictionary:(id)arg1;
- (id)init;

@end

@interface SKUIChartsDataConsumer : SKUIStorePageDataConsumer
{
}

- (id)storePageWithDictionary:(id)arg1 response:(id)arg2;
- (id)init;

@end

@interface SKUIChartsDocumentViewController : SKUIViewController <SKUIDocumentViewController>
{
    SKUIChartColumnsView *_chartsView;
    NSMutableArray *_columnViewControllers;
    SKUIChartsTemplateViewElement *_templateElement;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (long long)_visibleColumnCountForWidth:(double)arg1;
- (id)_newColumnViewControllersWithReusableViewControllers:(id)arg1;
- (id)_columnViewControllers;
- (struct UIEdgeInsets)_chartInsets;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)loadView;
- (id)contentScrollView;
- (void)skui_viewWillAppear:(_Bool)arg1;
- (void)documentDidUpdate:(id)arg1;
- (id)initWithTemplateElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStorePage : NSObject <NSCopying>
{
    SKUIArtwork *_backgroundArtwork;
    NSData *_itmlData;
    NSHTTPURLResponse *_itmlResponse;
    SSMetricsConfiguration *_metricsConfiguration;
    NSString *_metricsPageDescription;
    NSArray *_pageComponents;
    NSString *_pageType;
    NSURL *_pageURL;
    SKUIProductPage *_productPage;
    NSString *_title;
    SKUIUber *_uber;
    NSMutableDictionary *_values;
}

@property(retain, nonatomic) SKUIUber *uber; // @synthesize uber=_uber;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) SKUIProductPage *productPage; // @synthesize productPage=_productPage;
@property(copy, nonatomic) NSURL *pageURL; // @synthesize pageURL=_pageURL;
@property(copy, nonatomic) NSString *pageType; // @synthesize pageType=_pageType;
@property(copy, nonatomic) NSArray *pageComponents; // @synthesize pageComponents=_pageComponents;
@property(copy, nonatomic) NSString *metricsPageDescription; // @synthesize metricsPageDescription=_metricsPageDescription;
@property(retain, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
@property(retain, nonatomic) NSHTTPURLResponse *ITMLResponse; // @synthesize ITMLResponse=_itmlResponse;
@property(retain, nonatomic) NSData *ITMLData; // @synthesize ITMLData=_itmlData;
@property(retain, nonatomic) SKUIArtwork *backgroundArtwork; // @synthesize backgroundArtwork=_backgroundArtwork;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)valueForPageKey:(id)arg1;
- (void)setValue:(id)arg1 forPageKey:(id)arg2;

@end

@interface SKUIChartsPage : SKUIStorePage <NSCopying>
{
    NSURL *_categoryURL;
}

@property(copy, nonatomic) NSURL *categoryURL; // @synthesize categoryURL=_categoryURL;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUIChartsPageSection : SKUIStorePageSection <SKUIChartsViewControllerDelegate, SKUIProductPageOverlayDelegate>
{
    SKUIIPadChartsViewController *_ipadViewController;
    SKUIIPhoneChartsViewController *_iphoneViewController;
    SKUIProductPageOverlayController *_overlayController;
    long long _selectedChartIndex;
    long long _selectedItemIndex;
}

- (void).cxx_destruct;
- (void)_recordClickEvent:(id)arg1 withItem:(id)arg2 itemIndex:(long long)arg3 chartIndex:(long long)arg4;
- (id)_chartsViewController;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (id)productPageOverlay:(id)arg1 flipSourceViewToPresentItem:(id)arg2;
- (id)productPageOverlay:(id)arg1 flipSourceViewToDismissItem:(id)arg2;
- (void)chartsViewController:(id)arg1 willDisplayItem:(id)arg2 atIndex:(long long)arg3 chartIndex:(long long)arg4;
- (void)chartsViewController:(id)arg1 didSelectItem:(id)arg2 atIndex:(long long)arg3 chartIndex:(long long)arg4;
- (id)chartsViewController:(id)arg1 didConfirmItemOfferForItem:(id)arg2 atIndex:(long long)arg3 chartIndex:(long long)arg4;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (_Bool)fitsToHeight;
- (_Bool)collectionViewShouldSelectItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldHighlightItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIChartsComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIChartsTemplateViewElement : SKUIViewElement
{
}

@property(readonly, nonatomic) SKUINavigationBarViewElement *navigationBarElement;
@property(readonly, nonatomic) NSArray *columns;

@end

@interface SKUIChartsViewController : SKUIViewController <SKUICategoryControllerDelegate, SKUIMetricsViewController, SKUIViewControllerTesting>
{
    SKUICategoryController *_categoryController;
    _Bool _hasCategoryButton;
    SKUIStorePageViewController *_storePageViewController;
    NSURL *_url;
}

+ (id)_defaultURL;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (id)_storePageViewController;
- (void)_reloadNavigationItem;
- (void)_loadStorePage;
- (void)_loadCategoriesWithURL:(id)arg1;
- (void)_finishLoadWithResult:(_Bool)arg1 error:(id)arg2;
- (id)_categoryController;
- (_Bool)performTestWithName:(id)arg1 options:(id)arg2;
- (id)activeMetricsController;
- (void)categoryController:(id)arg1 didSelectCategory:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)reloadData;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIInputViewElement : SKUIViewElement
{
}

- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUICheckboxInputViewElement : SKUIInputViewElement
{
    BOOL _disabled;
    _Bool _selected;
}

@property(nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
- (unsigned long long)elementType;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUICircleProgressIndicator : UIView
{
    double _animatedValue;
    double _animationEndTime;
    double _animationStartTime;
    double _animationStartValue;
    UIImage *_borderImage;
    UIImage *_centerImage;
    struct UIEdgeInsets _centerImageInsets;
    CADisplayLink *_displayLink;
    UIImage *_fillImage;
    _Bool _highlighted;
    UIImageView *_indeterminateView;
    _Bool _isAnimating;
    double _progress;
    UIColor *_unhighlightedBackgroundColor;
}

+ (id)_indeterminateImage;
+ (id)_fillImage;
+ (id)_borderImage;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) struct UIEdgeInsets imageInsets; // @synthesize imageInsets=_centerImageInsets;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_centerImage;
- (void).cxx_destruct;
- (void)_startIndeterminateAnimation;
- (void)_animateValueOnDisplayLink:(id)arg1;
- (void)_setHidesBorderView:(_Bool)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
- (void)didMoveToWindow;
- (void)setProgress:(double)arg1 animated:(_Bool)arg2;
@property(nonatomic, getter=isIndeterminate) _Bool indeterminate;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIClientContext : NSObject <SUClientInterfaceDelegatePrivate>
{
    NSString *_additionalPurchaseParameters;
    SKUIApplicationController *_applicationController;
    NSBundle *_bundle;
    SUClientInterface *_clientInterface;
    NSDictionary *_configurationDictionary;
    SKUIStoreDialogController *_dialogController;
    SKUILocalizedStringDictionary *_localizedStrings;
    NSString *_metricsConfigurationIdentifier;
    NSMapTable *_metricsPageContexts;
    NSMutableArray *_navigationHistory;
    NSString *_navigationHistoryPersistenceKey;
    NSString *_purchaseAffiliateIdentifier;
    SKUIURL *_purchaseReferrerURL;
    long long _purchaseURLBagType;
    IKAppContext *_scriptAppContext;
    NSString *_storeFrontIdentifier;
    SKUIURLBag *_urlBag;
    long long _userInterfaceIdiomOverride;
}

+ (id)_configurationDictionaryWithBagDictionary:(id)arg1;
+ (id)_cachePathForStoreFrontIdentifier:(id)arg1;
+ (id)defaultContext;
@property(nonatomic) long long userInterfaceIdiomOverride; // @synthesize userInterfaceIdiomOverride=_userInterfaceIdiomOverride;
@property(readonly, nonatomic) NSString *storeFrontIdentifier; // @synthesize storeFrontIdentifier=_storeFrontIdentifier;
@property(retain, nonatomic, getter=_scriptAppContext, setter=_setScriptAppContext:) IKAppContext *_scriptAppContext; // @synthesize _scriptAppContext;
@property(copy, nonatomic) SKUIURL *purchaseReferrerURL; // @synthesize purchaseReferrerURL=_purchaseReferrerURL;
@property(copy, nonatomic) NSString *navigationHistoryPersistenceKey; // @synthesize navigationHistoryPersistenceKey=_navigationHistoryPersistenceKey;
@property(copy, nonatomic) NSString *metricsConfigurationIdentifier; // @synthesize metricsConfigurationIdentifier=_metricsConfigurationIdentifier;
@property(readonly, nonatomic) SUClientInterface *clientInterface; // @synthesize clientInterface=_clientInterface;
@property(nonatomic, getter=_applicationController, setter=_setApplicationController:) __weak SKUIApplicationController *_applicationController; // @synthesize _applicationController;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
- (void)_setValue:(id)arg1 forConfigurationKey:(id)arg2;
- (id)_navigationHistory;
- (void)_setPurchaseURLBagType:(long long)arg1;
- (void)_setPurchaseAffiliateIdentifier:(id)arg1;
- (void)_setAdditionalPurchaseParameters:(id)arg1;
- (void)sendOnXEventWithDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)sendOnPageResponseWithDocument:(id)arg1 data:(id)arg2 URLResponse:(id)arg3 performanceMetrics:(id)arg4;
@property(readonly, nonatomic) SSVPlatformContext *platformContext;
- (void)loadValueForConfigurationKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)customizePurchase:(id)arg1;
- (id)scriptInterfaceForClientInterface:(id)arg1;
- (void)clientInterface:(id)arg1 presentDialog:(id)arg2;
- (void)clientInterface:(id)arg1 dispatchXEvent:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)clientInterface:(id)arg1 dispatchOnPageResponseWithData:(id)arg2 response:(id)arg3;
- (id)valueForConfigurationKey:(id)arg1;
@property(readonly, nonatomic) SSURLBag *URLBag;
- (id)tabBarItemsForStyle:(long long)arg1;
- (void)setMetricsPageContext:(id)arg1 forViewController:(id)arg2;
- (void)pushNavigationHistoryPageIdentifier:(id)arg1;
@property(readonly, nonatomic) NSArray *navigationHistory;
- (id)metricsPageContextForViewController:(id)arg1;
- (id)localizedStringForKey:(id)arg1 inTable:(id)arg2;
- (id)localizedStringForKey:(id)arg1;
- (id)localizedAlertWithError:(id)arg1;
- (void)getDefaultMetricsControllerWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithConfigurationDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIClientContextViewControllerFactory : SUViewControllerFactory
{
}

- (id)newPlaceholderViewController;

@end

@interface SKUICollectionListViewElement : SKUIViewElement
{
}

@end

@interface SKUICollectionView : UICollectionView
{
    _Bool _delegateWantsWillLayoutSubviews;
    _Bool _externalShowsHorizontalScrollIndicator;
    _Bool _externalShowsVerticalScrollIndicator;
    double _overrideBoundsWidth;
    SKUIIndexBarControl *_indexBarControl;
}

@property(retain, nonatomic) SKUIIndexBarControl *indexBarControl; // @synthesize indexBarControl=_indexBarControl;
@property(nonatomic) double overrideBoundsWidth; // @synthesize overrideBoundsWidth=_overrideBoundsWidth;
- (void).cxx_destruct;
- (void)_updateShowsScrollIndicators;
- (void)_updateIndexBarControlFrame;
- (void)setShowsVerticalScrollIndicator:(_Bool)arg1;
- (void)setShowsHorizontalScrollIndicator:(_Bool)arg1;
- (void)setContentOffset:(struct CGPoint)arg1 animated:(_Bool)arg2;
- (void)layoutSubviews;
- (struct CGRect)bounds;
- (void)setDelegate:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 collectionViewLayout:(id)arg2;

@end

@interface SKUICollectionViewLayoutAttributes : UICollectionViewLayoutAttributes <NSCopying>
{
    UIColor *_backgroundColor;
    long long _position;
}

@property(nonatomic) long long position; // @synthesize position=_position;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUIColorScheme : NSObject <NSCopying, NSSecureCoding>
{
    UIColor *_backgroundColor;
    UIColor *_highlightedTextColor;
    UIColor *_primaryTextColor;
    UIColor *_secondaryTextColor;
}

+ (_Bool)supportsSecureCoding;
@property(copy, nonatomic) UIColor *secondaryTextColor; // @synthesize secondaryTextColor=_secondaryTextColor;
@property(copy, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(copy, nonatomic) UIColor *highlightedTextColor; // @synthesize highlightedTextColor=_highlightedTextColor;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) long long schemeStyle;
- (id)initWithColorSchemeDictionary:(id)arg1;

@end

@interface SKUIColumnViewElement : SKUIViewElement
{
    long long _columnSpan;
}

@property(readonly, nonatomic) long long columnSpan; // @synthesize columnSpan=_columnSpan;
- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIHeaderViewElement *headerElement;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUICompletion : NSObject <SKUICacheCoding>
{
    NSString *_alternateTitle;
    NSString *_title;
    NSString *_URLString;
}

@property(readonly, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *alternateTitle; // @synthesize alternateTitle=_alternateTitle;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (id)initWithCompletionDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICompletionDataConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUICompletionList : NSObject <SKUICacheCoding>
{
    NSArray *_completions;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSArray *completions; // @synthesize completions=_completions;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (id)initWithCompletionListDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIComposeReviewFormViewController : SUViewController <SKUIComposeReviewViewDelegate>
{
    SKUIComposeReviewView *_composeView;
    id <SKUIComposeReviewFormDelegate> _delegate;
    SKUIReviewMetadata *_review;
}

@property(nonatomic) __weak id <SKUIComposeReviewFormDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_submit;
- (void)_cancel;
- (void)composeReviewViewValidityChanged:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)setRating:(float)arg1;
@property(readonly, copy, nonatomic) SKUIReviewMetadata *editedReviewMetadata;
- (void)dealloc;
- (id)initWithReviewMetadata:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIComposeReviewHeaderView : UIView <SKUIComposeTextFieldListViewDelegate>
{
    id <SKUIComposeReviewHeaderDelegate> _delegate;
    SKStarRatingControl *_ratingControl;
    SKUIReviewMetadata *_review;
    _Bool _showNicknameField;
    long long _style;
    SKUIComposeTextFieldListView *_textFieldListView;
}

@property(retain, nonatomic) SKUIReviewMetadata *review; // @synthesize review=_review;
@property(nonatomic) __weak id <SKUIComposeReviewHeaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long composeReviewStyle; // @synthesize composeReviewStyle=_style;
- (void).cxx_destruct;
- (void)textFieldListValuesDidChange:(id)arg1;
- (void)textFieldListValidityDidChange:(id)arg1;
- (id)textFieldList:(id)arg1 configurationForFieldAtIndex:(unsigned long long)arg2;
- (long long)numberOfFieldsInTextFieldList:(id)arg1;
- (long long)numberOfColumnsInTextFieldList:(id)arg1;
@property(readonly, nonatomic) NSString *title;
@property(nonatomic) float rating;
@property(readonly, nonatomic) NSString *nickname;
@property(readonly, nonatomic) UIResponder *initialFirstResponder;
- (void)sizeToFit;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIComposeReviewView : UIView <SKUIComposeReviewHeaderDelegate, UITextContentViewDelegate>
{
    long long _currentBodyLength;
    id <SKUIComposeReviewViewDelegate> _delegate;
    SKUIComposeReviewHeaderView *_headerView;
    unsigned int _loading:1;
    SULoadingView *_loadingView;
    SKUIReviewMetadata *_review;
    UIScrollView *_scrollView;
    long long _style;
    SUTextContentView *_textContentView;
}

@property(nonatomic) __weak id <SKUIComposeReviewViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long composeReviewStyle; // @synthesize composeReviewStyle=_style;
- (void).cxx_destruct;
- (void)_updateContentSize;
- (void)_showLoadingView;
- (void)_showComposeView;
- (id)_reviewPlaceholder;
- (void)_layoutLoadingView;
- (void)_layoutComposeView;
- (_Bool)_isReviewTextOptional;
- (void)_delayedUpdateReviewLength;
- (id)_body;
- (void)_keyboardVisibilityDidChangeNotification:(id)arg1;
- (void)textContentViewDidChange:(id)arg1;
- (_Bool)textContentView:(id)arg1 shouldScrollForPendingContentSize:(struct CGSize)arg2;
- (_Bool)textContentView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (_Bool)textContentView:(id)arg1 shouldChangeSizeForContentSize:(struct CGSize)arg2;
- (void)textContentView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)composeHeaderViewValuesDidChange:(id)arg1;
- (void)composeHeaderViewValidityDidChange:(id)arg1;
- (void)setReview:(id)arg1;
@property(nonatomic) float rating;
@property(nonatomic, getter=isLoading) _Bool loading;
- (void)reloadData;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (id)copyReview;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIComposeReviewViewController : SUNavigationController <SKUIComposeReviewFormDelegate, UIAlertViewDelegate>
{
    SKUIComposeReviewFormViewController *_formViewController;
    SUPlaceholderViewController *_placeholderViewController;
}

- (void).cxx_destruct;
- (void)_sendDidCancel;
- (void)_sendDidSubmit;
- (void)_loadReviewWithURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_finishLoadWithOutput:(id)arg1 error:(id)arg2;
- (void)_cancelAction:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)composeReviewFormDidSubmit:(id)arg1;
- (void)composeReviewFormDidCancel:(id)arg1;
- (void)submitReview;
- (void)setRating:(float)arg1;
- (void)loadReviewWithURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, copy, nonatomic) SKUIReviewMetadata *editedReviewMetadata;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <SKUIComposeReviewDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIComposeTextField : UIView <UITextFieldDelegate>
{
    SKUIComposeTextFieldConfiguration *_configuration;
    long long _currentTextLength;
    id _delegate;
    UILabel *_label;
    long long _style;
    UITextField *_textField;
}

+ (id)labelColorForStyle:(long long)arg1;
+ (id)labelFontForStyle:(long long)arg1;
@property(readonly, nonatomic) UITextField *textField; // @synthesize textField=_textField;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long composeReviewStyle; // @synthesize composeReviewStyle=_style;
- (void).cxx_destruct;
- (void)_textChanged:(id)arg1;
- (_Bool)textField:(id)arg1 shouldInsertText:(id)arg2 replacingRange:(struct _NSRange)arg3;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
@property(copy, nonatomic) NSString *text;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
@property(readonly, nonatomic) SKUIComposeTextFieldConfiguration *configuration;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1 style:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIComposeTextFieldConfiguration : NSObject
{
    struct UIEdgeInsets _borderInsets;
    long long _columnIndex;
    _Bool _isRequired;
    NSString *_label;
    unsigned long long _maxLength;
    NSString *_placeholder;
    NSString *_value;
}

@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(nonatomic) unsigned long long maxLength; // @synthesize maxLength=_maxLength;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic, getter=isRequired) _Bool required; // @synthesize required=_isRequired;
@property(nonatomic) long long columnIndex; // @synthesize columnIndex=_columnIndex;
@property(nonatomic) struct UIEdgeInsets borderInsets; // @synthesize borderInsets=_borderInsets;
- (void).cxx_destruct;

@end

@interface SKUIComposeTextFieldListView : UIView
{
    id <SKUIComposeTextFieldListViewDelegate> _delegate;
    NSMutableArray *_fields;
    _Bool _isValid;
    long long _style;
}

@property(nonatomic) __weak id <SKUIComposeTextFieldListViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long composeReviewStyle; // @synthesize composeReviewStyle=_style;
- (void).cxx_destruct;
- (void)_updateValidity;
- (void)composeTextFieldValidityChanged:(id)arg1;
- (id)textForFieldAtIndex:(unsigned long long)arg1;
- (void)reloadData;
- (void)layoutSubviews;
- (_Bool)isValid;
@property(readonly, nonatomic) UIResponder *initialFirstResponder;
@property(readonly, nonatomic) double height;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

@end

@interface SKUIContentInsetScrollView : UIScrollView
{
}

- (void)setScrollIndicatorInsets:(struct UIEdgeInsets)arg1;

@end

@interface SKUIContentRatingArtworkResourceLoader : NSObject <SKUIArtworkRequestDelegate>
{
    NSMapTable *_artworkRequestIDs;
    SKUIImageDataConsumer *_imageDataConsumer;
    SKUIResourceLoader *_loader;
    NSHashTable *_observers;
    UIImage *_placeholderImage;
}

@property(retain, nonatomic) SKUIImageDataConsumer *imageDataConsumer; // @synthesize imageDataConsumer=_imageDataConsumer;
@property(readonly, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_loader;
- (void).cxx_destruct;
- (id)_loadImage:(id)arg1;
- (id)_urlForContentRating:(id)arg1 clientContext:(id)arg2;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)removeObserver:(id)arg1;
@property(readonly, nonatomic) struct CGSize imageSize;
@property(readonly, nonatomic) UIImage *placeholderImage;
- (void)loadImageForContentRating:(id)arg1 clientContent:(id)arg2 reason:(long long)arg3;
- (id)cachedImageForContentRating:(id)arg1 withClientContext:(id)arg2;
- (void)addObserver:(id)arg1;
- (id)initWithArtworkLoader:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIContentUnavailableCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    SKUIContentUnavailableView *_contentUnavailableView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)applyLayoutAttributes:(id)arg1;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIContentUnavailableDocumentViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, SKUIDocumentViewController>
{
    SKUIContentUnavailableView *_contentUnavailableView;
    SKUIViewElementLayoutContext *_layoutContext;
    SKUIContentUnavailableTemplateElement *_templateElement;
    SKUILayoutCache *_textLayoutCache;
}

- (void).cxx_destruct;
- (void)_reloadContentUnavailableView:(id)arg1 width:(double)arg2;
- (id)_layoutContext;
- (struct UIEdgeInsets)_contentInsets;
- (void)layoutCacheDidFinishBatch:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)documentDidUpdate:(id)arg1;
- (void)dealloc;
- (id)initWithTemplateElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITableViewCell : UITableViewCell
{
    SKUIBorderView *_bottomBorderView;
    SKUIBorderView *_topBorderView;
    double _titlePaddingLeft;
    struct UIEdgeInsets _textLabelInsets;
    double _borderPaddingLeft;
}

@property(nonatomic) struct UIEdgeInsets textLabelInsets; // @synthesize textLabelInsets=_textLabelInsets;
@property(nonatomic) double borderPaddingLeft; // @synthesize borderPaddingLeft=_borderPaddingLeft;
- (void).cxx_destruct;
- (void)_reloadBorderVisibility;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)prepareForReuse;
@property(copy, nonatomic) UIColor *topBorderColor;
@property(copy, nonatomic) UIColor *bottomBorderColor;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIContentUnavailableTableViewCell : SKUITableViewCell
{
    _UIContentUnavailableView *_view;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *title;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIContentUnavailableTemplateElement : SKUIViewElement
{
}

- (long long)pageComponentType;
@property(readonly, nonatomic) SKUILabelViewElement *titleLabel;
@property(readonly, nonatomic) SKUILabelViewElement *messageLabel;
@property(readonly, nonatomic) SKUIImageViewElement *image;
@property(readonly, nonatomic) SKUIButtonViewElement *button;

@end

@interface SKUIContentUnavailableView : SKUIViewReuseView <SKUIViewElementView>
{
    UIControl *_button;
    SKUIButtonViewElement *_buttonElement;
    struct UIEdgeInsets _contentInset;
    SKUIImageView *_imageView;
    SKUIImageViewElement *_imageElement;
    SKUIAttributedStringView *_messageView;
    SKUIAttributedStringView *_titleView;
}

+ (id)_attributedStringWithTitleLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringWithMessageLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringWithButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (double)_firstBaselineOffsetForView:(id)arg1;
- (double)_baselineOffsetForView:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICountdown : NSObject
{
    _Bool _isLoaded;
    _Bool _flapped;
    long long _type;
    NSURL *_URL;
    NSDate *_endDate;
    unsigned long long _dateFormat;
    NSDate *_startDate;
    long long _initialValue;
    long long _finalValue;
    long long _rate;
    NSString *_numberFormat;
    UIColor *_fontColor;
    UIColor *_flapTopColor;
    UIColor *_flapBottomColor;
    SKUIArtworkList *_artworkList;
    SKUIArtworkList *_endArtworkList;
}

@property(retain, nonatomic) SKUIArtworkList *endArtworkList; // @synthesize endArtworkList=_endArtworkList;
@property(retain, nonatomic) SKUIArtworkList *artworkList; // @synthesize artworkList=_artworkList;
@property(nonatomic, getter=isFlapped) _Bool flapped; // @synthesize flapped=_flapped;
@property(copy, nonatomic) UIColor *flapBottomColor; // @synthesize flapBottomColor=_flapBottomColor;
@property(copy, nonatomic) UIColor *flapTopColor; // @synthesize flapTopColor=_flapTopColor;
@property(copy, nonatomic) UIColor *fontColor; // @synthesize fontColor=_fontColor;
@property(copy, nonatomic) NSString *numberFormat; // @synthesize numberFormat=_numberFormat;
@property(nonatomic) long long rate; // @synthesize rate=_rate;
@property(nonatomic) long long finalValue; // @synthesize finalValue=_finalValue;
@property(nonatomic) long long initialValue; // @synthesize initialValue=_initialValue;
@property(copy, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(nonatomic) unsigned long long dateFormat; // @synthesize dateFormat=_dateFormat;
@property(copy, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (_Bool)isLoaded;
- (void)updateWithDictionary:(id)arg1;
- (id)initWithCountdownDictionary:(id)arg1;

@end

@interface SKUICountdownComponent : SKUIPageComponent
{
    SKUICountdown *_countdown;
}

@property(retain, nonatomic) SKUICountdown *countdown; // @synthesize countdown=_countdown;
- (void).cxx_destruct;
- (long long)componentType;
- (id)initWithCustomPageContext:(id)arg1;

@end

@interface SKUICountdownFlapView : UIImageView
{
    UIView *_backgroundViewBot;
    UIView *_backgroundViewTop;
    UIImageView *_backgroundViewTransitionBot;
    UIImageView *_backgroundViewTransitionTop;
    double _factor;
    UIColor *_flapTopColor;
    UIColor *_flapBottomColor;
    UILabel *_labelBot;
    UILabel *_labelTop;
    UILabel *_labelTransitionBot;
    UILabel *_labelTransitionTop;
    long long _position;
    NSString *_string;
    UIColor *_textColor;
}

@property(readonly, nonatomic) long long position; // @synthesize position=_position;
@property(readonly, nonatomic) UIColor *flapBottomColor; // @synthesize flapBottomColor=_flapBottomColor;
@property(readonly, nonatomic) UIColor *flapTopColor; // @synthesize flapTopColor=_flapTopColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) NSString *string; // @synthesize string=_string;
- (void).cxx_destruct;
- (struct CATransform3D)_transformForAngle:(double)arg1 isTop:(_Bool)arg2;
- (id)_newBackgroundImageForTop:(int)arg1;
- (id)_newLabel;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithPosition:(long long)arg1 flapTopColor:(id)arg2 flapBottomColor:(id)arg3;

@end

@interface SKUICountdownView : UIView
{
    SKUIClientContext *_clientContext;
    SKUICountdown *_countdown;
    NSTimer *_timer;
    SKUICountdownViewTimerTarget *_timerTarget;
    UILabel *_dateDescriptionLabelDay;
    UILabel *_dateDescriptionLabelHour;
    UILabel *_dateDescriptionLabelMinute;
    UILabel *_dateDescriptionLabelSecond;
    UILabel *_dateLabelDay;
    UILabel *_dateLabelHour;
    UILabel *_dateLabelMinute;
    UILabel *_dateLabelSecond;
    NSMutableArray *_dateFlapLabels;
    NSMutableArray *_numberFlapLabels;
    NSMutableArray *_numberSeparatorLabels;
    UIImageView *_imageView;
    UILabel *_numberLabel;
    NSNumberFormatter *_numberFormatter;
    NSOperationQueue *_operationQueue;
    double _factor;
}

@property(readonly, nonatomic) SKUICountdown *countdown; // @synthesize countdown=_countdown;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_setCountdownWithResponse:(id)arg1 error:(id)arg2;
- (void)_currentRemainingDays:(long long *)arg1 hours:(long long *)arg2 minutes:(long long *)arg3 seconds:(long long *)arg4;
- (long long)_currentValue;
- (void)_reloadFontSizes;
- (void)_reloadTimeFlapped;
- (void)_reloadTime;
- (void)_reloadDateDescriptions:(_Bool)arg1;
- (void)_reloadNumberFlapped;
- (void)_reloadNumber;
- (void)_reload;
- (id)_newNumberSeparatorLabel;
- (id)_newDateDescriptionLabel;
- (id)_newFlapLabelWithPosition:(long long)arg1;
- (id)_newDateLabel;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)stop;
- (void)start;
@property(retain, nonatomic) UIImage *backgroundImage;
- (void)dealloc;
- (id)initWithCountdown:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUICountdownViewController : UIViewController <SKUIArtworkRequestDelegate>
{
    SKUIResourceLoader *_artworkLoader;
    SKUICountdownComponent *_countdownComponent;
    SKUIClientContext *_clientContext;
}

@property(readonly, nonatomic) SKUICountdownComponent *countdownComponent; // @synthesize countdownComponent=_countdownComponent;
@property(readonly, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_artworkLoader;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)loadView;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithCountdownComponent:(id)arg1 artworkLoader:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICountdownViewTimerTarget : NSObject
{
    CDUnknownBlockType _actionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
- (void).cxx_destruct;
- (void)action;

@end

@interface SKUICounterCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    SKUICounterView *_counterView;
    SKUIImageView *_highlightImageView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (void)_reloadHighlightImageView;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICounterTimeView : UIView
{
    SKUIClientContext *_clientContext;
    _SKUICounterTimeFieldView *_daysFieldView;
    NSDate *_endDate;
    _SKUICounterTimeFieldView *_hoursFieldView;
    long long _lastTimeValue;
    _SKUICounterTimeFieldView *_minutesFieldView;
    _SKUICounterTimeFieldView *_secondsFieldView;
    UIColor *_textColor;
    UIFont *_valueFont;
    unsigned long long _visibleFields;
}

@property(nonatomic) unsigned long long visibleFields; // @synthesize visibleFields=_visibleFields;
@property(retain, nonatomic) UIFont *valueFont; // @synthesize valueFont=_valueFont;
@property(copy, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
- (void).cxx_destruct;
- (id)_visibleFieldViews;
- (void)_setValuesUsingTimestamp:(long long)arg1;
- (double)_fieldSpacingForFieldCount:(long long)arg1 fieldWidth:(double)arg2 totalWidth:(double)arg3;
- (id)_allFieldViews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)reloadTimeValue;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUICounterView : SKUIViewReuseView <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    SKUICounterViewElement *_counterElement;
    SKUIImageView *_imageView;
    NSNumberFormatter *_numberFormatter;
    UILabel *_numberView;
    SKUICounterTimeView *_timeView;
    NSObject<OS_dispatch_source> *_updateTimer;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (unsigned long long)_visibleTimeFieldsForDateFormat:(long long)arg1;
- (void)_updateTimerAction;
- (void)_stopUpdateTimer;
- (void)_startUpdateTimer;
- (void)_reloadUpdateTimer;
- (void)_reloadNumberValue;
- (void)_addTimeViewWithViewElement:(id)arg1 context:(id)arg2;
- (void)_addNumberViewWithViewElement:(id)arg1 context:(id)arg2;
- (void)setHidden:(_Bool)arg1;
- (void)setAlpha:(double)arg1;
- (void)layoutSubviews;
- (void)didMoveToSuperview;
- (void)didMoveToWindow;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUICounterViewElement : SKUIViewElement
{
    double _changeRatePerSecond;
    long long _counterType;
    long long _dateFormatType;
    NSDate *_endDate;
    NSString *_numberFormat;
    long long _startValue;
    NSDate *_startValueDate;
    long long _stopValue;
}

@property(readonly, nonatomic) long long stopValue; // @synthesize stopValue=_stopValue;
@property(readonly, nonatomic) NSDate *startValueDate; // @synthesize startValueDate=_startValueDate;
@property(readonly, nonatomic) long long startValue; // @synthesize startValue=_startValue;
@property(readonly, nonatomic) NSString *numberFormat; // @synthesize numberFormat=_numberFormat;
@property(readonly, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(readonly, nonatomic) long long dateFormatType; // @synthesize dateFormatType=_dateFormatType;
@property(readonly, nonatomic) long long counterType; // @synthesize counterType=_counterType;
@property(readonly, nonatomic) double changeRatePerSecond; // @synthesize changeRatePerSecond=_changeRatePerSecond;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (long long)currentNumberValue;
@property(readonly, nonatomic) SKUIImageViewElement *backgroundImageElement;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIImageViewElement : SKUIViewElement
{
    NSString *_alt;
    BOOL _enabled;
    SKUIImageViewElementCacheKey *_resourceCacheKey;
    NSString *_resourceName;
    struct CGSize _size;
    SKUIImageViewElementCacheKey *_transientResourceCacheKey;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) id transientResourceCacheKey; // @synthesize transientResourceCacheKey=_transientResourceCacheKey;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) NSString *resourceName; // @synthesize resourceName=_resourceName;
- (void).cxx_destruct;
- (_Bool)rendersWithPerspective;
- (long long)pageComponentType;
- (_Bool)isEnabled;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)accessibilityText;
@property(readonly, nonatomic) id resourceCacheKey;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIDecorationImageViewElement : SKUIImageViewElement
{
}

@end

@interface SKUIDefaultCardLayout : SKUICardLayout
{
}

- (double)topInsetForViewElement:(id)arg1 previousViewElement:(id)arg2 width:(double)arg3;
- (id)attributedStringForLabel:(id)arg1;
- (id)attributedStringForButton:(id)arg1;

@end

@interface SKUIDeveloperInfo : NSObject <NSCopying>
{
    NSArray *_addressLines;
    NSString *_administrativeArea;
    NSString *_businessRegistrationIdentifier;
    NSString *_country;
    NSString *_ecommerceRegistrationIdentifier;
    NSString *_emailAddress;
    NSString *_isoCountryCode;
    NSString *_locality;
    NSString *_phoneNumber;
    NSString *_tradeName;
    NSString *_tradeRepresentativeName;
    NSString *_postalCode;
}

@property(copy, nonatomic) NSString *postalCode; // @synthesize postalCode=_postalCode;
@property(copy, nonatomic) NSString *tradeRepresentativeName; // @synthesize tradeRepresentativeName=_tradeRepresentativeName;
@property(copy, nonatomic) NSString *tradeName; // @synthesize tradeName=_tradeName;
@property(copy, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(copy, nonatomic) NSString *locality; // @synthesize locality=_locality;
@property(copy, nonatomic) NSString *ISOCountryCode; // @synthesize ISOCountryCode=_isoCountryCode;
@property(copy, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(copy, nonatomic) NSString *ECommerceRegistrationIdentifier; // @synthesize ECommerceRegistrationIdentifier=_ecommerceRegistrationIdentifier;
@property(copy, nonatomic) NSString *country; // @synthesize country=_country;
@property(copy, nonatomic) NSString *businessRegistrationIdentifier; // @synthesize businessRegistrationIdentifier=_businessRegistrationIdentifier;
@property(copy, nonatomic) NSString *administrativeArea; // @synthesize administrativeArea=_administrativeArea;
@property(copy, nonatomic) NSArray *addressLines; // @synthesize addressLines=_addressLines;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)formattedAddressString;
- (id)initWithDeveloperDictionary:(id)arg1;

@end

@interface SKUIDeveloperInfoLineItemView : UIView
{
    struct UIEdgeInsets _contentInset;
    UILabel *_labelLabel;
    UIView *_separatorView;
    UILabel *_valueLabel;
}

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)initWithLabel:(id)arg1 value:(id)arg2;

@end

@interface SKUIDeveloperInfoView : UIView
{
    SKUIClientContext *_clientContext;
    SKUIDeveloperInfo *_developerInfo;
    UIView *_infoSeparatorView;
    SKUIProductInformationView *_infoView;
    NSMutableArray *_lineViews;
}

@property(readonly, nonatomic) SKUIDeveloperInfo *developerInfo; // @synthesize developerInfo=_developerInfo;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)initWithDeveloperInfo:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIDeveloperInfoViewController : SKUIViewController
{
    SKUIDeveloperInfo *_developerInfo;
    SKUIDeveloperInfoView *_infoView;
    UIScrollView *_scrollView;
}

@property(readonly, nonatomic) SKUIDeveloperInfo *developerInfo; // @synthesize developerInfo=_developerInfo;
- (void).cxx_destruct;
- (void)loadView;
- (id)initWithDeveloperInfo:(id)arg1;

@end

@interface SKUIDialogTemplateViewElement : SKUIViewElement
{
    long long _dialogType;
}

@property(readonly, nonatomic) long long dialogType; // @synthesize dialogType=_dialogType;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUILabelViewElement *title;
@property(readonly, nonatomic) SKUILabelViewElement *message;
@property(readonly, nonatomic) NSArray *buttons;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIDismissingProductViewController : SKStoreProductViewController <SKStoreProductViewControllerDelegate>
{
}

- (void)productViewControllerDidFinish:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIDividerPageComponent : SKUIPageComponent
{
    NSString *_title;
}

@property(readonly, nonatomic) NSString *dividerTitle; // @synthesize dividerTitle=_title;
- (void).cxx_destruct;
- (long long)componentType;
- (id)initWithViewElement:(id)arg1;
- (id)initWithDividerTitle:(id)arg1;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIDividerViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIDividerPageSection : SKUIStorePageSection
{
}

- (void)willAppearInContext:(id)arg1;
- (struct UIEdgeInsets)sectionContentInset;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIDividerPageComponent *pageComponent; // @dynamic pageComponent;

@end

@interface SKUIDividerView : UIView
{
    long long _dividerOrientation;
    double _dividerSize;
}

@property(nonatomic) double dividerSize; // @synthesize dividerSize=_dividerSize;
@property(nonatomic) long long dividerOrientation; // @synthesize dividerOrientation=_dividerOrientation;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
@property(retain, nonatomic) UIColor *dividerColor;

@end

@interface SKUIDividerViewElement : SKUIViewElement
{
    SKUIViewElementText *_text;
}

@property(readonly, nonatomic) SKUIViewElementText *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (long long)pageComponentType;
- (_Bool)isEnabled;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIDocumentContainerViewController : SKUIViewController <IKAppDocumentDelegate, SKUIModalSourceViewProvider, SKUINavigationPaletteProvider>
{
    UIViewController *_beforeErrorChildViewController;
    UIViewController *_childViewController;
    NSArray *_defaultLeftBarButtonItems;
    IKAppDocument *_document;
    SSVLoadURLOperation *_loadURLOperation;
    SKUINavigationBarController *_navigationBarController;
    NSNumber *_orientationAtDisappear;
    NSNumber *_pageResponseAbsoluteTime;
    NSSet *_personalizationItems;
    NSDictionary *_presentationOptions;
    NSArray *_searchBarControllers;
    NSValue *_sizeAtDisappear;
    unsigned long long _templateViewElementType;
    NSString *_urlString;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (id)_sidepackViewControllerWithOptions:(id)arg1 clientContext:(id)arg2;
- (void)_showAccountViewControllerWithURL:(id)arg1;
- (void)_setChildViewController:(id)arg1;
- (void)_sendOnViewAttributesChangeWithAttributes:(id)arg1;
- (void)_reloadNavigationPalette;
- (void)_reloadNavigationBarController;
- (void)_reloadForNetworkTypeChange;
- (void)_reloadDefaultBarButtonItems;
- (void)_redirectToURL:(id)arg1;
- (id)_newViewControllerWithTemplateElement:(id)arg1 options:(id)arg2 clientContext:(id)arg3;
- (id)_navigationBarViewElement;
- (id)_millisecondsFromTimeInterval:(double)arg1;
- (void)_forceOrientationBackToSupportedOrientation;
- (void)_finishLoadOperationWithResponse:(id)arg1 error:(id)arg2;
- (void)_finishLegacyProtocolOperationForResponse:(id)arg1 dataProvider:(id)arg2 dictionary:(id)arg3;
- (void)_enqueueLoadURLOperation;
- (void)_networkTypeChangeNotification:(id)arg1;
@property(readonly, nonatomic) UIView *navigationPaletteView;
- (void)getModalSourceViewForElementIdentifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)impressionableViewElementsForDocument:(id)arg1;
- (void)documentScrollToTop:(id)arg1;
- (void)documentNeedsUpdate:(id)arg1;
- (void)documentDidUpdate:(id)arg1;
- (void)document:(id)arg1 runTestWithName:(id)arg2 options:(id)arg3;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (void)reloadData;
- (void)loadView;
- (id)contentScrollView;
- (void)skui_viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithDocument:(id)arg1 options:(id)arg2 clientContext:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIDocumentStackItem : NSObject
{
    IKAppDocument *_document;
    SKUINavigationDocumentController *_navigationDocumentController;
    NSDictionary *_presentationOptions;
    _Bool _usesNavigationControllerForModalPresentation;
    UIViewController *_viewController;
}

@property(retain, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) _Bool usesNavigationControllerForModalPresentation; // @synthesize usesNavigationControllerForModalPresentation=_usesNavigationControllerForModalPresentation;
@property(readonly, nonatomic) NSDictionary *presentationOptions; // @synthesize presentationOptions=_presentationOptions;
@property(retain, nonatomic) SKUINavigationDocumentController *navigationDocumentController; // @synthesize navigationDocumentController=_navigationDocumentController;
@property(readonly, nonatomic) IKAppDocument *document; // @synthesize document=_document;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *sourceElementIdentifier;
@property(readonly, nonatomic) NSString *overlayType;
@property(readonly, nonatomic) NSString *sheetType;
@property(readonly, nonatomic) NSString *presentationType;
@property(readonly, nonatomic, getter=isAnimated) _Bool animated;
- (id)initWithDocument:(id)arg1 presentationOptions:(id)arg2;

@end

@interface SKUIDonationAmountView : UIView
{
    NSArray *_amountButtons;
    UILabel *_amountDisclaimerLabel;
    SKUIGiftCharity *_charity;
    UILabel *_descriptionLabel;
    UILabel *_legalTextLabel;
    UILabel *_legalText2Label;
    UIImageView *_logoImageView;
    long long _selectedAmountIndex;
    UIView *_separatorView;
    UIScrollView *_scrollView;
}

@property(readonly, nonatomic) SKUIGiftCharity *charity; // @synthesize charity=_charity;
- (void).cxx_destruct;
- (void)_amountButtonUpOutside:(id)arg1;
- (void)_amountButtonUpInside:(id)arg1;
- (void)_amountButtonDown:(id)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) UIImage *logoImage;
@property(readonly, nonatomic) SKUIGiftAmount *selectedAmount;
- (void)dealloc;
- (id)initWithCharity:(id)arg1;

@end

@interface SKUIDonationStepViewController : UIViewController
{
    SKUIGiftCharity *_charity;
    SKUIDonationConfiguration *_configuration;
    NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly, nonatomic) SKUIDonationConfiguration *donationConfiguration; // @synthesize donationConfiguration=_configuration;
@property(readonly, nonatomic) SKUIGiftCharity *charity; // @synthesize charity=_charity;
- (void).cxx_destruct;
- (id)initWithCharity:(id)arg1 configuration:(id)arg2;

@end

@interface SKUIDonationAmountViewController : SKUIDonationStepViewController <SKUIDonationConfigurationObserver>
{
    SKUIDonationAmountView *_amountView;
    SKUIGiftValidationResponse *_lastValidationResponse;
    SKUIGiftPurchaseRequest *_purchaseRequest;
    _Bool _tappedNextWhileValidating;
    SKUIGiftValidator *_validator;
}

- (void).cxx_destruct;
- (void)_validateDonation:(id)arg1;
- (void)_setDonationButtonEnabled:(_Bool)arg1;
- (void)_reenableAfterFailure;
- (void)_performActionAfterValidation;
- (void)_finishValidationWithResponse:(id)arg1 error:(id)arg2;
- (void)_finishPurchaseWithResult:(_Bool)arg1 errorMessage:(id)arg2;
- (void)_amountChangedNotification:(id)arg1;
- (void)_donateButtonAction:(id)arg1;
- (void)_cancelButtonAction:(id)arg1;
- (void)donationConfigurationController:(id)arg1 didLoadLogoForCharity:(id)arg2;
- (void)loadView;
- (void)dealloc;
- (id)initWithCharity:(id)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIDonationConfiguration : NSObject
{
    NSArray *_charities;
    NSMutableDictionary *_charityImages;
    SKUIClientContext *_clientContext;
    NSURL *_donationPurchaseURL;
    NSURL *_donationValidationURL;
    NSHashTable *_observers;
    NSOperationQueue *_operationQueue;
}

@property(readonly, nonatomic) NSURL *donationValidationURL; // @synthesize donationValidationURL=_donationValidationURL;
@property(readonly, nonatomic) NSURL *donationPurchaseURL; // @synthesize donationPurchaseURL=_donationPurchaseURL;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) NSArray *allCharities; // @synthesize allCharities=_charities;
- (void).cxx_destruct;
- (void)_setLogoImage:(id)arg1 forCharity:(id)arg2;
- (void)_finishLoadWithResponse:(id)arg1 error:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)removeObserver:(id)arg1;
- (id)logoImageForCharity:(id)arg1;
- (void)loadLogoForCharity:(id)arg1;
- (void)loadConfigurationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)charityForIdentifier:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithOperationQueue:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIDonationResultView : UIView
{
    UIImageView *_imageView;
    UILabel *_messageLabel;
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *message;
@property(retain, nonatomic) UIImage *image;

@end

@interface SKUIDonationResultViewController : SKUIDonationStepViewController <SKUIDonationConfigurationObserver>
{
    SKUIGiftAmount *_donationAmount;
    SKUIDonationResultView *_resultView;
}

@property(copy, nonatomic) SKUIGiftAmount *donationAmount; // @synthesize donationAmount=_donationAmount;
- (void).cxx_destruct;
- (void)_doneButtonAction:(id)arg1;
- (void)donationConfigurationController:(id)arg1 didLoadLogoForCharity:(id)arg2;
- (void)loadView;
- (id)initWithCharity:(id)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIDonationViewController : UINavigationController
{
    NSString *_charityID;
    SKUIClientContext *_clientContext;
    SKUIDonationConfiguration *_donationConfiguration;
    NSOperationQueue *_operationQueue;
    UIViewController *_placeholderViewController;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) NSString *charityIdentifier; // @synthesize charityIdentifier=_charityID;
- (void).cxx_destruct;
- (void)_loadDonationConfiguration;
- (void)_finishAuthenticateWithResponse:(id)arg1 error:(id)arg2;
- (void)_configurationDidLoadWithResult:(_Bool)arg1 error:(id)arg2;
- (void)_cancelButtonAction:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithCharityIdentifier:(id)arg1;
- (id)_initSKUIDonationViewController;

@end

@interface SKUIDownloadsCellView : UIView
{
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UIImageView *_imageView;
    UIButton *_button;
    UISlider *_progressSlider;
    NSAttributedString *_attributedTitle;
    NSString *_subtitle;
    long long _buttonType;
    _Bool _isPad;
}

@property(nonatomic) _Bool isPad; // @synthesize isPad=_isPad;
@property(retain, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(nonatomic) long long buttonType; // @synthesize buttonType=_buttonType;
@property(readonly, nonatomic) UIButton *button; // @synthesize button=_button;
@property(retain, nonatomic) NSAttributedString *attributedTitle; // @synthesize attributedTitle=_attributedTitle;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
@property(nonatomic) double progress;
@property(retain, nonatomic) UIImage *image;
- (id)init;

@end

@interface SKUIDownloadsCollectionViewCell : UICollectionViewCell
{
    SKUIDownloadsCellView *_cellView;
    UIImageView *_editIndicator;
    long long _cellState;
}

@property(readonly, nonatomic) SKUIDownloadsCellView *cellView; // @synthesize cellView=_cellView;
@property(nonatomic) long long cellState; // @synthesize cellState=_cellState;
- (void).cxx_destruct;
- (void)_reloadEditState;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIDownloadsTableViewCell : UITableViewCell
{
    SKUIDownloadsCellView *_cellView;
}

@property(readonly, nonatomic) SKUIDownloadsCellView *cellView; // @synthesize cellView=_cellView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIDownloadsView : UIView
{
    UIView *_contentView;
    UIView *_overlayView;
}

@property(retain, nonatomic) UIView *overlayView; // @synthesize overlayView=_overlayView;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface SKUIDownloadsViewController : SKUIViewController <SSDownloadManagerObserver, SKUIDownloadsChildViewControllerDelegate>
{
    SKUIImageDataConsumer *_consumer;
    SSDownloadManager *_downloadManager;
    NSArray *_downloads;
    NSMutableDictionary *_imageOperations;
    NSCache *_images;
    SKUIIPhoneDownloadsViewController *_iphoneViewController;
    SKUIIPadDownloadsViewController *_ipadViewController;
    UIImage *_nullImage;
}

+ (long long)_sizeClassForSize:(struct CGSize)arg1;
- (void).cxx_destruct;
- (void)_setArtwork:(id)arg1 forURLString:(id)arg2;
- (void)_reloadManagerFromServer;
- (void)_reloadBadge;
- (void)_reloadView;
- (void)_reloadViewControllerWithSize:(struct CGSize)arg1;
- (void)downloadManagerDownloadsDidChange:(id)arg1;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
- (id)childViewController:(id)arg1 artworkForDownload:(id)arg2;
- (void)childViewController:(id)arg1 removeDownloads:(id)arg2;
- (void)childViewController:(id)arg1 performActionForDownload:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialCardCell : SKUICollectionViewCell <SKUICellLayoutParentView>
{
    SKUIEditorialCardCellLayout *_layout;
    _Bool _layoutNeedsLayout;
}

@property(readonly, nonatomic) SKUIEditorialCardCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setCellLayoutNeedsLayout;
- (void)prepareForReuse;
- (void)configureForSearchEditorial:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialCardCellLayout : SKUICellLayout
{
    UIImageView *_artworkImageView;
    UIButton *_button;
    UILabel *_messageLabel;
    UILabel *_messageTitleLabel;
}

- (void).cxx_destruct;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (void)prepareForReuse;
@property(copy, nonatomic) NSString *messageTitle;
@property(copy, nonatomic) NSString *message;
@property(copy, nonatomic) NSString *buttonTitle;
@property(retain, nonatomic) UIImage *artwork;
- (void)dealloc;

@end

@interface SKUIEditorialCardCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIPerspectiveView, SKUIViewElementView>
{
    NSMutableArray *_allLockupViews;
    SKUIVerticalLockupView *_primaryLockupView;
    struct CGSize _primaryLockupSize;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialCardLayout : NSObject
{
    NSMutableArray *_allLockups;
    SKUILockupViewElement *_primaryLockup;
    struct CGSize _primaryLockupSize;
    double _secondaryLockupWidth;
}

@property(readonly, nonatomic) double secondaryLockupWidth; // @synthesize secondaryLockupWidth=_secondaryLockupWidth;
@property(readonly, nonatomic) struct CGSize primaryLockupSize; // @synthesize primaryLockupSize=_primaryLockupSize;
@property(readonly, nonatomic) SKUILockupViewElement *primaryLockup; // @synthesize primaryLockup=_primaryLockup;
@property(readonly, nonatomic) NSArray *allLockups; // @synthesize allLockups=_allLockups;
- (void).cxx_destruct;
- (id)initWithCard:(id)arg1 width:(double)arg2 context:(id)arg3;

@end

@interface SKUIEditorialCellLayout : SKUICellLayout <SKUIEditorialLinkViewDelegate>
{
    struct UIEdgeInsets _contentInset;
    double _linkSpacing;
    SKUIEditorialLinkView *_linkView;
    SKUITextBoxView *_textBoxView;
    double _totalHeight;
}

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (id)_textBoxView;
- (id)_linkView;
- (void)editorialLinkView:(id)arg1 didSelectLink:(id)arg2;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(readonly, nonatomic) SKUITextBoxView *textBoxView;
- (void)applyEditorialLayout:(id)arg1 withOrientation:(long long)arg2 expanded:(_Bool)arg3;
- (void)dealloc;
- (id)initWithParentView:(id)arg1;
- (id)initWithCollectionViewCell:(id)arg1;
- (void)_initSKUIEditorialCellLayout;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialCollectionViewCell : SKUICollectionViewCell <SKUICellLayoutParentView>
{
    SKUIEditorialCellLayout *_layout;
    _Bool _layoutNeedsLayout;
}

@property(readonly, nonatomic) SKUIEditorialCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)applyLayoutAttributes:(id)arg1;
- (void)setCellLayoutNeedsLayout;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialComponent : SKUIPageComponent
{
    NSAttributedString *_bodyAttributedText;
    NSString *_bodyText;
    NSArray *_links;
    long long _maximumBodyLines;
    struct SKUIEditorialStyle _style;
    NSString *_titleText;
    _Bool _usesLockupTitle;
}

@property(readonly, nonatomic, getter=_usesLockupTitle) _Bool _usesLockupTitle; // @synthesize _usesLockupTitle;
@property(readonly, nonatomic) NSString *titleText; // @synthesize titleText=_titleText;
@property(readonly, nonatomic) long long maximumBodyLines; // @synthesize maximumBodyLines=_maximumBodyLines;
@property(readonly, nonatomic) NSArray *links; // @synthesize links=_links;
@property(readonly, nonatomic) struct SKUIEditorialStyle editorialStyle; // @synthesize editorialStyle=_style;
@property(readonly, nonatomic) NSString *bodyText; // @synthesize bodyText=_bodyText;
@property(readonly, nonatomic) NSAttributedString *bodyAttributedText; // @synthesize bodyAttributedText=_bodyAttributedText;
- (void).cxx_destruct;
- (long long)componentType;
- (void)_setTitleText:(id)arg1;
- (id)initWithViewElement:(id)arg1;
- (id)initWithUberText:(id)arg1;
- (id)initWithCustomPageContext:(id)arg1;
- (id)initWithBrickRoomText:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUILabelViewElement *viewElement;

@end

@interface SKUIEditorialLayout : NSObject
{
    SKUIEditorialComponent *_editorial;
    long long _landscapeLinkLayoutIndex;
    long long _landscapeTextLayoutIndex;
    long long _landscapeTitleLayoutIndex;
    double _landscapeWidth;
    long long _portraitLinkLayoutIndex;
    long long _portraitTextLayoutIndex;
    long long _portraitTitleLayoutIndex;
    double _portraitWidth;
    SKUILayoutCache *_textLayoutCache;
}

@property(readonly, nonatomic) SKUIEditorialComponent *editorialComponent; // @synthesize editorialComponent=_editorial;
- (void).cxx_destruct;
- (id)_titleTextLayoutRequestWithTotalWidth:(double)arg1;
- (id)_linkLayoutRequestWithTotalWidth:(double)arg1;
- (id)_bodyTextLayoutRequestWithTotalWidth:(double)arg1;
- (id)titleTextLayoutForOrientation:(long long)arg1;
- (void)setLayoutWidth:(double)arg1 forOrientation:(long long)arg2;
- (id)linkLayoutForOrientation:(long long)arg1;
- (void)enqueueLayoutRequests;
- (double)layoutHeightForOrientation:(long long)arg1 expanded:(_Bool)arg2;
- (id)bodyTextLayoutForOrientation:(long long)arg1;
- (id)initWithEditorial:(id)arg1 layoutCache:(id)arg2;

@end

@interface SKUIEditorialLinkLayout : NSObject <SKUICachedLayout>
{
    struct CGSize *_sizes;
    struct CGSize _totalSize;
    NSArray *_links;
}

@property(readonly, nonatomic) NSArray *links; // @synthesize links=_links;
@property(readonly, nonatomic) struct CGSize totalSize; // @synthesize totalSize=_totalSize;
- (void).cxx_destruct;
- (struct CGSize)sizeForLinkAtIndex:(long long)arg1;
- (void)enumerateLinesUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithLayoutRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialLinkLayoutRequest : NSObject <SKUILayoutRequest>
{
    NSArray *_links;
    double _width;
}

@property(nonatomic) double width; // @synthesize width=_width;
@property(copy, nonatomic) NSArray *links; // @synthesize links=_links;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) Class layoutClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialLinkView : UIView
{
    NSMutableArray *_buttons;
    id <SKUIEditorialLinkViewDelegate> _delegate;
    UIColor *_highlightedTextColor;
    long long _horizontalAlignment;
    SKUIEditorialLinkLayout *_layout;
    UIColor *_textColor;
}

@property(retain, nonatomic) SKUIEditorialLinkLayout *linkLayout; // @synthesize linkLayout=_layout;
@property(nonatomic) long long horizontalAlignment; // @synthesize horizontalAlignment=_horizontalAlignment;
@property(nonatomic) __weak id <SKUIEditorialLinkViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_newButton;
- (void)_linkButtonAction:(id)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIEditorialLockupCellLayout : SKUIItemCellLayout
{
    struct UIEdgeInsets _contentInsets;
    SKUIEditorialCellLayout *_editorialCellLayout;
    UIView *_editorialContainerView;
    double _editorialHeight;
    long long _layoutStyle;
    SKUILockupItemCellLayout *_lockupLayout;
    SKUICellLayoutView *_lockupView;
    UIColor *_offerNoticeTextColor;
    SKUITextBoxView *_textBoxView;
    unsigned long long _visibleFields;
}

+ (double)_imagePaddingForArtworkSize:(long long)arg1;
+ (double)editorialWidthForCellWidth:(double)arg1 lockupStyle:(struct SKUILockupStyle)arg2;
@property(nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property(nonatomic) unsigned long long visibleFields; // @synthesize visibleFields=_visibleFields;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (void).cxx_destruct;
- (_Bool)_showsItemOfferUnderEditorial;
- (id)_lockupView;
- (_Bool)_isItemOfferButtonHidden;
- (id)_editorialContainerView;
- (id)_editorialCellLayout;
- (void)setRestricted:(_Bool)arg1;
- (void)setItemState:(id)arg1 animated:(_Bool)arg2;
- (void)setItemOfferNoticeString:(id)arg1;
- (void)setItemOfferButtonAppearance:(id)arg1;
- (void)setItemOffer:(id)arg1;
- (void)setIconImageHidden:(_Bool)arg1;
- (void)setIconImage:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)layoutForItemOfferChange;
- (id)itemState;
- (id)itemOfferNoticeString;
- (id)itemOffer;
- (_Bool)isIconImageHidden;
- (id)iconImageView;
- (id)iconImage;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(readonly, nonatomic) SKUITextBoxView *textBoxView;
- (void)setColoringWithColorScheme:(id)arg1;
@property(readonly, nonatomic) SKUILockupItemCellLayout *lockupCellLayout;
- (void)applyEditorialLayout:(id)arg1 withOrientation:(long long)arg2;

@end

@interface SKUIItemCollectionViewCell : SKUICollectionViewCell <SKUICellLayoutParentView>
{
    _Bool _layoutNeedsLayout;
}

- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)prepareForReuse;
- (void)applyLayoutAttributes:(id)arg1;
- (void)setCellLayoutNeedsLayout;
@property(readonly, nonatomic) SKUIItemCellLayout *layout;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIEditorialLockupCollectionViewCell : SKUIItemCollectionViewCell
{
    SKUIEditorialLockupCellLayout *_layout;
}

@property(readonly, nonatomic) SKUIEditorialLockupCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIEditorialPageSection : SKUIStorePageSection
{
    SKUIColorScheme *_colorScheme;
    SKUIEditorialLayout *_editorialLayout;
    _Bool _isExpanded;
}

- (void).cxx_destruct;
- (id)_editorialLayout;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIEditorialComponent *pageComponent; // @dynamic pageComponent;

@end

@interface SKUIEmbeddedMediaView : UIControl
{
    id <SKUIEmbeddedMediaViewDelegate> _delegate;
    long long _mediaType;
    NSString *_mediaURLString;
    MPMoviePlayerController *_moviePlayer;
    UIImageView *_playerDecorationView;
    UIImageView *_thumbnailReflectionView;
    UIImageView *_thumbnailView;
    _Bool _usingInlinePlayback;
}

@property(copy, nonatomic) NSString *mediaURLString; // @synthesize mediaURLString=_mediaURLString;
@property(nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(nonatomic) __weak id <SKUIEmbeddedMediaViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_thumbnailView;
- (void)_tearDownMoviePlayer;
- (struct CGSize)_sizeToFitImageSize:(struct CGSize)arg1 bounds:(struct CGRect)arg2;
- (void)_sendPlaybackStateChanged;
- (id)_newMoviePlayerControllerWithURL:(id)arg1;
- (void)_playbackStateChanged:(id)arg1;
- (void)_didFinishPlayback:(id)arg1;
- (void)_didExitFullscreen:(id)arg1;
- (void)didMoveToWindow;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) UIImage *thumbnailImage;
@property(nonatomic) long long thumbnailContentMode;
@property(nonatomic) _Bool showsThumbnailReflection;
@property(readonly, nonatomic) long long playbackState;
- (void)endPlaybackAnimated:(_Bool)arg1;
- (void)beginPlaybackAnimated:(_Bool)arg1;
- (void)beginInlinePlaybackWithURL:(id)arg1;
- (void)dealloc;

@end

@interface SKUIEmptyContentPlaceholderView : UIView
{
    struct UIEdgeInsets _imageInsets;
    UIImageView *_imageView;
    UILabel *_label;
    UIButton *_signInButton;
}

@property(nonatomic) struct UIEdgeInsets placeholderImageInsets; // @synthesize placeholderImageInsets=_imageInsets;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(nonatomic) _Bool showsSignInButton;
@property(readonly, nonatomic) UIButton *signInButton;
@property(copy, nonatomic) NSString *placeholderMessage;
@property(retain, nonatomic) UIImage *placeholderImage;
@property(readonly, nonatomic) UILabel *placeholderMessageLabel;
- (void)maskPlaceholdersInBackdropView:(id)arg1;

@end

@interface SKUIErrorDocumentViewController : SKUIViewController <SKUIDocumentViewController>
{
    SKUIClientContext *_clientContext;
    unsigned long long _contentUnavailableStyle;
}

- (void).cxx_destruct;
- (void)loadView;
- (void)documentDidUpdate:(id)arg1;
- (id)initWithBackgroundColor:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIExpandPageComponent : SKUIPageComponent
{
    NSMutableArray *_childComponents;
    SKUIExpandViewElement *_viewElement;
}

@property(readonly, nonatomic) SKUIExpandViewElement *viewElement; // @synthesize viewElement=_viewElement;
- (void).cxx_destruct;
- (id)metricsElementName;
- (long long)componentType;
- (id)childComponents;
- (id)childComponentForIndex:(long long)arg1;
- (id)initWithViewElement:(id)arg1;

@end

@interface SKUIExpandPageSectionContext : NSObject
{
}

@end

@interface SKUIExpandViewElement : SKUIViewElement
{
    _Bool _open;
    _Bool _previousIsOpen;
}

@property(nonatomic) _Bool previousIsOpen; // @synthesize previousIsOpen=_previousIsOpen;
@property(readonly, nonatomic, getter=isOpen) _Bool open; // @synthesize open=_open;
- (long long)pageComponentType;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIExploreDocumentViewController : SKUIViewController <CLLocationManagerDelegate, SKUIStackedBarDelegate, UINavigationControllerDelegate, UISplitViewControllerDelegate, SKUIDocumentViewController>
{
    NSArray *_contentOffsets;
    SKUIContentInsetScrollView *_contentScrollView;
    SKUIExploreTemplateElement *_exploreTemplate;
    UINavigationController *_leftVC;
    CLLocationManager *_locationManager;
    UINavigationController *_navigationController;
    _Bool _nearMeEnabled;
    SKUIStorePageSectionsViewController *_rightVC;
    UISplitViewController *_splitVC;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (id)_rightVCColorScheme;
- (id)_rightPageComponents;
- (id)_leftPageComponentsAtIndex:(long long)arg1;
- (void)_reloadRightViewController;
- (void)_reloadSelectionForViewController:(id)arg1;
- (void)_reloadLeftViewControllers;
- (void)_reloadData;
- (id)_pageComponentsAtIndex:(long long)arg1;
- (id)_newSectionsViewControllerAtIndex:(long long)arg1;
- (void)_getPageComponents:(id *)arg1 title:(id *)arg2 forViewControllerAtIndex:(long long)arg3;
- (id)_rootNavigationTitle;
- (void)_contentInsetDidChange:(id)arg1;
- (_Bool)splitViewController:(id)arg1 shouldHideViewController:(id)arg2 inOrientation:(long long)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)stackedBar:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)navigationController:(id)arg1 didShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (id)impressionableViewElements;
- (void)documentDidUpdate:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;
- (void)loadView;
- (id)contentScrollView;
- (void)setClientContext:(id)arg1;
- (void)selectGenreListComponent:(id)arg1;
- (void)dealloc;
- (id)initWithTemplateElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIExploreTemplateElement : SKUIViewElement
{
    _Bool _usesSplits;
}

@property(readonly, nonatomic) _Bool usesSplits; // @synthesize usesSplits=_usesSplits;
- (void)_getLeftSplit:(id *)arg1 rightSplit:(id *)arg2;
@property(readonly, nonatomic) SKUIViewElement *rightSplit;
@property(readonly, nonatomic) SKUINavigationBarViewElement *navigationBarElement;
@property(readonly, nonatomic) SKUIViewElement *leftSplit;
@property(readonly, nonatomic) NSArray *childViewElements;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIFacebookLikeStatus : NSObject <NSCopying>
{
    NSArray *_friends;
    NSURL *_url;
    _Bool _userLiked;
}

@property(nonatomic, getter=isUserLiked) _Bool userLiked; // @synthesize userLiked=_userLiked;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(copy, nonatomic) NSArray *friendNames; // @synthesize friendNames=_friends;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithURL:(id)arg1 likeStatusDictionary:(id)arg2;

@end

@interface SKUIFacebookPageComponent : SKUIPageComponent
{
}

- (long long)componentType;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIFacebookViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIFacebookPageSection : SKUIStorePageSection
{
    ACAccountStore *_accountStore;
    BOOL _facebookAccountsExist;
    SKUIReviewsFacebookView *_facebookView;
    _Bool _isLoadingLikeStatus;
    SKUIFacebookLikeStatus *_likeStatus;
}

- (void).cxx_destruct;
- (void)_resetState;
- (void)_reloadLikeStatus;
- (void)_reloadCollectionViewSection;
- (void)_finishLookupWithStatus:(id)arg1 error:(id)arg2;
- (id)_facebookView;
- (long long)_facebookAccountsExist;
- (void)_changeStatusToUserLiked:(_Bool)arg1;
- (id)_accountStore;
- (void)_accountStoreDidChangeNotification:(id)arg1;
- (void)_toggleLikeAction:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIFacebookPageComponent *pageComponent; // @dynamic pageComponent;

@end

@interface SKUIFacebookViewElement : SKUIViewElement
{
    long long _facebookType;
    NSString *_urlString;
}

@property(readonly, nonatomic) NSString *URLString; // @synthesize URLString=_urlString;
@property(readonly, nonatomic) long long facebookType; // @synthesize facebookType=_facebookType;
- (void).cxx_destruct;
- (long long)pageComponentType;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIFamilyCircleController : NSObject
{
    SSFamilyCircle *_iTunesFamily;
    FAFamilyCircle *_iCloudFamily;
    NSNumber *_lastAccountID;
    NSCache *_imageCache;
    NSOperationQueue *_opQueue;
    SKUIClientContext *_clientContext;
    _Bool _hasLoaded;
}

+ (id)sharedController;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) FAFamilyCircle *iCloudFamily; // @synthesize iCloudFamily=_iCloudFamily;
@property(readonly, nonatomic) SSFamilyCircle *familyCircle; // @synthesize familyCircle=_iTunesFamily;
@property(readonly, nonatomic) _Bool hasLoaded; // @synthesize hasLoaded=_hasLoaded;
- (void).cxx_destruct;
- (void)_setProfilePicture:(id)arg1 forMember:(id)arg2;
- (void)_setITunesFamily:(id)arg1 error:(id)arg2 iCloudFamily:(id)arg3 error:(id)arg4;
- (void)_reloadDataWithPromptStyle:(long long)arg1;
- (void)_accountStoreDidChange:(id)arg1;
- (id)profilePictureForFamilyMember:(id)arg1;
- (void)reloadData;
- (void)dealloc;
- (id)init;

@end

@interface SKUIFamilySetupTemplateViewElement : SKUIViewElement
{
}

@end

@interface SKUIFilterBarCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    SKUIFilterBarView *_filterBarView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIFilterBarView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIMenuPopoverDelegate, SKUIViewElementView>
{
    SKUIDividerView *_bottomDividerView;
    NSMutableArray *_centerElementViews;
    struct UIEdgeInsets _contentInset;
    NSMutableArray *_elementControllers;
    UIControl *_focusedMenuButton;
    NSMutableArray *_leftElementViews;
    SKUIMenuPopoverController *_popoverController;
    NSMutableArray *_rightElementViews;
    NSMapTable *_viewElementViews;
}

+ (id)_attributedStringForMenuItem:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButtonText:(id)arg1 style:(id)arg2 context:(id)arg3;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_destroyMenuPopover;
- (void)_showConfirmationAction:(id)arg1;
- (void)_menuButtonAction:(id)arg1;
- (void)_imageTapAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)menuPopover:(id)arg1 willRepositionToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)menuPopover:(id)arg1 didSelectMenuItemAtIndex:(long long)arg2;
- (void)menuPopoverDidCancel:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIFilterBarViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)childViewElementsForAlignment:(unsigned long long)arg1;
@property(readonly, nonatomic) SKUIDividerViewElement *bottomDivider;

@end

@interface SKUIFlexibleSegmentedControl : UIView
{
    id <SKUIFlexibleSegmentedControlDelegate> _delegate;
    double _desiredSegmentWidth;
    _Bool _isMoreListSelected;
    NSArray *_itemTitles;
    long long _maximumNumberOfVisibleItems;
    NSString *_moreListTitle;
    long long _previousSelectedSegmentIndex;
    UISegmentedControl *_segmentedControl;
    long long _selectedSegmentIndex;
}

@property(copy, nonatomic) NSString *moreListTitle; // @synthesize moreListTitle=_moreListTitle;
@property(nonatomic) long long maximumNumberOfVisibleItems; // @synthesize maximumNumberOfVisibleItems=_maximumNumberOfVisibleItems;
@property(copy, nonatomic) NSArray *itemTitles; // @synthesize itemTitles=_itemTitles;
@property(nonatomic) double desiredSegmentWidth; // @synthesize desiredSegmentWidth=_desiredSegmentWidth;
@property(nonatomic) __weak id <SKUIFlexibleSegmentedControlDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_setTitles:(id)arg1 forSegmentedControl:(id)arg2;
- (void)_configureSegmentedControl:(id)arg1 withTitles:(id)arg2 boundingSize:(struct CGSize)arg3;
- (void)_valueChangeAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(nonatomic) long long selectedSegmentIndex; // @synthesize selectedSegmentIndex=_selectedSegmentIndex;
@property(readonly, nonatomic) long long moreListIndex;
- (struct CGRect)frameForSegmentWithIndex:(long long)arg1;
- (void)cancelMoreList;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIFloatingOverlayView : UIView
{
    struct UIEdgeInsets _contentInset;
    UIView *_contentView;
}

@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIFocusedTouchGestureRecognizer : UIGestureRecognizer
{
    NSMutableSet *_activeTouches;
    _Bool _didTouchOutside;
    UIView *_focusedView;
    struct UIEdgeInsets _touchAllowance;
}

@property(nonatomic) struct UIEdgeInsets touchAllowance; // @synthesize touchAllowance=_touchAllowance;
@property(readonly, nonatomic) UIView *focusedView; // @synthesize focusedView=_focusedView;
- (void).cxx_destruct;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;
- (id)initWithFocusedView:(id)arg1 touchAllowance:(struct UIEdgeInsets)arg2;

@end

@interface SKUIFullscreenImageViewElement : SKUIImageViewElement
{
}

@end

@interface SKUIFullscreenRedeemCameraView : UIView <UITextFieldDelegate>
{
    id <SKUIRedeemCameraViewDelegate> _delegate;
    UIView *_overlay;
    UIView *_redeemerView;
    SKUIRedeemTextField *_textField;
    struct CGRect _keyboardRect;
    _Bool _enabled;
}

@property(nonatomic) __weak id <SKUIRedeemCameraViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_resumeRedeemer;
- (void)_pauseRedeemer;
- (id)_newTextFieldWithClientContext:(id)arg1;
- (void)_hideKeyboard;
- (void)_tapGestureAction:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)layoutSubviews;
- (void)start;
@property(nonatomic) _Bool enabled;
- (void)showKeyboard;
@property(retain, nonatomic) UIImage *image;
@property(copy, nonatomic) NSString *text;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGalleryPageComponent : SKUIPageComponent
{
    NSArray *_childComponents;
    double _cycleInterval;
    _Bool _hidesPageIndicator;
}

@property(nonatomic) _Bool hidesPageIndicator; // @synthesize hidesPageIndicator=_hidesPageIndicator;
@property(nonatomic) double cycleInterval; // @synthesize cycleInterval=_cycleInterval;
@property(readonly, nonatomic) NSArray *childComponents; // @synthesize childComponents=_childComponents;
- (void).cxx_destruct;
- (id)metricsElementName;
- (long long)componentType;
- (id)initWithCustomPageContext:(id)arg1;

@end

@interface SKUIGalleryPaneViewController : UIViewController
{
    SKUIMediaComponent *_component;
    long long _galleryIndex;
}

@property(readonly, nonatomic) long long galleryIndex; // @synthesize galleryIndex=_galleryIndex;
@property(readonly, nonatomic) SKUIMediaComponent *component; // @synthesize component=_component;
- (void).cxx_destruct;
@property(readonly, nonatomic) SKUIEmbeddedMediaView *mediaView;
- (id)initWithMediaComponent:(id)arg1 galleryIndex:(long long)arg2;

@end

@interface SKUIGallerySwooshCollectionViewCell : UICollectionViewCell
{
    UIView *_contentChildView;
    UIColor *_titleColor;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UIView *contentChildView; // @synthesize contentChildView=_contentChildView;
- (void).cxx_destruct;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
- (void)setColoringWithColorScheme:(id)arg1;

@end

@interface SKUIGallerySwooshPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIGallerySwooshViewControllerDelegate>
{
    NSMapTable *_componentArtworkRequests;
    SKUIGallerySwooshViewController *_swooshViewController;
}

- (void).cxx_destruct;
- (id)_swooshViewController;
- (id)_newArtworkRequestWithArtwork:(id)arg1;
- (void)_addImpressionForIndex:(long long)arg1 toSession:(id)arg2;
- (void)swoosh:(id)arg1 willDisplayCellAtIndex:(long long)arg2;
- (id)swoosh:(id)arg1 imageForCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didChangePlaybackState:(long long)arg2 forItemAtIndex:(long long)arg3;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUISwooshPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIGallerySwooshViewController : SKUISwooshViewController <SKUIEmbeddedMediaViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout>
{
    UICollectionView *_collectionView;
    _Bool _delegateWantsWillDisplay;
    SKUISwooshPageComponent *_gallerySwoosh;
    double _itemHeight;
    SKUISwooshView *_swooshView;
}

@property(readonly, nonatomic) SKUISwooshPageComponent *gallerySwoosh; // @synthesize gallerySwoosh=_gallerySwoosh;
- (void).cxx_destruct;
- (id)_newViewWithMediaComponent:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)mediaView:(id)arg1 playbackStateDidChange:(long long)arg2;
- (void)loadView;
- (void)setImage:(id)arg1 forItemAtIndex:(long long)arg2;
@property(nonatomic) __weak id <SKUIGallerySwooshViewControllerDelegate> delegate; // @dynamic delegate;
- (id)indexPathsForVisibleItems;
- (void)setColorScheme:(id)arg1;
- (void)performActionForItemAtIndex:(long long)arg1 animated:(_Bool)arg2;
- (id)artworkForItemAtIndex:(long long)arg1;
- (id)initWithGallerySwoosh:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGalleryViewController : UIViewController <SKUIArtworkRequestDelegate, UIPageViewControllerDataSource, UIPageViewControllerDelegate, UIScrollViewDelegate>
{
    SKUIResourceLoader *_artworkLoader;
    NSMapTable *_componentArtworkRequests;
    NSObject<OS_dispatch_source> *_cycleTimer;
    id <SKUIEmbeddedMediaViewDelegate> _embeddedMediaDelegate;
    SKUIGalleryPageComponent *_galleryComponent;
    UIPageControl *_pageIndicator;
    UIPageViewController *_pageViewController;
    UITapGestureRecognizer *_tapGestureRecognizer;
}

@property(readonly, nonatomic) SKUIGalleryPageComponent *galleryComponent; // @synthesize galleryComponent=_galleryComponent;
@property(nonatomic) __weak id <SKUIEmbeddedMediaViewDelegate> embeddedMediaDelegate; // @synthesize embeddedMediaDelegate=_embeddedMediaDelegate;
- (void).cxx_destruct;
- (void)_stopCycleTimer;
- (void)_startCycleTimer;
- (void)_showNextPaneAnimated:(_Bool)arg1;
- (id)_selectedViewController;
- (id)_newViewWithMediaComponent:(id)arg1;
- (id)_newViewControllerWithIndex:(long long)arg1;
- (void)_finishPaneAnimation;
- (void)_tapAction:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)setBackgroundColor:(id)arg1;
@property(readonly, nonatomic) SKUIMediaComponent *selectedMediaComponent;
- (void)performActionForSelectedComponentAnimated:(_Bool)arg1;
- (void)loadArtworkForChildComponent:(id)arg1 reason:(long long)arg2 constraintWidth:(double)arg3;
- (void)dealloc;
- (id)initWithGalleryComponent:(id)arg1 artworkLoader:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGift : NSObject <NSCopying>
{
    long long _category;
    NSDate *_deliveryDate;
    long long _giftAmount;
    NSString *_giftAmountString;
    SKUIItem *_item;
    NSString *_message;
    NSArray *_recipientAddresses;
    NSString *_senderEmailAddress;
    NSString *_senderName;
    SKUIGiftTheme *_theme;
    NSString *_totalGiftAmountString;
}

@property(copy, nonatomic) NSString *totalGiftAmountString; // @synthesize totalGiftAmountString=_totalGiftAmountString;
@property(copy, nonatomic) SKUIGiftTheme *theme; // @synthesize theme=_theme;
@property(copy, nonatomic) NSString *senderName; // @synthesize senderName=_senderName;
@property(copy, nonatomic) NSString *senderEmailAddress; // @synthesize senderEmailAddress=_senderEmailAddress;
@property(copy, nonatomic) NSArray *recipientAddresses; // @synthesize recipientAddresses=_recipientAddresses;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) long long giftCategory; // @synthesize giftCategory=_category;
@property(copy, nonatomic) NSString *giftAmountString; // @synthesize giftAmountString=_giftAmountString;
@property(nonatomic) long long giftAmount; // @synthesize giftAmount=_giftAmount;
@property(copy, nonatomic) NSDate *deliveryDate; // @synthesize deliveryDate=_deliveryDate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)reset;
- (id)HTTPBodyDictionary;
- (id)initWithItem:(id)arg1;
- (id)initWithGiftCategory:(long long)arg1;

@end

@interface SKUIGiftActivity : UIActivity <SKUIGiftViewControllerDelegate>
{
    SKUIClientContext *_clientContext;
    SKUIProductPageItem *_item;
}

- (void).cxx_destruct;
- (void)giftViewController:(id)arg1 didFinishWithResult:(_Bool)arg2;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_beforeActivity;
- (id)activityViewController;
- (id)activityType;
- (id)activityTitle;
- (id)activityImage;
- (id)initWithItem:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITableViewSection : NSObject
{
    id <SKUITableViewSectionDelegate> _delegate;
    _Bool _hidesHeaderView;
    long long _sectionIndex;
}

@property(nonatomic) long long sectionIndex; // @synthesize sectionIndex=_sectionIndex;
@property(nonatomic) _Bool hidesHeaderView; // @synthesize hidesHeaderView=_hidesHeaderView;
@property(nonatomic) __weak id <SKUITableViewSectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forIndexPath:(id)arg3;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
@property(readonly, nonatomic) long long numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)headerViewForTableView:(id)arg1;
- (id)footerViewForTableView:(id)arg1;

@end

@interface SKUIGiftTableViewSection : SKUITableViewSection
{
    SKUIGiftConfiguration *_giftConfiguration;
}

+ (id)aloneRowBackgroundImageWithSize:(struct CGSize)arg1;
@property(readonly, nonatomic) SKUIGiftConfiguration *giftConfiguration; // @synthesize giftConfiguration=_giftConfiguration;
- (void).cxx_destruct;
- (id)initWithGiftConfiguration:(id)arg1;

@end

@interface SKUIGiftAddressingSection : SKUIGiftTableViewSection
{
    double _footerHeight;
    NSString *_footerString;
    SKUIGift *_gift;
    UITextView *_messagingTextView;
    SKUIGiftRecipientTableViewCell *_recipientTableViewCell;
    id <UITextFieldDelegate> _textFieldDelegate;
    double _textViewCellHeight;
}

@property(nonatomic) id <UITextFieldDelegate> textFieldDelegate; // @synthesize textFieldDelegate=_textFieldDelegate;
@property(retain, nonatomic) SKUIGift *gift; // @synthesize gift=_gift;
- (void).cxx_destruct;
- (id)_textViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)_textFieldTableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)_recipientTableViewCell;
- (id)_footerString;
- (id)_attributedPlaceholderWithString:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forIndexPath:(id)arg3;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (void)endEditingMessageForTableView:(id)arg1 indexPath:(id)arg2;
- (void)beginEditingMessageForTableView:(id)arg1 indexPath:(id)arg2;
- (id)initWithGiftConfiguration:(id)arg1;

@end

@interface SKUIGiftAmount : NSObject <NSCopying>
{
    NSString *_displayLabel;
    NSString *_partNumber;
    NSNumber *_value;
}

@property(copy, nonatomic) NSNumber *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *partNumber; // @synthesize partNumber=_partNumber;
@property(copy, nonatomic) NSString *displayLabel; // @synthesize displayLabel=_displayLabel;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)HTTPBodyDictionary;
- (id)initWithAmountDictionary:(id)arg1;

@end

@interface SKUIGiftAmountButton : UIButton
{
    UIView *_borderView;
}

- (void).cxx_destruct;
- (void)_reloadBorderView;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIGiftAmountControl : UIControl <UITextFieldDelegate>
{
    NSMutableArray *_amountButtons;
    UIView *_customAmountBackgroundView;
    UITextField *_customAmountField;
    SKUIGiftConfiguration *_giftConfiguration;
    long long _selectedAmount;
    long long _trackingAmount;
}

- (void).cxx_destruct;
- (void)_updateButtonsWithTouch:(id)arg1;
- (void)_reloadSelectedButton;
- (void)_textFieldDidEndEditing:(id)arg1;
- (void)_textFieldDidChange:(id)arg1;
- (void)_textFieldDidBeginEditing:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
@property(readonly, nonatomic) NSString *selectedAmountString;
@property(readonly, nonatomic) long long selectedAmount;
- (void)dealloc;
- (id)initWithGiftConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGiftAmountSection : SKUIGiftTableViewSection
{
    SKUIGiftAmountControl *_amountControl;
}

- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forIndexPath:(id)arg3;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
@property(readonly, nonatomic) NSString *selectedAmountString;
@property(readonly, nonatomic) long long selectedAmount;
@property(readonly, nonatomic) UIControl *amountControl;

@end

@interface SKUIGiftCharity : NSObject
{
    NSString *_amountDisclaimer;
    NSArray *_amounts;
    NSString *_description;
    NSString *_identifier;
    NSString *_legalText;
    NSString *_legalText2;
    SKUIArtwork *_logoArtwork;
    NSString *_name;
}

@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) SKUIArtwork *logoArtwork; // @synthesize logoArtwork=_logoArtwork;
@property(readonly, nonatomic) NSString *legalText2; // @synthesize legalText2=_legalText2;
@property(readonly, nonatomic) NSString *legalText; // @synthesize legalText=_legalText;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSArray *donationAmounts; // @synthesize donationAmounts=_amounts;
@property(readonly, nonatomic) NSString *charityDescription; // @synthesize charityDescription=_description;
@property(readonly, nonatomic) NSString *amountDisclaimer; // @synthesize amountDisclaimer=_amountDisclaimer;
- (void).cxx_destruct;
- (id)initWithCharityDictionary:(id)arg1;

@end

@interface SKUIGiftComposeRecipientView : MFComposeRecipientView
{
}

@property(readonly, nonatomic) UILabel *storeKitUILabel;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIGiftStepViewController : UIViewController
{
    SKUIGift *_gift;
    SKUIGiftConfiguration *_giftConfiguration;
    SSVLoadURLOperation *_loadOperation;
    NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly, nonatomic) SKUIGiftConfiguration *giftConfiguration; // @synthesize giftConfiguration=_giftConfiguration;
- (void).cxx_destruct;
- (void)_finishImageLoadWithImage:(id)arg1 error:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)loadItemArtworkWithArtworkContext:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) SKUIGift *gift; // @synthesize gift=_gift;
- (void)finishGiftingWithResult:(_Bool)arg1;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;

@end

@interface SKUIGiftComposeViewController : SKUIGiftStepViewController <UIPopoverControllerDelegate, UITableViewDataSource, UITableViewDelegate, UITextFieldDelegate>
{
    SKUIGiftAddressingSection *_addressingSection;
    SKUIGiftAmountSection *_amountSection;
    UIPopoverController *_datePickerPopover;
    UIDatePicker *_datePicker;
    UIImage *_itemImage;
    SKUIGiftItemView *_itemView;
    SKUIGiftValidationResponse *_lastValidationResponse;
    UIPopoverController *_peoplePickerPopover;
    UIPopoverController *_searchResultsPopover;
    UIView *_searchResultsView;
    NSMutableArray *_sections;
    SKUIGiftSendDateSection *_sendDateSection;
    NSIndexPath *_showDatePickerIndexPathAfterKeyboardDismiss;
    UITableView *_tableView;
    _Bool _tappedNextWhileValidating;
    SKUIGiftTermsAndConditionsSection *_termsSection;
    NSObject<OS_dispatch_source> *_validationTimer;
    SKUIGiftValidator *_validator;
}

- (void).cxx_destruct;
- (void)_validateGiftThrottled:(_Bool)arg1;
- (void)_validateGift;
- (void)_showDatePickerPopoverForRowAtIndexPath:(id)arg1;
- (void)_showDatePickerForRowAtIndexPath:(id)arg1;
- (void)_setItemImage:(id)arg1 error:(id)arg2;
- (void)_removeDatePickerIfPossible;
- (void)_reloadSections;
- (void)_pushThemePickerOrShowInvalidAlert;
- (id)_itemView;
- (id)_itemImage;
- (id)_headerView;
- (void)_finishValidationWithResponse:(id)arg1 error:(id)arg2;
- (void)_textViewDidEndEditingNotification:(id)arg1;
- (void)_textViewChangeNotification:(id)arg1;
- (void)_textFieldChangeNotification:(id)arg1;
- (void)_recipientsDidChangeNotification:(id)arg1;
- (void)_keyboardChangeNotification:(id)arg1;
- (void)_nextAction:(id)arg1;
- (void)_datePickerAction:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)_amountControlAction:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (_Bool)popoverControllerShouldDismissPopover:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)tableView:(id)arg1 giftRecipientCell:(id)arg2 presentPeoplePicker:(id)arg3;
- (void)tableView:(id)arg1 giftRecipientCell:(id)arg2 dismissPeoplePicker:(id)arg3;
- (void)tableView:(id)arg1 giftRecipientCell:(id)arg2 didUpdateSearchController:(id)arg3;
- (void)tableView:(id)arg1 giftRecipientCellDidChangeSize:(id)arg2;
- (void)tableView:(id)arg1 giftRecipientCellDidChangeRecipients:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGiftConfiguration : NSObject
{
    NSArray *_charities;
    NSMutableDictionary *_charityImages;
    SKUIClientContext *_clientContext;
    NSString *_currencySymbol;
    long long _currencySymbolPosition;
    NSArray *_fixedGiftAmountLabels;
    NSArray *_fixedGiftAmountValues;
    NSString *_senderName;
    struct _NSRange _giftAmountRange;
    NSURL *_giftPurchaseURL;
    NSURL *_giftValidationURL;
    long long _maximumMessageLength;
    NSHashTable *_observers;
    NSOperationQueue *_operationQueue;
    NSString *_senderEmailAddress;
    NSString *_storeFrontName;
    NSArray *_themes;
}

@property(readonly, nonatomic) NSArray *themes; // @synthesize themes=_themes;
@property(readonly, nonatomic) NSString *storeFrontName; // @synthesize storeFrontName=_storeFrontName;
@property(readonly, nonatomic) NSString *senderEmailAddress; // @synthesize senderEmailAddress=_senderEmailAddress;
@property(readonly, nonatomic) long long maximumMessageLength; // @synthesize maximumMessageLength=_maximumMessageLength;
@property(readonly, nonatomic) NSURL *giftValidationURL; // @synthesize giftValidationURL=_giftValidationURL;
@property(readonly, nonatomic) NSURL *giftPurchaseURL; // @synthesize giftPurchaseURL=_giftPurchaseURL;
@property(readonly, nonatomic) struct _NSRange giftAmountRange; // @synthesize giftAmountRange=_giftAmountRange;
@property(readonly, nonatomic) NSString *senderName; // @synthesize senderName=_senderName;
@property(readonly, nonatomic) NSArray *fixedGiftAmountValues; // @synthesize fixedGiftAmountValues=_fixedGiftAmountValues;
@property(readonly, nonatomic) NSArray *fixedGiftAmountLabels; // @synthesize fixedGiftAmountLabels=_fixedGiftAmountLabels;
@property(readonly, nonatomic) long long currencySymbolPosition; // @synthesize currencySymbolPosition=_currencySymbolPosition;
@property(readonly, nonatomic) NSString *currencySymbol; // @synthesize currencySymbol=_currencySymbol;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_setLogoImage:(id)arg1 forCharity:(id)arg2;
- (void)_setHeaderImage:(id)arg1 forTheme:(id)arg2;
- (void)_loadThemeImages;
- (void)_finishLoadAccountInfoWithResponse:(id)arg1 error:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)_finishLoadWithResponse:(id)arg1 error:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)removeObserver:(id)arg1;
- (id)logoImageForCharity:(id)arg1;
- (void)loadLogoForCharity:(id)arg1;
- (void)loadConfigurationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)loadCachedConfiguration;
- (id)charityForIdentifier:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)initWithOperationQueue:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIGiftConfirmLabeledValue : UIView
{
    SKUIGiftDashView *_dashView;
    UILabel *_labelLabel;
    long long _style;
    UILabel *_valueLabel;
}

@property(readonly, nonatomic) long long giftConfirmLabelStyle; // @synthesize giftConfirmLabelStyle=_style;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *value;
@property(copy, nonatomic) NSString *label;
- (id)initWithGiftConfirmLabelStyle:(long long)arg1;

@end

@interface SKUIGiftConfirmView : UIView
{
    SKUIGiftConfirmLabeledValue *_amountView;
    UILabel *_chargeDisclaimerLabel;
    UILabel *_confirmYourOrderLabel;
    SKUIGiftConfirmLabeledValue *_senderView;
    SKUIGiftConfiguration *_giftConfiguration;
    SKUIGiftConfirmLabeledValue *_itemView;
    SKUIGiftConfirmLabeledValue *_messageView;
    SKUIGiftConfirmLabeledValue *_recipientsView;
    UIView *_rule1;
    UIView *_rule2;
    UIView *_rule3;
    UIView *_rule4;
    UIView *_rule5;
    UIView *_rule6;
    SKUIGiftConfirmLabeledValue *_fromView;
    SKUIGiftConfirmLabeledValue *_sendOnView;
    UIButton *_termsButton;
    SKUIGiftConfirmLabeledValue *_themeNameView;
    UILabel *_totalLabel;
}

- (void).cxx_destruct;
- (id)_termsButton;
- (id)_newLightLabelWithSize:(double)arg1 white:(double)arg2 alpha:(double)arg3;
- (id)_newBoldLabelWithSize:(double)arg1 white:(double)arg2;
- (void)layoutSubviews;
@property(readonly, nonatomic) UIButton *termsButton;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;

@end

@interface SKUIGiftConfirmViewController : SKUIGiftStepViewController
{
    SKUIGiftConfirmView *_confirmView;
    _Bool _isShowingConfirmation;
    SKUIGiftPurchaseRequest *_purchaseRequest;
    SKUIFocusedTouchGestureRecognizer *_touchRecognizer;
}

- (void).cxx_destruct;
- (void)_showSuccessPage;
- (void)_setShowingConfirmation:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_removeCancelGestureRecognizer;
- (void)_purchaseGift;
- (void)_finishPurchaseWithResult:(_Bool)arg1 errorMessage:(id)arg2;
- (void)_termsButtonAction:(id)arg1;
- (void)_cancelBuyConfirmation:(id)arg1;
- (void)_buyButtonAction:(id)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;

@end

@interface SKUIGiftContactSearchController : NSObject <MFContactsSearchConsumer, UITableViewDataSource, UITableViewDelegate>
{
    void *_addressBook;
    id <SKUIGiftContactSearchDelegate> _delegate;
    NSArray *_results;
    MFContactsSearchResultsModel *_resultsModel;
    MFContactsSearchManager *_searchManager;
    UIView *_searchResultsView;
    NSNumber *_searchTaskIdentifier;
    UITableView *_tableView;
}

@property(nonatomic) __weak id <SKUIGiftContactSearchDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_tableView;
- (void)_setResults:(id)arg1;
- (void)_finishSearchWithResults:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)finishedTaskWithID:(id)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)endedNetworkActivity;
- (void)consumeSearchResults:(id)arg1 type:(unsigned long long)arg2 taskID:(id)arg3;
- (void)beganNetworkActivity;
@property(readonly, nonatomic) UIView *searchResultsView;
- (void)searchForText:(id)arg1;
- (void)resetSearch;
@property(readonly, nonatomic) long long numberOfResults;
- (_Bool)cancelSearch;
- (void)dealloc;
- (id)initWithAddressBook:(void *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGiftDashView : UIView
{
    UIColor *_dashColor;
    struct CGSize _dashSize;
    double _dashSpacing;
}

@property(nonatomic) double dashSpacing; // @synthesize dashSpacing=_dashSpacing;
@property(nonatomic) struct CGSize dashSize; // @synthesize dashSize=_dashSize;
@property(copy, nonatomic) UIColor *dashColor; // @synthesize dashColor=_dashColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SKUIGiftDateTableViewCell : UITableViewCell
{
    UIView *_bottomBorderView;
    _Bool _checked;
    UIImageView *_checkmarkView;
    UILabel *_dateLabel;
    UILabel *_labelLabel;
    UILabel *_placeholderLabel;
    UIView *_topBorderView;
}

@property(nonatomic, getter=isChecked) _Bool checked; // @synthesize checked=_checked;
- (void).cxx_destruct;
- (id)_newLabel;
- (id)_labelColor;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *placeholder;
@property(copy, nonatomic) NSString *label;
@property(copy, nonatomic) NSString *dateString;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIGiftFooterLabelTableViewCell : UITableViewCell
{
    UILabel *_footerLabel;
}

- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *footerLabel;

@end

@interface SKUIGiftItemView : UIView
{
    NSString *_artistName;
    NSString *_categoryName;
    SKUIClientContext *_clientContext;
    SKUIItem *_item;
    UIImageView *_itemImageView;
    SKUIItemOfferButton *_itemOfferButton;
    SKUIItemState *_itemState;
    long long _itemStyle;
    long long _numberOfUserRatings;
    NSString *_price;
    UIImageView *_starRatingImageView;
    UILabel *_subtitleLabel1;
    UILabel *_subtitleLabel2;
    SKUIGiftTheme *_theme;
    UILabel *_titleLabel;
    float _userRating;
    UILabel *_userRatingCountLabel;
}

@property(nonatomic) float userRating; // @synthesize userRating=_userRating;
@property(copy, nonatomic) SKUIGiftTheme *theme; // @synthesize theme=_theme;
@property(copy, nonatomic) NSString *price; // @synthesize price=_price;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(retain, nonatomic) SKUIItemState *itemState; // @synthesize itemState=_itemState;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) long long giftItemStyle; // @synthesize giftItemStyle=_itemStyle;
@property(copy, nonatomic) NSString *categoryName; // @synthesize categoryName=_categoryName;
@property(copy, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
- (void).cxx_destruct;
- (id)_userRatingColor;
- (id)_titleColor;
- (id)_subtitleColor;
- (void)_reloadUserRatingViews;
- (void)_reloadSubtitles;
- (void)_reloadItemState:(_Bool)arg1;
- (double)_paddingRight;
- (double)_paddingLeft;
- (id)_newLabel;
- (struct CGSize)_imageSize;
- (struct UIEdgeInsets)_imageEdgeInsets;
- (void)_enumerateMetadataViewsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_itemOfferConfirmAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
- (void)setItemState:(id)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIImage *itemImage;
@property(readonly, nonatomic) SKUIItemOfferButton *itemOfferButton; // @synthesize itemOfferButton=_itemOfferButton;
@property(readonly, nonatomic) SKUIItemArtworkContext *artworkContext;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 item:(id)arg2 clientContext:(id)arg3;

@end

@interface SKUIGiftPurchaseRequest : NSObject
{
    SKUIURLConnectionRequest *_request;
}

- (void).cxx_destruct;
- (id)_requestWithURL:(id)arg1 bodyDictionary:(id)arg2;
- (void)purchaseWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;
- (id)initWithDonation:(id)arg1 configuration:(id)arg2;

@end

@interface SKUIGiftRecipientTableViewCell : UITableViewCell <ABPeoplePickerNavigationControllerDelegate, MFComposeRecipientViewDelegate, SKUIGiftContactSearchDelegate>
{
    void *_addressBook;
    ABPeoplePickerNavigationController *_peoplePickerController;
    UILabel *_placeholderLabel;
    SKUIGiftComposeRecipientView *_recipientView;
    SKUIGiftContactSearchController *_searchController;
    UIView *_topBorderView;
}

- (void).cxx_destruct;
- (void)_sendDismissPeoplePicker;
- (void)_sendDidUpdateSearchController;
- (void)_sendDidChangeRecipients;
- (void)_resetSearchController;
- (void *)_addressBook;
- (void)searchControllerDidFinishSearch:(id)arg1;
- (void)searchController:(id)arg1 didSelectRecipient:(id)arg2;
- (void)recipientViewDidResignFirstResponder:(id)arg1;
- (void)composeRecipientViewRequestAddRecipient:(id)arg1;
- (void)composeRecipientViewDidFinishPickingRecipient:(id)arg1;
- (void)composeRecipientViewDidBecomeFirstResponder:(id)arg1;
- (void)composeRecipientView:(id)arg1 textDidChange:(id)arg2;
- (void)composeRecipientView:(id)arg1 didFinishEnteringAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 didAddRecipient:(id)arg2;
- (id)composeRecipientView:(id)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (id)composeRecipientView:(id)arg1 composeRecipientForAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSArray *recipientAddresses;
@property(copy, nonatomic) NSString *label;
@property(copy, nonatomic) NSAttributedString *attributedPlaceholder;
- (void)presentSearchResultsPopover:(id)arg1 animated:(_Bool)arg2;
- (void)presentPeoplePickerPopover:(id)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGiftResultView : UIView
{
    UIButton *_giftAgainButton;
    UIImageView *_imageView;
    SKUIGiftItemView *_itemView;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) SKUIGiftItemView *itemView; // @synthesize itemView=_itemView;
@property(readonly, nonatomic) UIButton *giftAgainButton; // @synthesize giftAgainButton=_giftAgainButton;
- (void).cxx_destruct;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIImage *image;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIGiftResultViewController : SKUIGiftStepViewController
{
    UIButton *_giftAgainButton;
    UIImage *_itemImage;
    SKUIGiftItemView *_itemView;
}

- (void).cxx_destruct;
- (void)_setItemImage:(id)arg1 error:(id)arg2;
- (id)_itemView;
- (id)_itemImage;
- (void)_giftAgainAction:(id)arg1;
- (void)_doneButtonAction:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;

@end

@interface SKUIGiftSendDateSection : SKUIGiftTableViewSection
{
    NSString *_dateString;
    SKUIItem *_giftItem;
    struct UIEdgeInsets _headerInsets;
    SKUIGiftTableSectionHeaderView *_headerView;
    NSDate *_sendDate;
    long long _sendDateStyle;
}

@property(nonatomic) long long sendDateStyle; // @synthesize sendDateStyle=_sendDateStyle;
@property(copy, nonatomic) NSDate *sendDate; // @synthesize sendDate=_sendDate;
@property(retain, nonatomic) SKUIItem *giftItem; // @synthesize giftItem=_giftItem;
- (void).cxx_destruct;
- (id)_headerView;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)headerViewForTableView:(id)arg1;
@property(nonatomic) struct UIEdgeInsets headerInsets;

@end

@interface SKUIGiftTableSectionHeaderView : UIView
{
    struct UIEdgeInsets _contentInsets;
    UILabel *_label;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *label;

@end

@interface SKUIGiftTemplateViewElement : SKUIViewElement
{
    long long _giftType;
    NSString *_productBuyParams;
    long long _productItemIdentifier;
}

@property(readonly, nonatomic) long long giftType; // @synthesize giftType=_giftType;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIItem *productItem;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIGiftTermsAndConditionsSection : SKUIGiftTableViewSection
{
    UIView *_headerView;
}

- (void).cxx_destruct;
- (id)_headerView;
- (void)_termsAction:(id)arg1;
- (id)headerViewForTableView:(id)arg1;

@end

@interface SKUIGiftTextFieldTableViewCell : UITableViewCell
{
    UILabel *_label;
    UITextField *_textField;
    UIView *_topBorderView;
}

@property(readonly, nonatomic) UIControl *textField; // @synthesize textField=_textField;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(copy, nonatomic) NSString *value;
@property(nonatomic) id <UITextFieldDelegate> textFieldDelegate;
@property(copy, nonatomic) NSString *label;
@property(nonatomic) long long keyboardType;
@property(nonatomic, getter=isEnabled) _Bool enabled;
@property(copy, nonatomic) NSAttributedString *attributedPlaceholder;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIGiftTextTableViewCell : UITableViewCell <UITextViewDelegate>
{
    UIView *_bottomBorderView;
    UILabel *_label;
    long long _maximumCharacterCount;
    UILabel *_placeholderLabel;
    UITextView *_textView;
    UIView *_topBorderView;
}

+ (id)newTextView;
@property(retain, nonatomic) UITextView *textView; // @synthesize textView=_textView;
@property(nonatomic) long long maximumCharacterCount; // @synthesize maximumCharacterCount=_maximumCharacterCount;
- (void).cxx_destruct;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *placeholder;
@property(copy, nonatomic) NSString *label;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGiftTheme : NSObject <NSCopying>
{
    UIColor *_backgroundColor;
    UIColor *_bodyTextColor;
    UIImage *_headerImage;
    NSURL *_headerImageURL;
    UIColor *_primaryTextColor;
    long long _themeIdentifier;
    NSString *_themeName;
}

@property(copy, nonatomic) NSString *themeName; // @synthesize themeName=_themeName;
@property(nonatomic) long long themeIdentifier; // @synthesize themeIdentifier=_themeIdentifier;
@property(copy, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_primaryTextColor;
@property(copy, nonatomic) NSURL *headerImageURL; // @synthesize headerImageURL=_headerImageURL;
@property(retain, nonatomic) UIImage *headerImage; // @synthesize headerImage=_headerImage;
@property(copy, nonatomic) UIColor *bodyTextColor; // @synthesize bodyTextColor=_bodyTextColor;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (id)initWithThemeDictionary:(id)arg1;

@end

@interface SKUIGiftThemeBackgroundView : UIView
{
    UIScrollView *_scrollView;
}

@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface SKUIGiftThemeCollectionView : UICollectionView
{
    struct UIEdgeInsets _visibleBoundsInsets;
}

@property(nonatomic) struct UIEdgeInsets visibleBoundsInsets; // @synthesize visibleBoundsInsets=_visibleBoundsInsets;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGRect)_visibleBounds;

@end

@interface SKUIGiftThemeCollectionViewCell : UICollectionViewCell
{
    SKUIGiftConfiguration *_giftConfiguration;
    SKUIGift *_gift;
    UIImageView *_headerImageView;
    SKUIGiftItemView *_itemView;
    UILabel *_messageLabel;
    UILabel *_priceLabel;
    UILabel *_senderNameLabel;
    UILabel *_senderNameLabelLabel;
    SKUIGiftTheme *_theme;
}

@property(retain, nonatomic) SKUIGiftTheme *theme; // @synthesize theme=_theme;
@property(retain, nonatomic) SKUIGift *gift; // @synthesize gift=_gift;
@property(retain, nonatomic) SKUIGiftConfiguration *giftConfiguration; // @synthesize giftConfiguration=_giftConfiguration;
- (void).cxx_destruct;
- (void)_setSenderName:(id)arg1;
- (void)_setPrice:(id)arg1;
- (void)_setMessage:(id)arg1;
- (void)_setHeaderImage:(id)arg1;
- (void)_reloadItemView;
- (id)_itemView;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) UIImage *itemImage;
- (void)reloadThemeHeaderImage;

@end

@interface SKUIGiftThemePickerViewController : SKUIGiftStepViewController <SKUIGiftConfigurationObserver, UICollectionViewDataSource, UICollectionViewDelegate>
{
    _Bool _animatingScrollView;
    SKUIGiftThemeCollectionView *_collectionView;
    UIImage *_itemImage;
    UIPageControl *_pageControl;
    long long _selectedThemeIndex;
    UITapGestureRecognizer *_tapGestureRecognizer;
    NSArray *_themes;
}

- (void).cxx_destruct;
- (void)_setSelectedThemeIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)_setItemImage:(id)arg1 error:(id)arg2;
- (id)_collectionView;
- (void)_nextAction:(id)arg1;
- (void)_backgroundTapAction:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)giftConfigurationController:(id)arg1 didLoadImageForTheme:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithGift:(id)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIGiftValidationResponse : NSObject
{
    NSString *_errorString;
    NSString *_giftKey;
    NSString *_totalGiftAmountString;
    _Bool _valid;
}

@property(readonly, nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(readonly, nonatomic) NSString *totalGiftAmountString; // @synthesize totalGiftAmountString=_totalGiftAmountString;
@property(readonly, nonatomic) NSString *giftKey; // @synthesize giftKey=_giftKey;
@property(readonly, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
- (void).cxx_destruct;
- (id)initWithValidationDictionary:(id)arg1;

@end

@interface SKUIGiftValidator : NSObject
{
    SKUIClientContext *_clientContext;
    NSOperationQueue *_operationQueue;
    long long _validationCount;
    SSVLoadURLOperation *_validationOperation;
    NSURL *_validationURL;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (void).cxx_destruct;
- (void)_validateWithBodyDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_finishValidationWithResponse:(id)arg1 error:(id)arg2 attemptNumber:(long long)arg3 block:(CDUnknownBlockType)arg4;
- (void)validateGift:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)validateDonation:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isValidating) _Bool validating;
- (void)cancelValidation;
- (id)initWithValidationURL:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIGiftViewController : UINavigationController
{
    SKUIClientContext *_clientContext;
    SKUIGift *_gift;
    id <SKUIGiftViewControllerDelegate> _giftDelegate;
    SKUIGiftConfiguration *_giftConfiguration;
    NSOperationQueue *_operationQueue;
    UIViewController *_placeholderViewController;
    SKUIGiftComposeViewController *_rootViewController;
}

@property(nonatomic) __weak id <SKUIGiftViewControllerDelegate> giftDelegate; // @synthesize giftDelegate=_giftDelegate;
@property(readonly, copy, nonatomic) SKUIGift *gift; // @synthesize gift=_gift;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)_localizedString:(id)arg1;
- (void)_loadGiftConfiguration;
- (void)_finishGiftingWithResult:(_Bool)arg1;
- (void)_finishAuthenticateWithResponse:(id)arg1 error:(id)arg2;
- (void)_configurationDidLoadWithResult:(_Bool)arg1 error:(id)arg2;
- (void)_clientContextDidLoadWithContext:(id)arg1 error:(id)arg2;
- (void)_cancelButtonAction:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (id)initWithGift:(id)arg1;

@end

@interface SKUIGradientView : UIView
{
}

+ (Class)layerClass;

// Remaining properties
@property(readonly, retain, nonatomic) CAGradientLayer *layer; // @dynamic layer;

@end

@interface SKUIGridComponent : SKUIPageComponent
{
    NSMutableArray *_children;
    struct SKUIEditorialStyle _editorialStyle;
    long long _gridType;
    struct SKUILockupStyle _lockupStyle;
    long long _missingItemCount;
    _Bool _showsIndexNumbers;
}

@property(readonly, nonatomic) struct SKUIEditorialStyle editorialStyle; // @synthesize editorialStyle=_editorialStyle;
@property(readonly, nonatomic) _Bool showsIndexNumbers; // @synthesize showsIndexNumbers=_showsIndexNumbers;
@property(readonly, nonatomic) struct SKUILockupStyle lockupStyle; // @synthesize lockupStyle=_lockupStyle;
@property(readonly, nonatomic) long long gridType; // @synthesize gridType=_gridType;
@property(readonly, nonatomic) NSArray *children; // @synthesize children=_children;
- (void).cxx_destruct;
- (id)description;
- (void)_setChildrenWithFeaturedContextContext:(id)arg1;
- (void)_reloadMissingItemCount;
- (id)_newLockupComponentWithItem:(id)arg1 defaultStyle:(struct SKUILockupStyle)arg2;
- (id)_updateWithMissingItems:(id)arg1;
- (id)_updateWithInvalidItemIdentifiers:(id)arg1;
- (id)metricsElementName;
- (_Bool)isMissingItemData;
- (void)enumerateMissingItemIdentifiersFromIndex:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (long long)componentType;
- (id)initWithViewElement:(id)arg1;
- (id)initWithRoomContext:(id)arg1 gridType:(long long)arg2;
- (id)initWithLockups:(id)arg1;
- (id)initWithGridItems:(id)arg1;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;
- (id)initWithCustomPageContext:(id)arg1;
- (id)initWithBrickItems:(id)arg1;

@end

@interface SKUIGridPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIItemStateCenterObserver, SKUIEmbeddedMediaViewDelegate, SKUIMissingItemDelegate, SKUIProductPageOverlayDelegate>
{
    NSMapTable *_artworkRequests;
    SKUIClientContext *_clientContext;
    _Bool _containsLockups;
    NSMapTable *_editorialLayouts;
    NSMutableIndexSet *_hiddenIconIndexSet;
    _Bool _isLandscape;
    _Bool _isPad;
    struct CGSize _lockupImageBoundingSize;
    SKUIMissingItemLoader *_missingItemLoader;
    NSString *_moreButtonTitle;
    long long _numberOfColumns;
    SKUIProductPageOverlayController *_overlayController;
    long long _overlaySourceItemIndex;
    long long _screenScale;
    NSMapTable *_lockupArtworkContexts;
    SKUIVideoImageDataConsumer *_videoImageDataConsumer;
    NSMutableDictionary *_videoPlaceholderImages;
}

- (void).cxx_destruct;
- (id)_videoThumbnailImageForVideo:(id)arg1 thumbnailSize:(struct CGSize)arg2;
- (void)_updateVisibileEditorialWithEditorialOrientation:(long long)arg1;
- (void)_showProductPageWithItem:(id)arg1 index:(long long)arg2 animated:(_Bool)arg3;
- (void)_setPositionForClickEvent:(id)arg1 withElementIndex:(long long)arg2;
- (void)_selectItem:(id)arg1 withIndex:(long long)arg2;
- (void)_reloadItemCell:(id)arg1 withLockup:(id)arg2 index:(long long)arg3;
- (void)_reloadEditorialLockupCell:(id)arg1 withLockup:(id)arg2 index:(long long)arg3;
- (id)_popSourceViewForOverlayController:(id)arg1;
- (long long)_numberOfPortraitColumnsWithGridType:(long long)arg1;
- (long long)_numberOfLandscapeColumnsWithGridType:(long long)arg1;
- (id)_newSizeToFitArtworkRequestWithArtwork:(id)arg1 mediaIndex:(long long)arg2;
- (id)_missingItemLoader;
- (double)_mediaWidthForMediaIndex:(long long)arg1 gridWidth:(double)arg2;
- (id)_mediaCellWithMedia:(id)arg1 indexPath:(id)arg2;
- (void)_loadMissingItemsFromIndex:(long long)arg1 withReason:(long long)arg2;
- (void)_loadImageForVideo:(id)arg1 thumbnailSize:(struct CGSize)arg2 loader:(id)arg3 reason:(long long)arg4;
- (void)_loadImageForItem:(id)arg1 lockupSize:(long long)arg2 loader:(id)arg3 reason:(long long)arg4;
- (id)_itemForIndex:(long long)arg1;
- (id)_itemCellWithLockups:(id)arg1 indexPath:(id)arg2;
- (double)_heightForMediaAtIndexPath:(id)arg1;
- (double)_heightForMedia:(id)arg1 width:(double)arg2;
- (double)_heightForLockupAtIndexPath:(id)arg1 gridType:(long long)arg2;
- (double)_heightForEditorialLockupAtIndexPath:(id)arg1;
- (double)_heightForEditorialLockup:(id)arg1;
- (double)_heightForEditorialAtIndexPath:(id)arg1;
- (void)_enumerateVisibleItemsWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateVisibleIndexPathsWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateItemsFromStartIndex:(long long)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_editorialLockupCellWithLockups:(id)arg1 indexPath:(id)arg2;
- (id)_editorialLayoutForLockup:(id)arg1;
- (id)_editorialLayoutForEditorial:(id)arg1;
- (id)_editorialCellWithEditorials:(id)arg1 indexPath:(id)arg2;
- (struct UIEdgeInsets)_contentInsetForVideoLockupIndex:(long long)arg1;
- (struct UIEdgeInsets)_contentInsetForMediaIndex:(long long)arg1;
- (id)_cellImageForItem:(id)arg1 lockupSize:(long long)arg2;
- (id)_artworkContextForLockupSize:(long long)arg1;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (id)productPageOverlay:(id)arg1 flipSourceViewToPresentItem:(id)arg2;
- (id)productPageOverlay:(id)arg1 flipSourceViewToDismissItem:(id)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)mediaView:(id)arg1 playbackStateDidChange:(long long)arg2;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willHideInContext:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (id)itemOfferClickEventWithItem:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (void)collectionViewDidTapVideoAtIndexPath:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewDidConfirmItemOfferAtIndexPath:(id)arg1;
- (id)clickEventWithItem:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIGridComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIGridViewElement : SKUIViewElement
{
    id _persistenceKey;
    _Bool _showsEditMode;
}

@property(readonly, nonatomic) _Bool showsEditMode; // @synthesize showsEditMode=_showsEditMode;
- (void).cxx_destruct;
- (id)persistenceKey;
- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIGridViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    long long _cardVerticalSpacingStyle;
    double _cellContentWidth;
    SKUIViewElementLayoutContext *_cellLayoutContext;
    double _cellPaddingInteriorHorizontal;
    double _cellPaddingLeftEdgeHorizontal;
    double _cellPaddingRightEdgeHorizontal;
    long long _lastNeedsMoreCount;
    long long _lockupType;
    long long _numberOfColumns;
    _Bool _rendersWithPerspective;
    UIColor *_separatorColor;
    long long _separatorStyle;
    _Bool _showsEditMode;
    NSArray *_viewElements;
}

- (void).cxx_destruct;
- (_Bool)_viewElementIsStandardCard:(id)arg1;
- (_Bool)_useOrdinalPadding;
- (void)_resetLayoutProperties;
- (void)_requestLayoutForCells;
- (void)_reloadViewElementProperties;
- (void)_reloadCellPadding;
- (long long)_positionForIndexPath:(id)arg1;
- (long long)_numberOfColumnsForWidth:(double)arg1;
- (struct UIEdgeInsets)_normalizedContentInsetForViewElement:(id)arg1 indexPath:(id)arg2;
- (long long)_lockupTypeForLockup:(id)arg1;
- (id)_lockupCellReuseIdentifierWithLockup:(id)arg1;
- (Class)_lockupCellClassWithLockup:(id)arg1;
- (_Bool)_isContainedWithinExploreTemplate;
- (void)_enumerateVisibleViewElementsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateViewElementsForRowOfIndexPath:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (double)_cellPaddingRightEdgeHorizontal;
- (double)_cellPaddingLeftEdgeHorizontal;
- (double)_cellPaddingInteriorHorizontal;
- (struct UIEdgeInsets)_cellInsetsForIndexPath:(id)arg1;
- (double)_cellHeightForViewElement:(id)arg1 width:(double)arg2;
- (double)_cellContentWidth;
- (Class)_cellClassForViewElement:(id)arg1;
- (Class)_cardCellClassForCard:(id)arg1;
- (id)_cardArtworkBoundingSizeForIndexPath:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (_Bool)updateCellWithIndexPath:(id)arg1 itemState:(id)arg2 animated:(_Bool)arg3;
- (id)targetScrollingIndexPathForElementWithIndexBarEntryID:(id)arg1 relativeSectionIndex:(long long)arg2;
- (struct UIEdgeInsets)sectionContentInset;
- (void)reloadVisibleCellsWithReason:(long long)arg1;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)getModalSourceViewForViewElement:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)expandEditorialForLabelElement:(id)arg1 indexPath:(id)arg2;
- (void)collectionViewWillScrollToOffset:(struct CGPoint)arg1 visibleRange:(struct SKUIIndexPathRange)arg2;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldSelectItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldHighlightItemAtIndexPath:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIGridComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIGroupedHeaderView : UIView
{
    UILabel *_titleLabel;
    UIView *_topBorder;
    UIView *_botBorder;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(nonatomic) _Bool hasBottomBorder;
@property(nonatomic) _Bool hasTopBorder;
@property(copy, nonatomic) NSString *title;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIHorizontalListCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    SKUIHorizontalListView *_horizontalList;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIHorizontalListScrollView : SKUIViewReuseView <SKUIViewElementView>
{
    UIScrollView *_scrollView;
    NSMapTable *_viewElementViews;
}

+ (struct CGSize)_sizeForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_attributedStringForText:(id)arg1 style:(id)arg2 context:(id)arg3;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_buttonAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIHorizontalListView : SKUIViewReuseView <SKUIMenuPopoverDelegate, SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    double _elementSpacing;
    UIControl *_focusedMenuButton;
    NSArray *_lines;
    SKUIListViewElement *_listElement;
    SKUIMenuPopoverController *_popoverController;
}

+ (struct CGSize)_sizeForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_linesWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (double)_lineSpacingForViewElement:(id)arg1;
+ (double)_lineSpacingForLineElements:(id)arg1;
+ (double)_elementSpacingForViewElement:(id)arg1;
+ (id)_attributedStringForMenuItem:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButtonText:(id)arg1 type:(long long)arg2 style:(id)arg3 context:(id)arg4;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (id)_viewElementForView:(id)arg1;
- (void)_destroyMenuPopover;
- (void)_menuButtonAction:(id)arg1;
- (void)_imageTapAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)menuPopover:(id)arg1 willRepositionToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)menuPopover:(id)arg1 didSelectMenuItemAtIndex:(long long)arg2;
- (void)menuPopoverDidCancel:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIHorizontalLockupCollectionViewCell : SKUICollectionViewCell <UIScrollViewAccessibilityDelegate, SKUIPerspectiveView, SKUIViewElementView>
{
    UIButton *_actionButton;
    SKUIButtonViewElement *_actionButtonViewElement;
    SKUICellScrollView *_actionsScrollView;
    struct UIEdgeInsets _contentInset;
    SKUICheckboxInputViewElement *_editModeCheckboxElement;
    UIImageView *_editModeControl;
    UIView *_highlightBackgroundView;
    SKUIHorizontalLockupView *_lockupView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (void)_removeEditControlAnimated:(_Bool)arg1;
- (void)_reloadLockupViewBackgroundColor;
- (void)_reloadHighlightBackgroundView;
- (void)_reloadActionsScrollViewWithViewElement:(id)arg1 context:(id)arg2;
- (_Bool)_isActionsScrollViewEnabled;
- (id)_highlightBackgroundColor;
- (id)_editControlImage;
- (id)_attributedStringForActionButton:(id)arg1 context:(id)arg2;
- (void)_addEditControlAnimated:(_Bool)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)_actionButtonAction:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (void)applyLayoutAttributes:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isScrollingCellToHideActionButton) _Bool scrollingCellToHideActionButton;
- (_Bool)isDeleteButtonHidden;
- (void)hideDeleteButton;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIHorizontalLockupColumn : NSObject
{
    NSMutableArray *_childViewElements;
    long long _identifier;
    struct CGSize _size;
}

@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(readonly, copy, nonatomic) NSArray *childViewElements; // @synthesize childViewElements=_childViewElements;
- (void).cxx_destruct;
- (id)description;
- (void)_addChildViewElement:(id)arg1;
- (id)init;

@end

@interface SKUIHorizontalLockupLayout : NSObject
{
    NSMutableArray *_columns;
    double _tallestNonMetadataColumnHeight;
}

+ (id)fontForOrdinalViewElement:(id)arg1 context:(id)arg2;
+ (id)fontForLabelViewElement:(id)arg1 context:(id)arg2;
+ (id)fontForButtonViewElement:(id)arg1 context:(id)arg2;
@property(readonly, nonatomic) NSArray *columns; // @synthesize columns=_columns;
- (void).cxx_destruct;
- (struct CGSize)_sizeForViewElement:(id)arg1 width:(long long)arg2 context:(id)arg3;
- (struct CGSize)_sizeForRightAlignedColumn:(id)arg1 width:(double)arg2 context:(id)arg3;
- (double)_heightForMetadataColumn:(id)arg1 width:(double)arg2 context:(id)arg3;
- (double)topPaddingForViewElement:(id)arg1;
- (void)sizeColumnsToFitWidth:(double)arg1 context:(id)arg2;
- (double)columnSpacingForColumnIdentifier:(long long)arg1;
- (double)bottomPaddingForViewElement:(id)arg1;
- (id)initWithLockup:(id)arg1 context:(id)arg2;

@end

@interface SKUIHorizontalLockupView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIOfferViewDelegate, UIGestureRecognizerDelegate, SKUIPerspectiveView, SKUIPreviewContainerView, SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    SUPlayerStatus *_lastPlayerStatus;
    SKUIHorizontalLockupLayout *_layout;
    SKUILockupViewElement *_lockupElement;
    SKUIGradientView *_offerConfirmationGradientView;
    SKUIPreviewProgressIndicator *_previewProgressIndicator;
    long long _previewState;
    UITapGestureRecognizer *_tapGestureRecognizer;
    NSMutableArray *_tappableViews;
    NSMapTable *_viewElementViews;
}

+ (_Bool)_usesEditorialLayoutForLabelViewElement:(id)arg1;
+ (void)_requestLayoutForViewElements:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_attributedStringForOrdinal:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
- (void).cxx_destruct;
- (id)_viewElementForView:(id)arg1;
- (struct CGSize)_sizeViewsForColumn:(id)arg1 toFitWidth:(double)arg2;
- (void)_resolvePreviewStateAfterTransitionForFlipView:(id)arg1;
- (id)_previewProgressIndicator;
- (id)_previewMediaURL;
- (id)_previewFrontView;
- (void)_performDefaultActionForImage:(id)arg1;
- (void)_layoutConfirmationGradientRelativeToItemOfferView:(id)arg1 alpha:(double)arg2;
- (void)_expandEditorialForLabel:(id)arg1;
- (id)_columnForView:(id)arg1;
- (id)_addFlipContainerViewWithFrontView:(id)arg1 backView:(id)arg2;
- (void)_addConfirmationGradientForView:(id)arg1;
- (void)_audioPlayerStatusChangeNotification:(id)arg1;
- (void)_tapGestureAction:(id)arg1;
- (void)_showConfirmationAction:(id)arg1;
- (void)_previewIndicatorAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)offerViewWillAnimateTransition:(id)arg1;
- (_Bool)offerViewAnimateTransition:(id)arg1;
- (void)offerViewDidAnimateTransition:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)itemOfferButtonDidAnimateTransition:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)togglePreviewPlaybackAnimated:(_Bool)arg1;
- (void)showPreviewProgressWithStatus:(id)arg1 animated:(_Bool)arg2;
- (void)hidePreviewProgressAnimated:(_Bool)arg1;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadChartsColumnView : UIView
{
    struct UIEdgeInsets _contentInset;
    NSArray *_contentViewControllers;
    long long _selectedViewControllerIndex;
}

@property(copy, nonatomic) NSArray *contentViewControllers; // @synthesize contentViewControllers=_contentViewControllers;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (void)_addSelectedViewController;
- (void)layoutSubviews;
- (void)setSelectedViewControllerIndex:(long long)arg1;
@property(readonly, nonatomic) UIViewController *selectedViewController;

@end

@interface SKUIIPadChartsViewController : UIViewController <SKUIItemListTableDelegate>
{
    SKUIResourceLoader *_artworkLoader;
    NSArray *_charts;
    SKUIChartColumnsView *_chartsView;
    NSArray *_chartViewControllers;
    SKUIClientContext *_clientContext;
    struct UIEdgeInsets _contentInset;
    id <SKUIChartsViewControllerDelegate> _delegate;
    _Bool _delegateWantsWillDisplay;
    NSOperationQueue *_operationQueue;
    long long _selectedChartIndex;
    long long _selectedItemIndex;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) __weak id <SKUIChartsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(copy, nonatomic) NSArray *charts; // @synthesize charts=_charts;
@property(retain, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_artworkLoader;
- (void).cxx_destruct;
- (id)_artworkContextForChart:(id)arg1;
- (long long)_visibleColumnCountForOrientation:(long long)arg1;
- (void)_setSuspended:(_Bool)arg1;
- (void)_reloadChartsView;
- (id)_itemListWithChart:(id)arg1;
- (void)itemList:(id)arg1 willDisplayCellForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemList:(id)arg1 didSelectItem:(id)arg2 atIndexPath:(id)arg3;
- (id)itemList:(id)arg1 didConfirmItemOfferForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)loadView;
- (void)unhideAllImages;
- (id)popImageViewForItemIndex:(long long)arg1 chartIndex:(long long)arg2;
- (void)loadNextPageOfArtworkWithReason:(long long)arg1;
- (struct CGRect)frameForItemIndex:(long long)arg1 chartIndex:(long long)arg2;
- (void)enumerateVisibleItemsUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadCustomerReviewsHeaderView : UIControl <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
{
    UIButton *_appSupportButton;
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    UIPopoverController *_sortPopoverController;
    long long _selectedSortIndex;
    UIView *_separatorView;
    UIButton *_sortButton;
    UILabel *_sortLabel;
    NSArray *_sortTitles;
    UILabel *_titleLabel;
    UIButton *_writeAReviewButton;
}

@property(readonly, nonatomic) UIControl *writeAReviewButton; // @synthesize writeAReviewButton=_writeAReviewButton;
@property(readonly, nonatomic) UIControl *appSupportButton; // @synthesize appSupportButton=_appSupportButton;
@property(copy, nonatomic) NSArray *sortTitles; // @synthesize sortTitles=_sortTitles;
@property(nonatomic) long long selectedSortIndex; // @synthesize selectedSortIndex=_selectedSortIndex;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)_reloadSortButton;
- (void)_destroySortPopoverController;
- (void)_sortButtonAction:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadDownloadsViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource>
{
    UICollectionView *_collectionView;
    NSArray *_downloads;
    _UIContentUnavailableView *_noContentView;
    id <SKUIDownloadsChildViewControllerDelegate> _delegate;
    _Bool _editing;
    SKUIClientContext *_clientContext;
}

@property(retain, nonatomic) NSArray *downloads; // @synthesize downloads=_downloads;
@property(nonatomic) __weak id <SKUIDownloadsChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadNavigationItem;
- (void)_reloadLayout;
- (void)_reload;
- (void)_deleteAction:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)_editAction:(id)arg1;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)reloadDownloadsAtIndexes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadProductPageViewController : UIViewController <SKUIMetricsViewController, SKUINetworkErrorDelegate, SKUIProductPageHeaderViewDelegate, SKUIProductPageChildViewControllerDelegate, SKUIMessageBannerDelegate>
{
    _Bool _askPermission;
    SKUIMessageBanner *_banner;
    NSString *_bannerText;
    SKUIClientContext *_clientContext;
    long long _defaultSelectedSectionIndex;
    id <SKUIIPadProductPageDelegate> _delegate;
    SKUIProductPageDetailsViewController *_detailsViewController;
    _Bool _didSendCannotOpen;
    SKUIProductPageHeaderViewController *_headerViewController;
    SKUIItem *_item;
    SKUIIncompatibleAppViewController *_incompatibleViewController;
    SSMetricsPageEvent *_lastPageEvent;
    SKUILoadProductPageOperation *_loadOperation;
    long long _lookupItemIdentifier;
    SKUIMetricsController *_metricsController;
    SKUINetworkErrorViewController *_networkErrorViewController;
    NSOperationQueue *_operationQueue;
    UIView *_overlayView;
    SKUIProductPagePlaceholderViewController *_placeholderViewController;
    SKUIProductPage *_productPage;
    SKUISwooshArrayViewController *_relatedViewController;
    SKUIProductPageReviewsViewController *_reviewsViewController;
    long long _selectedSectionIndex;
    NSURLRequest *_urlRequest;
}

@property(readonly, nonatomic) SKUIProductPage *productPage; // @synthesize productPage=_productPage;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(nonatomic) __weak id <SKUIIPadProductPageDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(copy, nonatomic) NSString *bannerText; // @synthesize bannerText=_bannerText;
@property(nonatomic) _Bool askPermission; // @synthesize askPermission=_askPermission;
- (void).cxx_destruct;
- (id)_viewControllerForSectionIndex:(long long)arg1;
- (void)_showViewController:(id)arg1;
- (void)_showBanner;
- (void)_showIncompatibleView;
- (void)_showError:(id)arg1;
- (void)_setProductPage:(id)arg1 error:(id)arg2;
- (void)_setMetricsController:(id)arg1;
- (void)_setDefaultSectionIndexWithFragment:(long long)arg1;
- (void)_sendCannotOpen;
- (void)_selectSectionIndex:(long long)arg1;
- (id)_reviewsViewController;
- (void)_reloadHeaderViewController;
- (id)_relatedViewController;
- (id)_placeholderViewController;
- (_Bool)_isIncompatibleItem;
- (id)_detailsViewController;
- (void)_metricsEnterEventNotification:(id)arg1;
- (void)askPermissionBannerDidSelect:(id)arg1;
- (struct CGPoint)topContentOffset;
- (void)productPageChildViewControllerDidLoad:(id)arg1;
- (void)productPageChildViewControllerDidScroll:(id)arg1;
- (void)productPageChildViewControllerDidLoadScrollView:(id)arg1;
- (void)productPageChildOpenURL:(id)arg1 viewControllerBlock:(CDUnknownBlockType)arg2;
- (void)productPageChildOpenItem:(id)arg1;
- (void)productPageHeaderViewDidWantAskPermissionBanner:(id)arg1;
- (void)productPageHeaderView:(id)arg1 didSelectURL:(id)arg2;
- (void)productPageHeaderView:(id)arg1 didSelectSectionIndex:(long long)arg2;
- (id)metricsControllerForProductPageHeader:(id)arg1;
- (void)networkErrorViewControllerInvalidated:(id)arg1;
- (id)activeMetricsController;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
@property(readonly, nonatomic) NSURL *URL;
- (void)reloadData;
- (void)configureMetricsWithPageEvent:(id)arg1;
- (void)dealloc;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithProductPage:(id)arg1;
- (id)initWithItemIdentifier:(long long)arg1;
- (id)initWithItem:(id)arg1;
- (id)_initSKUIIPadProductPageViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadRedeemCameraView : UIView <UITextFieldDelegate>
{
    id <SKUIRedeemCameraViewDelegate> _delegate;
    SKUIRedeemTextField *_inputAccessoryTextField;
    SKUIRedeemCameraLandingView *_landingView;
    UIView *_redeemerView;
    UIScrollView *_scrollView;
    UIButton *_termsButton;
    SKUIRedeemTextField *_textField;
}

@property(nonatomic) __weak id <SKUIRedeemCameraViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_newTextFieldWithClientContext:(id)arg1 placeholderColor:(id)arg2;
- (void)_hideKeyboard;
- (void)_termsButtonAction:(id)arg1;
- (void)_landingButtonAction:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
- (void)keyboardDidChange:(id)arg1;
- (void)layoutSubviews;
- (void)start;
@property(nonatomic) _Bool enabled;
- (void)showKeyboard;
@property(retain, nonatomic) UIImage *image;
@property(copy, nonatomic) NSString *text;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadSearchController : NSObject <SKUISearchFieldDelegate>
{
    SKUIClientContext *_clientContext;
    UIViewController *_parentViewController;
    SKUISearchFieldController *_searchFieldController;
}

@property(readonly, nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)_sharedResultsViewController;
- (id)_searchFieldController;
- (void)_requestSearch:(id)arg1;
- (id)_existingSharedResultsViewController;
- (void)_termDidChangeNotification:(id)arg1;
- (_Bool)searchFieldControllerShouldBeginEditing:(id)arg1;
- (void)searchFieldController:(id)arg1 requestSearch:(id)arg2;
- (void)setNumberOfSearchResults:(long long)arg1;
- (void)reloadSearchField;
- (id)newSearchFieldBarItem;
- (void)setSearchFieldText:(id)arg1;
- (void)setSearchFieldPlaceholderText:(id)arg1;
@property(readonly, nonatomic) SKUISearchFieldController *searchFieldController;
- (void)dealloc;
- (id)initWithParentViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadSearchHeaderView : UIView <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
{
    long long _activeFacetIndex;
    SKUIClientContext *_clientContext;
    id <SKUIIPadSearchHeaderViewDelegate> _delegate;
    NSMutableArray *_facetButtons;
    UIPopoverController *_facetPopoverController;
    NSMutableDictionary *_facetSelections;
    NSArray *_searchFacets;
}

@property(readonly, nonatomic) NSArray *searchFacets; // @synthesize searchFacets=_searchFacets;
@property(readonly, nonatomic) NSDictionary *facetSelections; // @synthesize facetSelections=_facetSelections;
@property(nonatomic) __weak id <SKUIIPadSearchHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_titleForFacet:(id)arg1;
- (long long)_selectedIndexForFacet:(id)arg1;
- (void)_destroyFacetPopover;
- (void)_facetButtonAction:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)setSearchFacets:(id)arg1 selections:(id)arg2;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPadSearchSeparatorView : UICollectionReusableView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIIPadSearchView : UIView
{
    UICollectionView *_collectionView;
    UIView *_noResultsView;
    UIView *_loadingView;
    UIView *_relatedView;
}

@property(retain, nonatomic) UIView *relatedView; // @synthesize relatedView=_relatedView;
@property(retain, nonatomic) UIView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) UIView *noResultsView; // @synthesize noResultsView=_noResultsView;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface SKUIIPadSearchViewController : UIViewController <SKUIIPadSearchHeaderViewDelegate, SKUIItemCollectionDelegate, SKUIMetricsViewController, UICollectionViewDataSource, UICollectionViewDelegate, SKUISearchRelatedViewDelegate, SKUISearchResultGroupControllerDelegate, UIViewControllerRestoration>
{
    UICollectionView *_collectionView;
    NSDictionary *_facetSelections;
    SKUIIPadSearchHeaderView *_headerView;
    id <SKUISearchChildViewControllerDelegate> _delegate;
    SKUIItemCollectionController *_itemCollectionController;
    SKUIMetricsController *_metricsController;
    SKUISearchRelatedView *_relatedView;
    SKUISearchResultGroupController *_searchResultGroupController;
    NSString *_previousRelatedSearchTerm;
    SKUISearchPage *_page;
    NSArray *_searchFacets;
    SKUIClientContext *_clientContext;
    NSMutableDictionary *_indexesByItemIndex;
    NSMutableDictionary *_itemIndexesByIndex;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
@property(retain, nonatomic) NSDictionary *facetSelections; // @synthesize facetSelections=_facetSelections;
@property(retain, nonatomic) NSArray *searchFacets; // @synthesize searchFacets=_searchFacets;
@property(retain, nonatomic) SKUIMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(readonly, nonatomic) NSString *previousRelatedSearchTerm; // @synthesize previousRelatedSearchTerm=_previousRelatedSearchTerm;
@property(readonly, nonatomic) SKUISearchPage *searchPage; // @synthesize searchPage=_page;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) __weak id <SKUISearchChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (long long)_itemIndexForIndex:(long long)arg1;
- (long long)_indexForItemIndex:(long long)arg1;
- (id)_visibleMetricsImpressionsString;
- (void)_recordClickEventForItemOfferAtIndex:(long long)arg1;
- (void)_recordClickEventForItemAtIndex:(long long)arg1;
- (void)_recordClickEventForEditorialAtIndex:(long long)arg1;
- (void)_recordClickEvent:(id)arg1 withCell:(id)arg2;
- (void)_reloadOrientation:(long long)arg1;
- (void)_reloadFacets;
- (void)_reloadView;
- (id)_itemCollectionController;
- (id)_collectionView;
- (void)_addImpressionWithItemID:(long long)arg1 type:(id)arg2 index:(long long)arg3;
- (void)_noResultsAction:(id)arg1;
- (void)_spellCorrectionAction:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)searchRelatedViewDidSelectBackButton:(id)arg1;
- (void)searchRelatedView:(id)arg1 didSelectRelatedQueryAtIndex:(long long)arg2;
- (id)activeMetricsController;
- (void)searchHeaderViewDidUpdateFacetSelections:(id)arg1 facetIndex:(long long)arg2 listIndex:(long long)arg3;
- (id)itemCollectionController:(id)arg1 screenshotForItem:(id)arg2;
- (void)itemCollectionController:(id)arg1 applyScreenshotImage:(id)arg2 toCellLayout:(id)arg3;
- (void)itemCollectionView:(id)arg1 didConfirmItemOfferForCell:(id)arg2;
- (struct _NSRange)visibleItemRangeForItemCollectionController:(id)arg1;
- (struct _NSRange)itemCollectionController:(id)arg1 itemPageRangeForOffset:(struct CGPoint)arg2;
- (id)itemCollectionController:(id)arg1 cellLayoutForItemIndex:(long long)arg2;
- (void)searchResultGroupController:(id)arg1 didLoadArtworkAtIndex:(unsigned long long)arg2;
- (void)searchResultGroupController:(id)arg1 didLoadEntityAtIndexes:(id)arg2 removedEntityAtIndexes:(id)arg3;
- (id)contentScrollView;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)setSearchPage:(id)arg1 previousRelatedSearchTerm:(id)arg2;
- (void)scrollToTop;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPhoneChartsViewController : UIViewController <SKUIItemListTableDelegate>
{
    SKUIResourceLoader *_artworkLoader;
    NSArray *_charts;
    NSMutableDictionary *_chartViewControllers;
    SKUIClientContext *_clientContext;
    struct UIEdgeInsets _contentInset;
    id <SKUIChartsViewControllerDelegate> _delegate;
    _Bool _delegateWantsWillDisplay;
    SKUISegmentedTableHeaderView *_headerView;
    NSOperationQueue *_operationQueue;
    long long _selectedChartIndex;
    UISegmentedControl *_segmentedControl;
}

@property(nonatomic) __weak id <SKUIChartsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(copy, nonatomic) NSArray *charts; // @synthesize charts=_charts;
@property(retain, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_artworkLoader;
- (void).cxx_destruct;
- (id)_viewControllerWithIndex:(long long)arg1;
- (void)_showSelectedViewController;
- (id)_selectedViewController;
- (void)_reloadData;
- (id)_itemListWithChart:(id)arg1;
- (long long)_chartIndexForChartViewController:(id)arg1;
- (id)_artworkContextForChart:(id)arg1;
- (void)_segmentedControlAction:(id)arg1;
- (void)itemList:(id)arg1 willDisplayCellForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemList:(id)arg1 didSelectItem:(id)arg2 atIndexPath:(id)arg3;
- (id)itemList:(id)arg1 didConfirmItemOfferForItem:(id)arg2 atIndexPath:(id)arg3;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)loadNextPageOfArtworkWithReason:(long long)arg1;
- (struct CGRect)frameForItemIndex:(long long)arg1 chartIndex:(long long)arg2;
- (void)enumerateVisibleItemsUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPhoneDownloadsViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    UITableView *_tableView;
    _UIContentUnavailableView *_noContentView;
    id <SKUIDownloadsChildViewControllerDelegate> _delegate;
    NSArray *_downloads;
    SKUIClientContext *_clientContext;
}

@property(retain, nonatomic) NSArray *downloads; // @synthesize downloads=_downloads;
@property(nonatomic) __weak id <SKUIDownloadsChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reload;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)reloadDownloadsAtIndexes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPhoneProductPageView : UIView
{
    UIView *_view;
    UIView *_bannerView;
    double _bannerOffset;
}

@property(nonatomic) double bannerOffset; // @synthesize bannerOffset=_bannerOffset;
@property(retain, nonatomic) UIView *bannerView; // @synthesize bannerView=_bannerView;
@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)animateYPosition:(double)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIIPhoneProductPageViewController : SKUIViewController <SKUIMetricsViewController, SKUINetworkErrorDelegate, SKUIProductPageHeaderViewDelegate, SKUIProductPageChildViewControllerDelegate, UIScrollViewDelegate, SKStoreProductViewControllerDelegate, SKUIMessageBannerDelegate>
{
    _Bool _askPermission;
    SKUIMessageBanner *_banner;
    NSString *_bannerText;
    UIViewController<SKUIProductPageChildViewController> *_childViewController;
    id <SKUIIPhoneProductPageDelegate> _delegate;
    SKUIProductPageDetailsViewController *_detailsViewController;
    SKUINetworkErrorViewController *_errorViewController;
    SKUIProductPageHeaderViewController *_headerViewController;
    SKUIIncompatibleAppViewController *_incompatibleViewController;
    SKUIItem *_item;
    SSMetricsPageEvent *_lastPageEvent;
    SKUIProductPagePlaceholderViewController *_loadingViewController;
    SKUILoadProductPageOperation *_loadOperation;
    long long _lookupItemIdentifier;
    SKUIMetricsController *_metricsController;
    NSOperationQueue *_operationQueue;
    SKUIProductPagePlaceholderViewController *_relatedPlaceholderViewController;
    SKUIProductPage *_productPage;
    SKUISwooshArrayViewController *_relatedViewController;
    SKUIProductPageReviewsViewController *_reviewsViewController;
    long long _sectionIndex;
    NSURLRequest *_urlRequest;
    _Bool _wantsActivityViewController;
}

@property(readonly, nonatomic) SKUIProductPage *productPage; // @synthesize productPage=_productPage;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(nonatomic) __weak id <SKUIIPhoneProductPageDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *bannerText; // @synthesize bannerText=_bannerText;
@property(nonatomic) _Bool askPermission; // @synthesize askPermission=_askPermission;
- (void).cxx_destruct;
- (id)_viewControllerForSectionIndex:(unsigned long long)arg1;
- (void)_showActivityViewController;
- (void)_showError:(id)arg1;
- (void)_setSectionIndexWithFragment:(long long)arg1;
- (void)_setProductPage:(id)arg1 error:(id)arg2;
- (void)_setMetricsController:(id)arg1;
- (void)_setHeaderPositionForChildViewController:(id)arg1;
- (void)_setContentInsetsForChildViewController:(id)arg1;
- (void)_reloadChildViewControllers;
- (void)_presentHTMLProductPage;
- (_Bool)_isIncompatibleItem;
- (void)_invalidateChildViewControllers;
- (id)_headerViewController;
- (id)_loadingViewController;
- (id)_relatedPlaceholderViewController;
- (void)_hideBanner;
- (void)_showBanner;
- (id)_relatedViewController;
- (id)_reviewsViewController;
- (id)_detailsViewController;
- (void)_animateAddToWishlist;
- (void)_shareButtonAction:(id)arg1;
- (void)_metricsEnterEventNotification:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (struct CGPoint)topContentOffset;
- (void)productPageChildViewControllerDidLoad:(id)arg1;
- (void)productPageChildViewControllerDidScroll:(id)arg1;
- (void)productPageChildViewControllerDidLoadScrollView:(id)arg1;
- (void)productPageChildOpenURL:(id)arg1 viewControllerBlock:(CDUnknownBlockType)arg2;
- (void)productPageChildOpenItem:(id)arg1;
- (void)askPermissionBannerDidSelect:(id)arg1;
- (void)productPageHeaderViewDidWantAskPermissionBanner:(id)arg1;
- (void)productPageHeaderView:(id)arg1 didSelectURL:(id)arg2;
- (void)productPageHeaderView:(id)arg1 didSelectSectionIndex:(long long)arg2;
- (void)productPageHeaderView:(id)arg1 didReloadItemOffer:(id)arg2;
- (id)metricsControllerForProductPageHeader:(id)arg1;
- (void)networkErrorViewControllerInvalidated:(id)arg1;
- (id)activeMetricsController;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (id)contentScrollView;
- (void)reloadData;
@property(readonly, nonatomic) NSURL *URL;
- (void)configureMetricsWithPageEvent:(id)arg1;
- (void)dealloc;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithProductPage:(id)arg1;
- (id)initWithItemIdentifier:(long long)arg1;
- (id)initWithItem:(id)arg1;
- (id)_initSKUIIPhoneProductPageViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemGridCollectionViewLayout : UICollectionViewFlowLayout
{
    UIColor *_evenColor;
    long long _numberOfColumns;
    UIColor *_oddColor;
}

+ (Class)layoutAttributesClass;
@property(copy, nonatomic) UIColor *oddRowBackgroundColor; // @synthesize oddRowBackgroundColor=_oddColor;
@property(nonatomic) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(copy, nonatomic) UIColor *evenRowBackgroundColor; // @synthesize evenRowBackgroundColor=_evenColor;
- (void).cxx_destruct;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)init;

@end

@interface SKUIIPhoneSearchCollectionViewLayout : SKUIItemGridCollectionViewLayout
{
}

- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;

@end

@interface SKUIIPhoneSearchView : UIView
{
    UICollectionView *_collectionView;
    UIView *_noResultsView;
    UIView *_relatedView;
}

@property(retain, nonatomic) UIView *noResultsView; // @synthesize noResultsView=_noResultsView;
@property(retain, nonatomic) UIView *relatedView; // @synthesize relatedView=_relatedView;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIIPhoneSearchViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, SKUISearchResultGroupControllerDelegate, SKUIItemCollectionDelegate, SKUISearchRelatedViewDelegate, SKUIMetricsViewController>
{
    SKUIClientContext *_clientContext;
    SKUIGiftThemeCollectionView *_collectionView;
    id <SKUISearchChildViewControllerDelegate> _delegate;
    SKUIItemCollectionController *_itemCollectionController;
    NSMutableDictionary *_indexesByItemIndex;
    NSMutableDictionary *_itemIndexesByIndex;
    SKUIMetricsController *_metricsController;
    NSString *_previousRelatedSearchTerm;
    SKUISearchRelatedView *_relatedView;
    SKUISearchPage *_searchPage;
    SKUISearchResultGroupController *_searchResultGroupController;
}

@property(readonly, nonatomic) NSString *previousRelatedSearchTerm; // @synthesize previousRelatedSearchTerm=_previousRelatedSearchTerm;
@property(readonly, nonatomic) SKUISearchPage *searchPage; // @synthesize searchPage=_searchPage;
@property(retain, nonatomic) SKUIMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(nonatomic) __weak id <SKUISearchChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (long long)_itemIndexForIndex:(long long)arg1;
- (long long)_indexForItemIndex:(long long)arg1;
- (id)_visibleMetricsImpressionsString;
- (void)_reloadView;
- (void)_reloadScreenshotHeight;
- (void)_recordImpressionEventWithIndex:(long long)arg1;
- (void)_recordImpressionEventWithContentOffset:(struct CGPoint)arg1;
- (void)_recordClickEventForItemOffer:(id)arg1 atIndexPath:(id)arg2;
- (void)_recordClickEventForItem:(id)arg1 atIndexPath:(id)arg2;
- (void)_recordClickEventForEditorial:(id)arg1 atIndexPath:(id)arg2;
- (void)_recordClickEvent:(id)arg1 withCell:(id)arg2;
- (id)_itemCollectionController;
- (void)_addImpressionWithItemID:(long long)arg1 type:(id)arg2 index:(long long)arg3;
- (void)_noResultsAction:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)searchRelatedViewDidSelectBackButton:(id)arg1;
- (void)searchRelatedView:(id)arg1 didSelectRelatedQueryAtIndex:(long long)arg2;
- (void)itemCollectionView:(id)arg1 didConfirmItemOfferForCell:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (struct _NSRange)visibleItemRangeForItemCollectionController:(id)arg1;
- (void)itemCollectionController:(id)arg1 applyScreenshotImage:(id)arg2 toCellLayout:(id)arg3;
- (struct _NSRange)itemCollectionController:(id)arg1 itemPageRangeForOffset:(struct CGPoint)arg2;
- (_Bool)shouldCacheAheadWhenIdleForItemCollectionController:(id)arg1;
- (id)itemCollectionController:(id)arg1 screenshotForItem:(id)arg2;
- (id)itemCollectionController:(id)arg1 cellLayoutForItemIndex:(long long)arg2;
- (void)searchResultGroupController:(id)arg1 didLoadArtworkAtIndex:(unsigned long long)arg2;
- (void)searchResultGroupController:(id)arg1 didLoadEntityAtIndexes:(id)arg2 removedEntityAtIndexes:(id)arg3;
- (id)activeMetricsController;
- (id)contentScrollView;
- (void)loadView;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setSearchPage:(id)arg1 previousRelatedSearchTerm:(id)arg2;
- (void)scrollToTop;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIPhoneSlideshowCell : UICollectionViewCell
{
    UIImageView *_imageView;
    UIImageView *_playIcon;
    struct CGSize _imageSize;
}

@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)setHighlighted:(_Bool)arg1;
@property(nonatomic, getter=isVideo) _Bool video;
@property(retain, nonatomic) UIImage *image;
@property(readonly, nonatomic) struct CGRect imageFrame;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIIPhoneSlideshowViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    SKUIClientContext *_clientContext;
    SKUIGiftThemeCollectionView *_collectionView;
    id <SKUISlideshowViewControllerDataSource> _dataSource;
    id <SKUISlideshowViewControllerDelegate> _delegate;
    UIPageControl *_pageControl;
    NSOperationQueue *_operationQueue;
    NSOperationQueue *_placeholderQueue;
    NSMutableArray *_images;
    NSMutableDictionary *_placeholderImages;
    SKUIScreenshotDataConsumer *_screenshotConsumer;
    long long _indexToScrollToOnLoadView;
    _Bool _respondsToCount;
    _Bool _respondsToURL;
    _Bool _respondsToImage;
}

@property(nonatomic) __weak id <SKUISlideshowViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <SKUISlideshowViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadSize;
- (void)_reloadPageControl;
- (void)_setLowResImage:(id)arg1 atIndex:(long long)arg2;
- (void)_setImage:(id)arg1 atIndex:(long long)arg2;
- (id)_placeholderImageAtIndex:(long long)arg1;
- (id)_imageAtIndex:(long long)arg1;
- (void)_doneAction:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)scrollViewDidScroll:(id)arg1;
@property(nonatomic) long long currentIndex;
- (void)reloadData;
- (void)viewDidLayoutSubviews;
- (unsigned long long)supportedInterfaceOrientations;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIITunesPassConfiguration : NSObject
{
    NSString *_dialogLearnMoreButton;
    NSString *_dialogMessage;
    NSString *_dialogNotNowButton;
    NSString *_dialogTitle;
    NSString *_learnMoreAddPassButtonTitle;
    NSString *_learnMoreDoneButtonTitle;
    NSString *_learnMoreExplanation;
    NSString *_learnMoreTitle;
    NSString *_learnMoreViewPassButtonTitle;
    NSString *_lockupDescription;
    NSString *_lockupLearnMoreLinkTitle;
    NSString *_lockupTitle;
}

@property(readonly, nonatomic) NSString *lockupTitle; // @synthesize lockupTitle=_lockupTitle;
@property(readonly, nonatomic) NSString *lockupLearnMoreLinkTitle; // @synthesize lockupLearnMoreLinkTitle=_lockupLearnMoreLinkTitle;
@property(readonly, nonatomic) NSString *lockupDescription; // @synthesize lockupDescription=_lockupDescription;
@property(readonly, nonatomic) NSString *learnMoreViewPassButtonTitle; // @synthesize learnMoreViewPassButtonTitle=_learnMoreViewPassButtonTitle;
@property(readonly, nonatomic) NSString *learnMoreTitle; // @synthesize learnMoreTitle=_learnMoreTitle;
@property(readonly, nonatomic) NSString *learnMoreExplanation; // @synthesize learnMoreExplanation=_learnMoreExplanation;
@property(readonly, nonatomic) NSString *learnMoreDoneButtonTitle; // @synthesize learnMoreDoneButtonTitle=_learnMoreDoneButtonTitle;
@property(readonly, nonatomic) NSString *learnMoreAddPassButtonTitle; // @synthesize learnMoreAddPassButtonTitle=_learnMoreAddPassButtonTitle;
- (void).cxx_destruct;
- (id)learnMoreAlertView;
- (id)initWithITunesPassDictionary:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIITunesPassLearnMoreAlertDelegate : NSObject <UIAlertViewDelegate>
{
    SKUIClientContext *_clientContext;
    UIViewController *_presentingViewController;
    SKUIRedeemConfiguration *_redeemConfiguration;
}

+ (_Bool)shouldShowAlertForRedeem:(id)arg1 configuration:(id)arg2;
+ (void)beginThrottleInterval;
@property(nonatomic) __weak UIViewController *presentingViewController; // @synthesize presentingViewController=_presentingViewController;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)show;
- (id)initWithRedeemConfiguration:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIITunesStoreUIPageViewController : SUStorePageViewController
{
    SUBarButtonItem *_cancelButtonItem;
    NSString *_cancelButtonTitle;
    SKProductPageViewController *_productPageViewController;
    _Bool _showsCancelButton;
}

@property(nonatomic) _Bool showsCancelButton; // @synthesize showsCancelButton=_showsCancelButton;
@property(nonatomic) __weak SKProductPageViewController *productPageViewController; // @synthesize productPageViewController=_productPageViewController;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
- (void).cxx_destruct;
- (void)_storeSheetCancelButtonAction:(id)arg1;
- (id)_cancelButtonItem;
- (void)_addCancelButtonToNavigationItem:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)resetNavigationItem:(id)arg1;
- (_Bool)presentDialogForError:(id)arg1 pendUntilVisible:(_Bool)arg2;
- (void)handleFailureWithError:(id)arg1;
- (void)dealloc;

@end

@interface SKUIImageActivityItemProvider : UIActivityItemProvider
{
    SKUIProductPageItem *_item;
    SKUIClientContext *_clientContext;
}

- (void).cxx_destruct;
- (id)item;
- (id)initWithProductPageItem:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIImageCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    SKUIImageView *_highlightImageView;
    id _modelObject;
    _Bool _showsReflectionImage;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(nonatomic) _Bool showsReflectionImage; // @synthesize showsReflectionImage=_showsReflectionImage;
- (void).cxx_destruct;
- (void)_reloadHighlightImageView;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)reloadWithCarouselItem:(id)arg1 size:(struct CGSize)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIImageDataConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;
- (id)imageForImage:(id)arg1;
- (id)imageForColor:(id)arg1 size:(struct CGSize)arg2;
- (id)imageForColor:(id)arg1;

@end

@interface SKUIImageIndexBarEntry : SKUIIndexBarEntry
{
    UIImage *_image;
}

@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)_drawContentInRect:(struct CGRect)arg1;
- (struct CGSize)_calculatedContentSize;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithImage:(id)arg1;

@end

@interface SKUIImageView : UIImageView
{
    struct CGSize _imageSize;
    UITapGestureRecognizer *_tapRecognizer;
}

@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(readonly, nonatomic) UITapGestureRecognizer *tapRecognizer;
- (void)drawDecorationsWithImageRect:(struct CGRect)arg1;

@end

@interface SKUIImageViewElementCacheKey : NSObject
{
    long long _imageTreatment;
    struct CGSize _size;
    NSURL *_url;
}

- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithURL:(id)arg1 size:(struct CGSize)arg2 imageTreatment:(id)arg3;

@end

@interface SKUIInAppPurchase : NSObject <SKUICacheCoding>
{
    NSString *_formattedPrice;
    NSString *_name;
}

@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *formattedPrice; // @synthesize formattedPrice=_formattedPrice;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (id)initWithInAppPurchaseDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIncompatibleAppView : UIView
{
    NSMutableArray *_buttons;
    UIImageView *_iconView;
    UILabel *_messageLabel;
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *message;
@property(retain, nonatomic) UIImage *iconImage;
- (void)removeButtonTarget:(id)arg1 action:(SEL)arg2 forControlEvents:(unsigned long long)arg3;
- (id)addButtonWithTitle:(id)arg1;

@end

@interface SKUIIncompatibleAppViewController : SKUIViewController <SKUIProductPageChildViewController>
{
    SKUIItemArtworkContext *_artworkContext;
    id <SKUIProductPageChildViewControllerDelegate> _delegate;
    SKUIProductPageHeaderViewController *_headerViewController;
    UIImage *_iconImage;
    SKUIProductPageItem *_incompatibleItem;
    SSVLoadURLOperation *_loadIconOperation;
    SKUIIncompatibleAppView *_incompatibleView;
    NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly, nonatomic) SKUIProductPageItem *incompatibleItem; // @synthesize incompatibleItem=_incompatibleItem;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_setArtworkWithImage:(id)arg1 error:(id)arg2;
- (id)_artworkContext;
- (void)_learnMoreAboutIPad:(id)arg1;
- (void)_learnMoreAboutApp:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)reloadData;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (void)dealloc;
- (id)initWithIncompatibleItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIndexBarControl : UIControl
{
    SKUIIndexBarEntry *_combinedEntry;
    _Bool _didSendPastBottom;
    _Bool _didSendPastTop;
    NSArray *_displayEntries;
    _Bool _hasValidCombinedEntry;
    _Bool _hasValidDisplayEntries;
    _Bool _hasValidNumberOfSections;
    _Bool _hasValidTotalEntryCount;
    _Bool _hasValidTotalSize;
    NSMapTable *_indexPathToEntryMapTable;
    NSIndexPath *_lastSelectedIndexPath;
    long long _numberOfSections;
    NSMapTable *_sectionIndexToNumberOfEntriesMapTable;
    long long _totalEntryCount;
    struct CGSize _totalSize;
    CDStruct_2ba00048 _dataSourceDelegateFlags;
    id <SKUIIndexBarControlDataSource> _dataSource;
    NSDictionary *_defaultTextAttributes;
    id <SKUIIndexBarControlDelegate> _delegate;
    struct UIEdgeInsets _contentEdgeInsets;
    struct UIEdgeInsets _hitTestEdgeInsets;
}

@property(nonatomic) __weak id <SKUIIndexBarControlDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSDictionary *defaultTextAttributes; // @synthesize defaultTextAttributes=_defaultTextAttributes;
@property(nonatomic) __weak id <SKUIIndexBarControlDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) struct UIEdgeInsets hitTestEdgeInsets; // @synthesize hitTestEdgeInsets=_hitTestEdgeInsets;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
- (void).cxx_destruct;
- (struct CGRect)_visibleBounds;
- (struct CGSize)_totalSize;
- (long long)_totalEntryCount;
- (struct CGSize)_sizeForEntryAtIndexPath:(id)arg1;
- (struct CGSize)_sizeForEntries:(id)arg1;
- (void)_sendSelectionForTouch:(id)arg1 withEvent:(id)arg2;
- (long long)_numberOfSections;
- (void)_invalidateDisplayEntries;
- (id)_entryAtIndexPath:(id)arg1;
- (id)_displayEntriesThatFitInViewForGroupedEntries;
- (id)_displayEntries;
- (void)_configureNewEntry:(id)arg1;
- (id)_combinedEntry;
- (long long)_numberOfEntriesInSection:(long long)arg1;
- (void)_enumerateEntryIndexPathsUsingBlock:(CDUnknownBlockType)arg1;
- (id)_allRequiredEntries;
- (id)_allEntries;
- (void)reloadSections:(id)arg1;
- (void)reloadEntryAtIndexPath:(id)arg1;
- (void)reloadData;
- (void)reloadCombinedEntry;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)traitCollectionDidChange:(id)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setTransform:(struct CGAffineTransform)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface SKUIIndexBarControlController : NSObject <SKUIIndexBarControlDataSource, SKUIIndexBarControlDelegate>
{
    SKUIIndexBarEntryDescriptor *_combinedEntryDescriptor;
    NSMapTable *_entryDescriptorToCachedEntry;
    _Bool _hasValidCombinedEntryDescriptor;
    NSMapTable *_indexPathToEntryDescriptor;
    NSMapTable *_requestIDToDescriptors;
    CDStruct_2ba00048 _dataSourceDelegateFlags;
    id <SKUIIndexBarControlControllerDataSource> _dataSource;
    id <SKUIIndexBarControlControllerDelegate> _delegate;
    SKUIIndexBarControl *_indexBarControl;
    SKUIResourceLoader *_resourceLoader;
}

@property(retain, nonatomic) SKUIResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(readonly, nonatomic) SKUIIndexBarControl *indexBarControl; // @synthesize indexBarControl=_indexBarControl;
@property(nonatomic) __weak id <SKUIIndexBarControlControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <SKUIIndexBarControlControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)_URLForEntryDescriptor:(id)arg1;
- (void)_updateCachedEntry:(id)arg1 forEntryDescriptor:(id)arg2;
- (id)_placeholderEntryForEntryDescriptor:(id)arg1;
- (void)_loadEntryForEntryDescriptor:(id)arg1;
- (void)_finishLoadForRequestID:(id)arg1 withResultingImage:(id)arg2;
- (id)_entryForEntryDescriptor:(id)arg1 loadingIfNeeded:(_Bool)arg2;
- (id)_entryDescriptorAtIndexPath:(id)arg1;
- (void)_configureEntry:(id)arg1 withEntryDescriptor:(id)arg2;
- (id)_combinedEntryDescriptor;
- (id)_cachedEntryForEntryDescriptor:(id)arg1;
- (void)_cancelLoadForEntryDescriptors:(id)arg1;
- (void)_artworkRequestDidLoadImageNotification:(id)arg1;
- (void)indexBarControlDidSelectBeyondTop:(id)arg1;
- (void)indexBarControlDidSelectBeyondBottom:(id)arg1;
- (void)indexBarControl:(id)arg1 didSelectEntryAtIndexPath:(id)arg2;
- (long long)indexBarControl:(id)arg1 numberOfEntriesInSection:(long long)arg2;
- (long long)numberOfSectionsInIndexBarControl:(id)arg1;
- (id)indexBarControl:(id)arg1 entryAtIndexPath:(id)arg2;
- (id)combinedEntryForIndexBarControl:(id)arg1;
- (void)reloadData;
- (void)reloadSections:(id)arg1;
- (void)reloadEntryDescriptorAtIndexPath:(id)arg1;
- (void)reloadCombinedEntryDescriptor;
- (void)dealloc;
- (id)initWithIndexBarControl:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIIndexBarEntryDescriptor : NSObject
{
    long long _entryDescriptorType;
    SKUIArtwork *_artwork;
    NSAttributedString *_attributedString;
    UIImage *_image;
    long long _visibilityPriority;
    struct CGSize _size;
    struct UIEdgeInsets _contentEdgeInsets;
}

+ (id)placeholderEntryDescriptorWithSize:(struct CGSize)arg1;
+ (id)entryDescriptorWithImage:(id)arg1;
+ (id)entryDescriptorWithAttributedString:(id)arg1;
+ (id)entryDescriptorWithArtwork:(id)arg1;
@property(nonatomic) long long visibilityPriority; // @synthesize visibilityPriority=_visibilityPriority;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(retain, nonatomic) SKUIArtwork *artwork; // @synthesize artwork=_artwork;
@property(nonatomic) long long entryDescriptorType; // @synthesize entryDescriptorType=_entryDescriptorType;
@property(nonatomic) struct UIEdgeInsets contentEdgeInsets; // @synthesize contentEdgeInsets=_contentEdgeInsets;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface SKUIIndexBarEntryListController : NSObject
{
    _Bool _needsRootTargetViewElement;
    _Bool _hidesIndexBar;
    id <SKUIIndexBarEntryListControllerDelegate> _delegate;
    NSString *_rootTargetIndexBarEntryID;
    SKUIViewElement *_rootTargetViewElement;
    long long _numberOfEntryDescriptors;
}

+ (id)entryListControllerForEntryListViewElement:(id)arg1;
+ (id)entryListControllerForEntryViewElement:(id)arg1;
@property(readonly, nonatomic) long long numberOfEntryDescriptors; // @synthesize numberOfEntryDescriptors=_numberOfEntryDescriptors;
@property(retain, nonatomic) SKUIViewElement *rootTargetViewElement; // @synthesize rootTargetViewElement=_rootTargetViewElement;
@property(readonly, nonatomic) NSString *rootTargetIndexBarEntryID; // @synthesize rootTargetIndexBarEntryID=_rootTargetIndexBarEntryID;
@property(readonly, nonatomic) _Bool hidesIndexBar; // @synthesize hidesIndexBar=_hidesIndexBar;
@property(readonly, nonatomic) _Bool needsRootTargetViewElement; // @synthesize needsRootTargetViewElement=_needsRootTargetViewElement;
@property(nonatomic) __weak id <SKUIIndexBarEntryListControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_didInvalidate;
- (id)targetIndexBarEntryIDForEntryDescriptorAtIndex:(long long)arg1 returningRelativeSectionIndex:(out long long *)arg2;
- (void)reloadViewElementData;
- (id)entryDescriptorAtIndex:(long long)arg1;

@end

@interface SKUIIndexBarEntryListViewElement : SKUIViewElement
{
    _Bool _indexBarHiddenWhenEmpty;
    long long _entryListElementType;
    long long _minimumEntityCount;
    NSString *_targetIndexBarEntryID;
}

@property(readonly, copy, nonatomic) NSString *targetIndexBarEntryID; // @synthesize targetIndexBarEntryID=_targetIndexBarEntryID;
@property(readonly, nonatomic) long long minimumEntityCount; // @synthesize minimumEntityCount=_minimumEntityCount;
@property(readonly, nonatomic, getter=isIndexBarHiddenWhenEmpty) _Bool indexBarHiddenWhenEmpty; // @synthesize indexBarHiddenWhenEmpty=_indexBarHiddenWhenEmpty;
@property(readonly, nonatomic) long long entryListElementType; // @synthesize entryListElementType=_entryListElementType;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSArray *childIndexBarEntryElements;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIIndexBarEntryViewElement : SKUIViewElement
{
    NSString *_targetIndexBarEntryID;
    long long _visibilityPriority;
}

@property(readonly, nonatomic) long long visibilityPriority; // @synthesize visibilityPriority=_visibilityPriority;
@property(readonly, copy, nonatomic) NSString *targetIndexBarEntryID; // @synthesize targetIndexBarEntryID=_targetIndexBarEntryID;
- (void).cxx_destruct;
@property(readonly, nonatomic) SKUIViewElement *childElement;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIIndexBarLocaleStandardEntryListController : SKUIIndexBarEntryListController
{
    SKUIIndexBarEntryListViewElement *_entryListViewElement;
    NSSet *_requiredVisibilitySet;
    IKViewElementStyle *_style;
}

- (void).cxx_destruct;
- (void)reloadViewElementData;
- (id)targetIndexBarEntryIDForEntryDescriptorAtIndex:(long long)arg1 returningRelativeSectionIndex:(out long long *)arg2;
- (id)entryDescriptorAtIndex:(long long)arg1;
- (long long)numberOfEntryDescriptors;
- (id)initWithSKUIIndexBarEntryListViewElement:(id)arg1;

@end

@interface SKUIIndexBarSingleEntryListController : SKUIIndexBarEntryListController
{
    SKUIIndexBarEntryDescriptor *_entryDescriptor;
    SKUIViewElement *_descriptiveViewElement;
    SKUIIndexBarEntryViewElement *_entryViewElement;
}

@property(readonly, nonatomic) SKUIIndexBarEntryViewElement *entryViewElement; // @synthesize entryViewElement=_entryViewElement;
- (void).cxx_destruct;
- (id)targetIndexBarEntryIDForEntryDescriptorAtIndex:(long long)arg1 returningRelativeSectionIndex:(out long long *)arg2;
- (void)reloadViewElementData;
- (long long)numberOfEntryDescriptors;
- (_Bool)needsRootTargetViewElement;
- (_Bool)hidesIndexBar;
- (id)entryDescriptorAtIndex:(long long)arg1;
- (id)initWithEntryViewElement:(id)arg1;

@end

@interface SKUIIndexBarViewElement : SKUIViewElement
{
}

@end

@interface SKUIInfoListViewElement : SKUIViewElement
{
    long long _infoListType;
}

@property(readonly, nonatomic) long long infoListType; // @synthesize infoListType=_infoListType;
- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIInfoViewElement : SKUIViewElement
{
}

@property(readonly, nonatomic) NSArray *valueElements;
@property(readonly, nonatomic) SKUILabelViewElement *titleElement;

@end

@interface SKUIInlineFlipContainerView : UIView
{
    UIView *_backView;
    UIView *_frontView;
}

- (void).cxx_destruct;
- (void)flipToBackViewWithDuration:(double)arg1 options:(unsigned long long)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)initWithFrontView:(id)arg1 backView:(id)arg2;

@end

@interface SKUIItem : NSObject <SKUICacheCoding, SSMetricsEventFieldProvider>
{
    struct _NSRange _ageBandRange;
    NSString *_artistName;
    SKUIArtworkList *_artworks;
    NSString *_bundleID;
    NSString *_categoryName;
    NSString *_collectionName;
    unsigned long long _deviceFamilies;
    NSString *_editorialBage;
    long long _itemIdentifier;
    long long _itemKind;
    NSString *_itemKindString;
    SKUIItemOffer *_itemOffer;
    _Bool _newsstandApp;
    _Bool _hasInAppPurchases;
    long long _newsstandBindingEdge;
    long long _newsstandBindingType;
    SKUIArtworkList *_newsstandArtworks;
    long long _numberOfChildItems;
    long long _numberOfUserRatings;
    long long _parentalControlsRank;
    _Bool _prerenderedArtwork;
    NSString *_productPageURLString;
    NSArray *_requiredCapabilities;
    NSString *_title;
    float _userRating;
    long long _versionIdentifier;
    NSString *_versionString;
    NSArray *_videos;
    NSString *_editorialBadge;
}

@property(readonly, nonatomic) NSString *itemKindString; // @synthesize itemKindString=_itemKindString;
@property(readonly, nonatomic) long long itemKind; // @synthesize itemKind=_itemKind;
@property(readonly, nonatomic) NSArray *videos; // @synthesize videos=_videos;
@property(readonly, nonatomic) NSString *versionString; // @synthesize versionString=_versionString;
@property(readonly, nonatomic) long long versionIdentifier; // @synthesize versionIdentifier=_versionIdentifier;
@property(readonly, nonatomic) float userRating; // @synthesize userRating=_userRating;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSArray *requiredCapabilities; // @synthesize requiredCapabilities=_requiredCapabilities;
@property(readonly, nonatomic) NSString *productPageURLString; // @synthesize productPageURLString=_productPageURLString;
@property(readonly, nonatomic) SKUIItemOffer *primaryItemOffer; // @synthesize primaryItemOffer=_itemOffer;
@property(readonly, nonatomic, getter=hasPrerenderedArtwork) _Bool prerenderedArtwork; // @synthesize prerenderedArtwork=_prerenderedArtwork;
@property(readonly, nonatomic) long long parentalControlsRank; // @synthesize parentalControlsRank=_parentalControlsRank;
@property(readonly, nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(readonly, nonatomic) long long numberOfChildItems; // @synthesize numberOfChildItems=_numberOfChildItems;
@property(readonly, nonatomic) long long newsstandBindingType; // @synthesize newsstandBindingType=_newsstandBindingType;
@property(readonly, nonatomic) long long newsstandBindingEdge; // @synthesize newsstandBindingEdge=_newsstandBindingEdge;
@property(readonly, nonatomic) SKUIArtworkList *newsstandArtworks; // @synthesize newsstandArtworks=_newsstandArtworks;
@property(readonly, nonatomic) _Bool hasInAppPurchases; // @synthesize hasInAppPurchases=_hasInAppPurchases;
@property(readonly, nonatomic, getter=isNewsstandApp) _Bool newsstandApp; // @synthesize newsstandApp=_newsstandApp;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(readonly, nonatomic) NSString *editorialBadge; // @synthesize editorialBadge=_editorialBadge;
@property(readonly, nonatomic) unsigned long long deviceFamilies; // @synthesize deviceFamilies=_deviceFamilies;
@property(readonly, nonatomic) NSString *collectionName; // @synthesize collectionName=_collectionName;
@property(readonly, nonatomic) NSString *categoryName; // @synthesize categoryName=_categoryName;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleID;
@property(readonly, nonatomic) SKUIArtworkList *artworks; // @synthesize artworks=_artworks;
@property(readonly, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
@property(readonly, nonatomic) struct _NSRange ageBandRange; // @synthesize ageBandRange=_ageBandRange;
- (void).cxx_destruct;
- (id)valueForMetricsField:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)_setHasInAppPurchases:(_Bool)arg1;
@property(readonly, nonatomic) NSString *_downloadKind;
- (id)lookupDictionary;
- (void)addItemOfferParameterWithName:(id)arg1 value:(id)arg2;
@property(readonly, nonatomic) NSArray *loadedChildItems;
@property(readonly, nonatomic) NSURL *largestArtworkURL;
@property(readonly, nonatomic) NSArray *childItemIdentifiers;
- (id)childItemForIdentifier:(id)arg1;
- (id)artworkURLForSize:(long long)arg1;
- (id)initWithLookupDictionary:(id)arg1;
- (id)initContainerItemWithItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface SKUIItemArtworkContext : NSObject
{
    UIColor *_backgroundColor;
    SKUIColorScheme *_colorScheme;
    SKUIProductImageDataConsumer *_generalImageConsumer;
    SKUIStyledImageDataConsumer *_iconConsumer;
    SKUIProductImageDataConsumer *_letterboxConsumer;
    SKUIStyledImageDataConsumer *_newsstandConsumer;
    NSMutableDictionary *_placeholders;
    SKUIProductImageDataConsumer *_posterConsumer;
}

+ (id)wishlistContext;
+ (id)roomContext;
+ (id)lockupContextWithSize:(long long)arg1;
@property(retain, nonatomic) SKUIProductImageDataConsumer *posterConsumer; // @synthesize posterConsumer=_posterConsumer;
@property(retain, nonatomic) SKUIStyledImageDataConsumer *newsstandConsumer; // @synthesize newsstandConsumer=_newsstandConsumer;
@property(retain, nonatomic) SKUIProductImageDataConsumer *letterboxConsumer; // @synthesize letterboxConsumer=_letterboxConsumer;
@property(retain, nonatomic) SKUIStyledImageDataConsumer *iconConsumer; // @synthesize iconConsumer=_iconConsumer;
@property(retain, nonatomic) SKUIProductImageDataConsumer *generalConsumer; // @synthesize generalConsumer=_generalImageConsumer;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)artworkForItem:(id)arg1;
- (id)URLForItem:(id)arg1;
- (id)placeholderImageForItem:(id)arg1;
- (struct CGSize)largestImageSizeForLockups:(id)arg1;
- (struct CGSize)largestImageSizeForItems:(id)arg1;
- (struct CGSize)imageSizeForItem:(id)arg1;
- (id)dataConsumerForItem:(id)arg1;

@end

@interface SKUIItemBrowseCellLayout : SKUIItemCellLayout
{
    _SKUIItemBrowseCellContentView *_cellContentView;
    struct CGSize _imageBoundingSize;
    _Bool _largeSpacing;
    long long _numberOfUserRatings;
    UIColor *_primaryTextColor;
    UIColor *_secondaryTextColor;
    double _userRating;
}

@property(nonatomic) double userRating; // @synthesize userRating=_userRating;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(nonatomic, getter=isLargeSpacing) _Bool largeSpacing; // @synthesize largeSpacing=_largeSpacing;
@property(nonatomic) struct CGSize imageBoundingSize; // @synthesize imageBoundingSize=_imageBoundingSize;
- (void).cxx_destruct;
- (void)_reloadUserRatingViews;
- (void)_initSKUIItemBrowseCellLayout;
- (id)_decimalNumberFormatter;
- (void)setIconImage:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)layoutForItemOfferChange;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *subtitle;
@property(copy, nonatomic) NSString *indexNumberString;
- (void)setColoringWithColorScheme:(id)arg1;
@property(copy, nonatomic) NSString *category;
- (id)initWithTableViewCell:(id)arg1;
- (id)initWithParentView:(id)arg1;
- (id)initWithCollectionViewCell:(id)arg1;

@end

@interface SKUIItemTableViewCell : SKUITableViewCell <SKUICellLayoutParentView>
{
    _Bool _layoutNeedsLayout;
}

- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)prepareForReuse;
- (void)setCellLayoutNeedsLayout;
@property(readonly, nonatomic) SKUIItemCellLayout *layout;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2 rowIndex:(long long)arg3;
- (void)configureForItem:(id)arg1 rowIndex:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemBrowseTableViewCell : SKUIItemTableViewCell
{
    SKUIItemBrowseCellLayout *_layout;
}

@property(readonly, nonatomic) SKUIItemBrowseCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2 rowIndex:(long long)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIItemCollectionController : NSObject <SKUIArtworkRequestDelegate, SKUIItemStateCenterObserver, SKUIResourceLoaderDelegate>
{
    SKUIItemArtworkContext *_artworkContext;
    SKUIResourceLoader *_artworkLoader;
    SKUIClientContext *_clientContext;
    id <SKUIItemCollectionDelegate> _delegate;
    _Bool _delegateProvidesScreenshots;
    NSMutableDictionary *_iconArtworkRequestIDs;
    SKUIStyledImageDataConsumer *_iconDataConsumer;
    NSArray *_items;
    SKUIScreenshotDataConsumer *_landscapeScreenshotDataConsumer;
    UIImage *_landscapeScreenshotPlaceholderImage;
    long long _numberOfItemsPerPage;
    double _numberOfPagesToCacheAhead;
    SKUIScreenshotDataConsumer *_portraitScreenshotDataConsumer;
    UIImage *_portraitScreenshotPlaceholderImage;
    UIImage *_placeholderImage;
    NSMutableDictionary *_screenshotArtworkRequestIDs;
}

@property(retain, nonatomic) SKUIScreenshotDataConsumer *portraitScreenshotDataConsumer; // @synthesize portraitScreenshotDataConsumer=_portraitScreenshotDataConsumer;
@property(nonatomic) double numberOfPagesToCacheAhead; // @synthesize numberOfPagesToCacheAhead=_numberOfPagesToCacheAhead;
@property(nonatomic) long long numberOfItemsPerPage; // @synthesize numberOfItemsPerPage=_numberOfItemsPerPage;
@property(retain, nonatomic) SKUIScreenshotDataConsumer *landscapeScreenshotDataConsumer; // @synthesize landscapeScreenshotDataConsumer=_landscapeScreenshotDataConsumer;
@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(retain, nonatomic) SKUIStyledImageDataConsumer *iconDataConsumer; // @synthesize iconDataConsumer=_iconDataConsumer;
@property(nonatomic) __weak id <SKUIItemCollectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIResourceLoader *artworkLoader; // @synthesize artworkLoader=_artworkLoader;
@property(retain, nonatomic) SKUIItemArtworkContext *artworkContext; // @synthesize artworkContext=_artworkContext;
- (void).cxx_destruct;
- (struct _NSRange)_visibleItemRange;
- (id)_screenshotForItem:(id)arg1;
- (id)_screenshotArtworkRequestWithItem:(id)arg1;
- (void)_reloadScreenshotForCellLayout:(id)arg1 item:(id)arg2 isRestricted:(_Bool)arg3;
- (void)_reloadForRestrictionsChange;
- (void)_reloadForItemStateChange:(id)arg1;
- (id)_placeholderImageForScreenshot:(id)arg1;
- (id)_placeholderImageForItem:(id)arg1;
- (_Bool)_loadArtworkForItem:(id)arg1 reason:(long long)arg2;
- (id)_iconArtworkRequestWithItem:(id)arg1;
- (void)_enumerateVisibleCellLayoutsWithBlock:(CDUnknownBlockType)arg1;
- (id)_artworkLoader;
- (void)_memoryWarningNotification:(id)arg1;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)artworkLoaderDidIdle:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)removeAllCachedResources;
- (id)performActionForItemAtIndex:(long long)arg1;
- (void)precacheNextPageArtworkForOffset:(struct CGPoint)arg1 direction:(double)arg2;
- (void)loadNextPageOfArtworkWithReason:(long long)arg1;
- (void)configureCellLayout:(id)arg1 forIndex:(long long)arg2;
- (void)cancelArtworkLoadForItemIndex:(long long)arg1;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;
- (id)init;
- (id)_initSKUIItemCollectionController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemContentRating : NSObject
{
    NSArray *_contentRatingAdvisories;
    NSString *_contentRatingName;
    NSString *_contentRatingSystemName;
    NSString *_contentRank;
}

@property(readonly, nonatomic) NSString *contentRank; // @synthesize contentRank=_contentRank;
@property(readonly, nonatomic) NSString *contentRatingSystemName; // @synthesize contentRatingSystemName=_contentRatingSystemName;
@property(readonly, nonatomic) NSArray *contentRatingAdvisories; // @synthesize contentRatingAdvisories=_contentRatingAdvisories;
@property(readonly, nonatomic) NSString *contentRatingName; // @synthesize contentRatingName=_contentRatingName;
- (void).cxx_destruct;
- (id)description;
- (id)initWithContentRatingDictionary:(id)arg1 systemName:(id)arg2;

@end

@interface SKUIItemGridViewController : UIViewController <SKUIItemCollectionDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    SKUIClientContext *_clientContext;
    UICollectionView *_collectionView;
    id <SKUIItemGridDelegate> _delegate;
    NSMutableIndexSet *_hiddenIconIndexSet;
    SKUIItemCollectionController *_itemCollectionController;
    NSMutableArray *_items;
    struct CGSize _imageBoundingSize;
    NSOperationQueue *_operationQueue;
    UIImage *_placeholderImage;
    double _rowHeight;
    NSMutableIndexSet *_selectedItemIndexSet;
    SKUIUber *_uber;
    SKUIItemArtworkContext *_artworkContext;
}

@property(retain, nonatomic) SKUIUber *uber; // @synthesize uber=_uber;
@property(readonly, nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) struct CGSize imageBoundingSize; // @synthesize imageBoundingSize=_imageBoundingSize;
@property(nonatomic) __weak id <SKUIItemGridDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (long long)_numberOfColumnsForOrientation:(long long)arg1;
- (id)_itemCollectionController;
- (void)_reloadLayout;
- (id)_collectionView;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)itemCollectionView:(id)arg1 didPerformEditActionForCell:(id)arg2;
- (void)itemCollectionView:(id)arg1 didConfirmItemOfferForCell:(id)arg2;
- (struct _NSRange)visibleItemRangeForItemCollectionController:(id)arg1;
- (_Bool)shouldCacheAheadWhenIdleForItemCollectionController:(id)arg1;
- (struct _NSRange)itemCollectionController:(id)arg1 itemPageRangeForOffset:(struct CGPoint)arg2;
- (id)itemCollectionController:(id)arg1 cellLayoutForItemIndex:(long long)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)loadView;
- (void)unhideIcons;
- (void)setItemCellClass:(Class)arg1;
@property(retain, nonatomic) SKUIStyledImageDataConsumer *iconDataConsumer;
@property(nonatomic) struct CGPoint contentOffset;
@property(retain, nonatomic) SKUIItemArtworkContext *artworkContext; // @synthesize artworkContext=_artworkContext;
- (void)removeItemsAtIndexes:(id)arg1;
- (id)popIconImageViewForItemAtIndex:(long long)arg1;
- (void)loadNextPageOfArtworkWithReason:(long long)arg1;
- (void)dealloc;
- (id)initWithRowHeight:(double)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemList : NSObject <SKUICacheCoding, NSCopying>
{
    NSMutableArray *_items;
    NSString *_seeAllTitle;
    NSString *_seeAllURLString;
    NSString *_title;
    NSSet *_unavailableItemIdentifiers;
}

@property(copy, nonatomic) NSSet *unavailableItemIdentifiers; // @synthesize unavailableItemIdentifiers=_unavailableItemIdentifiers;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *seeAllURLString; // @synthesize seeAllURLString=_seeAllURLString;
@property(copy, nonatomic) NSString *seeAllTitle; // @synthesize seeAllTitle=_seeAllTitle;
@property(copy, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (void)removeItemsAtIndexes:(id)arg1;
- (_Bool)isUnavailableItemIdentifier:(id)arg1;
- (void)addItems:(id)arg1;
- (void)addItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemListTableViewController : UITableViewController <SKUIItemCollectionDelegate>
{
    SKUIClientContext *_clientContext;
    id <SKUIItemListTableDelegate> _delegate;
    _Bool _delegateWantsCanRemove;
    _Bool _delegateWantsDidRemove;
    _Bool _delegateWantsWillDisplay;
    _Bool _didLoadMore;
    NSMutableIndexSet *_hiddenIconIndexSet;
    struct CGSize _imageBoundingSize;
    SKUIItemArtworkContext *_artworkContext;
    SKUIItemCollectionController *_itemCollectionController;
    SKUIItemList *_itemList;
    SSVLoadURLOperation *_loadMoreOperation;
    _Bool _loadsMoreItems;
    NSOperationQueue *_operationQueue;
    double _rowHeight;
    long long _selectionStyle;
    long long _separatorStyle;
    _Bool _suspended;
    SKUIUber *_uber;
    _Bool _requestedLoadMore;
}

@property(retain, nonatomic) SKUIItemArtworkContext *artworkContext; // @synthesize artworkContext=_artworkContext;
@property(retain, nonatomic) SKUIUber *uber; // @synthesize uber=_uber;
@property(nonatomic, getter=isSuspended) _Bool suspended; // @synthesize suspended=_suspended;
@property(nonatomic) long long separatorStyle; // @synthesize separatorStyle=_separatorStyle;
@property(nonatomic) long long selectionStyle; // @synthesize selectionStyle=_selectionStyle;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) _Bool loadsMoreItems; // @synthesize loadsMoreItems=_loadsMoreItems;
@property(retain, nonatomic) SKUIItemList *itemList; // @synthesize itemList=_itemList;
@property(nonatomic) struct CGSize imageBoundingSize; // @synthesize imageBoundingSize=_imageBoundingSize;
@property(nonatomic) __weak id <SKUIItemListTableDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_loadRemainingItemsWithPriority:(long long)arg1;
- (id)_loadMoreCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)_itemListCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)_itemCollectionController;
- (void)_finishLoadMoreOperationWithItems:(id)arg1 error:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (void)itemTableView:(id)arg1 didRemoveCell:(id)arg2;
- (void)itemTableView:(id)arg1 didConfirmItemOfferForTableViewCell:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (struct _NSRange)visibleItemRangeForItemCollectionController:(id)arg1;
- (_Bool)shouldCacheAheadWhenIdleForItemCollectionController:(id)arg1;
- (struct _NSRange)itemCollectionController:(id)arg1 itemPageRangeForOffset:(struct CGPoint)arg2;
- (id)itemCollectionController:(id)arg1 cellLayoutForItemIndex:(long long)arg2;
@property(readonly, nonatomic) NSString *visibleMetricsImpressions;
- (void)unhideIcons;
- (void)setItemCellClass:(Class)arg1;
- (void)setItemArtworkContext:(id)arg1;
@property(retain, nonatomic) SKUIStyledImageDataConsumer *iconDataConsumer;
@property(retain, nonatomic) SKUIResourceLoader *artworkLoader;
- (id)popIconImageViewForItemAtIndex:(long long)arg1;
- (void)loadNextPageOfArtworkWithReason:(long long)arg1;
- (struct CGRect)frameForItemAtIndex:(long long)arg1;
- (void)deleteRowsAtIndexPaths:(id)arg1;
- (void)addItems:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemOffer : NSObject <SKUICacheCoding>
{
    NSString *_actionParameters;
    NSString *_buttonText;
    NSString *_confirmationText;
    long long _fileSize;
    NSString *_fileSizeText;
    NSString *_offerTypeString;
    float _price;
    NSString *_variantIdentifier;
}

@property(readonly, nonatomic) NSString *variantIdentifier; // @synthesize variantIdentifier=_variantIdentifier;
@property(readonly, nonatomic) float price; // @synthesize price=_price;
@property(readonly, nonatomic) long long fileSize; // @synthesize fileSize=_fileSize;
@property(readonly, nonatomic) NSString *confirmationText; // @synthesize confirmationText=_confirmationText;
@property(readonly, nonatomic) NSString *buttonText; // @synthesize buttonText=_buttonText;
@property(readonly, nonatomic) NSString *actionParameters; // @synthesize actionParameters=_actionParameters;
- (void).cxx_destruct;
- (void)_setFileSizeWithFlavors:(id)arg1;
- (void)_setFileSizeWithAssets:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (void)_addActionParameterWithName:(id)arg1 value:(id)arg2;
@property(readonly, nonatomic) long long offerType;
@property(readonly, nonatomic) NSDictionary *lookupDictionary;
@property(readonly, nonatomic) NSString *fileSizeText;
- (id)initWithRedownloadToken:(id)arg1;
- (id)initWithOfferDictionary:(id)arg1;
- (id)initWithLookupDictionary:(id)arg1;
- (id)initWithButtonText:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemOfferButton : UIControl <SKUIViewElementOfferButton>
{
    UIColor *_backgroundColor;
    UIView *_borderView;
    SKUIFocusedTouchGestureRecognizer *_cancelGestureRecognizer;
    UIImage *_cloudImage;
    UIColor *_confirmationColor;
    NSMutableAttributedString *_confirmationTitleAttributedString;
    long long _confirmationTitleStyle;
    struct CGSize _confirmationTitleFitSize;
    id <SKUIItemOfferButtonDelegate> _delegate;
    long long _fillStyle;
    UIImage *_image;
    UIImageView *_imageView;
    _Bool _isUbered;
    double _progress;
    SKUICircleProgressIndicator *_progressIndicator;
    _Bool _showsConfirmationState;
    NSMutableAttributedString *_titleAttributedString;
    struct CGSize _titleFitSize;
    UILabel *_titleLabel;
    long long _titleStyle;
    _Bool _universal;
    _Bool _usesDrawRectPath;
    SKUIItemOfferButtonState *_state;
    UIImageView *_universalImageView;
}

+ (id)_basicAnimationWithKeyPath:(id)arg1;
+ (struct UIEdgeInsets)_imageInsetsForProgressType:(long long)arg1;
+ (id)_imageForProgressType:(long long)arg1;
+ (id)_cloudImageForTint:(id)arg1 isUbered:(_Bool)arg2;
+ (id)_universalPlusImageWithTintColor:(id)arg1;
+ (struct CGSize)_titleSizeThatFitsForSize:(struct CGSize)arg1 titleStyle:(long long)arg2 mutableAttributedString:(id)arg3;
+ (_Bool)_sizeMattersForTitleStyle:(long long)arg1;
+ (id)_imageForAttributedTitle:(id)arg1 titleStyle:(long long)arg2 size:(struct CGSize)arg3 fillStyle:(long long)arg4 universal:(_Bool)arg5 tintColor:(id)arg6;
+ (id)_defaultTitleAttributes;
+ (id)_cachedImageForAttributedTitle:(id)arg1 titleStyle:(long long)arg2 size:(struct CGSize)arg3 fillStyle:(long long)arg4 universal:(_Bool)arg5 tintColor:(id)arg6;
+ (id)localizedTitleForItemState:(id)arg1 clientContext:(id)arg2;
+ (id)itemOfferButtonWithAppearance:(id)arg1;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic, getter=isUniversal) _Bool universal; // @synthesize universal=_universal;
@property(nonatomic) long long titleStyle; // @synthesize titleStyle=_titleStyle;
@property(nonatomic) _Bool showsConfirmationState; // @synthesize showsConfirmationState=_showsConfirmationState;
@property(nonatomic) long long fillStyle; // @synthesize fillStyle=_fillStyle;
@property(nonatomic) __weak id <SKUIItemOfferButtonDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long confirmationTitleStyle; // @synthesize confirmationTitleStyle=_confirmationTitleStyle;
- (void).cxx_destruct;
- (void)_removeAllAnimations:(_Bool)arg1;
- (void)_updateForChangedTitleProperty;
- (void)_updateForChangedConfirmationTitleProperty;
- (void)_sendWillAnimate;
- (void)_sendDidAnimate;
- (void)_reloadForCurrentState:(_Bool)arg1;
- (void)_removeCancelGestureRecognizer;
- (void)_insertCancelGestureRecognizer;
- (void)_insertUniversalView;
- (void)_insertImageView;
- (void)_insertLabel;
- (void)_insertBorderView;
- (void)_insertProgressIndicator;
- (void)_adjustViewOrderingForProperties:(id)arg1;
- (void)_transitionFromProgress:(id)arg1 toTitleOrImage:(id)arg2 withDuration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_transitionFromTitleOrImage:(id)arg1 toProgress:(id)arg2 withDuration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_transitionFromProgress:(id)arg1 toProgress:(id)arg2 withDuration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_transitionFromImage:(id)arg1 toImage:(id)arg2 withDuration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_transitionFromTitle:(id)arg1 toTitle:(id)arg2 withDuration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (id)_buttonPropertiesForState:(id)arg1;
- (void)_cancelGestureAction:(id)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)drawRect:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (_Bool)_touchInBounds:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (void)cancelTrackingWithEvent:(id)arg1;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
@property(nonatomic) __weak id <SKUIItemOfferButtonDelegate> itemOfferDelegate;
- (_Bool)setValuesUsingViewElement:(id)arg1 itemState:(id)arg2 clientContext:(id)arg3 animated:(_Bool)arg4;
- (_Bool)setValuesUsingItemOffer:(id)arg1 itemState:(id)arg2 clientContext:(id)arg3 animated:(_Bool)arg4;
- (_Bool)setTitle:(id)arg1 confirmationTitle:(id)arg2 itemState:(id)arg3 clientContext:(id)arg4 animated:(_Bool)arg5;
- (void)setColoringWithAppearance:(id)arg1;
@property(copy, nonatomic) NSString *title;
- (void)showCloudImage;
- (void)setShowingConfirmation:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setProgressType:(long long)arg1 animated:(_Bool)arg2;
@property(nonatomic) long long progressType;
- (void)setProgress:(double)arg1 animated:(_Bool)arg2;
@property(retain, nonatomic) UIImage *image;
@property(copy, nonatomic) NSString *confirmationTitle;
- (void)removeButtonStateAnimations;
@property(readonly, nonatomic, getter=isShowingConfirmation) _Bool showingConfirmation;
- (struct CGSize)layoutSizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIItemOfferButtonAppearance : NSObject
{
    UIColor *_buttonColor;
    UIColor *_confirmationColor;
}

@property(readonly, nonatomic) UIColor *confirmationColor; // @synthesize confirmationColor=_confirmationColor;
@property(readonly, nonatomic) UIColor *buttonColor; // @synthesize buttonColor=_buttonColor;
- (void).cxx_destruct;
- (id)initWithColorScheme:(id)arg1;

@end

@interface SKUIItemOfferButtonProperties : NSObject
{
    _Bool _hasBorderView;
    _Bool _hasTitleLabel;
    _Bool _universal;
    _Bool _progressIndeterminate;
    _Bool _cancelRecognizer;
    UIColor *_borderBackgroundColor;
    UIColor *_borderColor;
    CAFilter *_borderCompositingFilter;
    double _borderWidth;
    double _borderCornerRadius;
    NSAttributedString *_attributedText;
    UIColor *_textColor;
    long long _confirmationTitleStyle;
    long long _titleStyle;
    UIImage *_image;
    long long _progressType;
    double _progress;
    double _alpha;
}

@property(nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(nonatomic) _Bool cancelRecognizer; // @synthesize cancelRecognizer=_cancelRecognizer;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic) _Bool progressIndeterminate; // @synthesize progressIndeterminate=_progressIndeterminate;
@property(nonatomic) long long progressType; // @synthesize progressType=_progressType;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(nonatomic) long long titleStyle; // @synthesize titleStyle=_titleStyle;
@property(nonatomic) long long confirmationTitleStyle; // @synthesize confirmationTitleStyle=_confirmationTitleStyle;
@property(nonatomic) _Bool universal; // @synthesize universal=_universal;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(nonatomic) _Bool hasTitleLabel; // @synthesize hasTitleLabel=_hasTitleLabel;
@property(nonatomic) double borderCornerRadius; // @synthesize borderCornerRadius=_borderCornerRadius;
@property(nonatomic) double borderWidth; // @synthesize borderWidth=_borderWidth;
@property(retain, nonatomic) CAFilter *borderCompositingFilter; // @synthesize borderCompositingFilter=_borderCompositingFilter;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(retain, nonatomic) UIColor *borderBackgroundColor; // @synthesize borderBackgroundColor=_borderBackgroundColor;
@property(nonatomic) _Bool hasBorderView; // @synthesize hasBorderView=_hasBorderView;
- (void).cxx_destruct;

@end

@interface SKUIItemOfferButtonState : NSObject
{
    _Bool _highlighted;
    _Bool _showingConfirmation;
    _Bool _hasImage;
    long long _progressType;
}

@property(nonatomic) _Bool hasImage; // @synthesize hasImage=_hasImage;
@property(nonatomic) long long progressType; // @synthesize progressType=_progressType;
@property(nonatomic) _Bool showingConfirmation; // @synthesize showingConfirmation=_showingConfirmation;
@property(nonatomic) _Bool highlighted; // @synthesize highlighted=_highlighted;

@end

@interface SKUIItemResourceRequest : SKUIResourceRequest <NSCopying>
{
    id <SKUIItemRequestDelegate> _delegate;
    NSString *_imageProfile;
    NSArray *_itemIdentifiers;
    NSString *_keyProfile;
}

@property(copy, nonatomic) NSString *keyProfile; // @synthesize keyProfile=_keyProfile;
@property(copy, nonatomic) NSArray *itemIdentifiers; // @synthesize itemIdentifiers=_itemIdentifiers;
@property(copy, nonatomic) NSString *imageProfile; // @synthesize imageProfile=_imageProfile;
@property(nonatomic) __weak id <SKUIItemRequestDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)newLoadOperation;
- (void)finishWithResource:(id)arg1;

@end

@interface SKUIItemRoomTableViewCell : SKUIItemTableViewCell
{
    SKUIItemBrowseCellLayout *_layout;
}

@property(readonly, nonatomic) SKUIItemBrowseCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2 rowIndex:(long long)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUIItemState : NSObject <NSCopying>
{
    unsigned long long _downloadContentFlags;
    NSString *_downloadPhase;
    float _downloadProgress;
    NSNumber *_itemIdentifier;
    unsigned long long _libraryContentFlags;
    long long _mediaCategory;
    unsigned long long _state;
    NSString *_variantIdentifier;
}

@property(copy, nonatomic) NSString *variantIdentifier; // @synthesize variantIdentifier=_variantIdentifier;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) long long mediaCategory; // @synthesize mediaCategory=_mediaCategory;
@property(nonatomic) unsigned long long libraryContentFlags; // @synthesize libraryContentFlags=_libraryContentFlags;
@property(copy, nonatomic) NSNumber *itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(nonatomic) float downloadProgress; // @synthesize downloadProgress=_downloadProgress;
@property(copy, nonatomic) NSString *downloadPhase; // @synthesize downloadPhase=_downloadPhase;
@property(nonatomic) unsigned long long downloadContentFlags; // @synthesize downloadContentFlags=_downloadContentFlags;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly, nonatomic) unsigned long long allContentFlags;
@property(readonly, nonatomic) _Bool activeStateIsPreview;

@end

@interface SKUIItemStateCenter : NSObject <SSDownloadManagerObserver>
{
    NSObject<OS_dispatch_queue> *_accessQueue;
    BOOL _appInstallRestricted;
    SSSoftwareUpdatesStore *_appUpdatesStore;
    BOOL _canAccessAppUpdates;
    BOOL _canAccessPurchaseHistory;
    SSDownloadManager *_downloadManager;
    NSMutableArray *_finishLoadBlocks;
    long long _gratisState;
    long long _loadCount;
    NSMutableDictionary *_itemStates;
    NSObject<OS_dispatch_queue> *_mediaLibraryQueue;
    NSMutableArray *_mediaLibraries;
    NSCountedSet *_observedLibraryItems;
    NSObject<OS_dispatch_queue> *_observerQueue;
    NSHashTable *_observers;
    long long _parentalControlsRank;
    SSAppPurchaseHistoryDatabase *_purchaseHistoryDatabase;
    BOOL _runningInStoreDemoMode;
}

+ (id)defaultCenter;
- (void).cxx_destruct;
- (id)_setStateFlag:(unsigned long long)arg1 forOnlyItemsWithIdentifiers:(id)arg2 sendNotification:(_Bool)arg3;
- (id)_setStateFlag:(unsigned long long)arg1 forItemsWithIdentifiers:(id)arg2 sendNotification:(_Bool)arg3;
- (void)_setPurchaseHistoryItemsWithIdentifiers:(id)arg1;
- (void)_setInstalledItems:(id)arg1;
- (void)_setGratisIdentifiers:(id)arg1 error:(id)arg2;
- (void)_setDownloads:(id)arg1;
- (void)_setAvailableUpdatesWithUpdates:(id)arg1 decrementLoadCount:(_Bool)arg2;
- (void)_replacePurchasingItem:(id)arg1 withDownloadIDs:(id)arg2;
- (id)_removeState:(unsigned long long)arg1 forItemIdentifier:(id)arg2;
- (void)_removePurchasingItemsForPurchases:(id)arg1;
- (void)_reloadSoftwareLibrary;
- (void)_reloadPurchaseHistory;
- (void)_reloadMediaLibraryStateForItems:(id)arg1;
- (void)_reloadDownloadManager;
- (void)_reloadAppUpdatesStore;
- (id)_purchaseHistoryDatabase;
- (void)_performPurchases:(id)arg1 withClientContext:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_notifyObserversOfPurchasesResponses:(id)arg1;
- (void)_notifyObserversOfStateChanges:(id)arg1;
- (void)_notifyObserversOfRestrictionsChange;
- (void)_notifyObserversOfStateChange:(id)arg1;
- (void)_notifyObserversOfMediaLibraryChange;
- (id)_newPurchasesWithItems:(id)arg1;
- (id)_newPurchasesWithBundleItem:(id)arg1 bundleOffer:(id)arg2;
- (id)_newPurchaseWithItem:(id)arg1 offer:(id)arg2;
- (void)_fireFinishLoadBlocksIfNecessary;
- (void)_enumerateAvailableItemsForLibraryItems:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)_copyItemsStatesForLibraryItems:(id)arg1;
- (id)_appUpdatesStore;
- (id)_addState:(unsigned long long)arg1 forItemIdentifier:(id)arg2;
- (void)_updatesStoreChangeNotification:(id)arg1;
- (void)_restrictionsChangedNotification:(id)arg1;
- (void)_mediaLibraryDidChangeNotification:(id)arg1;
- (void)_reloadStateForObservedMediaLibraryItems;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)downloadManagerDownloadsDidChange:(id)arg1;
- (void)downloadManager:(id)arg1 downloadStatesDidChange:(id)arg2;
- (void)purchaseTone:(id)arg1 withProperties:(id)arg2 clientContext:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)gratisEligibleItemIdentifiers;
- (void)findLibraryItemsForContentIdentifiers:(id)arg1 options:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)reloadFromServerWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)performActionForLibraryItem:(id)arg1;
- (void)getUpdatesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)endObservingLibraryItems:(id)arg1;
- (void)beginObservingLibraryItems:(id)arg1;
@property(readonly) SSSoftwareUpdatesStore *appUpdatesStore;
- (void)addManifestDownloadWithURL:(id)arg1 placeholderMetadata:(id)arg2;
- (void)addDownloads:(id)arg1;
- (id)stateForItemWithIdentifier:(long long)arg1;
- (void)removeObserver:(id)arg1;
- (void)removeMediaLibrary:(id)arg1;
- (void)reloadMediaLibrary:(id)arg1;
- (void)reloadGratisEligibilityWithBundleIdentifiers:(id)arg1 clientContext:(id)arg2;
- (void)reloadFromServer;
- (void)purchaseItems:(id)arg1 withClientContext:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)purchaseItems:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)purchaseItem:(id)arg1 offer:(id)arg2 clientContext:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)performActionForItem:(id)arg1 offer:(id)arg2 clientContext:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)performActionForItem:(id)arg1 clientContext:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)performActionForItem:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly) long long parentalControlsRank;
- (id)metricsActionTypeForItem:(id)arg1;
@property(readonly, getter=isRunningInStoreDemoMode) _Bool runningInStoreDemoMode;
- (_Bool)isItemRestrictedWithParentalControlsRank:(long long)arg1;
@property(readonly, nonatomic, getter=isGratisEligible) _Bool gratisEligible;
@property(readonly, getter=isApplicationInstallRestricted) _Bool applicationInstallRestricted;
- (void)finishLoadingWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)cancelDownloadForItemWithIdentifier:(long long)arg1;
- (void)addObserver:(id)arg1;
- (void)addMediaLibrary:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIJSDOMFeatureNavigationDocument : NSObject <IKAppNavigationController, SKUIDOMFeature>
{
    IKJSNavigationDocument *_jsNavigationDocument;
    SKUINavigationDocumentController *_navigationDocumentController;
    NSMutableArray *_stackItems;
    IKAppContext *_appContext;
    NSString *_featureName;
}

+ (id)possibleFeatureNames;
@property(readonly, retain, nonatomic) NSString *featureName; // @synthesize featureName=_featureName;
@property __weak IKAppContext *appContext; // @synthesize appContext=_appContext;
@property(retain, nonatomic) SKUINavigationDocumentController *navigationDocumentController; // @synthesize navigationDocumentController=_navigationDocumentController;
- (void).cxx_destruct;
- (void)removeDocument:(id)arg1;
- (void)replaceDocument:(id)arg1 withDocument:(id)arg2 options:(id)arg3;
- (void)popToRootDocument;
- (void)popToDocument:(id)arg1;
- (void)popDocument;
- (void)pushDocument:(id)arg1 options:(id)arg2;
- (void)insertDocument:(id)arg1 beforeDocument:(id)arg2 options:(id)arg3;
- (id)documents;
- (void)clear;
- (id)featureJSObject;
- (id)initWithFeatureName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIJSFakeXMLHTTPRequest : IKJSObject <SKUIJSFakeXMLHTTPRequest>
{
    NSData *_data;
    NSDictionary *_performanceMetrics;
    NSHTTPURLResponse *_response;
}

- (void).cxx_destruct;
@property(readonly, retain) NSString *statusText;
@property(readonly) unsigned int status;
@property(readonly) unsigned int responseType;
@property(readonly) IKJSXMLDocument *responseXML;
@property(readonly) NSString *responseText;
@property(readonly) id response;
@property(readonly) unsigned int readyState;
@property(readonly) NSDictionary *metrics;
- (id)getResponseHeader:(id)arg1;
- (id)getAllResponseHeaders;
- (id)initWithAppContext:(id)arg1 data:(id)arg2 URLResponse:(id)arg3 performanceMetrics:(id)arg4;

@end

@interface SKUIJSITunesStore : IKJSITunesStore <SKUIItemStateCenterObserver, SKUIJSITunesStore>
{
    SKUIClientContext *_clientContext;
}

- (void).cxx_destruct;
- (void)_finishPurchaseForOptions:(id)arg1 purchaseResponse:(id)arg2;
- (void)itemStateCenterMediaLibrariesDidChange:(id)arg1;
- (void)setPreviewOverlay:(id)arg1:(id)arg2;
- (_Bool)resourceExists:(id)arg1;
- (void)log:(id)arg1;
- (void)loadGratisContent:(id)arg1;
- (void)launchICloudFamilySettings;
- (void)getBookSample:(id)arg1;
- (void)findLibraryItems:(id)arg1:(id)arg2:(id)arg3;
- (void)findApps:(id)arg1:(id)arg2:(id)arg3;
- (void)exit:(id)arg1;
- (void)download:(id)arg1;
- (void)approveInPerson:(id)arg1:(id)arg2;
- (void)buy:(id)arg1;
- (void)attemptLocalAskToBuyApproval:(id)arg1;
- (_Bool)sendOnXEventWithDictionary:(id)arg1;
- (void)sendOnPageResponseWithDocument:(id)arg1 data:(id)arg2 URLResponse:(id)arg3 performanceMetrics:(id)arg4;
- (void)dealloc;
- (id)initWithAppContext:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIJSModalDocumentController : IKJSObject <SKUIJSModalDocumentController>
{
    SKUIModalDocumentController *_modalDocumentController;
}

- (void).cxx_destruct;
- (id)_adjustedOptionsWithOptions:(id)arg1;
- (void)replaceDocument:(id)arg1:(id)arg2:(id)arg3;
- (void)pushDocument:(id)arg1:(id)arg2;
- (void)popToDocument:(id)arg1;
- (void)popDocument;
@property(readonly, retain, nonatomic) NSArray *documents;
- (id)initWithAppContext:(id)arg1 modalDocumentController:(id)arg2;

@end

@interface SKUIJSONDataConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUIJSTabBar : IKJSObject <SKUIJSTabBar>
{
    SKUIApplicationController *_applicationController;
    NSMutableArray *_tabBarItems;
    SKUIJSTabBarItem *_transientTabBarItem;
}

- (void).cxx_destruct;
- (void)_reloadTabBarItems;
@property(readonly, nonatomic) SKUIJSTabBarItem *transientTab;
@property(readonly, nonatomic) NSArray *tabs;
@property(retain, nonatomic) SKUIJSTabBarItem *selectedTab;
- (void)sendOnUpdate;
- (id)initWithAppContext:(id)arg1 controller:(id)arg2;

@end

@interface SKUIJSTabBarItem : IKJSObject <SKUIJSTabBarItem>
{
    JSManagedValue *_managedNavigationDocument;
    IKJSNavigationDocument *_navigationDocument;
    IKJSObject *_owner;
    SKUITabBarItem *_tabBarItem;
}

@property(readonly, nonatomic) SKUITabBarItem *tabBarItem; // @synthesize tabBarItem=_tabBarItem;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *rootURL;
@property(readonly, nonatomic) IKJSNavigationDocument *navigationDocument;
@property(readonly, nonatomic) NSString *identifier;
- (void)dealloc;
- (id)initWithAppContext:(id)arg1 navigationController:(id)arg2 tabBarItem:(id)arg3 owner:(id)arg4;

@end

@interface SKUIKeyValueInfoListCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    double _titleColumnWidth;
    SKUIAttributedStringView *_titleView;
    NSMapTable *_valueViews;
}

+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)titleColumnWidthWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_imageTapAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIKeyValueInfoListPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    SKUIViewElementLayoutContext *_cellLayoutContext;
    SKUIInfoListViewElement *_infoList;
    NSNumber *_titleColumnWidth;
    NSArray *_viewElements;
}

- (void).cxx_destruct;
- (void)_requestCellLayout;
- (void)_reloadViewElementProperties;
- (void)_enumerateVisibleViewElementsUsingBlock:(CDUnknownBlockType)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (struct UIEdgeInsets)sectionContentInset;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUILabelViewElement : SKUIViewElement
{
    long long _labelViewStyle;
    NSString *_moreButtonTitle;
    long long _numberOfLines;
    SKUIViewElementText *_text;
}

+ (_Bool)shouldParseChildDOMElements;
@property(readonly, nonatomic) SKUIViewElementText *text; // @synthesize text=_text;
@property(readonly, nonatomic) long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(readonly, nonatomic) NSString *moreButtonTitle; // @synthesize moreButtonTitle=_moreButtonTitle;
@property(readonly, nonatomic) long long labelViewStyle; // @synthesize labelViewStyle=_labelViewStyle;
- (void).cxx_destruct;
- (long long)pageComponentType;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUILayoutCache : NSObject
{
    NSMutableArray *_batchedRequests;
    id <SKUILayoutCacheDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    NSMutableArray *_layouts;
    NSMutableArray *_requests;
}

@property(nonatomic) __weak id <SKUILayoutCacheDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_populateCache;
- (void)_layoutRequestsInRange:(struct _NSRange)arg1;
- (void)_addLayoutBatch:(id)arg1;
- (struct _NSRange)populateCacheWithLayoutRequests:(id)arg1;
- (id)layoutForIndex:(long long)arg1 forced:(_Bool)arg2;
- (id)layoutForIndex:(long long)arg1;
- (void)commitLayoutRequests;
- (struct _NSRange)addLayoutRequests:(id)arg1;
- (id)init;

@end

@interface SKUILegacyNativeViewController : SKUIViewController <SKUICategoryControllerDelegate>
{
    NSURL *_activeURL;
    SKUICategoryController *_categoryController;
    NSURL *_defaultURL;
    NSData *_initialData;
    SSVLoadURLOperation *_initialOperation;
    SKUIStorePageViewController *_storePageViewController;
}

- (void).cxx_destruct;
- (id)_storePageViewController;
- (void)_reloadNavigationItem;
- (void)_finishLoadWithResult:(_Bool)arg1 error:(id)arg2;
- (id)_categoryController;
- (id)activeMetricsController;
- (void)categoryController:(id)arg1 didSelectCategory:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)reloadData;
- (void)dealloc;
- (id)initWithData:(id)arg1 fromOperation:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUILibraryItem : NSObject <NSCopying>
{
    NSString *_storeFlavorIdentifier;
    NSNumber *_storeItemIdentifier;
}

@property(copy, nonatomic) NSNumber *storeItemIdentifier; // @synthesize storeItemIdentifier=_storeItemIdentifier;
@property(copy, nonatomic) NSString *storeFlavorIdentifier; // @synthesize storeFlavorIdentifier=_storeFlavorIdentifier;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUILibraryItemState : NSObject <NSCopying>
{
    long long _availability;
    unsigned long long _avTypes;
    NSString *_bundleIdentifier;
    NSString *_bundleVersion;
    _Bool _highDefinition;
    _Bool _preview;
    _Bool _rental;
    NSNumber *_storeAccountIdentifier;
    NSString *_storeFlavorIdentifier;
    NSString *_storePlatformKind;
    NSNumber *_storeVersionIdentifier;
}

@property(copy, nonatomic) NSNumber *storeVersionIdentifier; // @synthesize storeVersionIdentifier=_storeVersionIdentifier;
@property(copy, nonatomic) NSString *storePlatformKind; // @synthesize storePlatformKind=_storePlatformKind;
@property(copy, nonatomic) NSString *storeFlavorIdentifier; // @synthesize storeFlavorIdentifier=_storeFlavorIdentifier;
@property(copy, nonatomic) NSNumber *storeAccountIdentifier; // @synthesize storeAccountIdentifier=_storeAccountIdentifier;
@property(nonatomic, getter=isRental) _Bool rental; // @synthesize rental=_rental;
@property(nonatomic, getter=isPreview) _Bool preview; // @synthesize preview=_preview;
@property(nonatomic, getter=isHighDefinition) _Bool highDefinition; // @synthesize highDefinition=_highDefinition;
@property(copy, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(nonatomic) unsigned long long AVTypes; // @synthesize AVTypes=_avTypes;
@property(nonatomic) long long availability; // @synthesize availability=_availability;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)newJavaScriptRepresentation;
@property(readonly, nonatomic) NSString *itemStateVariantIdentifier;
- (id)initWithApplication:(id)arg1;

@end

@interface SKUILink : NSObject <SSMetricsEventFieldProvider>
{
    SKUICountdown *_countdown;
    SKUIItem *_item;
    NSNumber *_itemIdentifier;
    NSString *_target;
    NSString *_title;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *targetString; // @synthesize targetString=_target;
@property(readonly, nonatomic) NSNumber *itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
- (void).cxx_destruct;
- (void)_setItem:(id)arg1;
- (id)valueForMetricsField:(id)arg1;
@property(readonly, nonatomic) NSDictionary *linkDictionary;
@property(readonly, nonatomic, getter=isActionable) _Bool actionable;
- (id)initWithURL:(id)arg1 title:(id)arg2 targetString:(id)arg3;
- (id)initWithURL:(id)arg1;
- (id)initWithComponentContext:(id)arg1;
- (id)initWithLinkDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUILinkButton : UIButton
{
    long long _arrowStyle;
}

+ (id)buttonWithArrowStyle:(long long)arg1;
@property(readonly, nonatomic) long long arrowStyle; // @synthesize arrowStyle=_arrowStyle;
- (void)_reloadIcons;
- (double)_linkImagePaddingLeft;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)sizeToFit;
- (void)tintColorDidChange;
- (void)setTitleColor:(id)arg1 forState:(unsigned long long)arg2;
- (id)initWithArrowStyle:(long long)arg1;

@end

@interface SKUIListViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;

@end

@interface SKUILoadResourceOperation : NSOperation
{
    SKUIClientContext *_clientContext;
    NSLock *_lock;
    CDUnknownBlockType _outputBlock;
    SKUIResourceRequest *_request;
}

- (void).cxx_destruct;
- (void)main;
@property(copy) CDUnknownBlockType outputBlock;
@property(retain) SKUIClientContext *clientContext;
@property(readonly, copy) SKUIResourceRequest *resourceRequest;
- (id)initWithResourceRequest:(id)arg1;
- (id)init;
- (id)_initSKUILoadResourceOperation;

@end

@interface SKUILoadArtworkResourceOperation : SKUILoadResourceOperation
{
}

- (void)main;
- (id)initWithResourceRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) SKUIArtworkRequest *resourceRequest; // @dynamic resourceRequest;

@end

@interface SKUILoadGratisEligibilityOperation : NSOperation
{
    NSArray *_bundleIDs;
    SKUIClientContext *_clientContext;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    CDUnknownBlockType _outputBlock;
}

- (void).cxx_destruct;
- (id)_bodyData;
- (void)main;
@property(copy) CDUnknownBlockType outputBlock;
- (id)initWithBundleIdentifiers:(id)arg1 clientContext:(id)arg2;
- (id)init;

@end

@interface SKUILoadItemResourceOperation : SKUILoadResourceOperation
{
}

- (void)main;
- (id)initWithResourceRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) SKUIItemResourceRequest *resourceRequest; // @dynamic resourceRequest;

@end

@interface SKUILoadItemsResponse : NSObject
{
    NSDictionary *_loadedItems;
    NSSet *_invalidItemIdentifiers;
}

@property(copy, nonatomic) NSSet *invalidItemIdentifiers; // @synthesize invalidItemIdentifiers=_invalidItemIdentifiers;
@property(copy, nonatomic) NSDictionary *loadedItems; // @synthesize loadedItems=_loadedItems;
- (void).cxx_destruct;

@end

@interface SKUILoadMoreCell : SKUITableViewCell
{
    UIActivityIndicatorView *_indicator;
}

- (void).cxx_destruct;
- (void)stopAnimating;
- (void)startAnimating;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUILoadMoreDataConsumer : SSVURLDataConsumer
{
    NSSet *_unavailableItemIdentifiers;
}

@property(copy, nonatomic) NSSet *unavailableItemIdentifiers; // @synthesize unavailableItemIdentifiers=_unavailableItemIdentifiers;
- (void).cxx_destruct;
- (id)_itemsWithDictionary:(id)arg1;
- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUILoadProductPageOperation : NSOperation
{
    SKUIClientContext *_clientContext;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    long long _itemID;
    SSMetricsPageEvent *_metricsPageEvent;
    CDUnknownBlockType _outputBlock;
    NSURLRequest *_urlRequest;
}

- (void).cxx_destruct;
- (void)main;
@property(copy) CDUnknownBlockType outputBlock;
@property(readonly) SSMetricsPageEvent *metricsPageEvent;
- (id)initWithProductPageURLRequest:(id)arg1 clientContext:(id)arg2;
- (id)initWithItemIdentifier:(long long)arg1 clientContext:(id)arg2;
- (id)_initSKUILoadProductPageOperation;

@end

@interface SKUILoadSortDataOperation : SKUILoadResourceOperation
{
}

- (void)main;
- (id)initWithResourceRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) SKUISortDataRequest *resourceRequest; // @dynamic resourceRequest;

@end

@interface SKUILoadTrendingSearchPageOperation : NSOperation
{
    SKUIClientContext *_clientContext;
    CDUnknownBlockType _outputBlock;
    NSURL *_url;
}

@property(copy) CDUnknownBlockType outputBlock; // @synthesize outputBlock=_outputBlock;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_url;
- (void).cxx_destruct;
- (void)main;

@end

@interface SKUILoadingDocumentViewController : SKUIViewController <SKUIDocumentViewController>
{
    SKUIActivityIndicatorView *_activityIndicatorView;
    NSObject<OS_dispatch_source> *_delayTimer;
    SKUILayoutCache *_layoutCache;
    SKUILoadingTemplateViewElement *_templateElement;
    SKUIViewElementLayoutContext *_viewLayoutContext;
}

- (void).cxx_destruct;
- (id)_viewLayoutContext;
- (void)_showActivityIndicator;
- (void)_reloadViewStyling;
- (id)_layoutCache;
- (void)documentDidUpdate:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithTemplateElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUILoadingTemplateViewElement : SKUIViewElement
{
}

@property(readonly, nonatomic) SKUIActivityIndicatorViewElement *activityIndicator;

@end

@interface SKUILoadingView : UIView
{
    SKUIColorScheme *_colorScheme;
    UILabel *_label;
    UIActivityIndicatorView *_spinner;
}

+ (id)defaultLoadingTextWithClientContext:(id)arg1;
@property(copy, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)willMoveToSuperview:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *loadingText;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUILocalizedStringDictionary : NSObject
{
    NSArray *_bundles;
    NSString *_localeName;
    NSMutableArray *_stringTables;
}

- (void).cxx_destruct;
- (id)_stringTableForBundle:(id)arg1 tableName:(id)arg2;
- (id)localizedStringForKey:(id)arg1 inTable:(id)arg2;
- (id)localizedStringForKey:(id)arg1;
- (id)initWithLocaleName:(id)arg1 bundles:(id)arg2;

@end

@interface SKUILocalizedStringTable : NSObject
{
    NSBundle *_bundle;
    NSDictionary *_strings;
    NSString *_tableName;
}

@property(readonly, nonatomic) NSString *tableName; // @synthesize tableName=_tableName;
@property(readonly, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
- (void).cxx_destruct;
- (id)_legacyLanguageNameForLanguageCode:(id)arg1;
- (id)localizedStringForKey:(id)arg1;
- (id)initWithBundle:(id)arg1 localeName:(id)arg2 tableName:(id)arg3;

@end

@interface SKUILockupComponent : SKUIPageComponent
{
    SKUIEditorialComponent *_editorial;
    SKUIItem *_item;
    long long _itemIdentifier;
    struct SKUILockupStyle _lockupStyle;
}

@property(readonly, nonatomic) struct SKUILockupStyle lockupStyle; // @synthesize lockupStyle=_lockupStyle;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) SKUIEditorialComponent *editorial; // @synthesize editorial=_editorial;
- (void).cxx_destruct;
- (void)_setLockupStyle:(struct SKUILockupStyle)arg1;
- (void)_setItem:(id)arg1;
@property(readonly, nonatomic) _Bool _needsItemData;
- (long long)componentType;
- (id)initWithViewElement:(id)arg1;
- (id)initWithItem:(id)arg1 style:(struct SKUILockupStyle)arg2;
- (id)initWithItemIdentifier:(long long)arg1 style:(struct SKUILockupStyle)arg2;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUILockupViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUILockupItemCellLayout : SKUIItemCellLayout
{
    struct UIEdgeInsets _contentInsets;
    struct CGSize _imageBoundingSize;
    long long _itemOfferStyle;
    UILabel *_itemOfferTextLabel;
    long long _layoutStyle;
    long long _lockupSize;
    SKUILockupMetadataView *_metadataView;
    _Bool _playsInlineVideo;
    long long _verticalAlignment;
    SKUIEmbeddedMediaView *_videoThumbnailView;
    struct CGSize _videoThumbnailSize;
}

+ (struct CGSize)videoThumbnailSizeForVideo:(id)arg1 clientContext:(id)arg2;
+ (double)heightForLockupStyle:(struct SKUILockupStyle)arg1 item:(id)arg2 editorial:(id)arg3 clientContext:(id)arg4;
+ (double)heightForLockupComponent:(id)arg1 clientContext:(id)arg2;
@property(nonatomic) struct CGSize videoThumbnailSize; // @synthesize videoThumbnailSize=_videoThumbnailSize;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) _Bool playsInlineVideo; // @synthesize playsInlineVideo=_playsInlineVideo;
@property(nonatomic) long long lockupSize; // @synthesize lockupSize=_lockupSize;
@property(nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property(nonatomic) long long itemOfferStyle; // @synthesize itemOfferStyle=_itemOfferStyle;
@property(nonatomic) struct CGSize imageBoundingSize; // @synthesize imageBoundingSize=_imageBoundingSize;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (void).cxx_destruct;
- (void)_layoutVertical;
- (struct CGRect)_layoutIconImageView;
- (void)_layoutHorizontal;
- (id)_itemOfferTextLabel;
- (_Bool)_isItemOfferHidden;
- (void)_beginVideoPlaybackAction:(id)arg1;
- (void)setIconImage:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)prepareForReuse;
- (void)layoutSubviews;
- (void)layoutForItemOfferChange;
@property(nonatomic) unsigned long long visibleFields;
@property(retain, nonatomic) UIImage *videoThumbnailImage;
@property(nonatomic) float userRating;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *releaseDateString;
@property(nonatomic) long long numberOfUserRatings;
@property(copy, nonatomic) NSString *itemCountString;
- (void)setColoringWithColorScheme:(id)arg1;
@property(copy, nonatomic) NSString *editorialBadgeString;
@property(copy, nonatomic) NSString *categoryString;
@property(copy, nonatomic) NSString *artistName;
- (void)playInlineVideoWithURL:(id)arg1;
- (void)endVideoPlaybackAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)initWithTableViewCell:(id)arg1;
- (id)initWithParentView:(id)arg1;
- (id)initWithCollectionViewCell:(id)arg1;
- (void)_initSKUILockupItemCellLayout;

@end

@interface SKUILockupItemCollectionViewCell : SKUIItemCollectionViewCell
{
    SKUILockupItemCellLayout *_layout;
}

@property(readonly, nonatomic) SKUILockupItemCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUILockupItemTableViewCell : SKUIItemTableViewCell
{
    SKUILockupItemCellLayout *_layout;
}

@property(readonly, nonatomic) SKUILockupItemCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2 rowIndex:(long long)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUILockupMetadataView : UIView
{
    UILabel *_artistNameLabel;
    UILabel *_categoryLabel;
    SKUIClientContext *_clientContext;
    SKUIBadgeLabel *_editorialBadgeLabel;
    UILabel *_itemCountLabel;
    UILabel *_itemOfferLabel;
    long long _numberOfUserRatings;
    UILabel *_releaseDateLabel;
    UIColor *_textColor;
    UIColor *_titleColor;
    UILabel *_titleLabel;
    float _userRating;
    UIImageView *_userRatingImageView;
    UILabel *_userRatingLabel;
    unsigned long long _visibleFields;
}

+ (double)maximumHeightWithVisibleFields:(unsigned long long)arg1;
@property(nonatomic) unsigned long long visibleFields; // @synthesize visibleFields=_visibleFields;
@property(nonatomic) float userRating; // @synthesize userRating=_userRating;
@property(readonly, nonatomic) UIColor *primaryTextColor; // @synthesize primaryTextColor=_textColor;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadUserRatingViews;
- (id)_newDefaultLabel;
- (id)_decimalNumberFormatter;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *releaseDateString;
@property(copy, nonatomic) NSString *itemOfferString;
@property(copy, nonatomic) NSString *itemCountString;
- (void)setColoringWithColorScheme:(id)arg1;
@property(copy, nonatomic) NSString *categoryString;
@property(copy, nonatomic) NSString *editorialBadgeString;
@property(copy, nonatomic) NSString *artistName;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUILockupSwooshArtworkLoader : SKUISwooshArtworkLoader
{
    SKUIItemArtworkContext *_context;
    SKUIVideoImageDataConsumer *_videoImageConsumer;
    UIImage *_videoPlaceholderImage;
}

- (void).cxx_destruct;
- (void)setImage:(id)arg1 forRequest:(id)arg2;
- (void)loadImagesForNextPageWithReason:(long long)arg1;
- (id)placeholderImageForVideo:(id)arg1;
- (id)placeholderImageForItem:(id)arg1;
- (_Bool)loadImageForVideo:(id)arg1 reason:(long long)arg2;
- (_Bool)loadImageForItem:(id)arg1 reason:(long long)arg2;
- (id)cachedImageForVideo:(id)arg1;
- (id)cachedImageForItem:(id)arg1;
- (id)initWithArtworkLoader:(id)arg1 swoosh:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) SKUILockupSwooshViewController *swooshViewController; // @dynamic swooshViewController;

@end

@interface SKUILockupSwooshCellLayout : SKUIItemCellLayout
{
    UILabel *_artistNameLabel;
    UILabel *_categoryLabel;
    UIImageView *_iconHighlightImageView;
    UILabel *_itemCountLabel;
    struct CGSize _maxImageSize;
    UILabel *_priceLabel;
    UIColor *_primaryTextColor;
    UIColor *_titleColor;
    UILabel *_titleLabel;
    UIImageView *_videoHighlightImageView;
    UIImageView *_videoImageView;
    UIImageView *_videoPlayButtonImageView;
    struct CGSize _videoSize;
    unsigned long long _visibleFields;
}

@property(nonatomic) unsigned long long visibleFields; // @synthesize visibleFields=_visibleFields;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) struct CGSize maxImageSize; // @synthesize maxImageSize=_maxImageSize;
- (void).cxx_destruct;
- (void)_removeHighlightViews;
- (void)_reloadHighlight;
- (void)_reloadPriceLabel;
- (id)_newDefaultLabel;
- (void)_layoutFieldsVertical;
- (void)_layoutFieldsHorizontal;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setItemState:(id)arg1 animated:(_Bool)arg2;
- (void)setItemOffer:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) UIImage *videoThumbnailImage;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *price;
@property(copy, nonatomic) NSString *itemCountString;
- (void)setColoringWithColorScheme:(id)arg1;
@property(copy, nonatomic) NSString *category;
@property(copy, nonatomic) NSString *artistName;
- (struct CGSize)cellSizeForImageOfSize:(struct CGSize)arg1;
- (id)initWithCollectionViewCell:(id)arg1;

@end

@interface SKUILockupSwooshCollectionViewCell : SKUIItemCollectionViewCell
{
    SKUILockupSwooshCellLayout *_layout;
}

@property(readonly, nonatomic) SKUILockupSwooshCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUILockupSwooshPageSection : SKUIStorePageSection <SKUIMissingItemDelegate, SKUIProductPageOverlayDelegate, SKUISwooshViewControllerDelegate>
{
    SKUILockupSwooshArtworkLoader *_artworkLoader;
    SKUIMissingItemLoader *_missingItemLoader;
    SKUIProductPageOverlayController *_overlayController;
    long long _overlaySourceIndex;
    SKUILockupSwooshViewController *_swooshViewController;
}

- (void).cxx_destruct;
- (id)_swooshViewController;
- (void)_showProductPageForItem:(id)arg1 index:(long long)arg2 animated:(_Bool)arg3;
- (id)_popSourceViewForOverlayController:(id)arg1;
- (id)_missingItemLoader;
- (void)_loadMissingItemsFromIndex:(long long)arg1 withReason:(long long)arg2;
- (id)_artworkLoader;
- (void)_addImpressionForItemIndex:(long long)arg1 toSession:(id)arg2;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (id)productPageOverlay:(id)arg1 flipSourceViewToPresentItem:(id)arg2;
- (id)productPageOverlay:(id)arg1 flipSourceViewToDismissItem:(id)arg2;
- (void)swooshDidSelectSeeAll:(id)arg1;
- (void)swoosh:(id)arg1 willDisplayCellAtIndex:(long long)arg2;
- (id)swoosh:(id)arg1 videoThumbnailForCellAtIndex:(long long)arg2;
- (id)swoosh:(id)arg1 imageForCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)willAppearInContext:(id)arg1;
- (void)setImage:(id)arg1 forRequest:(id)arg2;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUISwooshPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUILockupSwooshViewController : SKUISwooshViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    SKUIItemArtworkContext *_artworkContext;
    UICollectionView *_collectionView;
    struct SKUILockupStyle _defaultLockupStyle;
    _Bool _delegateWantsWillDisplay;
    _Bool _didInitialReload;
    struct CGSize _expectedImageSize;
    NSMutableIndexSet *_hiddenIconIndexSet;
    NSArray *_lockups;
    struct CGSize _maxCellSize;
    struct CGSize _maxImageSize;
    CDStruct_df87b2ae _metrics;
    _Bool _seeAllHidden;
    long long _seeAllStyle;
    NSString *_seeAllTitle;
    NSURL *_seeAllURL;
    SKUISwooshView *_swooshView;
    long long _swooshType;
    SKUIVideoImageDataConsumer *_videoImageConsumer;
}

+ (long long)_swooshTypeForLockups:(id)arg1;
@property(readonly, nonatomic) NSURL *seeAllURL; // @synthesize seeAllURL=_seeAllURL;
@property(nonatomic, getter=isSeeAllHidden) _Bool seeAllHidden; // @synthesize seeAllHidden=_seeAllHidden;
@property(nonatomic) long long swooshType; // @synthesize swooshType=_swooshType;
@property(copy, nonatomic) NSArray *lockups; // @synthesize lockups=_lockups;
@property(readonly, nonatomic) SKUIItemArtworkContext *artworkContext; // @synthesize artworkContext=_artworkContext;
- (void).cxx_destruct;
- (CDStruct_df87b2ae)_lockupSwooshMetrics;
- (void)_reloadSizes;
- (id)_newLockupComponentWithItem:(id)arg1 defaultStyle:(struct SKUILockupStyle)arg2;
- (id)_newArtworkContextForSwooshType:(long long)arg1;
- (struct CGSize)_maximumCellSizeForImageSize:(struct CGSize)arg1;
- (void)_setExpectedImageSize:(struct CGSize)arg1;
- (void)_seeAllAction:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)unhideImages;
- (void)setVideoThumbnail:(id)arg1 forItemAtIndex:(long long)arg2;
- (void)setImage:(id)arg1 forItemAtIndex:(long long)arg2;
- (void)setDelegate:(id)arg1;
- (void)setColorScheme:(id)arg1;
- (void)setClientContext:(id)arg1;
- (id)popImageViewForItemAtIndex:(long long)arg1;
- (id)indexPathsForVisibleItems;
- (struct CGRect)frameForItemAtIndex:(long long)arg1;
- (void)deselectAllItems;
@property(readonly, nonatomic) SKUIVideoImageDataConsumer *videoImageConsumer;
- (void)setItemsWithLockups:(id)arg1;
@property(readonly, nonatomic) struct CGRect seeAllButtonFrame;
@property(readonly, nonatomic) NSArray *items;
- (void)dealloc;
- (id)initWithSwoosh:(id)arg1;
- (id)initWithItemList:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUILockupViewElement : SKUIViewElement
{
    BOOL _enabled;
    long long _lockupViewType;
}

@property(readonly, nonatomic) long long lockupViewType; // @synthesize lockupViewType=_lockupViewType;
- (long long)pageComponentType;
- (_Bool)isEnabled;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIFullscreenImageViewElement *fullscreenImage;
@property(readonly, nonatomic) _Bool containsElementGroups;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIMediaArtworkURLProtocol : NSURLProtocol
{
}

+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

@interface SKUIMediaCollectionViewCell : SKUICollectionViewCell
{
    struct UIEdgeInsets _contentInset;
    SKUIEmbeddedMediaView *_mediaView;
}

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(readonly, nonatomic) SKUIEmbeddedMediaView *mediaView;

@end

@interface SKUIMediaComponent : SKUIPageComponent <SSMetricsEventFieldProvider>
{
    NSString *_accessibilityLabel;
    long long _alignment;
    double _duration;
    SKUILink *_link;
    long long _mediaAppearance;
    long long _mediaIdentifier;
    long long _mediaType;
    NSString *_mediaURLString;
    SKUIArtworkList *_thumbnailArtworkList;
    NSString *_title;
    float _titleFontSize;
    long long _titleFontWeight;
}

@property(readonly, nonatomic) long long titleFontWeight; // @synthesize titleFontWeight=_titleFontWeight;
@property(readonly, nonatomic) float titleFontSize; // @synthesize titleFontSize=_titleFontSize;
@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) SKUIArtworkList *thumbnailArtworkList; // @synthesize thumbnailArtworkList=_thumbnailArtworkList;
@property(readonly, nonatomic) NSString *mediaURLString; // @synthesize mediaURLString=_mediaURLString;
@property(readonly, nonatomic) long long mediaType; // @synthesize mediaType=_mediaType;
@property(readonly, nonatomic) long long mediaIdentifier; // @synthesize mediaIdentifier=_mediaIdentifier;
@property(readonly, nonatomic) long long mediaAppearance; // @synthesize mediaAppearance=_mediaAppearance;
@property(readonly, nonatomic) SKUILink *link; // @synthesize link=_link;
@property(readonly, nonatomic) double duration; // @synthesize duration=_duration;
@property(readonly, nonatomic) long long alignment; // @synthesize alignment=_alignment;
@property(readonly, nonatomic) NSString *accessibilityLabel; // @synthesize accessibilityLabel=_accessibilityLabel;
- (void).cxx_destruct;
- (id)valueForMetricsField:(id)arg1;
- (id)metricsElementName;
- (long long)componentType;
- (id)bestThumbnailForWidth:(double)arg1;
- (id)bestThumbnailArtwork;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;
- (id)initWithCustomPageContext:(id)arg1;
- (id)initWithArtworkList:(id)arg1 appearance:(long long)arg2;
- (id)initWithArtworkList:(id)arg1;
- (id)initWithArtwork:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIMediaLibraryInterface : NSObject <SKUILibraryInterface>
{
}

- (id)_storePlatformKindForMediaItem:(id)arg1;
- (void)_restrictQueryToLocalContent:(id)arg1;
- (id)_newDefaultQuery;
- (unsigned long long)_AVTypesForMediaItem:(id)arg1;
- (long long)_availabilityForMediaItem:(id)arg1;
- (id)stateForLibraryItem:(id)arg1;
- (_Bool)performActionForLibraryItem:(id)arg1;
- (id)exposedPlatformItemKinds;
- (void)enumerateStatesForLibraryItems:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIMediaPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIEmbeddedMediaViewDelegate>
{
    SKUIArtwork *_artwork;
    unsigned long long _artworkRequestID;
    struct CGSize _imageSize;
    SKUIEmbeddedMediaView *_mediaView;
}

- (void).cxx_destruct;
- (void)_loadImageWithReason:(long long)arg1;
- (void)mediaView:(id)arg1 playbackStateDidChange:(long long)arg2;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (void)setSectionIndex:(long long)arg1;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (long long)defaultItemPinningStyle;
- (double)contentInsetAdjustmentForCollectionView:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIMediaComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIMediaQueryPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    JSValue *_cellFactoryMethod;
    SKUIViewElementLayoutContext *_cellLayoutContext;
    JSContext *_cellScriptContext;
    MPMediaQuery *_query;
    long long _queryStyle;
    id _styleFactory;
    SKUIMediaQueryViewElement *_viewElement;
    IKViewElementFactory *_viewElementFactory;
    NSMutableDictionary *_viewElements;
}

- (void).cxx_destruct;
- (void)_enumerateVisibleViewElementsUsingBlock:(CDUnknownBlockType)arg1;
- (Class)_cellClassForViewElement:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (long long)numberOfCells;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)_viewElementWithIndexPath:(id)arg1;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIMediaQueryViewElement : SKUIViewElement
{
    NSString *_cellFactoryFunctionName;
    MPMediaQuery *_mediaQuery;
    long long _mediaQueryStyle;
    NSMutableDictionary *_propertyAggregrateFunctions;
}

@property(readonly, nonatomic) long long mediaQueryStyle; // @synthesize mediaQueryStyle=_mediaQueryStyle;
@property(readonly, nonatomic) MPMediaQuery *mediaQuery; // @synthesize mediaQuery=_mediaQuery;
@property(readonly, nonatomic) NSString *cellFactoryFunctionName; // @synthesize cellFactoryFunctionName=_cellFactoryFunctionName;
- (void).cxx_destruct;
- (long long)pageComponentType;
- (id)factoryRepresentationWithMediaEntity:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIMenuPageComponent : SKUIPageComponent
{
    NSMutableArray *_childrenComponents;
    long long _defaultSelectedIndex;
    long long _menuStyle;
    NSString *_menuTitle;
    float _menuTitleFontSize;
    long long _menuTitleFontWeight;
    NSMutableArray *_sortURLStrings;
    NSString *_titleForMoreItem;
    NSMutableArray *_titles;
}

@property(readonly, nonatomic) NSString *titleForMoreItem; // @synthesize titleForMoreItem=_titleForMoreItem;
@property(readonly, nonatomic) long long menuTitleFontWeight; // @synthesize menuTitleFontWeight=_menuTitleFontWeight;
@property(readonly, nonatomic) float menuTitleFontSize; // @synthesize menuTitleFontSize=_menuTitleFontSize;
@property(readonly, nonatomic) NSString *menuTitle; // @synthesize menuTitle=_menuTitle;
@property(readonly, nonatomic) long long menuStyle; // @synthesize menuStyle=_menuStyle;
@property(readonly, nonatomic) long long defaultSelectedIndex; // @synthesize defaultSelectedIndex=_defaultSelectedIndex;
- (void).cxx_destruct;
- (id)_componentWithContext:(id)arg1;
- (void)_setChildComponents:(id)arg1 forIndex:(long long)arg2;
- (long long)componentType;
- (id)titleForIndex:(long long)arg1;
- (id)sortURLForIndex:(long long)arg1;
@property(readonly, nonatomic) long long numberOfItems;
- (id)childComponentsForIndex:(long long)arg1;
@property(readonly, nonatomic) NSArray *allTitles;
- (id)initWithViewElement:(id)arg1;
- (id)initWithRoomSortData:(id)arg1;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUISegmentedControlViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIMenuPageSection : SKUIStorePageSection <SKUIMenuViewControllerDelegate, SKUIPopupMenuDelegate, SKUISortDataRequestDelegate, UIPopoverControllerDelegate>
{
    UIBarButtonItem *_cancelMenuItem;
    SKUIPillsControl *_pillsControl;
    SKUIMenuViewController *_moreListMenuViewController;
    UIPopoverController *_moreListPopoverController;
    SKUIPopupMenuHeaderView *_popupHeaderView;
    long long _selectedIndex;
    NSMutableIndexSet *_sortRequestIndexSet;
}

- (void).cxx_destruct;
- (void)_showPopoverController;
- (void)_showMoreList;
- (void)_showMenuViewController;
- (void)_setSelectedIndex:(long long)arg1;
- (void)_restorePreviousSelection;
- (id)_popupHeaderView;
- (id)_pillsControl;
- (id)_newMenuViewController;
- (void)_loadSortDataIfNecessaryForMenuIndex:(long long)arg1 reason:(long long)arg2;
- (void)_dismissMenuViewController;
- (id)_contentChildView;
- (void)_pillAction:(id)arg1;
- (void)_cancelMenuAction:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)sortDataRequest:(id)arg1 didFinishWithLockups:(id)arg2;
- (void)popupMenuHeader:(id)arg1 didSelectMenuItemAtIndex:(long long)arg2;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (void)willAppearInContext:(id)arg1;
- (struct UIEdgeInsets)sectionContentInset;
- (long long)numberOfCells;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIMenuPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIMenuPageSectionContext : NSObject
{
    NSMutableDictionary *_sections;
    long long _selectedIndex;
}

@property(nonatomic) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
- (void).cxx_destruct;
- (void)setSections:(id)arg1 forIndex:(long long)arg2;
- (id)sectionsForIndex:(long long)arg1;

@end

@interface SKUIMenuPopoverController : NSObject <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
{
    id <SKUIMenuPopoverDelegate> _delegate;
    SKUIMenuViewController *_menuViewController;
    UIPopoverController *_popoverController;
}

@property(nonatomic) __weak id <SKUIMenuPopoverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_destroyPopoverController;
- (void)popoverController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (void)presentFromRect:(struct CGRect)arg1 inView:(id)arg2 permittedArrowDirections:(unsigned long long)arg3 animated:(_Bool)arg4;
@property(readonly, nonatomic) NSArray *menuTitles;
- (void)dismissAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)initWithMenuTitles:(id)arg1 selectedIndex:(long long)arg2;
- (id)initWithMenuTitles:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIMenuViewController : UITableViewController
{
    UIColor *_borderColor;
    id <SKUIMenuViewControllerDelegate> _delegate;
    long long _indexOfCheckedTitle;
    NSArray *_menuTitles;
    NSArray *_menuImages;
    long long _menuStyle;
}

@property(nonatomic) long long menuStyle; // @synthesize menuStyle=_menuStyle;
@property(nonatomic) long long indexOfCheckedTitle; // @synthesize indexOfCheckedTitle=_indexOfCheckedTitle;
@property(readonly, nonatomic) NSArray *menuImages; // @synthesize menuImages=_menuImages;
@property(readonly, nonatomic) NSArray *menuTitles; // @synthesize menuTitles=_menuTitles;
@property(nonatomic) __weak id <SKUIMenuViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_reloadViewStyling;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)loadView;
- (id)initWithMenuTitles:(id)arg1;
- (id)initWithMenuTitles:(id)arg1 images:(id)arg2;

@end

@interface SKUIMenuViewElement : SKUIViewElement
{
    BOOL _enabled;
    SKUILabelViewElement *_menuLabel;
}

@property(readonly, nonatomic) SKUILabelViewElement *menuLabel; // @synthesize menuLabel=_menuLabel;
- (void).cxx_destruct;
- (void)_enumerateItemElementsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)isEnabled;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIItemViewElement *titleItem;
@property(readonly, nonatomic) long long selectedItemIndex;
@property(readonly, nonatomic) NSArray *menuItemTitles;
- (void)dispatchEventOfType:(unsigned long long)arg1 forItemAtIndex:(long long)arg2;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIMessageBanner : UIView
{
    id <SKUIMessageBannerDelegate> _delegate;
    UILabel *_label;
    UIButton *_button;
    UIView *_borderView;
    UIButton *_clearButton;
    NSAttributedString *_attributedMessage;
}

@property(retain, nonatomic) NSAttributedString *attributedMessage; // @synthesize attributedMessage=_attributedMessage;
@property(nonatomic) __weak id <SKUIMessageBannerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_clearButtonAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)value;
@property(retain, nonatomic) NSString *message;
@property(nonatomic) _Bool showsClearButton;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIMessageBannerCloseButton : UIButton
{
}

- (void)layoutSubviews;
- (void)setHighlighted:(_Bool)arg1;

@end

@interface SKUIMetricsController : NSObject
{
    SKUIMetricsImpressionSession *_activeImpressionsSession;
    NSString *_applicationIdentifier;
    SSMetricsController *_controller;
    _Bool _flushesImmediately;
    SSMetricsConfiguration *_globalConfiguration;
    NSString *_hostApplicationIdentifier;
    _Bool _impressionsEnabled;
    NSObject<OS_dispatch_source> *_impressionsTimer;
    _Bool _loggingEnabled;
    SSMetricsConfiguration *_pageConfiguration;
    NSString *_pageContext;
    NSString *_pageURL;
    NSString *_topic;
    NSString *_userAgent;
    NSString *_windowOrientation;
}

+ (void)flushImmediately;
@property(copy, nonatomic) NSString *windowOrientation; // @synthesize windowOrientation=_windowOrientation;
@property(copy, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(copy, nonatomic) NSString *topic; // @synthesize topic=_topic;
@property(copy, nonatomic) NSString *pageURL; // @synthesize pageURL=_pageURL;
@property(copy, nonatomic) NSString *pageContext; // @synthesize pageContext=_pageContext;
@property(retain, nonatomic) SSMetricsConfiguration *pageConfiguration; // @synthesize pageConfiguration=_pageConfiguration;
@property(copy, nonatomic) NSString *hostApplicationIdentifier; // @synthesize hostApplicationIdentifier=_hostApplicationIdentifier;
@property(readonly, nonatomic) SSMetricsConfiguration *globalConfiguration; // @synthesize globalConfiguration=_globalConfiguration;
@property(copy, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void).cxx_destruct;
- (void)_recordActiveImpressions;
- (void)_insertEvent:(id)arg1;
- (void)_waitUntilRecordingComplete;
- (id)tokenStringWithElements:(id)arg1;
- (void)recordEvent:(id)arg1;
- (void)recordBuyConfirmedEventsForItems:(id)arg1 purchaseResponses:(id)arg2;
- (void)pingURLs:(id)arg1 withClientContext:(id)arg2;
- (void)pingURLs:(id)arg1;
- (id)performActionForItem:(id)arg1 offer:(id)arg2 clientContext:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)performActionForItem:(id)arg1 offer:(id)arg2 clientContext:(id)arg3;
- (id)performActionForItem:(id)arg1 clientContext:(id)arg2;
- (id)performActionForItem:(id)arg1;
- (id)locationWithPosition:(long long)arg1 type:(id)arg2 fieldData:(id)arg3;
- (id)locationWithPageComponent:(id)arg1;
- (id)itemOfferClickEventWithItem:(id)arg1 locationPosition:(long long)arg2;
@property(readonly, nonatomic) double flushInterval;
- (void)flushImmediately;
- (id)compoundStringWithElements:(id)arg1;
- (void)closeImpressionsSession;
- (id)clickEventWithItem:(id)arg1 locationPosition:(long long)arg2;
- (_Bool)canRecordEventWithType:(id)arg1;
@property(readonly, nonatomic) SKUIMetricsImpressionSession *activeImpressionsSession;
@property(readonly, nonatomic) NSNumber *accountIdentifier;
- (void)dealloc;
- (id)initWithGlobalConfiguration:(id)arg1;

@end

@interface SKUIMetricsFlushTimer : NSObject
{
    NSHashTable *_metricsControllers;
    NSObject<OS_dispatch_source> *_timer;
    unsigned long long _timerStartTime;
}

+ (id)sharedTimer;
- (void).cxx_destruct;
- (void)_performFlush;
- (void)_cancelFlushTimer;
- (void)_applicationWillEnterForegroundNotification:(id)arg1;
- (void)_applicationDidEnterBackgroundNotification:(id)arg1;
- (void)removeMetricsController:(id)arg1;
- (void)reloadFlushInterval;
- (void)flushAllMetricsControllers;
- (void)addMetricsController:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface SKUIMetricsImpressionSession : NSObject
{
    NSMutableArray *_impressionIdentifiers;
    NSMutableString *_impressionsString;
    NSMutableOrderedSet *_impressionableViewElements;
    NSMapTable *_impressionableViewElementsTimerMap;
}

@property(readonly, copy, nonatomic) NSString *impressionsString; // @synthesize impressionsString=_impressionsString;
@property(readonly, copy, nonatomic) NSArray *impressionIdentifiers; // @synthesize impressionIdentifiers=_impressionIdentifiers;
- (void).cxx_destruct;
- (void)_clearTimerForViewElement:(id)arg1;
- (void)_setTimer:(id)arg1 forViewElement:(id)arg2;
- (id)_getTimerForViewElement:(id)arg1;
- (void)endActiveImpressionForViewElement:(id)arg1;
- (void)beginActiveImpressionForViewElement:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *impressionableViewElements;
- (void)addItemViewElement:(id)arg1;
- (void)addItemIdentifier:(long long)arg1;
- (id)init;

@end

@interface SKUIMissingItemLoader : NSObject <SKUIItemRequestDelegate>
{
    long long _batchSize;
    id <SKUIMissingItemDelegate> _delegate;
    NSString *_imageProfile;
    NSString *_keyProfile;
    SKUIResourceLoader *_loader;
    NSMutableDictionary *_requests;
}

@property(copy, nonatomic) NSString *keyProfile; // @synthesize keyProfile=_keyProfile;
@property(copy, nonatomic) NSString *imageProfile; // @synthesize imageProfile=_imageProfile;
@property(nonatomic) __weak id <SKUIMissingItemDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long batchSize; // @synthesize batchSize=_batchSize;
- (void).cxx_destruct;
- (void)_requestItems:(id)arg1 withReason:(long long)arg2;
- (id)_existingRequestIDForItemID:(id)arg1;
- (void)itemRequest:(id)arg1 didFinishWithItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)loadItemsWithIdentifiers:(id)arg1 reason:(long long)arg2;
- (void)loadItemsForPageComponent:(id)arg1 startIndex:(long long)arg2 reason:(long long)arg3;
- (id)initWithResourceLoader:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIModalDocumentController : NSObject <AAUIFamilySetupDelegate, SKComposeReviewDelegate, SKUIGiftViewControllerDelegate, UIPopoverControllerDelegate>
{
    SKUIClientContext *_clientContext;
    NSMutableArray *_composeReviewViewControllers;
    id <SKUIModalDocumentDelegate> _delegate;
    NSMutableArray *_giftViewControllers;
    id <SKUIModalSourceViewProvider> _modalSourceViewProvider;
    UINavigationController *_overlayNavigationController;
    SKUIOverlayContainerViewController *_overlayViewController;
    id <UINavigationControllerDelegate> _navigationControllerDelegate;
    UIPopoverController *_popoverController;
    UIViewController *_rootViewController;
    NSMutableArray *_stackItems;
}

@property(retain, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <UINavigationControllerDelegate> navigationControllerDelegate; // @synthesize navigationControllerDelegate=_navigationControllerDelegate;
@property(nonatomic) __weak id <SKUIModalSourceViewProvider> modalSourceViewProvider; // @synthesize modalSourceViewProvider=_modalSourceViewProvider;
@property(nonatomic) __weak id <SKUIModalDocumentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_unloadDocumentForViewController:(id)arg1;
- (void)_unloadDocumentForPopoverController:(id)arg1;
- (id)_showOverlayContainerViewController;
- (void)_sendDidFinishIfApplicable;
- (void)_pushWriteAReviewDocument:(id)arg1 viewController:(id)arg2;
- (void)_pushSheetStackItem:(id)arg1;
- (void)_pushSheetDocument:(id)arg1 viewController:(id)arg2;
- (void)_pushRedeemDocument:(id)arg1 options:(id)arg2;
- (void)_pushPopoverStackItem:(id)arg1;
- (void)_pushPlaylistDocument:(id)arg1 options:(id)arg2;
- (void)_pushOverlayStackItem:(id)arg1;
- (void)_pushGiftDocument:(id)arg1 options:(id)arg2;
- (void)_pushFamilySetupDocument:(id)arg1 options:(id)arg2;
- (void)_pushDialogDocument:(id)arg1 options:(id)arg2;
- (void)_pushCharityDocument:(id)arg1 options:(id)arg2;
- (void)_presentOverlayViewControllersFromNavigationController:(id)arg1;
- (id)_presenterViewController;
- (void)_popPopoverStackItem:(id)arg1 animated:(_Bool)arg2;
- (void)_popOverlayStackItem:(id)arg1 animated:(_Bool)arg2;
- (_Bool)_popoverController:(id)arg1 containsStackItem:(id)arg2;
- (void)_popDocument:(_Bool)arg1;
- (id)_overlayStackItems;
- (void)_garbageCollectActivityViewController:(id)arg1;
- (void)_dismissOverlayControllerWithStackItem:(id)arg1 animated:(_Bool)arg2;
- (void)_overlayControllerBackstopAction:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)giftViewController:(id)arg1 didFinishWithResult:(_Bool)arg2;
- (void)reviewComposeViewControllerDidFinish:(id)arg1;
- (void)familySetupViewController:(id)arg1 didCompleteWithSuccess:(_Bool)arg2;
- (void)setOverlayNavigationController:(id)arg1 withTransitionCoordinator:(id)arg2;
- (void)replaceDocument:(id)arg1 withDocument:(id)arg2 options:(id)arg3;
- (void)pushDocument:(id)arg1 options:(id)arg2;
- (void)popToDocument:(id)arg1;
- (void)popDocument;
- (void)popAllDocuments;
- (void)presentOverlayViewControllersFromNavigationController:(id)arg1;
- (id)navigationDocumentForNavigationController:(id)arg1;
- (id)navigationDocumentForDocument:(id)arg1;
@property(readonly, nonatomic) NSArray *documents;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIModalSourceViewProvider : NSObject
{
    id <SKUIModalSourceViewProviderDelegate> _delegate;
    _Bool _hideOriginalSourceView;
    UIView *_originalSourceView;
    UIBarButtonItem *_sourceButtonBarItem;
    id _userInfo;
}

@property(retain, nonatomic) id userInfo; // @synthesize userInfo=_userInfo;
@property(retain, nonatomic) UIBarButtonItem *sourceButtonBarItem; // @synthesize sourceButtonBarItem=_sourceButtonBarItem;
@property(retain, nonatomic) UIView *originalSourceView; // @synthesize originalSourceView=_originalSourceView;
@property(nonatomic) __weak id <SKUIModalSourceViewProviderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)showOriginalSourceView;
- (void)hideOriginalSourceView;
- (id)animationView;

@end

@interface SKUIMoreListController : UIMoreListController
{
}

- (unsigned long long)supportedInterfaceOrientations;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface SKUIMoreNavigationController : UIMoreNavigationController
{
    UINavigationController *_displayedViewController;
    UIViewController *_firstActualViewController;
    id <SKUIMoreNavigationControllerDelegate> _storeKitDelegate;
}

+ (Class)_moreListControllerClass;
@property(nonatomic) __weak id <SKUIMoreNavigationControllerDelegate> storeKitDelegate; // @synthesize storeKitDelegate=_storeKitDelegate;
- (void).cxx_destruct;
- (unsigned long long)supportedInterfaceOrientations;
- (void)pushViewController:(id)arg1 animated:(_Bool)arg2;
- (void)didShowViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setDisplayedViewController:(id)arg1;
- (id)displayedViewController;

@end

@interface SKUINavigationBarSectionController : NSObject <SKUIArtworkRequestDelegate>
{
    SKUINavigationBarContext *_navigationBarContext;
    SKUIViewElementLayoutContext *_viewLayoutContext;
}

@property(retain, nonatomic) SKUINavigationBarContext *context; // @synthesize context=_navigationBarContext;
- (void).cxx_destruct;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willAppearInNavigationBar;
@property(readonly, nonatomic) SKUIViewElementLayoutContext *viewLayoutContext;
- (id)viewForElementIdentifier:(id)arg1;
@property(readonly, nonatomic) UIView *view;
- (void)reloadSectionViews;
- (void)reloadAfterDocumentUpdateWithNavigationItem:(id)arg1;
- (id)barButtonItemForElementIdentifier:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINavigationBarButtonsController : SKUINavigationBarSectionController <SKUIItemOfferButtonDelegate>
{
    NSMapTable *_buttonItemElements;
    SKUINavigationBarViewElement *_navigationBarElement;
}

- (void).cxx_destruct;
- (void)_updateItemOfferButton:(id)arg1 withButtonViewElement:(id)arg2;
- (void)_updateButtonItem:(id)arg1 withButtonViewElement:(id)arg2;
- (void)_reloadButtonItem:(id)arg1 withButtonViewElement:(id)arg2;
- (struct UIEdgeInsets)_imageInsetsForImageViewElement:(id)arg1;
- (id)_imageForImageViewElement:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)_showConfirmationAction:(id)arg1;
- (void)_itemOfferAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)reloadAfterDocumentUpdateWithNavigationItem:(id)arg1;
- (void)disconnectAllButtons;
- (id)barButtonItemForElementIdentifier:(id)arg1;
- (id)addButtonItemWithButtonViewElement:(id)arg1;
- (id)initWithNavigationBarViewElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINavigationBarContext : NSObject
{
    SKUIClientContext *_clientContext;
    double _maximumNavigationBarWidth;
    NSOperationQueue *_operationQueue;
    UIViewController *_parentViewController;
    SKUIResourceLoader *_resourceLoader;
    SKUILayoutCache *_textLayoutCache;
}

@property(retain, nonatomic) SKUILayoutCache *textLayoutCache; // @synthesize textLayoutCache=_textLayoutCache;
@property(retain, nonatomic) SKUIResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) double maximumNavigationBarWidth; // @synthesize maximumNavigationBarWidth=_maximumNavigationBarWidth;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;

@end

@interface SKUINavigationBarController : NSObject <SKUILayoutCacheDelegate>
{
    SKUINavigationBarButtonsController *_buttonsController;
    SKUIClientContext *_clientContext;
    SKUINavigationBarContext *_navigationBarContext;
    SKUINavigationPaletteController *_paletteController;
    UIViewController *_parentViewController;
    NSMutableArray *_reusableSearchBarControllers;
    NSMapTable *_searchBarControllers;
    NSMutableArray *_sections;
    SKUINavigationBarViewElement *_viewElement;
}

@property(nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(retain, nonatomic) SKUINavigationBarViewElement *navigationBarViewElement; // @synthesize navigationBarViewElement=_viewElement;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)_titleViewWithViewElement:(id)arg1;
- (id)_navigationBarContext;
- (void)_fullyReloadSections:(id)arg1 withNavigationItem:(id)arg2;
- (id)_barButtonItemWithViewElement:(id)arg1;
- (id)_barButtonItemWithSearchBarViewElement:(id)arg1;
- (id)_barButtonItemWithButtonViewElement:(id)arg1;
- (double)_availableWidth;
- (id)_addSearchBarControllerWithViewElement:(id)arg1;
- (void)_viewElementEventNotification:(id)arg1;
- (void)layoutCacheDidFinishBatch:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (id)viewForElementIdentifier:(id)arg1;
- (void)updateNavigationItem:(id)arg1;
- (void)setReusableSearchBarControllers:(id)arg1;
@property(readonly, nonatomic) UIView *navigationPaletteView;
@property(readonly, nonatomic) NSArray *existingSearchBarControllers;
- (void)detachFromNavigationItem:(id)arg1;
- (id)barButtonItemForElementIdentifier:(id)arg1;
- (void)attachToNavigationItem:(id)arg1;
- (void)dealloc;
- (id)initWithNavigationBarViewElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINavigationBarMenusController : SKUINavigationBarSectionController <SKUIMenuPopoverDelegate>
{
    UIControl *_focusedMenuButton;
    SKUINavigationBarMenusView *_menusView;
    NSArray *_menuViewElements;
    SKUIMenuPopoverController *_popoverController;
}

- (void).cxx_destruct;
- (id)_menuViewElementForView:(id)arg1;
- (void)_destroyPopover;
- (void)_menuButtonAction:(id)arg1;
- (void)menuPopover:(id)arg1 willRepositionToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)menuPopover:(id)arg1 didSelectMenuItemAtIndex:(long long)arg2;
- (void)menuPopoverDidCancel:(id)arg1;
- (void)willAppearInNavigationBar;
- (id)view;
- (void)reloadSectionViews;
- (void)dealloc;
- (id)initWithMenuViewElements:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINavigationBarMenusView : SKUIViewReuseView
{
    SEL _buttonAction;
    id _buttonTarget;
    struct UIEdgeInsets _contentInset;
    NSArray *_menuViewElements;
}

+ (id)_attributedStringWithMenuItem:(id)arg1 context:(id)arg2;
+ (void)requestLayoutWithMenus:(id)arg1 width:(long long)arg2 context:(id)arg3;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)setButtonTarget:(id)arg1 action:(SEL)arg2;
- (void)reloadWithMenus:(id)arg1 width:(long long)arg2 context:(id)arg3;

@end

@interface SKUINavigationBarSegmentsController : SKUINavigationBarSectionController
{
    SKUISegmentedControlViewElementController *_underlyingController;
}

- (void).cxx_destruct;
- (void)willAppearInNavigationBar;
- (id)view;
- (void)reloadAfterDocumentUpdateWithNavigationItem:(id)arg1;
- (id)initWithViewElement:(id)arg1;

@end

@interface SKUINavigationBarViewElement : SKUIViewElement
{
    _Bool _hidesShadow;
}

@property(readonly, nonatomic) _Bool hidesShadow; // @synthesize hidesShadow=_hidesShadow;
@property(readonly, nonatomic) NSArray *navigationPalettes;
@property(readonly, nonatomic) NSArray *mainViewElements;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUINavigationControllerAssistant : NSObject
{
    SKUIClientContext *_clientContext;
    UIView *_childPaletteView;
    UINavigationController *_navigationController;
    _UINavigationControllerPalette *_paletteBackgroundView;
    SKUIPreviewDocumentController *_previewDocumentController;
    SKUIPreviewOverlayViewController *_previewOverlayViewController;
}

+ (id)existingAssistantForNavigationController:(id)arg1;
+ (id)assistantForNavigationController:(id)arg1 clientContext:(id)arg2;
@property(readonly, nonatomic) __weak UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_transitionToPaletteView:(id)arg1 animated:(_Bool)arg2 operation:(long long)arg3;
- (void)_showOverlayView:(id)arg1 previousOverlayView:(id)arg2 animated:(_Bool)arg3;
- (void)_setPreviewDocumentController:(id)arg1 animated:(_Bool)arg2;
- (void)_hideOverlayView:(id)arg1 animated:(_Bool)arg2;
- (void)_hideChildPaletteView:(id)arg1 animated:(_Bool)arg2;
- (void)_previewDocumentChangeNotification:(id)arg1;
- (void)willShowViewController:(id)arg1 animated:(_Bool)arg2;
- (void)setPreviewDocumentController:(id)arg1;
- (void)setPaletteView:(id)arg1 animated:(_Bool)arg2;
- (void)setPalettePinningBarHidden:(_Bool)arg1;
@property(nonatomic) _Bool hidesShadow;
- (void)dealloc;
- (id)_initWithNavigationController:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUINavigationDocumentController : NSObject <IKAppNavigationController>
{
    SKUIClientContext *_clientContext;
    id <SKUINavigationDocumentDelegate> _delegate;
    UINavigationController *_navigationController;
    UINavigationController *_overrideNavigationController;
    NSMutableArray *_stackItems;
}

@property(retain, nonatomic) UINavigationController *overrideNavigationController; // @synthesize overrideNavigationController=_overrideNavigationController;
@property(readonly, nonatomic) UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, copy, nonatomic) NSArray *documentStackItems; // @synthesize documentStackItems=_stackItems;
@property(nonatomic) __weak id <SKUINavigationDocumentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_unloadAllStackItems;
- (void)_handleStackDidChange;
- (id)_activeNavigationController;
- (void)replaceDocument:(id)arg1 withDocument:(id)arg2 options:(id)arg3;
- (void)removeDocument:(id)arg1;
- (void)pushDocument:(id)arg1 options:(id)arg2;
- (void)popToDocument:(id)arg1;
- (void)popToRootDocument;
- (void)popDocument;
- (void)insertDocument:(id)arg1 beforeDocument:(id)arg2 options:(id)arg3;
- (id)documents;
- (void)clear;
- (void)setStackItems:(id)arg1 animated:(_Bool)arg2;
- (void)popAllDocuments;
- (void)garbageCollectDocuments;
- (id)initWithNavigationController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINavigationPaletteController : SKUINavigationBarSectionController
{
    SKUINavigationBarContext *_navigationBarContext;
    SKUINavigationPaletteView *_paletteView;
    SKUIPaletteViewElement *_viewElement;
    SKUIViewElementLayoutContext *_viewLayoutContext;
}

- (void).cxx_destruct;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willAppearInNavigationBar;
- (id)viewForElementIdentifier:(id)arg1;
- (id)view;
- (void)reloadSectionViews;
- (id)initWithPaletteViewElement:(id)arg1;

@end

@interface SKUINavigationPaletteView : SKUIViewReuseView <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    NSMutableArray *_segmentedControls;
    NSMutableArray *_stretchViews;
    long long _verticalAlignment;
    NSMapTable *_viewElementViews;
    NSMapTable *_viewSpacings;
}

+ (struct CGSize)_sizeForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_attributedStringForText:(id)arg1 style:(id)arg2 context:(id)arg3;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
- (void).cxx_destruct;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINearMeController : NSObject <CLLocationManagerDelegate, SKUIItemStateCenterObserver>
{
    NSArray *_items;
    long long _status;
    _Bool _isMonitoring;
    SSLookupRequest *_lookupRequest;
    CLLocationManager *_locationManager;
    int _authorizationStatus;
    NSObject<OS_dispatch_source> *_locationTimeoutTimer;
    long long _locationTimeoutCount;
    NSObject<OS_dispatch_source> *_refreshTimer;
    NSDictionary *_responseDictionary;
    SKUIClientContext *_clientContext;
}

+ (id)sharedController;
@property(readonly, nonatomic) NSDictionary *responseDictionary; // @synthesize responseDictionary=_responseDictionary;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) long long status; // @synthesize status=_status;
- (void).cxx_destruct;
- (void)_disableNearMe;
- (void)_setItems:(id)arg1 responseDictionary:(id)arg2 error:(id)arg3 status:(long long)arg4;
- (void)_refreshTimeout;
- (void)_stopRefreshTimer;
- (void)_startRefreshTimer;
- (void)_finishLookupWithItems:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)_lookupItemsForLocation:(id)arg1;
- (void)_monitorLocationTimeout;
- (void)_stopMonitoringLocation;
- (void)_startMonitoringLocation;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
@property(readonly, nonatomic) NSArray *items;
- (void)disable;
- (void)getItems;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUINearMeViewElement : SKUIViewElement
{
}

- (void)_itemsDidChange:(id)arg1;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUINetworkErrorViewController : UIViewController <SKUIProductPageChildViewController>
{
    SKUIClientContext *_clientContext;
    id <SKUINetworkErrorDelegate> _delegate;
    NSError *_error;
}

+ (_Bool)canDisplayError:(id)arg1;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_networkTypeChanged:(id)arg1;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (void)loadView;
- (void)dealloc;
- (id)initWithError:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIOfferCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
    SKUIOfferView *_offerView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIOfferView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIViewElementView>
{
    unsigned long long _alignment;
    NSMapTable *_buttonElements;
    struct UIEdgeInsets _contentInset;
    id <SKUIOfferViewDelegate> _delegate;
    _Bool _isShowingConfirmation;
    long long _metadataPosition;
    NSMutableArray *_metadataViews;
    NSMapTable *_notices;
    NSMutableArray *_offerButtonViews;
}

+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(readonly, nonatomic, getter=isShowingConfirmation) _Bool showingConfirmation; // @synthesize showingConfirmation=_isShowingConfirmation;
@property(nonatomic) long long metadataPosition; // @synthesize metadataPosition=_metadataPosition;
@property(nonatomic) __weak id <SKUIOfferViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)_shouldHideNotices:(id)arg1 context:(id)arg2;
- (void)_sendWillAnimate;
- (void)_positionNoticeForItemOfferButton:(id)arg1;
- (void)_showConfirmationAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)itemOfferButtonDidAnimateTransition:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIOfferViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic, getter=isSimpleOffer) _Bool simpleOffer;

@end

@interface SKUIOrdinalViewElement : SKUIViewElement
{
    SKUIViewElementText *_text;
}

@property(readonly, nonatomic) SKUIViewElementText *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIOverlayContainerView : UIControl
{
}

- (void)setFrame:(struct CGRect)arg1;

@end

@interface SKUIOverlayContainerViewController : UIViewController <UIGestureRecognizerDelegate>
{
    UIControl *_backstopView;
    _Bool _isAdjustingViewsForDismiss;
    long long _popViewControllerCount;
    long long _selectedViewControllerIndex;
    UITapGestureRecognizer *_tapGestureRecognizer;
    NSMutableArray *_viewControllers;
}

- (void).cxx_destruct;
- (id)_viewControllerForPoint:(struct CGPoint)arg1;
- (void)_slideInViewController:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)_selectedViewController;
- (void)_removeChildren;
- (void)_pushViewController:(id)arg1;
- (void)_positionViewControllersForOrientation:(long long)arg1;
- (void)_popViewControllers;
- (double)_overlaySpacingForOrientation:(long long)arg1;
- (long long)_indexOfViewControllerForPoint:(struct CGPoint)arg1;
- (struct CGRect)_frameToCenterViewController:(id)arg1;
- (void)_fadeInViewController:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)_frameAction:(id)arg1;
- (void)_tapAction:(id)arg1;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)loadView;
@property(readonly, copy, nonatomic) NSArray *viewControllers;
- (void)showViewController:(id)arg1 withFlipTransition:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)showViewControllers:(id)arg1;
- (void)showViewController:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)replaceViewController:(id)arg1 withViewController:(id)arg2;
- (void)popViewControllerAnimated:(_Bool)arg1;
- (void)dismissWithFadeTransitionCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dismissWithFlipTransition:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) UIControl *backstopControl;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIOverlayFlipTransition : NSObject
{
    UIView *_flipSourceView;
}

@property(retain, nonatomic) UIView *flipSourceView; // @synthesize flipSourceView=_flipSourceView;
- (void).cxx_destruct;

@end

@interface SKUIPageComponentContext : NSObject <NSCopying>
{
    NSDictionary *_componentDictionary;
    NSArray *_ineligibleGratisIdentifiers;
    NSDictionary *_items;
    long long _layoutStyle;
    double _pageGenerationTime;
    NSDictionary *_platformKeyProfileOverrides;
    NSMutableSet *_unavailableItems;
}

@property(copy, nonatomic) NSDictionary *platformKeyProfileOverrides; // @synthesize platformKeyProfileOverrides=_platformKeyProfileOverrides;
@property(readonly, nonatomic) double pageGenerationTime; // @synthesize pageGenerationTime=_pageGenerationTime;
@property(nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property(copy, nonatomic) NSDictionary *items; // @synthesize items=_items;
@property(copy, nonatomic) NSArray *ineligibleGratisIdentifiers; // @synthesize ineligibleGratisIdentifiers=_ineligibleGratisIdentifiers;
@property(copy, nonatomic) NSDictionary *componentDictionary; // @synthesize componentDictionary=_componentDictionary;
@property(readonly, copy, nonatomic) NSSet *allUnavailableItemIdentifiers; // @synthesize allUnavailableItemIdentifiers=_unavailableItems;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setUnavailableItemIdentifiers:(id)arg1;
- (id)itemForItemIdentifier:(id)arg1;
- (_Bool)isUnavailableItemIdentifier:(id)arg1;
- (void)addUnavailableItemIdentifiers:(id)arg1;
- (id)init;

@end

@interface SKUIPageDividerCollectionViewCell : UICollectionViewCell
{
    UIView *_dividerLine;
    double _leftEdgeInset;
    double _rightEdgeInset;
    long long _verticalAlignment;
}

@property(nonatomic) long long verticalAlignment; // @synthesize verticalAlignment=_verticalAlignment;
@property(nonatomic) double rightEdgeInset; // @synthesize rightEdgeInset=_rightEdgeInset;
@property(nonatomic) double leftEdgeInset; // @synthesize leftEdgeInset=_leftEdgeInset;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)applyLayoutAttributes:(id)arg1;
- (void)setColoringWithStyle:(id)arg1;
- (void)setColoringWithColorScheme:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIPageTitledDividerCollectionViewCell : UICollectionViewCell
{
    UILabel *_dividerLabel;
    UIView *_leftLine;
    UIView *_rightLine;
    double _topEdgeInset;
}

@property(nonatomic) double topEdgeInset; // @synthesize topEdgeInset=_topEdgeInset;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)applyLayoutAttributes:(id)arg1;
@property(copy, nonatomic) NSString *dividerTitle;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)reloadWithViewElement:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIPaletteViewElement : SKUIViewElement
{
}

- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;

@end

@interface SKUIPassbookLoader : NSObject <PKAddPassesViewControllerDelegate>
{
    SKUIClientContext *_clientContext;
    id <SKUIPassbookLoaderDelegate> _delegate;
    long long _loadCount;
    NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <SKUIPassbookLoaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_sendDidFinishIfFinished;
- (void)_loadPassWithURL:(id)arg1;
- (void)_didLoadWithPass:(id)arg1 error:(id)arg2;
- (void)addPassesViewControllerDidFinish:(id)arg1;
- (void)loadPassWithURL:(id)arg1;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIPassbookPassDataConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUIPersonalizeOfferOperation : NSOperation
{
    SKUIClientContext *_clientContext;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    long long _itemID;
    CDUnknownBlockType _outputBlock;
}

- (void).cxx_destruct;
- (void)main;
@property(copy) CDUnknownBlockType outputBlock;
- (id)initWithItemIdentifier:(long long)arg1 clientContext:(id)arg2;

@end

@interface SKUIPickerView : UIView <UIPickerViewDataSource, UIPickerViewDelegate>
{
    _UIBackdropView *_backdropView;
    id <SKUIPickerViewDelegate> _delegate;
    UIPickerView *_pickerView;
    UIView *_separatorView;
    NSArray *_titles;
}

@property(nonatomic) __weak id <SKUIPickerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
@property(nonatomic) long long selectedItemIndex;
- (void)dealloc;
- (id)initWithTitles:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIPillsControl : UIControl
{
    SKUIColorScheme *_colorScheme;
    struct UIEdgeInsets _contentInset;
    long long _maximumNumberOfVisiblePills;
    NSString *_moreListTitle;
    SKUISegmentedControl *_segmentedControl;
    NSArray *_titles;
}

@property(copy, nonatomic) NSArray *titles; // @synthesize titles=_titles;
@property(copy, nonatomic) NSString *moreListTitle; // @synthesize moreListTitle=_moreListTitle;
@property(nonatomic) long long maximumNumberOfVisiblePills; // @synthesize maximumNumberOfVisiblePills=_maximumNumberOfVisiblePills;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(copy, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)_segmentedControlAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(nonatomic) long long selectedIndex;
@property(readonly, nonatomic) struct CGRect selectedPillFrame;
- (void)reloadPills;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIPlaceholderImageKey : NSObject
{
    long long _height;
    long long _imageTreatment;
    long long _width;
}

- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)initWithSize:(struct CGSize)arg1 imageTreatment:(long long)arg2;

@end

@interface SKUIPlaceholderIndexBarEntry : SKUIIndexBarEntry
{
    struct CGSize _placeholderSize;
}

@property(readonly, nonatomic) struct CGSize placeholderSize; // @synthesize placeholderSize=_placeholderSize;
- (struct CGSize)_calculatedContentSize;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithPlaceholderSize:(struct CGSize)arg1;

@end

@interface SKUIPlaceholderViewElement : SKUIViewElement
{
}

@end

@interface SKUIPopoverObserver : NSObject <UIPopoverControllerDelegate>
{
    UIPopoverController *_popoverController;
    SEL _selector;
    id _target;
}

- (void).cxx_destruct;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)setTarget:(id)arg1 selector:(SEL)arg2;
- (void)dismissPopoverAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)initWithPopoverController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIPopupMenuHeaderView : UIView <SKUIMenuViewControllerDelegate, UIPopoverControllerDelegate>
{
    id <SKUIPopupMenuDelegate> _delegate;
    UIButton *_menuButton;
    UILabel *_menuLabel;
    NSString *_menuLabelTitle;
    NSArray *_menuItemTitles;
    SKUIMenuViewController *_menuViewController;
    UIPopoverController *_menuPopoverController;
    long long _selectedMenuItemIndex;
    UILabel *_titleLabel;
}

@property(nonatomic) long long selectedMenuItemIndex; // @synthesize selectedMenuItemIndex=_selectedMenuItemIndex;
@property(copy, nonatomic) NSString *menuLabelTitle; // @synthesize menuLabelTitle=_menuLabelTitle;
@property(copy, nonatomic) NSArray *menuItemTitles; // @synthesize menuItemTitles=_menuItemTitles;
@property(nonatomic) __weak id <SKUIPopupMenuDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_titleLabel;
- (void)_reloadMenuButton;
- (void)_menuButtonAction:(id)arg1;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIPostReviewOperation : ISOperation
{
    NSDictionary *_responseDictionary;
    SKUIReviewMetadata *_review;
}

- (void).cxx_destruct;
- (id)_httpBody;
- (void)run;
@property(readonly) NSDictionary *responseDictionary;
- (id)initWithReviewMetadata:(id)arg1;

@end

@interface SKUIPreviewControlViewElement : SKUIViewElement
{
    BOOL _enabled;
    long long _itemIdentifier;
    NSString *_mediaURLString;
}

@property(readonly, nonatomic) NSString *mediaURLString; // @synthesize mediaURLString=_mediaURLString;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
- (void).cxx_destruct;
- (_Bool)isEnabled;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIPreviewDocumentController : NSObject <IKAppDocumentDelegate>
{
    SUAudioPlayer *_audioPlayer;
    SKUIClientContext *_clientContext;
    IKAppDocument *_document;
    NSOperationQueue *_operationQueue;
    NSHashTable *_viewControllers;
}

@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadViewControllersWithPreviewStatus:(id)arg1 animated:(_Bool)arg2;
- (id)_operationQueue;
- (void)_connectToAudioPlayer;
- (void)_playerSessionsDidChangeNotification:(id)arg1;
- (void)_audioPlayerStatusChangeNotification:(id)arg1;
- (void)documentNeedsUpdate:(id)arg1;
- (void)documentDidUpdate:(id)arg1;
- (id)newPreviewOverlayViewControllerWithBackgroundStyle:(long long)arg1;
@property(readonly, nonatomic, getter=isPreviewActive) _Bool previewActive;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIPreviewOverlayViewController : SKUIViewController <SKUIArtworkRequestDelegate, SKUILayoutCacheDelegate, UIGestureRecognizerDelegate>
{
    long long _backgroundStyle;
    IKAppDocument *_document;
    SKUILayoutCache *_layoutCache;
    SKUIViewElementLayoutContext *_layoutContext;
    SKUIHorizontalLockupView *_lockupView;
    SUPlayerStatus *_previewStatus;
    UITapGestureRecognizer *_tapGestureRecognizer;
}

@property(nonatomic) long long backgroundStyle; // @synthesize backgroundStyle=_backgroundStyle;
- (void).cxx_destruct;
- (double)_overlayWidth;
- (id)_layoutCache;
- (void)_tapAction:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)layoutCacheDidFinishBatch:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)loadView;
- (void)showPreviewProgressWithStatus:(id)arg1 animated:(_Bool)arg2;
- (void)reloadOverlayView;
- (void)prepareOverlayView;
- (void)documentDidUpdate:(id)arg1;
- (void)dealloc;
- (id)initWithDocument:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIPreviewProgressIndicator : UIControl
{
    SKUIShapeView *_backgroundView;
    UIImageView *_cancelImageView;
    SKUIShapeView *_foregroundView;
    _Bool _isIndeterminate;
    float _progress;
}

@property(nonatomic) float progress; // @synthesize progress=_progress;
@property(readonly, nonatomic, getter=isIndeterminate) _Bool indeterminate; // @synthesize indeterminate=_isIndeterminate;
- (void).cxx_destruct;
- (id)_newShapeViewWithBounds:(struct CGRect)arg1 lineWidth:(double)arg2;
- (void)_beginIndeterminateAnimation;
- (void)tintColorDidChange;
- (void)setBackgroundColor:(id)arg1;
- (void)setProgress:(float)arg1 animated:(_Bool)arg2;
- (void)reloadWithPlayerStatus:(id)arg1 animated:(_Bool)arg2;
- (void)endIndeterminateAnimation;
- (void)beginIndeterminateAnimation;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIPreviewTemplateViewElement : SKUIViewElement
{
    long long _itemIdentifier;
    NSString *_previewURLString;
}

@property(readonly, nonatomic) NSString *previewURLString; // @synthesize previewURLString=_previewURLString;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) SKUILockupViewElement *previewLockup;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIProductImageDataConsumer : SKUIImageDataConsumer <NSCopying>
{
    UIColor *_backgroundColor;
    struct CGSize _iconSize;
    SKUIColorScheme *_colorScheme;
}

+ (id)wishlistConsumer;
+ (id)smartBannerConsumer;
+ (id)giftResultConsumer;
+ (id)giftThemePosterConsumer;
+ (id)giftThemeLetterboxConsumer;
+ (id)giftThemeConsumer;
+ (id)giftComposePosterConsumer;
+ (id)giftComposeLetterboxConsumer;
+ (id)giftComposeConsumer;
+ (id)swooshConsumer;
+ (id)productPageConsumer;
+ (id)purchasedConsumer;
+ (id)updatesConsumer;
+ (id)chartsConsumer;
+ (id)cardConsumer;
+ (id)lockupConsumerWithSize:(long long)arg1 itemKind:(long long)arg2;
+ (id)gridConsumer;
+ (id)consumerWithSize:(struct CGSize)arg1;
@property(readonly, nonatomic) struct CGSize iconSize; // @synthesize iconSize=_iconSize;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)imageForImage:(id)arg1;
- (id)imageForColor:(id)arg1 size:(struct CGSize)arg2;
- (id)imageForColor:(id)arg1;
@property(readonly, nonatomic) struct CGSize imageSize;

@end

@interface SKUIProductInformationView : UIView
{
    SKUIColorScheme *_colorScheme;
    struct UIEdgeInsets _contentInset;
    NSArray *_informationLines;
    NSMutableArray *_imageValues;
    NSMutableArray *_keyLabels;
    UIView *_separatorView;
    UILabel *_titleLabel;
    NSMutableArray *_valueLabels;
}

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(retain, nonatomic) NSArray *informationLines; // @synthesize informationLines=_informationLines;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (double)_keyWidth;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) NSString *title;
@property(nonatomic) _Bool hidesSeparatorView;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIProductLockupCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIItemOfferButtonDelegate, SKUIOfferViewDelegate, SKUIPerspectiveView, SKUIViewElementView>
{
    NSMapTable *_elementViews;
    SKUIProductLockupLayout *_layout;
    SKUILockupViewElement *_lockup;
    SKUIGradientView *_offerConfirmationGradientView;
    long long _offerMetadataPosition;
    NSMutableArray *_segmentedControlControllers;
}

+ (void)_requestLayoutForViewElements:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
- (void).cxx_destruct;
- (id)_viewElementForView:(id)arg1;
- (void)_updateLayoutToAnimateOfferTransitionForView:(id)arg1;
- (struct CGRect)_stackElements:(id)arg1 alignment:(long long)arg2 inRect:(struct CGRect)arg3;
- (struct CGRect)_stackBottomRightElements:(id)arg1 inRect:(struct CGRect)arg2;
- (void)_prepareOfferConfirmationGradientForView:(id)arg1;
- (void)_layoutConfirmationGradientRelativeToSection:(long long)arg1 alpha:(double)arg2;
- (struct CGRect)_frameForSection:(long long)arg1;
- (void)_showConfirmationAction:(id)arg1;
- (void)_imageTapAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)offerViewWillAnimateTransition:(id)arg1;
- (void)offerViewDidAnimateTransition:(id)arg1;
- (_Bool)offerViewAnimateTransition:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)itemOfferButtonDidAnimateTransition:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductLockupLayout : NSObject
{
    long long _bottomLeftLayoutStyle;
    NSMutableArray *_bottomLeftViewElements;
    NSMutableArray *_bottomRightViewElements;
    NSMutableArray *_middleLeftViewElements;
    SKUIViewElement *_productImageElement;
    NSMutableArray *_topLeftViewElements;
    NSMutableArray *_topRightViewElements;
}

@property(readonly, nonatomic) long long bottomLeftLayoutStyle; // @synthesize bottomLeftLayoutStyle=_bottomLeftLayoutStyle;
- (void).cxx_destruct;
- (struct CGSize)_sizeForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (struct CGSize)_sizeForVerticalViewElements:(id)arg1 width:(double)arg2 context:(id)arg3;
- (struct CGSize)_sizeForSegmentedControl:(id)arg1 width:(double)arg2;
- (id)viewElementsForSection:(long long)arg1;
- (double)topPaddingForViewElement:(id)arg1;
- (struct SKUIProductLockupLayoutSizing)sizingToFitWidth:(double)arg1 context:(id)arg2;
- (double)metadataWidthForWidth:(double)arg1 context:(id)arg2;
- (struct SKUIProductLockupLayoutSizing)layoutWidthsForWidth:(double)arg1 context:(id)arg2;
- (void)enumerateViewElementsForWidth:(double)arg1 context:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (double)bottomPaddingForViewElement:(id)arg1;
- (id)initWithLockup:(id)arg1 width:(double)arg2 context:(id)arg3;

@end

@interface SKUIProductPage : NSObject <NSCopying>
{
    long long _defaultPageFragment;
    SKUIProductPageItem *_item;
    NSData *_itmlData;
    NSHTTPURLResponse *_itmlResponse;
    SSMetricsConfiguration *_metricsConfiguration;
    NSString *_metricsPageDescription;
    NSURL *_pageURL;
    SKUIProductPageProductInfo *_productInformation;
    NSArray *_relatedContentSwooshes;
    SKUIReviewConfiguration *_reviewConfiguration;
    SKUIUber *_uber;
}

@property(retain, nonatomic) SKUIUber *uber; // @synthesize uber=_uber;
@property(retain, nonatomic) SKUIReviewConfiguration *reviewConfiguration; // @synthesize reviewConfiguration=_reviewConfiguration;
@property(copy, nonatomic) NSArray *relatedContentSwooshes; // @synthesize relatedContentSwooshes=_relatedContentSwooshes;
@property(retain, nonatomic) SKUIProductPageProductInfo *productInformation; // @synthesize productInformation=_productInformation;
@property(copy, nonatomic) NSURL *pageURL; // @synthesize pageURL=_pageURL;
@property(copy, nonatomic) NSString *metricsPageDescription; // @synthesize metricsPageDescription=_metricsPageDescription;
@property(retain, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
@property(retain, nonatomic) NSHTTPURLResponse *ITMLResponse; // @synthesize ITMLResponse=_itmlResponse;
@property(retain, nonatomic) NSData *ITMLData; // @synthesize ITMLData=_itmlData;
@property(retain, nonatomic) SKUIProductPageItem *item; // @synthesize item=_item;
@property(nonatomic) long long defaultPageFragment; // @synthesize defaultPageFragment=_defaultPageFragment;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUIProductPageAction : NSObject
{
    long long _actionType;
    SKUIItem *_item;
    NSString *_urlTitle;
    CDUnknownBlockType _viewControllerBlock;
    NSURL *_url;
}

+ (id)actionWithType:(long long)arg1;
@property(copy, nonatomic) CDUnknownBlockType viewControllerBlock; // @synthesize viewControllerBlock=_viewControllerBlock;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(retain, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(nonatomic) long long actionType; // @synthesize actionType=_actionType;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIViewController *viewController;

@end

@interface SKUIProductPageActivityViewController : UIActivityViewController
{
    SKUIClientContext *_clientContext;
}

- (void).cxx_destruct;
- (id)_applicationActivitiesForProductPageItem:(id)arg1 clientContext:(id)arg2;
- (id)_activityItemsForProductPageItem:(id)arg1 clientContext:(id)arg2;
- (id)_titleForActivity:(id)arg1;
- (id)initWithProductPageItem:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIProductPageCopyrightView : UIView
{
    UILabel *_copyrightLabel;
    SKUIColorScheme *_colorScheme;
}

@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) NSString *copyrightString;

@end

@interface SKUIProductPageDataConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;
- (id)productPageWithDictionary:(id)arg1;

@end

@interface SKUIProductPageDetailsViewController : UIViewController <SKUIScreenshotsDelegate, SKUIItemStateCenterObserver, SKUITableViewSectionDelegate, SKUIProductPageChildViewController>
{
    _Bool _askPermission;
    SKUIClientContext *_clientContext;
    SKUIProductPageTableHeaderOnlySection *_copyrightSection;
    id <SKUIProductPageChildViewControllerDelegate> _delegate;
    SKUIProductPageTableTextBoxSection *_descriptionSection;
    NSOperationQueue *_operationQueue;
    SKUIProductPage *_productPage;
    SKUIResourceLoader *_resourceLoader;
    SKUIProductPageTableHeaderOnlySection *_screenshotsSection;
    NSMutableArray *_sections;
    SKUIProductPageTableTextBoxSection *_storeNotesSection;
    SKUIProductPageTableViewController *_tableViewController;
    SKUILayoutCache *_textLayoutCache;
    SKUIProductPageTableTextBoxSection *_whatsNewSection;
}

+ (double)defaultPageWidthForUserInterfaceIdiom:(long long)arg1;
@property(readonly, nonatomic) SKUIProductPage *productPage; // @synthesize productPage=_productPage;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) _Bool askPermission; // @synthesize askPermission=_askPermission;
- (void).cxx_destruct;
- (id)_whatsNewSection;
- (id)_textLayoutRequestWithText:(id)arg1 widthOffset:(double)arg2;
- (id)_tableViewController;
- (id)_storeNotesSection;
- (id)_screenshotsSection;
- (id)_resourceLoader;
- (id)_parentBundlesSection;
- (id)_infoSection;
- (id)_featuresSection;
- (id)_descriptionSection;
- (id)_copyrightSection;
- (void)_configureSwooshSection:(id)arg1;
- (id)_bundledAppsSection;
- (void)_addTapRecognizerForView:(id)arg1 action:(SEL)arg2;
- (void)_expandSection:(id)arg1;
- (id)tableViewForTableViewSection:(id)arg1;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)screenshotsWillBeginDragging:(id)arg1;
@property(readonly, nonatomic) UIScrollView *scrollView;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController;
- (void)loadView;
- (void)dealloc;
- (id)initWithProductPage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageFeatureView : UIView
{
    UIImageView *_iconView;
    UILabel *_subtitleLabel;
    UILabel *_titleLabel;
    SKUIColorScheme *_colorScheme;
}

@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *subtitle;
@property(copy, nonatomic) UIImage *icon;

@end

@interface SKUIProductPageFeaturesView : UIView
{
    UIView *_bottomBorderView;
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    long long _features;
    NSMutableArray *_featureViews;
    unsigned long long _gameCenterFeatures;
    UILabel *_titleLabel;
    UIView *_topBorderView;
}

@property(nonatomic) unsigned long long gameCenterFeatures; // @synthesize gameCenterFeatures=_gameCenterFeatures;
@property(nonatomic) long long features; // @synthesize features=_features;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (id)_gameCenterStringWithFeatures:(unsigned long long)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
- (void)setFeatures:(long long)arg1 gameCenterFeatures:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIProductPageHeaderFloatingView : UIView
{
    UISegmentedControl *_sectionControl;
    SKUIColorScheme *_colorScheme;
    UIView *_separatorView;
    UIView *_backdropAlphaView;
    _UIBackdropView *_backdropView;
    _Bool _isPad;
}

@property(readonly, nonatomic) UIControl *sectionControl; // @synthesize sectionControl=_sectionControl;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)_reloadBackdropView;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(nonatomic) long long selectedSectionIndex;
@property(nonatomic) double backdropAlpha;
- (id)initWithSectionTitles:(id)arg1 isPad:(_Bool)arg2;

@end

@interface SKUIProductPageHeaderLabel : UIView
{
    NSString *_text;
    UIColor *_textColor;
    NSString *_contentRating;
    UIImage *_contentRatingImage;
    NSArray *_secondaryContentRatingImages;
    UIColor *_ratingColor;
    _Bool _isPad;
}

@property(retain, nonatomic) UIColor *ratingColor; // @synthesize ratingColor=_ratingColor;
@property(retain, nonatomic) NSArray *secondaryContentRatingImages; // @synthesize secondaryContentRatingImages=_secondaryContentRatingImages;
@property(nonatomic) _Bool isPad; // @synthesize isPad=_isPad;
@property(retain, nonatomic) NSString *contentRating; // @synthesize contentRating=_contentRating;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)_textAttributes;
- (struct __CTFramesetter *)_newTextFramesetter;
- (id)_imageForContentRating:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (double)secondaryImageWidth;

@end

@interface SKUIProductPageHeaderView : UIView <SKUIItemOfferButtonDelegate, SKUIContentRatingArtworkLoaderObserver>
{
    UILabel *_ageBandLabel;
    UIButton *_artistButton;
    SKUIBadgeLabel *_editorialBadgeLabel;
    SKUIClientContext *_clientContext;
    SKUIItemContentRating *_contentRating;
    SKUIContentRatingArtworkResourceLoader *_contentRatingArtworkLoader;
    SKUIColorScheme *_colorScheme;
    double _headerImageHeight;
    UIImageView *_headerImageView;
    UIImageView *_iconImageView;
    UILabel *_inAppPurchasesLabel;
    SKUIItemOffer *_itemOffer;
    SKUIItemOfferButton *_itemOfferButton;
    UILabel *_itemOfferExplanationLabel;
    UILabel *_itemOfferExplanationTitleLabel;
    SKUIItemState *_itemState;
    _Bool _needsLayoutAfterButtonAnimation;
    long long _numberOfUserRatings;
    _Bool _restricted;
    SKUIItemContentRating *_secondaryContentRating;
    UIButton *_shareButton;
    SKUIProductPageHeaderLabel *_titleLabel;
    double _userRating;
    UILabel *_userRatingLabel;
    UIImageView *_userRatingStarsView;
}

@property(readonly, nonatomic) UIControl *shareButton; // @synthesize shareButton=_shareButton;
@property(nonatomic) double userRating; // @synthesize userRating=_userRating;
@property(retain, nonatomic) SKUIItemContentRating *secondaryContentRating; // @synthesize secondaryContentRating=_secondaryContentRating;
@property(nonatomic, getter=isRestricted) _Bool restricted; // @synthesize restricted=_restricted;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(copy, nonatomic) SKUIItemState *itemState; // @synthesize itemState=_itemState;
@property(readonly, nonatomic) SKUIItemOfferButton *itemOfferButton; // @synthesize itemOfferButton=_itemOfferButton;
@property(retain, nonatomic) SKUIItemOffer *itemOffer; // @synthesize itemOffer=_itemOffer;
@property(nonatomic) double headerImageHeight; // @synthesize headerImageHeight=_headerImageHeight;
@property(retain, nonatomic) SKUIContentRatingArtworkResourceLoader *contentRatingArtworkLoader; // @synthesize contentRatingArtworkLoader=_contentRatingArtworkLoader;
@property(retain, nonatomic) SKUIItemContentRating *contentRating; // @synthesize contentRating=_contentRating;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(readonly, nonatomic) UIControl *artistButton; // @synthesize artistButton=_artistButton;
- (void).cxx_destruct;
- (void)_getBottomLayoutProperties:(struct **)arg1 origins:(double **)arg2 height:(double *)arg3 forWidth:(double)arg4;
- (void)_getTopLayoutProperties:(struct **)arg1 origins:(double **)arg2 height:(double *)arg3 forWidth:(double)arg4;
- (void)_reloadItemOfferButton:(_Bool)arg1;
- (void)_finishButtonAnimation;
- (void)_showConfirmationAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)contentRatingArtworkLoader:(id)arg1 didLoadImage:(id)arg2 forContentRating:(id)arg3;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)itemOfferButtonDidAnimateTransition:(id)arg1;
- (void)sizeToFit;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
- (void)setItemState:(id)arg1 animated:(_Bool)arg2;
@property(copy, nonatomic) NSString *itemOfferExplanationTitle;
@property(copy, nonatomic) NSString *itemOfferExplanationText;
@property(copy, nonatomic) NSString *inAppPurchasesString;
@property(retain, nonatomic) UIImage *iconImage;
@property(retain, nonatomic) UIImage *headerImage;
@property(copy, nonatomic) NSString *editorialBadge;
@property(copy, nonatomic) NSString *artistName;
@property(copy, nonatomic) NSString *ageBandString;
- (id)contentRatingName;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageHeaderViewController : UIViewController <SKUIItemStateCenterObserver, UIPopoverControllerDelegate>
{
    UIPopoverController *_activityPopoverController;
    _Bool _askPermission;
    SKUIContentRatingArtworkResourceLoader *_contentRatingArtworkLoader;
    SKUIItemArtworkContext *_artworkContext;
    SKUIClientContext *_clientContext;
    id <SKUIProductPageHeaderViewDelegate> _delegate;
    SKUIProductPageHeaderView *_headerView;
    UIImage *_iconImage;
    SKUIItem *_item;
    long long _itemIdentifier;
    SSVLoadURLOperation *_loadIconOperation;
    SSVLoadURLOperation *_loadUberOperation;
    NSOperationQueue *_operationQueue;
    long long _personalizationState;
    SKUIItemOffer *_personalizedOffer;
    UIImage *_placeholderImage;
    SKUIProductPage *_productPage;
    UIImage *_uberImage;
    _Bool _wantsActivityViewController;
    SKUIProductPageHeaderFloatingView *_floatingView;
    _Bool _performArtistActionOnLoad;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly, nonatomic) SKUIItem *item; // @synthesize item=_item;
@property(nonatomic) __weak id <SKUIProductPageHeaderViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) _Bool askPermission; // @synthesize askPermission=_askPermission;
- (void).cxx_destruct;
- (void)_showSynthesizedItemStateWithFlag:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)_showAskPermissionBanner;
- (void)_showActivityViewControllerFromView:(id)arg1;
- (void)_setUberWithImage:(id)arg1 error:(id)arg2;
- (void)_setItemState:(id)arg1 animated:(_Bool)arg2;
- (void)_setPersonalizedOffer:(id)arg1;
- (void)_setArtworkWithImage:(id)arg1 error:(id)arg2;
- (void)_sendDidReloadOffer;
- (id)_segmentedControlTitles;
- (void)_reloadItemStateAnimated:(_Bool)arg1;
- (void)_loadUberImageIfAvailable;
- (_Bool)_isRestricted;
- (void)_disableItemOfferButtonWithTitle:(id)arg1 animated:(_Bool)arg2;
- (id)_contentRatingResourceLoader;
- (void)_destroyPopoverController;
- (id)_artworkContext;
- (id)_ageBandString;
- (id)_activeItem;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)_shareButtonAction:(id)arg1;
- (void)_sectionControlAction:(id)arg1;
- (void)_itemOfferButtonAction:(id)arg1;
- (void)_artistButtonAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
@property(nonatomic) long long selectedSectionIndex;
- (void)setProductPage:(id)arg1;
- (void)reloadData;
@property(readonly, nonatomic) UIImage *iconImage;
@property(readonly, nonatomic) SKUIProductPageHeaderFloatingView *floatingView;
- (void)dealloc;
- (id)initWithItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageInAppPurchaseTableCell : SKUITableViewCell
{
    SKUIColorScheme *_colorScheme;
    struct UIEdgeInsets _contentInsets;
    UILabel *_indexLabel;
    UILabel *_nameLabel;
    UILabel *_priceLabel;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *productName;
@property(copy, nonatomic) NSString *priceString;
@property(copy, nonatomic) NSString *indexString;

@end

@interface SKUIProductPageInformationViewController : UIViewController <SKUIContentRatingArtworkLoaderObserver>
{
    SKUIClientContext *_clientContext;
    SKUIContentRatingArtworkResourceLoader *_contentRatingArtworkLoader;
    SKUIProductInformationView *_informationView;
    SKUIProductPageItem *_item;
    SKUIProductPageProductInfo *_productInfo;
    NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly, nonatomic) SKUIProductPageItem *item; // @synthesize item=_item;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_updateLinesWithRatingImage:(id)arg1;
- (id)_informationLinesWithProductInfo:(id)arg1;
- (id)_informationLinesWithItem:(id)arg1 ratingImage:(id)arg2;
- (id)_contentRatingResourceLoader;
- (void)contentRatingArtworkLoader:(id)arg1 didLoadImage:(id)arg2 forContentRating:(id)arg3;
- (void)loadView;
- (void)dealloc;
- (id)initWithProductInformation:(id)arg1 clientContext:(id)arg2;
- (id)initWithItem:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageItem : SKUIItem
{
    NSURL *_artistPageURL;
    NSArray *_childItemIdentifiers;
    SKUIItemContentRating *_contentRating;
    NSString *_copyrightString;
    SKUIDeveloperInfo *_developerInfo;
    NSArray *_inAppPurchases;
    NSString *_installationRequirementsDescription;
    NSString *_itemDescription;
    NSString *_lastUpdateDateString;
    NSString *_licenseAgreementURLString;
    NSMutableDictionary *_loadedChildItems;
    NSArray *_parentBundleItemIdentifiers;
    NSString *_privacyPolicyURLString;
    NSString *_regularPriceString;
    NSArray *_releaseNotes;
    NSString *_reviewsURLString;
    NSArray *_screenshots;
    NSArray *_secondaryContentRatings;
    NSString *_sellerName;
    NSString *_shortenedProductPageURLString;
    SKUIStoreNotes *_storeNotes;
    long long _supportedFeatures;
    unsigned long long _supportedGameCenterFeatures;
    NSString *_supportURLString;
    NSString *_updateDescription;
}

@property(readonly, nonatomic) NSString *installationRequirementsDescription; // @synthesize installationRequirementsDescription=_installationRequirementsDescription;
@property(readonly, nonatomic) NSString *updateDescription; // @synthesize updateDescription=_updateDescription;
@property(readonly, nonatomic) NSString *supportURLString; // @synthesize supportURLString=_supportURLString;
@property(readonly, nonatomic) unsigned long long supportedGameCenterFeatures; // @synthesize supportedGameCenterFeatures=_supportedGameCenterFeatures;
@property(readonly, nonatomic) long long supportedFeatures; // @synthesize supportedFeatures=_supportedFeatures;
@property(readonly, nonatomic) SKUIStoreNotes *storeNotes; // @synthesize storeNotes=_storeNotes;
@property(readonly, nonatomic) NSString *shortenedProductPageURLString; // @synthesize shortenedProductPageURLString=_shortenedProductPageURLString;
@property(readonly, nonatomic) NSString *sellerName; // @synthesize sellerName=_sellerName;
@property(readonly, nonatomic) NSArray *secondaryContentRatings; // @synthesize secondaryContentRatings=_secondaryContentRatings;
@property(readonly, nonatomic) NSArray *screenshots; // @synthesize screenshots=_screenshots;
@property(readonly, nonatomic) NSString *reviewsURLString; // @synthesize reviewsURLString=_reviewsURLString;
@property(readonly, nonatomic) NSArray *releaseNotes; // @synthesize releaseNotes=_releaseNotes;
@property(readonly, nonatomic) NSString *regularPriceString; // @synthesize regularPriceString=_regularPriceString;
@property(readonly, nonatomic) NSString *privacyPolicyURLString; // @synthesize privacyPolicyURLString=_privacyPolicyURLString;
@property(readonly, nonatomic) NSArray *parentBundleItemIdentifiers; // @synthesize parentBundleItemIdentifiers=_parentBundleItemIdentifiers;
@property(readonly, nonatomic) NSString *licenseAgreementURLString; // @synthesize licenseAgreementURLString=_licenseAgreementURLString;
@property(readonly, nonatomic) NSString *lastUpdateDateString; // @synthesize lastUpdateDateString=_lastUpdateDateString;
@property(readonly, nonatomic) NSString *itemDescription; // @synthesize itemDescription=_itemDescription;
@property(readonly, nonatomic) NSArray *inAppPurchases; // @synthesize inAppPurchases=_inAppPurchases;
@property(readonly, nonatomic) SKUIDeveloperInfo *developerInfo; // @synthesize developerInfo=_developerInfo;
@property(readonly, nonatomic) NSString *copyrightString; // @synthesize copyrightString=_copyrightString;
@property(readonly, nonatomic) SKUIItemContentRating *contentRating; // @synthesize contentRating=_contentRating;
- (id)childItemIdentifiers;
@property(readonly, nonatomic) NSURL *artistPageURL; // @synthesize artistPageURL=_artistPageURL;
- (void).cxx_destruct;
- (void)_setInAppPurchases:(id)arg1;
- (void)_setVersionHistory:(id)arg1;
- (long long)numberOfChildItems;
- (id)loadedChildItems;
- (id)childItemForIdentifier:(id)arg1;
- (id)initWithLookupDictionary:(id)arg1;

@end

@interface SKUIProductPageOverlayController : NSObject <SKUIIPadProductPageDelegate, SKStoreProductViewControllerDelegate>
{
    SKUIClientContext *_clientContext;
    id <SKUIProductPageOverlayDelegate> _delegate;
    SKUIItem *_initialItem;
    SKUIOverlayContainerViewController *_overlayViewController;
    UIViewController *_parentViewController;
}

@property(readonly, nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(nonatomic) __weak id <SKUIProductPageOverlayDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_showWithInitialViewController:(id)arg1;
- (void)_showOverlayViewController;
- (void)_removeOverlayViewController;
- (void)_finishDismissAndNotifyDelegate:(_Bool)arg1 withViewController:(id)arg2;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)_backstopViewAction:(id)arg1;
- (void)iPadProductPageCannotOpen:(id)arg1;
- (void)iPadProductPage:(id)arg1 openURL:(id)arg2 viewControllerBlock:(CDUnknownBlockType)arg3;
- (void)iPadProductPage:(id)arg1 openItem:(id)arg2;
@property(readonly, nonatomic) UIView *view;
@property(readonly, nonatomic) NSArray *URLs;
- (void)showWithInitialURLs:(id)arg1;
- (void)showWithInitialURLRequest:(id)arg1;
- (void)showWithInitialURL:(id)arg1;
- (void)showWithInitialProductPage:(id)arg1 metricsPageEvent:(id)arg2;
- (void)showWithInitialItemIdentifier:(long long)arg1;
- (void)showWithInitialItem:(id)arg1;
@property(readonly, nonatomic) long long numberOfVisibleOverlays;
- (void)dismiss;
- (void)dealloc;
- (id)initWithParentViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPagePlaceholderScrollView : UIScrollView
{
    UIView *_placeholderView;
    double _offset;
    _Bool _isPad;
}

@property(retain, nonatomic) UIView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic) _Bool isPad; // @synthesize isPad=_isPad;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface SKUIProductPagePlaceholderView : UIView
{
    UIImageView *_imageView;
    UILabel *_label;
    UIColor *_textColor;
}

@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)initWithPlaceholderString:(id)arg1 isPad:(_Bool)arg2;

@end

@interface SKUIProductPagePlaceholderViewController : UIViewController <UIScrollViewDelegate, SKUIProductPageChildViewController>
{
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    SKUIProductPageHeaderViewController *_headerViewController;
    SKUIProductPagePlaceholderScrollView *_scrollView;
    id <SKUIProductPageChildViewControllerDelegate> _delegate;
    long long _style;
    UIActivityIndicatorView *_indicator;
}

@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_addHeaderView;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (void)scrollViewDidScroll:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithStyle:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageProductInfo : NSObject
{
    NSMutableArray *_labels;
    NSMutableArray *_values;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long numberOfEntries;
- (void)enumerateEntriesWithBlock:(CDUnknownBlockType)arg1;
- (id)initWithInfoSectionDictionaries:(id)arg1;

@end

@interface SKUIProductPageReviewsViewController : UIViewController <SKUILayoutCacheDelegate, SKComposeReviewDelegate, SKUIReviewsFacebookViewControllerDelegate, UITableViewDataSource, UITableViewDelegate, SKUIProductPageChildViewController>
{
    SKUIClientContext *_clientContext;
    SKComposeReviewViewController *_composeViewController;
    id <SKUIProductPageChildViewControllerDelegate> _delegate;
    NSMutableIndexSet *_expandedIndexSet;
    SKUIReviewsFacebookViewController *_facebookViewController;
    SKUIProductPageHeaderViewController *_headerViewController;
    SKUIReviewsHistogramViewController *_histogramViewController;
    _Bool _isPad;
    SKUILayoutCache *_layoutCache;
    long long _loadedPageCount;
    SSVLoadURLOperation *_loadOperation;
    NSOperationQueue *_operationQueue;
    SKUIProductPage *_productPage;
    SKUIReviewList *_reviewList;
    SKUIIPadCustomerReviewsHeaderView *_reviewsHeaderView;
    long long _sortOrder;
    _Bool _showAllVersions;
    SKUIStarRatingQueue *_starRatingQueue;
    SKUIProductPageTableView *_tableView;
    _Bool _askPermission;
}

@property(readonly, nonatomic) SKUIProductPage *productPage; // @synthesize productPage=_productPage;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) _Bool askPermission; // @synthesize askPermission=_askPermission;
- (void).cxx_destruct;
- (id)_urlStringWithPageNumber:(long long)arg1;
- (id)_textLayoutRequestWithText:(id)arg1;
- (id)_textBoxCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)_tableView;
- (_Bool)_shouldShowLoadMoreCell;
- (void)_setReviewListWithResponse:(id)arg1 error:(id)arg2;
- (id)_reviewsHeaderView;
- (void)_resetPersonalStarRating;
- (void)_reloadData;
- (void)_loadNextPageIfNecessaryForOffset:(struct CGPoint)arg1;
- (id)_loadMoreCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)_histogramViewController;
- (double)_defaultPageWidth;
- (id)_bottomBorderColorForScheme:(id)arg1;
- (void)_addReviewsFromResponse:(id)arg1 error:(id)arg2;
- (void)_addHeaderView;
- (void)_writeAReviewAction:(id)arg1;
- (void)_versionSelectionAction:(id)arg1;
- (void)_starRatingAction:(id)arg1;
- (void)_sortSelectionAction:(id)arg1;
- (void)_appSupportAction:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)reviewComposeViewControllerDidFinish:(id)arg1;
- (void)layoutCacheDidFinishBatch:(id)arg1;
- (void)reviewsFacebookViewControllerDidChange:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
@property(copy, nonatomic) SKUIFacebookLikeStatus *facebookLikeStatus;
- (void)reloadData;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
- (void)dealloc;
- (id)initWithProductPage:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageSegmentedControl : UISegmentedControl
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface SKUIProductPageTableExpandableHeaderView : UIControl
{
    UILabel *_actionLabel;
    UIView *_bottomBorderView;
    UILabel *_titleLabel;
    UIView *_topBorderView;
    SKUIColorScheme *_colorScheme;
}

@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) UIColor *topBorderColor;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) UIColor *bottomBorderColor;
@property(copy, nonatomic) NSString *actionString;

@end

@interface SKUIProductPageTableSection : SKUITableViewSection
{
    SKUIClientContext *_clientContext;
    _Bool _expanded;
}

@property(nonatomic, getter=isExpanded) _Bool expanded; // @synthesize expanded=_expanded;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)textBoxTableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)selectionActionForTableView:(id)arg1 indexPath:(id)arg2;
- (double)heightForTextLayout:(id)arg1 isExpanded:(_Bool)arg2;

@end

@interface SKUIProductPageTableHeaderOnlySection : SKUIProductPageTableSection
{
    UIView *_headerView;
}

@property(retain, nonatomic) UIView *headerView; // @synthesize headerView=_headerView;
- (void).cxx_destruct;
- (id)headerViewForTableView:(id)arg1;

@end

@interface SKUIProductPageTableHeaderView : UIView
{
    struct UIEdgeInsets _contentInsets;
    UILabel *_titleLabel;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;

@end

@interface SKUIProductPageTableInAppPurchasesSection : SKUIProductPageTableSection
{
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    SKUIProductPageTableExpandableHeaderView *_headerView;
    NSArray *_inAppPurchases;
    NSNumberFormatter *_numberFormatter;
}

@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)_reloadHeaderView;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (void)setExpanded:(_Bool)arg1;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)headerViewForTableView:(id)arg1;
- (id)initWithInAppPurchases:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIProductPageTableLinksSection : SKUIProductPageTableSection
{
    NSMutableArray *_actions;
    SKUIProductPageItem *_item;
    NSMutableArray *_titles;
    SKUIColorScheme *_colorScheme;
}

@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)selectionActionForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)initWithItem:(id)arg1 clientContext:(id)arg2 askPermission:(_Bool)arg3;

@end

@interface SKUIProductPageTableLockupsSection : SKUIProductPageTableSection <SKUIArtworkRequestDelegate, SKUIMissingItemDelegate>
{
    NSMapTable *_artworkRequests;
    SKUIProductPageTableSeparatorView *_footerView;
    SKUIProductPageTableHeaderView *_headerView;
    NSArray *_lockups;
    SKUIMissingItemLoader *_missingItemLoader;
    UIImage *_placeholderImage;
    SKUIStyledImageDataConsumer *_productImageDataConsumer;
    SKUIResourceLoader *_resourceLoader;
}

@property(retain, nonatomic) SKUIResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
- (void).cxx_destruct;
- (id)_productImageForItem:(id)arg1;
- (id)_missingItemLoader;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)selectionActionForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)headerViewForTableView:(id)arg1;
- (id)footerViewForTableView:(id)arg1;
- (void)dealloc;
- (id)initWithLockups:(id)arg1 title:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageTableSeparatorView : UIView
{
    UIView *_separatorView;
}

- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface SKUIProductPageTableSwooshSection : SKUIProductPageTableSection <SKUIMissingItemDelegate, SKUISwooshViewControllerDelegate>
{
    CDUnknownBlockType _actionBlock;
    SKUILockupSwooshArtworkLoader *_artworkLoader;
    SKUIMissingItemLoader *_missingItemLoader;
    SKUIResourceLoader *_resourceLoader;
    SKUISwooshPageComponent *_swooshComponent;
    SKUILockupSwooshViewController *_swooshViewController;
}

@property(retain, nonatomic) SKUIResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
- (void).cxx_destruct;
- (id)_swooshViewController;
- (id)_missingItemLoader;
- (id)_artworkLoader;
- (id)swoosh:(id)arg1 imageForCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (id)headerViewForTableView:(id)arg1;
@property(readonly, nonatomic) UIViewController *swooshViewController;
@property(retain, nonatomic) SKUIColorScheme *colorScheme;
- (void)dealloc;
- (id)initWithLockups:(id)arg1 title:(id)arg2;
- (id)initWithItems:(id)arg1 title:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProductPageTableTextBoxSection : SKUIProductPageTableSection
{
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    _Bool _isExpanded;
    long long _stringIndex;
    NSString *_subtitle;
    SKUILayoutCache *_textLayoutCache;
    NSString *_title;
}

@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) SKUILayoutCache *textLayoutCache; // @synthesize textLayoutCache=_textLayoutCache;
@property(copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(nonatomic) long long stringIndex; // @synthesize stringIndex=_stringIndex;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (id)selectionActionForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUIProductPageTableUpdateHistorySection : SKUIProductPageTableSection
{
    SKUIClientContext *_clientContext;
    NSMutableIndexSet *_expandedIndexSet;
    long long _firstStringIndex;
    SKUIProductPageTableExpandableHeaderView *_headerView;
    NSArray *_releaseNotes;
    SKUILayoutCache *_textLayoutCache;
    SKUIColorScheme *_colorScheme;
    NSDateFormatter *_dateFormatter;
}

@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) SKUILayoutCache *textLayoutCache; // @synthesize textLayoutCache=_textLayoutCache;
@property(copy, nonatomic) NSArray *releaseNotes; // @synthesize releaseNotes=_releaseNotes;
@property(nonatomic) long long firstStringIndex; // @synthesize firstStringIndex=_firstStringIndex;
- (void).cxx_destruct;
- (void)_reloadHeaderView;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (void)setExpanded:(_Bool)arg1;
- (id)selectionActionForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)headerViewForTableView:(id)arg1;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUIProductPageTableView : UITableView
{
    UIView *_productPageHeaderView;
}

@property(retain, nonatomic) UIView *productPageHeaderView; // @synthesize productPageHeaderView=_productPageHeaderView;
- (void).cxx_destruct;
- (void)_addContentSubview:(id)arg1 atBack:(_Bool)arg2;

@end

@interface SKUIProductPageTableViewController : UIViewController <UITableViewDataSource, UITableViewDelegate>
{
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    id <SKUIProductPageChildViewControllerDelegate> _delegate;
    id <SKUIProductPageChildViewController> _delegateSender;
    UIColor *_evenColor;
    SKUIProductPageHeaderViewController *_headerViewController;
    UIColor *_color;
    NSArray *_sections;
    SKUIProductPageTableView *_tableView;
    SKUILayoutCache *_textLayoutCache;
}

@property(retain, nonatomic) SKUILayoutCache *textLayoutCache; // @synthesize textLayoutCache=_textLayoutCache;
@property(copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(nonatomic) __weak id <SKUIProductPageChildViewController> delegateSender; // @synthesize delegateSender=_delegateSender;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)_textLayoutRequestWithText:(id)arg1;
- (id)_tableView;
- (void)_addHeaderView;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
@property(readonly, nonatomic) UITableView *tableView;
- (void)scrollToView:(id)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithReleaseNotes:(id)arg1 clientContext:(id)arg2;
- (id)initWithInAppPurchases:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIProgrammedCardLayout : SKUICardLayout
{
}

+ (_Bool)allowsViewElement:(id)arg1;
- (id)_stringLayoutForViewElement:(id)arg1 width:(double)arg2;
- (id)_fontForLabel:(id)arg1;
- (id)_fontForButton:(id)arg1;
- (double)topInsetForViewElement:(id)arg1 previousViewElement:(id)arg2 width:(double)arg3;
- (long long)layoutStyle;
- (double)horizontalContentInset;
- (double)bottomInsetForLastViewElement:(id)arg1 width:(double)arg2;
- (id)attributedStringForLabel:(id)arg1;
- (id)attributedStringForButton:(id)arg1;

@end

@interface SKUIQuicklinkCollectionViewCell : SKUICollectionViewCell
{
    UIButton *_linkButton;
}

- (void).cxx_destruct;
- (id)_linkButton;
- (void)_linkButtonAction:(id)arg1;
- (void)layoutSubviews;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)configureForLink:(id)arg1;
- (void)dealloc;

@end

@interface SKUIQuicklinksPageComponent : SKUIPageComponent <SSMetricsEventFieldProvider>
{
    NSArray *_links;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSArray *links; // @synthesize links=_links;
- (void).cxx_destruct;
- (void)_setLinksWithLinksArray:(id)arg1 context:(id)arg2;
- (id)valueForMetricsField:(id)arg1;
- (id)metricsElementName;
- (long long)componentType;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIQuicklinksPageSection : SKUIStorePageSection <SKUIQuicklinksViewControllerDelegate>
{
    SKUIQuicklinksViewController *_quicklinksViewController;
}

- (void).cxx_destruct;
- (id)_quicklinksViewController;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)quicklinksViewController:(id)arg1 didSelectLink:(id)arg2 atIndex:(long long)arg3;
- (long long)numberOfCells;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIQuicklinksPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIQuicklinksView : UIView
{
    UIView *_borderView;
    UIView *_collectionView;
    UIColor *_titleColor;
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UIView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
- (void)setColoringWithColorScheme:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIQuicklinksViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_collectionView;
    SKUIColorScheme *_colorScheme;
    id <SKUIQuicklinksViewControllerDelegate> _delegate;
    NSArray *_links;
    SKUIQuicklinksView *_quicklinksView;
}

@property(copy, nonatomic) NSArray *links; // @synthesize links=_links;
@property(nonatomic) __weak id <SKUIQuicklinksViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (long long)_numberOfRows;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setTitle:(id)arg1;
- (void)loadView;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)setColoringWithColorScheme:(id)arg1;
@property(readonly, nonatomic) NSArray *indexPathsForVisibleItems;
- (struct CGRect)frameForLinkAtIndex:(long long)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIRatingStarsCache : NSObject
{
    NSMutableDictionary *_cachedImages;
    UIImage *_emptyStarImage;
    UIImage *_filledStarImage;
    UIImage *_halfStarImage;
}

+ (id)cacheWithProperties:(long long)arg1;
- (void).cxx_destruct;
- (id)ratingStarsImageForRating:(double)arg1;
- (id)initWithProperties:(long long)arg1;

@end

@interface SKUIRedeem : NSObject
{
    _Bool _hideItemView;
    NSArray *_items;
    NSString *_inAppPurchase;
    NSString *_credit;
    NSString *_balance;
    NSDictionary *_thankYouDictionary;
    NSURL *_redirectURL;
    UIImage *_headerImage;
    SKUIArtworkList *_headerArtworkList;
    NSString *_title;
    NSString *_message;
    NSArray *_links;
    double _ITunesPassLearnMoreAlertInterval;
}

@property(nonatomic) double ITunesPassLearnMoreAlertInterval; // @synthesize ITunesPassLearnMoreAlertInterval=_ITunesPassLearnMoreAlertInterval;
@property(nonatomic) _Bool hideItemView; // @synthesize hideItemView=_hideItemView;
@property(retain, nonatomic) NSArray *links; // @synthesize links=_links;
@property(copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) SKUIArtworkList *headerArtworkList; // @synthesize headerArtworkList=_headerArtworkList;
@property(retain, nonatomic) UIImage *headerImage; // @synthesize headerImage=_headerImage;
@property(retain, nonatomic) NSURL *redirectURL; // @synthesize redirectURL=_redirectURL;
@property(retain, nonatomic) NSDictionary *thankYouDictionary; // @synthesize thankYouDictionary=_thankYouDictionary;
@property(copy, nonatomic) NSString *balance; // @synthesize balance=_balance;
@property(copy, nonatomic) NSString *credit; // @synthesize credit=_credit;
@property(retain, nonatomic) NSString *inAppPurchase; // @synthesize inAppPurchase=_inAppPurchase;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
- (void).cxx_destruct;
- (id)init;

@end

@interface SKUIRedeemCameraLandingView : UIView
{
    UILabel *_bodyLabel;
    UIButton *_button;
    UILabel *_headerLabel;
    UIImageView *_imageView;
    long long _spacingStyle;
}

@property(nonatomic) long long spacingStyle; // @synthesize spacingStyle=_spacingStyle;
@property(readonly, nonatomic) UIButton *button; // @synthesize button=_button;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) UIImage *image;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUIRedeemCameraView : UIView <UITextFieldDelegate>
{
    SKUIClientContext *_clientContext;
    id <SKUIRedeemCameraViewDelegate> _delegate;
    SKUIRedeemTextField *_inputAccessoryTextField;
    SKUIITunesPassConfiguration *_iTunesPassConfiguration;
    SKUIRedeemITunesPassLockup *_iTunesPassLockup;
    SKUIRedeemCameraLandingView *_landingView;
    UIView *_overlay;
    UIView *_redeemerView;
    UIButton *_termsButton;
    SKUIRedeemTextField *_textField;
}

@property(retain, nonatomic) SKUIITunesPassConfiguration *ITunesPassConfiguration; // @synthesize ITunesPassConfiguration=_iTunesPassConfiguration;
@property(nonatomic) __weak id <SKUIRedeemCameraViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_showRedeemer:(_Bool)arg1;
- (void)_resumeRedeemer;
- (void)_pauseRedeemer;
- (id)_newTextFieldWithClientContext:(id)arg1 placeholderColor:(id)arg2;
- (_Bool)_isShowingRedeemer;
- (void)_hideKeyboard;
- (void)_termsButtonAction:(id)arg1;
- (void)_tapGestureAction:(id)arg1;
- (void)_landingButtonAction:(id)arg1;
- (void)_iTunesPassLearnMoreAction:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldTextDidChange:(id)arg1;
- (void)keyboardDidHide:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *text;
- (void)start;
- (void)showKeyboard;
@property(retain, nonatomic) UIImage *image;
@property(nonatomic, getter=isEnabled) _Bool enabled;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIRedeemStepViewController : UIViewController
{
    SKUIClientContext *_clientContext;
    NSOperationQueue *_operationQueue;
    SKUIRedeemConfiguration *_configuration;
}

@property(retain, nonatomic) SKUIRedeemConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool shouldShowPassbookLearnMore;

@end

@interface SKUIRedeemCameraViewController : SKUIRedeemStepViewController
{
    long long category;
    NSString *_initialCode;
    id <SKUIRedeemCameraViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <SKUIRedeemCameraViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *initialCode; // @synthesize initialCode=_initialCode;
@property(readonly, nonatomic) long long category; // @synthesize category;
- (void).cxx_destruct;
- (id)initWithRedeemCategory:(long long)arg1;

@end

@interface SKUIRedeemConfiguration : NSObject
{
    long long _category;
    SKUIClientContext *_clientContext;
    UIImage *_inputImage;
    SKUIITunesPassConfiguration *_itunesPassConfiguration;
    UIImage *_landingImage;
    NSOperationQueue *_operationQueue;
    UIImage *_successImage;
}

@property(readonly, nonatomic) UIImage *successImage; // @synthesize successImage=_successImage;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(readonly, nonatomic) UIImage *landingImage; // @synthesize landingImage=_landingImage;
@property(readonly, nonatomic) SKUIITunesPassConfiguration *ITunesPassConfiguration; // @synthesize ITunesPassConfiguration=_itunesPassConfiguration;
@property(readonly, nonatomic) UIImage *inputImage; // @synthesize inputImage=_inputImage;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) long long category; // @synthesize category=_category;
- (void).cxx_destruct;
- (void)_setSuccessImage:(id)arg1;
- (void)_setLandingImage:(id)arg1;
- (void)_setInputImage:(id)arg1;
- (id)_redeemPreflightRequestBodyData;
- (void)_loadDefaultImages;
- (void)_loadConfigurationWithURLBagDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_didLoadWithResponseDictionary:(id)arg1;
- (void)loadConfigurationWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithOperationQueue:(id)arg1 category:(long long)arg2 clientContext:(id)arg3;

@end

@interface SKUIRedeemITunesPassLearnMoreView : UIView
{
    UIButton *_button;
    UILabel *_explanationLabel;
    UIImageView *_headerImageView;
}

- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(retain, nonatomic) UIImage *headerImage;
@property(copy, nonatomic) NSString *explanationString;
@property(copy, nonatomic) NSString *buttonTitle;
@property(readonly, nonatomic) UIControl *button;

@end

@interface SKUIRedeemITunesPassLearnMoreViewController : SKUIRedeemStepViewController <SKUIPassbookLoaderDelegate>
{
    _Bool _didTapAddPassbookButton;
    SKUIRedeemITunesPassLearnMoreView *_learnMoreView;
    SKUIPassbookLoader *_passbookLoader;
    NSURL *_passbookURL;
}

- (void).cxx_destruct;
- (void)_showErrorDialog;
- (void)_loadPassbookURL;
- (void)_loadPassbookPass;
- (id)_existingPass;
- (void)_didLoadPassbookURLString:(id)arg1;
- (void)_passButtonAction:(id)arg1;
- (void)_doneButtonAction:(id)arg1;
- (id)presentationViewControllerForPassbookLoader:(id)arg1;
- (void)passbookLoaderDidFinish:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIRedeemITunesPassLockup : UIControl
{
    SKUIClientContext *_clientContext;
    SKUIITunesPassConfiguration *_configuration;
    UILabel *_descriptionLabel;
    UIView *_horizontalSeparatorView;
    UIImageView *_iconImageView;
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
- (id)_attributedDescriptionString;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (id)initWithITunesPassConfiguration:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIRedeemInputViewController : SKUIRedeemStepViewController <UITextFieldDelegate>
{
    long long _category;
    SKUIRedeemTextField *_field;
    UIImageView *_imageView;
    NSString *_initialCode;
    SKUIRedeemITunesPassLockup *_passbookLockup;
    UIBarButtonItem *_redeemButton;
}

@property(copy, nonatomic) NSString *initialCode; // @synthesize initialCode=_initialCode;
@property(readonly, nonatomic) long long category; // @synthesize category=_category;
- (void).cxx_destruct;
- (id)_newTextFieldWithClientContext:(id)arg1;
- (void)_termsButtonAction:(id)arg1;
- (void)_redeemAction:(id)arg1;
- (void)_passbookLockupAction:(id)arg1;
- (void)_cancelAction:(id)arg1;
- (void)_textFieldTextDidChange:(id)arg1;
- (void)_redeemConfigurationImagesDidLoad:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithRedeemCategory:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIRedeemItem : SKUIItem
{
    SKUIArtworkList *artworks;
    long long itemIdentifier;
    NSString *title;
    long long itemKind;
}

@property(nonatomic) long long itemKind; // @synthesize itemKind;
@property(retain, nonatomic) NSString *title; // @synthesize title;
@property(nonatomic) long long itemIdentifier; // @synthesize itemIdentifier;
@property(retain, nonatomic) SKUIArtworkList *artworks; // @synthesize artworks;
- (void).cxx_destruct;
- (id)largestArtworkURL;
- (id)artworkURLForSize:(long long)arg1;
- (struct _NSRange)ageBandRange;

@end

@interface SKUIRedeemOperation : NSOperation
{
    _Bool _cameraRecognized;
    NSString *_code;
    SKUIClientContext *_clientContext;
    CDUnknownBlockType _resultBlock;
}

@property(copy) CDUnknownBlockType resultBlock; // @synthesize resultBlock=_resultBlock;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) _Bool cameraRecognized; // @synthesize cameraRecognized=_cameraRecognized;
- (void).cxx_destruct;
- (id)_performRequestWithProperties:(id)arg1 error:(id *)arg2;
- (id)_requestPropertiesForThankYouWithURL:(id)arg1;
- (void)_applyThankYouDictionary:(id)arg1 toRedeem:(id)arg2;
- (id)_itemsForItemIdentifiers:(id)arg1;
- (id)_redeemForSuccessDictionary:(id)arg1;
- (void)main;
- (id)initWithCode:(id)arg1;

@end

@interface SKUIRedeemPreflightOperation : NSOperation
{
    SKUIClientContext *_clientContext;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    _Bool _loadsRedeemCodeMetadata;
    CDUnknownBlockType _outputBlock;
    NSString *_redeemCode;
    SKUIRedeemConfiguration *_redeemConfiguration;
}

- (void).cxx_destruct;
- (id)_redeemCodeMetadataWithClientContext:(id)arg1;
- (id)_authenticationContext;
- (void)main;
@property(retain) SKUIRedeemConfiguration *redeemConfiguration;
@property(copy) CDUnknownBlockType outputBlock;
@property _Bool loadsRedeemCodeMetadata;
- (id)initWithClientContext:(id)arg1 redeemCode:(id)arg2;
- (id)init;
- (id)_initSKUIRedeemPreflightOperation;

@end

@interface SKUIRedeemPreflightResult : NSObject
{
    SSAccount *_account;
    SKUIClientContext *_clientContext;
    SSVRedeemCodeMetadata *_codeMetadata;
    NSError *_error;
    SKUIRedeemConfiguration *_redeemConfiguration;
    long long _resultType;
}

@property(nonatomic) long long resultType; // @synthesize resultType=_resultType;
@property(retain, nonatomic) SKUIRedeemConfiguration *redeemConfiguration; // @synthesize redeemConfiguration=_redeemConfiguration;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) SSVRedeemCodeMetadata *codeMetadata; // @synthesize codeMetadata=_codeMetadata;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(retain, nonatomic) SSAccount *account; // @synthesize account=_account;
- (void).cxx_destruct;

@end

@interface SKUIRedeemResultLinksTableViewSection : SKUITableViewSection
{
    NSArray *_links;
    struct UIEdgeInsets _contentInsets;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forIndexPath:(id)arg3;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)initWithLinks:(id)arg1;

@end

@interface SKUIRedeemResultMessageView : UIView
{
    UILabel *_messageLabel;
    UILabel *_titleLabel;
}

- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *message;

@end

@interface SKUIRedeemResultSimpleTableViewCell : UITableViewCell
{
    struct UIEdgeInsets _childContentInsets;
    UIView *_childContentView;
}

@property(retain, nonatomic) UIView *childContentView; // @synthesize childContentView=_childContentView;
@property(nonatomic) struct UIEdgeInsets childContentInsets; // @synthesize childContentInsets=_childContentInsets;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface SKUIRedeemResultSimpleTableViewSection : SKUITableViewSection
{
    struct UIEdgeInsets _contentInsets;
    UIView *_view;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forIndexPath:(id)arg3;
- (id)tableViewCellForTableView:(id)arg1 indexPath:(id)arg2;
- (long long)numberOfRowsInSection;
- (double)heightForCellInTableView:(id)arg1 indexPath:(id)arg2;
- (id)initWithView:(id)arg1;

@end

@interface SKUIRedeemResultsView : UITableView <UITableViewDelegate, UITableViewDataSource>
{
    NSArray *_sections;
    struct UIEdgeInsets _contentInsetAdjustments;
    id <SKUIRedeemResultsViewDelegate> _resultsDelegate;
}

@property(nonatomic) __weak id <SKUIRedeemResultsViewDelegate> resultsDelegate; // @synthesize resultsDelegate=_resultsDelegate;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIRedeemResultsViewController : SKUIRedeemStepViewController <SKUIItemStateCenterObserver, SKUIRedeemResultsViewDelegate>
{
    UIButton *_anotherButton;
    _Bool _extendedMessageIsExpanded;
    SKUITextLayout *_extendedMessageTextLayout;
    SKUITextBoxView *_extendedMessageView;
    UIImageView *_headerImageView;
    UIImage *_itemImage;
    SKUIItemStateCenter *_itemStateCenter;
    SKUIGiftItemView *_itemView;
    SKUIRedeemResultMessageView *_messageView;
    NSOperationQueue *_operationQueue;
    SKUIRedeemITunesPassLockup *_passbookLockup;
    SKUIRedeem *_redeem;
    long long _redeemCategory;
}

@property(readonly, nonatomic) SKUIRedeem *redeem; // @synthesize redeem=_redeem;
@property(nonatomic) long long redeemCategory; // @synthesize redeemCategory=_redeemCategory;
- (void).cxx_destruct;
- (void)_setHeaderImage:(id)arg1;
- (void)_setItemImage:(id)arg1;
- (void)_reloadSections;
- (void)_reloadResultViewMessage;
- (id)_passbookLearnMoreSection;
- (id)_itemView;
- (id)_item;
- (id)_linksSection;
- (id)_resultImageViewSection;
- (id)_messageViewSection;
- (id)_itemViewSection;
- (id)_headerImageViewSection;
- (id)_extendedMessageViewSection;
- (id)_emptySection;
- (id)_anotherButtonSection;
- (void)_redeemAnotherAction:(id)arg1;
- (void)_passbookLockupAction:(id)arg1;
- (void)_openAction:(id)arg1;
- (void)_extendedMessageAction:(id)arg1;
- (void)_doneAction:(id)arg1;
- (void)redeemResultsView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithRedeem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIRedeemTemplateViewElement : SKUIViewElement
{
    NSString *_initialCode;
}

@property(readonly, nonatomic) NSString *initialCode; // @synthesize initialCode=_initialCode;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIRedeemTextField : UITextField
{
    UIView *_bottomBorderView;
    UIView *_topBorderView;
    UIView *_backdropView;
    _Bool _backdropBackground;
}

@property(nonatomic) _Bool backdropBackground; // @synthesize backdropBackground=_backdropBackground;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1;
- (struct CGRect)placeholderRectForBounds:(struct CGRect)arg1;
- (struct CGRect)editingRectForBounds:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIRedeemViewController : UINavigationController
{
    _Bool _attempsAutomaticRedeem;
    BOOL _cameraRedeemEnabled;
    long long _category;
    SKUIClientContext *_clientContext;
    NSString *_initialCode;
    NSOperationQueue *_operationQueue;
    SKUIRedeemPreflightOperation *_preflightOperation;
    SKUIRedeemConfiguration *_redeemConfiguration;
    SKUIRedeemStepViewController *_rootViewController;
}

@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(copy, nonatomic) NSString *initialCode; // @synthesize initialCode=_initialCode;
@property(readonly, nonatomic) long long category; // @synthesize category=_category;
@property(nonatomic) _Bool attempsAutomaticRedeem; // @synthesize attempsAutomaticRedeem=_attempsAutomaticRedeem;
- (void).cxx_destruct;
- (void)_showRootViewController;
- (id)_newRootViewController;
- (void)_loadRootViewController;
- (void)_finishPreflightWithResult:(id)arg1;
- (void)_attemptAutomaticRedeemWithMetadata:(id)arg1;
- (void)_cancelButtonAction:(id)arg1;
- (void)redeemAgainAnimated:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (id)initWithRedeemCategory:(long long)arg1;

@end

@interface SKUIReleaseNote : NSObject
{
    NSString *_changeNotes;
    NSDate *_date;
    NSString *_versionString;
}

+ (id)dateFormatter;
@property(readonly, nonatomic) NSString *versionString; // @synthesize versionString=_versionString;
@property(readonly, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic) NSString *changeNotes; // @synthesize changeNotes=_changeNotes;
- (void).cxx_destruct;
- (id)initWithReleaseNoteDictionary:(id)arg1 dateFormatter:(id)arg2;

@end

@interface SKUIReloadConfigurationOperation : NSOperation
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    CDUnknownBlockType _outputBlock;
    SSURLBag *_urlBag;
}

- (void).cxx_destruct;
- (void)main;
@property(retain) SSURLBag *URLBag;
@property(copy) CDUnknownBlockType outputBlock;
- (id)init;

@end

@interface SKUIRemoveFromWishlistOperation : NSOperation
{
    long long _entityID;
    long long _itemID;
    long long _reason;
}

- (void)main;
- (id)initWithItemIdentifier:(long long)arg1 entityIdentifier:(long long)arg2 reason:(long long)arg3;

@end

@interface SKUIResourceLoader : NSObject
{
    SKUIClientContext *_clientContext;
    id <SKUIResourceLoaderDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    NSMutableDictionary *_operationsByRequestID;
    NSMapTable *_requestsByCacheKey;
    NSMutableDictionary *_resourcesByRequestID;
}

@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <SKUIResourceLoaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_sendDidIdleIfNecessary;
- (void)_finishLoadForRequest:(id)arg1 withResource:(id)arg2;
- (void)setReason:(long long)arg1 forRequestWithIdentifier:(unsigned long long)arg2;
- (id)requestIdentifierForCacheKey:(id)arg1;
- (void)removeAllCachedResources;
- (_Bool)loadResourceWithRequest:(id)arg1 reason:(long long)arg2;
@property(readonly, nonatomic, getter=isIdle) _Bool idle;
- (void)cancelRequestWithIdentifier:(unsigned long long)arg1;
- (void)cancelAllRequests;
- (id)cachedResourceForRequestIdentifier:(unsigned long long)arg1;
- (void)addResource:(id)arg1 forRequestIdentifier:(unsigned long long)arg2;
- (id)initWithOperationQueue:(id)arg1 clientContext:(id)arg2;
- (id)initWithOperationQueue:(id)arg1;
- (id)init;

@end

@interface SKUIReview : NSObject <SKUICacheCoding>
{
    NSString *_body;
    NSString *_dateString;
    float _rating;
    NSString *_reviewer;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *reviewer; // @synthesize reviewer=_reviewer;
@property(readonly, nonatomic) float rating; // @synthesize rating=_rating;
@property(readonly, nonatomic) NSString *dateString; // @synthesize dateString=_dateString;
@property(readonly, nonatomic) NSString *body; // @synthesize body=_body;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (id)formattedBylineWithClientContext:(id)arg1;
- (id)initWithReviewDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIReviewCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (id)expandableLabelElementForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIReviewConfiguration : NSObject
{
    NSString *_allVersionsURLString;
    NSString *_currentVersionURLString;
    NSString *_pageNumberQueryParameter;
    NSString *_ratingURLString;
}

@property(readonly, nonatomic) NSString *ratingURLString; // @synthesize ratingURLString=_ratingURLString;
@property(readonly, nonatomic) NSString *pageNumberQueryParameter; // @synthesize pageNumberQueryParameter=_pageNumberQueryParameter;
@property(readonly, nonatomic) NSString *currentVersionURLString; // @synthesize currentVersionURLString=_currentVersionURLString;
@property(readonly, nonatomic) NSString *allVersionsURLString; // @synthesize allVersionsURLString=_allVersionsURLString;
- (void).cxx_destruct;
- (id)initWithConfigurationDictionary:(id)arg1;

@end

@interface SKUIReviewList : NSObject <SKUICacheCoding>
{
    NSDictionary *_dictionary;
    NSMutableArray *_reviews;
}

@property(readonly, nonatomic) NSArray *reviews; // @synthesize reviews=_reviews;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
@property(readonly, nonatomic) NSURL *writeReviewURL;
@property(readonly, nonatomic) float userRating;
@property(readonly, nonatomic) long long twoStarRatingCount;
@property(readonly, nonatomic) long long threeStarRatingCount;
@property(readonly, nonatomic) long long ratingCount;
@property(readonly, nonatomic) long long oneStarRatingCount;
@property(readonly, nonatomic) long long numberOfPages;
@property(readonly, nonatomic) long long fourStarRatingCount;
@property(readonly, nonatomic) long long fiveStarRatingCount;
- (void)addReviews:(id)arg1;
- (id)initWithReviewListDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIReviewListPageComponent : SKUIPageComponent
{
}

- (long long)componentType;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIReviewListViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIReviewListPageSection : SKUIStorePageSection
{
    SKUIViewElementLayoutContext *_cellLayoutContext;
}

- (void).cxx_destruct;
- (void)_requestCellLayout;
- (struct UIEdgeInsets)_contentInsetForReviewIndex:(long long)arg1;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIReviewListPageComponent *pageComponent; // @dynamic pageComponent;

@end

@interface SKUIReviewListViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;
@property(readonly, nonatomic) NSArray *reviews;

@end

@interface SKUIReviewMetadata : NSObject <NSCopying>
{
    NSString *_body;
    unsigned long long _bodyMaxLength;
    NSString *_nickname;
    unsigned long long _nicknameMaxLength;
    float _rating;
    NSURL *_submitURL;
    NSString *_title;
    unsigned long long _titleMaxLength;
}

@property(readonly, nonatomic) unsigned long long titleMaxLength; // @synthesize titleMaxLength=_titleMaxLength;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSURL *submitURL; // @synthesize submitURL=_submitURL;
@property(nonatomic) float rating; // @synthesize rating=_rating;
@property(readonly, nonatomic) unsigned long long nicknameMaxLength; // @synthesize nicknameMaxLength=_nicknameMaxLength;
@property(copy, nonatomic) NSString *nickname; // @synthesize nickname=_nickname;
@property(readonly, nonatomic) unsigned long long bodyMaxLength; // @synthesize bodyMaxLength=_bodyMaxLength;
@property(copy, nonatomic) NSString *body; // @synthesize body=_body;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithReviewDictionary:(id)arg1;

@end

@interface SKUIReviewViewElement : SKUIViewElement
{
}

@end

@interface SKUIReviewsFacebookView : UIView
{
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    NSArray *_friendNames;
    UILabel *_friendsLabel;
    UIButton *_likeButton;
    UIImageView *_logoImageView;
    UILabel *_titleLabel;
    _Bool _userLiked;
    UIView *_separatorView;
    struct UIEdgeInsets _contentInsets;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic, getter=isUserLiked) _Bool userLiked; // @synthesize userLiked=_userLiked;
@property(readonly, nonatomic) UIControl *likeToggleButton; // @synthesize likeToggleButton=_likeButton;
@property(copy, nonatomic) NSArray *friendNames; // @synthesize friendNames=_friendNames;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (void)_reloadLikeButtonState;
- (void)_reloadFriendNamesLabel;
- (id)_composedStringForNames:(id)arg1 userLiked:(_Bool)arg2;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUIReviewsFacebookViewController : UIViewController
{
    SKUIClientContext *_clientContext;
    id <SKUIReviewsFacebookViewControllerDelegate> _delegate;
    SKUIFacebookLikeStatus *_facebookLikeStatus;
    SKUIReviewsFacebookView *_facebookView;
}

@property(copy, nonatomic) SKUIFacebookLikeStatus *facebookLikeStatus; // @synthesize facebookLikeStatus=_facebookLikeStatus;
@property(nonatomic) __weak id <SKUIReviewsFacebookViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadFacebookView;
- (void)_changeStatusToUserLiked:(_Bool)arg1;
- (void)_toggleLike:(id)arg1;
- (void)loadView;
- (void)dealloc;

@end

@interface SKUIReviewsHistogramView : UIView
{
    UIButton *_appSupportButton;
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    UILabel *_countLabel;
    long long _numberOfUserRatings;
    NSMutableDictionary *_ratings;
    UISegmentedControl *_segmentedControl;
    SKUIStarRatingControl *_starRatingControl;
    UILabel *_starRatingControlLabel;
    UILabel *_titleLabel;
    double _userRating;
    UIImageView *_userRatingStarsView;
    NSString *_versionString;
    UIButton *_writeAReviewButton;
    UIView *_bottomSeparatorView;
    UIImageView *_histogramImageView;
    NSArray *_histogramValues;
}

@property(retain, nonatomic) NSArray *histogramValues; // @synthesize histogramValues=_histogramValues;
@property(readonly, nonatomic) UIControl *writeAReviewButton; // @synthesize writeAReviewButton=_writeAReviewButton;
@property(copy, nonatomic) NSString *versionString; // @synthesize versionString=_versionString;
@property(readonly, nonatomic) UIControl *starRatingControl; // @synthesize starRatingControl=_starRatingControl;
@property(nonatomic) long long numberOfUserRatings; // @synthesize numberOfUserRatings=_numberOfUserRatings;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(readonly, nonatomic) UIControl *appSupportButton; // @synthesize appSupportButton=_appSupportButton;
- (void).cxx_destruct;
- (id)_countLabelString;
- (id)_histogramImageForValues:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(nonatomic) double userRating;
@property(copy, nonatomic) NSString *title;
@property(nonatomic) long long selectedSegmentIndex;
@property(copy, nonatomic) NSArray *segmentedControlTitles;
@property(nonatomic) long long personalStarRating;
@property(readonly, nonatomic) UIControl *segmentedControl;
- (id)initWithClientContext:(id)arg1;

@end

@interface SKUIReviewsHistogramViewController : UIViewController
{
    SKUIClientContext *_clientContext;
    SKUIReviewsHistogramView *_histogramView;
    SKUIReviewList *_reviewList;
}

@property(retain, nonatomic) SKUIReviewList *reviewList; // @synthesize reviewList=_reviewList;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadHistogram;
- (id)_histogramView;
- (void)loadView;
@property(readonly, nonatomic) UIControl *writeAReviewButton;
@property(copy, nonatomic) NSString *versionString;
@property(readonly, nonatomic) UIControl *starRatingControl;
@property(nonatomic) long long selectedSegmentIndex;
@property(copy, nonatomic) NSArray *segmentedControlTitles;
@property(nonatomic) long long personalStarRating;
@property(readonly, nonatomic) UIControl *segmentedControl;
@property(readonly, nonatomic) UIControl *appSupportButton;

@end

@interface SKUIRoundedRectButton : UIButton
{
    UIView *_borderView;
    UILabel *_subtitleLabel;
}

- (void).cxx_destruct;
- (id)_basicAnimationWithKeyPath:(id)arg1;
- (void)_reloadColors;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setTitleEdgeInsets:(struct UIEdgeInsets)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)layoutSubviews;
- (void)setSubtitleWithLabel:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIRowComponent : SKUIPageComponent
{
    UIColor *_backgroundColor;
    NSArray *_childComponents;
    NSArray *_columnWidths;
    long long _missingItemCount;
    long long _numberOfColumns;
    _Bool _shouldAutoFlow;
}

@property(readonly, nonatomic) _Bool shouldAutoFlow; // @synthesize shouldAutoFlow=_shouldAutoFlow;
@property(readonly, nonatomic) long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(readonly, nonatomic) NSArray *columnWidths; // @synthesize columnWidths=_columnWidths;
@property(readonly, nonatomic) NSArray *childComponents; // @synthesize childComponents=_childComponents;
@property(readonly, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)description;
- (_Bool)_isChildMissingItemData:(id)arg1;
- (id)_childComponentWithContext:(id)arg1;
- (id)_updateWithMissingItems:(id)arg1;
- (id)metricsElementName;
- (_Bool)isMissingItemData;
- (void)enumerateMissingItemIdentifiersFromIndex:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (long long)componentType;
- (id)initWithViewElement:(id)arg1;
- (id)initWithCustomPageContext:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIRowViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIRowSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIEmbeddedMediaViewDelegate, SKUIItemStateCenterObserver, SKUIMissingItemDelegate, SKUIProductPageOverlayDelegate>
{
    SKUIClientContext *_clientContext;
    NSMapTable *_columnViews;
    NSMapTable *_componentArtworkRequestIDs;
    NSMapTable *_editorialLayouts;
    NSMutableIndexSet *_expandedEditorialIndexes;
    NSMapTable *_galleryViewControllers;
    NSMapTable *_countdownViewControllers;
    _Bool _isPad;
    double _landscapeCellContentHeight;
    SKUIMissingItemLoader *_missingItemLoader;
    SKUIProductPageOverlayController *_overlayController;
    SKUILockupComponent *_overlaySourceComponent;
    double _portraitCellContentHeight;
}

- (void).cxx_destruct;
- (id)_viewControllerForGalleryComponent:(id)arg1;
- (id)_viewControllerForCountdownComponent:(id)arg1;
- (void)_setPositionForClickEvent:(id)arg1 elementIndex:(long long)arg2;
- (void)_selectMediaComponent:(id)arg1 columnIndex:(long long)arg2;
- (void)_selectLockupComponent:(id)arg1 columnIndex:(long long)arg2;
- (void)_selectGalleryComponent:(id)arg1 columnIndex:(long long)arg2;
- (void)_reloadView:(id)arg1 forMediaComponent:(id)arg2 columnIndex:(long long)arg3;
- (void)_reloadLockupCell:(id)arg1 forComponent:(id)arg2 columnIndex:(long long)arg3;
- (void)_reloadEditorialLockupCell:(id)arg1 forComponent:(id)arg2 columnIndex:(long long)arg3;
- (void)_reloadEditorialCell:(id)arg1 forComponent:(id)arg2 columnIndex:(long long)arg3;
- (id)_popSourceViewForOverlayController:(id)arg1;
- (id)_overlaySourceCell;
- (id)_newViewWithMediaComponent:(id)arg1;
- (id)_newSizeToFitArtworkRequestWithArtwork:(id)arg1 columnIndex:(long long)arg2;
- (id)_missingItemLoader;
- (struct SKUILockupStyle)_lockupStyleForComponent:(id)arg1 columnIndex:(long long)arg2;
- (id)_lockupImageForComponent:(id)arg1;
- (void)_loadImagesForGalleryComponent:(id)arg1 columnIndex:(long long)arg2;
- (double)_interColumnSpacing;
- (id)_imageConsumerWithItem:(id)arg1 lockupSize:(long long)arg2;
- (double)_heightForMediaComponent:(id)arg1 columnIndex:(long long)arg2 rowWidth:(double)arg3;
- (double)_heightForLockupComponent:(id)arg1 columnIndex:(long long)arg2 rowWidth:(double)arg3;
- (double)_heightForGalleryComponent:(id)arg1 columnIndex:(long long)arg2 rowWidth:(double)arg3;
- (double)_heightForEditorialComponent:(id)arg1 columnIndex:(long long)arg2 rowWidth:(double)arg3;
- (double)_heightForCountdownComponent:(id)arg1 columnIndex:(long long)arg2 rowWidth:(double)arg3;
- (double)_heightForComponent:(id)arg1 columnIndex:(double)arg2 rowWidth:(double)arg3;
- (double)_heightForArtwork:(id)arg1 columnIndex:(long long)arg2 rowWidth:(double)arg3;
- (void)_expandEditorialComponent:(id)arg1 columnIndex:(long long)arg2;
- (void)_enumerateLockupsWithBlock:(CDUnknownBlockType)arg1;
- (id)_editorialLayoutForLockup:(id)arg1 columnIndex:(long long)arg2;
- (id)_editorialLayoutForEditorial:(id)arg1 columnIndex:(long long)arg2;
- (struct UIEdgeInsets)_edgeInsetsForColumnIndex:(long long)arg1;
- (double)_columnWidthForColumnIndex:(long long)arg1 rowWidth:(double)arg2;
- (id)_columnViews;
- (double)_cellContentHeightForRowWidth:(double)arg1;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (id)productPageOverlay:(id)arg1 flipSourceViewToPresentItem:(id)arg2;
- (id)productPageOverlay:(id)arg1 flipSourceViewToDismissItem:(id)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2 invalidItemIdentifiers:(id)arg3;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)mediaView:(id)arg1 playbackStateDidChange:(long long)arg2;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willHideInContext:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (id)itemOfferClickEventWithItem:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (void)invalidateCachedLayoutInformation;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (void)collectionViewDidConfirmItemOfferAtIndexPath:(id)arg1;
- (id)clickEventWithItem:(id)arg1 elementName:(id)arg2 index:(long long)arg3;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIRowComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIRowViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;
@property(readonly, nonatomic) NSArray *columns;

@end

@interface SKUIRowViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    SKUIViewElementLayoutContext *_cellLayoutContext;
}

- (void).cxx_destruct;
- (double)_singleColumnWidth;
- (id)_reuseIdentifierForViewElement:(id)arg1;
- (id)_reuseIdentifierForLockupViewElement:(id)arg1;
- (id)_reuseIdentifierForCardViewElement:(id)arg1;
- (void)_requestLayoutForCells;
- (double)_interiorColumnSpacing;
- (id)_firstChildForColumn:(id)arg1;
- (void)_enumerateViewElementsUsingBlock:(CDUnknownBlockType)arg1;
- (struct UIEdgeInsets)_contentInsetForIndexPath:(id)arg1;
- (Class)_cellClassForViewElement:(id)arg1;
- (Class)_cellClassForLockupViewElement:(id)arg1;
- (Class)_cellClassForCardViewElement:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (_Bool)updateCellWithIndexPath:(id)arg1 itemState:(id)arg2 animated:(_Bool)arg3;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldSelectItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldHighlightItemAtIndexPath:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIRowComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIRunLoopDelay : NSObject
{
    NSString *_mode;
    struct __CFRunLoop *_runLoop;
    struct __CFRunLoopSource *_runLoopSource;
    double _timeout;
}

- (void).cxx_destruct;
- (void)endDelay;
- (void)delayRunLoop;
- (void)dealloc;
- (id)initWithRunLoopMode:(id)arg1 timeout:(double)arg2;

@end

@interface SKUIScalingFlipView : UIView
{
    UIView *_backView;
    CDUnknownBlockType _completionBlock;
    long long _direction;
    double _duration;
    struct CGRect _fromFrame;
    UIView *_frontView;
    struct CGRect _toFrame;
}

@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) long long direction; // @synthesize direction=_direction;
- (void).cxx_destruct;
- (id)_timingFunction;
- (id)_positionAnimation;
- (id)_inputColorAnimation;
- (id)_frontLayerAnimation;
- (id)_backLayerAnimation;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)performFlipWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithFrontView:(id)arg1 backView:(id)arg2;

@end

@interface SKUIScreenshot : NSObject <NSCopying, SKUICacheCoding>
{
    NSString *_orientation;
    long long _uniqueIdentifier;
    NSMutableDictionary *_urls;
    NSMutableDictionary *_sizes;
}

@property(readonly, nonatomic) long long uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly, nonatomic) NSString *orientationString; // @synthesize orientationString=_orientation;
- (void).cxx_destruct;
- (id)_firstVariant;
- (void)_addURLsFromDictionary:(id)arg1 withRemoteLocalKeysMap:(id)arg2;
@property(readonly, nonatomic) NSMutableDictionary *cacheRepresentation;
- (id)initWithCacheRepresentation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)URLForVariant:(id)arg1;
- (struct CGSize)sizeForVariant:(id)arg1;
- (void)setArtwork:(id)arg1 forVariant:(id)arg2;
@property(readonly, nonatomic) long long numberOfVariants;
- (id)initWithScreenshotDictionary:(id)arg1;
- (id)init;
- (id)_initSKUIScreenshot;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIScreenshotDataConsumer : SKUIImageDataConsumer
{
    _Bool _forcesPortrait;
    _Bool _drawsBorder;
    struct CGSize _screenshotSize;
}

+ (id)consumerWithScreenshotSize:(struct CGSize)arg1;
+ (id)consumer;
@property(nonatomic) _Bool drawsBorder; // @synthesize drawsBorder=_drawsBorder;
@property(nonatomic) _Bool forcesPortrait; // @synthesize forcesPortrait=_forcesPortrait;
@property(readonly, nonatomic) struct CGSize constraintSize; // @synthesize constraintSize=_screenshotSize;
- (id)imageForImage:(id)arg1;
- (id)imageForColor:(id)arg1;
- (id)imageForColor:(id)arg1 size:(struct CGSize)arg2;

@end

@interface SKUIScreenshotsView : UIView
{
    UIView *_primaryView;
    UIView *_separatorView;
}

@property(retain, nonatomic) UIView *primaryView; // @synthesize primaryView=_primaryView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIScreenshotsViewController : UIViewController <SKUISlideshowViewControllerDataSource, SKUISlideshowViewControllerDelegate, UIScrollViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource>
{
    SKUIClientContext *_clientContext;
    UICollectionView *_collectionView;
    SKUIScreenshotDataConsumer *_dataConsumer;
    id <SKUIScreenshotsDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    NSArray *_screenshots;
    NSMutableArray *_screenshotImages;
    NSMutableArray *_screenshotRawImages;
    struct CGSize _screenshotMaxSize;
    SKUIVideoImageDataConsumer *_trailerConsumer;
    NSArray *_trailers;
    NSMutableArray *_trailerImages;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <SKUIScreenshotsDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_setTrailerImage:(id)arg1 forIndex:(long long)arg2;
- (void)_setImage:(id)arg1 forIndex:(long long)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (id)slideshowViewController:(id)arg1 poppedImageViewAtIndex:(long long)arg2;
- (void)slideshowViewController:(id)arg1 scrollToImageAtIndex:(long long)arg2;
- (id)slideshowViewController:(id)arg1 imageURLAtIndex:(long long)arg2 size:(struct CGSize *)arg3;
- (id)slideshowViewController:(id)arg1 imageAtIndex:(long long)arg2;
- (long long)numberOfItemsInSlideshowViewController:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)loadView;
- (void)reloadData;
- (id)initWithTrailers:(id)arg1 screenshots:(id)arg2 clientContext:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIScrollForwardingView : UIView
{
    UIScrollView *_scrollView;
}

@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface SKUISearchAppBundleView : UIView
{
    NSArray *_imageViews;
    NSArray *_labels;
    UILabel *_headerLabel;
    long long _count;
}

@property(nonatomic) long long count; // @synthesize count=_count;
- (void).cxx_destruct;
- (void)_reload;
- (void)layoutSubviews;
- (id)titleAtIndex:(long long)arg1;
- (void)setTitle:(id)arg1 atIndex:(long long)arg2;
- (id)imageAtIndex:(long long)arg1;
- (void)setImage:(id)arg1 atIndex:(long long)arg2;
@property(copy, nonatomic) NSString *headerTitle;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISearchBar : UISearchBar
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface SKUISearchBarController : NSObject <SKUISearchFieldDelegate, UISearchBarDelegate>
{
    SKUIFocusedTouchGestureRecognizer *_cancelTouchGestureRecognizer;
    SKUIClientContext *_clientContext;
    _Bool _displaysSearchBarInNavigationBar;
    UIViewController *_parentViewController;
    UISearchBar *_searchBar;
    SKUISearchFieldController *_searchFieldController;
    _Bool _showsResultsForEmptyField;
    _Bool _usesSearchFieldController;
    SKUISearchBarViewElement *_viewElement;
    SKUISearchBarViewElement *_searchBarViewElement;
}

@property(nonatomic) _Bool showsResultsForEmptyField; // @synthesize showsResultsForEmptyField=_showsResultsForEmptyField;
@property(retain, nonatomic) SKUISearchBarViewElement *searchBarViewElement; // @synthesize searchBarViewElement=_searchBarViewElement;
@property(nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(nonatomic) _Bool displaysSearchBarInNavigationBar; // @synthesize displaysSearchBarInNavigationBar=_displaysSearchBarInNavigationBar;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (id)_searchFieldController;
- (void)_removeCancelTouchGestureRecognizer;
- (id)_newSearchFieldController;
- (void)_dispatchSubmitEventWithText:(id)arg1 URL:(id)arg2 searchHintOriginalTerm:(id)arg3 searchHintIndex:(id)arg4;
- (void)_dispatchChangeEventWithText:(id)arg1;
- (void)_customizeSearchFieldController:(id)arg1;
- (void)_customizeSearchBar:(id)arg1;
- (void)_cancelGestureAction:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (_Bool)searchFieldControllerShouldBeginEditing:(id)arg1;
- (void)searchFieldController:(id)arg1 searchBarDidChangeText:(id)arg2;
- (void)searchFieldController:(id)arg1 requestSearch:(id)arg2;
@property(readonly, nonatomic) UISearchBar *searchBar;
- (void)resignActive:(_Bool)arg1;
- (void)reloadAfterDocumentUpdate;
- (void)dealloc;
- (id)initWithSearchBarViewElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISearchBarPageSection : SKUIStorePageSection
{
    SKUISearchBarController *_searchBarController;
}

- (void).cxx_destruct;
- (id)_searchBarController;
- (void)willAppearInContext:(id)arg1;
- (struct UIEdgeInsets)sectionContentInset;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;

@end

@interface SKUISearchBarViewElement : SKUIInputViewElement
{
    NSString *_accessoryText;
    SKUIViewElementText *_defaultText;
    NSString *_placeholderString;
    NSString *_searchHintsURLString;
    NSString *_trendingSearchURLString;
}

@property(readonly, nonatomic) NSString *trendingSearchURLString; // @synthesize trendingSearchURLString=_trendingSearchURLString;
@property(readonly, nonatomic) NSString *searchHintsURLString; // @synthesize searchHintsURLString=_searchHintsURLString;
@property(readonly, nonatomic) NSString *placeholderString; // @synthesize placeholderString=_placeholderString;
@property(readonly, nonatomic) SKUIViewElementText *defaultText; // @synthesize defaultText=_defaultText;
@property(readonly, nonatomic) NSString *accessoryText; // @synthesize accessoryText=_accessoryText;
- (void).cxx_destruct;
- (long long)pageComponentType;
- (unsigned long long)elementType;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUISearchCollectionViewCell : SKUIItemCollectionViewCell
{
    SKUICardCellLayout *_layout;
}

@property(readonly, nonatomic) SKUICardCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISearchCollectionViewFlowLayout : SKUIItemGridCollectionViewLayout
{
    UICollectionView *_collectionView;
    long long _numberOfRows;
    long long _numberOfColumns;
    struct CGSize _headerSize;
    double _horizontalPadding;
    double _verticalPadding;
    _Bool _backfills;
}

@property(nonatomic) _Bool backfills; // @synthesize backfills=_backfills;
@property(nonatomic) double verticalPadding; // @synthesize verticalPadding=_verticalPadding;
@property(nonatomic) double horizontalPadding; // @synthesize horizontalPadding=_horizontalPadding;
- (void).cxx_destruct;
- (void)prepareLayout;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)init;

@end

@interface SKUISearchDisplayController : UISearchDisplayController
{
    UILabel *_suffixLabel;
    NSMutableString *_paddingString;
}

- (void).cxx_destruct;
- (void)setActive:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_setSuffix:(id)arg1;

@end

@interface SKUISearchEditorialResult : NSObject
{
    SKUIArtworkList *_artwork;
    SKUILink *_buttonLink;
    long long _editorialIdentifier;
    NSString *_subtitle;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly, nonatomic) long long editorialIdentifier; // @synthesize editorialIdentifier=_editorialIdentifier;
@property(readonly, nonatomic) SKUILink *buttonLink; // @synthesize buttonLink=_buttonLink;
@property(readonly, nonatomic) SKUIArtworkList *artwork; // @synthesize artwork=_artwork;
- (void).cxx_destruct;
- (void)_setValuesWithEditorialDictionary:(id)arg1;
- (id)initWithLookupItem:(id)arg1;
- (id)initWithEditorialDictionary:(id)arg1 identifier:(long long)arg2;

@end

@interface SKUISearchFacet : NSObject <NSCopying>
{
    NSArray *_labels;
    NSString *_queryParameter;
    NSArray *_values;
}

@property(copy, nonatomic) NSArray *values; // @synthesize values=_values;
@property(copy, nonatomic) NSString *queryParameter; // @synthesize queryParameter=_queryParameter;
@property(copy, nonatomic) NSArray *labels; // @synthesize labels=_labels;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithFacetDictionary:(id)arg1;

@end

@interface SKUISearchFieldController : NSObject <UISearchDisplayDelegate, UITableViewDataSource, UITableViewDelegate, UISearchBarDelegate, SKUITrendingSearchPageViewDelegate>
{
    NSString *_baseHintsURLString;
    SKUIClientContext *_clientContext;
    SKUICompletionList *_completionList;
    id <SKUISearchFieldDelegate> _delegate;
    SSVLoadURLOperation *_loadOperation;
    long long _numberOfSearchResults;
    NSOperationQueue *_operationQueue;
    SKUISearchBar *_searchBar;
    NSString *_searchBarAccessoryText;
    SKUISearchDisplayController *_searchDisplayController;
    NSString *_trendingSearchURLString;
}

@property(copy, nonatomic) NSString *trendingSearchURLString; // @synthesize trendingSearchURLString=_trendingSearchURLString;
@property(copy, nonatomic) NSString *searchHintsURLString; // @synthesize searchHintsURLString=_baseHintsURLString;
@property(copy, nonatomic) NSString *searchBarAccessoryText; // @synthesize searchBarAccessoryText=_searchBarAccessoryText;
@property(nonatomic) long long numberOfSearchResults; // @synthesize numberOfSearchResults=_numberOfSearchResults;
@property(nonatomic) __weak id <SKUISearchFieldDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_setResponse:(id)arg1 error:(id)arg2;
- (void)_reloadTrendingVisibility;
- (void)_reloadData;
- (void)_loadResultsForSearchRequest:(id)arg1;
- (void)_adjustInsetsForResultsTableView:(id)arg1;
- (id)URLForTrendingSearchPageView:(id)arg1;
- (void)trendingSearchPageView:(id)arg1 didSelectSearch:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)searchDisplayController:(id)arg1 didLoadSearchResultsTableView:(id)arg2;
- (Class)_resultsTableViewClass;
- (void)searchDisplayControllerWillBeginSearch:(id)arg1;
- (void)searchDisplayController:(id)arg1 willShowSearchResultsTableView:(id)arg2;
- (_Bool)searchDisplayController:(id)arg1 shouldReloadTableForSearchString:(id)arg2;
- (_Bool)searchBarShouldBeginTouches:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarSearchButtonClicked:(id)arg1;
@property(nonatomic) _Bool showsResultsForEmptyField;
- (void)setSearchTerm:(id)arg1;
@property(nonatomic) _Bool displaysSearchBarInNavigationBar;
@property(readonly, nonatomic) UISearchBar *searchBar;
- (void)resignActive:(_Bool)arg1;
@property(readonly, nonatomic) UIViewController *contentsController;
- (void)dealloc;
- (id)initWithContentsController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISearchFieldTableView : UITableView
{
    SKUIClientContext *_clientContext;
    SKUILoadTrendingSearchPageOperation *_loadOperation;
    NSOperationQueue *_operationQueue;
    SKUITrendingSearchPage *_page;
    SKUITrendingSearchPageView *_pageView;
    id <SKUITrendingSearchPageViewDelegate> _trendingSearchDelegate;
    _Bool _trendingSearchesVisible;
}

@property(nonatomic) _Bool trendingSearchesVisible; // @synthesize trendingSearchesVisible=_trendingSearchesVisible;
@property(nonatomic) __weak id <SKUITrendingSearchPageViewDelegate> trendingSearchDelegate; // @synthesize trendingSearchDelegate=_trendingSearchDelegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_reloadView;
- (void)_setTrendingResponse:(id)arg1 error:(id)arg2;
- (void)_reloadData;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 style:(long long)arg2;

@end

@interface SKUISearchItem : SKUIItem
{
    SKUIScreenshot *_primaryScreenshot;
    NSArray *_screenshots;
    NSArray *_childItemIdentifiers;
    NSMutableDictionary *_loadedChildItems;
}

@property(readonly, nonatomic) NSArray *screenshots; // @synthesize screenshots=_screenshots;
@property(readonly, nonatomic) SKUIScreenshot *primaryScreenshot; // @synthesize primaryScreenshot=_primaryScreenshot;
- (void).cxx_destruct;
- (id)childItemIdentifiers;
- (id)childItemForIdentifier:(id)arg1;
- (id)loadedChildItems;
- (void)setChildItem:(id)arg1 forIdentifier:(id)arg2;
- (id)initWithLookupDictionary:(id)arg1;

@end

@interface SKUISearchNoResultsView : UIView
{
    UIImageView *_imageView;
    UILabel *_label;
    UIButton *_button;
}

@property(readonly, nonatomic) UIButton *button; // @synthesize button=_button;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setMessageWithSearchTerm:(id)arg1 spellCorrectedTerm:(id)arg2 clientContext:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISearchPage : NSObject <NSCopying>
{
    _Bool _autoCorrected;
    NSArray *_facets;
    SSMetricsConfiguration *_metricsConfiguration;
    NSString *_metricsPageDescription;
    long long _preAutoCorrectCount;
    NSArray *_relatedQueries;
    NSArray *_resultGroups;
    NSString *_searchTerm;
    NSString *_spellCorrectedTerm;
}

@property(copy, nonatomic) NSString *spellCorrectedTerm; // @synthesize spellCorrectedTerm=_spellCorrectedTerm;
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(copy, nonatomic) NSArray *resultGroups; // @synthesize resultGroups=_resultGroups;
@property(retain, nonatomic) NSArray *relatedQueries; // @synthesize relatedQueries=_relatedQueries;
@property(nonatomic) long long preAutoCorrectCount; // @synthesize preAutoCorrectCount=_preAutoCorrectCount;
@property(copy, nonatomic) NSString *metricsPageDescription; // @synthesize metricsPageDescription=_metricsPageDescription;
@property(retain, nonatomic) SSMetricsConfiguration *metricsConfiguration; // @synthesize metricsConfiguration=_metricsConfiguration;
@property(copy, nonatomic) NSArray *facets; // @synthesize facets=_facets;
@property(nonatomic) _Bool autoCorrected; // @synthesize autoCorrected=_autoCorrected;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) long long numberOfResults;

@end

@interface SKUISearchPageDataConsumer : SSVURLDataConsumer
{
    SKUIClientContext *_clientContext;
    NSString *_searchTerm;
}

+ (id)consumerWithClientContext:(id)arg1;
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
- (void).cxx_destruct;
- (id)_sortFacetWithSorts:(id)arg1;
- (id)_ageBandFacetWithAgeBands:(id)arg1;
- (id)_deviceFacet;
- (id)_priceFacet;
- (id)_newSearchResultGroupWithBubbleDictionary:(id)arg1 platformDictionary:(id)arg2 editorialDictionary:(id)arg3;
- (id)_categoriesFacetWithCategories:(id)arg1;
- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUISearchRelatedQuery : NSObject
{
    NSString *_searchTerm;
    NSURL *_URL;
}

@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
- (void).cxx_destruct;

@end

@interface SKUISearchRelatedView : UIView
{
    _UIBackdropView *_backdropView;
    UIView *_borderView;
    SKUIClientContext *_clientContext;
    id <SKUISearchRelatedViewDelegate> _delegate;
    NSArray *_relatedQueries;
    UILabel *_titleLabel;
    NSMutableArray *_relatedButtons;
    UIScrollView *_scrollView;
    UIView *_scrollViewSuperview;
    UILabel *_noRelatedLabel;
    UIButton *_backButton;
    UIView *_separatorView;
    NSString *_previousRelatedSearchTerm;
    CAGradientLayer *_mask;
}

@property(copy, nonatomic) NSString *previousRelatedSearchTerm; // @synthesize previousRelatedSearchTerm=_previousRelatedSearchTerm;
@property(retain, nonatomic) NSArray *relatedQueries; // @synthesize relatedQueries=_relatedQueries;
@property(nonatomic) __weak id <SKUISearchRelatedViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(readonly, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
- (void).cxx_destruct;
- (void)_backAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISearchRequest : NSObject <NSCopying>
{
    NSNumber *_searchHintIndex;
    NSString *_searchHintOriginalTerm;
    NSString *_term;
    NSURL *_url;
}

@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(copy, nonatomic) NSString *term; // @synthesize term=_term;
@property(copy, nonatomic) NSString *searchHintOriginalTerm; // @synthesize searchHintOriginalTerm=_searchHintOriginalTerm;
@property(copy, nonatomic) NSNumber *searchHintIndex; // @synthesize searchHintIndex=_searchHintIndex;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUISearchResultGroup : NSObject
{
    NSMutableIndexSet *_editorialIndexSet;
    NSMutableArray *_entities;
    NSString *_groupKind;
}

@property(readonly, nonatomic) NSString *groupKind; // @synthesize groupKind=_groupKind;
- (void).cxx_destruct;
- (void)_setGroupKind:(id)arg1;
- (void)_setEntity:(id)arg1 atIndex:(long long)arg2;
- (void)_removeEntitiesAtIndexes:(id)arg1;
- (void)_addEntity:(id)arg1 withIdentifier:(id)arg2 type:(long long)arg3;
@property(readonly, nonatomic) long long numberOfEntities;
- (long long)entityTypeAtIndex:(long long)arg1;
- (id)entityAtIndex:(long long)arg1;
@property(readonly, nonatomic) NSArray *availableEntities;
- (id)init;

@end

@interface SKUISearchResultGroupController : NSObject
{
    SKUISearchResultGroup *_resultGroup;
    id <SKUISearchResultGroupControllerDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    SKUIClientContext *_clientContext;
    NSMutableIndexSet *_itemIndexesToLoad;
    NSMutableIndexSet *_editorialIndexesToLoad;
    NSMutableIndexSet *_editorialArtworkIndexesToLoad;
    NSMutableIndexSet *_appBundleChildrenIndexesToLoad;
    NSMutableArray *_appBundleArtworkIndexPathsToLoad;
    NSMutableDictionary *_appBundleArtworkByIndexPaths;
    NSMutableDictionary *_artworksByIndex;
    NSMutableDictionary *_itemArtworkContextsBySize;
    NSIndexSet *_onScreenIndexes;
    NSMutableIndexSet *_removedIndexes;
}

@property(readonly, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) __weak id <SKUISearchResultGroupControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)_itemArtworkContextForCount:(long long)arg1;
- (void)_setItemArtworkResponse:(id)arg1 error:(id)arg2 forIndexPath:(id)arg3;
- (void)_setEditorialResponse:(id)arg1 error:(id)arg2 forIndex:(unsigned long long)arg3;
- (void)_setArtworkResponse:(id)arg1 error:(id)arg2 forIndex:(unsigned long long)arg3;
- (void)_setItemResponse:(id)arg1 error:(id)arg2 forIndexes:(id)arg3 childrenAtIndexes:(id)arg4;
- (void)_reloadIndexesToLoad;
- (void)_loadItemArtworkAtIndexPath:(id)arg1;
- (void)_loadArtworkAtIndex:(unsigned long long)arg1;
- (void)_loadEditorialAtIndex:(unsigned long long)arg1;
- (void)_loadItemsAtIndexes:(id)arg1 childrenAtIndexes:(id)arg2;
- (void)_loadMore;
- (id)_identifierAtIndex:(unsigned long long)arg1;
- (id)_itemAtIndex:(unsigned long long)arg1;
- (id)_editorialAtIndex:(unsigned long long)arg1;
- (id)itemArtworkAtIndex:(unsigned long long)arg1 subindex:(unsigned long long)arg2;
- (void)updateForVisibleIndexes:(id)arg1;
@property(readonly, nonatomic) long long numberOfEntities;
- (long long)entityTypeAtIndex:(long long)arg1;
- (id)identifierAtIndex:(unsigned long long)arg1;
- (id)editorialArtworkAtIndex:(unsigned long long)arg1;
- (id)itemAtIndex:(unsigned long long)arg1;
- (id)editorialAtIndex:(unsigned long long)arg1;
- (id)entityAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithSearchResultGroup:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUISearchSpellCorrectedCell : UICollectionViewCell
{
    _Bool _autoCorrected;
    SKUIClientContext *_clientContext;
    UIImageView *_imageView;
    UILabel *_label;
    long long _preAutoCorrectCount;
    NSString *_searchTerm;
    NSString *_spellCorrectedTerm;
    UIButton *_spellCorrectionButton;
}

@property(readonly, nonatomic) UIControl *spellCorrectionButton; // @synthesize spellCorrectionButton=_spellCorrectionButton;
@property(copy, nonatomic) NSString *spellCorrectedTerm; // @synthesize spellCorrectedTerm=_spellCorrectedTerm;
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(nonatomic) long long preAutoCorrectCount; // @synthesize preAutoCorrectCount=_preAutoCorrectCount;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) _Bool autoCorrected; // @synthesize autoCorrected=_autoCorrected;
- (void).cxx_destruct;
- (void)_reloadLabel;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISearchViewController : SKUIViewController <SKUISearchChildViewControllerDelegate, SKUIProductPageOverlayDelegate, SKUIMetricsViewController, SKUIViewControllerTesting>
{
    SKUIIPhoneSearchViewController *_iPhoneViewController;
    SKUIIPadSearchViewController *_iPadViewController;
    SSMetricsPageEvent *_lastPageEvent;
    SSVLoadURLOperation *_loadOperation;
    SKUIMetricsController *_metricsController;
    SKUIProductPageOverlayController *_overlayController;
    SKUISearchPage *_page;
    SKUISearchFieldController *_searchFieldController;
    NSURLRequest *_urlRequest;
    NSString *_searchTerm;
    NSDictionary *_facetSelections;
    NSString *_performanceTestName;
    NSArray *_searchFacets;
    NSMutableArray *_previousRelatedQueries;
    SSMetricsSearchEvent *_searchEvent;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(retain, nonatomic) SKUISearchFieldController *searchFieldController; // @synthesize searchFieldController=_searchFieldController;
- (void).cxx_destruct;
- (void)_setResponse:(id)arg1 error:(id)arg2;
- (void)_setMetricsController:(id)arg1;
- (void)_sendXEventWithDictionary:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)_searchWithURLRequest:(id)arg1 persistRelated:(_Bool)arg2 metricsEvent:(id)arg3;
- (void)_searchWithSearchTerm:(id)arg1 persistRelated:(_Bool)arg2 metricsEvent:(id)arg3 baseRequest:(id)arg4;
- (void)_reloadOrientation:(long long)arg1;
- (void)_reloadView;
- (void)_reloadChildViewController;
- (void)_metricsEnterEventNotification:(id)arg1;
- (void)_cancelButtonAction:(id)arg1;
- (_Bool)performTestWithName:(id)arg1 options:(id)arg2;
- (void)searchChildViewControllerDidChangeFacetSelections:(id)arg1 withMetricsEvent:(id)arg2;
- (void)searchChildViewController:(id)arg1 didSelectSearchTerm:(id)arg2;
- (void)searchChildViewControllerDidSelectRelatedBackButton:(id)arg1 withMetricsEvent:(id)arg2;
- (void)searchChildViewController:(id)arg1 didSelectRelatedQuery:(id)arg2 withMetricsEvent:(id)arg3;
- (void)searchChildViewController:(id)arg1 didSelectEditorial:(id)arg2;
- (void)searchChildViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (id)activeMetricsController;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)loadView;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (id)contentScrollView;
- (void)showError:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)reloadData;
- (void)searchWithSearchTerm:(id)arg1 metricsEvent:(id)arg2;
- (void)searchWithSearchTerm:(id)arg1;
- (void)searchWithExternalURL:(id)arg1;
- (void)searchWithURL:(id)arg1 metricsEvent:(id)arg2;
- (void)searchWithURL:(id)arg1;
- (void)scrollToTop;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISectionHeaderCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
    SKUISectionHeaderView *_headerView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISectionHeaderView : SKUIViewReuseView <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    struct CGSize _lastFitSize;
    NSArray *_lines;
    SKUIHeaderViewElement *_header;
    NSMapTable *_views;
}

+ (struct CGSize)_sizeForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_linesForViewElement:(id)arg1 width:(double)arg2 buttonSize:(struct CGSize)arg3 context:(id)arg4;
+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_buttonAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISectionViewElement : SKUIViewElement
{
}

@end

@interface SKUISegmentedControl : UISegmentedControl
{
}

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (struct CGRect)frameForSegmentAtIndex:(long long)arg1;

@end

@interface SKUISegmentedControlCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    SKUIDividerView *_bottomDividerView;
    SKUISegmentedControlViewElementController *_elementController;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISegmentedControlViewElement : SKUIViewElement
{
    long long _maximumNumberOfVisibleItems;
    NSString *_moreListTitle;
}

@property(readonly, nonatomic) NSString *moreListTitle; // @synthesize moreListTitle=_moreListTitle;
@property(readonly, nonatomic) long long maximumNumberOfVisibleItems; // @synthesize maximumNumberOfVisibleItems=_maximumNumberOfVisibleItems;
- (void).cxx_destruct;
- (void)_enumerateItemElementsUsingBlock:(CDUnknownBlockType)arg1;
- (long long)pageComponentType;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) NSArray *segmentItemTitles;
@property(readonly, nonatomic) long long initialSelectedItemIndex;
- (void)dispatchEventOfType:(unsigned long long)arg1 forItemAtIndex:(long long)arg2;
@property(readonly, nonatomic) SKUIDividerViewElement *bottomDivider;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUISegmentedControlViewElementController : NSObject <SKUIFlexibleSegmentedControlDelegate, SKUIMenuPopoverDelegate, SKUIMenuViewControllerDelegate>
{
    SKUIClientContext *_clientContext;
    long long _defaultMaximumNumberOfVisibleItems;
    double _desiredSegmentWidth;
    UIBarButtonItem *_menuSheetCancelButtonItem;
    SKUIMenuViewController *_menuSheetViewController;
    UIViewController *_parentViewController;
    SKUIMenuPopoverController *_popoverMenuViewController;
    SKUIFlexibleSegmentedControl *_segmentedControl;
    SKUISegmentedControlViewElement *_viewElement;
}

@property(nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(readonly, nonatomic) SKUISegmentedControlViewElement *viewElement; // @synthesize viewElement=_viewElement;
@property(nonatomic) double desiredSegmentWidth; // @synthesize desiredSegmentWidth=_desiredSegmentWidth;
@property(nonatomic) long long defaultMaximumNumberOfVisibleItems; // @synthesize defaultMaximumNumberOfVisibleItems=_defaultMaximumNumberOfVisibleItems;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_showPopoverMoreListWithTitles:(id)arg1;
- (void)_showMoreListSheetWithTitles:(id)arg1 selectedIndex:(long long)arg2;
- (id)_segmentedControl;
- (void)_reloadPropertiesForSegmentedControl:(id)arg1;
- (void)_destroyPopoverController;
- (void)_destroyMenuSheetViewController;
- (void)_connectToSegmentedControl:(id)arg1;
- (void)_cancelMenuAction:(id)arg1;
- (void)menuViewController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (void)menuPopover:(id)arg1 willRepositionToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (void)menuPopover:(id)arg1 didSelectMenuItemAtIndex:(long long)arg2;
- (void)menuPopoverDidCancel:(id)arg1;
- (void)segmentedControl:(id)arg1 showMoreListWithTitles:(id)arg2;
- (void)segmentedControl:(id)arg1 didSelectSegmentIndex:(long long)arg2;
@property(readonly, nonatomic) UIView *segmentedControlView;
- (void)reloadAfterDocumentUpdate;
- (void)dealloc;
- (id)initWithViewElement:(id)arg1 segmentedControl:(id)arg2;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISegmentedTableHeaderView : UIView
{
    _UIBackdropView *_backdropView;
    UIView *_borderView;
    UIView *_segmentedControl;
}

@property(readonly, nonatomic) _UIBackdropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) UIView *segmentedControl; // @synthesize segmentedControl=_segmentedControl;
- (void).cxx_destruct;
- (id)_borderView;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(nonatomic) _Bool hidesBorderView;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISeparatorView : UIView
{
    UIColor *_color1;
    UIColor *_color2;
    long long _separatorStyle;
}

@property(nonatomic) long long separatorStyle; // @synthesize separatorStyle=_separatorStyle;
@property(copy, nonatomic) UIColor *color2; // @synthesize color2=_color2;
@property(copy, nonatomic) UIColor *color1; // @synthesize color1=_color1;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SKUIShapeView : UIView
{
}

+ (Class)layerClass;

// Remaining properties
@property(readonly, retain, nonatomic) CAShapeLayer *layer; // @dynamic layer;

@end

@interface SKUIShareSheetActivityViewElement : SKUIViewElement
{
    NSString *_activityType;
    NSURL *_contentSourceURL;
}

@property(readonly, nonatomic) NSURL *contentSourceURL; // @synthesize contentSourceURL=_contentSourceURL;
@property(readonly, nonatomic) NSString *activityType; // @synthesize activityType=_activityType;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIURLViewElement *URL;
@property(readonly, nonatomic) SKUILabelViewElement *title;
@property(readonly, nonatomic) SKUILabelViewElement *message;
@property(readonly, nonatomic) SKUIImageViewElement *image;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIShareTemplateActivity : UIActivity
{
    SKUIClientContext *_clientContext;
    SKUIShareSheetActivityViewElement *_viewElement;
}

- (void).cxx_destruct;
- (void)performActivity;
- (_Bool)canPerformWithActivityItems:(id)arg1;
- (id)_beforeActivity;
- (id)activityType;
- (id)activityTitle;
- (id)activityImage;
- (id)initWithActivityViewElement:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIShareTemplateActivityViewController : UIActivityViewController
{
    SKUIClientContext *_clientContext;
    SKUIShareTemplateViewElement *_templateElement;
}

- (void).cxx_destruct;
- (id)_applicationActivitiesWithTemplateElement:(id)arg1 clientContext:(id)arg2;
- (id)_activityItemsWithTemplateElement:(id)arg1 clientContext:(id)arg2;
- (id)_titleForActivity:(id)arg1;
- (id)initWithTemplateElement:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIShareTemplateImageItemProvider : UIActivityItemProvider
{
    SKUIShareTemplateViewElement *_templateElement;
}

- (void).cxx_destruct;
- (id)item;
- (id)initWithTemplateElement:(id)arg1;

@end

@interface SKUIShareTemplateTextItemProvider : UIActivityItemProvider
{
    SKUIClientContext *_clientContext;
    SKUIShareTemplateViewElement *_templateElement;
}

- (void).cxx_destruct;
- (id)item;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)initWithTemplateElement:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIShareTemplateURLItemProvider : UIActivityItemProvider
{
    SKUIShareTemplateViewElement *_templateElement;
}

- (void).cxx_destruct;
- (id)item;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)initWithTemplateElement:(id)arg1;

@end

@interface SKUIShareTemplateViewElement : SKUIViewElement
{
}

- (id)activityForUIActivityType:(id)arg1;
- (id)activityForShareSheetActivityType:(id)arg1;
@property(readonly, nonatomic) NSArray *activities;

@end

@interface SKUIShelfCollectionViewCell : SKUICollectionViewCell <SKUIPerspectiveView>
{
    UICollectionView *_collectionView;
    struct UIEdgeInsets _contentInset;
    _Bool _rendersWithPerspective;
}

+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
@property(nonatomic) _Bool rendersWithPerspective; // @synthesize rendersWithPerspective=_rendersWithPerspective;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)applyLayoutAttributes:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIShelfCollectionViewLayout : UICollectionViewLayout
{
    SKUIShelfLayoutData *_layoutData;
}

+ (Class)layoutAttributesClass;
+ (float)snapToBoundariesDecelerationRate;
@property(retain, nonatomic) SKUIShelfLayoutData *layoutData; // @synthesize layoutData=_layoutData;
- (void).cxx_destruct;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (struct CGSize)collectionViewContentSize;

@end

@interface SKUIShelfLayoutData : NSObject
{
    double _columnSpacing;
    NSMutableArray *_columnWidths;
    struct UIEdgeInsets _contentInset;
    long long _numberOfRows;
    double *_rowHeights;
}

@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
@property(readonly, nonatomic) long long numberOfRows; // @synthesize numberOfRows=_numberOfRows;
@property(readonly, nonatomic) double columnSpacing; // @synthesize columnSpacing=_columnSpacing;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGSize totalContentSize;
- (struct CGSize)sizeForItemAtIndex:(long long)arg1;
- (double)rowHeightForIndex:(long long)arg1;
- (void)reloadWithItemCount:(long long)arg1 sizeBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long numberOfColumns;
- (void)enumerateRowsUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateColumnsUsingBlock:(CDUnknownBlockType)arg1;
- (double)columnWidthForIndex:(long long)arg1;
- (void)dealloc;
- (id)initWithNumberOfRows:(long long)arg1 columnSpacing:(double)arg2;

@end

@interface SKUIShelfPageComponent : SKUIPageComponent
{
}

- (long long)componentType;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUIShelfViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUIShelfPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate, SKUIViewElementSlideshowDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    SKUIViewElementLayoutContext *_cellLayoutContext;
    long long _lastNeedsMoreCount;
    long long _lockupType;
    _Bool _needsLayout;
    _Bool _needsReload;
    _Bool _rendersWithPerspective;
    UICollectionView *_shelfCollectionView;
    SKUIShelfLayoutData *_shelfLayoutData;
    SKUIShelfViewElement *_shelfViewElement;
    SKUIViewElementSlideshowController *_slideshowController;
    NSArray *_viewElements;
}

- (void).cxx_destruct;
- (id)_shelfCollectionView;
- (void)_reloadViewElementProperties;
- (void)_reloadShelfLayoutData;
- (double)_perspectiveHeightForContentSize:(double)arg1;
- (void)_performDefaultSelectActionForViewElement:(id)arg1;
- (long long)_lockupTypeForLockup:(id)arg1;
- (id)_dequeueCellForLockup:(id)arg1 collectionView:(id)arg2 indexPath:(id)arg3;
- (double)_columnSpacingForViewElements:(id)arg1;
- (Class)_cellClassForViewElement:(id)arg1;
- (Class)_cellClassForLockup:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 layout:(id)arg2 willApplyLayoutAttributes:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didConfirmButtonElement:(id)arg2 forItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)viewElementSlideshowWillDismiss:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (_Bool)updateCellWithIndexPath:(id)arg1 itemState:(id)arg2 animated:(_Bool)arg3;
- (struct UIEdgeInsets)sectionContentInset;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)invalidateCachedLayoutInformation;
- (void)getModalSourceViewForViewElement:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)deselectItemsAnimated:(_Bool)arg1;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUIShelfPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUIShelfViewElement : SKUIViewElement
{
    long long _numberOfRows;
    NSString *_slideshowTitle;
}

@property(readonly, nonatomic) NSString *slideshowTitle; // @synthesize slideshowTitle=_slideshowTitle;
@property(readonly, nonatomic) long long numberOfRows; // @synthesize numberOfRows=_numberOfRows;
- (void).cxx_destruct;
- (long long)pageComponentType;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUISimpleCollectionViewCell : UICollectionViewCell
{
    UIView *_contentChildView;
    struct UIEdgeInsets _contentInsets;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(retain, nonatomic) UIView *contentChildView; // @synthesize contentChildView=_contentChildView;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)applyLayoutAttributes:(id)arg1;

@end

@interface SKUISimpleContainerViewController : UIViewController
{
    UIViewController *_contentViewController;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
- (void).cxx_destruct;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (void)loadView;

@end

@interface SKUISizeToFitImageDataConsumer : SKUIImageDataConsumer
{
    struct CGSize _constraintSize;
    _Bool _custom;
    UIColor *_gradientEndColor;
    double _gradientHeight;
}

+ (id)consumerWithConstraintSize2:(struct CGSize)arg1;
+ (id)consumerWithConstraintSize:(struct CGSize)arg1;
@property(nonatomic) double gradientHeight; // @synthesize gradientHeight=_gradientHeight;
@property(retain, nonatomic) UIColor *gradientEndColor; // @synthesize gradientEndColor=_gradientEndColor;
@property(nonatomic) struct CGSize constraintSize; // @synthesize constraintSize=_constraintSize;
- (void).cxx_destruct;
- (void)_drawGradientWithContext:(struct CGContext *)arg1 imageRect:(struct CGRect)arg2;
- (id)imageForImage:(id)arg1;

@end

@interface SKUISizeValue : NSObject <NSCopying>
{
    long long _height;
    long long _width;
}

- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (void)unionWithSize:(struct CGSize)arg1;
@property(readonly, nonatomic) struct CGSize size;
- (id)initWithSize:(struct CGSize)arg1;

@end

@interface SKUISlideshowAnimator : NSObject <UIViewControllerAnimatorTransitioning>
{
    UIImageView *_imageView;
}

@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)animationEnded:(_Bool)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISlideshowDismissalAnimator : NSObject <UIViewControllerAnimatorTransitioning>
{
    UIImageView *_imageView;
    struct CGRect _imageRect;
}

@property(nonatomic) struct CGRect imageRect; // @synthesize imageRect=_imageRect;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)animationEnded:(_Bool)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISlideshowGalleryBarView : UIView
{
    UIToolbar *_toolbarView;
    UIView *_imageViewsContainer;
    NSMutableArray *_imageViews;
    id <SKUISlideshowGalleryBarViewDelegate> _delegate;
    unsigned long long _numberOfImages;
    unsigned long long _selectedImageIndex;
}

@property(nonatomic) unsigned long long selectedImageIndex; // @synthesize selectedImageIndex=_selectedImageIndex;
@property(nonatomic) unsigned long long numberOfImages; // @synthesize numberOfImages=_numberOfImages;
@property(nonatomic) __weak id <SKUISlideshowGalleryBarViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_handleTouch:(id)arg1 withEvent:(id)arg2;
- (id)_newImageView;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setImage:(id)arg1 atIndex:(long long)arg2;
- (id)imageAtIndex:(long long)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISlideshowImageScrollView : UIScrollView
{
    UIImageView *_imageView;
    struct CGPoint _centerPointBeforeResize;
    double _scaleBeforeResize;
    UIImage *_image;
}

@property(readonly, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)_resetMinMaxZoomScales;
- (void)_recoverFromResize;
- (void)_prepareToResize;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutSubviews;
- (struct CGRect)visibleRect;
- (void)zoomIntoPoint:(struct CGPoint)arg1;
- (void)resetZoomScale;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISlideshowItemViewController : UIViewController <UIScrollViewDelegate, UIGestureRecognizerDelegatePrivate>
{
    SKUIClientContext *_clientContext;
    UIView *_loadingView;
    _Bool _zoomingGestureThresholdBroken;
    struct CGPoint _lastContentOffset;
    double _lastZoomScale;
    id <SKUISlideshowItemViewControllerDelegate> _delegate;
    SKUISlideshowImageScrollView *_imageScrollView;
    long long _indexInCollection;
}

@property(nonatomic) long long indexInCollection; // @synthesize indexInCollection=_indexInCollection;
@property(readonly, nonatomic) SKUISlideshowImageScrollView *imageScrollView; // @synthesize imageScrollView=_imageScrollView;
@property(nonatomic) __weak id <SKUISlideshowItemViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_pinchGestureAction:(id)arg1;
- (id)_newLoadingView;
- (_Bool)_gestureRecognizer:(id)arg1 canPreventGestureRecognizer:(id)arg2;
- (_Bool)_gestureRecognizer:(id)arg1 canBePreventedByGestureRecognizer:(id)arg2;
- (id)viewForZoomingInScrollView:(id)arg1;
@property(retain, nonatomic) UIImage *itemImage;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISlideshowViewController : UIViewController <UIPageViewControllerDataSource, UIPageViewControllerDelegate, SKUISlideshowItemViewControllerDelegate, UIViewControllerTransitioningDelegate>
{
    SKUIClientContext *_clientContext;
    UIPageViewController *_pageViewController;
    NSOperationQueue *_remoteLoadQueue;
    NSMutableDictionary *_itemViewControllersCache;
    UIPercentDrivenInteractiveTransition *_transition;
    _Bool _overlayVisible;
    _Bool _shouldCancelDelayedOverlayVisibilityChange;
    _Bool _overlayVisibilityWillChangeWithDelay;
    _Bool _lockOverlayControlsVisible;
    struct {
        long long style;
        _Bool hidden;
    } _savedStatusBarState;
    id <SKUISlideshowViewControllerDataSource> _dataSource;
    id <SKUISlideshowViewControllerDelegate> _delegate;
    long long _currentIndex;
}

@property(nonatomic) long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(nonatomic) __weak id <SKUISlideshowViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <SKUISlideshowViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_restoreStatusBarAppearanceState;
- (void)_saveStatusBarAppearanceState;
- (void)_setOverlayVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_fadeOutOverlayAfterDelay:(unsigned long long)arg1;
- (void)_toggleFadeOverlay;
- (void)_doneButtonTapped:(id)arg1;
- (void)_contentViewTapped:(id)arg1;
- (void)_updateTitleWithIndex:(long long)arg1;
- (void)_updateCurrentIndex;
- (id)_itemViewControllerForIndex:(long long)arg1;
- (void)slideshowItemViewControllerDidDismissWithPinchGesture:(id)arg1 ratio:(double)arg2;
- (void)slideshowItemViewControllerDidBeginPinchGesture:(id)arg1;
- (void)pageViewController:(id)arg1 willTransitionToViewControllers:(id)arg2;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)currentItemViewController;
- (void)reloadData;
- (id)interactionControllerForDismissal:(id)arg1;
- (id)animatorForDismissedController:(id)arg1;
- (id)animatorForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISocialActivitiesViewElement : SKUIViewElement
{
}

@end

@interface SKUISoftwareLibraryInterface : NSObject <SKUILibraryInterface>
{
}

- (id)stateForLibraryItem:(id)arg1;
- (_Bool)performActionForLibraryItem:(id)arg1;
- (id)exposedPlatformItemKinds;
- (void)enumerateStatesForLibraryItems:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISortDataRequest : SKUIResourceRequest <NSCopying>
{
    id <SKUISortDataRequestDelegate> _delegate;
    NSURL *_sortURL;
}

@property(readonly, nonatomic) NSURL *sortURL; // @synthesize sortURL=_sortURL;
@property(nonatomic) __weak id <SKUISortDataRequestDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)newLoadOperation;
- (void)finishWithResource:(id)arg1;
- (id)initWithSortURL:(id)arg1;

@end

@interface SKUISpacePageComponent : SKUIPageComponent
{
    double _height;
}

@property(readonly, nonatomic) double height; // @synthesize height=_height;
- (long long)componentType;
- (id)initWithCustomPageContext:(id)arg1;

@end

@interface SKUISpacePageSection : SKUIStorePageSection
{
}

- (long long)numberOfCells;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)willAppearInContext:(id)arg1;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUISpacePageComponent *pageComponent; // @dynamic pageComponent;

@end

@interface SKUISpacerCollectionViewCell : SKUICollectionViewCell <SKUIViewElementView>
{
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISpacerViewElement : SKUIViewElement
{
}

@end

@interface SKUISplitViewDocumentViewController : SKUIViewController <SKUINavigationDocumentDelegate, SKUIDocumentViewController>
{
    UIViewController *_delayingPresentationViewController;
    SKUINavigationDocumentController *_leftNavigationDocumentController;
    SKUINavigationDocumentController *_rightNavigationDocumentController;
    UISplitViewController *_splitViewController;
    SKUISplitViewTemplateElement *_templateElement;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (void)_skui_endDelayingPresentation;
- (void)_reloadSplitViewControllers;
- (_Bool)_isFullyPopulated;
- (id)_defaultBackgroundColor;
- (void)navigationDocumentStackDidChange:(id)arg1;
- (void)loadView;
- (void)skui_viewWillAppear:(_Bool)arg1;
- (id)leftBarButtonItemsForDocument:(id)arg1;
- (void)documentDidUpdate:(id)arg1;
- (void)delayPresentationIfNeededForParentViewController:(id)arg1;
- (void)dealloc;
- (id)initWithTemplateElement:(id)arg1 clientContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISplitViewTemplateElement : SKUIViewElement
{
    SKUIJSDOMFeatureNavigationDocument *_leftNavigationDocument;
    long long _preferredDisplayMode;
    SKUIJSDOMFeatureNavigationDocument *_rightNavigationDocument;
}

+ (id)supportedFeatures;
@property(readonly, nonatomic) long long preferredDisplayMode; // @synthesize preferredDisplayMode=_preferredDisplayMode;
- (void).cxx_destruct;
- (id)_splitElementForIndex:(long long)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) _Bool usesInlineSplitContent;
@property(readonly, nonatomic) SKUIViewElement *rightSplitElement;
@property(readonly) SKUIJSDOMFeatureNavigationDocument *rightNavigationDocument;
@property(readonly, nonatomic) SKUIViewElement *leftSplitElement;
@property(readonly) SKUIJSDOMFeatureNavigationDocument *leftNavigationDocument;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIStackDocumentViewController : SKUIViewController <SKUIIndexBarControlControllerDataSource, SKUIIndexBarControlControllerDelegate, SKUIIndexBarEntryListControllerDelegate, SKUIModalSourceViewProvider, SKUIViewControllerTesting, SKUIDocumentViewController>
{
    NSArray *_entryListControllers;
    SKUIIndexBarControlController *_indexBarControlController;
    long long _layoutStyle;
    SKUIResourceLoader *_resourceLoader;
    SKUIStorePageSectionsViewController *_sectionsViewController;
    SKUIStackTemplateElement *_templateElement;
    NSMapTable *_viewElementToEntryListController;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
- (void).cxx_destruct;
- (void)_updateIndexBarVisibility;
- (void)_updateEntryListControllersWithReload:(_Bool)arg1;
- (_Bool)_tryToScrollToSectionAtIndexPath:(id)arg1;
- (_Bool)_shouldShowIndexBar;
- (id)_resourceLoader;
- (long long)_pinningTransitionStyle;
- (id)_pageSplitsDescription;
- (id)_pageComponentsWithViewElements:(id)arg1;
- (long long)_maxGlobalIndex;
- (id)_indexPathFromGlobalIndex:(long long)arg1;
- (id)_indexBarViewElement;
- (id)_indexBarControlController;
- (long long)_globalIndexFromIndexPath:(id)arg1;
- (void)_configureIndexBarControl:(id)arg1;
- (id)_colorScheme;
- (_Bool)performTestWithName:(id)arg1 options:(id)arg2;
- (void)getModalSourceViewForElementIdentifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)indexBarEntryListControllerDidInvalidate:(id)arg1;
- (void)indexBarControlControllerDidSelectBeyondTop:(id)arg1;
- (void)indexBarControlControllerDidSelectBeyondBottom:(id)arg1;
- (void)indexBarControlController:(id)arg1 didSelectEntryDescriptorAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInIndexBarControlController:(id)arg1;
- (long long)indexBarControlController:(id)arg1 numberOfEntryDescriptorsInSection:(long long)arg2;
- (id)indexBarControlController:(id)arg1 entryDescriptorAtIndexPath:(id)arg2;
- (id)impressionableViewElements;
- (void)documentDidUpdate:(id)arg1;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (void)loadView;
- (void)skui_viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithTemplateElement:(id)arg1 layoutStyle:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStackTemplateElement : SKUIViewElement
{
    NSMutableArray *_collectionElements;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long numberOfSplits;
@property(readonly, nonatomic) SKUINavigationBarViewElement *navigationBarElement;
@property(readonly, nonatomic) SKUIIndexBarViewElement *indexBarViewElement;
@property(readonly, nonatomic) NSArray *collectionElements;
- (id)applyUpdatesWithElement:(id)arg1;

@end

@interface SKUIStackView : UIView
{
    UIImage *_image;
    NSMutableArray *_stackViews;
    long long _stackViewStyle;
    UIWindow *_window;
}

@property(readonly, nonatomic) long long stackViewStyle; // @synthesize stackViewStyle=_stackViewStyle;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (long long)_stackDepth;
- (struct CGSize)_sizeOfItemAtIndex:(double)arg1;
- (struct UIOffset)_relativeOffsetOfItemAtIndex:(long long)arg1 withCenter:(struct CGPoint)arg2;
- (struct UIOffset)_relativeOffsetForMinimumRelativeOffset:(struct UIOffset)arg1 maximumRelativeOffset:(struct UIOffset)arg2 normalizedDistanceFromVanishingPoint:(struct CGSize)arg3;
- (struct CGSize)_normalizedDistanceFromVanishingPointForCenter:(struct CGPoint)arg1 perspectiveTargetView:(id)arg2;
- (struct CGSize)_levelInsetSize;
- (struct CGPoint)_centerInPerspectiveTargetViewCoordinates;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)performCompressionAnimationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithStackViewStyle:(long long)arg1;
- (id)_initSKUIStackView;

@end

@interface SKUIStackViewItemView : UIView
{
    UIColor *_borderColor;
    UIImage *_image;
    _Bool _shouldFlipImageHorizontal;
    _Bool _shouldFlipImageVertical;
}

@property(nonatomic) _Bool shouldFlipImageVertical; // @synthesize shouldFlipImageVertical=_shouldFlipImageVertical;
@property(nonatomic) _Bool shouldFlipImageHorizontal; // @synthesize shouldFlipImageHorizontal=_shouldFlipImageHorizontal;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface SKUIStackedBar : UIView
{
    id <SKUIStackedBarDelegate> _delegate;
    _UIBackdropView *_backdropView;
    NSArray *_items;
    NSArray *_cells;
    _Bool _lastItemExpanded;
    _Bool _hidesStatusBar;
    _Bool _splitViewStyle;
    _Bool _alwaysShowsBackButton;
    _Bool _zeroHeightWhenFirstChildExpanded;
    double _offset;
    UIView *_wrapperView;
    UIView *_maskView;
    double _newOffset;
}

@property(nonatomic) double offset; // @synthesize offset=_offset;
@property(nonatomic) _Bool zeroHeightWhenFirstChildExpanded; // @synthesize zeroHeightWhenFirstChildExpanded=_zeroHeightWhenFirstChildExpanded;
@property(nonatomic) _Bool splitViewStyle; // @synthesize splitViewStyle=_splitViewStyle;
@property(nonatomic) _Bool hidesStatusBar; // @synthesize hidesStatusBar=_hidesStatusBar;
@property(nonatomic) _Bool lastItemExpanded; // @synthesize lastItemExpanded=_lastItemExpanded;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) _Bool alwaysShowsBackButton; // @synthesize alwaysShowsBackButton=_alwaysShowsBackButton;
@property __weak id <SKUIStackedBarDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_selectItemAtIndex:(long long)arg1;
- (void)_reload;
- (void)_resetNewOffset;
- (void)_backAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)animateToFullSizeIfNecessary;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)setLastItemExpanded:(_Bool)arg1 animated:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIStackedBarCell : UIButton
{
    _Bool _expanded;
    UILabel *_expandedLabel;
    UIButton *_backButton;
    UIView *_separator;
}

@property(readonly, nonatomic) UIButton *backButton; // @synthesize backButton=_backButton;
@property(nonatomic) _Bool expanded; // @synthesize expanded=_expanded;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setTitle:(id)arg1 forState:(unsigned long long)arg2;
- (void)setHighlighted:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIStackedImageView : SKUIImageView <MPUStackViewDataSource>
{
    long long _stackDepth;
    MPUStackView *_stackView;
}

+ (struct SKUIStackedImageConfiguration)_configurationForSize:(struct CGSize)arg1;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
- (void).cxx_destruct;
- (void)stackView:(id)arg1 didCreateItem:(id)arg2;
- (void)stackView:(id)arg1 applyAttributesToItem:(id)arg2 atIndex:(long long)arg3;
- (long long)numberOfItemsInStackView:(id)arg1;
- (void)layoutSubviews;
@property(nonatomic) struct CGPoint vanishingPoint;
- (void)updateForChangedDistanceFromVanishingPoint;
@property(nonatomic) __weak UIView *perspectiveTargetView;
- (void)setImageSize:(struct CGSize)arg1;
- (void)setImage:(id)arg1;
- (void)performCompressionAnimationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStackedPopTransition : NSObject <UIViewControllerAnimatedTransitioning>
{
    double _split;
    SKUIStackedBar *_fromBar;
    SKUIStackedBar *_toBar;
}

@property(retain, nonatomic) SKUIStackedBar *toBar; // @synthesize toBar=_toBar;
@property(retain, nonatomic) SKUIStackedBar *fromBar; // @synthesize fromBar=_fromBar;
@property(nonatomic) double split; // @synthesize split=_split;
- (void).cxx_destruct;
- (double)transitionDuration:(id)arg1;
- (void)animateTransition:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStackedPushTransition : NSObject <UIViewControllerAnimatedTransitioning>
{
    double _split;
    SKUIStackedBar *_fromBar;
    SKUIStackedBar *_toBar;
}

@property(retain, nonatomic) SKUIStackedBar *toBar; // @synthesize toBar=_toBar;
@property(retain, nonatomic) SKUIStackedBar *fromBar; // @synthesize fromBar=_fromBar;
@property(nonatomic) double split; // @synthesize split=_split;
- (void).cxx_destruct;
- (double)transitionDuration:(id)arg1;
- (void)animateTransition:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStarBarView : UIView
{
    UIImage *_emptyStarImage;
    UIImage *_fullStarImage;
    long long _numberOfStars;
    double _value;
}

@property(nonatomic) double value; // @synthesize value=_value;
@property(nonatomic) long long numberOfStars; // @synthesize numberOfStars=_numberOfStars;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIStarBarViewElement : SKUIViewElement
{
    long long _numberOfRatings;
    long long _numberOfStars;
    float _value;
}

@property(readonly, nonatomic) float value; // @synthesize value=_value;
@property(readonly, nonatomic) long long numberOfStars; // @synthesize numberOfStars=_numberOfStars;
@property(readonly, nonatomic) long long numberOfRatings; // @synthesize numberOfRatings=_numberOfRatings;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIStarHistogramCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
}

+ (id)_attributedStringForLabelViewElement:(id)arg1;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStarHistogramViewElement : SKUIViewElement
{
}

- (long long)pageComponentType;

@end

@interface SKUIStarRatingControl : UIControl
{
    long long _previousUserRating;
    UIImageView *_emptyStarsImageView;
    UIImageView *_filledStarsImageView;
    long long _userRating;
    float _starSpacing;
    float _starWidth;
}

@property(nonatomic) long long userRating; // @synthesize userRating=_userRating;
@property(nonatomic) float starWidth; // @synthesize starWidth=_starWidth;
@property(nonatomic) float starSpacing; // @synthesize starSpacing=_starSpacing;
- (void).cxx_destruct;
- (void)_updateUserRatingWithTouch:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)cancelTrackingWithEvent:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)continueTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (_Bool)beginTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
@property(retain, nonatomic) UIImage *filledStarsImage;
@property(retain, nonatomic) UIImage *emptyStarsImage;

@end

@interface SKUIStarRatingControlView : UIControl <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    UIImage *_emptyStars;
    SKUIStarRatingViewElement *_viewElement;
    SKUIStarRatingControl *_control;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(retain, nonatomic) SKUIStarRatingControl *control; // @synthesize control=_control;
- (void).cxx_destruct;
- (void)didRating:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)setEnabled:(_Bool)arg1;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStarRatingQueue : NSObject
{
    SKUIClientContext *_clientContext;
    NSOperationQueue *_queue;
    SKUIReviewConfiguration *_reviewConfiguration;
    UIWindow *_window;
}

@property(nonatomic) __weak UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)_setRating:(long long)arg1 forItem:(id)arg2 account:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setRating:(long long)arg1 forItem:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)initWithClientContext:(id)arg1 reviewConfiguration:(id)arg2;
- (id)init;

@end

@interface SKUIStarRatingView : UIView
{
    double _elementSpacing;
    UIImageView *_ratingStarsImageView;
    UILabel *_textLabel;
}

@property(nonatomic) double elementSpacing; // @synthesize elementSpacing=_elementSpacing;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(readonly, nonatomic) UILabel *textLabel;
@property(retain, nonatomic) UIImage *ratingStarsImage;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIStarRatingViewElement : SKUIViewElement
{
    float _ratingValue;
    SKUIViewElementText *_text;
    long long _starType;
    _Bool _enabled;
}

@property(readonly, nonatomic) float ratingValue; // @synthesize ratingValue=_ratingValue;
@property(readonly, nonatomic) long long starType; // @synthesize starType=_starType;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIViewElementText *text; // @synthesize text=_text;
- (_Bool)isEnabled;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIStarRatingViewElementView : UIView <SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    long long _elementSpacing;
    UIImage *_starRatingImage;
    SKUIAttributedStringLayout *_textLayout;
}

+ (id)_attributedStringWithViewElement:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
@property(nonatomic) long long elementSpacing; // @synthesize elementSpacing=_elementSpacing;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStateRestorationContext : NSObject
{
    SKUIClientContext *_clientContext;
}

+ (id)sharedContext;
+ (void)setSharedContext:(id)arg1;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;

@end

@interface SKUIStoreDialogController : NSObject <UIAlertViewDelegate>
{
    NSMutableArray *_alerts;
    NSMutableArray *_dialogs;
}

- (void).cxx_destruct;
- (void)_performActionForDialog:(id)arg1 buttonIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)presentDialog:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStoreNotes : NSObject
{
    NSString *_standardNotes;
}

@property(retain, nonatomic) NSString *standardNotes; // @synthesize standardNotes=_standardNotes;
- (void).cxx_destruct;

@end

@interface SKUIStorePageCollectionViewLayout : UICollectionViewFlowLayout <SKUIStorePageCollectionViewLayout>
{
    NSString *_backdropGroupName;
    UIColor *_collectionViewBackgroundColor;
    _Bool _hasValidIndexPathsForPinningItems;
    _Bool _hasValidPinnedBackdropViewStyle;
    _Bool _hasValidPinningLayoutInformation;
    long long _inLayoutAttributesForElementsCount;
    NSMapTable *_indexPathToItemPinningConfiguration;
    NSMapTable *_indexPathToPinningLayoutInformation;
    NSArray *_indexPathsForPinningItems;
    double _overrideContentWidth;
    long long _pinnedBackdropViewStyle;
    _Bool _rendersWithPerspective;
    struct {
        unsigned int respondsToIndexPathsForPinningItems:1;
        unsigned int respondsToPinningContentInsetForItemAtIndexPath:1;
        unsigned int respondsToPinningStyleForItemAtIndexPath:1;
        unsigned int respondsToPinningTransitionStyleForItemAtIndexPath:1;
        unsigned int respondsToWillApplyLayoutAttributes:1;
    } _collectionViewDelegateFlags;
    NSArray *_updateItems;
    _Bool _allowsPinningTransitions;
    NSIndexSet *_expandChildPageSectionsIndexSet;
}

+ (Class)layoutAttributesClass;
+ (Class)invalidationContextClass;
@property(copy, nonatomic) NSIndexSet *expandChildPageSectionsIndexSet; // @synthesize expandChildPageSectionsIndexSet=_expandChildPageSectionsIndexSet;
@property(nonatomic) _Bool allowsPinningTransitions; // @synthesize allowsPinningTransitions=_allowsPinningTransitions;
@property(nonatomic) _Bool rendersWithPerspective; // @synthesize rendersWithPerspective=_rendersWithPerspective;
@property(nonatomic) double overrideContentWidth; // @synthesize overrideContentWidth=_overrideContentWidth;
@property(copy, nonatomic) NSString *backdropGroupName; // @synthesize backdropGroupName=_backdropGroupName;
- (void).cxx_destruct;
- (struct CGRect)_targetFrameForStartingFrame:(struct CGRect)arg1 itemPinningConfiguration:(id)arg2 layoutInformation:(id)arg3 atIndexPath:(id)arg4 returningIsPinning:(out _Bool *)arg5;
- (long long)_pinningTransitionStyleForItemPinningConfiguration:(id)arg1 atIndexPath:(id)arg2;
- (long long)_pinningStyleForItemPinningConfiguration:(id)arg1 atIndexPath:(id)arg2;
- (struct CGRect)_pinningFrameForStartingFrame:(struct CGRect)arg1 itemPinningConfiguration:(id)arg2 atIndexPath:(id)arg3;
- (struct UIEdgeInsets)_pinningContentInsetForItemPinningConfiguration:(id)arg1 atIndexPath:(id)arg2;
- (long long)_pinnedBackdropViewStyle;
- (id)_layoutAttributesForPinnedBackdropDecorationViewAtIndexPath:(id)arg1 pinningConfiguration:(id)arg2 layoutInformation:(id)arg3;
- (id)_itemPinningLayoutInformationForItemAtIndexPath:(id)arg1;
- (id)_itemPinningConfigurationForItemAtIndexPath:(id)arg1;
- (void)_invalidatePinningLayoutInformation;
- (id)_indexPathsForPinningItems;
- (id)_getCollectionViewUpdateItemForItemFromIndex:(long long)arg1 initalLayout:(_Bool)arg2;
- (void)_configureCellLayoutAttributes:(id)arg1 forItemWithPinningConfiguration:(id)arg2 layoutInformation:(id)arg3 atIndexPath:(id)arg4 allowPinning:(_Bool)arg5 returningIsPinning:(out _Bool *)arg6;
- (void)_calculatePinningLayoutInformation;
- (void)_appendAdditionalLayoutAttributesForPinningItemsInRect:(struct CGRect)arg1 toArray:(id)arg2;
- (_Bool)_allowsBackdropDecorationForItemPinningConfiguration:(id)arg1 atIndexPath:(id)arg2;
- (id)pinnedLayoutAttributesForItemsInRect:(struct CGRect)arg1;
- (id)layoutAttributesForUnpinnedItemAtIndexPath:(id)arg1;
- (void)_updateItemsLayoutForRect:(struct CGRect)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (void)prepareLayout;
- (void)prepareForCollectionViewUpdates:(id)arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)layoutAttributesForDecorationViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (void)invalidateLayoutWithContext:(id)arg1;
- (id)invalidationContextForBoundsChange:(struct CGRect)arg1;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (struct CGSize)collectionViewContentSize;
@property(readonly, nonatomic) NSArray *indexPathsForPinningItems;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStorePageCollectionViewLayoutInvalidationContext : UICollectionViewFlowLayoutInvalidationContext
{
    _Bool _invalidateItemPinningLayoutInformation;
}

@property(nonatomic) _Bool invalidateItemPinningLayoutInformation; // @synthesize invalidateItemPinningLayoutInformation=_invalidateItemPinningLayoutInformation;

@end

@interface SKUIStorePageItemPinningConfiguration : NSObject
{
    _Bool _hasValidPinningContentInset;
    _Bool _hasValidPinningStyle;
    _Bool _hasValidPinningTransitionStyle;
    long long _pinningStyle;
    long long _pinningTransitionStyle;
    struct UIEdgeInsets _pinningContentInset;
}

@property(readonly, nonatomic) _Bool hasValidPinningTransitionStyle; // @synthesize hasValidPinningTransitionStyle=_hasValidPinningTransitionStyle;
@property(nonatomic) long long pinningTransitionStyle; // @synthesize pinningTransitionStyle=_pinningTransitionStyle;
@property(readonly, nonatomic) _Bool hasValidPinningStyle; // @synthesize hasValidPinningStyle=_hasValidPinningStyle;
@property(nonatomic) long long pinningStyle; // @synthesize pinningStyle=_pinningStyle;
@property(readonly, nonatomic) _Bool hasValidPinningContentInset; // @synthesize hasValidPinningContentInset=_hasValidPinningContentInset;
@property(nonatomic) struct UIEdgeInsets pinningContentInset; // @synthesize pinningContentInset=_pinningContentInset;
- (void)invalidatePinningTransitionStyle;
- (void)invalidatePinningStyle;
- (void)invalidatePinningContentInset;

@end

@interface SKUIStorePageItemPinningLayoutInformation : NSObject
{
    double _afterPinningLocationYAdditions;
    double _beforePinningLocationYAdditions;
    struct CGRect _availablePinningFrame;
    struct CGRect _layoutAttributesFrame;
}

@property(nonatomic) double beforePinningLocationYAdditions; // @synthesize beforePinningLocationYAdditions=_beforePinningLocationYAdditions;
@property(nonatomic) double afterPinningLocationYAdditions; // @synthesize afterPinningLocationYAdditions=_afterPinningLocationYAdditions;
@property(nonatomic) struct CGRect layoutAttributesFrame; // @synthesize layoutAttributesFrame=_layoutAttributesFrame;
@property(nonatomic) struct CGRect availablePinningFrame; // @synthesize availablePinningFrame=_availablePinningFrame;

@end

@interface SKUIStorePagePinnedBackdropDecorationView : UICollectionReusableView
{
    _UIBackdropView *_backdropView;
    UIView *_backgroundView;
    _UIBackdropViewSettings *_backdropStyleDefaultSettings;
}

- (void).cxx_destruct;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIStorePagePinnedBackdropLayoutAttributes : UICollectionViewLayoutAttributes <NSCopying>
{
    UIColor *_backdropColor;
    long long _backdropStyle;
    _Bool _hidesBackdropView;
    double _transitionProgress;
    NSString *_backdropGroupName;
}

@property(copy, nonatomic) NSString *backdropGroupName; // @synthesize backdropGroupName=_backdropGroupName;
@property(nonatomic) double transitionProgress; // @synthesize transitionProgress=_transitionProgress;
@property(nonatomic) _Bool hidesBackdropView; // @synthesize hidesBackdropView=_hidesBackdropView;
@property(nonatomic) long long backdropStyle; // @synthesize backdropStyle=_backdropStyle;
@property(retain, nonatomic) UIColor *backdropColor; // @synthesize backdropColor=_backdropColor;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUIStorePageSectionContext : NSObject
{
    SKUIMetricsImpressionSession *_activeMetricsImpressionSession;
    double _activePageWidth;
    UICollectionView *_collectionView;
    SKUIColorScheme *_colorScheme;
    long long _defaultPinningTransitionStyle;
    SKUIItemOfferButtonAppearance *_itemOfferButtonAppearance;
    double _landscapePageWidth;
    SKUIMetricsController *_metricsController;
    SKUIStorePageSectionsViewController *_parentViewController;
    UIColor *_placeholderColor;
    double _portraitPageWidth;
    SKUIResourceLoader *_resourceLoader;
    SKUILayoutCache *_textLayoutCache;
    long long _layoutStyle;
}

@property(readonly, nonatomic) SKUILayoutCache *textLayoutCache; // @synthesize textLayoutCache=_textLayoutCache;
@property(readonly, nonatomic) SKUIResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(readonly, nonatomic) double portraitPageWidth; // @synthesize portraitPageWidth=_portraitPageWidth;
@property(readonly, nonatomic) __weak SKUIStorePageSectionsViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(readonly, nonatomic) SKUIMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(readonly, nonatomic) long long layoutStyle; // @synthesize layoutStyle=_layoutStyle;
@property(readonly, nonatomic) double landscapePageWidth; // @synthesize landscapePageWidth=_landscapePageWidth;
@property(readonly, nonatomic) long long defaultPinningTransitionStyle; // @synthesize defaultPinningTransitionStyle=_defaultPinningTransitionStyle;
@property(readonly, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(readonly, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(readonly, nonatomic) double activePageWidth; // @synthesize activePageWidth=_activePageWidth;
@property(readonly, nonatomic) SKUIMetricsImpressionSession *activeMetricsImpressionSession; // @synthesize activeMetricsImpressionSession=_activeMetricsImpressionSession;
- (void).cxx_destruct;
- (void)_setTextLayoutCache:(id)arg1;
- (void)_setResourceLoader:(id)arg1;
- (void)_setPortraitPageWidth:(double)arg1;
- (void)_setParentViewController:(id)arg1;
- (void)_setMetricsController:(id)arg1;
- (void)_setLayoutStyle:(long long)arg1;
- (void)_setLandscapePageWidth:(double)arg1;
- (void)_setDefaultPinningTransitionStyle:(long long)arg1;
- (void)_setColorScheme:(id)arg1;
- (void)_setCollectionView:(id)arg1;
- (void)_setActivePageWidth:(double)arg1;
- (void)_setActiveMetricsImpressionSession:(id)arg1;
@property(readonly, nonatomic) UIColor *placeholderColor;
@property(readonly, nonatomic) SKUIItemOfferButtonAppearance *itemOfferButtonAppearance;
@property(readonly, nonatomic) SKUIClientContext *clientContext;
- (id)init;

@end

@interface SKUIStorePageSectionsViewController : SKUIViewController <SKUIItemStateCenterObserver, SKUILayoutCacheDelegate, SKUIProductPageOverlayDelegate, SKUIResourceLoaderDelegate, SKUIStorePageCollectionViewDelegate, SKUIViewControllerTesting, UICollectionViewDataSource, UIGestureRecognizerDelegate>
{
    SKUIProductPageOverlayController *_activeOverlayController;
    SKUIMetricsImpressionSession *_activeMetricsImpressionSession;
    SKUICollectionView *_collectionView;
    UITapGestureRecognizer *_collectionViewTapGestureRecognizer;
    SKUIColorScheme *_colorScheme;
    struct UIEdgeInsets _contentInsetAdjustments;
    id _deferredSplitsDescription;
    id <SKUIStorePageSectionsDelegate> _delegate;
    _Bool _delegateWantsDidScroll;
    _Bool _didInitialReload;
    NSMapTable *_expandSectionContexts;
    NSMutableIndexSet *_expandInsertSections;
    NSMutableIndexSet *_expandRemoveSections;
    long long _ignoreSectionsChangeCount;
    SKUIIndexBarControl *_indexBarControl;
    NSIndexPath *_indexPathOfEditedCell;
    NSArray *_initialOverlayURLs;
    NSValue *_lastKnownSize;
    long long _layoutStyle;
    NSMapTable *_menuSectionContexts;
    SKUIMetricsController *_metricsController;
    SKUIProductPageOverlayController *_overlayController;
    long long _pinningTransitionStyle;
    _Bool _rendersWithPerspective;
    SKUIResourceLoader *_resourceLoader;
    _Bool _scrollOffsetHasChanged;
    NSMutableArray *_sections;
    SKUIStorePageSplitsDescription *_splitsDescription;
    UIView *_splitsDividerView;
    SKUIStackedBar *_stackedBar;
    SKUILayoutCache *_textLayoutCache;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(retain, nonatomic) SKUIIndexBarControl *indexBarControl; // @synthesize indexBarControl=_indexBarControl;
@property(readonly, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(nonatomic) long long pinningTransitionStyle; // @synthesize pinningTransitionStyle=_pinningTransitionStyle;
@property(retain, nonatomic) SKUIMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(nonatomic) __weak id <SKUIStorePageSectionsDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) SKUIMetricsImpressionSession *activeMetricsImpressionSession; // @synthesize activeMetricsImpressionSession=_activeMetricsImpressionSession;
- (void).cxx_destruct;
- (void)_updateSectionsAfterMenuChange;
- (void)_updateCollectionViewWithUpdates:(CDUnknownBlockType)arg1;
- (id)_textLayoutCache;
- (id)_splitForSectionIndex:(long long)arg1;
- (void)_setPageSize:(struct CGSize)arg1;
- (id)_sectionsForChartsComponent:(id)arg1;
- (void)_scrollFirstAppearanceSectionToView;
- (id)_resourceLoader;
- (void)_reloadCollectionView;
- (id)_prepareLayoutForSections;
- (void)_prefetchArtworkForVisibleSections;
- (id)_newStorePageCollectionViewLayout;
- (id)_newSectionsWithPageComponents:(id)arg1;
- (id)_newSectionsWithPageComponent:(id)arg1;
- (id)_newSectionContext;
- (id)_menuContextForMenuComponent:(id)arg1;
- (id)_expandContextForMenuComponent:(id)arg1;
- (void)_invalidateLayoutWithNewSize:(struct CGSize)arg1 transitionCoordinator:(id)arg2;
- (void)_invalidateIfLastKnownSizeChanged;
- (void)_enumerateVisibleSectionsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateSectionContextsUsingBlock:(CDUnknownBlockType)arg1;
- (void)_deselectCellsForAppearance:(_Bool)arg1;
- (id)_defaultSectionForSwooshComponent:(id)arg1;
- (id)_defaultSectionForGridComponent:(id)arg1;
- (id)_currentBackdropGroupName;
- (id)_createSectionsForExpandPageComponent:(id)arg1 context:(id)arg2 newSections:(id)arg3 sectionCount:(long long)arg4 sectionsByViewElement:(id)arg5 updateStyle:(long long)arg6;
- (id)_collectionViewSublayouts;
- (id)_childSectionsForMenuComponent:(id)arg1 selectedIndex:(long long)arg2;
- (id)_impressionableViewElements;
- (id)_visibleMetricsImpressionsString;
- (void)_updateSectionsForIndex:(long long)arg1 menuSection:(id)arg2;
- (void)_setSelectedIndex:(long long)arg1 forMenuSection:(id)arg2;
- (void)_setRendersWithPerspective:(_Bool)arg1;
- (void)_setActiveProductPageOverlayController:(id)arg1;
- (void)_pageSectionDidDismissOverlayController:(id)arg1;
- (void)_insertSectionsWithComponents:(id)arg1 afterSection:(id)arg2;
- (void)_endIgnoringSectionChanges;
- (void)_beginIgnoringSectionChanges;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)skuiCollectionViewWillLayoutSubviews:(id)arg1;
- (void)itemCollectionView:(id)arg1 didTapVideoForCollectionViewCell:(id)arg2;
- (void)itemCollectionView:(id)arg1 didConfirmItemOfferForCell:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 performDefaultActionForViewElement:(id)arg2 indexPath:(id)arg3;
- (void)collectionView:(id)arg1 expandEditorialForLabelElement:(id)arg2 indexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didConfirmButtonElement:(id)arg2 forItemAtIndexPath:(id)arg3;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (_Bool)performTestWithName:(id)arg1 options:(id)arg2;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (id)indexPathsForPinningItemsInCollectionView:(id)arg1 layout:(id)arg2;
- (void)collectionView:(id)arg1 willBeginEditingItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 layout:(id)arg2 willApplyLayoutAttributes:(id)arg3;
- (long long)collectionView:(id)arg1 layout:(id)arg2 pinningTransitionStyleForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 layout:(id)arg2 pinningStyleForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 pinningContentInsetForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didEndEditingItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 canScrollCellAtIndexPath:(id)arg2;
- (void)artworkLoaderDidIdle:(id)arg1;
- (void)productPageOverlayDidDismiss:(id)arg1;
- (void)layoutCacheDidFinishBatch:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)collectionView:(id)arg1 editorialView:(id)arg2 didSelectLink:(id)arg3;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)skui_viewWillAppear:(_Bool)arg1;
- (void)tapCollectionViewDidRecognize:(id)arg1;
- (id)SKUIStackedBar;
- (void)showOverlayWithProductPage:(id)arg1 metricsPageEvent:(id)arg2;
- (void)setSKUIStackedBar:(id)arg1;
- (void)setSectionsWithSplitsDescription:(id)arg1;
- (void)setSectionsWithPageComponents:(id)arg1;
- (void)reloadSections:(id)arg1;
@property(readonly, nonatomic, getter=isDisplayingOverlays) _Bool displayingOverlays;
- (void)dismissOverlays;
- (id)defaultSectionForComponent:(id)arg1;
@property(readonly, nonatomic) UICollectionView *collectionView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithLayoutStyle:(long long)arg1;
- (void)_initSKUIStorePageSectionsViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStorePageSplit : NSObject <NSCopying>
{
    UIColor *_dividerColor;
    long long _numberOfPageSections;
    NSArray *_pageComponents;
    SKUIStorePageSectionContext *_sectionContext;
    double _widthFraction;
}

@property(nonatomic) double widthFraction; // @synthesize widthFraction=_widthFraction;
@property(retain, nonatomic) SKUIStorePageSectionContext *sectionContext; // @synthesize sectionContext=_sectionContext;
@property(copy, nonatomic) NSArray *pageComponents; // @synthesize pageComponents=_pageComponents;
@property(nonatomic) long long numberOfPageSections; // @synthesize numberOfPageSections=_numberOfPageSections;
@property(copy, nonatomic) UIColor *dividerColor; // @synthesize dividerColor=_dividerColor;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface SKUIStorePageSplitCollectionViewLayout : _UICollectionViewCompositionLayout <SKUIStorePageCollectionViewLayout>
{
    NSString *_backdropGroupName;
    NSMutableArray *_orderedSublayouts;
    _Bool _rendersWithPerspective;
    NSMapTable *_sublayoutToSectionsToIndexRanges;
}

@property(nonatomic) _Bool rendersWithPerspective; // @synthesize rendersWithPerspective=_rendersWithPerspective;
@property(copy, nonatomic) NSString *backdropGroupName; // @synthesize backdropGroupName=_backdropGroupName;
- (void).cxx_destruct;
- (id)_newStorePageCollectionViewLayout;
- (void)_createSectionsToIndexRangesMapTableIfNeededForSublayout:(id)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (id)sublayouts;
- (void)removeSublayout:(id)arg1;
- (struct CGRect)_frameForLayout:(id)arg1 offset:(struct CGPoint)arg2 relativeToEdges:(unsigned long long)arg3 fromSiblingLayout:(id)arg4;
- (void)addSublayout:(id)arg1 forSections:(id)arg2 offset:(struct CGPoint)arg3 relativeToEdges:(unsigned long long)arg4 fromSiblingLayout:(id)arg5;
- (void)addSublayout:(id)arg1 forItems:(id)arg2 inSection:(long long)arg3 offset:(struct CGPoint)arg4 relativeToEdges:(unsigned long long)arg5 fromSiblingLayout:(id)arg6;
- (void)addSublayout:(id)arg1 forElementKinds:(id)arg2;
- (id)pinnedLayoutAttributesForItemsInRect:(struct CGRect)arg1;
- (id)layoutAttributesForUnpinnedItemAtIndexPath:(id)arg1;
@property(readonly, nonatomic) NSArray *indexPathsForPinningItems;
- (void)addSublayoutsUsingSplitsDescription:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStorePageSplitsDescription : NSObject <NSCopying>
{
    SKUIStorePageSplit *_bottomSplit;
    SKUIStorePageSplit *_leftSplit;
    SKUIStorePageSplit *_rightSplit;
    SKUIStorePageSplit *_topSplit;
}

@property(copy, nonatomic) SKUIStorePageSplit *topSplit; // @synthesize topSplit=_topSplit;
@property(copy, nonatomic) SKUIStorePageSplit *rightSplit; // @synthesize rightSplit=_rightSplit;
@property(copy, nonatomic) SKUIStorePageSplit *leftSplit; // @synthesize leftSplit=_leftSplit;
@property(copy, nonatomic) SKUIStorePageSplit *bottomSplit; // @synthesize bottomSplit=_bottomSplit;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)sizeSplitsToFitWidth:(double)arg1 usingBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) long long numberOfSplits;
@property(readonly, nonatomic) SKUIStorePageSplit *firstSplit;
- (void)enumerateSplitsUsingBlock:(CDUnknownBlockType)arg1;

@end

@interface SKUIStorePageViewController : UIViewController <SKUIStorePageSectionsDelegate, SKUIViewControllerTesting, SKUIMetricsViewController, UIViewControllerRestoration>
{
    SKUIClientContext *_clientContext;
    id <SKUIStorePageDelegate> _delegate;
    NSString *_lastDataConsumerClassName;
    SSMetricsPageEvent *_lastPageEvent;
    NSURLRequest *_lastRequest;
    _Bool _loadOnAppear;
    SSVLoadURLOperation *_loadOperation;
    NSOperationQueue *_operationQueue;
    SKUIMetricsController *_metricsController;
    NSString *_performanceTestName;
    NSDictionary *_performanceTestOptions;
    SKUIColorScheme *_placeholderColorScheme;
    UIRefreshControl *_refreshControl;
    SKUIStorePageSectionsViewController *_sectionsViewController;
    SKUIStorePage *_storePage;
}

+ (id)viewControllerWithRestorationIdentifierPath:(id)arg1 coder:(id)arg2;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(copy, nonatomic) SKUIStorePage *storePage; // @synthesize storePage=_storePage;
@property(retain, nonatomic) UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <SKUIStorePageDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_showProductPage:(id)arg1 withPageEvent:(id)arg2;
- (void)_setStorePage:(id)arg1 error:(id)arg2;
- (void)_setMetricsController:(id)arg1;
- (id)_sectionsViewController;
- (void)_runScrollTestWithName:(id)arg1 options:(id)arg2;
- (void)_runPerformanceTestAfterPageLoad;
- (void)_runPerformanceTestAfterIdle;
- (void)_reloadStorePage;
- (void)_recordMetricsPageEvent:(id)arg1 forStorePage:(id)arg2;
- (void)_loadWithOperation:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)_colorScheme;
- (void)loadWithJSONData:(id)arg1 fromOperation:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)_metricsEnterEventNotification:(id)arg1;
- (_Bool)performTestWithName:(id)arg1 options:(id)arg2;
- (void)sectionsViewControllerDidDismissOverlayController:(id)arg1;
- (_Bool)sectionsViewController:(id)arg1 showStorePageForURL:(id)arg2;
- (_Bool)sectionsViewController:(id)arg1 showProductPageForItem:(id)arg2;
- (id)activeMetricsController;
- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)loadView;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)decodeRestorableStateWithCoder:(id)arg1;
- (void)setMetricsController:(id)arg1;
- (void)loadURLRequest:(id)arg1 withDataConsumer:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)loadURLRequest:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)loadURL:(id)arg1 withDataConsumer:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)loadURL:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
- (void)cancelPageLoad;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStyledButton : UIControl <SKUIViewElementOfferButton>
{
    SKUIAttributedStringView *_attributedStringView;
    long long _buttonType;
    _Bool _didInitialHighlightForTouch;
    UIImageView *_disclosureImageView;
    SKUIItemOfferButton *_itemOfferButton;
    id <SKUIItemOfferButtonDelegate> _itemOfferDelegate;
    _Bool _usesTintColor;
}

+ (_Bool)usesItemOfferAppearanceForButtonType:(long long)arg1 itemState:(id)arg2;
+ (struct CGSize)sizeForTextSize:(struct CGSize)arg1 buttonType:(long long)arg2;
@property(nonatomic) _Bool usesTintColor; // @synthesize usesTintColor=_usesTintColor;
@property(nonatomic) __weak id <SKUIItemOfferButtonDelegate> itemOfferDelegate; // @synthesize itemOfferDelegate=_itemOfferDelegate;
@property(nonatomic) long long buttonType; // @synthesize buttonType=_buttonType;
- (void).cxx_destruct;
- (_Bool)_usesTintColor;
- (id)_textColor;
- (void)_reloadOverrideTextColor;
- (void)_reloadDisclosureImage;
- (void)_showConfirmationAction:(id)arg1;
- (void)_itemOfferButtonAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)tintColorDidChange;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)setEnabled:(_Bool)arg1;
- (_Bool)setValuesUsingViewElement:(id)arg1 itemState:(id)arg2 clientContext:(id)arg3 animated:(_Bool)arg4;
@property(retain, nonatomic) SKUIAttributedStringLayout *titleLayout;
@property(readonly, nonatomic, getter=isUsingItemOfferAppearance) _Bool usingItemOfferAppearance;
@property(readonly, nonatomic) double firstBaselineOffset;
@property(readonly, nonatomic) double baselineOffset;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIStyledImageButton : UIControl
{
    _Bool _didInitialHighlightForTouch;
    SKUIImageView *_imageView;
}

@property(readonly, nonatomic) SKUIImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUIStyledImageDataConsumer : SKUIImageDataConsumer
{
    UIColor *_backgroundColor;
    UIColor *_borderColor;
    struct UIEdgeInsets _borderWidths;
    struct CGSize _imageSize;
    long long _imageTreatment;
}

+ (id)wishlistProductImageConsumer;
+ (id)wishlistIconConsumer;
+ (id)updatesProductImageConsumer;
+ (id)updatesIconConsumer;
+ (id)topChartsNewsstandConsumer;
+ (id)topChartsIconConsumer;
+ (id)swooshNewsstandConsumer;
+ (id)shareSheetIconConsumer;
+ (id)safariBannerProductImageConsumer;
+ (id)safariBannerIconConsumer;
+ (id)roomProductImageConsumer;
+ (id)roomIconConsumer;
+ (id)purchasedProductImageConsumer;
+ (id)purchasedIconConsumer;
+ (id)productPageProductImageConsumer;
+ (id)productImageConsumerWithSize:(struct CGSize)arg1;
+ (id)parentBundleIconConsumer;
+ (id)newsstandSwooshNewsstandConsumer;
+ (id)newsstandRoomNewsstandConsumer;
+ (id)mixedTopChartsNewsstandConsumer;
+ (id)lockupProductImageConsumerWithSize:(long long)arg1;
+ (id)lockupIconConsumerWithSize:(long long)arg1;
+ (id)listIconConsumer;
+ (id)gridIconConsumer;
+ (id)giftThemeProductImageConsumer;
+ (id)giftThemeIconConsumer;
+ (id)giftResultProductImageConsumer;
+ (id)giftResultIconConsumer;
+ (id)giftComposeProductImageConsumer;
+ (id)categoryIconConsumer;
+ (id)cardProductImageConsumer;
+ (id)cardIconConsumer;
+ (id)brickConsumerWithBrickSize:(struct CGSize)arg1;
+ (id)brickConsumer;
+ (id)applePackIconConsumer;
+ (id)appIconConsumerWithSize:(struct CGSize)arg1;
@property(nonatomic) long long imageTreatment; // @synthesize imageTreatment=_imageTreatment;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) struct UIEdgeInsets borderWidths; // @synthesize borderWidths=_borderWidths;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)_uberImageWithBounds:(struct CGRect)arg1 inputSize:(struct CGSize)arg2 drawBlock:(CDUnknownBlockType)arg3;
- (id)_scaledImageWithBounds:(struct CGRect)arg1 contentRect:(struct CGRect)arg2 drawBlock:(CDUnknownBlockType)arg3;
- (id)_outputImageWithInputSize:(struct CGSize)arg1 outputSize:(struct CGSize)arg2 drawBlock:(CDUnknownBlockType)arg3;
- (void)_drawBordersWithImageRect:(struct CGRect)arg1 bounds:(struct CGRect)arg2;
- (id)_defaultPlaceholderColor;
- (_Bool)_backgroundIsOpaque;
- (id)_arcRoundedImageWithBounds:(struct CGRect)arg1 contentRect:(struct CGRect)arg2 cornerRadius:(double)arg3 drawBlock:(CDUnknownBlockType)arg4;
- (id)imageForImage:(id)arg1;
- (id)imageForColor:(id)arg1 size:(struct CGSize)arg2;
- (id)imageForColor:(id)arg1;
- (id)initWithViewElement:(id)arg1;
- (id)initWithSize:(struct CGSize)arg1 treatment:(long long)arg2;

@end

@interface SKUISwooshArrayViewController : UIViewController <SKUIMetricsViewController, SKUIResourceLoaderDelegate, SKUISwooshViewControllerDelegate, UIScrollViewDelegate, SKUIProductPageChildViewController>
{
    _Bool _askPermission;
    SKUIResourceLoader *_artworkLoader;
    SKUIClientContext *_clientContext;
    SKUIColorScheme *_colorScheme;
    id <SKUIProductPageChildViewControllerDelegate> _delegate;
    SKUIProductPageHeaderViewController *_headerViewController;
    SKUIMetricsController *_metricsController;
    NSOperationQueue *_operationQueue;
    SSVPlatformRequestOperation *_platformOperation;
    UIScrollView *_scrollView;
    NSMutableArray *_swooshArtworkLoaders;
    NSArray *_swooshComponents;
    NSMutableArray *_viewControllers;
}

@property(copy, nonatomic) NSArray *swooshComponents; // @synthesize swooshComponents=_swooshComponents;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) SKUIMetricsController *metricsController; // @synthesize metricsController=_metricsController;
@property(retain, nonatomic) SKUIProductPageHeaderViewController *headerViewController; // @synthesize headerViewController=_headerViewController;
@property(nonatomic) __weak id <SKUIProductPageChildViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) _Bool askPermission; // @synthesize askPermission=_askPermission;
- (void).cxx_destruct;
- (id)_scrollView;
- (void)_reloadChildViewControllers;
- (void)_loadMissingItemsIfNecessary;
- (void)_layoutSwooshViews;
- (id)_clickEventWithItem:(id)arg1;
- (id)_clickEventForSeeAllForViewController:(id)arg1;
- (id)_artworkLoader;
- (void)_addMissingItemsWithResponse:(id)arg1 error:(id)arg2;
- (void)_addHeaderView;
- (void)scrollViewDidScroll:(id)arg1;
- (void)artworkLoaderDidIdle:(id)arg1;
- (void)swooshDidSelectSeeAll:(id)arg1;
- (id)swoosh:(id)arg1 imageForCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)activeMetricsController;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (_Bool)isLoaded;
- (void)loadMissingItemData;
- (void)dealloc;
- (id)initWithSwooshComponents:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUISwooshCollectionViewLayout : UICollectionViewFlowLayout
{
    UIColor *_backgroundColor;
    _Bool _snapsToItemBoundaries;
    _Bool _snapsToItemCenters;
}

+ (Class)layoutAttributesClass;
+ (float)snapToBoundariesDecelerationRate;
@property(nonatomic) _Bool snapsToItemCenters; // @synthesize snapsToItemCenters=_snapsToItemCenters;
@property(nonatomic) _Bool snapsToItemBoundaries; // @synthesize snapsToItemBoundaries=_snapsToItemBoundaries;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)init;

@end

@interface SKUISwooshPageComponent : SKUIPageComponent
{
    NSArray *_bricks;
    long long _fcKind;
    NSArray *_lockups;
    struct SKUILockupStyle _lockupStyle;
    NSArray *_mediaComponents;
    long long _missingDataCount;
    NSString *_platformKeyProfile;
    long long _seeAllStyle;
    NSString *_seeAllTitle;
    NSURL *_seeAllURL;
    _Bool _showsIndexNumbers;
    _Bool _showsItemTitles;
    long long _swooshType;
    NSString *_title;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) long long swooshType; // @synthesize swooshType=_swooshType;
@property(readonly, nonatomic) _Bool showsIndexNumbers; // @synthesize showsIndexNumbers=_showsIndexNumbers;
@property(readonly, nonatomic) NSURL *seeAllURL; // @synthesize seeAllURL=_seeAllURL;
@property(readonly, nonatomic) NSString *seeAllTitle; // @synthesize seeAllTitle=_seeAllTitle;
@property(readonly, nonatomic) long long seeAllStyle; // @synthesize seeAllStyle=_seeAllStyle;
@property(readonly, nonatomic) NSString *platformKeyProfile; // @synthesize platformKeyProfile=_platformKeyProfile;
@property(readonly, nonatomic) NSArray *mediaComponents; // @synthesize mediaComponents=_mediaComponents;
@property(readonly, nonatomic) struct SKUILockupStyle lockupStyle; // @synthesize lockupStyle=_lockupStyle;
@property(readonly, nonatomic) NSArray *lockups; // @synthesize lockups=_lockups;
@property(readonly, nonatomic) NSArray *bricks; // @synthesize bricks=_bricks;
- (void).cxx_destruct;
- (void)_updateLockup:(id)arg1 withItem:(id)arg2;
- (void)_setSeeAllValuesWithLinkInfo:(id)arg1;
- (void)_reloadMissingDataCount;
- (id)_newLockupComponentWithItem:(id)arg1 defaultStyle:(struct SKUILockupStyle)arg2;
- (id)_mediaComponentsWithChildren:(id)arg1 context:(id)arg2;
- (id)_lockupWithItemIdentifier:(id)arg1 context:(id)arg2;
- (id)_lockupsWithChildren:(id)arg1 featuredPageContext:(id)arg2;
- (id)_lockupsWithChildren:(id)arg1 context:(id)arg2;
- (struct SKUILockupStyle)_lockupStyleWithLockups:(id)arg1;
- (_Bool)_isBrickAvailable:(id)arg1 withPageContext:(id)arg2;
- (unsigned long long)_defaultVisibleFieldsForItemKind:(long long)arg1;
- (struct SKUILockupStyle)_defaultLockupStyleWithSwooshType:(long long)arg1;
- (id)_brickItemsWithChildren:(id)arg1 featuredPageContext:(id)arg2;
- (id)_brickItemsWithChildren:(id)arg1 customPageContext:(id)arg2;
- (void)_updateLockupItemsWithLookupResponse:(id)arg1;
- (id)_updateLockupItemsWithItems:(id)arg1;
- (void)_updateBricksWithItems:(id)arg1;
- (id)valueForMetricsField:(id)arg1;
- (id)metricsElementName;
- (void)enumerateMissingItemIdentifiersFromIndex:(long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (long long)componentType;
@property(readonly, nonatomic) _Bool showsMediaTitles;
@property(readonly, nonatomic) _Bool showsBrickTitles;
- (_Bool)isMissingItemData;
- (id)initWithRoomContext:(id)arg1;
- (id)initWithRelatedContentContext:(id)arg1;
- (id)initWithLockups:(id)arg1 swooshType:(long long)arg2 title:(id)arg3;
- (id)initWithItemList:(id)arg1;
- (id)initWithFeaturedContentContext:(id)arg1 kind:(long long)arg2;
- (id)initWithCustomPageContext:(id)arg1;

@end

@interface SKUISwooshView : UIView
{
    UIView *_borderView;
    UICollectionView *_collectionView;
    struct UIEdgeInsets _collectionViewInsets;
    UIButton *_seeAllButton;
    _Bool _showsChevronForTitle;
    SKUILinkButton *_titleButton;
    UIColor *_titleColor;
    UILabel *_titleLabel;
    struct UIEdgeInsets _contentInsets;
}

@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(copy, nonatomic) UIColor *titleColor; // @synthesize titleColor=_titleColor;
@property(nonatomic) _Bool showsChevronForTitle; // @synthesize showsChevronForTitle=_showsChevronForTitle;
@property(nonatomic) struct UIEdgeInsets collectionViewInsets; // @synthesize collectionViewInsets=_collectionViewInsets;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (id)_seeAllArrowImage;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *title;
@property(copy, nonatomic) NSString *seeAllTitle;
- (void)setSeeAllColor:(id)arg1 forControlState:(unsigned long long)arg2;
- (void)setColoringWithColorScheme:(id)arg1;
@property(readonly, nonatomic) UIControl *seeAllControl;
- (id)seeAllColorForControlState:(unsigned long long)arg1;
@property(readonly, nonatomic) UIControl *chevronTitleControl;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUISyncWishlistOperation : NSOperation
{
    SKUIClientContext *_clientContext;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    CDUnknownBlockType _resultBlock;
}

- (void).cxx_destruct;
- (void)_sendLocalChangesForWishlist:(id)arg1;
- (_Bool)_mergeItems:(id)arg1 wishlist:(id)arg2 didChange:(_Bool *)arg3 error:(id *)arg4;
- (_Bool)_loadRemoteItemsForWishlist:(id)arg1 didChange:(_Bool *)arg2 error:(id *)arg3;
- (void)main;
@property(copy) CDUnknownBlockType resultBlock;
- (id)initWithClientContext:(id)arg1;
- (id)init;

@end

@interface SKUISystemCombinedIndexBarEntry : SKUIIndexBarEntry
{
}

+ (double)_dotDiameter;
- (void)_drawContentInRect:(struct CGRect)arg1;
- (struct CGSize)_calculatedContentSize;
- (id)init;

@end

@interface SKUITabBarBackgroundView : UIView
{
    _UIBackdropView *_backdropView;
    UIView *_borderView;
    _Bool barWantsAdaptiveBackdrop;
    _Bool translucent;
    _UINavigationBarAppearanceStorage *appearanceStorage;
    long long barStyle;
    UIColor *barTintColor;
    UIView *_shadowView;
    long long _backdropStyle;
}

@property(nonatomic) long long backdropStyle; // @synthesize backdropStyle=_backdropStyle;
@property(nonatomic, getter=isTranslucent) _Bool translucent; // @synthesize translucent;
@property(retain, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;
@property(nonatomic) _Bool barWantsAdaptiveBackdrop; // @synthesize barWantsAdaptiveBackdrop;
@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor;
@property(nonatomic) long long barStyle; // @synthesize barStyle;
@property(retain, nonatomic) _UINavigationBarAppearanceStorage *appearanceStorage; // @synthesize appearanceStorage;
- (void).cxx_destruct;
- (void)updateBackgroundImage;
- (void)_setIsContainedInPopover:(_Bool)arg1;
- (void)_setFrame:(struct CGRect)arg1 forceUpdateBackgroundImage:(_Bool)arg2;
- (id)_currentCustomBackgroundRespectOversize_legacy:(_Bool *)arg1;
- (id)_currentCustomBackground;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *backdropGroupName;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUITabBarController : UITabBarController <SKUIMoreNavigationControllerDelegate>
{
    SKUIFloatingOverlayView *_floatingOverlayView;
    UIViewController *_floatingOverlayViewController;
    SKUITabBarBackgroundView *_tabBarBackgroundView;
}

+ (Class)_moreNavigationControllerClass;
@property(readonly, nonatomic) UIViewController *floatingOverlayViewController; // @synthesize floatingOverlayViewController=_floatingOverlayViewController;
- (void).cxx_destruct;
- (void)_layoutFloatingOverlayView;
- (void)moreNavigationController:(id)arg1 didSelectItemAtIndex:(long long)arg2;
- (id)_backdropGroupName;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)setTransientViewController:(id)arg1 animated:(_Bool)arg2;
- (id)moreNavigationController;
- (void)cancelTransientViewController:(id)arg1;
- (id)skui_activeNavigationController;
- (void)setTabBarBackdropStyle:(long long)arg1;
- (void)setFloatingOverlayViewController:(id)arg1 animated:(_Bool)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITabBarItem : NSObject <NSCopying>
{
    _Bool _alwaysCreatesRootViewController;
    long long _barTintStyle;
    NSString *_metricsIdentifier;
    NSURL *_rootURL;
    Class _rootViewControllerClass;
    NSString *_tabIdentifier;
    UITabBarItem *_underlyingTabBarItem;
    UIColor *_userInterfaceTintColor;
}

@property(retain, nonatomic) UIColor *userInterfaceTintColor; // @synthesize userInterfaceTintColor=_userInterfaceTintColor;
@property(retain, nonatomic) UITabBarItem *underlyingTabBarItem; // @synthesize underlyingTabBarItem=_underlyingTabBarItem;
@property(readonly, nonatomic) NSString *tabIdentifier; // @synthesize tabIdentifier=_tabIdentifier;
@property(retain, nonatomic) Class rootViewControllerClass; // @synthesize rootViewControllerClass=_rootViewControllerClass;
@property(copy, nonatomic) NSURL *rootURL; // @synthesize rootURL=_rootURL;
@property(copy, nonatomic) NSString *metricsIdentifier; // @synthesize metricsIdentifier=_metricsIdentifier;
@property(nonatomic) long long barTintStyle; // @synthesize barTintStyle=_barTintStyle;
@property(nonatomic) _Bool alwaysCreatesRootViewController; // @synthesize alwaysCreatesRootViewController=_alwaysCreatesRootViewController;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithTabIdentifier:(id)arg1;

@end

@interface SKUITestDataURLProtocol : NSURLProtocol
{
}

+ (_Bool)requestIsCacheEquivalent:(id)arg1 toRequest:(id)arg2;
+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void)stopLoading;
- (void)startLoading;

@end

@interface SKUITextActivityItemProvider : UIActivityItemProvider
{
    SKUIProductPageItem *_item;
    SKUIClientContext *_clientContext;
}

- (void).cxx_destruct;
- (id)item;
- (id)initWithProductPageItem:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUITextBoxTableViewCell : SKUITableViewCell
{
    SKUITextBoxView *_textBoxView;
    struct UIEdgeInsets _textBoxInsets;
}

@property(nonatomic) struct UIEdgeInsets textBoxInsets; // @synthesize textBoxInsets=_textBoxInsets;
@property(readonly, nonatomic) SKUITextBoxView *textBoxView; // @synthesize textBoxView=_textBoxView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setBackgroundColor:(id)arg1;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface SKUITextBoxView : UIControl
{
    SKUIColorScheme *_colorScheme;
    struct UIEdgeInsets _contentInsets;
    UILabel *_moreButtonLabel;
    long long _numberOfVisibleLines;
    double _rating;
    UIImageView *_ratingImageView;
    UILabel *_ratingLabel;
    UILabel *_subtitleLabel;
    struct __CTFrame *_textFrame;
    struct UIEdgeInsets _titleInsets;
    UILabel *_titleLabel;
    struct __CTFrame *_titleTextFrame;
    struct __CTLine *_truncationToken;
    long long _truncationStyle;
    NSString *_underlyingText;
}

@property(nonatomic) struct UIEdgeInsets titleInsets; // @synthesize titleInsets=_titleInsets;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic) long long truncationStyle; // @synthesize truncationStyle=_truncationStyle;
@property(nonatomic) double rating; // @synthesize rating=_rating;
@property(nonatomic) long long numberOfVisibleLines; // @synthesize numberOfVisibleLines=_numberOfVisibleLines;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
- (void).cxx_destruct;
- (struct CGSize)_textSizeToFitSize:(struct CGSize)arg1;
- (struct __CTFrame *)_textFrame;
- (id)_moreButtonLabel;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)drawRect:(struct CGRect)arg1;
@property(copy, nonatomic) NSString *subtitle;
- (void)setTitle:(id)arg1;
- (void)setTextFrameWithText:(id)arg1;
@property(copy, nonatomic) NSString *ratingText;
@property(copy, nonatomic) NSString *moreButtonTitle;
- (void)setFixedWidthTitleTextFrame:(struct __CTFrame *)arg1;
- (void)setFixedWidthTextFrame:(struct __CTFrame *)arg1;
- (void)reset;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUITextLayout : NSObject <SKUICachedLayout>
{
    struct __CTFramesetter *_framesetter;
    _Bool _requiresTruncation;
    struct CGSize _size;
    struct __CTFrame *_textFrame;
    struct CGSize _truncatedSize;
}

+ (struct __CFAttributedString *)_newAttributedStringWithRequest:(id)arg1;
+ (struct __CFAttributedString *)newAttributedStringWithText:(id)arg1;
@property(readonly, nonatomic) struct __CTFrame *textFrame; // @synthesize textFrame=_textFrame;
@property(readonly, nonatomic) struct CGSize truncatedSize; // @synthesize truncatedSize=_truncatedSize;
@property(readonly, nonatomic) struct CGSize textSize; // @synthesize textSize=_size;
@property(readonly, nonatomic) _Bool requiresTruncation; // @synthesize requiresTruncation=_requiresTruncation;
- (void)dealloc;
- (id)initWithLayoutRequest:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITextLayoutRequest : NSObject <SKUILayoutRequest>
{
    NSAttributedString *_attributedText;
    double _fontSize;
    long long _fontWeight;
    long long _numberOfLines;
    NSString *_text;
    unsigned char _textAlignment;
    double _width;
}

@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) unsigned char textAlignment; // @synthesize textAlignment=_textAlignment;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(nonatomic) long long numberOfLines; // @synthesize numberOfLines=_numberOfLines;
@property(nonatomic) long long fontWeight; // @synthesize fontWeight=_fontWeight;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) Class layoutClass;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITomatoRatingView : UIView <SKUIViewElementView>
{
    UIImageView *_imageView;
    SKUIAttributedStringView *_labelView;
}

+ (id)_tomatoImageForFreshness:(long long)arg1;
+ (id)_attributedStringForRating:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITomatoRatingViewElement : SKUIViewElement
{
    long long _freshness;
    float _tomatoRating;
}

@property(readonly, nonatomic) float tomatoRating; // @synthesize tomatoRating=_tomatoRating;
@property(readonly, nonatomic) long long freshness; // @synthesize freshness=_freshness;
- (id)applyUpdatesWithElement:(id)arg1;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUITonePurchaseController : NSObject <ABPeoplePickerNavigationControllerDelegate>
{
    SKUIClientContext *_clientContext;
    CDUnknownBlockType _completionBlock;
    SKUIItem *_item;
    UIViewController *_parentViewController;
    ABPeoplePickerNavigationController *_peoplePicker;
}

@property(nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
- (void).cxx_destruct;
- (void)_showPeoplePicker;
- (void)_presentViewController:(id)arg1;
- (void)_finishWithTonePurchase:(id)arg1;
- (void)_finishPeoplePicker:(id)arg1 withPerson:(void *)arg2;
- (void)_dismissPeoplePicker;
- (void)peoplePickerNavigationController:(id)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(id)arg1 didSelectPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (void)showPurchaseFlowWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITrackSwooshArtworkLoader : SKUISwooshArtworkLoader
{
    SKUIItemArtworkContext *_artworkContext;
}

@property(retain, nonatomic) SKUIItemArtworkContext *artworkContext; // @synthesize artworkContext=_artworkContext;
- (void).cxx_destruct;
- (void)setImage:(id)arg1 forRequest:(id)arg2;
- (void)loadImagesForNextPageWithReason:(long long)arg1;
- (id)placeholderImageForItem:(id)arg1;
- (_Bool)loadImageForItem:(id)arg1 reason:(long long)arg2;
- (id)cachedImageForItem:(id)arg1;
- (id)initWithArtworkLoader:(id)arg1 swoosh:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) SKUITrackSwooshViewController *swooshViewController; // @dynamic swooshViewController;

@end

@interface SKUITrackSwooshCellLayout : SKUIItemCellLayout
{
    NSString *_artistName;
    UIView *_bottomBorderView;
    NSString *_collectionName;
    SKUIColorScheme *_colorScheme;
    long long _lockupSize;
    long long _layoutIdiom;
    UIView *_selectionBackgroundView;
    NSString *_subtitleFormatString;
    UILabel *_subtitleLabel;
    UILabel *_titleLabel;
    unsigned long long _visibleFields;
}

@property(nonatomic) unsigned long long visibleFields; // @synthesize visibleFields=_visibleFields;
@property(copy, nonatomic) NSString *subtitleFormatString; // @synthesize subtitleFormatString=_subtitleFormatString;
@property(nonatomic) long long lockupSize; // @synthesize lockupSize=_lockupSize;
@property(nonatomic) long long layoutIdiom; // @synthesize layoutIdiom=_layoutIdiom;
@property(copy, nonatomic) NSString *collectionName; // @synthesize collectionName=_collectionName;
@property(copy, nonatomic) NSString *artistName; // @synthesize artistName=_artistName;
- (void).cxx_destruct;
- (void)_reloadSubviewBackgroundColors;
- (void)_delayedReloadSubviewBackgroundColors;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setColoringWithColorScheme:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (void)layoutForItemOfferChange;
@property(copy, nonatomic) NSString *title;

@end

@interface SKUITrackSwooshCollectionViewCell : SKUIItemCollectionViewCell
{
    SKUITrackSwooshCellLayout *_layout;
}

@property(readonly, nonatomic) SKUITrackSwooshCellLayout *layout; // @synthesize layout=_layout;
- (void).cxx_destruct;
- (void)_configureForItem:(id)arg1 clientContext:(id)arg2;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2;
- (void)configureForItem:(id)arg1 clientContext:(id)arg2 chartIndex:(long long)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUITrackSwooshCollectionViewLayout : UICollectionViewLayout
{
    double _columnSpacing;
    double _columnWidth;
    long long _numberOfRows;
    double _rowHeight;
}

+ (Class)layoutAttributesClass;
+ (float)snapToBoundariesDecelerationRate;
@property(nonatomic) double rowHeight; // @synthesize rowHeight=_rowHeight;
@property(nonatomic) long long numberOfRows; // @synthesize numberOfRows=_numberOfRows;
@property(nonatomic) double columnWidth; // @synthesize columnWidth=_columnWidth;
@property(nonatomic) double columnSpacing; // @synthesize columnSpacing=_columnSpacing;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1 withScrollingVelocity:(struct CGPoint)arg2;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (struct CGSize)collectionViewContentSize;

@end

@interface SKUITrackSwooshPageSection : SKUIStorePageSection <SKUIMissingItemDelegate, SKUITrackSwooshViewControllerDelegate>
{
    SKUITrackSwooshArtworkLoader *_artworkLoader;
    SKUIMissingItemLoader *_missingItemLoader;
    SKUITrackSwooshViewController *_swooshViewController;
}

- (void).cxx_destruct;
- (id)_swooshViewController;
- (id)_missingItemLoader;
- (void)_loadMissingItemsFromIndex:(long long)arg1 withReason:(long long)arg2;
- (id)_artworkLoader;
- (void)_addImpressionForItemIndex:(long long)arg1 toSession:(id)arg2;
- (void)swooshDidSelectSeeAll:(id)arg1;
- (void)swoosh:(id)arg1 willDisplayCellAtIndex:(long long)arg2;
- (id)swoosh:(id)arg1 imageForCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didSelectCellAtIndex:(long long)arg2;
- (void)swoosh:(id)arg1 didDoubleTapCellAtIndex:(long long)arg2;
- (id)swoosh:(id)arg1 didConfirmItemOfferForItemAtIndex:(long long)arg2;
- (void)missingItemLoader:(id)arg1 didLoadItems:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUISwooshPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUITrackSwooshViewController : SKUISwooshViewController <SKUIItemStateCenterObserver, UICollectionViewDataSource, UICollectionViewDelegate>
{
    UICollectionView *_collectionView;
    SKUITrackSwooshCollectionViewLayout *_collectionViewLayout;
    _Bool _didInitialReload;
    NSObject<OS_dispatch_source> *_doubleTapTimer;
    SKUIItemOfferButtonAppearance *_itemOfferButtonAppearance;
    SKUISwooshView *_swooshView;
    SKUISwooshPageComponent *_trackSwoosh;
}

@property(retain, nonatomic) SKUIItemOfferButtonAppearance *itemOfferButtonAppearance; // @synthesize itemOfferButtonAppearance=_itemOfferButtonAppearance;
- (void).cxx_destruct;
- (void)_timeoutDoubleTapTimer;
- (void)_cancelDoubleTapTimer;
- (void)_seeAllAction:(id)arg1;
- (void)collectionView:(id)arg1 didDeselectItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)itemStateCenterRestrictionsChanged:(id)arg1;
- (void)itemStateCenter:(id)arg1 itemStatesChanged:(id)arg2;
- (void)itemCollectionView:(id)arg1 didConfirmItemOfferForCell:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)setImage:(id)arg1 forItemAtIndex:(long long)arg2;
- (void)setColorScheme:(id)arg1;
- (id)indexPathsForVisibleItems;
@property(readonly, nonatomic) struct CGRect seeAllButtonFrame;
- (void)reloadCellsForLockups:(id)arg1;
@property(readonly, nonatomic) NSArray *lockups;
- (struct CGRect)frameForItemAtIndex:(long long)arg1;
- (void)dealloc;
- (id)initWithTrackSwoosh:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <SKUITrackSwooshViewControllerDelegate> delegate; // @dynamic delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITrackViewElement : SKUIViewElement
{
    BOOL _enabled;
    _Bool _selected;
}

@property(readonly, nonatomic, getter=isSelected) _Bool selected; // @synthesize selected=_selected;
- (_Bool)isEnabled;
- (void)enumerateChildrenUsingBlock:(CDUnknownBlockType)arg1;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIActionsViewElement *swipeActions;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUITracklistColumn : NSObject <NSCopying>
{
    long long _columnIdentifier;
    long long _contentAlignment;
    long long _headerAlignment;
    double _maximumWidthFraction;
    double _preferredWidth;
    _Bool _showsPreviewControl;
    _Bool _sizesToFit;
    double _width;
}

@property(nonatomic) double width; // @synthesize width=_width;
@property(nonatomic) _Bool sizesToFit; // @synthesize sizesToFit=_sizesToFit;
@property(nonatomic) _Bool showsPreviewControl; // @synthesize showsPreviewControl=_showsPreviewControl;
@property(nonatomic) double preferredWidth; // @synthesize preferredWidth=_preferredWidth;
@property(nonatomic) double maximumWidthFraction; // @synthesize maximumWidthFraction=_maximumWidthFraction;
@property(nonatomic) long long headerAlignment; // @synthesize headerAlignment=_headerAlignment;
@property(nonatomic) long long contentAlignment; // @synthesize contentAlignment=_contentAlignment;
@property(nonatomic) long long columnIdentifier; // @synthesize columnIdentifier=_columnIdentifier;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)setPreferredWidthForAttributedStrings:(id)arg1;

@end

@interface SKUITracklistColumnData : NSObject
{
    NSArray *_columns;
    double _interColumnSpacing;
    double _leftEdgeInset;
    double _rightEdgeInset;
}

@property(nonatomic) double rightEdgeInset; // @synthesize rightEdgeInset=_rightEdgeInset;
@property(nonatomic) double leftEdgeInset; // @synthesize leftEdgeInset=_leftEdgeInset;
@property(nonatomic) double interColumnSpacing; // @synthesize interColumnSpacing=_interColumnSpacing;
@property(copy, nonatomic) NSArray *columns; // @synthesize columns=_columns;
- (void).cxx_destruct;
- (id)viewElementsForTrack:(id)arg1 columnIndex:(long long)arg2;
- (void)enumerateColumnsForTrack:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)enumerateColumnsForHeader:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)columnForIdentifier:(long long)arg1;
- (void)adjustColumnsToFitWidth:(double)arg1;
- (id)initWithRepresentativeTrack:(id)arg1;
- (id)_initSKUITracklistColumnData;

@end

@interface SKUITracklistHeaderCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    UIView *_bottomSeparatorView;
    SKUITracklistColumnData *_columnData;
    NSMutableDictionary *_columnViews;
    UIView *_topSeparatorView;
}

+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (struct CGSize)sizeForHeaderTitleLabel:(id)arg1;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITracklistLockupCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIItemOfferButtonDelegate, SKUIPreviewContainerView, SKUIViewElementView>
{
    SKUITracklistColumnData *_columnData;
    NSMutableDictionary *_columnViewsByIndex;
    SUPlayerStatus *_lastPlayerStatus;
    SKUIGradientView *_offerConfirmationGradientView;
    SKUIPreviewProgressIndicator *_previewProgressIndicator;
    long long _previewState;
    UIView *_separatorView;
    SKUITrackViewElement *_track;
}

+ (id)_attributedStringForOrdinal:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_resolvePreviewStateAfterTransitionForFlipView:(id)arg1;
- (id)_previewMediaURL;
- (id)_previewControlViewElement;
- (id)_previewColumnView;
- (void)_layoutConfirmationGradientRelativeToView:(id)arg1 alpha:(double)arg2;
- (void)_enumerateViewElementViewsUsingBlock:(CDUnknownBlockType)arg1;
- (id)_addFlipContainerViewWithFrontView:(id)arg1 backView:(id)arg2;
- (void)_audioPlayerStatusChangeNotification:(id)arg1;
- (void)_showConfirmationAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)itemOfferButtonDidAnimateTransition:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)togglePreviewPlaybackAnimated:(_Bool)arg1;
- (void)showPreviewProgressWithStatus:(id)arg1 animated:(_Bool)arg2;
- (void)hidePreviewProgressAnimated:(_Bool)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITracklistPageComponent : SKUIPageComponent
{
}

- (long long)componentType;
- (id)initWithViewElement:(id)arg1;

// Remaining properties
@property(readonly, nonatomic) SKUITracklistViewElement *viewElement; // @dynamic viewElement;

@end

@interface SKUITracklistPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    SKUIViewElementLayoutContext *_cellLayoutContext;
    SKUITracklistColumnData *_columnData;
    long long _lastNeedsMoreCount;
}

- (void).cxx_destruct;
- (double)_widthForButtonElements:(id)arg1;
- (id)_viewElementForIndex:(long long)arg1;
- (void)_requestCellLayoutWithColumnData:(id)arg1;
- (id)_representativeStringForViewElement:(id)arg1;
- (id)_mediaURLWithTrack:(id)arg1;
- (void)_enumerateVisibleViewElementsUsingBlock:(CDUnknownBlockType)arg1;
- (id)_columnData;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (_Bool)updateCellWithIndexPath:(id)arg1 itemState:(id)arg2 animated:(_Bool)arg3;
- (struct UIEdgeInsets)sectionContentInset;
- (_Bool)requestLayoutWithReloadReason:(long long)arg1;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (long long)numberOfCells;
- (void)getModalSourceViewForViewElement:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)firstAppearanceIndexPath;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillScrollToOffset:(struct CGPoint)arg1 visibleRange:(struct SKUIIndexPathRange)arg2;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (void)dealloc;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) SKUITracklistPageComponent *pageComponent; // @dynamic pageComponent;
@property(readonly) Class superclass;

@end

@interface SKUITracklistSectionHeaderCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIItemOfferButtonDelegate, SKUIViewElementView>
{
    UIControl *_button;
    SKUIButtonViewElement *_buttonViewElement;
    SKUITracklistColumnData *_columnData;
    NSMutableArray *_labels;
    UIView *_separatorView;
}

+ (double)_titlesWidthForWidth:(double)arg1 columnData:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_showConfirmationAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITracklistViewElement : SKUIViewElement
{
    NSMutableArray *_sections;
    NSMutableArray *_tracks;
}

- (void).cxx_destruct;
- (long long)pageComponentType;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) NSArray *tracks;
@property(readonly, nonatomic) NSArray *sections;
@property(readonly, nonatomic) SKUIHeaderViewElement *header;
- (void)enumerateTracksUsingBlock:(CDUnknownBlockType)arg1;

@end

@interface SKUITrailersCell : UICollectionViewCell
{
    UIImageView *_imageView;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
}

- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
@property(readonly, nonatomic) struct CGRect imageFrame;
@property(retain, nonatomic) UIImage *image;
@property(copy, nonatomic) NSString *subtitle;
@property(copy, nonatomic) NSString *title;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUITrendingSearch : NSObject
{
    NSString *_term;
    NSString *_URLString;
}

@property(retain, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(retain, nonatomic) NSString *term; // @synthesize term=_term;
- (void).cxx_destruct;

@end

@interface SKUITrendingSearchDocumentViewController : SKUIViewController <SKUIDocumentViewController>
{
    SKUITrendingSearchView *_resultsView;
    SKUITrendingSearchTemplateElement *_template;
}

- (void).cxx_destruct;
- (struct UIEdgeInsets)_resultsViewContentInset;
- (void)_reloadResultsView;
- (void)_resultButtonAction:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)loadView;
- (void)documentDidUpdate:(id)arg1;
- (id)initWithTemplateElement:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUITrendingSearchPage : NSObject
{
    NSString *_title;
    NSArray *_searches;
}

@property(retain, nonatomic) NSArray *searches; // @synthesize searches=_searches;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;

@end

@interface SKUITrendingSearchPageConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;
- (id)_pageWithDictionary:(id)arg1;

@end

@interface SKUITrendingSearchPageView : UIView
{
    id <SKUITrendingSearchPageViewDelegate> _delegate;
    SKUITrendingSearchPage *_page;
    SKUITrendingSearchView *_trendingSearchView;
}

@property(retain, nonatomic) SKUITrendingSearchPage *page; // @synthesize page=_page;
@property(nonatomic) __weak id <SKUITrendingSearchPageViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_buttonAction:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
@property(nonatomic) struct UIEdgeInsets contentInset;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SKUITrendingSearchTemplateElement : SKUIViewElement
{
}

@property(readonly, nonatomic) SKUILabelViewElement *titleLabel;
@property(readonly, nonatomic) NSArray *buttons;

@end

@interface SKUITrendingSearchView : UIView
{
    struct UIEdgeInsets _contentInset;
    NSArray *_resultButtons;
    UILabel *_titleLabel;
}

+ (id)resultButtonWithTitle:(id)arg1;
+ (id)defaultTitleFont;
+ (id)defaultTitleColor;
+ (id)defaultButtonFont;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(copy, nonatomic) NSArray *resultButtons; // @synthesize resultButtons=_resultButtons;
@property(nonatomic) struct UIEdgeInsets contentInset; // @synthesize contentInset=_contentInset;
- (void).cxx_destruct;
- (double)_contentHeightBySizingToFitWidth:(double)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;

@end

@interface SKUIURL : NSObject <NSCopying>
{
    NSMutableDictionary *_queryDictionary;
    NSString *_referrerApplicationName;
    NSString *_referrerURLString;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *underlyingURL; // @synthesize underlyingURL=_url;
@property(copy, nonatomic) NSString *referrerURLString; // @synthesize referrerURLString=_referrerURLString;
@property(copy, nonatomic) NSString *referrerApplicationName; // @synthesize referrerApplicationName=_referrerApplicationName;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)_searchURLBagKey;
- (id)_searchGroupForSearchKind:(id)arg1;
- (id)_queryDictionary;
- (id)valueForQueryParameter:(id)arg1;
@property(readonly, nonatomic) NSString *URLBagKey;
@property(readonly, nonatomic) NSString *searchTerm;
@property(readonly, nonatomic) NSString *redeemCode;
@property(readonly, copy, nonatomic) NSDictionary *queryStringDictionary;
- (id)newURLRequestWithBaseURL:(id)arg1;
- (id)newURLRequest;
@property(readonly, nonatomic) NSString *actionString;
- (id)initWithURLBagKey:(id)arg1;
- (id)initWithURL:(id)arg1;

@end

@interface SKUIURLActivityItemProvider : UIActivityItemProvider
{
    SKUIProductPageItem *_item;
    SKUIClientContext *_clientContext;
}

- (void).cxx_destruct;
- (id)activityViewController:(id)arg1 thumbnailImageForActivityType:(id)arg2 suggestedSize:(struct CGSize)arg3;
- (id)activityViewController:(id)arg1 subjectForActivityType:(id)arg2;
- (id)item;
- (id)initWithProductPageItem:(id)arg1 clientContext:(id)arg2;

@end

@interface SKUIURLBag : SSURLBag
{
    ISURLBag *_bag;
    NSMutableArray *_completionBlocks;
    _Bool _forceInvalidationForNextLoad;
    ISLoadURLBagOperation *_operation;
}

+ (id)URLBagForContext:(id)arg1;
- (void).cxx_destruct;
- (void)_finishOperationWithURLBag:(id)arg1 error:(id)arg2;
- (void)_enqueueOperationWithContext:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)storeFrontIdentifier;
- (void)loadWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)existingBagDictionary;
- (id)valueForKey:(id)arg1 error:(id *)arg2;
- (void)loadValueForKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)invalidate;
- (void)getTrustForURL:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface SKUIURLConnectionRequest : SSURLConnectionRequest
{
}

- (void)startWithConnectionResponseBlock:(CDUnknownBlockType)arg1;

@end

@interface SKUIURLResolver : NSObject <SKUIPassbookLoaderDelegate>
{
    SKUIClientContext *_clientContext;
    id <SKUIURLResolverDelegate> _delegate;
    id <UINavigationControllerDelegate> _navigationControllerDelegate;
    NSOperationQueue *_operationQueue;
    SKUIPassbookLoader *_passbookLoader;
}

+ (id)tabIdentifierForURL:(id)arg1;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <UINavigationControllerDelegate> navigationControllerDelegate; // @synthesize navigationControllerDelegate=_navigationControllerDelegate;
@property(nonatomic) __weak id <SKUIURLResolverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_showViewControllerWithResponse:(id)arg1 fromOperation:(id)arg2;
- (void)_showSearchWithURL:(id)arg1;
- (void)_showRedeemViewControllerWithURL:(id)arg1;
- (void)_showPlaceholderViewController;
- (void)_showGiftViewControllerWithURL:(id)arg1;
- (void)_showDonationViewControllerWithURL:(id)arg1;
- (void)_showBagURLWithURL:(id)arg1;
- (void)_showAccountViewControllerWithURL:(id)arg1;
- (void)_sendDidFinishWithResult:(_Bool)arg1;
- (void)_selectTabWithIdentifier:(id)arg1;
- (void)_resolveURLRequest:(id)arg1 withOriginURL:(id)arg2;
- (void)_presentViewController:(id)arg1;
- (void)_performLookupWithURL:(id)arg1;
- (id)_newHTMLViewControllerWithSection:(id)arg1;
- (void)_addPassbookPassWithURL:(id)arg1;
- (id)presentationViewControllerForPassbookLoader:(id)arg1;
- (void)passbookLoaderDidFinish:(id)arg1;
- (void)resolveURL:(id)arg1;
- (void)dealloc;
- (id)initWithClientContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIURLResolverDataConsumer : SSVURLDataConsumer
{
}

- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUIURLResolverResponse : NSObject
{
    NSData *_data;
    NSHTTPURLResponse *_response;
}

@property(readonly, nonatomic) NSHTTPURLResponse *URLResponse; // @synthesize URLResponse=_response;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)initWithData:(id)arg1 URLResponse:(id)arg2;

@end

@interface SKUIURLViewElement : SKUIViewElement
{
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
- (void).cxx_destruct;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIUber : NSObject
{
    SKUIArtworkList *_artworkList;
    SKUIColorScheme *_colorScheme;
    NSString *_text;
}

@property(readonly, nonatomic) NSString *text; // @synthesize text=_text;
@property(readonly, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(readonly, nonatomic) SKUIArtworkList *artworkList; // @synthesize artworkList=_artworkList;
- (void).cxx_destruct;
- (id)initWithUberDictionary:(id)arg1;

@end

@interface SKUIUberImageDataConsumer : SKUIImageDataConsumer
{
    UIColor *_backgroundColor;
}

@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
- (void).cxx_destruct;
- (id)imageForImage:(id)arg1;

@end

@interface SKUIVerticalInfoListCollectionViewCell : SKUIViewReuseCollectionViewCell <SKUIViewElementView>
{
    NSHashTable *_titleViews;
    NSMapTable *_valueViews;
}

+ (id)_attributedStringForLabel:(id)arg1 context:(id)arg2;
+ (id)_attributedStringForButton:(id)arg1 context:(id)arg2;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
- (void).cxx_destruct;
- (void)_imageTapAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)reloadWithViewElements:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIVerticalInfoListPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    SKUIViewElementLayoutContext *_cellLayoutContext;
    double _columnHeight;
    NSMutableArray *_columns;
    double _columnWidth;
    SKUIInfoListViewElement *_infoList;
    long long _numberOfColumns;
}

- (void).cxx_destruct;
- (void)_requestCellLayout;
- (id)_reloadColumnDataIfNecessary;
- (long long)_numberOfColumnsForWidth:(double)arg1;
- (void)_enumerateVisibleIndexPathsUsingBlock:(CDUnknownBlockType)arg1;
- (struct UIEdgeInsets)_contentInsetForIndexPath:(id)arg1;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (struct UIEdgeInsets)sectionContentInset;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (long long)numberOfCells;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIVerticalLockupCollectionViewCell : SKUICollectionViewCell <SKUIPerspectiveView, SKUIViewElementView>
{
    SKUIImageView *_highlightImageView;
    SKUIVerticalLockupView *_lockupView;
}

+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
- (void).cxx_destruct;
- (void)_reloadHighlightImageView;
- (void)setSelected:(_Bool)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (void)applyLayoutAttributes:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIVerticalLockupView : SKUIViewReuseView <SKUIItemOfferButtonDelegate, SKUIPerspectiveView, SKUIViewElementView>
{
    struct UIEdgeInsets _contentInset;
    NSMapTable *_lineSpacings;
    SKUILockupViewElement *_lockupElement;
    SKUISizeValue *_productImageBoundingSize;
    UIView *_productImageView;
    long long _sizingStyle;
    NSMapTable *_topInsets;
    NSMapTable *_viewElementViews;
}

+ (double)_topInsetForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (double)_bottomInsetForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (id)_attributedStringForLabel:(id)arg1;
+ (id)_attributedStringForButton:(id)arg1;
+ (struct CGSize)sizeThatFitsWidth:(double)arg1 viewElement:(id)arg2 context:(id)arg3;
+ (void)requestLayoutForViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
+ (struct CGSize)preferredSizeForViewElement:(id)arg1 context:(id)arg2;
+ (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2 context:(id)arg3;
+ (double)maximumPerspectiveHeightForSize:(struct CGSize)arg1;
@property(nonatomic) long long sizingStyle; // @synthesize sizingStyle=_sizingStyle;
- (void).cxx_destruct;
- (void)_showConfirmationAction:(id)arg1;
- (void)_cancelConfirmationAction:(id)arg1;
- (void)_buttonAction:(id)arg1;
- (void)itemOfferButtonWillAnimateTransition:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (id)viewForElementIdentifier:(id)arg1;
- (_Bool)updateWithItemState:(id)arg1 context:(id)arg2 animated:(_Bool)arg3;
- (_Bool)setImage:(id)arg1 forArtworkRequest:(id)arg2 context:(id)arg3;
- (void)setContentInset:(struct UIEdgeInsets)arg1;
- (void)reloadWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (void)updateForChangedDistanceFromVanishingPoint;
- (void)setVanishingPoint:(struct CGPoint)arg1;
- (void)setPerspectiveTargetView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIVideo : NSObject
{
    SKUIArtworkList *_artworks;
    NSURL *_url;
}

@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_url;
@property(readonly, nonatomic) SKUIArtworkList *artworks; // @synthesize artworks=_artworks;
- (void).cxx_destruct;
- (id)initWithVideoDictionary:(id)arg1;

@end

@interface SKUIVideoImageDataConsumer : SKUIImageDataConsumer
{
    unsigned long long _allowedOrientations;
    UIColor *_backgroundColor;
    SKUIColorScheme *_colorScheme;
    struct CGSize _landscapeSize;
    struct CGSize _portraitSize;
}

@property(nonatomic) struct CGSize portraitSize; // @synthesize portraitSize=_portraitSize;
@property(nonatomic) struct CGSize landscapeSize; // @synthesize landscapeSize=_landscapeSize;
@property(retain, nonatomic) SKUIColorScheme *colorScheme; // @synthesize colorScheme=_colorScheme;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) unsigned long long allowedOrientations; // @synthesize allowedOrientations=_allowedOrientations;
- (void).cxx_destruct;
- (id)imageForImage:(id)arg1;
- (id)imageForColor:(id)arg1 orientation:(unsigned long long)arg2;

@end

@interface SKUIVideoThumbnailView : SKUIImageView
{
    UIImageView *_playControlView;
}

- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface SKUIVideoViewElement : SKUIViewElement
{
    BOOL _enabled;
    long long _itemIdentifier;
    long long _playbackStyle;
    SKUIImageViewElement *_thumbnailImage;
}

@property(readonly, nonatomic) long long playbackStyle; // @synthesize playbackStyle=_playbackStyle;
@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
- (void).cxx_destruct;
- (_Bool)isEnabled;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) SKUIImageViewElement *thumbnailImage; // @synthesize thumbnailImage=_thumbnailImage;
@property(readonly, nonatomic) NSArray *assets;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface SKUIViewControllerFactory : SUViewControllerFactory
{
}

- (id)newPlaceholderViewController;

@end

@interface SKUIViewElementHorizontalLayout : NSObject
{
    double _elementSpacing;
    double _layoutWidth;
    long long _maximumElementsPerLine;
}

@property(nonatomic) long long maximumElementsPerLine; // @synthesize maximumElementsPerLine=_maximumElementsPerLine;
@property(nonatomic) double layoutWidth; // @synthesize layoutWidth=_layoutWidth;
@property(nonatomic) double elementSpacing; // @synthesize elementSpacing=_elementSpacing;
- (id)layoutViewElements:(id)arg1 usingSizingBlock:(CDUnknownBlockType)arg2;

@end

@interface SKUIViewElementLayoutContext : NSObject
{
    double _activePageWidth;
    NSMutableDictionary *_aggregateValues;
    id <SKUIArtworkRequestDelegate> _artworkRequestDelegate;
    SKUIBadgeTextAttachmentLoader *_badgeImageLoader;
    SKUIClientContext *_clientContext;
    unsigned long long _containerViewElementType;
    NSMapTable *_editorialLayouts;
    NSHashTable *_expandedEditorialLayouts;
    SKUIItemOfferButton *_itemOfferButton;
    NSMutableDictionary *_itemOfferButtonSizes;
    SKUIViewElementTextLayoutCache *_labelLayoutCache;
    NSMutableSet *_observedArtworkRequestIDs;
    UIViewController *_parentViewController;
    UIColor *_placeholderColor;
    NSMapTable *_placeholderImages;
    SKUIResourceLoader *_resourceLoader;
    UIColor *_tintColor;
}

@property(retain, nonatomic) UIColor *tintColor; // @synthesize tintColor=_tintColor;
@property(retain, nonatomic) SKUIResourceLoader *resourceLoader; // @synthesize resourceLoader=_resourceLoader;
@property(retain, nonatomic) UIColor *placeholderColor; // @synthesize placeholderColor=_placeholderColor;
@property(nonatomic) __weak UIViewController *parentViewController; // @synthesize parentViewController=_parentViewController;
@property(retain, nonatomic) SKUIViewElementTextLayoutCache *labelLayoutCache; // @synthesize labelLayoutCache=_labelLayoutCache;
@property(nonatomic) unsigned long long containerViewElementType; // @synthesize containerViewElementType=_containerViewElementType;
@property(retain, nonatomic) SKUIClientContext *clientContext; // @synthesize clientContext=_clientContext;
@property(nonatomic) __weak id <SKUIArtworkRequestDelegate> artworkRequestDelegate; // @synthesize artworkRequestDelegate=_artworkRequestDelegate;
@property(nonatomic) double activePageWidth; // @synthesize activePageWidth=_activePageWidth;
- (void).cxx_destruct;
- (struct CGSize)_sizeForImageElement:(id)arg1 applyTransform:(_Bool)arg2;
- (_Bool)_loadImageForURL:(id)arg1 cacheKey:(id)arg2 dataConsumer:(id)arg3 reason:(long long)arg4;
- (void)_artworkRequestDidLoadImageNotification:(id)arg1;
- (id)transientRequestIdentifierForViewElement:(id)arg1;
- (struct CGSize)sizeForViewElement:(id)arg1 width:(double)arg2;
- (struct CGSize)sizeForItemOfferButton:(id)arg1;
- (struct CGSize)sizeForImageElement:(id)arg1;
- (struct CGSize)sizeForBadgeElement:(id)arg1;
- (void)setAggregateValue:(id)arg1 forKey:(id)arg2;
- (id)requestIdentifierForViewElement:(id)arg1;
- (id)requestIdentifierForArtwork:(id)arg1;
- (_Bool)prefetchResourcesForViewElement:(id)arg1 reason:(long long)arg2;
- (id)placeholderImageForSize:(struct CGSize)arg1;
- (id)placeholderImageForImageElement:(id)arg1;
- (_Bool)loadImageForImageElement:(id)arg1 reason:(long long)arg2;
- (_Bool)loadImageForBadgeElement:(id)arg1 reason:(long long)arg2;
- (_Bool)loadImageForArtwork:(id)arg1 dataConsumer:(id)arg2 reason:(long long)arg3;
- (_Bool)loadImageForArtwork:(id)arg1 reason:(long long)arg2;
- (_Bool)isEditorialLayoutExpanded:(id)arg1;
- (void)invalidateAllEditorialLayouts;
- (void)expandEditorialForLabelElement:(id)arg1;
- (id)editorialLayoutForLabelElement:(id)arg1 width:(double)arg2;
- (double)defaultItemWidthForViewElement:(id)arg1;
@property(readonly, nonatomic) SKUIBadgeTextAttachmentLoader *badgeImageLoader;
- (id)aggregateValueForKey:(id)arg1;
- (void)dealloc;
- (id)initWithStorePageSectionContext:(id)arg1 previousLayoutContext:(id)arg2;
- (id)initWithStorePageSectionContext:(id)arg1;
- (id)init;
- (id)_initSKUIViewElementLayoutContext;

@end

@interface SKUIViewElementPageSection : SKUIStorePageSection <SKUIArtworkRequestDelegate>
{
    Class _cellClass;
    struct UIEdgeInsets _cellContentInset;
    SKUIViewElementLayoutContext *_cellLayoutContext;
    double _firstSectionTopInset;
    SKUICollectionViewCell<SKUIViewElementView> *_lastCell;
    _Bool _rendersWithPerspective;
    NSString *_reuseIdentifier;
    double _sectionBottomInset;
}

- (void).cxx_destruct;
- (_Bool)_stretchesToFitCollectionViewBounds;
- (_Bool)_showsImageReflection;
- (void)_requestCellLayout;
- (void)_reloadViewElementProperties;
- (void)artworkRequest:(id)arg1 didLoadImage:(id)arg2;
- (void)willTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAppearInContext:(id)arg1;
- (_Bool)updateCellWithIndexPath:(id)arg1 itemState:(id)arg2 animated:(_Bool)arg3;
- (struct UIEdgeInsets)sectionContentInset;
- (void)reloadCellWithIndexPath:(id)arg1 reason:(long long)arg2;
- (void)prefetchResourcesWithReason:(long long)arg1;
- (struct CGSize)preferredContentSize;
- (struct UIEdgeInsets)pinningContentInsetForItemAtIndexPath:(id)arg1;
- (long long)numberOfCells;
- (void)getModalSourceViewForViewElement:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)expandEditorialForLabelElement:(id)arg1 indexPath:(id)arg2;
- (long long)defaultItemPinningStyle;
- (double)contentInsetAdjustmentForCollectionView:(id)arg1;
- (void)collectionViewDidEndDisplayingCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillDisplayCellForItemAtIndexPath:(id)arg1;
- (void)collectionViewWillApplyLayoutAttributes:(id)arg1;
- (_Bool)collectionViewShouldSelectItemAtIndexPath:(id)arg1;
- (_Bool)collectionViewShouldHighlightItemAtIndexPath:(id)arg1;
- (void)collectionViewDidSelectItemAtIndexPath:(id)arg1;
- (struct CGSize)cellSizeForIndexPath:(id)arg1;
- (id)cellForIndexPath:(id)arg1;
- (id)backgroundColorForIndexPath:(id)arg1;
- (long long)applyUpdateType:(long long)arg1;
- (void)addImpressionsForIndexPath:(id)arg1 toSession:(id)arg2;
- (id)initWithPageComponent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIViewElementSlideshowController : NSObject <SKUISlideshowViewControllerDataSource, SKUISlideshowViewControllerDelegate>
{
    id <SKUIViewElementSlideshowDelegate> _delegate;
    SKUIViewElementLayoutContext *_layoutContext;
    NSMutableArray *_lockups;
    SKUISlideshowViewController *_padViewController;
    SKUIIPhoneSlideshowViewController *_phoneViewController;
    long long _selectedIndex;
    NSString *_title;
}

@property(retain, nonatomic) SKUIViewElementLayoutContext *layoutContext; // @synthesize layoutContext=_layoutContext;
@property(nonatomic) __weak id <SKUIViewElementSlideshowDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slideshowViewControllerDidFinish:(id)arg1;
- (id)slideshowViewController:(id)arg1 imageURLAtIndex:(long long)arg2 size:(struct CGSize *)arg3;
- (id)slideshowViewController:(id)arg1 imageAtIndex:(long long)arg2;
- (long long)numberOfItemsInSlideshowViewController:(id)arg1;
- (void)presentFromParentViewController:(id)arg1;
@property(readonly, nonatomic) long long numberOfSlideshowItems;
- (void)dealloc;
- (id)initWithShelf:(id)arg1 selectedLockup:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIViewElementText : NSObject
{
    NSMutableAttributedString *_attributedString;
    NSArray *_badges;
    NSMutableArray *_styledRanges;
    NSArray *_trailingBadges;
}

@property(readonly, nonatomic) NSArray *trailingBadges; // @synthesize trailingBadges=_trailingBadges;
@property(readonly, nonatomic) NSArray *badges; // @synthesize badges=_badges;
- (void).cxx_destruct;
- (id)_stringFromNumberElement:(id)arg1;
- (id)_stringFromDurationElement:(id)arg1;
- (id)_stringFromDateElement:(id)arg1;
- (id)_spanAttributeValueForDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;
- (void)_enumerateTextStylesUsingBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *string;
- (id)attributedStringWithDefaultFont:(id)arg1 foregroundColor:(id)arg2 textAlignment:(long long)arg3;
- (id)attributedStringWithDefaultFont:(id)arg1 foregroundColor:(id)arg2;
- (id)initWithXMLNodes:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;
- (id)initWithXMLNodes:(id)arg1;
- (id)initWithString:(id)arg1;

@end

@interface SKUIViewElementTextLayoutCache : NSObject
{
    SKUILayoutCache *_layoutCache;
    NSMutableDictionary *_layoutMapTables;
}

@property(readonly, nonatomic) SKUILayoutCache *layoutCache; // @synthesize layoutCache=_layoutCache;
- (void).cxx_destruct;
- (id)_layoutIndexForViewElement:(id)arg1 width:(long long)arg2;
- (id)_existingLayoutForViewElement:(id)arg1 width:(long long)arg2;
- (struct CGSize)_bestGuessSizeForOrdinal:(id)arg1 width:(double)arg2;
- (struct CGSize)_bestGuessSizeForLabel:(id)arg1 width:(double)arg2;
- (struct CGSize)_bestGuessSizeForButton:(id)arg1 width:(double)arg2;
- (void)_addRequest:(id)arg1 forViewElement:(id)arg2;
- (struct CGSize)sizeForViewElement:(id)arg1 width:(double)arg2;
- (struct CGSize)sizeForLabel:(id)arg1 width:(double)arg2;
- (struct CGSize)sizeForButton:(id)arg1 width:(double)arg2;
- (void)requestLayoutForViewElement:(id)arg1 attributedString:(id)arg2 width:(long long)arg3;
- (void)requestLayoutForOrdinal:(id)arg1 attributedString:(id)arg2 width:(long long)arg3;
- (void)requestLayoutForLabel:(id)arg1 attributedString:(id)arg2 width:(long long)arg3;
- (void)requestLayoutForButton:(id)arg1 attributedString:(id)arg2 width:(long long)arg3;
- (void)requestLayoutForBadge:(id)arg1 width:(long long)arg2;
- (id)layoutForWidth:(long long)arg1 viewElement:(id)arg2;
- (void)invalidateLayoutsForUpdatedElements;
- (struct CGSize)estimatedSizeForOrdinal:(id)arg1 width:(double)arg2;
- (struct CGSize)estimatedSizeForLabel:(id)arg1 width:(double)arg2;
- (struct CGSize)estimatedSizeForButton:(id)arg1 width:(double)arg2;
- (id)initWithLayoutCache:(id)arg1;

@end

@interface SKUIViewModification : NSObject
{
    SKUIViewReusePool *_viewPool;
    NSMutableArray *_views;
}

@property(readonly, nonatomic) NSArray *views; // @synthesize views=_views;
- (void).cxx_destruct;
- (void)addView:(id)arg1;
- (id)addReusableViewWithReuseIdentifier:(id)arg1;
- (id)initWithViewReusePool:(id)arg1;
- (void)_styleItemOfferButton:(id)arg1 forElement:(id)arg2 context:(id)arg3;
- (id)_itemStateForButton:(id)arg1;
- (id)_addImageViewWithReuseIdentifier:(id)arg1 viewElement:(id)arg2 context:(id)arg3;
- (id)addTomatoRatingViewWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addTextViewWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addStarRatingControlViewWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addStarRatingViewWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addOfferViewWithViewElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addMenuButtonWithTitleItem:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addLabelViewWithOrdinalElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addLabelViewWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addImageViewWithVideoElement:(id)arg1 context:(id)arg2;
- (id)addImageViewWithElement:(id)arg1 context:(id)arg2;
- (id)addHorizontalListWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addHeaderViewWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addDividerWithElement:(id)arg1 context:(id)arg2;
- (id)addButtonWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addBarRatingWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;
- (id)addBadgeViewWithElement:(id)arg1 width:(double)arg2 context:(id)arg3;

@end

@interface SKUIViewReusePool : NSObject
{
    UIView *_parentView;
    NSMutableDictionary *_reuseClasses;
    NSMutableArray *_viewPool;
}

- (void).cxx_destruct;
- (void)registerClass:(Class)arg1 forViewWithReuseIdentifier:(id)arg2;
- (void)recycleReusableViews:(id)arg1;
- (void)hideUnusedViews;
- (id)dequeueReusableViewWithReuseIdentifier:(id)arg1;
- (id)initWithParentView:(id)arg1;

@end

@interface SKUIWeakReference : NSObject
{
    NSObject *_object;
}

@property(nonatomic) __weak NSObject *object; // @synthesize object=_object;
- (void).cxx_destruct;

@end

@interface SKUIWishlist : NSObject
{
    SSWishlist *_database;
}

+ (id)activeWishlist;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)removeItemsWithItemIdentifiers:(id)arg1;
- (void)postChangeNotification;
@property(readonly, copy, nonatomic) NSArray *items;
- (_Bool)containsItemWithIdentifier:(long long)arg1;
- (void)addItem:(id)arg1;
@property(readonly, nonatomic) long long accountIdentifier;
- (id)initWithAccountIdentifier:(long long)arg1;

@end

@interface SKUIWishlistDataConsumer : SSVURLDataConsumer
{
}

- (id)_itemsWithJSONData:(id)arg1 error:(id *)arg2;
- (id)_errorWithData:(id)arg1 MIMEType:(id)arg2;
- (id)objectForData:(id)arg1 response:(id)arg2 error:(id *)arg3;

@end

@interface SKUIWishlistViewController : SKUIViewController <SKUIItemListTableDelegate>
{
    _UIBackdropView *_backdropView;
    id <SKUIWishlistDelegate> _delegate;
    UIBarButtonItem *_deleteButton;
    _Bool _editing;
    _UIContentUnavailableView *_emptyWishlistView;
    SKUIItemListTableViewController *_itemListViewController;
    _Bool _reloadOnNextAppear;
    SKUISyncWishlistOperation *_syncOperation;
    SKUIWishlist *_wishlist;
    long long _wishlistState;
}

+ (id)wishlistBarButtonItemWithClientContext:(id)arg1;
@property(nonatomic) __weak id <SKUIWishlistDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (long long)_wishlistState;
- (id)_wishlist;
- (void)_updateDeleteButton;
- (void)_syncWishlist;
- (void)_setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)_reloadWishlist;
- (void)_reloadNavigationBarAnimated:(_Bool)arg1;
- (void)_reloadForAccountsChanged;
- (void)_reloadChildView;
- (id)_itemListViewController;
- (_Bool)_isEditingEnabled;
- (void)_finishSyncWithResult:(_Bool)arg1 didChange:(_Bool)arg2 error:(id)arg3;
- (void)_finishSignInWithResponse:(id)arg1 error:(id)arg2;
- (id)_emptyWishlistView;
- (void)_destroyEmptyWishlistView;
- (void)_deleteItemsAtIndexPaths:(id)arg1;
- (void)_toggleEditAction:(id)arg1;
- (void)_signInAction:(id)arg1;
- (void)_doneAction:(id)arg1;
- (void)_deleteAction:(id)arg1;
- (void)_wishlistDidChangeNotification:(id)arg1;
- (void)itemList:(id)arg1 didSelectItem:(id)arg2 atIndexPath:(id)arg3;
- (void)itemList:(id)arg1 didRemoveItemAtIndexPath:(id)arg2;
- (void)itemList:(id)arg1 didDeselectItem:(id)arg2 atIndexPath:(id)arg3;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (id)contentScrollView;
- (void)setClientContext:(id)arg1;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SKUIWriteAReviewTemplateViewElement : SKUIViewElement
{
    long long _itemIdentifier;
    NSString *_reviewMetadataURLString;
}

@property(readonly, nonatomic) long long itemIdentifier; // @synthesize itemIdentifier=_itemIdentifier;
- (void).cxx_destruct;
- (id)applyUpdatesWithElement:(id)arg1;
@property(readonly, nonatomic) NSString *reviewMetadataURLString; // @synthesize reviewMetadataURLString=_reviewMetadataURLString;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;

@end

@interface UIViewController (SKUINavigationController)
@property(readonly, nonatomic) _UIBackdropView *SKUIPinnedHeaderView;
@end

@interface UIViewController (SKUIStackedBar)
@property(nonatomic) double SKUIStackedBarSplit;
@property(readonly, nonatomic) SKUIStackedBar *SKUIStackedBar;
@end

@interface _SKUIApplicationShutdownHelper : NSObject
{
    SKUIApplicationController *_applicationController;
    unsigned long long _taskID;
}

- (void).cxx_destruct;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)initWithApplicationController:(id)arg1;

@end

@interface _SKUICounterTimeFieldView : UIView
{
    UILabel *_labelLabel;
    UILabel *_valueLabel;
    unsigned long long _visibilityField;
}

@property(nonatomic) unsigned long long visibilityField; // @synthesize visibilityField=_visibilityField;
@property(readonly, nonatomic) UILabel *valueLabel; // @synthesize valueLabel=_valueLabel;
@property(readonly, nonatomic) UILabel *labelLabel; // @synthesize labelLabel=_labelLabel;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _SKUIItemBrowseCellContentView : UIView
{
    UILabel *_indexNumberLabel;
    UILabel *_subtitleLabel;
    UILabel *_titleLabel;
    UILabel *_userRatingLabel;
    SKUICellImageView *_userRatingImageView;
}

@property(retain, nonatomic) SKUICellImageView *userRatingImageView; // @synthesize userRatingImageView=_userRatingImageView;
@property(retain, nonatomic) UILabel *userRatingLabel; // @synthesize userRatingLabel=_userRatingLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *indexNumberLabel; // @synthesize indexNumberLabel=_indexNumberLabel;
- (void).cxx_destruct;
- (void)setBackgroundColor:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _SKUIModalSheetNavigationController : UINavigationController
{
}

- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;

@end

@interface _SKUISplitViewDocumentSplitViewController : UISplitViewController
{
}

- (double)_skui_primaryColumnWidthForWidth:(double)arg1;
- (struct CGSize)sizeForChildContentContainer:(id)arg1 withParentContainerSize:(struct CGSize)arg2;

@end

@interface _SKUIStyledTextRange : NSObject
{
    struct _NSRange _range;
    long long _textStyle;
    id _value;
}

- (void).cxx_destruct;

@end

@interface _SKUITrendingSearchResultButton : UIButton
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;

@end

@interface _SKUIVideoPreviewNotificationObserver : NSObject
{
    NSArray *_observers;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithObservers:(id)arg1;

@end

