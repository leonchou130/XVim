//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

#pragma mark Typedef'd Structures

typedef struct {
    long long category;
    long long activity;
} CDStruct_a87a0d46;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech
// UUID: 90B0757F-10E0-30EE-8F06-23E52FE61B56
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 51.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol TTSSpeechConnectionDelegate
- (void)connection:(TTSSpeechRequestOwner *)arg1 speechRequest:(TTSSpeechRequest *)arg2 willSpeakMark:(long long)arg3 inRange:(struct _NSRange)arg4;
- (void)connection:(TTSSpeechRequestOwner *)arg1 speechRequest:(TTSSpeechRequest *)arg2 didStopAtEnd:(_Bool)arg3 phonemesSpoken:(NSString *)arg4 error:(NSError *)arg5;
- (void)connection:(TTSSpeechRequestOwner *)arg1 speechRequestDidContinue:(TTSSpeechRequest *)arg2;
- (void)connection:(TTSSpeechRequestOwner *)arg1 speechRequestDidPause:(TTSSpeechRequest *)arg2;
- (void)connection:(TTSSpeechRequestOwner *)arg1 speechRequestDidStart:(TTSSpeechRequest *)arg2;
@end

@protocol TTSSpeechRequestDelegate <NSObject>
- (oneway void)speechRequest:(TTSSpeechRequest *)arg1 didStopWithSuccess:(_Bool)arg2 phonemesSpoken:(NSString *)arg3 forService:(id <TTSSpeechService>)arg4 error:(NSError *)arg5;
- (oneway void)speechRequest:(TTSSpeechRequest *)arg1 withMark:(long long)arg2 didStartForRange:(struct _NSRange)arg3 forService:(id <TTSSpeechService>)arg4;
- (oneway void)speechRequestDidContinue:(TTSSpeechRequest *)arg1 forService:(id <TTSSpeechService>)arg2;
- (oneway void)speechRequestDidPause:(TTSSpeechRequest *)arg1 forService:(id <TTSSpeechService>)arg2;
- (oneway void)speechRequestDidStart:(TTSSpeechRequest *)arg1 forService:(id <TTSSpeechService>)arg2;
@end

@protocol TTSSpeechService <NSObject>
@property(nonatomic) NSObject<OS_dispatch_queue> *serviceQueue;
- (oneway void)getSpeechIsActiveForRequest:(TTSSpeechRequest *)arg1 reply:(void (^)(_Bool))arg2;
- (oneway void)getSpeechIsActiveReply:(void (^)(_Bool))arg1;
- (oneway void)getVoicesForLanguage:(NSString *)arg1 reply:(void (^)(NSArray *))arg2;
- (oneway void)stopSpeechRequest:(TTSSpeechRequest *)arg1 atMark:(long long)arg2;
- (oneway void)continueSpeechRequest:(TTSSpeechRequest *)arg1;
- (oneway void)pauseSpeechRequest:(TTSSpeechRequest *)arg1 atMark:(long long)arg2;
- (oneway void)startSpeechRequest:(TTSSpeechRequest *)arg1;
@end

@interface NSAttributedString (TTSSpeechAdditions)
+ (id)attributedStringWithFormatAndAttributes:(id)arg1;
@end

@interface NSMutableAttributedString (TTSSpeechAdditions)
- (void)appendString:(id)arg1 withAttributes:(id)arg2;
@end

@interface TTSAudioSession : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _audioSessionIsSetUp;
    CDStruct_a87a0d46 _desiredState;
    CDStruct_a87a0d46 _cachedState;
    _Bool _bluetoothAllowed;
    struct __CFBag *_activityBag;
    long long _serverGeneration;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)_safeSetBluetoothInputAllowed:(_Bool)arg1;
- (void)_safeSetActive:(_Bool)arg1 withActivity:(long long)arg2;
- (void)_safeSetCategoryForActivity:(long long)arg1;
- (long long)_safeServerGeneration;
- (void)_safeSetupAudioSession;
- (long long)_nextActivityForActive:(_Bool)arg1 activity:(long long)arg2 serverActivity:(long long)arg3;
- (void)_setCategoryForActivity:(long long)arg1;
- (void)_setupAudioSession;
- (void)_mediaServicesWereReset:(id)arg1;
- (void)_audioSessionInterrupted:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface TTSFormatArgument : NSObject
{
    NSString *formatSpecifier;
    NSDictionary *attributes;
    NSString *formattedArg;
}

- (void)dealloc;

@end

@interface TTSSpeechChannel : NSObject
{
    TTSSpeechVoice *_voice;
}

+ (_Bool)supportsSecureCoding;
@property(retain, nonatomic) TTSSpeechVoice *voice; // @synthesize voice=_voice;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithVoice:(id)arg1;

@end

@interface TTSSpeechRequest : NSObject <NSSecureCoding>
{
    id <TTSSpeechRequestDelegate> _delegate;
    TTSSpeechChannel *_speechChannel;
    _Bool _useCustomVoice;
    _Bool _maintainsInput;
    _Bool _audioSessionIDIsValid;
    _Bool _useVoiceBooster;
    unsigned int _audioSessionID;
    unsigned int _audioQueueFlags;
    NSString *_text;
    NSAttributedString *_attributedText;
    NSString *_languageCode;
    long long _footprint;
    long long _gender;
    NSURL *_outputPath;
    double _rate;
    double _pitch;
    double _volume;
    double _latency;
    double _dispatchTime;
    double _handledTime;
}

+ (_Bool)supportsSecureCoding;
@property(nonatomic) _Bool useVoiceBooster; // @synthesize useVoiceBooster=_useVoiceBooster;
@property(nonatomic) double handledTime; // @synthesize handledTime=_handledTime;
@property(nonatomic) double dispatchTime; // @synthesize dispatchTime=_dispatchTime;
@property(nonatomic) double latency; // @synthesize latency=_latency;
@property(nonatomic) unsigned int audioQueueFlags; // @synthesize audioQueueFlags=_audioQueueFlags;
@property(nonatomic) unsigned int audioSessionID; // @synthesize audioSessionID=_audioSessionID;
@property(nonatomic) _Bool audioSessionIDIsValid; // @synthesize audioSessionIDIsValid=_audioSessionIDIsValid;
@property(nonatomic) _Bool maintainsInput; // @synthesize maintainsInput=_maintainsInput;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) double pitch; // @synthesize pitch=_pitch;
@property(nonatomic) double rate; // @synthesize rate=_rate;
@property(copy, nonatomic) NSURL *outputPath; // @synthesize outputPath=_outputPath;
@property(nonatomic) long long gender; // @synthesize gender=_gender;
@property(nonatomic) _Bool useCustomVoice; // @synthesize useCustomVoice=_useCustomVoice;
@property(nonatomic) long long footprint; // @synthesize footprint=_footprint;
@property(copy, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(retain, nonatomic) TTSSpeechChannel *speechChannel; // @synthesize speechChannel=_speechChannel;
- (void)speechRequestDidStopWithSuccess:(_Bool)arg1 phonemesSpoken:(id)arg2 forService:(id)arg3 error:(id)arg4;
- (void)speechRequestMark:(long long)arg1 didStartForRange:(struct _NSRange)arg2 forService:(id)arg3;
- (void)speechRequestDidContinueForService:(id)arg1;
- (void)speechRequestDidPauseForService:(id)arg1;
- (void)speechRequestDidStartForService:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithSpeechChannel:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (long long)vocalizerGender;
- (long long)vocalizerFootprint;

@end

@interface TTSSpeechRequestOwner : NSObject <TTSSpeechRequestDelegate>
{
    id <TTSSpeechConnectionDelegate> _delegate;
    TTSSpeechRequest *_request;
    id <TTSSpeechService> _speechService;
}

@property(nonatomic) __weak id <TTSSpeechService> speechService; // @synthesize speechService=_speechService;
@property(readonly, nonatomic) TTSSpeechRequest *request; // @synthesize request=_request;
@property(nonatomic) __weak id <TTSSpeechConnectionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (oneway void)speechRequest:(id)arg1 didStopWithSuccess:(_Bool)arg2 phonemesSpoken:(id)arg3 forService:(id)arg4 error:(id)arg5;
- (oneway void)speechRequest:(id)arg1 withMark:(long long)arg2 didStartForRange:(struct _NSRange)arg3 forService:(id)arg4;
- (oneway void)speechRequestDidContinue:(id)arg1 forService:(id)arg2;
- (oneway void)speechRequestDidPause:(id)arg1 forService:(id)arg2;
- (oneway void)speechRequestDidStart:(id)arg1 forService:(id)arg2;
- (void)continueCurrentSpeechRequest;
- (void)pauseCurrentSpeechRequestAtMark:(long long)arg1 waitUntilPaused:(_Bool)arg2;
- (void)stopCurrentSpeechRequestAtMark:(long long)arg1 waitUntilStopped:(_Bool)arg2;
- (void)startSpeechRequest:(id)arg1;
- (_Bool)isSystemSpeakingOnBehalfOfCurrentConnection;
- (_Bool)isSystemSpeaking;
- (id)availableVoicesForLanguageCode:(id)arg1;
- (void)_setRequest:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithSpeechService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface TTSSpeechSynthesizer : NSObject <TTSSpeechConnectionDelegate>
{
    long long _footprint;
    id <TTSSpeechSynthesizerDelegate> _delegate;
    _Bool _useSharedSession;
    _Bool _audioSessionIDIsValid;
    unsigned int _audioSessionID;
    unsigned int _audioQueueFlags;
    NSMutableDictionary *_channels;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableArray *_currentRequestOwners;
    NSMutableArray *_speechRequests;
    struct {
        unsigned int delegateStartWithRequest:1;
        unsigned int delegateFinishWithRequest:1;
        unsigned int delegateFinishWithPhonemesSpokenWithRequest:1;
        unsigned int delegatePauseWithRequest:1;
        unsigned int delegateContinueWithRequest:1;
        unsigned int delegateWillSpeakWithRequest:1;
        unsigned int willUseInput:1;
    } _synthesizerFlags;
    float _rate;
    float _pitch;
    float _volume;
    NSString *_voiceIdentifier;
}

+ (_Bool)isSystemSpeaking;
+ (id)availableLanguageCodes;
+ (id)availableVoicesForLanguageCode:(id)arg1;
+ (id)availableVoices;
+ (void)initialize;
@property(retain, nonatomic) NSString *voiceIdentifier; // @synthesize voiceIdentifier=_voiceIdentifier;
@property(nonatomic) float volume; // @synthesize volume=_volume;
@property(nonatomic) float pitch; // @synthesize pitch=_pitch;
@property(nonatomic) float rate; // @synthesize rate=_rate;
- (void).cxx_destruct;
- (void)connection:(id)arg1 speechRequest:(id)arg2 willSpeakMark:(long long)arg3 inRange:(struct _NSRange)arg4;
- (void)connection:(id)arg1 speechRequest:(id)arg2 didStopAtEnd:(_Bool)arg3 phonemesSpoken:(id)arg4 error:(id)arg5;
- (void)connection:(id)arg1 speechRequestDidContinue:(id)arg2;
- (void)connection:(id)arg1 speechRequestDidPause:(id)arg2;
- (void)connection:(id)arg1 speechRequestDidStart:(id)arg2;
- (_Bool)continueSpeakingRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)pauseSpeakingRequest:(id)arg1 atNextBoundary:(long long)arg2 synchronously:(_Bool)arg3 error:(id *)arg4;
- (_Bool)pauseSpeakingRequest:(id)arg1 atNextBoundary:(long long)arg2 error:(id *)arg3;
- (_Bool)stopSpeakingRequest:(id)arg1 atNextBoundary:(long long)arg2 synchronously:(_Bool)arg3 error:(id *)arg4;
- (_Bool)stopSpeakingRequest:(id)arg1 atNextBoundary:(long long)arg2 error:(id *)arg3;
- (_Bool)startSpeakingString:(id)arg1 withLanguageCode:(id)arg2 request:(id *)arg3 error:(id *)arg4;
- (_Bool)startSpeakingString:(id)arg1 toURL:(id)arg2 request:(id *)arg3 error:(id *)arg4;
- (_Bool)startSpeakingString:(id)arg1 request:(id *)arg2 error:(id *)arg3;
- (void)useAudioQueueFlags:(unsigned int)arg1;
- (void)useSpecificAudioSession:(unsigned int)arg1;
- (void)useSharedAudioSession:(_Bool)arg1;
- (long long)footprint;
- (void)setFootprint:(long long)arg1;
- (float)maximumRate;
- (float)minimumRate;
- (id)speechString;
- (_Bool)isSpeaking;
- (_Bool)continueSpeakingWithError:(id *)arg1;
- (_Bool)pauseSpeakingAtNextBoundary:(long long)arg1 synchronously:(_Bool)arg2 error:(id *)arg3;
- (_Bool)pauseSpeakingAtNextBoundary:(long long)arg1 error:(id *)arg2;
- (_Bool)stopSpeakingAtNextBoundary:(long long)arg1 synchronously:(_Bool)arg2 error:(id *)arg3;
- (_Bool)stopSpeakingAtNextBoundary:(long long)arg1 error:(id *)arg2;
- (_Bool)startSpeakingString:(id)arg1 toURL:(id)arg2 withLanguageCode:(id)arg3 error:(id *)arg4;
- (_Bool)startSpeakingString:(id)arg1 withLanguageCode:(id)arg2 error:(id *)arg3;
- (_Bool)startSpeakingString:(id)arg1 toURL:(id)arg2 error:(id *)arg3;
- (_Bool)startSpeakingString:(id)arg1 error:(id *)arg2;
@property(nonatomic) __weak id <TTSSpeechSynthesizerDelegate> delegate; // @dynamic delegate;
- (_Bool)_continueSpeakingRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)_pauseSpeakingRequest:(id)arg1 atNextBoundary:(long long)arg2 synchronously:(_Bool)arg3 error:(id *)arg4;
- (_Bool)_stopSpeakingRequest:(id)arg1 atNextBoundary:(long long)arg2 synchronously:(_Bool)arg3 error:(id *)arg4;
- (id)_speechVoiceForIdentifier:(id)arg1 language:(id)arg2;
- (_Bool)_startSpeakingString:(id)arg1 orAttributedString:(id)arg2 toURL:(id)arg3 withLanguageCode:(id)arg4 request:(id *)arg5 error:(id *)arg6;
- (id)_preprocessText:(id)arg1 languageCode:(id)arg2;
@property(readonly, nonatomic) NSString *resolvedVoiceIdentifier;
- (void)_setDelegate:(id)arg1;
- (void)dealloc;
- (_Bool)startSpeakingAttributedString:(id)arg1 toURL:(id)arg2 withLanguageCode:(id)arg3 error:(id *)arg4;
- (void)_mediaServicesDied;
- (id)init;

@end

@interface TTSSpeechVoice : NSObject
{
    id <TTSSpeechService> _service;
    _Bool _useVoiceBooster;
    _Bool _isDefault;
    _Bool _isCustomVoice;
    NSString *_name;
    NSString *_language;
    NSString *_identifier;
    long long _footprint;
    long long _gender;
}

@property(nonatomic) long long gender; // @synthesize gender=_gender;
@property(nonatomic) _Bool isCustomVoice; // @synthesize isCustomVoice=_isCustomVoice;
@property(readonly, nonatomic) _Bool isDefault; // @synthesize isDefault=_isDefault;
@property(nonatomic) long long footprint; // @synthesize footprint=_footprint;
@property(retain, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *language; // @synthesize language=_language;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) _Bool useVoiceBooster;
- (void)_initializeVoiceBooster;
- (void)setService:(id)arg1;
- (id)service;
- (void)_routeChange:(id)arg1;
- (id)init;

@end

@interface TTSVoiceAsset : NSObject <NSSecureCoding>
{
    _Bool _isInstalled;
    NSString *_name;
    NSArray *_languages;
    long long _gender;
    long long _footprint;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) _Bool isInstalled; // @synthesize isInstalled=_isInstalled;
@property(readonly, nonatomic) long long footprint; // @synthesize footprint=_footprint;
@property(readonly, nonatomic) long long gender; // @synthesize gender=_gender;
@property(readonly, nonatomic) NSArray *languages; // @synthesize languages=_languages;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)description;
- (id)initWithName:(id)arg1 languages:(id)arg2 gender:(long long)arg3 footprint:(long long)arg4 isInstalled:(_Bool)arg5;

@end

@interface TTSVoiceAssetManager : NSObject
{
}

+ (id)sharedInstance;
- (void)automaticallyDownloadVoiceAssetsIfNeeded;
- (void)_automaticallyDownloadVoiceAssetsIfNeeded;
- (void)getAutoDownloadedVoiceAssets:(CDUnknownBlockType)arg1;
- (id)_autoDownloadedAssets;
- (void)setAutoDownloadedVoiceAssets:(id)arg1;
- (void)startDownloadingVoiceAsset:(id)arg1 progress:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)getVoiceAssetsLocalOnly:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;
- (id)resourcePathForLanguage:(id)arg1 gender:(long long)arg2 footprint:(long long)arg3 name:(id)arg4;
- (id)_voiceAssetQueryForName:(id)arg1 language:(id)arg2 gender:(long long)arg3 footprint:(long long)arg4 version:(id)arg5 localOnly:(_Bool)arg6;

@end

