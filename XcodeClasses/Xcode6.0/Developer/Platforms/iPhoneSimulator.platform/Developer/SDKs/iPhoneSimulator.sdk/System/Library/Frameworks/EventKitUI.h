//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int listIsFlat:1;
    unsigned int showAll:1;
    unsigned int showColors:1;
    unsigned int allSelected:1;
    unsigned int allowsRotation:1;
    unsigned int allowsEdit:1;
    unsigned int showsDoneButton:1;
    unsigned int showsCancelButton:1;
    unsigned int showsWritableCalendarsOnly:1;
    unsigned int showsRefreshButton:1;
    unsigned int allowsPullToRefresh:1;
} CDStruct_a7a51b3b;

typedef struct {
    int _field1;
    char _field2;
    char _field3;
    char _field4;
    char _field5;
    double _field6;
} CDStruct_79f9e052;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/Frameworks/EventKitUI.framework/EventKitUI
// UUID: DDC3D859-F337-309C-9495-F4F80D3CEE0E
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 1717.2.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ABPeoplePickerNavigationControllerDelegate <NSObject>

@optional
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (_Bool)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 shouldContinueAfterSelectingPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(ABPeoplePickerNavigationController *)arg1;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(ABPeoplePickerNavigationController *)arg1 didSelectPerson:(void *)arg2;
@end

@protocol ABPersonViewControllerDelegate <NSObject>
- (_Bool)personViewController:(ABPersonViewController *)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
@end

@protocol ABSearchOperationDelegate <NSObject>
- (void)searchOperation:(ABSearchOperation *)arg1 didFindMatches:(NSArray *)arg2 moreComing:(_Bool)arg3;
@end

@protocol ABUnknownPersonViewControllerDelegate <NSObject>
- (void)unknownPersonViewController:(ABUnknownPersonViewController *)arg1 didResolveToPerson:(void *)arg2;

@optional
- (_Bool)unknownPersonViewController:(ABUnknownPersonViewController *)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
@end

@protocol BlockableScrollViewDelegate <NSObject>
- (_Bool)blockableScrollViewShouldAllowScrolling;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CUIKSingleDayTimelineGeometryDelegate <NSObject>
@property(readonly, nonatomic) _Bool originIsUpperLeft;
@property(readonly, nonatomic) double timeWidth;
@property(readonly, nonatomic) double topPadding;
@property(readonly, nonatomic) double hourHeight;
@property(readonly, nonatomic) struct CGRect displayedRect;
- (struct CGPoint)pointForDate:(double)arg1;
- (double)dateForPoint:(struct CGPoint)arg1;
@end

@protocol CUIKSingleDayTimelineLayoutScreenUtils <NSObject>
- (double)RoundToScreenScale:(double)arg1;
- (double)RoundToScreenScaleForFloat:(double)arg1;
- (struct CGRect)RoundRectToScreenScaleForRect:(struct CGRect)arg1;
@end

@protocol CUIKSingleDayTimelineViewItem <NSObject>
+ (double)barToBarHorizontalDistanceIncludingBarWidth;
@property(readonly) _Bool visibleHeightLocked;
@property struct CGRect unPinnedViewFrame;
@property(readonly, nonatomic) EKEvent *event;
@property(readonly, nonatomic) double viewMaxNaturalTextHeight;
@property(readonly, nonatomic) double enoughHeightForOneLine;
@property(readonly, nonatomic) _Bool hideTravelTime;
@property(readonly, nonatomic) NSDate *end;
@property(readonly, nonatomic) NSDate *start;
@property(readonly, nonatomic) NSDate *startWithTravelTime;
- (void)setTravelTimeHeight:(double)arg1;
- (void)setVisibleHeight:(double)arg1;
- (struct CGRect)stagedFrame;
- (void)setStagedFrame:(struct CGRect)arg1;
@end

@protocol CalendarEventAlarmTableDelegate <NSObject>
- (void)alarmTableDidChangeAlarm:(CalendarEventAlarmTable *)arg1;
@end

@protocol CalendarEventLoaderDelegate
- (void)calendarEventLoader:(CalendarEventLoader *)arg1 occurrencesDidUpdateBetweenStart:(double)arg2 end:(double)arg3;
@end

@protocol CalendarLabelTextMetrics
@property(copy, nonatomic) NSString *text;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIFont *font;
@property(nonatomic) long long textAlignment;
@property(nonatomic) long long lineBreakMode;
@property(nonatomic) long long numberOfLines;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2;
@end

@protocol CalendarPublishingActivityDelegate <NSObject>
- (NSString *)pubishURL;
- (NSString *)calendarTitle;
@end

@protocol EKCalendarChooserDelegate <NSObject>

@optional
- (void)calendarChooserDidCancel:(EKCalendarChooser *)arg1;
- (void)calendarChooserDidFinish:(EKCalendarChooser *)arg1;
- (void)calendarChooserSelectionDidChange:(EKCalendarChooser *)arg1;
@end

@protocol EKCalendarEditItemDelegate <NSObject>
- (UITableView *)tableView;
- (UINavigationController *)owningNavigationController;
- (int)sectionForCalendarEditItem:(EKCalendarEditItem *)arg1;
- (void)calendarItemStartedEditing:(EKCalendarEditItem *)arg1;
@end

@protocol EKCalendarItemEditItemDelegate <NSObject>
- (NSString *)defaultAlertTitleForEditItem:(EKCalendarItemEditItem *)arg1;

@optional
- (UIViewController *)viewControllerForEditItem:(EKCalendarItemEditItem *)arg1;
- (void)editItem:(EKCalendarItemEditItem *)arg1 textViewShouldReturn:(UIView *)arg2;
- (void)editItemRequiresPopoverSizeUpdate:(EKCalendarItemEditItem *)arg1;
- (void)editItemRequiresHeightChange:(EKCalendarItemEditItem *)arg1;
- (void)editItem:(EKCalendarItemEditItem *)arg1 didEndDatePickingAnimated:(_Bool)arg2;
- (void)editItem:(EKCalendarItemEditItem *)arg1 willBeginDatePickingWithDate:(NSDate *)arg2 action:(SEL)arg3 animated:(_Bool)arg4 forSubitem:(unsigned long long)arg5;
- (void)editItem:(EKCalendarItemEditItem *)arg1 wantsRowsScrolledToVisible:(NSIndexSet *)arg2;
- (long long)rowNumberForEditItem:(EKCalendarItemEditItem *)arg1;
- (void)editItem:(EKCalendarItemEditItem *)arg1 wantsRowReload:(NSIndexPath *)arg2;
- (void)editItem:(EKCalendarItemEditItem *)arg1 performActionsOnCellAtSubitem:(unsigned long long)arg2 actions:(void (^)(UITableViewCell *))arg3;
- (void)editItem:(EKCalendarItemEditItem *)arg1 wantsRowInsertions:(NSIndexSet *)arg2 rowDeletions:(NSIndexSet *)arg3 rowReloads:(NSIndexSet *)arg4;
- (void)editItem:(EKCalendarItemEditItem *)arg1 wantsRowInsertions:(NSIndexSet *)arg2 rowDeletions:(NSIndexSet *)arg3;
- (void)editItem:(EKCalendarItemEditItem *)arg1 wantsDoneButtonDisabled:(_Bool)arg2;
- (void)editItem:(EKCalendarItemEditItem *)arg1 wantsKeyboardPinned:(_Bool)arg2;
- (void)editItemWantsInjectableViewControllerToBeShown:(EKCalendarItemEditItem *)arg1;
- (void)editItemTextChanged:(EKCalendarItemEditItem *)arg1;
- (void)editItemDidEndEditing:(EKCalendarItemEditItem *)arg1;
- (void)editItem:(EKCalendarItemEditItem *)arg1 didCommitFromDetailViewController:(_Bool)arg2;
- (void)editItemDidStartEditing:(EKCalendarItemEditItem *)arg1;
@end

@protocol EKCalendarItemEditorDelegate <NSObject>

@optional
- (void)editor:(EKCalendarItemEditor *)arg1 didChangeHeightAnimated:(_Bool)arg2;
- (void)editor:(EKCalendarItemEditor *)arg1 didCompleteWithAction:(int)arg2;
- (void)editor:(EKCalendarItemEditor *)arg1 prepareCalendarItemForEdit:(EKCalendarItem *)arg2;
@end

@protocol EKCalendarItemInlineEditItem <NSObject>
- (_Bool)isSaveable;
@end

@protocol EKCellShortener <NSObject>
- (void)shortenCell:(UITableViewCell *)arg1;
@end

@protocol EKCurrentTimeMarkerViewUpdating <NSObject>
- (void)updateMarkerPosition;
@end

@protocol EKDayAllDayViewDelegate <NSObject>

@optional
- (void)allDayViewDidLayoutSubviews:(EKDayAllDayView *)arg1;
- (void)allDayView:(EKDayAllDayView *)arg1 didSelectEvent:(EKEvent *)arg2;
@end

@protocol EKDayOccurrenceTravelTimeViewMetricsDelegate <NSObject>
- (struct UIEdgeInsets)padding;
@end

@protocol EKDayTimeViewDelegate <NSObject>
- (struct CGRect)currentTimeRectInView:(UIView *)arg1;
@end

@protocol EKDayViewContentDelegate <NSObject>
- (void)dayViewContent:(EKDayViewContent *)arg1 didTapInEmptySpaceOnDay:(double)arg2;
- (void)dayViewContent:(EKDayViewContent *)arg1 didTapPinnedOccurrence:(EKEvent *)arg2;

@optional
- (void)dayViewContent:(EKDayViewContent *)arg1 didSelectEvent:(EKEvent *)arg2;
- (void)occurrencePressed:(EKEvent *)arg1 onDay:(double)arg2;
- (void)dayViewContent:(EKDayViewContent *)arg1 didCreateOccurrenceViews:(NSArray *)arg2;
@end

@protocol EKDayViewDataSource <NSObject>
- (CalendarOccurrencesCollection *)dayView:(EKDayView *)arg1 eventsForStartDate:(EKCalendarDate *)arg2 endDate:(EKCalendarDate *)arg3;
@end

@protocol EKDayViewDelegate <NSObject>

@optional
- (void)dayView:(EKDayView *)arg1 didUpdateScrollPosition:(struct CGPoint)arg2;
- (void)dayView:(EKDayView *)arg1 isPinchingDayViewWithScale:(double)arg2;
- (void)dayView:(EKDayView *)arg1 didScaleDayViewWithScale:(double)arg2;
- (void)dayView:(EKDayView *)arg1 didSelectEvent:(EKEvent *)arg2;
- (void)dayView:(EKDayView *)arg1 didCreateOccurrenceViews:(NSArray *)arg2;
- (void)dayViewDidFinishScrollingToOccurrence:(EKDayView *)arg1;
- (void)dayView:(EKDayView *)arg1 firstVisibleSecondChanged:(unsigned long long)arg2;
- (void)dayViewDidTapEmptySpace:(EKDayView *)arg1;
@end

@protocol EKEditItemViewControllerDelegate <NSObject>
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (void)editItemViewController:(EKEditItemViewController *)arg1 didCompleteWithAction:(int)arg2;

@optional
- (void)editItemViewControllerWantsKeyboardPinned:(_Bool)arg1;
- (_Bool)editItemViewControllerCommit:(EKEditItemViewController *)arg1;
@end

@protocol EKEditItemViewControllerProtocol

@optional
@property(nonatomic) _Bool editItemShouldBeAskedForInjectableViewController;
@property(nonatomic) _Bool presentModally;
@property(nonatomic) __weak id <EKEditItemViewControllerDelegate> editDelegate;
- (void)saveAndDismissWithExtremePrejudice;
@end

@protocol EKEventAttachmentCellControllerDelegate <NSObject>
- (EKEvent *)owningEventForAttachmentCellController:(EKEventAttachmentCellController *)arg1;
- (UIViewController *)parentViewControllerForAttachmentCellController:(EKEventAttachmentCellController *)arg1;
@end

@protocol EKEventAttachmentEditViewControllerDelegate <NSObject>

@optional
- (EKEvent *)owningEventForAttachmentEditViewController:(EKEventAttachmentEditViewController *)arg1;
@end

@protocol EKEventAttendeePickerDelegate <NSObject>
- (int)eventAttendeePicker:(EKEventAttendeePicker *)arg1 getValidationStatusForEmailAddress:(NSString *)arg2;
- (void)eventAttendeePicker:(EKEventAttendeePicker *)arg1 cacheValidationStatus:(int)arg2 forEmail:(NSString *)arg3;
@end

@protocol EKEventDetailTitleCellDelegate
- (void)editButtonPressed;
- (_Bool)shouldShowEditButtonInline;
@end

@protocol EKEventGestureControllerDelegate <NSObject>
- (_Bool)didScrollWhenEventGestureController:(EKEventGestureController *)arg1 scrollTimerFiredToMoveLeft:(_Bool)arg2 right:(_Bool)arg3 vertically:(_Bool)arg4 towardPoint:(struct CGPoint)arg5;
- (void)eventGestureController:(EKEventGestureController *)arg1 didSingleTapOccurrence:(EKEvent *)arg2;
- (void)eventGestureController:(EKEventGestureController *)arg1 didCancelEditingOccurrence:(EKEvent *)arg2 fadedOut:(_Bool)arg3;
- (_Bool)eventGestureController:(EKEventGestureController *)arg1 didCommitOccurrence:(EKEvent *)arg2 toDate:(double)arg3 isAllDay:(_Bool)arg4 span:(int)arg5;
- (void)eventGestureController:(EKEventGestureController *)arg1 didMoveToDate:(double)arg2 isAllDay:(_Bool)arg3;
- (void)eventGestureController:(EKEventGestureController *)arg1 didSetUpAtDate:(double)arg2 isAllDay:(_Bool)arg3;
- (double)eventGestureController:(EKEventGestureController *)arg1 heightForOccurrenceViewOfDuration:(double)arg2 allDay:(_Bool)arg3;
- (double)eventGestureController:(EKEventGestureController *)arg1 widthForOccurrenceViewOfDays:(unsigned long long)arg2;
- (struct CGPoint)eventGestureController:(EKEventGestureController *)arg1 pointAtDate:(double)arg2 isAllDay:(_Bool)arg3;
- (double)eventGestureController:(EKEventGestureController *)arg1 dateAtPoint:(struct CGPoint)arg2;
- (_Bool)eventGestureController:(EKEventGestureController *)arg1 isAllDayAtPoint:(struct CGPoint)arg2 requireInsistence:(_Bool)arg3;
- (void)eventGestureController:(EKEventGestureController *)arg1 addViewToScroller:(UIView *)arg2 isAllDay:(_Bool)arg3;
- (double)eventGestureController:(EKEventGestureController *)arg1 yPositionPerhapsMatchingAllDayOccurrence:(EKEvent *)arg2 atPoint:(struct CGPoint)arg3;
- (EKDayOccurrenceView *)eventGestureController:(EKEventGestureController *)arg1 occurrenceViewForOccurrence:(EKEvent *)arg2;
- (EKDayOccurrenceView *)eventGestureController:(EKEventGestureController *)arg1 occurrenceViewAtPoint:(struct CGPoint)arg2;
- (EKEvent *)createEventForEventGestureController:(EKEventGestureController *)arg1;
- (void)eventGestureController:(EKEventGestureController *)arg1 adjustDraggingViewForAllDay:(_Bool)arg2;
- (EKDayOccurrenceView *)createOccurrenceViewForEventGestureController:(EKEventGestureController *)arg1;
- (double)timedRegionOriginForEventGestureController:(EKEventGestureController *)arg1;
- (UIView *)occurrenceViewSuperviewForEventGestureController:(EKEventGestureController *)arg1;
- (UIView *)touchTrackingViewForEventGestureController:(EKEventGestureController *)arg1;

@optional
- (_Bool)eventGestureController:(EKEventGestureController *)arg1 shouldFadeOccurrenceAfterFling:(EKEvent *)arg2;
- (_Bool)eventEditorPopoverActiveWhileDraggingForEventGestureController:(EKEventGestureController *)arg1;
- (struct CGRect)marginFrameForEventGestureController:(EKEventGestureController *)arg1;
- (double)eventGestureController:(EKEventGestureController *)arg1 convertXForMargin:(double)arg2;
- (_Bool)eventGestureControllerShouldAllowLongPress:(EKEventGestureController *)arg1;
- (_Bool)moreThanOneDayVisibleForEventGestureController:(EKEventGestureController *)arg1;
- (double)computeXDragOffsetForEventGestureController:(EKEventGestureController *)arg1 currentX:(double)arg2 startX:(double)arg3;
- (double)horizontalOffsetForPagingForEventGestureController:(EKEventGestureController *)arg1;
- (double)pageChangeMarginForEventGestureController:(EKEventGestureController *)arg1;
@end

@protocol EKEventTitleDetailItemDelegate
- (void)editButtonPressed;
- (_Bool)shouldShowEditButtonInline;
@end

@protocol EKEventViewDelegate <NSObject>
- (void)eventViewController:(EKEventViewController *)arg1 didCompleteWithAction:(int)arg2;
@end

@protocol EKEventViewDelegatePrivate <EKEventViewDelegate>

@optional
- (void)eventViewControllerWillDisappear:(EKEventViewController *)arg1;
- (_Bool)eventViewControllerShouldHideDeleteButton;
- (_Bool)eventViewControllerShouldShowInlineEditButtonForInvitations:(EKEventViewController *)arg1;
- (void)eventViewControllerInlineEditButtonWasTapped:(EKEventViewController *)arg1;
- (_Bool)eventViewControllerShouldHandleInlineEdit:(EKEventViewController *)arg1;
- (_Bool)eventViewControllerShouldHideInlineEditButton;
- (void)eventViewController:(EKEventViewController *)arg1 requestsDismissalOfEditViewController:(EKEventEditViewController *)arg2;
- (void)eventViewControllerWillFinishEditingEvent:(EKEventViewController *)arg1 deleted:(_Bool)arg2;
- (void)eventViewControllerDidBeginEditingEventWithEditViewController:(EKEventEditViewController *)arg1;
- (void)eventViewController:(EKEventViewController *)arg1 didDismissEditViewController:(EKEventEditViewController *)arg2 deleted:(_Bool)arg3;
- (void)eventViewController:(EKEventViewController *)arg1 willDismissEditViewController:(EKEventEditViewController *)arg2 deleted:(_Bool)arg3;
- (void)eventViewController:(EKEventViewController *)arg1 requestsDisplayOfEditViewController:(EKEventEditViewController *)arg2 animated:(_Bool)arg3;
- (_Bool)eventViewDelegateShouldHandlePresentationOfEditViewController:(EKEventViewController *)arg1;
- (_Bool)eventViewDelegateShouldCreateOwnEditViewController:(EKEventViewController *)arg1;
- (void)eventViewControllerWillBeginEditingEvent:(EKEventViewController *)arg1;
- (void)eventViewControllerDidRequestAddToCalendar:(EKEventViewController *)arg1;
@end

@protocol EKExpandingTextViewDelegate <UITextViewDelegate>
- (void)textViewDidChangeContentHeight:(UITextView *)arg1;
@end

@protocol EKPickerTableViewDelegate <NSObject>
- (void)pickerTableViewDidChangeDatePickerInterval:(EKPickerTableView *)arg1;
@end

@protocol EKRecurrenceChooserControllerDelegate <NSObject>
- (void)recurrenceChooser:(EKRecurrenceChooserController *)arg1 wantsRowReload:(long long)arg2;
- (void)recurrenceChooserUpdated:(EKRecurrenceChooserController *)arg1;
- (void)recurrenceChooserWantsReload:(EKRecurrenceChooserController *)arg1;
@end

@protocol EKRecurrenceOrdinalPickerViewControllerDelegate <NSObject>
- (void)frequencyPickerUpdated:(EKRecurrenceOrdinalPickerViewController *)arg1;
@end

@protocol EKRecurrenceTypeEditItemViewControllerDelegate <NSObject>
- (long long)repeatTypeForRecurrenceRule:(EKRecurrenceRule *)arg1;
@end

@protocol EKReminderEditorDelegate <NSObject>

@optional
- (void)editItemChanged;
- (void)didEndDatePickingWithTarget:(id)arg1 animated:(_Bool)arg2;
- (void)willBeginDatePickingWithDate:(NSDate *)arg1 target:(id)arg2 action:(SEL)arg3 animated:(_Bool)arg4 minimumTableHeight:(double)arg5;
- (void)viewSizeChangedAnimated:(_Bool)arg1;
- (UIView *)viewForActionSheet;
@end

@protocol EKReminderLocationPickerCellButtonHandler
- (void)contactsButtonPressed;
- (void)failureButtonPressed;
@end

@protocol EKReminderLocationPickerDelegate <NSObject>

@optional
- (void)locationPickerRequiresHeightChange:(EKReminderLocationPicker *)arg1;
@end

@protocol EKReminderLocationPickerModelDelegate <NSObject>
- (void)locationPickerModel:(EKReminderLocationPickerModel *)arg1 didEncounterError:(NSError *)arg2;
- (void)locationPickerModelDidChangeSelection:(EKReminderLocationPickerModel *)arg1;
- (void)locationPickerModel:(EKReminderLocationPickerModel *)arg1 didUpdateMeCardItem:(long long)arg2;
- (void)locationPickerModelDidUpdateCustomLocation:(EKReminderLocationPickerModel *)arg1;
- (void)locationPickerModelDidUpdateCurrentLocation:(EKReminderLocationPickerModel *)arg1;
@end

@protocol EKShareePickerViewControllerDelegate <NSObject>
- (EKEventStore *)eventStoreForShareePickerViewController:(EKShareePickerViewController *)arg1;
- (void)shareePickerViewController:(EKShareePickerViewController *)arg1 didCompleteWithAction:(int)arg2;
@end

@protocol EKShareeViewControllerDelegate <NSObject>
- (void)shareeViewController:(EKShareeViewController *)arg1 didCompleteWithAction:(int)arg2;
- (void)shareeViewControllerDidChangeAccessLevel:(EKShareeViewController *)arg1;
@end

@protocol EKTimeZoneViewControllerDelegate <NSObject>
- (void)timeZoneViewControllerDidCancel:(EKTimeZoneViewController *)arg1;
- (void)timeZoneViewController:(EKTimeZoneViewController *)arg1 didSelectTimeZone:(NSTimeZone *)arg2;
@end

@protocol EKTravelRouteEstimationControllerDelegate <NSObject>

@optional
- (void)routeEstimationControllerDidFinishOriginLocationLookup:(EKTravelRouteEstimationController *)arg1;
- (void)routeEstimationControllerDidBeginOriginLocationLookup:(EKTravelRouteEstimationController *)arg1;
- (void)routeEstimationControllerDidFinishTravelTimeLookup:(EKTravelRouteEstimationController *)arg1;
- (void)routeEstimationControllerDidBeginTravelTimeLookup:(EKTravelRouteEstimationController *)arg1;
@end

@protocol EKUIDividedGridViewControllerDelegate <NSObject>
- (void)dividedGridViewController:(EKUIDividedGridViewController *)arg1 didSelectCell:(EKUIDividedGridViewCell *)arg2 atIndex:(long long)arg3;
- (void)dividedGridViewControllerDidLayout:(EKUIDividedGridViewController *)arg1;
@end

@protocol EKUIEventStatusButtonsViewDelegate <NSObject>
- (void)eventStatusButtonsView:(EKUIEventStatusButtonsView *)arg1 calculatedFontSizeToFit:(double)arg2;
- (double)eventStatusButtonsViewButtonFontSize:(EKUIEventStatusButtonsView *)arg1;
- (void)eventStatusButtonsView:(EKUIEventStatusButtonsView *)arg1 didSelectAction:(long long)arg2;
@end

@protocol EKUIInviteesViewConflictResolutionSection <EKUIInviteesViewSection>
- (void)availabilitySearcherChangedState:(long long)arg1;
- (EKUIInviteeAlternativeTimeSearcher *)availabilitySearcher;
- (void)setAvailabilitySearcher:(EKUIInviteeAlternativeTimeSearcher *)arg1;
- (_Bool)injectNewRowsBeforeLastExistingRow;
- (void)refreshCellsAfterStateChange;
- (void)clearCheckmark;
- (void)setNewTimeChosen:(void (^)(NSDate *, NSDate *))arg1;
- (void)setShowPreviewOfEventAtTime:(void (^)(NSDate *, NSDate *))arg1;
@end

@protocol EKUIInviteesViewSection <NSObject>
- (void)cancelOutstandingOperations;
- (void)setTableViewCellHook:(UITableViewCell * (^)(unsigned long long))arg1;
- (void)commitEditingStyle:(long long)arg1 forRow:(NSIndexPath *)arg2;
- (NSString *)titleForDeleteConfirmationButtonForRow:(NSIndexPath *)arg1;
- (long long)editingStyleForRow:(NSIndexPath *)arg1;
- (_Bool)canEditRow:(NSIndexPath *)arg1;
- (double)estimatedHeightForRow:(NSIndexPath *)arg1;
- (void)selectRow:(NSIndexPath *)arg1;
- (_Bool)canSelectRow:(NSIndexPath *)arg1;
- (void)reloadAndRegisterReusableCellsWithTableView:(UITableView *)arg1;
- (UITableViewCell *)cellForIndexPath:(NSIndexPath *)arg1 inTableView:(UITableView *)arg2;
- (unsigned long long)numberOfRows;
- (_Bool)sectionShouldBeShown;
- (NSString *)headerTitle;
- (NSString *)debugTitle;
@end

@protocol EKUILocationSearchModelDelegate
- (void)eventsSearchUpdated:(EKUILocationSearchModel *)arg1;
- (void)frequentsSearchUpdated:(EKUILocationSearchModel *)arg1;
- (void)conferenceRoomSearchUpdated:(EKUILocationSearchModel *)arg1;
- (void)recentsSearchUpdated:(EKUILocationSearchModel *)arg1;
- (void)contactsSearchUpdated:(EKUILocationSearchModel *)arg1;
- (void)mapSearchUpdated:(EKUILocationSearchModel *)arg1;
- (void)currentLocationUpdated:(EKUILocationSearchModel *)arg1;
- (void)locationSearchModel:(EKUILocationSearchModel *)arg1 selectedLocation:(EKStructuredLocation *)arg2 withError:(NSError *)arg3;
- (EKCalendarItem *)calendarItemForSearchModel:(EKUILocationSearchModel *)arg1;
@end

@protocol MFComposeRecipientTextViewDelegate <NSObject>

@optional
- (_Bool)chooseSelectedSearchResultForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (void)selectPreviousSearchResultForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (void)selectNextSearchResultForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (void)dismissSearchResultsForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (_Bool)presentSearchResultsForComposeRecipientView:(MFComposeRecipientTextView *)arg1;
- (_Bool)composeRecipientViewShowingSearchResults:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientViewDidBecomeFirstResponder:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientViewReturnPressed:(MFComposeRecipientTextView *)arg1;
- (unsigned long long)presentationOptionsForRecipient:(MFComposeRecipient *)arg1;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientTextView *)arg1 composeRecipientForRecord:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientTextView *)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (MFComposeRecipient *)composeRecipientView:(MFComposeRecipientTextView *)arg1 composeRecipientForAddress:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 showCorecipients:(NSArray *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 showPersonCardForRecipient:(MFComposeRecipient *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 showPersonCardForAtom:(MFModernComposeRecipientAtom *)arg2;
- (void)composeRecipientViewDidFinishPickingRecipient:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientViewRequestAddRecipient:(MFComposeRecipientTextView *)arg1;
- (_Bool)recipientViewShouldIgnoreFirstResponderChanges:(MFComposeRecipientTextView *)arg1;
- (void)recipientViewDidResignFirstResponder:(MFComposeRecipientTextView *)arg1;
- (void)recipientViewDidBecomeFirstResponder:(MFComposeRecipientTextView *)arg1;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didSelectRecipients:(NSArray *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 textDidChange:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didChangeSize:(struct CGSize)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didReplaceRecipients:(NSArray *)arg2 withRecipients:(NSArray *)arg3;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didRemoveRecipient:(MFComposeRecipient *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didFinishEnteringAddress:(NSString *)arg2;
- (void)composeRecipientView:(MFComposeRecipientTextView *)arg1 didAddRecipient:(MFComposeRecipient *)arg2;
@end

@protocol MFContactsSearchConsumer <NSObject>
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(NSNumber *)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(NSArray *)arg1 type:(unsigned long long)arg2 taskID:(NSNumber *)arg3;
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(int)arg2 error:(NSError *)arg3;
@end

@protocol MKMapViewDelegate <NSObject>

@optional
- (void)mapView:(MKMapView *)arg1 didAddOverlayViews:(NSArray *)arg2;
- (MKOverlayView *)mapView:(MKMapView *)arg1 viewForOverlay:(id <MKOverlay>)arg2;
- (void)mapView:(MKMapView *)arg1 didAddOverlayRenderers:(NSArray *)arg2;
- (MKOverlayRenderer *)mapView:(MKMapView *)arg1 rendererForOverlay:(id <MKOverlay>)arg2;
- (void)mapView:(MKMapView *)arg1 didChangeUserTrackingMode:(long long)arg2 animated:(_Bool)arg3;
- (void)mapView:(MKMapView *)arg1 annotationView:(MKAnnotationView *)arg2 didChangeDragState:(unsigned long long)arg3 fromOldState:(unsigned long long)arg4;
- (void)mapView:(MKMapView *)arg1 didFailToLocateUserWithError:(NSError *)arg2;
- (void)mapView:(MKMapView *)arg1 didUpdateUserLocation:(MKUserLocation *)arg2;
- (void)mapViewDidStopLocatingUser:(MKMapView *)arg1;
- (void)mapViewWillStartLocatingUser:(MKMapView *)arg1;
- (void)mapView:(MKMapView *)arg1 didDeselectAnnotationView:(MKAnnotationView *)arg2;
- (void)mapView:(MKMapView *)arg1 didSelectAnnotationView:(MKAnnotationView *)arg2;
- (void)mapView:(MKMapView *)arg1 annotationView:(MKAnnotationView *)arg2 calloutAccessoryControlTapped:(UIControl *)arg3;
- (void)mapView:(MKMapView *)arg1 didAddAnnotationViews:(NSArray *)arg2;
- (MKAnnotationView *)mapView:(MKMapView *)arg1 viewForAnnotation:(id <MKAnnotation>)arg2;
- (void)mapViewDidFinishRenderingMap:(MKMapView *)arg1 fullyRendered:(_Bool)arg2;
- (void)mapViewWillStartRenderingMap:(MKMapView *)arg1;
- (void)mapViewDidFailLoadingMap:(MKMapView *)arg1 withError:(NSError *)arg2;
- (void)mapViewDidFinishLoadingMap:(MKMapView *)arg1;
- (void)mapViewWillStartLoadingMap:(MKMapView *)arg1;
- (void)mapView:(MKMapView *)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapView:(MKMapView *)arg1 regionWillChangeAnimated:(_Bool)arg2;
@end

@protocol MKSearchCompleterDelegate <NSObject>

@optional
- (void)completerDidAccessNetwork:(MKSearchCompleter *)arg1;
- (void)completerWillAccessNetwork:(MKSearchCompleter *)arg1;
- (void)completerDidFail:(MKSearchCompleter *)arg1 error:(NSError *)arg2;
- (void)completerDidUpdateResults:(MKSearchCompleter *)arg1 finished:(_Bool)arg2;
- (void)completerWillUpdateResults:(MKSearchCompleter *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol OccurrenceCacheDataSourceProtocol <NSObject>
- (void)invalidate;
- (void)stopSearching;
- (void)searchWithTerm:(NSString *)arg1;
- (void)fetchDaysInBackgroundStartingFromSection:(long long)arg1;
- (void)invalidateCachedOccurrences;
- (long long)sectionForCachedOccurrencesOnDate:(NSDate *)arg1;
- (EKEvent *)cachedOccurrenceAtIndexPath:(NSIndexPath *)arg1;
- (NSDate *)dateAtDayIndex:(long long)arg1;
- (long long)countOfOccurrencesAtDayIndex:(long long)arg1;
- (long long)cachedDayCount;
- (_Bool)cachedOccurrencesAreBeingGenerated;
- (_Bool)cachedOccurrencesAreLoaded;
- (_Bool)supportsFakeTodaySection;
- (_Bool)supportsInvitations;
- (id)initWithEventStore:(EKEventStore *)arg1 calendars:(NSSet *)arg2;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UIDocumentInteractionControllerDelegate <NSObject>

@optional
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 performAction:(SEL)arg2;
- (_Bool)documentInteractionController:(UIDocumentInteractionController *)arg1 canPerformAction:(SEL)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 didEndSendingToApplication:(NSString *)arg2;
- (void)documentInteractionController:(UIDocumentInteractionController *)arg1 willBeginSendingToApplication:(NSString *)arg2;
- (void)documentInteractionControllerDidDismissOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOpenInMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidDismissOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillPresentOptionsMenu:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerDidEndPreview:(UIDocumentInteractionController *)arg1;
- (void)documentInteractionControllerWillBeginPreview:(UIDocumentInteractionController *)arg1;
- (UIView *)documentInteractionControllerViewForPreview:(UIDocumentInteractionController *)arg1;
- (struct CGRect)documentInteractionControllerRectForPreview:(UIDocumentInteractionController *)arg1;
- (UIViewController *)documentInteractionControllerViewControllerForPreview:(UIDocumentInteractionController *)arg1;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIPickerViewDataSource <NSObject>
- (long long)pickerView:(UIPickerView *)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(UIPickerView *)arg1;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchControllerDelegate <NSObject>

@optional
- (void)presentSearchController:(UISearchController *)arg1;
- (void)didDismissSearchController:(UISearchController *)arg1;
- (void)willDismissSearchController:(UISearchController *)arg1;
- (void)didPresentSearchController:(UISearchController *)arg1;
- (void)willPresentSearchController:(UISearchController *)arg1;
@end

@protocol UISearchResultsUpdating <NSObject>
- (void)updateSearchResultsForSearchController:(UISearchController *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol _UIBasicAnimationFactory <NSObject>
- (CABasicAnimation *)_basicAnimationForView:(UIView *)arg1 withKeyPath:(NSString *)arg2;

@optional
- (CAMediaTimingFunction *)_timingFunctionForAnimationInView:(UIView *)arg1 withKeyPath:(NSString *)arg2;
- (CAMediaTimingFunction *)_timingFunctionForAnimation;
@end

@interface AddressCardTableViewCell : UITableViewCell
{
}

- (void)layoutSubviews;

@end

@interface BlockableScrollView : UIScrollView
{
    NSObject<BlockableScrollViewDelegate> *_blockableDelegate;
}

@property(nonatomic) __weak NSObject<BlockableScrollViewDelegate> *blockableDelegate; // @synthesize blockableDelegate=_blockableDelegate;
- (void).cxx_destruct;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;

@end

@interface CalMessageStrings : NSObject
{
    NSArray *_strings;
    NSIndexSet *_indexSetOfCommentStrings;
}

@property(readonly, nonatomic) NSIndexSet *indexSetOfCommentStrings; // @synthesize indexSetOfCommentStrings=_indexSetOfCommentStrings;
@property(readonly, nonatomic) NSArray *strings; // @synthesize strings=_strings;
- (void).cxx_destruct;
- (id)initWithStrings:(id)arg1 indexSetOfCommentStrings:(id)arg2;

@end

@interface CalendarAccountsController : NSObject
{
    NSMutableDictionary *_lastStoreListingRefreshDates;
    NSObject<OS_dispatch_queue> *_refreshQueue;
    ACAccountStore *_accountStore;
}

+ (void)initialize;
+ (void)invalidate;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)refreshListingForSource:(id)arg1 isUserRequested:(_Bool)arg2;
- (_Bool)sourceListingNeedsRefresh:(id)arg1;
- (int)sortOrderForStoreType:(int)arg1;
- (int)sortOrderForSourceType:(int)arg1;
- (int)sortOrderForSource:(id)arg1;
- (_Bool)sourceIsManaged:(id)arg1;
- (id)accountTypeTitleForSource:(id)arg1;
- (id)accountTypeTitleForSourceWithExternalId:(id)arg1;
- (id)titleForSource:(id)arg1 forBeginningOfSentence:(_Bool)arg2;
- (id)_localizedTitleForLocalSourceUsedAtBeginningOfSentence:(_Bool)arg1;
- (id)_displayAccountForAccountWithIdentifier:(id)arg1;
- (id)_accountForAccountIdentifier:(id)arg1;
- (void)_localeDidChange:(id)arg1;
- (void)_accountStoreDidChange:(id)arg1;
- (id)accountStore;
- (void)dealloc;
- (id)init;

@end

@interface CalendarEventAlarmTable : UITableView <UITableViewDelegate, UITableViewDataSource>
{
    long long _alarmIdentifier;
    NSString *_customString;
    _Bool _immediateAlarmCreation;
    NSIndexPath *_selectedItem;
    _Bool _useAllDayAlarms;
    _Bool _shouldAllowAlarmsTriggeringAfterStartDate;
    _Bool _customSelected;
    _Bool _shouldShowLeaveNowOption;
    _Bool _leaveNowAlarmSelected;
    _Bool _eventHasTravelTime;
    id <CalendarEventAlarmTableDelegate> _alarmTableDelegate;
    id <EKStyleProvider> _styleProvider;
}

@property(nonatomic) _Bool eventHasTravelTime; // @synthesize eventHasTravelTime=_eventHasTravelTime;
@property(nonatomic) _Bool leaveNowAlarmSelected; // @synthesize leaveNowAlarmSelected=_leaveNowAlarmSelected;
@property(nonatomic) _Bool shouldShowLeaveNowOption; // @synthesize shouldShowLeaveNowOption=_shouldShowLeaveNowOption;
@property(nonatomic) _Bool customSelected; // @synthesize customSelected=_customSelected;
@property(nonatomic) _Bool shouldAllowAlarmsTriggeringAfterStartDate; // @synthesize shouldAllowAlarmsTriggeringAfterStartDate=_shouldAllowAlarmsTriggeringAfterStartDate;
@property(nonatomic) _Bool useAllDayAlarms; // @synthesize useAllDayAlarms=_useAllDayAlarms;
@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) __weak id <CalendarEventAlarmTableDelegate> alarmTableDelegate; // @synthesize alarmTableDelegate=_alarmTableDelegate;
- (void).cxx_destruct;
- (long long)presetIdentifierAtIndex:(unsigned long long)arg1;
- (unsigned long long)countOfPresets;
- (int)intervalForPresetIdentifier:(long long)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)setCustomString:(id)arg1;
- (long long)presetIdentifier;
- (void)setPresetIdentifier:(long long)arg1;
- (void)_selectIndexPath:(id)arg1;
- (long long)_presetIdentifierForRow:(long long)arg1;
- (id)_indexPathForPresetIdentifier:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIConstrainedFontsTableViewCell : UITableViewCell
{
}

- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PreferencesTwoPartValueCell : EKUIConstrainedFontsTableViewCell
{
    TwoPartTextLabel *_twoPartLabel;
    unsigned int _notifiedShort;
    id <EKCellShortener> _shortener;
}

@property(nonatomic) __weak id <EKCellShortener> shortener; // @synthesize shortener=_shortener;
- (void).cxx_destruct;
- (void)checkValueWidths;
- (void)shorten;
- (void)layoutSubviews;
- (void)_layoutSubviewsCore;
- (void)layoutText:(id)arg1 andValue:(id)arg2;
@property(readonly, retain, nonatomic) UIColor *valueColor;
- (id)description;
@property(readonly, retain, nonatomic) TwoPartTextLabel *twoPartTextLabel;

@end

@interface PreferencesDoubleTwoPartValueCell : PreferencesTwoPartValueCell
{
    UILabel *_textLabel2;
    TwoPartTextLabel *_twoPartLabel2;
}

- (void).cxx_destruct;
- (void)layoutText:(id)arg1 andValue:(id)arg2;
- (void)checkValueWidths;
- (void)_layoutSubviewsCore;
@property(readonly, retain, nonatomic) TwoPartTextLabel *twoPartTextLabel2;
@property(readonly, retain, nonatomic) UILabel *textLabel2;

@end

@interface CalendarEventDatesAndTimeZoneCell : PreferencesDoubleTwoPartValueCell
{
    UILabel *_textLabel3;
    UILabel *_detailLabel3;
}

- (void).cxx_destruct;
- (void)layoutText:(id)arg1 andValue:(id)arg2;
- (void)_layoutSubviewsCore;
@property(readonly, retain, nonatomic) UILabel *detailLabel3;
@property(readonly, retain, nonatomic) UILabel *textLabel3;

@end

@interface CalendarEventEditedByCell : EKUIConstrainedFontsTableViewCell
{
    UILabel *_titleLabel2;
    UILabel *_valueLabel2;
    unsigned int _valuePlaceholder:2;
    id <EKCellShortener> _shortener;
}

@property(nonatomic) __weak id <EKCellShortener> shortener; // @synthesize shortener=_shortener;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)_checkValueWidth;
- (_Bool)detailText2IsPlaceholder;
- (_Bool)detailTextIsPlaceholder;
- (void)setDetailText2IsPlaceholder:(_Bool)arg1;
- (void)setDetailTextIsPlaceholder:(_Bool)arg1;
@property(readonly, retain, nonatomic) UILabel *detailTextLabel2;
@property(readonly, retain, nonatomic) UILabel *textLabel2;
- (void)_copyTextLabelAttributesFrom:(id)arg1 to:(id)arg2;

@end

@interface CalendarEventLoader : NSObject
{
    EKEventStore *_store;
    NSObject<OS_dispatch_queue> *_occurrencesLock;
    NSArray *_loadedOccurrences;
    NSMutableSet *_occurrencesAwaitingRefresh;
    NSMutableSet *_occurrencesAwaitingDeletion;
    NSSet *_selectedCalendars;
    unsigned int _daysOfPadding;
    unsigned int _maxDaysToCache;
    unsigned long long _componentForExpandingRequests;
    unsigned long long _componentForExpandingPadding;
    double _preferredReloadStart;
    double _preferredReloadEnd;
    NSObject<OS_dispatch_group> *_loadGroup;
    NSObject<OS_dispatch_queue> *_loadQueue;
    int _cancelSeed;
    double _loadedStart;
    double _loadedEnd;
    _Bool _loadedOccurrencesAreStale;
    double _currentlyLoadingStart;
    double _currentlyLoadingEnd;
    double _lastRequestedStart;
    double _lastRequestedEnd;
    id <CalendarEventLoaderDelegate> _delegate;
}

@property(nonatomic) __weak id <CalendarEventLoaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_getLoadStart:(double *)arg1 end:(double *)arg2 fromLoadedStart:(double)arg3 loadedEnd:(double)arg4 currentlyLoadingStart:(double)arg5 currentlyLoadingEnd:(double)arg6;
- (void)_getStart:(double)arg1 end:(double)arg2 paddedByDays:(int)arg3 inTimeZone:(id)arg4 resultStart:(double *)arg5 resultEnd:(double *)arg6;
- (void)_getStart:(double)arg1 end:(double)arg2 expandedToComponents:(unsigned long long)arg3 withResultStart:(double *)arg4 resultEnd:(double *)arg5;
- (void)_pruneLoadedOccurrences;
- (void)_reload;
- (void)cancelAllLoads;
- (void)_enqueueLoadForRangeStart:(double)arg1 end:(double)arg2;
- (id)_uniqueEventsFromArray:(id)arg1;
- (void)_loadIfNeededBetweenStart:(double)arg1 end:(double)arg2 loadPaddingNow:(_Bool)arg3;
- (void)loadIfNeeded;
- (id)occurrencesForStartDate:(id)arg1 endDate:(id)arg2 preSorted:(_Bool)arg3 waitForLoad:(_Bool)arg4;
- (void)waitForBackgroundLoad;
- (void)_eventStoreChanged:(id)arg1;
- (void)timeZoneChanged;
- (_Bool)loadIsComplete;
- (void)setSelectedCalendars:(id)arg1;
- (void)setPreferredReloadStartDate:(id)arg1 endDate:(id)arg2;
- (void)setComponentForExpandingPadding:(unsigned long long)arg1;
- (void)setComponentForExpandingRequests:(unsigned long long)arg1;
- (void)setCacheLimit:(unsigned int)arg1;
- (void)setPadding:(unsigned int)arg1;
- (void)addOccurrenceAwaitingDeletion:(id)arg1;
- (void)addOccurrenceAwaitingRefresh:(id)arg1;
- (void)dealloc;
- (id)initWithEventStore:(id)arg1;

@end

@interface CalendarInvitationPopoverWrapperController : UINavigationController
{
    EKEventViewController *_eventViewController;
}

@property(retain, nonatomic) EKEventViewController *eventViewController; // @synthesize eventViewController=_eventViewController;
- (void).cxx_destruct;
- (id)initForEventUID:(int)arg1;

@end

@interface EKEventViewController : UIViewController <EKEventTitleDetailItemDelegate, EKUIEventStatusButtonsViewDelegate, UIAlertViewDelegate>
{
    _Bool _ignoreDBChanges;
    long long _lastAuthorizationStatus;
    _UIAccessDeniedView *_accessDeniedView;
    EKEventDetailItem *_selectedEditItem;
    long long _disclosedTableSection;
    struct _NSRange _disclosedTableRange;
    int _pendingStatus;
    EKEventEditViewController *_activeEventEditor;
    EKUIRecurrenceAlertController *_recurrenceAlertController;
    EKUIEventStatusButtonsView *_statusButtonsView;
    SingleToolbarItemContainerView *_statusButtonsContainerView;
    double _statusButtonsViewCachedFontSize;
    long long _lastOrientation;
    EKEventDetailItem *_currentEditItem;
    UITableView *_tableView;
    _Bool _didAppear;
    _Bool _viewIsVisible;
    _Bool _autoPop;
    _Bool _allowsSubitems;
    _Bool _showsPreview;
    _Bool _forcePreview;
    _Bool _trustsStatus;
    _Bool _allowsInviteResponses;
    _Bool _showsAddToCalendar;
    _Bool _ICSPreview;
    _Bool _needsReload;
    _Bool _showsDoneButton;
    _Bool _showsOutOfDateMessage;
    _Bool _showsDelegatorMessage;
    _Bool _showsDelegateMessage;
    _Bool _dead;
    _Bool _tableIsBeingEdited;
    NSArray *_items;
    NSArray *_currentSections;
    int _scrollToSection;
    UIView *_blankFooterView;
    _Bool _showingBlankFooterView;
    _Bool _allowsEditing;
    _Bool _hideNavigationBar;
    _Bool _minimalMode;
    int _editorShowTransition;
    int _editorHideTransition;
    id <EKEventViewDelegate> _delegate;
    EKEvent *_event;
    UIViewController *_eventDetailContainer;
    double _leftInset;
    double _rightInset;
}

+ (void)adjustLayoutForCell:(id)arg1 tableViewWidth:(double)arg2 numRowsInSection:(unsigned long long)arg3 cellRow:(unsigned long long)arg4;
+ (void)setDefaultDatesForEvent:(id)arg1;
@property(nonatomic) double rightInset; // @synthesize rightInset=_rightInset;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(retain, nonatomic) UIViewController *eventDetailContainer; // @synthesize eventDetailContainer=_eventDetailContainer;
@property(nonatomic) int editorHideTransition; // @synthesize editorHideTransition=_editorHideTransition;
@property(nonatomic) int editorShowTransition; // @synthesize editorShowTransition=_editorShowTransition;
@property(nonatomic) _Bool minimalMode; // @synthesize minimalMode=_minimalMode;
@property(nonatomic) _Bool hideNavigationBar; // @synthesize hideNavigationBar=_hideNavigationBar;
@property(nonatomic) _Bool showsDelegateMessage; // @synthesize showsDelegateMessage=_showsDelegateMessage;
@property(nonatomic) _Bool showsDelegatorMessage; // @synthesize showsDelegatorMessage=_showsDelegatorMessage;
@property(nonatomic) _Bool showsOutOfDateMessage; // @synthesize showsOutOfDateMessage=_showsOutOfDateMessage;
@property(nonatomic) _Bool showsDoneButton; // @synthesize showsDoneButton=_showsDoneButton;
@property(nonatomic) _Bool allowsSubitems; // @synthesize allowsSubitems=_allowsSubitems;
@property(nonatomic) _Bool showsAddToCalendar; // @synthesize showsAddToCalendar=_showsAddToCalendar;
@property(nonatomic) _Bool allowsInviteResponses; // @synthesize allowsInviteResponses=_allowsInviteResponses;
@property(nonatomic, getter=isICSPreview) _Bool ICSPreview; // @synthesize ICSPreview=_ICSPreview;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(nonatomic) __weak id <EKEventViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)editButtonPressed;
- (_Bool)shouldShowEditButtonInline;
- (void)detailItem:(id)arg1 wantsIndexPathsScrolledToVisible:(id)arg2;
- (void)detailItem:(id)arg1 wantsRowInsertions:(id)arg2 rowDeletions:(id)arg3 rowReloads:(id)arg4;
- (void)detailItem:(id)arg1 wantsRowReload:(id)arg2;
- (void)detailItem:(id)arg1 performActionsOnCellAtIndexPath:(id)arg2 actions:(CDUnknownBlockType)arg3;
- (unsigned long long)_sectionForDetailItem:(id)arg1;
- (id)getCurrentContext;
- (_Bool)allowContextProvider:(id)arg1;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didUnhighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didHighlightRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)_layoutStatusButtonsForInterfaceOrientation:(long long)arg1;
- (void)viewWillLayoutSubviews;
- (void)traitCollectionDidChange:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)eventStatusButtonsView:(id)arg1 calculatedFontSizeToFit:(double)arg2;
- (double)eventStatusButtonsViewButtonFontSize:(id)arg1;
- (void)eventStatusButtonsView:(id)arg1 didSelectAction:(long long)arg2;
- (id)_statusButtons;
- (_Bool)_shouldDisplayStatusButtons;
- (void)_updateResponse;
- (void)_updateResponseVisibility;
- (void)_addToCalendarClicked:(id)arg1;
- (void)_deleteClicked:(id)arg1;
- (void)_saveStatus:(int)arg1;
- (void)invokeAction:(long long)arg1;
- (void)_prepareEventForEdit;
- (void)eventEditViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (void)_dismissEditor:(_Bool)arg1 deleted:(_Bool)arg2;
- (id)viewControllerForEventItem:(id)arg1;
- (void)eventItemDidEndEditing:(id)arg1;
- (void)eventItemDidCommit:(id)arg1;
- (void)eventItemDidStartEditing:(id)arg1;
- (void)_presentDetachSheet;
- (struct CGSize)preferredContentSize;
- (void)_performDelete:(int)arg1;
- (void)_presentValidationAlert:(id)arg1;
- (_Bool)_performSave:(int)arg1 animated:(_Bool)arg2;
- (void)_saveStatus:(int)arg1 span:(int)arg2;
- (id)_viewControllerForEditorPresentation;
- (void)presentEditorAnimated:(_Bool)arg1;
@property(retain, nonatomic) EKEventEditViewController *activeEventEditor;
- (void)editEvent;
- (void)doneButtonPressed;
- (void)_updateStatusButtonsActions;
- (id)_statusButtonsContainerView;
- (id)_statusButtonsView;
- (void)_setUpForEvent;
- (id)_footerLabelContainingText:(id)arg1;
- (void)_updateFooterIfNeeded;
- (_Bool)_shouldDisplayDelegateOrOutOfDateMessage;
- (_Bool)_isDisplayingInvitation;
- (_Bool)_isDisplayingDeletableEvent;
- (void)_configureItemsForStoreConstraintsGivenCalendar:(id)arg1;
- (id)_items;
- (void)_setUpAttendeesWithAcceptedItem:(id)arg1 declinedItem:(id)arg2 maybeItem:(id)arg3 noReplyItem:(id)arg4;
- (void)_keyboardWasHidden:(id)arg1;
- (void)_keyboardWasShown:(id)arg1;
- (void)_localeChanged;
- (void)_storeChanged:(id)arg1;
- (void)_refreshEventAndReload;
- (void)_setObservesKeyboardNotifications:(_Bool)arg1;
- (void)_updateFrameForInsets;
@property(nonatomic) double topInset;
- (id)accessDeniedView;
@property(nonatomic) int scrollToSection;
- (void)completeWithAction:(int)arg1;
@property(nonatomic) _Bool alwaysShowsCalendarPreview;
@property(nonatomic) _Bool allowsCalendarPreview;
- (void)_reloadIfNeeded;
- (void)_setNeedsReload;
- (void)_pop;
- (struct CGSize)_idealSize;
- (_Bool)_shouldShowEditButton;
- (void)_updateNavBarAnimated:(_Bool)arg1;
- (_Bool)_shouldDisplayDoneButton;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_updateTableContentInsetForKeyboard:(id)arg1;
- (void)_updateTableContentForSizeCategoryChange:(id)arg1;
- (void)openAttendeesDetailItem;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)_indexPathForAttendeesDetailItem;
- (id)_indexPathForSection:(int)arg1;
- (void)loadView;
- (id)tableView;
- (void)dealloc;
- (void)_teardownTableView;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithEvent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CalendarInvitationWrapperController : EKEventViewController
{
}

- (void)viewControllerWillSuspend:(id)arg1;
- (id)initForEventUID:(int)arg1;

@end

@interface CalendarMessageUIProxy : NSObject
{
}

+ (Class)MFMessageComposeViewControllerClass;
+ (Class)MFMailComposeViewControllerClass;
+ (Class)MFContactsSearchResultsModelClass;
+ (Class)MFContactsSearchManagerClass;
+ (Class)SearchShadowViewClass;
+ (Class)RecipientTableViewCellClass;
+ (Class)ComposeRecipientViewClass;
+ (Class)MailComposeRecipientClass;
+ (Class)CalendarComposeRecipientClass;

@end

@interface CalendarModel : NSObject <CalendarEventLoaderDelegate>
{
    EKEventStore *_eventStore;
    CalendarEventLoader *_eventLoader;
    NSLock *_filterLock;
    NSArray *_visibleCalendars;
    long long _readWriteCalendarCount;
    long long _invitationBearingStoresExist;
    _EKNotificationMonitor *_notificationMonitor;
    id <OccurrenceCacheDataSourceProtocol> _occurrenceCacheDataSource;
    id <OccurrenceCacheDataSourceProtocol> _occurrenceCacheFilteredDataSource;
    long long _cachedFakeTodayIndex;
    NSSet *_selectedCalendars;
    NSString *_searchString;
    NSCalendar *_calendar;
    EKCalendarDate *_selectedDate;
    unsigned long long _firstVisibleSecond;
    EKEvent *_selectedOccurrence;
}

@property(retain, nonatomic) EKEvent *selectedOccurrence; // @synthesize selectedOccurrence=_selectedOccurrence;
@property(nonatomic) unsigned long long firstVisibleSecond; // @synthesize firstVisibleSecond=_firstVisibleSecond;
@property(copy, nonatomic) EKCalendarDate *selectedDate; // @synthesize selectedDate=_selectedDate;
@property(copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(readonly, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;
- (void).cxx_destruct;
- (_Bool)searchingOccurrences;
- (id)eventNotificationReferences;
- (unsigned long long)eventNotificationsCount;
- (void)_notificationCountExpired:(id)arg1;
- (void)_notificationsExpired:(id)arg1;
- (_Bool)invitationBearingStoresExistForEvents;
- (id)_notificationMonitor;
- (void)startNotificationMonitor;
- (_Bool)removeEvent:(id)arg1 withSpan:(int)arg2 error:(id *)arg3;
- (void)_systemWake;
- (void)_timeZoneChanged:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (void)_significantTimeChange:(id)arg1;
- (void)_tzSupportTodayRolledOver;
- (void)_reloadIfTodayDetermined;
- (void)prepareForAppSuspend;
- (void)updateAfterAppResume;
- (void)_occurrenceCacheChanged;
- (void)_eventStoreChanged:(id)arg1;
- (void)calendarEventLoader:(id)arg1 occurrencesDidUpdateBetweenStart:(double)arg2 end:(double)arg3;
- (void)_processReloadForCacheOnly:(_Bool)arg1 includingCalendars:(_Bool)arg2 checkCalendarsValid:(_Bool)arg3;
- (void)_invalidateOccurrenceCacheDataSources;
- (void)_invalidateCachedOccurrences;
- (void)_createOccurrenceCacheDataSources;
- (void)_recreateOccurrenceCacheDataSources;
- (void)_searchResultsAvailable:(id)arg1;
- (void)fetchCachedDaysInBackgroundStartingFromSection:(long long)arg1 usingFilter:(_Bool)arg2;
- (void)fetchCachedDaysInBackgroundStartingFromSection:(long long)arg1;
- (long long)cachedFakeTodayIndex;
- (long long)sectionForCachedOccurrencesOnDate:(id)arg1 usingFilter:(_Bool)arg2;
- (long long)sectionForCachedOccurrencesOnDate:(id)arg1;
- (long long)sectionForCachedOccurrencesOnDate:(id)arg1 sectionExistsForDay:(_Bool *)arg2 usingFilter:(_Bool)arg3;
- (long long)sectionForCachedOccurrencesOnDate:(id)arg1 sectionExistsForDay:(_Bool *)arg2;
- (id)cachedOccurrenceAtIndexPath:(id)arg1 usingFilter:(_Bool)arg2;
- (id)cachedOccurrenceAtIndexPath:(id)arg1;
- (id)dateForCachedOccurrencesInSection:(long long)arg1 usingFilter:(_Bool)arg2;
- (id)dateForCachedOccurrencesInSection:(long long)arg1;
- (long long)numberOfCachedOccurrencesInSection:(long long)arg1 usingFilter:(_Bool)arg2;
- (long long)numberOfCachedOccurrencesInSection:(long long)arg1;
- (long long)numberOfDaysWithCachedOccurrencesUsingFilter:(_Bool)arg1;
- (id)_dataSourceUsingFilter:(_Bool)arg1;
- (long long)numberOfDaysWithCachedOccurrences;
- (_Bool)cachedOccurrencesAreLoaded;
- (_Bool)cachedOccurrencesAreBeingGenerated;
- (void)setPreferredReloadStartDate:(id)arg1 endDate:(id)arg2;
- (void)setComponentForExpandingPadding:(unsigned long long)arg1;
- (void)setComponentForExpandingRequests:(unsigned long long)arg1;
- (void)setMaxCachedDays:(unsigned int)arg1;
- (void)setDesiredPaddingDays:(unsigned int)arg1;
- (id)closestOccurrenceToTomorrowForEventUID:(int)arg1;
- (double)_tomorrow;
- (id)selectedDateOccurrences:(_Bool)arg1 loadIsComplete:(_Bool *)arg2;
- (id)occurrencesForDay:(id)arg1 waitForLoad:(_Bool)arg2;
- (void)addOccurrenceAwaitingDeletion:(id)arg1;
- (id)occurrencesForStartDate:(id)arg1 endDate:(id)arg2 preSorted:(_Bool)arg3 waitForLoad:(_Bool)arg4;
- (id)occurrencesForStartDay:(id)arg1 endDay:(id)arg2 preSorted:(_Bool)arg3 waitForLoad:(_Bool)arg4;
- (void)addOccurrenceAwaitingRefresh:(id)arg1;
@property(readonly, nonatomic) EKCalendarDate *selectedDay;
- (void)refreshCalendarDataIfNeeded:(_Bool)arg1;
- (void)refreshAccountListIfNeeded:(_Bool)arg1;
- (id)defaultCalendarForNewEvents;
- (_Bool)isCalendarVisibleWithID:(id)arg1;
- (void)ensureCalendarVisibleWithId:(id)arg1;
@property(readonly, nonatomic) long long readWriteCalendarCount;
@property(readonly, nonatomic) long long visibleCalendarCount;
- (_Bool)selectedOccurrenceIsSearchMatch;
@property(retain, nonatomic) NSString *searchString; // @synthesize searchString=_searchString;
@property(retain, nonatomic) NSSet *selectedCalendars; // @synthesize selectedCalendars=_selectedCalendars;
- (void)dealloc;
- (id)init;

@end

@interface CalendarNotesCell : EKUIConstrainedFontsTableViewCell
{
    UITextView *_textView;
    NSString *_text;
}

@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
@property(retain, nonatomic) NSString *placeholder;
- (_Bool)becomeFirstResponder;
@property(readonly, retain, nonatomic) UITextView *textView;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface CalendarOccurrencesCollection : NSObject <NSCopying>
{
    NSArray *_occurrences;
    NSArray *_allDayOccurrences;
    NSArray *_timedOccurrences;
}

@property(readonly, nonatomic) NSArray *timedOccurrences; // @synthesize timedOccurrences=_timedOccurrences;
@property(readonly, nonatomic) NSArray *allDayOccurrences; // @synthesize allDayOccurrences=_allDayOccurrences;
@property(readonly, nonatomic) NSArray *occurrences; // @synthesize occurrences=_occurrences;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithOccurrences:(id)arg1 timedOccurrences:(id)arg2 allDayOccurrences:(id)arg3;

@end

@interface CalendarPreferences : NSObject
{
    CalPreferences *_preferences;
    _Bool _drawDebugViewColors;
}

+ (id)sharedPreferences;
@property(nonatomic) _Bool drawDebugViewColors; // @synthesize drawDebugViewColors=_drawDebugViewColors;
- (void).cxx_destruct;
@property(nonatomic) _Bool swipeToDeleteEnabled;
@property(nonatomic) _Bool travelEngineEnabled;
@property(nonatomic) _Bool disableContinuity;
@property(nonatomic) _Bool showExperimentalUI;
@property(nonatomic) unsigned long long promptForCommentWhenDeclining;
@property(retain, nonatomic) NSNumber *locationSearchResultLimit;
@property(nonatomic) _Bool showEventsInPhoneMonthView;
- (void)setDeselectedCalendarIDs:(id)arg1;
- (id)deselectedCalendarIDsFromCalendars:(id)arg1;
@property(retain, nonatomic) NSArray *calendarUUIDsExcludedFromNotifications;
@property(nonatomic) _Bool requestSyncOnApplicationLaunch;
@property(nonatomic) _Bool viewedTimeZoneAutomatic;
@property(nonatomic) _Bool immediateAlarmCreation;
@property(nonatomic) _Bool showDebugGridOverlay;
@property(nonatomic) _Bool showMonthDividedListView;
@property(nonatomic) _Bool showListView;
@property(nonatomic) _Bool showWeekNumbers;
@property(retain, nonatomic) NSString *overlayCalendarID;
@property(retain, nonatomic) NSString *searchString;
@property(retain, nonatomic) NSNumber *weekViewHourScale;
@property(retain, nonatomic) NSNumber *dayViewHourScale;
@property(retain, nonatomic) NSNumber *lastSuspendTime;
@property(retain, nonatomic) NSNumber *lastViewedDate;
@property(retain, nonatomic) NSNumber *lastViewMode;
@property(retain, nonatomic) NSNumber *weekStart;
@property(retain, nonatomic) NSDate *simulatedCurrentDate;
- (id)init;

@end

@interface CalendarPreferencesTable : UITableView
{
}

- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface CalendarPublishingActivityViewController : UIActivityViewController
{
    id <CalendarPublishingActivityDelegate> _activityDelegate;
}

@property __weak id <CalendarPublishingActivityDelegate> activityDelegate; // @synthesize activityDelegate=_activityDelegate;
- (void).cxx_destruct;
- (void)_prepareActivity:(id)arg1;
- (_Bool)_shouldShowSystemActivity:(id)arg1;

@end

@interface ColorBarView : UIView
{
    UIColor *_color;
}

@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface CrossFadeView : UIView
{
    _Bool _scaleSize;
    UIView *_startView;
    UIView *_endView;
    struct CGRect _startFrame;
    struct CGRect _endFrame;
}

@property(nonatomic) _Bool scaleSize; // @synthesize scaleSize=_scaleSize;
@property(readonly, nonatomic) struct CGRect endFrame; // @synthesize endFrame=_endFrame;
@property(readonly, nonatomic) struct CGRect startFrame; // @synthesize startFrame=_startFrame;
@property(readonly, nonatomic) UIView *endView; // @synthesize endView=_endView;
@property(readonly, nonatomic) UIView *startView; // @synthesize startView=_startView;
- (void).cxx_destruct;
- (id)description;
- (void)haltAnimation;
- (void)setToEndState;
- (void)setToStartState;
- (void)springAnimateToEndStateWithTimingFunction:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)springAnimateToEndStateWithTimingFunction:(int)arg1;
- (void)springAnimateToStartStateWithTimingFunction:(int)arg1 completion:(CDUnknownBlockType)arg2;
- (void)springAnimateToStartStateWithTimingFunction:(int)arg1;
- (void)animateToEndStateWithDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)animateToStartStateWithDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setEndView:(id)arg1;
- (void)setStartView:(id)arg1;
- (id)initWithStartView:(id)arg1 endView:(id)arg2 startFrame:(struct CGRect)arg3 endFrame:(struct CGRect)arg4;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface EKAlarm (MobileCal)
- (id)localizedDescriptionForReminder;
- (id)localizedAllDayDescription;
- (id)localizedDescription;
- (id)longLocalizedAllDayDescription;
- (id)longLocalizedDescription;
- (id)_localizedDescription:(_Bool)arg1 forEvent:(_Bool)arg2 isAllDay:(_Bool)arg3;
@end

__attribute__((visibility("hidden")))
@interface EKEditItemViewController : UIViewController <EKEditItemViewControllerProtocol>
{
    struct CGRect _initialFrame;
    unsigned long long _subitem;
    _Bool _modal;
    id <EKStyleProvider> _styleProvider;
    id <EKEditItemViewControllerDelegate> _editDelegate;
    EKUIRecurrenceAlertController *_recurrenceAlertController;
    _Bool _showsDoneButton;
}

@property(nonatomic) _Bool showsDoneButton; // @synthesize showsDoneButton=_showsDoneButton;
@property(nonatomic) _Bool modal; // @synthesize modal=_modal;
@property(nonatomic) unsigned long long subitem; // @synthesize subitem=_subitem;
@property(nonatomic) __weak id <EKEditItemViewControllerDelegate> editDelegate; // @synthesize editDelegate=_editDelegate;
- (void).cxx_destruct;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)marginForTableView:(id)arg1;
- (void)setCell:(id)arg1 checked:(_Bool)arg2;
- (_Bool)fitsPopoverWhenKeyboardActive;
- (struct CGSize)preferredContentSize;
- (void)didReceiveMemoryWarning;
- (_Bool)validateAllowingAlert:(_Bool)arg1;
- (void)popIfNonModal;
- (void)saveAndDismissWithExtremePrejudice;
- (void)saveAndDismiss;
- (void)_saveAndDismissWithForce:(_Bool)arg1;
- (void)cancel;
- (void)viewWillDisappear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewDidLoad;
- (void)viewWillAppear:(_Bool)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(nonatomic) _Bool editItemShouldBeAskedForInjectableViewController;
@property(nonatomic) _Bool presentModally;

@end

__attribute__((visibility("hidden")))
@interface EKAlarmEditItemViewController : EKEditItemViewController <CalendarEventAlarmTableDelegate>
{
    CalendarEventAlarmTable *_table;
    _Bool _immediateAlarmCreation;
    _Bool _allDay;
    _Bool _shouldAllowAlarmsTriggeringAfterStartDate;
    _Bool _shouldShowLeaveNowOption;
    _Bool _eventHasTravelTime;
    EKUIAlarm *_alarm;
    EKCalendar *_calendar;
    unsigned long long _alarmIndex;
}

@property(nonatomic) _Bool eventHasTravelTime; // @synthesize eventHasTravelTime=_eventHasTravelTime;
@property(nonatomic) _Bool shouldShowLeaveNowOption; // @synthesize shouldShowLeaveNowOption=_shouldShowLeaveNowOption;
@property(nonatomic) _Bool shouldAllowAlarmsTriggeringAfterStartDate; // @synthesize shouldAllowAlarmsTriggeringAfterStartDate=_shouldAllowAlarmsTriggeringAfterStartDate;
@property(nonatomic) _Bool allDay; // @synthesize allDay=_allDay;
@property(nonatomic) unsigned long long alarmIndex; // @synthesize alarmIndex=_alarmIndex;
@property(retain, nonatomic) EKCalendar *calendar; // @synthesize calendar=_calendar;
@property(retain, nonatomic) EKUIAlarm *alarm; // @synthesize alarm=_alarm;
- (void).cxx_destruct;
- (void)alarmTableDidChangeAlarm:(id)arg1;
@property(nonatomic) long long presetIdentifier;
- (_Bool)customSelected;
- (void)setCustomString:(id)arg1;
- (id)tableHeaderView;
- (void)_storeChanged:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendar (MobileCal)
- (id)uiColor;
@end

__attribute__((visibility("hidden")))
@interface EKCalendarEditItem : NSObject
{
    EKEventStore *_store;
    EKCalendar *_calendar;
    id <EKCalendarEditItemDelegate> _delegate;
    id <EKStyleProvider> _styleProvider;
}

@property(readonly, nonatomic) EKCalendar *calendar; // @synthesize calendar=_calendar;
@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) __weak id <EKCalendarEditItemDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)applyStyleProviderToCell:(id)arg1;
- (_Bool)becomeFirstResponder;
- (_Bool)saveStateToCalendar:(id)arg1;
- (void)calendarEditor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (void)layoutForWidth:(double)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (double)footerHeightForSection;
- (id)footerViewForSection;
- (id)headerTitle;
- (unsigned long long)numberOfSubitems;
- (_Bool)configureWithCalendar:(id)arg1;
- (void)reset;
- (void)setCalendar:(id)arg1 store:(id)arg2;

@end

@interface EKCalendarAbstractSwitchEditItem : EKCalendarEditItem
{
    UIView *_footerView;
    UILabel *_descriptionLabel;
    _Bool _underlyingCalendarState;
    _Bool _switchState;
    _Bool _allowEventAlerts;
    NSMutableArray *_cells;
    UISwitch *_toggleSwitch;
}

@property(retain, nonatomic) UISwitch *toggleSwitch; // @synthesize toggleSwitch=_toggleSwitch;
@property(retain, nonatomic) NSMutableArray *cells; // @synthesize cells=_cells;
@property(nonatomic) _Bool allowEventAlerts; // @synthesize allowEventAlerts=_allowEventAlerts;
@property(nonatomic) _Bool switchState; // @synthesize switchState=_switchState;
@property(nonatomic) _Bool underlyingCalendarState; // @synthesize underlyingCalendarState=_underlyingCalendarState;
- (void).cxx_destruct;
- (id)descriptionLabelText;
- (id)cellText;
- (_Bool)saveStateToCalendar:(id)arg1;
- (unsigned long long)numberOfSubitems;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)footerHeightForSection;
- (id)footerViewForSection;
- (void)_applyStyleToUILabel:(id)arg1;
- (id)footerView;
- (void)layoutForWidth:(double)arg1;
- (id)cell;
- (void)_switchStateChanged:(id)arg1;
- (void)reset;
- (void)setCalendar:(id)arg1 store:(id)arg2;

@end

@interface EKCalendarChooser : UIViewController
{
    _Bool _disableCalendarEditing;
    _Bool _showsDeclinedEventsSetting;
    _Bool _showDetailAccessories;
    int _style;
    int _chooserMode;
    CDStruct_a7a51b3b _flags;
    NSMutableSet *_selectedCalendars;
    id <EKCalendarChooserDelegate> _delegate;
    unsigned long long _entityType;
    long long _lastAuthorizationStatus;
    EKEventStore *_eventStore;
    UITableView *_tableView;
    NSMutableArray *_groups;
    NSMutableDictionary *_storeGroupMap;
    NSMutableDictionary *_customGroupMap;
    NSIndexPath *_checkedRow;
    id <EKStyleProvider> _styleProvider;
    EKSource *_limitedToSource;
    _UIAccessDeniedView *_accessDeniedView;
    long long _refreshCounter;
    UIRefreshControl *_refreshControl;
}

@property(retain, nonatomic) UIRefreshControl *refreshControl; // @synthesize refreshControl=_refreshControl;
@property(nonatomic) long long refreshCounter; // @synthesize refreshCounter=_refreshCounter;
@property(retain, nonatomic) _UIAccessDeniedView *accessDeniedView; // @synthesize accessDeniedView=_accessDeniedView;
@property(retain, nonatomic) EKSource *limitedToSource; // @synthesize limitedToSource=_limitedToSource;
@property(nonatomic) CDStruct_a7a51b3b flags; // @synthesize flags=_flags;
@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(retain, nonatomic) NSIndexPath *checkedRow; // @synthesize checkedRow=_checkedRow;
@property(retain, nonatomic) NSMutableDictionary *customGroupMap; // @synthesize customGroupMap=_customGroupMap;
@property(retain, nonatomic) NSMutableDictionary *storeGroupMap; // @synthesize storeGroupMap=_storeGroupMap;
@property(retain, nonatomic) NSMutableArray *groups; // @synthesize groups=_groups;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;
@property(nonatomic) long long lastAuthorizationStatus; // @synthesize lastAuthorizationStatus=_lastAuthorizationStatus;
@property(nonatomic) unsigned long long entityType; // @synthesize entityType=_entityType;
@property(nonatomic) _Bool showDetailAccessories; // @synthesize showDetailAccessories=_showDetailAccessories;
@property(nonatomic) _Bool showsDeclinedEventsSetting; // @synthesize showsDeclinedEventsSetting=_showsDeclinedEventsSetting;
@property(nonatomic) _Bool disableCalendarEditing; // @synthesize disableCalendarEditing=_disableCalendarEditing;
@property(nonatomic) int chooserMode; // @synthesize chooserMode=_chooserMode;
@property(nonatomic) __weak id <EKCalendarChooserDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSMutableSet *selectedCalendarSet; // @synthesize selectedCalendarSet=_selectedCalendars;
@property(nonatomic) int selectionStyle; // @synthesize selectionStyle=_style;
- (void).cxx_destruct;
- (void)_insertStoreIntoByGroupArray:(id)arg1;
- (void)calendarEditor:(id)arg1 didCompleteWithAction:(int)arg2;
- (double)marginForTableView:(id)arg1;
- (void)tableView:(id)arg1 accessoryButtonTappedForRowWithIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (void)_selectAllCalendarsAndStores:(_Bool)arg1;
- (void)_selectCalendar:(id)arg1 selected:(_Bool)arg2;
- (void)_selectGroup:(id)arg1 selected:(_Bool)arg2;
- (int)_numSelectedGroups;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)_cellIdentifierWithSubtitle:(_Bool)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)declinedEventsSwitchChanged:(id)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)_declinedEventsSwitchSection;
- (_Bool)_shouldShowGroupNameInSection:(long long)arg1;
- (id)_stringForSharedCalendar:(id)arg1;
- (_Bool)_isEllipsisCellForGroup:(id)arg1 rowIndex:(long long)arg2;
- (_Bool)_tableShouldDisplayNewCalendarCellForGroup:(id)arg1;
- (_Bool)_tableShouldDisplayAllCellForGroup:(id)arg1;
- (_Bool)_tableShouldDisplayAllCalendarsSection;
- (id)_indexPathForCalendar:(id)arg1 source:(id)arg2;
@property(copy, nonatomic) NSSet *selectedCalendars;
@property(retain, nonatomic) EKCalendar *selectedCalendar;
- (void)_setCalendars:(id)arg1;
- (void)_populateGroupsForCalendars:(id)arg1;
- (void)_applySelection;
- (id)_loadCalendars;
- (id)_filterCalendars:(id)arg1;
- (void)_syncDidEnd;
- (void)_syncDidStart;
- (void)_eventStoreChanged:(id)arg1;
- (void)_restoreSelection:(id)arg1 newCalendars:(id)arg2;
- (id)_saveSelection;
- (id)_groupForCustomGroupType:(int)arg1;
- (id)_groupForSource:(id)arg1;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)_calendarAvailableForEditing:(id)arg1;
- (void)_cancelMaximumTimeElapsedTimeout;
- (void)_beginMaximumTimeElapsedTimeout;
- (void)_cancelSyncCompletedTimeout;
- (void)_beginSyncCompletedTimeout;
- (void)_syncCompletedGracePeriodExpired;
- (void)_refreshControlMaximumVisibleTimeElapsed;
- (void)_pulledToRefresh:(id)arg1;
- (void)refresh:(id)arg1;
- (void)done:(id)arg1;
- (void)cancel:(id)arg1;
- (_Bool)showsWritableCalendarsOnly;
- (void)setShowsWritableCalendarsOnly:(_Bool)arg1;
@property(nonatomic) _Bool allowsPullToRefresh;
@property(nonatomic) _Bool showsRefreshButton;
- (_Bool)_canEnableRefresh;
@property(nonatomic) _Bool showsCancelButton;
@property(nonatomic) _Bool showsDoneButton;
- (unsigned long long)supportedInterfaceOrientations;
@property(nonatomic) _Bool allowsEdit;
@property(nonatomic) _Bool allowsRotation;
- (void)setShowAll:(_Bool)arg1;
- (struct CGSize)preferredContentSize;
- (id)_viewModeTitle;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithSelectionStyle:(int)arg1 displayStyle:(int)arg2 eventStore:(id)arg3;
- (id)initWithSelectionStyle:(int)arg1 displayStyle:(int)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4;
- (id)initWithSelectionStyle:(int)arg1 displayStyle:(int)arg2 entityType:(unsigned long long)arg3 eventStore:(id)arg4 limitedToSource:(id)arg5;

@end

@interface EKCalendarChooserCell : EKUIConstrainedFontsTableViewCell
{
    _Bool _showCheckmarksOnLeft;
    _Bool _checked;
    _Bool _shouldAnimate;
    _Bool _showsColorDot;
    UIImage *_colorDot;
    UIImage *_colorDotHighlighted;
    UIImageView *_colorDotView;
    UIImageView *_checkmarkView;
}

@property(nonatomic) _Bool showsColorDot; // @synthesize showsColorDot=_showsColorDot;
@property(nonatomic) _Bool shouldAnimate; // @synthesize shouldAnimate=_shouldAnimate;
@property(nonatomic) _Bool checked; // @synthesize checked=_checked;
@property(nonatomic) _Bool showCheckmarksOnLeft; // @synthesize showCheckmarksOnLeft=_showCheckmarksOnLeft;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (double)textLeftIndent;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setColorDotHighlightedImage:(id)arg1;
- (void)setColorDotImage:(id)arg1;
- (void)setShowCheckmarksOnLeft:(_Bool)arg1 animated:(_Bool)arg2;
- (void)prepareForReuse;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)setContentAlpha:(double)arg1;

@end

@interface EKCalendarChooserCellLayoutManager : UITableViewCellLayoutManager
{
    id _realLayoutManager;
}

+ (id)sharedLayoutManagerForStyle:(long long)arg1;
- (void).cxx_destruct;
- (void)getTextLabelRect:(struct CGRect *)arg1 detailTextLabelRect:(struct CGRect *)arg2 forCell:(id)arg3;
- (id)defaultDetailTextLabelFontForCell:(id)arg1;
- (id)defaultTextLabelFontForCell:(id)arg1;
- (id)detailTextLabelForCell:(id)arg1;
- (double)defaultDetailTextLabelFontSizeForCell:(id)arg1;
- (double)defaultTextLabelFontSizeForCell:(id)arg1;
- (struct CGRect)textRectForCell:(id)arg1;
- (id)initWithCellStyle:(long long)arg1;

@end

@interface EKCalendarColorEditItem : EKCalendarEditItem
{
    NSMutableArray *_cells;
    unsigned long long _checkedRow;
}

- (void).cxx_destruct;
- (_Bool)saveStateToCalendar:(id)arg1;
- (void)calendarEditor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (id)headerTitle;
- (unsigned long long)numberOfSubitems;
- (void)setCalendar:(id)arg1 store:(id)arg2;
@property(readonly, nonatomic) NSMutableArray *cells; // @synthesize cells=_cells;
- (id)_cellForColor:(id)arg1;
- (void)reset;

@end

@interface EKCalendarDeleteButtonEditItem : EKCalendarEditItem
{
    UITableViewCell *_cell;
    id _deleteButtonTarget;
    SEL _deleteButtonAction;
}

- (void).cxx_destruct;
- (void)calendarEditor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (void)setDeleteButtonTarget:(id)arg1 action:(SEL)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarEditItemViewController : EKEditItemViewController <EKCalendarChooserDelegate>
{
    EKEventStore *_store;
    EKCalendarChooser *_chooser;
    EKCalendar *_selectedCalendar;
    unsigned long long _entityType;
    _Bool _limitToSource;
}

@property(nonatomic) _Bool limitToSource; // @synthesize limitToSource=_limitToSource;
- (void).cxx_destruct;
- (void)calendarChooserSelectionDidChange:(id)arg1;
- (struct CGSize)preferredContentSize;
@property(retain, nonatomic) EKCalendar *selectedCalendar;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1 store:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 store:(id)arg2 styleProvider:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1 store:(id)arg2 styleProvider:(id)arg3 entityType:(unsigned long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarEditor : UIViewController <EKCalendarEditItemDelegate>
{
    UITableView *_tableView;
    NSArray *_editItems;
    EKCalendarShareesEditItem *_shareesEditItem;
    EKSource *_source;
    unsigned long long _entityType;
    _Bool _isNewCalendar;
    EKEventStore *_eventStore;
    EKCalendar *_calendar;
    id <EKCalendarEditorDelegate> _delegate;
    id <EKStyleProvider> _styleProvider;
}

@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) _Bool isNewCalendar; // @synthesize isNewCalendar=_isNewCalendar;
@property(nonatomic) __weak id <EKCalendarEditorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) EKCalendar *calendar; // @synthesize calendar=_calendar;
@property(retain, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_eventStore;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)scrollViewDidScroll:(id)arg1;
- (id)tableView;
- (id)owningNavigationController;
- (int)sectionForCalendarEditItem:(id)arg1;
- (void)calendarItemStartedEditing:(id)arg1;
- (void)_deleteClicked:(id)arg1;
- (void)_deleteCalendar;
- (void)done:(id)arg1;
- (void)cancel:(id)arg1;
- (void)_presentValidationAlert:(id)arg1;
- (id)_editItems;
- (void)setupForCalendar;
- (struct CGSize)preferredContentSize;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (_Bool)_shouldShowDeleteButton;
- (void)_eventStoreChanged:(id)arg1;
- (void)_localeChanged;
- (void)dealloc;
- (id)initWithSource:(id)arg1 eventStore:(id)arg2 entityType:(unsigned long long)arg3;
- (id)initWithCalendar:(id)arg1 eventStore:(id)arg2 entityType:(unsigned long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarIgnoreAlertsEditItem : EKCalendarAbstractSwitchEditItem
{
}

- (id)headerTitle;
- (id)descriptionLabelText;
- (id)cellText;
- (_Bool)underlyingCalendarState;
- (void)setUnderlyingCalendarState:(_Bool)arg1;
- (_Bool)configureWithCalendar:(id)arg1;

@end

@interface EKCalendarIgnoreSharedCalendarResourceChangeNotificationsEditItem : EKCalendarAbstractSwitchEditItem
{
}

- (id)headerTitle;
- (id)descriptionLabelText;
- (id)cellText;
- (_Bool)underlyingCalendarState;
- (void)setUnderlyingCalendarState:(_Bool)arg1;
- (_Bool)configureWithCalendar:(id)arg1;

@end

@interface EKCalendarInfo : NSObject
{
    NSString *_title;
    _Bool _selected;
    int _customGroupType;
    EKCalendar *_calendar;
    UIColor *_color;
    EKGroupInfo *_group;
}

@property(nonatomic) int customGroupType; // @synthesize customGroupType=_customGroupType;
@property(nonatomic) __weak EKGroupInfo *group; // @synthesize group=_group;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(retain, nonatomic) EKCalendar *calendar; // @synthesize calendar=_calendar;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIImage *highlightedIcon;
@property(readonly, nonatomic) UIImage *icon;
- (id)description;
@property(readonly, nonatomic) _Bool excludeFromSelectAll;
@property(readonly, nonatomic) _Bool isEditable;
@property(readonly, nonatomic) _Bool isPublished;
@property(readonly, nonatomic) _Bool isShared;
@property(readonly, nonatomic) _Bool isSubscribed;
@property(readonly, nonatomic) int displayOrder;
@property(readonly, copy, nonatomic) NSString *title;
- (id)initWithCalendar:(id)arg1;
- (void)_updateCustomGroupType;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarItemEditItem : NSObject <EKEditItemViewControllerDelegate>
{
    EKEventStore *_store;
    UIViewController<EKEditItemViewControllerProtocol> *_viewController;
    EKCalendarItem *_calendarItem;
    id <EKCalendarItemEditItemDelegate> _delegate;
    id <EKStyleProvider> _styleProvider;
    UIResponder *_selectedResponder;
}

@property(retain, nonatomic) UIResponder *selectedResponder; // @synthesize selectedResponder=_selectedResponder;
@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
@property(nonatomic) __weak id <EKCalendarItemEditItemDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)viewForActionSheet;
- (_Bool)shouldPinKeyboard;
- (_Bool)isInline;
- (void)editItemViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (void)editItemViewControllerWantsKeyboardPinned:(_Bool)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (void)endInlineEditing;
- (void)notifyRequiresHeightChange;
- (void)notifyTextChanged;
- (void)notifySubitemDidCommit:(unsigned long long)arg1;
- (void)notifyDidEndEditing;
- (void)notifyDidStartEditing;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;
- (void)editor:(id)arg1 didStartEditingItem:(id)arg2;
- (void)editorDidScroll:(id)arg1;
- (_Bool)editor:(id)arg1 shouldClearSelectionFromSubitem:(unsigned long long)arg2;
- (void)editor:(id)arg1 didDeselectSubitem:(unsigned long long)arg2;
- (void)_showViewController:(id)arg1 editor:(id)arg2 animated:(_Bool)arg3;
- (void)editor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (void)editor:(id)arg1 requestsInjectableViewControllerToBeShownForSubitem:(unsigned long long)arg2;
- (_Bool)editor:(id)arg1 canSelectSubitem:(unsigned long long)arg2;
- (id)titleForHeader;
- (id)footerTitle;
- (id)footerView;
- (double)footerHeightForWidth:(double)arg1;
- (id)injectableViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (unsigned long long)numberOfSubitems;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (void)applicationDidResume;
- (_Bool)forceRefreshLocationItemOnCommit;
- (_Bool)forceRefreshInviteesItemOnCommit;
- (_Bool)forceRefreshStartAndEndDatesOnCommit;
- (_Bool)forceTableReloadOnCommit;
- (_Bool)requiresReconfigurationOnCommit;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (_Bool)configureForCalendarConstraints:(id)arg1;
- (void)reset;
- (void)refreshFromCalendarItemAndStore;
- (id)calendarItem;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarItemAlarmEditItem : EKCalendarItemEditItem
{
    CalendarEventAlarmTable *_alarmTable;
    unsigned long long _disclosedSubitem;
    NSArray *_alarms;
    int _lastSeenAllDayState;
    _Bool _userChangedAlarm;
    _Bool _hasLeaveNowAlarm;
    _Bool _canHaveLeaveNowAlarm;
}

- (void).cxx_destruct;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (_Bool)_alarmsMatchCalendarItem;
- (void)refreshFromCalendarItemAndStore;
- (void)_updateAlarms;
- (_Bool)_calendarItemHasLeaveNowAlarm;
- (_Bool)configureForCalendarConstraints:(id)arg1;
- (void)_updateDefaultAlarm;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfSubitems;
- (void)updateInternalTravelTimeStateForCalendarItem:(id)arg1;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarItemCalendarEditItem : EKCalendarItemEditItem
{
    unsigned long long _entityType;
}

- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)_shouldShowSourceForCalendar:(id)arg1;
- (_Bool)requiresReconfigurationOnCommit;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (id)init;
- (id)initWithEntityType:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarItemEditor : UITableViewController <EKCalendarItemEditItemDelegate, UIActionSheetDelegate, UIAlertViewDelegate>
{
    NSArray *_editItems;
    NSArray *_orderedEditItems;
    id _revertState;
    _Bool _showsTimeZone;
    NSArray *_currentItems;
    EKUIRecurrenceAlertController *_recurrenceAlertController;
    EKCalendarItemEditItem *_currentEditItem;
    _Bool _giveTitleCellKeyboardFocus;
    int _editItemVisibility;
    _Bool _isIgnoringCellHeightChange;
    _Bool _needsCellHeightChange;
    NSMutableSet *_editItemsDisablingDoneButton;
    long long _lastAuthorizationStatus;
    _Bool _hasAppeared;
    UIBarButtonItem *_cancelButton;
    UIBarButtonItem *_doneButton;
    UIBarButtonItem *_leftButtonSpacer;
    UIBarButtonItem *_rightButtonSpacer;
    double _leftButtonSpace;
    double _rightButtonSpace;
    _Bool _scrollToNotes;
    _Bool _canHideDoneAndCancelButtons;
    id <EKCalendarItemEditorDelegate> _editorDelegate;
    EKEventStore *_store;
    EKCalendarItem *_calendarItem;
    UIResponder *_responderToRestoreOnAppearence;
    unsigned long long _visibleSectionToRestoreOnAppearence;
    _UIAccessDeniedView *_accessDeniedView;
}

@property(retain, nonatomic) _UIAccessDeniedView *accessDeniedView; // @synthesize accessDeniedView=_accessDeniedView;
@property(readonly) EKCalendarItemEditItem *currentEditItem; // @synthesize currentEditItem=_currentEditItem;
@property(nonatomic) _Bool canHideDoneAndCancelButtons; // @synthesize canHideDoneAndCancelButtons=_canHideDoneAndCancelButtons;
@property(nonatomic) _Bool showsTimeZone; // @synthesize showsTimeZone=_showsTimeZone;
@property(nonatomic) unsigned long long visibleSectionToRestoreOnAppearence; // @synthesize visibleSectionToRestoreOnAppearence=_visibleSectionToRestoreOnAppearence;
@property(retain, nonatomic) UIResponder *responderToRestoreOnAppearence; // @synthesize responderToRestoreOnAppearence=_responderToRestoreOnAppearence;
@property(nonatomic) _Bool scrollToNotes; // @synthesize scrollToNotes=_scrollToNotes;
@property(retain, nonatomic) EKCalendarItem *calendarItem; // @synthesize calendarItem=_calendarItem;
@property(retain, nonatomic) EKEventStore *store; // @synthesize store=_store;
@property(nonatomic) __weak id <EKCalendarItemEditorDelegate> editorDelegate; // @synthesize editorDelegate=_editorDelegate;
- (void).cxx_destruct;
- (void)_presentDetachSheet;
- (id)_viewForSheet;
- (id)_nameForDeleteButton;
- (_Bool)_canDetachSingleOccurrence;
- (_Bool)_performSave:(int)arg1 animated:(_Bool)arg2;
- (void)_performDelete:(int)arg1;
- (void)deleteClicked:(id)arg1;
- (_Bool)allowsDeletingFutureOccurrences;
- (void)tableViewDidFinishReload:(id)arg1;
- (void)tableViewDidStartReload:(id)arg1;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didDeselectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)_editItemAtIndexPath:(id)arg1 firstRowIndex:(long long *)arg2;
- (id)defaultAlertTitleForEditItem:(id)arg1;
- (void)editItemRequiresPopoverSizeUpdate:(id)arg1;
- (void)editItemRequiresHeightChange:(id)arg1;
- (void)editItem:(id)arg1 wantsRowsScrolledToVisible:(id)arg2;
- (void)editItem:(id)arg1 wantsRowInsertions:(id)arg2 rowDeletions:(id)arg3 rowReloads:(id)arg4;
- (void)editItem:(id)arg1 wantsRowInsertions:(id)arg2 rowDeletions:(id)arg3;
- (long long)rowNumberForEditItem:(id)arg1;
- (void)editItem:(id)arg1 wantsRowReload:(id)arg2;
- (void)editItem:(id)arg1 performActionsOnCellAtSubitem:(unsigned long long)arg2 actions:(CDUnknownBlockType)arg3;
- (void)_reallyHandleCellHeightChange;
- (void)_tableViewDidUpdateHeights;
- (void)_tableViewWillUpdateHeights;
- (void)editItem:(id)arg1 wantsDoneButtonDisabled:(_Bool)arg2;
- (_Bool)_canEnableDoneButton;
- (void)editItem:(id)arg1 wantsKeyboardPinned:(_Bool)arg2;
- (id)viewControllerForEditItem:(id)arg1;
- (void)editItem:(id)arg1 textViewShouldReturn:(id)arg2;
- (void)editItemWantsInjectableViewControllerToBeShown:(id)arg1;
- (void)editItemTextChanged:(id)arg1;
- (void)editItemDidEndEditing:(id)arg1;
- (void)_setWantsToEnableDoneButtonAfterTextChanged;
- (void)editItem:(id)arg1 didCommitFromDetailViewController:(_Bool)arg2;
- (void)editItemDidStartEditing:(id)arg1;
- (void)_revertEvent;
- (void)_copyEventForPossibleRevert;
@property(nonatomic) double navBarRightContentInset;
@property(nonatomic) double navBarLeftContentInset;
- (void)_setWantsToEnableDoneButton:(_Bool)arg1;
- (void)_setDoneAndCancelButtonVisible:(_Bool)arg1;
- (void)_keyboardWillChangeFrame:(id)arg1;
- (void)_keyboardWillHide;
- (void)_pinKeyboard:(_Bool)arg1;
- (struct CGSize)preferredContentSize;
- (void)refreshLocation;
- (void)refreshInvitees;
- (void)refreshStartAndEndDates;
- (void)_setShowingAccessDeniedView:(_Bool)arg1 showSettingsInstructions:(_Bool)arg2;
- (void)storeChanged:(id)arg1;
- (void)setupForEvent;
- (unsigned long long)entityType;
- (id)notificationNamesForLocaleChange;
- (void)customizeActionSheet:(id)arg1;
- (id)defaultAlertTitle;
- (void)setupDeleteButton;
- (id)defaultTitleForCalendarItem;
- (id)preferredTitle;
- (_Bool)saveCalendarItemWithSpan:(int)arg1 error:(id *)arg2;
- (void)prepareEditItems;
- (void)_setCalendarItemOnEditItems;
- (void)_configureVisibleItems;
- (_Bool)shouldDisplayEditItem:(id)arg1 withVisibility:(int)arg2;
- (void)_completeWithAction:(int)arg1 animated:(_Bool)arg2 notify:(_Bool)arg3;
- (void)completeWithAction:(int)arg1 animated:(_Bool)arg2;
- (_Bool)saveWithSpan:(int)arg1 animated:(_Bool)arg2;
- (_Bool)willPresentDialogOnSave;
- (void)completeAndSave;
- (void)handleTapOutside;
- (void)done:(id)arg1;
- (void)cancelEditingWithDelegateNotification:(_Bool)arg1;
- (void)cancel:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)applicationDidResume;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (long long)firstTableRowForEditItem:(id)arg1;
- (unsigned long long)tableSectionForEditItem:(id)arg1;
- (int)editItemVisibility;
- (void)setEditItemVisibility:(int)arg1 animated:(_Bool)arg2;
- (void)_updateCurrentEditItemsFromVisibility:(int)arg1 toVisibility:(int)arg2 animated:(_Bool)arg3;
- (void)_localeChanged;
- (id)_orderedEditItems;
- (id)_editItems;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarItemEditorTableView : UITableView
{
}

- (void)scrollToRowAtIndexPath:(id)arg1 atScrollPosition:(long long)arg2 animated:(_Bool)arg3;
- (void)reloadData;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarItemRecurrenceEditItem : EKCalendarItemEditItem <EKRecurrenceTypeEditItemViewControllerDelegate, EKCellShortener>
{
    long long _repeatType;
    long long _originalRepeatType;
    NSDate *_repeatEnd;
    NSDate *_originalRepeatEnd;
    NSString *_customRepeatDescription;
    unsigned long long _disclosedSubitem;
    int _shorteningStatus;
    PreferencesValueCell *_repeatEndDateCell;
    EKRecurrenceTypeEditItemViewController *_recurrenceTypeVC;
    EKCalendarItemRecurrenceEndCell *_repeatEndPickerCell;
}

- (void).cxx_destruct;
- (long long)repeatTypeForRecurrenceRule:(id)arg1;
- (id)_recurrenceTypeVC;
- (void)_neverRepeatButtonTapped:(id)arg1;
- (void)_repeatEndDateChanged:(id)arg1;
- (id)_repeatEndPickerCell;
- (_Bool)forceRefreshStartAndEndDatesOnCommit;
- (id)minRecurrenceEndDate;
- (id)stringForDate:(id)arg1;
- (id)recurrenceTimeZone;
- (id)recurrenceDate;
- (void)shortenCell:(id)arg1;
- (_Bool)_validateRecurrenceType:(id)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1 notify:(_Bool)arg2;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (void)_updateRepeatEndDateCell;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSubitems;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (void)refreshFromCalendarItemAndStore;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (void)reset;
- (void)_contentSizeCategoryChanged:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarItemRecurrenceEndCell : UITableViewCell
{
    UIButton *_neverButton;
    UIDatePicker *_datePicker;
}

@property(readonly, nonatomic) UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
@property(readonly, nonatomic) UIButton *neverButton; // @synthesize neverButton=_neverButton;
- (void).cxx_destruct;
- (void)layoutSubviews;
@property(retain, nonatomic) NSDate *date;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKCalendarItemTitleInlineEditItem : EKCalendarItemEditItem <UITextFieldDelegate, EKEditItemViewControllerDelegate, EKCalendarItemInlineEditItem>
{
    UITableViewCell *_titleCell;
    UITableViewCell *_nonConferenceLocationCell;
    EKUILocationEditItemCell *_conferenceLocationCell;
    UITableViewCell *_mapCell;
    _Bool _sourceSupportsAvailabilityRequests;
    UIView *_clearButtonView;
    EKRequestAvailabilityOperation *_availabilityRequest;
    NSArray *_availabilitySpansForLocation;
    EKParticipant *_conferenceRoom;
    long long _conferenceRoomAvailabilityType;
    _Bool _showsLocation;
    long long _mostRecentStringLengthDelta;
}

- (void).cxx_destruct;
- (_Bool)_showConferenceLocationCell;
- (_Bool)textFieldShouldClear:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldDidChange:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (_Bool)isSubitemAtIndexSaveable:(unsigned long long)arg1;
- (_Bool)forceRefreshStartAndEndDatesOnCommit;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (void)_clearButtonTapped;
- (void)_updateAvailabilityInformation;
- (id)_clearButtonView;
- (void)_refreshConferenceRoomCell;
- (void)_setNewStructuredLocation:(id)arg1;
- (void)_updateLocationWithConferenceRoom:(id)arg1;
- (void)_updateLocationWithStructuredLocation:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)isSaveable;
- (id)_makeCell:(unsigned long long)arg1;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (void)_contentSizeCategoryChanged:(id)arg1;
- (unsigned long long)numberOfSubitems;
- (void)reset;
- (_Bool)isInline;
- (_Bool)_showsMap;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (void)refreshFromCalendarItemAndStore;
- (void)dealloc;
- (id)initWithLocation:(_Bool)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarPublishingEditItem : EKCalendarEditItem <CalendarPublishingActivityDelegate>
{
    _Bool _published;
    UIView *_footerView;
    UILabel *_descriptionLabel;
    UILabel *_publishingLabel;
    UIActivityIndicatorView *_spinner;
}

@property(nonatomic) _Bool published; // @synthesize published=_published;
- (void).cxx_destruct;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(int)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (id)pubishURL;
- (id)calendarTitle;
- (void)calendarEditor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (void)_publishChanged:(id)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (double)footerHeightForSection;
- (id)footerViewForSection;
- (unsigned long long)numberOfSubitems;
- (_Bool)configureWithCalendar:(id)arg1;
@property(readonly, nonatomic) UIView *footerView;
- (void)layoutForWidth:(double)arg1;
- (void)_applyStyleToUILabel:(id)arg1;
- (void)reset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttendeePicker : UIViewController <UITableViewDataSource, UITableViewDelegate, MFContactsSearchConsumer, MFComposeRecipientTextViewDelegate, ABPeoplePickerNavigationControllerDelegate, ABPersonViewControllerDelegate, ABUnknownPersonViewControllerDelegate>
{
    NSArray *_recipients;
    MFComposeRecipientTextView *_composeRecipientView;
    UIScrollView *_recipientScrollView;
    UITableView *_searchResultsView;
    MFSearchShadowView *_shadowView;
    _Bool _showingSearchField;
    UIKeyboard *_keyboard;
    NSNumber *_lastSearchId;
    _Bool _ABAccessDenied;
    MFContactsSearchManager *_searchManager;
    MFContactsSearchResultsModel *_searchResultsModel;
    NSArray *_searchResults;
    _Bool _shouldReenableAutomaticKeyboard;
    struct CGRect _initialFrame;
    NSOperationQueue *_availabilityQueue;
    NSMutableDictionary *_recipientAddressesToRecipients;
    EKEvent *_event;
    NSMutableDictionary *_atomPresentationOptionsByRecipient;
    _Bool _suppressAvailabilityRequests;
    NSDate *_overriddenEventStartDate;
    NSDate *_overriddenEventEndDate;
    NSString *_searchAccountID;
    id <EKEventAttendeePickerDelegate> _emailValidationDelegate;
}

+ (_Bool)_participantHasResponded:(id)arg1;
+ (id)_addressForRecipient:(id)arg1;
@property(nonatomic) __weak id <EKEventAttendeePickerDelegate> emailValidationDelegate; // @synthesize emailValidationDelegate=_emailValidationDelegate;
@property(copy, nonatomic) NSString *searchAccountID; // @synthesize searchAccountID=_searchAccountID;
- (void).cxx_destruct;
- (_Bool)unknownPersonViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)unknownPersonViewController:(id)arg1 didResolveToPerson:(void *)arg2;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)peoplePickerNavigationController:(id)arg1 didSelectPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)peoplePickerNavigationController:(id)arg1 didSelectPerson:(void *)arg2;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (unsigned long long)presentationOptionsForRecipient:(id)arg1;
- (_Bool)recipientViewShouldIgnoreFirstResponderChanges:(id)arg1;
- (id)composeRecipientView:(id)arg1 composeRecipientForRecord:(void *)arg2 identifier:(int)arg3;
- (id)composeRecipientView:(id)arg1 composeRecipientForAddress:(id)arg2;
- (void)composeRecipientViewDidFinishPickingRecipient:(id)arg1;
- (void)composeRecipientViewRequestAddRecipient:(id)arg1;
@property(readonly, nonatomic) _Bool showAvailability;
- (id)peoplePickerPrompt;
- (void)composeRecipientView:(id)arg1 textDidChange:(id)arg2;
- (void)composeRecipientView:(id)arg1 didChangeSize:(struct CGSize)arg2;
- (void)_adjustLayoutOfSubviews;
- (void)composeRecipientView:(id)arg1 didFinishEnteringAddress:(id)arg2;
- (void)composeRecipientView:(id)arg1 didRemoveRecipient:(id)arg2;
- (void)composeRecipientView:(id)arg1 didAddRecipient:(id)arg2;
- (void)searchWithText:(id)arg1;
- (void)endedNetworkActivity;
- (void)beganNetworkActivity;
- (void)finishedTaskWithID:(id)arg1;
- (void)finishedSearchingForType:(unsigned long long)arg1;
- (void)consumeSearchResults:(id)arg1 type:(unsigned long long)arg2 taskID:(id)arg3;
- (id)_searchManager;
- (double)_maxScrollerHeight;
- (void)_showSearchResults;
- (void)_hideSearchResultsAndCancelOutstandingSearches:(_Bool)arg1;
- (id)_searchResultsView;
- (id)_shadowView;
- (void)_copyRecipientsFromComposeView;
- (void)_setAtomPresentationOption:(unsigned long long)arg1 forRecipient:(id)arg2;
- (void)_requestAvailabilityForRecipients:(id)arg1;
- (id)_lookUpRecipientForAddress:(id)arg1;
- (void)_setRecipientsOnComposeView;
@property(copy, nonatomic) NSArray *recipients;
@property(readonly, nonatomic) NSArray *addresses;
@property(readonly, nonatomic) NSString *remainingText;
- (void)commitRemainingText;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 event:(id)arg2 overriddenEventStartDate:(id)arg3 overriddenEventEndDate:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarShareePicker : EKEventAttendeePicker
{
}

- (_Bool)showAvailability;
- (id)peoplePickerPrompt;

@end

@interface EKCalendarShareesEditItem : EKCalendarEditItem <EKShareeViewControllerDelegate, EKShareePickerViewControllerDelegate>
{
    NSMutableArray *_shareeCells;
    UIView *_footerView;
    UILabel *_descriptionLabel;
}

@property(retain, nonatomic) NSMutableArray *shareeCells; // @synthesize shareeCells=_shareeCells;
- (void).cxx_destruct;
- (id)eventStoreForShareePickerViewController:(id)arg1;
- (void)shareePickerViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (void)shareeViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (void)shareeViewControllerDidChangeAccessLevel:(id)arg1;
- (void)_popBackToCalendarEditor:(_Bool)arg1;
- (void)calendarEditor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (_Bool)saveStateToCalendar:(id)arg1;
- (id)headerTitle;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (unsigned long long)numberOfSubitems;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)layoutForWidth:(double)arg1;
- (double)footerHeightForSection;
- (void)_applyStyleToUILabel:(id)arg1;
- (id)footerView;
- (id)footerViewForSection;
- (_Bool)configureWithCalendar:(id)arg1;
- (id)_shareeCellForName:(id)arg1 detailText:(id)arg2 additionalDetailText:(id)arg3;
- (id)_addPersonCell;
- (id)_stringForShareeAccessLevel:(int)arg1;
- (id)_stringForShareeStatus:(int)arg1;
- (void)reset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCalendarTitleEditItem : EKCalendarEditItem <UITextFieldDelegate>
{
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textFieldShouldBeginEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)becomeFirstResponder;
- (_Bool)saveStateToCalendar:(id)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)reset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKCurrentTimeMarkerView : UIView
{
    _Bool _showsThumb;
    _Bool _showsLine;
    UILabel *_currentTimeLabel;
}

+ (double)_spacingAdjustmentFontSize;
+ (id)timeMarkerFont;
@property(retain, nonatomic) UILabel *currentTimeLabel; // @synthesize currentTimeLabel=_currentTimeLabel;
@property(nonatomic) _Bool showsLine; // @synthesize showsLine=_showsLine;
@property(nonatomic) _Bool showsThumb; // @synthesize showsThumb=_showsThumb;
- (void).cxx_destruct;
- (void)tintColorDidChange;
- (void)drawRect:(struct CGRect)arg1;
- (struct CGRect)_lineFrame;
@property(readonly, nonatomic) struct CGRect currentTimeFrame;
- (void)_updateTimeLabelColor;
- (void)invalidateFonts;
- (void)_updateTimeWithForce:(_Bool)arg1;
- (void)updateTime;
@property(readonly, nonatomic) double markerMidHeight;
@property(readonly, nonatomic) double markerWidth;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKDayAllDayView : UIView
{
    long long _orientation;
    NSMutableArray *_occurrenceViews;
    UILabel *_allDay;
    _Bool _allDayLabelHighlighted;
    UIScrollView *_scroller;
    double _occurrenceInset;
    _Bool _allowSelection;
    _Bool _showSelection;
    EKEvent *_selectedEvent;
    _Bool _usesSmallText;
    UIView *_dividerLineViewTop;
    UIView *_dividerLineViewBottom;
    _Bool _showsBorderLines;
    _Bool _showsLabel;
    int _maxVisibleRows;
    id <EKDayAllDayViewDelegate> _delegate;
    double _fixedHeight;
    EKEvent *_dimmedOccurrence;
}

+ (id)allDayLabelBoldFont;
+ (id)allDayLabelFont;
+ (id)unscaledAllDayFont;
@property(retain, nonatomic) EKEvent *dimmedOccurrence; // @synthesize dimmedOccurrence=_dimmedOccurrence;
@property(nonatomic) int maxVisibleRows; // @synthesize maxVisibleRows=_maxVisibleRows;
@property(nonatomic) double fixedHeight; // @synthesize fixedHeight=_fixedHeight;
@property(nonatomic) _Bool showsLabel; // @synthesize showsLabel=_showsLabel;
@property(nonatomic) _Bool showsBorderLines; // @synthesize showsBorderLines=_showsBorderLines;
@property(nonatomic) __weak id <EKDayAllDayViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateLabelFont;
- (void)setBorderColor:(id)arg1;
- (void)setAllDayLabelColor:(id)arg1;
- (_Bool)isAllDayLabelHighlighted;
- (void)setAllDayLabelHighlighted:(_Bool)arg1;
@property(readonly, nonatomic) double naturalHeight;
- (double)_height;
- (void)dayOccurrenceViewClicked:(id)arg1 atPoint:(struct CGPoint)arg2;
@property(nonatomic) _Bool showsSelection;
@property(nonatomic) _Bool allowsOccurrenceSelection;
- (id)occurrenceViews;
- (void)setOccurrences:(id)arg1;
- (void)_configureOccurrenceViewMarginAndPadding:(id)arg1;
- (void)configureOccurrenceViewForGestureController:(id)arg1;
- (double)_borderLineWidth;
- (double)_allDayAreaHeightForEventCount:(long long)arg1;
- (void)removeAllOccurrenceViews;
- (void)setOrientation:(long long)arg1;
- (void)setOccurrenceInset:(double)arg1 labelInset:(double)arg2;
- (void)selectEvent:(id)arg1;
- (id)selectedEvent;
- (_Bool)containsEvent:(id)arg1;
- (void)addViewToScroller:(id)arg1;
- (double)nextAvailableOccurrenceViewYOrigin;
- (id)occurrenceViewForEvent:(id)arg1;
- (double)firstEventYOffset;
- (void)didMoveToWindow;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKDayGridView : UIView <EKCurrentTimeMarkerViewUpdating>
{
    double _timeInset;
    double _hourHeight;
    double _timeWidth;
    unsigned int _leftBorder:1;
    unsigned int _rightBorder:1;
    int _selected;
    double _fixedDayWidth;
    long long _orientation;
    struct CGRect _lastBounds;
    UIColor *_backgroundColor;
    UIView *_leftBorderView;
    NSMutableArray *_middleBorderViews;
    UIView *_rightBorderView;
    NSMutableArray *_gridPatternViews;
    unsigned long long _daysToDisplay;
    EKCurrentTimeMarkerView *_timeMarker;
    UIImageView *_timeDot;
    _Bool _rightBorderInsetsOccurrences;
    _Bool _showsTimeLine;
    _Bool _showsTimeMarker;
    _Bool _animatesTimeMarker;
    _Bool _usesVibrantGridDrawing;
    UIColor *_lineColor;
    long long _timeMarkerDotDay;
    double _eventHorizontalInset;
    double _hoursToPadTop;
    double _hoursToPadBottom;
    double _gridHeightScale;
}

+ (void)cacheBackgroundImage:(id)arg1 forKey:(id)arg2;
+ (id)cachedBackgroundImageForKey:(id)arg1;
@property(nonatomic) double gridHeightScale; // @synthesize gridHeightScale=_gridHeightScale;
@property(readonly, nonatomic) EKCurrentTimeMarkerView *timeMarker; // @synthesize timeMarker=_timeMarker;
@property(nonatomic) _Bool usesVibrantGridDrawing; // @synthesize usesVibrantGridDrawing=_usesVibrantGridDrawing;
@property(nonatomic) double hoursToPadBottom; // @synthesize hoursToPadBottom=_hoursToPadBottom;
@property(nonatomic) double hoursToPadTop; // @synthesize hoursToPadTop=_hoursToPadTop;
@property(nonatomic) double eventHorizontalInset; // @synthesize eventHorizontalInset=_eventHorizontalInset;
@property(nonatomic) long long timeMarkerDotDay; // @synthesize timeMarkerDotDay=_timeMarkerDotDay;
@property(nonatomic) _Bool animatesTimeMarker; // @synthesize animatesTimeMarker=_animatesTimeMarker;
@property(nonatomic) _Bool showsTimeMarker; // @synthesize showsTimeMarker=_showsTimeMarker;
@property(nonatomic) _Bool showsTimeLine; // @synthesize showsTimeLine=_showsTimeLine;
@property(nonatomic) _Bool rightBorderInsetsOccurrences; // @synthesize rightBorderInsetsOccurrences=_rightBorderInsetsOccurrences;
- (void).cxx_destruct;
- (id)_generateGridImage;
- (void)layoutSubviews;
- (double)_dayWidth;
@property(retain, nonatomic) UIColor *lineColor; // @synthesize lineColor=_lineColor;
@property(nonatomic) double fixedDayWidth;
@property(nonatomic, getter=isSelected) _Bool selected;
- (int)secondAtPosition:(double)arg1;
- (double)positionOfSecond:(long long)arg1;
@property(readonly, nonatomic) double timeWidth;
@property(readonly, nonatomic) double widthForOccurrences;
- (struct CGRect)rectForStartSeconds:(long long)arg1 endSeconds:(long long)arg2;
@property(nonatomic) _Bool showsRightBorder;
@property(nonatomic) _Bool showsLeftBorder;
- (void)tintColorDidChange;
- (void)_updateTimeMarker;
- (id)timeDotImage;
- (void)updateMarkerPosition;
@property(readonly, nonatomic) double hourHeight;
@property(readonly, nonatomic) double timeInset;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)bottomPadding;
@property(readonly, nonatomic) double topPadding;
- (void)setOrientation:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)addSubview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 backgroundColor:(id)arg2 opaque:(_Bool)arg3 numberOfDaysToDisplay:(unsigned long long)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayOccurrenceContentView : UIView
{
    NSString *_title;
    NSString *_location;
    UIColor *_color;
    UIColor *_titleTextColor;
    UIColor *_timeTextColor;
    UIColor *_secondaryTextColor;
    UIColor *_textBackgroundColor;
    UIColor *_statusTextColor;
    NSIndexSet *_titleMetrics;
    struct CGPoint _titleEndPoint;
    double _textEndY;
    struct CGRect _titleRect;
    struct CGRect _fullTextRect;
    NSAttributedString *_attributedContentString;
    unsigned long long _fontCompressionDegree;
    UIFont *_cachedPrimaryFont;
    double _cachedLineHeight;
    double _minimumCachedLineHeight;
    UIFont *_cachedSecondaryFont;
    double _cachedSecondaryLineHeight;
    double _cachedPrimaryFontTopOutset;
    double _cachedPrimaryFontBottomOutset;
    _Bool _allDay;
    _Bool _birthday;
    _Bool _facebook;
    _Bool _cancelled;
    _Bool _tentative;
    _Bool _declined;
    _Bool _needsReply;
    _Bool _selected;
    _Bool _allDayDrawingStyle;
    _Bool _usesSmallText;
    _Bool _hideText;
    _Bool _reduceProcessingForAnimation;
    int _occurrenceBackgroundStyle;
    NSString *_time;
}

+ (id)defaultSecondaryTextFont;
+ (id)defaultSmallPrimaryTextFont;
+ (id)defaultPrimaryTextFont;
+ (Class)layerClass;
@property(nonatomic) _Bool reduceProcessingForAnimation; // @synthesize reduceProcessingForAnimation=_reduceProcessingForAnimation;
@property(nonatomic) int occurrenceBackgroundStyle; // @synthesize occurrenceBackgroundStyle=_occurrenceBackgroundStyle;
@property(nonatomic) _Bool hideText; // @synthesize hideText=_hideText;
@property(nonatomic) _Bool usesSmallText; // @synthesize usesSmallText=_usesSmallText;
@property(nonatomic, getter=isAllDayDrawingStyle) _Bool allDayDrawingStyle; // @synthesize allDayDrawingStyle=_allDayDrawingStyle;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(nonatomic) _Bool needsReply; // @synthesize needsReply=_needsReply;
@property(nonatomic, getter=isDeclined) _Bool declined; // @synthesize declined=_declined;
@property(nonatomic, getter=isTentative) _Bool tentative; // @synthesize tentative=_tentative;
@property(nonatomic, getter=isCancelled) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic, getter=isFacebook) _Bool facebook; // @synthesize facebook=_facebook;
@property(nonatomic, getter=isBirthday) _Bool birthday; // @synthesize birthday=_birthday;
@property(nonatomic, getter=isAllDay) _Bool allDay; // @synthesize allDay=_allDay;
@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
@property(copy, nonatomic) NSString *location; // @synthesize location=_location;
@property(copy, nonatomic) NSString *time; // @synthesize time=_time;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (_Bool)hasIcon;
- (id)_timeTextFont;
- (id)_statusTextFont;
- (id)_secondaryTextFont;
- (double)_secondaryFontLineHeight;
- (double)_minimumPrimaryFontLineHeight;
- (double)_primaryFontLineHeight;
- (id)_primaryTextFont;
@property(retain, nonatomic) UIColor *textBackgroundColor;
@property(retain, nonatomic) UIColor *secondaryTextColor;
@property(retain, nonatomic) UIColor *timeTextColor;
@property(retain, nonatomic) UIColor *titleTextColor;
- (id)statusTextColor;
- (id)_secondaryText;
- (id)_timeText;
- (id)_statusText;
- (id)strikethroughColor;
- (void)_getLanguageAwareOutsets;
- (struct CGSize)_spaceForText;
- (struct CGRect)_frameForText;
- (double)bottomTextOutset;
- (double)topTextOutset;
- (double)minimumNaturalHeightAllText;
- (double)minimumNaturalHeightForPrimaryText;
- (double)textNaturalWidth;
- (id)attributedContentString;
- (id)attributedContentStringUnconstrained:(_Bool)arg1;
- (double)_attributedStringMinimumLineHeightBasedOnCurrentFontMetrics;
- (double)attributedStringMinimumLineHeight;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (id)stringDrawingContext;
- (void)invalidateCachedFontMetrics;
- (void)_invalidateCachedFonts;
- (void)_invalidateMetrics;
- (id)initWithContentView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)displayLayer:(id)arg1;
- (void)setNeedsDisplay;

@end

@interface EKDayOccurrenceResizeHandleView : UIView
{
    EKDayOccurrenceView *_occurrenceView;
    UIColor *_baseColor;
}

@property(readonly, nonatomic) __weak EKDayOccurrenceView *occurrenceView; // @synthesize occurrenceView=_occurrenceView;
@property(retain, nonatomic) UIColor *baseColor; // @synthesize baseColor=_baseColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 occurrenceView:(id)arg2;
- (struct CGRect)_circleRect;

@end

@interface EKDayOccurrenceTravelTimeView : UIView
{
    UIImageView *_travelTimeIcon;
    UILabel *_travelTimeLabel;
    UIView *_horizontalLineView;
    _Bool _selected;
    int _occurrenceBackgroundStyle;
    id <EKDayOccurrenceTravelTimeViewMetricsDelegate> _delegate;
    NSString *_location;
    UIColor *_elementColor;
    UIColor *_lineColor;
    long long _routingMode;
    double _travelTime;
    double _hairlineYPosition;
}

@property(nonatomic) double hairlineYPosition; // @synthesize hairlineYPosition=_hairlineYPosition;
@property(nonatomic) double travelTime; // @synthesize travelTime=_travelTime;
@property(nonatomic) long long routingMode; // @synthesize routingMode=_routingMode;
@property(nonatomic) int occurrenceBackgroundStyle; // @synthesize occurrenceBackgroundStyle=_occurrenceBackgroundStyle;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) UIColor *lineColor; // @synthesize lineColor=_lineColor;
@property(retain, nonatomic) UIColor *elementColor; // @synthesize elementColor=_elementColor;
@property(copy, nonatomic) NSString *location; // @synthesize location=_location;
@property(nonatomic) __weak id <EKDayOccurrenceTravelTimeViewMetricsDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct UIEdgeInsets)_parentPadding;
- (double)_iconScale;
- (id)_travelTimeIconForTravelModeWithColor:(id)arg1;
- (void)_updateColors;
- (double)minimumNaturalHeightForPrimaryText;
- (void)_setupStringContent;
- (id)_textFont;
- (id)initWithReusableTravelTimeView:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface EKDayOccurrenceView : UIView <NSCopying, EKDayOccurrenceTravelTimeViewMetricsDelegate>
{
    double _visibleHeight;
    UIImageView *_eventBackgroundView;
    UIImageView *_travelBackgroundView;
    EKDayOccurrenceContentView *_content;
    EKDayOccurrenceTravelTimeView *_travelTimeContentView;
    _Bool _needsContentCalc;
    _Bool _needsBackgroundImageUpdate;
    UIView *_startResizeHandle;
    UIView *_endResizeHandle;
    double _originalXBeforeOffset;
    unsigned int _touchKeptInsideOccurrence:1;
    unsigned int _offsetContentForLandscape:1;
    _Bool _visibleHeightLocked;
    struct UIEdgeInsets _padding;
    unsigned long long _bottomPinningState;
    struct CGRect _unpinnedEventBackgroundFrame;
    struct CGRect _unpinnedTravelBackgroundFrame;
    UIView *_pinFadeView;
    double _travelTimeSubviewHeightInPoints;
    _Bool _selected;
    _Bool _dimmed;
    _Bool _allDayDrawingStyle;
    _Bool _drawsResizeHandles;
    _Bool _hideBackgroundImage;
    _Bool _hideText;
    _Bool _isSelectedCopyView;
    _Bool _tentative;
    _Bool _declined;
    _Bool _needsReply;
    _Bool _allDay;
    _Bool _showsTravelTime;
    _Bool _reduceLayoutProcessingForAnimation;
    int _occurrenceBackgroundStyle;
    id _delegate;
    EKDayOccurrenceView *_selectedCopy;
    EKEvent *_occurrence;
    UIColor *_color;
    double _cappedColorBarHeight;
    double _travelTime;
    double _bottomPinningProximity;
    struct UIEdgeInsets _margin;
}

+ (struct UIEdgeInsets)defaultPadding;
+ (struct UIEdgeInsets)defaultMargin;
+ (double)barToBarHorizontalDistanceIncludingBarWidth;
+ (double)colorBarThickness;
+ (double)barToBarGapWidth;
+ (id)_adjustedStripeColorForDarkBackground:(id)arg1;
+ (id)_adjustedOccurrenceColorForDarkBackground:(id)arg1 opaque:(_Bool)arg2;
+ (id)_lightStripeColorForColor:(id)arg1;
+ (id)_lightColorForColor:(id)arg1 opaque:(_Bool)arg2;
+ (id)_color:(id)arg1 lightenedToPercentage:(double)arg2 withFinalAlpha:(double)arg3;
+ (id)_cachedImageForCalendarColor:(id)arg1 selected:(_Bool)arg2 declined:(_Bool)arg3 cancelled:(_Bool)arg4 tentative:(_Bool)arg5 needsReply:(_Bool)arg6 colorBarStyle:(long long)arg7 dayViewBackgroundStyle:(int)arg8;
+ (id)_imageForBarColor:(id)arg1 backgroundColor:(id)arg2 stripeColor:(id)arg3 stripedImageAlpha:(double)arg4 colorBarStyle:(long long)arg5;
+ (id)_imageForBarColor:(id)arg1 backgroundColor:(id)arg2 colorBarStyle:(long long)arg3;
+ (struct CGRect)contentStretchRectForFrame:(struct CGRect)arg1;
+ (double)bottomShadowMargin;
+ (double)minimumHeightForOrientation:(long long)arg1 isAllDay:(_Bool)arg2 usesSmallText:(_Bool)arg3;
+ (double)minimumHeightForOrientation:(long long)arg1 isAllDay:(_Bool)arg2;
+ (double)minimumHeightForOrientation:(long long)arg1;
+ (id)occurrenceViewWithFrame:(struct CGRect)arg1;
+ (void)clearCaches;
+ (void)_clearViewCache;
+ (id)_viewCache;
@property(nonatomic) double bottomPinningProximity; // @synthesize bottomPinningProximity=_bottomPinningProximity;
@property(nonatomic) _Bool reduceLayoutProcessingForAnimation; // @synthesize reduceLayoutProcessingForAnimation=_reduceLayoutProcessingForAnimation;
@property(nonatomic) int occurrenceBackgroundStyle; // @synthesize occurrenceBackgroundStyle=_occurrenceBackgroundStyle;
@property(nonatomic) double travelTime; // @synthesize travelTime=_travelTime;
@property(nonatomic) _Bool showsTravelTime; // @synthesize showsTravelTime=_showsTravelTime;
@property(nonatomic) double cappedColorBarHeight; // @synthesize cappedColorBarHeight=_cappedColorBarHeight;
@property(nonatomic, getter=isAllDay) _Bool allDay; // @synthesize allDay=_allDay;
@property(nonatomic) _Bool needsReply; // @synthesize needsReply=_needsReply;
@property(nonatomic, getter=isDeclined) _Bool declined; // @synthesize declined=_declined;
@property(nonatomic, getter=isTentative) _Bool tentative; // @synthesize tentative=_tentative;
@property(copy, nonatomic) UIColor *color; // @synthesize color=_color;
@property(nonatomic) double travelTimeSubviewHeightInPoints; // @synthesize travelTimeSubviewHeightInPoints=_travelTimeSubviewHeightInPoints;
@property(nonatomic) _Bool isSelectedCopyView; // @synthesize isSelectedCopyView=_isSelectedCopyView;
@property(nonatomic) struct UIEdgeInsets margin; // @synthesize margin=_margin;
@property(nonatomic) _Bool hideText; // @synthesize hideText=_hideText;
@property(nonatomic) _Bool hideBackgroundImage; // @synthesize hideBackgroundImage=_hideBackgroundImage;
@property(nonatomic) _Bool drawsResizeHandles; // @synthesize drawsResizeHandles=_drawsResizeHandles;
@property(nonatomic) _Bool allDayDrawingStyle; // @synthesize allDayDrawingStyle=_allDayDrawingStyle;
@property(nonatomic) _Bool dimmed; // @synthesize dimmed=_dimmed;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) EKEvent *occurrence; // @synthesize occurrence=_occurrence;
@property(nonatomic) __weak EKDayOccurrenceView *selectedCopy; // @synthesize selectedCopy=_selectedCopy;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setHideText:(_Bool)arg1 animate:(_Bool)arg2;
- (void)_resetContentViewPosition;
- (_Bool)_isTimedOccurrenceDrawingStyle;
- (_Bool)resetContentViewToOriginalState:(_Bool)arg1;
- (void)fadeInContentViewAt:(double)arg1 minWidth:(double)arg2 animated:(_Bool)arg3;
- (double)_verticalContentInset;
- (double)enoughHeightForOneLine;
- (double)viewMaxNaturalTextHeight;
- (double)unconstrainedWidth;
- (void)bringResizeHandlesToFront;
- (id)arrayOfResizeHandles;
- (int)dragTypeFromPoint:(struct CGPoint)arg1;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)pointInside:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)invalidateTravelTimeHeight;
- (struct CGRect)_frameMutatedForProximityToHourLine:(struct CGRect)arg1;
- (id)_timedEventBackgroundColor;
- (id)_backgroundColor;
- (struct CGRect)_computeTravelTimeContentRect;
- (struct CGRect)_computeContentRect;
- (id)_newResizeHandleView;
- (void)animateToFrame:(struct CGRect)arg1 isAllDay:(_Bool)arg2 beginFromCurrentState:(_Bool)arg3 whenFinished:(CDUnknownBlockType)arg4;
- (void)setFrame:(struct CGRect)arg1;
- (void)_updateResizeHandleLocations;
- (void)setVisibleHeight:(double)arg1;
@property(readonly, nonatomic) _Bool visibleHeightLocked;
- (void)setHidden:(_Bool)arg1;
- (void)didMoveToSuperview;
- (void)removeFromSuperview;
- (void)_updateColors;
- (void)setAllDayDrawingStyle:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)hasIcon;
@property(nonatomic, getter=isFacebook) _Bool facebook;
@property(nonatomic, getter=isBirthday) _Bool birthday;
@property(nonatomic, getter=isCancelled) _Bool cancelled;
- (void)_invalidateContentBounds;
@property(nonatomic) long long routingMode;
@property(copy, nonatomic) NSString *location;
- (id)time;
- (void)setTime:(id)arg1;
@property(copy, nonatomic) NSString *title;
@property(retain, nonatomic) UIColor *textBackgroundColor;
@property(retain, nonatomic) UIColor *secondaryTextColor;
@property(retain, nonatomic) UIColor *timeTextColor;
@property(retain, nonatomic) UIColor *titleTextColor;
@property(nonatomic) struct UIEdgeInsets padding;
- (void)_removeTravelTimeSubviews;
- (void)_addTravelTimeSubviews;
@property(nonatomic) _Bool usesSmallText;
- (void)prepareForReuse;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayPreviewController : UIViewController <EKDayViewDataSource, EKEditItemViewControllerProtocol>
{
    EKDayView *_dayView;
    NSDate *_date;
    EKEvent *_event;
    NSDate *_originalEventStartDate;
    NSDate *_originalEventEndDate;
    _Bool _hasOverriddenEventDates;
    NSDate *_overriddenEventStartDate;
    NSDate *_overriddenEventEndDate;
}

- (void).cxx_destruct;
- (struct CGSize)preferredContentSize;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_eventsForStartDate:(id)arg1 endDate:(id)arg2;
- (id)dayView:(id)arg1 eventsForStartDate:(id)arg2 endDate:(id)arg3;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithDate:(id)arg1 event:(id)arg2 overriddenEventStartDate:(id)arg3 overriddenEventEndDate:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) __weak id <EKEditItemViewControllerDelegate> editDelegate;
@property(nonatomic) _Bool editItemShouldBeAskedForInjectableViewController;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool presentModally;
@property(readonly) Class superclass;

@end

@interface EKDayTimeContentView : UIView
{
    EKDayTimeView *_owner;
    struct _NSRange _hourRange;
}

@property(nonatomic) struct _NSRange hourRange; // @synthesize hourRange=_hourRange;
@property(nonatomic) EKDayTimeView *owner; // @synthesize owner=_owner;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface EKDayTimeView : UIView <EKCurrentTimeMarkerViewUpdating>
{
    NSMutableArray *_contentViews;
    unsigned int _leftBorder:1;
    unsigned int _rightBorder:1;
    double _highlightedHour;
    long long _orientation;
    double _hourSize;
    double _designatorSize;
    EKCurrentTimeMarkerView *_timeMarker;
    UIView *_timeMarkerExtension;
    double _timeWidth;
    _Bool _showsTimeMarker;
    _Bool _showsTimeMarkerExtension;
    _Bool _usesLightText;
    UIColor *_timeColor;
    double _hoursToPad;
    double _hourHeightScale;
    double _hourHeight;
    id <EKDayTimeViewDelegate> _delegate;
    struct _NSRange _hoursToRender;
}

+ (id)allDayLabelBoldFont;
+ (id)allDayLabelFont;
+ (id)unscaledAllDayLabelFont;
+ (double)defaultHourScale;
+ (double)defaultHeightForOrientation:(long long)arg1 withHourScale:(double)arg2;
+ (double)defaultHeightForOrientation:(long long)arg1;
+ (double)designatorSizeForOrientation:(long long)arg1;
+ (double)hourSizeForOrientation:(long long)arg1;
+ (double)hourHeightForOrientation:(long long)arg1;
+ (double)timeWidthForOrientation:(long long)arg1;
+ (double)timeVerticalInsetForOrientation:(long long)arg1;
+ (double)timeInsetForOrientation:(long long)arg1;
+ (void)setVerticalPadding:(double)arg1;
+ (double)verticalPadding;
+ (double)_hourWidthForOrientation:(long long)arg1;
+ (void)_calculateWidthForOrientation:(long long)arg1;
+ (id)_boldFontForOrientation:(long long)arg1;
+ (id)_normalFontForOrientation:(long long)arg1;
+ (double)_dynamicFontSizeForOrientation:(long long)arg1;
+ (void)_invalidateWidth;
+ (void)_registerForInvalidation;
+ (void)_invalidateCachedValues;
@property(nonatomic) __weak id <EKDayTimeViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) double hourHeight; // @synthesize hourHeight=_hourHeight;
@property(nonatomic) double hourHeightScale; // @synthesize hourHeightScale=_hourHeightScale;
@property(nonatomic) struct _NSRange hoursToRender; // @synthesize hoursToRender=_hoursToRender;
@property(nonatomic) double hoursToPad; // @synthesize hoursToPad=_hoursToPad;
@property(nonatomic) _Bool usesLightText; // @synthesize usesLightText=_usesLightText;
@property(nonatomic) _Bool showsTimeMarkerExtension; // @synthesize showsTimeMarkerExtension=_showsTimeMarkerExtension;
@property(nonatomic) _Bool showsTimeMarker; // @synthesize showsTimeMarker=_showsTimeMarker;
- (void).cxx_destruct;
- (void)tintColorDidChange;
- (double)_positionOfSecond:(int)arg1;
- (void)layoutSubviews;
- (void)updateMarkerPosition;
- (void)drawRect:(struct CGRect)arg1 forContentView:(id)arg2 withHourRange:(struct _NSRange)arg3;
- (void)setFrame:(struct CGRect)arg1;
- (void)layoutFrames;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setOrientation:(long long)arg1;
@property(readonly, nonatomic) EKCurrentTimeMarkerView *timeMarker;
@property(retain, nonatomic) UIColor *timeColor; // @synthesize timeColor=_timeColor;
@property(nonatomic) double highlightedHour;
@property(nonatomic) _Bool showsRightBorder;
@property(nonatomic) _Bool showsLeftBorder;
- (void)setOpaque:(_Bool)arg1;
- (double)scaledHourHeight;
- (double)_timeWidth;
- (void)_invalidateTimeWidth;
- (double)topPadding;
- (void)_fontSizeChanged;
- (void)_localeChanged;
- (void)setNeedsDisplay;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
@property(readonly, nonatomic) double defaultHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayView : UIView <UIScrollViewDelegate, EKDayAllDayViewDelegate, EKDayViewContentDelegate, EKDayTimeViewDelegate>
{
    long long _orientation;
    double _dayStart;
    double _dayEnd;
    double _nextDSTTransition;
    _Bool _scrollbarShowsInside;
    _Bool _scrollingToOccurrence;
    _Bool _settingDate;
    _Bool _userScrolling;
    _Bool _scrollToOccurrencesOnNextReload;
    UIImageView *_topVerticalGridExtension;
    UIImageView *_bottomVerticalGridExtension;
    UIView *_bottomLine;
    NSArray *_existingTimedOcurrences;
    NSDate *_lastInspectedOccurrenceOnDate;
    struct CGSize _scrolledToFirstVisibleSecondForSize;
    EKDayAllDayView *_allDayView;
    EKDayViewContent *_dayContent;
    EKDayTimeView *_timeView;
    EKDayViewSpringLoadedScrollAnimation *_scrollAnimation;
    UIScrollView *_scroller;
    NSTimer *_timeMarkerTimer;
    struct CGPoint _lastPinchDistance;
    struct CGPoint _lastPinchPoint1;
    _Bool _pinching;
    UIPinchGestureRecognizer *_pinchGestureRecognizer;
    UITapGestureRecognizer *_doubleTapGestureRecognizer;
    _Bool _allowsOccurrenceSelection;
    _Bool _alignsMidnightToTop;
    _Bool _shouldEverShowTimeIndicators;
    _Bool _usesVibrantGridDrawing;
    _Bool _allowPinchingHourHeights;
    int _outlineStyle;
    id <EKDayViewDelegate> _delegate;
    id <EKDayViewDataSource> _dataSource;
    NSDateComponents *_displayDate;
    NSCalendar *_calendar;
    double _hourScale;
}

@property(nonatomic) double hourScale; // @synthesize hourScale=_hourScale;
@property(nonatomic) _Bool allowPinchingHourHeights; // @synthesize allowPinchingHourHeights=_allowPinchingHourHeights;
@property(nonatomic) _Bool usesVibrantGridDrawing; // @synthesize usesVibrantGridDrawing=_usesVibrantGridDrawing;
@property(nonatomic) int outlineStyle; // @synthesize outlineStyle=_outlineStyle;
@property(nonatomic) _Bool shouldEverShowTimeIndicators; // @synthesize shouldEverShowTimeIndicators=_shouldEverShowTimeIndicators;
@property(nonatomic) _Bool alignsMidnightToTop; // @synthesize alignsMidnightToTop=_alignsMidnightToTop;
@property(nonatomic) _Bool allowsOccurrenceSelection; // @synthesize allowsOccurrenceSelection=_allowsOccurrenceSelection;
@property(readonly, nonatomic) double dayEnd; // @synthesize dayEnd=_dayEnd;
@property(readonly, nonatomic) double dayStart; // @synthesize dayStart=_dayStart;
@property(copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(copy, nonatomic) NSDateComponents *displayDate; // @synthesize displayDate=_displayDate;
@property(nonatomic) __weak id <EKDayViewDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <EKDayViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)configureOccurrenceViewForGestureController:(id)arg1;
- (void)addViewToScroller:(id)arg1 isAllDay:(_Bool)arg2;
- (_Bool)isAllDayLabelHighlighted;
- (void)setAllDayLabelHighlighted:(_Bool)arg1;
- (double)highlightedHour;
- (void)highlightHour:(double)arg1;
- (double)allDayRegionHeight;
- (_Bool)scrollTowardPoint:(struct CGPoint)arg1;
- (struct CGPoint)pointAtDate:(double)arg1 isAllDay:(_Bool)arg2;
- (double)_adjustSecondBackwardForDSTHole:(double)arg1;
- (double)_adjustSecondForwardForDSTHole:(double)arg1;
- (double)dateAtPoint:(struct CGPoint)arg1 isAllDay:(_Bool *)arg2 requireAllDayRegionInsistence:(_Bool)arg3;
- (_Bool)_showingAllDaySection;
- (double)dateAtPoint:(struct CGPoint)arg1 isAllDay:(_Bool *)arg2;
- (id)occurrenceViewAtPoint:(struct CGPoint)arg1;
- (void)_dayViewPinched:(id)arg1;
- (double)maximumHourScale;
- (double)minimumHourScale;
- (struct CGPoint)_pinchDistanceForGestureRecognizer:(id)arg1;
- (void)_doubleTap:(id)arg1;
- (void)_timeViewTapped:(id)arg1;
- (void)dayViewContent:(id)arg1 didTapPinnedOccurrence:(id)arg2;
- (void)dayViewContent:(id)arg1 didTapInEmptySpaceOnDay:(double)arg2;
- (void)dayViewContent:(id)arg1 didSelectEvent:(id)arg2;
- (void)dayViewContent:(id)arg1 didCreateOccurrenceViews:(id)arg2;
- (void)occurrencePressed:(id)arg1 onDay:(double)arg2;
- (void)allDayViewDidLayoutSubviews:(id)arg1;
- (void)allDayView:(id)arg1 didSelectEvent:(id)arg2;
- (void)reloadData;
- (void)relayoutExistingTimedOccurrences;
- (void)setScrollerYInset:(double)arg1 keepingYPointVisible:(double)arg2;
- (void)scrollEventsIntoViewAnimated:(_Bool)arg1;
- (void)_disposeAllDayView;
- (void)_createAllDayView;
- (void)_updateContentForSizeCategoryChange:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)firstVisibleSecondChanged;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)_notifyDelegateOfFinishedScrollingToOccurrence;
- (_Bool)containsOccurrences;
@property(retain, nonatomic) EKEvent *dimmedOccurrence;
- (id)selectedEvent;
- (void)selectEvent:(id)arg1;
- (struct CGRect)rectForEvent:(id)arg1;
- (double)yPositionPerhapsMatchingAllDayOccurrence:(id)arg1;
- (id)occurrenceViewForEvent:(id)arg1;
- (_Bool)eventOccursOnThisDay:(id)arg1;
- (void)resetLastSelectedOccurrencePoint;
- (id)_generateVerticalGridExtensionImage;
- (void)_clearVerticalGridExtensionImageCache;
- (struct CGRect)_scrollerRect;
- (int)_secondAtPosition:(double)arg1;
- (double)_positionOfSecond:(int)arg1;
@property(readonly, nonatomic) double leftContentInset;
@property(readonly, nonatomic) double scrollBarOffset;
- (double)_verticalOffset;
- (void)insertViewForEvent:(id)arg1 belowViewForOtherEvent:(id)arg2;
- (void)bringEventToFront:(id)arg1;
@property(readonly, nonatomic) NSArray *occurrenceViews;
- (void)dayAllDayView:(id)arg1 occurrenceViewClicked:(id)arg2;
- (void)dayContentView:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)dayOccurrenceViewClicked:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)scrollToDate:(id)arg1 animated:(_Bool)arg2 whenFinished:(CDUnknownBlockType)arg3;
- (void)_finishedScrollToSecond;
- (void)_scrollToSecond:(int)arg1 animated:(_Bool)arg2 whenFinished:(CDUnknownBlockType)arg3;
- (void)scrollToEvent:(id)arg1 animated:(_Bool)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(nonatomic) struct CGPoint normalizedContentOffset;
@property(readonly, nonatomic) double scrollOffset;
@property(readonly, nonatomic) EKDayAllDayView *allDayView;
@property(nonatomic) int occurrenceBackgroundStyle;
@property(retain, nonatomic) UIColor *occurrenceTextBackgroundColor;
@property(retain, nonatomic) UIColor *occurrenceLocationColor;
@property(retain, nonatomic) UIColor *occurrenceTimeColor;
@property(retain, nonatomic) UIColor *occurrenceTitleColor;
@property(retain, nonatomic) UIColor *gridLineColor;
@property(nonatomic) struct _NSRange hoursToRender;
@property(retain, nonatomic) UIColor *timeViewTextColor;
@property(nonatomic) _Bool allowsScrolling;
@property(nonatomic) int firstVisibleSecond;
@property(nonatomic) _Bool showsLeftBorder;
@property(nonatomic) _Bool eventsFillGrid;
@property(nonatomic) _Bool showsTimeLine;
- (struct CGRect)currentTimeRectInView:(id)arg1;
@property(nonatomic) _Bool showsTimeMarker;
@property(nonatomic) _Bool animatesTimeMarker;
@property(nonatomic) _Bool showsTimeLabel;
- (void)adjustForSignificantTimeChange;
- (void)setOrientation:(long long)arg1;
- (void)setTimeZone:(id)arg1;
- (void)updateMarkerPosition;
- (void)_invalidateMarkerTimer;
- (void)_startMarkerTimer;
- (void)_adjustForDateOrCalendarChange;
- (void)_stopScrolling;
- (void)adjustFrameToSpanToMidnightFromStartDate:(id)arg1;
- (void)dealloc;
- (void)layoutSubviews;
- (void)removeFromSuperview;
- (void)willMoveToSuperview:(id)arg1;
- (void)_localeChanged;
@property(readonly, copy) NSString *description;
- (id)initWithFrame:(struct CGRect)arg1 orientation:(long long)arg2 displayDate:(id)arg3 backgroundColor:(id)arg4 opaque:(_Bool)arg5 scrollbarShowsInside:(_Bool)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayViewContent : UIView <CUIKSingleDayTimelineLayoutScreenUtils, UIGestureRecognizerDelegate>
{
    EKDayGridView *_grid;
    UIView *_saturdayDarkeningView;
    UIView *_sundayDarkeningView;
    unsigned long long _daysToDisplay;
    _Bool *_dayWasLaidOut;
    _Bool _loadingOccurrences;
    _Bool _putSelectionOnTop;
    _Bool _hasCustomOccurrenceMargin;
    _Bool _hasCustomOccurrencePadding;
    EKEvent *_selectedEvent;
    NSMutableArray *_dayStarts;
    NSMutableArray *_itemsByDay;
    NSMutableArray *_itemsByDayByEndDate;
    struct CGRect _latestVisibleRect;
    double *_visiblePinnedStackHeightAbove;
    double *_visiblePinnedStackHeightBelow;
    EKDayViewContentGeometryDelegate *_geometryDelegate;
    _Bool _allowsOccurrenceSelection;
    _Bool _eventsFillGrid;
    _Bool _usesSmallText;
    _Bool _darkensWeekends;
    _Bool _reduceLayoutProcessingForAnimation;
    int _occurrenceBackgroundStyle;
    EKCalendarDate *_startDate;
    EKCalendarDate *_endDate;
    NSCalendar *_calendar;
    id <EKDayViewContentDelegate> _delegate;
    double _fixedDayWidth;
    UIColor *_occurrenceTitleColor;
    UIColor *_occurrenceTimeColor;
    UIColor *_occurrenceLocationColor;
    UIColor *_occurrenceTextBackgroundColor;
    EKEvent *_dimmedOccurrence;
    struct UIEdgeInsets _occurrenceMargin;
    struct UIEdgeInsets _occurrencePadding;
}

@property(retain, nonatomic) EKEvent *dimmedOccurrence; // @synthesize dimmedOccurrence=_dimmedOccurrence;
@property(nonatomic) struct UIEdgeInsets occurrencePadding; // @synthesize occurrencePadding=_occurrencePadding;
@property(nonatomic) struct UIEdgeInsets occurrenceMargin; // @synthesize occurrenceMargin=_occurrenceMargin;
@property(nonatomic) int occurrenceBackgroundStyle; // @synthesize occurrenceBackgroundStyle=_occurrenceBackgroundStyle;
@property(retain, nonatomic) UIColor *occurrenceTextBackgroundColor; // @synthesize occurrenceTextBackgroundColor=_occurrenceTextBackgroundColor;
@property(retain, nonatomic) UIColor *occurrenceLocationColor; // @synthesize occurrenceLocationColor=_occurrenceLocationColor;
@property(retain, nonatomic) UIColor *occurrenceTimeColor; // @synthesize occurrenceTimeColor=_occurrenceTimeColor;
@property(retain, nonatomic) UIColor *occurrenceTitleColor; // @synthesize occurrenceTitleColor=_occurrenceTitleColor;
@property(nonatomic) double fixedDayWidth; // @synthesize fixedDayWidth=_fixedDayWidth;
@property(nonatomic) _Bool reduceLayoutProcessingForAnimation; // @synthesize reduceLayoutProcessingForAnimation=_reduceLayoutProcessingForAnimation;
@property(nonatomic) _Bool darkensWeekends; // @synthesize darkensWeekends=_darkensWeekends;
@property(nonatomic) _Bool usesSmallText; // @synthesize usesSmallText=_usesSmallText;
@property(nonatomic) _Bool eventsFillGrid; // @synthesize eventsFillGrid=_eventsFillGrid;
@property(nonatomic) _Bool allowsOccurrenceSelection; // @synthesize allowsOccurrenceSelection=_allowsOccurrenceSelection;
@property(nonatomic) __weak id <EKDayViewContentDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(readonly, nonatomic) EKCalendarDate *endDate; // @synthesize endDate=_endDate;
@property(copy, nonatomic) EKCalendarDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (double)RoundToScreenScale:(double)arg1;
- (double)RoundToScreenScaleForFloat:(double)arg1;
- (struct CGRect)RoundRectToScreenScaleForRect:(struct CGRect)arg1;
- (void)_tapRecognized:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)_getBottomPinRegion:(double *)arg1 dayIndex:(unsigned long long *)arg2 forPoint:(struct CGPoint)arg3;
- (_Bool)eventsIntersectRect:(struct CGRect)arg1;
- (void)_adjustViewsForPinning;
- (_Bool)_doOffscreenOccurrences;
- (void)setOccurrences:(id)arg1;
- (void)_configureOccurrenceViewMarginAndPadding:(id)arg1;
- (void)configureOccurrenceViewForGestureController:(id)arg1;
- (id)lastDisplayedSecond;
- (id)_dayStarts;
@property(readonly, nonatomic) double firstEventSecond;
- (struct _NSRange)_dayRangeForEvent:(id)arg1;
- (struct _NSRange)_dayRangeForEventWithStartDate:(id)arg1 endDate:(id)arg2;
- (void)_layoutDay:(unsigned long long)arg1;
- (void)_layoutDaysIfVisible;
- (void)layoutSubviews;
- (void)setNeedsLayout;
- (double)dateForPoint:(struct CGPoint)arg1;
- (double)_dayWidth;
- (id)occurrenceViewForEvent:(id)arg1;
- (id)occurrenceViewForEvent:(id)arg1 onDate:(double)arg2;
- (struct CGPoint)pointForDate:(double)arg1;
- (void)setViewsDimmed:(_Bool)arg1 forEvent:(id)arg2;
- (id)grid;
- (void)dayOccurrenceViewClicked:(id)arg1 atPoint:(struct CGPoint)arg2;
- (id)occurrenceViews;
- (void)rectBecameVisible:(struct CGRect)arg1;
- (void)setStartDateWithDateComponents:(id)arg1;
@property(copy, nonatomic) NSTimeZone *timeZone;
- (void)_computeDayStartsAndEnds;
- (void)setHoursToPadTop:(double)arg1;
@property(nonatomic) _Bool showsLeftBorder;
@property(retain, nonatomic, setter=selectEvent:) EKEvent *selectedEvent;
- (_Bool)containsEvent:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)setOrientation:(long long)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 orientation:(long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1 orientation:(long long)arg2 backgroundColor:(id)arg3 opaque:(_Bool)arg4 numberOfDaysToDisplay:(unsigned long long)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayViewContentGeometryDelegate : NSObject <CUIKSingleDayTimelineGeometryDelegate>
{
    EKDayViewContent *_dayViewContent;
    struct CGRect _frame;
}

@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
@property(nonatomic) __weak EKDayViewContent *dayViewContent; // @synthesize dayViewContent=_dayViewContent;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct CGRect displayedRect;
@property(readonly, nonatomic) _Bool originIsUpperLeft;
- (struct CGPoint)pointForDate:(double)arg1;
- (double)dateForPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic) double timeWidth;
@property(readonly, nonatomic) double topPadding;
@property(readonly, nonatomic) double hourHeight;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayViewContentItem : NSObject <CUIKSingleDayTimelineViewItem>
{
    struct CGRect _unPinnedViewFrame;
    unsigned long long _eventIndex;
    EKDayOccurrenceView *_view;
    EKCalendarDate *_startDate;
    EKCalendarDate *_endDate;
    double _travelTime;
    double _topPinningProximity;
    double _bottomPinningProximity;
}

+ (double)barToBarHorizontalDistanceIncludingBarWidth;
@property(nonatomic) double bottomPinningProximity; // @synthesize bottomPinningProximity=_bottomPinningProximity;
@property(nonatomic) double topPinningProximity; // @synthesize topPinningProximity=_topPinningProximity;
@property(nonatomic) double travelTime; // @synthesize travelTime=_travelTime;
@property(copy, nonatomic) EKCalendarDate *endDate; // @synthesize endDate=_endDate;
@property(copy, nonatomic) EKCalendarDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) EKDayOccurrenceView *view; // @synthesize view=_view;
@property(readonly, nonatomic) unsigned long long eventIndex; // @synthesize eventIndex=_eventIndex;
- (void).cxx_destruct;
- (void)setTravelTimeHeight:(double)arg1;
- (void)setVisibleHeight:(double)arg1;
@property(readonly) _Bool visibleHeightLocked;
@property struct CGRect unPinnedViewFrame;
- (void)setStagedFrame:(struct CGRect)arg1;
- (struct CGRect)stagedFrame;
@property(readonly, nonatomic) _Bool hideTravelTime;
@property(readonly, nonatomic) EKEvent *event;
@property(readonly, nonatomic) double viewMaxNaturalTextHeight;
@property(readonly, nonatomic) double enoughHeightForOneLine;
@property(readonly, nonatomic) NSDate *end;
@property(readonly, nonatomic) NSDate *start;
@property(readonly, nonatomic) NSDate *startWithTravelTime;
- (_Bool)isPinned;
@property(readonly, copy, nonatomic) EKCalendarDate *startDateIncludingTravelTime;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
- (id)initWithEventIndex:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayViewController : UIViewController <BlockableScrollViewDelegate, EKDayViewDataSource, EKDayViewDelegate, EKEventGestureControllerDelegate, UIScrollViewDelegate>
{
    UIView *_clipView;
    UIScrollView *_horizontalScrollingView;
    EKDayView *_previousDay;
    EKDayView *_currentDay;
    EKDayView *_nextDay;
    EKDayViewWithGutters *_previousDayWithGutter;
    EKDayViewWithGutters *_currentDayWithGutter;
    EKDayViewWithGutters *_nextDayWithGutter;
    unsigned int _scrollViewAnimating:1;
    unsigned int _hasPendingNextDate:1;
    NSDateComponents *_pendingNextDate;
    unsigned int _hasPendingPreviousDate:1;
    NSDateComponents *_pendingPreviousDate;
    unsigned int _decelerating:1;
    unsigned int _settingDateFromScrolling:1;
    CalendarOccurrencesCollection *_occurrences;
    CalendarOccurrencesCollection *_previousDayOccurrences;
    CalendarOccurrencesCollection *_nextDayOccurrences;
    EKEventGestureController *_eventGestureController;
    ScrollSpringFactory *_decelerationSpringFactory;
    NSDateComponents *_originalDisplayDate;
    double _dayStart;
    double _dayEnd;
    _Bool _initialLoad;
    _Bool _instigatedDateChange;
    _Bool _viewAppeared;
    _Bool _resizing;
    _Bool _adjustingForDeceleration;
    _Bool _fingerDown;
    _Bool _correctAfterScroll;
    int _parallaxState;
    NSDateComponents *_targetDateComponents;
    _Bool _needToCompleteScrollingAnimation;
    _Bool _needToCompleteDeceleration;
    _Bool _showsBanner;
    _Bool _allowsDaySwitching;
    _Bool _allowsSelection;
    _Bool _shouldAutoscrollOnNextActivation;
    _Bool _alwaysAnimate;
    _Bool _disableGestureDayChange;
    _Bool _disableNotifyDateChangeDuringTracking;
    _Bool _animateAllDayAreaHeight;
    _Bool _shouldAutoscrollAfterAppearance;
    _Bool _notifyWhenTapOtherEventDuringDragging;
    id <EKDayViewControllerDelegate> _delegate;
    id <EKDayViewControllerDataSource> _dataSource;
    NSDateComponents *_displayDate;
    NSCalendar *_calendar;
    double _gutterWidth;
    UIView *_gestureOccurrenceSuperview;
    EKEventEditViewController *_currentEditor;
    struct CGPoint _normalizedContentOffset;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(copy, nonatomic) NSDateComponents *pendingPreviousDate; // @synthesize pendingPreviousDate=_pendingPreviousDate;
@property(copy, nonatomic) NSDateComponents *pendingNextDate; // @synthesize pendingNextDate=_pendingNextDate;
@property(nonatomic) struct CGPoint normalizedContentOffset; // @synthesize normalizedContentOffset=_normalizedContentOffset;
@property(retain, nonatomic) EKEventEditViewController *currentEditor; // @synthesize currentEditor=_currentEditor;
@property(retain, nonatomic) UIView *gestureOccurrenceSuperview; // @synthesize gestureOccurrenceSuperview=_gestureOccurrenceSuperview;
@property(nonatomic) double gutterWidth; // @synthesize gutterWidth=_gutterWidth;
@property(nonatomic) _Bool notifyWhenTapOtherEventDuringDragging; // @synthesize notifyWhenTapOtherEventDuringDragging=_notifyWhenTapOtherEventDuringDragging;
@property(nonatomic) _Bool shouldAutoscrollAfterAppearance; // @synthesize shouldAutoscrollAfterAppearance=_shouldAutoscrollAfterAppearance;
@property(nonatomic) _Bool animateAllDayAreaHeight; // @synthesize animateAllDayAreaHeight=_animateAllDayAreaHeight;
@property(nonatomic) _Bool disableNotifyDateChangeDuringTracking; // @synthesize disableNotifyDateChangeDuringTracking=_disableNotifyDateChangeDuringTracking;
@property(nonatomic) _Bool disableGestureDayChange; // @synthesize disableGestureDayChange=_disableGestureDayChange;
@property(nonatomic) _Bool alwaysAnimate; // @synthesize alwaysAnimate=_alwaysAnimate;
@property(nonatomic) _Bool shouldAutoscrollOnNextActivation; // @synthesize shouldAutoscrollOnNextActivation=_shouldAutoscrollOnNextActivation;
@property(nonatomic) _Bool allowsSelection; // @synthesize allowsSelection=_allowsSelection;
@property(nonatomic) _Bool allowsDaySwitching; // @synthesize allowsDaySwitching=_allowsDaySwitching;
@property(nonatomic) _Bool showsBanner; // @synthesize showsBanner=_showsBanner;
@property(copy, nonatomic) NSCalendar *calendar; // @synthesize calendar=_calendar;
@property(copy, nonatomic) NSDateComponents *displayDate; // @synthesize displayDate=_displayDate;
@property(nonatomic) __weak id <EKDayViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <EKDayViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_completeScrollingAnimationIfNeeded;
- (void)_setHorizontalContentOffsetUsingSpringAnimation:(struct CGPoint)arg1;
- (void)endExternallyControlledScrolling;
- (void)setToDay:(id)arg1 normalizedOffset:(double)arg2;
- (void)beginExternallyControlledScrolling;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (_Bool)blockableScrollViewShouldAllowScrolling;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)_endParallaxStateIfNeeded;
- (void)_beginParallaxStateIfPossible;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)_cleanUpTargetDateComponents;
- (void)_scrollViewDidEndDecelerating:(id)arg1 notifyParallxState:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)_completeDecelerationIfNeeded;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (double)_weightedAllDayHeightForView:(id)arg1 visibleRect:(struct CGRect)arg2;
- (void)_updateAllDayAreaHeight;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)_isViewInVisibleRect:(id)arg1;
- (void)_setDayView:(id)arg1 toDate:(id)arg2;
- (void)_relayoutDaysDuringScrollingAndPerformDayChanges:(_Bool)arg1;
- (void)_relayoutDaysDuringScrolling;
- (void)_notifyDelegateOfSelectedDateChange;
- (void)_relayoutDays;
- (_Bool)eventEditorPopoverActiveWhileDraggingForEventGestureController:(id)arg1;
- (void)externallyEndedGestureDragging;
- (_Bool)didScrollWhenEventGestureController:(id)arg1 scrollTimerFiredToMoveLeft:(_Bool)arg2 right:(_Bool)arg3 vertically:(_Bool)arg4 towardPoint:(struct CGPoint)arg5;
- (void)eventGestureController:(id)arg1 didSingleTapOccurrence:(id)arg2;
- (void)eventGestureController:(id)arg1 didCancelEditingOccurrence:(id)arg2 fadedOut:(_Bool)arg3;
- (_Bool)eventGestureController:(id)arg1 didCommitOccurrence:(id)arg2 toDate:(double)arg3 isAllDay:(_Bool)arg4 span:(int)arg5;
- (void)eventGestureController:(id)arg1 didMoveToDate:(double)arg2 isAllDay:(_Bool)arg3;
- (void)eventGestureController:(id)arg1 didSetUpAtDate:(double)arg2 isAllDay:(_Bool)arg3;
- (_Bool)eventGestureControllerShouldAllowLongPress:(id)arg1;
- (double)timedRegionOriginForEventGestureController:(id)arg1;
- (double)eventGestureController:(id)arg1 heightForOccurrenceViewOfDuration:(double)arg2 allDay:(_Bool)arg3;
- (double)eventGestureController:(id)arg1 widthForOccurrenceViewOfDays:(unsigned long long)arg2;
- (struct CGPoint)eventGestureController:(id)arg1 pointAtDate:(double)arg2 isAllDay:(_Bool)arg3;
- (double)eventGestureController:(id)arg1 dateAtPoint:(struct CGPoint)arg2;
- (_Bool)eventGestureController:(id)arg1 isAllDayAtPoint:(struct CGPoint)arg2 requireInsistence:(_Bool)arg3;
- (id)eventGestureController:(id)arg1 occurrenceViewForOccurrence:(id)arg2;
- (id)eventGestureController:(id)arg1 occurrenceViewAtPoint:(struct CGPoint)arg2;
- (void)eventGestureController:(id)arg1 addViewToScroller:(id)arg2 isAllDay:(_Bool)arg3;
- (double)eventGestureController:(id)arg1 yPositionPerhapsMatchingAllDayOccurrence:(id)arg2 atPoint:(struct CGPoint)arg3;
- (id)createEventForEventGestureController:(id)arg1;
- (void)eventGestureController:(id)arg1 adjustDraggingViewForAllDay:(_Bool)arg2;
- (id)createOccurrenceViewForEventGestureController:(id)arg1;
- (double)horizontalOffsetForPagingForEventGestureController:(id)arg1;
- (id)occurrenceViewSuperviewForEventGestureController:(id)arg1;
- (id)touchTrackingViewForEventGestureController:(id)arg1;
- (id)_eventGestureSuperview;
- (void)dayViewDidTapEmptySpace:(id)arg1;
- (void)_highlightDayViewDate:(double)arg1 isAllDay:(_Bool)arg2;
- (id)_createGutterDayViewWithDayView:(id)arg1;
- (void)_showWeekNumbersPreferenceChanged:(id)arg1;
- (void)_localeChanged:(id)arg1;
- (id)dayView:(id)arg1 eventsForStartDate:(id)arg2 endDate:(id)arg3;
- (id)_occurrencesForDayView:(id)arg1;
- (void)dayView:(id)arg1 didUpdateScrollPosition:(struct CGPoint)arg2;
- (void)significantTimeChangeOccurred;
- (void)reloadDataBetweenStart:(id)arg1 end:(id)arg2;
- (void)reloadData;
- (id)_eventsForDay:(id)arg1;
- (id)eventsForStartDate:(id)arg1 endDate:(id)arg2;
- (void)editorDidCancelEditingEvent:(id)arg1;
- (void)editorDidDeleteEvent:(id)arg1;
- (void)editorDidSaveEvent:(id)arg1;
- (void)insertViewForEvent:(id)arg1 belowViewForOtherEvent:(id)arg2;
- (void)bringEventToFront:(id)arg1;
- (void)scrollEventsIntoViewAnimated:(_Bool)arg1;
- (void)scrollEventIntoView:(id)arg1 animated:(_Bool)arg2;
- (void)scrollToNow:(_Bool)arg1;
- (void)setTimeZone:(id)arg1;
- (void)_setDisplayDate:(id)arg1 forRepeat:(_Bool)arg2 animate:(_Bool)arg3;
- (void)_setDisplayDate:(id)arg1 forRepeat:(_Bool)arg2;
- (void)dayView:(id)arg1 firstVisibleSecondChanged:(unsigned long long)arg2;
- (void)_setNextAndPreviousFirstVisibleSecondToCurrent;
- (void)_setDisplayDateInternal:(id)arg1;
- (void)dayView:(id)arg1 isPinchingDayViewWithScale:(double)arg2;
- (void)dayView:(id)arg1 didScaleDayViewWithScale:(double)arg2;
- (void)dayView:(id)arg1 didCreateOccurrenceViews:(id)arg2;
- (void)dayView:(id)arg1 didSelectEvent:(id)arg2;
- (id)preferredEventToSelectOnDate:(id)arg1;
- (_Bool)_isCalendarDate:(id)arg1 sameDayAsComponents:(id)arg2;
@property(readonly, nonatomic) _Bool currentDayContainsOccurrences;
@property(readonly, nonatomic) UIView *currentAllDayView;
- (id)gestureController;
- (id)occurrenceViewForEvent:(id)arg1 includeNextAndPreviousDays:(_Bool)arg2;
- (id)occurrenceViewForEvent:(id)arg1;
- (void)layoutContainerView:(id)arg1;
- (unsigned long long)firstVisibleSecond;
- (void)setFrame:(struct CGRect)arg1 gutterWidth:(double)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_scrollDayViewAfterAppearenceIfNeeded;
- (void)_scrollDayViewAfterAppearence:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKDayViewItemPath : NSObject <NSCopying>
{
    int _section;
    unsigned long long _index;
}

+ (id)itemPathWithIndex:(unsigned long long)arg1 inSection:(int)arg2;
@property(readonly, nonatomic) unsigned long long index; // @synthesize index=_index;
@property(readonly, nonatomic) int section; // @synthesize section=_section;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithIndex:(unsigned long long)arg1 inSection:(int)arg2;

@end

@interface EKDayViewSpringLoadedScrollAnimation : UIScrollAnimation
{
}

- (float)progressForFraction:(float)arg1;

@end

@interface EKDayViewWithGutters : UIView
{
    EKDayAllDayView *_leftAllDayView;
    EKDayAllDayView *_rightAllDayView;
    UIView *_leftGutter;
    UIView *_rightGutter;
    EKDayView *_dayView;
    double _gutterWidth;
    double _allDayHeight;
}

@property(nonatomic) double allDayHeight; // @synthesize allDayHeight=_allDayHeight;
@property(nonatomic) double gutterWidth; // @synthesize gutterWidth=_gutterWidth;
@property(retain, nonatomic) EKDayView *dayView; // @synthesize dayView=_dayView;
@property(readonly, nonatomic) UIView *rightGutter; // @synthesize rightGutter=_rightGutter;
@property(readonly, nonatomic) UIView *leftGutter; // @synthesize leftGutter=_leftGutter;
- (void).cxx_destruct;
- (id)_createAllDayView;
- (id)initWithFrame:(struct CGRect)arg1 dayView:(id)arg2;

@end

@interface EKDeclinedCalendarItemInfo : EKCalendarInfo
{
}

- (id)icon;
- (id)description;
- (_Bool)isEditable;
- (_Bool)excludeFromSelectAll;
- (void)setSelected:(_Bool)arg1;
- (id)title;
- (id)init;

@end

@interface EKEvent (AttachmentUtils)
- (id)sortedEKAttachmentsDisplayStrings;
@end

@interface EKEvent (AttendeeSorting)
- (_Bool)hasHumanInviteesToDisplay;
- (id)sortedEKParticipantsDisplayStringsIgnoringNonHumans:(id)arg1;
- (id)_commentIconString;
- (id)sortEKParticipantsIgnoringNonHumans:(id)arg1;
- (id)_sortedEKParticipantsForSortingIgnoringNonHumans:(id)arg1;
@end

@interface EKEvent (daySpan)
- (long long)daySpan;
@end

__attribute__((visibility("hidden")))
@interface EKEventDetailItem : NSObject <EKEditItemViewControllerDelegate>
{
    EKEventStore *_store;
    EKEvent *_event;
    UIViewController<EKEditItemViewControllerProtocol> *_viewController;
    EKUIRecurrenceAlertController *_recurrenceAlertController;
    _Bool _allowsEditing;
    _Bool _shouldIndent;
    int _cellPosition;
    id <EKEventDetailItemDelegate> _delegate;
}

@property(retain, nonatomic) UIViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) _Bool shouldIndent; // @synthesize shouldIndent=_shouldIndent;
@property(nonatomic) int cellPosition; // @synthesize cellPosition=_cellPosition;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(nonatomic) __weak id <EKEventDetailItemDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)editItemViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (void)notifySubitemDidCommit:(unsigned long long)arg1;
- (void)notifyDidEndEditing;
- (void)notifyDidStartEditing;
- (void)eventViewController:(id)arg1 didSelectReadOnlySubitem:(unsigned long long)arg2;
- (void)eventViewController:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (void)eventViewController:(id)arg1 didUnhighlightSubitem:(unsigned long long)arg2;
- (void)eventViewController:(id)arg1 didHighlightSubitem:(unsigned long long)arg2;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)hasDetailViewControllerAtIndex:(unsigned long long)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)layoutCellsForWidth:(double)arg1 position:(int)arg2;
- (unsigned long long)numberOfSubitems;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;
- (void)setEvent:(id)arg1 store:(id)arg2;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventAlarmDetailItem : EKEventDetailItem
{
    unsigned long long _disclosedSubitem;
    NSArray *_alarms;
    _Bool _hasLeaveNowAlarm;
    _Bool _canHaveLeaveNowAlarm;
}

- (void).cxx_destruct;
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (unsigned long long)numberOfSubitems;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (_Bool)_alarmsAreCreatable;
- (_Bool)_alarmsAreEditable;
- (void)reset;
- (void)setEvent:(id)arg1 store:(id)arg2;
- (void)_updateAlarms;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttachmentCell : UITableViewCell
{
    UIActivityIndicatorView *_activityIndicator;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)showSpinner:(_Bool)arg1;
- (void)setAttachment:(id)arg1;
- (id)_iconForDocumentProxy:(id)arg1;

@end

@interface EKEventAttachmentCellController : NSObject <UIDocumentInteractionControllerDelegate>
{
    id _downloadID;
    EKEventAttachmentCell *_cell;
    _Bool _sourceIsManaged;
    EKAttachment *_attachment;
    id <EKEventAttachmentCellControllerDelegate> _delegate;
}

+ (id)cellControllersForAttachments:(id)arg1 givenExistingControllers:(id)arg2;
+ (_Bool)_attachmentIsViewable:(id)arg1;
@property(nonatomic) _Bool sourceIsManaged; // @synthesize sourceIsManaged=_sourceIsManaged;
@property(nonatomic) __weak id <EKEventAttachmentCellControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) EKAttachment *attachment; // @synthesize attachment=_attachment;
@property(readonly) EKEventAttachmentCell *cell; // @synthesize cell=_cell;
- (void).cxx_destruct;
- (void)documentInteractionControllerWillEndPreview:(id)arg1;
- (id)documentInteractionControllerViewForPreview:(id)arg1;
- (id)documentInteractionControllerViewControllerForPreview:(id)arg1;
- (void)cellSelected;
- (void)_presentPreviewWithURL:(id)arg1 filename:(id)arg2;
- (void)_presentPreviewOnMainThreadWithInfo:(id)arg1;
- (id)_downloadProgressStringWithDownloadedBytes:(id)arg1 outOfTotalBytes:(id)arg2;
- (void)tearDown;
- (void)_clearDownloadID;
- (id)initWithAttachment:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttachmentDetailItem : EKEventDetailItem <EKEventAttachmentCellControllerDelegate>
{
    NSArray *_cellControllers;
}

- (void).cxx_destruct;
- (id)owningEventForAttachmentCellController:(id)arg1;
- (id)parentViewControllerForAttachmentCellController:(id)arg1;
- (void)eventViewController:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (unsigned long long)numberOfSubitems;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)hasDetailViewControllerAtIndex:(unsigned long long)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)dealloc;
- (void)reset;
- (void)setEvent:(id)arg1 store:(id)arg2;
- (void)_cleanUpCellControllers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttachmentEditViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate, EKEventAttachmentCellControllerDelegate>
{
    UITableView *_table;
    NSArray *_cellControllers;
    id <EKEventAttachmentEditViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <EKEventAttachmentEditViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)owningEventForAttachmentCellController:(id)arg1;
- (id)parentViewControllerForAttachmentCellController:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1 attachments:(id)arg2 sourceIsManaged:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventEditItem : EKCalendarItemEditItem
{
}

- (id)event;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttachmentsEditItem : EKEventEditItem <EKEventAttachmentCellControllerDelegate, EKEventAttachmentEditViewControllerDelegate>
{
    NSArray *_cellControllers;
}

- (void).cxx_destruct;
- (id)owningEventForAttachmentEditViewController:(id)arg1;
- (id)owningEventForAttachmentCellController:(id)arg1;
- (id)parentViewControllerForAttachmentCellController:(id)arg1;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (void)editor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (unsigned long long)numberOfSubitems;
- (_Bool)_shouldCondenseIntoSingleItem;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (void)dealloc;
- (void)refreshFromCalendarItemAndStore;
- (void)_cleanUpCellControllers;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventDetailGroup : NSObject
{
    long long _tag;
    NSArray *_items;
    NSString *_headerTitle;
}

@property(retain, nonatomic) NSString *headerTitle; // @synthesize headerTitle=_headerTitle;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) long long tag; // @synthesize tag=_tag;
- (void).cxx_destruct;
- (id)description;
- (_Bool)hasSubitemForIndexPathRow:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (id)itemAtIndex:(unsigned long long)arg1 subitemIndex:(unsigned long long *)arg2;
- (id)itemAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfRows;
- (id)initWithTag:(long long)arg1 headerTitle:(id)arg2;

@end

@interface EKEventAttendeeDetailGroup : EKEventDetailGroup
{
}

- (id)itemAtIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttendeesDetailItem : EKEventDetailItem
{
    NSMutableDictionary *_attendeesCells;
    EKEventDetailAttendeesCell *_cell;
    int _status;
    NSArray *_attendees;
}

@property(retain, nonatomic) NSArray *attendees; // @synthesize attendees=_attendees;
@property(nonatomic) int status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (unsigned long long)numberOfSubitems;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttendeesEditItem : EKEventEditItem
{
    EKParticipant *_selfOrganizer;
    NSString *_searchAccountID;
    NSOperationQueue *_availabilityQueue;
    long long _numberOfConflicts;
}

- (void).cxx_destruct;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (_Bool)forceRefreshInviteesItemOnCommit;
- (_Bool)forceRefreshStartAndEndDatesOnCommit;
- (_Bool)forceTableReloadOnCommit;
- (id)injectableViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)attendeesWithoutSelfOrganizerAndLocations;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)refreshFromCalendarItemAndStore;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (_Bool)requiresReconfigurationOnCommit;
- (_Bool)configureForCalendarConstraints:(id)arg1;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKEventAttendeesEditViewController : EKEditItemViewController
{
    EKEventAttendeePicker *_picker;
    EKEvent *_event;
    _Bool _cancelTapped;
    _Bool _disableShowingButtons;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) _Bool disableShowingButtons; // @synthesize disableShowingButtons=_disableShowingButtons;
- (void).cxx_destruct;
- (_Bool)editItemShouldBeAskedForInjectableViewController;
- (_Bool)presentModally;
@property(copy, nonatomic) NSArray *attendees;
- (id)_recipientFromAttendee:(id)arg1;
- (id)_attendeeFromRecipient:(id)arg1;
- (_Bool)validateAllowingAlert:(_Bool)arg1;
- (id)_firstInvalidRecipientAddress;
- (void)viewDidLoad;
- (void)setSearchAccountID:(id)arg1;
- (void)_doneTapped:(id)arg1;
- (void)_cancelTapped:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 event:(id)arg2 overriddenEventStartDate:(id)arg3 overriddenEventEndDate:(id)arg4;

@end

__attribute__((visibility("hidden")))
@interface EKEventAvailabilityDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
    int _availability;
    unsigned long long _supportedAvailabilities;
    NSArray *_choices;
    unsigned long long _availabilityIndexInChoices;
}

- (void).cxx_destruct;
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (void)reset;
- (void)setEvent:(id)arg1 store:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKEventAvailabilityEditItem : EKEventEditItem
{
    int _availability;
    unsigned long long _supportedAvailabilities;
    NSArray *_choices;
    unsigned long long _availabilityIndexInChoices;
}

- (void).cxx_destruct;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (void)refreshFromCalendarItemAndStore;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKEventAvailabilityEditViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate>
{
    int _availability;
    unsigned long long _supportedAvailabilities;
    NSMutableArray *_choices;
    UITableView *_table;
}

@property(nonatomic) int availability; // @synthesize availability=_availability;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)_selectRow:(unsigned long long)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
@property(nonatomic) unsigned long long supportedAvailabilities;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventCalendarDetailItem : EKEventDetailItem
{
    EKCalendar *_calendar;
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (_Bool)_calendarCanBeChanged;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)hasDetailViewControllerAtIndex:(unsigned long long)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)_contentSizeCategoryChanged:(id)arg1;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKEventCommentDetailItem : EKEventDetailItem <UITextFieldDelegate>
{
    EKEventDetailCommentCell *_cell;
}

- (void).cxx_destruct;
- (void)textFieldDidEndEditing:(id)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventDateDetailItem : EKEventDetailItem <EKCellShortener>
{
    PreferencesDoubleTwoPartValueCell *_cell;
    NSDate *_startDate;
    NSDate *_endDate;
    _Bool _indent;
}

- (void).cxx_destruct;
- (void)shortenCell:(id)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)setEvent:(id)arg1 store:(id)arg2;
- (void)reset;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventDateEditItem : EKEventEditItem <EKTimeZoneViewControllerDelegate, EKCellShortener>
{
    NSDateComponents *_startComponents;
    NSDateComponents *_endComponents;
    _Bool _allDay;
    NSTimeZone *_startTimeZone;
    NSTimeZone *_endTimeZone;
    _Bool _showTimeZones;
    PreferencesTwoPartValueCell *_startDateCell;
    PreferencesTwoPartValueCell *_endDateCell;
    UITableViewCell *_allDayCell;
    UITableViewCell *_startTimeZoneCell;
    UITableViewCell *_endTimeZoneCell;
    UITableViewCell *_startDatePickerCell;
    UITableViewCell *_endDatePickerCell;
    long long _selectedSubitem;
    UIDatePicker *_startDatePicker;
    UIDatePicker *_endDatePicker;
    _Bool _endTimeWasMessedUp;
    _Bool _changingDate;
    int _shorteningStatus;
    _Bool _pushingTZController;
    _Bool _showsAllDay;
}

@property(nonatomic) _Bool showsAllDay; // @synthesize showsAllDay=_showsAllDay;
- (void).cxx_destruct;
- (_Bool)_shouldShowTimeZone;
- (id)_dateComponentsInSystemCalendarFromDate:(id)arg1;
- (id)_dateInSystemCalendarFromComponents:(id)arg1;
- (id)_timeZoneDescription:(id)arg1;
- (void)_allDayChanged:(id)arg1;
- (void)_datePickerChanged:(id)arg1;
- (void)_updateDateColors;
- (void)_updateDatePickerAnimated:(_Bool)arg1;
- (_Bool)_endDateIsBeforeStartDate;
- (void)_resetStartString:(_Bool)arg1 endString:(_Bool)arg2;
- (void)_updateTimeWidths;
- (void)_pickNextReasonableTime;
- (void)_hideInlineDateControls;
- (void)_setEndTimeZone:(id)arg1;
- (void)_setStartTimeZone:(id)arg1;
- (void)_validateTimezones;
- (void)_setAllDay:(_Bool)arg1;
- (void)_setEndDate:(id)arg1;
- (void)_setStartDate:(id)arg1;
- (void)timeZoneViewControllerDidCancel:(id)arg1;
- (void)timeZoneViewController:(id)arg1 didSelectTimeZone:(id)arg2;
- (void)_contentSizeCategoryDidChange:(id)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (id)_calendarForEventComponents:(_Bool)arg1;
- (void)endInlineEditing;
- (void)editor:(id)arg1 didStartEditingItem:(id)arg2;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;
- (void)editor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (_Bool)editor:(id)arg1 canSelectSubitem:(unsigned long long)arg2;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)shortenCell:(id)arg1;
- (void)_datePickerDoubleTapped:(id)arg1;
- (id)_endDatePickerCell;
- (id)_startDatePickerCell;
- (id)_newDatePicker;
- (id)_endTimeZoneCell;
- (id)_startTimeZoneCell;
- (id)_allDayCell;
- (id)_endDateCell;
- (id)_startDateCell;
- (unsigned long long)numberOfSubitems;
- (long long)_subitemForRow:(long long)arg1;
- (long long)_rowForSubitem:(long long)arg1;
- (_Bool)isInline;
- (_Bool)forceRefreshLocationItemOnCommit;
- (_Bool)forceRefreshInviteesItemOnCommit;
- (_Bool)requiresReconfigurationOnCommit;
- (_Bool)configureForCalendarConstraints:(id)arg1;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (void)refreshFromCalendarItemAndStore;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventDeleteButtonEditItem : EKEventEditItem
{
    UITableViewCell *_cell;
    id _deleteButtonTarget;
    SEL _deleteButtonAction;
}

- (void).cxx_destruct;
- (void)editor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (void)setDeleteButtonTarget:(id)arg1 action:(SEL)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;

@end

@interface EKEventDescriptionGenerator : NSObject
{
    int _meCardID;
    struct __CFDateFormatter *_dateFormatter;
    NSNumberFormatter *_numberFormatter;
    NSDataDetector *_addressDetector;
}

- (void).cxx_destruct;
- (void)_addressBookDidChange:(id)arg1;
- (id)_nameForPersonWithIdentifier:(int)arg1;
- (int)_fetchIdentifierForMeCard;
- (int)_identifierForMeCard;
- (id)_identifiersForAllCardsLinkedToMeCard;
- (id)_firstNameForMeCard;
- (id)_randomNumber;
- (id)_addressDetector;
- (id)_locationStringForEvent:(id)arg1;
- (_Bool)_startTimeRequiresSingularForEvent:(id)arg1 withTimeString:(id)arg2;
- (id)_timeStringForEvent:(id)arg1 forBeginningOfSentence:(_Bool)arg2 useExplicitTimes:(_Bool)arg3 followingComma:(_Bool)arg4;
- (_Bool)_eventIsAlreadyLate:(id)arg1;
- (id)_adjustedMinutesTillEventStarts:(id)arg1;
- (id)_attendeesForEvent:(id)arg1;
- (_Bool)_isDateInWeekend:(id)arg1;
- (_Bool)_doesEventStartEarly:(id)arg1;
- (id)_noonDateForEvents:(id)arg1;
- (_Bool)_arrayHasAfternoonEvents:(id)arg1;
- (_Bool)_arrayHasMorningEvents:(id)arg1;
- (_Bool)_prepareToUseMessageWithID:(id)arg1 shouldAllowWeekendUsage:(_Bool)arg2;
- (_Bool)_prependEarlyStartMessageToEventSummaryIfPossible:(id)arg1;
- (_Bool)_appendFreeAfternoonMessageToEventSummaryIfPossible:(id)arg1;
- (_Bool)_prependFreeMorningMessageToEventSummaryIfPossible:(id)arg1;
- (_Bool)_prependBusyDayMessageToEventSummaryIfPossible:(id)arg1;
- (id)tomorrowSnippetForUpcomingEvents:(id)arg1 withTodayEvents:(id)arg2;
- (id)_naturalLanguageDescriptionForEvent:(id)arg1 isFirstInDay:(_Bool)arg2;
- (id)naturalLanguageDescriptionForUpcomingEvents:(id)arg1 firstInDay:(_Bool)arg2;
- (id)naturalLanguageDescriptionForBirthdayEvents:(id)arg1;
- (void)dealloc;
- (id)_sharedNumberFormatter;
- (struct __CFDateFormatter *)_sharedDateFormatter;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailCell : UITableViewCell
{
    EKEvent *_event;
    _Bool _editable;
    double _lastLaidOutWidth;
    int _lastLaidOutPosition;
}

+ (double)detailsCellDefaultHeight;
+ (double)detailsPostLabelSpace;
+ (double)detailsBottomVerticalInset;
+ (double)detailsTopVerticalInset;
+ (double)_scaledDistanceCalculatedFromBottomToBaseline:(double)arg1;
+ (double)_scaledDistanceCalculatedFromTopFromBaseline:(double)arg1;
+ (id)_bodyFontAtDefaultSize;
- (void).cxx_destruct;
- (_Bool)needsLayoutForWidth:(double)arg1 position:(int)arg2;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (void)sizeToFit;
- (_Bool)update;
@property(readonly, nonatomic) _Bool isEditable;
- (void)setEvent:(id)arg1;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2 style:(long long)arg3;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailTwoValueCell : EKEventDetailCell
{
    int _style;
    UILabel *_titleView;
    UILabel *_valueView;
    UILabel *_value2View;
    int _twoValueCellStyle;
}

- (void).cxx_destruct;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (int)twoValueCellStyle;
- (id)value2View;
- (id)valueView;
- (id)titleView;
- (_Bool)update;
@property(readonly, nonatomic) unsigned int visibleItems;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2 platformStyle:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailAlarmCell : EKEventDetailTwoValueCell
{
}

- (_Bool)update;
- (void)setAlarms:(id)arg1;
- (_Bool)isEditable;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2 platformStyle:(int)arg3;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailAttendeesCell : EKEventDetailCell
{
    EKEventDetailAttendeesListView *_attendeesListView;
}

- (void).cxx_destruct;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (id)_attendeesListView;
- (void)setAttendees:(id)arg1;
- (_Bool)update;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailAttendeesListView : UIView
{
    _Bool _highlighted;
    _Bool _groupsNames;
    NSArray *_acceptedNames;
    NSArray *_maybeNames;
    NSArray *_declinedNames;
    NSArray *_noReplyNames;
    NSArray *_ungroupedNames;
    UIColor *_textColor;
    UIColor *_highlightedTextColor;
}

@property(nonatomic) _Bool groupsNames; // @synthesize groupsNames=_groupsNames;
@property(nonatomic, getter=isHighlighted) _Bool highlighted; // @synthesize highlighted=_highlighted;
@property(retain, nonatomic) UIColor *highlightedTextColor; // @synthesize highlightedTextColor=_highlightedTextColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) NSArray *ungroupedNames; // @synthesize ungroupedNames=_ungroupedNames;
@property(retain, nonatomic) NSArray *noReplyNames; // @synthesize noReplyNames=_noReplyNames;
@property(retain, nonatomic) NSArray *declinedNames; // @synthesize declinedNames=_declinedNames;
@property(retain, nonatomic) NSArray *maybeNames; // @synthesize maybeNames=_maybeNames;
@property(retain, nonatomic) NSArray *acceptedNames; // @synthesize acceptedNames=_acceptedNames;
- (void).cxx_destruct;
- (void)_drawColumnOfStrings:(id)arg1 inRange:(struct _NSRange)arg2 startingAtPoint:(struct CGPoint)arg3 givenWidth:(double)arg4;
- (void)drawInvitees:(id)arg1 withStatus:(id)arg2 startingAtPoint:(struct CGPoint)arg3 givenWidth:(double)arg4;
- (void)drawRect:(struct CGRect)arg1;
- (double)_offsetFromOffsetToBaseline:(double)arg1 withFont:(id)arg2;
- (double)_heightForGroupOfAttendeeNames:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailCommentCell : EKEventDetailCell
{
}

- (_Bool)update;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailExtendedNotesViewController : UIViewController <EKEditItemViewControllerProtocol>
{
    UITextView *_textView;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *notes;
- (id)_textView;
- (unsigned long long)supportedInterfaceOrientations;
- (void)loadView;
- (id)init;

// Remaining properties
@property(nonatomic) __weak id <EKEditItemViewControllerDelegate> editDelegate;
@property(nonatomic) _Bool editItemShouldBeAskedForInjectableViewController;
@property(nonatomic) _Bool presentModally;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailNotesCell : EKEventDetailCell
{
    UILabel *_notesTitleView;
    UITextView *_notesView;
    _Bool _isTruncatingNotes;
}

@property(readonly, nonatomic) _Bool isTruncatingNotes; // @synthesize isTruncatingNotes=_isTruncatingNotes;
- (void).cxx_destruct;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (id)_notesView;
- (id)_notesTitleView;
- (_Bool)update;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailOrganizerCell : EKEventDetailCell
{
    NSString *_organizerName;
    UILabel *_organizerView;
    UILabel *_titleView;
}

- (void).cxx_destruct;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (id)_organizerView;
- (id)_titleView;
- (_Bool)update;
- (_Bool)shouldDisplayForEvent;
- (_Bool)hasCustomLayout;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailPreviewCell : EKEventDetailCell
{
    _Bool _alwaysVisible;
}

@property(nonatomic) _Bool alwaysVisible; // @synthesize alwaysVisible=_alwaysVisible;
- (_Bool)update;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2;

@end

@interface EKEventDetailRecurrenceCell : EKEventDetailCell
{
    UILabel *_recurrenceLabel;
    double _lastLayoutWidth;
}

- (void).cxx_destruct;
- (double)height;
- (void)layoutSubviews;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (id)_myTableView;
- (void)setRecurrenceString:(id)arg1;
- (id)_recurrenceLabel;

@end

@interface EKEventDetailTitleCell : EKEventDetailCell
{
    UILabel *_titleView;
    EKTextViewWithLabelTextMetrics *_locationView;
    UIImage *_locationStatusImage;
    UIImageView *_locationStatusView;
    UILabel *_travelTimeView;
    NSMutableArray *_dateTimeViews;
    UILabel *_recurrenceView;
    UILabel *_statusView;
    UIButton *_editButton;
    unsigned int _visibleItems;
    _Bool _observingLocaleChanges;
    _Bool _hasLocationStatus;
    int _locationStatus;
    NSObject<EKEventDetailTitleCellDelegate> *_delegate;
}

+ (id)_locationFont;
+ (id)_titleFont;
+ (void)_invalidateCachedFonts;
+ (void)_registerForInvalidation;
@property(nonatomic) __weak NSObject<EKEventDetailTitleCellDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (id)_editButton;
- (id)_statusView;
- (id)_recurrenceView;
- (id)_travelTimeView;
- (id)_dateTimeViewForLine:(unsigned long long)arg1;
- (id)_locationView;
- (id)_locationStatusView;
- (id)_titleView;
- (void)editButtonTapped;
- (_Bool)update;
- (void)setPrimaryTextColor:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setStatusString:(id)arg1;
- (void)setRecurrenceString:(id)arg1;
- (void)setTravelTimeString:(id)arg1;
- (void)_setDateTimeString:(id)arg1 line:(unsigned long long)arg2;
- (void)setLocation:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)dealloc;

@end

__attribute__((visibility("hidden")))
@interface EKEventDetailURLCell : EKEventDetailCell
{
    UILabel *_URLTitleView;
    UITextView *_URLView;
}

- (void).cxx_destruct;
- (id)_URLView;
- (id)_URLTitleView;
- (void)layoutForWidth:(double)arg1 position:(int)arg2;
- (_Bool)update;
- (void)setURL:(id)arg1;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2 style:(long long)arg3;

@end

@interface EKEventEditViewController : UINavigationController
{
    EKEvent *_event;
    NSString *_eventId;
    int _transitionForModalViewPresentation;
    EKEventStore *_store;
    id <EKEventEditViewDelegate> _editViewDelegate;
    EKEventEditor *_editor;
    EKEventEditViewController *_strongSelf;
}

+ (void)setDefaultDatesForEvent:(id)arg1;
@property(retain, nonatomic) EKEventEditViewController *strongSelf; // @synthesize strongSelf=_strongSelf;
@property(retain, nonatomic) EKEventEditor *editor; // @synthesize editor=_editor;
@property(nonatomic) int transitionForModalViewPresentation; // @synthesize transitionForModalViewPresentation=_transitionForModalViewPresentation;
@property(nonatomic) __weak id <EKEventEditViewDelegate> editViewDelegate; // @synthesize editViewDelegate=_editViewDelegate;
@property(retain, nonatomic) EKEventStore *eventStore; // @synthesize eventStore=_store;
- (void).cxx_destruct;
@property(nonatomic) double editorNavBarRightContentInset;
@property(nonatomic) double editorNavBarLeftContentInset;
@property(retain, nonatomic) UIColor *editorBackgroundColor;
- (_Bool)willPresentDialogOnSave;
- (void)completeAndSave;
- (void)handleTapOutside;
@property(nonatomic) _Bool canHideDoneAndCancelButtons;
@property(nonatomic) _Bool showAttachments;
@property(nonatomic) _Bool scrollToNotes;
- (struct CGSize)preferredContentSize;
- (unsigned long long)supportedInterfaceOrientations;
- (void)_storeChanged:(id)arg1;
- (void)editor:(id)arg1 prepareCalendarItemForEdit:(id)arg2;
- (void)editor:(id)arg1 didCompleteWithAction:(int)arg2;
- (void)cancelEditing;
- (_Bool)saveWithSpan:(int)arg1 animated:(_Bool)arg2;
- (void)refreshStartAndEndDates;
@property(retain, nonatomic) EKEvent *event;
- (void)dealloc;
- (_Bool)shouldAutorotate;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface EKEventEditableDetailGroup : EKEventDetailGroup
{
}

- (id)itemAtIndex:(unsigned long long)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKEventEditedByDetailItem : EKEventDetailItem <EKCellShortener>
{
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)hasDetailViewControllerAtIndex:(unsigned long long)arg1;
- (void)shortenCell:(id)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventEditor : EKCalendarItemEditor
{
    EKEventDateEditItem *_dateItem;
    _Bool _isTransitioning;
    _Bool _showAttachments;
    UIColor *_backgroundColor;
}

@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(nonatomic) _Bool showAttachments; // @synthesize showAttachments=_showAttachments;
- (void).cxx_destruct;
- (id)_viewForSheet;
- (_Bool)_canDetachSingleOccurrence;
- (void)_revertEvent;
- (void)_copyEventForPossibleRevert;
- (struct CGSize)preferredContentSize;
- (unsigned long long)entityType;
- (id)notificationNamesForLocaleChange;
- (id)defaultAlertTitle;
- (void)setupDeleteButton;
- (id)_nameForDeleteButton;
- (id)defaultTitleForCalendarItem;
- (id)preferredTitle;
- (_Bool)saveCalendarItemWithSpan:(int)arg1 error:(id *)arg2;
- (id)_orderedEditItems;
- (id)_editItems;
- (id)_calendarItemIndexSet;
- (void)refreshLocation;
- (void)refreshInvitees;
- (void)refreshStartAndEndDates;
@property(retain, nonatomic) EKEvent *event;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)shouldAutorotate;
- (void)loadView;

@end

@interface EKEventStandardTravelTimeCell : EKCalendarChooserCell
{
}

- (id)init;

@end

@interface EKEventEstimatedTravelTimeResultCell : EKEventStandardTravelTimeCell
{
}

@end

__attribute__((visibility("hidden")))
@interface EKEventFacebookButtonDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (void)layoutCellsForWidth:(double)arg1 position:(int)arg2;
- (void)eventViewController:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

@end

@interface EKEventGestureController : NSObject <UIGestureRecognizerDelegate, UIAlertViewDelegate>
{
    UILongPressGestureRecognizer *_recognizer;
    EKDayOccurrenceView *_draggingView;
    EKEvent *_event;
    int _currentDragType;
    struct CGPoint _firstTouchPoint;
    double _firstTouchTime;
    struct CGPoint _latestTouchPoint;
    struct CGPoint _previousTouchPoint;
    double _previousTouchTime;
    double _previousTouchVelocity;
    struct CGPoint _touchOffset;
    long long _touchOffsetDays;
    double _dateAtFirstTouchPoint;
    _Bool _isNewEvent;
    _Bool _isInCancelRegion;
    _Bool _isMultiDayTimedEvent;
    EKCalendarDate *_currentDay;
    _Bool _horizontalDragLocked;
    _Bool _dragLockDisabled;
    NSTimer *_scrollTimer;
    double _timeSinceEnteredPageMargin;
    double _firstContactOfDraggingViewTop;
    _Bool _hasStartedScrolling;
    long long _consecutivePageTurnCount;
    _Bool _forcedStart;
    _Bool _needsCommit;
    CDUnknownBlockType _recurrenceSheetCompletionHandler;
    _Bool _usesXDragOffsetInCancelRegion;
    _Bool _usesHorizontalDragLocking;
    _Bool _commitBlocked;
    id <EKEventGestureControllerUntimedDelegate> _untimedDelegate;
    id <EKEventGestureControllerDelegate> _delegate;
    NSString *_sessionIdentifierForDebug;
    EKDayOccurrenceView *_draggingViewSource;
}

@property(retain, nonatomic) EKDayOccurrenceView *draggingViewSource; // @synthesize draggingViewSource=_draggingViewSource;
@property(retain, nonatomic) NSString *sessionIdentifierForDebug; // @synthesize sessionIdentifierForDebug=_sessionIdentifierForDebug;
@property(readonly, nonatomic) EKDayOccurrenceView *draggingView; // @synthesize draggingView=_draggingView;
@property(readonly, nonatomic) struct CGPoint touchOffset; // @synthesize touchOffset=_touchOffset;
@property(readonly, nonatomic) struct CGPoint latestTouchPoint; // @synthesize latestTouchPoint=_latestTouchPoint;
@property(readonly, nonatomic) struct CGPoint firstTouchPoint; // @synthesize firstTouchPoint=_firstTouchPoint;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(nonatomic) _Bool commitBlocked; // @synthesize commitBlocked=_commitBlocked;
@property(nonatomic) _Bool usesHorizontalDragLocking; // @synthesize usesHorizontalDragLocking=_usesHorizontalDragLocking;
@property(nonatomic) _Bool usesXDragOffsetInCancelRegion; // @synthesize usesXDragOffsetInCancelRegion=_usesXDragOffsetInCancelRegion;
@property(nonatomic) __weak id <EKEventGestureControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <EKEventGestureControllerUntimedDelegate> untimedDelegate; // @synthesize untimedDelegate=_untimedDelegate;
- (void).cxx_destruct;
- (double)_Debug_HoursSinceStartOfDay:(double)arg1;
- (_Bool)_isPointInCancelRegion:(struct CGPoint)arg1;
- (struct CGPoint)_computeOriginAtTouchPoint:(struct CGPoint)arg1 forDate:(double)arg2 isAllDay:(_Bool)arg3 allowXOffset:(_Bool)arg4 allowFloorAtRegionBottom:(_Bool)arg5;
- (double)_computeHeightForOccurrenceViewOfDuration:(double)arg1 allDay:(_Bool)arg2;
- (double)_computeWidthForOccurrenceView;
- (void)_updateHorizontalDragLockForPoint:(struct CGPoint)arg1;
- (double)_capOccurrenceViewYOrigin:(double)arg1;
- (double)_alignedYOriginForAllDayOccurrence:(id)arg1 atPoint:(struct CGPoint)arg2 floorAtAllDayRegionBottom:(_Bool)arg3;
- (_Bool)_flingOrCancelDraggingViewIfNeeded;
- (void)_cancel;
- (void)_commit;
- (void)_update;
- (double)_minimumDuration;
- (void)_setUpAfterForcedStartFromPoint:(struct CGPoint)arg1;
- (void)_setTouchOffsetsFromPoint:(struct CGPoint)arg1;
- (void)_setUpAtPoint:(struct CGPoint)arg1;
- (void)_createTemporaryView:(id)arg1;
- (void)_scrollTimerFired:(id)arg1;
- (void)_removeScrollTimer;
- (void)_installScrollTimer;
- (void)_commitUntimed;
- (void)_longPress:(id)arg1;
- (void)endForcedStart;
- (void)forceStartWithOccurrence:(id)arg1 shouldUpdateViewSource:(_Bool)arg2 shouldUpdateOrigin:(_Bool)arg3;
- (void)updateDraggingOccurrenceFrameFromSource;
- (void)updateDraggingOccurrenceOrigin;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)isDraggingOccurrence;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)promptUserForRecurrenceActionOnOccurrence:(id)arg1 whenFinished:(CDUnknownBlockType)arg2;
- (void)removeDraggedOccurrence;
- (void)updateDraggingOccurrenceFrame;
- (struct CGRect)_calculateFrameForDraggingViewIncludingTravelTime:(_Bool)arg1;
- (void)updateDraggingOccurrenceForced:(_Bool)arg1 animated:(_Bool)arg2;
- (void)updateDraggingOccurrence;
- (void)invalidate;
- (void)dealloc;
- (id)initWithView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventMapCell : UITableViewCell
{
    UIView *_mapView;
}

@property(retain) UIView *mapView; // @synthesize mapView=_mapView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)_drawSeparatorInRect:(struct CGRect)arg1;
- (void)_drawContentInRect:(struct CGRect)arg1 selected:(_Bool)arg2;

@end

@interface EKEventMapDetailItem : EKEventDetailItem <MKMapViewDelegate>
{
    UITableViewCell *_cell;
    MKMapView *_mapView;
    UIView *_overlayView;
}

- (void).cxx_destruct;
- (void)eventViewController:(id)arg1 didSelectReadOnlySubitem:(unsigned long long)arg2;
- (void)eventViewController:(id)arg1 didUnhighlightSubitem:(unsigned long long)arg2;
- (void)eventViewController:(id)arg1 didHighlightSubitem:(unsigned long long)arg2;
- (double)_mapHeight;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventNotesDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
    UITableViewCell *_moreButtonCell;
    UITextView *_notesView;
    _Bool _cellNeedsUpdate;
}

- (void).cxx_destruct;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)hasDetailViewControllerAtIndex:(unsigned long long)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (void)_updateCellIfNeeded;
- (unsigned long long)numberOfSubitems;
- (void)setCellPosition:(int)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface EKEventNotesEditItemViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate>
{
    UITableView *_table;
    CalendarNotesCell *_cell;
    NSString *_text;
}

- (void).cxx_destruct;
- (struct CGSize)preferredContentSize;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (_Bool)validateAllowingAlert:(_Bool)arg1;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;
@property(copy, nonatomic) NSString *noteText;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventNotesInlineEditItem : EKEventEditItem <UITextViewDelegate, EKCalendarItemInlineEditItem>
{
    CalendarNotesCell *_cell;
    NSString *_lastTextChange;
}

- (void).cxx_destruct;
- (_Bool)textViewShouldReturn:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)isSaveable;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)isInline;
- (void)reset;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

__attribute__((visibility("hidden")))
@interface EKEventOrganizerDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
    _Bool _cellNeedsUpdate;
}

- (void).cxx_destruct;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (void)_updateCellIfNeededForWidth:(double)arg1;
- (void)setCellPosition:(int)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface EKEventPreviewDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface EKEventPrivacyLevelDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
    UISwitch *_control;
    _Bool _switchStateIsOn;
}

- (void).cxx_destruct;
- (void)_switchChanged:(id)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)setEvent:(id)arg1 store:(id)arg2;
- (void)reset;

@end

@interface EKEventPrivacyLevelInlineEditItem : EKEventEditItem
{
    _Bool _originalSwitchState;
    _Bool _currentSwitchState;
}

- (void)_switchChanged:(id)arg1;
- (id)footerTitle;
- (double)footerHeightForWidth:(double)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)refreshFromCalendarItemAndStore;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (_Bool)forceTableReloadOnCommit;
- (_Bool)requiresReconfigurationOnCommit;
- (_Bool)isInline;

@end

@interface EKEventRecurrenceEditItem : EKCalendarItemRecurrenceEditItem
{
}

- (id)minRecurrenceEndDate;
- (id)recurrenceTimeZone;
- (id)recurrenceDate;
- (id)stringForDate:(id)arg1;
- (id)event;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;

@end

@interface EKEventStore (MobileCal)
- (id)stringForColor:(id)arg1;
- (id)localizedStringForSymbolicColorName:(id)arg1;
- (id)colorForCalendar:(id)arg1;
- (id)defaultCalendarColorsInRainbowOrder;
- (id)symbolicNameToUIColors;
- (id)_uicolorFromString:(id)arg1;
- (id)colorNamesInRainbowOrder;
@end

__attribute__((visibility("hidden")))
@interface EKEventTitleDetailItem : EKEventDetailItem <EKEventDetailTitleCellDelegate>
{
    UITableViewCell *_cell;
    UIColor *_color;
    _Bool _showDot;
    _Bool _cellNeedsUpdate;
    NSObject<EKEventTitleDetailItemDelegate> *_editDelegate;
}

@property(nonatomic) __weak NSObject<EKEventTitleDetailItemDelegate> *editDelegate; // @synthesize editDelegate=_editDelegate;
- (void).cxx_destruct;
- (_Bool)shouldShowEditButtonInline;
- (void)editButtonPressed;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (void)_updateCellIfNeededForWidth:(double)arg1;
- (void)setCellPosition:(int)arg1;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface EKEventTravelDetailItem : EKEventDetailItem
{
}

- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;

@end

@interface EKEventTravelTimeEditItem : EKEventEditItem
{
    _Bool _isHidden;
}

- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (unsigned long long)numberOfSubitems;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (void)_updateHiddenState;
- (_Bool)forceRefreshStartAndEndDatesOnCommit;
- (_Bool)isInline;

@end

@interface EKEventTravelTimeEditViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate, EKTravelRouteEstimationControllerDelegate, EKEditItemViewControllerDelegate>
{
    struct CGRect _initFrame;
    EKCalendarItem *_calendarItem;
    EKEventStore *_eventStore;
    UITableView *_table;
    NSIndexPath *_checkedItem;
    UISwitch *_switchControl;
    long long _travelTimeSelectedChoice;
    double _customTravelTimeDuration;
    _Bool _estimationGroupIsShowing;
    _Bool _customTimesGroupIsShowing;
    _Bool _externallySetValueGroupIsShowing;
    _Bool _isAnimatingTableSections;
    _Bool _pendingReloadData;
    NSString *_routeEstimationErrorMessage;
    _Bool _isOriginSelectionVisible;
    _Bool _suppressErrors;
    _Bool _estimatedRowIsChecked;
    EKTravelRouteEstimationController *_routeEstimationControler;
    long long _selectedRoutingMode;
    long long _originalSelectedRoutingMode;
    double _originalSelectedTravelTime;
    UIView *_shadowView;
    double _selectedTravelTime;
    NSDate *_arrivalDate;
    EKStructuredLocation *_originStructuredLocation;
    EKStructuredLocation *_destinationStructuredLocation;
}

@property(retain, nonatomic) EKStructuredLocation *destinationStructuredLocation; // @synthesize destinationStructuredLocation=_destinationStructuredLocation;
@property(retain, nonatomic) EKStructuredLocation *originStructuredLocation; // @synthesize originStructuredLocation=_originStructuredLocation;
@property(retain, nonatomic) NSDate *arrivalDate; // @synthesize arrivalDate=_arrivalDate;
@property(nonatomic) double selectedTravelTime; // @synthesize selectedTravelTime=_selectedTravelTime;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)setCell:(id)arg1 checked:(_Bool)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)_numberOfEstimatedTravelTimeResultRows;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (unsigned long long)_externallySetValueTravelTimeSection;
- (unsigned long long)_customTravelTimeSection;
- (unsigned long long)_estimatedTravelTimeSection;
- (unsigned long long)_toggleSwitchSection;
- (id)_indexPathForSelectedTravelTime;
- (long long)travelTimeSelectedChoice;
- (void)setTravelTimeSelectedChoice:(long long)arg1;
- (_Bool)setTravelTimeSelectedChoiceEstimatedRowAtIndex:(unsigned long long)arg1;
- (void)setTravelTimeSelectedChoiceToFirstValidEstimatedRow;
- (void)_checkItemAtIndexPath:(id)arg1;
- (id)_errorStringForMapKitErrorCode:(unsigned long long)arg1;
- (void)_handleEstimationControllerTravelTimeLookupErrors;
- (void)routeEstimationControllerDidFinishTravelTimeLookup:(id)arg1;
- (void)routeEstimationControllerDidBeginTravelTimeLookup:(id)arg1;
- (void)_travelTimeActivationSwitchChanged:(id)arg1;
- (void)_setEstimationActive:(_Bool)arg1;
- (void)_showRouteEstimationAlert;
- (id)_routeEstimationControler;
- (void)_handleOriginLocationErrorsWithAlert:(_Bool)arg1;
- (void)routeEstimationControllerDidFinishOriginLocationLookup:(id)arg1;
- (void)routeEstimationControllerDidBeginOriginLocationLookup:(id)arg1;
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (void)editItemViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (void)_locationsChanged;
- (void)_originLocationButtonWasTapped;
- (id)_stringForOriginLocation;
@property(nonatomic) long long selectedRoutingMode;
- (void)_updateTableView;
- (void)_autoselectFromAvailableChoices;
- (void)_updateVisibleSections;
- (_Bool)_showingOptions;
- (_Bool)_showingOptionsInitialState;
- (_Bool)_shouldAutoSelectEstimatedTravelTimeOnLookupCompletion;
- (void)_layoutShadowView;
- (void)_contentCategorySizeChanged:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
@property(readonly, copy) NSString *description;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2 calendarItem:(id)arg3 eventStore:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventURLAndNotesInlineEditItem : EKEventEditItem
{
    EKEventURLInlineEditItem *_urlEditItem;
    EKEventNotesInlineEditItem *_notesEditItem;
}

- (void).cxx_destruct;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (_Bool)isInline;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (unsigned long long)numberOfSubitems;
- (void)setSelectedResponder:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;
- (void)_contentSizeCategoryChanged;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKEventURLDetailItem : EKEventDetailItem
{
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (_Bool)hasDetailViewControllerAtIndex:(unsigned long long)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (_Bool)configureWithCalendar:(id)arg1 preview:(_Bool)arg2;
- (void)reset;

@end

__attribute__((visibility("hidden")))
@interface EKEventURLInlineEditItem : EKEventEditItem <UITextFieldDelegate>
{
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (_Bool)isInline;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)reset;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKEventVisibilityEditItem : EKEventEditItem
{
    EKEventAvailabilityEditItem *_availabilityEditItem;
    EKEventPrivacyLevelInlineEditItem *_privacyLevelEditItem;
    EKEventEditItem *_subitemOfLastDetailViewControllerRequested;
    unsigned long long _lastKnownNumberOfSubitems;
}

- (void).cxx_destruct;
- (id)_editItemForIndex:(unsigned long long)arg1;
- (id)_lowestEditItem;
- (id)footerView;
- (id)footerTitle;
- (double)footerHeightForWidth:(double)arg1;
- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;
- (_Bool)editor:(id)arg1 canSelectSubitem:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (unsigned long long)numberOfSubitems;
- (void)setDelegate:(id)arg1;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (_Bool)canBeConfiguredForCalendarConstraints:(id)arg1;
- (_Bool)forceTableReloadOnCommit;
- (_Bool)requiresReconfigurationOnCommit;
- (void)reset;
- (id)init;

@end

@interface EKExpandingTextView : UITextView <UITextViewDelegate>
{
    UILabel *_placeholderLabel;
    _Bool _allowEnclosingViewScroll;
    struct CGSize _previousIntrinsicContentSize;
}

- (void).cxx_destruct;
- (_Bool)_shouldScrollEnclosingScrollView;
- (struct CGSize)intrinsicContentSize;
- (void)setContentOffset:(struct CGPoint)arg1;
- (void)setContentSize:(struct CGSize)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setFont:(id)arg1;
- (void)setText:(id)arg1;
- (void)_updatePlaceholder;
- (void)layoutSubviews;
@property(copy, nonatomic) NSString *placeholder;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKGroupInfo : NSObject
{
    NSMutableArray *_calendars;
    int _customGroupType;
    NSString *_customTitle;
    NSString *_customTitleAtBeginningOfSentence;
    NSString *_typeTitle;
    NSString *_title;
    NSString *_titleForBeginningOfSentence;
    _Bool _selected;
    _Bool _showSelectAllButton;
    EKSource *_source;
}

@property(nonatomic) _Bool showSelectAllButton; // @synthesize showSelectAllButton=_showSelectAllButton;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain, nonatomic) EKSource *source; // @synthesize source=_source;
- (void).cxx_destruct;
- (id)description;
@property(readonly, nonatomic) int sortOrder;
@property(readonly, nonatomic) _Bool isSubscribed;
@property(readonly, nonatomic) _Bool showCalendarNameIfSolitary;
@property(readonly, nonatomic) _Bool showAddCalendarButton;
- (void)selectNone;
- (void)selectAll;
@property(readonly, copy, nonatomic) NSSet *selectedCalendarSet;
@property(readonly, copy, nonatomic) NSSet *calendarSet;
- (id)copyCalendars;
- (id)calendarAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numSelectedCalendars;
@property(readonly, nonatomic) unsigned long long numSelectableCalendars;
@property(readonly, nonatomic) unsigned long long numCalendars;
@property(readonly, retain, nonatomic) NSArray *calendarInfos;
@property(readonly, copy, nonatomic) NSString *typeTitle;
- (void)setCustomTitle:(id)arg1 forBeginningOfSentence:(id)arg2;
- (id)titleForBeginningOfSentence:(_Bool)arg1;
@property(readonly, copy, nonatomic) NSString *title;
- (void)removeCalendar:(id)arg1;
- (void)insertCalendarInfo:(id)arg1;
- (void)insertDeclinedEventsItem;
- (id)initWithCustomGroupType:(int)arg1;
- (id)initWithSource:(id)arg1;
- (id)init;

@end

@interface EKICSPreviewController : NSObject
{
    EKICSPreviewModel *_model;
    EKEventStore *_eventStore;
    EKEventViewController *_currentImport;
    UIViewController *_contentViewController;
    _Bool _importing;
    _Bool _hasCustomCancelButton;
    long long _cancelButtonType;
    _Bool _allowsImport;
    _Bool _allowsEditing;
    _Bool _allowsSubitems;
    _Bool _allowsInvalidProperties;
    _Bool _allowsToDos;
    int _actionsState;
    id <EKICSPreviewControllerDelegate> _previewDelegate;
}

@property(nonatomic) _Bool allowsToDos; // @synthesize allowsToDos=_allowsToDos;
@property(nonatomic) _Bool allowsInvalidProperties; // @synthesize allowsInvalidProperties=_allowsInvalidProperties;
@property(nonatomic) int actionsState; // @synthesize actionsState=_actionsState;
@property(nonatomic) _Bool allowsSubitems; // @synthesize allowsSubitems=_allowsSubitems;
@property(nonatomic) _Bool allowsEditing; // @synthesize allowsEditing=_allowsEditing;
@property(nonatomic) _Bool allowsImport; // @synthesize allowsImport=_allowsImport;
@property(nonatomic) __weak id <EKICSPreviewControllerDelegate> previewDelegate; // @synthesize previewDelegate=_previewDelegate;
- (void).cxx_destruct;
- (void)importEventFromController:(id)arg1 intoCalendar:(id)arg2;
- (void)importAllIntoCalendar:(id)arg1;
- (void)calendarChooserDidCancel:(id)arg1;
- (void)calendarChooserDidFinish:(id)arg1;
- (void)importAllRequested:(id)arg1;
- (void)eventViewControllerDidRequestAddToCalendar:(id)arg1;
- (void)presentCalendarChooserForController:(id)arg1;
- (void)icsPreviewListControllerDidRequestImportAll:(id)arg1;
- (void)icsPreviewListController:(id)arg1 didSelectEvent:(id)arg2;
- (void)removeCancelButton;
- (void)setCancelButtonWithTarget:(id)arg1 action:(SEL)arg2;
- (void)_updateCancelButton;
- (void)_createCancelButtonWithType:(long long)arg1 target:(id)arg2 action:(SEL)arg3;
- (id)popoverContentController;
- (id)viewController;
- (id)detailViewForEvent:(id)arg1 eventInRealStore:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isImporting;
@property(readonly, nonatomic) unsigned long long unimportedEventCount;
@property(readonly, nonatomic) unsigned long long totalEventCount;
- (void)_databaseChanged:(id)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 eventStore:(id)arg2 options:(unsigned long long)arg3;
- (id)initWithData:(id)arg1 eventStore:(id)arg2;
- (id)initWithURL:(id)arg1 eventStore:(id)arg2 options:(unsigned long long)arg3;
- (id)initWithURL:(id)arg1 eventStore:(id)arg2;

@end

__attribute__((visibility("hidden")))
@interface EKICSPreviewListController : UITableViewController
{
    EKICSPreviewModel *_model;
    NSMutableArray *_sections;
    _Bool _allowsImport;
    _Bool _allowsSubitems;
    _Bool _showWeekNumbers;
    id <EKICSPreviewListDelegate> _listDelegate;
}

@property(nonatomic) _Bool showWeekNumbers; // @synthesize showWeekNumbers=_showWeekNumbers;
@property(nonatomic) __weak id <EKICSPreviewListDelegate> listDelegate; // @synthesize listDelegate=_listDelegate;
@property(nonatomic) _Bool allowsSubitems; // @synthesize allowsSubitems=_allowsSubitems;
@property(nonatomic) _Bool allowsImport; // @synthesize allowsImport=_allowsImport;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)buildSections;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_showWeekNumbersPreferenceChanged:(id)arg1;
- (void)importAllPressed:(id)arg1;
- (void)updateImportButton;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithModel:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKICSPreviewModel : NSObject
{
    NSData *_data;
    EKEventStore *_tempStore;
    EKEventStore *_destStore;
    NSMutableArray *_importedEvents;
    NSMutableArray *_unimportedEvents;
    unsigned long long _options;
    int _actionsState;
}

- (void).cxx_destruct;
- (id)importAllIntoCalendar:(id)arg1;
- (id)importEvent:(id)arg1 intoCalendar:(id)arg2;
@property(readonly, nonatomic) NSArray *allEvents;
@property(readonly, nonatomic) NSArray *unimportedEvents;
@property(readonly, nonatomic) NSArray *importedEvents;
@property(readonly, nonatomic) int actionsState;
@property(readonly, nonatomic) unsigned long long unimportedEventCount;
@property(readonly, nonatomic) unsigned long long importedEventCount;
@property(readonly, nonatomic) unsigned long long totalEventCount;
@property(readonly, nonatomic) EKEventStore *eventStore;
- (id)initWithICSData:(id)arg1 eventStore:(id)arg2 options:(unsigned long long)arg3;

@end

@interface EKIdentityViewController : UIViewController <ABPersonViewControllerDelegate, EKEditItemViewControllerProtocol>
{
    id <EKIdentityProtocol> _identity;
    ABPersonViewController *_personViewController;
}

- (void).cxx_destruct;
- (_Bool)personViewController:(id)arg1 shouldPerformDefaultActionForPerson:(void *)arg2 property:(int)arg3 identifier:(int)arg4;
- (void)setIdentity:(id)arg1;
- (void)loadView;
- (id)initWithIdentity:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) __weak id <EKEditItemViewControllerDelegate> editDelegate;
@property(nonatomic) _Bool editItemShouldBeAskedForInjectableViewController;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool presentModally;
@property(readonly) Class superclass;

@end

@interface EKLayoutContainerView : UIView
{
    id <EKLayoutContainerViewDelegate> _delegate;
}

@property(nonatomic) __weak id <EKLayoutContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface EKLazyDrawingLayer : CALayer
{
}

- (void)didChangeValueForKey:(id)arg1;

@end

@interface EKLegacyUIListHeaderCell : UIView
{
    EKLegacyUIListHeaderCellContentView *_contentView;
    _Bool _showWeekNumber;
}

@property(nonatomic) _Bool showWeekNumber; // @synthesize showWeekNumber=_showWeekNumber;
- (void).cxx_destruct;
- (void)setNeedsDisplay;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)_backgroundImage;
- (void)setFrame:(struct CGRect)arg1;
- (void)setOpaque:(_Bool)arg1;
@property(readonly, nonatomic) _Bool reusable;
@property(nonatomic) _Bool indentsForDots;
@property(nonatomic) double date;
- (id)initWithFrame:(struct CGRect)arg1 date:(double)arg2;

@end

@interface EKLegacyUIListHeaderCellContentView : UIView
{
    double _date;
    _Bool _indentsForDots;
    _Bool _showWeekNumber;
}

@property(nonatomic) _Bool showWeekNumber; // @synthesize showWeekNumber=_showWeekNumber;
- (void)drawRect:(struct CGRect)arg1;
- (id)_weekNumberFont;
- (id)_normalTextShadowColor;
- (id)_normalTextColor;
- (void)drawTitle:(id)arg1 withColor:(id)arg2 withShadowColor:(id)arg3 inRect:(struct CGRect)arg4;
- (struct CGRect)_rectForOffetTextShadow:(struct CGRect)arg1;
@property(nonatomic) _Bool indentsForDots;
@property(nonatomic) double date;

@end

@interface EKLegacyUIOccurrenceListItem : UIView
{
    NSString *_title;
    NSString *_location;
    NSString *_timeString;
    UIColor *_dotColor;
    UIImage *_dot;
    unsigned int _designator:2;
    unsigned int _isAllDay:1;
    unsigned int _isBirthday:1;
    unsigned int _isFacebook:1;
    unsigned int _tentative:1;
    unsigned int _declined:1;
    unsigned int _needsReply:1;
    unsigned int _cancelled:1;
    unsigned int _isEndDate:1;
    unsigned int _indentsWithoutDot:1;
    unsigned int _showsColors:1;
    _Bool _isSelected;
}

+ (double)defaultHeight;
+ (double)timeWidthIncludingDots:(_Bool)arg1;
+ (double)hourWidth;
+ (void)_invalidateWidths;
+ (void)_calculateWidths;
+ (double)xMidpointForCalendarDot;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)isCancelled;
- (_Bool)isAllDay;
- (unsigned int)designator;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawText:(id)arg1 withDefaultColor:(id)arg2 atPoint:(struct CGPoint)arg3 forWidth:(double)arg4 font:(id)arg5 lineBreakMode:(long long)arg6 staticColor:(_Bool)arg7;
- (void)drawDeemphasizedText:(id)arg1 atPoint:(struct CGPoint)arg2 forWidth:(double)arg3 font:(id)arg4 lineBreakMode:(long long)arg5 staticColor:(_Bool)arg6;
- (void)drawBoldText:(id)arg1 atPoint:(struct CGPoint)arg2 forWidth:(double)arg3 font:(id)arg4 lineBreakMode:(long long)arg5 staticColor:(_Bool)arg6;
- (_Bool)setUpStaticDrawingColor;
- (id)outlineImageWithColor:(id)arg1;
- (id)_dot;
- (id)_selectedBackgroundImage;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isHighlighted;
- (void)setShowsColors:(_Bool)arg1;
- (void)setIndentsForMissingDot:(_Bool)arg1;
- (void)setDotColor:(id)arg1;
- (void)setCancelled:(_Bool)arg1;
- (void)setNeedsReply:(_Bool)arg1;
- (void)setDeclined:(_Bool)arg1;
- (void)setTentative:(_Bool)arg1;
- (void)setIsEndDate:(_Bool)arg1;
- (void)setDisplayDate:(id)arg1;
- (void)setIsFacebook:(_Bool)arg1;
- (void)setIsBirthday:(_Bool)arg1;
- (void)setIsAllDay:(_Bool)arg1;
- (void)setLocation:(id)arg1;
- (id)title;
- (void)setTitle:(id)arg1;
- (void)updateWithEvent:(id)arg1;
- (_Bool)showDisclosure;
- (id)init;
- (id)initWithEvent:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface EKLocationEditItemViewController : EKEditItemViewController <UISearchBarDelegate, UITableViewDataSource, UITableViewDelegate, EKUILocationSearchModelDelegate>
{
    UISearchBar *_searchBar;
    UITableView *_tableView;
    _UINavigationControllerPalette *_palette;
    EKUILocationSearchModel *_searchModel;
    EKCalendarItem *_calendarItem;
    struct CGSize _preferredContentSize;
    _Bool _supportsStructuredLocations;
    _Bool _needsSave;
    _Bool _onlyDisplayMapLocations;
    EKStructuredLocation *_structuredLocation;
    EKStructuredLocation *_selectedLocation;
    EKUIConferenceRoom *_selectedConferenceRoom;
}

+ (id)_sectionNameForSection:(unsigned long long)arg1;
@property(retain, nonatomic) EKUIConferenceRoom *selectedConferenceRoom; // @synthesize selectedConferenceRoom=_selectedConferenceRoom;
@property(retain, nonatomic) EKStructuredLocation *selectedLocation; // @synthesize selectedLocation=_selectedLocation;
@property(retain, nonatomic) EKStructuredLocation *structuredLocation; // @synthesize structuredLocation=_structuredLocation;
@property(nonatomic) _Bool onlyDisplayMapLocations; // @synthesize onlyDisplayMapLocations=_onlyDisplayMapLocations;
@property(nonatomic) _Bool needsSave; // @synthesize needsSave=_needsSave;
- (void).cxx_destruct;
- (id)_cellForConferenceRoomRowInTableView:(id)arg1 indexPath:(id)arg2;
- (void)eventsSearchUpdated:(id)arg1;
- (void)frequentsSearchUpdated:(id)arg1;
- (void)mapSearchUpdated:(id)arg1;
- (void)recentsSearchUpdated:(id)arg1;
- (void)contactsSearchUpdated:(id)arg1;
- (void)conferenceRoomSearchUpdated:(id)arg1;
- (void)currentLocationUpdated:(id)arg1;
- (void)locationSearchModel:(id)arg1 selectedLocation:(id)arg2 withError:(id)arg3;
- (id)calendarItemForSearchModel:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (id)greyPinImage;
- (id)redPinImage;
- (id)contactsImage;
- (id)locationArrowImage;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 wantsHeaderForSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)itemAtIndexPath:(id)arg1;
- (void)useAsString:(id)arg1;
- (_Bool)showingCurrentLocationRow;
- (_Bool)showingTextRow;
- (_Bool)presentModally;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (struct CGSize)preferredContentSize;
- (void)setPreferredContentSize:(struct CGSize)arg1;
- (void)loadView;
- (id)title;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2 calendarItem:(id)arg3 eventStore:(id)arg4;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKParticipant (MobileCal)
- (id)displayNameWithDecomposedFirstName:(id *)arg1 lastName:(id *)arg2 department:(id *)arg3;
- (id)displayName;
@end

@interface EKParticipantForSorting : NSObject
{
    EKParticipant *_participant;
    _Bool _isEmail;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_cachedDisplayName;
}

- (void).cxx_destruct;
- (long long)compare:(id)arg1;
- (id)lastName;
- (id)firstName;
- (id)displayName;
- (_Bool)isEmail;
- (id)participant;
- (id)description;
- (id)initWithEKParticipant:(id)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKPickerTableView : UIView
{
    UIDatePicker *_datePicker;
    UITableView *_tableView;
    _Bool _showsDatePicker;
    _Bool _usesKeyboard;
    id <EKPickerTableViewDelegate> _delegate;
}

@property(nonatomic) _Bool usesKeyboard; // @synthesize usesKeyboard=_usesKeyboard;
@property(nonatomic) _Bool showsDatePicker; // @synthesize showsDatePicker=_showsDatePicker;
@property(nonatomic) __weak id <EKPickerTableViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(readonly, nonatomic) UIDatePicker *datePicker; // @synthesize datePicker=_datePicker;
- (void).cxx_destruct;
- (void)_datePickerDoubleTapped:(id)arg1;
- (id)inputView;
- (void)layoutSubviews;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (double)heightWithDatePickerAndTableHeight:(double)arg1;
- (void)setShowsDatePicker:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)canBecomeFirstResponder;
@property(nonatomic) _Bool usesBlackDatePicker;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 tableViewController:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)_updateTableContentInsetForKeyboard:(id)arg1;
- (struct CGRect)_frameForDatePicker;
- (double)_heightForDatePicker;
- (void)_updateTableContentInset;

@end

@interface EKPlaceholderTextView : UITextView
{
    UILabel *_placeholder;
    _Bool _showingPlaceholder;
}

- (void).cxx_destruct;
- (void)setPlaceholder:(id)arg1;
- (id)placeholder;
- (void)layoutSubviews;
- (void)_updatePlaceholder;
- (id)_placeholderLabel;
- (void)textChanged:(id)arg1;
- (void)setText:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

__attribute__((visibility("hidden")))
@interface EKPreviewSection : NSObject
{
    NSArray *_events;
    NSDate *_date;
}

+ (id)sectionWithDate:(id)arg1;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(readonly, nonatomic) NSArray *events; // @synthesize events=_events;
- (void).cxx_destruct;
- (void)addEvent:(id)arg1;
- (id)initWithDate:(id)arg1;

@end

@interface EKRecurrenceChooserController : NSObject
{
    id <EKRecurrenceChooserControllerDelegate> _delegate;
    NSDate *_date;
}

+ (int)dayFromNumber:(long long)arg1;
@property(copy) NSDate *date; // @synthesize date=_date;
@property __weak id <EKRecurrenceChooserControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)drawBackgroundForRow:(long long)arg1;
- (void)rowTapped:(long long)arg1;
- (id)cellForRow:(long long)arg1;
- (double)heightForRow:(long long)arg1;
- (long long)numberOfRows;
@property(readonly, nonatomic) int frequency;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (void)notifyDelegate;
- (id)startDateComponents:(unsigned long long)arg1;
- (id)initWithDate:(id)arg1;

@end

@interface EKRecurrenceEndEditItemViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate, EKCellShortener>
{
    PreferencesValueCell *_dateCell;
    NSDate *_preNeverEndDate;
    NSDate *_minimumEndDate;
    int _shorteningStatus;
    unsigned int _updatingPicker:1;
    UITableView *_table;
    UIDatePicker *_datePicker;
    UITableViewCell *_datePickerCell;
    NSDate *_repeatEndDate;
    NSDate *_bestInitialDate;
}

@property(copy, nonatomic) NSDate *bestInitialDate; // @synthesize bestInitialDate=_bestInitialDate;
@property(copy, nonatomic) NSDate *repeatEndDate; // @synthesize repeatEndDate=_repeatEndDate;
- (void).cxx_destruct;
- (void)shortenCell:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)_updateSelectionForCell:(id)arg1 atRow:(long long)arg2;
- (id)_cellForRow:(long long)arg1;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)fitsPopoverWhenKeyboardActive;
- (void)datePickerChanged:(id)arg1;
- (void)setMinimumEndDate:(id)arg1;
- (void)applyMinimumEndDateToPicker;
- (void)updatePicker;
- (id)_endDateStringForCurrentShorteningStatus;
- (id)_stringForEndDate;
- (void)_localeChanged;
- (void)viewDidLoad;
- (void)dealloc;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKRecurrenceGridChooserController : EKRecurrenceChooserController <EKUIDividedGridViewControllerDelegate>
{
    EKUIDividedGridViewTableViewCell *_tableViewCell;
}

- (void).cxx_destruct;
- (void)selectCell:(id)arg1 atIndex:(long long)arg2;
- (void)refreshCells;
- (void)prepareForDisplay;
- (long long)gridViewType;
- (id)cellLabels;
- (_Bool)drawBackgroundForRow:(long long)arg1;
- (void)dividedGridViewController:(id)arg1 didSelectCell:(id)arg2 atIndex:(long long)arg3;
- (void)dividedGridViewControllerDidLayout:(id)arg1;
- (double)heightForRow:(long long)arg1;
- (id)cellForRow:(long long)arg1;
- (id)allCells;
- (id)tableViewCell;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKRecurrenceMonthChooserController : EKRecurrenceGridChooserController
{
    NSMutableSet *_monthsOfTheYearSet;
    _Bool _prohibitsMultipleMonthsInYearlyRecurrence;
}

@property(nonatomic) _Bool prohibitsMultipleMonthsInYearlyRecurrence; // @synthesize prohibitsMultipleMonthsInYearlyRecurrence=_prohibitsMultipleMonthsInYearlyRecurrence;
- (void).cxx_destruct;
- (void)selectCell:(id)arg1 atIndex:(long long)arg2;
- (void)refreshCells;
- (void)prepareForDisplay;
- (long long)gridViewType;
- (id)cellLabels;
- (id)tableViewCell;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (int)frequency;
@property(retain, nonatomic) NSArray *monthsOfTheYear;
- (id)initWithDate:(id)arg1;

@end

@interface EKRecurrenceMonthDayChooserController : EKRecurrenceGridChooserController
{
    NSMutableSet *_daysOfTheMonthSet;
    _Bool _prohibitsMultipleDaysInMonthlyRecurrence;
}

@property(nonatomic) _Bool prohibitsMultipleDaysInMonthlyRecurrence; // @synthesize prohibitsMultipleDaysInMonthlyRecurrence=_prohibitsMultipleDaysInMonthlyRecurrence;
- (void).cxx_destruct;
- (void)selectCell:(id)arg1 atIndex:(long long)arg2;
- (void)refreshCells;
- (void)prepareForDisplay;
- (long long)gridViewType;
- (id)cellLabels;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (void)setDaysOfTheMonth:(id)arg1;
- (id)daysOfTheMonth;
- (int)frequency;
- (id)initWithDate:(id)arg1;

@end

@interface EKRecurrenceMonthlyChooserController : EKRecurrenceChooserController
{
    EKRecurrenceMonthDayChooserController *_monthDayChooser;
    EKRecurrenceOrdinalChooserController *_ordinalChooser;
    id <EKRecurrenceChooserControllerDelegate> _delegate;
    long long _selectedRow;
    UITableViewCell *_onEachCell;
    UITableViewCell *_onTheCell;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool prohibitsMultipleDaysInMonthlyRecurrence;
- (void)_selectRow:(long long)arg1;
- (_Bool)drawBackgroundForRow:(long long)arg1;
- (void)rowTapped:(long long)arg1;
- (double)heightForRow:(long long)arg1;
- (id)cellForRow:(long long)arg1;
- (long long)numberOfRows;
- (id)_currentChooser;
- (int)frequency;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (void)setDelegate:(id)arg1;
- (id)initWithDate:(id)arg1;

@end

@interface EKRecurrenceOrdinalChooserController : EKRecurrenceChooserController <EKRecurrenceOrdinalPickerViewControllerDelegate>
{
    EKRecurrenceOrdinalPickerViewController *_pickerViewController;
    UITableViewCell *_cell;
}

- (void).cxx_destruct;
- (void)frequencyPickerUpdated:(id)arg1;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (id)cellForRow:(long long)arg1;
- (double)heightForRow:(long long)arg1;
- (long long)numberOfRows;
- (int)frequency;
- (id)initWithDate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKRecurrenceOrdinalPickerViewController : UIViewController <UIPickerViewDataSource, UIPickerViewDelegate>
{
    id <EKRecurrenceOrdinalPickerViewControllerDelegate> _delegate;
}

@property id <EKRecurrenceOrdinalPickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)_rightColumn;
- (id)_leftColumn;
- (int)ordinalValue;
- (int)dayMask;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
@property(readonly, nonatomic) UIPickerView *pickerView;
- (void)viewDidLoad;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKRecurrenceTypeEditItemViewController : EKEditItemViewController <UITableViewDataSource, UITableViewDelegate>
{
    NSString *_summaryString;
    long long _repeatType;
    UITableView *_table;
    NSIndexPath *_checkedItem;
    EKRecurrenceRule *_recurrenceRule;
    NSDate *_suggestedStartDate;
    id <EKRecurrenceTypeEditItemViewControllerDelegate> _delegate;
    EKUICustomRecurrenceViewController *_customRecurrenceViewController;
    EKCalendarItem *_calendarItem;
}

@property(retain) EKCalendarItem *calendarItem; // @synthesize calendarItem=_calendarItem;
@property(nonatomic) long long repeatType; // @synthesize repeatType=_repeatType;
@property(retain) EKUICustomRecurrenceViewController *customRecurrenceViewController; // @synthesize customRecurrenceViewController=_customRecurrenceViewController;
@property __weak id <EKRecurrenceTypeEditItemViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSDate *suggestedStartDate; // @synthesize suggestedStartDate=_suggestedStartDate;
@property(retain, nonatomic) EKRecurrenceRule *recurrenceRule; // @synthesize recurrenceRule=_recurrenceRule;
- (void).cxx_destruct;
- (void)setRecurrenceRuleFromRepeatType:(long long)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)_recurrenceCellForIndexPath:(id)arg1;
- (void)_checkItemAtIndexPath:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2 calendarItem:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKRecurrenceTypeTableViewCell : EKUIConstrainedFontsTableViewCell
{
    UIView *_checkmarkView;
    _Bool _checked;
}

@property(nonatomic, getter=isChecked) _Bool checked; // @synthesize checked=_checked;
- (void).cxx_destruct;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKRecurrenceWeekdayChooserController : EKRecurrenceChooserController
{
    NSMutableArray *_selectedRows;
    NSMutableArray *_cells;
    NSArray *_daysOfTheWeek;
}

@property(retain, nonatomic) NSArray *daysOfTheWeek; // @synthesize daysOfTheWeek=_daysOfTheWeek;
@property(retain, nonatomic) NSMutableArray *cells; // @synthesize cells=_cells;
- (void).cxx_destruct;
- (int)_dayMask;
- (void)_setCell:(id)arg1 selected:(_Bool)arg2;
- (void)updateFromRecurrenceRule:(id)arg1;
- (void)updateRecurrenceRuleBuilder:(id)arg1;
- (void)rowTapped:(long long)arg1;
- (id)cellForRow:(long long)arg1;
- (double)heightForRow:(long long)arg1;
- (long long)numberOfRows;
- (int)frequency;
- (id)initWithDate:(id)arg1;

@end

@interface EKReminderEditItem : EKCalendarItemEditItem
{
}

- (id)reminder;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;

@end

@interface EKReminderAlertEditItem : EKReminderEditItem <EKReminderLocationPickerModelDelegate, EKReminderLocationPickerDelegate, UIAlertViewDelegate>
{
    UITableViewCell *_dateCell;
    UITableViewCell *_locationCell;
    UITableViewCell *_onArrivalCell;
    UITableViewCell *_onExitCell;
    EKReminderLocationPickerModel *_locationPickerModel;
    UILabel *_explanatoryLabel;
    UIView *_explanatoryLabelContainer;
    _Bool _locationAlertsAvailable;
    UIAlertView *_wifiDisabledAlert;
    _Bool _ignoreLocationPickerModelSelectionChanges;
    _Bool _dontRefreshInnerEditItems;
    EKReminderDueDateEditItem *_dueDateItem;
    EKReminderRecurrenceEditItem *_recurrenceItem;
    _Bool _showsDueDate;
    _Bool _allowsRecurrence;
    struct CGSize _lastSeenFooterSize;
    NSString *_footerString;
    UIView *_footerView;
    UIView *_chevronView;
    UIImageView *_spinnerView;
    _Bool _showsLocation;
    _Bool _isAtALocation;
    _Bool _isOnADay;
    unsigned long long _alertType;
    NSDate *_date;
    EKStructuredLocation *_structuredLocation;
    long long _alarmProximity;
}

@property(nonatomic) long long alarmProximity; // @synthesize alarmProximity=_alarmProximity;
@property(nonatomic) _Bool isOnADay; // @synthesize isOnADay=_isOnADay;
@property(nonatomic) _Bool isAtALocation; // @synthesize isAtALocation=_isAtALocation;
@property(nonatomic) _Bool showsLocation; // @synthesize showsLocation=_showsLocation;
@property(copy, nonatomic) EKStructuredLocation *structuredLocation; // @synthesize structuredLocation=_structuredLocation;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property unsigned long long alertType; // @synthesize alertType=_alertType;
- (void).cxx_destruct;
- (int)_recurrenceOffset;
- (int)_dueDateOffset;
- (_Bool)_isRecurrenceSubitem:(unsigned long long)arg1;
- (_Bool)_isDueDateSubitem:(unsigned long long)arg1;
- (_Bool)_isDatePickerSubitem:(unsigned long long)arg1;
- (_Bool)_shouldShowRecurrence;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;
- (void)setDelegate:(id)arg1;
- (void)setStyleProvider:(id)arg1;
- (void)reset;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)locationPickerRequiresHeightChange:(id)arg1;
- (void)locationPickerModel:(id)arg1 didEncounterError:(id)arg2;
- (void)locationPickerModelDidChangeSelection:(id)arg1;
- (void)locationPickerModelDidUpdateCustomLocation:(id)arg1;
- (void)locationPickerModelDidUpdateCurrentLocation:(id)arg1;
- (void)locationPickerModel:(id)arg1 didUpdateMeCardItem:(long long)arg2;
- (void)_selectedItemChangedInModel:(id)arg1;
- (_Bool)isShowingLocation;
- (void)_setAlarmProximity:(long long)arg1 updateTable:(_Bool)arg2;
- (void)_setCell:(id)arg1 checked:(_Bool)arg2;
- (id)_cellForProximity:(long long)arg1;
- (void)_setIsAtALocation:(_Bool)arg1 updateTable:(_Bool)arg2 updateReminder:(_Bool)arg3;
- (void)_deselectDatePickerRowIfSelected;
- (void)_wifiStatusDidChange:(id)arg1;
- (void)_showWifiAlertIfNecessary;
- (void)_removeExistingWifiAlert;
- (void)_datePickerDateChanged:(id)arg1;
- (void)_setDate:(id)arg1 updateTable:(_Bool)arg2 updateReminder:(_Bool)arg3;
- (struct _NSRange)_rowsForDueDate;
- (void)_setStructuredLocation:(id)arg1 updateModel:(_Bool)arg2;
- (void)_localeChanged;
- (void)_isAtALocationChanged:(id)arg1;
- (void)_isOnADayChanged:(id)arg1;
- (void)_setIsOnADay:(_Bool)arg1 updateTable:(_Bool)arg2 animateDatePicker:(_Bool)arg3 updateReminder:(_Bool)arg4;
- (void)_dismissDatePickerAnimated:(_Bool)arg1;
- (void)_presentDatePickerAnimated:(_Bool)arg1;
- (void)_updateFooterString;
- (void)_updateFooterStringAndUpdateHeight:(_Bool)arg1;
- (void)_updateLocationTextAndAccessoryView;
- (void)_updateDateText;
- (void)_updateDateTextOnCell:(id)arg1;
- (id)_locationPickerModel;
- (void)_updateReminderFromInlineSubitem:(unsigned long long)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1;
- (void)_cleanupAndCommitFromSubitem:(unsigned long long)arg1 wasAllDay:(_Bool)arg2;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (id)_setupLocationPickerCell;
- (id)_makeSwitchCell:(_Bool)arg1;
- (id)_getProximityCellAtIndex:(unsigned long long)arg1;
- (void)editor:(id)arg1 didStartEditingItem:(id)arg2;
- (void)editorDidScroll:(id)arg1;
- (void)editor:(id)arg1 didDeselectSubitem:(unsigned long long)arg2;
- (void)editor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (_Bool)editor:(id)arg1 canSelectSubitem:(unsigned long long)arg2;
- (_Bool)editor:(id)arg1 shouldClearSelectionFromSubitem:(unsigned long long)arg2;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;
- (unsigned long long)numberOfSubitems;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)footerView;
- (id)_footerLabel;
- (double)footerHeightForWidth:(double)arg1;
- (id)_footerString;
- (void)applicationDidResume;
- (_Bool)configureForCalendarConstraints:(id)arg1;
- (void)refreshFromCalendarItemAndStore;
- (id)_reasonableAlarmDateForDueDate:(id)arg1;
- (id)_alarmDateFromReminder:(id)arg1 withAlarm:(id)arg2;
- (void)_updateShowsDueDate;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKReminderChangeVisibilityEditItem : EKReminderEditItem
{
    int _visibilityToCommit;
}

@property(readonly, nonatomic) int visibilityToCommit;
- (void)editor:(id)arg1 didSelectSubitem:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (_Bool)editor:(id)arg1 shouldClearSelectionFromSubitem:(unsigned long long)arg2;
- (_Bool)usesDetailViewControllerForSubitem:(unsigned long long)arg1;

@end

@interface EKReminderDueDateEditItem : EKReminderEditItem
{
}

- (_Bool)editItemViewControllerCommit:(id)arg1;
- (_Bool)editItemViewControllerCommit:(id)arg1 notify:(_Bool)arg2;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;

@end

@interface EKReminderDueDateEditViewController : EKEditItemViewController <UITableViewDelegate, UITableViewDataSource, EKPickerTableViewDelegate>
{
    NSDate *_dueDate;
    _Bool _hasDueDate;
    _Bool _isAllDay;
    _Bool _shouldShowAllDay;
    EKPickerTableView *_container;
}

- (void).cxx_destruct;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willDeselectRowAtIndexPath:(id)arg2;
- (void)_updateDueDateString;
- (void)_updateDueDateStringForCell:(id)arg1;
- (void)_updateDatePickerMode;
- (void)_updateDatePickerDate;
- (void)_updateDatePickerPresenceAnimated:(_Bool)arg1;
- (void)_updateEnabledState;
- (void)pickerTableViewDidChangeDatePickerInterval:(id)arg1;
- (void)_datePickerChanged:(id)arg1;
- (void)_isAllDayChanged:(id)arg1;
- (void)_hasDueDateChanged:(id)arg1;
- (void)_localeChanged;
- (void)setShouldShowAllDay:(_Bool)arg1;
- (_Bool)isAllDay;
- (void)setIsAllDay:(_Bool)arg1;
- (_Bool)hasDueDate;
- (void)setHasDueDate:(_Bool)arg1;
- (void)_setIsAllDay:(_Bool)arg1 updateSwitch:(_Bool)arg2;
- (void)_setHasDueDate:(_Bool)arg1 updateSwitch:(_Bool)arg2 updateTableAnimated:(_Bool)arg3;
- (id)dueDate;
- (void)setDueDate:(id)arg1;
- (void)_setDueDate:(id)arg1 updateDatePicker:(_Bool)arg2;
- (void)loadView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKReminderEditor : EKCalendarItemEditor
{
    id <EKStyleProvider> _styleProvider;
    id <EKReminderEditorDelegate> _reminderEditorDelegate;
}

@property(nonatomic) __weak id <EKReminderEditorDelegate> reminderEditorDelegate; // @synthesize reminderEditorDelegate=_reminderEditorDelegate;
@property(retain, nonatomic) id <EKStyleProvider> styleProvider; // @synthesize styleProvider=_styleProvider;
- (void).cxx_destruct;
- (_Bool)_canDetachSingleOccurrence;
- (void)_revertEvent;
- (void)_copyEventForPossibleRevert;
- (void)scrollViewDidScroll:(id)arg1;
- (void)editItemTextChanged:(id)arg1;
- (void)editItem:(id)arg1 didEndDatePickingAnimated:(_Bool)arg2;
- (void)editItem:(id)arg1 willBeginDatePickingWithDate:(id)arg2 action:(SEL)arg3 animated:(_Bool)arg4 forSubitem:(unsigned long long)arg5;
- (_Bool)shouldDisplayEditItem:(id)arg1 withVisibility:(int)arg2;
- (unsigned long long)entityType;
- (id)notificationNamesForLocaleChange;
- (id)defaultAlertTitle;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)marginForTableView:(id)arg1;
- (_Bool)allowsDeletingFutureOccurrences;
- (void)customizeActionSheet:(id)arg1;
- (id)defaultTitleForCalendarItem;
- (id)preferredTitle;
- (void)editItem:(id)arg1 didCommitFromDetailViewController:(_Bool)arg2;
- (id)_viewForSheet;
- (void)setupDeleteButton;
- (id)_nameForDeleteButton;
- (_Bool)saveCalendarItemWithSpan:(int)arg1 error:(id *)arg2;
- (void)prepareEditItems;
- (id)_editItems;
- (void)loadView;
@property(retain, nonatomic) EKReminder *reminder;

@end

@interface EKReminderInlineEditItem : EKReminderEditItem <EKExpandingTextViewDelegate>
{
    EKReminderInlineEditItemCell *_cell;
    _Bool _isListeningToHeightChanges;
}

- (void).cxx_destruct;
- (void)textViewDidChangeContentHeight:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (id)textFromReminder;
- (long long)cellStyle;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (double)defaultCellHeightForSubitemAtIndex:(unsigned long long)arg1 forWidth:(double)arg2;
- (id)newCell;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (void)_applyStylesFromStyleProviderToTextView:(id)arg1;
- (_Bool)shouldPinKeyboard;
- (_Bool)isInline;
- (void)dealloc;
- (id)init;
- (void)_keyboardDidShow:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKReminderInlineEditItemCell : UITableViewCell
{
    double _lastSeenContentWidth;
    EKExpandingTextView *_textView;
    double _verticalPadding;
}

@property(nonatomic) double verticalPadding; // @synthesize verticalPadding=_verticalPadding;
@property(readonly, nonatomic) EKExpandingTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (double)heightNeededForContentWidth:(double)arg1;
- (double)_textViewWidthForContentWidth:(double)arg1;
@property(copy, nonatomic) NSString *placeholder;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKReminderLocationItem : NSObject
{
    _Bool _isLocationBeingDetermined;
    int _type;
    EKStructuredLocation *_location;
    NSDictionary *_addressDictionary;
}

@property(nonatomic) int type; // @synthesize type=_type;
@property(nonatomic) _Bool isLocationBeingDetermined; // @synthesize isLocationBeingDetermined=_isLocationBeingDetermined;
@property(retain, nonatomic) NSDictionary *addressDictionary; // @synthesize addressDictionary=_addressDictionary;
@property(retain, nonatomic) EKStructuredLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (void)reset;
- (id)stringForSubtitle;
- (id)label;
- (id)description;

@end

@interface EKReminderLocationMapViewController : UIViewController
{
    struct CGRect _mapViewFrame;
    EKStructuredLocation *_location;
}

- (void).cxx_destruct;
- (void)loadView;
- (id)initWithFrame:(struct CGRect)arg1 location:(id)arg2;

@end

@interface EKReminderLocationPicker : UITableViewController <ABPeoplePickerNavigationControllerDelegate, EKReminderLocationPickerModelDelegate, UIAlertViewDelegate, UITextFieldDelegate, EKReminderLocationPickerCellButtonHandler>
{
    EKReminderLocationPickerModel *_model;
    id <EKStyleProvider> _styleProvider;
    long long _savedStatusBarStyle;
    UIAlertView *_meCardAlert;
    EKReminderLocationPickerCell *_currentLocationCell;
    EKReminderLocationPickerCell *_typedLocationCell;
    _Bool _hasEditedText;
    _Bool _isShowingPeopleAddressPicker;
    _Bool _allowsShowInMap;
    _Bool _isEditingContactAddress;
    _Bool _ignoreNextSelectionChange;
    id <EKReminderLocationPickerDelegate> _locationPickerDelegate;
}

@property(nonatomic) __weak id <EKReminderLocationPickerDelegate> locationPickerDelegate; // @synthesize locationPickerDelegate=_locationPickerDelegate;
- (void).cxx_destruct;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textFieldClearButtonPressed:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (void)textFieldDidBeginEditing:(id)arg1;
- (void)_typedLocationCellTextDidChange;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)_presentPersonPicker;
- (void)peoplePickerNavigationControllerDidCancel:(id)arg1;
- (_Bool)peoplePickerNavigationController:(id)arg1 shouldContinueAfterSelectingPerson:(void *)arg2 withLinkedPeople:(struct __CFArray *)arg3;
- (void)_dismissPeoplePicker;
- (void)_setLocationFromRecord:(void *)arg1 multiValueIdentifier:(int)arg2;
- (void)failureButtonPressed;
- (void)contactsButtonPressed;
- (void)locationPickerModelDidChangeSelection:(id)arg1;
- (void)locationPickerModelDidUpdateCustomLocation:(id)arg1;
- (void)locationPickerModel:(id)arg1 didUpdateMeCardItem:(long long)arg2;
- (void)locationPickerModelDidUpdateCurrentLocation:(id)arg1;
- (void)locationPickerModel:(id)arg1 didEncounterError:(id)arg2;
- (void)locationPickerModelDidEndOperation:(id)arg1;
- (void)locationPickerModelDidBeginOperation:(id)arg1;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)_prepareCurrentLocationCell;
- (id)_prepareTypedLocationCell;
- (int)_accessoryTypeForLocationItem:(id)arg1 isSelected:(_Bool)arg2;
- (void)_styleCell:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)_indexPathForSelectedItem;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)marginForTableView:(id)arg1;
- (void)_updateAccessoryViewForTypedLocation;
- (void)_reloadCustomLocationRow;
- (_Bool)_shouldShowTypedLocation;
- (_Bool)_isCustomLocationRow:(id)arg1;
- (void)_setCell:(id)arg1 checked:(_Bool)arg2;
- (struct CGSize)preferredContentSize;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_showPickMeCardAlertIfNecessary;
- (void)_removeExistingMeCardAlert;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithModel:(id)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKReminderLocationPickerCell : UITableViewCell
{
    UIImageView *_spinner;
    UIImageView *_checkmark;
    UIButton *_failureButton;
    UIButton *_contactsButton;
    id <EKReminderLocationPickerCellButtonHandler> _buttonHandler;
    id <EKStyleProvider> _styleProvider;
    int _locationPickerCellAccessoryType;
}

@property(nonatomic) int locationPickerCellAccessoryType; // @synthesize locationPickerCellAccessoryType=_locationPickerCellAccessoryType;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)_failPressedImage;
- (id)_failImage;
- (id)_exclamationGlyphImage;
- (id)initWithStyle:(long long)arg1 buttonHandler:(id)arg2 styleProvider:(id)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKReminderLocationPickerModel : NSObject <CLLocationManagerDelegate>
{
    CLGeocoder *_geocoder;
    CLLocationManager *_locationManager;
    _Bool _needsUpdate;
    _Bool _isReverseGeocoding;
    void *_addressBook;
    NSArray *_locationItemsForMe;
    _Bool _meCardIsSet;
    int _operationCount;
    struct __CFArray *_delegates;
    NSMutableArray *_itemsQueuedForGeocoding;
    _Bool _isReverseGeocodingQueued;
    long long _selectedMeCardItem;
    int _selectedItemType;
    EKReminderLocationItem *_currentLocationItem;
    EKReminderLocationItem *_customLocationItem;
    EKReminderLocationItem *_itemBeingGeocoded;
}

@property(retain, nonatomic) EKReminderLocationItem *itemBeingGeocoded; // @synthesize itemBeingGeocoded=_itemBeingGeocoded;
@property(retain, nonatomic) EKReminderLocationItem *customLocationItem; // @synthesize customLocationItem=_customLocationItem;
@property(readonly, nonatomic) _Bool meCardIsSet; // @synthesize meCardIsSet=_meCardIsSet;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (id)_stringForAuthorizationStatus:(int)arg1;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)_endUpdatingCurrentLocation;
- (void)selectCustomLocation;
- (void)selectMeCardItem:(long long)arg1;
- (void)selectCurrentLocation;
- (id)meCardItemAtIndex:(long long)arg1;
- (long long)numberOfMeCardItems;
- (long long)selectedMeCardItem;
- (_Bool)isCustomLocationSelected;
- (_Bool)isCurrentLocationSelected;
- (long long)numberOfPossibleLocationItems;
@property(readonly, nonatomic) EKReminderLocationItem *currentLocationItem; // @synthesize currentLocationItem=_currentLocationItem;
- (id)selectedLocationItem;
- (void)selectLocation:(id)arg1;
- (void)setCustomLocation:(id)arg1 withAddressDictionary:(id)arg2;
- (void)selectLocation:(id)arg1 withAddressDictionary:(id)arg2;
- (void)startUpdatingLocationItemsIfNecessary;
- (void)_giveUpGettingCurrentLocation;
- (void)_cancelUpdatingCurrentLocation;
- (void)_handleGeocodingAllItems;
- (void)_geocodeItem:(id)arg1;
- (void)_handleCompletedGeocodeWithPlacemarks:(id)arg1 error:(id)arg2;
- (void)_reverseGeocodeCurrentLocation;
- (void)_startNextGeocoderOperation;
- (_Bool)_isGeocoding;
- (id)cachedLocationForAddressDictionary:(id)arg1;
- (void)_cacheLocation:(id)arg1 forAddressDictionary:(id)arg2;
- (void)_didEncounterError:(id)arg1;
- (void)_didUpdateCustomLocationItem;
- (void)_didUpdateMeCardItem:(long long)arg1;
- (void)_didUpdateCurrentLocationItem;
- (void)_didChangeSelection;
- (void)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)_killTimer;
- (void)reloadMeCardLocationItems;
@property(readonly, nonatomic) void *addressBook;
- (void)_endOperation;
- (void)_beginOperation;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKReminderNotesInlineEditItem : EKReminderInlineEditItem
{
}

- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (long long)cellStyle;
- (id)textFromReminder;
- (id)newCell;
- (_Bool)shouldAppearWithVisibility:(int)arg1;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;

@end

@interface EKReminderPriorityEditItem : EKReminderEditItem
{
}

- (_Bool)editItemViewControllerCommit:(id)arg1;
- (id)cellForSubitemAtIndex:(unsigned long long)arg1;
- (id)detailViewControllerWithFrame:(struct CGRect)arg1 forSubitemAtIndex:(unsigned long long)arg2;
- (_Bool)shouldAppearWithVisibility:(int)arg1;

@end

@interface EKReminderPriorityEditViewController : EKEditItemViewController <UITableViewDelegate, UITableViewDataSource>
{
    UITableView *_tableView;
    unsigned long long _priority;
}

@property(nonatomic) unsigned long long priority; // @synthesize priority=_priority;
- (void).cxx_destruct;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)loadView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 styleProvider:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKReminderRecurrenceEditItem : EKCalendarItemRecurrenceEditItem
{
}

- (id)minRecurrenceEndDate;
- (id)recurrenceTimeZone;
- (id)recurrenceDate;
- (id)stringForDate:(id)arg1;
- (id)reminder;
- (void)setCalendarItem:(id)arg1 store:(id)arg2;

@end

@interface EKReminderShowLessEditItem : EKReminderChangeVisibilityEditItem
{
}

- (int)visibilityToCommit;

@end

@interface EKReminderShowMoreEditItem : EKReminderChangeVisibilityEditItem
{
}

- (int)visibilityToCommit;

@end

@interface EKReminderTitleInlineEditItem : EKReminderInlineEditItem
{
}

- (_Bool)saveAndDismissWithForce:(_Bool)arg1;
- (id)textFromReminder;
- (long long)cellStyle;
- (id)newCell;
- (void)addStylingToCell:(id)arg1 forSubitemAtIndex:(unsigned long long)arg2;

@end

@interface EKReminderViewController : UIViewController <EKCalendarItemEditorDelegate, EKReminderEditorDelegate, EKPickerTableViewDelegate>
{
    double _minimumTableHeight;
    _Bool _shouldShowDatePicker;
    id _datePickerTarget;
    SEL _datePickerAction;
    id <EKReminderViewControllerDelegate> _delegate;
    EKReminderEditor *_editor;
}

@property(retain, nonatomic) EKReminderEditor *editor; // @synthesize editor=_editor;
@property(nonatomic) __weak id <EKReminderViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)getCurrentContext;
- (_Bool)allowContextProvider:(id)arg1;
- (void)_eventStoreChanged:(id)arg1;
- (void)pickerTableViewDidChangeDatePickerInterval:(id)arg1;
- (void)editor:(id)arg1 didChangeHeightAnimated:(_Bool)arg2;
- (void)editor:(id)arg1 didCompleteWithAction:(int)arg2;
- (void)editItemChanged;
- (void)didEndDatePickingWithTarget:(id)arg1 animated:(_Bool)arg2;
- (void)willBeginDatePickingWithDate:(id)arg1 target:(id)arg2 action:(SEL)arg3 animated:(_Bool)arg4 minimumTableHeight:(double)arg5;
- (void)viewSizeChangedAnimated:(_Bool)arg1;
- (id)viewForActionSheet;
- (void)saveReminderAnimated:(_Bool)arg1;
@property(retain, nonatomic) id <EKStyleProvider> styleProvider;
@property(retain, nonatomic) EKEventStore *eventStore;
@property(retain, nonatomic) EKReminder *reminder;
- (struct CGSize)preferredContentSize;
- (id)navigationItem;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKShareePickerViewController : UIViewController <EKEventAttendeePickerDelegate>
{
    EKCalendarShareePicker *_picker;
    id <EKShareePickerViewControllerDelegate> _delegate;
}

+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(nonatomic) __weak id <EKShareePickerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (int)eventAttendeePicker:(id)arg1 getValidationStatusForEmailAddress:(id)arg2;
- (void)eventAttendeePicker:(id)arg1 cacheValidationStatus:(int)arg2 forEmail:(id)arg3;
- (struct CGSize)preferredContentSize;
@property(copy, nonatomic) NSArray *sharees;
- (id)_recipientFromSharee:(id)arg1;
- (id)_shareeFromRecipient:(id)arg1;
- (void)add;
- (void)cancel;
- (void)viewDidLoad;
- (void)setSearchAccountID:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKShareeViewController : UITableViewController
{
    UIAlertController *_removeAlertController;
    _Bool _allowEditing;
    _Bool _allowStopSharing;
    _Bool _allowResendInvitations;
    EKSharee *_sharee;
    id <EKShareeViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <EKShareeViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool allowResendInvitations; // @synthesize allowResendInvitations=_allowResendInvitations;
@property(nonatomic) _Bool allowStopSharing; // @synthesize allowStopSharing=_allowStopSharing;
@property(nonatomic) _Bool allowEditing; // @synthesize allowEditing=_allowEditing;
@property(retain, nonatomic) EKSharee *sharee; // @synthesize sharee=_sharee;
- (void).cxx_destruct;
- (void)removeClicked:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (struct CGSize)preferredContentSize;
- (void)_allowEditingChanged:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)_reloadTitle;
- (long long)_rowForSubitem:(int)arg1;
- (int)_subitemAtRow:(long long)arg1;
- (_Bool)_shouldDisplayStopSharingButton;
- (_Bool)_shouldDisplayResendInvitationButton;
- (id)initWithSharee:(id)arg1;

@end

@interface EKStrikethroughLabel : UILabel
{
    _Bool _drawsStrikethrough;
}

@property(nonatomic) _Bool drawsStrikethrough; // @synthesize drawsStrikethrough=_drawsStrikethrough;
- (void)setText:(id)arg1;

@end

@interface EKStringFactory : NSObject
{
    struct __CFDateFormatter *_dayFormatter;
    struct __CFDateFormatter *_abbrevDayFormatter;
    struct __CFDateFormatter *_timeFormatter;
    struct __CFDateFormatter *_standardTimeFormatter;
    struct __CFDateFormatter *_customFormatter;
    struct __CFDateFormatter *_fullStyleDateFormatter;
    struct __CFDateFormatter *_dayOfWeekFormatter;
    NSMutableDictionary *_longFormatters;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)dateStringForEventInvitationWithStartDate:(id)arg1 endDate:(id)arg2 timeZone:(id)arg3 allDay:(_Bool)arg4;
- (id)dateStringForEventInvitation:(id)arg1 timeZone:(id)arg2;
- (id)_stringForDateTime:(CDStruct_79f9e052)arg1 timeZone:(struct __CFTimeZone *)arg2;
- (id)_stringForTime:(CDStruct_79f9e052)arg1;
- (id)dateStringForDate:(double)arg1 allDay:(_Bool)arg2 standalone:(_Bool)arg3 shortFormat:(_Bool)arg4;
- (id)dateStringForDate:(double)arg1 allDay:(_Bool)arg2 shortFormat:(_Bool)arg3;
- (id)timeStringForDate:(double)arg1 inTimeZone:(id)arg2;
- (id)_timeStringForDate:(double)arg1;
- (id)_dayStringForDate:(double)arg1 allDay:(_Bool)arg2 shortFormat:(_Bool)arg3 lowercase:(_Bool)arg4;
- (id)_stringForDay:(CDStruct_79f9e052)arg1 withLongFormatString:(id)arg2 useAbbreviatedFormats:(_Bool)arg3 lowerCase:(_Bool)arg4;
- (struct __CFDateFormatter *)formatterForLongFormat:(id)arg1;
- (struct __CFDateFormatter *)dayOfWeekFormatter;
- (struct __CFDateFormatter *)fullStyleDateFormatter;
- (struct __CFDateFormatter *)standardTimeFormatter;
- (struct __CFDateFormatter *)abbreviatedDayFormatter;
- (struct __CFDateFormatter *)dayFormatter;
- (struct __CFDateFormatter *)timeFormatter;
- (struct __CFDateFormatter *)_customFormatter;
- (void)_localeChanged:(id)arg1;
- (void)_invalidateFormatters;
- (void)dealloc;
- (id)init;

@end

@interface EKStructuredLocation (MobileCal)
- (id)humanReadableContactString;
@end

@interface EKTextViewWithLabelTextMetrics : UITextView <CalendarLabelTextMetrics>
{
    long long lineBreakMode;
}

@property(nonatomic) long long lineBreakMode; // @synthesize lineBreakMode;
- (struct CGRect)textRectForBounds:(struct CGRect)arg1 limitedToNumberOfLines:(long long)arg2;
@property(nonatomic) long long numberOfLines;
- (void)setURL:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(retain, nonatomic) UIFont *font; // @dynamic font;
@property(copy, nonatomic) NSString *text; // @dynamic text;
@property(nonatomic) long long textAlignment;
@property(retain, nonatomic) UIColor *textColor;

@end

@interface EKTimeZoneViewController : UITableViewController <UISearchControllerDelegate>
{
    UISearchController *_searchController;
    int _style;
    int _chooserStyle;
    id <EKTimeZoneViewControllerDelegate> _delegate;
    NSTimeZone *_timeZone;
    NSArray *_cities;
}

@property(retain, nonatomic) NSArray *cities; // @synthesize cities=_cities;
@property(readonly, nonatomic) int chooserStyle; // @synthesize chooserStyle=_chooserStyle;
@property(copy, nonatomic) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(nonatomic) __weak id <EKTimeZoneViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)willDismissSearchController:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (struct CGSize)preferredContentSize;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithChooserStyle:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKTimeZoneSearchResultsController : EKTimeZoneViewController <UISearchResultsUpdating>
{
}

- (void)updateSearchResultsForSearchController:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKTravelRouteEstimationController : NSObject
{
    EKEventStore *_eventStore;
    id <EKStyleProvider> _styleProvider;
    EKStructuredLocation *_originStructuredLocation;
    NSMutableArray *_rows;
    _Bool _isEstimating;
    id <EKTravelRouteEstimationControllerDelegate> _delegate;
    NSDate *_arrivalDate;
    EKStructuredLocation *_destinationStructuredLocation;
    EKStructuredLocation *_evaluatedOriginLocation;
    NSDictionary *_travelTimeEstimatedValues;
    NSDictionary *_travelTimeLookupErrors;
}

@property(retain) NSDictionary *travelTimeLookupErrors; // @synthesize travelTimeLookupErrors=_travelTimeLookupErrors;
@property(retain) NSDictionary *travelTimeEstimatedValues; // @synthesize travelTimeEstimatedValues=_travelTimeEstimatedValues;
@property(retain) EKStructuredLocation *evaluatedOriginLocation; // @synthesize evaluatedOriginLocation=_evaluatedOriginLocation;
@property _Bool isEstimating; // @synthesize isEstimating=_isEstimating;
@property(retain) EKStructuredLocation *destinationStructuredLocation; // @synthesize destinationStructuredLocation=_destinationStructuredLocation;
@property(retain) NSDate *arrivalDate; // @synthesize arrivalDate=_arrivalDate;
@property(nonatomic) __weak id <EKTravelRouteEstimationControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)estimatedTravelTimeTableViewCellWithRowIndex:(unsigned long long)arg1;
- (id)_imageForCellAtIndex:(unsigned long long)arg1;
- (long long)estimatedTravelTimeRoutingModeAtRowIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long numberOfOutputRows;
- (_Bool)estimatedTravelTimeRowHasErrorAtRowIndex:(unsigned long long)arg1;
- (id)estimatedTravelTimeRowErrorAtRowIndex:(unsigned long long)arg1;
- (double)estimatedTravelTimeValueAtRowIndex:(unsigned long long)arg1;
@property(retain, nonatomic) EKStructuredLocation *originStructuredLocation;
- (void)_lookupTimedOut;
- (void)beginTravelTimeEstimationLookup;
- (id)_routingModeTypesAsEnum;
- (void)_originLocationEstimationCompletedCoreRoutineLookup;
- (void)_originLocationEstimationCompletedEventKitLookup;
- (void)_beginOriginLocationEstimationEventKitLookup;
- (void)_beginOriginLocationEstimationCoreRoutineLookup;
- (void)beginOriginLocationEstimationLookup;
- (void)dealloc;
- (id)initWithDestinationStructuredLocation:(id)arg1 styleProvider:(id)arg2 eventStore:(id)arg3;

@end

@interface EKUIAlarm : NSObject
{
    _Bool _isLeaveNowAlarm;
    EKAlarm *_alarm;
}

@property(readonly, nonatomic) EKAlarm *alarm; // @synthesize alarm=_alarm;
@property(readonly, nonatomic) _Bool isLeaveNowAlarm; // @synthesize isLeaveNowAlarm=_isLeaveNowAlarm;
- (void).cxx_destruct;
- (id)localizedDescriptionAllDay:(_Bool)arg1;
- (id)description;
- (id)initLeaveNowAlarm;
- (id)initWithAlarm:(id)arg1;

@end

@interface EKUIAvailabilityUtilities : NSObject
{
}

+ (long long)_orderForType:(long long)arg1;
+ (_Bool)showTypeAsBusy:(long long)arg1;
+ (_Bool)spansIncludeBusyPeriod:(id)arg1;
+ (long long)summarizedAvailabilityTypeForSpans:(id)arg1;

@end

@interface EKUIConferenceRoom : NSObject
{
    _Bool _supportsAvailability;
    _Bool _availabilityRequestInProgress;
    EKDirectoryLocation *_location;
    long long _availability;
}

@property(nonatomic) long long availability; // @synthesize availability=_availability;
@property(nonatomic) _Bool availabilityRequestInProgress; // @synthesize availabilityRequestInProgress=_availabilityRequestInProgress;
@property(nonatomic) _Bool supportsAvailability; // @synthesize supportsAvailability=_supportsAvailability;
@property(retain, nonatomic) EKDirectoryLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (id)init;

@end

@interface EKUIConferenceRoomSearchResultCell : UITableViewCell
{
    UILabel *_title;
    UIImageView *_image;
    UIActivityIndicatorView *_spinner;
}

- (void).cxx_destruct;
- (void)reloadWithConferenceRoom:(id)arg1;
- (id)description;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIConstrainedFontUtilities : NSObject
{
}

+ (id)constrainedBodyBoldTextLabelFont;
+ (id)constrainedCaption1TextLabelFont;
+ (id)constrainedBodyTextLabelFont;
+ (void)clearFontCaches;
+ (void)initialize;

@end

@interface EKUICustomRecurrenceIntervalViewController : UIViewController <UIPickerViewDataSource, UIPickerViewDelegate>
{
    UIPickerView *_pickerView;
    _Bool _maximumInterval;
    int _frequency;
    long long _interval;
    CDUnknownBlockType _changeBlock;
}

@property(copy) CDUnknownBlockType changeBlock; // @synthesize changeBlock=_changeBlock;
@property(nonatomic) _Bool maximumInterval; // @synthesize maximumInterval=_maximumInterval;
@property(nonatomic) long long interval; // @synthesize interval=_interval;
@property(nonatomic) int frequency; // @synthesize frequency=_frequency;
- (void).cxx_destruct;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (id)pickerView;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithSelectedInterval:(long long)arg1 frequency:(int)arg2 changeBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUICustomRecurrenceViewController : UIViewController <UITableViewDataSource, UITableViewDelegate, UIPickerViewDelegate, UIPickerViewDataSource, EKRecurrenceChooserControllerDelegate>
{
    int _cachedFrequency;
    long long _cachedInterval;
    EKRecurrenceRule *_cachedRecurrenceRule;
    _Bool _showingFrequencyPicker;
    _Bool _showingIntervalPicker;
    UITableViewCell *_frequencySummaryCell;
    UITableViewCell *_intervalSummaryCell;
    _Bool _prohibitsYearlyRecurrenceInterval;
    CDUnknownBlockType _completionBlock;
    UITableView *_tableView;
    EKRecurrenceChooserController *_currentChooser;
    EKRecurrenceWeekdayChooserController *_weeklyChooser;
    EKRecurrenceMonthlyChooserController *_monthlyChooser;
    EKRecurrenceMonthChooserController *_yearlyChooser;
    EKRecurrenceOrdinalChooserController *_yearlyOrdinalChooser;
    NSDate *_startDate;
    NSTimeZone *_timeZone;
    UIPickerView *_frequencyPickerView;
    EKUICustomRecurrenceIntervalViewController *_intervalPickerViewController;
    UISwitch *_yearOrdinalSwitch;
    NSString *_recurrenceSummaryString;
}

+ (_Bool)isRecurrenceRuleOrdinal:(id)arg1;
+ (_Bool)_shouldForwardViewWillTransitionToSize;
@property(copy) NSString *recurrenceSummaryString; // @synthesize recurrenceSummaryString=_recurrenceSummaryString;
@property(retain) UISwitch *yearOrdinalSwitch; // @synthesize yearOrdinalSwitch=_yearOrdinalSwitch;
@property(retain) EKUICustomRecurrenceIntervalViewController *intervalPickerViewController; // @synthesize intervalPickerViewController=_intervalPickerViewController;
@property(retain) UIPickerView *frequencyPickerView; // @synthesize frequencyPickerView=_frequencyPickerView;
@property(retain) NSTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(retain) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain) EKRecurrenceOrdinalChooserController *yearlyOrdinalChooser; // @synthesize yearlyOrdinalChooser=_yearlyOrdinalChooser;
@property(retain) EKRecurrenceMonthChooserController *yearlyChooser; // @synthesize yearlyChooser=_yearlyChooser;
@property(retain) EKRecurrenceMonthlyChooserController *monthlyChooser; // @synthesize monthlyChooser=_monthlyChooser;
@property(retain) EKRecurrenceWeekdayChooserController *weeklyChooser; // @synthesize weeklyChooser=_weeklyChooser;
@property __weak EKRecurrenceChooserController *currentChooser; // @synthesize currentChooser=_currentChooser;
@property(retain) UITableView *tableView; // @synthesize tableView=_tableView;
@property(copy) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property _Bool prohibitsYearlyRecurrenceInterval; // @synthesize prohibitsYearlyRecurrenceInterval=_prohibitsYearlyRecurrenceInterval;
- (void).cxx_destruct;
- (void)_setShowingIntervalPicker:(_Bool)arg1;
- (void)_setShowingFrequencyPicker:(_Bool)arg1;
- (void)_collapseAllPickers;
- (void)_toggleInlineSpinnerForTag:(long long)arg1;
- (long long)_numberOfRowsForSection:(long long)arg1;
- (long long)_tagForIndexPath:(id)arg1;
- (id)_stringForFrequency:(int)arg1 interval:(long long)arg2;
- (id)_stringForFrequency:(int)arg1;
- (void)_yearOrdinalSwitchChanged:(id)arg1;
- (id)_chooserForFrequency:(int)arg1;
- (void)_updateIntervalPicker;
- (void)_frequencyPickerViewUpdated;
- (void)_updateFrequencyRows;
- (void)_updateTableSectionsFromFrequency:(int)arg1 toFrequency:(int)arg2;
- (void)_updateCustomPickerView;
- (void)_updateSummaryLabel;
@property(nonatomic) _Bool prohibitsMultipleMonthsInYearlyRecurrence;
@property(nonatomic) _Bool prohibitsMultipleDaysInMonthlyRecurrence;
- (void)_refreshCacheAndPickers;
- (void)setRecurrenceRule:(id)arg1 shouldUpdatePickers:(_Bool)arg2;
- (void)setRecurrenceRule:(id)arg1;
- (id)recurrenceRule;
- (void)_updateRecurrenceRule;
- (void)recurrenceChooser:(id)arg1 wantsRowReload:(long long)arg2;
- (void)recurrenceChooserWantsReload:(id)arg1;
- (void)recurrenceChooserUpdated:(id)arg1;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)_createChoosersAndControls;
- (void)loadView;
- (id)initWithStartDate:(id)arg1 timeZone:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIDebugPreferences : NSObject
{
    CalPreferences *_preferences;
}

+ (id)shared;
- (void).cxx_destruct;
@property(nonatomic) _Bool verifyIntegrityOfAvailabilityTimeSearchTimelines;
@property(nonatomic) _Bool showInviteesAndMoreRegion;
- (id)init;

@end

@interface EKUIDeclineCommentController : NSObject
{
    UIAlertView *_alertView;
    CDUnknownBlockType _completionBlock;
}

+ (id)presentDeclineCommentAlertWithOrganizer:(id)arg1 currentComment:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
+ (id)_newDeclineCommentControllerWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void).cxx_destruct;
- (void)dismissAnimated:(_Bool)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)_completeWithButtonIndex:(long long)arg1 animated:(_Bool)arg2;
- (void)_presentAlertWithOrganizer:(id)arg1 currentComment:(id)arg2;
- (void)dealloc;

@end

@interface EKUIDividedGridView : UIView
{
    EKUIDividedGridViewController *_viewController;
}

@property __weak EKUIDividedGridViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;

@end

@interface EKUIDividedGridViewCell : UIView
{
    _Bool _selected;
    UITextLabel *_label;
    EKUIDividedGridViewController *_viewController;
    NSLayoutConstraint *_widthConstraint;
}

@property __weak NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint=_widthConstraint;
@property __weak EKUIDividedGridViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) _Bool selected; // @synthesize selected=_selected;
@property(retain) UITextLabel *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)init;

@end

@interface EKUIDividedGridViewController : UIViewController
{
    long long _type;
    double _preferredWidth;
    NSArray *_buttonTitles;
    NSArray *_allCells;
    id <EKUIDividedGridViewControllerDelegate> _delegate;
    NSArray *_weekViews;
}

+ (id)dividerColor;
@property(retain) NSArray *weekViews; // @synthesize weekViews=_weekViews;
@property __weak id <EKUIDividedGridViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain) NSArray *allCells; // @synthesize allCells=_allCells;
@property(retain, nonatomic) NSArray *buttonTitles; // @synthesize buttonTitles=_buttonTitles;
@property(nonatomic) double preferredWidth; // @synthesize preferredWidth=_preferredWidth;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (double)_rowHeightForWidth:(double)arg1;
- (double)_neededHeight;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)cellTapped:(id)arg1;
- (double)_defaultButtonWidthForButtonAtIndex:(long long)arg1;
- (id)_newDividerView;
- (void)loadView;
- (id)initWithType:(long long)arg1 buttonTitles:(id)arg2;

@end

@interface EKUIDividedGridViewTableViewCell : UITableViewCell
{
    EKUIDividedGridViewController *_gridViewController;
    UIView *_topDivider;
    UIView *_bottomDivider;
}

@property(retain, nonatomic) UIView *bottomDivider; // @synthesize bottomDivider=_bottomDivider;
@property(retain, nonatomic) UIView *topDivider; // @synthesize topDivider=_topDivider;
@property(retain) EKUIDividedGridViewController *gridViewController; // @synthesize gridViewController=_gridViewController;
- (void).cxx_destruct;
- (_Bool)wantsDrawBackground;
- (struct CGRect)_separatorFrame;
@property(nonatomic) _Bool drawsTopDivider;
- (void)setDrawBottomDivider:(_Bool)arg1;
- (_Bool)drawBottomDivider;
- (_Bool)_isWiderThanMaximum;
- (void)layoutSubviews;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2 gridViewType:(long long)arg3 buttonTitles:(id)arg4;

@end

@interface EKUIDividedGridViewWeekView : UIView
{
    NSMutableArray *_buttonViews;
    NSLayoutConstraint *_heightConstraint;
}

@property __weak NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain) NSMutableArray *buttonViews; // @synthesize buttonViews=_buttonViews;
- (void).cxx_destruct;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKUIEventInviteesEditViewController : EKEditItemViewController
{
    EKEvent *_event;
    EKUIEventInviteesViewController *_controller;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSDate *selectedEndDate;
@property(readonly, nonatomic) NSDate *selectedStartDate;
- (void)loadView;
- (id)initWithEvent:(id)arg1;

@end

@interface EKUIEventInviteesView : UITableView
{
}

@end

__attribute__((visibility("hidden")))
@interface EKUIEventInviteesViewController : UITableViewController <EKEditItemViewControllerDelegate, UITableViewDataSource, UITableViewDelegate, EKEditItemViewControllerProtocol>
{
    _Bool _resetAttendeesSections;
    _Bool _resetConflictResolutionSections;
    _Bool _viewIsVisible;
    _Bool _editable;
    EKUIEventInviteesEditViewController *_parentController;
    NSDate *_selectedStartDate;
    NSDate *_selectedEndDate;
    EKUIEventInviteesView *_inviteesView;
    EKEvent *_event;
    NSArray *_sections;
    EKUIInviteesViewRespondedInviteesSection *_respondedSection;
    EKUIInviteesViewNotRespondedInviteesSection *_notRespondedSection;
    EKUIInviteesViewInvisibleInviteeStatusSection *_invisibleInviteeStatusSection;
    EKUIInviteesViewOriginalConflictSection *_originalConflictSection;
    EKUIInviteesViewSomeInviteesCanAttendSection *_someInviteesCanAttendSection;
    EKUIInviteesViewAllInviteesCanAttendSection *_allInviteesCanAttendSection;
    EKUIInviteeAlternativeTimeSearcher *_availabilitySearcher;
}

+ (id)_participantsInArray:(id)arg1 thatAreNotInArray:(id)arg2;
@property(retain, nonatomic) EKUIInviteeAlternativeTimeSearcher *availabilitySearcher; // @synthesize availabilitySearcher=_availabilitySearcher;
@property(retain, nonatomic) EKUIInviteesViewAllInviteesCanAttendSection *allInviteesCanAttendSection; // @synthesize allInviteesCanAttendSection=_allInviteesCanAttendSection;
@property(retain, nonatomic) EKUIInviteesViewSomeInviteesCanAttendSection *someInviteesCanAttendSection; // @synthesize someInviteesCanAttendSection=_someInviteesCanAttendSection;
@property(retain, nonatomic) EKUIInviteesViewOriginalConflictSection *originalConflictSection; // @synthesize originalConflictSection=_originalConflictSection;
@property(retain, nonatomic) EKUIInviteesViewInvisibleInviteeStatusSection *invisibleInviteeStatusSection; // @synthesize invisibleInviteeStatusSection=_invisibleInviteeStatusSection;
@property(retain, nonatomic) EKUIInviteesViewNotRespondedInviteesSection *notRespondedSection; // @synthesize notRespondedSection=_notRespondedSection;
@property(retain, nonatomic) EKUIInviteesViewRespondedInviteesSection *respondedSection; // @synthesize respondedSection=_respondedSection;
@property(retain, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(nonatomic) _Bool editable; // @synthesize editable=_editable;
@property(nonatomic) _Bool viewIsVisible; // @synthesize viewIsVisible=_viewIsVisible;
@property(nonatomic) _Bool resetConflictResolutionSections; // @synthesize resetConflictResolutionSections=_resetConflictResolutionSections;
@property(nonatomic) _Bool resetAttendeesSections; // @synthesize resetAttendeesSections=_resetAttendeesSections;
@property(retain, nonatomic) EKUIEventInviteesView *inviteesView; // @synthesize inviteesView=_inviteesView;
@property(retain, nonatomic) NSDate *selectedEndDate; // @synthesize selectedEndDate=_selectedEndDate;
@property(retain, nonatomic) NSDate *selectedStartDate; // @synthesize selectedStartDate=_selectedStartDate;
@property(nonatomic) __weak EKUIEventInviteesEditViewController *parentController; // @synthesize parentController=_parentController;
- (void).cxx_destruct;
- (void)_searcherStateChanged:(long long)arg1;
- (void)_requestDismissal;
- (void)_refreshIfNeeded;
- (id)_attendeesWithoutOrganizerAndLocations;
- (id)_sectionForIndex:(unsigned long long)arg1;
- (long long)_indexForSection:(id)arg1;
- (id)_viewControllerForPresentingViewControllers;
- (void)_dismissPresentedViewControllerAnimated:(_Bool)arg1;
- (void)_presentViewController:(id)arg1;
- (void)_fontSizeDefinitionsChanged:(id)arg1;
- (void)_eventModified:(id)arg1;
- (void)_sendMessageToParticipants:(id)arg1;
- (_Bool)editItemViewControllerShouldShowDetachAlert;
- (void)editItemViewController:(id)arg1 didCompleteWithAction:(int)arg2;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithEvent:(id)arg1 editable:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) __weak id <EKEditItemViewControllerDelegate> editDelegate;
@property(nonatomic) _Bool editItemShouldBeAskedForInjectableViewController;
@property(readonly) unsigned long long hash;
@property(nonatomic) _Bool presentModally;
@property(readonly) Class superclass;

@end

@interface EKUIEventStatusButtonsView : UIView
{
    NSArray *_buttons;
    NSArray *_actions;
    UIFont *_font;
    _Bool _forcesSingleButtonToCenter;
    _Bool _disableButtonHighlights;
    id <EKUIEventStatusButtonsViewDelegate> _delegate;
    long long _selectedAction;
    double _buttonsCharge;
    long long _textSizeMode;
    double _baselineFromBoundsTop;
}

@property(nonatomic) double baselineFromBoundsTop; // @synthesize baselineFromBoundsTop=_baselineFromBoundsTop;
@property(nonatomic) _Bool disableButtonHighlights; // @synthesize disableButtonHighlights=_disableButtonHighlights;
@property(nonatomic) _Bool forcesSingleButtonToCenter; // @synthesize forcesSingleButtonToCenter=_forcesSingleButtonToCenter;
@property(nonatomic) long long textSizeMode; // @synthesize textSizeMode=_textSizeMode;
@property(nonatomic) double buttonsCharge; // @synthesize buttonsCharge=_buttonsCharge;
@property(retain, nonatomic) NSArray *actions; // @synthesize actions=_actions;
@property(nonatomic) long long selectedAction; // @synthesize selectedAction=_selectedAction;
@property(nonatomic) __weak id <EKUIEventStatusButtonsViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateForMiniBarState:(_Bool)arg1;
@property(readonly, nonatomic) UIFont *font;
- (void)layoutSubviews;
- (double)_minimumFontSize;
- (id)_fontWithSize:(double)arg1 selected:(_Bool)arg2;
- (double)_defaultFontSizeForButtons;
- (void)_updateButtonFontsWithSize:(double)arg1;
- (_Bool)_shouldCenterButton;
@property(readonly, nonatomic) UIButton *centerButton;
- (id)_buttonTitleForAction:(long long)arg1;
- (id)_buttonForAction:(long long)arg1;
- (long long)_buttonIndexForAction:(long long)arg1;
- (long long)_actionForButton:(id)arg1;
- (void)_updateSelectionToButton:(id)arg1;
- (void)buttonTapped:(id)arg1;
- (void)_setupButtons;
- (id)_newToolbarButton;
- (id)initWithFrame:(struct CGRect)arg1 actions:(id)arg2 delegate:(id)arg3;

@end

@interface EKUIFullWidthDividerTableViewCell : EKUIConstrainedFontsTableViewCell
{
}

- (struct CGRect)_separatorFrame;

@end

@interface EKUIInviteeAlternativeTime : NSObject
{
    NSDate *_startDate;
    NSDate *_endDate;
    NSArray *_conflictedParticipants;
}

@property(retain, nonatomic) NSArray *conflictedParticipants; // @synthesize conflictedParticipants=_conflictedParticipants;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (id)description;
- (id)initWithStartDate:(id)arg1 endDate:(id)arg2 conflictedParticipants:(id)arg3;

@end

@interface EKUIInviteeAlternativeTimeSearcher : NSObject
{
    _Bool _availabilityRequestInProgress;
    _Bool _internalSearchingForMoreTimesWhenAllAttendeesCanAttend;
    _Bool _internalSearchingForMoreTimesWhenSomeAttendeesCanAttend;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSObject<OS_dispatch_queue> *_processingQueue;
    NSDate *_internalOriginalStartDate;
    NSDate *_internalOriginalEndDate;
    EKSource *_source;
    NSString *_ignoredEventID;
    NSOperationQueue *_availabilityRequestsQueue;
    NSMutableDictionary *_participantAddressesToParticipants;
    NSString *_organizerAddress;
    NSDate *_nextAvailabilityRangeStartDate;
    double _availabilitySearchDurationMultiplier;
    unsigned long long _remainingSearchAttempts;
    NSMutableArray *_leftoverSpans;
    NSMutableArray *_internalTimesWhenAllAttendeesCanAttend;
    NSMutableArray *_internalTimesWhenSomeAttendeesCanAttend;
    NSMutableArray *_internalOriginalConflictedParticipants;
    CDUnknownBlockType _stateChanged;
}

+ (void)_validateSpans:(id)arg1;
+ (long long)_invalidBinarySearchIndex;
+ (long long)_binarySearchForIndexOfTimeSpanInArray:(id)arg1 containingDate:(id)arg2;
+ (id)_rankNonOptimalTimeSpans:(id)arg1;
+ (id)_findHighestRankedNonOptimalTimeSpans:(id)arg1;
+ (void)_insertUniqueParticipants:(id)arg1 intoExistingParticipantsArray:(id)arg2;
+ (id)_allButFirstItemInArray:(id)arg1;
+ (id)_allButLastItemInArray:(id)arg1;
+ (_Bool)_span:(id)arg1 hasSameConflictedParticipantsAsSpan:(id)arg2;
+ (id)_addressesForParticipants:(id)arg1;
+ (id)_findLeftoverSpans:(id)arg1 usingFreeTimes:(id)arg2 andNonOptimalTimes:(id)arg3;
+ (id)stateAsString:(long long)arg1;
@property(copy, nonatomic) CDUnknownBlockType stateChanged; // @synthesize stateChanged=_stateChanged;
@property(nonatomic) _Bool internalSearchingForMoreTimesWhenSomeAttendeesCanAttend; // @synthesize internalSearchingForMoreTimesWhenSomeAttendeesCanAttend=_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend;
@property(nonatomic) _Bool internalSearchingForMoreTimesWhenAllAttendeesCanAttend; // @synthesize internalSearchingForMoreTimesWhenAllAttendeesCanAttend=_internalSearchingForMoreTimesWhenAllAttendeesCanAttend;
@property(retain, nonatomic) NSMutableArray *internalOriginalConflictedParticipants; // @synthesize internalOriginalConflictedParticipants=_internalOriginalConflictedParticipants;
@property(retain, nonatomic) NSMutableArray *internalTimesWhenSomeAttendeesCanAttend; // @synthesize internalTimesWhenSomeAttendeesCanAttend=_internalTimesWhenSomeAttendeesCanAttend;
@property(retain, nonatomic) NSMutableArray *internalTimesWhenAllAttendeesCanAttend; // @synthesize internalTimesWhenAllAttendeesCanAttend=_internalTimesWhenAllAttendeesCanAttend;
@property(retain, nonatomic) NSMutableArray *leftoverSpans; // @synthesize leftoverSpans=_leftoverSpans;
@property(nonatomic) unsigned long long remainingSearchAttempts; // @synthesize remainingSearchAttempts=_remainingSearchAttempts;
@property(nonatomic) double availabilitySearchDurationMultiplier; // @synthesize availabilitySearchDurationMultiplier=_availabilitySearchDurationMultiplier;
@property(retain, nonatomic) NSDate *nextAvailabilityRangeStartDate; // @synthesize nextAvailabilityRangeStartDate=_nextAvailabilityRangeStartDate;
@property(nonatomic) _Bool availabilityRequestInProgress; // @synthesize availabilityRequestInProgress=_availabilityRequestInProgress;
@property(retain, nonatomic) NSString *organizerAddress; // @synthesize organizerAddress=_organizerAddress;
@property(retain, nonatomic) NSMutableDictionary *participantAddressesToParticipants; // @synthesize participantAddressesToParticipants=_participantAddressesToParticipants;
@property(retain, nonatomic) NSOperationQueue *availabilityRequestsQueue; // @synthesize availabilityRequestsQueue=_availabilityRequestsQueue;
@property(retain, nonatomic) NSString *ignoredEventID; // @synthesize ignoredEventID=_ignoredEventID;
@property(retain, nonatomic) EKSource *source; // @synthesize source=_source;
@property(retain, nonatomic) NSDate *internalOriginalEndDate; // @synthesize internalOriginalEndDate=_internalOriginalEndDate;
@property(retain, nonatomic) NSDate *internalOriginalStartDate; // @synthesize internalOriginalStartDate=_internalOriginalStartDate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *processingQueue; // @synthesize processingQueue=_processingQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
- (void).cxx_destruct;
- (id)_generateTimeSpansForResults:(id)arg1 betweenStartDate:(id)arg2 endDate:(id)arg3;
- (id)_filterOutUnreasonableTimeSlots:(id)arg1;
- (id)_generateNonOptimalTimesFromTimeSpans:(id)arg1;
- (id)_generateOpenFreeTimesFromTimeSpans:(id)arg1;
- (id)_mergeAdjacentSpansWithSameConflictedParticipants:(id)arg1;
- (id)_spliceLeftTimeSpans:(id)arg1 andNewTimeSpans:(id)arg2;
- (void)_processResults:(id)arg1 betweenStartDate:(id)arg2 endDate:(id)arg3;
- (id)_participantforParticipantAddress:(id)arg1;
- (void)_sendStateChange:(long long)arg1;
- (void)_resetSearchFallbackNumbers;
- (void)_attemptSearch;
- (void)resetWithEvent:(id)arg1 organizerAddressForNewlyScheduledEvent:(id)arg2;
- (void)searchForMoreTimesWhenSomeAttendeesCanAttend;
- (void)searchForMoreTimesWhenAllAttendeesCanAttend;
@property(readonly, nonatomic) _Bool searchingForMoreTimesWhenSomeAttendeesCanAttend;
@property(readonly, nonatomic) _Bool searchingForMoreTimesWhenAllAttendeesCanAttend;
@property(readonly, nonatomic) NSArray *timesWhenSomeAttendeesCanAttend;
@property(readonly, nonatomic) NSArray *timesWhenAllAttendeesCanAttend;
@property(readonly, nonatomic) NSArray *originalConflictedParticipants;
@property(readonly, nonatomic) NSDate *originalEndDate;
@property(readonly, nonatomic) NSDate *originalStartDate;
- (void)dealloc;
- (id)initWithStateChangedCallback:(CDUnknownBlockType)arg1;

@end

@interface EKUIInviteeTimeSpan : NSObject <NSCopying>
{
    NSDate *_startDate;
    NSDate *_endDate;
    NSMutableArray *_conflictedParticipants;
}

@property(retain, nonatomic) NSMutableArray *conflictedParticipants; // @synthesize conflictedParticipants=_conflictedParticipants;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface EKUIInviteesEditView : UIView
{
}

@end

@interface EKUIInviteesViewAddInviteeCell : UITableViewCell
{
    double _leftInset;
    UILabel *_simpleTextLabel;
    NSArray *_persistentConstraints;
    NSLayoutConstraint *_leftInsetConstraint;
    NSString *_simpleText;
}

+ (id)_simpleTextLabelFont;
@property(retain, nonatomic) NSString *simpleText; // @synthesize simpleText=_simpleText;
@property(retain, nonatomic) NSLayoutConstraint *leftInsetConstraint; // @synthesize leftInsetConstraint=_leftInsetConstraint;
@property(retain, nonatomic) NSArray *persistentConstraints; // @synthesize persistentConstraints=_persistentConstraints;
@property(retain, nonatomic) UILabel *simpleTextLabel; // @synthesize simpleTextLabel=_simpleTextLabel;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
- (void).cxx_destruct;
- (void)updateConstraints;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIInviteesViewTimeSlotCell : UITableViewCell
{
    _Bool _checked;
    _Bool _updateFontBasedConstraints;
    _Bool _updateTimeText;
    _Bool _updateParticipantsText;
    _Bool _showAllParticipants;
    CDUnknownBlockType _showPreviewOfEventAtTime;
    CDUnknownBlockType _showAllConflictedParticipantsTapped;
    NSDictionary *_andMoreStringCache;
    UILabel *_labelForTextSizeTesting;
    UITextView *_textViewForTextSizeTesting;
    UILabel *_topTimeLabel;
    UILabel *_bottomTimeLabel;
    UIView *_andMoreDebugOverlay;
    UITextView *_participantsTextView;
    UIImageView *_checkmarkImageView;
    UIButton *_showPreviewButton;
    NSArray *_persistentConstraints;
    NSMutableDictionary *_colorToBusyImageAttributedString;
    NSLayoutConstraint *_topTimeLabelToTopContentViewConstraint;
    NSLayoutConstraint *_bottomTimeLabelToTopTimeLabelConstraint;
    NSLayoutConstraint *_participantsViewToBottomTimeLabelConstraint;
    NSLayoutConstraint *_participantsViewToContentViewConstraint;
    NSLayoutConstraint *_topTimeLabelHeightConstraint;
    NSLayoutConstraint *_bottomTimeLabelHeightConstraint;
    NSDate *_startDate;
    NSDate *_endDate;
    NSArray *_busyParticipants;
    UITapGestureRecognizer *_tappedMoreRecognizer;
    struct CGRect _andMoreBoundingRect;
}

+ (void)_setRequiredHuggingAndCompression:(id)arg1;
+ (id)_generateParticipantTextView;
+ (id)_andMoreLeftSpacing;
+ (id)_interParticipantSpacing;
+ (id)_nonBreakingSpace;
+ (id)_replaceSpacesWithNonBreakingSpaces:(id)arg1;
+ (id)_generateAndMoreStringWithCount:(unsigned long long)arg1 attributes:(id)arg2;
+ (_Bool)_layoutManagerReportsExcessLines:(id)arg1;
+ (double)_rightBuffer;
+ (double)_leftBuffer;
+ (id)_participantsTextViewFont;
+ (id)_timeLabelFont;
@property(nonatomic) struct CGRect andMoreBoundingRect; // @synthesize andMoreBoundingRect=_andMoreBoundingRect;
@property(retain, nonatomic) UITapGestureRecognizer *tappedMoreRecognizer; // @synthesize tappedMoreRecognizer=_tappedMoreRecognizer;
@property(retain, nonatomic) NSArray *busyParticipants; // @synthesize busyParticipants=_busyParticipants;
@property(nonatomic) _Bool showAllParticipants; // @synthesize showAllParticipants=_showAllParticipants;
@property(nonatomic) _Bool updateParticipantsText; // @synthesize updateParticipantsText=_updateParticipantsText;
@property(nonatomic) _Bool updateTimeText; // @synthesize updateTimeText=_updateTimeText;
@property(nonatomic) _Bool updateFontBasedConstraints; // @synthesize updateFontBasedConstraints=_updateFontBasedConstraints;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(retain, nonatomic) NSLayoutConstraint *bottomTimeLabelHeightConstraint; // @synthesize bottomTimeLabelHeightConstraint=_bottomTimeLabelHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *topTimeLabelHeightConstraint; // @synthesize topTimeLabelHeightConstraint=_topTimeLabelHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *participantsViewToContentViewConstraint; // @synthesize participantsViewToContentViewConstraint=_participantsViewToContentViewConstraint;
@property(retain, nonatomic) NSLayoutConstraint *participantsViewToBottomTimeLabelConstraint; // @synthesize participantsViewToBottomTimeLabelConstraint=_participantsViewToBottomTimeLabelConstraint;
@property(retain, nonatomic) NSLayoutConstraint *bottomTimeLabelToTopTimeLabelConstraint; // @synthesize bottomTimeLabelToTopTimeLabelConstraint=_bottomTimeLabelToTopTimeLabelConstraint;
@property(retain, nonatomic) NSLayoutConstraint *topTimeLabelToTopContentViewConstraint; // @synthesize topTimeLabelToTopContentViewConstraint=_topTimeLabelToTopContentViewConstraint;
@property(retain, nonatomic) NSMutableDictionary *colorToBusyImageAttributedString; // @synthesize colorToBusyImageAttributedString=_colorToBusyImageAttributedString;
@property(retain, nonatomic) NSArray *persistentConstraints; // @synthesize persistentConstraints=_persistentConstraints;
@property(retain, nonatomic) UIButton *showPreviewButton; // @synthesize showPreviewButton=_showPreviewButton;
@property(retain, nonatomic) UIImageView *checkmarkImageView; // @synthesize checkmarkImageView=_checkmarkImageView;
@property(retain, nonatomic) UITextView *participantsTextView; // @synthesize participantsTextView=_participantsTextView;
@property(retain, nonatomic) UIView *andMoreDebugOverlay; // @synthesize andMoreDebugOverlay=_andMoreDebugOverlay;
@property(retain, nonatomic) UILabel *bottomTimeLabel; // @synthesize bottomTimeLabel=_bottomTimeLabel;
@property(retain, nonatomic) UILabel *topTimeLabel; // @synthesize topTimeLabel=_topTimeLabel;
@property(retain, nonatomic) UITextView *textViewForTextSizeTesting; // @synthesize textViewForTextSizeTesting=_textViewForTextSizeTesting;
@property(retain, nonatomic) UILabel *labelForTextSizeTesting; // @synthesize labelForTextSizeTesting=_labelForTextSizeTesting;
@property(retain, nonatomic) NSDictionary *andMoreStringCache; // @synthesize andMoreStringCache=_andMoreStringCache;
@property(nonatomic) _Bool checked; // @synthesize checked=_checked;
@property(copy, nonatomic) CDUnknownBlockType showAllConflictedParticipantsTapped; // @synthesize showAllConflictedParticipantsTapped=_showAllConflictedParticipantsTapped;
@property(copy, nonatomic) CDUnknownBlockType showPreviewOfEventAtTime; // @synthesize showPreviewOfEventAtTime=_showPreviewOfEventAtTime;
- (void).cxx_destruct;
- (_Bool)_everyoneCanAttend;
- (_Bool)_textWillFit:(id)arg1;
- (id)_busyImageAttributedStringForColor:(id)arg1;
- (id)_textForParticipant:(id)arg1 color:(id)arg2;
- (id)_generateStringForSomeParticipantsAndStampMoreBoundingRect:(id)arg1;
- (id)_generateStringForAllParticipants:(id)arg1;
- (void)_resetParticipantsTextIfNeeded;
- (void)_resetTimeTextIfNeeded;
- (void)_resetPreferredMaxLayoutWidths;
- (void)_resetFonts;
- (double)_preferredMaxLayoutWidth;
- (void)_andMoreTapped:(id)arg1;
- (void)_showPreviewButtonTapped:(id)arg1;
@property(readonly, nonatomic) UIColor *timeTextColor;
@property(readonly, nonatomic) UIColor *participantsTextColor;
- (void)updateWithStartDate:(id)arg1 endDate:(id)arg2 busyParticipants:(id)arg3 showAllParticipants:(_Bool)arg4 checked:(_Bool)arg5;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)updateConstraints;
- (void)setFrame:(struct CGRect)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIInviteesViewAllInviteesCanAttendCell : EKUIInviteesViewTimeSlotCell
{
}

- (id)participantsTextColor;
- (id)timeTextColor;

@end

@interface EKUIInviteesViewAlternativeTimeSection : NSObject <EKUIInviteesViewConflictResolutionSection>
{
    _Bool _hasCheckedRow;
    _Bool _availabilityRequestInProgress;
    _Bool _initialSearchInProgress;
    _Bool _searchExhausted;
    CDUnknownBlockType _showMoreAlternativeTimesTapped;
    NSString *_cachedTimeCellReuseIdentifier;
    NSString *_cachedConflictSearchCellReuseIdentifier;
    unsigned long long _reuseIdentifierVersion;
    CDUnknownBlockType _tableViewCellHook;
    CDUnknownBlockType _newTimeChosen;
    CDUnknownBlockType _showPreviewOfEventAtTime;
    NSMutableSet *_rowsShowingAllParticipants;
    NSArray *_alternativeTimes;
    long long _lastCheckedRow;
    unsigned long long _maximumNumberOfTimeSlotsToShow;
    EKUIInviteeAlternativeTimeSearcher *_availabilitySearcher;
}

@property(nonatomic) _Bool searchExhausted; // @synthesize searchExhausted=_searchExhausted;
@property(nonatomic) _Bool initialSearchInProgress; // @synthesize initialSearchInProgress=_initialSearchInProgress;
@property(retain, nonatomic) EKUIInviteeAlternativeTimeSearcher *availabilitySearcher; // @synthesize availabilitySearcher=_availabilitySearcher;
@property(nonatomic) unsigned long long maximumNumberOfTimeSlotsToShow; // @synthesize maximumNumberOfTimeSlotsToShow=_maximumNumberOfTimeSlotsToShow;
@property(nonatomic) _Bool availabilityRequestInProgress; // @synthesize availabilityRequestInProgress=_availabilityRequestInProgress;
@property(nonatomic) _Bool hasCheckedRow; // @synthesize hasCheckedRow=_hasCheckedRow;
@property(nonatomic) long long lastCheckedRow; // @synthesize lastCheckedRow=_lastCheckedRow;
@property(retain, nonatomic) NSArray *alternativeTimes; // @synthesize alternativeTimes=_alternativeTimes;
@property(retain, nonatomic) NSMutableSet *rowsShowingAllParticipants; // @synthesize rowsShowingAllParticipants=_rowsShowingAllParticipants;
@property(copy, nonatomic) CDUnknownBlockType showPreviewOfEventAtTime; // @synthesize showPreviewOfEventAtTime=_showPreviewOfEventAtTime;
@property(copy, nonatomic) CDUnknownBlockType newTimeChosen; // @synthesize newTimeChosen=_newTimeChosen;
@property(copy, nonatomic) CDUnknownBlockType tableViewCellHook; // @synthesize tableViewCellHook=_tableViewCellHook;
@property(nonatomic) unsigned long long reuseIdentifierVersion; // @synthesize reuseIdentifierVersion=_reuseIdentifierVersion;
@property(retain, nonatomic) NSString *cachedConflictSearchCellReuseIdentifier; // @synthesize cachedConflictSearchCellReuseIdentifier=_cachedConflictSearchCellReuseIdentifier;
@property(retain, nonatomic) NSString *cachedTimeCellReuseIdentifier; // @synthesize cachedTimeCellReuseIdentifier=_cachedTimeCellReuseIdentifier;
@property(copy, nonatomic) CDUnknownBlockType showMoreAlternativeTimesTapped; // @synthesize showMoreAlternativeTimesTapped=_showMoreAlternativeTimesTapped;
- (void).cxx_destruct;
- (id)_alternativeTimeAtIndex:(long long)arg1;
- (unsigned long long)_numberOfTimeSlotsShown;
- (_Bool)_isConflictSearchRow:(long long)arg1;
- (_Bool)_isValidRow:(long long)arg1;
- (void)searchForMoreTimes;
@property(readonly, nonatomic) _Bool searchingForMoreTimes;
@property(readonly, nonatomic) Class customTimeCellClass;
@property(readonly, nonatomic) NSArray *searcherTimeSlots;
@property(readonly, nonatomic) unsigned long long initialNumberOfTimeSlotsToShow;
- (void)refreshCellsAfterStateChange;
- (void)availabilitySearcherChangedState:(long long)arg1;
- (_Bool)injectNewRowsBeforeLastExistingRow;
- (void)clearCheckmark;
- (void)cancelOutstandingOperations;
- (double)estimatedHeightForRow:(id)arg1;
- (void)commitEditingStyle:(long long)arg1 forRow:(id)arg2;
- (id)titleForDeleteConfirmationButtonForRow:(id)arg1;
- (long long)editingStyleForRow:(id)arg1;
- (_Bool)canEditRow:(id)arg1;
- (void)selectRow:(id)arg1;
- (_Bool)canSelectRow:(id)arg1;
- (void)reloadAndRegisterReusableCellsWithTableView:(id)arg1;
- (id)cellForIndexPath:(id)arg1 inTableView:(id)arg2;
- (unsigned long long)numberOfRows;
- (_Bool)sectionShouldBeShown;
- (id)headerTitle;
- (id)debugTitle;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIInviteesViewAllInviteesCanAttendSection : EKUIInviteesViewAlternativeTimeSection
{
}

- (void)searchForMoreTimes;
- (_Bool)searchingForMoreTimes;
- (Class)customTimeCellClass;
- (id)searcherTimeSlots;
- (unsigned long long)initialNumberOfTimeSlotsToShow;
- (id)headerTitle;

@end

@interface EKUIInviteesViewConflictSearchCell : UITableViewCell
{
    UILabel *_label;
    NSArray *_persistentConstraints;
    double _leftInset;
    UIActivityIndicatorView *_spinner;
    UIColor *_originalLabelFontColor;
}

+ (id)_labelFont;
+ (id)_grayTextColor;
@property(retain, nonatomic) UIColor *originalLabelFontColor; // @synthesize originalLabelFontColor=_originalLabelFontColor;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(retain, nonatomic) NSArray *persistentConstraints; // @synthesize persistentConstraints=_persistentConstraints;
@property(retain, nonatomic) UILabel *label; // @synthesize label=_label;
- (void).cxx_destruct;
- (void)_setText:(id)arg1 textColor:(id)arg2 spinnerEnabled:(_Bool)arg3;
- (void)setAvailabilityRequestInProgressState;
- (void)setShowMoreState;
- (void)setNoAvailableTimesStateWithNumberOfExistingTimes:(unsigned long long)arg1;
- (void)setInitialSearchInProgressState;
- (void)updateConstraints;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIInviteesViewInvisibleInviteeStatusCell : UITableViewCell
{
    UILabel *_nameLabel;
    UILabel *_commentLabel;
    NSArray *_persistentConstraints;
    NSArray *_removableConstraints;
    NSLayoutConstraint *_minimumHeightConstraint;
    NSLayoutConstraint *_nameBaselineToTopConstraint;
    double _leftInset;
}

+ (id)_commentLabelFont;
+ (id)_nameLabelFont;
@property(nonatomic) double leftInset; // @synthesize leftInset=_leftInset;
@property(retain, nonatomic) NSLayoutConstraint *nameBaselineToTopConstraint; // @synthesize nameBaselineToTopConstraint=_nameBaselineToTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *minimumHeightConstraint; // @synthesize minimumHeightConstraint=_minimumHeightConstraint;
@property(retain, nonatomic) NSArray *removableConstraints; // @synthesize removableConstraints=_removableConstraints;
@property(retain, nonatomic) NSArray *persistentConstraints; // @synthesize persistentConstraints=_persistentConstraints;
@property(retain, nonatomic) UILabel *commentLabel; // @synthesize commentLabel=_commentLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
- (void).cxx_destruct;
- (void)updateWithParticipantForSorting:(id)arg1;
- (void)updateConstraints;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIInviteesViewInvisibleInviteeStatusSection : NSObject <EKUIInviteesViewSection>
{
    _Bool _editable;
    CDUnknownBlockType _participantTapped;
    CDUnknownBlockType _participantRemoved;
    NSMutableArray *_participants;
    EKEvent *_event;
    NSString *_cachedCellReuseIdentifier;
    unsigned long long _reuseIdentifierVersion;
    CDUnknownBlockType _tableViewCellHook;
}

@property(nonatomic) _Bool editable; // @synthesize editable=_editable;
@property(copy, nonatomic) CDUnknownBlockType tableViewCellHook; // @synthesize tableViewCellHook=_tableViewCellHook;
@property(nonatomic) unsigned long long reuseIdentifierVersion; // @synthesize reuseIdentifierVersion=_reuseIdentifierVersion;
@property(retain, nonatomic) NSString *cachedCellReuseIdentifier; // @synthesize cachedCellReuseIdentifier=_cachedCellReuseIdentifier;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(retain, nonatomic) NSMutableArray *participants; // @synthesize participants=_participants;
@property(copy, nonatomic) CDUnknownBlockType participantRemoved; // @synthesize participantRemoved=_participantRemoved;
@property(copy, nonatomic) CDUnknownBlockType participantTapped; // @synthesize participantTapped=_participantTapped;
- (void).cxx_destruct;
- (_Bool)_isValidRow:(long long)arg1;
- (void)updateWithEvent:(id)arg1 editable:(_Bool)arg2;
- (void)cancelOutstandingOperations;
- (double)estimatedHeightForRow:(id)arg1;
- (void)commitEditingStyle:(long long)arg1 forRow:(id)arg2;
- (id)titleForDeleteConfirmationButtonForRow:(id)arg1;
- (long long)editingStyleForRow:(id)arg1;
- (_Bool)canEditRow:(id)arg1;
- (void)selectRow:(id)arg1;
- (_Bool)canSelectRow:(id)arg1;
- (void)reloadAndRegisterReusableCellsWithTableView:(id)arg1;
- (id)cellForIndexPath:(id)arg1 inTableView:(id)arg2;
- (unsigned long long)numberOfRows;
- (_Bool)sectionShouldBeShown;
- (id)headerTitle;
- (id)debugTitle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIInviteesViewMessageSendingView : UIView
{
    UIView *_composeView;
}

@property(retain, nonatomic) UIView *composeView; // @synthesize composeView=_composeView;
- (void).cxx_destruct;
- (void)layoutSubviews;

@end

@interface EKUIInviteesViewMessageSendingViewController : UIViewController <MFMailComposeViewControllerDelegate>
{
    CDUnknownBlockType _messageSendingComplete;
    EKEvent *_event;
}

+ (id)_recipientEmailAddressesToDisplayNames:(id)arg1;
+ (id)_attendeesIgnorningMe:(id)arg1;
+ (_Bool)canShowForEvent:(id)arg1;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(copy) CDUnknownBlockType messageSendingComplete; // @synthesize messageSendingComplete=_messageSendingComplete;
- (void).cxx_destruct;
- (id)_htmlBodyForMailMessageWithNames:(id)arg1;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3;
- (void)loadView;
- (id)initWithEvent:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIInviteesViewNotRespondedInviteesCell : UITableViewCell
{
    _Bool _showSpinner;
    UILabel *_nameLabel;
    UILabel *_commentLabel;
    UIImageView *_availabilityTypeImageView;
    UIActivityIndicatorView *_spinner;
    NSArray *_persistentConstraints;
    NSArray *_removableConstraints;
    NSLayoutConstraint *_minimumHeightConstraint;
    NSLayoutConstraint *_nameBaselineToTopConstraint;
}

+ (id)_commentLabelFont;
+ (id)_nameLabelFont;
+ (double)_leftTextInset;
@property(retain, nonatomic) NSLayoutConstraint *nameBaselineToTopConstraint; // @synthesize nameBaselineToTopConstraint=_nameBaselineToTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *minimumHeightConstraint; // @synthesize minimumHeightConstraint=_minimumHeightConstraint;
@property(retain, nonatomic) NSArray *removableConstraints; // @synthesize removableConstraints=_removableConstraints;
@property(retain, nonatomic) NSArray *persistentConstraints; // @synthesize persistentConstraints=_persistentConstraints;
@property(nonatomic) _Bool showSpinner; // @synthesize showSpinner=_showSpinner;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIImageView *availabilityTypeImageView; // @synthesize availabilityTypeImageView=_availabilityTypeImageView;
@property(retain, nonatomic) UILabel *commentLabel; // @synthesize commentLabel=_commentLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
- (void).cxx_destruct;
- (void)updateWithParticipantForSorting:(id)arg1 availabilityType:(long long)arg2 showSpinner:(_Bool)arg3 animated:(_Bool)arg4;
- (void)updateConstraints;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIInviteesViewNotRespondedInviteesSection : NSObject <EKUIInviteesViewSection>
{
    _Bool _canSeeAttendeeStatuses;
    _Bool _editable;
    CDUnknownBlockType _participantTapped;
    CDUnknownBlockType _participantRemoved;
    CDUnknownBlockType _addInviteesTapped;
    NSMutableArray *_participants;
    EKEvent *_event;
    NSString *_cachedInviteeCellReuseIdentifier;
    NSString *_cachedAddInviteeCellReuseIdentifier;
    unsigned long long _reuseIdentifierVersion;
    NSOperationQueue *_availabilityRequestsQueue;
    NSMutableDictionary *_participantAddressesToAvailabilityType;
    NSMutableDictionary *_participantAddressesToParticipantIndex;
    NSMutableSet *_participantAddressesForInFlightAvailabilityOperations;
    CDUnknownBlockType _tableViewCellHook;
}

+ (id)_participantAddressForParticipant:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType tableViewCellHook; // @synthesize tableViewCellHook=_tableViewCellHook;
@property(retain, nonatomic) NSMutableSet *participantAddressesForInFlightAvailabilityOperations; // @synthesize participantAddressesForInFlightAvailabilityOperations=_participantAddressesForInFlightAvailabilityOperations;
@property(retain, nonatomic) NSMutableDictionary *participantAddressesToParticipantIndex; // @synthesize participantAddressesToParticipantIndex=_participantAddressesToParticipantIndex;
@property(retain, nonatomic) NSMutableDictionary *participantAddressesToAvailabilityType; // @synthesize participantAddressesToAvailabilityType=_participantAddressesToAvailabilityType;
@property(retain, nonatomic) NSOperationQueue *availabilityRequestsQueue; // @synthesize availabilityRequestsQueue=_availabilityRequestsQueue;
@property(nonatomic) _Bool editable; // @synthesize editable=_editable;
@property(nonatomic) unsigned long long reuseIdentifierVersion; // @synthesize reuseIdentifierVersion=_reuseIdentifierVersion;
@property(retain, nonatomic) NSString *cachedAddInviteeCellReuseIdentifier; // @synthesize cachedAddInviteeCellReuseIdentifier=_cachedAddInviteeCellReuseIdentifier;
@property(retain, nonatomic) NSString *cachedInviteeCellReuseIdentifier; // @synthesize cachedInviteeCellReuseIdentifier=_cachedInviteeCellReuseIdentifier;
@property(nonatomic) _Bool canSeeAttendeeStatuses; // @synthesize canSeeAttendeeStatuses=_canSeeAttendeeStatuses;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(retain, nonatomic) NSMutableArray *participants; // @synthesize participants=_participants;
@property(copy, nonatomic) CDUnknownBlockType addInviteesTapped; // @synthesize addInviteesTapped=_addInviteesTapped;
@property(copy, nonatomic) CDUnknownBlockType participantRemoved; // @synthesize participantRemoved=_participantRemoved;
@property(copy, nonatomic) CDUnknownBlockType participantTapped; // @synthesize participantTapped=_participantTapped;
- (void).cxx_destruct;
- (void)_updateCell:(id)arg1 forParticipantAtIndex:(long long)arg2 animated:(_Bool)arg3;
- (void)_updateCellForParticipantWithAddress:(id)arg1;
- (_Bool)_isAddInviteesRow:(long long)arg1;
- (_Bool)_isValidRow:(long long)arg1;
- (_Bool)_setOfAddressesToInflightOperationsContainsAddress:(id)arg1;
- (void)_addAddressToSetOfAddressesToInflightOperations:(id)arg1;
- (void)_removeAddressFromSetOfAddressesToInflightOperations:(id)arg1;
- (void)_setParticipantIndex:(id)arg1 forParticipantAddress:(id)arg2;
- (id)_lookUpParticipantIndexForParticipantAddress:(id)arg1;
- (void)_setAvailabilityType:(id)arg1 forParticipantAddress:(id)arg2;
- (id)_lookUpAvailabilityTypeForParticipantAddress:(id)arg1;
- (void)updateWithEvent:(id)arg1 editable:(_Bool)arg2;
- (void)cancelOutstandingOperations;
- (double)estimatedHeightForRow:(id)arg1;
- (void)commitEditingStyle:(long long)arg1 forRow:(id)arg2;
- (id)titleForDeleteConfirmationButtonForRow:(id)arg1;
- (long long)editingStyleForRow:(id)arg1;
- (_Bool)canEditRow:(id)arg1;
- (void)selectRow:(id)arg1;
- (_Bool)canSelectRow:(id)arg1;
- (void)reloadAndRegisterReusableCellsWithTableView:(id)arg1;
- (id)cellForIndexPath:(id)arg1 inTableView:(id)arg2;
- (unsigned long long)numberOfRows;
- (_Bool)sectionShouldBeShown;
- (id)headerTitle;
- (id)debugTitle;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIInviteesViewOriginalConflictCell : EKUIInviteesViewTimeSlotCell
{
}

- (id)timeTextColor;
- (id)participantsTextColor;

@end

@interface EKUIInviteesViewOriginalConflictSection : NSObject <EKUIInviteesViewConflictResolutionSection>
{
    _Bool _checked;
    _Bool _conflictFound;
    NSDate *_startDate;
    NSDate *_endDate;
    NSArray *_busyParticipants;
    NSMutableSet *_rowsShowingAllParticipants;
    NSString *_cachedCellReuseIdentifier;
    unsigned long long _reuseIdentifierVersion;
    CDUnknownBlockType _tableViewCellHook;
    CDUnknownBlockType _newTimeChosen;
    CDUnknownBlockType _showPreviewOfEventAtTime;
    EKUIInviteeAlternativeTimeSearcher *_availabilitySearcher;
}

@property(retain, nonatomic) EKUIInviteeAlternativeTimeSearcher *availabilitySearcher; // @synthesize availabilitySearcher=_availabilitySearcher;
@property(copy, nonatomic) CDUnknownBlockType showPreviewOfEventAtTime; // @synthesize showPreviewOfEventAtTime=_showPreviewOfEventAtTime;
@property(copy, nonatomic) CDUnknownBlockType newTimeChosen; // @synthesize newTimeChosen=_newTimeChosen;
@property(copy, nonatomic) CDUnknownBlockType tableViewCellHook; // @synthesize tableViewCellHook=_tableViewCellHook;
@property(nonatomic) unsigned long long reuseIdentifierVersion; // @synthesize reuseIdentifierVersion=_reuseIdentifierVersion;
@property(retain, nonatomic) NSString *cachedCellReuseIdentifier; // @synthesize cachedCellReuseIdentifier=_cachedCellReuseIdentifier;
@property(nonatomic) _Bool conflictFound; // @synthesize conflictFound=_conflictFound;
@property(nonatomic) _Bool checked; // @synthesize checked=_checked;
@property(retain, nonatomic) NSMutableSet *rowsShowingAllParticipants; // @synthesize rowsShowingAllParticipants=_rowsShowingAllParticipants;
@property(retain, nonatomic) NSArray *busyParticipants; // @synthesize busyParticipants=_busyParticipants;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
@property(retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
- (void).cxx_destruct;
- (_Bool)_isValidRow:(long long)arg1;
- (void)refreshCellsAfterStateChange;
- (void)availabilitySearcherChangedState:(long long)arg1;
- (_Bool)injectNewRowsBeforeLastExistingRow;
- (void)clearCheckmark;
- (void)cancelOutstandingOperations;
- (double)estimatedHeightForRow:(id)arg1;
- (void)commitEditingStyle:(long long)arg1 forRow:(id)arg2;
- (id)titleForDeleteConfirmationButtonForRow:(id)arg1;
- (long long)editingStyleForRow:(id)arg1;
- (_Bool)canEditRow:(id)arg1;
- (void)selectRow:(id)arg1;
- (_Bool)canSelectRow:(id)arg1;
- (void)reloadAndRegisterReusableCellsWithTableView:(id)arg1;
- (id)cellForIndexPath:(id)arg1 inTableView:(id)arg2;
- (unsigned long long)numberOfRows;
- (_Bool)sectionShouldBeShown;
- (id)headerTitle;
- (id)debugTitle;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIInviteesViewRespondedInviteesCell : UITableViewCell
{
    UILabel *_nameLabel;
    UILabel *_commentLabel;
    UIImageView *_participationStatusImageView;
    NSArray *_persistentConstraints;
    NSArray *_removableConstraints;
    NSLayoutConstraint *_minimumHeightConstraint;
    NSLayoutConstraint *_nameBaselineToTopConstraint;
}

+ (id)_commentLabelFont;
+ (id)_nameLabelFont;
+ (double)_leftTextInset;
@property(retain, nonatomic) NSLayoutConstraint *nameBaselineToTopConstraint; // @synthesize nameBaselineToTopConstraint=_nameBaselineToTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *minimumHeightConstraint; // @synthesize minimumHeightConstraint=_minimumHeightConstraint;
@property(retain, nonatomic) NSArray *removableConstraints; // @synthesize removableConstraints=_removableConstraints;
@property(retain, nonatomic) NSArray *persistentConstraints; // @synthesize persistentConstraints=_persistentConstraints;
@property(retain, nonatomic) UIImageView *participationStatusImageView; // @synthesize participationStatusImageView=_participationStatusImageView;
@property(retain, nonatomic) UILabel *commentLabel; // @synthesize commentLabel=_commentLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
- (void).cxx_destruct;
- (void)updateWithParticipantForSorting:(id)arg1;
- (void)updateConstraints;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIInviteesViewRespondedInviteesSection : NSObject <EKUIInviteesViewSection>
{
    _Bool _editable;
    CDUnknownBlockType _participantTapped;
    CDUnknownBlockType _participantRemoved;
    NSMutableArray *_participants;
    EKEvent *_event;
    NSString *_cachedCellReuseIdentifier;
    unsigned long long _reuseIdentifierVersion;
    CDUnknownBlockType _tableViewCellHook;
}

@property(nonatomic) _Bool editable; // @synthesize editable=_editable;
@property(copy, nonatomic) CDUnknownBlockType tableViewCellHook; // @synthesize tableViewCellHook=_tableViewCellHook;
@property(nonatomic) unsigned long long reuseIdentifierVersion; // @synthesize reuseIdentifierVersion=_reuseIdentifierVersion;
@property(retain, nonatomic) NSString *cachedCellReuseIdentifier; // @synthesize cachedCellReuseIdentifier=_cachedCellReuseIdentifier;
@property(retain, nonatomic) EKEvent *event; // @synthesize event=_event;
@property(retain, nonatomic) NSMutableArray *participants; // @synthesize participants=_participants;
@property(copy, nonatomic) CDUnknownBlockType participantRemoved; // @synthesize participantRemoved=_participantRemoved;
@property(copy, nonatomic) CDUnknownBlockType participantTapped; // @synthesize participantTapped=_participantTapped;
- (void).cxx_destruct;
- (_Bool)_isValidRow:(long long)arg1;
- (void)updateWithEvent:(id)arg1 editable:(_Bool)arg2;
- (void)cancelOutstandingOperations;
- (double)estimatedHeightForRow:(id)arg1;
- (void)commitEditingStyle:(long long)arg1 forRow:(id)arg2;
- (id)titleForDeleteConfirmationButtonForRow:(id)arg1;
- (long long)editingStyleForRow:(id)arg1;
- (_Bool)canEditRow:(id)arg1;
- (void)selectRow:(id)arg1;
- (_Bool)canSelectRow:(id)arg1;
- (void)reloadAndRegisterReusableCellsWithTableView:(id)arg1;
- (id)cellForIndexPath:(id)arg1 inTableView:(id)arg2;
- (unsigned long long)numberOfRows;
- (_Bool)sectionShouldBeShown;
- (id)headerTitle;
- (id)debugTitle;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIInviteesViewSomeInviteesCanAttendCell : EKUIInviteesViewTimeSlotCell
{
}

- (id)participantsTextColor;
- (id)timeTextColor;

@end

@interface EKUIInviteesViewSomeInviteesCanAttendSection : EKUIInviteesViewAlternativeTimeSection
{
}

- (void)searchForMoreTimes;
- (_Bool)searchingForMoreTimes;
- (Class)customTimeCellClass;
- (id)searcherTimeSlots;
- (unsigned long long)initialNumberOfTimeSlotsToShow;
- (id)headerTitle;

@end

@interface EKUILocationEditItemCell : UITableViewCell
{
    UILabel *_title;
    UIImageView *_image;
    UIActivityIndicatorView *_spinner;
    UIButton *_clearButton;
    CDUnknownBlockType _clearButtonTapped;
}

@property(copy, nonatomic) CDUnknownBlockType clearButtonTapped; // @synthesize clearButtonTapped=_clearButtonTapped;
- (void).cxx_destruct;
- (void)_clearButtonTapped:(id)arg1;
- (void)updateWithName:(id)arg1 sourceSupportsAvailability:(_Bool)arg2 availabilityRequestInProgress:(_Bool)arg3 availabilityType:(long long)arg4;
- (id)description;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUILocationSearchModel : NSObject <CLLocationManagerDelegate, MKSearchCompleterDelegate, ABSearchOperationDelegate>
{
    CLLocationManager *_locationManager;
    CLInUseAssertion *_locationAssertion;
    MKLocalSearchCompleter *_completer;
    EKStructuredLocation *_currentLocation;
    NSOperationQueue *_abSearchQueue;
    ABSearchOperation *_abSearchOperation;
    CLGeocoder *_geocoder;
    MKLocalSearch *_localSearch;
    NSTimer *_timer;
    NSObject<OS_dispatch_queue> *_recentsQueue;
    NSObject<OS_dispatch_queue> *_eventsQueue;
    EKEventStore *_eventStore;
    EKOccurrenceCacheLocationSearch *_eventsSearch;
    NSCharacterSet *_whitespaceAndNewlineCharacterSet;
    NSObject<OS_dispatch_queue> *_conferenceRoomProcessingQueue;
    NSOperationQueue *_conferenceRoomOperationQueue;
    NSMutableArray *_mutableConferenceRoomSearchResults;
    NSMutableDictionary *_conferenceRoomAddressesToConferenceRooms;
    NSMutableArray *_geocodedSearchResults;
    NSMutableArray *_recentsSearchResults;
    NSMutableArray *_frequentsSearchResults;
    NSMutableArray *_eventsSearchResults;
    NSMutableArray *_contactsSearchResults;
    NSArray *_mapCompletionSearchResults;
    id <EKUILocationSearchModelDelegate> _delegate;
}

@property(nonatomic) id <EKUILocationSearchModelDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSArray *eventsSearchResults; // @synthesize eventsSearchResults=_eventsSearchResults;
@property(readonly, nonatomic) NSArray *frequentsSearchResults; // @synthesize frequentsSearchResults=_frequentsSearchResults;
@property(readonly, nonatomic) NSArray *recentsSearchResults; // @synthesize recentsSearchResults=_recentsSearchResults;
@property(readonly, nonatomic) NSArray *contactsSearchResults; // @synthesize contactsSearchResults=_contactsSearchResults;
@property(readonly, nonatomic) NSArray *geocodedSearchResults; // @synthesize geocodedSearchResults=_geocodedSearchResults;
@property(readonly, nonatomic) NSArray *mapCompletionSearchResults; // @synthesize mapCompletionSearchResults=_mapCompletionSearchResults;
@property(retain, nonatomic) EKStructuredLocation *currentLocation; // @synthesize currentLocation=_currentLocation;
- (void).cxx_destruct;
- (void)selectCurrentLocation;
- (void)selectLocation:(id)arg1;
- (void)selectMapSearchCompletion:(id)arg1;
- (void)addLocationToRecents:(id)arg1 addressString:(id)arg2;
- (id)CLLocationForDictionary:(id)arg1;
- (id)dictionaryForCLLocation:(id)arg1;
- (void)_handleAvailabilityResults:(id)arg1 forOperation:(id)arg2;
- (void)_addDiscoveredConferenceRooms:(id)arg1;
- (void)_processDirectorySearchResultSet:(id)arg1 forOperation:(id)arg2;
- (void)searchConferenceRooms:(id)arg1;
@property(readonly, nonatomic) NSArray *conferenceRoomSearchResults;
- (void)updateEventLocations:(id)arg1;
- (void)searchFrequentLocations:(id)arg1;
- (void)updateRecents:(id)arg1;
- (void)searchOperation:(id)arg1 didFindMatches:(id)arg2 moreComing:(_Bool)arg3;
- (void)geocodeFallback:(id)arg1;
- (void)completerDidUpdateResults:(id)arg1 finished:(_Bool)arg2;
- (void)timerFired:(id)arg1;
- (void)cancelTimer;
- (void)dedupeResults;
- (void)beginSearchForTerm:(id)arg1;
- (void)cancelSearch;
- (void)resetSearchResults:(_Bool)arg1;
- (void)resetConferenceRoomSearchResults;
- (void)resetEventsSearchResults;
- (void)resetContactsSearchResults;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)stopUpdatingLocation;
- (void)getCurrentLocation;
- (void)dealloc;
- (id)initWithEventStore:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUILocationSearchResultCell : UITableViewCell
{
}

- (id)description;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIMailUtilities : NSObject
{
}

+ (id)_stringForIsolatedAtomPresentationOption:(unsigned long long)arg1;
+ (id)atomPresentationOptionsAsString:(unsigned long long)arg1;

@end

@interface EKUIOccurrenceTableViewCell : UITableViewCell
{
    UIView *_separatorViewForNonOpaqueTables;
    UILabel *_primaryLabel;
    UILabel *_secondaryLabel;
    UILabel *_topTimeLabel;
    UILabel *_bottomTimeLabel;
    ColorBarView *_colorBarView;
    UIImageView *_angleStripeBackgroundView;
    NSLayoutConstraint *_primaryTextTopToBaselineConstraint;
    NSLayoutConstraint *_secondaryTextTopToBaselineConstraint;
    NSLayoutConstraint *_secondaryTextBottomToBaselineConstraint;
    NSLayoutConstraint *_timeTextWidthConstraint;
    NSLayoutConstraint *_timeTextLeftMarginConstraint;
    NSLayoutConstraint *_timeTextRightMarginConstraint;
    double _travelTime;
    long long _routingMode;
    UIColor *_eventCalendarColor;
    NSDate *_eventStartDateIncludingTravelTime;
    EKCalendarDate *_eventStartDate;
    EKCalendarDate *_eventEndDate;
    NSAttributedString *_eventTitleAttrString;
    NSString *_eventTitle;
    NSString *_eventLocation;
    NSString *_topTimeString;
    NSString *_bottomTimeString;
    NSString *_travelTimeLabelString;
    NSString *_travelAddressString;
    NSString *_travelDepartureTimeString;
    NSDictionary *_secondaryStringDrawingAttributes;
    NSDictionary *_topTimeStringDrawingAttributes;
    NSDictionary *_bottomTimeStringDrawingAttributes;
    NSDictionary *_travelTimeLabelStringDrawingAttributes;
    NSDictionary *_travelAddressStringDrawingAttributes;
    NSDictionary *_travelDepartureTimeStringDrawingAttributes;
    long long _truncatingOptions;
    long long _nontruncatingOptions;
    UIImage *_routingModeImage;
    _Bool _isAllDay;
    _Bool _isRecurring;
    _Bool _isBirthday;
    _Bool _isFacebook;
    _Bool _tentative;
    _Bool _declined;
    _Bool _needsReply;
    _Bool _cancelled;
    _Bool _showingTravelTime;
    _Bool _drawsOwnRowSeparators;
    _Bool _usesVibrantSeparatorOverlayDrawing;
    _Bool _usesInsetMargin;
}

+ (id)_tentativeAngledStripeBackground;
+ (id)_needsReplyAngledStripeBackground;
+ (id)_needsReplyDot;
+ (id)_facebookIcon;
+ (id)_birthdayIcon;
+ (double)_rightImageSpacing;
+ (double)tentativeStripeBackgroundAlpha;
+ (id)tentativeStripeColor;
+ (id)tentativeBackgroundColor;
+ (double)needsReplyStripeBackgroundAlpha;
+ (id)needsReplyStripeColor;
+ (id)needsReplyBackgroundColor;
+ (id)normalBackgroundColor;
+ (id)strikethroughTimeTextColor;
+ (id)normalBottomTimeTextColor;
+ (id)normalTopTimeTextColor;
+ (id)strikethroughSecondaryTextColor;
+ (id)normalSecondaryTextColor;
+ (id)strikethroughPrimaryTextColor;
+ (id)invitationPrimaryTextColor;
+ (id)prefixPrimaryTextColor;
+ (id)normalPrimaryTextColor;
+ (id)cancelledDeclinedColorBarColor;
+ (void)clearFontCaches;
+ (id)secondaryTextLabelFont;
+ (id)constrainedPrimaryTextLabelFont;
+ (id)scalablePrimaryTextLabelFont;
+ (id)timeLabelsFont;
+ (double)cellHeightForWidth:(double)arg1;
+ (id)reuseIdentifier;
+ (void)_clearCaches;
+ (void)initialize;
@property(nonatomic) _Bool usesInsetMargin; // @synthesize usesInsetMargin=_usesInsetMargin;
@property(nonatomic) _Bool usesVibrantSeparatorOverlayDrawing; // @synthesize usesVibrantSeparatorOverlayDrawing=_usesVibrantSeparatorOverlayDrawing;
@property(nonatomic) _Bool drawsOwnRowSeparators; // @synthesize drawsOwnRowSeparators=_drawsOwnRowSeparators;
- (void).cxx_destruct;
- (id)_textForDepartureTimeLabel;
- (id)_textForBottomTimeLabel;
- (id)_textForTopTimeLabel;
- (_Bool)isDeclined;
- (_Bool)needsReply;
- (_Bool)isTentative;
- (_Bool)isFacebook;
- (_Bool)isBirthday;
- (_Bool)isCancelled;
- (_Bool)isAllDay;
- (id)_textLabelWithAddedImageAttachmentsFromText:(id)arg1 withFont:(id)arg2;
- (_Bool)_textLabelHasAddedImages;
- (void)_addIcon:(id)arg1 toString:(id)arg2 withFont:(id)arg3;
- (void)_updateRoutingModeIcon;
- (void)_updateTravelTimeAddressLabel;
- (void)_updateTravelTimeLabel;
- (void)_updateTravelDepartureTimeLabel;
- (void)_updateBottomTimeLabel;
- (void)_updateTopTimeLabel;
- (void)_updateSecondaryTextLabel;
- (void)_updatePrimaryTextLabel;
- (void)_updateAngleBackgroundColor;
- (void)_updateColorBarColor;
- (void)_setUpConstraints;
- (double)_rightMarginForTimeViewsFromTimeWidth:(double)arg1;
- (double)_leftMarginForTimeViewsFromTimeWidth:(double)arg1;
- (double)_widthForTimeViews;
- (double)_verticalSpacingBottomToBaselineForBottomLabel;
- (double)_verticalSpacingTopToBaselineForBottomLabel;
- (double)_verticalSpacingTopToBaselineForTopLabel;
- (void)updateConstraints;
- (void)contentCategorySizeChanged;
- (void)_createViews;
- (id)_travelTimeIcon;
- (void)setFrame:(struct CGRect)arg1;
- (void)forceUpdateOfAllElements;
- (id)primaryTextLabelFont;
- (void)layoutSubviews;
- (void)_updateContentForSizeCategoryChange:(id)arg1;
- (void)updateWithEvent:(id)arg1 calendar:(id)arg2 placedUnderDayWithStartDate:(id)arg3 showCalendarColors:(_Bool)arg4 extendHeightForTravelTime:(_Bool)arg5;
- (void)updateWithEvent:(id)arg1 calendar:(id)arg2 placedUnderDayWithStartDate:(id)arg3 showCalendarColors:(_Bool)arg4;
- (void)_setMarginExtendsToFullWidth:(_Bool)arg1;
- (void)dealloc;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface EKUIOverlayCalendarSignificantDatesProvider : NSObject
{
    CalDateRange *_cachedDateRange;
    CalDateRange *_cachedCentralYear;
    NSDictionary *_cachedFirstsOfMonths;
    NSDictionary *_cachedFirstsOfYears;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _currentGeneration;
    NSDate *_currentRequest;
    _Bool _loadPending;
    CDUnknownBlockType _significantDatesChangedHandler;
}

@property(copy, nonatomic) CDUnknownBlockType significantDatesChangedHandler; // @synthesize significantDatesChangedHandler=_significantDatesChangedHandler;
- (void).cxx_destruct;
- (void)_load;
- (void)_requestDate:(id)arg1;
- (id)firstOfOverlayYearsForCalendarMonth:(id)arg1;
- (id)firstOfOverlayMonthsForCalendarMonth:(id)arg1;
- (void)_invalidateCaches;
- (void)dealloc;
- (id)init;

@end

@interface EKUIRecurrenceAlertController : NSObject <UIActionSheetDelegate>
{
    UIAlertController *_alertController;
    CDUnknownBlockType _completionHandler;
}

+ (id)presentDetachAlertWithOptions:(unsigned long long)arg1 viewController:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
+ (id)presentDeleteAlertWithOptions:(unsigned long long)arg1 viewController:(id)arg2 stringForDeleteButton:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
+ (id)presentDeleteAlertWithOptions:(unsigned long long)arg1 viewController:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
+ (id)newAlertControllerWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
- (void).cxx_destruct;
- (void)_cleanup;
- (void)_completeWithSelection:(int)arg1;
- (void)cancelAnimated:(_Bool)arg1;
- (void)_presentDetachAlertWithOptions:(unsigned long long)arg1 viewController:(id)arg2;
- (void)_presentDeleteAlertWithOptions:(unsigned long long)arg1 viewController:(id)arg2 stringForDeleteButton:(id)arg3;
- (_Bool)_useSheetForViewController:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface EKUIRecurrenceRuleBuilder : NSObject
{
    int _frequency;
    int _days;
    int _ordinalValue;
    long long _interval;
    unsigned long long _count;
    NSArray *_dayNumbers;
    NSArray *_monthNumbers;
}

@property(retain) NSArray *monthNumbers; // @synthesize monthNumbers=_monthNumbers;
@property int ordinalValue; // @synthesize ordinalValue=_ordinalValue;
@property int days; // @synthesize days=_days;
@property(retain) NSArray *dayNumbers; // @synthesize dayNumbers=_dayNumbers;
@property unsigned long long count; // @synthesize count=_count;
@property long long interval; // @synthesize interval=_interval;
@property int frequency; // @synthesize frequency=_frequency;
- (void).cxx_destruct;
- (id)description;
- (id)setPositions;
- (id)daysOfTheWeekWithWeek:(long long)arg1;
- (id)daysOfTheWeek;
- (int)_frequencyToUse;
- (id)recurrenceRule;
- (void)_setDefaultValues;
- (id)init;

@end

__attribute__((visibility("hidden")))
@interface EKUnknownIdentityViewController : UIViewController <ABUnknownPersonViewControllerDelegate>
{
    id <EKIdentityProtocol> _identity;
    ABUnknownPersonViewController *_unknownPersonViewController;
}

- (void).cxx_destruct;
- (void)unknownPersonViewController:(id)arg1 didResolveToPerson:(void *)arg2;
- (void)setIdentity:(id)arg1;
- (void)loadView;
- (id)initWithIdentity:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSDateComponents (EventKit)
- (void)clearTimeComponents;
- (_Bool)hasTimeComponents;
- (CDStruct_79f9e052)gregorianDate;
- (id)dateComponentsForEndOfDay;
- (id)dateComponentsForDateOnly;
- (id)dateComponents:(unsigned long long)arg1 byAddingDays:(int)arg2 calendar:(id)arg3;
- (id)dateComponents:(unsigned long long)arg1 byAddingComponents:(id)arg2 calendar:(id)arg3;
@end

@interface NSObject (AccessibilityAccessors)
+ (id)_accessibilityStringForDate:(CDStruct_79f9e052)arg1;
+ (id)_accessibilityStringForDayOfWeek:(int)arg1;
+ (_Bool)_accessibilityCalShow24Hours;
+ (_Bool)_accessibilityCalHourDesignatorsAreBeforeHour;
+ (_Bool)_accessibilityCalSpaceBetweenDesignatorsAndHour;
+ (void)_accessibilityCalGetHourDesignatorsForAM:(id *)arg1 andPM:(id *)arg2;
@end

@interface NSObject (AccessibilityCalDetailStringAccessors)
+ (void)_accessibilityCalDetailStringForEvent:(id)arg1 inLine1:(id *)arg2 inLine2:(id *)arg3 inLine3:(id *)arg4 inLine4:(id *)arg5;
@end

@interface NSString (NameDecomposition)
+ (id)_attendeePartialSurnames;
+ (id)_attendeeNameExtensions;
- (void)attendeeFirstName:(id *)arg1 middleName:(id *)arg2 lastName:(id *)arg3 extension:(id *)arg4;
- (id)_attendeeTrimCommasSpacesQuotes;
- (_Bool)_attendeeAppearsToBeAnInitial;
@end

@interface NSTimeZone (EventKitUI)
- (void)setCityName:(id)arg1;
- (id)cityName;
@end

@interface OccurrenceCacheDataSource : NSObject <OccurrenceCacheDataSourceProtocol>
{
    EKEventStore *_eventStore;
    NSSet *_calendars;
    NSArray *_cachedDays;
    int _cachedDaysSeed;
}

- (void).cxx_destruct;
- (void)invalidate;
- (void)stopSearching;
- (void)searchWithTerm:(id)arg1;
- (void)fetchDaysInBackgroundStartingFromSection:(long long)arg1;
- (long long)sectionForCachedOccurrencesOnDate:(id)arg1;
- (id)cachedOccurrenceAtIndexPath:(id)arg1;
- (id)dateAtDayIndex:(long long)arg1;
- (long long)countOfOccurrencesAtDayIndex:(long long)arg1;
- (long long)cachedDayCount;
- (id)_cachedDays;
- (_Bool)cachedOccurrencesAreLoaded;
- (_Bool)cachedOccurrencesAreBeingGenerated;
- (_Bool)supportsFakeTodaySection;
- (_Bool)supportsInvitations;
- (void)invalidateCachedOccurrences;
- (id)initWithEventStore:(id)arg1 calendars:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OccurrenceCacheSearchDataSource : OccurrenceCacheDataSource
{
    EKOccurrenceCacheSearch *_search;
    NSMutableArray *_processingCachedDays;
    struct _opaque_pthread_mutex_t {
        long long __sig;
        char __opaque[56];
    } _resultsLock;
}

- (void).cxx_destruct;
- (id)_cachedDays;
- (void)stopSearching;
- (void)searchWithTerm:(id)arg1;
- (void)_setCachedDaysAndNotify:(id)arg1;
- (long long)countOfOccurrencesAtDayIndex:(long long)arg1;
- (void)invalidateCachedOccurrences;
- (_Bool)supportsFakeTodaySection;
- (_Bool)supportsInvitations;
- (void)dealloc;
- (void)invalidate;
- (id)initWithEventStore:(id)arg1 calendars:(id)arg2;

@end

@interface PreferencesDeleteButtonView : UIView
{
    UIButton *_button;
}

- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
@property(readonly, retain, nonatomic) UIButton *button;
- (id)initWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;

@end

@interface PreferencesMultiLineCell : EKUIConstrainedFontsTableViewCell
{
}

+ (struct CGSize)fitValue:(id)arg1 forWidth:(double)arg2 font:(id)arg3;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface PreferencesTableControlCell : EKUIConstrainedFontsTableViewCell
{
}

@property(retain, nonatomic) UIControl *control;

@end

@interface PreferencesValueCell : EKUIConstrainedFontsTableViewCell
{
    id <EKCellShortener> _shortener;
}

@property(nonatomic) __weak id <EKCellShortener> shortener; // @synthesize shortener=_shortener;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)_checkValueWidth;

@end

@interface SpringFactory : NSObject <_UIBasicAnimationFactory>
{
}

+ (id)sharedFactory;
- (id)_timingFunctionForAnimation;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ScrollSpringFactory : SpringFactory
{
    double _initialVelocity;
}

+ (id)sharedFactory;
@property(nonatomic) double initialVelocity; // @synthesize initialVelocity=_initialVelocity;
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;

@end

@interface SingleToolbarItemContainerView : UIView
{
}

- (void)setFrameWithToolbarBounds:(struct CGRect)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)updateForMiniBarState:(_Bool)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface SubtitleCellWithAdditionalDetail : EKUIConstrainedFontsTableViewCell
{
    UILabel *_additionalDetailLabel;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
@property(readonly, retain, nonatomic) UILabel *additionalDetailLabel;

@end

@interface TodayInvalidationTimerWrapper : NSObject
{
    NSTimer *_tzSupportDayRolloverTimer;
}

- (void).cxx_destruct;
- (void)invalidateTodayAndNotifyIfChanged;
- (_Bool)todayChangedAfterInvalidation;
- (void)_killTimeZoneTimer;
- (void)_setupTimeZoneTimer;
- (void)dealloc;
- (id)init;

@end

@interface TwoPartTextLabel : UILabel
{
    NSString *_secondTextPart;
    struct CGSize _part2Size;
    double _minPart2Width;
    _Bool _strikethroughPart1;
    _Bool _strikethroughPart2;
}

@property(nonatomic) _Bool strikethroughPart2; // @synthesize strikethroughPart2=_strikethroughPart2;
@property(nonatomic) _Bool strikethroughPart1; // @synthesize strikethroughPart1=_strikethroughPart1;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (void)setMinimumPart2Width:(double)arg1;
- (double)rightmostDisplayedPartWidth;
- (struct CGSize)idealSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)hasTwoParts;
- (struct CGSize)textPart2Size;
- (void)setTextPart1:(id)arg1;
- (void)setTextPart1:(id)arg1 part2:(id)arg2;
- (id)description;

@end

@interface UIColor (MobileCal)
+ (id)tableViewBackgroundColorOpaque;
- (id)burnWithColor:(id)arg1;
- (id)overlayWithColor:(id)arg1;
- (id)soverWithColor:(id)arg1;
- (_Bool)isGreenOrYellow;
- (double)differenceFromColor:(id)arg1;
- (double)luminance;
- (double)blueComponent;
- (double)greenComponent;
- (double)redComponent;
- (double)brightnessComponent;
- (double)saturationComponent;
- (double)hueComponent;
@end

@interface UINotesTableView : UITableView
{
}

- (void)setFrame:(struct CGRect)arg1;

@end

