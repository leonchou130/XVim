//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/VideoUpload.framework/VideoUpload
// UUID: AB653309-A25F-385D-AE8A-BA3A5FE2B5D6
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 97.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol JSONHTTPRequestDelegate <NSObject>
- (void)request:(JSONHTTPRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)request:(JSONHTTPRequest *)arg1 didReceiveObject:(id)arg2;

@optional
- (void)request:(JSONHTTPRequest *)arg1 hasWrittenBytes:(long long)arg2 expectsToWrite:(long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIPickerViewDelegate <NSObject>

@optional
- (void)pickerView:(UIPickerView *)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (UIView *)pickerView:(UIPickerView *)arg1 viewForRow:(long long)arg2 forComponent:(long long)arg3 reusingView:(UIView *)arg4;
- (NSAttributedString *)pickerView:(UIPickerView *)arg1 attributedTitleForRow:(long long)arg2 forComponent:(long long)arg3;
- (NSString *)pickerView:(UIPickerView *)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (double)pickerView:(UIPickerView *)arg1 rowHeightForComponent:(long long)arg2;
- (double)pickerView:(UIPickerView *)arg1 widthForComponent:(long long)arg2;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol VUPublishPostDelegate
- (void)publishPost:(VUPublishPost *)arg1 hasWrittenBytes:(long long)arg2 expectsToWrite:(long long)arg3;
- (void)publishPostSucceeded:(VUPublishPost *)arg1;
- (void)publishPost:(VUPublishPost *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol VUPublishViewControllerDelegate
- (void)publishViewControllerCancelled:(VUPublishViewController *)arg1;
- (void)publishViewControllerPublished:(VUPublishViewController *)arg1;
@end

@interface JSONHTTPRequest : NSObject <NSURLConnectionDelegate>
{
    NSMutableURLRequest *_request;
    NSURLConnection *_connection;
    NSMutableData *_rawData;
    NSData *_overridePostBody;
    id <JSONHTTPRequestDelegate> _delegate;
    _Bool _receivedValidResponse;
    OAURLRequestSigner *_signer;
    NSString *_HTTPRequestBoundary;
    _Bool _signsMultipartPOSTData;
    _Bool _allowsCellularAccess;
    int _HTTPMethod;
    int _responseType;
    NSDictionary *_getParams;
    NSDictionary *_postParams;
    NSDictionary *_unsignedPostParams;
    NSHTTPURLResponse *_response;
}

+ (id)encodedStringForParameterDictionary:(id)arg1;
@property(nonatomic) int responseType; // @synthesize responseType=_responseType;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) int HTTPMethod; // @synthesize HTTPMethod=_HTTPMethod;
@property(readonly, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
@property(nonatomic) _Bool signsMultipartPOSTData; // @synthesize signsMultipartPOSTData=_signsMultipartPOSTData;
@property(retain, nonatomic) NSDictionary *unsignedPostParams; // @synthesize unsignedPostParams=_unsignedPostParams;
@property(retain, nonatomic) NSDictionary *postParams; // @synthesize postParams=_postParams;
@property(retain, nonatomic) NSDictionary *getParams; // @synthesize getParams=_getParams;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)cancel;
- (void)start;
- (void)setOverridePostBody:(id)arg1;
- (id)_multipartParamData:(id)arg1;
- (void)setHTTPHeader:(id)arg1 value:(id)arg2;
- (void)dealloc;
- (id)HTTPRequestBoundary;
- (id)initWithURL:(id)arg1 delegate:(id)arg2;
- (id)initWithURL:(id)arg1 delegate:(id)arg2 signer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NSString (VUAdditions)
- (id)dictionaryWithResponseStringUsingSeparator:(id)arg1 unescape:(_Bool)arg2;
- (id)urlParameterEscapedString;
@end

@interface VUAuthenticator : NSObject <JSONHTTPRequestDelegate>
{
    long long _authenticatorState;
    NSString *_accountName;
    JSONHTTPRequest *_authenticationRequest;
}

+ (id)sharedAuthenticator;
@property(readonly, nonatomic) NSString *accountName; // @synthesize accountName=_accountName;
@property(readonly, nonatomic) long long authenticatorState; // @synthesize authenticatorState=_authenticatorState;
- (void).cxx_destruct;
- (void)_notifyFailure;
- (void)_notifyStateChange;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)request:(id)arg1 didReceiveObject:(id)arg2;
- (void)invalidateAuthentication;
- (id)authenticationDialogWithTarget:(id)arg1 action:(SEL)arg2;
- (void)loadCredentials;
- (void)authenticateWithUsername:(id)arg1 password:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface VUCategory : NSObject
{
    NSString *_displayName;
    id _value;
}

+ (id)categoryWithDisplayName:(id)arg1 value:(id)arg2;
@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
- (void).cxx_destruct;

@end

@interface VUCategoryCell : UITableViewCell
{
}

- (void)setCategoryString:(id)arg1;
- (id)init;

@end

@interface VUFileUpload : NSObject
{
    NSString *_name;
    NSData *_data;
}

@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithPath:(id)arg1;

@end

@interface VUFooterContainerView : UIView
{
    id _delegate;
    UIButton *_termsButton;
}

@property(retain, nonatomic) UIButton *termsButton; // @synthesize termsButton=_termsButton;
@property(nonatomic) __weak id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1 bypassDelegate:(_Bool)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface VUPublishAgent : PLPublishingAgent <VUPublishViewControllerDelegate, VUPublishPostDelegate>
{
    UINavigationController *_navigationController;
    VUPublishPost *_publishPost;
    VUPublishViewController *_publishViewController;
}

- (void).cxx_destruct;
- (void)publishPost:(id)arg1 hasWrittenBytes:(long long)arg2 expectsToWrite:(long long)arg3;
- (void)publishPostSucceeded:(id)arg1;
- (void)publishPost:(id)arg1 didFailWithError:(id)arg2;
- (void)publishViewControllerCancelled:(id)arg1;
- (void)publishViewControllerPublished:(id)arg1;
- (void)resignPublishingSheetResponders;
- (_Bool)allowsViewingOnHost;
- (_Bool)allowsTellingFriend;
- (id)mediaTitle;
- (id)navigationController;
- (Class)publishViewControllerClass;

@end

@interface VUPublishPost : NSObject
{
    id <VUPublishPostDelegate> _delegate;
    _Bool _allowsCellularAccessForUploads;
}

@property(nonatomic) _Bool allowsCellularAccessForUploads; // @synthesize allowsCellularAccessForUploads=_allowsCellularAccessForUploads;
- (void).cxx_destruct;
- (void)startUpload;
- (id)initWithDelegate:(id)arg1;

@end

@interface VUPublishViewController : UIViewController <UITableViewDelegate, UITableViewDataSource, UIPickerViewDelegate, UIAlertViewDelegate>
{
    UITableView *_tableView;
    UIPickerView *_picker;
    UIView *_pickerContainer;
    _Bool _viewShrunk;
    _Bool _showingPicker;
    UIImageView *_headerImageView;
    PLTableViewEditableCell *_titleCell;
    PLTableViewEditableCell *_descriptionCell;
    double _descriptionHeight;
    PLTableViewEditableCell *_optionCells[2];
    NSMutableArray *_tagCells;
    VUCategoryCell *_categoryCell;
    NSArray *_accessCells;
    unsigned long long _accessRow;
    UITableViewCell *_accountCell;
    VUFooterContainerView *_footerContainer;
    UIAlertView *_authenticationAlert;
    UIAlertView *_accountAlert;
    UIAlertView *_authenticationFailedAlert;
    struct {
        long long title;
        long long hd;
        long long tags;
        long long category;
        long long access;
        long long account;
    } _sectionIndices;
    _Bool _showHDSection;
    _Bool _enableHDSection;
    int _selectedOption;
    id <VUPublishViewControllerDelegate> _delegate;
    long long _SDSize;
    long long _HDSize;
}

@property(readonly, nonatomic) int selectedOption; // @synthesize selectedOption=_selectedOption;
@property(nonatomic) long long HDSize; // @synthesize HDSize=_HDSize;
@property(nonatomic) long long SDSize; // @synthesize SDSize=_SDSize;
@property(nonatomic) _Bool enableHDSection; // @synthesize enableHDSection=_enableHDSection;
@property(nonatomic) _Bool showHDSection; // @synthesize showHDSection=_showHDSection;
@property(nonatomic) __weak id <VUPublishViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) VUCategory *videoCategory;
@property(readonly, nonatomic) NSArray *videoTags;
@property(readonly, nonatomic) NSString *videoDescription;
@property(readonly, nonatomic) NSString *videoTitle;
- (void)_authenticatorFailed:(id)arg1;
- (void)_authenticatorStateChanged:(id)arg1;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)editableTagCellEndOfTagCharacterPressed:(id)arg1;
- (void)editableCell:(id)arg1 textChanged:(id)arg2;
- (void)editableCellReturnPressed:(id)arg1;
- (void)editableCellDidBeginEditing:(id)arg1;
- (long long)numberOfComponentsInPickerView:(id)arg1;
- (long long)pickerView:(id)arg1 numberOfRowsInComponent:(long long)arg2;
- (double)pickerView:(id)arg1 rowHeightForComponent:(long long)arg2;
- (id)pickerView:(id)arg1 titleForRow:(long long)arg2 forComponent:(long long)arg3;
- (void)pickerView:(id)arg1 didSelectRow:(long long)arg2 inComponent:(long long)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (id)termsOfUseURL;
- (id)termsOfUseString;
- (id)accountString;
- (id)accountAlert;
- (id)headerLogo;
- (void)authReturnKeyPressed:(id)arg1;
- (id)authenticator;
- (id)accessCells;
- (id)categories;
- (void)_termsButtonPressed:(id)arg1;
- (void)_hidePicker;
- (void)_showPicker;
- (void)_unshrinkView;
- (void)_shrinkView;
- (void)_automaticKeyboardDidHide:(id)arg1;
- (void)_automaticKeyboardDidShow:(id)arg1;
- (void)orderOutKeyboard;
- (void)resignResponder;
- (void)_footerFrameDidChangeWithSplitKeyboard:(_Bool)arg1;
- (void)_updatePublishButton;
- (long long)_indexOfBlankTagCellOtherThan:(id)arg1;
- (void)_addNewTagCell;
- (void)_updateAccountCell;
- (void)_cancel;
- (void)_publish;
- (_Bool)_isAuthenticated;
- (void)showAlertWithTitle:(id)arg1 message:(id)arg2;
- (_Bool)checkParametersAndWarn;
- (_Bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

