//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct mig_subsystem {
    CDUnknownFunctionPointerType _field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned long long _field5;
    struct routine_descriptor _field6[1];
};

struct routine_descriptor {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct *_field5;
    unsigned int _field6;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int port;
    NSObject<OS_xpc_object> *endpoint;
} CDStruct_2873f8fa;

typedef struct {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    int _field6;
} CDStruct_c91b0553;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned int val[8];
} CDStruct_4c969caf;

#pragma mark -

//
// File: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
// UUID: F9B7F8C6-47EA-3346-89B5-2700BF8AAADF
//
//                           Arch: x86_64
//                Current version: 1.0.0
//          Compatibility version: 1.0.0
//                 Source version: 97.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 8.0.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol BSFileLoggerDelegate <NSObject>
- (void)loggerEnabledStateChanged:(BSFileLogger *)arg1;
@end

@protocol BSFuture <NSObject>
@property(readonly, getter=isCancelled) _Bool cancelled;
@property(readonly, getter=isFinished) _Bool finished;
- (void)addFailureBlock:(void (^)(NSError *))arg1;
- (void)addSuccessBlock:(void (^)(id))arg1;
- (_Bool)cancel;
- (id)resultBeforeDate:(NSDate *)arg1 error:(id *)arg2;
- (id)result:(id *)arg1;
@end

@protocol BSLogging <NSObject>
- (void)logWithFormat:(NSString *)arg1 arguments:(struct __va_list_tag [1])arg2;
- (void)logWithFormat:(NSString *)arg1;
@end

@protocol BSSettingDescriptionProvider <NSObject>
- (NSString *)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (NSString *)keyDescriptionForSetting:(unsigned long long)arg1;
@end

@protocol BSWatchdogProviding <NSObject>
- (double)watchdogTimeout;

@optional
- (_Bool)shouldWatchdog:(id *)arg1;
@end

@protocol BSXPCCoding <NSObject>
- (void)encodeWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
- (id)initWithXPCDictionary:(NSObject<OS_xpc_object> *)arg1;
@end

@protocol BSXPCServerClient <NSObject>
@property(readonly, retain, nonatomic) NSObject<OS_xpc_object> *connection;
- (void)invalidate;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSMutableCopying
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@interface BSAction : NSObject <BSXPCCoding, BSSettingDescriptionProvider>
{
    BSSettings *_info;
    _Bool _expectsResponse;
    unsigned long long _timeout;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _queue_hasBeenNeutered;
    CDUnknownBlockType _queue_handler;
    CDStruct_2873f8fa _queue_listenerTokens;
    NSObject<OS_dispatch_source> *_queue_timer;
}

@property(readonly, copy, nonatomic) BSSettings *info; // @synthesize info=_info;
- (id)_handlerDescription;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)sendResponse:(id)arg1;
- (_Bool)canSendResponse;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithInfo:(id)arg1 timeout:(double)arg2 forResponseOnQueue:(id)arg3 withHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface BSBaseXPCServer : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_xpc_object> *_listenerConnection;
    NSMutableSet *_clients;
    _Bool _connectionResumed;
    _Bool _usesAnonymousConnection;
    NSString *_serviceName;
    int _notifyToken;
}

@property(nonatomic, getter=usesAnonymousConnection) _Bool usesAnonymousConnection; // @synthesize usesAnonymousConnection=_usesAnonymousConnection;
- (id)_copyEndpoint;
- (id)_clients;
- (id)_connection;
- (id)_getStringFromMessage:(id)arg1 key:(char *)arg2;
- (void)_sendReply:(id)arg1 messagePacker:(CDUnknownBlockType)arg2;
- (void)queue_clientRemoved:(id)arg1;
- (void)queue_clientAdded:(id)arg1;
- (id)queue_newClientForConnection:(id)arg1;
- (Class)queue_classForNewClientConnection:(id)arg1;
- (_Bool)queue_shouldAcceptNewConnection:(id)arg1;
- (void)queue_handleMessage:(id)arg1;
- (id)_queue_clientForConnection:(id)arg1;
- (void)_queue_removeClientConnection:(id)arg1;
- (void)_addClientConnection:(id)arg1;
- (void)_invalidate;
- (void)resumeServer;
- (id)_notifyTokenName;
- (void)registerServerSuspended;
- (void)run;
- (id)queue;
- (void)dealloc;
- (id)initWithServiceName:(id)arg1 onQueue:(id)arg2;
- (id)initWithServiceName:(id)arg1;

@end

@interface BSActionListener : BSBaseXPCServer
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMapTable *_queue_portToContextMap;
}

- (CDStruct_2873f8fa)listenForResponseWithHandler:(CDUnknownBlockType)arg1 timeout:(unsigned long long)arg2;
- (void)queue_handleMessage:(id)arg1 client:(id)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithServiceName:(id)arg1 onQueue:(id)arg2;

@end

@interface BSActionListenerController : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _transactionCount;
    BSActionListener *_listener;
    unsigned int _listenerCount;
    unsigned int _listenerTearDownToken;
}

+ (id)sharedInstance;
- (id)listener;
- (void)endTransactionForListener:(id)arg1;
- (void)endTransaction;
- (void)beginTransactionForListener:(id)arg1;
- (void)beginTransaction;
- (void)dealloc;
- (id)init;

@end

@interface BSActionResponse : NSObject <NSCopying, BSXPCCoding, BSSettingDescriptionProvider>
{
    BSSettings *_info;
    NSError *_error;
}

+ (id)responseForError:(id)arg1;
+ (id)responseWithInfo:(id)arg1;
+ (id)response;
@property(readonly, retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, copy, nonatomic) BSSettings *info; // @synthesize info=_info;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)keyDescriptionForSetting:(unsigned long long)arg1;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)descriptionWithMultilinePrefix:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithInfo:(id)arg1 error:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface BSAnimationSettings : NSObject <NSCopying, NSMutableCopying, NSSecureCoding, BSXPCCoding>
{
    double _duration;
    double _delay;
    double _frameInterval;
    CAMediaTimingFunction *_timingFunction;
}

+ (_Bool)supportsSecureCoding;
+ (id)settingsWithDuration:(double)arg1 delay:(double)arg2 timingFunction:(id)arg3;
+ (id)settingsWithDuration:(double)arg1 delay:(double)arg2;
+ (id)settingsWithDuration:(double)arg1 timingFunction:(id)arg2;
+ (id)settingsWithDuration:(double)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)_setFrameInterval:(double)arg1;
- (void)_setTimingFunction:(id)arg1;
- (void)_setDelay:(double)arg1;
- (void)_setDuration:(double)arg1;
- (_Bool)isSpringAnimation;
@property(readonly, nonatomic) double frameInterval;
@property(readonly, retain, nonatomic) CAMediaTimingFunction *timingFunction;
@property(readonly, nonatomic) double delay;
@property(readonly, nonatomic) double duration;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)_initWithDuration:(double)arg1 delay:(double)arg2 frameInterval:(double)arg3 timingFunction:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface BSAuditToken : NSObject <NSCopying, BSXPCCoding>
{
    CDStruct_4c969caf _auditToken;
}

+ (id)tokenFromMachMessage:(CDStruct_c91b0553 *)arg1;
+ (id)tokenFromXPCMessage:(id)arg1;
+ (id)tokenFromAuditToken:(CDStruct_4c969caf)arg1;
@property(readonly, nonatomic) CDStruct_4c969caf realToken; // @synthesize realToken=_auditToken;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)_valueFromData:(id)arg1 ofType:(const char *)arg2;
- (id)_dataWithValue:(id)arg1;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)bundleID;
- (int)pid;
- (_Bool)hasEntitlement:(id)arg1;
- (id)initWithMachMessage:(CDStruct_c91b0553 *)arg1;
- (id)initWithXPCMessage:(id)arg1;
- (id)initWithAuditToken:(CDStruct_4c969caf)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface BSBaseXPCClient : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_xpc_object> *_connection;
    BSSignal *_invalidationSignal;
    NSObject<OS_xpc_object> *_serverEndpoint;
    NSString *_serviceName;
    _Bool _suspended;
    _Bool _clientInvalidated;
    int _notifyToken;
}

- (void)queue_invalidate;
- (void)queue_reconnectToResumedServerIfNecessary;
- (void)queue_reregister;
- (_Bool)queue_isSuspended;
- (id)queue_connection;
- (void)queue_registerWithServerIfNecessary;
- (id)_connectionInstanceUUID;
- (void)queue_suspendConnection;
- (void)queue_resumeConnection;
- (void)queue_connectionWasInvalidated;
- (void)queue_connectionWasInterrupted;
- (void)queue_connectionWasDestroyed;
- (void)queue_connectionWasSuspended;
- (void)queue_connectionWasResumed;
- (void)queue_connectionWasCreated;
- (void)queue_handleMessage:(id)arg1;
- (void)_setEndpoint:(id)arg1;
- (id)_connection;
- (id)_notifyTokenName;
- (void)_sendMessage:(CDUnknownBlockType)arg1 withReplyHandler:(CDUnknownBlockType)arg2 waitForReply:(_Bool)arg3 waitDuration:(unsigned long long)arg4;
- (void)_sendMessage:(CDUnknownBlockType)arg1;
- (void)_sendReply:(id)arg1 messagePacker:(CDUnknownBlockType)arg2;
- (id)_getStringFromMessage:(id)arg1 key:(char *)arg2;
- (id)_errorFromMessageIfAny:(id)arg1;
- (void)invalidate;
- (void)resumeConnection;
- (void)suspendConnection;
- (void)reconnectIfNecessary;
@property(readonly, nonatomic, getter=isSuspended) _Bool suspended;
- (void)dealloc;
- (id)initWithEndpoint:(id)arg1;
- (id)initWithServiceName:(id)arg1 endpoint:(id)arg2;
- (id)initWithServiceName:(id)arg1;

@end

@interface BSBasicServerClient : NSObject <BSXPCServerClient>
{
    NSObject<OS_xpc_object> *_connection;
}

+ (id)wrapperWithConnection:(id)arg1;
@property(retain, nonatomic) NSObject<OS_xpc_object> *connection; // @synthesize connection=_connection;
- (void)sendMessageWithPacker:(CDUnknownBlockType)arg1 replyHandler:(CDUnknownBlockType)arg2 onQueue:(id)arg3;
- (void)sendMessageWithPacker:(CDUnknownBlockType)arg1;
- (void)sendMessage:(id)arg1;
- (void)invalidate;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithConnection:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSCFBundle : NSObject
{
    struct __CFBundle *_cfBundle;
}

- (struct __CFBundle *)cfBundle;
- (id)localizedInfoDictionary;
- (id)infoDictionary;
- (id)localizedStringForKey:(id)arg1 value:(id)arg2 table:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
- (id)_pathsForResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
- (id)pathForResource:(id)arg1 ofType:(id)arg2;
- (id)bundlePath;
- (id)bundleIdentifier;
- (id)executablePath;
- (id)description;
- (void)dealloc;
- (id)initWithCFBundle:(struct __CFBundle *)arg1;
- (id)initWithPath:(id)arg1;

@end

@interface BSColor : NSObject <NSCopying, NSSecureCoding, BSXPCCoding>
{
    double _red;
    double _green;
    double _blue;
    double _alpha;
}

+ (_Bool)supportsSecureCoding;
+ (id)colorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpha:(double)arg4;
@property(readonly, nonatomic) double alpha; // @synthesize alpha=_alpha;
@property(readonly, nonatomic) double blue; // @synthesize blue=_blue;
@property(readonly, nonatomic) double green; // @synthesize green=_green;
@property(readonly, nonatomic) double red; // @synthesize red=_red;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqualToColor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface BSCopyingCacheSet : NSObject
{
    NSMutableSet *_mutable;
    NSSet *_immutable;
}

- (id)description;
@property(readonly) unsigned long long count;
- (id)immutableSet;
- (_Bool)containsObject:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;

@end

@interface BSDescriptionBuilder : NSObject
{
    NSObject *_object;
    NSMutableString *_description;
}

+ (id)descriptionForObject:(id)arg1 withObjectsAndNames:(id)arg2;
+ (id)descriptionForObject:(id)arg1;
+ (id)builderWithObject:(id)arg1;
+ (id)nameObjectSeparator;
+ (id)componentSeparator;
- (id)build;
- (id)appendString:(id)arg1;
- (void)tryAppendKey:(id)arg1;
- (id)appendKeys:(id)arg1;
- (id)appendKey:(id)arg1;
- (id)appendObjectsAndNames:(id)arg1 args:(struct __va_list_tag [1])arg2;
- (id)appendObjectsAndNames:(id)arg1;
- (id)appendRect:(struct CGRect)arg1 withName:(id)arg2;
- (id)appendSize:(struct CGSize)arg1 withName:(id)arg2;
- (id)appendPoint:(struct CGPoint)arg1 withName:(id)arg2;
- (id)appendQueue:(id)arg1 withName:(id)arg2;
- (id)appendCString:(const char *)arg1 withName:(id)arg2;
- (id)appendSelector:(SEL)arg1 withName:(id)arg2;
- (id)appendPointer:(void *)arg1 withName:(id)arg2;
- (id)appendFloat:(double)arg1 withName:(id)arg2 decimalPrecision:(unsigned long long)arg3;
- (id)appendFloat:(double)arg1 withName:(id)arg2;
- (id)appendUnsignedInt:(int)arg1 withName:(id)arg2;
- (id)appendInt:(int)arg1 withName:(id)arg2;
- (id)appendUnsignedInteger:(unsigned long long)arg1 withName:(id)arg2;
- (id)appendInteger:(long long)arg1 withName:(id)arg2;
- (id)appendBool:(_Bool)arg1 withName:(id)arg2;
- (id)appendObject:(id)arg1 withName:(id)arg2 skipIfNil:(_Bool)arg3;
- (id)appendObject:(id)arg1 withName:(id)arg2;
- (void)dealloc;
- (id)initWithObject:(id)arg1;

@end

@interface BSDispatchSource : NSObject
{
    NSObject<OS_dispatch_source> *_source;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _invalidated;
    CDUnknownBlockType _eventHandler;
    CDUnknownBlockType _cancelHandler;
}

@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType cancelHandler; // @synthesize cancelHandler=_cancelHandler;
@property(copy, nonatomic) CDUnknownBlockType eventHandler; // @synthesize eventHandler=_eventHandler;
- (void)invalidate;
- (void)resume;
- (void)dealloc;
- (id)initWithType:(struct dispatch_source_type_s *)arg1 handle:(unsigned long long)arg2 mask:(unsigned long long)arg3 queue:(id)arg4 configureSourceBlock:(CDUnknownBlockType)arg5;

@end

@interface BSEqualsBuilder : NSObject
{
    _Bool _equal;
}

+ (id)builderWithObject:(id)arg1 ofExpectedClass:(Class)arg2;
+ (id)builder;
- (id)appendCGRect:(struct CGRect)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendCGSize:(struct CGSize)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendCGPoint:(struct CGPoint)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendCGFloat:(double)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendUnsignedInteger:(unsigned long long)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendInteger:(long long)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendBool:(_Bool)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendArray:(id)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendPointer:(void *)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendString:(id)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendObject:(id)arg1 counterpart:(CDUnknownBlockType)arg2;
- (id)appendEqualsBlocks:(CDUnknownBlockType)arg1;
- (_Bool)isEqual;
- (id)init;

@end

@interface BSEventQueue : NSObject
{
    NSHashTable *_eventQueueLocks;
    NSMutableArray *_eventQueue;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_name;
    BSEventQueueEvent *_executingEvent;
}

@property(retain, nonatomic) BSEventQueueEvent *executingEvent; // @synthesize executingEvent=_executingEvent;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void)_removeEventQueueLock:(id)arg1;
- (void)_addEventQueueLock:(id)arg1;
- (void)_noteQueueDidUnlock;
- (void)_noteQueueDidLock;
- (void)_noteWillExecuteEvent:(id)arg1;
- (void)_noteWillCancelEventsWithName:(id)arg1 count:(unsigned long long)arg2;
- (void)_noteWillPendEvents:(id)arg1 atPosition:(int)arg2;
- (_Bool)_shouldProcessEvent:(id)arg1 enqueuedDuringExecutionOfEvent:(id)arg2;
- (void)_processNextEvent;
- (_Bool)hasEventWithName:(id)arg1;
- (_Bool)hasEventWithPrefix:(id)arg1;
- (void)cancelEventsWithName:(id)arg1;
- (void)flushAllEvents;
- (void)flushPendingEvents;
- (void)flushEvents:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *pendingEvents;
- (void)relinquishLock:(id)arg1;
- (id)acquireLockForReason:(id)arg1;
- (_Bool)isLocked;
- (void)executeOrInsertEvents:(id)arg1 atPosition:(int)arg2;
- (void)executeOrInsertEvent:(id)arg1 atPosition:(int)arg2;
- (void)_executeOrPendEvents:(id)arg1 position:(int)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithName:(id)arg1 onQueue:(id)arg2;
- (id)init;

@end

@interface BSEventQueueEvent : NSObject
{
    NSString *_name;
    CDUnknownBlockType _handler;
}

+ (id)eventWithName:(id)arg1 handler:(CDUnknownBlockType)arg2;
@property(copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (_Bool)isEqualToEvent:(id)arg1;
- (void)_execute;
- (void)executeFromEventQueue;
- (void)execute;
- (id)description;
- (void)dealloc;

@end

@interface BSEventQueueLock : NSObject
{
    _Bool _relinquished;
    NSString *_reason;
    BSEventQueue *_eventQueue;
}

@property(retain, nonatomic) BSEventQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
@property(copy, nonatomic) NSString *reason; // @synthesize reason=_reason;
- (void)relinquish;
- (id)description;
- (void)dealloc;
- (id)initWithEventQueue:(id)arg1 reason:(id)arg2;

@end

@interface BSFileLogManager : NSObject <BSFileLoggerDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_loggersByName;
}

+ (id)sharedInstance;
- (void)loggerEnabledStateChanged:(id)arg1;
- (void)_queue_enableOrDisableLoggerIfNecessary:(id)arg1;
- (void)_queue_addLogger:(id)arg1;
- (_Bool)_queue_isClass:(Class)arg1 aKindOfClass:(Class)arg2;
- (void)_queue_loadFileLoggers;
- (void)flush;
- (void)reloadFromDefaults;
- (id)loggerForName:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSFileLogger : NSObject <BSLogging>
{
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_logPath;
    NSMutableArray *_recentLogs;
    NSMutableSet *_enabledCategories;
    NSDateFormatter *_memoryLogDateFormatter;
    _Bool _enabledByPreference;
    id <BSFileLoggerDelegate> _delegate;
}

@property(nonatomic) id <BSFileLoggerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void)logWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
- (void)logWithFormat:(id)arg1;
- (void)_queue_appendLogForCategory:(id)arg1 withFormat:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (_Bool)_queue_isEnabledForCategory:(id)arg1;
- (void)_appendLogForCategory:(id)arg1 withFormat:(id)arg2 arguments:(struct __va_list_tag [1])arg3;
- (void)_setEnabled:(_Bool)arg1 fromDefaults:(_Bool)arg2;
- (void)_disableLogCategory:(id)arg1;
- (void)_enableLogCategory:(id)arg1;
- (void)_setEnabled:(_Bool)arg1;
@property(readonly, nonatomic) _Bool shouldEnableOnInternalBuilds;
@property(readonly, nonatomic) NSString *logPreferenceDomain;
@property(readonly, nonatomic) NSString *logPreferenceName;
@property(readonly, nonatomic) unsigned long long maxLogLinesInMemory;
@property(readonly, nonatomic) int maxLogSize;
@property(readonly, nonatomic) int maxLogCount;
@property(readonly, nonatomic) unsigned long long logDestinations;
@property(readonly, nonatomic) NSString *logPath;
- (_Bool)saveRecentLogsToTemporaryPath:(id *)arg1;
- (id)recentLogs;
- (void)willBeginLoggingToPath:(id)arg1;
- (id)composedLogForCategory:(id)arg1 destination:(unsigned long long)arg2 format:(id)arg3 arguments:(struct __va_list_tag [1])arg4;
- (id)logPrefixForCategory:(id)arg1 destination:(unsigned long long)arg2;
- (void)reloadFromDefaults;
- (id)loggerForCatagory:(id)arg1;
- (_Bool)isEnabledForCategory:(id)arg1;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic, getter=isEnabled) _Bool enabled;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSFuture : NSObject <BSFuture>
{
    NSConditionLock *_stateLock;
    id _result;
    NSError *_error;
    NSMutableArray *_completionBlocks;
}

- (void)_flushCompletionBlocks;
- (void)_addCompletionBlock:(CDUnknownBlockType)arg1;
- (void)addFailureBlock:(CDUnknownBlockType)arg1;
- (void)addSuccessBlock:(CDUnknownBlockType)arg1;
- (_Bool)_nts_isFinished;
- (_Bool)finishWithError:(id)arg1;
- (_Bool)finishWithResult:(id)arg1;
- (_Bool)finishWithResult:(id)arg1 error:(id)arg2;
- (void)didCancel;
- (_Bool)cancel;
@property(readonly, getter=isCancelled) _Bool cancelled;
@property(readonly, getter=isFinished) _Bool finished;
- (id)resultBeforeDate:(id)arg1 error:(id *)arg2;
- (id)result:(id *)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSHashBuilder : NSObject
{
    unsigned long long _hash;
}

+ (id)builder;
- (void)_append:(unsigned long long)arg1;
- (id)appendRect:(struct CGRect)arg1;
- (id)appendSize:(struct CGSize)arg1;
- (id)appendPoint:(struct CGPoint)arg1;
- (id)appendCGFloat:(double)arg1;
- (id)appendFloat:(float)arg1;
- (id)appendDouble:(double)arg1;
- (id)appendUnsignedInteger:(unsigned long long)arg1;
- (id)appendInteger:(long long)arg1;
- (id)appendBool:(_Bool)arg1;
- (id)appendArray:(id)arg1;
- (id)appendPointer:(void *)arg1;
- (id)appendObject:(id)arg1;
- (id)appendHashingBlocks:(CDUnknownBlockType)arg1;
- (unsigned long long)hash;
- (id)init;

@end

@interface BSLaunchdUtilities : NSObject
{
}

+ (void)deleteAllJobsWithLabelPrefix:(id)arg1;
+ (id)allJobLabels;
+ (unsigned long long)lastExitReasonForLabel:(id)arg1;
+ (id)labelForPID:(int)arg1;
+ (int)pidForLabel:(id)arg1;
+ (_Bool)startJobWithLabel:(id)arg1;
+ (void)deleteJobWithLabel:(id)arg1;
+ (_Bool)stopJobWithLabel:(id)arg1;
+ (id)currentJobLabel;
+ (_Bool)createJobWithLabel:(id)arg1 bundleIdentifier:(id)arg2 path:(id)arg3 containerPath:(id)arg4 arguments:(id)arg5 environment:(id)arg6 standardOutputPath:(id)arg7 standardErrorPath:(id)arg8 machServices:(id)arg9 threadPriority:(long long)arg10 waitForDebugger:(_Bool)arg11 denyCreatingOtherJobs:(_Bool)arg12 runAtLoad:(_Bool)arg13 disableASLR:(_Bool)arg14 systemApp:(_Bool)arg15;

@end

@interface BSMIGServer : NSObject
{
    NSString *_portName;
    unsigned int _port;
    struct _opaque_pthread_t {
        long long _field1;
        struct __darwin_pthread_handler_rec *_field2;
        char _field3[8176];
    } *_thread;
    struct mig_subsystem *_subsystem;
    struct __CFRunLoopObserver *_entryObserver;
    struct __CFRunLoopObserver *_exitObserver;
}

- (void)_installAutoreleasePoolsIfNecessaryForMode:(struct __CFString *)arg1;
- (unsigned int)_createPortNamed:(id)arg1;
- (void *)_start;
- (void)setThreadName:(id)arg1;
@property(readonly, nonatomic) NSString *threadName;
@property(nonatomic) int threadPriority;
- (unsigned int)port;
- (void)dealloc;
- (id)init;
- (id)initWithPortName:(id)arg1 subsystem:(struct mig_subsystem *)arg2 separateThread:(_Bool)arg3;

@end

@interface BSMachPort : NSObject <NSCopying, BSXPCCoding>
{
    unsigned int _port;
    unsigned long long _sendRights;
    unsigned long long _recvRights;
    _Bool _invalidated;
    unsigned int _portNumber;
    NSString *_debugDescription;
}

+ (id)bootstrapLookUpPortWithName:(id)arg1;
+ (id)taskNamePortForPID:(int)arg1;
+ (id)wrapSendRight:(unsigned int)arg1;
+ (id)createReceiveRight;
+ (id)createSendRight;
@property(readonly, nonatomic) unsigned int port; // @synthesize port=_port;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)invalidate;
- (_Bool)isUsable;
- (void)_addRight:(int)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithSendRight:(unsigned int)arg1 assumeOwnership:(_Bool)arg2;
- (id)initWithSendRight:(unsigned int)arg1;
- (id)initWithPort:(unsigned int)arg1 withRights:(CDUnknownBlockType)arg2;
- (id)initWithRight:(int)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSMachSendRight : BSMachPort
{
}

- (unsigned int)sendRight;

@end

@interface BSMutableAnimationSettings : BSAnimationSettings
{
}

+ (id)settingsWithDuration:(double)arg1 delay:(double)arg2 timingFunction:(id)arg3;
+ (id)settingsWithDuration:(double)arg1 delay:(double)arg2;
+ (id)settingsWithDuration:(double)arg1 timingFunction:(id)arg2;
+ (id)settingsWithDuration:(double)arg1;
@property(nonatomic) double frameInterval;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction;
@property(nonatomic) double delay;
@property(nonatomic) double duration;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface BSSettings : NSObject <NSCopying, NSMutableCopying, BSXPCCoding>
{
    id <BSSettingDescriptionProvider> _descriptionProvider;
    NSMapTable *_settingToFlagMap;
    NSMapTable *_settingToObjectMap;
}

@property(nonatomic) __weak id <BSSettingDescriptionProvider> descriptionProvider; // @synthesize descriptionProvider=_descriptionProvider;
- (id)_valueDescriptionForFlag:(long long)arg1 object:(id)arg2 ofSetting:(unsigned long long)arg3;
- (id)_keyDescriptionForSetting:(unsigned long long)arg1;
- (void)_setObject:(id)arg1 forSetting:(unsigned long long)arg2;
- (void)_setFlag:(long long)arg1 forSetting:(unsigned long long)arg2;
- (void)_applyToSettings:(id)arg1;
- (void)_enumerateSettingsInMap:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)_newMapTable;
- (void)_enumerateSettingsForObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)_enumerateSettingsForFlagsWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *description;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (id)basicDescriptionWithPrefix:(id)arg1;
- (id)allSettings;
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1;
- (id)objectForSetting:(unsigned long long)arg1;
- (void)enumerateFlagsWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)boolForSetting:(unsigned long long)arg1;
- (long long)flagForSetting:(unsigned long long)arg1;
- (_Bool)isEmpty;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface BSMutableSettings : BSSettings
{
}

- (void)applySettings:(id)arg1;
- (void)setObject:(id)arg1 forSetting:(unsigned long long)arg2;
- (void)setFlag:(long long)arg1 forSetting:(unsigned long long)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface BSSpringAnimationSettings : BSAnimationSettings
{
    double _mass;
    double _stiffness;
    double _damping;
    double _epsilon;
    _Bool _hasCalculatedDuration;
}

+ (_Bool)supportsSecureCoding;
+ (id)settingsWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 epsilon:(double)arg4 delay:(double)arg5 timingFunction:(id)arg6;
+ (id)settingsWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 epsilon:(double)arg4 timingFunction:(id)arg5;
+ (id)settingsWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 timingFunction:(id)arg4;
+ (id)settingsWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 epsilon:(double)arg4;
+ (id)settingsWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (void)_setEpsilon:(double)arg1;
- (void)_setDamping:(double)arg1;
- (void)_setStiffness:(double)arg1;
- (void)_setMass:(double)arg1;
- (_Bool)isSpringAnimation;
- (_Bool)_hasCalculatedDuration;
- (void)_setTimingFunction:(id)arg1;
- (void)_setDuration:(double)arg1;
- (double)duration;
@property(readonly, nonatomic) double epsilon;
@property(readonly, nonatomic) double damping;
@property(readonly, nonatomic) double stiffness;
@property(readonly, nonatomic) double mass;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)mutableCopyWithZone:(struct _NSZone *)arg1;
- (id)_initWithDuration:(double)arg1 delay:(double)arg2 frameInterval:(double)arg3 timingFunction:(id)arg4;
- (id)_initWithMass:(double)arg1 stiffness:(double)arg2 damping:(double)arg3 epsilon:(double)arg4 delay:(double)arg5 frameInterval:(double)arg6 timingFunction:(id)arg7;

@end

@interface BSMutableSpringAnimationSettings : BSSpringAnimationSettings
{
}

@property(nonatomic) double epsilon;
@property(nonatomic) double damping;
@property(nonatomic) double stiffness;
@property(nonatomic) double mass;
@property(retain, nonatomic) CAMediaTimingFunction *timingFunction;
@property(nonatomic) double frameInterval;
@property(nonatomic) double delay;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface BSPlatform : NSObject
{
    NSString *_productVersion;
    NSString *_productBuildVersion;
    NSString *_productHardwareModel;
    NSString *_productType;
    NSString *_productClass;
    NSString *_uniqueDeviceIdentifier;
    NSString *_localizedProductName;
    _Bool _hasGasGauge;
    _Bool _isInternalInstall;
    _Bool _isMultiCore;
}

+ (id)sharedInstance;
@property(readonly, nonatomic, getter=isMultiCore) _Bool multiCore; // @synthesize multiCore=_isMultiCore;
@property(readonly, nonatomic, getter=isInternalInstall) _Bool internalInstall; // @synthesize internalInstall=_isInternalInstall;
@property(readonly, nonatomic) _Bool hasGasGauge; // @synthesize hasGasGauge=_hasGasGauge;
@property(readonly, copy, nonatomic) NSString *localizedProductName; // @synthesize localizedProductName=_localizedProductName;
@property(readonly, copy, nonatomic) NSString *uniqueDeviceIdentifier; // @synthesize uniqueDeviceIdentifier=_uniqueDeviceIdentifier;
@property(readonly, copy, nonatomic) NSString *productClass; // @synthesize productClass=_productClass;
@property(readonly, copy, nonatomic) NSString *productType; // @synthesize productType=_productType;
@property(readonly, copy, nonatomic) NSString *productHardwareModel; // @synthesize productHardwareModel=_productHardwareModel;
@property(readonly, copy, nonatomic) NSString *productBuildVersion; // @synthesize productBuildVersion=_productBuildVersion;
@property(readonly, copy, nonatomic) NSString *productVersion; // @synthesize productVersion=_productVersion;
- (void)dealloc;
- (id)init;

@end

@interface BSPortDeathWatcher : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    BSDispatchSource *_source;
    BSMachSendRight *_sendRight;
    CDUnknownBlockType _handler;
}

@property(readonly, copy, nonatomic) BSMachSendRight *sendRight; // @synthesize sendRight=_sendRight;
- (void)invalidate;
- (void)queue_handlePortDeathEvent;
- (void)dealloc;
- (id)initWithSendRight:(id)arg1 queue:(id)arg2 deathHandler:(CDUnknownBlockType)arg3;
- (id)initWithPort:(unsigned int)arg1 queue:(id)arg2 deathHandler:(CDUnknownBlockType)arg3;

@end

@interface BSProcessDeathWatcher : NSObject
{
    BSDispatchSource *_source;
    CDUnknownBlockType _deathHandler;
}

- (void)invalidate;
- (void)dealloc;
- (id)initWithPID:(int)arg1 queue:(id)arg2 deathHandler:(CDUnknownBlockType)arg3;

@end

@interface BSSerializedRequestQueue : NSObject
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    CDUnknownBlockType _conditionBlock;
}

@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
- (void)_enqueueSerialConditionalRequest:(CDUnknownBlockType)arg1;
- (void)enqueueAsyncRequest:(CDUnknownBlockType)arg1;
- (void)enqueueRequest:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithSerialQueue:(id)arg1 workQueue:(id)arg2 executionCondition:(CDUnknownBlockType)arg3;

@end

@interface BSSettingsDiff : NSObject <NSCopying, BSXPCCoding>
{
    id <BSSettingDescriptionProvider> _descriptionProvider;
    BSMutableSettings *_changes;
    NSHashTable *_flagRemovals;
    NSHashTable *_objectRemovals;
}

+ (id)_newHashTableWithInitialCapacity:(unsigned long long)arg1;
+ (id)diffFromSettings:(id)arg1 toSettings:(id)arg2;
@property(readonly, copy) NSString *description;
- (unsigned long long)_diffTypesForSetting:(unsigned long long)arg1;
- (id)allSettings;
- (void)_enumerateSettingsInTable:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)descriptionOfSettingsWithMultilinePrefix:(id)arg1 providerBlock:(CDUnknownBlockType)arg2;
- (void)inspectChangesWithBlock:(CDUnknownBlockType)arg1;
- (void)applyToSettings:(id)arg1;
- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)init;
- (id)_initWithChanges:(id)arg1 flagRemovals:(id)arg2 objectRemovals:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSSignal : NSObject
{
    _Bool _signalled;
}

- (void)reset;
- (_Bool)hasBeenSignalled;
- (void)signal;
- (id)init;

@end

@interface BSStackFrameInfo : NSObject
{
    NSString *_realFunctionName;
    unsigned long long _address;
    NSString *_functionName;
    NSString *_executableName;
    NSString *_className;
}

@property(readonly, retain, nonatomic) NSString *className; // @synthesize className=_className;
@property(readonly, retain, nonatomic) NSString *executableName; // @synthesize executableName=_executableName;
@property(readonly, retain, nonatomic) NSString *functionName; // @synthesize functionName=_functionName;
@property(readonly, nonatomic) unsigned long long address; // @synthesize address=_address;
- (id)description;
- (void)dealloc;
- (id)initWithReturnAddress:(unsigned long long)arg1;

@end

@interface BSTimer : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _handler;
    BSDispatchSource *_source;
    double _fireInterval;
    double _repeatInterval;
    double _leewayInterval;
}

+ (id)scheduledTimerWithFireInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)cancel;
- (void)schedule;
- (void)dealloc;
- (id)initWithFireInterval:(double)arg1 repeatInterval:(double)arg2 leewayInterval:(double)arg3 queue:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (id)initWithFireInterval:(double)arg1 queue:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface BSTransaction : NSObject <BSWatchdogProviding>
{
    BSTransaction *_parentTransaction;
    NSMutableSet *_lifeAssertions;
    _Bool _failed;
    _Bool _interrupted;
    unsigned long long _state;
    NSString *_failureReason;
    NSDate *_startTime;
    NSMutableDictionary *_milestonesToHandlers;
    NSMutableArray *_childTransactions;
    NSMutableSet *_milestones;
    NSHashTable *_observers;
    NSMutableArray *_auditHistory;
    _Bool _buildAuditHistory;
    id <BSLogging> _debugLogger;
    CDUnknownBlockType _completionBlock;
}

@property(readonly, nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) BSTransaction *parentTransaction; // @synthesize parentTransaction=_parentTransaction;
@property(readonly, nonatomic, getter=isFailed) _Bool failed; // @synthesize failed=_failed;
- (void)_debugLogWithFormat:(id)arg1;
- (id)_loggingProem;
- (id)_stringForInterruptReason:(id)arg1;
- (id)_stringForMilestones:(id)arg1;
- (id)_stringForState:(unsigned long long)arg1;
- (void)_addAuditHistory:(id)arg1;
- (double)watchdogTimeout;
- (_Bool)shouldWatchdog:(id *)arg1;
- (void)_removeLifeAssertion:(id)arg1;
- (void)_addLifeAssertion:(id)arg1;
- (void)_preventTransactionCompletionForReason:(id)arg1 andExecuteBlock:(CDUnknownBlockType)arg2;
- (void)_notifyObserversOfCompletion;
- (_Bool)_areChildTransactionsComplete;
- (void)_checkAndReportIfCompleted;
- (void)_interruptWithReason:(id)arg1 force:(_Bool)arg2;
- (void)_forceInterrupt;
- (void)_noteCompleted;
- (void)_failNow;
- (_Bool)_removeMilestones:(id)arg1 ignoringAuditHistory:(_Bool)arg2;
- (void)_enumerateChildTransactionsWithBlock:(CDUnknownBlockType)arg1;
- (void)_removeChildTransaction:(id)arg1;
- (void)_addChildTransaction:(id)arg1;
- (void)_setParentTransaction:(id)arg1 assertIfNecessary:(_Bool)arg2;
- (void)_setParentTransaction:(id)arg1;
- (id)_parentTransaction;
- (unsigned long long)_state;
- (void)_setState:(unsigned long long)arg1;
- (void)_noteTransactionStateInAuditHistory;
- (id)_descriptionForDebugging:(_Bool)arg1 indentLevel:(unsigned long long)arg2;
- (void)_noteChildTransactionCompleted:(id)arg1;
- (_Bool)_isParentTransactionComplete;
- (_Bool)_isRootTransactionComplete;
- (_Bool)_isRootTransaction;
- (id)debugLogger;
- (void)setDebugLogger:(id)arg1;
- (id)_customizedDescriptionProperties;
- (id)auditHistory;
- (_Bool)buildAuditHistory;
- (void)setBuildAuditHistory:(_Bool)arg1;
- (void)_childTransactionDidComplete:(id)arg1;
- (void)_didRemoveChildTransaction:(id)arg1;
- (void)_willRemoveChildTransaction:(id)arg1;
- (void)_didAddChildTransaction:(id)arg1;
- (void)_willAddChildTransaction:(id)arg1;
- (void)_evaluateCompletion;
- (_Bool)_shouldComplete;
- (void)_didComplete;
- (void)_willFailWithReason:(id)arg1;
- (void)_didInterruptWithReason:(id)arg1;
- (void)_willInterruptWithReason:(id)arg1;
- (void)_didSatisfyMilestone:(id)arg1;
- (void)_didBegin;
- (void)_begin;
- (void)_willBegin;
- (_Bool)_canBeInterrupted;
- (void)_enumerateObserversWithBlock:(CDUnknownBlockType)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)listenForSatisfiedMilestone:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (void)evaluateMilestone:(id)arg1 withEvaluator:(CDUnknownBlockType)arg2;
- (void)satisfyMilestone:(id)arg1;
- (_Bool)isWaitingForMilestone:(id)arg1;
- (void)removeAllMilestones;
- (_Bool)removeMilestones:(id)arg1;
- (_Bool)removeMilestone:(id)arg1;
- (void)addMilestones:(id)arg1;
- (void)addMilestone:(id)arg1;
- (void)failWithReason:(id)arg1;
- (void)interruptWithReason:(id)arg1;
- (void)interrupt;
@property(copy, nonatomic) CDUnknownBlockType completionBlock;
@property(readonly, nonatomic, getter=isInterruptable) _Bool interruptable;
@property(readonly, nonatomic, getter=isInterrupted) _Bool interrupted;
@property(readonly, nonatomic, getter=isComplete) _Bool complete;
@property(readonly, nonatomic, getter=isRunning) _Bool running;
- (void)begin;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)removeAllChildTransactions;
- (void)removeChildTransaction:(id)arg1;
- (void)removeAllChildTransactionsOfClass:(Class)arg1;
- (id)childTransactionsOfClass:(Class)arg1;
- (_Bool)hasChildTransactionsOfClass:(Class)arg1;
- (void)addChildTransaction:(id)arg1;
@property(readonly, retain, nonatomic) NSArray *childTransactions;
@property(readonly, retain, nonatomic) NSSet *milestones;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSTransactionAuditHistoryItem : NSObject
{
    NSDate *_date;
    NSString *_category;
    NSString *_description;
}

+ (id)itemWithDescriptionWithFormat:(id)arg1;
+ (id)itemWithDescription:(id)arg1;
- (id)_timeFormatter;
- (id)description;
- (void)dealloc;
- (id)initWithDescription:(id)arg1;

@end

@interface BSUIApplicationSupport : NSObject
{
}

+ (id)UIRemoteApplicationPortNameForBundleID:(id)arg1;
+ (id)GSEventPortNameForBundleID:(id)arg1;
+ (id)generateLaunchJobLabelForBundleID:(id)arg1;

@end

@interface BSWatchdog : NSObject
{
    id <BSWatchdogDelegate> _delegate;
    id <BSWatchdogProviding> _provider;
    NSObject<OS_dispatch_queue> *_queue;
    double _timeout;
    BSTimer *_timer;
    CDUnknownBlockType _completion;
    NSDate *_startDate;
    _Bool _invalidated;
    _Bool _completed;
    _Bool _hasFired;
}

@property(readonly, nonatomic, getter=hasFired) _Bool fired; // @synthesize fired=_hasFired;
@property(readonly, retain, nonatomic) NSDate *startDate; // @synthesize startDate=_startDate;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, retain, nonatomic) id <BSWatchdogProviding> provider; // @synthesize provider=_provider;
@property(retain, nonatomic) id <BSWatchdogDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_stageTwoTimerFired;
- (void)_stageOneTimerFired;
- (void)_startWatchdogTimer;
- (void)_setupTimerWithInterval:(double)arg1 handler:(CDUnknownBlockType)arg2;
- (void)_invalidateTimer;
- (void)_completeWatchdogAfterFiring:(_Bool)arg1;
- (void)_watchdogTimerFired;
- (void)invalidate;
- (void)start;
- (id)description;
- (void)dealloc;
- (id)initWithTimeout:(double)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithTimeout:(double)arg1 queue:(id)arg2;
- (id)initWithProvider:(id)arg1 queue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithProvider:(id)arg1 queue:(id)arg2;

@end

@interface BSXPCCodingArray : NSObject <NSFastEnumeration, BSXPCCoding>
{
    NSArray *_array;
}

- (void)encodeWithXPCDictionary:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (unsigned long long)count;
- (void)dealloc;
- (id)initWithArray:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface BSXPCConnectionListener : NSObject
{
    NSObject<OS_xpc_object> *_connection;
    id <BSXPCConnectionListenerHandler> _handler;
    NSString *_service;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(readonly) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, copy) NSString *service; // @synthesize service=_service;
@property(readonly, retain) id <BSXPCConnectionListenerHandler> handler; // @synthesize handler=_handler;
- (id)description;
- (void)invalidate;
- (void)dealloc;
- (id)initWithConnection:(id)arg1 forService:(id)arg2 withHandler:(id)arg3 onQueue:(id)arg4;

@end

@interface BSXPCConnectionListenerManager : NSObject
{
    NSObject<OS_dispatch_queue> *_listeningQueue;
    NSMutableDictionary *_services;
    NSLock *_servicesLock;
    NSObject<OS_dispatch_queue> *_defaultHandlerQueue;
}

+ (void)stopListeningForService:(id)arg1;
+ (void)listenForService:(id)arg1 onQueue:(id)arg2 withHandler:(id)arg3;
+ (id)defaultHandlerQueue;
+ (id)sharedInstance;
- (void)_removeService:(id)arg1;
- (void)_addService:(id)arg1 withHandler:(id)arg2 onQueue:(id)arg3;
- (id)_defaultHandlerQueue;
- (void)dealloc;
- (id)_init;
- (id)init;

@end

@interface BSXPCMessage : NSObject
{
    NSObject<OS_xpc_object> *_message;
    CDUnknownBlockType _replyHandler;
    NSObject<OS_dispatch_queue> *_replyQueue;
}

+ (id)messageWithPacker:(CDUnknownBlockType)arg1 replyHandler:(CDUnknownBlockType)arg2 replyQueue:(id)arg3;
+ (id)message:(long long)arg1 withPacker:(CDUnknownBlockType)arg2 replyHandler:(CDUnknownBlockType)arg3 replyQueue:(id)arg4;
+ (id)message:(long long)arg1 withPacker:(CDUnknownBlockType)arg2;
+ (void)sendMessage:(long long)arg1 toConnection:(id)arg2 withMessagePacker:(CDUnknownBlockType)arg3 replyHandler:(CDUnknownBlockType)arg4 replyQueue:(id)arg5;
+ (void)sendMessageWithPacker:(CDUnknownBlockType)arg1 toConnection:(id)arg2 replyHandler:(CDUnknownBlockType)arg3 replyQueue:(id)arg4;
+ (void)sendMessageWithPacker:(CDUnknownBlockType)arg1 toConnection:(id)arg2;
+ (void)sendMessage:(long long)arg1 toConnection:(id)arg2 withMessagePacker:(CDUnknownBlockType)arg3;
+ (const char *)messageTypeKey;
- (void)forcefullyInvokeReplyHandler:(id)arg1;
- (void)sendToConnection:(id)arg1;
- (void)dealloc;
- (id)initWithMessage:(long long)arg1 packer:(CDUnknownBlockType)arg2 replyHandler:(CDUnknownBlockType)arg3 replyQueue:(id)arg4;
- (id)initWithMessagePacker:(CDUnknownBlockType)arg1 replyHandler:(CDUnknownBlockType)arg2 replyQueue:(id)arg3;
- (id)initWithMessage:(id)arg1 replyHandler:(CDUnknownBlockType)arg2 replyQueue:(id)arg3;

@end

@interface BSXPCReply : NSObject
{
    NSObject<OS_xpc_object> *_message;
}

+ (id)messageWithReply:(id)arg1;
- (void)sendReply:(CDUnknownBlockType)arg1;
- (id)message;
- (long long)messageKind;
- (void)dealloc;
- (id)initWithReply:(id)arg1;

@end

@interface BSZeroingWeakReference : NSObject
{
    id _object;
    NSString *_debug;
    unsigned long long _objectAddress;
}

+ (id)referenceWithObject:(id)arg1;
- (id)object;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)init;
- (id)initWithObject:(id)arg1;

@end

@interface NSArray (BaseBoard)
- (id)bs_flatten;
- (id)bs_first:(unsigned long long)arg1;
- (id)bs_reverse;
- (id)bs_mapNoNulls:(CDUnknownBlockType)arg1;
- (id)bs_map:(CDUnknownBlockType)arg1;
- (void)bs_each:(CDUnknownBlockType)arg1;
- (id)bs_filter:(CDUnknownBlockType)arg1;
- (id)bs_firstObjectOfClassNamed:(id)arg1;
- (id)bs_firstObjectOfClass:(Class)arg1;
- (_Bool)bs_containsObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)bs_firstObjectPassingTest:(CDUnknownBlockType)arg1;
@end

@interface NSCalendar (BSTimeUtilities)
- (_Bool)date:(id)arg1 isSameYearAsDate:(id)arg2;
- (_Bool)date:(id)arg1 isSameDayAsDate:(id)arg2;
- (id)_timeOnlyComponentsForDate:(id)arg1;
- (id)_dateOnlyComponentsForDate:(id)arg1;
@end

@interface NSDate (BSTimeUtilities)
- (_Bool)isBeforeDate:(id)arg1;
- (_Bool)isAfterDate:(id)arg1;
@end

@interface NSDateComponents (BSTimeUtilities)
- (_Bool)isSameYearAsComponents:(id)arg1;
- (_Bool)isSameMonthAsComponents:(id)arg1;
- (_Bool)isSameDayAsComponents:(id)arg1;
@end

@interface NSDictionary (BaseBoard)
- (void)bs_eachValue:(CDUnknownBlockType)arg1;
- (id)bs_safeObjectForKey:(id)arg1 ofType:(Class)arg2;
@end

@interface NSError (BaseBoard)
+ (id)bs_timeoutError;
- (_Bool)bs_isTimeoutError;
- (_Bool)bs_isCancelledError;
@end

@interface NSMapTable (BaseBoard)
- (id)bs_takeObjectForKey:(id)arg1;
@end

@interface NSMutableDictionary (BaseBoard)
- (id)bs_takeObjectForKey:(id)arg1;
- (void)bs_setSafeObject:(id)arg1 forKey:(id)arg2;
@end

@interface NSObject (BaseBoard)
+ (void)bs_waitAsynchronouslyForNotification:(id)arg1 object:(id)arg2 forDuration:(double)arg3 andPerformBlock:(CDUnknownBlockType)arg4 onQueue:(id)arg5;
+ (_Bool)bs_synchronousWrapper:(CDUnknownBlockType)arg1 timeout:(double)arg2;
+ (id)bs_objectFromData:(id)arg1;
+ (id)bs_dataFromObject:(id)arg1;
- (_Bool)bs_performSynchronously:(CDUnknownBlockType)arg1 timeout:(double)arg2;
- (_Bool)bs_isPlistableType;
@end

@interface NSString (BaseBoard)
- (id)_initWithUTF8String:(const char *)arg1 maxLength:(unsigned long long)arg2;
@end

@interface _BSCategoryLogger : NSObject <BSLogging>
{
    NSString *_name;
    NSString *_category;
}

@property(retain, nonatomic) NSString *category; // @synthesize category=_category;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void)logWithFormat:(id)arg1 arguments:(struct __va_list_tag [1])arg2;
- (void)logWithFormat:(id)arg1;
- (void)dealloc;
- (id)initWithLoggerName:(id)arg1 category:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

